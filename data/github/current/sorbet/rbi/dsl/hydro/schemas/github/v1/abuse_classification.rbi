# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::AbuseClassification`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::AbuseClassification`.

class Hydro::Schemas::Github::V1::AbuseClassification
  sig do
    params(
      account: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      current_classification: T.nilable(T.any(Symbol, Integer)),
      current_queue: T.nilable(Hydro::Schemas::Github::V1::Entities::SpamQueue),
      current_spammy_reason: T.nilable(Google::Protobuf::StringValue),
      currently_deleted: T.nilable(Google::Protobuf::BoolValue),
      currently_suspended: T.nilable(Google::Protobuf::BoolValue),
      origin: T.nilable(T.any(Symbol, Integer)),
      previous_classification: T.nilable(T.any(Symbol, Integer)),
      previous_queue: T.nilable(Hydro::Schemas::Github::V1::Entities::SpamQueue),
      previous_queues: T.nilable(T.any(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V1::Entities::SpamQueue], T::Array[Hydro::Schemas::Github::V1::Entities::SpamQueue])),
      previous_spammy_reason: T.nilable(Google::Protobuf::StringValue),
      previously_suspended: T.nilable(Google::Protobuf::BoolValue),
      queue_action: T.nilable(T.any(Symbol, Integer)),
      queue_entry: T.nilable(Hydro::Schemas::Github::V1::Entities::SpamQueueEntry),
      queued_time_in_seconds: T.nilable(Google::Protobuf::Int32Value),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext),
      rule_name: T.nilable(Google::Protobuf::StringValue),
      rule_version: T.nilable(Google::Protobuf::StringValue)
    ).void
  end
  def initialize(account: nil, actor: nil, current_classification: nil, current_queue: nil, current_spammy_reason: nil, currently_deleted: nil, currently_suspended: nil, origin: nil, previous_classification: nil, previous_queue: nil, previous_queues: T.unsafe(nil), previous_spammy_reason: nil, previously_suspended: nil, queue_action: nil, queue_entry: nil, queued_time_in_seconds: nil, request_context: nil, rule_name: nil, rule_version: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def account; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def account=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { void }
  def clear_account; end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_current_classification; end

  sig { void }
  def clear_current_queue; end

  sig { void }
  def clear_current_spammy_reason; end

  sig { void }
  def clear_currently_deleted; end

  sig { void }
  def clear_currently_suspended; end

  sig { void }
  def clear_origin; end

  sig { void }
  def clear_previous_classification; end

  sig { void }
  def clear_previous_queue; end

  sig { void }
  def clear_previous_queues; end

  sig { void }
  def clear_previous_spammy_reason; end

  sig { void }
  def clear_previously_suspended; end

  sig { void }
  def clear_queue_action; end

  sig { void }
  def clear_queue_entry; end

  sig { void }
  def clear_queued_time_in_seconds; end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_rule_name; end

  sig { void }
  def clear_rule_version; end

  sig { returns(T.any(Symbol, Integer)) }
  def current_classification; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def current_classification=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::SpamQueue)) }
  def current_queue; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::SpamQueue)).void }
  def current_queue=(value); end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def current_spammy_reason; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def current_spammy_reason=(value); end

  sig { returns(T.nilable(Google::Protobuf::BoolValue)) }
  def currently_deleted; end

  sig { params(value: T.nilable(Google::Protobuf::BoolValue)).void }
  def currently_deleted=(value); end

  sig { returns(T.nilable(Google::Protobuf::BoolValue)) }
  def currently_suspended; end

  sig { params(value: T.nilable(Google::Protobuf::BoolValue)).void }
  def currently_suspended=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def origin; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def origin=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def previous_classification; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def previous_classification=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::SpamQueue)) }
  def previous_queue; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::SpamQueue)).void }
  def previous_queue=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V1::Entities::SpamQueue]) }
  def previous_queues; end

  sig { params(value: Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V1::Entities::SpamQueue]).void }
  def previous_queues=(value); end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def previous_spammy_reason; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def previous_spammy_reason=(value); end

  sig { returns(T.nilable(Google::Protobuf::BoolValue)) }
  def previously_suspended; end

  sig { params(value: T.nilable(Google::Protobuf::BoolValue)).void }
  def previously_suspended=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def queue_action; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def queue_action=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::SpamQueueEntry)) }
  def queue_entry; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::SpamQueueEntry)).void }
  def queue_entry=(value); end

  sig { returns(T.nilable(Google::Protobuf::Int32Value)) }
  def queued_time_in_seconds; end

  sig { params(value: T.nilable(Google::Protobuf::Int32Value)).void }
  def queued_time_in_seconds=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def rule_name; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def rule_name=(value); end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def rule_version; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def rule_version=(value); end
end
