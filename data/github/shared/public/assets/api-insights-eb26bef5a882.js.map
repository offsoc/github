{"version":3,"file":"api-insights-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/api-insights/App.module.css","ui/packages/api-insights/App.tsx","ui/packages/api-insights/hooks/UseDefaultParams.tsx","ui/packages/api-insights/components/StatCard.tsx","ui/packages/api-insights/components/FilterOption.tsx","ui/packages/api-insights/components/PeriodFilter.tsx","ui/packages/api-insights/components/SortButton.module.css","ui/packages/api-insights/components/SortButton.tsx","ui/packages/api-insights/components/RequestsTable.tsx","ui/packages/api-insights/routes/ApiInsights.tsx","ui/packages/api-insights/routes/Users.tsx","ui/packages/api-insights/components/BreakdownCard.tsx","ui/packages/api-insights/routes/Actors.tsx","ui/packages/api-insights/routes/Installations.tsx","ui/packages/api-insights/api-insights.ts","ui/packages/browser-history-state/browser-history-state.ts","ui/packages/is-hash-navigation/is-hash-navigation.ts","ui/packages/test-id-props/test-id-props.ts","ui/packages/use-navigate/use-navigate.ts","ui/packages/api-insights/hooks/UseReplaceSearchParams.tsx","ui/packages/github-avatar/GitHubAvatar.tsx","ui/packages/insights-sidenav/InsightsSidenav.tsx","ui/packages/react-core/JsonRoute.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"App\":\"App-module__App--t084B\"};","import type React from 'react'\nimport type {InsightsSidenavProps} from '@github-ui/insights-sidenav'\nimport {InsightsSidenavPanel} from '@github-ui/insights-sidenav'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {useDefaultParams} from './hooks/UseDefaultParams'\nimport {useEffect} from 'react'\n\nimport styles from './App.module.css'\nimport {clsx} from 'clsx'\n\nexport interface SidenavAppPayload {\n  sidenav: InsightsSidenavProps\n}\n\n/**\n * The App component is used to render content which should be present on _all_ routes within this app\n */\nexport function App(props: {children?: React.ReactNode}) {\n  const {sidenav} = useRoutePayload<SidenavAppPayload>()\n  const {setDefaultParams} = useDefaultParams()\n\n  useEffect(() => {\n    setDefaultParams()\n  }, [setDefaultParams])\n\n  return (\n    <div className=\"d-flex flex-column flex-lg-row flex-content-stretch\">\n      <InsightsSidenavPanel {...sidenav} />\n      <div className={clsx(styles.App, 'flex-1 mx-lg-auto p-4')}>{props.children}</div>\n    </div>\n  )\n}\n\ntry{ App.displayName ||= 'App' } catch {}","import {useCallback} from 'react'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {getState, replaceState} from '@github-ui/browser-history-state'\n\ntype SetDefaultParamsFunction = () => void\n\nexport interface PageParamsPayload {\n  page_params: {[key: string]: string}\n}\n\nexport function useDefaultParams(): {\n  setDefaultParams: SetDefaultParamsFunction\n} {\n  const payload = useRoutePayload<PageParamsPayload>()\n  const page_params = payload.page_params\n  return {\n    setDefaultParams: useCallback(() => {\n      if (!page_params) return\n      const params = new URLSearchParams(page_params)\n      replaceState(getState(), '', `?${params.toString()}`)\n    }, [page_params]),\n  }\n}\n","export interface StatCardProps {\n  title: string\n  stat: string\n  delimiter?: string\n  description: string\n}\n\nexport function StatCard({title, stat, description, delimiter, ...props}: StatCardProps) {\n  return (\n    <div className=\"border rounded-2 p-3 d-flex flex-column flex-1 gap-1\" {...props}>\n      <p className=\"h5 m-0\">{title}</p>\n      <p className=\"f2 m-0\">\n        {stat}\n        {delimiter && <span className=\"f3\"> / {delimiter}</span>}\n      </p>\n      <p className=\"m-0 fgColor-muted f6\">{description}</p>\n    </div>\n  )\n}\n\ntry{ StatCard.displayName ||= 'StatCard' } catch {}","import {ActionMenu, ActionList} from '@primer/react'\nimport {useReplaceSearchParams} from '../hooks/UseReplaceSearchParams'\nimport {useState, useEffect} from 'react'\nimport type {Group} from '../types/filter-types'\n\nexport interface FilterOptionProps {\n  name: string\n  group: Group\n}\n\nexport function FilterOption({name, group}: FilterOptionProps) {\n  const {replaceSearchParams} = useReplaceSearchParams()\n  const {selected_value} = group\n  const [selected, setSelected] = useState(selected_value)\n  useEffect(() => {\n    // useState(selected_value) only uses selected_value on first render, so trigger an update if needed.\n    // The most common use case is when another filter is selected, and the current filter is\n    // reset to another default because it is an invalid combination.\n    setSelected(selected_value)\n  }, [selected_value])\n\n  const selectedItem = group.options.find(option => option.value === selected)\n\n  return (\n    <>\n      <ActionMenu>\n        <ActionMenu.Button>\n          <span className=\"fgColor-muted\">\n            {name}\n            {selectedItem && ': '}\n          </span>\n          {selectedItem && <span>{selectedItem.name}</span>}\n        </ActionMenu.Button>\n        <ActionMenu.Overlay width=\"auto\">\n          <ActionList selectionVariant=\"multiple\">\n            <ActionList.Group key={group.query_param}>\n              {group.name && <ActionList.GroupHeading>{group.name}</ActionList.GroupHeading>}\n              {group.options.map(option => {\n                return (\n                  <ActionList.Item\n                    key={option.name}\n                    selected={selected_value === option.value}\n                    disabled={option.disabled}\n                    onSelect={() => {\n                      setSelected(option.value)\n                      replaceSearchParams(group.query_param, option.value)\n                    }}\n                  >\n                    {option.name}\n                  </ActionList.Item>\n                )\n              })}\n            </ActionList.Group>\n          </ActionList>\n        </ActionMenu.Overlay>\n      </ActionMenu>\n    </>\n  )\n}\n\ntry{ FilterOption.displayName ||= 'FilterOption' } catch {}","import {ActionMenu, ActionList} from '@primer/react'\nimport {useReplaceSearchParams} from '../hooks/UseReplaceSearchParams'\nimport {useState, useEffect} from 'react'\nimport {Dialog} from '@primer/react/experimental'\nimport type {Group, Groups} from '../types/filter-types'\n\ntype StringKeyObject = {\n  [key: string]: string\n}\n\nexport interface PeriodFilterProps {\n  name: string\n  groups: Groups\n}\n\nexport function PeriodFilter({name, groups}: PeriodFilterProps) {\n  const {searchParams, replaceSearchParams} = useReplaceSearchParams()\n  const initialState = groups.reduce((prev: StringKeyObject, curr: Group) => {\n    if (curr.query_param) {\n      prev[curr.query_param] = searchParams.get(curr.query_param) || curr.selected_value\n    }\n    return prev\n  }, {})\n  const [selectedState, setSelected] = useState<StringKeyObject>(initialState)\n  const [isOpen, setIsOpen] = useState(false)\n\n  useEffect(() => {\n    // useState(initialState) only uses initialState on first render, so trigger an update if needed.\n    // The most common use case is when another filter is selected, and the current filter is\n    // reset to another default because it is an invalid combination.\n\n    // To avoid infinite updates, only trigger an update if objects are different. If state is ever\n    // updated to be nested, the comparison strategy will need to be updated.\n    const initial = JSON.stringify(initialState, Object.keys(initialState).sort())\n    const selected = JSON.stringify(selectedState, Object.keys(selectedState).sort())\n    if (initial !== selected) {\n      setSelected(initialState)\n    }\n  }, [selectedState, initialState])\n\n  if (!(groups && groups.length > 0)) return null\n  const firstGroup = groups[0]\n  if (!firstGroup) return null\n  const selectedItem = firstGroup.options.find(option => option.value === selectedState[firstGroup.query_param])\n\n  return (\n    <>\n      {isOpen && (\n        <Dialog\n          title=\"Custom range\"\n          onClose={() => {\n            setIsOpen(false)\n          }}\n        />\n      )}\n      <ActionMenu>\n        <ActionMenu.Button>\n          <span className=\"fgColor-muted\">\n            {name}\n            {selectedItem && ': '}\n          </span>\n          {selectedItem && <span>{selectedItem.name}</span>}\n        </ActionMenu.Button>\n        <ActionMenu.Overlay width=\"auto\">\n          <ActionList selectionVariant=\"multiple\">\n            {groups.map((group, index) => (\n              <ActionList.Group key={group.query_param}>\n                {group.name && <ActionList.GroupHeading>{group.name}</ActionList.GroupHeading>}\n                {group.options.map(option => {\n                  return (\n                    <ActionList.Item\n                      key={option.name}\n                      selected={selectedState[group.query_param] === option.value}\n                      disabled={option.disabled}\n                      onSelect={() => {\n                        if (option.is_custom) {\n                          setIsOpen(true)\n                          return\n                        }\n                        setSelected({...selectedState, [group.query_param]: option.value})\n                        replaceSearchParams(group.query_param, option.value)\n                      }}\n                    >\n                      {option.name}\n                    </ActionList.Item>\n                  )\n                })}\n                {index + 1 < groups.length && <ActionList.Divider />}\n              </ActionList.Group>\n            ))}\n          </ActionList>\n        </ActionMenu.Overlay>\n      </ActionMenu>\n    </>\n  )\n}\n\ntry{ PeriodFilter.displayName ||= 'PeriodFilter' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"sortButton\":\"SortButton-module__sortButton--ZvtAk\"};","import {SortDescIcon, SortAscIcon} from '@primer/octicons-react'\nimport {Button} from '@primer/react'\nimport {useReplaceSearchParams} from '../hooks/UseReplaceSearchParams'\n\nimport {clsx} from 'clsx'\nimport styles from './SortButton.module.css'\n\nexport interface SortButtonProps {\n  title: string\n  query_param: string\n}\n\nexport function SortButton({title, query_param}: SortButtonProps) {\n  const {searchParams, replaceSearchParams} = useReplaceSearchParams()\n  const currentValue = searchParams.get(query_param) || 'desc'\n  const currentIcon = currentValue === 'desc' ? SortDescIcon : SortAscIcon\n\n  const toggleSort = () => {\n    const value = currentValue === 'desc' ? 'asc' : 'desc'\n    replaceSearchParams(query_param, value)\n  }\n  return (\n    <Button\n      onClick={toggleSort}\n      className={clsx(styles.sortButton, 'fgColor-muted f6 px-0')}\n      trailingVisual={currentIcon}\n      variant=\"invisible\"\n    >\n      {title}\n    </Button>\n  )\n}\n\ntry{ SortButton.displayName ||= 'SortButton' } catch {}","import {useReplaceSearchParams} from '../hooks/UseReplaceSearchParams'\nimport {useState} from 'react'\nimport {TextInput, Link} from '@primer/react'\nimport {GitHubAvatar} from '@github-ui/github-avatar'\nimport {SearchIcon} from '@primer/octicons-react'\nimport {DataTable, Table} from '@primer/react/experimental'\nimport type {FilterOptionProps} from '../components/FilterOption'\nimport {SortButton} from '../components/SortButton'\nimport {FilterOption} from '../components/FilterOption'\n\nexport interface RequestsTableProps {\n  title: string\n  description: string\n  filters?: FilterOptionProps[]\n  rows: RequestTableRow[]\n  page_size: number\n  total_count: number\n  variant?: string\n  placeholder_text?: string\n  pagination_text?: string\n}\n\nexport interface RequestTableRow {\n  id: number\n  name: string\n  total_requests: string\n  rate_limited_requests: string\n  last_rate_limited: string\n  description: string\n  href?: string\n  icon_url?: string\n  square_icon?: boolean\n}\n\ntype CustomRowFunction = (row: RequestTableRow) => JSX.Element\n\nconst requestsCustomRow: CustomRowFunction = row => {\n  return (\n    <div className=\"d-flex flex-row flex-items-center gap-2\">\n      {row.icon_url && <GitHubAvatar src={row.icon_url} size={32} square={row.square_icon} />}\n      <div className=\"d-flex flex-column\">\n        <Link href={row.href || '#'} className=\"f5 text-bold fgColor-default\">\n          {row.name}\n        </Link>\n        <span className=\"f6 fgColor-muted text-normal\">{row.description}</span>\n      </div>\n    </div>\n  )\n}\nconst routesCustomRow: CustomRowFunction = row => {\n  return (\n    <div className=\"d-flex flex-column\">\n      <span className=\"f5 text-bold fgColor-default\">{row.name}</span>\n      <span className=\"f6 fgColor-muted text-normal\">{row.description}</span>\n    </div>\n  )\n}\ntype Variants = {\n  [key: string]: CustomRowFunction\n}\nconst rowVariants: Variants = {\n  requests: requestsCustomRow,\n  routes: routesCustomRow,\n}\n\nexport function RequestsTable({\n  variant = 'requests',\n  title,\n  description,\n  filters,\n  rows,\n  page_size,\n  total_count,\n  placeholder_text,\n  pagination_text,\n}: RequestsTableProps) {\n  const {searchParams, replaceSearchParams} = useReplaceSearchParams()\n  const [value, setValue] = useState('')\n  const currentPage = parseInt(searchParams.get('p') || '1', 10) - 1\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value)\n  }\n  return (\n    <div className=\"d-flex flex-column gap-3 mt-3\">\n      <div className=\"d-flex flex-column\">\n        <h3 className=\"h4 m-0\">{title}</h3>\n        <p className=\"m-0 fgColor-muted\">{description}</p>\n      </div>\n      <div className=\"d-flex flex-column flex-lg-row gap-2\">\n        <TextInput\n          aria-label={placeholder_text || 'Search'}\n          placeholder={placeholder_text || 'Search'}\n          className=\"flex-1\"\n          onKeyDown={event => {\n            // This is not a hotkey, submits the search input\n            // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n            if (event.key === 'Enter') {\n              replaceSearchParams('q', value)\n            }\n          }}\n          trailingAction={\n            <TextInput.Action\n              onClick={() => {\n                replaceSearchParams('q', value)\n              }}\n              icon={SearchIcon}\n              aria-label=\"Search\"\n              className=\"rounded-0 borderColor-default border-0 border-left\"\n            />\n          }\n          value={value}\n          onChange={handleChange}\n        />\n        {filters &&\n          filters.map(filter => {\n            return <FilterOption key={filter.group.query_param} {...filter} />\n          })}\n      </div>\n      <Table.Container>\n        <DataTable\n          aria-labelledby=\"actors\"\n          aria-describedby=\"actors-subtitle\"\n          data={rows}\n          columns={[\n            {\n              header: () => {\n                return <SortButton title=\"Name\" query_param=\"n\" />\n              },\n              rowHeader: true,\n              field: 'name',\n              renderCell: rowVariants[variant],\n            },\n            {\n              header: () => {\n                return <SortButton title=\"Total requests\" query_param=\"tr\" />\n              },\n              field: 'total_requests',\n              renderCell: row => {\n                return <span className=\"f5 px-1\">{row.total_requests}</span>\n              },\n            },\n            {\n              header: () => {\n                return <SortButton title=\"Rate-limited requests\" query_param=\"rlr\" />\n              },\n              field: 'rate_limited_requests',\n              renderCell: row => {\n                return <span className=\"f5 px-1\">{row.rate_limited_requests}</span>\n              },\n            },\n            {\n              header: () => {\n                return <SortButton title=\"Last rate limited\" query_param=\"lrl\" />\n              },\n              field: 'last_rate_limited',\n              renderCell: row => {\n                return <span className=\"f5 px-1\">{row.last_rate_limited}</span>\n              },\n            },\n          ]}\n        />\n        <Table.Pagination\n          aria-label={pagination_text || 'Pagination'}\n          pageSize={page_size}\n          totalCount={total_count}\n          defaultPageIndex={currentPage}\n          onChange={({pageIndex}) => {\n            replaceSearchParams('p', (pageIndex + 1).toString())\n          }}\n        />\n      </Table.Container>\n    </div>\n  )\n}\n\ntry{ RequestsTable.displayName ||= 'RequestsTable' } catch {}","import {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {StatCard} from '../components/StatCard'\nimport {FilterOption} from '../components/FilterOption'\nimport {PeriodFilter} from '../components/PeriodFilter'\nimport {RequestsTable} from '../components/RequestsTable'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {Suspense, lazy} from 'react'\n\nimport type {FilterOptionProps} from '../components/FilterOption'\nimport type {PeriodFilterProps} from '../components/PeriodFilter'\nimport type {RequestsTableProps} from '../components/RequestsTable'\n\nconst RequestsChart = lazy(() => import('../components/RequestsChart'))\n\nexport interface ApiInsightsPayload {\n  summary_stats: {\n    request_count: string\n    rate_limited_request_count: string\n  }\n  time_stats: {\n    request_count: Array<[number, number]>\n    rate_limited_request_count: Array<[number, number]>\n  }\n  time_filters: [PeriodFilterProps, FilterOptionProps]\n  requests_table: RequestsTableProps\n}\n\nexport function ApiInsights() {\n  const {\n    summary_stats: {request_count, rate_limited_request_count},\n    time_stats,\n    time_filters: [period_filter, interval_filter],\n    requests_table,\n  } = useRoutePayload<ApiInsightsPayload>()\n\n  return (\n    <div className=\"d-flex flex-column no-wrap gap-3\">\n      <div className=\"d-flex flex-column flex-lg-row border-bottom flex-justify-between pb-2\">\n        <h1 className=\"h3\" data-hpc {...testIdProps('api-insights-header')}>\n          API Insights\n        </h1>\n        <div className=\"d-flex gap-2\">\n          {period_filter && <PeriodFilter {...period_filter} />}\n          {interval_filter && <FilterOption {...interval_filter} />}\n        </div>\n      </div>\n      <div className=\"d-flex flex-column flex-lg-row pb-2 flex-justify-between gap-3\">\n        <StatCard\n          title=\"Total Requests\"\n          stat={request_count}\n          description=\"Amount of requests made in the selected period\"\n          {...testIdProps('total-requests')}\n        />\n        <StatCard\n          title=\"Rate-limited requests\"\n          stat={rate_limited_request_count}\n          description=\"Amount of requests that were rate-limited in the selected period\"\n          {...testIdProps('rate-limited-requests')}\n        />\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <RequestsChart\n          request_count={time_stats.request_count}\n          rate_limited_request_count={time_stats.rate_limited_request_count}\n        />\n      </Suspense>\n      <RequestsTable {...requests_table} />\n    </div>\n  )\n}\n\ntry{ RequestsChart.displayName ||= 'RequestsChart' } catch {}\ntry{ ApiInsights.displayName ||= 'ApiInsights' } catch {}","import {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {StatCard} from '../components/StatCard'\nimport {FilterOption} from '../components/FilterOption'\nimport {PeriodFilter} from '../components/PeriodFilter'\nimport {RequestsTable} from '../components/RequestsTable'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {Breadcrumbs} from '@primer/react'\nimport {Suspense, lazy} from 'react'\n\nimport type {FilterOptionProps} from '../components/FilterOption'\nimport type {PeriodFilterProps} from '../components/PeriodFilter'\nimport type {RequestsTableProps} from '../components/RequestsTable'\n\nconst RequestsChart = lazy(() => import('../components/RequestsChart'))\n\nexport interface UsersPayload {\n  breadcrumb: {\n    api_insights_base_url: string\n    username: string\n  }\n  user_stats: {\n    request_count: string\n    rate_limited_request_count: string\n    current_limit: string\n  }\n  time_stats: {\n    request_count: Array<[number, number]>\n    rate_limited_request_count: Array<[number, number]>\n  }\n  time_filters: [PeriodFilterProps, FilterOptionProps]\n  requests_table: RequestsTableProps\n}\n\nexport function Users() {\n  const {\n    breadcrumb: {api_insights_base_url, username},\n    user_stats: {request_count, rate_limited_request_count, current_limit},\n    time_stats,\n    time_filters: [period_filter, interval_filter],\n    requests_table,\n  } = useRoutePayload<UsersPayload>()\n\n  return (\n    <div className=\"d-flex flex-column no-wrap gap-3\">\n      <Breadcrumbs>\n        <Breadcrumbs.Item href={api_insights_base_url}>API</Breadcrumbs.Item>\n        <Breadcrumbs.Item selected>@{username}</Breadcrumbs.Item>\n      </Breadcrumbs>\n      <div className=\"d-flex flex-column flex-lg-row border-bottom flex-justify-between pb-2\">\n        <h1 className=\"h3\" data-hpc {...testIdProps('api-insights-header')}>\n          API Insights\n        </h1>\n        <div className=\"d-flex gap-2\">\n          {period_filter && <PeriodFilter {...period_filter} />}\n          {interval_filter && <FilterOption {...interval_filter} />}\n        </div>\n      </div>\n      <div className=\"d-flex flex-column flex-lg-row pb-2 flex-justify-between gap-3\">\n        <StatCard\n          title=\"Total Requests\"\n          stat={request_count}\n          description=\"Total amount of requests for this API client\"\n          {...testIdProps('total-requests')}\n        />\n        <StatCard\n          title=\"Rate-limited requests\"\n          stat={rate_limited_request_count}\n          description=\"Total amount of requests that were rate-limited\"\n          {...testIdProps('rate-limited-requests')}\n        />\n        <StatCard\n          title=\"Current limit\"\n          stat={current_limit}\n          delimiter=\"hour\"\n          description=\"Current limit of requests per hour\"\n          {...testIdProps('current-limit')}\n        />\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <RequestsChart\n          request_count={time_stats.request_count}\n          rate_limited_request_count={time_stats.rate_limited_request_count}\n        />\n      </Suspense>\n      <RequestsTable {...requests_table} />\n    </div>\n  )\n}\n\ntry{ RequestsChart.displayName ||= 'RequestsChart' } catch {}\ntry{ Users.displayName ||= 'Users' } catch {}","import {ProgressBar} from '@primer/react'\nimport {DotFillIcon} from '@primer/octicons-react'\n\nexport interface BreakdownCardProps {\n  title: string\n  stat: string\n  delimiter?: string\n  breakdown: number[]\n  legend: string[]\n}\n\nexport function BreakdownCard({title, stat, breakdown, legend, ...props}: BreakdownCardProps) {\n  const [this_app, other_apps] = breakdown\n  const [this_app_label, other_apps_label] = legend\n\n  return (\n    <div className=\"border rounded-2 p-3 d-flex flex-column flex-1 gap-1\" {...props}>\n      <p className=\"h5 m-0\">{title}</p>\n      <p className=\"f2 m-0\">{stat}</p>\n      <ProgressBar aria-valuenow={100}>\n        <ProgressBar.Item progress={this_app} className=\"bgColor-success-emphasis\" />\n        <ProgressBar.Item progress={other_apps} className=\"bgColor-accent-emphasis\" />\n      </ProgressBar>\n      <div className=\"gap-1 d-flex\">\n        <div>\n          <DotFillIcon size={16} className=\"fgColor-success\" />\n          <span className=\"f6 text-bold\">{this_app_label}</span>\n          <span className=\"f6 fgColor-muted ml-1\">{this_app}%</span>\n        </div>\n        <div>\n          <DotFillIcon size={16} className=\"fgColor-accent\" />\n          <span className=\"f6 text-bold\">{other_apps_label}</span>\n          <span className=\"f6 fgColor-muted ml-1\">{other_apps}%</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\ntry{ BreakdownCard.displayName ||= 'BreakdownCard' } catch {}","import {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {StatCard} from '../components/StatCard'\nimport {FilterOption} from '../components/FilterOption'\nimport {PeriodFilter} from '../components/PeriodFilter'\nimport {RequestsTable} from '../components/RequestsTable'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {Breadcrumbs, Label} from '@primer/react'\nimport {Suspense, lazy} from 'react'\nimport {BreakdownCard} from '../components/BreakdownCard'\n\nimport type {FilterOptionProps} from '../components/FilterOption'\nimport type {PeriodFilterProps} from '../components/PeriodFilter'\nimport type {RequestsTableProps} from '../components/RequestsTable'\n\nconst RequestsChart = lazy(() => import('../components/RequestsChart'))\n\nexport interface ActorsPayload {\n  breadcrumb: {\n    api_insights_base_url: string\n    username: string\n    label: string\n    actor_name: string\n  }\n  actor_stats: {\n    request_count: string\n    rate_limited_request_count: string\n    current_limit: string\n  }\n  time_stats: {\n    request_count: Array<[number, number]>\n    rate_limited_request_count: Array<[number, number]>\n  }\n  time_filters: [PeriodFilterProps, FilterOptionProps]\n  requests_table: RequestsTableProps\n}\n\nexport function Actors() {\n  const {\n    breadcrumb: {api_insights_base_url, username, label, actor_name},\n    actor_stats: {request_count, rate_limited_request_count, current_limit},\n    time_stats,\n    time_filters: [period_filter, interval_filter],\n    requests_table,\n  } = useRoutePayload<ActorsPayload>()\n\n  return (\n    <div className=\"d-flex flex-column no-wrap gap-3\">\n      <Breadcrumbs>\n        <Breadcrumbs.Item href={api_insights_base_url}>API</Breadcrumbs.Item>\n        <Breadcrumbs.Item href={`${api_insights_base_url}/users/${username}`}>@{username}</Breadcrumbs.Item>\n        <Breadcrumbs.Item selected>\n          {actor_name}\n          <Label className=\"ml-2 pl-1\">{label}</Label>\n        </Breadcrumbs.Item>\n      </Breadcrumbs>\n      <div className=\"d-flex flex-column flex-lg-row border-bottom flex-justify-between pb-2\">\n        <h1 className=\"h3\" data-hpc {...testIdProps('api-insights-header')}>\n          API Insights\n        </h1>\n        <div className=\"d-flex gap-2\">\n          {period_filter && <PeriodFilter {...period_filter} />}\n          {interval_filter && <FilterOption {...interval_filter} />}\n        </div>\n      </div>\n      <div className=\"d-flex flex-column flex-lg-row pb-2 flex-justify-between gap-3\">\n        <BreakdownCard\n          title=\"Total Requests\"\n          stat={request_count}\n          breakdown={[30, 70]}\n          legend={['This app', 'Other apps']}\n          {...testIdProps('total-requests')}\n        />\n        <StatCard\n          title=\"Rate-limited requests\"\n          stat={rate_limited_request_count}\n          description=\"Total amount of requests that were rate-limited\"\n          {...testIdProps('rate-limited-requests')}\n        />\n        <StatCard\n          title=\"Current limit\"\n          stat={current_limit}\n          delimiter=\"hour\"\n          description=\"Current limit of requests per hour\"\n          {...testIdProps('current-limit')}\n        />\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <RequestsChart\n          request_count={time_stats.request_count}\n          rate_limited_request_count={time_stats.rate_limited_request_count}\n        />\n      </Suspense>\n      <RequestsTable {...requests_table} />\n    </div>\n  )\n}\n\ntry{ RequestsChart.displayName ||= 'RequestsChart' } catch {}\ntry{ Actors.displayName ||= 'Actors' } catch {}","import {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {StatCard} from '../components/StatCard'\nimport {FilterOption} from '../components/FilterOption'\nimport {PeriodFilter} from '../components/PeriodFilter'\nimport {RequestsTable} from '../components/RequestsTable'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {Breadcrumbs} from '@primer/react'\nimport {Suspense, lazy} from 'react'\n\nimport type {FilterOptionProps} from '../components/FilterOption'\nimport type {PeriodFilterProps} from '../components/PeriodFilter'\nimport type {RequestsTableProps} from '../components/RequestsTable'\n\nconst RequestsChart = lazy(() => import('../components/RequestsChart'))\n\nexport interface InstallationsPayload {\n  breadcrumb: {\n    api_insights_base_url: string\n    name: string\n  }\n  installation_stats: {\n    request_count: string\n    rate_limited_request_count: string\n    current_limit: string\n  }\n  time_stats: {\n    request_count: Array<[number, number]>\n    rate_limited_request_count: Array<[number, number]>\n  }\n  time_filters: [PeriodFilterProps, FilterOptionProps]\n  requests_table: RequestsTableProps\n}\n\nexport function Installations() {\n  const {\n    breadcrumb: {api_insights_base_url, name},\n    installation_stats: {request_count, rate_limited_request_count, current_limit},\n    time_stats,\n    time_filters: [period_filter, interval_filter],\n    requests_table,\n  } = useRoutePayload<InstallationsPayload>()\n\n  return (\n    <div className=\"d-flex flex-column no-wrap gap-3\">\n      <Breadcrumbs>\n        <Breadcrumbs.Item href={api_insights_base_url}>API</Breadcrumbs.Item>\n        <Breadcrumbs.Item selected>{name}</Breadcrumbs.Item>\n      </Breadcrumbs>\n      <div className=\"d-flex flex-column flex-lg-row border-bottom flex-justify-between pb-2\">\n        <h1 className=\"h3\" data-hpc {...testIdProps('api-insights-header')}>\n          API Insights\n        </h1>\n        <div className=\"d-flex gap-2\">\n          {period_filter && <PeriodFilter {...period_filter} />}\n          {interval_filter && <FilterOption {...interval_filter} />}\n        </div>\n      </div>\n      <div className=\"d-flex flex-column flex-lg-row pb-2 flex-justify-between gap-3\">\n        <StatCard\n          title=\"Total Requests\"\n          stat={request_count}\n          description=\"Total amount of requests for this API client\"\n          {...testIdProps('total-requests')}\n        />\n        <StatCard\n          title=\"Rate-limited requests\"\n          stat={rate_limited_request_count}\n          description=\"Total amount of requests that were rate-limited\"\n          {...testIdProps('rate-limited-requests')}\n        />\n        <StatCard\n          title=\"Current limit\"\n          stat={current_limit}\n          delimiter=\"hour\"\n          description=\"Current limit of allowed requests per hour\"\n          {...testIdProps('current-limit')}\n        />\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <RequestsChart\n          request_count={time_stats.request_count}\n          rate_limited_request_count={time_stats.rate_limited_request_count}\n        />\n      </Suspense>\n      <RequestsTable {...requests_table} />\n    </div>\n  )\n}\n\ntry{ RequestsChart.displayName ||= 'RequestsChart' } catch {}\ntry{ Installations.displayName ||= 'Installations' } catch {}","import {App} from './App'\nimport {ApiInsights} from './routes/ApiInsights'\nimport {Users} from './routes/Users'\nimport {Actors} from './routes/Actors'\nimport {Installations} from './routes/Installations'\nimport {registerReactAppFactory} from '@github-ui/react-core/register-app'\nimport {jsonRoute} from '@github-ui/react-core/json-route'\n\nregisterReactAppFactory('api-insights', () => ({\n  App,\n  routes: [\n    jsonRoute({path: '/orgs/:org/insights/api', Component: ApiInsights}),\n    jsonRoute({path: '/orgs/:org/insights/api/users/:user', Component: Users}),\n    jsonRoute({path: '/orgs/:org/insights/api/users/:user/actors/:actor_type/:actor_id', Component: Actors}),\n    jsonRoute({path: '/orgs/:org/insights/api/installations/:installation_id', Component: Installations}),\n  ],\n}))\n","import {ssrSafeWindow, ssrSafeHistory, ssrSafeLocation} from '@github-ui/ssr-utils'\n\nlet sessionHistoryEntries: Array<{url: string; state: unknown}> = []\nlet sessionHistoryOffset = 0\nlet state: State\n\ntype State = {\n  _id: number\n  turbo?: {\n    restorationIdentifier: string\n  }\n}\n\n/*\n * Array of history entries.\n *\n * Example:\n * {\n *   0: {\n *     url: \"/\",\n *     state: { ... }.\n *   },\n *   1: {\n *     url: \"/github/github/issues/123\",\n *     state: { ... }.\n *   },\n *   2: {\n *     url: \"/github/github/issues/123#comment-4\",\n *     state: { ... }.\n *   }.\n *  }.\n */\n\nexport function getState(): State {\n  return state\n}\n\nfunction safeGetHistory() {\n  try {\n    // Clamp history.length to 0<->9007199254740991 (Number.MAX_SAFE_INTEGER isn't supported in IE)\n    return Math.min(Math.max(0, ssrSafeHistory?.length || 0) || 0, 9007199254740991)\n  } catch (e) {\n    return 0\n  }\n}\n\nfunction initializeState(): State {\n  const newState = {_id: new Date().getTime(), ...ssrSafeHistory?.state}\n  setState(newState)\n  return newState\n}\n\n// Current index into history entries stack.\nfunction position(): number {\n  return safeGetHistory() - 1 + sessionHistoryOffset\n}\n\nfunction setState(newState: State) {\n  state = newState\n\n  // Update entry at current position\n  const url = ssrSafeLocation?.href\n  sessionHistoryEntries[position()] = {url, state}\n\n  // Trim entries to match history size\n  sessionHistoryEntries.length = safeGetHistory()\n\n  // Emit public statechange\n  ssrSafeWindow?.dispatchEvent(new CustomEvent('statechange', {bubbles: false, cancelable: false}))\n}\n\n// Generate unique id for state object.\n//\n// Use a timestamp instead of a counter since ids should still be unique\n// across page loads.\nfunction uniqueId(): number {\n  return new Date().getTime()\n}\n\n// Indirection for history.pushState to support tracking URL changes.\n//\n// Would be great if there was a standard window.addEventListener('statechange') event.\nexport function pushState(oldState: State | null, title: string, url: string) {\n  // pushState drops any forward history entries\n  sessionHistoryOffset = 0\n  const newState = {_id: uniqueId(), ...oldState}\n  ssrSafeHistory?.pushState(newState, title, url)\n  setState(newState)\n}\n\n// Indirection for history.replaceState to support tracking URL changes.\n//\n// Would be great if there was a standard window.addEventListener('statechange') event.\nexport function replaceState(oldState: Record<string, unknown> | null, title: string, url: string) {\n  const newState = {...getState(), ...oldState}\n  ssrSafeHistory?.replaceState(newState, title, url)\n  setState(newState)\n}\n\nstate = initializeState()\n\nssrSafeWindow?.addEventListener(\n  'popstate',\n  function onPopstate(event: PopStateEvent) {\n    const currentState: State = event.state\n\n    if (!currentState || (!currentState._id && !currentState.turbo?.restorationIdentifier)) {\n      // Unmanaged state in history entries\n      // Or could be a hashchange pop, ignore and let hashchange handle it\n      return\n    }\n\n    // Each state has a unique restorationIdentifier provided by Turbo. We compare the id\n    // to see if we are going backwards or forwards.\n    const id = currentState.turbo?.restorationIdentifier\n    const restoreId = (sessionHistoryEntries[position() - 1]?.state as State)?.turbo?.restorationIdentifier\n\n    if (restoreId === id) {\n      sessionHistoryOffset--\n    } else {\n      sessionHistoryOffset++\n    }\n\n    setState(currentState)\n  },\n  true,\n)\n\nlet turboAction: string\n\nssrSafeWindow?.addEventListener('turbo:visit', event => {\n  if (!(event instanceof CustomEvent)) return\n\n  turboAction = event.detail.action\n})\n\n// Listen turbo navigations to reset the `sessionHistoryOffset` in case we are doing a page load\n// instead of poping a state from the history stack.\nssrSafeWindow?.addEventListener('turbo:load', () => {\n  if (turboAction === 'restore') return\n\n  sessionHistoryOffset = 0\n  // Add turbo navigations to the state stack, so we can keep it complete without `empty` entries.\n  replaceState(ssrSafeHistory?.state, '', '')\n})\n\nssrSafeWindow?.addEventListener(\n  'hashchange',\n  function onHashchange() {\n    if (safeGetHistory() > sessionHistoryEntries.length) {\n      // Forward navigation\n      const newState = {_id: uniqueId()}\n      ssrSafeHistory?.replaceState(newState, '', ssrSafeLocation.href)\n      setState(newState)\n    }\n  },\n  true,\n)\n\n// We need to reset our history state on full-page loads to prevent our state from getting out of sync with the browser's history stack.\nssrSafeWindow?.addEventListener('pageshow', () => {\n  sessionHistoryEntries = []\n  sessionHistoryOffset = 0\n})\n","// Check if the navigation is only a hash change.\nconst isHashNavigation = (currentUrl: string, targetUrl: string): boolean => {\n  const current = new URL(currentUrl, window.location.origin)\n  const target = new URL(targetUrl, window.location.origin)\n  const hasHash = target.href.includes('#')\n\n  return (\n    hasHash && current.host === target.host && current.pathname === target.pathname && current.search === target.search\n  )\n}\n\nexport default isHashNavigation\n","export interface TestIdProps {\n  /** Test ID to be queried by automated testing suites */\n  'data-testid'?: string\n}\n\nexport const testIdProps = (value: string): TestIdProps => {\n  return {'data-testid': value}\n}\n","import React, {startTransition} from 'react'\nimport {\n  createSearchParams,\n  matchRoutes,\n  resolvePath,\n  useLocation,\n  useNavigate as useReactRouterNavigate,\n  useSearchParams as useReactRouterSearchParams,\n  type NavigateOptions,\n  type To,\n  type URLSearchParamsInit,\n} from 'react-router-dom'\n\nimport isHashNavigation from '@github-ui/is-hash-navigation'\nimport {AppContext} from '@github-ui/react-core/app-context'\nimport {startSoftNav} from '@github-ui/soft-nav/state'\nimport {PREVENT_AUTOFOCUS_KEY} from '@github-ui/react-core/prevent-autofocus'\n\nexport interface NavigateOptionsWithPreventAutofocus extends NavigateOptions {\n  preventAutofocus?: boolean\n}\n\nexport const useNavigate = (): ((to: To, options?: NavigateOptionsWithPreventAutofocus) => void) => {\n  const {routes, history} = React.useContext(AppContext)\n  const reactRouterNavigate = useReactRouterNavigate()\n  return React.useCallback(\n    (to, navigateOptions = {}) => {\n      const pathname = resolvePath(to).pathname\n      const isExternalToApp = !matchRoutes(routes, pathname)\n\n      if (isExternalToApp) {\n        const href = history.createHref(to)\n        ;(async () => {\n          const {softNavigate: turboSoftNavigate} = await import('@github-ui/soft-navigate')\n          turboSoftNavigate(href)\n        })()\n      } else {\n        if (!isHashNavigation(location.href, to.toString())) {\n          startSoftNav('react')\n        }\n        const {preventAutofocus, ...options} = navigateOptions\n        startTransition(() => {\n          reactRouterNavigate(\n            to,\n            preventAutofocus\n              ? {\n                  ...options,\n                  state: {\n                    [PREVENT_AUTOFOCUS_KEY]: true,\n                    ...options.state,\n                  },\n                }\n              : options,\n          )\n          const {turbo, ...state} = window.history.state\n          window.history.replaceState({...state, skipTurbo: true}, '', location.href)\n        })\n      }\n    },\n    [history, reactRouterNavigate, routes],\n  )\n}\n\n/**\n * An implementation of `useSearchParams` that mirrors `react-router-dom`'s `useSearchParams` hook\n * but utilizes `@github-ui/useNavigate` instead of `react-router` `useNavigate` to handle updates.\n */\nexport const useSearchParams = () => {\n  const [searchParams] = useReactRouterSearchParams()\n  const navigate = useNavigate()\n  const {pathname} = useLocation()\n\n  const setSearchParams = React.useCallback<\n    (\n      nextInit?: URLSearchParamsInit | ((prev: URLSearchParams) => URLSearchParamsInit),\n      navigateOpts?: NavigateOptionsWithPreventAutofocus,\n    ) => void\n  >(\n    (nextInit, navigateOptions = {}) => {\n      const newSearchParams = createSearchParams(typeof nextInit === 'function' ? nextInit(searchParams) : nextInit)\n      navigate(\n        {\n          pathname,\n          search: newSearchParams.toString(),\n        },\n        navigateOptions,\n      )\n    },\n    [searchParams, navigate, pathname],\n  )\n\n  return [searchParams, setSearchParams] as const\n}\n","import {useSearchParams} from '@github-ui/use-navigate'\nimport {useCallback} from 'react'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport type {PageParamsPayload} from './UseDefaultParams'\n\ntype ReplaceSearchParamsFunction = (queryParam: string, value: string) => void\n\nexport function useReplaceSearchParams(): {\n  replaceSearchParams: ReplaceSearchParamsFunction\n  searchParams: URLSearchParams\n} {\n  const [searchParams, setSearchParams] = useSearchParams()\n  const payload = useRoutePayload<PageParamsPayload>()\n  const page_params = payload?.page_params\n  return {\n    replaceSearchParams: useCallback(\n      (queryParam: string, value: string) => {\n        setSearchParams(\n          oldParams => {\n            const used_params = page_params || oldParams\n            const params = new URLSearchParams(used_params)\n            params.set(queryParam, value)\n            return params\n          },\n          {\n            preventAutofocus: true, // prevents scroll/focus reset to 0\n          },\n        )\n      },\n      [setSearchParams, page_params],\n    ),\n    searchParams: new URLSearchParams(page_params || searchParams),\n  }\n}\n","import {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {\n  // eslint-disable-next-line no-restricted-imports\n  Avatar,\n  type AvatarProps,\n} from '@primer/react'\nimport {forwardRef, useMemo} from 'react'\n\nexport type GitHubAvatarProps = AvatarProps\n\nexport const GitHubAvatar = forwardRef<HTMLImageElement, GitHubAvatarProps>(function GitHubAvatar(\n  {src, size = 20, ...otherProps}: GitHubAvatarProps,\n  ref,\n) {\n  const avatarUrl = useMemo(() => {\n    // src maybe be relative, e.g. `/mona.png`, in which case the instances main origin should be used,\n    // e.g. \"https://github.com\" for dotcom. If src is a fully quallified URL then the origin argument is ignored.\n    const url = new URL(src, ssrSafeLocation.origin)\n\n    // do not override size if it's already set as query parameter\n    if (!url.searchParams.has('size') && !url.searchParams.has('s')) {\n      // we double size for better rendering on high density pixel screens\n      url.searchParams.set('size', String(Number(size) * 2))\n    }\n\n    return url.toString()\n  }, [src, size])\n\n  return <Avatar ref={ref} src={avatarUrl} size={size} data-testid=\"github-avatar\" {...otherProps} />\n})\n\ntry{ GitHubAvatar.displayName ||= 'GitHubAvatar' } catch {}","import {PlayIcon, type Icon, PackageIcon, CodeSquareIcon} from '@primer/octicons-react'\nimport {Box, Heading, Label, NavList, Octicon} from '@primer/react'\nimport {testIdProps} from '@github-ui/test-id-props'\n\nexport interface InsightsSidenavProps {\n  selectedKey?: 'dependency_insights' | 'actions_usage_metrics' | 'actions_performance_metrics' | 'api'\n  /* the show- properties are only needed when something has to be hidden at times (i.e. FF) */\n  showDependencies?: boolean\n  urls: {[key: string]: string}\n  showActionsUsageMetrics?: boolean\n  showActionsPerformanceMetrics?: boolean\n  showApi?: boolean\n}\n\nexport const InsightsSidenav = (props: InsightsSidenavProps) => {\n  const navItems: InsightsSideNavItem[] = []\n\n  const actionsUsageMetricsKey = `actions_usage_metrics`\n  props.showActionsUsageMetrics &&\n    navItems.push({\n      display: 'Actions Usage Metrics',\n      key: actionsUsageMetricsKey,\n      href: props.urls[actionsUsageMetricsKey] || '#',\n      selected: props.selectedKey === actionsUsageMetricsKey,\n      icon: PlayIcon,\n    })\n\n  const actionsPerformanceMetricsKey = `actions_performance_metrics`\n  props.showActionsPerformanceMetrics &&\n    navItems.push({\n      display: 'Actions Performance Metrics',\n      key: actionsPerformanceMetricsKey,\n      href: props.urls[actionsPerformanceMetricsKey] || '#',\n      selected: props.selectedKey === actionsPerformanceMetricsKey,\n      icon: PlayIcon,\n      beta: true,\n    })\n\n  const dependencyKey = 'dependency_insights'\n  props.showDependencies &&\n    navItems.push({\n      display: 'Dependencies',\n      key: dependencyKey,\n      href: props.urls[dependencyKey] || '#',\n      selected: props.selectedKey === dependencyKey,\n      icon: PackageIcon,\n    })\n\n  const apiKey = 'api'\n  props.showApi &&\n    navItems.push({\n      display: 'API',\n      key: apiKey,\n      href: props.urls[apiKey] || '#',\n      selected: props.selectedKey === apiKey,\n      icon: CodeSquareIcon,\n    })\n\n  return (\n    <Box sx={{p: 4}} {...testIdProps('InsightsSidenav')}>\n      <Heading as=\"h1\" sx={{fontSize: '24px', px: 3, pb: 2}}>\n        Insights\n      </Heading>\n      <NavList aria-label={'Insights navigation'}>\n        {navItems.map(item => {\n          return (\n            <NavList.Item key={item.key} href={item.href} aria-current={item.selected}>\n              <NavList.LeadingVisual>\n                <Octicon icon={item.icon} size={16} />\n              </NavList.LeadingVisual>\n              {item.display}\n              {item.beta && (\n                <NavList.TrailingVisual>\n                  <Label variant=\"success\">Beta</Label>\n                </NavList.TrailingVisual>\n              )}\n            </NavList.Item>\n          )\n        })}\n      </NavList>\n    </Box>\n  )\n}\n\nexport const InsightsSidenavPanel = (props: InsightsSidenavProps) => {\n  return (\n    <Box className=\"border-lg-right\" sx={{width: ['100%', '100%', '100%', 336]}}>\n      <InsightsSidenav {...props} />\n    </Box>\n  )\n}\n\ninterface InsightsSideNavItem {\n  key: string\n  href: string\n  display: string\n  selected?: boolean\n  icon: Icon\n  beta?: boolean\n}\n\ntry{ InsightsSidenav.displayName ||= 'InsightsSidenav' } catch {}\ntry{ InsightsSidenavPanel.displayName ||= 'InsightsSidenavPanel' } catch {}","import type {ChildRoute, LoaderResult, RouteRegistration, TransitionType} from './app-routing-types'\nimport type React from 'react'\nimport type {Location} from '@remix-run/router'\n\nexport interface JsonRouteProps {\n  path: string\n  Component: React.ComponentType\n  transitionType?: TransitionType\n  shouldNavigateOnError?: boolean\n  children?: ChildRoute[]\n}\n/**\n * A utility for building a route registration for a route that consumes a JSON object (either via embedding in a\n * script tag or via a JSON fetch on React soft navigations).\n */\nexport function jsonRoute<TRouteData, TEmbeddedData>({\n  path,\n  Component,\n  /**\n   * Some routes want to handle their own errors and not just show a generic error page. In this case,\n   * the error is just handled like any other payload for the route.\n   * NOTE: We might consider replacing the shouldNavigateOnError flag with a parallel implementation to jsonRoute.\n   */\n  shouldNavigateOnError,\n  transitionType,\n  children,\n}: JsonRouteProps): RouteRegistration<TRouteData, TEmbeddedData> {\n  async function coreLoader({location}: {location: Location}): Promise<LoaderResult<TRouteData>> {\n    let response: Response\n    try {\n      const fetchPath = `${location.pathname}${location.search}`\n      response = await window.fetch(fetchPath, {\n        headers: {\n          Accept: 'application/json',\n          'X-Requested-With': 'XMLHttpRequest',\n          'X-GitHub-Target': 'dotcom',\n          'X-React-Router': 'json',\n        },\n      })\n    } catch (error) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'fetchError'},\n      }\n    }\n    if (response.redirected) {\n      return {\n        type: 'redirect',\n        url: response.url,\n      }\n    } else if (!response.ok) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'httpError', httpStatus: response.status},\n      }\n    } else {\n      try {\n        const responseJson = await response.json()\n        return {\n          type: 'loaded',\n          data: responseJson,\n          title: responseJson.title,\n        }\n      } catch (error) {\n        return {\n          type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n          error: {type: 'badResponseError'},\n        }\n      }\n    }\n  }\n\n  function loadFromEmbeddedData({embeddedData}: {embeddedData: TEmbeddedData}): {data: TRouteData; title: string} {\n    const data = embeddedData as unknown as TRouteData & {title: string}\n    return {data, title: data.title}\n  }\n\n  return {\n    path,\n    // TODO: consider wrapping Component with a component that passes payload as a prop — ideally as part of migrating\n    // away from useRoutePayload.\n    Component,\n    coreLoader,\n    loadFromEmbeddedData,\n    transitionType,\n    children,\n  }\n}\n"],"names":["App","props","sidenav","useRoutePayload","setDefaultParams","useDefaultParams","page_params","payload","useCallback","params","URLSearchParams","replaceState","getState","toString","useEffect","div","className","InsightsSidenavPanel","clsx","styles","children","displayName","StatCard","title","stat","description","delimiter","p","span","FilterOption","name","group","replaceSearchParams","useReplaceSearchParams","selected_value","selected","setSelected","useState","selectedItem","options","find","option","value","ActionMenu","Button","Overlay","width","ActionList","selectionVariant","Group","GroupHeading","map","Item","disabled","onSelect","query_param","PeriodFilter","groups","searchParams","initialState","reduce","prev","curr","get","selectedState","isOpen","setIsOpen","JSON","stringify","Object","keys","sort","length","firstGroup","Dialog","onClose","index","is_custom","Divider","SortButton","currentValue","currentIcon","SortDescIcon","SortAscIcon","onClick","sortButton","trailingVisual","variant","rowVariants","requests","row","icon_url","GitHubAvatar","src","size","square","square_icon","Link","href","routes","RequestsTable","filters","rows","page_size","total_count","placeholder_text","pagination_text","setValue","currentPage","parseInt","h3","TextInput","aria-label","placeholder","onKeyDown","event","key","trailingAction","Action","icon","SearchIcon","onChange","target","filter","Table","Container","DataTable","aria-labelledby","aria-describedby","data","columns","header","rowHeader","field","renderCell","total_requests","rate_limited_requests","last_rate_limited","Pagination","pageSize","totalCount","defaultPageIndex","pageIndex","RequestsChart","lazy","ApiInsights","summary_stats","request_count","rate_limited_request_count","time_stats","time_filters","period_filter","interval_filter","requests_table","h1","data-hpc","testIdProps","Suspense","fallback","Users","breadcrumb","api_insights_base_url","username","user_stats","current_limit","Breadcrumbs","BreakdownCard","breakdown","legend","this_app","other_apps","this_app_label","other_apps_label","ProgressBar","aria-valuenow","progress","DotFillIcon","Actors","label","actor_name","actor_stats","Label","Installations","installation_stats","registerReactAppFactory","jsonRoute","path","Component","state","turboAction","sessionHistoryEntries","sessionHistoryOffset","safeGetHistory","Math","min","max","ssrSafeHistory","e","setState","newState","url","ssrSafeLocation","ssrSafeWindow","dispatchEvent","CustomEvent","bubbles","cancelable","uniqueId","Date","getTime","pushState","oldState","_id","initializeState","addEventListener","currentState","turbo","restorationIdentifier","id","restoreId","position","detail","action","currentUrl","targetUrl","current","URL","window","location","origin","hasHash","includes","host","pathname","search","useNavigate","history","React","AppContext","reactRouterNavigate","useReactRouterNavigate","to","navigateOptions","resolvePath","matchRoutes","isHashNavigation","startSoftNav","preventAutofocus","startTransition","PREVENT_AUTOFOCUS_KEY","skipTurbo","createHref","softNavigate","turboSoftNavigate","useSearchParams","useReactRouterSearchParams","navigate","useLocation","setSearchParams","nextInit","newSearchParams","createSearchParams","queryParam","oldParams","set","forwardRef","otherProps","ref","avatarUrl","useMemo","has","String","Number","Avatar","data-testid","InsightsSidenav","navItems","actionsUsageMetricsKey","showActionsUsageMetrics","push","display","urls","selectedKey","PlayIcon","actionsPerformanceMetricsKey","showActionsPerformanceMetrics","beta","dependencyKey","showDependencies","PackageIcon","showApi","CodeSquareIcon","Box","sx","Heading","as","fontSize","px","pb","NavList","item","aria-current","LeadingVisual","Octicon","TrailingVisual","shouldNavigateOnError","transitionType","coreLoader","response","fetchPath","fetch","headers","Accept","error","type","redirected","ok","httpStatus","status","responseJson","json","loadFromEmbeddedData","embeddedData"],"sourceRoot":""}