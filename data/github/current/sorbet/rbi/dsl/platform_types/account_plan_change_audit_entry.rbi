# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PlatformTypes::AccountPlanChangeAuditEntry`.
# Please instead update this file by running `bin/tapioca dsl PlatformTypes::AccountPlanChangeAuditEntry`.

class PlatformTypes::AccountPlanChangeAuditEntry < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(String) }
  def action; end

  sig { returns(T::Boolean) }
  def action?; end

  sig { returns(T.nilable(T.any(PlatformTypes::Bot, PlatformTypes::Organization, PlatformTypes::User))) }
  def actor; end

  sig { returns(T::Boolean) }
  def actor?; end

  sig { returns(T.nilable(Integer)) }
  def actor_database_id; end

  sig { returns(T::Boolean) }
  def actor_database_id?; end

  sig { returns(T.nilable(String)) }
  def actor_ip; end

  sig { returns(T::Boolean) }
  def actor_ip?; end

  sig { returns(T.nilable(PlatformTypes::ActorLocation)) }
  def actor_location; end

  sig { returns(T::Boolean) }
  def actor_location?; end

  sig { returns(T.nilable(String)) }
  def actor_login; end

  sig { returns(T::Boolean) }
  def actor_login?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def actor_resource_path; end

  sig { returns(T::Boolean) }
  def actor_resource_path?; end

  sig { returns(T.nilable(Integer)) }
  def actor_session_database_id; end

  sig { returns(T::Boolean) }
  def actor_session_database_id?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def actor_url; end

  sig { returns(T::Boolean) }
  def actor_url?; end

  sig { returns(T::Boolean) }
  def can_render_user_avatar; end

  sig { returns(T::Boolean) }
  def can_render_user_avatar?; end

  sig { returns(T.nilable(String)) }
  def client_id; end

  sig { returns(T::Boolean) }
  def client_id?; end

  sig { returns(T.nilable(String)) }
  def coupon; end

  sig { returns(T::Boolean) }
  def coupon?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def created_at; end

  sig { returns(T::Boolean) }
  def created_at?; end

  sig { returns(T.nilable(Integer)) }
  def data_pack_count; end

  sig { returns(T::Boolean) }
  def data_pack_count?; end

  sig { returns(T.nilable(Integer)) }
  def data_pack_count_was; end

  sig { returns(T::Boolean) }
  def data_pack_count_was?; end

  sig { returns(T::Boolean) }
  def did_plan_change; end

  sig { returns(T::Boolean) }
  def did_plan_change?; end

  sig { returns(T::Boolean) }
  def did_plan_duration_change; end

  sig { returns(T::Boolean) }
  def did_plan_duration_change?; end

  sig { returns(T::Boolean) }
  def did_pricing_change_to_per_repo; end

  sig { returns(T::Boolean) }
  def did_pricing_change_to_per_repo?; end

  sig { returns(T::Boolean) }
  def did_pricing_change_to_per_seat; end

  sig { returns(T::Boolean) }
  def did_pricing_change_to_per_seat?; end

  sig { returns(T::Boolean) }
  def did_seat_count_change; end

  sig { returns(T::Boolean) }
  def did_seat_count_change?; end

  sig { returns(T.nilable(String)) }
  def external_identity_guid; end

  sig { returns(T::Boolean) }
  def external_identity_guid?; end

  sig { returns(T.nilable(String)) }
  def external_identity_nameid; end

  sig { returns(T::Boolean) }
  def external_identity_nameid?; end

  sig { returns(T.nilable(String)) }
  def external_identity_username; end

  sig { returns(T::Boolean) }
  def external_identity_username?; end

  sig { returns(T.nilable(Integer)) }
  def filled_seat_count; end

  sig { returns(T::Boolean) }
  def filled_seat_count?; end

  sig { returns(T.nilable(String)) }
  def from; end

  sig { returns(T::Boolean) }
  def from?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(T.nilable(String)) }
  def method; end

  sig { returns(T::Boolean) }
  def method?; end

  sig { returns(T.nilable(String)) }
  def note; end

  sig { returns(T::Boolean) }
  def note?; end

  sig { returns(T.nilable(Integer)) }
  def oauth_access_database_id; end

  sig { returns(T::Boolean) }
  def oauth_access_database_id?; end

  sig { returns(T.nilable(Integer)) }
  def oauth_application_database_id; end

  sig { returns(T::Boolean) }
  def oauth_application_database_id?; end

  sig { returns(T.nilable(String)) }
  def oauth_scopes; end

  sig { returns(T::Boolean) }
  def oauth_scopes?; end

  sig { returns(T.nilable(String)) }
  def operation_type; end

  sig { returns(T::Boolean) }
  def operation_type?; end

  sig { returns(T.nilable(PlatformTypes::Organization)) }
  def organization; end

  sig { returns(T::Boolean) }
  def organization?; end

  sig { returns(T.nilable(Integer)) }
  def organization_database_id; end

  sig { returns(T::Boolean) }
  def organization_database_id?; end

  sig { returns(T.nilable(String)) }
  def organization_name; end

  sig { returns(T::Boolean) }
  def organization_name?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def organization_resource_path; end

  sig { returns(T::Boolean) }
  def organization_resource_path?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def organization_url; end

  sig { returns(T::Boolean) }
  def organization_url?; end

  sig { returns(T.nilable(String)) }
  def plan_duration; end

  sig { returns(T::Boolean) }
  def plan_duration?; end

  sig { returns(T.nilable(String)) }
  def plan_duration_was; end

  sig { returns(T::Boolean) }
  def plan_duration_was?; end

  sig { returns(T.nilable(String)) }
  def plan_name; end

  sig { returns(T::Boolean) }
  def plan_name?; end

  sig { returns(T.nilable(String)) }
  def plan_name_was; end

  sig { returns(T::Boolean) }
  def plan_name_was?; end

  sig { returns(T.nilable(Integer)) }
  def private_repository_count; end

  sig { returns(T::Boolean) }
  def private_repository_count?; end

  sig { returns(T.nilable(Integer)) }
  def public_repository_count; end

  sig { returns(T::Boolean) }
  def public_repository_count?; end

  sig { returns(T.nilable(String)) }
  def reason; end

  sig { returns(T::Boolean) }
  def reason?; end

  sig { returns(T.nilable(String)) }
  def referrer; end

  sig { returns(T::Boolean) }
  def referrer?; end

  sig { returns(T.nilable(String)) }
  def request_category; end

  sig { returns(T::Boolean) }
  def request_category?; end

  sig { returns(T.nilable(String)) }
  def request_id; end

  sig { returns(T::Boolean) }
  def request_id?; end

  sig { returns(T.nilable(T::Array[String])) }
  def scopes; end

  sig { returns(T::Boolean) }
  def scopes?; end

  sig { returns(T.nilable(Integer)) }
  def seat_count; end

  sig { returns(T::Boolean) }
  def seat_count?; end

  sig { returns(T.nilable(Integer)) }
  def seat_count_was; end

  sig { returns(T::Boolean) }
  def seat_count_was?; end

  sig { returns(T.nilable(String)) }
  def server_id; end

  sig { returns(T::Boolean) }
  def server_id?; end

  sig { returns(T.nilable(PlatformTypes::User)) }
  def staff_actor; end

  sig { returns(T::Boolean) }
  def staff_actor?; end

  sig { returns(T.nilable(Integer)) }
  def team_count; end

  sig { returns(T::Boolean) }
  def team_count?; end

  sig { returns(T.nilable(String)) }
  def terms_of_service_sha; end

  sig { returns(T::Boolean) }
  def terms_of_service_sha?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def url; end

  sig { returns(T::Boolean) }
  def url?; end

  sig { returns(T.nilable(PlatformTypes::User)) }
  def user; end

  sig { returns(T::Boolean) }
  def user?; end

  sig { returns(T.nilable(String)) }
  def user_agent; end

  sig { returns(T::Boolean) }
  def user_agent?; end

  sig { returns(T.nilable(Integer)) }
  def user_database_id; end

  sig { returns(T::Boolean) }
  def user_database_id?; end

  sig { returns(T.nilable(String)) }
  def user_login; end

  sig { returns(T::Boolean) }
  def user_login?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def user_resource_path; end

  sig { returns(T::Boolean) }
  def user_resource_path?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def user_url; end

  sig { returns(T::Boolean) }
  def user_url?; end
end
