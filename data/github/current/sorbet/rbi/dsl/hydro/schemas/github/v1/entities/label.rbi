# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::Entities::Label`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::Entities::Label`.

class Hydro::Schemas::Github::V1::Entities::Label
  sig do
    params(
      color: T.nilable(String),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      description: T.nilable(String),
      id: T.nilable(Integer),
      issue_count: T.nilable(Integer),
      label_id: T.nilable(Integer),
      name: T.nilable(String),
      name_html: T.nilable(String),
      owner_id: T.nilable(Integer),
      repository_id: T.nilable(Integer),
      updated_at: T.nilable(Google::Protobuf::Timestamp),
      url: T.nilable(String)
    ).void
  end
  def initialize(color: nil, created_at: nil, description: nil, id: nil, issue_count: nil, label_id: nil, name: nil, name_html: nil, owner_id: nil, repository_id: nil, updated_at: nil, url: nil); end

  sig { void }
  def clear_color; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_description; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_issue_count; end

  sig { void }
  def clear_label_id; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_name_html; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_updated_at; end

  sig { void }
  def clear_url; end

  sig { returns(String) }
  def color; end

  sig { params(value: String).void }
  def color=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(String) }
  def description; end

  sig { params(value: String).void }
  def description=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(Integer) }
  def issue_count; end

  sig { params(value: Integer).void }
  def issue_count=(value); end

  sig { returns(Integer) }
  def label_id; end

  sig { params(value: Integer).void }
  def label_id=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(String) }
  def name_html; end

  sig { params(value: String).void }
  def name_html=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end

  sig { returns(String) }
  def url; end

  sig { params(value: String).void }
  def url=(value); end
end
