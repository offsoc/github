<li
  class="Box-row Box-row--focus-gray px-0 mt-0"
  <%= test_selector("first-discussion-#{discussion.id}") if index == 0 %>
>
  <div class="Box-row--drag-hide position-relative" <%= test_selector("discussion-row") %>>
    <div class="d-flex flex-auto flex-items-start">
      <div class="d-flex flex-items-center">
          <% if discussion.locked? %>
            <div class="color-bg-subtle ml-3 border" style="padding: 2px 13px; margin-right: 25px; border-radius: 100px;">
              <%= render(Primer::Beta::Octicon.new(
                :"lock",
                color: :muted,
                align_items: :center,
                aria: { label: "Locked" },
                test_selector: "discussion-locked-state-#{discussion.id}"
              )) %>
            </div>
          <% else %>
            <div class="mr-3 ml-2" style="width: 62px">
              <%= render Discussions::VotesPlaceholderComponent.new(target: discussion) %>
            </div>
          <% end %>
        <div class="d-flex flex-justify-center flex-items-center bg-discussions-row-emoji-box rounded-2 flex-shrink-0" aria-hidden="true">
          <span class="d-flex flex-items-center color-fg-muted">
            <%= helpers.discussion_category_emoji_tag(discussion.category, classes: "d-flex flex-items-center f4 discussions-emoji-box") %>
          </span>
        </div>
      </div>
      <div class="d-flex flex-column flex-sm-row flex-auto">
        <div class="lh-condensed pl-2 pr-3 flex-1">
          <%= render(Primer::Beta::Heading.new(tag: header_element_name, font_size: 4)) do%>
            <%= render(Primer::Beta::Link.new(
              href: agnostic_discussion_path(discussion, org_param: org_param),
              font_size: 4,
              word_break: :break_word,
              scheme: :primary,
              display: :inline_block,
              vertical_align: :middle,
              mr: 1,
              underline: false,
              classes: "markdown-title discussion-Link--secondary",
              data: hovercard_data_attributes_for_discussion(
                repo.owner.display_login, repo.name, discussion.number
              ).merge(helpers.discussions_list_click_attrs(discussion, target: :DISCUSSION_LINK))
            )) do %>
              <%= title_markdown(discussion.title) %>
              <%= render Discussions::SpammyBadgeComponent.new(discussion_or_comment: discussion) %>
            <% end %>
          <% end %>
          <% unless current_repository %>
            <%= render(Primer::Beta::Link.new(
              href: repository_path(repo),
              font_size: 5,
              mr: 1,
              vertical_align: :middle,
              muted: true,
              aria: { label: "#{repo.full_name} (repository)" },
              data: hovercard_data_attributes_for_repository(repo)
            )) { repo.name_with_display_owner } %>
          <% end %>

          <% if discussion.labels.any? %>
            <span class="lh-default">
              <% discussion.labels.each do |label| %>
                <%= render Issues::LabelComponent.new(
                    color: label.color,
                    name: label.name,
                    description: label.description,
                    href: helpers.discussions_search_path(discussions_query: parsed_discussions_query, replace: {label: nil}, append: [[:label, label.name]], org_param: org_param),
                ) do |component| %>
                  <%= label.name_html %>
                <% end %>
              <% end %>
            </span>
          <% end %>

          <div class="text-small color-fg-muted mt-1">
            <%= profile_link discussion.author,
                class: "Link--muted Link--inTextBlock",
                "aria-label": "#{discussion.author} (author)",
                url: user_path(discussion.author) %>
            <%= bot_identifier discussion.author %>
            <%= discussion_type_text %>
            <%= time_ago_in_words_js(discussion.created_at) %>
            <span> in </span>
            <%= link_to(discussion.category.name,
              helpers.discussions_search_path(discussions_query: parsed_discussions_query, category_override: discussion.category.name, org_param: org_param),
              class: "Link--muted Link--inTextBlock",
              "aria-label": "#{discussion.category.name} (category)")
            %>
            <span class="text-bold">
              <% if discussion.closed? %>
                <span <%= test_selector("discussion-closed")%>>
                  · Closed
                </span>
              <% end %>
              <% if discussion_has_answer? %>
                <span class="color-fg-success" <%= test_selector("discussion-answered")%>>
                  · Answered
                </span>
              <% elsif discussion.supports_mark_as_answer? %>
                <span <%= test_selector("discussion-unanswered")%>>
                  · Unanswered
                </span>
              <% end %>
            </span>
          </div>
        </div>
        <div class="pt-2 pl-2 pl-md-0 pr-3 d-flex flex-shrink-0 flex-items-center">
          <div class="d-flex flex-justify-end mr-1 mr-md-0">
            <%= render Primer::Beta::AvatarStack.new(align: :right, display: [:none, nil, :block], body_arguments: { test_selector: "participants" }) do |c| %>
              <% participants.first(DiscussionsHelper::DISCUSSION_MAX_DISPLAYED_AVATARS).each do |participant| %>
                <% c.with_avatar(
                  href: user_path(participant),
                  size: 20,
                  classes: "from-avatar",
                  "aria-label": "#{participant} (participant)",
                  data: hovercard_data_attributes_for_user(participant),
                  **avatar_component_options(participant),
                  **helpers.discussions_list_click_attrs(discussion, target: :USER_PROFILE_LINK)
                ) %>
              <% end %>
            <% end %>

            <%= render Primer::Beta::AvatarStack.new(display: [nil, nil, :none], body_arguments: { test_selector: "participants" }) do |c| %>
              <% participants.first(DiscussionsHelper::DISCUSSION_MAX_DISPLAYED_AVATARS).each do |participant| %>
                <% c.with_avatar(
                  href: user_path(participant),
                  size: 20,
                  classes: "from-avatar",
                  data: hovercard_data_attributes_for_user(participant),
                  **avatar_component_options(participant),
                  **helpers.discussions_list_click_attrs(discussion, target: :USER_PROFILE_LINK)
                ) %>
              <% end %>
            <% end %>
          </div>
          <div class="no-wrap ml-2 text-right" style="width: 60px;">
            <%= render(Primer::Beta::Link.new(
              href: agnostic_discussion_path(discussion, org_param: org_param),
              muted: true,
              aria: { label: comments_aria_label },
              data: helpers.discussions_list_click_attrs(discussion, target: :DISCUSSION_LINK),
              test_selector: "discussions-list-comment"
            )) do %>
              <%= render(Primer::Beta::Octicon.new(
                icon: comment_icon,
                color: comment_icon_color,
                mr: 1
              )) %>
              <%= helpers.discussion_social_count discussion.comment_count %>
            <% end %>
          </div>
        </div>
      </div>
    </div>
  </div>
</li>
