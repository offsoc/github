# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Turboscan::V0::AlertEvent`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Turboscan::V0::AlertEvent`.

class Hydro::Schemas::Turboscan::V0::AlertEvent
  sig do
    params(
      actor_id: T.nilable(Integer),
      alert_number: T.nilable(Integer),
      commit_oid: T.nilable(String),
      event: T.nilable(T.any(Symbol, Integer)),
      ref: T.nilable(String),
      repository_id: T.nilable(Integer),
      result: T.nilable(Hydro::Schemas::Turboscan::V0::AlertEvent::Result)
    ).void
  end
  def initialize(actor_id: nil, alert_number: nil, commit_oid: nil, event: nil, ref: nil, repository_id: nil, result: nil); end

  sig { returns(Integer) }
  def actor_id; end

  sig { params(value: Integer).void }
  def actor_id=(value); end

  sig { returns(Integer) }
  def alert_number; end

  sig { params(value: Integer).void }
  def alert_number=(value); end

  sig { void }
  def clear_actor_id; end

  sig { void }
  def clear_alert_number; end

  sig { void }
  def clear_commit_oid; end

  sig { void }
  def clear_event; end

  sig { void }
  def clear_ref; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_result; end

  sig { returns(String) }
  def commit_oid; end

  sig { params(value: String).void }
  def commit_oid=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def event; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def event=(value); end

  sig { returns(String) }
  def ref; end

  sig { params(value: String).void }
  def ref=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Turboscan::V0::AlertEvent::Result)) }
  def result; end

  sig { params(value: T.nilable(Hydro::Schemas::Turboscan::V0::AlertEvent::Result)).void }
  def result=(value); end
end
