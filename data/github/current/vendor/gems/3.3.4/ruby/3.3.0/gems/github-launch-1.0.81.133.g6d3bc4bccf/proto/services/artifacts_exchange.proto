/*

⚠️ Both Pages and Actions depend on the API defined here ⚠️

Changes to this contract may need to be reflected here as well:
https://github.com/github/pages-deployer/blob/main/proto/url_exchanger/url_exchanger.proto

*/

syntax = "proto3";
package git_hub.launch.services.artifactsexchange;

option go_package = "github.com/github/launch/services/deploy/artifactsexchange";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "pbtypes/github.proto";

service ActionsArtifactExchange {
  rpc ExchangeURL(ExchangeURLRequest) returns (ExchangeURLResponse);
  rpc DeleteArtifact(DeleteArtifactRequest) returns (google.protobuf.Empty);
  rpc DeleteBuildLogs(DeleteBuildLogsRequest) returns (google.protobuf.Empty);
}

enum ResourceType {
  TYPE_UNKNOWN = 0;
  TYPE_STREAMING_LOG = 1;
  // Deprecated: TYPE_COMPLETED_LOG and `2` should be moved to reserved once
  // updated by consumers.
  TYPE_COMPLETED_LOG = 2;
  TYPE_DOWNLOAD_ARTIFACT = 3;
  TYPE_COMPLETED_STEP_LOG = 4; // Completed Step Logs
  TYPE_COMPLETED_JOB_LOG = 5; // Completed Raw Logs
  TYPE_COMPLETED_RUN_LOG = 6; // Completed Run Logs Archive
}

message DeleteArtifactRequest {
  pbtypes.git_hub.Identity repository_id = 1;
  reserved 2;
  reserved "workflow_run_id";
  string artifact_name = 3;
  pbtypes.git_hub.Identity check_suite_id = 4;
  string execution_id = 5;
}

message ExchangeURLRequest {
  string unauthenticated_url = 1;
  pbtypes.git_hub.Identity repository_id = 2;
  ResourceType resource_type = 3;
}

message ExchangeURLResponse {
  string authenticated_url = 1;
  google.protobuf.Timestamp expires_at = 2;
}

message DeleteBuildLogsRequest {
  pbtypes.git_hub.Identity check_suite_id = 1;
  pbtypes.git_hub.Identity repository_id = 2;
  string execution_id = 3;
}

