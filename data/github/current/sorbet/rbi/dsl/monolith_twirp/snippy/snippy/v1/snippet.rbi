# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Snippy::Snippy::V1::Snippet`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Snippy::Snippy::V1::Snippet`.

class MonolithTwirp::Snippy::Snippy::V1::Snippet
  sig do
    params(
      capped: T.nilable(T::Boolean),
      cursor: T.nilable(String),
      github_url: T.nilable(String),
      matched_source: T.nilable(String),
      occurrences: T.nilable(Integer)
    ).void
  end
  def initialize(capped: nil, cursor: nil, github_url: nil, matched_source: nil, occurrences: nil); end

  sig { returns(T::Boolean) }
  def capped; end

  sig { params(value: T::Boolean).void }
  def capped=(value); end

  sig { void }
  def clear_capped; end

  sig { void }
  def clear_cursor; end

  sig { void }
  def clear_github_url; end

  sig { void }
  def clear_matched_source; end

  sig { void }
  def clear_occurrences; end

  sig { returns(String) }
  def cursor; end

  sig { params(value: String).void }
  def cursor=(value); end

  sig { returns(String) }
  def github_url; end

  sig { params(value: String).void }
  def github_url=(value); end

  sig { returns(String) }
  def matched_source; end

  sig { params(value: String).void }
  def matched_source=(value); end

  sig { returns(Integer) }
  def occurrences; end

  sig { params(value: Integer).void }
  def occurrences=(value); end
end
