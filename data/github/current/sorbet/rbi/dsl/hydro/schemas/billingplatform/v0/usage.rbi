# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Billingplatform::V0::Usage`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Billingplatform::V0::Usage`.

class Hydro::Schemas::Billingplatform::V0::Usage
  sig do
    params(
      account_id: T.nilable(Integer),
      actor_id: T.nilable(Integer),
      billable_owner_id: T.nilable(Integer),
      billable_owner_type: T.nilable(T.any(Symbol, Integer)),
      customer_id: T.nilable(Integer),
      product_sku: T.nilable(String),
      quantity: T.nilable(Float),
      source_uri: T.nilable(String),
      usage_at: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(account_id: nil, actor_id: nil, billable_owner_id: nil, billable_owner_type: nil, customer_id: nil, product_sku: nil, quantity: nil, source_uri: nil, usage_at: nil); end

  sig { returns(Integer) }
  def account_id; end

  sig { params(value: Integer).void }
  def account_id=(value); end

  sig { returns(Integer) }
  def actor_id; end

  sig { params(value: Integer).void }
  def actor_id=(value); end

  sig { returns(Integer) }
  def billable_owner_id; end

  sig { params(value: Integer).void }
  def billable_owner_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def billable_owner_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def billable_owner_type=(value); end

  sig { void }
  def clear_account_id; end

  sig { void }
  def clear_actor_id; end

  sig { void }
  def clear_billable_owner_id; end

  sig { void }
  def clear_billable_owner_type; end

  sig { void }
  def clear_customer_id; end

  sig { void }
  def clear_product_sku; end

  sig { void }
  def clear_quantity; end

  sig { void }
  def clear_source_uri; end

  sig { void }
  def clear_usage_at; end

  sig { returns(Integer) }
  def customer_id; end

  sig { params(value: Integer).void }
  def customer_id=(value); end

  sig { returns(String) }
  def product_sku; end

  sig { params(value: String).void }
  def product_sku=(value); end

  sig { returns(Float) }
  def quantity; end

  sig { params(value: Float).void }
  def quantity=(value); end

  sig { returns(String) }
  def source_uri; end

  sig { params(value: String).void }
  def source_uri=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def usage_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def usage_at=(value); end
end
