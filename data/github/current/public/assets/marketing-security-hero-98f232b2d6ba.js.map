{"version":3,"file":"marketing-security-hero-xxxxxxxxxxxx.js","mappings":"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","sources":["app/assets/modules/marketing-security-hero.ts","app/assets/modules/security-hero/common.ts","app/assets/modules/security-hero/assets.ts","app/assets/modules/security-hero/glsl/shaders.ts","app/assets/modules/security-hero/glsl/utils/utils.glsl.ts","app/assets/modules/security-hero/glsl/blur.frag.ts","app/assets/modules/security-hero/glsl/circle.frag.ts","app/assets/modules/security-hero/glsl/halo-orb.frag.ts","app/assets/modules/security-hero/glsl/halo-orb.vert.ts","app/assets/modules/security-hero/glsl/line.frag.ts","app/assets/modules/security-hero/glsl/line.vert.ts","app/assets/modules/security-hero/glsl/mask-image.frag.ts","app/assets/modules/security-hero/glsl/output.frag.ts","app/assets/modules/security-hero/glsl/screen.vert.ts","app/assets/modules/security-hero/glsl/shield-back.frag.ts","app/assets/modules/security-hero/glsl/shield-back.vert.ts","app/assets/modules/security-hero/glsl/shield.frag.ts","app/assets/modules/security-hero/glsl/shield.vert.ts","app/assets/modules/security-hero/utils/common-uniforms.ts","app/assets/modules/security-hero/shield.ts","app/assets/modules/security-hero/mouse.ts","app/assets/modules/security-hero/custom-line-geometry.ts","app/assets/modules/security-hero/utils/easing.ts","app/assets/modules/security-hero/utils/timeline.ts","app/assets/modules/security-hero/lines.ts","app/assets/modules/security-hero/gaussian-blur.ts","app/assets/modules/security-hero/halo.ts","app/assets/modules/security-hero/params/gitlines-gradient-params.ts","app/assets/modules/security-hero/params/hero.ts","app/assets/modules/security-hero/main-scene.ts"],"sourcesContent":["import common from './security-hero/common'\nimport assets from './security-hero/assets'\nimport MainScene from './security-hero/main-scene'\nimport mouseMng from './security-hero/mouse'\nimport Timeline from './security-hero/utils/timeline'\nimport {commonUniforms} from './security-hero/utils/common-uniforms'\n// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\n\n// import common from \"./security-hero/Common\";\n// import assets from \"./security-hero/Assets\"\n// import MainScene from \"./security-hero/MainScene\"\n// import mouseMng from \"./security-hero/MouseMng\"\n// import Timeline from \"./security-hero/utils/Timeline\";\n// import {commonUniforms} from \"./security-hero/utils/commonUniforms\";\n\nlet mainScene: MainScene\n\nlet assetLoaded = false\n\nobserve('.js-security-hero', canvasElement => {\n  const canvas = canvasElement as HTMLCanvasElement\n\n  const canvasWrapper = document.querySelector('.lp-Hero-visual') as HTMLElement\n  let animationFrameId: number | null = null\n\n  common.init(canvasWrapper, canvas)\n  mainScene = new MainScene()\n  mouseMng.init()\n\n  /**\n   * Animate\n   */\n\n  let isVisible = true\n\n  const observer = new IntersectionObserver(entries => {\n    for (const entry of entries) {\n      if (entry.isIntersecting) {\n        isVisible = true\n        assetLoaded && animationFrameId === null ? init() : tick()\n      } else {\n        isVisible = false\n        pause()\n      }\n    }\n  })\n\n  observer.observe(canvasWrapper)\n\n  const tick = () => {\n    mouseMng.update()\n    common.update()\n\n    if (isVisible) {\n      commonUniforms.uTime.value += common.delta * 1.25\n      mainScene.update()\n      mainScene.renderMainScene()\n      mainScene.renderWholeScene()\n\n      // Call tick again on the next frame\n      animationFrameId = window.requestAnimationFrame(tick)\n    }\n  }\n\n  const resize = () => {\n    common.resize()\n    mainScene.resize()\n  }\n\n  resize()\n\n  const init = () => {\n    mainScene.init()\n    const timeline = new Timeline()\n\n    timeline.to([commonUniforms.uLightIntensity], 1000, {value: 1}, 3000)\n    timeline.start()\n    assetLoaded = true\n\n    tick()\n  }\n\n  const pause = () => {\n    if (animationFrameId) window.cancelAnimationFrame(animationFrameId)\n\n    mouseMng.update()\n    common.update()\n  }\n\n  if (!assetLoaded) assets.load(init)\n\n  // eslint-disable-next-line github/prefer-observers\n  window.addEventListener('resize', resize)\n\n  // eslint-disable-next-line github/prefer-observers\n  window.addEventListener('scroll', () => {\n    common.resize()\n  })\n})\n","import {PerspectiveCamera, Vector2, Vector3, WebGLRenderer, Clock} from 'three'\n\nclass Common {\n  $wrapper: HTMLElement | null\n  screenSize: Vector2 = new Vector2()\n  screenSize_old: Vector2 = new Vector2()\n  isMobile: boolean = false\n  delay: {\n    bg: number\n    middle: number\n    main: number\n  }\n  wrapperOffset: Vector2 = new Vector2()\n\n  pixelRatio: number = 1\n  aspect: number = 1\n\n  center: Vector3 = new Vector3(0, 0, 0)\n  cameraZ: number = 0.9\n  camera: PerspectiveCamera = new PerspectiveCamera(80, this.aspect, 0.1, 50)\n  camera2: PerspectiveCamera = new PerspectiveCamera(80, this.aspect, 0.1, 50)\n\n  fbo_screenSize: Vector2 = new Vector2()\n\n  renderer?: WebGLRenderer\n  $canvas?: HTMLCanvasElement\n\n  clock?: Clock\n\n  time: number = 0\n  delta: number = 0\n  constructor() {\n    this.$wrapper = null\n\n    this.delay = {\n      bg: 600,\n      middle: 200,\n      main: 600,\n    }\n\n    this.camera.position.set(0, 0, this.cameraZ)\n    this.camera2.position.set(0, 0, this.cameraZ)\n\n    this.fbo_screenSize = new Vector2()\n  }\n\n  init($wrapper: HTMLElement, $canvas: HTMLCanvasElement) {\n    this.pixelRatio = Math.min(1.5, window.devicePixelRatio)\n\n    this.renderer = new WebGLRenderer({\n      alpha: true,\n      canvas: $canvas,\n    })\n\n    this.$canvas = $canvas\n\n    this.$wrapper = $wrapper\n    this.$wrapper.appendChild(this.$canvas)\n    this.renderer.setPixelRatio(this.pixelRatio)\n\n    this.clock = new Clock()\n    this.clock.start()\n    this.resize()\n  }\n\n  resize() {\n    if (!this.$wrapper) return\n    const wrapperRect = this.$wrapper.getBoundingClientRect()\n    this.wrapperOffset.set(wrapperRect.left, wrapperRect.top)\n\n    const width = wrapperRect.width\n    const height = wrapperRect.height\n\n    this.screenSize_old.copy(this.screenSize)\n    this.screenSize.set(width, height)\n\n    this.fbo_screenSize.set(width * this.pixelRatio, height * this.pixelRatio)\n\n    this.aspect = width / height\n\n    this.camera.aspect = this.camera2.aspect = this.aspect\n\n    if (window.innerWidth <= 543) {\n      this.cameraZ = 0.7\n    } else {\n      this.cameraZ = 0.9\n    }\n\n    this.camera.updateProjectionMatrix()\n    this.camera2.updateProjectionMatrix()\n\n    this.renderer?.setSize(this.screenSize.x, this.screenSize.y)\n  }\n\n  getEase(scale = 1) {\n    return Math.min(1.0, scale * this.delta)\n  }\n\n  update() {\n    const delta = this.clock?.getDelta()\n    this.delta = delta || 0\n    this.time += this.delta\n  }\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default new Common()\n","import {TextureLoader, type ShapePath} from 'three'\nimport {GLTFLoader} from 'three/examples/jsm/loaders/GLTFLoader'\nimport {SVGLoader} from 'three/examples/jsm/loaders/SVGLoader'\n\ntype GLTFAsset = {\n  src: string\n  scene: THREE.Group | null\n}\n\ntype ImageAsset = {\n  src: string\n  texture: THREE.Texture | null\n  flipY: boolean\n}\n\ntype SVGAsset = {\n  src: string\n  paths: ShapePath[] | null\n}\nclass Assets {\n  gltfs: Record<string, GLTFAsset>\n  images: Record<string, ImageAsset>\n  svgs: Record<string, SVGAsset>\n  constructor() {\n    const imagePath = '/images/modules/site/security-hero/'\n    this.gltfs = {\n      shield: {\n        src: `${imagePath}/shield.glb`,\n        scene: null,\n      },\n    }\n\n    this.images = {\n      matcap4: {\n        src: `${imagePath}textures/matcap4.jpg`,\n        texture: null,\n        flipY: true,\n      },\n    }\n\n    this.svgs = {\n      gitlines1: {\n        src: `${imagePath}nodes/s-gitlines1.svg`,\n        paths: null,\n      },\n      gitlines2: {\n        src: `${imagePath}nodes/s-gitlines2.svg`,\n        paths: null,\n      },\n    }\n  }\n\n  load(callback: () => void) {\n    const allPromisess = [...this.loadImages(), ...this.loadGltfs(), ...this.loadSvgs()]\n\n    Promise.all(allPromisess)\n      // eslint-disable-next-line github/no-then\n      .then(() => {\n        // All assets loaded\n        if (callback) callback()\n      })\n    // .catch(error => {\n    //   console.log('An error occurred', error)\n    // })\n  }\n\n  loadGltfs() {\n    const loader = new GLTFLoader()\n\n    const promises = Object.values(this.gltfs).map(\n      gltf =>\n        new Promise((resolve, reject) => {\n          loader.load(\n            gltf.src,\n            loadedGltf => {\n              gltf.scene = loadedGltf.scene\n              resolve(loadedGltf.scene)\n            },\n            undefined,\n            error => reject(error),\n          )\n        }),\n    )\n\n    return promises\n  }\n\n  loadImages() {\n    const loader = new TextureLoader()\n\n    const promises = Object.values(this.images).map(\n      image =>\n        new Promise((resolve, reject) => {\n          loader.load(\n            image.src,\n            texture => {\n              image.texture = texture\n              texture.flipY = image.flipY\n              resolve(texture)\n            },\n            undefined,\n            error => reject(error),\n          )\n        }),\n    )\n\n    return promises\n  }\n\n  loadSvgs() {\n    const loader = new SVGLoader()\n\n    const promises = Object.values(this.svgs).map(\n      svg =>\n        new Promise(resolve => {\n          interface Data {\n            paths: ShapePath[]\n            xml: XMLDocument\n          }\n          loader.load(svg.src, (data: Data) => {\n            const paths = data.paths\n            svg.paths = paths\n            resolve(paths)\n          })\n        }),\n    )\n\n    return promises\n  }\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default new Assets()\n","import utils from './utils/utils.glsl'\nimport blurFrag from './blur.frag'\nimport circleFrag from './circle.frag'\nimport copyFrag from './copy.frag'\nimport haloOrbFrag from './halo-orb.frag'\nimport haloOrbVert from './halo-orb.vert'\nimport line_roundFrag from './line-round.frag'\nimport line_roundVert from './line-round.vert'\nimport lineFrag from './line.frag'\nimport lineVert from './line.vert'\nimport maskImageFrag from './mask-image.frag'\nimport outputFrag from './output.frag'\nimport screenVert from './screen.vert'\nimport shield_backFrag from './shield-back.frag'\nimport shield_backVert from './shield-back.vert'\nimport shieldFrag from './shield.frag'\nimport shieldVert from './shield.vert'\n\nexport default {\n  utils,\n  blurFrag,\n  circleFrag,\n  copyFrag,\n  haloOrbFrag,\n  haloOrbVert,\n  line_roundFrag,\n  line_roundVert,\n  lineFrag,\n  lineVert,\n  maskImageFrag,\n  outputFrag,\n  screenVert,\n  shield_backFrag,\n  shield_backVert,\n  shieldFrag,\n  shieldVert,\n}\n","export default `\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nfloat random (in vec2 _st) {\n  return fract(sin(dot(_st.xy,\n  vec2(12.9898,78.233)))*\n      43758.5453123);\n}\n\nvec3 permute(vec3 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\n\nfloat snoise2D(vec2 v){\n  const vec4 C = vec4(0.211324865405187, 0.366025403784439,\n           -0.577350269189626, 0.024390243902439);\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n  vec2 i1;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n  i = mod(i, 289.0);\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n  + i.x + vec3(0.0, i1.x, 1.0 ));\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\n    dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\n\n//\tSimplex 3D Noise\n//\tby Ian McEwan, Ashima Arts\n//\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\n\nfloat snoise3D(vec3 v){\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //  x0 = x0 - 0. + 0.0 * C\n  vec3 x1 = x0 - i1 + 1.0 * C.xxx;\n  vec3 x2 = x0 - i2 + 2.0 * C.xxx;\n  vec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n// Permutations\n  i = mod(i, 289.0 );\n  vec4 p = permute( permute( permute(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients\n// ( N*N points uniformly over a square, mapped onto an octahedron.)\n  float n_ = 1.0/7.0; // N=7\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z *ns.z);  //  mod(p,N*N)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n}\n\n//\tSimplex 4D Noise\n//\tby Ian McEwan, Ashima Arts\n//\nfloat permute(float x){return floor(mod(((x*34.0)+1.0)*x, 289.0));}\nfloat taylorInvSqrt(float r){return 1.79284291400159 - 0.85373472095314 * r;}\n\nvec4 grad4(float j, vec4 ip){\n  const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\n  vec4 p,s;\n\n  p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\n  p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\n  s = vec4(lessThan(p, vec4(0.0)));\n  p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;\n\n  return p;\n}\n\nfloat snoise4D(vec4 v){\n  const vec2  C = vec2( 0.138196601125010504,  // (5 - sqrt(5))/20  G4\n                        0.309016994374947451); // (sqrt(5) - 1)/4   F4\n// First corner\n  vec4 i  = floor(v + dot(v, C.yyyy) );\n  vec4 x0 = v -   i + dot(i, C.xxxx);\n\n// Other corners\n\n// Rank sorting originally contributed by Bill Licea-Kane, AMD (formerly ATI)\n  vec4 i0;\n\n  vec3 isX = step( x0.yzw, x0.xxx );\n  vec3 isYZ = step( x0.zww, x0.yyz );\n//  i0.x = dot( isX, vec3( 1.0 ) );\n  i0.x = isX.x + isX.y + isX.z;\n  i0.yzw = 1.0 - isX;\n\n//  i0.y += dot( isYZ.xy, vec2( 1.0 ) );\n  i0.y += isYZ.x + isYZ.y;\n  i0.zw += 1.0 - isYZ.xy;\n\n  i0.z += isYZ.z;\n  i0.w += 1.0 - isYZ.z;\n\n  // i0 now contains the unique values 0,1,2,3 in each channel\n  vec4 i3 = clamp( i0, 0.0, 1.0 );\n  vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\n  vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\n\n  //  x0 = x0 - 0.0 + 0.0 * C\n  vec4 x1 = x0 - i1 + 1.0 * C.xxxx;\n  vec4 x2 = x0 - i2 + 2.0 * C.xxxx;\n  vec4 x3 = x0 - i3 + 3.0 * C.xxxx;\n  vec4 x4 = x0 - 1.0 + 4.0 * C.xxxx;\n\n// Permutations\n  i = mod(i, 289.0);\n  float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\n  vec4 j1 = permute( permute( permute( permute (\n             i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\n           + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\n           + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\n           + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\n// Gradients\n// ( 7*7*6 points uniformly over a cube, mapped onto a 4-octahedron.)\n// 7*7*6 = 294, which is close to the ring size 17*17 = 289.\n\n  vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\n\n  vec4 p0 = grad4(j0,   ip);\n  vec4 p1 = grad4(j1.x, ip);\n  vec4 p2 = grad4(j1.y, ip);\n  vec4 p3 = grad4(j1.z, ip);\n  vec4 p4 = grad4(j1.w, ip);\n\n// Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n  p4 *= taylorInvSqrt(dot(p4,p4));\n\n// Mix contributions from the five corners\n  vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\n  vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\n  m0 = m0 * m0;\n  m1 = m1 * m1;\n  return 49.0 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))\n               + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\n\n}\n\n`\n","export default `\nuniform sampler2D uDiffuse;\nuniform vec2 uStep;\nuniform vec2 uStepSize;\nuniform float uWeight[BLUR_RADIUS];\n\n\nvarying vec2 vUv;\n\nvoid main() {\n  float count =  float(BLUR_RADIUS) - 1.0;\n\n  vec4 color = vec4(0.0);\n  vec4 sum = vec4(0.0);\n  float w;\n  float sumW = 0.0;\n  float actualWeight;\n\n  vec2 pxstep = uStep;\n\n  // loop\n  for(int i = 0; i <  BLUR_RADIUS - 1; i++){\n    w = uWeight[i];\n\n    color = texture2D( uDiffuse, vUv - count * pxstep * uStepSize);\n    actualWeight = w * color.a;\n    sum.rgb += color.rgb * actualWeight;\n    sum.a += color.a * w;\n    sumW += actualWeight;\n\n    color = texture2D( uDiffuse, vUv + count * pxstep * uStepSize);\n    actualWeight = w * color.a;\n    sum.rgb += color.rgb * actualWeight;\n    sum.a += color.a * w;\n    sumW += actualWeight;\n\n    count--;\n  }\n\n  w = uWeight[BLUR_RADIUS - 1];\n\n  color = texture2D( uDiffuse, vUv );\n  actualWeight = w * color.a;\n  sum.rgb += color.rgb * actualWeight;\n  sum.a += color.a * w;\n  sumW += actualWeight;\n\n  gl_FragColor = vec4(sum.rgb / sumW, sum.a);\n}\n`\n","export default `\nuniform vec2 uResolution;\nuniform float uTime;\nuniform float uBeatSpeed;\nvarying vec2 vUv;\n\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 _st) {\n    vec2 i = floor(_st);\n    vec2 f = fract(_st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n#define NUM_OCTAVES 3\n\nfloat fbm ( in vec2 _st) {\n    float v = 0.0;\n    float a = 0.5;\n    vec2 shift = vec2(100.0);\n    // Rotate to reduce axial bias\n    mat2 rot = mat2(cos(0.5), sin(0.5),\n                    -sin(0.5), cos(0.50));\n    for (int i = 0; i < NUM_OCTAVES; ++i) {\n        v += a * noise(_st);\n        _st = rot * _st * 2.0 + shift;\n        a *= 0.5;\n    }\n    return v;\n}\n\nfloat easeOutCubic( float t ) {\n    float t1 = t - 1.0;\n    return t1 * t1 * t1 + 1.0;\n}\n\nfloat easeInOutCubic( float t ) {\n    return t < 0.5 ? 4.0 * t * t * t : ( t - 1.0 ) * ( 2.0 * t - 2.0 ) * ( 2.0 * t - 2.0 ) + 1.0;\n}\n\n\nvoid main(){\n  vec2 st = (vUv - 0.5)  * (uResolution / min(uResolution.x, uResolution.y)) + 0.5;\n\n  vec4 color = vec4(vec3(0.0), 1.0);\n\n  vec2 torusSt = st - 0.5;\n  float f = fbm(torusSt * 10.0 + uTime * 2.0);\n  torusSt *= (1.0 + f * 1.0);\n  float torusL = length(torusSt);\n\n  float torusThickness = 0.1;\n\n  float radiusProgress = easeInOutCubic(fract(uTime * uBeatSpeed));\n\n  float radius = mix(torusThickness, 6.0, radiusProgress);\n  float torusAlpha = smoothstep(radius + 0.2, radius, torusL) * smoothstep(radius - 0.2, radius, torusL);\n  color.rgb = mix(color.rgb, vec3(1.0), torusAlpha * torusAlpha); //* dotAlpha;\n\n\n  gl_FragColor = color;\n}\n`\n","export default `\nuniform vec3 uColor1;\nuniform vec3 uColor2;\nuniform vec3 uColor3;\nuniform vec3 uColor4;\nuniform vec4 uRandom;\nuniform vec4 uColorMap;\nuniform float uTime;\nuniform vec2 uResolution;\n\nvarying vec2 vUv;\n\nvoid main(){\n\n  vec2 st = gl_FragCoord.xy / uResolution.xy;\n  float l = length(st - 0.5) * 2.0;\n  float noise = snoise3D(vec3(vUv, uTime * 0.05 + uRandom.y * 10.0)) * 0.5 + 0.5;\n  vec3 color;\n\n  color = mix(uColor1, uColor2, smoothstep(0.0, uColorMap.x, noise));\n  color = mix(color, uColor3, smoothstep(uColorMap.x, uColorMap.z, noise));\n  color = mix(color, uColor4, smoothstep(uColorMap.y, 1.0, noise));\n\n  vec3 hsv = rgb2hsv(color);\n  hsv.x -= 0.03;\n  hsv.g += mix(0.5, -0.1, smoothstep(0.1, 0.4, l));\n  hsv.b += mix(0.0, 0.3, l);\n  color = hsv2rgb(hsv);\n\n\n  float alpha = 1.0;\n\n  float uvl = length(vUv - 0.5) * 2.0;\n  alpha = smoothstep(0.8, 0.0, uvl);\n\n  alpha = alpha * 0.35 + pow(alpha, 6.0) * 0.3;\n\n  gl_FragColor = vec4(color, alpha);\n}\n`\n","export default `\nvarying vec2 vUv;\nuniform vec4 uRandom;\nuniform float uTime;\nuniform float uBeatSpeed;\nuniform vec4 uProgress;\n\nfloat easeOutCubic( float t ) {\n    float t1 = t - 1.0;\n    return t1 * t1 * t1 + 1.0;\n}\n\nfloat easeInOutCubic( float t ) {\n    return t < 0.5 ? 4.0 * t * t * t : ( t - 1.0 ) * ( 2.0 * t - 2.0 ) * ( 2.0 * t - 2.0 ) + 1.0;\n}\n\n\n\nvoid main() {\n  vUv = uv;\n\n  vec3 pos = position * mix(0.6, 0.8, cos(uTime + uRandom.x * 6.0) * 0.5 + 0.5);\n\n  float scale = fract(uTime * uBeatSpeed - 0.1);\n  scale = easeInOutCubic(smoothstep(0.0, 0.25, scale)) * smoothstep(1.0, 0.8, scale);\n  scale = mix(0.5, 1.0, scale) * uProgress.x;\n  vec4 worldPosition = modelMatrix * vec4(pos * scale, 1.0);\n  gl_Position = projectionMatrix * viewMatrix * worldPosition;\n}\n`\n","export default `\nuniform vec3 uColor1;\nuniform vec3 uColor2;\nuniform vec3 uColor3;\nuniform vec3 uColor4;\nuniform vec4 uColorMap;\nuniform vec2 uAlphaMapVector;\nuniform vec4 uGradient;\n\nuniform vec2 uResolution;\nuniform float uTime;\nuniform float uAlpha;\nuniform vec4 uProgress;\nuniform float uBlurRangeMin;\n\nvarying vec2 vIndex;\nvarying float vX;\n\nfloat parabola(float t){\n  return -pow(2.0 * t - 1.0, 2.0) + 1.0;\n}\n\nfloat convertNormal(float minT, float maxT, float t){\n  return max(0.0, min(1.0, (t - minT) / (maxT - minT)));\n}\n\n// float calcProgress(float p, float index, float pOffset){\n//   float _progress = mix(-pOffset, 1.0 + pOffset, p);\n//   return smoothstep(-pOffset * (1.0 - index), 1.0 + pOffset * index, _progress);\n// }\n\nvec4 calcProgress(vec4 p, float index, vec4 pOffset){\n  vec4 _p = mix(-pOffset, 1.0 + pOffset, p);\n  return smoothstep(vec4(index), vec4(index) + pOffset, _p);\n}\n\nfloat calcProgress(float p, float index, float pOffset){\n  float _p = mix(-pOffset, 1.0 + pOffset, p);\n  return smoothstep(index, index + pOffset, _p);\n}\n\nvoid main(){\n  vec4 progress = calcProgress(uProgress, vIndex.x, vec4(0.05, 0.6, 0.1, 0.1));\n  vec2 st = gl_FragCoord.xy / uResolution;\n\n  float alpha = pow(1.0 - abs((vX - 0.5) * 2.0), 2.0);\n  alpha = smoothstep(uBlurRangeMin, 1.0, alpha) * uAlpha;\n\n  alpha *= mix(uAlphaMapVector.x, 1.0, convertNormal(uGradient.x, uGradient.y, vIndex.x));\n  alpha *= mix(1.0, uAlphaMapVector.y, convertNormal(uGradient.z, uGradient.w, vIndex.x));\n  alpha *= progress.x;\n  alpha *= mix(parabola(vIndex.x), 1.0, uProgress.z);\n\n  vec3 color = mix(vec3(0.2), vec3(1.0), progress.y);\n\n  if(alpha < 0.001) discard;\n\n\n  gl_FragColor = vec4(color, alpha);\n}`\n","export default `\nattribute vec2 aindex;\nattribute vec3 alineposition;\nattribute vec3 positionprevious;\nattribute vec3 positionnext;\nattribute vec2 atangentscale;\nuniform float uSegmentNum;\nuniform float uTime;\nuniform float uLineWidth;\nuniform float uScale;\nuniform vec4 uRandom;\n\nconst float PI = 3.14159265359;\n\nvarying vec2 vIndex;\nvarying float vX;\n\nmat3 lookAtMatrix(vec3 tangent, vec3 up){\n    vec3 zaxis = -tangent;\n    vec3 xaxis = normalize(cross(up, zaxis));\n    vec3 yaxis = cross(zaxis, xaxis);\n\n    return mat3(\n        xaxis, yaxis, zaxis\n    );\n}\n\nvoid main(){\n  vec3 prevP = positionprevious * uScale;\n  vec3 currentP = position * uScale;\n  vec3 nextP = positionnext * uScale;\n\n  vec3 dist1 = normalize(prevP - currentP);\n  vec3 dist2 = normalize(currentP - nextP);\n\n  vec3 tangent = normalize(dist1 * atangentscale.x + dist2 * atangentscale.y);\n\n  vec3 up = vec3(0.0, 0.0, -1.0);\n\n  vec3 pos = vec3(alineposition.x * uLineWidth, 0.0, 0.0);\n\n  pos = lookAtMatrix(tangent, up) * pos;\n  pos += currentP;\n\n  vX = alineposition.x + 0.5;\n\n  vIndex = aindex;\n\n  gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(pos, 1.0);\n}`\n","export default `\nuniform sampler2D uGitlines;\nuniform sampler2D uShield;\nuniform sampler2D uCircle;\nuniform vec2 uResolution;\nvarying vec2 vUv;\n\nvoid main(){\n  vec4 shield = texture2D(uShield, (vUv - 0.5) * 1.0 + 0.5);\n  vec4 gitlines = texture2D(uGitlines, vUv);\n\n  vec4 maskImage = vec4(0.0);\n\n  maskImage.rgb = gitlines.rgb;\n  maskImage.a = mix(gitlines.a, 0.0, shield.a);\n\n  maskImage.rgb = mix(vec3(1.0), maskImage.rgb, maskImage.a);\n\n  float circle = texture2D(uCircle, vUv).r;\n  vec4 color = maskImage;\n\n  color.a *= circle;\n  color.a += shield.a * 0.05;\n\n  color.rgb += maskImage.rgb * (1.0 - color.a);\n\n  color.rgb = mix(vec3(0.0), color.rgb, color.a);\n\n  float gray = color.r + color.g + color.b;\n\n\n  color.rgb = vec3(gray);\n  color.a = 1.0;\n\n  gl_FragColor = color;\n}`\n","export default `\nuniform sampler2D uShield;\nuniform sampler2D uGitlines;\nuniform sampler2D uMask;\nuniform sampler2D uBlur;\nuniform sampler2D uHalo;\nuniform sampler2D uShieldBack;\nuniform float uTime;\nuniform float uBeatSpeed;\nuniform vec4 uProgress;\n\nuniform vec3 uColor1;\nuniform vec3 uColor2;\nuniform vec3 uColor3;\nuniform vec3 uColor4;\n\nuniform vec3 uBgColor;\nuniform vec3 uGlowColor;\nuniform vec2 uResolution;\nvarying vec2 vUv;\n\n\nvoid main(){\n  vec2 st = (vUv - 0.5) * uResolution / min(uResolution.x, uResolution.y);\n  float gitlineColorMap = length(st);\n\n  vec3 gitlineColor = mix(uColor1, uColor2, smoothstep(0.1, 0.3, gitlineColorMap));\n  gitlineColor = mix(gitlineColor, uColor3, smoothstep(0.3, 0.5, gitlineColorMap));\n  gitlineColor = mix(gitlineColor, uColor4, smoothstep(0.5, 1.0, gitlineColorMap));\n\n  vec4 shield = texture2D(uShield, vUv);\n  vec4 gitlines = texture2D(uGitlines, vUv);\n  vec4 shieldBack = texture2D(uShieldBack, vUv);\n\n  vec4 halo = texture2D(uHalo, vUv);\n\n  float beat = fract(uTime * uBeatSpeed - 0.2);\n\n\n  float haloIntensity = smoothstep(0.0, 0.2, beat);\n  float haloScale = mix(1.75, 1.0, haloIntensity);\n\n  vec3 grayShield = vec3(shield.r + shield.g + shield.b) * 0.333;\n\n  float mask = texture2D(uMask, vUv).r;\n  float blur = texture2D(uBlur, vUv).r;\n  blur = pow(blur, 2.0) * 1.4 + pow(blur, 3.0) * 1.5 + blur * 0.8;\n  mask += blur * 1.5;\n\n  mask *= uProgress.x;\n\n  gitlineColor = mix(vec3(0.0), gitlineColor, gitlines.r);\n\n  vec3 color = vec3(0.0);\n  color = mix(uBgColor, gitlineColor, 0.3 * smoothstep(0.0, 0.2, gitlines.a));\n\n  vec3 glowColor = uGlowColor;\n  vec3 hsv = rgb2hsv(glowColor);\n  hsv.x += 0.1 * blur + mask * mask * 0.05;\n  hsv.y += 0.1 * mask + 0.2;\n\n  glowColor = hsv2rgb(hsv);\n  color = color + halo.rgb * haloScale * halo.a + glowColor * mask;\n  color = mix(color, shield.rgb, shield.a);\n\n  float outlineAlpha = shieldBack.a - shield.a;\n  float outlineIntensity = shieldBack.r;\n\n  color += outlineAlpha * outlineIntensity;\n  color = mix(uBgColor, color, smoothstep(0.2, 0.5, vUv.y));\n\n  gl_FragColor = vec4(color, 1.0);\n}\n`\n","export default `\nvarying vec2 vUv;\n\nvoid main(){\n  vUv = uv;\n  gl_Position = vec4(position, 1.0);\n  gl_Position.z = 1.0;\n}`\n","export default `\nuniform vec2 uResolution;\nuniform float uTime;\nuniform vec4 uProgress;\nconst float PI = 3.14159265359;\n\nvarying vec3 vNormal;\nvarying vec3 vViewPosition;\n\nfloat fresnelEffect(float power){\n  return pow((1.0 - clamp(dot(normalize(vNormal), normalize(-vViewPosition)), 0.0, 1.0)), power);\n}\n\n\nvoid main(){\n  vec2 st = (gl_FragCoord.xy / uResolution);\n  st -= 0.5;\n  st *= (uResolution / min(uResolution.x, uResolution.y));\n  float radian = (atan(st.y, st.x) / PI + uTime * 0.25);\n  float intensity = fract(radian);\n  intensity = smoothstep(mix(0.0, 0.4, uProgress.y), 0.0, intensity) * smoothstep(0.0, 0.05, intensity);\n\n  float fresnel = 1.0 - fresnelEffect(0.7);\n  intensity *= smoothstep(0.0, 0.4, fresnel);\n\n\n  gl_FragColor = vec4(vec3(intensity), 1.0);\n}`\n","export default `\nvarying vec3 vNormal;\nvarying vec3 vViewPosition;\nvoid main(){\n  vNormal = normalize(normalMatrix * normal);\n  vec4 viewPosition;\n\n  viewPosition = viewMatrix * modelMatrix * vec4(position, 1.0);\n  vViewPosition = viewPosition.xyz;\n\n\n  gl_Position = projectionMatrix * viewPosition;\n}\n`\n","export default `\nuniform sampler2D uMatcap;\nuniform vec3 uColor1;\nuniform vec3 uColor2;\nuniform vec3 uColor3;\nuniform vec3 uColor4;\nuniform vec3 uLightColor;\nuniform float uTime;\nuniform vec3 uRandom;\nuniform vec3 uBgColor;\nuniform vec4 uColorMap;\nuniform vec3 uLightPos;\nuniform float uLightIntensity;\nuniform vec2 uBgRange;\nuniform vec4 uProgress;\n\nvarying vec3 vNormal;\nvarying vec3 vViewPosition;\nvarying vec3 vPosition;\nvarying vec3 vWorldPos;\n\nfloat fresnelEffect(float power){\n  return pow((1.0 - clamp(dot(normalize(vNormal), normalize(-vViewPosition)), 0.0, 1.0)), power);\n}\n\nmat2 rotate2D(float r){\n  float c = cos(r);\n  float s = sin(r);\n  return mat2(c, s, -s, c);\n}\n\nvoid main(){\n  float light = smoothstep(0.0, 0.8, dot(normalize(vNormal), normalize(uLightPos - vWorldPos)));\n  vec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, -viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\n\tvec2 uv = vec2( dot( x, vNormal ), dot( y, vNormal ) ) * 0.495 + 0.5;\n\n  uv -= 0.5;\n  uv.x *= -1.0;\n  uv += 0.5;\n\n  vec3 light3 = texture2D(uMatcap, uv).rgb;\n  float matLight = light3.b;\n  float noise_matLight = snoise4D(vec4(vPosition * 0.8, uTime * 0.025 + uRandom.x * 10.0)) * 0.5 + 0.5;\n\n  matLight = mix(\n    pow(matLight, 4.0), pow(matLight, 2.0), noise_matLight\n  );\n\n  float spotLight = 0.0;\n\n  float noise = snoise4D(vec4(vPosition * 0.7, uTime * 0.1 + uRandom.y * 10.0)) * 0.5 + 0.5;\n  vec3 color;\n\n  // shield\n\n  #if (CHECK == 1)\n    // noise = cos(uTime * 0.1 + uRandom.x * 10.0) * 0.5 + 0.5;\n    color = mix(uColor1, uColor2, noise);\n    color = pow(color, vec3(0.1));\n  #else\n    color = mix(uColor1, uColor2, smoothstep(0.0, uColorMap.x, noise));\n    color = mix(color, uColor3, smoothstep(uColorMap.x, uColorMap.z, noise));\n    color = mix(color, uColor4, smoothstep(uColorMap.y, 1.0, noise));\n  #endif\n  // color = mix(vec3(0.0), color, light);\n\n\n  float f2 = 1.0 - fresnelEffect(0.7);\n\n  vec3 lightDir = uLightPos - vWorldPos;\n  float l = length(lightDir);\n  lightDir = normalize(lightDir);\n\n  spotLight = clamp(dot(vNormal, lightDir), 0.0, 1.0);\n  spotLight = (pow(spotLight, 3.0) * 0.2 + pow(spotLight, 10.0) * 0.1);\n\n  #if (CHECK == 0)\n  color = mix(color, uBgColor, smoothstep(0.5, 0.8, (vPosition.x - vPosition.y) * 0.5 + 0.49) * f2);\n  color += smoothstep(0.2, 0.46, -vPosition.x + vPosition.y + vPosition.z * 3.0) * 0.8 * mix(0.5, 0.8, noise_matLight);\n  #endif\n\n  color = mix(color, pow(color, vec3(2.0)), light3.g);\n  float f = fresnelEffect(1.5);\n  f *= 1.2;\n\n  color = mix(color, uLightColor, f);\n  color = mix(color, vec3(1.0), smoothstep(0.0, 0.7, matLight));\n  color *= 1.2;\n\n  float alpha = 1.0;\n  #if(CHECK == 0)\n    alpha = smoothstep(0.9, 0.75, f);\n  #else\n    alpha = smoothstep(0.25, 0.15, f);\n  #endif\n\n  vec3 bgColorHSV = rgb2hsv(uBgColor);\n\n  vec3 hsv = rgb2hsv(color);\n  hsv.r = mix(bgColorHSV.r, hsv.r, uProgress.x);\n  hsv.g = mix(mix(bgColorHSV.g, 0.0, light), hsv.g, uProgress.x);\n  hsv.b = mix(mix(bgColorHSV.b, 1.0, light), hsv.b, uProgress.z);\n  color = hsv2rgb(hsv);\n\n\n  gl_FragColor = vec4(color, alpha);\n}\n`\n","export default `\nvarying vec3 vNormal;\nvarying vec3 vViewPosition;\nvarying vec3 vPosition;\nvarying vec3 vWorldPos;\n\nvarying vec2 vUv;\n\n\nvoid main(){\n  vNormal = normalize(normalMatrix * normal);\n\n  vec4 worldPosition;\n  vec4 viewPosition;\n\n  worldPosition = modelMatrix * vec4(position, 1.0);\n  vWorldPos = worldPosition.xyz;\n  viewPosition = viewMatrix * worldPosition;\n  vPosition = worldPosition.xyz / modelMatrix[3][3];\n\n  vViewPosition = viewPosition.xyz;\n  vUv = uv;\n\n  gl_Position = projectionMatrix * viewPosition;\n}\n`\n","import {Color, Vector3, Vector4} from 'three'\n\ntype UniformValue<T> = {value: T}\n\nexport const commonUniforms = {\n  uColor1: {value: new Color(0x096bde)} as UniformValue<Color>,\n  uColor2: {value: new Color(0x140fff)} as UniformValue<Color>,\n  uColor3: {value: new Color(0x000aff)} as UniformValue<Color>,\n  uColor4: {value: new Color(0x6bd6d0)} as UniformValue<Color>,\n  uLightColor: {value: new Color(0xf0f7ff)} as UniformValue<Color>,\n  uTime: {value: 0} as UniformValue<number>,\n  uBgColor: {value: new Color(0x0d1117)} as UniformValue<Color>,\n  uColorMap: {value: new Vector4(0.4, 0.7, 0.8, 0.95)} as UniformValue<Vector4>,\n  uLightPos: {value: new Vector3(0, 0, 1.5)} as UniformValue<Vector3>,\n  uLightIntensity: {value: 0.0} as UniformValue<number>,\n  uBeatSpeed: {value: 0.25} as UniformValue<number>,\n}\n","import type {Vector2, Texture, Color} from 'three'\nimport {Mesh, ShaderMaterial, Vector3, Vector4, Group} from 'three'\nimport assets from './assets'\n\nimport shaders from './glsl/shaders'\n\nimport common from './common'\nimport {commonUniforms} from './utils/common-uniforms'\n\ninterface MaterialOptions {\n  isCheck: boolean\n}\n\nexport default class Shield {\n  group: Group = new Group()\n  progress: Vector4 = new Vector4(0, 0, 0, 0)\n  lightPos: Vector3 = new Vector3(-0.5, 1.0, -2.0)\n  shieldBackGroup: Group = new Group()\n  uniforms: {[uniform: string]: {value: number | Vector2 | Vector4 | Vector3 | Color | Texture | null}}\n\n  constructor() {\n    this.uniforms = {\n      ...commonUniforms,\n      uMatcap: {\n        value: null,\n      },\n      uRandom: {\n        value: new Vector3(Math.random(), Math.random(), Math.random()),\n      },\n      uLightPos: {\n        value: this.lightPos,\n      },\n      uResolution: {\n        value: common.fbo_screenSize,\n      },\n      uProgress: {\n        value: this.progress,\n      },\n    }\n  }\n\n  init(): void {\n    this.createMesh()\n  }\n\n  createMesh(): void {\n    if (this.uniforms.uMatcap && assets.images.matcap4 && assets.images.matcap4.texture) {\n      this.uniforms.uMatcap.value = assets.images.matcap4.texture\n    }\n\n    if (assets.gltfs.shield?.scene) {\n      assets.gltfs.shield.scene.traverse(object => {\n        if (object.type === 'Mesh') {\n          const geometry = (object as Mesh).geometry\n\n          const material = this.createMaterial({isCheck: object.name === 'check'})\n          const mesh = new Mesh(geometry, material)\n          this.group.add(mesh)\n\n          const material_back = this.createMaterial_back()\n          const mesh_back = new Mesh(geometry, material_back)\n          mesh_back.scale.set(1.03, 1.03, 1.03)\n          this.shieldBackGroup.add(mesh_back)\n        }\n      })\n    }\n  }\n\n  createMaterial({isCheck}: MaterialOptions): ShaderMaterial {\n    const uniforms = {\n      ...this.uniforms,\n    }\n\n    const material = new ShaderMaterial({\n      vertexShader: shaders.shieldVert,\n      fragmentShader: shaders.utils + shaders.shieldFrag,\n      uniforms,\n      transparent: true,\n      defines: {\n        CHECK: isCheck ? 1 : 0,\n      },\n    })\n\n    return material\n  }\n\n  createMaterial_back(): ShaderMaterial {\n    return new ShaderMaterial({\n      vertexShader: shaders.shield_backVert,\n      fragmentShader: shaders.utils + shaders.shield_backFrag,\n      uniforms: this.uniforms,\n      transparent: true,\n    })\n  }\n\n  update(): void {}\n}\n","import {Vector2} from 'three'\nimport common from './common'\n\ninterface Pos {\n  target: Vector2\n  current: Vector2\n  current2: Vector2\n  diff: Vector2\n  diff2: Vector2\n}\n\nclass MouseMng {\n  originalPos: THREE.Vector2 = new Vector2()\n  mousemoveFuncs: Array<() => void> = []\n  pos: Pos = {\n    target: new Vector2(),\n    current: new Vector2(),\n    current2: new Vector2(),\n    diff: new Vector2(),\n    diff2: new Vector2(),\n  }\n  constructor() {}\n\n  init() {\n    window.addEventListener('mousemove', event => {\n      let x = (event.clientX - common.wrapperOffset.x) / common.screenSize.x\n      x = (x - 0.5) * 2.0\n      let y = (event.clientY - common.wrapperOffset.y) / common.screenSize.y\n      y = (0.5 - y) * 2.0\n\n      this.updateMousePos(x, y)\n    })\n\n    // eslint-disable-next-line github/require-passive-events\n    window.addEventListener('touchstart', (event: TouchEvent) => {\n      if (event.touches[0]) {\n        let x = (event.touches[0].clientX - common.wrapperOffset.x) / common.screenSize.x\n        x = (x - 0.5) * 2.0\n        let y = (event.touches[0].clientY - common.wrapperOffset.y) / common.screenSize.y\n        y = (0.5 - y) * 2.0\n\n        this.updateMousePos(x, y)\n      }\n    })\n  }\n\n  updateMousePos(x: number, y: number) {\n    this.pos.target.set(Math.max(-1, Math.min(1, x)), Math.max(-1, Math.min(1, y)))\n    for (const func of this.mousemoveFuncs) {\n      func()\n    }\n  }\n\n  addMousemoveFunc(func: () => void) {\n    this.mousemoveFuncs.push(func)\n  }\n\n  resize() {}\n\n  update() {\n    const _c = this.pos.current.clone()\n    const _c2 = this.pos.current2.clone()\n    this.pos.current.lerp(this.pos.target, common.getEase(2))\n    this.pos.current2.lerp(this.pos.target, common.getEase(1.5))\n\n    this.pos.diff.subVectors(this.pos.current, _c)\n    this.pos.diff2.subVectors(this.pos.current2, _c2)\n  }\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default new MouseMng()\n","import type {Path} from 'three'\nimport {Vector2, BufferGeometry, Float32BufferAttribute} from 'three'\n\nconst dimensions = new Vector2(1600, 1000)\n\nclass CustomLineGeometry extends BufferGeometry {\n  isClosed: boolean = false\n  override type: string = 'CustomLineGeometry'\n  path: Path\n  pathDist: number\n  lIndex: number\n  parameters: {\n    width: number\n    height: number\n    widthSegments: number\n    heightSegments: number\n  }\n  constructor(heightSegments = 1, path: Path, pathDist: number, lIndex: number, isClosed: boolean) {\n    const widthSegments = 1\n    const width = 1\n    const height = 1\n\n    super()\n    this.isClosed = isClosed\n\n    this.path = path\n    this.pathDist = pathDist\n\n    this.lIndex = lIndex\n\n    this.parameters = {\n      width,\n      height,\n      widthSegments,\n      heightSegments,\n    }\n\n    const width_half = width / 2\n    const height_half = height / 2\n\n    const gridX = Math.floor(widthSegments)\n    const gridY = Math.floor(heightSegments)\n\n    const gridX1 = gridX + 1\n    const gridY1 = gridY + 1\n\n    const segment_width = width / gridX\n    const segment_height = height / gridY\n\n    const indices = []\n    const vertices = [] // svg path\n    const vertices_previous = [] // svg path\n    const vertices_next = [] // svg path\n    const tangentScales = []\n\n    const linePositions = []\n    const vertexIndicies = []\n\n    for (let iy = 0; iy < gridY1; iy++) {\n      const y = iy * segment_height - height_half\n      let t = 0\n      let lineIndex = 0\n      lineIndex = iy / (gridY1 - 1)\n\n      if (this.pathDist > 0) {\n        t = lineIndex\n      } else {\n        t = 1.0 - lineIndex\n      }\n\n      const t0 = this.restrictT(t - 1 / gridY1)\n      const t1 = this.restrictT(t)\n      const t2 = this.restrictT(t + 1 / gridY1)\n\n      const vertex_0 = this.getPoint(t0)\n      const vertex_1 = this.getPoint(t1)\n      const vertex_2 = this.getPoint(t2)\n\n      const tangentScale = [1, 1]\n\n      if (!this.isClosed) {\n        tangentScale[0] = t0 < 0 ? 0 : 1\n        tangentScale[1] = t2 > 1 ? 0 : 1\n      }\n\n      for (let ix = 0; ix < gridX1; ix++) {\n        const x = ix * segment_width - width_half\n\n        linePositions.push(x, -y, 0)\n        vertices.push(vertex_1.x, vertex_1.y, 0)\n        vertices_previous.push(vertex_0.x, vertex_0.y, 0)\n        vertices_next.push(vertex_2.x, vertex_2.y, 0)\n        vertexIndicies.push(lineIndex, lIndex)\n\n        if (tangentScale[0] === 0 || tangentScale[0] === 1) {\n          tangentScales.push(tangentScale[0])\n        }\n\n        if (tangentScale[1] === 0 || tangentScale[1] === 1) {\n          tangentScales.push(tangentScale[1])\n        }\n      }\n    }\n\n    for (let iy = 0; iy < gridY; iy++) {\n      for (let ix = 0; ix < gridX; ix++) {\n        const a = ix + gridX1 * iy\n        const b = ix + gridX1 * (iy + 1)\n        const c = ix + 1 + gridX1 * (iy + 1)\n        const d = ix + 1 + gridX1 * iy\n\n        indices.push(a, b, d)\n        indices.push(b, c, d)\n      }\n    }\n\n    this.setIndex(indices)\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3))\n    this.setAttribute('alineposition', new Float32BufferAttribute(linePositions, 3))\n    this.setAttribute('aindex', new Float32BufferAttribute(vertexIndicies, 2))\n    this.setAttribute('atangentscale', new Float32BufferAttribute(tangentScales, 2))\n\n    this.setAttribute('positionprevious', new Float32BufferAttribute(vertices_previous, 3))\n    this.setAttribute('positionnext', new Float32BufferAttribute(vertices_next, 3))\n  }\n\n  restrictT(t: number) {\n    if (this.isClosed) {\n      t = t - Math.floor(t)\n    }\n    return t\n  }\n\n  getPoint(t: number) {\n    t = Math.min(1, Math.max(0, t))\n    const vec2 = this.path.getPoint(t)\n    const vecX = vec2.x / dimensions.x - 0.5\n    const vecY = -(vec2.y / dimensions.y - 0.5) * (dimensions.y / dimensions.x)\n    return {\n      x: vecX,\n      y: vecY,\n    }\n  }\n}\n\nconst getRoundPoint = (x: number, y: number) => {\n  return {\n    x: x / dimensions.x - 0.5,\n    y: -(y / dimensions.y - 0.5) * (dimensions.y / dimensions.x),\n  }\n}\n\nexport {CustomLineGeometry, getRoundPoint}\n","// Based on https://gist.github.com/gre/1650294\n\nexport const EASE = {\n  // No easing, no acceleration\n  linear(t: number) {\n    return t\n  },\n  // Slight acceleration from zero to full speed\n  easeInSine(t: number) {\n    return -1 * Math.cos(t * (Math.PI / 2)) + 1\n  },\n\n  // Slight deceleration at the end\n  easeOutSine(t: number) {\n    return Math.sin(t * (Math.PI / 2))\n  },\n\n  // Slight acceleration at beginning and slight deceleration at end\n  easeInOutSine(t: number) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1)\n  },\n\n  // Accelerating from zero velocity\n  easeInQuad(t: number) {\n    return t * t\n  },\n\n  // Decelerating to zero velocity\n  easeOutQuad(t: number) {\n    return t * (2 - t)\n  },\n\n  // Acceleration until halfway, then deceleration\n  easeInOutQuad(t: number) {\n    return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t\n  },\n\n  // Accelerating from zero velocity\n  easeInCubic(t: number) {\n    return t * t * t\n  },\n\n  // Decelerating to zero velocity\n  easeOutCubic(t: number) {\n    const t1 = t - 1\n    return t1 * t1 * t1 + 1\n  },\n\n  // Acceleration until halfway, then deceleration\n  easeInOutCubic(t: number) {\n    return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\n  },\n\n  // Accelerating from zero velocity\n  easeInQuart(t: number) {\n    return t * t * t * t\n  },\n\n  // Decelerating to zero velocity\n  easeOutQuart(t: number) {\n    const t1 = t - 1\n    return 1 - t1 * t1 * t1 * t1\n  },\n\n  // Acceleration until halfway, then deceleration\n  easeInOutQuart(t: number) {\n    const t1 = t - 1\n    return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * t1 * t1 * t1 * t1\n  },\n\n  // Accelerating from zero velocity\n  easeInQuint(t: number) {\n    return t * t * t * t * t\n  },\n\n  // Decelerating to zero velocity\n  easeOutQuint(t: number) {\n    const t1 = t - 1\n    return 1 + t1 * t1 * t1 * t1 * t1\n  },\n\n  // Acceleration until halfway, then deceleration\n  easeInOutQuint(t: number) {\n    const t1 = t - 1\n    return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * t1 * t1 * t1 * t1 * t1\n  },\n\n  // Accelerate exponentially until finish\n  easeInExpo(t: number) {\n    if (t === 0) {\n      return 0\n    }\n\n    return Math.pow(2, 10 * (t - 1))\n  },\n\n  // Initial exponential acceleration slowing to stop\n  easeOutExpo(t: number) {\n    if (t === 1) {\n      return 1\n    }\n\n    return -Math.pow(2, -10 * t) + 1\n  },\n\n  // Exponential acceleration and deceleration\n  easeInOutExpo(t: number) {\n    if (t === 0 || t === 1) {\n      return t\n    }\n\n    const scaledTime = t * 2\n    const scaledTime1 = scaledTime - 1\n\n    if (scaledTime < 1) {\n      return 0.5 * Math.pow(2, 10 * scaledTime1)\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * scaledTime1) + 2)\n  },\n\n  // Increasing velocity until stop\n  easeInCirc(t: number) {\n    const scaledTime = t / 1\n    return -1 * (Math.sqrt(1 - scaledTime * t) - 1)\n  },\n\n  // Start fast, decreasing velocity until stop\n  easeOutCirc(t: number) {\n    const t1 = t - 1\n    return Math.sqrt(1 - t1 * t1)\n  },\n\n  // Fast increase in velocity, fast decrease in velocity\n  easeInOutCirc(t: number) {\n    const scaledTime = t * 2\n    const scaledTime1 = scaledTime - 2\n\n    if (scaledTime < 1) {\n      return -0.5 * (Math.sqrt(1 - scaledTime * scaledTime) - 1)\n    }\n\n    return 0.5 * (Math.sqrt(1 - scaledTime1 * scaledTime1) + 1)\n  },\n\n  // Slow movement backwards then fast snap to finish\n  easeInBack(t: number, magnitude: number = 1.70158) {\n    return t * t * ((magnitude + 1) * t - magnitude)\n  },\n\n  // Fast snap to backwards point then slow resolve to finish\n  easeOutBack(t: number, magnitude: number = 1.70158) {\n    const scaledTime = t / 1 - 1\n\n    return scaledTime * scaledTime * ((magnitude + 1) * scaledTime + magnitude) + 1\n  },\n\n  // Slow movement backwards, fast snap to past finish, slow resolve to finish\n  easeInOutBack(t: number, magnitude: number = 1.70158) {\n    const scaledTime = t * 2\n    const scaledTime2 = scaledTime - 2\n\n    const s = magnitude * 1.525\n\n    if (scaledTime < 1) {\n      return 0.5 * scaledTime * scaledTime * ((s + 1) * scaledTime - s)\n    }\n\n    return 0.5 * (scaledTime2 * scaledTime2 * ((s + 1) * scaledTime2 + s) + 2)\n  },\n  // Bounces slowly then quickly to finish\n  easeInElastic(t: number, magnitude: number = 0.7) {\n    if (t === 0 || t === 1) {\n      return t\n    }\n\n    const scaledTime = t / 1\n    const scaledTime1 = scaledTime - 1\n\n    const p = 1 - magnitude\n    const s = (p / (2 * Math.PI)) * Math.asin(1)\n\n    return -(Math.pow(2, 10 * scaledTime1) * Math.sin(((scaledTime1 - s) * (2 * Math.PI)) / p))\n  },\n\n  // Fast acceleration, bounces to zero\n  easeOutElastic(t: number, magnitude: number = 0.7) {\n    if (t === 0 || t === 1) {\n      return t\n    }\n\n    const p = 1 - magnitude\n    const scaledTime = t * 2\n\n    const s = (p / (2 * Math.PI)) * Math.asin(1)\n    return Math.pow(2, -10 * scaledTime) * Math.sin(((scaledTime - s) * (2 * Math.PI)) / p) + 1\n  },\n\n  // Slow start and end, two bounces sandwich a fast motion\n  easeInOutElastic(t: number, magnitude: number = 0.65) {\n    if (t === 0 || t === 1) {\n      return t\n    }\n\n    const p = 1 - magnitude\n    const scaledTime = t * 2\n    const scaledTime1 = scaledTime - 1\n\n    const s = (p / (2 * Math.PI)) * Math.asin(1)\n\n    if (scaledTime < 1) {\n      return -0.5 * (Math.pow(2, 10 * scaledTime1) * Math.sin(((scaledTime1 - s) * (2 * Math.PI)) / p))\n    }\n\n    return Math.pow(2, -10 * scaledTime1) * Math.sin(((scaledTime1 - s) * (2 * Math.PI)) / p) * 0.5 + 1\n  },\n\n  // Bounce to completion\n  easeOutBounce(t: number) {\n    const scaledTime = t / 1\n\n    if (scaledTime < 1 / 2.75) {\n      return 7.5625 * scaledTime * scaledTime\n    } else if (scaledTime < 2 / 2.75) {\n      const scaledTime2 = scaledTime - 1.5 / 2.75\n      return 7.5625 * scaledTime2 * scaledTime2 + 0.75\n    } else if (scaledTime < 2.5 / 2.75) {\n      const scaledTime2 = scaledTime - 2.25 / 2.75\n      return 7.5625 * scaledTime2 * scaledTime2 + 0.9375\n    } else {\n      const scaledTime2 = scaledTime - 2.625 / 2.75\n      return 7.5625 * scaledTime2 * scaledTime2 + 0.984375\n    }\n  },\n\n  // Bounce increasing in velocity until completion\n  easeInBounce(t: number) {\n    return 1 - this.easeOutBounce(1 - t)\n  },\n\n  // Bounce in and bounce out\n  easeInOutBounce(t: number) {\n    if (t < 0.5) {\n      return this.easeInBounce(t * 2) * 0.5\n    }\n\n    return this.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n  },\n}\n\nexport type EasingFunctionNames = keyof typeof EASE\n","import type {Euler, Vector3, Vector4} from 'three'\n\nimport {EASE, type EasingFunctionNames} from './easing'\n\ntype dataType = Euler[] | Vector3[] | unknown[] | Vector4[]\n\ninterface TimelineOptions {\n  easing?: EasingFunctionNames\n  delay?: number\n  onUpdate?: () => void\n  onComplete?: () => void\n}\ninterface AnimationProperties {\n  y?: number\n  x?: number\n  z?: number\n  value?: number\n  anim_rotating?: number\n  radian?: number\n  onComplete?: () => void\n  easing?: EasingFunctionNames\n  onUpdate?: () => void\n}\ninterface arrangedValues {\n  key: string\n  start: number[] | unknown[]\n  current: unknown[]\n  end: number[] | unknown[]\n}\n\ninterface Animation {\n  datas: dataType\n  duration: number\n  easing: EasingFunctionNames\n  onComplete?: () => void\n  onUpdate?: () => void\n  values: arrangedValues[]\n  delay: number\n  properties: AnimationProperties\n  isStarted: boolean\n  isLast?: boolean\n  isFinished?: boolean\n}\n\nexport default class Timeline {\n  easing: EasingFunctionNames\n  options: TimelineOptions\n  onUpdate: () => void\n  onComplete: () => void\n  delay: number\n  isFinished: boolean\n  lastIndex: number\n  isWindowFocus: boolean\n  animations: Animation[]\n  startTime?: Date\n  oldTime?: Date\n  time: number\n\n  constructor(options: TimelineOptions = {}) {\n    this.easing = options.easing || 'linear'\n    this.options = options\n    this.onUpdate = options.onUpdate || function () {}\n    this.onComplete = options.onComplete || function () {}\n\n    this.delay = options.delay || 0\n\n    this.isFinished = false\n\n    this.lastIndex = -1\n\n    this.isWindowFocus = true\n\n    this.animations = []\n    this.time = 0\n  }\n\n  to(_datas: dataType, duration: number, properties: AnimationProperties, _delay: number): this {\n    this._to(_datas, duration, properties, _delay)\n    return this\n  }\n\n  private _to(_datas: dataType, duration: number, properties: AnimationProperties, _delay: number): Animation {\n    let delay = 0\n    if (!isNaN(_delay)) {\n      delay = _delay\n    } else {\n      if (this.animations.length > 0) {\n        const prevAnim = this.animations[this.animations.length - 1]\n        if (prevAnim) {\n          delay = prevAnim.duration + prevAnim.delay\n        }\n      }\n    }\n\n    delay += this.delay\n    const datas = Array.isArray(_datas) ? _datas : [_datas]\n\n    const animation: Animation = {\n      datas,\n      duration,\n      easing: properties.easing || this.easing,\n      onComplete: properties.onComplete,\n      onUpdate: properties.onUpdate,\n      values: [],\n      delay,\n      properties,\n      isStarted: false,\n    }\n\n    this.animations.push(animation)\n\n    let longestTime = 0\n\n    for (let index = 0; index < this.animations.length; index++) {\n      const item = this.animations[index]\n      if (!item) continue\n      const t = item.duration + item.delay\n      if (longestTime < t) {\n        longestTime = t\n        this.lastIndex = index\n      }\n\n      item.isLast = false\n    }\n\n    return animation\n  }\n\n  start() {\n    if (this.lastIndex === -1) return\n    this.startTime = new Date()\n    this.oldTime = new Date()\n    const lastAnimation = this.animations[this.lastIndex]\n    if (lastAnimation) lastAnimation.isLast = true\n    window.addEventListener('visibilitychange', this.onVisiblitychange)\n\n    this.animate()\n  }\n\n  animate = () => {\n    const currentTime = new Date()\n\n    if (!this.isWindowFocus) {\n      this.oldTime = currentTime\n    }\n\n    if (this.oldTime) {\n      const delta = currentTime.getTime() - this.oldTime.getTime()\n      this.time += delta\n    }\n\n    this.oldTime = currentTime\n\n    for (const item of this.animations) {\n      const {datas, duration, easing, values, delay} = item\n\n      if (this.time > delay && !item.isFinished) {\n        if (!item.isStarted) {\n          item.isStarted = true\n          this.arrangeDatas(item)\n        }\n        const startTime = 0\n        const endTime = duration\n\n        let progress = this.calcProgress(startTime, endTime, this.time - delay)\n        progress = EASE[easing](progress)\n\n        for (let i = 0; i < values.length; i++) {\n          const v = values[i]\n          if (!v) continue\n          for (let j = 0; j < datas.length; j++) {\n            const d = datas[j]\n            v.current[j] = this.calcLerp(v.start[j]! as number, v.end[j]! as number, progress)\n\n            if (typeof d === 'object' && d !== null) {\n              d[v.key as keyof typeof d] = v.current[j] as never\n            }\n          }\n        }\n\n        if (item.onUpdate) {\n          item.onUpdate()\n        }\n\n        if (progress === 1) {\n          item.isFinished = true\n          if (item.onComplete) item.onComplete()\n          if (item.isLast) {\n            this.isFinished = true\n            return\n          }\n        }\n      }\n    }\n\n    if (!this.isFinished) {\n      this.onUpdate()\n      requestAnimationFrame(this.animate)\n    } else {\n      window.removeEventListener('visibilitychange', this.onVisiblitychange)\n      this.onComplete()\n    }\n  }\n\n  arrangeDatas(animation: Animation) {\n    const {properties, datas, values} = animation\n    for (const key in properties) {\n      let index = 0\n      const start: unknown[] = []\n      const current: unknown[] = []\n      const end = []\n      switch (key) {\n        case 'easing':\n        case 'onComplete':\n        case 'onUpdate':\n          break\n        default:\n          for (const item of datas) {\n            if (item !== null && typeof item === 'object') {\n              start[index] = item[key as keyof typeof item]\n              current[index] = item[key as keyof typeof item]\n              end[index] = properties[key as keyof typeof properties]\n              index++\n            }\n          }\n\n          values.push({\n            key,\n            start,\n            current,\n            end,\n          })\n          break\n      }\n    }\n  }\n\n  calcProgress(start: number, end: number, currentTime: number) {\n    const p = (currentTime - start) / (end - start)\n    return Math.max(0, Math.min(1, p))\n  }\n\n  calcLerp(start: number, end: number, progress: number) {\n    return start + (end - start) * progress\n  }\n\n  onVisiblitychange = () => {\n    if (document.visibilityState === 'visible') {\n      this.isWindowFocus = true\n    } else {\n      this.isWindowFocus = false\n    }\n  }\n}\n","import type {Vector3, Color} from 'three'\nimport {Mesh, ShaderMaterial, Vector2, Vector4, Group, DoubleSide} from 'three'\n\nimport assets from './assets'\nimport common from './common'\nimport shaders from './glsl/shaders'\n\nimport {CustomLineGeometry} from './custom-line-geometry'\nimport {commonUniforms} from './utils/common-uniforms'\n\nimport Timeline from './utils/timeline'\nimport type {Line} from './params/hero'\n\nexport default class Lines {\n  lineParams: Line[]\n  noAnimation: boolean\n  group: Group\n  lineWidthScale: number\n  vertexNum: number\n  uniforms: {[uniform: string]: {value: number | Vector2 | Vector4 | Vector3 | Color}}\n\n  constructor(lineParams: Line[], lineWidthScale: number = 1, noAnimation: boolean = false) {\n    this.lineParams = lineParams\n    this.noAnimation = noAnimation\n    this.group = new Group()\n    this.lineWidthScale = lineWidthScale\n\n    this.vertexNum = 200\n\n    this.uniforms = {\n      uSegmentNum: {\n        value: 100,\n      },\n      uResolution: {\n        value: common.fbo_screenSize,\n      },\n      ...commonUniforms,\n    }\n  }\n\n  init() {\n    for (const params of this.lineParams) {\n      const assetData = assets.svgs[params.name]\n      const _lineWidthScale = params.lineWidth || 1\n      const paths = assetData?.paths\n      const group = new Group()\n      this.group.add(group)\n      group.position.copy(params.position)\n      group.rotation.copy(params.rotation)\n\n      const roundGroups = new Group()\n      group.add(roundGroups)\n\n      const tl = new Timeline({\n        easing: 'easeOutCubic',\n        delay: common.delay.main,\n      })\n\n      if (paths) {\n        for (let index = 0; index < paths.length; index++) {\n          const shapePath = paths[index]\n\n          if (!shapePath) continue\n          const path = shapePath.currentPath || shapePath.subPaths[0]\n          const lineIndex = index / (paths.length - 1)\n\n          const geometry = new CustomLineGeometry(this.vertexNum, path, -1, lineIndex, false)\n          const alphaMapVector = new Vector2(0, 0)\n          const uniforms = {\n            uProgress: {\n              value: new Vector4(0, 0, 0, 0),\n            },\n          }\n\n          const _alpha = params.alpha || 1\n          const _blurRangeMin = 0.5\n\n          const gradient = params.gradient[index] || new Vector4(0, 0.25, 0.75, 1)\n          const material = this.createMaterial(\n            params.scale,\n            alphaMapVector,\n            uniforms,\n            _lineWidthScale,\n            _alpha,\n            _blurRangeMin,\n            gradient,\n          )\n          // const timelineParams = nodeParams.timeline[index];\n\n          if (this.noAnimation) {\n            uniforms.uProgress.value.set(1, 1, 1, 1)\n          } else {\n            tl.to(\n              [uniforms.uProgress.value],\n              4000,\n              {\n                x: 1,\n              },\n              500,\n            )\n              .to(\n                [uniforms.uProgress.value],\n                4000,\n                {\n                  y: 1,\n                },\n                500 + 100,\n              )\n              .to(\n                [uniforms.uProgress.value],\n                3000,\n                {\n                  z: 1,\n                },\n                500 + 1000,\n              )\n          }\n\n          const mesh = new Mesh(geometry, material)\n          mesh.frustumCulled = false\n          mesh.renderOrder = 0\n          mesh.position.z = 0.00001 * index\n          group.add(mesh)\n        }\n      }\n      tl.start()\n    }\n  }\n\n  createMaterial(\n    scale: number,\n    alphaMapVector: Vector2,\n    uniforms: {[uniform: string]: {value: number | Vector2 | Vector4 | Vector3 | Color}},\n    _lineWidthScale = 1,\n    _alpha = 1,\n    _blurRangeMin = 0.5,\n    gradient: Vector4,\n  ) {\n    return new ShaderMaterial({\n      vertexShader: shaders.lineVert,\n      fragmentShader: shaders.utils + shaders.lineFrag,\n      uniforms: {\n        ...this.uniforms,\n        ...uniforms,\n        uScale: {\n          value: scale,\n        },\n        uAlphaMapVector: {\n          value: alphaMapVector,\n        },\n        uLineWidth: {\n          value: this.lineWidthScale * 0.04 * _lineWidthScale,\n        },\n        uAlpha: {\n          value: _alpha,\n        },\n        uBlurRangeMin: {\n          value: _blurRangeMin,\n        },\n        uGradient: {\n          value: gradient,\n        },\n      },\n      side: DoubleSide,\n      transparent: true,\n    })\n  }\n}\n","import {Camera, Mesh, PlaneGeometry, ShaderMaterial, Vector2, WebGLRenderTarget} from 'three'\n\nimport common from './common'\nimport shaders from './glsl/shaders'\n\nexport default class GaussianBlur {\n  weight: number[]\n  blurRadius: number\n  vertical?: Mesh\n  horizontal?: Mesh\n  camera: Camera\n  step: Vector2\n  uniforms: {\n    uStep: {value: Vector2}\n    uWeight: {value: number[]}\n  }\n  defines: {\n    BLUR_RADIUS: number\n  }\n  originalFbo?: WebGLRenderTarget\n  blurFbos: WebGLRenderTarget[] = []\n  constructor(originalFbo: WebGLRenderTarget, blurRadius: number = 12) {\n    this.weight = []\n    this.blurRadius = blurRadius\n\n    this.camera = new Camera()\n    this.step = new Vector2()\n\n    this.uniforms = {\n      uStep: {\n        value: this.step,\n      },\n      uWeight: {\n        value: this.weight,\n      },\n    }\n\n    this.defines = {\n      BLUR_RADIUS: this.blurRadius,\n    }\n\n    this.originalFbo = originalFbo\n    this.init()\n  }\n\n  init() {\n    if (!this.originalFbo) return\n    this.blurFbos.push(\n      new WebGLRenderTarget(this.originalFbo.width, this.originalFbo.height),\n      new WebGLRenderTarget(this.originalFbo.width, this.originalFbo.height),\n    )\n\n    this.step.set(1 / this.originalFbo.width, 1 / this.originalFbo.height)\n\n    this.makeWeight()\n\n    this.vertical = new Mesh(\n      new PlaneGeometry(2, 2),\n      new ShaderMaterial({\n        vertexShader: shaders.screenVert,\n        fragmentShader: shaders.blurFrag,\n        uniforms: {\n          ...this.uniforms,\n          uDiffuse: {\n            value: this.originalFbo.texture,\n          },\n          uStepSize: {\n            value: new Vector2(0.0, 1.0),\n          },\n        },\n        defines: this.defines,\n      }),\n    )\n\n    this.horizontal = new Mesh(\n      new PlaneGeometry(2, 2),\n      new ShaderMaterial({\n        vertexShader: shaders.screenVert,\n        fragmentShader: shaders.blurFrag,\n        uniforms: {\n          ...this.uniforms,\n          uDiffuse: {\n            value: this.blurFbos[0] ? this.blurFbos[0].texture : null,\n          },\n          uStepSize: {\n            value: new Vector2(1.0, 0.0),\n          },\n        },\n        defines: this.defines,\n      }),\n    )\n  }\n\n  makeWeight() {\n    this.weight = []\n    let t = 0.0\n\n    for (let i = this.blurRadius - 1; i >= 0; i--) {\n      const r = 1.0 + 2.0 * i\n      let w = Math.exp((-0.5 * (r * r)) / (this.blurRadius * this.blurRadius))\n      this.weight.push(w)\n      if (i > 0) {\n        w *= 2.0\n      }\n      t += w\n    }\n\n    for (let i = 0; i < this.weight.length; i++) {\n      this.weight[i]! /= t\n    }\n\n    this.uniforms.uWeight.value = this.weight\n  }\n\n  resize() {\n    if (!this.originalFbo) return\n    for (let i = 0; i < this.blurFbos.length; i++) {\n      if (this.blurFbos[i]) {\n        this.blurFbos[i]?.setSize(this.originalFbo.width, this.originalFbo.height)\n      }\n    }\n\n    if (this.step) {\n      this.step?.set(1 / this.originalFbo.width, 1 / this.originalFbo.height)\n    }\n  }\n\n  update() {\n    if (this.vertical && this.blurFbos[0]) {\n      common.renderer?.setRenderTarget(this.blurFbos[0])\n      common.renderer?.render(this.vertical, this.camera)\n    }\n\n    if (this.horizontal && this.blurFbos[1]) {\n      common.renderer?.setRenderTarget(this.blurFbos[1])\n      common.renderer?.render(this.horizontal, this.camera)\n    }\n  }\n}\n","import {Scene, Vector4, PlaneGeometry, ShaderMaterial, Mesh} from 'three'\nimport common from './common'\nimport shaders from './glsl/shaders'\n\nimport {commonUniforms} from './utils/common-uniforms'\n\nexport default class Halo {\n  scene: Scene = new Scene()\n  num: number = 6\n  progress: Vector4 = new Vector4(0, 0, 0, 0)\n  constructor() {\n    this.init()\n  }\n\n  init() {\n    for (let i = 0; i < this.num; i++) {\n      const r = Math.PI * (i / this.num) * 2\n      const geometry = new PlaneGeometry(2.0, 2.0)\n      const material = new ShaderMaterial({\n        vertexShader: shaders.haloOrbVert,\n        fragmentShader: shaders.utils + shaders.haloOrbFrag,\n        uniforms: {\n          ...commonUniforms,\n          uRandom: {\n            value: new Vector4(Math.random(), Math.random(), Math.random(), Math.random()),\n          },\n          uResolution: {\n            value: common.fbo_screenSize,\n          },\n          uProgress: {\n            value: this.progress,\n          },\n        },\n        depthTest: false,\n        depthWrite: false,\n        transparent: true,\n      })\n\n      const mesh = new Mesh(geometry, material)\n      this.scene.add(mesh)\n\n      mesh.position.z += 0.1 * i\n      mesh.userData.radian = r\n      mesh.userData.rotationSpeed = 0.2 + 0.3 * Math.random()\n    }\n  }\n\n  update() {\n    for (const mesh of this.scene.children) {\n      mesh.userData.radian -= common.delta * mesh.userData.rotationSpeed * 4.0\n\n      const x = Math.cos(mesh.userData.radian) * 0.1\n      const y = Math.sin(mesh.userData.radian) * 0.1\n\n      mesh.position.x = x\n      mesh.position.y = y\n    }\n  }\n}\n","import {Vector4} from 'three'\nexport default [\n  new Vector4(0.15, 0.39, 0.7371, 0.7597),\n  new Vector4(0.15, 0.39, 0.5295, 0.6174),\n  new Vector4(0.0, 0.1, 0.4955, 0.5771),\n  new Vector4(0.0, 0.1, 0.4955, 0.5771),\n  new Vector4(0.0, 0.1, 0.4955, 0.5771),\n\n  new Vector4(0.0, 0.1, 0.4955, 0.5771),\n  new Vector4(0.0, 0.1, 0.4955, 0.5771),\n  new Vector4(0.0, 0.1, 0.4955, 0.5771),\n  new Vector4(0, 0.1025, 0.388, 0.6788),\n  new Vector4(0, 0.1025, 0.7144, 0.9784),\n\n  new Vector4(0, 0.1025, 0.7144, 0.9784),\n  new Vector4(0, 0.1025, 0.7144, 0.9784),\n  new Vector4(0, 0.1025, 0.7144, 0.9784),\n  new Vector4(0.15, 0.39, 0.7371, 0.7597),\n  new Vector4(0.15, 0.39, 0.5295, 0.8),\n\n  new Vector4(0.1, 0.2, 0.3, 0.4),\n  new Vector4(0.1, 0.2, 0.4, 0.5),\n  new Vector4(0.0, 0.1, 0.4955, 0.5771),\n  new Vector4(0.1, 0.2, 0.4955, 0.5771),\n  new Vector4(0.0, 0.1, 0.4955, 0.5771),\n\n  new Vector4(0.0, 0.1, 0.4, 0.5),\n  new Vector4(0.1, 0.2, 0.9563, 0.9921),\n  new Vector4(0, 0.1025, 0.7144, 0.9784),\n  new Vector4(0.1, 0.2, 0.7144, 0.9784),\n  new Vector4(0.2, 0.3, 0.7144, 0.9784),\n]\n","import {Vector3, Euler} from 'three'\nimport gradientParams from './gitlines-gradient-params'\n\ninterface Timeline {\n  duration: number\n  delay: number\n}\n\nexport interface Line {\n  name: string\n  position: THREE.Vector3\n  rotation: THREE.Euler\n  scale: number\n  lineWidth: number\n  timeline: Timeline | null\n  gradient: typeof gradientParams\n  alpha?: number\n}\n\ninterface Group {\n  lines: Line[]\n  position: THREE.Vector3\n  rotation: THREE.Euler\n}\n\nexport default {\n  mouseParallax: [0.1, 0.1] as [number, number],\n  group: {\n    lines: [\n      {\n        name: 'gitlines1',\n        position: new Vector3(0.0, 0.0, 0.0),\n        rotation: new Euler(0, 0, 0),\n        scale: 3.8 * 0.8,\n        lineWidth: 0.7,\n        gradient: gradientParams,\n      },\n      {\n        name: 'gitlines2',\n        position: new Vector3(0.0, 0.0, 0.0),\n        rotation: new Euler(0, 0, 0),\n        scale: 3.8 * 0.8,\n        lineWidth: 0.4,\n        alpha: 0.1,\n        gradient: gradientParams,\n      },\n    ],\n    position: new Vector3(0, 0, 0),\n    rotation: new Euler(0, 0, 0),\n  } as Group,\n}\n","import {Vector2, Vector4, Scene, Group, WebGLRenderTarget, Mesh, PlaneGeometry, ShaderMaterial, Color} from 'three'\n\nimport common from './common'\nimport Shield from './shield'\nimport mouseMng from './mouse'\nimport shaders from './glsl/shaders'\nimport Lines from './lines'\nimport Timeline from './utils/timeline'\nimport GaussianBlur from './gaussian-blur'\nimport {commonUniforms} from './utils/common-uniforms'\n\nimport Halo from './halo'\nimport heroParams from './params/hero'\n\nexport default class MainScene {\n  scene_whole: Scene = new Scene()\n  scene_main: Scene = new Scene()\n  scene_mask: Scene = new Scene()\n  scene_shield: Scene = new Scene()\n  scene_gitlines: Scene = new Scene()\n  group_main: Group = new Group()\n  mouseIntensity: Vector4 = new Vector4(0, 0, 0, 0)\n  maskRatio: number = 0.5\n  circleRatio: number = 0.3\n  haloRatio: number = 0.2\n  progress: Vector4 = new Vector4(0, 0, 0, 0)\n  fbo_gitlines: WebGLRenderTarget\n  fbo_shield: WebGLRenderTarget\n  circleResolution: Vector2\n  fbo_mask: WebGLRenderTarget\n  fbo_halo: WebGLRenderTarget\n  fbo_shieldBack: WebGLRenderTarget\n  fbo_circle: WebGLRenderTarget\n  gaussianBlur: GaussianBlur\n  plane_circle?: Mesh\n  output?: Mesh\n  plane_maskImage?: Mesh\n  shield?: Shield\n  shieldBackGroup?: Group\n  halo?: Halo\n\n  constructor() {\n    this.scene_main.add(this.group_main)\n    this.fbo_gitlines = new WebGLRenderTarget(common.fbo_screenSize.x, common.fbo_screenSize.y)\n    this.fbo_shield = new WebGLRenderTarget(common.fbo_screenSize.x, common.fbo_screenSize.y)\n\n    this.circleResolution = new Vector2(\n      Math.round(common.fbo_screenSize.x * this.circleRatio),\n      Math.round(common.fbo_screenSize.y * this.circleRatio),\n    )\n\n    this.fbo_mask = new WebGLRenderTarget(\n      common.fbo_screenSize.x * this.maskRatio,\n      common.fbo_screenSize.y * this.maskRatio,\n    )\n    this.fbo_halo = new WebGLRenderTarget(\n      common.fbo_screenSize.x * this.haloRatio,\n      common.fbo_screenSize.y * this.haloRatio,\n    )\n    this.fbo_shieldBack = new WebGLRenderTarget(common.fbo_screenSize.x, common.fbo_screenSize.y)\n    this.fbo_circle = new WebGLRenderTarget(this.circleResolution.x, this.circleResolution.y)\n    this.gaussianBlur = new GaussianBlur(this.fbo_mask, 30)\n  }\n\n  init() {\n    const progress = new Vector4(0, 0, 0, 0)\n\n    const tl = new Timeline({\n      delay: common.delay.middle,\n    })\n    tl.to([progress], 2000, {x: 1.0, easing: 'easeOutCubic'}, 0.0)\n    tl.start()\n\n    this.plane_circle = new Mesh(\n      new PlaneGeometry(2, 2),\n      new ShaderMaterial({\n        vertexShader: shaders.screenVert,\n        fragmentShader: shaders.circleFrag,\n        uniforms: {\n          uResolution: {\n            value: this.circleResolution,\n          },\n          uTime: commonUniforms.uTime,\n          uBeatSpeed: commonUniforms.uBeatSpeed,\n        },\n      }),\n    )\n\n    this.output = new Mesh(\n      new PlaneGeometry(2, 2),\n      new ShaderMaterial({\n        vertexShader: shaders.screenVert,\n        fragmentShader: shaders.utils + shaders.outputFrag,\n        uniforms: {\n          uShield: {\n            value: this.fbo_shield.texture,\n          },\n          uGitlines: {\n            value: this.fbo_gitlines.texture,\n          },\n          uMask: {\n            value: this.fbo_mask.texture,\n          },\n          uBgColor: commonUniforms.uBgColor,\n          uGlowColor: {\n            value: new Color(0x6bd6d0),\n          },\n          uBlur: {\n            value: this.gaussianBlur.blurFbos[1] ? this.gaussianBlur.blurFbos[1].texture : null,\n          },\n          uHalo: {\n            value: this.fbo_halo.texture,\n          },\n          uShieldBack: {\n            value: this.fbo_shieldBack.texture,\n          },\n          uTime: commonUniforms.uTime,\n          uBeatSpeed: commonUniforms.uBeatSpeed,\n          uProgress: {\n            value: this.progress,\n          },\n          uColor1: {\n            value: new Color(0x2084da),\n          },\n          uColor2: {\n            value: new Color(0x52b9d2),\n          },\n          uColor3: {\n            value: new Color(0x94dd3e),\n          },\n          uColor4: {\n            value: new Color(0x2637d4),\n          },\n          uResolution: {\n            value: common.fbo_screenSize,\n          },\n        },\n        transparent: true,\n      }),\n    )\n\n    this.scene_whole.add(this.output)\n\n    this.plane_maskImage = new Mesh(\n      new PlaneGeometry(2, 2),\n      new ShaderMaterial({\n        vertexShader: shaders.screenVert,\n        fragmentShader: shaders.maskImageFrag,\n        uniforms: {\n          uShield: {\n            value: this.fbo_shield.texture,\n          },\n          uGitlines: {\n            value: this.fbo_gitlines.texture,\n          },\n          uCircle: {\n            value: this.fbo_circle.texture,\n          },\n          uResolution: {\n            value: common.fbo_screenSize,\n          },\n          uGlowColor: {\n            value: new Color(0x6bd6d0),\n          },\n        },\n        transparent: true,\n      }),\n    )\n\n    this.scene_mask.add(this.plane_maskImage)\n\n    this.initShieldScene()\n    this.initGirlinesScene()\n\n    this.halo = new Halo()\n\n    this.createOpening()\n  }\n\n  createOpening() {\n    if (this.shield && this.halo) {\n      const tl = new Timeline({\n        delay: 0,\n      })\n\n      const scale = 1.25\n\n      tl.to([this.shield.lightPos], 1000 * scale, {z: 0.1, easing: 'easeOutCubic'}, 0.0)\n      tl.to([this.shield.progress], 2000 * scale, {y: 1, easing: 'easeOutCubic'}, 0.0)\n      tl.to([this.shield.progress], 3000 * scale, {x: 1, easing: 'easeOutCubic'}, 600 * scale)\n      tl.to([this.shield.progress], 3000 * scale, {z: 1, easing: 'easeOutCubic'}, 800 * scale)\n      tl.to([this.halo.progress], 4000 * scale, {x: 1, easing: 'easeOutCubic'}, 0.0)\n      tl.to([this.progress], 1000 * scale, {x: 1, easing: 'easeOutCubic'}, 500 * scale)\n      tl.to([this.mouseIntensity], 1000 * scale, {x: 1, easing: 'easeOutCubic'}, 2000 * scale)\n\n      tl.start()\n    }\n  }\n\n  initShieldScene() {\n    const group = new Group()\n    this.scene_shield.add(group)\n\n    group.position.copy(heroParams.group.position)\n    group.rotation.copy(heroParams.group.rotation)\n\n    const tl = new Timeline({\n      delay: common.delay.main,\n    })\n\n    this.shield = new Shield()\n    this.shield.init()\n\n    this.shieldBackGroup = this.shield.shieldBackGroup\n\n    this.shield.group.position.set(0, -0.05, 0.0)\n    this.shield.group.scale.set(6, 6, 6)\n\n    this.shieldBackGroup.position.copy(this.shield.group.position)\n    this.shieldBackGroup.scale.set(this.shield.group.scale.x, this.shield.group.scale.y, this.shield.group.scale.z)\n\n    group.add(this.shield.group)\n\n    tl.start()\n  }\n\n  initGirlinesScene() {\n    const lines = new Lines(heroParams.group.lines)\n    this.scene_gitlines.add(lines.group)\n    lines.init()\n  }\n\n  resize() {\n    this.circleResolution.set(\n      Math.round(common.fbo_screenSize.x * this.circleRatio),\n      Math.round(common.fbo_screenSize.y * this.circleRatio),\n    )\n\n    this.fbo_gitlines.setSize(common.fbo_screenSize.x, common.fbo_screenSize.y)\n    this.fbo_shield.setSize(common.fbo_screenSize.x, common.fbo_screenSize.y)\n\n    this.fbo_mask.setSize(common.fbo_screenSize.x * this.maskRatio, common.fbo_screenSize.y * this.maskRatio)\n    this.fbo_circle.setSize(this.circleResolution.x, this.circleResolution.y)\n\n    this.fbo_halo.setSize(common.fbo_screenSize.x * this.haloRatio, common.fbo_screenSize.y * this.haloRatio)\n\n    this.fbo_shieldBack.setSize(common.fbo_screenSize.x, common.fbo_screenSize.y)\n\n    this.gaussianBlur.resize()\n  }\n\n  update() {\n    if (this.shield) {\n      this.shield.update()\n    }\n\n    const x = mouseMng.pos.current2.x * heroParams.mouseParallax[0]\n    const y = mouseMng.pos.current2.y * heroParams.mouseParallax[0]\n\n    common.camera.position.x = x * this.mouseIntensity.x\n    common.camera.position.y = y * this.mouseIntensity.x\n    common.camera.position.z = common.cameraZ\n\n    const l = common.camera.position.length()\n    common.camera.position.multiplyScalar(1 / (l / common.cameraZ))\n    common.camera.lookAt(common.center)\n\n    common.camera2.position.x = mouseMng.pos.current2.x * heroParams.mouseParallax[1]\n    common.camera2.position.y = mouseMng.pos.current2.y * heroParams.mouseParallax[1]\n    common.camera2.lookAt(common.center)\n  }\n\n  renderMainScene() {\n    if (this.plane_circle) {\n      common.renderer?.setClearColor(0x000000, 1.0)\n      common.renderer?.setRenderTarget(this.fbo_circle)\n      common.renderer?.render(this.plane_circle, common.camera)\n    }\n\n    common.renderer?.setClearColor(0xffffff, 0.0)\n    common.renderer?.setRenderTarget(this.fbo_gitlines)\n    common.renderer?.render(this.scene_gitlines, common.camera)\n\n    common.renderer?.setClearColor(0xffffff, 0.0)\n    common.renderer?.setRenderTarget(this.fbo_shield)\n    common.renderer?.render(this.scene_shield, common.camera)\n\n    if (this.shieldBackGroup) {\n      common.renderer?.setRenderTarget(this.fbo_shieldBack)\n      common.renderer?.render(this.shieldBackGroup, common.camera)\n    }\n\n    common.renderer?.setClearColor(0x000000, 1.0)\n    common.renderer?.setRenderTarget(this.fbo_mask)\n    common.renderer?.render(this.scene_mask, common.camera)\n\n    if (this.halo) {\n      this.halo.update()\n      common.renderer?.setClearColor(0xffffff, 0.0)\n      common.renderer?.setRenderTarget(this.fbo_halo)\n      common.renderer?.render(this.halo.scene, common.camera)\n    }\n\n    this.gaussianBlur.update()\n  }\n\n  renderWholeScene() {\n    common.renderer?.setClearColor(0x000000)\n    common.renderer?.setRenderTarget(null)\n    common.renderer?.render(this.scene_whole, common.camera)\n  }\n}\n"],"names":["mainScene","Common","init","$wrapper","$canvas","pixelRatio","Math","min","window","devicePixelRatio","renderer","WebGLRenderer","alpha","canvas","appendChild","setPixelRatio","clock","Clock","start","resize","wrapperRect","getBoundingClientRect","wrapperOffset","set","left","top","width","height","screenSize_old","copy","screenSize","fbo_screenSize","aspect","camera","camera2","innerWidth","cameraZ","updateProjectionMatrix","setSize","x","y","getEase","scale","delta","update","getDelta","time","constructor","Vector2","isMobile","center","Vector3","PerspectiveCamera","delay","bg","middle","main","position","Assets","load","callback","Promise","all","loadImages","loadGltfs","loadSvgs","then","loader","GLTFLoader","Object","values","gltfs","map","gltf","resolve","reject","src","loadedGltf","scene","undefined","error","TextureLoader","images","image","texture","flipY","SVGLoader","svgs","svg","paths","data","imagePath","shield","matcap4","gitlines1","gitlines2","utils","blurFrag","circleFrag","haloOrbFrag","haloOrbVert","lineFrag","lineVert","maskImageFrag","outputFrag","screenVert","shield_backFrag","shield_backVert","shieldFrag","shieldVert","commonUniforms","uColor1","value","Color","uColor2","uColor3","uColor4","uLightColor","uTime","uBgColor","uColorMap","Vector4","uLightPos","uLightIntensity","uBeatSpeed","Shield","createMesh","uniforms","uMatcap","assets","traverse","object","type","geometry","material","createMaterial","isCheck","name","mesh","Mesh","group","add","material_back","createMaterial_back","mesh_back","shieldBackGroup","ShaderMaterial","vertexShader","shaders","fragmentShader","transparent","defines","CHECK","Group","progress","lightPos","uRandom","random","uResolution","common","uProgress","MouseMng","addEventListener","event","clientX","clientY","updateMousePos","touches","func","pos","target","max","mousemoveFuncs","addMousemoveFunc","push","_c","current","clone","_c2","current2","lerp","diff","subVectors","diff2","originalPos","dimensions","CustomLineGeometry","BufferGeometry","restrictT","t","isClosed","floor","getPoint","vec2","path","heightSegments","pathDist","lIndex","parameters","widthSegments","gridX","gridY","gridX1","gridY1","segment_width","segment_height","indices","vertices","vertices_previous","vertices_next","tangentScales","linePositions","vertexIndicies","iy","lineIndex","t0","t1","t2","vertex_0","vertex_1","vertex_2","tangentScale","ix","a","b","c","d","setIndex","setAttribute","Float32BufferAttribute","EASE","linear","easeInSine","cos","PI","easeOutSine","sin","easeInOutSine","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInExpo","pow","easeOutExpo","easeInOutExpo","scaledTime","scaledTime1","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","easeInBack","magnitude","easeOutBack","easeInOutBack","scaledTime2","s","easeInElastic","p","asin","easeOutElastic","easeInOutElastic","easeOutBounce","easeInBounce","easeInOutBounce","Timeline","to","_datas","duration","properties","_delay","_to","isNaN","animations","length","prevAnim","animation","datas","Array","isArray","easing","onComplete","onUpdate","isStarted","longestTime","index","item","lastIndex","isLast","startTime","Date","oldTime","lastAnimation","onVisiblitychange","animate","arrangeDatas","key","end","calcProgress","currentTime","calcLerp","options","isWindowFocus","getTime","isFinished","i","v","j","removeEventListener","requestAnimationFrame","document","visibilityState","Lines","params","lineParams","assetData","_lineWidthScale","lineWidth","rotation","roundGroups","tl","shapePath","currentPath","subPaths","vertexNum","alphaMapVector","_alpha","gradient","noAnimation","z","frustumCulled","renderOrder","_blurRangeMin","uScale","uAlphaMapVector","uLineWidth","lineWidthScale","uAlpha","uBlurRangeMin","uGradient","side","DoubleSide","uSegmentNum","GaussianBlur","originalFbo","blurFbos","WebGLRenderTarget","step","makeWeight","vertical","PlaneGeometry","uDiffuse","uStepSize","horizontal","weight","blurRadius","r","w","exp","uWeight","setRenderTarget","render","Camera","uStep","BLUR_RADIUS","Halo","num","depthTest","depthWrite","userData","radian","rotationSpeed","children","Scene","mouseParallax","lines","Euler","gradientParams","MainScene","plane_circle","circleResolution","output","uShield","fbo_shield","uGitlines","fbo_gitlines","uMask","fbo_mask","uGlowColor","uBlur","gaussianBlur","uHalo","fbo_halo","uShieldBack","fbo_shieldBack","scene_whole","plane_maskImage","uCircle","fbo_circle","scene_mask","initShieldScene","initGirlinesScene","halo","createOpening","mouseIntensity","scene_shield","heroParams","scene_gitlines","round","circleRatio","maskRatio","haloRatio","mouseMng","l","multiplyScalar","lookAt","renderMainScene","setClearColor","renderWholeScene","scene_main","group_main","assetLoaded","observe","canvasElement","canvasWrapper","querySelector","animationFrameId","isVisible","observer","IntersectionObserver","entries","entry","isIntersecting","tick","pause","timeline","cancelAnimationFrame"],"sourceRoot":""}