<% content_for :head do %>
  <%= stylesheet_bundle 'code_scanning_alert_list_action_menu_component' %>
<% end %>
<% if list_only %>
  <% component = Primer::Alpha::ActionMenu::List %>
  <% constructor_args = { menu_id: @id, select_variant: select_variant } %>
<% else %>
  <% component = Primer::Alpha::ActionMenu %>
  <% constructor_args = {
    anchor_align: :end,
    menu_id: @id,
    select_variant: select_variant,
    preload: true,
    src: data_path,
    pr: @no_right_padding ? 0 : 3,
    test_selector: @test_selector || @id
  } %>
<% end %>

<%= render(
  component.new(
    **constructor_args
  )
) do |menu| %>
  <% unless list_only %>
    <% menu.with_show_button(color: :muted, scheme: :link, underline: false, font_weight: :normal) do |button|
      button.with_trailing_visual_icon(icon: "triangle-down")
      @caption
    end %>
  <% end %>
  <% if options.present? && data_path.nil? %>
    <% if @show_clear
      clear_args = {
        label_arguments: { color: :subtle },
        data: { pjax: true },
        href: @clear_path,
        active: false,
        test_selector: "#{@caption.downcase}-clear-filter",
        truncate_label: true,
        label: @clear_text,
        classes: "#{@caption.downcase}-clear-filter",
      }
    end %>
    <%#
      If there are multiple sub-lists, show the clear option
      above them all.
    %>
    <% if @show_clear && options.count > 1  %>
      <% menu.with_item(**clear_args) %>
    <% end %>
    <% options.each do |heading, menu_options| %>
      <% menu.with_group do |group| %>
        <%# If there's just one sub-list, show the clear item in it %>
        <% if @show_clear && options.count == 1 %>
          <% group.with_item(**clear_args) %>
        <% end %>
        <% group.with_heading(title: heading, align_items: :flex_start, test_selector: "filter-heading") %>
        <% menu_options.each do |option| %>
          <% group.with_item(
            href: option[:url],
            active: option[:selected],
            label: option[:label],
            truncate_label: true,
            test_selector: "filter-label"
          ) do |item| %>
            <% item.with_leading_visual_icon(icon: option[:octicon], style: "color:#{option[:octicon_color]};", mr: 2) if option[:octicon].present? %>
            <% item.with_description(color: :muted, test_selector: "filter-sublabel").with_content(option[:sublabel]) if option[:sublabel].present? %>
            <% item.with_trailing_visual_counter(count: option[:count], align_self: :center, test_selector: "filter-count") if option[:count].present? %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% end %>
