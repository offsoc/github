<%# erblint:counter DeprecatedComponentsCounter 4 %>
<%
name = 'Code Search Index'
%>
<%
view = Stafftools::RepositoryViews::Search::CodesearchView.new(:repository => repository)
%>
<% if view.purge? %>
  <%= form_tag gh_purge_code_stafftools_repository_path(repository), :method => 'post' do %>
    <%= render Primer::ButtonComponent.new(type: :submit, classes: "boxed-action") do %>Purge Code<% end %>
  <% end %>
  <h4 class="attention"><%= primer_octicon(:alert, mr: 1, classes: "error") %><%= name %></h4>
  <p><%= view.purge_reason %></p>
<% end %>
<% if view.reindex? %>
  <%= form_tag gh_reindex_code_stafftools_repository_path(repository), :method => 'post' do %>
    <%= render Primer::ButtonComponent.new(type: :submit, classes: "boxed-action") do %>Reindex Code<% end %>
  <% end %>
  <h4 class="attention"><%= primer_octicon(:alert, mr: 1, classes: "error") %><%= name %></h4>
  <p><%= view.reindex_reason %></p>
<% elsif view.fork_eligible_for_enabling_code_search? %>
  <%= form_tag gh_enable_code_search_stafftools_repository_path(repository), :method => "post" do %>
    <%= render Primer::ButtonComponent.new(type: :submit, classes: "boxed-action") do %>Enable code search<% end %>
  <% end %>
  <h4><%= name %></h4>
  <p>This repository is a fork, but has unique code that can be made searchable.</p>
<% elsif view.fork_ineligible_for_enabling_code_search? %>
  <h4><%= name %></h4>
  <p>This repository is a fork, but has no unique code to index.</p>
<% elsif view.searchable? %>
  <%= form_tag gh_reindex_code_stafftools_repository_path(repository), :method => 'post' do %>
    <%= render Primer::ButtonComponent.new(type: :submit, classes: "boxed-action") do %>Reindex Code<% end %>
  <% end %>
  <h4><%= name %></h4>
  <p>The search index contains <%= pluralize(view.document_count, 'source code file') %>.</p>
<% else %>
  <h4><%= name %></h4>
  <p>The search index is up to date. No action needs to be taken.</p>
<% end %>
