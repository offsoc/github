<%# erblint:counter DeprecatedComponentsCounter 1 %>
<% current_flags = filter.fetch(:flags, []) %>

<details class="details-reset details-overlay select-menu d-inline-block mb-2 mr-2">
  <%= render Primer::ButtonComponent.new(tag: :summary, classes: "select-menu-button") do %>
    <i>Flags:</i>
    <% if filter.key?(:flags) %>
      <%= applied_stafftools_sponsors_listing_filters(current_flags) %>
    <% else %>
      All
    <% end %>
  <% end %>

  <details-menu role="menu" class="select-menu-modal position-absolute right-0" style="z-index: 99;" preload><%# erblint:disable Primer::Accessibility::DetailsMenuMigration %>
    <div class="select-menu-header">
      <span class="select-menu-title">Filter by flag</span>
    </div>

    <div class="select-menu-list">
      <% all_params = { query: query, order: order, filter: filter.except(:flags) } %>
      <a href="?<%= all_params.to_query %>" class="<%= class_names(
        "select-menu-item",
        "selected" => filter[:flags].blank?,
      ) %>">
        <%= render Primer::Beta::Octicon.new(icon: "check", classes: "select-menu-item-icon") %>
        <span class="select-menu-item-text">All flags</span>
      </a>

      <% SponsorsListing::SPONSORABLE_FLAG_FILTERS.each do |key, value| %>
        <%
          flag = key.to_s
          new_params = { query: query, order: order, filter: sponsors_member_flag_filter(filter: filter, flag: flag) }
        %>

        <a href="?<%= new_params.to_query %>" class="<%= class_names(
          "select-menu-item",
          "selected" => current_flags.include?(flag),
        ) %>">
          <%= render Primer::Beta::Octicon.new(icon: "check", classes: "select-menu-item-icon") %>
          <span class="select-menu-item-text"><%= value %> - <%= flag.titleize %></span>
        </a>
      <% end %>
    </div>
  </details-menu>
</details>
