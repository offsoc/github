<% page_info \
  container_xl: true,
  title: "Dependabot rules",
  selected_link: :security_analysis %>

<%= render layout: "edit_repositories/edit" do %>
  <div <%= test_selector("dependabot-auto-dismiss-rules")%>>
    <%= render Primer::Beta::Subhead.new(display: :flex, justify_content: :space_between) do |component| %>
      <% component.with_heading(tag: :h2) do %>
        <a href="<%= repository_security_and_analysis_path %>">Code security and analysis</a> / Dependabot rules
        <% if current_repository.dependabot_custom_rules_writable? %>
          <div class="d-none d-lg-inline">
            <%= render Primer::Beta::Button.new(
              tag: :a,
              disabled: has_maximum_rules,
              href: new_dependabot_rule_path,
              title: has_maximum_rules ? "Maximum number (10) of rules have been created in this repository, delete one to be able to create a new rule." : "You can create up to 10 rules in this repository.",
              float: :right,
              data: { test_selector: "new-button" },
              scheme: :primary, "aria-label": "New rule",
              ) do %>
                New rule
            <% end %>
          </div>
        <% end %>
      <% end %>
    <% end %>
  </div>

  <div class="Box mt-2">
    <div class="Box-header py-0 pl-0 d-flex flex-justify-between">
      <div class="ml-3 py-3 px-1">
        <label>GitHub presets</label>
      </div>
      <div class="d-flex flex-items-center">
        <label class="color-fg-muted text-normal">Managed by GitHub</label>
      </div>
    </div>
    <div <%= test_selector("github-preset-rules") %>>
      <% preset_rules.each do |rule| %>
        <div class="Box-body py-0 pl-0 d-flex">
          <div class="ml-3 py-3 px-1">
            <label class="wb-break-word">
              <%= rule.name %>
            </label>
            <br>
            <%= render DependabotAlerts::RuleDescriptionComponent.new(rule: rule) %>
          </div>
          <div class="d-flex flex-items-center ml-auto" <%= test_selector("github-preset-rule_enablement") %>>
            <%= render DependabotAlerts::RuleStatusComponent.new(rule: rule, target: current_repository) %>
            <% if rule.enablement_for_target(current_repository).forced? %>
              <%= render Primer::Beta::IconButton.new(
                tag: :a,
                href: show_dependabot_rule_path(rule_id: rule.id),
                icon: :eye,
                scheme: :invisible,
                mr: 1,
                title: "View rule",
                "aria-label": "View rule")
              %>
            <% else %>
              <%= render Primer::Beta::IconButton.new(
                tag: :a,
                href: edit_parent_dependabot_rule_path(id: rule.id),
                icon: :pencil,
                scheme: :invisible,
                mr: 1,
                title: "Edit rule",
                "aria-label": "Edit rule")
              %>
            <% end %>
          </div>
        </div>
      </div>
    <% end %>
  </div>
  <% if custom_org_rules.any? %>
    <div class="Box mt-5">
      <div class="Box-header py-0 pl-0 d-flex flex-justify-between">
        <div class="ml-3 py-3 px-1">
          <label>Organization rules</label>
        </div>
        <div class="d-flex flex-items-center">
          <label class="color-fg-muted text-normal">Managed by <%= current_repository.owner %> </label>
        </div>
      </div>
      <div <%= test_selector("custom-org-rules") %>>
        <% custom_org_rules.each do |rule| %>
          <div class="Box-body py-0 pl-0 d-flex" <%= test_selector("custom-org-rule-row") %> >
            <div class="ml-3 py-3 px-1">
              <label class="wb-break-word">
                <%= rule.name %>
              </label>
              <br>
              <%= render DependabotAlerts::RuleDescriptionComponent.new(rule: rule) %>
            </div>
            <div class="d-flex flex-items-center ml-auto">
              <%= render DependabotAlerts::RuleStatusComponent.new(rule: rule, target: current_repository) %>
              <% if rule.enablement_for_target(current_repository).forced? %>
                <%= render Primer::Beta::IconButton.new(
                  tag: :a,
                  href: show_dependabot_rule_path(rule_id: rule.id),
                  icon: :eye,
                  scheme: :invisible,
                  mr: 1,
                  title: "View custom rule",
                  "aria-label": "View custom rule")
                %>
              <% else %>
                <%= render Primer::Beta::IconButton.new(
                  tag: :a,
                  href: edit_parent_dependabot_rule_path(id: rule.id),
                  icon: :pencil,
                  scheme: :invisible,
                  mr: 1,
                  title: "Edit custom rule",
                  "aria-label": "Edit custom rule")
                %>
              <% end %>
            </div>
          </div>
        <% end %>
      </div>
    </div>
  <% end %>
  <% if custom_org_rules.total_pages > 1 %>
    <div class="paginate-container">
      <%= will_paginate custom_org_rules %>
    </div>
  <% end %>
  <% if custom_repo_rules.any? %>
    <div class="Box mt-5">
      <div class="Box-header py-0 pl-0 d-flex flex-justify-between">
        <div class="ml-3 py-3 px-1">
          <label>Repository rules</label>
        </div>
        <div class="d-flex flex-items-center">
          <label class="color-fg-muted text-normal">Managed by <%= current_repository %> </label>
        </div>
      </div>
      <div <%= test_selector("custom-repo-rules") %>>
        <% custom_repo_rules.each do |rule| %>
          <div class="Box-body py-0 pl-0 d-flex">
            <div class="ml-3 py-3 px-1">
              <label class="wb-break-word">
                <%= rule.name %>
              </label>
              <br>
              <%= render DependabotAlerts::RuleDescriptionComponent.new(rule: rule) %>
            </div>
            <div class="d-flex flex-items-center ml-auto">
              <%= render DependabotAlerts::RuleStatusComponent.new(rule: rule, target: current_repository) %>
              <%= render Primer::Beta::IconButton.new(
                tag: :a,
                href: edit_dependabot_rule_path(rule_id: rule.id),
                icon: :pencil,
                scheme: :invisible,
                mr: 1,
                title: "Edit custom rule",
                "aria-label": "Edit custom rule")
              %>
            </div>
          </div>
        <% end %>
      </div>
    </div>
  <% end %>

  <div class="d-lg-none float-left pt-3">
    <%= render Primer::Beta::Button.new(
      tag: :a,
      disabled: has_maximum_rules,
      href: new_dependabot_rule_path,
      title: has_maximum_rules ? "Maximum number (10) of rules have been created in this repository, delete one to be able to create a new rule." : "You can create up to 10 rules in this repository.",
      float: :right,
      data: { test_selector: "new-button" },
      scheme: :primary, "aria-label": "New rule",
      ) do %>
        New rule
    <% end %>
  </div>
<% end %>
