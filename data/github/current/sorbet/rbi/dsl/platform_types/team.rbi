# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PlatformTypes::Team`.
# Please instead update this file by running `bin/tapioca dsl PlatformTypes::Team`.

class PlatformTypes::Team < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(PlatformTypes::ProjectConnection) }
  def addable_projects_for_viewer; end

  sig { returns(T::Boolean) }
  def addable_projects_for_viewer?; end

  sig { returns(PlatformTypes::TeamConnection) }
  def ancestors; end

  sig { returns(T::Boolean) }
  def ancestors?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def avatar_url; end

  sig { returns(T::Boolean) }
  def avatar_url?; end

  sig { returns(T::Boolean) }
  def can_be_externally_managed; end

  sig { returns(T::Boolean) }
  def can_be_externally_managed?; end

  sig { returns(PlatformTypes::TeamConnection) }
  def child_teams; end

  sig { returns(T::Boolean) }
  def child_teams?; end

  sig { returns(String) }
  def combined_slug; end

  sig { returns(T::Boolean) }
  def combined_slug?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def created_at; end

  sig { returns(T::Boolean) }
  def created_at?; end

  sig { returns(T.nilable(PlatformTypes::TeamDashboard)) }
  def dashboard; end

  sig { returns(T::Boolean) }
  def dashboard?; end

  sig { returns(T.nilable(Integer)) }
  def database_id; end

  sig { returns(T::Boolean) }
  def database_id?; end

  sig { returns(T.nilable(String)) }
  def description; end

  sig { returns(T::Boolean) }
  def description?; end

  sig { returns(T.nilable(PlatformTypes::TeamDiscussion)) }
  def discussion; end

  sig { returns(T::Boolean) }
  def discussion?; end

  sig { returns(PlatformTypes::TeamDiscussionConnection) }
  def discussions; end

  sig { returns(T::Boolean) }
  def discussions?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def discussions_resource_path; end

  sig { returns(T::Boolean) }
  def discussions_resource_path?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def discussions_url; end

  sig { returns(T::Boolean) }
  def discussions_url?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def edit_team_resource_path; end

  sig { returns(T::Boolean) }
  def edit_team_resource_path?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def edit_team_url; end

  sig { returns(T::Boolean) }
  def edit_team_url?; end

  sig { returns(T::Boolean) }
  def externally_managed; end

  sig { returns(T::Boolean) }
  def externally_managed?; end

  sig { returns(T.nilable(PlatformTypes::TeamGroupMappingConnection)) }
  def group_mappings; end

  sig { returns(T::Boolean) }
  def group_mappings?; end

  sig { returns(T::Boolean) }
  def has_child_teams; end

  sig { returns(T::Boolean) }
  def has_child_teams?; end

  sig { returns(T.nilable(T::Boolean)) }
  def has_ldap_mapping; end

  sig { returns(T::Boolean) }
  def has_ldap_mapping?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(T.nilable(PlatformTypes::OrganizationInvitationConnection)) }
  def invitations; end

  sig { returns(T::Boolean) }
  def invitations?; end

  sig { returns(T::Boolean) }
  def is_legacy_admin_team; end

  sig { returns(T::Boolean) }
  def is_legacy_admin_team?; end

  sig { returns(T::Boolean) }
  def is_legacy_owners_team; end

  sig { returns(T::Boolean) }
  def is_legacy_owners_team?; end

  sig { returns(T::Boolean) }
  def is_team_post_creation_disabled; end

  sig { returns(T::Boolean) }
  def is_team_post_creation_disabled?; end

  sig { returns(T::Boolean) }
  def is_viewer_member; end

  sig { returns(T::Boolean) }
  def is_viewer_member?; end

  sig { returns(T.nilable(String)) }
  def ldap_dn; end

  sig { returns(T::Boolean) }
  def ldap_dn?; end

  sig { returns(T::Boolean) }
  def ldap_mapping_is_gone; end

  sig { returns(T::Boolean) }
  def ldap_mapping_is_gone?; end

  sig { returns(T::Boolean) }
  def ldap_synced; end

  sig { returns(T::Boolean) }
  def ldap_synced?; end

  sig { returns(T::Boolean) }
  def locally_managed; end

  sig { returns(T::Boolean) }
  def locally_managed?; end

  sig { returns(PlatformTypes::UserStatusConnection) }
  def member_statuses; end

  sig { returns(T::Boolean) }
  def member_statuses?; end

  sig { returns(PlatformTypes::TeamMemberConnection) }
  def members; end

  sig { returns(T::Boolean) }
  def members?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def members_resource_path; end

  sig { returns(T::Boolean) }
  def members_resource_path?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def members_url; end

  sig { returns(T::Boolean) }
  def members_url?; end

  sig { returns(PlatformTypes::TeamMembershipRequestConnection) }
  def membership_requests; end

  sig { returns(T::Boolean) }
  def membership_requests?; end

  sig { returns(String) }
  def name; end

  sig { returns(T::Boolean) }
  def name?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def new_team_resource_path; end

  sig { returns(T::Boolean) }
  def new_team_resource_path?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def new_team_url; end

  sig { returns(T::Boolean) }
  def new_team_url?; end

  sig { returns(String) }
  def notification_setting; end

  sig { returns(T::Boolean) }
  def notification_setting?; end

  sig { returns(PlatformTypes::Organization) }
  def organization; end

  sig { returns(T::Boolean) }
  def organization?; end

  sig { returns(T.nilable(PlatformTypes::Team)) }
  def parent_team; end

  sig { returns(T::Boolean) }
  def parent_team?; end

  sig { returns(PlatformTypes::TeamChangeParentRequestConnection) }
  def pending_team_change_parent_requests; end

  sig { returns(T::Boolean) }
  def pending_team_change_parent_requests?; end

  sig { returns(T.nilable(String)) }
  def permission; end

  sig { returns(T::Boolean) }
  def permission?; end

  sig { returns(String) }
  def privacy; end

  sig { returns(T::Boolean) }
  def privacy?; end

  sig { returns(T.nilable(PlatformTypes::ProjectV2)) }
  def project_v2; end

  sig { returns(T::Boolean) }
  def project_v2?; end

  sig { returns(PlatformTypes::TeamProjectConnection) }
  def projects; end

  sig { returns(T::Boolean) }
  def projects?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def projects_resource_path; end

  sig { returns(T::Boolean) }
  def projects_resource_path?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def projects_url; end

  sig { returns(T::Boolean) }
  def projects_url?; end

  sig { returns(PlatformTypes::ProjectV2Connection) }
  def projects_v2; end

  sig { returns(T::Boolean) }
  def projects_v2?; end

  sig { returns(PlatformTypes::TeamRepositoryConnection) }
  def repositories; end

  sig { returns(T::Boolean) }
  def repositories?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def repositories_resource_path; end

  sig { returns(T::Boolean) }
  def repositories_resource_path?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def repositories_url; end

  sig { returns(T::Boolean) }
  def repositories_url?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def resource_path; end

  sig { returns(T::Boolean) }
  def resource_path?; end

  sig { returns(T.nilable(String)) }
  def review_request_delegation_algorithm; end

  sig { returns(T::Boolean) }
  def review_request_delegation_algorithm?; end

  sig { returns(T::Boolean) }
  def review_request_delegation_count_members_already_requested; end

  sig { returns(T::Boolean) }
  def review_request_delegation_count_members_already_requested?; end

  sig { returns(T::Boolean) }
  def review_request_delegation_enabled; end

  sig { returns(T::Boolean) }
  def review_request_delegation_enabled?; end

  sig { returns(T::Boolean) }
  def review_request_delegation_include_child_team_members; end

  sig { returns(T::Boolean) }
  def review_request_delegation_include_child_team_members?; end

  sig { returns(T.nilable(Integer)) }
  def review_request_delegation_member_count; end

  sig { returns(T::Boolean) }
  def review_request_delegation_member_count?; end

  sig { returns(T::Boolean) }
  def review_request_delegation_notify_team; end

  sig { returns(T::Boolean) }
  def review_request_delegation_notify_team?; end

  sig { returns(T::Boolean) }
  def review_request_delegation_remove_team_request; end

  sig { returns(T::Boolean) }
  def review_request_delegation_remove_team_request?; end

  sig { returns(String) }
  def slug; end

  sig { returns(T::Boolean) }
  def slug?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def team_projects_suggestions_resource_path; end

  sig { returns(T::Boolean) }
  def team_projects_suggestions_resource_path?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def team_projects_suggestions_url; end

  sig { returns(T::Boolean) }
  def team_projects_suggestions_url?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def teams_resource_path; end

  sig { returns(T::Boolean) }
  def teams_resource_path?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def teams_url; end

  sig { returns(T::Boolean) }
  def teams_url?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def updated_at; end

  sig { returns(T::Boolean) }
  def updated_at?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def url; end

  sig { returns(T::Boolean) }
  def url?; end

  sig { returns(T::Boolean) }
  def viewer_can_administer; end

  sig { returns(T::Boolean) }
  def viewer_can_administer?; end

  sig { returns(T::Boolean) }
  def viewer_can_create_team_post; end

  sig { returns(T::Boolean) }
  def viewer_can_create_team_post?; end

  sig { returns(T::Boolean) }
  def viewer_can_subscribe; end

  sig { returns(T::Boolean) }
  def viewer_can_subscribe?; end

  sig { returns(T::Boolean) }
  def viewer_can_unsubscribe; end

  sig { returns(T::Boolean) }
  def viewer_can_unsubscribe?; end

  sig { returns(String) }
  def viewer_membership; end

  sig { returns(T::Boolean) }
  def viewer_membership?; end

  sig { returns(T.nilable(String)) }
  def viewer_subscription; end

  sig { returns(T::Boolean) }
  def viewer_subscription?; end

  sig { returns(String) }
  def websocket; end

  sig { returns(T::Boolean) }
  def websocket?; end
end
