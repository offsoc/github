{"version":3,"file":"react-sandbox-sidenav-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/react-core/deferred-registry.ts","ui/packages/react-core/prevent-autofocus.ts","ui/packages/react-core/react-partial-anchor.ts","ui/packages/react-core/react-partial-registry.ts","ui/packages/react-core/ReactPartialElement.tsx","ui/packages/react-core/register-partial.ts","ui/packages/react-profiling-mode/src/index.ts","ui/packages/react-sandbox-sidenav/react-sandbox-sidenav.ts","ui/packages/react-core/ErrorBoundary.tsx","ui/packages/react-core/ErrorPage.tsx","ui/packages/react-core/Link.tsx","ui/packages/react-core/PartialRouter.tsx","ui/packages/react-core/PartialEntry.tsx","ui/packages/react-core/ReactBaseElement.tsx","ui/packages/react-sandbox/SandboxLayout.tsx","ui/packages/safe-html/SafeHTML.tsx"],"sourcesContent":["export class DeferredRegistry<T> {\n  private registrationEntries: Record<\n    string,\n    {\n      promise: Promise<T>\n      resolve?: (r: T) => void\n    }\n  > = {}\n\n  public register(name: string, registration: T) {\n    const entry = this.registrationEntries[name]\n    if (entry) {\n      entry.resolve?.(registration)\n    } else {\n      this.registrationEntries[name] = {\n        promise: Promise.resolve(registration),\n      }\n    }\n  }\n\n  public getRegistration(name: string): Promise<T> {\n    this.registrationEntries[name] ||= new Deferred()\n    return this.registrationEntries[name].promise\n  }\n}\n\nclass Deferred<T> {\n  declare promise\n  declare resolve: (r: T) => void\n\n  constructor() {\n    this.promise = new Promise<T>(resolve => {\n      this.resolve = resolve\n    })\n  }\n}\n","export const PREVENT_AUTOFOCUS_KEY = '__gh__react-core-preventAutofocus'\n","import type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {useCallback, useEffect, useRef, useState} from 'react'\n\ninterface ReactPartialAnchor {\n  /**\n   * DO NOT USE THIS PROPERTY DIRECTLY. It is meant to be used with useExternalAnchor and useOnAnchorClick\n   */\n  __wrapperElement: ReactPartialAnchorElement\n}\n\nexport interface ReactPartialAnchorProps {\n  reactPartialAnchor?: ReactPartialAnchor\n}\n\nexport function usePartialAnchorProps(\n  anchorElement: ReactPartialAnchorElement | undefined | null,\n): ReactPartialAnchorProps {\n  useEffect(() => {\n    const anchor = anchorElement?.anchor\n\n    if (!anchor) {\n      return\n    }\n\n    if ('disabled' in anchor) {\n      anchor.disabled = false\n    }\n    anchor.classList.remove('cursor-wait')\n  }, [anchorElement])\n\n  if (!anchorElement) {\n    return {}\n  }\n\n  return {\n    reactPartialAnchor: {\n      __wrapperElement: anchorElement,\n    },\n  }\n}\n\nexport function useExternalAnchor(reactPartialAnchor: ReactPartialAnchor) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor || null)\n  const [open, setOpen] = useState(false)\n\n  const onClick = useCallback(() => {\n    // toggle the open state when clicked\n    setOpen(!open)\n  }, [open, setOpen])\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    ref.current.setAttribute('aria-expanded', open.toString())\n    ref.current.setAttribute('aria-haspopup', 'true')\n  }, [ref, open])\n\n  useOnAnchorClick(reactPartialAnchor, onClick)\n\n  return {\n    ref,\n    open,\n    setOpen,\n  }\n}\n\nexport function useOnAnchorClick(reactPartialAnchor: ReactPartialAnchor, onClick: (event: MouseEvent) => void) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor)\n\n  useEffect(() => {\n    const element = ref.current\n    if (!element) {\n      return\n    }\n\n    element.addEventListener('click', onClick)\n    return () => element.removeEventListener('click', onClick)\n  }, [ref, onClick])\n}\n\nexport type PropsWithPartialAnchor<T> = T & Required<ReactPartialAnchorProps>\n","import {DeferredRegistry} from './deferred-registry'\n\nexport interface PartialRegistration {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Component: React.ComponentType<any>\n}\n\nexport const partialRegistry = new DeferredRegistry<PartialRegistration>()\n\nexport function getReactPartial(appName: string) {\n  return partialRegistry.getRegistration(appName)\n}\n","import {controller} from '@github/catalyst'\nimport {getReactPartial} from './react-partial-registry'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {ReactBaseElement} from './ReactBaseElement'\nimport {PartialEntry} from './PartialEntry'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\n\n// What is this silliness? Is it react or a web component?!\n// It's a web component we use to bootstrap react partials within the monolith.\n@controller\nclass ReactPartialElement extends ReactBaseElement<EmbeddedPartialData> {\n  nameAttribute = 'partial-name'\n\n  async getReactNode(embeddedData: EmbeddedPartialData) {\n    const {Component} = await getReactPartial(this.name)\n\n    // Some React Partials will be wrapped in a react-partial-anchor, which is used to conditionally render the Partial\n    const anchorElement = this.closest<ReactPartialAnchorElement>('react-partial-anchor')\n\n    return (\n      <PartialEntry\n        partialName={this.name}\n        embeddedData={embeddedData}\n        Component={Component}\n        wasServerRendered={this.hasSSRContent}\n        ssrError={this.ssrError}\n        anchorElement={anchorElement}\n      />\n    )\n  }\n}\n","import {partialRegistry, type PartialRegistration} from './react-partial-registry'\n// Import the web component to get it registered on the window\nimport './ReactPartialElement'\n\n// NOTE: if the signature of this method changes, also update the react-partial-name ESLint rule\n// /workspaces/github/ui/packages/eslint-plugin-github-monorepo/rules/react-partial-name.js\nexport function registerReactPartial(name: string, registration: PartialRegistration) {\n  partialRegistry.register(name, registration)\n}\n","import safeStorage from '@github-ui/safe-storage'\n\nconst {getItem, setItem, removeItem} = safeStorage('localStorage')\nconst REACT_PROFILING_ENABLED = 'REACT_PROFILING_ENABLED'\n\ninterface ReactProfilingModeMethods {\n  enable: () => void\n  disable: () => void\n  isEnabled: () => boolean\n}\n\nconst ReactProfilingMode: ReactProfilingModeMethods = {\n  enable: () => setItem(REACT_PROFILING_ENABLED, 'true'),\n  disable: () => removeItem(REACT_PROFILING_ENABLED),\n  isEnabled: () => !!getItem(REACT_PROFILING_ENABLED),\n}\n\nexport default ReactProfilingMode\n","import {registerReactPartial} from '@github-ui/react-core/register-partial'\nimport {SandboxLayout} from '@github-ui/react-sandbox/SandboxLayout'\n\nregisterReactPartial('react-sandbox-sidenav', {\n  Component: SandboxLayout,\n})\n","import {ErrorPage} from './ErrorPage'\nimport React from 'react'\n\n// NOTE(jon, 2022-02-28): I copied 99% of this from memex's error-boundary\n\nexport interface ErrorBoundaryProps {\n  children: React.ReactNode\n  fallback?: React.ReactNode\n  /**\n   * Provide a callback to be invoked when an error is thrown (can be used for logging errors)\n   */\n  onError?: (error: Error) => void\n}\n\ninterface ErrorBoundaryState {\n  error: Error | null\n}\n\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props)\n\n    this.state = {\n      error: null,\n    }\n  }\n\n  /**\n   * Invoked when an error is thrown in the child component,\n   * and used to update state in a concurrent friendly manner\n   */\n  static getDerivedStateFromError(error: Error) {\n    return {error}\n  }\n\n  /**\n   * Called _after_ the re-render, used for performing side-effects such as logging\n   */\n  override componentDidCatch(error: Error) {\n    if (typeof this.props.onError === 'function') {\n      this.props.onError(error)\n    } else {\n      defaultOnError(error)\n    }\n  }\n\n  override render() {\n    if (!this.state.error) return this.props.children\n\n    return this.props.fallback === undefined ? <ErrorPage type=\"httpError\" /> : this.props.fallback\n  }\n}\n\n/**\n * Re-throws the error out of the rendering context to ensure that it propagates to failbot.\n * Also avoids react unmounting the entire tree from an uncaught error.\n */\nfunction defaultOnError(error: Error) {\n  setTimeout(() => {\n    throw error\n  })\n}\n","import {Box, Heading} from '@primer/react'\nimport type {PageError} from './app-routing-types'\n\nconst errorMessages: {[httpStatus: number]: string} = {\n  404: 'Didn’t find anything here!',\n  500: 'Looks like something went wrong!',\n}\n\nexport function ErrorPage({httpStatus, type}: PageError) {\n  const message = type === 'fetchError' ? 'Looks like network is down!' : errorMessages[httpStatus || 500]\n  return (\n    <Heading\n      as=\"h1\"\n      tabIndex={-1}\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: '100%',\n        minHeight: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      Error\n      {httpStatus ? <Box sx={{fontSize: '144px', fontWeight: 'bold', lineHeight: 1}}>{httpStatus}</Box> : null}\n      <Box sx={{fontSize: 4, pt: 2}}>{message}</Box>\n    </Heading>\n  )\n}\n\ntry{ ErrorPage.displayName ||= 'ErrorPage' } catch {}","import {useContext, forwardRef, type ForwardedRef, type ReactElement} from 'react'\nimport {\n  Link as RouterLink,\n  NavLink as RouterNavLink,\n  type LinkProps,\n  type NavLinkProps,\n  resolvePath,\n  matchRoutes,\n} from 'react-router-dom'\nimport {AppContext} from './app-context'\nimport {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {PREVENT_AUTOFOCUS_KEY} from './prevent-autofocus'\n\ntype PreventAutofocusProp = {preventAutofocus?: boolean}\n\nexport const Link = forwardRef(\n  (\n    {to, reloadDocument, preventAutofocus, ...props}: LinkProps & PreventAutofocusProp,\n    ref: ForwardedRef<HTMLAnchorElement>,\n  ): ReactElement => {\n    const {routes} = useContext(AppContext)\n    const pathname = resolvePath(to, ssrSafeLocation.pathname).pathname\n    reloadDocument = reloadDocument ?? !matchRoutes(routes, pathname)\n    return (\n      <RouterLink\n        to={to}\n        {...props}\n        state={\n          preventAutofocus\n            ? {\n                [PREVENT_AUTOFOCUS_KEY]: true,\n                ...props.state,\n              }\n            : props.state\n        }\n        reloadDocument={reloadDocument}\n        ref={ref}\n      />\n    )\n  },\n)\n\nLink.displayName = 'Link'\n\nexport const NavLink = forwardRef(function NavLink(\n  {to, reloadDocument, preventAutofocus, ...props}: NavLinkProps & PreventAutofocusProp,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n): React.ReactElement {\n  const {routes} = useContext(AppContext)\n  const pathname = resolvePath(to, ssrSafeLocation.pathname).pathname\n  reloadDocument = reloadDocument ?? !matchRoutes(routes, pathname)\n  return (\n    <RouterNavLink\n      to={to}\n      {...props}\n      state={\n        preventAutofocus\n          ? {\n              [PREVENT_AUTOFOCUS_KEY]: true,\n              ...props.state,\n            }\n          : props.state\n      }\n      reloadDocument={reloadDocument}\n      ref={ref}\n    />\n  )\n})\n\ntry{ NavLink.displayName ||= 'NavLink' } catch {}","import {useState} from 'react'\nimport type {BrowserHistory, MemoryHistory} from '@remix-run/router'\nimport {Router} from 'react-router-dom'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\ntype Props = {\n  children: React.ReactNode\n  history: BrowserHistory | MemoryHistory\n}\n\nexport function PartialRouter({children, history}: Props) {\n  const [state, setState] = useState({\n    location: history.location,\n  })\n\n  useHydratedEffect(() => history.listen(setState), [history])\n\n  return (\n    <Router location={state.location} navigator={history}>\n      {children}\n    </Router>\n  )\n}\n\ntry{ PartialRouter.displayName ||= 'PartialRouter' } catch {}","// Think of this as the entry point into the framework\nimport React from 'react'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {BaseProviders} from './BaseProviders'\nimport type {BrowserHistory} from '@remix-run/router'\nimport {createMemoryHistory} from '@remix-run/router'\nimport {AppContextProvider} from './AppContextProvider'\nimport {PartialRouter} from './PartialRouter'\nimport {CommonElements} from './CommonElements'\nimport {createBrowserHistory} from './create-browser-history'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {usePartialAnchorProps} from './react-partial-anchor'\n\ninterface Props {\n  partialName: string\n  embeddedData: EmbeddedPartialData\n  Component: React.ComponentType\n  wasServerRendered: boolean\n  ssrError?: HTMLScriptElement\n  anchorElement?: ReactPartialAnchorElement | null\n}\n\nexport function PartialEntry({\n  partialName,\n  embeddedData,\n  Component,\n  wasServerRendered,\n  ssrError,\n  anchorElement,\n}: Props) {\n  // Create a ref to track the browser history:\n  const historyRef = React.useRef<BrowserHistory>()\n  const window = globalThis.window as Window | undefined\n\n  // For linking to work, we can just pass a dummy pathname here. We may consider plumbing the actual path in\n  if (!historyRef.current) {\n    historyRef.current = !window\n      ? createMemoryHistory({initialEntries: [{pathname: '/'}]})\n      : createBrowserHistory({window})\n  }\n  const history = historyRef.current\n  const partialAnchorProps = usePartialAnchorProps(anchorElement)\n\n  // Wrap the partial in an AppContextProvider and static Router so that react-core links\n  // will be functional.\n  return (\n    <BaseProviders appName={partialName} wasServerRendered={wasServerRendered}>\n      <AppContextProvider history={history} routes={[]}>\n        <PartialRouter history={history}>\n          <Component {...embeddedData.props} {...(partialAnchorProps as object)} />\n          <CommonElements ssrError={ssrError} />\n        </PartialRouter>\n      </AppContextProvider>\n    </BaseProviders>\n  )\n}\n\ntry{ PartialEntry.displayName ||= 'PartialEntry' } catch {}","import {target} from '@github/catalyst'\nimport {createRoot, hydrateRoot} from 'react-dom/client'\nimport type {createRoot as createRootType, hydrateRoot as hydrateRootType, Root} from 'react-dom/client'\nimport React from 'react'\nimport ReactProfilingMode from '@github-ui/react-profiling-mode'\nimport {EXPECTED_ERRORS} from './expected-errors'\nimport {sendStats} from '@github-ui/stats'\n\ntype ReactDOM = {\n  createRoot: typeof createRootType\n  hydrateRoot: typeof hydrateRootType\n}\n\nconst REACT_INVARIANT_ERROR_REGEX = /Minified React error #(?<invariant>\\d+)/\n\nexport abstract class ReactBaseElement<T> extends HTMLElement {\n  @target embeddedData: HTMLScriptElement | undefined\n  @target ssrError: HTMLScriptElement | undefined\n  @target reactRoot: HTMLElement | undefined\n  private root: Root | undefined\n\n  abstract nameAttribute: string\n  abstract getReactNode(embeddedData: T): Promise<React.ReactNode>\n\n  protected get name() {\n    return this.getAttribute(this.nameAttribute) as string\n  }\n\n  private get embeddedDataText() {\n    const text = this.embeddedData?.textContent\n\n    if (!text) {\n      throw new Error(`No embedded data provided for react element ${this.name}`)\n    }\n\n    return text\n  }\n\n  get hasSSRContent() {\n    return this.getAttribute('data-ssr') === 'true'\n  }\n\n  connectedCallback() {\n    this.renderReact()\n  }\n\n  disconnectedCallback() {\n    this.root?.unmount()\n    this.root = undefined\n  }\n\n  private async renderReact() {\n    if (!this.reactRoot) throw new Error('No react root provided')\n    let reactDom: ReactDOM = {\n      createRoot,\n      hydrateRoot,\n    }\n\n    // Override the react-dom import if we're in profiling mode\n    if (ReactProfilingMode.isEnabled()) {\n      reactDom = await this.getReactDomWithProfiling()\n    }\n\n    const embeddedData = JSON.parse(this.embeddedDataText) as T\n    const ssrErrorText = this.ssrError?.textContent\n    const node = await this.getReactNode(embeddedData)\n    const baseNode = <React.StrictMode>{node}</React.StrictMode>\n\n    if (ssrErrorText) {\n      this.logSSRError(ssrErrorText)\n    }\n\n    if (this.hasSSRContent) {\n      /**\n       * Styled-components automatically looks for style tags to hydrate on first page load, but will not detect them\n       * if they are added after the initial page load. This causes a hydration error because React isn't expecting\n       * a style tag within the app. To work around this, we need to manually move the style tags to the head before\n       * hydrating the app.\n       *\n       * During hydration, styled-components will create a new style tag which matches the one we moved to the head.\n       * This means that after hydration, we can safely remove the style tag we manually moved to the head.\n       */\n      const styles = this.querySelector('style[data-styled=\"true\"]')\n      if (styles) document.head.appendChild(styles)\n\n      // Hydrate the react app\n      // onRecoverableError is disabled until we have a react version with this fix in:\n      // https://github.com/facebook/react/pull/25692\n      this.root = reactDom.hydrateRoot(this.reactRoot, baseNode, {\n        onRecoverableError: error => {\n          if (!(error instanceof Error)) return\n\n          const match = REACT_INVARIANT_ERROR_REGEX.exec(error.message)\n          const invariant = String(match?.groups?.invariant)\n\n          sendStats({\n            incrementKey: 'REACT_HYDRATION_ERROR',\n            incrementTags: {\n              appName: this.name,\n              invariant,\n            },\n          })\n        },\n      })\n\n      // Remove the manually moved style tag after hydration\n      if (styles) {\n        // Wait until things are idle to remove the style tag. If we do it immediately, we can cause a flash of unstyled content.\n        requestIdleCallback(() => {\n          // styles could have already been removed by Turbo if a navigation happens quickly. Only remove it from the DOM if it's still there.\n          styles.parentElement?.removeChild(styles)\n        })\n      }\n    } else {\n      this.root = reactDom.createRoot(this.reactRoot)\n      this.root.render(baseNode)\n    }\n\n    this.classList.add('loaded')\n  }\n\n  private getReactDomWithProfiling() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return import('react-dom/profiling') as any as Promise<ReactDOM>\n  }\n\n  private logSSRError(ssrErrorText: string) {\n    if (EXPECTED_ERRORS[ssrErrorText]) {\n      // eslint-disable-next-line no-console\n      return console.error('SSR failed with an expected error:', EXPECTED_ERRORS[ssrErrorText])\n    }\n\n    try {\n      const error = JSON.parse(ssrErrorText) as PlatformJavascriptError\n      const stacktrace = parseFailbotStacktrace(error)\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', `${error.type}: ${error.value}\\n`, error, stacktrace)\n    } catch {\n      /**\n       * In the event we couldn't log the error, we should not break the application\n       */\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', ssrErrorText, 'unable to parse as json')\n    }\n  }\n}\n\nfunction parseFailbotStacktrace(error: PlatformJavascriptError) {\n  if (!error.stacktrace) return ''\n  let prefix = '\\n '\n  const stack = error.stacktrace.map((frame: PlatformStackframe) => {\n    const {function: func, filename, lineno, colno} = frame\n    const line = `${prefix} at ${func} (${filename}:${lineno}:${colno})`\n    prefix = ' '\n    return line\n  })\n  return stack.join('\\n')\n}\n\ntry{ REACT_INVARIANT_ERROR_REGEX.displayName ||= 'REACT_INVARIANT_ERROR_REGEX' } catch {}","import {ErrorBoundary} from '@github-ui/react-core/error-boundary'\nimport {Link} from '@github-ui/react-core/link'\nimport {SafeHTMLDiv, type SafeHTMLString} from '@github-ui/safe-html'\nimport {NavList, PageLayout} from '@primer/react'\nimport type React from 'react'\nimport {memo} from 'react'\nimport {Outlet, useLocation, useMatch, useResolvedPath} from 'react-router-dom'\n\nfunction NavItem({to, children}: {to: string; children: React.ReactNode}) {\n  const resolved = useResolvedPath(to)\n  const isCurrent = useMatch({path: resolved.pathname, end: true})\n  return (\n    <NavList.Item as={Link} to={to} aria-current={isCurrent ? 'page' : undefined}>\n      {children}\n    </NavList.Item>\n  )\n}\nfunction NavItemHref({href, children}: {href: string; children: React.ReactNode}) {\n  const resolved = useResolvedPath(href)\n  const isCurrent = useMatch({path: resolved.pathname, end: true})\n  return (\n    <NavList.Item href={href} aria-current={isCurrent ? 'page' : undefined}>\n      {children}\n    </NavList.Item>\n  )\n}\n\nexport function SandboxLayout(\n  props:\n    | {children: React.ReactNode; serverChildren?: undefined}\n    | {serverChildren: SafeHTMLString; children?: undefined},\n) {\n  return (\n    <PageLayout>\n      <PageLayout.Pane position=\"start\">\n        {/* TODO: Replace with NavigationList when it's ready */}\n        <NavList aria-label=\"Main\">\n          <NavItem to=\"/_react_sandbox\">Index</NavItem>\n          {[\n            ['1', 'Show 1'],\n            ['2', 'Show 2'],\n            ['3', 'Show 3'],\n            ['4', 'Show 4 (server 404)'],\n            ['5', 'Show 5 (server 500)'],\n            ['6', 'Show 6 (render throws)'], // See show.tsx\n            ['7', 'Show 7 (redirects to 1)'],\n            ['8', 'Show 8 (redirects to /pulls)'],\n          ].map(([id, label]) => (\n            <NavItem key={id} to={`/_react_sandbox/${id}`}>\n              {label}\n            </NavItem>\n          ))}\n          <NavItem to=\"/_react_sandbox/ssr-error\">SSR error</NavItem>\n          <NavItemHref href=\"/_react_sandbox/alloy\">Show Alloy (non-React-nav)</NavItemHref>\n          <NavItemHref href=\"/_react_sandbox/lazy\">Show Lazy Payload (non-React-nav)</NavItemHref>\n          <NavItemHref href=\"/_react_sandbox/partial\">Partial (non-React-nav)</NavItemHref>\n          <NavItem to=\"/_react_sandbox/filter\">Filter</NavItem>\n          <NavItem to=\"/_react_sandbox/css-modules\">Css Modules</NavItem>\n          <NavItem to=\"/_react_sandbox/relay\">Relay Route</NavItem>\n        </NavList>\n      </PageLayout.Pane>\n      <PageLayout.Content as=\"div\">\n        {props.serverChildren ? <SafeHTMLDiv html={props.serverChildren} /> : props.children}\n      </PageLayout.Content>\n    </PageLayout>\n  )\n}\n\nconst LocationBasedErrorBoundary = ({children}: {children: React.ReactNode}) => {\n  const location = useLocation()\n  return <ErrorBoundary key={location.pathname}>{children}</ErrorBoundary>\n}\n\nexport const SandboxLayoutWithOutlet = memo(function SandboxLayoutWithOutlet() {\n  return (\n    <SandboxLayout>\n      <LocationBasedErrorBoundary>\n        <Outlet />\n      </LocationBasedErrorBoundary>\n    </SandboxLayout>\n  )\n})\n\ntry{ NavItem.displayName ||= 'NavItem' } catch {}\ntry{ NavItemHref.displayName ||= 'NavItemHref' } catch {}\ntry{ SandboxLayout.displayName ||= 'SandboxLayout' } catch {}\ntry{ LocationBasedErrorBoundary.displayName ||= 'LocationBasedErrorBoundary' } catch {}\ntry{ SandboxLayoutWithOutlet.displayName ||= 'SandboxLayoutWithOutlet' } catch {}","import {Box, type BoxProps, Text, type TextProps} from '@primer/react'\nimport type {ForwardRefComponent as PolymorphicForwardRefComponent} from '@radix-ui/react-polymorphic'\nimport DOMPurify, {type Config as DOMPurifyConfig} from 'dompurify'\nimport type React from 'react'\nimport {forwardRef} from 'react'\n\ntype Brand<TBase, TBrand extends string> = TBase & {__brand: TBrand}\n\n/**\n * A string that has specifically been marked as verified.\n *\n * WARNING: A string should only be branded as a `SafeHTMLString` if one of the following applies:\n * - it comes from a trusted source on the server\n * - has known static content, or\n * - has been sanitized by DOMPurify.\n */\nexport type SafeHTMLString = Brand<string, 'SafeHTMLString'>\n\ninterface BaseHTMLProps {\n  /**\n   * Set the rendered HTML of the component. Use this prop if the source is untrusted. If you know the string can be\n   * trusted, or has already been sanitized, use the `html` prop instead to avoid re-sanitizing.\n   */\n  unverifiedHTML?: string\n  /**\n   * Optional config passed to DOMPurify when sanitizing `unverifiedHTML`.\n   */\n  unverifiedHTMLConfig?: DOMPurifyConfig\n  /**\n   * Set the rendered HTML of the component. To prevent XSS, ensure that the source of this\n   * HTML is trusted! If the source is untrusted, use `unverifiedHTML` instead.\n   */\n  html?: SafeHTMLString\n}\n\ninterface VerifiedHTMLProps extends BaseHTMLProps {\n  unverifiedHTML?: undefined\n  html: SafeHTMLString\n}\n\ninterface UnverifiedHTMLProps extends BaseHTMLProps {\n  unverifiedHTML: string\n  html?: undefined\n}\n\nexport type SafeHTMLProps = VerifiedHTMLProps | UnverifiedHTMLProps\n\ntype PropsWithHTML<T> = T & SafeHTMLProps\n\nfunction getSafeHTMLAndProps<T>(propsWithHtml: PropsWithHTML<T>) {\n  /**\n   * Note we have to explicitly cast props to T because TypeScript\n   * is not properly converting Omit<T & VerifiedHTMLProps, 'html'> to T.\n   *\n   * We include the `as unknown` intermediate step to avoid warnings\n   * about insufficient type overlap\n   */\n\n  if ('html' in propsWithHtml && propsWithHtml.html !== undefined) {\n    const {html, ...props} = propsWithHtml\n    return {\n      // This is verified html, so we can use it directly\n      safeHTML: html,\n      props: props as unknown as T,\n    }\n  }\n\n  const {unverifiedHTML, unverifiedHTMLConfig, ...props} = propsWithHtml\n  const config = {\n    ...unverifiedHTMLConfig,\n    // we want to ensure we are returning a string not a dom node\n    RETURN_DOM: false,\n    RETURN_DOM_FRAGMENT: false,\n  } satisfies DOMPurifyConfig\n\n  return {\n    // Run the unverified HTML through DOMPurify to sanitize it\n    safeHTML: DOMPurify.sanitize(unverifiedHTML, config),\n    props: props as unknown as T,\n  }\n}\n\n/**\n * `SafeHTMLBox` extends `Box` from `@primer/react` with props for safely\n * rendering HTML strings. Exactly one `html` or `unverifiedHTML` must be\n * supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLBox = withSafeHTML<BoxProps>(Box) as PolymorphicForwardRefComponent<\n  'div' | 'span' | 'pre' | 'table' | 'tbody' | 'tr' | 'td' | 'ul' | 'ol' | 'li',\n  PropsWithHTML<BoxProps>\n>\nSafeHTMLBox.displayName = 'SafeHTMLBox'\n\n/**\n * `SafeHTMLText` extends `Text` from `@primer/react` with props for safely\n * rendering HTML strings. Exactly one `html` or `unverifiedHTML` must be\n * supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLText = withSafeHTML<TextProps>(Text) as PolymorphicForwardRefComponent<\n  'div' | 'span' | 'p' | 'strong' | 'em' | 'pre' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'a',\n  PropsWithHTML<TextProps>\n>\nSafeHTMLText.displayName = 'SafeHTMLText'\n\n/**\n * A higher-order component that extends a basic component by offering\n * `html` and `unverifiedHTML` props that are safe alternatives to `dangerouslySetInnerHTML`.\n */\nfunction withSafeHTML<T>(Component: React.ComponentType<T>) {\n  // We give these display names above\n  // eslint-disable-next-line react/display-name\n  const SafeHTMLComponent = forwardRef<HTMLSpanElement, PropsWithHTML<T>>((propsWithHtml, ref) => {\n    const {safeHTML, props} = getSafeHTMLAndProps(propsWithHtml)\n    // This is the only place in the codebase where `dangerouslySetInnerHTML` should be allowed\n    // eslint-disable-next-line react/forbid-component-props\n    return <Component ref={ref} {...props} dangerouslySetInnerHTML={safeHTML ? {__html: safeHTML} : undefined} />\n  })\n\n  return SafeHTMLComponent\n}\n\n/**\n * `SafeHTMLDiv` extends `div`with props for safely rendering HTML strings.\n * Exactly one `html` or `unverifiedHTML` must be supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLDiv = forwardRef<\n  HTMLDivElement,\n  PropsWithHTML<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>>\n>((propsWithHtml, ref) => {\n  const {safeHTML, props} = getSafeHTMLAndProps(propsWithHtml)\n  // eslint-disable-next-line react/no-danger\n  return <div ref={ref} {...props} dangerouslySetInnerHTML={safeHTML ? {__html: safeHTML} : undefined} />\n})\nSafeHTMLDiv.displayName = 'SafeHTMLDiv'\n\ntry{ SafeHTMLComponent.displayName ||= 'SafeHTMLComponent' } catch {}"],"names":["DeferredRegistry","register","name","registration","entry","registrationEntries","resolve","promise","Promise","getRegistration","Deferred","constructor","PREVENT_AUTOFOCUS_KEY","usePartialAnchorProps","anchorElement","useEffect","anchor","disabled","classList","remove","reactPartialAnchor","__wrapperElement","useExternalAnchor","ref","useRef","open","setOpen","useState","onClick","useCallback","current","setAttribute","toString","useOnAnchorClick","element","addEventListener","removeEventListener","partialRegistry","ReactPartialElement","ReactBaseElement","getReactNode","embeddedData","appName","Component","closest","PartialEntry","partialName","wasServerRendered","hasSSRContent","ssrError","nameAttribute","registerReactPartial","controller","getItem","setItem","removeItem","safeStorage","REACT_PROFILING_ENABLED","enable","disable","isEnabled","SandboxLayout","ErrorBoundary","React","getDerivedStateFromError","error","props","onError","setTimeout","render","state","undefined","fallback","ErrorPage","type","children","errorMessages","httpStatus","message","Heading","as","tabIndex","sx","display","flexDirection","minWidth","minHeight","alignItems","justifyContent","Box","fontSize","fontWeight","lineHeight","pt","displayName","Link","forwardRef","to","reloadDocument","preventAutofocus","routes","useContext","AppContext","pathname","resolvePath","ssrSafeLocation","matchRoutes","RouterLink","NavLink","RouterNavLink","PartialRouter","history","setState","location","useHydratedEffect","listen","Router","navigator","historyRef","window","globalThis","createBrowserHistory","createMemoryHistory","initialEntries","partialAnchorProps","BaseProviders","AppContextProvider","CommonElements","REACT_INVARIANT_ERROR_REGEX","HTMLElement","getAttribute","embeddedDataText","text","textContent","connectedCallback","renderReact","disconnectedCallback","root","unmount","reactRoot","reactDom","createRoot","hydrateRoot","ReactProfilingMode","getReactDomWithProfiling","JSON","parse","ssrErrorText","node","baseNode","logSSRError","styles","querySelector","document","head","appendChild","onRecoverableError","Error","match","exec","invariant","String","groups","sendStats","incrementKey","incrementTags","requestIdleCallback","parentElement","removeChild","add","EXPECTED_ERRORS","console","stacktrace","parseFailbotStacktrace","prefix","stack","map","function","func","filename","lineno","colno","frame","line","join","value","target","NavItem","resolved","useResolvedPath","isCurrent","useMatch","path","end","NavList","Item","aria-current","NavItemHref","href","PageLayout","Pane","position","aria-label","id","label","Content","serverChildren","SafeHTMLDiv","html","LocationBasedErrorBoundary","useLocation","SandboxLayoutWithOutlet","memo","Outlet","SafeHTMLComponent","getSafeHTMLAndProps","propsWithHtml","safeHTML","unverifiedHTML","unverifiedHTMLConfig","config","RETURN_DOM","RETURN_DOM_FRAGMENT","DOMPurify","SafeHTMLBox","withSafeHTML","SafeHTMLText","Text","dangerouslySetInnerHTML","__html","div"],"sourceRoot":""}