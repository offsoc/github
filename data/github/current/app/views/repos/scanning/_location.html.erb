<div class="file js-file js-details-container Details Details--on open mt-2" <%= test_selector("scanning-location") %> data-details-container-group="file" data-hpc>
  <% if !local_assigns[:hide_header] %>
    <div class="d-flex file-header js-file-header">
      <div class="file-info d-flex flex-auto min-width-0">
        <div class="flex-self-center lh-default py-1">
          <% file_path, file_name = split_file_path_and_name(reverse_truncate(full_path, length: DiffHelper::DIFF_FILE_LABEL_TRUNCATION_LENGTH)) %>
          <% if local_assigns[:snippet_helper].blob? %>
            <a href="<%= path_link %>" class="Link--primary"><%= file_path %><b><%= file_name %></b><%= local_assigns[:line_number].present? ? ":#{local_assigns[:line_number]}" : "" %></a>
          <% else %>
            <%= file_path %><b><%= file_name %></b><%= local_assigns[:line_number].present? ? ":#{local_assigns[:line_number]}" : "" %>
          <% end %>
          <%= render Primer::Beta::ClipboardCopy.new(value: full_path + (local_assigns[:line_number].present? ? ":#{local_assigns[:line_number]}" : ""), "data-copy-feedback": "Copied!", "aria-label": "Copy", color: :muted, classes: "Link--onHover", test_selector: "code-scanning-copy-path", mx: 1) %>
          <% if defined?(classifications) && classifications.present? %>
            <% classifications.each do |classification| %>
              <%= render Primer::Beta::Label.new(title: "Label: #{ classification }") do %><%= classification %><% end %>
            <% end %>
          <% end %>
        </div>
      </div>

      <%= local_assigns[:additional_controls] if local_assigns[:additional_controls].present? %>
    </div>
  <% end %>
  <% if local_assigns[:snippet_helper].blob? %>
    <% if local_assigns[:snippet_helper].blob.text? %>
      <% if local_assigns[:snippet_helper].truncated? %>
        <%= render partial: "repos/scanning/missing_blob", locals: {
              helper: local_assigns[:snippet_helper],
              alert_title: local_assigns[:alert_title],
              tool_display_name: local_assigns[:tool_display_name],
              description: "This snippet is too large to be displayed. This may be because it is minified.",
              code_paths_url: local_assigns[:code_paths_url],
            }
        %>
      <% else %>
        <%= render partial: "repos/scanning/code_snippet", locals: {
              helper: local_assigns[:snippet_helper],
              alert_title: local_assigns[:alert_title],
              tool_display_name: local_assigns[:tool_display_name],
              code_paths_url: local_assigns[:code_paths_url],
            }
        %>
      <% end %>
    <% else %>
      <%= render partial: "repos/scanning/missing_blob", locals: {
            helper: local_assigns[:snippet_helper],
            alert_title: local_assigns[:alert_title],
            tool_display_name: local_assigns[:tool_display_name],
            description: "Previews for binary files can not be displayed.",
            code_paths_url: local_assigns[:code_paths_url],
          }
      %>
    <% end %>
  <% else %>
    <%= render partial: "repos/scanning/missing_blob", locals: {
          helper: local_assigns[:snippet_helper],
          alert_title: local_assigns[:alert_title],
          tool_display_name: local_assigns[:tool_display_name],
          description: local_assigns[:missing_blob_description],
          code_paths_url: local_assigns[:code_paths_url],
        }
    %>
  <% end %>
</div>
