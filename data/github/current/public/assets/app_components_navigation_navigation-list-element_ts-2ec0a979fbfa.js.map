{"version":3,"file":"chunk-app_components_navigation_navigation-list-element_ts-xxxxxxxxxxxx.js","mappings":"sWAKE,cAFF,YACMA,8BAA8BC,YAYlCC,mBAAoB,CAClB,MAAI,CAAEC,GAAqBC,OAAO,CAACC,SAASC,IAAI,CAAE,CAACC,UAAW,EAAI,GAGlEF,SAASG,gBAAgB,CAAC,aAAc,KACtC,IAAMC,EAAeJ,SAASC,IAAI,CAACI,aAAa,CAAkB,8BAE9DD,GAAc,IAAI,CAACE,kBAAkB,CAACF,EAAaG,YAAY,CAAC,SACtE,EACF,CAEAC,sBAAuB,CACrB,MAAI,CAAEV,GAAqBW,UAAU,EACvC,CAEAH,mBAAmBF,CAA2B,CAAE,CAC9C,IAAK,IAAMM,KAAW,IAAI,CAACC,QAAQ,CACjC,GAAID,EAAQE,cAAc,CAACR,IAAiBM,EAAQG,gBAAgB,CAACT,GACnE,OAIJ,IAAK,IAAMM,KAAW,IAAI,CAACC,QAAQ,CACjC,GAAID,EAAQI,2BAA2B,GACrC,MAGN,CAEA,IAAIH,UAAW,CACb,OAAO,IAAI,CAACI,gBAAgB,CAAiB,WAC/C,C,8BA1CA,S,uIAAA,Q,kBAAA,M,yLAACjB,EAAuB,IAAIkB,iBAAiBC,IAC3C,IAAK,IAAMC,KAAYD,EACrB,IAAK,IAAME,KAAQD,EAASE,UAAU,CAC9BD,aAAgBE,iBAClBF,kBAAAA,EAAKG,IAAI,EAEb,IAAI,CAAChB,kBAAkB,CAACa,EAAKZ,YAAY,CAAC,SAGhD,G,CAkCF,EA5CMZ,EAAAA,S,2TAAAA,CADL4B,EAAAA,EAAUA,C,CACL5B,E","sources":["app/components/navigation/navigation-list-element.ts"],"sourcesContent":["import {controller} from '@github/catalyst'\nimport type {NavListElement} from '@primer/view-components/app/components/primer/beta/nav_list'\n\n@controller\nclass NavigationListElement extends HTMLElement {\n  #selectedLinkObserver = new MutationObserver(mutations => {\n    for (const mutation of mutations) {\n      for (const node of mutation.addedNodes) {\n        if (!(node instanceof HTMLMetaElement)) continue\n        if (node.name !== 'selected-link') continue\n\n        this.updateSelectedLink(node.getAttribute('value'))\n      }\n    }\n  })\n\n  connectedCallback() {\n    this.#selectedLinkObserver.observe(document.head, {childList: true})\n\n    // This is to make sure that the selected tab is updated when using back/forward buttons.\n    document.addEventListener('turbo:load', () => {\n      const selectedLink = document.head.querySelector<HTMLMetaElement>('meta[name=\"selected-link\"]')\n\n      if (selectedLink) this.updateSelectedLink(selectedLink.getAttribute('value'))\n    })\n  }\n\n  disconnectedCallback() {\n    this.#selectedLinkObserver.disconnect()\n  }\n\n  updateSelectedLink(selectedLink: string | null) {\n    for (const navList of this.navLists) {\n      if (navList.selectItemById(selectedLink) || navList.selectItemByHref(selectedLink)) {\n        return\n      }\n    }\n\n    for (const navList of this.navLists) {\n      if (navList.selectItemByCurrentLocation()) {\n        return\n      }\n    }\n  }\n\n  get navLists() {\n    return this.querySelectorAll<NavListElement>('nav-list')\n  }\n}\n"],"names":["NavigationListElement","HTMLElement","connectedCallback","selectedLinkObserver","observe","document","head","childList","addEventListener","selectedLink","querySelector","updateSelectedLink","getAttribute","disconnectedCallback","disconnect","navList","navLists","selectItemById","selectItemByHref","selectItemByCurrentLocation","querySelectorAll","MutationObserver","mutations","mutation","node","addedNodes","HTMLMetaElement","name","controller"],"sourceRoot":""}