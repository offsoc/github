# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::UserProfileView`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::UserProfileView`.

class Hydro::Schemas::Github::V1::UserProfileView
  sig do
    params(
      has_organization_memberships: T.nilable(T::Boolean),
      profile_readme_rendered: T.nilable(T::Boolean),
      profile_user: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      profile_viewer: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext),
      scoped_org_id: T.nilable(Google::Protobuf::UInt64Value),
      selected_tab: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(has_organization_memberships: nil, profile_readme_rendered: nil, profile_user: nil, profile_viewer: nil, request_context: nil, scoped_org_id: nil, selected_tab: nil); end

  sig { void }
  def clear_has_organization_memberships; end

  sig { void }
  def clear_profile_readme_rendered; end

  sig { void }
  def clear_profile_user; end

  sig { void }
  def clear_profile_viewer; end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_scoped_org_id; end

  sig { void }
  def clear_selected_tab; end

  sig { returns(T::Boolean) }
  def has_organization_memberships; end

  sig { params(value: T::Boolean).void }
  def has_organization_memberships=(value); end

  sig { returns(T::Boolean) }
  def profile_readme_rendered; end

  sig { params(value: T::Boolean).void }
  def profile_readme_rendered=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def profile_user; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def profile_user=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def profile_viewer; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def profile_viewer=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(T.nilable(Google::Protobuf::UInt64Value)) }
  def scoped_org_id; end

  sig { params(value: T.nilable(Google::Protobuf::UInt64Value)).void }
  def scoped_org_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def selected_tab; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def selected_tab=(value); end
end
