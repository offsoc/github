---
summary: Create a review for a pull request
description: |-
  Creates a review on a specified pull request.

  This endpoint triggers [notifications](${externalDocsUrl}/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "[Rate limits for the API](${externalDocsUrl}/rest/using-the-rest-api/rate-limits-for-the-rest-api#about-secondary-rate-limits)" and "[Best practices for using the REST API](${externalDocsUrl}/rest/guides/best-practices-for-using-the-rest-api)."

  Pull request reviews created in the `PENDING` state are not submitted and therefore do not include the `submitted_at` property in the response. To create a pending review for a pull request, leave the `event` parameter blank. For more information about submitting a `PENDING` review, see "[Submit a review for a pull request](${externalDocsUrl}/rest/pulls/reviews#submit-a-review-for-a-pull-request)."

  > [!NOTE]
  > To comment on a specific line in a file, you need to first determine the position of that line in the diff. To see a pull request diff, add the `application/vnd.github.v3.diff` media type to the `Accept` header of a call to the [Get a pull request](${externalDocsUrl}/rest/pulls/pulls#get-a-pull-request) endpoint.

  The `position` value equals the number of lines down from the first "@@" hunk header in the file you want to add a comment. The line just below the "@@" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.

  This endpoint supports the following custom media types. For more information, see "[Media types](${externalDocsUrl}/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."

  - **`application/vnd.github-commitcomment.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.
  - **`application/vnd.github-commitcomment.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.
  - **`application/vnd.github-commitcomment.html+json`**: Returns HTML rendered from the body's markdown. Response will include `body_html`.
  - **`application/vnd.github-commitcomment.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.
tags:
  - pulls
operationId: pulls/create-review
externalDocs:
  description: API method documentation
  url: '${externalDocsUrl}/rest/pulls/reviews#create-a-review-for-a-pull-request'
parameters:
  - $ref: '../../components/parameters/owner.yaml'
  - $ref: '../../components/parameters/repo.yaml'
  - $ref: '../../components/parameters/pull-number.yaml'
requestBody:
  required: false
  content:
    application/json:
      schema:
        type: object
        properties:
          commit_id:
            type: string
            description: The SHA of the commit that needs a review. Not using the
              latest commit SHA may render your review comment outdated if a subsequent
              commit modifies the line you specify as the `position`. Defaults to
              the most recent commit in the pull request when you do not specify a
              value.
          body:
            type: string
            description: '**Required** when using `REQUEST_CHANGES` or `COMMENT` for
              the `event` parameter. The body text of the pull request review.'
          event:
            type: string
            description: 'The review action you want to perform. The review actions
              include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. By leaving this
              blank, you set the review action state to `PENDING`, which means you
              will need to [submit the pull request review](${externalDocsUrl}/rest/pulls/reviews#submit-a-review-for-a-pull-request)
              when you are ready.'
            enum:
              - APPROVE
              - REQUEST_CHANGES
              - COMMENT
          comments:
            type: array
            description: Use the following table to specify the location, destination,
              and contents of the draft review comment.
            items:
              type: object
              properties:
                path:
                  type: string
                  description: The relative path to the file that necessitates a review
                    comment.
                position:
                  type: integer
                  description: The position in the diff where you want to add a review
                    comment. Note this value is not the same as the line number in
                    the file. The `position` value equals the number of lines down from
                    the first "@@" hunk header in the file you want to add a comment. The
                    line just below the "@@" line is position 1, the next line is position
                    2, and so on. The position in the diff continues to increase through
                    lines of whitespace and additional hunks until the beginning of a new file.
                body:
                  type: string
                  description: Text of the review comment.
                line:
                  type: integer
                  example: 28
                side:
                  type: string
                  example: RIGHT
                start_line:
                  type: integer
                  example: 26
                start_side:
                  type: string
                  example: LEFT
              required:
                - path
                - body
      examples:
        default:
          value:
            commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
            body: This is close to perfect! Please address the suggested inline change.
            event: REQUEST_CHANGES
            comments:
              - path: file.md
                position: 6
                body: Please add more information here, and fix this typo.
responses:
  '200':
    description: Response
    content:
      application/json:
        schema:
          $ref: '../../components/schemas/pull-request-review.yaml'
        examples:
          default:
            $ref: '../../components/examples/pull-request-review.yaml'
  '422':
    $ref: '../../components/responses/validation_failed_simple.yaml'
  '403':
    $ref: '../../components/responses/forbidden.yaml'
x-github-releases:
  - ghec
  - ghes: '>= 2.18'
  - api.github.com
x-github:
  triggersNotification: true
  githubCloudOnly: false
  enabledForGitHubApps: true

  category: pulls
  subcategory: reviews
x-github-internal:
  path: '/repos/{owner}/{repo}/pulls/{pull_number}/reviews'
  http-method: post
  service-tier: 1
  owner: '@github/pull-requests'
  published: true
