{"version":3,"file":"notifications-v2-xxxxxxxxxxxx.js","mappings":"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","sources":["app/assets/modules/github/hydro-tracking.ts","app/assets/modules/github/notifications/v2/update-notification-states.ts","app/assets/modules/github/notifications/v2/notification-search-input.ts","app/assets/modules/github/notifications/v2/bulk-action-dropdowns.ts","app/assets/modules/github/notifications/v2/notification-list-focus.ts","app/assets/modules/github/notifications/v2/update-notifications.ts","app/assets/modules/github/notifications-v2.ts","app/assets/modules/github/notifications/v2/search-input-providers.ts","ui/packages/analytics-overrides/analytics-overrides.ts","ui/packages/client-env/client-env.ts","ui/packages/document-ready/document-ready.ts","ui/packages/failbot/failbot.ts","ui/packages/feature-flags/feature-flags.ts","ui/packages/html-safe-nonce/html-safe-nonce.ts","ui/packages/trusted-types-policies/server-x-safe-html.ts","ui/packages/fetch-utils/fetch-utils.ts","ui/packages/has-interactions/has-interactions.ts","ui/packages/hydro-analytics/hydro-analytics.ts","ui/packages/trusted-types-policies/parse-html.ts","ui/packages/parse-html/parse-html.ts","ui/packages/query-builder-element/query-builder-api.ts","ui/packages/runtime-environment/runtime-environment.ts","ui/packages/safe-storage/safe-storage.ts","ui/packages/safe-storage/session-storage.ts","ui/packages/soft-nav/states.ts","ui/packages/soft-nav/utils.ts","ui/packages/stats/stats.ts","ui/packages/toggle-toast/toggle-toast.ts","ui/packages/trusted-types-policies/policy.ts","ui/packages/trusted-types/trusted-types.ts"],"sourcesContent":["import {sendStats} from '@github-ui/stats'\n\nexport function sendData(hydroEventPayload: string, hydroEventHmac: string, hydroClientContext: string): void {\n  const data = {\n    hydroEventPayload,\n    hydroEventHmac,\n    visitorPayload: '',\n    visitorHmac: '',\n    hydroClientContext,\n  }\n\n  const visitorPayload = document.querySelector('meta[name=visitor-payload]')\n  if (visitorPayload instanceof HTMLMetaElement) {\n    data['visitorPayload'] = visitorPayload.content\n  }\n  const visitorHmac = document.querySelector('meta[name=visitor-hmac]') || ''\n  if (visitorHmac instanceof HTMLMetaElement) {\n    data['visitorHmac'] = visitorHmac.content\n  }\n\n  sendStats(data, true)\n}\n\nexport function trackView(el: HTMLElement) {\n  const payload = el.getAttribute('data-hydro-view') || ''\n  const hmac = el.getAttribute('data-hydro-view-hmac') || ''\n  const hydroClientContext = el.getAttribute('data-hydro-client-context') || ''\n  sendData(payload, hmac, hydroClientContext)\n}\n\nexport function sendHydroEvent(el: HTMLElement) {\n  const payload = el.getAttribute('data-hydro-click-payload') || ''\n  const hmac = el.getAttribute('data-hydro-click-hmac') || ''\n  const hydroClientContext = el.getAttribute('data-hydro-client-context') || ''\n  sendData(payload, hmac, hydroClientContext)\n}\n","/*\n * Applies state updates from a form (e.g. Mark as read/archive/unsubscribe/star) to the element\n * that represents the notification (e.g. The notification item in the list view, or the\n * notification shelf on an Issue page).\n */\nexport function updateNotificationStates(element: HTMLElement, form: HTMLFormElement) {\n  const notification = element.closest<HTMLElement>('[data-notification-id]')!\n\n  // Toggles read/unread/archive status\n  if (form.hasAttribute('data-status')) {\n    toggleNotificationStatus(notification, form.getAttribute('data-status')!)\n  }\n\n  // Toggles subscribed/unsubscribed status\n  if (form.hasAttribute('data-subscription-status')) {\n    toggleNotificationSubscriptionStatus(notification, form.getAttribute('data-subscription-status')!)\n  }\n\n  // Toggles starred/unstarred status\n  if (form.hasAttribute('data-starred-status')) {\n    toggleNotificationStarredStatus(notification, form.getAttribute('data-starred-status')!)\n  }\n}\n\nfunction toggleNotificationStatus(notification: HTMLElement, status: string) {\n  notification.classList.toggle('notification-archived', status === 'archived')\n  notification.classList.toggle('notification-unread', status === 'unread')\n  notification.classList.toggle('notification-read', status === 'read')\n}\n\nfunction toggleNotificationSubscriptionStatus(notification: HTMLElement, status: string) {\n  notification.classList.toggle('notification-unsubscribed', status === 'unsubscribed')\n}\n\nfunction toggleNotificationStarredStatus(notification: HTMLElement, status: string) {\n  notification.classList.toggle('notification-starred', status === 'starred')\n}\n","import {BaseFilterElement, type Suggestion} from '../../filter-input'\nimport {controller} from '@github/catalyst'\n\n@controller\nclass NotificationFilterElement extends BaseFilterElement {\n  async fetchRepositorySuggestions(): Promise<Suggestion[]> {\n    return this.cachedJSON(this.searchInput.getAttribute('data-suggested-repositories-path')!)\n  }\n\n  async fetchOrgSuggestions(): Promise<Suggestion[]> {\n    return this.cachedJSON(this.searchInput.getAttribute('data-suggested-owners-path')!)\n  }\n\n  async fetchAuthorSuggestions(): Promise<Suggestion[]> {\n    return this.cachedJSON(this.searchInput.getAttribute('data-suggested-authors-path')!)\n  }\n\n  async fetchReasonSuggestions(): Promise<Suggestion[]> {\n    return JSON.parse(this.searchInput.getAttribute('data-suggestable-reasons')!)\n  }\n\n  async fetchTypeSuggestions(): Promise<Suggestion[]> {\n    return JSON.parse(this.searchInput.getAttribute('data-suggestable-types')!)\n  }\n\n  override async fetchSuggestionsForQualifier(qualifier: string): Promise<Suggestion[]> {\n    switch (qualifier) {\n      case 'reason':\n        return this.fetchReasonSuggestions()\n      case 'repo':\n        return this.fetchRepositorySuggestions()\n      case 'org':\n        return this.fetchOrgSuggestions()\n      case 'author':\n        return this.fetchAuthorSuggestions()\n      case 'is':\n        return this.fetchTypeSuggestions()\n      default:\n        return []\n    }\n  }\n\n  // This method iterates over all the terms in the query, and returns a list\n  // of any that are invalid because they contain an invalid qualifier.\n  override invalidSearchTerms() {\n    const validQualifiers = this.fetchQualifierSuggestions().map(q => q.value)\n    const parts = this.searchInput.value.split(/\\s+/)\n\n    const invalidParts = parts.filter(part => {\n      const colonIndex = part.indexOf(':')\n\n      if (colonIndex === -1) {\n        // if hasn't typed a ':' yet, assume valid if any\n        // of the valid qualifiers start with what's typed so far\n        return !validQualifiers.some(validQualifier => validQualifier.startsWith(part))\n      } else {\n        // If we have typed a ':', it must fully match a valid qualifier\n        const typedQualifier = part.substr(0, colonIndex + 1)\n\n        return !validQualifiers.some(validQualifier => validQualifier === typedQualifier)\n      }\n    })\n\n    if (invalidParts.length === 0) {\n      return null\n    }\n\n    return invalidParts.join(' ')\n  }\n\n  handleInputFocusIn(): void {\n    this.fetchAuthorSuggestions()\n    this.fetchOrgSuggestions()\n    this.fetchRepositorySuggestions()\n    this.updateFilterSuggestionResults()\n  }\n}\n","// Show/hide an action dropdown, and disable all buttons in it to avoid hotkey submission.\nfunction toggleBulkActionMenu(menu: HTMLElement | null, enabled: boolean) {\n  if (!menu) return\n  menu.hidden = !enabled\n\n  for (const button of menu.querySelectorAll<HTMLButtonElement>('button')) {\n    button.disabled = !enabled\n  }\n}\n\n// Toggle which `mark as...` dropdown is visible based on the current mode.\nexport function toggleBulkActionMenus({markSelected, markAll}: Options) {\n  toggleSelectAll({markSelected, markAll})\n\n  toggleBulkActionMenu(document.querySelector('.js-notifications-mark-selected-actions'), markSelected)\n  toggleBulkActionMenu(document.querySelector('.js-notifications-mark-all-actions'), markAll)\n}\n\n// Toggle which \"select ...\" text is visible based on the current mode.\nfunction toggleSelectAll({markSelected, markAll}: Options) {\n  const selectedText = document.querySelector<HTMLElement>('.js-select-all-text')\n  // Blank slate without toolbar.\n  if (!selectedText) return\n  const selectedTextWithCount = document.querySelector<HTMLElement>('.js-count-selected-text')!\n  const selectedTextWithAllCount = document.querySelector<HTMLElement>('.js-all-count-selected-text')!\n\n  selectedText.hidden = markSelected || markAll\n  selectedTextWithCount.hidden = !markSelected\n  selectedTextWithAllCount.hidden = !markAll\n}\n\ntype Options = {markSelected: boolean; markAll: boolean}\n\n// Add a hidden input to form element and return the input.\nfunction addHiddenInputToForm(form: HTMLFormElement, name: string, value: string): HTMLInputElement {\n  const input = document.createElement('input')\n  input.setAttribute('type', 'hidden')\n  input.setAttribute('name', name)\n  input.setAttribute('value', value)\n  return form.appendChild(input)\n}\n\nexport function updateSelectedNotificationsInBulkActionForms() {\n  const container = document.querySelector<HTMLElement>('.js-notifications-container .js-check-all-container')!\n\n  // Add selected notifications to bulk action forms as hidden inputs\n  for (const form of container.querySelectorAll<HTMLFormElement>(\n    '.js-notifications-mark-selected-actions .js-notification-bulk-action form',\n  )) {\n    addCheckedNotificationsToForm(form)\n  }\n\n  // Show/hide the bulk action menu depending on whether there is 1+ selected\n  if (getCheckedElements().length === 0) {\n    toggleBulkActionMenus({markSelected: false, markAll: false})\n  } else {\n    toggleBulkActionMenus({markSelected: true, markAll: false})\n  }\n}\n\n// Add the checked notification items to the bulk action form.\nfunction addCheckedNotificationsToForm(form: HTMLFormElement) {\n  // Remove any previous notification id input elements from the form\n  for (const input of form.querySelectorAll('[data-bulk-notification]')) {\n    input.remove()\n  }\n\n  // Add all checked notification ids as input elements to the form\n  for (const checked of getCheckedElements()) {\n    const input = addHiddenInputToForm(form, checked.name, checked.value)\n    input.setAttribute('data-bulk-notification', '')\n  }\n}\n\nexport function getCheckedElements() {\n  return document.querySelectorAll<HTMLInputElement>(\n    '.js-notifications-container .js-check-all-container [data-check-all-item]:checked',\n  )\n}\n","import {focus as navigationFocus} from '@github-ui/input-navigation-behavior'\nimport visible from '@github-ui/visible'\n\ninterface FocusPosition {\n  id?: string | null\n  position?: number\n}\n\n/*\n * Returns the currently focussed notification id, and it's position in the\n * notification list This should be saved before the list is modified, and then\n * the result can be passed to restoreFocus() to restore the notification list\n * focus to (roughly) the same place.\n *\n * By default it works with the container and selector used on\n * `/notifications`, but they can be overridden by the `notificationsList` and\n * `keyboardFocusedSelector` optional parameters.\n */\nexport function getCurrentFocus(notificationsList?: HTMLElement, keyboardFocusedSelector?: string): FocusPosition {\n  const container = notificationsList || getNotificationsList()\n  if (!container) return {}\n\n  const keyboardFocused = container.querySelector(\n    keyboardFocusedSelector || '.js-notifications-list-item.navigation-focus',\n  )\n  if (!(keyboardFocused instanceof HTMLElement)) return {}\n\n  return {\n    id: keyboardFocused.getAttribute('data-notification-id'),\n    position: getItems(container).indexOf(keyboardFocused),\n  }\n}\n\n/*\n * Restores the focussed notification list focus, based on the previously\n * focused id/position If `id` is not null, and the notification with that id\n * is still in the notification list, that element will be focussed.\n * Otherwise, the element at the matching position (or the last one if the\n * position exceeds the new list length) will be focussed.\n *\n * Be aware that when notifications are loaded from the server, a notification\n * can jump from anywhere in the list to the top if they are updated with a new\n * notification. So if restoring focus after loading new data from the server,\n * restoring by id may be confusing to users.\n *\n * By default it works with the container on `/notifications` but it can be\n * overridden by the `notificationsList` optional parameter.\n */\nexport function restoreFocus({id, position}: FocusPosition, notificationsList?: HTMLElement) {\n  const container = notificationsList || getNotificationsList()\n  if (!(container instanceof HTMLElement)) return\n\n  const items = getItems(container)\n  let target\n\n  // Try to find target by id if it was passed\n  if (id) {\n    target = items.find(el => el.getAttribute('data-notification-id') === id)\n  }\n\n  // If we didn't find target, and position is passed, find by position\n  // falls back to last item if position > length\n  if (!target && position != null) {\n    target = items[Math.min(position, items.length - 1)]\n  }\n\n  if (target instanceof HTMLElement) {\n    navigationFocus(container, target)\n  }\n}\n\nfunction getNotificationsList() {\n  return document.querySelector('.js-notifications-list .js-navigation-container')\n}\n\n// Returns the visible, navigatable items in the notifications list.\nfunction getItems(container: Element): Element[] {\n  return Array.from(container.querySelectorAll<HTMLElement>('.js-navigation-item')).filter(visible)\n}\n","import {getCurrentFocus, restoreFocus} from './notification-list-focus'\nimport {fetchSafeDocumentFragment} from '@github-ui/fetch-utils'\nimport {hasInteractions} from '@github-ui/has-interactions'\nimport {updateSelectedNotificationsInBulkActionForms} from './bulk-action-dropdowns'\n\nconst DEBOUNCE_DELAY = 500\nlet currentUpdateId = 1\n\n// Creates and returns a unique update id\nexport function getUpdateId(): number {\n  currentUpdateId = (currentUpdateId + 1) % 10000\n  return currentUpdateId\n}\n\nfunction isValidUpdateId(updateId: number): boolean {\n  return currentUpdateId === updateId\n}\n\n// Immediately invalidates any other update sequences\nexport function invalidateUpdates() {\n  getUpdateId()\n}\n\nfunction getUpdateUrl(document: Document | DocumentFragment): string {\n  const container = document.querySelector<HTMLElement>('.js-notifications-container')!\n  return container.getAttribute('data-url')!\n}\n\n/*\n * As the user navigates with PJAX, the current update url can change\n * this function validates that the one we have is still correct against\n * the document currently.\n */\nfunction isValidUpdateUrl(updateUrl: string): boolean {\n  return updateUrl === getUpdateUrl(document)\n}\n\n// Refetch the index page and update the current page with the latest content\n//\n// Before fetching and rendering updates, this function will validate that\n// no other code has requested an update, and that the current notification\n// list url has not changed. This prevents rendering stale content from an old\n// server response into the UI.\n//\n// Additionally, fetches will be debounced by the DEBOUNCE_DELAY to prevent lots of\n// server requests if the user performs many actions quickly.\n//\n// Arguments:\n//   * updateId [optional]\n//     - pass an updateId from getUpdateId() if you need to do some async work between\n//       invalidating existing updates and actually triggering the update\nexport async function updateNotifications(updateId: number = getUpdateId()) {\n  const url = getUpdateUrl(document)\n  let fragment\n\n  // Verify that the updateId passed is still valid\n  if (!isValidUpdateId(updateId)) return\n\n  // Timeout to allow for other requests to come in for a short period of time\n  await new Promise(resolve => setTimeout(resolve, DEBOUNCE_DELAY))\n  // If another update request happened in the meantime, cancel this one\n  if (!isValidUpdateId(updateId)) return\n\n  try {\n    // Verify that the url we want to update from is still the valid url we are showing\n    if (!isValidUpdateUrl(url)) return\n    fragment = await fetchSafeDocumentFragment(document, url)\n  } catch {\n    return\n  }\n\n  // If another update request happened in the meantime, cancel this one\n  if (!isValidUpdateId(updateId)) return\n  const currentFocus = getCurrentFocus()\n  updateContent(fragment)\n  // Only restore the keyboard focus based on position, as the previously\n  // selected notification may have jumped around\n  restoreFocus({position: currentFocus.position})\n\n  updateSelectedNotificationsInBulkActionForms()\n}\n\n/*\n * Update the current document with the elements from the new server-rendered html.\n *\n * We do this in small chunks to reduce the impact of a user interacting with a sub-set of\n * the UI.\n */\nfunction updateContent(fragment: DocumentFragment) {\n  // Don't render results if the page has changed via pjax\n  if (!isValidUpdateUrl(getUpdateUrl(fragment))) {\n    return\n  }\n\n  replaceContent('.js-notification-inboxes', fragment)\n\n  // New action menu filter behind a flag notifications_a11y_filters_migration\n  replaceContent('.js-notification-new-filters', fragment)\n  replaceContent('.js-notification-mobile-filters', fragment)\n  // Old action menu filter\n  replaceContent('.js-notification-sidebar-filters', fragment)\n\n  replaceContent('.js-notification-sidebar-repositories', fragment)\n  replaceContent('.js-notifications-list', fragment)\n  replaceContent('.js-notifications-mark-selected-actions', fragment)\n  replaceContent('.js-notifications-mark-all-actions', fragment)\n\n  replaceContent('.js-notifications-list-paginator-counts', fragment)\n  replaceContent('.js-notifications-list-paginator-buttons', fragment)\n  replaceContent('.js-notifications-list-protip', fragment, (newContent, oldContent) => {\n    // don't update the protip if it has just _changed_ (i.e. both old and new are not empty)\n    if (newContent.children.length > 0 && oldContent.children.length > 0) return false\n\n    return true\n  })\n}\n\n/*\n * Replace the contents of the specific selector from the incoming fragment\n * into the document.\n *\n * If the user is currently interacting with the contents of the selector, it will not\n * be replaced.\n */\nfunction replaceContent(\n  selector: string,\n  fragment: DocumentFragment,\n  filterUpdate?: (newContent: Element, oldContent: Element) => boolean,\n) {\n  const newContent = fragment.querySelector(selector)\n  if (!newContent) return\n\n  const toBeReplaced = document.querySelector(selector)\n  if (!toBeReplaced) return\n  // Do not replace if user is currently interacting with content\n  if (hasInteractions(toBeReplaced, true)) return\n  // Do not replace if content hasn't changed\n  if (newContent.outerHTML === toBeReplaced.outerHTML) return\n\n  // If filterUpdate returns false, skip update\n  if (filterUpdate && !filterUpdate(newContent, toBeReplaced)) return\n\n  toBeReplaced.replaceWith(newContent)\n}\n","import './notifications/v2/notification-search-input'\nimport {fetchPoll, fetchSafeDocumentFragment} from '@github-ui/fetch-utils'\nimport {\n  getCheckedElements,\n  toggleBulkActionMenus,\n  updateSelectedNotificationsInBulkActionForms,\n} from './notifications/v2/bulk-action-dropdowns'\nimport {getCurrentFocus, restoreFocus} from './notifications/v2/notification-list-focus'\nimport {getUpdateId, invalidateUpdates, updateNotifications} from './notifications/v2/update-notifications'\nimport type {Kicker} from '@github/remote-form'\nimport {changeValue} from '@github-ui/form-utils'\n\nimport {fromEvent} from '@github-ui/subscription'\nimport {isShortcutAllowed} from '@github-ui/hotkey/keyboard-shortcuts-helper'\n// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\n// eslint-disable-next-line no-restricted-imports\nimport {on} from 'delegated-events'\nimport {remoteForm} from '@github/remote-form'\nimport {toggleToast} from '@github-ui/toggle-toast'\nimport {trackView} from './hydro-tracking'\nimport {updateNotificationStates} from './notifications/v2/update-notification-states'\nimport {SOFT_NAV_STATE} from '@github-ui/soft-nav/states'\nimport type {QueryBuilderElement} from '@github-ui/query-builder-element'\n\nobserve('.js-bulk-action-toasts[data-job-in-progress]', () => {\n  displayBulkProcessingToast()\n})\n\nobserve('.js-unwatch-suggestions[data-hydro-view]', trackingElement => {\n  if (trackingElement instanceof HTMLElement) trackView(trackingElement)\n})\n\nasync function displayBulkProcessingToast(alreadyProcessing = false) {\n  const jobUrl = document.querySelector<HTMLElement>('.js-bulk-action-toasts')!.getAttribute('data-job-url')\n  if (!jobUrl) throw new Error('could not get job url')\n\n  // We will display an alternative message if the user tries to submit a request\n  // when they already have a pending or running job.\n  if (alreadyProcessing) {\n    showBulkActionToast('.js-bulk-actions-already-processing-toast')\n  } else {\n    showBulkActionToast('.js-bulk-actions-processing-toast')\n  }\n\n  try {\n    const pollResponse = await fetchPoll(jobUrl, {headers: {accept: 'application/json'}})\n    if (pollResponse.status === 200) {\n      showBulkActionToast('.js-bulk-actions-succeeded-toast')\n      updateNotifications()\n    }\n  } catch (error) {\n    showBulkActionToast('.js-bulk-actions-failed-toast')\n  }\n}\n\nfunction showBulkActionToast(classname: string) {\n  toggleToast(document.querySelector<HTMLElement>(classname)!.innerHTML)\n}\n\n// Show the prompt to select _everything_ if all the things on the current\n// page are selected\non('change', '.js-notifications-mark-all-prompt', function (event) {\n  const checked = (event.currentTarget as HTMLInputElement).checked\n\n  // defer to stop flash if it changes before hiding\n  setTimeout(function () {\n    const elements = document.querySelectorAll<HTMLElement>('.js-notifications-mark-all')\n\n    for (const markAllText of elements) {\n      if (markAllText) {\n        markAllText.hidden = !checked\n      }\n    }\n  }, 0)\n})\n\n// Show the mark all dropdown when the \"Select all...\" text is clicked\non('click', '.js-notifications-mark-all', function () {\n  toggleBulkActionMenus({markSelected: false, markAll: true})\n})\n\n// Clear the selection when the \"Clear selection\" text is clicked\non('click', '.js-notifications-unmark-all', function () {\n  changeValue(document.querySelector<HTMLInputElement>('.js-notifications-mark-all-prompt')!, false)\n})\n\n// Replace blank slate with notification list.\nobserve('.js-notifications-blankslate', {\n  subscribe: el =>\n    fromEvent(el, 'socket:message', async function (event: Event) {\n      const url = (event.currentTarget as Element).getAttribute('data-url')\n      if (!url) throw new Error('could not get url')\n      const response = await fetch(url, {headers: {Accept: 'application/json', 'X-Requested-With': 'XMLHttpRequest'}})\n      if (!response.ok) {\n        return\n      }\n      const json: {notifications_exist: boolean} = await response.json()\n      if (json.notifications_exist) {\n        updateNotifications()\n      }\n    }),\n})\n\n// If the user navigates with turbo, immediately invalidate any updateNotification tasks\n// that may be happening, as they will definitely be incorrect\ndocument.addEventListener(SOFT_NAV_STATE.SUCCESS, function () {\n  invalidateUpdates()\n})\n\nasync function performRequest(wants: Kicker) {\n  try {\n    await wants.text()\n  } catch (error) {\n    // TODO show error message\n  }\n}\n\n// Perform an action, change the notification status, and optionally update the page\nremoteForm('.js-notification-action form', async function (form: HTMLFormElement, wants) {\n  const shouldUpdate = form.hasAttribute('data-update')\n  const bulkAction = form.closest('.js-notification-bulk-action') != null\n  const shouldRedirect = form.hasAttribute('data-redirect-to-inbox-on-submit')\n  const shouldCloseOnboardingElement = form.hasAttribute('data-close-onboarding-element')\n\n  if (shouldRedirect) {\n    await performRequest(wants)\n    const inboxButton = document.querySelector<HTMLAnchorElement>('.js-notifications-back-to-inbox')!\n\n    if (inboxButton) {\n      inboxButton.click()\n    }\n\n    return\n  }\n\n  // Generate a unique update ID so that we correctly invalidate existing updates that might\n  // happen during performRequest\n  const updateId = getUpdateId()\n\n  if (bulkAction) {\n    const currentFocus = getCurrentFocus()\n    for (const checked of getCheckedElements()) {\n      updateNotificationStates(checked, form)\n\n      // Uncheck items if we are going to perform an update so the hidden items\n      // can be replaced successfully on update. hasInteractions will return\n      // true if the checked state does not match the default value which\n      // will prevent the replacement.\n      if (shouldUpdate) {\n        changeValue(checked, false)\n      }\n    }\n    restoreFocus(currentFocus)\n\n    try {\n      const response = await wants.text()\n      if (response.status === 202) {\n        displayBulkProcessingToast()\n        if (shouldCloseOnboardingElement) {\n          document.querySelector<HTMLElement>('.js-onboarding-dialog')!.removeAttribute('open')\n          document.querySelector<HTMLElement>('.js-dismiss-notification-onboarding-notice')!.click()\n        }\n      }\n    } catch (error) {\n      // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n      if (error.response.status === 403) {\n        showBulkActionToast('.js-bulk-actions-unsupported-query-toast')\n        // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n      } else if (error.response.status === 409) {\n        displayBulkProcessingToast(true)\n      }\n    }\n  } else {\n    const currentFocus = getCurrentFocus()\n    updateNotificationStates(form, form)\n    restoreFocus(currentFocus)\n    await performRequest(wants)\n  }\n\n  if (shouldUpdate) {\n    updateNotifications(updateId)\n  }\n})\n\n// Show bulk actions when an item checked, hide when all items are unchecked\non('change', '.js-notification-bulk-action-check-item', function () {\n  updateSelectedNotificationsInBulkActionForms()\n})\n\n// Toggle the notification item checkbox when 'x' is pressed\non('navigation:keydown', '.js-notifications-list-item', function (event) {\n  if (!isShortcutAllowed(event.detail.originalEvent)) return\n\n  if (event.detail.hotkey === 'x') {\n    const checkbox = event.currentTarget.querySelector<HTMLInputElement>('.js-notification-bulk-action-check-item')!\n    changeValue(checkbox, !checkbox.checked)\n    event.preventDefault()\n    event.stopPropagation()\n  }\n})\n\n// Show form that allows you to create a new inbox.\non('click', '.js-custom-inbox-create-button', event => {\n  const el = event.currentTarget as HTMLButtonElement\n\n  const detailsDialog = detailsDialogFromElement(el)\n  const details = detailsDialog.closest<HTMLElement>('.js-custom-inbox-details')!\n\n  let searchTerm = ''\n  if (details.classList.contains('js-save-search-details')) {\n    // The user loaded the dialog using the \"Save\" button next to the search\n    // input, so always use the search input value as the default query for\n    // which the user is creating a filter. This helps provide a good default\n    // query after the user deletes a filter in response to the max filters flash.\n    searchTerm = readSearchInput()\n  }\n\n  displayCreateNewInbox(detailsDialog, searchTerm)\n})\n\n// Submit forms for bulk actions in grouped view  asynchronously and update the view accordingly\nremoteForm('.js-grouped-notifications-mark-all-read-button', async function (form: HTMLFormElement, wants) {\n  const submitButton = form.querySelector<HTMLButtonElement>('button')!\n  submitButton.disabled = true\n\n  showBulkActionToast('.js-bulk-actions-processing-toast')\n\n  try {\n    const response = await wants.text()\n    if (response.status === 200) {\n      showBulkActionToast('.js-bulk-actions-succeeded-toast')\n\n      // Add notification-archived class to notifications in group\n      const notificationItems = form\n        .closest<HTMLElement>('.js-notifications-group')!\n        .querySelectorAll('.js-notifications-list-item')\n      for (const notification of notificationItems) {\n        notification.classList.add('notification-archived')\n      }\n    }\n  } catch (error) {\n    submitButton.disabled = false\n    // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n    if (error.response.status === 503) {\n      showBulkActionToast('.js-bulk-actions-failed-toast')\n    }\n  }\n})\n\n// Submit forms in the custom inbox dialog asynchronously and update the dialog contents and custom inboxes in the sidebar\nremoteForm('.js-custom-inbox-form', async function (form: HTMLFormElement, wants) {\n  try {\n    await wants.json()\n  } catch (error) {\n    return\n  }\n\n  const detailsDialog = detailsDialogFromElement(form)\n  updateNotifications()\n  updateDialogContent(detailsDialog)\n})\n\nobserve('.js-custom-inbox-details', details => {\n  details.addEventListener('toggle', () => {\n    const detailsDialog = details.querySelector<HTMLElement>('.js-custom-inbox-dialog')!\n\n    if (!details.hasAttribute('open')) {\n      resetDialogContent(detailsDialog)\n      return\n    }\n\n    // if it's not the save a new search button, don't pass a query string\n    if (!details.classList.contains('js-save-search-details')) {\n      updateDialogContent(detailsDialog)\n      return\n    }\n\n    const searchInput = readSearchInput()\n    updateDialogContent(detailsDialog, searchInput)\n  })\n})\n\nfunction readSearchInput(): string {\n  const searchInput = document.querySelector<HTMLInputElement>('.js-notification-search-input')!\n  const queryInput = document.querySelector<HTMLInputElement>('#notifications-search-input')\n  if (searchInput) {\n    return searchInput.value\n  } else if (queryInput) {\n    return queryInput.value\n  }\n  return ''\n}\n\nasync function updateDialogContent(detailsDialog: Element, newInboxQueryString = '') {\n  const url = detailsDialog.getAttribute('src')\n  if (!url) throw new Error('could not get src')\n\n  let html\n  try {\n    html = await fetchSafeDocumentFragment(document, url)\n  } catch (error) {\n    return\n  }\n\n  const dialogContent = detailsDialog.querySelector<HTMLElement>('.js-custom-inbox-dialog-content')!\n\n  // Hide the spinner\n  detailsDialog.querySelector<HTMLElement>('.js-custom-inbox-dialog-spinner')!.hidden = true\n  // Replace dialog content with response\n  dialogContent.textContent = ''\n  dialogContent.appendChild(html)\n\n  const maxFiltersFlash = document.querySelector<HTMLElement>('.js-custom-inbox-max-filters-flash')\n\n  if (newInboxQueryString.length > 0 && maxFiltersFlash) {\n    // If the user is trying to save via the \"save search\" button\n    // but already has the max amount of filters, display the max filters flash.\n    maxFiltersFlash.hidden = false\n  } else if (newInboxQueryString.length > 0) {\n    // If the user is trying to save via the \"save search\" button and does not\n    // already have the max filters, display the create inbox fields.\n    displayCreateNewInbox(detailsDialog, newInboxQueryString)\n  }\n}\n\nfunction displayCreateNewInbox(detailsDialog: Element, newInboxQueryString = '') {\n  // Set the new query string input value to the search input value\n  if (newInboxQueryString.length > 0) {\n    const queryInput = detailsDialog.querySelector<HTMLInputElement>('.js-custom-inbox-query-string-input')!\n    queryInput.value = newInboxQueryString\n  }\n\n  const container = detailsDialog.querySelector<HTMLElement>('.js-custom-inbox-create-form-container')!\n  const nameInput = container.querySelector<HTMLElement>('.js-custom-inbox-name-input')!\n  const createButton = detailsDialog.querySelector<HTMLButtonElement>('.js-custom-inbox-create-button')!\n\n  createButton.disabled = true\n  container.hidden = false\n  nameInput.focus()\n}\n\nfunction resetDialogContent(detailsDialog: Element) {\n  detailsDialog.querySelector<HTMLElement>('.js-custom-inbox-dialog-spinner')!.hidden = false\n  detailsDialog.querySelector<HTMLElement>('.js-custom-inbox-dialog-content')!.textContent = ''\n}\n\nfunction detailsDialogFromElement(el: Element) {\n  const details = el.closest<HTMLElement>('.js-custom-inbox-details')!\n  return details.querySelector<HTMLElement>('.js-custom-inbox-dialog')!\n}\n\nobserve('.js-notifications-group .notification-archived', {\n  constructor: HTMLElement,\n  add: updateGroupDisplay,\n})\n\nfunction updateGroupDisplay(notification: HTMLElement) {\n  const group = notification.closest<HTMLElement>('.js-notifications-group')!\n\n  const notificationElements = notification.parentElement?.children\n  if (!notificationElements) return\n\n  const allNotificationsArchived = Array.from(notificationElements).every(el =>\n    el.classList.contains('notification-archived'),\n  )\n  const groupDoesNotHaveViewMoreLink = group.querySelector('.js-notifications-group-view-all') == null\n\n  // Only remove the group if all notifications are archived AND the group does not have a link to view more notifications\n  if (allNotificationsArchived && groupDoesNotHaveViewMoreLink) group.remove()\n}\n\non('query-builder:clear', '#query-builder-notifications-search-input', function (event) {\n  const query = new URLSearchParams(window.location.search).get('query')\n\n  // Default query builder behaviour\n  if (!query) {\n    return true\n  }\n\n  // Override query builder and submit the cleared form\n  event.preventDefault()\n\n  const queryBuilder = event.target as QueryBuilderElement\n  const searchInput = queryBuilder.input\n\n  queryBuilder.clearInput({focusInput: false}) // prevent the autocomplete panel from opening\n\n  const form = searchInput.closest('form')\n  form?.submit()\n\n  return false\n})\n","import memoize from '@github/memoize'\nimport {hasMatch} from 'fzy.js'\nimport {\n  type SearchProvider,\n  type FilterProvider,\n  FilterItem,\n  type QueryEvent,\n  type QueryFilterElement,\n  SearchItem,\n  Octicon,\n} from '@github-ui/query-builder-element/query-builder-api'\nimport type {QueryBuilderElement} from '@github-ui/query-builder-element'\n\ninterface Suggestion {\n  value: string\n}\n\nconst memoizeCache = new Map()\nconst memoizeFetchJSON = memoize(fetchJSON, {cache: memoizeCache})\n\nasync function fetchJSON(url: string) {\n  const response = await fetch(url, {headers: {Accept: 'application/json'}})\n\n  if (response.ok) {\n    return await response.json()\n  } else {\n    return undefined\n  }\n}\n\nconst getSearchUrl =\n  document.querySelector<HTMLFormElement>('#notifications-search-input-form')?.getAttribute('action') || ''\n\nconst filterSuggestions = (suggestions: string[], query: string) =>\n  suggestions.filter(suggestion => {\n    if ((query && hasMatch(query, suggestion)) || query === '') return suggestion\n  })\n\nfunction getSearchInput(): HTMLElement {\n  return document.querySelector<HTMLElement>('query-builder#query-builder-notifications-search-input')!\n}\n\nasync function fetchAuthorSuggestions(): Promise<Suggestion[]> {\n  const url = getSearchInput().getAttribute('data-suggestable-authors')!\n  return memoizeFetchJSON(url)\n}\n\nasync function fetchRepositoriesSuggestions(): Promise<Suggestion[]> {\n  const url = getSearchInput().getAttribute('data-suggestable-repositories')!\n  return memoizeFetchJSON(url)\n}\n\nasync function fetchOwnersSuggestions(): Promise<Suggestion[]> {\n  const url = getSearchInput().getAttribute('data-suggestable-owners')!\n  return memoizeFetchJSON(url)\n}\n\nasync function fetchTypesSuggestions(): Promise<Suggestion[]> {\n  return JSON.parse(getSearchInput().getAttribute('data-suggestable-types')!)\n}\n\nasync function fetchReasonsSuggestions(): Promise<Suggestion[]> {\n  return JSON.parse(getSearchInput().getAttribute('data-suggestable-reasons')!)\n}\n\nconst authors = async (): Promise<Suggestion[]> => await fetchAuthorSuggestions()\nconst repositories = async (): Promise<Suggestion[]> => await fetchRepositoriesSuggestions()\nconst types = async (): Promise<Suggestion[]> => await fetchTypesSuggestions()\nconst reasons = async (): Promise<Suggestion[]> => await fetchReasonsSuggestions()\nconst owners = async (): Promise<Suggestion[]> => await fetchOwnersSuggestions()\n\nclass SearchItemProvider extends EventTarget implements SearchProvider {\n  priority = 1\n  name = 'Search'\n  singularItemName = 'search item'\n  value = 'search'\n  type = 'search' as const\n\n  constructor(public queryBuilder: QueryBuilderElement) {\n    super()\n\n    this.queryBuilder.addEventListener('query', this)\n    this.queryBuilder.attachProvider(this)\n  }\n\n  handleEvent(event: QueryEvent) {\n    if (String(event) === '') return\n    this.dispatchEvent(\n      new SearchItem({\n        priority: 1,\n        value: event.toString(),\n        icon: Octicon.Search,\n        scope: 'GENERAL',\n        action: {\n          url: `${getSearchUrl}?query=${event.toString()}`,\n        },\n      }),\n    )\n  }\n}\n\nclass AuthorProvider extends EventTarget implements FilterProvider {\n  name = 'Authors'\n  singularItemName = 'author'\n  value = 'author'\n  description = 'filter by notification author'\n  priority = 2\n  type = 'filter' as const\n\n  constructor(public queryBuilder: QueryBuilderElement) {\n    super()\n\n    this.queryBuilder.addEventListener('query', this)\n    this.queryBuilder.attachProvider(this)\n  }\n\n  async handleEvent(event: QueryEvent) {\n    const lastQuery = event.parsedQuery.at(-1)\n    const lastQueryValue = lastQuery?.value || ''\n    const lastQueryType = lastQuery?.type\n    const lastQueryFilter = (lastQuery as QueryFilterElement)?.filter || ''\n\n    if (lastQueryType !== 'filter' && (hasMatch(lastQueryValue, this.value) || lastQueryValue === '')) {\n      this.dispatchEvent(new Event('show'))\n    }\n\n    // Prevents the author filters from being fetched if the author filter was not chosen\n    if (lastQueryType !== 'filter' || lastQueryFilter !== this.value) return\n\n    const getAuthorData = await authors()\n    const authorValues = getAuthorData.map(author => author.value)\n    const filteredAuthors = filterSuggestions(authorValues, lastQueryValue)\n\n    // Only show the top 5 results to avoid overwhelming the browser,\n    // fixes https://github.com/github/discussions/issues/2816\n    const limitedFilteredAuthors = filteredAuthors.slice(0, 5)\n\n    for (const author of limitedFilteredAuthors) {\n      this.dispatchEvent(new FilterItem({filter: 'author', value: author}))\n    }\n  }\n}\n\nclass RepositoryProvider extends EventTarget implements FilterProvider {\n  name = 'Repositories'\n  singularItemName = 'repo'\n  value = 'repo'\n  description = 'filter by repository'\n  priority = 2\n  type = 'filter' as const\n\n  constructor(public queryBuilder: QueryBuilderElement) {\n    super()\n\n    this.queryBuilder.addEventListener('query', this)\n    this.queryBuilder.attachProvider(this)\n  }\n\n  async handleEvent(event: QueryEvent) {\n    const lastQuery = event.parsedQuery.at(-1)\n    const lastQueryValue = lastQuery?.value || ''\n    const lastQueryType = lastQuery?.type\n    const lastQueryFilter = (lastQuery as QueryFilterElement)?.filter || ''\n\n    if (lastQueryType !== 'filter' && (hasMatch(lastQueryValue, this.value) || lastQueryValue === '')) {\n      this.dispatchEvent(new Event('show'))\n    }\n\n    if (lastQueryType !== 'filter' || lastQueryFilter !== this.value) return\n\n    const getRepoData = await repositories()\n    const repoValues = getRepoData.map(repo => repo.value)\n    const filteredRepos = filterSuggestions(repoValues, lastQueryValue)\n\n    // Only show the top 5 results to avoid overwhelming the browser,\n    // fixes https://github.com/github/discussions/issues/2816\n    const limitedFilteredRepos = filteredRepos.slice(0, 5)\n\n    for (const repo of limitedFilteredRepos) {\n      this.dispatchEvent(new FilterItem({filter: 'repo', value: repo}))\n    }\n  }\n}\n\nclass OwnersProvider extends EventTarget implements FilterProvider {\n  name = 'Organizations'\n  singularItemName = 'org'\n  value = 'org'\n  description = 'filter by organization'\n  priority = 2\n  type = 'filter' as const\n\n  constructor(public queryBuilder: QueryBuilderElement) {\n    super()\n\n    this.queryBuilder.addEventListener('query', this)\n    this.queryBuilder.attachProvider(this)\n  }\n\n  async handleEvent(event: QueryEvent) {\n    const lastQuery = event.parsedQuery.at(-1)\n    const lastQueryValue = lastQuery?.value || ''\n    const lastQueryType = lastQuery?.type\n    const lastQueryFilter = (lastQuery as QueryFilterElement)?.filter || ''\n\n    if (lastQueryType !== 'filter' && (hasMatch(lastQueryValue, this.value) || lastQueryValue === '')) {\n      this.dispatchEvent(new Event('show'))\n    }\n\n    if (lastQueryType !== 'filter' || lastQueryFilter !== this.value) return\n\n    const getOwnerData = await owners()\n    const ownerValues = getOwnerData.map(owner => owner.value)\n    const filteredOwners = filterSuggestions(ownerValues, lastQueryValue)\n\n    // Only show the top 5 results to avoid overwhelming the browser,\n    // fixes https://github.com/github/discussions/issues/2816\n    const limitedFilteredOwners = filteredOwners.slice(0, 5)\n\n    for (const org of limitedFilteredOwners) {\n      this.dispatchEvent(new FilterItem({filter: 'org', value: org}))\n    }\n  }\n}\n\nclass TypeProvider extends EventTarget implements FilterProvider {\n  name = 'Types'\n  singularItemName = 'type'\n  value = 'is'\n  description = 'filter by status or discussion type'\n  priority = 2\n  type = 'filter' as const\n\n  constructor(public queryBuilder: QueryBuilderElement) {\n    super()\n\n    this.queryBuilder.addEventListener('query', this)\n    this.queryBuilder.attachProvider(this)\n  }\n\n  async handleEvent(event: QueryEvent) {\n    const lastQuery = event.parsedQuery.at(-1)\n    const lastQueryValue = lastQuery?.value || ''\n    const lastQueryType = lastQuery?.type\n    const lastQueryFilter = (lastQuery as QueryFilterElement)?.filter || ''\n\n    if (lastQueryType !== 'filter' && (hasMatch(lastQueryValue, this.value) || lastQueryValue === '')) {\n      this.dispatchEvent(new Event('show'))\n    }\n\n    if (lastQueryType !== 'filter' || lastQueryFilter !== this.value) return\n\n    const getTypeData = await types()\n    const typeValues = getTypeData.map(role => role.value)\n\n    const filteredTypes = filterSuggestions(typeValues, lastQueryValue)\n\n    for (const typeValue of filteredTypes) {\n      this.dispatchEvent(new FilterItem({filter: 'is', value: typeValue}))\n    }\n  }\n}\n\nclass ReasonProvider extends EventTarget implements FilterProvider {\n  name = 'Reasons'\n  singularItemName = 'reason'\n  value = 'reason'\n  description = 'filter by notification reason'\n  priority = 2\n  type = 'filter' as const\n\n  constructor(public queryBuilder: QueryBuilderElement) {\n    super()\n\n    this.queryBuilder.addEventListener('query', this)\n    this.queryBuilder.attachProvider(this)\n  }\n\n  async handleEvent(event: QueryEvent) {\n    const lastQuery = event.parsedQuery.at(-1)\n    const lastQueryValue = lastQuery?.value || ''\n    const lastQueryType = lastQuery?.type\n    const lastQueryFilter = (lastQuery as QueryFilterElement)?.filter || ''\n\n    if (lastQueryType !== 'filter' && (hasMatch(lastQueryValue, this.value) || lastQueryValue === '')) {\n      this.dispatchEvent(new Event('show'))\n    }\n\n    if (lastQueryType !== 'filter' || lastQueryFilter !== this.value) return\n\n    const getTypeData = await reasons()\n    const reasonValues = getTypeData.map(reason => reason.value)\n\n    const filteredReasons = filterSuggestions(reasonValues, lastQueryValue)\n\n    for (const reason of filteredReasons) {\n      this.dispatchEvent(new FilterItem({filter: 'reason', value: reason}))\n    }\n  }\n}\n\ndocument.addEventListener('query-builder:request-provider', (event: Event) => {\n  new SearchItemProvider(event.target as QueryBuilderElement)\n  new RepositoryProvider(event.target as QueryBuilderElement)\n  new TypeProvider(event.target as QueryBuilderElement)\n  new ReasonProvider(event.target as QueryBuilderElement)\n  new AuthorProvider(event.target as QueryBuilderElement)\n  new OwnersProvider(event.target as QueryBuilderElement)\n})\n","function queryLast<T extends Element>(selector: string): T | undefined {\n  const list = document.querySelectorAll<T>(selector)\n  if (list.length > 0) {\n    return list[list.length - 1]\n  }\n}\n\nfunction pagePathname() {\n  const locationOverride = queryLast<HTMLMetaElement>('meta[name=analytics-location]')\n  if (locationOverride) {\n    return locationOverride.content\n  } else {\n    return window.location.pathname\n  }\n}\n\nfunction pageQuery() {\n  const stripParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-query-strip]')\n  let search = ''\n\n  if (!stripParams) {\n    search = window.location.search\n  }\n\n  const extraParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-params]')\n  if (extraParams) {\n    search += (search ? '&' : '?') + extraParams.content\n  }\n\n  for (const meta of document.querySelectorAll<HTMLMetaElement>('meta[name=analytics-param-rename]')) {\n    const names = meta.content.split(':', 2)\n    search = search.replace(new RegExp(`(^|[?&])${names[0]}($|=)`, 'g'), `$1${names[1]}$2`)\n  }\n\n  return search\n}\n\nexport function requestUri() {\n  return `${window.location.protocol}//${window.location.host}${pagePathname() + pageQuery()}`\n}\n","export interface ClientEnvironment {\n  readonly locale: string\n  readonly featureFlags: string[]\n}\n\nlet env: ClientEnvironment | undefined\n\nexport function getEnv() {\n  if (!env) {\n    throw new Error(\n      'Client env was requested before it was loaded. This likely means you are attempting to use client env at the module level in SSR, which is not supported. Please move your client env usage into a function.',\n    )\n  }\n\n  return env\n}\n\nexport function getLocale() {\n  return env?.locale ?? 'en-US'\n}\n\nfunction loadEnv() {\n  if (typeof document !== 'undefined') {\n    const envTag = document.getElementById('client-env')\n    if (envTag) {\n      try {\n        env = JSON.parse(envTag.textContent || '')\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error('Error parsing client-env', error)\n      }\n    }\n  }\n}\n\n// Automatically load the env on initial page load\nloadEnv()\n\n// This is a special helper method for setting the env in the SSR environment only\nexport function setClientEnvForSsr(clientEnv: ClientEnvironment | undefined) {\n  env = clientEnv\n}\n\n// This env object is used as a default for tests only and is not included in production builds\nexport const clientEnvForTests: ClientEnvironment = {\n  locale: 'en',\n  featureFlags: ['test_flag'],\n}\n\nexport function _resetForTests({loadNewEnv, forceUndefined}: {loadNewEnv: boolean; forceUndefined?: boolean}) {\n  // forget the current env\n  env = forceUndefined ? undefined : clientEnvForTests\n\n  if (loadNewEnv) {\n    // load the latest env\n    loadEnv()\n  }\n}\n","import {ssrSafeDocument, ssrSafeWindow} from '@github-ui/ssr-utils'\n\n// Check if document has passed interactive state.\n//\n// The document has finished loading and the document has been parsed but\n// sub-resources such as images, stylesheets and frames are still loading.\n// The state indicates that the DOMContentLoaded event has been fired.\nexport const ready: Promise<void> = (function () {\n  if (ssrSafeDocument?.readyState === 'interactive' || ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise<void>(resolve => {\n      ssrSafeDocument?.addEventListener('DOMContentLoaded', () => {\n        resolve()\n      })\n    })\n  }\n})()\n\n// Check if document has passed loaded state.\n//\n// The document and all sub-resources have finished loading. The state\n// indicates that the load event has been fired.\nexport const loaded: Promise<unknown> = (function () {\n  if (ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise(resolve => {\n      ssrSafeWindow?.addEventListener('load', resolve)\n    })\n  }\n})()\n","// Report uncaught JS errors to Sentry\n//   https://sentry.io/github/github-js\n\nimport {getOrCreateClientId} from '@github/hydro-analytics-client'\nimport {isSupported} from '@github/browser-support'\nimport {parse} from 'stacktrace-parser'\nimport {requestUri} from '@github-ui/analytics-overrides'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {getSoftNavReferrer} from '@github-ui/soft-nav/utils'\n\nlet extensionErrors = false\nlet errorsReported = 0\nconst loadTime = Date.now()\n// network error messages are not consistent across browsers, this is a list of known messages for chrome and firefox\nexport const EXPECTED_NETWORK_ERROR_MESSAGES = new Set([\n  'Failed to fetch',\n  'NetworkError when attempting to fetch resource.',\n])\n\ntype ErrorContext = {\n  message?: string\n}\n\n// Check if an arbitrary object is an error, or at least an object that satisfies the interface of an error,\n// with the necessary information to be able to report it to Sentry.\nfunction isError(error: unknown): error is Error {\n  // Check if it's a definite instance of an error\n  if (error instanceof Error) return true\n  // Otherwise, check that it at least satisfies the interface of an error\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'name' in error &&\n    typeof error.name === 'string' &&\n    'message' in error &&\n    typeof error.message === 'string'\n  )\n}\n\n/** Tries to serialize an arbitrary error value that is not an Error object, and returns a default message otherwise */\nfunction serializeNonError(error: unknown): string {\n  try {\n    return JSON.stringify(error)\n  } catch {\n    return 'Unserializable'\n  }\n}\n\nfunction isExpectedError(error: Error): boolean {\n  // We use AbortController to control events and some workflows. When we call `abort()` on it, it will raise an\n  // `AbortError` which doesn't represent a real error, so we don't want to report it.\n  if (error.name === 'AbortError') return true\n  // Failed to fetch errors are usually related to the user's network connection. They also do not represent\n  // real errors related to our code, so we will also ignore them.\n  if (error.name === 'TypeError' && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n  // For memex we use an ApiError class to represent errors returned from the API\n  // Additional details in the format of ApiErrorOpts are affixed to the name as a stringified JSON object\n  // so we just need to ensure the error name starts with ApiError\n  // see ui/packages/memex/src/client/platform/api-error.ts for more details.\n  if (error.name.startsWith('ApiError') && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n\n  return false\n}\n\n// @deprecated Re-throw the caught exception instead.\nexport function reportError(error: unknown, context: ErrorContext = {}) {\n  if (isFeatureEnabled('FAILBOT_HANDLE_NON_ERRORS')) {\n    if (!isError(error)) {\n      if (isIgnoredNonError(error)) return\n\n      // Create an error instance so that we can get the stacktrace of how this was reported\n      const errorForStackTrace = new Error()\n      const serializedErrorValue = serializeNonError(error)\n      // Construct a custom error object so we can keep track of anywhere that we report an error that isn't an Error object\n      const newError: PlatformJavascriptError = {\n        type: 'UnknownError',\n        value: `Unable to report error, due to a thrown non-Error type: ${typeof error}, with value ${serializedErrorValue}`,\n        stacktrace: stacktrace(errorForStackTrace),\n        catalogService: undefined,\n      }\n      report(errorContext(newError, context))\n      return\n    }\n    if (!isExpectedError(error)) {\n      report(errorContext(formatError(error), context))\n    }\n  } else {\n    // Without feature flag, we will cast the `error` variable which was implicitly the old\n    // behavior of the non-feature flagged code.\n    if (!isExpectedError(error as Error)) {\n      report(errorContext(formatError(error as Error), context))\n    }\n  }\n}\n\n// Report context info to Sentry.\nasync function report(context: PlatformReportBrowserErrorInput) {\n  if (!reportable()) return\n\n  const url = document.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-errors-url\"]')?.content\n  if (!url) return\n\n  if (isExtensionError(context.error.stacktrace)) {\n    extensionErrors = true\n    return\n  }\n\n  errorsReported++\n\n  try {\n    await fetch(url, {method: 'post', body: JSON.stringify(context)})\n  } catch {\n    // Error reporting failed so do nothing.\n  }\n}\n\nfunction formatError(error: Error): PlatformJavascriptError {\n  return {\n    type: error.name,\n    value: error.message,\n    stacktrace: stacktrace(error),\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    catalogService: (error as any)['catalogService'],\n  }\n}\n\nfunction errorContext(error: PlatformJavascriptError, context: ErrorContext = {}): PlatformReportBrowserErrorInput {\n  return Object.assign(\n    {\n      error,\n      sanitizedUrl: requestUri() || window.location.href,\n      readyState: document.readyState,\n      referrer: getSoftNavReferrer(),\n      timeSinceLoad: Math.round(Date.now() - loadTime),\n      user: pageUser() || undefined,\n      bundler,\n      ui: Boolean(document.querySelector('meta[name=\"ui\"]')),\n    },\n    context,\n  )\n}\n\nexport function stacktrace(error: Error): PlatformStackframe[] {\n  return parse(error.stack || '').map(frame => ({\n    filename: frame.file || '',\n    function: String(frame.methodName),\n    lineno: (frame.lineNumber || 0).toString(),\n    colno: (frame.column || 0).toString(),\n  }))\n}\n\nconst extensions = /(chrome|moz|safari)-extension:\\/\\//\n\n// Does this stack trace contain frames from browser extensions?\nfunction isExtensionError(stack: PlatformStackframe[]): boolean {\n  return stack.some(frame => extensions.test(frame.filename) || extensions.test(frame.function))\n}\n\nexport function pageUser() {\n  const login = document.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n  if (login) return login\n\n  const clientId = getOrCreateClientId()\n  return `anonymous-${clientId}`\n}\n\nlet unloaded = false\nssrSafeWindow?.addEventListener('pageshow', () => (unloaded = false))\nssrSafeWindow?.addEventListener('pagehide', () => (unloaded = true))\n\nfunction reportable() {\n  return !unloaded && !extensionErrors && errorsReported < 10 && isSupported()\n}\n\nif (typeof BroadcastChannel === 'function') {\n  const sharedWorkerErrorChannel = new BroadcastChannel('shared-worker-error')\n  sharedWorkerErrorChannel.addEventListener('message', event => {\n    // SharedWorker will emit a formatted error\n    reportError(event.data.error)\n  })\n}\n\nconst ignoredErrorMessages = [\n  'Object Not Found Matching Id', // from Microsoft Outlook SafeLink crawler\n  'Not implemented on this platform', // LastPass Safari extension\n  `provider because it's not your default extension`, // MetaMask extension\n]\n\n/**\n * We see a fair number of \"errors\" which are not actually Error objects. This function will return true if the\n * error is one of these known non-Error types and has content which we know can safely be ignored.\n * Most of these errors come from specific browsers or extensions which we can't control, so we just ignore them.\n * @param error An error that is not an Error object\n * @returns boolean\n */\nfunction isIgnoredNonError(error: unknown) {\n  if (!error || typeof error === 'boolean' || typeof error === 'number') {\n    // Rejected with a type that is not useful to report. Just ignore it.\n    return true\n  } else if (typeof error === 'string') {\n    // rejected with a string. See if it's a known error that we can ignore\n    if (ignoredErrorMessages.some(message => error.includes(message))) {\n      return true\n    }\n  } else if (\n    typeof error === 'object' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).message === 'string' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).code === 'number'\n  ) {\n    // We see an object like {\"message\":\"Not connected\",\"code\":4900} from some extension, likely MetaMask. Ignore these\n    return true\n  }\n\n  return false\n}\n","import memoize from '@github/memoize'\nimport {getEnv} from '@github-ui/client-env'\nimport {IS_SERVER} from '@github-ui/ssr-utils'\n\nfunction getEnabledFeaturesSet(): Set<string> {\n  const features = getEnv().featureFlags\n  const featuresUpperCase = features.map(feature => feature.toLowerCase())\n  return new Set<string>(featuresUpperCase)\n}\n\nconst featuresSet =\n  IS_SERVER || process.env.NODE_ENV === 'test' ? getEnabledFeaturesSet : memoize(getEnabledFeaturesSet)\n\nexport function getEnabledFeatures(): string[] {\n  return Array.from(featuresSet())\n}\n\nexport function isFeatureEnabled(name: string): boolean {\n  return featuresSet().has(name.toLowerCase())\n}\n\n//exported to allow mocking in tests\nconst featureFlag = {isFeatureEnabled}\n\nexport {featureFlag}\n","//  Get document's HTML Safe nonce.\n//\n// Example:\n//\n//   <meta name=\"html-safe-nonce\" content=\"de43a1f355c711f7f705e4f971964391ac0c8e13\">\nexport function getDocumentHtmlSafeNonces(document: Document): string[] {\n  const nonces = [...document.querySelectorAll<HTMLMetaElement>('meta[name=html-safe-nonce]')].map(meta => meta.content)\n\n  if (nonces.length < 1) {\n    throw new Error('could not find html-safe-nonce on document')\n  }\n  return nonces\n}\n\ninterface Response {\n  headers: Headers\n  status: number\n}\n\nclass ResponseError extends Error {\n  response: Response\n\n  constructor(message: string, response: Response) {\n    super(`${message} for HTTP ${response.status}`)\n    this.response = response\n  }\n}\n\nexport function verifyResponseHtmlSafeNonce(nonces: string[], response: Response, allowJson = false) {\n  const contentType = response.headers.get('content-type') || ''\n  if (!allowJson && !contentType.startsWith('text/html')) {\n    throw new ResponseError(`expected response with text/html, but was ${contentType}`, response)\n  }\n\n  if (allowJson && !(contentType.startsWith('text/html') || contentType.startsWith('application/json'))) {\n    throw new ResponseError(`expected response with text/html or application/json, but was ${contentType}`, response)\n  }\n\n  const responseNonce = response.headers.get('x-html-safe')\n  if (!responseNonce) {\n    throw new ResponseError(`missing X-HTML-Safe nonce`, response)\n  } else if (!nonces.includes(responseNonce)) {\n    throw new ResponseError(`response X-HTML-Safe nonce did not match`, response)\n  }\n}\n","import {getDocumentHtmlSafeNonces, verifyResponseHtmlSafeNonce} from '@github-ui/html-safe-nonce'\nimport {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {trustedTypesPolicy} from './policy'\n\nconst policyName = 'server-x-safe-html'\n\n// This is a no-op policy to be used with server-side rendered HTML.\nexport const serverXSafeHTMLPolicy = ghTrustedTypes.createPolicy(policyName, {\n  createHTML: (s: string, response: Response) => {\n    return trustedTypesPolicy.apply({\n      policy: () => {\n        verifyResponseHtmlSafeNonce(getDocumentHtmlSafeNonces(document), response)\n        return s\n      },\n      policyName,\n      fallback: s,\n      silenceErrorReporting: true,\n    })\n  },\n})\n","import {parseHTML} from '@github-ui/parse-html'\nimport {serverXSafeHTMLPolicy} from '@github-ui/trusted-types-policies/server-x-safe-html'\n\nexport async function fetchSafeDocumentFragment(\n  document: Document,\n  url: RequestInfo,\n  options?: RequestInit,\n): Promise<DocumentFragment> {\n  const request = new Request(url, options)\n  request.headers.append('X-Requested-With', 'XMLHttpRequest')\n  const response = await self.fetch(request)\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error(`HTTP ${response.status}${response.statusText || ''}`)\n  }\n  const trustedHTML = serverXSafeHTMLPolicy.createHTML(await response.text(), response)\n  return parseHTML(document, trustedHTML)\n}\n\nexport function fetchPoll(\n  url: RequestInfo,\n  options?: RequestInit,\n  timeBetweenRequests = 1000,\n  acceptedStatusCodes = [200],\n  pollStatusCodes = [202],\n): Promise<Response> {\n  return (async function poll(wait: number): Promise<Response> {\n    const request = new Request(url, options)\n    request.headers.append('X-Requested-With', 'XMLHttpRequest')\n    const response = await self.fetch(request)\n\n    if (pollStatusCodes.includes(response.status)) {\n      await new Promise(resolve => setTimeout(resolve, wait))\n      return poll(wait * 1.5)\n    }\n    if (acceptedStatusCodes.includes(response.status)) {\n      return response\n    }\n    if (response.status < 200 || response.status >= 300) {\n      throw new Error(`HTTP ${response.status}${response.statusText || ''}`)\n    }\n    throw new Error(`Unexpected ${response.status} response status from poll endpoint`)\n  })(timeBetweenRequests)\n}\n\ntype RetryResult = Response | 'retry'\ntype FetchRetryOptions = {\n  // Base wait time between retries\n  // this will be multiplied with the current attempt to perform a backoff strategy\n  // Defaults to 500ms\n  wait?: number\n  // List of accepted status codes that should not be retried. Defaults to [200]\n  acceptedStatusCodes?: number[]\n  // Max number of attempts. Defaults to 3\n  max?: number\n  // Current retry attempt. Starts at 0\n  attempt?: number\n}\n\n// Execute a fetch call in a callback and retry it up to `options.max` times\n// Each retry will be delayed `options.wait` * `options.attempt`\nexport async function fetchRetry(\n  url: RequestInfo,\n  fetchOptions?: RequestInit,\n  options?: FetchRetryOptions,\n): Promise<Response> {\n  const {wait = 500, acceptedStatusCodes = [200], max = 3, attempt = 0} = options || {}\n\n  const retry: () => Promise<RetryResult> = async () => {\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          const request = new Request(url, fetchOptions)\n          request.headers.append('X-Requested-With', 'XMLHttpRequest')\n          const response = await self.fetch(request)\n          if (acceptedStatusCodes.includes(response.status) || attempt + 1 === max) {\n            return resolve(response)\n          }\n\n          // The response failed, we indicate that it must be retried\n          resolve('retry')\n        } catch (err) {\n          // Only non successful HTTP status codes are controlled by this retry mechanism\n          // Any other error is propagated\n          reject(err)\n        }\n      }, wait * attempt)\n    })\n  }\n\n  const result = await retry()\n  if (result !== 'retry') {\n    return result\n  }\n\n  return fetchRetry(url, fetchOptions, {wait, acceptedStatusCodes, max, attempt: attempt + 1})\n}\n","import DetailsDialogElement from '@github/details-dialog-element'\nimport {isFormField} from '@github-ui/form-utils'\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\n\n// Check if container has any user interactions that could be lost if replaced.\n//\n// container - An Element to check for user interactions.\n// ignoreFocusedContainer - A Boolean, `true` to skip the\n// focus check if the container is the focused element. Dirty field and\n// mousedown checks are still performed.\nexport function hasInteractions(\n  container: Element,\n  ignoreFocusedContainer = false,\n  ignoreDirtyFields = false,\n): boolean {\n  return (\n    (!ignoreDirtyFields && hasDirtyFields(container)) ||\n    hasFocus(container, ignoreFocusedContainer) ||\n    hasMousedown(container) ||\n    markedAsDirty(container)\n  )\n}\n\nexport function hasDirtyFields(container: Element): boolean {\n  for (const field of container.querySelectorAll('input, textarea')) {\n    if (field instanceof HTMLInputElement || field instanceof HTMLTextAreaElement) {\n      if (formFieldValueChanged(field)) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nfunction formFieldValueChanged(input: HTMLInputElement | HTMLTextAreaElement): boolean {\n  if (input instanceof HTMLInputElement && (input.type === 'checkbox' || input.type === 'radio')) {\n    if (input.checked !== input.defaultChecked) return true\n  } else {\n    if (input.value !== input.defaultValue) return true\n  }\n  return false\n}\n\nlet stubbedActiveElement: Element | null\n\nexport async function withActiveElement(element: Element, fn: () => unknown): Promise<void> {\n  stubbedActiveElement = element\n  try {\n    await fn()\n  } finally {\n    stubbedActiveElement = null\n  }\n}\n\nfunction getActiveElement(container: Element): Element | null {\n  if (stubbedActiveElement instanceof Element) {\n    return stubbedActiveElement\n  } else if (container && container.ownerDocument && container.ownerDocument.activeElement) {\n    return container.ownerDocument.activeElement\n  }\n  return null\n}\n\nlet latestMousedownTarget: EventTarget | null\nlet latestMouseupTarget: EventTarget | null\n\nssrSafeDocument?.addEventListener(\n  'mousedown',\n  function (event: Event) {\n    latestMousedownTarget = event.target\n  },\n  true,\n)\n\nssrSafeDocument?.addEventListener(\n  'mouseup',\n  function (event: Event) {\n    latestMousedownTarget = null\n    latestMouseupTarget = event.target\n  },\n  true,\n)\n\nssrSafeDocument?.addEventListener(\n  'contextmenu',\n  function (event: Event) {\n    // Treat `contextmenu` events like `mouseup` events so that we still\n    // update content if the user right-clicks on a safe element.\n    latestMousedownTarget = null\n    latestMouseupTarget = event.target\n  },\n  true,\n)\n\nssrSafeDocument?.addEventListener(\n  'dragend',\n  function () {\n    // Drag and drop does not result in a mouseup event.\n    latestMousedownTarget = null\n  },\n  true,\n)\n\nfunction hasFocus(container: Element, ignoreFocusedContainer: boolean): boolean {\n  const activeElement = getActiveElement(container)\n  if (activeElement === null) return false\n  if (ignoreFocusedContainer && activeElement === container) return false\n\n  // Updatable container hasFocus if one of the following is true:\n  // 1. Focus target is both a form field AND the update target\n  const formFieldFocused = activeElement === container && isFormField(activeElement)\n  if (formFieldFocused) return true\n  // 2. Focus target is relevent (ie not a UPDATABLE_INTERACTIVE_TARGET)\n  //\n  // We consider it safe to update content if the focused element is a button or a link, as\n  // both likely only trigger transient actions\n  const focusTargetIsRelevent = container.contains(activeElement) && !activeElementIsSafe(activeElement)\n  if (focusTargetIsRelevent) return true\n\n  // 3. The last clicked element is an open details summary\n  const interactingWithOpenDetails =\n    latestMouseupTarget instanceof Element &&\n    container.contains(latestMouseupTarget) &&\n    !!latestMouseupTarget.closest('details[open] > summary')\n  return interactingWithOpenDetails\n}\n\nconst UPDATABLE_INTERACTIVE_TARGET = 'a[href], button'\n\nfunction activeElementIsSafe(activeElement: Element): boolean {\n  if (activeElement instanceof DetailsDialogElement) return true\n\n  const isLinkOrButton = activeElement instanceof HTMLAnchorElement || activeElement instanceof HTMLButtonElement\n  const isInsideTaskItem = activeElement.parentElement?.classList.contains('task-list-item')\n  if (isLinkOrButton && isInsideTaskItem) {\n    return true\n  }\n\n  if (!(latestMouseupTarget instanceof Element)) return false\n  const updatableActiveElement = activeElement.closest(UPDATABLE_INTERACTIVE_TARGET)\n  if (!updatableActiveElement) return false\n  const updatableMouseupElement = latestMouseupTarget.closest(UPDATABLE_INTERACTIVE_TARGET)\n  return updatableActiveElement === updatableMouseupElement\n}\n\nfunction hasMousedown(container: Element): boolean {\n  return container.matches(':active:enabled') || container.contains(latestMousedownTarget as Node | null)\n}\n\nfunction markedAsDirty(container: Element): boolean {\n  return container.closest('.is-dirty') || container.querySelector('.is-dirty') ? true : false\n}\n","import {AnalyticsClient, getOptionsFromMeta} from '@github/hydro-analytics-client'\nimport type {Context} from '@github/hydro-analytics-client'\nimport safeStorage from '@github-ui/safe-storage'\nimport {isStaff} from '@github-ui/stats'\nconst {getItem} = safeStorage('localStorage')\n\ndeclare const process: {\n  env: {\n    NODE_ENV: string\n  }\n}\n\nconst dimensionPrefix = 'dimension_'\nlet hydroAnalyticsClient: AnalyticsClient | undefined\n\nconst MARKETING_PARAMS = ['utm_source', 'utm_medium', 'utm_campaign', 'utm_term', 'utm_content', 'scid']\n\ntry {\n  const options = getOptionsFromMeta('octolytics')\n\n  // Remove the base context because meta tags can change as the user navigates with Turbo\n  // These will be folded in for each event & page view\n  delete options.baseContext\n\n  hydroAnalyticsClient = new AnalyticsClient(options)\n} catch (_) {\n  // Failed to get options from meta tags.  This most likely means analytics are disabled.\n}\n\nfunction extendBaseContext(context?: Context) {\n  const baseContext = getOptionsFromMeta('octolytics').baseContext || {}\n\n  if (baseContext) {\n    delete baseContext.app_id\n    delete baseContext.event_url\n    delete baseContext.host\n\n    for (const [key, value] of Object.entries(baseContext)) {\n      // some octolytics meta tags are prefixed with dimension-, which we don't need with the new hydro-analytics-client\n      if (key.startsWith(dimensionPrefix)) {\n        baseContext[key.replace(dimensionPrefix, '')] = value\n        delete baseContext[key]\n      }\n    }\n  }\n\n  const visitorMeta = document.querySelector<HTMLMetaElement>('meta[name=visitor-payload]')\n  if (visitorMeta) {\n    const visitorHash = JSON.parse(atob(visitorMeta.content))\n    Object.assign(baseContext, visitorHash)\n  }\n\n  const urlParams = new URLSearchParams(window.location.search)\n  for (const [key, value] of urlParams) {\n    if (MARKETING_PARAMS.includes(key.toLowerCase())) {\n      baseContext[key] = value\n    }\n  }\n\n  // Include additional context from the page\n  baseContext.staff = isStaff().toString()\n\n  return Object.assign(baseContext, context)\n}\n\nexport function sendPageView(context?: Context) {\n  hydroAnalyticsClient?.sendPageView(extendBaseContext(context))\n}\n\nexport function sendEvent(type: string, context: Record<string, string | number | boolean | undefined | null> = {}) {\n  const service = document.head?.querySelector<HTMLMetaElement>('meta[name=\"current-catalog-service\"]')?.content\n\n  const cleanContext: Context = service ? {service} : {}\n\n  for (const [key, value] of Object.entries(context)) {\n    if (value !== undefined && value !== null) {\n      cleanContext[key] = `${value}`\n    }\n  }\n\n  if (hydroAnalyticsClient) {\n    const typeWithFallback = type || 'unknown'\n    const fullContext = extendBaseContext(cleanContext)\n    hydroAnalyticsClient.sendEvent(typeWithFallback, extendBaseContext(cleanContext))\n\n    if (process.env.NODE_ENV === 'development') {\n      debugSendEvent(typeWithFallback, fullContext)\n    }\n  }\n}\n\nexport function stringifyObjectValues(obj: object) {\n  return Object.fromEntries(Object.entries(obj).map(([k, v]) => [k, JSON.stringify(v)]))\n}\n\nfunction debugSendEvent(type: string, context: Context) {\n  if (getItem('hydro-debug.send-event') === 'true') {\n    // eslint-disable-next-line no-console\n    console.group('[hydro-debug.send-event]')\n    // eslint-disable-next-line no-console\n    console.log({type, context})\n    // eslint-disable-next-line no-console\n    console.groupEnd()\n  }\n}\n","import {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {trustedTypesPolicy} from './policy'\n\nconst policyName = 'parse-html-no-op'\n// This is a temporary policy to allow us to migrate to Trusted Types without breaking existing code.\nexport const temporaryPermissiveParseHTMLPolicy = ghTrustedTypes.createPolicy(policyName, {\n  createHTML: (s: string) => {\n    return trustedTypesPolicy.apply({\n      policy: () => s,\n      policyName,\n      fallback: s,\n      sanitize: false,\n      fallbackOnError: true,\n    })\n  },\n})\n","import {temporaryPermissiveParseHTMLPolicy} from '@github-ui/trusted-types-policies/parse-html'\n\nexport function parseHTML(document: Document, html: string): DocumentFragment {\n  const template = document.createElement('template')\n  template.innerHTML = temporaryPermissiveParseHTMLPolicy.createHTML(html)\n  return document.importNode(template.content, true)\n}\n","import type {SafeHTMLString} from '@github-ui/safe-html'\n\nexport type QueryBuilderAction = URLAction | QueryAction | RewriteQueryAction | CommandAction\nexport enum SearchScopeText {\n  DIRECTORY = 'Search in this directory',\n  ORG = 'Search in this organization',\n  OWNER = 'Search in this owner',\n  REPO = 'Search in this repository',\n  GITHUB = 'Search all of GitHub',\n  GENERAL = 'Submit search',\n  COMMAND = 'Run command',\n  COPILOT_CHAT = 'Start a new Copilot thread',\n  COPILOT_SEARCH = 'Search with Copilot',\n  EXPLORE = 'Learn More',\n  DEFAULT = 'Jump to',\n}\n\nexport const AutocompleteText = 'Autocomplete'\n\nexport type Provider = SearchProvider | FilterProvider\n\nexport interface Parser<IntermediateRepresentation> {\n  // Note, the intermediate representation data will be available within\n  // providers on the QueryEvent as QueryEvent.parsedMetadata\n  parse(input: string, caretPosition: number | undefined): IntermediateRepresentation\n\n  // Flattens the intermediate representation into a list of QueryElements that\n  // can be styled by QueryBuilder\n  flatten(input: IntermediateRepresentation): QueryElement[]\n}\n\ninterface FilterItemData {\n  filter: string\n  value: string\n  name?: string\n  description?: string\n  inlineDescription?: boolean\n  priority?: number\n  icon?: Icon\n  avatar?: Avatar\n  action?: QueryBuilderAction\n}\n\nexport interface Avatar {\n  type: 'user' | 'org' | 'team'\n  url: string\n}\n\n/**\n * FilterItem represents a value that can be used in a filter. Some examples:\n * - filter is `repo:`, value is `github/github`\n * - filter is `author:`, value is `@keithamus`\n */\nexport class FilterItem extends Event {\n  public name: string\n  public filter: string\n  public value: string\n  public description: string\n  public inlineDescription = false\n  public action?: QueryBuilderAction\n  public priority: number\n  public icon?: Icon\n  public avatar?: Avatar\n\n  constructor({\n    filter,\n    value,\n    name = '',\n    description = '',\n    inlineDescription = false,\n    priority = Infinity,\n    icon = undefined,\n    avatar = undefined,\n    action,\n  }: FilterItemData) {\n    super('filter-item')\n    this.filter = filter\n    this.value = value\n    this.name = name\n    this.description = description\n    this.inlineDescription = inlineDescription\n    this.priority = priority\n    this.icon = icon\n    this.avatar = avatar\n    this.action = action\n  }\n}\n\n/* URLAction represents the URL a SearchItem will navigate to when enacted on */\ninterface URLAction {\n  url: string\n}\n\n/* QueryAction Represents the new Query String that a SearchItem will populate\n * the query-builder input with, when enacted on*/\ninterface QueryAction {\n  query: string\n}\n\ninterface RewriteQueryAction {\n  // Replaces the entire query with the provided string\n  replaceQueryWith: string\n  // The position in the query to move the caret to\n  moveCaretTo: number\n}\n\ninterface CommandAction {\n  commandName: string\n  data: Record<string, unknown>\n}\n\nexport interface CustomIcon {\n  html: SafeHTMLString\n}\n\nexport function isCustomIcon(icon: Icon): icon is CustomIcon {\n  return icon instanceof Object\n}\n\nexport enum Octicon {\n  Apps = 'apps',\n  Archived = 'archived',\n  Book = 'book',\n  Bookmark = 'bookmark',\n  Branch = 'branch',\n  Calendar = 'calendar',\n  Circle = 'circle',\n  Code = 'code',\n  CodeReview = 'code-review',\n  CodeSquare = 'code-square',\n  Comment = 'comment',\n  CommentDiscussion = 'comment-discussion',\n  Copilot = 'copilot',\n  CopilotError = 'copilot-error',\n  Codespaces = 'codespaces',\n  CreditCard = 'credit-card',\n  Default = 'default',\n  DeviceDesktop = 'device-desktop',\n  DeviceMobile = 'device-mobile',\n  Discussion = 'discussion',\n  Draft = 'draft',\n  FileCode = 'file-code',\n  Filter = 'filter',\n  Forbidden = 'forbidden',\n  Gift = 'gift',\n  Globe = 'globe',\n  Heart = 'heart',\n  History = 'history',\n  Issue = 'issue',\n  IssueOpened = 'issue-opened',\n  IssueClosed = 'issueClosed',\n  Iterations = 'iterations',\n  Mention = 'mention',\n  Merged = 'merged',\n  Milestone = 'milestone',\n  No = 'no',\n  Not = 'not',\n  Organization = 'organization',\n  Package = 'package',\n  Pencil = 'pencil',\n  Person = 'person',\n  Play = 'play',\n  PlusCircle = 'plus-circle',\n  Project = 'project',\n  PullRequest = 'pullRequest',\n  Question = 'question',\n  Reaction = 'reaction',\n  Repo = 'repo',\n  Rocket = 'rocket',\n  Search = 'search',\n  Server = 'server',\n  ShieldCheck = 'shield-check',\n  SingleSelect = 'single-select',\n  Sort = 'sort',\n  Tag = 'tag',\n  Team = 'team',\n  Telescope = 'telescope',\n  Trash = 'trash',\n  Workflow = 'workflow',\n}\n\nexport enum PrefixColor {\n  Entity = '--color-prettylights-syntax-entity',\n  Constant = '--color-prettylights-syntax-constant',\n  Keyword = '--color-prettylights-syntax-keyword',\n  Variable = '--color-prettylights-syntax-variable',\n  String = '--color-prettylights-syntax-string',\n}\n\nexport type Icon = Octicon | CustomIcon\n\ninterface SearchItemData {\n  id?: string\n  priority: number\n  value: string\n  action: QueryBuilderAction\n  description?: string\n  icon?: Icon\n  scope?: keyof typeof SearchScopeText\n  prefixText?: string\n  prefixColor?: PrefixColor\n\n  // If set, the item will only be rendered if no other providers\n  // sent items.\n  isFallbackSuggestion?: boolean\n  isUpdate?: boolean\n}\n\n/* SearchItem represents a result that appears in the results list, and has an action for a user to enact on */\nexport class SearchItem extends Event {\n  public id?: string\n  public priority: number\n  public value: string\n  public action: QueryBuilderAction\n  public description: string\n  public icon?: Icon\n  public scope: keyof typeof SearchScopeText\n  public prefixText?: string\n  public prefixColor?: PrefixColor\n  public isFallbackSuggestion: boolean\n\n  constructor({\n    id,\n    priority,\n    value,\n    action,\n    description = '',\n    icon = undefined,\n    scope = 'DEFAULT',\n    prefixText,\n    prefixColor,\n    isFallbackSuggestion,\n    isUpdate,\n  }: SearchItemData) {\n    super(isUpdate ? 'update-item' : 'search-item')\n    this.id = id\n    this.priority = priority\n    this.value = value\n    this.prefixText = prefixText\n    this.prefixColor = prefixColor\n    this.action = action\n    this.description = description\n    this.icon = icon\n    this.scope = scope\n    this.isFallbackSuggestion = isFallbackSuggestion || false\n  }\n}\n\nexport interface SearchProvider extends EventTarget {\n  priority: number\n  icon?: Icon\n  name: string // plural group name (i.e. \"repositories\" or \"teams\") - will be the visual header\n  description?: string\n  singularItemName: string // singular name for an item (i.e. \"repository\" or \"team\") to construct a meaningful aria-label, doesn't appear visually\n  value: string // visual name of the filter (i.e. \"is:\")\n  type: 'search'\n}\n\nexport interface FilterProvider extends EventTarget {\n  priority: number\n  icon?: Icon\n  name: string // plural group name (i.e. \"repositories\" or \"teams\") - will be the visual header\n  description?: string\n  singularItemName: string // singular name for an item (i.e. \"repository\" or \"team\") to construct a meaningful aria-label, doesn't appear visually\n  value: string // visual name of the filter (i.e. \"is:\")\n  type: 'filter'\n  // When set, if a filter provider emits filter items, always render them in the UI. If not set,\n  // filter items will only be rendered if the querybuilder thinks a filter item is being written\n  // by the user, which may be incorrect if using a custom parser.\n  manuallyDetermineFilterEligibility?: boolean\n}\n\nexport type QueryElement = QueryFilterElement | QueryTextElement\n\nexport interface QueryFilterElement {\n  type: 'filter'\n  filter: string\n  value: string\n  style?: TextElementStyle\n}\n\nexport interface QueryTextElement {\n  type: 'text'\n  value: string\n  style?: TextElementStyle\n}\n\nexport enum TextElementStyle {\n  Normal = 'normal',\n  Entity = 'entity',\n  Constant = 'constant',\n  FilterValue = 'filter-value',\n}\n\nexport class FetchDataEvent extends Event {\n  constructor(public fetchPromise: Promise<unknown>) {\n    super('fetch-data')\n  }\n}\n\nexport class QueryEvent extends Event {\n  constructor(\n    public parsedQuery: QueryElement[],\n    public rawQuery: string,\n    public parsedMetadata: unknown,\n  ) {\n    super('query')\n  }\n\n  override toString() {\n    return this.rawQuery\n  }\n}\n\nclass QueryBuilderProvider extends Event {\n  constructor(public provider: SearchProvider) {\n    super('query-builder-provider', {bubbles: true})\n  }\n}\n\ndeclare global {\n  interface Document {\n    addEventListener(type: 'query-builder-provider', handler: (event: QueryBuilderProvider) => void): void\n  }\n}\n","import memoize from '@github/memoize'\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\n\nconst runtimeEnvironment = memoize(githubEnvironment)\n\n// return the github instance environment\n// if dotcom, returns 'dotcom'\n// if enterprise, returns 'enterprise'\nfunction githubEnvironment(): string {\n  return ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"runtime-environment\"]')?.content || ''\n}\n\nexport const isEnterprise = memoize(isEnterpriseEnvironment)\nfunction isEnterpriseEnvironment(): boolean {\n  return runtimeEnvironment() === 'enterprise'\n}\n\n// This is the \"bundler\" that built the client-side assets, e.g. \"webpack\"\nexport const bundler = typeof BUNDLER !== 'undefined' ? BUNDLER : undefined\n","import {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\ntype StorageBackend = 'sessionStorage' | 'localStorage'\n\n/**\n * An implementation of the Storage API that throws away all data.  Used in\n * cases when the requested Storage backend is not available.\n */\nclass NoOpStorage {\n  getItem() {\n    return null\n  }\n\n  setItem() {\n    return undefined\n  }\n\n  removeItem() {\n    return undefined\n  }\n\n  clear() {\n    return undefined\n  }\n\n  key() {\n    return null\n  }\n\n  get length() {\n    return 0\n  }\n}\n\ntype SafeStorageOptions = {\n  /** Callers may opt not to suppress quota errors thrown on set in case they rely on recieving them. */\n  throwQuotaErrorsOnSet: boolean\n  /** The amount of time the value should remain in storage, in milliseconds */\n  ttl?: number\n  /** Don't send stats in CI */\n  sendCacheStats?: boolean\n}\n\n/**\n * Safely access Storage items by wrapping a Storage instance\n * (localStorage or sessionStorage) with safe versions of its API\n * methods.  Callers may opt not to suppress quota errors thrown on\n * set in case they rely on recieving them.\n */\nexport default function safeStorage<T = string>(\n  storageKey: StorageBackend,\n  options: SafeStorageOptions = {throwQuotaErrorsOnSet: false},\n  global = ssrSafeWindow,\n  deserialize: (value: string) => T = value => value as unknown as T,\n  serialize: (value: T) => string = (value: T) => value as unknown as string,\n) {\n  let storage: Storage\n  try {\n    if (!global) {\n      // in an SSR environment, use noop storage\n      throw new Error()\n    }\n\n    storage = global[storageKey] || new NoOpStorage()\n  } catch {\n    storage = new NoOpStorage()\n  }\n\n  const {throwQuotaErrorsOnSet} = options\n\n  function emitStats(key: PlatformBrowserIncrementKey) {\n    if (options.sendCacheStats) {\n      sendStats({incrementKey: key})\n    }\n  }\n\n  /**  Safely get storage item. Returns `null` if the item is older than the provided ttl */\n  function getItem(key: string, now: number = new Date().getTime()): T | null {\n    try {\n      const value = storage.getItem(key)\n      if (!value) {\n        return null\n      }\n      const expiryKey = `${key}:expiry`\n      const expiry = Number(storage.getItem(expiryKey))\n      if (expiry && now > expiry) {\n        removeItem(key)\n        removeItem(expiryKey)\n        emitStats('SAFE_STORAGE_VALUE_EXPIRED')\n        return null\n      } else {\n        emitStats('SAFE_STORAGE_VALUE_WITHIN_TTL')\n        return deserialize(value)\n      }\n    } catch (error) {\n      // Ignore browser private mode error.\n      return null\n    }\n  }\n\n  /**\n   * Safely set storage item.\n   * If `ttl` is provided, set an expiry time for the item under the key `${key}:expiry`\n   * This function will be called\n   */\n  function setItem(key: string, value: T, now: number = new Date().getTime()) {\n    try {\n      storage.setItem(key, serialize(value) as unknown as string)\n      if (options.ttl) {\n        const expiryKey = `${key}:expiry`\n        const expiry = now + options.ttl\n        storage.setItem(expiryKey, expiry.toString())\n      }\n    } catch (error) {\n      if (throwQuotaErrorsOnSet && error instanceof Error && error.message.toLowerCase().includes('quota')) throw error\n    }\n  }\n\n  // Safely remove storage item.\n  function removeItem(key: string) {\n    try {\n      storage.removeItem(key)\n      if (options.ttl) {\n        const expiryKey = `${key}:expiry`\n        storage.removeItem(expiryKey)\n      }\n    } catch (error) {\n      // Ignore browser private mode error.\n    }\n  }\n\n  return {\n    getItem,\n    setItem,\n    removeItem,\n    clear: storage.clear,\n    key: storage.key,\n    get length() {\n      return storage.length\n    },\n  }\n}\n\nexport function jsonSafeStorage<T>(storageBackend: StorageBackend) {\n  return safeStorage<T>(\n    storageBackend,\n    {throwQuotaErrorsOnSet: false},\n    ssrSafeWindow,\n    JSON.parse as (value: string) => T,\n    JSON.stringify as (obj: T) => string,\n  )\n}\n","import safeStorage from './safe-storage'\n\nexport const {getItem, setItem, removeItem} = safeStorage('sessionStorage')\n","export const SOFT_NAV_STATE = Object.freeze({\n  INITIAL: 'soft-nav:initial',\n  START: 'soft-nav:start',\n  SUCCESS: 'soft-nav:success',\n  ERROR: 'soft-nav:error',\n  FRAME_UPDATE: 'soft-nav:frame-update',\n  END: 'soft-nav:end',\n  RENDER: 'soft-nav:render',\n  PROGRESS_BAR: {\n    START: 'soft-nav:progress-bar:start',\n    END: 'soft-nav:progress-bar:end',\n  },\n})\n","import {getItem, removeItem, setItem} from '@github-ui/safe-storage/session-storage'\nimport type {SoftNavMechanism} from './events'\n\nexport const DEFAULT_SOFT_NAV_ERROR_REASON = 'reload'\n\nexport const SOFT_NAV_FAIL = 'soft-nav:fail'\nexport const SOFT_NAV_FAIL_REFERRER = 'soft-nav:fail-referrer'\nexport const SOFT_NAV_REFERRER = 'soft-nav:referrer'\nexport const SOFT_NAV_MARK = 'soft-nav:marker'\nexport const SOFT_NAV_REACT_APP_NAME = 'soft-nav:react-app-name'\nexport const SOFT_NAV_LATEST_MECHANISM = 'soft-nav:latest-mechanism'\n\nexport function clearSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n  removeItem(SOFT_NAV_REFERRER)\n  removeItem(SOFT_NAV_FAIL)\n  removeItem(SOFT_NAV_FAIL_REFERRER)\n  removeItem(SOFT_NAV_REACT_APP_NAME)\n  removeItem(SOFT_NAV_LATEST_MECHANISM)\n}\n\nexport function setSoftNavMechanism(mechanism: SoftNavMechanism) {\n  setItem(SOFT_NAV_MARK, mechanism)\n}\n\nexport function unsetSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n}\n\nexport function inSoftNav() {\n  const softNav = getItem(SOFT_NAV_MARK)\n  return softNav && softNav !== '0'\n}\n\nexport function getSoftNavMechanism(): SoftNavMechanism {\n  return getItem(SOFT_NAV_MARK) as SoftNavMechanism\n}\n\nexport function hasSoftNavFailure() {\n  return Boolean(getSoftNavFailReason())\n}\n\nexport function getSoftNavFailReason() {\n  return getItem(SOFT_NAV_FAIL)\n}\n\nexport function setSoftNavFailReason(reason: string) {\n  setItem(SOFT_NAV_FAIL, reason || DEFAULT_SOFT_NAV_ERROR_REASON)\n  setItem(SOFT_NAV_FAIL_REFERRER, window.location.href)\n}\n\nexport function setSoftNavReferrer() {\n  setItem(SOFT_NAV_REFERRER, window.location.href)\n}\n\nexport function getSoftNavReferrer() {\n  return getItem(SOFT_NAV_REFERRER) || document.referrer\n}\n\nexport function setSoftNavReactAppName() {\n  const appName = getCurrentReactAppName()\n\n  if (appName) {\n    setItem(SOFT_NAV_REACT_APP_NAME, appName)\n  } else {\n    removeItem(SOFT_NAV_REACT_APP_NAME)\n  }\n}\n\nexport function getSoftNavReactAppName() {\n  return getItem(SOFT_NAV_REACT_APP_NAME)\n}\n\nexport function getCurrentReactAppName() {\n  if (document.querySelector('meta[name=\"ui\"]')) return 'ui'\n\n  return document.querySelector('react-app')?.getAttribute('app-name')\n}\n\nexport function setLatestMechanism(mechanism: SoftNavMechanism) {\n  setItem(SOFT_NAV_LATEST_MECHANISM, mechanism)\n}\n\nexport function getLatestMechanism() {\n  return getItem(SOFT_NAV_LATEST_MECHANISM) as SoftNavMechanism\n}\n","import {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {loaded} from '@github-ui/document-ready'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {throttle} from '@github/mini-throttle'\n\nlet stats: PlatformBrowserStat[] = []\nconst chunkSize = 64 * 1024\n\nexport function sendStats(stat: PlatformBrowserStat, flushImmediately = false, samplingProbability = 0.5): void {\n  if (isFeatureEnabled('BROWSER_STATS_DISABLED') === true) {\n    return\n  }\n  if (samplingProbability < 0 || samplingProbability > 1) {\n    throw new RangeError('Sampling probability must be between 0 and 1')\n  }\n\n  if (stat.timestamp === undefined) stat.timestamp = new Date().getTime()\n  stat.loggedIn = isLoggedIn()\n  stat.staff = isStaff()\n  stat.bundler = bundler\n  if (Math.random() < samplingProbability) {\n    stats.push(stat)\n  }\n\n  if (flushImmediately) {\n    flushStats()\n  } else {\n    throttledScheduleSendStats()\n  }\n}\n\nlet queued: number | null = null\n\nconst throttledScheduleSendStats = throttle(async function scheduleSendStats() {\n  await loaded\n  if (queued == null) {\n    queued = window.requestIdleCallback(flushStats)\n  }\n}, 5000)\n\nfunction flushStats() {\n  queued = null\n  if (!stats.length) {\n    return\n  }\n\n  const url = ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-stats-url\"]')?.content\n  if (!url) {\n    return\n  }\n\n  const batches = getBatches(stats)\n\n  for (const batch of batches) {\n    safeSend(url, `{\"stats\": [${batch.join(',')}] }`)\n  }\n\n  stats = []\n}\n\n// getBatches breaks up the list of stats into smaller batches\n// that are less than 64kb in size. This is to avoid hitting the\n// size limit of the beacon API.\nfunction getBatches(items: PlatformBrowserStat[]): string[][] {\n  const batches: string[][] = []\n  const itemStrings = items.map(item => JSON.stringify(item))\n\n  while (itemStrings.length > 0) {\n    batches.push(makeBatch(itemStrings))\n  }\n\n  return batches\n}\n\n// makeBatch walks the items and collects batches of items that are within\n// the 64kb limit. If an item is too big to fit in a batch, it is sent alone.\nfunction makeBatch(itemStrings: string[]): string[] {\n  const firstItem = itemStrings.shift()!\n  const batch: string[] = [firstItem]\n  let size = firstItem.length\n\n  while (itemStrings.length > 0 && size <= chunkSize) {\n    const nextItemSize = itemStrings[0]!.length\n\n    if (size + nextItemSize <= chunkSize) {\n      const itemString = itemStrings.shift()!\n      batch.push(itemString)\n      size += nextItemSize\n    } else {\n      break\n    }\n  }\n\n  return batch\n}\n\nfunction safeSend(url: string, data: string) {\n  try {\n    if (navigator.sendBeacon) {\n      navigator.sendBeacon(url, data)\n    }\n  } catch {\n    // Silently ignore errors: https://github.com/github/github/issues/178088#issuecomment-829936461\n  }\n}\n\nfunction isLoggedIn(): boolean {\n  return !!ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n}\n\nexport function isStaff(): boolean {\n  return !!ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"user-staff\"]')?.content\n}\n\n// Flush stats before users navigate away from the page\nssrSafeDocument?.addEventListener('pagehide', flushStats)\nssrSafeDocument?.addEventListener('visibilitychange', flushStats)\n","let toastReference: HTMLElement | null\n\nexport function toggleToast(html?: string, options?: {closeAfter: number}) {\n  removeToast()\n  if (!html) return\n\n  const element = document.createElement('div')\n  element.innerHTML = html\n  if (document.body) document.body.append(element)\n\n  const close = element.querySelector('button')\n  if (close) {\n    close.addEventListener('click', removeToast, {once: true})\n  }\n\n  document.addEventListener('keydown', (event: KeyboardEvent) => {\n    // TODO: Refactor to use data-hotkey\n    /* eslint eslint-comments/no-use: off */\n    /* eslint-disable @github-ui/ui-commands/no-manual-shortcut-logic */\n    if (event.key === 'Escape') {\n      if (removeToast()) event.stopImmediatePropagation()\n    }\n    /* eslint-enable @github-ui/ui-commands/no-manual-shortcut-logic */\n  })\n\n  toastReference = element\n\n  if (options?.closeAfter) {\n    setTimeout(() => {\n      if (toastReference === element) {\n        removeToast()\n      }\n    }, options.closeAfter)\n  }\n}\n\nfunction removeToast(): boolean {\n  if (!toastReference) return false\n  toastReference.remove()\n  toastReference = null\n  return true\n}\n","import {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {sendStats} from '@github-ui/stats'\n// eslint-disable-next-line no-restricted-imports\nimport {reportError} from '@github-ui/failbot'\nimport dompurify from 'dompurify'\nimport {sendEvent} from '@github-ui/hydro-analytics'\n\nexport class TrustedTypesPolicyError extends Error {}\n\ninterface PolicyParam {\n  policy: () => string\n  policyName: string\n  fallback: string\n  fallbackOnError?: boolean\n  sanitize?: boolean // report-only mode for now\n  silenceErrorReporting?: boolean\n}\n\nfunction apply({\n  policy,\n  policyName,\n  fallback,\n  fallbackOnError = false,\n  sanitize,\n  silenceErrorReporting = false,\n}: PolicyParam): string {\n  try {\n    if (isFeatureEnabled('BYPASS_TRUSTED_TYPES_POLICY_RULES')) return fallback\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_CALLED', trustedTypesPolicyName: policyName}, false, 0.1)\n    const policyOutput = policy()\n    if (sanitize) {\n      new Promise(resolve => {\n        const startTime = window.performance.now()\n        const sanitized = dompurify.sanitize(policyOutput, {FORBID_ATTR: []})\n        const endTime = window.performance.now()\n        const executionTime = endTime - startTime\n        if (policyOutput.length !== sanitized.length) {\n          const err = new Error('Trusted Types policy output sanitized')\n          const stack = err.stack?.slice(0, 1000)\n          const output = policyOutput.slice(0, 250)\n          sendEvent('trusted_types_policy.sanitize', {\n            policyName,\n            output,\n            stack,\n            outputLength: policyOutput.length,\n            sanitizedLength: sanitized.length,\n            executionTime,\n          })\n          resolve(policyOutput)\n        }\n      })\n    }\n    return policyOutput\n  } catch (e) {\n    if (e instanceof TrustedTypesPolicyError) throw e\n    if (!silenceErrorReporting) reportError(e)\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_ERROR', trustedTypesPolicyName: policyName})\n    if (!fallbackOnError) throw e\n  }\n\n  return fallback\n}\n\nexport const trustedTypesPolicy = {apply}\n","/* eslint no-restricted-globals: ['off', '__TRUSTED_TYPE_POLICIES__'] */\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\n/*\n * Tinyfill for trusted types\n */\n\ninterface GHTrustedTypePolicyOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createHTML: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScript: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScriptURL: (input: string, ...args: any[]) => string\n}\n\ninterface GHTrustedTypePolicyWithName extends GHTrustedTypePolicyOptions {\n  name: string\n}\n\nfunction unimplemented(functionName: string) {\n  return () => {\n    throw new TypeError(`The policy does not implement the function ${functionName}`)\n  }\n}\n\nconst fallbacks = {\n  createHTML: unimplemented('createHTML'),\n  createScript: unimplemented('createScript'),\n  createScriptURL: unimplemented('createScriptURL'),\n}\n\nconst tinyfill = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => ({\n    name,\n    ...fallbacks,\n    ...rules,\n  }),\n}\n\ntype TrustedTypesPolicies = Map<string, GHTrustedTypePolicyOptions>\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var trustedTypes: typeof tinyfill | undefined\n  // We need to store the policies in a global variable so that they accurately track the global policy store in the\n  // browser. This prevents false misses when there is more than one instance of this module loaded on the page.\n  // eslint-disable-next-line no-var\n  var __TRUSTED_TYPE_POLICIES__: TrustedTypesPolicies\n}\n\nconst registeredPolicies: TrustedTypesPolicies = (globalThis.__TRUSTED_TYPE_POLICIES__ ??= new Map())\n\n// eslint-disable-next-line compat/compat\nconst trustedTypes = globalThis.trustedTypes ?? tinyfill\n\nexport const ghTrustedTypes = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => {\n    if (registeredPolicies.has(name)) {\n      sendStats({\n        incrementKey: 'TRUSTED_TYPES_POLICY_INITIALIZED_TWICE',\n      })\n      return registeredPolicies.get(name) as GHTrustedTypePolicyWithName\n    } else {\n      const policy = Object.freeze(trustedTypes.createPolicy(name, rules))\n      registeredPolicies.set(name, policy)\n      return policy\n    }\n  },\n}\n\n// This export is only for testing. Do not import in production code.\nexport const registeredPoliciesForTesting = registeredPolicies\nexport const tinyfillForTesting = tinyfill\n\n/*\n *\n * This is a temporary warning to indicate to hubbers that the following errors are expected and safe to ignore.\n *\n */\nlet hasWarnedHubberAboutTrustedTypes = false\n\nssrSafeDocument?.addEventListener('securitypolicyviolation', (e: SecurityPolicyViolationEvent) => {\n  if (e.violatedDirective === 'require-trusted-types-for' && !hasWarnedHubberAboutTrustedTypes) {\n    // eslint-disable-next-line no-console\n    console.warn(`Hi fellow Hubber!\n    You're probably seeing a Report Only Trusted Types error near this message. This is intended behaviour, staff-only,\n    does not impact application control flow, and is used solely for statistic collection. Unfortunately we\n    can't gather these statistics without adding the above warnings to your console. Sorry about that!\n    Feel free to drop by #prodsec-engineering if you have any additional questions about Trusted Types or CSP.`)\n    hasWarnedHubberAboutTrustedTypes = true\n  }\n})\n"],"names":["sendData","hydroEventPayload","hydroEventHmac","hydroClientContext","data","visitorPayload","visitorHmac","document","querySelector","HTMLMetaElement","content","sendStats","trackView","el","getAttribute","sendHydroEvent","updateNotificationStates","element","form","status","notification","closest","hasAttribute","classList","toggle","toggleNotificationSubscriptionStatus","toggleNotificationStarredStatus","NotificationFilterElement","BaseFilterElement","fetchRepositorySuggestions","cachedJSON","searchInput","fetchOrgSuggestions","fetchAuthorSuggestions","fetchReasonSuggestions","JSON","parse","fetchTypeSuggestions","fetchSuggestionsForQualifier","qualifier","invalidSearchTerms","validQualifiers","fetchQualifierSuggestions","map","q","value","invalidParts","parts","split","filter","part","colonIndex","indexOf","some","validQualifier","startsWith","typedQualifier","substr","length","join","handleInputFocusIn","updateFilterSuggestionResults","controller","toggleBulkActionMenu","menu","enabled","button","hidden","querySelectorAll","disabled","toggleBulkActionMenus","markSelected","markAll","toggleSelectAll","selectedText","selectedTextWithCount","selectedTextWithAllCount","updateSelectedNotificationsInBulkActionForms","container","addCheckedNotificationsToForm","input","remove","checked","getCheckedElements","name","createElement","setAttribute","appendChild","getCurrentFocus","notificationsList","keyboardFocusedSelector","getNotificationsList","keyboardFocused","HTMLElement","id","position","getItems","restoreFocus","target","items","find","Math","min","navigationFocus","Array","from","visible","currentUpdateId","getUpdateId","getUpdateUrl","isValidUpdateUrl","updateUrl","updateNotifications","updateId","fragment","url","Promise","resolve","setTimeout","fetchSafeDocumentFragment","currentFocus","replaceContent","newContent","oldContent","children","selector","filterUpdate","toBeReplaced","hasInteractions","outerHTML","replaceWith","displayBulkProcessingToast","alreadyProcessing","jobUrl","showBulkActionToast","pollResponse","fetchPoll","headers","accept","error","classname","toggleToast","innerHTML","performRequest","wants","text","readSearchInput","queryInput","updateDialogContent","detailsDialog","newInboxQueryString","html","dialogContent","textContent","maxFiltersFlash","displayCreateNewInbox","nameInput","createButton","focus","detailsDialogFromElement","details","observe","trackingElement","on","event","currentTarget","markAllText","changeValue","subscribe","fromEvent","response","fetch","Accept","ok","json","notifications_exist","addEventListener","SOFT_NAV_STATE","SUCCESS","remoteForm","shouldUpdate","bulkAction","shouldRedirect","shouldCloseOnboardingElement","inboxButton","click","removeAttribute","isShortcutAllowed","detail","originalEvent","hotkey","checkbox","preventDefault","stopPropagation","searchTerm","contains","submitButton","add","resetDialogContent","constructor","group","notificationElements","parentElement","allNotificationsArchived","every","groupDoesNotHaveViewMoreLink","URLSearchParams","window","location","search","get","queryBuilder","clearInput","focusInput","submit","memoizeCache","Map","memoizeFetchJSON","memoize","fetchJSON","cache","getSearchUrl","filterSuggestions","suggestions","query","suggestion","hasMatch","getSearchInput","fetchRepositoriesSuggestions","fetchOwnersSuggestions","fetchTypesSuggestions","fetchReasonsSuggestions","authors","repositories","types","reasons","owners","SearchItemProvider","EventTarget","handleEvent","String","dispatchEvent","SearchItem","priority","toString","icon","Octicon","Search","scope","action","singularItemName","type","attachProvider","AuthorProvider","lastQuery","parsedQuery","at","lastQueryValue","lastQueryType","lastQueryFilter","Event","author","filteredAuthors","getAuthorData","slice","FilterItem","description","RepositoryProvider","repo","filteredRepos","getRepoData","OwnersProvider","org","filteredOwners","getOwnerData","owner","TypeProvider","typeValue","getTypeData","role","ReasonProvider","reason","queryLast","list","requestUri","protocol","host","pagePathname","locationOverride","pathname","pageQuery","stripParams","extraParams","meta","names","replace","env","getEnv","getLocale","locale","loadEnv","envTag","getElementById","console","ready","ssrSafeDocument","readyState","loaded","ssrSafeWindow","extensionErrors","errorsReported","loadTime","Date","now","EXPECTED_NETWORK_ERROR_MESSAGES","Set","isExpectedError","has","message","reportError","context","isFeatureEnabled","Error","isIgnoredNonError","ignoredErrorMessages","includes","code","errorForStackTrace","serializedErrorValue","serializeNonError","stringify","report","errorContext","stacktrace","catalogService","undefined","formatError","unloaded","isSupported","head","stack","frame","extensions","test","filename","function","method","body","Object","assign","sanitizedUrl","href","referrer","getSoftNavReferrer","timeSinceLoad","round","user","pageUser","login","clientId","getOrCreateClientId","bundler","ui","Boolean","file","methodName","lineno","lineNumber","colno","column","BroadcastChannel","sharedWorkerErrorChannel","getEnabledFeaturesSet","features","featureFlags","feature","toLowerCase","featuresSet","IS_SERVER","getEnabledFeatures","featureFlag","ResponseError","policyName","serverXSafeHTMLPolicy","ghTrustedTypes","createPolicy","createHTML","s","trustedTypesPolicy","apply","policy","verifyResponseHtmlSafeNonce","nonces","allowJson","contentType","responseNonce","getDocumentHtmlSafeNonces","fallback","silenceErrorReporting","options","request","Request","append","self","statusText","trustedHTML","parseHTML","timeBetweenRequests","acceptedStatusCodes","pollStatusCodes","poll","wait","fetchRetry","fetchOptions","max","attempt","retry","reject","err","result","stubbedActiveElement","latestMousedownTarget","latestMouseupTarget","ignoreFocusedContainer","ignoreDirtyFields","hasDirtyFields","hasFocus","activeElement","Element","ownerDocument","isFormField","activeElementIsSafe","DetailsDialogElement","isLinkOrButton","HTMLAnchorElement","HTMLButtonElement","isInsideTaskItem","updatableActiveElement","UPDATABLE_INTERACTIVE_TARGET","matches","field","HTMLInputElement","HTMLTextAreaElement","formFieldValueChanged","defaultChecked","defaultValue","hydroAnalyticsClient","getItem","safeStorage","dimensionPrefix","MARKETING_PARAMS","getOptionsFromMeta","baseContext","AnalyticsClient","_","extendBaseContext","key","app_id","event_url","entries","visitorMeta","atob","staff","isStaff","sendPageView","sendEvent","service","cleanContext","stringifyObjectValues","obj","fromEntries","k","v","temporaryPermissiveParseHTMLPolicy","sanitize","fallbackOnError","template","importNode","SearchScopeText","AutocompleteText","inlineDescription","Infinity","avatar","isCustomIcon","PrefixColor","prefixText","prefixColor","isFallbackSuggestion","isUpdate","TextElementStyle","FetchDataEvent","fetchPromise","QueryEvent","rawQuery","parsedMetadata","runtimeEnvironment","isEnterprise","BUNDLER","NoOpStorage","setItem","removeItem","clear","storageKey","throwQuotaErrorsOnSet","global","deserialize","serialize","storage","emitStats","sendCacheStats","incrementKey","ttl","expiryKey","getTime","expiry","Number","jsonSafeStorage","storageBackend","freeze","INITIAL","START","ERROR","FRAME_UPDATE","END","RENDER","PROGRESS_BAR","DEFAULT_SOFT_NAV_ERROR_REASON","SOFT_NAV_FAIL","SOFT_NAV_FAIL_REFERRER","SOFT_NAV_REFERRER","SOFT_NAV_MARK","SOFT_NAV_REACT_APP_NAME","SOFT_NAV_LATEST_MECHANISM","clearSoftNav","setSoftNavMechanism","mechanism","unsetSoftNav","inSoftNav","softNav","getSoftNavMechanism","hasSoftNavFailure","getSoftNavFailReason","setSoftNavFailReason","setSoftNavReferrer","setSoftNavReactAppName","appName","getCurrentReactAppName","getSoftNavReactAppName","setLatestMechanism","getLatestMechanism","stats","stat","flushImmediately","samplingProbability","timestamp","loggedIn","random","push","flushStats","throttledScheduleSendStats","queued","throttle","requestIdleCallback","batch","getBatches","batches","itemStrings","item","makeBatch","firstItem","shift","size","nextItemSize","itemString","safeSend","navigator","sendBeacon","toastReference","removeToast","close","once","stopImmediatePropagation","closeAfter","TrustedTypesPolicyError","trustedTypesPolicyName","policyOutput","startTime","performance","sanitized","dompurify","FORBID_ATTR","endTime","output","outputLength","sanitizedLength","executionTime","e","globalThis","unimplemented","functionName","fallbacks","createScript","createScriptURL","registeredPolicies","__TRUSTED_TYPE_POLICIES__","trustedTypes","rules","set","hasWarnedHubberAboutTrustedTypes","violatedDirective","warn"],"sourceRoot":""}