env KUBE_POD_NAME;
worker_processes 6;
pid /nginx-pidfile/nginx.pid;

events {
  worker_connections 1024;
  use epoll;
  accept_mutex off;
}

http {
  include /etc/nginx/mime.types;
  include /etc/nginx/logging.conf;
  include /etc/nginx/gzip.conf;

  default_type application/octet-stream;
  server_tokens off;
  sendfile on;
  tcp_nopush on;
  keepalive_disable msie6;

  # X-Real-IP is set by haproxy so we should be able to trust it
  set_real_ip_from 0.0.0.0/0;
  real_ip_header X-Real-IP;

  upstream unicorn {
    server unix:/sockets/unicorn.sock fail_timeout=0;
  }

  upstream voltron {
    server localhost:8089 fail_timeout=0;
  }

  map $arg_voltron $enable_voltron {
    default true;
    'no' false;
  }

  map $http_x_github_use_voltron_commit_show $voltron_commit_show_enabled {
    default false;
    '1' $enable_voltron;
  }

  map $http_x_github_use_voltron_discussions_show $voltron_discussions_show_enabled {
    default false;
    '1' $enable_voltron;
  }

  map $http_x_github_use_voltron_pull_requests_show $voltron_pull_requests_show_enabled {
    default false;
    '1' $enable_voltron;
  }

  map $http_x_github_use_voltron_issues_show $voltron_issues_show_enabled {
    default false;
    '1' $enable_voltron;
  }

  map $http_x_github_use_voltron_issues_index $voltron_issues_index_enabled {
    default false;
    '1' $enable_voltron;
  }

  map $request_uri $route_to_voltron {
    default false;
    ~(*UTF8)^/[^\/]+/[^\/]+/commit/[^\/\.\?]+\.[^\/\.\?]+(\?.*)? false;
    ~^/[^\/]+/[^\/]+/commit/[^\/]+/?(\?.*)?$ $voltron_commit_show_enabled;
    ~^/[^\/]+/[^\/]+/discussions/\d+/?(\?.*)?$ $voltron_discussions_show_enabled;
    ~^/[^\/]+/[^\/]+/pull/\d+/?(\?.*)?$ $voltron_pull_requests_show_enabled;
    ~^/[^\/]+/[^\/]+/issues/\d+/?(\?.*)?$ $voltron_issues_show_enabled;
    ~^/[^\/]+/[^\/]+/issues(\?.*)?$ $voltron_issues_index_enabled;
  }

  map $http_origin $assets_origin_value {
    default "";
    "~^https?://.+\.ghe\.com$" "$http_origin";
    "~^https?://.+\.ghaemt\.com$" "$http_origin";
  }

  server{
    listen 8081;
    location /stats {
      stub_status;
    }

    location /status {
      return 200;
    }
  }

  server {
    listen 80 default_server;
    include /etc/nginx/large_file_uploads.conf;
    include /etc/nginx/error_pages.conf;
    include /etc/nginx/github_prod.conf;
    include /etc/nginx/fallback.conf;

    root /assets/public;

    # rewrite github.com repo requests to not have .git
    # This rewrites https://github.com/user/repo.git to https://github.com/user/repo
    if ($http_user_agent !~ "^SVN") {
      rewrite ^/([^\/]+)/([^\/]+)\.git(\/?)$ https://$host/$1/$2$3 permanent;
    }

    location ^~ /assets/ {
      expires max;
      add_header Cache-Control public;
      add_header Access-Control-Allow-Origin "$assets_origin_value";
      add_header Vary Origin;
      add_header Access-Control-Allow-Credentials true;
    }

    location / {
      include /etc/nginx/proxy.conf;
      set_by_lua $KUBE_POD_NAME 'ngx.header["X-GLB-Log-Append"] = (ngx.header["X-GLB-Log-Append"] or "") .. " kube_pod_name=\\"" .. os.getenv("KUBE_POD_NAME") .. "\\""';
      add_header Vary "Accept-Encoding, Accept, X-Requested-With" always;
      add_header X-GitHub-Backend Kubernetes always;

      if ($route_to_voltron = true) {
        proxy_pass http://voltron;
        break;
      }

      if (!-f $request_filename) {
        proxy_pass http://unicorn;
      }
    }
  }
}
