<%# rubocop:disable Lint/InstanceVariable %>
<% if @health_check.nil? %>
  <dl>
    <dt>Health check</dt>
    <dd>
      <%= primer_octicon(:alert, classes: "error") %>
      Health check query timed out
    </dd>
  </dl>
<% else %>
  <dl>
    <dt>Valid domain?</dt>
    <dd>
      <% if @health_check.valid_domain? %>
        True
      <% else %>
        <%= primer_octicon(:alert, classes: "error") %>
        False
      <% end %>
    </dd>
  </dl>
  <dl>
    <dt>Domain type</dt>
    <dd>
      <% if @health_check.apex_domain? %>
        Apex domain
      <% else %>
        Subdomain
      <% end %>
    </dd>
  </dl>
  <% if @health_check.dns? %>
    <dl>
      <dt>DNS record type</dt>
      <dd>
        <% if @health_check.a_record? %>
          <% unless @health_check.should_be_a_record? %>
            <%= render(Primer::Beta::Octicon.new(:alert, classes: "error")) do |component| %>
              <% component.with_tooltip(label: "No source selected", direction: :s) %>
            <% end %>
          <% end %>
          A record
        <% end %>
        <% if @health_check.cname_record? %>
          <% if @health_check.should_be_a_record? %>
            <%= render(Primer::Beta::Octicon.new(:alert, classes: "error")) do |component| %>
              <% component.with_tooltip(label: "No source selected", direction: :s) %>
            <% end %>
          <% end %>
          CNAME record
        <% end %>
      </dd>
    </dl>
    <% if @health_check.a_record? %>
      <dl>
        <dt>DNS record</dt>
        <dd>
          <% if @health_check.old_ip_address? %>
            <%= primer_octicon(:alert, classes: "error") %>
            Points to old IP addresses
          <% elsif @health_check.cloudflare_ip? %>
            Points to a Cloudflare IP address
          <% elsif @health_check.pointed_to_github_pages_ip? %>
            Points to new IP addresses
          <% else %>
            <%= primer_octicon(:alert, classes: "error") %>
            Does not point to GitHub IPs
          <% end %>
        </dd>
      </dl>
    <% end %>
    <% if @health_check.cname_record? %>
      <dl>
        <dt>DNS record</dt>
        <dd>
          <% if @health_check.cname_to_github_user_domain? %>
            Points to user pages domain
          <% elsif @health_check.github_domain? && @health_check.dns.first.value %>
            GitHub-owned domain with CNAME record pointing to <code><%= @health_check.dns.first.value %></code>
          <% else %>
            <%= primer_octicon(:alert, classes: "error") %>
            Does not point to user pages domain
          <% end %>
        </dd>
      </dl>
    <% end %>
    <dl>
      <dt>Served by Pages</dt>
      <dd>
        <% if @health_check.old_ip_address? %>
          <%= primer_octicon(:alert, classes: "error") %>
          Old pages IPs are
          <%= link_to \
                "no longer in service",
                "#{GitHub.blog_url}/2014-11-05-github-pages-legacy-ip-deprecation/",
                class: "Link--inTextBlock" %>
        <% elsif @health_check.served_by_pages? %>
          True
        <% else %>
          <%= primer_octicon(:alert, classes: "error") %>
          False
        <% end %>
      </dd>
    </dl>
  <% else %>
    <dl>
      <dt>DNS record</dt>
      <dd>
        <%= primer_octicon(:alert, classes: "error") %>
        DNS lookup failed
      </dd>
    </dl>
  <% end %>
<% end %>

<% if @alt_domain_health_check.nil? %>
  <dl>
    <dt>Alternate Domain Health check</dt>
      <% if @alt_domain.present? %>
        <dd>
          <%= render(Primer::Beta::Octicon.new(icon: "alert", classes: "error")) %>
          Alternate Domain Health check query timed out
        </dd>
      <% else %>
        <dd>
          No Alternate Domain
        </dd>
      <% end %>

  </dl>
<% else %>
  <dl>
    <dt>Valid alternate domain?</dt>
    <dd>
      <% if @alt_domain_health_check.valid_domain? %>
        True
      <% else %>
        <%= render(Primer::Beta::Octicon.new(icon: "alert", classes: "error")) %>
        False
      <% end %>
    </dd>
  </dl>
  <dl>
    <dt>Alternate Domain type</dt>
    <dd>
      <% if @alt_domain_health_check.apex_domain? %>
        Apex domain
      <% else %>
        Subdomain
      <% end %>
    </dd>
  </dl>
  <% if @alt_domain_health_check.dns? %>
    <dl>
      <dt>Alternate Domain DNS record type</dt>
      <dd>
        <% if @alt_domain_health_check.a_record? %>
          <% unless @alt_domain_health_check.should_be_a_record? %>
            <%= render(Primer::Beta::Octicon.new(:alert, classes: "error")) do |component| %>
              <% component.with_tooltip(label: "No source selected", direction: :s) %>
            <% end %>
          <% end %>
          Alternate Domain A record
        <% end %>
        <% if @alt_domain_health_check.cname_record? %>
          <% if @alt_domain_health_check.should_be_a_record? %>
            <%= render(Primer::Beta::Octicon.new(:alert, classes: "error")) do |component| %>
              <% component.with_tooltip(label: "No source selected", direction: :s) %>
            <% end %>
          <% end %>
          Alternate Domain CNAME record
        <% end %>
      </dd>
    </dl>
    <% if @alt_domain_health_check.a_record? %>
      <dl>
        <dt>Alternate Domain DNS record</dt>
        <dd>
          <% if @alt_domain_health_check.old_ip_address? %>
            <%= render(Primer::Beta::Octicon.new(icon: "alert", classes: "error")) %>
            Points to old IP addresses
          <% elsif @alt_domain_health_check.cloudflare_ip? %>
            Points to a Cloudflare IP address
          <% elsif @alt_domain_health_check.pointed_to_github_pages_ip? %>
            Points to new IP addresses
          <% else %>
            <%= render(Primer::Beta::Octicon.new(icon: "alert", classes: "error")) %>
            Does not point to GitHub IPs
          <% end %>
        </dd>
      </dl>
    <% end %>
    <% if @alt_domain_health_check.cname_record? %>
      <dl>
        <dt>Alternate Domain DNS record</dt>
        <dd>
          <% if @alt_domain_health_check.cname_to_github_user_domain? %>
            Points to user pages domain
          <% elsif @alt_domain_health_check.github_domain? && @alt_domain_health_check.dns.first.value %>
            GitHub-owned domain with CNAME record pointing to <code><%= @alt_domain_health_check.dns.first.value %></code>
          <% else %>
            <%= render(Primer::Beta::Octicon.new(icon: "alert", classes: "error")) %>
            Does not point to user pages domain
          <% end %>
        </dd>
      </dl>
    <% end %>
    <dl>
      <dt>Alternate Domain Served by Pages</dt>
      <dd>
        <% if @alt_domain_health_check.old_ip_address? %>
          <%= render(Primer::Beta::Octicon.new(icon: "alert", classes: "error")) %>
          Old pages IPs are
          <%= link_to \
                "no longer in service",
                "#{GitHub.blog_url}/2014-11-05-github-pages-legacy-ip-deprecation/",
                class: "Link--inTextBlock" %>
        <% elsif @alt_domain_health_check.served_by_pages? %>
          True
        <% else %>
          <%= render(Primer::Beta::Octicon.new(icon: "alert", classes: "error")) %>
          False
        <% end %>
      </dd>
    </dl>
  <% else %>
    <dl>
      <dt>Alternate Domain DNS record</dt>
      <dd>
        <%= render(Primer::Beta::Octicon.new(icon: "alert", classes: "error")) %>
        DNS lookup failed
      </dd>
    </dl>
  <% end %>
<% end %>
