<% if delivery_view.has_response? %>
  <%= render Primer::Alpha::UnderlinePanels.new(label: "Hook request and reponse", w: :full, mt: 2) do |component| %>
    <% component.with_tab(id: "request", selected: true) do |tab| %>
      <% tab.with_panel(mt: 2, test_selector: "hook-delivery-request-info") do %>
        <label>Headers</label>
        <div class="border rounded-1 overflow-y-auto p-2 mt-1 mb-2 bgColor-muted" tabindex="0">
          <%= pre_ignoring_indentation do %>
            <% if delivery_view.can_view_url? %><strong>Request URL:</strong> <%= delivery_view.url %><% end %>
            <strong>Request method:</strong> POST
            <%= delivery_view.request_headers_html(delivery_view) %>
          <% end %>
        </div>

        <label>Payload</label>
        <div class="border rounded-1 overflow-y-auto p-2 mt-1 mb-2 bgColor-muted" tabindex="0">
          <%= delivery_view.highlighted_delivery_payload %>
        </div>
      <% end %>

      <% tab.with_text { "Request" } %>
    <% end %>

    <% component.with_tab(id: "response") do |tab| %>
      <% tab.with_panel(mt: 2, test_selector: "hook-delivery-response-info") do %>
        <% if delivery_view.connection_error?(delivery_view) %>
          <p>
            We had a problem connecting to the server. The most common problem with these types of errors is a misconfigured SSL certificate. Try
            <a class="Link--inTextBlock" href="<%= delivery_view.ssl_verification_url %>">verifying your certificate chain</a>.
          </p>
        <% else %>
          <label>Headers</label>
          <div class="border rounded-1 overflow-y-auto p-2 mt-1 mb-2 bgColor-muted" tabindex="0">
            <pre><%= delivery_view.response_headers_html(delivery_view) %></pre>
          </div>

          <label>Body</label>
          <div class="border rounded-1 overflow-y-auto p-2 mt-1 mb-2 bgColor-muted" tabindex="0">
            <%= delivery_view.delivery_response_body(delivery_view) %>
          </div>
        <% end %>
      <% end %>

      <% response_status = delivery_view.response_status
         success = response_status.present? && response_status >= 200 && response_status < 300  %>
      <% tab.with_text do %>
        Response <span class="<%= class_names(
          "fgColor-onEmphasis rounded-1 p-1",
          "bgColor-success-emphasis" => success,
          "bgColor-danger-emphasis" => !success,
        ) %>">
          <%= response_status %>
        </span>
      <% end %>
    <% end %>

    <% component.with_actions(display: :inline_flex, w: :fit, align_items: :center) do %>
      <% unless delivery_view.payload_empty? %>
        <%= render "hook_deliveries/redeliver_button", hook: current_hook, delivery_view: delivery_view %>
      <% end %>

      <div class="mt-1 ml-2 color-fg-muted text-small">
        <%= render Primer::Beta::Octicon.new(icon: :clock, size: :small, mr: -1) %>
        Completed in <%= pluralize delivery_view.duration, 'second' %>.
      </div>
    <% end %>
  <% end %>
<% else %>
  <%= render Primer::Alpha::UnderlinePanels.new(label: "Hook request and reponse", w: :full, mt: 2) do |component| %>
    <% component.with_tab(id: "request", selected: true) do |tab| %>
      <% tab.with_panel(mt: 2, test_selector: "hook-no-delivery-request-info") do %>
        <%= render Primer::Alpha::Banner.new(scheme: :warning, mb: 2) do %>
          We couldn't deliver this payload: <strong><%= delivery_view.hook_response %></strong>
        <% end %>

        <label>Payload</label>
        <div class="border rounded-1 overflow-y-auto p-2 bgColor-muted" tabindex="0">
          <%= delivery_view.highlighted_delivery_payload %>
        </div>
      <% end %>

      <% tab.with_text { "Request" } %>
    <% end %>

    <% component.with_actions(display: :inline_flex, w: :fit, align_items: :center) do %>
      <% unless delivery_view.payload_empty? %>
        <%= render "hook_deliveries/redeliver_button", hook: current_hook, delivery_view: delivery_view %>
      <% end %>
    <% end %>
  <% end %>
<% end %>
