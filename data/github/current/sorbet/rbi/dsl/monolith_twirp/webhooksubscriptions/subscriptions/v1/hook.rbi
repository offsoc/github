# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Webhooksubscriptions::Subscriptions::V1::Hook`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Webhooksubscriptions::Subscriptions::V1::Hook`.

class MonolithTwirp::Webhooksubscriptions::Subscriptions::V1::Hook
  sig do
    params(
      api_url: T.nilable(String),
      data: T.nilable(T.any(Google::Protobuf::Map[String, String], T::Hash[String, String])),
      headers: T.nilable(T.any(Google::Protobuf::Map[String, String], T::Hash[String, String])),
      id: T.nilable(Google::Protobuf::Int64Value),
      metadata: T.nilable(MonolithTwirp::Webhooksubscriptions::Subscriptions::V1::HookMetadata),
      needs_public_key_signature: T.nilable(T::Boolean),
      service: T.nilable(String)
    ).void
  end
  def initialize(api_url: nil, data: T.unsafe(nil), headers: T.unsafe(nil), id: nil, metadata: nil, needs_public_key_signature: nil, service: nil); end

  sig { returns(String) }
  def api_url; end

  sig { params(value: String).void }
  def api_url=(value); end

  sig { void }
  def clear_api_url; end

  sig { void }
  def clear_data; end

  sig { void }
  def clear_headers; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_metadata; end

  sig { void }
  def clear_needs_public_key_signature; end

  sig { void }
  def clear_service; end

  sig { returns(Google::Protobuf::Map[String, String]) }
  def data; end

  sig { params(value: Google::Protobuf::Map[String, String]).void }
  def data=(value); end

  sig { returns(Google::Protobuf::Map[String, String]) }
  def headers; end

  sig { params(value: Google::Protobuf::Map[String, String]).void }
  def headers=(value); end

  sig { returns(T.nilable(Google::Protobuf::Int64Value)) }
  def id; end

  sig { params(value: T.nilable(Google::Protobuf::Int64Value)).void }
  def id=(value); end

  sig { returns(T.nilable(MonolithTwirp::Webhooksubscriptions::Subscriptions::V1::HookMetadata)) }
  def metadata; end

  sig { params(value: T.nilable(MonolithTwirp::Webhooksubscriptions::Subscriptions::V1::HookMetadata)).void }
  def metadata=(value); end

  sig { returns(T::Boolean) }
  def needs_public_key_signature; end

  sig { params(value: T::Boolean).void }
  def needs_public_key_signature=(value); end

  sig { returns(String) }
  def service; end

  sig { params(value: String).void }
  def service=(value); end
end
