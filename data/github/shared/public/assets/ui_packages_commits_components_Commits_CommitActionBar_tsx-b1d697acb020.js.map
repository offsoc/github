{"version":3,"file":"chunk-ui_packages_commits_components_Commits_CommitActionBar_tsx-xxxxxxxxxxxx.js","mappings":"sSAsBO,SAASA,EAAgB,CAC9BC,KAAAA,CAAI,CACJC,OAAAA,CAAM,CACNC,KAAAA,CAAI,CACJC,aAAAA,CAAY,CACZC,cAAAA,CAAa,CACbC,kBAAAA,CAAiB,CACI,EACrB,IAAMC,EAAcH,GAAcI,kBAE5B,CAACC,mBAAAA,CAAkB,CAAC,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,IACvB,CAACC,cAAAA,CAAa,CAAEC,eAAAA,CAAc,CAAC,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,IAClCC,EAAYC,CAAAA,EAAAA,EAAAA,EAAAA,IACZC,EAAkB,KAClBF,GACFL,EAAmB,CAAC,EAAEE,EAAc,KAAK,CAAC,CAAE,yBAA0BC,EAE1E,EAEA,MACE,UAACK,EAAAA,CAAiBA,CAAAA,CAChBC,MAAM,UACNC,GAAI,CAACC,QAAS,CAAC,OAAQ,OAAO,EAC9BC,kBAAmB,CACjB,CACEC,IAAK,sBACLC,OAAQ,IACN,WAACC,EAAAA,CAAUA,CAACC,QAAQ,EAACC,KAAMxB,EAAOyB,GAAG,C,UACnC,UAACH,EAAAA,CAAUA,CAACI,aAAa,E,SACvB,UAACC,EAAAA,aAAaA,CAAAA,CAAAA,E,GACW,sB,EAIjC,EACA,CACEP,IAAK,gBACLC,OAAQ,IACN,WAACC,EAAAA,CAAUA,CAACM,IAAI,EACdC,SAAU,KACRC,CAAAA,EAAAA,EAAAA,CAAAA,EAAS9B,EAAO+B,GAAG,CACrB,E,UAEA,UAACT,EAAAA,CAAUA,CAACI,aAAa,E,SACvB,UAACM,EAAAA,QAAQA,CAAAA,CAAAA,E,GACgB,qBACT,UAACC,OAAAA,CAAKC,UAAU,Y,SAAaC,CAAAA,EAAAA,EAAAA,CAAAA,EAASnC,EAAO+B,GAAG,C,KAGxE,EACA,CACEX,IAAK,YACLC,OAAQ,IACN,EAGE,WAACC,EAAAA,CAAUA,CAACC,QAAQ,EAClBC,KAAMY,CAAAA,EAAAA,EAAAA,EAAAA,EAAS,CAACC,MAAOpC,EAAKqC,UAAU,CAAErC,KAAMA,EAAKsC,IAAI,CAAEC,UAAWxC,EAAO+B,GAAG,CAAEU,SAAU1C,CAAI,G,UAE9F,UAACuB,EAAAA,CAAUA,CAACI,aAAa,E,SACvB,UAACgB,EAAAA,YAAYA,CAAAA,CAAAA,E,GACY,0B,GARb,IAatB,EACA,CACEtB,IAAK,oBACLC,OAAQ,IACN,WAACC,EAAAA,CAAUA,CAACC,QAAQ,EAACC,KAAMmB,CAAAA,EAAAA,EAAAA,EAAAA,EAAmB,CAAC1C,KAAAA,EAAM2C,OAAQ,OAAQJ,UAAWxC,EAAO+B,GAAG,G,UACxF,UAACT,EAAAA,CAAUA,CAACI,aAAa,E,SACvB,UAACmB,EAAAA,QAAQA,CAAAA,CAAAA,E,GACgB,kC,EAIjC,EACA,CACEzB,IAAK,cACLC,OAAQ,IACN,EAGE,WAACC,EAAAA,CAAUA,CAACM,IAAI,EACdC,SAAU,KACRf,IACAX,EAAc,IACdC,GACF,EACA0C,aAAc,KACZ1C,GACF,E,UAEA,UAACkB,EAAAA,CAAUA,CAACI,aAAa,E,SACvB,UAACqB,EAAAA,aAAaA,CAAAA,CAAAA,E,GACW,c,GAfN,IAoB7B,EACD,EAGP,CAEA,GAAG,CAAEjD,EAAgBkD,WAAW,EAA3BlD,CAAAA,EAAgBkD,WAAW,CAAK,iBAAgB,CAAE,CAAE,KAAM,CAAC,C","sources":["ui/packages/commits/components/Commits/CommitActionBar.tsx"],"sourcesContent":["import {copyText} from '@github-ui/copy-to-clipboard'\nimport type {RepositoryNWO} from '@github-ui/current-repository'\nimport {ListItemActionBar} from '@github-ui/list-view/ListItemActionBar'\nimport {blobPath, repositoryTreePath} from '@github-ui/paths'\nimport {useAnalytics} from '@github-ui/use-analytics'\nimport {ChecklistIcon, CodeIcon, CopyIcon, FileCodeIcon, GitCommitIcon} from '@primer/octicons-react'\nimport {ActionList} from '@primer/react'\n\nimport {useIsLoggingInformationProvided, useLoggingInfo} from '../../contexts/CommitsLoggingContext'\nimport type {DeferredCommitData} from '../../types/commits-types'\nimport type {Commit} from '../../types/shared'\nimport {shortSha} from '../../utils/short-sha'\n\nexport interface CommitActionBarProps {\n  commit: Commit\n  repo: RepositoryNWO\n  path: string\n  deferredData: DeferredCommitData | undefined\n  fetchCheckDetails: () => void\n  setDialogOpen: (arg: boolean) => void\n}\n\nexport function CommitActionBar({\n  path,\n  commit,\n  repo,\n  deferredData,\n  setDialogOpen,\n  fetchCheckDetails,\n}: CommitActionBarProps) {\n  const checkStatus = deferredData?.statusCheckStatus\n\n  const {sendAnalyticsEvent} = useAnalytics()\n  const {loggingPrefix, loggingPayload} = useLoggingInfo()\n  const shouldLog = useIsLoggingInformationProvided()\n  const loggingFunction = () => {\n    if (shouldLog) {\n      sendAnalyticsEvent(`${loggingPrefix}click`, 'COMMITS_CHECKS_CLICKED', loggingPayload)\n    }\n  }\n\n  return (\n    <ListItemActionBar\n      label=\"actions\"\n      sx={{display: ['flex', 'none']}}\n      staticMenuActions={[\n        {\n          key: 'view-commit-details',\n          render: () => (\n            <ActionList.LinkItem href={commit.url}>\n              <ActionList.LeadingVisual>\n                <GitCommitIcon />\n              </ActionList.LeadingVisual>\n              View commit details\n            </ActionList.LinkItem>\n          ),\n        },\n        {\n          key: 'copy-full-sha',\n          render: () => (\n            <ActionList.Item\n              onSelect={() => {\n                copyText(commit.oid)\n              }}\n            >\n              <ActionList.LeadingVisual>\n                <CopyIcon />\n              </ActionList.LeadingVisual>\n              Copy full SHA for <span className=\"text-mono\">{shortSha(commit.oid)}</span>\n            </ActionList.Item>\n          ),\n        },\n        {\n          key: 'view-code',\n          render: () => {\n            if (!path) return null\n\n            return (\n              <ActionList.LinkItem\n                href={blobPath({owner: repo.ownerLogin, repo: repo.name, commitish: commit.oid, filePath: path})}\n              >\n                <ActionList.LeadingVisual>\n                  <FileCodeIcon />\n                </ActionList.LeadingVisual>\n                View code at this point\n              </ActionList.LinkItem>\n            )\n          },\n        },\n        {\n          key: 'browse-repository',\n          render: () => (\n            <ActionList.LinkItem href={repositoryTreePath({repo, action: 'tree', commitish: commit.oid})}>\n              <ActionList.LeadingVisual>\n                <CodeIcon />\n              </ActionList.LeadingVisual>\n              Browse repository at this point\n            </ActionList.LinkItem>\n          ),\n        },\n        {\n          key: 'view-checks',\n          render: () => {\n            if (!checkStatus) return null\n\n            return (\n              <ActionList.Item\n                onSelect={() => {\n                  loggingFunction()\n                  setDialogOpen(true)\n                  fetchCheckDetails()\n                }}\n                onMouseEnter={() => {\n                  fetchCheckDetails()\n                }}\n              >\n                <ActionList.LeadingVisual>\n                  <ChecklistIcon />\n                </ActionList.LeadingVisual>\n                View checks\n              </ActionList.Item>\n            )\n          },\n        },\n      ]}\n    />\n  )\n}\n\ntry{ CommitActionBar.displayName ||= 'CommitActionBar' } catch {}"],"names":["CommitActionBar","path","commit","repo","deferredData","setDialogOpen","fetchCheckDetails","checkStatus","statusCheckStatus","sendAnalyticsEvent","useAnalytics","loggingPrefix","loggingPayload","useLoggingInfo","shouldLog","useIsLoggingInformationProvided","loggingFunction","ListItemActionBar","label","sx","display","staticMenuActions","key","render","ActionList","LinkItem","href","url","LeadingVisual","GitCommitIcon","Item","onSelect","copyText","oid","CopyIcon","span","className","shortSha","blobPath","owner","ownerLogin","name","commitish","filePath","FileCodeIcon","repositoryTreePath","action","CodeIcon","onMouseEnter","ChecklistIcon","displayName"],"sourceRoot":""}