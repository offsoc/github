{"version":3,"file":"chunk-app_components_code_scanning_tool_status_message-list-element_ts-xxxxxxxxxxxx.js","mappings":"0fAEA,YACMA,2BAA2BC,YAQ/BC,mBAAoB,CACd,IAAI,CAACC,QAAQ,CAACC,MAAM,CAAG,IACzB,IAAI,CAACC,MAAM,CAACC,MAAM,CAAG,GACrB,IAAI,CAACC,MAAM,CAAC,IAAI,CAACC,QAAQ,EAE7B,CAEAD,OAAOE,CAAgB,CAAE,CACvB,IAAK,IAAMC,KAAW,IAAI,CAACP,QAAQ,CAACQ,KAAK,CAAC,GACxCD,EAAQJ,MAAM,CAAG,CAACG,CAGpB,KAAI,CAACG,IAAI,CAACN,MAAM,CAAGG,EACnB,IAAI,CAACI,IAAI,CAACP,MAAM,CAAG,CAACG,CACtB,CAEAK,gBAAiB,CACf,IAAI,CAACP,MAAM,CAAE,IAAI,CAACC,QAAQ,CAAG,CAAC,IAAI,CAACA,QAAQ,CAC7C,C,mCAzBMA,QAAQ,CAAG,E,CA0BnB,E,GA1BGO,EAAAA,EAAIA,C,CADDf,EAAAA,SAAAA,CAAAA,WAAAA,KAAAA,G,GAGHgB,EAAAA,EAAOA,C,CAHJhB,EAAAA,SAAAA,CAAAA,WAAAA,KAAAA,G,GAIHiB,EAAAA,EAAMA,C,CAJHjB,EAAAA,SAAAA,CAAAA,OAAAA,KAAAA,G,GAKHiB,EAAAA,EAAMA,C,CALHjB,EAAAA,SAAAA,CAAAA,OAAAA,KAAAA,G,GAMHiB,EAAAA,EAAMA,C,CANHjB,EAAAA,SAAAA,CAAAA,SAAAA,KAAAA,GAAAA,EAAAA,EAAAA,CADLkB,EAAAA,EAAUA,C,CACLlB,GA6BN,YACMmB,6BAA6BlB,YAMjCC,mBAAoB,CAClB,IAAI,CAACK,MAAM,CAAC,IAAI,CAACC,QAAQ,CAC3B,CAEAD,OAAOa,CAAe,CAAE,CACtB,IAAI,CAACC,WAAW,CAACf,MAAM,CAAG,CAACc,EAE3B,IAAME,EAAa,IAAI,CAACC,MAAM,CAACC,aAAa,CAAC,OACzCF,IACEF,EACFE,EAAWG,KAAK,CAACC,SAAS,CAAG,gBAE7BJ,EAAWG,KAAK,CAACC,SAAS,CAAG,YAGnC,CAEAC,eAAgB,CACd,IAAI,CAACpB,MAAM,CAAE,IAAI,CAACC,QAAQ,CAAG,CAAC,IAAI,CAACA,QAAQ,CAC7C,C,mCAxBMA,QAAQ,CAAG,E,CAyBnB,E,GAzBGO,EAAAA,EAAIA,C,CADDI,EAAAA,SAAAA,CAAAA,WAAAA,KAAAA,G,GAGHF,EAAAA,EAAMA,C,CAHHE,EAAAA,SAAAA,CAAAA,cAAAA,KAAAA,G,GAIHF,EAAAA,EAAMA,C,CAJHE,EAAAA,SAAAA,CAAAA,SAAAA,KAAAA,GAAAA,EAAAA,EAAAA,CADLD,EAAAA,EAAUA,C,CACLC,E","sources":["app/components/code_scanning/tool_status/message-list-element.ts"],"sourcesContent":["import {controller, targets, target, attr} from '@github/catalyst'\n\n@controller\nclass MessageListElement extends HTMLElement {\n  @attr expanded = false\n\n  @targets messages: HTMLElement[]\n  @target more: HTMLElement\n  @target less: HTMLElement\n  @target toggle: HTMLElement\n\n  connectedCallback() {\n    if (this.messages.length > 2) {\n      this.toggle.hidden = false\n      this.update(this.expanded)\n    }\n  }\n\n  update(toggled: boolean) {\n    for (const message of this.messages.slice(2)) {\n      message.hidden = !toggled\n    }\n\n    this.more.hidden = toggled\n    this.less.hidden = !toggled\n  }\n\n  toggleMessages() {\n    this.update((this.expanded = !this.expanded))\n  }\n}\n\n@controller\nclass ToggleMessageElement extends HTMLElement {\n  @attr expanded = false\n\n  @target description: HTMLElement\n  @target handle: HTMLElement\n\n  connectedCallback() {\n    this.update(this.expanded)\n  }\n\n  update(expand: boolean) {\n    this.description.hidden = !expand\n\n    const handleIcon = this.handle.querySelector('svg')\n    if (handleIcon) {\n      if (expand) {\n        handleIcon.style.transform = `rotate(90deg)`\n      } else {\n        handleIcon.style.transform = `rotate(0)`\n      }\n    }\n  }\n\n  toggleMessage() {\n    this.update((this.expanded = !this.expanded))\n  }\n}\n"],"names":["MessageListElement","HTMLElement","connectedCallback","messages","length","toggle","hidden","update","expanded","toggled","message","slice","more","less","toggleMessages","attr","targets","target","controller","ToggleMessageElement","expand","description","handleIcon","handle","querySelector","style","transform","toggleMessage"],"sourceRoot":""}