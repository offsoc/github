{
  "$schema": "http://json-schema.org/draft-04/hyper-schema",
  "id": "https://schema.github.com/v3/deployment.json",
  "title": "Deployment",
  "description": "A request for a specific ref(branch,sha,tag) to be deployed",
  "type": "object",
  "definitions": {
    "id": {
      "description": "Unique identifier of the deployment",
      "example": 42,
      "type": "integer"
    },
    "ref": {
      "description": "The ref to deploy. This can be a branch, tag, or sha.",
      "example": "topic-branch",
      "type": "string"
    },
    "task": {
      "description": "Parameter to specify a task to execute",
      "example": "deploy",
      "type": "string"
    },
    "auto_merge": {
      "description": "Parameter to merge the default branch into the requested ref if it is behind the default branch.",
      "example": true,
      "type": "boolean"
    },
    "required_contexts": {
      "description": "Array of status contexts verified against commit status checks.",
      "example": [
        "ci/janky",
        "security/brakeman"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "payload": {
      "description": "JSON payload with extra information about the deployment.",
      "example": "{\"user\":\"atmos\",\"room_id\":123456}",
      "type": [
        "object",
        "string"
      ]
    },
    "environment": {
      "description": "Name for the target deployment environment.",
      "example": "production",
      "type": "string"
    },
    "description": {
      "description": "Short description",
      "example": "Deploying my sweet branch",
      "type": "string"
    },
    "transient_environment": {
      "description": "Specifies if the given environment is will no longer exist at some point in the future. Default: false.",
      "example": true,
      "type": "boolean"
    },
    "production_environment": {
      "description": "Specifies if the given environment is one that end-users directly interact with. Default: false.",
      "example": true,
      "type": "boolean"
    },
    "legacy_required_contexts": {
      "description": "Array of status contexts verified against commit status checks.",
      "example": [
        "ci/janky",
        "security/brakeman"
      ],
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": "string"
      }
    },
    "legacy_description": {
      "description": "Short description",
      "example": "Deploying my sweet branch",
      "type": [
        "string",
        "null"
      ]
    },
    "repository_id": {
      "description": "The ID of the repository.",
      "example": 42,
      "type": "integer"
    },
    "node_id": {
      "type": "string",
      "example": "MDEwOkRlcGxveW1lbnQx"
    },
    "sha": {
      "type": "string",
      "example": "a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d"
    },
    "original_environment": {
      "type": "string",
      "example": "staging"
    },
    "deployment_description": {
      "type": [
        "string",
        "null"
      ],
      "example": "Deploy request from hubot"
    },
    "statuses_url": {
      "type": "string",
      "format": "uri",
      "example": "https://api.github.com/repos/octocat/example/deployments/1/statuses"
    },
    "repository_url": {
      "type": "string",
      "format": "uri",
      "example": "https://api.github.com/repos/octocat/example"
    },
    "url": {
      "type": "string",
      "format": "uri",
      "example": "https://api.github.com/repos/octocat/example/deployments/1"
    },
    "created_at": {
      "type": "string",
      "format": "date-time",
      "example": "2012-07-20T01:19:13Z"
    },
    "updated_at": {
      "type": "string",
      "format": "date-time",
      "example": "2012-07-20T01:19:13Z"
    }
  },
  "links": [
    {
      "href": "/repositories/{repository_id}/deployments",
      "method": "POST",
      "rel": "create-legacy",
      "schema": {
        "properties": {
          "ref": {
            "$ref": "#/definitions/ref"
          },
          "task": {
            "$ref": "#/definitions/task"
          },
          "auto_merge": {
            "$ref": "#/definitions/auto_merge"
          },
          "required_contexts": {
            "$ref": "#/definitions/legacy_required_contexts"
          },
          "payload": {
            "$ref": "#/definitions/payload"
          },
          "environment": {
            "$ref": "#/definitions/environment"
          },
          "description": {
            "$ref": "#/definitions/legacy_description"
          },
          "transient_environment": {
            "$ref": "#/definitions/transient_environment"
          },
          "production_environment": {
            "$ref": "#/definitions/production_environment"
          }
        },
        "required": [
          "ref"
        ],
        "type": "object"
      },
      "title": "Create"
    },
    {
      "title": "Create a new deployment",
      "method": "POST",
      "href": "/repositories/{repository_id}/deployments",
      "rel": "create",
      "schema": {
        "properties": {
          "ref": {
            "$ref": "#/definitions/ref"
          },
          "task": {
            "$ref": "#/definitions/task"
          },
          "auto_merge": {
            "$ref": "#/definitions/auto_merge"
          },
          "required_contexts": {
            "$ref": "#/definitions/required_contexts"
          },
          "payload": {
            "$ref": "#/definitions/payload"
          },
          "environment": {
            "$ref": "#/definitions/environment"
          },
          "description": {
            "$ref": "#/definitions/description"
          },
          "transient_environment": {
            "$ref": "#/definitions/transient_environment"
          },
          "production_environment": {
            "$ref": "#/definitions/production_environment"
          }
        },
        "required": [
          "ref"
        ],
        "type": "object",
        "additionalProperties": false
      }
    },
    {
      "title": "Delete a deployment",
      "method": "DELETE",
      "href": "/repositories/{repository_id}/deployments/{deployment_id}",
      "rel": "delete",
      "schema": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ]
      }
    }
  ],
  "properties": {
    "id": {
      "$ref": "#/definitions/id"
    },
    "node_id": {
      "$ref": "#/definitions/node_id"
    },
    "sha": {
      "$ref": "#/definitions/sha"
    },
    "ref": {
      "$ref": "#/definitions/ref"
    },
    "task": {
      "$ref": "#/definitions/task"
    },
    "environment": {
      "$ref": "#/definitions/environment"
    },
    "original_environment": {
      "$ref": "#/definitions/original_environment"
    },
    "creator": {
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "https://schema.github.com/v3/simple-user.json#"
        }
      ]
    },
    "performed_via_github_app": {
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "https://schema.github.com/v3/integration.json#"
        }
      ]
    },
    "payload": {
      "type": "object",
      "properties": {
      },
      "additionalProperties": true,
      "required": [

      ]
    },
    "description": {
      "$ref": "#/definitions/deployment_description"
    },
    "statuses_url": {
      "$ref": "#/definitions/statuses_url"
    },
    "repository_url": {
      "$ref": "#/definitions/repository_url"
    },
    "transient_environment": {
      "$ref": "#/definitions/transient_environment"
    },
    "production_environment": {
      "$ref": "#/definitions/production_environment"
    },
    "url": {
      "$ref": "#/definitions/url"
    },
    "created_at": {
      "$ref": "#/definitions/created_at"
    },
    "updated_at": {
      "$ref": "#/definitions/updated_at"
    }
  },
  "additionalProperties": false,
  "required": [
    "id",
    "node_id",
    "sha",
    "ref",
    "task",
    "environment",
    "creator",
    "payload",
    "description",
    "statuses_url",
    "repository_url",
    "url",
    "created_at",
    "updated_at"
  ]
}
