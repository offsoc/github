# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Copilotapi::Chat::V1::Repository`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Copilotapi::Chat::V1::Repository`.

class MonolithTwirp::Copilotapi::Chat::V1::Repository
  sig do
    params(
      created_at: T.nilable(Google::Protobuf::Timestamp),
      default_branch: T.nilable(String),
      description: T.nilable(String),
      global_relay_id: T.nilable(String),
      id: T.nilable(Integer),
      is_archived: T.nilable(T::Boolean),
      languages: T.nilable(T.any(Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::Chat::V1::Repository::Language], T::Array[MonolithTwirp::Copilotapi::Chat::V1::Repository::Language])),
      name: T.nilable(String),
      owner_id: T.nilable(Integer),
      owner_type: T.nilable(T.any(Symbol, Integer)),
      parent_id: T.nilable(Integer),
      parent_owner_id: T.nilable(Integer),
      public_fork_count: T.nilable(Integer),
      pushed_at: T.nilable(Google::Protobuf::Timestamp),
      readme_path: T.nilable(String),
      stargazer_count: T.nilable(Integer),
      updated_at: T.nilable(Google::Protobuf::Timestamp),
      visibility: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(created_at: nil, default_branch: nil, description: nil, global_relay_id: nil, id: nil, is_archived: nil, languages: T.unsafe(nil), name: nil, owner_id: nil, owner_type: nil, parent_id: nil, parent_owner_id: nil, public_fork_count: nil, pushed_at: nil, readme_path: nil, stargazer_count: nil, updated_at: nil, visibility: nil); end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_default_branch; end

  sig { void }
  def clear_description; end

  sig { void }
  def clear_global_relay_id; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_is_archived; end

  sig { void }
  def clear_languages; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_owner_type; end

  sig { void }
  def clear_parent_id; end

  sig { void }
  def clear_parent_owner_id; end

  sig { void }
  def clear_public_fork_count; end

  sig { void }
  def clear_pushed_at; end

  sig { void }
  def clear_readme_path; end

  sig { void }
  def clear_stargazer_count; end

  sig { void }
  def clear_updated_at; end

  sig { void }
  def clear_visibility; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(String) }
  def default_branch; end

  sig { params(value: String).void }
  def default_branch=(value); end

  sig { returns(String) }
  def description; end

  sig { params(value: String).void }
  def description=(value); end

  sig { returns(String) }
  def global_relay_id; end

  sig { params(value: String).void }
  def global_relay_id=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(T::Boolean) }
  def is_archived; end

  sig { params(value: T::Boolean).void }
  def is_archived=(value); end

  sig { returns(Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::Chat::V1::Repository::Language]) }
  def languages; end

  sig do
    params(
      value: Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::Chat::V1::Repository::Language]
    ).void
  end
  def languages=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def owner_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def owner_type=(value); end

  sig { returns(Integer) }
  def parent_id; end

  sig { params(value: Integer).void }
  def parent_id=(value); end

  sig { returns(Integer) }
  def parent_owner_id; end

  sig { params(value: Integer).void }
  def parent_owner_id=(value); end

  sig { returns(Integer) }
  def public_fork_count; end

  sig { params(value: Integer).void }
  def public_fork_count=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def pushed_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def pushed_at=(value); end

  sig { returns(String) }
  def readme_path; end

  sig { params(value: String).void }
  def readme_path=(value); end

  sig { returns(Integer) }
  def stargazer_count; end

  sig { params(value: Integer).void }
  def stargazer_count=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def visibility; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def visibility=(value); end
end
