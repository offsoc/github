# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats`.

class Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats
  sig do
    params(
      comments: T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Comments),
      gists: T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Gists),
      hooks: T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Hooks),
      issues: T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Issues),
      milestones: T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Milestones),
      orgs: T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Orgs),
      pages: T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Pages),
      pulls: T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Pulls),
      repos: T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Repos),
      users: T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Users)
    ).void
  end
  def initialize(comments: nil, gists: nil, hooks: nil, issues: nil, milestones: nil, orgs: nil, pages: nil, pulls: nil, repos: nil, users: nil); end

  sig { void }
  def clear_comments; end

  sig { void }
  def clear_gists; end

  sig { void }
  def clear_hooks; end

  sig { void }
  def clear_issues; end

  sig { void }
  def clear_milestones; end

  sig { void }
  def clear_orgs; end

  sig { void }
  def clear_pages; end

  sig { void }
  def clear_pulls; end

  sig { void }
  def clear_repos; end

  sig { void }
  def clear_users; end

  sig { returns(T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Comments)) }
  def comments; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Comments)).void }
  def comments=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Gists)) }
  def gists; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Gists)).void }
  def gists=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Hooks)) }
  def hooks; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Hooks)).void }
  def hooks=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Issues)) }
  def issues; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Issues)).void }
  def issues=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Milestones)) }
  def milestones; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Milestones)).void }
  def milestones=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Orgs)) }
  def orgs; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Orgs)).void }
  def orgs=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Pages)) }
  def pages; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Pages)).void }
  def pages=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Pulls)) }
  def pulls; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Pulls)).void }
  def pulls=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Repos)) }
  def repos; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Repos)).void }
  def repos=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Users)) }
  def users; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::GheUsageMetrics::V0::Entities::AdminStats::Users)).void }
  def users=(value); end
end
