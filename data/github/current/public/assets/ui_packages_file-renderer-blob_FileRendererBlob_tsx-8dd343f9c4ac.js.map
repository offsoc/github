{"version":3,"file":"chunk-ui_packages_file-renderer-blob_FileRendererBlob_tsx-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/file-renderer-blob/use-file-renderer.ts","ui/packages/file-renderer-blob/FileRendererBlob.tsx"],"sourcesContent":["import {useCallback, useEffect, useRef, useState} from 'react'\n\nconst HELLO_TIMEOUT = 10_000\nconst LOAD_TIMEOUT = 45_000\n\nexport const DEFAULT_RENDERER_HEIGHT = '500px'\n\ninterface RenderTiming {\n  load?: number | null\n  helloTimer?: number | null\n  hello?: number | null\n  loadTimer?: number | null\n  untimed?: boolean\n}\n\ninterface RenderCommand {\n  type: 'render:cmd'\n  body?: unknown\n}\n\nexport interface RenderMessage {\n  type: 'render'\n  body: string\n  payload:\n    | null\n    | undefined\n    | {\n        height?: number\n        error?: string | null\n      }\n}\n\nexport enum RenderState {\n  ERROR = 'ERROR',\n  LOADING = 'LOADING',\n  LOADED = 'LOADED',\n  READY = 'READY',\n}\n\ninterface FileRendererHandle {\n  renderState: RenderState\n  errorMsg: string | null\n  iFrameRef: React.RefObject<HTMLIFrameElement>\n  containerRef: React.RefObject<HTMLDivElement>\n}\n\nexport function useFileRenderer(origin: string): FileRendererHandle {\n  const [renderStateRef, setRenderState] = useStatefulRef(RenderState.LOADING)\n  const errorMsg = useRef<string | null>(null)\n\n  const iFrameRef = useRef<HTMLIFrameElement>(null)\n  const containerRef = useRef<HTMLDivElement>(null)\n\n  const renderTiming = useRef<RenderTiming>({untimed: true})\n\n  const messageListener = useCallback(\n    (event: MessageEvent) =>\n      onMessage(\n        event,\n        origin,\n        iFrameRef,\n        containerRef,\n        renderTiming,\n        setRenderState,\n        error => (errorMsg.current = error),\n      ),\n    [origin, setRenderState],\n  )\n\n  useEffect(() => {\n    // Clear the timeouts\n    resetTiming(renderTiming.current)\n\n    const timeoutWatchdog = (checkHello: boolean) => {\n      if (\n        (renderStateRef.current !== RenderState.LOADING && renderStateRef.current !== RenderState.LOADED) ||\n        (checkHello && !renderTiming.current.hello)\n      ) {\n        return\n      }\n\n      setRenderState(RenderState.ERROR)\n    }\n\n    renderTiming.current = {\n      load: Date.now(),\n      hello: null,\n      helloTimer: window.setTimeout(timeoutWatchdog, HELLO_TIMEOUT, true),\n      loadTimer: window.setTimeout(timeoutWatchdog, LOAD_TIMEOUT),\n    }\n\n    return () => {\n      resetTiming(renderTiming.current)\n    }\n  }, [renderStateRef, setRenderState])\n\n  useEffect(() => {\n    window.addEventListener('message', messageListener)\n    return () => window.removeEventListener('message', messageListener)\n  }, [messageListener])\n\n  return {renderState: renderStateRef.current, errorMsg: errorMsg.current, iFrameRef, containerRef}\n}\n\nfunction onMessage(\n  event: MessageEvent,\n  origin: string,\n  iFrameRef: React.RefObject<HTMLIFrameElement>,\n  containerRef: React.RefObject<HTMLDivElement>,\n  renderTiming: React.RefObject<RenderTiming>,\n  setRenderState: (state: RenderState) => void,\n  setError: (error: string | null) => void,\n) {\n  if (event.origin !== origin) return\n\n  const renderMessage = getRenderMessage(event)\n  if (!renderMessage) {\n    setRenderState(RenderState.ERROR)\n    return\n  }\n\n  const body = renderMessage.body\n  const payload = renderMessage.payload != null ? renderMessage.payload : undefined\n\n  const renderWindow = iFrameRef.current?.contentWindow\n\n  switch (body) {\n    case 'hello':\n      {\n        const timingData = renderTiming.current ?? {\n          untimed: true,\n        }\n\n        timingData.hello = Date.now()\n\n        const ackmsg = {\n          type: 'render:cmd',\n          body: {\n            cmd: 'ack',\n            ack: true,\n          },\n        } as const\n\n        const msg = {\n          type: 'render:cmd',\n          body: {\n            cmd: 'branding',\n            branding: false,\n          },\n        } as const\n\n        sendRenderCommand(renderWindow, ackmsg)\n        sendRenderCommand(renderWindow, msg)\n      }\n      break\n    case 'error':\n    case 'error:fatal':\n    case 'error:invalid':\n      if (payload) {\n        setError(payload.error ?? null)\n        setRenderState(RenderState.ERROR)\n      } else {\n        setRenderState(RenderState.ERROR)\n      }\n      break\n    case 'loading':\n      setRenderState(RenderState.LOADING)\n      break\n    case 'loaded':\n      setRenderState(RenderState.LOADED)\n      break\n    case 'ready':\n      // TODO: markdown success\n      //markdownEnrichmentSuccess(container)\n\n      if (payload && typeof payload.height === 'number' && containerRef.current) {\n        containerRef.current.style.height = `${payload.height}px`\n      }\n\n      setRenderState(RenderState.READY)\n\n      break\n    case 'resize':\n      if (payload && typeof payload.height === 'number' && containerRef.current) {\n        containerRef.current.style.height = `${payload.height}px`\n      }\n\n      break\n    case 'code_rendering_service:container:get_size':\n      sendRenderCommand(renderWindow, {\n        type: 'render:cmd',\n        body: {\n          cmd: 'code_rendering_service:container:size',\n          'code_rendering_service:container:size': {\n            width: containerRef.current?.getBoundingClientRect().width,\n          },\n        },\n      })\n      break\n    case 'code_rendering_service:markdown:get_data':\n      if (!iFrameRef.current || !containerRef.current) return\n      sendIFrameDataToIFrame(iFrameRef.current, containerRef.current)\n      break\n    default:\n      break\n  }\n}\n\nfunction useStatefulRef<T>(initialState: T) {\n  // Workaround because window listeners only have access to the initial state. So use refs\n  const [renderStateInt, setRenderStateInt] = useState<T>(initialState)\n  const renderStateRef = useRef<T>(renderStateInt)\n\n  const setRenderState = (state: T) => {\n    renderStateRef.current = state\n    setRenderStateInt(state)\n  }\n\n  return [renderStateRef, setRenderState] as const\n}\n\nfunction resetTiming(renderTiming: RenderTiming) {\n  if (!renderTiming) {\n    return\n  }\n  renderTiming.load = renderTiming.hello = null\n  if (renderTiming.helloTimer) {\n    clearTimeout(renderTiming.helloTimer)\n    renderTiming.helloTimer = null\n  }\n  if (renderTiming.loadTimer) {\n    clearTimeout(renderTiming.loadTimer)\n    renderTiming.loadTimer = null\n  }\n}\n\nfunction sendIFrameDataToIFrame(iframe: HTMLIFrameElement, container: HTMLDivElement) {\n  const data = iframe.getAttribute('data-content')\n  if (!data) {\n    return\n  }\n\n  const msg = {\n    type: 'render:cmd',\n    body: {\n      cmd: 'code_rendering_service:data:ready',\n      'code_rendering_service:data:ready': {\n        data: JSON.parse(data).data,\n        width: container.getBoundingClientRect().width,\n      },\n    },\n  } as const\n\n  sendRenderCommand(iframe.contentWindow, msg)\n}\n\nfunction sendRenderCommand(renderWindow: Window | null | undefined, message: RenderCommand) {\n  if (renderWindow && renderWindow.postMessage) {\n    renderWindow.postMessage(JSON.stringify(message), '*')\n  }\n}\n\nfunction getRenderMessage(event: MessageEvent): RenderMessage | null {\n  let data = event.data as unknown\n\n  if (!data) return null\n\n  if (typeof data === 'string') {\n    try {\n      data = JSON.parse(data) as unknown\n    } catch {\n      // Ignore parse errors\n      return null\n    }\n  }\n\n  if (!isRenderMessage(data)) return null\n\n  return data\n}\n\nfunction isRenderMessage(data: unknown): data is RenderMessage {\n  if (typeof data !== 'object' || !data) {\n    return false\n  }\n\n  const messageData = data as RenderMessage\n  return (\n    messageData.type === 'render' && typeof messageData.body === 'string' && typeof messageData.payload === 'object'\n  )\n}\n","import {useClientValue} from '@github-ui/use-client-value'\nimport {Box, Flash, Spinner, Text} from '@primer/react'\nimport type {BetterSystemStyleObject} from '@primer/react/lib-esm/sx'\nimport React from 'react'\n\nimport {DEFAULT_RENDERER_HEIGHT, RenderState, useFileRenderer} from './use-file-renderer'\n\nconst MAX_BLOB_SIZE = 200_000_000 // 200MB\nconst MAX_NOTEBOOK_SIZE = 30_000_000 // 30MB\n\nexport interface FileRendererBlobData {\n  identityUuid: string\n  size: number\n  type: string\n  url: string\n}\n\nexport default function FileRendererBlob({identityUuid, size, type, url}: FileRendererBlobData) {\n  const [tempOrigin] = useClientValue(() => window.location.origin, 'https://www.github.com', [])\n  const origin = new URL(url, tempOrigin).origin\n  const {renderState, errorMsg, iFrameRef, containerRef} = useFileRenderer(origin)\n\n  const isNotebook = type === 'ipynb'\n  if ((isNotebook && size > MAX_NOTEBOOK_SIZE) || size > MAX_BLOB_SIZE) {\n    return <Flash variant=\"danger\">Sorry, this is too big to display.</Flash>\n  }\n\n  // Setting display: none or visibility: hidden on the iframe prevents it from loading.\n  // Instead, while the content is not ready, make it tiny and hide it in the lower right corner.\n  const iframeStateSX: BetterSystemStyleObject =\n    renderState !== RenderState.READY\n      ? {height: '1px', width: '1px', position: 'fixed', bottom: 0, right: 0}\n      : {height: '100%', width: '100%'}\n\n  const rendererReadySx = {height: DEFAULT_RENDERER_HEIGHT, padding: 0, background: 'none'} as const\n  const nonErrorSx = {\n    borderBottomLeftRadius: '6px',\n    borderBottomRightRadius: '6px',\n    lineHeight: '0',\n    padding: 5,\n    textAlign: 'center',\n  } as const\n\n  return (\n    <Box sx={{width: '100%', display: 'flex', justifyContent: 'center'}}>\n      <Box\n        data-hpc\n        data-host={origin}\n        data-type={type}\n        ref={containerRef}\n        sx={{\n          width: 1024,\n          ...(renderState !== RenderState.ERROR ? nonErrorSx : {}),\n          ...(renderState === RenderState.READY ? rendererReadySx : {}),\n        }}\n      >\n        {renderState === RenderState.ERROR ? (\n          <FileRendererErrorMessage error={errorMsg} />\n        ) : renderState !== RenderState.READY ? (\n          <Spinner size=\"large\" sx={{mx: 'auto'}} />\n        ) : null}\n\n        {renderState !== RenderState.ERROR && (\n          <Box\n            as=\"iframe\"\n            ref={iFrameRef}\n            src={`${url}#${identityUuid}`}\n            sandbox=\"allow-scripts allow-same-origin allow-top-navigation\"\n            sx={{\n              border: 0,\n              display: 'block',\n              ...iframeStateSX,\n            }}\n            name={identityUuid}\n            title=\"File display\"\n          >\n            Viewer requires iframe.\n          </Box>\n        )}\n      </Box>\n    </Box>\n  )\n}\n\nfunction FileRendererErrorMessage({error}: {error: string | null}) {\n  if (!error) {\n    return <Flash variant=\"danger\">Unable to render code block</Flash>\n  }\n\n  const msgLines = error.split('\\n')\n  return (\n    <Flash variant=\"danger\">\n      <Text as=\"p\" sx={{fontWeight: 'bold'}}>\n        Error rendering embedded code\n      </Text>\n      <p>\n        {msgLines.map((line, index) => (\n          <React.Fragment key={`error-line-${index}`}>\n            {line}\n            <br />\n          </React.Fragment>\n        ))}\n      </p>\n    </Flash>\n  )\n}\n\ntry{ FileRendererBlob.displayName ||= 'FileRendererBlob' } catch {}\ntry{ FileRendererErrorMessage.displayName ||= 'FileRendererErrorMessage' } catch {}"],"names":["DEFAULT_RENDERER_HEIGHT","useFileRenderer","origin","renderStateRef","setRenderState","useStatefulRef","initialState","renderStateInt","setRenderStateInt","useState","useRef","current","state","errorMsg","iFrameRef","containerRef","renderTiming","untimed","messageListener","useCallback","onMessage","event","setError","renderMessage","getRenderMessage","data","JSON","parse","messageData","type","body","payload","undefined","renderWindow","contentWindow","timingData","hello","Date","now","sendRenderCommand","cmd","ack","branding","error","height","style","width","getBoundingClientRect","sendIFrameDataToIFrame","iframe","container","getAttribute","msg","useEffect","resetTiming","timeoutWatchdog","checkHello","load","helloTimer","window","setTimeout","loadTimer","addEventListener","removeEventListener","renderState","clearTimeout","message","postMessage","stringify","RenderState","FileRendererBlob","identityUuid","size","url","tempOrigin","useClientValue","location","URL","Flash","variant","iframeStateSX","READY","position","bottom","right","rendererReadySx","padding","background","Box","sx","display","justifyContent","data-hpc","data-host","data-type","ref","ERROR","borderBottomLeftRadius","borderBottomRightRadius","lineHeight","textAlign","FileRendererErrorMessage","Spinner","mx","as","src","sandbox","border","name","title","msgLines","split","Text","fontWeight","p","map","line","index","React","br","displayName"],"sourceRoot":""}