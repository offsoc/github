{"version":3,"file":"codespaces-business-enablement-xxxxxxxxxxxx.js","mappings":"iIAyFKA,ECkCAC,E,qODtHE,SAASC,EAAQ,CACtBC,IAAAA,CAAG,CACHC,QAAAA,CAAO,CACPC,oBAAAA,CAAmB,CACnBC,YAAAA,CAAW,CACXC,QAAAA,CAAO,CACPC,iBAAAA,CAAgB,CAQjB,EA2BC,MACE,WAACC,MAAAA,CAAIC,UAAU,gDAAgDC,cAAY,W,UACzE,UAACF,MAAAA,C,SACC,WAACA,MAAAA,CAAIC,UAAU,2B,UACb,UAACE,QAAAA,CACCC,KAAK,WACLC,KAAK,kBACLC,MAAOZ,EAAIa,EAAE,CACbC,aAAW,SACXP,UAAU,OACVH,QAASA,EACTW,SAAU,IAAMV,EAAiBL,EAAIa,EAAE,EACvCL,cAAY,mB,GAEd,WAACQ,EAAAA,CAAGA,CAAAA,CAACC,GAAI,CAACC,GAAI,EAAGC,QAAS,OAAQC,WAAY,QAAQ,E,UACpD,UAACC,EAAAA,CAAIA,CAAAA,CAACC,KAAMtB,EAAIuB,IAAI,C,SAClB,UAACC,EAAAA,CAAYA,CAAAA,CACXP,GAAI,CAACQ,GAAI,EAAGC,OAAQ,SAAS,EAC7BC,IAAK3B,EAAI4B,SAAS,CAClBC,KAAM,GACNC,qBAAoBC,CAAAA,EAAAA,EAAAA,EAAAA,EAAiB,CAACC,MAAOhC,EAAIiC,YAAY,GAC7DC,OAAQ,E,KAGZ,WAAC5B,MAAAA,C,UACC,UAACA,MAAAA,C,SACC,UAACe,EAAAA,CAAIA,CAAAA,CAACC,KAAMtB,EAAIuB,IAAI,C,SAAGvB,EAAIiC,YAAY,E,GAEzC,UAAC3B,MAAAA,C,SACC,UAAC6B,EAAAA,CAAIA,CAAAA,CAAClB,GAAI,CAACmB,MAAO,UAAU,EAAG7B,UAAU,4B,SACtC8B,CAxDC,CAACC,EAAeC,EAAcC,EAAS,GAAG,GAAK,CAAC,EAAEF,EAAM,CAAC,EAAEC,EAAK,EAAED,IAAAA,EAAcE,EAAS,GAAG,CAAC,EAwDpFxC,EAAIyC,WAAW,CAAE,S,gBAOxC,UA7DmB,IAEnB,WAACC,EAAAA,CAAUA,CAAAA,C,UACT,UAACA,EAAAA,CAAUA,CAACC,MAAM,E,SAAE1C,EAAU,UAAY,U,GAE1C,UAACyC,EAAAA,CAAUA,CAACE,OAAO,E,SACjB,WAACC,EAAAA,CAAUA,CAAAA,CAACC,iBAAiB,S,UAC3B,UAACD,EAAAA,CAAUA,CAACE,IAAI,EACdC,SAAU,IAAM9C,EAAoB,UACpC+C,SAAUhD,EACViD,SAAU/C,EACVK,cAAY,uB,SACb,S,GAGD,UAACqC,EAAAA,CAAUA,CAACE,IAAI,EAACC,SAAU,IAAM9C,EAAoB,WAAY+C,SAAU,CAAChD,E,SAAS,U,WA8C1FJ,CAAAA,G,EAGP,CAEA,GAAG,CAAEE,EAAQoD,WAAW,EAAnBpD,CAAAA,EAAQoD,WAAW,CAAK,SAAQ,CAAE,CAAE,KAAM,CAAC,CAChD,GAAG,CAAEtD,CAAAA,EAAAA,cAAa,EAAEsD,WAAW,EAA1BtD,CAAAA,EAAesD,WAAW,CAAK,gBAAe,CAAE,CAAE,KAAM,CAAC,CCpFvD,SAASC,EAAU,CACxBC,cAAAA,CAAa,CACbC,aAAAA,CAAY,CACZC,gBAAAA,CAAe,CACfC,SAAAA,CAAQ,CACRrD,YAAAA,CAAW,CAOZ,EACC,GAAM,CAACsD,EAAaC,EAAe,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,CAAC,GAY1CC,EAAuB,IAC3B,IAAMC,EAAkBC,OAAOC,IAAI,CAACN,GAE9BO,EAAO,CAAC,EACd,IAAK,IAAMC,KAAKJ,EAEdG,CAAI,CADeE,SAASD,GACpB,CAAGE,EAGbZ,EAAgB,CAAC,GAAGD,CAAY,CAAE,GAAGU,CAAI,EAC3C,EAEM3D,EAAmB,IACvB,GAAIoD,CAAW,CAAC5C,EAAG,CAAE,CAEnB,IAAMuD,EAAO,CAAC,GAAGX,CAAW,CAC5B,QAAOW,CAAI,CAACvD,EAAG,CACf6C,EAAeU,EACjB,MAEEV,EAAe,CAAC,GAAGD,CAAW,CAAE,CAAC5C,EAAG,CAAE,SAAS,EAEnD,EA0BA,MACE,WAACP,MAAAA,CAAIC,UAAU,8BAA8BC,cAAY,a,UACvD,UAACF,MAAAA,CAAIC,UAAU,a,SACb,UAACD,MAAAA,CAAIC,UAAU,Y,SACb,WAACD,MAAAA,CAAIC,UAAU,gD,UACb,UAACD,MAAAA,C,SACC,UAAC+D,OAAAA,C,SACC,WAACC,QAAAA,CAAM/D,UAAU,8B,UACf,UAACE,QAAAA,CACCC,KAAK,WACLG,GAAG,sBACHL,cAAY,sBACZD,UAAU,OACVgE,QAvEW,KAC3B,IAAMP,EAAO,CAAC,EACd,GAAIF,IAAAA,OAAOC,IAAI,CAACN,GAAae,MAAM,CACjC,IAAK,IAAMxE,KAAOqD,EAChBW,CAAI,CAAChE,EAAIa,EAAE,CAAC,CAAG,UAGnB6C,EAAeM,EACjB,C,GAiEgB,UAACS,OAAAA,CAAK5D,GAAG,uC,SAAuC,sB,UAItD,UAACP,MAAAA,CAAIC,UAAU,uB,SACb,UA5CW,IAEnB,WAACmC,EAAAA,CAAUA,CAAAA,C,UACT,UAACA,EAAAA,CAAUA,CAACC,MAAM,E,SAAC,yB,GACnB,UAACD,EAAAA,CAAUA,CAACE,OAAO,EAAC8B,MAAM,S,SACxB,WAAC7B,EAAAA,CAAUA,CAAAA,C,UACT,WAACA,EAAAA,CAAUA,CAACE,IAAI,EAACC,SAAU,IAAMY,EAAqB,U,UAAW,SAE/D,UAACf,EAAAA,CAAUA,CAAC8B,WAAW,EAACC,QAAQ,Q,SAAQ,yD,MAI1C,WAAC/B,EAAAA,CAAUA,CAACE,IAAI,EAACC,SAAU,IAAMY,EAAqB,W,UAAY,UAEhE,UAACf,EAAAA,CAAUA,CAAC8B,WAAW,EAACC,QAAQ,Q,SAAQ,6D,cA8BvC9E,CAAAA,E,UAKT,WAAC+E,KAAAA,C,UACC,UAACC,KAAAA,CAAGvE,UAAU,U,SAAWiD,C,GACxBH,EAAc0B,GAAG,CAAC/E,GACjB,UAAC8E,KAAAA,CAAGvE,UAAU,U,SACZ,UAACR,EAAOA,CACNC,IAAKA,EACLC,QAASqD,CAAY,CAACtD,EAAIa,EAAE,CAAC,CAAGyC,WAAAA,CAAY,CAACtD,EAAIa,EAAE,CAAC,CAAgBb,YAAAA,EAAIgF,gBAAgB,CACxF9E,oBAAqBiE,GAAcZ,EAAgB,CAAC,GAAGD,CAAY,CAAM,CAACtD,EAAIa,EAAE,CAAC,CAAEsD,CAAW,GAC9FhE,YAAaA,EACbC,QAAS,CAAC,CAACqD,CAAW,CAACzD,EAAIa,EAAE,CAAC,CAC9BR,iBAAkBQ,GAAMR,EAAiBQ,E,IAPhBb,EAAIa,EAAE,G,KAc7C,CAEA,GAAG,CAAEuC,EAAUD,WAAW,EAArBC,CAAAA,EAAUD,WAAW,CAAK,WAAU,CAAE,CAAE,KAAM,CAAC,CACpD,GAAG,CAAErD,CAAAA,EAAAA,cAAa,EAAEqD,WAAW,EAA1BrD,CAAAA,EAAeqD,WAAW,CAAK,gBAAe,CAAE,CAAE,KAAM,CAAC,C,eCvGvD,SAAS8B,EAAM,CACpBC,kBAAAA,CAAiB,CACjBC,WAAAA,CAAU,CACVC,oBAAAA,CAAmB,CACnBC,WAAAA,CAAU,CACVC,iBAAAA,CAAgB,CAChBC,aAAAA,CAAY,CACsB,EAClC,IAAMC,EAAiBC,CAAAA,EAAAA,EAAAA,MAAAA,EAAO,MACxB,CAACC,EAAQC,EAAU,CAAGhC,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAC/B,CAACiC,EAAoBC,EAAsB,CAAGlC,CAAAA,EAAAA,EAAAA,QAAAA,EAClDuB,EAAkBY,IAAI,CAACC,GAAKA,EAAE3F,OAAO,GAEjC,CAAC4F,EAAcC,EAAgB,CAAGtC,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAC3C,CAACuC,EAAcC,EAAgB,CAAGxC,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAC3C,CAACL,EAAcC,EAAgB,CAAGI,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,CAAC,GAC5C,CAACyC,EAAaC,EAAe,CAAG1C,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,GACzC,CAAC2C,EAAWC,EAAa,CAAG5C,CAAAA,EAAAA,EAAAA,QAAAA,EAAS2B,GACrC,CAACjC,EAAemD,EAAiB,CAAG7C,CAAAA,EAAAA,EAAAA,QAAAA,IACpC,CAAC8C,EAAOC,EAAS,CAAG/C,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAE7BgD,EAAe,UACnB,IAAMC,EAAW,IAAIC,SAErBD,EAASE,MAAM,CAAC,aAAclB,EAAmBhF,KAAK,EAErB,sBAA7BgF,EAAmBhF,KAAK,EAC1BgG,EAASE,MAAM,CAAC,iBAAkBC,KAAKC,SAAS,CAAC1D,IAGnD,GAAI,CACF,IAAM2D,EAAW,MAAMC,CAAAA,EAAAA,EAAAA,EAAAA,EAAc/B,EAAY,CAC/CgC,OAAQ,MACRC,KAAMR,EACNS,QAAS,CACPC,OAAQ,kBACV,CACF,GACA,IAAIL,EAASM,EAAE,CAOb,OAAO,MAAU,mBAPF,EACf5B,EAAU,IACV,IAAM6B,EAAO,MAAMP,EAASQ,IAAI,GAGhC,OAFAxB,EAAgBuB,EAAKE,OAAO,EAC5BvB,EAAgB,IACTc,CACT,CAGF,CAAE,MAAOU,EAAO,CACd,OAAOA,CACT,CACF,EAEMC,EAAwB,IAC5B3B,EAAgB,IAChBE,EAAgB,IAChBN,EAAsBgC,EACxB,EAEMC,EAAe,KACnB7B,EAAgB,IAChBE,EAAgB,0CAClB,EAEM4B,EAAe,MAAOC,EAAuBC,KACjDD,EAAIE,cAAc,GAClB,MAAMC,EAA6B1B,EAAOwB,EAC5C,EAEME,EAA+B,MAAOC,EAAqBH,EAAO,CAAC,IACvE,GAAI,CACF,IAAMI,EAAS,MAAMnB,CAAAA,EAAAA,EAAAA,EAAAA,EAAc,CAAC,EAAE7B,EAAW,MAAM,EAAE4C,EAAK,OAAO,EAAEG,EAAY,CAAC,CAAE,CACpFf,QAAS,CACPC,OAAQ,kBACV,CACF,GAEA,GAAIe,EAAOd,EAAE,CAAE,CACb,IAAMC,EAAO,MAAMa,EAAOZ,IAAI,GAE9BpB,EAAe4B,GACf1B,EAAaiB,EAAKlB,SAAS,EAC3BE,EAAiBgB,EAAKxD,IAAI,CAC5B,MACE8D,GAEJ,CAAE,MAAOQ,EAAG,CACVR,GACF,CACF,EAGMS,EAAsCC,CAAAA,EAAAA,EAAAA,WAAAA,EAC1CC,CAAAA,EAAAA,EAAAA,CAAAA,EAAS,MAAO7H,IACd8F,EAAS9F,GACT,MAAMuH,EAA6BvH,EACrC,EAAG,KACH,CAAC8F,EAAUyB,EAA6B,EAG1C,MACE,WAAC7H,MAAAA,CAAIE,cAAY,4B,UACdwF,GAAgB,UAAC0C,EAAAA,CAAKA,CAAAA,C,SAAE1C,C,GACxBE,GAAgB,UAACwC,EAAAA,CAAKA,CAAAA,CAAC9D,QAAS,S,SAAWsB,C,GAC5C,UAACyC,KAAAA,CAAGpI,UAAU,wB,SAAwB,iD,GACtC,UAACwF,IAAAA,C,SAAE,0F,GACH,UAACzF,MAAAA,CAAIC,UAAU,O,SACb,UAAC8D,OAAAA,C,SACC,UAACuE,EAAAA,CAAUA,CAAAA,CAACC,kBAAgB,mBAAmBlI,KAAK,c,SACjDuE,EAAkBH,GAAG,CAAC,GACrB,WAAC+D,EAAAA,CAAWA,CAAAA,CAA0B5F,SAAU2E,EAAa3E,QAAQ,C,UACnE,UAAC6F,EAAAA,CAAKA,CAAAA,CACJpI,KAAMkH,EAAalH,IAAI,CACvBC,MAAOiH,EAAajH,KAAK,CACzBoI,eAAgBnB,EAAazH,OAAO,CACpCmE,QAAS,IAAMqD,EAAsBC,GACrCrH,cAAa,CAAC,oBAAoB,EAAEqH,EAAajH,KAAK,CAAC,CAAC,GAE1D,WAACkI,EAAAA,CAAWA,CAACG,KAAK,E,UACfpB,EAAaqB,IAAI,CAClB,UAACnD,IAAAA,CAAExF,UAAU,O,SAAQsH,EAAasB,WAAW,G,KAV/BtB,EAAajH,KAAK,E,OAiB5C,UAAC+B,EAAAA,CAAMA,CAAAA,CAAC1B,GAAI,CAACmI,GAAI,CAAC,EAAGC,IAAK7D,EAAgBjB,QAAS,IAAMoB,EAAU,I,SAAO,M,GAG1E,WAAC2D,EAAAA,CAAMA,CAAAA,CACL5D,OAAQA,EACRF,eAAgBA,EAChB+D,UAAW,IAAM5D,EAAU,IAC3BkD,kBAAgB,6B,UAEhB,UAACS,EAAAA,CAAMA,CAACE,MAAM,EAAC3I,GAAG,6B,SAA6B,oC,GAC/C,WAACG,EAAAA,CAAGA,CAAAA,CAACC,GAAI,CAAC8E,EAAG,CAAC,E,UACZ,WAAC5D,EAAAA,CAAIA,CAAAA,CAACtB,GAAG,QAAQI,GAAI,CAACwI,WAAY,YAAY,E,UAC5C,UAACC,EAAAA,CAAOA,CAAAA,CAACC,KAAMC,EAAAA,SAASA,CAAE3I,GAAI,CAACQ,GAAI,EAAGW,MAAO,WAAW,C,GACvDwD,EAAmBiE,eAAe,C,GAErC,WAAC7I,EAAAA,CAAGA,CAAAA,CAACC,GAAI,CAACE,QAAS,OAAQ2I,GAAI,EAAGC,eAAgB,UAAU,E,UAC1D,UAACpH,EAAAA,CAAMA,CAAAA,CAAC1B,GAAI,CAACQ,GAAI,CAAC,EAAG8C,QAAS,IAAMoB,EAAU,I,SAAQ,Q,GAGtD,UAAChD,EAAAA,CAAMA,CAAAA,CAACiC,QAAQ,SAASL,QAASoC,E,SAAc,Q,YAMrDf,sBAAAA,EAAmBhF,KAAK,EACvB,WAACN,MAAAA,CAAIC,UAAU,Y,UACb,UAAC6C,EAASA,CACRC,cAAeA,GAAiB+B,EAChC9B,aAAcA,EACdC,gBAAiBA,EACjBpD,YAAaoF,E,SAEb,UAACyE,EAAAA,CAASA,CAAAA,CACRzJ,UAAU,+BACV0J,cAAeC,EAAAA,UAAUA,CACzBC,YAAY,6BACZrJ,aAAW,sBACXN,cAAY,mBACZO,SAAUuH,GAAKC,EAAoCD,EAAE8B,MAAM,CAACxJ,KAAK,C,KAGrE,UAACyJ,EAAAA,CAAUA,CAAAA,CAAC/D,UAAWA,EAAWF,YAAaA,EAAa2B,aAAcA,C,QAKpF,CAEA,GAAG,CAAE9C,EAAM9B,WAAW,EAAjB8B,CAAAA,EAAM9B,WAAW,CAAK,OAAM,CAAE,CAAE,KAAM,CAAC,CChM5CmH,CAAAA,EAAAA,EAAAA,CAAAA,EAAqB,iCAAkC,CACrDC,UAAWtF,CACb,E,kDCLO,2BAAMuF,iBASJC,SAAS9J,CAAY,CAAE+J,CAAe,CAAE,CAC7C,IAAMC,EAAQ,IAAI,CAACC,mBAAmB,CAACjK,EAAK,CACxCgK,EACFA,EAAME,OAAO,GAAGH,GAEhB,IAAI,CAACE,mBAAmB,CAACjK,EAAK,CAAG,CAC/BmK,QAASC,QAAQF,OAAO,CAACH,EAC3B,CAEJ,CAEOM,gBAAgBrK,CAAY,CAAc,C,IAC/C,EACA,MADA,OAAI,CAACiK,mBAAmB,EAACjK,EAAK,EAA9B,EAAwB,CAACA,EAAK,CAAK,IAAIsK,CAAS,EACzC,IAAI,CAACL,mBAAmB,CAACjK,EAAK,CAACmK,OAAO,C,mBArBvCF,mBAAmB,CAMvB,CAAC,C,CAiBP,EAEA,YAAMK,SAIJC,aAAc,CACZ,IAAI,CAACJ,OAAO,CAAG,IAAIC,QAAWF,IAC5B,IAAI,CAACA,OAAO,CAAGA,CACjB,EACF,CACF,C,qECrBO,SAASM,EACdC,CAA2D,QAe3D,CAbAC,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACR,IAAMC,EAASF,GAAeE,OAEzBA,IAID,aAAcA,GAChBA,CAAAA,EAAOpI,QAAQ,CAAG,EAAI,EAExBoI,EAAOC,SAAS,CAACC,MAAM,CAAC,eAC1B,EAAG,CAACJ,EAAc,EAEbA,GAIE,CACLK,mBAAoB,CAClBC,iBAAkBN,CACpB,CACF,EAPS,CAAC,CAQZ,CAEO,SAASO,EAAkBF,CAAsC,EACtE,IAAMpC,EAAM5D,CAAAA,EAAAA,EAAAA,MAAAA,EAAOgG,EAAmBC,gBAAgB,CAACJ,MAAM,EAAI,MAC3D,CAACM,EAAMC,EAAQ,CAAGlI,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAE3BY,EAAUiE,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,KAE1BqD,EAAQ,CAACD,EACX,EAAG,CAACA,EAAMC,EAAQ,EAWlB,MATAR,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACHhC,EAAIyC,OAAO,GAEhBzC,EAAIyC,OAAO,CAACC,YAAY,CAAC,gBAAiBH,EAAKI,QAAQ,IACvD3C,EAAIyC,OAAO,CAACC,YAAY,CAAC,gBAAiB,QAC5C,EAAG,CAAC1C,EAAKuC,EAAK,EAEdK,EAAiBR,EAAoBlH,GAE9B,CACL8E,IAAAA,EACAuC,KAAAA,EACAC,QAAAA,CACF,CACF,CAEO,SAASI,EAAiBR,CAAsC,CAAElH,CAAoC,EAC3G,IAAM8E,EAAM5D,CAAAA,EAAAA,EAAAA,MAAAA,EAAOgG,EAAmBC,gBAAgB,CAACJ,MAAM,EAE7DD,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACR,IAAMa,EAAU7C,EAAIyC,OAAO,CAC3B,GAAKI,EAKL,OADAA,EAAQC,gBAAgB,CAAC,QAAS5H,GAC3B,IAAM2H,EAAQE,mBAAmB,CAAC,QAAS7H,EACpD,EAAG,CAAC8E,EAAK9E,EAAQ,CACnB,C,mCCvEO,IAAM8H,EAAkB,GAAI7B,C,UAAAA,CAAgBA,C,gDCEnD,YACM8B,4BAA4BC,EAAAA,CAAgBA,CAGhD,MAAMC,aAAaC,CAAiC,CAAE,KDJxBC,ECK5B,GAAM,CAACnC,UAAAA,CAAS,CAAC,CAAG,ODLQmC,ECKc,IAAI,CAAC/L,IAAI,CDJ9C0L,EAAgBrB,eAAe,CAAC0B,ICO/BtB,EAAgB,IAAI,CAACuB,OAAO,CAA4B,wBAE9D,MACE,UAACC,EAAAA,CAAYA,CAAAA,CACXC,YAAa,IAAI,CAAClM,IAAI,CACtB8L,aAAcA,EACdlC,UAAWA,EACXuC,kBAAmB,IAAI,CAACC,aAAa,CACrCC,SAAU,IAAI,CAACA,QAAQ,CACvB5B,cAAeA,C,EAGrB,C,mCAlBA6B,aAAa,CAAG,c,CAmBlB,ECxBO,SAAS3C,EAAqB3J,CAAY,CAAE+J,CAAiC,EAClF2B,EAAgB5B,QAAQ,CAAC9J,EAAM+J,EACjC,CDEM4B,EAAAA,S,2TAAAA,CADLY,EAAAA,EAAUA,C,CACLZ,E,mCERN,GAAM,CAACa,QAAAA,CAAO,CAAEC,QAAAA,CAAO,CAAEC,WAAAA,CAAU,CAAC,CAAGC,CAAAA,EAAAA,E,OAAAA,CAAAA,EAAY,gBAC7CC,EAA0B,0BAchC,EANsD,CACpDC,OAAQ,IAAMJ,EAAQG,EAAyB,QAC/CE,QAAS,IAAMJ,EAAWE,GAC1BG,UAAW,IAAM,CAAC,CAACP,EAAQI,EAC7B,C,kBCAO,SAASrG,EAAc3F,CAAY,CAAEoM,EAAoB,CAAC,CAAC,GAChEC,SAesCrM,CAAY,EAGlD,GAAIsM,IADYC,IAAIvM,EAAMwM,OAAOC,QAAQ,CAACC,MAAM,EACxCA,MAAM,GAAKF,OAAOC,QAAQ,CAACC,MAAM,CACvC,MAAM,MAAU,wDAEpB,EArBiC1M,GAE/B,IAAM8F,EAAuB,CAC3B,GAAGsG,EAAKtG,OAAO,CACf,wBAAyB,OACzB,mBAAoB,gBACtB,EAEA,OAAO6G,MAAM3M,EAAM,CAAC,GAAGoM,CAAI,CAAEtG,QAAAA,CAAO,EACtC,CA2BO,SAAS8G,EAAkB5M,CAAY,CAAEoM,CAAsB,EAGpE,IAAMtG,EAAuB,CAFuB,GAAnBsG,GAAMtG,SAAW,CAAC,CAGjD,CACAC,OAAQ,mBACR,eAAgB,kBAClB,EAEMF,EAAOuG,GAAMvG,KAAOL,KAAKC,SAAS,CAAC2G,EAAKvG,IAAI,EAAIgH,KAAAA,EAEtD,OAAOlH,EAAc3F,EAAM,CAAC,GAAGoM,CAAI,CAAEvG,KAAAA,EAAMC,QAAAA,CAAO,EACpD,CASO,SAASgH,EAAW9M,CAAY,CAAEoM,EAAoB,CAAC,CAAC,EAC7D,IAAMtG,EAAuB,CAC3B,GAAGsG,EAAKtG,OAAO,CACf,kBAAmB,MACrB,EAEA,OAAOH,EAAc3F,EAAM,CAAC,GAAGoM,CAAI,CAAEtG,QAAAA,CAAO,EAC9C,CASO,SAASiH,EAAe/M,CAAY,CAAEoM,CAAsB,EAGjE,IAAMtG,EAAuB,CAFuB,GAAnBsG,GAAMtG,SAAW,CAAC,CAGjD,CACA,kBAAmB,MACrB,EAEA,OAAO8G,EAAkB5M,EAAM,CAAC,GAAGoM,CAAI,CAAEtG,QAAAA,CAAO,EAClD,C,+HCxFO,IAAM7F,EAAe+M,CAAAA,EAAAA,EAAAA,UAAAA,EAAgD,SAC1E,CAAC5M,IAAAA,CAAG,CAAEE,KAAAA,EAAO,EAAE,CAAE,GAAG2M,EAA8B,CAClDnF,CAAG,EAEH,IAAMzH,EAAY6M,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,KAGxB,IAAMZ,EAAM,IAAIC,IAAInM,EAAK+M,EAAAA,EAAeA,CAACT,MAAM,EAQ/C,OALKJ,EAAIc,YAAY,CAACC,GAAG,CAAC,SAAYf,EAAIc,YAAY,CAACC,GAAG,CAAC,MAEzDf,EAAIc,YAAY,CAACE,GAAG,CAAC,OAAQC,OAAOC,EAAAA,OAAOlN,KAGtCgM,EAAI7B,QAAQ,EACrB,EAAG,CAACrK,EAAKE,EAAK,EAEd,MAAO,UAACmN,EAAAA,CAAMA,CAAAA,CAAC3F,IAAKA,EAAK1H,IAAKC,EAAWC,KAAMA,EAAMrB,cAAY,gBAAiB,GAAGgO,CAAU,EACjG,GAEA,GAAG,CAAEhN,EAAa2B,WAAW,EAAxB3B,CAAAA,EAAa2B,WAAW,CAAK,cAAa,CAAE,CAAE,KAAM,CAAC,C,oHCpBnD,SAAS8L,EAAc,CAACzL,SAAAA,CAAQ,CAAE0L,QAAAA,CAAO,CAAQ,EACtD,GAAM,CAACC,EAAOC,EAAS,CAAGzL,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,CACjCqK,SAAUkB,EAAQlB,QAAQ,GAK5B,MAFAqB,CAAAA,EAAAA,EAAAA,CAAAA,EAAkB,IAAMH,EAAQI,MAAM,CAACF,GAAW,CAACF,EAAQ,EAGzD,UAACK,EAAAA,EAAMA,CAAAA,CAACvB,SAAUmB,EAAMnB,QAAQ,CAAEwB,UAAWN,E,SAC1C1L,C,EAGP,CAEA,GAAG,CAAEyL,EAAc9L,WAAW,EAAzB8L,CAAAA,EAAc9L,WAAW,CAAK,eAAc,CAAE,CAAE,KAAM,CAAC,C,qCCHrD,SAASyJ,EAAa,CAC3BC,YAAAA,CAAW,CACXJ,aAAAA,CAAY,CACZlC,UAAAA,CAAS,CACTuC,kBAAAA,CAAiB,CACjBE,SAAAA,CAAQ,CACR5B,cAAAA,CAAa,CACP,EAEN,IAAMqE,EAAaC,EAAAA,MAAY,GACzB3B,EAAS4B,WAAW5B,MAAM,CAG3B0B,EAAW3D,OAAO,EACrB2D,CAAAA,EAAW3D,OAAO,CAAG,EAEjB8D,CAAAA,EAAAA,EAAAA,CAAAA,EAAqB,CAAC7B,OAAAA,CAAM,GAD5B8B,CAAAA,EAAAA,EAAAA,EAAAA,EAAoB,CAACC,eAAgB,CAAC,CAACC,SAAU,GAAG,EAAE,EACzB,EAEnC,IAAMb,EAAUO,EAAW3D,OAAO,CAC5BkE,EAAqB7E,CAAAA,EAAAA,EAAAA,EAAAA,EAAsBC,GAIjD,MACE,UAAC6E,EAAAA,CAAaA,CAAAA,CAACvD,QAASG,EAAaC,kBAAmBA,E,SACtD,UAACoD,EAAAA,CAAkBA,CAAAA,CAAChB,QAASA,EAASiB,OAAQ,EAAE,C,SAC9C,WAAClB,EAAaA,CAACC,QAASA,E,UACtB,UAAC3E,EAAAA,CAAW,GAAGkC,EAAa2D,KAAK,CAAG,GAAIJ,CAAkB,GAC1D,UAACK,EAAAA,CAAcA,CAAAA,CAACrD,SAAUA,C,SAKpC,CAEA,GAAG,CAAEJ,EAAazJ,WAAW,EAAxByJ,CAAAA,EAAazJ,WAAW,CAAK,cAAa,CAAE,CAAE,KAAM,CAAC,C,ucC5C1D,IAAMmN,EAA8B,mDAE7B,2BAAe/D,yBAA4BgE,YAShD,IAAc5P,MAAO,CACnB,OAAO,IAAI,CAAC6P,YAAY,CAAC,IAAI,CAACvD,aAAa,CAC7C,CAEA,IAAYwD,kBAAmB,CAC7B,IAAMvH,EAAO,IAAI,CAACuD,YAAY,EAAEiE,YAEhC,GAAI,CAACxH,EACH,MAAM,MAAU,CAAC,4CAA4C,EAAE,IAAI,CAACvI,IAAI,CAAC,CAAC,EAG5E,OAAOuI,CACT,CAEA,IAAI6D,eAAgB,CAClB,MAAO,aAAI,CAACyD,YAAY,CAAC,WAC3B,CAEAG,mBAAoB,CAClB,IAAI,CAACC,WAAW,EAClB,CAEAC,sBAAuB,CACrB,IAAI,CAACC,IAAI,EAAEC,UACX,IAAI,CAACD,IAAI,CAAG1C,KAAAA,CACd,CAEA,MAAcwC,aAAc,CAC1B,GAAI,CAAC,IAAI,CAACI,SAAS,CAAE,MAAM,MAAU,0BACrC,IAAIC,EAAqB,CACvBC,WAAUA,EAAAA,CAAAA,CACVC,YAAWA,EAAAA,CAAAA,EAITC,EAAAA,CAAkBA,CAAC1D,SAAS,IAC9BuD,CAAAA,EAAW,MAAM,IAAI,CAACI,wBAAwB,EAAC,EAGjD,IAAM5E,EAAe1F,KAAKuK,KAAK,CAAC,IAAI,CAACb,gBAAgB,EAC/Cc,EAAe,IAAI,CAACvE,QAAQ,EAAE0D,YAC9Bc,EAAO,MAAM,IAAI,CAAChF,YAAY,CAACC,GAC/BgF,EAAW,UAAC/B,EAAAA,UAAgB,E,SAAE8B,C,GAMpC,GAJID,GACF,IAAI,CAACG,WAAW,CAACH,GAGf,IAAI,CAACxE,aAAa,CAAE,CAUtB,IAAM4E,EAAS,IAAI,CAACC,aAAa,CAAC,6BAC9BD,GAAQE,SAASC,IAAI,CAACC,WAAW,CAACJ,GAKtC,IAAI,CAACb,IAAI,CAAGG,EAASE,WAAW,CAAC,IAAI,CAACH,SAAS,CAAES,EAAU,CACzDO,mBAAoBrK,IAClB,GAAI,CAAEA,CAAAA,aAAiBsK,KAAI,EAAI,OAE/B,IAAMC,EAAQ5B,EAA4B6B,IAAI,CAACxK,EAAMD,OAAO,EACtD0K,EAAYtD,OAAOoD,GAAOG,QAAQD,WAExCE,CAAAA,EAAAA,EAAAA,CAAAA,EAAU,CACRC,aAAc,wBACdC,cAAe,CACb9F,QAAS,IAAI,CAAC/L,IAAI,CAClByR,UAAAA,CACF,CACF,EACF,CACF,GAGIT,GAEFc,oBAAoB,KAElBd,EAAOe,aAAa,EAAEC,YAAYhB,EACpC,EAEJ,MACE,IAAI,CAACb,IAAI,CAAGG,EAASC,UAAU,CAAC,IAAI,CAACF,SAAS,EAC9C,IAAI,CAACF,IAAI,CAAC8B,MAAM,CAACnB,GAGnB,IAAI,CAAClG,SAAS,CAACsH,GAAG,CAAC,SACrB,CAEQxB,0BAA2B,CAEjC,OAAO,iDACT,CAEQK,YAAYH,CAAoB,CAAE,CACxC,GAAIuB,EAAAA,CAAe,CAACvB,EAAa,CAE/B,OAAOwB,QAAQpL,KAAK,CAAC,qCAAsCmL,EAAAA,CAAe,CAACvB,EAAa,EAG1F,GAAI,CACF,IAAM5J,EAAQZ,KAAKuK,KAAK,CAACC,GACnByB,EAAaC,SAaOtL,CAA8B,EAC5D,GAAI,CAACA,EAAMqL,UAAU,CAAE,MAAO,GAC9B,IAAIE,EAAS,MAOb,OAAOC,EANaH,UAAU,CAACjO,GAAG,CAAC,IACjC,GAAM,CAACqO,SAAUC,CAAI,CAAEC,SAAAA,CAAQ,CAAEC,OAAAA,CAAM,CAAEC,MAAAA,CAAK,CAAC,CAAGC,EAC5CC,EAAO,CAAC,EAAER,EAAO,IAAI,EAAEG,EAAK,EAAE,EAAEC,EAAS,CAAC,EAAEC,EAAO,CAAC,EAAEC,EAAM,CAAC,CAAC,CAEpE,OADAN,EAAS,IACFQ,CACT,GACaC,IAAI,CAAC,KACpB,EAvBgDhM,GAE1CoL,QAAQpL,KAAK,CAAC,0BAA2B,CAAC,EAAEA,EAAMjH,IAAI,CAAC,EAAE,EAAEiH,EAAM/G,KAAK,CAAC;AAAE,CAAC,CAAE+G,EAAOqL,EACrF,CAAE,KAAM,CAKND,QAAQpL,KAAK,CAAC,0BAA2B4J,EAAc,0BACzD,CACF,CACF,E,GAjIGnH,EAAAA,EAAMA,C,CADamC,iBAAAA,SAAAA,CAAAA,eAAAA,KAAAA,G,GAEnBnC,EAAAA,EAAMA,C,CAFamC,iBAAAA,SAAAA,CAAAA,WAAAA,KAAAA,G,GAGnBnC,EAAAA,EAAMA,C,CAHamC,iBAAAA,SAAAA,CAAAA,YAAAA,KAAAA,GAgJtB,GAAG,CAAE+D,EAA4BnN,WAAW,EAAvCmN,CAAAA,EAA4BnN,WAAW,CAAK,6BAA4B,CAAE,CAAE,KAAM,CAAC,C","sources":["ui/packages/codespaces-business-enablement/components/OrgItem.tsx","ui/packages/codespaces-business-enablement/components/OrgSelect.tsx","ui/packages/codespaces-business-enablement/components/Index.tsx","ui/packages/codespaces-business-enablement/codespaces-business-enablement.ts","ui/packages/react-core/deferred-registry.ts","ui/packages/react-core/react-partial-anchor.ts","ui/packages/react-core/react-partial-registry.ts","ui/packages/react-core/ReactPartialElement.tsx","ui/packages/react-core/register-partial.ts","ui/packages/react-profiling-mode/src/index.ts","ui/packages/verified-fetch/verified-fetch.ts","ui/packages/github-avatar/GitHubAvatar.tsx","ui/packages/react-core/PartialRouter.tsx","ui/packages/react-core/PartialEntry.tsx","ui/packages/react-core/ReactBaseElement.tsx"],"sourcesContent":["import {GitHubAvatar} from '@github-ui/github-avatar'\nimport {Box, Link, Text, ActionMenu, ActionList} from '@primer/react'\nimport {orgHovercardPath} from '@github-ui/paths'\nimport type {Org} from '../types'\n\nexport function OrgItem({\n  org,\n  enabled,\n  updateOrgEnablement,\n  disableForm,\n  checked,\n  handleCheckClick,\n}: {\n  org: Org\n  enabled: boolean\n  updateOrgEnablement: (enablement: string) => void\n  disableForm: boolean\n  checked: boolean\n  handleCheckClick: (id: number) => void\n}) {\n  const pluralize = (count: number, noun: string, suffix = 's') => `${count} ${noun}${count !== 1 ? suffix : ''}`\n\n  const EnablementMenu = () => {\n    return (\n      <ActionMenu>\n        <ActionMenu.Button>{enabled ? 'Enabled' : 'Disabled'}</ActionMenu.Button>\n\n        <ActionMenu.Overlay>\n          <ActionList selectionVariant=\"single\">\n            <ActionList.Item\n              onSelect={() => updateOrgEnablement('enable')}\n              selected={enabled}\n              disabled={disableForm}\n              data-testid=\"org-item-enable-menu\"\n            >\n              Enabled\n            </ActionList.Item>\n            <ActionList.Item onSelect={() => updateOrgEnablement('disable')} selected={!enabled}>\n              Disabled\n            </ActionList.Item>\n          </ActionList>\n        </ActionMenu.Overlay>\n      </ActionMenu>\n    )\n  }\n\n  return (\n    <div className=\"d-flex flex-justify-between flex-items-center\" data-testid=\"org-item\">\n      <div>\n        <div className=\"d-flex flex-items-center\">\n          <input\n            type=\"checkbox\"\n            name=\"organizations[]\"\n            value={org.id}\n            aria-label=\"Member\"\n            className=\"mr-3\"\n            checked={checked}\n            onChange={() => handleCheckClick(org.id)}\n            data-testid=\"org-item-checkbox\"\n          />\n          <Box sx={{ml: 2, display: 'flex', alignItems: 'center'}}>\n            <Link href={org.path}>\n              <GitHubAvatar\n                sx={{mr: 2, cursor: 'pointer'}}\n                src={org.avatarUrl}\n                size={32}\n                data-hovercard-url={orgHovercardPath({owner: org.displayLogin})}\n                square={true}\n              />\n            </Link>\n            <div>\n              <div>\n                <Link href={org.path}>{org.displayLogin}</Link>\n              </div>\n              <div>\n                <Text sx={{color: 'muted.fg'}} className=\"color-fg-muted text-small\">\n                  {pluralize(org.memberCount, 'member')}\n                </Text>\n              </div>\n            </div>\n          </Box>\n        </div>\n      </div>\n      <EnablementMenu />\n    </div>\n  )\n}\n\ntry{ OrgItem.displayName ||= 'OrgItem' } catch {}\ntry{ EnablementMenu.displayName ||= 'EnablementMenu' } catch {}","import {ActionMenu, ActionList} from '@primer/react'\nimport {useState} from 'react'\nimport {OrgItem} from './OrgItem'\nimport type {Org, OrgsToUpdate} from '../types'\n\nexport function OrgSelect({\n  organizations,\n  orgsToUpdate,\n  setOrgsToUpdate,\n  children,\n  disableForm,\n}: {\n  organizations: Org[]\n  orgsToUpdate: OrgsToUpdate\n  setOrgsToUpdate: (orgs: object) => void\n  children: React.ReactNode\n  disableForm: boolean\n}) {\n  const [checkedOrgs, setCheckedOrgs] = useState({} as OrgsToUpdate)\n\n  const handleSelectAllClick = () => {\n    const orgs = {} as OrgsToUpdate\n    if (Object.keys(checkedOrgs).length === 0) {\n      for (const org of organizations) {\n        orgs[org.id] = 'checked'\n      }\n    }\n    setCheckedOrgs(orgs)\n  }\n\n  const bulkUpdateEnablement = (enablement: string) => {\n    const selectedOrgsIds = Object.keys(checkedOrgs)\n\n    const orgs = {} as OrgsToUpdate\n    for (const k of selectedOrgsIds) {\n      const id: number = parseInt(k)\n      orgs[id] = enablement\n    }\n\n    setOrgsToUpdate({...orgsToUpdate, ...orgs})\n  }\n\n  const handleCheckClick = (id: number) => {\n    if (checkedOrgs[id]) {\n      // remove from checkedOrgs\n      const copy = {...checkedOrgs}\n      delete copy[id]\n      setCheckedOrgs(copy)\n    } else {\n      // add to checkedOrgs\n      setCheckedOrgs({...checkedOrgs, [id]: 'checked'})\n    }\n  }\n\n  const BulkActionMenu = () => {\n    return (\n      <ActionMenu>\n        <ActionMenu.Button>Set organization access</ActionMenu.Button>\n        <ActionMenu.Overlay width=\"medium\">\n          <ActionList>\n            <ActionList.Item onSelect={() => bulkUpdateEnablement('enable')}>\n              Enable\n              <ActionList.Description variant=\"block\">\n                Selected organizations may control access to Codespaces\n              </ActionList.Description>\n            </ActionList.Item>\n            <ActionList.Item onSelect={() => bulkUpdateEnablement('disable')}>\n              Disable\n              <ActionList.Description variant=\"block\">\n                Selected organizations won’t have access to Codespaces\n              </ActionList.Description>\n            </ActionList.Item>\n          </ActionList>\n        </ActionMenu.Overlay>\n      </ActionMenu>\n    )\n  }\n\n  return (\n    <div className=\"Box rounded-top-2 rounded-0\" data-testid=\"org-select\">\n      <div className=\"Box-header\">\n        <div className=\"Box-title\">\n          <div className=\"d-inline-flex flex-justify-between width-full\">\n            <div>\n              <form>\n                <label className=\"table-list-header-meta py-1\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"select-all-checkbox\"\n                    data-testid=\"select-all-checkbox\"\n                    className=\"mr-2\"\n                    onClick={handleSelectAllClick}\n                  />\n                  <span id=\"codespaces-org-select-default-header\">Select organizations</span>\n                </label>\n              </form>\n            </div>\n            <div className=\"flex-justify-between\">\n              <BulkActionMenu />\n            </div>\n          </div>\n        </div>\n      </div>\n      <ul>\n        <li className=\"Box-row\">{children}</li>\n        {organizations.map(org => (\n          <li className=\"Box-row\" key={org.id}>\n            <OrgItem\n              org={org}\n              enabled={orgsToUpdate[org.id] ? orgsToUpdate[org.id] === 'enable' : org.enablementStatus === 'Enabled'}\n              updateOrgEnablement={enablement => setOrgsToUpdate({...orgsToUpdate, ...{[org.id]: enablement}})}\n              disableForm={disableForm}\n              checked={!!checkedOrgs[org.id]}\n              handleCheckClick={id => handleCheckClick(id)}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\ntry{ OrgSelect.displayName ||= 'OrgSelect' } catch {}\ntry{ BulkActionMenu.displayName ||= 'BulkActionMenu' } catch {}","import {\n  Button,\n  Box,\n  Dialog,\n  Text,\n  Octicon,\n  Flash,\n  Pagination,\n  TextInput,\n  Radio,\n  RadioGroup,\n  FormControl,\n} from '@primer/react'\nimport {AlertIcon, SearchIcon} from '@primer/octicons-react'\nimport {useRef, useState, useCallback} from 'react'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport {OrgSelect} from './OrgSelect'\nimport {debounce} from '@github/mini-throttle'\nimport type {CodespacesBusinessEnablementProps, PolicyInput} from '../types'\n\nexport function Index({\n  policy_input_list,\n  submit_url,\n  initalOrganizations,\n  search_url,\n  initialPageCount,\n  disable_form,\n}: CodespacesBusinessEnablementProps) {\n  const returnFocusRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedEnablement, setSelectedEnablement] = useState<PolicyInput>(\n    policy_input_list.find(p => p.checked) as PolicyInput,\n  )\n  const [flashMessage, setFlashMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [orgsToUpdate, setOrgsToUpdate] = useState({})\n  const [currentPage, setCurrentPage] = useState(1)\n  const [pageCount, setPageCount] = useState(initialPageCount)\n  const [organizations, setOrganizations] = useState()\n  const [query, setQuery] = useState('')\n\n  const handleSubmit = async () => {\n    const postForm = new FormData()\n\n    postForm.append('enablement', selectedEnablement.value)\n\n    if (selectedEnablement.value === 'selected_entities') {\n      postForm.append('orgs_to_update', JSON.stringify(orgsToUpdate))\n    }\n\n    try {\n      const response = await verifiedFetch(submit_url, {\n        method: 'PUT',\n        body: postForm,\n        headers: {\n          Accept: 'application/json',\n        },\n      })\n      if (response.ok) {\n        setIsOpen(false)\n        const data = await response.json()\n        setFlashMessage(data.message)\n        setErrorMessage('') // clear error\n        return response\n      } else {\n        return new Error('Failed to update')\n      }\n    } catch (error) {\n      return error\n    }\n  }\n\n  const handleEnablementClick = (policy_input: PolicyInput) => {\n    setFlashMessage('') // clear flash\n    setErrorMessage('') // clear error\n    setSelectedEnablement(policy_input)\n  }\n\n  const errorHandler = () => {\n    setFlashMessage('') // clear flash\n    setErrorMessage('Something went wrong. Please try again.')\n  }\n\n  const onPageChange = async (evt: React.MouseEvent, page: number) => {\n    evt.preventDefault()\n    await fetchOrganizationsFromServer(query, page)\n  }\n\n  const fetchOrganizationsFromServer = async (queryString: string, page = 1) => {\n    try {\n      const result = await verifiedFetch(`${search_url}?page=${page}&query=${queryString}`, {\n        headers: {\n          Accept: 'application/json',\n        },\n      })\n\n      if (result.ok) {\n        const data = await result.json()\n\n        setCurrentPage(page)\n        setPageCount(data.pageCount)\n        setOrganizations(data.orgs)\n      } else {\n        errorHandler()\n      }\n    } catch (e) {\n      errorHandler()\n    }\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounceFetchOrganiztionsFromServer = useCallback(\n    debounce(async (value: string) => {\n      setQuery(value)\n      await fetchOrganizationsFromServer(value)\n    }, 200),\n    [setQuery, fetchOrganizationsFromServer],\n  )\n\n  return (\n    <div data-testid=\"codespaces-settings-index\">\n      {flashMessage && <Flash>{flashMessage}</Flash>}\n      {errorMessage && <Flash variant={'danger'}>{errorMessage}</Flash>}\n      <h3 className=\"text-normal pb-2 mt-6\">Manage organization access to GitHub Codespaces</h3>\n      <p>Assign which organizations will have access to GitHub Codespaces inside your enterprise.</p>\n      <div className=\"py-3\">\n        <form>\n          <RadioGroup aria-labelledby=\"enablementChoice\" name=\"choiceGroup\">\n            {policy_input_list.map((policy_input: PolicyInput) => (\n              <FormControl key={policy_input.value} disabled={policy_input.disabled}>\n                <Radio\n                  name={policy_input.name}\n                  value={policy_input.value}\n                  defaultChecked={policy_input.checked}\n                  onClick={() => handleEnablementClick(policy_input)}\n                  data-testid={`codespaces-settings-${policy_input.value}`}\n                />\n                <FormControl.Label>\n                  {policy_input.text}\n                  <p className=\"note\">{policy_input.description}</p>\n                </FormControl.Label>\n              </FormControl>\n            ))}\n          </RadioGroup>\n        </form>\n      </div>\n      <Button sx={{mb: 3}} ref={returnFocusRef} onClick={() => setIsOpen(true)}>\n        Save\n      </Button>\n      <Dialog\n        isOpen={isOpen}\n        returnFocusRef={returnFocusRef}\n        onDismiss={() => setIsOpen(false)}\n        aria-labelledby=\"update-codespaces-settings\"\n      >\n        <Dialog.Header id=\"update-codespaces-settings\">Update GitHub Codespaces settings?</Dialog.Header>\n        <Box sx={{p: 3}}>\n          <Text id=\"label\" sx={{fontFamily: 'sans-serif'}}>\n            <Octicon icon={AlertIcon} sx={{mr: 2, color: 'danger.fg'}} />\n            {selectedEnablement.confirm_message}\n          </Text>\n          <Box sx={{display: 'flex', mt: 3, justifyContent: 'flex-end'}}>\n            <Button sx={{mr: 1}} onClick={() => setIsOpen(false)}>\n              Cancel\n            </Button>\n            <Button variant=\"danger\" onClick={handleSubmit}>\n              Submit\n            </Button>\n          </Box>\n        </Box>\n      </Dialog>\n      {selectedEnablement.value === 'selected_entities' && (\n        <div className=\"mt-2 mb-2\">\n          <OrgSelect\n            organizations={organizations || initalOrganizations}\n            orgsToUpdate={orgsToUpdate}\n            setOrgsToUpdate={setOrgsToUpdate}\n            disableForm={disable_form}\n          >\n            <TextInput\n              className=\"formControl input-block mb-3\"\n              leadingVisual={SearchIcon}\n              placeholder=\"Find an organization…\"\n              aria-label=\"Find a organization\"\n              data-testid=\"query-text-input\"\n              onChange={e => debounceFetchOrganiztionsFromServer(e.target.value)}\n            />\n          </OrgSelect>\n          <Pagination pageCount={pageCount} currentPage={currentPage} onPageChange={onPageChange} />\n        </div>\n      )}\n    </div>\n  )\n}\n\ntry{ Index.displayName ||= 'Index' } catch {}","import {registerReactPartial} from '@github-ui/react-core/register-partial'\nimport {Index} from './components/Index'\n\nregisterReactPartial('codespaces-business-enablement', {\n  Component: Index,\n})\n","export class DeferredRegistry<T> {\n  private registrationEntries: Record<\n    string,\n    {\n      promise: Promise<T>\n      resolve?: (r: T) => void\n    }\n  > = {}\n\n  public register(name: string, registration: T) {\n    const entry = this.registrationEntries[name]\n    if (entry) {\n      entry.resolve?.(registration)\n    } else {\n      this.registrationEntries[name] = {\n        promise: Promise.resolve(registration),\n      }\n    }\n  }\n\n  public getRegistration(name: string): Promise<T> {\n    this.registrationEntries[name] ||= new Deferred()\n    return this.registrationEntries[name].promise\n  }\n}\n\nclass Deferred<T> {\n  declare promise\n  declare resolve: (r: T) => void\n\n  constructor() {\n    this.promise = new Promise<T>(resolve => {\n      this.resolve = resolve\n    })\n  }\n}\n","import type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {useCallback, useEffect, useRef, useState} from 'react'\n\ninterface ReactPartialAnchor {\n  /**\n   * DO NOT USE THIS PROPERTY DIRECTLY. It is meant to be used with useExternalAnchor and useOnAnchorClick\n   */\n  __wrapperElement: ReactPartialAnchorElement\n}\n\nexport interface ReactPartialAnchorProps {\n  reactPartialAnchor?: ReactPartialAnchor\n}\n\nexport function usePartialAnchorProps(\n  anchorElement: ReactPartialAnchorElement | undefined | null,\n): ReactPartialAnchorProps {\n  useEffect(() => {\n    const anchor = anchorElement?.anchor\n\n    if (!anchor) {\n      return\n    }\n\n    if ('disabled' in anchor) {\n      anchor.disabled = false\n    }\n    anchor.classList.remove('cursor-wait')\n  }, [anchorElement])\n\n  if (!anchorElement) {\n    return {}\n  }\n\n  return {\n    reactPartialAnchor: {\n      __wrapperElement: anchorElement,\n    },\n  }\n}\n\nexport function useExternalAnchor(reactPartialAnchor: ReactPartialAnchor) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor || null)\n  const [open, setOpen] = useState(false)\n\n  const onClick = useCallback(() => {\n    // toggle the open state when clicked\n    setOpen(!open)\n  }, [open, setOpen])\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    ref.current.setAttribute('aria-expanded', open.toString())\n    ref.current.setAttribute('aria-haspopup', 'true')\n  }, [ref, open])\n\n  useOnAnchorClick(reactPartialAnchor, onClick)\n\n  return {\n    ref,\n    open,\n    setOpen,\n  }\n}\n\nexport function useOnAnchorClick(reactPartialAnchor: ReactPartialAnchor, onClick: (event: MouseEvent) => void) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor)\n\n  useEffect(() => {\n    const element = ref.current\n    if (!element) {\n      return\n    }\n\n    element.addEventListener('click', onClick)\n    return () => element.removeEventListener('click', onClick)\n  }, [ref, onClick])\n}\n\nexport type PropsWithPartialAnchor<T> = T & Required<ReactPartialAnchorProps>\n","import {DeferredRegistry} from './deferred-registry'\n\nexport interface PartialRegistration {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Component: React.ComponentType<any>\n}\n\nexport const partialRegistry = new DeferredRegistry<PartialRegistration>()\n\nexport function getReactPartial(appName: string) {\n  return partialRegistry.getRegistration(appName)\n}\n","import {controller} from '@github/catalyst'\nimport {getReactPartial} from './react-partial-registry'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {ReactBaseElement} from './ReactBaseElement'\nimport {PartialEntry} from './PartialEntry'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\n\n// What is this silliness? Is it react or a web component?!\n// It's a web component we use to bootstrap react partials within the monolith.\n@controller\nclass ReactPartialElement extends ReactBaseElement<EmbeddedPartialData> {\n  nameAttribute = 'partial-name'\n\n  async getReactNode(embeddedData: EmbeddedPartialData) {\n    const {Component} = await getReactPartial(this.name)\n\n    // Some React Partials will be wrapped in a react-partial-anchor, which is used to conditionally render the Partial\n    const anchorElement = this.closest<ReactPartialAnchorElement>('react-partial-anchor')\n\n    return (\n      <PartialEntry\n        partialName={this.name}\n        embeddedData={embeddedData}\n        Component={Component}\n        wasServerRendered={this.hasSSRContent}\n        ssrError={this.ssrError}\n        anchorElement={anchorElement}\n      />\n    )\n  }\n}\n","import {partialRegistry, type PartialRegistration} from './react-partial-registry'\n// Import the web component to get it registered on the window\nimport './ReactPartialElement'\n\n// NOTE: if the signature of this method changes, also update the react-partial-name ESLint rule\n// /workspaces/github/ui/packages/eslint-plugin-github-monorepo/rules/react-partial-name.js\nexport function registerReactPartial(name: string, registration: PartialRegistration) {\n  partialRegistry.register(name, registration)\n}\n","import safeStorage from '@github-ui/safe-storage'\n\nconst {getItem, setItem, removeItem} = safeStorage('localStorage')\nconst REACT_PROFILING_ENABLED = 'REACT_PROFILING_ENABLED'\n\ninterface ReactProfilingModeMethods {\n  enable: () => void\n  disable: () => void\n  isEnabled: () => boolean\n}\n\nconst ReactProfilingMode: ReactProfilingModeMethods = {\n  enable: () => setItem(REACT_PROFILING_ENABLED, 'true'),\n  disable: () => removeItem(REACT_PROFILING_ENABLED),\n  isEnabled: () => !!getItem(REACT_PROFILING_ENABLED),\n}\n\nexport default ReactProfilingMode\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  assertRelativePathOrSameOrigin(path)\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\nfunction assertRelativePathOrSameOrigin(path: string) {\n  if (process.env.NODE_ENV === 'test' && !window.location.origin) return\n  const url = new URL(path, window.location.origin)\n  if (url.origin !== window.location.origin) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetch(path, {...init, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetchJSON(path, {...init, headers})\n}\n","import {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {\n  // eslint-disable-next-line no-restricted-imports\n  Avatar,\n  type AvatarProps,\n} from '@primer/react'\nimport {forwardRef, useMemo} from 'react'\n\nexport type GitHubAvatarProps = AvatarProps\n\nexport const GitHubAvatar = forwardRef<HTMLImageElement, GitHubAvatarProps>(function GitHubAvatar(\n  {src, size = 20, ...otherProps}: GitHubAvatarProps,\n  ref,\n) {\n  const avatarUrl = useMemo(() => {\n    // src maybe be relative, e.g. `/mona.png`, in which case the instances main origin should be used,\n    // e.g. \"https://github.com\" for dotcom. If src is a fully quallified URL then the origin argument is ignored.\n    const url = new URL(src, ssrSafeLocation.origin)\n\n    // do not override size if it's already set as query parameter\n    if (!url.searchParams.has('size') && !url.searchParams.has('s')) {\n      // we double size for better rendering on high density pixel screens\n      url.searchParams.set('size', String(Number(size) * 2))\n    }\n\n    return url.toString()\n  }, [src, size])\n\n  return <Avatar ref={ref} src={avatarUrl} size={size} data-testid=\"github-avatar\" {...otherProps} />\n})\n\ntry{ GitHubAvatar.displayName ||= 'GitHubAvatar' } catch {}","import {useState} from 'react'\nimport type {BrowserHistory, MemoryHistory} from '@remix-run/router'\nimport {Router} from 'react-router-dom'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\ntype Props = {\n  children: React.ReactNode\n  history: BrowserHistory | MemoryHistory\n}\n\nexport function PartialRouter({children, history}: Props) {\n  const [state, setState] = useState({\n    location: history.location,\n  })\n\n  useHydratedEffect(() => history.listen(setState), [history])\n\n  return (\n    <Router location={state.location} navigator={history}>\n      {children}\n    </Router>\n  )\n}\n\ntry{ PartialRouter.displayName ||= 'PartialRouter' } catch {}","// Think of this as the entry point into the framework\nimport React from 'react'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {BaseProviders} from './BaseProviders'\nimport type {BrowserHistory} from '@remix-run/router'\nimport {createMemoryHistory} from '@remix-run/router'\nimport {AppContextProvider} from './AppContextProvider'\nimport {PartialRouter} from './PartialRouter'\nimport {CommonElements} from './CommonElements'\nimport {createBrowserHistory} from './create-browser-history'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {usePartialAnchorProps} from './react-partial-anchor'\n\ninterface Props {\n  partialName: string\n  embeddedData: EmbeddedPartialData\n  Component: React.ComponentType\n  wasServerRendered: boolean\n  ssrError?: HTMLScriptElement\n  anchorElement?: ReactPartialAnchorElement | null\n}\n\nexport function PartialEntry({\n  partialName,\n  embeddedData,\n  Component,\n  wasServerRendered,\n  ssrError,\n  anchorElement,\n}: Props) {\n  // Create a ref to track the browser history:\n  const historyRef = React.useRef<BrowserHistory>()\n  const window = globalThis.window as Window | undefined\n\n  // For linking to work, we can just pass a dummy pathname here. We may consider plumbing the actual path in\n  if (!historyRef.current) {\n    historyRef.current = !window\n      ? createMemoryHistory({initialEntries: [{pathname: '/'}]})\n      : createBrowserHistory({window})\n  }\n  const history = historyRef.current\n  const partialAnchorProps = usePartialAnchorProps(anchorElement)\n\n  // Wrap the partial in an AppContextProvider and static Router so that react-core links\n  // will be functional.\n  return (\n    <BaseProviders appName={partialName} wasServerRendered={wasServerRendered}>\n      <AppContextProvider history={history} routes={[]}>\n        <PartialRouter history={history}>\n          <Component {...embeddedData.props} {...(partialAnchorProps as object)} />\n          <CommonElements ssrError={ssrError} />\n        </PartialRouter>\n      </AppContextProvider>\n    </BaseProviders>\n  )\n}\n\ntry{ PartialEntry.displayName ||= 'PartialEntry' } catch {}","import {target} from '@github/catalyst'\nimport {createRoot, hydrateRoot} from 'react-dom/client'\nimport type {createRoot as createRootType, hydrateRoot as hydrateRootType, Root} from 'react-dom/client'\nimport React from 'react'\nimport ReactProfilingMode from '@github-ui/react-profiling-mode'\nimport {EXPECTED_ERRORS} from './expected-errors'\nimport {sendStats} from '@github-ui/stats'\n\ntype ReactDOM = {\n  createRoot: typeof createRootType\n  hydrateRoot: typeof hydrateRootType\n}\n\nconst REACT_INVARIANT_ERROR_REGEX = /Minified React error #(?<invariant>\\d+)/\n\nexport abstract class ReactBaseElement<T> extends HTMLElement {\n  @target embeddedData: HTMLScriptElement | undefined\n  @target ssrError: HTMLScriptElement | undefined\n  @target reactRoot: HTMLElement | undefined\n  private root: Root | undefined\n\n  abstract nameAttribute: string\n  abstract getReactNode(embeddedData: T): Promise<React.ReactNode>\n\n  protected get name() {\n    return this.getAttribute(this.nameAttribute) as string\n  }\n\n  private get embeddedDataText() {\n    const text = this.embeddedData?.textContent\n\n    if (!text) {\n      throw new Error(`No embedded data provided for react element ${this.name}`)\n    }\n\n    return text\n  }\n\n  get hasSSRContent() {\n    return this.getAttribute('data-ssr') === 'true'\n  }\n\n  connectedCallback() {\n    this.renderReact()\n  }\n\n  disconnectedCallback() {\n    this.root?.unmount()\n    this.root = undefined\n  }\n\n  private async renderReact() {\n    if (!this.reactRoot) throw new Error('No react root provided')\n    let reactDom: ReactDOM = {\n      createRoot,\n      hydrateRoot,\n    }\n\n    // Override the react-dom import if we're in profiling mode\n    if (ReactProfilingMode.isEnabled()) {\n      reactDom = await this.getReactDomWithProfiling()\n    }\n\n    const embeddedData = JSON.parse(this.embeddedDataText) as T\n    const ssrErrorText = this.ssrError?.textContent\n    const node = await this.getReactNode(embeddedData)\n    const baseNode = <React.StrictMode>{node}</React.StrictMode>\n\n    if (ssrErrorText) {\n      this.logSSRError(ssrErrorText)\n    }\n\n    if (this.hasSSRContent) {\n      /**\n       * Styled-components automatically looks for style tags to hydrate on first page load, but will not detect them\n       * if they are added after the initial page load. This causes a hydration error because React isn't expecting\n       * a style tag within the app. To work around this, we need to manually move the style tags to the head before\n       * hydrating the app.\n       *\n       * During hydration, styled-components will create a new style tag which matches the one we moved to the head.\n       * This means that after hydration, we can safely remove the style tag we manually moved to the head.\n       */\n      const styles = this.querySelector('style[data-styled=\"true\"]')\n      if (styles) document.head.appendChild(styles)\n\n      // Hydrate the react app\n      // onRecoverableError is disabled until we have a react version with this fix in:\n      // https://github.com/facebook/react/pull/25692\n      this.root = reactDom.hydrateRoot(this.reactRoot, baseNode, {\n        onRecoverableError: error => {\n          if (!(error instanceof Error)) return\n\n          const match = REACT_INVARIANT_ERROR_REGEX.exec(error.message)\n          const invariant = String(match?.groups?.invariant)\n\n          sendStats({\n            incrementKey: 'REACT_HYDRATION_ERROR',\n            incrementTags: {\n              appName: this.name,\n              invariant,\n            },\n          })\n        },\n      })\n\n      // Remove the manually moved style tag after hydration\n      if (styles) {\n        // Wait until things are idle to remove the style tag. If we do it immediately, we can cause a flash of unstyled content.\n        requestIdleCallback(() => {\n          // styles could have already been removed by Turbo if a navigation happens quickly. Only remove it from the DOM if it's still there.\n          styles.parentElement?.removeChild(styles)\n        })\n      }\n    } else {\n      this.root = reactDom.createRoot(this.reactRoot)\n      this.root.render(baseNode)\n    }\n\n    this.classList.add('loaded')\n  }\n\n  private getReactDomWithProfiling() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return import('react-dom/profiling') as any as Promise<ReactDOM>\n  }\n\n  private logSSRError(ssrErrorText: string) {\n    if (EXPECTED_ERRORS[ssrErrorText]) {\n      // eslint-disable-next-line no-console\n      return console.error('SSR failed with an expected error:', EXPECTED_ERRORS[ssrErrorText])\n    }\n\n    try {\n      const error = JSON.parse(ssrErrorText) as PlatformJavascriptError\n      const stacktrace = parseFailbotStacktrace(error)\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', `${error.type}: ${error.value}\\n`, error, stacktrace)\n    } catch {\n      /**\n       * In the event we couldn't log the error, we should not break the application\n       */\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', ssrErrorText, 'unable to parse as json')\n    }\n  }\n}\n\nfunction parseFailbotStacktrace(error: PlatformJavascriptError) {\n  if (!error.stacktrace) return ''\n  let prefix = '\\n '\n  const stack = error.stacktrace.map((frame: PlatformStackframe) => {\n    const {function: func, filename, lineno, colno} = frame\n    const line = `${prefix} at ${func} (${filename}:${lineno}:${colno})`\n    prefix = ' '\n    return line\n  })\n  return stack.join('\\n')\n}\n\ntry{ REACT_INVARIANT_ERROR_REGEX.displayName ||= 'REACT_INVARIANT_ERROR_REGEX' } catch {}"],"names":["EnablementMenu","BulkActionMenu","OrgItem","org","enabled","updateOrgEnablement","disableForm","checked","handleCheckClick","div","className","data-testid","input","type","name","value","id","aria-label","onChange","Box","sx","ml","display","alignItems","Link","href","path","GitHubAvatar","mr","cursor","src","avatarUrl","size","data-hovercard-url","orgHovercardPath","owner","displayLogin","square","Text","color","pluralize","count","noun","suffix","memberCount","ActionMenu","Button","Overlay","ActionList","selectionVariant","Item","onSelect","selected","disabled","displayName","OrgSelect","organizations","orgsToUpdate","setOrgsToUpdate","children","checkedOrgs","setCheckedOrgs","useState","bulkUpdateEnablement","selectedOrgsIds","Object","keys","orgs","k","parseInt","enablement","copy","form","label","onClick","length","span","width","Description","variant","ul","li","map","enablementStatus","Index","policy_input_list","submit_url","initalOrganizations","search_url","initialPageCount","disable_form","returnFocusRef","useRef","isOpen","setIsOpen","selectedEnablement","setSelectedEnablement","find","p","flashMessage","setFlashMessage","errorMessage","setErrorMessage","currentPage","setCurrentPage","pageCount","setPageCount","setOrganizations","query","setQuery","handleSubmit","postForm","FormData","append","JSON","stringify","response","verifiedFetch","method","body","headers","Accept","ok","data","json","message","error","handleEnablementClick","policy_input","errorHandler","onPageChange","evt","page","preventDefault","fetchOrganizationsFromServer","queryString","result","e","debounceFetchOrganiztionsFromServer","useCallback","debounce","Flash","h3","RadioGroup","aria-labelledby","FormControl","Radio","defaultChecked","Label","text","description","mb","ref","Dialog","onDismiss","Header","fontFamily","Octicon","icon","AlertIcon","confirm_message","mt","justifyContent","TextInput","leadingVisual","SearchIcon","placeholder","target","Pagination","registerReactPartial","Component","DeferredRegistry","register","registration","entry","registrationEntries","resolve","promise","Promise","getRegistration","Deferred","constructor","usePartialAnchorProps","anchorElement","useEffect","anchor","classList","remove","reactPartialAnchor","__wrapperElement","useExternalAnchor","open","setOpen","current","setAttribute","toString","useOnAnchorClick","element","addEventListener","removeEventListener","partialRegistry","ReactPartialElement","ReactBaseElement","getReactNode","embeddedData","appName","closest","PartialEntry","partialName","wasServerRendered","hasSSRContent","ssrError","nameAttribute","controller","getItem","setItem","removeItem","safeStorage","REACT_PROFILING_ENABLED","enable","disable","isEnabled","init","assertRelativePathOrSameOrigin","url","URL","window","location","origin","fetch","verifiedFetchJSON","undefined","reactFetch","reactFetchJSON","forwardRef","otherProps","useMemo","ssrSafeLocation","searchParams","has","set","String","Number","Avatar","PartialRouter","history","state","setState","useHydratedEffect","listen","Router","navigator","historyRef","React","globalThis","createBrowserHistory","createMemoryHistory","initialEntries","pathname","partialAnchorProps","BaseProviders","AppContextProvider","routes","props","CommonElements","REACT_INVARIANT_ERROR_REGEX","HTMLElement","getAttribute","embeddedDataText","textContent","connectedCallback","renderReact","disconnectedCallback","root","unmount","reactRoot","reactDom","createRoot","hydrateRoot","ReactProfilingMode","getReactDomWithProfiling","parse","ssrErrorText","node","baseNode","logSSRError","styles","querySelector","document","head","appendChild","onRecoverableError","Error","match","exec","invariant","groups","sendStats","incrementKey","incrementTags","requestIdleCallback","parentElement","removeChild","render","add","EXPECTED_ERRORS","console","stacktrace","parseFailbotStacktrace","prefix","stack","function","func","filename","lineno","colno","frame","line","join"],"sourceRoot":""}