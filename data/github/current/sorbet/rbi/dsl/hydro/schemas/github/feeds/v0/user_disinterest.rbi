# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Feeds::V0::UserDisinterest`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Feeds::V0::UserDisinterest`.

class Hydro::Schemas::Github::Feeds::V0::UserDisinterest
  sig do
    params(
      actor_id: T.nilable(Integer),
      dismissed_at: T.nilable(Google::Protobuf::Timestamp),
      event_id: T.nilable(Integer),
      event_type_string: T.nilable(String),
      identifier: T.nilable(String),
      reason: T.nilable(T.any(Symbol, Integer)),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext),
      resource_id: T.nilable(Integer),
      resource_type: T.nilable(T.any(Symbol, Integer)),
      undo: T.nilable(T::Boolean)
    ).void
  end
  def initialize(actor_id: nil, dismissed_at: nil, event_id: nil, event_type_string: nil, identifier: nil, reason: nil, request_context: nil, resource_id: nil, resource_type: nil, undo: nil); end

  sig { returns(Integer) }
  def actor_id; end

  sig { params(value: Integer).void }
  def actor_id=(value); end

  sig { void }
  def clear_actor_id; end

  sig { void }
  def clear_dismissed_at; end

  sig { void }
  def clear_event_id; end

  sig { void }
  def clear_event_type_string; end

  sig { void }
  def clear_identifier; end

  sig { void }
  def clear_reason; end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_resource_id; end

  sig { void }
  def clear_resource_type; end

  sig { void }
  def clear_undo; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def dismissed_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def dismissed_at=(value); end

  sig { returns(Integer) }
  def event_id; end

  sig { params(value: Integer).void }
  def event_id=(value); end

  sig { returns(String) }
  def event_type_string; end

  sig { params(value: String).void }
  def event_type_string=(value); end

  sig { returns(String) }
  def identifier; end

  sig { params(value: String).void }
  def identifier=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def reason; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def reason=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(Integer) }
  def resource_id; end

  sig { params(value: Integer).void }
  def resource_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def resource_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def resource_type=(value); end

  sig { returns(T::Boolean) }
  def undo; end

  sig { params(value: T::Boolean).void }
  def undo=(value); end
end
