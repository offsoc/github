<% enterprise_team = this_business.enterprise_teams %>
<%= render(Primer::Beta::BorderBox.new(padding: :condensed)) do |component| %>
  <% component.with_header do |h| %>
    <% h.with_title(tag: :h2) do %>
      Copilot Access
    <% end %>
  <% end %>
  <% component.with_row do %>
    <%= render Stafftools::Copilot::DetailComponent.new(
      "Basic Seat Plan",
      true
    ) %>
  <% end %>
  <% component.with_row do %>
    <%= render Stafftools::Copilot::DetailComponent.new(
      "Max Copilot Seats",
      this_business.copilot_max_seats,
      "What is the max number of Copilot seats this enterprise allows?",
    ) %>
  <% end %>
<% end %>

<%= render(Stafftools::Copilot::PlanComponent.new(copilot_business)) %>

<br>
<%= render(Primer::Beta::BorderBox.new(padding: :condensed)) do |component| %>
  <% component.with_header do |h| %>
    <% h.with_title(tag: :h2) do %>
      Copilot Settings
    <% end %>
  <% end %>
  <% component.with_row do %>
    <%= render Stafftools::Copilot::DetailComponent.new(
      "Public Code Suggestions",
      copilot_business.no_public_code_suggestions_policy? ? "No Policy" : !copilot_business.public_code_suggestions_configured? ? "Unconfigured" : copilot_business.allow_public_code_suggestions? ? "Allow" : "Block",
      "Whether this enterprise has allowed or blocked public code suggestions",
      label_scheme: copilot_business.allow_public_code_suggestions? ? :success : copilot_business.no_public_code_suggestions_policy? ? :secondary : :danger
    ) %>
  <% end %>
  <% component.with_row do %>
    <%= render Stafftools::Copilot::DetailComponent.new(
      "IDE Chat",
      copilot_business.chat_setting.titleize,
      "Whether this enterprise has allowed or blocked chat",
      label_scheme: copilot_business.chat_enabled? ? :success : copilot_business.no_chat_policy? ? :secondary : :danger
    ) %>
  <% end %>
  <% component.with_row do %>
    <%= render Stafftools::Copilot::DetailComponent.new(
      "CLI",
      copilot_business.cli_setting.titleize,
      "Whether this enterprise has enabled or disabled Copilot in the CLI",
      label_scheme: copilot_business.cli_enabled? ? :success : copilot_business.cli_no_policy? ? :secondary : :danger
    ) %>
  <% end %>
  <% component.with_row do %>
    <%= render Stafftools::Copilot::DetailComponent.new(
      "Mobile Chat",
      copilot_business.mobile_chat_setting.titleize,
      "Whether this enterprise has enabled or disabled Copilot Chat in GitHub Mobile",
      label_scheme: copilot_business.mobile_chat_enabled? ? :success : copilot_business.no_mobile_chat_policy? ? :secondary : :danger
    ) %>
  <% end %>
  <% if copilot_business.business_object.feature_enabled?(:copilot_usage_metrics_policy) %>
    <% component.with_row do %>
      <%= render Stafftools::Copilot::DetailComponent .new(
        "Usage Metrics API",
        copilot_business.usage_telemetry_api_setting.titleize,
        "Whether this enterprise has enabled or disabled access to #{Copilot::COPILOT_METRICS_API_NAME} endpoints",
        label_scheme: copilot_business.telemetry_aggregation_enabled? ? :success : :danger
      ) %>
    <% end %>
  <% end %>
<% end %>
<br>

<%= render Stafftools::Copilot::EmailOptInOutComponent.new(
  entity: this_business,
  submit_path: business_toggle_copilot_email_notifications_stafftools_enterprise_path(this_business)
) %>

<%= render Stafftools::Copilot::SeatEmissionsComponent.new(copilot_seat_emissions) %>

<div class="site-admin-subhead ruleless">
  <h2 class="site-admin-subhead-heading">
    Copilot Seats (<%= copilot_seats.total_entries %>)
  </h2>
</div>
<%= render Stafftools::Copilot::PaginatedSeatsComponent.new(copilot_seats) %>
