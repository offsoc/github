# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Support::HelpHub::V1::SearchCommunityForumHitsItem`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Support::HelpHub::V1::SearchCommunityForumHitsItem`.

class MonolithTwirp::Support::HelpHub::V1::SearchCommunityForumHitsItem
  sig do
    params(
      author: T.nilable(MonolithTwirp::Support::HelpHub::V1::Author),
      comment_count: T.nilable(Integer),
      intro: T.nilable(String),
      labels: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      participant_count: T.nilable(Integer),
      reaction_count: T.nilable(Integer),
      section: T.nilable(String),
      title: T.nilable(String),
      upvote_count: T.nilable(Integer),
      url: T.nilable(String)
    ).void
  end
  def initialize(author: nil, comment_count: nil, intro: nil, labels: T.unsafe(nil), participant_count: nil, reaction_count: nil, section: nil, title: nil, upvote_count: nil, url: nil); end

  sig { returns(T.nilable(MonolithTwirp::Support::HelpHub::V1::Author)) }
  def author; end

  sig { params(value: T.nilable(MonolithTwirp::Support::HelpHub::V1::Author)).void }
  def author=(value); end

  sig { void }
  def clear_author; end

  sig { void }
  def clear_comment_count; end

  sig { void }
  def clear_intro; end

  sig { void }
  def clear_labels; end

  sig { void }
  def clear_participant_count; end

  sig { void }
  def clear_reaction_count; end

  sig { void }
  def clear_section; end

  sig { void }
  def clear_title; end

  sig { void }
  def clear_upvote_count; end

  sig { void }
  def clear_url; end

  sig { returns(Integer) }
  def comment_count; end

  sig { params(value: Integer).void }
  def comment_count=(value); end

  sig { returns(String) }
  def intro; end

  sig { params(value: String).void }
  def intro=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def labels; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def labels=(value); end

  sig { returns(Integer) }
  def participant_count; end

  sig { params(value: Integer).void }
  def participant_count=(value); end

  sig { returns(Integer) }
  def reaction_count; end

  sig { params(value: Integer).void }
  def reaction_count=(value); end

  sig { returns(String) }
  def section; end

  sig { params(value: String).void }
  def section=(value); end

  sig { returns(String) }
  def title; end

  sig { params(value: String).void }
  def title=(value); end

  sig { returns(Integer) }
  def upvote_count; end

  sig { params(value: Integer).void }
  def upvote_count=(value); end

  sig { returns(String) }
  def url; end

  sig { params(value: String).void }
  def url=(value); end
end
