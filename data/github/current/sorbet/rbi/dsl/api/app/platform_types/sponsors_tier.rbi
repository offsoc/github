# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Api::App::PlatformTypes::SponsorsTier`.
# Please instead update this file by running `bin/tapioca dsl Api::App::PlatformTypes::SponsorsTier`.

class Api::App::PlatformTypes::SponsorsTier < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(T.nilable(Api::App::PlatformTypes::SponsorsTierAdminInfo)) }
  def admin_info; end

  sig { returns(T::Boolean) }
  def admin_info?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::SponsorsTier)) }
  def closest_lesser_value_tier; end

  sig { returns(T::Boolean) }
  def closest_lesser_value_tier?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def created_at; end

  sig { returns(T::Boolean) }
  def created_at?; end

  sig { returns(String) }
  def description; end

  sig { returns(T::Boolean) }
  def description?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def description_html; end

  sig { returns(T::Boolean) }
  def description_html?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(T::Boolean) }
  def is_custom_amount; end

  sig { returns(T::Boolean) }
  def is_custom_amount?; end

  sig { returns(T::Boolean) }
  def is_one_time; end

  sig { returns(T::Boolean) }
  def is_one_time?; end

  sig { returns(Integer) }
  def monthly_price_in_cents; end

  sig { returns(T::Boolean) }
  def monthly_price_in_cents?; end

  sig { returns(Integer) }
  def monthly_price_in_dollars; end

  sig { returns(T::Boolean) }
  def monthly_price_in_dollars?; end

  sig { returns(String) }
  def name; end

  sig { returns(T::Boolean) }
  def name?; end

  sig { returns(Api::App::PlatformTypes::SponsorsListing) }
  def sponsors_listing; end

  sig { returns(T::Boolean) }
  def sponsors_listing?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def updated_at; end

  sig { returns(T::Boolean) }
  def updated_at?; end
end
