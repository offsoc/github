<%# erblint:counter DeprecatedComponentsCounter 2 %>
<%# erblint:counter DeprecatedInPrimerCounter 1 %>
<%# erblint:counter ButtonComponentMigrationCounter 1 %>
<span class="card-octicon position-absolute">
  <div class="color-fg-success">
    <%= octicon(issue_icon(issue), class: "#{issue_class(issue)} js-issue-octicon", "aria-label": issue_label(issue)) %>
  </div>
  <% if issue.pull_request? && issue.pull_request.combined_status.any? %>
    <div class="js-build-status">
      <% status_view_model = create_view_model(Statuses::IconView,
          combined_status: issue.pull_request.combined_status,
          dropdown_direction: local_assigns.fetch(:status_direction, "e"),
          tooltip_direction: "e",
          dropdown_class: "js-status-dropdown-menu js-close-menu-on-scroll js-append-menu-to-body d-none p-0"
        )
      %>
      <%= render layout: "statuses/deprecated_icon", locals: { view: status_view_model } do %>
        <div class="Details m-6 js-details-container js-status-loader"
            data-contents-url="<%= card_pull_request_status_path(project, issue.pull_request) %>">
          <div class="d-flex flex-column flex-items-center js-status-loading">
            <%= render(Primer::Beta::Spinner.new) %>
            <div class="color-fg-muted no-wrap">Loading status checks&hellip;</div>
          </div>
          <div class="d-none d-flex flex-column flex-items-center js-status-error">
            <div class="no-wrap">Failed to load status checks.</div>
            <%= render Primer::ButtonComponent.new(scheme: :link, classes: "js-status-retry") do %>Retry<% end %>
          </div>
        </div>
      <% end %>
    </div>
  <% end %>
</span>

<%
  link_args = {
    class: "h5 d-block lh-condensed mb-1 mr-5 markdown-title #{"js-project-card-issue-link" unless mobile?}",
    "data-content-id": issue.id,
    "data-content-label": issue.pull_request? ? "pull request" : "issue",
    "data-content-repo-label": issue.repository.name_with_display_owner,
    "data-content-repo-url": repository_path(issue.repository)
  }
  if defined?(hydro_data) && hydro_data
    link_args.merge!({
      "data-hydro-click": hydro_data["hydro-click"],
      "data-hydro-click-hmac": hydro_data["hydro-click-hmac"]
    })
  end
%>
<%= link_to title_markdown(issue.title), issue_or_pull_request_path(issue), link_args %>

<% if render_task_list && issue.task_list? %>
  <div class="my-1 v-align-middle">
    <%= task_list(issue, include_left_margin: false) %>
  </div>
<% end %>

<small class="color-fg-muted d-block <% if issue.assignees.any? %>pr-6<% end %>">
  <%= issue.repository.name if project.owner_type != "Repository" && !local_assigns[:show_repository] %><span class="js-issue-number">#<%= issue.number %></span>
  opened by <%= link_to issue.safe_user.display_login, user_path(issue.safe_user), class: "color-fg-default Link--inTextBlock" %>
  <% if local_assigns[:show_repository] %>
    in <%= link_to issue.repository.name_with_display_owner, repository_path(issue.repository), class: "color-fg-default Link--inTextBlock" %>
  <% end %>
</small>

<%
  first_three = issue.assignees.first(3)
  rest = issue.assignees[3..-1]
  tooltip = issue.assignees.reverse.map(&:display_login).to_sentence
%>

<% if issue.labels.any? %>
  <span class="d-flex flex-wrap position-relative pb-1 <% if issue.assignees.any? %>mr-6<% end %>">
    <% issue.sorted_labels.each do |label| %>
      <%= render Issues::LabelComponent.new(
          color: label.color,
          name: label.name,
          description: label.description,
          tag: :button,
          type: "button",
          "data-card-filter": "label:#{Search::ParsedQuery.encode_value(label.name)}",
          mt: 1, mr: 1,
          classes: "js-card-filter") do %>
        <span class="css-truncate css-truncate-target width-fit"><%= label.name_html %></span>
      <% end %>
    <% end %>
  </span>
<% end %>

<% if issue.milestone %>
  <button type="button"
    class="btn-link color-fg-muted f6 js-card-filter v-align-middle"
    data-card-filter="milestone:<%= Search::ParsedQuery.encode_value(issue.milestone.title) %>">
    <span class="css-truncate css-truncate-target" style="max-width: 245px;">
      <%= primer_octicon(:milestone) %> <%= issue.milestone.title %>
    </span>
  </button>
<% end %>

<% if issue.assignees.any? %>
  <div class="AvatarStack AvatarStack--right <%= avatar_stack_count_class(issue.assignees.length) %> position-absolute bottom-0 right-0 mr-2 mb-2">
    <div class="AvatarStack-body tooltipped tooltipped-nw tooltipped-multiline tooltipped-align-right-1"
         aria-label="Assigned to <%= tooltip %>"><%# erblint:disable GitHub::Accessibility::NoAriaLabelMisuse, Primer::Accessibility::TooltippedMigration %>
      <% issue.assignees.each_with_index do |assignee, index| %>
        <% if issue.assignees.size > 3 && index == 2 %>
          <div class="avatar-more avatar"></div>
        <% end %>

        <%= render Primer::ButtonComponent.new(scheme: :link, classes: "js-card-filter", "aria-label": "Assignee #{ assignee }", "data-card-filter": "assignee:#{ assignee.display_login }") do %>
          <%= avatar_for(assignee, 20, class: "avatar") %>
        <% end %>
      <% end %>
    </div>
  </div>
<% end %>
