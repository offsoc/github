# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::EventPayloadAttachment::V0::Entities::Issue`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::EventPayloadAttachment::V0::Entities::Issue`.

class Hydro::Schemas::Github::EventPayloadAttachment::V0::Entities::Issue
  sig do
    params(
      assignee_id: T.nilable(Google::Protobuf::Int64Value),
      closed_at: T.nilable(Google::Protobuf::Timestamp),
      compressed_body: T.nilable(Google::Protobuf::BytesValue),
      contributed_at_offset: T.nilable(Google::Protobuf::Int32Value),
      contributed_at_timestamp: T.nilable(Google::Protobuf::Int64Value),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      has_pull_request: T.nilable(T::Boolean),
      id: T.nilable(Integer),
      issue_comments_count: T.nilable(Integer),
      issue_state_reason: T.nilable(Google::Protobuf::StringValue),
      issue_type_id: T.nilable(Google::Protobuf::Int64Value),
      locked_at: T.nilable(Google::Protobuf::Timestamp),
      milestone_id: T.nilable(Google::Protobuf::Int64Value),
      number: T.nilable(Integer),
      performed_by_integration_id: T.nilable(Google::Protobuf::Int64Value),
      position: T.nilable(Float),
      pull_request_id: T.nilable(Google::Protobuf::Int64Value),
      repository_id: T.nilable(Integer),
      state: T.nilable(T.any(Symbol, Integer)),
      state_reason: T.nilable(Google::Protobuf::Int32Value),
      title: T.nilable(Google::Protobuf::BytesValue),
      updated_at: T.nilable(Google::Protobuf::Timestamp),
      user_hidden: T.nilable(Integer),
      user_id: T.nilable(Google::Protobuf::Int64Value)
    ).void
  end
  def initialize(assignee_id: nil, closed_at: nil, compressed_body: nil, contributed_at_offset: nil, contributed_at_timestamp: nil, created_at: nil, has_pull_request: nil, id: nil, issue_comments_count: nil, issue_state_reason: nil, issue_type_id: nil, locked_at: nil, milestone_id: nil, number: nil, performed_by_integration_id: nil, position: nil, pull_request_id: nil, repository_id: nil, state: nil, state_reason: nil, title: nil, updated_at: nil, user_hidden: nil, user_id: nil); end

  sig { returns(T.nilable(Google::Protobuf::Int64Value)) }
  def assignee_id; end

  sig { params(value: T.nilable(Google::Protobuf::Int64Value)).void }
  def assignee_id=(value); end

  sig { void }
  def clear_assignee_id; end

  sig { void }
  def clear_closed_at; end

  sig { void }
  def clear_compressed_body; end

  sig { void }
  def clear_contributed_at_offset; end

  sig { void }
  def clear_contributed_at_timestamp; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_has_pull_request; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_issue_comments_count; end

  sig { void }
  def clear_issue_state_reason; end

  sig { void }
  def clear_issue_type_id; end

  sig { void }
  def clear_locked_at; end

  sig { void }
  def clear_milestone_id; end

  sig { void }
  def clear_number; end

  sig { void }
  def clear_performed_by_integration_id; end

  sig { void }
  def clear_position; end

  sig { void }
  def clear_pull_request_id; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_state; end

  sig { void }
  def clear_state_reason; end

  sig { void }
  def clear_title; end

  sig { void }
  def clear_updated_at; end

  sig { void }
  def clear_user_hidden; end

  sig { void }
  def clear_user_id; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def closed_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def closed_at=(value); end

  sig { returns(T.nilable(Google::Protobuf::BytesValue)) }
  def compressed_body; end

  sig { params(value: T.nilable(Google::Protobuf::BytesValue)).void }
  def compressed_body=(value); end

  sig { returns(T.nilable(Google::Protobuf::Int32Value)) }
  def contributed_at_offset; end

  sig { params(value: T.nilable(Google::Protobuf::Int32Value)).void }
  def contributed_at_offset=(value); end

  sig { returns(T.nilable(Google::Protobuf::Int64Value)) }
  def contributed_at_timestamp; end

  sig { params(value: T.nilable(Google::Protobuf::Int64Value)).void }
  def contributed_at_timestamp=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(T::Boolean) }
  def has_pull_request; end

  sig { params(value: T::Boolean).void }
  def has_pull_request=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(Integer) }
  def issue_comments_count; end

  sig { params(value: Integer).void }
  def issue_comments_count=(value); end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def issue_state_reason; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def issue_state_reason=(value); end

  sig { returns(T.nilable(Google::Protobuf::Int64Value)) }
  def issue_type_id; end

  sig { params(value: T.nilable(Google::Protobuf::Int64Value)).void }
  def issue_type_id=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def locked_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def locked_at=(value); end

  sig { returns(T.nilable(Google::Protobuf::Int64Value)) }
  def milestone_id; end

  sig { params(value: T.nilable(Google::Protobuf::Int64Value)).void }
  def milestone_id=(value); end

  sig { returns(Integer) }
  def number; end

  sig { params(value: Integer).void }
  def number=(value); end

  sig { returns(T.nilable(Google::Protobuf::Int64Value)) }
  def performed_by_integration_id; end

  sig { params(value: T.nilable(Google::Protobuf::Int64Value)).void }
  def performed_by_integration_id=(value); end

  sig { returns(Float) }
  def position; end

  sig { params(value: Float).void }
  def position=(value); end

  sig { returns(T.nilable(Google::Protobuf::Int64Value)) }
  def pull_request_id; end

  sig { params(value: T.nilable(Google::Protobuf::Int64Value)).void }
  def pull_request_id=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def state; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def state=(value); end

  sig { returns(T.nilable(Google::Protobuf::Int32Value)) }
  def state_reason; end

  sig { params(value: T.nilable(Google::Protobuf::Int32Value)).void }
  def state_reason=(value); end

  sig { returns(T.nilable(Google::Protobuf::BytesValue)) }
  def title; end

  sig { params(value: T.nilable(Google::Protobuf::BytesValue)).void }
  def title=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end

  sig { returns(Integer) }
  def user_hidden; end

  sig { params(value: Integer).void }
  def user_hidden=(value); end

  sig { returns(T.nilable(Google::Protobuf::Int64Value)) }
  def user_id; end

  sig { params(value: T.nilable(Google::Protobuf::Int64Value)).void }
  def user_id=(value); end
end
