# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Meuse::Services::V1::Messages::ProductRatePlan`.
# Please instead update this file by running `bin/tapioca dsl Meuse::Services::V1::Messages::ProductRatePlan`.

class Meuse::Services::V1::Messages::ProductRatePlan
  sig do
    params(
      azure_meter_id: T.nilable(String),
      currency_code: T.nilable(String),
      effective_on: T.nilable(Meuse::Services::Types::Date),
      feature_flag_override: T.nilable(String),
      id: T.untyped,
      multiplier: T.nilable(Float),
      overage_unit_of_measure: T.nilable(Meuse::Services::V1::Messages::UnitOfMeasure),
      overage_unit_price: T.nilable(Float),
      zuora_product_rate_plan: T.nilable(Meuse::Services::V1::Messages::ProductRatePlan::ZuoraProductRatePlan)
    ).void
  end
  def initialize(azure_meter_id: nil, currency_code: nil, effective_on: nil, feature_flag_override: nil, id: nil, multiplier: nil, overage_unit_of_measure: nil, overage_unit_price: nil, zuora_product_rate_plan: nil); end

  sig { returns(String) }
  def azure_meter_id; end

  sig { params(value: String).void }
  def azure_meter_id=(value); end

  sig { void }
  def clear_azure_meter_id; end

  sig { void }
  def clear_currency_code; end

  sig { void }
  def clear_effective_on; end

  sig { void }
  def clear_feature_flag_override; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_multiplier; end

  sig { void }
  def clear_overage_unit_of_measure; end

  sig { void }
  def clear_overage_unit_price; end

  sig { void }
  def clear_zuora_product_rate_plan; end

  sig { returns(String) }
  def currency_code; end

  sig { params(value: String).void }
  def currency_code=(value); end

  sig { returns(T.nilable(Meuse::Services::Types::Date)) }
  def effective_on; end

  sig { params(value: T.nilable(Meuse::Services::Types::Date)).void }
  def effective_on=(value); end

  sig { returns(String) }
  def feature_flag_override; end

  sig { params(value: String).void }
  def feature_flag_override=(value); end

  sig { returns(T.untyped) }
  def id; end

  sig { params(value: T.untyped).void }
  def id=(value); end

  sig { returns(Float) }
  def multiplier; end

  sig { params(value: Float).void }
  def multiplier=(value); end

  sig { returns(T.nilable(Meuse::Services::V1::Messages::UnitOfMeasure)) }
  def overage_unit_of_measure; end

  sig { params(value: T.nilable(Meuse::Services::V1::Messages::UnitOfMeasure)).void }
  def overage_unit_of_measure=(value); end

  sig { returns(Float) }
  def overage_unit_price; end

  sig { params(value: Float).void }
  def overage_unit_price=(value); end

  sig { returns(T.nilable(Meuse::Services::V1::Messages::ProductRatePlan::ZuoraProductRatePlan)) }
  def zuora_product_rate_plan; end

  sig { params(value: T.nilable(Meuse::Services::V1::Messages::ProductRatePlan::ZuoraProductRatePlan)).void }
  def zuora_product_rate_plan=(value); end
end
