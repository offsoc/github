<%
  show_comment_count = discussion.comment_count.nonzero?
  repo = current_repository || discussion.repository
  participants_avatar_stack_class = avatar_stack_count_class(participants.size)
%>

<div
  class="Box-row Box-row--focus-gray py-3 py-md-2 px-2 px-md-0 mt-0 <%= "border-top-0" if index == 0 %>"
  <%= test_selector("first-discussion-#{discussion.id}") if index == 0 %>
>
  <div class="d-md-flex Box-row--drag-hide position-relative" <%= test_selector("discussion-row") %>>
    <div class="d-flex flex-auto flex-items-baseline">
      <div class="flex-auto min-width-0 lh-condensed p-2 pr-3 pr-md-2">
        <div class="ml-2">
          <div>
            <% unless current_repository %>
              <a href="<%= repository_path(repo) %>"
                class="v-align-middle Link--muted h5 pr-1"
                <%= safe_data_attributes(hovercard_data_attributes_for_repository(repo)) %>>
                <%= repo.name_with_display_owner %>
              </a>
            <% end %>

            <a href="<%= discussion_path(discussion) %>" class="v-align-middle wb-break-word markdown-title" <%= safe_data_attributes(
              hovercard_data_attributes_for_discussion(
                repo.owner.display_login, repo.name, discussion.number
              ).merge(discussions_list_click_attrs(discussion, target: :DISCUSSION_LINK))
            ) %>>
              <%= title_markdown(discussion.title) %>
            </a>
          </div>
          <div class="mt-2 color-fg-muted f6">
            <span aria-hidden="false"><%= discussion_category_emoji_tag(discussion.category) %></span>
            <%= render Primer::Beta::Text.new(tag: :span).with_content(discussion.category.name)  %>
          </div>
          <% if logged_in? && discussion.spammy? && current_user.site_admin? %>
            <div class="mt-2 color-fg-muted f6">
              <%= render(Primer::Beta::Octicon.new(:alert,
                color: :danger,
                test_selector: "spammy-indicator-#{discussion.id}"
              )) %>
              <%= render Primer::Beta::Text.new(tag: :span).with_content("This discussion is marked as spammy. It will only show in staff mode.") %>
            </div>
          <% end %>
        </div>
      </div>
    </div>
    <div class="mr-sm-3 d-flex flex-shrink-0 flex-items-center">
      <div class="flex-shrink-0 pl-2 pl-md-3 pr-md-2">
        <div style="width: 15px" class="d-none d-md-none"></div>
      </div>
      <div class="d-flex flex-justify-end mr-1 mr-md-0">
        <div class="d-none d-md-block AvatarStack AvatarStack--right <%= participants_avatar_stack_class %>">
          <%= avatar_stack_contents = capture do %>
            <div class="AvatarStack-body" <%= test_selector("participants") %>>
              <% participants.first(DiscussionsHelper::DISCUSSION_MAX_DISPLAYED_AVATARS).each do |participant| %>
                <%= profile_link(participant, :class => avatar_class_names(participant), "aria-label" => "#{participant}â€™s profile", :hydro_data => discussions_list_click_attrs(discussion, target: :USER_PROFILE_LINK)) do %>
                  <%= avatar_for(participant, 20, class: "from-avatar") %>
                <% end %>
              <% end %>
            </div>
          <% end %>
        </div>
        <div class="d-md-none AvatarStack <%= participants_avatar_stack_class %>">
          <%= avatar_stack_contents %>
        </div>
      </div>
      <a style="width: 2.5em" href="<%= discussion_path(discussion) %>" class="ml-md-3 Link--muted d-block" <%=
        safe_discussions_list_click_attrs(discussion, target: :DISCUSSION_LINK)
      %>>
        <%= render Primer::Beta::RelativeTime.new(datetime: discussion.bumped_at, format: :micro, tense: :past) %>
      </a>
      <div style="width: 2.8em" class="no-wrap ml-2">
        <% if show_comment_count %>
          <a href="<%= discussion_path(discussion) %>" class="Link--muted" aria-label="<%= pluralize(discussion.comment_count, "comment") %>" <%=
            safe_discussions_list_click_attrs(discussion, target: :DISCUSSION_LINK)
          %>>
            <%= primer_octicon(:comment, mr: 1) %><%= social_count discussion.comment_count %>
          </a>
        <% end %>
      </div>

      <div style="width: 2em" class="ml-2">
        <% if discussion.answered? && discussion.supports_mark_as_answer? %>
          <%= render(Primer::Beta::Octicon.new(icon: "check-circle-fill", color: :success, test_selector: "discussion-answered-icon-#{discussion.id}")) %>
        <% end %>
      </div>
    </div>
  </div>
</div>
