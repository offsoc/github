syntax = "proto3";

package enumerator;

option go_package = "github.com/github/authzd/pkg/enumerator";
option ruby_package = "Authzd::Enumerator";

// Enumerator
service Enumerator {
  // ByActor returns all of the subjects for an actor.
  rpc ForActor(ForActorRequest) returns (ForActorResponse);
  // BySubject returns all of the actors for a subject.
  rpc ForSubject(ForSubjectRequest) returns (ForSubjectResponse);
}

message ForActorRequest {
  // actor_id the id of the actor.
  int64 actor_id = 1;

  // actor_type is the type of actor.
  // It should match the ActiveRecord::Model name
  string actor_type = 2;

  // subject_type is the type of subject.
  // It should match the ActiveRecord::Model name
  string subject_type = 3;

  Options options = 4;
}

message ForSubjectRequest {
  // subject_id the id of the subject.
  int64 subject_id = 1;

  // subject_type is the type of subject.
  // It should match the ActiveRecord::Model name
  string subject_type = 2;

  // actor_type is the type of actor.
  // It should match the ActiveRecord::Model name
  string actor_type = 3;

  Options options = 4;
}

message ForActorResponse {
  // result_ids is the list of subject ids
  repeated int64 result_ids = 1;
}

message ForSubjectResponse {
  // result_ids is the list of actor ids
  repeated int64 result_ids = 1;
}

message Options {
  // set the *minimum* relationship that you would like to be considered.
  // Valid values include:
  //    - read: (default) subjects that the actor can read.
  //            For repositories, this includes repos which the actor can view
  //    - write: subjects that the actor can write
  //    - admin: subjects that the actor can admin
  string relationship = 1;

  // the set of entities to consider when fetching subjects.
  // This option is only used by subject enumeration (ByActor).
  // Valid values include:
  //    - all: (default) return all of the actors subjects
  //    - business: return all of the actors Business owned subjects
  //    - organization: return all of the actors Organization owned subjects
  string scope = 2;

  // when the scope is not all, the subjects returned will be restricted to belonging to this
  // particular target
  int64 scope_target_id = 3;
}
