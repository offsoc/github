{"version":3,"file":"chunk-app_components_security_center_coverage_enablement_multi-repo-enablement-setting-element_ts-xxxxxxxxxxxx.js","mappings":"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","sources":["app/components/security_center/coverage/enablement/setting-selection-change-event.ts","app/components/security_center/coverage/enablement/multi-repo-enablement-setting-element.ts"],"sourcesContent":["export default class SettingSelectionChangeEvent extends Event {\n  constructor() {\n    super('setting-selection-change', {bubbles: true})\n  }\n}\n","import {controller, target, targets} from '@github/catalyst'\nimport SettingSelectionChangeEvent from './setting-selection-change-event'\n\nconst DISABLED_OPACITY = 0.6\n\n@controller\nexport default class MultiRepoEnablementSettingElement extends HTMLElement {\n  @target settingSelection: HTMLSelectElement\n  @target settingText: HTMLElement\n  @target auxBox: HTMLElement\n  @target disclosureHeader: HTMLElement\n  @target disclosureHeaderText: HTMLElement\n  @target disclosureIcon: HTMLElement\n  @target disclosureContent: HTMLElement\n  @target disclosureValue: HTMLInputElement\n  @targets disclosureInputs: HTMLInputElement[]\n\n  // Normally, `@targets` is used to target descendants.\n  // However, `@targets` doesn't work when targeting descendants of the same type as this class\n  // (reason: `closest` matches itself in this case - https://github.com/github/catalyst/blob/dc284dcf4f82329a9cac5c867462a8fa529b6c40/src/findtarget.ts).\n  //\n  // Since `childrenSettings` are other instances of this class, we can instead use a custom getter.\n  get childrenSettings(): MultiRepoEnablementSettingElement[] {\n    const tag = this.tagName.toLowerCase()\n    const children: MultiRepoEnablementSettingElement[] = []\n\n    for (const child of this.querySelectorAll<MultiRepoEnablementSettingElement>(\n      `[data-targets~=\"${tag}.childrenSettings\"]`,\n    )) {\n      if (child.parentElement === null) continue\n      if (child.parentElement.closest(tag) === this) children.push(child)\n    }\n\n    return children\n  }\n\n  disable(): void {\n    this.settingText.setAttribute('style', `opacity: ${DISABLED_OPACITY};`)\n    this.settingSelection.disabled = true\n    this.settingSelection.value = '-1'\n    this.handleSelectionChange()\n\n    for (const childSetting of this.childrenSettings) {\n      childSetting.disable()\n    }\n  }\n\n  enable(): void {\n    this.settingText.setAttribute('style', '')\n    this.settingSelection.disabled = false\n\n    for (const childSetting of this.childrenSettings) {\n      childSetting.enable()\n    }\n  }\n\n  handleSelectionChange(): void {\n    const selectedValue = parseInt(this.settingSelection.value, 10)\n\n    for (const childSetting of this.childrenSettings) {\n      if (selectedValue === 0) {\n        childSetting.disable()\n      } else {\n        childSetting.enable()\n      }\n    }\n\n    if (this.auxBox) {\n      if (selectedValue === 1) {\n        this.auxBox.setAttribute('style', 'display: block;')\n        this.handleDisclosureInputChange()\n      } else {\n        this.auxBox.setAttribute('style', 'display: none;')\n        this.disclosureValue.removeAttribute('value')\n      }\n    }\n\n    this.dispatchEvent(new SettingSelectionChangeEvent())\n  }\n\n  toggleDisclosure(): void {\n    if (!this.disclosureContent) return\n\n    const expanded = this.disclosureContent.getAttribute('style') !== 'display: none;'\n    if (!expanded) {\n      this.disclosureHeader.setAttribute('aria-expanded', 'true')\n      this.disclosureContent.setAttribute('style', 'display: block;')\n      this.disclosureIcon.style.transform = 'scaleY(-1)'\n    } else {\n      this.disclosureHeader.setAttribute('aria-expanded', 'false')\n      this.disclosureContent.setAttribute('style', 'display: none;')\n      this.disclosureIcon.style.transform = ''\n    }\n  }\n\n  handleDisclosureInputChange(): void {\n    if (this.disclosureValue && this.disclosureInputs.length > 0) {\n      const selectedInput = this.disclosureInputs.find(input => input.checked)\n      const value = selectedInput?.value\n      this.updateDisclosureText(selectedInput)\n      if (value != null) {\n        this.disclosureValue.setAttribute('value', value)\n      } else {\n        this.disclosureValue.removeAttribute('value')\n      }\n    }\n  }\n\n  updateDisclosureText(selectedInput: HTMLInputElement | null | undefined): void {\n    if (this.disclosureHeaderText && selectedInput) {\n      const textContent = document.querySelector(`label[for=${selectedInput.id}`)?.textContent\n      this.disclosureHeaderText.textContent = textContent?.replace(' Recommended', '') || ''\n    }\n  }\n}\n"],"names":["SettingSelectionChangeEvent","Event","constructor","bubbles","MultiRepoEnablementSettingElement","HTMLElement","childrenSettings","tag","tagName","toLowerCase","children","child","querySelectorAll","parentElement","closest","push","disable","childSetting","settingText","setAttribute","settingSelection","disabled","value","handleSelectionChange","enable","selectedValue","parseInt","auxBox","handleDisclosureInputChange","disclosureValue","removeAttribute","dispatchEvent","toggleDisclosure","disclosureContent","getAttribute","disclosureHeader","disclosureIcon","style","transform","disclosureInputs","length","selectedInput","find","input","checked","updateDisclosureText","disclosureHeaderText","textContent","document","querySelector","id","replace","target","targets","controller"],"sourceRoot":""}