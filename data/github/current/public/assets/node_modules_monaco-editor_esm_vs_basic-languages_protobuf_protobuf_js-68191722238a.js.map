{"version":3,"file":"chunk-node_modules_monaco-editor_esm_vs_basic-languages_protobuf_protobuf_js-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/monaco-editor/esm/vs/basic-languages/protobuf/protobuf.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.49.0(383fdf3fc0e1e1a024068b8d0fd4f3dcbae74d04)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/protobuf/protobuf.ts\nvar namedLiterals = [\"true\", \"false\"];\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"],\n    [\"<\", \">\"]\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"<\", close: \">\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"<\", close: \">\" },\n    { open: '\"', close: '\"', notIn: [\"string\"] },\n    { open: \"'\", close: \"'\", notIn: [\"string\"] }\n  ],\n  autoCloseBefore: \".,=}])>' \\n\t\",\n  indentationRules: {\n    increaseIndentPattern: new RegExp(\"^((?!\\\\/\\\\/).)*(\\\\{[^}\\\"'`]*|\\\\([^)\\\"'`]*|\\\\[[^\\\\]\\\"'`]*)$\"),\n    decreaseIndentPattern: new RegExp(\"^((?!.*?\\\\/\\\\*).*\\\\*/)?\\\\s*[\\\\}\\\\]].*$\")\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".proto\",\n  brackets: [\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"<\", close: \">\", token: \"delimiter.angle\" }\n  ],\n  symbols: /[=><!~?:&|+\\-*/^%]+/,\n  keywords: [\n    \"syntax\",\n    \"import\",\n    \"weak\",\n    \"public\",\n    \"package\",\n    \"option\",\n    \"repeated\",\n    \"oneof\",\n    \"map\",\n    \"reserved\",\n    \"to\",\n    \"max\",\n    \"enum\",\n    \"message\",\n    \"service\",\n    \"rpc\",\n    \"stream\",\n    \"returns\",\n    \"package\",\n    \"optional\",\n    \"true\",\n    \"false\"\n  ],\n  builtinTypes: [\n    \"double\",\n    \"float\",\n    \"int32\",\n    \"int64\",\n    \"uint32\",\n    \"uint64\",\n    \"sint32\",\n    \"sint64\",\n    \"fixed32\",\n    \"fixed64\",\n    \"sfixed32\",\n    \"sfixed64\",\n    \"bool\",\n    \"string\",\n    \"bytes\"\n  ],\n  operators: [\"=\", \"+\", \"-\"],\n  namedLiterals,\n  escapes: `\\\\\\\\(u{[0-9A-Fa-f]+}|n|r|t|\\\\\\\\|'|\\\\\\${)`,\n  identifier: /[a-zA-Z]\\w*/,\n  fullIdentifier: /@identifier(?:\\s*\\.\\s*@identifier)*/,\n  optionName: /(?:@identifier|\\(\\s*@fullIdentifier\\s*\\))(?:\\s*\\.\\s*@identifier)*/,\n  messageName: /@identifier/,\n  enumName: /@identifier/,\n  messageType: /\\.?\\s*(?:@identifier\\s*\\.\\s*)*@messageName/,\n  enumType: /\\.?\\s*(?:@identifier\\s*\\.\\s*)*@enumName/,\n  floatLit: /[0-9]+\\s*\\.\\s*[0-9]*(?:@exponent)?|[0-9]+@exponent|\\.[0-9]+(?:@exponent)?/,\n  exponent: /[eE]\\s*[+-]?\\s*[0-9]+/,\n  boolLit: /true\\b|false\\b/,\n  decimalLit: /[1-9][0-9]*/,\n  octalLit: /0[0-7]*/,\n  hexLit: /0[xX][0-9a-fA-F]+/,\n  type: /double|float|int32|int64|uint32|uint64|sint32|sint64|fixed32|fixed64|sfixed32|sfixed64|bool|string|bytes|@messageType|@enumType/,\n  keyType: /int32|int64|uint32|uint64|sint32|sint64|fixed32|fixed64|sfixed32|sfixed64|bool|string/,\n  tokenizer: {\n    root: [\n      { include: \"@whitespace\" },\n      [/syntax/, \"keyword\"],\n      [/=/, \"operators\"],\n      [/;/, \"delimiter\"],\n      [\n        /(\")(proto3)(\")/,\n        [\"string.quote\", \"string\", { token: \"string.quote\", switchTo: \"@topLevel.proto3\" }]\n      ],\n      [\n        /(\")(proto2)(\")/,\n        [\"string.quote\", \"string\", { token: \"string.quote\", switchTo: \"@topLevel.proto2\" }]\n      ],\n      [\n        // If no `syntax` provided, regarded as proto2\n        /.*?/,\n        { token: \"\", switchTo: \"@topLevel.proto2\" }\n      ]\n    ],\n    topLevel: [\n      // whitespace\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/=/, \"operators\"],\n      [/[;.]/, \"delimiter\"],\n      [\n        /@fullIdentifier/,\n        {\n          cases: {\n            option: { token: \"keyword\", next: \"@option.$S2\" },\n            enum: { token: \"keyword\", next: \"@enumDecl.$S2\" },\n            message: { token: \"keyword\", next: \"@messageDecl.$S2\" },\n            service: { token: \"keyword\", next: \"@serviceDecl.$S2\" },\n            extend: {\n              cases: {\n                \"$S2==proto2\": { token: \"keyword\", next: \"@extendDecl.$S2\" }\n              }\n            },\n            \"@keywords\": \"keyword\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ]\n    ],\n    enumDecl: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"type.identifier\"],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@enumBody.$S2\" }]\n    ],\n    enumBody: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/=/, \"operators\"],\n      [/;/, \"delimiter\"],\n      [/option\\b/, \"keyword\", \"@option.$S2\"],\n      [/@identifier/, \"identifier\"],\n      [/\\[/, { token: \"@brackets\", bracket: \"@open\", next: \"@options.$S2\" }],\n      [/}/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    messageDecl: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"type.identifier\"],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@messageBody.$S2\" }]\n    ],\n    messageBody: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/=/, \"operators\"],\n      [/;/, \"delimiter\"],\n      [\n        \"(map)(s*)(<)\",\n        [\"keyword\", \"white\", { token: \"@brackets\", bracket: \"@open\", next: \"@map.$S2\" }]\n      ],\n      [\n        /@identifier/,\n        {\n          cases: {\n            option: { token: \"keyword\", next: \"@option.$S2\" },\n            enum: { token: \"keyword\", next: \"@enumDecl.$S2\" },\n            message: { token: \"keyword\", next: \"@messageDecl.$S2\" },\n            oneof: { token: \"keyword\", next: \"@oneofDecl.$S2\" },\n            extensions: {\n              cases: {\n                \"$S2==proto2\": { token: \"keyword\", next: \"@reserved.$S2\" }\n              }\n            },\n            reserved: { token: \"keyword\", next: \"@reserved.$S2\" },\n            \"(?:repeated|optional)\": { token: \"keyword\", next: \"@field.$S2\" },\n            required: {\n              cases: {\n                \"$S2==proto2\": { token: \"keyword\", next: \"@field.$S2\" }\n              }\n            },\n            \"$S2==proto3\": { token: \"@rematch\", next: \"@field.$S2\" }\n          }\n        }\n      ],\n      [/\\[/, { token: \"@brackets\", bracket: \"@open\", next: \"@options.$S2\" }],\n      [/}/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    extendDecl: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"type.identifier\"],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@extendBody.$S2\" }]\n    ],\n    extendBody: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/;/, \"delimiter\"],\n      [/(?:repeated|optional|required)/, \"keyword\", \"@field.$S2\"],\n      [/\\[/, { token: \"@brackets\", bracket: \"@open\", next: \"@options.$S2\" }],\n      [/}/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    options: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/;/, \"delimiter\"],\n      [/@optionName/, \"annotation\"],\n      [/[()]/, \"annotation.brackets\"],\n      [/=/, \"operator\"],\n      [/\\]/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    option: [\n      { include: \"@whitespace\" },\n      [/@optionName/, \"annotation\"],\n      [/[()]/, \"annotation.brackets\"],\n      [/=/, \"operator\", \"@pop\"]\n    ],\n    oneofDecl: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"identifier\"],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@oneofBody.$S2\" }]\n    ],\n    oneofBody: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/;/, \"delimiter\"],\n      [/(@identifier)(\\s*)(=)/, [\"identifier\", \"white\", \"delimiter\"]],\n      [\n        /@fullIdentifier|\\./,\n        {\n          cases: {\n            \"@builtinTypes\": \"keyword\",\n            \"@default\": \"type.identifier\"\n          }\n        }\n      ],\n      [/\\[/, { token: \"@brackets\", bracket: \"@open\", next: \"@options.$S2\" }],\n      [/}/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    reserved: [\n      { include: \"@whitespace\" },\n      [/,/, \"delimiter\"],\n      [/;/, \"delimiter\", \"@pop\"],\n      { include: \"@constant\" },\n      [/to\\b|max\\b/, \"keyword\"]\n    ],\n    map: [\n      { include: \"@whitespace\" },\n      [\n        /@fullIdentifier|\\./,\n        {\n          cases: {\n            \"@builtinTypes\": \"keyword\",\n            \"@default\": \"type.identifier\"\n          }\n        }\n      ],\n      [/,/, \"delimiter\"],\n      [/>/, { token: \"@brackets\", bracket: \"@close\", switchTo: \"identifier\" }]\n    ],\n    field: [\n      { include: \"@whitespace\" },\n      [\n        \"group\",\n        {\n          cases: {\n            \"$S2==proto2\": { token: \"keyword\", switchTo: \"@groupDecl.$S2\" }\n          }\n        }\n      ],\n      [/(@identifier)(\\s*)(=)/, [\"identifier\", \"white\", { token: \"delimiter\", next: \"@pop\" }]],\n      [\n        /@fullIdentifier|\\./,\n        {\n          cases: {\n            \"@builtinTypes\": \"keyword\",\n            \"@default\": \"type.identifier\"\n          }\n        }\n      ]\n    ],\n    groupDecl: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"identifier\"],\n      [\"=\", \"operator\"],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@messageBody.$S2\" }],\n      { include: \"@constant\" }\n    ],\n    type: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"type.identifier\", \"@pop\"],\n      [/./, \"delimiter\"]\n    ],\n    identifier: [{ include: \"@whitespace\" }, [/@identifier/, \"identifier\", \"@pop\"]],\n    serviceDecl: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"identifier\"],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@serviceBody.$S2\" }]\n    ],\n    serviceBody: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/;/, \"delimiter\"],\n      [/option\\b/, \"keyword\", \"@option.$S2\"],\n      [/rpc\\b/, \"keyword\", \"@rpc.$S2\"],\n      [/\\[/, { token: \"@brackets\", bracket: \"@open\", next: \"@options.$S2\" }],\n      [/}/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    rpc: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"identifier\"],\n      [/\\(/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@request.$S2\" }],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", next: \"@methodOptions.$S2\" }],\n      [/;/, \"delimiter\", \"@pop\"]\n    ],\n    request: [\n      { include: \"@whitespace\" },\n      [\n        /@messageType/,\n        {\n          cases: {\n            stream: { token: \"keyword\", next: \"@type.$S2\" },\n            \"@default\": \"type.identifier\"\n          }\n        }\n      ],\n      [/\\)/, { token: \"@brackets\", bracket: \"@close\", switchTo: \"@returns.$S2\" }]\n    ],\n    returns: [\n      { include: \"@whitespace\" },\n      [/returns\\b/, \"keyword\"],\n      [/\\(/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@response.$S2\" }]\n    ],\n    response: [\n      { include: \"@whitespace\" },\n      [\n        /@messageType/,\n        {\n          cases: {\n            stream: { token: \"keyword\", next: \"@type.$S2\" },\n            \"@default\": \"type.identifier\"\n          }\n        }\n      ],\n      [/\\)/, { token: \"@brackets\", bracket: \"@close\", switchTo: \"@rpc.$S2\" }]\n    ],\n    methodOptions: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/;/, \"delimiter\"],\n      [\"option\", \"keyword\"],\n      [/@optionName/, \"annotation\"],\n      [/[()]/, \"annotation.brackets\"],\n      [/=/, \"operator\"],\n      [/}/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    comment: [\n      [/[^\\/*]+/, \"comment\"],\n      [/\\/\\*/, \"comment\", \"@push\"],\n      // nested comment\n      [\"\\\\*/\", \"comment\", \"@pop\"],\n      [/[\\/*]/, \"comment\"]\n    ],\n    string: [\n      [/[^\\\\\"]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    stringSingle: [\n      [/[^\\\\']+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/'/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    constant: [\n      [\"@boolLit\", \"keyword.constant\"],\n      [\"@hexLit\", \"number.hex\"],\n      [\"@octalLit\", \"number.octal\"],\n      [\"@decimalLit\", \"number\"],\n      [\"@floatLit\", \"number.float\"],\n      [/(\"([^\"\\\\]|\\\\.)*|'([^'\\\\]|\\\\.)*)$/, \"string.invalid\"],\n      // non-terminated string\n      [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string\" }],\n      [/'/, { token: \"string.quote\", bracket: \"@open\", next: \"@stringSingle\" }],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", next: \"@prototext\" }],\n      [/identifier/, \"identifier\"]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"white\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/\\/\\/.*$/, \"comment\"]\n    ],\n    prototext: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/@identifier/, \"identifier\"],\n      [/[:;]/, \"delimiter\"],\n      [/}/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["conf","comments","lineComment","blockComment","brackets","surroundingPairs","open","close","autoClosingPairs","notIn","autoCloseBefore","indentationRules","increaseIndentPattern","decreaseIndentPattern","language","defaultToken","tokenPostfix","token","symbols","keywords","builtinTypes","operators","namedLiterals","escapes","identifier","fullIdentifier","optionName","messageName","enumName","messageType","enumType","floatLit","exponent","boolLit","decimalLit","octalLit","hexLit","type","keyType","tokenizer","root","include","switchTo","topLevel","cases","option","next","enum","message","service","extend","enumDecl","bracket","enumBody","messageDecl","messageBody","oneof","extensions","reserved","required","extendDecl","extendBody","options","oneofDecl","oneofBody","map","field","groupDecl","serviceDecl","serviceBody","rpc","request","stream","returns","response","methodOptions","comment","string","stringSingle","constant","whitespace","prototext"],"sourceRoot":""}