# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Webhooksubscriptions::Subscriptions::V1::Webhook`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Webhooksubscriptions::Subscriptions::V1::Webhook`.

class MonolithTwirp::Webhooksubscriptions::Subscriptions::V1::Webhook
  sig do
    params(
      callback_url: T.nilable(String),
      configuration: T.nilable(MonolithTwirp::Webhooksubscriptions::Subscriptions::V1::Configuration),
      id: T.nilable(Integer),
      installation: T.nilable(MonolithTwirp::Webhooksubscriptions::Subscriptions::V1::Installation),
      needs_public_key_signature: T.nilable(T::Boolean),
      service: T.nilable(String)
    ).void
  end
  def initialize(callback_url: nil, configuration: nil, id: nil, installation: nil, needs_public_key_signature: nil, service: nil); end

  sig { returns(String) }
  def callback_url; end

  sig { params(value: String).void }
  def callback_url=(value); end

  sig { void }
  def clear_callback_url; end

  sig { void }
  def clear_configuration; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_installation; end

  sig { void }
  def clear_needs_public_key_signature; end

  sig { void }
  def clear_service; end

  sig { returns(T.nilable(MonolithTwirp::Webhooksubscriptions::Subscriptions::V1::Configuration)) }
  def configuration; end

  sig { params(value: T.nilable(MonolithTwirp::Webhooksubscriptions::Subscriptions::V1::Configuration)).void }
  def configuration=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(T.nilable(MonolithTwirp::Webhooksubscriptions::Subscriptions::V1::Installation)) }
  def installation; end

  sig { params(value: T.nilable(MonolithTwirp::Webhooksubscriptions::Subscriptions::V1::Installation)).void }
  def installation=(value); end

  sig { returns(T::Boolean) }
  def needs_public_key_signature; end

  sig { params(value: T::Boolean).void }
  def needs_public_key_signature=(value); end

  sig { returns(String) }
  def service; end

  sig { params(value: String).void }
  def service=(value); end
end
