<%
  file_link = ::File.join("/", hit.repo_name, "blob/", hit.commit_sha, escape_url_branch(hit.path))
  repo_specific ||= false
  private_public_class = hit.public || repo_specific ? "code-list-item-public" : "code-list-item-private"
  match_count = hit.number_of_matches
  plural_match_string = match_count > 1 ? "#{number_to_words(match_count)} matches" : 'match'

  click_data = {
    page_number: page_number,
    per_page: per_page,
    result_position: hit_position,
    hit_object: hit.repo,
    hit_url: "#{base_url}#{file_link}"
  }
%>

<div <%= test_selector("results-code") %>
  class="hx_hit-code code-list-item d-flex py-4 <%= private_public_class %> <%= 'repo-specific' if repo_specific %>">
  <% unless repo_specific %>
    <%= avatar_for hit.repo_owner, 20, class: "rounded-2 v-align-middle flex-shrink-0 mr-1" %>
  <% end %>

  <div class="width-full">
    <% unless repo_specific %>
      <div class="flex-shrink-0 text-small text-bold">
        <%= link_to "/#{hit.repo_name}", class: "Link--secondary" do %>
          <%= hit.repo_name %>
        <% end %>
      </div>
    <% end %>

    <div class="f4 text-normal">
      <%= link_to_with_hydro_search_tracking hit.hl_path, file_link, click_data, title: hit.path %>
    </div>

    <% if hit.has_file_highlights? %>
      <div class="file-box blob-wrapper my-1">
        <table class="highlight">
          <%= render :partial => "codesearch/hit_code_fragment", :collection => hit.highlights, :as => :highlight, :spacer_template => "codesearch/hit_code_fragment_divider", :locals => { :file_link => file_link } %>
        </table>
      </div>
    <% elsif hit.has_path_highlights? %>
      <p class="full-path">
        <% if hit.public %>
          <%= render(Primer::Beta::Octicon.new(icon: "repo")) %>
        <% else %>
          <%= primer_octicon(:lock) %>
        <% end %>
        <%= link_to hit.hl_path, file_link %>
      </p>
    <% end %>

    <div class="d-flex flex-wrap text-small color-fg-muted">
      <% if hit.language %>
         <div class="mr-3">
           <%= render(Languages::BadgeComponent.new(name: hit.language)) %>
         </div>
      <% end %>

      <% if match_count > 0 %>
        <span class="match-count mr-3">
          Showing the top <%= plural_match_string %>
        </span>
      <% end %>

      <span class="updated-at mr-3">
        Last indexed <%= time_ago_in_words_js hit.timestamp %>
      </span>
    </div>

    <% if staff_bar_enabled? && site_admin_performance_stats_mode_enabled? && hit.explain %>
      <%= render partial: "codesearch/hit_explain", locals: { node: hit.explain } %>
    <% end %>
  </div>
</div>
