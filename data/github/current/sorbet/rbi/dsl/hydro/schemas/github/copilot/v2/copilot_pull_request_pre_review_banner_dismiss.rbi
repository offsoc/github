# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Copilot::V2::CopilotPullRequestPreReviewBannerDismiss`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Copilot::V2::CopilotPullRequestPreReviewBannerDismiss`.

class Hydro::Schemas::Github::Copilot::V2::CopilotPullRequestPreReviewBannerDismiss
  sig do
    params(
      analytics_tracking_id: T.nilable(String),
      dismiss_button: T.nilable(T.any(Symbol, Integer)),
      error: T.nilable(T::Boolean),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)
    ).void
  end
  def initialize(analytics_tracking_id: nil, dismiss_button: nil, error: nil, request_context: nil); end

  sig { returns(String) }
  def analytics_tracking_id; end

  sig { params(value: String).void }
  def analytics_tracking_id=(value); end

  sig { void }
  def clear_analytics_tracking_id; end

  sig { void }
  def clear_dismiss_button; end

  sig { void }
  def clear_error; end

  sig { void }
  def clear_request_context; end

  sig { returns(T.any(Symbol, Integer)) }
  def dismiss_button; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def dismiss_button=(value); end

  sig { returns(T::Boolean) }
  def error; end

  sig { params(value: T::Boolean).void }
  def error=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end
end
