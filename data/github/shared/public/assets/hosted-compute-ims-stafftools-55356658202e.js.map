{"version":3,"file":"hosted-compute-ims-stafftools-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/hosted-compute-ims-stafftools/App.tsx","ui/packages/hosted-compute-ims-stafftools/utils/style.ts","ui/packages/hosted-compute-ims-stafftools/constants/constants.ts","ui/packages/hosted-compute-ims-stafftools/components/ImsBlankstate.tsx","ui/packages/hosted-compute-ims-stafftools/components/CuratedImagesPointerTable.tsx","ui/packages/hosted-compute-ims-stafftools/components/CuratedImagesTable.tsx","ui/packages/hosted-compute-ims-stafftools/components/CuratedImagesPage.tsx","ui/packages/hosted-compute-ims-stafftools/routes/stafftools/Main.tsx","ui/packages/hosted-compute-ims-stafftools/routes/stafftools/NewCuratedImage.tsx","ui/packages/hosted-compute-ims-stafftools/routes/stafftools/NewCuratedPointer.tsx","ui/packages/hosted-compute-ims-stafftools/components/StateDetailsDialog.tsx","ui/packages/hosted-compute-ims-stafftools/components/CuratedImageVersionsTable.tsx","ui/packages/hosted-compute-ims-stafftools/routes/stafftools/ListImageVersions.tsx","ui/packages/hosted-compute-ims-stafftools/hosted-compute-ims-stafftools.ts","ui/packages/is-hash-navigation/is-hash-navigation.ts","ui/packages/use-navigate/use-navigate.ts","ui/packages/react-core/JsonRoute.tsx"],"sourcesContent":["import type React from 'react'\n\n/**\n * The App component is used to render content which should be present on _all_ routes within this app\n */\nexport function App(props: {children?: React.ReactNode}) {\n  return <>{props.children}</>\n}\n\ntry{ App.displayName ||= 'App' } catch {}","// Fonts\nexport const Fonts = {\n  PageHeadingFontSize: 4,\n}\n\n// Spacing\nexport const Spacing = {\n  StandardPadding: 3,\n}\n\nexport const pageHeadingStyle = {\n  display: 'flex',\n  font: 'var(--text-subtitle-shorthand)',\n  fontSize: Fonts.PageHeadingFontSize,\n}\n\nexport const dialogBoxStyle = {\n  p: Spacing.StandardPadding,\n}\n\nexport const blankslateStyle = {\n  border: '1px solid var(--borderColor-default, var(--color-border-default))',\n  borderRadius: '6px',\n}\n\nexport const tableGapStyle = {\n  mt: Spacing.StandardPadding,\n  display: 'flex',\n  flexDirection: 'column',\n  gap: Spacing.StandardPadding,\n}\n\nexport const breadcrumbLink = {\n  cursor: 'pointer',\n}\n","export const Constants = {\n  stafftoolPageTitle: 'Hosted Compute Image Management',\n  blankslateTitle: 'Welcome to IMS Stafftools',\n  blankslateDescription: 'Coming soon!',\n  pointerBlankslateTitle: 'Pointer table is empty!',\n  curatedImagesPointerTableBlankslateTitle: 'Curated image table is empty!',\n  imsRepoLink: 'https://github.com/github/hosted-compute-ims',\n  editPointer: 'Edit pointer',\n  deletePointer: 'Delete pointer',\n  pointerTableSubtitle: 'Pointers table will show the latest pointer and where it pointing to.',\n  pointerTableTitle: 'Pointers',\n  createPointer: 'Create pointer',\n  curatedImagesTableTitle: 'Curated Images',\n  newCuratedImages: 'New image',\n  createCuratedImages: 'Create image',\n  curatedImageTableSubtitle:\n    'Curated images table will show the curated image definitions and its corresponding image versions.',\n  viewImageVersions: 'View image versions',\n  editCuratedImages: 'Edit image',\n  deleteCuratedImages: 'Delete image',\n  imageVersionsUrl: (path: string, imageDefinitionId: string) => `${path}/curated/${imageDefinitionId}`,\n  stateDetails: 'View State Details',\n}\n","import {Blankslate} from '@primer/react/experimental'\nimport {Box} from '@primer/react'\nimport {Constants} from '../constants/constants'\nimport {blankslateStyle} from '../utils/style'\n\ninterface IImsBlankslateProps {\n  title: string\n  description: string\n  primaryAction?: string | null\n}\nexport function ImsBlankslate(props: IImsBlankslateProps) {\n  return (\n    <Box className=\"border rounded-2\" sx={blankslateStyle}>\n      <Blankslate>\n        <Blankslate.Heading>{props.title}</Blankslate.Heading>\n        <Blankslate.Description>{props.description}</Blankslate.Description>\n        {props.primaryAction && <Blankslate.PrimaryAction href=\"#\">{props.primaryAction}</Blankslate.PrimaryAction>}\n        <Blankslate.SecondaryAction href={Constants.imsRepoLink}>Learn more about IMS</Blankslate.SecondaryAction>\n      </Blankslate>\n    </Box>\n  )\n}\n\ntry{ ImsBlankslate.displayName ||= 'ImsBlankslate' } catch {}","import {DataTable, Table} from '@primer/react/experimental'\nimport type {ImageDefinition} from '../types'\nimport {CheckCircleIcon, KebabHorizontalIcon, XCircleIcon} from '@primer/octicons-react'\nimport VisuallyHidden from '@primer/react/lib-esm/_VisuallyHidden'\nimport {ActionList, ActionMenu, Box, Button, IconButton} from '@primer/react'\nimport {Constants} from '../constants/constants'\nimport {useNavigate} from '@github-ui/use-navigate'\n\ninterface ICuratedImagesPointerTableProps {\n  pointers: ImageDefinition[]\n  newCuratedPointerPath: string\n}\n\nexport function CuratedImagesPointerTable(props: ICuratedImagesPointerTableProps) {\n  const navigate = useNavigate()\n  return (\n    <Box sx={{pt: 2}}>\n      <Table.Container>\n        <Table.Title as=\"h2\" id=\"pointers\">\n          {Constants.pointerTableTitle}\n        </Table.Title>\n        <Table.Actions>\n          <Button onClick={() => navigate(props.newCuratedPointerPath)}>{Constants.createPointer}</Button>\n        </Table.Actions>\n        <DataTable\n          aria-labelledby=\"pointers\"\n          aria-describedby=\"pointers-subtitle\"\n          data={props.pointers}\n          columns={[\n            {\n              header: 'Id',\n              field: 'id',\n              rowHeader: true,\n            },\n            {\n              header: 'Name',\n              field: 'name',\n            },\n            {\n              header: 'Architecture',\n              field: 'architecture',\n            },\n            {\n              header: 'OsType',\n              field: 'osType',\n            },\n            {\n              header: 'Enabled',\n              field: 'enabled',\n              renderCell: row => {\n                return row.enabled ? <CheckCircleIcon size={16} /> : <XCircleIcon size={16} />\n              },\n            },\n            {\n              header: 'Points To',\n              field: 'pointsToImageDefinitionId',\n            },\n            {\n              id: 'actions',\n              header: () => <VisuallyHidden>Actions</VisuallyHidden>,\n              renderCell: row => {\n                return (\n                  <ActionMenu>\n                    <ActionMenu.Anchor>\n                      {/* eslint-disable-next-line primer-react/a11y-remove-disable-tooltip */}\n                      <IconButton\n                        aria-label={`Actions: ${row.name}`}\n                        title={`Actions: ${row.name}`}\n                        icon={KebabHorizontalIcon}\n                        variant=\"invisible\"\n                        unsafeDisableTooltip={true}\n                      />\n                    </ActionMenu.Anchor>\n                    <ActionMenu.Overlay>\n                      <ActionList>\n                        <ActionList.Item>{Constants.editPointer}</ActionList.Item>\n                        <ActionList.Item variant=\"danger\">{Constants.deletePointer}</ActionList.Item>\n                      </ActionList>\n                    </ActionMenu.Overlay>\n                  </ActionMenu>\n                )\n              },\n            },\n          ]}\n        />\n      </Table.Container>\n    </Box>\n  )\n}\n\ntry{ CuratedImagesPointerTable.displayName ||= 'CuratedImagesPointerTable' } catch {}","import {DataTable, Table} from '@primer/react/experimental'\nimport type {ImageDefinition} from '../types'\nimport {CheckCircleIcon, KebabHorizontalIcon, XCircleIcon} from '@primer/octicons-react'\nimport VisuallyHidden from '@primer/react/lib-esm/_VisuallyHidden'\nimport {ActionList, ActionMenu, Box, Button, IconButton} from '@primer/react'\nimport {Constants} from '../constants/constants'\nimport {useNavigate} from '@github-ui/use-navigate'\n\ninterface ICuratedImagesTableProps {\n  imageDefinitions: ImageDefinition[]\n  imsStafftoolsPath: string\n  newCuratedImagePath: string\n}\n\nexport function CuratedImagesTable(props: ICuratedImagesTableProps) {\n  const navigate = useNavigate()\n  return (\n    <Box sx={{pt: 2}}>\n      <Table.Container>\n        <Table.Title as=\"h2\" id=\"curated-images\">\n          {Constants.curatedImagesTableTitle}\n        </Table.Title>\n        <Table.Actions>\n          <Button onClick={() => navigate(props.newCuratedImagePath)}>{Constants.createCuratedImages}</Button>\n        </Table.Actions>\n        <DataTable\n          aria-labelledby=\"curated-images\"\n          aria-describedby=\"curated-images-subtitle\"\n          data={props.imageDefinitions}\n          columns={[\n            {\n              header: 'Id',\n              field: 'id',\n              rowHeader: true,\n            },\n            {\n              header: 'Name',\n              field: 'name',\n            },\n            {\n              header: 'Architecture',\n              field: 'architecture',\n            },\n            {\n              header: 'OsType',\n              field: 'osType',\n            },\n            {\n              header: 'Enabled',\n              field: 'enabled',\n              renderCell: row => {\n                return row.enabled ? <CheckCircleIcon size={16} /> : <XCircleIcon size={16} />\n              },\n            },\n            {\n              header: 'Versions',\n              field: 'imageVersionsCount',\n              renderCell: row => {\n                return row.imageVersionsCount\n              },\n            },\n            {\n              id: 'actions',\n              header: () => <VisuallyHidden>Actions</VisuallyHidden>,\n              renderCell: row => {\n                return (\n                  <ActionMenu>\n                    <ActionMenu.Anchor>\n                      {/* eslint-disable-next-line primer-react/a11y-remove-disable-tooltip */}\n                      <IconButton\n                        aria-label={`Actions: ${row.name}`}\n                        title={`Actions: ${row.name}`}\n                        icon={KebabHorizontalIcon}\n                        variant=\"invisible\"\n                        unsafeDisableTooltip={true}\n                      />\n                    </ActionMenu.Anchor>\n                    <ActionMenu.Overlay>\n                      <ActionList>\n                        <ActionList.Item\n                          disabled={row.imageVersionsCount === 0}\n                          onSelect={() => navigate(Constants.imageVersionsUrl(props.imsStafftoolsPath, row.id))}\n                        >\n                          {Constants.viewImageVersions}\n                        </ActionList.Item>\n                        <ActionList.Divider />\n                        <ActionList.Item>{Constants.editCuratedImages}</ActionList.Item>\n                        <ActionList.Item variant=\"danger\">{Constants.deleteCuratedImages}</ActionList.Item>\n                      </ActionList>\n                    </ActionMenu.Overlay>\n                  </ActionMenu>\n                )\n              },\n            },\n          ]}\n        />\n      </Table.Container>\n    </Box>\n  )\n}\n\ntry{ CuratedImagesTable.displayName ||= 'CuratedImagesTable' } catch {}","import {CuratedImagesPointerTable} from './CuratedImagesPointerTable'\nimport {CuratedImagesTable} from './CuratedImagesTable'\nimport {tableGapStyle} from '../utils/style'\nimport type {ImageDefinition} from '../types'\nimport {Box} from '@primer/react'\nimport {ImsBlankslate} from './ImsBlankstate'\nimport {Constants} from '../constants/constants'\n\ninterface ICuratedImagesPageProps {\n  imageDefinitionPointers: ImageDefinition[]\n  imageDefinitions: ImageDefinition[]\n  imsStafftoolsPath: string\n  newCuratedImagePath: string\n  newCuratedPointerPath: string\n}\n\nexport function CuratedImagesPage(props: ICuratedImagesPageProps) {\n  return (\n    <Box sx={tableGapStyle}>\n      {props.imageDefinitionPointers.length > 0 ? (\n        <CuratedImagesPointerTable\n          pointers={props.imageDefinitionPointers}\n          newCuratedPointerPath={props.newCuratedPointerPath}\n        />\n      ) : (\n        <ImsBlankslate\n          title={Constants.pointerBlankslateTitle}\n          description={Constants.blankslateDescription}\n          primaryAction={Constants.createPointer}\n        />\n      )}\n      {props.imageDefinitions.length > 0 ? (\n        <CuratedImagesTable\n          imageDefinitions={props.imageDefinitions}\n          imsStafftoolsPath={props.imsStafftoolsPath}\n          newCuratedImagePath={props.newCuratedImagePath}\n        />\n      ) : (\n        <ImsBlankslate\n          title={Constants.curatedImagesPointerTableBlankslateTitle}\n          description={Constants.blankslateDescription}\n          primaryAction={Constants.createCuratedImages}\n        />\n      )}\n    </Box>\n  )\n}\n\ntry{ CuratedImagesPage.displayName ||= 'CuratedImagesPage' } catch {}","import {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {Box, Heading, TabNav} from '@primer/react'\nimport {pageHeadingStyle, Spacing} from '../../utils/style'\nimport {useState} from 'react'\nimport type {ImageDefinition} from '../../types'\nimport {ImsBlankslate} from '../../components/ImsBlankstate'\nimport {Constants} from '../../constants/constants'\nimport {CuratedImagesPage} from '../../components/CuratedImagesPage'\n\ntype ImageTypeTab = 'curated' | 'marketplace'\n\nexport interface MainPayload {\n  imageDefinitionPointers: ImageDefinition[]\n  imageDefinitions: ImageDefinition[]\n  imsStafftoolsPath: string\n  newCuratedImagePath: string\n  newCuratedPointerPath: string\n}\n\nexport function Main() {\n  const payload = useRoutePayload<MainPayload>()\n  const [selectedTab, setSelectedTab] = useState<ImageTypeTab>('curated')\n\n  return (\n    <>\n      <div className=\"Subhead\">\n        <Heading as=\"h2\" className=\"Subhead-heading\" sx={pageHeadingStyle}>\n          {Constants.stafftoolPageTitle}\n        </Heading>\n      </div>\n      <div>\n        <div>\n          <TabNav aria-label=\"Main\">\n            <TabNav.Link as=\"button\" selected={selectedTab === 'curated'} onClick={() => setSelectedTab('curated')}>\n              Curated\n            </TabNav.Link>\n            <TabNav.Link\n              as=\"button\"\n              selected={selectedTab === 'marketplace'}\n              onClick={() => setSelectedTab('marketplace')}\n            >\n              Marketplace\n            </TabNav.Link>\n          </TabNav>\n        </div>\n        {selectedTab === 'curated' && (\n          <CuratedImagesPage\n            imageDefinitionPointers={payload.imageDefinitionPointers}\n            imageDefinitions={payload.imageDefinitions}\n            imsStafftoolsPath={payload.imsStafftoolsPath}\n            newCuratedImagePath={payload.newCuratedImagePath}\n            newCuratedPointerPath={payload.newCuratedPointerPath}\n          />\n        )}\n        {selectedTab === 'marketplace' && (\n          <Box sx={{mt: Spacing.StandardPadding}}>\n            <ImsBlankslate title={Constants.blankslateTitle} description={Constants.blankslateDescription} />\n          </Box>\n        )}\n      </div>\n    </>\n  )\n}\n\ntry{ Main.displayName ||= 'Main' } catch {}","import {Box, Breadcrumbs, FormControl, TextInput, Select} from '@primer/react'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {Constants} from '../../constants/constants'\nimport {Spacing} from '../../utils/style'\n\nexport interface NewCuratedImagePayload {\n  imsStafftoolsPath: string\n}\n\nexport function NewCuratedImage() {\n  const payload = useRoutePayload<NewCuratedImagePayload>()\n  return (\n    <>\n      <Box sx={{mb: Spacing.StandardPadding}}>\n        <Breadcrumbs>\n          <Breadcrumbs.Item href={payload.imsStafftoolsPath}>{Constants.curatedImagesTableTitle}</Breadcrumbs.Item>\n          <Breadcrumbs.Item selected>{Constants.newCuratedImages}</Breadcrumbs.Item>\n        </Breadcrumbs>\n      </Box>\n      <FormControl required>\n        <FormControl.Label>Image Name</FormControl.Label>\n        <TextInput />\n      </FormControl>\n      <FormControl>\n        <FormControl.Label>Os Type</FormControl.Label>\n        <Select>\n          <Select.Option value=\"Linux\">Linux</Select.Option>\n          <Select.Option value=\"Window\">Window</Select.Option>\n        </Select>\n      </FormControl>\n      <FormControl>\n        <FormControl.Label>Architecture</FormControl.Label>\n        <Select>\n          <Select.Option value=\"x64\">x64</Select.Option>\n          <Select.Option value=\"Arm64\">Arm64</Select.Option>\n        </Select>\n      </FormControl>\n    </>\n  )\n}\n\ntry{ NewCuratedImage.displayName ||= 'NewCuratedImage' } catch {}","import {Spacing} from '../../utils/style'\nimport {Box, Breadcrumbs, FormControl, Select, TextInput} from '@primer/react'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {Constants} from '../../constants/constants'\n\nexport interface NewCuratedPointerPayload {\n  imsStafftoolsPath: string\n}\n\nexport function NewCuratedPointer() {\n  const payload = useRoutePayload<NewCuratedPointerPayload>()\n  return (\n    <>\n      <Box sx={{mb: Spacing.StandardPadding}}>\n        <Breadcrumbs>\n          <Breadcrumbs.Item href={payload.imsStafftoolsPath}>{Constants.curatedImagesTableTitle}</Breadcrumbs.Item>\n          <Breadcrumbs.Item selected>{Constants.newCuratedImages}</Breadcrumbs.Item>\n        </Breadcrumbs>\n      </Box>\n      <FormControl required>\n        <FormControl.Label>Image Name</FormControl.Label>\n        <TextInput />\n      </FormControl>\n      <FormControl>\n        <FormControl.Label>Os Type</FormControl.Label>\n        <Select>\n          <Select.Option value=\"Linux\">Linux</Select.Option>\n          <Select.Option value=\"Window\">Window</Select.Option>\n        </Select>\n      </FormControl>\n      <FormControl>\n        <FormControl.Label>Architecture</FormControl.Label>\n        <Select>\n          <Select.Option value=\"x64\">x64</Select.Option>\n          <Select.Option value=\"Arm64\">Arm64</Select.Option>\n        </Select>\n      </FormControl>\n    </>\n  )\n}\n\ntry{ NewCuratedPointer.displayName ||= 'NewCuratedPointer' } catch {}","import {Dialog, Box} from '@primer/react'\nimport {dialogBoxStyle} from '../utils/style'\nimport {Constants} from '../constants/constants'\n\ninterface IStateDetailsDialogProps {\n  stateDetails: string\n  showStateDetailsDialog: boolean\n  setShowStateDetailsDialog: (showDialog: boolean) => void\n  returnFocusRef: React.RefObject<HTMLElement>\n}\n\nexport function StateDetailsDialog(props: IStateDetailsDialogProps) {\n  return (\n    <Dialog\n      returnFocusRef={props.returnFocusRef}\n      isOpen={props.showStateDetailsDialog}\n      onDismiss={() => props.setShowStateDetailsDialog(false)}\n    >\n      <Dialog.Header>{Constants.stateDetails}</Dialog.Header>\n      <Box sx={dialogBoxStyle}>{props.stateDetails}</Box>\n    </Dialog>\n  )\n}\n\ntry{ StateDetailsDialog.displayName ||= 'StateDetailsDialog' } catch {}","import type {ImageVersion} from '../types'\nimport {ActionList, ActionMenu, IconButton} from '@primer/react'\nimport {CheckCircleIcon, XCircleIcon, KebabHorizontalIcon, LinkExternalIcon} from '@primer/octicons-react'\nimport {DataTable, Table} from '@primer/react/experimental'\nimport VisuallyHidden from '@primer/react/lib-esm/_VisuallyHidden'\nimport {useState, useRef} from 'react'\nimport {StateDetailsDialog} from './StateDetailsDialog'\n\ninterface ICuratedImageVersionsTableProps {\n  imageVersions: ImageVersion[]\n}\n\nexport function CuratedImageVersionsTable(props: ICuratedImageVersionsTableProps) {\n  const [isOpen, setIsOpen] = useState(false)\n  const returnFocusRef = useRef(null)\n  return (\n    <Table.Container>\n      <DataTable\n        data={props.imageVersions.map((imageVersion, index) => ({...imageVersion, id: index}))}\n        columns={[\n          {\n            header: 'Version',\n            field: 'version',\n            rowHeader: true,\n          },\n          {\n            header: 'State',\n            field: 'state',\n          },\n          {\n            header: 'State Details',\n            field: 'stateDetails',\n            renderCell: row => {\n              return (\n                <>\n                  {row.stateDetails !== '' && (\n                    <IconButton\n                      icon={LinkExternalIcon}\n                      aria-label=\"State details\"\n                      onClick={() => setIsOpen(true)}\n                      ref={returnFocusRef}\n                      variant=\"invisible\"\n                    />\n                  )}\n                  {isOpen && (\n                    <StateDetailsDialog\n                      stateDetails={row.stateDetails}\n                      showStateDetailsDialog={isOpen}\n                      setShowStateDetailsDialog={setIsOpen}\n                      returnFocusRef={returnFocusRef}\n                    />\n                  )}\n                </>\n              )\n            },\n          },\n          {\n            header: 'Size GB',\n            field: 'sizeGb',\n          },\n          {\n            header: 'Enabled',\n            field: 'enabled',\n            renderCell: row => {\n              return row.enabled ? <CheckCircleIcon size={16} /> : <XCircleIcon size={16} />\n            },\n          },\n          {\n            id: 'actions',\n            header: () => <VisuallyHidden>Actions</VisuallyHidden>,\n            renderCell: row => {\n              return (\n                <ActionMenu>\n                  <ActionMenu.Anchor>\n                    <IconButton\n                      aria-label={`Actions: ${row.version}`}\n                      title={`Actions: ${row.version}`}\n                      icon={KebabHorizontalIcon}\n                      variant=\"invisible\"\n                    />\n                  </ActionMenu.Anchor>\n                  <ActionMenu.Overlay>\n                    <ActionList>\n                      <ActionList.Item>{row.enabled ? 'Disable' : 'Enable'}</ActionList.Item>\n                    </ActionList>\n                  </ActionMenu.Overlay>\n                </ActionMenu>\n              )\n            },\n          },\n        ]}\n      />\n    </Table.Container>\n  )\n}\n\ntry{ CuratedImageVersionsTable.displayName ||= 'CuratedImageVersionsTable' } catch {}","import {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport type {ImageDefinition, ImageVersion} from '../../types'\nimport {Box, Breadcrumbs} from '@primer/react'\nimport {Constants} from '../../constants/constants'\nimport {Spacing, breadcrumbLink} from '../../utils/style'\nimport {CuratedImageVersionsTable} from '../../components/CuratedImageVersionsTable'\nimport {useNavigate} from '@github-ui/use-navigate'\n\nexport interface ListImageVersionsPayload {\n  imageDefinition: ImageDefinition\n  imageVersions: ImageVersion[]\n  imsStafftoolsPath: string\n}\n\nexport function ListImageVersions() {\n  const payload = useRoutePayload<ListImageVersionsPayload>()\n  const navigate = useNavigate()\n\n  return (\n    <>\n      <Box sx={{mb: Spacing.StandardPadding}}>\n        <Breadcrumbs>\n          <Breadcrumbs.Item sx={breadcrumbLink} onClick={() => navigate(payload.imsStafftoolsPath)}>\n            {Constants.curatedImagesTableTitle}\n          </Breadcrumbs.Item>\n          <Breadcrumbs.Item selected>\n            {payload.imageDefinition.name} ({payload.imageDefinition.id})\n          </Breadcrumbs.Item>\n        </Breadcrumbs>\n      </Box>\n      <CuratedImageVersionsTable imageVersions={payload.imageVersions} />\n    </>\n  )\n}\n\ntry{ ListImageVersions.displayName ||= 'ListImageVersions' } catch {}","import {App} from './App'\nimport {Main} from './routes/stafftools/Main'\nimport {NewCuratedImage} from './routes/stafftools/NewCuratedImage'\nimport {NewCuratedPointer} from './routes/stafftools/NewCuratedPointer'\nimport {ListImageVersions} from './routes/stafftools/ListImageVersions'\nimport {registerReactAppFactory} from '@github-ui/react-core/register-app'\nimport {jsonRoute} from '@github-ui/react-core/json-route'\n\nregisterReactAppFactory('hosted-compute-ims-stafftools', () => ({\n  App,\n  routes: [\n    jsonRoute({path: '/stafftools/hosted_compute_ims_admin', Component: Main}),\n    jsonRoute({path: '/stafftools/hosted_compute_ims_admin/curated/new_image', Component: NewCuratedImage}),\n    jsonRoute({path: '/stafftools/hosted_compute_ims_admin/curated/new_pointer', Component: NewCuratedPointer}),\n    jsonRoute({\n      path: '/stafftools/hosted_compute_ims_admin/curated/:image_definition_id',\n      Component: ListImageVersions,\n    }),\n  ],\n}))\n","// Check if the navigation is only a hash change.\nconst isHashNavigation = (currentUrl: string, targetUrl: string): boolean => {\n  const current = new URL(currentUrl, window.location.origin)\n  const target = new URL(targetUrl, window.location.origin)\n  const hasHash = target.href.includes('#')\n\n  return (\n    hasHash && current.host === target.host && current.pathname === target.pathname && current.search === target.search\n  )\n}\n\nexport default isHashNavigation\n","import React, {startTransition} from 'react'\nimport {\n  createSearchParams,\n  matchRoutes,\n  resolvePath,\n  useLocation,\n  useNavigate as useReactRouterNavigate,\n  useSearchParams as useReactRouterSearchParams,\n  type NavigateOptions,\n  type To,\n  type URLSearchParamsInit,\n} from 'react-router-dom'\n\nimport isHashNavigation from '@github-ui/is-hash-navigation'\nimport {AppContext} from '@github-ui/react-core/app-context'\nimport {startSoftNav} from '@github-ui/soft-nav/state'\nimport {PREVENT_AUTOFOCUS_KEY} from '@github-ui/react-core/prevent-autofocus'\n\nexport interface NavigateOptionsWithPreventAutofocus extends NavigateOptions {\n  preventAutofocus?: boolean\n}\n\nexport const useNavigate = (): ((to: To, options?: NavigateOptionsWithPreventAutofocus) => void) => {\n  const {routes, history} = React.useContext(AppContext)\n  const reactRouterNavigate = useReactRouterNavigate()\n  return React.useCallback(\n    (to, navigateOptions = {}) => {\n      const pathname = resolvePath(to).pathname\n      const isExternalToApp = !matchRoutes(routes, pathname)\n\n      if (isExternalToApp) {\n        const href = history.createHref(to)\n        ;(async () => {\n          const {softNavigate: turboSoftNavigate} = await import('@github-ui/soft-navigate')\n          turboSoftNavigate(href)\n        })()\n      } else {\n        if (!isHashNavigation(location.href, to.toString())) {\n          startSoftNav('react')\n        }\n        const {preventAutofocus, ...options} = navigateOptions\n        startTransition(() => {\n          reactRouterNavigate(\n            to,\n            preventAutofocus\n              ? {\n                  ...options,\n                  state: {\n                    [PREVENT_AUTOFOCUS_KEY]: true,\n                    ...options.state,\n                  },\n                }\n              : options,\n          )\n          const {turbo, ...state} = window.history.state\n          window.history.replaceState({...state, skipTurbo: true}, '', location.href)\n        })\n      }\n    },\n    [history, reactRouterNavigate, routes],\n  )\n}\n\n/**\n * An implementation of `useSearchParams` that mirrors `react-router-dom`'s `useSearchParams` hook\n * but utilizes `@github-ui/useNavigate` instead of `react-router` `useNavigate` to handle updates.\n */\nexport const useSearchParams = () => {\n  const [searchParams] = useReactRouterSearchParams()\n  const navigate = useNavigate()\n  const {pathname} = useLocation()\n\n  const setSearchParams = React.useCallback<\n    (\n      nextInit?: URLSearchParamsInit | ((prev: URLSearchParams) => URLSearchParamsInit),\n      navigateOpts?: NavigateOptionsWithPreventAutofocus,\n    ) => void\n  >(\n    (nextInit, navigateOptions = {}) => {\n      const newSearchParams = createSearchParams(typeof nextInit === 'function' ? nextInit(searchParams) : nextInit)\n      navigate(\n        {\n          pathname,\n          search: newSearchParams.toString(),\n        },\n        navigateOptions,\n      )\n    },\n    [searchParams, navigate, pathname],\n  )\n\n  return [searchParams, setSearchParams] as const\n}\n","import type {ChildRoute, LoaderResult, RouteRegistration, TransitionType} from './app-routing-types'\nimport type React from 'react'\nimport type {Location} from '@remix-run/router'\n\nexport interface JsonRouteProps {\n  path: string\n  Component: React.ComponentType\n  transitionType?: TransitionType\n  shouldNavigateOnError?: boolean\n  children?: ChildRoute[]\n}\n/**\n * A utility for building a route registration for a route that consumes a JSON object (either via embedding in a\n * script tag or via a JSON fetch on React soft navigations).\n */\nexport function jsonRoute<TRouteData, TEmbeddedData>({\n  path,\n  Component,\n  /**\n   * Some routes want to handle their own errors and not just show a generic error page. In this case,\n   * the error is just handled like any other payload for the route.\n   * NOTE: We might consider replacing the shouldNavigateOnError flag with a parallel implementation to jsonRoute.\n   */\n  shouldNavigateOnError,\n  transitionType,\n  children,\n}: JsonRouteProps): RouteRegistration<TRouteData, TEmbeddedData> {\n  async function coreLoader({location}: {location: Location}): Promise<LoaderResult<TRouteData>> {\n    let response: Response\n    try {\n      const fetchPath = `${location.pathname}${location.search}`\n      response = await window.fetch(fetchPath, {\n        headers: {\n          Accept: 'application/json',\n          'X-Requested-With': 'XMLHttpRequest',\n          'X-GitHub-Target': 'dotcom',\n          'X-React-Router': 'json',\n        },\n      })\n    } catch (error) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'fetchError'},\n      }\n    }\n    if (response.redirected) {\n      return {\n        type: 'redirect',\n        url: response.url,\n      }\n    } else if (!response.ok) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'httpError', httpStatus: response.status},\n      }\n    } else {\n      try {\n        const responseJson = await response.json()\n        return {\n          type: 'loaded',\n          data: responseJson,\n          title: responseJson.title,\n        }\n      } catch (error) {\n        return {\n          type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n          error: {type: 'badResponseError'},\n        }\n      }\n    }\n  }\n\n  function loadFromEmbeddedData({embeddedData}: {embeddedData: TEmbeddedData}): {data: TRouteData; title: string} {\n    const data = embeddedData as unknown as TRouteData & {title: string}\n    return {data, title: data.title}\n  }\n\n  return {\n    path,\n    // TODO: consider wrapping Component with a component that passes payload as a prop — ideally as part of migrating\n    // away from useRoutePayload.\n    Component,\n    coreLoader,\n    loadFromEmbeddedData,\n    transitionType,\n    children,\n  }\n}\n"],"names":["App","props","children","displayName","Spacing","StandardPadding","pageHeadingStyle","display","font","fontSize","dialogBoxStyle","p","blankslateStyle","border","borderRadius","tableGapStyle","mt","flexDirection","gap","breadcrumbLink","cursor","Constants","stafftoolPageTitle","blankslateTitle","blankslateDescription","pointerBlankslateTitle","curatedImagesPointerTableBlankslateTitle","imsRepoLink","editPointer","deletePointer","pointerTableTitle","createPointer","curatedImagesTableTitle","newCuratedImages","createCuratedImages","viewImageVersions","editCuratedImages","deleteCuratedImages","imageVersionsUrl","path","imageDefinitionId","stateDetails","ImsBlankslate","Box","className","sx","Blankslate","Heading","title","Description","description","primaryAction","PrimaryAction","href","SecondaryAction","CuratedImagesPointerTable","navigate","useNavigate","pt","Table","Container","Title","as","id","Actions","Button","onClick","newCuratedPointerPath","DataTable","aria-labelledby","aria-describedby","data","pointers","columns","header","field","rowHeader","renderCell","row","enabled","CheckCircleIcon","size","XCircleIcon","VisuallyHidden","ActionMenu","Anchor","IconButton","aria-label","name","icon","KebabHorizontalIcon","variant","unsafeDisableTooltip","Overlay","ActionList","Item","CuratedImagesTable","newCuratedImagePath","imageDefinitions","imageVersionsCount","disabled","onSelect","imsStafftoolsPath","Divider","CuratedImagesPage","imageDefinitionPointers","length","Main","payload","useRoutePayload","selectedTab","setSelectedTab","useState","div","TabNav","Link","selected","NewCuratedImage","mb","Breadcrumbs","FormControl","required","Label","TextInput","Select","Option","value","NewCuratedPointer","StateDetailsDialog","Dialog","returnFocusRef","isOpen","showStateDetailsDialog","onDismiss","setShowStateDetailsDialog","Header","CuratedImageVersionsTable","setIsOpen","useRef","imageVersions","map","imageVersion","index","LinkExternalIcon","ref","version","ListImageVersions","imageDefinition","registerReactAppFactory","routes","jsonRoute","Component","currentUrl","targetUrl","current","URL","window","location","origin","target","hasHash","includes","host","pathname","search","history","React","AppContext","reactRouterNavigate","useReactRouterNavigate","to","navigateOptions","resolvePath","matchRoutes","isHashNavigation","toString","startSoftNav","preventAutofocus","options","startTransition","state","PREVENT_AUTOFOCUS_KEY","turbo","replaceState","skipTurbo","createHref","softNavigate","turboSoftNavigate","useSearchParams","searchParams","useReactRouterSearchParams","useLocation","setSearchParams","nextInit","newSearchParams","createSearchParams","shouldNavigateOnError","transitionType","coreLoader","response","fetchPath","fetch","headers","Accept","error","type","redirected","url","ok","httpStatus","status","responseJson","json","loadFromEmbeddedData","embeddedData"],"sourceRoot":""}