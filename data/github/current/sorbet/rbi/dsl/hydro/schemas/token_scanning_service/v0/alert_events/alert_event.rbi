# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::TokenScanningService::V0::AlertEvents::AlertEvent`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::TokenScanningService::V0::AlertEvents::AlertEvent`.

class Hydro::Schemas::TokenScanningService::V0::AlertEvents::AlertEvent
  sig do
    params(
      alert_number: T.nilable(Integer),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      event: T.nilable(T.any(Symbol, Integer)),
      location_id: T.nilable(Integer),
      resolution: T.nilable(T.any(Symbol, Integer)),
      resolved: T.nilable(T::Boolean),
      resolved_at: T.nilable(Google::Protobuf::Timestamp),
      token_type: T.nilable(String),
      token_type_confidence: T.nilable(T.any(Symbol, Integer)),
      token_type_provider: T.nilable(String),
      token_type_slug: T.nilable(String),
      token_validity: T.nilable(T.any(Symbol, Integer)),
      updated_at: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(alert_number: nil, created_at: nil, event: nil, location_id: nil, resolution: nil, resolved: nil, resolved_at: nil, token_type: nil, token_type_confidence: nil, token_type_provider: nil, token_type_slug: nil, token_validity: nil, updated_at: nil); end

  sig { returns(Integer) }
  def alert_number; end

  sig { params(value: Integer).void }
  def alert_number=(value); end

  sig { void }
  def clear_alert_number; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_event; end

  sig { void }
  def clear_location_id; end

  sig { void }
  def clear_resolution; end

  sig { void }
  def clear_resolved; end

  sig { void }
  def clear_resolved_at; end

  sig { void }
  def clear_token_type; end

  sig { void }
  def clear_token_type_confidence; end

  sig { void }
  def clear_token_type_provider; end

  sig { void }
  def clear_token_type_slug; end

  sig { void }
  def clear_token_validity; end

  sig { void }
  def clear_updated_at; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def event; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def event=(value); end

  sig { returns(Integer) }
  def location_id; end

  sig { params(value: Integer).void }
  def location_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def resolution; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def resolution=(value); end

  sig { returns(T::Boolean) }
  def resolved; end

  sig { params(value: T::Boolean).void }
  def resolved=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def resolved_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def resolved_at=(value); end

  sig { returns(String) }
  def token_type; end

  sig { params(value: String).void }
  def token_type=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def token_type_confidence; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def token_type_confidence=(value); end

  sig { returns(String) }
  def token_type_provider; end

  sig { params(value: String).void }
  def token_type_provider=(value); end

  sig { returns(String) }
  def token_type_slug; end

  sig { params(value: String).void }
  def token_type_slug=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def token_validity; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def token_validity=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end
end
