{"version":3,"file":"security-overview-export-button-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/aria-live/aria-live.ts","ui/packages/react-core/deferred-registry.ts","ui/packages/react-core/react-partial-anchor.ts","ui/packages/react-core/react-partial-registry.ts","ui/packages/react-core/ReactPartialElement.tsx","ui/packages/react-core/register-partial.ts","ui/packages/react-profiling-mode/src/index.ts","ui/packages/security-overview-export-button/security-overview-export-button.ts","ui/packages/verified-fetch/verified-fetch.ts","ui/packages/react-core/PartialRouter.tsx","ui/packages/react-core/PartialEntry.tsx","ui/packages/react-core/ReactBaseElement.tsx","ui/packages/security-overview-export-button/SecurityOverviewExportButton.tsx"],"sourcesContent":["import {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {\n  announce as liveRegionAnnounce,\n  announceFromElement as liveRegionAnnounceFromElement,\n} from '@primer/live-region-element'\n\nexport interface ElementWithAriaNotify extends Element {\n  ariaNotify: (\n    message: string,\n    options?: {interrupt?: 'none' | 'pending' | 'all'; priority?: 'none' | 'important'},\n  ) => void\n}\n\n/**\n * Troubleshooting guide for aria-live regions available on the Hub\n * - https://thehub.github.com/epd/engineering/dev-practicals/frontend/accessibility/readiness-routine/screenreaders/live-regions-and-focus-management-techniques/#why-isnt-my-live-region-working-as-i-expect\n */\n\n// Announce an element's text to the screen reader.\nexport function announceFromElement(el: HTMLElement, options?: {assertive?: boolean; element?: HTMLElement}) {\n  if (isFeatureEnabled('arianotify_comprehensive_migration')) {\n    announce(getTextContent(el), {...options, element: options?.element ?? el})\n  } else if (isFeatureEnabled('primer_live_region_element') && options?.element === undefined) {\n    liveRegionAnnounceFromElement(el, {\n      politeness: options?.assertive ? 'assertive' : 'polite',\n    })\n  } else {\n    announce(getTextContent(el), options)\n  }\n}\n\n// Announce message update to screen reader.\n// Note: Use caution when using this function while a dialog is active.\n// If the message is updated while the dialog is open, the screen reader may not announce the live region.\n// For more information, view the document on dialog and live region support: https://github.com/github/accessibility/blob/main/docs/dialog-live-region-support.md\nexport function announce(message: string, options?: {assertive?: boolean; element?: HTMLElement}) {\n  const {assertive, element} = options ?? {}\n\n  if (isFeatureEnabled('arianotify_comprehensive_migration') && 'ariaNotify' in Element.prototype) {\n    ;((element || document.body) as Element as ElementWithAriaNotify).ariaNotify(message, {\n      interrupt: options?.assertive ? 'all' : 'none',\n    })\n  } else if (isFeatureEnabled('primer_live_region_element') && element === undefined) {\n    liveRegionAnnounce(message, {\n      politeness: assertive ? 'assertive' : 'polite',\n    })\n  } else {\n    setContainerContent(message, assertive, element)\n  }\n}\n\n// Set aria-live container to message.\nfunction setContainerContent(message: string, assertive?: boolean, element?: HTMLElement) {\n  const getQuerySelector = () => {\n    return assertive ? '#js-global-screen-reader-notice-assertive' : '#js-global-screen-reader-notice'\n  }\n  const container = element ?? ssrSafeDocument?.querySelector(getQuerySelector())\n  if (!container) return\n  if (container.textContent === message) {\n    /* This is a hack due to the way the aria live API works.\n    A screen reader will not read a live region again\n    if the text is the same. Adding a space character tells\n    the browser that the live region has updated,\n    which will cause it to read again, but with no audible difference. */\n    container.textContent = `${message}\\u00A0`\n  } else {\n    container.textContent = message\n  }\n}\n\n// Gets the trimmed text content of an element.\nfunction getTextContent(el: HTMLElement): string {\n  // innerText does not contain hidden text\n  /* eslint-disable-next-line github/no-innerText */\n  return (el.getAttribute('aria-label') || el.innerText || '').trim()\n}\n","export class DeferredRegistry<T> {\n  private registrationEntries: Record<\n    string,\n    {\n      promise: Promise<T>\n      resolve?: (r: T) => void\n    }\n  > = {}\n\n  public register(name: string, registration: T) {\n    const entry = this.registrationEntries[name]\n    if (entry) {\n      entry.resolve?.(registration)\n    } else {\n      this.registrationEntries[name] = {\n        promise: Promise.resolve(registration),\n      }\n    }\n  }\n\n  public getRegistration(name: string): Promise<T> {\n    this.registrationEntries[name] ||= new Deferred()\n    return this.registrationEntries[name].promise\n  }\n}\n\nclass Deferred<T> {\n  declare promise\n  declare resolve: (r: T) => void\n\n  constructor() {\n    this.promise = new Promise<T>(resolve => {\n      this.resolve = resolve\n    })\n  }\n}\n","import type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {useCallback, useEffect, useRef, useState} from 'react'\n\ninterface ReactPartialAnchor {\n  /**\n   * DO NOT USE THIS PROPERTY DIRECTLY. It is meant to be used with useExternalAnchor and useOnAnchorClick\n   */\n  __wrapperElement: ReactPartialAnchorElement\n}\n\nexport interface ReactPartialAnchorProps {\n  reactPartialAnchor?: ReactPartialAnchor\n}\n\nexport function usePartialAnchorProps(\n  anchorElement: ReactPartialAnchorElement | undefined | null,\n): ReactPartialAnchorProps {\n  useEffect(() => {\n    const anchor = anchorElement?.anchor\n\n    if (!anchor) {\n      return\n    }\n\n    if ('disabled' in anchor) {\n      anchor.disabled = false\n    }\n    anchor.classList.remove('cursor-wait')\n  }, [anchorElement])\n\n  if (!anchorElement) {\n    return {}\n  }\n\n  return {\n    reactPartialAnchor: {\n      __wrapperElement: anchorElement,\n    },\n  }\n}\n\nexport function useExternalAnchor(reactPartialAnchor: ReactPartialAnchor) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor || null)\n  const [open, setOpen] = useState(false)\n\n  const onClick = useCallback(() => {\n    // toggle the open state when clicked\n    setOpen(!open)\n  }, [open, setOpen])\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    ref.current.setAttribute('aria-expanded', open.toString())\n    ref.current.setAttribute('aria-haspopup', 'true')\n  }, [ref, open])\n\n  useOnAnchorClick(reactPartialAnchor, onClick)\n\n  return {\n    ref,\n    open,\n    setOpen,\n  }\n}\n\nexport function useOnAnchorClick(reactPartialAnchor: ReactPartialAnchor, onClick: (event: MouseEvent) => void) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor)\n\n  useEffect(() => {\n    const element = ref.current\n    if (!element) {\n      return\n    }\n\n    element.addEventListener('click', onClick)\n    return () => element.removeEventListener('click', onClick)\n  }, [ref, onClick])\n}\n\nexport type PropsWithPartialAnchor<T> = T & Required<ReactPartialAnchorProps>\n","import {DeferredRegistry} from './deferred-registry'\n\nexport interface PartialRegistration {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Component: React.ComponentType<any>\n}\n\nexport const partialRegistry = new DeferredRegistry<PartialRegistration>()\n\nexport function getReactPartial(appName: string) {\n  return partialRegistry.getRegistration(appName)\n}\n","import {controller} from '@github/catalyst'\nimport {getReactPartial} from './react-partial-registry'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {ReactBaseElement} from './ReactBaseElement'\nimport {PartialEntry} from './PartialEntry'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\n\n// What is this silliness? Is it react or a web component?!\n// It's a web component we use to bootstrap react partials within the monolith.\n@controller\nclass ReactPartialElement extends ReactBaseElement<EmbeddedPartialData> {\n  nameAttribute = 'partial-name'\n\n  async getReactNode(embeddedData: EmbeddedPartialData) {\n    const {Component} = await getReactPartial(this.name)\n\n    // Some React Partials will be wrapped in a react-partial-anchor, which is used to conditionally render the Partial\n    const anchorElement = this.closest<ReactPartialAnchorElement>('react-partial-anchor')\n\n    return (\n      <PartialEntry\n        partialName={this.name}\n        embeddedData={embeddedData}\n        Component={Component}\n        wasServerRendered={this.hasSSRContent}\n        ssrError={this.ssrError}\n        anchorElement={anchorElement}\n      />\n    )\n  }\n}\n","import {partialRegistry, type PartialRegistration} from './react-partial-registry'\n// Import the web component to get it registered on the window\nimport './ReactPartialElement'\n\n// NOTE: if the signature of this method changes, also update the react-partial-name ESLint rule\n// /workspaces/github/ui/packages/eslint-plugin-github-monorepo/rules/react-partial-name.js\nexport function registerReactPartial(name: string, registration: PartialRegistration) {\n  partialRegistry.register(name, registration)\n}\n","import safeStorage from '@github-ui/safe-storage'\n\nconst {getItem, setItem, removeItem} = safeStorage('localStorage')\nconst REACT_PROFILING_ENABLED = 'REACT_PROFILING_ENABLED'\n\ninterface ReactProfilingModeMethods {\n  enable: () => void\n  disable: () => void\n  isEnabled: () => boolean\n}\n\nconst ReactProfilingMode: ReactProfilingModeMethods = {\n  enable: () => setItem(REACT_PROFILING_ENABLED, 'true'),\n  disable: () => removeItem(REACT_PROFILING_ENABLED),\n  isEnabled: () => !!getItem(REACT_PROFILING_ENABLED),\n}\n\nexport default ReactProfilingMode\n","import {registerReactPartial} from '@github-ui/react-core/register-partial'\n\nimport {SecurityOverviewExportButton} from './SecurityOverviewExportButton'\n\nregisterReactPartial('security-overview-export-button', {\n  Component: SecurityOverviewExportButton,\n})\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  assertRelativePathOrSameOrigin(path)\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\nfunction assertRelativePathOrSameOrigin(path: string) {\n  if (process.env.NODE_ENV === 'test' && !window.location.origin) return\n  const url = new URL(path, window.location.origin)\n  if (url.origin !== window.location.origin) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetch(path, {...init, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetchJSON(path, {...init, headers})\n}\n","import {useState} from 'react'\nimport type {BrowserHistory, MemoryHistory} from '@remix-run/router'\nimport {Router} from 'react-router-dom'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\ntype Props = {\n  children: React.ReactNode\n  history: BrowserHistory | MemoryHistory\n}\n\nexport function PartialRouter({children, history}: Props) {\n  const [state, setState] = useState({\n    location: history.location,\n  })\n\n  useHydratedEffect(() => history.listen(setState), [history])\n\n  return (\n    <Router location={state.location} navigator={history}>\n      {children}\n    </Router>\n  )\n}\n\ntry{ PartialRouter.displayName ||= 'PartialRouter' } catch {}","// Think of this as the entry point into the framework\nimport React from 'react'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {BaseProviders} from './BaseProviders'\nimport type {BrowserHistory} from '@remix-run/router'\nimport {createMemoryHistory} from '@remix-run/router'\nimport {AppContextProvider} from './AppContextProvider'\nimport {PartialRouter} from './PartialRouter'\nimport {CommonElements} from './CommonElements'\nimport {createBrowserHistory} from './create-browser-history'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {usePartialAnchorProps} from './react-partial-anchor'\n\ninterface Props {\n  partialName: string\n  embeddedData: EmbeddedPartialData\n  Component: React.ComponentType\n  wasServerRendered: boolean\n  ssrError?: HTMLScriptElement\n  anchorElement?: ReactPartialAnchorElement | null\n}\n\nexport function PartialEntry({\n  partialName,\n  embeddedData,\n  Component,\n  wasServerRendered,\n  ssrError,\n  anchorElement,\n}: Props) {\n  // Create a ref to track the browser history:\n  const historyRef = React.useRef<BrowserHistory>()\n  const window = globalThis.window as Window | undefined\n\n  // For linking to work, we can just pass a dummy pathname here. We may consider plumbing the actual path in\n  if (!historyRef.current) {\n    historyRef.current = !window\n      ? createMemoryHistory({initialEntries: [{pathname: '/'}]})\n      : createBrowserHistory({window})\n  }\n  const history = historyRef.current\n  const partialAnchorProps = usePartialAnchorProps(anchorElement)\n\n  // Wrap the partial in an AppContextProvider and static Router so that react-core links\n  // will be functional.\n  return (\n    <BaseProviders appName={partialName} wasServerRendered={wasServerRendered}>\n      <AppContextProvider history={history} routes={[]}>\n        <PartialRouter history={history}>\n          <Component {...embeddedData.props} {...(partialAnchorProps as object)} />\n          <CommonElements ssrError={ssrError} />\n        </PartialRouter>\n      </AppContextProvider>\n    </BaseProviders>\n  )\n}\n\ntry{ PartialEntry.displayName ||= 'PartialEntry' } catch {}","import {target} from '@github/catalyst'\nimport {createRoot, hydrateRoot} from 'react-dom/client'\nimport type {createRoot as createRootType, hydrateRoot as hydrateRootType, Root} from 'react-dom/client'\nimport React from 'react'\nimport ReactProfilingMode from '@github-ui/react-profiling-mode'\nimport {EXPECTED_ERRORS} from './expected-errors'\nimport {sendStats} from '@github-ui/stats'\n\ntype ReactDOM = {\n  createRoot: typeof createRootType\n  hydrateRoot: typeof hydrateRootType\n}\n\nconst REACT_INVARIANT_ERROR_REGEX = /Minified React error #(?<invariant>\\d+)/\n\nexport abstract class ReactBaseElement<T> extends HTMLElement {\n  @target embeddedData: HTMLScriptElement | undefined\n  @target ssrError: HTMLScriptElement | undefined\n  @target reactRoot: HTMLElement | undefined\n  private root: Root | undefined\n\n  abstract nameAttribute: string\n  abstract getReactNode(embeddedData: T): Promise<React.ReactNode>\n\n  protected get name() {\n    return this.getAttribute(this.nameAttribute) as string\n  }\n\n  private get embeddedDataText() {\n    const text = this.embeddedData?.textContent\n\n    if (!text) {\n      throw new Error(`No embedded data provided for react element ${this.name}`)\n    }\n\n    return text\n  }\n\n  get hasSSRContent() {\n    return this.getAttribute('data-ssr') === 'true'\n  }\n\n  connectedCallback() {\n    this.renderReact()\n  }\n\n  disconnectedCallback() {\n    this.root?.unmount()\n    this.root = undefined\n  }\n\n  private async renderReact() {\n    if (!this.reactRoot) throw new Error('No react root provided')\n    let reactDom: ReactDOM = {\n      createRoot,\n      hydrateRoot,\n    }\n\n    // Override the react-dom import if we're in profiling mode\n    if (ReactProfilingMode.isEnabled()) {\n      reactDom = await this.getReactDomWithProfiling()\n    }\n\n    const embeddedData = JSON.parse(this.embeddedDataText) as T\n    const ssrErrorText = this.ssrError?.textContent\n    const node = await this.getReactNode(embeddedData)\n    const baseNode = <React.StrictMode>{node}</React.StrictMode>\n\n    if (ssrErrorText) {\n      this.logSSRError(ssrErrorText)\n    }\n\n    if (this.hasSSRContent) {\n      /**\n       * Styled-components automatically looks for style tags to hydrate on first page load, but will not detect them\n       * if they are added after the initial page load. This causes a hydration error because React isn't expecting\n       * a style tag within the app. To work around this, we need to manually move the style tags to the head before\n       * hydrating the app.\n       *\n       * During hydration, styled-components will create a new style tag which matches the one we moved to the head.\n       * This means that after hydration, we can safely remove the style tag we manually moved to the head.\n       */\n      const styles = this.querySelector('style[data-styled=\"true\"]')\n      if (styles) document.head.appendChild(styles)\n\n      // Hydrate the react app\n      // onRecoverableError is disabled until we have a react version with this fix in:\n      // https://github.com/facebook/react/pull/25692\n      this.root = reactDom.hydrateRoot(this.reactRoot, baseNode, {\n        onRecoverableError: error => {\n          if (!(error instanceof Error)) return\n\n          const match = REACT_INVARIANT_ERROR_REGEX.exec(error.message)\n          const invariant = String(match?.groups?.invariant)\n\n          sendStats({\n            incrementKey: 'REACT_HYDRATION_ERROR',\n            incrementTags: {\n              appName: this.name,\n              invariant,\n            },\n          })\n        },\n      })\n\n      // Remove the manually moved style tag after hydration\n      if (styles) {\n        // Wait until things are idle to remove the style tag. If we do it immediately, we can cause a flash of unstyled content.\n        requestIdleCallback(() => {\n          // styles could have already been removed by Turbo if a navigation happens quickly. Only remove it from the DOM if it's still there.\n          styles.parentElement?.removeChild(styles)\n        })\n      }\n    } else {\n      this.root = reactDom.createRoot(this.reactRoot)\n      this.root.render(baseNode)\n    }\n\n    this.classList.add('loaded')\n  }\n\n  private getReactDomWithProfiling() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return import('react-dom/profiling') as any as Promise<ReactDOM>\n  }\n\n  private logSSRError(ssrErrorText: string) {\n    if (EXPECTED_ERRORS[ssrErrorText]) {\n      // eslint-disable-next-line no-console\n      return console.error('SSR failed with an expected error:', EXPECTED_ERRORS[ssrErrorText])\n    }\n\n    try {\n      const error = JSON.parse(ssrErrorText) as PlatformJavascriptError\n      const stacktrace = parseFailbotStacktrace(error)\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', `${error.type}: ${error.value}\\n`, error, stacktrace)\n    } catch {\n      /**\n       * In the event we couldn't log the error, we should not break the application\n       */\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', ssrErrorText, 'unable to parse as json')\n    }\n  }\n}\n\nfunction parseFailbotStacktrace(error: PlatformJavascriptError) {\n  if (!error.stacktrace) return ''\n  let prefix = '\\n '\n  const stack = error.stacktrace.map((frame: PlatformStackframe) => {\n    const {function: func, filename, lineno, colno} = frame\n    const line = `${prefix} at ${func} (${filename}:${lineno}:${colno})`\n    prefix = ' '\n    return line\n  })\n  return stack.join('\\n')\n}\n\ntry{ REACT_INVARIANT_ERROR_REGEX.displayName ||= 'REACT_INVARIANT_ERROR_REGEX' } catch {}","import {announce} from '@github-ui/aria-live'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport {DownloadIcon} from '@primer/octicons-react'\nimport {Button, Spinner} from '@primer/react'\nimport {memo, useState} from 'react'\n\nexport interface SecurityOverviewExportButtonProps {\n  createExportUrl: string\n  errorBannerId?: string\n  successBannerId?: string\n  startedBannerId?: string\n  buttonSize?: 'small' | 'medium' | 'large'\n}\n\nexport interface CreateExportResponse {\n  jobStatusUrl: string\n  downloadExportUrl: string\n  error?: string\n}\n\nexport class ExportError extends Error {}\n\ninterface JobStatusResponse {\n  job: {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    error_message?: string\n  }\n}\n\nconst SmallSpinner = memo(() => <Spinner size={'small'} sx={{color: 'fg.default'}} />)\nSmallSpinner.displayName = 'SmallSpinner'\n\nexport function SecurityOverviewExportButton({\n  createExportUrl,\n  errorBannerId,\n  successBannerId,\n  startedBannerId,\n  buttonSize = 'small',\n}: SecurityOverviewExportButtonProps): JSX.Element {\n  const [state, setState] = useState<'stopped' | 'loading'>('stopped')\n  const loading = state === 'loading'\n\n  const loadingDescription =\n    startedBannerId == null\n      ? 'Generating your report. Stay on this page to automatically download the report.'\n      : \"Generating your report. You will receive an email when it's ready. Stay on this page to automatically download the report.\"\n\n  async function wait(ms: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, ms))\n  }\n\n  async function pollJobStatus(url: string): Promise<void> {\n    const response = await verifiedFetch(url)\n\n    if (response.status === 202) {\n      await wait(2000)\n      return pollJobStatus(url)\n    } else if (response.status > 399) {\n      const responseJson = (await response.json()) as JobStatusResponse\n      throw new ExportError(\n        responseJson?.job?.error_message ||\n          \"We couldn't generate your report. Please try again later. If the problem persists, please contact support.\",\n      )\n    }\n  }\n\n  async function handleClick(e: React.MouseEvent<HTMLButtonElement>): Promise<void> {\n    e.preventDefault()\n\n    if (!loading) {\n      setState('loading')\n\n      const errorBanner = errorBannerId ? document.getElementById(errorBannerId) : null\n      if (errorBanner) {\n        errorBanner.hidden = true\n      }\n\n      const successBanner = successBannerId ? document.getElementById(successBannerId) : null\n      if (successBanner) {\n        successBanner.hidden = true\n      }\n\n      const startedBanner = startedBannerId ? document.getElementById(startedBannerId) : null\n      if (startedBanner) {\n        startedBanner.hidden = true\n        announce(startedBanner.querySelector('p:last-child')?.textContent || loadingDescription)\n      } else {\n        announce(loadingDescription)\n      }\n\n      // Wait a brief moment for the loading state announcement to start.\n      // Solves an issue where the loading state announcement happens after the error banner role=status announcement\n      // when the error occurs immediately.\n      await wait(10)\n\n      try {\n        if (startedBanner) {\n          startedBanner.hidden = false\n        }\n\n        // Start the export job\n        const response = await verifiedFetch(createExportUrl, {method: 'POST'})\n        const {jobStatusUrl, downloadExportUrl, error} = await (response.json() as Promise<CreateExportResponse>)\n\n        if (error) {\n          throw new ExportError(error)\n        }\n\n        // Wait for the job to finish\n        await pollJobStatus(jobStatusUrl)\n\n        // Download the export\n        window.location.assign(downloadExportUrl)\n\n        const successAnnouncement =\n          startedBannerId == null\n            ? 'Your report is ready and the download has started.'\n            : 'Your report is ready and the download has started. An email with the report has also been sent to you.'\n\n        announce(successAnnouncement)\n        if (successBanner) {\n          if (startedBanner) {\n            startedBanner.hidden = true\n          }\n          successBanner.hidden = false\n        }\n      } catch (err) {\n        const errorText =\n          err instanceof ExportError\n            ? err.message\n            : 'Something went wrong while exporting your data. Please try again later. If the problem persists, please contact support.'\n\n        announce(errorText)\n        if (errorBanner) {\n          const errorBannerTextContainer = errorBanner.querySelector('p:last-child')\n          if (errorBannerTextContainer) {\n            errorBannerTextContainer.textContent = errorText\n          }\n\n          errorBanner.hidden = false\n          if (startedBanner) {\n            startedBanner.hidden = true\n          }\n        }\n      } finally {\n        setState('stopped')\n      }\n    }\n  }\n\n  return (\n    <>\n      <Button\n        size={buttonSize}\n        onClick={handleClick}\n        aria-disabled={loading}\n        {...(loading ? {'aria-describedby': 'so-export-loading-description'} : {})}\n        leadingVisual={loading ? SmallSpinner : DownloadIcon}\n        variant={loading ? 'invisible' : 'default'}\n        data-state={state}\n        sx={{\n          // For some reason '[data-state=\"loading\"]' alone gets scrubbed\n          ':not([data-state=\"stopped\"])': {\n            ':hover,:active': {bg: 'transparent'},\n          },\n        }}\n      >\n        Export CSV\n      </Button>\n      {loading && (\n        <span id=\"so-export-loading-description\" hidden={true}>\n          {loadingDescription}\n        </span>\n      )}\n    </>\n  )\n}\n\ntry{ SecurityOverviewExportButton.displayName ||= 'SecurityOverviewExportButton' } catch {}"],"names":["announceFromElement","el","options","isFeatureEnabled","announce","getTextContent","element","undefined","liveRegionAnnounceFromElement","politeness","assertive","message","Element","prototype","document","body","ariaNotify","interrupt","liveRegionAnnounce","setContainerContent","container","ssrSafeDocument","querySelector","textContent","getAttribute","innerText","trim","DeferredRegistry","register","name","registration","entry","registrationEntries","resolve","promise","Promise","getRegistration","Deferred","constructor","usePartialAnchorProps","anchorElement","useEffect","anchor","disabled","classList","remove","reactPartialAnchor","__wrapperElement","useExternalAnchor","ref","useRef","open","setOpen","useState","onClick","useCallback","current","setAttribute","toString","useOnAnchorClick","addEventListener","removeEventListener","partialRegistry","ReactPartialElement","ReactBaseElement","getReactNode","embeddedData","appName","Component","closest","PartialEntry","partialName","wasServerRendered","hasSSRContent","ssrError","nameAttribute","registerReactPartial","controller","getItem","setItem","removeItem","safeStorage","REACT_PROFILING_ENABLED","enable","disable","isEnabled","SecurityOverviewExportButton","verifiedFetch","path","init","assertRelativePathOrSameOrigin","url","URL","window","location","origin","headers","fetch","verifiedFetchJSON","Accept","JSON","stringify","reactFetch","reactFetchJSON","PartialRouter","children","history","state","setState","useHydratedEffect","listen","Router","navigator","displayName","historyRef","React","globalThis","createBrowserHistory","createMemoryHistory","initialEntries","pathname","partialAnchorProps","BaseProviders","AppContextProvider","routes","props","CommonElements","REACT_INVARIANT_ERROR_REGEX","HTMLElement","embeddedDataText","text","connectedCallback","renderReact","disconnectedCallback","root","unmount","reactRoot","reactDom","createRoot","hydrateRoot","ReactProfilingMode","getReactDomWithProfiling","parse","ssrErrorText","node","baseNode","logSSRError","styles","head","appendChild","onRecoverableError","error","Error","match","exec","invariant","String","groups","sendStats","incrementKey","incrementTags","requestIdleCallback","parentElement","removeChild","render","add","EXPECTED_ERRORS","console","stacktrace","parseFailbotStacktrace","prefix","stack","map","function","func","filename","lineno","colno","frame","line","join","type","value","target","ExportError","SmallSpinner","memo","Spinner","size","sx","color","createExportUrl","errorBannerId","successBannerId","startedBannerId","buttonSize","loading","loadingDescription","wait","ms","setTimeout","pollJobStatus","response","status","responseJson","json","job","error_message","handleClick","e","preventDefault","errorBanner","getElementById","hidden","successBanner","startedBanner","method","jobStatusUrl","downloadExportUrl","assign","successAnnouncement","err","errorText","errorBannerTextContainer","Button","aria-disabled","leadingVisual","DownloadIcon","variant","data-state","bg","span","id"],"sourceRoot":""}