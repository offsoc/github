<%# erblint:counter DeprecatedComponentsCounter 1 %>
<%# erblint:counter ButtonComponentMigrationCounter 2 %>
<%# view is an instance of Settings::SshKeysView %>
<% page_info title: "SSH and GPG keys" %>

<%= render layout: "settings/settings" do %>
  <%= render Primer::Beta::Subhead.new do |component| %>
    <% component.with_heading(tag: :h2) do %>SSH keys<% end %>
    <% component.with_actions do %>
      <% if current_user.change_ssh_key_enabled? && !view.ssh_disabled? %>
        <a href="<%= new_settings_keys_ssh_key_path %>" class="btn btn-sm btn-primary">
          New SSH key
        </a>
      <% end %>
    <% end %>
  <% end %>

  <% if current_user.public_keys.any? || current_user.git_signing_ssh_public_keys.any? %>
    <p>
      This is a list of SSH keys associated with your account.
      <% if current_user.change_ssh_key_enabled? %>
        Remove any keys that you do not recognize.
      <% end %>
    </p>
    <% if view.ssh_keys.any? %>
      <h3 class="mb-1 f4">Authentication keys</h3>
      <ul class="Box border-bottom-0 mb-3">
        <% view.ssh_keys.each do |ssh_key| %>
          <%= render partial: "settings/keys/ssh_keys/ssh_key", locals: {
            selected: ssh_key == public_key, ssh_key: ssh_key
          } %>
        <% end %>
      </ul>
    <% end %>
    <% if view.git_signing_ssh_public_keys.any? %>
      <h3 class="mb-1 f4">Signing keys</h3>
      <ul class="Box border-bottom-0 mb-3">
        <% view.git_signing_ssh_public_keys.each do |ssh_key| %>
          <%= render partial: "settings/keys/ssh_keys/git_signing_ssh_public_key", locals: {
            selected: ssh_key == public_key, ssh_key: ssh_key
          } %>
        <% end %>
      </ul>
    <% end %>
  <% else %>
    <p>There are no SSH keys associated with your account.</p>
  <% end %>

  <% if view.ssh_disabled? %>
    <p class="note">
    Git SSH access is disabled for all repositories on this appliance,
    <%= contact_support_snippet(true) %>
    to request changes.
    </p>
  <% else %>
    <p class="f6">
      Check out our guide to
      <%= render(Primer::Beta::Link.new(href: "#{GitHub.help_url}/authentication/connecting-to-github-with-ssh", classes: "Link--inTextBlock")) { "connecting to GitHub using SSH keys" } %>
      or troubleshoot
      <%= render(Primer::Beta::Link.new(href: "#{GitHub.help_url}/authentication/troubleshooting-ssh", classes: "Link--inTextBlock")) { "common SSH problems" } %>.
    </p>
  <% end %>

  <% if !current_user.change_ssh_key_enabled? %>
    <p class="note">
    SSH keys are managed via your identity provider,
    <%= contact_support_snippet(true) %>
    to request changes.
    </p>
  <% end %>

  <% if view.show_ssh_cas? %>
    <%= render Primer::Beta::Subhead.new(spacious: true) do |component| %>
      <% component.with_heading(tag: :h2) do %>SSH certificate authorities<% end %>
    <% end %>

    <p>
      SSH certificate authorities are managed by organizations or enterprises. A CA can issue
      certificates that you can use for Git authentication over SSH.
    </p>

    <% view.affiliated_cas_via_org_membership.each do |cas| %>
      <div class="border-top">
        <div class="TableObject py-3">
          <div class="TableObject-item">
            <%= image_tag(
              cas.first.owner.primary_avatar_url(57),
              height: 57,
              width: 57,
              alt: cas.first.owner.name,
              class: "rounded-2 mr-2",
            ) %>
          </div>
          <div class="TableObject-item TableObject-item--primary px-3 ">
            <h3 class="f4"><%= view.ca_owner_name(cas.first) %></h3>
            <% cas.each do |ca| %>
              <p class="text-small color-fg-muted mb-0">
                <strong>SHA256 Fingerprint:</strong>
                <code class="color-fg-muted"><%= ca.base64_fingerprint %></code><br>
              </p>
            <% end %>
            <p class="m-0">
              <%= cas.one? ? "This" : "These" %> <%= "CA".pluralize(cas.size) %> can issue
              certificates for you because you are a member of the
              <%= view.ca_owner_name_and_type(cas.first) %>.
            </p>
            <% if cas.first.owner_type == "Business" && cas.first.owner.ssh_certificate_user_owned_repo_access_enabled? %>
              <p class="m-0">
                Certificates from <%= cas.one? ? "this" : "these" %> <%= "CA".pluralize(cas.size) %> can access repositories in the <%= cas.first.owner.slug %> enterprise as well as your <%= current_user.display_login %> repositories.
              </p>
            <% else %>
              <p class="m-0">
                Certificates from <%= cas.one? ? "this" : "these" %> <%= "CA".pluralize(cas.size) %> can access repositories in the <%= view.ca_owner_name_and_type(cas.first) %>.
              </p>
            <% end %>
          </div>
        </div>
      </div>
    <% end %>
    <% view.affiliated_cas_via_repo_membership.each do |cas, repos| %>
      <div class="border-top">
          <div class="TableObject py-3">
            <div class="TableObject-item">
              <%= image_tag(
                cas.first.owner.primary_avatar_url(57),
                height: 57,
                width: 57,
                alt: cas.first.owner.name,
                class: "rounded-2 mr-2",
              ) %>
            </div>
            <div class="TableObject-item TableObject-item--primary px-3 ">
              <h3 class="f4"><%= view.ca_owner_name(cas.first) %></h3>
              <% cas.each do |ca| %>
                <p class="text-small color-fg-muted mb-0">
                  <strong>SHA256 Fingerprint:</strong>
                  <code class="color-fg-muted"><%= ca.base64_fingerprint %></code><br>
                </p>
              <% end %>
              <p>
                <%= cas.one? ? "This" : "These" %> <%= "CA".pluralize(cas.size) %> can issue
                certificates for you because you are a collaborator on the
                <%= repos.map(&:name_with_display_owner).to_sentence %> <%= "repository".pluralize(repos.size) %>.
              </p>
            </div>
          </div>
        </div>
    <% end %>
  <% end %>

  <%= render Primer::Beta::Subhead.new(spacious: true) do |component| %>
    <% component.with_heading(tag: :h2) do %>GPG keys<% end %>
    <% component.with_actions do %>
      <% if current_user.change_gpg_key_enabled? %>
        <a href="<%= new_settings_keys_gpg_key_path %>" class="btn btn-sm btn-primary">
          New GPG key
        </a>
      <% end %>
    <% end %>
  <% end %>

  <% if current_user.gpg_keys.any? %>
    <p>
      This is a list of GPG keys associated with your account.
      <% if current_user.change_gpg_key_enabled? %>
        Remove any keys that you do not recognize.
      <% end %>
    </p>
    <ul class="Box mb-3">
      <% current_user.gpg_keys.primary_keys.with_subkeys.each do |gpg_key| %>
        <%= render "settings/keys/gpg_keys/gpg_key", gpg_key: gpg_key %>
      <% end %>
    </ul>
  <% else %>
    <p>
      There are no GPG keys associated with your account.
    </p>
  <% end %>

  <p class="f6">
    Learn how to
    <%= render(Primer::Beta::Link.new(href: "#{GitHub.help_url}/authentication/managing-commit-signature-verification", classes: "Link--inTextBlock")) { "generate a GPG key and add it to your account" } %>.
  </p>

  <% if !current_user.change_gpg_key_enabled? %>
    <p class="note">
      GPG keys are managed in your Identity Provider,
      <%= contact_support_snippet(true) %> to request changes.
    </p>
  <% end %>

  <%= render Primer::Beta::Subhead.new(spacious: true) do |component| %>
    <% component.with_heading(tag: :h2) do %>
      Vigilant mode
    <% end %>
  <% end %>
  <div class="form-checkbox">
    <% cvs_enrolled = current_user.commit_verification_status_enabled? %>
    <%= form_tag(
      settings_keys_commit_verification_status_path,
      method: :put,
      "data-autosubmit": true,
      "aria-label": "Enable Vigilant mode",
      "aria-describedby": "commit_verification_status_descriptor",
    ) do %>
      <label>
        <%= check_box_tag "toggle_commit_verification_status", !cvs_enrolled, cvs_enrolled %>
        Flag unsigned commits as unverified
      </label>

      <p id="commit_verification_status_descriptor" class="note">
        This will include any commit attributed to your account but not signed with your GPG or
        S/MIME key.
        <br>Note that this will include your existing unsigned commits.
        <br>
        <%= commit_signature_verification_help_link %>.
      </p>

      <noscript>
        <p><%= render Primer::ButtonComponent.new(
          variant: :small,
          scheme: :primary,
          type: :submit,
        ) do %>Save changes<% end %></p>
      </noscript>
    <% end %>
  </div>
<% end %>
