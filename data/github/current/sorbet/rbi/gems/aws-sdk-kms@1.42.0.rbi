# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `aws-sdk-kms` gem.
# Please instead update this file by running `bin/tapioca gem aws-sdk-kms`.

class Aws::EmptyStructure < ::Struct
  include ::Aws::Structure
end

# This module provides support for AWS Key Management Service. This module is available in the
# `aws-sdk-kms` gem.
#
# # Client
#
# The {Client} class provides one method for each API operation. Operation
# methods each accept a hash of request parameters and return a response
# structure.
#
#     kms = Aws::KMS::Client.new
#     resp = kms.cancel_key_deletion(params)
#
# See {Client} for more information.
#
# # Errors
#
# Errors returned from AWS Key Management Service are defined in the
# {Errors} module and all extend {Errors::ServiceError}.
#
#     begin
#       # do stuff
#     rescue Aws::KMS::Errors::ServiceError
#       # rescues all AWS Key Management Service API errors
#     end
#
# See {Errors} for more information.
module Aws::KMS; end

# An API client for KMS.  To construct a client, you need to configure a `:region` and `:credentials`.
#
#     client = Aws::KMS::Client.new(
#       region: region_name,
#       credentials: credentials,
#       # ...
#     )
#
# For details on configuring region and credentials see
# the [developer guide](/sdk-for-ruby/v3/developer-guide/setup-config.html).
#
# See {#initialize} for a full list of supported configuration options.
class Aws::KMS::Client < ::Seahorse::Client::Base
  include ::Aws::ClientStubs

  # @overload initialize
  # @return [Client] a new instance of Client
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#334
  def initialize(*args); end

  # @api private
  # @param params [{}]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#6227
  def build_request(operation_name, params = T.unsafe(nil)); end

  # Cancels the deletion of a customer master key (CMK). When this
  # operation succeeds, the key state of the CMK is `Disabled`. To enable
  # the CMK, use EnableKey.
  #
  # For more information about scheduling and canceling deletion of a CMK,
  # see [Deleting Customer Master Keys][1] in the *AWS Key Management
  # Service Developer Guide*.
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][2] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: No. You cannot perform this operation on a CMK
  # in a different AWS account.
  #
  # **Required permissions**\: [kms:CancelKeyDeletion][3] (key policy)
  #
  # **Related operations**\: ScheduleKeyDeletion
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To cancel deletion of a customer master key (CMK)
  #
  #   # The following example cancels deletion of the specified CMK.
  #
  #   resp = client.cancel_key_deletion({
  #   key_id: "1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the CMK whose deletion you are canceling. You can use the key ID or the Amazon Resource Name (ARN) of the CMK.
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   key_id: "arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab", # The ARN of the CMK whose deletion you canceled.
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.cancel_key_deletion({
  #   key_id: "KeyIdType", # required
  #   })
  # @example Response structure
  #
  #   resp.key_id #=> String
  # @option params
  # @overload cancel_key_deletion
  # @param params [Hash] ({})
  # @return [Types::CancelKeyDeletionResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::CancelKeyDeletionResponse#key_id #key_id} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CancelKeyDeletion AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#412
  def cancel_key_deletion(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Connects or reconnects a [custom key store][1] to its associated AWS
  # CloudHSM cluster.
  #
  # The custom key store must be connected before you can create customer
  # master keys (CMKs) in the key store or use the CMKs it contains. You
  # can disconnect and reconnect a custom key store at any time.
  #
  # To connect a custom key store, its associated AWS CloudHSM cluster
  # must have at least one active HSM. To get the number of active HSMs in
  # a cluster, use the [DescribeClusters][2] operation. To add HSMs to the
  # cluster, use the [CreateHsm][3] operation. Also, the [ `kmsuser`
  # crypto user][4] (CU) must not be logged into the cluster. This
  # prevents AWS KMS from using this account to log in.
  #
  # The connection process can take an extended amount of time to
  # complete; up to 20 minutes. This operation starts the connection
  # process, but it does not wait for it to complete. When it succeeds,
  # this operation quickly returns an HTTP 200 response and a JSON object
  # with no properties. However, this response does not indicate that the
  # custom key store is connected. To get the connection state of the
  # custom key store, use the DescribeCustomKeyStores operation.
  #
  # During the connection process, AWS KMS finds the AWS CloudHSM cluster
  # that is associated with the custom key store, creates the connection
  # infrastructure, connects to the cluster, logs into the AWS CloudHSM
  # client as the `kmsuser` CU, and rotates its password.
  #
  # The `ConnectCustomKeyStore` operation might fail for various reasons.
  # To find the reason, use the DescribeCustomKeyStores operation and see
  # the `ConnectionErrorCode` in the response. For help interpreting the
  # `ConnectionErrorCode`, see CustomKeyStoresListEntry.
  #
  # To fix the failure, use the DisconnectCustomKeyStore operation to
  # disconnect the custom key store, correct the error, use the
  # UpdateCustomKeyStore operation if necessary, and then use
  # `ConnectCustomKeyStore` again.
  #
  # If you are having trouble connecting or disconnecting a custom key
  # store, see [Troubleshooting a Custom Key Store][5] in the *AWS Key
  # Management Service Developer Guide*.
  #
  # **Cross-account use**\: No. You cannot perform this operation on a
  # custom key store in a different AWS account.
  #
  # **Required permissions**\: [kms:ConnectCustomKeyStore][6] (IAM policy)
  #
  # **Related operations**
  #
  # * CreateCustomKeyStore
  #
  # * DeleteCustomKeyStore
  #
  # * DescribeCustomKeyStores
  #
  # * DisconnectCustomKeyStore
  #
  # * UpdateCustomKeyStore
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html
  # [2]: https://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html
  # [3]: https://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_CreateHsm.html
  # [4]: https://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser
  # [5]: https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html
  # [6]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.connect_custom_key_store({
  #   custom_key_store_id: "CustomKeyStoreIdType", # required
  #   })
  # @option params
  # @overload connect_custom_key_store
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ConnectCustomKeyStore AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#501
  def connect_custom_key_store(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Creates a friendly name for a customer master key (CMK). You can use
  # an alias to identify a CMK in the AWS KMS console, in the DescribeKey
  # operation and in [cryptographic operations][1], such as Encrypt and
  # GenerateDataKey.
  #
  # You can also change the CMK that's associated with the alias
  # (UpdateAlias) or delete the alias (DeleteAlias) at any time. These
  # operations don't affect the underlying CMK.
  #
  # You can associate the alias with any customer managed CMK in the same
  # AWS Region. Each alias is associated with only on CMK at a time, but a
  # CMK can have multiple aliases. A valid CMK is required. You can't
  # create an alias without a CMK.
  #
  # The alias must be unique in the account and Region, but you can have
  # aliases with the same name in different Regions. For detailed
  # information about aliases, see [Using aliases][2] in the *AWS Key
  # Management Service Developer Guide*.
  #
  # This operation does not return a response. To get the alias that you
  # created, use the ListAliases operation.
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][3] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: No. You cannot perform this operation on an
  # alias in a different AWS account.
  #
  # **Required permissions**
  #
  # * [kms:CreateAlias][4] on the alias (IAM policy).
  #
  # * [kms:CreateAlias][4] on the CMK (key policy).
  #
  # For details, see [Controlling access to aliases][5] in the *AWS Key
  # Management Service Developer Guide*.
  #
  # **Related operations:**
  #
  # * DeleteAlias
  #
  # * ListAliases
  #
  # * UpdateAlias
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-alias.html
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [4]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  # [5]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-alias.html#alias-access
  #
  # @example Example: To create an alias
  #
  #   # The following example creates an alias for the specified customer master key (CMK).
  #
  #   resp = client.create_alias({
  #   alias_name: "alias/ExampleAlias", # The alias to create. Aliases must begin with 'alias/'. Do not use aliases that begin with 'alias/aws' because they are reserved for use by AWS.
  #   target_key_id: "1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the CMK whose alias you are creating. You can use the key ID or the Amazon Resource Name (ARN) of the CMK.
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.create_alias({
  #   alias_name: "AliasNameType", # required
  #   target_key_id: "KeyIdType", # required
  #   })
  # @option params
  # @option params
  # @overload create_alias
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CreateAlias AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#622
  def create_alias(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Creates a [custom key store][1] that is associated with an [AWS
  # CloudHSM cluster][2] that you own and manage.
  #
  # This operation is part of the [Custom Key Store feature][1] feature in
  # AWS KMS, which combines the convenience and extensive integration of
  # AWS KMS with the isolation and control of a single-tenant key store.
  #
  # Before you create the custom key store, you must assemble the required
  # elements, including an AWS CloudHSM cluster that fulfills the
  # requirements for a custom key store. For details about the required
  # elements, see [Assemble the Prerequisites][3] in the *AWS Key
  # Management Service Developer Guide*.
  #
  # When the operation completes successfully, it returns the ID of the
  # new custom key store. Before you can use your new custom key store,
  # you need to use the ConnectCustomKeyStore operation to connect the new
  # key store to its AWS CloudHSM cluster. Even if you are not going to
  # use your custom key store immediately, you might want to connect it to
  # verify that all settings are correct and then disconnect it until you
  # are ready to use it.
  #
  # For help with failures, see [Troubleshooting a Custom Key Store][4] in
  # the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: No. You cannot perform this operation on a
  # custom key store in a different AWS account.
  #
  # **Required permissions**\: [kms:CreateCustomKeyStore][5] (IAM policy).
  #
  # **Related operations:**
  #
  # * ConnectCustomKeyStore
  #
  # * DeleteCustomKeyStore
  #
  # * DescribeCustomKeyStores
  #
  # * DisconnectCustomKeyStore
  #
  # * UpdateCustomKeyStore
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html
  # [2]: https://docs.aws.amazon.com/cloudhsm/latest/userguide/clusters.html
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/create-keystore.html#before-keystore
  # [4]: https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html
  # [5]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.create_custom_key_store({
  #   custom_key_store_name: "CustomKeyStoreNameType", # required
  #   cloud_hsm_cluster_id: "CloudHsmClusterIdType", # required
  #   trust_anchor_certificate: "TrustAnchorCertificateType", # required
  #   key_store_password: "KeyStorePasswordType", # required
  #   })
  # @example Response structure
  #
  #   resp.custom_key_store_id #=> String
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload create_custom_key_store
  # @param params [Hash] ({})
  # @return [Types::CreateCustomKeyStoreResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::CreateCustomKeyStoreResponse#custom_key_store_id #custom_key_store_id} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CreateCustomKeyStore AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#735
  def create_custom_key_store(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Adds a grant to a customer master key (CMK). The grant allows the
  # grantee principal to use the CMK when the conditions specified in the
  # grant are met. When setting permissions, grants are an alternative to
  # key policies.
  #
  # To create a grant that allows a [cryptographic operation][1] only when
  # the request includes a particular [encryption context][2], use the
  # `Constraints` parameter. For details, see GrantConstraints.
  #
  # You can create grants on symmetric and asymmetric CMKs. However, if
  # the grant allows an operation that the CMK does not support,
  # `CreateGrant` fails with a `ValidationException`.
  #
  # * Grants for symmetric CMKs cannot allow operations that are not
  #   supported for symmetric CMKs, including Sign, Verify, and
  #   GetPublicKey. (There are limited exceptions to this rule for legacy
  #   operations, but you should not create a grant for an operation that
  #   AWS KMS does not support.)
  #
  # * Grants for asymmetric CMKs cannot allow operations that are not
  #   supported for asymmetric CMKs, including operations that [generate
  #   data keys][3] or [data key pairs][4], or operations related to
  #   [automatic key rotation][5], [imported key material][6], or CMKs in
  #   [custom key stores][7].
  #
  # * Grants for asymmetric CMKs with a `KeyUsage` of `ENCRYPT_DECRYPT`
  #   cannot allow the Sign or Verify operations. Grants for asymmetric
  #   CMKs with a `KeyUsage` of `SIGN_VERIFY` cannot allow the Encrypt or
  #   Decrypt operations.
  #
  # * Grants for asymmetric CMKs cannot include an encryption context
  #   grant constraint. An encryption context is not supported on
  #   asymmetric CMKs.
  #
  # For information about symmetric and asymmetric CMKs, see [Using
  # Symmetric and Asymmetric CMKs][8] in the *AWS Key Management Service
  # Developer Guide*. For more information about grants, see [Grants][9]
  # in the <i> <i>AWS Key Management Service Developer Guide</i> </i>.
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][10] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: Yes. To perform this operation on a CMK in a
  # different AWS account, specify the key ARN in the value of the `KeyId`
  # parameter.
  #
  # **Required permissions**\: [kms:CreateGrant][11] (key policy)
  #
  # **Related operations:**
  #
  # * ListGrants
  #
  # * ListRetirableGrants
  #
  # * RetireGrant
  #
  # * RevokeGrant
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context
  # [3]: https://docs.aws.amazon.com/kms/latest/APIReference/API_GenerateDataKey
  # [4]: https://docs.aws.amazon.com/kms/latest/APIReference/API_GenerateDataKeyPair
  # [5]: https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html
  # [6]: https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html
  # [7]: https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html
  # [8]: https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html
  # [9]: https://docs.aws.amazon.com/kms/latest/developerguide/grants.html
  # [10]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [11]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To create a grant
  #
  #   # The following example creates a grant that allows the specified IAM role to encrypt data with the specified customer
  #   # master key (CMK).
  #
  #   resp = client.create_grant({
  #   grantee_principal: "arn:aws:iam::111122223333:role/ExampleRole", # The identity that is given permission to perform the operations specified in the grant.
  #   key_id: "arn:aws:kms:us-east-2:444455556666:key/1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the CMK to which the grant applies. You can use the key ID or the Amazon Resource Name (ARN) of the CMK.
  #   operations: [
  #   "Encrypt",
  #   "Decrypt",
  #   ], # A list of operations that the grant allows.
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   grant_id: "0c237476b39f8bc44e45212e08498fbe3151305030726c0590dd8d3e9f3d6a60", # The unique identifier of the grant.
  #   grant_token: "AQpAM2RhZTk1MGMyNTk2ZmZmMzEyYWVhOWViN2I1MWM4Mzc0MWFiYjc0ZDE1ODkyNGFlNTIzODZhMzgyZjBlNGY3NiKIAgEBAgB4Pa6VDCWW__MSrqnre1HIN0Grt00ViSSuUjhqOC8OT3YAAADfMIHcBgkqhkiG9w0BBwaggc4wgcsCAQAwgcUGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMmqLyBTAegIn9XlK5AgEQgIGXZQjkBcl1dykDdqZBUQ6L1OfUivQy7JVYO2-ZJP7m6f1g8GzV47HX5phdtONAP7K_HQIflcgpkoCqd_fUnE114mSmiagWkbQ5sqAVV3ov-VeqgrvMe5ZFEWLMSluvBAqdjHEdMIkHMlhlj4ENZbzBfo9Wxk8b8SnwP4kc4gGivedzFXo-dwN8fxjjq_ZZ9JFOj2ijIbj5FyogDCN0drOfi8RORSEuCEmPvjFRMFAwcmwFkN2NPp89amA", # The grant token.
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.create_grant({
  #   key_id: "KeyIdType", # required
  #   grantee_principal: "PrincipalIdType", # required
  #   retiring_principal: "PrincipalIdType",
  #   operations: ["Decrypt"], # required, accepts Decrypt, Encrypt, GenerateDataKey, GenerateDataKeyWithoutPlaintext, ReEncryptFrom, ReEncryptTo, Sign, Verify, GetPublicKey, CreateGrant, RetireGrant, DescribeKey, GenerateDataKeyPair, GenerateDataKeyPairWithoutPlaintext
  #   constraints: {
  #   encryption_context_subset: {
  #   "EncryptionContextKey" => "EncryptionContextValue",
  #   },
  #   encryption_context_equals: {
  #   "EncryptionContextKey" => "EncryptionContextValue",
  #   },
  #   },
  #   grant_tokens: ["GrantTokenType"],
  #   name: "GrantNameType",
  #   })
  # @example Response structure
  #
  #   resp.grant_token #=> String
  #   resp.grant_id #=> String
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload create_grant
  # @param params [Hash] ({})
  # @return [Types::CreateGrantResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::CreateGrantResponse#grant_token #grant_token} => String
  #   * {Types::CreateGrantResponse#grant_id #grant_id} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CreateGrant AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#960
  def create_grant(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Creates a unique customer managed [customer master key][1] (CMK) in
  # your AWS account and Region.
  #
  # You can use the `CreateKey` operation to create symmetric or
  # asymmetric CMKs.
  #
  # * **Symmetric CMKs** contain a 256-bit symmetric key that never leaves
  #   AWS KMS unencrypted. To use the CMK, you must call AWS KMS. You can
  #   use a symmetric CMK to encrypt and decrypt small amounts of data,
  #   but they are typically used to generate [data keys][2] and [data
  #   keys pairs][3]. For details, see GenerateDataKey and
  #   GenerateDataKeyPair.
  #
  # * **Asymmetric CMKs** can contain an RSA key pair or an Elliptic Curve
  #   (ECC) key pair. The private key in an asymmetric CMK never leaves
  #   AWS KMS unencrypted. However, you can use the GetPublicKey operation
  #   to download the public key so it can be used outside of AWS KMS.
  #   CMKs with RSA key pairs can be used to encrypt or decrypt data or
  #   sign and verify messages (but not both). CMKs with ECC key pairs can
  #   be used only to sign and verify messages.
  #
  # For information about symmetric and asymmetric CMKs, see [Using
  # Symmetric and Asymmetric CMKs][4] in the *AWS Key Management Service
  # Developer Guide*.
  #
  # To create different types of CMKs, use the following guidance:
  #
  # Asymmetric CMKs
  #
  # : To create an asymmetric CMK, use the `CustomerMasterKeySpec`
  #   parameter to specify the type of key material in the CMK. Then, use
  #   the `KeyUsage` parameter to determine whether the CMK will be used
  #   to encrypt and decrypt or sign and verify. You can't change these
  #   properties after the CMK is created.
  #
  #
  #
  # Symmetric CMKs
  #
  # : When creating a symmetric CMK, you don't need to specify the
  #   `CustomerMasterKeySpec` or `KeyUsage` parameters. The default value
  #   for `CustomerMasterKeySpec`, `SYMMETRIC_DEFAULT`, and the default
  #   value for `KeyUsage`, `ENCRYPT_DECRYPT`, are the only valid values
  #   for symmetric CMKs.
  #
  #
  #
  # Imported Key Material
  #
  # : To import your own key material, begin by creating a symmetric CMK
  #   with no key material. To do this, use the `Origin` parameter of
  #   `CreateKey` with a value of `EXTERNAL`. Next, use
  #   GetParametersForImport operation to get a public key and import
  #   token, and use the public key to encrypt your key material. Then,
  #   use ImportKeyMaterial with your import token to import the key
  #   material. For step-by-step instructions, see [Importing Key
  #   Material][5] in the <i> <i>AWS Key Management Service Developer
  #   Guide</i> </i>. You cannot import the key material into an
  #   asymmetric CMK.
  #
  #
  #
  # Custom Key Stores
  #
  # : To create a symmetric CMK in a [custom key store][6], use the
  #   `CustomKeyStoreId` parameter to specify the custom key store. You
  #   must also use the `Origin` parameter with a value of `AWS_CLOUDHSM`.
  #   The AWS CloudHSM cluster that is associated with the custom key
  #   store must have at least two active HSMs in different Availability
  #   Zones in the AWS Region.
  #
  #   You cannot create an asymmetric CMK in a custom key store. For
  #   information about custom key stores in AWS KMS see [Using Custom Key
  #   Stores][6] in the <i> <i>AWS Key Management Service Developer
  #   Guide</i> </i>.
  #
  # **Cross-account use**\: No. You cannot use this operation to create a
  # CMK in a different AWS account.
  #
  # **Required permissions**\: [kms:CreateKey][7] (IAM policy). To use the
  # `Tags` parameter, [kms:TagResource][7] (IAM policy). For examples and
  # information about related permissions, see [Allow a user to create
  # CMKs][8] in the *AWS Key Management Service Developer Guide*.
  #
  # **Related operations:**
  #
  # * DescribeKey
  #
  # * ListKeys
  #
  # * ScheduleKeyDeletion
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master-keys
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#data-keys
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#data-key-pairs
  # [4]: https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html
  # [5]: https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html
  # [6]: https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html
  # [7]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  # [8]: https://docs.aws.amazon.com/kms/latest/developerguide/iam-policies.html#iam-policy-example-create-key
  #
  # @example Example: To create a customer master key (CMK)
  #
  #   # The following example creates a CMK.
  #
  #   resp = client.create_key({
  #   tags: [
  #   {
  #   tag_key: "CreatedBy",
  #   tag_value: "ExampleUser",
  #   },
  #   ], # One or more tags. Each tag consists of a tag key and a tag value.
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   key_metadata: {
  #   aws_account_id: "111122223333",
  #   arn: "arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab",
  #   creation_date: Time.parse("2017-07-05T14:04:55-07:00"),
  #   description: "",
  #   enabled: true,
  #   key_id: "1234abcd-12ab-34cd-56ef-1234567890ab",
  #   key_manager: "CUSTOMER",
  #   key_state: "Enabled",
  #   key_usage: "ENCRYPT_DECRYPT",
  #   origin: "AWS_KMS",
  #   }, # An object that contains information about the CMK created by this operation.
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.create_key({
  #   policy: "PolicyType",
  #   description: "DescriptionType",
  #   key_usage: "SIGN_VERIFY", # accepts SIGN_VERIFY, ENCRYPT_DECRYPT
  #   customer_master_key_spec: "RSA_2048", # accepts RSA_2048, RSA_3072, RSA_4096, ECC_NIST_P256, ECC_NIST_P384, ECC_NIST_P521, ECC_SECG_P256K1, SYMMETRIC_DEFAULT
  #   origin: "AWS_KMS", # accepts AWS_KMS, EXTERNAL, AWS_CLOUDHSM
  #   custom_key_store_id: "CustomKeyStoreIdType",
  #   bypass_policy_lockout_safety_check: false,
  #   tags: [
  #   {
  #   tag_key: "TagKeyType", # required
  #   tag_value: "TagValueType", # required
  #   },
  #   ],
  #   })
  # @example Response structure
  #
  #   resp.key_metadata.aws_account_id #=> String
  #   resp.key_metadata.key_id #=> String
  #   resp.key_metadata.arn #=> String
  #   resp.key_metadata.creation_date #=> Time
  #   resp.key_metadata.enabled #=> Boolean
  #   resp.key_metadata.description #=> String
  #   resp.key_metadata.key_usage #=> String, one of "SIGN_VERIFY", "ENCRYPT_DECRYPT"
  #   resp.key_metadata.key_state #=> String, one of "Enabled", "Disabled", "PendingDeletion", "PendingImport", "Unavailable"
  #   resp.key_metadata.deletion_date #=> Time
  #   resp.key_metadata.valid_to #=> Time
  #   resp.key_metadata.origin #=> String, one of "AWS_KMS", "EXTERNAL", "AWS_CLOUDHSM"
  #   resp.key_metadata.custom_key_store_id #=> String
  #   resp.key_metadata.cloud_hsm_cluster_id #=> String
  #   resp.key_metadata.expiration_model #=> String, one of "KEY_MATERIAL_EXPIRES", "KEY_MATERIAL_DOES_NOT_EXPIRE"
  #   resp.key_metadata.key_manager #=> String, one of "AWS", "CUSTOMER"
  #   resp.key_metadata.customer_master_key_spec #=> String, one of "RSA_2048", "RSA_3072", "RSA_4096", "ECC_NIST_P256", "ECC_NIST_P384", "ECC_NIST_P521", "ECC_SECG_P256K1", "SYMMETRIC_DEFAULT"
  #   resp.key_metadata.encryption_algorithms #=> Array
  #   resp.key_metadata.encryption_algorithms[0] #=> String, one of "SYMMETRIC_DEFAULT", "RSAES_OAEP_SHA_1", "RSAES_OAEP_SHA_256"
  #   resp.key_metadata.signing_algorithms #=> Array
  #   resp.key_metadata.signing_algorithms[0] #=> String, one of "RSASSA_PSS_SHA_256", "RSASSA_PSS_SHA_384", "RSASSA_PSS_SHA_512", "RSASSA_PKCS1_V1_5_SHA_256", "RSASSA_PKCS1_V1_5_SHA_384", "RSASSA_PKCS1_V1_5_SHA_512", "ECDSA_SHA_256", "ECDSA_SHA_384", "ECDSA_SHA_512"
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload create_key
  # @param params [Hash] ({})
  # @return [Types::CreateKeyResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::CreateKeyResponse#key_metadata #key_metadata} => Types::KeyMetadata
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CreateKey AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#1360
  def create_key(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Decrypts ciphertext that was encrypted by a AWS KMS customer master
  # key (CMK) using any of the following operations:
  #
  # * Encrypt
  #
  # * GenerateDataKey
  #
  # * GenerateDataKeyPair
  #
  # * GenerateDataKeyWithoutPlaintext
  #
  # * GenerateDataKeyPairWithoutPlaintext
  #
  # You can use this operation to decrypt ciphertext that was encrypted
  # under a symmetric or asymmetric CMK. When the CMK is asymmetric, you
  # must specify the CMK and the encryption algorithm that was used to
  # encrypt the ciphertext. For information about symmetric and asymmetric
  # CMKs, see [Using Symmetric and Asymmetric CMKs][1] in the *AWS Key
  # Management Service Developer Guide*.
  #
  # The Decrypt operation also decrypts ciphertext that was encrypted
  # outside of AWS KMS by the public key in an AWS KMS asymmetric CMK.
  # However, it cannot decrypt ciphertext produced by other libraries,
  # such as the [AWS Encryption SDK][2] or [Amazon S3 client-side
  # encryption][3]. These libraries return a ciphertext format that is
  # incompatible with AWS KMS.
  #
  # If the ciphertext was encrypted under a symmetric CMK, the `KeyId`
  # parameter is optional. AWS KMS can get this information from metadata
  # that it adds to the symmetric ciphertext blob. This feature adds
  # durability to your implementation by ensuring that authorized users
  # can decrypt ciphertext decades after it was encrypted, even if
  # they've lost track of the CMK ID. However, specifying the CMK is
  # always recommended as a best practice. When you use the `KeyId`
  # parameter to specify a CMK, AWS KMS only uses the CMK you specify. If
  # the ciphertext was encrypted under a different CMK, the `Decrypt`
  # operation fails. This practice ensures that you use the CMK that you
  # intend.
  #
  # Whenever possible, use key policies to give users permission to call
  # the `Decrypt` operation on a particular CMK, instead of using IAM
  # policies. Otherwise, you might create an IAM user policy that gives
  # the user `Decrypt` permission on all CMKs. This user could decrypt
  # ciphertext that was encrypted by CMKs in other accounts if the key
  # policy for the cross-account CMK permits it. If you must use an IAM
  # policy for `Decrypt` permissions, limit the user to particular CMKs or
  # particular trusted accounts. For details, see [Best practices for IAM
  # policies][4] in the *AWS Key Management Service Developer Guide*.
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][5] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: Yes. You can decrypt a ciphertext using a CMK
  # in a different AWS account.
  #
  # **Required permissions**\: [kms:Decrypt][6] (key policy)
  #
  # **Related operations:**
  #
  # * Encrypt
  #
  # * GenerateDataKey
  #
  # * GenerateDataKeyPair
  #
  # * ReEncrypt
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html
  # [2]: https://docs.aws.amazon.com/encryption-sdk/latest/developer-guide/
  # [3]: https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingClientSideEncryption.html
  # [4]: https://docs.aws.amazon.com/kms/latest/developerguide/iam-policies.html#iam-policies-best-practices
  # [5]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [6]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To decrypt data
  #
  #   # The following example decrypts data that was encrypted with a customer master key (CMK) in AWS KMS.
  #
  #   resp = client.decrypt({
  #   ciphertext_blob: "<binary data>", # The encrypted data (ciphertext).
  #   key_id: "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab", # A key identifier for the CMK to use to decrypt the data.
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   key_id: "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab", # The Amazon Resource Name (ARN) of the CMK that was used to decrypt the data.
  #   plaintext: "<binary data>", # The decrypted (plaintext) data.
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.decrypt({
  #   ciphertext_blob: "data", # required
  #   encryption_context: {
  #   "EncryptionContextKey" => "EncryptionContextValue",
  #   },
  #   grant_tokens: ["GrantTokenType"],
  #   key_id: "KeyIdType",
  #   encryption_algorithm: "SYMMETRIC_DEFAULT", # accepts SYMMETRIC_DEFAULT, RSAES_OAEP_SHA_1, RSAES_OAEP_SHA_256
  #   })
  # @example Response structure
  #
  #   resp.key_id #=> String
  #   resp.plaintext #=> String
  #   resp.encryption_algorithm #=> String, one of "SYMMETRIC_DEFAULT", "RSAES_OAEP_SHA_1", "RSAES_OAEP_SHA_256"
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload decrypt
  # @param params [Hash] ({})
  # @return [Types::DecryptResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DecryptResponse#key_id #key_id} => String
  #   * {Types::DecryptResponse#plaintext #plaintext} => String
  #   * {Types::DecryptResponse#encryption_algorithm #encryption_algorithm} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/Decrypt AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#1561
  def decrypt(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Deletes the specified alias.
  #
  # Because an alias is not a property of a CMK, you can delete and change
  # the aliases of a CMK without affecting the CMK. Also, aliases do not
  # appear in the response from the DescribeKey operation. To get the
  # aliases of all CMKs, use the ListAliases operation.
  #
  # Each CMK can have multiple aliases. To change the alias of a CMK, use
  # DeleteAlias to delete the current alias and CreateAlias to create a
  # new alias. To associate an existing alias with a different customer
  # master key (CMK), call UpdateAlias.
  #
  # **Cross-account use**\: No. You cannot perform this operation on an
  # alias in a different AWS account.
  #
  # **Required permissions**
  #
  # * [kms:DeleteAlias][1] on the alias (IAM policy).
  #
  # * [kms:DeleteAlias][1] on the CMK (key policy).
  #
  # For details, see [Controlling access to aliases][2] in the *AWS Key
  # Management Service Developer Guide*.
  #
  # **Related operations:**
  #
  # * CreateAlias
  #
  # * ListAliases
  #
  # * UpdateAlias
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-alias.html#alias-access
  #
  # @example Example: To delete an alias
  #
  #   # The following example deletes the specified alias.
  #
  #   resp = client.delete_alias({
  #   alias_name: "alias/ExampleAlias", # The alias to delete.
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_alias({
  #   alias_name: "AliasNameType", # required
  #   })
  # @option params
  # @overload delete_alias
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DeleteAlias AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#1628
  def delete_alias(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Deletes a [custom key store][1]. This operation does not delete the
  # AWS CloudHSM cluster that is associated with the custom key store, or
  # affect any users or keys in the cluster.
  #
  # The custom key store that you delete cannot contain any AWS KMS
  # [customer master keys (CMKs)][2]. Before deleting the key store,
  # verify that you will never need to use any of the CMKs in the key
  # store for any [cryptographic operations][3]. Then, use
  # ScheduleKeyDeletion to delete the AWS KMS customer master keys (CMKs)
  # from the key store. When the scheduled waiting period expires, the
  # `ScheduleKeyDeletion` operation deletes the CMKs. Then it makes a best
  # effort to delete the key material from the associated cluster.
  # However, you might need to manually [delete the orphaned key
  # material][4] from the cluster and its backups.
  #
  # After all CMKs are deleted from AWS KMS, use DisconnectCustomKeyStore
  # to disconnect the key store from AWS KMS. Then, you can delete the
  # custom key store.
  #
  # Instead of deleting the custom key store, consider using
  # DisconnectCustomKeyStore to disconnect it from AWS KMS. While the key
  # store is disconnected, you cannot create or use the CMKs in the key
  # store. But, you do not need to delete CMKs and you can reconnect a
  # disconnected custom key store at any time.
  #
  # If the operation succeeds, it returns a JSON object with no
  # properties.
  #
  # This operation is part of the [Custom Key Store feature][1] feature in
  # AWS KMS, which combines the convenience and extensive integration of
  # AWS KMS with the isolation and control of a single-tenant key store.
  #
  # **Cross-account use**\: No. You cannot perform this operation on a
  # custom key store in a different AWS account.
  #
  # **Required permissions**\: [kms:DeleteCustomKeyStore][5] (IAM policy)
  #
  # **Related operations:**
  #
  # * ConnectCustomKeyStore
  #
  # * CreateCustomKeyStore
  #
  # * DescribeCustomKeyStores
  #
  # * DisconnectCustomKeyStore
  #
  # * UpdateCustomKeyStore
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations
  # [4]: https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html#fix-keystore-orphaned-key
  # [5]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_custom_key_store({
  #   custom_key_store_id: "CustomKeyStoreIdType", # required
  #   })
  # @option params
  # @overload delete_custom_key_store
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DeleteCustomKeyStore AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#1706
  def delete_custom_key_store(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Deletes key material that you previously imported. This operation
  # makes the specified customer master key (CMK) unusable. For more
  # information about importing key material into AWS KMS, see [Importing
  # Key Material][1] in the *AWS Key Management Service Developer Guide*.
  #
  # When the specified CMK is in the `PendingDeletion` state, this
  # operation does not change the CMK's state. Otherwise, it changes the
  # CMK's state to `PendingImport`.
  #
  # After you delete key material, you can use ImportKeyMaterial to
  # reimport the same key material into the CMK.
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][2] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: No. You cannot perform this operation on a CMK
  # in a different AWS account.
  #
  # **Required permissions**\: [kms:DeleteImportedKeyMaterial][3] (key
  # policy)
  #
  # **Related operations:**
  #
  # * GetParametersForImport
  #
  # * ImportKeyMaterial
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To delete imported key material
  #
  #   # The following example deletes the imported key material from the specified customer master key (CMK).
  #
  #   resp = client.delete_imported_key_material({
  #   key_id: "1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the CMK whose imported key material you are deleting. You can use the key ID or the Amazon Resource Name (ARN) of the CMK.
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.delete_imported_key_material({
  #   key_id: "KeyIdType", # required
  #   })
  # @option params
  # @overload delete_imported_key_material
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DeleteImportedKeyMaterial AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#1781
  def delete_imported_key_material(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Gets information about [custom key stores][1] in the account and
  # region.
  #
  # This operation is part of the [Custom Key Store feature][1] feature in
  # AWS KMS, which combines the convenience and extensive integration of
  # AWS KMS with the isolation and control of a single-tenant key store.
  #
  # By default, this operation returns information about all custom key
  # stores in the account and region. To get only information about a
  # particular custom key store, use either the `CustomKeyStoreName` or
  # `CustomKeyStoreId` parameter (but not both).
  #
  # To determine whether the custom key store is connected to its AWS
  # CloudHSM cluster, use the `ConnectionState` element in the response.
  # If an attempt to connect the custom key store failed, the
  # `ConnectionState` value is `FAILED` and the `ConnectionErrorCode`
  # element in the response indicates the cause of the failure. For help
  # interpreting the `ConnectionErrorCode`, see CustomKeyStoresListEntry.
  #
  # Custom key stores have a `DISCONNECTED` connection state if the key
  # store has never been connected or you use the DisconnectCustomKeyStore
  # operation to disconnect it. If your custom key store state is
  # `CONNECTED` but you are having trouble using it, make sure that its
  # associated AWS CloudHSM cluster is active and contains the minimum
  # number of HSMs required for the operation, if any.
  #
  # For help repairing your custom key store, see the [Troubleshooting
  # Custom Key Stores][2] topic in the *AWS Key Management Service
  # Developer Guide*.
  #
  # **Cross-account use**\: No. You cannot perform this operation on a
  # custom key store in a different AWS account.
  #
  # **Required permissions**\: [kms:DescribeCustomKeyStores][3] (IAM
  # policy)
  #
  # **Related operations:**
  #
  # * ConnectCustomKeyStore
  #
  # * CreateCustomKeyStore
  #
  # * DeleteCustomKeyStore
  #
  # * DisconnectCustomKeyStore
  #
  # * UpdateCustomKeyStore
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.describe_custom_key_stores({
  #   custom_key_store_id: "CustomKeyStoreIdType",
  #   custom_key_store_name: "CustomKeyStoreNameType",
  #   limit: 1,
  #   marker: "MarkerType",
  #   })
  # @example Response structure
  #
  #   resp.custom_key_stores #=> Array
  #   resp.custom_key_stores[0].custom_key_store_id #=> String
  #   resp.custom_key_stores[0].custom_key_store_name #=> String
  #   resp.custom_key_stores[0].cloud_hsm_cluster_id #=> String
  #   resp.custom_key_stores[0].trust_anchor_certificate #=> String
  #   resp.custom_key_stores[0].connection_state #=> String, one of "CONNECTED", "CONNECTING", "FAILED", "DISCONNECTED", "DISCONNECTING"
  #   resp.custom_key_stores[0].connection_error_code #=> String, one of "INVALID_CREDENTIALS", "CLUSTER_NOT_FOUND", "NETWORK_ERRORS", "INTERNAL_ERROR", "INSUFFICIENT_CLOUDHSM_HSMS", "USER_LOCKED_OUT", "USER_NOT_FOUND", "USER_LOGGED_IN", "SUBNET_NOT_FOUND"
  #   resp.custom_key_stores[0].creation_date #=> Time
  #   resp.next_marker #=> String
  #   resp.truncated #=> Boolean
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload describe_custom_key_stores
  # @param params [Hash] ({})
  # @return [Types::DescribeCustomKeyStoresResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribeCustomKeyStoresResponse#custom_key_stores #custom_key_stores} => Array&lt;Types::CustomKeyStoresListEntry&gt;
  #   * {Types::DescribeCustomKeyStoresResponse#next_marker #next_marker} => String
  #   * {Types::DescribeCustomKeyStoresResponse#truncated #truncated} => Boolean
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DescribeCustomKeyStores AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#1900
  def describe_custom_key_stores(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Provides detailed information about a customer master key (CMK). You
  # can run `DescribeKey` on a [customer managed CMK][1] or an [AWS
  # managed CMK][2].
  #
  # This detailed information includes the key ARN, creation date (and
  # deletion date, if applicable), the key state, and the origin and
  # expiration date (if any) of the key material. For CMKs in custom key
  # stores, it includes information about the custom key store, such as
  # the key store ID and the AWS CloudHSM cluster ID. It includes fields,
  # like `KeySpec`, that help you distinguish symmetric from asymmetric
  # CMKs. It also provides information that is particularly important to
  # asymmetric CMKs, such as the key usage (encryption or signing) and the
  # encryption algorithms or signing algorithms that the CMK supports.
  #
  # `DescribeKey` does not return the following information:
  #
  # * Aliases associated with the CMK. To get this information, use
  #   ListAliases.
  #
  # * Whether automatic key rotation is enabled on the CMK. To get this
  #   information, use GetKeyRotationStatus. Also, some key states prevent
  #   a CMK from being automatically rotated. For details, see [How
  #   Automatic Key Rotation Works][3] in *AWS Key Management Service
  #   Developer Guide*.
  #
  # * Tags on the CMK. To get this information, use ListResourceTags.
  #
  # * Key policies and grants on the CMK. To get this information, use
  #   GetKeyPolicy and ListGrants.
  #
  # If you call the `DescribeKey` operation on a *predefined AWS alias*,
  # that is, an AWS alias with no key ID, AWS KMS creates an [AWS managed
  # CMK][4]. Then, it associates the alias with the new CMK, and returns
  # the `KeyId` and `Arn` of the new CMK in the response.
  #
  # **Cross-account use**\: Yes. To perform this operation with a CMK in a
  # different AWS account, specify the key ARN or alias ARN in the value
  # of the `KeyId` parameter.
  #
  # **Required permissions**\: [kms:DescribeKey][5] (key policy)
  #
  # **Related operations:**
  #
  # * GetKeyPolicy
  #
  # * GetKeyRotationStatus
  #
  # * ListAliases
  #
  # * ListGrants
  #
  # * ListKeys
  #
  # * ListResourceTags
  #
  # * ListRetirableGrants
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html#rotate-keys-how-it-works
  # [4]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys
  # [5]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To obtain information about a customer master key (CMK)
  #
  #   # The following example returns information (metadata) about the specified CMK.
  #
  #   resp = client.describe_key({
  #   key_id: "1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the CMK that you want information about. You can use the key ID or the Amazon Resource Name (ARN) of the CMK.
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   key_metadata: {
  #   aws_account_id: "111122223333",
  #   arn: "arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab",
  #   creation_date: Time.parse("2017-07-05T14:04:55-07:00"),
  #   description: "",
  #   enabled: true,
  #   key_id: "1234abcd-12ab-34cd-56ef-1234567890ab",
  #   key_manager: "CUSTOMER",
  #   key_state: "Enabled",
  #   key_usage: "ENCRYPT_DECRYPT",
  #   origin: "AWS_KMS",
  #   }, # An object that contains information about the specified CMK.
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.describe_key({
  #   key_id: "KeyIdType", # required
  #   grant_tokens: ["GrantTokenType"],
  #   })
  # @example Response structure
  #
  #   resp.key_metadata.aws_account_id #=> String
  #   resp.key_metadata.key_id #=> String
  #   resp.key_metadata.arn #=> String
  #   resp.key_metadata.creation_date #=> Time
  #   resp.key_metadata.enabled #=> Boolean
  #   resp.key_metadata.description #=> String
  #   resp.key_metadata.key_usage #=> String, one of "SIGN_VERIFY", "ENCRYPT_DECRYPT"
  #   resp.key_metadata.key_state #=> String, one of "Enabled", "Disabled", "PendingDeletion", "PendingImport", "Unavailable"
  #   resp.key_metadata.deletion_date #=> Time
  #   resp.key_metadata.valid_to #=> Time
  #   resp.key_metadata.origin #=> String, one of "AWS_KMS", "EXTERNAL", "AWS_CLOUDHSM"
  #   resp.key_metadata.custom_key_store_id #=> String
  #   resp.key_metadata.cloud_hsm_cluster_id #=> String
  #   resp.key_metadata.expiration_model #=> String, one of "KEY_MATERIAL_EXPIRES", "KEY_MATERIAL_DOES_NOT_EXPIRE"
  #   resp.key_metadata.key_manager #=> String, one of "AWS", "CUSTOMER"
  #   resp.key_metadata.customer_master_key_spec #=> String, one of "RSA_2048", "RSA_3072", "RSA_4096", "ECC_NIST_P256", "ECC_NIST_P384", "ECC_NIST_P521", "ECC_SECG_P256K1", "SYMMETRIC_DEFAULT"
  #   resp.key_metadata.encryption_algorithms #=> Array
  #   resp.key_metadata.encryption_algorithms[0] #=> String, one of "SYMMETRIC_DEFAULT", "RSAES_OAEP_SHA_1", "RSAES_OAEP_SHA_256"
  #   resp.key_metadata.signing_algorithms #=> Array
  #   resp.key_metadata.signing_algorithms[0] #=> String, one of "RSASSA_PSS_SHA_256", "RSASSA_PSS_SHA_384", "RSASSA_PSS_SHA_512", "RSASSA_PKCS1_V1_5_SHA_256", "RSASSA_PKCS1_V1_5_SHA_384", "RSASSA_PKCS1_V1_5_SHA_512", "ECDSA_SHA_256", "ECDSA_SHA_384", "ECDSA_SHA_512"
  # @option params
  # @option params
  # @overload describe_key
  # @param params [Hash] ({})
  # @return [Types::DescribeKeyResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::DescribeKeyResponse#key_metadata #key_metadata} => Types::KeyMetadata
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DescribeKey AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#2073
  def describe_key(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Sets the state of a customer master key (CMK) to disabled. This change
  # temporarily prevents use of the CMK for [cryptographic operations][1].
  #
  # For more information about how key state affects the use of a CMK, see
  # [How Key State Affects the Use of a Customer Master Key][2] in the <i>
  # <i>AWS Key Management Service Developer Guide</i> </i>.
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][2] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: No. You cannot perform this operation on a CMK
  # in a different AWS account.
  #
  # **Required permissions**\: [kms:DisableKey][3] (key policy)
  #
  # **Related operations**\: EnableKey
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To disable a customer master key (CMK)
  #
  #   # The following example disables the specified CMK.
  #
  #   resp = client.disable_key({
  #   key_id: "1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the CMK to disable. You can use the key ID or the Amazon Resource Name (ARN) of the CMK.
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.disable_key({
  #   key_id: "KeyIdType", # required
  #   })
  # @option params
  # @overload disable_key
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DisableKey AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#2137
  def disable_key(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Disables [automatic rotation of the key material][1] for the specified
  # symmetric customer master key (CMK).
  #
  # You cannot enable automatic rotation of asymmetric CMKs, CMKs with
  # imported key material, or CMKs in a [custom key store][2].
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][3] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: No. You cannot perform this operation on a CMK
  # in a different AWS account.
  #
  # **Required permissions**\: [kms:DisableKeyRotation][4] (key policy)
  #
  # **Related operations:**
  #
  # * EnableKeyRotation
  #
  # * GetKeyRotationStatus
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [4]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To disable automatic rotation of key material
  #
  #   # The following example disables automatic annual rotation of the key material for the specified CMK.
  #
  #   resp = client.disable_key_rotation({
  #   key_id: "1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the CMK whose key material will no longer be rotated. You can use the key ID or the Amazon Resource Name (ARN) of the CMK.
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.disable_key_rotation({
  #   key_id: "KeyIdType", # required
  #   })
  # @option params
  # @overload disable_key_rotation
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DisableKeyRotation AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#2213
  def disable_key_rotation(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Disconnects the [custom key store][1] from its associated AWS CloudHSM
  # cluster. While a custom key store is disconnected, you can manage the
  # custom key store and its customer master keys (CMKs), but you cannot
  # create or use CMKs in the custom key store. You can reconnect the
  # custom key store at any time.
  #
  # <note markdown="1"> While a custom key store is disconnected, all attempts to create
  # customer master keys (CMKs) in the custom key store or to use existing
  # CMKs in [cryptographic operations][2] will fail. This action can
  # prevent users from storing and accessing sensitive data.
  #
  #  </note>
  #
  #
  #
  # To find the connection state of a custom key store, use the
  # DescribeCustomKeyStores operation. To reconnect a custom key store,
  # use the ConnectCustomKeyStore operation.
  #
  # If the operation succeeds, it returns a JSON object with no
  # properties.
  #
  # This operation is part of the [Custom Key Store feature][1] feature in
  # AWS KMS, which combines the convenience and extensive integration of
  # AWS KMS with the isolation and control of a single-tenant key store.
  #
  # **Cross-account use**\: No. You cannot perform this operation on a
  # custom key store in a different AWS account.
  #
  # **Required permissions**\: [kms:DisconnectCustomKeyStore][3] (IAM
  # policy)
  #
  # **Related operations:**
  #
  # * ConnectCustomKeyStore
  #
  # * CreateCustomKeyStore
  #
  # * DeleteCustomKeyStore
  #
  # * DescribeCustomKeyStores
  #
  # * UpdateCustomKeyStore
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.disconnect_custom_key_store({
  #   custom_key_store_id: "CustomKeyStoreIdType", # required
  #   })
  # @option params
  # @overload disconnect_custom_key_store
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DisconnectCustomKeyStore AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#2285
  def disconnect_custom_key_store(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Sets the key state of a customer master key (CMK) to enabled. This
  # allows you to use the CMK for [cryptographic operations][1].
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][2] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: No. You cannot perform this operation on a CMK
  # in a different AWS account.
  #
  # **Required permissions**\: [kms:EnableKey][3] (key policy)
  #
  # **Related operations**\: DisableKey
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To enable a customer master key (CMK)
  #
  #   # The following example enables the specified CMK.
  #
  #   resp = client.enable_key({
  #   key_id: "1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the CMK to enable. You can use the key ID or the Amazon Resource Name (ARN) of the CMK.
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.enable_key({
  #   key_id: "KeyIdType", # required
  #   })
  # @option params
  # @overload enable_key
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/EnableKey AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#2345
  def enable_key(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Enables [automatic rotation of the key material][1] for the specified
  # symmetric customer master key (CMK).
  #
  # You cannot enable automatic rotation of asymmetric CMKs, CMKs with
  # imported key material, or CMKs in a [custom key store][2].
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][3] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: No. You cannot perform this operation on a CMK
  # in a different AWS account.
  #
  # **Required permissions**\: [kms:EnableKeyRotation][4] (key policy)
  #
  # **Related operations:**
  #
  # * DisableKeyRotation
  #
  # * GetKeyRotationStatus
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [4]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To enable automatic rotation of key material
  #
  #   # The following example enables automatic annual rotation of the key material for the specified CMK.
  #
  #   resp = client.enable_key_rotation({
  #   key_id: "1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the CMK whose key material will be rotated annually. You can use the key ID or the Amazon Resource Name (ARN) of the CMK.
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.enable_key_rotation({
  #   key_id: "KeyIdType", # required
  #   })
  # @option params
  # @overload enable_key_rotation
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/EnableKeyRotation AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#2419
  def enable_key_rotation(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Encrypts plaintext into ciphertext by using a customer master key
  # (CMK). The `Encrypt` operation has two primary use cases:
  #
  # * You can encrypt small amounts of arbitrary data, such as a personal
  #   identifier or database password, or other sensitive information.
  #
  # * You can use the `Encrypt` operation to move encrypted data from one
  #   AWS Region to another. For example, in Region A, generate a data key
  #   and use the plaintext key to encrypt your data. Then, in Region A,
  #   use the `Encrypt` operation to encrypt the plaintext data key under
  #   a CMK in Region B. Now, you can move the encrypted data and the
  #   encrypted data key to Region B. When necessary, you can decrypt the
  #   encrypted data key and the encrypted data entirely within in Region
  #   B.
  #
  # You don't need to use the `Encrypt` operation to encrypt a data key.
  # The GenerateDataKey and GenerateDataKeyPair operations return a
  # plaintext data key and an encrypted copy of that data key.
  #
  # When you encrypt data, you must specify a symmetric or asymmetric CMK
  # to use in the encryption operation. The CMK must have a `KeyUsage`
  # value of `ENCRYPT_DECRYPT.` To find the `KeyUsage` of a CMK, use the
  # DescribeKey operation.
  #
  # If you use a symmetric CMK, you can use an encryption context to add
  # additional security to your encryption operation. If you specify an
  # `EncryptionContext` when encrypting data, you must specify the same
  # encryption context (a case-sensitive exact match) when decrypting the
  # data. Otherwise, the request to decrypt fails with an
  # `InvalidCiphertextException`. For more information, see [Encryption
  # Context][1] in the *AWS Key Management Service Developer Guide*.
  #
  # If you specify an asymmetric CMK, you must also specify the encryption
  # algorithm. The algorithm must be compatible with the CMK type.
  #
  # When you use an asymmetric CMK to encrypt or reencrypt data, be sure
  # to record the CMK and encryption algorithm that you choose. You will
  # be required to provide the same CMK and encryption algorithm when you
  # decrypt the data. If the CMK and algorithm do not match the values
  # used to encrypt the data, the decrypt operation fails.
  #
  #  You are not required to supply the CMK ID and encryption algorithm
  # when you decrypt with symmetric CMKs because AWS KMS stores this
  # information in the ciphertext blob. AWS KMS cannot store metadata in
  # ciphertext generated with asymmetric keys. The standard format for
  # asymmetric key ciphertext does not include configurable fields.
  #
  # The maximum size of the data that you can encrypt varies with the type
  # of CMK and the encryption algorithm that you choose.
  #
  # * Symmetric CMKs
  #
  #   * `SYMMETRIC_DEFAULT`\: 4096 bytes
  #
  #   ^
  #
  # * `RSA_2048`
  #
  #   * `RSAES_OAEP_SHA_1`\: 214 bytes
  #
  #   * `RSAES_OAEP_SHA_256`\: 190 bytes
  #
  # * `RSA_3072`
  #
  #   * `RSAES_OAEP_SHA_1`\: 342 bytes
  #
  #   * `RSAES_OAEP_SHA_256`\: 318 bytes
  #
  # * `RSA_4096`
  #
  #   * `RSAES_OAEP_SHA_1`\: 470 bytes
  #
  #   * `RSAES_OAEP_SHA_256`\: 446 bytes
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][2] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: Yes. To perform this operation with a CMK in a
  # different AWS account, specify the key ARN or alias ARN in the value
  # of the `KeyId` parameter.
  #
  # **Required permissions**\: [kms:Encrypt][3] (key policy)
  #
  # **Related operations:**
  #
  # * Decrypt
  #
  # * GenerateDataKey
  #
  # * GenerateDataKeyPair
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To encrypt data
  #
  #   # The following example encrypts data with the specified customer master key (CMK).
  #
  #   resp = client.encrypt({
  #   key_id: "1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the CMK to use for encryption. You can use the key ID or Amazon Resource Name (ARN) of the CMK, or the name or ARN of an alias that refers to the CMK.
  #   plaintext: "<binary data>", # The data to encrypt.
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   ciphertext_blob: "<binary data>", # The encrypted data (ciphertext).
  #   key_id: "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab", # The ARN of the CMK that was used to encrypt the data.
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.encrypt({
  #   key_id: "KeyIdType", # required
  #   plaintext: "data", # required
  #   encryption_context: {
  #   "EncryptionContextKey" => "EncryptionContextValue",
  #   },
  #   grant_tokens: ["GrantTokenType"],
  #   encryption_algorithm: "SYMMETRIC_DEFAULT", # accepts SYMMETRIC_DEFAULT, RSAES_OAEP_SHA_1, RSAES_OAEP_SHA_256
  #   })
  # @example Response structure
  #
  #   resp.ciphertext_blob #=> String
  #   resp.key_id #=> String
  #   resp.encryption_algorithm #=> String, one of "SYMMETRIC_DEFAULT", "RSAES_OAEP_SHA_1", "RSAES_OAEP_SHA_256"
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload encrypt
  # @param params [Hash] ({})
  # @return [Types::EncryptResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::EncryptResponse#ciphertext_blob #ciphertext_blob} => String
  #   * {Types::EncryptResponse#key_id #key_id} => String
  #   * {Types::EncryptResponse#encryption_algorithm #encryption_algorithm} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/Encrypt AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#2633
  def encrypt(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Generates a unique symmetric data key for client-side encryption. This
  # operation returns a plaintext copy of the data key and a copy that is
  # encrypted under a customer master key (CMK) that you specify. You can
  # use the plaintext key to encrypt your data outside of AWS KMS and
  # store the encrypted data key with the encrypted data.
  #
  # `GenerateDataKey` returns a unique data key for each request. The
  # bytes in the plaintext key are not related to the caller or the CMK.
  #
  # To generate a data key, specify the symmetric CMK that will be used to
  # encrypt the data key. You cannot use an asymmetric CMK to generate
  # data keys. To get the type of your CMK, use the DescribeKey operation.
  # You must also specify the length of the data key. Use either the
  # `KeySpec` or `NumberOfBytes` parameters (but not both). For 128-bit
  # and 256-bit data keys, use the `KeySpec` parameter.
  #
  # To get only an encrypted copy of the data key, use
  # GenerateDataKeyWithoutPlaintext. To generate an asymmetric data key
  # pair, use the GenerateDataKeyPair or
  # GenerateDataKeyPairWithoutPlaintext operation. To get a
  # cryptographically secure random byte string, use GenerateRandom.
  #
  # You can use the optional encryption context to add additional security
  # to the encryption operation. If you specify an `EncryptionContext`,
  # you must specify the same encryption context (a case-sensitive exact
  # match) when decrypting the encrypted data key. Otherwise, the request
  # to decrypt fails with an `InvalidCiphertextException`. For more
  # information, see [Encryption Context][1] in the *AWS Key Management
  # Service Developer Guide*.
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][2] in the *AWS Key Management Service Developer Guide*.
  #
  # **How to use your data key**
  #
  # We recommend that you use the following pattern to encrypt data
  # locally in your application. You can write your own code or use a
  # client-side encryption library, such as the [AWS Encryption SDK][3],
  # the [Amazon DynamoDB Encryption Client][4], or [Amazon S3 client-side
  # encryption][5] to do these tasks for you.
  #
  # To encrypt data outside of AWS KMS:
  #
  # 1.  Use the `GenerateDataKey` operation to get a data key.
  #
  # 2.  Use the plaintext data key (in the `Plaintext` field of the
  #     response) to encrypt your data outside of AWS KMS. Then erase the
  #     plaintext data key from memory.
  #
  # 3.  Store the encrypted data key (in the `CiphertextBlob` field of the
  #     response) with the encrypted data.
  #
  # To decrypt data outside of AWS KMS:
  #
  # 1.  Use the Decrypt operation to decrypt the encrypted data key. The
  #     operation returns a plaintext copy of the data key.
  #
  # 2.  Use the plaintext data key to decrypt data outside of AWS KMS,
  #     then erase the plaintext data key from memory.
  #
  # **Cross-account use**\: Yes. To perform this operation with a CMK in a
  # different AWS account, specify the key ARN or alias ARN in the value
  # of the `KeyId` parameter.
  #
  # **Required permissions**\: [kms:GenerateDataKey][6] (key policy)
  #
  # **Related operations:**
  #
  # * Decrypt
  #
  # * Encrypt
  #
  # * GenerateDataKeyPair
  #
  # * GenerateDataKeyPairWithoutPlaintext
  #
  # * GenerateDataKeyWithoutPlaintext
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [3]: https://docs.aws.amazon.com/encryption-sdk/latest/developer-guide/
  # [4]: https://docs.aws.amazon.com/dynamodb-encryption-client/latest/devguide/
  # [5]: https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingClientSideEncryption.html
  # [6]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To generate a data key
  #
  #   # The following example generates a 256-bit symmetric data encryption key (data key) in two formats. One is the
  #   # unencrypted (plainext) data key, and the other is the data key encrypted with the specified customer master key (CMK).
  #
  #   resp = client.generate_data_key({
  #   key_id: "alias/ExampleAlias", # The identifier of the CMK to use to encrypt the data key. You can use the key ID or Amazon Resource Name (ARN) of the CMK, or the name or ARN of an alias that refers to the CMK.
  #   key_spec: "AES_256", # Specifies the type of data key to return.
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   ciphertext_blob: "<binary data>", # The encrypted data key.
  #   key_id: "arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab", # The ARN of the CMK that was used to encrypt the data key.
  #   plaintext: "<binary data>", # The unencrypted (plaintext) data key.
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.generate_data_key({
  #   key_id: "KeyIdType", # required
  #   encryption_context: {
  #   "EncryptionContextKey" => "EncryptionContextValue",
  #   },
  #   number_of_bytes: 1,
  #   key_spec: "AES_256", # accepts AES_256, AES_128
  #   grant_tokens: ["GrantTokenType"],
  #   })
  # @example Response structure
  #
  #   resp.ciphertext_blob #=> String
  #   resp.plaintext #=> String
  #   resp.key_id #=> String
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload generate_data_key
  # @param params [Hash] ({})
  # @return [Types::GenerateDataKeyResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GenerateDataKeyResponse#ciphertext_blob #ciphertext_blob} => String
  #   * {Types::GenerateDataKeyResponse#plaintext #plaintext} => String
  #   * {Types::GenerateDataKeyResponse#key_id #key_id} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GenerateDataKey AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#2839
  def generate_data_key(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Generates a unique asymmetric data key pair. The `GenerateDataKeyPair`
  # operation returns a plaintext public key, a plaintext private key, and
  # a copy of the private key that is encrypted under the symmetric CMK
  # you specify. You can use the data key pair to perform asymmetric
  # cryptography outside of AWS KMS.
  #
  # `GenerateDataKeyPair` returns a unique data key pair for each request.
  # The bytes in the keys are not related to the caller or the CMK that is
  # used to encrypt the private key.
  #
  # You can use the public key that `GenerateDataKeyPair` returns to
  # encrypt data or verify a signature outside of AWS KMS. Then, store the
  # encrypted private key with the data. When you are ready to decrypt
  # data or sign a message, you can use the Decrypt operation to decrypt
  # the encrypted private key.
  #
  # To generate a data key pair, you must specify a symmetric customer
  # master key (CMK) to encrypt the private key in a data key pair. You
  # cannot use an asymmetric CMK or a CMK in a custom key store. To get
  # the type and origin of your CMK, use the DescribeKey operation.
  #
  # If you are using the data key pair to encrypt data, or for any
  # operation where you don't immediately need a private key, consider
  # using the GenerateDataKeyPairWithoutPlaintext operation.
  # `GenerateDataKeyPairWithoutPlaintext` returns a plaintext public key
  # and an encrypted private key, but omits the plaintext private key that
  # you need only to decrypt ciphertext or sign a message. Later, when you
  # need to decrypt the data or sign a message, use the Decrypt operation
  # to decrypt the encrypted private key in the data key pair.
  #
  # You can use the optional encryption context to add additional security
  # to the encryption operation. If you specify an `EncryptionContext`,
  # you must specify the same encryption context (a case-sensitive exact
  # match) when decrypting the encrypted data key. Otherwise, the request
  # to decrypt fails with an `InvalidCiphertextException`. For more
  # information, see [Encryption Context][1] in the *AWS Key Management
  # Service Developer Guide*.
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][2] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: Yes. To perform this operation with a CMK in a
  # different AWS account, specify the key ARN or alias ARN in the value
  # of the `KeyId` parameter.
  #
  # **Required permissions**\: [kms:GenerateDataKeyPair][3] (key policy)
  #
  # **Related operations:**
  #
  # * Decrypt
  #
  # * Encrypt
  #
  # * GenerateDataKey
  #
  # * GenerateDataKeyPairWithoutPlaintext
  #
  # * GenerateDataKeyWithoutPlaintext
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.generate_data_key_pair({
  #   encryption_context: {
  #   "EncryptionContextKey" => "EncryptionContextValue",
  #   },
  #   key_id: "KeyIdType", # required
  #   key_pair_spec: "RSA_2048", # required, accepts RSA_2048, RSA_3072, RSA_4096, ECC_NIST_P256, ECC_NIST_P384, ECC_NIST_P521, ECC_SECG_P256K1
  #   grant_tokens: ["GrantTokenType"],
  #   })
  # @example Response structure
  #
  #   resp.private_key_ciphertext_blob #=> String
  #   resp.private_key_plaintext #=> String
  #   resp.public_key #=> String
  #   resp.key_id #=> String
  #   resp.key_pair_spec #=> String, one of "RSA_2048", "RSA_3072", "RSA_4096", "ECC_NIST_P256", "ECC_NIST_P384", "ECC_NIST_P521", "ECC_SECG_P256K1"
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload generate_data_key_pair
  # @param params [Hash] ({})
  # @return [Types::GenerateDataKeyPairResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GenerateDataKeyPairResponse#private_key_ciphertext_blob #private_key_ciphertext_blob} => String
  #   * {Types::GenerateDataKeyPairResponse#private_key_plaintext #private_key_plaintext} => String
  #   * {Types::GenerateDataKeyPairResponse#public_key #public_key} => String
  #   * {Types::GenerateDataKeyPairResponse#key_id #key_id} => String
  #   * {Types::GenerateDataKeyPairResponse#key_pair_spec #key_pair_spec} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GenerateDataKeyPair AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#3002
  def generate_data_key_pair(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Generates a unique asymmetric data key pair. The
  # `GenerateDataKeyPairWithoutPlaintext` operation returns a plaintext
  # public key and a copy of the private key that is encrypted under the
  # symmetric CMK you specify. Unlike GenerateDataKeyPair, this operation
  # does not return a plaintext private key.
  #
  # To generate a data key pair, you must specify a symmetric customer
  # master key (CMK) to encrypt the private key in the data key pair. You
  # cannot use an asymmetric CMK or a CMK in a custom key store. To get
  # the type and origin of your CMK, use the `KeySpec` field in the
  # DescribeKey response.
  #
  # You can use the public key that `GenerateDataKeyPairWithoutPlaintext`
  # returns to encrypt data or verify a signature outside of AWS KMS.
  # Then, store the encrypted private key with the data. When you are
  # ready to decrypt data or sign a message, you can use the Decrypt
  # operation to decrypt the encrypted private key.
  #
  # `GenerateDataKeyPairWithoutPlaintext` returns a unique data key pair
  # for each request. The bytes in the key are not related to the caller
  # or CMK that is used to encrypt the private key.
  #
  # You can use the optional encryption context to add additional security
  # to the encryption operation. If you specify an `EncryptionContext`,
  # you must specify the same encryption context (a case-sensitive exact
  # match) when decrypting the encrypted data key. Otherwise, the request
  # to decrypt fails with an `InvalidCiphertextException`. For more
  # information, see [Encryption Context][1] in the *AWS Key Management
  # Service Developer Guide*.
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][2] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: Yes. To perform this operation with a CMK in a
  # different AWS account, specify the key ARN or alias ARN in the value
  # of the `KeyId` parameter.
  #
  # **Required permissions**\:
  # [kms:GenerateDataKeyPairWithoutPlaintext][3] (key policy)
  #
  # **Related operations:**
  #
  # * Decrypt
  #
  # * Encrypt
  #
  # * GenerateDataKey
  #
  # * GenerateDataKeyPair
  #
  # * GenerateDataKeyWithoutPlaintext
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.generate_data_key_pair_without_plaintext({
  #   encryption_context: {
  #   "EncryptionContextKey" => "EncryptionContextValue",
  #   },
  #   key_id: "KeyIdType", # required
  #   key_pair_spec: "RSA_2048", # required, accepts RSA_2048, RSA_3072, RSA_4096, ECC_NIST_P256, ECC_NIST_P384, ECC_NIST_P521, ECC_SECG_P256K1
  #   grant_tokens: ["GrantTokenType"],
  #   })
  # @example Response structure
  #
  #   resp.private_key_ciphertext_blob #=> String
  #   resp.public_key #=> String
  #   resp.key_id #=> String
  #   resp.key_pair_spec #=> String, one of "RSA_2048", "RSA_3072", "RSA_4096", "ECC_NIST_P256", "ECC_NIST_P384", "ECC_NIST_P521", "ECC_SECG_P256K1"
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload generate_data_key_pair_without_plaintext
  # @param params [Hash] ({})
  # @return [Types::GenerateDataKeyPairWithoutPlaintextResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GenerateDataKeyPairWithoutPlaintextResponse#private_key_ciphertext_blob #private_key_ciphertext_blob} => String
  #   * {Types::GenerateDataKeyPairWithoutPlaintextResponse#public_key #public_key} => String
  #   * {Types::GenerateDataKeyPairWithoutPlaintextResponse#key_id #key_id} => String
  #   * {Types::GenerateDataKeyPairWithoutPlaintextResponse#key_pair_spec #key_pair_spec} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GenerateDataKeyPairWithoutPlaintext AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#3156
  def generate_data_key_pair_without_plaintext(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Generates a unique symmetric data key. This operation returns a data
  # key that is encrypted under a customer master key (CMK) that you
  # specify. To request an asymmetric data key pair, use the
  # GenerateDataKeyPair or GenerateDataKeyPairWithoutPlaintext operations.
  #
  # `GenerateDataKeyWithoutPlaintext` is identical to the GenerateDataKey
  # operation except that returns only the encrypted copy of the data key.
  # This operation is useful for systems that need to encrypt data at some
  # point, but not immediately. When you need to encrypt the data, you
  # call the Decrypt operation on the encrypted copy of the key.
  #
  # It's also useful in distributed systems with different levels of
  # trust. For example, you might store encrypted data in containers. One
  # component of your system creates new containers and stores an
  # encrypted data key with each container. Then, a different component
  # puts the data into the containers. That component first decrypts the
  # data key, uses the plaintext data key to encrypt data, puts the
  # encrypted data into the container, and then destroys the plaintext
  # data key. In this system, the component that creates the containers
  # never sees the plaintext data key.
  #
  # `GenerateDataKeyWithoutPlaintext` returns a unique data key for each
  # request. The bytes in the keys are not related to the caller or CMK
  # that is used to encrypt the private key.
  #
  # To generate a data key, you must specify the symmetric customer master
  # key (CMK) that is used to encrypt the data key. You cannot use an
  # asymmetric CMK to generate a data key. To get the type of your CMK,
  # use the DescribeKey operation.
  #
  # If the operation succeeds, you will find the encrypted copy of the
  # data key in the `CiphertextBlob` field.
  #
  # You can use the optional encryption context to add additional security
  # to the encryption operation. If you specify an `EncryptionContext`,
  # you must specify the same encryption context (a case-sensitive exact
  # match) when decrypting the encrypted data key. Otherwise, the request
  # to decrypt fails with an `InvalidCiphertextException`. For more
  # information, see [Encryption Context][1] in the *AWS Key Management
  # Service Developer Guide*.
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][2] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: Yes. To perform this operation with a CMK in a
  # different AWS account, specify the key ARN or alias ARN in the value
  # of the `KeyId` parameter.
  #
  # **Required permissions**\: [kms:GenerateDataKeyWithoutPlaintext][3]
  # (key policy)
  #
  # **Related operations:**
  #
  # * Decrypt
  #
  # * Encrypt
  #
  # * GenerateDataKey
  #
  # * GenerateDataKeyPair
  #
  # * GenerateDataKeyPairWithoutPlaintext
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To generate an encrypted data key
  #
  #   # The following example generates an encrypted copy of a 256-bit symmetric data encryption key (data key). The data key is
  #   # encrypted with the specified customer master key (CMK).
  #
  #   resp = client.generate_data_key_without_plaintext({
  #   key_id: "alias/ExampleAlias", # The identifier of the CMK to use to encrypt the data key. You can use the key ID or Amazon Resource Name (ARN) of the CMK, or the name or ARN of an alias that refers to the CMK.
  #   key_spec: "AES_256", # Specifies the type of data key to return.
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   ciphertext_blob: "<binary data>", # The encrypted data key.
  #   key_id: "arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab", # The ARN of the CMK that was used to encrypt the data key.
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.generate_data_key_without_plaintext({
  #   key_id: "KeyIdType", # required
  #   encryption_context: {
  #   "EncryptionContextKey" => "EncryptionContextValue",
  #   },
  #   key_spec: "AES_256", # accepts AES_256, AES_128
  #   number_of_bytes: 1,
  #   grant_tokens: ["GrantTokenType"],
  #   })
  # @example Response structure
  #
  #   resp.ciphertext_blob #=> String
  #   resp.key_id #=> String
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload generate_data_key_without_plaintext
  # @param params [Hash] ({})
  # @return [Types::GenerateDataKeyWithoutPlaintextResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GenerateDataKeyWithoutPlaintextResponse#ciphertext_blob #ciphertext_blob} => String
  #   * {Types::GenerateDataKeyWithoutPlaintextResponse#key_id #key_id} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GenerateDataKeyWithoutPlaintext AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#3335
  def generate_data_key_without_plaintext(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns a random byte string that is cryptographically secure.
  #
  # By default, the random byte string is generated in AWS KMS. To
  # generate the byte string in the AWS CloudHSM cluster that is
  # associated with a [custom key store][1], specify the custom key store
  # ID.
  #
  # For more information about entropy and random number generation, see
  # the [AWS Key Management Service Cryptographic Details][2] whitepaper.
  #
  # **Required permissions**\: [kms:GenerateRandom][3] (IAM policy)
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html
  # [2]: https://d0.awsstatic.com/whitepapers/KMS-Cryptographic-Details.pdf
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To generate random data
  #
  #   # The following example uses AWS KMS to generate 32 bytes of random data.
  #
  #   resp = client.generate_random({
  #   number_of_bytes: 32, # The length of the random data, specified in number of bytes.
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   plaintext: "<binary data>", # The random data.
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.generate_random({
  #   number_of_bytes: 1,
  #   custom_key_store_id: "CustomKeyStoreIdType",
  #   })
  # @example Response structure
  #
  #   resp.plaintext #=> String
  # @option params
  # @option params
  # @overload generate_random
  # @param params [Hash] ({})
  # @return [Types::GenerateRandomResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GenerateRandomResponse#plaintext #plaintext} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GenerateRandom AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#3403
  def generate_random(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Gets a key policy attached to the specified customer master key (CMK).
  #
  # **Cross-account use**\: No. You cannot perform this operation on a CMK
  # in a different AWS account.
  #
  # **Required permissions**\: [kms:GetKeyPolicy][1] (key policy)
  #
  # **Related operations**\: PutKeyPolicy
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To retrieve a key policy
  #
  #   # The following example retrieves the key policy for the specified customer master key (CMK).
  #
  #   resp = client.get_key_policy({
  #   key_id: "1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the CMK whose key policy you want to retrieve. You can use the key ID or the Amazon Resource Name (ARN) of the CMK.
  #   policy_name: "default", # The name of the key policy to retrieve.
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   policy: "{\n  \"Version\" : \"2012-10-17\",\n  \"Id\" : \"key-default-1\",\n  \"Statement\" : [ {\n    \"Sid\" : \"Enable IAM User Permissions\",\n    \"Effect\" : \"Allow\",\n    \"Principal\" : {\n      \"AWS\" : \"arn:aws:iam::111122223333:root\"\n    },\n    \"Action\" : \"kms:*\",\n    \"Resource\" : \"*\"\n  } ]\n}", # The key policy document.
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_key_policy({
  #   key_id: "KeyIdType", # required
  #   policy_name: "PolicyNameType", # required
  #   })
  # @example Response structure
  #
  #   resp.policy #=> String
  # @option params
  # @option params
  # @overload get_key_policy
  # @param params [Hash] ({})
  # @return [Types::GetKeyPolicyResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetKeyPolicyResponse#policy #policy} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GetKeyPolicy AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#3473
  def get_key_policy(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Gets a Boolean value that indicates whether [automatic rotation of the
  # key material][1] is enabled for the specified customer master key
  # (CMK).
  #
  # You cannot enable automatic rotation of asymmetric CMKs, CMKs with
  # imported key material, or CMKs in a [custom key store][2]. The key
  # rotation status for these CMKs is always `false`.
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][3] in the *AWS Key Management Service Developer Guide*.
  #
  # * Disabled: The key rotation status does not change when you disable a
  #   CMK. However, while the CMK is disabled, AWS KMS does not rotate the
  #   backing key.
  #
  # * Pending deletion: While a CMK is pending deletion, its key rotation
  #   status is `false` and AWS KMS does not rotate the backing key. If
  #   you cancel the deletion, the original key rotation status is
  #   restored.
  #
  # **Cross-account use**\: Yes. To perform this operation on a CMK in a
  # different AWS account, specify the key ARN in the value of the `KeyId`
  # parameter.
  #
  # **Required permissions**\: [kms:GetKeyRotationStatus][4] (key policy)
  #
  # **Related operations:**
  #
  # * DisableKeyRotation
  #
  # * EnableKeyRotation
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [4]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To retrieve the rotation status for a customer master key (CMK)
  #
  #   # The following example retrieves the status of automatic annual rotation of the key material for the specified CMK.
  #
  #   resp = client.get_key_rotation_status({
  #   key_id: "1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the CMK whose key material rotation status you want to retrieve. You can use the key ID or the Amazon Resource Name (ARN) of the CMK.
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   key_rotation_enabled: true, # A boolean that indicates the key material rotation status. Returns true when automatic annual rotation of the key material is enabled, or false when it is not.
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_key_rotation_status({
  #   key_id: "KeyIdType", # required
  #   })
  # @example Response structure
  #
  #   resp.key_rotation_enabled #=> Boolean
  # @option params
  # @overload get_key_rotation_status
  # @param params [Hash] ({})
  # @return [Types::GetKeyRotationStatusResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetKeyRotationStatusResponse#key_rotation_enabled #key_rotation_enabled} => Boolean
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GetKeyRotationStatus AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#3565
  def get_key_rotation_status(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns the items you need to import key material into a symmetric,
  # customer managed customer master key (CMK). For more information about
  # importing key material into AWS KMS, see [Importing Key Material][1]
  # in the *AWS Key Management Service Developer Guide*.
  #
  # This operation returns a public key and an import token. Use the
  # public key to encrypt the symmetric key material. Store the import
  # token to send with a subsequent ImportKeyMaterial request.
  #
  # You must specify the key ID of the symmetric CMK into which you will
  # import key material. This CMK's `Origin` must be `EXTERNAL`. You must
  # also specify the wrapping algorithm and type of wrapping key (public
  # key) that you will use to encrypt the key material. You cannot perform
  # this operation on an asymmetric CMK or on any CMK in a different AWS
  # account.
  #
  # To import key material, you must use the public key and import token
  # from the same response. These items are valid for 24 hours. The
  # expiration date and time appear in the `GetParametersForImport`
  # response. You cannot use an expired token in an ImportKeyMaterial
  # request. If your key and token expire, send another
  # `GetParametersForImport` request.
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][2] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: No. You cannot perform this operation on a CMK
  # in a different AWS account.
  #
  # **Required permissions**\: [kms:GetParametersForImport][3] (key
  # policy)
  #
  # **Related operations:**
  #
  # * ImportKeyMaterial
  #
  # * DeleteImportedKeyMaterial
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To retrieve the public key and import token for a customer master key (CMK)
  #
  #   # The following example retrieves the public key and import token for the specified CMK.
  #
  #   resp = client.get_parameters_for_import({
  #   key_id: "1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the CMK for which to retrieve the public key and import token. You can use the key ID or the Amazon Resource Name (ARN) of the CMK.
  #   wrapping_algorithm: "RSAES_OAEP_SHA_1", # The algorithm that you will use to encrypt the key material before importing it.
  #   wrapping_key_spec: "RSA_2048", # The type of wrapping key (public key) to return in the response.
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   import_token: "<binary data>", # The import token to send with a subsequent ImportKeyMaterial request.
  #   key_id: "arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab", # The ARN of the CMK for which you are retrieving the public key and import token. This is the same CMK specified in the request.
  #   parameters_valid_to: Time.parse("2016-12-01T14:52:17-08:00"), # The time at which the import token and public key are no longer valid.
  #   public_key: "<binary data>", # The public key to use to encrypt the key material before importing it.
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_parameters_for_import({
  #   key_id: "KeyIdType", # required
  #   wrapping_algorithm: "RSAES_PKCS1_V1_5", # required, accepts RSAES_PKCS1_V1_5, RSAES_OAEP_SHA_1, RSAES_OAEP_SHA_256
  #   wrapping_key_spec: "RSA_2048", # required, accepts RSA_2048
  #   })
  # @example Response structure
  #
  #   resp.key_id #=> String
  #   resp.import_token #=> String
  #   resp.public_key #=> String
  #   resp.parameters_valid_to #=> Time
  # @option params
  # @option params
  # @option params
  # @overload get_parameters_for_import
  # @param params [Hash] ({})
  # @return [Types::GetParametersForImportResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetParametersForImportResponse#key_id #key_id} => String
  #   * {Types::GetParametersForImportResponse#import_token #import_token} => String
  #   * {Types::GetParametersForImportResponse#public_key #public_key} => String
  #   * {Types::GetParametersForImportResponse#parameters_valid_to #parameters_valid_to} => Time
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GetParametersForImport AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#3689
  def get_parameters_for_import(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns the public key of an asymmetric CMK. Unlike the private key of
  # a asymmetric CMK, which never leaves AWS KMS unencrypted, callers with
  # `kms:GetPublicKey` permission can download the public key of an
  # asymmetric CMK. You can share the public key to allow others to
  # encrypt messages and verify signatures outside of AWS KMS. For
  # information about symmetric and asymmetric CMKs, see [Using Symmetric
  # and Asymmetric CMKs][1] in the *AWS Key Management Service Developer
  # Guide*.
  #
  # You do not need to download the public key. Instead, you can use the
  # public key within AWS KMS by calling the Encrypt, ReEncrypt, or Verify
  # operations with the identifier of an asymmetric CMK. When you use the
  # public key within AWS KMS, you benefit from the authentication,
  # authorization, and logging that are part of every AWS KMS operation.
  # You also reduce of risk of encrypting data that cannot be decrypted.
  # These features are not effective outside of AWS KMS. For details, see
  # [Special Considerations for Downloading Public Keys][2].
  #
  # To help you use the public key safely outside of AWS KMS,
  # `GetPublicKey` returns important information about the public key in
  # the response, including:
  #
  # * [CustomerMasterKeySpec][3]\: The type of key material in the public
  #   key, such as `RSA_4096` or `ECC_NIST_P521`.
  #
  # * [KeyUsage][4]\: Whether the key is used for encryption or signing.
  #
  # * [EncryptionAlgorithms][5] or [SigningAlgorithms][6]\: A list of the
  #   encryption algorithms or the signing algorithms for the key.
  #
  # Although AWS KMS cannot enforce these restrictions on external
  # operations, it is crucial that you use this information to prevent the
  # public key from being used improperly. For example, you can prevent a
  # public signing key from being used encrypt data, or prevent a public
  # key from being used with an encryption algorithm that is not supported
  # by AWS KMS. You can also avoid errors, such as using the wrong signing
  # algorithm in a verification operation.
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][7] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: Yes. To perform this operation with a CMK in a
  # different AWS account, specify the key ARN or alias ARN in the value
  # of the `KeyId` parameter.
  #
  # **Required permissions**\: [kms:GetPublicKey][8] (key policy)
  #
  # **Related operations**\: CreateKey
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/download-public-key.html#download-public-key-considerations
  # [3]: https://docs.aws.amazon.com/kms/latest/APIReference/API_GetPublicKey.html#KMS-GetPublicKey-response-CustomerMasterKeySpec
  # [4]: https://docs.aws.amazon.com/kms/latest/APIReference/API_GetPublicKey.html#KMS-GetPublicKey-response-KeyUsage
  # [5]: https://docs.aws.amazon.com/kms/latest/APIReference/API_GetPublicKey.html#KMS-GetPublicKey-response-EncryptionAlgorithms
  # [6]: https://docs.aws.amazon.com/kms/latest/APIReference/API_GetPublicKey.html#KMS-GetPublicKey-response-SigningAlgorithms
  # [7]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [8]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.get_public_key({
  #   key_id: "KeyIdType", # required
  #   grant_tokens: ["GrantTokenType"],
  #   })
  # @example Response structure
  #
  #   resp.key_id #=> String
  #   resp.public_key #=> String
  #   resp.customer_master_key_spec #=> String, one of "RSA_2048", "RSA_3072", "RSA_4096", "ECC_NIST_P256", "ECC_NIST_P384", "ECC_NIST_P521", "ECC_SECG_P256K1", "SYMMETRIC_DEFAULT"
  #   resp.key_usage #=> String, one of "SIGN_VERIFY", "ENCRYPT_DECRYPT"
  #   resp.encryption_algorithms #=> Array
  #   resp.encryption_algorithms[0] #=> String, one of "SYMMETRIC_DEFAULT", "RSAES_OAEP_SHA_1", "RSAES_OAEP_SHA_256"
  #   resp.signing_algorithms #=> Array
  #   resp.signing_algorithms[0] #=> String, one of "RSASSA_PSS_SHA_256", "RSASSA_PSS_SHA_384", "RSASSA_PSS_SHA_512", "RSASSA_PKCS1_V1_5_SHA_256", "RSASSA_PKCS1_V1_5_SHA_384", "RSASSA_PKCS1_V1_5_SHA_512", "ECDSA_SHA_256", "ECDSA_SHA_384", "ECDSA_SHA_512"
  # @option params
  # @option params
  # @overload get_public_key
  # @param params [Hash] ({})
  # @return [Types::GetPublicKeyResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::GetPublicKeyResponse#key_id #key_id} => String
  #   * {Types::GetPublicKeyResponse#public_key #public_key} => String
  #   * {Types::GetPublicKeyResponse#customer_master_key_spec #customer_master_key_spec} => String
  #   * {Types::GetPublicKeyResponse#key_usage #key_usage} => String
  #   * {Types::GetPublicKeyResponse#encryption_algorithms #encryption_algorithms} => Array&lt;String&gt;
  #   * {Types::GetPublicKeyResponse#signing_algorithms #signing_algorithms} => Array&lt;String&gt;
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GetPublicKey AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#3818
  def get_public_key(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Imports key material into an existing symmetric AWS KMS customer
  # master key (CMK) that was created without key material. After you
  # successfully import key material into a CMK, you can [reimport the
  # same key material][1] into that CMK, but you cannot import different
  # key material.
  #
  # You cannot perform this operation on an asymmetric CMK or on any CMK
  # in a different AWS account. For more information about creating CMKs
  # with no key material and then importing key material, see [Importing
  # Key Material][2] in the *AWS Key Management Service Developer Guide*.
  #
  # Before using this operation, call GetParametersForImport. Its response
  # includes a public key and an import token. Use the public key to
  # encrypt the key material. Then, submit the import token from the same
  # `GetParametersForImport` response.
  #
  # When calling this operation, you must specify the following values:
  #
  # * The key ID or key ARN of a CMK with no key material. Its `Origin`
  #   must be `EXTERNAL`.
  #
  #   To create a CMK with no key material, call CreateKey and set the
  #   value of its `Origin` parameter to `EXTERNAL`. To get the `Origin`
  #   of a CMK, call DescribeKey.)
  #
  # * The encrypted key material. To get the public key to encrypt the key
  #   material, call GetParametersForImport.
  #
  # * The import token that GetParametersForImport returned. You must use
  #   a public key and token from the same `GetParametersForImport`
  #   response.
  #
  # * Whether the key material expires and if so, when. If you set an
  #   expiration date, AWS KMS deletes the key material from the CMK on
  #   the specified date, and the CMK becomes unusable. To use the CMK
  #   again, you must reimport the same key material. The only way to
  #   change an expiration date is by reimporting the same key material
  #   and specifying a new expiration date.
  #
  # When this operation is successful, the key state of the CMK changes
  # from `PendingImport` to `Enabled`, and you can use the CMK.
  #
  # If this operation fails, use the exception to help determine the
  # problem. If the error is related to the key material, the import
  # token, or wrapping key, use GetParametersForImport to get a new public
  # key and import token for the CMK and repeat the import procedure. For
  # help, see [How To Import Key Material][3] in the *AWS Key Management
  # Service Developer Guide*.
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][4] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: No. You cannot perform this operation on a CMK
  # in a different AWS account.
  #
  # **Required permissions**\: [kms:ImportKeyMaterial][5] (key policy)
  #
  # **Related operations:**
  #
  # * DeleteImportedKeyMaterial
  #
  # * GetParametersForImport
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html#reimport-key-material
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html#importing-keys-overview
  # [4]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [5]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To import key material into a customer master key (CMK)
  #
  #   # The following example imports key material into the specified CMK.
  #
  #   resp = client.import_key_material({
  #   encrypted_key_material: "<binary data>", # The encrypted key material to import.
  #   expiration_model: "KEY_MATERIAL_DOES_NOT_EXPIRE", # A value that specifies whether the key material expires.
  #   import_token: "<binary data>", # The import token that you received in the response to a previous GetParametersForImport request.
  #   key_id: "1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the CMK to import the key material into. You can use the key ID or the Amazon Resource Name (ARN) of the CMK.
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.import_key_material({
  #   key_id: "KeyIdType", # required
  #   import_token: "data", # required
  #   encrypted_key_material: "data", # required
  #   valid_to: Time.now,
  #   expiration_model: "KEY_MATERIAL_EXPIRES", # accepts KEY_MATERIAL_EXPIRES, KEY_MATERIAL_DOES_NOT_EXPIRE
  #   })
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload import_key_material
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ImportKeyMaterial AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#3964
  def import_key_material(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Gets a list of aliases in the caller's AWS account and region. For
  # more information about aliases, see CreateAlias.
  #
  # By default, the `ListAliases` operation returns all aliases in the
  # account and region. To get only the aliases associated with a
  # particular customer master key (CMK), use the `KeyId` parameter.
  #
  # The `ListAliases` response can include aliases that you created and
  # associated with your customer managed CMKs, and aliases that AWS
  # created and associated with AWS managed CMKs in your account. You can
  # recognize AWS aliases because their names have the format
  # `aws/<service-name>`, such as `aws/dynamodb`.
  #
  # The response might also include aliases that have no `TargetKeyId`
  # field. These are predefined aliases that AWS has created but has not
  # yet associated with a CMK. Aliases that AWS creates in your account,
  # including predefined aliases, do not count against your [AWS KMS
  # aliases quota][1].
  #
  # **Cross-account use**\: No. `ListAliases` does not return aliases in
  # other AWS accounts.
  #
  # **Required permissions**\: [kms:ListAliases][2] (IAM policy)
  #
  # For details, see [Controlling access to aliases][3] in the *AWS Key
  # Management Service Developer Guide*.
  #
  # **Related operations:**
  #
  # * CreateAlias
  #
  # * DeleteAlias
  #
  # * UpdateAlias
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/limits.html#aliases-limit
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-alias.html#alias-access
  #
  # The returned {Seahorse::Client::Response response} is a pageable response and is Enumerable. For details on usage see {Aws::PageableResponse PageableResponse}.
  #
  # @example Example: To list aliases
  #
  #   # The following example lists aliases.
  #
  #   resp = client.list_aliases({
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   aliases: [
  #   {
  #   alias_arn: "arn:aws:kms:us-east-2:111122223333:alias/aws/acm",
  #   alias_name: "alias/aws/acm",
  #   target_key_id: "da03f6f7-d279-427a-9cae-de48d07e5b66",
  #   },
  #   {
  #   alias_arn: "arn:aws:kms:us-east-2:111122223333:alias/aws/ebs",
  #   alias_name: "alias/aws/ebs",
  #   target_key_id: "25a217e7-7170-4b8c-8bf6-045ea5f70e5b",
  #   },
  #   {
  #   alias_arn: "arn:aws:kms:us-east-2:111122223333:alias/aws/rds",
  #   alias_name: "alias/aws/rds",
  #   target_key_id: "7ec3104e-c3f2-4b5c-bf42-bfc4772c6685",
  #   },
  #   {
  #   alias_arn: "arn:aws:kms:us-east-2:111122223333:alias/aws/redshift",
  #   alias_name: "alias/aws/redshift",
  #   target_key_id: "08f7a25a-69e2-4fb5-8f10-393db27326fa",
  #   },
  #   {
  #   alias_arn: "arn:aws:kms:us-east-2:111122223333:alias/aws/s3",
  #   alias_name: "alias/aws/s3",
  #   target_key_id: "d2b0f1a3-580d-4f79-b836-bc983be8cfa5",
  #   },
  #   {
  #   alias_arn: "arn:aws:kms:us-east-2:111122223333:alias/example1",
  #   alias_name: "alias/example1",
  #   target_key_id: "4da1e216-62d0-46c5-a7c0-5f3a3d2f8046",
  #   },
  #   {
  #   alias_arn: "arn:aws:kms:us-east-2:111122223333:alias/example2",
  #   alias_name: "alias/example2",
  #   target_key_id: "f32fef59-2cc2-445b-8573-2d73328acbee",
  #   },
  #   {
  #   alias_arn: "arn:aws:kms:us-east-2:111122223333:alias/example3",
  #   alias_name: "alias/example3",
  #   target_key_id: "1374ef38-d34e-4d5f-b2c9-4e0daee38855",
  #   },
  #   ], # A list of aliases, including the key ID of the customer master key (CMK) that each alias refers to.
  #   truncated: false, # A boolean that indicates whether there are more items in the list. Returns true when there are more items, or false when there are not.
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.list_aliases({
  #   key_id: "KeyIdType",
  #   limit: 1,
  #   marker: "MarkerType",
  #   })
  # @example Response structure
  #
  #   resp.aliases #=> Array
  #   resp.aliases[0].alias_name #=> String
  #   resp.aliases[0].alias_arn #=> String
  #   resp.aliases[0].target_key_id #=> String
  #   resp.aliases[0].creation_date #=> Time
  #   resp.aliases[0].last_updated_date #=> Time
  #   resp.next_marker #=> String
  #   resp.truncated #=> Boolean
  # @option params
  # @option params
  # @option params
  # @overload list_aliases
  # @param params [Hash] ({})
  # @return [Types::ListAliasesResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListAliasesResponse#aliases #aliases} => Array&lt;Types::AliasListEntry&gt;
  #   * {Types::ListAliasesResponse#next_marker #next_marker} => String
  #   * {Types::ListAliasesResponse#truncated #truncated} => Boolean
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ListAliases AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#4127
  def list_aliases(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Gets a list of all grants for the specified customer master key (CMK).
  #
  # You must specify the CMK in all requests. You can filter the grant
  # list by grant ID or grantee principal.
  #
  # <note markdown="1"> The `GranteePrincipal` field in the `ListGrants` response usually
  # contains the user or role designated as the grantee principal in the
  # grant. However, when the grantee principal in the grant is an AWS
  # service, the `GranteePrincipal` field contains the [service
  # principal][1], which might represent several different grantee
  # principals.
  #
  #  </note>
  #
  # **Cross-account use**\: Yes. To perform this operation on a CMK in a
  # different AWS account, specify the key ARN in the value of the `KeyId`
  # parameter.
  #
  # **Required permissions**\: [kms:ListGrants][2] (key policy)
  #
  # **Related operations:**
  #
  # * CreateGrant
  #
  # * ListRetirableGrants
  #
  # * RetireGrant
  #
  # * RevokeGrant
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#principal-services
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # The returned {Seahorse::Client::Response response} is a pageable response and is Enumerable. For details on usage see {Aws::PageableResponse PageableResponse}.
  #
  # @example Example: To list grants for a customer master key (CMK)
  #
  #   # The following example lists grants for the specified CMK.
  #
  #   resp = client.list_grants({
  #   key_id: "1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the CMK whose grants you want to list. You can use the key ID or the Amazon Resource Name (ARN) of the CMK.
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   grants: [
  #   {
  #   creation_date: Time.parse("2016-10-25T14:37:41-07:00"),
  #   grant_id: "91ad875e49b04a9d1f3bdeb84d821f9db6ea95e1098813f6d47f0c65fbe2a172",
  #   grantee_principal: "acm.us-east-2.amazonaws.com",
  #   issuing_account: "arn:aws:iam::111122223333:root",
  #   key_id: "arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab",
  #   operations: [
  #   "Encrypt",
  #   "ReEncryptFrom",
  #   "ReEncryptTo",
  #   ],
  #   retiring_principal: "acm.us-east-2.amazonaws.com",
  #   },
  #   {
  #   creation_date: Time.parse("2016-10-25T14:37:41-07:00"),
  #   grant_id: "a5d67d3e207a8fc1f4928749ee3e52eb0440493a8b9cf05bbfad91655b056200",
  #   grantee_principal: "acm.us-east-2.amazonaws.com",
  #   issuing_account: "arn:aws:iam::111122223333:root",
  #   key_id: "arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab",
  #   operations: [
  #   "ReEncryptFrom",
  #   "ReEncryptTo",
  #   ],
  #   retiring_principal: "acm.us-east-2.amazonaws.com",
  #   },
  #   {
  #   creation_date: Time.parse("2016-10-25T14:37:41-07:00"),
  #   grant_id: "c541aaf05d90cb78846a73b346fc43e65be28b7163129488c738e0c9e0628f4f",
  #   grantee_principal: "acm.us-east-2.amazonaws.com",
  #   issuing_account: "arn:aws:iam::111122223333:root",
  #   key_id: "arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab",
  #   operations: [
  #   "Encrypt",
  #   "ReEncryptFrom",
  #   "ReEncryptTo",
  #   ],
  #   retiring_principal: "acm.us-east-2.amazonaws.com",
  #   },
  #   {
  #   creation_date: Time.parse("2016-10-25T14:37:41-07:00"),
  #   grant_id: "dd2052c67b4c76ee45caf1dc6a1e2d24e8dc744a51b36ae2f067dc540ce0105c",
  #   grantee_principal: "acm.us-east-2.amazonaws.com",
  #   issuing_account: "arn:aws:iam::111122223333:root",
  #   key_id: "arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab",
  #   operations: [
  #   "Encrypt",
  #   "ReEncryptFrom",
  #   "ReEncryptTo",
  #   ],
  #   retiring_principal: "acm.us-east-2.amazonaws.com",
  #   },
  #   ], # A list of grants.
  #   truncated: true, # A boolean that indicates whether there are more items in the list. Returns true when there are more items, or false when there are not.
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.list_grants({
  #   limit: 1,
  #   marker: "MarkerType",
  #   key_id: "KeyIdType", # required
  #   grant_id: "GrantIdType",
  #   grantee_principal: "PrincipalIdType",
  #   })
  # @example Response structure
  #
  #   resp.grants #=> Array
  #   resp.grants[0].key_id #=> String
  #   resp.grants[0].grant_id #=> String
  #   resp.grants[0].name #=> String
  #   resp.grants[0].creation_date #=> Time
  #   resp.grants[0].grantee_principal #=> String
  #   resp.grants[0].retiring_principal #=> String
  #   resp.grants[0].issuing_account #=> String
  #   resp.grants[0].operations #=> Array
  #   resp.grants[0].operations[0] #=> String, one of "Decrypt", "Encrypt", "GenerateDataKey", "GenerateDataKeyWithoutPlaintext", "ReEncryptFrom", "ReEncryptTo", "Sign", "Verify", "GetPublicKey", "CreateGrant", "RetireGrant", "DescribeKey", "GenerateDataKeyPair", "GenerateDataKeyPairWithoutPlaintext"
  #   resp.grants[0].constraints.encryption_context_subset #=> Hash
  #   resp.grants[0].constraints.encryption_context_subset["EncryptionContextKey"] #=> String
  #   resp.grants[0].constraints.encryption_context_equals #=> Hash
  #   resp.grants[0].constraints.encryption_context_equals["EncryptionContextKey"] #=> String
  #   resp.next_marker #=> String
  #   resp.truncated #=> Boolean
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload list_grants
  # @param params [Hash] ({})
  # @return [Types::ListGrantsResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListGrantsResponse#grants #grants} => Array&lt;Types::GrantListEntry&gt;
  #   * {Types::ListGrantsResponse#next_marker #next_marker} => String
  #   * {Types::ListGrantsResponse#truncated #truncated} => Boolean
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ListGrants AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#4312
  def list_grants(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Gets the names of the key policies that are attached to a customer
  # master key (CMK). This operation is designed to get policy names that
  # you can use in a GetKeyPolicy operation. However, the only valid
  # policy name is `default`.
  #
  # **Cross-account use**\: No. You cannot perform this operation on a CMK
  # in a different AWS account.
  #
  # **Required permissions**\: [kms:ListKeyPolicies][1] (key policy)
  #
  # **Related operations:**
  #
  # * GetKeyPolicy
  #
  # * PutKeyPolicy
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # The returned {Seahorse::Client::Response response} is a pageable response and is Enumerable. For details on usage see {Aws::PageableResponse PageableResponse}.
  #
  # @example Example: To list key policies for a customer master key (CMK)
  #
  #   # The following example lists key policies for the specified CMK.
  #
  #   resp = client.list_key_policies({
  #   key_id: "1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the CMK whose key policies you want to list. You can use the key ID or the Amazon Resource Name (ARN) of the CMK.
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   policy_names: [
  #   "default",
  #   ], # A list of key policy names.
  #   truncated: false, # A boolean that indicates whether there are more items in the list. Returns true when there are more items, or false when there are not.
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.list_key_policies({
  #   key_id: "KeyIdType", # required
  #   limit: 1,
  #   marker: "MarkerType",
  #   })
  # @example Response structure
  #
  #   resp.policy_names #=> Array
  #   resp.policy_names[0] #=> String
  #   resp.next_marker #=> String
  #   resp.truncated #=> Boolean
  # @option params
  # @option params
  # @option params
  # @overload list_key_policies
  # @param params [Hash] ({})
  # @return [Types::ListKeyPoliciesResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListKeyPoliciesResponse#policy_names #policy_names} => Array&lt;String&gt;
  #   * {Types::ListKeyPoliciesResponse#next_marker #next_marker} => String
  #   * {Types::ListKeyPoliciesResponse#truncated #truncated} => Boolean
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ListKeyPolicies AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#4411
  def list_key_policies(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Gets a list of all customer master keys (CMKs) in the caller's AWS
  # account and Region.
  #
  # **Cross-account use**\: No. You cannot perform this operation on a CMK
  # in a different AWS account.
  #
  # **Required permissions**\: [kms:ListKeys][1] (IAM policy)
  #
  # **Related operations:**
  #
  # * CreateKey
  #
  # * DescribeKey
  #
  # * ListAliases
  #
  # * ListResourceTags
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # The returned {Seahorse::Client::Response response} is a pageable response and is Enumerable. For details on usage see {Aws::PageableResponse PageableResponse}.
  #
  # @example Example: To list customer master keys (CMKs)
  #
  #   # The following example lists CMKs.
  #
  #   resp = client.list_keys({
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   keys: [
  #   {
  #   key_arn: "arn:aws:kms:us-east-2:111122223333:key/0d990263-018e-4e65-a703-eff731de951e",
  #   key_id: "0d990263-018e-4e65-a703-eff731de951e",
  #   },
  #   {
  #   key_arn: "arn:aws:kms:us-east-2:111122223333:key/144be297-0ae1-44ac-9c8f-93cd8c82f841",
  #   key_id: "144be297-0ae1-44ac-9c8f-93cd8c82f841",
  #   },
  #   {
  #   key_arn: "arn:aws:kms:us-east-2:111122223333:key/21184251-b765-428e-b852-2c7353e72571",
  #   key_id: "21184251-b765-428e-b852-2c7353e72571",
  #   },
  #   {
  #   key_arn: "arn:aws:kms:us-east-2:111122223333:key/214fe92f-5b03-4ae1-b350-db2a45dbe10c",
  #   key_id: "214fe92f-5b03-4ae1-b350-db2a45dbe10c",
  #   },
  #   {
  #   key_arn: "arn:aws:kms:us-east-2:111122223333:key/339963f2-e523-49d3-af24-a0fe752aa458",
  #   key_id: "339963f2-e523-49d3-af24-a0fe752aa458",
  #   },
  #   {
  #   key_arn: "arn:aws:kms:us-east-2:111122223333:key/b776a44b-df37-4438-9be4-a27494e4271a",
  #   key_id: "b776a44b-df37-4438-9be4-a27494e4271a",
  #   },
  #   {
  #   key_arn: "arn:aws:kms:us-east-2:111122223333:key/deaf6c9e-cf2c-46a6-bf6d-0b6d487cffbb",
  #   key_id: "deaf6c9e-cf2c-46a6-bf6d-0b6d487cffbb",
  #   },
  #   ], # A list of CMKs, including the key ID and Amazon Resource Name (ARN) of each one.
  #   truncated: false, # A boolean that indicates whether there are more items in the list. Returns true when there are more items, or false when there are not.
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.list_keys({
  #   limit: 1,
  #   marker: "MarkerType",
  #   })
  # @example Response structure
  #
  #   resp.keys #=> Array
  #   resp.keys[0].key_id #=> String
  #   resp.keys[0].key_arn #=> String
  #   resp.next_marker #=> String
  #   resp.truncated #=> Boolean
  # @option params
  # @option params
  # @overload list_keys
  # @param params [Hash] ({})
  # @return [Types::ListKeysResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListKeysResponse#keys #keys} => Array&lt;Types::KeyListEntry&gt;
  #   * {Types::ListKeysResponse#next_marker #next_marker} => String
  #   * {Types::ListKeysResponse#truncated #truncated} => Boolean
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ListKeys AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#4522
  def list_keys(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns all tags on the specified customer master key (CMK).
  #
  # For general information about tags, including the format and syntax,
  # see [Tagging AWS resources][1] in the *Amazon Web Services General
  # Reference*. For information about using tags in AWS KMS, see [Tagging
  # keys][2].
  #
  # **Cross-account use**\: No. You cannot perform this operation on a CMK
  # in a different AWS account.
  #
  # **Required permissions**\: [kms:ListResourceTags][3] (key policy)
  #
  # **Related operations:**
  #
  # * TagResource
  #
  # * UntagResource
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/tagging-keys.html
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To list tags for a customer master key (CMK)
  #
  #   # The following example lists tags for a CMK.
  #
  #   resp = client.list_resource_tags({
  #   key_id: "1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the CMK whose tags you are listing. You can use the key ID or the Amazon Resource Name (ARN) of the CMK.
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   tags: [
  #   {
  #   tag_key: "CostCenter",
  #   tag_value: "87654",
  #   },
  #   {
  #   tag_key: "CreatedBy",
  #   tag_value: "ExampleUser",
  #   },
  #   {
  #   tag_key: "Purpose",
  #   tag_value: "Test",
  #   },
  #   ], # A list of tags.
  #   truncated: false, # A boolean that indicates whether there are more items in the list. Returns true when there are more items, or false when there are not.
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.list_resource_tags({
  #   key_id: "KeyIdType", # required
  #   limit: 1,
  #   marker: "MarkerType",
  #   })
  # @example Response structure
  #
  #   resp.tags #=> Array
  #   resp.tags[0].tag_key #=> String
  #   resp.tags[0].tag_value #=> String
  #   resp.next_marker #=> String
  #   resp.truncated #=> Boolean
  # @option params
  # @option params
  # @option params
  # @overload list_resource_tags
  # @param params [Hash] ({})
  # @return [Types::ListResourceTagsResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListResourceTagsResponse#tags #tags} => Array&lt;Types::Tag&gt;
  #   * {Types::ListResourceTagsResponse#next_marker #next_marker} => String
  #   * {Types::ListResourceTagsResponse#truncated #truncated} => Boolean
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ListResourceTags AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#4635
  def list_resource_tags(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Returns all grants in which the specified principal is the
  # `RetiringPrincipal` in the grant.
  #
  # You can specify any principal in your AWS account. The grants that are
  # returned include grants for CMKs in your AWS account and other AWS
  # accounts.
  #
  # You might use this operation to determine which grants you may retire.
  # To retire a grant, use the RetireGrant operation.
  #
  # **Cross-account use**\: You must specify a principal in your AWS
  # account. However, this operation can return grants in any AWS account.
  # You do not need `kms:ListRetirableGrants` permission (or any other
  # additional permission) in any AWS account other than your own.
  #
  # **Required permissions**\: [kms:ListRetirableGrants][1] (IAM policy)
  # in your AWS account.
  #
  # **Related operations:**
  #
  # * CreateGrant
  #
  # * ListGrants
  #
  # * RetireGrant
  #
  # * RevokeGrant
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To list grants that the specified principal can retire
  #
  #   # The following example lists the grants that the specified principal (identity) can retire.
  #
  #   resp = client.list_retirable_grants({
  #   retiring_principal: "arn:aws:iam::111122223333:role/ExampleRole", # The retiring principal whose grants you want to list. Use the Amazon Resource Name (ARN) of an AWS principal such as an AWS account (root), IAM user, federated user, or assumed role user.
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   grants: [
  #   {
  #   creation_date: Time.parse("2016-12-07T11:09:35-08:00"),
  #   grant_id: "0c237476b39f8bc44e45212e08498fbe3151305030726c0590dd8d3e9f3d6a60",
  #   grantee_principal: "arn:aws:iam::111122223333:role/ExampleRole",
  #   issuing_account: "arn:aws:iam::444455556666:root",
  #   key_id: "arn:aws:kms:us-east-2:444455556666:key/1234abcd-12ab-34cd-56ef-1234567890ab",
  #   operations: [
  #   "Decrypt",
  #   "Encrypt",
  #   ],
  #   retiring_principal: "arn:aws:iam::111122223333:role/ExampleRole",
  #   },
  #   ], # A list of grants that the specified principal can retire.
  #   truncated: false, # A boolean that indicates whether there are more items in the list. Returns true when there are more items, or false when there are not.
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.list_retirable_grants({
  #   limit: 1,
  #   marker: "MarkerType",
  #   retiring_principal: "PrincipalIdType", # required
  #   })
  # @example Response structure
  #
  #   resp.grants #=> Array
  #   resp.grants[0].key_id #=> String
  #   resp.grants[0].grant_id #=> String
  #   resp.grants[0].name #=> String
  #   resp.grants[0].creation_date #=> Time
  #   resp.grants[0].grantee_principal #=> String
  #   resp.grants[0].retiring_principal #=> String
  #   resp.grants[0].issuing_account #=> String
  #   resp.grants[0].operations #=> Array
  #   resp.grants[0].operations[0] #=> String, one of "Decrypt", "Encrypt", "GenerateDataKey", "GenerateDataKeyWithoutPlaintext", "ReEncryptFrom", "ReEncryptTo", "Sign", "Verify", "GetPublicKey", "CreateGrant", "RetireGrant", "DescribeKey", "GenerateDataKeyPair", "GenerateDataKeyPairWithoutPlaintext"
  #   resp.grants[0].constraints.encryption_context_subset #=> Hash
  #   resp.grants[0].constraints.encryption_context_subset["EncryptionContextKey"] #=> String
  #   resp.grants[0].constraints.encryption_context_equals #=> Hash
  #   resp.grants[0].constraints.encryption_context_equals["EncryptionContextKey"] #=> String
  #   resp.next_marker #=> String
  #   resp.truncated #=> Boolean
  # @option params
  # @option params
  # @option params
  # @overload list_retirable_grants
  # @param params [Hash] ({})
  # @return [Types::ListGrantsResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ListGrantsResponse#grants #grants} => Array&lt;Types::GrantListEntry&gt;
  #   * {Types::ListGrantsResponse#next_marker #next_marker} => String
  #   * {Types::ListGrantsResponse#truncated #truncated} => Boolean
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ListRetirableGrants AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#4766
  def list_retirable_grants(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Attaches a key policy to the specified customer master key (CMK).
  #
  # For more information about key policies, see [Key Policies][1] in the
  # *AWS Key Management Service Developer Guide*. For help writing and
  # formatting a JSON policy document, see the [IAM JSON Policy
  # Reference][2] in the <i> <i>IAM User Guide</i> </i>. For examples of
  # adding a key policy in multiple programming languages, see [Setting a
  # key policy][3] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: No. You cannot perform this operation on a CMK
  # in a different AWS account.
  #
  # **Required permissions**\: [kms:PutKeyPolicy][4] (key policy)
  #
  # **Related operations**\: GetKeyPolicy
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html
  # [2]: https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/programming-key-policies.html#put-policy
  # [4]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To attach a key policy to a customer master key (CMK)
  #
  #   # The following example attaches a key policy to the specified CMK.
  #
  #   resp = client.put_key_policy({
  #   key_id: "1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the CMK to attach the key policy to. You can use the key ID or the Amazon Resource Name (ARN) of the CMK.
  #   policy: "{\"Version\":\"2012-10-17\",\"Id\":\"custom-policy-2016-12-07\",\"Statement\":[{\"Sid\":\"EnableIAMUserPermissions\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::111122223333:root\"},\"Action\":\"kms:*\",\"Resource\":\"*\"},{\"Sid\":\"AllowaccessforKeyAdministrators\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[\"arn:aws:iam::111122223333:user/ExampleAdminUser\",\"arn:aws:iam::111122223333:role/ExampleAdminRole\"]},\"Action\":[\"kms:Create*\",\"kms:Describe*\",\"kms:Enable*\",\"kms:List*\",\"kms:Put*\",\"kms:Update*\",\"kms:Revoke*\",\"kms:Disable*\",\"kms:Get*\",\"kms:Delete*\",\"kms:ScheduleKeyDeletion\",\"kms:CancelKeyDeletion\"],\"Resource\":\"*\"},{\"Sid\":\"Allowuseofthekey\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::111122223333:role/ExamplePowerUserRole\"},\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:DescribeKey\"],\"Resource\":\"*\"},{\"Sid\":\"Allowattachmentofpersistentresources\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::111122223333:role/ExamplePowerUserRole\"},\"Action\":[\"kms:CreateGrant\",\"kms:ListGrants\",\"kms:RevokeGrant\"],\"Resource\":\"*\",\"Condition\":{\"Bool\":{\"kms:GrantIsForAWSResource\":\"true\"}}}]}", # The key policy document.
  #   policy_name: "default", # The name of the key policy.
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.put_key_policy({
  #   key_id: "KeyIdType", # required
  #   policy_name: "PolicyNameType", # required
  #   policy: "PolicyType", # required
  #   bypass_policy_lockout_safety_check: false,
  #   })
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload put_key_policy
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/PutKeyPolicy AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#4889
  def put_key_policy(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Decrypts ciphertext and then reencrypts it entirely within AWS KMS.
  # You can use this operation to change the customer master key (CMK)
  # under which data is encrypted, such as when you [manually rotate][1] a
  # CMK or change the CMK that protects a ciphertext. You can also use it
  # to reencrypt ciphertext under the same CMK, such as to change the
  # [encryption context][2] of a ciphertext.
  #
  # The `ReEncrypt` operation can decrypt ciphertext that was encrypted by
  # using an AWS KMS CMK in an AWS KMS operation, such as Encrypt or
  # GenerateDataKey. It can also decrypt ciphertext that was encrypted by
  # using the public key of an [asymmetric CMK][3] outside of AWS KMS.
  # However, it cannot decrypt ciphertext produced by other libraries,
  # such as the [AWS Encryption SDK][4] or [Amazon S3 client-side
  # encryption][5]. These libraries return a ciphertext format that is
  # incompatible with AWS KMS.
  #
  # When you use the `ReEncrypt` operation, you need to provide
  # information for the decrypt operation and the subsequent encrypt
  # operation.
  #
  # * If your ciphertext was encrypted under an asymmetric CMK, you must
  #   use the `SourceKeyId` parameter to identify the CMK that encrypted
  #   the ciphertext. You must also supply the encryption algorithm that
  #   was used. This information is required to decrypt the data.
  #
  # * If your ciphertext was encrypted under a symmetric CMK, the
  #   `SourceKeyId` parameter is optional. AWS KMS can get this
  #   information from metadata that it adds to the symmetric ciphertext
  #   blob. This feature adds durability to your implementation by
  #   ensuring that authorized users can decrypt ciphertext decades after
  #   it was encrypted, even if they've lost track of the CMK ID.
  #   However, specifying the source CMK is always recommended as a best
  #   practice. When you use the `SourceKeyId` parameter to specify a CMK,
  #   AWS KMS uses only the CMK you specify. If the ciphertext was
  #   encrypted under a different CMK, the `ReEncrypt` operation fails.
  #   This practice ensures that you use the CMK that you intend.
  #
  # * To reencrypt the data, you must use the `DestinationKeyId` parameter
  #   specify the CMK that re-encrypts the data after it is decrypted. You
  #   can select a symmetric or asymmetric CMK. If the destination CMK is
  #   an asymmetric CMK, you must also provide the encryption algorithm.
  #   The algorithm that you choose must be compatible with the CMK.
  #
  #   When you use an asymmetric CMK to encrypt or reencrypt data, be sure
  #   to record the CMK and encryption algorithm that you choose. You will
  #   be required to provide the same CMK and encryption algorithm when
  #   you decrypt the data. If the CMK and algorithm do not match the
  #   values used to encrypt the data, the decrypt operation fails.
  #
  #    You are not required to supply the CMK ID and encryption algorithm
  #   when you decrypt with symmetric CMKs because AWS KMS stores this
  #   information in the ciphertext blob. AWS KMS cannot store metadata in
  #   ciphertext generated with asymmetric keys. The standard format for
  #   asymmetric key ciphertext does not include configurable fields.
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][6] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: Yes. The source CMK and destination CMK can be
  # in different AWS accounts. Either or both CMKs can be in a different
  # account than the caller.
  #
  # **Required permissions**\:
  #
  # * [kms:ReEncryptFrom][7] permission on the source CMK (key policy)
  #
  # * [kms:ReEncryptTo][7] permission on the destination CMK (key policy)
  #
  # To permit reencryption from or to a CMK, include the
  # `"kms:ReEncrypt*"` permission in your [key policy][8]. This permission
  # is automatically included in the key policy when you use the console
  # to create a CMK. But you must include it manually when you create a
  # CMK programmatically or when you use the PutKeyPolicy operation to set
  # a key policy.
  #
  # **Related operations:**
  #
  # * Decrypt
  #
  # * Encrypt
  #
  # * GenerateDataKey
  #
  # * GenerateDataKeyPair
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html#rotate-keys-manually
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-concepts.html#asymmetric-cmks
  # [4]: https://docs.aws.amazon.com/encryption-sdk/latest/developer-guide/
  # [5]: https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingClientSideEncryption.html
  # [6]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [7]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  # [8]: https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html
  #
  # @example Example: To reencrypt data
  #
  #   # The following example reencrypts data with the specified CMK.
  #
  #   resp = client.re_encrypt({
  #   ciphertext_blob: "<binary data>", # The data to reencrypt.
  #   destination_key_id: "0987dcba-09fe-87dc-65ba-ab0987654321", # The identifier of the CMK to use to reencrypt the data. You can use any valid key identifier.
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   ciphertext_blob: "<binary data>", # The reencrypted data.
  #   key_id: "arn:aws:kms:us-east-2:111122223333:key/0987dcba-09fe-87dc-65ba-ab0987654321", # The ARN of the CMK that was used to reencrypt the data.
  #   source_key_id: "arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab", # The ARN of the CMK that was originally used to encrypt the data.
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.re_encrypt({
  #   ciphertext_blob: "data", # required
  #   source_encryption_context: {
  #   "EncryptionContextKey" => "EncryptionContextValue",
  #   },
  #   source_key_id: "KeyIdType",
  #   destination_key_id: "KeyIdType", # required
  #   destination_encryption_context: {
  #   "EncryptionContextKey" => "EncryptionContextValue",
  #   },
  #   source_encryption_algorithm: "SYMMETRIC_DEFAULT", # accepts SYMMETRIC_DEFAULT, RSAES_OAEP_SHA_1, RSAES_OAEP_SHA_256
  #   destination_encryption_algorithm: "SYMMETRIC_DEFAULT", # accepts SYMMETRIC_DEFAULT, RSAES_OAEP_SHA_1, RSAES_OAEP_SHA_256
  #   grant_tokens: ["GrantTokenType"],
  #   })
  # @example Response structure
  #
  #   resp.ciphertext_blob #=> String
  #   resp.source_key_id #=> String
  #   resp.key_id #=> String
  #   resp.source_encryption_algorithm #=> String, one of "SYMMETRIC_DEFAULT", "RSAES_OAEP_SHA_1", "RSAES_OAEP_SHA_256"
  #   resp.destination_encryption_algorithm #=> String, one of "SYMMETRIC_DEFAULT", "RSAES_OAEP_SHA_1", "RSAES_OAEP_SHA_256"
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload re_encrypt
  # @param params [Hash] ({})
  # @return [Types::ReEncryptResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ReEncryptResponse#ciphertext_blob #ciphertext_blob} => String
  #   * {Types::ReEncryptResponse#source_key_id #source_key_id} => String
  #   * {Types::ReEncryptResponse#key_id #key_id} => String
  #   * {Types::ReEncryptResponse#source_encryption_algorithm #source_encryption_algorithm} => String
  #   * {Types::ReEncryptResponse#destination_encryption_algorithm #destination_encryption_algorithm} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ReEncrypt AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#5174
  def re_encrypt(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Retires a grant. To clean up, you can retire a grant when you're done
  # using it. You should revoke a grant when you intend to actively deny
  # operations that depend on it. The following are permitted to call this
  # API:
  #
  # * The AWS account (root user) under which the grant was created
  #
  # * The `RetiringPrincipal`, if present in the grant
  #
  # * The `GranteePrincipal`, if `RetireGrant` is an operation specified
  #   in the grant
  #
  # You must identify the grant to retire by its grant token or by a
  # combination of the grant ID and the Amazon Resource Name (ARN) of the
  # customer master key (CMK). A grant token is a unique variable-length
  # base64-encoded string. A grant ID is a 64 character unique identifier
  # of a grant. The CreateGrant operation returns both.
  #
  # **Cross-account use**\: Yes. You can retire a grant on a CMK in a
  # different AWS account.
  #
  # **Required permissions:**\: Permission to retire a grant is specified
  # in the grant. You cannot control access to this operation in a policy.
  # For more information, see [Using grants][1] in the *AWS Key Management
  # Service Developer Guide*.
  #
  # **Related operations:**
  #
  # * CreateGrant
  #
  # * ListGrants
  #
  # * ListRetirableGrants
  #
  # * RevokeGrant
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/grants.html
  #
  # @example Example: To retire a grant
  #
  #   # The following example retires a grant.
  #
  #   resp = client.retire_grant({
  #   grant_id: "0c237476b39f8bc44e45212e08498fbe3151305030726c0590dd8d3e9f3d6a60", # The identifier of the grant to retire.
  #   key_id: "arn:aws:kms:us-east-2:444455556666:key/1234abcd-12ab-34cd-56ef-1234567890ab", # The Amazon Resource Name (ARN) of the customer master key (CMK) associated with the grant.
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.retire_grant({
  #   grant_token: "GrantTokenType",
  #   key_id: "KeyIdType",
  #   grant_id: "GrantIdType",
  #   })
  # @option params
  # @option params
  # @option params
  # @overload retire_grant
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/RetireGrant AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#5261
  def retire_grant(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Revokes the specified grant for the specified customer master key
  # (CMK). You can revoke a grant to actively deny operations that depend
  # on it.
  #
  # **Cross-account use**\: Yes. To perform this operation on a CMK in a
  # different AWS account, specify the key ARN in the value of the `KeyId`
  # parameter.
  #
  # **Required permissions**\: [kms:RevokeGrant][1] (key policy)
  #
  # **Related operations:**
  #
  # * CreateGrant
  #
  # * ListGrants
  #
  # * ListRetirableGrants
  #
  # * RetireGrant
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To revoke a grant
  #
  #   # The following example revokes a grant.
  #
  #   resp = client.revoke_grant({
  #   grant_id: "0c237476b39f8bc44e45212e08498fbe3151305030726c0590dd8d3e9f3d6a60", # The identifier of the grant to revoke.
  #   key_id: "1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the customer master key (CMK) associated with the grant. You can use the key ID or the Amazon Resource Name (ARN) of the CMK.
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.revoke_grant({
  #   key_id: "KeyIdType", # required
  #   grant_id: "GrantIdType", # required
  #   })
  # @option params
  # @option params
  # @overload revoke_grant
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/RevokeGrant AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#5332
  def revoke_grant(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Schedules the deletion of a customer master key (CMK). You may provide
  # a waiting period, specified in days, before deletion occurs. If you do
  # not provide a waiting period, the default period of 30 days is used.
  # When this operation is successful, the key state of the CMK changes to
  # `PendingDeletion`. Before the waiting period ends, you can use
  # CancelKeyDeletion to cancel the deletion of the CMK. After the waiting
  # period ends, AWS KMS deletes the CMK and all AWS KMS data associated
  # with it, including all aliases that refer to it.
  #
  # Deleting a CMK is a destructive and potentially dangerous operation.
  # When a CMK is deleted, all data that was encrypted under the CMK is
  # unrecoverable. To prevent the use of a CMK without deleting it, use
  # DisableKey.
  #
  # If you schedule deletion of a CMK from a [custom key store][1], when
  # the waiting period expires, `ScheduleKeyDeletion` deletes the CMK from
  # AWS KMS. Then AWS KMS makes a best effort to delete the key material
  # from the associated AWS CloudHSM cluster. However, you might need to
  # manually [delete the orphaned key material][2] from the cluster and
  # its backups.
  #
  # For more information about scheduling a CMK for deletion, see
  # [Deleting Customer Master Keys][3] in the *AWS Key Management Service
  # Developer Guide*.
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][4] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: No. You cannot perform this operation on a CMK
  # in a different AWS account.
  #
  # **Required permissions**\: [kms:ScheduleKeyDeletion][5] (key policy)
  #
  # **Related operations**
  #
  # * CancelKeyDeletion
  #
  # * DisableKey
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html#fix-keystore-orphaned-key
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html
  # [4]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [5]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To schedule a customer master key (CMK) for deletion
  #
  #   # The following example schedules the specified CMK for deletion.
  #
  #   resp = client.schedule_key_deletion({
  #   key_id: "1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the CMK to schedule for deletion. You can use the key ID or the Amazon Resource Name (ARN) of the CMK.
  #   pending_window_in_days: 7, # The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the CMK.
  #   })
  #
  #   resp.to_h outputs the following:
  #   {
  #   deletion_date: Time.parse("2016-12-17T16:00:00-08:00"), # The date and time after which AWS KMS deletes the CMK.
  #   key_id: "arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab", # The ARN of the CMK that is scheduled for deletion.
  #   }
  # @example Request syntax with placeholder values
  #
  #   resp = client.schedule_key_deletion({
  #   key_id: "KeyIdType", # required
  #   pending_window_in_days: 1,
  #   })
  # @example Response structure
  #
  #   resp.key_id #=> String
  #   resp.deletion_date #=> Time
  # @option params
  # @option params
  # @overload schedule_key_deletion
  # @param params [Hash] ({})
  # @return [Types::ScheduleKeyDeletionResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::ScheduleKeyDeletionResponse#key_id #key_id} => String
  #   * {Types::ScheduleKeyDeletionResponse#deletion_date #deletion_date} => Time
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ScheduleKeyDeletion AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#5443
  def schedule_key_deletion(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Creates a [digital signature][1] for a message or message digest by
  # using the private key in an asymmetric CMK. To verify the signature,
  # use the Verify operation, or use the public key in the same asymmetric
  # CMK outside of AWS KMS. For information about symmetric and asymmetric
  # CMKs, see [Using Symmetric and Asymmetric CMKs][2] in the *AWS Key
  # Management Service Developer Guide*.
  #
  # Digital signatures are generated and verified by using asymmetric key
  # pair, such as an RSA or ECC pair that is represented by an asymmetric
  # customer master key (CMK). The key owner (or an authorized user) uses
  # their private key to sign a message. Anyone with the public key can
  # verify that the message was signed with that particular private key
  # and that the message hasn't changed since it was signed.
  #
  # To use the `Sign` operation, provide the following information:
  #
  # * Use the `KeyId` parameter to identify an asymmetric CMK with a
  #   `KeyUsage` value of `SIGN_VERIFY`. To get the `KeyUsage` value of a
  #   CMK, use the DescribeKey operation. The caller must have `kms:Sign`
  #   permission on the CMK.
  #
  # * Use the `Message` parameter to specify the message or message digest
  #   to sign. You can submit messages of up to 4096 bytes. To sign a
  #   larger message, generate a hash digest of the message, and then
  #   provide the hash digest in the `Message` parameter. To indicate
  #   whether the message is a full message or a digest, use the
  #   `MessageType` parameter.
  #
  # * Choose a signing algorithm that is compatible with the CMK.
  #
  # When signing a message, be sure to record the CMK and the signing
  # algorithm. This information is required to verify the signature.
  #
  # To verify the signature that this operation generates, use the Verify
  # operation. Or use the GetPublicKey operation to download the public
  # key and then use the public key to verify the signature outside of AWS
  # KMS.
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][3] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: Yes. To perform this operation with a CMK in a
  # different AWS account, specify the key ARN or alias ARN in the value
  # of the `KeyId` parameter.
  #
  # **Required permissions**\: [kms:Sign][4] (key policy)
  #
  # **Related operations**\: Verify
  #
  #
  #
  # [1]: https://en.wikipedia.org/wiki/Digital_signature
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [4]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.sign({
  #   key_id: "KeyIdType", # required
  #   message: "data", # required
  #   message_type: "RAW", # accepts RAW, DIGEST
  #   grant_tokens: ["GrantTokenType"],
  #   signing_algorithm: "RSASSA_PSS_SHA_256", # required, accepts RSASSA_PSS_SHA_256, RSASSA_PSS_SHA_384, RSASSA_PSS_SHA_512, RSASSA_PKCS1_V1_5_SHA_256, RSASSA_PKCS1_V1_5_SHA_384, RSASSA_PKCS1_V1_5_SHA_512, ECDSA_SHA_256, ECDSA_SHA_384, ECDSA_SHA_512
  #   })
  # @example Response structure
  #
  #   resp.key_id #=> String
  #   resp.signature #=> String
  #   resp.signing_algorithm #=> String, one of "RSASSA_PSS_SHA_256", "RSASSA_PSS_SHA_384", "RSASSA_PSS_SHA_512", "RSASSA_PKCS1_V1_5_SHA_256", "RSASSA_PKCS1_V1_5_SHA_384", "RSASSA_PKCS1_V1_5_SHA_512", "ECDSA_SHA_256", "ECDSA_SHA_384", "ECDSA_SHA_512"
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload sign
  # @param params [Hash] ({})
  # @return [Types::SignResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::SignResponse#key_id #key_id} => String
  #   * {Types::SignResponse#signature #signature} => String
  #   * {Types::SignResponse#signing_algorithm #signing_algorithm} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/Sign AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#5584
  def sign(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Adds or edits tags on a [customer managed CMK][1].
  #
  # Each tag consists of a tag key and a tag value, both of which are
  # case-sensitive strings. The tag value can be an empty (null) string.
  #
  # To add a tag, specify a new tag key and a tag value. To edit a tag,
  # specify an existing tag key and a new tag value.
  #
  # You can use this operation to tag a [customer managed CMK][1], but you
  # cannot tag an [AWS managed CMK][2], an [AWS owned CMK][3], or an
  # alias.
  #
  # For general information about tags, including the format and syntax,
  # see [Tagging AWS resources][4] in the *Amazon Web Services General
  # Reference*. For information about using tags in AWS KMS, see [Tagging
  # keys][5].
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][6] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: No. You cannot perform this operation on a CMK
  # in a different AWS account.
  #
  # **Required permissions**\: [kms:TagResource][7] (key policy)
  #
  # **Related operations**
  #
  # * UntagResource
  #
  # * ListResourceTags
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-owned-cmk
  # [4]: https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html
  # [5]: https://docs.aws.amazon.com/kms/latest/developerguide/tagging-keys.html
  # [6]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [7]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To tag a customer master key (CMK)
  #
  #   # The following example tags a CMK.
  #
  #   resp = client.tag_resource({
  #   key_id: "1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the CMK you are tagging. You can use the key ID or the Amazon Resource Name (ARN) of the CMK.
  #   tags: [
  #   {
  #   tag_key: "Purpose",
  #   tag_value: "Test",
  #   },
  #   ], # A list of tags.
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.tag_resource({
  #   key_id: "KeyIdType", # required
  #   tags: [ # required
  #   {
  #   tag_key: "TagKeyType", # required
  #   tag_value: "TagValueType", # required
  #   },
  #   ],
  #   })
  # @option params
  # @option params
  # @overload tag_resource
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/TagResource AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#5688
  def tag_resource(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Deletes tags from a [customer managed CMK][1]. To delete a tag,
  # specify the tag key and the CMK.
  #
  # When it succeeds, the `UntagResource` operation doesn't return any
  # output. Also, if the specified tag key isn't found on the CMK, it
  # doesn't throw an exception or return a response. To confirm that the
  # operation worked, use the ListResourceTags operation.
  #
  # For general information about tags, including the format and syntax,
  # see [Tagging AWS resources][2] in the *Amazon Web Services General
  # Reference*. For information about using tags in AWS KMS, see [Tagging
  # keys][3].
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][4] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: No. You cannot perform this operation on a CMK
  # in a different AWS account.
  #
  # **Required permissions**\: [kms:UntagResource][5] (key policy)
  #
  # **Related operations**
  #
  # * TagResource
  #
  # * ListResourceTags
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk
  # [2]: https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/tagging-keys.html
  # [4]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [5]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To remove tags from a customer master key (CMK)
  #
  #   # The following example removes tags from a CMK.
  #
  #   resp = client.untag_resource({
  #   key_id: "1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the CMK whose tags you are removing.
  #   tag_keys: [
  #   "Purpose",
  #   "CostCenter",
  #   ], # A list of tag keys. Provide only the tag keys, not the tag values.
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.untag_resource({
  #   key_id: "KeyIdType", # required
  #   tag_keys: ["TagKeyType"], # required
  #   })
  # @option params
  # @option params
  # @overload untag_resource
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/UntagResource AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#5772
  def untag_resource(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Associates an existing AWS KMS alias with a different customer master
  # key (CMK). Each alias is associated with only one CMK at a time,
  # although a CMK can have multiple aliases. The alias and the CMK must
  # be in the same AWS account and region.
  #
  # The current and new CMK must be the same type (both symmetric or both
  # asymmetric), and they must have the same key usage (`ENCRYPT_DECRYPT`
  # or `SIGN_VERIFY`). This restriction prevents errors in code that uses
  # aliases. If you must assign an alias to a different type of CMK, use
  # DeleteAlias to delete the old alias and CreateAlias to create a new
  # alias.
  #
  # You cannot use `UpdateAlias` to change an alias name. To change an
  # alias name, use DeleteAlias to delete the old alias and CreateAlias to
  # create a new alias.
  #
  # Because an alias is not a property of a CMK, you can create, update,
  # and delete the aliases of a CMK without affecting the CMK. Also,
  # aliases do not appear in the response from the DescribeKey operation.
  # To get the aliases of all CMKs in the account, use the ListAliases
  # operation.
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][1] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: No. You cannot perform this operation on a CMK
  # in a different AWS account.
  #
  # **Required permissions**
  #
  # * [kms:UpdateAlias][2] on the alias (IAM policy).
  #
  # * [kms:UpdateAlias][2] on the current CMK (key policy).
  #
  # * [kms:UpdateAlias][2] on the new CMK (key policy).
  #
  # For details, see [Controlling access to aliases][3] in the *AWS Key
  # Management Service Developer Guide*.
  #
  # **Related operations:**
  #
  # * CreateAlias
  #
  # * DeleteAlias
  #
  # * ListAliases
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-alias.html#alias-access
  #
  # @example Example: To update an alias
  #
  #   # The following example updates the specified alias to refer to the specified customer master key (CMK).
  #
  #   resp = client.update_alias({
  #   alias_name: "alias/ExampleAlias", # The alias to update.
  #   target_key_id: "1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the CMK that the alias will refer to after this operation succeeds. You can use the key ID or the Amazon Resource Name (ARN) of the CMK.
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.update_alias({
  #   alias_name: "AliasNameType", # required
  #   target_key_id: "KeyIdType", # required
  #   })
  # @option params
  # @option params
  # @overload update_alias
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/UpdateAlias AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#5889
  def update_alias(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Changes the properties of a custom key store. Use the
  # `CustomKeyStoreId` parameter to identify the custom key store you want
  # to edit. Use the remaining parameters to change the properties of the
  # custom key store.
  #
  # You can only update a custom key store that is disconnected. To
  # disconnect the custom key store, use DisconnectCustomKeyStore. To
  # reconnect the custom key store after the update completes, use
  # ConnectCustomKeyStore. To find the connection state of a custom key
  # store, use the DescribeCustomKeyStores operation.
  #
  # Use the parameters of `UpdateCustomKeyStore` to edit your keystore
  # settings.
  #
  # * Use the **NewCustomKeyStoreName** parameter to change the friendly
  #   name of the custom key store to the value that you specify.
  #
  #
  #
  # * Use the **KeyStorePassword** parameter tell AWS KMS the current
  #   password of the [ `kmsuser` crypto user (CU)][1] in the associated
  #   AWS CloudHSM cluster. You can use this parameter to [fix connection
  #   failures][2] that occur when AWS KMS cannot log into the associated
  #   cluster because the `kmsuser` password has changed. This value does
  #   not change the password in the AWS CloudHSM cluster.
  #
  #
  #
  # * Use the **CloudHsmClusterId** parameter to associate the custom key
  #   store with a different, but related, AWS CloudHSM cluster. You can
  #   use this parameter to repair a custom key store if its AWS CloudHSM
  #   cluster becomes corrupted or is deleted, or when you need to create
  #   or restore a cluster from a backup.
  #
  # If the operation succeeds, it returns a JSON object with no
  # properties.
  #
  # This operation is part of the [Custom Key Store feature][3] feature in
  # AWS KMS, which combines the convenience and extensive integration of
  # AWS KMS with the isolation and control of a single-tenant key store.
  #
  # **Cross-account use**\: No. You cannot perform this operation on a
  # custom key store in a different AWS account.
  #
  # **Required permissions**\: [kms:UpdateCustomKeyStore][4] (IAM policy)
  #
  # **Related operations:**
  #
  # * ConnectCustomKeyStore
  #
  # * CreateCustomKeyStore
  #
  # * DeleteCustomKeyStore
  #
  # * DescribeCustomKeyStores
  #
  # * DisconnectCustomKeyStore
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html#fix-keystore-password
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html
  # [4]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.update_custom_key_store({
  #   custom_key_store_id: "CustomKeyStoreIdType", # required
  #   new_custom_key_store_name: "CustomKeyStoreNameType",
  #   key_store_password: "KeyStorePasswordType",
  #   cloud_hsm_cluster_id: "CloudHsmClusterIdType",
  #   })
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload update_custom_key_store
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/UpdateCustomKeyStore AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#6009
  def update_custom_key_store(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Updates the description of a customer master key (CMK). To see the
  # description of a CMK, use DescribeKey.
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][1] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: No. You cannot perform this operation on a CMK
  # in a different AWS account.
  #
  # **Required permissions**\: [kms:UpdateKeyDescription][2] (key policy)
  #
  # **Related operations**
  #
  # * CreateKey
  #
  # * DescribeKey
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Example: To update the description of a customer master key (CMK)
  #
  #   # The following example updates the description of the specified CMK.
  #
  #   resp = client.update_key_description({
  #   description: "Example description that indicates the intended use of this CMK.", # The updated description.
  #   key_id: "1234abcd-12ab-34cd-56ef-1234567890ab", # The identifier of the CMK whose description you are updating. You can use the key ID or the Amazon Resource Name (ARN) of the CMK.
  #   })
  # @example Request syntax with placeholder values
  #
  #   resp = client.update_key_description({
  #   key_id: "KeyIdType", # required
  #   description: "DescriptionType", # required
  #   })
  # @option params
  # @option params
  # @overload update_key_description
  # @param params [Hash] ({})
  # @return [Struct] Returns an empty {Seahorse::Client::Response response}.
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/UpdateKeyDescription AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#6077
  def update_key_description(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # Verifies a digital signature that was generated by the Sign operation.
  #
  #
  #
  # Verification confirms that an authorized user signed the message with
  # the specified CMK and signing algorithm, and the message hasn't
  # changed since it was signed. If the signature is verified, the value
  # of the `SignatureValid` field in the response is `True`. If the
  # signature verification fails, the `Verify` operation fails with an
  # `KMSInvalidSignatureException` exception.
  #
  # A digital signature is generated by using the private key in an
  # asymmetric CMK. The signature is verified by using the public key in
  # the same asymmetric CMK. For information about symmetric and
  # asymmetric CMKs, see [Using Symmetric and Asymmetric CMKs][1] in the
  # *AWS Key Management Service Developer Guide*.
  #
  # To verify a digital signature, you can use the `Verify` operation.
  # Specify the same asymmetric CMK, message, and signing algorithm that
  # were used to produce the signature.
  #
  # You can also verify the digital signature by using the public key of
  # the CMK outside of AWS KMS. Use the GetPublicKey operation to download
  # the public key in the asymmetric CMK and then use the public key to
  # verify the signature outside of AWS KMS. The advantage of using the
  # `Verify` operation is that it is performed within AWS KMS. As a
  # result, it's easy to call, the operation is performed within the FIPS
  # boundary, it is logged in AWS CloudTrail, and you can use key policy
  # and IAM policy to determine who is authorized to use the CMK to verify
  # signatures.
  #
  # The CMK that you use for this operation must be in a compatible key
  # state. For details, see [How Key State Affects Use of a Customer
  # Master Key][2] in the *AWS Key Management Service Developer Guide*.
  #
  # **Cross-account use**\: Yes. To perform this operation with a CMK in a
  # different AWS account, specify the key ARN or alias ARN in the value
  # of the `KeyId` parameter.
  #
  # **Required permissions**\: [kms:Verify][3] (key policy)
  #
  # **Related operations**\: Sign
  #
  #
  #
  # [1]: https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html
  # [2]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
  # [3]: https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html
  #
  # @example Request syntax with placeholder values
  #
  #   resp = client.verify({
  #   key_id: "KeyIdType", # required
  #   message: "data", # required
  #   message_type: "RAW", # accepts RAW, DIGEST
  #   signature: "data", # required
  #   signing_algorithm: "RSASSA_PSS_SHA_256", # required, accepts RSASSA_PSS_SHA_256, RSASSA_PSS_SHA_384, RSASSA_PSS_SHA_512, RSASSA_PKCS1_V1_5_SHA_256, RSASSA_PKCS1_V1_5_SHA_384, RSASSA_PKCS1_V1_5_SHA_512, ECDSA_SHA_256, ECDSA_SHA_384, ECDSA_SHA_512
  #   grant_tokens: ["GrantTokenType"],
  #   })
  # @example Response structure
  #
  #   resp.key_id #=> String
  #   resp.signature_valid #=> Boolean
  #   resp.signing_algorithm #=> String, one of "RSASSA_PSS_SHA_256", "RSASSA_PSS_SHA_384", "RSASSA_PSS_SHA_512", "RSASSA_PKCS1_V1_5_SHA_256", "RSASSA_PKCS1_V1_5_SHA_384", "RSASSA_PKCS1_V1_5_SHA_512", "ECDSA_SHA_256", "ECDSA_SHA_384", "ECDSA_SHA_512"
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @option params
  # @overload verify
  # @param params [Hash] ({})
  # @return [Types::VerifyResponse] Returns a {Seahorse::Client::Response response} object which responds to the following methods:
  #
  #   * {Types::VerifyResponse#key_id #key_id} => String
  #   * {Types::VerifyResponse#signature_valid #signature_valid} => Boolean
  #   * {Types::VerifyResponse#signing_algorithm #signing_algorithm} => String
  # @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/Verify AWS API Documentation
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#6218
  def verify(params = T.unsafe(nil), options = T.unsafe(nil)); end

  # @api private
  # @deprecated
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#6242
  def waiter_names; end

  class << self
    # @api private
    #
    # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#6252
    def errors_module; end

    # @api private
    #
    # source://aws-sdk-kms//lib/aws-sdk-kms/client.rb#6249
    def identifier; end
  end
end

# @api private
module Aws::KMS::ClientApi
  include ::Seahorse::Model
end

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#742
Aws::KMS::ClientApi::API = T.let(T.unsafe(nil), Seahorse::Model::Api)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#16
Aws::KMS::ClientApi::AWSAccountIdType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#17
Aws::KMS::ClientApi::AlgorithmSpec = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#18
Aws::KMS::ClientApi::AliasList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#19
Aws::KMS::ClientApi::AliasListEntry = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#20
Aws::KMS::ClientApi::AliasNameType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#21
Aws::KMS::ClientApi::AlreadyExistsException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#22
Aws::KMS::ClientApi::ArnType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#23
Aws::KMS::ClientApi::BooleanType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BooleanShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#24
Aws::KMS::ClientApi::CancelKeyDeletionRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#25
Aws::KMS::ClientApi::CancelKeyDeletionResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#26
Aws::KMS::ClientApi::CiphertextType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BlobShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#27
Aws::KMS::ClientApi::CloudHsmClusterIdType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#28
Aws::KMS::ClientApi::CloudHsmClusterInUseException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#29
Aws::KMS::ClientApi::CloudHsmClusterInvalidConfigurationException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#30
Aws::KMS::ClientApi::CloudHsmClusterNotActiveException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#31
Aws::KMS::ClientApi::CloudHsmClusterNotFoundException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#32
Aws::KMS::ClientApi::CloudHsmClusterNotRelatedException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#33
Aws::KMS::ClientApi::ConnectCustomKeyStoreRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#34
Aws::KMS::ClientApi::ConnectCustomKeyStoreResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#35
Aws::KMS::ClientApi::ConnectionErrorCodeType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#36
Aws::KMS::ClientApi::ConnectionStateType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#37
Aws::KMS::ClientApi::CreateAliasRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#38
Aws::KMS::ClientApi::CreateCustomKeyStoreRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#39
Aws::KMS::ClientApi::CreateCustomKeyStoreResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#40
Aws::KMS::ClientApi::CreateGrantRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#41
Aws::KMS::ClientApi::CreateGrantResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#42
Aws::KMS::ClientApi::CreateKeyRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#43
Aws::KMS::ClientApi::CreateKeyResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#44
Aws::KMS::ClientApi::CustomKeyStoreHasCMKsException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#45
Aws::KMS::ClientApi::CustomKeyStoreIdType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#46
Aws::KMS::ClientApi::CustomKeyStoreInvalidStateException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#47
Aws::KMS::ClientApi::CustomKeyStoreNameInUseException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#48
Aws::KMS::ClientApi::CustomKeyStoreNameType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#49
Aws::KMS::ClientApi::CustomKeyStoreNotFoundException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#50
Aws::KMS::ClientApi::CustomKeyStoresList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#51
Aws::KMS::ClientApi::CustomKeyStoresListEntry = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#52
Aws::KMS::ClientApi::CustomerMasterKeySpec = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#53
Aws::KMS::ClientApi::DataKeyPairSpec = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#54
Aws::KMS::ClientApi::DataKeySpec = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#55
Aws::KMS::ClientApi::DateType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::TimestampShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#56
Aws::KMS::ClientApi::DecryptRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#57
Aws::KMS::ClientApi::DecryptResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#58
Aws::KMS::ClientApi::DeleteAliasRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#59
Aws::KMS::ClientApi::DeleteCustomKeyStoreRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#60
Aws::KMS::ClientApi::DeleteCustomKeyStoreResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#61
Aws::KMS::ClientApi::DeleteImportedKeyMaterialRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#62
Aws::KMS::ClientApi::DependencyTimeoutException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#63
Aws::KMS::ClientApi::DescribeCustomKeyStoresRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#64
Aws::KMS::ClientApi::DescribeCustomKeyStoresResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#65
Aws::KMS::ClientApi::DescribeKeyRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#66
Aws::KMS::ClientApi::DescribeKeyResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#67
Aws::KMS::ClientApi::DescriptionType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#68
Aws::KMS::ClientApi::DisableKeyRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#69
Aws::KMS::ClientApi::DisableKeyRotationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#70
Aws::KMS::ClientApi::DisabledException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#71
Aws::KMS::ClientApi::DisconnectCustomKeyStoreRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#72
Aws::KMS::ClientApi::DisconnectCustomKeyStoreResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#73
Aws::KMS::ClientApi::EnableKeyRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#74
Aws::KMS::ClientApi::EnableKeyRotationRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#75
Aws::KMS::ClientApi::EncryptRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#76
Aws::KMS::ClientApi::EncryptResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#77
Aws::KMS::ClientApi::EncryptionAlgorithmSpec = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#78
Aws::KMS::ClientApi::EncryptionAlgorithmSpecList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#79
Aws::KMS::ClientApi::EncryptionContextKey = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#80
Aws::KMS::ClientApi::EncryptionContextType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::MapShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#81
Aws::KMS::ClientApi::EncryptionContextValue = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#82
Aws::KMS::ClientApi::ErrorMessageType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#83
Aws::KMS::ClientApi::ExpirationModelType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#84
Aws::KMS::ClientApi::ExpiredImportTokenException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#85
Aws::KMS::ClientApi::GenerateDataKeyPairRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#86
Aws::KMS::ClientApi::GenerateDataKeyPairResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#87
Aws::KMS::ClientApi::GenerateDataKeyPairWithoutPlaintextRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#88
Aws::KMS::ClientApi::GenerateDataKeyPairWithoutPlaintextResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#89
Aws::KMS::ClientApi::GenerateDataKeyRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#90
Aws::KMS::ClientApi::GenerateDataKeyResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#91
Aws::KMS::ClientApi::GenerateDataKeyWithoutPlaintextRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#92
Aws::KMS::ClientApi::GenerateDataKeyWithoutPlaintextResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#93
Aws::KMS::ClientApi::GenerateRandomRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#94
Aws::KMS::ClientApi::GenerateRandomResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#95
Aws::KMS::ClientApi::GetKeyPolicyRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#96
Aws::KMS::ClientApi::GetKeyPolicyResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#97
Aws::KMS::ClientApi::GetKeyRotationStatusRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#98
Aws::KMS::ClientApi::GetKeyRotationStatusResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#99
Aws::KMS::ClientApi::GetParametersForImportRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#100
Aws::KMS::ClientApi::GetParametersForImportResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#101
Aws::KMS::ClientApi::GetPublicKeyRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#102
Aws::KMS::ClientApi::GetPublicKeyResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#103
Aws::KMS::ClientApi::GrantConstraints = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#104
Aws::KMS::ClientApi::GrantIdType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#105
Aws::KMS::ClientApi::GrantList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#106
Aws::KMS::ClientApi::GrantListEntry = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#107
Aws::KMS::ClientApi::GrantNameType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#108
Aws::KMS::ClientApi::GrantOperation = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#109
Aws::KMS::ClientApi::GrantOperationList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#110
Aws::KMS::ClientApi::GrantTokenList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#111
Aws::KMS::ClientApi::GrantTokenType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#112
Aws::KMS::ClientApi::ImportKeyMaterialRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#113
Aws::KMS::ClientApi::ImportKeyMaterialResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#114
Aws::KMS::ClientApi::IncorrectKeyException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#115
Aws::KMS::ClientApi::IncorrectKeyMaterialException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#116
Aws::KMS::ClientApi::IncorrectTrustAnchorException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#117
Aws::KMS::ClientApi::InvalidAliasNameException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#118
Aws::KMS::ClientApi::InvalidArnException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#119
Aws::KMS::ClientApi::InvalidCiphertextException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#120
Aws::KMS::ClientApi::InvalidGrantIdException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#121
Aws::KMS::ClientApi::InvalidGrantTokenException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#122
Aws::KMS::ClientApi::InvalidImportTokenException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#123
Aws::KMS::ClientApi::InvalidKeyUsageException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#124
Aws::KMS::ClientApi::InvalidMarkerException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#125
Aws::KMS::ClientApi::KMSInternalException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#126
Aws::KMS::ClientApi::KMSInvalidSignatureException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#127
Aws::KMS::ClientApi::KMSInvalidStateException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#128
Aws::KMS::ClientApi::KeyIdType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#129
Aws::KMS::ClientApi::KeyList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#130
Aws::KMS::ClientApi::KeyListEntry = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#131
Aws::KMS::ClientApi::KeyManagerType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#132
Aws::KMS::ClientApi::KeyMetadata = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#133
Aws::KMS::ClientApi::KeyState = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#134
Aws::KMS::ClientApi::KeyStorePasswordType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#135
Aws::KMS::ClientApi::KeyUnavailableException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#136
Aws::KMS::ClientApi::KeyUsageType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#137
Aws::KMS::ClientApi::LimitExceededException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#138
Aws::KMS::ClientApi::LimitType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#139
Aws::KMS::ClientApi::ListAliasesRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#140
Aws::KMS::ClientApi::ListAliasesResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#141
Aws::KMS::ClientApi::ListGrantsRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#142
Aws::KMS::ClientApi::ListGrantsResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#143
Aws::KMS::ClientApi::ListKeyPoliciesRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#144
Aws::KMS::ClientApi::ListKeyPoliciesResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#145
Aws::KMS::ClientApi::ListKeysRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#146
Aws::KMS::ClientApi::ListKeysResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#147
Aws::KMS::ClientApi::ListResourceTagsRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#148
Aws::KMS::ClientApi::ListResourceTagsResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#149
Aws::KMS::ClientApi::ListRetirableGrantsRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#150
Aws::KMS::ClientApi::MalformedPolicyDocumentException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#151
Aws::KMS::ClientApi::MarkerType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#152
Aws::KMS::ClientApi::MessageType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#153
Aws::KMS::ClientApi::NotFoundException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#154
Aws::KMS::ClientApi::NumberOfBytesType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#155
Aws::KMS::ClientApi::OriginType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#156
Aws::KMS::ClientApi::PendingWindowInDaysType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::IntegerShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#157
Aws::KMS::ClientApi::PlaintextType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BlobShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#158
Aws::KMS::ClientApi::PolicyNameList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#159
Aws::KMS::ClientApi::PolicyNameType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#160
Aws::KMS::ClientApi::PolicyType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#161
Aws::KMS::ClientApi::PrincipalIdType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#162
Aws::KMS::ClientApi::PublicKeyType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::BlobShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#163
Aws::KMS::ClientApi::PutKeyPolicyRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#164
Aws::KMS::ClientApi::ReEncryptRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#165
Aws::KMS::ClientApi::ReEncryptResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#166
Aws::KMS::ClientApi::RetireGrantRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#167
Aws::KMS::ClientApi::RevokeGrantRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#168
Aws::KMS::ClientApi::ScheduleKeyDeletionRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#169
Aws::KMS::ClientApi::ScheduleKeyDeletionResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#170
Aws::KMS::ClientApi::SignRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#171
Aws::KMS::ClientApi::SignResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#172
Aws::KMS::ClientApi::SigningAlgorithmSpec = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#173
Aws::KMS::ClientApi::SigningAlgorithmSpecList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#174
Aws::KMS::ClientApi::Tag = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#175
Aws::KMS::ClientApi::TagException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#176
Aws::KMS::ClientApi::TagKeyList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#177
Aws::KMS::ClientApi::TagKeyType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#178
Aws::KMS::ClientApi::TagList = T.let(T.unsafe(nil), Seahorse::Model::Shapes::ListShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#179
Aws::KMS::ClientApi::TagResourceRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#180
Aws::KMS::ClientApi::TagValueType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#181
Aws::KMS::ClientApi::TrustAnchorCertificateType = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#182
Aws::KMS::ClientApi::UnsupportedOperationException = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#183
Aws::KMS::ClientApi::UntagResourceRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#184
Aws::KMS::ClientApi::UpdateAliasRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#185
Aws::KMS::ClientApi::UpdateCustomKeyStoreRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#186
Aws::KMS::ClientApi::UpdateCustomKeyStoreResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#187
Aws::KMS::ClientApi::UpdateKeyDescriptionRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#188
Aws::KMS::ClientApi::VerifyRequest = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#189
Aws::KMS::ClientApi::VerifyResponse = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StructureShape)

# @api private
#
# source://aws-sdk-kms//lib/aws-sdk-kms/client_api.rb#190
Aws::KMS::ClientApi::WrappingKeySpec = T.let(T.unsafe(nil), Seahorse::Model::Shapes::StringShape)

# When KMS returns an error response, the Ruby SDK constructs and raises an error.
# These errors all extend Aws::KMS::Errors::ServiceError < {Aws::Errors::ServiceError}
#
# You can rescue all KMS errors using ServiceError:
#
#     begin
#       # do stuff
#     rescue Aws::KMS::Errors::ServiceError
#       # rescues all KMS API errors
#     end
#
#
# ## Request Context
# ServiceError objects have a {Aws::Errors::ServiceError#context #context} method that returns
# information about the request that generated the error.
# See {Seahorse::Client::RequestContext} for more information.
#
# ## Error Classes
# * {AlreadyExistsException}
# * {CloudHsmClusterInUseException}
# * {CloudHsmClusterInvalidConfigurationException}
# * {CloudHsmClusterNotActiveException}
# * {CloudHsmClusterNotFoundException}
# * {CloudHsmClusterNotRelatedException}
# * {CustomKeyStoreHasCMKsException}
# * {CustomKeyStoreInvalidStateException}
# * {CustomKeyStoreNameInUseException}
# * {CustomKeyStoreNotFoundException}
# * {DependencyTimeoutException}
# * {DisabledException}
# * {ExpiredImportTokenException}
# * {IncorrectKeyException}
# * {IncorrectKeyMaterialException}
# * {IncorrectTrustAnchorException}
# * {InvalidAliasNameException}
# * {InvalidArnException}
# * {InvalidCiphertextException}
# * {InvalidGrantIdException}
# * {InvalidGrantTokenException}
# * {InvalidImportTokenException}
# * {InvalidKeyUsageException}
# * {InvalidMarkerException}
# * {KMSInternalException}
# * {KMSInvalidSignatureException}
# * {KMSInvalidStateException}
# * {KeyUnavailableException}
# * {LimitExceededException}
# * {MalformedPolicyDocumentException}
# * {NotFoundException}
# * {TagException}
# * {UnsupportedOperationException}
#
# Additionally, error classes are dynamically generated for service errors based on the error code
# if they are not defined above.
module Aws::KMS::Errors
  extend ::Aws::Errors::DynamicErrors
end

class Aws::KMS::Errors::AlreadyExistsException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::AlreadyExistsException]
  # @return [AlreadyExistsException] a new instance of AlreadyExistsException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#75
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#80
  def message; end
end

class Aws::KMS::Errors::CloudHsmClusterInUseException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::CloudHsmClusterInUseException]
  # @return [CloudHsmClusterInUseException] a new instance of CloudHsmClusterInUseException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#90
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#95
  def message; end
end

class Aws::KMS::Errors::CloudHsmClusterInvalidConfigurationException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::CloudHsmClusterInvalidConfigurationException]
  # @return [CloudHsmClusterInvalidConfigurationException] a new instance of CloudHsmClusterInvalidConfigurationException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#105
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#110
  def message; end
end

class Aws::KMS::Errors::CloudHsmClusterNotActiveException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::CloudHsmClusterNotActiveException]
  # @return [CloudHsmClusterNotActiveException] a new instance of CloudHsmClusterNotActiveException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#120
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#125
  def message; end
end

class Aws::KMS::Errors::CloudHsmClusterNotFoundException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::CloudHsmClusterNotFoundException]
  # @return [CloudHsmClusterNotFoundException] a new instance of CloudHsmClusterNotFoundException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#135
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#140
  def message; end
end

class Aws::KMS::Errors::CloudHsmClusterNotRelatedException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::CloudHsmClusterNotRelatedException]
  # @return [CloudHsmClusterNotRelatedException] a new instance of CloudHsmClusterNotRelatedException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#150
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#155
  def message; end
end

class Aws::KMS::Errors::CustomKeyStoreHasCMKsException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::CustomKeyStoreHasCMKsException]
  # @return [CustomKeyStoreHasCMKsException] a new instance of CustomKeyStoreHasCMKsException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#165
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#170
  def message; end
end

class Aws::KMS::Errors::CustomKeyStoreInvalidStateException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::CustomKeyStoreInvalidStateException]
  # @return [CustomKeyStoreInvalidStateException] a new instance of CustomKeyStoreInvalidStateException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#180
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#185
  def message; end
end

class Aws::KMS::Errors::CustomKeyStoreNameInUseException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::CustomKeyStoreNameInUseException]
  # @return [CustomKeyStoreNameInUseException] a new instance of CustomKeyStoreNameInUseException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#195
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#200
  def message; end
end

class Aws::KMS::Errors::CustomKeyStoreNotFoundException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::CustomKeyStoreNotFoundException]
  # @return [CustomKeyStoreNotFoundException] a new instance of CustomKeyStoreNotFoundException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#210
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#215
  def message; end
end

class Aws::KMS::Errors::DependencyTimeoutException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::DependencyTimeoutException]
  # @return [DependencyTimeoutException] a new instance of DependencyTimeoutException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#225
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#230
  def message; end
end

class Aws::KMS::Errors::DisabledException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::DisabledException]
  # @return [DisabledException] a new instance of DisabledException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#240
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#245
  def message; end
end

class Aws::KMS::Errors::ExpiredImportTokenException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::ExpiredImportTokenException]
  # @return [ExpiredImportTokenException] a new instance of ExpiredImportTokenException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#255
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#260
  def message; end
end

class Aws::KMS::Errors::IncorrectKeyException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::IncorrectKeyException]
  # @return [IncorrectKeyException] a new instance of IncorrectKeyException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#270
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#275
  def message; end
end

class Aws::KMS::Errors::IncorrectKeyMaterialException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::IncorrectKeyMaterialException]
  # @return [IncorrectKeyMaterialException] a new instance of IncorrectKeyMaterialException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#285
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#290
  def message; end
end

class Aws::KMS::Errors::IncorrectTrustAnchorException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::IncorrectTrustAnchorException]
  # @return [IncorrectTrustAnchorException] a new instance of IncorrectTrustAnchorException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#300
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#305
  def message; end
end

class Aws::KMS::Errors::InvalidAliasNameException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::InvalidAliasNameException]
  # @return [InvalidAliasNameException] a new instance of InvalidAliasNameException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#315
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#320
  def message; end
end

class Aws::KMS::Errors::InvalidArnException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::InvalidArnException]
  # @return [InvalidArnException] a new instance of InvalidArnException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#330
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#335
  def message; end
end

class Aws::KMS::Errors::InvalidCiphertextException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::InvalidCiphertextException]
  # @return [InvalidCiphertextException] a new instance of InvalidCiphertextException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#345
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#350
  def message; end
end

class Aws::KMS::Errors::InvalidGrantIdException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::InvalidGrantIdException]
  # @return [InvalidGrantIdException] a new instance of InvalidGrantIdException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#360
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#365
  def message; end
end

class Aws::KMS::Errors::InvalidGrantTokenException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::InvalidGrantTokenException]
  # @return [InvalidGrantTokenException] a new instance of InvalidGrantTokenException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#375
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#380
  def message; end
end

class Aws::KMS::Errors::InvalidImportTokenException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::InvalidImportTokenException]
  # @return [InvalidImportTokenException] a new instance of InvalidImportTokenException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#390
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#395
  def message; end
end

class Aws::KMS::Errors::InvalidKeyUsageException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::InvalidKeyUsageException]
  # @return [InvalidKeyUsageException] a new instance of InvalidKeyUsageException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#405
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#410
  def message; end
end

class Aws::KMS::Errors::InvalidMarkerException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::InvalidMarkerException]
  # @return [InvalidMarkerException] a new instance of InvalidMarkerException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#420
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#425
  def message; end
end

class Aws::KMS::Errors::KMSInternalException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::KMSInternalException]
  # @return [KMSInternalException] a new instance of KMSInternalException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#435
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#440
  def message; end
end

class Aws::KMS::Errors::KMSInvalidSignatureException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::KMSInvalidSignatureException]
  # @return [KMSInvalidSignatureException] a new instance of KMSInvalidSignatureException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#450
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#455
  def message; end
end

class Aws::KMS::Errors::KMSInvalidStateException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::KMSInvalidStateException]
  # @return [KMSInvalidStateException] a new instance of KMSInvalidStateException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#465
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#470
  def message; end
end

class Aws::KMS::Errors::KeyUnavailableException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::KeyUnavailableException]
  # @return [KeyUnavailableException] a new instance of KeyUnavailableException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#480
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#485
  def message; end
end

class Aws::KMS::Errors::LimitExceededException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::LimitExceededException]
  # @return [LimitExceededException] a new instance of LimitExceededException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#495
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#500
  def message; end
end

class Aws::KMS::Errors::MalformedPolicyDocumentException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::MalformedPolicyDocumentException]
  # @return [MalformedPolicyDocumentException] a new instance of MalformedPolicyDocumentException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#510
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#515
  def message; end
end

class Aws::KMS::Errors::NotFoundException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::NotFoundException]
  # @return [NotFoundException] a new instance of NotFoundException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#525
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#530
  def message; end
end

class Aws::KMS::Errors::ServiceError < ::Aws::Errors::ServiceError; end

class Aws::KMS::Errors::TagException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::TagException]
  # @return [TagException] a new instance of TagException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#540
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#545
  def message; end
end

class Aws::KMS::Errors::UnsupportedOperationException < ::Aws::KMS::Errors::ServiceError
  # @param context [Seahorse::Client::RequestContext]
  # @param message [String]
  # @param data [Aws::KMS::Types::UnsupportedOperationException]
  # @return [UnsupportedOperationException] a new instance of UnsupportedOperationException
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#555
  def initialize(context, message, data = T.unsafe(nil)); end

  # @return [String]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/errors.rb#560
  def message; end
end

# source://aws-sdk-kms//lib/aws-sdk-kms.rb#51
Aws::KMS::GEM_VERSION = T.let(T.unsafe(nil), String)

class Aws::KMS::Resource
  # @option options
  # @param options [{}]
  # @return [Resource] a new instance of Resource
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/resource.rb#16
  def initialize(options = T.unsafe(nil)); end

  # @return [Client]
  #
  # source://aws-sdk-kms//lib/aws-sdk-kms/resource.rb#21
  def client; end
end

module Aws::KMS::Types; end

# Contains information about an alias.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/AliasListEntry AWS API Documentation
class Aws::KMS::Types::AliasListEntry < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#41
Aws::KMS::Types::AliasListEntry::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because it attempted to create a resource
# that already exists.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/AlreadyExistsException AWS API Documentation
class Aws::KMS::Types::AlreadyExistsException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#55
Aws::KMS::Types::AlreadyExistsException::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass CancelKeyDeletionRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CancelKeyDeletionRequest AWS API Documentation
class Aws::KMS::Types::CancelKeyDeletionRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#87
Aws::KMS::Types::CancelKeyDeletionRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CancelKeyDeletionResponse AWS API Documentation
class Aws::KMS::Types::CancelKeyDeletionResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#104
Aws::KMS::Types::CancelKeyDeletionResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because the specified AWS CloudHSM cluster is
# already associated with a custom key store or it shares a backup
# history with a cluster that is associated with a custom key store.
# Each custom key store must be associated with a different AWS CloudHSM
# cluster.
#
# Clusters that share a backup history have the same cluster
# certificate. To view the cluster certificate of a cluster, use the
# [DescribeClusters][1] operation.
#
#
#
# [1]: https://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CloudHsmClusterInUseException AWS API Documentation
class Aws::KMS::Types::CloudHsmClusterInUseException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#129
Aws::KMS::Types::CloudHsmClusterInUseException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because the associated AWS CloudHSM cluster
# did not meet the configuration requirements for a custom key store.
#
# * The cluster must be configured with private subnets in at least two
#   different Availability Zones in the Region.
#
# * The [security group for the cluster][1]
#   (cloudhsm-cluster-*&lt;cluster-id&gt;*-sg) must include inbound
#   rules and outbound rules that allow TCP traffic on ports 2223-2225.
#   The **Source** in the inbound rules and the **Destination** in the
#   outbound rules must match the security group ID. These rules are set
#   by default when you create the cluster. Do not delete or change
#   them. To get information about a particular security group, use the
#   [DescribeSecurityGroups][2] operation.
#
# * The cluster must contain at least as many HSMs as the operation
#   requires. To add HSMs, use the AWS CloudHSM [CreateHsm][3]
#   operation.
#
#   For the CreateCustomKeyStore, UpdateCustomKeyStore, and CreateKey
#   operations, the AWS CloudHSM cluster must have at least two active
#   HSMs, each in a different Availability Zone. For the
#   ConnectCustomKeyStore operation, the AWS CloudHSM must contain at
#   least one active HSM.
#
# For information about the requirements for an AWS CloudHSM cluster
# that is associated with a custom key store, see [Assemble the
# Prerequisites][4] in the *AWS Key Management Service Developer Guide*.
# For information about creating a private subnet for an AWS CloudHSM
# cluster, see [Create a Private Subnet][5] in the *AWS CloudHSM User
# Guide*. For information about cluster security groups, see [Configure
# a Default Security Group][1] in the <i> <i>AWS CloudHSM User Guide</i>
# </i>.
#
#
#
# [1]: https://docs.aws.amazon.com/cloudhsm/latest/userguide/configure-sg.html
# [2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html
# [3]: https://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_CreateHsm.html
# [4]: https://docs.aws.amazon.com/kms/latest/developerguide/create-keystore.html#before-keystore
# [5]: https://docs.aws.amazon.com/cloudhsm/latest/userguide/create-subnets.html
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CloudHsmClusterInvalidConfigurationException AWS API Documentation
class Aws::KMS::Types::CloudHsmClusterInvalidConfigurationException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#182
Aws::KMS::Types::CloudHsmClusterInvalidConfigurationException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because the AWS CloudHSM cluster that is
# associated with the custom key store is not active. Initialize and
# activate the cluster and try the command again. For detailed
# instructions, see [Getting Started][1] in the *AWS CloudHSM User
# Guide*.
#
#
#
# [1]: https://docs.aws.amazon.com/cloudhsm/latest/userguide/getting-started.html
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CloudHsmClusterNotActiveException AWS API Documentation
class Aws::KMS::Types::CloudHsmClusterNotActiveException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#203
Aws::KMS::Types::CloudHsmClusterNotActiveException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because AWS KMS cannot find the AWS CloudHSM
# cluster with the specified cluster ID. Retry the request with a
# different cluster ID.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CloudHsmClusterNotFoundException AWS API Documentation
class Aws::KMS::Types::CloudHsmClusterNotFoundException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#218
Aws::KMS::Types::CloudHsmClusterNotFoundException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because the specified AWS CloudHSM cluster
# has a different cluster certificate than the original cluster. You
# cannot use the operation to specify an unrelated cluster.
#
# Specify a cluster that shares a backup history with the original
# cluster. This includes clusters that were created from a backup of the
# current cluster, and clusters that were created from the same backup
# that produced the current cluster.
#
# Clusters that share a backup history have the same cluster
# certificate. To view the cluster certificate of a cluster, use the
# [DescribeClusters][1] operation.
#
#
#
# [1]: https://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CloudHsmClusterNotRelatedException AWS API Documentation
class Aws::KMS::Types::CloudHsmClusterNotRelatedException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#246
Aws::KMS::Types::CloudHsmClusterNotRelatedException::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass ConnectCustomKeyStoreRequest
#   data as a hash:
#
#   {
#   custom_key_store_id: "CustomKeyStoreIdType", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ConnectCustomKeyStoreRequest AWS API Documentation
class Aws::KMS::Types::ConnectCustomKeyStoreRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#267
Aws::KMS::Types::ConnectCustomKeyStoreRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ConnectCustomKeyStoreResponse AWS API Documentation
class Aws::KMS::Types::ConnectCustomKeyStoreResponse < ::Aws::EmptyStructure; end

# @note When making an API call, you may pass CreateAliasRequest
#   data as a hash:
#
#   {
#   alias_name: "AliasNameType", # required
#   target_key_id: "KeyIdType", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CreateAliasRequest AWS API Documentation
class Aws::KMS::Types::CreateAliasRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#331
Aws::KMS::Types::CreateAliasRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass CreateCustomKeyStoreRequest
#   data as a hash:
#
#   {
#   custom_key_store_name: "CustomKeyStoreNameType", # required
#   cloud_hsm_cluster_id: "CloudHsmClusterIdType", # required
#   trust_anchor_certificate: "TrustAnchorCertificateType", # required
#   key_store_password: "KeyStorePasswordType", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CreateCustomKeyStoreRequest AWS API Documentation
class Aws::KMS::Types::CreateCustomKeyStoreRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#394
Aws::KMS::Types::CreateCustomKeyStoreRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CreateCustomKeyStoreResponse AWS API Documentation
class Aws::KMS::Types::CreateCustomKeyStoreResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#406
Aws::KMS::Types::CreateCustomKeyStoreResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass CreateGrantRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   grantee_principal: "PrincipalIdType", # required
#   retiring_principal: "PrincipalIdType",
#   operations: ["Decrypt"], # required, accepts Decrypt, Encrypt, GenerateDataKey, GenerateDataKeyWithoutPlaintext, ReEncryptFrom, ReEncryptTo, Sign, Verify, GetPublicKey, CreateGrant, RetireGrant, DescribeKey, GenerateDataKeyPair, GenerateDataKeyPairWithoutPlaintext
#   constraints: {
#   encryption_context_subset: {
#   "EncryptionContextKey" => "EncryptionContextValue",
#   },
#   encryption_context_equals: {
#   "EncryptionContextKey" => "EncryptionContextValue",
#   },
#   },
#   grant_tokens: ["GrantTokenType"],
#   name: "GrantNameType",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CreateGrantRequest AWS API Documentation
class Aws::KMS::Types::CreateGrantRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#542
Aws::KMS::Types::CreateGrantRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CreateGrantResponse AWS API Documentation
class Aws::KMS::Types::CreateGrantResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#569
Aws::KMS::Types::CreateGrantResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass CreateKeyRequest
#   data as a hash:
#
#   {
#   policy: "PolicyType",
#   description: "DescriptionType",
#   key_usage: "SIGN_VERIFY", # accepts SIGN_VERIFY, ENCRYPT_DECRYPT
#   customer_master_key_spec: "RSA_2048", # accepts RSA_2048, RSA_3072, RSA_4096, ECC_NIST_P256, ECC_NIST_P384, ECC_NIST_P521, ECC_SECG_P256K1, SYMMETRIC_DEFAULT
#   origin: "AWS_KMS", # accepts AWS_KMS, EXTERNAL, AWS_CLOUDHSM
#   custom_key_store_id: "CustomKeyStoreIdType",
#   bypass_policy_lockout_safety_check: false,
#   tags: [
#   {
#   tag_key: "TagKeyType", # required
#   tag_value: "TagValueType", # required
#   },
#   ],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CreateKeyRequest AWS API Documentation
class Aws::KMS::Types::CreateKeyRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#828
Aws::KMS::Types::CreateKeyRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CreateKeyResponse AWS API Documentation
class Aws::KMS::Types::CreateKeyResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#840
Aws::KMS::Types::CreateKeyResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because the custom key store contains AWS KMS
# customer master keys (CMKs). After verifying that you do not need to
# use the CMKs, use the ScheduleKeyDeletion operation to delete the
# CMKs. After they are deleted, you can delete the custom key store.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CustomKeyStoreHasCMKsException AWS API Documentation
class Aws::KMS::Types::CustomKeyStoreHasCMKsException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#856
Aws::KMS::Types::CustomKeyStoreHasCMKsException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because of the `ConnectionState` of the
# custom key store. To get the `ConnectionState` of a custom key store,
# use the DescribeCustomKeyStores operation.
#
# This exception is thrown under the following conditions:
#
# * You requested the CreateKey or GenerateRandom operation in a custom
#   key store that is not connected. These operations are valid only
#   when the custom key store `ConnectionState` is `CONNECTED`.
#
# * You requested the UpdateCustomKeyStore or DeleteCustomKeyStore
#   operation on a custom key store that is not disconnected. This
#   operation is valid only when the custom key store `ConnectionState`
#   is `DISCONNECTED`.
#
# * You requested the ConnectCustomKeyStore operation on a custom key
#   store with a `ConnectionState` of `DISCONNECTING` or `FAILED`. This
#   operation is valid for all other `ConnectionState` values.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CustomKeyStoreInvalidStateException AWS API Documentation
class Aws::KMS::Types::CustomKeyStoreInvalidStateException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#886
Aws::KMS::Types::CustomKeyStoreInvalidStateException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because the specified custom key store name
# is already assigned to another custom key store in the account. Try
# again with a custom key store name that is unique in the account.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CustomKeyStoreNameInUseException AWS API Documentation
class Aws::KMS::Types::CustomKeyStoreNameInUseException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#901
Aws::KMS::Types::CustomKeyStoreNameInUseException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because AWS KMS cannot find a custom key
# store with the specified key store name or ID.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CustomKeyStoreNotFoundException AWS API Documentation
class Aws::KMS::Types::CustomKeyStoreNotFoundException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#915
Aws::KMS::Types::CustomKeyStoreNotFoundException::SENSITIVE = T.let(T.unsafe(nil), Array)

# Contains information about each custom key store in the custom key
# store list.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/CustomKeyStoresListEntry AWS API Documentation
class Aws::KMS::Types::CustomKeyStoresListEntry < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1051
Aws::KMS::Types::CustomKeyStoresListEntry::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass DecryptRequest
#   data as a hash:
#
#   {
#   ciphertext_blob: "data", # required
#   encryption_context: {
#   "EncryptionContextKey" => "EncryptionContextValue",
#   },
#   grant_tokens: ["GrantTokenType"],
#   key_id: "KeyIdType",
#   encryption_algorithm: "SYMMETRIC_DEFAULT", # accepts SYMMETRIC_DEFAULT, RSAES_OAEP_SHA_1, RSAES_OAEP_SHA_256
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DecryptRequest AWS API Documentation
class Aws::KMS::Types::DecryptRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1156
Aws::KMS::Types::DecryptRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DecryptResponse AWS API Documentation
class Aws::KMS::Types::DecryptResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1184
Aws::KMS::Types::DecryptResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass DeleteAliasRequest
#   data as a hash:
#
#   {
#   alias_name: "AliasNameType", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DeleteAliasRequest AWS API Documentation
class Aws::KMS::Types::DeleteAliasRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1204
Aws::KMS::Types::DeleteAliasRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass DeleteCustomKeyStoreRequest
#   data as a hash:
#
#   {
#   custom_key_store_id: "CustomKeyStoreIdType", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DeleteCustomKeyStoreRequest AWS API Documentation
class Aws::KMS::Types::DeleteCustomKeyStoreRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1224
Aws::KMS::Types::DeleteCustomKeyStoreRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DeleteCustomKeyStoreResponse AWS API Documentation
class Aws::KMS::Types::DeleteCustomKeyStoreResponse < ::Aws::EmptyStructure; end

# @note When making an API call, you may pass DeleteImportedKeyMaterialRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DeleteImportedKeyMaterialRequest AWS API Documentation
class Aws::KMS::Types::DeleteImportedKeyMaterialRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1260
Aws::KMS::Types::DeleteImportedKeyMaterialRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# The system timed out while trying to fulfill the request. The request
# can be retried.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DependencyTimeoutException AWS API Documentation
class Aws::KMS::Types::DependencyTimeoutException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1274
Aws::KMS::Types::DependencyTimeoutException::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass DescribeCustomKeyStoresRequest
#   data as a hash:
#
#   {
#   custom_key_store_id: "CustomKeyStoreIdType",
#   custom_key_store_name: "CustomKeyStoreNameType",
#   limit: 1,
#   marker: "MarkerType",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DescribeCustomKeyStoresRequest AWS API Documentation
class Aws::KMS::Types::DescribeCustomKeyStoresRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1327
Aws::KMS::Types::DescribeCustomKeyStoresRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DescribeCustomKeyStoresResponse AWS API Documentation
class Aws::KMS::Types::DescribeCustomKeyStoresResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1353
Aws::KMS::Types::DescribeCustomKeyStoresResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass DescribeKeyRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   grant_tokens: ["GrantTokenType"],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DescribeKeyRequest AWS API Documentation
class Aws::KMS::Types::DescribeKeyRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1412
Aws::KMS::Types::DescribeKeyRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DescribeKeyResponse AWS API Documentation
class Aws::KMS::Types::DescribeKeyResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1424
Aws::KMS::Types::DescribeKeyResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass DisableKeyRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DisableKeyRequest AWS API Documentation
class Aws::KMS::Types::DisableKeyRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1455
Aws::KMS::Types::DisableKeyRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass DisableKeyRotationRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DisableKeyRotationRequest AWS API Documentation
class Aws::KMS::Types::DisableKeyRotationRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1494
Aws::KMS::Types::DisableKeyRotationRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because the specified CMK is not enabled.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DisabledException AWS API Documentation
class Aws::KMS::Types::DisabledException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1507
Aws::KMS::Types::DisabledException::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass DisconnectCustomKeyStoreRequest
#   data as a hash:
#
#   {
#   custom_key_store_id: "CustomKeyStoreIdType", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DisconnectCustomKeyStoreRequest AWS API Documentation
class Aws::KMS::Types::DisconnectCustomKeyStoreRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1528
Aws::KMS::Types::DisconnectCustomKeyStoreRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/DisconnectCustomKeyStoreResponse AWS API Documentation
class Aws::KMS::Types::DisconnectCustomKeyStoreResponse < ::Aws::EmptyStructure; end

# @note When making an API call, you may pass EnableKeyRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/EnableKeyRequest AWS API Documentation
class Aws::KMS::Types::EnableKeyRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1563
Aws::KMS::Types::EnableKeyRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass EnableKeyRotationRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/EnableKeyRotationRequest AWS API Documentation
class Aws::KMS::Types::EnableKeyRotationRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1600
Aws::KMS::Types::EnableKeyRotationRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass EncryptRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   plaintext: "data", # required
#   encryption_context: {
#   "EncryptionContextKey" => "EncryptionContextValue",
#   },
#   grant_tokens: ["GrantTokenType"],
#   encryption_algorithm: "SYMMETRIC_DEFAULT", # accepts SYMMETRIC_DEFAULT, RSAES_OAEP_SHA_1, RSAES_OAEP_SHA_256
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/EncryptRequest AWS API Documentation
class Aws::KMS::Types::EncryptRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1697
Aws::KMS::Types::EncryptRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/EncryptResponse AWS API Documentation
class Aws::KMS::Types::EncryptResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1725
Aws::KMS::Types::EncryptResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because the specified import token is
# expired. Use GetParametersForImport to get a new import token and
# public key, use the new public key to encrypt the key material, and
# then try the request again.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ExpiredImportTokenException AWS API Documentation
class Aws::KMS::Types::ExpiredImportTokenException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1741
Aws::KMS::Types::ExpiredImportTokenException::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass GenerateDataKeyPairRequest
#   data as a hash:
#
#   {
#   encryption_context: {
#   "EncryptionContextKey" => "EncryptionContextValue",
#   },
#   key_id: "KeyIdType", # required
#   key_pair_spec: "RSA_2048", # required, accepts RSA_2048, RSA_3072, RSA_4096, ECC_NIST_P256, ECC_NIST_P384, ECC_NIST_P521, ECC_SECG_P256K1
#   grant_tokens: ["GrantTokenType"],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GenerateDataKeyPairRequest AWS API Documentation
class Aws::KMS::Types::GenerateDataKeyPairRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1829
Aws::KMS::Types::GenerateDataKeyPairRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GenerateDataKeyPairResponse AWS API Documentation
class Aws::KMS::Types::GenerateDataKeyPairResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1870
Aws::KMS::Types::GenerateDataKeyPairResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass GenerateDataKeyPairWithoutPlaintextRequest
#   data as a hash:
#
#   {
#   encryption_context: {
#   "EncryptionContextKey" => "EncryptionContextValue",
#   },
#   key_id: "KeyIdType", # required
#   key_pair_spec: "RSA_2048", # required, accepts RSA_2048, RSA_3072, RSA_4096, ECC_NIST_P256, ECC_NIST_P384, ECC_NIST_P521, ECC_SECG_P256K1
#   grant_tokens: ["GrantTokenType"],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GenerateDataKeyPairWithoutPlaintextRequest AWS API Documentation
class Aws::KMS::Types::GenerateDataKeyPairWithoutPlaintextRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1958
Aws::KMS::Types::GenerateDataKeyPairWithoutPlaintextRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GenerateDataKeyPairWithoutPlaintextResponse AWS API Documentation
class Aws::KMS::Types::GenerateDataKeyPairWithoutPlaintextResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#1992
Aws::KMS::Types::GenerateDataKeyPairWithoutPlaintextResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass GenerateDataKeyRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   encryption_context: {
#   "EncryptionContextKey" => "EncryptionContextValue",
#   },
#   number_of_bytes: 1,
#   key_spec: "AES_256", # accepts AES_256, AES_128
#   grant_tokens: ["GrantTokenType"],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GenerateDataKeyRequest AWS API Documentation
class Aws::KMS::Types::GenerateDataKeyRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2089
Aws::KMS::Types::GenerateDataKeyRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GenerateDataKeyResponse AWS API Documentation
class Aws::KMS::Types::GenerateDataKeyResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2121
Aws::KMS::Types::GenerateDataKeyResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass GenerateDataKeyWithoutPlaintextRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   encryption_context: {
#   "EncryptionContextKey" => "EncryptionContextValue",
#   },
#   key_spec: "AES_256", # accepts AES_256, AES_128
#   number_of_bytes: 1,
#   grant_tokens: ["GrantTokenType"],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GenerateDataKeyWithoutPlaintextRequest AWS API Documentation
class Aws::KMS::Types::GenerateDataKeyWithoutPlaintextRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2212
Aws::KMS::Types::GenerateDataKeyWithoutPlaintextRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GenerateDataKeyWithoutPlaintextResponse AWS API Documentation
class Aws::KMS::Types::GenerateDataKeyWithoutPlaintextResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2235
Aws::KMS::Types::GenerateDataKeyWithoutPlaintextResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass GenerateRandomRequest
#   data as a hash:
#
#   {
#   number_of_bytes: 1,
#   custom_key_store_id: "CustomKeyStoreIdType",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GenerateRandomRequest AWS API Documentation
class Aws::KMS::Types::GenerateRandomRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2266
Aws::KMS::Types::GenerateRandomRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GenerateRandomResponse AWS API Documentation
class Aws::KMS::Types::GenerateRandomResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2279
Aws::KMS::Types::GenerateRandomResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass GetKeyPolicyRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   policy_name: "PolicyNameType", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GetKeyPolicyRequest AWS API Documentation
class Aws::KMS::Types::GetKeyPolicyRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2317
Aws::KMS::Types::GetKeyPolicyRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GetKeyPolicyResponse AWS API Documentation
class Aws::KMS::Types::GetKeyPolicyResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2329
Aws::KMS::Types::GetKeyPolicyResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass GetKeyRotationStatusRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GetKeyRotationStatusRequest AWS API Documentation
class Aws::KMS::Types::GetKeyRotationStatusRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2361
Aws::KMS::Types::GetKeyRotationStatusRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GetKeyRotationStatusResponse AWS API Documentation
class Aws::KMS::Types::GetKeyRotationStatusResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2373
Aws::KMS::Types::GetKeyRotationStatusResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass GetParametersForImportRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   wrapping_algorithm: "RSAES_PKCS1_V1_5", # required, accepts RSAES_PKCS1_V1_5, RSAES_OAEP_SHA_1, RSAES_OAEP_SHA_256
#   wrapping_key_spec: "RSA_2048", # required, accepts RSA_2048
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GetParametersForImportRequest AWS API Documentation
class Aws::KMS::Types::GetParametersForImportRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2425
Aws::KMS::Types::GetParametersForImportRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GetParametersForImportResponse AWS API Documentation
class Aws::KMS::Types::GetParametersForImportResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2462
Aws::KMS::Types::GetParametersForImportResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass GetPublicKeyRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   grant_tokens: ["GrantTokenType"],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GetPublicKeyRequest AWS API Documentation
class Aws::KMS::Types::GetPublicKeyRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2513
Aws::KMS::Types::GetPublicKeyRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GetPublicKeyResponse AWS API Documentation
class Aws::KMS::Types::GetPublicKeyResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2581
Aws::KMS::Types::GetPublicKeyResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# Use this structure to allow [cryptographic operations][1] in the grant
# only when the operation request includes the specified [encryption
# context][2].
#
# AWS KMS applies the grant constraints only to cryptographic operations
# that support an encryption context, that is, all cryptographic
# operations with a [symmetric CMK][3]. Grant constraints are not
# applied to operations that do not support an encryption context, such
# as cryptographic operations with asymmetric CMKs and management
# operations, such as DescribeKey or RetireGrant.
#
# In a cryptographic operation, the encryption context in the decryption
# operation must be an exact, case-sensitive match for the keys and
# values in the encryption context of the encryption operation. Only the
# order of the pairs can vary.
#
#  However, in a grant constraint, the key in each key-value pair is not
# case sensitive, but the value is case sensitive.
#
#  To avoid confusion, do not use multiple encryption context pairs that
# differ only by case. To require a fully case-sensitive encryption
# context, use the `kms:EncryptionContext:` and
# `kms:EncryptionContextKeys` conditions in an IAM or key policy. For
# details, see [kms:EncryptionContext:][4] in the <i> <i>AWS Key
# Management Service Developer Guide</i> </i>.
#
#
#
# [1]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations
# [2]: https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context
# [3]: https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-concepts.html#symmetric-cmks
# [4]: https://docs.aws.amazon.com/kms/latest/developerguide/policy-conditions.html#conditions-kms-encryption-context
#
# @note When making an API call, you may pass GrantConstraints
#   data as a hash:
#
#   {
#   encryption_context_subset: {
#   "EncryptionContextKey" => "EncryptionContextValue",
#   },
#   encryption_context_equals: {
#   "EncryptionContextKey" => "EncryptionContextValue",
#   },
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GrantConstraints AWS API Documentation
class Aws::KMS::Types::GrantConstraints < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2658
Aws::KMS::Types::GrantConstraints::SENSITIVE = T.let(T.unsafe(nil), Array)

# Contains information about a grant.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/GrantListEntry AWS API Documentation
class Aws::KMS::Types::GrantListEntry < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2727
Aws::KMS::Types::GrantListEntry::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass ImportKeyMaterialRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   import_token: "data", # required
#   encrypted_key_material: "data", # required
#   valid_to: Time.now,
#   expiration_model: "KEY_MATERIAL_EXPIRES", # accepts KEY_MATERIAL_EXPIRES, KEY_MATERIAL_DOES_NOT_EXPIRE
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ImportKeyMaterialRequest AWS API Documentation
class Aws::KMS::Types::ImportKeyMaterialRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2799
Aws::KMS::Types::ImportKeyMaterialRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ImportKeyMaterialResponse AWS API Documentation
class Aws::KMS::Types::ImportKeyMaterialResponse < ::Aws::EmptyStructure; end

# The request was rejected because the specified CMK cannot decrypt the
# data. The `KeyId` in a Decrypt request and the `SourceKeyId` in a
# ReEncrypt request must identify the same CMK that was used to encrypt
# the ciphertext.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/IncorrectKeyException AWS API Documentation
class Aws::KMS::Types::IncorrectKeyException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2819
Aws::KMS::Types::IncorrectKeyException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because the key material in the request is,
# expired, invalid, or is not the same key material that was previously
# imported into this customer master key (CMK).
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/IncorrectKeyMaterialException AWS API Documentation
class Aws::KMS::Types::IncorrectKeyMaterialException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2834
Aws::KMS::Types::IncorrectKeyMaterialException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because the trust anchor certificate in the
# request is not the trust anchor certificate for the specified AWS
# CloudHSM cluster.
#
# When you [initialize the cluster][1], you create the trust anchor
# certificate and save it in the `customerCA.crt` file.
#
#
#
# [1]: https://docs.aws.amazon.com/cloudhsm/latest/userguide/initialize-cluster.html#sign-csr
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/IncorrectTrustAnchorException AWS API Documentation
class Aws::KMS::Types::IncorrectTrustAnchorException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2856
Aws::KMS::Types::IncorrectTrustAnchorException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because the specified alias name is not
# valid.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/InvalidAliasNameException AWS API Documentation
class Aws::KMS::Types::InvalidAliasNameException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2870
Aws::KMS::Types::InvalidAliasNameException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because a specified ARN, or an ARN in a key
# policy, is not valid.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/InvalidArnException AWS API Documentation
class Aws::KMS::Types::InvalidArnException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2884
Aws::KMS::Types::InvalidArnException::SENSITIVE = T.let(T.unsafe(nil), Array)

# From the Decrypt or ReEncrypt operation, the request was rejected
# because the specified ciphertext, or additional authenticated data
# incorporated into the ciphertext, such as the encryption context, is
# corrupted, missing, or otherwise invalid.
#
# From the ImportKeyMaterial operation, the request was rejected because
# AWS KMS could not decrypt the encrypted (wrapped) key material.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/InvalidCiphertextException AWS API Documentation
class Aws::KMS::Types::InvalidCiphertextException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2903
Aws::KMS::Types::InvalidCiphertextException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because the specified `GrantId` is not valid.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/InvalidGrantIdException AWS API Documentation
class Aws::KMS::Types::InvalidGrantIdException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2916
Aws::KMS::Types::InvalidGrantIdException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because the specified grant token is not
# valid.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/InvalidGrantTokenException AWS API Documentation
class Aws::KMS::Types::InvalidGrantTokenException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2930
Aws::KMS::Types::InvalidGrantTokenException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because the provided import token is invalid
# or is associated with a different customer master key (CMK).
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/InvalidImportTokenException AWS API Documentation
class Aws::KMS::Types::InvalidImportTokenException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2944
Aws::KMS::Types::InvalidImportTokenException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected for one of the following reasons:
#
# * The `KeyUsage` value of the CMK is incompatible with the API
#   operation.
#
# * The encryption algorithm or signing algorithm specified for the
#   operation is incompatible with the type of key material in the CMK
#   `(CustomerMasterKeySpec`).
#
# For encrypting, decrypting, re-encrypting, and generating data keys,
# the `KeyUsage` must be `ENCRYPT_DECRYPT`. For signing and verifying,
# the `KeyUsage` must be `SIGN_VERIFY`. To find the `KeyUsage` of a CMK,
# use the DescribeKey operation.
#
# To find the encryption or signing algorithms supported for a
# particular CMK, use the DescribeKey operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/InvalidKeyUsageException AWS API Documentation
class Aws::KMS::Types::InvalidKeyUsageException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2972
Aws::KMS::Types::InvalidKeyUsageException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because the marker that specifies where
# pagination should next begin is not valid.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/InvalidMarkerException AWS API Documentation
class Aws::KMS::Types::InvalidMarkerException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#2986
Aws::KMS::Types::InvalidMarkerException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because an internal exception occurred. The
# request can be retried.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/KMSInternalException AWS API Documentation
class Aws::KMS::Types::KMSInternalException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#3000
Aws::KMS::Types::KMSInternalException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because the signature verification failed.
# Signature verification fails when it cannot confirm that signature was
# produced by signing the specified message with the specified CMK and
# signing algorithm.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/KMSInvalidSignatureException AWS API Documentation
class Aws::KMS::Types::KMSInvalidSignatureException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#3016
Aws::KMS::Types::KMSInvalidSignatureException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because the state of the specified resource
# is not valid for this request.
#
# For more information about how key state affects the use of a CMK, see
# [How Key State Affects Use of a Customer Master Key][1] in the <i>
# <i>AWS Key Management Service Developer Guide</i> </i>.
#
#
#
# [1]: https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/KMSInvalidStateException AWS API Documentation
class Aws::KMS::Types::KMSInvalidStateException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#3038
Aws::KMS::Types::KMSInvalidStateException::SENSITIVE = T.let(T.unsafe(nil), Array)

# Contains information about each entry in the key list.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/KeyListEntry AWS API Documentation
class Aws::KMS::Types::KeyListEntry < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#3057
Aws::KMS::Types::KeyListEntry::SENSITIVE = T.let(T.unsafe(nil), Array)

# Contains metadata about a customer master key (CMK).
#
# This data type is used as a response element for the CreateKey and
# DescribeKey operations.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/KeyMetadata AWS API Documentation
class Aws::KMS::Types::KeyMetadata < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#3219
Aws::KMS::Types::KeyMetadata::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because the specified CMK was not available.
# You can retry the request.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/KeyUnavailableException AWS API Documentation
class Aws::KMS::Types::KeyUnavailableException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#3233
Aws::KMS::Types::KeyUnavailableException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because a quota was exceeded. For more
# information, see [Quotas][1] in the *AWS Key Management Service
# Developer Guide*.
#
#
#
# [1]: https://docs.aws.amazon.com/kms/latest/developerguide/limits.html
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/LimitExceededException AWS API Documentation
class Aws::KMS::Types::LimitExceededException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#3252
Aws::KMS::Types::LimitExceededException::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass ListAliasesRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType",
#   limit: 1,
#   marker: "MarkerType",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ListAliasesRequest AWS API Documentation
class Aws::KMS::Types::ListAliasesRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#3307
Aws::KMS::Types::ListAliasesRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ListAliasesResponse AWS API Documentation
class Aws::KMS::Types::ListAliasesResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#3333
Aws::KMS::Types::ListAliasesResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass ListGrantsRequest
#   data as a hash:
#
#   {
#   limit: 1,
#   marker: "MarkerType",
#   key_id: "KeyIdType", # required
#   grant_id: "GrantIdType",
#   grantee_principal: "PrincipalIdType",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ListGrantsRequest AWS API Documentation
class Aws::KMS::Types::ListGrantsRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#3400
Aws::KMS::Types::ListGrantsRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ListGrantsResponse AWS API Documentation
class Aws::KMS::Types::ListGrantsResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#3426
Aws::KMS::Types::ListGrantsResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass ListKeyPoliciesRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   limit: 1,
#   marker: "MarkerType",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ListKeyPoliciesRequest AWS API Documentation
class Aws::KMS::Types::ListKeyPoliciesRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#3479
Aws::KMS::Types::ListKeyPoliciesRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ListKeyPoliciesResponse AWS API Documentation
class Aws::KMS::Types::ListKeyPoliciesResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#3505
Aws::KMS::Types::ListKeyPoliciesResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass ListKeysRequest
#   data as a hash:
#
#   {
#   limit: 1,
#   marker: "MarkerType",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ListKeysRequest AWS API Documentation
class Aws::KMS::Types::ListKeysRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#3538
Aws::KMS::Types::ListKeysRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ListKeysResponse AWS API Documentation
class Aws::KMS::Types::ListKeysResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#3564
Aws::KMS::Types::ListKeysResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass ListResourceTagsRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   limit: 1,
#   marker: "MarkerType",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ListResourceTagsRequest AWS API Documentation
class Aws::KMS::Types::ListResourceTagsRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#3617
Aws::KMS::Types::ListResourceTagsRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ListResourceTagsResponse AWS API Documentation
class Aws::KMS::Types::ListResourceTagsResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#3645
Aws::KMS::Types::ListResourceTagsResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass ListRetirableGrantsRequest
#   data as a hash:
#
#   {
#   limit: 1,
#   marker: "MarkerType",
#   retiring_principal: "PrincipalIdType", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ListRetirableGrantsRequest AWS API Documentation
class Aws::KMS::Types::ListRetirableGrantsRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#3697
Aws::KMS::Types::ListRetirableGrantsRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because the specified policy is not
# syntactically or semantically correct.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/MalformedPolicyDocumentException AWS API Documentation
class Aws::KMS::Types::MalformedPolicyDocumentException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#3711
Aws::KMS::Types::MalformedPolicyDocumentException::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because the specified entity or resource
# could not be found.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/NotFoundException AWS API Documentation
class Aws::KMS::Types::NotFoundException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#3725
Aws::KMS::Types::NotFoundException::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass PutKeyPolicyRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   policy_name: "PolicyNameType", # required
#   policy: "PolicyType", # required
#   bypass_policy_lockout_safety_check: false,
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/PutKeyPolicyRequest AWS API Documentation
class Aws::KMS::Types::PutKeyPolicyRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#3822
Aws::KMS::Types::PutKeyPolicyRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass ReEncryptRequest
#   data as a hash:
#
#   {
#   ciphertext_blob: "data", # required
#   source_encryption_context: {
#   "EncryptionContextKey" => "EncryptionContextValue",
#   },
#   source_key_id: "KeyIdType",
#   destination_key_id: "KeyIdType", # required
#   destination_encryption_context: {
#   "EncryptionContextKey" => "EncryptionContextValue",
#   },
#   source_encryption_algorithm: "SYMMETRIC_DEFAULT", # accepts SYMMETRIC_DEFAULT, RSAES_OAEP_SHA_1, RSAES_OAEP_SHA_256
#   destination_encryption_algorithm: "SYMMETRIC_DEFAULT", # accepts SYMMETRIC_DEFAULT, RSAES_OAEP_SHA_1, RSAES_OAEP_SHA_256
#   grant_tokens: ["GrantTokenType"],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ReEncryptRequest AWS API Documentation
class Aws::KMS::Types::ReEncryptRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#3993
Aws::KMS::Types::ReEncryptRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ReEncryptResponse AWS API Documentation
class Aws::KMS::Types::ReEncryptResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#4032
Aws::KMS::Types::ReEncryptResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass RetireGrantRequest
#   data as a hash:
#
#   {
#   grant_token: "GrantTokenType",
#   key_id: "KeyIdType",
#   grant_id: "GrantIdType",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/RetireGrantRequest AWS API Documentation
class Aws::KMS::Types::RetireGrantRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#4072
Aws::KMS::Types::RetireGrantRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass RevokeGrantRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   grant_id: "GrantIdType", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/RevokeGrantRequest AWS API Documentation
class Aws::KMS::Types::RevokeGrantRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#4111
Aws::KMS::Types::RevokeGrantRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass ScheduleKeyDeletionRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   pending_window_in_days: 1,
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ScheduleKeyDeletionRequest AWS API Documentation
class Aws::KMS::Types::ScheduleKeyDeletionRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#4152
Aws::KMS::Types::ScheduleKeyDeletionRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/ScheduleKeyDeletionResponse AWS API Documentation
class Aws::KMS::Types::ScheduleKeyDeletionResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#4175
Aws::KMS::Types::ScheduleKeyDeletionResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass SignRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   message: "data", # required
#   message_type: "RAW", # accepts RAW, DIGEST
#   grant_tokens: ["GrantTokenType"],
#   signing_algorithm: "RSASSA_PSS_SHA_256", # required, accepts RSASSA_PSS_SHA_256, RSASSA_PSS_SHA_384, RSASSA_PSS_SHA_512, RSASSA_PKCS1_V1_5_SHA_256, RSASSA_PKCS1_V1_5_SHA_384, RSASSA_PKCS1_V1_5_SHA_512, ECDSA_SHA_256, ECDSA_SHA_384, ECDSA_SHA_512
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/SignRequest AWS API Documentation
class Aws::KMS::Types::SignRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#4256
Aws::KMS::Types::SignRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/SignResponse AWS API Documentation
class Aws::KMS::Types::SignResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#4300
Aws::KMS::Types::SignResponse::SENSITIVE = T.let(T.unsafe(nil), Array)

# A key-value pair. A tag consists of a tag key and a tag value. Tag
# keys and tag values are both required, but tag values can be empty
# (null) strings.
#
# For information about the rules that apply to tag keys and tag values,
# see [User-Defined Tag Restrictions][1] in the *AWS Billing and Cost
# Management User Guide*.
#
#
#
# [1]: https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html
#
# @note When making an API call, you may pass Tag
#   data as a hash:
#
#   {
#   tag_key: "TagKeyType", # required
#   tag_value: "TagValueType", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/Tag AWS API Documentation
class Aws::KMS::Types::Tag < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#4337
Aws::KMS::Types::Tag::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because one or more tags are not valid.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/TagException AWS API Documentation
class Aws::KMS::Types::TagException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#4350
Aws::KMS::Types::TagException::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass TagResourceRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   tags: [ # required
#   {
#   tag_key: "TagKeyType", # required
#   tag_value: "TagValueType", # required
#   },
#   ],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/TagResourceRequest AWS API Documentation
class Aws::KMS::Types::TagResourceRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#4399
Aws::KMS::Types::TagResourceRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# The request was rejected because a specified parameter is not
# supported or a specified resource is not valid for this operation.
#
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/UnsupportedOperationException AWS API Documentation
class Aws::KMS::Types::UnsupportedOperationException < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#4413
Aws::KMS::Types::UnsupportedOperationException::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass UntagResourceRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   tag_keys: ["TagKeyType"], # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/UntagResourceRequest AWS API Documentation
class Aws::KMS::Types::UntagResourceRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#4450
Aws::KMS::Types::UntagResourceRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass UpdateAliasRequest
#   data as a hash:
#
#   {
#   alias_name: "AliasNameType", # required
#   target_key_id: "KeyIdType", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/UpdateAliasRequest AWS API Documentation
class Aws::KMS::Types::UpdateAliasRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#4505
Aws::KMS::Types::UpdateAliasRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass UpdateCustomKeyStoreRequest
#   data as a hash:
#
#   {
#   custom_key_store_id: "CustomKeyStoreIdType", # required
#   new_custom_key_store_name: "CustomKeyStoreNameType",
#   key_store_password: "KeyStorePasswordType",
#   cloud_hsm_cluster_id: "CloudHsmClusterIdType",
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/UpdateCustomKeyStoreRequest AWS API Documentation
class Aws::KMS::Types::UpdateCustomKeyStoreRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#4565
Aws::KMS::Types::UpdateCustomKeyStoreRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/UpdateCustomKeyStoreResponse AWS API Documentation
class Aws::KMS::Types::UpdateCustomKeyStoreResponse < ::Aws::EmptyStructure; end

# @note When making an API call, you may pass UpdateKeyDescriptionRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   description: "DescriptionType", # required
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/UpdateKeyDescriptionRequest AWS API Documentation
class Aws::KMS::Types::UpdateKeyDescriptionRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#4606
Aws::KMS::Types::UpdateKeyDescriptionRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @note When making an API call, you may pass VerifyRequest
#   data as a hash:
#
#   {
#   key_id: "KeyIdType", # required
#   message: "data", # required
#   message_type: "RAW", # accepts RAW, DIGEST
#   signature: "data", # required
#   signing_algorithm: "RSASSA_PSS_SHA_256", # required, accepts RSASSA_PSS_SHA_256, RSASSA_PSS_SHA_384, RSASSA_PSS_SHA_512, RSASSA_PKCS1_V1_5_SHA_256, RSASSA_PKCS1_V1_5_SHA_384, RSASSA_PKCS1_V1_5_SHA_512, ECDSA_SHA_256, ECDSA_SHA_384, ECDSA_SHA_512
#   grant_tokens: ["GrantTokenType"],
#   }
# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/VerifyRequest AWS API Documentation
class Aws::KMS::Types::VerifyRequest < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#4698
Aws::KMS::Types::VerifyRequest::SENSITIVE = T.let(T.unsafe(nil), Array)

# @see http://docs.aws.amazon.com/goto/WebAPI/kms-2014-11-01/VerifyResponse AWS API Documentation
class Aws::KMS::Types::VerifyResponse < ::Struct
  include ::Aws::Structure
end

# source://aws-sdk-kms//lib/aws-sdk-kms/types.rb#4729
Aws::KMS::Types::VerifyResponse::SENSITIVE = T.let(T.unsafe(nil), Array)
