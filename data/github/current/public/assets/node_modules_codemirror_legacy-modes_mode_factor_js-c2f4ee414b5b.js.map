{"version":3,"file":"chunk-node_modules_codemirror_legacy-modes_mode_factor_js-xxxxxxxxxxxx.js","mappings":"+KAEO,IAAMA,EAAS,K,MAAA,GAAW,CAC7BC,MAAO,CAEL,CAACC,MAAO,QAASC,MAAO,SAAS,EAEjC,CAACD,MAAO,MAAOC,MAAO,SAAUC,KAAM,SAAS,EAC/C,CAACF,MAAO,gBAAiBC,MAAO,CAAC,UAAW,KAAK,CAAEC,KAAM,SAAS,EAClE,CAACF,MAAO,QAASC,MAAO,SAAUC,KAAM,QAAQ,EAEhD,CAACF,MAAO,kEAAmEC,MAAO,QAAQ,EAG1F,CAACD,MAAO,yCAA0CC,MAAO,CAAC,UAAW,KAAM,MAAO,KAAM,UAAU,CAAEC,KAAM,OAAO,EAEjH,CAACF,MAAO,4BAA6BC,MAAO,CAAC,UAAW,KAAM,MAAO,KAAM,MAAM,EAEjF,CAACD,MAAO,UAAWC,MAAO,UAAWC,KAAM,YAAY,EAEvD,CAACF,MAAO,iCAAkCC,MAAO,CAAC,UAAW,KAAM,MAAM,EAEzE,CAACD,MAAO,4BAA6BC,MAAO,CAAC,UAAW,KAAM,MAAM,EAEpE,CAACD,MAAO,qFAAsFC,MAAO,SAAS,EAE9G,CAACD,MAAO,0BAA2BC,MAAO,SAAS,EACnD,CAACD,MAAO,qBAAsBC,MAAO,SAAS,EAE9C,CAACD,MAAO,6BAA8BC,MAAO,SAAS,EAEtD,CAACD,MAAO,MAAOC,MAAO,UAAU,EAChC,CAACD,MAAO,QAASC,MAAO,IAAI,EAC7B,CACDE,WAAY,CACV,CAACH,MAAO,IAAKC,MAAO,UAAWC,KAAM,OAAO,EAC5C,CAACF,MAAO,MAAOC,MAAO,KAAK,EAC3B,CAACD,MAAO,QAASC,MAAO,IAAI,EAC7B,CACDG,OAAQ,CACN,CAACJ,MAAO,mBAAoBC,MAAO,SAAUC,KAAM,OAAO,EAC1D,CAACF,MAAO,KAAMC,MAAO,QAAQ,EAC9B,CACDI,QAAS,CACP,CAACL,MAAO,KAAMC,MAAO,UAAWC,KAAM,OAAO,EAC7C,CAACF,MAAO,KAAMC,MAAO,QAAQ,EAC9B,CACDK,QAAS,CACP,CAACN,MAAO,qBAAsBC,MAAO,SAAUC,KAAM,OAAO,EAC5D,CAACF,MAAO,KAAMC,MAAO,QAAQ,EAC9B,CACDM,MAAO,CACL,CAACP,MAAO,KAAMC,MAAO,UAAWC,KAAM,OAAO,EAC7C,CAACF,MAAO,KAAMC,MAAO,SAAS,EAC9B,CAACD,MAAO,MAAOC,MAAO,MAAM,EAC5B,CAACD,MAAO,QAASC,MAAO,IAAI,EAC7B,CACDO,aAAc,CACZC,KAAM,SACNC,iBAAkB,CAAC,QAAS,aAAc,SAAU,UAAW,QAAQ,CACvEC,cAAe,CAACC,KAAM,GAAG,CAC3B,CACF,E,iBC9DK,SAASC,EAAWC,CAAM,EAC/BC,EAAYD,EAAQ,SACpB,IAAIE,EAAU,CAAC,EAAGC,EAAOH,EAAON,YAAY,EAAI,CAAC,EAAGU,EAAiB,GACrE,IAAK,IAAIC,KAASL,EAAQ,GAAIK,GAASF,GAAQH,EAAOM,cAAc,CAACD,GAEnE,IAAK,IADDE,EAAOL,CAAO,CAACG,EAAM,CAAG,EAAE,CAAEG,EAAOR,CAAM,CAACK,EAAM,CAC3CI,EAAI,EAAGA,EAAID,EAAKE,MAAM,CAAED,IAAK,CACpC,IAAIE,EAAOH,CAAI,CAACC,EAAE,CAClBF,EAAKK,IAAI,CAAC,IAAIC,EAAKF,EAAMX,IACrBW,CAAAA,EAAKG,MAAM,EAAIH,EAAKI,MAAM,GAAEX,CAAAA,EAAiB,EAAG,CACtD,CAEF,MAAO,CACLT,KAAMQ,EAAKR,IAAI,CACfqB,WAAY,WACV,MAAO,CAACX,MAAO,QAASY,QAAS,KAAMH,OAAQV,EAAiB,EAAE,CAAG,IAAI,CAC3E,EACAc,UAAW,SAASb,CAAK,EACvB,IAAIc,EAAI,CAACd,MAAOA,EAAMA,KAAK,CAAEY,QAASZ,EAAMY,OAAO,CAAEH,OAAQT,EAAMS,MAAM,EAAIT,EAAMS,MAAM,CAACM,KAAK,CAAC,EAAE,EAGlG,OAFIf,EAAMZ,KAAK,EACb0B,CAAAA,EAAE1B,KAAK,CAAGY,EAAMZ,KAAK,CAAC2B,KAAK,CAAC,EAAC,EACxBD,CACT,EACAhC,MAyCK,SAASkC,CAAM,CAAEhB,CAAK,EAC3B,GAAIA,EAAMY,OAAO,CAAE,CACjB,IAAIK,EAAOjB,EAAMY,OAAO,CAACM,KAAK,GAG9B,OAF4B,GAAxBlB,EAAMY,OAAO,CAACP,MAAM,EAAOL,CAAAA,EAAMY,OAAO,CAAG,IAAG,EAClDI,EAAOG,GAAG,EAAIF,EAAKG,IAAI,CAACf,MAAM,CACvBY,EAAKnC,KAAK,CAInB,IAAK,IADDuC,EAAW1B,CAAM,CAACK,EAAMA,KAAK,CAAC,CACzBI,EAAI,EAAGA,EAAIiB,EAAShB,MAAM,CAAED,IAAK,CACxC,IAAIkB,EAAOD,CAAQ,CAACjB,EAAE,CAClBmB,EAAU,CAAC,CAACD,EAAKhB,IAAI,CAACkB,GAAG,EAAIR,EAAOQ,GAAG,EAAC,GAAMR,EAAOS,KAAK,CAACH,EAAKzC,KAAK,EACzE,GAAI0C,EAAS,CACPD,EAAKhB,IAAI,CAACvB,IAAI,CAChBiB,EAAMA,KAAK,CAAGsB,EAAKhB,IAAI,CAACvB,IAAI,CACnBuC,EAAKhB,IAAI,CAACC,IAAI,EACvB,CAACP,EAAMZ,KAAK,EAAKY,CAAAA,EAAMZ,KAAK,CAAG,EAAE,GAAGmB,IAAI,CAACP,EAAMA,KAAK,EACpDA,EAAMA,KAAK,CAAGsB,EAAKhB,IAAI,CAACC,IAAI,EACnBe,EAAKhB,IAAI,CAACoB,GAAG,EAAI1B,EAAMZ,KAAK,EAAIY,EAAMZ,KAAK,CAACiB,MAAM,EAC3DL,CAAAA,EAAMA,KAAK,CAAGA,EAAMZ,KAAK,CAACsC,GAAG,EAAC,EAG5BJ,EAAKhB,IAAI,CAACG,MAAM,EAClBT,EAAMS,MAAM,CAACF,IAAI,CAACS,EAAOW,WAAW,GAAKX,EAAOY,UAAU,EACxDN,EAAKhB,IAAI,CAACI,MAAM,EAClBV,EAAMS,MAAM,CAACiB,GAAG,GAClB,IAAI5C,EAAQwC,EAAKxC,KAAK,CAEtB,GADIA,GAASA,EAAM+C,KAAK,EAAE/C,CAAAA,EAAQA,EAAMyC,EAAO,EAC3CA,EAAQlB,MAAM,CAAG,GAAKiB,EAAKxC,KAAK,EAAI,iBAAOwC,EAAKxC,KAAK,CAAc,CACrEkB,EAAMY,OAAO,CAAG,EAAE,CAClB,IAAK,IAAIkB,EAAI,EAAGA,EAAIP,EAAQlB,MAAM,CAAEyB,IAC9BP,CAAO,CAACO,EAAE,EACZ9B,EAAMY,OAAO,CAACL,IAAI,CAAC,CAACa,KAAMG,CAAO,CAACO,EAAE,CAAEhD,MAAOwC,EAAKxC,KAAK,CAACgD,EAAI,EAAE,GAElE,OADAd,EAAOe,MAAM,CAACR,CAAO,CAAC,EAAE,CAAClB,MAAM,CAAIkB,CAAAA,CAAO,CAAC,EAAE,CAAGA,CAAO,CAAC,EAAE,CAAClB,MAAM,CAAG,IAC7DvB,CAAK,CAAC,EAAE,CACV,GAAIA,GAASA,EAAMkD,IAAI,CAC5B,OAAOlD,CAAK,CAAC,EAAE,CAEf,OAAOA,CAEX,CACF,CAEA,OADAkC,EAAOjC,IAAI,GACJ,IACT,EApFE0B,OAwFK,SAAST,CAAK,CAAEiC,CAAS,EAC9B,GAAIjC,MAAAA,EAAMS,MAAM,EAAYX,EAAKP,gBAAgB,EAAIO,EAAKoC,eAAe,CAACC,OAAO,CAACnC,EAAMA,KAAK,EAAI,GAC/F,OAAO,KAET,IAAImB,EAAMnB,EAAMS,MAAM,CAACJ,MAAM,CAAG,EAAG+B,EAAQzC,CAAM,CAACK,EAAMA,KAAK,CAAC,CAC9DqC,EAAM,OAAS,CACb,IAAK,IAAIjC,EAAI,EAAGA,EAAIgC,EAAM/B,MAAM,CAAED,IAAK,CACrC,IAAIkB,EAAOc,CAAK,CAAChC,EAAE,CACnB,GAAIkB,EAAKhB,IAAI,CAACI,MAAM,EAAIY,CAAgC,IAAhCA,EAAKhB,IAAI,CAACgC,iBAAiB,CAAY,CAC7D,IAAIC,EAAIjB,EAAKzC,KAAK,CAAC2D,IAAI,CAACP,GACxB,GAAIM,GAAKA,CAAC,CAAC,EAAE,CAAE,CACbpB,IACIG,CAAAA,EAAKvC,IAAI,EAAIuC,EAAKf,IAAI,GAAE6B,CAAAA,EAAQzC,CAAM,CAAC2B,EAAKvC,IAAI,EAAIuC,EAAKf,IAAI,CAAC,EAClE0B,EAAYA,EAAUlB,KAAK,CAACwB,CAAC,CAAC,EAAE,CAAClC,MAAM,EACvC,SAASgC,CACX,CACF,CACF,CACA,KACF,CACA,OAAOlB,EAAM,EAAI,EAAInB,EAAMS,MAAM,CAACU,EAAI,EA3GtC9B,aAAcS,CAChB,CACF,CAEA,SAASF,EAAYD,CAAM,CAAEL,CAAI,EAC/B,GAAI,CAACK,EAAOM,cAAc,CAACX,GACzB,MAAM,MAAU,mBAAqBA,EAAO,kBAChD,CAwBA,SAASkB,EAAKF,CAAI,CAAEX,CAAM,EACpBW,CAAAA,EAAKvB,IAAI,EAAIuB,EAAKC,IAAI,GAAEX,EAAYD,EAAQW,EAAKvB,IAAI,EAAIuB,EAAKC,IAAI,EACtE,IAAI,CAAC1B,KAAK,CAAG4D,SAxBEC,CAAG,CAAEC,CAAK,EACzB,GAAI,CAACD,EAAK,MAAO,OACjB,IAAIE,EAAQ,GAOZ,OANIF,aAAeG,QACbH,EAAII,UAAU,EAAEF,CAAAA,EAAQ,GAAE,EAC9BF,EAAMA,EAAIK,MAAM,EAEhBL,EAAMM,OAAON,GAER,OAAW,OAAuCA,EAAM,IAAKE,EACtE,EAcuBtC,EAAKzB,KAAK,EAC/B,IAAI,CAACC,KAAK,CAAGmE,SAbEP,CAAG,EAClB,GAAI,CAACA,EAAK,OAAO,KACjB,GAAIA,EAAIb,KAAK,CAAE,OAAOa,EACtB,GAAI,iBAAOA,EAAiB,OAAOA,EAAIQ,OAAO,CAAC,MAAO,KAEtD,IAAK,IADDC,EAAS,EAAE,CACN/C,EAAI,EAAGA,EAAIsC,EAAIrC,MAAM,CAAED,IAC9B+C,EAAO5C,IAAI,CAACmC,CAAG,CAACtC,EAAE,EAAIsC,CAAG,CAACtC,EAAE,CAAC8C,OAAO,CAAC,MAAO,MAC9C,OAAOC,CACT,EAKuB7C,EAAKxB,KAAK,EAC/B,IAAI,CAACwB,IAAI,CAAGA,CACd,C","sources":["node_modules/@codemirror/legacy-modes/mode/factor.js","node_modules/@codemirror/legacy-modes/mode/simple-mode.js"],"sourcesContent":["import {simpleMode} from \"./simple-mode.js\"\n\nexport const factor = simpleMode({\n    start: [\n      // comments\n      {regex: /#?!.*/, token: \"comment\"},\n      // strings \"\"\", multiline --> state\n      {regex: /\"\"\"/, token: \"string\", next: \"string3\"},\n      {regex: /(STRING:)(\\s)/, token: [\"keyword\", null], next: \"string2\"},\n      {regex: /\\S*?\"/, token: \"string\", next: \"string\"},\n      // numbers: dec, hex, unicode, bin, fractional, complex\n      {regex: /(?:0x[\\d,a-f]+)|(?:0o[0-7]+)|(?:0b[0,1]+)|(?:\\-?\\d+.?\\d*)(?=\\s)/, token: \"number\"},\n      //{regex: /[+-]?/} //fractional\n      // definition: defining word, defined word, etc\n      {regex: /((?:GENERIC)|\\:?\\:)(\\s+)(\\S+)(\\s+)(\\()/, token: [\"keyword\", null, \"def\", null, \"bracket\"], next: \"stack\"},\n      // method definition: defining word, type, defined word, etc\n      {regex: /(M\\:)(\\s+)(\\S+)(\\s+)(\\S+)/, token: [\"keyword\", null, \"def\", null, \"tag\"]},\n      // vocabulary using --> state\n      {regex: /USING\\:/, token: \"keyword\", next: \"vocabulary\"},\n      // vocabulary definition/use\n      {regex: /(USE\\:|IN\\:)(\\s+)(\\S+)(?=\\s|$)/, token: [\"keyword\", null, \"tag\"]},\n      // definition: a defining word, defined word\n      {regex: /(\\S+\\:)(\\s+)(\\S+)(?=\\s|$)/, token: [\"keyword\", null, \"def\"]},\n      // \"keywords\", incl. ; t f . [ ] { } defining words\n      {regex: /(?:;|\\\\|t|f|if|loop|while|until|do|PRIVATE>|<PRIVATE|\\.|\\S*\\[|\\]|\\S*\\{|\\})(?=\\s|$)/, token: \"keyword\"},\n      // <constructors> and the like\n      {regex: /\\S+[\\)>\\.\\*\\?]+(?=\\s|$)/, token: \"builtin\"},\n      {regex: /[\\)><]+\\S+(?=\\s|$)/, token: \"builtin\"},\n      // operators\n      {regex: /(?:[\\+\\-\\=\\/\\*<>])(?=\\s|$)/, token: \"keyword\"},\n      // any id (?)\n      {regex: /\\S+/, token: \"variable\"},\n      {regex: /\\s+|./, token: null}\n    ],\n    vocabulary: [\n      {regex: /;/, token: \"keyword\", next: \"start\"},\n      {regex: /\\S+/, token: \"tag\"},\n      {regex: /\\s+|./, token: null}\n    ],\n    string: [\n      {regex: /(?:[^\\\\]|\\\\.)*?\"/, token: \"string\", next: \"start\"},\n      {regex: /.*/, token: \"string\"}\n    ],\n    string2: [\n      {regex: /^;/, token: \"keyword\", next: \"start\"},\n      {regex: /.*/, token: \"string\"}\n    ],\n    string3: [\n      {regex: /(?:[^\\\\]|\\\\.)*?\"\"\"/, token: \"string\", next: \"start\"},\n      {regex: /.*/, token: \"string\"}\n    ],\n    stack: [\n      {regex: /\\)/, token: \"bracket\", next: \"start\"},\n      {regex: /--/, token: \"bracket\"},\n      {regex: /\\S+/, token: \"meta\"},\n      {regex: /\\s+|./, token: null}\n    ],\n    languageData: {\n      name: \"factor\",\n      dontIndentStates: [\"start\", \"vocabulary\", \"string\", \"string3\", \"stack\"],\n      commentTokens: {line: \"!\"}\n    }\n  });\n","export function simpleMode(states) {\n  ensureState(states, \"start\");\n  var states_ = {}, meta = states.languageData || {}, hasIndentation = false;\n  for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n    var list = states_[state] = [], orig = states[state];\n    for (var i = 0; i < orig.length; i++) {\n      var data = orig[i];\n      list.push(new Rule(data, states));\n      if (data.indent || data.dedent) hasIndentation = true;\n    }\n  }\n  return {\n    name: meta.name,\n    startState: function() {\n      return {state: \"start\", pending: null, indent: hasIndentation ? [] : null};\n    },\n    copyState: function(state) {\n      var s = {state: state.state, pending: state.pending, indent: state.indent && state.indent.slice(0)};\n      if (state.stack)\n        s.stack = state.stack.slice(0);\n      return s;\n    },\n    token: tokenFunction(states_),\n    indent: indentFunction(states_, meta),\n    languageData: meta\n  }\n};\n\nfunction ensureState(states, name) {\n  if (!states.hasOwnProperty(name))\n    throw new Error(\"Undefined state \" + name + \" in simple mode\");\n}\n\nfunction toRegex(val, caret) {\n  if (!val) return /(?:)/;\n  var flags = \"\";\n  if (val instanceof RegExp) {\n    if (val.ignoreCase) flags = \"i\";\n    val = val.source;\n  } else {\n    val = String(val);\n  }\n  return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n}\n\nfunction asToken(val) {\n  if (!val) return null;\n  if (val.apply) return val\n  if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n  var result = [];\n  for (var i = 0; i < val.length; i++)\n    result.push(val[i] && val[i].replace(/\\./g, \" \"));\n  return result;\n}\n\nfunction Rule(data, states) {\n  if (data.next || data.push) ensureState(states, data.next || data.push);\n  this.regex = toRegex(data.regex);\n  this.token = asToken(data.token);\n  this.data = data;\n}\n\nfunction tokenFunction(states) {\n  return function(stream, state) {\n    if (state.pending) {\n      var pend = state.pending.shift();\n      if (state.pending.length == 0) state.pending = null;\n      stream.pos += pend.text.length;\n      return pend.token;\n    }\n\n    var curState = states[state.state];\n    for (var i = 0; i < curState.length; i++) {\n      var rule = curState[i];\n      var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n      if (matches) {\n        if (rule.data.next) {\n          state.state = rule.data.next;\n        } else if (rule.data.push) {\n          (state.stack || (state.stack = [])).push(state.state);\n          state.state = rule.data.push;\n        } else if (rule.data.pop && state.stack && state.stack.length) {\n          state.state = state.stack.pop();\n        }\n\n        if (rule.data.indent)\n          state.indent.push(stream.indentation() + stream.indentUnit);\n        if (rule.data.dedent)\n          state.indent.pop();\n        var token = rule.token\n        if (token && token.apply) token = token(matches)\n        if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n          state.pending = [];\n          for (var j = 2; j < matches.length; j++)\n            if (matches[j])\n              state.pending.push({text: matches[j], token: rule.token[j - 1]});\n          stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n          return token[0];\n        } else if (token && token.join) {\n          return token[0];\n        } else {\n          return token;\n        }\n      }\n    }\n    stream.next();\n    return null;\n  };\n}\n\nfunction indentFunction(states, meta) {\n  return function(state, textAfter) {\n    if (state.indent == null || meta.dontIndentStates && meta.doneIndentState.indexOf(state.state) > -1)\n      return null\n\n    var pos = state.indent.length - 1, rules = states[state.state];\n    scan: for (;;) {\n      for (var i = 0; i < rules.length; i++) {\n        var rule = rules[i];\n        if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n          var m = rule.regex.exec(textAfter);\n          if (m && m[0]) {\n            pos--;\n            if (rule.next || rule.push) rules = states[rule.next || rule.push];\n            textAfter = textAfter.slice(m[0].length);\n            continue scan;\n          }\n        }\n      }\n      break;\n    }\n    return pos < 0 ? 0 : state.indent[pos];\n  };\n}\n"],"names":["factor","start","regex","token","next","vocabulary","string","string2","string3","stack","languageData","name","dontIndentStates","commentTokens","line","simpleMode","states","ensureState","states_","meta","hasIndentation","state","hasOwnProperty","list","orig","i","length","data","push","Rule","indent","dedent","startState","pending","copyState","s","slice","stream","pend","shift","pos","text","curState","rule","matches","sol","match","pop","indentation","indentUnit","apply","j","backUp","join","textAfter","doneIndentState","indexOf","rules","scan","dedentIfLineStart","m","exec","toRegex","val","caret","flags","RegExp","ignoreCase","source","String","asToken","replace","result"],"sourceRoot":""}