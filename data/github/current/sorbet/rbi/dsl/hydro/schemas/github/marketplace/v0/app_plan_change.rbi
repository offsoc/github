# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Marketplace::V0::AppPlanChange`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Marketplace::V0::AppPlanChange`.

class Hydro::Schemas::Github::Marketplace::V0::AppPlanChange
  sig do
    params(
      app: T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::App),
      change_type: T.nilable(T.any(Symbol, Integer)),
      current_plan: T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::AppBillingPlan),
      previous_plan: T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::AppBillingPlan)
    ).void
  end
  def initialize(app: nil, change_type: nil, current_plan: nil, previous_plan: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::App)) }
  def app; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::App)).void }
  def app=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def change_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def change_type=(value); end

  sig { void }
  def clear_app; end

  sig { void }
  def clear_change_type; end

  sig { void }
  def clear_current_plan; end

  sig { void }
  def clear_previous_plan; end

  sig { returns(T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::AppBillingPlan)) }
  def current_plan; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::AppBillingPlan)).void }
  def current_plan=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::AppBillingPlan)) }
  def previous_plan; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::AppBillingPlan)).void }
  def previous_plan=(value); end
end
