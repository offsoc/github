# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Sigstore::Common::V1::PublicKey`.
# Please instead update this file by running `bin/tapioca dsl Sigstore::Common::V1::PublicKey`.

class Sigstore::Common::V1::PublicKey
  sig do
    params(
      key_details: T.nilable(T.any(Symbol, Integer)),
      raw_bytes: T.nilable(String),
      valid_for: T.nilable(Sigstore::Common::V1::TimeRange)
    ).void
  end
  def initialize(key_details: nil, raw_bytes: nil, valid_for: nil); end

  sig { returns(T.nilable(Symbol)) }
  def _raw_bytes; end

  sig { returns(T.nilable(Symbol)) }
  def _valid_for; end

  sig { void }
  def clear_key_details; end

  sig { void }
  def clear_raw_bytes; end

  sig { void }
  def clear_valid_for; end

  sig { returns(T.any(Symbol, Integer)) }
  def key_details; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def key_details=(value); end

  sig { returns(String) }
  def raw_bytes; end

  sig { params(value: String).void }
  def raw_bytes=(value); end

  sig { returns(T.nilable(Sigstore::Common::V1::TimeRange)) }
  def valid_for; end

  sig { params(value: T.nilable(Sigstore::Common::V1::TimeRange)).void }
  def valid_for=(value); end
end
