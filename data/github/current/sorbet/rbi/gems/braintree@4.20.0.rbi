# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `braintree` gem.
# Please instead update this file by running `bin/tapioca gem braintree`.

# source://braintree//lib/braintree/exceptions.rb#1
module Braintree; end

# source://braintree//lib/braintree/account_updater_daily_report.rb#2
class Braintree::AccountUpdaterDailyReport
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [AccountUpdaterDailyReport] a new instance of AccountUpdaterDailyReport
  #
  # source://braintree//lib/braintree/account_updater_daily_report.rb#15
  def initialize(attributes); end

  # Returns the value of attribute report_date.
  #
  # source://braintree//lib/braintree/account_updater_daily_report.rb#5
  def report_date; end

  # Returns the value of attribute report_url.
  #
  # source://braintree//lib/braintree/account_updater_daily_report.rb#6
  def report_url; end

  class << self
    # source://braintree//lib/braintree/account_updater_daily_report.rb#10
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/ach_mandate.rb#2
class Braintree::AchMandate
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [AchMandate] a new instance of AchMandate
  #
  # source://braintree//lib/braintree/ach_mandate.rb#8
  def initialize(attributes); end

  # Returns the value of attribute accepted_at.
  #
  # source://braintree//lib/braintree/ach_mandate.rb#5
  def accepted_at; end

  # Returns the value of attribute text.
  #
  # source://braintree//lib/braintree/ach_mandate.rb#6
  def text; end
end

# source://braintree//lib/braintree/add_on.rb#2
class Braintree::AddOn < ::Braintree::Modification
  class << self
    # source://braintree//lib/braintree/add_on.rb#4
    def all; end
  end
end

# source://braintree//lib/braintree/add_on_gateway.rb#2
class Braintree::AddOnGateway
  # @return [AddOnGateway] a new instance of AddOnGateway
  #
  # source://braintree//lib/braintree/add_on_gateway.rb#3
  def initialize(gateway); end

  # source://braintree//lib/braintree/add_on_gateway.rb#9
  def all; end
end

# source://braintree//lib/braintree/address.rb#2
class Braintree::Address
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [Address] a new instance of Address
  #
  # source://braintree//lib/braintree/address.rb#47
  def initialize(gateway, attributes); end

  # source://braintree//lib/braintree/address.rb#52
  def ==(other); end

  # Returns the value of attribute company.
  #
  # source://braintree//lib/braintree/address.rb#5
  def company; end

  # Returns the value of attribute country_code_alpha2.
  #
  # source://braintree//lib/braintree/address.rb#6
  def country_code_alpha2; end

  # Returns the value of attribute country_code_alpha3.
  #
  # source://braintree//lib/braintree/address.rb#7
  def country_code_alpha3; end

  # Returns the value of attribute country_code_numeric.
  #
  # source://braintree//lib/braintree/address.rb#8
  def country_code_numeric; end

  # Returns the value of attribute country_name.
  #
  # source://braintree//lib/braintree/address.rb#9
  def country_name; end

  # Returns the value of attribute created_at.
  #
  # source://braintree//lib/braintree/address.rb#10
  def created_at; end

  # Returns the value of attribute customer_id.
  #
  # source://braintree//lib/braintree/address.rb#11
  def customer_id; end

  # Returns the value of attribute extended_address.
  #
  # source://braintree//lib/braintree/address.rb#12
  def extended_address; end

  # Returns the value of attribute first_name.
  #
  # source://braintree//lib/braintree/address.rb#13
  def first_name; end

  # Returns the value of attribute id.
  #
  # source://braintree//lib/braintree/address.rb#14
  def id; end

  # Returns the value of attribute last_name.
  #
  # source://braintree//lib/braintree/address.rb#15
  def last_name; end

  # Returns the value of attribute locality.
  #
  # source://braintree//lib/braintree/address.rb#16
  def locality; end

  # Returns the value of attribute phone_number.
  #
  # source://braintree//lib/braintree/address.rb#17
  def phone_number; end

  # Returns the value of attribute postal_code.
  #
  # source://braintree//lib/braintree/address.rb#18
  def postal_code; end

  # Returns the value of attribute region.
  #
  # source://braintree//lib/braintree/address.rb#19
  def region; end

  # Returns the value of attribute street_address.
  #
  # source://braintree//lib/braintree/address.rb#20
  def street_address; end

  # Returns the value of attribute updated_at.
  #
  # source://braintree//lib/braintree/address.rb#21
  def updated_at; end

  class << self
    # source://braintree//lib/braintree/address.rb#61
    def _new(*args); end

    # source://braintree//lib/braintree/address.rb#23
    def create(*args); end

    # source://braintree//lib/braintree/address.rb#27
    def create!(*args); end

    # source://braintree//lib/braintree/address.rb#31
    def delete(*args); end

    # source://braintree//lib/braintree/address.rb#35
    def find(*args); end

    # source://braintree//lib/braintree/address.rb#39
    def update(*args); end

    # source://braintree//lib/braintree/address.rb#43
    def update!(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/address/country_names.rb#4
Braintree::Address::CountryNames = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/address_gateway.rb#2
class Braintree::AddressGateway
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [AddressGateway] a new instance of AddressGateway
  #
  # source://braintree//lib/braintree/address_gateway.rb#5
  def initialize(gateway); end

  # source://braintree//lib/braintree/address_gateway.rb#65
  def _determine_customer_id(customer_or_customer_id); end

  # source://braintree//lib/braintree/address_gateway.rb#11
  def create(attributes); end

  # source://braintree//lib/braintree/address_gateway.rb#29
  def create!(*args); end

  # source://braintree//lib/braintree/address_gateway.rb#33
  def delete(customer_or_customer_id, address_id); end

  # source://braintree//lib/braintree/address_gateway.rb#39
  def find(customer_or_customer_id, address_id); end

  # source://braintree//lib/braintree/address_gateway.rb#48
  def update(customer_or_customer_id, address_id, attributes); end

  # source://braintree//lib/braintree/address_gateway.rb#61
  def update!(*args); end

  class << self
    # source://braintree//lib/braintree/address_gateway.rb#73
    def _create_signature; end

    # source://braintree//lib/braintree/address_gateway.rb#77
    def _shared_signature; end

    # source://braintree//lib/braintree/address_gateway.rb#83
    def _update_signature; end
  end
end

# source://braintree//lib/braintree/advanced_search.rb#2
class Braintree::AdvancedSearch
  # @return [AdvancedSearch] a new instance of AdvancedSearch
  #
  # source://braintree//lib/braintree/advanced_search.rb#148
  def initialize; end

  # source://braintree//lib/braintree/advanced_search.rb#152
  def add_criteria(key, value); end

  # source://braintree//lib/braintree/advanced_search.rb#160
  def to_hash; end

  class << self
    # source://braintree//lib/braintree/advanced_search.rb#139
    def _create_field_accessors(fields, node_class); end

    # source://braintree//lib/braintree/advanced_search.rb#131
    def date_range_fields(*fields); end

    # source://braintree//lib/braintree/advanced_search.rb#135
    def ends_with_fields(*fields); end

    # source://braintree//lib/braintree/advanced_search.rb#99
    def equality_fields(*fields); end

    # source://braintree//lib/braintree/advanced_search.rb#103
    def is_fields(*fields); end

    # source://braintree//lib/braintree/advanced_search.rb#123
    def key_value_fields(*fields); end

    # source://braintree//lib/braintree/advanced_search.rb#111
    def multiple_value_field(field, options = T.unsafe(nil)); end

    # source://braintree//lib/braintree/advanced_search.rb#117
    def multiple_value_or_text_field(field, options = T.unsafe(nil)); end

    # source://braintree//lib/braintree/advanced_search.rb#107
    def partial_match_fields(*fields); end

    # source://braintree//lib/braintree/advanced_search.rb#127
    def range_fields(*fields); end

    # source://braintree//lib/braintree/advanced_search.rb#95
    def text_fields(*fields); end
  end
end

# source://braintree//lib/braintree/advanced_search.rb#65
class Braintree::AdvancedSearch::EndsWithNode < ::Braintree::AdvancedSearch::SearchNode
  # source://braintree//lib/braintree/advanced_search.rb#6
  def ends_with(value); end
end

# source://braintree//lib/braintree/advanced_search.rb#21
class Braintree::AdvancedSearch::EqualityNode < ::Braintree::AdvancedSearch::IsNode
  # source://braintree//lib/braintree/advanced_search.rb#6
  def is_not(value); end
end

# source://braintree//lib/braintree/advanced_search.rb#17
class Braintree::AdvancedSearch::IsNode < ::Braintree::AdvancedSearch::SearchNode
  # source://braintree//lib/braintree/advanced_search.rb#6
  def is(value); end
end

# source://braintree//lib/braintree/advanced_search.rb#33
class Braintree::AdvancedSearch::KeyValueNode < ::Braintree::AdvancedSearch::SearchNode
  # source://braintree//lib/braintree/advanced_search.rb#34
  def is(value); end
end

# source://braintree//lib/braintree/advanced_search.rb#39
class Braintree::AdvancedSearch::MultipleValueNode < ::Braintree::AdvancedSearch::SearchNode
  # @return [MultipleValueNode] a new instance of MultipleValueNode
  #
  # source://braintree//lib/braintree/advanced_search.rb#51
  def initialize(name, parent, options); end

  # source://braintree//lib/braintree/advanced_search.rb#56
  def allowed_values; end

  # source://braintree//lib/braintree/advanced_search.rb#40
  def in(*values); end

  # source://braintree//lib/braintree/advanced_search.rb#60
  def is(value); end
end

# source://braintree//lib/braintree/advanced_search.rb#69
class Braintree::AdvancedSearch::MultipleValueOrTextNode < ::Braintree::AdvancedSearch::MultipleValueNode
  extend ::Forwardable

  # @return [MultipleValueOrTextNode] a new instance of MultipleValueOrTextNode
  #
  # source://braintree//lib/braintree/advanced_search.rb#73
  def initialize(name, parent, options); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def contains(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def ends_with(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def is(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def is_not(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def starts_with(*args, **_arg1, &block); end
end

# source://braintree//lib/braintree/advanced_search.rb#25
class Braintree::AdvancedSearch::PartialMatchNode < ::Braintree::AdvancedSearch::EqualityNode
  # source://braintree//lib/braintree/advanced_search.rb#6
  def ends_with(value); end

  # source://braintree//lib/braintree/advanced_search.rb#6
  def starts_with(value); end
end

# source://braintree//lib/braintree/advanced_search.rb#79
class Braintree::AdvancedSearch::RangeNode < ::Braintree::AdvancedSearch::SearchNode
  # source://braintree//lib/braintree/advanced_search.rb#90
  def <=(max); end

  # source://braintree//lib/braintree/advanced_search.rb#86
  def >=(min); end

  # source://braintree//lib/braintree/advanced_search.rb#82
  def between(min, max); end

  # source://braintree//lib/braintree/advanced_search.rb#6
  def is(value); end
end

# source://braintree//lib/braintree/advanced_search.rb#3
class Braintree::AdvancedSearch::SearchNode
  # @return [SearchNode] a new instance of SearchNode
  #
  # source://braintree//lib/braintree/advanced_search.rb#12
  def initialize(name, parent); end

  class << self
    # source://braintree//lib/braintree/advanced_search.rb#4
    def operators(*operator_names); end
  end
end

# source://braintree//lib/braintree/advanced_search.rb#29
class Braintree::AdvancedSearch::TextNode < ::Braintree::AdvancedSearch::PartialMatchNode
  # source://braintree//lib/braintree/advanced_search.rb#6
  def contains(value); end
end

# source://braintree//lib/braintree/apple_pay.rb#2
class Braintree::ApplePay
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [ApplePay] a new instance of ApplePay
  #
  # source://braintree//lib/braintree/apple_pay.rb#5
  def initialize(gateway, attributes); end

  class << self
    # source://braintree//lib/braintree/apple_pay.rb#13
    def _new(*args); end

    # source://braintree//lib/braintree/apple_pay.rb#17
    def register_domain(domain); end

    # source://braintree//lib/braintree/apple_pay.rb#25
    def registered_domains; end

    # source://braintree//lib/braintree/apple_pay.rb#21
    def unregister_domain(domain); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/apple_pay_card.rb#2
class Braintree::ApplePayCard
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [ApplePayCard] a new instance of ApplePayCard
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#42
  def initialize(gateway, attributes); end

  # Returns the value of attribute billing_address.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#13
  def billing_address; end

  # Returns the value of attribute bin.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#14
  def bin; end

  # Returns the value of attribute card_type.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#15
  def card_type; end

  # Returns the value of attribute cardholder_name.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#16
  def cardholder_name; end

  # Returns the value of attribute commercial.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#17
  def commercial; end

  # Returns the value of attribute country_of_issuance.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#18
  def country_of_issuance; end

  # Returns the value of attribute created_at.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#19
  def created_at; end

  # Returns the value of attribute customer_id.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#20
  def customer_id; end

  # Returns the value of attribute debit.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#21
  def debit; end

  # Returns the value of attribute default.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#22
  def default; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#49
  def default?; end

  # Returns the value of attribute durbin_regulated.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#23
  def durbin_regulated; end

  # Returns the value of attribute expiration_month.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#24
  def expiration_month; end

  # Returns the value of attribute expiration_year.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#25
  def expiration_year; end

  # Returns the value of attribute expired.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#26
  def expired; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#53
  def expired?; end

  # Returns the value of attribute healthcare.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#27
  def healthcare; end

  # Returns the value of attribute image_url.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#28
  def image_url; end

  # Returns the value of attribute issuing_bank.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#29
  def issuing_bank; end

  # Returns the value of attribute last_4.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#30
  def last_4; end

  # Returns the value of attribute merchant_token_identifier.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#31
  def merchant_token_identifier; end

  # Returns the value of attribute payment_instrument_name.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#32
  def payment_instrument_name; end

  # Returns the value of attribute payroll.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#33
  def payroll; end

  # Returns the value of attribute prepaid.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#34
  def prepaid; end

  # Returns the value of attribute product_id.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#35
  def product_id; end

  # Returns the value of attribute source_card_last4.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#36
  def source_card_last4; end

  # Returns the value of attribute source_description.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#37
  def source_description; end

  # Returns the value of attribute subscriptions.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#38
  def subscriptions; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#39
  def token; end

  # Returns the value of attribute updated_at.
  #
  # source://braintree//lib/braintree/apple_pay_card.rb#40
  def updated_at; end

  class << self
    # source://braintree//lib/braintree/apple_pay_card.rb#61
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/apple_pay_card.rb#5
module Braintree::ApplePayCard::CardType; end

# source://braintree//lib/braintree/apple_pay_card.rb#10
Braintree::ApplePayCard::CardType::All = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/apple_pay_card.rb#6
Braintree::ApplePayCard::CardType::AmEx = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/apple_pay_card.rb#8
Braintree::ApplePayCard::CardType::MasterCard = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/apple_pay_card.rb#7
Braintree::ApplePayCard::CardType::Visa = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/apple_pay_gateway.rb#2
class Braintree::ApplePayGateway
  # @return [ApplePayGateway] a new instance of ApplePayGateway
  #
  # source://braintree//lib/braintree/apple_pay_gateway.rb#3
  def initialize(gateway); end

  # source://braintree//lib/braintree/apple_pay_gateway.rb#8
  def register_domain(domain); end

  # source://braintree//lib/braintree/apple_pay_gateway.rb#25
  def registered_domains; end

  # source://braintree//lib/braintree/apple_pay_gateway.rb#20
  def unregister_domain(domain); end
end

# source://braintree//lib/braintree/apple_pay_options.rb#2
class Braintree::ApplePayOptions
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [ApplePayOptions] a new instance of ApplePayOptions
  #
  # source://braintree//lib/braintree/apple_pay_options.rb#7
  def initialize(attributes); end

  # Returns the value of attribute domains.
  #
  # source://braintree//lib/braintree/apple_pay_options.rb#5
  def domains; end

  class << self
    # source://braintree//lib/braintree/apple_pay_options.rb#15
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/exceptions.rb#4
class Braintree::AuthenticationError < ::Braintree::BraintreeError; end

# source://braintree//lib/braintree/authorization_adjustment.rb#2
class Braintree::AuthorizationAdjustment
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [AuthorizationAdjustment] a new instance of AuthorizationAdjustment
  #
  # source://braintree//lib/braintree/authorization_adjustment.rb#19
  def initialize(attributes); end

  # Returns the value of attribute amount.
  #
  # source://braintree//lib/braintree/authorization_adjustment.rb#5
  def amount; end

  # Returns the value of attribute processor_response_code.
  #
  # source://braintree//lib/braintree/authorization_adjustment.rb#8
  def processor_response_code; end

  # Returns the value of attribute processor_response_text.
  #
  # source://braintree//lib/braintree/authorization_adjustment.rb#9
  def processor_response_text; end

  # Returns the value of attribute processor_response_type.
  #
  # source://braintree//lib/braintree/authorization_adjustment.rb#10
  def processor_response_type; end

  # Returns the value of attribute success.
  #
  # source://braintree//lib/braintree/authorization_adjustment.rb#6
  def success; end

  # Returns the value of attribute timestamp.
  #
  # source://braintree//lib/braintree/authorization_adjustment.rb#7
  def timestamp; end

  class << self
    # source://braintree//lib/braintree/authorization_adjustment.rb#14
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/exceptions.rb#6
class Braintree::AuthorizationError < ::Braintree::BraintreeError; end

# source://braintree//lib/braintree/base_module.rb#2
module Braintree::BaseModule
  include ::Braintree::BaseModule::Methods

  mixes_in_class_methods ::Braintree::BaseModule::Methods

  class << self
    # @private
    #
    # source://braintree//lib/braintree/base_module.rb#40
    def included(klass); end
  end
end

# source://braintree//lib/braintree/base_module.rb#3
module Braintree::BaseModule::Methods
  # source://braintree//lib/braintree/base_module.rb#13
  def copy_instance_variables_from_object(object); end

  # source://braintree//lib/braintree/base_module.rb#4
  def return_object_or_raise(object_to_return); end

  # source://braintree//lib/braintree/base_module.rb#19
  def set_instance_variables_from_hash(hash); end

  # source://braintree//lib/braintree/base_module.rb#35
  def singleton_class; end
end

# source://braintree//lib/braintree/bin_data.rb#2
class Braintree::BinData
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [BinData] a new instance of BinData
  #
  # source://braintree//lib/braintree/bin_data.rb#15
  def initialize(attributes); end

  # Returns the value of attribute commercial.
  #
  # source://braintree//lib/braintree/bin_data.rb#5
  def commercial; end

  # Returns the value of attribute country_of_issuance.
  #
  # source://braintree//lib/braintree/bin_data.rb#6
  def country_of_issuance; end

  # Returns the value of attribute debit.
  #
  # source://braintree//lib/braintree/bin_data.rb#7
  def debit; end

  # Returns the value of attribute durbin_regulated.
  #
  # source://braintree//lib/braintree/bin_data.rb#8
  def durbin_regulated; end

  # Returns the value of attribute healthcare.
  #
  # source://braintree//lib/braintree/bin_data.rb#9
  def healthcare; end

  # source://braintree//lib/braintree/bin_data.rb#19
  def inspect; end

  # Returns the value of attribute issuing_bank.
  #
  # source://braintree//lib/braintree/bin_data.rb#10
  def issuing_bank; end

  # Returns the value of attribute payroll.
  #
  # source://braintree//lib/braintree/bin_data.rb#11
  def payroll; end

  # Returns the value of attribute prepaid.
  #
  # source://braintree//lib/braintree/bin_data.rb#12
  def prepaid; end

  # Returns the value of attribute product_id.
  #
  # source://braintree//lib/braintree/bin_data.rb#13
  def product_id; end

  class << self
    # source://braintree//lib/braintree/bin_data.rb#26
    def _attributes; end
  end
end

# source://braintree//lib/braintree/exceptions.rb#2
class Braintree::BraintreeError < ::StandardError; end

# source://braintree//lib/braintree/client_token.rb#4
module Braintree::ClientToken
  class << self
    # source://braintree//lib/braintree/client_token.rb#7
    def generate(*args); end
  end
end

# source://braintree//lib/braintree/client_token.rb#5
Braintree::ClientToken::DEFAULT_VERSION = T.let(T.unsafe(nil), Integer)

# source://braintree//lib/braintree/client_token_gateway.rb#2
class Braintree::ClientTokenGateway
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [ClientTokenGateway] a new instance of ClientTokenGateway
  #
  # source://braintree//lib/braintree/client_token_gateway.rb#5
  def initialize(gateway); end

  # source://braintree//lib/braintree/client_token_gateway.rb#37
  def _validate_options(options); end

  # source://braintree//lib/braintree/client_token_gateway.rb#11
  def generate(options = T.unsafe(nil)); end

  class << self
    # source://braintree//lib/braintree/client_token_gateway.rb#28
    def _generate_signature; end
  end
end

# source://braintree//lib/braintree/configuration.rb#2
class Braintree::Configuration
  # @return [Configuration] a new instance of Configuration
  #
  # source://braintree//lib/braintree/configuration.rb#113
  def initialize(options = T.unsafe(nil)); end

  # source://braintree//lib/braintree/configuration.rb#141
  def _check_for_mixed_credentials(options); end

  # source://braintree//lib/braintree/configuration.rb#155
  def _check_for_mixed_environment(options_environment, token_environment); end

  # source://braintree//lib/braintree/configuration.rb#47
  def access_token; end

  # source://braintree//lib/braintree/configuration.rb#161
  def api_version; end

  # source://braintree//lib/braintree/configuration.rb#308
  def assert_has_access_token_or_keys; end

  # source://braintree//lib/braintree/configuration.rb#302
  def assert_has_client_credentials; end

  # source://braintree//lib/braintree/configuration.rb#261
  def auth_url; end

  # source://braintree//lib/braintree/configuration.rb#169
  def base_merchant_path; end

  # source://braintree//lib/braintree/configuration.rb#181
  def base_merchant_url; end

  # source://braintree//lib/braintree/configuration.rb#173
  def base_url; end

  # source://braintree//lib/braintree/configuration.rb#185
  def ca_file; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/configuration.rb#298
  def client_credentials?; end

  # source://braintree//lib/braintree/configuration.rb#47
  def client_id; end

  # source://braintree//lib/braintree/configuration.rb#47
  def client_secret; end

  # source://braintree//lib/braintree/configuration.rb#49
  def custom_user_agent=(_arg0); end

  # source://braintree//lib/braintree/configuration.rb#189
  def endpoint; end

  # source://braintree//lib/braintree/configuration.rb#49
  def endpoint=(_arg0); end

  # source://braintree//lib/braintree/configuration.rb#47
  def environment; end

  # source://braintree//lib/braintree/configuration.rb#49
  def environment=(_arg0); end

  # source://braintree//lib/braintree/configuration.rb#165
  def graphql_api_version; end

  # source://braintree//lib/braintree/configuration.rb#177
  def graphql_base_url; end

  # source://braintree//lib/braintree/configuration.rb#197
  def graphql_client; end

  # source://braintree//lib/braintree/configuration.rb#214
  def graphql_port; end

  # source://braintree//lib/braintree/configuration.rb#248
  def graphql_server; end

  # source://braintree//lib/braintree/configuration.rb#193
  def http; end

  # source://braintree//lib/braintree/configuration.rb#227
  def http_open_timeout; end

  # source://braintree//lib/braintree/configuration.rb#49
  def http_open_timeout=(_arg0); end

  # source://braintree//lib/braintree/configuration.rb#231
  def http_read_timeout; end

  # source://braintree//lib/braintree/configuration.rb#49
  def http_read_timeout=(_arg0); end

  # source://braintree//lib/braintree/configuration.rb#294
  def inspect; end

  # source://braintree//lib/braintree/configuration.rb#201
  def logger; end

  # source://braintree//lib/braintree/configuration.rb#49
  def logger=(_arg0); end

  # source://braintree//lib/braintree/configuration.rb#47
  def merchant_id; end

  # source://braintree//lib/braintree/configuration.rb#49
  def merchant_id=(_arg0); end

  # source://braintree//lib/braintree/configuration.rb#205
  def port; end

  # source://braintree//lib/braintree/configuration.rb#47
  def private_key; end

  # source://braintree//lib/braintree/configuration.rb#49
  def private_key=(_arg0); end

  # source://braintree//lib/braintree/configuration.rb#223
  def protocol; end

  # source://braintree//lib/braintree/configuration.rb#48
  def proxy_address; end

  # source://braintree//lib/braintree/configuration.rb#49
  def proxy_address=(_arg0); end

  # source://braintree//lib/braintree/configuration.rb#48
  def proxy_pass; end

  # source://braintree//lib/braintree/configuration.rb#49
  def proxy_pass=(_arg0); end

  # source://braintree//lib/braintree/configuration.rb#48
  def proxy_port; end

  # source://braintree//lib/braintree/configuration.rb#49
  def proxy_port=(_arg0); end

  # source://braintree//lib/braintree/configuration.rb#48
  def proxy_user; end

  # source://braintree//lib/braintree/configuration.rb#49
  def proxy_user=(_arg0); end

  # source://braintree//lib/braintree/configuration.rb#47
  def public_key; end

  # source://braintree//lib/braintree/configuration.rb#49
  def public_key=(_arg0); end

  # source://braintree//lib/braintree/configuration.rb#235
  def server; end

  # source://braintree//lib/braintree/configuration.rb#318
  def sha256_signature_service; end

  # source://braintree//lib/braintree/configuration.rb#314
  def signature_service; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/configuration.rb#274
  def ssl?; end

  # source://braintree//lib/braintree/configuration.rb#48
  def ssl_version; end

  # source://braintree//lib/braintree/configuration.rb#49
  def ssl_version=(_arg0); end

  # source://braintree//lib/braintree/configuration.rb#283
  def user_agent; end

  class << self
    # source://braintree//lib/braintree/configuration.rb#288
    def _default_logger; end

    # source://braintree//lib/braintree/configuration.rb#53
    def access_token; end

    # source://braintree//lib/braintree/configuration.rb#53
    def client_id; end

    # source://braintree//lib/braintree/configuration.rb#53
    def client_secret; end

    # source://braintree//lib/braintree/configuration.rb#44
    def custom_user_agent=(_arg0); end

    # source://braintree//lib/braintree/configuration.rb#44
    def endpoint=(_arg0); end

    # source://braintree//lib/braintree/configuration.rb#53
    def environment; end

    # source://braintree//lib/braintree/configuration.rb#62
    def environment=(env); end

    # source://braintree//lib/braintree/configuration.rb#51
    def expectant_reader(*attributes); end

    # source://braintree//lib/braintree/configuration.rb#70
    def gateway; end

    # source://braintree//lib/braintree/configuration.rb#93
    def http_open_timeout; end

    # source://braintree//lib/braintree/configuration.rb#44
    def http_open_timeout=(_arg0); end

    # source://braintree//lib/braintree/configuration.rb#97
    def http_read_timeout; end

    # source://braintree//lib/braintree/configuration.rb#44
    def http_read_timeout=(_arg0); end

    # source://braintree//lib/braintree/configuration.rb#74
    def instantiate; end

    # source://braintree//lib/braintree/configuration.rb#101
    def logger; end

    # source://braintree//lib/braintree/configuration.rb#44
    def logger=(_arg0); end

    # source://braintree//lib/braintree/configuration.rb#53
    def merchant_id; end

    # source://braintree//lib/braintree/configuration.rb#44
    def merchant_id=(_arg0); end

    # source://braintree//lib/braintree/configuration.rb#53
    def private_key; end

    # source://braintree//lib/braintree/configuration.rb#44
    def private_key=(_arg0); end

    # source://braintree//lib/braintree/configuration.rb#45
    def proxy_address; end

    # source://braintree//lib/braintree/configuration.rb#44
    def proxy_address=(_arg0); end

    # source://braintree//lib/braintree/configuration.rb#45
    def proxy_pass; end

    # source://braintree//lib/braintree/configuration.rb#44
    def proxy_pass=(_arg0); end

    # source://braintree//lib/braintree/configuration.rb#45
    def proxy_port; end

    # source://braintree//lib/braintree/configuration.rb#44
    def proxy_port=(_arg0); end

    # source://braintree//lib/braintree/configuration.rb#45
    def proxy_user; end

    # source://braintree//lib/braintree/configuration.rb#44
    def proxy_user=(_arg0); end

    # source://braintree//lib/braintree/configuration.rb#53
    def public_key; end

    # source://braintree//lib/braintree/configuration.rb#44
    def public_key=(_arg0); end

    # source://braintree//lib/braintree/configuration.rb#109
    def sha256_signature_service; end

    # source://braintree//lib/braintree/configuration.rb#105
    def signature_service; end

    # source://braintree//lib/braintree/configuration.rb#45
    def ssl_version; end

    # source://braintree//lib/braintree/configuration.rb#44
    def ssl_version=(_arg0); end
  end
end

# source://braintree//lib/braintree/configuration.rb#3
Braintree::Configuration::API_VERSION = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/configuration.rb#4
Braintree::Configuration::DEFAULT_ENDPOINT = T.let(T.unsafe(nil), String)

# NEXT_MAJOR_VERSION update to the latest version of GraphQL API
#
# source://braintree//lib/braintree/configuration.rb#6
Braintree::Configuration::GRAPHQL_API_VERSION = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/configuration.rb#18
Braintree::Configuration::NON_REQUIRED_READABLE_ATTRIBUTES = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/configuration.rb#8
Braintree::Configuration::READABLE_ATTRIBUTES = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/configuration.rb#26
Braintree::Configuration::WRITABLE_ATTRIBUTES = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/exceptions.rb#8
class Braintree::ConfigurationError < ::Braintree::BraintreeError; end

# source://braintree//lib/braintree/connected_merchant_paypal_status_changed.rb#2
class Braintree::ConnectedMerchantPayPalStatusChanged
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [ConnectedMerchantPayPalStatusChanged] a new instance of ConnectedMerchantPayPalStatusChanged
  #
  # source://braintree//lib/braintree/connected_merchant_paypal_status_changed.rb#11
  def initialize(attributes); end

  # Returns the value of attribute action.
  #
  # source://braintree//lib/braintree/connected_merchant_paypal_status_changed.rb#5
  def action; end

  # Returns the value of attribute merchant_public_id.
  #
  # source://braintree//lib/braintree/connected_merchant_paypal_status_changed.rb#6
  def merchant_id; end

  # Returns the value of attribute merchant_public_id.
  #
  # source://braintree//lib/braintree/connected_merchant_paypal_status_changed.rb#6
  def merchant_public_id; end

  # Returns the value of attribute oauth_application_client_id.
  #
  # source://braintree//lib/braintree/connected_merchant_paypal_status_changed.rb#7
  def oauth_application_client_id; end

  class << self
    # source://braintree//lib/braintree/connected_merchant_paypal_status_changed.rb#17
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/connected_merchant_status_transitioned.rb#2
class Braintree::ConnectedMerchantStatusTransitioned
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [ConnectedMerchantStatusTransitioned] a new instance of ConnectedMerchantStatusTransitioned
  #
  # source://braintree//lib/braintree/connected_merchant_status_transitioned.rb#11
  def initialize(attributes); end

  # Returns the value of attribute merchant_public_id.
  #
  # source://braintree//lib/braintree/connected_merchant_status_transitioned.rb#5
  def merchant_id; end

  # Returns the value of attribute merchant_public_id.
  #
  # source://braintree//lib/braintree/connected_merchant_status_transitioned.rb#5
  def merchant_public_id; end

  # Returns the value of attribute oauth_application_client_id.
  #
  # source://braintree//lib/braintree/connected_merchant_status_transitioned.rb#6
  def oauth_application_client_id; end

  # Returns the value of attribute status.
  #
  # source://braintree//lib/braintree/connected_merchant_status_transitioned.rb#7
  def status; end

  class << self
    # source://braintree//lib/braintree/connected_merchant_status_transitioned.rb#17
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/credentials_parser.rb#2
class Braintree::CredentialsParser
  # Returns the value of attribute access_token.
  #
  # source://braintree//lib/braintree/credentials_parser.rb#3
  def access_token; end

  # Returns the value of attribute client_id.
  #
  # source://braintree//lib/braintree/credentials_parser.rb#4
  def client_id; end

  # Returns the value of attribute client_secret.
  #
  # source://braintree//lib/braintree/credentials_parser.rb#5
  def client_secret; end

  # Returns the value of attribute environment.
  #
  # source://braintree//lib/braintree/credentials_parser.rb#6
  def environment; end

  # Returns the value of attribute merchant_id.
  #
  # source://braintree//lib/braintree/credentials_parser.rb#7
  def merchant_id; end

  # @raise [ConfigurationError]
  #
  # source://braintree//lib/braintree/credentials_parser.rb#27
  def parse_access_token(access_token); end

  # @raise [ConfigurationError]
  #
  # source://braintree//lib/braintree/credentials_parser.rb#9
  def parse_client_credentials(client_id, client_secret); end

  # source://braintree//lib/braintree/credentials_parser.rb#36
  def parse_environment(credential); end

  # source://braintree//lib/braintree/credentials_parser.rb#40
  def parse_merchant_id(access_token); end
end

# source://braintree//lib/braintree/credit_card.rb#2
class Braintree::CreditCard
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  include ::Braintree::Util::TokenEquality
  extend ::Braintree::BaseModule::Methods

  # @return [CreditCard] a new instance of CreditCard
  #
  # source://braintree//lib/braintree/credit_card.rb#140
  def initialize(gateway, attributes); end

  # source://braintree//lib/braintree/credit_card.rb#148
  def _most_recent_verification(attributes); end

  # Returns the value of attribute billing_address.
  #
  # source://braintree//lib/braintree/credit_card.rb#51
  def billing_address; end

  # Returns the value of attribute bin.
  #
  # source://braintree//lib/braintree/credit_card.rb#52
  def bin; end

  # Returns the value of attribute card_type.
  #
  # source://braintree//lib/braintree/credit_card.rb#53
  def card_type; end

  # Returns the value of attribute cardholder_name.
  #
  # source://braintree//lib/braintree/credit_card.rb#54
  def cardholder_name; end

  # Returns the value of attribute commercial.
  #
  # source://braintree//lib/braintree/credit_card.rb#55
  def commercial; end

  # Returns the value of attribute country_of_issuance.
  #
  # source://braintree//lib/braintree/credit_card.rb#56
  def country_of_issuance; end

  # Returns the value of attribute created_at.
  #
  # source://braintree//lib/braintree/credit_card.rb#57
  def created_at; end

  # Returns the value of attribute customer_id.
  #
  # source://braintree//lib/braintree/credit_card.rb#58
  def customer_id; end

  # Returns the value of attribute debit.
  #
  # source://braintree//lib/braintree/credit_card.rb#59
  def debit; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/credit_card.rb#153
  def default?; end

  # Returns the value of attribute durbin_regulated.
  #
  # source://braintree//lib/braintree/credit_card.rb#60
  def durbin_regulated; end

  # Expiration date formatted as MM/YYYY
  #
  # source://braintree//lib/braintree/credit_card.rb#158
  def expiration_date; end

  # Returns the value of attribute expiration_month.
  #
  # source://braintree//lib/braintree/credit_card.rb#61
  def expiration_month; end

  # Returns the value of attribute expiration_year.
  #
  # source://braintree//lib/braintree/credit_card.rb#62
  def expiration_year; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/credit_card.rb#162
  def expired?; end

  # Returns the value of attribute healthcare.
  #
  # source://braintree//lib/braintree/credit_card.rb#63
  def healthcare; end

  # Returns the value of attribute image_url.
  #
  # source://braintree//lib/braintree/credit_card.rb#64
  def image_url; end

  # source://braintree//lib/braintree/credit_card.rb#166
  def inspect; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/credit_card.rb#192
  def is_network_tokenized?; end

  # Returns the value of attribute issuing_bank.
  #
  # source://braintree//lib/braintree/credit_card.rb#65
  def issuing_bank; end

  # Returns the value of attribute last_4.
  #
  # source://braintree//lib/braintree/credit_card.rb#66
  def last_4; end

  # source://braintree//lib/braintree/credit_card.rb#175
  def masked_number; end

  # source://braintree//lib/braintree/credit_card.rb#179
  def nonce; end

  # Returns the value of attribute payroll.
  #
  # source://braintree//lib/braintree/credit_card.rb#67
  def payroll; end

  # Returns the value of attribute prepaid.
  #
  # source://braintree//lib/braintree/credit_card.rb#68
  def prepaid; end

  # Returns the value of attribute product_id.
  #
  # source://braintree//lib/braintree/credit_card.rb#69
  def product_id; end

  # Returns the value of attribute subscriptions.
  #
  # source://braintree//lib/braintree/credit_card.rb#70
  def subscriptions; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/credit_card.rb#71
  def token; end

  # Returns the value of attribute unique_number_identifier.
  #
  # source://braintree//lib/braintree/credit_card.rb#72
  def unique_number_identifier; end

  # Returns the value of attribute updated_at.
  #
  # source://braintree//lib/braintree/credit_card.rb#73
  def updated_at; end

  # NEXT_MAJOR_VERSION can this be removed? Venmo SDK integration is no more
  # Returns true if the card is associated with Venmo SDK
  # NEXT_MAJOR_VERSION Remove this method
  # The old venmo SDK class has been deprecated
  #
  # @return [Boolean]
  #
  # source://braintree//lib/braintree/credit_card.rb#187
  def venmo_sdk?; end

  # Returns the value of attribute verification.
  #
  # source://braintree//lib/braintree/credit_card.rb#74
  def verification; end

  class << self
    # source://braintree//lib/braintree/credit_card.rb#200
    def _attributes; end

    # source://braintree//lib/braintree/credit_card.rb#208
    def _new(*args); end

    # source://braintree//lib/braintree/credit_card.rb#76
    def create(*args); end

    # source://braintree//lib/braintree/credit_card.rb#80
    def create!(*args); end

    # NEXT_MAJOR_VERSION remove this method
    # CreditCard.credit has been deprecated in favor of Transaction.credit
    #
    # source://braintree//lib/braintree/credit_card.rb#86
    def credit(token, transaction_attributes); end

    # NEXT_MAJOR_VERSION remove this method
    # CreditCard.credit has been deprecated in favor of Transaction.credit
    #
    # source://braintree//lib/braintree/credit_card.rb#93
    def credit!(token, transaction_attributes); end

    # source://braintree//lib/braintree/credit_card.rb#98
    def delete(*args); end

    # source://braintree//lib/braintree/credit_card.rb#102
    def expired(*args); end

    # source://braintree//lib/braintree/credit_card.rb#106
    def expiring_between(*args); end

    # source://braintree//lib/braintree/credit_card.rb#110
    def find(*args); end

    # source://braintree//lib/braintree/credit_card.rb#114
    def from_nonce(*args); end

    # NEXT_MAJOR_VERSION remove this method
    # CreditCard.sale has been deprecated in favor of Transaction.sale
    #
    # source://braintree//lib/braintree/credit_card.rb#120
    def sale(token, transaction_attributes); end

    # NEXT_MAJOR_VERSION remove this method
    # CreditCard.sale has been deprecated in favor of Transaction.sale
    #
    # source://braintree//lib/braintree/credit_card.rb#127
    def sale!(token, transaction_attributes); end

    # source://braintree//lib/braintree/credit_card.rb#132
    def update(*args); end

    # source://braintree//lib/braintree/credit_card.rb#136
    def update!(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/credit_card.rb#6
module Braintree::CreditCard::CardType; end

# source://braintree//lib/braintree/credit_card.rb#23
Braintree::CreditCard::CardType::All = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/credit_card.rb#7
Braintree::CreditCard::CardType::AmEx = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#8
Braintree::CreditCard::CardType::CarteBlanche = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#9
Braintree::CreditCard::CardType::ChinaUnionPay = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#10
Braintree::CreditCard::CardType::DinersClubInternational = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#11
Braintree::CreditCard::CardType::Discover = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#12
Braintree::CreditCard::CardType::Elo = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#13
Braintree::CreditCard::CardType::JCB = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#14
Braintree::CreditCard::CardType::Laser = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#16
Braintree::CreditCard::CardType::Maestro = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#17
Braintree::CreditCard::CardType::MasterCard = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#18
Braintree::CreditCard::CardType::Solo = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#19
Braintree::CreditCard::CardType::Switch = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#15
Braintree::CreditCard::CardType::UK_Maestro = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#21
Braintree::CreditCard::CardType::Unknown = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#20
Braintree::CreditCard::CardType::Visa = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#42
module Braintree::CreditCard::CardTypeIndicator; end

# source://braintree//lib/braintree/credit_card.rb#44
Braintree::CreditCard::CardTypeIndicator::No = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#45
Braintree::CreditCard::CardTypeIndicator::Unknown = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#43
Braintree::CreditCard::CardTypeIndicator::Yes = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#48
Braintree::CreditCard::Commercial = Braintree::CreditCard::CardTypeIndicator

# source://braintree//lib/braintree/credit_card.rb#49
Braintree::CreditCard::CountryOfIssuance = Braintree::CreditCard::CardTypeIndicator

# source://braintree//lib/braintree/credit_card.rb#37
module Braintree::CreditCard::CustomerLocation; end

# source://braintree//lib/braintree/credit_card.rb#38
Braintree::CreditCard::CustomerLocation::International = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#39
Braintree::CreditCard::CustomerLocation::US = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#48
Braintree::CreditCard::Debit = Braintree::CreditCard::CardTypeIndicator

# source://braintree//lib/braintree/credit_card.rb#26
module Braintree::CreditCard::DebitNetwork; end

# source://braintree//lib/braintree/credit_card.rb#27
Braintree::CreditCard::DebitNetwork::Accel = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#34
Braintree::CreditCard::DebitNetwork::All = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/credit_card.rb#28
Braintree::CreditCard::DebitNetwork::Maestro = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#29
Braintree::CreditCard::DebitNetwork::Nyce = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#30
Braintree::CreditCard::DebitNetwork::Pulse = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#31
Braintree::CreditCard::DebitNetwork::Star = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#32
Braintree::CreditCard::DebitNetwork::Star_Access = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card.rb#48
Braintree::CreditCard::DurbinRegulated = Braintree::CreditCard::CardTypeIndicator

# source://braintree//lib/braintree/credit_card.rb#48
Braintree::CreditCard::Healthcare = Braintree::CreditCard::CardTypeIndicator

# source://braintree//lib/braintree/credit_card.rb#49
Braintree::CreditCard::IssuingBank = Braintree::CreditCard::CardTypeIndicator

# source://braintree//lib/braintree/credit_card.rb#48
Braintree::CreditCard::Payroll = Braintree::CreditCard::CardTypeIndicator

# source://braintree//lib/braintree/credit_card.rb#48
Braintree::CreditCard::Prepaid = Braintree::CreditCard::CardTypeIndicator

# source://braintree//lib/braintree/credit_card.rb#48
Braintree::CreditCard::ProductId = Braintree::CreditCard::CardTypeIndicator

# source://braintree//lib/braintree/credit_card_gateway.rb#2
class Braintree::CreditCardGateway
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [CreditCardGateway] a new instance of CreditCardGateway
  #
  # source://braintree//lib/braintree/credit_card_gateway.rb#5
  def initialize(gateway); end

  # source://braintree//lib/braintree/credit_card_gateway.rb#145
  def _do_create(path, params = T.unsafe(nil)); end

  # source://braintree//lib/braintree/credit_card_gateway.rb#156
  def _do_update(http_verb, path, params); end

  # source://braintree//lib/braintree/credit_card_gateway.rb#167
  def _fetch_expired(ids); end

  # source://braintree//lib/braintree/credit_card_gateway.rb#173
  def _fetch_expiring_between(formatted_start_date, formatted_end_date, ids); end

  # source://braintree//lib/braintree/credit_card_gateway.rb#11
  def create(attributes); end

  # source://braintree//lib/braintree/credit_card_gateway.rb#23
  def create!(*args); end

  # NEXT_MAJOR_VERSION remove this method
  # CreditCard.credit has been deprecated in favor of Transaction.credit
  #
  # source://braintree//lib/braintree/credit_card_gateway.rb#29
  def credit(token, transaction_attributes); end

  # NEXT_MAJOR_VERSION remove this method
  # CreditCard.credit has been deprecated in favor of Transaction.credit
  #
  # source://braintree//lib/braintree/credit_card_gateway.rb#36
  def credit!(*args); end

  # source://braintree//lib/braintree/credit_card_gateway.rb#41
  def delete(token); end

  # source://braintree//lib/braintree/credit_card_gateway.rb#45
  def expired(options = T.unsafe(nil)); end

  # source://braintree//lib/braintree/credit_card_gateway.rb#50
  def expiring_between(start_date, end_date, options = T.unsafe(nil)); end

  # source://braintree//lib/braintree/credit_card_gateway.rb#57
  def find(token); end

  # source://braintree//lib/braintree/credit_card_gateway.rb#65
  def from_nonce(nonce); end

  # source://braintree//lib/braintree/credit_card_gateway.rb#73
  def update(token, attributes); end

  # source://braintree//lib/braintree/credit_card_gateway.rb#82
  def update!(*args); end

  class << self
    # source://braintree//lib/braintree/credit_card_gateway.rb#86
    def _create_signature; end

    # source://braintree//lib/braintree/credit_card_gateway.rb#94
    def _signature(type); end

    # source://braintree//lib/braintree/credit_card_gateway.rb#90
    def _update_signature; end
  end
end

# source://braintree//lib/braintree/credit_card_verification.rb#2
class Braintree::CreditCardVerification
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  include ::Braintree::Util::IdEquality
  extend ::Braintree::BaseModule::Methods

  # @return [CreditCardVerification] a new instance of CreditCardVerification
  #
  # source://braintree//lib/braintree/credit_card_verification.rb#51
  def initialize(attributes); end

  # Returns the value of attribute amount.
  #
  # source://braintree//lib/braintree/credit_card_verification.rb#28
  def amount; end

  # Returns the value of attribute avs_error_response_code.
  #
  # source://braintree//lib/braintree/credit_card_verification.rb#29
  def avs_error_response_code; end

  # Returns the value of attribute avs_postal_code_response_code.
  #
  # source://braintree//lib/braintree/credit_card_verification.rb#30
  def avs_postal_code_response_code; end

  # Returns the value of attribute avs_street_address_response_code.
  #
  # source://braintree//lib/braintree/credit_card_verification.rb#31
  def avs_street_address_response_code; end

  # Returns the value of attribute billing.
  #
  # source://braintree//lib/braintree/credit_card_verification.rb#32
  def billing; end

  # Returns the value of attribute created_at.
  #
  # source://braintree//lib/braintree/credit_card_verification.rb#33
  def created_at; end

  # Returns the value of attribute credit_card.
  #
  # source://braintree//lib/braintree/credit_card_verification.rb#34
  def credit_card; end

  # Returns the value of attribute currency_iso_code.
  #
  # source://braintree//lib/braintree/credit_card_verification.rb#35
  def currency_iso_code; end

  # Returns the value of attribute cvv_response_code.
  #
  # source://braintree//lib/braintree/credit_card_verification.rb#36
  def cvv_response_code; end

  # Returns the value of attribute gateway_rejection_reason.
  #
  # source://braintree//lib/braintree/credit_card_verification.rb#37
  def gateway_rejection_reason; end

  # Returns the value of attribute graphql_id.
  #
  # source://braintree//lib/braintree/credit_card_verification.rb#38
  def graphql_id; end

  # Returns the value of attribute id.
  #
  # source://braintree//lib/braintree/credit_card_verification.rb#39
  def id; end

  # source://braintree//lib/braintree/credit_card_verification.rb#60
  def inspect; end

  # Returns the value of attribute merchant_account_id.
  #
  # source://braintree//lib/braintree/credit_card_verification.rb#40
  def merchant_account_id; end

  # Returns the value of attribute network_response_code.
  #
  # source://braintree//lib/braintree/credit_card_verification.rb#41
  def network_response_code; end

  # Returns the value of attribute network_response_text.
  #
  # source://braintree//lib/braintree/credit_card_verification.rb#42
  def network_response_text; end

  # Returns the value of attribute network_transaction_id.
  #
  # source://braintree//lib/braintree/credit_card_verification.rb#43
  def network_transaction_id; end

  # Returns the value of attribute processor_response_code.
  #
  # source://braintree//lib/braintree/credit_card_verification.rb#44
  def processor_response_code; end

  # Returns the value of attribute processor_response_text.
  #
  # source://braintree//lib/braintree/credit_card_verification.rb#45
  def processor_response_text; end

  # Returns the value of attribute processor_response_type.
  #
  # source://braintree//lib/braintree/credit_card_verification.rb#46
  def processor_response_type; end

  # Returns the value of attribute risk_data.
  #
  # source://braintree//lib/braintree/credit_card_verification.rb#47
  def risk_data; end

  # Returns the value of attribute status.
  #
  # source://braintree//lib/braintree/credit_card_verification.rb#49
  def status; end

  # Returns the value of attribute three_d_secure_info.
  #
  # source://braintree//lib/braintree/credit_card_verification.rb#48
  def three_d_secure_info; end

  class << self
    # source://braintree//lib/braintree/credit_card_verification.rb#94
    def _new(*args); end

    # source://braintree//lib/braintree/credit_card_verification.rb#106
    def create(attributes); end

    # source://braintree//lib/braintree/credit_card_verification.rb#98
    def find(*args); end

    # source://braintree//lib/braintree/credit_card_verification.rb#102
    def search(&block); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/credit_card_verification.rb#6
module Braintree::CreditCardVerification::GatewayRejectionReason; end

# source://braintree//lib/braintree/credit_card_verification.rb#8
Braintree::CreditCardVerification::GatewayRejectionReason::AVS = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card_verification.rb#9
Braintree::CreditCardVerification::GatewayRejectionReason::AVSAndCVV = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card_verification.rb#7
Braintree::CreditCardVerification::GatewayRejectionReason::ApplicationIncomplete = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card_verification.rb#10
Braintree::CreditCardVerification::GatewayRejectionReason::CVV = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card_verification.rb#11
Braintree::CreditCardVerification::GatewayRejectionReason::Duplicate = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card_verification.rb#12
Braintree::CreditCardVerification::GatewayRejectionReason::Fraud = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card_verification.rb#13
Braintree::CreditCardVerification::GatewayRejectionReason::RiskThreshold = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card_verification.rb#14
Braintree::CreditCardVerification::GatewayRejectionReason::ThreeDSecure = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card_verification.rb#15
Braintree::CreditCardVerification::GatewayRejectionReason::TokenIssuance = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card_verification.rb#16
Braintree::CreditCardVerification::GatewayRejectionReason::Unrecognized = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card_verification.rb#19
module Braintree::CreditCardVerification::Status; end

# source://braintree//lib/braintree/credit_card_verification.rb#25
Braintree::CreditCardVerification::Status::All = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/credit_card_verification.rb#20
Braintree::CreditCardVerification::Status::Failed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card_verification.rb#21
Braintree::CreditCardVerification::Status::GatewayRejected = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card_verification.rb#22
Braintree::CreditCardVerification::Status::ProcessorDeclined = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card_verification.rb#23
Braintree::CreditCardVerification::Status::Verified = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/credit_card_verification_gateway.rb#2
class Braintree::CreditCardVerificationGateway
  # @return [CreditCardVerificationGateway] a new instance of CreditCardVerificationGateway
  #
  # source://braintree//lib/braintree/credit_card_verification_gateway.rb#3
  def initialize(gateway); end

  # source://braintree//lib/braintree/credit_card_verification_gateway.rb#40
  def _fetch_verifications(search, ids); end

  # source://braintree//lib/braintree/credit_card_verification_gateway.rb#30
  def _handle_verification_create_response(response); end

  # source://braintree//lib/braintree/credit_card_verification_gateway.rb#25
  def create(params); end

  # source://braintree//lib/braintree/credit_card_verification_gateway.rb#9
  def find(id); end

  # source://braintree//lib/braintree/credit_card_verification_gateway.rb#17
  def search(&block); end

  class << self
    # source://braintree//lib/braintree/credit_card_verification_gateway.rb#47
    def _create_signature; end
  end
end

# source://braintree//lib/braintree/credit_card_verification_search.rb#2
class Braintree::CreditCardVerificationSearch < ::Braintree::AdvancedSearch
  # source://braintree//lib/braintree/advanced_search.rb#141
  def billing_address_details_postal_code(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def created_at(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def credit_card_card_type; end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def credit_card_cardholder_name(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def credit_card_expiration_date(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def credit_card_number(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def customer_email(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def customer_id(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def id(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def ids; end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def payment_method_token(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def status; end
end

# source://braintree//lib/braintree/customer.rb#2
class Braintree::Customer
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  include ::Braintree::Util::IdEquality
  extend ::Braintree::BaseModule::Methods

  # @return [Customer] a new instance of Customer
  #
  # source://braintree//lib/braintree/customer.rb#82
  def initialize(gateway, attributes); end

  # Returns the value of attribute addresses.
  #
  # source://braintree//lib/braintree/customer.rb#6
  def addresses; end

  # Returns the value of attribute apple_pay_cards.
  #
  # source://braintree//lib/braintree/customer.rb#7
  def apple_pay_cards; end

  # Returns the value of attribute company.
  #
  # source://braintree//lib/braintree/customer.rb#8
  def company; end

  # Returns the value of attribute created_at.
  #
  # source://braintree//lib/braintree/customer.rb#9
  def created_at; end

  # source://braintree//lib/braintree/customer.rb#99
  def credit(transaction_attributes); end

  # source://braintree//lib/braintree/customer.rb#103
  def credit!(transaction_attributes); end

  # Returns the value of attribute credit_cards.
  #
  # source://braintree//lib/braintree/customer.rb#10
  def credit_cards; end

  # Returns the value of attribute custom_fields.
  #
  # source://braintree//lib/braintree/customer.rb#11
  def custom_fields; end

  # source://braintree//lib/braintree/customer.rb#107
  def default_payment_method; end

  # source://braintree//lib/braintree/customer.rb#111
  def delete; end

  # Returns the value of attribute email.
  #
  # source://braintree//lib/braintree/customer.rb#12
  def email; end

  # Returns the value of attribute fax.
  #
  # source://braintree//lib/braintree/customer.rb#13
  def fax; end

  # Returns the value of attribute first_name.
  #
  # source://braintree//lib/braintree/customer.rb#14
  def first_name; end

  # Returns the value of attribute google_pay_cards.
  #
  # source://braintree//lib/braintree/customer.rb#15
  def google_pay_cards; end

  # Returns the value of attribute graphql_id.
  #
  # source://braintree//lib/braintree/customer.rb#16
  def graphql_id; end

  # Returns the value of attribute id.
  #
  # source://braintree//lib/braintree/customer.rb#17
  def id; end

  # source://braintree//lib/braintree/customer.rb#127
  def inspect; end

  # Returns the value of attribute last_name.
  #
  # source://braintree//lib/braintree/customer.rb#18
  def last_name; end

  # source://braintree//lib/braintree/customer.rb#115
  def payment_methods; end

  # Returns the value of attribute paypal_accounts.
  #
  # source://braintree//lib/braintree/customer.rb#19
  def paypal_accounts; end

  # Returns the value of attribute phone.
  #
  # source://braintree//lib/braintree/customer.rb#20
  def phone; end

  # Returns the value of attribute samsung_pay_cards.
  #
  # source://braintree//lib/braintree/customer.rb#21
  def samsung_pay_cards; end

  # Returns the value of attribute sepa_direct_debit_accounts.
  #
  # source://braintree//lib/braintree/customer.rb#22
  def sepa_direct_debit_accounts; end

  # Returns the value of attribute tax_identifiers.
  #
  # source://braintree//lib/braintree/customer.rb#23
  def tax_identifiers; end

  # source://braintree//lib/braintree/customer.rb#137
  def transactions(options = T.unsafe(nil)); end

  # Returns the value of attribute updated_at.
  #
  # source://braintree//lib/braintree/customer.rb#24
  def updated_at; end

  # Returns the value of attribute us_bank_accounts.
  #
  # source://braintree//lib/braintree/customer.rb#25
  def us_bank_accounts; end

  # Returns the value of attribute venmo_accounts.
  #
  # source://braintree//lib/braintree/customer.rb#26
  def venmo_accounts; end

  # Returns the value of attribute visa_checkout_cards.
  #
  # source://braintree//lib/braintree/customer.rb#27
  def visa_checkout_cards; end

  # Returns the value of attribute website.
  #
  # source://braintree//lib/braintree/customer.rb#28
  def website; end

  class << self
    # source://braintree//lib/braintree/customer.rb#149
    def _attributes; end

    # source://braintree//lib/braintree/customer.rb#145
    def _new(*args); end

    # source://braintree//lib/braintree/customer.rb#156
    def _now_timestamp; end

    # source://braintree//lib/braintree/customer.rb#30
    def all; end

    # source://braintree//lib/braintree/customer.rb#34
    def create(*args); end

    # source://braintree//lib/braintree/customer.rb#38
    def create!(*args); end

    # source://braintree//lib/braintree/customer.rb#42
    def credit(customer_id, transaction_attributes); end

    # source://braintree//lib/braintree/customer.rb#46
    def credit!(customer_id, transaction_attributes); end

    # source://braintree//lib/braintree/customer.rb#50
    def delete(*args); end

    # source://braintree//lib/braintree/customer.rb#54
    def find(*args); end

    # source://braintree//lib/braintree/customer.rb#58
    def sale(customer_id, transaction_attributes); end

    # source://braintree//lib/braintree/customer.rb#62
    def sale!(customer_id, transaction_attributes); end

    # source://braintree//lib/braintree/customer.rb#66
    def search(&block); end

    # source://braintree//lib/braintree/customer.rb#70
    def transactions(*args); end

    # source://braintree//lib/braintree/customer.rb#74
    def update(*args); end

    # source://braintree//lib/braintree/customer.rb#78
    def update!(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/customer_gateway.rb#2
class Braintree::CustomerGateway
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [CustomerGateway] a new instance of CustomerGateway
  #
  # source://braintree//lib/braintree/customer_gateway.rb#5
  def initialize(gateway); end

  # source://braintree//lib/braintree/customer_gateway.rb#89
  def _do_create(path, params = T.unsafe(nil)); end

  # source://braintree//lib/braintree/customer_gateway.rb#100
  def _do_update(http_verb, path, params); end

  # source://braintree//lib/braintree/customer_gateway.rb#111
  def _fetch_customers(search, ids); end

  # source://braintree//lib/braintree/customer_gateway.rb#118
  def _fetch_transactions(customer_id, ids); end

  # source://braintree//lib/braintree/customer_gateway.rb#11
  def all; end

  # source://braintree//lib/braintree/customer_gateway.rb#16
  def create(attributes = T.unsafe(nil)); end

  # source://braintree//lib/braintree/customer_gateway.rb#21
  def create!(*args); end

  # source://braintree//lib/braintree/customer_gateway.rb#25
  def delete(customer_id); end

  # source://braintree//lib/braintree/customer_gateway.rb#30
  def find(customer_id, options = T.unsafe(nil)); end

  # source://braintree//lib/braintree/customer_gateway.rb#41
  def search(&block); end

  # source://braintree//lib/braintree/customer_gateway.rb#49
  def transactions(customer_id, options = T.unsafe(nil)); end

  # source://braintree//lib/braintree/customer_gateway.rb#54
  def update(customer_id, attributes); end

  # source://braintree//lib/braintree/customer_gateway.rb#59
  def update!(*args); end

  class << self
    # source://braintree//lib/braintree/customer_gateway.rb#63
    def _create_signature; end

    # source://braintree//lib/braintree/customer_gateway.rb#126
    def _update_signature; end
  end
end

# source://braintree//lib/braintree/customer_search.rb#2
class Braintree::CustomerSearch < ::Braintree::AdvancedSearch
  # source://braintree//lib/braintree/advanced_search.rb#141
  def address_country_name(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def address_extended_address(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def address_first_name(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def address_last_name(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def address_locality(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def address_postal_code(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def address_region(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def address_street_address(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def cardholder_name(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def company(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def created_at(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def credit_card_expiration_date(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def credit_card_number(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def email(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def fax(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def first_name(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def id(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def ids; end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def last_name(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def payment_method_token(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def payment_method_token_with_duplicates(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def paypal_account_email(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def phone(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def website(*args); end
end

# source://braintree//lib/braintree/descriptor.rb#2
class Braintree::Descriptor
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [Descriptor] a new instance of Descriptor
  #
  # source://braintree//lib/braintree/descriptor.rb#9
  def initialize(attributes); end

  # Returns the value of attribute name.
  #
  # source://braintree//lib/braintree/descriptor.rb#5
  def name; end

  # Returns the value of attribute phone.
  #
  # source://braintree//lib/braintree/descriptor.rb#6
  def phone; end

  # Returns the value of attribute url.
  #
  # source://braintree//lib/braintree/descriptor.rb#7
  def url; end
end

# source://braintree//lib/braintree/digest.rb#2
module Braintree::Digest
  class << self
    # source://braintree//lib/braintree/digest.rb#21
    def _hmac_sha1(key, message); end

    # source://braintree//lib/braintree/digest.rb#3
    def hexdigest(private_key, string); end

    # source://braintree//lib/braintree/digest.rb#7
    def secure_compare(left, right); end
  end
end

# source://braintree//lib/braintree/disbursement.rb#2
class Braintree::Disbursement
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [Disbursement] a new instance of Disbursement
  #
  # source://braintree//lib/braintree/disbursement.rb#23
  def initialize(gateway, attributes); end

  # Returns the value of attribute amount.
  #
  # source://braintree//lib/braintree/disbursement.rb#10
  def amount; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/disbursement.rb#48
  def credit?; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/disbursement.rb#44
  def debit?; end

  # Returns the value of attribute disbursement_date.
  #
  # source://braintree//lib/braintree/disbursement.rb#11
  def disbursement_date; end

  # Returns the value of attribute disbursement_type.
  #
  # source://braintree//lib/braintree/disbursement.rb#12
  def disbursement_type; end

  # Returns the value of attribute exception_message.
  #
  # source://braintree//lib/braintree/disbursement.rb#13
  def exception_message; end

  # Returns the value of attribute follow_up_action.
  #
  # source://braintree//lib/braintree/disbursement.rb#14
  def follow_up_action; end

  # Returns the value of attribute id.
  #
  # source://braintree//lib/braintree/disbursement.rb#15
  def id; end

  # source://braintree//lib/braintree/disbursement.rb#37
  def inspect; end

  # Returns the value of attribute merchant_account.
  #
  # source://braintree//lib/braintree/disbursement.rb#16
  def merchant_account; end

  # Returns the value of attribute retry.
  #
  # source://braintree//lib/braintree/disbursement.rb#17
  def retry; end

  # Returns the value of attribute success.
  #
  # source://braintree//lib/braintree/disbursement.rb#18
  def success; end

  # Returns the value of attribute success.
  #
  # source://braintree//lib/braintree/disbursement.rb#18
  def success?; end

  # Returns the value of attribute transaction_ids.
  #
  # source://braintree//lib/braintree/disbursement.rb#19
  def transaction_ids; end

  # source://braintree//lib/braintree/disbursement.rb#31
  def transactions; end

  class << self
    # source://braintree//lib/braintree/disbursement.rb#59
    def _inspect_attributes; end

    # source://braintree//lib/braintree/disbursement.rb#54
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/disbursement.rb#5
module Braintree::Disbursement::Types; end

# source://braintree//lib/braintree/disbursement.rb#6
Braintree::Disbursement::Types::Credit = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/disbursement.rb#7
Braintree::Disbursement::Types::Debit = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/discount.rb#2
class Braintree::Discount < ::Braintree::Modification
  class << self
    # source://braintree//lib/braintree/discount.rb#4
    def all; end
  end
end

# source://braintree//lib/braintree/discount_gateway.rb#2
class Braintree::DiscountGateway
  # @return [DiscountGateway] a new instance of DiscountGateway
  #
  # source://braintree//lib/braintree/discount_gateway.rb#3
  def initialize(gateway); end

  # source://braintree//lib/braintree/discount_gateway.rb#9
  def all; end
end

# source://braintree//lib/braintree/dispute.rb#2
class Braintree::Dispute
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  include ::Braintree::Util::IdEquality
  extend ::Braintree::BaseModule::Methods

  # @return [Dispute] a new instance of Dispute
  #
  # source://braintree//lib/braintree/dispute.rb#134
  def initialize(attributes); end

  # Returns the value of attribute amount.
  #
  # source://braintree//lib/braintree/dispute.rb#6
  def amount; end

  # Returns the value of attribute amount_disputed.
  #
  # source://braintree//lib/braintree/dispute.rb#7
  def amount_disputed; end

  # Returns the value of attribute amount_won.
  #
  # source://braintree//lib/braintree/dispute.rb#8
  def amount_won; end

  # Returns the value of attribute case_number.
  #
  # source://braintree//lib/braintree/dispute.rb#9
  def case_number; end

  # NEXT_MAJOR_VERSION Remove this attribute
  # DEPRECATED The chargeback_protection_level attribute is deprecated in favor of protection_level
  #
  # source://braintree//lib/braintree/dispute.rb#12
  def chargeback_protection_level; end

  # Returns the value of attribute created_at.
  #
  # source://braintree//lib/braintree/dispute.rb#13
  def created_at; end

  # Returns the value of attribute currency_iso_code.
  #
  # source://braintree//lib/braintree/dispute.rb#14
  def currency_iso_code; end

  # Returns the value of attribute date_opened.
  #
  # source://braintree//lib/braintree/dispute.rb#15
  def date_opened; end

  # Returns the value of attribute date_won.
  #
  # source://braintree//lib/braintree/dispute.rb#16
  def date_won; end

  # Returns the value of attribute evidence.
  #
  # source://braintree//lib/braintree/dispute.rb#17
  def evidence; end

  # Returns the value of attribute graphql_id.
  #
  # source://braintree//lib/braintree/dispute.rb#18
  def graphql_id; end

  # Returns the value of attribute id.
  #
  # source://braintree//lib/braintree/dispute.rb#19
  def id; end

  # Returns the value of attribute kind.
  #
  # source://braintree//lib/braintree/dispute.rb#20
  def kind; end

  # Returns the value of attribute merchant_account_id.
  #
  # source://braintree//lib/braintree/dispute.rb#21
  def merchant_account_id; end

  # Returns the value of attribute original_dispute_id.
  #
  # source://braintree//lib/braintree/dispute.rb#22
  def original_dispute_id; end

  # Returns the value of attribute paypal_messages.
  #
  # source://braintree//lib/braintree/dispute.rb#23
  def paypal_messages; end

  # Returns the value of attribute pre_dispute_program.
  #
  # source://braintree//lib/braintree/dispute.rb#24
  def pre_dispute_program; end

  # Returns the value of attribute processor_comments.
  #
  # source://braintree//lib/braintree/dispute.rb#25
  def processor_comments; end

  # Returns the value of attribute protection_level.
  #
  # source://braintree//lib/braintree/dispute.rb#26
  def protection_level; end

  # Returns the value of attribute reason.
  #
  # source://braintree//lib/braintree/dispute.rb#27
  def reason; end

  # Returns the value of attribute reason_code.
  #
  # source://braintree//lib/braintree/dispute.rb#28
  def reason_code; end

  # Returns the value of attribute reason_description.
  #
  # source://braintree//lib/braintree/dispute.rb#29
  def reason_description; end

  # Returns the value of attribute received_date.
  #
  # source://braintree//lib/braintree/dispute.rb#30
  def received_date; end

  # Returns the value of attribute reference_number.
  #
  # source://braintree//lib/braintree/dispute.rb#31
  def reference_number; end

  # Returns the value of attribute reply_by_date.
  #
  # source://braintree//lib/braintree/dispute.rb#32
  def reply_by_date; end

  # Returns the value of attribute status.
  #
  # source://braintree//lib/braintree/dispute.rb#33
  def status; end

  # Returns the value of attribute status_history.
  #
  # source://braintree//lib/braintree/dispute.rb#34
  def status_history; end

  # Returns the value of attribute transaction.
  #
  # source://braintree//lib/braintree/dispute.rb#35
  def transaction; end

  # Returns the value of attribute transaction_details.
  #
  # source://braintree//lib/braintree/dispute.rb#36
  def transaction_details; end

  # Returns the value of attribute updated_at.
  #
  # source://braintree//lib/braintree/dispute.rb#37
  def updated_at; end

  class << self
    # source://braintree//lib/braintree/dispute.rb#101
    def _new(*args); end

    # source://braintree//lib/braintree/dispute.rb#106
    def accept(*args); end

    # source://braintree//lib/braintree/dispute.rb#110
    def add_file_evidence(*args); end

    # source://braintree//lib/braintree/dispute.rb#114
    def add_text_evidence(*args); end

    # source://braintree//lib/braintree/dispute.rb#118
    def finalize(*args); end

    # source://braintree//lib/braintree/dispute.rb#122
    def find(*args); end

    # source://braintree//lib/braintree/dispute.rb#126
    def remove_evidence(*args); end

    # source://braintree//lib/braintree/dispute.rb#130
    def search(&block); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/dispute.rb#76
module Braintree::Dispute::ChargebackProtectionLevel; end

# source://braintree//lib/braintree/dispute.rb#81
Braintree::Dispute::ChargebackProtectionLevel::All = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/dispute.rb#77
Braintree::Dispute::ChargebackProtectionLevel::Effortless = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#79
Braintree::Dispute::ChargebackProtectionLevel::NotProtected = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#78
Braintree::Dispute::ChargebackProtectionLevel::Standard = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute/evidence.rb#3
class Braintree::Dispute::Evidence
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [Evidence] a new instance of Evidence
  #
  # source://braintree//lib/braintree/dispute/evidence.rb#15
  def initialize(attributes); end

  # Returns the value of attribute category.
  #
  # source://braintree//lib/braintree/dispute/evidence.rb#6
  def category; end

  # Returns the value of attribute comment.
  #
  # source://braintree//lib/braintree/dispute/evidence.rb#6
  def comment; end

  # Returns the value of attribute created_at.
  #
  # source://braintree//lib/braintree/dispute/evidence.rb#6
  def created_at; end

  # Returns the value of attribute id.
  #
  # source://braintree//lib/braintree/dispute/evidence.rb#6
  def id; end

  # Returns the value of attribute sent_to_processor_at.
  #
  # source://braintree//lib/braintree/dispute/evidence.rb#6
  def sent_to_processor_at; end

  # Returns the value of attribute sequence_number.
  #
  # source://braintree//lib/braintree/dispute/evidence.rb#6
  def sequence_number; end

  # Returns the value of attribute tag.
  #
  # source://braintree//lib/braintree/dispute/evidence.rb#6
  def tag; end

  # Returns the value of attribute url.
  #
  # source://braintree//lib/braintree/dispute/evidence.rb#6
  def url; end
end

# source://braintree//lib/braintree/dispute.rb#68
module Braintree::Dispute::Kind; end

# source://braintree//lib/braintree/dispute.rb#73
Braintree::Dispute::Kind::All = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/dispute.rb#69
Braintree::Dispute::Kind::Chargeback = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#70
Braintree::Dispute::Kind::PreArbitration = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#71
Braintree::Dispute::Kind::Retrieval = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute/paypal_message.rb#3
class Braintree::Dispute::PayPalMessage
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [PayPalMessage] a new instance of PayPalMessage
  #
  # source://braintree//lib/braintree/dispute/paypal_message.rb#10
  def initialize(attributes); end

  # Returns the value of attribute message.
  #
  # source://braintree//lib/braintree/dispute/paypal_message.rb#6
  def message; end

  # Returns the value of attribute sender.
  #
  # source://braintree//lib/braintree/dispute/paypal_message.rb#6
  def sender; end

  # Returns the value of attribute sent_at.
  #
  # source://braintree//lib/braintree/dispute/paypal_message.rb#6
  def sent_at; end
end

# source://braintree//lib/braintree/dispute.rb#92
module Braintree::Dispute::PreDisputeProgram; end

# source://braintree//lib/braintree/dispute.rb#96
Braintree::Dispute::PreDisputeProgram::All = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/dispute.rb#93
Braintree::Dispute::PreDisputeProgram::None = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#94
Braintree::Dispute::PreDisputeProgram::VisaRdr = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#84
module Braintree::Dispute::ProtectionLevel; end

# source://braintree//lib/braintree/dispute.rb#89
Braintree::Dispute::ProtectionLevel::All = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/dispute.rb#85
Braintree::Dispute::ProtectionLevel::EffortlessCBP = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#87
Braintree::Dispute::ProtectionLevel::NoProtection = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#86
Braintree::Dispute::ProtectionLevel::StandardCBP = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#52
module Braintree::Dispute::Reason; end

# source://braintree//lib/braintree/dispute.rb#65
Braintree::Dispute::Reason::All = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/dispute.rb#53
Braintree::Dispute::Reason::CancelledRecurringTransaction = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#54
Braintree::Dispute::Reason::CreditNotProcessed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#55
Braintree::Dispute::Reason::Duplicate = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#56
Braintree::Dispute::Reason::Fraud = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#57
Braintree::Dispute::Reason::General = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#58
Braintree::Dispute::Reason::InvalidAccount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#59
Braintree::Dispute::Reason::NotRecognized = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#60
Braintree::Dispute::Reason::ProductNotReceived = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#61
Braintree::Dispute::Reason::ProductUnsatisfactory = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#63
Braintree::Dispute::Reason::Retrieval = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#62
Braintree::Dispute::Reason::TransactionAmountDiffers = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#39
module Braintree::Dispute::Status; end

# source://braintree//lib/braintree/dispute.rb#40
Braintree::Dispute::Status::Accepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#49
Braintree::Dispute::Status::All = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/dispute.rb#41
Braintree::Dispute::Status::AutoAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#42
Braintree::Dispute::Status::Disputed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#43
Braintree::Dispute::Status::Expired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#45
Braintree::Dispute::Status::Lost = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#44
Braintree::Dispute::Status::Open = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#46
Braintree::Dispute::Status::UnderReview = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute.rb#47
Braintree::Dispute::Status::Won = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/dispute/status_history.rb#3
class Braintree::Dispute::StatusHistory
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [StatusHistory] a new instance of StatusHistory
  #
  # source://braintree//lib/braintree/dispute/status_history.rb#11
  def initialize(attributes); end

  # Returns the value of attribute disbursement_date.
  #
  # source://braintree//lib/braintree/dispute/status_history.rb#6
  def disbursement_date; end

  # Returns the value of attribute effective_date.
  #
  # source://braintree//lib/braintree/dispute/status_history.rb#7
  def effective_date; end

  # Returns the value of attribute status.
  #
  # source://braintree//lib/braintree/dispute/status_history.rb#8
  def status; end

  # Returns the value of attribute timestamp.
  #
  # source://braintree//lib/braintree/dispute/status_history.rb#9
  def timestamp; end
end

# source://braintree//lib/braintree/dispute/transaction.rb#3
class Braintree::Dispute::Transaction
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [Transaction] a new instance of Transaction
  #
  # source://braintree//lib/braintree/dispute/transaction.rb#14
  def initialize(attributes); end

  # Returns the value of attribute amount.
  #
  # source://braintree//lib/braintree/dispute/transaction.rb#6
  def amount; end

  # Returns the value of attribute created_at.
  #
  # source://braintree//lib/braintree/dispute/transaction.rb#7
  def created_at; end

  # Returns the value of attribute id.
  #
  # source://braintree//lib/braintree/dispute/transaction.rb#8
  def id; end

  # Returns the value of attribute installment_count.
  #
  # source://braintree//lib/braintree/dispute/transaction.rb#9
  def installment_count; end

  # Returns the value of attribute order_id.
  #
  # source://braintree//lib/braintree/dispute/transaction.rb#10
  def order_id; end

  # Returns the value of attribute payment_instrument_subtype.
  #
  # source://braintree//lib/braintree/dispute/transaction.rb#12
  def payment_instrument_subtype; end

  # Returns the value of attribute purchase_order_number.
  #
  # source://braintree//lib/braintree/dispute/transaction.rb#11
  def purchase_order_number; end
end

# source://braintree//lib/braintree/dispute/transaction_details.rb#3
class Braintree::Dispute::TransactionDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [TransactionDetails] a new instance of TransactionDetails
  #
  # source://braintree//lib/braintree/dispute/transaction_details.rb#9
  def initialize(attributes); end

  # Returns the value of attribute amount.
  #
  # source://braintree//lib/braintree/dispute/transaction_details.rb#6
  def amount; end

  # Returns the value of attribute id.
  #
  # source://braintree//lib/braintree/dispute/transaction_details.rb#7
  def id; end
end

# source://braintree//lib/braintree/dispute_gateway.rb#2
class Braintree::DisputeGateway
  # @return [DisputeGateway] a new instance of DisputeGateway
  #
  # source://braintree//lib/braintree/dispute_gateway.rb#3
  def initialize(gateway); end

  # source://braintree//lib/braintree/dispute_gateway.rb#134
  def _fetch_disputes(search, page); end

  # source://braintree//lib/braintree/dispute_gateway.rb#9
  def accept(dispute_id); end

  # source://braintree//lib/braintree/dispute_gateway.rb#23
  def add_file_evidence(dispute_id, document_id_or_request); end

  # source://braintree//lib/braintree/dispute_gateway.rb#53
  def add_text_evidence(dispute_id, content_or_request); end

  # source://braintree//lib/braintree/dispute_gateway.rb#86
  def finalize(dispute_id); end

  # source://braintree//lib/braintree/dispute_gateway.rb#100
  def find(dispute_id); end

  # source://braintree//lib/braintree/dispute_gateway.rb#109
  def remove_evidence(dispute_id, evidence_id); end

  # source://braintree//lib/braintree/dispute_gateway.rb#126
  def search(&block); end
end

# source://braintree//lib/braintree/dispute_search.rb#2
class Braintree::DisputeSearch < ::Braintree::AdvancedSearch
  # source://braintree//lib/braintree/advanced_search.rb#141
  def amount_disputed(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def amount_won(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def case_number(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def chargeback_protection_level; end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def customer_id(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def disbursement_date(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def effective_date(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def id(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def kind; end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def merchant_account_id; end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def pre_dispute_program; end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def protection_level; end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def reason; end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def reason_code; end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def received_date(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def reference_number(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def reply_by_date(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def status; end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def transaction_id(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def transaction_source; end
end

# source://braintree//lib/braintree/document_upload.rb#2
class Braintree::DocumentUpload
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  include ::Braintree::Util::IdEquality
  extend ::Braintree::BaseModule::Methods

  # @return [DocumentUpload] a new instance of DocumentUpload
  #
  # source://braintree//lib/braintree/document_upload.rb#26
  def initialize(attributes); end

  # Returns the value of attribute content_type.
  #
  # source://braintree//lib/braintree/document_upload.rb#12
  def content_type; end

  # Returns the value of attribute id.
  #
  # source://braintree//lib/braintree/document_upload.rb#13
  def id; end

  # Returns the value of attribute kind.
  #
  # source://braintree//lib/braintree/document_upload.rb#14
  def kind; end

  # Returns the value of attribute name.
  #
  # source://braintree//lib/braintree/document_upload.rb#15
  def name; end

  # Returns the value of attribute size.
  #
  # source://braintree//lib/braintree/document_upload.rb#16
  def size; end

  class << self
    # source://braintree//lib/braintree/document_upload.rb#32
    def _new(*args); end

    # source://braintree//lib/braintree/document_upload.rb#18
    def create(*args); end

    # source://braintree//lib/braintree/document_upload.rb#22
    def create!(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/document_upload.rb#6
module Braintree::DocumentUpload::Kind; end

# source://braintree//lib/braintree/document_upload.rb#8
Braintree::DocumentUpload::Kind::EvidenceDocument = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/document_upload.rb#7
Braintree::DocumentUpload::Kind::IdentityDocument = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/document_upload.rb#9
Braintree::DocumentUpload::Kind::PayoutInvoiceDocument = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/document_upload_gateway.rb#2
class Braintree::DocumentUploadGateway
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [DocumentUploadGateway] a new instance of DocumentUploadGateway
  #
  # source://braintree//lib/braintree/document_upload_gateway.rb#5
  def initialize(gateway); end

  # source://braintree//lib/braintree/document_upload_gateway.rb#27
  def _do_create(path, params, file); end

  # source://braintree//lib/braintree/document_upload_gateway.rb#11
  def create(attributes); end

  # source://braintree//lib/braintree/document_upload_gateway.rb#16
  def create!(*args); end

  class << self
    # source://braintree//lib/braintree/document_upload_gateway.rb#20
    def _create_signature; end
  end
end

# source://braintree//lib/braintree/enriched_customer_data.rb#2
class Braintree::EnrichedCustomerData
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [EnrichedCustomerData] a new instance of EnrichedCustomerData
  #
  # source://braintree//lib/braintree/enriched_customer_data.rb#8
  def initialize(attributes); end

  # Returns the value of attribute fields_updated.
  #
  # source://braintree//lib/braintree/enriched_customer_data.rb#5
  def fields_updated; end

  # Returns the value of attribute profile_data.
  #
  # source://braintree//lib/braintree/enriched_customer_data.rb#6
  def profile_data; end

  class << self
    # source://braintree//lib/braintree/enriched_customer_data.rb#17
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# The ErrorCodes module provides constants for validation errors.
# The constants should be used to check for a specific validation error in a ValidationErrorCollection.
# The error messages returned from the server may change, but the codes will remain the same.
#
# source://braintree//lib/braintree/error_codes.rb#5
module Braintree::ErrorCodes; end

# source://braintree//lib/braintree/error_codes.rb#6
module Braintree::ErrorCodes::Address; end

# source://braintree//lib/braintree/error_codes.rb#7
Braintree::ErrorCodes::Address::CannotBeBlank = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#8
Braintree::ErrorCodes::Address::CompanyIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#9
Braintree::ErrorCodes::Address::CompanyIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#10
Braintree::ErrorCodes::Address::CountryCodeAlpha2IsNotAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#11
Braintree::ErrorCodes::Address::CountryCodeAlpha3IsNotAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#12
Braintree::ErrorCodes::Address::CountryCodeNumericIsNotAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#13
Braintree::ErrorCodes::Address::CountryNameIsNotAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#14
Braintree::ErrorCodes::Address::ExtendedAddressIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#15
Braintree::ErrorCodes::Address::ExtendedAddressIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#16
Braintree::ErrorCodes::Address::FirstNameIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#17
Braintree::ErrorCodes::Address::FirstNameIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#18
Braintree::ErrorCodes::Address::InconsistentCountry = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#19
Braintree::ErrorCodes::Address::IsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#20
Braintree::ErrorCodes::Address::LastNameIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#21
Braintree::ErrorCodes::Address::LastNameIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#22
Braintree::ErrorCodes::Address::LocalityIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#23
Braintree::ErrorCodes::Address::LocalityIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#24
Braintree::ErrorCodes::Address::PostalCodeInvalidCharacters = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#25
Braintree::ErrorCodes::Address::PostalCodeIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#26
Braintree::ErrorCodes::Address::PostalCodeIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#27
Braintree::ErrorCodes::Address::PostalCodeIsRequiredForCardBrandAndProcessor = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#28
Braintree::ErrorCodes::Address::PostalCodeIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#29
Braintree::ErrorCodes::Address::RegionIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#30
Braintree::ErrorCodes::Address::RegionIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#31
Braintree::ErrorCodes::Address::StateIsInvalidForSellerProtection = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#32
Braintree::ErrorCodes::Address::StreetAddressIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#33
Braintree::ErrorCodes::Address::StreetAddressIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#34
Braintree::ErrorCodes::Address::StreetAddressIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#35
Braintree::ErrorCodes::Address::TooManyAddressesPerCustomer = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#38
module Braintree::ErrorCodes::ApplePay; end

# source://braintree//lib/braintree/error_codes.rb#39
Braintree::ErrorCodes::ApplePay::ApplePayCardsAreNotAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#40
Braintree::ErrorCodes::ApplePay::CannotUpdateApplePayCardUsingPaymentMethodNonce = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#41
Braintree::ErrorCodes::ApplePay::CertificateInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#42
Braintree::ErrorCodes::ApplePay::CertificateMismatch = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#43
Braintree::ErrorCodes::ApplePay::CryptogramIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#44
Braintree::ErrorCodes::ApplePay::CustomerIdIsRequiredForVaulting = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#45
Braintree::ErrorCodes::ApplePay::DecryptionFailed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#46
Braintree::ErrorCodes::ApplePay::Disabled = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#47
Braintree::ErrorCodes::ApplePay::ExpirationMonthIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#48
Braintree::ErrorCodes::ApplePay::ExpirationYearIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#49
Braintree::ErrorCodes::ApplePay::InvalidToken = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#50
Braintree::ErrorCodes::ApplePay::KeyMismatchStoringCertificate = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#51
Braintree::ErrorCodes::ApplePay::MerchantKeysAlreadyConfigured = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#52
Braintree::ErrorCodes::ApplePay::MerchantKeysNotConfigured = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#53
Braintree::ErrorCodes::ApplePay::MerchantNotConfigured = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#54
Braintree::ErrorCodes::ApplePay::NumberIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#55
Braintree::ErrorCodes::ApplePay::PaymentMethodNonceCardTypeIsNotAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#56
Braintree::ErrorCodes::ApplePay::PaymentMethodNonceConsumed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#57
Braintree::ErrorCodes::ApplePay::PaymentMethodNonceLocked = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#58
Braintree::ErrorCodes::ApplePay::PaymentMethodNonceUnknown = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#59
Braintree::ErrorCodes::ApplePay::PrivateKeyMismatch = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#60
Braintree::ErrorCodes::ApplePay::TokenIsInUse = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#737
module Braintree::ErrorCodes::AuthorizationFingerprint; end

# source://braintree//lib/braintree/error_codes.rb#738
Braintree::ErrorCodes::AuthorizationFingerprint::InvalidCreatedAt = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#739
Braintree::ErrorCodes::AuthorizationFingerprint::InvalidFormat = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#740
Braintree::ErrorCodes::AuthorizationFingerprint::InvalidPublicKey = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#741
Braintree::ErrorCodes::AuthorizationFingerprint::InvalidSignature = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#742
Braintree::ErrorCodes::AuthorizationFingerprint::MissingFingerprint = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#743
Braintree::ErrorCodes::AuthorizationFingerprint::OptionsNotAllowedWithoutCustomer = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#744
Braintree::ErrorCodes::AuthorizationFingerprint::SignatureRevoked = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#708
module Braintree::ErrorCodes::ClientToken; end

# source://braintree//lib/braintree/error_codes.rb#709
Braintree::ErrorCodes::ClientToken::CustomerDoesNotExist = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#710
Braintree::ErrorCodes::ClientToken::FailOnDuplicatePaymentMethodRequiresCustomerId = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#711
Braintree::ErrorCodes::ClientToken::InvalidDomainFormat = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#712
Braintree::ErrorCodes::ClientToken::MakeDefaultRequiresCustomerId = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#713
Braintree::ErrorCodes::ClientToken::MerchantAccountDoesNotExist = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#714
Braintree::ErrorCodes::ClientToken::ProxyMerchantDoesNotExist = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#715
Braintree::ErrorCodes::ClientToken::TooManyDomains = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#716
Braintree::ErrorCodes::ClientToken::UnsupportedVersion = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#717
Braintree::ErrorCodes::ClientToken::VerifyCardRequiresCustomerId = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#63
module Braintree::ErrorCodes::CreditCard; end

# source://braintree//lib/braintree/error_codes.rb#64
Braintree::ErrorCodes::CreditCard::BillingAddressConflict = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#65
Braintree::ErrorCodes::CreditCard::BillingAddressFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#66
Braintree::ErrorCodes::CreditCard::BillingAddressIdIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#67
Braintree::ErrorCodes::CreditCard::CannotUpdateCardUsingPaymentMethodNonce = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#68
Braintree::ErrorCodes::CreditCard::CardholderNameIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#69
Braintree::ErrorCodes::CreditCard::CreditCardTypeIsNotAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#70
Braintree::ErrorCodes::CreditCard::CreditCardTypeIsNotAcceptedBySubscriptionMerchantAccount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#71
Braintree::ErrorCodes::CreditCard::CurrencyCodeNotSupportedByMerchantAccount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#72
Braintree::ErrorCodes::CreditCard::CustomerIdIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#73
Braintree::ErrorCodes::CreditCard::CustomerIdIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#74
Braintree::ErrorCodes::CreditCard::CvvIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#75
Braintree::ErrorCodes::CreditCard::CvvIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#76
Braintree::ErrorCodes::CreditCard::CvvVerificationFailed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#77
Braintree::ErrorCodes::CreditCard::DuplicateCardExists = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#78
Braintree::ErrorCodes::CreditCard::ExpirationDateConflict = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#79
Braintree::ErrorCodes::CreditCard::ExpirationDateIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#80
Braintree::ErrorCodes::CreditCard::ExpirationDateIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#81
Braintree::ErrorCodes::CreditCard::ExpirationDateYearIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#82
Braintree::ErrorCodes::CreditCard::ExpirationMonthIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#83
Braintree::ErrorCodes::CreditCard::ExpirationYearIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#84
Braintree::ErrorCodes::CreditCard::InvalidParamsForCreditCardUpdate = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#85
Braintree::ErrorCodes::CreditCard::InvalidVenmoSDKPaymentMethodCode = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#86
Braintree::ErrorCodes::CreditCard::NetworkTokenizationAttributeCryptogramIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#87
Braintree::ErrorCodes::CreditCard::NumberIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#88
Braintree::ErrorCodes::CreditCard::NumberIsProhibited = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#89
Braintree::ErrorCodes::CreditCard::NumberIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#90
Braintree::ErrorCodes::CreditCard::NumberLengthIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#91
Braintree::ErrorCodes::CreditCard::NumberMustBeTestNumber = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#109
module Braintree::ErrorCodes::CreditCard::Options; end

# source://braintree//lib/braintree/error_codes.rb#110
Braintree::ErrorCodes::CreditCard::Options::UpdateExistingTokenIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#111
Braintree::ErrorCodes::CreditCard::Options::UpdateExistingTokenNotAllowed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#112
Braintree::ErrorCodes::CreditCard::Options::UseBillingForShippingDisabled = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#113
Braintree::ErrorCodes::CreditCard::Options::VerificationAmountCannotBeNegative = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#114
Braintree::ErrorCodes::CreditCard::Options::VerificationAmountFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#115
Braintree::ErrorCodes::CreditCard::Options::VerificationAmountIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#116
Braintree::ErrorCodes::CreditCard::Options::VerificationAmountNotSupportedByProcessor = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#117
Braintree::ErrorCodes::CreditCard::Options::VerificationMerchantAccountCannotBeSubMerchantAccount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#118
Braintree::ErrorCodes::CreditCard::Options::VerificationMerchantAccountIdIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#119
Braintree::ErrorCodes::CreditCard::Options::VerificationMerchantAccountIsForbidden = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#120
Braintree::ErrorCodes::CreditCard::Options::VerificationMerchantAccountIsSuspended = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#92
Braintree::ErrorCodes::CreditCard::PaymentMethodConflict = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#93
Braintree::ErrorCodes::CreditCard::PaymentMethodIsNotACreditCard = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#94
Braintree::ErrorCodes::CreditCard::PaymentMethodNonceCardTypeIsNotAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#95
Braintree::ErrorCodes::CreditCard::PaymentMethodNonceConsumed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#96
Braintree::ErrorCodes::CreditCard::PaymentMethodNonceLocked = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#97
Braintree::ErrorCodes::CreditCard::PaymentMethodNonceUnknown = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#98
Braintree::ErrorCodes::CreditCard::PostalCodeVerificationFailed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#99
Braintree::ErrorCodes::CreditCard::TokenFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#100
Braintree::ErrorCodes::CreditCard::TokenIsInUse = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#101
Braintree::ErrorCodes::CreditCard::TokenIsNotAllowed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#102
Braintree::ErrorCodes::CreditCard::TokenIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#103
Braintree::ErrorCodes::CreditCard::TokenIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#104
Braintree::ErrorCodes::CreditCard::VenmoSDKPaymentMethodCodeCardTypeIsNotAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#105
Braintree::ErrorCodes::CreditCard::VerificationAccountTypeIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#106
Braintree::ErrorCodes::CreditCard::VerificationAccountTypeNotSupported = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#107
Braintree::ErrorCodes::CreditCard::VerificationNotSupportedOnThisMerchantAccount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#124
module Braintree::ErrorCodes::Customer; end

# source://braintree//lib/braintree/error_codes.rb#125
Braintree::ErrorCodes::Customer::CompanyIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#126
Braintree::ErrorCodes::Customer::CustomFieldIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#127
Braintree::ErrorCodes::Customer::CustomFieldIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#128
Braintree::ErrorCodes::Customer::EmailFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#129
Braintree::ErrorCodes::Customer::EmailIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#130
Braintree::ErrorCodes::Customer::EmailIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#131
Braintree::ErrorCodes::Customer::FaxIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#132
Braintree::ErrorCodes::Customer::FirstNameIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#133
Braintree::ErrorCodes::Customer::IdIsInUse = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#134
Braintree::ErrorCodes::Customer::IdIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#135
Braintree::ErrorCodes::Customer::IdIsNotAllowed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#136
Braintree::ErrorCodes::Customer::IdIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#137
Braintree::ErrorCodes::Customer::IdIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#138
Braintree::ErrorCodes::Customer::LastNameIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#139
Braintree::ErrorCodes::Customer::PhoneIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#140
Braintree::ErrorCodes::Customer::VaultedPaymentInstrumentNonceBelongsToDifferentCustomer = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#141
Braintree::ErrorCodes::Customer::WebsiteFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#142
Braintree::ErrorCodes::Customer::WebsiteIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#145
module Braintree::ErrorCodes::Descriptor; end

# source://braintree//lib/braintree/error_codes.rb#146
Braintree::ErrorCodes::Descriptor::DynamicDescriptorsDisabled = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#147
Braintree::ErrorCodes::Descriptor::InternationalNameFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#148
Braintree::ErrorCodes::Descriptor::InternationalPhoneFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#149
Braintree::ErrorCodes::Descriptor::NameFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#150
Braintree::ErrorCodes::Descriptor::PhoneFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#151
Braintree::ErrorCodes::Descriptor::UrlFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#154
module Braintree::ErrorCodes::Dispute; end

# source://braintree//lib/braintree/error_codes.rb#155
Braintree::ErrorCodes::Dispute::CanOnlyAcceptOpenDispute = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#156
Braintree::ErrorCodes::Dispute::CanOnlyAddEvidenceDocumentToDispute = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#157
Braintree::ErrorCodes::Dispute::CanOnlyAddEvidenceToOpenDispute = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#158
Braintree::ErrorCodes::Dispute::CanOnlyCreateEvidenceWithValidCategory = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#159
Braintree::ErrorCodes::Dispute::CanOnlyFinalizeOpenDispute = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#160
Braintree::ErrorCodes::Dispute::CanOnlyRemoveEvidenceFromOpenDispute = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#161
Braintree::ErrorCodes::Dispute::DigitalGoodsMissingDownloadDate = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#162
Braintree::ErrorCodes::Dispute::DigitalGoodsMissingEvidence = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#163
Braintree::ErrorCodes::Dispute::EvidenceCategoryDocumentOnly = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#164
Braintree::ErrorCodes::Dispute::EvidenceCategoryDuplicate = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#165
Braintree::ErrorCodes::Dispute::EvidenceCategoryNotForReasonCode = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#166
Braintree::ErrorCodes::Dispute::EvidenceCategoryTextOnly = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#167
Braintree::ErrorCodes::Dispute::EvidenceContentARNTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#168
Braintree::ErrorCodes::Dispute::EvidenceContentDateInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#169
Braintree::ErrorCodes::Dispute::EvidenceContentEmailInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#170
Braintree::ErrorCodes::Dispute::EvidenceContentPhoneTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#171
Braintree::ErrorCodes::Dispute::EvidenceContentTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#172
Braintree::ErrorCodes::Dispute::NonDisputedPriorTransactionEvidenceMissingARN = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#173
Braintree::ErrorCodes::Dispute::NonDisputedPriorTransactionEvidenceMissingDate = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#174
Braintree::ErrorCodes::Dispute::RecurringTransactionEvidenceMissingARN = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#175
Braintree::ErrorCodes::Dispute::RecurringTransactionEvidenceMissingDate = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#176
Braintree::ErrorCodes::Dispute::ValidEvidenceRequiredToFinalize = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#179
module Braintree::ErrorCodes::DocumentUpload; end

# source://braintree//lib/braintree/error_codes.rb#180
Braintree::ErrorCodes::DocumentUpload::FileIsEmpty = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#181
Braintree::ErrorCodes::DocumentUpload::FileIsMalformedOrEncrypted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#182
Braintree::ErrorCodes::DocumentUpload::FileIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#183
Braintree::ErrorCodes::DocumentUpload::FileIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#184
Braintree::ErrorCodes::DocumentUpload::FileTypeIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#185
Braintree::ErrorCodes::DocumentUpload::KindIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#570
module Braintree::ErrorCodes::Merchant; end

# source://braintree//lib/braintree/error_codes.rb#571
Braintree::ErrorCodes::Merchant::CountryCannotBeBlank = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#572
Braintree::ErrorCodes::Merchant::CountryCodeAlpha2IsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#573
Braintree::ErrorCodes::Merchant::CountryCodeAlpha2IsNotAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#574
Braintree::ErrorCodes::Merchant::CountryCodeAlpha3IsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#575
Braintree::ErrorCodes::Merchant::CountryCodeAlpha3IsNotAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#576
Braintree::ErrorCodes::Merchant::CountryCodeNumericIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#577
Braintree::ErrorCodes::Merchant::CountryCodeNumericIsNotAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#578
Braintree::ErrorCodes::Merchant::CountryNameIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#579
Braintree::ErrorCodes::Merchant::CountryNameIsNotAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#580
Braintree::ErrorCodes::Merchant::CurrenciesAreInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#581
Braintree::ErrorCodes::Merchant::CurrencyIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#582
Braintree::ErrorCodes::Merchant::CurrencyIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#583
Braintree::ErrorCodes::Merchant::EmailFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#584
Braintree::ErrorCodes::Merchant::EmailIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#585
Braintree::ErrorCodes::Merchant::InconsistentCountry = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#586
Braintree::ErrorCodes::Merchant::MerchantAccountExistsForCurrency = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#587
Braintree::ErrorCodes::Merchant::MerchantAccountExistsForId = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#588
Braintree::ErrorCodes::Merchant::MerchantAccountNotAuthOnboarded = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#589
Braintree::ErrorCodes::Merchant::NoMerchantAccounts = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#590
Braintree::ErrorCodes::Merchant::PaymentMethodsAreInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#591
Braintree::ErrorCodes::Merchant::PaymentMethodsAreNotAllowed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#594
module Braintree::ErrorCodes::MerchantAccount; end

# source://braintree//lib/braintree/error_codes.rb#613
module Braintree::ErrorCodes::MerchantAccount::ApplicantDetails; end

# source://braintree//lib/braintree/error_codes.rb#614
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::AccountNumberIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#615
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::AccountNumberIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#640
module Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::Address; end

# source://braintree//lib/braintree/error_codes.rb#641
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::Address::LocalityIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#642
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::Address::PostalCodeIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#643
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::Address::PostalCodeIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#644
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::Address::RegionIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#645
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::Address::RegionIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#646
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::Address::StreetAddressIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#647
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::Address::StreetAddressIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#616
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::CompanyNameIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#617
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::CompanyNameIsRequiredWithTaxId = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#618
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::DateOfBirthIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#619
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::DateOfBirthIsRequired = T.let(T.unsafe(nil), String)

# Keep for backwards compatibility
#
# source://braintree//lib/braintree/error_codes.rb#620
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::Declined = T.let(T.unsafe(nil), String)

# Keep for backwards compatibility
#
# source://braintree//lib/braintree/error_codes.rb#621
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::DeclinedFailedKYC = T.let(T.unsafe(nil), String)

# Keep for backwards compatibility
#
# source://braintree//lib/braintree/error_codes.rb#622
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::DeclinedMasterCardMatch = T.let(T.unsafe(nil), String)

# Keep for backwards compatibility
#
# source://braintree//lib/braintree/error_codes.rb#623
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::DeclinedOFAC = T.let(T.unsafe(nil), String)

# Keep for backwards compatibility
#
# source://braintree//lib/braintree/error_codes.rb#624
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::DeclinedSsnInvalid = T.let(T.unsafe(nil), String)

# Keep for backwards compatibility
#
# source://braintree//lib/braintree/error_codes.rb#625
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::DeclinedSsnMatchesDeceased = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#626
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::EmailAddressIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#627
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::EmailAddressIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#628
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::FirstNameIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#629
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::FirstNameIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#630
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::LastNameIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#631
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::LastNameIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#632
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::PhoneIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#633
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::RoutingNumberIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#634
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::RoutingNumberIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#635
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::SsnIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#636
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::TaxIdIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#637
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::TaxIdIsRequiredWithCompanyName = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#638
Braintree::ErrorCodes::MerchantAccount::ApplicantDetails::TaxIdMustBeBlank = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#674
module Braintree::ErrorCodes::MerchantAccount::Business; end

# source://braintree//lib/braintree/error_codes.rb#681
module Braintree::ErrorCodes::MerchantAccount::Business::Address; end

# source://braintree//lib/braintree/error_codes.rb#682
Braintree::ErrorCodes::MerchantAccount::Business::Address::PostalCodeIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#683
Braintree::ErrorCodes::MerchantAccount::Business::Address::RegionIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#684
Braintree::ErrorCodes::MerchantAccount::Business::Address::StreetAddressIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#675
Braintree::ErrorCodes::MerchantAccount::Business::DbaNameIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#676
Braintree::ErrorCodes::MerchantAccount::Business::LegalNameIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#677
Braintree::ErrorCodes::MerchantAccount::Business::LegalNameIsRequiredWithTaxId = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#678
Braintree::ErrorCodes::MerchantAccount::Business::TaxIdIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#679
Braintree::ErrorCodes::MerchantAccount::Business::TaxIdIsRequiredWithLegalName = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#680
Braintree::ErrorCodes::MerchantAccount::Business::TaxIdMustBeBlank = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#595
Braintree::ErrorCodes::MerchantAccount::CannotBeUpdated = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#596
Braintree::ErrorCodes::MerchantAccount::Declined = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#597
Braintree::ErrorCodes::MerchantAccount::DeclinedFailedKYC = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#598
Braintree::ErrorCodes::MerchantAccount::DeclinedMasterCardMatch = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#599
Braintree::ErrorCodes::MerchantAccount::DeclinedOFAC = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#600
Braintree::ErrorCodes::MerchantAccount::DeclinedSsnInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#601
Braintree::ErrorCodes::MerchantAccount::DeclinedSsnMatchesDeceased = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#688
module Braintree::ErrorCodes::MerchantAccount::Funding; end

# source://braintree//lib/braintree/error_codes.rb#689
Braintree::ErrorCodes::MerchantAccount::Funding::AccountNumberIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#690
Braintree::ErrorCodes::MerchantAccount::Funding::AccountNumberIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#691
Braintree::ErrorCodes::MerchantAccount::Funding::DestinationIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#692
Braintree::ErrorCodes::MerchantAccount::Funding::DestinationIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#693
Braintree::ErrorCodes::MerchantAccount::Funding::EmailIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#694
Braintree::ErrorCodes::MerchantAccount::Funding::EmailIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#695
Braintree::ErrorCodes::MerchantAccount::Funding::MobilePhoneIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#696
Braintree::ErrorCodes::MerchantAccount::Funding::MobilePhoneIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#697
Braintree::ErrorCodes::MerchantAccount::Funding::RoutingNumberIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#698
Braintree::ErrorCodes::MerchantAccount::Funding::RoutingNumberIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#602
Braintree::ErrorCodes::MerchantAccount::IdCannotBeUpdated = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#603
Braintree::ErrorCodes::MerchantAccount::IdFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#604
Braintree::ErrorCodes::MerchantAccount::IdIsInUse = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#605
Braintree::ErrorCodes::MerchantAccount::IdIsNotAllowed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#606
Braintree::ErrorCodes::MerchantAccount::IdIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#651
module Braintree::ErrorCodes::MerchantAccount::Individual; end

# source://braintree//lib/braintree/error_codes.rb#663
module Braintree::ErrorCodes::MerchantAccount::Individual::Address; end

# source://braintree//lib/braintree/error_codes.rb#664
Braintree::ErrorCodes::MerchantAccount::Individual::Address::LocalityIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#665
Braintree::ErrorCodes::MerchantAccount::Individual::Address::PostalCodeIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#666
Braintree::ErrorCodes::MerchantAccount::Individual::Address::PostalCodeIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#667
Braintree::ErrorCodes::MerchantAccount::Individual::Address::RegionIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#668
Braintree::ErrorCodes::MerchantAccount::Individual::Address::RegionIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#669
Braintree::ErrorCodes::MerchantAccount::Individual::Address::StreetAddressIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#670
Braintree::ErrorCodes::MerchantAccount::Individual::Address::StreetAddressIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#652
Braintree::ErrorCodes::MerchantAccount::Individual::DateOfBirthIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#653
Braintree::ErrorCodes::MerchantAccount::Individual::DateOfBirthIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#654
Braintree::ErrorCodes::MerchantAccount::Individual::EmailIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#655
Braintree::ErrorCodes::MerchantAccount::Individual::EmailIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#656
Braintree::ErrorCodes::MerchantAccount::Individual::FirstNameIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#657
Braintree::ErrorCodes::MerchantAccount::Individual::FirstNameIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#658
Braintree::ErrorCodes::MerchantAccount::Individual::LastNameIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#659
Braintree::ErrorCodes::MerchantAccount::Individual::LastNameIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#660
Braintree::ErrorCodes::MerchantAccount::Individual::PhoneIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#661
Braintree::ErrorCodes::MerchantAccount::Individual::SsnIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#607
Braintree::ErrorCodes::MerchantAccount::MasterMerchantAccountIdCannotBeUpdated = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#608
Braintree::ErrorCodes::MerchantAccount::MasterMerchantAccountIdIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#609
Braintree::ErrorCodes::MerchantAccount::MasterMerchantAccountIdIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#610
Braintree::ErrorCodes::MerchantAccount::MasterMerchantAccountMustBeActive = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#611
Braintree::ErrorCodes::MerchantAccount::TosAcceptedIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#747
module Braintree::ErrorCodes::OAuth; end

# source://braintree//lib/braintree/error_codes.rb#749
Braintree::ErrorCodes::OAuth::InvalidCredentials = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#748
Braintree::ErrorCodes::OAuth::InvalidGrant = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#751
Braintree::ErrorCodes::OAuth::InvalidRequest = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#750
Braintree::ErrorCodes::OAuth::InvalidScope = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#752
Braintree::ErrorCodes::OAuth::UnsupportedGrantType = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#188
module Braintree::ErrorCodes::PayPalAccount; end

# source://braintree//lib/braintree/error_codes.rb#189
Braintree::ErrorCodes::PayPalAccount::AuthExpired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#190
Braintree::ErrorCodes::PayPalAccount::CannotHaveBothAccessTokenAndConsentCode = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#191
Braintree::ErrorCodes::PayPalAccount::CannotHaveFundingSourceWithoutAccessToken = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#192
Braintree::ErrorCodes::PayPalAccount::CannotUpdatePayPalAccountUsingPaymentMethodNonce = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#193
Braintree::ErrorCodes::PayPalAccount::CannotVaultOneTimeUsePayPalAccount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#194
Braintree::ErrorCodes::PayPalAccount::ConsentCodeOrAccessTokenIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#195
Braintree::ErrorCodes::PayPalAccount::CustomerIdIsRequiredForVaulting = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#196
Braintree::ErrorCodes::PayPalAccount::IncompletePayPalAccount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#197
Braintree::ErrorCodes::PayPalAccount::InvalidFundingSourceSelection = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#198
Braintree::ErrorCodes::PayPalAccount::InvalidParamsForPayPalAccountUpdate = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#199
Braintree::ErrorCodes::PayPalAccount::PayPalAccountsAreNotAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#200
Braintree::ErrorCodes::PayPalAccount::PayPalCommunicationError = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#201
Braintree::ErrorCodes::PayPalAccount::PaymentMethodNonceConsumed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#202
Braintree::ErrorCodes::PayPalAccount::PaymentMethodNonceLocked = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#203
Braintree::ErrorCodes::PayPalAccount::PaymentMethodNonceUnknown = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#204
Braintree::ErrorCodes::PayPalAccount::TokenIsInUse = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#720
module Braintree::ErrorCodes::PaymentMethod; end

# source://braintree//lib/braintree/error_codes.rb#721
Braintree::ErrorCodes::PaymentMethod::CannotForwardPaymentMethodType = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#722
Braintree::ErrorCodes::PaymentMethod::CustomerIdIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#723
Braintree::ErrorCodes::PaymentMethod::CustomerIdIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#724
Braintree::ErrorCodes::PaymentMethod::NonceIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#725
Braintree::ErrorCodes::PaymentMethod::NonceIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#732
module Braintree::ErrorCodes::PaymentMethod::Options; end

# source://braintree//lib/braintree/error_codes.rb#733
Braintree::ErrorCodes::PaymentMethod::Options::UsBankAccountVerificationMethodIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#726
Braintree::ErrorCodes::PaymentMethod::PaymentMethodNoLongerSupported = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#727
Braintree::ErrorCodes::PaymentMethod::PaymentMethodNonceConsumed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#728
Braintree::ErrorCodes::PaymentMethod::PaymentMethodNonceLocked = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#729
Braintree::ErrorCodes::PaymentMethod::PaymentMethodNonceUnknown = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#730
Braintree::ErrorCodes::PaymentMethod::PaymentMethodParamsAreRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#801
module Braintree::ErrorCodes::RiskData; end

# source://braintree//lib/braintree/error_codes.rb#802
Braintree::ErrorCodes::RiskData::CustomerDeviceIdIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#803
Braintree::ErrorCodes::RiskData::CustomerLocationZipInvalidCharacters = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#804
Braintree::ErrorCodes::RiskData::CustomerLocationZipIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#805
Braintree::ErrorCodes::RiskData::CustomerLocationZipIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#806
Braintree::ErrorCodes::RiskData::CustomerTenureIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#207
module Braintree::ErrorCodes::SepaDirectDebitAccount; end

# source://braintree//lib/braintree/error_codes.rb#209
Braintree::ErrorCodes::SepaDirectDebitAccount::SepaDebitAccountPaymentMethodCustomerIdIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#210
Braintree::ErrorCodes::SepaDirectDebitAccount::SepaDebitAccountPaymentMethodCustomerIdIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#208
Braintree::ErrorCodes::SepaDirectDebitAccount::SepaDebitAccountPaymentMethodMandateTypeIsNotSupported = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#702
module Braintree::ErrorCodes::SettlementBatchSummary; end

# source://braintree//lib/braintree/error_codes.rb#703
Braintree::ErrorCodes::SettlementBatchSummary::CustomFieldIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#704
Braintree::ErrorCodes::SettlementBatchSummary::SettlementDateIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#705
Braintree::ErrorCodes::SettlementBatchSummary::SettlementDateIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#213
module Braintree::ErrorCodes::Subscription; end

# source://braintree//lib/braintree/error_codes.rb#214
Braintree::ErrorCodes::Subscription::BillingDayOfMonthCannotBeUpdated = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#215
Braintree::ErrorCodes::Subscription::BillingDayOfMonthIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#216
Braintree::ErrorCodes::Subscription::BillingDayOfMonthMustBeNumeric = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#217
Braintree::ErrorCodes::Subscription::CannotAddDuplicateAddonOrDiscount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#218
Braintree::ErrorCodes::Subscription::CannotEditCanceledSubscription = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#219
Braintree::ErrorCodes::Subscription::CannotEditExpiredSubscription = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#220
Braintree::ErrorCodes::Subscription::CannotEditPriceChangingFieldsOnPastDueSubscription = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#221
Braintree::ErrorCodes::Subscription::FirstBillingDateCannotBeInThePast = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#222
Braintree::ErrorCodes::Subscription::FirstBillingDateCannotBeUpdated = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#223
Braintree::ErrorCodes::Subscription::FirstBillingDateIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#224
Braintree::ErrorCodes::Subscription::IdIsInUse = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#225
Braintree::ErrorCodes::Subscription::InconsistentNumberOfBillingCycles = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#226
Braintree::ErrorCodes::Subscription::InconsistentStartDate = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#227
Braintree::ErrorCodes::Subscription::InvalidRequestFormat = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#228
Braintree::ErrorCodes::Subscription::MerchantAccountDoesNotSupportInstrumentType = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#229
Braintree::ErrorCodes::Subscription::MerchantAccountIdIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#230
Braintree::ErrorCodes::Subscription::MismatchCurrencyISOCode = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#255
module Braintree::ErrorCodes::Subscription::Modification; end

# source://braintree//lib/braintree/error_codes.rb#256
Braintree::ErrorCodes::Subscription::Modification::AmountCannotBeBlank = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#257
Braintree::ErrorCodes::Subscription::Modification::AmountIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#258
Braintree::ErrorCodes::Subscription::Modification::AmountIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#259
Braintree::ErrorCodes::Subscription::Modification::CannotEditModificationsOnPastDueSubscription = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#260
Braintree::ErrorCodes::Subscription::Modification::CannotUpdateAndRemove = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#261
Braintree::ErrorCodes::Subscription::Modification::ExistingIdIsIncorrectKind = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#262
Braintree::ErrorCodes::Subscription::Modification::ExistingIdIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#263
Braintree::ErrorCodes::Subscription::Modification::ExistingIdIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#264
Braintree::ErrorCodes::Subscription::Modification::IdToRemoveIsIncorrectKind = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#265
Braintree::ErrorCodes::Subscription::Modification::IdToRemoveIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#266
Braintree::ErrorCodes::Subscription::Modification::IdToRemoveIsNotPresent = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#267
Braintree::ErrorCodes::Subscription::Modification::InconsistentNumberOfBillingCycles = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#268
Braintree::ErrorCodes::Subscription::Modification::InheritedFromIdIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#269
Braintree::ErrorCodes::Subscription::Modification::InheritedFromIdIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#270
Braintree::ErrorCodes::Subscription::Modification::Missing = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#271
Braintree::ErrorCodes::Subscription::Modification::NumberOfBillingCyclesCannotBeBlank = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#272
Braintree::ErrorCodes::Subscription::Modification::NumberOfBillingCyclesIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#273
Braintree::ErrorCodes::Subscription::Modification::NumberOfBillingCyclesMustBeGreaterThanZero = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#274
Braintree::ErrorCodes::Subscription::Modification::QuantityCannotBeBlank = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#275
Braintree::ErrorCodes::Subscription::Modification::QuantityIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#276
Braintree::ErrorCodes::Subscription::Modification::QuantityMustBeGreaterThanZero = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#231
Braintree::ErrorCodes::Subscription::NumberOfBillingCyclesCannotBeBlank = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#232
Braintree::ErrorCodes::Subscription::NumberOfBillingCyclesIsTooSmall = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#233
Braintree::ErrorCodes::Subscription::NumberOfBillingCyclesMustBeGreaterThanZero = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#234
Braintree::ErrorCodes::Subscription::NumberOfBillingCyclesMustBeNumeric = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#235
Braintree::ErrorCodes::Subscription::PaymentMethodNonceCardTypeIsNotAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#236
Braintree::ErrorCodes::Subscription::PaymentMethodNonceInstrumentTypeDoesNotSupportSubscriptions = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#237
Braintree::ErrorCodes::Subscription::PaymentMethodNonceIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#238
Braintree::ErrorCodes::Subscription::PaymentMethodNonceNotAssociatedWithCustomer = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#239
Braintree::ErrorCodes::Subscription::PaymentMethodNonceUnvaultedCardIsNotAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#240
Braintree::ErrorCodes::Subscription::PaymentMethodTokenCardTypeIsNotAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#241
Braintree::ErrorCodes::Subscription::PaymentMethodTokenInstrumentTypeDoesNotSupportSubscriptions = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#242
Braintree::ErrorCodes::Subscription::PaymentMethodTokenIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#243
Braintree::ErrorCodes::Subscription::PaymentMethodTokenNotAssociatedWithCustomer = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#244
Braintree::ErrorCodes::Subscription::PlanBillingFrequencyCannotBeUpdated = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#245
Braintree::ErrorCodes::Subscription::PlanIdIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#246
Braintree::ErrorCodes::Subscription::PriceCannotBeBlank = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#247
Braintree::ErrorCodes::Subscription::PriceFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#248
Braintree::ErrorCodes::Subscription::PriceIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#249
Braintree::ErrorCodes::Subscription::StatusIsCanceled = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#250
Braintree::ErrorCodes::Subscription::TokenFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#251
Braintree::ErrorCodes::Subscription::TrialDurationFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#252
Braintree::ErrorCodes::Subscription::TrialDurationIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#253
Braintree::ErrorCodes::Subscription::TrialDurationUnitIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#280
module Braintree::ErrorCodes::Transaction; end

# source://braintree//lib/braintree/error_codes.rb#281
Braintree::ErrorCodes::Transaction::AdjustmentAmountMustBeGreaterThanZero = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#282
Braintree::ErrorCodes::Transaction::AmountCannotBeNegative = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#283
Braintree::ErrorCodes::Transaction::AmountDoesNotMatch3DSecureAmount = T.let(T.unsafe(nil), String)

# Keep for backwards compatibility
#
# source://braintree//lib/braintree/error_codes.rb#284
Braintree::ErrorCodes::Transaction::AmountFormatIsInvalid = T.let(T.unsafe(nil), String)

# Keep for backwards compatibility
#
# source://braintree//lib/braintree/error_codes.rb#285
Braintree::ErrorCodes::Transaction::AmountIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#286
Braintree::ErrorCodes::Transaction::AmountIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#287
Braintree::ErrorCodes::Transaction::AmountIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#288
Braintree::ErrorCodes::Transaction::AmountMustBeGreaterThanZero = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#289
Braintree::ErrorCodes::Transaction::AmountNotSupportedByProcessor = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#290
Braintree::ErrorCodes::Transaction::BillingAddressConflict = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#291
Braintree::ErrorCodes::Transaction::BillingPhoneNumberIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#292
Braintree::ErrorCodes::Transaction::CannotBeVoided = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#293
Braintree::ErrorCodes::Transaction::CannotCancelRelease = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#294
Braintree::ErrorCodes::Transaction::CannotCloneCredit = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#295
Braintree::ErrorCodes::Transaction::CannotCloneMarketplaceTransaction = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#296
Braintree::ErrorCodes::Transaction::CannotCloneTransactionWithPayPalAccount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#297
Braintree::ErrorCodes::Transaction::CannotCloneTransactionWithVaultCreditCard = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#298
Braintree::ErrorCodes::Transaction::CannotCloneUnsuccessfulTransaction = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#299
Braintree::ErrorCodes::Transaction::CannotCloneVoiceAuthorizations = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#300
Braintree::ErrorCodes::Transaction::CannotHoldInEscrow = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#301
Braintree::ErrorCodes::Transaction::CannotPartiallyRefundEscrowedTransaction = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#302
Braintree::ErrorCodes::Transaction::CannotRefundCredit = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#303
Braintree::ErrorCodes::Transaction::CannotRefundSettlingTransaction = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#304
Braintree::ErrorCodes::Transaction::CannotRefundUnlessSettled = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#305
Braintree::ErrorCodes::Transaction::CannotRefundWithPendingMerchantAccount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#306
Braintree::ErrorCodes::Transaction::CannotRefundWithSuspendedMerchantAccount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#307
Braintree::ErrorCodes::Transaction::CannotReleaseFromEscrow = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#308
Braintree::ErrorCodes::Transaction::CannotSimulateTransactionSettlement = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#309
Braintree::ErrorCodes::Transaction::CannotSubmitForSettlement = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#310
Braintree::ErrorCodes::Transaction::CannotUpdateTransactionDetailsNotSubmittedForSettlement = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#311
Braintree::ErrorCodes::Transaction::ChannelIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#312
Braintree::ErrorCodes::Transaction::CreditCardIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#313
Braintree::ErrorCodes::Transaction::CurrencyCodeNotSupportedByMerchantAccount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#314
Braintree::ErrorCodes::Transaction::CustomFieldIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#315
Braintree::ErrorCodes::Transaction::CustomFieldIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#316
Braintree::ErrorCodes::Transaction::CustomerDefaultPaymentMethodCardTypeIsNotAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#317
Braintree::ErrorCodes::Transaction::CustomerDoesNotHaveCreditCard = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#318
Braintree::ErrorCodes::Transaction::CustomerIdIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#319
Braintree::ErrorCodes::Transaction::DiscountAmountCannotBeNegative = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#320
Braintree::ErrorCodes::Transaction::DiscountAmountFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#321
Braintree::ErrorCodes::Transaction::DiscountAmountIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#322
Braintree::ErrorCodes::Transaction::ExchangeRateQuoteIdTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#528
module Braintree::ErrorCodes::Transaction::ExternalVault; end

# source://braintree//lib/braintree/error_codes.rb#529
Braintree::ErrorCodes::Transaction::ExternalVault::PreviousNetworkTransactionIdIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#530
Braintree::ErrorCodes::Transaction::ExternalVault::StatusIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#531
Braintree::ErrorCodes::Transaction::ExternalVault::StatusWithPreviousNetworkTransactionIdIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#323
Braintree::ErrorCodes::Transaction::FailedAuthAdjustmentAllowRetry = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#324
Braintree::ErrorCodes::Transaction::FailedAuthAdjustmentHardDecline = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#325
Braintree::ErrorCodes::Transaction::FinalAuthSubmitForSettlementForDifferentAmount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#326
Braintree::ErrorCodes::Transaction::HasAlreadyBeenRefunded = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#440
module Braintree::ErrorCodes::Transaction::Industry; end

# source://braintree//lib/braintree/error_codes.rb#518
module Braintree::ErrorCodes::Transaction::Industry::AdditionalCharge; end

# source://braintree//lib/braintree/error_codes.rb#519
Braintree::ErrorCodes::Transaction::Industry::AdditionalCharge::AmountFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#520
Braintree::ErrorCodes::Transaction::Industry::AdditionalCharge::AmountIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#521
Braintree::ErrorCodes::Transaction::Industry::AdditionalCharge::AmountIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#522
Braintree::ErrorCodes::Transaction::Industry::AdditionalCharge::AmountMustBeGreaterThanZero = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#523
Braintree::ErrorCodes::Transaction::Industry::AdditionalCharge::KindIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#524
Braintree::ErrorCodes::Transaction::Industry::AdditionalCharge::KindMustBeUnique = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#441
Braintree::ErrorCodes::Transaction::Industry::IndustryTypeIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#493
module Braintree::ErrorCodes::Transaction::Industry::Leg; end

# source://braintree//lib/braintree/error_codes.rb#494
module Braintree::ErrorCodes::Transaction::Industry::Leg::TravelFlight; end

# source://braintree//lib/braintree/error_codes.rb#495
Braintree::ErrorCodes::Transaction::Industry::Leg::TravelFlight::ArrivalAirportCodeIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#496
Braintree::ErrorCodes::Transaction::Industry::Leg::TravelFlight::ArrivalTimeFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#497
Braintree::ErrorCodes::Transaction::Industry::Leg::TravelFlight::CarrierCodeIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#498
Braintree::ErrorCodes::Transaction::Industry::Leg::TravelFlight::ConjunctionTicketIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#499
Braintree::ErrorCodes::Transaction::Industry::Leg::TravelFlight::CouponNumberIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#500
Braintree::ErrorCodes::Transaction::Industry::Leg::TravelFlight::DepartureAirportCodeIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#501
Braintree::ErrorCodes::Transaction::Industry::Leg::TravelFlight::DepartureTimeFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#502
Braintree::ErrorCodes::Transaction::Industry::Leg::TravelFlight::ExchangeTicketIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#503
Braintree::ErrorCodes::Transaction::Industry::Leg::TravelFlight::FareAmountCannotBeNegative = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#504
Braintree::ErrorCodes::Transaction::Industry::Leg::TravelFlight::FareAmountFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#505
Braintree::ErrorCodes::Transaction::Industry::Leg::TravelFlight::FareAmountIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#506
Braintree::ErrorCodes::Transaction::Industry::Leg::TravelFlight::FareBasisCodeIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#507
Braintree::ErrorCodes::Transaction::Industry::Leg::TravelFlight::FeeAmountCannotBeNegative = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#508
Braintree::ErrorCodes::Transaction::Industry::Leg::TravelFlight::FeeAmountFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#509
Braintree::ErrorCodes::Transaction::Industry::Leg::TravelFlight::FeeAmountIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#510
Braintree::ErrorCodes::Transaction::Industry::Leg::TravelFlight::ServiceClassIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#511
Braintree::ErrorCodes::Transaction::Industry::Leg::TravelFlight::TaxAmountCannotBeNegative = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#512
Braintree::ErrorCodes::Transaction::Industry::Leg::TravelFlight::TaxAmountFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#513
Braintree::ErrorCodes::Transaction::Industry::Leg::TravelFlight::TaxAmountIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#514
Braintree::ErrorCodes::Transaction::Industry::Leg::TravelFlight::TicketNumberIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#443
module Braintree::ErrorCodes::Transaction::Industry::Lodging; end

# source://braintree//lib/braintree/error_codes.rb#444
Braintree::ErrorCodes::Transaction::Industry::Lodging::AdvancedDepositIndicatorIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#445
Braintree::ErrorCodes::Transaction::Industry::Lodging::CheckInDateIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#446
Braintree::ErrorCodes::Transaction::Industry::Lodging::CheckOutDateIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#447
Braintree::ErrorCodes::Transaction::Industry::Lodging::CheckOutDateMustFollowCheckInDate = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#448
Braintree::ErrorCodes::Transaction::Industry::Lodging::EmptyData = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#449
Braintree::ErrorCodes::Transaction::Industry::Lodging::FireSafetyIndicatorIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#450
Braintree::ErrorCodes::Transaction::Industry::Lodging::FolioNumberIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#451
Braintree::ErrorCodes::Transaction::Industry::Lodging::NoShowIndicatorIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#452
Braintree::ErrorCodes::Transaction::Industry::Lodging::PropertyPhoneIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#453
Braintree::ErrorCodes::Transaction::Industry::Lodging::RoomRateFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#454
Braintree::ErrorCodes::Transaction::Industry::Lodging::RoomRateIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#455
Braintree::ErrorCodes::Transaction::Industry::Lodging::RoomRateMustBeGreaterThanZero = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#456
Braintree::ErrorCodes::Transaction::Industry::Lodging::RoomTaxFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#457
Braintree::ErrorCodes::Transaction::Industry::Lodging::RoomTaxIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#458
Braintree::ErrorCodes::Transaction::Industry::Lodging::RoomTaxMustBeGreaterThanZero = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#459
Braintree::ErrorCodes::Transaction::Industry::Lodging::UnknownDataField = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#462
module Braintree::ErrorCodes::Transaction::Industry::TravelCruise; end

# source://braintree//lib/braintree/error_codes.rb#463
Braintree::ErrorCodes::Transaction::Industry::TravelCruise::DepartureDateIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#464
Braintree::ErrorCodes::Transaction::Industry::TravelCruise::EmptyData = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#465
Braintree::ErrorCodes::Transaction::Industry::TravelCruise::LodgingCheckInDateIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#466
Braintree::ErrorCodes::Transaction::Industry::TravelCruise::LodgingCheckOutDateIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#467
Braintree::ErrorCodes::Transaction::Industry::TravelCruise::TravelPackageIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#468
Braintree::ErrorCodes::Transaction::Industry::TravelCruise::UnknownDataField = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#471
module Braintree::ErrorCodes::Transaction::Industry::TravelFlight; end

# source://braintree//lib/braintree/error_codes.rb#472
Braintree::ErrorCodes::Transaction::Industry::TravelFlight::CustomerCodeIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#473
Braintree::ErrorCodes::Transaction::Industry::TravelFlight::EmptyData = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#474
Braintree::ErrorCodes::Transaction::Industry::TravelFlight::FareAmountCannotBeNegative = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#475
Braintree::ErrorCodes::Transaction::Industry::TravelFlight::FareAmountFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#476
Braintree::ErrorCodes::Transaction::Industry::TravelFlight::FareAmountIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#477
Braintree::ErrorCodes::Transaction::Industry::TravelFlight::FeeAmountCannotBeNegative = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#478
Braintree::ErrorCodes::Transaction::Industry::TravelFlight::FeeAmountFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#479
Braintree::ErrorCodes::Transaction::Industry::TravelFlight::FeeAmountIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#480
Braintree::ErrorCodes::Transaction::Industry::TravelFlight::IssuedDateFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#481
Braintree::ErrorCodes::Transaction::Industry::TravelFlight::IssuingCarrierCodeIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#482
Braintree::ErrorCodes::Transaction::Industry::TravelFlight::LegsExpected = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#483
Braintree::ErrorCodes::Transaction::Industry::TravelFlight::PassengerMiddleInitialIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#484
Braintree::ErrorCodes::Transaction::Industry::TravelFlight::RestrictedTicketIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#485
Braintree::ErrorCodes::Transaction::Industry::TravelFlight::TaxAmountCannotBeNegative = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#486
Braintree::ErrorCodes::Transaction::Industry::TravelFlight::TaxAmountFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#487
Braintree::ErrorCodes::Transaction::Industry::TravelFlight::TaxAmountIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#488
Braintree::ErrorCodes::Transaction::Industry::TravelFlight::TicketNumberIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#489
Braintree::ErrorCodes::Transaction::Industry::TravelFlight::TooManyLegs = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#490
Braintree::ErrorCodes::Transaction::Industry::TravelFlight::UnknownDataField = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#327
Braintree::ErrorCodes::Transaction::LineItemsExpected = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#328
Braintree::ErrorCodes::Transaction::MerchantAccountDoesNotMatch3DSecureMerchantAccount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#329
Braintree::ErrorCodes::Transaction::MerchantAccountDoesNotSupportMOTO = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#330
Braintree::ErrorCodes::Transaction::MerchantAccountDoesNotSupportRefunds = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#331
Braintree::ErrorCodes::Transaction::MerchantAccountIdDoesNotMatchSubscription = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#332
Braintree::ErrorCodes::Transaction::MerchantAccountIdIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#333
Braintree::ErrorCodes::Transaction::MerchantAccountIsSuspended = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#334
Braintree::ErrorCodes::Transaction::NoNetAmountToPerformAuthAdjustment = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#424
module Braintree::ErrorCodes::Transaction::Options; end

# source://braintree//lib/braintree/error_codes.rb#433
module Braintree::ErrorCodes::Transaction::Options::CreditCard; end

# source://braintree//lib/braintree/error_codes.rb#436
Braintree::ErrorCodes::Transaction::Options::CreditCard::AccountTypeDebitDoesNotSupportAuths = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#434
Braintree::ErrorCodes::Transaction::Options::CreditCard::AccountTypeIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#435
Braintree::ErrorCodes::Transaction::Options::CreditCard::AccountTypeNotSupported = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#429
module Braintree::ErrorCodes::Transaction::Options::PayPal; end

# source://braintree//lib/braintree/error_codes.rb#430
Braintree::ErrorCodes::Transaction::Options::PayPal::CustomFieldTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#425
Braintree::ErrorCodes::Transaction::Options::SubmitForSettlementIsRequiredForCloning = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#426
Braintree::ErrorCodes::Transaction::Options::SubmitForSettlementIsRequiredForPayPalUnilateral = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#427
Braintree::ErrorCodes::Transaction::Options::VaultIsDisabled = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#335
Braintree::ErrorCodes::Transaction::OrderIdIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#336
Braintree::ErrorCodes::Transaction::PayPalAuthExpired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#337
Braintree::ErrorCodes::Transaction::PayPalNotEnabled = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#338
Braintree::ErrorCodes::Transaction::PayPalVaultRecordMissingData = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#339
Braintree::ErrorCodes::Transaction::PaymentInstrumentNotSupportedByMerchantAccount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#340
Braintree::ErrorCodes::Transaction::PaymentInstrumentTypeIsNotAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#341
Braintree::ErrorCodes::Transaction::PaymentInstrumentWithExternalVaultIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#342
Braintree::ErrorCodes::Transaction::PaymentMethodConflict = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#343
Braintree::ErrorCodes::Transaction::PaymentMethodConflictWithVenmoSDK = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#344
Braintree::ErrorCodes::Transaction::PaymentMethodDoesNotBelongToCustomer = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#345
Braintree::ErrorCodes::Transaction::PaymentMethodDoesNotBelongToSubscription = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#346
Braintree::ErrorCodes::Transaction::PaymentMethodNonceCardTypeIsNotAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#347
Braintree::ErrorCodes::Transaction::PaymentMethodNonceConsumed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#348
Braintree::ErrorCodes::Transaction::PaymentMethodNonceHasNoValidPaymentInstrumentType = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#349
Braintree::ErrorCodes::Transaction::PaymentMethodNonceLocked = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#350
Braintree::ErrorCodes::Transaction::PaymentMethodNonceUnknown = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#351
Braintree::ErrorCodes::Transaction::PaymentMethodTokenCardTypeIsNotAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#352
Braintree::ErrorCodes::Transaction::PaymentMethodTokenIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#353
Braintree::ErrorCodes::Transaction::ProcessorAuthorizationCodeCannotBeSet = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#354
Braintree::ErrorCodes::Transaction::ProcessorAuthorizationCodeIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#356
Braintree::ErrorCodes::Transaction::ProcessorDoesNotSupportAuthAdjustment = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#355
Braintree::ErrorCodes::Transaction::ProcessorDoesNotSupportAuths = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#357
Braintree::ErrorCodes::Transaction::ProcessorDoesNotSupportCredits = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#358
Braintree::ErrorCodes::Transaction::ProcessorDoesNotSupportIncrementalAuth = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#359
Braintree::ErrorCodes::Transaction::ProcessorDoesNotSupportMotoForCardType = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#360
Braintree::ErrorCodes::Transaction::ProcessorDoesNotSupportPartialAuthReversal = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#361
Braintree::ErrorCodes::Transaction::ProcessorDoesNotSupportPartialSettlement = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#362
Braintree::ErrorCodes::Transaction::ProcessorDoesNotSupportUpdatingDescriptor = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#363
Braintree::ErrorCodes::Transaction::ProcessorDoesNotSupportUpdatingOrderId = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#364
Braintree::ErrorCodes::Transaction::ProcessorDoesNotSupportUpdatingTransactionDetails = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#365
Braintree::ErrorCodes::Transaction::ProcessorDoesNotSupportVoiceAuthorizations = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#366
Braintree::ErrorCodes::Transaction::ProductSkuIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#367
Braintree::ErrorCodes::Transaction::PurchaseOrderNumberIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#368
Braintree::ErrorCodes::Transaction::PurchaseOrderNumberIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#369
Braintree::ErrorCodes::Transaction::RefundAmountIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#370
Braintree::ErrorCodes::Transaction::RefundAuthHardDeclined = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#371
Braintree::ErrorCodes::Transaction::RefundAuthSoftDeclined = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#372
Braintree::ErrorCodes::Transaction::ScaExemptionInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#373
Braintree::ErrorCodes::Transaction::ServiceFeeAmountCannotBeNegative = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#374
Braintree::ErrorCodes::Transaction::ServiceFeeAmountFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#375
Braintree::ErrorCodes::Transaction::ServiceFeeAmountIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#376
Braintree::ErrorCodes::Transaction::ServiceFeeAmountNotAllowedOnMasterMerchantAccount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#377
Braintree::ErrorCodes::Transaction::ServiceFeeIsNotAllowedOnCredits = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#378
Braintree::ErrorCodes::Transaction::ServiceFeeNotAcceptedForPayPal = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#379
Braintree::ErrorCodes::Transaction::SettlementAmountIsLessThanServiceFeeAmount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#380
Braintree::ErrorCodes::Transaction::SettlementAmountIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#381
Braintree::ErrorCodes::Transaction::ShippingAddressDoesntMatchCustomer = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#382
Braintree::ErrorCodes::Transaction::ShippingAmountCannotBeNegative = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#383
Braintree::ErrorCodes::Transaction::ShippingAmountFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#384
Braintree::ErrorCodes::Transaction::ShippingAmountIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#385
Braintree::ErrorCodes::Transaction::ShippingMethodIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#386
Braintree::ErrorCodes::Transaction::ShippingPhoneNumberIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#387
Braintree::ErrorCodes::Transaction::ShipsFromPostalCodeInvalidCharacters = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#388
Braintree::ErrorCodes::Transaction::ShipsFromPostalCodeIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#389
Braintree::ErrorCodes::Transaction::ShipsFromPostalCodeIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#390
Braintree::ErrorCodes::Transaction::SubMerchantAccountRequiresServiceFeeAmount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#391
Braintree::ErrorCodes::Transaction::SubscriptionDoesNotBelongToCustomer = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#392
Braintree::ErrorCodes::Transaction::SubscriptionIdIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#393
Braintree::ErrorCodes::Transaction::SubscriptionStatusMustBePastDue = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#394
Braintree::ErrorCodes::Transaction::TaxAmountCannotBeNegative = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#395
Braintree::ErrorCodes::Transaction::TaxAmountFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#396
Braintree::ErrorCodes::Transaction::TaxAmountIsRequiredForAibSwedish = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#397
Braintree::ErrorCodes::Transaction::TaxAmountIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#398
Braintree::ErrorCodes::Transaction::ThreeDSecureAuthenticationFailed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#399
Braintree::ErrorCodes::Transaction::ThreeDSecureAuthenticationIdDoesntMatchNonceThreeDSecureAuthentication = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#400
Braintree::ErrorCodes::Transaction::ThreeDSecureAuthenticationIdIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#401
Braintree::ErrorCodes::Transaction::ThreeDSecureAuthenticationIdWithThreeDSecurePassThruIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#402
Braintree::ErrorCodes::Transaction::ThreeDSecureAuthenticationResponseIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#403
Braintree::ErrorCodes::Transaction::ThreeDSecureCavvAlgorithmIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#404
Braintree::ErrorCodes::Transaction::ThreeDSecureCavvIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#405
Braintree::ErrorCodes::Transaction::ThreeDSecureDirectoryResponseIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#406
Braintree::ErrorCodes::Transaction::ThreeDSecureEciFlagIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#407
Braintree::ErrorCodes::Transaction::ThreeDSecureEciFlagIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#408
Braintree::ErrorCodes::Transaction::ThreeDSecureMerchantAccountDoesNotSupportCardType = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#409
Braintree::ErrorCodes::Transaction::ThreeDSecureThreeDSecureVersionIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#410
Braintree::ErrorCodes::Transaction::ThreeDSecureTokenIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#411
Braintree::ErrorCodes::Transaction::ThreeDSecureTransactionDataDoesntMatchVerify = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#412
Braintree::ErrorCodes::Transaction::ThreeDSecureTransactionPaymentMethodDoesntMatchThreeDSecureAuthenticationPaymentMethod = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#413
Braintree::ErrorCodes::Transaction::ThreeDSecureXidIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#414
Braintree::ErrorCodes::Transaction::TooManyLineItems = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#415
Braintree::ErrorCodes::Transaction::TransactionIsNotEligibleForAdjustment = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#416
Braintree::ErrorCodes::Transaction::TransactionMustBeInStateAuthorized = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#417
Braintree::ErrorCodes::Transaction::TransactionSourceIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#418
Braintree::ErrorCodes::Transaction::TypeIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#419
Braintree::ErrorCodes::Transaction::TypeIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#420
Braintree::ErrorCodes::Transaction::UnsupportedVoiceAuthorization = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#421
Braintree::ErrorCodes::Transaction::UsBankAccountNonceMustBePlaidVerified = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#422
Braintree::ErrorCodes::Transaction::UsBankAccountNotVerified = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#535
module Braintree::ErrorCodes::TransactionLineItem; end

# source://braintree//lib/braintree/error_codes.rb#536
Braintree::ErrorCodes::TransactionLineItem::CommodityCodeIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#537
Braintree::ErrorCodes::TransactionLineItem::DescriptionIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#538
Braintree::ErrorCodes::TransactionLineItem::DiscountAmountCannotBeNegative = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#539
Braintree::ErrorCodes::TransactionLineItem::DiscountAmountFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#540
Braintree::ErrorCodes::TransactionLineItem::DiscountAmountIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#541
Braintree::ErrorCodes::TransactionLineItem::KindIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#542
Braintree::ErrorCodes::TransactionLineItem::KindIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#543
Braintree::ErrorCodes::TransactionLineItem::NameIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#544
Braintree::ErrorCodes::TransactionLineItem::NameIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#545
Braintree::ErrorCodes::TransactionLineItem::ProductCodeIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#546
Braintree::ErrorCodes::TransactionLineItem::QuantityFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#547
Braintree::ErrorCodes::TransactionLineItem::QuantityIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#548
Braintree::ErrorCodes::TransactionLineItem::QuantityIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#549
Braintree::ErrorCodes::TransactionLineItem::TaxAmountCannotBeNegative = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#550
Braintree::ErrorCodes::TransactionLineItem::TaxAmountFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#551
Braintree::ErrorCodes::TransactionLineItem::TaxAmountIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#552
Braintree::ErrorCodes::TransactionLineItem::TotalAmountFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#553
Braintree::ErrorCodes::TransactionLineItem::TotalAmountIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#554
Braintree::ErrorCodes::TransactionLineItem::TotalAmountIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#555
Braintree::ErrorCodes::TransactionLineItem::TotalAmountMustBeGreaterThanZero = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#564
Braintree::ErrorCodes::TransactionLineItem::UPCCodeIsMissing = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#565
Braintree::ErrorCodes::TransactionLineItem::UPCCodeIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#567
Braintree::ErrorCodes::TransactionLineItem::UPCTypeIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#566
Braintree::ErrorCodes::TransactionLineItem::UPCTypeIsMissing = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#556
Braintree::ErrorCodes::TransactionLineItem::UnitAmountFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#557
Braintree::ErrorCodes::TransactionLineItem::UnitAmountIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#558
Braintree::ErrorCodes::TransactionLineItem::UnitAmountIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#559
Braintree::ErrorCodes::TransactionLineItem::UnitAmountMustBeGreaterThanZero = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#560
Braintree::ErrorCodes::TransactionLineItem::UnitOfMeasureIsTooLong = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#561
Braintree::ErrorCodes::TransactionLineItem::UnitTaxAmountCannotBeNegative = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#562
Braintree::ErrorCodes::TransactionLineItem::UnitTaxAmountFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#563
Braintree::ErrorCodes::TransactionLineItem::UnitTaxAmountIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#792
module Braintree::ErrorCodes::UsBankAccountVerification; end

# source://braintree//lib/braintree/error_codes.rb#793
Braintree::ErrorCodes::UsBankAccountVerification::AmountsDoNotMatch = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#794
Braintree::ErrorCodes::UsBankAccountVerification::InvalidDepositAmounts = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#795
Braintree::ErrorCodes::UsBankAccountVerification::MustBeMicroTransfersVerification = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#796
Braintree::ErrorCodes::UsBankAccountVerification::NotConfirmable = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#797
Braintree::ErrorCodes::UsBankAccountVerification::TooManyConfirmationAttempts = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#798
Braintree::ErrorCodes::UsBankAccountVerification::UnableToConfirmDepositAmounts = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#755
module Braintree::ErrorCodes::Verification; end

# source://braintree//lib/braintree/error_codes.rb#769
Braintree::ErrorCodes::Verification::AmountDoesNotMatch3DSecureAmount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#770
Braintree::ErrorCodes::Verification::MerchantAccountDoesNotSupport3DSecure = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#771
Braintree::ErrorCodes::Verification::MerchantAcountDoesNotMatch3DSecureMerchantAccount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#756
module Braintree::ErrorCodes::Verification::Options; end

# source://braintree//lib/braintree/error_codes.rb#757
Braintree::ErrorCodes::Verification::Options::AccountTypeIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#758
Braintree::ErrorCodes::Verification::Options::AccountTypeNotSupported = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#759
Braintree::ErrorCodes::Verification::Options::AmountCannotBeNegative = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#760
Braintree::ErrorCodes::Verification::Options::AmountFormatIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#761
Braintree::ErrorCodes::Verification::Options::AmountIsTooLarge = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#762
Braintree::ErrorCodes::Verification::Options::AmountNotSupportedByProcessor = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#763
Braintree::ErrorCodes::Verification::Options::MerchantAccountCannotBeSubMerchantAccount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#764
Braintree::ErrorCodes::Verification::Options::MerchantAccountIdIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#765
Braintree::ErrorCodes::Verification::Options::MerchantAccountIsForbidden = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#766
Braintree::ErrorCodes::Verification::Options::MerchantAccountIsSuspended = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#772
Braintree::ErrorCodes::Verification::ThreeDSecureAuthenticationFailed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#773
Braintree::ErrorCodes::Verification::ThreeDSecureAuthenticationIdDoesntMatchNonceThreeDSecureAuthentication = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#774
Braintree::ErrorCodes::Verification::ThreeDSecureAuthenticationIdIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#775
Braintree::ErrorCodes::Verification::ThreeDSecureAuthenticationIdWithThreeDSecurePassThruIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#780
module Braintree::ErrorCodes::Verification::ThreeDSecurePassThru; end

# source://braintree//lib/braintree/error_codes.rb#781
Braintree::ErrorCodes::Verification::ThreeDSecurePassThru::AuthenticationResponseIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#782
Braintree::ErrorCodes::Verification::ThreeDSecurePassThru::CavvAlgorithmIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#783
Braintree::ErrorCodes::Verification::ThreeDSecurePassThru::CavvIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#784
Braintree::ErrorCodes::Verification::ThreeDSecurePassThru::DirectoryResponseIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#785
Braintree::ErrorCodes::Verification::ThreeDSecurePassThru::EciFlagIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#786
Braintree::ErrorCodes::Verification::ThreeDSecurePassThru::EciFlagIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#787
Braintree::ErrorCodes::Verification::ThreeDSecurePassThru::ThreeDSecureVersionIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#788
Braintree::ErrorCodes::Verification::ThreeDSecurePassThru::ThreeDSecureVersionIsRequired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#776
Braintree::ErrorCodes::Verification::ThreeDSecureTokenIsInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#777
Braintree::ErrorCodes::Verification::ThreeDSecureTransactionPaymentMethodDoesntMatchThreeDSecureAuthenticationPaymentMethod = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_codes.rb#778
Braintree::ErrorCodes::Verification::ThreeDSecureVerificationDataDoesntMatchVerify = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/error_result.rb#2
class Braintree::ErrorResult
  # @return [ErrorResult] a new instance of ErrorResult
  #
  # source://braintree//lib/braintree/error_result.rb#13
  def initialize(gateway, data); end

  # Returns the value of attribute credit_card_verification.
  #
  # source://braintree//lib/braintree/error_result.rb#4
  def credit_card_verification; end

  # Returns the value of attribute errors.
  #
  # source://braintree//lib/braintree/error_result.rb#5
  def errors; end

  # source://braintree//lib/braintree/error_result.rb#25
  def inspect; end

  # Returns the value of attribute merchant_account.
  #
  # source://braintree//lib/braintree/error_result.rb#6
  def merchant_account; end

  # Returns the value of attribute message.
  #
  # source://braintree//lib/braintree/error_result.rb#7
  def message; end

  # Returns the value of attribute params.
  #
  # source://braintree//lib/braintree/error_result.rb#8
  def params; end

  # Returns the value of attribute subscription.
  #
  # source://braintree//lib/braintree/error_result.rb#9
  def subscription; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/error_result.rb#35
  def success?; end

  # Returns the value of attribute transaction.
  #
  # source://braintree//lib/braintree/error_result.rb#10
  def transaction; end

  # Returns the value of attribute verification.
  #
  # source://braintree//lib/braintree/error_result.rb#11
  def verification; end
end

# source://braintree//lib/braintree/errors.rb#2
class Braintree::Errors
  include ::Prelude::Enumerator
  include ::Enumerable

  # @return [Errors] a new instance of Errors
  #
  # source://braintree//lib/braintree/errors.rb#5
  def initialize(data = T.unsafe(nil)); end

  # source://braintree//lib/braintree/errors.rb#28
  def _inner_inspect; end

  # source://braintree//lib/braintree/errors.rb#9
  def each(&block); end

  # source://braintree//lib/braintree/errors.rb#13
  def for(scope); end

  # source://braintree//lib/braintree/errors.rb#17
  def inspect; end

  # Returns the total number of validation errors at all levels of nesting. For example,
  # if creating a customer with a credit card and a billing address, and each of the customer,
  # credit card, and billing address has 1 error, this method will return 3.
  #
  # source://braintree//lib/braintree/errors.rb#24
  def size; end
end

# source://braintree//lib/braintree/exchange_rate.rb#2
class Braintree::ExchangeRate
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [ExchangeRate] a new instance of ExchangeRate
  #
  # source://braintree//lib/braintree/exchange_rate.rb#5
  def initialize(gateway, attributes); end

  class << self
    # source://braintree//lib/braintree/exchange_rate.rb#9
    def generate(exchange_rate_quote_request); end
  end
end

# source://braintree//lib/braintree/exchange_rate_quote.rb#2
class Braintree::ExchangeRateQuote
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [ExchangeRateQuote] a new instance of ExchangeRateQuote
  #
  # source://braintree//lib/braintree/exchange_rate_quote.rb#14
  def initialize(attributes); end

  # Returns the value of attribute attrs.
  #
  # source://braintree//lib/braintree/exchange_rate_quote.rb#5
  def attrs; end

  # Returns the value of attribute base_amount.
  #
  # source://braintree//lib/braintree/exchange_rate_quote.rb#6
  def base_amount; end

  # Returns the value of attribute exchange_rate.
  #
  # source://braintree//lib/braintree/exchange_rate_quote.rb#7
  def exchange_rate; end

  # Returns the value of attribute expires_at.
  #
  # source://braintree//lib/braintree/exchange_rate_quote.rb#8
  def expires_at; end

  # Returns the value of attribute id.
  #
  # source://braintree//lib/braintree/exchange_rate_quote.rb#9
  def id; end

  # source://braintree//lib/braintree/exchange_rate_quote.rb#19
  def inspect; end

  # Returns the value of attribute quote_amount.
  #
  # source://braintree//lib/braintree/exchange_rate_quote.rb#10
  def quote_amount; end

  # Returns the value of attribute refreshes_at.
  #
  # source://braintree//lib/braintree/exchange_rate_quote.rb#11
  def refreshes_at; end

  # Returns the value of attribute trade_rate.
  #
  # source://braintree//lib/braintree/exchange_rate_quote.rb#12
  def trade_rate; end
end

# source://braintree//lib/braintree/exchange_rate_quote_gateway.rb#2
class Braintree::ExchangeRateQuoteGateway
  # @return [ExchangeRateQuoteGateway] a new instance of ExchangeRateQuoteGateway
  #
  # source://braintree//lib/braintree/exchange_rate_quote_gateway.rb#3
  def initialize(gateway); end

  # source://braintree//lib/braintree/exchange_rate_quote_gateway.rb#23
  def generate(params); end
end

# source://braintree//lib/braintree/exchange_rate_quote_gateway.rb#7
Braintree::ExchangeRateQuoteGateway::DEFINITION = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/exchange_rate_quote_input.rb#2
class Braintree::ExchangeRateQuoteInput
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [ExchangeRateQuoteInput] a new instance of ExchangeRateQuoteInput
  #
  # source://braintree//lib/braintree/exchange_rate_quote_input.rb#11
  def initialize(attributes); end

  # Returns the value of attribute attrs.
  #
  # source://braintree//lib/braintree/exchange_rate_quote_input.rb#5
  def attrs; end

  # Returns the value of attribute base_amount.
  #
  # source://braintree//lib/braintree/exchange_rate_quote_input.rb#7
  def base_amount; end

  # Returns the value of attribute base_currency.
  #
  # source://braintree//lib/braintree/exchange_rate_quote_input.rb#6
  def base_currency; end

  # source://braintree//lib/braintree/exchange_rate_quote_input.rb#16
  def inspect; end

  # Returns the value of attribute markup.
  #
  # source://braintree//lib/braintree/exchange_rate_quote_input.rb#8
  def markup; end

  # Returns the value of attribute quote_currency.
  #
  # source://braintree//lib/braintree/exchange_rate_quote_input.rb#9
  def quote_currency; end
end

# source://braintree//lib/braintree/exchange_rate_quote_request.rb#2
class Braintree::ExchangeRateQuoteRequest
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [ExchangeRateQuoteRequest] a new instance of ExchangeRateQuoteRequest
  #
  # source://braintree//lib/braintree/exchange_rate_quote_request.rb#7
  def initialize(attributes); end

  # source://braintree//lib/braintree/exchange_rate_quote_request.rb#13
  def inspect; end

  # Returns the value of attribute quotes.
  #
  # source://braintree//lib/braintree/exchange_rate_quote_request.rb#5
  def quotes; end
end

# source://braintree//lib/braintree/exchange_rate_quote_response.rb#2
class Braintree::ExchangeRateQuoteResponse
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [ExchangeRateQuoteResponse] a new instance of ExchangeRateQuoteResponse
  #
  # source://braintree//lib/braintree/exchange_rate_quote_response.rb#7
  def initialize(attributes); end

  # source://braintree//lib/braintree/exchange_rate_quote_response.rb#13
  def inspect; end

  # Returns the value of attribute quotes.
  #
  # source://braintree//lib/braintree/exchange_rate_quote_response.rb#5
  def quotes; end
end

# source://braintree//lib/braintree/facilitated_details.rb#2
class Braintree::FacilitatedDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [FacilitatedDetails] a new instance of FacilitatedDetails
  #
  # source://braintree//lib/braintree/facilitated_details.rb#9
  def initialize(attributes); end

  # source://braintree//lib/braintree/facilitated_details.rb#13
  def inspect; end

  # Returns the value of attribute merchant_id.
  #
  # source://braintree//lib/braintree/facilitated_details.rb#5
  def merchant_id; end

  # Returns the value of attribute merchant_name.
  #
  # source://braintree//lib/braintree/facilitated_details.rb#6
  def merchant_name; end

  # Returns the value of attribute payment_method_nonce.
  #
  # source://braintree//lib/braintree/facilitated_details.rb#7
  def payment_method_nonce; end
end

# source://braintree//lib/braintree/facilitator_details.rb#2
class Braintree::FacilitatorDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [FacilitatorDetails] a new instance of FacilitatorDetails
  #
  # source://braintree//lib/braintree/facilitator_details.rb#8
  def initialize(attributes); end

  # source://braintree//lib/braintree/facilitator_details.rb#12
  def inspect; end

  # Returns the value of attribute oauth_application_client_id.
  #
  # source://braintree//lib/braintree/facilitator_details.rb#5
  def oauth_application_client_id; end

  # Returns the value of attribute oauth_application_name.
  #
  # source://braintree//lib/braintree/facilitator_details.rb#6
  def oauth_application_name; end
end

# source://braintree//lib/braintree/gateway.rb#2
class Braintree::Gateway
  # @return [Gateway] a new instance of Gateway
  #
  # source://braintree//lib/braintree/gateway.rb#5
  def initialize(config); end

  # source://braintree//lib/braintree/gateway.rb#17
  def add_on; end

  # source://braintree//lib/braintree/gateway.rb#21
  def address; end

  # source://braintree//lib/braintree/gateway.rb#25
  def apple_pay; end

  # source://braintree//lib/braintree/gateway.rb#29
  def client_token; end

  # Returns the value of attribute config.
  #
  # source://braintree//lib/braintree/gateway.rb#3
  def config; end

  # source://braintree//lib/braintree/gateway.rb#33
  def credit_card; end

  # source://braintree//lib/braintree/gateway.rb#37
  def customer; end

  # source://braintree//lib/braintree/gateway.rb#41
  def discount; end

  # source://braintree//lib/braintree/gateway.rb#45
  def dispute; end

  # source://braintree//lib/braintree/gateway.rb#49
  def document_upload; end

  # source://braintree//lib/braintree/gateway.rb#53
  def exchange_rate_quote; end

  # Returns the value of attribute graphql_client.
  #
  # source://braintree//lib/braintree/gateway.rb#3
  def graphql_client; end

  # source://braintree//lib/braintree/gateway.rb#85
  def merchant; end

  # source://braintree//lib/braintree/gateway.rb#89
  def merchant_account; end

  # source://braintree//lib/braintree/gateway.rb#57
  def oauth; end

  # source://braintree//lib/braintree/gateway.rb#65
  def payment_method; end

  # source://braintree//lib/braintree/gateway.rb#69
  def payment_method_nonce; end

  # source://braintree//lib/braintree/gateway.rb#73
  def paypal_account; end

  # source://braintree//lib/braintree/gateway.rb#61
  def plan; end

  # source://braintree//lib/braintree/gateway.rb#81
  def sepa_direct_debit_account; end

  # source://braintree//lib/braintree/gateway.rb#93
  def settlement_batch_summary; end

  # source://braintree//lib/braintree/gateway.rb#97
  def subscription; end

  # source://braintree//lib/braintree/gateway.rb#109
  def testing; end

  # source://braintree//lib/braintree/gateway.rb#101
  def transaction; end

  # source://braintree//lib/braintree/gateway.rb#105
  def transaction_line_item; end

  # source://braintree//lib/braintree/gateway.rb#77
  def us_bank_account; end

  # source://braintree//lib/braintree/gateway.rb#113
  def us_bank_account_verification; end

  # source://braintree//lib/braintree/gateway.rb#117
  def verification; end

  # source://braintree//lib/braintree/gateway.rb#121
  def webhook_notification; end

  # source://braintree//lib/braintree/gateway.rb#125
  def webhook_testing; end
end

# source://braintree//lib/braintree/exceptions.rb#10
class Braintree::GatewayTimeoutError < ::Braintree::BraintreeError; end

# source://braintree//lib/braintree/google_pay_card.rb#2
class Braintree::GooglePayCard
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [GooglePayCard] a new instance of GooglePayCard
  #
  # source://braintree//lib/braintree/google_pay_card.rb#31
  def initialize(gateway, attributes); end

  # Returns the value of attribute bin.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#5
  def bin; end

  # source://braintree//lib/braintree/google_pay_card.rb#45
  def card_type; end

  # Returns the value of attribute commercial.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#6
  def commercial; end

  # Returns the value of attribute country_of_issuance.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#7
  def country_of_issuance; end

  # Returns the value of attribute created_at.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#8
  def created_at; end

  # Returns the value of attribute customer_id.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#9
  def customer_id; end

  # Returns the value of attribute debit.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#10
  def debit; end

  # Returns the value of attribute default.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#11
  def default; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/google_pay_card.rb#37
  def default?; end

  # Returns the value of attribute durbin_regulated.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#12
  def durbin_regulated; end

  # Returns the value of attribute expiration_month.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#13
  def expiration_month; end

  # Returns the value of attribute expiration_year.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#14
  def expiration_year; end

  # Returns the value of attribute google_transaction_id.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#15
  def google_transaction_id; end

  # Returns the value of attribute healthcare.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#16
  def healthcare; end

  # Returns the value of attribute image_url.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#17
  def image_url; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/google_pay_card.rb#41
  def is_network_tokenized?; end

  # Returns the value of attribute issuing_bank.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#18
  def issuing_bank; end

  # source://braintree//lib/braintree/google_pay_card.rb#49
  def last_4; end

  # Returns the value of attribute payroll.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#19
  def payroll; end

  # Returns the value of attribute prepaid.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#20
  def prepaid; end

  # Returns the value of attribute product_id.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#21
  def product_id; end

  # Returns the value of attribute source_card_last_4.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#22
  def source_card_last_4; end

  # Returns the value of attribute source_card_type.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#23
  def source_card_type; end

  # Returns the value of attribute source_description.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#24
  def source_description; end

  # Returns the value of attribute subscriptions.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#25
  def subscriptions; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#26
  def token; end

  # Returns the value of attribute updated_at.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#27
  def updated_at; end

  # Returns the value of attribute virtual_card_last_4.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#28
  def virtual_card_last_4; end

  # Returns the value of attribute virtual_card_type.
  #
  # source://braintree//lib/braintree/google_pay_card.rb#29
  def virtual_card_type; end

  class << self
    # source://braintree//lib/braintree/google_pay_card.rb#57
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/granted_payment_instrument_update.rb#2
class Braintree::GrantedPaymentInstrumentUpdate
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [GrantedPaymentInstrumentUpdate] a new instance of GrantedPaymentInstrumentUpdate
  #
  # source://braintree//lib/braintree/granted_payment_instrument_update.rb#11
  def initialize(attributes); end

  # Returns the value of attribute grant_owner_merchant_id.
  #
  # source://braintree//lib/braintree/granted_payment_instrument_update.rb#5
  def grant_owner_merchant_id; end

  # Returns the value of attribute grant_recipient_merchant_id.
  #
  # source://braintree//lib/braintree/granted_payment_instrument_update.rb#6
  def grant_recipient_merchant_id; end

  # Returns the value of attribute payment_method_nonce.
  #
  # source://braintree//lib/braintree/granted_payment_instrument_update.rb#7
  def payment_method_nonce; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/granted_payment_instrument_update.rb#8
  def token; end

  # Returns the value of attribute updated_fields.
  #
  # source://braintree//lib/braintree/granted_payment_instrument_update.rb#9
  def updated_fields; end

  class << self
    # source://braintree//lib/braintree/granted_payment_instrument_update.rb#18
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/graphql_client.rb#2
class Braintree::GraphQLClient < ::Braintree::Http
  # @return [GraphQLClient] a new instance of GraphQLClient
  #
  # source://braintree//lib/braintree/graphql_client.rb#4
  def initialize(config); end

  # source://braintree//lib/braintree/graphql_client.rb#28
  def _parse_response(response); end

  # source://braintree//lib/braintree/graphql_client.rb#13
  def query(definition, variables = T.unsafe(nil), operationName = T.unsafe(nil)); end
end

# source://braintree//lib/braintree/http.rb#2
class Braintree::Http
  # @return [Http] a new instance of Http
  #
  # source://braintree//lib/braintree/http.rb#6
  def initialize(config); end

  # source://braintree//lib/braintree/http.rb#151
  def _add_file_part(key, file); end

  # source://braintree//lib/braintree/http.rb#147
  def _add_form_field(key, value); end

  # source://braintree//lib/braintree/http.rb#170
  def _body(response); end

  # source://braintree//lib/braintree/http.rb#57
  def _build_query_string(params); end

  # source://braintree//lib/braintree/http.rb#52
  def _build_xml(params); end

  # source://braintree//lib/braintree/http.rb#83
  def _compose_headers(header_overrides = T.unsafe(nil)); end

  # source://braintree//lib/braintree/http.rb#181
  def _current_time; end

  # source://braintree//lib/braintree/http.rb#185
  def _format_and_sanitize_body_for_log(input_xml); end

  # source://braintree//lib/braintree/http.rb#94
  def _http_do(http_verb, path, body = T.unsafe(nil), file = T.unsafe(nil), connection = T.unsafe(nil), header_overrides = T.unsafe(nil)); end

  # source://braintree//lib/braintree/http.rb#157
  def _mime_type_for_file_name(filename); end

  # source://braintree//lib/braintree/http.rb#68
  def _setup_connection(server = T.unsafe(nil), port = T.unsafe(nil)); end

  # source://braintree//lib/braintree/http.rb#193
  def _verify_ssl_certificate(preverify_ok, ssl_context); end

  # source://braintree//lib/braintree/http.rb#10
  def delete(path, query_params = T.unsafe(nil)); end

  # source://braintree//lib/braintree/http.rb#21
  def get(path, query_params = T.unsafe(nil)); end

  # source://braintree//lib/braintree/http.rb#30
  def post(path, params = T.unsafe(nil), file = T.unsafe(nil)); end

  # source://braintree//lib/braintree/http.rb#43
  def put(path, params = T.unsafe(nil)); end
end

# source://braintree//lib/braintree/http.rb#4
Braintree::Http::LINE_FEED = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/exceptions.rb#14
class Braintree::InvalidChallenge < ::Braintree::BraintreeError; end

# source://braintree//lib/braintree/exceptions.rb#12
class Braintree::InvalidSignature < ::Braintree::BraintreeError; end

# source://braintree//lib/braintree/local_payment_completed.rb#2
class Braintree::LocalPaymentCompleted
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [LocalPaymentCompleted] a new instance of LocalPaymentCompleted
  #
  # source://braintree//lib/braintree/local_payment_completed.rb#10
  def initialize(attributes); end

  # Returns the value of attribute payer_id.
  #
  # source://braintree//lib/braintree/local_payment_completed.rb#6
  def payer_id; end

  # Returns the value of attribute payment_id.
  #
  # source://braintree//lib/braintree/local_payment_completed.rb#5
  def payment_id; end

  # Returns the value of attribute payment_method_nonce.
  #
  # source://braintree//lib/braintree/local_payment_completed.rb#7
  def payment_method_nonce; end

  # Returns the value of attribute transaction.
  #
  # source://braintree//lib/braintree/local_payment_completed.rb#8
  def transaction; end

  class << self
    # source://braintree//lib/braintree/local_payment_completed.rb#19
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/local_payment_expired.rb#2
class Braintree::LocalPaymentExpired
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [LocalPaymentExpired] a new instance of LocalPaymentExpired
  #
  # source://braintree//lib/braintree/local_payment_expired.rb#8
  def initialize(attributes); end

  # Returns the value of attribute payment_context_id.
  #
  # source://braintree//lib/braintree/local_payment_expired.rb#6
  def payment_context_id; end

  # Returns the value of attribute payment_id.
  #
  # source://braintree//lib/braintree/local_payment_expired.rb#5
  def payment_id; end

  class << self
    # source://braintree//lib/braintree/local_payment_expired.rb#16
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/local_payment_funded.rb#2
class Braintree::LocalPaymentFunded
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [LocalPaymentFunded] a new instance of LocalPaymentFunded
  #
  # source://braintree//lib/braintree/local_payment_funded.rb#9
  def initialize(attributes); end

  # Returns the value of attribute payment_context_id.
  #
  # source://braintree//lib/braintree/local_payment_funded.rb#6
  def payment_context_id; end

  # Returns the value of attribute payment_id.
  #
  # source://braintree//lib/braintree/local_payment_funded.rb#5
  def payment_id; end

  # Returns the value of attribute transaction.
  #
  # source://braintree//lib/braintree/local_payment_funded.rb#7
  def transaction; end

  class << self
    # source://braintree//lib/braintree/local_payment_funded.rb#18
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/local_payment_reversed.rb#2
class Braintree::LocalPaymentReversed
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [LocalPaymentReversed] a new instance of LocalPaymentReversed
  #
  # source://braintree//lib/braintree/local_payment_reversed.rb#7
  def initialize(attributes); end

  # Returns the value of attribute payment_id.
  #
  # source://braintree//lib/braintree/local_payment_reversed.rb#5
  def payment_id; end

  class << self
    # source://braintree//lib/braintree/local_payment_reversed.rb#15
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/merchant.rb#2
class Braintree::Merchant
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [Merchant] a new instance of Merchant
  #
  # source://braintree//lib/braintree/merchant.rb#14
  def initialize(gateway, attributes); end

  # Returns the value of attribute company_name.
  #
  # source://braintree//lib/braintree/merchant.rb#5
  def company_name; end

  # Returns the value of attribute country_code_alpha2.
  #
  # source://braintree//lib/braintree/merchant.rb#6
  def country_code_alpha2; end

  # Returns the value of attribute country_code_alpha3.
  #
  # source://braintree//lib/braintree/merchant.rb#7
  def country_code_alpha3; end

  # Returns the value of attribute country_code_numeric.
  #
  # source://braintree//lib/braintree/merchant.rb#8
  def country_code_numeric; end

  # Returns the value of attribute country_name.
  #
  # source://braintree//lib/braintree/merchant.rb#9
  def country_name; end

  # Returns the value of attribute email.
  #
  # source://braintree//lib/braintree/merchant.rb#10
  def email; end

  # Returns the value of attribute id.
  #
  # source://braintree//lib/braintree/merchant.rb#11
  def id; end

  # Returns the value of attribute merchant_accounts.
  #
  # source://braintree//lib/braintree/merchant.rb#12
  def merchant_accounts; end

  class << self
    # source://braintree//lib/braintree/merchant.rb#26
    def _new(*args); end

    # source://braintree//lib/braintree/merchant.rb#30
    def provision_raw_apple_pay; end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/merchant_account.rb#2
class Braintree::MerchantAccount
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [MerchantAccount] a new instance of MerchantAccount
  #
  # source://braintree//lib/braintree/merchant_account.rb#52
  def initialize(gateway, attributes); end

  # Returns the value of attribute business_details.
  #
  # source://braintree//lib/braintree/merchant_account.rb#21
  def business_details; end

  # Returns the value of attribute currency_iso_code.
  #
  # source://braintree//lib/braintree/merchant_account.rb#22
  def currency_iso_code; end

  # Returns the value of attribute default.
  #
  # source://braintree//lib/braintree/merchant_account.rb#23
  def default; end

  # Returns the value of attribute default.
  #
  # source://braintree//lib/braintree/merchant_account.rb#23
  def default?; end

  # Returns the value of attribute funding_details.
  #
  # source://braintree//lib/braintree/merchant_account.rb#24
  def funding_details; end

  # Returns the value of attribute id.
  #
  # source://braintree//lib/braintree/merchant_account.rb#25
  def id; end

  # Returns the value of attribute individual_details.
  #
  # source://braintree//lib/braintree/merchant_account.rb#26
  def individual_details; end

  # source://braintree//lib/braintree/merchant_account.rb#68
  def inspect; end

  # Returns the value of attribute master_merchant_account.
  #
  # source://braintree//lib/braintree/merchant_account.rb#27
  def master_merchant_account; end

  # Returns the value of attribute status.
  #
  # source://braintree//lib/braintree/merchant_account.rb#28
  def status; end

  class << self
    # source://braintree//lib/braintree/merchant_account.rb#63
    def _new(*args); end

    # source://braintree//lib/braintree/merchant_account.rb#32
    def create(*args); end

    # source://braintree//lib/braintree/merchant_account.rb#36
    def create!(*args); end

    # source://braintree//lib/braintree/merchant_account.rb#40
    def find(*args); end

    # source://braintree//lib/braintree/merchant_account.rb#44
    def update(*args); end

    # source://braintree//lib/braintree/merchant_account.rb#48
    def update!(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/merchant_account/address_details.rb#3
class Braintree::MerchantAccount::AddressDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [AddressDetails] a new instance of AddressDetails
  #
  # source://braintree//lib/braintree/merchant_account/address_details.rb#11
  def initialize(attributes); end

  # Returns the value of attribute locality.
  #
  # source://braintree//lib/braintree/merchant_account/address_details.rb#6
  def locality; end

  # Returns the value of attribute postal_code.
  #
  # source://braintree//lib/braintree/merchant_account/address_details.rb#7
  def postal_code; end

  # Returns the value of attribute region.
  #
  # source://braintree//lib/braintree/merchant_account/address_details.rb#8
  def region; end

  # Returns the value of attribute street_address.
  #
  # source://braintree//lib/braintree/merchant_account/address_details.rb#9
  def street_address; end
end

# source://braintree//lib/braintree/merchant_account/business_details.rb#3
class Braintree::MerchantAccount::BusinessDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [BusinessDetails] a new instance of BusinessDetails
  #
  # source://braintree//lib/braintree/merchant_account/business_details.rb#11
  def initialize(attributes); end

  # Returns the value of attribute address_details.
  #
  # source://braintree//lib/braintree/merchant_account/business_details.rb#6
  def address_details; end

  # Returns the value of attribute dba_name.
  #
  # source://braintree//lib/braintree/merchant_account/business_details.rb#7
  def dba_name; end

  # Returns the value of attribute legal_name.
  #
  # source://braintree//lib/braintree/merchant_account/business_details.rb#8
  def legal_name; end

  # Returns the value of attribute tax_id.
  #
  # source://braintree//lib/braintree/merchant_account/business_details.rb#9
  def tax_id; end
end

# source://braintree//lib/braintree/merchant_account.rb#11
module Braintree::MerchantAccount::FundingDestination; end

# source://braintree//lib/braintree/merchant_account.rb#12
Braintree::MerchantAccount::FundingDestination::Bank = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/merchant_account.rb#14
Braintree::MerchantAccount::FundingDestination::Email = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/merchant_account.rb#13
Braintree::MerchantAccount::FundingDestination::MobilePhone = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/merchant_account.rb#17
module Braintree::MerchantAccount::FundingDestinations
  include ::Braintree::MerchantAccount::FundingDestination
end

# source://braintree//lib/braintree/merchant_account/funding_details.rb#3
class Braintree::MerchantAccount::FundingDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [FundingDetails] a new instance of FundingDetails
  #
  # source://braintree//lib/braintree/merchant_account/funding_details.rb#13
  def initialize(attributes); end

  # Returns the value of attribute account_number_last_4.
  #
  # source://braintree//lib/braintree/merchant_account/funding_details.rb#6
  def account_number_last_4; end

  # Returns the value of attribute descriptor.
  #
  # source://braintree//lib/braintree/merchant_account/funding_details.rb#7
  def descriptor; end

  # Returns the value of attribute destination.
  #
  # source://braintree//lib/braintree/merchant_account/funding_details.rb#8
  def destination; end

  # Returns the value of attribute email.
  #
  # source://braintree//lib/braintree/merchant_account/funding_details.rb#9
  def email; end

  # Returns the value of attribute mobile_phone.
  #
  # source://braintree//lib/braintree/merchant_account/funding_details.rb#10
  def mobile_phone; end

  # Returns the value of attribute routing_number.
  #
  # source://braintree//lib/braintree/merchant_account/funding_details.rb#11
  def routing_number; end
end

# source://braintree//lib/braintree/merchant_account/individual_details.rb#3
class Braintree::MerchantAccount::IndividualDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [IndividualDetails] a new instance of IndividualDetails
  #
  # source://braintree//lib/braintree/merchant_account/individual_details.rb#14
  def initialize(attributes); end

  # Returns the value of attribute address_details.
  #
  # source://braintree//lib/braintree/merchant_account/individual_details.rb#6
  def address_details; end

  # Returns the value of attribute date_of_birth.
  #
  # source://braintree//lib/braintree/merchant_account/individual_details.rb#7
  def date_of_birth; end

  # Returns the value of attribute email.
  #
  # source://braintree//lib/braintree/merchant_account/individual_details.rb#8
  def email; end

  # Returns the value of attribute first_name.
  #
  # source://braintree//lib/braintree/merchant_account/individual_details.rb#9
  def first_name; end

  # Returns the value of attribute last_name.
  #
  # source://braintree//lib/braintree/merchant_account/individual_details.rb#10
  def last_name; end

  # Returns the value of attribute phone.
  #
  # source://braintree//lib/braintree/merchant_account/individual_details.rb#11
  def phone; end

  # Returns the value of attribute ssn_last_4.
  #
  # source://braintree//lib/braintree/merchant_account/individual_details.rb#12
  def ssn_last_4; end
end

# source://braintree//lib/braintree/merchant_account.rb#5
module Braintree::MerchantAccount::Status; end

# source://braintree//lib/braintree/merchant_account.rb#7
Braintree::MerchantAccount::Status::Active = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/merchant_account.rb#6
Braintree::MerchantAccount::Status::Pending = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/merchant_account.rb#8
Braintree::MerchantAccount::Status::Suspended = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/merchant_account_gateway.rb#2
class Braintree::MerchantAccountGateway
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [MerchantAccountGateway] a new instance of MerchantAccountGateway
  #
  # source://braintree//lib/braintree/merchant_account_gateway.rb#5
  def initialize(gateway); end

  # source://braintree//lib/braintree/merchant_account_gateway.rb#72
  def _create_for_currency(params); end

  # source://braintree//lib/braintree/merchant_account_gateway.rb#54
  def _do_create(path, params = T.unsafe(nil)); end

  # source://braintree//lib/braintree/merchant_account_gateway.rb#63
  def _do_update(path, params = T.unsafe(nil)); end

  # source://braintree//lib/braintree/merchant_account_gateway.rb#16
  def _fetch_merchant_accounts(page_number); end

  # source://braintree//lib/braintree/merchant_account_gateway.rb#11
  def all; end

  # source://braintree//lib/braintree/merchant_account_gateway.rb#23
  def create(attributes); end

  # source://braintree//lib/braintree/merchant_account_gateway.rb#29
  def create!(*args); end

  # source://braintree//lib/braintree/merchant_account_gateway.rb#50
  def create_for_currency(params); end

  # source://braintree//lib/braintree/merchant_account_gateway.rb#33
  def find(merchant_account_id); end

  # source://braintree//lib/braintree/merchant_account_gateway.rb#41
  def update(merchant_account_id, attributes); end

  # source://braintree//lib/braintree/merchant_account_gateway.rb#46
  def update!(*args); end

  class << self
    # source://braintree//lib/braintree/merchant_account_gateway.rb#122
    def _create_signature; end

    # NEXT_MAJOR_VERSION this is part of Marketplace and shouldn't be removed unless we're removing all Marketplace code
    #
    # source://braintree//lib/braintree/merchant_account_gateway.rb#97
    def _deprecated_create_signature; end

    # NEXT_MAJOR_VERSION this is part of Marketplace and shouldn't be removed unless we're removing all Marketplace code
    #
    # source://braintree//lib/braintree/merchant_account_gateway.rb#87
    def _detect_signature(attributes); end

    # source://braintree//lib/braintree/merchant_account_gateway.rb#108
    def _signature; end

    # source://braintree//lib/braintree/merchant_account_gateway.rb#126
    def _update_signature; end
  end
end

# source://braintree//lib/braintree/merchant_gateway.rb#2
class Braintree::MerchantGateway
  # @return [MerchantGateway] a new instance of MerchantGateway
  #
  # source://braintree//lib/braintree/merchant_gateway.rb#3
  def initialize(gateway); end

  # source://braintree//lib/braintree/merchant_gateway.rb#23
  def _create_merchant(params); end

  # source://braintree//lib/braintree/merchant_gateway.rb#19
  def create(params); end

  # source://braintree//lib/braintree/merchant_gateway.rb#8
  def provision_raw_apple_pay; end
end

# source://braintree//lib/braintree/meta_checkout_card.rb#2
class Braintree::MetaCheckoutCard
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  include ::Braintree::Util::TokenEquality
  extend ::Braintree::BaseModule::Methods

  # @return [MetaCheckoutCard] a new instance of MetaCheckoutCard
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#33
  def initialize(gateway, attributes); end

  # source://braintree//lib/braintree/meta_checkout_card.rb#40
  def _most_recent_verification(attributes); end

  # Returns the value of attribute bin.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#6
  def bin; end

  # Returns the value of attribute card_type.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#8
  def card_type; end

  # Returns the value of attribute cardholder_name.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#9
  def cardholder_name; end

  # Returns the value of attribute commercial.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#10
  def commercial; end

  # Returns the value of attribute container_id.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#7
  def container_id; end

  # Returns the value of attribute country_of_issuance.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#11
  def country_of_issuance; end

  # Returns the value of attribute created_at.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#12
  def created_at; end

  # Returns the value of attribute customer_id.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#13
  def customer_id; end

  # Returns the value of attribute customer_location.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#14
  def customer_location; end

  # Returns the value of attribute debit.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#15
  def debit; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#45
  def default?; end

  # Returns the value of attribute durbin_regulated.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#16
  def durbin_regulated; end

  # Expiration date formatted as MM/YYYY
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#50
  def expiration_date; end

  # Returns the value of attribute expiration_month.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#17
  def expiration_month; end

  # Returns the value of attribute expiration_year.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#18
  def expiration_year; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#54
  def expired?; end

  # Returns the value of attribute healthcare.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#19
  def healthcare; end

  # Returns the value of attribute image_url.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#20
  def image_url; end

  # source://braintree//lib/braintree/meta_checkout_card.rb#58
  def inspect; end

  # Returns the value of attribute issuing_bank.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#21
  def issuing_bank; end

  # Returns the value of attribute last_4.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#22
  def last_4; end

  # source://braintree//lib/braintree/meta_checkout_card.rb#67
  def masked_number; end

  # Returns the value of attribute payroll.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#23
  def payroll; end

  # Returns the value of attribute prepaid.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#24
  def prepaid; end

  # Returns the value of attribute product_id.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#25
  def product_id; end

  # Returns the value of attribute subscriptions.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#26
  def subscriptions; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#27
  def token; end

  # Returns the value of attribute unique_number_identifier.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#28
  def unique_number_identifier; end

  # Returns the value of attribute updated_at.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#29
  def updated_at; end

  # Returns the value of attribute verification.
  #
  # source://braintree//lib/braintree/meta_checkout_card.rb#30
  def verification; end

  class << self
    # source://braintree//lib/braintree/meta_checkout_card.rb#75
    def _attributes; end

    # source://braintree//lib/braintree/meta_checkout_card.rb#85
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/meta_checkout_token.rb#2
class Braintree::MetaCheckoutToken
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  include ::Braintree::Util::TokenEquality
  extend ::Braintree::BaseModule::Methods

  # @return [MetaCheckoutToken] a new instance of MetaCheckoutToken
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#33
  def initialize(gateway, attributes); end

  # source://braintree//lib/braintree/meta_checkout_token.rb#39
  def _most_recent_verification(attributes); end

  # Returns the value of attribute bin.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#6
  def bin; end

  # Returns the value of attribute card_type.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#8
  def card_type; end

  # Returns the value of attribute cardholder_name.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#9
  def cardholder_name; end

  # Returns the value of attribute commercial.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#10
  def commercial; end

  # Returns the value of attribute container_id.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#7
  def container_id; end

  # Returns the value of attribute country_of_issuance.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#11
  def country_of_issuance; end

  # Returns the value of attribute created_at.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#12
  def created_at; end

  # Returns the value of attribute cryptogram.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#13
  def cryptogram; end

  # Returns the value of attribute customer_id.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#14
  def customer_id; end

  # Returns the value of attribute customer_location.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#15
  def customer_location; end

  # Returns the value of attribute debit.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#16
  def debit; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#44
  def default?; end

  # Returns the value of attribute durbin_regulated.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#17
  def durbin_regulated; end

  # Returns the value of attribute ecommerce_indicator.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#18
  def ecommerce_indicator; end

  # Expiration date formatted as MM/YYYY
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#49
  def expiration_date; end

  # Returns the value of attribute expiration_month.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#19
  def expiration_month; end

  # Returns the value of attribute expiration_year.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#20
  def expiration_year; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#53
  def expired?; end

  # Returns the value of attribute healthcare.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#21
  def healthcare; end

  # Returns the value of attribute image_url.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#22
  def image_url; end

  # source://braintree//lib/braintree/meta_checkout_token.rb#57
  def inspect; end

  # Returns the value of attribute issuing_bank.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#23
  def issuing_bank; end

  # Returns the value of attribute last_4.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#24
  def last_4; end

  # source://braintree//lib/braintree/meta_checkout_token.rb#66
  def masked_number; end

  # Returns the value of attribute payroll.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#25
  def payroll; end

  # Returns the value of attribute prepaid.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#26
  def prepaid; end

  # Returns the value of attribute product_id.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#27
  def product_id; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#28
  def token; end

  # Returns the value of attribute unique_number_identifier.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#29
  def unique_number_identifier; end

  # Returns the value of attribute updated_at.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#30
  def updated_at; end

  # Returns the value of attribute verification.
  #
  # source://braintree//lib/braintree/meta_checkout_token.rb#31
  def verification; end

  class << self
    # source://braintree//lib/braintree/meta_checkout_token.rb#74
    def _attributes; end

    # source://braintree//lib/braintree/meta_checkout_token.rb#84
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/modification.rb#2
class Braintree::Modification
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [Modification] a new instance of Modification
  #
  # source://braintree//lib/braintree/modification.rb#25
  def initialize(attributes); end

  # Returns the value of attribute amount.
  #
  # source://braintree//lib/braintree/modification.rb#5
  def amount; end

  # Returns the value of attribute created_at.
  #
  # source://braintree//lib/braintree/modification.rb#6
  def created_at; end

  # Returns the value of attribute current_billing_cycle.
  #
  # source://braintree//lib/braintree/modification.rb#7
  def current_billing_cycle; end

  # Returns the value of attribute description.
  #
  # source://braintree//lib/braintree/modification.rb#8
  def description; end

  # Returns the value of attribute id.
  #
  # source://braintree//lib/braintree/modification.rb#9
  def id; end

  # Returns the value of attribute kind.
  #
  # source://braintree//lib/braintree/modification.rb#10
  def kind; end

  # Returns the value of attribute merchant_id.
  #
  # source://braintree//lib/braintree/modification.rb#11
  def merchant_id; end

  # Returns the value of attribute name.
  #
  # source://braintree//lib/braintree/modification.rb#12
  def name; end

  # Returns the value of attribute never_expires.
  #
  # source://braintree//lib/braintree/modification.rb#13
  def never_expires; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/modification.rb#30
  def never_expires?; end

  # Returns the value of attribute number_of_billing_cycles.
  #
  # source://braintree//lib/braintree/modification.rb#14
  def number_of_billing_cycles; end

  # Returns the value of attribute quantity.
  #
  # source://braintree//lib/braintree/modification.rb#15
  def quantity; end

  # Returns the value of attribute updated_at.
  #
  # source://braintree//lib/braintree/modification.rb#16
  def updated_at; end

  class << self
    # source://braintree//lib/braintree/modification.rb#20
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/exceptions.rb#16
class Braintree::NotFoundError < ::Braintree::BraintreeError; end

# source://braintree//lib/braintree/oauth_credentials.rb#2
class Braintree::OAuthCredentials
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [OAuthCredentials] a new instance of OAuthCredentials
  #
  # source://braintree//lib/braintree/oauth_credentials.rb#10
  def initialize(attributes); end

  # Returns the value of attribute access_token.
  #
  # source://braintree//lib/braintree/oauth_credentials.rb#5
  def access_token; end

  # Returns the value of attribute expires_at.
  #
  # source://braintree//lib/braintree/oauth_credentials.rb#6
  def expires_at; end

  # Returns the value of attribute refresh_token.
  #
  # source://braintree//lib/braintree/oauth_credentials.rb#7
  def refresh_token; end

  # Returns the value of attribute token_type.
  #
  # source://braintree//lib/braintree/oauth_credentials.rb#8
  def token_type; end

  class << self
    # source://braintree//lib/braintree/oauth_credentials.rb#18
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/oauth_gateway.rb#2
class Braintree::OAuthGateway
  # @return [OAuthGateway] a new instance of OAuthGateway
  #
  # source://braintree//lib/braintree/oauth_gateway.rb#3
  def initialize(gateway); end

  # source://braintree//lib/braintree/oauth_gateway.rb#19
  def _create_token(params); end

  # source://braintree//lib/braintree/oauth_gateway.rb#66
  def _sub_array_query(params, root); end

  # source://braintree//lib/braintree/oauth_gateway.rb#59
  def _sub_query(params, root); end

  # source://braintree//lib/braintree/oauth_gateway.rb#45
  def connect_url(raw_params); end

  # source://braintree//lib/braintree/oauth_gateway.rb#9
  def create_token_from_code(params); end

  # source://braintree//lib/braintree/oauth_gateway.rb#14
  def create_token_from_refresh_token(params); end

  # source://braintree//lib/braintree/oauth_gateway.rb#34
  def revoke_access_token(access_token); end
end

# source://braintree//lib/braintree/paginated_collection.rb#2
class Braintree::PaginatedCollection
  include ::Prelude::Enumerator
  include ::Enumerable

  # @return [PaginatedCollection] a new instance of PaginatedCollection
  #
  # source://braintree//lib/braintree/paginated_collection.rb#5
  def initialize(&block); end

  # source://braintree//lib/braintree/paginated_collection.rb#9
  def each(&block); end
end

# source://braintree//lib/braintree/paginated_result.rb#2
class Braintree::PaginatedResult
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [PaginatedResult] a new instance of PaginatedResult
  #
  # source://braintree//lib/braintree/paginated_result.rb#9
  def initialize(total_items, page_size, current_page); end

  # Returns the value of attribute current_page.
  #
  # source://braintree//lib/braintree/paginated_result.rb#5
  def current_page; end

  # Returns the value of attribute page_size.
  #
  # source://braintree//lib/braintree/paginated_result.rb#6
  def page_size; end

  # Returns the value of attribute total_items.
  #
  # source://braintree//lib/braintree/paginated_result.rb#7
  def total_items; end
end

# source://braintree//lib/braintree/paypal_account.rb#2
class Braintree::PayPalAccount
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [PayPalAccount] a new instance of PayPalAccount
  #
  # source://braintree//lib/braintree/paypal_account.rb#16
  def initialize(gateway, attributes); end

  # Returns the value of attribute billing_agreement_id.
  #
  # source://braintree//lib/braintree/paypal_account.rb#5
  def billing_agreement_id; end

  # Returns the value of attribute created_at.
  #
  # source://braintree//lib/braintree/paypal_account.rb#6
  def created_at; end

  # Returns the value of attribute customer_id.
  #
  # source://braintree//lib/braintree/paypal_account.rb#7
  def customer_id; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/paypal_account.rb#54
  def default?; end

  # Returns the value of attribute email.
  #
  # source://braintree//lib/braintree/paypal_account.rb#8
  def email; end

  # Returns the value of attribute image_url.
  #
  # source://braintree//lib/braintree/paypal_account.rb#9
  def image_url; end

  # Returns the value of attribute payer_id.
  #
  # source://braintree//lib/braintree/paypal_account.rb#10
  def payer_id; end

  # Returns the value of attribute revoked_at.
  #
  # source://braintree//lib/braintree/paypal_account.rb#11
  def revoked_at; end

  # Returns the value of attribute subscriptions.
  #
  # source://braintree//lib/braintree/paypal_account.rb#12
  def subscriptions; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/paypal_account.rb#13
  def token; end

  # Returns the value of attribute updated_at.
  #
  # source://braintree//lib/braintree/paypal_account.rb#14
  def updated_at; end

  class << self
    # source://braintree//lib/braintree/paypal_account.rb#26
    def _new(*args); end

    # source://braintree//lib/braintree/paypal_account.rb#30
    def create(attributes); end

    # source://braintree//lib/braintree/paypal_account.rb#42
    def delete(token); end

    # source://braintree//lib/braintree/paypal_account.rb#34
    def find(token); end

    # source://braintree//lib/braintree/paypal_account.rb#46
    def sale(token, transaction_attributes); end

    # source://braintree//lib/braintree/paypal_account.rb#50
    def sale!(token, transaction_attributes); end

    # source://braintree//lib/braintree/paypal_account.rb#38
    def update(token, attributes); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/paypal_account_gateway.rb#2
class Braintree::PayPalAccountGateway
  # @return [PayPalAccountGateway] a new instance of PayPalAccountGateway
  #
  # source://braintree//lib/braintree/paypal_account_gateway.rb#3
  def initialize(gateway); end

  # source://braintree//lib/braintree/paypal_account_gateway.rb#31
  def _do_create(path, params); end

  # source://braintree//lib/braintree/paypal_account_gateway.rb#42
  def _do_update(http_verb, path, params); end

  # source://braintree//lib/braintree/paypal_account_gateway.rb#17
  def create(attributes); end

  # source://braintree//lib/braintree/paypal_account_gateway.rb#27
  def delete(token); end

  # source://braintree//lib/braintree/paypal_account_gateway.rb#9
  def find(token); end

  # source://braintree//lib/braintree/paypal_account_gateway.rb#22
  def update(token, attributes); end

  class << self
    # source://braintree//lib/braintree/paypal_account_gateway.rb#61
    def _create_nested_signature; end

    # source://braintree//lib/braintree/paypal_account_gateway.rb#53
    def _create_signature; end

    # source://braintree//lib/braintree/paypal_account_gateway.rb#68
    def _update_signature; end
  end
end

# source://braintree//lib/braintree/payment_instrument_type.rb#2
module Braintree::PaymentInstrumentType; end

# source://braintree//lib/braintree/payment_instrument_type.rb#3
Braintree::PaymentInstrumentType::ApplePayCard = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/payment_instrument_type.rb#4
Braintree::PaymentInstrumentType::CreditCard = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/payment_instrument_type.rb#5
Braintree::PaymentInstrumentType::GooglePayCard = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/payment_instrument_type.rb#6
Braintree::PaymentInstrumentType::LocalPayment = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/payment_instrument_type.rb#7
Braintree::PaymentInstrumentType::MetaCheckoutCard = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/payment_instrument_type.rb#8
Braintree::PaymentInstrumentType::MetaCheckoutToken = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/payment_instrument_type.rb#9
Braintree::PaymentInstrumentType::PayPalAccount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/payment_instrument_type.rb#10
Braintree::PaymentInstrumentType::PayPalHere = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/payment_instrument_type.rb#11
Braintree::PaymentInstrumentType::SamsungPayCard = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/payment_instrument_type.rb#12
Braintree::PaymentInstrumentType::SepaDirectDebitAccount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/payment_instrument_type.rb#13
Braintree::PaymentInstrumentType::UsBankAccount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/payment_instrument_type.rb#14
Braintree::PaymentInstrumentType::VenmoAccount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/payment_instrument_type.rb#15
Braintree::PaymentInstrumentType::VisaCheckoutCard = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/payment_method.rb#2
class Braintree::PaymentMethod
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  class << self
    # source://braintree//lib/braintree/payment_method.rb#5
    def create(*args); end

    # source://braintree//lib/braintree/payment_method.rb#9
    def create!(*args); end

    # source://braintree//lib/braintree/payment_method.rb#25
    def delete(*args); end

    # source://braintree//lib/braintree/payment_method.rb#13
    def find(*args); end

    # source://braintree//lib/braintree/payment_method.rb#29
    def grant(*args); end

    # source://braintree//lib/braintree/payment_method.rb#33
    def revoke(*args); end

    # source://braintree//lib/braintree/payment_method.rb#17
    def update(*args); end

    # source://braintree//lib/braintree/payment_method.rb#21
    def update!(*args); end
  end
end

# source://braintree//lib/braintree/payment_method_customer_data_updated_metadata.rb#2
class Braintree::PaymentMethodCustomerDataUpdatedMetadata
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [PaymentMethodCustomerDataUpdatedMetadata] a new instance of PaymentMethodCustomerDataUpdatedMetadata
  #
  # source://braintree//lib/braintree/payment_method_customer_data_updated_metadata.rb#10
  def initialize(gateway, attributes); end

  # Returns the value of attribute datetime_updated.
  #
  # source://braintree//lib/braintree/payment_method_customer_data_updated_metadata.rb#7
  def datetime_updated; end

  # Returns the value of attribute enriched_customer_data.
  #
  # source://braintree//lib/braintree/payment_method_customer_data_updated_metadata.rb#8
  def enriched_customer_data; end

  # Returns the value of attribute payment_method.
  #
  # source://braintree//lib/braintree/payment_method_customer_data_updated_metadata.rb#6
  def payment_method; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/payment_method_customer_data_updated_metadata.rb#5
  def token; end

  class << self
    # source://braintree//lib/braintree/payment_method_customer_data_updated_metadata.rb#20
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/payment_method_gateway.rb#2
class Braintree::PaymentMethodGateway
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [PaymentMethodGateway] a new instance of PaymentMethodGateway
  #
  # source://braintree//lib/braintree/payment_method_gateway.rb#5
  def initialize(gateway); end

  # source://braintree//lib/braintree/payment_method_gateway.rb#24
  def _do_create(path, params = T.unsafe(nil)); end

  # source://braintree//lib/braintree/payment_method_gateway.rb#110
  def _do_grant(path, params = T.unsafe(nil)); end

  # source://braintree//lib/braintree/payment_method_gateway.rb#134
  def _do_revoke(path, params = T.unsafe(nil)); end

  # source://braintree//lib/braintree/payment_method_gateway.rb#79
  def _do_update(http_verb, path, params); end

  # source://braintree//lib/braintree/payment_method_gateway.rb#11
  def create(attributes); end

  # source://braintree//lib/braintree/payment_method_gateway.rb#20
  def create!(*args); end

  # source://braintree//lib/braintree/payment_method_gateway.rb#35
  def delete(token, options = T.unsafe(nil)); end

  # source://braintree//lib/braintree/payment_method_gateway.rb#42
  def find(token); end

  # source://braintree//lib/braintree/payment_method_gateway.rb#90
  def grant(token, options = T.unsafe(nil)); end

  # source://braintree//lib/braintree/payment_method_gateway.rb#121
  def revoke(token); end

  # source://braintree//lib/braintree/payment_method_gateway.rb#66
  def update(token, attributes); end

  # source://braintree//lib/braintree/payment_method_gateway.rb#75
  def update!(*args); end

  class << self
    # source://braintree//lib/braintree/payment_method_gateway.rb#145
    def _create_signature; end

    # source://braintree//lib/braintree/payment_method_gateway.rb#153
    def _delete_signature; end

    # source://braintree//lib/braintree/payment_method_gateway.rb#157
    def _signature(type); end

    # source://braintree//lib/braintree/payment_method_gateway.rb#149
    def _update_signature; end
  end
end

# source://braintree//lib/braintree/payment_method_nonce.rb#2
class Braintree::PaymentMethodNonce
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [PaymentMethodNonce] a new instance of PaymentMethodNonce
  #
  # source://braintree//lib/braintree/payment_method_nonce.rb#25
  def initialize(gateway, attributes); end

  # Returns the value of attribute authentication_insight.
  #
  # source://braintree//lib/braintree/payment_method_nonce.rb#23
  def authentication_insight; end

  # Returns the value of attribute bin_data.
  #
  # source://braintree//lib/braintree/payment_method_nonce.rb#17
  def bin_data; end

  # Returns the value of attribute default.
  #
  # source://braintree//lib/braintree/payment_method_nonce.rb#18
  def default; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/payment_method_nonce.rb#33
  def default?; end

  # Returns the value of attribute details.
  #
  # source://braintree//lib/braintree/payment_method_nonce.rb#19
  def details; end

  # Returns the value of attribute nonce.
  #
  # source://braintree//lib/braintree/payment_method_nonce.rb#20
  def nonce; end

  # Returns the value of attribute three_d_secure_info.
  #
  # source://braintree//lib/braintree/payment_method_nonce.rb#21
  def three_d_secure_info; end

  # source://braintree//lib/braintree/payment_method_nonce.rb#37
  def to_s; end

  # Returns the value of attribute type.
  #
  # source://braintree//lib/braintree/payment_method_nonce.rb#22
  def type; end

  class << self
    # source://braintree//lib/braintree/payment_method_nonce.rb#45
    def _new(gateway, attributes); end

    # source://braintree//lib/braintree/payment_method_nonce.rb#5
    def create(*args); end

    # source://braintree//lib/braintree/payment_method_nonce.rb#9
    def create!(*args); end

    # source://braintree//lib/braintree/payment_method_nonce.rb#13
    def find(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/payment_method_nonce_details.rb#2
class Braintree::PaymentMethodNonceDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [PaymentMethodNonceDetails] a new instance of PaymentMethodNonceDetails
  #
  # source://braintree//lib/braintree/payment_method_nonce_details.rb#16
  def initialize(attributes); end

  # Returns the value of attribute bin.
  #
  # source://braintree//lib/braintree/payment_method_nonce_details.rb#5
  def bin; end

  # Returns the value of attribute card_type.
  #
  # source://braintree//lib/braintree/payment_method_nonce_details.rb#6
  def card_type; end

  # Returns the value of attribute expiration_month.
  #
  # source://braintree//lib/braintree/payment_method_nonce_details.rb#7
  def expiration_month; end

  # Returns the value of attribute expiration_year.
  #
  # source://braintree//lib/braintree/payment_method_nonce_details.rb#8
  def expiration_year; end

  # source://braintree//lib/braintree/payment_method_nonce_details.rb#22
  def inspect; end

  # Returns the value of attribute is_network_tokenized.
  #
  # source://braintree//lib/braintree/payment_method_nonce_details.rb#9
  def is_network_tokenized; end

  # Returns the value of attribute is_network_tokenized.
  #
  # source://braintree//lib/braintree/payment_method_nonce_details.rb#9
  def is_network_tokenized?; end

  # Returns the value of attribute last_two.
  #
  # source://braintree//lib/braintree/payment_method_nonce_details.rb#10
  def last_two; end

  # Returns the value of attribute payer_info.
  #
  # source://braintree//lib/braintree/payment_method_nonce_details.rb#11
  def payer_info; end

  # Returns the value of attribute sepa_direct_debit_account_nonce_details.
  #
  # source://braintree//lib/braintree/payment_method_nonce_details.rb#12
  def sepa_direct_debit_account_nonce_details; end
end

# source://braintree//lib/braintree/payment_method_nonce_details_payer_info.rb#2
class Braintree::PaymentMethodNonceDetailsPayerInfo
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [PaymentMethodNonceDetailsPayerInfo] a new instance of PaymentMethodNonceDetailsPayerInfo
  #
  # source://braintree//lib/braintree/payment_method_nonce_details_payer_info.rb#12
  def initialize(attributes); end

  # Returns the value of attribute billing_agreement_id.
  #
  # source://braintree//lib/braintree/payment_method_nonce_details_payer_info.rb#5
  def billing_agreement_id; end

  # Returns the value of attribute country_code.
  #
  # source://braintree//lib/braintree/payment_method_nonce_details_payer_info.rb#6
  def country_code; end

  # Returns the value of attribute email.
  #
  # source://braintree//lib/braintree/payment_method_nonce_details_payer_info.rb#7
  def email; end

  # Returns the value of attribute first_name.
  #
  # source://braintree//lib/braintree/payment_method_nonce_details_payer_info.rb#8
  def first_name; end

  # source://braintree//lib/braintree/payment_method_nonce_details_payer_info.rb#16
  def inspect; end

  # Returns the value of attribute last_name.
  #
  # source://braintree//lib/braintree/payment_method_nonce_details_payer_info.rb#9
  def last_name; end

  # Returns the value of attribute payer_id.
  #
  # source://braintree//lib/braintree/payment_method_nonce_details_payer_info.rb#10
  def payer_id; end
end

# source://braintree//lib/braintree/payment_method_nonce_gateway.rb#2
class Braintree::PaymentMethodNonceGateway
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [PaymentMethodNonceGateway] a new instance of PaymentMethodNonceGateway
  #
  # source://braintree//lib/braintree/payment_method_nonce_gateway.rb#5
  def initialize(gateway); end

  # source://braintree//lib/braintree/payment_method_nonce_gateway.rb#11
  def create(payment_method_token, args = T.unsafe(nil)); end

  # source://braintree//lib/braintree/payment_method_nonce_gateway.rb#28
  def create!(*args); end

  # source://braintree//lib/braintree/payment_method_nonce_gateway.rb#32
  def find(payment_method_nonce); end

  class << self
    # source://braintree//lib/braintree/payment_method_nonce_gateway.rb#19
    def _create_signature; end
  end
end

# source://braintree//lib/braintree/payment_method_parser.rb#2
module Braintree::PaymentMethodParser
  class << self
    # source://braintree//lib/braintree/payment_method_parser.rb#4
    def parse_payment_method(gateway, attributes); end
  end
end

# source://braintree//lib/braintree/plan.rb#2
class Braintree::Plan
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [Plan] a new instance of Plan
  #
  # source://braintree//lib/braintree/plan.rb#26
  def initialize(gateway, attributes); end

  # Returns the value of attribute add_ons.
  #
  # source://braintree//lib/braintree/plan.rb#5
  def add_ons; end

  # Returns the value of attribute billing_day_of_month.
  #
  # source://braintree//lib/braintree/plan.rb#6
  def billing_day_of_month; end

  # Returns the value of attribute billing_frequency.
  #
  # source://braintree//lib/braintree/plan.rb#7
  def billing_frequency; end

  # Returns the value of attribute created_at.
  #
  # source://braintree//lib/braintree/plan.rb#8
  def created_at; end

  # Returns the value of attribute currency_iso_code.
  #
  # source://braintree//lib/braintree/plan.rb#9
  def currency_iso_code; end

  # Returns the value of attribute description.
  #
  # source://braintree//lib/braintree/plan.rb#10
  def description; end

  # Returns the value of attribute discounts.
  #
  # source://braintree//lib/braintree/plan.rb#11
  def discounts; end

  # Returns the value of attribute id.
  #
  # source://braintree//lib/braintree/plan.rb#12
  def id; end

  # Returns the value of attribute merchant_id.
  #
  # source://braintree//lib/braintree/plan.rb#13
  def merchant_id; end

  # Returns the value of attribute name.
  #
  # source://braintree//lib/braintree/plan.rb#14
  def name; end

  # Returns the value of attribute number_of_billing_cycles.
  #
  # source://braintree//lib/braintree/plan.rb#15
  def number_of_billing_cycles; end

  # Returns the value of attribute price.
  #
  # source://braintree//lib/braintree/plan.rb#16
  def price; end

  # Returns the value of attribute trial_duration.
  #
  # source://braintree//lib/braintree/plan.rb#17
  def trial_duration; end

  # Returns the value of attribute trial_duration_unit.
  #
  # source://braintree//lib/braintree/plan.rb#18
  def trial_duration_unit; end

  # Returns the value of attribute trial_period.
  #
  # source://braintree//lib/braintree/plan.rb#19
  def trial_period; end

  # Returns the value of attribute updated_at.
  #
  # source://braintree//lib/braintree/plan.rb#20
  def updated_at; end

  class << self
    # source://braintree//lib/braintree/plan.rb#58
    def _new(*args); end

    # source://braintree//lib/braintree/plan.rb#22
    def all; end

    # source://braintree//lib/braintree/plan.rb#37
    def create(*args); end

    # source://braintree//lib/braintree/plan.rb#41
    def create!(*args); end

    # source://braintree//lib/braintree/plan.rb#45
    def find(*args); end

    # source://braintree//lib/braintree/plan.rb#49
    def update(*args); end

    # source://braintree//lib/braintree/plan.rb#53
    def update!(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/plan_gateway.rb#2
class Braintree::PlanGateway
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [PlanGateway] a new instance of PlanGateway
  #
  # source://braintree//lib/braintree/plan_gateway.rb#5
  def initialize(gateway); end

  # source://braintree//lib/braintree/plan_gateway.rb#105
  def _do_create(path, params); end

  # source://braintree//lib/braintree/plan_gateway.rb#11
  def all; end

  # source://braintree//lib/braintree/plan_gateway.rb#19
  def create(attributes); end

  # source://braintree//lib/braintree/plan_gateway.rb#24
  def create!(*args); end

  # source://braintree//lib/braintree/plan_gateway.rb#28
  def find(id); end

  # source://braintree//lib/braintree/plan_gateway.rb#36
  def update(plan_id, attributes); end

  # source://braintree//lib/braintree/plan_gateway.rb#48
  def update!(*args); end

  class << self
    # source://braintree//lib/braintree/plan_gateway.rb#86
    def _add_on_discount_signature; end

    # source://braintree//lib/braintree/plan_gateway.rb#52
    def _create_signature; end

    # source://braintree//lib/braintree/plan_gateway.rb#69
    def _update_signature; end
  end
end

# source://braintree//lib/braintree/processor_response_types.rb#2
module Braintree::ProcessorResponseTypes; end

# source://braintree//lib/braintree/processor_response_types.rb#3
Braintree::ProcessorResponseTypes::Approved = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/processor_response_types.rb#5
Braintree::ProcessorResponseTypes::HardDeclined = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/processor_response_types.rb#4
Braintree::ProcessorResponseTypes::SoftDeclined = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/exceptions.rb#18
class Braintree::RequestTimeoutError < ::Braintree::BraintreeError; end

# source://braintree//lib/braintree/resource_collection.rb#2
class Braintree::ResourceCollection
  include ::Prelude::Enumerator
  include ::Enumerable

  # @return [ResourceCollection] a new instance of ResourceCollection
  #
  # source://braintree//lib/braintree/resource_collection.rb#7
  def initialize(response, &block); end

  # Yields each item
  #
  # source://braintree//lib/braintree/resource_collection.rb#14
  def each(&block); end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/resource_collection.rb#21
  def empty?; end

  # Returns the first or the first N items in the collection or nil if the collection is empty
  #
  # source://braintree//lib/braintree/resource_collection.rb#26
  def first(amount = T.unsafe(nil)); end

  # Returns the value of attribute ids.
  #
  # source://braintree//lib/braintree/resource_collection.rb#5
  def ids; end

  # Only the maximum size of a resource collection can be determined since the data on the server can change while
  # fetching blocks of results for iteration.  For example, customers can be deleted while iterating, so the number
  # of results iterated over may be less than the maximum_size.  In general, this method should be avoided.
  #
  # source://braintree//lib/braintree/resource_collection.rb#38
  def maximum_size; end
end

# source://braintree//lib/braintree/revoked_payment_method_metadata.rb#2
class Braintree::RevokedPaymentMethodMetadata
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [RevokedPaymentMethodMetadata] a new instance of RevokedPaymentMethodMetadata
  #
  # source://braintree//lib/braintree/revoked_payment_method_metadata.rb#9
  def initialize(gateway, attributes); end

  # Returns the value of attribute customer_id.
  #
  # source://braintree//lib/braintree/revoked_payment_method_metadata.rb#5
  def customer_id; end

  # Returns the value of attribute revoked_payment_method.
  #
  # source://braintree//lib/braintree/revoked_payment_method_metadata.rb#7
  def revoked_payment_method; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/revoked_payment_method_metadata.rb#6
  def token; end

  class << self
    # source://braintree//lib/braintree/revoked_payment_method_metadata.rb#17
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/risk_data.rb#2
class Braintree::RiskData
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [RiskData] a new instance of RiskData
  #
  # source://braintree//lib/braintree/risk_data.rb#16
  def initialize(attributes); end

  # Returns the value of attribute customer_device_id.
  #
  # source://braintree//lib/braintree/risk_data.rb#5
  def customer_device_id; end

  # Returns the value of attribute customer_location_zip.
  #
  # source://braintree//lib/braintree/risk_data.rb#6
  def customer_location_zip; end

  # Returns the value of attribute customer_tenure.
  #
  # source://braintree//lib/braintree/risk_data.rb#7
  def customer_tenure; end

  # Returns the value of attribute decision.
  #
  # source://braintree//lib/braintree/risk_data.rb#8
  def decision; end

  # Returns the value of attribute decision_reasons.
  #
  # source://braintree//lib/braintree/risk_data.rb#9
  def decision_reasons; end

  # Returns the value of attribute device_data_captured.
  #
  # source://braintree//lib/braintree/risk_data.rb#10
  def device_data_captured; end

  # Returns the value of attribute fraud_service_provider.
  #
  # source://braintree//lib/braintree/risk_data.rb#11
  def fraud_service_provider; end

  # Returns the value of attribute id.
  #
  # source://braintree//lib/braintree/risk_data.rb#12
  def id; end

  # source://braintree//lib/braintree/risk_data.rb#21
  def inspect; end

  # Returns the value of attribute liability_shift.
  #
  # source://braintree//lib/braintree/risk_data.rb#13
  def liability_shift; end

  # Returns the value of attribute transaction_risk_score.
  #
  # source://braintree//lib/braintree/risk_data.rb#14
  def transaction_risk_score; end
end

# source://braintree//lib/braintree/risk_data/liability_shift.rb#3
class Braintree::RiskData::LiabilityShift
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [LiabilityShift] a new instance of LiabilityShift
  #
  # source://braintree//lib/braintree/risk_data/liability_shift.rb#9
  def initialize(attributes); end

  # Returns the value of attribute conditions.
  #
  # source://braintree//lib/braintree/risk_data/liability_shift.rb#7
  def conditions; end

  # source://braintree//lib/braintree/risk_data/liability_shift.rb#13
  def inspect; end

  # Returns the value of attribute responsible_party.
  #
  # source://braintree//lib/braintree/risk_data/liability_shift.rb#6
  def responsible_party; end
end

# source://braintree//lib/braintree/sha256_digest.rb#2
module Braintree::SHA256Digest
  class << self
    # source://braintree//lib/braintree/sha256_digest.rb#7
    def _hmac(key, message); end

    # source://braintree//lib/braintree/sha256_digest.rb#3
    def hexdigest(private_key, string); end
  end
end

# source://braintree//lib/braintree/exceptions.rb#24
class Braintree::SSLCertificateError < ::Braintree::BraintreeError; end

# source://braintree//lib/braintree/samsung_pay_card.rb#2
class Braintree::SamsungPayCard
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  include ::Braintree::Util::TokenEquality
  extend ::Braintree::BaseModule::Methods

  # @return [SamsungPayCard] a new instance of SamsungPayCard
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#32
  def initialize(gateway, attributes); end

  # Returns the value of attribute billing_address.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#6
  def billing_address; end

  # Returns the value of attribute bin.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#7
  def bin; end

  # Returns the value of attribute card_type.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#9
  def card_type; end

  # Returns the value of attribute cardholder_name.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#8
  def cardholder_name; end

  # Returns the value of attribute commercial.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#10
  def commercial; end

  # Returns the value of attribute country_of_issuance.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#11
  def country_of_issuance; end

  # Returns the value of attribute created_at.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#12
  def created_at; end

  # Returns the value of attribute customer_id.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#13
  def customer_id; end

  # Returns the value of attribute customer_location.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#14
  def customer_location; end

  # Returns the value of attribute debit.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#15
  def debit; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#39
  def default?; end

  # Returns the value of attribute durbin_regulated.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#16
  def durbin_regulated; end

  # Expiration date formatted as MM/YYYY
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#44
  def expiration_date; end

  # Returns the value of attribute expiration_month.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#17
  def expiration_month; end

  # Returns the value of attribute expiration_year.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#18
  def expiration_year; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#48
  def expired?; end

  # Returns the value of attribute healthcare.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#19
  def healthcare; end

  # Returns the value of attribute image_url.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#20
  def image_url; end

  # source://braintree//lib/braintree/samsung_pay_card.rb#52
  def inspect; end

  # Returns the value of attribute issuing_bank.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#21
  def issuing_bank; end

  # Returns the value of attribute last_4.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#22
  def last_4; end

  # source://braintree//lib/braintree/samsung_pay_card.rb#61
  def masked_number; end

  # Returns the value of attribute payroll.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#23
  def payroll; end

  # Returns the value of attribute prepaid.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#24
  def prepaid; end

  # Returns the value of attribute product_id.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#25
  def product_id; end

  # Returns the value of attribute source_card_last_4.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#26
  def source_card_last_4; end

  # Returns the value of attribute subscriptions.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#27
  def subscriptions; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#28
  def token; end

  # Returns the value of attribute unique_number_identifier.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#29
  def unique_number_identifier; end

  # Returns the value of attribute updated_at.
  #
  # source://braintree//lib/braintree/samsung_pay_card.rb#30
  def updated_at; end

  class << self
    # source://braintree//lib/braintree/samsung_pay_card.rb#69
    def _attributes; end

    # source://braintree//lib/braintree/samsung_pay_card.rb#79
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/sepa_direct_debit_account.rb#2
class Braintree::SepaDirectDebitAccount
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [SepaDirectDebitAccount] a new instance of SepaDirectDebitAccount
  #
  # source://braintree//lib/braintree/sepa_direct_debit_account.rb#20
  def initialize(gateway, attributes); end

  # Returns the value of attribute bank_reference_token.
  #
  # source://braintree//lib/braintree/sepa_direct_debit_account.rb#5
  def bank_reference_token; end

  # Returns the value of attribute created_at.
  #
  # source://braintree//lib/braintree/sepa_direct_debit_account.rb#6
  def created_at; end

  # Returns the value of attribute customer_global_id.
  #
  # source://braintree//lib/braintree/sepa_direct_debit_account.rb#8
  def customer_global_id; end

  # Returns the value of attribute customer_id.
  #
  # source://braintree//lib/braintree/sepa_direct_debit_account.rb#7
  def customer_id; end

  # Returns the value of attribute default.
  #
  # source://braintree//lib/braintree/sepa_direct_debit_account.rb#9
  def default; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/sepa_direct_debit_account.rb#26
  def default?; end

  # Returns the value of attribute global_id.
  #
  # source://braintree//lib/braintree/sepa_direct_debit_account.rb#10
  def global_id; end

  # Returns the value of attribute image_url.
  #
  # source://braintree//lib/braintree/sepa_direct_debit_account.rb#11
  def image_url; end

  # Returns the value of attribute last_4.
  #
  # source://braintree//lib/braintree/sepa_direct_debit_account.rb#12
  def last_4; end

  # Returns the value of attribute mandate_type.
  #
  # source://braintree//lib/braintree/sepa_direct_debit_account.rb#13
  def mandate_type; end

  # Returns the value of attribute merchant_or_partner_customer_id.
  #
  # source://braintree//lib/braintree/sepa_direct_debit_account.rb#14
  def merchant_or_partner_customer_id; end

  # Returns the value of attribute subscriptions.
  #
  # source://braintree//lib/braintree/sepa_direct_debit_account.rb#15
  def subscriptions; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/sepa_direct_debit_account.rb#16
  def token; end

  # Returns the value of attribute updated_at.
  #
  # source://braintree//lib/braintree/sepa_direct_debit_account.rb#17
  def updated_at; end

  # Returns the value of attribute view_mandate_url.
  #
  # source://braintree//lib/braintree/sepa_direct_debit_account.rb#18
  def view_mandate_url; end

  class << self
    # source://braintree//lib/braintree/sepa_direct_debit_account.rb#34
    def _new(*args); end

    # source://braintree//lib/braintree/sepa_direct_debit_account.rb#42
    def delete(*args); end

    # source://braintree//lib/braintree/sepa_direct_debit_account.rb#38
    def find(*args); end

    # source://braintree//lib/braintree/sepa_direct_debit_account.rb#46
    def sale(token, transaction_attributes); end

    # source://braintree//lib/braintree/sepa_direct_debit_account.rb#56
    def sale!(token, transaction_attributes); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/sepa_direct_debit_account_gateway.rb#2
class Braintree::SepaDirectDebitAccountGateway
  # @return [SepaDirectDebitAccountGateway] a new instance of SepaDirectDebitAccountGateway
  #
  # source://braintree//lib/braintree/sepa_direct_debit_account_gateway.rb#3
  def initialize(gateway); end

  # source://braintree//lib/braintree/sepa_direct_debit_account_gateway.rb#17
  def delete(token); end

  # source://braintree//lib/braintree/sepa_direct_debit_account_gateway.rb#9
  def find(token); end
end

# source://braintree//lib/braintree/sepa_direct_debit_account_nonce_details.rb#2
class Braintree::SepaDirectDebitAccountNonceDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [SepaDirectDebitAccountNonceDetails] a new instance of SepaDirectDebitAccountNonceDetails
  #
  # source://braintree//lib/braintree/sepa_direct_debit_account_nonce_details.rb#10
  def initialize(attributes); end

  # Returns the value of attribute bank_reference_token.
  #
  # source://braintree//lib/braintree/sepa_direct_debit_account_nonce_details.rb#5
  def bank_reference_token; end

  # source://braintree//lib/braintree/sepa_direct_debit_account_nonce_details.rb#14
  def inspect; end

  # Returns the value of attribute last_4.
  #
  # source://braintree//lib/braintree/sepa_direct_debit_account_nonce_details.rb#6
  def last_4; end

  # Returns the value of attribute mandate_type.
  #
  # source://braintree//lib/braintree/sepa_direct_debit_account_nonce_details.rb#7
  def mandate_type; end

  # Returns the value of attribute merchant_or_partner_customer_id.
  #
  # source://braintree//lib/braintree/sepa_direct_debit_account_nonce_details.rb#8
  def merchant_or_partner_customer_id; end
end

# source://braintree//lib/braintree/exceptions.rb#20
class Braintree::ServerError < ::Braintree::BraintreeError; end

# source://braintree//lib/braintree/exceptions.rb#22
class Braintree::ServiceUnavailableError < ::Braintree::BraintreeError; end

# source://braintree//lib/braintree/settlement_batch_summary.rb#2
class Braintree::SettlementBatchSummary
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [SettlementBatchSummary] a new instance of SettlementBatchSummary
  #
  # source://braintree//lib/braintree/settlement_batch_summary.rb#13
  def initialize(gateway, attributes); end

  # Returns the value of attribute records.
  #
  # source://braintree//lib/braintree/settlement_batch_summary.rb#5
  def records; end

  class << self
    # source://braintree//lib/braintree/settlement_batch_summary.rb#20
    def _new(*args); end

    # source://braintree//lib/braintree/settlement_batch_summary.rb#7
    def generate(settlement_date, group_by_custom_field = T.unsafe(nil)); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/settlement_batch_summary_gateway.rb#2
class Braintree::SettlementBatchSummaryGateway
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [SettlementBatchSummaryGateway] a new instance of SettlementBatchSummaryGateway
  #
  # source://braintree//lib/braintree/settlement_batch_summary_gateway.rb#5
  def initialize(gateway); end

  # source://braintree//lib/braintree/settlement_batch_summary_gateway.rb#23
  def _signature; end

  # source://braintree//lib/braintree/settlement_batch_summary_gateway.rb#11
  def generate(criteria); end
end

# source://braintree//lib/braintree/signature_service.rb#2
class Braintree::SignatureService
  # @return [SignatureService] a new instance of SignatureService
  #
  # source://braintree//lib/braintree/signature_service.rb#5
  def initialize(key, digest = T.unsafe(nil)); end

  # source://braintree//lib/braintree/signature_service.rb#15
  def hash(data); end

  # Returns the value of attribute key.
  #
  # source://braintree//lib/braintree/signature_service.rb#3
  def key; end

  # source://braintree//lib/braintree/signature_service.rb#10
  def sign(data); end
end

# source://braintree//lib/braintree/subscription.rb#2
class Braintree::Subscription
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  include ::Braintree::Util::IdEquality
  extend ::Braintree::BaseModule::Methods

  # @return [Subscription] a new instance of Subscription
  #
  # source://braintree//lib/braintree/subscription.rb#94
  def initialize(gateway, attributes); end

  # Returns the value of attribute add_ons.
  #
  # source://braintree//lib/braintree/subscription.rb#28
  def add_ons; end

  # Returns the value of attribute balance.
  #
  # source://braintree//lib/braintree/subscription.rb#29
  def balance; end

  # Returns the value of attribute billing_day_of_month.
  #
  # source://braintree//lib/braintree/subscription.rb#30
  def billing_day_of_month; end

  # Returns the value of attribute billing_period_end_date.
  #
  # source://braintree//lib/braintree/subscription.rb#31
  def billing_period_end_date; end

  # Returns the value of attribute billing_period_start_date.
  #
  # source://braintree//lib/braintree/subscription.rb#32
  def billing_period_start_date; end

  # Returns the value of attribute created_at.
  #
  # source://braintree//lib/braintree/subscription.rb#33
  def created_at; end

  # Returns the value of attribute current_billing_cycle.
  #
  # source://braintree//lib/braintree/subscription.rb#34
  def current_billing_cycle; end

  # Returns the value of attribute days_past_due.
  #
  # source://braintree//lib/braintree/subscription.rb#35
  def days_past_due; end

  # Returns the value of attribute description.
  #
  # source://braintree//lib/braintree/subscription.rb#36
  def description; end

  # Returns the value of attribute descriptor.
  #
  # source://braintree//lib/braintree/subscription.rb#37
  def descriptor; end

  # Returns the value of attribute discounts.
  #
  # source://braintree//lib/braintree/subscription.rb#38
  def discounts; end

  # Returns the value of attribute failure_count.
  #
  # source://braintree//lib/braintree/subscription.rb#39
  def failure_count; end

  # Returns the value of attribute first_billing_date.
  #
  # source://braintree//lib/braintree/subscription.rb#40
  def first_billing_date; end

  # Returns the value of attribute id.
  #
  # source://braintree//lib/braintree/subscription.rb#41
  def id; end

  # Returns the value of attribute merchant_account_id.
  #
  # source://braintree//lib/braintree/subscription.rb#42
  def merchant_account_id; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/subscription.rb#111
  def never_expires?; end

  # Returns the value of attribute next_billing_date.
  #
  # source://braintree//lib/braintree/subscription.rb#43
  def next_billing_date; end

  # Returns the value of attribute next_billing_period_amount.
  #
  # source://braintree//lib/braintree/subscription.rb#44
  def next_billing_period_amount; end

  # Returns the value of attribute number_of_billing_cycles.
  #
  # source://braintree//lib/braintree/subscription.rb#45
  def number_of_billing_cycles; end

  # Returns the value of attribute paid_through_date.
  #
  # source://braintree//lib/braintree/subscription.rb#46
  def paid_through_date; end

  # Returns the value of attribute payment_method_token.
  #
  # source://braintree//lib/braintree/subscription.rb#47
  def payment_method_token; end

  # Returns the value of attribute plan_id.
  #
  # source://braintree//lib/braintree/subscription.rb#48
  def plan_id; end

  # Returns the value of attribute price.
  #
  # source://braintree//lib/braintree/subscription.rb#49
  def price; end

  # Returns the value of attribute status.
  #
  # source://braintree//lib/braintree/subscription.rb#50
  def status; end

  # Returns the value of attribute status_history.
  #
  # source://braintree//lib/braintree/subscription.rb#51
  def status_history; end

  # Returns the value of attribute transactions.
  #
  # source://braintree//lib/braintree/subscription.rb#52
  def transactions; end

  # Returns the value of attribute trial_duration.
  #
  # source://braintree//lib/braintree/subscription.rb#53
  def trial_duration; end

  # Returns the value of attribute trial_duration_unit.
  #
  # source://braintree//lib/braintree/subscription.rb#54
  def trial_duration_unit; end

  # Returns the value of attribute trial_period.
  #
  # source://braintree//lib/braintree/subscription.rb#55
  def trial_period; end

  # Returns the value of attribute updated_at.
  #
  # source://braintree//lib/braintree/subscription.rb#56
  def updated_at; end

  class << self
    # source://braintree//lib/braintree/subscription.rb#117
    def _new(*args); end

    # source://braintree//lib/braintree/subscription.rb#58
    def cancel(*args); end

    # source://braintree//lib/braintree/subscription.rb#62
    def cancel!(*args); end

    # source://braintree//lib/braintree/subscription.rb#66
    def create(*args); end

    # source://braintree//lib/braintree/subscription.rb#70
    def create!(*args); end

    # source://braintree//lib/braintree/subscription.rb#74
    def find(*args); end

    # source://braintree//lib/braintree/subscription.rb#78
    def retry_charge(*args); end

    # source://braintree//lib/braintree/subscription.rb#82
    def search(&block); end

    # source://braintree//lib/braintree/subscription.rb#86
    def update(*args); end

    # source://braintree//lib/braintree/subscription.rb#90
    def update!(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/subscription.rb#6
module Braintree::Subscription::Source; end

# source://braintree//lib/braintree/subscription.rb#7
Braintree::Subscription::Source::Api = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/subscription.rb#8
Braintree::Subscription::Source::ControlPanel = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/subscription.rb#9
Braintree::Subscription::Source::Recurring = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/subscription.rb#10
Braintree::Subscription::Source::Unrecognized = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/subscription.rb#13
module Braintree::Subscription::Status; end

# source://braintree//lib/braintree/subscription.rb#14
Braintree::Subscription::Status::Active = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/subscription.rb#20
Braintree::Subscription::Status::All = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/subscription.rb#15
Braintree::Subscription::Status::Canceled = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/subscription.rb#16
Braintree::Subscription::Status::Expired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/subscription.rb#17
Braintree::Subscription::Status::PastDue = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/subscription.rb#18
Braintree::Subscription::Status::Pending = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/subscription/status_details.rb#3
class Braintree::Subscription::StatusDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [StatusDetails] a new instance of StatusDetails
  #
  # source://braintree//lib/braintree/subscription/status_details.rb#15
  def initialize(attributes); end

  # Returns the value of attribute balance.
  #
  # source://braintree//lib/braintree/subscription/status_details.rb#6
  def balance; end

  # Returns the value of attribute currency_iso_code.
  #
  # source://braintree//lib/braintree/subscription/status_details.rb#12
  def currency_iso_code; end

  # Returns the value of attribute plan_id.
  #
  # source://braintree//lib/braintree/subscription/status_details.rb#13
  def plan_id; end

  # Returns the value of attribute price.
  #
  # source://braintree//lib/braintree/subscription/status_details.rb#7
  def price; end

  # Returns the value of attribute status.
  #
  # source://braintree//lib/braintree/subscription/status_details.rb#8
  def status; end

  # Returns the value of attribute subscription_source.
  #
  # source://braintree//lib/braintree/subscription/status_details.rb#9
  def subscription_source; end

  # Returns the value of attribute timestamp.
  #
  # source://braintree//lib/braintree/subscription/status_details.rb#10
  def timestamp; end

  # Returns the value of attribute user.
  #
  # source://braintree//lib/braintree/subscription/status_details.rb#11
  def user; end
end

# source://braintree//lib/braintree/subscription.rb#23
module Braintree::Subscription::TrialDurationUnit; end

# source://braintree//lib/braintree/subscription.rb#24
Braintree::Subscription::TrialDurationUnit::Day = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/subscription.rb#25
Braintree::Subscription::TrialDurationUnit::Month = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/subscription_gateway.rb#2
class Braintree::SubscriptionGateway
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [SubscriptionGateway] a new instance of SubscriptionGateway
  #
  # source://braintree//lib/braintree/subscription_gateway.rb#5
  def initialize(gateway); end

  # source://braintree//lib/braintree/subscription_gateway.rb#136
  def _do_create(path, params); end

  # source://braintree//lib/braintree/subscription_gateway.rb#147
  def _fetch_subscriptions(search, ids); end

  # source://braintree//lib/braintree/subscription_gateway.rb#11
  def cancel(subscription_id); end

  # source://braintree//lib/braintree/subscription_gateway.rb#24
  def cancel!(*args); end

  # source://braintree//lib/braintree/subscription_gateway.rb#28
  def create(attributes); end

  # source://braintree//lib/braintree/subscription_gateway.rb#33
  def create!(*args); end

  # source://braintree//lib/braintree/subscription_gateway.rb#37
  def find(id); end

  # source://braintree//lib/braintree/subscription_gateway.rb#45
  def retry_charge(subscription_id, amount = T.unsafe(nil), submit_for_settlement = T.unsafe(nil)); end

  # source://braintree//lib/braintree/subscription_gateway.rb#49
  def search(&block); end

  # source://braintree//lib/braintree/subscription_gateway.rb#57
  def update(subscription_id, attributes); end

  # source://braintree//lib/braintree/subscription_gateway.rb#69
  def update!(*args); end

  class << self
    # source://braintree//lib/braintree/subscription_gateway.rb#117
    def _add_on_discount_signature; end

    # source://braintree//lib/braintree/subscription_gateway.rb#73
    def _create_signature; end

    # source://braintree//lib/braintree/subscription_gateway.rb#97
    def _update_signature; end
  end
end

# source://braintree//lib/braintree/subscription_search.rb#2
class Braintree::SubscriptionSearch < ::Braintree::AdvancedSearch
  # source://braintree//lib/braintree/advanced_search.rb#141
  def billing_cycles_remaining(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def created_at(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def days_past_due(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def id(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def ids; end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def in_trial_period; end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def merchant_account_id; end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def next_billing_date(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#118
  def plan_id; end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def price(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def status; end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def transaction_id(*args); end
end

# source://braintree//lib/braintree/successful_result.rb#2
class Braintree::SuccessfulResult
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [SuccessfulResult] a new instance of SuccessfulResult
  #
  # source://braintree//lib/braintree/successful_result.rb#28
  def initialize(attributes = T.unsafe(nil)); end

  # Returns the value of attribute address.
  #
  # source://braintree//lib/braintree/successful_result.rb#5
  def address; end

  # Returns the value of attribute apple_pay_options.
  #
  # source://braintree//lib/braintree/successful_result.rb#6
  def apple_pay_options; end

  # Returns the value of attribute credentials.
  #
  # source://braintree//lib/braintree/successful_result.rb#7
  def credentials; end

  # Returns the value of attribute credit_card.
  #
  # source://braintree//lib/braintree/successful_result.rb#8
  def credit_card; end

  # Returns the value of attribute credit_card_verification.
  #
  # source://braintree//lib/braintree/successful_result.rb#9
  def credit_card_verification; end

  # Returns the value of attribute customer.
  #
  # source://braintree//lib/braintree/successful_result.rb#10
  def customer; end

  # Returns the value of attribute disputes.
  #
  # source://braintree//lib/braintree/successful_result.rb#11
  def disputes; end

  # Returns the value of attribute document_upload.
  #
  # source://braintree//lib/braintree/successful_result.rb#12
  def document_upload; end

  # Returns the value of attribute evidence.
  #
  # source://braintree//lib/braintree/successful_result.rb#13
  def evidence; end

  # Returns the value of attribute exchange_rate_quote_payload.
  #
  # source://braintree//lib/braintree/successful_result.rb#14
  def exchange_rate_quote_payload; end

  # source://braintree//lib/braintree/successful_result.rb#36
  def inspect; end

  # Returns the value of attribute merchant.
  #
  # source://braintree//lib/braintree/successful_result.rb#15
  def merchant; end

  # Returns the value of attribute merchant_account.
  #
  # source://braintree//lib/braintree/successful_result.rb#16
  def merchant_account; end

  # Returns the value of attribute merchant_accounts.
  #
  # source://braintree//lib/braintree/successful_result.rb#17
  def merchant_accounts; end

  # Returns the value of attribute payment_method.
  #
  # source://braintree//lib/braintree/successful_result.rb#18
  def payment_method; end

  # Returns the value of attribute payment_method_nonce.
  #
  # source://braintree//lib/braintree/successful_result.rb#19
  def payment_method_nonce; end

  # Returns the value of attribute paypal_account.
  #
  # source://braintree//lib/braintree/successful_result.rb#20
  def paypal_account; end

  # Returns the value of attribute plan.
  #
  # source://braintree//lib/braintree/successful_result.rb#21
  def plan; end

  # Returns the value of attribute settlement_batch_summary.
  #
  # source://braintree//lib/braintree/successful_result.rb#22
  def settlement_batch_summary; end

  # Returns the value of attribute subscription.
  #
  # source://braintree//lib/braintree/successful_result.rb#23
  def subscription; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/successful_result.rb#41
  def success?; end

  # Returns the value of attribute supported_networks.
  #
  # source://braintree//lib/braintree/successful_result.rb#24
  def supported_networks; end

  # Returns the value of attribute transaction.
  #
  # source://braintree//lib/braintree/successful_result.rb#25
  def transaction; end

  # Returns the value of attribute us_bank_account_verification.
  #
  # source://braintree//lib/braintree/successful_result.rb#26
  def us_bank_account_verification; end
end

# source://braintree//lib/braintree/test/credit_card.rb#2
module Braintree::Test; end

# source://braintree//lib/braintree/test/credit_card.rb#70
module Braintree::Test::CreditCardDefaults; end

# source://braintree//lib/braintree/test/credit_card.rb#71
Braintree::Test::CreditCardDefaults::CountryOfIssuance = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#72
Braintree::Test::CreditCardDefaults::IssuingBank = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#3
module Braintree::Test::CreditCardNumbers; end

# source://braintree//lib/braintree/test/credit_card.rb#67
Braintree::Test::CreditCardNumbers::All = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/test/credit_card.rb#17
Braintree::Test::CreditCardNumbers::AmExes = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/test/credit_card.rb#54
module Braintree::Test::CreditCardNumbers::AmexPayWithPoints; end

# source://braintree//lib/braintree/test/credit_card.rb#58
Braintree::Test::CreditCardNumbers::AmexPayWithPoints::All = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/test/credit_card.rb#56
Braintree::Test::CreditCardNumbers::AmexPayWithPoints::IneligibleCard = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#57
Braintree::Test::CreditCardNumbers::AmexPayWithPoints::InsufficientPoints = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#55
Braintree::Test::CreditCardNumbers::AmexPayWithPoints::Success = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#4
module Braintree::Test::CreditCardNumbers::CardTypeIndicators; end

# source://braintree//lib/braintree/test/credit_card.rb#6
Braintree::Test::CreditCardNumbers::CardTypeIndicators::Commercial = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#14
Braintree::Test::CreditCardNumbers::CardTypeIndicators::CountryOfIssuance = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#10
Braintree::Test::CreditCardNumbers::CardTypeIndicators::Debit = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#9
Braintree::Test::CreditCardNumbers::CardTypeIndicators::DurbinRegulated = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#8
Braintree::Test::CreditCardNumbers::CardTypeIndicators::Healthcare = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#13
Braintree::Test::CreditCardNumbers::CardTypeIndicators::IssuingBank = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#12
Braintree::Test::CreditCardNumbers::CardTypeIndicators::No = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#7
Braintree::Test::CreditCardNumbers::CardTypeIndicators::Payroll = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#5
Braintree::Test::CreditCardNumbers::CardTypeIndicators::Prepaid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#11
Braintree::Test::CreditCardNumbers::CardTypeIndicators::Unknown = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#18
Braintree::Test::CreditCardNumbers::CarteBlanches = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/test/credit_card.rb#19
Braintree::Test::CreditCardNumbers::DinersClubs = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/test/credit_card.rb#21
Braintree::Test::CreditCardNumbers::Discover = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#22
Braintree::Test::CreditCardNumbers::Discovers = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/test/credit_card.rb#61
module Braintree::Test::CreditCardNumbers::Disputes; end

# source://braintree//lib/braintree/test/credit_card.rb#62
Braintree::Test::CreditCardNumbers::Disputes::Chargeback = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#64
Braintree::Test::CreditCardNumbers::Disputes::Numbers = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/test/credit_card.rb#31
Braintree::Test::CreditCardNumbers::Elo = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#46
module Braintree::Test::CreditCardNumbers::FailsSandboxVerification; end

# source://braintree//lib/braintree/test/credit_card.rb#47
Braintree::Test::CreditCardNumbers::FailsSandboxVerification::AmEx = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#48
Braintree::Test::CreditCardNumbers::FailsSandboxVerification::Discover = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#49
Braintree::Test::CreditCardNumbers::FailsSandboxVerification::MasterCard = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#51
Braintree::Test::CreditCardNumbers::FailsSandboxVerification::Numbers = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/test/credit_card.rb#50
Braintree::Test::CreditCardNumbers::FailsSandboxVerification::Visa = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#40
Braintree::Test::CreditCardNumbers::Fraud = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#32
Braintree::Test::CreditCardNumbers::Hiper = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#33
Braintree::Test::CreditCardNumbers::Hipercard = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#23
Braintree::Test::CreditCardNumbers::JCBs = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/test/credit_card.rb#25
Braintree::Test::CreditCardNumbers::Maestro = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#26
Braintree::Test::CreditCardNumbers::MasterCard = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#27
Braintree::Test::CreditCardNumbers::MasterCardInternational = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#29
Braintree::Test::CreditCardNumbers::MasterCards = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/test/credit_card.rb#41
Braintree::Test::CreditCardNumbers::RiskThreshold = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#44
Braintree::Test::CreditCardNumbers::Unknowns = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/test/credit_card.rb#35
Braintree::Test::CreditCardNumbers::Visa = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#36
Braintree::Test::CreditCardNumbers::VisaCountryOfIssuanceIE = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#37
Braintree::Test::CreditCardNumbers::VisaInternational = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#38
Braintree::Test::CreditCardNumbers::VisaPrepaid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/credit_card.rb#43
Braintree::Test::CreditCardNumbers::Visas = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/test/merchant_account.rb#3
module Braintree::Test::MerchantAccount; end

# source://braintree//lib/braintree/test/merchant_account.rb#7
Braintree::Test::MerchantAccount::AccountNotAuthorizedContactUs = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/merchant_account.rb#4
Braintree::Test::MerchantAccount::Approve = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/merchant_account.rb#9
Braintree::Test::MerchantAccount::BankRejectedNone = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/merchant_account.rb#8
Braintree::Test::MerchantAccount::BankRejectedUpdateFundingInformation = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/merchant_account.rb#6
Braintree::Test::MerchantAccount::InsufficientFundsContactUs = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#3
module Braintree::Test::Nonce; end

# source://braintree//lib/braintree/test/nonce.rb#15
Braintree::Test::Nonce::AbstractTransactable = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#13
Braintree::Test::Nonce::ApplePayAmEx = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#12
Braintree::Test::Nonce::ApplePayMasterCard = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#14
Braintree::Test::Nonce::ApplePayMpan = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#11
Braintree::Test::Nonce::ApplePayVisa = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#5
Braintree::Test::Nonce::Consumed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#16
Braintree::Test::Nonce::Europe = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#66
Braintree::Test::Nonce::GatewayRejectedFraud = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#67
Braintree::Test::Nonce::GatewayRejectedRiskThresholds = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#20
Braintree::Test::Nonce::GooglePayAmEx = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#17
Braintree::Test::Nonce::GooglePayDiscover = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#19
Braintree::Test::Nonce::GooglePayMasterCard = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#18
Braintree::Test::Nonce::GooglePayVisa = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#10
Braintree::Test::Nonce::LocalPayment = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#64
Braintree::Test::Nonce::LuhnInvalid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#21
Braintree::Test::Nonce::MetaCheckoutCard = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#22
Braintree::Test::Nonce::MetaCheckoutToken = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#9
Braintree::Test::Nonce::PayPalBillingAgreement = T.let(T.unsafe(nil), String)

# NEXT_MAJOR_VERSION - no longer supported in the Gateway, remove this constant
#
# source://braintree//lib/braintree/test/nonce.rb#8
Braintree::Test::Nonce::PayPalFuturePayment = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#65
Braintree::Test::Nonce::PayPalFuturePaymentRefreshToken = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#6
Braintree::Test::Nonce::PayPalOneTimePayment = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#61
Braintree::Test::Nonce::ProcessorDeclinedAmEx = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#62
Braintree::Test::Nonce::ProcessorDeclinedDiscover = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#60
Braintree::Test::Nonce::ProcessorDeclinedMasterCard = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#59
Braintree::Test::Nonce::ProcessorDeclinedVisa = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#63
Braintree::Test::Nonce::ProcessorFailureJCB = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#72
Braintree::Test::Nonce::SamsungPayAmEx = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#73
Braintree::Test::Nonce::SamsungPayDiscover = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#74
Braintree::Test::Nonce::SamsungPayMasterCard = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#75
Braintree::Test::Nonce::SamsungPayVisa = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#76
Braintree::Test::Nonce::SepaDirectDebit = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#38
Braintree::Test::Nonce::ThreeDSecureTwoVisaErrorOnLookup = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#36
Braintree::Test::Nonce::ThreeDSecureTwoVisaSuccessfulFrictionlessAuthentication = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#37
Braintree::Test::Nonce::ThreeDSecureTwoVisaSuccessfulStepUpAuthentication = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#39
Braintree::Test::Nonce::ThreeDSecureTwoVisaTimeoutOnLookup = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#29
Braintree::Test::Nonce::ThreeDSecureVisaAttemptsNonParticipating = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#34
Braintree::Test::Nonce::ThreeDSecureVisaAuthenticationUnavailable = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#35
Braintree::Test::Nonce::ThreeDSecureVisaBypassedAuthentication = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#28
Braintree::Test::Nonce::ThreeDSecureVisaFailedAuthentication = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#27
Braintree::Test::Nonce::ThreeDSecureVisaFailedSignature = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#25
Braintree::Test::Nonce::ThreeDSecureVisaFullAuthentication = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#26
Braintree::Test::Nonce::ThreeDSecureVisaLookupTimeout = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#33
Braintree::Test::Nonce::ThreeDSecureVisaMPIAuthenticateError = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#32
Braintree::Test::Nonce::ThreeDSecureVisaMPILookupError = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#30
Braintree::Test::Nonce::ThreeDSecureVisaNoteEnrolled = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#31
Braintree::Test::Nonce::ThreeDSecureVisaUnavailable = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#4
Braintree::Test::Nonce::Transactable = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#41
Braintree::Test::Nonce::TransactableAmEx = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#48
Braintree::Test::Nonce::TransactableCommercial = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#56
Braintree::Test::Nonce::TransactableCountryOfIssuanceCAD = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#55
Braintree::Test::Nonce::TransactableCountryOfIssuanceUSA = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#51
Braintree::Test::Nonce::TransactableDebit = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#46
Braintree::Test::Nonce::TransactableDinersClub = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#43
Braintree::Test::Nonce::TransactableDiscover = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#49
Braintree::Test::Nonce::TransactableDurbinRegulated = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#50
Braintree::Test::Nonce::TransactableHealthcare = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#57
Braintree::Test::Nonce::TransactableIssuingBankNetworkOnly = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#44
Braintree::Test::Nonce::TransactableJCB = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#45
Braintree::Test::Nonce::TransactableMaestro = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#42
Braintree::Test::Nonce::TransactableMasterCard = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#53
Braintree::Test::Nonce::TransactableNoIndicators = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#52
Braintree::Test::Nonce::TransactablePayroll = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#58
Braintree::Test::Nonce::TransactablePinlessDebitVisa = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#47
Braintree::Test::Nonce::TransactablePrepaid = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#54
Braintree::Test::Nonce::TransactableUnknownIndicators = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#40
Braintree::Test::Nonce::TransactableVisa = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#77
Braintree::Test::Nonce::UsBankAccount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#23
Braintree::Test::Nonce::VenmoAccount = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#24
Braintree::Test::Nonce::VenmoAccountTokenIssuanceError = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#68
Braintree::Test::Nonce::VisaCheckoutAmEx = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#69
Braintree::Test::Nonce::VisaCheckoutDiscover = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#70
Braintree::Test::Nonce::VisaCheckoutMasterCard = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/nonce.rb#71
Braintree::Test::Nonce::VisaCheckoutVisa = T.let(T.unsafe(nil), String)

# NEXT_MAJOR_VERSION are these even being used anymore? Can we remove this class??
#
# source://braintree//lib/braintree/test/transaction_amounts.rb#4
module Braintree::Test::TransactionAmounts; end

# source://braintree//lib/braintree/test/transaction_amounts.rb#5
Braintree::Test::TransactionAmounts::Authorize = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/transaction_amounts.rb#6
Braintree::Test::TransactionAmounts::Decline = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/transaction_amounts.rb#8
Braintree::Test::TransactionAmounts::Fail = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/transaction_amounts.rb#7
Braintree::Test::TransactionAmounts::HardDecline = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/venmo_sdk.rb#5
module Braintree::Test::VenmoSDK
  class << self
    # source://braintree//lib/braintree/test/venmo_sdk.rb#6
    def generate_test_payment_method_code(card_number); end
  end
end

# source://braintree//lib/braintree/test/venmo_sdk.rb#10
Braintree::Test::VenmoSDK::AmExPaymentMethodCode = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/venmo_sdk.rb#11
Braintree::Test::VenmoSDK::DiscoverPaymentMethodCode = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/venmo_sdk.rb#15
Braintree::Test::VenmoSDK::InvalidPaymentMethodCode = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/venmo_sdk.rb#18
Braintree::Test::VenmoSDK::InvalidSession = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/venmo_sdk.rb#12
Braintree::Test::VenmoSDK::JCBPaymentMethodCode = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/venmo_sdk.rb#13
Braintree::Test::VenmoSDK::MasterCardPaymentMethodCode = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/venmo_sdk.rb#17
Braintree::Test::VenmoSDK::Session = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/test/venmo_sdk.rb#14
Braintree::Test::VenmoSDK::VisaPaymentMethodCode = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/exceptions.rb#48
class Braintree::TestOperationPerformedInProduction < ::Braintree::BraintreeError; end

# source://braintree//lib/braintree/test_transaction.rb#2
class Braintree::TestTransaction < ::Braintree::Transaction
  class << self
    # source://braintree//lib/braintree/test_transaction.rb#3
    def settle(transaction_id); end

    # source://braintree//lib/braintree/test_transaction.rb#7
    def settlement_confirm(transaction_id); end

    # source://braintree//lib/braintree/test_transaction.rb#11
    def settlement_decline(transaction_id); end

    # source://braintree//lib/braintree/test_transaction.rb#15
    def settlement_pending(transaction_id); end
  end
end

# source://braintree//lib/braintree/testing_gateway.rb#2
class Braintree::TestingGateway
  # @return [TestingGateway] a new instance of TestingGateway
  #
  # source://braintree//lib/braintree/testing_gateway.rb#4
  def initialize(gateway); end

  # @raise [TestOperationPerformedInProduction]
  #
  # source://braintree//lib/braintree/testing_gateway.rb#39
  def check_environment; end

  # source://braintree//lib/braintree/testing_gateway.rb#11
  def settle(transaction_id); end

  # source://braintree//lib/braintree/testing_gateway.rb#18
  def settlement_confirm(transaction_id); end

  # source://braintree//lib/braintree/testing_gateway.rb#25
  def settlement_decline(transaction_id); end

  # source://braintree//lib/braintree/testing_gateway.rb#32
  def settlement_pending(transaction_id); end
end

# source://braintree//lib/braintree/three_d_secure_info.rb#2
class Braintree::ThreeDSecureInfo
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [ThreeDSecureInfo] a new instance of ThreeDSecureInfo
  #
  # source://braintree//lib/braintree/three_d_secure_info.rb#24
  def initialize(attributes); end

  # Returns the value of attribute acs_transaction_id.
  #
  # source://braintree//lib/braintree/three_d_secure_info.rb#5
  def acs_transaction_id; end

  # Returns the value of attribute authentication.
  #
  # source://braintree//lib/braintree/three_d_secure_info.rb#19
  def authentication; end

  # Returns the value of attribute cavv.
  #
  # source://braintree//lib/braintree/three_d_secure_info.rb#6
  def cavv; end

  # Returns the value of attribute ds_transaction_id.
  #
  # source://braintree//lib/braintree/three_d_secure_info.rb#7
  def ds_transaction_id; end

  # Returns the value of attribute eci_flag.
  #
  # source://braintree//lib/braintree/three_d_secure_info.rb#8
  def eci_flag; end

  # Returns the value of attribute enrolled.
  #
  # source://braintree//lib/braintree/three_d_secure_info.rb#9
  def enrolled; end

  # source://braintree//lib/braintree/three_d_secure_info.rb#28
  def inspect; end

  # Returns the value of attribute liability_shift_possible.
  #
  # source://braintree//lib/braintree/three_d_secure_info.rb#10
  def liability_shift_possible; end

  # Returns the value of attribute liability_shift_possible.
  #
  # source://braintree//lib/braintree/three_d_secure_info.rb#10
  def liability_shift_possible?; end

  # Returns the value of attribute liability_shifted.
  #
  # source://braintree//lib/braintree/three_d_secure_info.rb#11
  def liability_shifted; end

  # Returns the value of attribute liability_shifted.
  #
  # source://braintree//lib/braintree/three_d_secure_info.rb#11
  def liability_shifted?; end

  # Returns the value of attribute lookup.
  #
  # source://braintree//lib/braintree/three_d_secure_info.rb#18
  def lookup; end

  # Returns the value of attribute pares_status.
  #
  # source://braintree//lib/braintree/three_d_secure_info.rb#12
  def pares_status; end

  # Returns the value of attribute status.
  #
  # source://braintree//lib/braintree/three_d_secure_info.rb#13
  def status; end

  # Returns the value of attribute three_d_secure_authentication_id.
  #
  # source://braintree//lib/braintree/three_d_secure_info.rb#14
  def three_d_secure_authentication_id; end

  # Returns the value of attribute three_d_secure_transaction_id.
  #
  # source://braintree//lib/braintree/three_d_secure_info.rb#15
  def three_d_secure_transaction_id; end

  # Returns the value of attribute three_d_secure_version.
  #
  # source://braintree//lib/braintree/three_d_secure_info.rb#16
  def three_d_secure_version; end

  # Returns the value of attribute xid.
  #
  # source://braintree//lib/braintree/three_d_secure_info.rb#17
  def xid; end
end

# source://braintree//lib/braintree/exceptions.rb#26
class Braintree::TooManyRequestsError < ::Braintree::BraintreeError; end

# source://braintree//lib/braintree/transaction/local_payment_details.rb#2
class Braintree::Transaction
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  include ::Braintree::Util::IdEquality
  extend ::Braintree::BaseModule::Methods

  # @return [Transaction] a new instance of Transaction
  #
  # source://braintree//lib/braintree/transaction.rb#312
  def initialize(gateway, attributes); end

  # Returns the value of attribute ach_return_code.
  #
  # source://braintree//lib/braintree/transaction.rb#94
  def ach_return_code; end

  # Returns the value of attribute ach_return_responses.
  #
  # source://braintree//lib/braintree/transaction.rb#95
  def ach_return_responses; end

  # Returns the value of attribute acquirer_reference_number.
  #
  # source://braintree//lib/braintree/transaction.rb#96
  def acquirer_reference_number; end

  # Returns the value of attribute add_ons.
  #
  # source://braintree//lib/braintree/transaction.rb#97
  def add_ons; end

  # The raw response from the processor.
  #
  # source://braintree//lib/braintree/transaction.rb#98
  def additional_processor_response; end

  # Returns the value of attribute amount.
  #
  # source://braintree//lib/braintree/transaction.rb#99
  def amount; end

  # Returns the value of attribute apple_pay_details.
  #
  # source://braintree//lib/braintree/transaction.rb#100
  def apple_pay_details; end

  # Returns the value of attribute authorization_adjustments.
  #
  # source://braintree//lib/braintree/transaction.rb#101
  def authorization_adjustments; end

  # Returns the value of attribute authorization_expires_at.
  #
  # source://braintree//lib/braintree/transaction.rb#102
  def authorization_expires_at; end

  # Returns the value of attribute authorized_transaction_id.
  #
  # source://braintree//lib/braintree/transaction.rb#103
  def authorized_transaction_id; end

  # Returns the value of attribute avs_error_response_code.
  #
  # source://braintree//lib/braintree/transaction.rb#104
  def avs_error_response_code; end

  # Returns the value of attribute avs_postal_code_response_code.
  #
  # source://braintree//lib/braintree/transaction.rb#105
  def avs_postal_code_response_code; end

  # Returns the value of attribute avs_street_address_response_code.
  #
  # source://braintree//lib/braintree/transaction.rb#106
  def avs_street_address_response_code; end

  # Returns the value of attribute billing_details.
  #
  # source://braintree//lib/braintree/transaction.rb#107
  def billing_details; end

  # Returns the value of attribute channel.
  #
  # source://braintree//lib/braintree/transaction.rb#108
  def channel; end

  # Returns the value of attribute created_at.
  #
  # source://braintree//lib/braintree/transaction.rb#109
  def created_at; end

  # Returns the value of attribute credit_card_details.
  #
  # source://braintree//lib/braintree/transaction.rb#110
  def credit_card_details; end

  # Returns the value of attribute currency_iso_code.
  #
  # source://braintree//lib/braintree/transaction.rb#111
  def currency_iso_code; end

  # Returns the value of attribute custom_fields.
  #
  # source://braintree//lib/braintree/transaction.rb#112
  def custom_fields; end

  # Returns the value of attribute customer_details.
  #
  # source://braintree//lib/braintree/transaction.rb#113
  def customer_details; end

  # Returns the value of attribute cvv_response_code.
  #
  # source://braintree//lib/braintree/transaction.rb#114
  def cvv_response_code; end

  # Returns the value of attribute debit_network.
  #
  # source://braintree//lib/braintree/transaction.rb#115
  def debit_network; end

  # Returns the value of attribute descriptor.
  #
  # source://braintree//lib/braintree/transaction.rb#116
  def descriptor; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/transaction.rb#380
  def disbursed?; end

  # Returns the value of attribute disbursement_details.
  #
  # source://braintree//lib/braintree/transaction.rb#117
  def disbursement_details; end

  # Returns the value of attribute discount_amount.
  #
  # source://braintree//lib/braintree/transaction.rb#118
  def discount_amount; end

  # Returns the value of attribute discounts.
  #
  # source://braintree//lib/braintree/transaction.rb#119
  def discounts; end

  # Returns the value of attribute disputes.
  #
  # source://braintree//lib/braintree/transaction.rb#120
  def disputes; end

  # Returns the value of attribute escrow_status.
  #
  # source://braintree//lib/braintree/transaction.rb#121
  def escrow_status; end

  # Returns the value of attribute facilitated_details.
  #
  # source://braintree//lib/braintree/transaction.rb#122
  def facilitated_details; end

  # Returns the value of attribute facilitator_details.
  #
  # source://braintree//lib/braintree/transaction.rb#123
  def facilitator_details; end

  # Returns the value of attribute gateway_rejection_reason.
  #
  # source://braintree//lib/braintree/transaction.rb#124
  def gateway_rejection_reason; end

  # Returns the value of attribute google_pay_details.
  #
  # source://braintree//lib/braintree/transaction.rb#125
  def google_pay_details; end

  # Returns the value of attribute graphql_id.
  #
  # source://braintree//lib/braintree/transaction.rb#126
  def graphql_id; end

  # Returns the value of attribute id.
  #
  # source://braintree//lib/braintree/transaction.rb#127
  def id; end

  # source://braintree//lib/braintree/transaction.rb#359
  def inspect; end

  # Returns the value of attribute installment_count.
  #
  # source://braintree//lib/braintree/transaction.rb#128
  def installment_count; end

  # Returns the value of attribute installments.
  #
  # source://braintree//lib/braintree/transaction.rb#129
  def installments; end

  # source://braintree//lib/braintree/transaction.rb#372
  def line_items; end

  # Returns the value of attribute local_payment_details.
  #
  # source://braintree//lib/braintree/transaction.rb#130
  def local_payment_details; end

  # Returns the value of attribute merchant_account_id.
  #
  # source://braintree//lib/braintree/transaction.rb#131
  def merchant_account_id; end

  # Returns the value of attribute merchant_advice_code.
  #
  # source://braintree//lib/braintree/transaction.rb#132
  def merchant_advice_code; end

  # Returns the value of attribute merchant_advice_code_text.
  #
  # source://braintree//lib/braintree/transaction.rb#133
  def merchant_advice_code_text; end

  # Returns the value of attribute meta_checkout_card_details.
  #
  # source://braintree//lib/braintree/transaction.rb#134
  def meta_checkout_card_details; end

  # Returns the value of attribute meta_checkout_token_details.
  #
  # source://braintree//lib/braintree/transaction.rb#135
  def meta_checkout_token_details; end

  # Response code from the card network
  #
  # source://braintree//lib/braintree/transaction.rb#136
  def network_response_code; end

  # Response text from the card network
  #
  # source://braintree//lib/braintree/transaction.rb#137
  def network_response_text; end

  # Returns the value of attribute network_token_details.
  #
  # source://braintree//lib/braintree/transaction.rb#138
  def network_token_details; end

  # Returns the value of attribute network_transaction_id.
  #
  # source://braintree//lib/braintree/transaction.rb#139
  def network_transaction_id; end

  # Returns the value of attribute order_id.
  #
  # source://braintree//lib/braintree/transaction.rb#140
  def order_id; end

  # Returns the value of attribute packages.
  #
  # source://braintree//lib/braintree/transaction.rb#141
  def packages; end

  # Returns the value of attribute partial_settlement_transaction_ids.
  #
  # source://braintree//lib/braintree/transaction.rb#142
  def partial_settlement_transaction_ids; end

  # Returns the value of attribute payment_instrument_type.
  #
  # source://braintree//lib/braintree/transaction.rb#143
  def payment_instrument_type; end

  # Returns the value of attribute payment_receipt.
  #
  # source://braintree//lib/braintree/transaction.rb#144
  def payment_receipt; end

  # Returns the value of attribute paypal_details.
  #
  # source://braintree//lib/braintree/transaction.rb#145
  def paypal_details; end

  # Returns the value of attribute paypal_here_details.
  #
  # source://braintree//lib/braintree/transaction.rb#146
  def paypal_here_details; end

  # Returns the value of attribute plan_id.
  #
  # source://braintree//lib/braintree/transaction.rb#147
  def plan_id; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/transaction.rb#424
  def processed_with_network_token?; end

  # Returns the value of attribute processor_authorization_code.
  #
  # source://braintree//lib/braintree/transaction.rb#148
  def processor_authorization_code; end

  # Returns the value of attribute processor_response_code.
  #
  # source://braintree//lib/braintree/transaction.rb#149
  def processor_response_code; end

  # Returns the value of attribute processor_response_text.
  #
  # source://braintree//lib/braintree/transaction.rb#150
  def processor_response_text; end

  # Returns the value of attribute processor_response_type.
  #
  # source://braintree//lib/braintree/transaction.rb#151
  def processor_response_type; end

  # Returns the value of attribute processor_settlement_response_code.
  #
  # source://braintree//lib/braintree/transaction.rb#152
  def processor_settlement_response_code; end

  # Returns the value of attribute processor_settlement_response_text.
  #
  # source://braintree//lib/braintree/transaction.rb#153
  def processor_settlement_response_text; end

  # Returns the value of attribute product_sku.
  #
  # source://braintree//lib/braintree/transaction.rb#154
  def product_sku; end

  # Returns the value of attribute purchase_order_number.
  #
  # source://braintree//lib/braintree/transaction.rb#155
  def purchase_order_number; end

  # Returns the value of attribute recurring.
  #
  # source://braintree//lib/braintree/transaction.rb#156
  def recurring; end

  # Returns the value of attribute refund_ids.
  #
  # source://braintree//lib/braintree/transaction.rb#157
  def refund_ids; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/transaction.rb#376
  def refunded?; end

  # Returns the value of attribute refunded_installments.
  #
  # source://braintree//lib/braintree/transaction.rb#158
  def refunded_installments; end

  # Returns the value of attribute refunded_transaction_id.
  #
  # source://braintree//lib/braintree/transaction.rb#159
  def refunded_transaction_id; end

  # Returns the value of attribute retried.
  #
  # source://braintree//lib/braintree/transaction.rb#160
  def retried; end

  # the primary/parent transaction id of any retried transaction
  #
  # source://braintree//lib/braintree/transaction.rb#161
  def retried_transaction_id; end

  # Returns the value of attribute retrieval_reference_number.
  #
  # source://braintree//lib/braintree/transaction.rb#162
  def retrieval_reference_number; end

  # all retried transactions ids for a primary transaction
  #
  # source://braintree//lib/braintree/transaction.rb#163
  def retry_ids; end

  # Returns the value of attribute risk_data.
  #
  # source://braintree//lib/braintree/transaction.rb#164
  def risk_data; end

  # Returns the value of attribute samsung_pay_card_details.
  #
  # source://braintree//lib/braintree/transaction.rb#165
  def samsung_pay_card_details; end

  # Returns the value of attribute sca_exemption_requested.
  #
  # source://braintree//lib/braintree/transaction.rb#166
  def sca_exemption_requested; end

  # Returns the value of attribute sepa_direct_debit_account_details.
  #
  # source://braintree//lib/braintree/transaction.rb#167
  def sepa_direct_debit_account_details; end

  # Returns the value of attribute sepa_direct_debit_return_code.
  #
  # source://braintree//lib/braintree/transaction.rb#168
  def sepa_direct_debit_return_code; end

  # Returns the value of attribute service_fee_amount.
  #
  # source://braintree//lib/braintree/transaction.rb#169
  def service_fee_amount; end

  # Returns the value of attribute settlement_batch_id.
  #
  # source://braintree//lib/braintree/transaction.rb#170
  def settlement_batch_id; end

  # Returns the value of attribute shipping_amount.
  #
  # source://braintree//lib/braintree/transaction.rb#171
  def shipping_amount; end

  # Returns the value of attribute shipping_details.
  #
  # source://braintree//lib/braintree/transaction.rb#172
  def shipping_details; end

  # Returns the value of attribute ships_from_postal_code.
  #
  # source://braintree//lib/braintree/transaction.rb#173
  def ships_from_postal_code; end

  # See Transaction::Status
  #
  # source://braintree//lib/braintree/transaction.rb#174
  def status; end

  # Returns the value of attribute status_history.
  #
  # source://braintree//lib/braintree/transaction.rb#175
  def status_history; end

  # Returns the value of attribute subscription_details.
  #
  # source://braintree//lib/braintree/transaction.rb#176
  def subscription_details; end

  # Returns the value of attribute subscription_id.
  #
  # source://braintree//lib/braintree/transaction.rb#177
  def subscription_id; end

  # Returns the value of attribute tax_amount.
  #
  # source://braintree//lib/braintree/transaction.rb#178
  def tax_amount; end

  # Returns the value of attribute tax_exempt.
  #
  # source://braintree//lib/braintree/transaction.rb#179
  def tax_exempt; end

  # Returns the value of attribute three_d_secure_info.
  #
  # source://braintree//lib/braintree/transaction.rb#180
  def three_d_secure_info; end

  # Returns the value of attribute type.
  #
  # source://braintree//lib/braintree/transaction.rb#181
  def type; end

  # Returns the value of attribute updated_at.
  #
  # source://braintree//lib/braintree/transaction.rb#182
  def updated_at; end

  # Returns the value of attribute us_bank_account_details.
  #
  # source://braintree//lib/braintree/transaction.rb#183
  def us_bank_account_details; end

  # If this transaction was stored in the vault, or created from vault records,
  # vault_billing_address will return the associated Braintree::Address. Because the
  # vault billing address can be updated after the transaction was created, the attributes
  # on vault_billing_address may not match the attributes on billing_details.
  # NEXT_MAJOR_VERSION these methods are not documented in the developer docs, remove
  #
  # source://braintree//lib/braintree/transaction.rb#389
  def vault_billing_address; end

  # If this transaction was stored in the vault, or created from vault records,
  # vault_credit_card will return the associated Braintree::CreditCard. Because the
  # vault credit card can be updated after the transaction was created, the attributes
  # on vault_credit_card may not match the attributes on credit_card_details.
  # NEXT_MAJOR_VERSION these methods are not documented in the developer docs, remove
  #
  # source://braintree//lib/braintree/transaction.rb#399
  def vault_credit_card; end

  # If this transaction was stored in the vault, or created from vault records,
  # vault_customer will return the associated Braintree::Customer. Because the
  # vault customer can be updated after the transaction was created, the attributes
  # on vault_customer may not match the attributes on customer_details.
  # NEXT_MAJOR_VERSION these methods are not documented in the developer docs, remove
  #
  # source://braintree//lib/braintree/transaction.rb#409
  def vault_customer; end

  # If this transaction was stored in the vault, or created from vault records,
  # vault_shipping_address will return the associated Braintree::Address. Because the
  # vault shipping address can be updated after the transaction was created, the attributes
  # on vault_shipping_address may not match the attributes on shipping_details.
  # NEXT_MAJOR_VERSION these methods are not documented in the developer docs, remove
  #
  # source://braintree//lib/braintree/transaction.rb#419
  def vault_shipping_address; end

  # Returns the value of attribute venmo_account_details.
  #
  # source://braintree//lib/braintree/transaction.rb#184
  def venmo_account_details; end

  # Returns the value of attribute visa_checkout_card_details.
  #
  # source://braintree//lib/braintree/transaction.rb#185
  def visa_checkout_card_details; end

  # Returns the value of attribute voice_referral_number.
  #
  # source://braintree//lib/braintree/transaction.rb#186
  def voice_referral_number; end

  class << self
    # source://braintree//lib/braintree/transaction.rb#435
    def _attributes; end

    # source://braintree//lib/braintree/transaction.rb#430
    def _new(*args); end

    # source://braintree//lib/braintree/transaction.rb#188
    def adjust_authorization(*args); end

    # source://braintree//lib/braintree/transaction.rb#192
    def adjust_authorization!(*args); end

    # source://braintree//lib/braintree/transaction.rb#204
    def cancel_release(*args); end

    # source://braintree//lib/braintree/transaction.rb#208
    def cancel_release!(*args); end

    # source://braintree//lib/braintree/transaction.rb#212
    def clone_transaction(*args); end

    # source://braintree//lib/braintree/transaction.rb#216
    def clone_transaction!(*args); end

    # source://braintree//lib/braintree/transaction.rb#196
    def create(*args); end

    # source://braintree//lib/braintree/transaction.rb#200
    def create!(*args); end

    # source://braintree//lib/braintree/transaction.rb#220
    def credit(*args); end

    # source://braintree//lib/braintree/transaction.rb#224
    def credit!(*args); end

    # source://braintree//lib/braintree/transaction.rb#228
    def find(*args); end

    # source://braintree//lib/braintree/transaction.rb#236
    def hold_in_escrow(*args); end

    # source://braintree//lib/braintree/transaction.rb#240
    def hold_in_escrow!(*args); end

    # source://braintree//lib/braintree/transaction.rb#232
    def line_items(*args); end

    # source://braintree//lib/braintree/transaction.rb#288
    def package_tracking(*args); end

    # source://braintree//lib/braintree/transaction.rb#292
    def package_tracking!(*args); end

    # source://braintree//lib/braintree/transaction.rb#244
    def refund(*args); end

    # source://braintree//lib/braintree/transaction.rb#248
    def refund!(*args); end

    # source://braintree//lib/braintree/transaction.rb#264
    def release_from_escrow(*args); end

    # source://braintree//lib/braintree/transaction.rb#268
    def release_from_escrow!(*args); end

    # source://braintree//lib/braintree/transaction.rb#252
    def sale(*args); end

    # source://braintree//lib/braintree/transaction.rb#256
    def sale!(*args); end

    # source://braintree//lib/braintree/transaction.rb#260
    def search(&block); end

    # source://braintree//lib/braintree/transaction.rb#296
    def submit_for_partial_settlement(*args); end

    # source://braintree//lib/braintree/transaction.rb#300
    def submit_for_partial_settlement!(*args); end

    # source://braintree//lib/braintree/transaction.rb#272
    def submit_for_settlement(*args); end

    # source://braintree//lib/braintree/transaction.rb#276
    def submit_for_settlement!(*args); end

    # source://braintree//lib/braintree/transaction.rb#280
    def update_details(*args); end

    # source://braintree//lib/braintree/transaction.rb#284
    def update_details!(*args); end

    # source://braintree//lib/braintree/transaction.rb#304
    def void(*args); end

    # source://braintree//lib/braintree/transaction.rb#308
    def void!(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/transaction.rb#69
module Braintree::Transaction::AdditionalCharge; end

# source://braintree//lib/braintree/transaction.rb#77
Braintree::Transaction::AdditionalCharge::All = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/transaction.rb#71
Braintree::Transaction::AdditionalCharge::GiftShop = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#74
Braintree::Transaction::AdditionalCharge::Laundry = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#72
Braintree::Transaction::AdditionalCharge::MiniBar = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#75
Braintree::Transaction::AdditionalCharge::Other = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#70
Braintree::Transaction::AdditionalCharge::Restaurant = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#73
Braintree::Transaction::AdditionalCharge::Telephone = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction/address_details.rb#3
class Braintree::Transaction::AddressDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [AddressDetails] a new instance of AddressDetails
  #
  # source://braintree//lib/braintree/transaction/address_details.rb#32
  def initialize(attributes); end

  # Returns the value of attribute company.
  #
  # source://braintree//lib/braintree/transaction/address_details.rb#16
  def company; end

  # Returns the value of attribute country_code_alpha2.
  #
  # source://braintree//lib/braintree/transaction/address_details.rb#17
  def country_code_alpha2; end

  # Returns the value of attribute country_code_alpha3.
  #
  # source://braintree//lib/braintree/transaction/address_details.rb#18
  def country_code_alpha3; end

  # Returns the value of attribute country_code_numeric.
  #
  # source://braintree//lib/braintree/transaction/address_details.rb#19
  def country_code_numeric; end

  # Returns the value of attribute country_name.
  #
  # source://braintree//lib/braintree/transaction/address_details.rb#20
  def country_name; end

  # Returns the value of attribute extended_address.
  #
  # source://braintree//lib/braintree/transaction/address_details.rb#21
  def extended_address; end

  # Returns the value of attribute first_name.
  #
  # source://braintree//lib/braintree/transaction/address_details.rb#22
  def first_name; end

  # Returns the value of attribute id.
  #
  # source://braintree//lib/braintree/transaction/address_details.rb#23
  def id; end

  # Returns the value of attribute last_name.
  #
  # source://braintree//lib/braintree/transaction/address_details.rb#24
  def last_name; end

  # Returns the value of attribute locality.
  #
  # source://braintree//lib/braintree/transaction/address_details.rb#25
  def locality; end

  # Returns the value of attribute phone_number.
  #
  # source://braintree//lib/braintree/transaction/address_details.rb#26
  def phone_number; end

  # Returns the value of attribute postal_code.
  #
  # source://braintree//lib/braintree/transaction/address_details.rb#27
  def postal_code; end

  # Returns the value of attribute region.
  #
  # source://braintree//lib/braintree/transaction/address_details.rb#28
  def region; end

  # Returns the value of attribute shipping_method.
  #
  # source://braintree//lib/braintree/transaction/address_details.rb#29
  def shipping_method; end

  # Returns the value of attribute street_address.
  #
  # source://braintree//lib/braintree/transaction/address_details.rb#30
  def street_address; end
end

# source://braintree//lib/braintree/transaction/address_details.rb#6
module Braintree::Transaction::AddressDetails::ShippingMethod; end

# source://braintree//lib/braintree/transaction/address_details.rb#11
Braintree::Transaction::AddressDetails::ShippingMethod::Electronic = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction/address_details.rb#10
Braintree::Transaction::AddressDetails::ShippingMethod::Ground = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction/address_details.rb#8
Braintree::Transaction::AddressDetails::ShippingMethod::NextDay = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction/address_details.rb#13
Braintree::Transaction::AddressDetails::ShippingMethod::PickupInStore = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction/address_details.rb#9
Braintree::Transaction::AddressDetails::ShippingMethod::Priority = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction/address_details.rb#7
Braintree::Transaction::AddressDetails::ShippingMethod::SameDay = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction/address_details.rb#12
Braintree::Transaction::AddressDetails::ShippingMethod::ShipToStore = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction/apple_pay_details.rb#3
class Braintree::Transaction::ApplePayDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [ApplePayDetails] a new instance of ApplePayDetails
  #
  # source://braintree//lib/braintree/transaction/apple_pay_details.rb#29
  def initialize(attributes); end

  # Returns the value of attribute bin.
  #
  # source://braintree//lib/braintree/transaction/apple_pay_details.rb#6
  def bin; end

  # Returns the value of attribute card_type.
  #
  # source://braintree//lib/braintree/transaction/apple_pay_details.rb#7
  def card_type; end

  # Returns the value of attribute cardholder_name.
  #
  # source://braintree//lib/braintree/transaction/apple_pay_details.rb#8
  def cardholder_name; end

  # Returns the value of attribute commercial.
  #
  # source://braintree//lib/braintree/transaction/apple_pay_details.rb#9
  def commercial; end

  # Returns the value of attribute country_of_issuance.
  #
  # source://braintree//lib/braintree/transaction/apple_pay_details.rb#10
  def country_of_issuance; end

  # Returns the value of attribute debit.
  #
  # source://braintree//lib/braintree/transaction/apple_pay_details.rb#11
  def debit; end

  # Returns the value of attribute durbin_regulated.
  #
  # source://braintree//lib/braintree/transaction/apple_pay_details.rb#12
  def durbin_regulated; end

  # Returns the value of attribute expiration_month.
  #
  # source://braintree//lib/braintree/transaction/apple_pay_details.rb#13
  def expiration_month; end

  # Returns the value of attribute expiration_year.
  #
  # source://braintree//lib/braintree/transaction/apple_pay_details.rb#14
  def expiration_year; end

  # Returns the value of attribute global_id.
  #
  # source://braintree//lib/braintree/transaction/apple_pay_details.rb#15
  def global_id; end

  # Returns the value of attribute healthcare.
  #
  # source://braintree//lib/braintree/transaction/apple_pay_details.rb#16
  def healthcare; end

  # Returns the value of attribute image_url.
  #
  # source://braintree//lib/braintree/transaction/apple_pay_details.rb#17
  def image_url; end

  # Returns the value of attribute issuing_bank.
  #
  # source://braintree//lib/braintree/transaction/apple_pay_details.rb#18
  def issuing_bank; end

  # Returns the value of attribute last_4.
  #
  # source://braintree//lib/braintree/transaction/apple_pay_details.rb#19
  def last_4; end

  # Returns the value of attribute merchant_token_identifier.
  #
  # source://braintree//lib/braintree/transaction/apple_pay_details.rb#20
  def merchant_token_identifier; end

  # Returns the value of attribute payment_instrument_name.
  #
  # source://braintree//lib/braintree/transaction/apple_pay_details.rb#21
  def payment_instrument_name; end

  # Returns the value of attribute payroll.
  #
  # source://braintree//lib/braintree/transaction/apple_pay_details.rb#22
  def payroll; end

  # Returns the value of attribute prepaid.
  #
  # source://braintree//lib/braintree/transaction/apple_pay_details.rb#23
  def prepaid; end

  # Returns the value of attribute product_id.
  #
  # source://braintree//lib/braintree/transaction/apple_pay_details.rb#24
  def product_id; end

  # Returns the value of attribute source_card_last4.
  #
  # source://braintree//lib/braintree/transaction/apple_pay_details.rb#25
  def source_card_last4; end

  # Returns the value of attribute source_description.
  #
  # source://braintree//lib/braintree/transaction/apple_pay_details.rb#26
  def source_description; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/transaction/apple_pay_details.rb#27
  def token; end
end

# source://braintree//lib/braintree/transaction.rb#6
module Braintree::Transaction::CreatedUsing; end

# source://braintree//lib/braintree/transaction.rb#7
Braintree::Transaction::CreatedUsing::FullInformation = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#8
Braintree::Transaction::CreatedUsing::Token = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#9
Braintree::Transaction::CreatedUsing::Unrecognized = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction/credit_card_details.rb#3
class Braintree::Transaction::CreditCardDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [CreditCardDetails] a new instance of CreditCardDetails
  #
  # source://braintree//lib/braintree/transaction/credit_card_details.rb#27
  def initialize(attributes); end

  # Returns the value of attribute account_type.
  #
  # source://braintree//lib/braintree/transaction/credit_card_details.rb#6
  def account_type; end

  # Returns the value of attribute bin.
  #
  # source://braintree//lib/braintree/transaction/credit_card_details.rb#7
  def bin; end

  # Returns the value of attribute card_type.
  #
  # source://braintree//lib/braintree/transaction/credit_card_details.rb#8
  def card_type; end

  # Returns the value of attribute cardholder_name.
  #
  # source://braintree//lib/braintree/transaction/credit_card_details.rb#9
  def cardholder_name; end

  # Returns the value of attribute commercial.
  #
  # source://braintree//lib/braintree/transaction/credit_card_details.rb#10
  def commercial; end

  # Returns the value of attribute country_of_issuance.
  #
  # source://braintree//lib/braintree/transaction/credit_card_details.rb#11
  def country_of_issuance; end

  # Returns the value of attribute customer_location.
  #
  # source://braintree//lib/braintree/transaction/credit_card_details.rb#12
  def customer_location; end

  # Returns the value of attribute debit.
  #
  # source://braintree//lib/braintree/transaction/credit_card_details.rb#13
  def debit; end

  # Returns the value of attribute durbin_regulated.
  #
  # source://braintree//lib/braintree/transaction/credit_card_details.rb#14
  def durbin_regulated; end

  # source://braintree//lib/braintree/transaction/credit_card_details.rb#31
  def expiration_date; end

  # Returns the value of attribute expiration_month.
  #
  # source://braintree//lib/braintree/transaction/credit_card_details.rb#15
  def expiration_month; end

  # Returns the value of attribute expiration_year.
  #
  # source://braintree//lib/braintree/transaction/credit_card_details.rb#16
  def expiration_year; end

  # Returns the value of attribute healthcare.
  #
  # source://braintree//lib/braintree/transaction/credit_card_details.rb#17
  def healthcare; end

  # Returns the value of attribute image_url.
  #
  # source://braintree//lib/braintree/transaction/credit_card_details.rb#18
  def image_url; end

  # source://braintree//lib/braintree/transaction/credit_card_details.rb#35
  def inspect; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/transaction/credit_card_details.rb#74
  def is_network_tokenized?; end

  # Returns the value of attribute issuing_bank.
  #
  # source://braintree//lib/braintree/transaction/credit_card_details.rb#19
  def issuing_bank; end

  # Returns the value of attribute last_4.
  #
  # source://braintree//lib/braintree/transaction/credit_card_details.rb#20
  def last_4; end

  # source://braintree//lib/braintree/transaction/credit_card_details.rb#63
  def masked_number; end

  # Returns the value of attribute payroll.
  #
  # source://braintree//lib/braintree/transaction/credit_card_details.rb#21
  def payroll; end

  # Returns the value of attribute prepaid.
  #
  # source://braintree//lib/braintree/transaction/credit_card_details.rb#22
  def prepaid; end

  # Returns the value of attribute product_id.
  #
  # source://braintree//lib/braintree/transaction/credit_card_details.rb#23
  def product_id; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/transaction/credit_card_details.rb#24
  def token; end

  # Returns the value of attribute unique_number_identifier.
  #
  # source://braintree//lib/braintree/transaction/credit_card_details.rb#25
  def unique_number_identifier; end

  # NEXT_MAJOR_VERSION Remove this method
  # The old venmo SDK class has been deprecated
  #
  # @return [Boolean]
  #
  # source://braintree//lib/braintree/transaction/credit_card_details.rb#69
  def venmo_sdk?; end
end

# source://braintree//lib/braintree/transaction/customer_details.rb#3
class Braintree::Transaction::CustomerDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [CustomerDetails] a new instance of CustomerDetails
  #
  # source://braintree//lib/braintree/transaction/customer_details.rb#15
  def initialize(attributes); end

  # Returns the value of attribute company.
  #
  # source://braintree//lib/braintree/transaction/customer_details.rb#6
  def company; end

  # Returns the value of attribute email.
  #
  # source://braintree//lib/braintree/transaction/customer_details.rb#7
  def email; end

  # Returns the value of attribute fax.
  #
  # source://braintree//lib/braintree/transaction/customer_details.rb#8
  def fax; end

  # Returns the value of attribute first_name.
  #
  # source://braintree//lib/braintree/transaction/customer_details.rb#9
  def first_name; end

  # Returns the value of attribute id.
  #
  # source://braintree//lib/braintree/transaction/customer_details.rb#10
  def id; end

  # source://braintree//lib/braintree/transaction/customer_details.rb#19
  def inspect; end

  # Returns the value of attribute last_name.
  #
  # source://braintree//lib/braintree/transaction/customer_details.rb#11
  def last_name; end

  # Returns the value of attribute phone.
  #
  # source://braintree//lib/braintree/transaction/customer_details.rb#12
  def phone; end

  # Returns the value of attribute website.
  #
  # source://braintree//lib/braintree/transaction/customer_details.rb#13
  def website; end
end

# source://braintree//lib/braintree/transaction/disbursement_details.rb#3
class Braintree::Transaction::DisbursementDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [DisbursementDetails] a new instance of DisbursementDetails
  #
  # source://braintree//lib/braintree/transaction/disbursement_details.rb#14
  def initialize(attributes); end

  # Returns the value of attribute disbursement_date.
  #
  # source://braintree//lib/braintree/transaction/disbursement_details.rb#6
  def disbursement_date; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/transaction/disbursement_details.rb#19
  def funds_held?; end

  # Returns the value of attribute settlement_amount.
  #
  # source://braintree//lib/braintree/transaction/disbursement_details.rb#7
  def settlement_amount; end

  # Returns the value of attribute settlement_currency_exchange_rate.
  #
  # source://braintree//lib/braintree/transaction/disbursement_details.rb#8
  def settlement_currency_exchange_rate; end

  # Returns the value of attribute settlement_currency_iso_code.
  #
  # source://braintree//lib/braintree/transaction/disbursement_details.rb#9
  def settlement_currency_iso_code; end

  # Returns the value of attribute success.
  #
  # source://braintree//lib/braintree/transaction/disbursement_details.rb#10
  def success; end

  # Returns the value of attribute success.
  #
  # source://braintree//lib/braintree/transaction/disbursement_details.rb#10
  def success?; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/transaction/disbursement_details.rb#23
  def valid?; end
end

# source://braintree//lib/braintree/transaction.rb#12
module Braintree::Transaction::EscrowStatus; end

# source://braintree//lib/braintree/transaction.rb#14
Braintree::Transaction::EscrowStatus::Held = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#13
Braintree::Transaction::EscrowStatus::HoldPending = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#17
Braintree::Transaction::EscrowStatus::Refunded = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#15
Braintree::Transaction::EscrowStatus::ReleasePending = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#16
Braintree::Transaction::EscrowStatus::Released = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#18
Braintree::Transaction::EscrowStatus::Unrecognized = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#87
module Braintree::Transaction::ExternalVault; end

# source://braintree//lib/braintree/transaction.rb#88
module Braintree::Transaction::ExternalVault::Status; end

# source://braintree//lib/braintree/transaction.rb#90
Braintree::Transaction::ExternalVault::Status::Vaulted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#89
Braintree::Transaction::ExternalVault::Status::WillVault = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#21
module Braintree::Transaction::GatewayRejectionReason; end

# source://braintree//lib/braintree/transaction.rb#23
Braintree::Transaction::GatewayRejectionReason::AVS = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#24
Braintree::Transaction::GatewayRejectionReason::AVSAndCVV = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#22
Braintree::Transaction::GatewayRejectionReason::ApplicationIncomplete = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#25
Braintree::Transaction::GatewayRejectionReason::CVV = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#26
Braintree::Transaction::GatewayRejectionReason::Duplicate = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#27
Braintree::Transaction::GatewayRejectionReason::ExcessiveRetry = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#28
Braintree::Transaction::GatewayRejectionReason::Fraud = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#29
Braintree::Transaction::GatewayRejectionReason::RiskThreshold = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#30
Braintree::Transaction::GatewayRejectionReason::ThreeDSecure = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#31
Braintree::Transaction::GatewayRejectionReason::TokenIssuance = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#32
Braintree::Transaction::GatewayRejectionReason::Unrecognized = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction/google_pay_details.rb#3
class Braintree::Transaction::GooglePayDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [GooglePayDetails] a new instance of GooglePayDetails
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#30
  def initialize(attributes); end

  # Returns the value of attribute bin.
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#6
  def bin; end

  # Returns the value of attribute card_type.
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#7
  def card_type; end

  # Returns the value of attribute commercial.
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#23
  def commercial; end

  # Returns the value of attribute country_of_issuance.
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#26
  def country_of_issuance; end

  # Returns the value of attribute debit.
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#21
  def debit; end

  # Returns the value of attribute durbin_regulated.
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#22
  def durbin_regulated; end

  # Returns the value of attribute expiration_month.
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#8
  def expiration_month; end

  # Returns the value of attribute expiration_year.
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#9
  def expiration_year; end

  # Returns the value of attribute global_id.
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#28
  def global_id; end

  # Returns the value of attribute google_transaction_id.
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#10
  def google_transaction_id; end

  # Returns the value of attribute healthcare.
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#20
  def healthcare; end

  # Returns the value of attribute image_url.
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#11
  def image_url; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#36
  def is_network_tokenized?; end

  # Returns the value of attribute issuing_bank.
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#25
  def issuing_bank; end

  # Returns the value of attribute last_4.
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#12
  def last_4; end

  # Returns the value of attribute payroll.
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#24
  def payroll; end

  # Returns the value of attribute prepaid.
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#19
  def prepaid; end

  # Returns the value of attribute product_id.
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#27
  def product_id; end

  # Returns the value of attribute source_card_last_4.
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#13
  def source_card_last_4; end

  # Returns the value of attribute source_card_type.
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#14
  def source_card_type; end

  # Returns the value of attribute source_description.
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#15
  def source_description; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#16
  def token; end

  # Returns the value of attribute virtual_card_last_4.
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#17
  def virtual_card_last_4; end

  # Returns the value of attribute virtual_card_type.
  #
  # source://braintree//lib/braintree/transaction/google_pay_details.rb#18
  def virtual_card_type; end
end

# source://braintree//lib/braintree/transaction.rb#61
module Braintree::Transaction::IndustryType; end

# source://braintree//lib/braintree/transaction.rb#66
Braintree::Transaction::IndustryType::All = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/transaction.rb#62
Braintree::Transaction::IndustryType::Lodging = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#63
Braintree::Transaction::IndustryType::TravelAndCruise = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#64
Braintree::Transaction::IndustryType::TravelAndFlight = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction/installment.rb#3
class Braintree::Transaction::Installment
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [Installment] a new instance of Installment
  #
  # source://braintree//lib/braintree/transaction/installment.rb#12
  def initialize(attributes); end

  # Returns the value of attribute actual_disbursement_date.
  #
  # source://braintree//lib/braintree/transaction/installment.rb#9
  def actual_disbursement_date; end

  # Returns the value of attribute adjustments.
  #
  # source://braintree//lib/braintree/transaction/installment.rb#10
  def adjustments; end

  # Returns the value of attribute amount.
  #
  # source://braintree//lib/braintree/transaction/installment.rb#7
  def amount; end

  # Returns the value of attribute id.
  #
  # source://braintree//lib/braintree/transaction/installment.rb#6
  def id; end

  # source://braintree//lib/braintree/transaction/installment.rb#18
  def inspect; end

  # Returns the value of attribute projected_disbursement_date.
  #
  # source://braintree//lib/braintree/transaction/installment.rb#8
  def projected_disbursement_date; end
end

# source://braintree//lib/braintree/transaction/installment/adjustment.rb#4
class Braintree::Transaction::Installment::Adjustment
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [Adjustment] a new instance of Adjustment
  #
  # source://braintree//lib/braintree/transaction/installment/adjustment.rb#17
  def initialize(attributes); end

  # Returns the value of attribute actual_disbursement_date.
  #
  # source://braintree//lib/braintree/transaction/installment/adjustment.rb#15
  def actual_disbursement_date; end

  # Returns the value of attribute amount.
  #
  # source://braintree//lib/braintree/transaction/installment/adjustment.rb#12
  def amount; end

  # source://braintree//lib/braintree/transaction/installment/adjustment.rb#22
  def inspect; end

  # Returns the value of attribute kind.
  #
  # source://braintree//lib/braintree/transaction/installment/adjustment.rb#13
  def kind; end

  # Returns the value of attribute projected_disbursement_date.
  #
  # source://braintree//lib/braintree/transaction/installment/adjustment.rb#14
  def projected_disbursement_date; end
end

# source://braintree//lib/braintree/transaction/installment/adjustment.rb#7
module Braintree::Transaction::Installment::Adjustment::Kind; end

# source://braintree//lib/braintree/transaction/installment/adjustment.rb#9
Braintree::Transaction::Installment::Adjustment::Kind::Dispute = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction/installment/adjustment.rb#8
Braintree::Transaction::Installment::Adjustment::Kind::Refund = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction/local_payment_details.rb#3
class Braintree::Transaction::LocalPaymentDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [LocalPaymentDetails] a new instance of LocalPaymentDetails
  #
  # source://braintree//lib/braintree/transaction/local_payment_details.rb#21
  def initialize(attributes); end

  # Returns the value of attribute capture_id.
  #
  # source://braintree//lib/braintree/transaction/local_payment_details.rb#6
  def capture_id; end

  # Returns the value of attribute custom_field.
  #
  # source://braintree//lib/braintree/transaction/local_payment_details.rb#7
  def custom_field; end

  # Returns the value of attribute debug_id.
  #
  # source://braintree//lib/braintree/transaction/local_payment_details.rb#8
  def debug_id; end

  # Returns the value of attribute description.
  #
  # source://braintree//lib/braintree/transaction/local_payment_details.rb#9
  def description; end

  # Returns the value of attribute funding_source.
  #
  # source://braintree//lib/braintree/transaction/local_payment_details.rb#10
  def funding_source; end

  # Returns the value of attribute implicitly_vaulted_payment_method_global_id.
  #
  # source://braintree//lib/braintree/transaction/local_payment_details.rb#11
  def implicitly_vaulted_payment_method_global_id; end

  # Returns the value of attribute implicitly_vaulted_payment_method_token.
  #
  # source://braintree//lib/braintree/transaction/local_payment_details.rb#12
  def implicitly_vaulted_payment_method_token; end

  # Returns the value of attribute payer_id.
  #
  # source://braintree//lib/braintree/transaction/local_payment_details.rb#13
  def payer_id; end

  # Returns the value of attribute payment_id.
  #
  # source://braintree//lib/braintree/transaction/local_payment_details.rb#14
  def payment_id; end

  # Returns the value of attribute refund_from_transaction_fee_amount.
  #
  # source://braintree//lib/braintree/transaction/local_payment_details.rb#15
  def refund_from_transaction_fee_amount; end

  # Returns the value of attribute refund_from_transaction_fee_currency_iso_code.
  #
  # source://braintree//lib/braintree/transaction/local_payment_details.rb#16
  def refund_from_transaction_fee_currency_iso_code; end

  # Returns the value of attribute refund_id.
  #
  # source://braintree//lib/braintree/transaction/local_payment_details.rb#17
  def refund_id; end

  # Returns the value of attribute transaction_fee_amount.
  #
  # source://braintree//lib/braintree/transaction/local_payment_details.rb#18
  def transaction_fee_amount; end

  # Returns the value of attribute transaction_fee_currency_iso_code.
  #
  # source://braintree//lib/braintree/transaction/local_payment_details.rb#19
  def transaction_fee_currency_iso_code; end
end

# source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#3
class Braintree::Transaction::MetaCheckoutCardDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [MetaCheckoutCardDetails] a new instance of MetaCheckoutCardDetails
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#30
  def initialize(attributes); end

  # Returns the value of attribute bin.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#6
  def bin; end

  # Returns the value of attribute card_type.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#7
  def card_type; end

  # Returns the value of attribute cardholder_name.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#8
  def cardholder_name; end

  # Returns the value of attribute commercial.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#9
  def commercial; end

  # Returns the value of attribute container_id.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#10
  def container_id; end

  # Returns the value of attribute country_of_issuance.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#11
  def country_of_issuance; end

  # Returns the value of attribute created_at.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#12
  def created_at; end

  # Returns the value of attribute customer_location.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#13
  def customer_location; end

  # Returns the value of attribute debit.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#14
  def debit; end

  # Returns the value of attribute durbin_regulated.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#15
  def durbin_regulated; end

  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#34
  def expiration_date; end

  # Returns the value of attribute expiration_month.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#16
  def expiration_month; end

  # Returns the value of attribute expiration_year.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#17
  def expiration_year; end

  # Returns the value of attribute healthcare.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#18
  def healthcare; end

  # Returns the value of attribute image_url.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#19
  def image_url; end

  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#38
  def inspect; end

  # Returns the value of attribute is_network_tokenized.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#20
  def is_network_tokenized; end

  # Returns the value of attribute issuing_bank.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#21
  def issuing_bank; end

  # Returns the value of attribute last_4.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#22
  def last_4; end

  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#47
  def masked_number; end

  # Returns the value of attribute payroll.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#23
  def payroll; end

  # Returns the value of attribute prepaid.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#24
  def prepaid; end

  # Returns the value of attribute product_id.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#25
  def product_id; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#26
  def token; end

  # Returns the value of attribute unique_number_identifier.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#27
  def unique_number_identifier; end

  # Returns the value of attribute updated_at.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_card_details.rb#28
  def updated_at; end
end

# source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#3
class Braintree::Transaction::MetaCheckoutTokenDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [MetaCheckoutTokenDetails] a new instance of MetaCheckoutTokenDetails
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#32
  def initialize(attributes); end

  # Returns the value of attribute bin.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#6
  def bin; end

  # Returns the value of attribute card_type.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#8
  def card_type; end

  # Returns the value of attribute cardholder_name.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#9
  def cardholder_name; end

  # Returns the value of attribute commercial.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#10
  def commercial; end

  # Returns the value of attribute container_id.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#7
  def container_id; end

  # Returns the value of attribute country_of_issuance.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#11
  def country_of_issuance; end

  # Returns the value of attribute created_at.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#12
  def created_at; end

  # Returns the value of attribute cryptogram.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#13
  def cryptogram; end

  # Returns the value of attribute customer_location.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#14
  def customer_location; end

  # Returns the value of attribute debit.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#15
  def debit; end

  # Returns the value of attribute durbin_regulated.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#16
  def durbin_regulated; end

  # Returns the value of attribute ecommerce_indicator.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#17
  def ecommerce_indicator; end

  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#36
  def expiration_date; end

  # Returns the value of attribute expiration_month.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#18
  def expiration_month; end

  # Returns the value of attribute expiration_year.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#19
  def expiration_year; end

  # Returns the value of attribute healthcare.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#20
  def healthcare; end

  # Returns the value of attribute image_url.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#21
  def image_url; end

  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#40
  def inspect; end

  # Returns the value of attribute is_network_tokenized.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#23
  def is_network_tokenized; end

  # Returns the value of attribute issuing_bank.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#22
  def issuing_bank; end

  # Returns the value of attribute last_4.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#24
  def last_4; end

  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#49
  def masked_number; end

  # Returns the value of attribute payroll.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#25
  def payroll; end

  # Returns the value of attribute prepaid.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#26
  def prepaid; end

  # Returns the value of attribute product_id.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#27
  def product_id; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#28
  def token; end

  # Returns the value of attribute unique_number_identifier.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#29
  def unique_number_identifier; end

  # Returns the value of attribute updated_at.
  #
  # source://braintree//lib/braintree/transaction/meta_checkout_token_details.rb#30
  def updated_at; end
end

# source://braintree//lib/braintree/transaction/package_details.rb#3
class Braintree::Transaction::PackageDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [PackageDetails] a new instance of PackageDetails
  #
  # source://braintree//lib/braintree/transaction/package_details.rb#11
  def initialize(attributes); end

  # Returns the value of attribute carrier.
  #
  # source://braintree//lib/braintree/transaction/package_details.rb#6
  def carrier; end

  # Returns the value of attribute id.
  #
  # source://braintree//lib/braintree/transaction/package_details.rb#7
  def id; end

  # Returns the value of attribute paypal_tracking_id.
  #
  # source://braintree//lib/braintree/transaction/package_details.rb#8
  def paypal_tracking_id; end

  # Returns the value of attribute tracking_number.
  #
  # source://braintree//lib/braintree/transaction/package_details.rb#9
  def tracking_number; end
end

# source://braintree//lib/braintree/transaction/paypal_details.rb#3
class Braintree::Transaction::PayPalDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [PayPalDetails] a new instance of PayPalDetails
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#33
  def initialize(attributes); end

  # Returns the value of attribute authorization_id.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#6
  def authorization_id; end

  # Returns the value of attribute billing_agreement_id.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#7
  def billing_agreement_id; end

  # Returns the value of attribute capture_id.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#8
  def capture_id; end

  # Returns the value of attribute custom_field.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#9
  def custom_field; end

  # Returns the value of attribute debug_id.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#10
  def debug_id; end

  # Returns the value of attribute description.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#11
  def description; end

  # Returns the value of attribute image_url.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#12
  def image_url; end

  # Returns the value of attribute implicitly_vaulted_payment_method_global_id.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#13
  def implicitly_vaulted_payment_method_global_id; end

  # Returns the value of attribute implicitly_vaulted_payment_method_token.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#14
  def implicitly_vaulted_payment_method_token; end

  # Returns the value of attribute payee_email.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#15
  def payee_email; end

  # Returns the value of attribute payee_id.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#16
  def payee_id; end

  # Returns the value of attribute payer_email.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#17
  def payer_email; end

  # Returns the value of attribute payer_first_name.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#18
  def payer_first_name; end

  # Returns the value of attribute payer_id.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#19
  def payer_id; end

  # Returns the value of attribute payer_last_name.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#20
  def payer_last_name; end

  # Returns the value of attribute payer_status.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#21
  def payer_status; end

  # Returns the value of attribute payment_id.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#22
  def payment_id; end

  # Returns the value of attribute refund_from_transaction_fee_amount.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#23
  def refund_from_transaction_fee_amount; end

  # Returns the value of attribute refund_from_transaction_fee_currency_iso_code.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#24
  def refund_from_transaction_fee_currency_iso_code; end

  # Returns the value of attribute refund_id.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#25
  def refund_id; end

  # Returns the value of attribute seller_protection_status.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#26
  def seller_protection_status; end

  # Returns the value of attribute tax_id.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#27
  def tax_id; end

  # Returns the value of attribute tax_id_type.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#28
  def tax_id_type; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#29
  def token; end

  # Returns the value of attribute transaction_fee_amount.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#30
  def transaction_fee_amount; end

  # Returns the value of attribute transaction_fee_currency_iso_code.
  #
  # source://braintree//lib/braintree/transaction/paypal_details.rb#31
  def transaction_fee_currency_iso_code; end
end

# source://braintree//lib/braintree/transaction/paypal_here_details.rb#3
class Braintree::Transaction::PayPalHereDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [PayPalHereDetails] a new instance of PayPalHereDetails
  #
  # source://braintree//lib/braintree/transaction/paypal_here_details.rb#18
  def initialize(attributes); end

  # Returns the value of attribute authorization_id.
  #
  # source://braintree//lib/braintree/transaction/paypal_here_details.rb#6
  def authorization_id; end

  # Returns the value of attribute capture_id.
  #
  # source://braintree//lib/braintree/transaction/paypal_here_details.rb#7
  def capture_id; end

  # Returns the value of attribute invoice_id.
  #
  # source://braintree//lib/braintree/transaction/paypal_here_details.rb#8
  def invoice_id; end

  # Returns the value of attribute last_4.
  #
  # source://braintree//lib/braintree/transaction/paypal_here_details.rb#9
  def last_4; end

  # Returns the value of attribute payment_id.
  #
  # source://braintree//lib/braintree/transaction/paypal_here_details.rb#10
  def payment_id; end

  # Returns the value of attribute payment_type.
  #
  # source://braintree//lib/braintree/transaction/paypal_here_details.rb#11
  def payment_type; end

  # Returns the value of attribute refund_id.
  #
  # source://braintree//lib/braintree/transaction/paypal_here_details.rb#12
  def refund_id; end

  # Returns the value of attribute transaction_fee_amount.
  #
  # source://braintree//lib/braintree/transaction/paypal_here_details.rb#13
  def transaction_fee_amount; end

  # Returns the value of attribute transaction_fee_currency_iso_code.
  #
  # source://braintree//lib/braintree/transaction/paypal_here_details.rb#14
  def transaction_fee_currency_iso_code; end

  # Returns the value of attribute transaction_initiation_date.
  #
  # source://braintree//lib/braintree/transaction/paypal_here_details.rb#15
  def transaction_initiation_date; end

  # Returns the value of attribute transaction_updated_date.
  #
  # source://braintree//lib/braintree/transaction/paypal_here_details.rb#16
  def transaction_updated_date; end
end

# source://braintree//lib/braintree/transaction/payment_receipt.rb#3
class Braintree::Transaction::PaymentReceipt
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [PaymentReceipt] a new instance of PaymentReceipt
  #
  # source://braintree//lib/braintree/transaction/payment_receipt.rb#24
  def initialize(attributes); end

  # Returns the value of attribute account_balance.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt.rb#6
  def account_balance; end

  # Returns the value of attribute amount.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt.rb#7
  def amount; end

  # Returns the value of attribute card_last_4.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt.rb#8
  def card_last_4; end

  # Returns the value of attribute card_present_data.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt.rb#9
  def card_present_data; end

  # Returns the value of attribute card_type.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt.rb#10
  def card_type; end

  # Returns the value of attribute currency_iso_code.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt.rb#11
  def currency_iso_code; end

  # Returns the value of attribute global_id.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt.rb#12
  def global_id; end

  # Returns the value of attribute id.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt.rb#13
  def id; end

  # Returns the value of attribute merchant_address.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt.rb#14
  def merchant_address; end

  # Returns the value of attribute merchant_identification_number.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt.rb#15
  def merchant_identification_number; end

  # Returns the value of attribute merchant_name.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt.rb#16
  def merchant_name; end

  # Returns the value of attribute pin_verified.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt.rb#17
  def pin_verified; end

  # Returns the value of attribute processor_authorization_code.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt.rb#18
  def processor_authorization_code; end

  # Returns the value of attribute processor_response_code.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt.rb#19
  def processor_response_code; end

  # Returns the value of attribute processor_response_text.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt.rb#20
  def processor_response_text; end

  # Returns the value of attribute terminal_identification_number.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt.rb#21
  def terminal_identification_number; end

  # Returns the value of attribute type.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt.rb#22
  def type; end
end

# source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#4
class Braintree::Transaction::PaymentReceipt::CardPresentData
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [CardPresentData] a new instance of CardPresentData
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#30
  def initialize(attributes); end

  # Returns the value of attribute application_cryptogram.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#7
  def application_cryptogram; end

  # Returns the value of attribute application_identifier.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#8
  def application_identifier; end

  # Returns the value of attribute application_interchange_profile.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#9
  def application_interchange_profile; end

  # Returns the value of attribute application_name.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#10
  def application_name; end

  # Returns the value of attribute application_transaction_counter.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#11
  def application_transaction_counter; end

  # Returns the value of attribute application_usage_control.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#12
  def application_usage_control; end

  # Returns the value of attribute authorization_mode.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#13
  def authorization_mode; end

  # Returns the value of attribute authorization_response_code.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#14
  def authorization_response_code; end

  # Returns the value of attribute card_entry_method.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#15
  def card_entry_method; end

  # Returns the value of attribute card_sequence_number.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#16
  def card_sequence_number; end

  # Returns the value of attribute cardholder_verification_method_results.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#17
  def cardholder_verification_method_results; end

  # Returns the value of attribute cashback_amount.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#18
  def cashback_amount; end

  # Returns the value of attribute cryptogram_information_data.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#19
  def cryptogram_information_data; end

  # Returns the value of attribute issuer_action_code_default.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#20
  def issuer_action_code_default; end

  # Returns the value of attribute issuer_action_code_denial.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#21
  def issuer_action_code_denial; end

  # Returns the value of attribute issuer_action_code_online.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#22
  def issuer_action_code_online; end

  # Returns the value of attribute issuer_authentication_data.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#23
  def issuer_authentication_data; end

  # Returns the value of attribute terminal_country_code.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#24
  def terminal_country_code; end

  # Returns the value of attribute terminal_transaction_date.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#25
  def terminal_transaction_date; end

  # Returns the value of attribute terminal_transaction_type.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#26
  def terminal_transaction_type; end

  # Returns the value of attribute terminal_verification_result.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#27
  def terminal_verification_result; end

  # Returns the value of attribute unpredictable_number.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/card_present_data.rb#28
  def unpredictable_number; end
end

# source://braintree//lib/braintree/transaction/payment_receipt/merchant_address.rb#4
class Braintree::Transaction::PaymentReceipt::MerchantAddress
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [MerchantAddress] a new instance of MerchantAddress
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/merchant_address.rb#13
  def initialize(attributes); end

  # Returns the value of attribute locality.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/merchant_address.rb#7
  def locality; end

  # Returns the value of attribute phone.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/merchant_address.rb#8
  def phone; end

  # Returns the value of attribute postal_code.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/merchant_address.rb#9
  def postal_code; end

  # Returns the value of attribute region.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/merchant_address.rb#10
  def region; end

  # Returns the value of attribute street_address.
  #
  # source://braintree//lib/braintree/transaction/payment_receipt/merchant_address.rb#11
  def street_address; end
end

# source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#3
class Braintree::Transaction::SamsungPayCardDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [SamsungPayCardDetails] a new instance of SamsungPayCardDetails
  #
  # source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#26
  def initialize(attributes); end

  # Returns the value of attribute bin.
  #
  # source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#6
  def bin; end

  # Returns the value of attribute card_type.
  #
  # source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#8
  def card_type; end

  # Returns the value of attribute cardholder_name.
  #
  # source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#7
  def cardholder_name; end

  # Returns the value of attribute commercial.
  #
  # source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#9
  def commercial; end

  # Returns the value of attribute country_of_issuance.
  #
  # source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#10
  def country_of_issuance; end

  # Returns the value of attribute customer_location.
  #
  # source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#11
  def customer_location; end

  # Returns the value of attribute debit.
  #
  # source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#12
  def debit; end

  # Returns the value of attribute durbin_regulated.
  #
  # source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#13
  def durbin_regulated; end

  # source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#30
  def expiration_date; end

  # Returns the value of attribute expiration_month.
  #
  # source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#14
  def expiration_month; end

  # Returns the value of attribute expiration_year.
  #
  # source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#15
  def expiration_year; end

  # Returns the value of attribute healthcare.
  #
  # source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#16
  def healthcare; end

  # Returns the value of attribute image_url.
  #
  # source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#17
  def image_url; end

  # source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#34
  def inspect; end

  # Returns the value of attribute issuing_bank.
  #
  # source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#18
  def issuing_bank; end

  # Returns the value of attribute last_4.
  #
  # source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#19
  def last_4; end

  # source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#43
  def masked_number; end

  # Returns the value of attribute payroll.
  #
  # source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#20
  def payroll; end

  # Returns the value of attribute prepaid.
  #
  # source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#21
  def prepaid; end

  # Returns the value of attribute product_id.
  #
  # source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#22
  def product_id; end

  # Returns the value of attribute source_card_last_4.
  #
  # source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#23
  def source_card_last_4; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/transaction/samsung_pay_card_details.rb#24
  def token; end
end

# source://braintree//lib/braintree/transaction/sepa_direct_debit_account_details.rb#3
class Braintree::Transaction::SepaDirectDebitAccountDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [SepaDirectDebitAccountDetails] a new instance of SepaDirectDebitAccountDetails
  #
  # source://braintree//lib/braintree/transaction/sepa_direct_debit_account_details.rb#22
  def initialize(attributes); end

  # Returns the value of attribute bank_reference_token.
  #
  # source://braintree//lib/braintree/transaction/sepa_direct_debit_account_details.rb#6
  def bank_reference_token; end

  # Returns the value of attribute capture_id.
  #
  # source://braintree//lib/braintree/transaction/sepa_direct_debit_account_details.rb#7
  def capture_id; end

  # Returns the value of attribute debug_id.
  #
  # source://braintree//lib/braintree/transaction/sepa_direct_debit_account_details.rb#8
  def debug_id; end

  # Returns the value of attribute global_id.
  #
  # source://braintree//lib/braintree/transaction/sepa_direct_debit_account_details.rb#9
  def global_id; end

  # Returns the value of attribute last_4.
  #
  # source://braintree//lib/braintree/transaction/sepa_direct_debit_account_details.rb#10
  def last_4; end

  # Returns the value of attribute mandate_type.
  #
  # source://braintree//lib/braintree/transaction/sepa_direct_debit_account_details.rb#11
  def mandate_type; end

  # Returns the value of attribute merchant_or_partner_customer_id.
  #
  # source://braintree//lib/braintree/transaction/sepa_direct_debit_account_details.rb#12
  def merchant_or_partner_customer_id; end

  # Returns the value of attribute paypal_v2_order_id.
  #
  # source://braintree//lib/braintree/transaction/sepa_direct_debit_account_details.rb#13
  def paypal_v2_order_id; end

  # Returns the value of attribute refund_from_transaction_fee_amount.
  #
  # source://braintree//lib/braintree/transaction/sepa_direct_debit_account_details.rb#14
  def refund_from_transaction_fee_amount; end

  # Returns the value of attribute refund_from_transaction_fee_currency_iso_code.
  #
  # source://braintree//lib/braintree/transaction/sepa_direct_debit_account_details.rb#15
  def refund_from_transaction_fee_currency_iso_code; end

  # Returns the value of attribute refund_id.
  #
  # source://braintree//lib/braintree/transaction/sepa_direct_debit_account_details.rb#16
  def refund_id; end

  # Returns the value of attribute settlement_type.
  #
  # source://braintree//lib/braintree/transaction/sepa_direct_debit_account_details.rb#17
  def settlement_type; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/transaction/sepa_direct_debit_account_details.rb#18
  def token; end

  # Returns the value of attribute transaction_fee_amount.
  #
  # source://braintree//lib/braintree/transaction/sepa_direct_debit_account_details.rb#19
  def transaction_fee_amount; end

  # Returns the value of attribute transaction_fee_currency_iso_code.
  #
  # source://braintree//lib/braintree/transaction/sepa_direct_debit_account_details.rb#20
  def transaction_fee_currency_iso_code; end
end

# source://braintree//lib/braintree/transaction.rb#54
module Braintree::Transaction::Source; end

# source://braintree//lib/braintree/transaction.rb#55
Braintree::Transaction::Source::Api = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#56
Braintree::Transaction::Source::ControlPanel = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#57
Braintree::Transaction::Source::Recurring = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#58
Braintree::Transaction::Source::Unrecognized = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#35
module Braintree::Transaction::Status; end

# source://braintree//lib/braintree/transaction.rb#51
Braintree::Transaction::Status::All = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/transaction.rb#36
Braintree::Transaction::Status::AuthorizationExpired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#38
Braintree::Transaction::Status::Authorized = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#37
Braintree::Transaction::Status::Authorizing = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#40
Braintree::Transaction::Status::Failed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#39
Braintree::Transaction::Status::GatewayRejected = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#41
Braintree::Transaction::Status::ProcessorDeclined = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#42
Braintree::Transaction::Status::Settled = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#43
Braintree::Transaction::Status::SettlementConfirmed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#44
Braintree::Transaction::Status::SettlementDeclined = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#45
Braintree::Transaction::Status::SettlementPending = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#46
Braintree::Transaction::Status::Settling = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#47
Braintree::Transaction::Status::SubmittedForSettlement = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#49
Braintree::Transaction::Status::Unrecognized = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#48
Braintree::Transaction::Status::Voided = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction/status_details.rb#3
class Braintree::Transaction::StatusDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [StatusDetails] a new instance of StatusDetails
  #
  # source://braintree//lib/braintree/transaction/status_details.rb#12
  def initialize(attributes); end

  # Returns the value of attribute amount.
  #
  # source://braintree//lib/braintree/transaction/status_details.rb#6
  def amount; end

  # Returns the value of attribute status.
  #
  # source://braintree//lib/braintree/transaction/status_details.rb#7
  def status; end

  # Returns the value of attribute timestamp.
  #
  # source://braintree//lib/braintree/transaction/status_details.rb#8
  def timestamp; end

  # Returns the value of attribute transaction_source.
  #
  # source://braintree//lib/braintree/transaction/status_details.rb#9
  def transaction_source; end

  # Returns the value of attribute user.
  #
  # source://braintree//lib/braintree/transaction/status_details.rb#10
  def user; end
end

# source://braintree//lib/braintree/transaction/subscription_details.rb#3
class Braintree::Transaction::SubscriptionDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [SubscriptionDetails] a new instance of SubscriptionDetails
  #
  # source://braintree//lib/braintree/transaction/subscription_details.rb#9
  def initialize(attributes); end

  # Returns the value of attribute billing_period_end_date.
  #
  # source://braintree//lib/braintree/transaction/subscription_details.rb#6
  def billing_period_end_date; end

  # Returns the value of attribute billing_period_start_date.
  #
  # source://braintree//lib/braintree/transaction/subscription_details.rb#7
  def billing_period_start_date; end
end

# source://braintree//lib/braintree/transaction.rb#80
module Braintree::Transaction::Type; end

# source://braintree//lib/braintree/transaction.rb#84
Braintree::Transaction::Type::All = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/transaction.rb#81
Braintree::Transaction::Type::Credit = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction.rb#82
Braintree::Transaction::Type::Sale = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/transaction/us_bank_account_details.rb#3
class Braintree::Transaction::UsBankAccountDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [UsBankAccountDetails] a new instance of UsBankAccountDetails
  #
  # source://braintree//lib/braintree/transaction/us_bank_account_details.rb#16
  def initialize(attributes); end

  # Returns the value of attribute account_holder_name.
  #
  # source://braintree//lib/braintree/transaction/us_bank_account_details.rb#6
  def account_holder_name; end

  # Returns the value of attribute account_type.
  #
  # source://braintree//lib/braintree/transaction/us_bank_account_details.rb#7
  def account_type; end

  # Returns the value of attribute ach_mandate.
  #
  # source://braintree//lib/braintree/transaction/us_bank_account_details.rb#8
  def ach_mandate; end

  # Returns the value of attribute bank_name.
  #
  # source://braintree//lib/braintree/transaction/us_bank_account_details.rb#9
  def bank_name; end

  # Returns the value of attribute global_id.
  #
  # source://braintree//lib/braintree/transaction/us_bank_account_details.rb#10
  def global_id; end

  # Returns the value of attribute image_url.
  #
  # source://braintree//lib/braintree/transaction/us_bank_account_details.rb#11
  def image_url; end

  # Returns the value of attribute last_4.
  #
  # source://braintree//lib/braintree/transaction/us_bank_account_details.rb#12
  def last_4; end

  # Returns the value of attribute routing_number.
  #
  # source://braintree//lib/braintree/transaction/us_bank_account_details.rb#13
  def routing_number; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/transaction/us_bank_account_details.rb#14
  def token; end
end

# source://braintree//lib/braintree/transaction/venmo_account_details.rb#3
class Braintree::Transaction::VenmoAccountDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [VenmoAccountDetails] a new instance of VenmoAccountDetails
  #
  # source://braintree//lib/braintree/transaction/venmo_account_details.rb#12
  def initialize(attributes); end

  # Returns the value of attribute image_url.
  #
  # source://braintree//lib/braintree/transaction/venmo_account_details.rb#6
  def image_url; end

  # Returns the value of attribute source_description.
  #
  # source://braintree//lib/braintree/transaction/venmo_account_details.rb#7
  def source_description; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/transaction/venmo_account_details.rb#8
  def token; end

  # Returns the value of attribute username.
  #
  # source://braintree//lib/braintree/transaction/venmo_account_details.rb#9
  def username; end

  # Returns the value of attribute venmo_user_id.
  #
  # source://braintree//lib/braintree/transaction/venmo_account_details.rb#10
  def venmo_user_id; end
end

# source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#3
class Braintree::Transaction::VisaCheckoutCardDetails
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [VisaCheckoutCardDetails] a new instance of VisaCheckoutCardDetails
  #
  # source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#26
  def initialize(attributes); end

  # Returns the value of attribute bin.
  #
  # source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#6
  def bin; end

  # Returns the value of attribute call_id.
  #
  # source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#7
  def call_id; end

  # Returns the value of attribute card_type.
  #
  # source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#8
  def card_type; end

  # Returns the value of attribute cardholder_name.
  #
  # source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#9
  def cardholder_name; end

  # Returns the value of attribute commercial.
  #
  # source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#10
  def commercial; end

  # Returns the value of attribute country_of_issuance.
  #
  # source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#11
  def country_of_issuance; end

  # Returns the value of attribute customer_location.
  #
  # source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#12
  def customer_location; end

  # Returns the value of attribute debit.
  #
  # source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#13
  def debit; end

  # Returns the value of attribute durbin_regulated.
  #
  # source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#14
  def durbin_regulated; end

  # source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#30
  def expiration_date; end

  # Returns the value of attribute expiration_month.
  #
  # source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#15
  def expiration_month; end

  # Returns the value of attribute expiration_year.
  #
  # source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#16
  def expiration_year; end

  # Returns the value of attribute healthcare.
  #
  # source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#17
  def healthcare; end

  # Returns the value of attribute image_url.
  #
  # source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#18
  def image_url; end

  # source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#34
  def inspect; end

  # Returns the value of attribute issuing_bank.
  #
  # source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#19
  def issuing_bank; end

  # Returns the value of attribute last_4.
  #
  # source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#20
  def last_4; end

  # source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#43
  def masked_number; end

  # Returns the value of attribute payroll.
  #
  # source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#21
  def payroll; end

  # Returns the value of attribute prepaid.
  #
  # source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#22
  def prepaid; end

  # Returns the value of attribute product_id.
  #
  # source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#23
  def product_id; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/transaction/visa_checkout_card_details.rb#24
  def token; end
end

# source://braintree//lib/braintree/transaction_gateway.rb#2
class Braintree::TransactionGateway
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [TransactionGateway] a new instance of TransactionGateway
  #
  # source://braintree//lib/braintree/transaction_gateway.rb#5
  def initialize(gateway); end

  # source://braintree//lib/braintree/transaction_gateway.rb#347
  def _do_create(path, params = T.unsafe(nil)); end

  # source://braintree//lib/braintree/transaction_gateway.rb#355
  def _fetch_transactions(search, ids); end

  # source://braintree//lib/braintree/transaction_gateway.rb#44
  def _handle_transaction_response(response); end

  # @raise [ArgumentError]
  #
  # source://braintree//lib/braintree/transaction_gateway.rb#160
  def adjust_authorization(transaction_id, amount); end

  # source://braintree//lib/braintree/transaction_gateway.rb#168
  def adjust_authorization!(*args); end

  # @raise [ArgumentError]
  #
  # source://braintree//lib/braintree/transaction_gateway.rb#24
  def cancel_release(transaction_id); end

  # source://braintree//lib/braintree/transaction_gateway.rb#30
  def cancel_release!(*args); end

  # source://braintree//lib/braintree/transaction_gateway.rb#54
  def clone_transaction(transaction_id, attributes); end

  # source://braintree//lib/braintree/transaction_gateway.rb#59
  def clone_transaction!(*args); end

  # source://braintree//lib/braintree/transaction_gateway.rb#11
  def create(attributes); end

  # source://braintree//lib/braintree/transaction_gateway.rb#63
  def credit(attributes); end

  # source://braintree//lib/braintree/transaction_gateway.rb#67
  def credit!(*args); end

  # source://braintree//lib/braintree/transaction_gateway.rb#71
  def find(id); end

  # @raise [ArgumentError]
  #
  # source://braintree//lib/braintree/transaction_gateway.rb#34
  def hold_in_escrow(transaction_id); end

  # source://braintree//lib/braintree/transaction_gateway.rb#40
  def hold_in_escrow!(*args); end

  # @raise [ArgumentError]
  #
  # source://braintree//lib/braintree/transaction_gateway.rb#115
  def package_tracking(transaction_id, package_tracking_request); end

  # source://braintree//lib/braintree/transaction_gateway.rb#121
  def package_tracking!(*args); end

  # source://braintree//lib/braintree/transaction_gateway.rb#79
  def refund(transaction_id, amount_or_options = T.unsafe(nil)); end

  # source://braintree//lib/braintree/transaction_gateway.rb#91
  def refund!(*args); end

  # @raise [ArgumentError]
  #
  # source://braintree//lib/braintree/transaction_gateway.rb#138
  def release_from_escrow(transaction_id); end

  # source://braintree//lib/braintree/transaction_gateway.rb#144
  def release_from_escrow!(*args); end

  # source://braintree//lib/braintree/transaction_gateway.rb#95
  def retry_subscription_charge(subscription_id, amount = T.unsafe(nil), submit_for_settlement = T.unsafe(nil)); end

  # source://braintree//lib/braintree/transaction_gateway.rb#107
  def sale(attributes); end

  # source://braintree//lib/braintree/transaction_gateway.rb#111
  def sale!(*args); end

  # source://braintree//lib/braintree/transaction_gateway.rb#125
  def search(&block); end

  # @raise [ArgumentError]
  #
  # source://braintree//lib/braintree/transaction_gateway.rb#179
  def submit_for_partial_settlement(authorized_transaction_id, amount = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://braintree//lib/braintree/transaction_gateway.rb#187
  def submit_for_partial_settlement!(*args); end

  # @raise [ArgumentError]
  #
  # source://braintree//lib/braintree/transaction_gateway.rb#148
  def submit_for_settlement(transaction_id, amount = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://braintree//lib/braintree/transaction_gateway.rb#156
  def submit_for_settlement!(*args); end

  # @raise [ArgumentError]
  #
  # source://braintree//lib/braintree/transaction_gateway.rb#172
  def update_details(transaction_id, options = T.unsafe(nil)); end

  # source://braintree//lib/braintree/transaction_gateway.rb#191
  def void(transaction_id); end

  # source://braintree//lib/braintree/transaction_gateway.rb#196
  def void!(*args); end

  class << self
    # source://braintree//lib/braintree/transaction_gateway.rb#325
    def _adjust_authorization_signature; end

    # source://braintree//lib/braintree/transaction_gateway.rb#208
    def _clone_signature; end

    # NEXT_MAJOR_VERSION Remove venmo_sdk_payment_method_code, venmo_sdk_session, and three_d_secure_token
    # The old venmo SDK class has been deprecated
    # three_d_secure_token has been deprecated in favor of three_d_secure_authentication_id
    #
    # source://braintree//lib/braintree/transaction_gateway.rb#215
    def _create_signature; end

    # source://braintree//lib/braintree/transaction_gateway.rb#200
    def _package_tracking_request_signature; end

    # source://braintree//lib/braintree/transaction_gateway.rb#339
    def _refund_signature; end

    # source://braintree//lib/braintree/transaction_gateway.rb#296
    def _submit_for_settlement_signature; end

    # source://braintree//lib/braintree/transaction_gateway.rb#331
    def _update_details_signature; end
  end
end

# source://braintree//lib/braintree/transaction_line_item.rb#2
class Braintree::TransactionLineItem
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [TransactionLineItem] a new instance of TransactionLineItem
  #
  # source://braintree//lib/braintree/transaction_line_item.rb#21
  def initialize(gateway, attributes); end

  # Returns the value of attribute commodity_code.
  #
  # source://braintree//lib/braintree/transaction_line_item.rb#4
  def commodity_code; end

  # Returns the value of attribute description.
  #
  # source://braintree//lib/braintree/transaction_line_item.rb#5
  def description; end

  # Returns the value of attribute discount_amount.
  #
  # source://braintree//lib/braintree/transaction_line_item.rb#6
  def discount_amount; end

  # Returns the value of attribute image_url.
  #
  # source://braintree//lib/braintree/transaction_line_item.rb#7
  def image_url; end

  # Returns the value of attribute kind.
  #
  # source://braintree//lib/braintree/transaction_line_item.rb#8
  def kind; end

  # Returns the value of attribute name.
  #
  # source://braintree//lib/braintree/transaction_line_item.rb#9
  def name; end

  # Returns the value of attribute product_code.
  #
  # source://braintree//lib/braintree/transaction_line_item.rb#10
  def product_code; end

  # Returns the value of attribute quantity.
  #
  # source://braintree//lib/braintree/transaction_line_item.rb#11
  def quantity; end

  # Returns the value of attribute tax_amount.
  #
  # source://braintree//lib/braintree/transaction_line_item.rb#12
  def tax_amount; end

  # Returns the value of attribute total_amount.
  #
  # source://braintree//lib/braintree/transaction_line_item.rb#13
  def total_amount; end

  # Returns the value of attribute unit_amount.
  #
  # source://braintree//lib/braintree/transaction_line_item.rb#14
  def unit_amount; end

  # Returns the value of attribute unit_of_measure.
  #
  # source://braintree//lib/braintree/transaction_line_item.rb#15
  def unit_of_measure; end

  # Returns the value of attribute unit_tax_amount.
  #
  # source://braintree//lib/braintree/transaction_line_item.rb#16
  def unit_tax_amount; end

  # Returns the value of attribute upc_code.
  #
  # source://braintree//lib/braintree/transaction_line_item.rb#17
  def upc_code; end

  # Returns the value of attribute upc_type.
  #
  # source://braintree//lib/braintree/transaction_line_item.rb#18
  def upc_type; end

  # Returns the value of attribute url.
  #
  # source://braintree//lib/braintree/transaction_line_item.rb#19
  def url; end

  class << self
    # source://braintree//lib/braintree/transaction_line_item.rb#34
    def _new(*args); end

    # source://braintree//lib/braintree/transaction_line_item.rb#39
    def find_all(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/transaction_line_item_gateway.rb#2
class Braintree::TransactionLineItemGateway
  # @return [TransactionLineItemGateway] a new instance of TransactionLineItemGateway
  #
  # source://braintree//lib/braintree/transaction_line_item_gateway.rb#3
  def initialize(gateway); end

  # source://braintree//lib/braintree/transaction_line_item_gateway.rb#9
  def find_all(transaction_id); end
end

# source://braintree//lib/braintree/transaction_search.rb#2
class Braintree::TransactionSearch < ::Braintree::AdvancedSearch
  # source://braintree//lib/braintree/advanced_search.rb#141
  def ach_return_responses_created_at(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def amount(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def authorization_expired_at(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def authorized_at(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def billing_company(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def billing_country_name(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def billing_extended_address(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def billing_first_name(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def billing_last_name(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def billing_locality(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def billing_postal_code(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def billing_region(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def billing_street_address(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def created_at(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def created_using; end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def credit_card_card_type; end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def credit_card_cardholder_name(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def credit_card_customer_location; end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def credit_card_expiration_date(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def credit_card_number(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def credit_card_unique_identifier(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def currency(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def customer_company(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def customer_email(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def customer_fax(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def customer_first_name(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def customer_id(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def customer_last_name(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def customer_phone(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def customer_website(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def debit_network; end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def disbursement_date(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def dispute_date(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def failed_at(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def gateway_rejected_at(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def id(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def ids; end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def merchant_account_id; end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def order_id(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def payment_instrument_type; end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def payment_method_token(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def paypal_authorization_id(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def paypal_payer_email(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def paypal_payment_id(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def processor_authorization_code(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def processor_declined_at(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def reason_code; end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def refund(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def sepa_debit_paypal_v2_order_id(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def settled_at(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def settlement_batch_id(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def shipping_company(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def shipping_country_name(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def shipping_extended_address(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def shipping_first_name(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def shipping_last_name(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def shipping_locality(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def shipping_postal_code(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def shipping_region(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def shipping_street_address(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def source; end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def status; end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def store_id(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def store_ids; end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def submitted_for_settlement_at(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def type; end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def user; end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def voided_at(*args); end
end

# source://braintree//lib/braintree/exceptions.rb#28
class Braintree::UnexpectedError < ::Braintree::BraintreeError; end

# source://braintree//lib/braintree/unknown_payment_method.rb#2
class Braintree::UnknownPaymentMethod
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [UnknownPaymentMethod] a new instance of UnknownPaymentMethod
  #
  # source://braintree//lib/braintree/unknown_payment_method.rb#8
  def initialize(gateway, attributes); end

  # Returns the value of attribute customer_id.
  #
  # source://braintree//lib/braintree/unknown_payment_method.rb#5
  def customer_id; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/unknown_payment_method.rb#14
  def default?; end

  # source://braintree//lib/braintree/unknown_payment_method.rb#18
  def image_url; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/unknown_payment_method.rb#6
  def token; end

  class << self
    # source://braintree//lib/braintree/unknown_payment_method.rb#22
    def _new(*args); end
  end
end

# source://braintree//lib/braintree/exceptions.rb#30
class Braintree::UpgradeRequiredError < ::Braintree::BraintreeError; end

# source://braintree//lib/braintree/us_bank_account.rb#2
class Braintree::UsBankAccount
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [UsBankAccount] a new instance of UsBankAccount
  #
  # source://braintree//lib/braintree/us_bank_account.rb#17
  def initialize(gateway, attributes); end

  # Returns the value of attribute account_holder_name.
  #
  # source://braintree//lib/braintree/us_bank_account.rb#5
  def account_holder_name; end

  # Returns the value of attribute account_type.
  #
  # source://braintree//lib/braintree/us_bank_account.rb#6
  def account_type; end

  # Returns the value of attribute ach_mandate.
  #
  # source://braintree//lib/braintree/us_bank_account.rb#7
  def ach_mandate; end

  # Returns the value of attribute bank_name.
  #
  # source://braintree//lib/braintree/us_bank_account.rb#8
  def bank_name; end

  # Returns the value of attribute default.
  #
  # source://braintree//lib/braintree/us_bank_account.rb#9
  def default; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/us_bank_account.rb#29
  def default?; end

  # Returns the value of attribute image_url.
  #
  # source://braintree//lib/braintree/us_bank_account.rb#10
  def image_url; end

  # Returns the value of attribute last_4.
  #
  # source://braintree//lib/braintree/us_bank_account.rb#11
  def last_4; end

  # Returns the value of attribute routing_number.
  #
  # source://braintree//lib/braintree/us_bank_account.rb#12
  def routing_number; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/us_bank_account.rb#13
  def token; end

  # Returns the value of attribute verifications.
  #
  # source://braintree//lib/braintree/us_bank_account.rb#14
  def verifications; end

  # Returns the value of attribute verified.
  #
  # source://braintree//lib/braintree/us_bank_account.rb#15
  def verified; end

  class << self
    # source://braintree//lib/braintree/us_bank_account.rb#37
    def _new(*args); end

    # source://braintree//lib/braintree/us_bank_account.rb#41
    def find(*args); end

    # source://braintree//lib/braintree/us_bank_account.rb#45
    def sale(token, transaction_attributes); end

    # source://braintree//lib/braintree/us_bank_account.rb#53
    def sale!(token, transaction_attributes); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/us_bank_account_gateway.rb#2
class Braintree::UsBankAccountGateway
  # @return [UsBankAccountGateway] a new instance of UsBankAccountGateway
  #
  # source://braintree//lib/braintree/us_bank_account_gateway.rb#3
  def initialize(gateway); end

  # source://braintree//lib/braintree/us_bank_account_gateway.rb#9
  def find(token); end
end

# source://braintree//lib/braintree/us_bank_account_verification.rb#2
class Braintree::UsBankAccountVerification
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  include ::Braintree::Util::IdEquality
  extend ::Braintree::BaseModule::Methods

  # @return [UsBankAccountVerification] a new instance of UsBankAccountVerification
  #
  # source://braintree//lib/braintree/us_bank_account_verification.rb#43
  def initialize(attributes); end

  # Returns the value of attribute additional_processor_response.
  #
  # source://braintree//lib/braintree/us_bank_account_verification.rb#31
  def additional_processor_response; end

  # Returns the value of attribute created_at.
  #
  # source://braintree//lib/braintree/us_bank_account_verification.rb#32
  def created_at; end

  # Returns the value of attribute gateway_rejection_reason.
  #
  # source://braintree//lib/braintree/us_bank_account_verification.rb#33
  def gateway_rejection_reason; end

  # Returns the value of attribute id.
  #
  # source://braintree//lib/braintree/us_bank_account_verification.rb#34
  def id; end

  # source://braintree//lib/braintree/us_bank_account_verification.rb#47
  def inspect; end

  # Returns the value of attribute merchant_account_id.
  #
  # source://braintree//lib/braintree/us_bank_account_verification.rb#35
  def merchant_account_id; end

  # Returns the value of attribute processor_response_code.
  #
  # source://braintree//lib/braintree/us_bank_account_verification.rb#36
  def processor_response_code; end

  # Returns the value of attribute processor_response_text.
  #
  # source://braintree//lib/braintree/us_bank_account_verification.rb#37
  def processor_response_text; end

  # Returns the value of attribute status.
  #
  # source://braintree//lib/braintree/us_bank_account_verification.rb#38
  def status; end

  # Returns the value of attribute us_bank_account.
  #
  # source://braintree//lib/braintree/us_bank_account_verification.rb#39
  def us_bank_account; end

  # Returns the value of attribute verification_determined_at.
  #
  # source://braintree//lib/braintree/us_bank_account_verification.rb#40
  def verification_determined_at; end

  # Returns the value of attribute verification_method.
  #
  # source://braintree//lib/braintree/us_bank_account_verification.rb#41
  def verification_method; end

  class << self
    # source://braintree//lib/braintree/us_bank_account_verification.rb#73
    def _new(*args); end

    # source://braintree//lib/braintree/us_bank_account_verification.rb#77
    def confirm_micro_transfer_amounts(*args); end

    # source://braintree//lib/braintree/us_bank_account_verification.rb#81
    def find(*args); end

    # source://braintree//lib/braintree/us_bank_account_verification.rb#85
    def search(&block); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/us_bank_account_verification.rb#6
module Braintree::UsBankAccountVerification::Status; end

# source://braintree//lib/braintree/us_bank_account_verification.rb#13
Braintree::UsBankAccountVerification::Status::All = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/us_bank_account_verification.rb#7
Braintree::UsBankAccountVerification::Status::Failed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/us_bank_account_verification.rb#8
Braintree::UsBankAccountVerification::Status::GatewayRejected = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/us_bank_account_verification.rb#11
Braintree::UsBankAccountVerification::Status::Pending = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/us_bank_account_verification.rb#9
Braintree::UsBankAccountVerification::Status::ProcessorDeclined = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/us_bank_account_verification.rb#10
Braintree::UsBankAccountVerification::Status::Verified = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/us_bank_account_verification.rb#25
module Braintree::UsBankAccountVerification::VerificationAddOns; end

# source://braintree//lib/braintree/us_bank_account_verification.rb#28
Braintree::UsBankAccountVerification::VerificationAddOns::All = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/us_bank_account_verification.rb#26
Braintree::UsBankAccountVerification::VerificationAddOns::CustomerVerification = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/us_bank_account_verification.rb#16
module Braintree::UsBankAccountVerification::VerificationMethod; end

# source://braintree//lib/braintree/us_bank_account_verification.rb#22
Braintree::UsBankAccountVerification::VerificationMethod::All = T.let(T.unsafe(nil), Array)

# source://braintree//lib/braintree/us_bank_account_verification.rb#17
Braintree::UsBankAccountVerification::VerificationMethod::IndependentCheck = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/us_bank_account_verification.rb#20
Braintree::UsBankAccountVerification::VerificationMethod::MicroTransfers = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/us_bank_account_verification.rb#18
Braintree::UsBankAccountVerification::VerificationMethod::NetworkCheck = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/us_bank_account_verification.rb#19
Braintree::UsBankAccountVerification::VerificationMethod::TokenizedCheck = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/us_bank_account_verification_gateway.rb#2
class Braintree::UsBankAccountVerificationGateway
  # @return [UsBankAccountVerificationGateway] a new instance of UsBankAccountVerificationGateway
  #
  # source://braintree//lib/braintree/us_bank_account_verification_gateway.rb#3
  def initialize(gateway); end

  # source://braintree//lib/braintree/us_bank_account_verification_gateway.rb#44
  def _fetch_verifications(search, ids); end

  # source://braintree//lib/braintree/us_bank_account_verification_gateway.rb#9
  def confirm_micro_transfer_amounts(id, deposit_amounts); end

  # source://braintree//lib/braintree/us_bank_account_verification_gateway.rb#28
  def find(id); end

  # source://braintree//lib/braintree/us_bank_account_verification_gateway.rb#36
  def search(&block); end
end

# source://braintree//lib/braintree/us_bank_account_verification_search.rb#2
class Braintree::UsBankAccountVerificationSearch < ::Braintree::AdvancedSearch
  # source://braintree//lib/braintree/advanced_search.rb#141
  def account_holder_name(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def account_number(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def account_type(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def created_at(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def customer_email(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def customer_id(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def id(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def ids; end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def payment_method_token(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#141
  def routing_number(*args); end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def status; end

  # source://braintree//lib/braintree/advanced_search.rb#112
  def verification_method; end
end

# source://braintree//lib/braintree/util.rb#2
module Braintree::Util
  class << self
    # source://braintree//lib/braintree/util.rb#162
    def _flatten_hash_keys(element, namespace = T.unsafe(nil)); end

    # source://braintree//lib/braintree/util.rb#144
    def _flatten_valid_keys(valid_keys, namespace = T.unsafe(nil)); end

    # source://braintree//lib/braintree/util.rb#191
    def _get_invalid_keys(valid_keys, hash); end

    # source://braintree//lib/braintree/util.rb#180
    def _remove_wildcard_keys(valid_keys, invalid_keys); end

    # @raise [UnexpectedError]
    #
    # source://braintree//lib/braintree/util.rb#3
    def extract_attribute_as_array(hash, attribute); end

    # source://braintree//lib/braintree/util.rb#9
    def hash_to_query_string(hash, namespace = T.unsafe(nil)); end

    # source://braintree//lib/braintree/util.rb#115
    def inspect_amount(amount); end

    # @return [Boolean]
    #
    # source://braintree//lib/braintree/util.rb#127
    def keys_valid?(valid_keys, hash); end

    # source://braintree//lib/braintree/util.rb#20
    def parse_query_string(qs); end

    # source://braintree//lib/braintree/util.rb#73
    def raise_exception_for_graphql_error(response); end

    # source://braintree//lib/braintree/util.rb#48
    def raise_exception_for_status_code(status_code, message = T.unsafe(nil)); end

    # source://braintree//lib/braintree/util.rb#133
    def replace_key(hash, target_key, replacement_key); end

    # source://braintree//lib/braintree/util.rb#36
    def symbolize_keys(hash); end

    # source://braintree//lib/braintree/util.rb#104
    def to_big_decimal(decimal); end

    # source://braintree//lib/braintree/util.rb#28
    def url_decode(text); end

    # source://braintree//lib/braintree/util.rb#32
    def url_encode(text); end

    # source://braintree//lib/braintree/util.rb#119
    def verify_keys(valid_keys, hash); end
  end
end

# source://braintree//lib/braintree/util.rb#197
module Braintree::Util::IdEquality
  # source://braintree//lib/braintree/util.rb#198
  def ==(other); end
end

# source://braintree//lib/braintree/util.rb#204
module Braintree::Util::TokenEquality
  # source://braintree//lib/braintree/util.rb#205
  def ==(other); end
end

# source://braintree//lib/braintree/validation_error.rb#2
class Braintree::ValidationError
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [ValidationError] a new instance of ValidationError
  #
  # source://braintree//lib/braintree/validation_error.rb#9
  def initialize(error_hash); end

  # Returns the value of attribute attribute.
  #
  # source://braintree//lib/braintree/validation_error.rb#5
  def attribute; end

  # Returns the value of attribute code.
  #
  # source://braintree//lib/braintree/validation_error.rb#6
  def code; end

  # source://braintree//lib/braintree/validation_error.rb#21
  def inspect; end

  # Returns the value of attribute message.
  #
  # source://braintree//lib/braintree/validation_error.rb#7
  def message; end
end

# source://braintree//lib/braintree/validation_error_collection.rb#2
class Braintree::ValidationErrorCollection
  include ::Prelude::Enumerator
  include ::Enumerable

  # @return [ValidationErrorCollection] a new instance of ValidationErrorCollection
  #
  # source://braintree//lib/braintree/validation_error_collection.rb#5
  def initialize(data); end

  # Accesses the error at the given index.
  #
  # source://braintree//lib/braintree/validation_error_collection.rb#16
  def [](index); end

  # source://braintree//lib/braintree/validation_error_collection.rb#64
  def _inner_inspect(scope = T.unsafe(nil)); end

  # Returns an array of ValidationError objects at this level and all nested levels in the error
  # hierarchy
  #
  # source://braintree//lib/braintree/validation_error_collection.rb#22
  def deep_errors; end

  # source://braintree//lib/braintree/validation_error_collection.rb#26
  def deep_size; end

  # Iterates over errors at the current level. Nested errors will not be yielded.
  #
  # source://braintree//lib/braintree/validation_error_collection.rb#31
  def each(&block); end

  # Returns a ValidationErrorCollection of errors nested under the given nested_key.
  # Returns nil if there are not any errors nested under the given key.
  #
  # source://braintree//lib/braintree/validation_error_collection.rb#37
  def for(nested_key); end

  # source://braintree//lib/braintree/validation_error_collection.rb#41
  def for_index(index); end

  # source://braintree//lib/braintree/validation_error_collection.rb#45
  def inspect; end

  # Returns an array of ValidationError objects on the given attribute.
  #
  # source://braintree//lib/braintree/validation_error_collection.rb#50
  def on(attribute); end

  # Returns an array of ValidationError objects at the given level in the error hierarchy
  #
  # source://braintree//lib/braintree/validation_error_collection.rb#55
  def shallow_errors; end

  # The number of errors at this level. This does not include nested errors.
  #
  # source://braintree//lib/braintree/validation_error_collection.rb#60
  def size; end
end

# source://braintree//lib/braintree/exceptions.rb#32
class Braintree::ValidationsFailed < ::Braintree::BraintreeError
  # @return [ValidationsFailed] a new instance of ValidationsFailed
  #
  # source://braintree//lib/braintree/exceptions.rb#35
  def initialize(error_result); end

  # Returns the value of attribute error_result.
  #
  # source://braintree//lib/braintree/exceptions.rb#33
  def error_result; end

  # source://braintree//lib/braintree/exceptions.rb#39
  def inspect; end

  # source://braintree//lib/braintree/exceptions.rb#43
  def to_s; end
end

# source://braintree//lib/braintree/venmo_account.rb#2
class Braintree::VenmoAccount
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [VenmoAccount] a new instance of VenmoAccount
  #
  # source://braintree//lib/braintree/venmo_account.rb#16
  def initialize(gateway, attributes); end

  # Returns the value of attribute created_at.
  #
  # source://braintree//lib/braintree/venmo_account.rb#5
  def created_at; end

  # Returns the value of attribute customer_id.
  #
  # source://braintree//lib/braintree/venmo_account.rb#6
  def customer_id; end

  # Returns the value of attribute default.
  #
  # source://braintree//lib/braintree/venmo_account.rb#7
  def default; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/venmo_account.rb#22
  def default?; end

  # Returns the value of attribute image_url.
  #
  # source://braintree//lib/braintree/venmo_account.rb#8
  def image_url; end

  # Returns the value of attribute source_description.
  #
  # source://braintree//lib/braintree/venmo_account.rb#9
  def source_description; end

  # Returns the value of attribute subscriptions.
  #
  # source://braintree//lib/braintree/venmo_account.rb#10
  def subscriptions; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/venmo_account.rb#11
  def token; end

  # Returns the value of attribute updated_at.
  #
  # source://braintree//lib/braintree/venmo_account.rb#12
  def updated_at; end

  # Returns the value of attribute username.
  #
  # source://braintree//lib/braintree/venmo_account.rb#13
  def username; end

  # Returns the value of attribute venmo_user_id.
  #
  # source://braintree//lib/braintree/venmo_account.rb#14
  def venmo_user_id; end

  class << self
    # source://braintree//lib/braintree/venmo_account.rb#30
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/venmo_profile_data.rb#2
class Braintree::VenmoProfileData
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [VenmoProfileData] a new instance of VenmoProfileData
  #
  # source://braintree//lib/braintree/venmo_profile_data.rb#13
  def initialize(attributes); end

  # Returns the value of attribute billing_address.
  #
  # source://braintree//lib/braintree/venmo_profile_data.rb#5
  def billing_address; end

  # Returns the value of attribute email.
  #
  # source://braintree//lib/braintree/venmo_profile_data.rb#6
  def email; end

  # Returns the value of attribute first_name.
  #
  # source://braintree//lib/braintree/venmo_profile_data.rb#7
  def first_name; end

  # Returns the value of attribute last_name.
  #
  # source://braintree//lib/braintree/venmo_profile_data.rb#8
  def last_name; end

  # Returns the value of attribute phone_number.
  #
  # source://braintree//lib/braintree/venmo_profile_data.rb#9
  def phone_number; end

  # Returns the value of attribute shipping_address.
  #
  # source://braintree//lib/braintree/venmo_profile_data.rb#10
  def shipping_address; end

  # Returns the value of attribute username.
  #
  # source://braintree//lib/braintree/venmo_profile_data.rb#11
  def username; end

  class << self
    # source://braintree//lib/braintree/venmo_profile_data.rb#21
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/version.rb#2
module Braintree::Version; end

# source://braintree//lib/braintree/version.rb#3
Braintree::Version::Major = T.let(T.unsafe(nil), Integer)

# source://braintree//lib/braintree/version.rb#4
Braintree::Version::Minor = T.let(T.unsafe(nil), Integer)

# source://braintree//lib/braintree/version.rb#7
Braintree::Version::String = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/version.rb#5
Braintree::Version::Tiny = T.let(T.unsafe(nil), Integer)

# source://braintree//lib/braintree/visa_checkout_card.rb#2
class Braintree::VisaCheckoutCard
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  include ::Braintree::Util::TokenEquality
  extend ::Braintree::BaseModule::Methods

  # @return [VisaCheckoutCard] a new instance of VisaCheckoutCard
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#33
  def initialize(gateway, attributes); end

  # source://braintree//lib/braintree/visa_checkout_card.rb#41
  def _most_recent_verification(attributes); end

  # Returns the value of attribute billing_address.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#6
  def billing_address; end

  # Returns the value of attribute bin.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#7
  def bin; end

  # Returns the value of attribute call_id.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#8
  def call_id; end

  # Returns the value of attribute card_type.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#9
  def card_type; end

  # Returns the value of attribute cardholder_name.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#10
  def cardholder_name; end

  # Returns the value of attribute commercial.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#11
  def commercial; end

  # Returns the value of attribute country_of_issuance.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#12
  def country_of_issuance; end

  # Returns the value of attribute created_at.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#13
  def created_at; end

  # Returns the value of attribute customer_id.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#14
  def customer_id; end

  # Returns the value of attribute customer_location.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#15
  def customer_location; end

  # Returns the value of attribute debit.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#16
  def debit; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#46
  def default?; end

  # Returns the value of attribute durbin_regulated.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#17
  def durbin_regulated; end

  # Expiration date formatted as MM/YYYY
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#51
  def expiration_date; end

  # Returns the value of attribute expiration_month.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#18
  def expiration_month; end

  # Returns the value of attribute expiration_year.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#19
  def expiration_year; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#55
  def expired?; end

  # Returns the value of attribute healthcare.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#20
  def healthcare; end

  # Returns the value of attribute image_url.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#21
  def image_url; end

  # source://braintree//lib/braintree/visa_checkout_card.rb#59
  def inspect; end

  # Returns the value of attribute issuing_bank.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#22
  def issuing_bank; end

  # Returns the value of attribute last_4.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#23
  def last_4; end

  # source://braintree//lib/braintree/visa_checkout_card.rb#68
  def masked_number; end

  # Returns the value of attribute payroll.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#24
  def payroll; end

  # Returns the value of attribute prepaid.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#25
  def prepaid; end

  # Returns the value of attribute product_id.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#26
  def product_id; end

  # Returns the value of attribute subscriptions.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#27
  def subscriptions; end

  # Returns the value of attribute token.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#28
  def token; end

  # Returns the value of attribute unique_number_identifier.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#29
  def unique_number_identifier; end

  # Returns the value of attribute updated_at.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#30
  def updated_at; end

  # Returns the value of attribute verification.
  #
  # source://braintree//lib/braintree/visa_checkout_card.rb#31
  def verification; end

  class << self
    # source://braintree//lib/braintree/visa_checkout_card.rb#76
    def _attributes; end

    # source://braintree//lib/braintree/visa_checkout_card.rb#86
    def _new(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/webhook_notification.rb#4
class Braintree::WebhookNotification
  include ::Braintree::BaseModule::Methods
  include ::Braintree::BaseModule
  extend ::Braintree::BaseModule::Methods

  # @return [WebhookNotification] a new instance of WebhookNotification
  #
  # source://braintree//lib/braintree/webhook_notification.rb#96
  def initialize(gateway, attributes); end

  # Returns the value of attribute account_updater_daily_report.
  #
  # source://braintree//lib/braintree/webhook_notification.rb#67
  def account_updater_daily_report; end

  # @return [Boolean]
  #
  # source://braintree//lib/braintree/webhook_notification.rb#133
  def check?; end

  # Returns the value of attribute connected_merchant_paypal_status_changed.
  #
  # source://braintree//lib/braintree/webhook_notification.rb#68
  def connected_merchant_paypal_status_changed; end

  # Returns the value of attribute connected_merchant_status_transitioned.
  #
  # source://braintree//lib/braintree/webhook_notification.rb#69
  def connected_merchant_status_transitioned; end

  # Returns the value of attribute disbursement.
  #
  # source://braintree//lib/braintree/webhook_notification.rb#70
  def disbursement; end

  # Returns the value of attribute dispute.
  #
  # source://braintree//lib/braintree/webhook_notification.rb#71
  def dispute; end

  # source://braintree//lib/braintree/webhook_notification.rb#125
  def errors; end

  # Returns the value of attribute granted_payment_instrument_update.
  #
  # source://braintree//lib/braintree/webhook_notification.rb#72
  def granted_payment_instrument_update; end

  # Returns the value of attribute kind.
  #
  # source://braintree//lib/braintree/webhook_notification.rb#74
  def kind; end

  # Returns the value of attribute local_payment_completed.
  #
  # source://braintree//lib/braintree/webhook_notification.rb#75
  def local_payment_completed; end

  # Returns the value of attribute local_payment_expired.
  #
  # source://braintree//lib/braintree/webhook_notification.rb#76
  def local_payment_expired; end

  # Returns the value of attribute local_payment_funded.
  #
  # source://braintree//lib/braintree/webhook_notification.rb#77
  def local_payment_funded; end

  # Returns the value of attribute local_payment_reversed.
  #
  # source://braintree//lib/braintree/webhook_notification.rb#78
  def local_payment_reversed; end

  # source://braintree//lib/braintree/webhook_notification.rb#121
  def merchant_account; end

  # source://braintree//lib/braintree/webhook_notification.rb#129
  def message; end

  # Returns the value of attribute oauth_access_revocation.
  #
  # source://braintree//lib/braintree/webhook_notification.rb#79
  def oauth_access_revocation; end

  # Returns the value of attribute partner_merchant.
  #
  # source://braintree//lib/braintree/webhook_notification.rb#80
  def partner_merchant; end

  # Returns the value of attribute payment_method_customer_data_updated_metadata.
  #
  # source://braintree//lib/braintree/webhook_notification.rb#81
  def payment_method_customer_data_updated_metadata; end

  # Returns the value of attribute revoked_payment_method_metadata.
  #
  # source://braintree//lib/braintree/webhook_notification.rb#73
  def revoked_payment_method_metadata; end

  # Returns the value of attribute source_merchant_id.
  #
  # source://braintree//lib/braintree/webhook_notification.rb#82
  def source_merchant_id; end

  # Returns the value of attribute subscription.
  #
  # source://braintree//lib/braintree/webhook_notification.rb#83
  def subscription; end

  # Returns the value of attribute timestamp.
  #
  # source://braintree//lib/braintree/webhook_notification.rb#84
  def timestamp; end

  # Returns the value of attribute transaction.
  #
  # source://braintree//lib/braintree/webhook_notification.rb#85
  def transaction; end

  # Returns the value of attribute transaction_review.
  #
  # source://braintree//lib/braintree/webhook_notification.rb#86
  def transaction_review; end

  class << self
    # source://braintree//lib/braintree/webhook_notification.rb#139
    def _new(*args); end

    # source://braintree//lib/braintree/webhook_notification.rb#88
    def parse(*args); end

    # source://braintree//lib/braintree/webhook_notification.rb#92
    def verify(*args); end

    protected

    def new(*_arg0); end
  end
end

# source://braintree//lib/braintree/webhook_notification.rb#7
module Braintree::WebhookNotification::Kind; end

# source://braintree//lib/braintree/webhook_notification.rb#9
Braintree::WebhookNotification::Kind::AccountUpdaterDailyReport = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#11
Braintree::WebhookNotification::Kind::Check = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#13
Braintree::WebhookNotification::Kind::ConnectedMerchantPayPalStatusChanged = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#14
Braintree::WebhookNotification::Kind::ConnectedMerchantStatusTransitioned = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#15
Braintree::WebhookNotification::Kind::Disbursement = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#16
Braintree::WebhookNotification::Kind::DisbursementException = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#18
Braintree::WebhookNotification::Kind::DisputeAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#19
Braintree::WebhookNotification::Kind::DisputeAutoAccepted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#20
Braintree::WebhookNotification::Kind::DisputeDisputed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#21
Braintree::WebhookNotification::Kind::DisputeExpired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#22
Braintree::WebhookNotification::Kind::DisputeLost = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#23
Braintree::WebhookNotification::Kind::DisputeOpened = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#24
Braintree::WebhookNotification::Kind::DisputeUnderReview = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#25
Braintree::WebhookNotification::Kind::DisputeWon = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#27
Braintree::WebhookNotification::Kind::GrantedPaymentInstrumentRevoked = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#30
Braintree::WebhookNotification::Kind::GrantedPaymentMethodRevoked = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#29
Braintree::WebhookNotification::Kind::GrantorUpdatedGrantedPaymentMethod = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#32
Braintree::WebhookNotification::Kind::LocalPaymentCompleted = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#33
Braintree::WebhookNotification::Kind::LocalPaymentExpired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#34
Braintree::WebhookNotification::Kind::LocalPaymentFunded = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#35
Braintree::WebhookNotification::Kind::LocalPaymentReversed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#37
Braintree::WebhookNotification::Kind::OAuthAccessRevoked = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#39
Braintree::WebhookNotification::Kind::PartnerMerchantConnected = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#41
Braintree::WebhookNotification::Kind::PartnerMerchantDeclined = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#40
Braintree::WebhookNotification::Kind::PartnerMerchantDisconnected = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#43
Braintree::WebhookNotification::Kind::PaymentMethodCustomerDataUpdated = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#45
Braintree::WebhookNotification::Kind::PaymentMethodRevokedByCustomer = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#47
Braintree::WebhookNotification::Kind::RecipientUpdatedGrantedPaymentMethod = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#58
Braintree::WebhookNotification::Kind::SubMerchantAccountApproved = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#59
Braintree::WebhookNotification::Kind::SubMerchantAccountDeclined = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#49
Braintree::WebhookNotification::Kind::SubscriptionBillingSkipped = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#50
Braintree::WebhookNotification::Kind::SubscriptionCanceled = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#51
Braintree::WebhookNotification::Kind::SubscriptionChargedSuccessfully = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#52
Braintree::WebhookNotification::Kind::SubscriptionChargedUnsuccessfully = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#53
Braintree::WebhookNotification::Kind::SubscriptionExpired = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#54
Braintree::WebhookNotification::Kind::SubscriptionTrialEnded = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#55
Braintree::WebhookNotification::Kind::SubscriptionWentActive = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#56
Braintree::WebhookNotification::Kind::SubscriptionWentPastDue = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#61
Braintree::WebhookNotification::Kind::TransactionDisbursed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#62
Braintree::WebhookNotification::Kind::TransactionReviewed = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#64
Braintree::WebhookNotification::Kind::TransactionSettled = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification.rb#63
Braintree::WebhookNotification::Kind::TransactionSettlementDeclined = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/webhook_notification_gateway.rb#2
class Braintree::WebhookNotificationGateway
  # @return [WebhookNotificationGateway] a new instance of WebhookNotificationGateway
  #
  # source://braintree//lib/braintree/webhook_notification_gateway.rb#3
  def initialize(gateway); end

  # source://braintree//lib/braintree/webhook_notification_gateway.rb#26
  def _matching_signature_pair(signature_string); end

  # @raise [InvalidSignature]
  #
  # source://braintree//lib/braintree/webhook_notification_gateway.rb#35
  def _verify_signature(signature_string, payload); end

  # @raise [InvalidSignature]
  #
  # source://braintree//lib/braintree/webhook_notification_gateway.rb#9
  def parse(signature_string, payload); end

  # @raise [InvalidChallenge]
  #
  # source://braintree//lib/braintree/webhook_notification_gateway.rb#20
  def verify(challenge); end
end

# source://braintree//lib/braintree/webhook_testing.rb#2
class Braintree::WebhookTesting
  class << self
    # source://braintree//lib/braintree/webhook_testing.rb#3
    def sample_notification(*args); end
  end
end

# source://braintree//lib/braintree/webhook_testing_gateway.rb#2
class Braintree::WebhookTestingGateway
  # @return [WebhookTestingGateway] a new instance of WebhookTestingGateway
  #
  # source://braintree//lib/braintree/webhook_testing_gateway.rb#3
  def initialize(gateway); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#1010
  def _account_updater_daily_report_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#1030
  def _auth_paypal_status_changed_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#1020
  def _auth_status_transitioned_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#112
  def _check; end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#960
  def _disbursement_exception_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#985
  def _disbursement_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#361
  def _dispute_accepted_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#369
  def _dispute_auto_accepted_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#377
  def _dispute_disputed_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#385
  def _dispute_expired_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#345
  def _dispute_lost_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#337
  def _dispute_opened_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#329
  def _dispute_under_review_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#353
  def _dispute_won_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#1049
  def _granted_payment_instrument_update_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#1068
  def _granted_payment_method_revoked_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#1094
  def _local_payment_completed_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#1110
  def _local_payment_expired_sample_xml; end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#1119
  def _local_payment_funded_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#1134
  def _local_payment_reversed_sample_xml; end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#220
  def _merchant_account_approved_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#234
  def _merchant_account_declined_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#761
  def _new_dispute_accepted_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#807
  def _new_dispute_auto_accepted_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#853
  def _new_dispute_disputed_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#914
  def _new_dispute_expired_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#638
  def _new_dispute_lost_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#596
  def _new_dispute_opened_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#554
  def _new_dispute_under_review_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#699
  def _new_dispute_won_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#1040
  def _oauth_access_revoked_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#474
  def _old_dispute_accepted_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#494
  def _old_dispute_auto_accepted_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#514
  def _old_dispute_disputed_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#534
  def _old_dispute_expired_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#433
  def _old_dispute_lost_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#413
  def _old_dispute_opened_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#393
  def _old_dispute_under_review_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#453
  def _old_dispute_won_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#189
  def _partner_merchant_connected_sample_xml(data); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#211
  def _partner_merchant_declined_sample_xml(data); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#202
  def _partner_merchant_disconnected_sample_xml(data); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#1143
  def _payment_method_customer_data_updated_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#1072
  def _payment_method_revoked_by_customer_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#16
  def _sample_xml(kind, data, source_merchant_id = T.unsafe(nil)); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#33
  def _subject_sample_xml(kind, id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#119
  def _subscription_billing_skipped(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#134
  def _subscription_charged_successfully(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#154
  def _subscription_charged_unsuccessfully(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#174
  def _subscription_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#263
  def _transaction_disbursed_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#276
  def _transaction_reviewed_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#289
  def _transaction_settled_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#309
  def _transaction_settlement_declined_sample_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#1167
  def _venmo_account_xml(id); end

  # source://braintree//lib/braintree/webhook_testing_gateway.rb#9
  def sample_notification(kind, id, source_merchant_id = T.unsafe(nil)); end
end

# source://braintree//lib/braintree/xml.rb#2
module Braintree::Xml
  class << self
    # source://braintree//lib/braintree/xml.rb#3
    def hash_from_xml(xml); end

    # source://braintree//lib/braintree/xml.rb#7
    def hash_to_xml(hash); end
  end
end

# source://braintree//lib/braintree/xml/parser.rb#5
Braintree::Xml::CONTENT_ROOT = T.let(T.unsafe(nil), String)

# source://braintree//lib/braintree/xml/generator.rb#5
module Braintree::Xml::Generator
  class << self
    # source://braintree//lib/braintree/xml/generator.rb#81
    def _array_to_xml(array, options = T.unsafe(nil)); end

    # @raise [ArgumentError]
    #
    # source://braintree//lib/braintree/xml/generator.rb#48
    def _convert_to_xml(hash_to_convert, options = T.unsafe(nil)); end

    # source://braintree//lib/braintree/xml/generator.rb#101
    def _xml_escape(key); end

    # source://braintree//lib/braintree/xml/generator.rb#37
    def hash_to_xml(hash); end
  end
end

# source://braintree//lib/braintree/xml/generator.rb#23
Braintree::Xml::Generator::XML_FORMATTING = T.let(T.unsafe(nil), Hash)

# source://braintree//lib/braintree/xml/generator.rb#18
Braintree::Xml::Generator::XML_FORMATTING_NAMES = T.let(T.unsafe(nil), Hash)

# source://braintree//lib/braintree/xml/generator.rb#6
Braintree::Xml::Generator::XML_TYPE_NAMES = T.let(T.unsafe(nil), Hash)

# source://braintree//lib/braintree/xml/libxml.rb#5
module Braintree::Xml::Libxml
  class << self
    # @return [Boolean]
    #
    # source://braintree//lib/braintree/xml/libxml.rb#64
    def _array?(node); end

    # source://braintree//lib/braintree/xml/libxml.rb#52
    def _attributes_to_hash(node, hash = T.unsafe(nil)); end

    # source://braintree//lib/braintree/xml/libxml.rb#33
    def _build_sub_hash(hash, name); end

    # source://braintree//lib/braintree/xml/libxml.rb#57
    def _children_array_to_hash(node, hash = T.unsafe(nil)); end

    # source://braintree//lib/braintree/xml/libxml.rb#46
    def _children_to_hash(node, hash = T.unsafe(nil)); end

    # source://braintree//lib/braintree/xml/libxml.rb#17
    def _node_to_hash(node, hash = T.unsafe(nil)); end

    # source://braintree//lib/braintree/xml/libxml.rb#8
    def parse(xml_string); end
  end
end

# source://braintree//lib/braintree/xml/libxml.rb#6
Braintree::Xml::Libxml::LIB_XML_LIMIT = T.let(T.unsafe(nil), Integer)

# source://braintree//lib/braintree/xml/parser.rb#7
module Braintree::Xml::Parser
  class << self
    # source://braintree//lib/braintree/xml/parser.rb#20
    def _determine_parser; end

    # Transform into standard Ruby types and convert all keys to snake_case instead of dash-case
    #
    # source://braintree//lib/braintree/xml/parser.rb#31
    def _transform_xml(value); end

    # source://braintree//lib/braintree/xml/parser.rb#14
    def hash_from_xml(xml, parser = T.unsafe(nil)); end
  end
end

# source://braintree//lib/braintree/xml/parser.rb#8
Braintree::Xml::Parser::XML_PARSING = T.let(T.unsafe(nil), Hash)

# source://braintree//lib/braintree/xml/rexml.rb#5
module Braintree::Xml::Rexml
  class << self
    # source://braintree//lib/braintree/xml/rexml.rb#19
    def _collapse(element); end

    # @return [Boolean]
    #
    # source://braintree//lib/braintree/xml/rexml.rb#65
    def _empty_content?(element); end

    # source://braintree//lib/braintree/xml/rexml.rb#59
    def _get_attributes(element); end

    # source://braintree//lib/braintree/xml/rexml.rb#44
    def _merge!(hash, key, value); end

    # source://braintree//lib/braintree/xml/rexml.rb#15
    def _merge_element!(hash, element); end

    # source://braintree//lib/braintree/xml/rexml.rb#31
    def _merge_texts!(hash, element); end

    # source://braintree//lib/braintree/xml/rexml.rb#9
    def parse(string); end
  end
end

# source://braintree//lib/braintree/xml/rexml.rb#7
Braintree::Xml::Rexml::CONTENT_KEY = T.let(T.unsafe(nil), String)
