<%# erblint:counter DeprecatedComponentsCounter 4 %>
<% view = Stafftools::RepositoryViews::DiskView.new(:repository => current_repository) %>

<% page_info :title => view.page_title %>

<div class="boxed-group">
  <h3>Storage information</h3>
  <div class="boxed-group-inner clearfix">
    <ul class="status-check-list">
      <%= view.disk_status %>
    </ul>

    <p>
      <div class="summary">
        <dl>
          <dt>Storage Host</dt>
          <dd><%= view.storage_host %></dd>
        </dl>
        <dl>
          <dt>Storage Path</dt>
          <dd><%= view.storage_path %></dd>
        </dl>
        <% if current_repository.network.shared_storage_enabled? %>
          <dl>
            <dt>Shared Storage</dt>
            <dd><%= view.shared_storage_path %></dd>
          </dl>
        <% end %>
      </div>
    </p>
  </div>
</div>

<div class="boxed-group">
  <h3>Repository health</h3>
  <div class="boxed-group-inner">
    <% if view.is_fscked? %>
      <h4>Last check results</h4>
      <div class="markdown-body" style="margin-top:10px">
        <pre style='height:175px'><%= view.fsck_output %></pre>
      </div>
      <hr>
    <% end %>

    <%= form_tag gh_fsck_stafftools_repository_path(current_repository) do %>
      <%= render Primer::ButtonComponent.new(type: :submit, classes: "boxed-action") do %>Check repository<% end %>
    <% end %>
    <h4>Repository consistency check</h4>
    <p>Queue up a new consistency check job.</p>

    <% if view.can_restore_wiki? %>
      <hr>
      <%= form_tag gh_wiki_restore_stafftools_repository_path(current_repository) do %>
        <%= render Primer::ButtonComponent.new(type: :submit, classes: "boxed-action") do %>Restore wiki<% end %>
      <% end %>
      <h4>Restore wiki</h4>
      <p>Restore the wiki associated with this repository from backups</p>
    <% end %>
  </div>
</div>

<% if view.show_wiki_maintenance? %>
  <div class="boxed-group">
    <h3>Wiki Repository</h3>
    <div class="boxed-group-inner">
      <%= form_tag gh_wiki_schedule_maintenance_stafftools_repository_path(view.repository) do %>
        <%= render Primer::ButtonComponent.new(type: :submit, classes: "boxed-action") do %>Schedule<% end %>
      <% end %>
      <h4>Schedule maintenance</h4>

      <p>
        Run a maintenance job for this repository's wiki and update its status.<br>
        Current maintenance status: <b><%= view.wiki_maintenance_status %></b>
      </p>

      <% unless view.wiki_marked_broken? %>
        <hr>
        <%= form_tag gh_wiki_mark_as_broken_stafftools_repository_path(view.repository) do %>
          <%= render Primer::ButtonComponent.new(type: :submit, classes: "boxed-action") do %>Mark as broken<% end %>
        <% end %>
        <h4>Mark as broken</h4>
        <p>
          Set the status of this wiki to broken.
        </p>
      <% end %>
    </div>
  </div>
<% end %>
