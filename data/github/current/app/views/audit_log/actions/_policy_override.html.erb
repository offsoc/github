<%
overrides = case view.entry.action
when "protected_branch.review_policy_and_required_status_override"
  ["pull request reviews", "required status checks"]
when "protected_branch.review_policy_override"
  ["pull request reviews"]
when "protected_branch.required_status_override"
  ["required status checks"]
when "protected_branch.policy_override"
  Array.new.tap do |a|
    codes = view.entry.hit.data[:overridden_codes]
    a << "required status checks"    if codes.include?("required_status_checks")
    a << "pull request reviews"      if codes.include?("review_policy_not_satisfied")
    a << "signed commit requirement" if codes.include?("invalid_signature")
  end
end

overrides = ["policy"] if overrides.blank?

%>
<span class="context"><%= view.entry.hit.data[:branch].try(:capitalize) %></span> was
updated despite unsatisfied <%= overrides.to_sentence %> because
<% if view.entry.hit.data[:deploy_key_fingerprint] %>
  the deploy key <code><%= view.entry.hit.data[:deploy_key_fingerprint] %></code>
  <% if view.entry.hit[:actor] %>
    (verified by <span class="context"><%= view.link_to_actor %></span>)
  <% end %>
  was used to push to
  <span class="context"><%= view.link_to_repo %></span>
<% else %>
<span class="context"><%= view.link_to_actor %></span>
  is an admin on <span class="context"><%= view.link_to_repo %></span>
<% end %>
