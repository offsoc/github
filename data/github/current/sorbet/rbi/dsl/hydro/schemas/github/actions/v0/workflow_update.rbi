# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Actions::V0::WorkflowUpdate`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Actions::V0::WorkflowUpdate`.

class Hydro::Schemas::Github::Actions::V0::WorkflowUpdate
  sig do
    params(
      gate: T.nilable(Hydro::Schemas::Github::Actions::V0::WorkflowUpdate::GateUpdate),
      job: T.nilable(Hydro::Schemas::Github::Actions::V0::WorkflowUpdate::JobUpdate),
      repository_id: T.nilable(String),
      run: T.nilable(Hydro::Schemas::Github::Actions::V0::WorkflowUpdate::RunUpdate),
      workflow_run_id: T.nilable(String)
    ).void
  end
  def initialize(gate: nil, job: nil, repository_id: nil, run: nil, workflow_run_id: nil); end

  sig { void }
  def clear_gate; end

  sig { void }
  def clear_job; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_run; end

  sig { void }
  def clear_workflow_run_id; end

  sig { returns(T.nilable(Hydro::Schemas::Github::Actions::V0::WorkflowUpdate::GateUpdate)) }
  def gate; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Actions::V0::WorkflowUpdate::GateUpdate)).void }
  def gate=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Actions::V0::WorkflowUpdate::JobUpdate)) }
  def job; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Actions::V0::WorkflowUpdate::JobUpdate)).void }
  def job=(value); end

  sig { returns(String) }
  def repository_id; end

  sig { params(value: String).void }
  def repository_id=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Actions::V0::WorkflowUpdate::RunUpdate)) }
  def run; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Actions::V0::WorkflowUpdate::RunUpdate)).void }
  def run=(value); end

  sig { returns(T.nilable(Symbol)) }
  def update; end

  sig { returns(String) }
  def workflow_run_id; end

  sig { params(value: String).void }
  def workflow_run_id=(value); end
end
