{"version":3,"file":"chunk-app_assets_modules_github_slash-command-expander-element_slash-command-suggester_ts-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@github/session-resume/dist/index.js","app/assets/modules/github/session-resume-helpers.ts","app/assets/modules/github/slash-command-expander-element/slash-command-suggester.ts","ui/packages/html-safe-nonce/html-safe-nonce.ts","ui/packages/trusted-types-policies/server-x-safe-html.ts","ui/packages/fetch-utils/fetch-utils.ts","ui/packages/filter-sort/filter-sort.ts","ui/packages/filter-sort/filter-map.ts","ui/packages/fuzzy-filter/fuzzy-filter.ts","ui/packages/trusted-types-policies/parse-html.ts","ui/packages/parse-html/parse-html.ts"],"sourcesContent":["let submittedForm = null;\nfunction shouldResumeField(field, filter) {\n    return !!field.id && filter(field) && field.form !== submittedForm;\n}\nfunction valueIsUnchanged(field) {\n    if (field instanceof HTMLSelectElement) {\n        return true;\n    }\n    else if (isHTMLCheckableInputElement(field)) {\n        return field.checked !== field.defaultChecked;\n    }\n    else {\n        return field.value !== field.defaultValue;\n    }\n}\nfunction isPersistableElement(node) {\n    return node instanceof HTMLInputElement || node instanceof HTMLTextAreaElement || node instanceof HTMLSelectElement;\n}\nfunction isHTMLCheckableInputElement(field) {\n    return field instanceof HTMLInputElement && /checkbox|radio/.test(field.type);\n}\nexport function persistResumableFields(id, options) {\n    var _a, _b, _c, _d, _e, _f;\n    const scope = (_a = options === null || options === void 0 ? void 0 : options.scope) !== null && _a !== void 0 ? _a : document;\n    const selector = (_b = options === null || options === void 0 ? void 0 : options.selector) !== null && _b !== void 0 ? _b : '.js-session-resumable';\n    const elements = (_c = options === null || options === void 0 ? void 0 : options.fields) !== null && _c !== void 0 ? _c : scope.querySelectorAll(selector);\n    const keyPrefix = (_d = options === null || options === void 0 ? void 0 : options.keyPrefix) !== null && _d !== void 0 ? _d : 'session-resume:';\n    const storageFilter = (_e = options === null || options === void 0 ? void 0 : options.storageFilter) !== null && _e !== void 0 ? _e : valueIsUnchanged;\n    let storage;\n    try {\n        storage = (_f = options === null || options === void 0 ? void 0 : options.storage) !== null && _f !== void 0 ? _f : sessionStorage;\n    }\n    catch (_g) {\n        return;\n    }\n    const key = `${keyPrefix}${id}`;\n    const resumables = [];\n    for (const el of elements) {\n        if (isPersistableElement(el)) {\n            resumables.push(el);\n        }\n    }\n    let fields = resumables\n        .filter(field => shouldResumeField(field, storageFilter))\n        .map(field => {\n        if (field instanceof HTMLSelectElement) {\n            return [field.id, Array.from(field.selectedOptions).map(option => option.value)];\n        }\n        else {\n            return [field.id, field.value];\n        }\n    });\n    if (fields.length) {\n        try {\n            const previouslyStoredFieldsJson = storage.getItem(key);\n            if (previouslyStoredFieldsJson !== null) {\n                const previouslyStoredFields = JSON.parse(previouslyStoredFieldsJson);\n                const fieldsNotReplaced = previouslyStoredFields.filter(function (oldField) {\n                    return !fields.some(field => field[0] === oldField[0]);\n                });\n                fields = fields.concat(fieldsNotReplaced);\n            }\n            storage.setItem(key, JSON.stringify(fields));\n        }\n        catch (_h) {\n        }\n    }\n}\nexport function restoreResumableFields(id, options) {\n    var _a, _b;\n    const keyPrefix = (_a = options === null || options === void 0 ? void 0 : options.keyPrefix) !== null && _a !== void 0 ? _a : 'session-resume:';\n    let storage;\n    try {\n        storage = (_b = options === null || options === void 0 ? void 0 : options.storage) !== null && _b !== void 0 ? _b : sessionStorage;\n    }\n    catch (_c) {\n        return;\n    }\n    const key = `${keyPrefix}${id}`;\n    let fields;\n    try {\n        fields = storage.getItem(key);\n    }\n    catch (_d) {\n    }\n    if (!fields)\n        return;\n    const changedFields = [];\n    const storedFieldsNotFound = [];\n    for (const [fieldId, value] of JSON.parse(fields)) {\n        const resumeEvent = new CustomEvent('session:resume', {\n            bubbles: true,\n            cancelable: true,\n            detail: { targetId: fieldId, targetValue: value }\n        });\n        if (document.dispatchEvent(resumeEvent)) {\n            const field = document.getElementById(fieldId);\n            if (isPersistableElement(field)) {\n                if (field instanceof HTMLSelectElement) {\n                    for (const option of field.options) {\n                        option.selected = value.includes(option.value);\n                    }\n                    changedFields.push(field);\n                }\n                else if (isHTMLCheckableInputElement(field)) {\n                    field.checked = !field.defaultChecked;\n                    changedFields.push(field);\n                }\n                else if (field.value === field.defaultValue) {\n                    field.value = value;\n                    changedFields.push(field);\n                }\n            }\n            else {\n                storedFieldsNotFound.push([fieldId, value]);\n            }\n        }\n    }\n    if (storedFieldsNotFound.length === 0) {\n        try {\n            storage.removeItem(key);\n        }\n        catch (_e) {\n        }\n    }\n    else {\n        storage.setItem(key, JSON.stringify(storedFieldsNotFound));\n    }\n    setTimeout(function () {\n        for (const el of changedFields) {\n            el.dispatchEvent(new CustomEvent('change', { bubbles: true, cancelable: true }));\n        }\n    }, 0);\n}\nexport function setForm(event) {\n    submittedForm = event.target;\n    setTimeout(function () {\n        if (event.defaultPrevented) {\n            submittedForm = null;\n        }\n    }, 0);\n}\n","// Gets the current page's id for persisting fields.\n//\n// The value can be overridden by providing a normalized value in a meta tag.\n//\n//   <meta name=\"session-resume-id\" content=\"/github/github/issues/123\">.\n//\n// Defaults to the current url path.\nexport function getPageID(url?: URL): string {\n  const location = url || window.location\n\n  const metaTag = document.head && document.head.querySelector('meta[name=session-resume-id]')\n  const id = metaTag instanceof HTMLMetaElement && metaTag.content\n\n  return id || location.pathname\n}\n","import {compare, fuzzyScore} from '@github-ui/fuzzy-filter'\nimport {persistResumableFields, restoreResumableFields} from '@github/session-resume'\nimport type SlashCommandExpanderElement from '../slash-command-expander-element'\nimport {fetchSafeDocumentFragment} from '@github-ui/fetch-utils'\nimport {filterSort} from '@github-ui/filter-sort'\nimport {getPageID} from '../session-resume-helpers'\nimport memoize from '@github/memoize'\nimport type {Result} from './slash-command-expander-element'\n\nconst SLASH_COMMAND_STRING_BEGINNING = '/'\n\nfunction search(items: Element[], searchQuery: string): Element[] {\n  const query = searchQuery.toLowerCase().trim()\n  const key = (item: Element) => {\n    const text = (item.getAttribute('data-text') || '').trim().toLowerCase()\n    const score = fuzzyScore(text, query)\n    return score > 0 ? {score, text} : null\n  }\n\n  if (query) {\n    return filterSort(items, key, compare)\n  } else {\n    return items\n  }\n}\n\nexport async function onValue(el: SlashCommandExpanderElement, key: string, item: HTMLElement) {\n  if (key !== SLASH_COMMAND_STRING_BEGINNING) return\n\n  const url = item.getAttribute('data-url')\n  if (!url) return\n\n  // Leaving this here so that a linter doesn't complain\n  const form = item.querySelector<HTMLFormElement>('.js-slash-command-suggestion-form')\n  if (!form) return\n\n  const token = form.querySelector<HTMLInputElement>('.js-data-url-csrf')\n  if (!token) return\n\n  const formData = new FormData(form)\n  el.isLoading()\n\n  try {\n    const response = await fetchSafeDocumentFragment(document, url, {\n      method: 'PATCH',\n      body: formData,\n      headers: {\n        Accept: 'text/html',\n        'Scoped-CSRF-Token': token.value,\n      },\n    })\n\n    if (!response) return\n    handleResponse(el, response)\n  } catch {\n    el.showError()\n  }\n}\n\nfunction handleResponse(expander: SlashCommandExpanderElement, response: DocumentFragment) {\n  const component = response.firstElementChild\n  if (!component) return\n\n  if (response.children.length > 1) {\n    showFooter(response.lastElementChild as HTMLElement, expander)\n  }\n\n  if (component.hasAttribute('data-reload-suggestions')) {\n    // re-fetch the commands if the resource state has changed\n    cachedCommands = memoize(fetchSlashCommands)\n  }\n\n  const responseType = component.getAttribute('data-component-type')\n  const shouldSubmitForm = component.hasAttribute('data-submit-form')\n  const customEvent = component.getAttribute('data-custom-event')\n\n  if (responseType === 'fill') {\n    // if the content contains html tags, we'll use innerHTML\n    if (/<\\/?[a-z][\\s\\S]*>/i.test(component.innerHTML)) {\n      expander.setValue(component.innerHTML.trim())\n    } else {\n      // otherwise we'll use textContent so we aren't inserting unnecessary HTML entity characters\n      expander.setValue(component.textContent?.trim() || '')\n    }\n\n    if (shouldSubmitForm) {\n      submitForm(expander)\n    }\n  } else if (responseType === 'menu' || responseType === 'error') {\n    expander.setMenu(component.querySelector('.js-slash-command-menu') as HTMLElement)\n  } else if (responseType === 'action') {\n    expander.closeMenu()\n  } else if (responseType === 'embedded_form') {\n    handleEmbeddedForm(expander, component)\n  } else if (responseType === 'dialog_form') {\n    handleDialogForm(expander, component)\n  } else if (responseType === 'modal_form') {\n    handleModalForm(expander, component)\n  }\n\n  if (customEvent) {\n    expander.dispatchEvent(new CustomEvent(customEvent, {bubbles: true, detail: component}))\n  }\n\n  restoreResumableFields(getPageID())\n}\n\nfunction submitOnCommandEnter(event: KeyboardEvent) {\n  // TODO: Refactor to use data-hotkey\n  /* eslint eslint-comments/no-use: off */\n  /* eslint-disable @github-ui/ui-commands/no-manual-shortcut-logic */\n  if (!(event.metaKey && event.key === 'Enter')) return\n\n  event.preventDefault()\n  event.stopPropagation()\n\n  const input = event.target as HTMLInputElement | null\n  const form = input?.form as HTMLFormElement | null\n\n  if (!form) return\n\n  if (form.requestSubmit) {\n    form.requestSubmit()\n  } else {\n    // Handle browsers that don't support support `requestSubmit`, like Safari.\n    // This relies on the presence of a submit button. If absent, Cmd-Enter won't do anything.\n    const submitButton = form.querySelector(\"[type='submit']\") as HTMLElement\n    submitButton?.click()\n  }\n  /* eslint-enable @github-ui/ui-commands/no-manual-shortcut-logic */\n}\n\nfunction getFormContents(form: HTMLFormElement) {\n  const formData = new FormData(form)\n  let contents = ''\n\n  for (const fieldPair of formData) {\n    contents = contents + fieldPair[0]\n    contents = contents + fieldPair[1].toString()\n  }\n\n  return contents\n}\n\nfunction focusFirstFormInput(formElement: HTMLFormElement) {\n  let inputFocused = false\n  for (const element of formElement.querySelectorAll('select,input,textarea')) {\n    const input = element as HTMLInputElement\n\n    if (input.type !== 'hidden') {\n      if (!inputFocused) {\n        input.focus()\n        inputFocused = true\n      }\n\n      input.addEventListener('keydown', submitOnCommandEnter)\n    }\n  }\n}\n\nfunction hookUpCancelActionListeners(element: HTMLElement, closeForm: () => void) {\n  const closeElements = element.querySelectorAll('[data-close-dialog]')\n  for (const closeElement of closeElements) {\n    closeElement.addEventListener('click', (event: Event) => {\n      event.preventDefault()\n      persistResumableFields(getPageID(), {selector: '.js-session-resumable'})\n      closeForm()\n    })\n  }\n}\n\nfunction addDismissAlertListener(\n  formElement: HTMLFormElement,\n  elementToListenOn: HTMLElement,\n  previouslyFocused: HTMLElement,\n  closeForm: () => void,\n) {\n  const originalFormContents = getFormContents(formElement)\n  elementToListenOn.addEventListener('keydown', (event: KeyboardEvent) => {\n    // TODO: Refactor to use data-hotkey\n    /* eslint eslint-comments/no-use: off */\n    /* eslint-disable @github-ui/ui-commands/no-manual-shortcut-logic */\n    if (event.key === 'Escape') {\n      // eslint-disable-next-line i18n-text/no-en\n      const confirmationMessage = 'Are you sure you want to dismiss the form?'\n      const currentFormContents = getFormContents(formElement)\n      const isUnchanged = originalFormContents === currentFormContents\n\n      if (isUnchanged || confirm(confirmationMessage)) {\n        persistResumableFields(getPageID(), {selector: '.js-session-resumable'})\n        closeForm()\n\n        if (previouslyFocused) {\n          previouslyFocused.focus()\n        }\n      }\n    }\n    /* eslint-enable @github-ui/ui-commands/no-manual-shortcut-logic */\n  })\n}\n\nfunction addSubmitButtonListener(\n  formElement: HTMLFormElement,\n  expander: SlashCommandExpanderElement,\n  closeForm: () => void,\n) {\n  formElement.addEventListener('submit', async (event: Event) => {\n    event.preventDefault()\n    const form = event.target as HTMLFormElement\n    const token = form.querySelector<HTMLInputElement>('.js-data-url-csrf')\n    if (!token) return\n\n    const url = form.getAttribute('action')\n    if (!url) return\n\n    reenableParentFormButtons(expander)\n\n    const formData = new FormData(form)\n    const response = await fetchSafeDocumentFragment(document, url, {\n      method: 'PATCH',\n      body: formData,\n      headers: {\n        Accept: 'text/html',\n        'Scoped-CSRF-Token': token.value,\n      },\n    })\n    closeForm()\n    if (!response) return\n    handleResponse(expander, response)\n  })\n}\n\n/*\n  When a slash command form is \"submitted\", the parent form's buttons can become\n  inadvertently disabled if they have a `data-disable-with` attribute, due to the\n  behavior defined in the `disable-with` module, which binds its event listeners ahead\n  of slash commands and cannot be prevented using stopPropagation.\n\n  Therefore, the parent form's buttons will need to be manually re-enabled\n  when the nested slash command form has been submitted.\n*/\nfunction reenableParentFormButtons(expander: SlashCommandExpanderElement) {\n  const siblingSurface = expander.closest('.js-slash-command-surface') as HTMLElement\n  const formSurface = expander.closest('form') as HTMLElement\n  const surface = siblingSurface || formSurface\n\n  if (surface) {\n    for (const button of surface.querySelectorAll('[data-disable-with][disabled]')) {\n      ;(button as HTMLInputElement | HTMLButtonElement).disabled = false\n    }\n  }\n}\n\nfunction handleDialogForm(expander: SlashCommandExpanderElement, component: Element) {\n  const menu = component.querySelector('.js-slash-command-menu') as HTMLElement\n  expander.setMenu(menu, true)\n\n  const componentForm = menu.querySelector('form') as HTMLFormElement\n  const previouslyFocused = document.activeElement as HTMLElement\n\n  focusFirstFormInput(componentForm)\n\n  const closeForm = () => {\n    expander.closeMenu()\n  }\n\n  addDismissAlertListener(componentForm, componentForm, previouslyFocused, closeForm)\n\n  hookUpCancelActionListeners(componentForm, closeForm)\n\n  addSubmitButtonListener(componentForm, expander, closeForm)\n}\n\nfunction handleModalForm(expander: SlashCommandExpanderElement, component: Element) {\n  const commandFormContainer = component.querySelector('[data-component=\"form\"]') as HTMLFormElement\n  expander.insertAdjacentElement('afterend', commandFormContainer)\n\n  const previouslyFocused = document.activeElement as HTMLElement\n\n  focusFirstFormInput(commandFormContainer)\n\n  const closeForm = () => {\n    commandFormContainer.remove()\n  }\n\n  hookUpCancelActionListeners(commandFormContainer, closeForm)\n\n  const commandForm = commandFormContainer.getElementsByTagName('form')[0]!\n  addDismissAlertListener(commandForm, commandFormContainer, previouslyFocused, closeForm)\n\n  addSubmitButtonListener(commandFormContainer, expander, closeForm)\n}\n\nfunction handleEmbeddedForm(expander: SlashCommandExpanderElement, component: Element) {\n  const siblingSurface = expander.closest('.js-slash-command-surface') as HTMLElement\n  const formSurface = expander.closest('form') as HTMLElement\n  const surface = siblingSurface || formSurface\n\n  if (!surface) return\n  surface.hidden = true\n\n  const commandFormContainer = component.querySelector('[data-component=\"form\"]') as HTMLFormElement\n  surface.insertAdjacentElement('afterend', commandFormContainer)\n\n  const previouslyFocused = document.activeElement as HTMLElement\n\n  focusFirstFormInput(commandFormContainer)\n\n  const closeForm = () => {\n    surface.hidden = false\n    commandFormContainer.remove()\n  }\n\n  hookUpCancelActionListeners(commandFormContainer, closeForm)\n\n  const commandForm = commandFormContainer.getElementsByTagName('form')[0]!\n  addDismissAlertListener(commandForm, commandFormContainer, previouslyFocused, closeForm)\n\n  addSubmitButtonListener(commandFormContainer, expander, closeForm)\n}\n\nconst durationToDisplayNotice = 5000\nfunction showFooter(footer: HTMLElement, slashCommandExpander: SlashCommandExpanderElement) {\n  const commentArea = slashCommandExpander.parentElement?.parentElement\n  if (!commentArea) return\n\n  const defaultFooter = commentArea.querySelector('.drag-and-drop .default') as HTMLElement\n\n  let previousDefaultFooterHidden = false\n  if (defaultFooter) {\n    previousDefaultFooterHidden = defaultFooter.hidden\n    defaultFooter.hidden = true\n  }\n\n  defaultFooter?.parentElement?.prepend(footer)\n\n  setTimeout(() => {\n    if (defaultFooter) {\n      defaultFooter.hidden = previousDefaultFooterHidden\n    }\n    footer.remove()\n  }, durationToDisplayNotice)\n}\n\nexport function onChange(\n  el: SlashCommandExpanderElement,\n  key: string,\n  provide: (a: Promise<Result>) => void,\n  text: string,\n) {\n  if (key !== SLASH_COMMAND_STRING_BEGINNING) return\n  el.isLoading()\n  const url = el.getAttribute('data-slash-command-url')!\n  provide(slashCommandMenu(url, text, el))\n}\n\nasync function slashCommandMenu(\n  url: string,\n  query: string,\n  target: SlashCommandExpanderElement,\n): Promise<{fragment: HTMLElement; matched: boolean}> {\n  try {\n    const [root, children] = await cachedCommands(url)\n    const list = root.querySelector('.js-slash-command-menu-items') as HTMLElement\n    const results = search(children, query)\n\n    if (list) {\n      list.textContent = ''\n\n      // we loop over `children` to ensure that the group sort order is maintained\n      // and so that we can include the relevant group headers for any search results\n      for (const el of children) {\n        if (el.classList.contains('js-group-divider')) {\n          // if it's a divider row, only append it if there are results for this group\n          const groupId = el.getAttribute('data-group-id')\n          const groupResults = results.filter(r => r.getAttribute('data-group-id') === groupId)\n\n          if (groupResults.length > 0) {\n            list.append(el)\n            list.append(...groupResults)\n          }\n        }\n      }\n    }\n\n    return {fragment: root, matched: results.length > 0}\n  } catch (error) {\n    target.showError()\n    // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n    throw new Error(error)\n  }\n}\n\nasync function fetchSlashCommands(url: string): Promise<[HTMLElement, Element[]]> {\n  const fragment = await fetchSafeDocumentFragment(document, url)\n  const root = fragment.firstElementChild as HTMLElement\n  const children = root.querySelectorAll('.js-slash-command-menu-items li')\n  return [root, [...children]]\n}\nlet cachedCommands = memoize(fetchSlashCommands)\n\nfunction submitForm(expander: SlashCommandExpanderElement) {\n  const form = expander.closest('form') as HTMLFormElement\n\n  // If there is no form, then the UI is likely the new React ui, so we fire a custom event\n  // that other parts of the codebase can listen for\n  if (!form) {\n    expander.dispatchEvent(new CustomEvent('request-submit', {bubbles: true}))\n    return\n  }\n\n  // Otherwise, proceed to submit the form\n  if (form.requestSubmit) {\n    form.requestSubmit()\n  } else {\n    // Handle browsers that don't support support `requestSubmit`, like Safari.\n    // This relies on the presence of a submit button. If absent, Cmd-Enter won't do anything.\n    const submitButton = form.querySelector(\"[type='submit']\") as HTMLElement\n    submitButton?.click()\n  }\n}\n","//  Get document's HTML Safe nonce.\n//\n// Example:\n//\n//   <meta name=\"html-safe-nonce\" content=\"de43a1f355c711f7f705e4f971964391ac0c8e13\">\nexport function getDocumentHtmlSafeNonces(document: Document): string[] {\n  const nonces = [...document.querySelectorAll<HTMLMetaElement>('meta[name=html-safe-nonce]')].map(meta => meta.content)\n\n  if (nonces.length < 1) {\n    throw new Error('could not find html-safe-nonce on document')\n  }\n  return nonces\n}\n\ninterface Response {\n  headers: Headers\n  status: number\n}\n\nclass ResponseError extends Error {\n  response: Response\n\n  constructor(message: string, response: Response) {\n    super(`${message} for HTTP ${response.status}`)\n    this.response = response\n  }\n}\n\nexport function verifyResponseHtmlSafeNonce(nonces: string[], response: Response, allowJson = false) {\n  const contentType = response.headers.get('content-type') || ''\n  if (!allowJson && !contentType.startsWith('text/html')) {\n    throw new ResponseError(`expected response with text/html, but was ${contentType}`, response)\n  }\n\n  if (allowJson && !(contentType.startsWith('text/html') || contentType.startsWith('application/json'))) {\n    throw new ResponseError(`expected response with text/html or application/json, but was ${contentType}`, response)\n  }\n\n  const responseNonce = response.headers.get('x-html-safe')\n  if (!responseNonce) {\n    throw new ResponseError(`missing X-HTML-Safe nonce`, response)\n  } else if (!nonces.includes(responseNonce)) {\n    throw new ResponseError(`response X-HTML-Safe nonce did not match`, response)\n  }\n}\n","import {getDocumentHtmlSafeNonces, verifyResponseHtmlSafeNonce} from '@github-ui/html-safe-nonce'\nimport {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {trustedTypesPolicy} from './policy'\n\nconst policyName = 'server-x-safe-html'\n\n// This is a no-op policy to be used with server-side rendered HTML.\nexport const serverXSafeHTMLPolicy = ghTrustedTypes.createPolicy(policyName, {\n  createHTML: (s: string, response: Response) => {\n    return trustedTypesPolicy.apply({\n      policy: () => {\n        verifyResponseHtmlSafeNonce(getDocumentHtmlSafeNonces(document), response)\n        return s\n      },\n      policyName,\n      fallback: s,\n      silenceErrorReporting: true,\n    })\n  },\n})\n","import {parseHTML} from '@github-ui/parse-html'\nimport {serverXSafeHTMLPolicy} from '@github-ui/trusted-types-policies/server-x-safe-html'\n\nexport async function fetchSafeDocumentFragment(\n  document: Document,\n  url: RequestInfo,\n  options?: RequestInit,\n): Promise<DocumentFragment> {\n  const request = new Request(url, options)\n  request.headers.append('X-Requested-With', 'XMLHttpRequest')\n  const response = await self.fetch(request)\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error(`HTTP ${response.status}${response.statusText || ''}`)\n  }\n  const trustedHTML = serverXSafeHTMLPolicy.createHTML(await response.text(), response)\n  return parseHTML(document, trustedHTML)\n}\n\nexport function fetchPoll(\n  url: RequestInfo,\n  options?: RequestInit,\n  timeBetweenRequests = 1000,\n  acceptedStatusCodes = [200],\n  pollStatusCodes = [202],\n): Promise<Response> {\n  return (async function poll(wait: number): Promise<Response> {\n    const request = new Request(url, options)\n    request.headers.append('X-Requested-With', 'XMLHttpRequest')\n    const response = await self.fetch(request)\n\n    if (pollStatusCodes.includes(response.status)) {\n      await new Promise(resolve => setTimeout(resolve, wait))\n      return poll(wait * 1.5)\n    }\n    if (acceptedStatusCodes.includes(response.status)) {\n      return response\n    }\n    if (response.status < 200 || response.status >= 300) {\n      throw new Error(`HTTP ${response.status}${response.statusText || ''}`)\n    }\n    throw new Error(`Unexpected ${response.status} response status from poll endpoint`)\n  })(timeBetweenRequests)\n}\n\ntype RetryResult = Response | 'retry'\ntype FetchRetryOptions = {\n  // Base wait time between retries\n  // this will be multiplied with the current attempt to perform a backoff strategy\n  // Defaults to 500ms\n  wait?: number\n  // List of accepted status codes that should not be retried. Defaults to [200]\n  acceptedStatusCodes?: number[]\n  // Max number of attempts. Defaults to 3\n  max?: number\n  // Current retry attempt. Starts at 0\n  attempt?: number\n}\n\n// Execute a fetch call in a callback and retry it up to `options.max` times\n// Each retry will be delayed `options.wait` * `options.attempt`\nexport async function fetchRetry(\n  url: RequestInfo,\n  fetchOptions?: RequestInit,\n  options?: FetchRetryOptions,\n): Promise<Response> {\n  const {wait = 500, acceptedStatusCodes = [200], max = 3, attempt = 0} = options || {}\n\n  const retry: () => Promise<RetryResult> = async () => {\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          const request = new Request(url, fetchOptions)\n          request.headers.append('X-Requested-With', 'XMLHttpRequest')\n          const response = await self.fetch(request)\n          if (acceptedStatusCodes.includes(response.status) || attempt + 1 === max) {\n            return resolve(response)\n          }\n\n          // The response failed, we indicate that it must be retried\n          resolve('retry')\n        } catch (err) {\n          // Only non successful HTTP status codes are controlled by this retry mechanism\n          // Any other error is propagated\n          reject(err)\n        }\n      }, wait * attempt)\n    })\n  }\n\n  const result = await retry()\n  if (result !== 'retry') {\n    return result\n  }\n\n  return fetchRetry(url, fetchOptions, {wait, acceptedStatusCodes, max, attempt: attempt + 1})\n}\n","import {filterMap} from './filter-map'\n\nexport type MapKey<T, K> = (item: T) => K | null | undefined\nexport type Comparator<T> = (a: T, b: T) => number\n\nexport function filterSort<T, K>(items: T[], map: MapKey<T, K>, compare: Comparator<K>): T[] {\n  const sortKey = (item: T): [T, K] | null => {\n    const key = map(item)\n    return key != null ? [item, key] : null\n  }\n  return [...filterMap(items, sortKey)].sort((a, b) => compare(a[1], b[1])).map(([item]) => item)\n}\n","export type MapFilter<T, U> = (item: T) => U | null | undefined\n\nexport function* filterMap<T, U>(items: T[], map: MapFilter<T, U>): Iterable<U> {\n  for (const item of items) {\n    const value = map(item)\n    if (value != null) {\n      yield value\n    }\n  }\n}\n","// Example\n// ```js\n//     fuzzyScore(\"foo.html\", \"foo\")\n//     // => 0.6458333333333334\n// ```\n//\n// ```js\n//     // Compute re once\n//     re = fuzzyRegexp(\"foo\")\n//     fuzzyScore(\"foo.html\", re)\n//     fuzzyScore(\"bar.html\", re)\n//     // => 0.6458333333333334\n// ```\n//\n// Returns a number between 0 and 1. 0 being the worst match and 1\n// being an exact match.\n// You can change the `prefixBonusWeight` variable to alter ordering.\n// Currently fuzzy search for the labels picker uses a weaker prefix bonus to weight heavier full word matches.\nexport function fuzzyScore(string: string, query: string, prefixBonusWeight = 0.1): number {\n  let score = stringScore(string, query, prefixBonusWeight)\n  if (score && query.indexOf('/') === -1) {\n    const basename = string.substring(string.lastIndexOf('/') + 1)\n    score += stringScore(basename, query, prefixBonusWeight)\n  }\n  return score\n}\n\n// Create a regexp that can be used to fuzzy match a given string. Any\n// special regexp characters in the input string will be escaped\n// correctly.\n//\n// A query of \"bar\" becomes /(.*)(b)([^a]*?)(a)([^r]*?)(r)(.*?)/.\n//\n// /\n//  (.*)     whatever's before the first b\n//  (b)      grab the first b of bar\n//  ([^a]*?) take everything up to the a of bar\n//  (a)      take the a of bar\n//  ([^r]*?) take everything up to the r of bar\n//  (r)      take the r of bar\n//  (.*?)    take the rest of the string\n// /\nexport function fuzzyRegexp(query: string): RegExp {\n  const chars = query.toLowerCase().split('')\n\n  let regex = ''\n\n  let firstChar = true\n  for (const char of chars) {\n    // must escape these chars so we match literals\n    const c = char.replace(/[\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n    if (firstChar) {\n      // for the first we want to greedily match anything, which pushes\n      // the first match as late as possible in the string\n      regex += `(.*)(${c})`\n      firstChar = false\n    } else {\n      regex += `([^${c}]*?)(${c})`\n    }\n  }\n  return new RegExp(`${regex}(.*?)$`, 'i')\n}\n\nexport function fuzzyHighlightElement(content: Element, text?: string, textRe?: RegExp): void {\n  if (text) {\n    const matches = content.innerHTML.trim().match(textRe || fuzzyRegexp(text))\n    if (!matches) return\n\n    let open = false\n    const html = []\n    for (let i = 1; i < matches.length; ++i) {\n      const m = matches[i]\n      if (!m) continue\n\n      if (i % 2 === 0) {\n        if (!open) {\n          // eslint-disable-next-line github/unescaped-html-literal\n          html.push('<mark>')\n          open = true\n        }\n      } else if (open) {\n        html.push('</mark>')\n        open = false\n      }\n      html.push(m)\n    }\n    content.innerHTML = html.join('')\n  } else {\n    const html = content.innerHTML.trim()\n    const clean = html.replace(/<\\/?mark>/g, '')\n    if (html !== clean) {\n      content.innerHTML = clean\n    }\n  }\n}\n\nconst wordSeparators = new Set([' ', '-', '_'])\n\n// string_score.js: Quicksilver-like string scoring algorithm.\n//  https://raw.github.com/joshaven/string_score/master/coffee/string_score.coffee\n//\n// Copyright (C) 2009-2011 Joshaven Potter <yourtech@gmail.com>\n// Copyright (C) 2010-2011 Yesudeep Mangalapilly <yesudeep@gmail.com>\n// MIT license: http://www.opensource.org/licenses/mit-license.php\n//\n// A string score implementation.\nfunction stringScore(originalString: string, abbreviation: string, prefixBonusWeight = 0.1): number {\n  let string = originalString\n  if (string === abbreviation) {\n    return 1.0\n  }\n  const stringLength = string.length\n  let totalCharacterScore = 0.0\n  let shouldAwardCommonPrefixBonus = 0\n  let firstChar = true\n  for (const char of abbreviation) {\n    const indexCLowercase = string.indexOf(char.toLowerCase())\n    const indexCUppercase = string.indexOf(char.toUpperCase())\n    const minIndex = Math.min(indexCLowercase, indexCUppercase)\n    const indexInString = minIndex > -1 ? minIndex : Math.max(indexCLowercase, indexCUppercase)\n    if (indexInString === -1) {\n      return 0.0\n    }\n    totalCharacterScore += 0.1\n    if (string[indexInString] === char) {\n      totalCharacterScore += 0.1\n    }\n    if (indexInString === 0) {\n      totalCharacterScore += 0.9 - prefixBonusWeight\n      if (firstChar) {\n        shouldAwardCommonPrefixBonus = 1\n      }\n    }\n    if (wordSeparators.has(string.charAt(indexInString - 1))) {\n      totalCharacterScore += 0.9 - prefixBonusWeight\n    }\n    string = string.substring(indexInString + 1, stringLength)\n    firstChar = false\n  }\n  const abbreviationLength = abbreviation.length\n  const abbreviationScore = totalCharacterScore / abbreviationLength\n  let finalScore = (abbreviationScore * (abbreviationLength / stringLength) + abbreviationScore) / 2\n  if (shouldAwardCommonPrefixBonus && finalScore + prefixBonusWeight < 1) {\n    finalScore += prefixBonusWeight\n  }\n  return finalScore\n}\n\nexport type TextScore = {score: number; text: string}\nexport function compare(a: TextScore, b: TextScore): -1 | 0 | 1 {\n  if (a.score > b.score) {\n    return -1\n  } else if (a.score < b.score) {\n    return 1\n  } else if (a.text < b.text) {\n    return -1\n  } else if (a.text > b.text) {\n    return 1\n  } else {\n    return 0\n  }\n}\n","import {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {trustedTypesPolicy} from './policy'\n\nconst policyName = 'parse-html-no-op'\n// This is a temporary policy to allow us to migrate to Trusted Types without breaking existing code.\nexport const temporaryPermissiveParseHTMLPolicy = ghTrustedTypes.createPolicy(policyName, {\n  createHTML: (s: string) => {\n    return trustedTypesPolicy.apply({\n      policy: () => s,\n      policyName,\n      fallback: s,\n      sanitize: false,\n      fallbackOnError: true,\n    })\n  },\n})\n","import {temporaryPermissiveParseHTMLPolicy} from '@github-ui/trusted-types-policies/parse-html'\n\nexport function parseHTML(document: Document, html: string): DocumentFragment {\n  const template = document.createElement('template')\n  template.innerHTML = temporaryPermissiveParseHTMLPolicy.createHTML(html)\n  return document.importNode(template.content, true)\n}\n"],"names":["submittedForm","valueIsUnchanged","field","HTMLSelectElement","isHTMLCheckableInputElement","checked","defaultChecked","value","defaultValue","isPersistableElement","node","HTMLInputElement","HTMLTextAreaElement","test","type","persistResumableFields","id","options","_a","_b","_c","_d","_e","_f","storage","scope","document","selector","elements","fields","querySelectorAll","keyPrefix","storageFilter","sessionStorage","_g","key","resumables","el","push","filter","form","map","Array","from","selectedOptions","option","length","previouslyStoredFieldsJson","getItem","fieldsNotReplaced","previouslyStoredFields","parse","oldField","some","concat","setItem","JSON","stringify","_h","restoreResumableFields","changedFields","storedFieldsNotFound","fieldId","resumeEvent","CustomEvent","bubbles","cancelable","detail","targetId","targetValue","dispatchEvent","getElementById","selected","includes","removeItem","setTimeout","setForm","event","target","defaultPrevented","getPageID","url","location","window","metaTag","head","querySelector","HTMLMetaElement","content","pathname","onValue","item","getAttribute","token","formData","FormData","isLoading","response","fetchSafeDocumentFragment","method","body","headers","Accept","handleResponse","showError","expander","component","firstElementChild","children","showFooter","footer","slashCommandExpander","commentArea","parentElement","defaultFooter","previousDefaultFooterHidden","hidden","prepend","remove","lastElementChild","hasAttribute","cachedCommands","memoize","fetchSlashCommands","responseType","shouldSubmitForm","customEvent","innerHTML","setValue","trim","textContent","submitForm","closest","requestSubmit","submitButton","click","setMenu","closeMenu","handleEmbeddedForm","siblingSurface","formSurface","surface","commandFormContainer","insertAdjacentElement","previouslyFocused","activeElement","focusFirstFormInput","closeForm","hookUpCancelActionListeners","addDismissAlertListener","getElementsByTagName","addSubmitButtonListener","handleDialogForm","menu","componentForm","handleModalForm","submitOnCommandEnter","metaKey","preventDefault","stopPropagation","input","getFormContents","contents","fieldPair","toString","formElement","inputFocused","element","focus","addEventListener","closeElement","elementToListenOn","originalFormContents","isUnchanged","confirm","reenableParentFormButtons","button","disabled","onChange","provide","text","slashCommandMenu","query","root","list","results","search","items","searchQuery","toLowerCase","filterSort","score","fuzzyScore","compare","classList","contains","groupId","groupResults","r","append","fragment","matched","error","ResponseError","Error","constructor","message","status","policyName","serverXSafeHTMLPolicy","ghTrustedTypes","createPolicy","createHTML","s","trustedTypesPolicy","apply","policy","verifyResponseHtmlSafeNonce","nonces","allowJson","contentType","get","startsWith","responseNonce","getDocumentHtmlSafeNonces","meta","fallback","silenceErrorReporting","request","Request","self","fetch","statusText","trustedHTML","parseHTML","fetchPoll","timeBetweenRequests","acceptedStatusCodes","pollStatusCodes","poll","wait","Promise","resolve","fetchRetry","fetchOptions","max","attempt","retry","reject","err","result","filterMap","sort","a","b","string","prefixBonusWeight","stringScore","indexOf","substring","lastIndexOf","fuzzyHighlightElement","textRe","matches","match","fuzzyRegexp","chars","split","regex","firstChar","char","c","replace","open","html","i","m","join","clean","wordSeparators","Set","originalString","abbreviation","stringLength","totalCharacterScore","shouldAwardCommonPrefixBonus","indexCLowercase","indexCUppercase","toUpperCase","minIndex","Math","min","indexInString","has","charAt","abbreviationLength","abbreviationScore","finalScore","temporaryPermissiveParseHTMLPolicy","sanitize","fallbackOnError","template","createElement","importNode"],"sourceRoot":""}