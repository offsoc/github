{"version":3,"file":"chunk-node_modules_monaco-editor_esm_vs_basic-languages_html_html_js-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/monaco-editor/esm/vs/basic-languages/html/html.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.49.0(383fdf3fc0e1e1a024068b8d0fd4f3dcbae74d04)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/basic-languages/html/html.ts\nvar EMPTY_ELEMENTS = [\n  \"area\",\n  \"base\",\n  \"br\",\n  \"col\",\n  \"embed\",\n  \"hr\",\n  \"img\",\n  \"input\",\n  \"keygen\",\n  \"link\",\n  \"menuitem\",\n  \"meta\",\n  \"param\",\n  \"source\",\n  \"track\",\n  \"wbr\"\n];\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n  comments: {\n    blockComment: [\"<!--\", \"-->\"]\n  },\n  brackets: [\n    [\"<!--\", \"-->\"],\n    [\"<\", \">\"],\n    [\"{\", \"}\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"<\", close: \">\" }\n  ],\n  onEnterRules: [\n    {\n      beforeText: new RegExp(\n        `<(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$`,\n        \"i\"\n      ),\n      afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n      action: {\n        indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n      }\n    },\n    {\n      beforeText: new RegExp(\n        `<(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`,\n        \"i\"\n      ),\n      action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Indent }\n    }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*<!--\\\\s*#region\\\\b.*-->\"),\n      end: new RegExp(\"^\\\\s*<!--\\\\s*#endregion\\\\b.*-->\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".html\",\n  ignoreCase: true,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n      [/<!DOCTYPE/, \"metatag\", \"@doctype\"],\n      [/<!--/, \"comment\", \"@comment\"],\n      [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)(\\s*)(\\/>)/, [\"delimiter\", \"tag\", \"\", \"delimiter\"]],\n      [/(<)(script)/, [\"delimiter\", { token: \"tag\", next: \"@script\" }]],\n      [/(<)(style)/, [\"delimiter\", { token: \"tag\", next: \"@style\" }]],\n      [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)/, [\"delimiter\", { token: \"tag\", next: \"@otherTag\" }]],\n      [/(<\\/)((?:[\\w\\-]+:)?[\\w\\-]+)/, [\"delimiter\", { token: \"tag\", next: \"@otherTag\" }]],\n      [/</, \"delimiter\"],\n      [/[^<]+/]\n      // text\n    ],\n    doctype: [\n      [/[^>]+/, \"metatag.content\"],\n      [/>/, \"metatag\", \"@pop\"]\n    ],\n    comment: [\n      [/-->/, \"comment\", \"@pop\"],\n      [/[^-]+/, \"comment.content\"],\n      [/./, \"comment.content\"]\n    ],\n    otherTag: [\n      [/\\/?>/, \"delimiter\", \"@pop\"],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [/[ \\t\\r\\n]+/]\n      // whitespace\n    ],\n    // -- BEGIN <script> tags handling\n    // After <script\n    script: [\n      [/type/, \"attribute.name\", \"@scriptAfterType\"],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@scriptEmbedded\",\n          nextEmbedded: \"text/javascript\"\n        }\n      ],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/(<\\/)(script\\s*)(>)/, [\"delimiter\", \"tag\", { token: \"delimiter\", next: \"@pop\" }]]\n    ],\n    // After <script ... type\n    scriptAfterType: [\n      [/=/, \"delimiter\", \"@scriptAfterTypeEquals\"],\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@scriptEmbedded\",\n          nextEmbedded: \"text/javascript\"\n        }\n      ],\n      // cover invalid e.g. <script type>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <script ... type =\n    scriptAfterTypeEquals: [\n      [\n        /\"module\"/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@scriptWithCustomType.text/javascript\"\n        }\n      ],\n      [\n        /'module'/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@scriptWithCustomType.text/javascript\"\n        }\n      ],\n      [\n        /\"([^\"]*)\"/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@scriptWithCustomType.$1\"\n        }\n      ],\n      [\n        /'([^']*)'/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@scriptWithCustomType.$1\"\n        }\n      ],\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@scriptEmbedded\",\n          nextEmbedded: \"text/javascript\"\n        }\n      ],\n      // cover invalid e.g. <script type=>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <script ... type = $S2\n    scriptWithCustomType: [\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@scriptEmbedded.$S2\",\n          nextEmbedded: \"$S2\"\n        }\n      ],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    scriptEmbedded: [\n      [/<\\/script/, { token: \"@rematch\", next: \"@pop\", nextEmbedded: \"@pop\" }],\n      [/[^<]+/, \"\"]\n    ],\n    // -- END <script> tags handling\n    // -- BEGIN <style> tags handling\n    // After <style\n    style: [\n      [/type/, \"attribute.name\", \"@styleAfterType\"],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@styleEmbedded\",\n          nextEmbedded: \"text/css\"\n        }\n      ],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/(<\\/)(style\\s*)(>)/, [\"delimiter\", \"tag\", { token: \"delimiter\", next: \"@pop\" }]]\n    ],\n    // After <style ... type\n    styleAfterType: [\n      [/=/, \"delimiter\", \"@styleAfterTypeEquals\"],\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@styleEmbedded\",\n          nextEmbedded: \"text/css\"\n        }\n      ],\n      // cover invalid e.g. <style type>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <style ... type =\n    styleAfterTypeEquals: [\n      [\n        /\"([^\"]*)\"/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@styleWithCustomType.$1\"\n        }\n      ],\n      [\n        /'([^']*)'/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@styleWithCustomType.$1\"\n        }\n      ],\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@styleEmbedded\",\n          nextEmbedded: \"text/css\"\n        }\n      ],\n      // cover invalid e.g. <style type=>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <style ... type = $S2\n    styleWithCustomType: [\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@styleEmbedded.$S2\",\n          nextEmbedded: \"$S2\"\n        }\n      ],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    styleEmbedded: [\n      [/<\\/style/, { token: \"@rematch\", next: \"@pop\", nextEmbedded: \"@pop\" }],\n      [/[^<]+/, \"\"]\n    ]\n    // -- END <style> tags handling\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","monaco_editor_core_exports","__copyProps","to","from","except","desc","key","call","get","enumerable","EMPTY_ELEMENTS","conf","wordPattern","comments","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","onEnterRules","beforeText","join","afterText","action","indentAction","languages","IndentAction","IndentOutdent","Indent","folding","markers","start","end","language","defaultToken","tokenPostfix","ignoreCase","tokenizer","root","token","next","doctype","comment","otherTag","script","nextEmbedded","scriptAfterType","scriptAfterTypeEquals","switchTo","scriptWithCustomType","scriptEmbedded","style","styleAfterType","styleAfterTypeEquals","styleWithCustomType","styleEmbedded"],"sourceRoot":""}