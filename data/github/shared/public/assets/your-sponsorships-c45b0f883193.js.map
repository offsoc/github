{"version":3,"file":"your-sponsorships-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/react-core/deferred-registry.ts","ui/packages/react-core/react-partial-anchor.ts","ui/packages/react-core/react-partial-registry.ts","ui/packages/react-core/ReactPartialElement.tsx","ui/packages/react-core/register-partial.ts","ui/packages/react-profiling-mode/src/index.ts","ui/packages/test-id-props/test-id-props.ts","ui/packages/verified-fetch/verified-fetch.ts","ui/packages/github-avatar/GitHubAvatar.tsx","ui/packages/react-core/PartialRouter.tsx","ui/packages/react-core/PartialEntry.tsx","ui/packages/react-core/ReactBaseElement.tsx","ui/packages/your-sponsorships/your-sponsorships-types.ts","ui/packages/your-sponsorships/Columns.tsx","ui/packages/your-sponsorships/ExportSponsorships.tsx","ui/packages/your-sponsorships/update-sponsorship.ts","ui/packages/your-sponsorships/YourSponsorships.tsx","ui/packages/your-sponsorships/your-sponsorships.ts"],"sourcesContent":["export class DeferredRegistry<T> {\n  private registrationEntries: Record<\n    string,\n    {\n      promise: Promise<T>\n      resolve?: (r: T) => void\n    }\n  > = {}\n\n  public register(name: string, registration: T) {\n    const entry = this.registrationEntries[name]\n    if (entry) {\n      entry.resolve?.(registration)\n    } else {\n      this.registrationEntries[name] = {\n        promise: Promise.resolve(registration),\n      }\n    }\n  }\n\n  public getRegistration(name: string): Promise<T> {\n    this.registrationEntries[name] ||= new Deferred()\n    return this.registrationEntries[name].promise\n  }\n}\n\nclass Deferred<T> {\n  declare promise\n  declare resolve: (r: T) => void\n\n  constructor() {\n    this.promise = new Promise<T>(resolve => {\n      this.resolve = resolve\n    })\n  }\n}\n","import type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {useCallback, useEffect, useRef, useState} from 'react'\n\ninterface ReactPartialAnchor {\n  /**\n   * DO NOT USE THIS PROPERTY DIRECTLY. It is meant to be used with useExternalAnchor and useOnAnchorClick\n   */\n  __wrapperElement: ReactPartialAnchorElement\n}\n\nexport interface ReactPartialAnchorProps {\n  reactPartialAnchor?: ReactPartialAnchor\n}\n\nexport function usePartialAnchorProps(\n  anchorElement: ReactPartialAnchorElement | undefined | null,\n): ReactPartialAnchorProps {\n  useEffect(() => {\n    const anchor = anchorElement?.anchor\n\n    if (!anchor) {\n      return\n    }\n\n    if ('disabled' in anchor) {\n      anchor.disabled = false\n    }\n    anchor.classList.remove('cursor-wait')\n  }, [anchorElement])\n\n  if (!anchorElement) {\n    return {}\n  }\n\n  return {\n    reactPartialAnchor: {\n      __wrapperElement: anchorElement,\n    },\n  }\n}\n\nexport function useExternalAnchor(reactPartialAnchor: ReactPartialAnchor) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor || null)\n  const [open, setOpen] = useState(false)\n\n  const onClick = useCallback(() => {\n    // toggle the open state when clicked\n    setOpen(!open)\n  }, [open, setOpen])\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    ref.current.setAttribute('aria-expanded', open.toString())\n    ref.current.setAttribute('aria-haspopup', 'true')\n  }, [ref, open])\n\n  useOnAnchorClick(reactPartialAnchor, onClick)\n\n  return {\n    ref,\n    open,\n    setOpen,\n  }\n}\n\nexport function useOnAnchorClick(reactPartialAnchor: ReactPartialAnchor, onClick: (event: MouseEvent) => void) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor)\n\n  useEffect(() => {\n    const element = ref.current\n    if (!element) {\n      return\n    }\n\n    element.addEventListener('click', onClick)\n    return () => element.removeEventListener('click', onClick)\n  }, [ref, onClick])\n}\n\nexport type PropsWithPartialAnchor<T> = T & Required<ReactPartialAnchorProps>\n","import {DeferredRegistry} from './deferred-registry'\n\nexport interface PartialRegistration {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Component: React.ComponentType<any>\n}\n\nexport const partialRegistry = new DeferredRegistry<PartialRegistration>()\n\nexport function getReactPartial(appName: string) {\n  return partialRegistry.getRegistration(appName)\n}\n","import {controller} from '@github/catalyst'\nimport {getReactPartial} from './react-partial-registry'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {ReactBaseElement} from './ReactBaseElement'\nimport {PartialEntry} from './PartialEntry'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\n\n// What is this silliness? Is it react or a web component?!\n// It's a web component we use to bootstrap react partials within the monolith.\n@controller\nclass ReactPartialElement extends ReactBaseElement<EmbeddedPartialData> {\n  nameAttribute = 'partial-name'\n\n  async getReactNode(embeddedData: EmbeddedPartialData) {\n    const {Component} = await getReactPartial(this.name)\n\n    // Some React Partials will be wrapped in a react-partial-anchor, which is used to conditionally render the Partial\n    const anchorElement = this.closest<ReactPartialAnchorElement>('react-partial-anchor')\n\n    return (\n      <PartialEntry\n        partialName={this.name}\n        embeddedData={embeddedData}\n        Component={Component}\n        wasServerRendered={this.hasSSRContent}\n        ssrError={this.ssrError}\n        anchorElement={anchorElement}\n      />\n    )\n  }\n}\n","import {partialRegistry, type PartialRegistration} from './react-partial-registry'\n// Import the web component to get it registered on the window\nimport './ReactPartialElement'\n\n// NOTE: if the signature of this method changes, also update the react-partial-name ESLint rule\n// /workspaces/github/ui/packages/eslint-plugin-github-monorepo/rules/react-partial-name.js\nexport function registerReactPartial(name: string, registration: PartialRegistration) {\n  partialRegistry.register(name, registration)\n}\n","import safeStorage from '@github-ui/safe-storage'\n\nconst {getItem, setItem, removeItem} = safeStorage('localStorage')\nconst REACT_PROFILING_ENABLED = 'REACT_PROFILING_ENABLED'\n\ninterface ReactProfilingModeMethods {\n  enable: () => void\n  disable: () => void\n  isEnabled: () => boolean\n}\n\nconst ReactProfilingMode: ReactProfilingModeMethods = {\n  enable: () => setItem(REACT_PROFILING_ENABLED, 'true'),\n  disable: () => removeItem(REACT_PROFILING_ENABLED),\n  isEnabled: () => !!getItem(REACT_PROFILING_ENABLED),\n}\n\nexport default ReactProfilingMode\n","export interface TestIdProps {\n  /** Test ID to be queried by automated testing suites */\n  'data-testid'?: string\n}\n\nexport const testIdProps = (value: string): TestIdProps => {\n  return {'data-testid': value}\n}\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  assertRelativePathOrSameOrigin(path)\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\nfunction assertRelativePathOrSameOrigin(path: string) {\n  if (process.env.NODE_ENV === 'test' && !window.location.origin) return\n  const url = new URL(path, window.location.origin)\n  if (url.origin !== window.location.origin) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetch(path, {...init, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetchJSON(path, {...init, headers})\n}\n","import {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {\n  // eslint-disable-next-line no-restricted-imports\n  Avatar,\n  type AvatarProps,\n} from '@primer/react'\nimport {forwardRef, useMemo} from 'react'\n\nexport type GitHubAvatarProps = AvatarProps\n\nexport const GitHubAvatar = forwardRef<HTMLImageElement, GitHubAvatarProps>(function GitHubAvatar(\n  {src, size = 20, ...otherProps}: GitHubAvatarProps,\n  ref,\n) {\n  const avatarUrl = useMemo(() => {\n    // src maybe be relative, e.g. `/mona.png`, in which case the instances main origin should be used,\n    // e.g. \"https://github.com\" for dotcom. If src is a fully quallified URL then the origin argument is ignored.\n    const url = new URL(src, ssrSafeLocation.origin)\n\n    // do not override size if it's already set as query parameter\n    if (!url.searchParams.has('size') && !url.searchParams.has('s')) {\n      // we double size for better rendering on high density pixel screens\n      url.searchParams.set('size', String(Number(size) * 2))\n    }\n\n    return url.toString()\n  }, [src, size])\n\n  return <Avatar ref={ref} src={avatarUrl} size={size} data-testid=\"github-avatar\" {...otherProps} />\n})\n\ntry{ GitHubAvatar.displayName ||= 'GitHubAvatar' } catch {}","import {useState} from 'react'\nimport type {BrowserHistory, MemoryHistory} from '@remix-run/router'\nimport {Router} from 'react-router-dom'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\ntype Props = {\n  children: React.ReactNode\n  history: BrowserHistory | MemoryHistory\n}\n\nexport function PartialRouter({children, history}: Props) {\n  const [state, setState] = useState({\n    location: history.location,\n  })\n\n  useHydratedEffect(() => history.listen(setState), [history])\n\n  return (\n    <Router location={state.location} navigator={history}>\n      {children}\n    </Router>\n  )\n}\n\ntry{ PartialRouter.displayName ||= 'PartialRouter' } catch {}","// Think of this as the entry point into the framework\nimport React from 'react'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {BaseProviders} from './BaseProviders'\nimport type {BrowserHistory} from '@remix-run/router'\nimport {createMemoryHistory} from '@remix-run/router'\nimport {AppContextProvider} from './AppContextProvider'\nimport {PartialRouter} from './PartialRouter'\nimport {CommonElements} from './CommonElements'\nimport {createBrowserHistory} from './create-browser-history'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {usePartialAnchorProps} from './react-partial-anchor'\n\ninterface Props {\n  partialName: string\n  embeddedData: EmbeddedPartialData\n  Component: React.ComponentType\n  wasServerRendered: boolean\n  ssrError?: HTMLScriptElement\n  anchorElement?: ReactPartialAnchorElement | null\n}\n\nexport function PartialEntry({\n  partialName,\n  embeddedData,\n  Component,\n  wasServerRendered,\n  ssrError,\n  anchorElement,\n}: Props) {\n  // Create a ref to track the browser history:\n  const historyRef = React.useRef<BrowserHistory>()\n  const window = globalThis.window as Window | undefined\n\n  // For linking to work, we can just pass a dummy pathname here. We may consider plumbing the actual path in\n  if (!historyRef.current) {\n    historyRef.current = !window\n      ? createMemoryHistory({initialEntries: [{pathname: '/'}]})\n      : createBrowserHistory({window})\n  }\n  const history = historyRef.current\n  const partialAnchorProps = usePartialAnchorProps(anchorElement)\n\n  // Wrap the partial in an AppContextProvider and static Router so that react-core links\n  // will be functional.\n  return (\n    <BaseProviders appName={partialName} wasServerRendered={wasServerRendered}>\n      <AppContextProvider history={history} routes={[]}>\n        <PartialRouter history={history}>\n          <Component {...embeddedData.props} {...(partialAnchorProps as object)} />\n          <CommonElements ssrError={ssrError} />\n        </PartialRouter>\n      </AppContextProvider>\n    </BaseProviders>\n  )\n}\n\ntry{ PartialEntry.displayName ||= 'PartialEntry' } catch {}","import {target} from '@github/catalyst'\nimport {createRoot, hydrateRoot} from 'react-dom/client'\nimport type {createRoot as createRootType, hydrateRoot as hydrateRootType, Root} from 'react-dom/client'\nimport React from 'react'\nimport ReactProfilingMode from '@github-ui/react-profiling-mode'\nimport {EXPECTED_ERRORS} from './expected-errors'\nimport {sendStats} from '@github-ui/stats'\n\ntype ReactDOM = {\n  createRoot: typeof createRootType\n  hydrateRoot: typeof hydrateRootType\n}\n\nconst REACT_INVARIANT_ERROR_REGEX = /Minified React error #(?<invariant>\\d+)/\n\nexport abstract class ReactBaseElement<T> extends HTMLElement {\n  @target embeddedData: HTMLScriptElement | undefined\n  @target ssrError: HTMLScriptElement | undefined\n  @target reactRoot: HTMLElement | undefined\n  private root: Root | undefined\n\n  abstract nameAttribute: string\n  abstract getReactNode(embeddedData: T): Promise<React.ReactNode>\n\n  protected get name() {\n    return this.getAttribute(this.nameAttribute) as string\n  }\n\n  private get embeddedDataText() {\n    const text = this.embeddedData?.textContent\n\n    if (!text) {\n      throw new Error(`No embedded data provided for react element ${this.name}`)\n    }\n\n    return text\n  }\n\n  get hasSSRContent() {\n    return this.getAttribute('data-ssr') === 'true'\n  }\n\n  connectedCallback() {\n    this.renderReact()\n  }\n\n  disconnectedCallback() {\n    this.root?.unmount()\n    this.root = undefined\n  }\n\n  private async renderReact() {\n    if (!this.reactRoot) throw new Error('No react root provided')\n    let reactDom: ReactDOM = {\n      createRoot,\n      hydrateRoot,\n    }\n\n    // Override the react-dom import if we're in profiling mode\n    if (ReactProfilingMode.isEnabled()) {\n      reactDom = await this.getReactDomWithProfiling()\n    }\n\n    const embeddedData = JSON.parse(this.embeddedDataText) as T\n    const ssrErrorText = this.ssrError?.textContent\n    const node = await this.getReactNode(embeddedData)\n    const baseNode = <React.StrictMode>{node}</React.StrictMode>\n\n    if (ssrErrorText) {\n      this.logSSRError(ssrErrorText)\n    }\n\n    if (this.hasSSRContent) {\n      /**\n       * Styled-components automatically looks for style tags to hydrate on first page load, but will not detect them\n       * if they are added after the initial page load. This causes a hydration error because React isn't expecting\n       * a style tag within the app. To work around this, we need to manually move the style tags to the head before\n       * hydrating the app.\n       *\n       * During hydration, styled-components will create a new style tag which matches the one we moved to the head.\n       * This means that after hydration, we can safely remove the style tag we manually moved to the head.\n       */\n      const styles = this.querySelector('style[data-styled=\"true\"]')\n      if (styles) document.head.appendChild(styles)\n\n      // Hydrate the react app\n      // onRecoverableError is disabled until we have a react version with this fix in:\n      // https://github.com/facebook/react/pull/25692\n      this.root = reactDom.hydrateRoot(this.reactRoot, baseNode, {\n        onRecoverableError: error => {\n          if (!(error instanceof Error)) return\n\n          const match = REACT_INVARIANT_ERROR_REGEX.exec(error.message)\n          const invariant = String(match?.groups?.invariant)\n\n          sendStats({\n            incrementKey: 'REACT_HYDRATION_ERROR',\n            incrementTags: {\n              appName: this.name,\n              invariant,\n            },\n          })\n        },\n      })\n\n      // Remove the manually moved style tag after hydration\n      if (styles) {\n        // Wait until things are idle to remove the style tag. If we do it immediately, we can cause a flash of unstyled content.\n        requestIdleCallback(() => {\n          // styles could have already been removed by Turbo if a navigation happens quickly. Only remove it from the DOM if it's still there.\n          styles.parentElement?.removeChild(styles)\n        })\n      }\n    } else {\n      this.root = reactDom.createRoot(this.reactRoot)\n      this.root.render(baseNode)\n    }\n\n    this.classList.add('loaded')\n  }\n\n  private getReactDomWithProfiling() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return import('react-dom/profiling') as any as Promise<ReactDOM>\n  }\n\n  private logSSRError(ssrErrorText: string) {\n    if (EXPECTED_ERRORS[ssrErrorText]) {\n      // eslint-disable-next-line no-console\n      return console.error('SSR failed with an expected error:', EXPECTED_ERRORS[ssrErrorText])\n    }\n\n    try {\n      const error = JSON.parse(ssrErrorText) as PlatformJavascriptError\n      const stacktrace = parseFailbotStacktrace(error)\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', `${error.type}: ${error.value}\\n`, error, stacktrace)\n    } catch {\n      /**\n       * In the event we couldn't log the error, we should not break the application\n       */\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', ssrErrorText, 'unable to parse as json')\n    }\n  }\n}\n\nfunction parseFailbotStacktrace(error: PlatformJavascriptError) {\n  if (!error.stacktrace) return ''\n  let prefix = '\\n '\n  const stack = error.stacktrace.map((frame: PlatformStackframe) => {\n    const {function: func, filename, lineno, colno} = frame\n    const line = `${prefix} at ${func} (${filename}:${lineno}:${colno})`\n    prefix = ' '\n    return line\n  })\n  return stack.join('\\n')\n}\n\ntry{ REACT_INVARIANT_ERROR_REGEX.displayName ||= 'REACT_INVARIANT_ERROR_REGEX' } catch {}","export interface SponsorshipData {\n  // properties for all users\n  id: string\n  active: boolean\n  pendingChange?: string // pending downgrades, upgrades, or cancellations\n  sponsorableLogin: string\n  sponsorableIsOrg: boolean // for square or circle avatar\n  sponsorableAvatarUrl: string\n  startDate: string\n  viewerIsSponsor?: boolean\n\n  // org member & org admin properties\n  privacyLevel?: string\n\n  // org admin properties\n  amount?: string\n  patreonLink?: string // existence of this means it's a patreon sponsorship\n  subscribableId?: number // only manage sponsorships\n  subscribedToNewsletterUpdates?: boolean\n\n  // invoiced org property\n  endDate?: string\n}\n\nexport enum TabStates {\n  ACTIVE_SPONSORSHIPS,\n  PAST_SPONSORSHIPS,\n}\n\nexport enum PrivacyLevel {\n  PRIVATE = 'private',\n  PUBLIC = 'public',\n}\n\nexport enum EmailOptInValues {\n  OPT_IN = 'on',\n  OPT_OUT = 'off',\n}\n","import {GitHubAvatar} from '@github-ui/github-avatar'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {EyeClosedIcon, EyeIcon, HeartFillIcon, HeartIcon} from '@primer/octicons-react'\nimport {ActionList, ActionMenu, Box, Button, Link, Octicon, Text, Token} from '@primer/react'\nimport type {Column} from '@primer/react/drafts'\nimport {PrivacyLevel, type SponsorshipData} from './your-sponsorships-types'\nimport type {SponsorshipUpdate} from './update-sponsorship'\n\nexport const SponsorableColumn: Column<SponsorshipData> = {\n  header: 'Name',\n  field: 'sponsorableLogin',\n  width: 'grow',\n  renderCell: (row: SponsorshipData) => {\n    return (\n      <>\n        <Link href={`/sponsors/${row.sponsorableLogin}`}>\n          <Box sx={{display: 'flex', alignItems: 'center'}}>\n            <GitHubAvatar src={row.sponsorableAvatarUrl} square={row.sponsorableIsOrg} size={26} />\n            <Text sx={{ml: 2, fontSize: '1.2em'}}>{`@${row.sponsorableLogin}`}</Text>\n          </Box>\n        </Link>\n        {row.pendingChange && <Token sx={{ml: 2}} text={row.pendingChange} />}\n      </>\n    )\n  },\n}\n\nexport const VisibilityColumn: Column<SponsorshipData> = {\n  header: 'Visibility',\n  field: 'privacyLevel',\n  width: 'auto',\n  renderCell: row => {\n    return (\n      <Box sx={{textTransform: 'capitalize'}}>\n        {row.privacyLevel === PrivacyLevel.PUBLIC ? (\n          <Octicon icon={EyeIcon} sx={{mr: 1}} className={'color-fg-muted'} />\n        ) : (\n          <Octicon icon={EyeClosedIcon} sx={{mr: 1}} className={'color-fg-muted'} />\n        )}\n        {row.privacyLevel}\n      </Box>\n    )\n  },\n}\n\nexport const StartDateColumn: Column<SponsorshipData> = {\n  header: 'Start date',\n  field: 'startDate',\n  width: 'auto',\n}\n\nexport const AmountColumn: Column<SponsorshipData> = {\n  header: 'Amount',\n  field: 'amount',\n  width: 'auto',\n}\n\nexport const ManageButtonColumn = (\n  sponsorLogin: string,\n  updateSponsorship: (sponsorshipUpate: SponsorshipUpdate) => void,\n): Column<SponsorshipData> => {\n  return {\n    header: () => <span className=\"sr-only\">Actions</span>,\n    field: 'id',\n    width: 'auto',\n    renderCell: (row: SponsorshipData) => {\n      // If the user has cancelled a sponsorship and has a pendingChange, the only way to undo that change is via the manageLink.\n      // So manageLink will send the user to the main sponsorship management page if there's a pendingChange or if the sponsorship is not active.\n      // Otherwise, manageLink will send the user to the specific tier management page\n      let manageLink = `/sponsors/${row.sponsorableLogin}?sponsor=${sponsorLogin}`\n      if (!row.pendingChange && row.active) {\n        manageLink = `/sponsors/${row.sponsorableLogin}/sponsorships?sponsor=${sponsorLogin}&tier_id=${row.subscribableId}`\n      }\n      const oppositePrivacyLevel = row.privacyLevel === PrivacyLevel.PUBLIC ? PrivacyLevel.PRIVATE : PrivacyLevel.PUBLIC\n      const subscribed = row.subscribedToNewsletterUpdates === undefined ? false : row.subscribedToNewsletterUpdates\n\n      return (\n        <ActionMenu>\n          <ActionMenu.Button size=\"small\" {...testIdProps('manage-button')}>\n            Manage\n          </ActionMenu.Button>\n          <ActionMenu.Overlay width=\"medium\">\n            <ActionList>\n              {row.active ? (\n                <>\n                  <ActionList.LinkItem\n                    href={row.patreonLink || manageLink}\n                    {...testIdProps('manage-sponsorship-button')}\n                  >\n                    Manage Sponsorship\n                  </ActionList.LinkItem>\n                  <ActionList.Divider />\n                  <ActionList.Item\n                    onSelect={() => {\n                      updateSponsorship({\n                        sponsorableLogin: row.sponsorableLogin,\n                        privacyLevel: oppositePrivacyLevel,\n                        subscribedToNewsletterUpdates: subscribed,\n                      })\n                    }}\n                    {...testIdProps('privacy-button')}\n                  >\n                    {row.privacyLevel === PrivacyLevel.PUBLIC ? 'Make Private' : 'Make Public'}\n                  </ActionList.Item>\n                  <ActionList.Item\n                    onSelect={() => {\n                      updateSponsorship({\n                        sponsorableLogin: row.sponsorableLogin,\n                        privacyLevel: row.privacyLevel || PrivacyLevel.PRIVATE,\n                        subscribedToNewsletterUpdates: !row.subscribedToNewsletterUpdates,\n                      })\n                    }}\n                    {...testIdProps('subscribe-button')}\n                  >\n                    {row.subscribedToNewsletterUpdates ? 'Unsubscribe from emails' : 'Subscribe to email updates'}\n                  </ActionList.Item>\n                </>\n              ) : (\n                <>\n                  <ActionList.LinkItem\n                    href={row.patreonLink || manageLink}\n                    {...testIdProps('manage-past-sponsorship-button')}\n                  >\n                    Re-sponsor\n                  </ActionList.LinkItem>\n                  <ActionList.Divider />\n                  <ActionList.Item\n                    onSelect={() => {\n                      updateSponsorship({\n                        sponsorableLogin: row.sponsorableLogin,\n                        privacyLevel: oppositePrivacyLevel,\n                      })\n                    }}\n                    {...testIdProps('privacy-button-past')}\n                  >\n                    {row.privacyLevel === PrivacyLevel.PUBLIC ? 'Make Private' : 'Make Public'}\n                  </ActionList.Item>\n                </>\n              )}\n            </ActionList>\n          </ActionMenu.Overlay>\n        </ActionMenu>\n      )\n    },\n  }\n}\n\nexport const SponsorButtonColumn: Column<SponsorshipData> = {\n  header: () => <span className=\"sr-only\">Actions</span>,\n  field: 'id',\n  width: 'auto',\n  renderCell: (row: SponsorshipData) => {\n    const link = `/sponsors/${row.sponsorableLogin}`\n    return (\n      <Button\n        as=\"a\"\n        size=\"small\"\n        href={link}\n        leadingVisual={row.viewerIsSponsor ? HeartFillIcon : HeartIcon}\n        sx={{\n          '.octicon-heart, .octicon-heart-fill': {\n            color: 'sponsors.fg',\n          },\n          ':hover .octicon-heart, :hover .octicon-heart-fill': {\n            transform: 'scale(1.1)',\n          },\n          width: '100%',\n        }}\n        {...testIdProps('sponsor-button')}\n      >\n        {row.viewerIsSponsor ? 'Sponsoring' : 'Sponsor'}\n      </Button>\n    )\n  },\n}\n\ntry{ ManageButtonColumn.displayName ||= 'ManageButtonColumn' } catch {}","import {useRef, useState} from 'react'\nimport {Box, Button, Dialog, Link, Spinner, Text} from '@primer/react'\nimport {MoveToBottomIcon} from '@primer/octicons-react'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {TabStates} from './your-sponsorships-types'\n\ninterface ExportSponsorshipProps {\n  sponsorLogin: string\n  viewerPrimaryEmail?: string\n  currentTab: TabStates\n  setFlash: (props: {variant: 'success' | 'danger'; message: string}) => void\n}\n\nexport const ExportSponsorships = ({\n  sponsorLogin,\n  viewerPrimaryEmail,\n  currentTab,\n  setFlash,\n}: ExportSponsorshipProps) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const returnFocusRef = useRef(null)\n\n  const onClick = async () => {\n    setIsLoading(true)\n    const resp = await verifiedFetchJSON(`/orgs/${sponsorLogin}/sponsoring/sponsorships_exports`, {\n      method: 'POST',\n      body: {active: currentTab === TabStates.ACTIVE_SPONSORSHIPS},\n    })\n\n    if (!resp.ok) {\n      setIsLoading(false)\n      setIsOpen(false)\n      setFlash({variant: 'danger', message: 'There was a problem exporting your sponsorships.'})\n      return\n    }\n\n    const jsonResp = await resp.json()\n    setIsLoading(false)\n    setIsOpen(false)\n    setFlash({variant: 'success', message: jsonResp.msg})\n  }\n\n  return (\n    <>\n      <Button\n        ref={returnFocusRef}\n        leadingVisual={MoveToBottomIcon}\n        onClick={() => {\n          setIsOpen(true)\n        }}\n        {...testIdProps('your-sponsorships-export-button')}\n      >\n        Export as CSV\n      </Button>\n      <Dialog\n        returnFocusRef={returnFocusRef}\n        title=\"Export sponsorships\"\n        isOpen={isOpen}\n        onDismiss={() => {\n          setIsOpen(false)\n        }}\n      >\n        <div>\n          <Dialog.Header id=\"header\">Export sponsorships</Dialog.Header>\n          <Box sx={{p: 3}}>\n            <span>\n              We&apos;ll start the export process and email you at{' '}\n              <Text sx={{fontWeight: 'bold'}}>{viewerPrimaryEmail}</Text> with the export attached when it&apos;s done.\n              Update your{' '}\n              <Link inline={true} href=\"/settings/emails\">\n                contact email settings\n              </Link>{' '}\n              to change where the file is sent.\n            </span>\n            <Button\n              sx={{mt: 2}}\n              block={true}\n              variant=\"primary\"\n              onClick={onClick}\n              {...testIdProps('your-sponsorships-start-export-button')}\n            >\n              {isLoading ? <Spinner size=\"small\" /> : 'Start export'}\n            </Button>\n          </Box>\n        </div>\n      </Dialog>\n    </>\n  )\n}\n\ntry{ ExportSponsorships.displayName ||= 'ExportSponsorships' } catch {}","import {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport type {SponsorshipData} from './your-sponsorships-types'\nimport {EmailOptInValues} from './your-sponsorships-types'\n\nexport interface SponsorshipUpdate {\n  sponsorableLogin: string\n  privacyLevel: string\n  subscribedToNewsletterUpdates?: boolean\n}\n\ninterface SponsorshipUpdateBody {\n  sponsor: string\n  privacy_level: string\n  email_opt_in?: EmailOptInValues\n}\n\ninterface UpdateSponsorship {\n  sponsorLogin: string\n  sponsorshipUpdate: SponsorshipUpdate\n  sponsorships: SponsorshipData[]\n  setSponsorships: (sponsorships: SponsorshipData[]) => void\n  setFlash: (flash: {variant: 'success' | 'danger'; message: string}) => void\n}\n\nexport const updateSponsorship = async ({\n  sponsorLogin,\n  sponsorshipUpdate,\n  sponsorships,\n  setSponsorships,\n  setFlash,\n}: UpdateSponsorship) => {\n  let body: SponsorshipUpdateBody\n  if (sponsorshipUpdate.subscribedToNewsletterUpdates === undefined) {\n    body = {\n      sponsor: sponsorLogin,\n      privacy_level: sponsorshipUpdate.privacyLevel,\n    }\n  } else {\n    body = {\n      sponsor: sponsorLogin,\n      privacy_level: sponsorshipUpdate.privacyLevel,\n      email_opt_in: sponsorshipUpdate.subscribedToNewsletterUpdates\n        ? EmailOptInValues.OPT_IN\n        : EmailOptInValues.OPT_OUT,\n    }\n  }\n\n  const res = await verifiedFetchJSON(`/sponsors/${sponsorshipUpdate.sponsorableLogin}/sponsorships`, {\n    method: 'PUT',\n    body,\n  })\n\n  if (res.ok) {\n    const updatedSponsorships = sponsorships.map(sponsorship =>\n      sponsorship.sponsorableLogin === sponsorshipUpdate.sponsorableLogin\n        ? {\n            ...sponsorship,\n            ...{\n              privacyLevel: sponsorshipUpdate.privacyLevel,\n              subscribedToNewsletterUpdates: sponsorshipUpdate.subscribedToNewsletterUpdates,\n            },\n          }\n        : sponsorship,\n    )\n    setSponsorships(updatedSponsorships)\n    setFlash({variant: 'success', message: `Sponsorship to @${sponsorshipUpdate.sponsorableLogin} updated`})\n  } else {\n    setFlash({variant: 'danger', message: 'There was a problem updating your sponsorship'})\n  }\n}\n","import {useCallback, useMemo, useState} from 'react'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {Flash, Pagehead, Text, TextInput, UnderlineNav} from '@primer/react'\nimport {Blankslate, Table} from '@primer/react/drafts'\nimport {DataTable} from '@primer/react/experimental'\nimport {HeartIcon, SearchIcon} from '@primer/octicons-react'\nimport {\n  AmountColumn,\n  ManageButtonColumn,\n  SponsorableColumn,\n  SponsorButtonColumn,\n  StartDateColumn,\n  VisibilityColumn,\n} from './Columns'\nimport {ExportSponsorships} from './ExportSponsorships'\nimport {TabStates, type SponsorshipData} from './your-sponsorships-types'\nimport {updateSponsorship, type SponsorshipUpdate} from './update-sponsorship'\n\nexport interface YourSponsorshipsProps {\n  sponsorLogin: string\n  viewerPrimaryEmail?: string\n  viewerIsOrgMember: boolean\n  viewerCanManageSponsorships: boolean\n  sponsorships: SponsorshipData[]\n  pageSize?: number\n}\n\nexport interface FilterableSponsorshipData extends SponsorshipData {\n  normalizedSponsorableLogin: string\n}\n\nconst PAGE_SIZE = 10\n\nconst pluralizedSponsorship = (count: number) => (count === 1 ? 'sponsorship' : 'sponsorships')\n\nexport function YourSponsorships({\n  sponsorLogin,\n  viewerPrimaryEmail,\n  sponsorships: initialSponsorships,\n  viewerIsOrgMember,\n  viewerCanManageSponsorships,\n  pageSize = PAGE_SIZE,\n}: YourSponsorshipsProps) {\n  const [currentPaginatedPage, setCurrentPaginatedPage] = useState(0)\n  const [sponsorships, setSponsorships] = useState(initialSponsorships)\n  const [currentTab, setCurrentTab] = useState<TabStates>(TabStates.ACTIVE_SPONSORSHIPS)\n  const [sponsorFilter, setSponsorFilter] = useState<string>('')\n  const [flash, setFlash] = useState<{variant: 'success' | 'danger'; message: string}>()\n\n  const sponsorshipCounts = useMemo(() => {\n    return sponsorships.reduce(\n      (counts, sponsorship) => {\n        sponsorship.active ? counts.current++ : counts.past++\n        return counts\n      },\n      {current: 0, past: 0},\n    )\n  }, [sponsorships])\n\n  const filterableSponsorships = useMemo(() => {\n    return sponsorships.map(sponsorship => {\n      return {...sponsorship, normalizedSponsorableLogin: sponsorship.sponsorableLogin.toLowerCase()}\n    })\n  }, [sponsorships])\n\n  const currentTabSponsorships = useMemo(() => {\n    // support exhaustiveness checking for tab states\n    const ensureUnreachable = (state: never) => {\n      throw new Error(`Unhandled state: ${state}`)\n    }\n    return filterableSponsorships.filter(sponsorship => {\n      switch (currentTab) {\n        case TabStates.ACTIVE_SPONSORSHIPS:\n          return sponsorship.active\n        case TabStates.PAST_SPONSORSHIPS:\n          return !sponsorship.active\n        default:\n          ensureUnreachable(currentTab)\n      }\n    })\n  }, [filterableSponsorships, currentTab])\n\n  const filteredSponsorships = useMemo(() => {\n    if (!sponsorFilter) return currentTabSponsorships\n    const searchFilter = (sponsorship: FilterableSponsorshipData) => {\n      return sponsorship.normalizedSponsorableLogin.includes(sponsorFilter)\n    }\n    return currentTabSponsorships.filter(searchFilter)\n  }, [currentTabSponsorships, sponsorFilter])\n\n  const paginationStart = currentPaginatedPage * pageSize\n  const paginationEnd = paginationStart + pageSize\n\n  const paginatedSponsorships = useMemo(() => {\n    return filteredSponsorships.slice(paginationStart, paginationEnd)\n  }, [filteredSponsorships, paginationStart, paginationEnd])\n\n  const sponsorshipUpdater = useCallback(\n    async (sponsorshipUpdate: SponsorshipUpdate) => {\n      await updateSponsorship({sponsorLogin, sponsorshipUpdate, sponsorships, setSponsorships, setFlash})\n    },\n    [sponsorLogin, sponsorships],\n  )\n\n  const columns = useMemo(() => {\n    if (viewerCanManageSponsorships) {\n      return [\n        SponsorableColumn,\n        VisibilityColumn,\n        StartDateColumn,\n        AmountColumn,\n        ManageButtonColumn(sponsorLogin, sponsorshipUpdater),\n      ]\n    }\n    if (viewerIsOrgMember) {\n      return [SponsorableColumn, VisibilityColumn, StartDateColumn, SponsorButtonColumn]\n    }\n    return [SponsorableColumn, StartDateColumn, SponsorButtonColumn]\n  }, [viewerCanManageSponsorships, viewerIsOrgMember, sponsorLogin, sponsorshipUpdater])\n\n  return (\n    <>\n      {flash && (\n        <Flash variant={flash.variant} {...testIdProps('your-sponsorships-flash')}>\n          {flash.message}\n        </Flash>\n      )}\n      <Pagehead\n        as=\"h2\"\n        id=\"your-sponsorships-heading\"\n        sx={{mt: 0, mb: 2, py: 2}}\n        {...testIdProps('your-sponsorships-header')}\n      >\n        {sponsorLogin}&apos;s sponsorships\n      </Pagehead>\n      <div className=\"mb-2\">\n        <span id=\"your-sponsorships-description\" {...testIdProps('your-sponsorships-description')}>\n          <Text sx={{fontWeight: 'bold'}}>{sponsorLogin}</Text> has{' '}\n          <Text sx={{fontWeight: 'bold'}}>{sponsorshipCounts.current}</Text> current{' '}\n          {pluralizedSponsorship(sponsorshipCounts.current)} and{' '}\n          <Text sx={{fontWeight: 'bold'}}>{sponsorshipCounts.past}</Text> past{' '}\n          {pluralizedSponsorship(sponsorshipCounts.past)}\n        </span>\n      </div>\n\n      <UnderlineNav aria-label=\"Current or past sponsorships navigation\" sx={{marginBottom: 4, paddingLeft: 0}}>\n        <UnderlineNav.Item\n          key={TabStates.ACTIVE_SPONSORSHIPS}\n          aria-current={currentTab === TabStates.ACTIVE_SPONSORSHIPS ? 'page' : undefined}\n          onSelect={() => setCurrentTab(TabStates.ACTIVE_SPONSORSHIPS)}\n        >\n          Current Sponsorships\n        </UnderlineNav.Item>\n        <UnderlineNav.Item\n          key={TabStates.PAST_SPONSORSHIPS}\n          aria-current={currentTab === TabStates.PAST_SPONSORSHIPS ? 'page' : undefined}\n          onSelect={() => setCurrentTab(TabStates.PAST_SPONSORSHIPS)}\n        >\n          Past Sponsorships\n        </UnderlineNav.Item>\n      </UnderlineNav>\n\n      {currentTabSponsorships.length === 0 ? (\n        <div {...testIdProps('your-sponsorships-empty-state')}>\n          <Blankslate>\n            <Blankslate.Heading>No sponsorships</Blankslate.Heading>\n            <Blankslate.Description>No sponsorships to display.</Blankslate.Description>\n            <Blankslate.PrimaryAction href=\"/sponsors/explore\">Explore your dependencies</Blankslate.PrimaryAction>\n          </Blankslate>\n        </div>\n      ) : (\n        <>\n          <div className=\"d-flex flex-nowrap mb-4\">\n            <TextInput\n              className=\"flex-1\"\n              leadingVisual={SearchIcon}\n              placeholder=\"Search users\"\n              onChange={e => setSponsorFilter(e.target.value.toLowerCase())}\n            />\n            {viewerCanManageSponsorships && (\n              <div className=\"ml-2\">\n                <ExportSponsorships\n                  sponsorLogin={sponsorLogin}\n                  viewerPrimaryEmail={viewerPrimaryEmail}\n                  currentTab={currentTab}\n                  setFlash={setFlash}\n                />\n              </div>\n            )}\n          </div>\n\n          {filteredSponsorships.length === 0 ? (\n            <div {...testIdProps('your-sponsorships-filter-empty-state')}>\n              <Blankslate>\n                <Blankslate.Visual>\n                  <HeartIcon size=\"medium\" />\n                </Blankslate.Visual>\n                <Blankslate.Heading>No sponsorships</Blankslate.Heading>\n                <Blankslate.Description>No sponsorships match the search.</Blankslate.Description>\n              </Blankslate>\n            </div>\n          ) : (\n            <div {...testIdProps('your-sponsorships-table')}>\n              <Table.Container>\n                <DataTable\n                  aria-labelledby=\"your-sponsorships-heading\"\n                  aria-describedby=\"your-sponsorships-description\"\n                  cellPadding=\"spacious\"\n                  data={paginatedSponsorships}\n                  columns={columns}\n                />\n                {filteredSponsorships.length > pageSize && (\n                  <Table.Pagination\n                    pageSize={pageSize}\n                    aria-label=\"Table pagination\"\n                    totalCount={filteredSponsorships.length}\n                    onChange={pageInfo => {\n                      setCurrentPaginatedPage(pageInfo.pageIndex)\n                    }}\n                  />\n                )}\n              </Table.Container>\n            </div>\n          )}\n        </>\n      )}\n    </>\n  )\n}\n\ntry{ YourSponsorships.displayName ||= 'YourSponsorships' } catch {}","import {registerReactPartial} from '@github-ui/react-core/register-partial'\nimport {YourSponsorships} from './YourSponsorships'\n\nregisterReactPartial('your-sponsorships', {\n  Component: YourSponsorships,\n})\n"],"names":["DeferredRegistry","register","name","registration","entry","registrationEntries","resolve","promise","Promise","getRegistration","Deferred","constructor","usePartialAnchorProps","anchorElement","useEffect","anchor","disabled","classList","remove","reactPartialAnchor","__wrapperElement","useExternalAnchor","ref","useRef","open","setOpen","useState","onClick","useCallback","current","setAttribute","toString","useOnAnchorClick","element","addEventListener","removeEventListener","partialRegistry","ReactPartialElement","ReactBaseElement","getReactNode","embeddedData","appName","Component","closest","PartialEntry","partialName","wasServerRendered","hasSSRContent","ssrError","nameAttribute","registerReactPartial","controller","getItem","setItem","removeItem","safeStorage","REACT_PROFILING_ENABLED","enable","disable","isEnabled","testIdProps","value","verifiedFetch","path","init","assertRelativePathOrSameOrigin","url","URL","window","location","origin","headers","fetch","verifiedFetchJSON","Accept","body","JSON","stringify","undefined","reactFetch","reactFetchJSON","GitHubAvatar","forwardRef","src","size","otherProps","avatarUrl","useMemo","ssrSafeLocation","searchParams","has","set","String","Number","Avatar","data-testid","displayName","PartialRouter","children","history","state","setState","useHydratedEffect","listen","Router","navigator","historyRef","React","globalThis","createBrowserHistory","createMemoryHistory","initialEntries","pathname","partialAnchorProps","BaseProviders","AppContextProvider","routes","props","CommonElements","REACT_INVARIANT_ERROR_REGEX","HTMLElement","getAttribute","embeddedDataText","text","textContent","connectedCallback","renderReact","disconnectedCallback","root","unmount","reactRoot","reactDom","createRoot","hydrateRoot","ReactProfilingMode","getReactDomWithProfiling","parse","ssrErrorText","node","baseNode","logSSRError","styles","querySelector","document","head","appendChild","onRecoverableError","error","Error","match","exec","message","invariant","groups","sendStats","incrementKey","incrementTags","requestIdleCallback","parentElement","removeChild","render","add","EXPECTED_ERRORS","console","stacktrace","parseFailbotStacktrace","prefix","stack","map","function","func","filename","lineno","colno","frame","line","join","type","target","TabStates","PrivacyLevel","EmailOptInValues","SponsorableColumn","header","field","width","renderCell","Link","href","row","sponsorableLogin","Box","sx","display","alignItems","sponsorableAvatarUrl","square","sponsorableIsOrg","Text","ml","fontSize","pendingChange","Token","VisibilityColumn","textTransform","privacyLevel","PUBLIC","Octicon","icon","EyeIcon","mr","className","EyeClosedIcon","StartDateColumn","AmountColumn","ManageButtonColumn","sponsorLogin","updateSponsorship","span","manageLink","active","subscribableId","oppositePrivacyLevel","PRIVATE","subscribed","subscribedToNewsletterUpdates","ActionMenu","Button","Overlay","ActionList","LinkItem","patreonLink","Divider","Item","onSelect","SponsorButtonColumn","link","as","leadingVisual","viewerIsSponsor","HeartFillIcon","HeartIcon","color","transform","ExportSponsorships","viewerPrimaryEmail","currentTab","setFlash","isOpen","setIsOpen","isLoading","setIsLoading","returnFocusRef","resp","method","ACTIVE_SPONSORSHIPS","ok","variant","jsonResp","json","msg","MoveToBottomIcon","Dialog","title","onDismiss","div","Header","id","p","fontWeight","inline","mt","block","Spinner","sponsorshipUpdate","sponsorships","setSponsorships","sponsor","privacy_level","email_opt_in","OPT_IN","OPT_OUT","res","sponsorship","pluralizedSponsorship","count","YourSponsorships","initialSponsorships","viewerIsOrgMember","viewerCanManageSponsorships","pageSize","currentPaginatedPage","setCurrentPaginatedPage","setCurrentTab","sponsorFilter","setSponsorFilter","flash","sponsorshipCounts","reduce","counts","past","filterableSponsorships","normalizedSponsorableLogin","toLowerCase","currentTabSponsorships","ensureUnreachable","filter","PAST_SPONSORSHIPS","filteredSponsorships","includes","paginationStart","paginationEnd","paginatedSponsorships","slice","sponsorshipUpdater","columns","Flash","Pagehead","mb","py","UnderlineNav","aria-label","marginBottom","paddingLeft","aria-current","length","Blankslate","Heading","Description","PrimaryAction","TextInput","SearchIcon","placeholder","onChange","e","Visual","Table","Container","DataTable","aria-labelledby","aria-describedby","cellPadding","data","Pagination","totalCount","pageInfo","pageIndex"],"sourceRoot":""}