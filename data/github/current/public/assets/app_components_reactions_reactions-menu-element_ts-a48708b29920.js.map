{"version":3,"file":"chunk-app_components_reactions_reactions-menu-element_ts-xxxxxxxxxxxx.js","mappings":"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","sources":["app/components/reactions/reactions-menu-element.ts"],"sourcesContent":["import {controller, target, targets} from '@github/catalyst'\n\n@controller\n/**\n * This class contains a subset of the ActionMenuElement created for the\n * Primer::Experimental::ActionMenuElement ViewComponent.\n *\n * It only contains the logic for the keyboard navigation, as the reactions\n * menu is currently used within a <details> element and doesn't need to manage\n * an overlay itself.\n */\nexport default class ReactionsMenuElement extends HTMLElement {\n  @targets menuItems: HTMLElement[]\n  @target details: HTMLDetailsElement\n  @target summary: HTMLElement\n\n  #firstMenuItem: HTMLElement\n  #lastMenuItem: HTMLElement\n  #abortController: AbortController\n\n  #addEventsToMenuItems(signal: AbortSignal) {\n    if (!this.menuItems) return\n\n    for (const menuItem of this.menuItems) {\n      menuItem.addEventListener('keydown', this.menuItemKeydown.bind(this), {signal})\n      menuItem.addEventListener('mouseover', this.menuItemMouseover.bind(this), {signal})\n\n      if (!this.#firstMenuItem) {\n        this.#firstMenuItem = menuItem\n      }\n      this.#lastMenuItem = menuItem\n    }\n  }\n\n  focusFirstItem() {\n    if (!this.details.open || !this.#firstMenuItem) return\n    this.#firstMenuItem.focus()\n  }\n\n  connectedCallback() {\n    this.#abortController = new AbortController()\n    this.#addEventsToMenuItems(this.#abortController.signal)\n  }\n\n  menuItemMouseover(event: MouseEvent) {\n    ;(event.currentTarget as HTMLButtonElement).focus()\n  }\n\n  setFocusToMenuItem(newMenuItem: HTMLElement | undefined) {\n    if (!this.menuItems) return\n    if (!newMenuItem) return\n\n    for (const item of this.menuItems) {\n      if (item === newMenuItem) {\n        item.tabIndex = 0\n        newMenuItem.focus()\n      } else {\n        item.tabIndex = -1\n      }\n    }\n  }\n\n  setFocusToPreviousMenuItem(currentMenuItem: HTMLElement) {\n    if (!this.menuItems) return\n\n    let newMenuItem = null\n    let index = null\n\n    if (currentMenuItem === this.#firstMenuItem) {\n      newMenuItem = this.#lastMenuItem\n    } else {\n      index = this.menuItems.indexOf(currentMenuItem)\n      newMenuItem = this.menuItems[index - 1]\n    }\n\n    this.setFocusToMenuItem(newMenuItem)\n\n    return newMenuItem\n  }\n\n  setFocusToNextMenuItem(currentMenuItem: HTMLElement) {\n    if (!this.menuItems) return\n\n    let newMenuItem = null\n    let index = null\n\n    if (currentMenuItem === this.#lastMenuItem) {\n      newMenuItem = this.#firstMenuItem\n    } else {\n      index = this.menuItems.indexOf(currentMenuItem)\n      newMenuItem = this.menuItems[index + 1]\n    }\n    this.setFocusToMenuItem(newMenuItem)\n\n    return newMenuItem\n  }\n\n  hide() {\n    this.details.open = false\n    this.summary.focus()\n  }\n\n  /**\n   * Fire a click event on the selected menu item.\n   * Note there's code in [reactions.ts](https://github.com/github/github/blob/951125a5f9b3276e1b28542e9b06ef55993958ae/app/assets/modules/github/behaviors/reactions.ts#L139-L141)\n   * that will close the reactions menu as part of this.\n   */\n  selectMenuItem(selectedItem: HTMLElement) {\n    selectedItem.click()\n  }\n\n  menuItemKeydown(event: KeyboardEvent) {\n    const currentTarget = event.currentTarget\n    // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n    const key = event.key\n    let flag = false\n\n    if (event.shiftKey) {\n      // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n      if (event.key === 'Tab') {\n        this.hide()\n        flag = true\n      }\n    } else {\n      switch (key) {\n        case 'Enter':\n          this.selectMenuItem(currentTarget as HTMLElement)\n          flag = true\n          break\n\n        case 'Esc':\n        case 'Escape':\n          this.hide()\n          flag = true\n          break\n\n        case 'Up':\n        case 'ArrowUp':\n        case 'Left':\n        case 'ArrowLeft':\n          this.setFocusToPreviousMenuItem(currentTarget as HTMLElement)\n          flag = true\n          break\n\n        case 'ArrowDown':\n        case 'Down':\n        case 'Right':\n        case 'ArrowRight':\n          this.setFocusToNextMenuItem(currentTarget as HTMLElement)\n          flag = true\n          break\n\n        case 'Home':\n        case 'PageUp':\n          this.setFocusToMenuItem(this.#firstMenuItem)\n          flag = true\n          break\n\n        case 'End':\n        case 'PageDown':\n          this.setFocusToMenuItem(this.#lastMenuItem)\n          flag = true\n          break\n\n        case 'Tab':\n          this.hide()\n          break\n\n        default:\n          break\n      }\n    }\n\n    if (flag) {\n      event.stopPropagation()\n      event.preventDefault()\n    }\n  }\n}\n"],"names":["ReactionsMenuElement","HTMLElement","focusFirstItem","details","open","firstMenuItem","focus","connectedCallback","abortController","AbortController","addEventsToMenuItems","signal","menuItemMouseover","event","currentTarget","setFocusToMenuItem","newMenuItem","menuItems","item","tabIndex","setFocusToPreviousMenuItem","currentMenuItem","index","lastMenuItem","indexOf","setFocusToNextMenuItem","hide","summary","selectMenuItem","selectedItem","click","menuItemKeydown","key","flag","shiftKey","stopPropagation","preventDefault","menuItem","addEventListener","bind","targets","target","controller"],"sourceRoot":""}