# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Marketplace::V0::PurchasePurchased`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Marketplace::V0::PurchasePurchased`.

class Hydro::Schemas::Github::Marketplace::V0::PurchasePurchased
  sig do
    params(
      account: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      marketplace_listing: T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::MarketplaceListing),
      marketplace_listing_plan: T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::MarketplaceListingBillingPlan),
      order_preview_email_notification_sent_at: T.nilable(Google::Protobuf::Timestamp),
      order_preview_viewed_at: T.nilable(Google::Protobuf::Timestamp),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext),
      subscription_item_id: T.nilable(Integer)
    ).void
  end
  def initialize(account: nil, actor: nil, marketplace_listing: nil, marketplace_listing_plan: nil, order_preview_email_notification_sent_at: nil, order_preview_viewed_at: nil, request_context: nil, subscription_item_id: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def account; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def account=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { void }
  def clear_account; end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_marketplace_listing; end

  sig { void }
  def clear_marketplace_listing_plan; end

  sig { void }
  def clear_order_preview_email_notification_sent_at; end

  sig { void }
  def clear_order_preview_viewed_at; end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_subscription_item_id; end

  sig { returns(T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::MarketplaceListing)) }
  def marketplace_listing; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::MarketplaceListing)).void }
  def marketplace_listing=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::MarketplaceListingBillingPlan)) }
  def marketplace_listing_plan; end

  sig do
    params(
      value: T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::MarketplaceListingBillingPlan)
    ).void
  end
  def marketplace_listing_plan=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def order_preview_email_notification_sent_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def order_preview_email_notification_sent_at=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def order_preview_viewed_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def order_preview_viewed_at=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(Integer) }
  def subscription_item_id; end

  sig { params(value: Integer).void }
  def subscription_item_id=(value); end
end
