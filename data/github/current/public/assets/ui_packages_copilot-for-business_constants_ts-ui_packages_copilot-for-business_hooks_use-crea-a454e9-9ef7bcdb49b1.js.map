{"version":3,"file":"chunk-ui_packages_copilot-for-business_constants_ts-ui_packages_copilot-for-business_hooks_use-crea-a454e9-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/copilot-for-business/constants.ts","ui/packages/copilot-for-business/helpers/id.ts","ui/packages/copilot-for-business/helpers/text.ts","ui/packages/copilot-for-business/hooks/use-create-csv.ts","ui/packages/copilot-for-business/standalone/hooks/use-tracked-value.ts","ui/packages/copilot-for-business/hooks/use-search-query.ts","ui/packages/copilot-for-business/types.ts","ui/packages/formatters/formatters.ts","ui/packages/use-tracking-ref/use-tracking-ref.ts","ui/packages/copilot-for-business/components/CopilotFlash.tsx","ui/packages/copilot-for-business/components/table/seat-checkbox-control/checkbox-control.module.css","ui/packages/copilot-for-business/components/table/seat-checkbox-control/SeatCheckboxControl.tsx","ui/packages/copilot-for-business/traditional/components/SeatAssignable.tsx","ui/packages/copilot-for-business/traditional/components/SeatHovercardLink.tsx","ui/packages/github-avatar/GitHubAvatar.tsx"],"sourcesContent":["export const COPILOT_BUSINESS_LICENSE_COST = 19\nexport const COPILOT_ENTERPRISE_LICENSE_COST = 39\nexport const PAGE_SIZE = 10\nexport const REDESIGN_PAGE_SIZE = 25\n","import type {SeatAssignable} from '../types'\nimport {SeatType} from '../types'\n\nexport const id = (assignable: SeatAssignable) => {\n  let idToUse\n  switch (assignable.type) {\n    case SeatType.Team:\n    case SeatType.User: {\n      idToUse = assignable.id\n      break\n    }\n    default: {\n      idToUse = assignable.display_login\n      break\n    }\n  }\n  return `${assignable.type}-${idToUse}`\n}\n","export function pluralize(count: number, text: string, suffix: string, showCount = true) {\n  if (count === 1) {\n    return showCount ? `${count} ${text}` : text\n  }\n\n  return showCount ? `${count} ${text}${suffix}` : `${text}${suffix}`\n}\n\nexport function capitalizeFirstLetter(string: string) {\n  return string.charAt(0).toUpperCase() + string.slice(1)\n}\n\nexport const formatDate = (billingDate: string) => {\n  const date = new Date(billingDate)\n  const day = date.getDate()\n  const month = date.toLocaleString('default', {month: 'long'})\n  const year = date.getFullYear()\n  return `${day} ${month} ${year}`\n}\n","import {verifiedFetch} from '@github-ui/verified-fetch'\nimport {useState} from 'react'\n\ntype UseCreateCSVConfigs = {\n  slug: string\n  endpoint: (config: Record<string, string>) => string\n  onSuccess?: () => void\n  onError?: () => void\n}\n\nexport function useCreateCSV(config: UseCreateCSVConfigs) {\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n\n  async function makeCSVRequest() {\n    setLoading(true)\n\n    const generateCSVPath = config.endpoint({slug: config.slug})\n\n    try {\n      const response = await verifiedFetch(generateCSVPath, {\n        method: 'POST',\n        headers: {Accept: 'text/csv'},\n      })\n\n      if (response.ok) {\n        const blob = await response.blob()\n        const a = document.createElement('a')\n        const href = URL.createObjectURL(blob)\n        const currentTime = Math.floor(new Date().getTime() / 1000)\n        a.href = href\n        a.download = `${config.slug}-seat-usage-${currentTime}.csv`\n        a.click()\n        a.remove()\n        URL.revokeObjectURL(href)\n        config.onSuccess?.()\n      } else {\n        const errMsg = `Failed to export CSV: ${response.statusText}`\n        setError(errMsg)\n        config.onError?.()\n        throw new Error(errMsg)\n      }\n    } catch (e) {\n      setError('Could not post. Try your request again.')\n      config.onError?.()\n    }\n\n    setLoading(false)\n  }\n\n  return {loading, error, makeCSVRequest}\n}\n","import {useTrackingRef} from '@github-ui/use-tracking-ref'\nimport {useState, useCallback} from 'react'\n\nexport function useTrackedValue<T>({initialValue}: {initialValue: T}) {\n  const [value, setValue] = useState<T>(initialValue)\n  const lastValue = useTrackingRef(value)\n\n  const updateValue = useCallback(\n    (nextValue: T) => {\n      lastValue.current = value\n      setValue(nextValue)\n    },\n    [lastValue, value],\n  )\n\n  return {\n    value,\n    lastValue,\n    updateValue,\n  }\n}\n","import {SeatType, type SortName} from '../types'\nimport {useDeferredValue, useCallback, useMemo} from 'react'\nimport {useTrackedValue} from '../standalone/hooks/use-tracked-value'\n\nfunction _getFilterParam(filter: SeatType): string {\n  switch (filter) {\n    case SeatType.All:\n    case SeatType.Organization:\n      return 'all'\n    case SeatType.User:\n      return 'users'\n    case SeatType.Team:\n      return 'teams'\n    case SeatType.OrganizationInvitation:\n      return 'organizationinvitations'\n    default:\n      return ''\n  }\n}\n\nfunction useFilterSeatType({initialFilter = SeatType.All}: {initialFilter: SeatType}) {\n  const {value, lastValue, updateValue} = useTrackedValue({initialValue: initialFilter})\n\n  const handleFilter = useCallback(\n    (filter: SeatType) => {\n      updateValue(filter)\n    },\n    [updateValue],\n  )\n\n  return {\n    filter: value,\n    lastValue,\n    handleFilter,\n    getFilterParam: _getFilterParam,\n  }\n}\n\nfunction useSearchQuery({initialQuery = ''}: {initialQuery?: string} = {initialQuery: ''}) {\n  const {value, lastValue, updateValue} = useTrackedValue({initialValue: initialQuery})\n  const deferredQuery = useDeferredValue(value)\n\n  const handleSearch = useCallback(\n    (q: string) => {\n      updateValue(q)\n    },\n    [updateValue],\n  )\n\n  return {\n    query: value,\n    deferredQuery,\n    lastValue,\n    handleSearch,\n  }\n}\n\nfunction usePagination({initialPage = 1}: {initialPage?: number} = {initialPage: 1}) {\n  const {value, lastValue, updateValue} = useTrackedValue({initialValue: initialPage})\n\n  const handleSetPage = useCallback(\n    (page: number) => {\n      updateValue(page)\n    },\n    [updateValue],\n  )\n\n  return {\n    currentPage: value,\n    lastValue,\n    handleSetPage,\n  }\n}\n\nfunction useSort({initialSort = 'name_asc'}: {initialSort: SortName} = {initialSort: 'name_asc'}) {\n  const {value, lastValue, updateValue} = useTrackedValue({initialValue: initialSort})\n\n  const updateSortDetails = useCallback(\n    (sort: SortName) => {\n      updateValue(sort)\n    },\n    [updateValue],\n  )\n\n  return {\n    sortDetails: value,\n    lastValue,\n    updateSortDetails,\n  }\n}\n\ntype Configs = {\n  initialPage?: number\n  initialSort?: SortName\n  initialQuery?: string\n  initialFilter?: SeatType\n}\n\nconst configDefaults = {\n  initialPage: 1,\n  initialSort: 'name_asc' as SortName,\n  initialQuery: '',\n  initialFilter: SeatType.All,\n}\n\nexport function usePaginatedSearchQuery(configs?: Configs) {\n  const memoizedConfigs = useMemo(() => ({...configDefaults, ...(configs ?? {})}), [configs])\n  const {initialPage, initialSort} = memoizedConfigs\n\n  const {currentPage, handleSetPage} = usePagination({initialPage})\n  const {query, deferredQuery, lastValue: lastQuery, handleSearch: originalHandleSearch} = useSearchQuery()\n  const {sortDetails, lastValue: lastSort, updateSortDetails} = useSort({initialSort})\n  const {filter, getFilterParam, handleFilter} = useFilterSeatType({initialFilter: SeatType.All})\n\n  const handleSearch = useCallback(\n    (q: string) => {\n      handleSetPage(1)\n      originalHandleSearch(q)\n    },\n    [handleSetPage, originalHandleSearch],\n  )\n\n  const queryHasChanged = () => query !== lastQuery.current || sortDetails !== lastSort.current\n\n  const makeQueryString = useCallback(() => {\n    return toQueryString({query: deferredQuery, currentPage, sortDetails})\n  }, [currentPage, sortDetails, deferredQuery])\n\n  return {\n    currentPage,\n    paginate: handleSetPage,\n    query,\n    deferredQuery,\n    handleSearch,\n    sortDetails,\n    updateSortDetails,\n    filter,\n    getFilterParam,\n    handleFilter,\n    makeQueryString,\n    queryHasChanged,\n  }\n}\n\nexport type QueryStringProps = {\n  query: string\n  currentPage: number\n  sortDetails: string\n}\n\nexport function toQueryString({query, currentPage, sortDetails}: QueryStringProps) {\n  const params = new URLSearchParams()\n  params.append('q', query)\n  params.append('page', currentPage.toString())\n  params.append('sort', sortDetails)\n\n  return params.toString()\n}\n","export enum CopilotForBusinessSeatPolicy {\n  Disabled = 'disabled',\n  EnabledForAll = 'enabled_for_all',\n  EnabledForSelected = 'enabled_for_selected',\n}\n\nexport enum SeatType {\n  OrganizationInvitation = 'OrganizationInvitation',\n  Team = 'Team',\n  User = 'User',\n  Organization = 'Organization',\n  All = 'All',\n  EnterpriseTeam = 'EnterpriseTeam',\n}\n\nexport type SeatBreakdown = {\n  seats_assigned: number\n  seats_billed: number\n  seats_pending: number\n  description: string\n}\n\nexport type CopilotForBusinessTrial = {\n  started: boolean\n  ended: boolean\n  has_trial: boolean\n  upgradable: boolean\n  cancelable: boolean\n  days_left: number\n  started_at: string\n  ends_at: string\n  trial_length: number\n  active: boolean\n  expired: boolean\n  pending: boolean\n  copilot_plan: string\n}\n\nexport type CopilotForBusinessPayload = {\n  policy: CopilotForBusinessSeatPolicy\n  public_code_suggestions_configured: boolean\n  seats: {\n    seats: CopilotSeatAssignment[]\n    count: number\n    pending_requests?: {\n      requesters: Requester[]\n      count: number\n    }\n    licenses: CopilotLicenseIdentifiers\n  }\n  organization: CopilotForBusinessOrganization\n  business?: CopilotForBusinessBusiness\n  seat_breakdown: SeatBreakdown\n  business_trial?: CopilotForBusinessTrial\n  render_trial_expired_banner: boolean\n  can_add_teams: boolean\n  members_count: number\n  can_allow_to_assign_seats_on_business: boolean\n  next_billing_date: string\n  plan_text: 'Business' | 'Enterprise'\n  featureRequestInfo: FeatureRequestInfo\n  render_pending_downgrade_banner: boolean\n  docsUrls: {\n    managing_policies: string\n  }\n}\n\nexport type CopilotLicenseIdentifiers = {\n  user_ids: number[]\n  team_ids: number[]\n  invite_user_ids: number[]\n  invite_emails: string[]\n}\n\nexport type CopilotForBusinessOrganization = {\n  name: string\n  id: number\n  billable: boolean\n  has_seat: boolean\n  add_seat_link: string | null\n}\n\nexport type CopilotForBusinessBusiness = {\n  name: string\n  slug: string\n}\n\nexport type CopilotForBusinessTeam = {\n  id?: number\n  login: string\n  slug: string\n  avatar_url: string\n  combined_slug: string\n  member_count: number\n  member_ids: number[]\n}\n\nexport type CopilotEnterpriseTeam = {\n  id: number\n  login: string\n  slug: string\n  mapping_id?: number // this points to the external group mapping id\n  member_count: number\n  member_ids: number[]\n}\n\nexport type CopilotSeatAssignable = {\n  id: number\n  login?: string\n  avatar_url?: string\n  display_name?: string\n  slug?: string\n  combined_slug?: string\n  member_count?: number\n  member_ids?: number[]\n  email?: string\n  invitee?: CopilotSeatAssignable\n  invitee_id?: number\n  mapping_id?: number\n}\n\nexport type CopilotSeatAssignment<\n  Type extends SeatType = SeatType,\n  Assignable extends CopilotSeatAssignable = CopilotSeatAssignable,\n> = {\n  assignable: Assignable\n  assignable_type: Type\n  id?: number | null\n  invitation_date?: string\n  invitation_expired?: boolean\n  last_activity_at?: string\n  pending_cancellation_date?: string | null\n}\n\nexport type EnterpriseTeamAssignmentStatus =\n  | 'pending_creation'\n  | 'pending_unassignment'\n  | 'pending_reassignment'\n  | 'pending_cancellation'\n  | 'stable'\nexport type EnterpriseTeamSeatAssignment = CopilotSeatAssignment<SeatType.EnterpriseTeam, CopilotEnterpriseTeam> & {\n  status?: EnterpriseTeamAssignmentStatus\n}\n\ntype SortType = 'pending_cancelled' | 'use' | 'name' | 'requested_at' | 'member_count'\ntype SortOrder = 'asc' | 'desc'\nexport type SortName = `${SortType}_${SortOrder}`\n\nexport type SortDetails = {\n  type: string\n  order: string\n}\n\nexport type SearchUser = {\n  avatar: string\n  display_login: string\n  profile_name: string\n  org_member: boolean\n  is_user: boolean\n}\n\nexport type SearchTeam = {\n  avatar: string\n  name: string\n  slug: string\n  members_count: number\n}\n\nexport type SearchUsersPayload = {\n  users: SearchUser[]\n}\n\nexport type SearchTeamsPayload = {\n  teams: SearchTeam[]\n}\nexport type CSVUser = {\n  id: number\n  email: string\n  display_login: string\n  profile_name: string\n  avatar: string\n  is_new_user: boolean\n}\n\nexport type CSVUploadPayload = {\n  // Number of users outside of the org\n  new_users: number\n  // Users retrieved from the DB via their display login\n  github_users: CSVUser[]\n  // Users retrieved from the DB via their email address\n  email_users: string[]\n  // The number of invalid user logins or emails\n  found_errors: string[]\n  // Total number of users\n  total_users: number\n}\n\nexport type AutocompleteItem = {text: string; id: string}\n\nexport type MenuItem = {\n  id: string\n  selected: boolean\n  title: string\n  description: string\n  value: string\n}\n\ntype CopilotForBusinessPolicy = {\n  manages: string\n  configurable: boolean\n  options: MenuItem[]\n  visible: boolean | null\n}\n\ntype BingGitHubChatPolicy = {\n  manages: string\n  configurable: boolean\n  enabled: boolean\n  options: MenuItem[]\n  visible: boolean | null\n}\n\ntype UserFeedbackPolicy = {\n  manages: string\n  configurable: boolean\n  visible: boolean | null\n  enabled: boolean\n}\n\ntype BetaFeaturesPolicy = {\n  manages: string\n  configurable: boolean\n  visible: boolean | null\n  enabled: boolean\n}\n\nexport type CopilotForBusinessPoliciesPayload = {\n  org_name: string\n  copilot_plan: string\n  editor_chat: CopilotForBusinessPolicy\n  mobile_chat: CopilotForBusinessPolicy\n  snippy: CopilotForBusinessPolicy\n  cli: CopilotForBusinessPolicy\n  copilot_for_dotcom: CopilotForBusinessPolicy\n  bing_github_chat: BingGitHubChatPolicy\n  copilot_user_feedback_opt_in: UserFeedbackPolicy\n  copilot_beta_features_opt_in: BetaFeaturesPolicy\n  copilot_extensions: CopilotForBusinessPolicy\n  private_telemetry: CopilotForBusinessPolicy\n  copilot_usage_metrics_policy: CopilotForBusinessPolicy\n  enterprise_name: string | null\n  enterprise_slug: string | null\n  docsUrls: {\n    generalPrivacyStatement: string\n  }\n}\n\nexport type DependentLicense = {\n  type: 'dependent'\n  name: string\n}\n\nexport type DirectLicense = {\n  type: 'direct'\n}\n\nexport type FeatureRequest = {\n  id: number\n  requested_at: string\n}\n\nexport type FeatureRequestInfo = {\n  showFeatureRequest: boolean\n  alreadyRequested: boolean\n  dismissed: boolean\n  featureName: string\n  requestPath: string\n  isEnterpriseRequest?: boolean\n  dismissedAt?: string\n  billingEntityId?: string\n  latestUsernameRequests: string[]\n  amountOfUserRequests: number\n}\n\nexport type Requester = {\n  id: number\n  display_login: string\n  profile_name: string | null\n  requested_at?: string\n}\n\nexport type UserAssignable = {\n  id: number\n  avatar_url: string\n  display_login: string\n  org_member: boolean\n  profile_name: string | null\n  type: SeatType.User\n  license?: DependentLicense | DirectLicense\n  feature_request?: FeatureRequest\n}\n\nexport type TeamAssignable = {\n  id: number\n  avatar_url: string\n  member_ids: number[]\n  name: string\n  slug: string\n  org_member: boolean\n  license?: DirectLicense\n  type: SeatType.Team\n}\n\nexport type InvitationAssignable = {\n  id?: number\n  avatar_url?: string\n  display_login: string\n  org_member: boolean\n  type: SeatType.OrganizationInvitation\n  license?: DirectLicense\n  profile_name?: string | null\n}\nexport type SeatAssignable = UserAssignable | TeamAssignable | InvitationAssignable\nexport type MemberAssignables = SeatAssignable[]\n\nexport type AssignablesResponse = {\n  assignables: MemberAssignables\n  total: number\n}\n\nexport type PlanText = 'Business' | 'Enterprise'\n\nexport type CheckboxTypes = SeatType.User | SeatType.Team | SeatType.OrganizationInvitation\n","import {getLocale} from '@github-ui/client-env'\n\nlet currencyCache: Record<string, Intl.NumberFormat> = {}\n\n/**\n * For when you need to form a number presented as a currency. This ensures that the correct\n * thousands seperator is applied, as well as being locale aware.\n *\n * @example\n * ```ts\n * expect(currency(1234.567)).toEqual('$1,234.57')\n * expect(currency(1234.567, {currency: 'EUR'})).toEqual('€1,234.57')\n * // given en-DE as the locale\n * expect(currency(1234.567)).toEqual('123,00 $')\n * ```\n */\nexport function currency(value: number, options?: {currency: string}) {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const currency = options?.currency ?? 'USD'\n  const formatter = (currencyCache[currency] ||= new Intl.NumberFormat(getLocale(), {currency, style: 'currency'}))\n  return formatter.format(value)\n}\n\nexport function number(value: number, options?: {precision: number}) {\n  return new Intl.NumberFormat(getLocale(), {maximumFractionDigits: options?.precision}).format(value)\n}\n\nconst SUFFIXES = ['k', 'm', 'b']\n/**\n * Formats a number into a human-readable string with optional precision, capping, and suffix.\n * @param value - The number to format.\n * @param options - An optional object containing formatting options.\n *    - precision - The number of decimal places to include in the formatted string. Defaults to 1.\n *    - capping - The maximum value to display before adding a capping symbol. Defaults to Infinity.\n *    - suffix - Whether to add a suffix indicating the magnitude of the number (e.g. \"k\" for thousands). Defaults to true.\n * @returns A human-readable string representing the formatted number.\n */\nexport function human(value: number, options?: {precision?: number; capping?: number; suffix?: boolean}) {\n  const {suffix = true, capping = Infinity, precision = 1} = options ?? {}\n\n  let suffixLabel = ''\n  let formattedValue = Math.min(capping, value)\n  if (suffix) {\n    const base = getNumberBase(formattedValue)\n    suffixLabel = SUFFIXES[base - 1] || ''\n    formattedValue = formattedValue / 1_000 ** base\n  }\n\n  const result = number(formattedValue, {precision}) + suffixLabel\n\n  if (value > capping) return `${result}+`\n\n  return result\n}\n\n/**\n * Calculates the significance-based precision for a given value.\n * If the value is less than or equal to 10,000, the precision is 1.\n * Otherwise the precision depends on the order of magnitude.\n *\n * @param value - The value for which to calculate the significance-based precision.\n * @returns The significance-based precision for the given value.\n */\nexport function getSignificanceBasedPrecision(value: number): number {\n  if (value <= 10_000) {\n    return 1\n  }\n\n  const base = getNumberBase(value)\n  if (value / 1_000 ** base >= 10) {\n    return 0\n  }\n\n  return 1\n}\n\n/**\n * Returns the base for formatting a number.\n *\n * @param value - The number to determine the base for.\n * @returns The base for formatting the number.\n */\nfunction getNumberBase(value: number): number {\n  const base = Math.floor(Math.log(Math.max(Math.abs(value), 1)) / Math.log(1_000))\n  // Limit the base by the number of available labels\n  return Math.min(SUFFIXES.length, base)\n}\n\n// --\n\n/**\n * @internal\n */\nexport function resetCache() {\n  currencyCache = {}\n}\n","import {useLayoutEffect} from '@github-ui/use-layout-effect'\nimport {useRef} from 'react'\n\nexport function useTrackingRef<T>(value: T): React.MutableRefObject<T> {\n  const ref = useRef(value)\n\n  useLayoutEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref\n}\n","import {AlertIcon, XIcon, type Icon} from '@primer/octicons-react'\nimport {Box, Flash, Octicon} from '@primer/react'\nimport type {ComponentProps} from 'react'\nimport type React from 'react'\n\ntype FlashProps = React.PropsWithChildren<\n  ComponentProps<typeof Flash> & {\n    variant?: 'default' | 'warning' | 'success' | 'danger'\n    onClose?: () => void\n    icon?: Icon\n  }\n>\n\nexport function CopilotFlash(props: FlashProps) {\n  if (!props.children) {\n    return null\n  }\n\n  const {children, onClose, icon, ...rest} = props\n\n  function MessageIcon() {\n    if (rest.variant === 'warning' || rest.variant === 'danger') {\n      return <Octicon icon={icon || AlertIcon} />\n    }\n\n    if (icon) {\n      return <Octicon icon={icon} />\n    }\n\n    return null\n  }\n\n  return (\n    <Flash {...rest}>\n      <MessageIcon />\n      {children}\n      {onClose && (\n        <Box sx={{cursor: 'pointer'}} onClick={onClose}>\n          <XIcon />\n        </Box>\n      )}\n    </Flash>\n  )\n}\n\ntry{ CopilotFlash.displayName ||= 'CopilotFlash' } catch {}\ntry{ MessageIcon.displayName ||= 'MessageIcon' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"checkbox\":\"checkbox-control-module__checkbox--DKYvr\"};","import {clsx} from 'clsx'\nimport styles from './checkbox-control.module.css'\nimport {Checkbox, FormControl} from '@primer/react'\nimport type {CopilotSeatAssignable, CopilotSeatAssignment, SeatAssignable} from '../../../types'\nimport {id} from '../../../helpers/id'\n\ntype SelectableEntity = CopilotSeatAssignment | CopilotSeatAssignable | SeatAssignable\n\ntype Props = {\n  checked: boolean\n  onChange: () => void\n  selectable: SelectableEntity\n  isDisabled?: boolean\n  className?: string\n  testId?: string\n  label?: React.ReactNode\n}\n\nfunction isSeatAssignment(entity: SelectableEntity): entity is CopilotSeatAssignment {\n  return 'assignable' in entity\n}\n\nfunction getAssignableName(entity: SelectableEntity) {\n  if (isSeatAssignment(entity)) {\n    return entity.assignable.login ?? entity.assignable.display_name ?? entity.assignable.slug\n  }\n\n  if ('login' in entity) {\n    return entity.login\n  }\n\n  if ('display_login' in entity) {\n    return entity.display_login\n  }\n\n  if ('slug' in entity) {\n    return entity.slug\n  }\n\n  return ''\n}\n\nfunction getAssignableId(entity: SelectableEntity) {\n  if ('assignable' in entity) {\n    return entity.assignable.id\n  }\n\n  return id(entity as SeatAssignable)\n}\n\nfunction getAssignableType(entity: SelectableEntity) {\n  if ('type' in entity) {\n    return entity.type\n  }\n\n  if ('assignable_type' in entity) {\n    return entity.assignable_type\n  }\n\n  return ''\n}\n\nexport function SeatCheckboxControl(props: Props) {\n  const {isDisabled, selectable, onChange, checked} = props\n  const ariaAssignableName = getAssignableName(selectable)\n  const assignableType = getAssignableType(selectable)\n  const testId = props.testId ?? `${assignableType}-${getAssignableId(selectable)}-checkbox`\n\n  return (\n    <div className={clsx(styles.checkbox, props.className)}>\n      <FormControl disabled={isDisabled}>\n        <FormControl.Label visuallyHidden>\n          {props.label ?? `Toggle access for ${ariaAssignableName || 'this entity'}`}\n        </FormControl.Label>\n        <Checkbox\n          className={clsx(styles.checkbox, 'mt-0')}\n          onChange={() => {\n            !isDisabled && onChange()\n          }}\n          checked={checked}\n          data-testid={testId}\n          aria-label={`Select ${assignableType} ${ariaAssignableName}`}\n        />\n      </FormControl>\n    </div>\n  )\n}\n\ntry{ SeatCheckboxControl.displayName ||= 'SeatCheckboxControl' } catch {}","import {GitHubAvatar} from '@github-ui/github-avatar'\nimport {MailIcon} from '@primer/octicons-react'\nimport {Box, Text, Link} from '@primer/react'\nimport type {CopilotSeatAssignment, EnterpriseTeamSeatAssignment} from '../../types'\nimport {SeatType} from '../../types'\nimport {SeatHovercardLink} from './SeatHovercardLink'\nimport {Bold} from './Ui'\nimport {pluralize} from '../../helpers/text'\n\ntype Props = {\n  seat: CopilotSeatAssignment\n  owner: string\n  muteTitle?: boolean\n}\n\nexport default function SeatAssignable(props: Props) {\n  const {seat, owner, muteTitle} = props\n  const {assignable_type, assignable} = seat\n  const {login, slug, display_name, member_count, combined_slug, avatar_url, email, id} = assignable\n\n  // Org invitees don't have an object in `assignable` because they are not members of the org or GitHub\n  const isExternalOrgInvitee = seat.assignable_type === 'OrganizationInvitation' && !seat.assignable.invitee\n\n  const assignableSubtext = () => {\n    if (assignable_type === 'User' && display_name) {\n      return display_name\n    } else if (assignable_type === 'Team') {\n      return `@${combined_slug} • ${member_count} members`\n    } else if (isExternalOrgInvitee) {\n      return 'External member'\n    } else if (assignable_type === 'EnterpriseTeam') {\n      return pluralize(member_count!, 'member', 's', true)\n    } else {\n      return ''\n    }\n  }\n\n  const assignableLogin = () => {\n    switch (assignable_type) {\n      case SeatType.User:\n        return login\n      case SeatType.Team:\n        return slug\n      case SeatType.OrganizationInvitation:\n        return assignable.invitee?.login || ''\n      case SeatType.EnterpriseTeam:\n        return String(assignable.mapping_id)\n      default:\n        return ''\n    }\n  }\n\n  const assignableAvatar = () => {\n    if (assignable_type === SeatType.EnterpriseTeam) {\n      return null\n    }\n\n    if (isExternalOrgInvitee) {\n      return (\n        <Text as=\"span\" data-testid=\"seat-assignable-invite-mail-icon\" sx={{marginTop: '-2px'}}>\n          <MailIcon size={16} verticalAlign=\"middle\" />\n        </Text>\n      )\n    }\n\n    return (\n      <SeatHovercardLink\n        className=\"d-inline-block\"\n        owner={owner}\n        assignable_type={assignable_type}\n        login={assignableLogin() || ''}\n        testId=\"seat-assignable-avatar-hover\"\n      >\n        <GitHubAvatar src={avatar_url!} size={16} square={assignable_type === SeatType.Team} />\n      </SeatHovercardLink>\n    )\n  }\n\n  const assignableHandle = () => {\n    if (isExternalOrgInvitee) {\n      return <Bold data-testid={`seat-assignable-invite-email-${id}`}>{email}</Bold>\n    }\n\n    const loginString = assignable_type === SeatType.EnterpriseTeam ? `${login}` : `@${login}`\n\n    if (assignable_type === SeatType.EnterpriseTeam) {\n      const status = (seat as EnterpriseTeamSeatAssignment).status\n      return (\n        <Text\n          as=\"b\"\n          sx={{\n            color:\n              seat.pending_cancellation_date ||\n              (typeof seat.id !== 'number' && status === 'pending_creation') ||\n              (typeof seat.id === 'number' && status === 'pending_reassignment') ||\n              (typeof seat.id === 'number' && status === 'pending_unassignment') ||\n              muteTitle\n                ? 'fg.muted'\n                : undefined,\n          }}\n        >\n          <Link href={`/enterprises/${owner}/teams/${slug}/members`} sx={{color: 'fg.default'}}>\n            {loginString}\n          </Link>\n        </Text>\n      )\n    }\n\n    return (\n      <SeatHovercardLink\n        assignable_type={assignable_type}\n        login={assignableLogin() || ''}\n        owner={owner}\n        testId={`seat-assignable-name-hover-${id}`}\n        color={seat.pending_cancellation_date ? 'fg.muted' : undefined}\n      >\n        {loginString}\n      </SeatHovercardLink>\n    )\n  }\n\n  const subtext = assignableSubtext()\n\n  return (\n    <>\n      <Box className=\"pr-0\" sx={{paddingLeft: '12px'}}>\n        {assignableAvatar()}\n      </Box>\n\n      <Box\n        className=\"css-truncate flex-auto\"\n        sx={{\n          display: 'flex',\n          gap: 2,\n          fontSize: 14,\n          alignItems: 'center',\n          marginTop: assignable_type === SeatType.EnterpriseTeam ? 0 : '10px',\n          marginBottom: assignable_type === SeatType.EnterpriseTeam ? 0 : 2,\n          paddingLeft: 2,\n          lineHeight: '20px',\n        }}\n      >\n        {assignableHandle()}\n        {subtext && (\n          <Box as=\"span\" data-testid=\"seat-assignable-subtext\" sx={{fontSize: 12, color: 'fg.muted', marginTop: '2px'}}>\n            {subtext}\n          </Box>\n        )}\n      </Box>\n    </>\n  )\n}\n\ntry{ SeatAssignable.displayName ||= 'SeatAssignable' } catch {}","import type React from 'react'\n\nimport {Box} from '@primer/react'\nimport {Bold} from './Ui'\nimport type {SeatType} from '../../types'\n\nexport const SeatHovercardLink = (\n  props: React.PropsWithChildren<{\n    assignable_type: SeatType\n    owner: string\n    login: string\n    className?: string\n    testId?: string\n    color?: string\n  }>,\n) => {\n  const {login, assignable_type, owner, className, testId, children, color} = props\n\n  const href = () => {\n    switch (assignable_type) {\n      case 'User':\n        return `/orgs/${owner}/people/${login}`\n      case 'Team':\n        return `/orgs/${owner}/teams/${login}`\n      case 'OrganizationInvitation':\n        return `/${login}`\n      case 'EnterpriseTeam':\n        return `//enterprises/${owner}/external_group_members/${login}`\n      default:\n        return ''\n    }\n  }\n\n  const hoverUrl = () => {\n    switch (assignable_type) {\n      case 'User':\n        return `/users/${login}/hovercard`\n      case 'Team':\n        return `/orgs/${owner}/teams/${login}/hovercard`\n      case 'OrganizationInvitation':\n        return `/users/${login}/hovercard`\n      default:\n        return ''\n    }\n  }\n\n  return (\n    <Box\n      as=\"a\"\n      sx={{color: color || 'fg.default', whiteSpace: 'nowrap'}}\n      className={className}\n      data-hovercard-type=\"user\"\n      data-hovercard-url={hoverUrl()}\n      data-octo-click=\"hovercard-link-click\"\n      data-octo-dimensions=\"link_type:self\"\n      data-hovercard-z-index-override=\"1000\"\n      data-testid={testId}\n      href={href()}\n      aria-label={login}\n    >\n      <Bold>{children}</Bold>\n    </Box>\n  )\n}\n\ntry{ SeatHovercardLink.displayName ||= 'SeatHovercardLink' } catch {}","import {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {\n  // eslint-disable-next-line no-restricted-imports\n  Avatar,\n  type AvatarProps,\n} from '@primer/react'\nimport {forwardRef, useMemo} from 'react'\n\nexport type GitHubAvatarProps = AvatarProps\n\nexport const GitHubAvatar = forwardRef<HTMLImageElement, GitHubAvatarProps>(function GitHubAvatar(\n  {src, size = 20, ...otherProps}: GitHubAvatarProps,\n  ref,\n) {\n  const avatarUrl = useMemo(() => {\n    // src maybe be relative, e.g. `/mona.png`, in which case the instances main origin should be used,\n    // e.g. \"https://github.com\" for dotcom. If src is a fully quallified URL then the origin argument is ignored.\n    const url = new URL(src, ssrSafeLocation.origin)\n\n    // do not override size if it's already set as query parameter\n    if (!url.searchParams.has('size') && !url.searchParams.has('s')) {\n      // we double size for better rendering on high density pixel screens\n      url.searchParams.set('size', String(Number(size) * 2))\n    }\n\n    return url.toString()\n  }, [src, size])\n\n  return <Avatar ref={ref} src={avatarUrl} size={size} data-testid=\"github-avatar\" {...otherProps} />\n})\n\ntry{ GitHubAvatar.displayName ||= 'GitHubAvatar' } catch {}"],"names":["COPILOT_BUSINESS_LICENSE_COST","COPILOT_ENTERPRISE_LICENSE_COST","PAGE_SIZE","REDESIGN_PAGE_SIZE","id","idToUse","assignable","type","SeatType","Team","User","display_login","pluralize","count","text","suffix","showCount","capitalizeFirstLetter","string","charAt","toUpperCase","slice","formatDate","date","Date","billingDate","day","getDate","month","toLocaleString","year","getFullYear","useCreateCSV","config","loading","setLoading","useState","error","setError","makeCSVRequest","generateCSVPath","endpoint","slug","response","verifiedFetch","method","headers","Accept","ok","blob","a","document","createElement","href","URL","createObjectURL","currentTime","Math","floor","getTime","download","click","remove","revokeObjectURL","onSuccess","errMsg","statusText","onError","e","useTrackedValue","initialValue","value","setValue","lastValue","useTrackingRef","updateValue","useCallback","current","nextValue","_getFilterParam","filter","All","Organization","OrganizationInvitation","configDefaults","initialPage","initialSort","initialQuery","initialFilter","usePaginatedSearchQuery","configs","useMemo","currentPage","handleSetPage","usePagination","page","query","deferredQuery","lastQuery","handleSearch","originalHandleSearch","useSearchQuery","useDeferredValue","q","sortDetails","lastSort","updateSortDetails","useSort","sort","getFilterParam","handleFilter","useFilterSeatType","makeQueryString","toQueryString","params","URLSearchParams","append","toString","paginate","queryHasChanged","CopilotForBusinessSeatPolicy","currencyCache","currency","options","formatter","Intl","NumberFormat","getLocale","style","format","number","maximumFractionDigits","precision","SUFFIXES","human","capping","Infinity","suffixLabel","formattedValue","min","base","getNumberBase","result","getSignificanceBasedPrecision","log","max","abs","length","ref","useRef","useLayoutEffect","MessageIcon","CopilotFlash","props","children","onClose","icon","rest","Flash","variant","Octicon","AlertIcon","Box","sx","cursor","onClick","XIcon","displayName","SeatCheckboxControl","isDisabled","selectable","onChange","checked","ariaAssignableName","entity","login","display_name","assignableType","assignable_type","testId","div","className","clsx","styles","checkbox","FormControl","disabled","Label","visuallyHidden","label","Checkbox","data-testid","aria-label","SeatAssignable","seat","owner","muteTitle","member_count","combined_slug","avatar_url","email","isExternalOrgInvitee","invitee","assignableLogin","EnterpriseTeam","String","mapping_id","subtext","paddingLeft","Text","as","marginTop","MailIcon","size","verticalAlign","SeatHovercardLink","GitHubAvatar","src","square","display","gap","fontSize","alignItems","marginBottom","lineHeight","assignableHandle","Bold","loginString","status","color","pending_cancellation_date","undefined","Link","whiteSpace","data-hovercard-type","data-hovercard-url","hoverUrl","data-octo-click","data-octo-dimensions","data-hovercard-z-index-override","forwardRef","otherProps","avatarUrl","url","ssrSafeLocation","origin","searchParams","has","set","Number","Avatar"],"sourceRoot":""}