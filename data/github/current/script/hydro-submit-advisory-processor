#!/usr/bin/env ruby
# frozen_string_literal: true

require File.expand_path("../../config/environment", __FILE__)

subscribe_to = GitHub::StreamProcessors::AdvisoryDB::SubmitAdvisoryProcessor::DEFAULT_SUBSCRIBE_TO

if ARGV.include?("--review-lab")
  group_id = "review_lab_submit_advisory_#{GitHub.current_ref.parameterize.underscore}"
  filter = -> (message) { message.value[:review_lab_ref] == GitHub.current_ref }
else
  # In production
  group_id = GitHub::StreamProcessors::AdvisoryDB::SubmitAdvisoryProcessor::DEFAULT_GROUP_ID
  filter = ->(message) { message.value[:review_lab_ref].blank? }
end

GitHub.logger.info(
  "code.namespace": "hydro-submit-advisory-processor",
  "messaging.source.kind": "topic",
  "messaging.consumer.id": group_id,
  "messaging.source.name": subscribe_to.to_s,
)

processor = GitHub::StreamProcessors::AdvisoryDB::SubmitAdvisoryProcessor.new(
  group_id: group_id,
  filter: filter)

consumer = GitHub.hydro_consumer(processor.options)
GitHub.hydro_client.run(processor, consumer: consumer, shutdown_signals: [:INT, :TERM])
