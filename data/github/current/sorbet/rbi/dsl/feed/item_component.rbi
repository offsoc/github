# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Feed::ItemComponent`.
# Please instead update this file by running `bin/tapioca dsl Feed::ItemComponent`.

class Feed::ItemComponent
  sig { returns(T.untyped) }
  def action_button; end

  sig { returns(T::Boolean) }
  def action_button?; end

  sig { returns(T.untyped) }
  def body; end

  sig { returns(T::Boolean) }
  def body?; end

  sig { returns(T.untyped) }
  def border; end

  sig { returns(T::Boolean) }
  def border?; end

  sig { returns(T.untyped) }
  def comments; end

  sig { returns(T::Boolean) }
  def comments?; end

  sig { returns(T.untyped) }
  def footer; end

  sig { returns(T::Boolean) }
  def footer?; end

  sig { returns(T.untyped) }
  def heading; end

  sig { returns(T::Boolean) }
  def heading?; end

  sig { returns(T.untyped) }
  def heading_action; end

  sig { returns(T::Boolean) }
  def heading_action?; end

  sig { returns(T.untyped) }
  def heading_menu; end

  sig { returns(T::Boolean) }
  def heading_menu?; end

  sig { returns(T.untyped) }
  def heading_subject; end

  sig { returns(T::Boolean) }
  def heading_subject?; end

  sig { returns(T.untyped) }
  def related_items; end

  sig { returns(T::Boolean) }
  def related_items?; end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_action_button(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_body(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_border(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_comments(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_footer(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_heading(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_heading_action(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_heading_menu(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_heading_subject(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_related_items(*args, **_arg1, &block); end
end
