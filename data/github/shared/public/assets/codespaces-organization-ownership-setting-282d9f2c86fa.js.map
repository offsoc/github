{"version":3,"file":"codespaces-organization-ownership-setting-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/codespaces-organization-ownership-setting/CodespacesOrganizationOwnershipSetting.tsx","ui/packages/codespaces-organization-ownership-setting/codespaces-organization-ownership-setting.ts","ui/packages/react-core/deferred-registry.ts","ui/packages/react-core/react-partial-anchor.ts","ui/packages/react-core/react-partial-registry.ts","ui/packages/react-core/ReactPartialElement.tsx","ui/packages/react-core/register-partial.ts","ui/packages/react-profiling-mode/src/index.ts","ui/packages/test-id-props/test-id-props.ts","ui/packages/verified-fetch/verified-fetch.ts","ui/packages/react-core/PartialRouter.tsx","ui/packages/react-core/PartialEntry.tsx","ui/packages/react-core/ReactBaseElement.tsx"],"sourcesContent":["import {Button, Box, Dialog, Text, Octicon, Flash, Radio, RadioGroup, FormControl} from '@primer/react'\nimport {AlertIcon} from '@primer/octicons-react'\nimport {useRef, useState} from 'react'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport {testIdProps} from '@github-ui/test-id-props'\nexport interface CodespacesOrganizationOwnershipSettingProps {\n  currentValue: string\n  disabled: boolean\n  submitUrl: string\n}\n\nexport const ORGANIZATION_CONFIRM_MESSAGE =\n  'Any codespaces created on organization owned repositories and owned by organization members or collaborators with codespaces access will transfer ownership to your organization.'\nexport const USER_CONFIRM_MESSAGE =\n  'All codespaces currently owned by your organization will transfer ownership to the creating user.'\nexport function CodespacesOrganizationOwnershipSetting({\n  currentValue,\n  disabled,\n  submitUrl,\n}: CodespacesOrganizationOwnershipSettingProps) {\n  const [isOpen, setIsOpen] = useState(false)\n  const [flashMessage, setFlashMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [selectedValue, setSelectedValue] = useState(currentValue)\n  const returnFocusRef = useRef(null)\n\n  const handleSubmit = async () => {\n    const postForm = new FormData()\n\n    postForm.append('codespaces_org_ownership_setting', selectedValue)\n\n    try {\n      const response = await verifiedFetch(submitUrl, {\n        method: 'PUT',\n        body: postForm,\n        headers: {\n          Accept: 'application/json',\n        },\n      })\n      if (response.ok) {\n        setIsOpen(false)\n        const data = await response.json()\n        setFlashMessage(data.message)\n        setErrorMessage('') // clear error\n        return response\n      } else {\n        return new Error('Failed to update')\n      }\n    } catch (error) {\n      return error\n    }\n  }\n\n  const selectedValueConfirmMessage = () => {\n    if (selectedValue === 'organization') {\n      return ORGANIZATION_CONFIRM_MESSAGE\n    } else {\n      return USER_CONFIRM_MESSAGE\n    }\n  }\n\n  return (\n    <div {...testIdProps('codespaces-org-ownership-setting')} className=\"mb-4\">\n      {flashMessage && <Flash>{flashMessage}</Flash>}\n      {errorMessage && <Flash variant={'danger'}>{errorMessage}</Flash>}\n      <h3 className=\"text-normal pb-2 mt-4\">Codespace ownership</h3>\n      <p>\n        Control who owns codespaces created by your organization’s members on organization owned repositories. Codespace\n        ownership dictates who is billed for usage, whose policies apply, and where audit logs are sent.\n      </p>\n      <div className=\"pt-3 pb-1\">\n        <form>\n          <RadioGroup aria-labelledby=\"ownershipChoice\" name=\"choiceGroup\">\n            <FormControl disabled={disabled}>\n              <Radio\n                name={'codespaces-ownership-setting'}\n                value={'organization'}\n                defaultChecked={currentValue === 'organization'}\n                onClick={() => setSelectedValue('organization')}\n                {...testIdProps('organization-radio-button')}\n              />\n              <FormControl.Label>\n                Organization ownership\n                <p {...testIdProps('organization-radio-button-label')} className=\"note\">\n                  All codespaces created by your organization’s members on your organization’s repositories are owned by\n                  the organization\n                </p>\n              </FormControl.Label>\n            </FormControl>\n            <FormControl disabled={disabled}>\n              <Radio\n                name={'codespaces-ownership-setting'}\n                value={'user'}\n                defaultChecked={currentValue === 'user'}\n                onClick={() => setSelectedValue('user')}\n                {...testIdProps('user-radio-button')}\n              />\n              <FormControl.Label>\n                User ownership\n                <p {...testIdProps('user-radio-button-label')} className=\"note\">\n                  All codespaces created by your organization’s members on your organization’s repositories are owned by\n                  the creating member\n                </p>\n              </FormControl.Label>\n            </FormControl>\n          </RadioGroup>\n        </form>\n      </div>\n      <Button\n        className=\"mt-2\"\n        ref={returnFocusRef}\n        {...testIdProps('save-button')}\n        onClick={() => setIsOpen(true)}\n        disabled={disabled}\n      >\n        Save\n      </Button>\n      <Dialog\n        isOpen={isOpen}\n        returnFocusRef={returnFocusRef}\n        onDismiss={() => setIsOpen(false)}\n        aria-labelledby=\"update-codespaces-settings\"\n        {...testIdProps('dialog')}\n      >\n        <Dialog.Header id=\"update-codespaces-settings\">Update GitHub Codespaces ownership settings?</Dialog.Header>\n        <Box sx={{p: 3}}>\n          <Text id=\"label\" sx={{fontFamily: 'sans-serif'}}>\n            <Octicon icon={AlertIcon} sx={{mr: 2, color: 'danger.fg'}} />\n            {selectedValueConfirmMessage()}\n          </Text>\n          <Box sx={{display: 'flex', mt: 3, justifyContent: 'flex-end'}}>\n            <Button sx={{mr: 1}} onClick={() => setIsOpen(false)}>\n              Cancel\n            </Button>\n            <Button variant=\"primary\" onClick={handleSubmit}>\n              Submit\n            </Button>\n          </Box>\n        </Box>\n      </Dialog>\n    </div>\n  )\n}\n\ntry{ CodespacesOrganizationOwnershipSetting.displayName ||= 'CodespacesOrganizationOwnershipSetting' } catch {}","import {registerReactPartial} from '@github-ui/react-core/register-partial'\nimport {CodespacesOrganizationOwnershipSetting} from './CodespacesOrganizationOwnershipSetting'\n\nregisterReactPartial('codespaces-organization-ownership-setting', {\n  Component: CodespacesOrganizationOwnershipSetting,\n})\n","export class DeferredRegistry<T> {\n  private registrationEntries: Record<\n    string,\n    {\n      promise: Promise<T>\n      resolve?: (r: T) => void\n    }\n  > = {}\n\n  public register(name: string, registration: T) {\n    const entry = this.registrationEntries[name]\n    if (entry) {\n      entry.resolve?.(registration)\n    } else {\n      this.registrationEntries[name] = {\n        promise: Promise.resolve(registration),\n      }\n    }\n  }\n\n  public getRegistration(name: string): Promise<T> {\n    this.registrationEntries[name] ||= new Deferred()\n    return this.registrationEntries[name].promise\n  }\n}\n\nclass Deferred<T> {\n  declare promise\n  declare resolve: (r: T) => void\n\n  constructor() {\n    this.promise = new Promise<T>(resolve => {\n      this.resolve = resolve\n    })\n  }\n}\n","import type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {useCallback, useEffect, useRef, useState} from 'react'\n\ninterface ReactPartialAnchor {\n  /**\n   * DO NOT USE THIS PROPERTY DIRECTLY. It is meant to be used with useExternalAnchor and useOnAnchorClick\n   */\n  __wrapperElement: ReactPartialAnchorElement\n}\n\nexport interface ReactPartialAnchorProps {\n  reactPartialAnchor?: ReactPartialAnchor\n}\n\nexport function usePartialAnchorProps(\n  anchorElement: ReactPartialAnchorElement | undefined | null,\n): ReactPartialAnchorProps {\n  useEffect(() => {\n    const anchor = anchorElement?.anchor\n\n    if (!anchor) {\n      return\n    }\n\n    if ('disabled' in anchor) {\n      anchor.disabled = false\n    }\n    anchor.classList.remove('cursor-wait')\n  }, [anchorElement])\n\n  if (!anchorElement) {\n    return {}\n  }\n\n  return {\n    reactPartialAnchor: {\n      __wrapperElement: anchorElement,\n    },\n  }\n}\n\nexport function useExternalAnchor(reactPartialAnchor: ReactPartialAnchor) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor || null)\n  const [open, setOpen] = useState(false)\n\n  const onClick = useCallback(() => {\n    // toggle the open state when clicked\n    setOpen(!open)\n  }, [open, setOpen])\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    ref.current.setAttribute('aria-expanded', open.toString())\n    ref.current.setAttribute('aria-haspopup', 'true')\n  }, [ref, open])\n\n  useOnAnchorClick(reactPartialAnchor, onClick)\n\n  return {\n    ref,\n    open,\n    setOpen,\n  }\n}\n\nexport function useOnAnchorClick(reactPartialAnchor: ReactPartialAnchor, onClick: (event: MouseEvent) => void) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor)\n\n  useEffect(() => {\n    const element = ref.current\n    if (!element) {\n      return\n    }\n\n    element.addEventListener('click', onClick)\n    return () => element.removeEventListener('click', onClick)\n  }, [ref, onClick])\n}\n\nexport type PropsWithPartialAnchor<T> = T & Required<ReactPartialAnchorProps>\n","import {DeferredRegistry} from './deferred-registry'\n\nexport interface PartialRegistration {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Component: React.ComponentType<any>\n}\n\nexport const partialRegistry = new DeferredRegistry<PartialRegistration>()\n\nexport function getReactPartial(appName: string) {\n  return partialRegistry.getRegistration(appName)\n}\n","import {controller} from '@github/catalyst'\nimport {getReactPartial} from './react-partial-registry'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {ReactBaseElement} from './ReactBaseElement'\nimport {PartialEntry} from './PartialEntry'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\n\n// What is this silliness? Is it react or a web component?!\n// It's a web component we use to bootstrap react partials within the monolith.\n@controller\nclass ReactPartialElement extends ReactBaseElement<EmbeddedPartialData> {\n  nameAttribute = 'partial-name'\n\n  async getReactNode(embeddedData: EmbeddedPartialData) {\n    const {Component} = await getReactPartial(this.name)\n\n    // Some React Partials will be wrapped in a react-partial-anchor, which is used to conditionally render the Partial\n    const anchorElement = this.closest<ReactPartialAnchorElement>('react-partial-anchor')\n\n    return (\n      <PartialEntry\n        partialName={this.name}\n        embeddedData={embeddedData}\n        Component={Component}\n        wasServerRendered={this.hasSSRContent}\n        ssrError={this.ssrError}\n        anchorElement={anchorElement}\n      />\n    )\n  }\n}\n","import {partialRegistry, type PartialRegistration} from './react-partial-registry'\n// Import the web component to get it registered on the window\nimport './ReactPartialElement'\n\n// NOTE: if the signature of this method changes, also update the react-partial-name ESLint rule\n// /workspaces/github/ui/packages/eslint-plugin-github-monorepo/rules/react-partial-name.js\nexport function registerReactPartial(name: string, registration: PartialRegistration) {\n  partialRegistry.register(name, registration)\n}\n","import safeStorage from '@github-ui/safe-storage'\n\nconst {getItem, setItem, removeItem} = safeStorage('localStorage')\nconst REACT_PROFILING_ENABLED = 'REACT_PROFILING_ENABLED'\n\ninterface ReactProfilingModeMethods {\n  enable: () => void\n  disable: () => void\n  isEnabled: () => boolean\n}\n\nconst ReactProfilingMode: ReactProfilingModeMethods = {\n  enable: () => setItem(REACT_PROFILING_ENABLED, 'true'),\n  disable: () => removeItem(REACT_PROFILING_ENABLED),\n  isEnabled: () => !!getItem(REACT_PROFILING_ENABLED),\n}\n\nexport default ReactProfilingMode\n","export interface TestIdProps {\n  /** Test ID to be queried by automated testing suites */\n  'data-testid'?: string\n}\n\nexport const testIdProps = (value: string): TestIdProps => {\n  return {'data-testid': value}\n}\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  assertRelativePathOrSameOrigin(path)\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\nfunction assertRelativePathOrSameOrigin(path: string) {\n  if (process.env.NODE_ENV === 'test' && !window.location.origin) return\n  const url = new URL(path, window.location.origin)\n  if (url.origin !== window.location.origin) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetch(path, {...init, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetchJSON(path, {...init, headers})\n}\n","import {useState} from 'react'\nimport type {BrowserHistory, MemoryHistory} from '@remix-run/router'\nimport {Router} from 'react-router-dom'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\ntype Props = {\n  children: React.ReactNode\n  history: BrowserHistory | MemoryHistory\n}\n\nexport function PartialRouter({children, history}: Props) {\n  const [state, setState] = useState({\n    location: history.location,\n  })\n\n  useHydratedEffect(() => history.listen(setState), [history])\n\n  return (\n    <Router location={state.location} navigator={history}>\n      {children}\n    </Router>\n  )\n}\n\ntry{ PartialRouter.displayName ||= 'PartialRouter' } catch {}","// Think of this as the entry point into the framework\nimport React from 'react'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {BaseProviders} from './BaseProviders'\nimport type {BrowserHistory} from '@remix-run/router'\nimport {createMemoryHistory} from '@remix-run/router'\nimport {AppContextProvider} from './AppContextProvider'\nimport {PartialRouter} from './PartialRouter'\nimport {CommonElements} from './CommonElements'\nimport {createBrowserHistory} from './create-browser-history'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {usePartialAnchorProps} from './react-partial-anchor'\n\ninterface Props {\n  partialName: string\n  embeddedData: EmbeddedPartialData\n  Component: React.ComponentType\n  wasServerRendered: boolean\n  ssrError?: HTMLScriptElement\n  anchorElement?: ReactPartialAnchorElement | null\n}\n\nexport function PartialEntry({\n  partialName,\n  embeddedData,\n  Component,\n  wasServerRendered,\n  ssrError,\n  anchorElement,\n}: Props) {\n  // Create a ref to track the browser history:\n  const historyRef = React.useRef<BrowserHistory>()\n  const window = globalThis.window as Window | undefined\n\n  // For linking to work, we can just pass a dummy pathname here. We may consider plumbing the actual path in\n  if (!historyRef.current) {\n    historyRef.current = !window\n      ? createMemoryHistory({initialEntries: [{pathname: '/'}]})\n      : createBrowserHistory({window})\n  }\n  const history = historyRef.current\n  const partialAnchorProps = usePartialAnchorProps(anchorElement)\n\n  // Wrap the partial in an AppContextProvider and static Router so that react-core links\n  // will be functional.\n  return (\n    <BaseProviders appName={partialName} wasServerRendered={wasServerRendered}>\n      <AppContextProvider history={history} routes={[]}>\n        <PartialRouter history={history}>\n          <Component {...embeddedData.props} {...(partialAnchorProps as object)} />\n          <CommonElements ssrError={ssrError} />\n        </PartialRouter>\n      </AppContextProvider>\n    </BaseProviders>\n  )\n}\n\ntry{ PartialEntry.displayName ||= 'PartialEntry' } catch {}","import {target} from '@github/catalyst'\nimport {createRoot, hydrateRoot} from 'react-dom/client'\nimport type {createRoot as createRootType, hydrateRoot as hydrateRootType, Root} from 'react-dom/client'\nimport React from 'react'\nimport ReactProfilingMode from '@github-ui/react-profiling-mode'\nimport {EXPECTED_ERRORS} from './expected-errors'\nimport {sendStats} from '@github-ui/stats'\n\ntype ReactDOM = {\n  createRoot: typeof createRootType\n  hydrateRoot: typeof hydrateRootType\n}\n\nconst REACT_INVARIANT_ERROR_REGEX = /Minified React error #(?<invariant>\\d+)/\n\nexport abstract class ReactBaseElement<T> extends HTMLElement {\n  @target embeddedData: HTMLScriptElement | undefined\n  @target ssrError: HTMLScriptElement | undefined\n  @target reactRoot: HTMLElement | undefined\n  private root: Root | undefined\n\n  abstract nameAttribute: string\n  abstract getReactNode(embeddedData: T): Promise<React.ReactNode>\n\n  protected get name() {\n    return this.getAttribute(this.nameAttribute) as string\n  }\n\n  private get embeddedDataText() {\n    const text = this.embeddedData?.textContent\n\n    if (!text) {\n      throw new Error(`No embedded data provided for react element ${this.name}`)\n    }\n\n    return text\n  }\n\n  get hasSSRContent() {\n    return this.getAttribute('data-ssr') === 'true'\n  }\n\n  connectedCallback() {\n    this.renderReact()\n  }\n\n  disconnectedCallback() {\n    this.root?.unmount()\n    this.root = undefined\n  }\n\n  private async renderReact() {\n    if (!this.reactRoot) throw new Error('No react root provided')\n    let reactDom: ReactDOM = {\n      createRoot,\n      hydrateRoot,\n    }\n\n    // Override the react-dom import if we're in profiling mode\n    if (ReactProfilingMode.isEnabled()) {\n      reactDom = await this.getReactDomWithProfiling()\n    }\n\n    const embeddedData = JSON.parse(this.embeddedDataText) as T\n    const ssrErrorText = this.ssrError?.textContent\n    const node = await this.getReactNode(embeddedData)\n    const baseNode = <React.StrictMode>{node}</React.StrictMode>\n\n    if (ssrErrorText) {\n      this.logSSRError(ssrErrorText)\n    }\n\n    if (this.hasSSRContent) {\n      /**\n       * Styled-components automatically looks for style tags to hydrate on first page load, but will not detect them\n       * if they are added after the initial page load. This causes a hydration error because React isn't expecting\n       * a style tag within the app. To work around this, we need to manually move the style tags to the head before\n       * hydrating the app.\n       *\n       * During hydration, styled-components will create a new style tag which matches the one we moved to the head.\n       * This means that after hydration, we can safely remove the style tag we manually moved to the head.\n       */\n      const styles = this.querySelector('style[data-styled=\"true\"]')\n      if (styles) document.head.appendChild(styles)\n\n      // Hydrate the react app\n      // onRecoverableError is disabled until we have a react version with this fix in:\n      // https://github.com/facebook/react/pull/25692\n      this.root = reactDom.hydrateRoot(this.reactRoot, baseNode, {\n        onRecoverableError: error => {\n          if (!(error instanceof Error)) return\n\n          const match = REACT_INVARIANT_ERROR_REGEX.exec(error.message)\n          const invariant = String(match?.groups?.invariant)\n\n          sendStats({\n            incrementKey: 'REACT_HYDRATION_ERROR',\n            incrementTags: {\n              appName: this.name,\n              invariant,\n            },\n          })\n        },\n      })\n\n      // Remove the manually moved style tag after hydration\n      if (styles) {\n        // Wait until things are idle to remove the style tag. If we do it immediately, we can cause a flash of unstyled content.\n        requestIdleCallback(() => {\n          // styles could have already been removed by Turbo if a navigation happens quickly. Only remove it from the DOM if it's still there.\n          styles.parentElement?.removeChild(styles)\n        })\n      }\n    } else {\n      this.root = reactDom.createRoot(this.reactRoot)\n      this.root.render(baseNode)\n    }\n\n    this.classList.add('loaded')\n  }\n\n  private getReactDomWithProfiling() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return import('react-dom/profiling') as any as Promise<ReactDOM>\n  }\n\n  private logSSRError(ssrErrorText: string) {\n    if (EXPECTED_ERRORS[ssrErrorText]) {\n      // eslint-disable-next-line no-console\n      return console.error('SSR failed with an expected error:', EXPECTED_ERRORS[ssrErrorText])\n    }\n\n    try {\n      const error = JSON.parse(ssrErrorText) as PlatformJavascriptError\n      const stacktrace = parseFailbotStacktrace(error)\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', `${error.type}: ${error.value}\\n`, error, stacktrace)\n    } catch {\n      /**\n       * In the event we couldn't log the error, we should not break the application\n       */\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', ssrErrorText, 'unable to parse as json')\n    }\n  }\n}\n\nfunction parseFailbotStacktrace(error: PlatformJavascriptError) {\n  if (!error.stacktrace) return ''\n  let prefix = '\\n '\n  const stack = error.stacktrace.map((frame: PlatformStackframe) => {\n    const {function: func, filename, lineno, colno} = frame\n    const line = `${prefix} at ${func} (${filename}:${lineno}:${colno})`\n    prefix = ' '\n    return line\n  })\n  return stack.join('\\n')\n}\n\ntry{ REACT_INVARIANT_ERROR_REGEX.displayName ||= 'REACT_INVARIANT_ERROR_REGEX' } catch {}"],"names":["CodespacesOrganizationOwnershipSetting","currentValue","disabled","submitUrl","isOpen","setIsOpen","useState","flashMessage","setFlashMessage","errorMessage","setErrorMessage","selectedValue","setSelectedValue","returnFocusRef","useRef","handleSubmit","postForm","FormData","append","response","verifiedFetch","method","body","headers","Accept","ok","data","json","message","error","div","testIdProps","className","Flash","variant","h3","p","form","RadioGroup","aria-labelledby","name","FormControl","Radio","value","defaultChecked","onClick","Label","Button","ref","Dialog","onDismiss","Header","id","Box","sx","Text","fontFamily","Octicon","icon","AlertIcon","mr","color","display","mt","justifyContent","displayName","registerReactPartial","Component","DeferredRegistry","register","registration","entry","registrationEntries","resolve","promise","Promise","getRegistration","Deferred","constructor","usePartialAnchorProps","anchorElement","useEffect","anchor","classList","remove","reactPartialAnchor","__wrapperElement","useExternalAnchor","open","setOpen","useCallback","current","setAttribute","toString","useOnAnchorClick","element","addEventListener","removeEventListener","partialRegistry","ReactPartialElement","ReactBaseElement","getReactNode","embeddedData","appName","closest","PartialEntry","partialName","wasServerRendered","hasSSRContent","ssrError","nameAttribute","controller","getItem","setItem","removeItem","safeStorage","REACT_PROFILING_ENABLED","enable","disable","isEnabled","path","init","assertRelativePathOrSameOrigin","url","URL","window","location","origin","fetch","verifiedFetchJSON","JSON","stringify","undefined","reactFetch","reactFetchJSON","PartialRouter","children","history","state","setState","useHydratedEffect","listen","Router","navigator","historyRef","React","globalThis","createBrowserHistory","createMemoryHistory","initialEntries","pathname","partialAnchorProps","BaseProviders","AppContextProvider","routes","props","CommonElements","REACT_INVARIANT_ERROR_REGEX","HTMLElement","getAttribute","embeddedDataText","text","textContent","connectedCallback","renderReact","disconnectedCallback","root","unmount","reactRoot","reactDom","createRoot","hydrateRoot","ReactProfilingMode","getReactDomWithProfiling","parse","ssrErrorText","node","baseNode","logSSRError","styles","querySelector","document","head","appendChild","onRecoverableError","Error","match","exec","invariant","String","groups","sendStats","incrementKey","incrementTags","requestIdleCallback","parentElement","removeChild","render","add","EXPECTED_ERRORS","console","stacktrace","parseFailbotStacktrace","prefix","stack","map","function","func","filename","lineno","colno","frame","line","join","type","target"],"sourceRoot":""}