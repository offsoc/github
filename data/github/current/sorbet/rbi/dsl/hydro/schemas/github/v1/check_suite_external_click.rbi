# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::CheckSuiteExternalClick`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::CheckSuiteExternalClick`.

class Hydro::Schemas::Github::V1::CheckSuiteExternalClick
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      check_run_id: T.nilable(Integer),
      check_suite_id: T.nilable(Integer),
      external_link_text: T.nilable(String),
      external_link_url: T.nilable(String),
      github_app_id: T.nilable(Integer),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)
    ).void
  end
  def initialize(actor: nil, check_run_id: nil, check_suite_id: nil, external_link_text: nil, external_link_url: nil, github_app_id: nil, request_context: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { returns(Integer) }
  def check_run_id; end

  sig { params(value: Integer).void }
  def check_run_id=(value); end

  sig { returns(Integer) }
  def check_suite_id; end

  sig { params(value: Integer).void }
  def check_suite_id=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_check_run_id; end

  sig { void }
  def clear_check_suite_id; end

  sig { void }
  def clear_external_link_text; end

  sig { void }
  def clear_external_link_url; end

  sig { void }
  def clear_github_app_id; end

  sig { void }
  def clear_request_context; end

  sig { returns(String) }
  def external_link_text; end

  sig { params(value: String).void }
  def external_link_text=(value); end

  sig { returns(String) }
  def external_link_url; end

  sig { params(value: String).void }
  def external_link_url=(value); end

  sig { returns(Integer) }
  def github_app_id; end

  sig { params(value: Integer).void }
  def github_app_id=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end
end
