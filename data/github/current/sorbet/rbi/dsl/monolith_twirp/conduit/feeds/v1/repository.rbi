# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Conduit::Feeds::V1::Repository`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Conduit::Feeds::V1::Repository`.

class MonolithTwirp::Conduit::Feeds::V1::Repository
  sig do
    params(
      description: T.nilable(String),
      help_wanted_issue_count: T.nilable(Integer),
      id: T.nilable(Integer),
      member_id: T.nilable(Integer),
      name: T.nilable(String),
      owner: T.nilable(MonolithTwirp::Conduit::Feeds::V1::User),
      parent_id: T.nilable(Integer),
      primary_language_name: T.nilable(String),
      public_fork_count: T.nilable(Integer),
      stargazer_count: T.nilable(Integer),
      updated_at: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(description: nil, help_wanted_issue_count: nil, id: nil, member_id: nil, name: nil, owner: nil, parent_id: nil, primary_language_name: nil, public_fork_count: nil, stargazer_count: nil, updated_at: nil); end

  sig { void }
  def clear_description; end

  sig { void }
  def clear_help_wanted_issue_count; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_member_id; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_owner; end

  sig { void }
  def clear_parent_id; end

  sig { void }
  def clear_primary_language_name; end

  sig { void }
  def clear_public_fork_count; end

  sig { void }
  def clear_stargazer_count; end

  sig { void }
  def clear_updated_at; end

  sig { returns(String) }
  def description; end

  sig { params(value: String).void }
  def description=(value); end

  sig { returns(Integer) }
  def help_wanted_issue_count; end

  sig { params(value: Integer).void }
  def help_wanted_issue_count=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(Integer) }
  def member_id; end

  sig { params(value: Integer).void }
  def member_id=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(T.nilable(MonolithTwirp::Conduit::Feeds::V1::User)) }
  def owner; end

  sig { params(value: T.nilable(MonolithTwirp::Conduit::Feeds::V1::User)).void }
  def owner=(value); end

  sig { returns(Integer) }
  def parent_id; end

  sig { params(value: Integer).void }
  def parent_id=(value); end

  sig { returns(String) }
  def primary_language_name; end

  sig { params(value: String).void }
  def primary_language_name=(value); end

  sig { returns(Integer) }
  def public_fork_count; end

  sig { params(value: Integer).void }
  def public_fork_count=(value); end

  sig { returns(Integer) }
  def stargazer_count; end

  sig { params(value: Integer).void }
  def stargazer_count=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end
end
