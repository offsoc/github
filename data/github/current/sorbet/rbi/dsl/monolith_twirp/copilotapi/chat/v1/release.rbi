# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Copilotapi::Chat::V1::Release`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Copilotapi::Chat::V1::Release`.

class MonolithTwirp::Copilotapi::Chat::V1::Release
  sig do
    params(
      author_login: T.nilable(String),
      body: T.nilable(String),
      is_draft: T.nilable(T::Boolean),
      is_prerelease: T.nilable(T::Boolean),
      name: T.nilable(String),
      published_at: T.nilable(Google::Protobuf::Timestamp),
      release_id: T.nilable(Integer),
      repo_id: T.nilable(Integer),
      tag_name: T.nilable(String),
      target_commitish: T.nilable(String),
      url: T.nilable(String)
    ).void
  end
  def initialize(author_login: nil, body: nil, is_draft: nil, is_prerelease: nil, name: nil, published_at: nil, release_id: nil, repo_id: nil, tag_name: nil, target_commitish: nil, url: nil); end

  sig { returns(String) }
  def author_login; end

  sig { params(value: String).void }
  def author_login=(value); end

  sig { returns(String) }
  def body; end

  sig { params(value: String).void }
  def body=(value); end

  sig { void }
  def clear_author_login; end

  sig { void }
  def clear_body; end

  sig { void }
  def clear_is_draft; end

  sig { void }
  def clear_is_prerelease; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_published_at; end

  sig { void }
  def clear_release_id; end

  sig { void }
  def clear_repo_id; end

  sig { void }
  def clear_tag_name; end

  sig { void }
  def clear_target_commitish; end

  sig { void }
  def clear_url; end

  sig { returns(T::Boolean) }
  def is_draft; end

  sig { params(value: T::Boolean).void }
  def is_draft=(value); end

  sig { returns(T::Boolean) }
  def is_prerelease; end

  sig { params(value: T::Boolean).void }
  def is_prerelease=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def published_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def published_at=(value); end

  sig { returns(Integer) }
  def release_id; end

  sig { params(value: Integer).void }
  def release_id=(value); end

  sig { returns(Integer) }
  def repo_id; end

  sig { params(value: Integer).void }
  def repo_id=(value); end

  sig { returns(String) }
  def tag_name; end

  sig { params(value: String).void }
  def tag_name=(value); end

  sig { returns(String) }
  def target_commitish; end

  sig { params(value: String).void }
  def target_commitish=(value); end

  sig { returns(String) }
  def url; end

  sig { params(value: String).void }
  def url=(value); end
end
