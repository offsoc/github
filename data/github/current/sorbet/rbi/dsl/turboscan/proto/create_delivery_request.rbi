# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Turboscan::Proto::CreateDeliveryRequest`.
# Please instead update this file by running `bin/tapioca dsl Turboscan::Proto::CreateDeliveryRequest`.

class Turboscan::Proto::CreateDeliveryRequest
  sig do
    params(
      analysis_key: T.nilable(String),
      analysis_name: T.nilable(String),
      build_started_at: T.nilable(Google::Protobuf::Timestamp),
      checkout_uri: T.nilable(String),
      commit_oid: T.nilable(String),
      environment: T.nilable(String),
      hydro_enqueued_at: T.nilable(Google::Protobuf::Timestamp),
      invalid_sarif_error: T.nilable(Turboscan::Proto::CreateDeliveryRequest::InvalidSarif),
      invalid_zip_error: T.nilable(Turboscan::Proto::CreateDeliveryRequest::InvalidZip),
      outdated_configuration: T.nilable(Turboscan::Proto::OutdatedConfiguration),
      ref: T.nilable(String),
      rejected: T.nilable(T::Boolean),
      repository_id: T.nilable(Integer),
      repository_nwo: T.nilable(String),
      request_id: T.nilable(String),
      sarif_id: T.nilable(String),
      sarif_path: T.nilable(String),
      sarif_too_big_error: T.nilable(Turboscan::Proto::CreateDeliveryRequest::SarifTooBig),
      source_repository_id: T.nilable(Integer),
      upload_finished_at: T.nilable(Google::Protobuf::Timestamp),
      upload_started_at: T.nilable(Google::Protobuf::Timestamp),
      workflow_run_attempt: T.nilable(Integer),
      workflow_run_id: T.nilable(Integer),
      zip_too_big_error: T.nilable(Turboscan::Proto::CreateDeliveryRequest::ZipTooBig)
    ).void
  end
  def initialize(analysis_key: nil, analysis_name: nil, build_started_at: nil, checkout_uri: nil, commit_oid: nil, environment: nil, hydro_enqueued_at: nil, invalid_sarif_error: nil, invalid_zip_error: nil, outdated_configuration: nil, ref: nil, rejected: nil, repository_id: nil, repository_nwo: nil, request_id: nil, sarif_id: nil, sarif_path: nil, sarif_too_big_error: nil, source_repository_id: nil, upload_finished_at: nil, upload_started_at: nil, workflow_run_attempt: nil, workflow_run_id: nil, zip_too_big_error: nil); end

  sig { returns(String) }
  def analysis_key; end

  sig { params(value: String).void }
  def analysis_key=(value); end

  sig { returns(String) }
  def analysis_name; end

  sig { params(value: String).void }
  def analysis_name=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def build_started_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def build_started_at=(value); end

  sig { returns(String) }
  def checkout_uri; end

  sig { params(value: String).void }
  def checkout_uri=(value); end

  sig { void }
  def clear_analysis_key; end

  sig { void }
  def clear_analysis_name; end

  sig { void }
  def clear_build_started_at; end

  sig { void }
  def clear_checkout_uri; end

  sig { void }
  def clear_commit_oid; end

  sig { void }
  def clear_environment; end

  sig { void }
  def clear_hydro_enqueued_at; end

  sig { void }
  def clear_invalid_sarif_error; end

  sig { void }
  def clear_invalid_zip_error; end

  sig { void }
  def clear_outdated_configuration; end

  sig { void }
  def clear_ref; end

  sig { void }
  def clear_rejected; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_repository_nwo; end

  sig { void }
  def clear_request_id; end

  sig { void }
  def clear_sarif_id; end

  sig { void }
  def clear_sarif_path; end

  sig { void }
  def clear_sarif_too_big_error; end

  sig { void }
  def clear_source_repository_id; end

  sig { void }
  def clear_upload_finished_at; end

  sig { void }
  def clear_upload_started_at; end

  sig { void }
  def clear_workflow_run_attempt; end

  sig { void }
  def clear_workflow_run_id; end

  sig { void }
  def clear_zip_too_big_error; end

  sig { returns(String) }
  def commit_oid; end

  sig { params(value: String).void }
  def commit_oid=(value); end

  sig { returns(String) }
  def environment; end

  sig { params(value: String).void }
  def environment=(value); end

  sig { returns(T.nilable(Symbol)) }
  def error; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def hydro_enqueued_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def hydro_enqueued_at=(value); end

  sig { returns(T.nilable(Turboscan::Proto::CreateDeliveryRequest::InvalidSarif)) }
  def invalid_sarif_error; end

  sig { params(value: T.nilable(Turboscan::Proto::CreateDeliveryRequest::InvalidSarif)).void }
  def invalid_sarif_error=(value); end

  sig { returns(T.nilable(Turboscan::Proto::CreateDeliveryRequest::InvalidZip)) }
  def invalid_zip_error; end

  sig { params(value: T.nilable(Turboscan::Proto::CreateDeliveryRequest::InvalidZip)).void }
  def invalid_zip_error=(value); end

  sig { returns(T.nilable(Turboscan::Proto::OutdatedConfiguration)) }
  def outdated_configuration; end

  sig { params(value: T.nilable(Turboscan::Proto::OutdatedConfiguration)).void }
  def outdated_configuration=(value); end

  sig { returns(String) }
  def ref; end

  sig { params(value: String).void }
  def ref=(value); end

  sig { returns(T::Boolean) }
  def rejected; end

  sig { params(value: T::Boolean).void }
  def rejected=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end

  sig { returns(String) }
  def repository_nwo; end

  sig { params(value: String).void }
  def repository_nwo=(value); end

  sig { returns(String) }
  def request_id; end

  sig { params(value: String).void }
  def request_id=(value); end

  sig { returns(String) }
  def sarif_id; end

  sig { params(value: String).void }
  def sarif_id=(value); end

  sig { returns(String) }
  def sarif_path; end

  sig { params(value: String).void }
  def sarif_path=(value); end

  sig { returns(T.nilable(Turboscan::Proto::CreateDeliveryRequest::SarifTooBig)) }
  def sarif_too_big_error; end

  sig { params(value: T.nilable(Turboscan::Proto::CreateDeliveryRequest::SarifTooBig)).void }
  def sarif_too_big_error=(value); end

  sig { returns(Integer) }
  def source_repository_id; end

  sig { params(value: Integer).void }
  def source_repository_id=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def upload_finished_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def upload_finished_at=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def upload_started_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def upload_started_at=(value); end

  sig { returns(Integer) }
  def workflow_run_attempt; end

  sig { params(value: Integer).void }
  def workflow_run_attempt=(value); end

  sig { returns(Integer) }
  def workflow_run_id; end

  sig { params(value: Integer).void }
  def workflow_run_id=(value); end

  sig { returns(T.nilable(Turboscan::Proto::CreateDeliveryRequest::ZipTooBig)) }
  def zip_too_big_error; end

  sig { params(value: T.nilable(Turboscan::Proto::CreateDeliveryRequest::ZipTooBig)).void }
  def zip_too_big_error=(value); end
end
