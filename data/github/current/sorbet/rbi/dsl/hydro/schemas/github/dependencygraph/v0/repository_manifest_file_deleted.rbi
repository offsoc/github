# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Dependencygraph::V0::RepositoryManifestFileDeleted`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Dependencygraph::V0::RepositoryManifestFileDeleted`.

class Hydro::Schemas::Github::Dependencygraph::V0::RepositoryManifestFileDeleted
  sig do
    params(
      manifest_file: T.nilable(Hydro::Schemas::Github::Dependencygraph::V0::RepositoryManifestFileDeleted::ManifestFile),
      owner_id: T.nilable(Integer),
      repository_fork: T.nilable(T::Boolean),
      repository_id: T.nilable(Integer),
      repository_nwo: T.nilable(String),
      repository_private: T.nilable(T::Boolean),
      snapshot_metadata: T.nilable(Hydro::Schemas::Github::Dependencygraph::V0::RepositoryManifestFileDeleted::SnapshotMetadata)
    ).void
  end
  def initialize(manifest_file: nil, owner_id: nil, repository_fork: nil, repository_id: nil, repository_nwo: nil, repository_private: nil, snapshot_metadata: nil); end

  sig { void }
  def clear_manifest_file; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_repository_fork; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_repository_nwo; end

  sig { void }
  def clear_repository_private; end

  sig { void }
  def clear_snapshot_metadata; end

  sig { returns(T.nilable(Hydro::Schemas::Github::Dependencygraph::V0::RepositoryManifestFileDeleted::ManifestFile)) }
  def manifest_file; end

  sig do
    params(
      value: T.nilable(Hydro::Schemas::Github::Dependencygraph::V0::RepositoryManifestFileDeleted::ManifestFile)
    ).void
  end
  def manifest_file=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(T::Boolean) }
  def repository_fork; end

  sig { params(value: T::Boolean).void }
  def repository_fork=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end

  sig { returns(String) }
  def repository_nwo; end

  sig { params(value: String).void }
  def repository_nwo=(value); end

  sig { returns(T::Boolean) }
  def repository_private; end

  sig { params(value: T::Boolean).void }
  def repository_private=(value); end

  sig do
    returns(T.nilable(Hydro::Schemas::Github::Dependencygraph::V0::RepositoryManifestFileDeleted::SnapshotMetadata))
  end
  def snapshot_metadata; end

  sig do
    params(
      value: T.nilable(Hydro::Schemas::Github::Dependencygraph::V0::RepositoryManifestFileDeleted::SnapshotMetadata)
    ).void
  end
  def snapshot_metadata=(value); end
end
