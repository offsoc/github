# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hook::Event::ReminderEvent`.
# Please instead update this file by running `bin/tapioca dsl Hook::Event::ReminderEvent`.

class Hook::Event::ReminderEvent
  sig do
    params(
      action: T.untyped,
      event_at: T.untyped,
      reminder_id: T.untyped,
      repository_id: T.untyped,
      actor_id: T.untyped,
      business_id: T.untyped,
      delivered_hook_ids: T.untyped,
      event_guid: T.untyped,
      organization_id: T.untyped,
      personal: T.untyped,
      primary_resource: T.untyped,
      primary_resource_data: T.untyped,
      pull_request_ids: T.untyped,
      pull_request_ids_for_author: T.untyped,
      reminder_event_context: T.untyped,
      reminder_event_type: T.untyped,
      triggered_at: T.untyped
    ).void
  end
  def initialize(action:, event_at:, reminder_id:, repository_id:, actor_id: nil, business_id: nil, delivered_hook_ids: nil, event_guid: nil, organization_id: nil, personal: nil, primary_resource: nil, primary_resource_data: nil, pull_request_ids: nil, pull_request_ids_for_author: nil, reminder_event_context: nil, reminder_event_type: nil, triggered_at: nil); end

  sig { returns(T.untyped) }
  def action; end

  sig { params(value: T.untyped).void }
  def action=(value); end

  sig { returns(T.untyped) }
  def actor_id; end

  sig { returns(T.untyped) }
  def event_at; end

  sig { params(value: T.untyped).void }
  def actor_id=(value); end

  sig { params(value: T.untyped).void }
  def event_at=(value); end

  sig { returns(T.untyped) }
  def business_id; end

  sig { returns(T.untyped) }
  def reminder_id; end

  sig { params(value: T.untyped).void }
  def business_id=(value); end

  sig { params(value: T.untyped).void }
  def organization_id=(value); end

  sig { params(value: T.untyped).void }
  def reminder_id=(value); end

  sig { returns(T.untyped) }
  def delivered_hook_ids; end

  sig { returns(T.untyped) }
  def personal; end

  sig { returns(T.untyped) }
  def repository_id; end

  sig { params(value: T.untyped).void }
  def delivered_hook_ids=(value); end

  sig { params(value: T.untyped).void }
  def personal=(value); end

  sig { params(value: T.untyped).void }
  def repository_id=(value); end

  sig { returns(T.untyped) }
  def event_guid; end

  sig { params(value: T.untyped).void }
  def event_guid=(value); end

  sig { returns(T.untyped) }
  def organization_id; end

  sig { returns(T.untyped) }
  def primary_resource; end

  sig { params(value: T.untyped).void }
  def primary_resource=(value); end

  sig { returns(T.untyped) }
  def primary_resource_data; end

  sig { params(value: T.untyped).void }
  def primary_resource_data=(value); end

  sig { returns(T.untyped) }
  def pull_request_ids; end

  sig { params(value: T.untyped).void }
  def pull_request_ids=(value); end

  sig { returns(T.untyped) }
  def pull_request_ids_for_author; end

  sig { params(value: T.untyped).void }
  def pull_request_ids_for_author=(value); end

  sig { returns(T.untyped) }
  def reminder_event_context; end

  sig { params(value: T.untyped).void }
  def reminder_event_context=(value); end

  sig { returns(T.untyped) }
  def reminder_event_type; end

  sig { params(value: T.untyped).void }
  def reminder_event_type=(value); end

  sig { returns(T.untyped) }
  def triggered_at; end

  sig { params(value: T.untyped).void }
  def triggered_at=(value); end
end
