{
  "$schema": "http://json-schema.org/draft-04/hyper-schema",
  "id": "https://schema.github.com/v3/import.json",
  "title": "Import",
  "description": "A repository import from an external source.",
  "type": "object",
  "definitions": {
    "owner": {
      "description": "The owner of the repository.",
      "type": "string"
    },
    "repo": {
      "description": "The name of the repository.",
      "type": "string"
    },
    "repository_id": {
      "description": "The ID of the repository.",
      "type": "integer",
      "example": 42
    },
    "vcs_url": {
      "description": "The URL of the originating repository.",
      "type": "string"
    },
    "vcs": {
      "description": "The originating VCS type. Can be one of `subversion`, `git`, `mercurial`, or `tfvc`. Please be aware that without this parameter, the import job will take additional time to detect the VCS type before beginning the import. This detection step will be reflected in the response.",
      "enum": [
        "subversion",
        "git",
        "mercurial",
        "tfvc"
      ],
      "example": "tfvc",
      "type": "string"
    },
    "vcs_username": {
      "description": "If authentication is required, the username to provide to `vcs_url`.",
      "type": "string"
    },
    "vcs_password": {
      "description": "If authentication is required, the password to provide to `vcs_url`.",
      "type": "string"
    },
    "tfvc_project": {
      "description": "For a tfvc import, the name of the project that is being imported.",
      "type": "string"
    },
    "email": {
      "description": "The email address to associate with this author.",
      "type": "string",
      "example": "org@example.com"
    },
    "name": {
      "description": "The name to associate with this author.",
      "type": "string",
      "example": "Team Environment"
    },
    "use_lfs": {
      "description": "Whether to import large files and store them in Git LFS.",
      "enum": [
        "opt_in",
        "opt_out"
      ],
      "example": "opt_out",
      "type": "string"
    },
    "author_id": {
      "description": "The ID assigned to authors of Git commits during the import.",
      "type": "integer"
    },
    "import_vcs": {
      "type": [
        "string",
        "null"
      ]
    },
    "svn_root": {
      "type": "string"
    },
    "status": {
      "type": "string",
      "enum": [
        "auth",
        "error",
        "none",
        "detecting",
        "choose",
        "auth_failed",
        "importing",
        "mapping",
        "waiting_to_push",
        "pushing",
        "complete",
        "setup",
        "unknown",
        "detection_found_multiple",
        "detection_found_nothing",
        "detection_needs_auth"
      ]
    },
    "status_text": {
      "type": [
        "string",
        "null"
      ]
    },
    "authors_count": {
      "type": [
        "number",
        "null"
      ]
    },
    "failed_step": {
      "type": [
        "string",
        "null"
      ]
    },
    "error_message": {
      "type": [
        "string",
        "null"
      ]
    },
    "import_percent": {
      "type": [
        "number",
        "null"
      ]
    },
    "commit_count": {
      "type": [
        "number",
        "null"
      ]
    },
    "push_percent": {
      "type": [
        "number",
        "null"
      ]
    },
    "has_large_files": {
      "type": "boolean"
    },
    "large_files_count": {
      "type": "integer"
    },
    "large_files_size": {
      "type": "integer"
    },
    "project_choices": {
      "type": "array"
    },
    "message": {
      "type": "string"
    },
    "url": {
      "type": "string",
      "format": "uri"
    },
    "repository_url": {
      "type": "string",
      "format": "uri"
    },
    "html_url": {
      "type": "string",
      "format": "uri"
    },
    "authors_url": {
      "type": "string",
      "format": "uri"
    },
    "unixtime": {
      "description": "UNIX timestamp when the commit was made.",
      "example": 1407752005,
      "type": "integer"
    },
    "time_offset": {
      "description": "UTF offset of the committer timezone in seconds.",
      "example": -25200,
      "type": "integer"
    }
  },
  "links": [
    {
      "title": "Start an import",
      "method": "PUT",
      "rel": "start",
      "href": "/repositories/{repository_id}/import",
      "schema": {
        "properties": {
          "vcs_url": {
            "$ref": "#/definitions/vcs_url"
          },
          "vcs": {
            "$ref": "#/definitions/vcs"
          },
          "vcs_username": {
            "$ref": "#/definitions/vcs_username"
          },
          "vcs_password": {
            "$ref": "#/definitions/vcs_password"
          },
          "tfvc_project": {
            "$ref": "#/definitions/tfvc_project"
          }
        },
        "additionalProperties": false,
        "required": [
          "vcs_url"
        ],
        "type": "object"
      }
    },
    {
      "title": "Update existing import",
      "method": "PATCH",
      "rel": "update",
      "href": "/repositories/{repository_id}/import",
      "schema": {
        "properties": {
          "vcs_username": {
            "$ref": "#/definitions/vcs_username"
          },
          "vcs_password": {
            "$ref": "#/definitions/vcs_password"
          },
          "tfvc_project": {
            "$ref": "#/definitions/tfvc_project"
          },
          "vcs": {
            "$ref": "#/definitions/vcs"
          }
        },
        "type": [
          "object",
          "null"
        ],
        "additionalProperties": false
      }
    },
    {
      "title": "Map a commit author",
      "method": "PATCH",
      "rel": "update-author",
      "href": "/repositories/{repository_id}/import/authors/{author_id}",
      "schema": {
        "properties": {
          "email": {
            "$ref": "#/definitions/email"
          },
          "name": {
            "$ref": "#/definitions/name"
          }
        },
        "type": [
          "object",
          "null"
        ],
        "additionalProperties": false
      }
    },
    {
      "title": "Set Git LFS preference",
      "method": "PATCH",
      "rel": "update-lfs-preference",
      "href": "/repositories/{repository_id}/import/lfs",
      "schema": {
        "properties": {
          "use_lfs": {
            "$ref": "#/definitions/use_lfs"
          },
          "committer": {
            "schema": {
              "properties": {
                "name": {
                  "$ref": "https://schema.github.com/git-user.json#/definitions/name"
                },
                "email": {
                  "$ref": "https://schema.github.com/git-user.json#/definitions/email"
                },
                "time": {
                  "$ref": "#/definitions/unixtime"
                },
                "time_offset": {
                  "$ref": "#/definitions/time_offset"
                }
              }
            }
          }
        },
        "type": "object",
        "additionalProperties": false,
        "required": [
          "use_lfs"
        ]
      }
    },
    {
      "title": "Cancel an import",
      "method": "DELETE",
      "rel": "delete",
      "href": "/repositories/{repository_id}/import",
      "schema": {
        "additionalProperties": false,
        "type": [
          "null",
          "object"
        ]
      }
    }
  ],
  "properties": {
    "vcs": {
      "$ref": "#/definitions/import_vcs"
    },
    "vcs_url": {
      "$ref": "#/definitions/vcs_url"
    },
    "svn_root": {
      "$ref": "#/definitions/svn_root"
    },
    "tfvc_project": {
      "$ref": "#/definitions/tfvc_project"
    },
    "status": {
      "$ref": "#/definitions/status"
    },
    "status_text": {
      "$ref": "#/definitions/status_text"
    },
    "authors_count": {
      "$ref": "#/definitions/authors_count"
    },
    "failed_step": {
      "$ref": "#/definitions/failed_step"
    },
    "error_message": {
      "$ref": "#/definitions/error_message"
    },
    "import_percent": {
      "$ref": "#/definitions/import_percent"
    },
    "commit_count": {
      "$ref": "#/definitions/commit_count"
    },
    "push_percent": {
      "$ref": "#/definitions/push_percent"
    },
    "has_large_files": {
      "$ref": "#/definitions/has_large_files"
    },
    "large_files_count": {
      "$ref": "#/definitions/large_files_count"
    },
    "large_files_size": {
      "$ref": "#/definitions/large_files_size"
    },
    "project_choices": {
      "$ref": "#/definitions/project_choices"
    },
    "message": {
      "$ref": "#/definitions/message"
    },
    "url": {
      "$ref": "#/definitions/url"
    },
    "repository_url": {
      "$ref": "#/definitions/repository_url"
    },
    "html_url": {
      "$ref": "#/definitions/html_url"
    },
    "authors_url": {
      "$ref": "#/definitions/authors_url"
    }
  },
  "additionalProperties": false,
  "required": [
    "vcs",
    "vcs_url",
    "status",
    "url",
    "repository_url",
    "html_url",
    "authors_url"
  ]
}
