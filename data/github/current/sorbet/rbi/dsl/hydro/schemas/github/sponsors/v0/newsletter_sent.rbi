# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Sponsors::V0::NewsletterSent`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Sponsors::V0::NewsletterSent`.

class Hydro::Schemas::Github::Sponsors::V0::NewsletterSent
  sig do
    params(
      body: T.nilable(String),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext),
      sponsored_developer: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      subject: T.nilable(String)
    ).void
  end
  def initialize(body: nil, request_context: nil, sponsored_developer: nil, subject: nil); end

  sig { returns(String) }
  def body; end

  sig { params(value: String).void }
  def body=(value); end

  sig { void }
  def clear_body; end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_sponsored_developer; end

  sig { void }
  def clear_subject; end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def sponsored_developer; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def sponsored_developer=(value); end

  sig { returns(String) }
  def subject; end

  sig { params(value: String).void }
  def subject=(value); end
end
