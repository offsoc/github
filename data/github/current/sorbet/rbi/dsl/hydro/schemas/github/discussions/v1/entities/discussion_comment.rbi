# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Discussions::V1::Entities::DiscussionComment`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Discussions::V1::Entities::DiscussionComment`.

class Hydro::Schemas::Github::Discussions::V1::Entities::DiscussionComment
  sig do
    params(
      body_size: T.nilable(Integer),
      comment_count: T.nilable(Integer),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      global_relay_id: T.nilable(String),
      id: T.nilable(Integer),
      score: T.nilable(Integer),
      total_downvotes: T.nilable(Integer),
      total_upvotes: T.nilable(Integer),
      updated_at: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(body_size: nil, comment_count: nil, created_at: nil, global_relay_id: nil, id: nil, score: nil, total_downvotes: nil, total_upvotes: nil, updated_at: nil); end

  sig { returns(Integer) }
  def body_size; end

  sig { params(value: Integer).void }
  def body_size=(value); end

  sig { void }
  def clear_body_size; end

  sig { void }
  def clear_comment_count; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_global_relay_id; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_score; end

  sig { void }
  def clear_total_downvotes; end

  sig { void }
  def clear_total_upvotes; end

  sig { void }
  def clear_updated_at; end

  sig { returns(Integer) }
  def comment_count; end

  sig { params(value: Integer).void }
  def comment_count=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(String) }
  def global_relay_id; end

  sig { params(value: String).void }
  def global_relay_id=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(Integer) }
  def score; end

  sig { params(value: Integer).void }
  def score=(value); end

  sig { returns(Integer) }
  def total_downvotes; end

  sig { params(value: Integer).void }
  def total_downvotes=(value); end

  sig { returns(Integer) }
  def total_upvotes; end

  sig { params(value: Integer).void }
  def total_upvotes=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end
end
