# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Proto::SecretScanning::Repositories::V1::ListRepositoriesRequest`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Proto::SecretScanning::Repositories::V1::ListRepositoriesRequest`.

class GitHub::Proto::SecretScanning::Repositories::V1::ListRepositoriesRequest
  sig do
    params(
      cursor: T.nilable(String),
      ids_selector: T.nilable(GitHub::Proto::SecretScanning::Repositories::V1::ListRepositoriesIdsSelector),
      org_id: T.nilable(Integer),
      org_selector: T.nilable(GitHub::Proto::SecretScanning::Repositories::V1::ListRepositoriesOrgSelector),
      user_selector: T.nilable(GitHub::Proto::SecretScanning::Repositories::V1::ListRepositoriesUserSelector)
    ).void
  end
  def initialize(cursor: nil, ids_selector: nil, org_id: nil, org_selector: nil, user_selector: nil); end

  sig { void }
  def clear_cursor; end

  sig { void }
  def clear_ids_selector; end

  sig { void }
  def clear_org_id; end

  sig { void }
  def clear_org_selector; end

  sig { void }
  def clear_user_selector; end

  sig { returns(String) }
  def cursor; end

  sig { params(value: String).void }
  def cursor=(value); end

  sig { returns(T.nilable(GitHub::Proto::SecretScanning::Repositories::V1::ListRepositoriesIdsSelector)) }
  def ids_selector; end

  sig { params(value: T.nilable(GitHub::Proto::SecretScanning::Repositories::V1::ListRepositoriesIdsSelector)).void }
  def ids_selector=(value); end

  sig { returns(Integer) }
  def org_id; end

  sig { params(value: Integer).void }
  def org_id=(value); end

  sig { returns(T.nilable(GitHub::Proto::SecretScanning::Repositories::V1::ListRepositoriesOrgSelector)) }
  def org_selector; end

  sig { params(value: T.nilable(GitHub::Proto::SecretScanning::Repositories::V1::ListRepositoriesOrgSelector)).void }
  def org_selector=(value); end

  sig { returns(T.nilable(Symbol)) }
  def organization; end

  sig { returns(T.nilable(Symbol)) }
  def selector; end

  sig { returns(T.nilable(GitHub::Proto::SecretScanning::Repositories::V1::ListRepositoriesUserSelector)) }
  def user_selector; end

  sig { params(value: T.nilable(GitHub::Proto::SecretScanning::Repositories::V1::ListRepositoriesUserSelector)).void }
  def user_selector=(value); end
end
