# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Actions::V0::ConnectResolveRequest`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Actions::V0::ConnectResolveRequest`.

class Hydro::Schemas::Github::Actions::V0::ConnectResolveRequest
  sig do
    params(
      enterprise_installation: T.nilable(Hydro::Schemas::Github::EnterpriseAccount::V0::Entities::EnterpriseInstallation),
      ref: T.nilable(String),
      resolved_repository: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)
    ).void
  end
  def initialize(enterprise_installation: nil, ref: nil, resolved_repository: nil); end

  sig { void }
  def clear_enterprise_installation; end

  sig { void }
  def clear_ref; end

  sig { void }
  def clear_resolved_repository; end

  sig { returns(T.nilable(Hydro::Schemas::Github::EnterpriseAccount::V0::Entities::EnterpriseInstallation)) }
  def enterprise_installation; end

  sig do
    params(
      value: T.nilable(Hydro::Schemas::Github::EnterpriseAccount::V0::Entities::EnterpriseInstallation)
    ).void
  end
  def enterprise_installation=(value); end

  sig { returns(String) }
  def ref; end

  sig { params(value: String).void }
  def ref=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)) }
  def resolved_repository; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)).void }
  def resolved_repository=(value); end
end
