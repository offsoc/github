
<div class="edit-comment-hide">
  <div class="<%= class_names(
    "clearfix d-flex px-3 flex-row-reverse flex-items-center",
    "border-bottom-0 color-bg-inset" => nested_comment?,
    "color-bg-success" => nested_comment? && timeline.show_as_answer?(discussion_or_comment)
  ) %>">
    <div class="timeline-comment-actions flex-shrink-0">
      <div class="d-flex flex-row flex-items-center">
        <%= render Discussions::DeferredActionsMenuComponent.new(
          timeline: timeline,
          discussion_or_comment: discussion_or_comment,
        ) %>
      </div>
    </div>

     <div class="d-none d-sm-flex flex-items-center">
      <% if show_discussion_or_comment_edit_history? %>
        <span class="d-inline-block js-comment-edit-history">
          <%= render Discussions::EditHistoryComponent.new(
            discussion_or_comment: discussion_or_comment,
            timeline: timeline,
          ) %>
        </span>
      <% end %>
    </div>

    <%= render(Primer::Beta::Heading.new(
      tag: heading_tag,
      font_weight: :normal,
      font_size: 5,
      pb: nested_comment? ? 1 : 0,
      pt: nested_comment? ? 0 : 2,
      classes: "timeline-comment-header-text"
    )) do %>
      <% if show_abuse_report_tooltip? %>
        <%= render(Primer::Box.new(mb: 2, test_selector: "abuse-report")) do %>
          <%= render(Primer::Beta::Octicon.new(:report, color: :danger)) %>
          <%= helpers.abuse_report_tooltip(report_count, timeline.top_report_reason_for(discussion_or_comment),
                timeline.last_reported_at_for(discussion_or_comment)) %>
        <% end %>
      <% end %>

      <div class="d-flex flex-items-center">
        <% if nested_comment? %>
          <%= render Primer::Beta::Link.new(
            href: user_path(author),
            font_weight: :bold,
            scheme: :primary,
            width: :fit,
            classes: "author css-truncate css-truncate-target lh-condensed",
            data: click_profile_hydro_data.merge(hovercard_data_attributes_for_user_login(author.display_login)),
            test_selector: "nested-reply-author",
          ) do %>
            <%= author.display_login %>
          <% end %>
        <% else %>
          <%= render Users::NameplateComponent.new(
            user: author,
            avatar_size: 32,
            avatar_spacing: 2,
            hovercard: true,
            scheme: :primary,
            truncate: true,
            data: click_profile_hydro_data,
          ) %>
        <% end %>

        <% if author.bot? %>
          <span class="ml-1" <%= test_selector("bot-author") %>><%= helpers.bot_identifier(author) %></span>
        <% end %>
        <a
          href="<%= href %>"
          id="<%= discussion_or_comment.permalink_id %>"
          class="Link--secondary js-timestamp d-inline-block ml-2"
        >
          <%= time_ago_in_words_js discussion_or_comment.created_at %>
        </a>

        <% if discussion_or_comment.performed_via_integration %>
          <span class="d-inline-block mx-1">
            &mdash; with
            <a class="Link--inTextBlock" href="<%= user_path(discussion_or_comment.performed_via_integration.bot) %>"><%= discussion_or_comment.performed_via_integration.name %></a>
          </span>
        <% end %>
        <% if logged_in? && timeline.render_badge_placeholders? %>
          <%= render(Discussions::BadgesPlaceholderComponent.new(target: discussion_or_comment, timeline: timeline)) %>
        <% else %>
          <%= render Discussions::AuthorBadgesComponent.new(
            discussion_or_comment: discussion_or_comment,
            timeline: timeline,
          ) %>
        <% end %>
      </div>
    <% end %>
  </div>
</div>
