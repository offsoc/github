{"version":3,"file":"chunk-app_components_branch_create-repo-from-selector-element_ts-xxxxxxxxxxxx.js","mappings":"ofAGA,YACMA,sCAAsCC,YAK1C,MAAMC,aAAaC,CAAY,CAAE,CAG/B,GAFAA,EAAMC,cAAc,GAEhB,MAAO,IAAI,CAACC,gBAAgB,IAAO,IAAI,CAACC,UAAU,CAAE,CACtD,IAAI,CAACC,WAAW,GACZ,IAAI,CAACD,UAAU,YAAYE,kBAC7B,IAAI,CAACF,UAAU,CAACG,SAAS,GAEzB,IAAI,CAACH,UAAU,CAACI,IAAI,GAEtB,MACF,CAEK,IAAI,CAACC,QAAQ,GAChB,IAAI,CAACA,QAAQ,CAAG,GAChB,IAAI,CAACC,kBAAkB,GAE3B,CAEA,MAAMP,kBAAmB,CACvB,GAAI,CACF,IAAMQ,EAAyB,IAAI,CAACC,YAAY,CAAC,8BAC3CC,EAAW,IAAIC,SACrBD,EAASE,MAAM,CAAC,QAAS,IAAI,CAACC,OAAO,CAACC,KAAK,EAE3CJ,EAASE,MAAM,CAEb,qBACA,IAAI,CAACG,0BAA0B,CAACD,KAAK,EAEvC,IAAME,EAAW,MAAMC,MAAMT,EAAwB,CACnDU,OAAQ,OACRC,KAAMT,CACR,GACA,GAAI,CAACM,EAASI,EAAE,CACd,MAAO,GAET,OAAO,MAAMJ,EAASK,IAAI,EAC5B,CAAE,KAAM,CAEN,MAAO,EACT,CACF,CAEAd,oBAAqB,CACnB,IAAMe,EAAO,IAAI,CAACC,aAAa,CAAC,QAChCD,GAAME,QACR,CAEA,IAAYvB,YAAqD,CAC/D,OAAOwB,SAASF,aAAa,CAAyC,uCACxE,CAEQrB,aAAc,CACpB,IAAMD,EAAa,IAAI,CAACA,UAAU,CAClCA,EAAWyB,gBAAgB,CAAC,QAAS,IAAM,IAAI,CAACC,iBAAiB,IACjE1B,EAAWyB,gBAAgB,CAAC,SAAU,IAAM,IAAI,CAACE,kBAAkB,GACrE,CAEQC,4BAA6B,CACnC,IAAM5B,EAAa,IAAI,CAACA,UAAU,CAClCA,EAAW6B,mBAAmB,CAAC,QAAS,IAAM,IAAI,CAACH,iBAAiB,IACpE1B,EAAW6B,mBAAmB,CAAC,SAAU,IAAM,IAAI,CAACF,kBAAkB,GACxE,CAEQA,oBAAqB,CAC3B,IAAI,CAACC,0BAA0B,EACjC,CAEQF,mBAAoB,CAC1B,IAAI,CAACpB,kBAAkB,GACvB,IAAI,CAACsB,0BAA0B,EACjC,C,mCA1EAvB,QAAQ,CAAG,E,CA2Eb,E,GA7EGyB,EAAAA,EAAMA,C,CADHpC,EAAAA,SAAAA,CAAAA,UAAAA,KAAAA,G,GAEHoC,EAAAA,EAAMA,C,CAFHpC,EAAAA,SAAAA,CAAAA,6BAAAA,KAAAA,GAAAA,EAAAA,EAAAA,CADLqC,EAAAA,EAAUA,C,CACLrC,E","sources":["app/components/branch/create-repo-from-selector-element.ts"],"sourcesContent":["import {controller, target} from '@github/catalyst'\nimport type {ModalDialogElement} from '@primer/view-components/app/components/primer/alpha/modal_dialog'\n\n@controller\nclass CreateRepoFromSelectorElement extends HTMLElement {\n  @target refName: HTMLInputElement\n  @target checkTagNameExistsPathCsrf: HTMLInputElement\n  creating = false\n\n  async createBranch(event: Event) {\n    event.preventDefault()\n\n    if ((await this.tagExistsMessage()) && this.warnDialog) {\n      this.setUpDialog()\n      if (this.warnDialog instanceof HTMLDialogElement) {\n        this.warnDialog.showModal()\n      } else {\n        this.warnDialog.show()\n      }\n      return\n    }\n\n    if (!this.creating) {\n      this.creating = true\n      this.submitCreateBranch()\n    }\n  }\n\n  async tagExistsMessage() {\n    try {\n      const checkTagNameExistsPath = this.getAttribute('check-tag-name-exists-path')!\n      const formData = new FormData()\n      formData.append('value', this.refName.value)\n\n      formData.append(\n        // eslint-disable-next-line github/authenticity-token\n        'authenticity_token',\n        this.checkTagNameExistsPathCsrf.value,\n      )\n      const response = await fetch(checkTagNameExistsPath, {\n        method: 'POST',\n        body: formData,\n      })\n      if (!response.ok) {\n        return false\n      }\n      return await response.text()\n    } catch {\n      // Don't want to block users from creating branches if something goes wrong\n      return false\n    }\n  }\n\n  submitCreateBranch() {\n    const form = this.querySelector('form')\n    form?.submit()\n  }\n\n  private get warnDialog(): ModalDialogElement | HTMLDialogElement {\n    return document.querySelector<ModalDialogElement | HTMLDialogElement>('#warn-tag-match-create-branch-dialog')!\n  }\n\n  private setUpDialog() {\n    const warnDialog = this.warnDialog\n    warnDialog.addEventListener('close', () => this.handleDialogClose())\n    warnDialog.addEventListener('cancel', () => this.handleDialogCancel())\n  }\n\n  private removeDialogEventListeners() {\n    const warnDialog = this.warnDialog\n    warnDialog.removeEventListener('close', () => this.handleDialogClose())\n    warnDialog.removeEventListener('cancel', () => this.handleDialogCancel())\n  }\n\n  private handleDialogCancel() {\n    this.removeDialogEventListeners()\n  }\n\n  private handleDialogClose() {\n    this.submitCreateBranch()\n    this.removeDialogEventListeners()\n  }\n}\n"],"names":["CreateRepoFromSelectorElement","HTMLElement","createBranch","event","preventDefault","tagExistsMessage","warnDialog","setUpDialog","HTMLDialogElement","showModal","show","creating","submitCreateBranch","checkTagNameExistsPath","getAttribute","formData","FormData","append","refName","value","checkTagNameExistsPathCsrf","response","fetch","method","body","ok","text","form","querySelector","submit","document","addEventListener","handleDialogClose","handleDialogCancel","removeDialogEventListeners","removeEventListener","target","controller"],"sourceRoot":""}