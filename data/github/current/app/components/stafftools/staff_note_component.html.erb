<div class="js-details-container Details staffnotes" <%= test_selector "staff-note-container" %>>
  <%= render(Primer::Beta::BorderBox.new(mb: 2)) do |component| %>
    <% component.with_row(
      bg: note.is_pinned? ? :attention : :default,
      border: :top,
    ) do %>
      <div class="mb-2">
        <% if note.is_pinned? %>
          <%= render(Primer::Beta::Octicon.new(icon: :pin, mr: 2)) %>
        <% end %>
        <%= avatar_for note.user, 20, class: "v-align-middle mr-1" %>
        <strong><%= note.user %></strong>
        <%= time_ago_in_words_js note.created_at %>
      </div>
      <div class="markdown-body">
        <%= note.body_html %>
      </div>
    <% end %>

    <% component.with_row(
      px: 3,
      py: 3,
      display: :flex,
      align_items: :center,
      justify_content: :space_between
    ) do %>
      <div>
        Last edited <%= time_ago_in_words_js note.updated_at %>
      </div>
      <%= render Primer::Box.new(display: :flex, style: "gap: 4px") do %>
        <%= render Primer::Beta::Button.new(classes: "js-details-target", "aria-expanded": "false") do %>
          Edit
        <% end %>
        <% if note.is_pinned? %>
          <%= render(Primer::Alpha::Dialog.new(
            id: "unpin-note-#{note.id}",
            title: "Unpin note",
          )) do |dialog| %>
            <% dialog.with_show_button(
              scheme: :danger,
            ) { "Unpin" } %>
            <%= form_for(
              note,
              url: update_path,
              html: { id: "unpin_note" },
              method: :patch
            ) do |f| %>
              <%= f.hidden_field(:note, value: note.note, id: "pinned_staff_note") %>
              <%= f.hidden_field(:is_pinned, value: false, id: "unpin_pinned_note") %>
              <%= render(Primer::Alpha::Dialog::Body.new) do %>
                Are you sure you want to unpin this staff note?
              <% end %>
              <%= render(Primer::Alpha::Dialog::Footer.new) do %>
                <%= render(Primer::Beta::Button.new(
                  type: :submit,
                  scheme: :danger,
                  "data-disable-with": ""
                )) { "Yes, unpin note" } %>
              <% end %>
            <% end %>
          <% end %>
        <% end %>

        <%= render(Primer::Alpha::Dialog.new(
          id: "delete-note-#{note.id}",
          title: "Delete note",
        )) do |dialog| %>
          <% dialog.with_show_button(
            scheme: :danger,
          ) { "Delete" } %>
          <%= form_for(
            note,
            url: update_path,
            method: :delete
          ) do |f| %>
            <%= render(Primer::Alpha::Dialog::Body.new) do %>
              Are you sure you want to delete this staff note?
            <% end %>
            <%= render(Primer::Alpha::Dialog::Footer.new) do %>
              <%= render(Primer::Beta::Button.new(
                type: :submit,
                scheme: :danger,
                "data-disable-with": ""
              )) { "Yes, delete note" } %>
            <% end %>
          <% end %>
        <% end %>

      <% end %>
    <% end %>
    <% component.with_row(classes: "Details-content--hidden") do %>
      <%= form_for(
        note,
        url: update_path,
        html: { id: "edit_note_#{note.id}" },
        method: :patch
      ) do |f| %>
        <% if note.is_pinned? %>
          <%= f.hidden_field(:is_pinned, value: true) %>
        <% end %>
        <dl class="form-group mt-0 mb-2">
          <dt><label for="note_<%= note.id %>_note">Edit note</label></dt>
          <dd>
            <%= f.text_area "note",
              id: "note_#{note.id}_note",
              autofocus: "",
              class: "form-control js-quick-submit",
              :'aria-label' => "staff note",
              value: note.note %>
          </dd>
        </dl>
        <div class="form-actions">
          <%= render Primer::Beta::Button.new(
            type: :submit,
            scheme: :primary,
            "data-disable-with": "",
          ) do %>Update note<% end %>
          <%= render Primer::Beta::Button.new(
            type: :button,
            classes: "js-details-target",
            "aria-expanded": "true",
          ) do %>Cancel<% end %>
        </div>
      <% end %>
    <% end %>
  <% end %>
</div>
