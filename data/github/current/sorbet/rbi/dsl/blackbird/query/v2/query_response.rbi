# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Blackbird::Query::V2::QueryResponse`.
# Please instead update this file by running `bin/tapioca dsl Blackbird::Query::V2::QueryResponse`.

class Blackbird::Query::V2::QueryResponse
  sig do
    params(
      count_mode: T.nilable(T.any(Symbol, Integer)),
      documents: T.nilable(T.any(Google::Protobuf::RepeatedField[Blackbird::Query::V2::GitDocumentMatch], T::Array[Blackbird::Query::V2::GitDocumentMatch])),
      metadata: T.nilable(Blackbird::Query::V2::Metadata),
      protected_organization_ids: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer])),
      query_errors: T.nilable(T.any(Google::Protobuf::RepeatedField[Blackbird::Query::V2::QueryError], T::Array[Blackbird::Query::V2::QueryError])),
      result_count: T.nilable(Integer),
      serving_offset_queried: T.nilable(Integer)
    ).void
  end
  def initialize(count_mode: nil, documents: T.unsafe(nil), metadata: nil, protected_organization_ids: T.unsafe(nil), query_errors: T.unsafe(nil), result_count: nil, serving_offset_queried: nil); end

  sig { void }
  def clear_count_mode; end

  sig { void }
  def clear_documents; end

  sig { void }
  def clear_metadata; end

  sig { void }
  def clear_protected_organization_ids; end

  sig { void }
  def clear_query_errors; end

  sig { void }
  def clear_result_count; end

  sig { void }
  def clear_serving_offset_queried; end

  sig { returns(T.any(Symbol, Integer)) }
  def count_mode; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def count_mode=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Blackbird::Query::V2::GitDocumentMatch]) }
  def documents; end

  sig { params(value: Google::Protobuf::RepeatedField[Blackbird::Query::V2::GitDocumentMatch]).void }
  def documents=(value); end

  sig { returns(T.nilable(Blackbird::Query::V2::Metadata)) }
  def metadata; end

  sig { params(value: T.nilable(Blackbird::Query::V2::Metadata)).void }
  def metadata=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def protected_organization_ids; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def protected_organization_ids=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Blackbird::Query::V2::QueryError]) }
  def query_errors; end

  sig { params(value: Google::Protobuf::RepeatedField[Blackbird::Query::V2::QueryError]).void }
  def query_errors=(value); end

  sig { returns(Integer) }
  def result_count; end

  sig { params(value: Integer).void }
  def result_count=(value); end

  sig { returns(Integer) }
  def serving_offset_queried; end

  sig { params(value: Integer).void }
  def serving_offset_queried=(value); end
end
