# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Dependencygraph::V0::DependencyReviewAvailable`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Dependencygraph::V0::DependencyReviewAvailable`.

class Hydro::Schemas::Github::Dependencygraph::V0::DependencyReviewAvailable
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      manifest_files: T.nilable(T.any(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::Dependencygraph::V0::DependencyReviewAvailable::ManifestFile], T::Array[Hydro::Schemas::Github::Dependencygraph::V0::DependencyReviewAvailable::ManifestFile])),
      pull_request: T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequest),
      repo: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)
    ).void
  end
  def initialize(actor: nil, manifest_files: T.unsafe(nil), pull_request: nil, repo: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_manifest_files; end

  sig { void }
  def clear_pull_request; end

  sig { void }
  def clear_repo; end

  sig do
    returns(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::Dependencygraph::V0::DependencyReviewAvailable::ManifestFile])
  end
  def manifest_files; end

  sig do
    params(
      value: Google::Protobuf::RepeatedField[Hydro::Schemas::Github::Dependencygraph::V0::DependencyReviewAvailable::ManifestFile]
    ).void
  end
  def manifest_files=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequest)) }
  def pull_request; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequest)).void }
  def pull_request=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)) }
  def repo; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)).void }
  def repo=(value); end
end
