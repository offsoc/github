# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GeneratedUrlHelpersModule`.
# Please instead update this file by running `bin/tapioca dsl GeneratedUrlHelpersModule`.

module GeneratedUrlHelpersModule
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionDispatch::Routing::PolymorphicRoutes

  sig { params(args: T.untyped).returns(String) }
  def _alive_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _chatops_backup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _chatops_code_scanning_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _chatops_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _chatops_dependabot_alerts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _chatops_dependency_graph_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _chatops_emus_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _chatops_fastly_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _chatops_features_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _chatops_geyser_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _chatops_ghas_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _chatops_gitcoin_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _chatops_memex_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _chatops_migrator_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _chatops_orgs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _chatops_queue_configs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _chatops_reachability_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _chatops_repos_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _chatops_resqued_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _chatops_search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _chatops_secret_scanning_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _chatops_spokes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _filter_labels_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _filter_labels_validate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _filter_languages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _filter_languages_validate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _filter_milestones_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _filter_milestones_validate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _filter_organizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _filter_organizations_validate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _filter_projects_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _filter_projects_validate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _filter_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _filter_repositories_validate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _filter_teams_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _filter_teams_validate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _filter_users_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _filter_users_validate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _graphql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _navigation_test_rails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _react_sandbox_alloy_show_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _react_sandbox_fetch_test_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _react_sandbox_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _react_sandbox_issues_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _react_sandbox_issues_show_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _react_sandbox_lazy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _react_sandbox_show_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _react_sandbox_ssr_error_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _system_test_entrypoint_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def _voltron_routes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def about_blacktocats_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def about_careers_remote_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def about_careers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def about_communities_of_belonging_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def about_developer_policy_news_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def about_developer_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def about_diversity_report_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def about_diversity_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def about_facts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def about_internships_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def about_jobs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def about_leadership_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def about_mentions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def about_milestones_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def about_press_satellite_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def about_press_universe_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def about_press_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def about_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def about_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def abuse_reporters_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def abuse_reports_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def accelerator_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def accept_attribution_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def accept_pending_enterprise_organization_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def accept_repository_advisory_credit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def accept_repository_advisory_pvd_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def accept_settings_org_app_transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def accept_settings_org_application_transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def accept_settings_user_app_transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def accept_settings_user_application_transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def accept_user_staff_access_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def access_to_alerts_actor_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def access_to_alerts_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def account_admin_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def account_choices_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def account_notifications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def account_organizations_access_list_members_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def account_organizations_plan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def account_organizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def account_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def account_tab_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def account_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def account_verifications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def accountless_confirm_account_verifications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def accounts_stafftools_enterprise_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def achievement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def achievement_visibility_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def achievements_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def action_invocation_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def action_invocation_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def action_repository_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_actors_menu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_artifacts_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_billing_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_branches_menu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_branches_select_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_cache_branches_menu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_caches_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_enable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_events_menu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_graph_job_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_graph_matrix_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_job_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_latest_runs_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_manual_run_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_manual_run_trigger_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_menu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_navigation_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_new_navigation_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_onboarding_filter_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_onboarding_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_performance_metrics_repo_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_performance_metrics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_policies_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_runners_github_hosted_runners_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_runners_repository_scale_sets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_runners_repository_self_hosted_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_runners_shared_runners_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_runners_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_secrets_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_self_hosted_runners_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_statuses_menu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_survey_dismiss_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_survey_open_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_usage_metrics_repo_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_usage_metrics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_variables_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_workflow_execution_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_workflow_run_artifacts_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_workflow_run_usage_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_workflow_schedules_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_workflows_menu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actions_workflows_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def activate_action_package_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def active_status_stafftools_enterprise_hook_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def active_users_stafftools_reports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def activities_visibility_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def activity_actors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def activity_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actors_api_org_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def acv_hovercard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def add_code_of_conduct_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def add_consented_permissions_codespaces_prebuild_configurations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def add_license_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def add_member_for_new_org_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def add_member_to_org_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def add_org_copilot_seat_management_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def add_org_copilot_seats_management_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def add_org_copilot_seats_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def add_org_role_assignment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def add_org_team_copilot_seat_management_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def add_org_teams_copilot_seat_management_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def add_owner_enterprise_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def add_owner_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def add_package_actions_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def add_package_codespaces_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def add_package_collaborator_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def add_queue_pattern_spamurai_patterns_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def add_repository_advisory_collaborator_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def add_repository_advisory_credit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def add_repository_member_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def additional_products_and_features_terms_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_center_options_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_disable_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_settings_change_actions_download_archive_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_settings_change_complete_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_settings_change_dependabot_access_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_settings_change_dotcom_contributions_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_settings_change_dotcom_private_search_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_settings_change_dotcom_search_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_settings_change_ghe_content_analysis_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_settings_change_license_usage_sync_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_settings_change_usage_metrics_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_settings_complete_dotcom_connection_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_settings_create_dotcom_connection_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_settings_delete_dotcom_connection_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_settings_dotcom_connection_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_settings_resume_dotcom_connection_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def advanced_search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def advanced_security_cancel_subscriptions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def advanced_security_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def advanced_security_new_custom_secret_scanning_pattern_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def advanced_security_security_features_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def advanced_security_subscriptions_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def advanced_security_subscriptions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def advanced_security_suggestion_flow_organizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def advanced_security_suggestion_flow_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def advanced_security_suggestion_flow_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def advanced_security_trials_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def advanced_security_trials_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def advanced_settings_org_application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def advanced_settings_user_application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def advisories_enterprise_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def advisories_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def advisory_hovercard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def advisory_workspace_merge_box_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def advisory_workspace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def age_of_alerts_enterprise_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def age_of_alerts_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alert_activity_enterprise_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alert_activity_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alert_trends_by_age_enterprise_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alert_trends_by_age_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alert_trends_by_severity_enterprise_security_center_metrics_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alert_trends_by_severity_enterprise_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alert_trends_by_severity_security_center_metrics_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alert_trends_by_severity_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alert_trends_by_status_enterprise_security_center_metrics_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alert_trends_by_status_security_center_metrics_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alert_trends_by_tool_code_scanning_enterprise_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alert_trends_by_tool_code_scanning_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alert_trends_by_tool_dependabot_alerts_enterprise_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alert_trends_by_tool_dependabot_alerts_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alert_trends_by_tool_secret_scanning_enterprise_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alert_trends_by_tool_secret_scanning_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alerts_fixed_enterprise_security_center_metrics_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alerts_fixed_security_center_metrics_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alerts_fixed_with_autofix_enterprise_security_center_metrics_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alerts_fixed_with_autofix_security_center_metrics_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alerts_found_enterprise_security_center_metrics_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alerts_found_security_center_metrics_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alerts_security_center_unified_alerts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alias_app_installation_action_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alias_app_installation_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alias_app_installations_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alias_app_installations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alias_app_select_target_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alias_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alive_web_socket_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def all_discussions_commented_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def all_discussions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def all_issues_assigned_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def all_issues_mentioned_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def all_issues_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def all_notifications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def all_organizations_stafftools_reports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def all_pulls_assigned_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def all_pulls_mentioned_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def all_pulls_review_requested_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def all_pulls_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def all_repositories_stafftools_reports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def all_users_stafftools_reports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def allow_permissions_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def allow_settings_sync_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def allowlist_stafftools_enterprise_spam_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def allowlist_stafftools_user_spam_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def analyze_language_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def announcement_discussions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def announcement_preview_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_org_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def app_identicon_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def app_install_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def app_learn_more_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apply_biztools_coupons_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def approve_2fa_removal_request_stafftools_user_two_factor_credential_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def approve_enterprise_domain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def approve_or_reject_gate_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def approve_org_domain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def approve_team_change_parent_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def approve_team_membership_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_copilot_pull_request_reviewer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_dependabot_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_desktop_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_feature_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_git_src_migrator_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_github_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_github_advanced_security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_github_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_github_copilot_pull_request_reviewer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_github_dependabot_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_github_git_src_migrator_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_github_github_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_github_github_advanced_security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_github_github_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_github_github_merge_queue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_github_github_pages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_github_github_project_automation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_github_merge_commit_update_refs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_github_merge_queue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_github_pages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_github_project_automation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_merge_commit_update_refs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apps_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def archive_memex_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def archive_org_project_card_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def archive_org_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def archive_repo_project_card_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def archive_stafftools_repository_large_file_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def archive_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def archive_user_project_card_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def archived_team_posts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def asset_alambic_file_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def asset_file_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def assignees_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def assignment_suggestions_enterprise_security_managers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def attach_to_stafftools_repository_network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def attestation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def attestations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def audit_log_stream_azure_blob_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def audit_log_stream_azure_blob_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def audit_log_stream_azure_hubs_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def audit_log_stream_azure_hubs_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def audit_log_stream_datadog_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def audit_log_stream_datadog_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def audit_log_stream_google_cloud_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def audit_log_stream_google_cloud_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def audit_log_stream_hec_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def audit_log_stream_hec_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def audit_log_stream_s3_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def audit_log_stream_s3_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def audit_log_stream_splunk_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def audit_log_stream_splunk_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def audit_log_streams_azure_blob_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def audit_log_streams_azure_hubs_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def audit_log_streams_datadog_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def audit_log_streams_google_cloud_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def audit_log_streams_hec_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def audit_log_streams_s3_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def audit_log_streams_splunk_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def auth_github_editor_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def auth_launch_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def auth_port_forwarding_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def auth_redirect_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def authorizations_stafftools_user_apps_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def authorize_page_id_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def authorize_reminder_slack_workspace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def auto_fork_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def auto_subscriptions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def autocomplete_org_users_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def autocomplete_organizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def autocomplete_repository_advisory_collaborator_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def autocomplete_repository_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def autocomplete_tracking_block_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def autocomplete_users_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def autofix_suggestions_enterprise_security_center_metrics_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def autofix_suggestions_enterprise_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def autofix_suggestions_security_center_metrics_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def autofix_suggestions_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def azure_authentications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def azure_exp_local_assignment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def azure_exp_local_assignments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def azure_linked_subscriptions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def azure_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def azure_subscriptions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def azure_tenants_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def badge_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def base_url_enterprise_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def beta_agree_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def beta_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def beta_thanks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def bill_pay_check_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def bill_pay_new_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billable_rollback_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_contact_link_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_contact_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_cost_management_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_create_external_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_data_plan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_delete_external_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_downgrade_data_plan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_downgrade_features_count_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_emails_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_external_emails_stafftools_user_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_extra_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_information_linking_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_managers_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_mark_primary_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_notifications_dismissals_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_payment_information_authenticate_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_sales_tax_exemptions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_self_serve_invoicing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_advanced_security_change_seats_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_advanced_security_seat_price_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_advanced_security_subscribe_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_advanced_security_upgrade_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_azure_subscriptions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_azure_tenants_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_billing_budget_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_billing_budget_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_change_plan_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_change_seats_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_members_can_make_purchases_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_one_time_payment_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_org_actions_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_org_codespaces_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_org_copilot_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_org_metered_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_org_packages_storage_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_org_packages_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_org_storage_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_org_usage_notification_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_payment_history_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_redeeem_coupon_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_seat_price_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_selected_azure_subscription_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_update_metered_via_azure_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_update_payment_information_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_update_payment_method_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_settings_upgrade_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_stripe_connect_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_stripe_platform_general_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_stripe_platform_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_update_primary_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_upgrade_data_plan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_upgrade_from_organization_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def billing_zuora_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_approve_creator_marketplace_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_approve_marketplace_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_business_redemptions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_business_revoke_coupon_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_cancel_subscriptions_marketplace_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_collections_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_coupon_groups_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_coupon_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_coupons_opensource_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_coupons_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_delist_marketplace_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_destroy_marketplace_recommendations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_edit_marketplace_category_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_edit_marketplace_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_feature_marketplace_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_feature_marketplace_story_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_marketplace_agreement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_marketplace_agreements_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_marketplace_categories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_marketplace_category_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_marketplace_creator_verification_show_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_marketplace_creator_verification_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_marketplace_creator_verification_verify_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_marketplace_featured_customers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_marketplace_listing_finance_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_marketplace_listing_hook_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_marketplace_listing_subscriptions_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_marketplace_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_marketplace_recommendations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_marketplace_stories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_marketplace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_move_to_verified_marketplace_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_new_marketplace_agreement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_new_marketplace_category_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_reindex_marketplace_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_reject_marketplace_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_repository_action_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_repository_action_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_repository_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_showcase_collection_healthcheck_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_showcase_collection_showcase_item_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_showcase_collection_showcase_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_showcase_collection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_showcase_collections_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_topics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_unfeature_marketplace_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_unfeature_marketplace_story_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_update_collection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_update_marketplace_recommendations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_update_topic_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_user_coupon_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_user_education_terms_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_user_redemptions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_users_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def biztools_works_with_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def blackbird_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def blame_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def blob_contributors_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def blob_contributors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def blob_excerpt_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def blob_expand_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def block_archive_download_stafftools_repository_network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def block_archive_download_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def block_archive_download_stafftools_user_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def block_from_comment_modal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def block_repository_inviter_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def block_stafftools_enterprise_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def blog_broadcasts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def blog_subscribe_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def blog_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def branch_authorization_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def branch_authorized_actor_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def branch_commits_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def branch_count_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def branch_delete_branch_dialog_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def branch_infobar_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def branch_protection_rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def branch_protection_rules_integration_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def branch_protection_rules_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def branch_rename_form_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def branch_required_status_context_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def branch_required_status_context_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def branch_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def branches_active_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def branches_all_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def branches_stale_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def branches_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def branches_yours_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def buildingthefuture_conrad_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def buildingthefuture_jamica_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def buildingthefuture_julius_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def buildingthefuture_tiffani_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def buildingthefuture_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def bulk_add_package_actions_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def bulk_add_package_codespaces_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def bulk_delete_enterprise_teams_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def bulk_force_sync_stafftools_subscription_sync_statuses_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def bulk_org_invitations_create_for_new_org_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def bulk_update_package_actions_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def bulk_update_package_collaborators_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_app_installation_action_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_app_installation_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_app_installations_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_app_installations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_app_select_target_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_custom_properties_create_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_custom_properties_destroy_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_custom_properties_usage_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_customer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_customers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_features_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_generate_copilot_csv_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_idm_sso_complete_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_idm_sso_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_idm_sso_modal_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_idm_sso_sign_up_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_idm_sso_status_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_owner_change_role_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_partners_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_receipt_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_self_serve_invoicing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_toggle_copilot_email_notifications_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_try_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_update_copilot_plan_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_update_pending_plan_change_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def business_why_github_for_work_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def c_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def calculate_cvss_score_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def callback_reminder_slack_workspace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def canary_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cancel_access_request_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cancel_alias_app_integration_installation_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cancel_business_app_integration_installation_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cancel_check_suite_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cancel_custom_pattern_dry_run_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cancel_external_app_integration_installation_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cancel_invitation_enterprise_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cancel_org_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cancel_org_seats_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cancel_pending_enterprise_organization_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cancel_successor_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cancel_team_change_parent_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cancel_transition_stafftools_enterprise_licensing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cancel_unlock_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cancel_user_app_integration_installation_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def careers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def case_studies_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def catalog_services_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def categories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def category_choices_discussions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def category_customer_stories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def category_discussions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def category_feed_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def category_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cc_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def certificate_status_stafftools_repository_pages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_actions_package_sharing_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_advanced_security_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_allow_force_push_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_anonymous_git_access_locked_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_anonymous_git_access_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_email_notifications_stafftools_user_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_environment_branch_policy_type_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_lock_disk_quota_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_max_object_size_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_owner_stafftools_project_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_package_active_sync_perms_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_package_visibility_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_password_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_plan_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_pull_base_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_root_stafftools_repository_network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_seat_limit_for_upgrades_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_sms_provider_stafftools_user_two_factor_credential_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_ssh_access_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_timeout_stafftools_repository_large_files_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_warn_disk_quota_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def charge_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def check_commit_quorum_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def check_for_rename_commits_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def check_indexing_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def check_key_links_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def check_otp_stafftools_user_two_factor_credential_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def check_password_reset_mobile_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def check_password_reset_otp_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def check_repo_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def check_repository_tag_protection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def check_run_item_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def check_run_live_logs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def check_run_logs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def check_run_show_checks_wait_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def check_run_show_header_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def check_run_show_toolbar_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def check_run_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def check_slug_stafftools_enterprises_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def check_step_logs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def check_suite_logs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def check_suite_show_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def check_tag_name_exists_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def check_tag_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def check_team_name_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def checks_annotations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def checks_state_summary_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def checks_statuses_batch_rollup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def checks_statuses_details_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def checks_statuses_rollup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def checks_summary_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def checks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def child_teams_stafftools_user_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def child_teams_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def children_stafftools_repository_network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def choose_category_discussion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def choose_issue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def choose_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cleanup_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cleanup_pull_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def clear_dependencies_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def clear_devtools_experiment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def clear_domain_stafftools_repository_pages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def clear_generated_pages_stafftools_repository_pages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def clear_merge_queue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def clear_org_dependencies_stafftools_dependency_graph_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def clear_snapshot_dependencies_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def clear_stafftools_merge_commit_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def client_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def clone_activity_data_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def clone_template_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def clones_next_data_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def clones_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def close_security_campaign_alerts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def close_window_prompt_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def closing_issue_reference_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def closing_issue_references_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def closing_issue_references_sidebar_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def closing_issue_references_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cloud_trial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def code_frequency_data_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def code_frequency_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def code_nav_definition_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def code_nav_react_definition_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def code_nav_react_references_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def code_nav_references_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def code_nav_symbols_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def code_of_conduct_tool_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def code_referencing_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def codeowners_badge_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def codeowners_validity_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def codespace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def codespaces_prebuild_configuration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def codespaces_prebuild_configurations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def codespaces_repository_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def codespaces_survey_dismiss_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def codespaces_survey_open_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def codespaces_user_secret_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def codespaces_user_secrets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def collaboration_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def collaborators_only_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def collection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def collections_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def command_palette_command_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def command_palette_provider_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def comment_header_reaction_button_discussion_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def comment_pull_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def commit_activity_data_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def commit_activity_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def commit_badges_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def commit_comment_actions_menu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def commit_comment_edit_form_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def commit_comment_minimize_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def commit_comment_unminimize_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def commit_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def commit_deferred_comment_data_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def commit_deferred_commit_data_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def commit_discussion_comments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def commit_inline_comments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def commit_package_description_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def commit_package_version_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def commit_rich_diff_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def commit_show_contents_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def commit_show_header_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def commit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def commits_feed_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def commits_list_item_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def community_graph_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def community_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def compact_associated_pulls_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def compare_branch_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def compare_commit_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def compare_file_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def compare_pr_templates_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def compare_repository_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def compare_rulesets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def compare_stafftools_user_oauth_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def compare_stafftools_user_personal_access_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def compare_start_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def compare_tag_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def compare_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def complete_enterprise_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def conduit_filter_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def conduit_for_you_feed_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def conduit_org_feeds_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def conduit_register_disinterest_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def conduit_topic_feeds_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def confirm_destroy_settings_org_pages_protected_domain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def confirm_destroy_settings_pages_protected_domain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def confirm_logout_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def confirm_pending_enterprise_organization_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def contact_default_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def contact_sales_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def contact_sales_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def contact_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def content_1_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def content_2_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def content_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def content_warning_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def contentful_e2e_test_do_not_remove_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def contentful_lp_tests_boomtown_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def context_lines_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def contexts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def contribute_page_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def contributions_data_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def contributions_stafftools_enterprise_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def contributors_graph_data_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def contributors_graph_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def contributors_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def contributors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def conversation_content_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def conversation_sidebar_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def convert_issue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def convert_labelled_issues_to_discussions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def convert_to_issue_memex_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_business_signup_choose_business_type_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_business_signup_choose_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_business_signup_choose_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_business_signup_completion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_business_signup_enterprise_payment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_business_signup_enterprise_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_business_signup_enterprise_seat_management_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_business_signup_organization_payment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_business_signup_organization_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_business_signup_organization_seat_management_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_business_signup_organization_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_business_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_chat_agents_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_chat_feedback_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_chat_jetbrains_waitlist_signup_create_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_chat_jetbrains_waitlist_signup_join_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_chat_jetbrains_waitlist_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_chat_reference_details_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_chat_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_chat_thread_clear_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_chat_thread_messages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_chat_thread_name_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_chat_thread_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_chat_threads_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_chat_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_chat_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_chat_visibility_setting_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_code_guideline_enablement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_code_guideline_playground_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_code_guideline_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_code_guidelines_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_code_referencing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_discussion_summaries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_discussion_summary_banner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_discussion_summary_feedback_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_enterprise_signup_choose_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_enterprise_signup_completion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_enterprise_signup_payment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_enterprise_signup_plan_summary_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_enterprise_signup_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_enterprise_signup_seat_management_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_enterprise_signup_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_enterprise_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_extensions_waitlist_signup_create_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_extensions_waitlist_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_fine_tuning_waitlist_signup_create_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_fine_tuning_waitlist_signup_join_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_fine_tuning_waitlist_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_for_docs_docsets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_for_enterprise_waitlist_signup_create_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_for_enterprise_waitlist_signup_join_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_for_enterprise_waitlist_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_free_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_immersive_docset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_immersive_repo_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_immersive_thread_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_immersive_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_job_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_next_edit_suggestions_waitlist_signup_create_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_next_edit_suggestions_waitlist_signup_join_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_next_edit_suggestions_waitlist_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_plan_purchase_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_pr_summary_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_pull_request_review_banner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_save_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_seat_management_bulk_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_seat_management_seats_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_signup_billing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_signup_business_choose_plan_type_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_signup_choose_plan_type_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_signup_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_signup_subscribe_free_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_signup_subscribe_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_signup_success_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_signup_upgrade_trial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_workspace_waitlist_signup_create_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_workspace_waitlist_signup_join_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copilot_workspace_waitlist_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copy_memex_project_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copy_org_memex_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def copy_user_memex_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cost_centers_list_enterprise_billing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def country_block_stafftools_user_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def counts_security_center_unified_alerts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_auto_merge_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_branch_for_issue_form_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_branch_for_issue_source_branch_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_branch_for_issue_target_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_branch_for_issue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_branch_source_branch_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_branch_target_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_branch_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_commit_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_custom_pattern_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_dependabot_rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_enterprise_from_coupon_check_slug_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_enterprise_from_coupon_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_environment_branch_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_file_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_global_advisory_improvement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_memex_chart_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_memex_column_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_memex_item_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_memex_items_bulk_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_memex_project_column_option_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_memex_project_workflow_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_memex_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_memex_template_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_memex_view_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_network_dependabot_run_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_notification_subscription_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_org_attribution_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_org_enterprise_purchase_upgrade_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_org_enterprise_trial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_org_enterprise_upgrade_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_org_memex_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_org_project_beta_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_org_runner_label_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_password_reset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_pinned_feed_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_playground_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_pull_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_release_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_repo_runner_label_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_repository_advisory_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_repository_advisory_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_repository_auto_codeql_modal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_repository_auto_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_repository_tag_protection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_review_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_review_request_new_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_review_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_security_campaign_alert_branch_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_security_campaigns_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_tag_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_team_notification_subscription_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_team_seats_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_user_project_beta_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def creators_biztools_repository_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def custom_message_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def custom_message_preview_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def custom_messages_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def custom_routing_settings_notification_preferences_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def customer_stories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def customer_story_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def customer_term_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def customer_term_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def customer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def customers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cwe_autocomplete_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cycle_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dashboard_ajax_context_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dashboard_ajax_my_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dashboard_ajax_your_teams_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dashboard_changelog_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dashboard_discover_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dashboard_dismiss_bootcamp_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dashboard_favorites_modal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dashboard_favorites_pinnable_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dashboard_favorites_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dashboard_issues_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dashboard_logged_out_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dashboard_my_top_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dashboard_news_feed_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dashboard_pinned_topics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dashboard_pulls_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dashboard_recent_activity_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dashboard_top_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dashboard_topic_feeds_search_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dashboard_topic_feeds_search_show_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dashboard_trending_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dashboards_audit_log_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def data_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def data_packs_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def database_stafftools_enterprise_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def database_stafftools_repository_discussion_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def database_stafftools_repository_discussion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def database_stafftools_repository_issue_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def database_stafftools_repository_issue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def database_stafftools_repository_pull_request_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def database_stafftools_repository_pull_request_orchestration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def database_stafftools_repository_pull_request_review_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def database_stafftools_repository_pull_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def database_stafftools_repository_repository_advisory_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def database_stafftools_repository_repository_advisory_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def database_stafftools_repository_repository_file_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def database_stafftools_repository_repository_orchestration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def database_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def database_stafftools_user_gpg_key_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def database_stafftools_user_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def debug_update_config_stafftools_repository_dependabot_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def decline_2fa_removal_request_stafftools_user_two_factor_credential_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def decline_repository_advisory_credit_and_block_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def decline_repository_advisory_credit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def default_branch_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def deferred_ast_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def deferred_branch_metadata_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def deferred_commit_contributors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def deferred_commit_data_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def deferred_metadata_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delay_settings_two_factor_checkup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_artifact_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_custom_pattern_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_custom_patterns_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_dependabot_rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_directory_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_enterprise_from_coupon_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_file_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_https_certificate_stafftools_repository_pages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_issue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_marketplace_action_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_org_copilot_seat_management_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_org_invitation_copilot_seat_management_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_org_memex_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_org_role_assignments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_org_team_copilot_seat_management_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_org_user_label_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_organization_member_privilege_ruleset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_organization_ruleset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_package_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_package_version_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_pending_marketplace_order_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_repository_advisory_workspace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_repository_ruleset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_repository_tag_protection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_settings_org_repository_roles_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_settings_org_roles_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_user_gist_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_user_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_user_memex_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_workflow_run_logs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delete_workflow_run_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def deleted_stafftools_user_gists_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delivery_payload_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def demote_owner_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def deny_team_membership_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def deny_user_staff_access_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dependabot_alert_hovercard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dependabot_rules_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dependencies_search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dependency_graph_package_hovercard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dependency_graph_sbom_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dependency_graph_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dependency_review_rich_diff_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def deploy_key_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def deploy_keys_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def deploy_keys_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def deployments_activity_log_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def deployments_environment_state_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def deployments_filter_suggestions_for_environments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def deployments_filter_suggestions_for_refs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def deployments_filter_suggestions_for_users_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def deployments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def deprovision_environment_stafftools_user_codespace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_actions_cache_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_announcement_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_auto_merge_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_branch_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_commit_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_confirmation_codespace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_directory_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_environment_branch_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_featured_customers_marketplace_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_file_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_member_for_new_org_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_memex_chart_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_memex_column_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_memex_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_memex_project_column_option_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_memex_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_memex_view_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_notification_subscriptions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_org_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_package_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_package_version_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_pinned_feed_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_refresh_codespace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_release_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_removed_member_notifications_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_repository_auto_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_repository_notification_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_review_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_standalone_seat_assignment_stafftools_copilot_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_team_member_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_team_membership_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_team_seats_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_team_teams_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_unlinked_external_identity_stafftools_enterprise_external_identities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def detach_stafftools_repository_network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def detect_blob_language_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def detect_gist_language_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def detect_manifests_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def developer_membership_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def developer_program_membership_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def developer_register_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def developer_stories_alicia_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def developer_stories_amy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def developer_stories_lisa_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def developer_stories_mario_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def developer_stories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def developer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def developers_stafftools_user_applications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def device_authorization_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def device_authorization_select_account_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def device_authorization_selected_account_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def device_authorize_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def device_failure_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def device_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def device_success_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_datadog_metric_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_experiment_mismatches_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_experiment_samples_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_experiment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_experiments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flag_activate_github_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flag_actor_percentage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flag_actor_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flag_add_actor_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flag_add_github_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flag_announce_changes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flag_announce_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flag_check_actor_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flag_delete_actor_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flag_delete_group_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flag_disable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flag_enable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flag_group_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flag_history_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flag_random_percentage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flag_remove_actor_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flag_synchronize_feature_flag_actors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flag_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flag_verify_actor_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flags_autocomplete_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flags_service_autocomplete_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flags_team_autocomplete_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flags_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_feature_flags_user_autocomplete_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_integration_feature_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_integration_features_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_reset_timestamp_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_restricted_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_spamurai_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_stream_processor_pause_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_stream_processor_resume_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_stream_processors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_survey_batch_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_survey_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_surveys_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_synchronize_actors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_toggle_mysql_flipper_forwarder_enabled_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_toggle_mysql_sync_enabled_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_toggleable_feature_publish_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_toggleable_feature_unpublish_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_toggleable_feature_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_toggleable_features_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def devtools_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def diff_lines_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def diff_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def diffs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def diffview_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def disable_job_info_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def disable_mandatory_email_verification_stafftools_user_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def disable_marketing_email_stafftools_user_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def disable_sample_devtools_experiment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def disable_spamurai_pattern_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def disable_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def disable_stafftools_user_auto_pay_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def disable_vulnerability_updates_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def disable_workflow_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discover_gists_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discover_people_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discover_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_actions_menu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_block_from_comment_modal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_body_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_category_menu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_category_pin_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_comment_actions_menu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_comment_count_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_comment_delete_content_modal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_comment_language_detections_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_comment_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_comment_threads_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_comment_unminimize_content_modal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_comment_vote_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_comment_votes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_comments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_events_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_form_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_header_reaction_button_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_issue_modal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_language_detections_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_layout_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_pages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_poll_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_poll_votes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_report_content_modal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_repository_transfer_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_repository_transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_sidebar_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_spotlight_preview_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_spotlight_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_spotlights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_timeline_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_title_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_unblock_from_comment_modal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussion_votes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussions_activity_indicator_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussions_author_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussions_badges_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussions_daily_contributors_data_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussions_label_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussions_labels_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussions_landing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussions_leaderboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussions_new_contributors_data_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussions_page_views_data_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussions_poll_preview_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussions_spotlight_positions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussions_votes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discussions_welcome_templates_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def disk_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dismiss_announcement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dismiss_auto_codeql_error_notice_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dismiss_banner_settings_account_two_factor_requirements_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dismiss_bootcamp_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dismiss_content_warning_banner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dismiss_issue_first_contribution_prompt_and_redirect_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dismiss_issue_first_contribution_prompt_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dismiss_list_help_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dismiss_marketplace_pending_installations_notice_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dismiss_notice_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dismiss_notice_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dismiss_notification_subscriptions_notice_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dismiss_org_notice_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dismiss_paused_banner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dismiss_protip_pull_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dismiss_repository_alert_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dismiss_repository_notice_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dismiss_review_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dismiss_security_configs_banner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dismiss_user_audit_log_survey_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dismiss_user_security_center_survey_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dmca_takedown_stafftools_user_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def domain_check_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def domain_status_stafftools_repository_pages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dormant_users_export_destroy_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dormant_users_export_destroy_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dormant_users_export_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dormant_users_export_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dormant_users_exports_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dormant_users_exports_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dormant_users_stafftools_reports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dotcom_connection_webhooks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dotfiles_repository_select_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def downgrade_with_exit_survey_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def download_active_committers_enterprise_licensing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def download_active_committers_stafftools_advanced_security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def download_active_committers_stafftools_user_advanced_security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def download_artifact_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def download_attestation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def download_consumed_licenses_enterprise_licensing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def download_dependency_snapshot_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def download_enterprise_pre_receive_environment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def download_maximum_committers_enterprise_licensing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def download_maximum_committers_stafftools_advanced_security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def download_maximum_committers_stafftools_user_advanced_security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def download_release_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def download_seat_management_usage_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def download_usage_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def download_user_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def duplicates_stafftools_user_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_achievement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_alias_app_installation_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_alias_app_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_announcement_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_azure_exp_local_assignments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_billing_settings_billing_budget_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_biztools_coupon_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_biztools_repository_action_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_biztools_showcase_collection_showcase_item_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_biztools_showcase_collection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_branch_protection_rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_business_app_installation_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_business_app_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_category_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_codespaces_prebuild_configuration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_codespaces_user_secret_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_contact_info_marketplace_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_copilot_code_guideline_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_dependabot_rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_description_marketplace_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_devtools_experiment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_devtools_feature_flag_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_devtools_integration_feature_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_devtools_toggleable_feature_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_discussion_comment_vote_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_discussion_poll_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_discussion_spotlight_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_discussion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_enterprise_announcement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_enterprise_billing_budget_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_enterprise_billing_contact_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_enterprise_billing_cost_center_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_enterprise_ip_allowlist_entry_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_enterprise_mandatory_message_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_enterprise_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_external_app_installation_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_external_app_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_extra_billing_info_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_featured_customers_marketplace_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_form_memex_item_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_form_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_issue_templates_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_key_link_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_marketplace_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_milestone_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_multi_checkout_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_org_announcement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_org_discussions_category_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_org_discussions_section_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_org_project_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_organization_ip_allowlist_entry_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_organization_settings_billing_budget_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_organization_settings_billing_cost_center_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_orgs_team_sync_okta_credentials_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_package_description_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_package_version_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_parent_dependabot_rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_password_reset_mobile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_password_reset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_regenerate_user_access_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_release_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_repo_project_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_repository_alert_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_repository_announcement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_repository_auto_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_repository_branches_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_repository_environment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_repository_notification_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_repository_tag_protection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_saved_reply_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_section_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_settings_billing_budget_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_settings_billing_cost_center_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_settings_email_subscriptions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_settings_network_configurations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_settings_org_apps_ip_allowlist_entry_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_settings_org_repository_roles_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_settings_org_roles_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_settings_packages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_settings_user_apps_ip_allowlist_entry_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_settings_virtual_network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_sponsorable_dashboard_goal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_sponsorable_dashboard_profile_featured_work_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_sponsorable_dashboard_profile_pinnable_repos_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_sponsorable_dashboard_tier_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_sponsorable_dashboard_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_sponsorable_dashboard_webhook_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_sponsorable_sponsorships_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_sponsorable_stripe_account_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_sponsors_bulk_sponsorship_imports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_stafftools_billing_product_pricing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_stafftools_billing_product_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_stafftools_codespaces_dial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_stafftools_compliance_report_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_stafftools_dependency_graph_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_stafftools_enterprise_agreement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_stafftools_enterprise_billing_bill_cycle_day_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_stafftools_enterprise_billing_budget_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_stafftools_enterprise_billing_education_configuration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_stafftools_enterprise_billing_plan_subscription_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_stafftools_hosted_compute_networking_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_stafftools_integration_installation_trigger_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_stafftools_seat_limits_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_stafftools_showcase_collection_showcase_item_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_stafftools_showcase_collection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_stafftools_sponsors_invoiced_sponsor_sponsorship_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_stafftools_user_achievement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_stafftools_user_copilot_seat_assignments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_stafftools_user_copilot_seats_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_stafftools_user_copilot_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_stafftools_user_copilot_usage_metrics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_stafftools_user_potential_sponsorship_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_team_review_assignment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_app_installation_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_app_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_move_work_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_project_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_wiki_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def editor_action_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def editor_actions_search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def editor_dev_containers_search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def editor_dev_containers_show_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edits_log_discussion_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edits_log_discussion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edits_menu_discussion_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edits_menu_discussion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edu_partners_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edu_schools_terms_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edu_schools_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edu_students_experts_terms_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edu_students_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edu_teachers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def education_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def email_check_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def email_claim_resend_verification_stafftools_user_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def email_identicon_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def email_mute_via_footer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def email_mute_via_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def email_mute_vulnerabilities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def email_optin_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def email_preferences_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def email_subscribe_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def email_unlink_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def email_unlink_send_verification_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def email_unlink_submit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def email_unsubscribe_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def email_validity_checks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def emails_stafftools_enterprise_billing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def emoji_picker_categories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def emoji_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def emojis_for_editor_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enable_code_search_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enable_dependency_graph_and_vulnerability_alerts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enable_spamurai_pattern_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enable_stafftools_user_application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enable_stafftools_user_auto_pay_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enable_tos_prompt_biztools_users_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enable_workflow_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enabled_feature_flags_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enablement_trends_enterprise_security_center_metrics_enablement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enablement_trends_security_center_metrics_enablement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enqueue_copilot_prompt_experiment_security_center_alert_prioritization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enqueue_dotcom_sync_stafftools_vulnerabilities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enqueue_user_accounts_uploads_stafftools_enterprise_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_admin_details_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_admin_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_admin_invitations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_admin_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_admin_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_admins_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_advanced_security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_advanced_security_what_is_github_advanced_security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_announcement_dismissal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_announcement_preview_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_announcement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_available_licenses_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_billing_budget_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_billing_budgets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_billing_contact_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_billing_contacts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_billing_cost_center_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_billing_cost_centers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_billing_discounts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_billing_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_billing_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_billing_manager_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_billing_marketplace_apps_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_billing_past_invoices_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_billing_payment_history_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_billing_payment_information_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_billing_products_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_billing_shipping_information_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_billing_shipping_information_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_billing_skus_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_billing_sponsorships_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_billing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_billing_usage_report_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_billing_usage_report_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_billing_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_cancel_pending_invitations_dialog_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_cancelable_pending_admins_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_cancelable_pending_collaborators_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_cancelable_pending_members_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_cancelable_pending_unaffiliated_members_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_check_slug_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_compliance_report_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_contact_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_copilot_permission_to_assign_seats_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_domain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_domains_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_enterprise_installations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_failed_invitation_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_failed_invitations_action_dialog_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_failed_invitations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_getting_started_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_hosted_compute_networking_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_idp_ip_allowlist_for_web_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_installations_enterprise_user_account_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_invited_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_ip_allowlist_app_access_enabled_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_ip_allowlist_configuration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_ip_allowlist_enabled_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_ip_allowlist_entries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_ip_allowlist_entry_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_ip_allowlist_user_level_enforcement_enabled_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_legal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_license_count_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_licensing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_long_description_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_mandatory_message_preview_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_mandatory_message_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_marketing_page_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_member_details_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_member_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_member_invitee_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_members_search_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_migrating_to_github_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_notice_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_notification_restrictions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_onboarding_organizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_onboarding_tasks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_open_scim_configuration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_org_filter_menu_content_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_organization_counters_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_organization_invitations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_organization_member_invitations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_organization_settings_menu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_organization_transfers_enterprise_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_organization_transfers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_organizations_setting_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_organizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_outside_collaborator_details_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_outside_collaborator_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_outside_collaborators_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_owner_invitation_redirect_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_owner_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_pending_admin_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_pending_admins_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_pending_collaborator_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_pending_collaborators_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_pending_invitation_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_pending_member_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_pending_members_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_pending_unaffiliated_member_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_pending_unaffiliated_members_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_people_bulk_action_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_people_bulk_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_people_count_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_person_enterprise_installations_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_person_organizations_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_person_revoke_sso_session_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_person_revoke_sso_token_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_person_sso_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_person_teams_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_person_unlink_identity_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_pre_receive_environment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_pre_receive_environments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_pre_receive_hook_target_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_pre_receive_hook_targets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_pre_receive_hook_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_referrer_override_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_scim_configuration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_security_center_metrics_codeql_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_security_center_metrics_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_security_center_metrics_enablement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_security_center_metrics_secret_scanning_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_security_manager_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_security_managers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_skip_idp_ip_allowlist_app_access_enabled_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_slug_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_ssh_certificate_authority_owner_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_sso_redirect_enabled_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_startups_acceptance_page_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_startups_page_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_startups_partners_page_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_startups_thanks_page_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_support_entitlee_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_support_entitlee_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_support_entitlees_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_support_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_suspended_members_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_team_member_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_team_member_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_team_members_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_teams_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_trial_accounts_check_billing_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_trial_accounts_check_shortcode_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_trial_accounts_check_slug_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_trial_accounts_create_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_trial_accounts_new_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_trial_accounts_new_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_trial_callback_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_trial_page_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_trial_redirect_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_trial_start_page_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_two_factor_requirement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_unowned_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_unowned_organizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_user_namespace_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_user_namespace_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_users_export_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprise_users_export_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprises_azure_callback_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprises_oauth_callback_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def enterprises_team_sync_azure_callback_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def environment_actions_enterprise_pre_receive_environment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def environment_deployments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def environment_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def event_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def events_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def events_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def exclude_dependency_snapshot_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def expanded_assets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def expanded_card_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def expiration_stafftools_user_personal_access_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def explore_subscribe_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def explore_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def export_codespace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def export_control_codespace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def export_enterprise_licensing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def export_stafftools_enterprise_licensing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def exported_codespace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def external_app_installation_action_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def external_app_installation_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def external_app_installations_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def external_app_installations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def external_app_select_target_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def external_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def external_group_members_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def external_group_members_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def external_group_members_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def external_group_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def external_group_teams_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def external_groups_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def external_groups_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def external_groups_stafftools_user_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def extract_stafftools_repository_network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def fail_environment_stafftools_user_codespace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def failed_invitations_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def feature_preview_indicator_check_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def feature_previews_enroll_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def feature_previews_unenroll_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def feature_previews_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def featured_biztools_showcase_collection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def featured_stafftools_showcase_collection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_actions_getting_started_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_actions_importer_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_code_review_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_code_search_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_code_search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_copilot_getting_started_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_copilot_getting_started_visual_studio_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_copilot_org_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_copilot_plans_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_copilot_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_discussions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_integrations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_issues_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_package_registry_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_packages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_preview_azure_virtual_networks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_preview_copilot_customization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_preview_copilot_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_preview_copilot_partner_program_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_preview_copilot_x_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_preview_emu_non_members_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_preview_security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_preview_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_project_management_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_security_advanced_security_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_security_code_scanning_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_security_code_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_security_software_supply_chain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def features_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def feed_post_comment_update_reaction_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def feed_post_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def feed_post_comments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def feed_post_embed_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def feed_post_tags_menu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def feed_post_update_reaction_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def feed_post_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def feed_posts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def fetch_and_merge_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def file_contributors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def file_edit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def file_list_enterprise_pre_receive_hook_targets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def file_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def file_save_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def files_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def filter_suggestions_labels_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def filter_suggestions_languages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def filter_suggestions_milestones_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def filter_suggestions_projects_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def filter_suggestions_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def filter_suggestions_teams_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def filter_suggestions_users_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def find_coupon_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def find_settings_network_configurations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def finish_enterprise_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def first_stafftools_repository_issue_comments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def first_stafftools_repository_pull_request_comments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def fix_issue_transfers_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def flag_all_stafftools_user_spam_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def flavored_contact_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def follow_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def force_cancel_check_run_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def force_cancel_suite_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def fork_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def fork_select_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def fork_user_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def forked_gists_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def forkqueue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def forks_default_options_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def forks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def forks_user_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def forms_fork_owner_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def forms_owner_detail_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def forms_owner_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def forrester_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def frequently_asked_questions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def fsck_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def full_associated_pulls_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def funding_links_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def generate_client_secret_settings_app_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def generate_client_secret_settings_org_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def generate_client_secret_settings_org_application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def generate_client_secret_settings_user_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def generate_client_secret_settings_user_application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def generate_key_settings_app_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def generate_key_settings_org_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def generate_key_settings_user_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def generate_notes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def get_custom_pattern_alert_metrics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def get_custom_pattern_dry_run_results_by_cursor_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def get_custom_pattern_form_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def get_custom_pattern_push_protection_metrics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def get_generated_expressions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def get_memex_item_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def get_package_url_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def get_repos_org_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def get_search_settings_codespaces_orgs_enablement_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def get_search_settings_copilot_orgs_enablement_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def get_started_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def getting_started_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_add_repository_advisory_credit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_branch_rename_form_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_branch_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_clones_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_contributors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_deployments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_destroy_branch_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_fork_network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_network_dependencies_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_network_dependents_package_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_pages_certificate_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_pages_domain_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_pages_https_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_pages_request_https_certificate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_pages_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_pulse_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_repo_abort_transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_repo_comments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_repo_rename_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_repo_transfer_team_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_repo_transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_repository_advisory_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_repository_languages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gh_watchers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ghas_trial_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ghost_pilot_completions_feedback_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ghost_pilot_completions_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ghost_pilot_completions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ghost_pilot_diff_summary_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ghost_pilot_issue_summary_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ghost_pilot_recent_interactions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gist_diffview_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gist_notifications_indicator_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gist_notifications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gist_quicksearch_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gist_search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gist_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gists_previews_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gists_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def git_guide_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def git_guides_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def git_signing_ssh_public_key_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def github_addendum_to_microsoft_dpa_customer_term_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def github_and_vscode_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def github_community_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def github_copilot_copilot_for_enterprise_waitlist_signup_join_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def github_copilot_copilot_for_enterprise_waitlist_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def github_copilot_customization_waitlist_signup_join_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def github_copilot_customization_waitlist_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def github_copilot_next_edit_suggestions_signup_join_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def github_copilot_next_edit_suggestions_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def github_copilot_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def github_copilot_workspace_signup_join_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def github_copilot_workspace_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def github_mobile_navigating_away_metrics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def github_mobile_two_factor_prompt_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def github_mobile_two_factor_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def github_mobile_verified_device_prompt_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def github_mobile_verified_device_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def github_stafftools_user_applications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def github_subprocessors_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gitignore_template_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gitignore_templates_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def global_advisories_cwe_filter_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def global_advisories_organization_filter_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def global_advisories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def global_advisory_dependabot_alerts_count_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def global_advisory_dependabot_alerts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def global_advisory_history_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def global_advisory_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def globe_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def golden_ticket_confirm_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def goto_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gpg_key_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def gpg_keys_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def graphql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def graphs_impact_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def group_sync_status_stafftools_user_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def grouped_repository_alert_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def groups_security_center_unified_alerts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def growth_member_feature_request_dismissal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def growth_notice_dismissals_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guest_collaborators_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_addressing_authentication_problems_with_ssh_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_change_author_details_in_commit_history_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_changing_a_series_of_commits_or_patches_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_changing_your_origin_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_compiling_and_installing_git_on_mac_os_x_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_compiling_git_on_os_x_leopard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_completely_remove_a_file_from_all_revisions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_copy_a_remote_branch_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_dealing_with_errors_when_pushing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_dealing_with_firewalls_and_proxies_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_dealing_with_newlines_in_git_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_deploying_with_capistrano_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_developing_with_submodules_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_disaster_faq_what_to_do_when_github_goes_bad_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_feature_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_fork_a_project_and_submit_your_modifications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_get_git_on_mac_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_git_cheat_sheet_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_git_podcasts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_git_screencasts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_github_bugs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_how_do_i_delete_a_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_how_to_clone_from_github_with_ssh_tunnels_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_how_to_move_a_repo_to_another_account_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_how_to_not_have_to_type_your_password_for_every_push_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_how_to_transparently_clone_from_github_with_ssh_tunnels_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_i_m_missing_my_gravatar_icon_on_my_commits_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_ignore_for_git_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_import_an_existing_git_repo_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_import_from_subversion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_issues_with_textmate_set_as_git_editor_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_keeping_a_git_fork_in_sync_with_the_forked_repo_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_local_github_config_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_managing_multiple_clients_and_their_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_multiple_github_accounts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_pages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_providing_your_ssh_key_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_pull_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_push_a_branch_to_github_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_push_tags_to_github_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_put_your_git_branch_name_in_your_shell_prompt_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_readme_formatting_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_rebase_howto_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_remove_a_remote_branch_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_rename_a_remote_branch_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_setting_up_a_remote_repository_using_github_and_osx_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_syntax_highlighting_isn_t_working_for_my_language_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_tell_git_your_user_name_and_email_address_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_textile_formatting_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_the_github_api_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_understanding_deploy_keys_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_using_git_and_github_for_the_windows_for_newbies_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def guides_using_the_egit_eclipse_plugin_with_github_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def heal_check_suite_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def help_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def hide_from_discovery_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def hide_from_google_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def hide_in_progress_message_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def hide_success_message_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def home_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def homepage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def hook_deliveries_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def hook_deliveries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def hook_delivery_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def hook_delivery_payload_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def hook_delivery_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def hook_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def hook_redeliveries_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def hook_redeliveries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def hooks_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def hovercard_discussion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def hovercard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def hovercards_enabled_settings_accessibility_preferences_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def hovercards_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def https_status_stafftools_repository_pages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def hyperlist_new_issue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def identicon_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def idm_oidc_initiate_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def idm_oidc_initiate_sso_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def idm_oidc_recover_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def idm_oidc_revoke_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def idm_saml_consume_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def idm_saml_continue_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def idm_saml_enc_cert_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def idm_saml_initiate_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def idm_saml_initiate_sso_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def idm_saml_metadata_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def idm_saml_recover_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def idm_saml_revoke_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ignore_upgrade_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ignore_upgrade_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def import_biztools_collections_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def import_biztools_topics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def import_repository_tag_protection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def in_memory_devtools_feature_flags_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def in_sudo_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inbox_sent_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inbox_toggle_feature_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def inbox_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def increment_git_cache_stafftools_repository_network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def indexnow_api_key_placeholder_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def insights_auth_and_config_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def install_marketplace_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def installations_api_org_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def integrations_hovercard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def internal_feedback_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def internal_repo_search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def interrupt_settings_account_two_factor_requirements_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def introduced_prevented_enterprise_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def introduced_prevented_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def investigate_stafftools_subscription_sync_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def investigate_stafftools_vss_subscription_event_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def invitation_opt_outs_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def invitations_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def invite_enterprise_onboarding_organizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def invite_enterprise_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def invite_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def invitee_suggestions_enterprise_member_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def invoice_payment_method_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def invoice_payment_method_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def invoice_signature_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def invoice_signature_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ip_allowlist_checks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def issue_comment_actions_menu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def issue_comment_edit_form_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def issue_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def issue_comments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def issue_conversation_content_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def issue_conversation_sidebar_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def issue_layout_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def issue_summary_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def issue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def issues_assigned_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def issues_body_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def issues_created_by_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def issues_index_voltron_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def issues_labels_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def issues_load_more_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def issues_mentioned_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def issues_toggle_experience_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def issues_transfer_form_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def issues_transfer_form_possible_repositories_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def issues_unread_timeline_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def issues_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def job_rerun_dialogs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def job_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def join_plan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def join_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def key_link_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def key_links_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def keyboard_settings_accessibility_preferences_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def kill_session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def kill_sudo_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def lab_copilot_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def lab_editor_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def lab_layout_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def lab_typography_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def lab_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def label_preview_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def label_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def labels_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def labs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def languages_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def larger_runners_manage_beta_features_stafftools_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def latest_commit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def latest_release_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def latest_run_status_codespaces_prebuild_configuration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def launch_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ldap_stafftools_users_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def learn_devops_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def learn_forrester_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def learn_security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def learn_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def leave_org_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def leave_repo_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def leave_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def legacy_repository_file_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def legacy_user_file_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def license_tool_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def link_underlines_settings_accessibility_preferences_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def linked_closing_reference_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def linked_external_members_stafftools_enterprise_external_identities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def linked_saml_orgs_stafftools_enterprise_external_identities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def list_accounts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def list_group_mappings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def list_keys_settings_app_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def list_keys_settings_org_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def list_keys_settings_user_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def llama2_request_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def llama2_show_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def localization_translations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def lock_billing_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def lock_commit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def lock_discussion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def lock_for_migration_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def lock_issue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def lock_stafftools_repository_discussion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def lock_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def login_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def logos_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def lookup_stafftools_reused_card_fingerprints_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def low_risk_sudo_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mac_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mailers_unsubscribe_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def maintain_tracking_ref_stafftools_repository_pull_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def make_primary_stafftools_search_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def make_private_settings_org_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def make_private_settings_user_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def make_public_settings_org_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def make_public_settings_user_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def make_public_user_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def manage_marketplace_listings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def manual_payment_accounts_stafftools_enterprises_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mark_as_answer_discussion_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mark_as_broken_stafftools_gist_maintenance_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mark_as_broken_stafftools_repository_network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mark_as_broken_stafftools_user_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mark_list_notifications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mark_notification_as_unread_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mark_notifications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mark_primary_enterprise_billing_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def markdown_preview_issue_template_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_action_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_action_versions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_actions_agreement_signatures_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_actions_usable_icons_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_agreement_signatures_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_autocomplete_user_orgs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_category_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_free_trials_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_listing_admin_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_listing_delivery_payload_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_listing_hook_deliveries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_listing_hook_delivery_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_listing_hook_redeliveries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_listing_hook_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_listing_insights_inactive_customers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_listing_insights_transactions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_listing_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_listing_insights_visitor_graph_data_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_listing_plan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_listing_plans_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_listing_preview_plan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_listing_redeliver_hook_delivery_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_listing_screenshot_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_listing_screenshots_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_listing_sync_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_model_feedback_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_model_playground_code_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_model_playground_json_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_model_playground_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_model_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_models_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_models_waitlist_create_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_models_waitlist_join_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_models_waitlist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_order_preview_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_order_purchase_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_order_upgrade_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_order_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_pending_installations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_pending_orders_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_plan_upgrade_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_preview_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_search_results_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_suggested_publishers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def marketplace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mean_time_to_remediate_enterprise_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mean_time_to_remediate_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def member_feature_requests_subscribe_organization_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def member_statuses_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def members_export_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def members_stafftools_user_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def members_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def members_toolbar_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_acknowledge_completion_migration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_cancel_migration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_charts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_collaborators_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_column_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_columns_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_comment_on_sidepanel_item_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_edit_sidepanel_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_get_organization_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_get_sidepanel_item_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_item_suggested_assignees_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_item_suggested_issue_types_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_item_suggested_labels_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_item_suggested_milestones_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_items_tracked_by_parent_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_legacy_archive_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_legacy_archived_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_org_templates_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_project_default_workflows_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_project_migration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_project_workflow_configurations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_project_workflows_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_remove_collaborators_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_retry_migration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_sidepanel_item_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_statuses_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_suggested_collaborators_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_suggested_copy_organizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_update_collaborators_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_update_organization_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_update_sidepanel_item_reaction_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_update_sidepanel_item_state_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memex_update_sidepanel_item_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def menu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def merge_advisory_workspace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def merge_button_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def merge_pull_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def merge_queue_beta_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def merge_queue_entries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def merge_queue_entry_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def merge_queue_entry_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def merge_queue_queue_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def merge_queue_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def merge_queue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def metered_billing_costs_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def metered_billing_costs_usage_notification_settings_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def metered_export_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def metered_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def metered_exports_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def metered_exports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def metered_server_license_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def metered_server_licenses_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def migrate_legacy_admin_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def migrate_to_enterprise_teams_copilot_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def migrate_to_immutable_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def migration_override_stafftools_user_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def milestone_issues_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def milestone_paginated_issues_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def milestone_query_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def milestone_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def milestones_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mine_forked_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mine_starred_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def minimize_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def minimize_discussion_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def minimize_form_discussion_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mint_cascade_token_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mirrors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mobile_revoke_settings_session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mobile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def model_org_seats_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mona_sans_playground_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mona_sans_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def most_prevalent_rules_enterprise_security_center_metrics_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def most_prevalent_rules_security_center_metrics_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def motion_settings_accessibility_preferences_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def move_work_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def multiple_stafftools_user_retired_namespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def my_bio_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def my_forks_menu_content_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def my_gist_listings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def nested_comments_stafftools_repository_discussion_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def net_resolve_rate_enterprise_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def net_resolve_rate_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def net_usage_enterprise_billing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def net_usage_stafftools_enterprise_billing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def network_alerts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def network_apply_dependabot_repository_access_recommendations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def network_chunk_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def network_dependabot_jobs_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def network_dependabot_show_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def network_dependabot_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def network_dependencies_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def network_dependents_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def network_enable_dependabot_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def network_members_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def network_meta_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def network_sub_dependencies_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_achievement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_alias_app_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_billing_settings_billing_budget_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_biztools_coupon_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_biztools_showcase_collection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_branch_protection_rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_business_app_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_category_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_code_referencing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_codespace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_codespaces_prebuild_configuration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_codespaces_user_secret_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_copilot_code_guideline_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_custom_pattern_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_dependabot_rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_devtools_experiment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_devtools_feature_flag_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_devtools_integration_feature_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_devtools_toggleable_feature_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_discussion_comment_vote_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_discussion_spotlight_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_discussion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_enterprise_billing_budget_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_enterprise_billing_contact_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_enterprise_billing_cost_center_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_enterprise_domain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_enterprise_from_coupon_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_enterprise_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_enterprise_ip_allowlist_entry_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_enterprise_onboarding_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_enterprise_organization_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_enterprise_organization_transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_enterprise_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_enterprise_pre_receive_environment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_enterprise_pre_receive_hook_target_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_enterprise_team_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_external_app_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_extract_stafftools_repository_network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_file_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_from_manifest_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_global_advisory_improvement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_hook_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_issue_from_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_issue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_key_link_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_marketplace_listing_plan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_marketplace_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_marketplace_listing_with_integratable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_milestone_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_nux_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_org_discussion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_org_discussions_category_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_org_discussions_section_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_org_domain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_org_enterprise_purchase_upgrade_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_org_enterprise_trial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_org_enterprise_upgrade_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_org_move_work_choose_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_org_move_work_confirmation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_org_project_linkable_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_org_project_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_org_reminder_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_org_sponsoring_invoice_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_org_sponsoring_invoiced_billing_account_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_organization_hook_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_organization_ip_allowlist_entry_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_organization_repository_import_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_organization_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_organization_ruleset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_organization_settings_billing_budget_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_organization_settings_billing_cost_center_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_orgs_team_sync_okta_credentials_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_personal_reminder_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_private_network_settings_network_configurations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_project_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_pull_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_release_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_repo_project_issues_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_repo_project_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_repository_advisory_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_repository_environment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_repository_hook_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_repository_import_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_repository_ruleset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_repository_tag_protection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_section_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_app_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_billing_budget_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_billing_cost_center_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_email_subscriptions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_keys_gpg_key_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_keys_ssh_key_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_link_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_orcid_connection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_org_app_from_manifest_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_org_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_org_application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_org_apps_ip_allowlist_entry_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_org_pages_protected_domain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_org_repository_roles_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_org_roles_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_packages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_pages_protected_domain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_user_access_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_user_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_user_application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_user_apps_ip_allowlist_entry_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_user_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_virtual_network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_spamurai_pattern_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_sponsorable_dashboard_goal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_sponsorable_dashboard_tier_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_sponsorable_dashboard_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_sponsorable_dashboard_webhook_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_sponsors_bulk_sponsorship_imports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_billing_iap_apple_lookup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_billing_iap_google_lookup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_billing_onboard_billing_platform_customer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_billing_product_pricing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_billing_product_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_compliance_report_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_dependency_graph_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_enterprise_agreement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_hosted_compute_networking_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_integration_installation_trigger_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_search_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_showcase_collection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_sponsors_agreement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_sponsors_invoiced_sponsor_sponsorship_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_sponsors_invoiced_sponsor_transfer_reversal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_sponsors_invoiced_sponsor_transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_sponsors_stripe_invoice_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_user_achievement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_user_copilot_seat_assignments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_user_copilot_seats_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_user_copilot_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_user_copilot_usage_metrics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_stafftools_user_potential_sponsorship_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_team_reminder_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_app_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_move_work_choose_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_move_work_confirmation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_move_work_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_project_linkable_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_wiki_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_with_branch_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_with_nwo_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_with_pull_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def newsletter_preferences_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def newsroom_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def nil_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def nl_github_search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def no_content_tabs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def no_content_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def nonprofit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notice_dismissal_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notification_beacon_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notification_beta_redirect_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notification_shelf_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notification_subscription_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notification_subscriptions_repository_filter_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notification_subscriptions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notification_watch_subscription_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_archive_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_create_custom_inbox_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_custom_inboxes_dialog_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_delete_custom_inbox_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_dismiss_unwatch_suggestion_alert_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_mark_as_archived_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_mark_as_read_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_mark_as_starred_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_mark_as_subscribed_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_mark_as_unarchived_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_mark_as_unread_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_mark_as_unstarred_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_mark_as_unsubscribed_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_mark_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_notifications_exist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_recent_notifications_alert_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_redirect_all_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_redirect_participating_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_redirect_read_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_redirect_saved_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_set_preferred_inbox_query_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_star_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_subscribe_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_suggested_authors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_suggested_owners_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_suggested_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_unarchive_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_unmark_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_unstar_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_unsubscribe_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_update_custom_inbox_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_update_view_preference_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_beta_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_ci_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_comment_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_digest_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_indicator_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_one_click_unsubscribe_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_pull_request_push_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_pull_request_review_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_repo_owners_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_restriction_banner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_subscribe_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_thread_subscribe_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_thread_subscription_dialog_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_thread_subscription_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_update_subscription_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_v2_archive_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_v2_create_custom_inbox_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_v2_delete_custom_inbox_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_v2_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_v2_mark_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_v2_star_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_v2_subscribe_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_v2_unarchive_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_v2_unmark_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_v2_unstar_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_v2_unsubscribe_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_v2_update_custom_inbox_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_v2_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_vulnerability_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_vulnerability_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def nux_signup_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def oauth_access_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def oauth_account_picker_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def oauth_application_policy_confirm_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def oauth_authorize_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def oauth_callback_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def oauth_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def oauth_select_account_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def oauth_success_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def oidc_auth_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def oidc_provider_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def oidc_recover_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def onboard_larger_runners_stafftools_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def open_new_issue_modal_discussion_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def open_repository_advisory_workspace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def open_source_stories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def open_source_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def opt_in_settings_email_subscriptions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def opt_in_stafftools_repository_recommendations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def opt_in_to_view_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def opt_out_stafftools_repository_recommendations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_accept_billing_manager_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_accept_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_actions_repo_dialog_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_actions_repo_policies_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_activity_metrics_org_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_announcement_preview_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_application_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_application_approval_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_attribution_invitations_target_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_attribution_invitations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_audit_log_event_settings_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_audit_log_event_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_audit_log_export_create_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_audit_log_export_logs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_audit_log_export_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_audit_log_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_audit_log_git_event_export_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_audit_log_git_event_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_bill_pay_new_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_billing_data_plan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_billing_downgrade_data_plan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_billing_manager_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_billing_manager_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_billing_manager_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_billing_managers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_billing_upgrade_data_plan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_card_pull_request_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_cc_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_choose_category_discussion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_compliance_report_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_consumed_licenses_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_copilot_add_users_csv_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_copilot_confirm_users_csv_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_copilot_generate_csv_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_copilot_seat_management_all_filter_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_copilot_seat_management_all_search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_copilot_seat_management_filter_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_copilot_seat_management_search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_copilot_seat_permissions_json_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_copilot_seat_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_copilot_send_invitations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_custom_properties_create_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_custom_properties_destroy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_custom_properties_repos_property_values_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_custom_properties_show_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_custom_properties_update_repos_properties_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_custom_properties_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_custom_properties_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_customize_member_privileges_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_cycle_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_destroy_announcement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_destroy_failed_invitations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_destroy_invitations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_destroy_owners_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_destroy_people_dialog_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_destroy_people_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_destroy_removed_member_notifications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_destroy_teams_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_discussion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_discussions_author_filter_content_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_discussions_categories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_discussions_category_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_discussions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_dismiss_project_notice_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_domain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_domains_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_downgrade_with_exit_survey_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_download_active_committers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_download_repository_active_committers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_edit_email_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_edit_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_email_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_enterprise_billing_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_enterprise_owners_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_enterprise_plan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_extra_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_failed_invitation_toolbar_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_failed_invitations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_followers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_guest_collaborators_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_idm_saml_consume_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_idm_saml_continue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_idm_saml_initiate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_idm_saml_metadata_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_idm_saml_recover_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_idm_saml_revoke_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_idm_sso_complete_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_idm_sso_modal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_idm_sso_sign_up_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_idm_sso_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_idm_sso_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_interaction_limits_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_invitation_opt_out_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_invitations_action_dialog_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_invitations_create_for_new_org_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_invitations_invitee_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_invitations_licensing_details_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_invitations_member_adder_add_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_invitations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_issue_trend_data_org_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_issue_ttr_data_org_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_issues_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_licensing_headroom_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_member_details_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_member_feature_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_members_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_members_toolbar_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_memex_assets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_memex_count_issues_and_pulls_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_memex_dismiss_legacy_org_banner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_memex_dismiss_notice_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_memex_filter_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_memex_search_issues_and_pulls_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_memex_search_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_memex_stats_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_memex_suggested_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_memex_without_limits_beta_optout_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_memex_without_limits_beta_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_metered_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_metered_exports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_metrics_org_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_migrate_overview_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_migrate_owners_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_most_used_topics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_move_work_choose_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_move_work_choose_resources_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_move_work_confirmation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_move_work_memex_projects_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_move_work_new_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_move_work_projects_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_move_work_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_new_billing_manager_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_notification_restrictions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_onboarding_tasks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_organization_settings_billing_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_outside_collaborator_details_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_outside_collaborators_toolbar_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_outside_collaborators_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_owners_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_packages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_payment_history_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_payment_modal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_payment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_pending_collaborator_invitations_toolbar_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_pending_collaborators_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_pending_invitation_toolbar_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_pending_invitations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_people_cancel_pending_collaborator_invitations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_people_convert_to_outside_collaborators_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_people_dismiss_members_help_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_people_dismiss_membership_banner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_people_remove_outside_collaborators_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_people_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_person_revoke_sso_session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_person_revoke_sso_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_person_sso_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_person_unlink_identity_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_person_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_plan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_plans_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_pr_trend_data_org_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_activity_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_add_cards_link_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_archived_cards_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_card_closing_reference_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_card_closing_references_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_card_columns_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_card_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_cards_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_check_archived_card_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_clone_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_column_archive_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_column_automation_options_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_column_cards_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_column_update_workflow_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_column_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_columns_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_convert_note_to_issue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_hovercard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_migrate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_migration_status_notice_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_preview_note_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_repository_results_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_search_archived_cards_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_search_results_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_settings_linked_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_settings_users_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_target_owner_results_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_update_note_task_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_update_note_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_project_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_projects_beta_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_projects_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_pulls_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_receipt_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_reinstate_complete_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_reinstate_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_reminder_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_reminders_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_rename_owners_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_rename_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_reorder_project_columns_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_repos_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_request_oauth_app_approval_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_resend_billing_manager_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_retry_failed_invitations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_retry_invitations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_role_assignment_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_root_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_seats_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_secret_scanning_add_bypass_reviewer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_secret_scanning_bypass_reviewer_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_secret_scanning_get_bypass_reviewers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_secret_scanning_remove_bypass_reviewer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_security_managers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_security_ssh_certificate_authority_owner_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_self_serve_invoicing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_set_announcement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_set_application_approval_state_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_set_people_visibility_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_set_role_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_settings_billing_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_settings_copilot_content_exclusion_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_settings_copilot_content_exclusion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_show_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_show_pending_billing_manager_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_show_reinstated_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_sign_up_billing_manager_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_signup_billing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_sponsoring_agreement_pdf_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_sponsoring_billing_options_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_sponsoring_bulk_sponsorships_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_sponsoring_dependencies_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_sponsoring_invoiced_agreement_signature_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_sponsoring_invoiced_billing_accounts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_sponsoring_invoices_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_sponsoring_metadata_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_sponsoring_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_sponsoring_sponsorships_dependencies_exports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_sponsoring_sponsorships_exports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_sponsoring_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_stafftools_dependency_graph_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_stafftools_enterprise_billing_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_switch_to_seats_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_team_breadcrumbs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_team_child_search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_team_members_toolbar_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_team_migrate_discussions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_team_move_child_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_team_repositories_accessible_to_members_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_team_repositories_toolbar_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_teams_dismiss_teams_banner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_teams_important_changes_summary_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_teams_toolbar_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_top_languages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_topics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_tos_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_trade_screening_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_update_credit_card_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_update_member_privileges_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def org_user_labels_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_check_billing_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_check_name_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_confirm_profile_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_confirm_verification_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_create_variable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_default_repository_permission_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_delete_variable_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_delete_variable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_display_commenter_full_name_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_edit_variable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_enterprise_installation_delete_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_enterprise_installations_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_group_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_groups_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_hook_deliveries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_hook_delivery_payload_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_hook_delivery_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_hook_redeliveries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_hook_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_hooks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_invitations_stafftools_enterprises_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_invite_form_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_ip_allowlist_entries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_ip_allowlist_entry_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_issue_type_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_issue_types_edit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_issue_types_new_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_member_privilege_ruleset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_members_can_change_repo_visibility_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_members_can_create_teams_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_members_can_delete_issues_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_members_can_delete_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_members_can_invite_outside_collaborators_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_members_can_update_protected_branches_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_members_can_view_dependency_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_new_variable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_onboarding_advanced_security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_onboarding_demo_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_onboarding_show_tasks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_onboarding_tasks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_onboarding_trial_banner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_outside_collaborators_can_request_third_party_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_policies_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_projects_classic_enabled_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_projects_enabled_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_readers_can_create_discussions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_redeliver_hook_delivery_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_rule_insights_actors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_rule_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_rules_bypass_request_approvers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_rules_bypass_request_requesters_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_rules_bypass_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_ruleset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_ruleset_value_validation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_rulesets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_billing_budget_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_billing_budgets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_billing_cost_center_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_billing_cost_centers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_billing_discounts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_billing_products_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_billing_skus_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_billing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_billing_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_blocked_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_blocked_users_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_blocked_users_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_compliance_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_discussions_selected_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_discussions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_licensing_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_member_feature_requests_subscription_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_member_feature_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_moderator_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_moderators_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_moderators_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_payment_history_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_soft_deletion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_update_package_creation_permission_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_update_package_inherit_access_setting_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_update_pages_creation_permission_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_update_projects_base_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_update_variable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_upgrades_stafftools_enterprises_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_variables_list_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_variables_repository_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_variables_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_view_member_privilege_ruleset_history_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_view_ruleset_history_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organizations_enterprise_user_account_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organizations_new_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organizations_news_feed_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def orgs_marketing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def orgs_people_tab_counts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def orgs_team_sync_okta_credentials_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def outside_collaborators_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def overview_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def overview_files_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def overview_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def own_contributions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def owners_stafftools_user_personal_access_tokens_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def owners_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def package_actions_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def package_collaborator_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def package_details_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def package_members_toolbar_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def package_options_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def package_repositories_toolbar_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def package_repository_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def package_repository_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def package_restore_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def package_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def package_two_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def package_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def package_version_readme_two_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def package_version_restore_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def package_versions_two_restore_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def package_versions_two_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def package_versions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def packages_dashboard_license_menu_content_org_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def packages_dashboard_license_menu_content_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def packages_dashboard_licenses_graph_org_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def packages_dashboard_licenses_graph_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def packages_dashboard_org_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def packages_dashboard_security_graph_org_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def packages_dashboard_security_graph_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def packages_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def packages_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def packages_migration_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def packages_preview_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def packages_two_redirect_view_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def packages_two_remove_repo_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def packages_two_repo_dialog_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def packages_two_repository_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def packages_two_restore_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def packages_two_search_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def packages_two_update_repo_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def packages_two_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def packages_two_view_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def packages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pages_build_type_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pages_certificate_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pages_cname_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pages_custom_subdomain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pages_delete_deployment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pages_domain_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pages_https_redirect_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pages_https_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pages_request_https_certificate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pages_source_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pages_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pages_visibility_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def paginate_milestones_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def participating_notifications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def participation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def password_check_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def password_reset_fallback_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def password_reset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def password_validity_checks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def paste_url_markdown_settings_accessibility_preferences_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def patreon_connect_sponsors_accounts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pause_repair_stafftools_search_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pause_repo_invite_limit_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pause_stafftools_merge_commit_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pay_by_credit_card_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pay_by_invoice_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pay_invoice_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pay_invoice_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def payment_history_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def payment_information_stafftools_user_plan_subscription_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def payment_modal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def payment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pending_collaborators_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pending_organizations_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pending_subscription_item_change_free_trial_cancellation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pending_subscription_item_change_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pending_successor_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def people_destroy_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def people_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def people_export_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def people_export_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def perform_stafftools_billing_business_organization_billing_job_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def perform_stafftools_vss_subscription_event_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def perform_user_link_job_stafftools_enterprise_bundled_license_assignment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def performance_export_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def performance_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def performance_jobs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def performance_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def performance_summary_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def performance_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def performance_workflows_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def permissions_stafftools_project_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def permissions_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def permissions_update_request_settings_business_installation_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def permissions_update_request_settings_org_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def permissions_update_request_settings_user_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def personal_access_tokens_onboarding_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def personal_reminder_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def personal_reminders_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def personal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pin_environment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pin_issue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pin_organization_repo_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pin_workflow_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pinned_api_version_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def plan_upgrade_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def planning_tracking_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def plans_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def plans_user_move_work_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def policies_repositories_available_properties_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def policies_repositories_new_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def policies_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def post_profile_readme_opt_in_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def potential_sponsorable_banner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pr_file_tree_visibility_setting_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pre_mergeable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def prebuild_availability_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def premium_support_page_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def premium_support_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def press_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def preview_edit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def preview_gpr_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def preview_grant_request_reason_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def preview_issue_template_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def preview_lfs_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def preview_org_label_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def preview_permissions_note_app_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def preview_permissions_note_org_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def preview_permissions_note_user_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def preview_release_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def preview_stafftools_repository_large_files_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def preview_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def preview_view_component_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def preview_view_components_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pricing_business_cloud_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pricing_business_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pricing_business_hosted_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pricing_calculator_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pricing_developer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pricing_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pricing_plans_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pricing_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pricing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def prioritize_milestone_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def prioritize_pinned_issue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def private_feed_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def private_org_feed_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def procurement_legal_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def procurement_legal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def profile_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def profile_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def profile_feed_visibility_setting_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def profile_footer_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def profile_readme_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def progress_message_after_migration_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def project_policies_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def project_settings_admins_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def project_settings_remove_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def project_settings_remove_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def project_settings_teams_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def project_settings_update_org_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def project_settings_update_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def project_settings_update_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def projects_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def projects_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def projects_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def promote_stafftools_user_avatar_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def property_definition_name_check_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def provisioned_codespace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def provisioned_vscode_codespace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def public_key_authorization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def public_key_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def public_keys_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def publish_marketplace_listing_plan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def publish_repository_advisory_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def published_codespace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_changes_since_last_review_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_diff_view_preferences_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_new_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_actions_prompt_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_apply_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_body_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_changed_commits_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_checks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_closing_issue_references_empty_text_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_code_menu_contents_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_code_scanning_auto_fix_feedback_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_code_scanning_auto_fix_review_comment_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_code_scanning_auto_fix_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_collaborator_edits_setting_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_commit_status_checks_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_commit_status_icon_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_commits_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_commits_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_commits_with_range_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_convert_to_draft_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_deployed_event_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_deployments_box_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_description_branches_dropdown_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_diff_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_file_tree_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_files_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_files_with_range_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_form_actions_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_layout_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_links_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_merging_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_open_with_menu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_orchestration_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_patch_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_post_merge_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_processing_indicator_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_raw_diff_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_raw_patch_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_ready_for_review_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_review_decisions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_review_edit_form_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_review_minimize_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_review_more_threads_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_review_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_review_thread_syntax_highlighted_diff_lines_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_review_unminimze_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_review_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_review_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_run_action_required_workflows_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_show_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_sidebar_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_state_button_wrapper_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_state_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_tab_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_tabs_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_title_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_unread_timeline_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_requests_deferred_commits_data_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_requests_survey_answer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_requests_survey_dismiss_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_requests_survey_fragment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_review_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_timeline_more_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pulls_assigned_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pulls_created_by_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pulls_mentioned_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pulls_review_requested_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pulse_committer_data_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pulse_diffstat_summary_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pulse_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def punch_card_data_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def punch_card_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def purge_code_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def purge_commits_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def purge_discussions_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def purge_events_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def purge_issues_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def purge_objects_stafftools_repository_large_files_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def purge_projects_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def purge_releases_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def purge_repository_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def purge_stafftools_repository_pull_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def purge_stafftools_user_avatars_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def purge_stafftools_user_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def purge_wiki_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def push_protection_metrics_block_counts_by_repo_enterprise_security_center_metrics_secret_scanning_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def push_protection_metrics_block_counts_by_token_type_enterprise_security_center_metrics_secret_scanning_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def push_protection_metrics_bypass_counts_by_repo_enterprise_security_center_metrics_secret_scanning_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def push_protection_metrics_bypass_counts_by_token_type_enterprise_security_center_metrics_secret_scanning_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def push_protection_metrics_enterprise_security_center_metrics_secret_scanning_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def push_ruleset_bypass_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def push_ruleset_new_bypass_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def put_org_invitation_copilot_seat_management_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def queue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def queues_spamurai_patterns_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def quick_approve_review_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def randomize_stafftools_user_password_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def raw_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def raw_user_gist_sha_file_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def raw_user_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def re_request_review_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reactions_discussion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def read_broadcast_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def read_notifications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_application_security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_artificial_intelligence_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_career_development_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_community_contributions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_culture_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_developer_stories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_developer_story_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_devops_automation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_devops_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_featured_article_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_featured_articles_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_features_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_guide_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_guides_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_maintainer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_maintainers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_nominate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_open_source_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_podcast_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_podcasts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_programming_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_subscriptions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_topic_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_topics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def readme_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reattach_stafftools_repository_network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rebuild_commit_contributions_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rebuild_network_graph_stafftools_repository_network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rebuild_status_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def recalculate_all_stafftools_user_profile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def recalculate_attribute_stafftools_user_profile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def receipt_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def receive_user_app_from_manifest_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def recently_touched_branches_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reclaimed_storage_version_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reconcile_licenses_with_billing_platform_stafftools_enterprise_licensing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reconcile_stafftools_user_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def record_developer_tools_survey_popup_shown_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def recover_branch_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def redeem_coupon_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def redeliver_hook_delivery_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def redeliver_hook_delivery_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def redetect_community_health_files_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def redetect_license_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def redetect_org_dependencies_stafftools_dependency_graph_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def redirect_to_back_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def redraft_marketplace_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ref_ahead_behind_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ref_check_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ref_list_select_menu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def refresh_environment_data_stafftools_user_codespace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def refresh_org_memex_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def refresh_user_memex_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def refs_ref_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def refs_tags_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def refs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def regenerate_edit_settings_user_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def regenerate_settings_user_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def regenerate_token_enterprise_domain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def regenerate_token_org_domain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def regenerate_user_access_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def register_developer_program_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reindex_blackbird_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reindex_code_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reindex_commits_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reindex_creator_biztools_repository_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reindex_discussions_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reindex_issues_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reindex_memex_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reindex_org_blackbird_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reindex_projects_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reindex_releases_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reindex_repository_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reindex_stafftools_repository_pull_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reindex_wiki_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reject_attribution_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def related_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def releases_feed_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def releases_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def releases_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reload_package_settings_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remaining_diff_entries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remediation_rates_enterprise_security_center_metrics_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remediation_rates_security_center_metrics_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reminder_test_org_reminder_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reminder_test_personal_reminder_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reminder_test_team_reminder_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remove_billing_information_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remove_client_secret_settings_app_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remove_client_secret_settings_org_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remove_client_secret_settings_org_application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remove_client_secret_settings_user_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remove_client_secret_settings_user_application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remove_credit_card_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remove_inactive_session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remove_invitation_opt_out_stafftools_user_teams_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remove_key_settings_app_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remove_key_settings_org_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remove_key_settings_user_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remove_org_seats_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remove_package_actions_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remove_package_codespaces_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remove_package_collaborator_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remove_queue_pattern_spamurai_patterns_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remove_repository_advisory_collaborator_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remove_settings_network_configurations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remove_visited_org_memex_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remove_visited_user_memex_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rename_check_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rename_ref_check_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rename_stafftools_user_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rename_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def render_safeguard_test_with_respond_to_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def render_safeguard_test_without_respond_to_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def render_user_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reopen_many_repository_alert_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reopen_repository_alert_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reopened_alerts_enterprise_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reopened_alerts_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repair_primary_stafftools_user_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repair_stafftools_search_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repair_stafftools_user_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reparent_stafftools_repository_network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_abort_transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_actions_cache_size_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_actions_update_retention_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_card_pull_request_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_code_review_feedback_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_completion_feedback_session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_completion_feedback_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_copilot_task_cloud_environment_create_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_copilot_task_commit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_copilot_task_diff_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_copilot_task_edit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_copilot_task_file_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_copilot_task_new_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_copilot_task_show_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_copilot_task_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_diff_summary_completions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_dismiss_project_notice_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_graphs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_has_access_copilot_code_review_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_layout_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_new_copilot_code_review_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_package_two_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_package_versions_two_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_packages_two_view_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_people_collaborators_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_people_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_people_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_activity_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_add_cards_link_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_archived_cards_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_beta_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_card_closing_reference_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_card_closing_references_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_card_columns_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_card_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_cards_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_check_archived_card_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_clone_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_column_archive_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_column_automation_options_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_column_cards_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_column_update_workflow_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_column_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_columns_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_convert_note_to_issue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_hovercard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_issues_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_migrate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_migration_status_notice_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_preview_note_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_search_archived_cards_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_search_results_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_target_owner_results_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_update_note_task_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_update_note_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_project_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_projects_beta_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_projects_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_rename_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_reorder_project_columns_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_repo_settings_copilot_content_exclusion_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_repo_settings_copilot_content_exclusion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_runner_labels_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_search_count_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_secret_scanning_push_protection_custom_message_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_sponsors_nudge_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_transfer_team_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_uploads_add_secret_scanning_push_protection_bypass_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_uploads_show_secret_scanning_push_protection_bypass_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_uploads_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repo_user_lists_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def report_biztools_coupon_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def report_content_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def report_oauth_authorization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reported_content_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repos_code_nav_survey_answer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repos_code_nav_survey_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repos_preferences_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repos_survey_answer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repos_survey_dismiss_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repos_survey_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repositories_enterprise_security_center_metrics_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repositories_enterprise_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repositories_security_center_metrics_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repositories_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repositories_stafftools_user_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_access_management_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_access_request_consent_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_access_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_actions_settings_add_new_runner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_actions_settings_check_readiness_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_actions_settings_delete_runner_modal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_actions_settings_delete_runner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_actions_settings_list_runners_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_actions_settings_runner_details_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_actions_settings_runners_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_actions_settings_update_allowed_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_actions_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_add_secret_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_advisories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_advisory_comment_actions_menu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_advisory_edit_history_log_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_advisory_issue_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_advisory_mention_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_advisory_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_alert_bot_resolve_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_alert_bot_resolve_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_alert_events_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_alert_exposure_analysis_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_alert_function_references_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_alert_update_errors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_alert_update_logs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_alert_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_alerts_closed_as_filter_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_alerts_dismiss_many_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_alerts_ecosystem_filter_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_alerts_filter_input_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_alerts_manifest_filter_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_alerts_package_filter_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_alerts_severity_filter_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_alerts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_announcement_preview_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_branch_history_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_check_name_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_citation_hovercard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_citation_sidebar_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_citation_template_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_review_limits_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_alert_hovercard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_auto_codeql_messages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_autofix_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_batch_mark_configuration_outdated_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_close_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_code_paths_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_create_autofix_pr_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_generate_autofix_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_mark_configuration_outdated_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_related_location_popover_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_reopen_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_result_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_results_ref_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_results_rule_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_results_tag_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_results_tool_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_results_tool_status_configurations_show_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_results_tool_status_configurations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_results_tool_status_files_extracted_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_results_tool_status_rules_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_results_tool_status_show_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_results_tool_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_results_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_severity_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_show_timeline_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_show_tracked_in_hovercard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_code_scanning_tool_status_banner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_codespaces_add_consented_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_codespaces_allow_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_codespaces_code_menu_contents_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_codespaces_configure_dev_container_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_collaborators_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_create_variable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_custom_properties_overview_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_custom_properties_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_delete_variable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_destroy_announcement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_discussion_activation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_edit_secret_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_edit_variable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_environment_add_secret_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_environment_add_variable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_environment_remove_secret_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_environment_remove_variable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_environment_suggested_approvers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_environment_update_secret_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_environment_update_variable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_environment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_environments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_file_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_hook_deliveries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_hook_delivery_payload_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_hook_delivery_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_hook_redeliveries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_hook_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_hooks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_hovercard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_import_auth_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_import_author_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_import_author_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_import_authors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_import_large_files_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_import_project_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_import_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_imports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_installations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_interaction_limits_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_invitation_accept_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_invitation_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_invitation_reject_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_keys_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_languages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_member_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_new_key_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_new_secret_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_new_variable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_notification_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_notifications_redirect_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_notifications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_open_graph_image_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_open_graph_template_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_pages_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_policies_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_profile_pin_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_react_alerts_alert_ai_activity_audit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_react_alerts_alert_autofix_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_react_alerts_locations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_react_alerts_org_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_react_alerts_provider_options_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_react_alerts_report_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_react_alerts_resolve_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_react_alerts_secret_type_options_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_react_alerts_secure_storage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_react_alerts_show_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_react_alerts_timeline_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_react_alerts_validate_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_redeliver_hook_delivery_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_remove_secret_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_rule_insights_actors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_rule_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_rules_bypass_request_approvers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_rules_bypass_request_requesters_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_rules_bypass_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_ruleset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_ruleset_value_validation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_rulesets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_search_enterprise_pre_receive_hook_targets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_secret_scanning_add_bypass_reviewer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_secret_scanning_get_bypass_reviewers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_secret_scanning_push_protection_bypass_add_from_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_secret_scanning_push_protection_bypass_placeholder_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_secret_scanning_push_protection_bypass_success_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_secret_scanning_push_protection_promote_bypass_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_secret_scanning_remove_bypass_reviewer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_secrets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_security_and_analysis_ads_opts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_security_and_analysis_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_security_campaign_alerts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_security_campaign_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_security_campaigns_counts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_security_counts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_security_overall_count_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_security_overview_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_security_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_select_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_set_announcement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_sponsor_button_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_stats_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_subscription_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_suggestions_org_reminders_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_suggestions_team_reminders_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_templates_for_current_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_token_scanning_resolve_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_token_scanning_results_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_unsubscribe_via_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_update_member_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_update_secret_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_update_variable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_variables_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def represented_dependencies_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def request_access_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def request_action_check_run_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def request_cve_repository_advisory_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def request_https_certificate_stafftools_repository_pages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def request_stafftools_user_personal_access_token_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def request_stafftools_user_personal_access_token_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def request_unlink_stafftools_user_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def request_verification_stafftools_user_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def request_verification_user_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def requests_pending_approval_stafftools_user_personal_access_tokens_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def requests_stafftools_user_personal_access_token_organizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def requests_stafftools_user_personal_access_token_users_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def requests_stafftools_user_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def require_login_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rerequest_check_run_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rerequest_check_suite_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def resend_account_verification_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def resend_pending_enterprise_organization_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def resend_verification_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def resend_verification_request_profile_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reset_billing_attempts_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reset_invitation_rate_limit_stafftools_user_teams_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reset_org_onboarding_notice_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def resolve_abuse_reports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def resolve_conflicts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def resolve_review_thread_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def resources_articles_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def resources_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def restore_environment_stafftools_user_codespace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def restore_mandatory_email_verification_stafftools_user_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def restore_objects_stafftools_repository_large_files_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def restore_page_stafftools_repository_pages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def restore_stafftools_project_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def restore_stafftools_repository_reflog_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def restore_stafftools_user_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def restrict_repository_create_in_personal_namespace_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def resync_actions_workflow_schedules_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def retire_marketplace_listing_plan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def retry_all_stafftools_zuora_webhooks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def retry_one_time_subscription_items_stafftools_sponsors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def revert_pull_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def revert_to_gravatar_stafftools_user_avatars_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def review_comment_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def review_comment_edit_form_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def review_comment_excerpt_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def review_comment_minimize_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def review_comment_suggestion_button_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def review_comment_unminimize_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def review_request_team_size_check_new_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def review_request_team_size_check_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def review_thread_more_comments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def review_thread_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reviewers_menu_content_new_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reviewers_menu_content_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def revisions_user_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def revoke_all_settings_oauth_authorizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def revoke_all_settings_user_tokens_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def revoke_all_tokens_settings_app_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def revoke_all_tokens_settings_org_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def revoke_all_tokens_settings_org_application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def revoke_all_tokens_settings_user_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def revoke_all_tokens_settings_user_application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def revoke_public_keys_stafftools_user_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def roadmap_webinar_series_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def role_enterprise_admin_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def role_permission_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rollout_devtools_feature_flags_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def run_pending_changes_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def run_pending_changes_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def run_workflow_codespaces_prebuild_configuration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def saml_metadata_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def saml_provider_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def saml_recover_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def saml_recover_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sast_enterprise_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sast_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def save_issue_templates_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def save_net_neutrality_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def save_notification_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def save_notification_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def saved_notifications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def saved_replies_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def saved_reply_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def saved_view_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def schedule_backup_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def schedule_backup_stafftools_user_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def schedule_maintenance_for_failed_stafftools_networks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def schedule_maintenance_stafftools_gist_maintenance_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def schedule_maintenance_stafftools_repository_network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def schedule_maintenance_stafftools_user_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def schedule_wiki_backup_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_biztools_coupons_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_blackbird_count_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_count_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_custom_scopes_check_name_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_custom_scopes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_customer_stories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_explore_topics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_feedback_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_index_embeddings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_menu_discussions_labels_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_org_projects_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_permissions_stafftools_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_refresh_blackbird_caches_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_settings_codespaces_orgs_enablement_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_settings_copilot_orgs_enablement_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_stats_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_warm_blackbird_caches_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def secret_scanning_bypass_request_approvers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def secret_scanning_bypass_request_requesters_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def secret_scanning_bypass_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def secret_scanning_bypass_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def secret_scanning_bypass_reviewer_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def secret_scanning_new_bypass_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def secret_scanning_push_protection_survey_answer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def secret_scanning_push_protection_survey_dismiss_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def secrets_bypassed_enterprise_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def secrets_bypassed_security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def section_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sections_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_advisory_feed_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_alert_prioritization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_alerts_code_scanning_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_alerts_code_scanning_filter_input_suggestions_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_alerts_code_scanning_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_alerts_dependabot_closed_as_filter_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_alerts_dependabot_ecosystem_filter_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_alerts_dependabot_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_alerts_dependabot_filter_input_suggestions_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_alerts_dependabot_filter_input_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_alerts_dependabot_menu_content_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_alerts_dependabot_package_filter_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_alerts_dependabot_repository_filter_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_alerts_dependabot_severity_filter_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_alerts_dependabot_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_alerts_secret_scanning_alerts_get_filter_input_suggestions_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_alerts_secret_scanning_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_alerts_secret_scanning_get_filter_input_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_alerts_secret_scanning_menu_content_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_alerts_secret_scanning_menu_content_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_alerts_secret_scanning_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_closed_security_campaigns_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_code_scanning_menu_content_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_code_scanning_repository_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_code_scanning_rule_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_code_scanning_severity_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_code_scanning_tool_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_coverage_counts_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_coverage_counts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_coverage_create_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_coverage_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_coverage_feature_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_coverage_get_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_coverage_stats_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_coverage_stats_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_coverage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_destroy_security_campaign_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_enablement_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_enablement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_metrics_codeql_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_metrics_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_metrics_enablement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_multi_repo_enablement_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_multi_repo_enablement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_navigation_tab_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_options_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_options_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_overview_dashboard_create_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_overview_dashboard_get_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_overview_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_reconciliation_job_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_risk_counts_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_risk_counts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_risk_create_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_risk_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_risk_get_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_risk_stats_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_risk_stats_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_risk_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_secret_scanning_metrics_push_protection_metrics_block_counts_by_repo_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_secret_scanning_metrics_push_protection_metrics_block_counts_by_token_type_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_secret_scanning_metrics_push_protection_metrics_bypass_counts_by_repo_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_secret_scanning_metrics_push_protection_metrics_bypass_counts_by_token_type_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_secret_scanning_metrics_push_protection_metrics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_secret_scanning_metrics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_security_campaign_alerts_groups_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_security_campaign_alerts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_security_campaign_close_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_security_campaign_reopen_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_security_campaign_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_security_campaigns_alerts_summary_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_security_campaigns_counts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_security_campaigns_managers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_tab_counts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_unified_alerts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_update_job_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_center_update_security_campaign_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_configuration_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_configurations_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_incident_response_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_products_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_token_scanning_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_trust_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def select_plan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def self_serve_organization_upgrades_stafftools_enterprises_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def send_reset_email_stafftools_user_password_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def send_test_sms_stafftools_user_two_factor_credential_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def server_license_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def server_stat_enterprise_enterprise_installations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def server_stats_enterprise_enterprise_installations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def service_index_devtools_feature_flags_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def service_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def services_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sessions_forgot_password_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def set_activity_overview_preference_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def set_announcement_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def set_backup_user_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def set_email_stafftools_user_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def set_invitation_rate_limit_stafftools_user_teams_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def set_labels_issue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def set_milestone_issue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def set_org_code_review_limits_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def set_organization_member_privilege_ruleset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def set_organization_ruleset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def set_primary_user_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def set_private_contributions_preference_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def set_profile_badges_preference_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def set_repository_code_review_limits_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def set_repository_interaction_limit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def set_repository_ruleset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def set_successor_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def set_token_expiration_stafftools_domain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def set_used_by_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def set_user_code_review_limits_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_accessibility_preferences_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_account_preferences_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_add_larger_runner_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_add_runner_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_add_runner_group_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_bulk_orgs_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_cache_size_limit_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_cache_size_upper_limit_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_check_name_larger_runner_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_create_label_larger_runner_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_create_larger_runner_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_create_runner_group_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_create_runner_label_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_custom_image_versions_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_custom_images_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_delete_custom_image_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_delete_custom_image_version_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_delete_larger_runner_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_delete_larger_runner_modal_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_delete_runner_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_delete_runner_group_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_delete_runner_modal_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_edit_larger_runner_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_fork_pr_approvals_policy_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_fork_pr_workflows_policy_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_hosted_runners_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_larger_runner_details_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_org_enablement_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_public_fork_pr_workflows_policy_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_runner_details_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_runner_group_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_runner_group_targets_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_runner_groups_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_runner_groups_menu_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_runner_labels_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_runner_scale_set_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_runners_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_setup_default_runners_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_update_access_policy_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_update_allowed_actions_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_update_default_workflow_permissions_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_update_larger_runner_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_update_repo_self_hosted_runners_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_update_retention_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_update_runner_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_update_runner_group_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_update_runner_group_runners_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_actions_update_runner_labels_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_add_member_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_add_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_app_advanced_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_app_agent_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_app_beta_feature_toggle_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_app_beta_features_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_app_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_app_installations_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_app_permissions_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_app_sign_agreement_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_app_update_agent_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_appearance_preferences_color_mode_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_appearance_preferences_fixed_width_font_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_appearance_preferences_skin_tone_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_appearance_preferences_tab_size_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_appearance_preferences_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_applications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_apps_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_apps_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_archive_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_azure_blob_sink_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_azure_blob_sink_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_azure_blob_sink_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_azure_blob_sinks_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_azure_blob_sinks_show_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_azure_blob_sinks_show_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_azure_blob_sinks_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_azure_hubs_sink_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_azure_hubs_sink_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_azure_hubs_sink_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_azure_hubs_sinks_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_azure_hubs_sinks_show_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_azure_hubs_sinks_show_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_azure_hubs_sinks_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_create_git_export_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_create_web_export_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_curator_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_curator_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_curator_update_git_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_datadog_sink_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_datadog_sink_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_datadog_sink_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_datadog_sinks_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_datadog_sinks_show_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_datadog_sinks_show_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_datadog_sinks_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_event_settings_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_export_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_export_logs_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_export_status_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_git_event_export_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_git_event_export_status_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_google_cloud_sink_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_google_cloud_sink_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_google_cloud_sink_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_google_cloud_sinks_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_google_cloud_sinks_show_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_google_cloud_sinks_show_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_google_cloud_sinks_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_hec_sink_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_hec_sink_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_hec_sink_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_hec_sinks_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_hec_sinks_show_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_hec_sinks_show_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_hec_sinks_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_results_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_s3_sink_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_s3_sink_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_s3_sink_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_s3_sinks_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_s3_sinks_show_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_s3_sinks_show_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_s3_sinks_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_splunk_sink_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_splunk_sink_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_splunk_sink_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_splunk_sinks_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_splunk_sinks_show_add_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_splunk_sinks_show_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_splunk_sinks_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_stream_disable_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_stream_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_stream_list_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_stream_remove_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_streams_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_streams_remove_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_streams_toggle_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_audit_log_suggestions_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_auth_download_recovery_codes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_auth_print_recovery_codes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_auth_recovery_codes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_auth_regenerate_recovery_codes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_available_contexts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_avatars_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_actions_usage_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_activations_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_budget_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_budgets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_cancel_addon_trial_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_cancel_trial_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_codespaces_org_usage_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_codespaces_overview_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_convert_trial_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_copilot_usage_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_cost_center_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_cost_centers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_cost_management_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_discounts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_lfs_usage_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_marketplace_apps_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_metered_usage_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_multi_checkout_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_packages_storage_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_packages_usage_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_payment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_products_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_shared_storage_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_shared_storage_overview_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_skus_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_tab_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_usage_notification_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_blocked_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_blocked_users_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_blocked_users_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_business_advanced_security_orgs_list_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_business_advanced_security_users_list_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_business_cancel_custom_pattern_dry_run_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_business_create_custom_pattern_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_business_delete_custom_pattern_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_business_delete_custom_patterns_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_business_dry_run_repository_suggestions_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_business_dry_run_update_selected_repositories_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_business_get_custom_pattern_alert_metrics_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_business_get_custom_pattern_dry_run_results_by_cursor_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_business_get_custom_pattern_form_actions_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_business_get_custom_pattern_push_protection_metrics_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_business_get_generated_expressions_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_business_installation_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_business_installations_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_business_new_custom_pattern_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_business_show_custom_pattern_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_business_test_custom_secret_scanning_pattern_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_business_update_custom_pattern_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_business_update_custom_pattern_settings_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_change_allow_comment_author_profile_name_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_change_allow_force_push_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_change_anonymous_git_access_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_change_anonymous_git_access_locked_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_change_anonymous_git_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_change_cross_repo_conflict_editor_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_change_dormancy_threshold_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_change_git_lfs_access_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_change_ldap_search_depth_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_change_max_object_size_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_change_org_creation_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_change_org_membership_visibility_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_change_reactivate_suspended_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_change_reactivate_suspended_on_sync_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_change_repo_visibility_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_change_showcase_access_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_change_ssh_access_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_change_suggested_protocol_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_classic_personal_access_tokens_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_code_scanning_autofix_policy_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_codespaces_add_constraint_dropdown_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_codespaces_create_policy_group_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_codespaces_delete_policy_group_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_codespaces_edit_policy_group_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_codespaces_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_codespaces_host_setup_repository_select_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_codespaces_new_policy_group_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_codespaces_org_dialog_list_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_codespaces_policies_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_codespaces_update_policy_group_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_collaboration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_compliance_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_connections_applications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_copilot_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_copilot_first_run_flow_cta_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_copilot_plan_change_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_custom_properties_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_custom_property_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_delete_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_deleted_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_dotcom_user_callback_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_dotcom_user_change_contributions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_dotcom_user_create_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_dotcom_user_destroy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_dotcom_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_download_active_committers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_download_maximum_committers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_email_preferences_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_email_subscriptions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_enterprise_domains_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_enterprise_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_enterprise_installation_create_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_enterprise_installation_new_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_enterprise_installation_stats_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_enterprises_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_fine_grained_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_gravatar_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_hooks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_interaction_limits_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_interaction_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_key_organization_credential_authorizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_key_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_keys_commit_verification_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_keys_ssh_key_audit_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_keys_ssh_key_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_keys_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_lfs_bandwidth_breakdown_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_lfs_storage_breakdown_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_link_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_linked_accounts_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_maximum_lifetime_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_member_privilege_rules_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_member_privilege_ruleset_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_member_privilege_view_ruleset_history_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_member_privileges_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_members_can_create_repositories_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_members_can_delete_issues_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_members_can_delete_repositories_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_members_can_invite_outside_collaborators_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_members_can_update_protected_branches_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_network_configurations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_nodeinfo_software_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_notification_preferences_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_notification_preferences_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_oauth_authorization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_oidc_provider_download_recovery_codes_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_oidc_provider_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_oidc_provider_print_recovery_codes_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_oidc_provider_recovery_codes_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_oidc_provider_regenerate_recovery_codes_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_orcid_connection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_add_new_larger_runner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_add_new_runner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_add_runner_group_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_add_runner_instructions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_cache_size_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_caches_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_check_name_larger_runner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_create_label_larger_runner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_create_larger_runner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_create_runner_group_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_custom_image_versions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_custom_images_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_delete_custom_image_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_delete_custom_image_version_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_delete_larger_runner_modal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_delete_larger_runner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_delete_runner_group_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_delete_runner_modal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_delete_runner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_edit_larger_runner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_hosted_runners_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_labels_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_larger_runner_details_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_list_runners_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_repo_self_hosted_runners_repos_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_repository_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_runner_details_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_runner_group_targets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_runner_group_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_runner_groups_menu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_runner_groups_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_runner_scale_set_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_runners_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_setup_default_runners_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_update_access_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_update_allowed_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_update_default_workflow_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_update_fork_pr_approvals_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_update_fork_pr_workflows_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_update_larger_runner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_update_public_fork_pr_workflows_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_update_repo_self_hosted_runners_repos_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_update_repo_self_hosted_runners_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_update_retention_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_update_runner_group_runners_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_update_runner_group_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_update_runner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_active_personal_access_tokens_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_app_advanced_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_app_agent_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_app_beta_feature_toggle_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_app_beta_features_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_app_hook_deliveries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_app_hook_delivery_payload_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_app_hook_delivery_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_app_hook_redeliveries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_app_installations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_app_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_app_redeliver_hook_delivery_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_app_sign_agreement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_app_transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_app_update_agent_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_application_transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_applications_beta_features_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_applications_oauth_authorizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_applications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_apps_ip_allowlist_entries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_apps_ip_allowlist_entry_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_apps_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_audit_log_results_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_audit_log_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_audit_log_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_auto_approve_personal_access_token_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_billing_tab_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_billing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_bulk_approve_personal_access_token_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_bulk_deny_personal_access_token_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_bulk_destroy_personal_access_tokens_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_cancel_publisher_verification_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_check_enterprise_slug_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_code_review_limits_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_code_scanning_model_packs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_code_scanning_update_model_packs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_codespaces_create_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_codespaces_delete_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_codespaces_grant_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_codespaces_policies_add_constraint_dropdown_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_codespaces_policies_additional_repo_dialog_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_codespaces_policies_edit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_codespaces_policies_new_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_codespaces_policies_repo_dialog_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_codespaces_policies_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_codespaces_revoke_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_codespaces_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_codespaces_update_codespaces_spending_limit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_codespaces_update_codespaces_user_limit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_codespaces_update_ownership_setting_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_codespaces_update_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_codespaces_update_trusted_repositories_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_chat_settings_check_name_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_chat_settings_create_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_chat_settings_destroy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_chat_settings_edit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_chat_settings_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_chat_settings_new_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_chat_settings_show_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_chat_settings_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_chat_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_csv_exports_generate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_csv_exports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_custom_instructions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_custom_model_pipeline_repositories_search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_custom_model_pipeline_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_custom_model_trainings_show_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_custom_models_cancel_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_custom_models_create_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_custom_models_destroy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_custom_models_edit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_custom_models_new_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_custom_models_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_enable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_members_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_policies_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_policies_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_seat_management_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_semantic_code_search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_team_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_copilot_user_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_create_dependabot_rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_delete_dependabot_rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_deleted_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_dependabot_rules_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_domains_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_edit_dependabot_rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_edit_global_dependabot_rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_fgp_metadata_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_fgps_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_import_export_invitations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_import_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_installation_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_installations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_member_privilege_rules_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_member_privileges_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_memex_project_links_reorder_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_memex_project_links_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_migrate_legacy_admin_teams_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_network_configurations_edit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_network_configurations_find_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_network_configurations_new_private_network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_network_configurations_remove_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_network_configurations_show_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_network_configurations_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_network_configurations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_network_configurations_validate_private_network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_new_dependabot_rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_oauth_application_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_owners_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_packages_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_packages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_pages_protected_domain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_pages_protected_domains_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_pages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_permissions_integrations_managers_grant_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_permissions_integrations_managers_revoke_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_permissions_integrations_managers_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_permissions_integrations_managers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_permissions_manage_integrations_grant_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_permissions_manage_integrations_revoke_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_permissions_manage_integrations_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_personal_access_token_credential_expiration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_personal_access_token_owners_filter_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_personal_access_token_permissions_filter_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_personal_access_token_repositories_filter_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_personal_access_token_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_personal_access_token_request_approve_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_personal_access_token_request_credential_expiration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_personal_access_token_request_deny_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_personal_access_token_request_owners_filter_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_personal_access_token_request_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_personal_access_token_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_personal_access_token_requests_toolbar_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_personal_access_token_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_personal_access_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_personal_access_tokens_onboarding_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_personal_access_tokens_toolbar_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_personal_access_tokens_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_plan_downgrade_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_plans_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_profile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_projects_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_publisher_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_repo_defaults_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_repository_roles_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_restrict_legacy_pat_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_restrict_pat_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_role_assignments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_roles_fgp_metadata_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_roles_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_saml_provider_download_recovery_codes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_saml_provider_print_recovery_codes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_saml_provider_recovery_codes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_saml_provider_regenerate_recovery_codes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_saml_provider_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_secrets_create_secret_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_secrets_new_secret_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_secrets_remove_secret_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_secrets_remove_secret_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_secrets_repository_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_secrets_update_secret_page_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_secrets_update_secret_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_secrets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_add_security_manager_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_cancel_custom_pattern_dry_run_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_create_custom_pattern_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_default_setup_query_suite_selector_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_delete_custom_pattern_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_delete_custom_patterns_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_dependabot_add_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_dependabot_remove_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_dependabot_show_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_dependabot_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_disableable_repo_counts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_dry_run_repository_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_dry_run_update_selected_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_enableable_repo_counts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_get_custom_pattern_alert_metrics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_get_custom_pattern_dry_run_results_by_cursor_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_get_custom_pattern_form_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_get_custom_pattern_push_protection_metrics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_get_generated_expressions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_ghas_header_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_ghas_repos_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_ghas_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_new_custom_pattern_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_remove_security_manager_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_security_manager_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_show_custom_pattern_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_test_custom_secret_scanning_pattern_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_update_custom_pattern_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_update_custom_pattern_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_analysis_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_configuration_repositories_destroy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_configuration_repositories_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_configurations_create_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_configurations_destroy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_configurations_edit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_configurations_filter_suggestions_teams_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_configurations_new_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_configurations_repositories_count_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_configurations_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_configurations_view_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_ip_allowlist_app_access_enabled_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_ip_allowlist_enabled_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_products_in_progress_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_products_refresh_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_products_repositories_advanced_security_license_summary_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_products_repositories_apply_confirmation_summary_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_products_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_products_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_two_factor_enforcement_confirmation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_spending_limit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_sponsors_credit_balance_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_sponsors_log_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_teams_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_two_factor_enforcement_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_two_factor_enforcement_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_update_dependabot_rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_update_global_dependabot_rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_usage_notification_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_org_verify_publisher_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_organizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_orgs_lfs_bandwidth_breakdown_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_orgs_lfs_storage_breakdown_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_packages_migration_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_packages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_pages_protected_domain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_pages_protected_domains_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_pages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_pat_auto_approvals_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_personal_access_tokens_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_personal_access_tokens_onboarding_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_primary_avatar_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_profile_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_profile_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_profile_footer_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_projects_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_remove_member_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_remove_members_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_remove_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_rename_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_replies_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_repo_actions_runner_scale_set_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_restore_repo_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_restore_repo_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_restore_repo_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_restrict_legacy_pat_access_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_restrict_pat_access_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_retired_namespaces_destroy_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_retired_namespaces_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_role_details_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_rules_deferred_target_counts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_rules_deployment_environment_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_rules_integration_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_rules_merge_queue_merge_methods_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_rules_status_check_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_saml_provider_download_recovery_codes_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_saml_provider_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_saml_provider_print_recovery_codes_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_saml_provider_recovery_codes_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_saml_provider_regenerate_recovery_codes_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_saml_provider_update_user_provisioning_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_secrets_new_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_secrets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_security_analysis_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_security_analysis_ghas_settings_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_security_analysis_new_custom_secret_scanning_pattern_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_security_analysis_policies_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_security_analysis_policies_security_features_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_security_analysis_policies_update_dependabot_alerts_enablement_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_security_analysis_policies_update_dependency_insights_view_permissions_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_security_analysis_policies_update_generic_secrets_settings_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_security_analysis_policies_update_ghas_availability_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_security_analysis_policies_update_ghas_enablement_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_security_analysis_policies_update_org_ghas_availability_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_security_analysis_policies_update_secret_scanning_settings_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_security_analysis_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_security_analysis_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_security_checkup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_security_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_sessions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_set_visibility_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_show_auth_record_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_show_incomplete_auth_record_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_show_session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_sponsors_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_sponsors_org_suggestions_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_sponsors_update_policy_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_teams_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_toggle_ldap_debugging_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_toggle_saml_debugging_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_tokens_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_two_factor_checkup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_unarchive_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_unsubscribe_newsletter_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_update_audit_log_event_settings_enabled_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_2fa_add_backup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_2fa_destroy_backup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_2fa_disable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_2fa_dismiss_holiday_warning_banner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_2fa_enable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_2fa_holiday_warning_banner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_2fa_initiate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_2fa_intro_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_2fa_login_preference_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_2fa_recovery_download_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_2fa_sms_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_2fa_verify_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_access_cancel_org_access_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_access_request_org_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_access_request_user_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_access_token_expiration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_access_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_access_tokens_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_app_advanced_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_app_agent_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_app_authorizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_app_beta_feature_toggle_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_app_beta_features_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_app_hook_deliveries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_app_hook_delivery_payload_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_app_hook_delivery_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_app_hook_redeliveries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_app_installations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_app_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_app_redeliver_hook_delivery_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_app_sign_agreement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_app_transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_app_update_agent_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_application_transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_applications_beta_features_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_applications_oauth_authorizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_applications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_apps_ip_allowlist_entries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_apps_ip_allowlist_entry_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_apps_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_audit_log_export_create_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_audit_log_export_logs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_audit_log_export_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_audit_log_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_audit_log_results_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_audit_log_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_audit_log_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_avatar_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_billing_actions_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_billing_codespaces_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_billing_downgrade_survey_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_billing_packages_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_billing_plan_downgrade_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_billing_storage_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_billing_tab_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_billing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_billing_usage_notification_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_code_review_limits_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_codespaces_dotfiles_enabled_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_codespaces_gpg_authorization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_codespaces_preferred_editor_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_codespaces_preferred_host_image_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_codespaces_repository_authorizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_codespaces_settings_sync_authorization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_codespaces_update_default_idle_timeout_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_codespaces_update_default_location_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_codespaces_update_default_retention_period_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_codespaces_update_dotfiles_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_codespaces_update_trusted_repositories_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_default_branch_check_name_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_default_branch_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_developer_applications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_installation_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_installations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_migration_delete_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_migration_download_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_migration_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_migration_start_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_plans_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_profile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_spending_limit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_sponsors_log_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_token_authorization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_token_organization_credential_authorizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_tokens_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_two_factor_authentication_configuration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_two_factor_authentication_configure_factor_enable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_two_factor_authentication_configure_factor_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_two_factor_authentication_disable_factor_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_two_factor_authentication_intro_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_user_usage_notification_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_virtual_network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_virtual_networks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def shortcode_check_stafftools_enterprises_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_comment_edit_history_log_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_comment_edit_history_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_custom_pattern_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_dependabot_rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_flash_message_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_invoice_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_invoice_org_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_invoice_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_issue_from_project_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_menu_content_issues_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_menu_content_issues_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_org_invitation_opt_out_confirmation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_org_memex_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_parallel_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_partial_commit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_partial_issue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_partial_new_issue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_partial_pull_request_comparison_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_partial_pull_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_partial_repository_advisory_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_partial_tree_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_project_node_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_pull_request_conversations_menu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_pull_request_from_project_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_pull_request_toc_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_pull_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_release_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_review_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_settings_network_configurations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_stafftools_customer_licensify_licenses_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_team_discussion_node_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_timeline_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_user_gist_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_user_memex_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def show_with_email_verification_banner_settings_email_preferences_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def showcase_collection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def showcases_search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def showcases_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def siblings_stafftools_repository_network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def side_panel_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def side_panels_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sidebar_content_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sidebar_item_discussions_labels_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sidebar_metadata_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def signup_billing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def signup_customize_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def signup_plan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def signup_recommended_plan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def signup_signature_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def signup_welcome_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def site_admin_and_employee_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def site_admin_performance_stats_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def site_boomtown_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def site_bounce_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def site_componenttown_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def site_contexttown_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def site_corp_terms_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def site_custom_sleeptown_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def site_education_terms_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def site_esa_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def site_force502_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def site_keyboard_shortcuts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def site_map_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def site_metadata_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def site_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def site_preview_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def site_privacy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def site_roletown_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def site_sciencetown_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def site_sha_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def site_sleeptown_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def site_terms_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def site_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sitemap_marketing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sitemap_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def skip_pending_gate_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def skus_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def slash_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def slash_apps_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def social_impact_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def solutions_ci_cd_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def solutions_devops_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def solutions_devsecops_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def solutions_industries_financial_services_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def solutions_industries_healthcare_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def solutions_industries_manufacturing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def solutions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def spamurai_datasource_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def spamurai_datasources_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def spamurai_pattern_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def spamurai_patterns_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sparkle_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_billing_country_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_button_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_card_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_contact_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_country_of_residence_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_custom_tier_verify_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_activities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_custom_tier_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_fiscal_host_orgs_exports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_fiscal_host_payout_exports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_fiscal_host_transaction_exports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_fiscal_host_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_goal_retirement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_goal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_goals_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_payout_receipts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_payouts_latest_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_payouts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_profile_featured_sponsorships_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_profile_featured_work_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_profile_meet_the_teams_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_profile_pinnable_repos_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_profile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_tier_retirement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_tier_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_tier_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_tier_verify_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_tiers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_updates_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_webhook_deliveries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_webhook_delivery_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_webhook_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_webhooks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_your_sponsors_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_dashboard_your_sponsors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_disable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_email_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_hovercard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_legal_name_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_pending_sponsorship_changes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_publish_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_reactivate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_redraft_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_represented_dependencies_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_signup_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_sponsors_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_sponsorships_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_stripe_account_activation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_stripe_account_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_stripe_accounts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsors_accounts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsors_batch_deferred_buttons_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsors_batch_deferred_sponsor_buttons_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsors_bulk_sponsorship_blank_template_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsors_bulk_sponsorship_checkout_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsors_bulk_sponsorship_frequencies_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsors_bulk_sponsorship_imports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsors_community_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsors_explore_batch_deferred_ossf_scores_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsors_explore_dependency_uses_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsors_explore_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsors_explore_funding_stats_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsors_explore_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsors_featured_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsors_iso3166_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsors_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsors_one_click_unsubscribe_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsors_patreon_become_sponsor_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsors_patreon_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsors_patreon_users_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsors_patreon_webhook_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsors_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sponsorship_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def spoofed_commit_check_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ssh_certificate_authorities_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ssh_certificate_authorities_new_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ssh_certificate_authorities_new_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ssh_certificate_authorities_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ssh_certificate_authorities_require_expiration_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ssh_certificate_authorities_require_expiration_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ssh_certificate_authority_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ssh_certificate_authority_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sso_enterprise_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sso_enterprise_user_account_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sso_login_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def staff_override_unlock_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def staff_unlock_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_accounting_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_actions_hosted_runners_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_actions_larger_runners_manage_beta_features_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_actions_onboard_larger_runners_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_actions_packages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_actions_restore_billing_owner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_add_beta_signup_submit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_add_beta_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_advanced_security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_asset_avatar_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_asset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_assets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_audit_log_advanced_search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_audit_log_query_results_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_audit_log_query_start_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_audit_log_query_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_audit_log_stream_check_endpoint_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_audit_log_stream_disable_endpoint_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_audit_log_stream_send_disable_warning_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_audit_log_stream_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_audit_log_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_beta_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_betas_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_billing_jobs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_business_organization_billing_job_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_can_proceed_with_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_dead_letter_queue_do_clear_queue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_dead_letter_queue_do_process_queue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_dead_letter_queue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_dead_letter_queues_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_generate_usages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_iap_apple_lookups_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_iap_google_lookups_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_metered_service_locks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_onboard_billing_platform_customer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_onboard_billing_platform_customers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_pricings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_product_pricing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_product_pricings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_product_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_products_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_sales_tax_exemption_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_transaction_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_transactions_refund_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_trigger_azure_emission_trigger_emission_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_trigger_azure_emission_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_trigger_high_watermark_rollover_trigger_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_trigger_high_watermark_rollover_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_trigger_watermark_workflows_trigger_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_billing_trigger_watermark_workflows_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_bulk_dmca_takedown_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_bulk_dmca_takedown_parse_notice_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_bulk_dmca_takedown_start_job_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_bulk_dmca_takedown_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_bulk_dmca_takedown_validate_repos_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_bulk_ticketer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_cancel_authorization_billing_transaction_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_certificate_notice_dismissals_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_codeql_bulk_building_offboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_codeql_bulk_building_onboard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_codeql_bulk_building_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_codespaces_dial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_codespaces_dials_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_codespaces_unprocessed_billing_message_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_codespaces_unprocessed_billing_messages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_commit_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_compliance_report_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_compliance_reports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_copilot_bulk_blocks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_copilot_bulk_unblocks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_copilot_enterprises_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_copilot_pr_summary_feedback_details_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_copilot_pr_summary_feedback_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_copilot_seat_assignment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_copilot_seat_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_copilot_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_copilot_usage_metrics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_copilot_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_create_hosted_compute_ims_admin_image_version_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_create_memex_without_limits_beta_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_customer_licensify_licenses_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_deimpersonate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_delete_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_deleted_account_transactions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_dependabot_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_dependency_graph_assign_packages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_dependency_graph_package_results_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_dependency_graph_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_detach_repo_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_domain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_admin_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_agreement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_agreements_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_actions_usage_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_azure_emissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_bill_cycle_day_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_billing_type_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_budget_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_budgets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_codespaces_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_cost_center_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_cost_centers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_discounts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_downgrade_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_education_configuration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_invoices_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_lock_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_manager_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_managers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_migrations_actions_storage_backfill_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_migrations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_packages_usage_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_payment_history_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_plan_subscription_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_sponsorships_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_sync_account_information_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_sync_subscription_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_trigger_azure_emissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_usage_overview_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_usage_report_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_usage_report_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_billing_zuora_webhooks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_bundled_license_assignments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_complete_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_deleted_organizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_domains_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_enterprise_installations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_expired_owner_invitations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_external_identity_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_external_provider_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_git_lfs_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_guest_collaborators_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_hook_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_hooks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_installations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_ip_allowlist_enabled_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_ip_allowlist_user_level_enforcement_enabled_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_licensing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_manual_payment_accounts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_marketplace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_member_organizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_members_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_note_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_notes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_organization_invitations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_organization_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_organization_transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_organization_transfers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_organizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_outside_collaborators_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_owner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_owners_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_pending_billing_managers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_pending_collaborators_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_pending_members_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_pending_owner_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_pending_owners_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_people_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_repository_collaborators_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_restores_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_reviewable_organization_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_reviewable_organization_upgrade_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_seats_plan_type_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_security_center_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_slug_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_soft_deletion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_spam_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_ssh_certificate_authority_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_support_entitlees_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_suspended_members_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_suspension_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_team_external_group_members_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_team_members_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_team_organization_mappings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_teams_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_trade_compliance_screening_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_trade_compliance_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_trials_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_two_factor_requirement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_unaffiliated_members_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprise_user_namespace_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_enterprises_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_explore_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_fileservers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_gist_maintenance_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_graphs_flamegraph_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_hosted_compute_ims_admin_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_hosted_compute_ims_admin_new_image_definiton_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_hosted_compute_ims_admin_new_pointer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_hosted_compute_networking_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_image_version_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_impersonate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_indexing_new_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_indexing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_integration_installation_trigger_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_integration_installation_triggers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_internal_apps_show_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_internal_apps_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_large_file_storage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_license_notice_dismissals_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_locked_ip_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_manually_review_payment_method_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_memex_without_limits_beta_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_merge_commit_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_merge_queue_beta_signup_add_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_merge_queue_beta_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_merge_queue_clear_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_merge_queue_entry_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_merge_queue_unlock_group_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_merge_queue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_metered_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_metered_exports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_metered_product_uuid_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_metered_product_uuids_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_metered_server_license_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_metered_server_licenses_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_minimize_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_modal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_models_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_models_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_networks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_new_stafftools_bulk_dmca_takedown_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_okta_team_sync_beta_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_onboard_beta_batch_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_org_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_org_hook_toggle_active_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_org_hook_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_org_hooks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_orphaned_bundled_license_assignments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_override_impersonate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_pinned_api_versions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_prepaid_metered_usage_refill_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_prepaid_metered_usage_refills_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_product_enablements_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_project_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_projects_beta_delete_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_projects_beta_rebalance_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_projects_beta_rebalance_views_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_projects_beta_reindex_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_projects_beta_reopen_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_projects_beta_restore_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_projects_beta_show_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_projects_beta_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_projects_beta_soft_delete_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_projects_beta_sync_denormalized_data_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_projects_beta_sync_hierarchy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_projects_beta_sync_iteration_fields_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_projects_beta_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_proxima_service_rate_limits_create_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_proxima_service_rate_limits_destroy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_proxima_service_rate_limits_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_proxima_service_rate_limits_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_purge_repo_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_receipt_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_receipts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_reflogs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_reminders_beta_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_remove_locked_ip_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repo_hook_toggle_active_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repo_hook_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repo_hooks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_reports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_abilities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_activity_actors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_activity_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_asset_batch_scan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_category_limit_override_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_children_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_collaborators_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_country_block_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_custom_properties_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_dependabot_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_discussion_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_discussion_comments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_discussion_conversion_override_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_discussion_subscriptions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_discussion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_discussions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_dmca_takedown_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_funding_links_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_image_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_images_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_interaction_limits_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_issue_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_issue_comments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_issue_subscriptions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_issue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_issues_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_large_files_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_mirror_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_network_tree_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_notification_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_pages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_preferred_files_redetection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_projects_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_protected_branches_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_pull_request_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_pull_request_comments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_pull_request_orchestration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_pull_request_orchestrations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_pull_request_review_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_pull_request_review_comments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_pull_request_subscriptions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_pull_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_pull_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_pulls_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_pushlog_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_recommendations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_redirect_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_redirects_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_reflog_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_repository_advisories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_repository_advisory_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_repository_advisory_comments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_repository_advisory_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_repository_file_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_repository_files_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_repository_orchestration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_repository_orchestrations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_repository_rule_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_repository_rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_repository_rules_deferred_target_counts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_repository_rules_insights_actors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_repository_rules_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_siblings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_star_counts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_svn_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_vulnerability_alert_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_vulnerability_alerts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_repository_watchers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_research_participants_create_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_research_participants_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_research_participants_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_reserved_login_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_reserved_logins_search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_reserved_logins_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_restore_repo_bulk_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_restore_repo_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_restore_repo_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_retired_namespace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_retired_namespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_reused_card_fingerprint_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_reused_card_fingerprints_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_search_actions_workflow_execution_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_search_cname_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_search_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_search_indexes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_search_results_async_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_search_user_assets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_seat_limits_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_security_center_dlq_run_job_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_security_center_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_security_incident_response_data_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_security_incident_response_perform_bulk_action_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_security_incident_response_process_data_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_security_incident_response_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_showcase_collection_healthcheck_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_showcase_collection_showcase_item_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_showcase_collection_showcase_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_showcase_collection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_showcase_collections_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sla_reports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_agreement_signature_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_agreement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_agreements_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_approved_sponsorables_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_billing_mismatches_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_bulk_approvals_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_bulk_bans_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_find_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_fiscal_hosts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_fraud_review_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_fraud_reviews_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_invoiced_agreement_signature_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_invoiced_sponsor_credit_balance_confirmation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_invoiced_sponsor_credit_balance_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_invoiced_sponsor_customer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_invoiced_sponsor_invoiced_sponsorships_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_invoiced_sponsor_payment_run_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_invoiced_sponsor_sponsorship_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_invoiced_sponsor_sponsorships_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_invoiced_sponsor_transfer_reversals_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_invoiced_sponsor_transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_invoiced_sponsor_transfers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_invoiced_sponsors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_acceptance_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_activities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_ban_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_child_listings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_criterion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_feature_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_health_checks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_ignore_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_listing_agreement_signature_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_listing_approval_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_listing_disable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_listing_match_ban_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_listing_match_bans_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_listing_match_toggle_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_listing_require_additional_review_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_listing_webhook_toggle_active_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_listing_webhook_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_listing_zuora_sync_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_payout_exports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_reactivation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_receipts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_reputable_orgs_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_request_approval_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_staff_notes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_stripe_connect_account_balance_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_stripe_connect_account_deactivation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_stripe_connect_account_payout_toggle_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_stripe_connect_account_payouts_preview_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_stripe_connect_account_payouts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_stripe_connect_account_sync_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_stripe_connect_account_transfer_match_reversals_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_stripe_connect_account_transfers_preview_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_stripe_connect_account_transfers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_stripe_connect_account_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_stripe_connect_accounts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_transaction_exports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_transfer_refunds_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_transfer_reversals_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_trust_level_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_member_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_members_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_potential_sponsors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_potential_sponsorships_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_sponsorship_pending_change_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_sponsorship_restoration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_sponsorship_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_sponsorships_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_stripe_invoices_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_waitlist_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_sponsors_waitlist_queue_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_ssh_audit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_storage_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_storage_blobs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_storage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_stream_processors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_stripe_webhook_ignore_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_stripe_webhook_perform_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_stripe_webhooks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_subscription_sync_status_force_sync_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_subscription_sync_status_mark_successful_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_subscription_sync_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_subscription_sync_statuses_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_support_plan_uploads_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_test_metered_products_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_toggle_beta_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_toggle_okta_team_sync_beta_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_toggle_reminder_event_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_topic_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_topics_bulk_flag_matching_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_topics_bulk_flag_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_topics_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_trade_compliance_batch_operations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_trade_compliance_microsoft_trade_help_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_trade_compliance_trade_screening_records_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_trade_compliance_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_trending_job_queue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_unminimize_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_unwhitelist_ip_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_update_memex_without_limits_beta_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_update_projects_beta_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_abuse_reports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_achievement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_achievements_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_actions_packages_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_activity_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_acv_contribution_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_acv_contributions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_administrative_tasks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_advanced_security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_anonymously_accessible_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_app_authorization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_app_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_app_transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_application_authorization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_application_transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_applications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_apps_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_archive_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_asset_batch_scan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_asset_scan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_asset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_audit_log_teaser_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_authenticated_devices_unverify_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_authenticated_devices_verify_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_avatar_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_avatars_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_azure_exp_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_billing_actions_usage_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_billing_codespaces_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_billing_history_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_billing_invoices_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_billing_packages_usage_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_billing_per_seat_pricing_model_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_billing_sdlc_licensing_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_billing_show_invoice_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_billing_spending_limits_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_billing_zuora_webhooks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_block_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_blocks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_bulk_restore_environments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_change_tier_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_change_trust_tier_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_codespace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_comments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_commit_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_contribution_class_flags_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_copilot_administrative_block_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_copilot_auth_and_capture_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_copilot_block_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_copilot_business_trials_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_copilot_generate_csv_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_copilot_seat_assignments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_copilot_seats_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_copilot_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_copilot_toggle_email_notifications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_copilot_update_plan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_copilot_usage_metrics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_copilot_warn_via_sire_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_data_packs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_database_record_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_delete_package_version_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_delete_packages_for_repo_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_deprovision_dependent_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_disable_two_factor_requirement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_domains_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_edit_large_file_storage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_employee_access_revocation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_emu_deprovisioning_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_enable_two_factor_requirement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_enabled_feature_flags_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_enterprise_installations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_external_identities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_external_identity_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_feature_enrollments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_follow_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_for_you_feed_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_force_push_preference_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_gist_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_gists_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_github_biztools_promotion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_github_developer_promotion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_gpg_key_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_gpg_keys_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_hosted_compute_networking_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_hubber_access_overrides_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_insight_backfills_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_installations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_interaction_ban_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_interaction_limits_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_interactions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_invitations_collection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_ip_allowlist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_issue_comments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_large_file_storage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_large_scale_contributor_classification_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_ldap_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_legacy_show_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_legal_hold_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_lockout_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_log_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_max_packages_authorizable_per_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_metered_billing_actions_artifact_expirations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_metered_billing_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_metered_billing_advance_quota_reset_date_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_metered_billing_copilot_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_metered_billing_packages_bandwidth_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_metered_billing_rebuild_from_events_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_metered_billing_shared_storage_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_metered_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_metered_exports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_migrate_copilot_for_prs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_mobile_registration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_moderators_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_note_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_notes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_oauth_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_oauth_tokens_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_operator_mode_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_org_owners_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_org_role_assignments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_org_roles_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_organization_custom_properties_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_organization_custom_property_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_organization_membership_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_organization_memberships_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_organization_packages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_organization_profile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_organization_rules_deferred_target_counts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_organization_rules_insights_actors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_organization_rules_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_organization_rules_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_orgs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_overview_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_packages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_per_seat_pricing_model_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_personal_access_token_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_personal_access_token_organizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_personal_access_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_personal_access_token_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_personal_access_token_users_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_personal_access_tokens_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_potential_sponsorable_banner_preview_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_potential_sponsorship_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_potential_sponsorships_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_prepaid_metered_usage_refill_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_prepaid_metered_usage_refills_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_privileged_access_revocation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_profile_data_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_profile_highlight_contribution_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_profile_highlight_contributions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_profile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_projects_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_pronouns_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_purge_deleted_organization_package_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_purge_deleted_package_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_rate_limits_override_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_rate_limits_temporary_override_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_rate_limits_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_refund_transaction_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_reminders_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_remove_from_org_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_rename_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_rename_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_repositories_bulk_privatization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_repositories_collaborations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_repositories_contributions_rebuild_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_repositories_contributions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_repositories_deleted_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_repositories_disabled_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_repositories_dmca_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_repositories_internal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_repositories_locked_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_repositories_notification_preferences_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_repositories_notifyd_notifications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_repositories_pages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_repositories_public_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_repositories_roles_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_repositories_stars_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_repository_notification_preferences_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_restorations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_retired_namespace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_retired_namespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_saml_provider_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_search_record_reindex_org_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_search_record_reindex_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_search_record_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_seat_change_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_security_center_clear_analytics_reconciliation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_security_center_code_scanning_alert_counts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_security_center_dependabot_alert_counts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_security_center_enqueue_analytics_reconciliation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_security_center_initialize_analytics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_security_center_reconciliation_job_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_security_center_reset_analytics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_security_center_secret_scanning_alert_counts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_security_center_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_security_history_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_site_admins_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_social_account_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_soft_deletion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_spam_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_sponsors_patreon_users_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_sponsors_trust_levels_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_ssh_access_preference_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_ssh_keys_certificate_authorities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_ssh_keys_certificate_authority_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_ssh_keys_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_ssh_keys_verification_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_staff_access_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_staff_access_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_standard_contractual_clauses_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_subscription_item_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_subscription_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_successors_promotion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_successors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_sudo_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_suspend_dependent_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_suspension_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_team_external_members_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_team_ldap_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_team_sync_configurations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_teams_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_terms_of_service_record_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_trade_compliance_check_violations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_trade_compliance_manual_screening_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_trade_compliance_restrictions_enforcement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_trade_compliance_screening_profile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_trade_compliance_sdn_suspension_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_trade_compliance_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_transformation_lockout_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_trial_extensions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_trigger_packages_billing_reconciliation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_trigger_packages_docker_storage_reset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_trigger_packages_migration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_trust_tier_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_trust_tiers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_two_factor_credential_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_undeletes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_unlinked_external_identities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_unlinked_external_identity_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_update_large_file_storage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_users_ip_address_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_users_site_admins_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_users_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_vss_subscription_events_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_vulnerabilities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_whitelist_ip_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_zuora_webhook_ignore_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_zuora_webhook_investigate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_zuora_webhook_perform_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_zuora_webhook_sales_operations_issue_details_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stafftools_zuora_webhooks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def standalone_seat_assignments_stafftools_copilot_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def star_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def star_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def star_topic_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stargazers_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stargazers_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stargazers_you_know_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def starred_gists_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stars_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stash_billing_information_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stats_export_enterprise_enterprise_installations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def status_stafftools_repository_pages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stop_billing_check_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stop_billing_check_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stripe_customers_stafftools_sponsors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def styleguide_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def subpoena_discovery_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def subprocessors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def subscribe_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def subscribe_memex_notification_subscription_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def subscription_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def subscription_item_change_duration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def subscription_item_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def subscription_status_stafftools_enterprise_billing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def success_ghas_trial_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def successor_invitation_accept_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def successor_invitation_decline_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sudo_modal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sudo_prompt_mobile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sudo_status_mobile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sudo_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def suggested_notifiers_codespaces_prebuild_configurations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def suggested_reviewers_range_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def suggested_reviewers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def suggestions_enterprise_organization_invitations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def suggestions_user_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def summary_stafftools_enterprise_organizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def supplemental_products_and_features_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def support_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def support_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def survey_responses_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def suspend_codespace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def suspend_environment_component_stafftools_user_codespace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def suspend_environment_stafftools_user_codespace_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def suspend_settings_installation_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def suspend_settings_org_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def suspend_settings_user_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def suspend_stafftools_user_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def suspend_stafftools_user_application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def suspend_stafftools_user_apps_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def suspend_stafftools_user_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def suspended_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def suspended_users_stafftools_reports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def switch_account_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def switch_codeql_setup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sync_account_information_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sync_customer_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sync_external_subscription_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sync_licenses_stafftools_customer_licensify_licenses_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sync_search_index_stafftools_repository_pull_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sync_stafftools_repository_mirror_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sync_stafftools_repository_pull_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sync_stafftools_user_ldap_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sync_stafftools_user_team_ldap_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sync_stafftools_user_team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def synchronization_stafftools_user_plan_subscription_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def syntax_highlighted_diff_entries_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tag_count_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tags_feed_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tags_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tarball_legacy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tarball_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tarball_user_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_autocomplete_org_reminders_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_discussion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_discussions_selected_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_discussions_transfer_button_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_discussions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_marketing_page_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_member_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_members_migrate_to_collaborator_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_members_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_membership_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_notification_watch_subscription_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_parent_search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_policies_stafftools_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_post_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_posts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_project_beta_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_project_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_project_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_projects_beta_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_projects_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_reminder_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_reminders_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_repository_bulk_remove_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_repository_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_seats_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_set_maintainer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_set_role_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_sync_approve_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_sync_approve_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_sync_azure_callback_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_sync_beta_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_sync_cancel_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_sync_cancel_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_sync_disable_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_sync_disable_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_sync_initiate_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_sync_initiate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_sync_install_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_sync_install_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_sync_okta_credentials_edit_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_sync_okta_credentials_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_sync_okta_credentials_new_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_sync_okta_install_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_sync_review_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_sync_review_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_sync_setup_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_sync_setup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_sync_update_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_sync_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_teams_toolbar_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_teams_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def teams_enterprise_security_managers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def teams_notifications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def teams_set_visibility_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def teams_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def templates_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ten_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def terms_and_conditions_services_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def terms_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def test_custom_secret_scanning_pattern_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def thanks_developer_program_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def thanks_enterprise_contact_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def thankyou_services_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def third_party_app_installation_action_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def third_party_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def timeline_anchor_discussion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def timeline_feed_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def timeline_focused_item_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def timeline_issue_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_allow_git_graph_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_anonymous_release_download_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_attribute_stafftools_user_profile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_auto_subscribe_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_auto_subscribe_teams_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_blocked_stafftools_repository_svn_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_code_search_indexing_stafftools_search_indexes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_code_search_stafftools_search_indexes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_creator_biztools_repository_actions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_debug_stafftools_repository_svn_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_dev_flags_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_email_visibility_warning_user_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_hook_active_status_stafftools_user_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_in_memory_devtools_feature_flags_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_list_action_package_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_new_commits_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_new_mergebox_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_override_for_owned_orgs_stafftools_user_spam_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_permission_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_prx_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_public_push_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_renaming_or_deleting_stafftools_user_spam_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_repository_projects_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_stafftools_user_feature_enrollments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_state_codespaces_prebuild_configuration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_tiered_reporting_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_token_scanning_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_visibility_user_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def token_check_name_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def topic_autocomplete_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def topic_show_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def topic_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def topics_by_email_settings_email_subscriptions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def topics_by_params_settings_email_subscriptions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def topics_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def topics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tos_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def total_enterprise_billing_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def total_organization_settings_billing_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def total_settings_billing_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def total_stafftools_enterprise_billing_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tracking_block_menu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tracking_block_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def trade_screening_record_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def traffic_data_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def traffic_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def training_events_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def training_free_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def training_online_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def training_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def transfer_issue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def transfer_repo_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def transfer_settings_org_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def transfer_settings_org_application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def transfer_settings_user_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def transfer_settings_user_application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def transfer_suggestions_stafftools_user_app_transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def transfer_suggestions_stafftools_user_application_transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def transform_organizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def transforming_organizations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def transition_licensing_model_stafftools_enterprise_licensing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tree_commit_info_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tree_commit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tree_find_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tree_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tree_stafftools_repository_network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tree_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def trending_developers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def trending_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def triage_issues_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def trials_stafftools_enterprises_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def trigger_azure_emissions_trigger_emission_stafftools_enterprise_billing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def trigger_packages_billing_reconciliation_stafftools_actions_packages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def trust_center_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def trusted_device_continue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def trusted_device_create_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def trusted_device_decline_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def trusted_device_nickname_check_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def trusted_device_registration_prompt_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def trusted_device_upgrade_prompt_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def trusted_repository_select_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_app_prompt_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_prompt_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_recover_prompt_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_recover_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_recovery_abort_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_recovery_account_recovery_abort_metrics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_recovery_completed_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_recovery_confirm_abort_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_recovery_continue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_recovery_request_enter_ssh_key_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_recovery_request_enter_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_recovery_request_send_otp_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_recovery_request_start_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_recovery_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_recovery_request_verify_device_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_recovery_request_verify_otp_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_recovery_request_verify_ssh_key_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_recovery_request_verify_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_recovery_request_without_password_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_recovery_unlink_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_resend_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_send_fallback_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_sms_confirm_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_sms_prompt_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_sms_send_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def two_factor_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def u2f_create_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def u2f_destroy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def u2f_edit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def u2f_login_fragment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def u2f_trusted_facets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unarchive_memex_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unarchive_org_project_card_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unarchive_org_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unarchive_repo_project_card_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unarchive_stafftools_repository_large_file_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unarchive_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unarchive_user_project_card_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unassign_self_from_issue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unblock_archive_download_stafftools_repository_network_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unblock_archive_download_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unblock_archive_download_stafftools_user_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unblock_stafftools_enterprise_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unchanged_files_with_annotations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unclaim_primary_email_stafftools_user_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def undo_cleanup_pull_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unfollow_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def uninstall_stafftools_user_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def uninvite_member_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def universe_2016_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def universe_23_waitlist_test_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unlink_repo_project_beta_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unlink_stafftools_project_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unlink_trade_screening_record_from_org_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unlinked_external_identities_stafftools_enterprise_external_identities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unlinked_external_identity_stafftools_enterprise_external_identities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unlinked_external_members_stafftools_enterprise_external_identities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unlock_billing_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unlock_build_stafftools_repository_pages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unlock_commit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unlock_discussion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unlock_issue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unlock_repository_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unlock_stafftools_project_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unlock_stafftools_repository_discussion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unlock_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unmark_as_answer_discussion_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unmark_issue_as_duplicate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unminimize_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unminimize_discussion_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unpaid_sponsorships_stafftools_sponsors_billing_mismatches_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unpause_stafftools_merge_commit_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unpin_environment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unpin_issue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unpin_workflow_dialogs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unpin_workflow_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unpublish_page_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unpublish_unsearchable_releases_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unresolve_abuse_reports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unresolve_review_thread_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unset_successor_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unstar_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unstar_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unstar_topic_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unsubscribe_memex_notification_subscription_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unsubscribe_settings_email_subscriptions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unsuspend_settings_installation_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unsuspend_settings_org_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unsuspend_settings_user_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unsuspend_stafftools_user_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unsuspend_stafftools_user_apps_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unsuspend_stafftools_user_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unverified_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unverified_listing_approval_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unverify_stafftools_domain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unwatch_all_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unwatch_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_action_category_contact_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_actions_repository_share_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_actions_workflow_schedules_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_alias_app_installation_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_alias_app_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_allow_private_repository_forking_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_azure_subscription_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_bill_cycle_day_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_billing_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_branch_pull_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_business_app_installation_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_business_app_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_commit_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_config_info_codespaces_prebuild_configurations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_creation_limit_stafftools_user_applications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_creation_limit_stafftools_user_apps_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_credit_card_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_custom_pattern_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_custom_pattern_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_default_branch_setting_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_default_repository_permission_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_dependabot_rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_emu_contributions_sharing_enabled_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_environment_branch_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_external_app_installation_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_external_app_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_featured_customers_marketplace_listing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_links_team_project_beta_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_members_can_change_project_visibility_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_members_can_change_repo_visibility_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_members_can_view_dependency_insights_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_memex_chart_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_memex_column_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_memex_item_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_memex_items_bulk_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_memex_project_column_option_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_memex_project_workflow_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_memex_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_memex_view_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_metered_via_azure_stafftools_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_notification_settings_settings_notification_preferences_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_notifiers_codespaces_prebuild_configurations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_org_default_branch_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_org_interaction_limits_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_org_memex_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_org_project_state_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_org_runner_labels_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_org_signoff_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_org_user_label_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_package_actions_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_package_collaborator_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_parent_dependabot_rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_password_reset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_pending_plan_change_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_permissions_settings_business_installation_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_permissions_settings_org_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_permissions_settings_org_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_permissions_settings_user_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_permissions_settings_user_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_primary_enterprise_billing_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_progress_bar_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_reaction_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_release_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repo_meta_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repo_project_state_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repo_runner_label_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repo_topics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repos_org_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repository_advisory_body_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repository_advisory_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repository_archive_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repository_auto_codeql_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repository_branch_protection_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repository_dco_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repository_default_branch_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repository_default_workflow_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repository_fork_pr_approvals_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repository_fork_pr_workflows_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repository_ghas_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repository_members_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repository_merge_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repository_notification_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repository_public_fork_pr_workflows_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repository_push_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repository_reaction_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repository_wiki_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_repository_wiki_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_review_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_review_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_sample_devtools_experiment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_security_products_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_settings_actions_bulk_orgs_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_settings_app_permissions_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_settings_business_installation_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_settings_codespaces_org_enablement_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_settings_copilot_bulk_org_enablement_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_settings_copilot_content_exclusion_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_settings_copilot_enablement_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_settings_copilot_individual_org_enablement_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_settings_copilot_policy_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_settings_email_subscriptions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_settings_network_configurations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_settings_org_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_settings_org_repository_roles_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_settings_org_roles_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_settings_organization_projects_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_settings_projects_automation_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_settings_repository_projects_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_settings_sync_codespaces_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_settings_user_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_standalone_seat_assignment_stafftools_copilot_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_team_discussions_allowed_enterprise_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_team_discussions_enabled_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_team_reaction_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_team_review_assignment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_user_app_installation_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_user_app_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_user_gist_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_user_gist_file_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_user_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_user_memex_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_user_project_state_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_version_stafftools_search_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_workers_stafftools_search_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def updates_customer_term_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def updates_satellite_2016_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def updates_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def upgrade_confirm_enterprise_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def upgrade_enterprise_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def upgrade_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def upgrading_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def upload_manifests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def upload_policy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def upload_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def upsert_repo_project_beta_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def upsert_team_project_beta_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def usage_chart_enterprise_billing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def usage_export_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def usage_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def usage_jobs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def usage_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def usage_summary_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def usage_table_enterprise_billing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def usage_table_stafftools_enterprise_billing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def usage_workflows_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def used_by_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_access_token_select_access_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_access_token_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_accounts_sync_enterprise_enterprise_installations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_accounts_uploads_stafftools_enterprise_installation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_achievement_detail_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_achievement_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_achievements_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_activities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_app_installation_action_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_app_installation_permissions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_app_installations_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_app_installations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_app_select_target_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_app_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_atom_feed_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_avatar_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_cancel_email_claim_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_card_pull_request_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_code_prompt_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_confirm_claim_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_confirm_verification_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_content_edit_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_contribution_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_contributions_sample_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_contributions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_dismiss_project_notice_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_download_active_committers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_file_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_followers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_following_index_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_forked_gists_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_gist_at_revision_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_gist_comments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_gists_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_gpg_key_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_identicon_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_identification_survey_response_autocomplete_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_identification_survey_response_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_list_activity_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_list_checks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_list_menu_batches_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_lists_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_mark_email_as_unclaimed_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_memex_assets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_memex_count_issues_and_pulls_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_memex_dismiss_notice_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_memex_filter_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_memex_search_issues_and_pulls_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_memex_search_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_memex_stats_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_memex_suggested_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_memex_without_limits_beta_optout_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_memex_without_limits_beta_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_move_work_choose_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_move_work_choose_resources_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_move_work_confirmation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_move_work_memex_projects_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_move_work_new_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_move_work_organization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_move_work_projects_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_move_work_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_organizations_info_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_packages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_pinnable_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_pinned_items_modal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_profile_view_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_activity_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_add_cards_link_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_archived_cards_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_card_closing_reference_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_card_closing_references_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_card_columns_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_card_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_cards_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_check_archived_card_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_clone_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_column_archive_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_column_automation_options_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_column_cards_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_column_update_workflow_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_column_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_columns_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_convert_note_to_issue_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_hovercard_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_migrate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_migration_status_notice_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_preview_note_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_repository_results_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_search_archived_cards_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_search_results_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_settings_linked_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_settings_users_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_target_owner_results_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_update_note_task_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_update_note_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_project_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_projects_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_public_gists_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_pull_requests_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_reorder_pinned_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_reorder_project_columns_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_request_claim_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_review_file_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_search_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_secret_gists_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_sessions_revoke_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_set_pinned_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_set_protocol_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_sponsorings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_ssh_key_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_ssh_signing_key_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_staff_access_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_starred_gists_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_stars_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_status_emoji_picker_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_status_org_picker_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_successor_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_suggestions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_tab_counts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def username_check_get_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def users_api_org_insights_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def users_stars_repositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def users_stars_topics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def users_stars_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def users_status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def validate_private_network_settings_network_configurations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def verification_steps_enterprise_domain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def verification_steps_org_domain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def verified_device_authenticate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def verified_device_prompt_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def verified_financial_listing_approval_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def verified_listing_approval_request_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def verify_deploy_key_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def verify_email_format_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def verify_enterprise_domain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def verify_org_domain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def verify_public_key_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def verify_stafftools_domain_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def view_repository_ruleset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def view_repository_rulesets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def view_ruleset_history_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def votes_discussion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def watchers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def watching_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def web_worker_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def webauthn_authenticate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def webauthn_prompt_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def wiki__history_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def wiki__preview_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def wiki_current_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def wiki_dismiss_help_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def wiki_mark_as_broken_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def wiki_pages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def wiki_restore_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def wiki_schedule_maintenance_stafftools_repository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def wiki_toc_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def wiki_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def wikis_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def windows_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_badge_by_file_configure_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_badge_by_file_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_badge_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_action_required_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_annotations_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_approvals_banner_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_approvals_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_artifacts_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_attempt_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_attempts_menu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_concurrency_banner_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_delete_pull_requests_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_download_artifact_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_failed_jobs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_file_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_graph_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_header_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_item_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_job_downstream_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_job_step_backscroll_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_job_steps_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_job_summary_content_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_job_summary_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_job_summary_raw_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_job_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_jobs_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_navigation_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_new_attempts_menu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_rerequest_check_suite_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_sidebar_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_summary_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_run_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_runs_list_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflow_runs_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def workflows_partial_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def works_with_new_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def works_with_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def zipball_legacy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def zipball_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def zipball_user_gist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def zuora_payment_page_signature_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def zuora_payment_url(*args); end
end
