# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Gateway::Api::V2::ProduceRequest::Message`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Gateway::Api::V2::ProduceRequest::Message`.

class Hydro::Gateway::Api::V2::ProduceRequest::Message
  sig do
    params(
      compress: T.nilable(T::Boolean),
      headers: T.nilable(T.any(Google::Protobuf::RepeatedField[Hydro::Gateway::Api::V2::ProduceRequest::Message::MessageHeader], T::Array[Hydro::Gateway::Api::V2::ProduceRequest::Message::MessageHeader])),
      key: T.nilable(Google::Protobuf::BytesValue),
      partition: T.nilable(Google::Protobuf::UInt32Value),
      partition_key: T.nilable(String),
      topic: T.nilable(String),
      value: T.nilable(Google::Protobuf::BytesValue)
    ).void
  end
  def initialize(compress: nil, headers: T.unsafe(nil), key: nil, partition: nil, partition_key: nil, topic: nil, value: nil); end

  sig { void }
  def clear_compress; end

  sig { void }
  def clear_headers; end

  sig { void }
  def clear_key; end

  sig { void }
  def clear_partition; end

  sig { void }
  def clear_partition_key; end

  sig { void }
  def clear_topic; end

  sig { void }
  def clear_value; end

  sig { returns(T::Boolean) }
  def compress; end

  sig { params(value: T::Boolean).void }
  def compress=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Hydro::Gateway::Api::V2::ProduceRequest::Message::MessageHeader]) }
  def headers; end

  sig do
    params(
      value: Google::Protobuf::RepeatedField[Hydro::Gateway::Api::V2::ProduceRequest::Message::MessageHeader]
    ).void
  end
  def headers=(value); end

  sig { returns(T.nilable(Google::Protobuf::BytesValue)) }
  def key; end

  sig { params(value: T.nilable(Google::Protobuf::BytesValue)).void }
  def key=(value); end

  sig { returns(T.nilable(Google::Protobuf::UInt32Value)) }
  def partition; end

  sig { params(value: T.nilable(Google::Protobuf::UInt32Value)).void }
  def partition=(value); end

  sig { returns(String) }
  def partition_key; end

  sig { params(value: String).void }
  def partition_key=(value); end

  sig { returns(String) }
  def topic; end

  sig { params(value: String).void }
  def topic=(value); end

  sig { returns(T.nilable(Google::Protobuf::BytesValue)) }
  def value; end

  sig { params(value: T.nilable(Google::Protobuf::BytesValue)).void }
  def value=(value); end
end
