export interface CertificateAttributes {
  common_name?: string
  email_address?: string
  organization?: string
  organization_unit?: string
}

export type VerificationStatus = 'verified' | 'unverified' | 'partially_verified' | 'unsigned'

/**
 * Generated by the server. This value comes from `Commits::SignedCommitBadge#typename`
 * Unsigned commits will have a `null` singature type
 */
export type CommitSignatureType = 'GpgSignature' | 'SmimeSignature' | 'SshSignature' | null

export interface SignatureResult {
  hasSignature: boolean
  helpUrl: string
  isViewer: boolean
  keyExpired: boolean
  /** For GPG signatures this is the signature issuer's key id. For SSH signatures it's the fingerprint
   * of the public key.
   */
  keyId: string
  keyRevoked: boolean
  signedByGitHub: boolean
  signerLogin: string
  signerAvatarUrl: string
  signatureType: CommitSignatureType
  signatureCertificateSubject?: CertificateAttributes
  signatureCertificateIssuer?: CertificateAttributes
  signatureVerificationReason: string
}
