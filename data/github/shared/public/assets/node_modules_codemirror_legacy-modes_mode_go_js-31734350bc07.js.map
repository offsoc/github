{"version":3,"file":"chunk-node_modules_codemirror_legacy-modes_mode_go_js-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@codemirror/legacy-modes/mode/go.js"],"sourcesContent":["var keywords = {\n  \"break\":true, \"case\":true, \"chan\":true, \"const\":true, \"continue\":true,\n  \"default\":true, \"defer\":true, \"else\":true, \"fallthrough\":true, \"for\":true,\n  \"func\":true, \"go\":true, \"goto\":true, \"if\":true, \"import\":true,\n  \"interface\":true, \"map\":true, \"package\":true, \"range\":true, \"return\":true,\n  \"select\":true, \"struct\":true, \"switch\":true, \"type\":true, \"var\":true,\n  \"bool\":true, \"byte\":true, \"complex64\":true, \"complex128\":true,\n  \"float32\":true, \"float64\":true, \"int8\":true, \"int16\":true, \"int32\":true,\n  \"int64\":true, \"string\":true, \"uint8\":true, \"uint16\":true, \"uint32\":true,\n  \"uint64\":true, \"int\":true, \"uint\":true, \"uintptr\":true, \"error\": true,\n  \"rune\":true, \"any\":true, \"comparable\":true\n};\n\nvar atoms = {\n  \"true\":true, \"false\":true, \"iota\":true, \"nil\":true, \"append\":true,\n  \"cap\":true, \"close\":true, \"complex\":true, \"copy\":true, \"delete\":true, \"imag\":true,\n  \"len\":true, \"make\":true, \"new\":true, \"panic\":true, \"print\":true,\n  \"println\":true, \"real\":true, \"recover\":true\n};\n\nvar isOperatorChar = /[+\\-*&^%:=<>!|\\/]/;\n\nvar curPunc;\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n  if (ch == '\"' || ch == \"'\" || ch == \"`\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n  if (/[\\d\\.]/.test(ch)) {\n    if (ch == \".\") {\n      stream.match(/^[0-9]+([eE][\\-+]?[0-9]+)?/);\n    } else if (ch == \"0\") {\n      stream.match(/^[xX][0-9a-fA-F]+/) || stream.match(/^0[0-7]+/);\n    } else {\n      stream.match(/^[0-9]*\\.?[0-9]*([eE][\\-+]?[0-9]+)?/);\n    }\n    return \"number\";\n  }\n  if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n    curPunc = ch;\n    return null;\n  }\n  if (ch == \"/\") {\n    if (stream.eat(\"*\")) {\n      state.tokenize = tokenComment;\n      return tokenComment(stream, state);\n    }\n    if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n  }\n  if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n  stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n  var cur = stream.current();\n  if (keywords.propertyIsEnumerable(cur)) {\n    if (cur == \"case\" || cur == \"default\") curPunc = \"case\";\n    return \"keyword\";\n  }\n  if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n  return \"variable\";\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {end = true; break;}\n      escaped = !escaped && quote != \"`\" && next == \"\\\\\";\n    }\n    if (end || !(escaped || quote == \"`\"))\n      state.tokenize = tokenBase;\n    return \"string\";\n  };\n}\n\nfunction tokenComment(stream, state) {\n  var maybeEnd = false, ch;\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return \"comment\";\n}\n\nfunction Context(indented, column, type, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.align = align;\n  this.prev = prev;\n}\nfunction pushContext(state, col, type) {\n  return state.context = new Context(state.indented, col, type, null, state.context);\n}\nfunction popContext(state) {\n  if (!state.context.prev) return;\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\n// Interface\n\nexport const go = {\n  name: \"go\",\n  startState: function(indentUnit) {\n    return {\n      tokenize: null,\n      context: new Context(-indentUnit, 0, \"top\", false),\n      indented: 0,\n      startOfLine: true\n    };\n  },\n\n  token: function(stream, state) {\n    var ctx = state.context;\n    if (stream.sol()) {\n      if (ctx.align == null) ctx.align = false;\n      state.indented = stream.indentation();\n      state.startOfLine = true;\n      if (ctx.type == \"case\") ctx.type = \"}\";\n    }\n    if (stream.eatSpace()) return null;\n    curPunc = null;\n    var style = (state.tokenize || tokenBase)(stream, state);\n    if (style == \"comment\") return style;\n    if (ctx.align == null) ctx.align = true;\n\n    if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n    else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n    else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n    else if (curPunc == \"case\") ctx.type = \"case\";\n    else if (curPunc == \"}\" && ctx.type == \"}\") popContext(state);\n    else if (curPunc == ctx.type) popContext(state);\n    state.startOfLine = false;\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    if (state.tokenize != tokenBase && state.tokenize != null) return null;\n    var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n    if (ctx.type == \"case\" && /^(?:case|default)\\b/.test(textAfter)) return ctx.indented;\n    var closing = firstChar == ctx.type;\n    if (ctx.align) return ctx.column + (closing ? 0 : 1);\n    else return ctx.indented + (closing ? 0 : cx.unit);\n  },\n\n  languageData: {\n    indentOnInput: /^\\s([{}]|case |default\\s*:)$/,\n    commentTokens: {line: \"//\", block: {open: \"/*\", close: \"*/\"}}\n  }\n};\n\n"],"names":["curPunc","keywords","atoms","isOperatorChar","tokenBase","stream","state","ch","next","tokenize","escaped","end","quote","test","match","eat","tokenComment","skipToEnd","eatWhile","cur","current","propertyIsEnumerable","maybeEnd","Context","indented","column","type","align","prev","pushContext","col","context","popContext","t","go","name","startState","indentUnit","startOfLine","token","ctx","sol","indentation","eatSpace","style","indent","textAfter","cx","firstChar","charAt","closing","unit","languageData","indentOnInput","commentTokens","line","block","open","close"],"sourceRoot":""}