#!/usr/bin/env sh
# Usage: script/changelog [-r <repo>] [-b <base>] [-h <head>]
#
#  repo: base string of GitHub repository url. e.g. "user_or_org/repository". Defaults to git remote url.
#  base: git ref to compare from. e.g. "v1.3.1". Defaults to latest git tag.
#  head: git ref to compare to. Defaults to "HEAD".
#
# Generate a changelog preview from pull requests merged between `base` and
# `head`.
#
set -e

[ $# -eq 0 ] && set -- --help

# parse args
repo=$(git remote -v | grep push | awk '{print $2}' | cut -d'/' -f4- | sed 's/\.git//')
base=$(git tag -l | sort -n | tail -n 1)
head="HEAD"
api_url="https://api.github.com"

echo "# $repo $base..$head"
echo

# get merged PR's. Better way is to query the API for these, but this is easier
for pr in $(git log --oneline $base..$head | grep "Merge pull request" | awk '{gsub("#",""); print $5}')
do
  # frustrated with trying to pull out the right values, fell back to ruby
  curl -s "$api_url/repos/$repo/pulls/$pr" | ruby -rjson -e 'pr=JSON.parse(STDIN.read); puts "* #{pr[%q(title)]} [##{pr[%q(number)]}](#{pr[%q(html_url)]})"'
done
