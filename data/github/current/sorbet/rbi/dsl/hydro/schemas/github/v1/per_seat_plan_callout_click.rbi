# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::PerSeatPlanCalloutClick`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::PerSeatPlanCalloutClick`.

class Hydro::Schemas::Github::V1::PerSeatPlanCalloutClick
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      callout_destination: T.nilable(String),
      callout_location: T.nilable(String),
      callout_page: T.nilable(String),
      callout_text: T.nilable(String),
      current_plan: T.nilable(String),
      organization: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)
    ).void
  end
  def initialize(actor: nil, callout_destination: nil, callout_location: nil, callout_page: nil, callout_text: nil, current_plan: nil, organization: nil, request_context: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { returns(String) }
  def callout_destination; end

  sig { params(value: String).void }
  def callout_destination=(value); end

  sig { returns(String) }
  def callout_location; end

  sig { params(value: String).void }
  def callout_location=(value); end

  sig { returns(String) }
  def callout_page; end

  sig { params(value: String).void }
  def callout_page=(value); end

  sig { returns(String) }
  def callout_text; end

  sig { params(value: String).void }
  def callout_text=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_callout_destination; end

  sig { void }
  def clear_callout_location; end

  sig { void }
  def clear_callout_page; end

  sig { void }
  def clear_callout_text; end

  sig { void }
  def clear_current_plan; end

  sig { void }
  def clear_organization; end

  sig { void }
  def clear_request_context; end

  sig { returns(String) }
  def current_plan; end

  sig { params(value: String).void }
  def current_plan=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def organization; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def organization=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end
end
