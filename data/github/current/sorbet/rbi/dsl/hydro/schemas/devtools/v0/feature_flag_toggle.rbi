# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Devtools::V0::FeatureFlagToggle`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Devtools::V0::FeatureFlagToggle`.

class Hydro::Schemas::Devtools::V0::FeatureFlagToggle
  sig do
    params(
      feature_name: T.nilable(String),
      gate_name: T.nilable(T.any(Symbol, Integer)),
      operation: T.nilable(T.any(Symbol, Integer)),
      result: T.nilable(T::Boolean),
      subject: T.nilable(String),
      subject_class: T.nilable(String),
      subject_id: T.nilable(String)
    ).void
  end
  def initialize(feature_name: nil, gate_name: nil, operation: nil, result: nil, subject: nil, subject_class: nil, subject_id: nil); end

  sig { void }
  def clear_feature_name; end

  sig { void }
  def clear_gate_name; end

  sig { void }
  def clear_operation; end

  sig { void }
  def clear_result; end

  sig { void }
  def clear_subject; end

  sig { void }
  def clear_subject_class; end

  sig { void }
  def clear_subject_id; end

  sig { returns(String) }
  def feature_name; end

  sig { params(value: String).void }
  def feature_name=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def gate_name; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def gate_name=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def operation; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def operation=(value); end

  sig { returns(T::Boolean) }
  def result; end

  sig { params(value: T::Boolean).void }
  def result=(value); end

  sig { returns(String) }
  def subject; end

  sig { params(value: String).void }
  def subject=(value); end

  sig { returns(String) }
  def subject_class; end

  sig { params(value: String).void }
  def subject_class=(value); end

  sig { returns(String) }
  def subject_id; end

  sig { params(value: String).void }
  def subject_id=(value); end
end
