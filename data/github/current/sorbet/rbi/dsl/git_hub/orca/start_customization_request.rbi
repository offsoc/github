# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Orca::StartCustomizationRequest`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Orca::StartCustomizationRequest`.

class GitHub::Orca::StartCustomizationRequest
  sig do
    params(
      chatops_metadata: T.nilable(Google::Protobuf::Struct),
      dotcom_actor: T.nilable(GitHub::Orca::Actor),
      integration_test: T.nilable(T::Boolean),
      language_filters: T.nilable(T.any(Google::Protobuf::RepeatedField[GitHub::Orca::LingustLanguage], T::Array[GitHub::Orca::LingustLanguage])),
      noop: T.nilable(T::Boolean),
      organization: T.nilable(GitHub::Orca::Organization),
      repositories: T.nilable(T.any(Google::Protobuf::RepeatedField[GitHub::Orca::Repository], T::Array[GitHub::Orca::Repository])),
      use_private_telemetry: T.nilable(T::Boolean)
    ).void
  end
  def initialize(chatops_metadata: nil, dotcom_actor: nil, integration_test: nil, language_filters: T.unsafe(nil), noop: nil, organization: nil, repositories: T.unsafe(nil), use_private_telemetry: nil); end

  sig { returns(T.nilable(Google::Protobuf::Struct)) }
  def chatops_metadata; end

  sig { params(value: T.nilable(Google::Protobuf::Struct)).void }
  def chatops_metadata=(value); end

  sig { void }
  def clear_chatops_metadata; end

  sig { void }
  def clear_dotcom_actor; end

  sig { void }
  def clear_integration_test; end

  sig { void }
  def clear_language_filters; end

  sig { void }
  def clear_noop; end

  sig { void }
  def clear_organization; end

  sig { void }
  def clear_repositories; end

  sig { void }
  def clear_use_private_telemetry; end

  sig { returns(T.nilable(GitHub::Orca::Actor)) }
  def dotcom_actor; end

  sig { params(value: T.nilable(GitHub::Orca::Actor)).void }
  def dotcom_actor=(value); end

  sig { returns(T::Boolean) }
  def integration_test; end

  sig { params(value: T::Boolean).void }
  def integration_test=(value); end

  sig { returns(Google::Protobuf::RepeatedField[GitHub::Orca::LingustLanguage]) }
  def language_filters; end

  sig { params(value: Google::Protobuf::RepeatedField[GitHub::Orca::LingustLanguage]).void }
  def language_filters=(value); end

  sig { returns(T::Boolean) }
  def noop; end

  sig { params(value: T::Boolean).void }
  def noop=(value); end

  sig { returns(T.nilable(GitHub::Orca::Organization)) }
  def organization; end

  sig { params(value: T.nilable(GitHub::Orca::Organization)).void }
  def organization=(value); end

  sig { returns(Google::Protobuf::RepeatedField[GitHub::Orca::Repository]) }
  def repositories; end

  sig { params(value: Google::Protobuf::RepeatedField[GitHub::Orca::Repository]).void }
  def repositories=(value); end

  sig { returns(T::Boolean) }
  def use_private_telemetry; end

  sig { params(value: T::Boolean).void }
  def use_private_telemetry=(value); end
end
