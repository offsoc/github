---
summary: Get a code scanning analysis for a repository
description: |-
  Gets a specified code scanning analysis for a repository.

  The default JSON response contains fields that describe the analysis.
  This includes the Git reference and commit SHA to which the analysis relates,
  the datetime of the analysis, the name of the code scanning tool,
  and the number of alerts.

  The `rules_count` field in the default response give the number of rules
  that were run in the analysis.
  For very old analyses this data is not available,
  and `0` is returned in this field.

  This endpoint supports the following custom media types. For more information, see "[Media types](${externalDocsUrl}/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."

  - **`application/sarif+json`**: Instead of returning a summary of the analysis, this endpoint returns a subset of the analysis data that was uploaded. The data is formatted as [SARIF version 2.1.0](https://docs.oasis-open.org/sarif/sarif/v2.1.0/cs01/sarif-v2.1.0-cs01.html). It also returns additional data such as the `github/alertNumber` and `github/alertUrl` properties.

  OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
operationId: code-scanning/get-analysis
tags:
  - code-scanning
externalDocs:
  description: API method documentation
  url: '${externalDocsUrl}/rest/code-scanning/code-scanning#get-a-code-scanning-analysis-for-a-repository'
parameters:
  - $ref: '../../components/parameters/owner.yaml'
  - $ref: '../../components/parameters/repo.yaml'
  - name: analysis_id
    in: path
    description: The ID of the analysis, as returned from the `GET /repos/{owner}/{repo}/code-scanning/analyses`
      operation.
    required: true
    schema:
      type: integer
responses:
  '200':
    description: Response
    content:
      application/json:
        schema:
          $ref: '../../components/schemas/code-scanning-analysis.yaml'
        examples:
          response:
            $ref: '../../components/examples/code-scanning-analysis-default.yaml'
      application/json+sarif:
        schema:
          type: object
          additionalProperties: true
        examples:
          response:
            $ref: '../../components/examples/code-scanning-analysis-sarif.yaml'
  '403':
    $ref: '../../components/responses/code_scanning_forbidden_read.yaml'
  '404':
    $ref: '../../components/responses/not_found.yaml'
  '503':
    $ref: '../../components/responses/service_unavailable.yaml'
x-github:
  enabledForGitHubApps: true
  githubCloudOnly: false

  category: code-scanning
  subcategory: code-scanning
x-github-releases:
  - ghec
  - ghes:
      - '>= 3.1'
  - api.github.com
x-github-internal:
  path: '/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}'
  http-method: get
  owner: '@github/code-scanning-experiences'
  published: true
  deprecatedFields: true
x-github-breaking-changes:
  - changeset: fix_sarif_content_type
    patch:
      responses:
        '200':
          content:
            application/sarif+json:
              schema:
                type: object
                additionalProperties: true
            application/json+sarif:
x-githubEnterpriseOverlays:
  '< 3.3':
    description: |-
      Gets a specified code scanning analysis for a repository.
      You must use an access token with the `security_events` scope to use this endpoint.
      GitHub Apps must have the `security_events` read permission to use this endpoint.

      The default JSON response contains fields that describe the analysis.
      This includes the Git reference and commit SHA to which the analysis relates,
      the datetime of the analysis, the name of the code scanning tool,
      and the number of alerts.

      The `rules_count` field in the default response give the number of rules
      that were run in the analysis.
      For very old analyses this data is not available,
      and `0` is returned in this field.

      If you use the Accept header `application/sarif+json`,
      the response contains the analysis data that was uploaded.
      This is formatted as
      [SARIF version 2.1.0](https://docs.oasis-open.org/sarif/sarif/v2.1.0/cs01/sarif-v2.1.0-cs01.html).

      > [!WARNING]
      > **Deprecation notice:** The `tool_name` field is deprecated and will, in future, not be included in the response for this endpoint. The example response reflects this change. The tool name can now be found inside the `tool` field.
  '3.3':
    description: |-
      Gets a specified code scanning analysis for a repository.
      You must use an access token with the `security_events` scope to use this endpoint.
      GitHub Apps must have the `security_events` read permission to use this endpoint.

      The default JSON response contains fields that describe the analysis.
      This includes the Git reference and commit SHA to which the analysis relates,
      the datetime of the analysis, the name of the code scanning tool,
      and the number of alerts.

      The `rules_count` field in the default response give the number of rules
      that were run in the analysis.
      For very old analyses this data is not available,
      and `0` is returned in this field.

      If you use the Accept header `application/sarif+json`,
      the response contains the analysis data that was uploaded.
      This is formatted as
      [SARIF version 2.1.0](https://docs.oasis-open.org/sarif/sarif/v2.1.0/cs01/sarif-v2.1.0-cs01.html).
