# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Proto::SecretScanning::Users::V1::FindUsersRequest`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Proto::SecretScanning::Users::V1::FindUsersRequest`.

class GitHub::Proto::SecretScanning::Users::V1::FindUsersRequest
  sig do
    params(
      business_selector: T.nilable(GitHub::Proto::SecretScanning::Users::V1::BusinessSelector),
      cursor: T.nilable(String),
      ids: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer])),
      ids_selector: T.nilable(GitHub::Proto::SecretScanning::Users::V1::IdsSelector),
      logins_selector: T.nilable(GitHub::Proto::SecretScanning::Users::V1::LoginsSelector)
    ).void
  end
  def initialize(business_selector: nil, cursor: nil, ids: T.unsafe(nil), ids_selector: nil, logins_selector: nil); end

  sig { returns(T.nilable(GitHub::Proto::SecretScanning::Users::V1::BusinessSelector)) }
  def business_selector; end

  sig { params(value: T.nilable(GitHub::Proto::SecretScanning::Users::V1::BusinessSelector)).void }
  def business_selector=(value); end

  sig { void }
  def clear_business_selector; end

  sig { void }
  def clear_cursor; end

  sig { void }
  def clear_ids; end

  sig { void }
  def clear_ids_selector; end

  sig { void }
  def clear_logins_selector; end

  sig { returns(String) }
  def cursor; end

  sig { params(value: String).void }
  def cursor=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def ids; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def ids=(value); end

  sig { returns(T.nilable(GitHub::Proto::SecretScanning::Users::V1::IdsSelector)) }
  def ids_selector; end

  sig { params(value: T.nilable(GitHub::Proto::SecretScanning::Users::V1::IdsSelector)).void }
  def ids_selector=(value); end

  sig { returns(T.nilable(GitHub::Proto::SecretScanning::Users::V1::LoginsSelector)) }
  def logins_selector; end

  sig { params(value: T.nilable(GitHub::Proto::SecretScanning::Users::V1::LoginsSelector)).void }
  def logins_selector=(value); end

  sig { returns(T.nilable(Symbol)) }
  def selector; end
end
