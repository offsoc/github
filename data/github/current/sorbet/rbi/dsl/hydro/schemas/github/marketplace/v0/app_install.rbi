# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Marketplace::V0::AppInstall`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Marketplace::V0::AppInstall`.

class Hydro::Schemas::Github::Marketplace::V0::AppInstall
  sig do
    params(
      app: T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::App),
      billing_plan: T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::AppBillingPlan),
      user: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(app: nil, billing_plan: nil, user: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::App)) }
  def app; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::App)).void }
  def app=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::AppBillingPlan)) }
  def billing_plan; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Marketplace::V0::Entities::AppBillingPlan)).void }
  def billing_plan=(value); end

  sig { void }
  def clear_app; end

  sig { void }
  def clear_billing_plan; end

  sig { void }
  def clear_user; end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def user; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def user=(value); end
end
