# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::PullRequestReviewCommentDelete`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::PullRequestReviewCommentDelete`.

class Hydro::Schemas::Github::V1::PullRequestReviewCommentDelete
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      pull_request: T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequest),
      pull_request_review: T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequestReview),
      pull_request_review_comment: T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequestReviewComment),
      pull_request_review_thread: T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequestReviewThread),
      repository: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)
    ).void
  end
  def initialize(actor: nil, pull_request: nil, pull_request_review: nil, pull_request_review_comment: nil, pull_request_review_thread: nil, repository: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_pull_request; end

  sig { void }
  def clear_pull_request_review; end

  sig { void }
  def clear_pull_request_review_comment; end

  sig { void }
  def clear_pull_request_review_thread; end

  sig { void }
  def clear_repository; end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequest)) }
  def pull_request; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequest)).void }
  def pull_request=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequestReview)) }
  def pull_request_review; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequestReview)).void }
  def pull_request_review=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequestReviewComment)) }
  def pull_request_review_comment; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequestReviewComment)).void }
  def pull_request_review_comment=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequestReviewThread)) }
  def pull_request_review_thread; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequestReviewThread)).void }
  def pull_request_review_thread=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)) }
  def repository; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)).void }
  def repository=(value); end
end
