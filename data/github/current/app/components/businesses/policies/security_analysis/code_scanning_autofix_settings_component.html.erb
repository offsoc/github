<%= render Primer::Box.new(test_selector: TEST_SELECTOR, **system_arguments) do %>
  <%= render Primer::Beta::Subhead.new(hide_border: true, mb: 2) do |component| %>
    <% component.with_heading(font_size: 3, mb: 2) do %>
      Copilot Autofix
    <% end %>
    <% component.with_description do %>
      By allowing this policy, organization and repository admins can choose to enable or disable Copilot Autofix to suggest AI-generated fixes for code scanning alerts found by CodeQL.
      Learn more about the <%= render(Primer::Beta::Link.new(href: autofix_limitations_documentation_url, target: "_blank", classes: "Link--inTextBlock")) { "limitations of autofix code suggestions" } %>.
    <% end %>
  <% end %>

  <%= render(Primer::Alpha::ActionMenu.new(select_variant: :single, size: :small, dynamic_label: true, dynamic_label_prefix: "All organizations")) do |menu| %>
    <% menu.with_show_button do |button| %>
      <% button.with_trailing_action_icon(icon: :"triangle-down") %>
    <% end %>
    <% menu.with_item(
      label: "Allowed",
      active: autofix_policy_allowed?,
      href: settings_code_scanning_autofix_policy_enterprise_path,
      form_arguments: {
        method: :put,
        name: policy_param_name,
        value: "allowed"
      }
    ) do |item| %>
      <% item.with_description.with_content("Organization and repository admins can choose to enable or disable Copilot Autofix.") %>
    <% end %>
    <% menu.with_item(
      label: "Not allowed",
      active: !autofix_policy_allowed?,
      href: settings_code_scanning_autofix_policy_enterprise_path,
      form_arguments: {
        method: :put,
        name: policy_param_name,
        value: "disallowed"
      }
    ) do |item| %>
      <% item.with_description.with_content("Organization and repository admins cannot enable or disable Copilot Autofix.") %>
    <% end %>
  <% end %>
<% end %>
