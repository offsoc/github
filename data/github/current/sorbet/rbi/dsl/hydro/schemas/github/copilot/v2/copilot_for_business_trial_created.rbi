# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Copilot::V2::CopilotForBusinessTrialCreated`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Copilot::V2::CopilotForBusinessTrialCreated`.

class Hydro::Schemas::Github::Copilot::V2::CopilotForBusinessTrialCreated
  sig do
    params(
      business: T.nilable(Hydro::Schemas::Github::V1::Entities::Business),
      copilot_plan: T.nilable(T.any(Symbol, Integer)),
      organization: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization),
      seat_count: T.nilable(Integer),
      staff_actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      trial_duration_days: T.nilable(Integer)
    ).void
  end
  def initialize(business: nil, copilot_plan: nil, organization: nil, seat_count: nil, staff_actor: nil, trial_duration_days: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Business)) }
  def business; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Business)).void }
  def business=(value); end

  sig { void }
  def clear_business; end

  sig { void }
  def clear_copilot_plan; end

  sig { void }
  def clear_organization; end

  sig { void }
  def clear_seat_count; end

  sig { void }
  def clear_staff_actor; end

  sig { void }
  def clear_trial_duration_days; end

  sig { returns(T.any(Symbol, Integer)) }
  def copilot_plan; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def copilot_plan=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)) }
  def organization; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)).void }
  def organization=(value); end

  sig { returns(Integer) }
  def seat_count; end

  sig { params(value: Integer).void }
  def seat_count=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def staff_actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def staff_actor=(value); end

  sig { returns(Integer) }
  def trial_duration_days; end

  sig { params(value: Integer).void }
  def trial_duration_days=(value); end
end
