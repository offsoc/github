<%# view is an instance of PullRequests::MergeButtonView %>
<%# sometimes we get here via the show_partial method in pull_requests_controller.
    In this case we'll have a pull, but no view. %>
<% view ||= PullRequests::MergeButtonView.new(:pull => pull, :current_user => current_user, :commit_title => params[:commit_title], :commit_message => params[:commit_message]) %>
<% state = view.merge_state %>

<div class="js-merge-message-container">
  <% if state.draft? %>
    <%= render "pull_requests/merge_button_states/work_in_progress", view: view %>
  <% elsif view.show_pull_request_enqueued_component? %>
    <%= render PullRequests::PullRequestEnqueuedComponent.new(pull: view.pull, repository: current_repository, user: current_user) %>
  <% else %>
    <% case state.status %>
    <% when :unknown %>
      <% track_render_partial("pull_requests/merge_button_states/unknown", trace: true) do %>
        <%= render "pull_requests/merge_button_states/unknown", view: view %>
      <% end %>

    <% when :dirty, :blocked %>
      <% track_render_partial("pull_requests/merge_button_states/dirty_or_blocked", trace: true) do %>
        <%= render "pull_requests/merge_button_states/dirty_or_blocked", view: view %>
      <% end %>

    <% when :unstable %>
      <% track_render_partial("pull_requests/merge_button_states/unstable", trace: true) do %>
        <%= render "pull_requests/merge_button_states/unstable", view: view %>
      <% end %>

    <% when :clean, :has_hooks %>
      <% track_render_partial("pull_requests/merge_button_states/clean_or_has_hooks", trace: true) do %>
        <%= render "pull_requests/merge_button_states/clean_or_has_hooks", view: view %>
      <% end %>

    <% when :behind %>
      <% track_render_partial("pull_requests/merge_button_states/behind", trace: true) do %>
        <%= render "pull_requests/merge_button_states/behind", view: view %>
      <% end %>
    <% end %>

    <%#
    the conditional check below for !state.unknown? should be removed in a refactor.
    the reason it is there is because the _unknown partial calls /pull/merge_button to get
    the pull request state. once the state is known it renders this partial again, resulting
    in a double confirm dialog.
    %>
    <% if view.base_branch_pushable? && !state.unknown? %>
      <% if view.show_merge_queue? %>
        <% track_render_partial("pull_requests/merge_queue_form", trace: true) do %>
          <%= render "pull_requests/merge_queue_form", view: view %>
        <% end %>
      <% else %>
        <% if view.show_auto_merge_options? %>
          <% track_render_partial("pull_requests/auto_merge_form", trace: true) do %>
            <%= render "pull_requests/auto_merge_form", view: view %>
          <% end %>
        <% end %>

        <% if !view.show_auto_merge_options? || view.admin_override_possible? %>
          <% track_render_partial("pull_requests/merge_form", trace: true) do %>
            <%= render "pull_requests/merge_form", view: view %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
</div>
