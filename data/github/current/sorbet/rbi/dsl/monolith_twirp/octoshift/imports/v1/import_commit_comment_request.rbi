# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Octoshift::Imports::V1::ImportCommitCommentRequest`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Octoshift::Imports::V1::ImportCommitCommentRequest`.

class MonolithTwirp::Octoshift::Imports::V1::ImportCommitCommentRequest
  sig do
    params(
      author_login: T.nilable(String),
      body: T.nilable(String),
      commit_id: T.nilable(String),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      path: T.nilable(Google::Protobuf::StringValue),
      position: T.nilable(Google::Protobuf::Int64Value),
      repository_id: T.nilable(Integer)
    ).void
  end
  def initialize(author_login: nil, body: nil, commit_id: nil, created_at: nil, path: nil, position: nil, repository_id: nil); end

  sig { returns(String) }
  def author_login; end

  sig { params(value: String).void }
  def author_login=(value); end

  sig { returns(String) }
  def body; end

  sig { params(value: String).void }
  def body=(value); end

  sig { void }
  def clear_author_login; end

  sig { void }
  def clear_body; end

  sig { void }
  def clear_commit_id; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_path; end

  sig { void }
  def clear_position; end

  sig { void }
  def clear_repository_id; end

  sig { returns(String) }
  def commit_id; end

  sig { params(value: String).void }
  def commit_id=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def path; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def path=(value); end

  sig { returns(T.nilable(Google::Protobuf::Int64Value)) }
  def position; end

  sig { params(value: T.nilable(Google::Protobuf::Int64Value)).void }
  def position=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end
end
