# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `IssuesGraph::Proto::Issue`.
# Please instead update this file by running `bin/tapioca dsl IssuesGraph::Proto::Issue`.

class IssuesGraph::Proto::Issue
  sig do
    params(
      assignees: T.nilable(T.any(Google::Protobuf::RepeatedField[IssuesGraph::Proto::User], T::Array[IssuesGraph::Proto::User])),
      completion: T.nilable(IssuesGraph::Proto::Completion),
      itemType: T.nilable(T.any(Symbol, Integer)),
      key: T.nilable(IssuesGraph::Proto::Key),
      labels: T.nilable(T.any(Google::Protobuf::RepeatedField[IssuesGraph::Proto::Label], T::Array[IssuesGraph::Proto::Label])),
      number: T.nilable(Integer),
      position: T.nilable(Integer),
      repoId: T.nilable(Integer),
      repoName: T.nilable(String),
      state: T.nilable(String),
      stateReason: T.nilable(String),
      timestamp: T.nilable(Integer),
      title: T.nilable(String),
      url: T.nilable(String),
      userName: T.nilable(String)
    ).void
  end
  def initialize(assignees: T.unsafe(nil), completion: nil, itemType: nil, key: nil, labels: T.unsafe(nil), number: nil, position: nil, repoId: nil, repoName: nil, state: nil, stateReason: nil, timestamp: nil, title: nil, url: nil, userName: nil); end

  sig { returns(Google::Protobuf::RepeatedField[IssuesGraph::Proto::User]) }
  def assignees; end

  sig { params(value: Google::Protobuf::RepeatedField[IssuesGraph::Proto::User]).void }
  def assignees=(value); end

  sig { void }
  def clear_assignees; end

  sig { void }
  def clear_completion; end

  sig { void }
  def clear_itemType; end

  sig { void }
  def clear_key; end

  sig { void }
  def clear_labels; end

  sig { void }
  def clear_number; end

  sig { void }
  def clear_position; end

  sig { void }
  def clear_repoId; end

  sig { void }
  def clear_repoName; end

  sig { void }
  def clear_state; end

  sig { void }
  def clear_stateReason; end

  sig { void }
  def clear_timestamp; end

  sig { void }
  def clear_title; end

  sig { void }
  def clear_url; end

  sig { void }
  def clear_userName; end

  sig { returns(T.nilable(IssuesGraph::Proto::Completion)) }
  def completion; end

  sig { params(value: T.nilable(IssuesGraph::Proto::Completion)).void }
  def completion=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def itemType; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def itemType=(value); end

  sig { returns(T.nilable(IssuesGraph::Proto::Key)) }
  def key; end

  sig { params(value: T.nilable(IssuesGraph::Proto::Key)).void }
  def key=(value); end

  sig { returns(Google::Protobuf::RepeatedField[IssuesGraph::Proto::Label]) }
  def labels; end

  sig { params(value: Google::Protobuf::RepeatedField[IssuesGraph::Proto::Label]).void }
  def labels=(value); end

  sig { returns(Integer) }
  def number; end

  sig { params(value: Integer).void }
  def number=(value); end

  sig { returns(Integer) }
  def position; end

  sig { params(value: Integer).void }
  def position=(value); end

  sig { returns(Integer) }
  def repoId; end

  sig { params(value: Integer).void }
  def repoId=(value); end

  sig { returns(String) }
  def repoName; end

  sig { params(value: String).void }
  def repoName=(value); end

  sig { returns(String) }
  def state; end

  sig { params(value: String).void }
  def state=(value); end

  sig { returns(String) }
  def stateReason; end

  sig { params(value: String).void }
  def stateReason=(value); end

  sig { returns(Integer) }
  def timestamp; end

  sig { params(value: Integer).void }
  def timestamp=(value); end

  sig { returns(String) }
  def title; end

  sig { params(value: String).void }
  def title=(value); end

  sig { returns(String) }
  def url; end

  sig { params(value: String).void }
  def url=(value); end

  sig { returns(String) }
  def userName; end

  sig { params(value: String).void }
  def userName=(value); end
end
