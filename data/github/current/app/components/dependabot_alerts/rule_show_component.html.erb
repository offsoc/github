<div class="mb-5">
  <%= render Primer::Box.new(mb: 5, test_selector: "dependabot-alert-rule-name") do %>
    <%= render Primer::Alpha::TextField.new(
        name: "rule_name",
        label: "Rule Name",
        value: rule.name,
        disabled: true,
    ) %>
  <% end %>

  <%= render Primer::Box.new(mb: 5) do %>
    <%= render Primer::Beta::Heading.new(tag: :h3, font_size: 5, text: :bold) do %>
      State
    <% end %>
    <%= render(Primer::Beta::Button.new(
      scheme: :default,
      size: :medium,
      disabled: true,
      )) do |component| %>
      <% component.with_trailing_action_icon(icon: "triangle-down") %>
        <%= enablement_label %>
    <% end %>
    <p class="text-small py-1">This rule has been enforced by your organization.</p>
  <% end %>

  <%= render Primer::Box.new(mb: 5, test_selector: "target-alerts-textbox") do %>
    <% if rule.global?%>
      <label class="FormControl-label">Target alerts</label>
      <span class="FormControl-caption d-block" <%= test_selector "rule-criteria" %>>
        <%= render DependabotAlerts::RuleDescriptionComponent.new(rule: rule) %>
      </span>
    <% else %>
      <%= render DependabotAlerts::RuleTargetAlertsTextboxComponent.new(rule: rule) %>
    <% end %>
  <% end %>

  <%= render Primer::Box.new(mb: 4) do %>
    <%= render Primer::Beta::Heading.new(tag: :h3, font_size: 5, text: :bold).with_content("Rules") %>
    <%= render DependabotAlerts::RuleActionsComponent.new(
      rule: rule,
      border_box_args: { padding: :condensed, mt: 1 }
    ) %>
  <% end %>
