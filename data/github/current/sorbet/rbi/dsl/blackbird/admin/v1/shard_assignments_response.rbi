# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Blackbird::Admin::V1::ShardAssignmentsResponse`.
# Please instead update this file by running `bin/tapioca dsl Blackbird::Admin::V1::ShardAssignmentsResponse`.

class Blackbird::Admin::V1::ShardAssignmentsResponse
  sig do
    params(
      algorithm_version: T.nilable(Integer),
      cluster: T.nilable(String),
      epoch_id: T.nilable(Integer),
      host_assignments: T.nilable(T.any(Google::Protobuf::RepeatedField[Blackbird::Admin::V1::HostAssignment], T::Array[Blackbird::Admin::V1::HostAssignment])),
      index_version: T.nilable(Integer),
      offset: T.nilable(Integer),
      snapshot_time: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(algorithm_version: nil, cluster: nil, epoch_id: nil, host_assignments: T.unsafe(nil), index_version: nil, offset: nil, snapshot_time: nil); end

  sig { returns(Integer) }
  def algorithm_version; end

  sig { params(value: Integer).void }
  def algorithm_version=(value); end

  sig { void }
  def clear_algorithm_version; end

  sig { void }
  def clear_cluster; end

  sig { void }
  def clear_epoch_id; end

  sig { void }
  def clear_host_assignments; end

  sig { void }
  def clear_index_version; end

  sig { void }
  def clear_offset; end

  sig { void }
  def clear_snapshot_time; end

  sig { returns(String) }
  def cluster; end

  sig { params(value: String).void }
  def cluster=(value); end

  sig { returns(Integer) }
  def epoch_id; end

  sig { params(value: Integer).void }
  def epoch_id=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Blackbird::Admin::V1::HostAssignment]) }
  def host_assignments; end

  sig { params(value: Google::Protobuf::RepeatedField[Blackbird::Admin::V1::HostAssignment]).void }
  def host_assignments=(value); end

  sig { returns(Integer) }
  def index_version; end

  sig { params(value: Integer).void }
  def index_version=(value); end

  sig { returns(Integer) }
  def offset; end

  sig { params(value: Integer).void }
  def offset=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def snapshot_time; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def snapshot_time=(value); end
end
