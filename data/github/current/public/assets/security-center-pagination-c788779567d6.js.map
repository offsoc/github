{"version":3,"file":"security-center-pagination-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/aria-live/aria-live.ts","ui/packages/react-core/deferred-registry.ts","ui/packages/react-core/react-partial-anchor.ts","ui/packages/react-core/react-partial-registry.ts","ui/packages/react-core/ReactPartialElement.tsx","ui/packages/react-core/register-partial.ts","ui/packages/react-profiling-mode/src/index.ts","ui/packages/security-center-pagination/SecurityCenterPagination.tsx","ui/packages/security-center-pagination/security-center-pagination.ts","ui/packages/verified-fetch/verified-fetch.ts","ui/packages/react-core/PartialRouter.tsx","ui/packages/react-core/PartialEntry.tsx","ui/packages/react-core/ReactBaseElement.tsx"],"sourcesContent":["import {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {\n  announce as liveRegionAnnounce,\n  announceFromElement as liveRegionAnnounceFromElement,\n} from '@primer/live-region-element'\n\nexport interface ElementWithAriaNotify extends Element {\n  ariaNotify: (\n    message: string,\n    options?: {interrupt?: 'none' | 'pending' | 'all'; priority?: 'none' | 'important'},\n  ) => void\n}\n\n/**\n * Troubleshooting guide for aria-live regions available on the Hub\n * - https://thehub.github.com/epd/engineering/dev-practicals/frontend/accessibility/readiness-routine/screenreaders/live-regions-and-focus-management-techniques/#why-isnt-my-live-region-working-as-i-expect\n */\n\n// Announce an element's text to the screen reader.\nexport function announceFromElement(el: HTMLElement, options?: {assertive?: boolean; element?: HTMLElement}) {\n  if (isFeatureEnabled('arianotify_comprehensive_migration')) {\n    announce(getTextContent(el), {...options, element: options?.element ?? el})\n  } else if (isFeatureEnabled('primer_live_region_element') && options?.element === undefined) {\n    liveRegionAnnounceFromElement(el, {\n      politeness: options?.assertive ? 'assertive' : 'polite',\n    })\n  } else {\n    announce(getTextContent(el), options)\n  }\n}\n\n// Announce message update to screen reader.\n// Note: Use caution when using this function while a dialog is active.\n// If the message is updated while the dialog is open, the screen reader may not announce the live region.\n// For more information, view the document on dialog and live region support: https://github.com/github/accessibility/blob/main/docs/dialog-live-region-support.md\nexport function announce(message: string, options?: {assertive?: boolean; element?: HTMLElement}) {\n  const {assertive, element} = options ?? {}\n\n  if (isFeatureEnabled('arianotify_comprehensive_migration') && 'ariaNotify' in Element.prototype) {\n    ;((element || document.body) as Element as ElementWithAriaNotify).ariaNotify(message, {\n      interrupt: options?.assertive ? 'all' : 'none',\n    })\n  } else if (isFeatureEnabled('primer_live_region_element') && element === undefined) {\n    liveRegionAnnounce(message, {\n      politeness: assertive ? 'assertive' : 'polite',\n    })\n  } else {\n    setContainerContent(message, assertive, element)\n  }\n}\n\n// Set aria-live container to message.\nfunction setContainerContent(message: string, assertive?: boolean, element?: HTMLElement) {\n  const getQuerySelector = () => {\n    return assertive ? '#js-global-screen-reader-notice-assertive' : '#js-global-screen-reader-notice'\n  }\n  const container = element ?? ssrSafeDocument?.querySelector(getQuerySelector())\n  if (!container) return\n  if (container.textContent === message) {\n    /* This is a hack due to the way the aria live API works.\n    A screen reader will not read a live region again\n    if the text is the same. Adding a space character tells\n    the browser that the live region has updated,\n    which will cause it to read again, but with no audible difference. */\n    container.textContent = `${message}\\u00A0`\n  } else {\n    container.textContent = message\n  }\n}\n\n// Gets the trimmed text content of an element.\nfunction getTextContent(el: HTMLElement): string {\n  // innerText does not contain hidden text\n  /* eslint-disable-next-line github/no-innerText */\n  return (el.getAttribute('aria-label') || el.innerText || '').trim()\n}\n","export class DeferredRegistry<T> {\n  private registrationEntries: Record<\n    string,\n    {\n      promise: Promise<T>\n      resolve?: (r: T) => void\n    }\n  > = {}\n\n  public register(name: string, registration: T) {\n    const entry = this.registrationEntries[name]\n    if (entry) {\n      entry.resolve?.(registration)\n    } else {\n      this.registrationEntries[name] = {\n        promise: Promise.resolve(registration),\n      }\n    }\n  }\n\n  public getRegistration(name: string): Promise<T> {\n    this.registrationEntries[name] ||= new Deferred()\n    return this.registrationEntries[name].promise\n  }\n}\n\nclass Deferred<T> {\n  declare promise\n  declare resolve: (r: T) => void\n\n  constructor() {\n    this.promise = new Promise<T>(resolve => {\n      this.resolve = resolve\n    })\n  }\n}\n","import type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {useCallback, useEffect, useRef, useState} from 'react'\n\ninterface ReactPartialAnchor {\n  /**\n   * DO NOT USE THIS PROPERTY DIRECTLY. It is meant to be used with useExternalAnchor and useOnAnchorClick\n   */\n  __wrapperElement: ReactPartialAnchorElement\n}\n\nexport interface ReactPartialAnchorProps {\n  reactPartialAnchor?: ReactPartialAnchor\n}\n\nexport function usePartialAnchorProps(\n  anchorElement: ReactPartialAnchorElement | undefined | null,\n): ReactPartialAnchorProps {\n  useEffect(() => {\n    const anchor = anchorElement?.anchor\n\n    if (!anchor) {\n      return\n    }\n\n    if ('disabled' in anchor) {\n      anchor.disabled = false\n    }\n    anchor.classList.remove('cursor-wait')\n  }, [anchorElement])\n\n  if (!anchorElement) {\n    return {}\n  }\n\n  return {\n    reactPartialAnchor: {\n      __wrapperElement: anchorElement,\n    },\n  }\n}\n\nexport function useExternalAnchor(reactPartialAnchor: ReactPartialAnchor) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor || null)\n  const [open, setOpen] = useState(false)\n\n  const onClick = useCallback(() => {\n    // toggle the open state when clicked\n    setOpen(!open)\n  }, [open, setOpen])\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    ref.current.setAttribute('aria-expanded', open.toString())\n    ref.current.setAttribute('aria-haspopup', 'true')\n  }, [ref, open])\n\n  useOnAnchorClick(reactPartialAnchor, onClick)\n\n  return {\n    ref,\n    open,\n    setOpen,\n  }\n}\n\nexport function useOnAnchorClick(reactPartialAnchor: ReactPartialAnchor, onClick: (event: MouseEvent) => void) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor)\n\n  useEffect(() => {\n    const element = ref.current\n    if (!element) {\n      return\n    }\n\n    element.addEventListener('click', onClick)\n    return () => element.removeEventListener('click', onClick)\n  }, [ref, onClick])\n}\n\nexport type PropsWithPartialAnchor<T> = T & Required<ReactPartialAnchorProps>\n","import {DeferredRegistry} from './deferred-registry'\n\nexport interface PartialRegistration {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Component: React.ComponentType<any>\n}\n\nexport const partialRegistry = new DeferredRegistry<PartialRegistration>()\n\nexport function getReactPartial(appName: string) {\n  return partialRegistry.getRegistration(appName)\n}\n","import {controller} from '@github/catalyst'\nimport {getReactPartial} from './react-partial-registry'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {ReactBaseElement} from './ReactBaseElement'\nimport {PartialEntry} from './PartialEntry'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\n\n// What is this silliness? Is it react or a web component?!\n// It's a web component we use to bootstrap react partials within the monolith.\n@controller\nclass ReactPartialElement extends ReactBaseElement<EmbeddedPartialData> {\n  nameAttribute = 'partial-name'\n\n  async getReactNode(embeddedData: EmbeddedPartialData) {\n    const {Component} = await getReactPartial(this.name)\n\n    // Some React Partials will be wrapped in a react-partial-anchor, which is used to conditionally render the Partial\n    const anchorElement = this.closest<ReactPartialAnchorElement>('react-partial-anchor')\n\n    return (\n      <PartialEntry\n        partialName={this.name}\n        embeddedData={embeddedData}\n        Component={Component}\n        wasServerRendered={this.hasSSRContent}\n        ssrError={this.ssrError}\n        anchorElement={anchorElement}\n      />\n    )\n  }\n}\n","import {partialRegistry, type PartialRegistration} from './react-partial-registry'\n// Import the web component to get it registered on the window\nimport './ReactPartialElement'\n\n// NOTE: if the signature of this method changes, also update the react-partial-name ESLint rule\n// /workspaces/github/ui/packages/eslint-plugin-github-monorepo/rules/react-partial-name.js\nexport function registerReactPartial(name: string, registration: PartialRegistration) {\n  partialRegistry.register(name, registration)\n}\n","import safeStorage from '@github-ui/safe-storage'\n\nconst {getItem, setItem, removeItem} = safeStorage('localStorage')\nconst REACT_PROFILING_ENABLED = 'REACT_PROFILING_ENABLED'\n\ninterface ReactProfilingModeMethods {\n  enable: () => void\n  disable: () => void\n  isEnabled: () => boolean\n}\n\nconst ReactProfilingMode: ReactProfilingModeMethods = {\n  enable: () => setItem(REACT_PROFILING_ENABLED, 'true'),\n  disable: () => removeItem(REACT_PROFILING_ENABLED),\n  isEnabled: () => !!getItem(REACT_PROFILING_ENABLED),\n}\n\nexport default ReactProfilingMode\n","import {announce} from '@github-ui/aria-live'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport type {PaginationProps} from '@primer/react'\nimport {Pagination, Spinner} from '@primer/react'\nimport {useEffect, useState} from 'react'\n\nexport interface SecurityCenterPaginationProps extends PaginationProps {\n  pageCountsUrl?: string\n}\n\ntype DataStateKind = 'loading' | 'error' | 'ready'\n\ntype PageCountsResponse = {\n  data?: {\n    activeCount: number\n    archivedCount: number\n    totalEntries: number\n    totalPages: number\n  }\n}\n\nasync function fetchJson<T>(url: string): Promise<T> {\n  const response = await verifiedFetchJSON(url)\n\n  if (!response.ok) {\n    return Promise.reject(new Error(`Request failed with status ${response.status}`))\n  }\n\n  // If the SSO token expires, we will get an HTML response instead of json\n  if (!response.headers.get('Content-Type')?.includes('application/json')) {\n    return Promise.reject(new Error('Response is not JSON'))\n  }\n\n  return response.json() as Promise<T>\n}\n\nfunction changePage(page: number): string {\n  // Add or modify a page query param to page number\n  // and return the new url\n\n  const url = new URL(window.location.href, window.location.origin)\n  const params = new URLSearchParams(url.search)\n  params.set('page', page.toString())\n  return `${url.pathname}?${params.toString()}`\n}\n\nexport function SecurityCenterPagination(props: SecurityCenterPaginationProps): JSX.Element | null {\n  const [pageCount, setPageCount] = useState(props.pageCount)\n  const [dataState, setDataState] = useState<DataStateKind>(props.pageCountsUrl ? 'loading' : 'ready')\n\n  useEffect(() => {\n    async function fetchData(url: string): Promise<void> {\n      const activeCountEl = document.getElementsByClassName('js-table-active-count')?.[0]\n      const archivedCountEl = document.getElementsByClassName('js-table-archived-count')?.[0]\n      const totalCountEl = document.getElementsByClassName('js-table-total-count')?.[0]\n      const tableItemSelectionEl = document.getElementsByTagName('table-item-selection')?.[0]\n\n      let data: PageCountsResponse | null\n      try {\n        data = await fetchJson<PageCountsResponse>(url)\n      } catch {\n        data = null\n      }\n\n      if (data?.data == null) {\n        // If we can't load the page counts, just remove the counts from the list header.\n        // This leaves the links looking like tabs without counts. Less useful, but not broken.\n        activeCountEl?.remove()\n        archivedCountEl?.remove()\n\n        setDataState('error')\n        return\n      }\n\n      const {activeCount, archivedCount, totalEntries} = data.data\n\n      // If we did load the page counts, set them in the list header.\n      // This reaches outside the React root, but keeps from needing to fetch counts multiple times.\n      if (activeCountEl) {\n        activeCountEl.textContent = activeCount.toLocaleString()\n      }\n      if (archivedCountEl) {\n        archivedCountEl.textContent = archivedCount.toLocaleString()\n      }\n      if (totalCountEl) {\n        totalCountEl.textContent = `Select all ${totalEntries} repositories`\n      }\n      if (tableItemSelectionEl) {\n        tableItemSelectionEl.setAttribute('data-all-for-filter-count', totalEntries.toString())\n      }\n\n      // For screen readers, focus takes precedence over ARIA Live Region updates.\n      // However, if the ARIA Live Region update is delayed, the ARIA Live Region update will be announced.\n      setTimeout(() => {\n        const ariaLiveMessage = `${activeCount} active and ${archivedCount} archived repositories found`\n        announce(ariaLiveMessage)\n      }, 1000)\n\n      setPageCount(data.data.totalPages)\n      setDataState('ready')\n    }\n\n    if (props.pageCountsUrl) {\n      fetchData(props.pageCountsUrl)\n    }\n  }, [props.pageCountsUrl])\n\n  if (dataState === 'loading') {\n    return <Spinner />\n  }\n\n  if (dataState === 'error') {\n    // If we failed to load the page counts, then render a simpler pagination to still be usable.\n    // Lie about the number of available pages just to make it render the next button.\n    return (\n      <Pagination\n        currentPage={props.currentPage}\n        pageCount={props.currentPage + 1}\n        showPages={false}\n        hrefBuilder={changePage}\n      />\n    )\n  }\n\n  if (pageCount <= 1) {\n    return null\n  }\n\n  return <Pagination currentPage={props.currentPage} pageCount={pageCount} hrefBuilder={changePage} />\n}\n\ntry{ SecurityCenterPagination.displayName ||= 'SecurityCenterPagination' } catch {}","import {registerReactPartial} from '@github-ui/react-core/register-partial'\n\nimport {SecurityCenterPagination} from './SecurityCenterPagination'\n\nregisterReactPartial('security-center-pagination', {\n  Component: SecurityCenterPagination,\n})\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  assertRelativePathOrSameOrigin(path)\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\nfunction assertRelativePathOrSameOrigin(path: string) {\n  if (process.env.NODE_ENV === 'test' && !window.location.origin) return\n  const url = new URL(path, window.location.origin)\n  if (url.origin !== window.location.origin) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetch(path, {...init, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetchJSON(path, {...init, headers})\n}\n","import {useState} from 'react'\nimport type {BrowserHistory, MemoryHistory} from '@remix-run/router'\nimport {Router} from 'react-router-dom'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\ntype Props = {\n  children: React.ReactNode\n  history: BrowserHistory | MemoryHistory\n}\n\nexport function PartialRouter({children, history}: Props) {\n  const [state, setState] = useState({\n    location: history.location,\n  })\n\n  useHydratedEffect(() => history.listen(setState), [history])\n\n  return (\n    <Router location={state.location} navigator={history}>\n      {children}\n    </Router>\n  )\n}\n\ntry{ PartialRouter.displayName ||= 'PartialRouter' } catch {}","// Think of this as the entry point into the framework\nimport React from 'react'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {BaseProviders} from './BaseProviders'\nimport type {BrowserHistory} from '@remix-run/router'\nimport {createMemoryHistory} from '@remix-run/router'\nimport {AppContextProvider} from './AppContextProvider'\nimport {PartialRouter} from './PartialRouter'\nimport {CommonElements} from './CommonElements'\nimport {createBrowserHistory} from './create-browser-history'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {usePartialAnchorProps} from './react-partial-anchor'\n\ninterface Props {\n  partialName: string\n  embeddedData: EmbeddedPartialData\n  Component: React.ComponentType\n  wasServerRendered: boolean\n  ssrError?: HTMLScriptElement\n  anchorElement?: ReactPartialAnchorElement | null\n}\n\nexport function PartialEntry({\n  partialName,\n  embeddedData,\n  Component,\n  wasServerRendered,\n  ssrError,\n  anchorElement,\n}: Props) {\n  // Create a ref to track the browser history:\n  const historyRef = React.useRef<BrowserHistory>()\n  const window = globalThis.window as Window | undefined\n\n  // For linking to work, we can just pass a dummy pathname here. We may consider plumbing the actual path in\n  if (!historyRef.current) {\n    historyRef.current = !window\n      ? createMemoryHistory({initialEntries: [{pathname: '/'}]})\n      : createBrowserHistory({window})\n  }\n  const history = historyRef.current\n  const partialAnchorProps = usePartialAnchorProps(anchorElement)\n\n  // Wrap the partial in an AppContextProvider and static Router so that react-core links\n  // will be functional.\n  return (\n    <BaseProviders appName={partialName} wasServerRendered={wasServerRendered}>\n      <AppContextProvider history={history} routes={[]}>\n        <PartialRouter history={history}>\n          <Component {...embeddedData.props} {...(partialAnchorProps as object)} />\n          <CommonElements ssrError={ssrError} />\n        </PartialRouter>\n      </AppContextProvider>\n    </BaseProviders>\n  )\n}\n\ntry{ PartialEntry.displayName ||= 'PartialEntry' } catch {}","import {target} from '@github/catalyst'\nimport {createRoot, hydrateRoot} from 'react-dom/client'\nimport type {createRoot as createRootType, hydrateRoot as hydrateRootType, Root} from 'react-dom/client'\nimport React from 'react'\nimport ReactProfilingMode from '@github-ui/react-profiling-mode'\nimport {EXPECTED_ERRORS} from './expected-errors'\nimport {sendStats} from '@github-ui/stats'\n\ntype ReactDOM = {\n  createRoot: typeof createRootType\n  hydrateRoot: typeof hydrateRootType\n}\n\nconst REACT_INVARIANT_ERROR_REGEX = /Minified React error #(?<invariant>\\d+)/\n\nexport abstract class ReactBaseElement<T> extends HTMLElement {\n  @target embeddedData: HTMLScriptElement | undefined\n  @target ssrError: HTMLScriptElement | undefined\n  @target reactRoot: HTMLElement | undefined\n  private root: Root | undefined\n\n  abstract nameAttribute: string\n  abstract getReactNode(embeddedData: T): Promise<React.ReactNode>\n\n  protected get name() {\n    return this.getAttribute(this.nameAttribute) as string\n  }\n\n  private get embeddedDataText() {\n    const text = this.embeddedData?.textContent\n\n    if (!text) {\n      throw new Error(`No embedded data provided for react element ${this.name}`)\n    }\n\n    return text\n  }\n\n  get hasSSRContent() {\n    return this.getAttribute('data-ssr') === 'true'\n  }\n\n  connectedCallback() {\n    this.renderReact()\n  }\n\n  disconnectedCallback() {\n    this.root?.unmount()\n    this.root = undefined\n  }\n\n  private async renderReact() {\n    if (!this.reactRoot) throw new Error('No react root provided')\n    let reactDom: ReactDOM = {\n      createRoot,\n      hydrateRoot,\n    }\n\n    // Override the react-dom import if we're in profiling mode\n    if (ReactProfilingMode.isEnabled()) {\n      reactDom = await this.getReactDomWithProfiling()\n    }\n\n    const embeddedData = JSON.parse(this.embeddedDataText) as T\n    const ssrErrorText = this.ssrError?.textContent\n    const node = await this.getReactNode(embeddedData)\n    const baseNode = <React.StrictMode>{node}</React.StrictMode>\n\n    if (ssrErrorText) {\n      this.logSSRError(ssrErrorText)\n    }\n\n    if (this.hasSSRContent) {\n      /**\n       * Styled-components automatically looks for style tags to hydrate on first page load, but will not detect them\n       * if they are added after the initial page load. This causes a hydration error because React isn't expecting\n       * a style tag within the app. To work around this, we need to manually move the style tags to the head before\n       * hydrating the app.\n       *\n       * During hydration, styled-components will create a new style tag which matches the one we moved to the head.\n       * This means that after hydration, we can safely remove the style tag we manually moved to the head.\n       */\n      const styles = this.querySelector('style[data-styled=\"true\"]')\n      if (styles) document.head.appendChild(styles)\n\n      // Hydrate the react app\n      // onRecoverableError is disabled until we have a react version with this fix in:\n      // https://github.com/facebook/react/pull/25692\n      this.root = reactDom.hydrateRoot(this.reactRoot, baseNode, {\n        onRecoverableError: error => {\n          if (!(error instanceof Error)) return\n\n          const match = REACT_INVARIANT_ERROR_REGEX.exec(error.message)\n          const invariant = String(match?.groups?.invariant)\n\n          sendStats({\n            incrementKey: 'REACT_HYDRATION_ERROR',\n            incrementTags: {\n              appName: this.name,\n              invariant,\n            },\n          })\n        },\n      })\n\n      // Remove the manually moved style tag after hydration\n      if (styles) {\n        // Wait until things are idle to remove the style tag. If we do it immediately, we can cause a flash of unstyled content.\n        requestIdleCallback(() => {\n          // styles could have already been removed by Turbo if a navigation happens quickly. Only remove it from the DOM if it's still there.\n          styles.parentElement?.removeChild(styles)\n        })\n      }\n    } else {\n      this.root = reactDom.createRoot(this.reactRoot)\n      this.root.render(baseNode)\n    }\n\n    this.classList.add('loaded')\n  }\n\n  private getReactDomWithProfiling() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return import('react-dom/profiling') as any as Promise<ReactDOM>\n  }\n\n  private logSSRError(ssrErrorText: string) {\n    if (EXPECTED_ERRORS[ssrErrorText]) {\n      // eslint-disable-next-line no-console\n      return console.error('SSR failed with an expected error:', EXPECTED_ERRORS[ssrErrorText])\n    }\n\n    try {\n      const error = JSON.parse(ssrErrorText) as PlatformJavascriptError\n      const stacktrace = parseFailbotStacktrace(error)\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', `${error.type}: ${error.value}\\n`, error, stacktrace)\n    } catch {\n      /**\n       * In the event we couldn't log the error, we should not break the application\n       */\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', ssrErrorText, 'unable to parse as json')\n    }\n  }\n}\n\nfunction parseFailbotStacktrace(error: PlatformJavascriptError) {\n  if (!error.stacktrace) return ''\n  let prefix = '\\n '\n  const stack = error.stacktrace.map((frame: PlatformStackframe) => {\n    const {function: func, filename, lineno, colno} = frame\n    const line = `${prefix} at ${func} (${filename}:${lineno}:${colno})`\n    prefix = ' '\n    return line\n  })\n  return stack.join('\\n')\n}\n\ntry{ REACT_INVARIANT_ERROR_REGEX.displayName ||= 'REACT_INVARIANT_ERROR_REGEX' } catch {}"],"names":["announceFromElement","el","options","isFeatureEnabled","announce","getTextContent","element","undefined","liveRegionAnnounceFromElement","politeness","assertive","message","Element","prototype","document","body","ariaNotify","interrupt","liveRegionAnnounce","setContainerContent","container","ssrSafeDocument","querySelector","textContent","getAttribute","innerText","trim","DeferredRegistry","register","name","registration","entry","registrationEntries","resolve","promise","Promise","getRegistration","Deferred","constructor","usePartialAnchorProps","anchorElement","useEffect","anchor","disabled","classList","remove","reactPartialAnchor","__wrapperElement","useExternalAnchor","ref","useRef","open","setOpen","useState","onClick","useCallback","current","setAttribute","toString","useOnAnchorClick","addEventListener","removeEventListener","partialRegistry","ReactPartialElement","ReactBaseElement","getReactNode","embeddedData","appName","Component","closest","PartialEntry","partialName","wasServerRendered","hasSSRContent","ssrError","nameAttribute","registerReactPartial","controller","getItem","setItem","removeItem","safeStorage","REACT_PROFILING_ENABLED","enable","disable","isEnabled","fetchJson","url","response","verifiedFetchJSON","ok","headers","get","includes","json","reject","status","changePage","page","URL","window","location","href","origin","params","URLSearchParams","search","set","pathname","SecurityCenterPagination","props","pageCount","setPageCount","dataState","setDataState","pageCountsUrl","fetchData","data","activeCountEl","getElementsByClassName","archivedCountEl","totalCountEl","tableItemSelectionEl","getElementsByTagName","activeCount","archivedCount","totalEntries","toLocaleString","setTimeout","ariaLiveMessage","totalPages","Spinner","Pagination","currentPage","showPages","hrefBuilder","displayName","verifiedFetch","path","init","assertRelativePathOrSameOrigin","fetch","Accept","JSON","stringify","reactFetch","reactFetchJSON","PartialRouter","children","history","state","setState","useHydratedEffect","listen","Router","navigator","historyRef","React","globalThis","createBrowserHistory","createMemoryHistory","initialEntries","partialAnchorProps","BaseProviders","AppContextProvider","routes","CommonElements","REACT_INVARIANT_ERROR_REGEX","HTMLElement","embeddedDataText","text","connectedCallback","renderReact","disconnectedCallback","root","unmount","reactRoot","reactDom","createRoot","hydrateRoot","ReactProfilingMode","getReactDomWithProfiling","parse","ssrErrorText","node","baseNode","logSSRError","styles","head","appendChild","onRecoverableError","error","Error","match","exec","invariant","String","groups","sendStats","incrementKey","incrementTags","requestIdleCallback","parentElement","removeChild","render","add","EXPECTED_ERRORS","console","stacktrace","parseFailbotStacktrace","prefix","stack","map","function","func","filename","lineno","colno","frame","line","join","type","value","target"],"sourceRoot":""}