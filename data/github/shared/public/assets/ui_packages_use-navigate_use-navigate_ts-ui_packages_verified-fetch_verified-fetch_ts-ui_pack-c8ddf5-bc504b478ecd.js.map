{"version":3,"file":"ui_packages_use-navigate_use-navigate_ts-ui_packages_verified-fetch_verified-fetch_ts-ui_pack-c8ddf5-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/is-hash-navigation/is-hash-navigation.ts","ui/packages/item-picker/constants/errors.ts","ui/packages/item-picker/constants/ids.ts","ui/packages/item-picker/constants/selectors.ts","ui/packages/item-picker/shared.ts","ui/packages/react-core/use-feature-flag.ts","ui/packages/use-key-press/use-key-press.ts","ui/packages/use-navigate/use-navigate.ts","ui/packages/verified-fetch/verified-fetch.ts","ui/packages/github-avatar/GitHubAvatar.tsx","ui/packages/item-picker/components/ItemPicker.tsx","ui/packages/item-picker/contexts/ItemPickersContext.tsx","ui/packages/react-core/JsonRoute.tsx","ui/packages/repos-selector/ReposSelector.tsx"],"sourcesContent":["// Check if the navigation is only a hash change.\nconst isHashNavigation = (currentUrl: string, targetUrl: string): boolean => {\n  const current = new URL(currentUrl, window.location.origin)\n  const target = new URL(targetUrl, window.location.origin)\n  const hasHash = target.href.includes('#')\n\n  return (\n    hasHash && current.host === target.host && current.pathname === target.pathname && current.search === target.search\n  )\n}\n\nexport default isHashNavigation\n","export const ERRORS = {\n  couldNotUpdateAssignees: 'Could not update assignees',\n  couldNotSearchAssignees: 'Could not search assignees',\n  couldNotUpdateLabels: 'Could not update labels',\n  couldNotSearchLabels: 'Could not search labels',\n  couldNotUpdateMilestone: 'Could not update milestone',\n  couldNotSearchMilestones: 'Could not search milestones',\n  couldNotUpdateIssueType: 'Could not update issue type',\n  couldNotSearchRepositories: 'Could not search repositories',\n  couldNotSearchPullRequests: 'Could not search pull requests',\n  couldNotSearchProjects: 'Could not search projects',\n  couldNotSearchBranches: 'Could not search branches',\n  noMatches: 'No matches',\n  noResults: 'No results',\n  couldNotCreateBranch: 'Could not create branch',\n  couldNotCreateLabel: 'Could not create label',\n}\n","export const IDS = {\n  itemPickerRootId: 'item-picker-root-id',\n  itemPickerTestId: 'item-picker-root',\n}\n","export const SELECTORS = {\n  // This matches the attribute assigned to the active item within primers `SelectPanel`\n  activePickerOption: (rootId: string) => `[data-id=\"${rootId}\"] [data-is-active-descendant=\"activated-directly\"]`,\n}\n","import {CircleSlashIcon} from '@primer/octicons-react'\n\nimport {ERRORS} from './constants/errors'\n\ntype ItemGroupVariant = 'subtle' | 'filled'\n\nexport type ItemGroup = {\n  groupId: string\n  header?: {\n    title: string\n    variant?: ItemGroupVariant\n  }\n}\n\nexport const noMatchesItem = {\n  leadingVisual: CircleSlashIcon,\n  text: ERRORS.noMatches,\n  disabled: true,\n  selected: undefined, // hide checkbox\n  key: 'no-matches',\n  id: 'no-matches',\n}\n\nexport const noResultsItem = {\n  leadingVisual: CircleSlashIcon,\n  text: ERRORS.noResults,\n  disabled: true,\n  selected: undefined, // hide checkbox\n  key: 'no-results',\n  id: 'no-results',\n}\n\nexport const maybeIssueUrl = (url: string): boolean => {\n  try {\n    // eslint-disable-next-line no-restricted-syntax\n    new URL(url)\n  } catch (_urlError) {\n    return false\n  }\n\n  return new RegExp(/^.+\\/issues\\/\\d+$/).test(url)\n}\n\n// Attempt to use the `org` parameter to filter the results if we have a `/` present in the query\n// This is to be used with the `search` graphQL endpoint for type `Repository` only.\nexport function getRepositorySearchQuery(queryString: string, organization?: string, excludeRepo?: string): string {\n  const orgIndexSplit = queryString.indexOf('/')\n\n  let query = 'in:name archived:false'\n  if (excludeRepo) {\n    query = `${query} -repo:${excludeRepo}`\n  }\n\n  // if there is <owner>/<repo> in the query, use that to filter the results\n  if (orgIndexSplit > 0 && queryString.split('/').length === 2) {\n    // Naively extract the org name and repo name from the query by assuming anything before the / is the org name\n    const orgSearchName = queryString.split('/')[0]!\n    const repoSearchName = queryString.split('/')[1]!\n    return `${query} org:${orgSearchName} ${repoSearchName}`\n  }\n\n  // If there is an org name, use that to filter the results\n  if (organization) {\n    return `${query} org:${organization} ${queryString}`\n  }\n\n  // If there is no / in the query, or the org name is empty, just search for the repo name\n  return `${query} ${queryString}`\n}\n\n// Generates a set of queries which scope to an owner, and prioritizes issues based on interaction\n// The IssuePickerInternal orders the queried issues and is the source for this order of this priority\nexport const getIssueSearchQueries = (owner = '', query = '', repoNameWithOwner = '') => {\n  const ownerPart = owner && `owner:${owner.trim()} `\n  const repoPart = repoNameWithOwner && `repo:${repoNameWithOwner.trim()} `\n  const queryPart = query && ` ${query.trim()}`\n\n  // Although these queries are using the `... on Issue` type condition,\n  // PR results are still inlcuded in the response in an empty object.\n  // `is:issue` ensures that only issue nodes are returned.\n  const issuePart = 'is:issue '\n  const queryIsUrl = maybeIssueUrl(query)\n\n  // By default, search within the issue title as it's the most relevant option.\n  let inPart = 'in:title'\n\n  // If the query is a number, then we should search for the issue by number as well.\n  if (queryPart && !isNaN(Number(queryPart))) {\n    inPart += ' in:number'\n  }\n\n  const sharedQuery = `${ownerPart}${repoPart}${issuePart}${inPart} `\n\n  return {\n    commenters: `${sharedQuery}commenter:@me${queryPart}`,\n    mentions: `${sharedQuery}mentions:@me${queryPart}`,\n    assignee: `${sharedQuery}assignee:@me${queryPart}`,\n    author: `${sharedQuery}author:@me${queryPart}`,\n    open: `${sharedQuery}state:open${queryPart}`,\n    resource: queryIsUrl ? encodeURI(query) : '',\n    queryIsUrl,\n  }\n}\n\nexport type Unpacked<T> = T extends Array<infer U> ? U : T\n","import {useAppPayload} from './use-app-payload'\n\nexport type AppPayloadWithFeatureFlags = {enabled_features?: EnabledFeatures}\nexport type EnabledFeatures = {[key: string]: boolean | undefined}\n\n/**\n * Fetches all client side feature flags.\n *\n * Note: If your app isn't rendered in the monolith using the registerReactAppFactory function,\n * you can use the FeatureFlagProvider to wrap your app in a context and populate the\n * client side feature flags yourself.\n */\nexport const useFeatureFlags = () => useAppPayload<AppPayloadWithFeatureFlags>()?.enabled_features ?? {}\n\n/**\n * Fetches a specific client side feature flag.\n *\n * Note: If your app isn't rendered in the monolith using the registerReactAppFactory function,\n * you can use the FeatureFlagProvider to wrap your app in a context and populate the\n * client side feature flags yourself.\n */\nexport const useFeatureFlag = (featureName: string) => !!useFeatureFlags()[featureName]\n","import {useLayoutEffect} from '@github-ui/use-layout-effect'\nimport type {RefObject} from 'react'\nimport {useCallback, useEffect, useRef} from 'react'\n\ntype OnKeyPressCallBack = (event: KeyboardEvent) => void\n\nexport enum ModifierKeys {\n  ctrlKey = 'ctrlKey',\n  altKey = 'altKey',\n  shiftKey = 'shiftKey',\n  metaKey = 'metaKey',\n}\n\nexport type OnKeyPressOptions = {[key in ModifierKeys]?: boolean} & {\n  triggerWhenInputElementHasFocus?: boolean\n  triggerWhenPortalIsActive?: boolean\n  scopeRef?: RefObject<HTMLElement>\n  ignoreModifierKeys?: boolean\n}\n\nexport const useKeyPress = (keys: string[], callback: OnKeyPressCallBack, options?: OnKeyPressOptions) => {\n  // implement the callback ref pattern\n  const callbackRef = useRef(callback)\n  useLayoutEffect(() => {\n    callbackRef.current = callback\n  })\n\n  // handle what happens on key press\n  const handleKeyPress: EventListener = useCallback(\n    (event: Event) => {\n      const keyboardEvent = event as KeyboardEvent\n\n      if (isPortalActive() && !options?.triggerWhenPortalIsActive) {\n        return\n      }\n\n      if (!checkModifierKeys(keyboardEvent, options) && !options?.ignoreModifierKeys) {\n        return\n      }\n\n      if (!options?.triggerWhenInputElementHasFocus && eventTargetIsInputElement(keyboardEvent)) {\n        return\n      }\n\n      // check if the key is part of the ones we want to listen to\n      if (\n        keys.some(key => {\n          // In these cases we look at event.code since event.key will depend on whether a modifier key is pressed\n          if (/^\\d$/.test(key)) {\n            return keyboardEvent.code === `Digit${key}`\n          } else if (key === '/') {\n            return keyboardEvent.code === 'Slash'\n          }\n\n          return keyboardEvent.key === key\n        })\n      ) {\n        callbackRef.current(keyboardEvent)\n      }\n    },\n    [keys, options],\n  )\n\n  useEffect(() => {\n    const targetElement = options?.scopeRef?.current || document\n    targetElement.addEventListener('keydown', handleKeyPress)\n    return () => targetElement.removeEventListener('keydown', handleKeyPress)\n  }, [handleKeyPress, options?.scopeRef])\n}\n\nconst portalSelectors = '#__primerPortalRoot__, [id$=\"-portal-root\"]'\n\nfunction isPortalActive() {\n  const portals = [...document.querySelectorAll(portalSelectors)]\n  return portals.some(elementHasNonZeroHeight)\n}\n\nfunction elementHasNonZeroHeight(element: Element): boolean {\n  if (element.clientHeight > 0) return true\n\n  for (const child of element.children) {\n    if (elementHasNonZeroHeight(child)) return true\n  }\n\n  return false\n}\n\nfunction checkModifierKeys(keyboardEvent: KeyboardEvent, options: OnKeyPressOptions | undefined) {\n  for (const key of Object.values(ModifierKeys)) {\n    if (options && options[key] && !keyboardEvent[key]) {\n      // modifier key is required but not pressed\n      return false\n    }\n\n    if (keyboardEvent[key] && (!options || !options[key])) {\n      // modifier key is pressed but not required\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function eventTargetIsInputElement(event: KeyboardEvent) {\n  return event.target instanceof HTMLTextAreaElement || event.target instanceof HTMLInputElement\n}\n","import React, {startTransition} from 'react'\nimport {\n  createSearchParams,\n  matchRoutes,\n  resolvePath,\n  useLocation,\n  useNavigate as useReactRouterNavigate,\n  useSearchParams as useReactRouterSearchParams,\n  type NavigateOptions,\n  type To,\n  type URLSearchParamsInit,\n} from 'react-router-dom'\n\nimport isHashNavigation from '@github-ui/is-hash-navigation'\nimport {AppContext} from '@github-ui/react-core/app-context'\nimport {startSoftNav} from '@github-ui/soft-nav/state'\nimport {PREVENT_AUTOFOCUS_KEY} from '@github-ui/react-core/prevent-autofocus'\n\nexport interface NavigateOptionsWithPreventAutofocus extends NavigateOptions {\n  preventAutofocus?: boolean\n}\n\nexport const useNavigate = (): ((to: To, options?: NavigateOptionsWithPreventAutofocus) => void) => {\n  const {routes, history} = React.useContext(AppContext)\n  const reactRouterNavigate = useReactRouterNavigate()\n  return React.useCallback(\n    (to, navigateOptions = {}) => {\n      const pathname = resolvePath(to).pathname\n      const isExternalToApp = !matchRoutes(routes, pathname)\n\n      if (isExternalToApp) {\n        const href = history.createHref(to)\n        ;(async () => {\n          const {softNavigate: turboSoftNavigate} = await import('@github-ui/soft-navigate')\n          turboSoftNavigate(href)\n        })()\n      } else {\n        if (!isHashNavigation(location.href, to.toString())) {\n          startSoftNav('react')\n        }\n        const {preventAutofocus, ...options} = navigateOptions\n        startTransition(() => {\n          reactRouterNavigate(\n            to,\n            preventAutofocus\n              ? {\n                  ...options,\n                  state: {\n                    [PREVENT_AUTOFOCUS_KEY]: true,\n                    ...options.state,\n                  },\n                }\n              : options,\n          )\n          const {turbo, ...state} = window.history.state\n          window.history.replaceState({...state, skipTurbo: true}, '', location.href)\n        })\n      }\n    },\n    [history, reactRouterNavigate, routes],\n  )\n}\n\n/**\n * An implementation of `useSearchParams` that mirrors `react-router-dom`'s `useSearchParams` hook\n * but utilizes `@github-ui/useNavigate` instead of `react-router` `useNavigate` to handle updates.\n */\nexport const useSearchParams = () => {\n  const [searchParams] = useReactRouterSearchParams()\n  const navigate = useNavigate()\n  const {pathname} = useLocation()\n\n  const setSearchParams = React.useCallback<\n    (\n      nextInit?: URLSearchParamsInit | ((prev: URLSearchParams) => URLSearchParamsInit),\n      navigateOpts?: NavigateOptionsWithPreventAutofocus,\n    ) => void\n  >(\n    (nextInit, navigateOptions = {}) => {\n      const newSearchParams = createSearchParams(typeof nextInit === 'function' ? nextInit(searchParams) : nextInit)\n      navigate(\n        {\n          pathname,\n          search: newSearchParams.toString(),\n        },\n        navigateOptions,\n      )\n    },\n    [searchParams, navigate, pathname],\n  )\n\n  return [searchParams, setSearchParams] as const\n}\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  assertRelativePathOrSameOrigin(path)\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\nfunction assertRelativePathOrSameOrigin(path: string) {\n  if (process.env.NODE_ENV === 'test' && !window.location.origin) return\n  const url = new URL(path, window.location.origin)\n  if (url.origin !== window.location.origin) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetch(path, {...init, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetchJSON(path, {...init, headers})\n}\n","import {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {\n  // eslint-disable-next-line no-restricted-imports\n  Avatar,\n  type AvatarProps,\n} from '@primer/react'\nimport {forwardRef, useMemo} from 'react'\n\nexport type GitHubAvatarProps = AvatarProps\n\nexport const GitHubAvatar = forwardRef<HTMLImageElement, GitHubAvatarProps>(function GitHubAvatar(\n  {src, size = 20, ...otherProps}: GitHubAvatarProps,\n  ref,\n) {\n  const avatarUrl = useMemo(() => {\n    // src maybe be relative, e.g. `/mona.png`, in which case the instances main origin should be used,\n    // e.g. \"https://github.com\" for dotcom. If src is a fully quallified URL then the origin argument is ignored.\n    const url = new URL(src, ssrSafeLocation.origin)\n\n    // do not override size if it's already set as query parameter\n    if (!url.searchParams.has('size') && !url.searchParams.has('s')) {\n      // we double size for better rendering on high density pixel screens\n      url.searchParams.set('size', String(Number(size) * 2))\n    }\n\n    return url.toString()\n  }, [src, size])\n\n  return <Avatar ref={ref} src={avatarUrl} size={size} data-testid=\"github-avatar\" {...otherProps} />\n})\n\ntry{ GitHubAvatar.displayName ||= 'GitHubAvatar' } catch {}","import {useKeyPress} from '@github-ui/use-key-press'\nimport {type OverlayProps, SelectPanel, type SelectPanelProps} from '@primer/react'\nimport type {ItemProps} from '@primer/react/lib-esm/deprecated/ActionList'\nimport type {ItemInput} from '@primer/react/lib-esm/deprecated/ActionList/List'\nimport type {RefObject} from 'react'\nimport type React from 'react'\nimport {useCallback, useEffect, useId, useMemo, useState} from 'react'\n\nimport {useItemPickersContext} from '../contexts/ItemPickersContext'\nimport {type ItemGroup, noMatchesItem, noResultsItem} from '../shared'\nimport {IDS} from '../constants/ids'\nimport {SELECTORS} from '../constants/selectors'\nimport {GlobalCommands, type CommandId} from '@github-ui/ui-commands'\nimport {useFeatureFlags} from '@github-ui/react-core/use-feature-flag'\n\nexport type SharedBulkActionsItemPickerProps = {\n  issuesToActOn: string[]\n  useQueryForAction: boolean\n  repositoryId?: string\n  query?: string\n  onCompleted?: (jobId?: string) => void\n  onError?: (error: Error) => void\n}\n\nexport type ItemPickerProps<T> = Pick<OverlayProps, 'height' | 'width'> & {\n  items: Array<T & {__isNew__?: boolean}>\n  initialSelectedItems: T[] | string[]\n  openHotkey?: string\n  placeholderText: string\n  selectionVariant: 'single' | 'multiple'\n  loading?: boolean\n  groups?: ItemGroup[]\n  filterItems: (filter: string) => void\n  renderAnchor: (props: React.HTMLAttributes<HTMLElement>) => JSX.Element\n  getItemKey: (item: T) => string\n  convertToItemProps: (item: T) => ExtendedItemProps<T>\n  onSelectionChange: (items: T[]) => void\n  onOpen?: () => void\n  onClose?: () => void\n  selectPanelRef?: RefObject<HTMLButtonElement>\n  enforceAtleastOneSelected?: boolean\n  insidePortal?: boolean\n  maxVisibleItems?: number\n  /**\n   * Whether to render the item picker as a nested select panel (true) versus a standalone select\n   * panel (false; default).\n   */\n  nested?: boolean\n  resultListAriaLabel?: string\n  title?: string | React.ReactElement\n  subtitle?: string | React.ReactElement\n  preventClose?: boolean\n  triggerOpen?: boolean\n  initialFilter?: string\n  customNoResultsItem?: ItemProps\n  customNoMatchItem?: T\n  footer?: string | React.ReactElement\n  keybindingCommandId?: CommandId\n}\n\nexport type ExtendedItemProps<T> = ItemProps & {source: T}\n\nexport function ItemPicker<T>({\n  items,\n  initialSelectedItems,\n  openHotkey,\n  placeholderText,\n  selectionVariant,\n  loading,\n  groups,\n  filterItems,\n  renderAnchor,\n  getItemKey,\n  convertToItemProps,\n  onSelectionChange,\n  onOpen,\n  onClose,\n  height = 'small',\n  width = 'small',\n  selectPanelRef,\n  enforceAtleastOneSelected,\n  insidePortal,\n  maxVisibleItems = 9,\n  nested = false,\n  resultListAriaLabel,\n  title,\n  subtitle,\n  preventClose,\n  triggerOpen,\n  initialFilter,\n  customNoResultsItem,\n  customNoMatchItem,\n  footer,\n  keybindingCommandId,\n}: ItemPickerProps<T>) {\n  const [open, setOpen] = useState(triggerOpen ?? false)\n  const [selected, setSelected] = useState<ItemInput[]>([])\n  const [filter, setFilter] = useState<string>(initialFilter ?? '')\n  const {updateOpenState, anyItemPickerOpen} = useItemPickersContext()\n  const id = useId()\n\n  // Update open state if controlled by consumer\n  useEffect(() => {\n    if (triggerOpen !== undefined) setOpen(triggerOpen)\n  }, [triggerOpen])\n  const {issues_react_ui_commands_migration} = useFeatureFlags()\n\n  const handleKeyDown = useCallback(() => {\n    if (anyItemPickerOpen() || open) {\n      return\n    }\n    setOpen(true)\n    if (onOpen) onOpen()\n  }, [anyItemPickerOpen, open, onOpen])\n\n  const onHotKeyPress = useCallback(\n    (e: KeyboardEvent) => {\n      if (anyItemPickerOpen() || open) {\n        return\n      }\n      // We don't want the filter to show the hotkey\n      e.preventDefault()\n      e.stopPropagation()\n      setOpen(true)\n      if (onOpen) onOpen()\n    },\n    [anyItemPickerOpen, open, onOpen],\n  )\n\n  useKeyPress(openHotkey ? [openHotkey] : [], onHotKeyPress, {\n    triggerWhenInputElementHasFocus: false,\n    triggerWhenPortalIsActive: insidePortal || false,\n  })\n\n  useEffect(() => {\n    updateOpenState(id, open)\n  }, [id, open, updateOpenState])\n\n  const map = useMemo(\n    () => new Map<string, ExtendedItemProps<T>>(),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [id, initialSelectedItems],\n  )\n\n  const toItemProps = useCallback(\n    (item: T, itemSelected: boolean): ExtendedItemProps<T> => {\n      const itemKey = getItemKey(item)\n      let itemProps = map.get(itemKey)\n      if (itemProps) {\n        return itemProps\n      }\n\n      itemProps = convertToItemProps(item)\n\n      itemProps.selected = itemSelected\n      const onAction = itemProps.onAction\n      itemProps.onAction = (props, event) => {\n        const i = map.get(itemKey)\n        if (!i) return\n        i.selected = !i.selected\n\n        // if using single select, clear selection of all other items\n        if (selectionVariant === 'single' && (item as ItemProps).id !== filter) {\n          for (const [, value] of map) {\n            if (value !== i) {\n              value.selected = false\n            }\n          }\n        }\n\n        if (onAction) {\n          onAction(props, event)\n        }\n      }\n\n      map.set(itemKey, itemProps)\n      return itemProps\n    },\n    [convertToItemProps, filter, getItemKey, map, selectionVariant],\n  )\n\n  const wrappedGetItemKey = useCallback(\n    (item: T | string) => (typeof item === 'string' ? item : getItemKey(item)),\n    [getItemKey],\n  )\n\n  const selectPanelItems = useMemo<ItemProps[]>(() => {\n    const itemProps = items.map(i => {\n      // If we have newly created items, we remove the __isNew__ flag from the item\n      // after selecting it, so that it can be deselected.\n      // We also remove the \"no match\" item since clicking on it adds it to the selected items,\n      // and we don't want to add that synthetic item to the mutation.\n      if (i.__isNew__) {\n        delete i.__isNew__\n        customNoMatchItem && map.delete(getItemKey(customNoMatchItem))\n        // We auto select newly created items\n        return toItemProps(i, true)\n      }\n      return toItemProps(\n        i,\n        initialSelectedItems.some(is => wrappedGetItemKey(is) === getItemKey(i)),\n      )\n    })\n\n    if (itemProps.length === 0) {\n      if (customNoMatchItem) return [toItemProps(customNoMatchItem, false)]\n\n      // Differentiate between no results and no matches\n      return filter ? [customNoMatchItem ?? noMatchesItem] : [customNoResultsItem ?? noResultsItem]\n    }\n\n    return itemProps\n  }, [\n    customNoMatchItem,\n    items,\n    map,\n    toItemProps,\n    initialSelectedItems,\n    wrappedGetItemKey,\n    getItemKey,\n    filter,\n    customNoResultsItem,\n  ])\n\n  useEffect(() => {\n    setSelected(selectPanelItems.filter(i => i.selected))\n  }, [selectPanelItems])\n\n  const selectPanelSelectedItems = useMemo<ItemInput | ItemInput[]>(() => {\n    if (selectionVariant === 'single') {\n      return selected[0]!\n    } else {\n      return selected\n    }\n  }, [selected, selectionVariant]) as ItemProps[]\n\n  const onSelectedChange = useCallback(\n    (param: ItemInput[] | ItemInput | undefined) => {\n      if (param === undefined) {\n        if (!enforceAtleastOneSelected) {\n          setSelected([])\n        }\n        return\n      }\n\n      const selectedItemInputs = Array.isArray(param) ? param : [param]\n      const newSelection = selectedItemInputs\n        .map(i => selectPanelItems.find(item => i.id === item.id))\n        .filter(i => i !== undefined) as Array<ExtendedItemProps<T>>\n\n      setSelected(newSelection)\n    },\n    [enforceAtleastOneSelected, selectPanelItems],\n  )\n\n  const onSpaceKeyPress = (event: KeyboardEvent) => {\n    if (open) {\n      const activeOption = document.querySelector(SELECTORS.activePickerOption(IDS.itemPickerRootId))\n\n      if (activeOption) {\n        const activeDataId = activeOption.getAttribute('data-id')\n        const item = [...map.values()].find(i => i.id === activeDataId)\n\n        if (item) {\n          event.preventDefault()\n          event.stopPropagation()\n          // Toggle the selected state of the item\n          item.selected = !item.selected\n          setSelected([...map.values()].filter(i => i.selected))\n        }\n      }\n    }\n  }\n\n  useKeyPress([' '], onSpaceKeyPress, {\n    triggerWhenInputElementHasFocus: true,\n    triggerWhenPortalIsActive: true,\n  })\n\n  const onOpenChange = useCallback(\n    (isOpen: boolean) => {\n      if (preventClose && !isOpen) {\n        return\n      }\n      setOpen(isOpen)\n\n      if (isOpen && onOpen) {\n        onOpen()\n        return\n      }\n\n      setFilter('')\n      if (onClose) onClose()\n      const selectedItems = [...map.values()].filter(i => i.selected).map(i => i.source)\n      const selectionChanged =\n        selectedItems.length !== initialSelectedItems.length ||\n        selectedItems.some(item => !initialSelectedItems.some(item2 => wrappedGetItemKey(item2) === getItemKey(item)))\n\n      if (selectionChanged) {\n        onSelectionChange(selectedItems)\n      }\n    },\n    [preventClose, onClose, map, initialSelectedItems, onOpen, wrappedGetItemKey, getItemKey, onSelectionChange],\n  )\n\n  useEffect(() => {\n    filterItems(filter)\n  }, [filter, filterItems])\n\n  let hasItems = selectPanelItems.length > 0\n  if (\n    selectPanelItems.length === 1 &&\n    (selectPanelItems[0]!.id === noMatchesItem.id || selectPanelItems[0]!.id === noResultsItem.id)\n  ) {\n    // Don't show groups if there are only placeholder items (which aren't grouped)\n    hasItems = false\n  }\n\n  // SelectPanel doesn't handle an empty groupMetadata prop properly\n  const groupMetadataProp = useMemo(\n    () => (groups && groups?.length > 1 && hasItems ? {groupMetadata: groups} : {}),\n    [groups, hasItems],\n  )\n\n  const overlayHeight = selectPanelItems.length <= maxVisibleItems ? 'auto' : height\n\n  const selectPanelProps = useMemo<SelectPanelProps>(\n    () => ({\n      renderAnchor,\n      placeholderText,\n      open,\n      onOpenChange,\n      loading,\n      items: selectPanelItems,\n      selected: selectPanelSelectedItems,\n      onSelectedChange,\n      filterValue: filter,\n      onFilterChange: setFilter,\n      showItemDividers: true,\n      overlayProps: {width, height: overlayHeight},\n      ...groupMetadataProp,\n      'aria-label': resultListAriaLabel,\n      'data-id': IDS.itemPickerRootId,\n      'data-testid': IDS.itemPickerTestId,\n      title,\n      subtitle,\n      footer,\n    }),\n    [\n      renderAnchor,\n      placeholderText,\n      open,\n      onOpenChange,\n      loading,\n      selectPanelItems,\n      selectPanelSelectedItems,\n      onSelectedChange,\n      filter,\n      width,\n      overlayHeight,\n      groupMetadataProp,\n      resultListAriaLabel,\n      title,\n      subtitle,\n      footer,\n    ],\n  )\n\n  return (\n    <>\n      {issues_react_ui_commands_migration && keybindingCommandId && (\n        <GlobalCommands commands={{[keybindingCommandId]: handleKeyDown}} />\n      )}\n      <SelectPanel anchorRef={nested ? undefined : selectPanelRef} {...selectPanelProps} />\n    </>\n  )\n}\n\ntry{ ItemPicker.displayName ||= 'ItemPicker' } catch {}","import {createContext, type ReactNode, useCallback, useContext, useMemo, useRef} from 'react'\n\ntype ItemPickerOpenStates = Readonly<Record<string, boolean>>\n\ntype ItemPickersContextType = {\n  // Method to update the open state of an itempicker\n  updateOpenState: (id: string, isOpen: boolean) => void\n  // Method to get the open state of an itempicker\n  anyItemPickerOpen: () => boolean\n}\n\ntype ItemPickersContextProviderType = {\n  children: ReactNode\n}\n\nconst ItemPickersContext = createContext<ItemPickersContextType>({\n  updateOpenState: () => undefined,\n  anyItemPickerOpen: () => false,\n})\n\nexport function ItemPickersContextProvider({children}: ItemPickersContextProviderType) {\n  const itemPickerOpenStates = useRef<ItemPickerOpenStates>({})\n\n  const updateOpenState = useCallback((id: string, isOpen: boolean) => {\n    const previousState = itemPickerOpenStates.current\n    if (previousState[id] === isOpen) return itemPickerOpenStates.current\n    itemPickerOpenStates.current = {...previousState, [id]: isOpen}\n    return itemPickerOpenStates.current\n  }, [])\n\n  const anyItemPickerOpen = useCallback(() => {\n    return Object.values(itemPickerOpenStates.current).some(s => s)\n  }, [itemPickerOpenStates])\n\n  const contextValue = useMemo(() => {\n    return {updateOpenState, anyItemPickerOpen}\n  }, [anyItemPickerOpen, updateOpenState])\n\n  return <ItemPickersContext.Provider value={contextValue}>{children}</ItemPickersContext.Provider>\n}\n\nexport function useItemPickersContext(): ItemPickersContextType {\n  const context = useContext(ItemPickersContext)\n\n  if (!context) {\n    throw new Error('useItemPickersContext must be used within a ItemPickersContextProvider.')\n  }\n\n  return context\n}\n\ntry{ ItemPickersContext.displayName ||= 'ItemPickersContext' } catch {}\ntry{ ItemPickersContextProvider.displayName ||= 'ItemPickersContextProvider' } catch {}","import type {ChildRoute, LoaderResult, RouteRegistration, TransitionType} from './app-routing-types'\nimport type React from 'react'\nimport type {Location} from '@remix-run/router'\n\nexport interface JsonRouteProps {\n  path: string\n  Component: React.ComponentType\n  transitionType?: TransitionType\n  shouldNavigateOnError?: boolean\n  children?: ChildRoute[]\n}\n/**\n * A utility for building a route registration for a route that consumes a JSON object (either via embedding in a\n * script tag or via a JSON fetch on React soft navigations).\n */\nexport function jsonRoute<TRouteData, TEmbeddedData>({\n  path,\n  Component,\n  /**\n   * Some routes want to handle their own errors and not just show a generic error page. In this case,\n   * the error is just handled like any other payload for the route.\n   * NOTE: We might consider replacing the shouldNavigateOnError flag with a parallel implementation to jsonRoute.\n   */\n  shouldNavigateOnError,\n  transitionType,\n  children,\n}: JsonRouteProps): RouteRegistration<TRouteData, TEmbeddedData> {\n  async function coreLoader({location}: {location: Location}): Promise<LoaderResult<TRouteData>> {\n    let response: Response\n    try {\n      const fetchPath = `${location.pathname}${location.search}`\n      response = await window.fetch(fetchPath, {\n        headers: {\n          Accept: 'application/json',\n          'X-Requested-With': 'XMLHttpRequest',\n          'X-GitHub-Target': 'dotcom',\n          'X-React-Router': 'json',\n        },\n      })\n    } catch (error) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'fetchError'},\n      }\n    }\n    if (response.redirected) {\n      return {\n        type: 'redirect',\n        url: response.url,\n      }\n    } else if (!response.ok) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'httpError', httpStatus: response.status},\n      }\n    } else {\n      try {\n        const responseJson = await response.json()\n        return {\n          type: 'loaded',\n          data: responseJson,\n          title: responseJson.title,\n        }\n      } catch (error) {\n        return {\n          type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n          error: {type: 'badResponseError'},\n        }\n      }\n    }\n  }\n\n  function loadFromEmbeddedData({embeddedData}: {embeddedData: TEmbeddedData}): {data: TRouteData; title: string} {\n    const data = embeddedData as unknown as TRouteData & {title: string}\n    return {data, title: data.title}\n  }\n\n  return {\n    path,\n    // TODO: consider wrapping Component with a component that passes payload as a prop — ideally as part of migrating\n    // away from useRoutePayload.\n    Component,\n    coreLoader,\n    loadFromEmbeddedData,\n    transitionType,\n    children,\n  }\n}\n","import {useCallback, useEffect, useMemo, useState} from 'react'\nimport {RepoIcon, RepoLockedIcon, TriangleDownIcon} from '@primer/octicons-react'\nimport {Truncate, type ButtonProps} from '@primer/react'\nimport {Button} from '@primer/react'\nimport {debounce} from '@github/mini-throttle'\nimport {ItemPicker} from '@github-ui/item-picker/ItemPicker'\n\n// A simple repository that only requires a `name` field but can contain additional\n// fields to enrich rendering\ninterface NamedRepository {\n  name: string\n  enabled?: boolean\n  private?: boolean\n}\n\n// Internal repo used to represent \"All repositories\"\ninterface AllRepo extends NamedRepository {\n  _all: true\n}\n\ninterface SharedProps {\n  selectAllOption: boolean\n  additionalButtonProps?: Partial<ButtonProps>\n  buttonText?: string\n}\n\nexport interface SingleSelectProps<T> extends SharedProps {\n  currentSelection: T | undefined\n  repositoryLoader: (q: string) => Promise<T[]>\n  onSelect: (repository: T | undefined) => void\n  selectionVariant: 'single'\n}\n\nexport interface MultiSelectProps<T> extends SharedProps {\n  currentSelection: T[] | undefined\n  repositoryLoader: (q: string) => Promise<T[]>\n  onSelect: (repository: T[] | undefined) => void\n  selectionVariant: 'multiple'\n  selectAllOption: false\n  additionalButtonProps?: Partial<ButtonProps>\n}\n\nexport function ReposSelector<T extends NamedRepository>({\n  currentSelection,\n  repositoryLoader,\n  onSelect,\n  selectionVariant,\n  selectAllOption,\n  additionalButtonProps,\n  buttonText: _buttonText = '',\n}: SingleSelectProps<T> | MultiSelectProps<T>) {\n  const [filterText, setFilterText] = useState('')\n  const [filteredRepos, setFilteredRepos] = useState<T[]>([])\n  const [isLoadingRepos, setIsLoadingRepos] = useState<boolean>(true)\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounceRepos = useCallback(\n    debounce(async (newFilter: string) => {\n      try {\n        const response = await repositoryLoader(newFilter)\n        setFilteredRepos(response)\n      } catch (e) {\n        // suppress repo loading errors\n      }\n      setIsLoadingRepos(false)\n    }, 200),\n    [repositoryLoader, setFilteredRepos, setIsLoadingRepos],\n  )\n\n  useEffect(() => {\n    setIsLoadingRepos(true)\n    debounceRepos(filterText)\n  }, [filterText, debounceRepos, setIsLoadingRepos])\n\n  const selectRepos = useCallback(\n    (repos: Array<T | AllRepo>) => {\n      if (selectionVariant === 'single') {\n        if (!repos[0] || (repos[0] as AllRepo)._all) {\n          onSelect(undefined)\n        } else {\n          onSelect(repos[0] as T)\n        }\n      } else {\n        onSelect(repos as T[])\n      }\n    },\n    [selectionVariant, onSelect],\n  )\n\n  const selected = useMemo(() => {\n    return selectionVariant === 'multiple' ? currentSelection || [] : currentSelection ? [currentSelection] : []\n  }, [selectionVariant, currentSelection])\n\n  const convertToItemProps = useCallback((repo: T | AllRepo) => {\n    const truncationCharLimit = 24\n    let truncatedRepoName = undefined\n\n    if (repo.name.length > truncationCharLimit) {\n      truncatedRepoName = `${repo.name.substring(0, truncationCharLimit)}...`\n    }\n\n    if ((repo as AllRepo)._all) {\n      return {\n        id: repo.name,\n        text: 'All repositories',\n        source: repo,\n        groupId: 'all',\n      }\n    }\n    return {\n      id: repo.name,\n      text: truncatedRepoName || repo.name,\n      source: repo,\n      appendOnly: false,\n      groupId: 'select',\n      disabled: repo.enabled === false,\n      leadingVisual: () => {\n        if (repo.private) {\n          return <RepoLockedIcon size={16} />\n        } else {\n          return <RepoIcon size={16} />\n        }\n      },\n    }\n  }, [])\n\n  const getItemKey = useCallback((repo: T | AllRepo) => repo.name, [])\n\n  const items = useMemo(() => {\n    const memoItems: Array<T | AllRepo> = []\n    memoItems.push(...filteredRepos)\n    const hiddenSelectedItems = selected.filter(item => memoItems.every(memoItem => memoItem.name !== item.name)) || []\n    memoItems.push(...hiddenSelectedItems)\n    if (selectAllOption) {\n      memoItems.push({name: '$all$', _all: true} as AllRepo)\n    }\n    return memoItems\n  }, [filteredRepos, selectAllOption, selected])\n\n  let buttonText = _buttonText\n  let buttonIcon = RepoIcon\n  if (!buttonText) {\n    if (selectionVariant === 'multiple') {\n      buttonText =\n        selected.length > 0 ? `${selected.length} repositor${selected.length > 1 ? 'ies' : 'y'}` : 'Select repositories'\n    } else {\n      if (selected.length > 0 && selected[0]) {\n        buttonText = selected[0].name\n        buttonIcon = selected[0].private ? RepoLockedIcon : RepoIcon\n      } else if (selectAllOption) {\n        buttonText = 'All repositories'\n      } else {\n        buttonText = 'Select a repository'\n      }\n    }\n  }\n\n  return (\n    <ItemPicker\n      renderAnchor={({'aria-labelledby': ariaLabelledBy, ...anchorProps}) => (\n        <Button\n          leadingVisual={buttonIcon}\n          trailingAction={TriangleDownIcon}\n          aria-labelledby={` ${ariaLabelledBy}`}\n          {...anchorProps}\n          {...additionalButtonProps}\n        >\n          <Truncate title={buttonText} maxWidth={195}>\n            {buttonText}\n          </Truncate>\n        </Button>\n      )}\n      placeholderText=\"Repos\"\n      items={items}\n      loading={isLoadingRepos}\n      groups={selectAllOption ? [{groupId: 'all'}, {groupId: 'select'}] : []}\n      selectionVariant={selectionVariant}\n      initialSelectedItems={selected}\n      onSelectionChange={selectRepos as (v: unknown[]) => void}\n      filterItems={setFilterText}\n      getItemKey={getItemKey}\n      convertToItemProps={convertToItemProps}\n    />\n  )\n}\n\nexport function simpleRepoLoader<T extends NamedRepository>(repos: T[]): (q: string) => Promise<T[]> {\n  return async (q: string) => {\n    const trimmedFilterText = q.trim().toLowerCase()\n\n    if (!trimmedFilterText) {\n      return repos\n    }\n\n    return repos.filter(\n      repo =>\n        repo.name.toLowerCase().includes(trimmedFilterText) || repo.name.toLowerCase().includes(trimmedFilterText),\n    )\n  }\n}\n\ntry{ ReposSelector.displayName ||= 'ReposSelector' } catch {}"],"names":["currentUrl","targetUrl","current","URL","window","location","origin","target","hasHash","href","includes","host","pathname","search","ERRORS","couldNotUpdateAssignees","couldNotSearchAssignees","couldNotUpdateLabels","couldNotSearchLabels","couldNotUpdateMilestone","couldNotSearchMilestones","couldNotUpdateIssueType","couldNotSearchRepositories","couldNotSearchPullRequests","couldNotSearchProjects","couldNotSearchBranches","noMatches","noResults","couldNotCreateBranch","couldNotCreateLabel","IDS","itemPickerRootId","itemPickerTestId","SELECTORS","activePickerOption","rootId","noMatchesItem","leadingVisual","CircleSlashIcon","text","disabled","selected","undefined","key","id","noResultsItem","maybeIssueUrl","url","_urlError","RegExp","test","getRepositorySearchQuery","queryString","organization","excludeRepo","orgIndexSplit","indexOf","query","split","length","orgSearchName","repoSearchName","getIssueSearchQueries","owner","repoNameWithOwner","ownerPart","trim","repoPart","queryPart","queryIsUrl","inPart","isNaN","Number","sharedQuery","commenters","mentions","assignee","author","open","resource","encodeURI","useFeatureFlags","useAppPayload","enabled_features","useFeatureFlag","featureName","ModifierKeys","useKeyPress","keys","callback","options","callbackRef","useRef","useLayoutEffect","handleKeyPress","useCallback","portals","document","querySelectorAll","some","elementHasNonZeroHeight","element","clientHeight","child","children","triggerWhenPortalIsActive","checkModifierKeys","keyboardEvent","Object","values","event","ignoreModifierKeys","triggerWhenInputElementHasFocus","eventTargetIsInputElement","HTMLTextAreaElement","HTMLInputElement","code","useEffect","targetElement","scopeRef","addEventListener","removeEventListener","useNavigate","routes","history","React","AppContext","reactRouterNavigate","useReactRouterNavigate","to","navigateOptions","resolvePath","matchRoutes","isHashNavigation","toString","startSoftNav","preventAutofocus","startTransition","state","PREVENT_AUTOFOCUS_KEY","turbo","replaceState","skipTurbo","createHref","softNavigate","turboSoftNavigate","useSearchParams","searchParams","useReactRouterSearchParams","navigate","useLocation","setSearchParams","nextInit","newSearchParams","createSearchParams","verifiedFetch","path","init","assertRelativePathOrSameOrigin","headers","fetch","verifiedFetchJSON","Accept","body","JSON","stringify","reactFetch","reactFetchJSON","GitHubAvatar","forwardRef","src","size","otherProps","ref","avatarUrl","useMemo","ssrSafeLocation","has","set","String","Avatar","data-testid","displayName","ItemPicker","items","initialSelectedItems","openHotkey","placeholderText","selectionVariant","loading","groups","filterItems","renderAnchor","getItemKey","convertToItemProps","onSelectionChange","onOpen","onClose","height","width","selectPanelRef","enforceAtleastOneSelected","insidePortal","maxVisibleItems","nested","resultListAriaLabel","title","subtitle","preventClose","triggerOpen","initialFilter","customNoResultsItem","customNoMatchItem","footer","keybindingCommandId","setOpen","useState","setSelected","filter","setFilter","updateOpenState","anyItemPickerOpen","useItemPickersContext","useId","issues_react_ui_commands_migration","handleKeyDown","onHotKeyPress","e","preventDefault","stopPropagation","map","Map","toItemProps","item","itemSelected","itemKey","itemProps","get","onAction","props","i","value","wrappedGetItemKey","selectPanelItems","__isNew__","delete","is","selectPanelSelectedItems","onSelectedChange","param","selectedItemInputs","Array","isArray","find","activeOption","querySelector","activeDataId","getAttribute","onOpenChange","isOpen","selectedItems","source","item2","hasItems","groupMetadataProp","groupMetadata","overlayHeight","selectPanelProps","filterValue","onFilterChange","showItemDividers","overlayProps","GlobalCommands","commands","SelectPanel","anchorRef","ItemPickersContext","createContext","ItemPickersContextProvider","itemPickerOpenStates","previousState","s","contextValue","Provider","context","useContext","jsonRoute","Component","shouldNavigateOnError","transitionType","coreLoader","response","fetchPath","error","type","redirected","ok","httpStatus","status","responseJson","json","data","loadFromEmbeddedData","embeddedData","ReposSelector","currentSelection","repositoryLoader","onSelect","selectAllOption","additionalButtonProps","buttonText","_buttonText","filterText","setFilterText","filteredRepos","setFilteredRepos","isLoadingRepos","setIsLoadingRepos","debounceRepos","debounce","newFilter","selectRepos","repos","_all","truncatedRepoName","repo","name","substring","groupId","appendOnly","enabled","private","RepoLockedIcon","RepoIcon","memoItems","push","hiddenSelectedItems","every","memoItem","buttonIcon","ariaLabelledBy","anchorProps","Button","trailingAction","TriangleDownIcon","aria-labelledby","Truncate","maxWidth","simpleRepoLoader","q","trimmedFilterText","toLowerCase"],"sourceRoot":""}