# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::EnterpriseAccount::V0::Entities::EnterpriseInstallation`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::EnterpriseAccount::V0::Entities::EnterpriseInstallation`.

class Hydro::Schemas::Github::EnterpriseAccount::V0::Entities::EnterpriseInstallation
  sig do
    params(
      customer_name: T.nilable(String),
      host_name: T.nilable(String),
      id: T.nilable(Integer),
      owner_id: T.nilable(Integer),
      owner_type: T.nilable(T.any(Symbol, Integer)),
      version: T.nilable(String)
    ).void
  end
  def initialize(customer_name: nil, host_name: nil, id: nil, owner_id: nil, owner_type: nil, version: nil); end

  sig { void }
  def clear_customer_name; end

  sig { void }
  def clear_host_name; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_owner_type; end

  sig { void }
  def clear_version; end

  sig { returns(String) }
  def customer_name; end

  sig { params(value: String).void }
  def customer_name=(value); end

  sig { returns(String) }
  def host_name; end

  sig { params(value: String).void }
  def host_name=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def owner_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def owner_type=(value); end

  sig { returns(String) }
  def version; end

  sig { params(value: String).void }
  def version=(value); end
end
