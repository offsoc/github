# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::Entities::Profile`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::Entities::Profile`.

class Hydro::Schemas::Github::V1::Entities::Profile
  sig do
    params(
      bio: T.nilable(String),
      company: T.nilable(String),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      display_staff_badge: T.nilable(T::Boolean),
      email: T.nilable(String),
      hireable: T.nilable(T::Boolean),
      id: T.nilable(Integer),
      location: T.nilable(String),
      name: T.nilable(String),
      updated_at: T.nilable(Google::Protobuf::Timestamp),
      user_status: T.nilable(Hydro::Schemas::Github::V1::Entities::UserStatus),
      website_url: T.nilable(String)
    ).void
  end
  def initialize(bio: nil, company: nil, created_at: nil, display_staff_badge: nil, email: nil, hireable: nil, id: nil, location: nil, name: nil, updated_at: nil, user_status: nil, website_url: nil); end

  sig { returns(String) }
  def bio; end

  sig { params(value: String).void }
  def bio=(value); end

  sig { void }
  def clear_bio; end

  sig { void }
  def clear_company; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_display_staff_badge; end

  sig { void }
  def clear_email; end

  sig { void }
  def clear_hireable; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_location; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_updated_at; end

  sig { void }
  def clear_user_status; end

  sig { void }
  def clear_website_url; end

  sig { returns(String) }
  def company; end

  sig { params(value: String).void }
  def company=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(T::Boolean) }
  def display_staff_badge; end

  sig { params(value: T::Boolean).void }
  def display_staff_badge=(value); end

  sig { returns(String) }
  def email; end

  sig { params(value: String).void }
  def email=(value); end

  sig { returns(T::Boolean) }
  def hireable; end

  sig { params(value: T::Boolean).void }
  def hireable=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(String) }
  def location; end

  sig { params(value: String).void }
  def location=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::UserStatus)) }
  def user_status; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::UserStatus)).void }
  def user_status=(value); end

  sig { returns(String) }
  def website_url; end

  sig { params(value: String).void }
  def website_url=(value); end
end
