"use strict";(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([["app_components_security_center_coverage-settings-element_ts"],{86383:(e,t,r)=>{r.r(t);var u=r(39595);function i(e,t,r,u){var i,o=arguments.length,s=o<3?t:null===u?u=Object.getOwnPropertyDescriptor(t,r):u;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,u);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(o<3?i(s):o>3?i(t,r,s):i(t,r))||s);return o>3&&s&&Object.defineProperty(t,r,s),s}let o=class CoverageSettingsElement extends HTMLElement{connectedCallback(){try{this.resetStates()}finally{this.showWhenReady&&this.removeAttribute("hidden")}}resetStates(){this.parentFeatureCheckbox&&(this.parentFeatureCheckbox.checked="true"===this.parentFeatureCheckbox.getAttribute("feature-enabled")),this.subFeatureOneCheckbox&&(this.subFeatureOneCheckbox.checked="true"===this.subFeatureOneCheckbox.getAttribute("feature-enabled")),this.subFeatureTwoCheckbox&&(this.subFeatureTwoCheckbox.checked="true"===this.subFeatureTwoCheckbox.getAttribute("feature-enabled")),this.subFeatureTwoChildCheckbox&&(this.subFeatureTwoChildCheckbox.checked="true"===this.subFeatureTwoChildCheckbox.getAttribute("feature-enabled")),this.toggleParentFeature()}toggleParentFeature(){this.updateParentFeature(),this.toggleSubFeatureOne(),this.toggleSubFeatureTwo(),this.toggleSubFeatureOneDisclosure()}toggleSubFeatureOne(){this.subFeatureOneCheckbox&&this.updateSubFeature(this.parentFeatureCheckbox,this.subFeatureOneEnabled,this.subFeatureOneCheckbox,this.subFeatureOneTitle,this.subFeatureOneModified,this.subFeatureOneAuxBox,this.subFeatureOneDisclosureHeaderText,this.subFeatureOneDisclosureInputs,this.subFeatureOneDisclosureValue)}toggleSubFeatureOneDisclosure(){this.subFeatureOneCheckbox&&this.subFeatureOneDisclosureContent&&("display: none;"!==this.subFeatureOneDisclosureContent.getAttribute("style")?(this.subFeatureOneDisclosureHeader.setAttribute("aria-expanded","false"),this.subFeatureOneDisclosureContent.setAttribute("style","display: none;"),this.subFeatureOneDisclosureIcon.style.transform=""):(this.subFeatureOneDisclosureHeader.setAttribute("aria-expanded","true"),this.subFeatureOneDisclosureContent.setAttribute("style","display: block;"),this.subFeatureOneDisclosureIcon.style.transform="scaleY(-1)"))}toggleSubFeatureTwo(){this.subFeatureTwoCheckbox&&(this.updateSubFeature(this.parentFeatureCheckbox,this.subFeatureTwoEnabled,this.subFeatureTwoCheckbox,this.subFeatureTwoTitle,this.subFeatureTwoModified),this.toggleSubFeatureTwoChild())}toggleSubFeatureTwoChild(){this.subFeatureTwoChildCheckbox&&this.updateSubFeature(this.subFeatureTwoCheckbox,this.subFeatureTwoChildEnabled,this.subFeatureTwoChildCheckbox,this.subFeatureTwoChildTitle,this.subFeatureTwoChildModified)}updateParentFeature(){if(!this.parentFeatureCheckbox)return;"true"===this.parentFeatureCheckbox.getAttribute("setting-disabled")&&(this.parentFeatureCheckbox.setAttribute("disabled","true"),this.parentFeatureTitle.setAttribute("style","opacity: 0.6;"));let e=this.parentFeatureCheckbox.checked?"1":"0";this.parentFeatureEnabled.setAttribute("value",e),this.toggleModifiedLabel(this.featureHasBeenModified(this.parentFeatureCheckbox),this.parentFeatureModified)}updateSubFeature(e,t,r,u,i,o,s,a,n){let d="true"===r.getAttribute("setting-disabled");e&&!e.checked||d?(r.setAttribute("disabled","true"),u.setAttribute("style","opacity: 0.6;"),d||(r.checked=!1)):(r.removeAttribute("disabled"),u.setAttribute("style",""));let b=r.checked?"1":"0";t.setAttribute("value",b),o&&("1"===b?o.setAttribute("style","display: block;"):o.setAttribute("style","display: none;"));let h=!1;if(a&&a.length>0&&n){let e=a.find(e=>e.checked);if(e&&r.checked){if(h=e.value!==n.getAttribute("data-initial-value"),n.setAttribute("value",e.value),s){let t=document.querySelector(`label[for=${e.id}`)?.textContent;s.textContent=t?.replace(" Recommended","")||""}}else n.removeAttribute("value");for(let e of a)d||!r.checked?e.setAttribute("disabled","true"):e.removeAttribute("disabled")}let l=this.featureHasBeenModified(r);this.toggleModifiedLabel(l||h,i)}toggleModifiedLabel(e,t){t&&(e?("hidden"===t.getAttribute("hidden")&&this.dispatchEvent(new CustomEvent("increment")),t.removeAttribute("hidden")):("hidden"!==t.getAttribute("hidden")&&this.dispatchEvent(new CustomEvent("decrement")),t.setAttribute("hidden","hidden")))}featureHasBeenModified(e){return"true"===e.getAttribute("feature-enabled")!==e.checked}constructor(...e){super(...e),this.showWhenReady=!1}};i([u.CF],o.prototype,"showWhenReady",void 0),i([u.aC],o.prototype,"parentFeatureCheckbox",void 0),i([u.aC],o.prototype,"subFeatureOneCheckbox",void 0),i([u.aC],o.prototype,"subFeatureTwoCheckbox",void 0),i([u.aC],o.prototype,"subFeatureTwoChildCheckbox",void 0),i([u.aC],o.prototype,"parentFeatureEnabled",void 0),i([u.aC],o.prototype,"subFeatureOneEnabled",void 0),i([u.aC],o.prototype,"subFeatureTwoEnabled",void 0),i([u.aC],o.prototype,"subFeatureTwoChildEnabled",void 0),i([u.aC],o.prototype,"parentFeatureTitle",void 0),i([u.aC],o.prototype,"subFeatureOneTitle",void 0),i([u.aC],o.prototype,"subFeatureTwoTitle",void 0),i([u.aC],o.prototype,"subFeatureTwoChildTitle",void 0),i([u.aC],o.prototype,"parentFeatureModified",void 0),i([u.aC],o.prototype,"subFeatureOneModified",void 0),i([u.aC],o.prototype,"subFeatureTwoModified",void 0),i([u.aC],o.prototype,"subFeatureTwoChildModified",void 0),i([u.aC],o.prototype,"subFeatureOneAuxBox",void 0),i([u.aC],o.prototype,"subFeatureOneDisclosureIcon",void 0),i([u.aC],o.prototype,"subFeatureOneDisclosureHeader",void 0),i([u.aC],o.prototype,"subFeatureOneDisclosureHeaderText",void 0),i([u.aC],o.prototype,"subFeatureOneDisclosureContent",void 0),i([u.zV],o.prototype,"subFeatureOneDisclosureInputs",void 0),i([u.aC],o.prototype,"subFeatureOneDisclosureValue",void 0),o=i([u.p_],o);let s=class EnablementDialogElement extends HTMLElement{resetStates(){for(let e of this.coverageSettings)e.resetStates()}incrementCounter(){if(this.counter){let e=+(this.counter.textContent||0)+1,t=e.toString(),r=t.concat(" features modified");1===e&&(r=t.concat(" feature modified")),this.counter.textContent=t,this.counter.setAttribute("aria-label",r)}}decrementCounter(){if(this.counter){let e=+(this.counter.textContent||0)-1,t=e.toString(),r=t.concat(" features modified");1===e&&(r=t.concat(" feature modified")),this.counter.textContent=t,this.counter.setAttribute("aria-label",r)}}};i([u.aC],s.prototype,"dialog",void 0),i([u.zV],s.prototype,"coverageSettings",void 0),i([u.aC],s.prototype,"counter",void 0),s=i([u.p_],s)}}]);
//# sourceMappingURL=app_components_security_center_coverage-settings-element_ts-857cc2e01280.js.map