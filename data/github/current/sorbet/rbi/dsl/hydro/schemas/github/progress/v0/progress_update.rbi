# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Progress::V0::ProgressUpdate`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Progress::V0::ProgressUpdate`.

class Hydro::Schemas::Github::Progress::V0::ProgressUpdate
  sig do
    params(
      config: T.nilable(Hydro::Schemas::Github::Progress::V0::Entities::Config),
      denominator: T.nilable(Integer),
      denominator_locked: T.nilable(T::Boolean),
      event: T.nilable(T.any(Symbol, Integer)),
      key: T.nilable(String),
      numerator: T.nilable(Integer),
      started_at: T.nilable(Google::Protobuf::Timestamp),
      status: T.nilable(T.any(Symbol, Integer)),
      stopped_at: T.nilable(Google::Protobuf::Timestamp),
      updated_at: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(config: nil, denominator: nil, denominator_locked: nil, event: nil, key: nil, numerator: nil, started_at: nil, status: nil, stopped_at: nil, updated_at: nil); end

  sig { void }
  def clear_config; end

  sig { void }
  def clear_denominator; end

  sig { void }
  def clear_denominator_locked; end

  sig { void }
  def clear_event; end

  sig { void }
  def clear_key; end

  sig { void }
  def clear_numerator; end

  sig { void }
  def clear_started_at; end

  sig { void }
  def clear_status; end

  sig { void }
  def clear_stopped_at; end

  sig { void }
  def clear_updated_at; end

  sig { returns(T.nilable(Hydro::Schemas::Github::Progress::V0::Entities::Config)) }
  def config; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Progress::V0::Entities::Config)).void }
  def config=(value); end

  sig { returns(Integer) }
  def denominator; end

  sig { params(value: Integer).void }
  def denominator=(value); end

  sig { returns(T::Boolean) }
  def denominator_locked; end

  sig { params(value: T::Boolean).void }
  def denominator_locked=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def event; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def event=(value); end

  sig { returns(String) }
  def key; end

  sig { params(value: String).void }
  def key=(value); end

  sig { returns(Integer) }
  def numerator; end

  sig { params(value: Integer).void }
  def numerator=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def started_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def started_at=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def status; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def status=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def stopped_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def stopped_at=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end
end
