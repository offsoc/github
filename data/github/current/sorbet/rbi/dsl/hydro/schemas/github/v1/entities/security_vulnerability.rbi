# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::Entities::SecurityVulnerability`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::Entities::SecurityVulnerability`.

class Hydro::Schemas::Github::V1::Entities::SecurityVulnerability
  sig do
    params(
      first_patched_version: T.nilable(Hydro::Schemas::Github::V1::Entities::SecurityVulnerability::PackageVersion),
      ghsa_id: T.nilable(String),
      package: T.nilable(Hydro::Schemas::Github::V1::Entities::SecurityVulnerability::Package),
      severity: T.nilable(T.any(Symbol, Integer)),
      vulnerable_version_range: T.nilable(String)
    ).void
  end
  def initialize(first_patched_version: nil, ghsa_id: nil, package: nil, severity: nil, vulnerable_version_range: nil); end

  sig { void }
  def clear_first_patched_version; end

  sig { void }
  def clear_ghsa_id; end

  sig { void }
  def clear_package; end

  sig { void }
  def clear_severity; end

  sig { void }
  def clear_vulnerable_version_range; end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::SecurityVulnerability::PackageVersion)) }
  def first_patched_version; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::SecurityVulnerability::PackageVersion)).void }
  def first_patched_version=(value); end

  sig { returns(String) }
  def ghsa_id; end

  sig { params(value: String).void }
  def ghsa_id=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::SecurityVulnerability::Package)) }
  def package; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::SecurityVulnerability::Package)).void }
  def package=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def severity; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def severity=(value); end

  sig { returns(String) }
  def vulnerable_version_range; end

  sig { params(value: String).void }
  def vulnerable_version_range=(value); end
end
