# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Launch::Pbtypes::Deploy::SynchronizeScheduledWorkflowsRequest`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Launch::Pbtypes::Deploy::SynchronizeScheduledWorkflowsRequest`.

class GitHub::Launch::Pbtypes::Deploy::SynchronizeScheduledWorkflowsRequest
  sig do
    params(
      actor_node_id: T.nilable(GitHub::Launch::Pbtypes::GitHub::Identity),
      installation_id: T.nilable(Integer),
      owner_database_id: T.nilable(Integer),
      ref: T.nilable(String),
      repository_node_id: T.nilable(GitHub::Launch::Pbtypes::GitHub::Identity)
    ).void
  end
  def initialize(actor_node_id: nil, installation_id: nil, owner_database_id: nil, ref: nil, repository_node_id: nil); end

  sig { returns(T.nilable(GitHub::Launch::Pbtypes::GitHub::Identity)) }
  def actor_node_id; end

  sig { params(value: T.nilable(GitHub::Launch::Pbtypes::GitHub::Identity)).void }
  def actor_node_id=(value); end

  sig { void }
  def clear_actor_node_id; end

  sig { void }
  def clear_installation_id; end

  sig { void }
  def clear_owner_database_id; end

  sig { void }
  def clear_ref; end

  sig { void }
  def clear_repository_node_id; end

  sig { returns(Integer) }
  def installation_id; end

  sig { params(value: Integer).void }
  def installation_id=(value); end

  sig { returns(Integer) }
  def owner_database_id; end

  sig { params(value: Integer).void }
  def owner_database_id=(value); end

  sig { returns(String) }
  def ref; end

  sig { params(value: String).void }
  def ref=(value); end

  sig { returns(T.nilable(GitHub::Launch::Pbtypes::GitHub::Identity)) }
  def repository_node_id; end

  sig { params(value: T.nilable(GitHub::Launch::Pbtypes::GitHub::Identity)).void }
  def repository_node_id=(value); end
end
