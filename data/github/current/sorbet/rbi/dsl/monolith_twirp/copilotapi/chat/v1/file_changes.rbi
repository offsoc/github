# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Copilotapi::Chat::V1::FileChanges`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Copilotapi::Chat::V1::FileChanges`.

class MonolithTwirp::Copilotapi::Chat::V1::FileChanges
  sig do
    params(
      blame_lines: T.nilable(T.any(Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::Chat::V1::BlameLine], T::Array[MonolithTwirp::Copilotapi::Chat::V1::BlameLine])),
      commits: T.nilable(T.any(Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::Chat::V1::Commit], T::Array[MonolithTwirp::Copilotapi::Chat::V1::Commit])),
      repo_id: T.nilable(Integer),
      repo_name: T.nilable(String),
      repo_owner: T.nilable(String)
    ).void
  end
  def initialize(blame_lines: T.unsafe(nil), commits: T.unsafe(nil), repo_id: nil, repo_name: nil, repo_owner: nil); end

  sig { returns(Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::Chat::V1::BlameLine]) }
  def blame_lines; end

  sig { params(value: Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::Chat::V1::BlameLine]).void }
  def blame_lines=(value); end

  sig { void }
  def clear_blame_lines; end

  sig { void }
  def clear_commits; end

  sig { void }
  def clear_repo_id; end

  sig { void }
  def clear_repo_name; end

  sig { void }
  def clear_repo_owner; end

  sig { returns(Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::Chat::V1::Commit]) }
  def commits; end

  sig { params(value: Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::Chat::V1::Commit]).void }
  def commits=(value); end

  sig { returns(Integer) }
  def repo_id; end

  sig { params(value: Integer).void }
  def repo_id=(value); end

  sig { returns(String) }
  def repo_name; end

  sig { params(value: String).void }
  def repo_name=(value); end

  sig { returns(String) }
  def repo_owner; end

  sig { params(value: String).void }
  def repo_owner=(value); end
end
