<%# erblint:counter DeprecatedComponentsCounter 6 %>
<%# erblint:counter ButtonComponentMigrationCounter 5 %>
<% page_info(title: feature_flag.name, selected_link: :features) %>

<style>
.ButtonGroupWithDialogs {
  border-right-width: 1px;
  border-top-right-radius: 6px;
  border-bottom-right-radius: 6px;
}
</style>

<% content_for :pagehead_path do %>
  / <a href="<%= devtools_feature_flags_path %>">Feature Flags</a>
  / <strong><%= feature_flag.name %></strong>
<% end %>

<% if !GitHub.flipper[:devtools_feature_flags_disabled_exclusion].enabled?(current_user) %>
  <%= render Primer::Beta::Flash.new(scheme: :default, display: :flex, mb: 3) do |component| %>
    <%= primer_octicon(:stop, mr: 2, mt: 1) %>
    <div>
      <p>The feature flag UI as part of devtools has been deprecated, please use the <a class="Link--inTextBlock" href="https://devportal.githubapp.com/feature-flags/<%= feature_flag.name %>/overview" target="_blank" rel="noopener noreferrer">devportal</a> instead.</p>
      <p>For more information about this change, see this <a class="Link--inTextBlock" href="https://gh.io/devtools-migration" target="_blank" rel="noopener noreferrer">engineering discussion</a>.</p>
    </div>
  <% end %>
<% else %>
  <% unless feature_flag.feature.blank? %>
    <%= render(Primer::Beta::Flash.new(scheme: :warning, mb: 4)) do %>
      <strong>
        This feature flag is part of the toggleable feature <a class="Link--inTextBlock" href="<%= devtools_toggleable_feature_path(feature_flag.feature.slug) %>"><%= feature_flag.feature.public_name %></a>. Some features here may be disabled as a result.
        For more information see the <a class="Link--inTextBlock" href="https://thehub.github.com/engineering/products-and-services/dotcom/features/feature-preview">Feature Preview</a> documentation.
      </strong>
    <% end %>
  <% end %>

  <div class="Box mb-5" data-hpc>
    <div class="Box-header d-flex flex-items-center">
      <h3 class="Box-title flex-auto">
        <%= feature_flag.name %>
        <% if feature_flag.long_lived? %>
          <%= render Primer::Beta::Label.new(scheme: :info, ml: 1, title: "Label: LONG LIVED") do %>
            LONG LIVED
          <% end %>
        <% end %>
      </h3>

      <% if GitHub.multi_tenant_enterprise? %>
        <%= render partial: 'devtools/feature_flags/action_disabled_dialog', locals: {
            title: "Action Not Allowed",
            dialog_id: "edit-feature-flag-dialog",
            button_text: "Edit feature",
            button_scheme: :default,
            button_size: :small,
            dialog_message: "Editing feature flags is not allowed on proxima stamps. Please edit the feature from the dotcom devtools UI."} %>

      <% else %>
        <a href="<%= edit_devtools_feature_flag_path(feature_flag) %>" class="btn btn-sm">Edit feature</a>
      <% end %>

    </div>

    <%= render Devtools::FeatureEnabledFlashComponent.new(feature: feature_flag) %>

    <div class="Box-row">
      <% unless feature_flag.service_name.blank? %>
        <p><strong>Owning service</strong>: <a class="Link--inTextBlock" href="https://catalog.githubapp.com/services/<%= feature_flag.service_name %>"><%= feature_flag.short_service_name %></a></p>
      <% end %>

      <% unless feature_flag.github_org_team.blank? %>
        <p><strong>Owning team</strong>: <a class="Link--inTextBlock" href="<%= team_path(feature_flag.github_org_team) %>"><%= feature_flag.github_org_team.name %></a></p>
      <% end %>

      <% unless feature_flag.slack_channel.blank? %>
        <p><strong>Slack channel</strong>: <a class="Link--inTextBlock" href="https://github.slack.com/channels/<%= feature_flag.slack_channel %>"><%= feature_flag.slack_channel %></a></p>
      <% end %>

      <% if feature_flag.tracking_issue_url.present? %>
        <p><strong>Tracking issue</strong>: <%= render(Primer::Beta::Link.new(href: feature_flag.tracking_issue_url, classes: "Link--inTextBlock")) do %><%= feature_flag.tracking_issue_url %> <%= render(Primer::Beta::Octicon.new(:"link-external")) %><% end %></p>
      <% end %>

      <% if feature_flag.stale_at.present? %>
        <p><strong>Expected removal</strong>: <%= feature_flag.stale_at.to_date %> <%= render(Primer::Beta::Label.new(scheme: :attention, title: "STALE")) { "STALE" } if feature_flag.stale? %></p>
      <% end %>

      <p class="mb-0"><strong>Dashboard</strong>: <a class="Link--inTextBlock" href="https://app.datadoghq.com/dashboard/rc6-kc7-y2u/feature-flag-results-per-flag?tpl_var_feature_flag=<%= feature_flag.name %>" target="_blank">View in Datadog</a></p>
    </div>

    <div class="Box-row">
      <div class="my-2">
        <% if feature_flag.description.blank? %>
          <em>No description provided.</em>
        <% else %>
          <%= feature_flag.description_html_for(current_user) %>
        <% end %>
      </div>
    </div>
  </div>

  <div class="Box Box--condensed mb-5">
    <div class="Box-header d-flex flex-items-center">
      <h3 class="Box-title flex-auto">Preliminary testing and team-shipping</h3>

      <%= render(Primer::Beta::ButtonGroup.new(size: :small)) do |component| %>
        <% component.with_button(tag: :a, href: devtools_feature_flag_add_github_team_path(feature_flag)) { "Add GitHub team" } %>
        <% component.with_button(tag: :a, href: devtools_feature_flag_add_actor_path(feature_flag)) { "Add actor" } %>
        <% component.with_button(tag: :a, href: devtools_feature_flag_remove_actor_path(feature_flag)) { "Remove actor" } %>
        <% component.with_button(tag: :a, href: devtools_feature_flag_check_actor_path(feature_flag)) { "Check actor" } %>
      <% end %>
    </div>

    <% if feature_flag.show_big_feature_warning? %>
      <%= render(Primer::Beta::Flash.new(scheme: :warning, full: true)) do %>
        Your feature flag has more then <%= big_feature_threshold %> actors but isn't configured as a big feature. <a class="Link--inTextBlock" href="https://thehub.github.com/engineering/development-and-ops/dotcom/features/feature-flags/big-features/">Click here</a> to read about big features and consider making this feature flag into one.<%# erblint:disable GitHub::Accessibility::AvoidGenericLinkText %>
      <% end %>
    <% end %>

    <%= render Devtools::GateOverrideMessageComponent.new(feature: feature_flag) %>

    <div class="Box-body">
      <p class="mt-2">Feature flags can also be enabled for a user from the command line in development.</p>
      <code>
        <p>$ bin/toggle-feature-flag enable <%= feature_flag.name %> <%= current_user.name %></p>
        <p>$ bin/toggle-feature-flag disable <%= feature_flag.name %>  <%= current_user.name %></p>
      </code>

      <hr>

      <div class="d-flex flex-justify-between flex-items-center my-2">
        <div>
          <p>Enable this feature for individual users, organizations, enterprises, repositories, etc.</p>
          <p>
            <strong><%= pluralize feature_flag.number_of_actor_gates, "actor" %></strong>
            <%= "has".pluralize(feature_flag.number_of_actor_gates) %> access to <strong><%= feature_flag.name %></strong>
          </p>
        </div>

        <% if feature_flag.actor_types.size > 1 %>
          <%= form_tag devtools_feature_flag_path(feature_flag.name), method: :get do %>
            <%= hidden_field_tag 'show_big_feature_actors', true, {:id => 'show_big_feature_actors'} %>
            <%= select_tag :actor_type, options_for_select(feature_flag.actor_types, selected_filter),
              class: "form-select select-sm",
              prompt: "Filter by actor type...",
              "aria-label": "Filter by actor type",
              "data-autosubmit": true
            %>
          <% end %>
        <% end %>
      </div>
    </div>

    <% if show_big_feature_actors %>
      <%= render partial: "devtools/feature_flags/actors", locals: { actor_gates: actor_gates, feature_flag: feature_flag } %>
    <% else %>
    <div class="Box-row">
      <div class="my-2">
        This feature is configured as a <a class="Link--inTextBlock" href="https://thehub.github.com/epd/engineering/products-and-services/dotcom/features/feature-flags/big-features/">Big Feature</a> and for performance reasons the list isn't being shown automatically.
        <%= form_tag devtools_feature_flag_path(feature_flag), method: :get do %>

          <%= hidden_field_tag 'show_big_feature_actors', true, {:id => 'show_big_feature_actors'} %>
          <%= render(Primer::ButtonComponent.new(type: :submit, mt: 2)) {
            "Retrieve Actors"
          } %>
        <% end %>
      </div>
    </div>

    <% end %>
  </div>

  <div class="Box mb-5">
    <div class="Box-header">
      <h3 class="Box-title">Staff-shipping and other groups of actors</h3>
    </div>
    <%= render Devtools::GateOverrideMessageComponent.new(feature: feature_flag, context: :groups) %>
    <div>
      <% if feature_flag.available_groups.any? %>
        <div class="Box-row d-flex flex-items-center flex-justify-between">
          <div>
            <h4><%= label_tag(:group, "Enable a group") %></h4>
            <p>Note: The <u>preview_features</u> group is equivalent to staff-shipping</p>
            <p>For descriptions about each group please see the <a class="Link--inTextBlock" href="https://thehub.github.com/engineering/development-and-ops/dotcom/features/feature-flags/groups/">Groups Documentation</a> on TheHub.</p>
          </div>

          <%= form_tag devtools_feature_flag_group_path(feature_flag), method: :post, class: "ml-3" do |f| %>
            <%= select_tag(:group, options_for_select(feature_flag.available_groups.sort_by(&:name)), class: "select-sm") %>
            <%= hidden_field_tag 'rollout_updated_at', feature_flag.rollout_updated_at, {:id => 'groups_rollout_updated_at'} %>
            <%= submit_tag "Add group", class: "btn btn-sm" %>
          <% end %>
        </div>
      <% end %>

      <% if !(feature_flag.big_feature? || feature_flag.show_big_feature_warning?) && feature_flag.github_enabled? %>
        <div class="Box-row d-flex flex-items-center flex-justify-between" <%= test_selector "feature-flag-announce" %>>
          <div>
            <h4>Announce changes</h4>
            <p>This feature is only enabled for GitHub staff, teams, and/or repos which means you may be able to automatically announce changes</p>
          </div>
          <a class="btn btn-sm" href="<%= devtools_feature_flag_announce_path(feature_flag) %>">Announce Changes</a>
        </div>
      <% end %>

      <div class="Box-row">
        <h4>Enabled Groups</h4>
        <p>
          Enable this feature for a predefined group of actors. Use the
          <code>preview_features</code> group to staff-ship your feature.
        </p>
        <p>
          Groups can be defined with arbitrary Ruby code. See <%= link_to "all our defined groups", "/github/github/blob/master/lib/flipper/groups.rb", class: "Link--inTextBlock" %>.
        </p>

        <% if feature_flag.groups_value.any? %>
          <p class="mt-4">
            <strong><%= pluralize feature_flag.groups_value.length, "group" %></strong> <%= "has".pluralize(feature_flag.groups_value.length) %> access to <strong><%= feature_flag.name %></strong>
          </p>

          <ul class="ml-3">
            <% feature_flag.groups_value.each do |group| %>
              <li>
                <%= group %>
                <span class="stafftools-email-actions">
                  <%= form_tag devtools_feature_flag_delete_group_path(feature_flag, group), method: :delete, class: "inline-form", "data-confirm" => "Are you sure you want to grant all users access to #{feature_flag.name}?" do %>
                    <%= hidden_field_tag 'rollout_updated_at', feature_flag.rollout_updated_at, {:id => 'group_delete_rollout_updated_at'} %>
                    <button type="submit" class="btn-link color-fg-danger" title="Remove access from <%= group %>"><%# erblint:disable GitHub::Accessibility::NoTitleAttribute %>
                      <%= render(Primer::Beta::Octicon.new(icon: 'trash')) %>
                    </button>
                  <% end %>
                </span>
              </li>
            <% end %>
          </ul>
        <% else %>
          <p>No groups have been granted access for <strong><%= feature_flag.name %></strong>.</p>
        <% end %>
      </div>
    </div>
  </div>

  <div class="Box mb-5">
    <div class="Box-header">
      <h3 class="Box-title">Dark-shipping</h3>
    </div>
    <%= render Devtools::GateOverrideMessageComponent.new(feature: feature_flag, context: :dark_ship) %>
    <div class="Box-row">
      <% unless feature_flag.feature.blank? %>
        <%= render(Primer::Beta::Flash.new(scheme: :warning, mb: 2)) do %>
          <strong>
            This feature flag is part of the toggleable feature <a class="Link--inTextBlock" href="<%= devtools_toggleable_feature_path(feature_flag.feature.slug) %>"><%= feature_flag.feature.public_name %></a>. Toggleable features are per-user and do not support dark shipping.
          </strong>
        <% end %>
      <% end %>

      <p>
        Enable this feature for a percentage of <code>enabled?</code> calls. This is primarily useful for dark-shipping.
      </p>
      <p><small>
        Note: Do not use this for anything user-visible as it can cause features to turn on or off each time the user reloads the page.
      </small></p>
      <p>
        <% if feature_flag.custom_random_percentage? %>
          <span class="color-fg-danger">Manually set to <%= feature_flag.percentage_of_time_value %>%</span>
        <% end %>
      </p>
      <%= form_tag devtools_feature_flag_random_percentage_path(feature_flag), :method => :put do |f| %>
        <%= hidden_field_tag 'rollout_updated_at', feature_flag.rollout_updated_at, {:id => 'percentage_time_rollout_updated_at'} %>
        <p class="clearfix">
          <span class="BtnGroup">
            <% FlipperFeature::PERCENTAGES.each do |n| %>
              <button type="submit" <% unless feature_flag.feature.blank? %> disabled<% end %> data-confirm="Are you sure you want to enable this flag for <%= n %>% of enabled? calls?" name="random_percentage" value="<%= n %>" class="btn <% if feature_flag.percentage_of_time_value == n %>selected<% end %> BtnGroup-item"><%= n %>%</button>
            <% end %>
          </span>
        </p>
      <% end %>
    </div>
    <div class="Box-row">
      <%= form_tag devtools_feature_flag_random_percentage_path(feature_flag), :method => :put do |f| %>
      <div class="form-group">
        <div class="form-group-header">
          <label for="random_percentage">Set Percentage Manually</label>
        </div>
        <div class="form-group-body">
          <p class="note">For more fine grained control over the percentage feel free to define your own percentage. Decimals can used to a hundredth of a percent. For example: <code>25.01</code></p>
          <div class="input-group col-2">
            <span class="input-group-button"><span class="btn">%</span></span>
            <%= number_field_tag :random_percentage, feature_flag.percentage_of_time_value, class: "form-control", in: 0..100, step: 0.01 %>
          </div>
        </div>
      </div>
      <%= hidden_field_tag 'rollout_updated_at', feature_flag.rollout_updated_at, {:id => 'percentage_time_entered_rollout_updated_at' } %>
      <div class="form-group">
        <p class="form-actions">
          <%= submit_tag "Submit Percentage", :class => "btn btn-primary" %>
        </p>
      </div>
      <% end %>
    </div>
  </div>

  <div class="Box mb-5">
    <div class="Box-header">
      <h3 class="Box-title">Gradually enable for all actors</h3>
    </div>
    <%= render Devtools::GateOverrideMessageComponent.new(feature: feature_flag, context: :actors) %>
    <div class="Box-row">
      <p>
        Enable this feature for a percentage of actors. Use this setting to
        gradually enable your feature for more and more users, orgs, or
        repositories.
      </p>
      <p>If you are not passing an actor (user, repository, etc) to the <em>enabled?</em> call this rollout will not work and you will need to use dark shipping instead.</p>
      <p><small>
        Note: This is <em>in addition to</em> the individual actors and groups of
        actors listed above. This percentage does not affect whether those
        individuals or groups have access.
      </small></p>
      <p>
        <% if feature_flag.custom_actor_percentage? %>
          <span class="color-fg-danger">Manually set to <%= feature_flag.percentage_of_actors_value %>%</span>
        <% end %>
      </p>
      <%= form_tag devtools_feature_flag_actor_percentage_path(feature_flag), method: :put do |f| %>
        <%= hidden_field_tag 'rollout_updated_at', feature_flag.rollout_updated_at, {:id => 'actors_rollout_updated_at' } %>
        <p class="clearfix">
          <span class="BtnGroup">
            <% FlipperFeature::PERCENTAGES.each do |n| %>
              <button type="submit" name="actor_percentage" data-confirm="Are you sure you want to enable this flag for <%= n %>% of actors?" value="<%= n %>" class="btn <% if feature_flag.percentage_of_actors_value == n %>selected<% end %> BtnGroup-item"><%= n %>%</button>
            <% end %>
          </span>
        </p>
      <% end %>
    </div>
    <div class="Box-row">
      <%= form_tag devtools_feature_flag_actor_percentage_path(feature_flag), method: :put do |f| %>
      <div class="form-group">
        <div class="form-group-header">
          <label for="actor_percentage">Set Percentage Manually</label>
        </div>
        <div class="form-group-body">
          <p class="note">For more fine grained control over the percentage feel free to define your own percentage. Decimals can used to a hundredth of a percent. For example: <code>25.01</code></p>
          <div class="input-group col-2">
            <span class="input-group-button"><span class="btn">%</span></span>
            <%= number_field_tag :actor_percentage, feature_flag.percentage_of_actors_value, class: "form-control", in: 0..100, step: 0.01 %>
          </div>
        </div>
      </div>
      <%= hidden_field_tag 'rollout_updated_at', feature_flag.rollout_updated_at, {:id => 'actors_entered_rollout_updated_at'} %>
      <div class="form-group">
        <p class="form-actions">
          <%= submit_tag "Submit Percentage", :class => "btn btn-primary" %>
        </p>
      </div>
      <% end %>
    </div>
  </div>

  <%= render(Primer::Beta::BorderBox.new(border_color: :danger, mb: 5)) do |component| %>
    <% component.with_header(bg: :danger, border_color: :danger, font_weight: :bold) do %>
      Danger Zone
    <% end %>

    <% component.with_body(border_color: :danger) do %>
      <p>Feature flags can also be toggled from the command line in development.</p>
      <code>
        <p>$ bin/toggle-feature-flag enable <%= feature_flag.name %></p>
        <p>$ bin/toggle-feature-flag disable <%= feature_flag.name %></p>
      </code>

      <hr class="bleed-flush">

      <div class="d-flex">
        <div class="flex-1">
          <h4>Master keys</h4>
          <p>Enable or disable for <strong>everyone</strong> with one click.</p>
        </div>
        <%= form_tag devtools_feature_flag_enable_path(feature_flag.name), method: :post, class: "inline-form pr-3" do %>
          <%= hidden_field_tag 'rollout_updated_at', feature_flag.rollout_updated_at, {:id => 'enable_rollout_updated_at'} %>
          <button type="submit" data-confirm="Are you sure you want to grant all users access to <%= feature_flag.name %>?" class="btn<%= " btn-danger" unless feature_flag.boolean_value == true %>"<%= " disabled" if feature_flag.boolean_value == true %>>Enable</button>
        <% end %>

        <%= form_tag devtools_feature_flag_disable_path(feature_flag.name), method: :post, class: "inline-form" do %>
          <%= hidden_field_tag 'rollout_updated_at', feature_flag.rollout_updated_at, {:id => 'disable_rollout_updated_at'} %>
          <button type="submit" data-confirm="Are you sure you want to disable <%= feature_flag.name %>?" class="btn<%= " btn-danger" if feature_flag.boolean_value == true %>"<%= " disabled" if feature_flag.off? %>>Disable</button>
        <% end %>
      </div>

      <hr class="bleed-flush">

      <div class="d-flex">
        <div class="flex-1">
          <h4>Delete feature</h4>
          <p>Deleting a feature disables it for everyone.</p>
        </div>

        <% if GitHub.multi_tenant_enterprise? %>
          <%= render partial: 'devtools/feature_flags/action_disabled_dialog', locals: {
            title: "Action Not Allowed",
            dialog_id: "delete-feature-flag-dialog",
            button_text: "Delete",
            button_scheme: :danger,
            button_size: :medium,
            dialog_message: "Deleting feature flags is not allowed on proxima stamps. Please delete the feature from the dotcom devtools UI."} %>
        <% else %>
          <%= form_tag devtools_feature_flag_path(feature_flag), method: :delete, class: "inline-form" do %>
            <%= render Primer::ButtonComponent.new(type: :submit, "data-confirm": "Are you sure you want to delete #{ feature_flag.name }?", scheme: :danger) do %>Delete<% end %>
          <% end %>
        <% end %>

      </div>

    <% end %>
  <% end %>

  <div class="Box mb-5">
    <div class="Box-header">
      <h3 class="Box-title">
      Synchronize Actors
      </h3>
    </div>

    <%= form_tag devtools_feature_flag_synchronize_feature_flag_actors_path(feature_flag), method: :post, class: "inline-form" do %>
      <div class="Box-body">
        <p>This tool will allow you to sync this feature's actor list.</p>
        <div class="d-flex mt-auto pl-2">
          <%= render(Primer::Beta::Button.new(type: :submit, scheme: :danger, align_content: :center)) { "Synchronize" } %>
        </div>
      </div>
    <% end %>
  </div>


  <%= render(Devtools::CodeUsageComponent.new(feature_flag.code_usage)) %>

  <div class="Box Box--condensed">
    <div class="Box-header">
      <h3 class="Box-title">
        History
      </h3>
    </div>

    <%= form_tag devtools_feature_flag_history_path(feature_flag), method: :get, "data-autosearch-results-container": "history-list" do %>
      <div class="Box-body">
        <div class="auto-search-group">
          <input type="text"
            name="history_actor"
            aria-label="Filter by user login (case sensitive)"
            class="form-control width-full auto-search-input"
            placeholder="Filter by user login (case sensitive)..."
            value="<%= params[:history_actor] %>"
            data-throttled-autosubmit>
          <%= render Primer::Beta::Octicon.new(icon: "search", style: "top: 8px;") %>
          <div class="spinner">
            <%= render(Primer::Beta::Spinner.new(size: :small, style: "top: 8px;")) %>
          </div>
        </div>
      </div>

      <div id="history-list">
        <include-fragment src="<%= devtools_feature_flag_history_path(feature_flag, history_actor: params[:history_actor]) %>">
          <div class="text-center p-3 mt-2">
            <%= image_tag "spinners/octocat-spinner-64.gif", size: "32x32", alt: "" %>
            <p class="color-fg-muted my-2 mb-0">Loading history...</p>
          </div>
        </include-fragment>
      </div>
    <% end %>
  </div>

  <% if celebrate %>
    <confetti-container></confetti-container>
  <% end %>
<% end %>
