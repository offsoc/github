<dependabot-alert-rule-form>
  <%= primer_form_with(
    model: @rule,
    url: form_url,
    method: request_type,
    ) do |f| %>

    <% if @rule.errors.any? %>
      <%= render(Primer::Alpha::Banner.new(scheme: :danger, my: 2, description: attribute_names_with_errors, test_selector: "rule-form-error-message")) do %>
        The following inputs have errors:
      <% end %>
    <% end %>

    <%= render Primer::Box.new(mb: 3, test_selector: "dependabot-alert-rule-name") do %>
      <%= render DependabotAlerts::RuleNameForm.new(f) %>
    <% end %>

    <%= render Primer::Box.new(mb: 4) do %>
      <%= render Primer::Alpha::FormControl.new(
        label: "State",
        validation_message: enforcement_validation_message,
        full_width: true,
        test_selector: "dependabot-alert-enforcement-options-menu"
      ) do |component| %>
        <%= component.with_input do %>
          <%= render DependabotAlerts::RuleEnforcementOptionsMenuComponent.new(form: f, target: enablement_target, rule: @rule) %>
        <% end %>
      <% end %>
    <% end %>

    <%= render Primer::Box.new(mb: 3) do %>
      <%= render Primer::Beta::Heading.new(tag: :h3, font_size: 5, text: :bold) do %>
        Target alerts
      <% end %>
      <%= render Primer::Experimental::QueryBuilder.new(
        id: "rule-criteria-input-combobox",
        input_name: "rule_criteria",
        label_text: "Target alerts",
        visually_hide_label: true,
        placeholder: "Add rule metadata",
        form_wrap: false,
        form_action_url: "",
        value: @rule_criteria,
        test_selector: "dependabot-alert-rule-criteria-bar",
        mt: 1,
        "data-suggestable-cwes": @dependabot_alert_cwe_suggestions,
        "data-suggestable-scopes": @dependabot_alert_scope_suggestions,
        "data-suggestable-severities": @dependabot_alert_severity_suggestions,
        "data-suggestable-packages-path": @dependabot_alert_package_suggestions_path,
        "data-suggestable-manifests-path": @dependabot_alert_manifest_suggestions_path,
        "data-suggestable-ecosystems-path": @dependabot_alert_ecosystem_suggestions_path,
        "data-suggestable-cve-ids-path": @dependabot_alert_cve_id_suggestions_path,
        "data-suggestable-ghsa-ids-path": @dependabot_alert_ghsa_id_suggestions_path,
        invalid: alert_criteria_invalid?,
        validation_message: alert_criteria_validation_message,
        ) do |component| %>
        <% component.with_input(data: { hotkey: @local_search_hotkey } ) %>
        <% component.with_leading_visual_icon(icon: :search) %>
      <% end %>
      <p class="text-small color-fg-muted pr-2 m-0">
        Rules will be applied for alerts matching all included metadata.
      </p>
    <% end %>

    <%= render Primer::Alpha::FormControl.new(
      label: "Rules",
      validation_message: rules_validation_message,
      full_width: true,
      test_selector: "rules-form-control",
      ) do |component| %>
      <%= component.with_input do %>
        <span class="text-small color-fg-muted">Select one or more rules to apply to matching alerts.</span>
        <%= render DependabotAlerts::RulesForm.new(f, rule: @rule) %>
      <% end %>
    <% end %>

    <div class="d-flex mt-4">
      <%= render Primer::Beta::Button.new(
        scheme: :primary,
        type: :submit,
        display: :inline,
        mr: 2,
        "aria-label": submit_button_label,
        test_selector: "rule_form_button") do %>
        <%= submit_button_text %>
      <% end %>

      <% unless new_rule_page? %>
        <%= render Primer::Beta::Button.new(
          tag: :a,
          href: org_view? ? settings_org_dependabot_rules_path : dependabot_rules_path,
          name: :rule_form_cancel_button,
          scheme: :secondary,
          mr: 2,
          "aria-label": "Cancel"
          ).with_content("Cancel")
        %>
      <% end %>
    </div>
  <% end %>
</dependabot-alert-rule-form>
