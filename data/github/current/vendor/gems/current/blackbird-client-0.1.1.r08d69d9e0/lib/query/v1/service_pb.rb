# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: query/v1/service.proto

require 'google/protobuf'

require 'query/v1/git_document_match_pb'
require 'query/v1/search_result_pb'
require 'query/v1/facets_pb'
require 'query/v1/shard_pb'
require 'query/v1/symbol_pb'
require 'google/protobuf/timestamp_pb'
require 'google/protobuf/duration_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("query/v1/service.proto", :syntax => :proto3) do
    add_message "blackbirdmw.query.v1.QueryRequest" do
      optional :query, :string, 1
      optional :query_parser, :enum, 14, "blackbirdmw.query.v1.QueryParser"
      optional :document_limit, :uint32, 3
      optional :document_location_limit, :uint32, 4
      optional :scoping_query, :string, 6
      optional :actor, :message, 7, "blackbirdmw.query.v1.Actor"
      optional :epoch_id, :uint32, 9
      repeated :custom_scopes, :message, 10, "blackbirdmw.query.v1.CustomScope"
      optional :snippet_options, :message, 11, "blackbirdmw.query.v1.SnippetOptions"
      optional :query_type, :enum, 12, "blackbirdmw.query.v1.QueryType"
      optional :request_timeout, :message, 13, "google.protobuf.Duration"
      optional :query_source, :enum, 15, "blackbirdmw.query.v1.QuerySource"
      optional :page_number, :uint32, 16
      optional :results_per_page, :uint32, 17
      map :experiments, :string, :string, 18
      optional :return_enclosing_symbols, :bool, 19
      optional :tenant, :message, 20, "blackbirdmw.query.v1.Tenant"
    end
    add_message "blackbirdmw.query.v1.QueryResponse" do
      repeated :documents, :message, 1, "blackbirdmw.query.v1.GitDocumentMatch"
      repeated :query_errors, :message, 3, "blackbirdmw.query.v1.QueryError"
      repeated :protected_organization_ids, :int64, 4
      optional :metadata, :message, 5, "blackbirdmw.query.v1.Metadata"
      optional :serving_offset_queried, :int64, 6
      optional :count_mode, :enum, 7, "blackbirdmw.query.v1.CountMode"
      optional :result_count, :uint64, 8
    end
    add_message "blackbirdmw.query.v1.CountRequest" do
      optional :query, :string, 1
      optional :scoping_query, :string, 6
      optional :actor, :message, 7, "blackbirdmw.query.v1.Actor"
      optional :epoch_id, :uint32, 9
      repeated :custom_scopes, :message, 10, "blackbirdmw.query.v1.CustomScope"
      optional :request_timeout, :message, 11, "google.protobuf.Duration"
      map :experiments, :string, :string, 12
      optional :tenant, :message, 13, "blackbirdmw.query.v1.Tenant"
    end
    add_message "blackbirdmw.query.v1.CountResponse" do
      optional :count, :uint32, 1
      optional :mode, :enum, 2, "blackbirdmw.query.v1.CountMode"
      repeated :shard_metadata, :message, 3, "blackbirdmw.query.v1.ShardMetadata"
      repeated :query_errors, :message, 4, "blackbirdmw.query.v1.QueryError"
      repeated :protected_organization_ids, :int64, 5
      optional :metadata, :message, 6, "blackbirdmw.query.v1.Metadata"
      optional :serving_offset_queried, :int64, 7
    end
    add_message "blackbirdmw.query.v1.FrontendQueryRequest" do
      optional :query, :string, 1
      optional :query_parser, :enum, 16, "blackbirdmw.query.v1.QueryParser"
      optional :document_limit, :uint32, 3
      optional :document_location_limit, :uint32, 4
      optional :scoping_query, :string, 6
      optional :actor, :message, 7, "blackbirdmw.query.v1.Actor"
      optional :page_token, :string, 9
      optional :page_number, :int32, 10
      optional :results_per_page, :int32, 11
      optional :sha_format, :enum, 12, "blackbirdmw.query.v1.SHAFormat"
      repeated :custom_scopes, :message, 13, "blackbirdmw.query.v1.CustomScope"
      optional :snippet_options, :message, 14, "blackbirdmw.query.v1.SnippetOptions"
      optional :request_timeout, :message, 15, "google.protobuf.Duration"
      map :experiments, :string, :string, 17
      optional :return_enclosing_symbols, :bool, 18
      optional :query_type, :enum, 19, "blackbirdmw.query.v1.QueryType"
      optional :query_source, :enum, 20, "blackbirdmw.query.v1.QuerySource"
      optional :tenant, :message, 21, "blackbirdmw.query.v1.Tenant"
    end
    add_message "blackbirdmw.query.v1.FrontendQueryResponse" do
      repeated :results, :message, 1, "blackbirdmw.query.v1.SearchResult"
      repeated :query_errors, :message, 2, "blackbirdmw.query.v1.QueryError"
      optional :page, :uint32, 3
      optional :page_count, :uint32, 4
      optional :result_count, :uint32, 5
      repeated :facets, :message, 6, "blackbirdmw.query.v1.Facet"
      repeated :protected_organization_ids, :int64, 7
      optional :metadata, :message, 9, "blackbirdmw.query.v1.Metadata"
    end
    add_message "blackbirdmw.query.v1.LegacyQueryRequest" do
      optional :query, :string, 1
      optional :document_limit, :uint32, 2
      optional :document_location_limit, :uint32, 3
      optional :actor, :message, 4, "blackbirdmw.query.v1.Actor"
      optional :page_number, :int32, 6
      optional :results_per_page, :int32, 7
      optional :snippet_options, :message, 8, "blackbirdmw.query.v1.SnippetOptions"
      optional :request_timeout, :message, 9, "google.protobuf.Duration"
      map :experiments, :string, :string, 10
      optional :tenant, :message, 11, "blackbirdmw.query.v1.Tenant"
    end
    add_message "blackbirdmw.query.v1.LegacyQueryResponse" do
      repeated :results, :message, 1, "blackbirdmw.query.v1.SearchResult"
      repeated :query_errors, :message, 2, "blackbirdmw.query.v1.QueryError"
      optional :page, :uint32, 3
      optional :page_count, :uint32, 4
      optional :result_count, :uint32, 5
      optional :metadata, :message, 6, "blackbirdmw.query.v1.Metadata"
    end
    add_message "blackbirdmw.query.v1.CustomScope" do
      optional :name, :string, 1
      optional :query, :string, 2
    end
    add_message "blackbirdmw.query.v1.SnippetOptions" do
      optional :mode, :enum, 1, "blackbirdmw.query.v1.SnippetMode"
      optional :desired_width, :uint32, 2
      optional :high_density_snippet_max_lines, :uint32, 3
      optional :format, :enum, 4, "blackbirdmw.query.v1.SnippetFormat"
      optional :max_overflows, :uint32, 5
      optional :single_snippet_context_lines, :uint32, 6
      optional :double_snippet_context_lines, :uint32, 7
      optional :max_total_lines, :uint32, 8
      optional :max_tokens, :uint32, 9
    end
    add_message "blackbirdmw.query.v1.Metadata" do
      optional :cluster_name, :string, 1
      optional :corpus_name, :string, 2
      optional :query_ast, :string, 4
      optional :total_cost, :float, 5
      optional :retries, :uint32, 6
      optional :num_filtered_documents, :uint32, 7
      optional :satisfied, :bool, 8
      optional :limit_reached, :bool, 9
      optional :had_shard_failure, :bool, 10
      optional :is_failure, :bool, 11
      optional :timing, :message, 12, "blackbirdmw.query.v1.Timing"
      repeated :shards, :message, 13, "blackbirdmw.query.v1.ShardMetadata"
      optional :docs_returned, :uint32, 14
      optional :query_id, :string, 15
      map :experiments, :string, :string, 16
    end
    add_message "blackbirdmw.query.v1.Timing" do
      optional :overall, :message, 1, "google.protobuf.Duration"
      optional :pre_search, :message, 2, "google.protobuf.Duration"
      optional :context_preparation, :message, 6, "google.protobuf.Duration"
      optional :cluster_selection, :message, 7, "google.protobuf.Duration"
      optional :query_parsing, :message, 8, "google.protobuf.Duration"
      optional :query_rewriting, :message, 9, "google.protobuf.Duration"
      optional :query_linting, :message, 10, "google.protobuf.Duration"
      optional :search, :message, 3, "google.protobuf.Duration"
      optional :fetch_missing_content, :message, 5, "google.protobuf.Duration"
      optional :post_search, :message, 4, "google.protobuf.Duration"
    end
    add_message "blackbirdmw.query.v1.QueryError" do
      optional :type, :enum, 1, "blackbirdmw.query.v1.ErrorType"
      optional :message, :string, 2
      repeated :ranges, :message, 3, "blackbirdmw.query.v1.ErrorRange"
      optional :suggestion, :string, 4
      optional :missing_or_inaccessible_repo_org_nwo, :string, 5
    end
    add_message "blackbirdmw.query.v1.ErrorRange" do
      optional :start, :uint32, 1
      optional :end, :uint32, 2
    end
    add_message "blackbirdmw.query.v1.SuggestRequest" do
      optional :query, :string, 1
      optional :scoping_query, :string, 2
      optional :cursor_position, :uint32, 3
      optional :actor, :message, 5, "blackbirdmw.query.v1.Actor"
      repeated :custom_scopes, :message, 7, "blackbirdmw.query.v1.CustomScope"
      optional :request_timeout, :message, 8, "google.protobuf.Duration"
      map :experiments, :string, :string, 9
      optional :tenant, :message, 10, "blackbirdmw.query.v1.Tenant"
    end
    add_message "blackbirdmw.query.v1.SuggestResponse" do
      repeated :suggestions, :message, 1, "blackbirdmw.query.v1.Suggestion"
      repeated :query_errors, :message, 2, "blackbirdmw.query.v1.QueryError"
      optional :metadata, :message, 3, "blackbirdmw.query.v1.Metadata"
    end
    add_message "blackbirdmw.query.v1.Suggestion" do
      optional :kind, :enum, 1, "blackbirdmw.query.v1.SuggestionKind"
      optional :query, :string, 2
      optional :repository_nwo, :string, 3
      optional :language_id, :uint32, 4
      optional :path, :string, 6
      optional :repository_id, :uint32, 7
      optional :commit_sha, :string, 9
      optional :line_number, :uint32, 10
      optional :symbol, :message, 13, "blackbirdmw.query.v1.Symbol"
    end
    add_message "blackbirdmw.query.v1.RefreshAuthCachesRequest" do
      optional :actor, :message, 1, "blackbirdmw.query.v1.Actor"
    end
    add_message "blackbirdmw.query.v1.RefreshAuthCachesResponse" do
      optional :user_cache_expires_at, :message, 1, "google.protobuf.Timestamp"
    end
    add_message "blackbirdmw.query.v1.WarmCachesRequest" do
      optional :actor, :message, 1, "blackbirdmw.query.v1.Actor"
    end
    add_message "blackbirdmw.query.v1.WarmCachesResponse" do
      optional :user_cache_expires_at, :message, 1, "google.protobuf.Timestamp"
    end
    add_message "blackbirdmw.query.v1.Actor" do
      optional :actor_id, :uint32, 1
      optional :access_token, :string, 2
      optional :request_ip, :string, 3
      optional :access_token_expires, :int64, 4
      optional :session_id, :string, 5
      optional :access_token_kind, :string, 6
    end
    add_message "blackbirdmw.query.v1.Repository" do
      optional :id, :uint32, 1
      optional :owner_id, :uint32, 2
      optional :owner_login, :string, 3
      optional :name, :string, 4
      optional :is_public, :bool, 5
      optional :repo_score, :int32, 6
    end
    add_message "blackbirdmw.query.v1.SnapshotEntry" do
      optional :entry_id, :uint64, 1
      optional :serving_offset, :int64, 2
      optional :serving_ts, :message, 3, "google.protobuf.Timestamp"
      map :experiments, :string, :string, 4
    end
    add_message "blackbirdmw.query.v1.GetRepositoryRequest" do
      optional :actor, :message, 1, "blackbirdmw.query.v1.Actor"
      optional :nwo, :string, 2
      optional :tenant, :message, 20, "blackbirdmw.query.v1.Tenant"
    end
    add_message "blackbirdmw.query.v1.Corpus" do
      optional :cluster_name, :string, 1
      optional :corpus_name, :string, 2
      optional :epoch_id, :uint32, 3
      optional :serving_offset, :int64, 4
      optional :serving_ts, :message, 5, "google.protobuf.Timestamp"
    end
    add_message "blackbirdmw.query.v1.GetRepositoryResponse" do
      optional :repository, :message, 1, "blackbirdmw.query.v1.Repository"
      optional :serving_corpus, :message, 2, "blackbirdmw.query.v1.Corpus"
      repeated :snapshot_entries, :message, 3, "blackbirdmw.query.v1.SnapshotEntry"
    end
    add_message "blackbirdmw.query.v1.Tenant" do
      optional :tenant_id, :int64, 1
      optional :slug, :string, 2
      optional :shortcode, :string, 3
    end
    add_enum "blackbirdmw.query.v1.QueryParser" do
      value :QUERY_PARSER_UNKNOWN, 0
      value :QUERY_PARSER_BLACKBIRD_V0, 1
      value :QUERY_PARSER_GEYSER, 2
    end
    add_enum "blackbirdmw.query.v1.CountMode" do
      value :COUNT_MODE_EXACT, 0
      value :COUNT_MODE_APPROXIMATE, 1
      value :COUNT_MODE_LOWER_BOUND, 2
    end
    add_enum "blackbirdmw.query.v1.QueryType" do
      value :QUERY_TYPE_UNSPECIFIED, 0
      value :QUERY_TYPE_USER_QUERY, 1
      value :QUERY_TYPE_FIND_REFERENCES, 2
      value :QUERY_TYPE_FIND_DEFINITIONS, 3
      value :QUERY_TYPE_SIMILARITY, 4
    end
    add_enum "blackbirdmw.query.v1.QuerySource" do
      value :QUERY_SOURCE_UNSPECIFIED, 0
      value :QUERY_SOURCE_FRONTEND, 1
      value :QUERY_SOURCE_LEGACY_API, 2
      value :QUERY_SOURCE_PROBER, 3
      value :QUERY_SOURCE_COPILOT_API, 4
      value :QUERY_SOURCE_GRAPHQL_API, 5
      value :QUERY_SOURCE_COPILOT_IDE, 6
      value :QUERY_SOURCE_BING, 7
      value :QUERY_SOURCE_ALEPH, 8
    end
    add_enum "blackbirdmw.query.v1.SHAFormat" do
      value :SHA_FORMAT_INVALID, 0
      value :SHA_FORMAT_SHA1, 1
    end
    add_enum "blackbirdmw.query.v1.SnippetMode" do
      value :SNIPPET_MODE_DEFAULT, 0
      value :SNIPPET_MODE_CONTEXT, 1
      value :SNIPPET_MODE_HIGH_DENSITY, 2
      value :SNIPPET_MODE_AUTO, 3
      value :SNIPPET_MODE_UNIFIED, 4
      value :SNIPPET_MODE_RAW_MATCHES, 5
      value :SNIPPET_MODE_LLM, 6
    end
    add_enum "blackbirdmw.query.v1.ErrorType" do
      value :ERROR_TYPE_UNSPECIFIED, 0
      value :ERROR_TYPE_QUERY_PARSING_FATAL, 1
      value :ERROR_TYPE_QUERY_PARSING_WARNING, 2
      value :ERROR_TYPE_TIMEOUT, 3
      value :ERROR_TYPE_SEARCH_RESULTS_INCONSISTENT_WARNING, 4
      value :ERROR_TYPE_ACTOR_NOT_AUTHORIZED, 5
      value :ERROR_TYPE_SCOPE_UNSATISFIABLE, 6
      value :ERROR_TYPE_RESULTS_INCOMPLETE, 7
      value :ERROR_TYPE_MISSING_INACCESSIBLE_REPO_ORG, 8
      value :ERROR_TYPE_CODE_EMBEDDINGS_UNAVAILABLE, 9
      value :ERROR_TYPE_DOCS_EMBEDDINGS_UNAVAILABLE, 10
      value :ERROR_TYPE_PERMANENT_ERROR_SYSTEM_LIMIT, 11
      value :ERROR_TYPE_PERMANENT_ERROR_RETRIES_EXHAUSTED, 12
      value :ERROR_TYPE_PERMANENT_ERROR_INVALID_DEFAULT_REF, 13
      value :ERROR_TYPE_PERMANENT_ERROR_BAD_COMMIT, 14
    end
    add_enum "blackbirdmw.query.v1.SuggestionKind" do
      value :SUGGESTION_KIND_UNKNOWN, 0
      value :SUGGESTION_KIND_QUERY, 1
      value :SUGGESTION_KIND_REPOSITORY, 2
      value :SUGGESTION_KIND_PATH, 3
      value :SUGGESTION_KIND_SYMBOL, 4
    end
  end
end

module Blackbird
  module Query
    module V1
      QueryRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.QueryRequest").msgclass
      QueryResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.QueryResponse").msgclass
      CountRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.CountRequest").msgclass
      CountResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.CountResponse").msgclass
      FrontendQueryRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.FrontendQueryRequest").msgclass
      FrontendQueryResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.FrontendQueryResponse").msgclass
      LegacyQueryRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.LegacyQueryRequest").msgclass
      LegacyQueryResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.LegacyQueryResponse").msgclass
      CustomScope = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.CustomScope").msgclass
      SnippetOptions = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.SnippetOptions").msgclass
      Metadata = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.Metadata").msgclass
      Timing = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.Timing").msgclass
      QueryError = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.QueryError").msgclass
      ErrorRange = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.ErrorRange").msgclass
      SuggestRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.SuggestRequest").msgclass
      SuggestResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.SuggestResponse").msgclass
      Suggestion = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.Suggestion").msgclass
      RefreshAuthCachesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.RefreshAuthCachesRequest").msgclass
      RefreshAuthCachesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.RefreshAuthCachesResponse").msgclass
      WarmCachesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.WarmCachesRequest").msgclass
      WarmCachesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.WarmCachesResponse").msgclass
      Actor = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.Actor").msgclass
      Repository = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.Repository").msgclass
      SnapshotEntry = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.SnapshotEntry").msgclass
      GetRepositoryRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.GetRepositoryRequest").msgclass
      Corpus = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.Corpus").msgclass
      GetRepositoryResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.GetRepositoryResponse").msgclass
      Tenant = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.Tenant").msgclass
      QueryParser = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.QueryParser").enummodule
      CountMode = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.CountMode").enummodule
      QueryType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.QueryType").enummodule
      QuerySource = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.QuerySource").enummodule
      SHAFormat = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.SHAFormat").enummodule
      SnippetMode = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.SnippetMode").enummodule
      ErrorType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.ErrorType").enummodule
      SuggestionKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbirdmw.query.v1.SuggestionKind").enummodule
    end
  end
end
