<%- if telegraf_enabled? -%>
[global_tags]
[agent]
  interval = "30s"
  round_interval = true
  # lowered to avoid datadog errors
  metric_batch_size = 500
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = "0s"
  hostname = ""
  omit_hostname = false
<% if secret_value("telegraf", "datadog-api-key") %>
[[outputs.datadog]]
# this value is set with 'ghe-config secrets.telegraf.datadog-api-key'
  apikey = "<%= secret_value("telegraf", "datadog-api-key") %>"
  compression = "zlib"
<% end %>
[[outputs.prometheus_client]]
  listen = ":9273"
[[inputs.socket_listener]]
  service_address = "udp://127.0.0.1:25826"
  data_format = "collectd"
  collectd_typesdb = ["/usr/share/collectd/types.db"]
[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false
  core_tags = false
[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]
[[inputs.diskio]]
[[inputs.mem]]
[[inputs.net]]
[[inputs.netstat]]
[[inputs.processes]]
[[inputs.swap]]
[[inputs.system]]
[[inputs.statsd]]
  protocol = "udp"
  max_tcp_connections = 250
  tcp_keep_alive = false
  service_address = ":8126"
  delete_gauges = true
  delete_counters = true
  delete_sets = true
  delete_timings = true
  percentiles = [50.0, 90.0, 99.0, 99.9, 99.95, 100.0]
  metric_separator = "_"
  datadog_extensions = true
  datadog_distributions = true
  allowed_pending_messages = 10000
  percentile_limit = 1000

[[inputs.procstat]]
  pattern = "^unicorn"
  pid_tag = false
  prefix = "pgrep"
  process_name = "unicorn"

[[inputs.procstat]]
  pattern = "^aqueduct?-"
  pid_tag = false
  prefix = "pgrep"
  process_name = "aqueduct"

[[inputs.procstat]]
  pattern = "mysqld"
  process_name = "mysqld"
  pid_tag = false
  prefix = "pgrep"

[[inputs.procstat]]
  pattern = "grafana"
  process_name = "grafana"
  pid_tag = false
  prefix = "pgrep"

[[inputs.procstat]]
  pattern = "haproxy"
  process_name = "haproxy"
  prefix = "pgrep"
  pid_tag = false

[[inputs.procstat]]
  pattern = "kafka-lite"
  process_name = "kafka-lite"
  prefix = "pgrep"
  pid_tag = false

[[inputs.procstat]]
  pattern = "enterprise-stream-processors"
  process_name = "stream-processors"
  prefix = "pgrep"
  pid_tag = false

[[inputs.procstat]]
  pattern = "^resqued?-"
  process_name = "resque"
  prefix = "pgrep"
  pid_tag = false

[[inputs.procstat]]
  pattern = "collectd"
  process_name = "collectd"
  prefix = "pgrep"
  pid_tag = false

<% if actions_enabled? %>
# Actions
[[inputs.procstat]]
  pattern = "dotnet"
  process_name = "actions"
  prefix = "pgrep"
  pid_tag = false

[[inputs.procstat]]
  pattern = "/opt/mssql/bin/sqlservr"
  pid_tag = false
  prefix = "pgrep"
  process_name = "mssql"
# END Actions

<% end %>
[[inputs.procstat]]
  pattern = "org\\.elasticsearch\\.bootstrap\\.Elasticsearch"
  process_name = "elasticsearch"
  prefix = "pgrep"
  pid_tag = false

[[inputs.procstat]]
  pattern = "gitrpcd"
  pid_tag = false
  prefix = "pgrep"
  process_name = "gitrpcd"

[[inputs.procstat]]
  pattern = "spokesd"
  pid_tag = false
  prefix = "pgrep"
  process_name = "spokesd"

[[inputs.procstat]]
  pattern = "spokes-sweeper"
  pid_tag = false
  prefix = "pgrep"
  process_name = "spokes-sweeper"

[[inputs.procstat]]
  pattern = "minio"
  pid_tag = false
  prefix = "pgrep"
  process_name = "minio"

[[inputs.procstat]]
  pattern = "codeload"
  pid_tag = false
  prefix = "pgrep"
  process_name = "codeload"

[[inputs.procstat]]
  pattern = "alambic"
  pid_tag = false
  prefix = "pgrep"
  process_name = "alambic"

[[inputs.procstat]]
  pattern = "aqueduct-lite"
  pid_tag = false
  prefix = "pgrep"
  process_name = "aqueduct-lite"

[[inputs.procstat]]
  pattern = "memcached"
  pid_tag = false
  prefix = "pgrep"
  process_name = "memcached"

[[inputs.procstat]]
  pattern = "alive-local"
  pid_tag = false
  prefix = "pgrep"
  process_name = "alive-local"

[[inputs.procstat]]
  pattern = "nomad agent"
  pid_tag = false
  prefix = "pgrep"
  process_name = "nomad"

[[inputs.procstat]]
  pattern = "bin/gitmon"
  pid_tag = false
  prefix = "pgrep"
  process_name = "governor"

[[inputs.procstat]]
  pattern = "wsgi:application"
  pid_tag = false
  prefix = "pgrep"
  process_name = "graphite"

<% if code_scanning_enabled? %>
[[inputs.procstat]]
  pattern = "turboghas"
  pid_tag = false
  prefix = "pgrep"
  process_name = "turboghas"

<% end %>
[[inputs.procstat]]
  pattern = "^puma:? "
  pid_tag = false
  prefix = "pgrep"
  process_name = "puma"

[[inputs.procstat]]
  pattern = "git-daemon"
  pid_tag = false
  prefix = "pgrep"
  process_name = "git-daemon"

[[inputs.procstat]]
  pattern = "^git[: ]"
  pid_tag = false
  prefix = "pgrep"
  process_name = "git"

[[inputs.procstat]]
  pattern = "^babeld "
  pid_tag = false
  prefix = "pgrep"
  process_name = "babeld"

[[inputs.procstat]]
  pattern = "consul agent"
  pid_tag = false
  prefix = "pgrep"
  process_name = "consul"

[[aggregators.basicstats]]
  period = "30s"
  stats = ["sum"]
  namepass = ["procstat"]

  [aggregators.basicstats.tags]
  aggregated = "true"

[[inputs.internal]]
# output metrics about telegraf itself
# omit go garbage collection metrics
  collect_memstats = false
<% if enabled_service?("mysql") %>
# enable if a mysql service is running
[[inputs.mysql]]
  # mysql password pulled from the ghe-config secrets.mysql value
  servers = ["github:<%= secret_value('mysql') %>@tcp(127.0.0.1:3306)/"]
  metric_version = 2
<% end %>
<%- end -%>

[[inputs.nginx]]
  urls = ["http://127.0.0.1:8082"]
  insecure_skip_verify = true

[[inputs.haproxy]]
  servers = ["http://127.0.0.1:8789"]
  insecure_skip_verify = true
  fieldpass = ["req_rate","rate","session","ereq","dreq","http_response.2xx","http_response.3xx","http_response.4xx","http_response.5xx","bin","bout","rtime","econ","dresp","eresp","qcur","qtime","wredis","wretr"]
