# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PlatformTypes::User`.
# Please instead update this file by running `bin/tapioca dsl PlatformTypes::User`.

class PlatformTypes::User < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(T.nilable(PlatformTypes::Achievement)) }
  def achievement; end

  sig { returns(T::Boolean) }
  def achievement?; end

  sig { returns(PlatformTypes::AchievementConnection) }
  def achievements; end

  sig { returns(T::Boolean) }
  def achievements?; end

  sig { returns(T::Boolean) }
  def action_invocation_blocked; end

  sig { returns(T::Boolean) }
  def action_invocation_blocked?; end

  sig { returns(T.nilable(PlatformTypes::ActionsStatus)) }
  def actions_status; end

  sig { returns(T::Boolean) }
  def actions_status?; end

  sig { returns(T.nilable(PlatformTypes::MarketplaceListingPlan)) }
  def active_listing_plan; end

  sig { returns(T::Boolean) }
  def active_listing_plan?; end

  sig { returns(T.nilable(PlatformTypes::Feed)) }
  def activity_feed; end

  sig { returns(T::Boolean) }
  def activity_feed?; end

  sig { returns(T::Boolean) }
  def activity_overview_enabled; end

  sig { returns(T::Boolean) }
  def activity_overview_enabled?; end

  sig { returns(PlatformTypes::RepositoryActionConnection) }
  def adminable_actions; end

  sig { returns(T::Boolean) }
  def adminable_actions?; end

  sig { returns(PlatformTypes::AppConnection) }
  def adminable_apps; end

  sig { returns(T::Boolean) }
  def adminable_apps?; end

  sig { returns(PlatformTypes::OauthApplicationConnection) }
  def adminable_oauth_applications; end

  sig { returns(T::Boolean) }
  def adminable_oauth_applications?; end

  sig { returns(PlatformTypes::AdvisoryCreditConnection) }
  def advisory_credits; end

  sig { returns(T::Boolean) }
  def advisory_credits?; end

  sig { returns(PlatformTypes::ProjectV2Connection) }
  def all_projects_v2; end

  sig { returns(T::Boolean) }
  def all_projects_v2?; end

  sig { returns(T.nilable(String)) }
  def analytics_tracking_id; end

  sig { returns(T::Boolean) }
  def analytics_tracking_id?; end

  sig { returns(T::Boolean) }
  def any_pinnable_items; end

  sig { returns(T::Boolean) }
  def any_pinnable_items?; end

  sig { returns(PlatformTypes::AuthenticationRecordConnection) }
  def authentication_records; end

  sig { returns(T::Boolean) }
  def authentication_records?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def avatar_url; end

  sig { returns(T::Boolean) }
  def avatar_url?; end

  sig { returns(T.nilable(PlatformTypes::AvatarConnection)) }
  def avatars; end

  sig { returns(T::Boolean) }
  def avatars?; end

  sig { returns(T.nilable(PlatformTypes::BillingTransactionConnection)) }
  def billing_transactions; end

  sig { returns(T::Boolean) }
  def billing_transactions?; end

  sig { returns(T.nilable(String)) }
  def bio; end

  sig { returns(T::Boolean) }
  def bio?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def bio_html; end

  sig { returns(T::Boolean) }
  def bio_html?; end

  sig { returns(T::Boolean) }
  def can_admin_marketplace_listings; end

  sig { returns(T::Boolean) }
  def can_admin_marketplace_listings?; end

  sig { returns(T::Boolean) }
  def can_create_lists; end

  sig { returns(T::Boolean) }
  def can_create_lists?; end

  sig { returns(T::Boolean) }
  def can_have_pro_badge; end

  sig { returns(T::Boolean) }
  def can_have_pro_badge?; end

  sig { returns(T::Boolean) }
  def can_receive_organization_emails_when_notifications_restricted; end

  sig { returns(T::Boolean) }
  def can_receive_organization_emails_when_notifications_restricted?; end

  sig { returns(Integer) }
  def collaborators_count; end

  sig { returns(T::Boolean) }
  def collaborators_count?; end

  sig { returns(T.nilable(String)) }
  def color_mode; end

  sig { returns(T::Boolean) }
  def color_mode?; end

  sig { returns(PlatformTypes::CommitCommentConnection) }
  def commit_comments; end

  sig { returns(T::Boolean) }
  def commit_comments?; end

  sig { returns(T.nilable(String)) }
  def company; end

  sig { returns(T::Boolean) }
  def company?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def company_html; end

  sig { returns(T::Boolean) }
  def company_html?; end

  sig { returns(T.nilable(PlatformTypes::Repository)) }
  def configuration_repository; end

  sig { returns(T::Boolean) }
  def configuration_repository?; end

  sig { returns(PlatformTypes::ContributionsCollection) }
  def contributions_collection; end

  sig { returns(T::Boolean) }
  def contributions_collection?; end

  sig { returns(T.nilable(PlatformTypes::CopilotEndpoints)) }
  def copilot_endpoints; end

  sig { returns(T::Boolean) }
  def copilot_endpoints?; end

  sig { returns(T.nilable(String)) }
  def copilot_license_type; end

  sig { returns(T::Boolean) }
  def copilot_license_type?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def created_at; end

  sig { returns(T::Boolean) }
  def created_at?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def current_credit; end

  sig { returns(T::Boolean) }
  def current_credit?; end

  sig { returns(T.nilable(String)) }
  def dark_theme; end

  sig { returns(T::Boolean) }
  def dark_theme?; end

  sig { returns(T.nilable(PlatformTypes::UserDashboard)) }
  def dashboard; end

  sig { returns(T::Boolean) }
  def dashboard?; end

  sig { returns(PlatformTypes::DashboardPinnableItemConnection) }
  def dashboard_pinned_items; end

  sig { returns(T::Boolean) }
  def dashboard_pinned_items?; end

  sig { returns(Integer) }
  def dashboard_pinned_items_remaining; end

  sig { returns(T::Boolean) }
  def dashboard_pinned_items_remaining?; end

  sig { returns(T.nilable(Integer)) }
  def database_id; end

  sig { returns(T::Boolean) }
  def database_id?; end

  sig { returns(T::Boolean) }
  def display_staff_badge; end

  sig { returns(T::Boolean) }
  def display_staff_badge?; end

  sig { returns(T.nilable(String)) }
  def duration; end

  sig { returns(T::Boolean) }
  def duration?; end

  sig { returns(String) }
  def email; end

  sig { returns(T::Boolean) }
  def email?; end

  sig { returns(T.nilable(String)) }
  def enterprise_managed_enterprise_id; end

  sig { returns(T::Boolean) }
  def enterprise_managed_enterprise_id?; end

  sig { returns(PlatformTypes::RepositoryConnection) }
  def enterprise_repositories; end

  sig { returns(T::Boolean) }
  def enterprise_repositories?; end

  sig { returns(T.nilable(PlatformTypes::EnterpriseConnection)) }
  def enterprises; end

  sig { returns(T::Boolean) }
  def enterprises?; end

  sig { returns(Integer) }
  def estimated_next_sponsors_payout_in_cents; end

  sig { returns(T::Boolean) }
  def estimated_next_sponsors_payout_in_cents?; end

  sig { returns(T.nilable(T::Array[PlatformTypes::FeatureFlagState])) }
  def feature_flags; end

  sig { returns(T::Boolean) }
  def feature_flags?; end

  sig { returns(PlatformTypes::FeedPostConnection) }
  def feed_posts; end

  sig { returns(T::Boolean) }
  def feed_posts?; end

  sig { returns(PlatformTypes::FollowerConnection) }
  def followers; end

  sig { returns(T::Boolean) }
  def followers?; end

  sig { returns(PlatformTypes::FollowingConnection) }
  def following; end

  sig { returns(T::Boolean) }
  def following?; end

  sig { returns(T.nilable(PlatformTypes::Gist)) }
  def gist; end

  sig { returns(T::Boolean) }
  def gist?; end

  sig { returns(PlatformTypes::GistCommentConnection) }
  def gist_comments; end

  sig { returns(T::Boolean) }
  def gist_comments?; end

  sig { returns(PlatformTypes::GistConnection) }
  def gists; end

  sig { returns(T::Boolean) }
  def gists?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def github_stars_profile_url; end

  sig { returns(T::Boolean) }
  def github_stars_profile_url?; end

  sig { returns(T::Boolean) }
  def has_apple_iap_subscription; end

  sig { returns(T::Boolean) }
  def has_apple_iap_subscription?; end

  sig { returns(T::Boolean) }
  def has_created_lists; end

  sig { returns(T::Boolean) }
  def has_created_lists?; end

  sig { returns(T.nilable(T::Boolean)) }
  def has_dismissed_notice; end

  sig { returns(T::Boolean) }
  def has_dismissed_notice?; end

  sig { returns(T::Boolean) }
  def has_email; end

  sig { returns(T::Boolean) }
  def has_email?; end

  sig { returns(T::Boolean) }
  def has_ever_contributed; end

  sig { returns(T::Boolean) }
  def has_ever_contributed?; end

  sig { returns(T::Boolean) }
  def has_sponsors_listing; end

  sig { returns(T::Boolean) }
  def has_sponsors_listing?; end

  sig { returns(T.nilable(T::Boolean)) }
  def has_two_factor_authentication_enabled; end

  sig { returns(T::Boolean) }
  def has_two_factor_authentication_enabled?; end

  sig { returns(T::Boolean) }
  def has_unlimited_seats; end

  sig { returns(T::Boolean) }
  def has_unlimited_seats?; end

  sig { returns(PlatformTypes::Hovercard) }
  def hovercard; end

  sig { returns(T::Boolean) }
  def hovercard?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(T.nilable(PlatformTypes::RepositoryInteractionAbility)) }
  def interaction_ability; end

  sig { returns(T::Boolean) }
  def interaction_ability?; end

  sig { returns(T::Boolean) }
  def is_account_successor_for_viewer; end

  sig { returns(T::Boolean) }
  def is_account_successor_for_viewer?; end

  sig { returns(T::Boolean) }
  def is_actions_eligible; end

  sig { returns(T::Boolean) }
  def is_actions_eligible?; end

  sig { returns(T::Boolean) }
  def is_beta_feature_enabled; end

  sig { returns(T::Boolean) }
  def is_beta_feature_enabled?; end

  sig { returns(T::Boolean) }
  def is_blocked_by_viewer; end

  sig { returns(T::Boolean) }
  def is_blocked_by_viewer?; end

  sig { returns(T::Boolean) }
  def is_bounty_hunter; end

  sig { returns(T::Boolean) }
  def is_bounty_hunter?; end

  sig { returns(T::Boolean) }
  def is_campus_expert; end

  sig { returns(T::Boolean) }
  def is_campus_expert?; end

  sig { returns(T::Boolean) }
  def is_copilot_dotcom_chat_enabled; end

  sig { returns(T::Boolean) }
  def is_copilot_dotcom_chat_enabled?; end

  sig { returns(T::Boolean) }
  def is_copilot_mobile_chat_enabled; end

  sig { returns(T::Boolean) }
  def is_copilot_mobile_chat_enabled?; end

  sig { returns(T::Boolean) }
  def is_developer_program_member; end

  sig { returns(T::Boolean) }
  def is_developer_program_member?; end

  sig { returns(T::Boolean) }
  def is_employee; end

  sig { returns(T::Boolean) }
  def is_employee?; end

  sig { returns(T::Boolean) }
  def is_enterprise_managed; end

  sig { returns(T::Boolean) }
  def is_enterprise_managed?; end

  sig { returns(T.nilable(T::Boolean)) }
  def is_enterprise_managed_user; end

  sig { returns(T::Boolean) }
  def is_enterprise_managed_user?; end

  sig { returns(T::Boolean) }
  def is_feature_enabled; end

  sig { returns(T::Boolean) }
  def is_feature_enabled?; end

  sig { returns(T::Boolean) }
  def is_following_viewer; end

  sig { returns(T::Boolean) }
  def is_following_viewer?; end

  sig { returns(T::Boolean) }
  def is_github_star; end

  sig { returns(T::Boolean) }
  def is_github_star?; end

  sig { returns(T::Boolean) }
  def is_hammy; end

  sig { returns(T::Boolean) }
  def is_hammy?; end

  sig { returns(T::Boolean) }
  def is_hireable; end

  sig { returns(T::Boolean) }
  def is_hireable?; end

  sig { returns(T::Boolean) }
  def is_invoiced; end

  sig { returns(T::Boolean) }
  def is_invoiced?; end

  sig { returns(T::Boolean) }
  def is_large_bot_account; end

  sig { returns(T::Boolean) }
  def is_large_bot_account?; end

  sig { returns(T::Boolean) }
  def is_large_scale_contributor; end

  sig { returns(T::Boolean) }
  def is_large_scale_contributor?; end

  sig { returns(T::Boolean) }
  def is_org_prerelease_agreement_signed; end

  sig { returns(T::Boolean) }
  def is_org_prerelease_agreement_signed?; end

  sig { returns(T::Boolean) }
  def is_prerelease_agreement_signed; end

  sig { returns(T::Boolean) }
  def is_prerelease_agreement_signed?; end

  sig { returns(T::Boolean) }
  def is_primary_email_role_public; end

  sig { returns(T::Boolean) }
  def is_primary_email_role_public?; end

  sig { returns(T.nilable(T::Boolean)) }
  def is_pro_plan; end

  sig { returns(T::Boolean) }
  def is_pro_plan?; end

  sig { returns(T::Boolean) }
  def is_site_admin; end

  sig { returns(T::Boolean) }
  def is_site_admin?; end

  sig { returns(T::Boolean) }
  def is_spammy; end

  sig { returns(T::Boolean) }
  def is_spammy?; end

  sig { returns(T::Boolean) }
  def is_sponsored_by; end

  sig { returns(T::Boolean) }
  def is_sponsored_by?; end

  sig { returns(T::Boolean) }
  def is_sponsoring_viewer; end

  sig { returns(T::Boolean) }
  def is_sponsoring_viewer?; end

  sig { returns(T::Boolean) }
  def is_storage_allowed; end

  sig { returns(T::Boolean) }
  def is_storage_allowed?; end

  sig { returns(T::Boolean) }
  def is_usage_allowed; end

  sig { returns(T::Boolean) }
  def is_usage_allowed?; end

  sig { returns(T::Boolean) }
  def is_viewer; end

  sig { returns(T::Boolean) }
  def is_viewer?; end

  sig { returns(PlatformTypes::IssueCommentConnection) }
  def issue_comments; end

  sig { returns(T::Boolean) }
  def issue_comments?; end

  sig { returns(PlatformTypes::IssueConnection) }
  def issues; end

  sig { returns(T::Boolean) }
  def issues?; end

  sig { returns(PlatformTypes::IssueOrPullRequestConnection) }
  def issues_and_pull_requests; end

  sig { returns(T::Boolean) }
  def issues_and_pull_requests?; end

  sig { returns(PlatformTypes::ProfileItemShowcase) }
  def item_showcase; end

  sig { returns(T::Boolean) }
  def item_showcase?; end

  sig { returns(T.nilable(String)) }
  def ldap_dn; end

  sig { returns(T::Boolean) }
  def ldap_dn?; end

  sig { returns(PlatformTypes::SponsorAndLifetimeValueConnection) }
  def lifetime_received_sponsorship_values; end

  sig { returns(T::Boolean) }
  def lifetime_received_sponsorship_values?; end

  sig { returns(T.nilable(String)) }
  def light_theme; end

  sig { returns(T::Boolean) }
  def light_theme?; end

  sig { returns(PlatformTypes::UserListConnection) }
  def lists; end

  sig { returns(T::Boolean) }
  def lists?; end

  sig { returns(T.nilable(String)) }
  def location; end

  sig { returns(T::Boolean) }
  def location?; end

  sig { returns(String) }
  def login; end

  sig { returns(T::Boolean) }
  def login?; end

  sig { returns(PlatformTypes::SubscriptionItemConnection) }
  def marketplace_subscriptions; end

  sig { returns(T::Boolean) }
  def marketplace_subscriptions?; end

  sig { returns(T::Array[PlatformTypes::Organization]) }
  def member_organizations; end

  sig { returns(T::Boolean) }
  def member_organizations?; end

  sig { returns(T.nilable(PlatformTypes::MobileAuthStatus)) }
  def mobile_auth_status; end

  sig { returns(T::Boolean) }
  def mobile_auth_status?; end

  sig { returns(PlatformTypes::MobilePushNotificationScheduleConnection) }
  def mobile_push_notification_schedules; end

  sig { returns(T::Boolean) }
  def mobile_push_notification_schedules?; end

  sig { returns(T.nilable(PlatformTypes::MobilePushNotificationSettings)) }
  def mobile_push_notification_settings; end

  sig { returns(T::Boolean) }
  def mobile_push_notification_settings?; end

  sig { returns(String) }
  def mobile_time_zone; end

  sig { returns(T::Boolean) }
  def mobile_time_zone?; end

  sig { returns(Integer) }
  def monthly_estimated_sponsors_income_in_cents; end

  sig { returns(T::Boolean) }
  def monthly_estimated_sponsors_income_in_cents?; end

  sig { returns(T.nilable(String)) }
  def name; end

  sig { returns(T::Boolean) }
  def name?; end

  sig { returns(T::Boolean) }
  def no_verified_email; end

  sig { returns(T::Boolean) }
  def no_verified_email?; end

  sig { returns(PlatformTypes::NotificationFilterConnection) }
  def notification_filters; end

  sig { returns(T::Boolean) }
  def notification_filters?; end

  sig { returns(PlatformTypes::NotificationListWithThreadCountConnection) }
  def notification_lists_with_thread_count; end

  sig { returns(T::Boolean) }
  def notification_lists_with_thread_count?; end

  sig { returns(T::Array[PlatformTypes::RepositoryNotificationCounts]) }
  def notification_repositories; end

  sig { returns(T::Boolean) }
  def notification_repositories?; end

  sig { returns(T.nilable(PlatformTypes::NotificationSettings)) }
  def notification_settings; end

  sig { returns(T::Boolean) }
  def notification_settings?; end

  sig { returns(PlatformTypes::NotificationThreadConnection) }
  def notification_threads; end

  sig { returns(T::Boolean) }
  def notification_threads?; end

  sig { returns(PlatformTypes::NotificationThreadConnection) }
  def notifications; end

  sig { returns(T::Boolean) }
  def notifications?; end

  sig { returns(T.nilable(PlatformTypes::OrcidRecord)) }
  def orcid_record; end

  sig { returns(T::Boolean) }
  def orcid_record?; end

  sig { returns(T.nilable(PlatformTypes::MarketplaceOrderPreview)) }
  def order_preview; end

  sig { returns(T::Boolean) }
  def order_preview?; end

  sig { returns(PlatformTypes::MarketplaceOrderPreviewConnection) }
  def order_previews; end

  sig { returns(T::Boolean) }
  def order_previews?; end

  sig { returns(T.nilable(PlatformTypes::Organization)) }
  def organization; end

  sig { returns(T::Boolean) }
  def organization?; end

  sig { returns(T::Array[String]) }
  def organization_verified_domain_emails; end

  sig { returns(T::Boolean) }
  def organization_verified_domain_emails?; end

  sig { returns(PlatformTypes::OrganizationConnection) }
  def organizations; end

  sig { returns(T::Boolean) }
  def organizations?; end

  sig { returns(PlatformTypes::OrganizationConnection) }
  def organizations_contributed_to; end

  sig { returns(T::Boolean) }
  def organizations_contributed_to?; end

  sig { returns(T.nilable(PlatformTypes::Organization)) }
  def owned_organization; end

  sig { returns(T::Boolean) }
  def owned_organization?; end

  sig { returns(PlatformTypes::OrganizationConnection) }
  def owned_organizations; end

  sig { returns(T::Boolean) }
  def owned_organizations?; end

  sig { returns(T.nilable(PlatformTypes::Package)) }
  def package; end

  sig { returns(T::Boolean) }
  def package?; end

  sig { returns(T.nilable(PlatformTypes::PackageVersion)) }
  def package_version; end

  sig { returns(T::Boolean) }
  def package_version?; end

  sig { returns(PlatformTypes::PackageConnection) }
  def packages; end

  sig { returns(T::Boolean) }
  def packages?; end

  sig { returns(PlatformTypes::PackageConnection) }
  def packages_for_query; end

  sig { returns(T::Boolean) }
  def packages_for_query?; end

  sig { returns(T.nilable(PlatformTypes::PaymentMethod)) }
  def payment_method; end

  sig { returns(T::Boolean) }
  def payment_method?; end

  sig { returns(PlatformTypes::SubscriptionItemConnection) }
  def pending_marketplace_installations; end

  sig { returns(T::Boolean) }
  def pending_marketplace_installations?; end

  sig { returns(PlatformTypes::PinnableItemConnection) }
  def pinnable_items; end

  sig { returns(T::Boolean) }
  def pinnable_items?; end

  sig { returns(PlatformTypes::PinnableItemConnection) }
  def pinned_items; end

  sig { returns(T::Boolean) }
  def pinned_items?; end

  sig { returns(Integer) }
  def pinned_items_remaining; end

  sig { returns(T::Boolean) }
  def pinned_items_remaining?; end

  sig { returns(T.nilable(PlatformTypes::Plan)) }
  def plan; end

  sig { returns(T::Boolean) }
  def plan?; end

  sig { returns(Integer) }
  def plan_limit; end

  sig { returns(T::Boolean) }
  def plan_limit?; end

  sig { returns(T::Boolean) }
  def plan_supports; end

  sig { returns(T::Boolean) }
  def plan_supports?; end

  sig { returns(T::Array[String]) }
  def possible_profile_emails; end

  sig { returns(T::Boolean) }
  def possible_profile_emails?; end

  sig { returns(T.nilable(String)) }
  def primary_email; end

  sig { returns(T::Boolean) }
  def primary_email?; end

  sig { returns(String) }
  def private_email; end

  sig { returns(T::Boolean) }
  def private_email?; end

  sig { returns(T::Boolean) }
  def private_profile; end

  sig { returns(T::Boolean) }
  def private_profile?; end

  sig { returns(T.nilable(PlatformTypes::RepositoryReadme)) }
  def profile_readme; end

  sig { returns(T::Boolean) }
  def profile_readme?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def profile_resource_path; end

  sig { returns(T::Boolean) }
  def profile_resource_path?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def profile_url; end

  sig { returns(T::Boolean) }
  def profile_url?; end

  sig { returns(T.nilable(PlatformTypes::Project)) }
  def project; end

  sig { returns(T::Boolean) }
  def project?; end

  sig { returns(T.nilable(PlatformTypes::ProjectNext)) }
  def project_next; end

  sig { returns(T::Boolean) }
  def project_next?; end

  sig { returns(T.nilable(PlatformTypes::ProjectV2)) }
  def project_v2; end

  sig { returns(T::Boolean) }
  def project_v2?; end

  sig { returns(PlatformTypes::ProjectConnection) }
  def projects; end

  sig { returns(T::Boolean) }
  def projects?; end

  sig { returns(PlatformTypes::ProjectNextConnection) }
  def projects_next; end

  sig { returns(T::Boolean) }
  def projects_next?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def projects_resource_path; end

  sig { returns(T::Boolean) }
  def projects_resource_path?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def projects_url; end

  sig { returns(T::Boolean) }
  def projects_url?; end

  sig { returns(PlatformTypes::ProjectV2Connection) }
  def projects_v2; end

  sig { returns(T::Boolean) }
  def projects_v2?; end

  sig { returns(PlatformTypes::ProjectV2Connection) }
  def projects_v2_by_number; end

  sig { returns(T::Boolean) }
  def projects_v2_by_number?; end

  sig { returns(T.nilable(String)) }
  def pronouns; end

  sig { returns(T::Boolean) }
  def pronouns?; end

  sig { returns(PlatformTypes::PublicKeyConnection) }
  def public_keys; end

  sig { returns(T::Boolean) }
  def public_keys?; end

  sig { returns(PlatformTypes::PullRequestUserPreferences) }
  def pull_request_user_preferences; end

  sig { returns(T::Boolean) }
  def pull_request_user_preferences?; end

  sig { returns(PlatformTypes::PullRequestConnection) }
  def pull_requests; end

  sig { returns(T::Boolean) }
  def pull_requests?; end

  sig { returns(PlatformTypes::PullRequestReviewConnection) }
  def received_reviews; end

  sig { returns(T::Boolean) }
  def received_reviews?; end

  sig { returns(T::Array[PlatformTypes::RecentInteraction]) }
  def recent_interactions; end

  sig { returns(T::Boolean) }
  def recent_interactions?; end

  sig { returns(PlatformTypes::ProjectV2Connection) }
  def recent_projects; end

  sig { returns(T::Boolean) }
  def recent_projects?; end

  sig { returns(PlatformTypes::ProjectNextConnection) }
  def recent_projects_next; end

  sig { returns(T::Boolean) }
  def recent_projects_next?; end

  sig { returns(PlatformTypes::RepositoryConnection) }
  def repositories; end

  sig { returns(T::Boolean) }
  def repositories?; end

  sig { returns(PlatformTypes::RepositoryConnection) }
  def repositories_contributed_to; end

  sig { returns(T::Boolean) }
  def repositories_contributed_to?; end

  sig { returns(T::Array[PlatformTypes::RepositoriesUsingDependency]) }
  def repositories_using_dependencies; end

  sig { returns(T::Boolean) }
  def repositories_using_dependencies?; end

  sig { returns(T.nilable(PlatformTypes::Repository)) }
  def repository; end

  sig { returns(T::Boolean) }
  def repository?; end

  sig { returns(PlatformTypes::DiscussionCommentConnection) }
  def repository_discussion_comments; end

  sig { returns(T::Boolean) }
  def repository_discussion_comments?; end

  sig { returns(PlatformTypes::DiscussionConnection) }
  def repository_discussions; end

  sig { returns(T::Boolean) }
  def repository_discussions?; end

  sig { returns(PlatformTypes::RepositoryRecommendationConnection) }
  def repository_recommendations; end

  sig { returns(T::Boolean) }
  def repository_recommendations?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def resource_path; end

  sig { returns(T::Boolean) }
  def resource_path?; end

  sig { returns(PlatformTypes::RetiredNamespaceConnection) }
  def retired_namespaces; end

  sig { returns(T::Boolean) }
  def retired_namespaces?; end

  sig { returns(PlatformTypes::ReviewRequestConnection) }
  def review_requests; end

  sig { returns(T::Boolean) }
  def review_requests?; end

  sig { returns(PlatformTypes::PullRequestReviewConnection) }
  def reviews; end

  sig { returns(T::Boolean) }
  def reviews?; end

  sig { returns(T.nilable(PlatformTypes::SavedReplyConnection)) }
  def saved_replies; end

  sig { returns(T::Boolean) }
  def saved_replies?; end

  sig { returns(T::Boolean) }
  def show_private_contribution_count; end

  sig { returns(T::Boolean) }
  def show_private_contribution_count?; end

  sig { returns(T::Boolean) }
  def show_pro_plan_badge_on_profile; end

  sig { returns(T::Boolean) }
  def show_pro_plan_badge_on_profile?; end

  sig { returns(T::Boolean) }
  def show_profile_readme; end

  sig { returns(T::Boolean) }
  def show_profile_readme?; end

  sig { returns(T::Boolean) }
  def show_staff_badge_on_profile; end

  sig { returns(T::Boolean) }
  def show_staff_badge_on_profile?; end

  sig { returns(PlatformTypes::SocialAccountConnection) }
  def social_accounts; end

  sig { returns(T::Boolean) }
  def social_accounts?; end

  sig { returns(PlatformTypes::SponsorConnection) }
  def sponsoring; end

  sig { returns(T::Boolean) }
  def sponsoring?; end

  sig { returns(PlatformTypes::SponsorConnection) }
  def sponsors; end

  sig { returns(T::Boolean) }
  def sponsors?; end

  sig { returns(PlatformTypes::SponsorsActivityConnection) }
  def sponsors_activities; end

  sig { returns(T::Boolean) }
  def sponsors_activities?; end

  sig { returns(T.nilable(PlatformTypes::SponsorsListing)) }
  def sponsors_listing; end

  sig { returns(T::Boolean) }
  def sponsors_listing?; end

  sig { returns(T.nilable(PlatformTypes::Sponsorship)) }
  def sponsorship_for_viewer_as_sponsor; end

  sig { returns(T::Boolean) }
  def sponsorship_for_viewer_as_sponsor?; end

  sig { returns(T.nilable(PlatformTypes::Sponsorship)) }
  def sponsorship_for_viewer_as_sponsorable; end

  sig { returns(T::Boolean) }
  def sponsorship_for_viewer_as_sponsorable?; end

  sig { returns(PlatformTypes::SponsorshipNewsletterConnection) }
  def sponsorship_newsletters; end

  sig { returns(T::Boolean) }
  def sponsorship_newsletters?; end

  sig { returns(PlatformTypes::SponsorshipConnection) }
  def sponsorships_as_maintainer; end

  sig { returns(T::Boolean) }
  def sponsorships_as_maintainer?; end

  sig { returns(PlatformTypes::SponsorshipConnection) }
  def sponsorships_as_sponsor; end

  sig { returns(T::Boolean) }
  def sponsorships_as_sponsor?; end

  sig { returns(T.nilable(PlatformTypes::UserStafftoolsInfo)) }
  def stafftools_info; end

  sig { returns(T::Boolean) }
  def stafftools_info?; end

  sig { returns(PlatformTypes::StarredRepositoryConnection) }
  def starred_repositories; end

  sig { returns(T::Boolean) }
  def starred_repositories?; end

  sig { returns(PlatformTypes::StarredTopicConnection) }
  def starred_topics; end

  sig { returns(T::Boolean) }
  def starred_topics?; end

  sig { returns(T.nilable(PlatformTypes::UserStatus)) }
  def status; end

  sig { returns(T::Boolean) }
  def status?; end

  sig { returns(PlatformTypes::Subscription) }
  def subscription; end

  sig { returns(T::Boolean) }
  def subscription?; end

  sig { returns(T.nilable(T::Array[String])) }
  def suggested_issue_type_names; end

  sig { returns(T::Boolean) }
  def suggested_issue_type_names?; end

  sig { returns(T::Array[PlatformTypes::UserListSuggestion]) }
  def suggested_list_names; end

  sig { returns(T::Boolean) }
  def suggested_list_names?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def suspended_at; end

  sig { returns(T::Boolean) }
  def suspended_at?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def team_app_url; end

  sig { returns(T::Boolean) }
  def team_app_url?; end

  sig { returns(PlatformTypes::TeamConnection) }
  def teams; end

  sig { returns(T::Boolean) }
  def teams?; end

  sig { returns(PlatformTypes::RepositoryConnection) }
  def template_repositories; end

  sig { returns(T::Boolean) }
  def template_repositories?; end

  sig { returns(T.nilable(PlatformTypes::ToggleableFeatureConnection)) }
  def toggleable_features; end

  sig { returns(T::Boolean) }
  def toggleable_features?; end

  sig { returns(PlatformTypes::RepositoryConnection) }
  def top_repositories; end

  sig { returns(T::Boolean) }
  def top_repositories?; end

  sig { returns(Integer) }
  def total_available_seats; end

  sig { returns(T::Boolean) }
  def total_available_seats?; end

  sig { returns(T.nilable(Integer)) }
  def total_sponsorship_amount_as_sponsor_in_cents; end

  sig { returns(T::Boolean) }
  def total_sponsorship_amount_as_sponsor_in_cents?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def twitter_url; end

  sig { returns(T::Boolean) }
  def twitter_url?; end

  sig { returns(T.nilable(String)) }
  def twitter_username; end

  sig { returns(T::Boolean) }
  def twitter_username?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def updated_at; end

  sig { returns(T::Boolean) }
  def updated_at?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def url; end

  sig { returns(T::Boolean) }
  def url?; end

  sig { returns(PlatformTypes::UserSessionConnection) }
  def user_sessions; end

  sig { returns(T::Boolean) }
  def user_sessions?; end

  sig { returns(T::Array[String]) }
  def verified_domains_list; end

  sig { returns(T::Boolean) }
  def verified_domains_list?; end

  sig { returns(T.nilable(T::Boolean)) }
  def via_actions; end

  sig { returns(T::Boolean) }
  def via_actions?; end

  sig { returns(T::Boolean) }
  def viewer_can_access_copilot_workspace; end

  sig { returns(T::Boolean) }
  def viewer_can_access_copilot_workspace?; end

  sig { returns(T::Boolean) }
  def viewer_can_administer; end

  sig { returns(T::Boolean) }
  def viewer_can_administer?; end

  sig { returns(T::Boolean) }
  def viewer_can_block; end

  sig { returns(T::Boolean) }
  def viewer_can_block?; end

  sig { returns(T::Boolean) }
  def viewer_can_change_pinned_items; end

  sig { returns(T::Boolean) }
  def viewer_can_change_pinned_items?; end

  sig { returns(T::Boolean) }
  def viewer_can_create_projects; end

  sig { returns(T::Boolean) }
  def viewer_can_create_projects?; end

  sig { returns(T::Boolean) }
  def viewer_can_follow; end

  sig { returns(T::Boolean) }
  def viewer_can_follow?; end

  sig { returns(T::Boolean) }
  def viewer_can_sponsor; end

  sig { returns(T::Boolean) }
  def viewer_can_sponsor?; end

  sig { returns(T::Boolean) }
  def viewer_can_subscribe_to_copilot_individual; end

  sig { returns(T::Boolean) }
  def viewer_can_subscribe_to_copilot_individual?; end

  sig { returns(T::Boolean) }
  def viewer_can_unblock; end

  sig { returns(T::Boolean) }
  def viewer_can_unblock?; end

  sig { returns(T.nilable(PlatformTypes::InAppPurchases)) }
  def viewer_in_app_purchases; end

  sig { returns(T::Boolean) }
  def viewer_in_app_purchases?; end

  sig { returns(T::Boolean) }
  def viewer_is_following; end

  sig { returns(T::Boolean) }
  def viewer_is_following?; end

  sig { returns(T::Boolean) }
  def viewer_is_sponsoring; end

  sig { returns(T::Boolean) }
  def viewer_is_sponsoring?; end

  sig { returns(PlatformTypes::RepositoryConnection) }
  def watching; end

  sig { returns(T::Boolean) }
  def watching?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def website_url; end

  sig { returns(T::Boolean) }
  def website_url?; end
end
