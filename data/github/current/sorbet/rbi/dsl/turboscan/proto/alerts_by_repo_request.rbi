# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Turboscan::Proto::AlertsByRepoRequest`.
# Please instead update this file by running `bin/tapioca dsl Turboscan::Proto::AlertsByRepoRequest`.

class Turboscan::Proto::AlertsByRepoRequest
  sig do
    params(
      after_cursor: T.nilable(String),
      before_cursor: T.nilable(String),
      classification: T.nilable(T.any(Symbol, Integer)),
      excluded_repository_ids: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer])),
      excluded_resolutions: T.nilable(T.any(Google::Protobuf::RepeatedField[T.any(Symbol, Integer)], T::Array[T.any(Symbol, Integer)])),
      excluded_rule_sarif_identifiers: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      excluded_severities: T.nilable(T.any(Google::Protobuf::RepeatedField[T.any(Symbol, Integer)], T::Array[T.any(Symbol, Integer)])),
      excluded_tools: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      limit: T.nilable(Integer),
      numeric_page: T.nilable(Integer),
      owner_ids: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer])),
      repo_numbers: T.nilable(T.any(Google::Protobuf::RepeatedField[Turboscan::Proto::RepoNumber], T::Array[Turboscan::Proto::RepoNumber])),
      repository_ids: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer])),
      repository_visibilities: T.nilable(T.any(Google::Protobuf::RepeatedField[T.any(Symbol, Integer)], T::Array[T.any(Symbol, Integer)])),
      resolutions: T.nilable(T.any(Google::Protobuf::RepeatedField[T.any(Symbol, Integer)], T::Array[T.any(Symbol, Integer)])),
      rule_sarif_identifiers: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      search_query: T.nilable(String),
      severities: T.nilable(T.any(Google::Protobuf::RepeatedField[T.any(Symbol, Integer)], T::Array[T.any(Symbol, Integer)])),
      sort_order: T.nilable(T.any(Symbol, Integer)),
      state: T.nilable(T.any(Symbol, Integer)),
      tool_guids: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      tools: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String]))
    ).void
  end
  def initialize(after_cursor: nil, before_cursor: nil, classification: nil, excluded_repository_ids: T.unsafe(nil), excluded_resolutions: T.unsafe(nil), excluded_rule_sarif_identifiers: T.unsafe(nil), excluded_severities: T.unsafe(nil), excluded_tools: T.unsafe(nil), limit: nil, numeric_page: nil, owner_ids: T.unsafe(nil), repo_numbers: T.unsafe(nil), repository_ids: T.unsafe(nil), repository_visibilities: T.unsafe(nil), resolutions: T.unsafe(nil), rule_sarif_identifiers: T.unsafe(nil), search_query: nil, severities: T.unsafe(nil), sort_order: nil, state: nil, tool_guids: T.unsafe(nil), tools: T.unsafe(nil)); end

  sig { returns(String) }
  def after_cursor; end

  sig { params(value: String).void }
  def after_cursor=(value); end

  sig { returns(String) }
  def before_cursor; end

  sig { params(value: String).void }
  def before_cursor=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def classification; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def classification=(value); end

  sig { void }
  def clear_after_cursor; end

  sig { void }
  def clear_before_cursor; end

  sig { void }
  def clear_classification; end

  sig { void }
  def clear_excluded_repository_ids; end

  sig { void }
  def clear_excluded_resolutions; end

  sig { void }
  def clear_excluded_rule_sarif_identifiers; end

  sig { void }
  def clear_excluded_severities; end

  sig { void }
  def clear_excluded_tools; end

  sig { void }
  def clear_limit; end

  sig { void }
  def clear_numeric_page; end

  sig { void }
  def clear_owner_ids; end

  sig { void }
  def clear_repo_numbers; end

  sig { void }
  def clear_repository_ids; end

  sig { void }
  def clear_repository_visibilities; end

  sig { void }
  def clear_resolutions; end

  sig { void }
  def clear_rule_sarif_identifiers; end

  sig { void }
  def clear_search_query; end

  sig { void }
  def clear_severities; end

  sig { void }
  def clear_sort_order; end

  sig { void }
  def clear_state; end

  sig { void }
  def clear_tool_guids; end

  sig { void }
  def clear_tools; end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def excluded_repository_ids; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def excluded_repository_ids=(value); end

  sig { returns(Google::Protobuf::RepeatedField[T.any(Symbol, Integer)]) }
  def excluded_resolutions; end

  sig { params(value: Google::Protobuf::RepeatedField[T.any(Symbol, Integer)]).void }
  def excluded_resolutions=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def excluded_rule_sarif_identifiers; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def excluded_rule_sarif_identifiers=(value); end

  sig { returns(Google::Protobuf::RepeatedField[T.any(Symbol, Integer)]) }
  def excluded_severities; end

  sig { params(value: Google::Protobuf::RepeatedField[T.any(Symbol, Integer)]).void }
  def excluded_severities=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def excluded_tools; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def excluded_tools=(value); end

  sig { returns(Integer) }
  def limit; end

  sig { params(value: Integer).void }
  def limit=(value); end

  sig { returns(Integer) }
  def numeric_page; end

  sig { params(value: Integer).void }
  def numeric_page=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def owner_ids; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def owner_ids=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Turboscan::Proto::RepoNumber]) }
  def repo_numbers; end

  sig { params(value: Google::Protobuf::RepeatedField[Turboscan::Proto::RepoNumber]).void }
  def repo_numbers=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def repository_ids; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def repository_ids=(value); end

  sig { returns(Google::Protobuf::RepeatedField[T.any(Symbol, Integer)]) }
  def repository_visibilities; end

  sig { params(value: Google::Protobuf::RepeatedField[T.any(Symbol, Integer)]).void }
  def repository_visibilities=(value); end

  sig { returns(Google::Protobuf::RepeatedField[T.any(Symbol, Integer)]) }
  def resolutions; end

  sig { params(value: Google::Protobuf::RepeatedField[T.any(Symbol, Integer)]).void }
  def resolutions=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def rule_sarif_identifiers; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def rule_sarif_identifiers=(value); end

  sig { returns(String) }
  def search_query; end

  sig { params(value: String).void }
  def search_query=(value); end

  sig { returns(Google::Protobuf::RepeatedField[T.any(Symbol, Integer)]) }
  def severities; end

  sig { params(value: Google::Protobuf::RepeatedField[T.any(Symbol, Integer)]).void }
  def severities=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def sort_order; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def sort_order=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def state; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def state=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def tool_guids; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def tool_guids=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def tools; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def tools=(value); end
end
