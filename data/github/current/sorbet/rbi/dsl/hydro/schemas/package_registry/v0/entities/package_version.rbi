# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::PackageRegistry::V0::Entities::PackageVersion`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::PackageRegistry::V0::Entities::PackageVersion`.

class Hydro::Schemas::PackageRegistry::V0::Entities::PackageVersion
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      files_count: T.nilable(Integer),
      global_id: T.nilable(Google::Protobuf::StringValue),
      id: T.nilable(Integer),
      package_global_id: T.nilable(Google::Protobuf::StringValue),
      package_id: T.nilable(Integer),
      package_size: T.nilable(Integer),
      platform: T.nilable(String),
      pre_release: T.nilable(T::Boolean),
      version: T.nilable(String)
    ).void
  end
  def initialize(actor: nil, files_count: nil, global_id: nil, id: nil, package_global_id: nil, package_id: nil, package_size: nil, platform: nil, pre_release: nil, version: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_files_count; end

  sig { void }
  def clear_global_id; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_package_global_id; end

  sig { void }
  def clear_package_id; end

  sig { void }
  def clear_package_size; end

  sig { void }
  def clear_platform; end

  sig { void }
  def clear_pre_release; end

  sig { void }
  def clear_version; end

  sig { returns(Integer) }
  def files_count; end

  sig { params(value: Integer).void }
  def files_count=(value); end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def global_id; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def global_id=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def package_global_id; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def package_global_id=(value); end

  sig { returns(Integer) }
  def package_id; end

  sig { params(value: Integer).void }
  def package_id=(value); end

  sig { returns(Integer) }
  def package_size; end

  sig { params(value: Integer).void }
  def package_size=(value); end

  sig { returns(String) }
  def platform; end

  sig { params(value: String).void }
  def platform=(value); end

  sig { returns(T::Boolean) }
  def pre_release; end

  sig { params(value: T::Boolean).void }
  def pre_release=(value); end

  sig { returns(String) }
  def version; end

  sig { params(value: String).void }
  def version=(value); end
end
