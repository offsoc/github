# Code generated by protoc-gen-twirp_ruby 1.5.0, DO NOT EDIT.
require 'twirp'
require_relative 'lsp_pb.rb'

module Aleph
  module Proto
    class LanguageServerProxyService < Twirp::Service
      package 'github.aleph'
      service 'LanguageServerProxy'
      rpc :Exist, ExistRequest, ExistResponse, :ruby_method => :exist
      rpc :TextDocumentDefinition, TextDocumentPositionRequest, TextDocumentLocationResponse, :ruby_method => :text_document_definition
      rpc :TextDocumentReferences, TextDocumentPositionRequest, TextDocumentLocationResponse, :ruby_method => :text_document_references
      rpc :WorkspaceAsset, WorkspaceAssetRequest, WorkspaceAssetResponse, :ruby_method => :workspace_asset
      rpc :FindDefinitionsOfQualifiedNames, FindDefinitionsOfQualifiedNamesRequest, FindDefinitionsOfQualifiedNamesResponse, :ruby_method => :find_definitions_of_qualified_names
      rpc :FindReferencesToQualifiedNames, FindReferencesToQualifiedNamesRequest, FindReferencesToQualifiedNamesResponse, :ruby_method => :find_references_to_qualified_names
      rpc :FindDefinedNameByDefiniensLocation, FindDefinedNameByDefiniensLocationRequest, FindDefinedNameByDefiniensLocationResponse, :ruby_method => :find_defined_name_by_definiens_location
      rpc :FindReferencesForSearchKeys, FindReferencesForSearchKeysRequest, FindReferencesForSearchKeysResponse, :ruby_method => :find_references_for_search_keys
      rpc :FindSymbolInformationForFullyQualifiedName, FindSymbolInformationForFullyQualifiedNameRequest, FindSymbolInformationForFullyQualifiedNameResponse, :ruby_method => :find_symbol_information_for_fully_qualified_name
      rpc :FindReflexiveTransitiveCallersByDefiniensLocation, FindReflexiveTransitiveCallersByDefiniensLocationRequest, FindReflexiveTransitiveCallersByDefiniensLocationResponse, :ruby_method => :find_reflexive_transitive_callers_by_definiens_location
      rpc :GetPartialCallGraph, TextDocumentPositionRequest, GetPartialCallGraphResponse, :ruby_method => :get_partial_call_graph
    end

    class LanguageServerProxyClient < Twirp::Client
      client_for LanguageServerProxyService
    end
  end
end
