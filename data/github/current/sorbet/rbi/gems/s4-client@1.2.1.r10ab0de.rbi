# typed: false

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `s4-client` gem.
# Please instead update this file by running `bin/tapioca gem s4-client`.

module Google::Protobuf::MessageExts::ClassMethods; end

# source://s4-client//client/ruby/lib/twirp/api/v1/api_pb.rb#43
module S4; end

# source://s4-client//client/ruby/lib/twirp/api/v1/api_pb.rb#44
module S4::Api; end

# source://s4-client//client/ruby/lib/twirp/api/v1/api_pb.rb#45
module S4::Api::V1; end

module S4::Api::V1::ContentType
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://s4-client//client/ruby/lib/twirp/api/v1/api_pb.rb#54
S4::Api::V1::ContentType::CSV = T.let(T.unsafe(nil), Integer)

# source://s4-client//client/ruby/lib/twirp/api/v1/api_pb.rb#54
S4::Api::V1::ContentType::JSON = T.let(T.unsafe(nil), Integer)

class S4::Api::V1::CountCustomersReq
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class S4::Api::V1::CountCustomersResp
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class S4::Api::V1::CountReq
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class S4::Api::V1::CountResp
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class S4::Api::V1::MetricsReq
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class S4::Api::V1::MetricsResp
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class S4::Api::V1::PingReq
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class S4::Api::V1::PingResp
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

# source://s4-client//client/ruby/lib/twirp/api/v1/api_twirp.rb#18
class S4::Api::V1::S4Client < ::Twirp::Client
  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def count_customers(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def count_metrics(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def filtered_metrics(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def metrics(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def ping(input, req_opts = T.unsafe(nil)); end
end

# source://s4-client//client/ruby/lib/twirp/api/v1/api_twirp.rb#8
class S4::Api::V1::S4Service < ::Twirp::Service; end

# source://s4-client//client/ruby/lib/s4/v1/hmac_middleware.rb#7
module S4::V1; end

# source://s4-client//client/ruby/lib/s4/v1/hmac_middleware.rb#8
class S4::V1::Client
  # @return [Client] a new instance of Client
  #
  # source://s4-client//client/ruby/lib/s4/v1/client.rb#19
  def initialize(host, faraday_options: T.unsafe(nil), hmac_key: T.unsafe(nil)); end

  # Counts the number of metrics for a given Owner ID.
  #
  # @option opts
  # @option opts
  # @param owner_id [String] The Owner ID.
  # @param opts [Hash] The options for the query.
  # @return [Integer] the number for documents found.
  #
  # source://s4-client//client/ruby/lib/s4/v1/client.rb#87
  def count(owner_id, date_start: T.unsafe(nil), date_end: T.unsafe(nil)); end

  # Query the S4 API filtered metrics endpoint and returns the filtered metrics for the given Owner ID for the specified time period.
  #
  # @option opts
  # @option opts
  # @option opts
  # @param owner_id [String] The Owner ID.
  # @param opts [Hash] The options for the query.
  # @return [String] Query response in the requested format.
  #
  # source://s4-client//client/ruby/lib/s4/v1/client.rb#64
  def filtered_metrics(owner_id, format: T.unsafe(nil), date_start: T.unsafe(nil), date_end: T.unsafe(nil)); end

  # Query the S4 API metrics endpoint and returns all the metrics for the given Owner ID for the specified time period.
  #
  # @option opts
  # @option opts
  # @option opts
  # @param owner_id [String] The Owner ID.
  # @param opts [Hash] The options for the query.
  # @return [String] Query response in the requested format.
  #
  # source://s4-client//client/ruby/lib/s4/v1/client.rb#40
  def metrics(owner_id, format: T.unsafe(nil), date_start: T.unsafe(nil), date_end: T.unsafe(nil)); end

  private

  # source://s4-client//client/ruby/lib/s4/v1/client.rb#115
  def decode_metrics(res); end

  # source://s4-client//client/ruby/lib/s4/v1/client.rb#121
  def delivery_format(format); end

  # source://s4-client//client/ruby/lib/s4/v1/client.rb#111
  def request_version; end

  # source://s4-client//client/ruby/lib/s4/v1/client.rb#101
  def twirp_client; end
end

# source://s4-client//client/ruby/lib/s4/v1/hmac_middleware.rb#15
class S4::V1::Client::HMACMiddleware < ::Faraday::Middleware
  # @return [HMACMiddleware] a new instance of HMACMiddleware
  #
  # source://s4-client//client/ruby/lib/s4/v1/hmac_middleware.rb#16
  def initialize(app, hmac_key); end

  # source://s4-client//client/ruby/lib/s4/v1/hmac_middleware.rb#30
  def call(env); end

  # source://s4-client//client/ruby/lib/s4/v1/hmac_middleware.rb#21
  def hmac_token; end
end

# source://s4-client//client/ruby/lib/s4/v1/hmac_middleware.rb#9
class S4::V1::Client::HMACNotConfiguredError < ::StandardError
  # source://s4-client//client/ruby/lib/s4/v1/hmac_middleware.rb#10
  def message; end
end

# source://s4-client//client/ruby/lib/s4/v1/client.rb#11
class S4::V1::Client::ResponseError < ::StandardError
  # @return [ResponseError] a new instance of ResponseError
  #
  # source://s4-client//client/ruby/lib/s4/v1/client.rb#13
  def initialize(twirpErr); end

  # Returns the value of attribute code.
  #
  # source://s4-client//client/ruby/lib/s4/v1/client.rb#12
  def code; end

  # Sets the attribute code
  #
  # @param value the value to set the attribute code to.
  #
  # source://s4-client//client/ruby/lib/s4/v1/client.rb#12
  def code=(_arg0); end
end
