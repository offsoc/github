{"version":3,"file":"chunk-node_modules_codemirror_legacy-modes_mode_julia_js-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@codemirror/legacy-modes/mode/julia.js"],"sourcesContent":["function wordRegexp(words, end, pre) {\n  if (typeof pre === \"undefined\") pre = \"\";\n  if (typeof end === \"undefined\") { end = \"\\\\b\"; }\n  return new RegExp(\"^\" + pre + \"((\" + words.join(\")|(\") + \"))\" + end);\n}\n\nvar octChar = \"\\\\\\\\[0-7]{1,3}\";\nvar hexChar = \"\\\\\\\\x[A-Fa-f0-9]{1,2}\";\nvar sChar = \"\\\\\\\\[abefnrtv0%?'\\\"\\\\\\\\]\";\nvar uChar = \"([^\\\\u0027\\\\u005C\\\\uD800-\\\\uDFFF]|[\\\\uD800-\\\\uDFFF][\\\\uDC00-\\\\uDFFF])\";\n\nvar asciiOperatorsList = [\n  \"[<>]:\", \"[<>=]=\", \"<<=?\", \">>>?=?\", \"=>\", \"--?>\", \"<--[->]?\", \"\\\\/\\\\/\",\n  \"\\\\.{2,3}\", \"[\\\\.\\\\\\\\%*+\\\\-<>!\\\\/^|&]=?\", \"\\\\?\", \"\\\\$\", \"~\", \":\"\n];\nvar operators = wordRegexp([\n  \"[<>]:\", \"[<>=]=\", \"[!=]==\", \"<<=?\", \">>>?=?\", \"=>?\", \"--?>\", \"<--[->]?\", \"\\\\/\\\\/\",\n  \"[\\\\\\\\%*+\\\\-<>!\\\\/^|&\\\\u00F7\\\\u22BB]=?\", \"\\\\?\", \"\\\\$\", \"~\", \":\",\n  \"\\\\u00D7\", \"\\\\u2208\", \"\\\\u2209\", \"\\\\u220B\", \"\\\\u220C\", \"\\\\u2218\",\n  \"\\\\u221A\", \"\\\\u221B\", \"\\\\u2229\", \"\\\\u222A\", \"\\\\u2260\", \"\\\\u2264\",\n  \"\\\\u2265\", \"\\\\u2286\", \"\\\\u2288\", \"\\\\u228A\", \"\\\\u22C5\",\n  \"\\\\b(in|isa)\\\\b(?!\\.?\\\\()\"\n], \"\");\nvar delimiters = /^[;,()[\\]{}]/;\nvar identifiers = /^[_A-Za-z\\u00A1-\\u2217\\u2219-\\uFFFF][\\w\\u00A1-\\u2217\\u2219-\\uFFFF]*!*/;\n\nvar chars = wordRegexp([octChar, hexChar, sChar, uChar], \"'\");\n\nvar openersList = [\"begin\", \"function\", \"type\", \"struct\", \"immutable\", \"let\",\n                   \"macro\", \"for\", \"while\", \"quote\", \"if\", \"else\", \"elseif\", \"try\",\n                   \"finally\", \"catch\", \"do\"];\n\nvar closersList = [\"end\", \"else\", \"elseif\", \"catch\", \"finally\"];\n\nvar keywordsList = [\"if\", \"else\", \"elseif\", \"while\", \"for\", \"begin\", \"let\",\n                    \"end\", \"do\", \"try\", \"catch\", \"finally\", \"return\", \"break\", \"continue\",\n                    \"global\", \"local\", \"const\", \"export\", \"import\", \"importall\", \"using\",\n                    \"function\", \"where\", \"macro\", \"module\", \"baremodule\", \"struct\", \"type\",\n                    \"mutable\", \"immutable\", \"quote\", \"typealias\", \"abstract\", \"primitive\",\n                    \"bitstype\"];\n\nvar builtinsList = [\"true\", \"false\", \"nothing\", \"NaN\", \"Inf\"];\n\nvar openers = wordRegexp(openersList);\nvar closers = wordRegexp(closersList);\nvar keywords = wordRegexp(keywordsList);\nvar builtins = wordRegexp(builtinsList);\n\nvar macro = /^@[_A-Za-z\\u00A1-\\uFFFF][\\w\\u00A1-\\uFFFF]*!*/;\nvar symbol = /^:[_A-Za-z\\u00A1-\\uFFFF][\\w\\u00A1-\\uFFFF]*!*/;\nvar stringPrefixes = /^(`|([_A-Za-z\\u00A1-\\uFFFF]*\"(\"\")?))/;\n\nvar macroOperators = wordRegexp(asciiOperatorsList, \"\", \"@\");\nvar symbolOperators = wordRegexp(asciiOperatorsList, \"\", \":\");\n\nfunction inArray(state) {\n  return (state.nestedArrays > 0);\n}\n\nfunction inGenerator(state) {\n  return (state.nestedGenerators > 0);\n}\n\nfunction currentScope(state, n) {\n  if (typeof(n) === \"undefined\") { n = 0; }\n  if (state.scopes.length <= n) {\n    return null;\n  }\n  return state.scopes[state.scopes.length - (n + 1)];\n}\n\n// tokenizers\nfunction tokenBase(stream, state) {\n  // Handle multiline comments\n  if (stream.match('#=', false)) {\n    state.tokenize = tokenComment;\n    return state.tokenize(stream, state);\n  }\n\n  // Handle scope changes\n  var leavingExpr = state.leavingExpr;\n  if (stream.sol()) {\n    leavingExpr = false;\n  }\n  state.leavingExpr = false;\n\n  if (leavingExpr) {\n    if (stream.match(/^'+/)) {\n      return \"operator\";\n    }\n  }\n\n  if (stream.match(/\\.{4,}/)) {\n    return \"error\";\n  } else if (stream.match(/\\.{1,3}/)) {\n    return \"operator\";\n  }\n\n  if (stream.eatSpace()) {\n    return null;\n  }\n\n  var ch = stream.peek();\n\n  // Handle single line comments\n  if (ch === '#') {\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  if (ch === '[') {\n    state.scopes.push('[');\n    state.nestedArrays++;\n  }\n\n  if (ch === '(') {\n    state.scopes.push('(');\n    state.nestedGenerators++;\n  }\n\n  if (inArray(state) && ch === ']') {\n    while (state.scopes.length && currentScope(state) !== \"[\") { state.scopes.pop(); }\n    state.scopes.pop();\n    state.nestedArrays--;\n    state.leavingExpr = true;\n  }\n\n  if (inGenerator(state) && ch === ')') {\n    while (state.scopes.length && currentScope(state) !== \"(\") { state.scopes.pop(); }\n    state.scopes.pop();\n    state.nestedGenerators--;\n    state.leavingExpr = true;\n  }\n\n  if (inArray(state)) {\n    if (state.lastToken == \"end\" && stream.match(':')) {\n      return \"operator\";\n    }\n    if (stream.match('end')) {\n      return \"number\";\n    }\n  }\n\n  var match;\n  if (match = stream.match(openers, false)) {\n    state.scopes.push(match[0]);\n  }\n\n  if (stream.match(closers, false)) {\n    state.scopes.pop();\n  }\n\n  // Handle type annotations\n  if (stream.match(/^::(?![:\\$])/)) {\n    state.tokenize = tokenAnnotation;\n    return state.tokenize(stream, state);\n  }\n\n  // Handle symbols\n  if (!leavingExpr && (stream.match(symbol) || stream.match(symbolOperators))) {\n    return \"builtin\";\n  }\n\n  // Handle parametric types\n  //if (stream.match(/^{[^}]*}(?=\\()/)) {\n  //  return \"builtin\";\n  //}\n\n  // Handle operators and Delimiters\n  if (stream.match(operators)) {\n    return \"operator\";\n  }\n\n  // Handle Number Literals\n  if (stream.match(/^\\.?\\d/, false)) {\n    var imMatcher = RegExp(/^im\\b/);\n    var numberLiteral = false;\n    if (stream.match(/^0x\\.[0-9a-f_]+p[\\+\\-]?[_\\d]+/i)) { numberLiteral = true; }\n    // Integers\n    if (stream.match(/^0x[0-9a-f_]+/i)) { numberLiteral = true; } // Hex\n    if (stream.match(/^0b[01_]+/i)) { numberLiteral = true; } // Binary\n    if (stream.match(/^0o[0-7_]+/i)) { numberLiteral = true; } // Octal\n    // Floats\n    if (stream.match(/^(?:(?:\\d[_\\d]*)?\\.(?!\\.)(?:\\d[_\\d]*)?|\\d[_\\d]*\\.(?!\\.)(?:\\d[_\\d]*))?([Eef][\\+\\-]?[_\\d]+)?/i)) { numberLiteral = true; }\n    if (stream.match(/^\\d[_\\d]*(e[\\+\\-]?\\d+)?/i)) { numberLiteral = true; } // Decimal\n    if (numberLiteral) {\n      // Integer literals may be \"long\"\n      stream.match(imMatcher);\n      state.leavingExpr = true;\n      return \"number\";\n    }\n  }\n\n  // Handle Chars\n  if (stream.match(\"'\")) {\n    state.tokenize = tokenChar;\n    return state.tokenize(stream, state);\n  }\n\n  // Handle Strings\n  if (stream.match(stringPrefixes)) {\n    state.tokenize = tokenStringFactory(stream.current());\n    return state.tokenize(stream, state);\n  }\n\n  if (stream.match(macro) || stream.match(macroOperators)) {\n    return \"meta\";\n  }\n\n  if (stream.match(delimiters)) {\n    return null;\n  }\n\n  if (stream.match(keywords)) {\n    return \"keyword\";\n  }\n\n  if (stream.match(builtins)) {\n    return \"builtin\";\n  }\n\n  var isDefinition = state.isDefinition || state.lastToken == \"function\" ||\n      state.lastToken == \"macro\" || state.lastToken == \"type\" ||\n      state.lastToken == \"struct\" || state.lastToken == \"immutable\";\n\n  if (stream.match(identifiers)) {\n    if (isDefinition) {\n      if (stream.peek() === '.') {\n        state.isDefinition = true;\n        return \"variable\";\n      }\n      state.isDefinition = false;\n      return \"def\";\n    }\n    state.leavingExpr = true;\n    return \"variable\";\n  }\n\n  // Handle non-detected items\n  stream.next();\n  return \"error\";\n}\n\nfunction tokenAnnotation(stream, state) {\n  stream.match(/.*?(?=[,;{}()=\\s]|$)/);\n  if (stream.match('{')) {\n    state.nestedParameters++;\n  } else if (stream.match('}') && state.nestedParameters > 0) {\n    state.nestedParameters--;\n  }\n  if (state.nestedParameters > 0) {\n    stream.match(/.*?(?={|})/) || stream.next();\n  } else if (state.nestedParameters == 0) {\n    state.tokenize = tokenBase;\n  }\n  return \"builtin\";\n}\n\nfunction tokenComment(stream, state) {\n  if (stream.match('#=')) {\n    state.nestedComments++;\n  }\n  if (!stream.match(/.*?(?=(#=|=#))/)) {\n    stream.skipToEnd();\n  }\n  if (stream.match('=#')) {\n    state.nestedComments--;\n    if (state.nestedComments == 0)\n      state.tokenize = tokenBase;\n  }\n  return \"comment\";\n}\n\nfunction tokenChar(stream, state) {\n  var isChar = false, match;\n  if (stream.match(chars)) {\n    isChar = true;\n  } else if (match = stream.match(/\\\\u([a-f0-9]{1,4})(?=')/i)) {\n    var value = parseInt(match[1], 16);\n    if (value <= 55295 || value >= 57344) { // (U+0,U+D7FF), (U+E000,U+FFFF)\n      isChar = true;\n      stream.next();\n    }\n  } else if (match = stream.match(/\\\\U([A-Fa-f0-9]{5,8})(?=')/)) {\n    var value = parseInt(match[1], 16);\n    if (value <= 1114111) { // U+10FFFF\n      isChar = true;\n      stream.next();\n    }\n  }\n  if (isChar) {\n    state.leavingExpr = true;\n    state.tokenize = tokenBase;\n    return \"string\";\n  }\n  if (!stream.match(/^[^']+(?=')/)) { stream.skipToEnd(); }\n  if (stream.match(\"'\")) { state.tokenize = tokenBase; }\n  return \"error\";\n}\n\nfunction tokenStringFactory(delimiter) {\n  if (delimiter.substr(-3) === '\"\"\"') {\n    delimiter = '\"\"\"';\n  } else if (delimiter.substr(-1) === '\"') {\n    delimiter = '\"';\n  }\n  function tokenString(stream, state) {\n    if (stream.eat('\\\\')) {\n      stream.next();\n    } else if (stream.match(delimiter)) {\n      state.tokenize = tokenBase;\n      state.leavingExpr = true;\n      return \"string\";\n    } else {\n      stream.eat(/[`\"]/);\n    }\n    stream.eatWhile(/[^\\\\`\"]/);\n    return \"string\";\n  }\n  return tokenString;\n}\n\nexport const julia = {\n  name: \"julia\",\n  startState: function() {\n    return {\n      tokenize: tokenBase,\n      scopes: [],\n      lastToken: null,\n      leavingExpr: false,\n      isDefinition: false,\n      nestedArrays: 0,\n      nestedComments: 0,\n      nestedGenerators: 0,\n      nestedParameters: 0,\n      firstParenPos: -1\n    };\n  },\n\n  token: function(stream, state) {\n    var style = state.tokenize(stream, state);\n    var current = stream.current();\n\n    if (current && style) {\n      state.lastToken = current;\n    }\n\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    var delta = 0;\n    if ( textAfter === ']' || textAfter === ')' || /^end\\b/.test(textAfter) ||\n         /^else/.test(textAfter) || /^catch\\b/.test(textAfter) || /^elseif\\b/.test(textAfter) ||\n         /^finally/.test(textAfter) ) {\n      delta = -1;\n    }\n    return (state.scopes.length + delta) * cx.unit;\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*(end|else|catch|finally)\\b$/,\n    commentTokens: {line: \"#\", block: {open: \"#=\", close: \"=#\"}},\n    closeBrackets: {brackets: [\"(\", \"[\", \"{\", '\"']},\n    autocomplete: keywordsList.concat(builtinsList)\n  }\n};\n"],"names":["wordRegexp","words","end","pre","join","asciiOperatorsList","operators","delimiters","identifiers","chars","keywordsList","builtinsList","openers","closers","keywords","builtins","macro","symbol","stringPrefixes","macroOperators","symbolOperators","inArray","state","nestedArrays","currentScope","n","scopes","length","tokenBase","stream","match","tokenize","tokenComment","delimiter","leavingExpr","sol","eatSpace","ch","peek","skipToEnd","push","nestedGenerators","pop","inGenerator","lastToken","tokenAnnotation","imMatcher","RegExp","numberLiteral","tokenChar","current","substr","eat","next","eatWhile","isDefinition","nestedParameters","nestedComments","isChar","value","parseInt","julia","name","startState","firstParenPos","token","style","indent","textAfter","cx","delta","test","unit","languageData","indentOnInput","commentTokens","line","block","open","close","closeBrackets","brackets","autocomplete","concat"],"sourceRoot":""}