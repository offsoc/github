# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Sponsors::V0::ProfileViewed`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Sponsors::V0::ProfileViewed`.

class Hydro::Schemas::Github::Sponsors::V0::ProfileViewed
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      origin: T.nilable(T.any(Symbol, Integer)),
      referring_account: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext),
      source: T.nilable(T.any(Symbol, Integer)),
      sponsor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      sponsorable: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(actor: nil, origin: nil, referring_account: nil, request_context: nil, source: nil, sponsor: nil, sponsorable: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_origin; end

  sig { void }
  def clear_referring_account; end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_source; end

  sig { void }
  def clear_sponsor; end

  sig { void }
  def clear_sponsorable; end

  sig { returns(T.any(Symbol, Integer)) }
  def origin; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def origin=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def referring_account; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def referring_account=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def source; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def source=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def sponsor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def sponsor=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def sponsorable; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def sponsorable=(value); end
end
