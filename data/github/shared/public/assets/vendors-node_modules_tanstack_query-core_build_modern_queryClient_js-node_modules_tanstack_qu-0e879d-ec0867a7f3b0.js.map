{"version":3,"file":"vendors-node_modules_tanstack_query-core_build_modern_queryClient_js-node_modules_tanstack_qu-0e879d-xxxxxxxxxxxx.js","mappings":"8OA8DIA,EAAe,IA3DA,cAAc,GAAY,CAC3C,CAACC,CAAO,EACPC,CAAO,EACPC,CAAK,cACQ,CACZ,KAAK,GACL,IAAI,CAAC,CAACA,CAAK,CAAG,IACZ,GAAI,CAAC,IAAQ,EAAIC,OAAOC,gBAAgB,CAAE,CACxC,IAAMC,EAAW,IAAMC,IAEvB,OADAH,OAAOC,gBAAgB,CAAC,mBAAoBC,EAAU,IAC/C,KACLF,OAAOI,mBAAmB,CAAC,mBAAoBF,EACjD,CACF,CAEF,CACF,CACAG,aAAc,CACP,IAAI,CAAC,CAACP,CAAO,EAChB,IAAI,CAACQ,gBAAgB,CAAC,IAAI,CAAC,CAACP,CAAK,CAErC,CACAQ,eAAgB,CACT,IAAI,CAACC,YAAY,KACpB,IAAI,CAAC,CAACV,CAAO,KACb,IAAI,CAAC,CAACA,CAAO,CAAG,KAAK,EAEzB,CACAQ,iBAAiBP,CAAK,CAAE,CACtB,IAAI,CAAC,CAACA,CAAK,CAAGA,EACd,IAAI,CAAC,CAACD,CAAO,KACb,IAAI,CAAC,CAACA,CAAO,CAAGC,EAAM,IAChB,kBAAOF,EACT,IAAI,CAACY,UAAU,CAACZ,GAEhB,IAAI,CAACM,OAAO,EAEhB,EACF,CACAM,WAAWZ,CAAO,CAAE,CACF,IAAI,CAAC,CAACA,CAAO,GAAKA,IAEhC,IAAI,CAAC,CAACA,CAAO,CAAGA,EAChB,IAAI,CAACM,OAAO,GAEhB,CACAA,SAAU,CACR,IAAMO,EAAY,IAAI,CAACA,SAAS,GAChC,IAAI,CAACC,SAAS,CAACC,OAAO,CAAC,IACrBV,EAASQ,EACX,EACF,CACAA,WAAY,OACV,WAAI,OAAO,IAAI,CAAC,CAACb,CAAO,CACf,IAAI,CAAC,CAACA,CAAO,CAEfgB,WAAWC,QAAQ,EAAEC,kBAAoB,QAClD,CACF,C,qEC3DA,SAASC,EAAsBC,CAAK,EAClC,MAAO,CACLC,QAAS,CAACC,EAASC,KACjB,IAAMC,EAAU,cA+CVC,EA9CJ,IAAMC,EAAUJ,EAAQI,OAAO,CACzBC,EAAYL,EAAQM,YAAY,EAAEC,MAAMC,WAAWH,UACnDI,EAAWT,EAAQU,KAAK,CAACC,IAAI,EAAEb,OAAS,EAAE,CAC1Cc,EAAgBZ,EAAQU,KAAK,CAACC,IAAI,EAAEE,YAAc,EAAE,CAEtDC,EAAY,GACVC,EAAoB,IACxBC,OAAOC,cAAc,CAACC,EAAQ,SAAU,CACtCC,WAAY,GACZC,IAAK,KACCpB,EAAQqB,MAAM,CAACC,OAAO,CACxBR,EAAY,GAEZd,EAAQqB,MAAM,CAACvC,gBAAgB,CAAC,QAAS,KACvCgC,EAAY,EACd,GAEKd,EAAQqB,MAAM,CAEzB,EACF,EACME,EAAU,SAAcvB,EAAQI,OAAO,CAAEJ,EAAQM,YAAY,EAC7DkB,EAAY,MAAOb,EAAMc,EAAOC,KACpC,GAAIZ,EACF,OAAOa,QAAQC,MAAM,GAEvB,GAAIH,MAAAA,GAAiBd,EAAKb,KAAK,CAAC+B,MAAM,CACpC,OAAOF,QAAQG,OAAO,CAACnB,GAEzB,IAAMoB,EAAiB,CACrBC,SAAUhC,EAAQgC,QAAQ,CAC1BC,UAAWR,EACXpB,UAAWqB,EAAW,WAAa,UACnCnB,KAAMP,EAAQI,OAAO,CAACG,IAAI,EAE5BQ,EAAkBgB,GAClB,IAAMG,EAAO,MAAMX,EACjBQ,GAEI,CAAEI,SAAAA,CAAQ,CAAE,CAAGnC,EAAQI,OAAO,CAC9BgC,EAAQV,EAAW,IAAU,CAAG,IAAQ,CAC9C,MAAO,CACL5B,MAAOsC,EAAMzB,EAAKb,KAAK,CAAEoC,EAAMC,GAC/BtB,WAAYuB,EAAMzB,EAAKE,UAAU,CAAEY,EAAOU,EAC5C,CACF,EAEA,GAAI9B,GAAaI,EAASoB,MAAM,CAAE,CAChC,IAAMH,EAAWrB,aAAAA,EAEXgC,EAAU,CACdvC,MAAOW,EACPI,WAAYD,CACd,EACMa,EAAQa,CALMZ,EAAWa,EAAuBC,CAAe,EAK3CpC,EAASiC,GACnClC,EAAS,MAAMqB,EAAUa,EAASZ,EAAOC,EAC3C,KAAO,CACLvB,EAAS,MAAMqB,EArDH,CAAE1B,MAAO,EAAE,CAAEe,WAAY,EAAE,EAuDrCD,CAAa,CAAC,EAAE,EAAIR,EAAQqC,gBAAgB,EAE9C,IAAMC,EAAiB5C,GAASW,EAASoB,MAAM,CAC/C,IAAK,IAAIc,EAAI,EAAGA,EAAID,EAAgBC,IAAK,CACvC,IAAMlB,EAAQe,EAAiBpC,EAASD,GACxCA,EAAS,MAAMqB,EAAUrB,EAAQsB,EACnC,CACF,CACA,OAAOtB,CACT,CACIH,CAAAA,EAAQI,OAAO,CAACwC,SAAS,CAC3B5C,EAAQE,OAAO,CAAG,IACTF,EAAQI,OAAO,CAACwC,SAAS,GAC9B1C,EACA,CACE8B,SAAUhC,EAAQgC,QAAQ,CAC1BzB,KAAMP,EAAQI,OAAO,CAACG,IAAI,CAC1Bc,OAAQrB,EAAQqB,MAAM,EAExBpB,GAIJD,EAAQE,OAAO,CAAGA,CAEtB,CACF,CACF,CACA,SAASsC,EAAiBpC,CAAO,CAAE,CAAEN,MAAAA,CAAK,CAAEe,WAAAA,CAAU,CAAE,EACtD,IAAMgC,EAAY/C,EAAM+B,MAAM,CAAG,EACjC,OAAO/B,EAAM+B,MAAM,CAAG,EAAIzB,EAAQoC,gBAAgB,CAChD1C,CAAK,CAAC+C,EAAU,CAChB/C,EACAe,CAAU,CAACgC,EAAU,CACrBhC,GACE,KAAK,CACX,CACA,SAAS0B,EAAqBnC,CAAO,CAAE,CAAEN,MAAAA,CAAK,CAAEe,WAAAA,CAAU,CAAE,EAC1D,OAAOf,EAAM+B,MAAM,CAAG,EAAIzB,EAAQmC,oBAAoB,GAAGzC,CAAK,CAAC,EAAE,CAAEA,EAAOe,CAAU,CAAC,EAAE,CAAEA,GAAc,KAAK,CAC9G,CACA,SAASiC,EAAY1C,CAAO,CAAEO,CAAI,QAChC,EAAKA,GAEE6B,MAAAA,EAAiBpC,EAASO,EACnC,CACA,SAASoC,EAAgB3C,CAAO,CAAEO,CAAI,QACpC,EAAKA,KAASP,EAAQmC,oBAAoB,EAEnCA,MAAAA,EAAqBnC,EAASO,EACvC,C,gFC9GIqC,EAAW,cAAc,GAAS,CACpC,CAACC,CAAS,EACTC,CAAa,EACbC,CAAO,aACIC,CAAM,CAAE,CAClB,KAAK,GACL,IAAI,CAACC,UAAU,CAAGD,EAAOC,UAAU,CACnC,IAAI,CAAC,CAACH,CAAa,CAAGE,EAAOF,aAAa,CAC1C,IAAI,CAAC,CAACD,CAAS,CAAG,EAAE,CACpB,IAAI,CAACvC,KAAK,CAAG0C,EAAO1C,KAAK,EAAI4C,IAC7B,IAAI,CAACC,UAAU,CAACH,EAAOhD,OAAO,EAC9B,IAAI,CAACoD,UAAU,EACjB,CACAD,WAAWnD,CAAO,CAAE,CAClB,IAAI,CAACA,OAAO,CAAGA,EACf,IAAI,CAACqD,YAAY,CAAC,IAAI,CAACrD,OAAO,CAACsD,MAAM,CACvC,CACA,IAAInD,MAAO,CACT,OAAO,IAAI,CAACH,OAAO,CAACG,IAAI,CAE1BoD,YAAYC,CAAQ,CAAE,CACf,IAAI,CAAC,CAACX,CAAS,CAACY,QAAQ,CAACD,KAC5B,IAAI,CAAC,CAACX,CAAS,CAACa,IAAI,CAACF,GACrB,IAAI,CAACG,cAAc,GACnB,IAAI,CAAC,CAACb,CAAa,CAACc,MAAM,CAAC,CACzBC,KAAM,gBACNC,SAAU,IAAI,CACdN,SAAAA,CACF,GAEJ,CACAO,eAAeP,CAAQ,CAAE,CACvB,IAAI,CAAC,CAACX,CAAS,CAAG,IAAI,CAAC,CAACA,CAAS,CAACmB,MAAM,CAAC,GAAOC,IAAMT,GACtD,IAAI,CAACJ,UAAU,GACf,IAAI,CAAC,CAACN,CAAa,CAACc,MAAM,CAAC,CACzBC,KAAM,kBACNC,SAAU,IAAI,CACdN,SAAAA,CACF,EACF,CACAU,gBAAiB,CACV,IAAI,CAAC,CAACrB,CAAS,CAACpB,MAAM,GACrB,gBAAI,CAACnB,KAAK,CAAC6D,MAAM,CACnB,IAAI,CAACf,UAAU,GAEf,IAAI,CAAC,CAACN,CAAa,CAACsB,MAAM,CAAC,IAAI,EAGrC,CACAC,UAAW,CACT,OAAO,IAAI,CAAC,CAACtB,CAAO,EAAEsB,YACtB,IAAI,CAACC,OAAO,CAAC,IAAI,CAAChE,KAAK,CAACiE,SAAS,CACnC,CACA,MAAMD,QAAQC,CAAS,CAAE,CACvB,IAAI,CAAC,CAACxB,CAAO,CAAG,SAAc,CAC5ByB,GAAI,IACF,IAAS,CAACxE,OAAO,CAACyE,UAAU,CAGrB,IAAI,CAACzE,OAAO,CAACyE,UAAU,CAACF,GAFtBhD,QAAQC,MAAM,CAAC,MAAU,wBAIpCkD,OAAQ,CAACC,EAAcC,KACrB,IAAI,CAAC,CAACC,CAAQ,CAAC,CAAEhB,KAAM,SAAUc,aAAAA,EAAcC,MAAAA,CAAM,EACvD,EACAE,QAAS,KACP,IAAI,CAAC,CAACD,CAAQ,CAAC,CAAEhB,KAAM,OAAQ,EACjC,EACAkB,WAAY,KACV,IAAI,CAAC,CAACF,CAAQ,CAAC,CAAEhB,KAAM,UAAW,EACpC,EACAmB,MAAO,IAAI,CAAChF,OAAO,CAACgF,KAAK,EAAI,EAC7BC,WAAY,IAAI,CAACjF,OAAO,CAACiF,UAAU,CACnCC,YAAa,IAAI,CAAClF,OAAO,CAACkF,WAAW,CACrCC,OAAQ,IAAM,IAAI,CAAC,CAACrC,CAAa,CAACqC,MAAM,CAAC,IAAI,CAC/C,GACA,IAAMC,EAAW,gBAAI,CAAC9E,KAAK,CAAC6D,MAAM,CAC5BkB,EAAW,CAAC,IAAI,CAAC,CAACtC,CAAO,CAACuC,QAAQ,GACxC,GAAI,CACF,GAAI,CAACF,EAAU,CACb,IAAI,CAAC,CAACP,CAAQ,CAAC,CAAEhB,KAAM,UAAWU,UAAAA,EAAWc,SAAAA,CAAS,GACtD,MAAM,IAAI,CAAC,CAACvC,CAAa,CAACE,MAAM,CAACuC,QAAQ,GACvChB,EACA,IAAI,EAEN,IAAM3E,EAAU,MAAM,IAAI,CAACI,OAAO,CAACuF,QAAQ,GAAGhB,GAC1C3E,IAAY,IAAI,CAACU,KAAK,CAACV,OAAO,EAChC,IAAI,CAAC,CAACiF,CAAQ,CAAC,CACbhB,KAAM,UACNjE,QAAAA,EACA2E,UAAAA,EACAc,SAAAA,CACF,EAEJ,CACA,IAAM9E,EAAO,MAAM,IAAI,CAAC,CAACwC,CAAO,CAACyC,KAAK,GAiBtC,OAhBA,MAAM,IAAI,CAAC,CAAC1C,CAAa,CAACE,MAAM,CAACyC,SAAS,GACxClF,EACAgE,EACA,IAAI,CAACjE,KAAK,CAACV,OAAO,CAClB,IAAI,EAEN,MAAM,IAAI,CAACI,OAAO,CAACyF,SAAS,GAAGlF,EAAMgE,EAAW,IAAI,CAACjE,KAAK,CAACV,OAAO,EAClE,MAAM,IAAI,CAAC,CAACkD,CAAa,CAACE,MAAM,CAAC0C,SAAS,GACxCnF,EACA,KACA,IAAI,CAACD,KAAK,CAACiE,SAAS,CACpB,IAAI,CAACjE,KAAK,CAACV,OAAO,CAClB,IAAI,EAEN,MAAM,IAAI,CAACI,OAAO,CAAC0F,SAAS,GAAGnF,EAAM,KAAMgE,EAAW,IAAI,CAACjE,KAAK,CAACV,OAAO,EACxE,IAAI,CAAC,CAACiF,CAAQ,CAAC,CAAEhB,KAAM,UAAWtD,KAAAA,CAAK,GAChCA,CACT,CAAE,MAAOqE,EAAO,CACd,GAAI,CAyBF,MAxBA,MAAM,IAAI,CAAC,CAAC9B,CAAa,CAACE,MAAM,CAAC2C,OAAO,GACtCf,EACAL,EACA,IAAI,CAACjE,KAAK,CAACV,OAAO,CAClB,IAAI,EAEN,MAAM,IAAI,CAACI,OAAO,CAAC2F,OAAO,GACxBf,EACAL,EACA,IAAI,CAACjE,KAAK,CAACV,OAAO,EAEpB,MAAM,IAAI,CAAC,CAACkD,CAAa,CAACE,MAAM,CAAC0C,SAAS,GACxC,KAAK,EACLd,EACA,IAAI,CAACtE,KAAK,CAACiE,SAAS,CACpB,IAAI,CAACjE,KAAK,CAACV,OAAO,CAClB,IAAI,EAEN,MAAM,IAAI,CAACI,OAAO,CAAC0F,SAAS,GAC1B,KAAK,EACLd,EACAL,EACA,IAAI,CAACjE,KAAK,CAACV,OAAO,EAEdgF,CACR,QAAU,CACR,IAAI,CAAC,CAACC,CAAQ,CAAC,CAAEhB,KAAM,QAASe,MAAAA,CAAM,EACxC,CACF,QAAU,CACR,IAAI,CAAC,CAAC9B,CAAa,CAAC8C,OAAO,CAAC,IAAI,CAClC,CACF,CACA,CAACf,CAAQ,CAACgB,CAAM,EAsDd,IAAI,CAACvF,KAAK,CAAGwF,CArDG,IACd,OAAQD,EAAOhC,IAAI,EACjB,IAAK,SACH,MAAO,CACL,GAAGvD,CAAK,CACRqE,aAAckB,EAAOlB,YAAY,CACjCoB,cAAeF,EAAOjB,KAAK,CAE/B,KAAK,QACH,MAAO,CACL,GAAGtE,CAAK,CACR+E,SAAU,EACZ,CACF,KAAK,WACH,MAAO,CACL,GAAG/E,CAAK,CACR+E,SAAU,EACZ,CACF,KAAK,UACH,MAAO,CACL,GAAG/E,CAAK,CACRV,QAASiG,EAAOjG,OAAO,CACvBW,KAAM,KAAK,EACXoE,aAAc,EACdoB,cAAe,KACfnB,MAAO,KACPS,SAAUQ,EAAOR,QAAQ,CACzBlB,OAAQ,UACRI,UAAWsB,EAAOtB,SAAS,CAC3ByB,YAAaC,KAAKC,GAAG,EACvB,CACF,KAAK,UACH,MAAO,CACL,GAAG5F,CAAK,CACRC,KAAMsF,EAAOtF,IAAI,CACjBoE,aAAc,EACdoB,cAAe,KACfnB,MAAO,KACPT,OAAQ,UACRkB,SAAU,EACZ,CACF,KAAK,QACH,MAAO,CACL,GAAG/E,CAAK,CACRC,KAAM,KAAK,EACXqE,MAAOiB,EAAOjB,KAAK,CACnBD,aAAcrE,EAAMqE,YAAY,CAAG,EACnCoB,cAAeF,EAAOjB,KAAK,CAC3BS,SAAU,GACVlB,OAAQ,OACV,CACJ,CACF,GACqB,IAAI,CAAC7D,KAAK,EAC/B,GAAa,CAAC6F,KAAK,CAAC,KAClB,IAAI,CAAC,CAACtD,CAAS,CAACxD,OAAO,CAAC,IACtBmE,EAAS4C,gBAAgB,CAACP,EAC5B,GACA,IAAI,CAAC,CAAC/C,CAAa,CAACc,MAAM,CAAC,CACzBE,SAAU,IAAI,CACdD,KAAM,UACNgC,OAAAA,CACF,EACF,EACF,CACF,EACA,SAAS3C,IACP,MAAO,CACLtD,QAAS,KAAK,EACdW,KAAM,KAAK,EACXqE,MAAO,KACPD,aAAc,EACdoB,cAAe,KACfV,SAAU,GACVlB,OAAQ,OACRI,UAAW,KAAK,EAChByB,YAAa,CACf,CACF,C,mFChOIK,EAAgB,cAAc,GAAY,CAC5CC,YAAYtD,EAAS,CAAC,CAAC,CAAE,CACvB,KAAK,GACL,IAAI,CAACA,MAAM,CAAGA,EACd,IAAI,CAAC,CAACuD,CAAS,CAAmB,IAAIC,IACtC,IAAI,CAAC,CAACvD,CAAU,CAAGgD,KAAKC,GAAG,EAC7B,CACA,CAACK,CAAS,EACTtD,CAAU,CACXwD,MAAMC,CAAM,CAAE1G,CAAO,CAAEM,CAAK,CAAE,CAC5B,IAAMwD,EAAW,IAAI,GAAQ,CAAC,CAC5BhB,cAAe,IAAI,CACnBG,WAAY,EAAE,IAAI,CAAC,CAACA,CAAU,CAC9BjD,QAAS0G,EAAOC,sBAAsB,CAAC3G,GACvCM,MAAAA,CACF,GAEA,OADA,IAAI,CAACsG,GAAG,CAAC9C,GACFA,CACT,CACA8C,IAAI9C,CAAQ,CAAE,CACZ,IAAM+C,EAAQC,EAAShD,GACjByC,EAAY,IAAI,CAAC,CAACA,CAAS,CAACvF,GAAG,CAAC6F,IAAU,EAAE,CAClDN,EAAU7C,IAAI,CAACI,GACf,IAAI,CAAC,CAACyC,CAAS,CAACQ,GAAG,CAACF,EAAON,GAC3B,IAAI,CAAC3C,MAAM,CAAC,CAAEC,KAAM,QAASC,SAAAA,CAAS,EACxC,CACAM,OAAON,CAAQ,CAAE,CACf,IAAM+C,EAAQC,EAAShD,GACvB,GAAI,IAAI,CAAC,CAACyC,CAAS,CAACS,GAAG,CAACH,GAAQ,CAC9B,IAAMN,EAAY,IAAI,CAAC,CAACA,CAAS,CAACvF,GAAG,CAAC6F,IAAQ7C,OAAO,GAAOC,IAAMH,GAC9DyC,IACEA,IAAAA,EAAU9E,MAAM,CAClB,IAAI,CAAC,CAAC8E,CAAS,CAACU,MAAM,CAACJ,GAEvB,IAAI,CAAC,CAACN,CAAS,CAACQ,GAAG,CAACF,EAAON,GAGjC,CACA,IAAI,CAAC3C,MAAM,CAAC,CAAEC,KAAM,UAAWC,SAAAA,CAAS,EAC1C,CACAqB,OAAOrB,CAAQ,CAAE,CACf,IAAMoD,EAAuB,IAAI,CAAC,CAACX,CAAS,CAACvF,GAAG,CAAC8F,EAAShD,KAAYqD,KAAK,GAAOC,YAAAA,EAAE9G,KAAK,CAAC6D,MAAM,EAChG,MAAO,CAAC+C,GAAwBA,IAAyBpD,CAC3D,CACA8B,QAAQ9B,CAAQ,CAAE,CAChB,IAAMuD,EAAgB,IAAI,CAAC,CAACd,CAAS,CAACvF,GAAG,CAAC8F,EAAShD,KAAYqD,KAAK,GAAOC,IAAMtD,GAAYsD,EAAE9G,KAAK,CAAC+E,QAAQ,EAC7G,OAAOgC,GAAehD,YAAc9C,QAAQG,OAAO,EACrD,CACA4F,OAAQ,CACN,GAAa,CAACnB,KAAK,CAAC,KAClB,IAAI,CAACoB,MAAM,GAAGlI,OAAO,CAAC,IACpB,IAAI,CAAC+E,MAAM,CAACN,EACd,EACF,EACF,CACAyD,QAAS,CACP,MAAO,IAAI,IAAI,CAAC,CAAChB,CAAS,CAACiB,MAAM,GAAG,CAACC,IAAI,EAC3C,CACAN,KAAKO,CAAO,CAAE,CACZ,IAAMC,EAAmB,CAAEC,MAAO,GAAM,GAAGF,CAAO,EAClD,OAAO,IAAI,CAACH,MAAM,GAAGJ,IAAI,CACvB,GAAc,SAAcQ,EAAkB7D,GAElD,CACA+D,QAAQH,EAAU,CAAC,CAAC,CAAE,CACpB,OAAO,IAAI,CAACH,MAAM,GAAGvD,MAAM,CAAC,GAAc,SAAc0D,EAAS5D,GACnE,CACAF,OAAOkE,CAAK,CAAE,CACZ,GAAa,CAAC3B,KAAK,CAAC,KAClB,IAAI,CAAC/G,SAAS,CAACC,OAAO,CAAC,IACrBV,EAASmJ,EACX,EACF,EACF,CACAC,uBAAwB,CACtB,IAAMC,EAAkB,IAAI,CAACT,MAAM,GAAGvD,MAAM,CAAC,GAAOC,EAAE3D,KAAK,CAAC+E,QAAQ,EACpE,OAAO,GAAa,CAACc,KAAK,CACxB,IAAM5E,QAAQ0G,GAAG,CACfD,EAAgBE,GAAG,CAAC,GAAcpE,EAASO,QAAQ,GAAG8D,KAAK,CAAC,IAAI,IAGtE,CACF,EACA,SAASrB,EAAShD,CAAQ,EACxB,OAAOA,EAAS9D,OAAO,CAAC6G,KAAK,EAAEuB,IAAMC,OAAOvE,EAASb,UAAU,CACjE,C,mCCnBA,IAAIqF,EAAgBC,WArElB,IAAIC,EAAQ,EAAE,CACVC,EAAe,EACfC,EAAW,IACbC,GACF,EACIC,EAAgB,IAClBD,GACF,EACIE,EAAa,GAAQC,WAAWC,EAAI,GAiBlCC,EAAW,IACXP,EACFD,EAAM9E,IAAI,CAACiF,GAEXE,EAAW,KACTH,EAASC,EACX,EAEJ,EAQMM,EAAQ,KACZ,IAAMC,EAAgBV,EACtBA,EAAQ,EAAE,CACNU,EAAczH,MAAM,EACtBoH,EAAW,KACTD,EAAc,KACZM,EAAc7J,OAAO,CAAC,IACpBqJ,EAASC,EACX,EACF,EACF,EAEJ,EAOA,MAAO,CACLxC,MAjDY,IACZ,IAAIpG,CACJ0I,CAAAA,IACA,GAAI,CACF1I,EAAS4I,GACX,QAAU,GAEHF,GACHQ,GAEJ,CACA,OAAOlJ,CACT,EAsCEoJ,WA5BiB,GACV,CAAC,GAAGC,KACTJ,EAAS,KACPL,KAAYS,EACd,EACF,EAwBAJ,SAAAA,EACAK,kBAVwB,IACxBX,EAAWlE,CACb,EASE8E,uBAR6B,IAC7BV,EAAgBpE,CAClB,EAOE+E,aAzDmB,IACnBV,EAAarE,CACf,CAwDA,CACF,G,6DClBIgF,EAAgB,IAjDA,cAAc,GAAY,CAC5C,CAACC,CAAM,CAAG,EAAK,EACdlL,CAAO,EACPC,CAAK,cACQ,CACZ,KAAK,GACL,IAAI,CAAC,CAACA,CAAK,CAAG,IACZ,GAAI,CAAC,IAAQ,EAAIC,OAAOC,gBAAgB,CAAE,CACxC,IAAMgL,EAAiB,IAAMC,EAAS,IAChCC,EAAkB,IAAMD,EAAS,IAGvC,OAFAlL,OAAOC,gBAAgB,CAAC,SAAUgL,EAAgB,IAClDjL,OAAOC,gBAAgB,CAAC,UAAWkL,EAAiB,IAC7C,KACLnL,OAAOI,mBAAmB,CAAC,SAAU6K,GACrCjL,OAAOI,mBAAmB,CAAC,UAAW+K,EACxC,CACF,CAEF,CACF,CACA9K,aAAc,CACP,IAAI,CAAC,CAACP,CAAO,EAChB,IAAI,CAACQ,gBAAgB,CAAC,IAAI,CAAC,CAACP,CAAK,CAErC,CACAQ,eAAgB,CACT,IAAI,CAACC,YAAY,KACpB,IAAI,CAAC,CAACV,CAAO,KACb,IAAI,CAAC,CAACA,CAAO,CAAG,KAAK,EAEzB,CACAQ,iBAAiBP,CAAK,CAAE,CACtB,IAAI,CAAC,CAACA,CAAK,CAAGA,EACd,IAAI,CAAC,CAACD,CAAO,KACb,IAAI,CAAC,CAACA,CAAO,CAAGC,EAAM,IAAI,CAACqL,SAAS,CAACC,IAAI,CAAC,IAAI,EAChD,CACAD,UAAUJ,CAAM,CAAE,CACA,IAAI,CAAC,CAACA,CAAM,GAAKA,IAE/B,IAAI,CAAC,CAACA,CAAM,CAAGA,EACf,IAAI,CAACrK,SAAS,CAACC,OAAO,CAAC,IACrBV,EAAS8K,EACX,GAEJ,CACAM,UAAW,CACT,OAAO,IAAI,CAAC,CAACN,CAAM,CAEvB,C,2FCxCIO,EAAQ,cAAc,GAAS,CACjC,CAACC,CAAY,EACZC,CAAW,EACXC,CAAK,EACLpH,CAAO,EACPqH,CAAc,EACdC,CAAmB,aACRrH,CAAM,CAAE,CAClB,KAAK,GACL,IAAI,CAAC,CAACqH,CAAmB,CAAG,GAC5B,IAAI,CAAC,CAACD,CAAc,CAAGpH,EAAOoH,cAAc,CAC5C,IAAI,CAACjH,UAAU,CAACH,EAAOhD,OAAO,EAC9B,IAAI,CAAC6C,SAAS,CAAG,EAAE,CACnB,IAAI,CAAC,CAACsH,CAAK,CAAGnH,EAAOmH,KAAK,CAC1B,IAAI,CAACvI,QAAQ,CAAGoB,EAAOpB,QAAQ,CAC/B,IAAI,CAAC0I,SAAS,CAAGtH,EAAOsH,SAAS,CACjC,IAAI,CAAC,CAACL,CAAY,CAAGjH,EAAO1C,KAAK,EAAI4C,SAyUhBlD,CAAO,EAC9B,IAAMO,EAAO,mBAAOP,EAAQuK,WAAW,CAAkBvK,EAAQuK,WAAW,GAAKvK,EAAQuK,WAAW,CAC9FC,EAAUjK,KAAc,IAAdA,EACVkK,EAAuBD,EAAU,mBAAOxK,EAAQyK,oBAAoB,CAAkBzK,EAAQyK,oBAAoB,GAAKzK,EAAQyK,oBAAoB,CAAG,EAC5J,MAAO,CACLlK,KAAAA,EACAmK,gBAAiB,EACjBC,cAAeH,EAAUC,GAAwBxE,KAAKC,GAAG,GAAK,EAC9DtB,MAAO,KACPgG,iBAAkB,EAClBC,eAAgB,EAChBC,kBAAmB,EACnBC,mBAAoB,KACpBC,UAAW,KACXC,cAAe,GACf9G,OAAQqG,EAAU,UAAY,UAC9BU,YAAa,MACf,CACF,EA3VyD,IAAI,CAAClL,OAAO,EACjE,IAAI,CAACM,KAAK,CAAG,IAAI,CAAC,CAAC2J,CAAY,CAC/B,IAAI,CAAC7G,UAAU,EACjB,CACA,IAAIjD,MAAO,CACT,OAAO,IAAI,CAACH,OAAO,CAACG,IAAI,CAE1B,IAAIgL,SAAU,CACZ,OAAO,IAAI,CAAC,CAACpI,CAAO,EAAEoI,OACxB,CACAhI,WAAWnD,CAAO,CAAE,CAClB,IAAI,CAACA,OAAO,CAAG,CAAE,GAAG,IAAI,CAAC,CAACoK,CAAc,CAAE,GAAGpK,CAAO,EACpD,IAAI,CAACqD,YAAY,CAAC,IAAI,CAACrD,OAAO,CAACsD,MAAM,CACvC,CACAY,gBAAiB,CACV,IAAI,CAACrB,SAAS,CAACpB,MAAM,EAAI,aAAI,CAACnB,KAAK,CAAC4K,WAAW,EAClD,IAAI,CAAC,CAACf,CAAK,CAAC/F,MAAM,CAAC,IAAI,CAE3B,CACAgH,QAAQC,CAAO,CAAErL,CAAO,CAAE,CACxB,IAAMO,EAAO,SAAY,IAAI,CAACD,KAAK,CAACC,IAAI,CAAE8K,EAAS,IAAI,CAACrL,OAAO,EAO/D,OANA,IAAI,CAAC,CAAC6E,CAAQ,CAAC,CACbtE,KAAAA,EACAsD,KAAM,UACN8G,cAAe3K,GAASsL,UACxBC,OAAQvL,GAASuL,MACnB,GACOhL,CACT,CACAiL,SAASlL,CAAK,CAAEmL,CAAe,CAAE,CAC/B,IAAI,CAAC,CAAC5G,CAAQ,CAAC,CAAEhB,KAAM,WAAYvD,MAAAA,EAAOmL,gBAAAA,CAAgB,EAC5D,CACAC,OAAO1L,CAAO,CAAE,CACd,IAAMmL,EAAU,IAAI,CAAC,CAACpI,CAAO,EAAEoI,QAE/B,OADA,IAAI,CAAC,CAACpI,CAAO,EAAE2I,OAAO1L,GACfmL,EAAUA,EAAQQ,IAAI,CAAC,IAAI,EAAExD,KAAK,CAAC,IAAI,EAAI5G,QAAQG,OAAO,EACnE,CACAkK,SAAU,CACR,KAAK,CAACA,UACN,IAAI,CAACF,MAAM,CAAC,CAAEG,OAAQ,EAAK,EAC7B,CACAC,OAAQ,CACN,IAAI,CAACF,OAAO,GACZ,IAAI,CAACJ,QAAQ,CAAC,IAAI,CAAC,CAACvB,CAAY,CAClC,CACA8B,UAAW,CACT,OAAO,IAAI,CAAClJ,SAAS,CAACmJ,IAAI,CACxB,GAAc,CAAmD,IAAnD,SAAexI,EAASxD,OAAO,CAACiM,OAAO,CAAE,IAAI,EAE/D,CACAC,YAAa,CACX,OAAO,IAAI,CAACC,iBAAiB,GAAK,GAAK,CAAC,IAAI,CAACJ,QAAQ,EACvD,CACAK,SAAU,OACR,EAAI,IAAI,CAAC9L,KAAK,CAAC2K,aAAa,GAGxB,IAAI,CAACkB,iBAAiB,GAAK,EACtB,IAAI,CAACtJ,SAAS,CAACmJ,IAAI,CACxB,GAAcxI,EAAS6I,gBAAgB,GAAGD,OAAO,EAG9C,KAAyB,IAAzB,IAAI,CAAC9L,KAAK,CAACC,IAAI,CACxB,CACA+L,cAAcC,EAAY,CAAC,CAAE,CAC3B,OAAO,IAAI,CAACjM,KAAK,CAAC2K,aAAa,EAAI,KAAyB,IAAzB,IAAI,CAAC3K,KAAK,CAACC,IAAI,EAAe,CAAC,SAAe,IAAI,CAACD,KAAK,CAACqK,aAAa,CAAE4B,EAC7G,CACA3N,SAAU,CACR,IAAM4E,EAAW,IAAI,CAACX,SAAS,CAACsE,IAAI,CAAC,GAAOlD,EAAEuI,wBAAwB,IACtEhJ,GAAUiJ,QAAQ,CAAEC,cAAe,EAAM,GACzC,IAAI,CAAC,CAAC3J,CAAO,EAAEsB,UACjB,CACAsF,UAAW,CACT,IAAMnG,EAAW,IAAI,CAACX,SAAS,CAACsE,IAAI,CAAC,GAAOlD,EAAE0I,sBAAsB,IACpEnJ,GAAUiJ,QAAQ,CAAEC,cAAe,EAAM,GACzC,IAAI,CAAC,CAAC3J,CAAO,EAAEsB,UACjB,CACAd,YAAYC,CAAQ,CAAE,CACf,IAAI,CAACX,SAAS,CAACY,QAAQ,CAACD,KAC3B,IAAI,CAACX,SAAS,CAACa,IAAI,CAACF,GACpB,IAAI,CAACG,cAAc,GACnB,IAAI,CAAC,CAACwG,CAAK,CAACvG,MAAM,CAAC,CAAEC,KAAM,gBAAiBhE,MAAO,IAAI,CAAE2D,SAAAA,CAAS,GAEtE,CACAO,eAAeP,CAAQ,CAAE,CACnB,IAAI,CAACX,SAAS,CAACY,QAAQ,CAACD,KAC1B,IAAI,CAACX,SAAS,CAAG,IAAI,CAACA,SAAS,CAACmB,MAAM,CAAC,GAAOC,IAAMT,GAC/C,IAAI,CAACX,SAAS,CAACpB,MAAM,GACpB,IAAI,CAAC,CAACsB,CAAO,GACX,IAAI,CAAC,CAACsH,CAAmB,CAC3B,IAAI,CAAC,CAACtH,CAAO,CAAC2I,MAAM,CAAC,CAAEkB,OAAQ,EAAK,GAEpC,IAAI,CAAC,CAAC7J,CAAO,CAAC8J,WAAW,IAG7B,IAAI,CAACzJ,UAAU,IAEjB,IAAI,CAAC,CAAC+G,CAAK,CAACvG,MAAM,CAAC,CAAEC,KAAM,kBAAmBhE,MAAO,IAAI,CAAE2D,SAAAA,CAAS,GAExE,CACA2I,mBAAoB,CAClB,OAAO,IAAI,CAACtJ,SAAS,CAACpB,MAAM,CAE9BqL,YAAa,CACN,IAAI,CAACxM,KAAK,CAAC2K,aAAa,EAC3B,IAAI,CAAC,CAACpG,CAAQ,CAAC,CAAEhB,KAAM,YAAa,EAExC,CACAkJ,MAAM/M,CAAO,CAAEE,CAAY,CAAE,CAC3B,GAAI,aAAI,CAACI,KAAK,CAAC4K,WAAW,EACxB,GAAI,KAAyB,IAAzB,IAAI,CAAC5K,KAAK,CAACC,IAAI,EAAeL,GAAcwM,cAC9C,IAAI,CAAChB,MAAM,CAAC,CAAEG,OAAQ,EAAK,QACtB,GAAI,IAAI,CAAC,CAAC9I,CAAO,CAEtB,OADA,IAAI,CAAC,CAACA,CAAO,CAACiK,aAAa,GACpB,IAAI,CAAC,CAACjK,CAAO,CAACoI,OAAO,CAMhC,GAHInL,GACF,IAAI,CAACmD,UAAU,CAACnD,GAEd,CAAC,IAAI,CAACA,OAAO,CAACmB,OAAO,CAAE,CACzB,IAAMqC,EAAW,IAAI,CAACX,SAAS,CAACsE,IAAI,CAAC,GAAOlD,EAAEjE,OAAO,CAACmB,OAAO,EACzDqC,GACF,IAAI,CAACL,UAAU,CAACK,EAASxD,OAAO,CAEpC,CAQA,IAAMiN,EAAkB,IAAIC,gBACtBvM,EAAoB,IACxBC,OAAOC,cAAc,CAACC,EAAQ,SAAU,CACtCC,WAAY,GACZC,IAAK,KACH,IAAI,CAAC,CAACqJ,CAAmB,CAAG,GACrB4C,EAAgBhM,MAAM,CAEjC,EACF,EAkBMrB,EAAU,CACdM,aAAAA,EACAF,QAAS,IAAI,CAACA,OAAO,CACrB4B,SAAU,IAAI,CAACA,QAAQ,CACvBtB,MAAO,IAAI,CAACA,KAAK,CACjBR,QAtBc,KACd,IAAMqB,EAAU,SAAc,IAAI,CAACnB,OAAO,CAAEE,GACtCyB,EAAiB,CACrBC,SAAU,IAAI,CAACA,QAAQ,CACvBzB,KAAM,IAAI,CAACA,IAAI,QAIjB,CAFAQ,EAAkBgB,GAClB,IAAI,CAAC,CAAC0I,CAAmB,CAAG,GACxB,IAAI,CAACrK,OAAO,CAACwC,SAAS,EACjB,IAAI,CAACxC,OAAO,CAACwC,SAAS,CAC3BrB,EACAQ,EACA,IAAI,EAGDR,EAAQQ,EACjB,CAOA,EACAhB,EAAkBf,GAClB,IAAI,CAACI,OAAO,CAACmN,QAAQ,EAAExN,QACrBC,EACA,IAAI,EAEN,IAAI,CAAC,CAACsK,CAAW,CAAG,IAAI,CAAC5J,KAAK,CAC1B,cAAI,CAACA,KAAK,CAAC4K,WAAW,EAAe,IAAI,CAAC5K,KAAK,CAAC0K,SAAS,GAAKpL,EAAQM,YAAY,EAAEC,IAAG,GACzF,IAAI,CAAC,CAAC0E,CAAQ,CAAC,CAAEhB,KAAM,QAAS1D,KAAMP,EAAQM,YAAY,EAAEC,IAAK,GAEnE,IAAMwF,EAAU,IACR,SAAiBf,IAAUA,EAAMiH,MAAM,EAC3C,IAAI,CAAC,CAAChH,CAAQ,CAAC,CACbhB,KAAM,QACNe,MAAAA,CACF,GAEG,SAAiBA,KACpB,IAAI,CAAC,CAACuF,CAAK,CAACnH,MAAM,CAAC2C,OAAO,GACxBf,EACA,IAAI,EAEN,IAAI,CAAC,CAACuF,CAAK,CAACnH,MAAM,CAAC0C,SAAS,GAC1B,IAAI,CAACpF,KAAK,CAACC,IAAI,CACfqE,EACA,IAAI,GAGH,IAAI,CAACwI,oBAAoB,EAC5B,IAAI,CAAChK,UAAU,GAEjB,IAAI,CAACgK,oBAAoB,CAAG,EAC9B,EA0CA,OAzCA,IAAI,CAAC,CAACrK,CAAO,CAAG,SAAc,CAC5BsK,eAAgBnN,GAAcmN,eAC9B7I,GAAI5E,EAAQE,OAAO,CACnBwN,MAAOL,EAAgBK,KAAK,CAACxD,IAAI,CAACmD,GAClCxH,UAAW,IACT,GAAIlF,KAAc,IAAdA,EAAiB,CAMnBoF,EAAQ,MAAU,CAAC,EAAE,IAAI,CAAC2E,SAAS,CAAC,kBAAkB,CAAC,GACvD,MACF,CACA,IAAI,CAACc,OAAO,CAAC7K,GACb,IAAI,CAAC,CAAC4J,CAAK,CAACnH,MAAM,CAACyC,SAAS,GAAGlF,EAAM,IAAI,EACzC,IAAI,CAAC,CAAC4J,CAAK,CAACnH,MAAM,CAAC0C,SAAS,GAC1BnF,EACA,IAAI,CAACD,KAAK,CAACsE,KAAK,CAChB,IAAI,EAED,IAAI,CAACwI,oBAAoB,EAC5B,IAAI,CAAChK,UAAU,GAEjB,IAAI,CAACgK,oBAAoB,CAAG,EAC9B,EACAzH,QAAAA,EACAjB,OAAQ,CAACC,EAAcC,KACrB,IAAI,CAAC,CAACC,CAAQ,CAAC,CAAEhB,KAAM,SAAUc,aAAAA,EAAcC,MAAAA,CAAM,EACvD,EACAE,QAAS,KACP,IAAI,CAAC,CAACD,CAAQ,CAAC,CAAEhB,KAAM,OAAQ,EACjC,EACAkB,WAAY,KACV,IAAI,CAAC,CAACF,CAAQ,CAAC,CAAEhB,KAAM,UAAW,EACpC,EACAmB,MAAOpF,EAAQI,OAAO,CAACgF,KAAK,CAC5BC,WAAYrF,EAAQI,OAAO,CAACiF,UAAU,CACtCC,YAAatF,EAAQI,OAAO,CAACkF,WAAW,CACxCC,OAAQ,IAAM,EAChB,GACO,IAAI,CAAC,CAACpC,CAAO,CAACyC,KAAK,EAC5B,CACA,CAACX,CAAQ,CAACgB,CAAM,EAmEd,IAAI,CAACvF,KAAK,CAAGwF,CAlEG,IACd,OAAQD,EAAOhC,IAAI,EACjB,IAAK,SACH,MAAO,CACL,GAAGvD,CAAK,CACRwK,kBAAmBjF,EAAOlB,YAAY,CACtCoG,mBAAoBlF,EAAOjB,KAAK,CAEpC,KAAK,QACH,MAAO,CACL,GAAGtE,CAAK,CACR4K,YAAa,QACf,CACF,KAAK,WACH,MAAO,CACL,GAAG5K,CAAK,CACR4K,YAAa,UACf,CACF,KAAK,QACH,MAAO,CACL,GAAG5K,CAAK,CACR,GAAGiN,EAAWjN,EAAMC,IAAI,CAAE,IAAI,CAACP,OAAO,CAAC,CACvCgL,UAAWnF,EAAO1F,IAAI,EAAI,IAC5B,CACF,KAAK,UACH,MAAO,CACL,GAAGG,CAAK,CACRC,KAAMsF,EAAOtF,IAAI,CACjBmK,gBAAiBpK,EAAMoK,eAAe,CAAG,EACzCC,cAAe9E,EAAO8E,aAAa,EAAI1E,KAAKC,GAAG,GAC/CtB,MAAO,KACPqG,cAAe,GACf9G,OAAQ,UACR,GAAG,CAAC0B,EAAO0F,MAAM,EAAI,CACnBL,YAAa,OACbJ,kBAAmB,EACnBC,mBAAoB,IACtB,CAAC,CAEL,KAAK,QACH,IAAMnG,EAAQiB,EAAOjB,KAAK,CAC1B,GAAI,SAAiBA,IAAUA,EAAMgI,MAAM,EAAI,IAAI,CAAC,CAAC1C,CAAW,CAC9D,MAAO,CAAE,GAAG,IAAI,CAAC,CAACA,CAAW,CAAEgB,YAAa,MAAO,EAErD,MAAO,CACL,GAAG5K,CAAK,CACRsE,MAAAA,EACAgG,iBAAkBtK,EAAMsK,gBAAgB,CAAG,EAC3CC,eAAgB5E,KAAKC,GAAG,GACxB4E,kBAAmBxK,EAAMwK,iBAAiB,CAAG,EAC7CC,mBAAoBnG,EACpBsG,YAAa,OACb/G,OAAQ,OACV,CACF,KAAK,aACH,MAAO,CACL,GAAG7D,CAAK,CACR2K,cAAe,EACjB,CACF,KAAK,WACH,MAAO,CACL,GAAG3K,CAAK,CACR,GAAGuF,EAAOvF,KAAK,CAErB,CACF,GACqB,IAAI,CAACA,KAAK,EAC/B,GAAa,CAAC6F,KAAK,CAAC,KAClB,IAAI,CAACtD,SAAS,CAACxD,OAAO,CAAC,IACrBmE,EAASgK,aAAa,EACxB,GACA,IAAI,CAAC,CAACrD,CAAK,CAACvG,MAAM,CAAC,CAAE/D,MAAO,IAAI,CAAEgE,KAAM,UAAWgC,OAAAA,CAAO,EAC5D,EACF,CACF,EACA,SAAS0H,EAAWhN,CAAI,CAAEP,CAAO,EAC/B,MAAO,CACL8K,kBAAmB,EACnBC,mBAAoB,KACpBG,YAAa,SAASlL,EAAQkF,WAAW,EAAI,WAAa,SAC1D,GAAG3E,KAAc,IAAdA,GAAmB,CACpBqE,MAAO,KACPT,OAAQ,SACV,CAAC,CAEL,C,kFC9VIsJ,EAAa,cAAc,GAAY,CACzCnH,YAAYtD,EAAS,CAAC,CAAC,CAAE,CACvB,KAAK,GACL,IAAI,CAACA,MAAM,CAAGA,EACd,IAAI,CAAC,CAAC0K,CAAO,CAAmB,IAAIlH,GACtC,CACA,CAACkH,CAAO,CACRjH,MAAMC,CAAM,CAAE1G,CAAO,CAAEM,CAAK,CAAE,CAC5B,IAAMsB,EAAW5B,EAAQ4B,QAAQ,CAC3B0I,EAAYtK,EAAQsK,SAAS,EAAI,SAAsB1I,EAAU5B,GACnEH,EAAQ,IAAI,CAACmB,GAAG,CAACsJ,GAYrB,OAXKzK,IACHA,EAAQ,IAAI,GAAK,CAAC,CAChBsK,MAAO,IAAI,CACXvI,SAAAA,EACA0I,UAAAA,EACAtK,QAAS0G,EAAOiH,mBAAmB,CAAC3N,GACpCM,MAAAA,EACA8J,eAAgB1D,EAAOkH,gBAAgB,CAAChM,EAC1C,GACA,IAAI,CAACgF,GAAG,CAAC/G,IAEJA,CACT,CACA+G,IAAI/G,CAAK,CAAE,CACJ,IAAI,CAAC,CAAC6N,CAAO,CAAC1G,GAAG,CAACnH,EAAMyK,SAAS,IACpC,IAAI,CAAC,CAACoD,CAAO,CAAC3G,GAAG,CAAClH,EAAMyK,SAAS,CAAEzK,GACnC,IAAI,CAAC+D,MAAM,CAAC,CACVC,KAAM,QACNhE,MAAAA,CACF,GAEJ,CACAuE,OAAOvE,CAAK,CAAE,CACZ,IAAMgO,EAAa,IAAI,CAAC,CAACH,CAAO,CAAC1M,GAAG,CAACnB,EAAMyK,SAAS,EAChDuD,IACFhO,EAAM+L,OAAO,GACTiC,IAAehO,GACjB,IAAI,CAAC,CAAC6N,CAAO,CAACzG,MAAM,CAACpH,EAAMyK,SAAS,EAEtC,IAAI,CAAC1G,MAAM,CAAC,CAAEC,KAAM,UAAWhE,MAAAA,CAAM,GAEzC,CACAyH,OAAQ,CACN,GAAa,CAACnB,KAAK,CAAC,KAClB,IAAI,CAACoB,MAAM,GAAGlI,OAAO,CAAC,IACpB,IAAI,CAAC+E,MAAM,CAACvE,EACd,EACF,EACF,CACAmB,IAAIsJ,CAAS,CAAE,CACb,OAAO,IAAI,CAAC,CAACoD,CAAO,CAAC1M,GAAG,CAACsJ,EAC3B,CACA/C,QAAS,CACP,MAAO,IAAI,IAAI,CAAC,CAACmG,CAAO,CAAClG,MAAM,GAAG,CAEpCL,KAAKO,CAAO,CAAE,CACZ,IAAMC,EAAmB,CAAEC,MAAO,GAAM,GAAGF,CAAO,EAClD,OAAO,IAAI,CAACH,MAAM,GAAGJ,IAAI,CACvB,GAAW,SAAWQ,EAAkB9H,GAE5C,CACAgI,QAAQH,EAAU,CAAC,CAAC,CAAE,CACpB,IAAMgG,EAAU,IAAI,CAACnG,MAAM,GAC3B,OAAO3G,OAAOkN,IAAI,CAACpG,GAASjG,MAAM,CAAG,EAAIiM,EAAQ1J,MAAM,CAAC,GAAW,SAAW0D,EAAS7H,IAAU6N,CACnG,CACA9J,OAAOkE,CAAK,CAAE,CACZ,GAAa,CAAC3B,KAAK,CAAC,KAClB,IAAI,CAAC/G,SAAS,CAACC,OAAO,CAAC,IACrBV,EAASmJ,EACX,EACF,EACF,CACAlJ,SAAU,CACR,GAAa,CAACuH,KAAK,CAAC,KAClB,IAAI,CAACoB,MAAM,GAAGlI,OAAO,CAAC,IACpBQ,EAAMjB,OAAO,EACf,EACF,EACF,CACA+K,UAAW,CACT,GAAa,CAACxD,KAAK,CAAC,KAClB,IAAI,CAACoB,MAAM,GAAGlI,OAAO,CAAC,IACpBQ,EAAM8J,QAAQ,EAChB,EACF,EACF,CACF,C,mHC5EIoE,EAAc,MAChB,CAACC,CAAU,EACVlL,CAAa,EACbsH,CAAc,EACd6D,CAAa,EACbC,CAAgB,EAChBC,CAAU,EACVC,CAAgB,EAChBC,CAAiB,aACNrL,EAAS,CAAC,CAAC,CAAE,CACvB,IAAI,CAAC,CAACgL,CAAU,CAAGhL,EAAOgL,UAAU,EAAI,IAAI,GAAU,CACtD,IAAI,CAAC,CAAClL,CAAa,CAAGE,EAAOF,aAAa,EAAI,IAAI,GAAa,CAC/D,IAAI,CAAC,CAACsH,CAAc,CAAGpH,EAAOoH,cAAc,EAAI,CAAC,EACjD,IAAI,CAAC,CAAC6D,CAAa,CAAmB,IAAIzH,IAC1C,IAAI,CAAC,CAAC0H,CAAgB,CAAmB,IAAI1H,IAC7C,IAAI,CAAC,CAAC2H,CAAU,CAAG,CACrB,CACAG,OAAQ,CACN,IAAI,CAAC,CAACH,CAAU,GACS,IAArB,IAAI,CAAC,CAACA,CAAU,GAEpB,IAAI,CAAC,CAACC,CAAgB,CAAG,GAAY,CAACG,SAAS,CAAC,MAAOjQ,IACjDA,IACF,MAAM,IAAI,CAACyJ,qBAAqB,GAChC,IAAI,CAAC,CAACiG,CAAU,CAACpP,OAAO,GAE5B,GACA,IAAI,CAAC,CAACyP,CAAiB,CAAG,GAAa,CAACE,SAAS,CAAC,MAAO9E,IACnDA,IACF,MAAM,IAAI,CAAC1B,qBAAqB,GAChC,IAAI,CAAC,CAACiG,CAAU,CAACrE,QAAQ,GAE7B,GACF,CACA6E,SAAU,CACR,IAAI,CAAC,CAACL,CAAU,GACS,IAArB,IAAI,CAAC,CAACA,CAAU,GAEpB,IAAI,CAAC,CAACC,CAAgB,KACtB,IAAI,CAAC,CAACA,CAAgB,CAAG,KAAK,EAC9B,IAAI,CAAC,CAACC,CAAiB,KACvB,IAAI,CAAC,CAACA,CAAiB,CAAG,KAAK,EACjC,CACAI,WAAW/G,CAAO,CAAE,CAClB,OAAO,IAAI,CAAC,CAACsG,CAAU,CAACnG,OAAO,CAAC,CAAE,GAAGH,CAAO,CAAEwD,YAAa,UAAW,GAAGzJ,MAAM,CAEjFiN,WAAWhH,CAAO,CAAE,CAClB,OAAO,IAAI,CAAC,CAAC5E,CAAa,CAAC+E,OAAO,CAAC,CAAE,GAAGH,CAAO,CAAEvD,OAAQ,SAAU,GAAG1C,MAAM,CAE9EkN,aAAa/M,CAAQ,CAAE,CACrB,IAAM5B,EAAU,IAAI,CAAC2N,mBAAmB,CAAC,CAAE/L,SAAAA,CAAS,GACpD,OAAO,IAAI,CAAC,CAACoM,CAAU,CAAChN,GAAG,CAAChB,EAAQsK,SAAS,GAAGhK,MAAMC,IACxD,CACAqO,gBAAgB5O,CAAO,CAAE,CACvB,IAAM6O,EAAa,IAAI,CAACF,YAAY,CAAC3O,EAAQ4B,QAAQ,EACrD,GAAIiN,KAAoB,IAApBA,EACF,OAAO,IAAI,CAACC,UAAU,CAAC9O,EACpB,EACH,IAAM+O,EAAmB,IAAI,CAACpB,mBAAmB,CAAC3N,GAC5CH,EAAQ,IAAI,CAAC,CAACmO,CAAU,CAACvH,KAAK,CAAC,IAAI,CAAEsI,GAI3C,OAHI/O,EAAQgP,iBAAiB,EAAInP,EAAMyM,aAAa,CAAC,SAAiByC,EAAiBxC,SAAS,CAAE1M,KAC3F,IAAI,CAACoP,aAAa,CAACF,GAEnBxN,QAAQG,OAAO,CAACmN,EACzB,CACF,CACAK,eAAexH,CAAO,CAAE,CACtB,OAAO,IAAI,CAAC,CAACsG,CAAU,CAACnG,OAAO,CAACH,GAASQ,GAAG,CAAC,CAAC,CAAEtG,SAAAA,CAAQ,CAAEtB,MAAAA,CAAK,CAAE,GAExD,CAACsB,EADKtB,EAAMC,IAAI,CACA,CAE3B,CACA4O,aAAavN,CAAQ,CAAEwN,CAAO,CAAEpP,CAAO,CAAE,CACvC,IAAM+O,EAAmB,IAAI,CAACpB,mBAAmB,CAAC,CAAE/L,SAAAA,CAAS,GACvD/B,EAAQ,IAAI,CAAC,CAACmO,CAAU,CAAChN,GAAG,CAChC+N,EAAiBzE,SAAS,EAEtB+E,EAAWxP,GAAOS,MAAMC,KACxBA,EAAO,SAAiB6O,EAASC,GACvC,GAAI9O,KAAc,IAAdA,EAGJ,OAAO,IAAI,CAAC,CAACyN,CAAU,CAACvH,KAAK,CAAC,IAAI,CAAEsI,GAAkB3D,OAAO,CAAC7K,EAAM,CAAE,GAAGP,CAAO,CAAEuL,OAAQ,EAAK,EACjG,CACA+D,eAAe5H,CAAO,CAAE0H,CAAO,CAAEpP,CAAO,CAAE,CACxC,OAAO,GAAa,CAACmG,KAAK,CACxB,IAAM,IAAI,CAAC,CAAC6H,CAAU,CAACnG,OAAO,CAACH,GAASQ,GAAG,CAAC,CAAC,CAAEtG,SAAAA,CAAQ,CAAE,GAAK,CAC5DA,EACA,IAAI,CAACuN,YAAY,CAACvN,EAAUwN,EAASpP,GACtC,EAEL,CACAuP,cAAc3N,CAAQ,CAAE,CACtB,IAAM5B,EAAU,IAAI,CAAC2N,mBAAmB,CAAC,CAAE/L,SAAAA,CAAS,GACpD,OAAO,IAAI,CAAC,CAACoM,CAAU,CAAChN,GAAG,CAAChB,EAAQsK,SAAS,GAAGhK,KAClD,CACAkP,cAAc9H,CAAO,CAAE,CACrB,IAAMsG,EAAa,IAAI,CAAC,CAACA,CAAU,CACnC,GAAa,CAAC7H,KAAK,CAAC,KAClB6H,EAAWnG,OAAO,CAACH,GAASrI,OAAO,CAAC,IAClC2O,EAAW5J,MAAM,CAACvE,EACpB,EACF,EACF,CACA4P,aAAa/H,CAAO,CAAE1H,CAAO,CAAE,CAC7B,IAAMgO,EAAa,IAAI,CAAC,CAACA,CAAU,CAC7B0B,EAAiB,CACrB7L,KAAM,SACN,GAAG6D,CAAO,EAEZ,OAAO,GAAa,CAACvB,KAAK,CAAC,KACzB6H,EAAWnG,OAAO,CAACH,GAASrI,OAAO,CAAC,IAClCQ,EAAMiM,KAAK,EACb,GACO,IAAI,CAAC6D,cAAc,CAACD,EAAgB1P,IAE/C,CACA4P,cAAclI,EAAU,CAAC,CAAC,CAAEmI,EAAgB,CAAC,CAAC,CAAE,CAC9C,IAAMC,EAAyB,CAAElD,OAAQ,GAAM,GAAGiD,CAAa,EAI/D,OAAOtO,QAAQ0G,GAAG,CAHD,GAAa,CAAC9B,KAAK,CAClC,IAAM,IAAI,CAAC,CAAC6H,CAAU,CAACnG,OAAO,CAACH,GAASQ,GAAG,CAAC,GAAWrI,EAAM6L,MAAM,CAACoE,MAEzCnE,IAAI,CAAC,IAAI,EAAExD,KAAK,CAAC,IAAI,CACpD,CACA4H,kBAAkBrI,EAAU,CAAC,CAAC,CAAE1H,EAAU,CAAC,CAAC,CAAE,CAC5C,OAAO,GAAa,CAACmG,KAAK,CAAC,KAIzB,GAHA,IAAI,CAAC,CAAC6H,CAAU,CAACnG,OAAO,CAACH,GAASrI,OAAO,CAAC,IACxCQ,EAAMiN,UAAU,EAClB,GACIpF,SAAAA,EAAQsI,WAAW,CACrB,OAAOzO,QAAQG,OAAO,GAExB,IAAMgO,EAAiB,CACrB,GAAGhI,CAAO,CACV7D,KAAM6D,EAAQsI,WAAW,EAAItI,EAAQ7D,IAAI,EAAI,QAC/C,EACA,OAAO,IAAI,CAAC8L,cAAc,CAACD,EAAgB1P,EAC7C,EACF,CACA2P,eAAejI,EAAU,CAAC,CAAC,CAAE1H,CAAO,CAAE,CACpC,IAAME,EAAe,CACnB,GAAGF,CAAO,CACV0M,cAAe1M,GAAS0M,eAAiB,EAC3C,EAUA,OAAOnL,QAAQ0G,GAAG,CATD,GAAa,CAAC9B,KAAK,CAClC,IAAM,IAAI,CAAC,CAAC6H,CAAU,CAACnG,OAAO,CAACH,GAAS1D,MAAM,CAAC,GAAW,CAACnE,EAAMqM,UAAU,IAAIhE,GAAG,CAAC,IACjF,IAAIiD,EAAUtL,EAAMkN,KAAK,CAAC,KAAK,EAAG7M,GAIlC,OAHKA,EAAa+P,YAAY,EAC5B9E,CAAAA,EAAUA,EAAQhD,KAAK,CAAC,IAAI,GAEvBtI,WAAAA,EAAMS,KAAK,CAAC4K,WAAW,CAAgB3J,QAAQG,OAAO,GAAKyJ,CACpE,KAE2BQ,IAAI,CAAC,IAAI,CACxC,CACAmD,WAAW9O,CAAO,CAAE,CAClB,IAAM+O,EAAmB,IAAI,CAACpB,mBAAmB,CAAC3N,EACnB,MAAK,IAAhC+O,EAAiB/J,KAAK,EACxB+J,CAAAA,EAAiB/J,KAAK,CAAG,EAAI,EAE/B,IAAMnF,EAAQ,IAAI,CAAC,CAACmO,CAAU,CAACvH,KAAK,CAAC,IAAI,CAAEsI,GAC3C,OAAOlP,EAAMyM,aAAa,CACxB,SAAiByC,EAAiBxC,SAAS,CAAE1M,IAC3CA,EAAMkN,KAAK,CAACgC,GAAoBxN,QAAQG,OAAO,CAAC7B,EAAMS,KAAK,CAACC,IAAI,CACtE,CACA0O,cAAcjP,CAAO,CAAE,CACrB,OAAO,IAAI,CAAC8O,UAAU,CAAC9O,GAAS2L,IAAI,CAAC,IAAI,EAAExD,KAAK,CAAC,IAAI,CACvD,CACA+H,mBAAmBlQ,CAAO,CAAE,CAE1B,OADAA,EAAQmN,QAAQ,CAAG,SAAsBnN,EAAQN,KAAK,EAC/C,IAAI,CAACoP,UAAU,CAAC9O,EACzB,CACAmQ,sBAAsBnQ,CAAO,CAAE,CAC7B,OAAO,IAAI,CAACkQ,kBAAkB,CAAClQ,GAAS2L,IAAI,CAAC,IAAI,EAAExD,KAAK,CAAC,IAAI,CAC/D,CACAJ,uBAAwB,QACtB,EAAI,CAAa,CAACgC,QAAQ,GACjB,IAAI,CAAC,CAACjH,CAAa,CAACiF,qBAAqB,GAE3CxG,QAAQG,OAAO,EACxB,CACA0O,eAAgB,CACd,OAAO,IAAI,CAAC,CAACpC,CAAU,CAEzBqC,kBAAmB,CACjB,OAAO,IAAI,CAAC,CAACvN,CAAa,CAE5BwN,mBAAoB,CAClB,OAAO,IAAI,CAAC,CAAClG,CAAc,CAE7BmG,kBAAkBvQ,CAAO,CAAE,CACzB,IAAI,CAAC,CAACoK,CAAc,CAAGpK,CACzB,CACAwQ,iBAAiB5O,CAAQ,CAAE5B,CAAO,CAAE,CAClC,IAAI,CAAC,CAACiO,CAAa,CAAClH,GAAG,CAAC,SAAQnF,GAAW,CACzCA,SAAAA,EACAwI,eAAgBpK,CAClB,EACF,CACA4N,iBAAiBhM,CAAQ,CAAE,CACzB,IAAM6O,EAAW,IAAI,IAAI,CAAC,CAACxC,CAAa,CAACzG,MAAM,GAAG,CAC9CzH,EAAS,CAAC,EAMd,OALA0Q,EAASpR,OAAO,CAAC,IACX,SAAgBuC,EAAU8O,EAAa9O,QAAQ,GACjD7B,CAAAA,EAAS,CAAE,GAAGA,CAAM,CAAE,GAAG2Q,EAAatG,cAAc,CAAC,CAEzD,GACOrK,CACT,CACA4Q,oBAAoBC,CAAW,CAAE5Q,CAAO,CAAE,CACxC,IAAI,CAAC,CAACkO,CAAgB,CAACnH,GAAG,CAAC,SAAQ6J,GAAc,CAC/CA,YAAAA,EACAxG,eAAgBpK,CAClB,EACF,CACA6Q,oBAAoBD,CAAW,CAAE,CAC/B,IAAMH,EAAW,IAAI,IAAI,CAAC,CAACvC,CAAgB,CAAC1G,MAAM,GAAG,CACjDzH,EAAS,CAAC,EAMd,OALA0Q,EAASpR,OAAO,CAAC,IACX,SAAgBuR,EAAaF,EAAaE,WAAW,GACvD7Q,CAAAA,EAAS,CAAE,GAAGA,CAAM,CAAE,GAAG2Q,EAAatG,cAAc,CAAC,CAEzD,GACOrK,CACT,CACA4N,oBAAoB3N,CAAO,CAAE,CAC3B,GAAIA,EAAQ8Q,UAAU,CACpB,OAAO9Q,EAET,IAAM+O,EAAmB,CACvB,GAAG,IAAI,CAAC,CAAC3E,CAAc,CAACsD,OAAO,CAC/B,GAAG,IAAI,CAACE,gBAAgB,CAAC5N,EAAQ4B,QAAQ,CAAC,CAC1C,GAAG5B,CAAO,CACV8Q,WAAY,EACd,EAmBA,OAlBK/B,EAAiBzE,SAAS,EAC7ByE,CAAAA,EAAiBzE,SAAS,CAAG,SAC3ByE,EAAiBnN,QAAQ,CACzBmN,EACF,EAE0C,KAAK,IAA7CA,EAAiBgC,kBAAkB,EACrChC,CAAAA,EAAiBgC,kBAAkB,CAAGhC,WAAAA,EAAiB7J,WAAW,EAE9B,KAAK,IAAvC6J,EAAiBkB,YAAY,EAC/BlB,CAAAA,EAAiBkB,YAAY,CAAG,CAAC,CAAClB,EAAiBiC,QAAQ,EAEzD,CAACjC,EAAiB7J,WAAW,EAAI6J,EAAiBvM,SAAS,EAC7DuM,CAAAA,EAAiB7J,WAAW,CAAG,cAAa,EAEb,KAA7B6J,EAAiB9C,OAAO,EAAa8C,EAAiB5N,OAAO,GAAK,IAAS,EAC7E4N,CAAAA,EAAiB9C,OAAO,CAAG,EAAI,EAE1B8C,CACT,CACApI,uBAAuB3G,CAAO,CAAE,QAC9B,GAAa8Q,WACJ9Q,EAEF,CACL,GAAG,IAAI,CAAC,CAACoK,CAAc,CAAC7D,SAAS,CACjC,GAAGvG,GAAS4Q,aAAe,IAAI,CAACC,mBAAmB,CAAC7Q,EAAQ4Q,WAAW,CAAC,CACxE,GAAG5Q,CAAO,CACV8Q,WAAY,EACd,CACF,CACAxJ,OAAQ,CACN,IAAI,CAAC,CAAC0G,CAAU,CAAC1G,KAAK,GACtB,IAAI,CAAC,CAACxE,CAAa,CAACwE,KAAK,EAC3B,CACF,C,6FC/QI2J,EAAgB,cAAc,GAAY,CAC5C3K,YAAYI,CAAM,CAAE1G,CAAO,CAAE,CAC3B,KAAK,GACL,IAAI,CAACA,OAAO,CAAGA,EACf,IAAI,CAAC,CAAC0G,CAAM,CAAGA,EACf,IAAI,CAAC,CAACwK,CAAW,CAAG,KACpB,IAAI,CAACC,WAAW,GAChB,IAAI,CAAChO,UAAU,CAACnD,EAClB,CACA,CAAC0G,CAAM,EACN0K,CAAY,CAAG,KAAK,CAAE,EACtBC,CAAwB,CAAG,KAAK,CAAE,EAClCC,CAAa,CAAG,KAAK,CAAE,EACvBC,CAAkB,EAClBC,CAAoB,EACpBN,CAAW,EACXO,CAAQ,EACRC,CAAY,EAGZC,CAAwB,EACxBC,CAAc,EACdC,CAAiB,EACjBC,CAAsB,EACtBC,CAAY,CAAmB,IAAIC,GAAM,CAC1Cb,aAAc,CACZ,IAAI,CAAC1E,OAAO,CAAG,IAAI,CAACA,OAAO,CAAC3C,IAAI,CAAC,IAAI,CACvC,CACAhL,aAAc,CACgB,IAAxB,IAAI,CAACM,SAAS,CAAC6S,IAAI,GACrB,IAAI,CAAC,CAACb,CAAY,CAAC7N,WAAW,CAAC,IAAI,EAC/B2O,EAAmB,IAAI,CAAC,CAACd,CAAY,CAAE,IAAI,CAACpR,OAAO,EACrD,IAAI,CAAC,CAACmS,CAAY,GAElB,IAAI,CAACC,YAAY,GAEnB,IAAI,CAAC,CAACC,CAAY,GAEtB,CACArT,eAAgB,CACT,IAAI,CAACC,YAAY,IACpB,IAAI,CAAC2M,OAAO,EAEhB,CACAe,wBAAyB,CACvB,OAAO2F,EACL,IAAI,CAAC,CAAClB,CAAY,CAClB,IAAI,CAACpR,OAAO,CACZ,IAAI,CAACA,OAAO,CAAC+Q,kBAAkB,CAEnC,CACAvE,0BAA2B,CACzB,OAAO8F,EACL,IAAI,CAAC,CAAClB,CAAY,CAClB,IAAI,CAACpR,OAAO,CACZ,IAAI,CAACA,OAAO,CAACuS,oBAAoB,CAErC,CACA3G,SAAU,CACR,IAAI,CAACxM,SAAS,CAAmB,IAAI4S,IACrC,IAAI,CAAC,CAACQ,CAAiB,GACvB,IAAI,CAAC,CAACC,CAAoB,GAC1B,IAAI,CAAC,CAACrB,CAAY,CAACrN,cAAc,CAAC,IAAI,CACxC,CACAZ,WAAWnD,CAAO,CAAE0S,CAAa,CAAE,CACjC,IAAMC,EAAc,IAAI,CAAC3S,OAAO,CAC1B4S,EAAY,IAAI,CAAC,CAACxB,CAAY,CAEpC,GADA,IAAI,CAACpR,OAAO,CAAG,IAAI,CAAC,CAAC0G,CAAM,CAACiH,mBAAmB,CAAC3N,GAC5C,KAA8B,IAA9B,IAAI,CAACA,OAAO,CAACiM,OAAO,EAAe,kBAAO,IAAI,CAACjM,OAAO,CAACiM,OAAO,EAAkB,mBAAO,IAAI,CAACjM,OAAO,CAACiM,OAAO,EAAmB,iBAAO,SAAe,IAAI,CAACjM,OAAO,CAACiM,OAAO,CAAE,IAAI,CAAC,CAACmF,CAAY,EAC9L,MAAM,MACJ,yEAGJ,IAAI,CAAC,CAACyB,CAAW,GACjB,IAAI,CAAC,CAACzB,CAAY,CAACjO,UAAU,CAAC,IAAI,CAACnD,OAAO,EACtC2S,EAAY7B,UAAU,EAAI,CAAC,SAAoB,IAAI,CAAC9Q,OAAO,CAAE2S,IAC/D,IAAI,CAAC,CAACjM,CAAM,CAAC0J,aAAa,GAAGxM,MAAM,CAAC,CAClCC,KAAM,yBACNhE,MAAO,IAAI,CAAC,CAACuR,CAAY,CACzB5N,SAAU,IAAI,GAGlB,IAAMsP,EAAU,IAAI,CAAC7T,YAAY,GAC7B6T,GAAWC,EACb,IAAI,CAAC,CAAC3B,CAAY,CAClBwB,EACA,IAAI,CAAC5S,OAAO,CACZ2S,IAEA,IAAI,CAAC,CAACR,CAAY,GAEpB,IAAI,CAACC,YAAY,CAACM,GACdI,GAAY,KAAI,CAAC,CAAC1B,CAAY,GAAKwB,GAAa,SAAe,IAAI,CAAC5S,OAAO,CAACiM,OAAO,CAAE,IAAI,CAAC,CAACmF,CAAY,IAAM,SAAeuB,EAAY1G,OAAO,CAAE,IAAI,CAAC,CAACmF,CAAY,GAAK,SAAiB,IAAI,CAACpR,OAAO,CAACuM,SAAS,CAAE,IAAI,CAAC,CAAC6E,CAAY,IAAM,SAAiBuB,EAAYpG,SAAS,CAAE,IAAI,CAAC,CAAC6E,CAAY,IACrS,IAAI,CAAC,CAAC4B,CAAkB,GAE1B,IAAMC,EAAsB,IAAI,CAAC,CAACC,CAAsB,GACpDJ,GAAY,KAAI,CAAC,CAAC1B,CAAY,GAAKwB,GAAa,SAAe,IAAI,CAAC5S,OAAO,CAACiM,OAAO,CAAE,IAAI,CAAC,CAACmF,CAAY,IAAM,SAAeuB,EAAY1G,OAAO,CAAE,IAAI,CAAC,CAACmF,CAAY,GAAK6B,IAAwB,IAAI,CAAC,CAACnB,CAAsB,GAC9N,IAAI,CAAC,CAACqB,CAAqB,CAACF,EAEhC,CACAG,oBAAoBpT,CAAO,CAAE,CAC3B,IAAMH,EAAQ,IAAI,CAAC,CAAC6G,CAAM,CAAC0J,aAAa,GAAG3J,KAAK,CAAC,IAAI,CAAC,CAACC,CAAM,CAAE1G,GACzDD,EAAS,IAAI,CAACsT,YAAY,CAACxT,EAAOG,GAMxC,MAoTG,SAAoBwD,IAzTuB,CAyTd6I,gBAAgB,GAzTAtM,KAC9C,IAAI,CAAC,CAACuR,CAAa,CAAGvR,EACtB,IAAI,CAAC,CAACyR,CAAoB,CAAG,IAAI,CAACxR,OAAO,CACzC,IAAI,CAAC,CAACuR,CAAkB,CAAG,IAAI,CAAC,CAACH,CAAY,CAAC9Q,KAAK,EAE9CP,CACT,CACAsM,kBAAmB,CACjB,OAAO,IAAI,CAAC,CAACiF,CAAa,CAE5BgC,YAAYvT,CAAM,CAAEwT,CAAa,CAAE,CACjC,IAAMC,EAAgB,CAAC,EAYvB,OAXA5S,OAAOkN,IAAI,CAAC/N,GAAQV,OAAO,CAAC,IAC1BuB,OAAOC,cAAc,CAAC2S,EAAeC,EAAK,CACxCC,aAAc,GACd3S,WAAY,GACZC,IAAK,KACH,IAAI,CAAC2S,SAAS,CAACF,GACfF,IAAgBE,GACT1T,CAAM,CAAC0T,EAAI,CAEtB,EACF,GACOD,CACT,CACAG,UAAUF,CAAG,CAAE,CACb,IAAI,CAAC,CAAC1B,CAAY,CAACnL,GAAG,CAAC6M,EACzB,CACAG,iBAAkB,CAChB,OAAO,IAAI,CAAC,CAACxC,CAAY,CAE3B3E,QAAQ,CAAE,GAAGzM,EAAS,CAAG,CAAC,CAAC,CAAE,CAC3B,OAAO,IAAI,CAAC+M,KAAK,CAAC,CAChB,GAAG/M,CAAO,EAEd,CACA6T,gBAAgB7T,CAAO,CAAE,CACvB,IAAM+O,EAAmB,IAAI,CAAC,CAACrI,CAAM,CAACiH,mBAAmB,CAAC3N,GACpDH,EAAQ,IAAI,CAAC,CAAC6G,CAAM,CAAC0J,aAAa,GAAG3J,KAAK,CAAC,IAAI,CAAC,CAACC,CAAM,CAAEqI,GAE/D,OADAlP,EAAMuN,oBAAoB,CAAG,GACtBvN,EAAMkN,KAAK,GAAGpB,IAAI,CAAC,IAAM,IAAI,CAAC0H,YAAY,CAACxT,EAAOkP,GAC3D,CACAhC,MAAM7M,CAAY,CAAE,CAClB,OAAO,IAAI,CAAC,CAACiS,CAAY,CAAC,CACxB,GAAGjS,CAAY,CACfwM,cAAexM,EAAawM,aAAa,EAAI,EAC/C,GAAGf,IAAI,CAAC,KACN,IAAI,CAACyG,YAAY,GACV,IAAI,CAAC,CAACd,CAAa,EAE9B,CACA,CAACa,CAAY,CAACjS,CAAY,EACxB,IAAI,CAAC,CAAC2S,CAAW,GACjB,IAAI1H,EAAU,IAAI,CAAC,CAACiG,CAAY,CAACrE,KAAK,CACpC,IAAI,CAAC/M,OAAO,CACZE,GAKF,OAHKA,GAAc+P,cACjB9E,CAAAA,EAAUA,EAAQhD,KAAK,CAAC,IAAI,GAEvBgD,CACT,CACA,CAAC6H,CAAkB,GACjB,IAAI,CAAC,CAACR,CAAiB,GACvB,IAAMjG,EAAY,SAChB,IAAI,CAACvM,OAAO,CAACuM,SAAS,CACtB,IAAI,CAAC,CAAC6E,CAAY,EAEpB,GAAI,IAAQ,EAAI,IAAI,CAAC,CAACE,CAAa,CAAClF,OAAO,EAAI,CAAC,SAAeG,GAC7D,OAEF,IAAMuH,EAAO,SAAe,IAAI,CAAC,CAACxC,CAAa,CAAC3G,aAAa,CAAE4B,EAE/D,KAAI,CAAC,CAACqF,CAAc,CAAG9I,WAAW,KAC3B,IAAI,CAAC,CAACwI,CAAa,CAAClF,OAAO,EAC9B,IAAI,CAACgG,YAAY,EAErB,EALgB0B,EAAO,EAMzB,CACA,CAACZ,CAAsB,GACrB,MAAO,CAAC,mBAAO,IAAI,CAAClT,OAAO,CAAC+T,eAAe,CAAkB,IAAI,CAAC/T,OAAO,CAAC+T,eAAe,CAAC,IAAI,CAAC,CAAC3C,CAAY,EAAI,IAAI,CAACpR,OAAO,CAAC+T,eAAe,GAAK,EACnJ,CACA,CAACZ,CAAqB,CAACa,CAAY,EACjC,IAAI,CAAC,CAACvB,CAAoB,GAC1B,IAAI,CAAC,CAACX,CAAsB,CAAGkC,GAC3B,IAAQ,EAAI,CAA6D,IAA7D,SAAe,IAAI,CAAChU,OAAO,CAACiM,OAAO,CAAE,IAAI,CAAC,CAACmF,CAAY,GAAgB,SAAe,IAAI,CAAC,CAACU,CAAsB,GAAK,QAAI,CAAC,CAACA,CAAsB,EAGnK,KAAI,CAAC,CAACD,CAAiB,CAAGoC,YAAY,KAChC,KAAI,CAACjU,OAAO,CAACkU,2BAA2B,EAAI,GAAY,CAAC/U,SAAS,EAAC,GACrE,IAAI,CAAC,CAACgT,CAAY,EAEtB,EAAG,IAAI,CAAC,CAACL,CAAsB,EACjC,CACA,CAACO,CAAY,GACX,IAAI,CAAC,CAACW,CAAkB,GACxB,IAAI,CAAC,CAACG,CAAqB,CAAC,IAAI,CAAC,CAACD,CAAsB,GAC1D,CACA,CAACV,CAAiB,GACZ,IAAI,CAAC,CAACZ,CAAc,GACtBuC,aAAa,IAAI,CAAC,CAACvC,CAAc,EACjC,IAAI,CAAC,CAACA,CAAc,CAAG,KAAK,EAEhC,CACA,CAACa,CAAoB,GACf,IAAI,CAAC,CAACZ,CAAiB,GACzBuC,cAAc,IAAI,CAAC,CAACvC,CAAiB,EACrC,IAAI,CAAC,CAACA,CAAiB,CAAG,KAAK,EAEnC,CACAwB,aAAaxT,CAAK,CAAEG,CAAO,CAAE,KAWvBO,EAVJ,IAAMqS,EAAY,IAAI,CAAC,CAACxB,CAAY,CAC9BuB,EAAc,IAAI,CAAC3S,OAAO,CAC1BqU,EAAa,IAAI,CAAC,CAAC/C,CAAa,CAChCgD,EAAkB,IAAI,CAAC,CAAC/C,CAAkB,CAC1CgD,EAAoB,IAAI,CAAC,CAAC/C,CAAoB,CAE9CgD,EAAoBC,IADI7B,EACU/S,EAAMS,KAAK,CAAG,IAAI,CAAC,CAAC+Q,CAAwB,CAC9E,CAAE/Q,MAAAA,CAAK,CAAE,CAAGT,EACd6U,EAAW,CAAE,GAAGpU,CAAK,EACrBqU,EAAoB,GAExB,GAAI3U,EAAQ4U,kBAAkB,CAAE,CAC9B,IAAM9B,EAAU,IAAI,CAAC7T,YAAY,GAC3B4V,EAAe,CAAC/B,GAAWZ,EAAmBrS,EAAOG,GACrD8U,EAAkBhC,GAAWC,EAAsBlT,EAAO+S,EAAW5S,EAAS2S,GAChFkC,CAAAA,GAAgBC,CAAc,GAChCJ,CAAAA,EAAW,CACT,GAAGA,CAAQ,CACX,GAAG,QAAWpU,EAAMC,IAAI,CAAEV,EAAMG,OAAO,CAAC,CAC1C,EAEiC,gBAA/BA,EAAQ4U,kBAAkB,EAC5BF,CAAAA,EAASxJ,WAAW,CAAG,MAAK,CAEhC,CACA,GAAI,CAAEtG,MAAAA,CAAK,CAAEiG,eAAAA,CAAc,CAAE1G,OAAAA,CAAM,CAAE,CAAGuQ,EACxC,GAAI1U,EAAQ+U,MAAM,EAAIL,KAAuB,IAAvBA,EAASnU,IAAI,EACjC,GAAI8T,GAAcK,EAASnU,IAAI,GAAK+T,GAAiB/T,MAAQP,EAAQ+U,MAAM,GAAK,IAAI,CAAC,CAACtD,CAAQ,CAC5FlR,EAAO,IAAI,CAAC,CAACmR,CAAY,MAEzB,GAAI,CACF,IAAI,CAAC,CAACD,CAAQ,CAAGzR,EAAQ+U,MAAM,CAC/BxU,EAAOP,EAAQ+U,MAAM,CAACL,EAASnU,IAAI,EACnCA,EAAO,SAAY8T,GAAY9T,KAAMA,EAAMP,GAC3C,IAAI,CAAC,CAAC0R,CAAY,CAAGnR,EACrB,IAAI,CAAC,CAAC2Q,CAAW,CAAG,IACtB,CAAE,MAAOA,EAAa,CACpB,IAAI,CAAC,CAACA,CAAW,CAAGA,CACtB,OAGF3Q,EAAOmU,EAASnU,IAAI,CAEtB,GAAIP,KAAiC,IAAjCA,EAAQgV,eAAe,EAAezU,KAAc,IAAdA,GAAmB4D,YAAAA,EAAsB,CACjF,IAAI6Q,EACJ,GAAIX,GAAYM,mBAAqB3U,EAAQgV,eAAe,GAAKT,GAAmBS,gBAClFA,EAAkBX,EAAW9T,IAAI,MAMjC,GAJAyU,EAAkB,mBAAOhV,EAAQgV,eAAe,CAAkBhV,EAAQgV,eAAe,CACvF,IAAI,CAAC,CAACrD,CAAwB,EAAErR,MAAMC,KACtC,IAAI,CAAC,CAACoR,CAAwB,EAC5B3R,EAAQgV,eAAe,CACvBhV,EAAQ+U,MAAM,EAAIC,KAAyB,IAAzBA,EACpB,GAAI,CACFA,EAAkBhV,EAAQ+U,MAAM,CAACC,GACjC,IAAI,CAAC,CAAC9D,CAAW,CAAG,IACtB,CAAE,MAAOA,EAAa,CACpB,IAAI,CAAC,CAACA,CAAW,CAAGA,CACtB,CAGoB,KAAK,IAAzB8D,IACF7Q,EAAS,UACT5D,EAAO,SACL8T,GAAY9T,KACZyU,EACAhV,GAEF2U,EAAoB,GAExB,CACI,IAAI,CAAC,CAACzD,CAAW,GACnBtM,EAAQ,IAAI,CAAC,CAACsM,CAAW,CACzB3Q,EAAO,IAAI,CAAC,CAACmR,CAAY,CACzB7G,EAAiB5E,KAAKC,GAAG,GACzB/B,EAAS,SAEX,IAAMsK,EAAaiG,aAAAA,EAASxJ,WAAW,CACjC+J,EAAY9Q,YAAAA,EACZ+Q,EAAU/Q,UAAAA,EACVgR,EAAYF,GAAaxG,EACzBjE,EAAUjK,KAAc,IAAdA,EA2BhB,MA1Be,CACb4D,OAAAA,EACA+G,YAAawJ,EAASxJ,WAAW,CACjC+J,UAAAA,EACAG,UAAWjR,YAAAA,EACX+Q,QAAAA,EACAG,iBAAkBF,EAClBA,UAAAA,EACA5U,KAAAA,EACAoK,cAAe+J,EAAS/J,aAAa,CACrC/F,MAAAA,EACAiG,eAAAA,EACAlG,aAAc+P,EAAS5J,iBAAiB,CACxC/E,cAAe2O,EAAS3J,kBAAkB,CAC1CH,iBAAkB8J,EAAS9J,gBAAgB,CAC3C0K,UAAWZ,EAAShK,eAAe,CAAG,GAAKgK,EAAS9J,gBAAgB,CAAG,EACvE2K,oBAAqBb,EAAShK,eAAe,CAAG8J,EAAkB9J,eAAe,EAAIgK,EAAS9J,gBAAgB,CAAG4J,EAAkB5J,gBAAgB,CACnJ6D,WAAAA,EACA+G,aAAc/G,GAAc,CAACwG,EAC7BQ,eAAgBP,GAAW,CAAC1K,EAC5BnF,SAAUqP,WAAAA,EAASxJ,WAAW,CAC9ByJ,kBAAAA,EACAe,eAAgBR,GAAW1K,EAC3B4B,QAASA,EAAQvM,EAAOG,GACxByM,QAAS,IAAI,CAACA,OAAO,CAGzB,CACA2F,aAAaM,CAAa,CAAE,CAC1B,IAAM2B,EAAa,IAAI,CAAC,CAAC/C,CAAa,CAChCqE,EAAa,IAAI,CAACtC,YAAY,CAAC,IAAI,CAAC,CAACjC,CAAY,CAAE,IAAI,CAACpR,OAAO,EAMrE,GALA,IAAI,CAAC,CAACuR,CAAkB,CAAG,IAAI,CAAC,CAACH,CAAY,CAAC9Q,KAAK,CACnD,IAAI,CAAC,CAACkR,CAAoB,CAAG,IAAI,CAACxR,OAAO,CACH,KAAK,IAAvC,IAAI,CAAC,CAACuR,CAAkB,CAAChR,IAAI,EAC/B,KAAI,CAAC,CAACoR,CAAwB,CAAG,IAAI,CAAC,CAACP,CAAY,EAEjD,SAAoBuE,EAAYtB,GAClC,MAEF,KAAI,CAAC,CAAC/C,CAAa,CAAGqE,EACtB,IAAMC,EAAuB,CAAC,EAsB1BlD,GAAetT,YAAc,IAASyW,CArBZ,KAC5B,GAAI,CAACxB,EACH,MAAO,GAET,GAAM,CAAEyB,oBAAAA,CAAmB,CAAE,CAAG,IAAI,CAAC9V,OAAO,CACtC+V,EAA2B,mBAAOD,EAAqCA,IAAwBA,EACrG,GAAIC,QAAAA,GAAsC,CAACA,GAA4B,CAAC,IAAI,CAAC,CAAChE,CAAY,CAACE,IAAI,CAC7F,MAAO,GAET,IAAM+D,EAAgB,IAAIhE,IACxB+D,GAA4B,IAAI,CAAC,CAAChE,CAAY,EAKhD,OAHI,IAAI,CAAC/R,OAAO,CAACiQ,YAAY,EAC3B+F,EAAcpP,GAAG,CAAC,SAEbhG,OAAOkN,IAAI,CAAC,IAAI,CAAC,CAACwD,CAAa,EAAEtF,IAAI,CAAC,GAGpCiK,IADa,CAAC,CAAC3E,CAAa,CADlBmC,EAC4B,GAAKY,CAAU,CAD3CZ,EACqD,EACpDuC,EAAchP,GAAG,CAFlByM,GAIrB,MAEEmC,CAAAA,EAAqBxW,SAAS,CAAG,EAAG,EAEtC,IAAI,CAAC,CAACwE,CAAM,CAAC,CAAE,GAAGgS,CAAoB,CAAE,GAAGlD,CAAa,EAC1D,CACA,CAACG,CAAW,GACV,IAAMhT,EAAQ,IAAI,CAAC,CAAC6G,CAAM,CAAC0J,aAAa,GAAG3J,KAAK,CAAC,IAAI,CAAC,CAACC,CAAM,CAAE,IAAI,CAAC1G,OAAO,EAC3E,GAAIH,IAAU,IAAI,CAAC,CAACuR,CAAY,CAC9B,OAEF,IAAMwB,EAAY,IAAI,CAAC,CAACxB,CAAY,CACpC,IAAI,CAAC,CAACA,CAAY,CAAGvR,EACrB,IAAI,CAAC,CAACwR,CAAwB,CAAGxR,EAAMS,KAAK,CACxC,IAAI,CAACrB,YAAY,KACnB2T,GAAW7O,eAAe,IAAI,EAC9BlE,EAAM0D,WAAW,CAAC,IAAI,EAE1B,CACAiK,eAAgB,CACd,IAAI,CAAC4E,YAAY,GACb,IAAI,CAACnT,YAAY,IACnB,IAAI,CAAC,CAACoT,CAAY,EAEtB,CACA,CAACzO,CAAM,CAAC8O,CAAa,EACnB,GAAa,CAACvM,KAAK,CAAC,KACduM,EAActT,SAAS,EACzB,IAAI,CAACA,SAAS,CAACC,OAAO,CAAC,IACrBV,EAAS,IAAI,CAAC,CAAC2S,CAAa,CAC9B,GAEF,IAAI,CAAC,CAAC5K,CAAM,CAAC0J,aAAa,GAAGxM,MAAM,CAAC,CAClC/D,MAAO,IAAI,CAAC,CAACuR,CAAY,CACzBvN,KAAM,wBACR,EACF,EACF,CACF,EAIA,SAASqO,EAAmBrS,CAAK,CAAEG,CAAO,EACxC,MAHkD,KAA3C,SAAeA,EAAQiM,OAAO,CAGZpM,IAHkCA,KAA0B,IAA1BA,EAAMS,KAAK,CAACC,IAAI,EAAe,CAAEV,CAAAA,UAAAA,EAAMS,KAAK,CAAC6D,MAAM,EAAgBnE,CAAyB,IAAzBA,EAAQkW,YAAY,GAGtGrW,KAA0B,IAA1BA,EAAMS,KAAK,CAACC,IAAI,EAAe+R,EAAczS,EAAOG,EAASA,EAAQmW,cAAc,CACjI,CACA,SAAS7D,EAAczS,CAAK,CAAEG,CAAO,CAAEoW,CAAK,EAC1C,GAAI,CAA2C,IAA3C,SAAepW,EAAQiM,OAAO,CAAEpM,GAAkB,CACpD,IAAMwW,EAAQ,mBAAOD,EAAuBA,EAAMvW,GAASuW,EAC3D,MAAOC,WAAAA,GAAsBA,CAAU,IAAVA,GAAmBjK,EAAQvM,EAAOG,EACjE,CACA,MAAO,EACT,CACA,SAAS+S,EAAsBlT,CAAK,CAAE+S,CAAS,CAAE5S,CAAO,CAAE2S,CAAW,EACnE,MAAO,CAAC9S,IAAU+S,GAAa,CAA+C,IAA/C,SAAeD,EAAY1G,OAAO,CAAEpM,EAAe,GAAO,EAACG,EAAQgR,QAAQ,EAAInR,UAAAA,EAAMS,KAAK,CAAC6D,MAAM,GAAiBiI,EAAQvM,EAAOG,EAClK,CACA,SAASoM,EAAQvM,CAAK,CAAEG,CAAO,EAC7B,MAAO,CAA2C,IAA3C,SAAeA,EAAQiM,OAAO,CAAEpM,IAAoBA,EAAMyM,aAAa,CAAC,SAAiBtM,EAAQuM,SAAS,CAAE1M,GACrH,C,kDC3aIyW,EAAY,MACd,CAACC,CAAS,CACV3K,SAAU,CACR,IAAI,CAACjI,cAAc,EACrB,CACAP,YAAa,CACX,IAAI,CAACO,cAAc,GACf,SAAe,IAAI,CAACL,MAAM,GAC5B,KAAI,CAAC,CAACiT,CAAS,CAAGzN,WAAW,KAC3B,IAAI,CAAC5E,cAAc,EACrB,EAAG,IAAI,CAACZ,MAAM,EAElB,CACAD,aAAamT,CAAS,CAAE,CACtB,IAAI,CAAClT,MAAM,CAAGmT,KAAKC,GAAG,CACpB,IAAI,CAACpT,MAAM,EAAI,EACfkT,GAAc,KAAQ,CAAGG,IAAW,GAAW,EAEnD,CACAhT,gBAAiB,CACX,IAAI,CAAC,CAAC4S,CAAS,GACjBpC,aAAa,IAAI,CAAC,CAACoC,CAAS,EAC5B,IAAI,CAAC,CAACA,CAAS,CAAG,KAAK,EAE3B,CACF,C,oGCvBA,SAASK,EAAkBjS,CAAY,EACrC,OAAO8R,KAAKI,GAAG,CAAC,IAAM,GAAKlS,EAAc,IAC3C,CACA,SAASmS,EAAS5R,CAAW,EAC3B,MAAO,CAACA,GAAe,QAAO,IAAO,UAAW,GAAa,CAAC6E,QAAQ,EACxE,CACA,IAAIgN,EAAiB,MACnBzQ,YAAYtG,CAAO,CAAE,CACnB,IAAI,CAAC4M,MAAM,CAAG5M,GAAS4M,OACvB,IAAI,CAACf,MAAM,CAAG7L,GAAS6L,MACzB,CACF,EACA,SAASmL,EAAiBX,CAAK,EAC7B,OAAOA,aAAiBU,CAC1B,CACA,SAASE,EAAcjU,CAAM,EAC3B,IAGIkU,EACAC,EACAC,EALAC,EAAmB,GACnB1S,EAAe,EACf2S,EAAa,GAIXnM,EAAU,IAAI5J,QAAQ,CAACgW,EAAcC,KACzCL,EAAiBI,EACjBH,EAAgBI,CAClB,GAaMC,EAAc,IAAM,GAAY,CAACtY,SAAS,IAAO6D,CAAAA,WAAAA,EAAOkC,WAAW,EAAiB,GAAa,CAAC6E,QAAQ,EAAC,GAAM/G,EAAOmC,MAAM,GAC9HG,EAAW,IAAMwR,EAAS9T,EAAOkC,WAAW,GAAKlC,EAAOmC,MAAM,GAC9DzD,EAAU,IACT4V,IACHA,EAAa,GACbtU,EAAOyC,SAAS,GAAG4Q,GACnBa,MACAC,EAAed,GAEnB,EACM7U,EAAS,IACR8V,IACHA,EAAa,GACbtU,EAAO2C,OAAO,GAAG0Q,GACjBa,MACAE,EAAcf,GAElB,EACMqB,EAAQ,IACL,IAAInW,QAAQ,IACjB2V,EAAa,IACPI,CAAAA,GAAcG,GAAY,GAC5BE,EAAgBtB,EAEpB,EACArT,EAAO8B,OAAO,IAChB,GAAG6G,IAAI,CAAC,KACNuL,EAAa,KAAK,EACbI,GACHtU,EAAO+B,UAAU,IAErB,GAEI6S,EAAM,SAINC,EAHJ,GAAIP,EACF,OAGF,IAAMjK,EAAiB1I,IAAAA,EAAqB3B,EAAOqK,cAAc,CAAG,KAAK,EACzE,GAAI,CACFwK,EAAiBxK,GAAkBrK,EAAOwB,EAAE,EAC9C,CAAE,MAAOI,EAAO,CACdiT,EAAiBtW,QAAQC,MAAM,CAACoD,EAClC,CACArD,QAAQG,OAAO,CAACmW,GAAgBlM,IAAI,CAACjK,GAASyG,KAAK,CAAC,IAClD,GAAImP,EACF,OAEF,IAAMtS,EAAQhC,EAAOgC,KAAK,EAAK,KAAQ,CAAG,EAAI,GACxCC,EAAajC,EAAOiC,UAAU,EAAI2R,EAClCkB,EAAQ,mBAAO7S,EAA4BA,EAAWN,EAAcC,GAASK,EAC7E8S,EAAc/S,CAAU,IAAVA,GAAkB,iBAAOA,GAAsBL,EAAeK,GAAS,mBAAOA,GAAwBA,EAAML,EAAcC,GAC9I,GAAIyS,GAAoB,CAACU,EAAa,CACpCvW,EAAOoD,GACP,MACF,CACAD,IACA3B,EAAO0B,MAAM,GAAGC,EAAcC,GAC9B,SAAMkT,GAAOnM,IAAI,CAAC,IACT8L,IAAgB,KAAK,EAAIC,KAC/B/L,IAAI,CAAC,KACF0L,EACF7V,EAAOoD,GAEPgT,GAEJ,EACF,EACF,EACA,MAAO,CACLzM,QAAAA,EACAO,OAnFa,IACR4L,IACH9V,EAAO,IAAIuV,EAAelH,IAC1B7M,EAAOsK,KAAK,KAEhB,EA+EEjJ,SAAU,KACR6S,MACO/L,GAET0B,YAlFkB,KAClBwK,EAAmB,EACrB,EAiFErK,cAhFoB,KACpBqK,EAAmB,EACrB,EA+EE/R,SAAAA,EACAE,MAAO,KACDF,IACFsS,IAEAF,IAAQ/L,IAAI,CAACiM,GAERzM,EAEX,CACF,C,mCCjIA,IAAI6M,EAAe,MACjB1R,aAAc,CACZ,IAAI,CAAClH,SAAS,CAAmB,IAAI4S,IACrC,IAAI,CAACzD,SAAS,CAAG,IAAI,CAACA,SAAS,CAACzE,IAAI,CAAC,IAAI,CAC3C,CACAyE,UAAU5P,CAAQ,CAAE,CAGlB,OAFA,IAAI,CAACS,SAAS,CAACwH,GAAG,CAACjI,GACnB,IAAI,CAACG,WAAW,GACT,KACL,IAAI,CAACM,SAAS,CAAC6H,MAAM,CAACtI,GACtB,IAAI,CAACK,aAAa,EACpB,CACF,CACAC,cAAe,CACb,OAAO,IAAI,CAACG,SAAS,CAAC6S,IAAI,CAAG,CAC/B,CACAnT,aAAc,CACd,CACAE,eAAgB,CAChB,CACF,C,wNCpBA,IAAIiZ,EAAW,oBAAOxZ,QAA0B,SAAUa,WAC1D,SAAS4Y,IAET,CACA,SAASC,EAAiB/I,CAAO,CAAEgJ,CAAK,EACtC,MAAO,mBAAOhJ,EAAyBA,EAAQgJ,GAAShJ,CAC1D,CACA,SAASiJ,EAAehC,CAAK,EAC3B,MAAO,iBAAOA,GAAsBA,GAAS,GAAKA,IAAUM,GAC9D,CACA,SAAS2B,EAAehN,CAAS,CAAEiB,CAAS,EAC1C,OAAOkK,KAAKC,GAAG,CAACpL,EAAaiB,CAAAA,GAAa,GAAKtG,KAAKC,GAAG,GAAI,EAC7D,CACA,SAASqS,EAAiBhM,CAAS,CAAE1M,CAAK,EACxC,MAAO,mBAAO0M,EAA2BA,EAAU1M,GAAS0M,CAC9D,CACA,SAASiM,EAAevM,CAAO,CAAEpM,CAAK,EACpC,MAAO,mBAAOoM,EAAyBA,EAAQpM,GAASoM,CAC1D,CACA,SAASwM,EAAW/Q,CAAO,CAAE7H,CAAK,EAChC,GAAM,CACJgE,KAAAA,EAAO,KAAK,CACZ+D,MAAAA,CAAK,CACLsD,YAAAA,CAAW,CACXwN,UAAAA,CAAS,CACT9W,SAAAA,CAAQ,CACR+W,MAAAA,CAAK,CACN,CAAGjR,EACJ,GAAI9F,GACF,GAAIgG,EACF,IAAI/H,EAAMyK,SAAS,GAAKsO,EAAsBhX,EAAU/B,EAAMG,OAAO,EACnE,MAAO,EACT,MACK,GAAI,CAAC6Y,EAAgBhZ,EAAM+B,QAAQ,CAAEA,GAC1C,MAAO,GAGX,GAAIiC,QAAAA,EAAgB,CAClB,IAAMkI,EAAWlM,EAAMkM,QAAQ,GAC/B,GAAa,WAATlI,GAAqB,CAACkI,GAGtBlI,aAAAA,GAAuBkI,EAFzB,MAAO,EAKX,OACI,mBAAO4M,GAAuB9Y,EAAMuM,OAAO,KAAOuM,CAAI,GAGtDzN,CAAAA,CAAAA,GAAeA,IAAgBrL,EAAMS,KAAK,CAAC4K,WAAW,GAGtDwN,CAAAA,CAAAA,IAAa,CAACA,EAAU7Y,EAAK,CAInC,CACA,SAASiZ,EAAcpR,CAAO,CAAE5D,CAAQ,EACtC,GAAM,CAAE8D,MAAAA,CAAK,CAAEzD,OAAAA,CAAM,CAAEuU,UAAAA,CAAS,CAAE9H,YAAAA,CAAW,CAAE,CAAGlJ,EAClD,GAAIkJ,EAAa,CACf,GAAI,CAAC9M,EAAS9D,OAAO,CAAC4Q,WAAW,CAC/B,MAAO,GAET,GAAIhJ,EACF,IAAImR,EAAQjV,EAAS9D,OAAO,CAAC4Q,WAAW,IAAMmI,EAAQnI,GACpD,MAAO,EACT,MACK,GAAI,CAACiI,EAAgB/U,EAAS9D,OAAO,CAAC4Q,WAAW,CAAEA,GACxD,MAAO,EAEX,OACIzM,CAAAA,CAAAA,GAAUL,EAASxD,KAAK,CAAC6D,MAAM,GAAKA,CAAK,GAGzCuU,CAAAA,CAAAA,IAAa,CAACA,EAAU5U,EAAQ,CAItC,CACA,SAAS8U,EAAsBhX,CAAQ,CAAE5B,CAAO,EAE9C,MAAOgZ,CADQhZ,GAASiZ,gBAAkBF,CAAM,EAClCnX,EAChB,CACA,SAASmX,EAAQnX,CAAQ,EACvB,OAAOsX,KAAKC,SAAS,CACnBvX,EACA,CAACwX,EAAGC,IAAQC,EAAcD,GAAOzY,OAAOkN,IAAI,CAACuL,GAAKE,IAAI,GAAGC,MAAM,CAAC,CAACzZ,EAAQ0T,KACvE1T,CAAM,CAAC0T,EAAI,CAAG4F,CAAG,CAAC5F,EAAI,CACf1T,GACN,CAAC,GAAKsZ,EAEb,CACA,SAASR,EAAgBY,CAAC,CAAEC,CAAC,SAC3B,IAAUA,GAGN,OAAOD,GAAM,OAAOC,GAGpBD,EAAAA,KAAKC,GAAK,iBAAOD,GAAkB,iBAAOC,GACrC,CAAC9Y,OAAOkN,IAAI,CAAC4L,GAAG1N,IAAI,CAAC,GAAS,CAAC6M,EAAgBY,CAAC,CAAChG,EAAI,CAAEiG,CAAC,CAACjG,EAAI,EAGxE,CACA,SAASkG,EAAiBF,CAAC,CAAEC,CAAC,EAC5B,GAAID,IAAMC,EACR,OAAOD,EAET,IAAMG,EAAQC,EAAaJ,IAAMI,EAAaH,GAC9C,GAAIE,GAASN,EAAcG,IAAMH,EAAcI,GAAI,CACjD,IAAMI,EAASF,EAAQH,EAAI7Y,OAAOkN,IAAI,CAAC2L,GACjCM,EAAQD,EAAOrY,MAAM,CACrBuY,EAASJ,EAAQF,EAAI9Y,OAAOkN,IAAI,CAAC4L,GACjCO,EAAQD,EAAOvY,MAAM,CACrByY,EAAON,EAAQ,EAAE,CAAG,CAAC,EACvBO,EAAa,EACjB,IAAK,IAAI5X,EAAI,EAAGA,EAAI0X,EAAO1X,IAAK,CAC9B,IAAMkR,EAAMmG,EAAQrX,EAAIyX,CAAM,CAACzX,EAAE,CAC5B,EAACqX,GAASE,EAAOrW,QAAQ,CAACgQ,IAAQmG,CAAI,GAAMH,KAAgB,IAAhBA,CAAC,CAAChG,EAAI,EAAeiG,KAAgB,IAAhBA,CAAC,CAACjG,EAAI,EAC1EyG,CAAI,CAACzG,EAAI,CAAG,KAAK,EACjB0G,MAEAD,CAAI,CAACzG,EAAI,CAAGkG,EAAiBF,CAAC,CAAChG,EAAI,CAAEiG,CAAC,CAACjG,EAAI,EACvCyG,CAAI,CAACzG,EAAI,GAAKgG,CAAC,CAAChG,EAAI,EAAIgG,KAAgB,IAAhBA,CAAC,CAAChG,EAAI,EAChC0G,IAGN,CACA,OAAOJ,IAAUE,GAASE,IAAeJ,EAAQN,EAAIS,CACvD,CACA,OAAOR,CACT,CACA,SAASU,EAAoBX,CAAC,CAAEC,CAAC,EAC/B,GAAI,CAACA,GAAK9Y,OAAOkN,IAAI,CAAC2L,GAAGhY,MAAM,GAAKb,OAAOkN,IAAI,CAAC4L,GAAGjY,MAAM,CACvD,MAAO,GAET,IAAK,IAAMgS,KAAOgG,EAChB,GAAIA,CAAC,CAAChG,EAAI,GAAKiG,CAAC,CAACjG,EAAI,CACnB,MAAO,GAGX,MAAO,EACT,CACA,SAASoG,EAAaxD,CAAK,EACzB,OAAOgE,MAAMC,OAAO,CAACjE,IAAUA,EAAM5U,MAAM,GAAKb,OAAOkN,IAAI,CAACuI,GAAO5U,MAAM,CAE3E,SAAS6X,EAAciB,CAAC,EACtB,GAAI,CAACC,EAAmBD,GACtB,MAAO,GAET,IAAME,EAAOF,EAAEjU,WAAW,CAC1B,GAAImU,KAAc,IAAdA,EACF,MAAO,GAET,IAAMC,EAAOD,EAAKE,SAAS,UACtBH,EAAmBE,IAGnBA,EAAKE,cAAc,CAAC,mBAGrBha,OAAOia,cAAc,CAACN,KAAO3Z,OAAO+Z,SAAS,CAKnD,SAASH,EAAmBD,CAAC,EAC3B,MAAO3Z,oBAAAA,OAAO+Z,SAAS,CAACG,QAAQ,CAACC,IAAI,CAACR,EACxC,CACA,SAASS,EAAMC,CAAO,EACpB,OAAO,IAAI1Z,QAAQ,IACjBuH,WAAWpH,EAASuZ,EACtB,EACF,CACA,SAASC,EAAY7L,CAAQ,CAAE9O,CAAI,CAAEP,CAAO,QAC1C,YAAI,OAAOA,EAAQmb,iBAAiB,CAC3Bnb,EAAQmb,iBAAiB,CAAC9L,EAAU9O,GAClCP,CAA8B,IAA9BA,EAAQmb,iBAAiB,CAC3BxB,EAAiBtK,EAAU9O,GAE7BA,CACT,CACA,SAAS6a,EAAiBC,CAAY,EACpC,OAAOA,CACT,CACA,SAASC,EAASC,CAAK,CAAEC,CAAI,CAAE9E,EAAM,CAAC,EACpC,IAAM+E,EAAW,IAAIF,EAAOC,EAAK,CACjC,OAAO9E,GAAO+E,EAASha,MAAM,CAAGiV,EAAM+E,EAASC,KAAK,CAAC,GAAKD,CAC5D,CACA,SAASE,EAAWJ,CAAK,CAAEC,CAAI,CAAE9E,EAAM,CAAC,EACtC,IAAM+E,EAAW,CAACD,KAASD,EAAM,CACjC,OAAO7E,GAAO+E,EAASha,MAAM,CAAGiV,EAAM+E,EAASC,KAAK,CAAC,EAAG,IAAMD,CAChE,CACA,IAAIG,EAAYC,SAChB,SAASC,EAAc9b,CAAO,CAAEE,CAAY,QAQ1C,CAAKF,EAAQmB,OAAO,EAAIjB,GAAcmN,eAC7B,IAAMnN,EAAamN,cAAc,CAEtC,EAASlM,OAAO,EAAInB,EAAQmB,OAAO,GAAKya,EAGrC5b,EAAQmB,OAAO,CAFb,IAAMI,QAAQC,MAAM,CAAC,MAAU,CAAC,kBAAkB,EAAExB,EAAQsK,SAAS,CAAC,CAAC,CAAC,EAGnF,C,+EC7MIyR,EAAqB,eAAmB,CAC1C,KAAK,GAEHC,EAAiB,IACnB,IAAMtV,EAAS,YAAgB,CAACqV,GAChC,GAAIE,EACF,OAAOA,EAET,GAAI,CAACvV,EACH,MAAM,MAAU,0DAElB,OAAOA,CACT,EACIwV,EAAsB,CAAC,CACzBxV,OAAAA,CAAM,CACNyV,SAAAA,CAAQ,CACT,IACC,WAAe,CAAC,KACdzV,EAAO4H,KAAK,GACL,KACL5H,EAAO8H,OAAO,EAChB,GACC,CAAC9H,EAAO,EACY,KAAA0V,GAAA,EAAIL,EAAmBM,QAAQ,CAAE,CAAEhG,MAAO3P,EAAQyV,SAAAA,CAAS,G,oECvBpF,SAASG,IACP,IAAIC,EAAU,GACd,MAAO,CACLC,WAAY,KACVD,EAAU,EACZ,EACAzQ,MAAO,KACLyQ,EAAU,EACZ,EACAA,QAAS,IACAA,CAEX,CACF,CACA,IAAIE,EAAiC,eAAmB,CAACH,KACrDI,EAA6B,IAAM,YAAgB,CAACD,GACpDE,EAA0B,CAAC,CAC7BR,SAAAA,CAAQ,CACT,IACC,GAAM,CAAC9F,EAAM,CAAG,UAAc,CAAC,IAAMiG,KACrC,MAAuB,KAAAF,GAAA,EAAIK,EAA+BJ,QAAQ,CAAE,CAAEhG,MAAAA,EAAO8F,SAAU,mBAAOA,EAA0BA,EAAS9F,GAAS8F,CAAS,EACrJ,C,gFCrBIS,EAAkC,CAAC5c,EAAS6c,KAC1C7c,CAAAA,EAAQgR,QAAQ,EAAIhR,EAAQiQ,YAAY,GACtC,CAAC4M,EAAmBN,OAAO,IAC7Bvc,CAAAA,EAAQkW,YAAY,CAAG,EAAI,CAGjC,EACI4G,EAA6B,IAC/B,WAAe,CAAC,KACdD,EAAmBL,UAAU,EAC/B,EAAG,CAACK,EAAmB,CACzB,EACIE,EAAc,CAAC,CACjBhd,OAAAA,CAAM,CACN8c,mBAAAA,CAAkB,CAClB5M,aAAAA,CAAY,CACZpQ,MAAAA,CAAK,CACN,GACQE,EAAOmV,OAAO,EAAI,CAAC2H,EAAmBN,OAAO,IAAM,CAACxc,EAAO0O,UAAU,EAAI5O,GAAS,QAAiBoQ,EAAc,CAAClQ,EAAO6E,KAAK,CAAE/E,EAAM,C,0DCnB3Imd,EAAqB,eAAmB,CAAC,IACzCC,EAAiB,IAAM,YAAgB,CAACD,GACxCE,EAAsBF,EAAmBX,QAAQ,E,sECLrD,IAAIc,EAAsB,CAACC,EAAQvd,IAAUA,KAA0B,IAA1BA,EAAMS,KAAK,CAACC,IAAI,CACzD8c,EAAkB,IAChBtO,EAAiBiC,QAAQ,EACvB,iBAAOjC,EAAiBxC,SAAS,EACnCwC,CAAAA,EAAiBxC,SAAS,CAAG,GAAE,CAGrC,EACI+Q,EAAY,CAACvd,EAAQwd,IAAgBxd,EAAOoV,SAAS,EAAIpV,EAAO0O,UAAU,EAAI,CAAC8O,EAC/EC,EAAgB,CAACzO,EAAkBhP,IAAWgP,GAAkBiC,UAAYjR,EAAOkV,SAAS,CAC5FpB,EAAkB,CAAC9E,EAAkBvL,EAAUqZ,IAAuBrZ,EAASqQ,eAAe,CAAC9E,GAAkB5G,KAAK,CAAC,KACzH0U,EAAmBL,UAAU,EAC/B,E,kBCZA,SAASiB,EAAiBC,CAAU,CAAEC,CAAM,QAC1C,YAAI,OAAOD,EACFA,KAAcC,GAEhB,CAAC,CAACD,CACX,CACA,SAASxF,IACT,C","sources":["node_modules/@tanstack/query-core/build/modern/focusManager.js","node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","node_modules/@tanstack/query-core/build/modern/mutation.js","node_modules/@tanstack/query-core/build/modern/mutationCache.js","node_modules/@tanstack/query-core/build/modern/notifyManager.js","node_modules/@tanstack/query-core/build/modern/onlineManager.js","node_modules/@tanstack/query-core/build/modern/query.js","node_modules/@tanstack/query-core/build/modern/queryCache.js","node_modules/@tanstack/query-core/build/modern/queryClient.js","node_modules/@tanstack/query-core/build/modern/queryObserver.js","node_modules/@tanstack/query-core/build/modern/removable.js","node_modules/@tanstack/query-core/build/modern/retryer.js","node_modules/@tanstack/query-core/build/modern/subscribable.js","node_modules/@tanstack/query-core/build/modern/utils.js","node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js","node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js","node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js","node_modules/@tanstack/react-query/build/modern/isRestoring.js","node_modules/@tanstack/react-query/build/modern/suspense.js","node_modules/@tanstack/react-query/build/modern/utils.js"],"sourcesContent":["// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const fetchFn = async () => {\n        const options = context.options;\n        const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n        const oldPages = context.state.data?.pages || [];\n        const oldPageParams = context.state.data?.pageParams || [];\n        const empty = { pages: [], pageParams: [] };\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const queryFnContext = {\n            queryKey: context.queryKey,\n            pageParam: param,\n            direction: previous ? \"backward\" : \"forward\",\n            meta: context.options.meta\n          };\n          addSignalProperty(queryFnContext);\n          const page = await queryFn(\n            queryFnContext\n          );\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        let result;\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          result = await fetchPage(\n            empty,\n            oldPageParams[0] ?? options.initialPageParam\n          );\n          const remainingPages = pages ?? oldPages.length;\n          for (let i = 1; i < remainingPages; i++) {\n            const param = getNextPageParam(options, result);\n            result = await fetchPage(result, param);\n          }\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data)\n    return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam)\n    return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (!restored) {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Map();\n    this.#mutationId = Date.now();\n  }\n  #mutations;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    const scope = scopeFor(mutation);\n    const mutations = this.#mutations.get(scope) ?? [];\n    mutations.push(mutation);\n    this.#mutations.set(scope, mutations);\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    const scope = scopeFor(mutation);\n    if (this.#mutations.has(scope)) {\n      const mutations = this.#mutations.get(scope)?.filter((x) => x !== mutation);\n      if (mutations) {\n        if (mutations.length === 0) {\n          this.#mutations.delete(scope);\n        } else {\n          this.#mutations.set(scope, mutations);\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const firstPendingMutation = this.#mutations.get(scopeFor(mutation))?.find((m) => m.state.status === \"pending\");\n    return !firstPendingMutation || firstPendingMutation === mutation;\n  }\n  runNext(mutation) {\n    const foundMutation = this.#mutations.get(scopeFor(mutation))?.find((m) => m !== mutation && m.state.isPaused);\n    return foundMutation?.continue() ?? Promise.resolve();\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((mutation) => {\n        this.remove(mutation);\n      });\n    });\n  }\n  getAll() {\n    return [...this.#mutations.values()].flat();\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id ?? String(mutation.mutationId);\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/notifyManager.ts\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = (cb) => setTimeout(cb, 0);\n  const setScheduler = (fn) => {\n    scheduleFn = fn;\n  };\n  const batch = (callback) => {\n    let result;\n    transactions++;\n    try {\n      result = callback();\n    } finally {\n      transactions--;\n      if (!transactions) {\n        flush();\n      }\n    }\n    return result;\n  };\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const batchCalls = (callback) => {\n    return (...args) => {\n      schedule(() => {\n        callback(...args);\n      });\n    };\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  const setNotifyFunction = (fn) => {\n    notifyFn = fn;\n  };\n  const setBatchNotifyFunction = (fn) => {\n    batchNotifyFn = fn;\n  };\n  return {\n    batch,\n    batchCalls,\n    schedule,\n    setNotifyFunction,\n    setBatchNotifyFunction,\n    setScheduler\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { canFetch, createRetryer, isCancelledError } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#cache = config.cache;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = config.state || getDefaultState(this.options);\n    this.state = this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    return this.getObserversCount() > 0 && !this.isActive();\n  }\n  isStale() {\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0;\n  }\n  isStaleByTime(staleTime = 0) {\n    return this.state.isInvalidated || this.state.data === void 0 || !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const queryFnContext = {\n        queryKey: this.queryKey,\n        meta: this.meta\n      };\n      addSignalProperty(queryFnContext);\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const context = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      state: this.state,\n      fetchFn\n    };\n    addSignalProperty(context);\n    this.options.behavior?.onFetch(\n      context,\n      this\n    );\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    const onError = (error) => {\n      if (!(isCancelledError(error) && error.silent)) {\n        this.#dispatch({\n          type: \"error\",\n          error\n        });\n      }\n      if (!isCancelledError(error)) {\n        this.#cache.config.onError?.(\n          error,\n          this\n        );\n        this.#cache.config.onSettled?.(\n          this.state.data,\n          error,\n          this\n        );\n      }\n      if (!this.isFetchingOptimistic) {\n        this.scheduleGc();\n      }\n      this.isFetchingOptimistic = false;\n    };\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      abort: abortController.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (data === void 0) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n            );\n          }\n          onError(new Error(`${this.queryHash} data is undefined`));\n          return;\n        }\n        this.setData(data);\n        this.#cache.config.onSuccess?.(data, this);\n        this.#cache.config.onSettled?.(\n          data,\n          this.state.error,\n          this\n        );\n        if (!this.isFetchingOptimistic) {\n          this.scheduleGc();\n        }\n        this.isFetchingOptimistic = false;\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    return this.#retryer.start();\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n        case \"error\":\n          const error = action.error;\n          if (isCancelledError(error) && error.revert && this.#revertState) {\n            return { ...this.#revertState, fetchStatus: \"idle\" };\n          }\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        cache: this,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1)\n      return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0)\n      return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const cachedData = this.getQueryData(options.queryKey);\n    if (cachedData === void 0)\n      return this.fetchQuery(options);\n    else {\n      const defaultedOptions = this.defaultQueryOptions(options);\n      const query = this.#queryCache.build(this, defaultedOptions);\n      if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n        void this.prefetchQuery(defaultedOptions);\n      }\n      return Promise.resolve(cachedData);\n    }\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    const refetchFilters = {\n      type: \"active\",\n      ...filters\n    };\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n  cancelQueries(filters = {}, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters = {}, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      const refetchFilters = {\n        ...filters,\n        type: filters.refetchType ?? filters.type ?? \"active\"\n      };\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n  refetchQueries(filters = {}, options) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options?.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    let result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        result = { ...result, ...queryDefault.defaultOptions };\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    let result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        result = { ...result, ...queryDefault.defaultOptions };\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.enabled !== true && defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","// src/queryObserver.ts\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { fetchState } from \"./query.js\";\nvar QueryObserver = class extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.options = options;\n    this.#client = client;\n    this.#selectError = null;\n    this.bindMethods();\n    this.setOptions(options);\n  }\n  #client;\n  #currentQuery = void 0;\n  #currentQueryInitialState = void 0;\n  #currentResult = void 0;\n  #currentResultState;\n  #currentResultOptions;\n  #selectError;\n  #selectFn;\n  #selectResult;\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData;\n  #staleTimeoutId;\n  #refetchIntervalId;\n  #currentRefetchInterval;\n  #trackedProps = /* @__PURE__ */ new Set();\n  bindMethods() {\n    this.refetch = this.refetch.bind(this);\n  }\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this);\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch();\n      } else {\n        this.updateResult();\n      }\n      this.#updateTimers();\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect\n    );\n  }\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus\n    );\n  }\n  destroy() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.#clearStaleTimeout();\n    this.#clearRefetchInterval();\n    this.#currentQuery.removeObserver(this);\n  }\n  setOptions(options, notifyOptions) {\n    const prevOptions = this.options;\n    const prevQuery = this.#currentQuery;\n    this.options = this.#client.defaultQueryOptions(options);\n    if (this.options.enabled !== void 0 && typeof this.options.enabled !== \"boolean\" && typeof this.options.enabled !== \"function\" && typeof resolveEnabled(this.options.enabled, this.#currentQuery) !== \"boolean\") {\n      throw new Error(\n        \"Expected enabled to be a boolean or a callback that returns a boolean\"\n      );\n    }\n    this.#updateQuery();\n    this.#currentQuery.setOptions(this.options);\n    if (prevOptions._defaulted && !shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getQueryCache().notify({\n        type: \"observerOptionsUpdated\",\n        query: this.#currentQuery,\n        observer: this\n      });\n    }\n    const mounted = this.hasListeners();\n    if (mounted && shouldFetchOptionally(\n      this.#currentQuery,\n      prevQuery,\n      this.options,\n      prevOptions\n    )) {\n      this.#executeFetch();\n    }\n    this.updateResult(notifyOptions);\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || resolveStaleTime(this.options.staleTime, this.#currentQuery) !== resolveStaleTime(prevOptions.staleTime, this.#currentQuery))) {\n      this.#updateStaleTimeout();\n    }\n    const nextRefetchInterval = this.#computeRefetchInterval();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) {\n      this.#updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n  getOptimisticResult(options) {\n    const query = this.#client.getQueryCache().build(this.#client, options);\n    const result = this.createResult(query, options);\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      this.#currentResult = result;\n      this.#currentResultOptions = this.options;\n      this.#currentResultState = this.#currentQuery.state;\n    }\n    return result;\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  trackResult(result, onPropTracked) {\n    const trackedResult = {};\n    Object.keys(result).forEach((key) => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackProp(key);\n          onPropTracked?.(key);\n          return result[key];\n        }\n      });\n    });\n    return trackedResult;\n  }\n  trackProp(key) {\n    this.#trackedProps.add(key);\n  }\n  getCurrentQuery() {\n    return this.#currentQuery;\n  }\n  refetch({ ...options } = {}) {\n    return this.fetch({\n      ...options\n    });\n  }\n  fetchOptimistic(options) {\n    const defaultedOptions = this.#client.defaultQueryOptions(options);\n    const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);\n    query.isFetchingOptimistic = true;\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n  fetch(fetchOptions) {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true\n    }).then(() => {\n      this.updateResult();\n      return this.#currentResult;\n    });\n  }\n  #executeFetch(fetchOptions) {\n    this.#updateQuery();\n    let promise = this.#currentQuery.fetch(\n      this.options,\n      fetchOptions\n    );\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop);\n    }\n    return promise;\n  }\n  #updateStaleTimeout() {\n    this.#clearStaleTimeout();\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery\n    );\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return;\n    }\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime);\n    const timeout = time + 1;\n    this.#staleTimeoutId = setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n  #computeRefetchInterval() {\n    return (typeof this.options.refetchInterval === \"function\" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;\n  }\n  #updateRefetchInterval(nextInterval) {\n    this.#clearRefetchInterval();\n    this.#currentRefetchInterval = nextInterval;\n    if (isServer || resolveEnabled(this.options.enabled, this.#currentQuery) === false || !isValidTimeout(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {\n      return;\n    }\n    this.#refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.#executeFetch();\n      }\n    }, this.#currentRefetchInterval);\n  }\n  #updateTimers() {\n    this.#updateStaleTimeout();\n    this.#updateRefetchInterval(this.#computeRefetchInterval());\n  }\n  #clearStaleTimeout() {\n    if (this.#staleTimeoutId) {\n      clearTimeout(this.#staleTimeoutId);\n      this.#staleTimeoutId = void 0;\n    }\n  }\n  #clearRefetchInterval() {\n    if (this.#refetchIntervalId) {\n      clearInterval(this.#refetchIntervalId);\n      this.#refetchIntervalId = void 0;\n    }\n  }\n  createResult(query, options) {\n    const prevQuery = this.#currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.#currentResult;\n    const prevResultState = this.#currentResultState;\n    const prevResultOptions = this.#currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;\n    const { state } = query;\n    let newState = { ...state };\n    let isPlaceholderData = false;\n    let data;\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options)\n        };\n      }\n      if (options._optimisticResults === \"isRestoring\") {\n        newState.fetchStatus = \"idle\";\n      }\n    }\n    let { error, errorUpdatedAt, status } = newState;\n    if (options.select && newState.data !== void 0) {\n      if (prevResult && newState.data === prevResultState?.data && options.select === this.#selectFn) {\n        data = this.#selectResult;\n      } else {\n        try {\n          this.#selectFn = options.select;\n          data = options.select(newState.data);\n          data = replaceData(prevResult?.data, data, options);\n          this.#selectResult = data;\n          this.#selectError = null;\n        } catch (selectError) {\n          this.#selectError = selectError;\n        }\n      }\n    } else {\n      data = newState.data;\n    }\n    if (options.placeholderData !== void 0 && data === void 0 && status === \"pending\") {\n      let placeholderData;\n      if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === \"function\" ? options.placeholderData(\n          this.#lastQueryWithDefinedData?.state.data,\n          this.#lastQueryWithDefinedData\n        ) : options.placeholderData;\n        if (options.select && placeholderData !== void 0) {\n          try {\n            placeholderData = options.select(placeholderData);\n            this.#selectError = null;\n          } catch (selectError) {\n            this.#selectError = selectError;\n          }\n        }\n      }\n      if (placeholderData !== void 0) {\n        status = \"success\";\n        data = replaceData(\n          prevResult?.data,\n          placeholderData,\n          options\n        );\n        isPlaceholderData = true;\n      }\n    }\n    if (this.#selectError) {\n      error = this.#selectError;\n      data = this.#selectResult;\n      errorUpdatedAt = Date.now();\n      status = \"error\";\n    }\n    const isFetching = newState.fetchStatus === \"fetching\";\n    const isPending = status === \"pending\";\n    const isError = status === \"error\";\n    const isLoading = isPending && isFetching;\n    const hasData = data !== void 0;\n    const result = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === \"success\",\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === \"paused\",\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch\n    };\n    return result;\n  }\n  updateResult(notifyOptions) {\n    const prevResult = this.#currentResult;\n    const nextResult = this.createResult(this.#currentQuery, this.options);\n    this.#currentResultState = this.#currentQuery.state;\n    this.#currentResultOptions = this.options;\n    if (this.#currentResultState.data !== void 0) {\n      this.#lastQueryWithDefinedData = this.#currentQuery;\n    }\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n    this.#currentResult = nextResult;\n    const defaultNotifyOptions = {};\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n      const { notifyOnChangeProps } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === \"function\" ? notifyOnChangeProps() : notifyOnChangeProps;\n      if (notifyOnChangePropsValue === \"all\" || !notifyOnChangePropsValue && !this.#trackedProps.size) {\n        return true;\n      }\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps\n      );\n      if (this.options.throwOnError) {\n        includedProps.add(\"error\");\n      }\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key;\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n    if (notifyOptions?.listeners !== false && shouldNotifyListeners()) {\n      defaultNotifyOptions.listeners = true;\n    }\n    this.#notify({ ...defaultNotifyOptions, ...notifyOptions });\n  }\n  #updateQuery() {\n    const query = this.#client.getQueryCache().build(this.#client, this.options);\n    if (query === this.#currentQuery) {\n      return;\n    }\n    const prevQuery = this.#currentQuery;\n    this.#currentQuery = query;\n    this.#currentQueryInitialState = query.state;\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n  onQueryUpdate() {\n    this.updateResult();\n    if (this.hasListeners()) {\n      this.#updateTimers();\n    }\n  }\n  #notify(notifyOptions) {\n    notifyManager.batch(() => {\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult);\n        });\n      }\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: \"observerResultsUpdated\"\n      });\n    });\n  }\n};\nfunction shouldLoadOnMount(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === \"error\" && options.retryOnMount === false);\n}\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\nfunction shouldFetchOn(query, options, field) {\n  if (resolveEnabled(options.enabled, query) !== false) {\n    const value = typeof field === \"function\" ? field(query) : field;\n    return value === \"always\" || value !== false && isStale(query, options);\n  }\n  return false;\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return (query !== prevQuery || resolveEnabled(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== \"error\") && isStale(query, options);\n}\nfunction isStale(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.isStaleByTime(resolveStaleTime(options.staleTime, query));\n}\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult) {\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  }\n  return false;\n}\nexport {\n  QueryObserver\n};\n//# sourceMappingURL=queryObserver.js.map","// src/removable.ts\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class {\n  constructor(options) {\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  let promiseResolve;\n  let promiseReject;\n  const promise = new Promise((outerResolve, outerReject) => {\n    promiseResolve = outerResolve;\n    promiseReject = outerReject;\n  });\n  const cancel = (cancelOptions) => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort?.();\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess?.(value);\n      continueFn?.();\n      promiseResolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError?.(value);\n      continueFn?.();\n      promiseReject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return promise;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return promise;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/utils.ts\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n  return void 0;\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return !Object.keys(b).some((key) => !partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aItems = array ? a : Object.keys(a);\n    const aSize = aItems.length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      if ((!array && aItems.includes(key) || array) && a[key] === void 0 && b[key] === void 0) {\n        copy[key] = void 0;\n        equalItems++;\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key]);\n        if (copy[key] === a[key] && a[key] !== void 0) {\n          equalItems++;\n        }\n      }\n    }\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n  return b;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","\"use client\";\n\n// src/QueryClientProvider.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar QueryClientContext = React.createContext(\n  void 0\n);\nvar useQueryClient = (queryClient) => {\n  const client = React.useContext(QueryClientContext);\n  if (queryClient) {\n    return queryClient;\n  }\n  if (!client) {\n    throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n  }\n  return client;\n};\nvar QueryClientProvider = ({\n  client,\n  children\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n  return /* @__PURE__ */ jsx(QueryClientContext.Provider, { value: client, children });\n};\nexport {\n  QueryClientContext,\n  QueryClientProvider,\n  useQueryClient\n};\n//# sourceMappingURL=QueryClientProvider.js.map","\"use client\";\n\n// src/QueryErrorResetBoundary.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\nvar QueryErrorResetBoundaryContext = React.createContext(createValue());\nvar useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext);\nvar QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /* @__PURE__ */ jsx(QueryErrorResetBoundaryContext.Provider, { value, children: typeof children === \"function\" ? children(value) : children });\n};\nexport {\n  QueryErrorResetBoundary,\n  useQueryErrorResetBoundary\n};\n//# sourceMappingURL=QueryErrorResetBoundary.js.map","\"use client\";\n\n// src/errorBoundaryUtils.ts\nimport * as React from \"react\";\nimport { shouldThrowError } from \"./utils.js\";\nvar ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.throwOnError) {\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nvar useClearResetErrorBoundary = (errorResetBoundary) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nvar getHasError = ({\n  result,\n  errorResetBoundary,\n  throwOnError,\n  query\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && query && shouldThrowError(throwOnError, [result.error, query]);\n};\nexport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n};\n//# sourceMappingURL=errorBoundaryUtils.js.map","\"use client\";\n\n// src/isRestoring.ts\nimport * as React from \"react\";\nvar IsRestoringContext = React.createContext(false);\nvar useIsRestoring = () => React.useContext(IsRestoringContext);\nvar IsRestoringProvider = IsRestoringContext.Provider;\nexport {\n  IsRestoringProvider,\n  useIsRestoring\n};\n//# sourceMappingURL=isRestoring.js.map","// src/suspense.ts\nvar defaultThrowOnError = (_error, query) => query.state.data === void 0;\nvar ensureStaleTime = (defaultedOptions) => {\n  if (defaultedOptions.suspense) {\n    if (typeof defaultedOptions.staleTime !== \"number\") {\n      defaultedOptions.staleTime = 1e3;\n    }\n  }\n};\nvar willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nvar shouldSuspend = (defaultedOptions, result) => defaultedOptions?.suspense && result.isPending;\nvar fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).catch(() => {\n  errorResetBoundary.clearReset();\n});\nexport {\n  defaultThrowOnError,\n  ensureStaleTime,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n};\n//# sourceMappingURL=suspense.js.map","// src/utils.ts\nfunction shouldThrowError(throwError, params) {\n  if (typeof throwError === \"function\") {\n    return throwError(...params);\n  }\n  return !!throwError;\n}\nfunction noop() {\n}\nexport {\n  noop,\n  shouldThrowError\n};\n//# sourceMappingURL=utils.js.map"],"names":["focusManager","focused","cleanup","setup","window","addEventListener","listener","onFocus","removeEventListener","onSubscribe","setEventListener","onUnsubscribe","hasListeners","setFocused","isFocused","listeners","forEach","globalThis","document","visibilityState","infiniteQueryBehavior","pages","onFetch","context","query","fetchFn","result","options","direction","fetchOptions","meta","fetchMore","oldPages","state","data","oldPageParams","pageParams","cancelled","addSignalProperty","Object","defineProperty","object","enumerable","get","signal","aborted","queryFn","fetchPage","param","previous","Promise","reject","length","resolve","queryFnContext","queryKey","pageParam","page","maxPages","addTo","oldData","pageParamFn","getPreviousPageParam","getNextPageParam","initialPageParam","remainingPages","i","persister","lastIndex","hasNextPage","hasPreviousPage","Mutation","observers","mutationCache","retryer","config","mutationId","getDefaultState","setOptions","scheduleGc","updateGcTime","gcTime","addObserver","observer","includes","push","clearGcTimeout","notify","type","mutation","removeObserver","filter","x","optionalRemove","status","remove","continue","execute","variables","fn","mutationFn","onFail","failureCount","error","dispatch","onPause","onContinue","retry","retryDelay","networkMode","canRun","restored","isPaused","canStart","onMutate","start","onSuccess","onSettled","onError","runNext","action","reducer","failureReason","submittedAt","Date","now","batch","onMutationUpdate","MutationCache","constructor","mutations","Map","build","client","defaultMutationOptions","add","scope","scopeFor","set","has","delete","firstPendingMutation","find","m","foundMutation","clear","getAll","values","flat","filters","defaultedFilters","exact","findAll","event","resumePausedMutations","pausedMutations","all","map","catch","id","String","notifyManager","createNotifyManager","queue","transactions","notifyFn","callback","batchNotifyFn","scheduleFn","setTimeout","cb","schedule","flush","originalQueue","batchCalls","args","setNotifyFunction","setBatchNotifyFunction","setScheduler","onlineManager","online","onlineListener","onOnline","offlineListener","setOnline","bind","isOnline","Query","initialState","revertState","cache","defaultOptions","abortSignalConsumed","queryHash","initialData","hasData","initialDataUpdatedAt","dataUpdateCount","dataUpdatedAt","errorUpdateCount","errorUpdatedAt","fetchFailureCount","fetchFailureReason","fetchMeta","isInvalidated","fetchStatus","promise","setData","newData","updatedAt","manual","setState","setStateOptions","cancel","then","destroy","silent","reset","isActive","some","enabled","isDisabled","getObserversCount","isStale","getCurrentResult","isStaleByTime","staleTime","shouldFetchOnWindowFocus","refetch","cancelRefetch","shouldFetchOnReconnect","revert","cancelRetry","invalidate","fetch","continueRetry","abortController","AbortController","behavior","isFetchingOptimistic","initialPromise","abort","fetchState","onQueryUpdate","QueryCache","queries","defaultQueryOptions","getQueryDefaults","queryInMap","keys","QueryClient","queryCache","queryDefaults","mutationDefaults","mountCount","unsubscribeFocus","unsubscribeOnline","mount","subscribe","unmount","isFetching","isMutating","getQueryData","ensureQueryData","cachedData","fetchQuery","defaultedOptions","revalidateIfStale","prefetchQuery","getQueriesData","setQueryData","updater","prevData","setQueriesData","getQueryState","removeQueries","resetQueries","refetchFilters","refetchQueries","cancelQueries","cancelOptions","defaultedCancelOptions","invalidateQueries","refetchType","throwOnError","fetchInfiniteQuery","prefetchInfiniteQuery","getQueryCache","getMutationCache","getDefaultOptions","setDefaultOptions","setQueryDefaults","defaults","queryDefault","setMutationDefaults","mutationKey","getMutationDefaults","_defaulted","refetchOnReconnect","suspense","QueryObserver","selectError","bindMethods","currentQuery","currentQueryInitialState","currentResult","currentResultState","currentResultOptions","selectFn","selectResult","lastQueryWithDefinedData","staleTimeoutId","refetchIntervalId","currentRefetchInterval","trackedProps","Set","size","shouldFetchOnMount","executeFetch","updateResult","updateTimers","shouldFetchOn","refetchOnWindowFocus","clearStaleTimeout","clearRefetchInterval","notifyOptions","prevOptions","prevQuery","updateQuery","mounted","shouldFetchOptionally","updateStaleTimeout","nextRefetchInterval","computeRefetchInterval","updateRefetchInterval","getOptimisticResult","createResult","trackResult","onPropTracked","trackedResult","key","configurable","trackProp","getCurrentQuery","fetchOptimistic","time","refetchInterval","nextInterval","setInterval","refetchIntervalInBackground","clearTimeout","clearInterval","prevResult","prevResultState","prevResultOptions","queryInitialState","queryChange","newState","isPlaceholderData","_optimisticResults","fetchOnMount","fetchOptionally","select","placeholderData","isPending","isError","isLoading","isSuccess","isInitialLoading","isFetched","isFetchedAfterMount","isRefetching","isLoadingError","isRefetchError","nextResult","defaultNotifyOptions","shouldNotifyListeners","notifyOnChangeProps","notifyOnChangePropsValue","includedProps","changed","retryOnMount","refetchOnMount","field","value","Removable","gcTimeout","newGcTime","Math","max","Infinity","defaultRetryDelay","min","canFetch","CancelledError","isCancelledError","createRetryer","continueFn","promiseResolve","promiseReject","isRetryCancelled","isResolved","outerResolve","outerReject","canContinue","pause","continueResolve","run","promiseOrValue","delay","shouldRetry","Subscribable","isServer","noop","functionalUpdate","input","isValidTimeout","timeUntilStale","resolveStaleTime","resolveEnabled","matchQuery","predicate","stale","hashQueryKeyByOptions","partialMatchKey","matchMutation","hashKey","hashFn","queryKeyHashFn","JSON","stringify","_","val","isPlainObject","sort","reduce","a","b","replaceEqualDeep","array","isPlainArray","aItems","aSize","bItems","bSize","copy","equalItems","shallowEqualObjects","Array","isArray","o","hasObjectPrototype","ctor","prot","prototype","hasOwnProperty","getPrototypeOf","toString","call","sleep","timeout","replaceData","structuralSharing","keepPreviousData","previousData","addToEnd","items","item","newItems","slice","addToStart","skipToken","Symbol","ensureQueryFn","QueryClientContext","useQueryClient","queryClient","QueryClientProvider","children","jsx","Provider","createValue","isReset","clearReset","QueryErrorResetBoundaryContext","useQueryErrorResetBoundary","QueryErrorResetBoundary","ensurePreventErrorBoundaryRetry","errorResetBoundary","useClearResetErrorBoundary","getHasError","IsRestoringContext","useIsRestoring","IsRestoringProvider","defaultThrowOnError","_error","ensureStaleTime","willFetch","isRestoring","shouldSuspend","shouldThrowError","throwError","params"],"sourceRoot":""}