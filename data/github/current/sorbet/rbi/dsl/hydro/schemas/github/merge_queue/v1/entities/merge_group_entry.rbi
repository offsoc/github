# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::MergeQueue::V1::Entities::MergeGroupEntry`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::MergeQueue::V1::Entities::MergeGroupEntry`.

class Hydro::Schemas::Github::MergeQueue::V1::Entities::MergeGroupEntry
  sig do
    params(
      created_at: T.nilable(Google::Protobuf::Timestamp),
      head_oid: T.nilable(String),
      head_ref: T.nilable(String),
      id: T.nilable(Integer),
      merge_queue_entry_id: T.nilable(Integer),
      position: T.nilable(Integer),
      retries: T.nilable(Integer),
      state: T.nilable(T.any(Symbol, Integer)),
      updated_at: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(created_at: nil, head_oid: nil, head_ref: nil, id: nil, merge_queue_entry_id: nil, position: nil, retries: nil, state: nil, updated_at: nil); end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_head_oid; end

  sig { void }
  def clear_head_ref; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_merge_queue_entry_id; end

  sig { void }
  def clear_position; end

  sig { void }
  def clear_retries; end

  sig { void }
  def clear_state; end

  sig { void }
  def clear_updated_at; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(String) }
  def head_oid; end

  sig { params(value: String).void }
  def head_oid=(value); end

  sig { returns(String) }
  def head_ref; end

  sig { params(value: String).void }
  def head_ref=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(Integer) }
  def merge_queue_entry_id; end

  sig { params(value: Integer).void }
  def merge_queue_entry_id=(value); end

  sig { returns(Integer) }
  def position; end

  sig { params(value: Integer).void }
  def position=(value); end

  sig { returns(Integer) }
  def retries; end

  sig { params(value: Integer).void }
  def retries=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def state; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def state=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end
end
