# Code generated by protoc-gen-rbi. DO NOT EDIT.
# source: feature_management/feature_flags/data/v1/segment.proto
# typed: strict

# *
# Segment is the data model of a feature segment used for enable checks by clients.
class FeatureManagement::FeatureFlags::Data::V1::Segment
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(FeatureManagement::FeatureFlags::Data::V1::Segment) }
  def self.decode(str)
  end

  sig { params(msg: FeatureManagement::FeatureFlags::Data::V1::Segment).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(FeatureManagement::FeatureFlags::Data::V1::Segment) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: FeatureManagement::FeatureFlags::Data::V1::Segment, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      name: T.nilable(String),
      total_actors: T.nilable(Integer),
      actors_embedded: T.nilable(T::Boolean),
      actors: T.nilable(T::Array[String]),
      last_updated: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(
    name: "",
    total_actors: 0,
    actors_embedded: false,
    actors: [],
    last_updated: nil
  )
  end

  # name is the name of the segment. Max size is 250.
  sig { returns(String) }
  def name
  end

  # name is the name of the segment. Max size is 250.
  sig { params(value: String).void }
  def name=(value)
  end

  # name is the name of the segment. Max size is 250.
  sig { void }
  def clear_name
  end

  # total_actors is the total number of actors in the segment.
  sig { returns(Integer) }
  def total_actors
  end

  # total_actors is the total number of actors in the segment.
  sig { params(value: Integer).void }
  def total_actors=(value)
  end

  # total_actors is the total number of actors in the segment.
  sig { void }
  def clear_total_actors
  end

  # actors_embedded indicates whether the actors are embedded in the segment or not.
  sig { returns(T::Boolean) }
  def actors_embedded
  end

  # actors_embedded indicates whether the actors are embedded in the segment or not.
  sig { params(value: T::Boolean).void }
  def actors_embedded=(value)
  end

  # actors_embedded indicates whether the actors are embedded in the segment or not.
  sig { void }
  def clear_actors_embedded
  end

  # actors is the list of actors in the segment.
  sig { returns(T::Array[String]) }
  def actors
  end

  # actors is the list of actors in the segment.
  sig { params(value: ::Google::Protobuf::RepeatedField).void }
  def actors=(value)
  end

  # actors is the list of actors in the segment.
  sig { void }
  def clear_actors
  end

  # last_updated is the timestamp of the last update to the segment.
  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def last_updated
  end

  # last_updated is the timestamp of the last update to the segment.
  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def last_updated=(value)
  end

  # last_updated is the timestamp of the last update to the segment.
  sig { void }
  def clear_last_updated
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end
