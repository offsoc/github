#!/bin/bash
set -e

# This script sets up the github/meuse repository for a github/github codespace.

RED='\033[0;31m'
GREEN='\033[0;32m'
ORANGE='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print help message
help() {
  echo "Sets up the github/meuse repository for a github/github codespace."
  echo
  echo "Usage: setup-codespaces-meuse [-b branch] [-d|h] "
  echo "Options:"
  echo "-b     Specify the meuse branch to clone. Defaults to main if not provided."
  echo "-d     Before starting, delete the existing meuse directory in the codespace."
  echo "-h     Print this help message."
  echo
}

# Set the branch as main. If a branch is provided as an argument, it will be set to that when we parse the provided options.
BRANCH=main

# Get the options
while getopts ":b:hd" opt; do
  case $opt in
    h) # display help message
      help
      exit;;
    b) # If a branch was provided, re-set the variable
      BRANCH=$OPTARG;;
    d) # Delete the repository if it exists
      DELETE_REPO=true;;
    :)
    echo "Error: Option -$OPTARG requires an argument."
    exit 1;;
    \?) # Invalid option
      echo "Error: Invalid option -$OPTARG"
      exit 1;;
  esac
done

# If the meuse repo already exists and the delete argument hasn't been specified, echo a warning and exit.
if [[ -d "/workspaces/meuse" && -z "$DELETE_REPO" ]]; then
  echo -e "${RED}The meuse directory already exists in this codespace.${NC} \nYou can rerun the setup script with the -d argument to force the deletion of the existing repository."
  exit 1
fi

if [ "$DELETE_REPO" = true ]; then
  echo -e "\n${GREEN}➡️ Deleting the existing meuse repo...\n${NC}"
  rm -rf /workspaces/meuse
fi

echo -e "\n${GREEN}➡️ Cloning meuse repo at branch $BRANCH...\n${NC}"
git clone https://github.com/github/meuse.git /workspaces/meuse --branch $BRANCH

# Set $RAILS_ROOT
source $(dirname $0)/environment.sh

# Adds Meuse compatible versions of npm and yarn to PATH.
export PATH=/workspaces/meuse/bin:$($RAILS_ROOT/bin/npm config get prefix)/bin:$PATH

# Bootstrap meuse dependencies and prepare the DB
echo -e "\n${GREEN}➡️ Setting up meuse...\n${NC}"
( cd /workspaces/meuse ; script/setup )

# Configure meuse to work within the dotcom environment.
# Compatinle Meuse scripts are loading environment variables from .env.development.local.
echo -e "PATH=$(echo $PATH)
AQUEDUCT_URL=http://localhost:18081/twirp
BILLABLE_OWNER_API_CONNECTION=http
HYDRO_KAFKA_BROKERS=127.0.0.1:9092" > /workspaces/meuse/.env.development.local

echo -e ""
echo -e "${GREEN}💵💵 FINISHED! Meuse is ready. 💵💵${NC}"
echo -e ""
echo -e "Start meuse with ${BLUE}/workspaces/meuse/script/server${NC}. Dotcom must be started before."
echo -e ""
echo -e "Next you can ${ORANGE}cd /workspaces/meuse${NC} and do more from there:"
echo -e ""
echo -e "${ORANGE}code .${NC} - Open a new VS Code instance scoped to the meuse repo"
echo -e "${ORANGE}script/generate-usage${NC} - Generate test usage data"
