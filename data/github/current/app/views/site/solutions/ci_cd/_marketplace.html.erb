<%= render(Primer::Alpha::OcticonSymbols.new(icons: [{ symbol: "dot-fill", size: :medium }])) %>

<% row1 = [{
  name: "OpenShift Client Installer",
  author: "redhat-actions",
  logo: "redhat.svg",
  description: "Installs the OpenShift Client CLI onto your GitHub Action runner.",
}, {
  name: "Set up gcloud Cloud SDK environment",
  author: "google-github-actions",
  logo: "google.svg",
  description: "Configures the Google Cloud SDK in the GitHub Actions environment.",
}, {
  name: "Amazon ECR \"Login\" Action for GitHub Actions",
  author: "aws-actions",
  logo: "aws.svg",
  description: "Logs in the local Docker client to one or more Amazon ECR Private registries or an Amazon ECR Public registry.",
}, {
  name: "Velocity deploy action",
  author: "codeclimate",
  logo: "codeclimate.svg",
  description: "A simple GitHub action that will report deployments to Velocity.",
}, {
  name: "Docker Login",
  author: "docker",
  logo: "docker.svg",
  description: "GitHub Action to login against a Docker registry.",
}, {
  name: "Setup AWS SAM CLI",
  author: "aws-actions",
  logo: "aws.svg",
  description: "Action to set up AWS SAM CLI and add it to the PATH.",
}, {
  name: "Unity - Test runner",
  author: "game-ci",
  logo: "game-ci.svg",
  description: "GitHub Action to run tests for any Unity project.",
}, {
  name: "Trigger CircleCI Pipeline",
  author: "CircleCI-Public",
  logo: "circleci-public.svg",
  description: "Trigger your CircleCI pipelines from any event on GitHub with GitHub Actions.",
}, {
  name: "Codacy Coverage Reporter",
  author: "codacy",
  logo: "codacy.svg",
  description: "This action runs the codacy-coverage-reporter for all commits and pull requests with your Codacy configuration.",
}, {
  name: "Run mabl tests",
  author: "mablhq",
  logo: "mablhq.svg",
  description: "This GitHub Action creates a mabl deployment event, triggering cloud test runs associated with that deployment and waiting for their results.",
}, {
  name: "Super-Linter",
  author: "GitHub",
  logo: "super-linter.svg",
  description: "This repository is for the GitHub Action to run a Super-Linter. It is a simple combination of various linters, written in bash, to help validate your source code.",
}, {
  name: "Cloudflare Pages GitHub Action",
  author: "Cloudflare",
  logo: "cloudflare.svg",
  description: "GitHub Action for creating Cloudflare Pages deployments, using the new Direct Upload feature and Wrangler integration.",
}]

row2 = [{
  name: "HashiCorp - Setup Terraform",
  author: "HashiCorp",
  logo: "hashicorp.svg",
  description: "The hashicorp/setup-terraform action is a JavaScript action that sets up Terraform CLI in your GitHub Actions workflow.",
}, {
  name: "Vercel Action",
  author: "amondnet",
  logo: "vercel.svg",
  description: "Vercel is a cloud platform for static sites and Serverless Functions that fits perfectly with your workflow.",
}, {
  name: "Secrets Sync Action",
  author: "Google",
  logo: "google.svg",
  description: "A GitHub Action that can sync secrets from one repository to many others.",
}, {
  name: "Pulumi CLI Action",
  author: "Pulumi",
  logo: "pulumi.svg",
  description: "Pulumi's GitHub Actions deploy apps and infrastructure to your cloud of choice.",
}, {
  name: "Actions for Discord",
  author: "Ilshidur",
  logo: "discord.svg",
  description: "Sends a Discord notification message. Simple as that. Supports all workflow event types by using the Discord GitHub webhooks.",
}, {
  name: "Build and push Docker images",
  author: "Docker",
  logo: "docker.svg",
  description: "GitHub Action to build and push Docker images with Buildx with full support of the features provided by Moby BuildKit builder toolkit.",
}, {
  name: "Setup Node.js environment",
  author: "Actions",
  logo: "setup-node.svg",
  description: "Downloading and caching distribution of the requested Node.js version, and adding it to the PATH.",
}, {
  name: "Is Website vulnerable",
  author: "lirantal",
  logo: "is-website-vulnerable.svg",
  description: "Finds publicly known security vulnerabilities in a website's frontend JavaScript libraries.",
}, {
  name: "FTP Deploy",
  author: "SamKirkland",
  logo: "ftp-deploy.svg",
  description: "Automate deploying websites and more with this GitHub action.",
}, {
  name: "SSH Remote Commands",
  author: "appleboy",
  logo: "ssh-remote-commands.svg",
  description: "GitHub Action for executing remote ssh commands.",
}, {
  name: "GH Release",
  author: "softprops",
  logo: "gh-release.svg",
  description: "A GitHub Action for creating GitHub Releases on Linux, Windows, and macOS virtual environments.",
}, {
  name: "Publish Docker",
  author: "elgohr",
  logo: "publish-docker.svg",
  description: "This Action for Docker uses the Git branch as the Docker tag for building and pushing the container.",
}] %>

<%= render Site::RiverComponent.new(
  header: "Scale fast with thousands of pre-built CI/CD workflows",
  text: "Go from builds to deployments with CI/CD templates from leading DevOps organizations like Red Hat, OpenShift, Docker, and more. Get started with more than 14,000 workflows in the GitHub Marketplace.",
  text_placement: :center,
  id: "marketplace",
  cache_version: 2,
  link: {
    text: "Explore GitHub Marketplace",
    url: marketplace_actions_path,
  }
) do %>
  <div class="ci-cd-cards-row-top d-flex gutter-condensed text-left">
    <% row1.each do |workflow| %>
      <%= render "site/solutions/ci_cd/marketplace_card", workflow: workflow %>
    <% end %>
    <% row1.each do |workflow| %>
      <%= render "site/solutions/ci_cd/marketplace_card", workflow: workflow %>
    <% end %>
  </div>

  <div class="ci-cd-cards-row-bottom d-flex gutter-condensed text-left">
    <% row2.each do |workflow| %>
      <%= render "site/solutions/ci_cd/marketplace_card", workflow: workflow %>
    <% end %>
    <% row2.each do |workflow| %>
      <%= render "site/solutions/ci_cd/marketplace_card", workflow: workflow %>
    <% end %>
  </div>

  <div class="text-center">
    <button
      type="button"
      class="f4-mktg js-animation-pause-toggle animation-pause-toggle rounded-2"
      data-target-id="marketplace"
      aria-pressed="false"
      data-pause-aria-label="Marketplace pre-built CI/CD workflows scrolling animation is currently playing. Click to pause animation."
      data-play-aria-label="Marketplace pre-built CI/CD workflows scrolling animation is paused. Click to play animation."
    >
      <span class="animation-toggle-pause-label">Pause</span>
      <span class="animation-toggle-play-label">Play</span>
    </button>
  </div>
<% end %>
