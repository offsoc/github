{"version":3,"file":"pull-requests-processing-indicator-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/hydro-analytics/hydro-analytics.ts","ui/packages/pull-requests-processing-indicator/PullRequestsProcessingIndicator.tsx","ui/packages/pull-requests-processing-indicator/pull-requests-processing-indicator.ts","ui/packages/react-core/deferred-registry.ts","ui/packages/react-core/react-partial-anchor.ts","ui/packages/react-core/react-partial-registry.ts","ui/packages/react-core/ReactPartialElement.tsx","ui/packages/react-core/register-partial.ts","ui/packages/react-profiling-mode/src/index.ts","ui/packages/use-analytics/use-analytics.ts","ui/packages/verified-fetch/verified-fetch.ts","ui/packages/react-core/PartialRouter.tsx","ui/packages/react-core/PartialEntry.tsx","ui/packages/react-core/ReactBaseElement.tsx"],"sourcesContent":["import {AnalyticsClient, getOptionsFromMeta} from '@github/hydro-analytics-client'\nimport type {Context} from '@github/hydro-analytics-client'\nimport safeStorage from '@github-ui/safe-storage'\nimport {isStaff} from '@github-ui/stats'\nconst {getItem} = safeStorage('localStorage')\n\ndeclare const process: {\n  env: {\n    NODE_ENV: string\n  }\n}\n\nconst dimensionPrefix = 'dimension_'\nlet hydroAnalyticsClient: AnalyticsClient | undefined\n\nconst MARKETING_PARAMS = ['utm_source', 'utm_medium', 'utm_campaign', 'utm_term', 'utm_content', 'scid']\n\ntry {\n  const options = getOptionsFromMeta('octolytics')\n\n  // Remove the base context because meta tags can change as the user navigates with Turbo\n  // These will be folded in for each event & page view\n  delete options.baseContext\n\n  hydroAnalyticsClient = new AnalyticsClient(options)\n} catch (_) {\n  // Failed to get options from meta tags.  This most likely means analytics are disabled.\n}\n\nfunction extendBaseContext(context?: Context) {\n  const baseContext = getOptionsFromMeta('octolytics').baseContext || {}\n\n  if (baseContext) {\n    delete baseContext.app_id\n    delete baseContext.event_url\n    delete baseContext.host\n\n    for (const [key, value] of Object.entries(baseContext)) {\n      // some octolytics meta tags are prefixed with dimension-, which we don't need with the new hydro-analytics-client\n      if (key.startsWith(dimensionPrefix)) {\n        baseContext[key.replace(dimensionPrefix, '')] = value\n        delete baseContext[key]\n      }\n    }\n  }\n\n  const visitorMeta = document.querySelector<HTMLMetaElement>('meta[name=visitor-payload]')\n  if (visitorMeta) {\n    const visitorHash = JSON.parse(atob(visitorMeta.content))\n    Object.assign(baseContext, visitorHash)\n  }\n\n  const urlParams = new URLSearchParams(window.location.search)\n  for (const [key, value] of urlParams) {\n    if (MARKETING_PARAMS.includes(key.toLowerCase())) {\n      baseContext[key] = value\n    }\n  }\n\n  // Include additional context from the page\n  baseContext.staff = isStaff().toString()\n\n  return Object.assign(baseContext, context)\n}\n\nexport function sendPageView(context?: Context) {\n  hydroAnalyticsClient?.sendPageView(extendBaseContext(context))\n}\n\nexport function sendEvent(type: string, context: Record<string, string | number | boolean | undefined | null> = {}) {\n  const service = document.head?.querySelector<HTMLMetaElement>('meta[name=\"current-catalog-service\"]')?.content\n\n  const cleanContext: Context = service ? {service} : {}\n\n  for (const [key, value] of Object.entries(context)) {\n    if (value !== undefined && value !== null) {\n      cleanContext[key] = `${value}`\n    }\n  }\n\n  if (hydroAnalyticsClient) {\n    const typeWithFallback = type || 'unknown'\n    const fullContext = extendBaseContext(cleanContext)\n    hydroAnalyticsClient.sendEvent(typeWithFallback, extendBaseContext(cleanContext))\n\n    if (process.env.NODE_ENV === 'development') {\n      debugSendEvent(typeWithFallback, fullContext)\n    }\n  }\n}\n\nexport function stringifyObjectValues(obj: object) {\n  return Object.fromEntries(Object.entries(obj).map(([k, v]) => [k, JSON.stringify(v)]))\n}\n\nfunction debugSendEvent(type: string, context: Context) {\n  if (getItem('hydro-debug.send-event') === 'true') {\n    // eslint-disable-next-line no-console\n    console.group('[hydro-debug.send-event]')\n    // eslint-disable-next-line no-console\n    console.log({type, context})\n    // eslint-disable-next-line no-console\n    console.groupEnd()\n  }\n}\n","import {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {Box, Button, Spinner, Text} from '@primer/react'\nimport {Tooltip} from '@primer/react/next'\nimport {useCallback, useEffect, useState} from 'react'\nimport {useAnalytics} from '@github-ui/use-analytics'\nimport {AnalyticsProvider} from '@github-ui/analytics-provider'\nimport useIsMounted from '@github-ui/use-is-mounted'\nimport {LinkExternalIcon} from '@primer/octicons-react'\nexport interface PullRequestsProcessingIndicatorProps {\n  processingIndicatorUrl: string\n  repositoryId: number\n  pullRequestId: number\n}\n\nfunction differenceInSeconds(laterDate: Date, earlierDate: Date) {\n  return Math.round(laterDate.getTime() - earlierDate.getTime()) / 1000\n}\n\ninterface ProcessingState {\n  stale: boolean\n  latest_unsynced_push_to_head_ref_at: string | null // date\n}\n\nconst initialProcessingState = {stale: false, latest_unsynced_push_to_head_ref_at: null}\n\n/**\n * Renders a spinner with information if the pull request is stale and the last\n * push was more than 20 seconds ago. Handles its own data fetching from an\n * internal JSON endpoint.\n *\n * This is a React partial rendered by the Rails description partial\n * (app/views/pull_requests/_description.html.erb). Because that Rails partial\n * refreshes on live updates, we don't need to connect this component explicitly\n * to Alive because the HTML fragment will be returned and this component will\n * be re-mounted. It'll fetch the data again from the processing_indicator\n * endpoint and render the spinner if the conditions are met.\n */\nexport function PullRequestsProcessingIndicatorWithDataFetching({\n  processingIndicatorUrl,\n  repositoryId,\n  pullRequestId,\n}: PullRequestsProcessingIndicatorProps) {\n  const [processingState, setProcessingState] = useState<ProcessingState>(initialProcessingState)\n  const isMounted = useIsMounted()\n\n  const fetchProcessingInfo = useCallback(async () => {\n    try {\n      const response = await verifiedFetchJSON(processingIndicatorUrl)\n      if (response.ok) {\n        const state = await response.json()\n        if (isMounted()) {\n          setProcessingState(state)\n        }\n      }\n    } catch (error) {\n      if (isMounted()) {\n        setProcessingState(initialProcessingState)\n      }\n    }\n  }, [isMounted, processingIndicatorUrl])\n\n  useEffect(() => {\n    fetchProcessingInfo()\n    // Only run the fetch once\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const {stale, latest_unsynced_push_to_head_ref_at} = processingState\n\n  return (\n    <Box sx={{mt: -2}}>\n      <AnalyticsProvider appName=\"pull-requests-processing-indicator\" category=\"render\" metadata={{}}>\n        <PullRequestsProcessingIndicator\n          pullRequestId={pullRequestId}\n          repositoryId={repositoryId}\n          stale={stale}\n          latest_unsynced_push_to_head_ref_at={latest_unsynced_push_to_head_ref_at}\n        />\n      </AnalyticsProvider>\n    </Box>\n  )\n}\n\n/**\n * Renders a spinner with information if the pull request is stale and the last push was more than 20 seconds ago\n * Presentational component that can be wrapped inside of a Relay component\n */\nexport function PullRequestsProcessingIndicator({\n  pullRequestId,\n  repositoryId,\n  stale,\n  latest_unsynced_push_to_head_ref_at,\n}: ProcessingState & Pick<PullRequestsProcessingIndicatorProps, 'repositoryId' | 'pullRequestId'>) {\n  const {sendAnalyticsEvent} = useAnalytics()\n\n  if (!stale || !latest_unsynced_push_to_head_ref_at) return null\n  const now = new Date()\n  const lastPushDate = new Date(latest_unsynced_push_to_head_ref_at)\n  const secondsSinceLastPush = differenceInSeconds(now, lastPushDate)\n  const oneDayinSeconds = 24 * 60 * 60\n\n  if (secondsSinceLastPush < 20 || secondsSinceLastPush >= oneDayinSeconds) return null\n\n  sendAnalyticsEvent('pull_requests.processing_indicator', '', {\n    repositoryId,\n    pullRequestId,\n    secondsSinceLastPush,\n  })\n\n  return (\n    <Tooltip text=\"Recent push is still being processed, and will show up in a bit\" direction=\"s\">\n      <Button\n        as=\"a\"\n        href=\"https://gh.io/pr-sync-in-progress\"\n        variant=\"invisible\"\n        sx={{color: 'fg.muted'}}\n        trailingVisual={LinkExternalIcon}\n      >\n        <Box sx={{display: 'flex', alignItems: 'center', fontWeight: 400}}>\n          <Spinner size=\"small\" sx={{color: 'fg.muted'}} />\n          <Text sx={{color: 'fg.muted', fontSize: 0, ml: 2}}>Processing updates</Text>\n        </Box>\n      </Button>\n    </Tooltip>\n  )\n}\n\ntry{ PullRequestsProcessingIndicatorWithDataFetching.displayName ||= 'PullRequestsProcessingIndicatorWithDataFetching' } catch {}\ntry{ PullRequestsProcessingIndicator.displayName ||= 'PullRequestsProcessingIndicator' } catch {}","import {registerReactPartial} from '@github-ui/react-core/register-partial'\nimport {PullRequestsProcessingIndicatorWithDataFetching} from './PullRequestsProcessingIndicator'\n\nregisterReactPartial('pull-requests-processing-indicator', {\n  Component: PullRequestsProcessingIndicatorWithDataFetching,\n})\n","export class DeferredRegistry<T> {\n  private registrationEntries: Record<\n    string,\n    {\n      promise: Promise<T>\n      resolve?: (r: T) => void\n    }\n  > = {}\n\n  public register(name: string, registration: T) {\n    const entry = this.registrationEntries[name]\n    if (entry) {\n      entry.resolve?.(registration)\n    } else {\n      this.registrationEntries[name] = {\n        promise: Promise.resolve(registration),\n      }\n    }\n  }\n\n  public getRegistration(name: string): Promise<T> {\n    this.registrationEntries[name] ||= new Deferred()\n    return this.registrationEntries[name].promise\n  }\n}\n\nclass Deferred<T> {\n  declare promise\n  declare resolve: (r: T) => void\n\n  constructor() {\n    this.promise = new Promise<T>(resolve => {\n      this.resolve = resolve\n    })\n  }\n}\n","import type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {useCallback, useEffect, useRef, useState} from 'react'\n\ninterface ReactPartialAnchor {\n  /**\n   * DO NOT USE THIS PROPERTY DIRECTLY. It is meant to be used with useExternalAnchor and useOnAnchorClick\n   */\n  __wrapperElement: ReactPartialAnchorElement\n}\n\nexport interface ReactPartialAnchorProps {\n  reactPartialAnchor?: ReactPartialAnchor\n}\n\nexport function usePartialAnchorProps(\n  anchorElement: ReactPartialAnchorElement | undefined | null,\n): ReactPartialAnchorProps {\n  useEffect(() => {\n    const anchor = anchorElement?.anchor\n\n    if (!anchor) {\n      return\n    }\n\n    if ('disabled' in anchor) {\n      anchor.disabled = false\n    }\n    anchor.classList.remove('cursor-wait')\n  }, [anchorElement])\n\n  if (!anchorElement) {\n    return {}\n  }\n\n  return {\n    reactPartialAnchor: {\n      __wrapperElement: anchorElement,\n    },\n  }\n}\n\nexport function useExternalAnchor(reactPartialAnchor: ReactPartialAnchor) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor || null)\n  const [open, setOpen] = useState(false)\n\n  const onClick = useCallback(() => {\n    // toggle the open state when clicked\n    setOpen(!open)\n  }, [open, setOpen])\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    ref.current.setAttribute('aria-expanded', open.toString())\n    ref.current.setAttribute('aria-haspopup', 'true')\n  }, [ref, open])\n\n  useOnAnchorClick(reactPartialAnchor, onClick)\n\n  return {\n    ref,\n    open,\n    setOpen,\n  }\n}\n\nexport function useOnAnchorClick(reactPartialAnchor: ReactPartialAnchor, onClick: (event: MouseEvent) => void) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor)\n\n  useEffect(() => {\n    const element = ref.current\n    if (!element) {\n      return\n    }\n\n    element.addEventListener('click', onClick)\n    return () => element.removeEventListener('click', onClick)\n  }, [ref, onClick])\n}\n\nexport type PropsWithPartialAnchor<T> = T & Required<ReactPartialAnchorProps>\n","import {DeferredRegistry} from './deferred-registry'\n\nexport interface PartialRegistration {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Component: React.ComponentType<any>\n}\n\nexport const partialRegistry = new DeferredRegistry<PartialRegistration>()\n\nexport function getReactPartial(appName: string) {\n  return partialRegistry.getRegistration(appName)\n}\n","import {controller} from '@github/catalyst'\nimport {getReactPartial} from './react-partial-registry'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {ReactBaseElement} from './ReactBaseElement'\nimport {PartialEntry} from './PartialEntry'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\n\n// What is this silliness? Is it react or a web component?!\n// It's a web component we use to bootstrap react partials within the monolith.\n@controller\nclass ReactPartialElement extends ReactBaseElement<EmbeddedPartialData> {\n  nameAttribute = 'partial-name'\n\n  async getReactNode(embeddedData: EmbeddedPartialData) {\n    const {Component} = await getReactPartial(this.name)\n\n    // Some React Partials will be wrapped in a react-partial-anchor, which is used to conditionally render the Partial\n    const anchorElement = this.closest<ReactPartialAnchorElement>('react-partial-anchor')\n\n    return (\n      <PartialEntry\n        partialName={this.name}\n        embeddedData={embeddedData}\n        Component={Component}\n        wasServerRendered={this.hasSSRContent}\n        ssrError={this.ssrError}\n        anchorElement={anchorElement}\n      />\n    )\n  }\n}\n","import {partialRegistry, type PartialRegistration} from './react-partial-registry'\n// Import the web component to get it registered on the window\nimport './ReactPartialElement'\n\n// NOTE: if the signature of this method changes, also update the react-partial-name ESLint rule\n// /workspaces/github/ui/packages/eslint-plugin-github-monorepo/rules/react-partial-name.js\nexport function registerReactPartial(name: string, registration: PartialRegistration) {\n  partialRegistry.register(name, registration)\n}\n","import safeStorage from '@github-ui/safe-storage'\n\nconst {getItem, setItem, removeItem} = safeStorage('localStorage')\nconst REACT_PROFILING_ENABLED = 'REACT_PROFILING_ENABLED'\n\ninterface ReactProfilingModeMethods {\n  enable: () => void\n  disable: () => void\n  isEnabled: () => boolean\n}\n\nconst ReactProfilingMode: ReactProfilingModeMethods = {\n  enable: () => setItem(REACT_PROFILING_ENABLED, 'true'),\n  disable: () => removeItem(REACT_PROFILING_ENABLED),\n  isEnabled: () => !!getItem(REACT_PROFILING_ENABLED),\n}\n\nexport default ReactProfilingMode\n","import {useCallback, useContext} from 'react'\nimport {sendEvent} from '@github-ui/hydro-analytics'\nimport {AnalyticsContext} from '@github-ui/analytics-provider/context'\n\nexport interface AnalyticsEvent {\n  category: string\n  action: string\n  label: string\n  [key: string]: unknown\n}\n\ntype SendAnalyticsEventFunction = (\n  eventType: string,\n  target?: string,\n  payload?: {[key: string]: unknown} | AnalyticsEvent,\n) => void\n\n/**\n * Use this hook with the AnalyticsContext to send user analytics events to the data warehouse.\n * This hook will read values from the nearest AnalyticsContext.Provider, though you can override properties directly when sending an event.\n * It uses the `sendEvent` helper from `github/hydro-analytics`,\n * which enriches event context with additional information about the user, repository, and current page.\n * See: https://thehub.github.com/epd/engineering/products-and-services/internal/hydro/installation/browser-events/\n *\n * You can find a list of all included context properties in `app/helpers/octolytics_helper.rb`.\n *\n *\n * @example\n * ```tsx\n * function Component() {\n *   const { sendAnalyticsEvent } = useAnalytics()\n *   return <Button onClick={() => sendAnalyticsEvent('file_tree.close', 'FILE_TREE_TOGGLE')}>CLOSE TREE</Button>\n * }\n * ```\n *\n */\nexport function useAnalytics(): {\n  sendAnalyticsEvent: SendAnalyticsEventFunction\n} {\n  // WARNING: Do not add any hooks here that will cause rerenders on soft navs.\n  const contextData = useContext(AnalyticsContext)\n\n  if (!contextData) {\n    throw new Error('useAnalytics must be used within an AnalyticsContext')\n  }\n  const {appName, category, metadata} = contextData\n\n  return {\n    sendAnalyticsEvent: useCallback(\n      (eventType, target?, payload = {}) => {\n        const context = {\n          react: true,\n          ['app_name']: appName,\n          category,\n          ...metadata,\n        }\n        sendEvent(eventType, {...context, ...payload, target})\n      },\n      [appName, category, metadata],\n    ),\n  }\n}\n\n/**\n * Use this hook with the AnalyticsContext to send user analytics events to the data warehouse.\n * This hook will read values from the nearest AnalyticsContext.Provider, though you can override properties directly when sending an event.\n * It uses the `sendEvent` helper from `github/hydro-analytics`,\n * which enriches event context with additional information about the user, repository, and current page.\n * See: https://thehub.github.com/epd/engineering/products-and-services/internal/hydro/installation/browser-events/\n *\n * You can find a list of all included context properties in `app/helpers/octolytics_helper.rb`.\n *\n *\n * @example\n * ```tsx\n * function Component() {\n *   const { sendClickAnalyticsEvent } = useClickAnalytics()\n *   return <Button onClick={() => sendClickAnalyticsEvent({category: '...', action: '...', label: '...'})}>Submit</Button>\n * }\n * ```\n *\n */\nexport function useClickAnalytics(): {\n  sendClickAnalyticsEvent: (payload?: {[key: string]: unknown} | AnalyticsEvent) => void\n} {\n  const {sendAnalyticsEvent} = useAnalytics()\n  return {\n    sendClickAnalyticsEvent: useCallback(\n      (payload = {}) => {\n        sendAnalyticsEvent('analytics.click', undefined, payload)\n      },\n      [sendAnalyticsEvent],\n    ),\n  }\n}\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  assertRelativePathOrSameOrigin(path)\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\nfunction assertRelativePathOrSameOrigin(path: string) {\n  if (process.env.NODE_ENV === 'test' && !window.location.origin) return\n  const url = new URL(path, window.location.origin)\n  if (url.origin !== window.location.origin) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetch(path, {...init, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetchJSON(path, {...init, headers})\n}\n","import {useState} from 'react'\nimport type {BrowserHistory, MemoryHistory} from '@remix-run/router'\nimport {Router} from 'react-router-dom'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\ntype Props = {\n  children: React.ReactNode\n  history: BrowserHistory | MemoryHistory\n}\n\nexport function PartialRouter({children, history}: Props) {\n  const [state, setState] = useState({\n    location: history.location,\n  })\n\n  useHydratedEffect(() => history.listen(setState), [history])\n\n  return (\n    <Router location={state.location} navigator={history}>\n      {children}\n    </Router>\n  )\n}\n\ntry{ PartialRouter.displayName ||= 'PartialRouter' } catch {}","// Think of this as the entry point into the framework\nimport React from 'react'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {BaseProviders} from './BaseProviders'\nimport type {BrowserHistory} from '@remix-run/router'\nimport {createMemoryHistory} from '@remix-run/router'\nimport {AppContextProvider} from './AppContextProvider'\nimport {PartialRouter} from './PartialRouter'\nimport {CommonElements} from './CommonElements'\nimport {createBrowserHistory} from './create-browser-history'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {usePartialAnchorProps} from './react-partial-anchor'\n\ninterface Props {\n  partialName: string\n  embeddedData: EmbeddedPartialData\n  Component: React.ComponentType\n  wasServerRendered: boolean\n  ssrError?: HTMLScriptElement\n  anchorElement?: ReactPartialAnchorElement | null\n}\n\nexport function PartialEntry({\n  partialName,\n  embeddedData,\n  Component,\n  wasServerRendered,\n  ssrError,\n  anchorElement,\n}: Props) {\n  // Create a ref to track the browser history:\n  const historyRef = React.useRef<BrowserHistory>()\n  const window = globalThis.window as Window | undefined\n\n  // For linking to work, we can just pass a dummy pathname here. We may consider plumbing the actual path in\n  if (!historyRef.current) {\n    historyRef.current = !window\n      ? createMemoryHistory({initialEntries: [{pathname: '/'}]})\n      : createBrowserHistory({window})\n  }\n  const history = historyRef.current\n  const partialAnchorProps = usePartialAnchorProps(anchorElement)\n\n  // Wrap the partial in an AppContextProvider and static Router so that react-core links\n  // will be functional.\n  return (\n    <BaseProviders appName={partialName} wasServerRendered={wasServerRendered}>\n      <AppContextProvider history={history} routes={[]}>\n        <PartialRouter history={history}>\n          <Component {...embeddedData.props} {...(partialAnchorProps as object)} />\n          <CommonElements ssrError={ssrError} />\n        </PartialRouter>\n      </AppContextProvider>\n    </BaseProviders>\n  )\n}\n\ntry{ PartialEntry.displayName ||= 'PartialEntry' } catch {}","import {target} from '@github/catalyst'\nimport {createRoot, hydrateRoot} from 'react-dom/client'\nimport type {createRoot as createRootType, hydrateRoot as hydrateRootType, Root} from 'react-dom/client'\nimport React from 'react'\nimport ReactProfilingMode from '@github-ui/react-profiling-mode'\nimport {EXPECTED_ERRORS} from './expected-errors'\nimport {sendStats} from '@github-ui/stats'\n\ntype ReactDOM = {\n  createRoot: typeof createRootType\n  hydrateRoot: typeof hydrateRootType\n}\n\nconst REACT_INVARIANT_ERROR_REGEX = /Minified React error #(?<invariant>\\d+)/\n\nexport abstract class ReactBaseElement<T> extends HTMLElement {\n  @target embeddedData: HTMLScriptElement | undefined\n  @target ssrError: HTMLScriptElement | undefined\n  @target reactRoot: HTMLElement | undefined\n  private root: Root | undefined\n\n  abstract nameAttribute: string\n  abstract getReactNode(embeddedData: T): Promise<React.ReactNode>\n\n  protected get name() {\n    return this.getAttribute(this.nameAttribute) as string\n  }\n\n  private get embeddedDataText() {\n    const text = this.embeddedData?.textContent\n\n    if (!text) {\n      throw new Error(`No embedded data provided for react element ${this.name}`)\n    }\n\n    return text\n  }\n\n  get hasSSRContent() {\n    return this.getAttribute('data-ssr') === 'true'\n  }\n\n  connectedCallback() {\n    this.renderReact()\n  }\n\n  disconnectedCallback() {\n    this.root?.unmount()\n    this.root = undefined\n  }\n\n  private async renderReact() {\n    if (!this.reactRoot) throw new Error('No react root provided')\n    let reactDom: ReactDOM = {\n      createRoot,\n      hydrateRoot,\n    }\n\n    // Override the react-dom import if we're in profiling mode\n    if (ReactProfilingMode.isEnabled()) {\n      reactDom = await this.getReactDomWithProfiling()\n    }\n\n    const embeddedData = JSON.parse(this.embeddedDataText) as T\n    const ssrErrorText = this.ssrError?.textContent\n    const node = await this.getReactNode(embeddedData)\n    const baseNode = <React.StrictMode>{node}</React.StrictMode>\n\n    if (ssrErrorText) {\n      this.logSSRError(ssrErrorText)\n    }\n\n    if (this.hasSSRContent) {\n      /**\n       * Styled-components automatically looks for style tags to hydrate on first page load, but will not detect them\n       * if they are added after the initial page load. This causes a hydration error because React isn't expecting\n       * a style tag within the app. To work around this, we need to manually move the style tags to the head before\n       * hydrating the app.\n       *\n       * During hydration, styled-components will create a new style tag which matches the one we moved to the head.\n       * This means that after hydration, we can safely remove the style tag we manually moved to the head.\n       */\n      const styles = this.querySelector('style[data-styled=\"true\"]')\n      if (styles) document.head.appendChild(styles)\n\n      // Hydrate the react app\n      // onRecoverableError is disabled until we have a react version with this fix in:\n      // https://github.com/facebook/react/pull/25692\n      this.root = reactDom.hydrateRoot(this.reactRoot, baseNode, {\n        onRecoverableError: error => {\n          if (!(error instanceof Error)) return\n\n          const match = REACT_INVARIANT_ERROR_REGEX.exec(error.message)\n          const invariant = String(match?.groups?.invariant)\n\n          sendStats({\n            incrementKey: 'REACT_HYDRATION_ERROR',\n            incrementTags: {\n              appName: this.name,\n              invariant,\n            },\n          })\n        },\n      })\n\n      // Remove the manually moved style tag after hydration\n      if (styles) {\n        // Wait until things are idle to remove the style tag. If we do it immediately, we can cause a flash of unstyled content.\n        requestIdleCallback(() => {\n          // styles could have already been removed by Turbo if a navigation happens quickly. Only remove it from the DOM if it's still there.\n          styles.parentElement?.removeChild(styles)\n        })\n      }\n    } else {\n      this.root = reactDom.createRoot(this.reactRoot)\n      this.root.render(baseNode)\n    }\n\n    this.classList.add('loaded')\n  }\n\n  private getReactDomWithProfiling() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return import('react-dom/profiling') as any as Promise<ReactDOM>\n  }\n\n  private logSSRError(ssrErrorText: string) {\n    if (EXPECTED_ERRORS[ssrErrorText]) {\n      // eslint-disable-next-line no-console\n      return console.error('SSR failed with an expected error:', EXPECTED_ERRORS[ssrErrorText])\n    }\n\n    try {\n      const error = JSON.parse(ssrErrorText) as PlatformJavascriptError\n      const stacktrace = parseFailbotStacktrace(error)\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', `${error.type}: ${error.value}\\n`, error, stacktrace)\n    } catch {\n      /**\n       * In the event we couldn't log the error, we should not break the application\n       */\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', ssrErrorText, 'unable to parse as json')\n    }\n  }\n}\n\nfunction parseFailbotStacktrace(error: PlatformJavascriptError) {\n  if (!error.stacktrace) return ''\n  let prefix = '\\n '\n  const stack = error.stacktrace.map((frame: PlatformStackframe) => {\n    const {function: func, filename, lineno, colno} = frame\n    const line = `${prefix} at ${func} (${filename}:${lineno}:${colno})`\n    prefix = ' '\n    return line\n  })\n  return stack.join('\\n')\n}\n\ntry{ REACT_INVARIANT_ERROR_REGEX.displayName ||= 'REACT_INVARIANT_ERROR_REGEX' } catch {}"],"names":["hydroAnalyticsClient","getItem","safeStorage","dimensionPrefix","MARKETING_PARAMS","options","getOptionsFromMeta","baseContext","AnalyticsClient","_","extendBaseContext","context","key","value","app_id","event_url","host","Object","entries","startsWith","replace","visitorMeta","document","querySelector","assign","JSON","parse","atob","content","URLSearchParams","window","location","search","includes","toLowerCase","staff","isStaff","toString","sendPageView","sendEvent","type","service","head","cleanContext","stringifyObjectValues","obj","fromEntries","map","k","v","stringify","initialProcessingState","stale","latest_unsynced_push_to_head_ref_at","PullRequestsProcessingIndicatorWithDataFetching","processingIndicatorUrl","repositoryId","pullRequestId","processingState","setProcessingState","useState","isMounted","useIsMounted","fetchProcessingInfo","useCallback","response","verifiedFetchJSON","ok","state","json","error","useEffect","Box","sx","mt","AnalyticsProvider","appName","category","metadata","PullRequestsProcessingIndicator","sendAnalyticsEvent","useAnalytics","now","Date","lastPushDate","secondsSinceLastPush","Math","round","laterDate","getTime","earlierDate","Tooltip","text","direction","Button","as","href","variant","color","trailingVisual","LinkExternalIcon","display","alignItems","fontWeight","Spinner","size","Text","fontSize","ml","displayName","registerReactPartial","Component","DeferredRegistry","register","name","registration","entry","registrationEntries","resolve","promise","Promise","getRegistration","Deferred","constructor","usePartialAnchorProps","anchorElement","anchor","disabled","classList","remove","reactPartialAnchor","__wrapperElement","useExternalAnchor","ref","useRef","open","setOpen","onClick","current","setAttribute","useOnAnchorClick","element","addEventListener","removeEventListener","partialRegistry","ReactPartialElement","ReactBaseElement","getReactNode","embeddedData","closest","PartialEntry","partialName","wasServerRendered","hasSSRContent","ssrError","nameAttribute","controller","setItem","removeItem","REACT_PROFILING_ENABLED","enable","disable","isEnabled","contextData","useContext","AnalyticsContext","eventType","target","payload","react","useClickAnalytics","sendClickAnalyticsEvent","undefined","verifiedFetch","path","init","assertRelativePathOrSameOrigin","url","URL","origin","headers","fetch","Accept","body","reactFetch","reactFetchJSON","PartialRouter","children","history","setState","useHydratedEffect","listen","Router","navigator","historyRef","React","globalThis","createBrowserHistory","createMemoryHistory","initialEntries","pathname","partialAnchorProps","BaseProviders","AppContextProvider","routes","props","CommonElements","REACT_INVARIANT_ERROR_REGEX","HTMLElement","getAttribute","embeddedDataText","textContent","connectedCallback","renderReact","disconnectedCallback","root","unmount","reactRoot","reactDom","createRoot","hydrateRoot","ReactProfilingMode","getReactDomWithProfiling","ssrErrorText","node","baseNode","logSSRError","styles","appendChild","onRecoverableError","Error","match","exec","message","invariant","String","groups","sendStats","incrementKey","incrementTags","requestIdleCallback","parentElement","removeChild","render","add","EXPECTED_ERRORS","console","stacktrace","parseFailbotStacktrace","prefix","stack","function","func","filename","lineno","colno","frame","line","join"],"sourceRoot":""}