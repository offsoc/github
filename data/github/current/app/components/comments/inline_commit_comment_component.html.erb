<%# erblint:counter DeprecatedInPrimerCounter 1 %>
<%# erblint:counter ButtonComponentMigrationCounter 7 %>

<div class="review-comment js-minimizable-comment-group js-targetable-element <%= review_comment_classes %>"
      id="<%= dom_id %>"
      data-gid="<%= "#{commit_comment.id}" %>">
  <% if !show_minimized_content %>
    <div class="minimized-comment position-relative <%= "d-none" unless minimized? %>" <%= test_selector minimized_test_selector %>>
      <%= render PullRequests::MinimizedCommentComponent.new(comment: commit_comment, path: inline_comment_path, details_classes: ["color-bg-default", "border", "rounded-2"], summary_classes: ["color-bg-subtle"]) %>
    </div>
  <% end %>

  <div class="<%= previewable_comment_classes %>"
       data-body-version="<%= commit_comment.body_version %>">
    <div class="edit-comment-hide">
      <div class="timeline-comment-actions">
        <% if logged_in? && commit_comment.reactable? %>
          <%= render Reactions::DropdownComponent.new(
            inline_with_reactions: false,
            target_global_relay_id: commit_comment.global_relay_id,
            viewer_reactions: viewer_reactions(commit_comment),
            reaction_path: commit_comment.reaction_path,
            available_emotions: available_emotions,
            classes: "timeline-comment-action",
            px: 1,
            py: 2,
            mr: 0
          ) %>
        <% end %>
        <details class="details-overlay details-reset position-relative d-inline-block" id="<%= "details-#{dom_id}" unless minimized? %>">
          <%= render Primer::Beta::Button.new(tag: :summary, scheme: :link, classes: "timeline-comment-action", "aria-label": "Show more options") do %>
            <%= primer_octicon(:"kebab-horizontal") %>
          <% end %>

          <details-menu class="dropdown-menu dropdown-menu-sw show-more-popover color-fg-default anim-scale-in" style="width:185px; z-index: 99;"><%# erblint:disable Primer::Accessibility::DetailsMenuMigration %>

            <%= render Primer::Beta::ClipboardCopy.new("aria-label": "Copy link", classes: "dropdown-item btn-link", for: permalink_id, role: "menuitem") do %>
              Copy link
            <% end %>

            <button
              type="button"
              role="menuitem"
              data-hotkey="<%= hotkeys_for(current_user, :pull_request_conversation, :reply) %>"
              class="dropdown-item btn-link js-comment-quote-reply" hidden>
              Quote reply
            </button>

            <% if display_dropdown_divider? %>
              <div role="none" class="dropdown-divider"></div>
            <% end %>

            <% if !archived? && viewer_can_update? %>
              <button
                type="button"
                role="menuitem"
                class="dropdown-item btn-link js-comment-edit-button"
                aria-label="Edit comment">
                Edit
              </button>
            <% end %>

            <% if !minimized? && viewer_can_see_minimize_button? %>
              <button
                  type="button"
                  role="menuitem"
                  class="dropdown-item btn-link js-comment-hide-button"
                  aria-label="Hide comment">
                Hide
              </button>
            <% elsif minimized? && unminimizable? %>
              <%= form_tag "#{update_resource_path}/unminimize?inline=true", method: :put, class: "inline-form js-timeline-comment-unminimize width-full" do %>
                <input type="hidden" name="comment_id" value="<%= commit_comment.id %>" >
                <button
                  type="submit"
                  class="dropdown-item btn-link"
                  role="menuitem"
                  aria-label="Unhide comment">
                  Unhide
                </button>
              <% end %>
            <% end %>

            <% if viewer_can_see_delete_button? %>
              <%= form_tag update_resource_path, method: :delete, class: "width-full inline-form js-comment-delete" do %>
                <input type="hidden" name="input[id]" value="<%= commit_comment.id %>">
                <button
                    type="submit"
                    role="menuitem"
                    class="dropdown-item menu-item-danger btn-link"
                    aria-label="Delete comment"
                    data-confirm="Are you sure you want to delete this?">
                  Delete
                </button>
              <% end %>
            <% end %>

            <% if viewer_can_report? %>
              <div role="none" class="dropdown-divider"></div>
              <%= link_to(flavored_contact_path(
                    flavor: "report-content",
                    report: "#{author_login} (user)",
                    content_url: commit_comment.url
                  ), {
                    'aria-label' => "Report content",
                    :class => "dropdown-item btn-link",
                    :role => "menuitem",
                    'data-ga-click' => "Report content, reported by #{viewer_relationship}"
                  }) do %>
                Report
              <% end %>
            <% end %>

            <% if viewer_can_block? %>
              <%= render partial: "comments/block_user", locals: { comment_id: commit_comment.global_relay_id } %>
            <% elsif viewer_can_unblock? %>
              <%= form_tag organization_settings_blocked_user_path(
                  repository.owner_display_login,
                  login: author_login,
                  content_id: commit_comment.global_relay_id,
                ),
                method: "delete",
                class: "inline-form width-full" do %>
                <button class="dropdown-item btn-link"
                        type="submit"
                        role="menuitem"
                        data-confirm="Are you sure you want to unblock this user from the organization?">
                  Unblock user
                </button>
              <% end %>
            <% end %>

            <% if viewer_can_view_in_stafftools? %>
              <div role="none" class="dropdown-divider"></div>
              <a href="<%= commit_comment.stafftools_url %>" class="dropdown-item btn-link" role="menuitem">View in <%= view_in_stafftools_text %></a>
            <% end %>

          </details-menu>
        </details>
      </div>

      <%= render GitHub::AvatarComponent.new(actor: author || User.ghost, size: 24, mt: 1, float: :left) %>

      <div class="review-comment-contents js-suggested-changes-contents">
        <h4 class="f5 text-normal d-inline">
          <strong>
            <% if show_abuse_reports? %>
              <%= render(Primer::Box.new(mb: 2, test_selector: "abuse-report")) do %>
                <%= render(Primer::Beta::Octicon.new(:report, color: :danger)) %>
                <%= abuse_tooltip %>
              <% end %>
            <% end %>
            <% if author %>
              <%= render "comments/actor", actor: author, show_full_name: display_commenter_full_name? %>
            <% else %>
              <%= link_to GitHub.ghost_user_login, "/#{GitHub.ghost_user_login}", class: "author Link--primary" %>
            <% end %>
          </strong>
          <span class="color-fg-muted">
            <% if created_via_email? %>
              via email
            <% end %>

            <% if published_at %>
              <a href="<%= comment_href %>" id="<%= permalink_id %>" class="js-timestamp Link--secondary d-inline-block">
                <%= time_ago_in_words_js published_at %>
              </a>
            <% end %>

            <% if !new_comment && last_edited_at %>
              <%= render Comments::CommentEditHistoryComponent.new(comment: commit_comment, author: author) %>
            <% end %>
          </span>
        </h4>

        <%= render(partial: "comments/subject_author_badge", locals: { viewer_did_author: viewer_did_author?, subject_type: "pull request" }) if authored_by_subject_author? %>
        <%= render Comments::CommentAuthorAssociationComponent.new(comment: commit_comment) %>

        <% if viewer_can_see_minimize_button? %>
          <%= render PullRequests::CommentMinimizeFormComponent.new(comment: commit_comment, inline: true) %>
        <% end %>

        <% if commit_comment.spammy? %>
          <%= render(Primer::Beta::Label.new(scheme: :danger, ml: 2, classes: "tooltipped tooltipped-multiline tooltipped-s",
            aria: { label: "This user is marked as spammy. Their comments will only show in staff mode." }
          )) do %><%# erblint:disable Primer::Accessibility::TooltippedMigration %>
            Spammy
          <% end %>
        <% end %>

        <task-lists disabled sortable>
          <div class="comment-body markdown-body soft-wrap <% if created_via_email? %>email-format<% end %> js-comment-body">
            <%= commit_comment.body_html %>
          </div>
        </task-lists>

        <% if commit_comment.reactable? %>
          <%= render Comments::ReactionsComponent.new(target: commit_comment) %>
        <% end %>
      </div>
    </div>

    <% if viewer_can_update? %>
      <%= form_tag update_resource_path, method: :put, class: "js-comment-update", id: nil, "data-type" => "json" do %>
        <%= render Comments::EditForm::EditFormComponent.new(
              comment: commit_comment,
              comment_context: :discussion,
              textarea_id: "#{comment_dom_id(commit_comment)}-body",
              current_repository: repository
            )
        %>
      <% end %>
    <% end %>
  </div>
</div>
