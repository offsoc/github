{
  "00253094766b9da4d8130ea5001470ff": "query IssueViewerViewQuery(\n  $repo: String!\n  $owner: String!\n  $number: Int!\n  $allowedOwner: String\n) {\n  repository(name: $repo, owner: $owner) {\n    isOwnerEnterpriseManaged\n    issue(number: $number) {\n      ...IssueViewerIssue_3QstOM\n      id\n    }\n    id\n  }\n  safeViewer {\n    ...IssueViewerViewer\n    id\n  }\n}\n\nfragment AddSubIssueButtonGroup_4FLmrJ on Issue {\n  id\n  repository {\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  parent {\n    id\n  }\n}\n\nfragment AddedToProjectEvent on AddedToProjectEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  projectColumnName\n  databaseId\n}\n\nfragment AddedToProjectV2Event on AddedToProjectV2Event {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n}\n\nfragment AssignedEvent on AssignedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    login\n    id\n  }\n  assignee {\n    __typename\n    ... on User {\n      login\n    }\n    ... on Mannequin {\n      login\n    }\n    ... on Organization {\n      login\n    }\n    ... on Bot {\n      login\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment AssigneePickerAssignee on User {\n  id\n  login\n  name\n  avatarUrl(size: 64)\n}\n\nfragment AssigneesSectionAssignees on Issue {\n  assignees(first: 20) {\n    nodes {\n      ...AssigneePickerAssignee\n      id\n    }\n  }\n}\n\nfragment AssigneesSectionFragment on Issue {\n  id\n  number\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    isArchived\n    planFeatures {\n      maximumAssignees\n    }\n    id\n  }\n  ...AssigneesSectionAssignees\n  viewerCanUpdateNext\n  viewerCanAssign\n}\n\nfragment ClassicProjectItem on ProjectCard {\n  project {\n    name\n    url\n    ...SingleSelectColumnProject\n    id\n  }\n  column {\n    ...SingleSelectColumn\n    id\n  }\n}\n\nfragment ClosedEvent on ClosedEvent {\n  databaseId\n  createdAt\n  stateReason\n  closingProjectItemStatus\n  closer {\n    __typename\n    ... on ProjectV2 {\n      url\n      title\n    }\n    ... on PullRequest {\n      url\n      number\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Commit {\n      url\n      abbreviatedOid\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment CommentDeletedEvent on CommentDeletedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  deletedCommentAuthor {\n    __typename\n    login\n    id\n  }\n}\n\nfragment ConnectedEvent on ConnectedEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  subject {\n    __typename\n    ... on PullRequest {\n      title\n      url\n      number\n      state\n      isDraft\n      isInMergeQueue\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ConvertedFromDraftEvent on ConvertedFromDraftEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  databaseId\n}\n\nfragment ConvertedNoteToIssueEvent on ConvertedNoteToIssueEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  project {\n    url\n    name\n    id\n  }\n}\n\nfragment ConvertedToDiscussionEvent on ConvertedToDiscussionEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  discussion {\n    url\n    number\n    id\n  }\n}\n\nfragment CrossReferencedEvent on CrossReferencedEvent {\n  referencedAt\n  willCloseTarget\n  databaseId\n  target {\n    __typename\n    ... on Issue {\n      repository {\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  innerSource: source {\n    __typename\n    ...CrossReferencedEventInner\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment CrossReferencedEventInner on ReferencedSubject {\n  __isReferencedSubject: __typename\n  __typename\n  ... on Issue {\n    id\n    issueTitleHTML: titleHTML\n    url\n    number\n    stateReason\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n  ... on PullRequest {\n    id\n    pullTitleHTML: titleHTML\n    url\n    number\n    state\n    isDraft\n    isInMergeQueue\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n}\n\nfragment DemilestonedEvent on DemilestonedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  milestoneTitle\n  milestone {\n    url\n    id\n  }\n}\n\nfragment DisconnectedEvent on DisconnectedEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  subject {\n    __typename\n    ... on PullRequest {\n      title\n      url\n      number\n      state\n      isDraft\n      isInMergeQueue\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment EventActor on Actor {\n  __isActor: __typename\n  avatarUrl(size: 64)\n  login\n  __typename\n}\n\nfragment Header on Issue {\n  title\n  number\n  id\n  repository {\n    nameWithOwner\n    id\n  }\n  ...HeaderViewer\n  ...HeaderMetadata\n}\n\nfragment HeaderIssueType on Issue {\n  repository {\n    nameWithOwner\n    id\n  }\n  issueType {\n    name\n    color\n    id\n  }\n}\n\nfragment HeaderMenu on Issue {\n  id\n  viewerCanUpdateNext\n  repository {\n    id\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    isArchived\n  }\n  url\n}\n\nfragment HeaderMetadata on Issue {\n  url\n  ...HeaderIssueType\n  ...HeaderMenu\n  ...HeaderState\n  ...StickyHeaderTitle\n  ...RepositoryPill\n  ...LinkedPullRequests\n  ...HeaderSubIssueSummaryWithPrimary\n}\n\nfragment HeaderState on Issue {\n  state\n  stateReason\n}\n\nfragment HeaderSubIssueSummary on Issue {\n  ...useSubIssuesSummary_46hWwf\n}\n\nfragment HeaderSubIssueSummaryWithPrimary on Issue {\n  ...useSubIssuesSummary_4FLmrJ\n}\n\nfragment HeaderViewer on Issue {\n  titleHTML\n  number\n  url\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...HeaderMenu\n}\n\nfragment IssueActions on Issue {\n  ...IssueActionsState\n}\n\nfragment IssueActionsState on Issue {\n  state\n  stateReason\n  id\n}\n\nfragment IssueBody on Issue {\n  id\n  databaseId\n  viewerDidAuthor\n  locked\n  author {\n    __typename\n    ...IssueBodyHeaderActions\n    id\n  }\n  repository {\n    databaseId\n    nameWithOwner\n    slashCommandsEnabled\n    id\n    owner {\n      __typename\n      login\n      id\n      url\n    }\n  }\n  url\n  viewerCanUpdateNext\n  ...IssueBodyViewer\n  ...IssueBodyContent\n  ...IssueBodyHeader\n  ...IssueBodyViewerReactable\n  ...IssueBodyViewerSubIssues\n}\n\nfragment IssueBodyContent on Issue {\n  body\n  bodyHTML(unfurlReferences: true, renderTasklistBlocks: true)\n  bodyVersion\n}\n\nfragment IssueBodyHeader on Comment {\n  __isComment: __typename\n  ...IssueBodyHeaderActions_comment\n  createdAt\n  viewerDidAuthor\n  author {\n    __typename\n    ...IssueBodyHeaderAuthor\n    ...IssueBodyHeaderActions\n    id\n  }\n}\n\nfragment IssueBodyHeaderActions on Actor {\n  __isActor: __typename\n  login\n  id\n}\n\nfragment IssueBodyHeaderActions_comment on Comment {\n  __isComment: __typename\n  body\n}\n\nfragment IssueBodyHeaderAuthor on Actor {\n  __isActor: __typename\n  login\n  avatarUrl\n  profileUrl\n}\n\nfragment IssueBodyViewer on Comment {\n  __isComment: __typename\n  id\n}\n\nfragment IssueBodyViewerReactable on Reactable {\n  __isReactable: __typename\n  ...ReactionViewerGroups\n}\n\nfragment IssueBodyViewerSubIssues on Issue {\n  ...useCanEditSubIssues\n  ...useHasSubIssues\n  ...AddSubIssueButtonGroup_4FLmrJ\n}\n\nfragment IssueCommentComposer on Issue {\n  id\n  locked\n  viewerCanComment\n  databaseId\n  repository {\n    id\n    databaseId\n    isArchived\n    nameWithOwner\n    viewerCanInteract\n    viewerInteractionLimitReasonHTML\n  }\n  ...IssueActions\n}\n\nfragment IssueCommentComposerViewer on User {\n  id\n  login\n  avatarUrl(size: 64)\n}\n\nfragment IssueCommentEditorBodyFragment on IssueComment {\n  id\n  body\n  bodyVersion\n  author {\n    __typename\n    login\n    avatarUrl\n    id\n  }\n  issue {\n    author {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...IssueCommentHeader\n}\n\nfragment IssueCommentEditor_repository on IssueComment {\n  repository {\n    slashCommandsEnabled\n    nameWithOwner\n    databaseId\n    id\n  }\n}\n\nfragment IssueCommentHeader on IssueComment {\n  id\n  databaseId\n  url\n  createdAt\n  body\n  authorAssociation\n  viewerCanUpdate\n  viewerCanDelete\n  viewerCanMinimize\n  viewerCanReport\n  viewerCanReportToMaintainer\n  viewerCanBlockFromOrg\n  viewerCanUnblockFromOrg\n  isHidden: isMinimized\n  minimizedReason\n  createdViaEmail\n  viewerDidAuthor\n  authorToRepoOwnerSponsorship {\n    createdAt\n    isActive\n    id\n  }\n  author {\n    __typename\n    id\n    login\n  }\n  repository {\n    id\n    name\n    owner {\n      __typename\n      id\n      login\n      url\n    }\n    isPrivate\n  }\n  issue {\n    number\n    id\n  }\n  ...MarkdownEditHistoryViewer_comment\n}\n\nfragment IssueCommentViewerCommentRow on IssueComment {\n  id\n  databaseId\n  ...IssueCommentViewerMarkdownViewer\n  ...IssueCommentHeader\n  author {\n    avatarUrl\n    login\n    __typename\n    id\n  }\n  issue {\n    id\n    locked\n  }\n  body\n  isHidden: isMinimized\n  viewerCanUpdate\n}\n\nfragment IssueCommentViewerMarkdownViewer on IssueComment {\n  id\n  body\n  bodyHTML(unfurlReferences: true)\n  bodyVersion\n  viewerCanUpdate\n}\n\nfragment IssueCommentViewerReactable on Reactable {\n  __isReactable: __typename\n  ...ReactionViewerGroups\n}\n\nfragment IssueComment_issueComment on IssueComment {\n  ...IssueCommentViewerCommentRow\n  ...IssueCommentViewerReactable\n  ...IssueCommentEditor_repository\n  ...IssueCommentEditorBodyFragment\n  issue {\n    id\n  }\n  id\n}\n\nfragment IssueSidebarPrimaryQuery_3QstOM on Issue {\n  ...AssigneesSectionFragment\n  ...LabelsSectionFragment\n  ...ProjectsSectionFragment_3QstOM\n  ...MilestonesSectionFragment\n  ...OptionsSectionFragment\n}\n\nfragment IssueTimelineBackPaginated_2Dhmdq on Issue {\n  timelineItems(last: 0, visibleEventsOnly: true) @defer(label: \"Issue_backTimeline\") {\n    totalCount\n    pageInfo {\n      hasPreviousPage\n      startCursor\n    }\n    edges {\n      node {\n        ... on TimelineEvent {\n          __isTimelineEvent: __typename\n          databaseId\n        }\n        __typename\n        ... on Node {\n          __isNode: __typename\n          id\n        }\n      }\n      cursor\n    }\n    ...TimelineItemsPaginated\n  }\n  id\n  url\n}\n\nfragment IssueTimelineFrontPaginated_40vLL5 on Issue {\n  frontTimeline: timelineItems(first: 15, visibleEventsOnly: true) @defer(label: \"Issue_frontTimeline\") {\n    totalCount\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    edges {\n      node {\n        ... on TimelineEvent {\n          __isTimelineEvent: __typename\n          databaseId\n        }\n        __typename\n        ... on Node {\n          __isNode: __typename\n          id\n        }\n      }\n      cursor\n    }\n    ...TimelineItemsPaginated\n  }\n  id\n  url\n}\n\nfragment IssueTimelinePaginated_40vLL5 on Issue {\n  author {\n    __typename\n    login\n    id\n  }\n  ...IssueTimelineFrontPaginated_40vLL5\n  ...IssueTimelineBackPaginated_2Dhmdq\n}\n\nfragment IssueTypesDialogIssueType on IssueType {\n  id\n}\n\nfragment IssueTypesDialogIssueTypes on IssueTypeConnection {\n  nodes {\n    id\n    name\n    color\n    description\n    isEnabled\n  }\n}\n\nfragment IssueViewerIssue_3QstOM on Issue {\n  id\n  updatedAt\n  ...useHasSubIssues\n  ...useCanEditSubIssues\n  ...Header\n  ...IssueBody\n  ...IssueCommentComposer\n  ...IssueSidebarPrimaryQuery_3QstOM\n  ...IssueTimelinePaginated_40vLL5\n  ...HeaderSubIssueSummary\n}\n\nfragment IssueViewerViewer on User {\n  enterpriseManagedEnterpriseId\n  login\n  ...IssueCommentComposerViewer\n  ...AssigneePickerAssignee\n  ...SubIssuesListViewViewer\n}\n\nfragment LabelData on Label {\n  nameHTML\n  name\n  color\n  id\n  description\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment LabelPickerLabel on Label {\n  id\n  color\n  name\n  nameHTML\n  description\n  url\n}\n\nfragment LabeledEvent on LabeledEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  label {\n    ...LabelData\n    id\n  }\n}\n\nfragment LabelsSectionAssignedLabels on Labelable {\n  __isLabelable: __typename\n  labels(first: 100, orderBy: {field: NAME, direction: ASC}) {\n    edges {\n      node {\n        ...LabelPickerLabel\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  ... on Node {\n    __isNode: __typename\n    id\n  }\n}\n\nfragment LabelsSectionFragment on Issue {\n  id\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    isArchived\n    id\n  }\n  ...LabelsSectionAssignedLabels\n  viewerCanLabel\n}\n\nfragment LinkedPullRequest on PullRequest {\n  url\n  number\n  state\n  isDraft\n  repository {\n    name\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment LinkedPullRequests on Issue {\n  repository {\n    nameWithOwner\n    id\n  }\n  linkedPullRequests: closedByPullRequestsReferences(first: 10, includeClosedPrs: false, orderByState: true) {\n    nodes {\n      repository {\n        nameWithOwner\n        id\n      }\n      state\n      isDraft\n      ...LinkedPullRequest\n      id\n    }\n  }\n}\n\nfragment LockedEvent on LockedEvent {\n  databaseId\n  createdAt\n  lockReason\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment MarkdownEditHistoryViewer_comment on Comment {\n  __isComment: __typename\n  id\n  viewerCanReadUserContentEdits\n  lastEditedAt\n  lastUserContentEdit {\n    editor {\n      __typename\n      url\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment MarkedAsDuplicateEvent on MarkedAsDuplicateEvent {\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  canonical {\n    __typename\n    ... on Issue {\n      url\n      number\n      id\n    }\n    ... on PullRequest {\n      url\n      number\n      id\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  databaseId\n  viewerCanUndo\n  id\n}\n\nfragment MentionedEvent on MentionedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment MilestonePickerMilestone on Milestone {\n  id\n  title\n  closed\n  dueOn\n  progressPercentage\n  url\n  closedAt\n}\n\nfragment MilestonedEvent on MilestonedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  milestoneTitle\n  milestone {\n    url\n    id\n  }\n}\n\nfragment MilestonesSectionFragment on Issue {\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  id\n  ...MilestonesSectionMilestone\n  viewerCanSetMilestone\n}\n\nfragment MilestonesSectionMilestone on Issue {\n  milestone {\n    ...MilestonePickerMilestone\n    id\n  }\n}\n\nfragment MovedColumnsInProjectEvent on MovedColumnsInProjectEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  previousProjectColumnName\n  projectColumnName\n}\n\nfragment OptionsSectionFragment on Issue {\n  id\n  isPinned\n  locked\n  viewerCanUpdateNext\n  viewerCanDelete\n  viewerCanTransfer\n  viewerCanConvertToDiscussion\n  viewerCanType\n  repository {\n    id\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    isPrivate\n    issueTypes(first: 10) {\n      ...IssueTypesDialogIssueTypes\n      totalCount\n    }\n    pinnedIssues(first: 3) {\n      totalCount\n    }\n    viewerCanPinIssues\n  }\n  issueType {\n    ...IssueTypesDialogIssueType\n    id\n  }\n}\n\nfragment PinnedEvent on PinnedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment ProjectItemSection on ProjectV2Item {\n  id\n  isArchived\n  project {\n    id\n  }\n  ...ProjectItemSectionView\n}\n\nfragment ProjectItemSectionView on ProjectV2Item {\n  id\n  isArchived\n  project {\n    id\n    title\n    template\n    viewerCanUpdate\n    url\n    field(name: \"Status\") {\n      __typename\n      ...SingleSelectFieldConfigFragment\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n  fieldValueByName(name: \"Status\") {\n    __typename\n    ...SingleSelectFieldFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ProjectPickerClassicProject on Project {\n  id\n  title: name\n  closed\n  number\n  url\n  viewerCanUpdate\n  columns(first: 10) {\n    nodes {\n      id\n      name\n    }\n  }\n  __typename\n}\n\nfragment ProjectPickerProject on ProjectV2 {\n  id\n  title\n  closed\n  number\n  url\n  viewerCanUpdate\n  __typename\n}\n\nfragment ProjectV2ItemStatusChangedEvent on ProjectV2ItemStatusChangedEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n  previousStatus\n  status\n}\n\nfragment ProjectsSectionFragment_3QstOM on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    number\n    repository {\n      name\n      owner {\n        __typename\n        login\n        id\n      }\n      isArchived\n      id\n    }\n    id\n    projectItemsNext(first: 10, allowedOwner: $allowedOwner) {\n      edges {\n        node {\n          id\n          ...ProjectItemSection\n          project {\n            ...ProjectPickerProject\n            closed\n            title\n            id\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    projectCards(first: 10) {\n      edges {\n        node {\n          id\n          ...ClassicProjectItem\n          project {\n            id\n            closed\n            ...ProjectPickerClassicProject\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    viewerCanUpdateMetadata\n  }\n  ... on PullRequest {\n    number\n    repository {\n      name\n      owner {\n        __typename\n        login\n        id\n      }\n      isArchived\n      id\n    }\n    id\n    projectItemsNext(first: 10, allowedOwner: $allowedOwner) {\n      edges {\n        node {\n          id\n          ...ProjectItemSection\n          project {\n            closed\n            ...ProjectPickerProject\n            title\n            id\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    projectCards(first: 10) {\n      edges {\n        node {\n          id\n          ...ClassicProjectItem\n          project {\n            id\n            closed\n            ...ProjectPickerClassicProject\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    viewerCanUpdate\n  }\n}\n\nfragment ReactionButton_Reaction on ReactionGroup {\n  content\n  reactors(first: 5) {\n    nodes {\n      __typename\n      ... on User {\n        login\n        __typename\n      }\n      ... on Bot {\n        login\n        __typename\n      }\n      ... on Organization {\n        login\n        __typename\n      }\n      ... on Mannequin {\n        login\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n    totalCount\n  }\n  viewerHasReacted\n}\n\nfragment ReactionViewerGroups on Reactable {\n  __isReactable: __typename\n  reactionGroups {\n    ...ReactionButton_Reaction\n    ...ReactionsMenuItem_Reaction\n  }\n}\n\nfragment ReactionsMenuItem_Reaction on ReactionGroup {\n  content\n  viewerHasReacted\n}\n\nfragment ReferencedEvent on ReferencedEvent {\n  databaseId\n  willCloseSubject\n  subject {\n    __typename\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  commit {\n    ...ReferencedEventInner\n    id\n  }\n  createdAt\n}\n\nfragment ReferencedEventInner on Commit {\n  message\n  messageHeadlineHTML\n  messageBodyHTML\n  url\n  abbreviatedOid\n  signature {\n    __typename\n    signer {\n      login\n      avatarUrl\n      id\n    }\n    state\n    wasSignedByGitHub\n    ... on SmimeSignature {\n      issuer {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n      subject {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n    }\n    ... on GpgSignature {\n      keyId\n    }\n    ... on SshSignature {\n      keyFingerprint\n    }\n  }\n  verificationStatus\n  hasSignature\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    defaultBranch\n    id\n  }\n}\n\nfragment RemovedFromProjectEvent on RemovedFromProjectEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  projectColumnName\n}\n\nfragment RemovedFromProjectV2Event on RemovedFromProjectV2Event {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n}\n\nfragment RenamedTitleEvent on RenamedTitleEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  currentTitle\n  previousTitle\n}\n\nfragment ReopenedEvent on ReopenedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment RepositoryPill on Issue {\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    isPrivate\n    id\n  }\n}\n\nfragment SingleSelectColumn on ProjectColumn {\n  id\n  name\n}\n\nfragment SingleSelectColumnProject on Project {\n  id\n  name\n  columns(first: 10) {\n    nodes {\n      ...SingleSelectColumn\n      id\n    }\n  }\n}\n\nfragment SingleSelectFieldConfigFragment on ProjectV2SingleSelectField {\n  id\n  name\n  options {\n    ...SingleSelectFieldOptionFragment\n    id\n    name\n    description\n    color\n  }\n}\n\nfragment SingleSelectFieldFragment on ProjectV2ItemFieldSingleSelectValue {\n  id\n  optionId\n  name\n  nameHTML\n  color\n}\n\nfragment SingleSelectFieldOptionFragment on ProjectV2SingleSelectFieldOption {\n  id\n  optionId\n  name\n  nameHTML\n  color\n  descriptionHTML\n}\n\nfragment StickyHeaderTitle on Issue {\n  titleHTML\n  number\n  url\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment SubIssuesListViewViewer on User {\n  isEmployee\n}\n\nfragment SubscribedEvent on SubscribedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment TimelineItemsPaginated on IssueTimelineItemsConnection {\n  edges {\n    node {\n      ... on IssueComment {\n        databaseId\n        viewerDidAuthor\n        issue {\n          author {\n            __typename\n            login\n            id\n          }\n          id\n        }\n      }\n      ... on ReferencedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on CrossReferencedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        source {\n          __typename\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n        willCloseTarget\n      }\n      ... on MentionedEvent {\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on LabeledEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        label {\n          id\n        }\n      }\n      ... on UnlabeledEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        label {\n          id\n        }\n      }\n      ... on AssignedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        assignee {\n          __typename\n          ... on User {\n            id\n          }\n          ... on Bot {\n            id\n          }\n          ... on Mannequin {\n            id\n          }\n          ... on Organization {\n            id\n          }\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n      }\n      ... on UnassignedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        assignee {\n          __typename\n          ... on User {\n            id\n          }\n          ... on Bot {\n            id\n          }\n          ... on Mannequin {\n            id\n          }\n          ... on Organization {\n            id\n          }\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n      }\n      ... on AddedToProjectV2Event {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on RemovedFromProjectV2Event {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      __typename\n      ...IssueComment_issueComment\n      ...AddedToProjectEvent\n      ...MovedColumnsInProjectEvent\n      ...RemovedFromProjectEvent\n      ...SubscribedEvent\n      ...UnsubscribedEvent\n      ...MentionedEvent\n      ...ClosedEvent\n      ...ReopenedEvent\n      ...LockedEvent\n      ...UnlockedEvent\n      ...PinnedEvent\n      ...UnpinnedEvent\n      ...LabeledEvent\n      ...RenamedTitleEvent\n      ...UnlabeledEvent\n      ...UnassignedEvent\n      ...AssignedEvent\n      ...CommentDeletedEvent\n      ...UserBlockedEvent\n      ...MilestonedEvent\n      ...DemilestonedEvent\n      ...CrossReferencedEvent\n      ...ReferencedEvent\n      ...ConnectedEvent\n      ...TransferredEvent\n      ...ConvertedNoteToIssueEvent\n      ...DisconnectedEvent\n      ...MarkedAsDuplicateEvent\n      ...UnmarkedAsDuplicateEvent\n      ...ConvertedToDiscussionEvent\n      ...AddedToProjectV2Event\n      ...RemovedFromProjectV2Event\n      ...ProjectV2ItemStatusChangedEvent\n      ...ConvertedFromDraftEvent\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n}\n\nfragment TimelineRowEventActor on Actor {\n  __isActor: __typename\n  ...EventActor\n}\n\nfragment TransferredEvent on TransferredEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  fromRepository {\n    nameWithOwner\n    url\n    id\n  }\n}\n\nfragment UnassignedEvent on UnassignedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    login\n    ...TimelineRowEventActor\n    id\n  }\n  assignee {\n    __typename\n    ... on User {\n      login\n    }\n    ... on Mannequin {\n      login\n    }\n    ... on Organization {\n      login\n    }\n    ... on Bot {\n      login\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment UnlabeledEvent on UnlabeledEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  label {\n    ...LabelData\n    id\n  }\n}\n\nfragment UnlockedEvent on UnlockedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UnmarkedAsDuplicateEvent on UnmarkedAsDuplicateEvent {\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  canonical {\n    __typename\n    ... on Issue {\n      url\n      number\n    }\n    ... on PullRequest {\n      url\n      number\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  databaseId\n}\n\nfragment UnpinnedEvent on UnpinnedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UnsubscribedEvent on UnsubscribedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UserBlockedEvent on UserBlockedEvent {\n  databaseId\n  createdAt\n  blockDuration\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  blockedUser: subject {\n    login\n    id\n  }\n}\n\nfragment useCanEditSubIssues on Issue {\n  viewerCanUpdateMetadata\n  repository {\n    isArchived\n    id\n  }\n}\n\nfragment useHasSubIssues on Issue {\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n}\n\nfragment useSubIssuesSummary_46hWwf on Issue {\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n  subIssues(first: 50) {\n    nodes {\n      closed\n      ...useSubIssuesSummary_issueState\n      id\n    }\n  }\n}\n\nfragment useSubIssuesSummary_4FLmrJ on Issue {\n  subIssuesSummary {\n    completed\n  }\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n}\n\nfragment useSubIssuesSummary_issueState on Issue {\n  closed\n}\n",
  "00373a7f95314e54628f49cf0f165618": "query ItemPickerProjectsStoryQuery(\n  $owner: String!\n  $repo: String!\n  $number: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $number) {\n      projectsV2(first: 10) {\n        ...ItemPickerProjects_SelectedProjectsV2Fragment\n      }\n      projectCards(first: 10) {\n        ...ItemPickerProjects_SelectedClassicProjectCardsFragment\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment ItemPickerProjectsItem_ClassicProjectFragment on Project {\n  __typename\n  id\n  title: name\n  closed\n  columns(first: 10) {\n    edges {\n      node {\n        id\n      }\n    }\n  }\n}\n\nfragment ItemPickerProjectsItem_ProjectV2Fragment on ProjectV2 {\n  __typename\n  id\n  title\n  closed\n}\n\nfragment ItemPickerProjects_SelectedClassicProjectCardsFragment on ProjectCardConnection {\n  nodes {\n    project {\n      __typename\n      ...ItemPickerProjectsItem_ClassicProjectFragment\n      id\n    }\n    id\n  }\n}\n\nfragment ItemPickerProjects_SelectedProjectsV2Fragment on ProjectV2Connection {\n  nodes {\n    __typename\n    ...ItemPickerProjectsItem_ProjectV2Fragment\n    id\n  }\n}\n",
  "01ba2647727ea5877eff4595e869734d": "mutation removeTeamViewMutation(\n  $input: RemoveTeamDashboardSearchShortcutInput!\n) {\n  removeTeamDashboardSearchShortcut(input: $input) {\n    shortcut {\n      id\n    }\n  }\n}\n",
  "01d289044c122c85ae92584e14377fdb": "query RelayTestUtilsIssuesShowFragmentQuery {\n  repository(owner: \"owner\", name: \"repo\") {\n    issue(number: 33) {\n      ...IssuesShowFragment\n      id\n    }\n    id\n  }\n}\n\nfragment IssuesShowFragment on Issue {\n  title\n  number\n}\n",
  "05dfcf10540c3553760ce2b3d34fc5fa": "query SelectTeamsOrgResultsQuery(\n  $count: Int = 10\n  $cursor: String\n  $teamSearchQuery: String = \"\"\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ...SelectTeamsOrgResults_1yE0YQ\n    id\n  }\n}\n\nfragment SelectTeamsOrgResults_1yE0YQ on Organization {\n  teams(first: $count, after: $cursor, query: $teamSearchQuery) {\n    edges {\n      node {\n        ...TeamCheckboxItem\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n}\n\nfragment TeamCheckboxItem on Team {\n  id\n  name\n  avatarUrl\n  organization {\n    name\n    id\n  }\n}\n",
  "05e4a5e14eac8bf80bd7404c1c197d70": "query orgFilterProviderQuery(\n  $count: Int!\n) {\n  viewer {\n    organizations(first: $count) {\n      edges {\n        node {\n          name\n          login\n          avatarUrl\n          id\n        }\n      }\n    }\n    id\n  }\n}\n",
  "0633bc3316e383c68b8cf79758253709": "query LabelPickerAssignedLabelsQuery(\n  $assignedLabelPageSize: Int = 100\n  $cursor: String\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ...LabelPickerAssignedLabels_3t2EIG\n    id\n  }\n}\n\nfragment LabelPickerAssignedLabels_3t2EIG on Labelable {\n  __isLabelable: __typename\n  labels(first: $assignedLabelPageSize, after: $cursor, orderBy: {field: NAME, direction: ASC}) {\n    edges {\n      node {\n        ...LabelPickerLabel\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  ... on Node {\n    __isNode: __typename\n    id\n  }\n}\n\nfragment LabelPickerLabel on Label {\n  id\n  color\n  name\n  nameHTML\n  description\n  url\n}\n",
  "070df29f4bdaac8e4045edaee83c8e86": "query EmuContributionBlockedBannerQuery(\n  $enterpriseId: ID!\n) {\n  node(id: $enterpriseId) {\n    __typename\n    ... on Enterprise {\n      slug\n    }\n    id\n  }\n}\n",
  "08d7312cd1d6f4f1696df8aa4f43f531": "mutation unmarkIssueAsDuplicateMutation(\n  $cannonicalId: ID!\n  $duplicateId: ID!\n) {\n  unmarkIssueAsDuplicate(input: {canonicalId: $cannonicalId, duplicateId: $duplicateId}) {\n    clientMutationId\n  }\n}\n",
  "08e96b84a065e8cf73a59dfcd6a22610": "query SingleSelectFieldTestQuery {\n  node(id: \"node-id\") {\n    __typename\n    ... on ProjectV2Item {\n      project {\n        viewerCanUpdate\n        url\n        id\n        fields(first: 50, orderBy: {field: POSITION, direction: ASC}) {\n          edges {\n            node {\n              __typename\n              ... on ProjectV2SingleSelectField {\n                id\n                name\n                dataType\n                ...SingleSelectFieldConfigFragment\n              }\n              ... on Node {\n                __isNode: __typename\n                id\n              }\n            }\n          }\n        }\n      }\n      fieldValues(first: 50, orderBy: {field: POSITION, direction: ASC}) {\n        edges {\n          node {\n            __typename\n            ... on ProjectV2ItemFieldSingleSelectValue {\n              id\n              field {\n                __typename\n                ... on ProjectV2Field {\n                  id\n                }\n                ... on Node {\n                  __isNode: __typename\n                  id\n                }\n              }\n            }\n            ...SingleSelectFieldFragment\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n      }\n    }\n    id\n  }\n}\n\nfragment SingleSelectFieldConfigFragment on ProjectV2SingleSelectField {\n  id\n  name\n  options {\n    ...SingleSelectFieldOptionFragment\n    id\n    name\n    description\n    color\n  }\n}\n\nfragment SingleSelectFieldFragment on ProjectV2ItemFieldSingleSelectValue {\n  id\n  optionId\n  name\n  nameHTML\n  color\n}\n\nfragment SingleSelectFieldOptionFragment on ProjectV2SingleSelectFieldOption {\n  id\n  optionId\n  name\n  nameHTML\n  color\n  descriptionHTML\n}\n",
  "09ac819b9813828c8f78952663c12fac": "mutation updateTeamViewMutation(\n  $input: UpdateTeamDashboardSearchShortcutInput!\n) {\n  updateTeamDashboardSearchShortcut(input: $input) {\n    shortcut {\n      ...SharedViewTreeItem\n      ...ListCurrentViewFragment\n      ...IssueDetailCurrentViewFragment\n      ...EditViewButtonCurrentViewFragment\n      id\n    }\n  }\n}\n\nfragment EditViewButtonCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  id\n  name\n  description\n  icon\n  color\n  query\n}\n\nfragment HeaderContentCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  name\n  description\n  id\n}\n\nfragment HeaderCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  id\n  name\n  query\n}\n\nfragment IconAndColorPickerViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  icon\n  color\n  id\n}\n\nfragment IssueDetailCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  name\n  query\n}\n\nfragment ListCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  ...SearchBarCurrentViewFragment\n  ...HeaderCurrentViewFragment\n  ...EditViewButtonCurrentViewFragment\n  ...HeaderContentCurrentViewFragment\n  ...IconAndColorPickerViewFragment\n}\n\nfragment SearchBarCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  id\n  name\n  description\n  icon\n  color\n  query\n  scopingRepository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment SharedViewTreeItem on TeamSearchShortcut {\n  id\n  icon\n  name\n  query\n  color\n}\n",
  "0abf8d20788f22ce5c2228ce7eb0ea11": "query ApplyLabelsActionTestQuery(\n  $ids: [ID!]!\n) {\n  nodes(ids: $ids) {\n    __typename\n    ... on Issue {\n      id\n      labels(first: 20, orderBy: {field: NAME, direction: ASC}) {\n        nodes {\n          ...LabelPickerLabel\n          id\n        }\n      }\n    }\n    id\n  }\n}\n\nfragment LabelPickerLabel on Label {\n  id\n  color\n  name\n  nameHTML\n  description\n  url\n}\n",
  "0ad302c625abac6bb2eab623d9cb769b": "query LazyContributorFooterQuery {\n  node(id: \"abc\") {\n    __typename\n    ... on Repository {\n      ...LazyContributorFooter\n    }\n    id\n  }\n}\n\nfragment LazyContributorFooter on Repository {\n  codeOfConductFileUrl\n  securityPolicyUrl\n  contributingFileUrl\n}\n",
  "0b00151cbfad75d2642b4b17255b7348": "query SearchBarWithFilterQuery {\n  node(id: \"SSC_asdkasd\") {\n    __typename\n    ...SearchBarCurrentViewFragment\n    id\n  }\n}\n\nfragment SearchBarCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  id\n  name\n  description\n  icon\n  color\n  query\n  scopingRepository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n",
  "0d52c5cf7193c46e49396f0f2beb7c0f": "query TimelineItemsTestQuery {\n  repository(owner: \"owner\", name: \"repo\") {\n    issue(number: 33) {\n      timelineItems(last: 10) {\n        ...TimelineItemsPaginated\n      }\n      id\n    }\n    id\n  }\n  viewer {\n    login\n    id\n  }\n}\n\nfragment AddedToProjectEvent on AddedToProjectEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  projectColumnName\n  databaseId\n}\n\nfragment AddedToProjectV2Event on AddedToProjectV2Event {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n}\n\nfragment AssignedEvent on AssignedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    login\n    id\n  }\n  assignee {\n    __typename\n    ... on User {\n      login\n    }\n    ... on Mannequin {\n      login\n    }\n    ... on Organization {\n      login\n    }\n    ... on Bot {\n      login\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ClosedEvent on ClosedEvent {\n  databaseId\n  createdAt\n  stateReason\n  closingProjectItemStatus\n  closer {\n    __typename\n    ... on ProjectV2 {\n      url\n      title\n    }\n    ... on PullRequest {\n      url\n      number\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Commit {\n      url\n      abbreviatedOid\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment CommentDeletedEvent on CommentDeletedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  deletedCommentAuthor {\n    __typename\n    login\n    id\n  }\n}\n\nfragment ConnectedEvent on ConnectedEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  subject {\n    __typename\n    ... on PullRequest {\n      title\n      url\n      number\n      state\n      isDraft\n      isInMergeQueue\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ConvertedFromDraftEvent on ConvertedFromDraftEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  databaseId\n}\n\nfragment ConvertedNoteToIssueEvent on ConvertedNoteToIssueEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  project {\n    url\n    name\n    id\n  }\n}\n\nfragment ConvertedToDiscussionEvent on ConvertedToDiscussionEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  discussion {\n    url\n    number\n    id\n  }\n}\n\nfragment CrossReferencedEvent on CrossReferencedEvent {\n  referencedAt\n  willCloseTarget\n  databaseId\n  target {\n    __typename\n    ... on Issue {\n      repository {\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  innerSource: source {\n    __typename\n    ...CrossReferencedEventInner\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment CrossReferencedEventInner on ReferencedSubject {\n  __isReferencedSubject: __typename\n  __typename\n  ... on Issue {\n    id\n    issueTitleHTML: titleHTML\n    url\n    number\n    stateReason\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n  ... on PullRequest {\n    id\n    pullTitleHTML: titleHTML\n    url\n    number\n    state\n    isDraft\n    isInMergeQueue\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n}\n\nfragment DemilestonedEvent on DemilestonedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  milestoneTitle\n  milestone {\n    url\n    id\n  }\n}\n\nfragment DisconnectedEvent on DisconnectedEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  subject {\n    __typename\n    ... on PullRequest {\n      title\n      url\n      number\n      state\n      isDraft\n      isInMergeQueue\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment EventActor on Actor {\n  __isActor: __typename\n  avatarUrl(size: 64)\n  login\n  __typename\n}\n\nfragment IssueCommentEditorBodyFragment on IssueComment {\n  id\n  body\n  bodyVersion\n  author {\n    __typename\n    login\n    avatarUrl\n    id\n  }\n  issue {\n    author {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...IssueCommentHeader\n}\n\nfragment IssueCommentEditor_repository on IssueComment {\n  repository {\n    slashCommandsEnabled\n    nameWithOwner\n    databaseId\n    id\n  }\n}\n\nfragment IssueCommentHeader on IssueComment {\n  id\n  databaseId\n  url\n  createdAt\n  body\n  authorAssociation\n  viewerCanUpdate\n  viewerCanDelete\n  viewerCanMinimize\n  viewerCanReport\n  viewerCanReportToMaintainer\n  viewerCanBlockFromOrg\n  viewerCanUnblockFromOrg\n  isHidden: isMinimized\n  minimizedReason\n  createdViaEmail\n  viewerDidAuthor\n  authorToRepoOwnerSponsorship {\n    createdAt\n    isActive\n    id\n  }\n  author {\n    __typename\n    id\n    login\n  }\n  repository {\n    id\n    name\n    owner {\n      __typename\n      id\n      login\n      url\n    }\n    isPrivate\n  }\n  issue {\n    number\n    id\n  }\n  ...MarkdownEditHistoryViewer_comment\n}\n\nfragment IssueCommentViewerCommentRow on IssueComment {\n  id\n  databaseId\n  ...IssueCommentViewerMarkdownViewer\n  ...IssueCommentHeader\n  author {\n    avatarUrl\n    login\n    __typename\n    id\n  }\n  issue {\n    id\n    locked\n  }\n  body\n  isHidden: isMinimized\n  viewerCanUpdate\n}\n\nfragment IssueCommentViewerMarkdownViewer on IssueComment {\n  id\n  body\n  bodyHTML(unfurlReferences: true)\n  bodyVersion\n  viewerCanUpdate\n}\n\nfragment IssueCommentViewerReactable on Reactable {\n  __isReactable: __typename\n  ...ReactionViewerGroups\n}\n\nfragment IssueComment_issueComment on IssueComment {\n  ...IssueCommentViewerCommentRow\n  ...IssueCommentViewerReactable\n  ...IssueCommentEditor_repository\n  ...IssueCommentEditorBodyFragment\n  issue {\n    id\n  }\n  id\n}\n\nfragment LabelData on Label {\n  nameHTML\n  name\n  color\n  id\n  description\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment LabeledEvent on LabeledEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  label {\n    ...LabelData\n    id\n  }\n}\n\nfragment LockedEvent on LockedEvent {\n  databaseId\n  createdAt\n  lockReason\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment MarkdownEditHistoryViewer_comment on Comment {\n  __isComment: __typename\n  id\n  viewerCanReadUserContentEdits\n  lastEditedAt\n  lastUserContentEdit {\n    editor {\n      __typename\n      url\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment MarkedAsDuplicateEvent on MarkedAsDuplicateEvent {\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  canonical {\n    __typename\n    ... on Issue {\n      url\n      number\n      id\n    }\n    ... on PullRequest {\n      url\n      number\n      id\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  databaseId\n  viewerCanUndo\n  id\n}\n\nfragment MentionedEvent on MentionedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment MilestonedEvent on MilestonedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  milestoneTitle\n  milestone {\n    url\n    id\n  }\n}\n\nfragment MovedColumnsInProjectEvent on MovedColumnsInProjectEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  previousProjectColumnName\n  projectColumnName\n}\n\nfragment PinnedEvent on PinnedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment ProjectV2ItemStatusChangedEvent on ProjectV2ItemStatusChangedEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n  previousStatus\n  status\n}\n\nfragment ReactionButton_Reaction on ReactionGroup {\n  content\n  reactors(first: 5) {\n    nodes {\n      __typename\n      ... on User {\n        login\n        __typename\n      }\n      ... on Bot {\n        login\n        __typename\n      }\n      ... on Organization {\n        login\n        __typename\n      }\n      ... on Mannequin {\n        login\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n    totalCount\n  }\n  viewerHasReacted\n}\n\nfragment ReactionViewerGroups on Reactable {\n  __isReactable: __typename\n  reactionGroups {\n    ...ReactionButton_Reaction\n    ...ReactionsMenuItem_Reaction\n  }\n}\n\nfragment ReactionsMenuItem_Reaction on ReactionGroup {\n  content\n  viewerHasReacted\n}\n\nfragment ReferencedEvent on ReferencedEvent {\n  databaseId\n  willCloseSubject\n  subject {\n    __typename\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  commit {\n    ...ReferencedEventInner\n    id\n  }\n  createdAt\n}\n\nfragment ReferencedEventInner on Commit {\n  message\n  messageHeadlineHTML\n  messageBodyHTML\n  url\n  abbreviatedOid\n  signature {\n    __typename\n    signer {\n      login\n      avatarUrl\n      id\n    }\n    state\n    wasSignedByGitHub\n    ... on SmimeSignature {\n      issuer {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n      subject {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n    }\n    ... on GpgSignature {\n      keyId\n    }\n    ... on SshSignature {\n      keyFingerprint\n    }\n  }\n  verificationStatus\n  hasSignature\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    defaultBranch\n    id\n  }\n}\n\nfragment RemovedFromProjectEvent on RemovedFromProjectEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  projectColumnName\n}\n\nfragment RemovedFromProjectV2Event on RemovedFromProjectV2Event {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n}\n\nfragment RenamedTitleEvent on RenamedTitleEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  currentTitle\n  previousTitle\n}\n\nfragment ReopenedEvent on ReopenedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment SubscribedEvent on SubscribedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment TimelineItemsPaginated on IssueTimelineItemsConnection {\n  edges {\n    node {\n      ... on IssueComment {\n        databaseId\n        viewerDidAuthor\n        issue {\n          author {\n            __typename\n            login\n            id\n          }\n          id\n        }\n      }\n      ... on ReferencedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on CrossReferencedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        source {\n          __typename\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n        willCloseTarget\n      }\n      ... on MentionedEvent {\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on LabeledEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        label {\n          id\n        }\n      }\n      ... on UnlabeledEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        label {\n          id\n        }\n      }\n      ... on AssignedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        assignee {\n          __typename\n          ... on User {\n            id\n          }\n          ... on Bot {\n            id\n          }\n          ... on Mannequin {\n            id\n          }\n          ... on Organization {\n            id\n          }\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n      }\n      ... on UnassignedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        assignee {\n          __typename\n          ... on User {\n            id\n          }\n          ... on Bot {\n            id\n          }\n          ... on Mannequin {\n            id\n          }\n          ... on Organization {\n            id\n          }\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n      }\n      ... on AddedToProjectV2Event {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on RemovedFromProjectV2Event {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      __typename\n      ...IssueComment_issueComment\n      ...AddedToProjectEvent\n      ...MovedColumnsInProjectEvent\n      ...RemovedFromProjectEvent\n      ...SubscribedEvent\n      ...UnsubscribedEvent\n      ...MentionedEvent\n      ...ClosedEvent\n      ...ReopenedEvent\n      ...LockedEvent\n      ...UnlockedEvent\n      ...PinnedEvent\n      ...UnpinnedEvent\n      ...LabeledEvent\n      ...RenamedTitleEvent\n      ...UnlabeledEvent\n      ...UnassignedEvent\n      ...AssignedEvent\n      ...CommentDeletedEvent\n      ...UserBlockedEvent\n      ...MilestonedEvent\n      ...DemilestonedEvent\n      ...CrossReferencedEvent\n      ...ReferencedEvent\n      ...ConnectedEvent\n      ...TransferredEvent\n      ...ConvertedNoteToIssueEvent\n      ...DisconnectedEvent\n      ...MarkedAsDuplicateEvent\n      ...UnmarkedAsDuplicateEvent\n      ...ConvertedToDiscussionEvent\n      ...AddedToProjectV2Event\n      ...RemovedFromProjectV2Event\n      ...ProjectV2ItemStatusChangedEvent\n      ...ConvertedFromDraftEvent\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n}\n\nfragment TimelineRowEventActor on Actor {\n  __isActor: __typename\n  ...EventActor\n}\n\nfragment TransferredEvent on TransferredEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  fromRepository {\n    nameWithOwner\n    url\n    id\n  }\n}\n\nfragment UnassignedEvent on UnassignedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    login\n    ...TimelineRowEventActor\n    id\n  }\n  assignee {\n    __typename\n    ... on User {\n      login\n    }\n    ... on Mannequin {\n      login\n    }\n    ... on Organization {\n      login\n    }\n    ... on Bot {\n      login\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment UnlabeledEvent on UnlabeledEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  label {\n    ...LabelData\n    id\n  }\n}\n\nfragment UnlockedEvent on UnlockedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UnmarkedAsDuplicateEvent on UnmarkedAsDuplicateEvent {\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  canonical {\n    __typename\n    ... on Issue {\n      url\n      number\n    }\n    ... on PullRequest {\n      url\n      number\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  databaseId\n}\n\nfragment UnpinnedEvent on UnpinnedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UnsubscribedEvent on UnsubscribedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UserBlockedEvent on UserBlockedEvent {\n  databaseId\n  createdAt\n  blockDuration\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  blockedUser: subject {\n    login\n    id\n  }\n}\n",
  "0d681d14600a20d23b443cc7fa02123e": "query ConvertToDiscussionDialogQuery(\n  $issueId: ID!\n  $first: Int!\n) {\n  node(id: $issueId) {\n    __typename\n    ... on Issue {\n      ...ConvertToDiscussionDialogIssuePropertiesFragment\n      repository {\n        ...DiscussionCategoryPickerDiscussionCategories\n        id\n      }\n    }\n    id\n  }\n}\n\nfragment ConvertToDiscussionDialogIssuePropertiesFragment on Issue {\n  comments {\n    totalCount\n  }\n  reactions {\n    totalCount\n  }\n  tasklistBlocks {\n    totalCount\n  }\n  assignees {\n    totalCount\n  }\n  projectsV2 {\n    totalCount\n  }\n  projectCards {\n    totalCount\n  }\n  milestone {\n    __typename\n    id\n  }\n}\n\nfragment DiscussionCategoryPickerDiscussionCategories on Repository {\n  discussionCategories(first: $first, filterByAssignable: true) {\n    edges {\n      node {\n        id\n        name\n      }\n    }\n  }\n}\n",
  "0ec27968d3caa9566cce5b4c519eaf3f": "mutation dismissFirstTimeContributionBannerMutation(\n  $input: DismissNoticeInput!\n) {\n  dismissNotice(input: $input) {\n    clientMutationId\n  }\n}\n",
  "11cf7bbbb247aaf4cf20eeab3c3dbc4d": "query TimelinePaginationQuery(\n  $cursor: String\n  $numberOfTimelineItems: Int\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ...IssueTimelineFrontPaginated_23lev3\n    id\n  }\n}\n\nfragment AddedToProjectEvent on AddedToProjectEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  projectColumnName\n  databaseId\n}\n\nfragment AddedToProjectV2Event on AddedToProjectV2Event {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n}\n\nfragment AssignedEvent on AssignedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    login\n    id\n  }\n  assignee {\n    __typename\n    ... on User {\n      login\n    }\n    ... on Mannequin {\n      login\n    }\n    ... on Organization {\n      login\n    }\n    ... on Bot {\n      login\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ClosedEvent on ClosedEvent {\n  databaseId\n  createdAt\n  stateReason\n  closingProjectItemStatus\n  closer {\n    __typename\n    ... on ProjectV2 {\n      url\n      title\n    }\n    ... on PullRequest {\n      url\n      number\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Commit {\n      url\n      abbreviatedOid\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment CommentDeletedEvent on CommentDeletedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  deletedCommentAuthor {\n    __typename\n    login\n    id\n  }\n}\n\nfragment ConnectedEvent on ConnectedEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  subject {\n    __typename\n    ... on PullRequest {\n      title\n      url\n      number\n      state\n      isDraft\n      isInMergeQueue\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ConvertedFromDraftEvent on ConvertedFromDraftEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  databaseId\n}\n\nfragment ConvertedNoteToIssueEvent on ConvertedNoteToIssueEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  project {\n    url\n    name\n    id\n  }\n}\n\nfragment ConvertedToDiscussionEvent on ConvertedToDiscussionEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  discussion {\n    url\n    number\n    id\n  }\n}\n\nfragment CrossReferencedEvent on CrossReferencedEvent {\n  referencedAt\n  willCloseTarget\n  databaseId\n  target {\n    __typename\n    ... on Issue {\n      repository {\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  innerSource: source {\n    __typename\n    ...CrossReferencedEventInner\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment CrossReferencedEventInner on ReferencedSubject {\n  __isReferencedSubject: __typename\n  __typename\n  ... on Issue {\n    id\n    issueTitleHTML: titleHTML\n    url\n    number\n    stateReason\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n  ... on PullRequest {\n    id\n    pullTitleHTML: titleHTML\n    url\n    number\n    state\n    isDraft\n    isInMergeQueue\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n}\n\nfragment DemilestonedEvent on DemilestonedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  milestoneTitle\n  milestone {\n    url\n    id\n  }\n}\n\nfragment DisconnectedEvent on DisconnectedEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  subject {\n    __typename\n    ... on PullRequest {\n      title\n      url\n      number\n      state\n      isDraft\n      isInMergeQueue\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment EventActor on Actor {\n  __isActor: __typename\n  avatarUrl(size: 64)\n  login\n  __typename\n}\n\nfragment IssueCommentEditorBodyFragment on IssueComment {\n  id\n  body\n  bodyVersion\n  author {\n    __typename\n    login\n    avatarUrl\n    id\n  }\n  issue {\n    author {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...IssueCommentHeader\n}\n\nfragment IssueCommentEditor_repository on IssueComment {\n  repository {\n    slashCommandsEnabled\n    nameWithOwner\n    databaseId\n    id\n  }\n}\n\nfragment IssueCommentHeader on IssueComment {\n  id\n  databaseId\n  url\n  createdAt\n  body\n  authorAssociation\n  viewerCanUpdate\n  viewerCanDelete\n  viewerCanMinimize\n  viewerCanReport\n  viewerCanReportToMaintainer\n  viewerCanBlockFromOrg\n  viewerCanUnblockFromOrg\n  isHidden: isMinimized\n  minimizedReason\n  createdViaEmail\n  viewerDidAuthor\n  authorToRepoOwnerSponsorship {\n    createdAt\n    isActive\n    id\n  }\n  author {\n    __typename\n    id\n    login\n  }\n  repository {\n    id\n    name\n    owner {\n      __typename\n      id\n      login\n      url\n    }\n    isPrivate\n  }\n  issue {\n    number\n    id\n  }\n  ...MarkdownEditHistoryViewer_comment\n}\n\nfragment IssueCommentViewerCommentRow on IssueComment {\n  id\n  databaseId\n  ...IssueCommentViewerMarkdownViewer\n  ...IssueCommentHeader\n  author {\n    avatarUrl\n    login\n    __typename\n    id\n  }\n  issue {\n    id\n    locked\n  }\n  body\n  isHidden: isMinimized\n  viewerCanUpdate\n}\n\nfragment IssueCommentViewerMarkdownViewer on IssueComment {\n  id\n  body\n  bodyHTML(unfurlReferences: true)\n  bodyVersion\n  viewerCanUpdate\n}\n\nfragment IssueCommentViewerReactable on Reactable {\n  __isReactable: __typename\n  ...ReactionViewerGroups\n}\n\nfragment IssueComment_issueComment on IssueComment {\n  ...IssueCommentViewerCommentRow\n  ...IssueCommentViewerReactable\n  ...IssueCommentEditor_repository\n  ...IssueCommentEditorBodyFragment\n  issue {\n    id\n  }\n  id\n}\n\nfragment IssueTimelineFrontPaginated_23lev3 on Issue {\n  frontTimeline: timelineItems(first: $numberOfTimelineItems, after: $cursor, visibleEventsOnly: true) @defer(label: \"Issue_frontTimeline\") {\n    totalCount\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    edges {\n      node {\n        ... on TimelineEvent {\n          __isTimelineEvent: __typename\n          databaseId\n        }\n        __typename\n        ... on Node {\n          __isNode: __typename\n          id\n        }\n      }\n      cursor\n    }\n    ...TimelineItemsPaginated\n  }\n  id\n  url\n}\n\nfragment LabelData on Label {\n  nameHTML\n  name\n  color\n  id\n  description\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment LabeledEvent on LabeledEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  label {\n    ...LabelData\n    id\n  }\n}\n\nfragment LockedEvent on LockedEvent {\n  databaseId\n  createdAt\n  lockReason\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment MarkdownEditHistoryViewer_comment on Comment {\n  __isComment: __typename\n  id\n  viewerCanReadUserContentEdits\n  lastEditedAt\n  lastUserContentEdit {\n    editor {\n      __typename\n      url\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment MarkedAsDuplicateEvent on MarkedAsDuplicateEvent {\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  canonical {\n    __typename\n    ... on Issue {\n      url\n      number\n      id\n    }\n    ... on PullRequest {\n      url\n      number\n      id\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  databaseId\n  viewerCanUndo\n  id\n}\n\nfragment MentionedEvent on MentionedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment MilestonedEvent on MilestonedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  milestoneTitle\n  milestone {\n    url\n    id\n  }\n}\n\nfragment MovedColumnsInProjectEvent on MovedColumnsInProjectEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  previousProjectColumnName\n  projectColumnName\n}\n\nfragment PinnedEvent on PinnedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment ProjectV2ItemStatusChangedEvent on ProjectV2ItemStatusChangedEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n  previousStatus\n  status\n}\n\nfragment ReactionButton_Reaction on ReactionGroup {\n  content\n  reactors(first: 5) {\n    nodes {\n      __typename\n      ... on User {\n        login\n        __typename\n      }\n      ... on Bot {\n        login\n        __typename\n      }\n      ... on Organization {\n        login\n        __typename\n      }\n      ... on Mannequin {\n        login\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n    totalCount\n  }\n  viewerHasReacted\n}\n\nfragment ReactionViewerGroups on Reactable {\n  __isReactable: __typename\n  reactionGroups {\n    ...ReactionButton_Reaction\n    ...ReactionsMenuItem_Reaction\n  }\n}\n\nfragment ReactionsMenuItem_Reaction on ReactionGroup {\n  content\n  viewerHasReacted\n}\n\nfragment ReferencedEvent on ReferencedEvent {\n  databaseId\n  willCloseSubject\n  subject {\n    __typename\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  commit {\n    ...ReferencedEventInner\n    id\n  }\n  createdAt\n}\n\nfragment ReferencedEventInner on Commit {\n  message\n  messageHeadlineHTML\n  messageBodyHTML\n  url\n  abbreviatedOid\n  signature {\n    __typename\n    signer {\n      login\n      avatarUrl\n      id\n    }\n    state\n    wasSignedByGitHub\n    ... on SmimeSignature {\n      issuer {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n      subject {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n    }\n    ... on GpgSignature {\n      keyId\n    }\n    ... on SshSignature {\n      keyFingerprint\n    }\n  }\n  verificationStatus\n  hasSignature\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    defaultBranch\n    id\n  }\n}\n\nfragment RemovedFromProjectEvent on RemovedFromProjectEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  projectColumnName\n}\n\nfragment RemovedFromProjectV2Event on RemovedFromProjectV2Event {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n}\n\nfragment RenamedTitleEvent on RenamedTitleEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  currentTitle\n  previousTitle\n}\n\nfragment ReopenedEvent on ReopenedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment SubscribedEvent on SubscribedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment TimelineItemsPaginated on IssueTimelineItemsConnection {\n  edges {\n    node {\n      ... on IssueComment {\n        databaseId\n        viewerDidAuthor\n        issue {\n          author {\n            __typename\n            login\n            id\n          }\n          id\n        }\n      }\n      ... on ReferencedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on CrossReferencedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        source {\n          __typename\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n        willCloseTarget\n      }\n      ... on MentionedEvent {\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on LabeledEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        label {\n          id\n        }\n      }\n      ... on UnlabeledEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        label {\n          id\n        }\n      }\n      ... on AssignedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        assignee {\n          __typename\n          ... on User {\n            id\n          }\n          ... on Bot {\n            id\n          }\n          ... on Mannequin {\n            id\n          }\n          ... on Organization {\n            id\n          }\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n      }\n      ... on UnassignedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        assignee {\n          __typename\n          ... on User {\n            id\n          }\n          ... on Bot {\n            id\n          }\n          ... on Mannequin {\n            id\n          }\n          ... on Organization {\n            id\n          }\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n      }\n      ... on AddedToProjectV2Event {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on RemovedFromProjectV2Event {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      __typename\n      ...IssueComment_issueComment\n      ...AddedToProjectEvent\n      ...MovedColumnsInProjectEvent\n      ...RemovedFromProjectEvent\n      ...SubscribedEvent\n      ...UnsubscribedEvent\n      ...MentionedEvent\n      ...ClosedEvent\n      ...ReopenedEvent\n      ...LockedEvent\n      ...UnlockedEvent\n      ...PinnedEvent\n      ...UnpinnedEvent\n      ...LabeledEvent\n      ...RenamedTitleEvent\n      ...UnlabeledEvent\n      ...UnassignedEvent\n      ...AssignedEvent\n      ...CommentDeletedEvent\n      ...UserBlockedEvent\n      ...MilestonedEvent\n      ...DemilestonedEvent\n      ...CrossReferencedEvent\n      ...ReferencedEvent\n      ...ConnectedEvent\n      ...TransferredEvent\n      ...ConvertedNoteToIssueEvent\n      ...DisconnectedEvent\n      ...MarkedAsDuplicateEvent\n      ...UnmarkedAsDuplicateEvent\n      ...ConvertedToDiscussionEvent\n      ...AddedToProjectV2Event\n      ...RemovedFromProjectV2Event\n      ...ProjectV2ItemStatusChangedEvent\n      ...ConvertedFromDraftEvent\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n}\n\nfragment TimelineRowEventActor on Actor {\n  __isActor: __typename\n  ...EventActor\n}\n\nfragment TransferredEvent on TransferredEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  fromRepository {\n    nameWithOwner\n    url\n    id\n  }\n}\n\nfragment UnassignedEvent on UnassignedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    login\n    ...TimelineRowEventActor\n    id\n  }\n  assignee {\n    __typename\n    ... on User {\n      login\n    }\n    ... on Mannequin {\n      login\n    }\n    ... on Organization {\n      login\n    }\n    ... on Bot {\n      login\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment UnlabeledEvent on UnlabeledEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  label {\n    ...LabelData\n    id\n  }\n}\n\nfragment UnlockedEvent on UnlockedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UnmarkedAsDuplicateEvent on UnmarkedAsDuplicateEvent {\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  canonical {\n    __typename\n    ... on Issue {\n      url\n      number\n    }\n    ... on PullRequest {\n      url\n      number\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  databaseId\n}\n\nfragment UnpinnedEvent on UnpinnedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UnsubscribedEvent on UnsubscribedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UserBlockedEvent on UserBlockedEvent {\n  databaseId\n  createdAt\n  blockDuration\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  blockedUser: subject {\n    login\n    id\n  }\n}\n",
  "13289f2be3dcbcccc3cca472a24041b5": "mutation updateIssuesBulkByQueryMutation(\n  $input: UpdateIssuesBulkByQueryInput!\n) {\n  updateIssuesBulkByQuery(input: $input) {\n    jobId\n  }\n}\n",
  "14b5d72e7a0ec3288e58e8b4cff63040": "query SearchCurrentViewTestQuery {\n  node(id: \"node-id\") {\n    __typename\n    ...SearchBarCurrentViewFragment\n    id\n  }\n}\n\nfragment SearchBarCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  id\n  name\n  description\n  icon\n  color\n  query\n  scopingRepository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n",
  "15abfadd2e60ecfc43e8ce450421e068": "query OrganizationIssueTypesSettingsCreateQuery(\n  $organization_id: String!\n) {\n  viewer {\n    isEnterpriseManagedUser\n    id\n  }\n  organization(login: $organization_id) {\n    id\n    login\n    issueTypes {\n      ...OrganizationIssueTypesSettingsCreateIssueTypes\n    }\n  }\n}\n\nfragment OrganizationIssueTypesSettingsCreateIssueTypes on IssueTypeConnection {\n  totalCount\n  edges {\n    node {\n      name\n      id\n    }\n  }\n}\n",
  "176d53686428c0e1672e6deacaead9bf": "query ApplyMilestoneActionTestQuery(\n  $ids: [ID!]!\n) {\n  nodes(ids: $ids) {\n    __typename\n    ... on Issue {\n      id\n      milestone {\n        ...MilestonePickerMilestone\n        id\n      }\n    }\n    id\n  }\n}\n\nfragment MilestonePickerMilestone on Milestone {\n  id\n  title\n  closed\n  dueOn\n  progressPercentage\n  url\n  closedAt\n}\n",
  "1a36b75f74be7de2d87b1a5de6d10511": "query BranchPickerSearchBranchesQuery(\n  $owner: String!\n  $name: String!\n  $first: Int!\n  $query: String\n) {\n  ...BranchPickerSearchBranchesFragment\n}\n\nfragment BranchPickerRef on Ref {\n  name\n  id\n  __typename\n  target {\n    oid\n    id\n    __typename\n  }\n  repository {\n    id\n    nameWithOwner\n    defaultBranchRef {\n      name\n      id\n      target {\n        oid\n        id\n        __typename\n      }\n      associatedPullRequests {\n        totalCount\n      }\n      repository {\n        id\n      }\n    }\n  }\n  associatedPullRequests {\n    totalCount\n  }\n}\n\nfragment BranchPickerSearchBranchesFragment on Query {\n  repository(owner: $owner, name: $name) {\n    refs(refPrefix: \"refs/heads/\", first: $first, query: $query) {\n      edges {\n        node {\n          ...BranchPickerRef\n          id\n        }\n      }\n    }\n    id\n  }\n}\n",
  "1a9b64da5b2e0647df87635409c321a8": "mutation setLabelsForLabelableMutation(\n  $input: SetLabelsForLabelableInput!\n) {\n  setLabelsForLabelable(input: $input) {\n    labelableRecord {\n      __typename\n      ...LabelPickerAssignedLabels\n      ...LabelsSectionAssignedLabels\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n}\n\nfragment LabelPickerAssignedLabels on Labelable {\n  __isLabelable: __typename\n  labels(first: 100, orderBy: {field: NAME, direction: ASC}) {\n    edges {\n      node {\n        ...LabelPickerLabel\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  ... on Node {\n    __isNode: __typename\n    id\n  }\n}\n\nfragment LabelPickerLabel on Label {\n  id\n  color\n  name\n  nameHTML\n  description\n  url\n}\n\nfragment LabelsSectionAssignedLabels on Labelable {\n  __isLabelable: __typename\n  labels(first: 100, orderBy: {field: NAME, direction: ASC}) {\n    edges {\n      node {\n        ...LabelPickerLabel\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  ... on Node {\n    __isNode: __typename\n    id\n  }\n}\n",
  "1ae5ddd6ba804377aa3991d462497f8a": "query AssigneePickerSearchAssignableRepositoryUsersWithQuery(\n  $owner: String!\n  $name: String!\n  $query: String!\n  $first: Int!\n) {\n  repository(owner: $owner, name: $name) {\n    assignableUsers(query: $query, first: $first) {\n      nodes {\n        ...AssigneePickerAssignee\n        id\n      }\n      totalCount\n    }\n    id\n  }\n}\n\nfragment AssigneePickerAssignee on User {\n  id\n  login\n  name\n  avatarUrl(size: 64)\n}\n",
  "1b02788d949842381ac5385156a1f498": "query DevelopmentSectionReposQuery(\n  $owner: String!\n  $repo: String!\n) {\n  repository(owner: $owner, name: $repo) {\n    ...RepositoryPickerRepository\n    id\n  }\n  viewer {\n    ...RepositoryPickerTopRepositories\n    id\n  }\n}\n\nfragment RepositoryPickerRepository on Repository {\n  id\n  databaseId\n  name\n  nameWithOwner\n  owner {\n    __typename\n    databaseId\n    login\n    avatarUrl(size: 64)\n    id\n  }\n  isPrivate\n  isArchived\n  isInOrganization\n  hasIssuesEnabled\n  slashCommandsEnabled\n  viewerCanPush\n  viewerIssueCreationPermissions {\n    labelable\n    milestoneable\n    assignable\n    triageable\n    typeable\n  }\n  securityPolicyUrl\n  contributingFileUrl\n  codeOfConductFileUrl\n  shortDescriptionHTML\n  planFeatures {\n    maximumAssignees\n  }\n}\n\nfragment RepositoryPickerTopRepositories on User {\n  topRepositories(first: 10, hasIssuesEnabled: true, orderBy: {field: UPDATED_AT, direction: DESC}) {\n    edges {\n      node {\n        ...RepositoryPickerRepository\n        id\n      }\n    }\n  }\n}\n",
  "1b60066c55f48afb1363a2c618ea4556": "mutation createIssueMutation(\n  $input: CreateIssueInput!\n  $fetchParent: Boolean = false\n) {\n  createIssue(input: $input) {\n    issue {\n      databaseId\n      repository {\n        databaseId\n        id\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n      }\n      number\n      title\n      id\n      url\n      parent @include(if: $fetchParent) {\n        id\n        subIssues(first: 50) {\n          totalCount\n        }\n        ...SubIssuesListView\n      }\n    }\n    errors {\n      __typename\n      message\n    }\n  }\n}\n\nfragment ClosedByPullRequestsReferences on Issue {\n  closedByPullRequestsReferences(first: 0, includeClosedPrs: true) {\n    totalCount\n  }\n}\n\nfragment SubIssueStateIcon on Issue {\n  state\n  stateReason\n}\n\nfragment SubIssueTitle_4FLmrJ on Issue {\n  url\n  databaseId\n  number\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  state\n  stateReason\n  ...SubIssueTitle_TitleValue\n  ...SubIssueTypeIndicator\n  ...SubIssuesCompletionPill_4FLmrJ\n}\n\nfragment SubIssueTitle_TitleValue on Issue {\n  title\n  titleHTML\n}\n\nfragment SubIssueTypeIndicator on Issue {\n  number\n  issueType {\n    id\n    name\n    color\n  }\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment SubIssuesCompletionPill_4FLmrJ on Issue {\n  ...useSubIssuesSummary_4FLmrJ\n  url\n}\n\nfragment SubIssuesListItem on Issue {\n  id\n  ...SubIssueStateIcon\n  assignees(first: 10) {\n    totalCount\n    edges {\n      node {\n        id\n        login\n        avatarUrl\n      }\n    }\n  }\n  url\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...SubIssuesListItem_NestedSubIssues_4FLmrJ\n  ...ClosedByPullRequestsReferences\n}\n\nfragment SubIssuesListItem_NestedSubIssues_4FLmrJ on Issue {\n  ...SubIssueTitle_4FLmrJ\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n  id\n}\n\nfragment SubIssuesListView on Issue {\n  id\n  subIssues(first: 50) {\n    nodes {\n      id\n      ...SubIssuesListItem\n    }\n  }\n  ...useSubIssuesSummary_46hWwf\n}\n\nfragment useSubIssuesSummary_46hWwf on Issue {\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n  subIssues(first: 50) {\n    nodes {\n      closed\n      ...useSubIssuesSummary_issueState\n      id\n    }\n  }\n}\n\nfragment useSubIssuesSummary_4FLmrJ on Issue {\n  subIssuesSummary {\n    completed\n  }\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n}\n\nfragment useSubIssuesSummary_issueState on Issue {\n  closed\n}\n",
  "1cf0e02297d66b71e73af2c891569b1d": "query RelayTestUtilsIssueAssigneesFragmentQuery {\n  repository(owner: \"owner\", name: \"repo\") {\n    issue(number: 33) {\n      assignees(first: 5) {\n        ...IssueAssignees_SelectedAssigneesFragment\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment IssueAssignees_SelectedAssigneesFragment on UserConnection {\n  nodes {\n    id\n    login\n  }\n}\n",
  "1d1e59700f5c9977430696b2338a0674": "mutation unarchiveProjectItemMutation(\n  $input: UnarchiveProjectV2ItemInput!\n) {\n  unarchiveProjectV2Item(input: $input) {\n    item {\n      isArchived\n      id\n    }\n  }\n}\n",
  "1e87e3c18634c05fa25e2dd6649421e4": "query AssigneePickerSearchAssignableUsersQuery(\n  $owner: String!\n  $name: String!\n  $number: Int!\n  $query: String!\n  $first: Int!\n) {\n  repository(owner: $owner, name: $name) {\n    issueOrPullRequest(number: $number) {\n      __typename\n      ... on Assignable {\n        __isAssignable: __typename\n        suggestedAssignees(first: $first, query: $query) {\n          nodes {\n            ...AssigneePickerAssignee\n            id\n          }\n        }\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n    id\n  }\n}\n\nfragment AssigneePickerAssignee on User {\n  id\n  login\n  name\n  avatarUrl(size: 64)\n}\n",
  "1ed695200ca0b6cac0e012fd4926b664": "mutation linkBranchesMutation(\n  $baseIssueId: ID!\n  $linkingIds: [ID!]!\n) {\n  linkBranches(input: {issueId: $baseIssueId, linkingIds: $linkingIds}) {\n    issue {\n      linkedBranches(first: 25) {\n        nodes {\n          id\n          ref {\n            ...BranchPickerRef\n            id\n          }\n        }\n      }\n      id\n    }\n  }\n}\n\nfragment BranchPickerRef on Ref {\n  name\n  id\n  __typename\n  target {\n    oid\n    id\n    __typename\n  }\n  repository {\n    id\n    nameWithOwner\n    defaultBranchRef {\n      name\n      id\n      target {\n        oid\n        id\n        __typename\n      }\n      associatedPullRequests {\n        totalCount\n      }\n      repository {\n        id\n      }\n    }\n  }\n  associatedPullRequests {\n    totalCount\n  }\n}\n",
  "20a4a3a9bff1ace4c3d0bd04bf9a8d0e": "query TimelineRowStoryActorQuery {\n  viewer {\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment EventActor on Actor {\n  __isActor: __typename\n  avatarUrl(size: 64)\n  login\n  __typename\n}\n\nfragment TimelineRowEventActor on Actor {\n  __isActor: __typename\n  ...EventActor\n}\n",
  "210b13c5e8f3e0494ec05c008d0e0e0f": "query ParticipantsListQuery(\n  $repo: String!\n  $owner: String!\n  $number: Int!\n) {\n  repository(name: $repo, owner: $owner) {\n    issue(number: $number) {\n      participants(first: 100) {\n        nodes {\n          avatarUrl(size: 64)\n          login\n          name\n          id\n        }\n      }\n      id\n    }\n    id\n  }\n}\n",
  "237174222189ee638a9d246c0a9ba2e3": "query SearchPaginatedQuery(\n  $cursor: String = null\n  $fetchRepository: Boolean!\n  $first: Int\n  $labelPageSize: Int!\n  $query: String!\n  $skip: Int = null\n) {\n  ...ListItemsPaginated_results_16zTcN\n}\n\nfragment IssueItem_WbnLh on Issue {\n  id\n  __typename\n  title\n  titleHtml: titleHTML\n  ...IssuePullRequestTitle_WbnLh\n  ...IssuePullRequestDescription\n  ...IssuePullRequestStateIcon\n  ...IssueTypeIndicator\n}\n\nfragment IssuePullRequestDescription on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    createdAt\n    updatedAt\n    author {\n      __typename\n      login\n      avatarUrl\n      id\n    }\n    number\n    ...MilestoneMetadata\n  }\n  ... on PullRequest {\n    createdAt\n    updatedAt\n    author {\n      __typename\n      login\n      avatarUrl\n      id\n    }\n    number\n    ...MilestoneMetadata\n    reviewDecision\n  }\n}\n\nfragment IssuePullRequestStateIcon on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  __typename\n  ... on Issue {\n    state\n    stateReason\n  }\n  ... on PullRequest {\n    isDraft\n    isInMergeQueue\n    pullRequestState: state\n  }\n}\n\nfragment IssuePullRequestTitle_WbnLh on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  __typename\n  ... on Issue {\n    number\n    labels(first: $labelPageSize, orderBy: {field: NAME, direction: ASC}) {\n      nodes {\n        ...Label\n        name\n        id\n      }\n    }\n  }\n  ... on PullRequest {\n    number\n    labels(first: $labelPageSize, orderBy: {field: NAME, direction: ASC}) {\n      nodes {\n        ...Label\n        name\n        id\n      }\n    }\n  }\n}\n\nfragment IssueRow_1kIinh on Issue {\n  ...IssueItem_WbnLh\n  number\n  repository @include(if: $fetchRepository) {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment IssueTypeIndicator on Issue {\n  issueType {\n    id\n    name\n    color\n  }\n}\n\nfragment Label on Label {\n  id\n  nameHTML\n  color\n  name\n  description\n}\n\nfragment ListItemsPaginated_results_16zTcN on Query {\n  search(first: $first, after: $cursor, query: $query, type: ISSUE, skip: $skip) @defer(label: \"Issue_searchResults\") {\n    edges {\n      node {\n        __typename\n        ... on Issue {\n          id\n          __typename\n          number\n          ...IssueRow_1kIinh\n        }\n        ... on PullRequest {\n          id\n          __typename\n          number\n          ...PullRequestRow_pullRequest_WbnLh\n        }\n        ... on Node {\n          __isNode: __typename\n          id\n        }\n      }\n      cursor\n    }\n    pageInfo {\n      startCursor\n      endCursor\n      hasPreviousPage\n      hasNextPage\n    }\n    issueCount\n  }\n}\n\nfragment MilestoneMetadata on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    milestone {\n      title\n      url\n      id\n    }\n  }\n  ... on PullRequest {\n    milestone {\n      title\n      url\n      id\n    }\n  }\n}\n\nfragment PullRequestItem_WbnLh on PullRequest {\n  id\n  __typename\n  headCommit {\n    commit {\n      id\n      statusCheckRollup {\n        state\n        contexts {\n          checkRunCount\n          checkRunCountsByState {\n            count\n            state\n          }\n        }\n        id\n      }\n    }\n    id\n  }\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  title\n  titleHTML\n  ...IssuePullRequestTitle_WbnLh\n  ...IssuePullRequestDescription\n  ...IssuePullRequestStateIcon\n}\n\nfragment PullRequestRow_pullRequest_WbnLh on PullRequest {\n  __typename\n  id\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...PullRequestItem_WbnLh\n  headCommit {\n    commit {\n      id\n    }\n    id\n  }\n  number\n}\n",
  "23a5680e52f3631a2bae849a4eb88881": "mutation createUserViewMutation(\n  $input: CreateDashboardSearchShortcutInput!\n) {\n  createDashboardSearchShortcut(input: $input) {\n    shortcutEdge {\n      node {\n        ...SavedViewRow\n        id\n      }\n    }\n    shortcut {\n      id\n      ...ListCurrentViewFragment\n      ...IssueDetailCurrentViewFragment\n      ...EditViewButtonCurrentViewFragment\n    }\n  }\n}\n\nfragment EditViewButtonCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  id\n  name\n  description\n  icon\n  color\n  query\n}\n\nfragment HeaderContentCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  name\n  description\n  id\n}\n\nfragment HeaderCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  id\n  name\n  query\n}\n\nfragment IconAndColorPickerViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  icon\n  color\n  id\n}\n\nfragment IssueDetailCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  name\n  query\n}\n\nfragment ListCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  ...SearchBarCurrentViewFragment\n  ...HeaderCurrentViewFragment\n  ...EditViewButtonCurrentViewFragment\n  ...HeaderContentCurrentViewFragment\n  ...IconAndColorPickerViewFragment\n}\n\nfragment SavedViewRow on SearchShortcut {\n  id\n  icon\n  name\n  color\n  description\n  query\n  scopingRepository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment SearchBarCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  id\n  name\n  description\n  icon\n  color\n  query\n  scopingRepository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n",
  "2476bdbab096640234d5bb106cfc91ca": "query TaskListStatusTestQuery(\n  $issueId: ID!\n) {\n  node(id: $issueId) {\n    __typename\n    ... on Issue {\n      ...TaskListStatusFragment\n    }\n    id\n  }\n}\n\nfragment TaskListStatusFragment on Issue {\n  taskListSummary {\n    itemCount\n    completeCount\n  }\n  tasklistBlocksCompletion {\n    completed\n    total\n  }\n}\n",
  "248149933e592650d7f40772dde0d204": "mutation updateIssueTitleMutation(\n  $input: UpdateIssueInput!\n) {\n  updateIssue(input: $input) {\n    issue {\n      id\n      title\n      titleHTML\n    }\n  }\n}\n",
  "2516aa12693ee7c4903b4e5c18af880f": "query IssueViewerSecondaryViewQuery(\n  $repo: String!\n  $owner: String!\n  $number: Int!\n  $markAsRead: Boolean = false\n) {\n  repository(name: $repo, owner: $owner) {\n    ...IssueViewerSecondaryViewQueryData_2ryRLb\n    id\n  }\n}\n\nfragment AddSubIssueButtonGroup_46hWwf on Issue {\n  id\n  repository {\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  parent {\n    id\n  }\n  subIssues(first: 50) {\n    nodes {\n      id\n    }\n  }\n}\n\nfragment AssigneePickerAssignee on User {\n  id\n  login\n  name\n  avatarUrl(size: 64)\n}\n\nfragment AssigneesSectionLazyFragment on Issue {\n  participants(first: 10) {\n    nodes {\n      ...AssigneePickerAssignee\n      id\n    }\n  }\n}\n\nfragment BranchPickerRef on Ref {\n  name\n  id\n  __typename\n  target {\n    oid\n    id\n    __typename\n  }\n  repository {\n    id\n    nameWithOwner\n    defaultBranchRef {\n      name\n      id\n      target {\n        oid\n        id\n        __typename\n      }\n      associatedPullRequests {\n        totalCount\n      }\n      repository {\n        id\n      }\n    }\n  }\n  associatedPullRequests {\n    totalCount\n  }\n}\n\nfragment ClosedByPullRequestsReferences on Issue {\n  closedByPullRequestsReferences(first: 0, includeClosedPrs: true) {\n    totalCount\n  }\n}\n\nfragment DevelopmentSectionFragment on Issue {\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  id\n  title\n  number\n  linkedBranches(first: 25) {\n    nodes {\n      id\n      ref {\n        ...BranchPickerRef\n        id\n      }\n    }\n  }\n  closedByPullRequestsReferences(first: 10, includeClosedPrs: true) {\n    nodes {\n      ...PullRequestPickerPullRequest\n      id\n    }\n  }\n  ...LinkedPullRequests\n  viewerCanUpdateNext\n}\n\nfragment HeaderParentTitle on Issue {\n  parent {\n    id\n    number\n    repository {\n      name\n      owner {\n        __typename\n        login\n        id\n      }\n      id\n    }\n    state\n    stateReason\n    title\n    url\n  }\n}\n\nfragment HeaderSecondary on Issue {\n  isTransferInProgress\n}\n\nfragment HeaderSubIssueSummary on Issue {\n  ...useSubIssuesSummary_46hWwf\n}\n\nfragment IssueBodyHeaderSecondaryFragment on Comment {\n  __isComment: __typename\n  ...MarkdownEditHistoryViewer_comment\n}\n\nfragment IssueBodySecondaryFragment on Issue {\n  viewerCanReport\n  viewerCanReportToMaintainer\n  viewerCanBlockFromOrg\n  viewerCanUnblockFromOrg\n}\n\nfragment IssueCommentComposerSecondary on Issue {\n  viewerCanReopen\n  viewerCanClose\n  repository {\n    slashCommandsEnabled\n    id\n  }\n}\n\nfragment IssueSidebarLazySections on Issue {\n  ...DevelopmentSectionFragment\n  ...RelationshipsSectionFragment\n  ...SubscriptionSectionFragment\n  ...ParticipantsSectionFragment\n}\n\nfragment IssueSidebarSecondary on Issue {\n  ...OptionsSectionSecondary\n  ...AssigneesSectionLazyFragment\n}\n\nfragment IssueTimelineSecondary on Issue {\n  isTransferInProgress\n}\n\nfragment IssueViewerSecondaryIssueData on Issue {\n  ...HeaderSecondary\n  ...HeaderParentTitle\n  ...IssueCommentComposerSecondary\n  ...IssueTimelineSecondary\n  ...IssueSidebarLazySections\n  ...IssueSidebarSecondary\n  ...TaskListStatusFragment\n  ...TrackedByFragment\n  ...IssueBodyHeaderSecondaryFragment\n  ...IssueBodySecondaryFragment\n  ...SubIssuesList\n  ...SubIssuesCreateDialog\n  ...HeaderSubIssueSummary\n}\n\nfragment IssueViewerSecondaryViewQueryData_2ryRLb on Repository {\n  issue(number: $number, markAsRead: $markAsRead) {\n    ...IssueViewerSecondaryIssueData\n    id\n  }\n  ...IssueViewerSecondaryViewQueryRepoData\n}\n\nfragment IssueViewerSecondaryViewQueryRepoData on Repository {\n  ...LazyContributorFooter\n}\n\nfragment LazyContributorFooter on Repository {\n  codeOfConductFileUrl\n  securityPolicyUrl\n  contributingFileUrl\n}\n\nfragment LinkedPullRequest on PullRequest {\n  url\n  number\n  state\n  isDraft\n  repository {\n    name\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment LinkedPullRequests on Issue {\n  repository {\n    nameWithOwner\n    id\n  }\n  linkedPullRequests: closedByPullRequestsReferences(first: 10, includeClosedPrs: false, orderByState: true) {\n    nodes {\n      repository {\n        nameWithOwner\n        id\n      }\n      state\n      isDraft\n      ...LinkedPullRequest\n      id\n    }\n  }\n}\n\nfragment MarkdownEditHistoryViewer_comment on Comment {\n  __isComment: __typename\n  id\n  viewerCanReadUserContentEdits\n  lastEditedAt\n  lastUserContentEdit {\n    editor {\n      __typename\n      url\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment OptionsSectionSecondary on Issue {\n  isTransferInProgress\n}\n\nfragment ParentIssueFragment on Issue {\n  id\n  title\n  url\n  number\n  repository {\n    nameWithOwner\n    id\n  }\n  state\n  stateReason\n  ...SubIssuesSummary\n}\n\nfragment ParticipantFragment on User {\n  ...AssigneePickerAssignee\n}\n\nfragment ParticipantsSectionFragment on Issue {\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  number\n  participants(first: 10) {\n    nodes {\n      ...ParticipantFragment\n      id\n    }\n    totalCount\n  }\n}\n\nfragment PullRequestPickerPullRequest on PullRequest {\n  id\n  __typename\n  url\n  number\n  title\n  state\n  isDraft\n  isInMergeQueue\n  createdAt\n  repository {\n    id\n    name\n    nameWithOwner\n    owner {\n      login\n      __typename\n      id\n    }\n  }\n}\n\nfragment RelationshipsSectionFragment on Issue {\n  id\n  repository {\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  parent {\n    id\n    ...ParentIssueFragment\n  }\n  ...useCanEditSubIssues\n}\n\nfragment SubIssueStateIcon on Issue {\n  state\n  stateReason\n}\n\nfragment SubIssueTitle_4FLmrJ on Issue {\n  url\n  databaseId\n  number\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  state\n  stateReason\n  ...SubIssueTitle_TitleValue\n  ...SubIssueTypeIndicator\n  ...SubIssuesCompletionPill_4FLmrJ\n}\n\nfragment SubIssueTitle_TitleValue on Issue {\n  title\n  titleHTML\n}\n\nfragment SubIssueTypeIndicator on Issue {\n  number\n  issueType {\n    id\n    name\n    color\n  }\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment SubIssuesCompletionPill_4FLmrJ on Issue {\n  ...useSubIssuesSummary_4FLmrJ\n  url\n}\n\nfragment SubIssuesCreateDialog on Issue {\n  id\n  repository {\n    id\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n  }\n}\n\nfragment SubIssuesList on Issue {\n  ...SubIssuesListView\n  ...AddSubIssueButtonGroup_46hWwf\n}\n\nfragment SubIssuesListItem on Issue {\n  id\n  ...SubIssueStateIcon\n  assignees(first: 10) {\n    totalCount\n    edges {\n      node {\n        id\n        login\n        avatarUrl\n      }\n    }\n  }\n  url\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...SubIssuesListItem_NestedSubIssues_4FLmrJ\n  ...ClosedByPullRequestsReferences\n}\n\nfragment SubIssuesListItem_NestedSubIssues_4FLmrJ on Issue {\n  ...SubIssueTitle_4FLmrJ\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n  id\n}\n\nfragment SubIssuesListView on Issue {\n  id\n  subIssues(first: 50) {\n    nodes {\n      id\n      ...SubIssuesListItem\n    }\n  }\n  ...useSubIssuesSummary_46hWwf\n}\n\nfragment SubIssuesSummary on Issue {\n  url\n  ...useSubIssuesSummary_4FLmrJ\n}\n\nfragment SubscriptionSectionFragment on Issue {\n  id\n  viewerThreadSubscriptionFormAction\n}\n\nfragment TaskListStatusFragment on Issue {\n  taskListSummary {\n    itemCount\n    completeCount\n  }\n  tasklistBlocksCompletion {\n    completed\n    total\n  }\n}\n\nfragment TrackedByFragment on Issue {\n  trackedInIssues(first: 10) {\n    nodes {\n      number\n      url\n      stateReason\n      id\n    }\n    totalCount\n  }\n}\n\nfragment useCanEditSubIssues on Issue {\n  viewerCanUpdateMetadata\n  repository {\n    isArchived\n    id\n  }\n}\n\nfragment useSubIssuesSummary_46hWwf on Issue {\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n  subIssues(first: 50) {\n    nodes {\n      closed\n      ...useSubIssuesSummary_issueState\n      id\n    }\n  }\n}\n\nfragment useSubIssuesSummary_4FLmrJ on Issue {\n  subIssuesSummary {\n    completed\n  }\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n}\n\nfragment useSubIssuesSummary_issueState on Issue {\n  closed\n}\n",
  "25e2e16efc92a0f22e68aa3e80cd0ae4": "mutation prioritizePinnedIssuesMutation(\n  $input: PrioritizePinnedIssuesInput!\n) {\n  prioritizePinnedIssues(input: $input) {\n    repository {\n      pinnedIssues(first: 3) {\n        nodes {\n          issue {\n            id\n            title\n            ...PinnedIssueIssue\n          }\n          id\n        }\n      }\n      id\n    }\n  }\n}\n\nfragment PinnedIssueIssue on Issue {\n  id\n  title\n  titleHTML\n  url\n  createdAt\n  state\n  stateReason\n  number\n  author {\n    __typename\n    login\n    url\n    id\n  }\n  totalCommentsCount\n  repository {\n    viewerCanPinIssues\n    id\n  }\n}\n",
  "26b8a4104d7616417e09ef3cd38ad577": "query ApplyIssueTypeActionQuery(\n  $ids: [ID!]!\n) {\n  nodes(ids: $ids) {\n    __typename\n    ... on Issue {\n      id\n      actionIssueType: issueType {\n        ...IssueTypePickerIssueType\n        id\n      }\n    }\n    id\n  }\n}\n\nfragment IssueTypePickerIssueType on IssueType {\n  id\n  name\n  isEnabled\n  description\n  color\n}\n",
  "287999537a42ec7434d885d2ef404381": "query IssueDashboardKnownViewPageQuery(\n  $query: String = \"state:open archived:false assignee:@me sort:updated-desc\"\n  $first: Int = 25\n  $labelPageSize: Int = 20\n  $skip: Int = null\n) {\n  ...ListQuery_48pks9\n}\n\nfragment IssueItem_WbnLh on Issue {\n  id\n  __typename\n  title\n  titleHtml: titleHTML\n  ...IssuePullRequestTitle_WbnLh\n  ...IssuePullRequestDescription\n  ...IssuePullRequestStateIcon\n  ...IssueTypeIndicator\n}\n\nfragment IssuePullRequestDescription on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    createdAt\n    updatedAt\n    author {\n      __typename\n      login\n      avatarUrl\n      id\n    }\n    number\n    ...MilestoneMetadata\n  }\n  ... on PullRequest {\n    createdAt\n    updatedAt\n    author {\n      __typename\n      login\n      avatarUrl\n      id\n    }\n    number\n    ...MilestoneMetadata\n    reviewDecision\n  }\n}\n\nfragment IssuePullRequestStateIcon on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  __typename\n  ... on Issue {\n    state\n    stateReason\n  }\n  ... on PullRequest {\n    isDraft\n    isInMergeQueue\n    pullRequestState: state\n  }\n}\n\nfragment IssuePullRequestTitle_WbnLh on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  __typename\n  ... on Issue {\n    number\n    labels(first: $labelPageSize, orderBy: {field: NAME, direction: ASC}) {\n      nodes {\n        ...Label\n        name\n        id\n      }\n    }\n  }\n  ... on PullRequest {\n    number\n    labels(first: $labelPageSize, orderBy: {field: NAME, direction: ASC}) {\n      nodes {\n        ...Label\n        name\n        id\n      }\n    }\n  }\n}\n\nfragment IssueRow_bj3h3 on Issue {\n  ...IssueItem_WbnLh\n  number\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment IssueTypeIndicator on Issue {\n  issueType {\n    id\n    name\n    color\n  }\n}\n\nfragment Label on Label {\n  id\n  nameHTML\n  color\n  name\n  description\n}\n\nfragment ListItemsPaginated_results_48pks9 on Query {\n  search(first: $first, query: $query, type: ISSUE, skip: $skip) @defer(label: \"Issue_searchResults\") {\n    edges {\n      node {\n        __typename\n        ... on Issue {\n          id\n          __typename\n          number\n          ...IssueRow_bj3h3\n        }\n        ... on PullRequest {\n          id\n          __typename\n          number\n          ...PullRequestRow_pullRequest_WbnLh\n        }\n        ... on Node {\n          __isNode: __typename\n          id\n        }\n      }\n      cursor\n    }\n    pageInfo {\n      startCursor\n      endCursor\n      hasPreviousPage\n      hasNextPage\n    }\n    issueCount\n  }\n}\n\nfragment ListQuery_48pks9 on Query {\n  ...SearchRootFragment_48pks9\n}\n\nfragment MilestoneMetadata on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    milestone {\n      title\n      url\n      id\n    }\n  }\n  ... on PullRequest {\n    milestone {\n      title\n      url\n      id\n    }\n  }\n}\n\nfragment PullRequestItem_WbnLh on PullRequest {\n  id\n  __typename\n  headCommit {\n    commit {\n      id\n      statusCheckRollup {\n        state\n        contexts {\n          checkRunCount\n          checkRunCountsByState {\n            count\n            state\n          }\n        }\n        id\n      }\n    }\n    id\n  }\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  title\n  titleHTML\n  ...IssuePullRequestTitle_WbnLh\n  ...IssuePullRequestDescription\n  ...IssuePullRequestStateIcon\n}\n\nfragment PullRequestRow_pullRequest_WbnLh on PullRequest {\n  __typename\n  id\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...PullRequestItem_WbnLh\n  headCommit {\n    commit {\n      id\n    }\n    id\n  }\n  number\n}\n\nfragment SearchList_48pks9 on Query {\n  ...ListItemsPaginated_results_48pks9\n}\n\nfragment SearchRootFragment_48pks9 on Query {\n  ...SearchList_48pks9\n}\n",
  "29d658a76dae96b719fc77a57837992a": "mutation updateIssueBodyMutation(\n  $input: UpdateIssueInput!\n) {\n  updateIssue(input: $input) {\n    issue {\n      id\n      bodyVersion\n      ...IssueBodyContent\n      ...MarkdownEditHistoryViewer_comment\n    }\n  }\n}\n\nfragment IssueBodyContent on Issue {\n  body\n  bodyHTML(unfurlReferences: true, renderTasklistBlocks: true)\n  bodyVersion\n}\n\nfragment MarkdownEditHistoryViewer_comment on Comment {\n  __isComment: __typename\n  id\n  viewerCanReadUserContentEdits\n  lastEditedAt\n  lastUserContentEdit {\n    editor {\n      __typename\n      url\n      login\n      id\n    }\n    id\n  }\n}\n",
  "2adb611d5180e5bb01269abf2b47496e": "query SharedViewTreeTeamViewsPaginatedQuery(\n  $cursor: String\n  $searchTypes: [SearchShortcutType!]!\n  $teamViewPageSize: Int\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ...SharedViewTree_79enU\n    id\n  }\n}\n\nfragment SharedViewTreeItem on TeamSearchShortcut {\n  id\n  icon\n  name\n  query\n  color\n}\n\nfragment SharedViewTree_79enU on TeamDashboard {\n  shortcuts(first: $teamViewPageSize, after: $cursor, searchTypes: $searchTypes) {\n    edges {\n      node {\n        ...SharedViewTreeItem\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n}\n",
  "2cf11a738df6a50279f4fdd91d787124": "query TrackedByTestQuery(\n  $issueId: ID!\n) {\n  node(id: $issueId) {\n    __typename\n    ... on Issue {\n      ...TrackedByFragment\n    }\n    id\n  }\n}\n\nfragment TrackedByFragment on Issue {\n  trackedInIssues(first: 10) {\n    nodes {\n      number\n      url\n      stateReason\n      id\n    }\n    totalCount\n  }\n}\n",
  "2d936d5443d0221618af02eb98fced94": "query FirstTimeContributionBannerTestQuery {\n  node(id: \"repo\") {\n    __typename\n    ... on Repository {\n      ...FirstTimeContributionBanner\n    }\n    id\n  }\n}\n\nfragment FirstTimeContributionBanner on Repository {\n  showFirstTimeContributorBanner(isPullRequests: false)\n  nameWithOwner\n  contributingGuidelines {\n    url\n  }\n  communityProfile {\n    goodFirstIssueIssuesCount\n  }\n  url\n}\n",
  "2dafdf06768e693015753b0d0c142f76": "query AssigneesSectionTestQuery(\n  $owner: String!\n  $repo: String!\n  $number: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $number) {\n      ...AssigneesSectionFragment\n      id\n    }\n    id\n  }\n  viewer {\n    ...AssigneePickerAssignee\n    id\n  }\n}\n\nfragment AssigneePickerAssignee on User {\n  id\n  login\n  name\n  avatarUrl(size: 64)\n}\n\nfragment AssigneesSectionAssignees on Issue {\n  assignees(first: 20) {\n    nodes {\n      ...AssigneePickerAssignee\n      id\n    }\n  }\n}\n\nfragment AssigneesSectionFragment on Issue {\n  id\n  number\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    isArchived\n    planFeatures {\n      maximumAssignees\n    }\n    id\n  }\n  ...AssigneesSectionAssignees\n  viewerCanUpdateNext\n  viewerCanAssign\n}\n",
  "2e442795856df0dce31874a806d7b5e6": "query RecentlyUpdatedMilestoneQuery(\n  $count: Int = 100\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ...MilestonePickerRecentlyUpdatedMilestones_yu5n1\n    id\n  }\n}\n\nfragment MilestonePickerMilestone on Milestone {\n  id\n  title\n  closed\n  dueOn\n  progressPercentage\n  url\n  closedAt\n}\n\nfragment MilestonePickerRecentlyUpdatedMilestones_yu5n1 on Repository {\n  milestones(first: $count, orderBy: {field: UPDATED_AT, direction: DESC}, orderByStates: [OPEN, CLOSED]) {\n    nodes {\n      ...MilestonePickerMilestone\n      id\n    }\n  }\n  id\n}\n",
  "318c6d8631a7a2701a78d6eee1b78c38": "query RepositoryAndTemplatePickerDialogQuery(\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ... on Repository {\n      ...RepositoryPickerRepositoryIssueTemplates\n    }\n    id\n  }\n}\n\nfragment AssigneePickerAssignee on User {\n  id\n  login\n  name\n  avatarUrl(size: 64)\n}\n\nfragment CheckboxesElement_input on IssueFormElementCheckboxes {\n  label\n  descriptionHTML\n  checkboxOptions: options {\n    label\n    labelHTML\n    required\n  }\n}\n\nfragment DropdownElement_input on IssueFormElementDropdown {\n  label\n  descriptionHTML\n  options\n  required\n  multiple\n  defaultOptionIndex: default\n}\n\nfragment IssueFormElements_templateElements on IssueForm {\n  elements {\n    __typename\n    ... on IssueFormElementInput {\n      ...TextInputElement_input\n    }\n    ... on IssueFormElementTextarea {\n      ...TextAreaElement_input\n    }\n    ... on IssueFormElementMarkdown {\n      ...MarkdownElement_input\n    }\n    ... on IssueFormElementDropdown {\n      ...DropdownElement_input\n    }\n    ... on IssueFormElementCheckboxes {\n      ...CheckboxesElement_input\n    }\n  }\n}\n\nfragment IssueTypePickerIssueType on IssueType {\n  id\n  name\n  isEnabled\n  description\n  color\n}\n\nfragment LabelPickerLabel on Label {\n  id\n  color\n  name\n  nameHTML\n  description\n  url\n}\n\nfragment MarkdownElement_input on IssueFormElementMarkdown {\n  contentHTML\n}\n\nfragment ProjectPickerProject on ProjectV2 {\n  id\n  title\n  closed\n  number\n  url\n  viewerCanUpdate\n  __typename\n}\n\nfragment RepositoryPickerRepositoryIssueTemplates on Repository {\n  isSecurityPolicyEnabled\n  securityPolicyUrl\n  isBlankIssuesEnabled\n  templateTreeUrl\n  issueTemplates {\n    __typename\n    about\n    name\n    filename\n    body\n    title\n    labels(first: 20, orderBy: {field: NAME, direction: ASC}) {\n      edges {\n        node {\n          ...LabelPickerLabel\n          id\n        }\n      }\n      totalCount\n    }\n    assignees(first: 10) {\n      edges {\n        node {\n          ...AssigneePickerAssignee\n          id\n        }\n      }\n      totalCount\n    }\n    type {\n      ...IssueTypePickerIssueType\n      id\n    }\n  }\n  issueForms {\n    __typename\n    name\n    description\n    filename\n    title\n    ...IssueFormElements_templateElements\n    labels(first: 20, orderBy: {field: NAME, direction: ASC}) {\n      edges {\n        node {\n          ...LabelPickerLabel\n          id\n        }\n      }\n      totalCount\n    }\n    assignees(first: 10) {\n      edges {\n        node {\n          ...AssigneePickerAssignee\n          id\n        }\n      }\n      totalCount\n    }\n    projects(first: 20) {\n      edges {\n        node {\n          ...ProjectPickerProject\n          id\n        }\n      }\n    }\n    type {\n      ...IssueTypePickerIssueType\n      id\n    }\n  }\n  contactLinks {\n    name\n    about\n    url\n    __typename\n  }\n}\n\nfragment TextAreaElement_input on IssueFormElementTextarea {\n  itemId: id\n  label\n  descriptionHTML\n  placeholder\n  value\n  required\n  render\n}\n\nfragment TextInputElement_input on IssueFormElementInput {\n  itemId: id\n  label\n  descriptionHTML\n  placeholder\n  value\n  required\n}\n",
  "32b40eafc268378d3c24931a59846f4a": "query OrganizationIssueTypesSettingsQuery(\n  $organization_id: String!\n) {\n  organization(login: $organization_id) {\n    login\n    ...OrganizationIssueTypesList_390p\n    id\n  }\n}\n\nfragment DeletionConfirmationDialogIssueType on IssueType {\n  id\n  name\n}\n\nfragment DisableOrganizationConfirmationDialogIssueType on IssueType {\n  id\n  name\n}\n\nfragment IssueTypeItemMenuItem on IssueType {\n  id\n  isEnabled\n  name\n}\n\nfragment IssueTypesListItem on IssueType {\n  id\n  name\n  isEnabled\n  isPrivate\n  description\n  color\n  ...DisableOrganizationConfirmationDialogIssueType\n  ...DeletionConfirmationDialogIssueType\n  ...IssueTypeItemMenuItem\n}\n\nfragment IssueTypesListList on IssueTypeConnection {\n  totalCount\n  edges {\n    node {\n      id\n      name\n      ...IssueTypesListItem\n    }\n  }\n}\n\nfragment OrganizationIssueTypesList_390p on Organization {\n  issueTypes(first: 10) {\n    ...IssueTypesListList\n    edges {\n      __typename\n      cursor\n      node {\n        __typename\n        id\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  login\n  id\n}\n",
  "3326b1e4b960cfe7156499d6f7aa9f47": "subscription PullRequestRowCommitChecksSubscription(\n  $id: ID!\n) {\n  commitChecksUpdated(id: $id) {\n    id\n    statusCheckRollup {\n      state\n      contexts {\n        checkRunCount\n        checkRunCountsByState {\n          count\n          state\n        }\n      }\n      id\n    }\n  }\n}\n",
  "333d28f33fdb9cce58fd191174d5e4f5": "query LabelPickerSearchQuery(\n  $owner: String!\n  $repo: String!\n  $query: String\n  $count: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    labels(query: $query, first: $count) {\n      nodes {\n        ...LabelPickerLabel\n        id\n      }\n    }\n    id\n  }\n}\n\nfragment LabelPickerLabel on Label {\n  id\n  color\n  name\n  nameHTML\n  description\n  url\n}\n",
  "342ed7fee6ebee664150d1f2402cda9a": "query ClosedByPullRequestsReferencesQuery(\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ... on Issue {\n      ...ClosedByPullRequestsReferencesList\n    }\n    id\n  }\n}\n\nfragment ClosedByPullRequestsReferencesList on Issue {\n  closedByPullRequestsReferences(first: 10, includeClosedPrs: true) {\n    edges {\n      node {\n        ...PullRequest\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment PullRequest on PullRequest {\n  id\n  title\n  number\n  merged\n  closed\n  isDraft\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  url\n}\n",
  "34cdf5bf565aa0ae5c8265e6519b0a83": "query HeaderMenuTestQuery {\n  node(id: \"issue1\") {\n    __typename\n    ...HeaderMenu\n    id\n  }\n}\n\nfragment HeaderMenu on Issue {\n  id\n  viewerCanUpdateNext\n  repository {\n    id\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    isArchived\n  }\n  url\n}\n",
  "3535ac81b0a0cde41584253cd9f59d9b": "mutation unpinIssueMutation(\n  $input: UnpinIssueInput!\n) {\n  unpinIssue(input: $input) {\n    id\n    issue {\n      isPinned\n      repository {\n        pinnedIssues(first: 3) {\n          totalCount\n        }\n        id\n      }\n      id\n    }\n  }\n}\n",
  "3540e22e0734e5b5396b1425c5d8d30f": "query DevelopmentSectionTestQuery(\n  $owner: String!\n  $repo: String!\n  $number: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $number) {\n      ...DevelopmentSectionFragment\n      id\n    }\n    id\n  }\n}\n\nfragment BranchPickerRef on Ref {\n  name\n  id\n  __typename\n  target {\n    oid\n    id\n    __typename\n  }\n  repository {\n    id\n    nameWithOwner\n    defaultBranchRef {\n      name\n      id\n      target {\n        oid\n        id\n        __typename\n      }\n      associatedPullRequests {\n        totalCount\n      }\n      repository {\n        id\n      }\n    }\n  }\n  associatedPullRequests {\n    totalCount\n  }\n}\n\nfragment DevelopmentSectionFragment on Issue {\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  id\n  title\n  number\n  linkedBranches(first: 25) {\n    nodes {\n      id\n      ref {\n        ...BranchPickerRef\n        id\n      }\n    }\n  }\n  closedByPullRequestsReferences(first: 10, includeClosedPrs: true) {\n    nodes {\n      ...PullRequestPickerPullRequest\n      id\n    }\n  }\n  ...LinkedPullRequests\n  viewerCanUpdateNext\n}\n\nfragment LinkedPullRequest on PullRequest {\n  url\n  number\n  state\n  isDraft\n  repository {\n    name\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment LinkedPullRequests on Issue {\n  repository {\n    nameWithOwner\n    id\n  }\n  linkedPullRequests: closedByPullRequestsReferences(first: 10, includeClosedPrs: false, orderByState: true) {\n    nodes {\n      repository {\n        nameWithOwner\n        id\n      }\n      state\n      isDraft\n      ...LinkedPullRequest\n      id\n    }\n  }\n}\n\nfragment PullRequestPickerPullRequest on PullRequest {\n  id\n  __typename\n  url\n  number\n  title\n  state\n  isDraft\n  isInMergeQueue\n  createdAt\n  repository {\n    id\n    name\n    nameWithOwner\n    owner {\n      login\n      __typename\n      id\n    }\n  }\n}\n",
  "3593fb15d2d2c8ddef6f0de16955708c": "query ListItemsSearchRootQuery(\n  $query: String = \"state:open archived:false assignee:@me sort:updated-desc\"\n  $first: Int = 25\n  $labelPageSize: Int = 20\n  $skip: Int = null\n) {\n  ...ListItemsPaginated_results_48pks9\n}\n\nfragment IssueItem_WbnLh on Issue {\n  id\n  __typename\n  title\n  titleHtml: titleHTML\n  ...IssuePullRequestTitle_WbnLh\n  ...IssuePullRequestDescription\n  ...IssuePullRequestStateIcon\n  ...IssueTypeIndicator\n}\n\nfragment IssuePullRequestDescription on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    createdAt\n    updatedAt\n    author {\n      __typename\n      login\n      avatarUrl\n      id\n    }\n    number\n    ...MilestoneMetadata\n  }\n  ... on PullRequest {\n    createdAt\n    updatedAt\n    author {\n      __typename\n      login\n      avatarUrl\n      id\n    }\n    number\n    ...MilestoneMetadata\n    reviewDecision\n  }\n}\n\nfragment IssuePullRequestStateIcon on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  __typename\n  ... on Issue {\n    state\n    stateReason\n  }\n  ... on PullRequest {\n    isDraft\n    isInMergeQueue\n    pullRequestState: state\n  }\n}\n\nfragment IssuePullRequestTitle_WbnLh on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  __typename\n  ... on Issue {\n    number\n    labels(first: $labelPageSize, orderBy: {field: NAME, direction: ASC}) {\n      nodes {\n        ...Label\n        name\n        id\n      }\n    }\n  }\n  ... on PullRequest {\n    number\n    labels(first: $labelPageSize, orderBy: {field: NAME, direction: ASC}) {\n      nodes {\n        ...Label\n        name\n        id\n      }\n    }\n  }\n}\n\nfragment IssueRow_bj3h3 on Issue {\n  ...IssueItem_WbnLh\n  number\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment IssueTypeIndicator on Issue {\n  issueType {\n    id\n    name\n    color\n  }\n}\n\nfragment Label on Label {\n  id\n  nameHTML\n  color\n  name\n  description\n}\n\nfragment ListItemsPaginated_results_48pks9 on Query {\n  search(first: $first, query: $query, type: ISSUE, skip: $skip) @defer(label: \"Issue_searchResults\") {\n    edges {\n      node {\n        __typename\n        ... on Issue {\n          id\n          __typename\n          number\n          ...IssueRow_bj3h3\n        }\n        ... on PullRequest {\n          id\n          __typename\n          number\n          ...PullRequestRow_pullRequest_WbnLh\n        }\n        ... on Node {\n          __isNode: __typename\n          id\n        }\n      }\n      cursor\n    }\n    pageInfo {\n      startCursor\n      endCursor\n      hasPreviousPage\n      hasNextPage\n    }\n    issueCount\n  }\n}\n\nfragment MilestoneMetadata on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    milestone {\n      title\n      url\n      id\n    }\n  }\n  ... on PullRequest {\n    milestone {\n      title\n      url\n      id\n    }\n  }\n}\n\nfragment PullRequestItem_WbnLh on PullRequest {\n  id\n  __typename\n  headCommit {\n    commit {\n      id\n      statusCheckRollup {\n        state\n        contexts {\n          checkRunCount\n          checkRunCountsByState {\n            count\n            state\n          }\n        }\n        id\n      }\n    }\n    id\n  }\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  title\n  titleHTML\n  ...IssuePullRequestTitle_WbnLh\n  ...IssuePullRequestDescription\n  ...IssuePullRequestStateIcon\n}\n\nfragment PullRequestRow_pullRequest_WbnLh on PullRequest {\n  __typename\n  id\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...PullRequestItem_WbnLh\n  headCommit {\n    commit {\n      id\n    }\n    id\n  }\n  number\n}\n",
  "35f17c0422d18883f8a71b5134914baf": "query ReferencedEventTestQuery {\n  node(id: \"node-id\") {\n    __typename\n    ... on ReferencedEvent {\n      ...ReferencedEvent\n    }\n    id\n  }\n}\n\nfragment EventActor on Actor {\n  __isActor: __typename\n  avatarUrl(size: 64)\n  login\n  __typename\n}\n\nfragment ReferencedEvent on ReferencedEvent {\n  databaseId\n  willCloseSubject\n  subject {\n    __typename\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  commit {\n    ...ReferencedEventInner\n    id\n  }\n  createdAt\n}\n\nfragment ReferencedEventInner on Commit {\n  message\n  messageHeadlineHTML\n  messageBodyHTML\n  url\n  abbreviatedOid\n  signature {\n    __typename\n    signer {\n      login\n      avatarUrl\n      id\n    }\n    state\n    wasSignedByGitHub\n    ... on SmimeSignature {\n      issuer {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n      subject {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n    }\n    ... on GpgSignature {\n      keyId\n    }\n    ... on SshSignature {\n      keyFingerprint\n    }\n  }\n  verificationStatus\n  hasSignature\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    defaultBranch\n    id\n  }\n}\n\nfragment TimelineRowEventActor on Actor {\n  __isActor: __typename\n  ...EventActor\n}\n",
  "36f081aca17a60db9817d04a2dd6aad5": "query RepositoryPickerSearchRepositoriesQuery(\n  $searchQuery: String!\n  $after: String\n) {\n  search(query: $searchQuery, type: REPOSITORY, first: 10, after: $after) {\n    repositoryCount\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    nodes {\n      __typename\n      ... on Repository {\n        ...RepositoryPickerRepository\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n}\n\nfragment RepositoryPickerRepository on Repository {\n  id\n  databaseId\n  name\n  nameWithOwner\n  owner {\n    __typename\n    databaseId\n    login\n    avatarUrl(size: 64)\n    id\n  }\n  isPrivate\n  isArchived\n  isInOrganization\n  hasIssuesEnabled\n  slashCommandsEnabled\n  viewerCanPush\n  viewerIssueCreationPermissions {\n    labelable\n    milestoneable\n    assignable\n    triageable\n    typeable\n  }\n  securityPolicyUrl\n  contributingFileUrl\n  codeOfConductFileUrl\n  shortDescriptionHTML\n  planFeatures {\n    maximumAssignees\n  }\n}\n",
  "3721e9b46efc77229a96a627a369197a": "query PinnedIssuesTestQuery {\n  node(id: \"pinnedIssue\") {\n    __typename\n    ... on Repository {\n      ...PinnedIssues\n    }\n    id\n  }\n}\n\nfragment PinnedIssueIssue on Issue {\n  id\n  title\n  titleHTML\n  url\n  createdAt\n  state\n  stateReason\n  number\n  author {\n    __typename\n    login\n    url\n    id\n  }\n  totalCommentsCount\n  repository {\n    viewerCanPinIssues\n    id\n  }\n}\n\nfragment PinnedIssues on Repository {\n  id\n  pinnedIssues(first: 3) {\n    nodes {\n      id\n      issue {\n        id\n        title\n        ...PinnedIssueIssue\n      }\n    }\n    totalCount\n  }\n  viewerCanPinIssues\n}\n",
  "37ceafd3e95729dff4444d16159e979b": "query IssueDashboardCustomViewPageQuery(\n  $query: String = \"state:open archived:false assignee:@me sort:updated-desc\"\n  $first: Int = 25\n  $labelPageSize: Int = 20\n  $skip: Int = null\n) {\n  ...ListQuery_48pks9\n}\n\nfragment IssueItem_WbnLh on Issue {\n  id\n  __typename\n  title\n  titleHtml: titleHTML\n  ...IssuePullRequestTitle_WbnLh\n  ...IssuePullRequestDescription\n  ...IssuePullRequestStateIcon\n  ...IssueTypeIndicator\n}\n\nfragment IssuePullRequestDescription on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    createdAt\n    updatedAt\n    author {\n      __typename\n      login\n      avatarUrl\n      id\n    }\n    number\n    ...MilestoneMetadata\n  }\n  ... on PullRequest {\n    createdAt\n    updatedAt\n    author {\n      __typename\n      login\n      avatarUrl\n      id\n    }\n    number\n    ...MilestoneMetadata\n    reviewDecision\n  }\n}\n\nfragment IssuePullRequestStateIcon on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  __typename\n  ... on Issue {\n    state\n    stateReason\n  }\n  ... on PullRequest {\n    isDraft\n    isInMergeQueue\n    pullRequestState: state\n  }\n}\n\nfragment IssuePullRequestTitle_WbnLh on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  __typename\n  ... on Issue {\n    number\n    labels(first: $labelPageSize, orderBy: {field: NAME, direction: ASC}) {\n      nodes {\n        ...Label\n        name\n        id\n      }\n    }\n  }\n  ... on PullRequest {\n    number\n    labels(first: $labelPageSize, orderBy: {field: NAME, direction: ASC}) {\n      nodes {\n        ...Label\n        name\n        id\n      }\n    }\n  }\n}\n\nfragment IssueRow_bj3h3 on Issue {\n  ...IssueItem_WbnLh\n  number\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment IssueTypeIndicator on Issue {\n  issueType {\n    id\n    name\n    color\n  }\n}\n\nfragment Label on Label {\n  id\n  nameHTML\n  color\n  name\n  description\n}\n\nfragment ListItemsPaginated_results_48pks9 on Query {\n  search(first: $first, query: $query, type: ISSUE, skip: $skip) @defer(label: \"Issue_searchResults\") {\n    edges {\n      node {\n        __typename\n        ... on Issue {\n          id\n          __typename\n          number\n          ...IssueRow_bj3h3\n        }\n        ... on PullRequest {\n          id\n          __typename\n          number\n          ...PullRequestRow_pullRequest_WbnLh\n        }\n        ... on Node {\n          __isNode: __typename\n          id\n        }\n      }\n      cursor\n    }\n    pageInfo {\n      startCursor\n      endCursor\n      hasPreviousPage\n      hasNextPage\n    }\n    issueCount\n  }\n}\n\nfragment ListQuery_48pks9 on Query {\n  ...SearchRootFragment_48pks9\n}\n\nfragment MilestoneMetadata on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    milestone {\n      title\n      url\n      id\n    }\n  }\n  ... on PullRequest {\n    milestone {\n      title\n      url\n      id\n    }\n  }\n}\n\nfragment PullRequestItem_WbnLh on PullRequest {\n  id\n  __typename\n  headCommit {\n    commit {\n      id\n      statusCheckRollup {\n        state\n        contexts {\n          checkRunCount\n          checkRunCountsByState {\n            count\n            state\n          }\n        }\n        id\n      }\n    }\n    id\n  }\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  title\n  titleHTML\n  ...IssuePullRequestTitle_WbnLh\n  ...IssuePullRequestDescription\n  ...IssuePullRequestStateIcon\n}\n\nfragment PullRequestRow_pullRequest_WbnLh on PullRequest {\n  __typename\n  id\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...PullRequestItem_WbnLh\n  headCommit {\n    commit {\n      id\n    }\n    id\n  }\n  number\n}\n\nfragment SearchList_48pks9 on Query {\n  ...ListItemsPaginated_results_48pks9\n}\n\nfragment SearchRootFragment_48pks9 on Query {\n  ...SearchList_48pks9\n}\n",
  "38ba86385646ef00c698a2adcd865bd3": "query RelationshipsSectionQuery(\n  $owner: String!\n  $repo: String!\n  $number: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $number) {\n      ...RelationshipsSectionFragment\n      id\n    }\n    id\n  }\n}\n\nfragment ParentIssueFragment on Issue {\n  id\n  title\n  url\n  number\n  repository {\n    nameWithOwner\n    id\n  }\n  state\n  stateReason\n  ...SubIssuesSummary\n}\n\nfragment RelationshipsSectionFragment on Issue {\n  id\n  repository {\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  parent {\n    id\n    ...ParentIssueFragment\n  }\n  ...useCanEditSubIssues\n}\n\nfragment SubIssuesSummary on Issue {\n  url\n  ...useSubIssuesSummary_4FLmrJ\n}\n\nfragment useCanEditSubIssues on Issue {\n  viewerCanUpdateMetadata\n  repository {\n    isArchived\n    id\n  }\n}\n\nfragment useSubIssuesSummary_4FLmrJ on Issue {\n  subIssuesSummary {\n    completed\n  }\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n}\n",
  "38cdebb1a1bd1bdf6098d3d08e09844d": "query ProjectsSectionStoriesTestQuery(\n  $id: ID!\n) {\n  issue: node(id: $id) {\n    __typename\n    ...ProjectsSectionFragment\n    id\n  }\n}\n\nfragment ClassicProjectItem on ProjectCard {\n  project {\n    name\n    url\n    ...SingleSelectColumnProject\n    id\n  }\n  column {\n    ...SingleSelectColumn\n    id\n  }\n}\n\nfragment ProjectItemSection on ProjectV2Item {\n  id\n  isArchived\n  project {\n    id\n  }\n  ...ProjectItemSectionView\n}\n\nfragment ProjectItemSectionView on ProjectV2Item {\n  id\n  isArchived\n  project {\n    id\n    title\n    template\n    viewerCanUpdate\n    url\n    field(name: \"Status\") {\n      __typename\n      ...SingleSelectFieldConfigFragment\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n  fieldValueByName(name: \"Status\") {\n    __typename\n    ...SingleSelectFieldFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ProjectPickerClassicProject on Project {\n  id\n  title: name\n  closed\n  number\n  url\n  viewerCanUpdate\n  columns(first: 10) {\n    nodes {\n      id\n      name\n    }\n  }\n  __typename\n}\n\nfragment ProjectPickerProject on ProjectV2 {\n  id\n  title\n  closed\n  number\n  url\n  viewerCanUpdate\n  __typename\n}\n\nfragment ProjectsSectionFragment on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    number\n    repository {\n      name\n      owner {\n        __typename\n        login\n        id\n      }\n      isArchived\n      id\n    }\n    id\n    projectItemsNext(first: 10) {\n      edges {\n        node {\n          id\n          ...ProjectItemSection\n          project {\n            ...ProjectPickerProject\n            closed\n            title\n            id\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    projectCards(first: 10) {\n      edges {\n        node {\n          id\n          ...ClassicProjectItem\n          project {\n            id\n            closed\n            ...ProjectPickerClassicProject\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    viewerCanUpdateMetadata\n  }\n  ... on PullRequest {\n    number\n    repository {\n      name\n      owner {\n        __typename\n        login\n        id\n      }\n      isArchived\n      id\n    }\n    id\n    projectItemsNext(first: 10) {\n      edges {\n        node {\n          id\n          ...ProjectItemSection\n          project {\n            closed\n            ...ProjectPickerProject\n            title\n            id\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    projectCards(first: 10) {\n      edges {\n        node {\n          id\n          ...ClassicProjectItem\n          project {\n            id\n            closed\n            ...ProjectPickerClassicProject\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    viewerCanUpdate\n  }\n}\n\nfragment SingleSelectColumn on ProjectColumn {\n  id\n  name\n}\n\nfragment SingleSelectColumnProject on Project {\n  id\n  name\n  columns(first: 10) {\n    nodes {\n      ...SingleSelectColumn\n      id\n    }\n  }\n}\n\nfragment SingleSelectFieldConfigFragment on ProjectV2SingleSelectField {\n  id\n  name\n  options {\n    ...SingleSelectFieldOptionFragment\n    id\n    name\n    description\n    color\n  }\n}\n\nfragment SingleSelectFieldFragment on ProjectV2ItemFieldSingleSelectValue {\n  id\n  optionId\n  name\n  nameHTML\n  color\n}\n\nfragment SingleSelectFieldOptionFragment on ProjectV2SingleSelectFieldOption {\n  id\n  optionId\n  name\n  nameHTML\n  color\n  descriptionHTML\n}\n",
  "38fa9f63b6217ff4c44708911b395768": "query ProjectItemSectionFieldListQuery(\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ... on ProjectV2Item {\n      project {\n        viewerCanUpdate\n        url\n        id\n      }\n      ...ProjectItemSectionFields\n    }\n    id\n  }\n}\n\nfragment DateFieldConfigFragment on ProjectV2Field {\n  id\n  name\n}\n\nfragment DateFieldFragment on ProjectV2ItemFieldDateValue {\n  id\n  date\n  field {\n    __typename\n    ...DateFieldConfigFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment IterationFieldConfigFragment on ProjectV2IterationField {\n  id\n  name\n  configuration {\n    iterations {\n      ...IterationFieldIterationFragment\n    }\n    completedIterations {\n      ...IterationFieldIterationFragment\n    }\n  }\n}\n\nfragment IterationFieldFragment on ProjectV2ItemFieldIterationValue {\n  iterationId\n  title\n  titleHTML\n  startDate\n  duration\n  field {\n    __typename\n    ...IterationFieldConfigFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment IterationFieldIterationFragment on ProjectV2IterationFieldIteration {\n  id\n  title\n  titleHTML\n  startDate\n  duration\n}\n\nfragment NumberFieldConfigFragment on ProjectV2Field {\n  id\n  name\n}\n\nfragment NumberFieldFragment on ProjectV2ItemFieldNumberValue {\n  id\n  number\n  field {\n    __typename\n    ...NumberFieldConfigFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ProjectItemSectionFields on ProjectV2Item {\n  id\n  isArchived\n  project {\n    id\n    title\n    url\n    viewerCanUpdate\n    fields(first: 50, orderBy: {field: POSITION, direction: ASC}) {\n      edges {\n        node {\n          __typename\n          ... on ProjectV2Field {\n            id\n            dataType\n            name\n            ...TextFieldConfigFragment\n            ...DateFieldConfigFragment\n            ...NumberFieldConfigFragment\n          }\n          ... on ProjectV2IterationField {\n            id\n            dataType\n            name\n            ...IterationFieldConfigFragment\n          }\n          ... on ProjectV2SingleSelectField {\n            id\n            dataType\n            name\n            ...SingleSelectFieldConfigFragment\n          }\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n      }\n    }\n  }\n  ...ProjectItemSectionFieldsValues\n}\n\nfragment ProjectItemSectionFieldsValues on ProjectV2Item {\n  fieldValues(first: 50, orderBy: {field: POSITION, direction: ASC}) {\n    edges {\n      node {\n        __typename\n        ... on ProjectV2ItemFieldTextValue {\n          id\n          field {\n            __typename\n            ... on ProjectV2Field {\n              id\n            }\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n        ...TextFieldFragment\n        ... on ProjectV2ItemFieldNumberValue {\n          id\n          field {\n            __typename\n            ... on ProjectV2Field {\n              id\n            }\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n        ...NumberFieldFragment\n        ... on ProjectV2ItemFieldDateValue {\n          id\n          field {\n            __typename\n            ... on ProjectV2Field {\n              id\n            }\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n        ...DateFieldFragment\n        ... on ProjectV2ItemFieldSingleSelectValue {\n          id\n          field {\n            __typename\n            ... on ProjectV2SingleSelectField {\n              id\n            }\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n        ...SingleSelectFieldFragment\n        ... on ProjectV2ItemFieldIterationValue {\n          id\n          field {\n            __typename\n            ... on ProjectV2IterationField {\n              id\n            }\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n        ...IterationFieldFragment\n        ... on Node {\n          __isNode: __typename\n          id\n        }\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment SingleSelectFieldConfigFragment on ProjectV2SingleSelectField {\n  id\n  name\n  options {\n    ...SingleSelectFieldOptionFragment\n    id\n    name\n    description\n    color\n  }\n}\n\nfragment SingleSelectFieldFragment on ProjectV2ItemFieldSingleSelectValue {\n  id\n  optionId\n  name\n  nameHTML\n  color\n}\n\nfragment SingleSelectFieldOptionFragment on ProjectV2SingleSelectFieldOption {\n  id\n  optionId\n  name\n  nameHTML\n  color\n  descriptionHTML\n}\n\nfragment TextFieldConfigFragment on ProjectV2Field {\n  id\n  name\n}\n\nfragment TextFieldFragment on ProjectV2ItemFieldTextValue {\n  id\n  text\n  field {\n    __typename\n    ...TextFieldConfigFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n",
  "394a15c6be9f05612439d8da8fe23cc7": "query LinkedPullRequestsTestQuery {\n  repository(owner: \"owner\", name: \"repo\") {\n    issue(number: 33) {\n      ...LinkedPullRequests\n      id\n    }\n    id\n  }\n}\n\nfragment LinkedPullRequest on PullRequest {\n  url\n  number\n  state\n  isDraft\n  repository {\n    name\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment LinkedPullRequests on Issue {\n  repository {\n    nameWithOwner\n    id\n  }\n  linkedPullRequests: closedByPullRequestsReferences(first: 10, includeClosedPrs: false, orderByState: true) {\n    nodes {\n      repository {\n        nameWithOwner\n        id\n      }\n      state\n      isDraft\n      ...LinkedPullRequest\n      id\n    }\n  }\n}\n",
  "3b791b9ecc82b8b37c5e4b8a0cc96abd": "query HighlightedTimelineQuery(\n  $id: ID!\n  $focusText: String!\n  $after: String\n  $before: String\n  $first: Int!\n  $last: Int\n) {\n  node(id: $id) {\n    __typename\n    ... on Issue {\n      ...HighlightedTimelineBackwardPaginated_Le289\n      timelineCounts: timelineItems(first: 1, focusText: $focusText, visibleEventsOnly: true) {\n        afterFocusCount\n        beforeFocusCount\n      }\n    }\n    id\n  }\n}\n\nfragment AddedToProjectEvent on AddedToProjectEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  projectColumnName\n  databaseId\n}\n\nfragment AddedToProjectV2Event on AddedToProjectV2Event {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n}\n\nfragment AssignedEvent on AssignedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    login\n    id\n  }\n  assignee {\n    __typename\n    ... on User {\n      login\n    }\n    ... on Mannequin {\n      login\n    }\n    ... on Organization {\n      login\n    }\n    ... on Bot {\n      login\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ClosedEvent on ClosedEvent {\n  databaseId\n  createdAt\n  stateReason\n  closingProjectItemStatus\n  closer {\n    __typename\n    ... on ProjectV2 {\n      url\n      title\n    }\n    ... on PullRequest {\n      url\n      number\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Commit {\n      url\n      abbreviatedOid\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment CommentDeletedEvent on CommentDeletedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  deletedCommentAuthor {\n    __typename\n    login\n    id\n  }\n}\n\nfragment ConnectedEvent on ConnectedEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  subject {\n    __typename\n    ... on PullRequest {\n      title\n      url\n      number\n      state\n      isDraft\n      isInMergeQueue\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ConvertedFromDraftEvent on ConvertedFromDraftEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  databaseId\n}\n\nfragment ConvertedNoteToIssueEvent on ConvertedNoteToIssueEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  project {\n    url\n    name\n    id\n  }\n}\n\nfragment ConvertedToDiscussionEvent on ConvertedToDiscussionEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  discussion {\n    url\n    number\n    id\n  }\n}\n\nfragment CrossReferencedEvent on CrossReferencedEvent {\n  referencedAt\n  willCloseTarget\n  databaseId\n  target {\n    __typename\n    ... on Issue {\n      repository {\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  innerSource: source {\n    __typename\n    ...CrossReferencedEventInner\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment CrossReferencedEventInner on ReferencedSubject {\n  __isReferencedSubject: __typename\n  __typename\n  ... on Issue {\n    id\n    issueTitleHTML: titleHTML\n    url\n    number\n    stateReason\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n  ... on PullRequest {\n    id\n    pullTitleHTML: titleHTML\n    url\n    number\n    state\n    isDraft\n    isInMergeQueue\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n}\n\nfragment DemilestonedEvent on DemilestonedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  milestoneTitle\n  milestone {\n    url\n    id\n  }\n}\n\nfragment DisconnectedEvent on DisconnectedEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  subject {\n    __typename\n    ... on PullRequest {\n      title\n      url\n      number\n      state\n      isDraft\n      isInMergeQueue\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment EventActor on Actor {\n  __isActor: __typename\n  avatarUrl(size: 64)\n  login\n  __typename\n}\n\nfragment HighlightedTimelineBackwardPaginated_Le289 on Issue {\n  timelineItems(first: $first, after: $after, before: $before, last: $last, focusText: $focusText, visibleEventsOnly: true) {\n    edges {\n      node {\n        __typename\n        ... on Node {\n          __isNode: __typename\n          id\n        }\n      }\n      cursor\n    }\n    ...TimelineItemsPaginated\n    pageInfo {\n      endCursor\n      hasNextPage\n      hasPreviousPage\n      startCursor\n    }\n  }\n  id\n  url\n}\n\nfragment IssueCommentEditorBodyFragment on IssueComment {\n  id\n  body\n  bodyVersion\n  author {\n    __typename\n    login\n    avatarUrl\n    id\n  }\n  issue {\n    author {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...IssueCommentHeader\n}\n\nfragment IssueCommentEditor_repository on IssueComment {\n  repository {\n    slashCommandsEnabled\n    nameWithOwner\n    databaseId\n    id\n  }\n}\n\nfragment IssueCommentHeader on IssueComment {\n  id\n  databaseId\n  url\n  createdAt\n  body\n  authorAssociation\n  viewerCanUpdate\n  viewerCanDelete\n  viewerCanMinimize\n  viewerCanReport\n  viewerCanReportToMaintainer\n  viewerCanBlockFromOrg\n  viewerCanUnblockFromOrg\n  isHidden: isMinimized\n  minimizedReason\n  createdViaEmail\n  viewerDidAuthor\n  authorToRepoOwnerSponsorship {\n    createdAt\n    isActive\n    id\n  }\n  author {\n    __typename\n    id\n    login\n  }\n  repository {\n    id\n    name\n    owner {\n      __typename\n      id\n      login\n      url\n    }\n    isPrivate\n  }\n  issue {\n    number\n    id\n  }\n  ...MarkdownEditHistoryViewer_comment\n}\n\nfragment IssueCommentViewerCommentRow on IssueComment {\n  id\n  databaseId\n  ...IssueCommentViewerMarkdownViewer\n  ...IssueCommentHeader\n  author {\n    avatarUrl\n    login\n    __typename\n    id\n  }\n  issue {\n    id\n    locked\n  }\n  body\n  isHidden: isMinimized\n  viewerCanUpdate\n}\n\nfragment IssueCommentViewerMarkdownViewer on IssueComment {\n  id\n  body\n  bodyHTML(unfurlReferences: true)\n  bodyVersion\n  viewerCanUpdate\n}\n\nfragment IssueCommentViewerReactable on Reactable {\n  __isReactable: __typename\n  ...ReactionViewerGroups\n}\n\nfragment IssueComment_issueComment on IssueComment {\n  ...IssueCommentViewerCommentRow\n  ...IssueCommentViewerReactable\n  ...IssueCommentEditor_repository\n  ...IssueCommentEditorBodyFragment\n  issue {\n    id\n  }\n  id\n}\n\nfragment LabelData on Label {\n  nameHTML\n  name\n  color\n  id\n  description\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment LabeledEvent on LabeledEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  label {\n    ...LabelData\n    id\n  }\n}\n\nfragment LockedEvent on LockedEvent {\n  databaseId\n  createdAt\n  lockReason\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment MarkdownEditHistoryViewer_comment on Comment {\n  __isComment: __typename\n  id\n  viewerCanReadUserContentEdits\n  lastEditedAt\n  lastUserContentEdit {\n    editor {\n      __typename\n      url\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment MarkedAsDuplicateEvent on MarkedAsDuplicateEvent {\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  canonical {\n    __typename\n    ... on Issue {\n      url\n      number\n      id\n    }\n    ... on PullRequest {\n      url\n      number\n      id\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  databaseId\n  viewerCanUndo\n  id\n}\n\nfragment MentionedEvent on MentionedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment MilestonedEvent on MilestonedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  milestoneTitle\n  milestone {\n    url\n    id\n  }\n}\n\nfragment MovedColumnsInProjectEvent on MovedColumnsInProjectEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  previousProjectColumnName\n  projectColumnName\n}\n\nfragment PinnedEvent on PinnedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment ProjectV2ItemStatusChangedEvent on ProjectV2ItemStatusChangedEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n  previousStatus\n  status\n}\n\nfragment ReactionButton_Reaction on ReactionGroup {\n  content\n  reactors(first: 5) {\n    nodes {\n      __typename\n      ... on User {\n        login\n        __typename\n      }\n      ... on Bot {\n        login\n        __typename\n      }\n      ... on Organization {\n        login\n        __typename\n      }\n      ... on Mannequin {\n        login\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n    totalCount\n  }\n  viewerHasReacted\n}\n\nfragment ReactionViewerGroups on Reactable {\n  __isReactable: __typename\n  reactionGroups {\n    ...ReactionButton_Reaction\n    ...ReactionsMenuItem_Reaction\n  }\n}\n\nfragment ReactionsMenuItem_Reaction on ReactionGroup {\n  content\n  viewerHasReacted\n}\n\nfragment ReferencedEvent on ReferencedEvent {\n  databaseId\n  willCloseSubject\n  subject {\n    __typename\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  commit {\n    ...ReferencedEventInner\n    id\n  }\n  createdAt\n}\n\nfragment ReferencedEventInner on Commit {\n  message\n  messageHeadlineHTML\n  messageBodyHTML\n  url\n  abbreviatedOid\n  signature {\n    __typename\n    signer {\n      login\n      avatarUrl\n      id\n    }\n    state\n    wasSignedByGitHub\n    ... on SmimeSignature {\n      issuer {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n      subject {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n    }\n    ... on GpgSignature {\n      keyId\n    }\n    ... on SshSignature {\n      keyFingerprint\n    }\n  }\n  verificationStatus\n  hasSignature\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    defaultBranch\n    id\n  }\n}\n\nfragment RemovedFromProjectEvent on RemovedFromProjectEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  projectColumnName\n}\n\nfragment RemovedFromProjectV2Event on RemovedFromProjectV2Event {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n}\n\nfragment RenamedTitleEvent on RenamedTitleEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  currentTitle\n  previousTitle\n}\n\nfragment ReopenedEvent on ReopenedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment SubscribedEvent on SubscribedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment TimelineItemsPaginated on IssueTimelineItemsConnection {\n  edges {\n    node {\n      ... on IssueComment {\n        databaseId\n        viewerDidAuthor\n        issue {\n          author {\n            __typename\n            login\n            id\n          }\n          id\n        }\n      }\n      ... on ReferencedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on CrossReferencedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        source {\n          __typename\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n        willCloseTarget\n      }\n      ... on MentionedEvent {\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on LabeledEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        label {\n          id\n        }\n      }\n      ... on UnlabeledEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        label {\n          id\n        }\n      }\n      ... on AssignedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        assignee {\n          __typename\n          ... on User {\n            id\n          }\n          ... on Bot {\n            id\n          }\n          ... on Mannequin {\n            id\n          }\n          ... on Organization {\n            id\n          }\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n      }\n      ... on UnassignedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        assignee {\n          __typename\n          ... on User {\n            id\n          }\n          ... on Bot {\n            id\n          }\n          ... on Mannequin {\n            id\n          }\n          ... on Organization {\n            id\n          }\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n      }\n      ... on AddedToProjectV2Event {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on RemovedFromProjectV2Event {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      __typename\n      ...IssueComment_issueComment\n      ...AddedToProjectEvent\n      ...MovedColumnsInProjectEvent\n      ...RemovedFromProjectEvent\n      ...SubscribedEvent\n      ...UnsubscribedEvent\n      ...MentionedEvent\n      ...ClosedEvent\n      ...ReopenedEvent\n      ...LockedEvent\n      ...UnlockedEvent\n      ...PinnedEvent\n      ...UnpinnedEvent\n      ...LabeledEvent\n      ...RenamedTitleEvent\n      ...UnlabeledEvent\n      ...UnassignedEvent\n      ...AssignedEvent\n      ...CommentDeletedEvent\n      ...UserBlockedEvent\n      ...MilestonedEvent\n      ...DemilestonedEvent\n      ...CrossReferencedEvent\n      ...ReferencedEvent\n      ...ConnectedEvent\n      ...TransferredEvent\n      ...ConvertedNoteToIssueEvent\n      ...DisconnectedEvent\n      ...MarkedAsDuplicateEvent\n      ...UnmarkedAsDuplicateEvent\n      ...ConvertedToDiscussionEvent\n      ...AddedToProjectV2Event\n      ...RemovedFromProjectV2Event\n      ...ProjectV2ItemStatusChangedEvent\n      ...ConvertedFromDraftEvent\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n}\n\nfragment TimelineRowEventActor on Actor {\n  __isActor: __typename\n  ...EventActor\n}\n\nfragment TransferredEvent on TransferredEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  fromRepository {\n    nameWithOwner\n    url\n    id\n  }\n}\n\nfragment UnassignedEvent on UnassignedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    login\n    ...TimelineRowEventActor\n    id\n  }\n  assignee {\n    __typename\n    ... on User {\n      login\n    }\n    ... on Mannequin {\n      login\n    }\n    ... on Organization {\n      login\n    }\n    ... on Bot {\n      login\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment UnlabeledEvent on UnlabeledEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  label {\n    ...LabelData\n    id\n  }\n}\n\nfragment UnlockedEvent on UnlockedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UnmarkedAsDuplicateEvent on UnmarkedAsDuplicateEvent {\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  canonical {\n    __typename\n    ... on Issue {\n      url\n      number\n    }\n    ... on PullRequest {\n      url\n      number\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  databaseId\n}\n\nfragment UnpinnedEvent on UnpinnedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UnsubscribedEvent on UnsubscribedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UserBlockedEvent on UserBlockedEvent {\n  databaseId\n  createdAt\n  blockDuration\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  blockedUser: subject {\n    login\n    id\n  }\n}\n",
  "3bf56b3bceb26a3a975141697beef192": "mutation addReactionMutation(\n  $input: AddReactionInput!\n) {\n  addReaction(input: $input) {\n    subject {\n      __typename\n      reactionGroups {\n        ...ReactionButton_Reaction\n      }\n      id\n    }\n  }\n}\n\nfragment ReactionButton_Reaction on ReactionGroup {\n  content\n  reactors(first: 5) {\n    nodes {\n      __typename\n      ... on User {\n        login\n        __typename\n      }\n      ... on Bot {\n        login\n        __typename\n      }\n      ... on Organization {\n        login\n        __typename\n      }\n      ... on Mannequin {\n        login\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n    totalCount\n  }\n  viewerHasReacted\n}\n",
  "3c6d599cd94524288970f71822990f05": "query HeaderIssueTypeTestQuery(\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ... on Issue {\n      ...HeaderIssueType\n    }\n    id\n  }\n}\n\nfragment HeaderIssueType on Issue {\n  repository {\n    nameWithOwner\n    id\n  }\n  issueType {\n    name\n    color\n    id\n  }\n}\n",
  "3ecabe14d69bf442bd9c57ac601ba64b": "query inboxOrgFilterProviderQuery(\n  $count: Int!\n) {\n  viewer {\n    organizations(first: $count) {\n      edges {\n        node {\n          name\n          login\n          avatarUrl\n          id\n        }\n      }\n    }\n    id\n  }\n}\n",
  "3ecbe7f989372dc737ac580a4a020b10": "query IssueEventWrapperQuery {\n  node(id: \"SSC_asdkasd\") {\n    __typename\n    ...IssueComment_issueComment\n    ...ReactionViewerGroups\n    ...AddedToProjectEvent\n    ...MovedColumnsInProjectEvent\n    ...RemovedFromProjectEvent\n    ...SubscribedEvent\n    ...UnsubscribedEvent\n    ...MentionedEvent\n    ...ClosedEvent\n    ...ReopenedEvent\n    ...LockedEvent\n    ...UnlockedEvent\n    ...PinnedEvent\n    ...UnpinnedEvent\n    ...LabeledEvent\n    ...RenamedTitleEvent\n    ...UnlabeledEvent\n    ...UnassignedEvent\n    ...AssignedEvent\n    ...CommentDeletedEvent\n    ...UserBlockedEvent\n    ...MilestonedEvent\n    ...DemilestonedEvent\n    ...CrossReferencedEvent\n    ...ReferencedEvent\n    ...ConnectedEvent\n    ...TransferredEvent\n    ...ConvertedNoteToIssueEvent\n    ...DisconnectedEvent\n    ...MarkedAsDuplicateEvent\n    ...UnmarkedAsDuplicateEvent\n    ...ConvertedToDiscussionEvent\n    ...AddedToProjectV2Event\n    ...RemovedFromProjectV2Event\n    ...ProjectV2ItemStatusChangedEvent\n    ...ConvertedFromDraftEvent\n    id\n  }\n}\n\nfragment AddedToProjectEvent on AddedToProjectEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  projectColumnName\n  databaseId\n}\n\nfragment AddedToProjectV2Event on AddedToProjectV2Event {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n}\n\nfragment AssignedEvent on AssignedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    login\n    id\n  }\n  assignee {\n    __typename\n    ... on User {\n      login\n    }\n    ... on Mannequin {\n      login\n    }\n    ... on Organization {\n      login\n    }\n    ... on Bot {\n      login\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ClosedEvent on ClosedEvent {\n  databaseId\n  createdAt\n  stateReason\n  closingProjectItemStatus\n  closer {\n    __typename\n    ... on ProjectV2 {\n      url\n      title\n    }\n    ... on PullRequest {\n      url\n      number\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Commit {\n      url\n      abbreviatedOid\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment CommentDeletedEvent on CommentDeletedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  deletedCommentAuthor {\n    __typename\n    login\n    id\n  }\n}\n\nfragment ConnectedEvent on ConnectedEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  subject {\n    __typename\n    ... on PullRequest {\n      title\n      url\n      number\n      state\n      isDraft\n      isInMergeQueue\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ConvertedFromDraftEvent on ConvertedFromDraftEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  databaseId\n}\n\nfragment ConvertedNoteToIssueEvent on ConvertedNoteToIssueEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  project {\n    url\n    name\n    id\n  }\n}\n\nfragment ConvertedToDiscussionEvent on ConvertedToDiscussionEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  discussion {\n    url\n    number\n    id\n  }\n}\n\nfragment CrossReferencedEvent on CrossReferencedEvent {\n  referencedAt\n  willCloseTarget\n  databaseId\n  target {\n    __typename\n    ... on Issue {\n      repository {\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  innerSource: source {\n    __typename\n    ...CrossReferencedEventInner\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment CrossReferencedEventInner on ReferencedSubject {\n  __isReferencedSubject: __typename\n  __typename\n  ... on Issue {\n    id\n    issueTitleHTML: titleHTML\n    url\n    number\n    stateReason\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n  ... on PullRequest {\n    id\n    pullTitleHTML: titleHTML\n    url\n    number\n    state\n    isDraft\n    isInMergeQueue\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n}\n\nfragment DemilestonedEvent on DemilestonedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  milestoneTitle\n  milestone {\n    url\n    id\n  }\n}\n\nfragment DisconnectedEvent on DisconnectedEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  subject {\n    __typename\n    ... on PullRequest {\n      title\n      url\n      number\n      state\n      isDraft\n      isInMergeQueue\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment EventActor on Actor {\n  __isActor: __typename\n  avatarUrl(size: 64)\n  login\n  __typename\n}\n\nfragment IssueCommentEditorBodyFragment on IssueComment {\n  id\n  body\n  bodyVersion\n  author {\n    __typename\n    login\n    avatarUrl\n    id\n  }\n  issue {\n    author {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...IssueCommentHeader\n}\n\nfragment IssueCommentEditor_repository on IssueComment {\n  repository {\n    slashCommandsEnabled\n    nameWithOwner\n    databaseId\n    id\n  }\n}\n\nfragment IssueCommentHeader on IssueComment {\n  id\n  databaseId\n  url\n  createdAt\n  body\n  authorAssociation\n  viewerCanUpdate\n  viewerCanDelete\n  viewerCanMinimize\n  viewerCanReport\n  viewerCanReportToMaintainer\n  viewerCanBlockFromOrg\n  viewerCanUnblockFromOrg\n  isHidden: isMinimized\n  minimizedReason\n  createdViaEmail\n  viewerDidAuthor\n  authorToRepoOwnerSponsorship {\n    createdAt\n    isActive\n    id\n  }\n  author {\n    __typename\n    id\n    login\n  }\n  repository {\n    id\n    name\n    owner {\n      __typename\n      id\n      login\n      url\n    }\n    isPrivate\n  }\n  issue {\n    number\n    id\n  }\n  ...MarkdownEditHistoryViewer_comment\n}\n\nfragment IssueCommentViewerCommentRow on IssueComment {\n  id\n  databaseId\n  ...IssueCommentViewerMarkdownViewer\n  ...IssueCommentHeader\n  author {\n    avatarUrl\n    login\n    __typename\n    id\n  }\n  issue {\n    id\n    locked\n  }\n  body\n  isHidden: isMinimized\n  viewerCanUpdate\n}\n\nfragment IssueCommentViewerMarkdownViewer on IssueComment {\n  id\n  body\n  bodyHTML(unfurlReferences: true)\n  bodyVersion\n  viewerCanUpdate\n}\n\nfragment IssueCommentViewerReactable on Reactable {\n  __isReactable: __typename\n  ...ReactionViewerGroups\n}\n\nfragment IssueComment_issueComment on IssueComment {\n  ...IssueCommentViewerCommentRow\n  ...IssueCommentViewerReactable\n  ...IssueCommentEditor_repository\n  ...IssueCommentEditorBodyFragment\n  issue {\n    id\n  }\n  id\n}\n\nfragment LabelData on Label {\n  nameHTML\n  name\n  color\n  id\n  description\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment LabeledEvent on LabeledEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  label {\n    ...LabelData\n    id\n  }\n}\n\nfragment LockedEvent on LockedEvent {\n  databaseId\n  createdAt\n  lockReason\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment MarkdownEditHistoryViewer_comment on Comment {\n  __isComment: __typename\n  id\n  viewerCanReadUserContentEdits\n  lastEditedAt\n  lastUserContentEdit {\n    editor {\n      __typename\n      url\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment MarkedAsDuplicateEvent on MarkedAsDuplicateEvent {\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  canonical {\n    __typename\n    ... on Issue {\n      url\n      number\n      id\n    }\n    ... on PullRequest {\n      url\n      number\n      id\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  databaseId\n  viewerCanUndo\n  id\n}\n\nfragment MentionedEvent on MentionedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment MilestonedEvent on MilestonedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  milestoneTitle\n  milestone {\n    url\n    id\n  }\n}\n\nfragment MovedColumnsInProjectEvent on MovedColumnsInProjectEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  previousProjectColumnName\n  projectColumnName\n}\n\nfragment PinnedEvent on PinnedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment ProjectV2ItemStatusChangedEvent on ProjectV2ItemStatusChangedEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n  previousStatus\n  status\n}\n\nfragment ReactionButton_Reaction on ReactionGroup {\n  content\n  reactors(first: 5) {\n    nodes {\n      __typename\n      ... on User {\n        login\n        __typename\n      }\n      ... on Bot {\n        login\n        __typename\n      }\n      ... on Organization {\n        login\n        __typename\n      }\n      ... on Mannequin {\n        login\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n    totalCount\n  }\n  viewerHasReacted\n}\n\nfragment ReactionViewerGroups on Reactable {\n  __isReactable: __typename\n  reactionGroups {\n    ...ReactionButton_Reaction\n    ...ReactionsMenuItem_Reaction\n  }\n}\n\nfragment ReactionsMenuItem_Reaction on ReactionGroup {\n  content\n  viewerHasReacted\n}\n\nfragment ReferencedEvent on ReferencedEvent {\n  databaseId\n  willCloseSubject\n  subject {\n    __typename\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  commit {\n    ...ReferencedEventInner\n    id\n  }\n  createdAt\n}\n\nfragment ReferencedEventInner on Commit {\n  message\n  messageHeadlineHTML\n  messageBodyHTML\n  url\n  abbreviatedOid\n  signature {\n    __typename\n    signer {\n      login\n      avatarUrl\n      id\n    }\n    state\n    wasSignedByGitHub\n    ... on SmimeSignature {\n      issuer {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n      subject {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n    }\n    ... on GpgSignature {\n      keyId\n    }\n    ... on SshSignature {\n      keyFingerprint\n    }\n  }\n  verificationStatus\n  hasSignature\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    defaultBranch\n    id\n  }\n}\n\nfragment RemovedFromProjectEvent on RemovedFromProjectEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  projectColumnName\n}\n\nfragment RemovedFromProjectV2Event on RemovedFromProjectV2Event {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n}\n\nfragment RenamedTitleEvent on RenamedTitleEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  currentTitle\n  previousTitle\n}\n\nfragment ReopenedEvent on ReopenedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment SubscribedEvent on SubscribedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment TimelineRowEventActor on Actor {\n  __isActor: __typename\n  ...EventActor\n}\n\nfragment TransferredEvent on TransferredEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  fromRepository {\n    nameWithOwner\n    url\n    id\n  }\n}\n\nfragment UnassignedEvent on UnassignedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    login\n    ...TimelineRowEventActor\n    id\n  }\n  assignee {\n    __typename\n    ... on User {\n      login\n    }\n    ... on Mannequin {\n      login\n    }\n    ... on Organization {\n      login\n    }\n    ... on Bot {\n      login\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment UnlabeledEvent on UnlabeledEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  label {\n    ...LabelData\n    id\n  }\n}\n\nfragment UnlockedEvent on UnlockedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UnmarkedAsDuplicateEvent on UnmarkedAsDuplicateEvent {\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  canonical {\n    __typename\n    ... on Issue {\n      url\n      number\n    }\n    ... on PullRequest {\n      url\n      number\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  databaseId\n}\n\nfragment UnpinnedEvent on UnpinnedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UnsubscribedEvent on UnsubscribedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UserBlockedEvent on UserBlockedEvent {\n  databaseId\n  createdAt\n  blockDuration\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  blockedUser: subject {\n    login\n    id\n  }\n}\n",
  "3f223f279562986721373d3a32894caa": "query LabelsSectionAssignedLabelsQuery(\n  $assignedLabelPageSize: Int = 100\n  $cursor: String\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ...LabelsSectionAssignedLabels_3t2EIG\n    id\n  }\n}\n\nfragment LabelPickerLabel on Label {\n  id\n  color\n  name\n  nameHTML\n  description\n  url\n}\n\nfragment LabelsSectionAssignedLabels_3t2EIG on Labelable {\n  __isLabelable: __typename\n  labels(first: $assignedLabelPageSize, after: $cursor, orderBy: {field: NAME, direction: ASC}) {\n    edges {\n      node {\n        ...LabelPickerLabel\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  ... on Node {\n    __isNode: __typename\n    id\n  }\n}\n",
  "3f41ebaead699968fac6da02d1b8f377": "query DevelopmentSectionBranchesQuery(\n  $owner: String!\n  $repo: String!\n) {\n  repository(owner: $owner, name: $repo) {\n    ...BranchPickerRepositoryBranchRefs\n    id\n  }\n}\n\nfragment BranchPickerRef on Ref {\n  name\n  id\n  __typename\n  target {\n    oid\n    id\n    __typename\n  }\n  repository {\n    id\n    nameWithOwner\n    defaultBranchRef {\n      name\n      id\n      target {\n        oid\n        id\n        __typename\n      }\n      associatedPullRequests {\n        totalCount\n      }\n      repository {\n        id\n      }\n    }\n  }\n  associatedPullRequests {\n    totalCount\n  }\n}\n\nfragment BranchPickerRepositoryBranchRefs on Repository {\n  id\n  defaultBranchRef {\n    ...BranchPickerRef\n    id\n  }\n  refs(refPrefix: \"refs/heads/\", first: 25) {\n    ...BranchPickerRepositoryBranches\n  }\n}\n\nfragment BranchPickerRepositoryBranches on RefConnection {\n  edges {\n    node {\n      ...BranchPickerRef\n      id\n    }\n  }\n}\n",
  "3f9c29fbe927d4478e405a477e4ff21f": "query issueTypeFilterProviderQuery(\n  $name: String!\n  $owner: String!\n) {\n  repository(name: $name, owner: $owner) {\n    issueTypes(first: 10) {\n      edges {\n        node {\n          name\n          id\n        }\n      }\n    }\n    id\n  }\n}\n",
  "3fb05766a6c88cc98148254d4ba5940e": "query ViewerQuery {\n  viewer {\n    login\n    ...IssuesShowFragmentViewer\n    id\n  }\n}\n\nfragment IssuesShowFragmentViewer on User {\n  name\n}\n",
  "41e55d2e790f170bad27b854a1da0756": "query IssueTypesDialogIssueTestQuery {\n  node(id: \"I_1234\") {\n    __typename\n    ... on Issue {\n      issueType {\n        ...IssueTypesDialogIssueType\n        id\n      }\n    }\n    id\n  }\n}\n\nfragment IssueTypesDialogIssueType on IssueType {\n  id\n}\n",
  "426a619c52646608c381f8ebf2927e90": "mutation updateIssueIssueTypeBulkByQueryMutation(\n  $input: UpdateIssuesBulkByQueryInput!\n) {\n  updateIssuesBulkByQuery(input: $input) {\n    jobId\n  }\n}\n",
  "444de2e3bd553d455e56a1c83ac051a8": "mutation updateIssueAssigneesBulkByQueryMutation(\n  $input: UpdateIssuesBulkByQueryInput!\n) {\n  updateIssuesBulkByQuery(input: $input) {\n    jobId\n  }\n}\n",
  "46361d53bb84e9871c973562f58be3bb": "query IssueRowSecondaryQuery(\n  $nodes: [ID!]!\n  $assigneePageSize: Int = 10\n  $includeReactions: Boolean = false\n) {\n  nodes(ids: $nodes) {\n    id\n    __typename\n    ... on Issue {\n      ...IssuePullRequestStateIconViewed\n      ...IssueItemMetadata_3Zewy6\n    }\n    ... on PullRequest {\n      ...PullRequestItemMetadata_3Zewy6\n    }\n  }\n}\n\nfragment Assignee on User {\n  login\n  avatarUrl(size: 64)\n}\n\nfragment Assignees_29gphi on Assignable {\n  __isAssignable: __typename\n  assignees(first: $assigneePageSize) {\n    edges {\n      node {\n        id\n        ...Assignee\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  ... on Node {\n    __isNode: __typename\n    id\n  }\n}\n\nfragment ClosedByPullRequestsReferences on Issue {\n  closedByPullRequestsReferences(first: 0, includeClosedPrs: true) {\n    totalCount\n  }\n}\n\nfragment IssueItemMetadata_3Zewy6 on Issue {\n  id\n  reactionGroups @include(if: $includeReactions) {\n    __typename\n  }\n  ... on Reactable @include(if: $includeReactions) {\n    __isReactable: __typename\n    ...Reactions @include(if: $includeReactions)\n  }\n  totalCommentsCount\n  ...Assignees_29gphi\n  ...ClosedByPullRequestsReferences\n}\n\nfragment IssuePullRequestStateIconViewed on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  __typename\n  ... on Issue {\n    isReadByViewer\n  }\n  ... on PullRequest {\n    isReadByViewer\n  }\n}\n\nfragment PullRequestItemMetadata_3Zewy6 on PullRequest {\n  totalCommentsCount\n  reactionGroups @include(if: $includeReactions) {\n    __typename\n  }\n  ... on Reactable @include(if: $includeReactions) {\n    __isReactable: __typename\n    ...Reactions @include(if: $includeReactions)\n  }\n  ...Assignees_29gphi\n}\n\nfragment Reactions on Reactable {\n  __isReactable: __typename\n  reactionGroups {\n    content\n    reactors {\n      totalCount\n    }\n  }\n}\n",
  "47471f1ccea140a1d41f7c1a4baa5dc7": "mutation createIssueFromChecklistItemMutation(\n  $input: CreateIssueInput!\n) {\n  createIssue(input: $input) {\n    issue {\n      parent {\n        body\n        bodyHTML(unfurlReferences: true, renderTasklistBlocks: true)\n        id\n      }\n      id\n    }\n    errors {\n      __typename\n      message\n    }\n  }\n}\n",
  "477ffbebb86e5e619210052decde91f2": "query IssueActionsTestQuery(\n  $owner: String!\n  $repo: String!\n  $number: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $number) {\n      ...IssueActions\n      id\n    }\n    id\n  }\n}\n\nfragment IssueActions on Issue {\n  ...IssueActionsState\n}\n\nfragment IssueActionsState on Issue {\n  state\n  stateReason\n  id\n}\n",
  "47a5cd11c625a1008c37c44d4345d1c2": "query RelayTestFactoriesIssuesShowFragmentQuery {\n  repository(owner: \"owner\", name: \"repo\") {\n    issue(number: 33) {\n      ...IssuesShowFragment\n      id\n    }\n    id\n  }\n}\n\nfragment IssuesShowFragment on Issue {\n  title\n  number\n}\n",
  "492ef7860aba9311a9f61f4ebf3e3b10": "query IssueActionsStoryQuery(\n  $id: ID!\n) {\n  issue: node(id: $id) {\n    __typename\n    ... on Issue {\n      ...IssueActions\n    }\n    id\n  }\n}\n\nfragment IssueActions on Issue {\n  ...IssueActionsState\n}\n\nfragment IssueActionsState on Issue {\n  state\n  stateReason\n  id\n}\n",
  "49916d14a46558c4f9a3de8b0387e89b": "query LabelsSectionTestQuery(\n  $owner: String!\n  $repo: String!\n  $number: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $number) {\n      ...LabelsSectionFragment\n      id\n    }\n    id\n  }\n}\n\nfragment LabelPickerLabel on Label {\n  id\n  color\n  name\n  nameHTML\n  description\n  url\n}\n\nfragment LabelsSectionAssignedLabels on Labelable {\n  __isLabelable: __typename\n  labels(first: 100, orderBy: {field: NAME, direction: ASC}) {\n    edges {\n      node {\n        ...LabelPickerLabel\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  ... on Node {\n    __isNode: __typename\n    id\n  }\n}\n\nfragment LabelsSectionFragment on Issue {\n  id\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    isArchived\n    id\n  }\n  ...LabelsSectionAssignedLabels\n  viewerCanLabel\n}\n",
  "4a0a93b20b689a32c4988a4cfde3f259": "mutation updateIssueStateMutation(\n  $id: ID!\n) {\n  reopenIssue(input: {issueId: $id}) {\n    issue {\n      id\n      state\n    }\n  }\n}\n",
  "4b1dfbf2e29a53d7c30a82ce27502095": "mutation createLinkedBranchMutation(\n  $input: CreateLinkedBranchInput!\n) {\n  createLinkedBranch(input: $input) {\n    linkedBranch {\n      ref {\n        id\n        name\n        prefix\n      }\n      id\n    }\n    issue {\n      linkedBranches(first: 25) {\n        nodes {\n          id\n          ref {\n            ...BranchPickerRef\n            id\n          }\n        }\n      }\n      repository {\n        refs(refPrefix: \"refs/heads/\", first: 25) {\n          nodes {\n            ...BranchPickerRef\n            id\n          }\n        }\n        id\n      }\n      id\n    }\n    clientMutationId\n  }\n}\n\nfragment BranchPickerRef on Ref {\n  name\n  id\n  __typename\n  target {\n    oid\n    id\n    __typename\n  }\n  repository {\n    id\n    nameWithOwner\n    defaultBranchRef {\n      name\n      id\n      target {\n        oid\n        id\n        __typename\n      }\n      associatedPullRequests {\n        totalCount\n      }\n      repository {\n        id\n      }\n    }\n  }\n  associatedPullRequests {\n    totalCount\n  }\n}\n",
  "4df3dab434085862d6425c4fe5828d55": "query IterationFieldTestQuery {\n  node(id: \"abc\") {\n    __typename\n    ... on ProjectV2Item {\n      project {\n        viewerCanUpdate\n        url\n        id\n        fields(first: 50, orderBy: {field: POSITION, direction: ASC}) {\n          edges {\n            node {\n              __typename\n              ... on ProjectV2IterationField {\n                id\n                name\n                dataType\n                ...IterationFieldConfigFragment\n              }\n              ... on Node {\n                __isNode: __typename\n                id\n              }\n            }\n          }\n        }\n      }\n      fieldValues(first: 50, orderBy: {field: POSITION, direction: ASC}) {\n        edges {\n          node {\n            __typename\n            ... on ProjectV2ItemFieldIterationValue {\n              id\n              field {\n                __typename\n                ... on ProjectV2IterationField {\n                  id\n                }\n                ... on Node {\n                  __isNode: __typename\n                  id\n                }\n              }\n            }\n            ...IterationFieldFragment\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n      }\n    }\n    id\n  }\n}\n\nfragment IterationFieldConfigFragment on ProjectV2IterationField {\n  id\n  name\n  configuration {\n    iterations {\n      ...IterationFieldIterationFragment\n    }\n    completedIterations {\n      ...IterationFieldIterationFragment\n    }\n  }\n}\n\nfragment IterationFieldFragment on ProjectV2ItemFieldIterationValue {\n  iterationId\n  title\n  titleHTML\n  startDate\n  duration\n  field {\n    __typename\n    ...IterationFieldConfigFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment IterationFieldIterationFragment on ProjectV2IterationFieldIteration {\n  id\n  title\n  titleHTML\n  startDate\n  duration\n}\n",
  "51d52d48ef78c496e8b2f1ca9c16fa4c": "mutation lockLockableMutation(\n  $input: LockLockableInput!\n) {\n  lockLockable(input: $input) {\n    lockedRecord {\n      __typename\n      ... on Issue {\n        locked\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n}\n",
  "5252ea1d85187986fde77893343a5aab": "mutation createIssueTypeMutation(\n  $input: CreateIssueTypeInput!\n) {\n  createIssueType(input: $input) {\n    issueType {\n      id\n      name\n      description\n      color\n      isEnabled\n      isPrivate\n    }\n    errors {\n      __typename\n      message\n    }\n  }\n}\n",
  "52e680dbbb4a420c68b4e9638c87ffd3": "mutation updateIssueMilestoneBulkByQueryMutation(\n  $input: UpdateIssuesBulkByQueryInput!\n) {\n  updateIssuesBulkByQuery(input: $input) {\n    jobId\n  }\n}\n",
  "52fee6ae78e38995e54f2ce72f911a6e": "mutation updateIssueSubscriptionMutation(\n  $input: UpdateSubscriptionInput!\n) {\n  updateSubscription(input: $input) {\n    subscribable {\n      __typename\n      ... on Issue {\n        id\n        viewerThreadSubscriptionFormAction\n      }\n      id\n    }\n  }\n}\n",
  "540103bb99869cfe09bca081f0e302a3": "query LabelPickerQuery(\n  $owner: String!\n  $repo: String!\n  $shouldQueryByNames: Boolean = false\n  $labelNames: String = \"\"\n  $count: Int = 100\n) {\n  repository(owner: $owner, name: $repo) {\n    ...LabelPickerLabelsPaginated\n    labelsByNames: labels(names: $labelNames, first: $count, orderBy: {field: NAME, direction: ASC}) @include(if: $shouldQueryByNames) {\n      nodes {\n        ...LabelPickerLabel\n        id\n      }\n    }\n    id\n  }\n}\n\nfragment LabelPickerLabel on Label {\n  id\n  color\n  name\n  nameHTML\n  description\n  url\n}\n\nfragment LabelPickerLabelsPaginated on Repository {\n  id\n  viewerIssueCreationPermissions {\n    labelable\n  }\n  labels(first: 100, orderBy: {field: NAME, direction: ASC}) {\n    nodes {\n      ...LabelPickerLabel\n      id\n    }\n    totalCount\n  }\n}\n",
  "543338351ad820d1076f0627214327be": "query DiscussionCategoryPickerTestQuery(\n  $first: Int!\n  $repo: String!\n  $owner: String!\n) {\n  repository(name: $repo, owner: $owner) {\n    ...DiscussionCategoryPickerDiscussionCategories\n    id\n  }\n}\n\nfragment DiscussionCategoryPickerDiscussionCategories on Repository {\n  discussionCategories(first: $first, filterByAssignable: true) {\n    edges {\n      node {\n        id\n        name\n      }\n    }\n  }\n}\n",
  "549032cc463ee1eabb647a8a3f52ea57": "query IssuePickerHelpersTestQuery {\n  issue: node(id: \"test-issue-id\") {\n    __typename\n    ... on Issue {\n      subIssues(first: 50) {\n        nodes {\n          id\n        }\n      }\n    }\n    id\n  }\n}\n",
  "54e65ad73006628aacbd74e2297cd294": "query IssueBodyTestQuery {\n  repository(owner: \"owner\", name: \"repo\") {\n    issue(number: 33) {\n      ...IssueBody\n      id\n    }\n    id\n  }\n}\n\nfragment AddSubIssueButtonGroup_4FLmrJ on Issue {\n  id\n  repository {\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  parent {\n    id\n  }\n}\n\nfragment IssueBody on Issue {\n  id\n  databaseId\n  viewerDidAuthor\n  locked\n  author {\n    __typename\n    ...IssueBodyHeaderActions\n    id\n  }\n  repository {\n    databaseId\n    nameWithOwner\n    slashCommandsEnabled\n    id\n    owner {\n      __typename\n      login\n      id\n      url\n    }\n  }\n  url\n  viewerCanUpdateNext\n  ...IssueBodyViewer\n  ...IssueBodyContent\n  ...IssueBodyHeader\n  ...IssueBodyViewerReactable\n  ...IssueBodyViewerSubIssues\n}\n\nfragment IssueBodyContent on Issue {\n  body\n  bodyHTML(unfurlReferences: true, renderTasklistBlocks: true)\n  bodyVersion\n}\n\nfragment IssueBodyHeader on Comment {\n  __isComment: __typename\n  ...IssueBodyHeaderActions_comment\n  createdAt\n  viewerDidAuthor\n  author {\n    __typename\n    ...IssueBodyHeaderAuthor\n    ...IssueBodyHeaderActions\n    id\n  }\n}\n\nfragment IssueBodyHeaderActions on Actor {\n  __isActor: __typename\n  login\n  id\n}\n\nfragment IssueBodyHeaderActions_comment on Comment {\n  __isComment: __typename\n  body\n}\n\nfragment IssueBodyHeaderAuthor on Actor {\n  __isActor: __typename\n  login\n  avatarUrl\n  profileUrl\n}\n\nfragment IssueBodyViewer on Comment {\n  __isComment: __typename\n  id\n}\n\nfragment IssueBodyViewerReactable on Reactable {\n  __isReactable: __typename\n  ...ReactionViewerGroups\n}\n\nfragment IssueBodyViewerSubIssues on Issue {\n  ...useCanEditSubIssues\n  ...useHasSubIssues\n  ...AddSubIssueButtonGroup_4FLmrJ\n}\n\nfragment ReactionButton_Reaction on ReactionGroup {\n  content\n  reactors(first: 5) {\n    nodes {\n      __typename\n      ... on User {\n        login\n        __typename\n      }\n      ... on Bot {\n        login\n        __typename\n      }\n      ... on Organization {\n        login\n        __typename\n      }\n      ... on Mannequin {\n        login\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n    totalCount\n  }\n  viewerHasReacted\n}\n\nfragment ReactionViewerGroups on Reactable {\n  __isReactable: __typename\n  reactionGroups {\n    ...ReactionButton_Reaction\n    ...ReactionsMenuItem_Reaction\n  }\n}\n\nfragment ReactionsMenuItem_Reaction on ReactionGroup {\n  content\n  viewerHasReacted\n}\n\nfragment useCanEditSubIssues on Issue {\n  viewerCanUpdateMetadata\n  repository {\n    isArchived\n    id\n  }\n}\n\nfragment useHasSubIssues on Issue {\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n}\n",
  "55fc36b41cc4536f3da7629205feb042": "query IssueTypeIndicatorTestQuery(\n  $id: ID!\n) {\n  issue: node(id: $id) {\n    __typename\n    ... on Issue {\n      ...IssueTypeIndicator\n    }\n    id\n  }\n}\n\nfragment IssueTypeIndicator on Issue {\n  issueType {\n    id\n    name\n    color\n  }\n}\n",
  "570dbc128bd51a3675388f8807e56980": "mutation updateIssueLabelsMutation(\n  $input: UpdateIssueInput!\n) {\n  updateIssue(input: $input) {\n    issue {\n      id\n      ...LabelsSectionAssignedLabels\n    }\n  }\n}\n\nfragment LabelPickerLabel on Label {\n  id\n  color\n  name\n  nameHTML\n  description\n  url\n}\n\nfragment LabelsSectionAssignedLabels on Labelable {\n  __isLabelable: __typename\n  labels(first: 100, orderBy: {field: NAME, direction: ASC}) {\n    edges {\n      node {\n        ...LabelPickerLabel\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  ... on Node {\n    __isNode: __typename\n    id\n  }\n}\n",
  "586ccac03b1d7b343360d55004c89d16": "query IssueBodyHeaderTestQuery {\n  repository(owner: \"owner\", name: \"repo\") {\n    issue(number: 33) {\n      ...IssueBodyHeader\n      id\n    }\n    id\n  }\n}\n\nfragment IssueBodyHeader on Comment {\n  __isComment: __typename\n  ...IssueBodyHeaderActions_comment\n  createdAt\n  viewerDidAuthor\n  author {\n    __typename\n    ...IssueBodyHeaderAuthor\n    ...IssueBodyHeaderActions\n    id\n  }\n}\n\nfragment IssueBodyHeaderActions on Actor {\n  __isActor: __typename\n  login\n  id\n}\n\nfragment IssueBodyHeaderActions_comment on Comment {\n  __isComment: __typename\n  body\n}\n\nfragment IssueBodyHeaderAuthor on Actor {\n  __isActor: __typename\n  login\n  avatarUrl\n  profileUrl\n}\n",
  "5a87042c81c49b58e35a47802a97a155": "query ParticipantsSectionTestQuery {\n  myData: node(id: \"test-id\") {\n    __typename\n    ...ParticipantsSectionFragment\n    id\n  }\n}\n\nfragment AssigneePickerAssignee on User {\n  id\n  login\n  name\n  avatarUrl(size: 64)\n}\n\nfragment ParticipantFragment on User {\n  ...AssigneePickerAssignee\n}\n\nfragment ParticipantsSectionFragment on Issue {\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  number\n  participants(first: 10) {\n    nodes {\n      ...ParticipantFragment\n      id\n    }\n    totalCount\n  }\n}\n",
  "5e0183fe50e95483c70d7428a35168a2": "query OrganizationIssueTypesSettingsEditQuery(\n  $organization_id: String!\n  $id: ID!\n) {\n  viewer {\n    isEnterpriseManagedUser\n    id\n  }\n  organization(login: $organization_id) {\n    login\n    issueTypes {\n      ...OrganizationIssueTypesSettingsEditIssueTypes\n    }\n    id\n  }\n  node(id: $id) {\n    __typename\n    ... on IssueType {\n      ...OrganizationIssueTypesSettingsEditInternalIssueType\n    }\n    id\n  }\n}\n\nfragment DangerZoneIssueType on IssueType {\n  id\n  isEnabled\n  ...DisableOrganizationConfirmationDialogIssueType\n  ...DeletionConfirmationDialogIssueType\n}\n\nfragment DeletionConfirmationDialogIssueType on IssueType {\n  id\n  name\n}\n\nfragment DisableOrganizationConfirmationDialogIssueType on IssueType {\n  id\n  name\n}\n\nfragment OrganizationIssueTypesSettingsEditInternalIssueType on IssueType {\n  description\n  id\n  isPrivate\n  isEnabled\n  name\n  color\n  ...DangerZoneIssueType\n}\n\nfragment OrganizationIssueTypesSettingsEditIssueTypes on IssueTypeConnection {\n  edges {\n    node {\n      id\n      name\n    }\n  }\n}\n",
  "5e2a5775da0dd8bab19c226edd4c7093": "query IssueAssigneePaginatedQuery(\n  $assigneePageSize: Int\n  $cursor: String\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ...Assignees_1pFa9O\n    id\n  }\n}\n\nfragment Assignee on User {\n  login\n  avatarUrl(size: 64)\n}\n\nfragment Assignees_1pFa9O on Assignable {\n  __isAssignable: __typename\n  assignees(first: $assigneePageSize, after: $cursor) {\n    edges {\n      node {\n        id\n        ...Assignee\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  ... on Node {\n    __isNode: __typename\n    id\n  }\n}\n",
  "5f429f8e8a90c80805262a7bb730507e": "mutation replaceAssigneesForAssignableMutation(\n  $input: ReplaceAssigneesForAssignableInput!\n) {\n  replaceAssigneesForAssignable(input: $input) {\n    assignable {\n      __typename\n      assignees(first: 20) {\n        nodes {\n          ...AssigneePickerAssignee\n          id\n        }\n      }\n      suggestedAssignees(first: 20) {\n        nodes {\n          ...AssigneePickerAssignee\n          id\n        }\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n}\n\nfragment AssigneePickerAssignee on User {\n  id\n  login\n  name\n  avatarUrl(size: 64)\n}\n",
  "618dafc889c601a013a08df28c6d9b9a": "query IssuesShowFragmentLabelQuery(\n  $owner: String!\n  $repo: String!\n) {\n  repository(owner: $owner, name: $repo) {\n    labels(first: 3) {\n      nodes {\n        name\n        id\n      }\n    }\n    id\n  }\n}\n",
  "61f5095065a397f5231aac4567c7a775": "query IssueAssigneesList_Fragment_Query(\n  $repo: String!\n  $owner: String!\n  $number: Int!\n) {\n  repository(name: $repo, owner: $owner) {\n    issueOrPullRequest(number: $number) {\n      __typename\n      ... on Assignable {\n        __isAssignable: __typename\n        ...IssueAssignees_List_Fragment\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n    id\n  }\n}\n\nfragment IssueAssignees_List_Fragment on Assignable {\n  __isAssignable: __typename\n  suggestedAssignees(first: 50) {\n    edges {\n      node {\n        login\n        id\n      }\n    }\n  }\n}\n",
  "621fe70275e60e659df6fc466c997346": "query ReactionViewerLazyQuery(\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ... on Comment {\n      __isComment: __typename\n      ...ReactionViewerGroups\n    }\n    id\n  }\n}\n\nfragment ReactionButton_Reaction on ReactionGroup {\n  content\n  reactors(first: 5) {\n    nodes {\n      __typename\n      ... on User {\n        login\n        __typename\n      }\n      ... on Bot {\n        login\n        __typename\n      }\n      ... on Organization {\n        login\n        __typename\n      }\n      ... on Mannequin {\n        login\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n    totalCount\n  }\n  viewerHasReacted\n}\n\nfragment ReactionViewerGroups on Reactable {\n  __isReactable: __typename\n  reactionGroups {\n    ...ReactionButton_Reaction\n    ...ReactionsMenuItem_Reaction\n  }\n}\n\nfragment ReactionsMenuItem_Reaction on ReactionGroup {\n  content\n  viewerHasReacted\n}\n",
  "624127ed9e152cc8bba8e2e53a926e51": "query IssuePullRequestTitleTestQuery(\n  $id: ID!\n) {\n  data: node(id: $id) {\n    __typename\n    ... on Issue {\n      ...IssuePullRequestTitle_2EGTOF\n    }\n    id\n  }\n}\n\nfragment IssuePullRequestTitle_2EGTOF on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  __typename\n  ... on Issue {\n    number\n    labels(first: 10, orderBy: {field: NAME, direction: ASC}) {\n      nodes {\n        ...Label\n        name\n        id\n      }\n    }\n  }\n  ... on PullRequest {\n    number\n    labels(first: 10, orderBy: {field: NAME, direction: ASC}) {\n      nodes {\n        ...Label\n        name\n        id\n      }\n    }\n  }\n}\n\nfragment Label on Label {\n  id\n  nameHTML\n  color\n  name\n  description\n}\n",
  "62f0856d23072df832d99c11f2061ca2": "subscription PullRequestRowStatusUpdatedSubscription(\n  $id: ID!\n) {\n  pullRequestStatusUpdated(id: $id) {\n    id\n    state\n    isDraft\n  }\n}\n",
  "647a932d7a7bb90bf35149e1b575acc0": "query IssuesShowFragmentQuery {\n  repository(owner: \"owner\", name: \"repo\") {\n    issue(number: 33) {\n      ...IssuesShowFragment\n      id\n    }\n    id\n  }\n}\n\nfragment IssuesShowFragment on Issue {\n  title\n  number\n}\n",
  "64de5384d57ed83a5022108bd44ee887": "query AssigneePickerViewerQuery {\n  safeViewer {\n    ...AssigneePickerAssignee\n    id\n  }\n}\n\nfragment AssigneePickerAssignee on User {\n  id\n  login\n  name\n  avatarUrl(size: 64)\n}\n",
  "66459333e09f92ac11e2cc11dfd14e98": "query ReactionViewerGroupTestQuery(\n  $id: ID!\n) {\n  issue: node(id: $id) {\n    __typename\n    ... on Issue {\n      ...ReactionViewerGroups\n    }\n    id\n  }\n}\n\nfragment ReactionButton_Reaction on ReactionGroup {\n  content\n  reactors(first: 5) {\n    nodes {\n      __typename\n      ... on User {\n        login\n        __typename\n      }\n      ... on Bot {\n        login\n        __typename\n      }\n      ... on Organization {\n        login\n        __typename\n      }\n      ... on Mannequin {\n        login\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n    totalCount\n  }\n  viewerHasReacted\n}\n\nfragment ReactionViewerGroups on Reactable {\n  __isReactable: __typename\n  reactionGroups {\n    ...ReactionButton_Reaction\n    ...ReactionsMenuItem_Reaction\n  }\n}\n\nfragment ReactionsMenuItem_Reaction on ReactionGroup {\n  content\n  viewerHasReacted\n}\n",
  "6737115176a796be548658df56d9e721": "query AssigneesSectionStoryQuery(\n  $owner: String!\n  $repo: String!\n  $number: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $number) {\n      ...AssigneesSectionFragment\n      id\n    }\n    id\n  }\n}\n\nfragment AssigneePickerAssignee on User {\n  id\n  login\n  name\n  avatarUrl(size: 64)\n}\n\nfragment AssigneesSectionAssignees on Issue {\n  assignees(first: 20) {\n    nodes {\n      ...AssigneePickerAssignee\n      id\n    }\n  }\n}\n\nfragment AssigneesSectionFragment on Issue {\n  id\n  number\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    isArchived\n    planFeatures {\n      maximumAssignees\n    }\n    id\n  }\n  ...AssigneesSectionAssignees\n  viewerCanUpdateNext\n  viewerCanAssign\n}\n",
  "67b42ffa2f310995849e95e1865abd64": "mutation updateIssueAssigneesMutation(\n  $input: ReplaceAssigneesForAssignableInput!\n) {\n  replaceAssigneesForAssignable(input: $input) {\n    assignable {\n      __typename\n      ... on Issue {\n        id\n        assignees(first: 20) {\n          nodes {\n            ...AssigneePickerAssignee\n            id\n          }\n        }\n        participants(first: 10) {\n          nodes {\n            ...AssigneePickerAssignee\n            id\n          }\n        }\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n}\n\nfragment AssigneePickerAssignee on User {\n  id\n  login\n  name\n  avatarUrl(size: 64)\n}\n",
  "6823f2ff50c6b4b77783108c57484509": "query SharedViewTreeListSelectTeamsQuery(\n  $cursor: String\n  $searchTypes: [SearchShortcutType!]!\n  $selectedTeamsPageSize: Int\n  $teamViewPageSize: Int\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ...SharedViewTreeList_2seIj2\n    id\n  }\n}\n\nfragment RemoveTeamRow on Team {\n  id\n  name\n  avatarUrl\n  organization {\n    name\n    id\n  }\n}\n\nfragment SharedViewTreeItem on TeamSearchShortcut {\n  id\n  icon\n  name\n  query\n  color\n}\n\nfragment SharedViewTreeList_2seIj2 on UserDashboard {\n  selectedTeams(first: $selectedTeamsPageSize, after: $cursor) {\n    edges {\n      node {\n        ...SharedViewTreeRoot_346Jaw\n        ...RemoveTeamRow\n        id\n        organization {\n          name\n          id\n        }\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n}\n\nfragment SharedViewTreeRoot_346Jaw on Team {\n  id\n  ...TeamCheckboxItem\n  isViewerMember\n  viewerCanAdminister\n  name\n  avatarUrl\n  organization {\n    name\n    id\n  }\n  dashboard {\n    ...SharedViewTree_346Jaw\n    id\n  }\n}\n\nfragment SharedViewTree_346Jaw on TeamDashboard {\n  shortcuts(first: $teamViewPageSize, searchTypes: $searchTypes) {\n    edges {\n      node {\n        ...SharedViewTreeItem\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n}\n\nfragment TeamCheckboxItem on Team {\n  id\n  name\n  avatarUrl\n  organization {\n    name\n    id\n  }\n}\n",
  "6908509fc024e1ab74ffec2140dcf167": "mutation addIssuesToProjectsBulkMutation(\n  $input: UpdateIssuesBulkInput!\n) {\n  updateIssuesBulk(input: $input) {\n    jobId\n  }\n}\n",
  "69c24a5ed31d5b5790bcc510dcd714ee": "query ClosedByPullRequestsReferencesTestQuery(\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ... on Issue {\n      ...ClosedByPullRequestsReferences\n    }\n    id\n  }\n}\n\nfragment ClosedByPullRequestsReferences on Issue {\n  closedByPullRequestsReferences(first: 0, includeClosedPrs: true) {\n    totalCount\n  }\n}\n",
  "6b176dc5a32ae960e793fd20e86db6b4": "query IssueBodyViewerTestQuery {\n  repository(owner: \"owner\", name: \"repo\") {\n    issue(number: 33) {\n      ...IssueBodyViewer\n      ...IssueBodyViewerReactable\n      ...IssueBodyViewerSubIssues\n      id\n    }\n    id\n  }\n}\n\nfragment AddSubIssueButtonGroup_4FLmrJ on Issue {\n  id\n  repository {\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  parent {\n    id\n  }\n}\n\nfragment IssueBodyViewer on Comment {\n  __isComment: __typename\n  id\n}\n\nfragment IssueBodyViewerReactable on Reactable {\n  __isReactable: __typename\n  ...ReactionViewerGroups\n}\n\nfragment IssueBodyViewerSubIssues on Issue {\n  ...useCanEditSubIssues\n  ...useHasSubIssues\n  ...AddSubIssueButtonGroup_4FLmrJ\n}\n\nfragment ReactionButton_Reaction on ReactionGroup {\n  content\n  reactors(first: 5) {\n    nodes {\n      __typename\n      ... on User {\n        login\n        __typename\n      }\n      ... on Bot {\n        login\n        __typename\n      }\n      ... on Organization {\n        login\n        __typename\n      }\n      ... on Mannequin {\n        login\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n    totalCount\n  }\n  viewerHasReacted\n}\n\nfragment ReactionViewerGroups on Reactable {\n  __isReactable: __typename\n  reactionGroups {\n    ...ReactionButton_Reaction\n    ...ReactionsMenuItem_Reaction\n  }\n}\n\nfragment ReactionsMenuItem_Reaction on ReactionGroup {\n  content\n  viewerHasReacted\n}\n\nfragment useCanEditSubIssues on Issue {\n  viewerCanUpdateMetadata\n  repository {\n    isArchived\n    id\n  }\n}\n\nfragment useHasSubIssues on Issue {\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n}\n",
  "6b2eafb48bb2923465442543aa12df82": "mutation updateUserViewMutation(\n  $input: UpdateDashboardSearchShortcutInput!\n) {\n  updateDashboardSearchShortcut(input: $input) {\n    shortcut {\n      id\n      ...SavedViewRow\n      ...ListCurrentViewFragment\n      ...IssueDetailCurrentViewFragment\n      ...EditViewButtonCurrentViewFragment\n    }\n  }\n}\n\nfragment EditViewButtonCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  id\n  name\n  description\n  icon\n  color\n  query\n}\n\nfragment HeaderContentCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  name\n  description\n  id\n}\n\nfragment HeaderCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  id\n  name\n  query\n}\n\nfragment IconAndColorPickerViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  icon\n  color\n  id\n}\n\nfragment IssueDetailCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  name\n  query\n}\n\nfragment ListCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  ...SearchBarCurrentViewFragment\n  ...HeaderCurrentViewFragment\n  ...EditViewButtonCurrentViewFragment\n  ...HeaderContentCurrentViewFragment\n  ...IconAndColorPickerViewFragment\n}\n\nfragment SavedViewRow on SearchShortcut {\n  id\n  icon\n  name\n  color\n  description\n  query\n  scopingRepository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment SearchBarCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  id\n  name\n  description\n  icon\n  color\n  query\n  scopingRepository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n",
  "6c9bea8ff93d796b36cc3c1efd081348": "subscription ApplyAssigneesActionIssueRowTestSubscription(\n  $issueId: ID!\n) {\n  issueUpdated(id: $issueId) {\n    issueMetadataUpdated {\n      ...Assignees_vmjcX\n      id\n    }\n  }\n}\n\nfragment Assignee on User {\n  login\n  avatarUrl(size: 64)\n}\n\nfragment Assignees_vmjcX on Assignable {\n  __isAssignable: __typename\n  assignees(first: 20) {\n    edges {\n      node {\n        id\n        ...Assignee\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  ... on Node {\n    __isNode: __typename\n    id\n  }\n}\n",
  "6ce7cd885c573689df9f813e3e7c3bbc": "subscription IssueRowSubscription(\n  $issueId: ID!\n) {\n  issueUpdated(id: $issueId) {\n    issueTitleUpdated {\n      title\n      titleHTML\n      id\n    }\n    issueStateUpdated {\n      state\n      stateReason\n      id\n    }\n    issueTypeUpdated {\n      ...IssueTypeIndicator\n      id\n    }\n    issueMetadataUpdated {\n      ...Labels_1aoQTH\n      ...Assignees_vmjcX\n      ...MilestonesSectionMilestone\n      projectItemsNext(first: 10) {\n        edges {\n          node {\n            id\n            project {\n              ...ProjectPickerProject\n              id\n            }\n          }\n        }\n      }\n      id\n    }\n  }\n}\n\nfragment Assignee on User {\n  login\n  avatarUrl(size: 64)\n}\n\nfragment Assignees_vmjcX on Assignable {\n  __isAssignable: __typename\n  assignees(first: 20) {\n    edges {\n      node {\n        id\n        ...Assignee\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  ... on Node {\n    __isNode: __typename\n    id\n  }\n}\n\nfragment IssueTypeIndicator on Issue {\n  issueType {\n    id\n    name\n    color\n  }\n}\n\nfragment Label on Label {\n  id\n  nameHTML\n  color\n  name\n  description\n}\n\nfragment Labels_1aoQTH on Labelable {\n  __isLabelable: __typename\n  labels(first: 20, orderBy: {field: NAME, direction: ASC}) {\n    nodes {\n      ...Label\n      name\n      id\n    }\n  }\n}\n\nfragment MilestonePickerMilestone on Milestone {\n  id\n  title\n  closed\n  dueOn\n  progressPercentage\n  url\n  closedAt\n}\n\nfragment MilestonesSectionMilestone on Issue {\n  milestone {\n    ...MilestonePickerMilestone\n    id\n  }\n}\n\nfragment ProjectPickerProject on ProjectV2 {\n  id\n  title\n  closed\n  number\n  url\n  viewerCanUpdate\n  __typename\n}\n",
  "6f0faa96940cf1b4018ce92434b218eb": "mutation unlockLockableMutation(\n  $input: UnlockLockableInput!\n) {\n  unlockLockable(input: $input) {\n    unlockedRecord {\n      __typename\n      ... on Issue {\n        locked\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n}\n",
  "70034e9fb5b15a5eff95dbadbc1dbb1d": "query MilestonesSectionStoryQuery(\n  $owner: String!\n  $repo: String!\n  $number: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $number) {\n      ...MilestonesSectionFragment\n      id\n    }\n    id\n  }\n}\n\nfragment MilestonePickerMilestone on Milestone {\n  id\n  title\n  closed\n  dueOn\n  progressPercentage\n  url\n  closedAt\n}\n\nfragment MilestonesSectionFragment on Issue {\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  id\n  ...MilestonesSectionMilestone\n  viewerCanSetMilestone\n}\n\nfragment MilestonesSectionMilestone on Issue {\n  milestone {\n    ...MilestonePickerMilestone\n    id\n  }\n}\n",
  "700fe02bfa9c4f51ba6f53fb99f2c817": "query IssueBodyHeaderAuthorTestQuery {\n  repository(owner: \"owner\", name: \"repo\") {\n    issue(number: 33) {\n      author {\n        __typename\n        ...IssueBodyHeaderAuthor\n        id\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment IssueBodyHeaderAuthor on Actor {\n  __isActor: __typename\n  login\n  avatarUrl\n  profileUrl\n}\n",
  "703b5a01dfab495d6592cf1927b5b80c": "query IssueIndexPageQuery(\n  $query: String = \"state:open archived:false assignee:@me sort:updated-desc\"\n  $first: Int = 25\n  $labelPageSize: Int = 20\n  $skip: Int = null\n  $name: String!\n  $owner: String!\n) {\n  ...ListQuery_exdGd\n  repository(owner: $owner, name: $name) {\n    ...PinnedIssues\n    ...ListRepositoryFragment\n    id\n  }\n  safeViewer {\n    ...AssigneePickerAssignee\n    id\n  }\n}\n\nfragment AssigneePickerAssignee on User {\n  id\n  login\n  name\n  avatarUrl(size: 64)\n}\n\nfragment IssueItem_WbnLh on Issue {\n  id\n  __typename\n  title\n  titleHtml: titleHTML\n  ...IssuePullRequestTitle_WbnLh\n  ...IssuePullRequestDescription\n  ...IssuePullRequestStateIcon\n  ...IssueTypeIndicator\n}\n\nfragment IssuePullRequestDescription on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    createdAt\n    updatedAt\n    author {\n      __typename\n      login\n      avatarUrl\n      id\n    }\n    number\n    ...MilestoneMetadata\n  }\n  ... on PullRequest {\n    createdAt\n    updatedAt\n    author {\n      __typename\n      login\n      avatarUrl\n      id\n    }\n    number\n    ...MilestoneMetadata\n    reviewDecision\n  }\n}\n\nfragment IssuePullRequestStateIcon on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  __typename\n  ... on Issue {\n    state\n    stateReason\n  }\n  ... on PullRequest {\n    isDraft\n    isInMergeQueue\n    pullRequestState: state\n  }\n}\n\nfragment IssuePullRequestTitle_WbnLh on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  __typename\n  ... on Issue {\n    number\n    labels(first: $labelPageSize, orderBy: {field: NAME, direction: ASC}) {\n      nodes {\n        ...Label\n        name\n        id\n      }\n    }\n  }\n  ... on PullRequest {\n    number\n    labels(first: $labelPageSize, orderBy: {field: NAME, direction: ASC}) {\n      nodes {\n        ...Label\n        name\n        id\n      }\n    }\n  }\n}\n\nfragment IssueRow_2DSy0h on Issue {\n  ...IssueItem_WbnLh\n  number\n}\n\nfragment IssueTypeIndicator on Issue {\n  issueType {\n    id\n    name\n    color\n  }\n}\n\nfragment Label on Label {\n  id\n  nameHTML\n  color\n  name\n  description\n}\n\nfragment ListItemsPaginated_results_exdGd on Query {\n  search(first: $first, query: $query, type: ISSUE, skip: $skip) @defer(label: \"Issue_searchResults\") {\n    edges {\n      node {\n        __typename\n        ... on Issue {\n          id\n          __typename\n          number\n          ...IssueRow_2DSy0h\n        }\n        ... on PullRequest {\n          id\n          __typename\n          number\n          ...PullRequestRow_pullRequest_WbnLh\n        }\n        ... on Node {\n          __isNode: __typename\n          id\n        }\n      }\n      cursor\n    }\n    pageInfo {\n      startCursor\n      endCursor\n      hasPreviousPage\n      hasNextPage\n    }\n    issueCount\n  }\n}\n\nfragment ListQuery_exdGd on Query {\n  ...SearchRootFragment_exdGd\n}\n\nfragment ListRepositoryFragment on Repository {\n  ...SearchRepositoryFragment\n}\n\nfragment MilestoneMetadata on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    milestone {\n      title\n      url\n      id\n    }\n  }\n  ... on PullRequest {\n    milestone {\n      title\n      url\n      id\n    }\n  }\n}\n\nfragment PinnedIssueIssue on Issue {\n  id\n  title\n  titleHTML\n  url\n  createdAt\n  state\n  stateReason\n  number\n  author {\n    __typename\n    login\n    url\n    id\n  }\n  totalCommentsCount\n  repository {\n    viewerCanPinIssues\n    id\n  }\n}\n\nfragment PinnedIssues on Repository {\n  id\n  pinnedIssues(first: 3) {\n    nodes {\n      id\n      issue {\n        id\n        title\n        ...PinnedIssueIssue\n      }\n    }\n    totalCount\n  }\n  viewerCanPinIssues\n}\n\nfragment PullRequestItem_WbnLh on PullRequest {\n  id\n  __typename\n  headCommit {\n    commit {\n      id\n      statusCheckRollup {\n        state\n        contexts {\n          checkRunCount\n          checkRunCountsByState {\n            count\n            state\n          }\n        }\n        id\n      }\n    }\n    id\n  }\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  title\n  titleHTML\n  ...IssuePullRequestTitle_WbnLh\n  ...IssuePullRequestDescription\n  ...IssuePullRequestStateIcon\n}\n\nfragment PullRequestRow_pullRequest_WbnLh on PullRequest {\n  __typename\n  id\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...PullRequestItem_WbnLh\n  headCommit {\n    commit {\n      id\n    }\n    id\n  }\n  number\n}\n\nfragment SearchBarRepositoryFragment on Repository {\n  isOwnerEnterpriseManaged\n}\n\nfragment SearchListRepo on Repository {\n  viewerCanPush\n  isDisabled\n  isLocked\n  isArchived\n}\n\nfragment SearchList_exdGd on Query {\n  ...ListItemsPaginated_results_exdGd\n}\n\nfragment SearchRepositoryFragment on Repository {\n  ...SearchBarRepositoryFragment\n  ...SearchListRepo\n}\n\nfragment SearchRootFragment_exdGd on Query {\n  ...SearchList_exdGd\n}\n",
  "713b9108e5be6dc8ee8d80b9f5593a23": "query HeaderQuery(\n  $owner: String!\n  $repo: String!\n  $number: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $number) {\n      ...Header\n      id\n    }\n    id\n  }\n}\n\nfragment Header on Issue {\n  title\n  number\n  id\n  repository {\n    nameWithOwner\n    id\n  }\n  ...HeaderViewer\n  ...HeaderMetadata\n}\n\nfragment HeaderIssueType on Issue {\n  repository {\n    nameWithOwner\n    id\n  }\n  issueType {\n    name\n    color\n    id\n  }\n}\n\nfragment HeaderMenu on Issue {\n  id\n  viewerCanUpdateNext\n  repository {\n    id\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    isArchived\n  }\n  url\n}\n\nfragment HeaderMetadata on Issue {\n  url\n  ...HeaderIssueType\n  ...HeaderMenu\n  ...HeaderState\n  ...StickyHeaderTitle\n  ...RepositoryPill\n  ...LinkedPullRequests\n  ...HeaderSubIssueSummaryWithPrimary\n}\n\nfragment HeaderState on Issue {\n  state\n  stateReason\n}\n\nfragment HeaderSubIssueSummaryWithPrimary on Issue {\n  ...useSubIssuesSummary_4FLmrJ\n}\n\nfragment HeaderViewer on Issue {\n  titleHTML\n  number\n  url\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...HeaderMenu\n}\n\nfragment LinkedPullRequest on PullRequest {\n  url\n  number\n  state\n  isDraft\n  repository {\n    name\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment LinkedPullRequests on Issue {\n  repository {\n    nameWithOwner\n    id\n  }\n  linkedPullRequests: closedByPullRequestsReferences(first: 10, includeClosedPrs: false, orderByState: true) {\n    nodes {\n      repository {\n        nameWithOwner\n        id\n      }\n      state\n      isDraft\n      ...LinkedPullRequest\n      id\n    }\n  }\n}\n\nfragment RepositoryPill on Issue {\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    isPrivate\n    id\n  }\n}\n\nfragment StickyHeaderTitle on Issue {\n  titleHTML\n  number\n  url\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment useSubIssuesSummary_4FLmrJ on Issue {\n  subIssuesSummary {\n    completed\n  }\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n}\n",
  "71452b9f40a7828ac05811d1ad4f821e": "mutation deleteUserContentEditMutation(\n  $input: DeleteUserContentEditInput!\n) {\n  deleteUserContentEdit(input: $input) {\n    userContentEdit {\n      id\n      deletedAt\n      deletedBy {\n        __typename\n        login\n        avatarUrl\n        id\n      }\n      diff\n    }\n  }\n}\n",
  "724e0be679a95c453f9ec4f759cb2844": "query SubscriptionSectionTestQuery {\n  repository(owner: \"owner\", name: \"repo\") {\n    issue(number: 33) {\n      ...SubscriptionSectionFragment\n      id\n    }\n    id\n  }\n}\n\nfragment SubscriptionSectionFragment on Issue {\n  id\n  viewerThreadSubscriptionFormAction\n}\n",
  "72a4c04f492baf523cf0e099e04d8b81": "query ReactionViewerTestQuery {\n  node(id: \"reactable-node-id\") {\n    __typename\n    ...ReactionViewerGroups\n    id\n  }\n}\n\nfragment ReactionButton_Reaction on ReactionGroup {\n  content\n  reactors(first: 5) {\n    nodes {\n      __typename\n      ... on User {\n        login\n        __typename\n      }\n      ... on Bot {\n        login\n        __typename\n      }\n      ... on Organization {\n        login\n        __typename\n      }\n      ... on Mannequin {\n        login\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n    totalCount\n  }\n  viewerHasReacted\n}\n\nfragment ReactionViewerGroups on Reactable {\n  __isReactable: __typename\n  reactionGroups {\n    ...ReactionButton_Reaction\n    ...ReactionsMenuItem_Reaction\n  }\n}\n\nfragment ReactionsMenuItem_Reaction on ReactionGroup {\n  content\n  viewerHasReacted\n}\n",
  "7319648851ece31f26cbd26dc431185a": "query BranchPickerRepositoryBranchesQuery(\n  $owner: String!\n  $name: String!\n) {\n  repository(owner: $owner, name: $name) {\n    ...BranchPickerRepositoryBranchRefs\n    id\n  }\n}\n\nfragment BranchPickerRef on Ref {\n  name\n  id\n  __typename\n  target {\n    oid\n    id\n    __typename\n  }\n  repository {\n    id\n    nameWithOwner\n    defaultBranchRef {\n      name\n      id\n      target {\n        oid\n        id\n        __typename\n      }\n      associatedPullRequests {\n        totalCount\n      }\n      repository {\n        id\n      }\n    }\n  }\n  associatedPullRequests {\n    totalCount\n  }\n}\n\nfragment BranchPickerRepositoryBranchRefs on Repository {\n  id\n  defaultBranchRef {\n    ...BranchPickerRef\n    id\n  }\n  refs(refPrefix: \"refs/heads/\", first: 25) {\n    ...BranchPickerRepositoryBranches\n  }\n}\n\nfragment BranchPickerRepositoryBranches on RefConnection {\n  edges {\n    node {\n      ...BranchPickerRef\n      id\n    }\n  }\n}\n",
  "735fac658f2c5f397120b8f033e85bf6": "query MarkdownEditHistoryViewerLazyQuery(\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ... on Comment {\n      __isComment: __typename\n      ...MarkdownEditHistoryViewer_comment\n    }\n    id\n  }\n}\n\nfragment MarkdownEditHistoryViewer_comment on Comment {\n  __isComment: __typename\n  id\n  viewerCanReadUserContentEdits\n  lastEditedAt\n  lastUserContentEdit {\n    editor {\n      __typename\n      url\n      login\n      id\n    }\n    id\n  }\n}\n",
  "75024588fd4e947efce37d5062467722": "mutation deleteIssueFromClassicProjectMutation(\n  $input: DeleteProjectCardInput!\n) {\n  deleteProjectCard(input: $input) {\n    deletedCardId\n  }\n}\n",
  "7513534177928115e94be03dd1f723b1": "query OrganizationListPaginationQuery(\n  $count: Int = 100\n  $cursor: String\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ...OrganizationPickerOrganizationsPaginated_1G22uz\n    id\n  }\n}\n\nfragment OrganizationPickerOrganization on Organization {\n  id\n  avatarUrl\n  name\n}\n\nfragment OrganizationPickerOrganizationsPaginated_1G22uz on User {\n  organizations(first: $count, after: $cursor) {\n    edges {\n      node {\n        ...OrganizationPickerOrganization\n        id\n        __typename\n      }\n      cursor\n    }\n    totalCount\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n}\n",
  "78c5df54b80541d4bd39f53a5332f28c": "query ClassicProjectItemTestQuery {\n  node(id: \"classic_project_item1\") {\n    __typename\n    ...ClassicProjectItem\n    id\n  }\n}\n\nfragment ClassicProjectItem on ProjectCard {\n  project {\n    name\n    url\n    ...SingleSelectColumnProject\n    id\n  }\n  column {\n    ...SingleSelectColumn\n    id\n  }\n}\n\nfragment SingleSelectColumn on ProjectColumn {\n  id\n  name\n}\n\nfragment SingleSelectColumnProject on Project {\n  id\n  name\n  columns(first: 10) {\n    nodes {\n      ...SingleSelectColumn\n      id\n    }\n  }\n}\n",
  "7bc91d37ae2aa43f8e9182311ef8b05d": "query SearchBarCurrentRepoQuery {\n  repository(name: \"test-repo-name\", owner: \"test-repo-owner\") {\n    ...SearchBarRepositoryFragment\n    id\n  }\n}\n\nfragment SearchBarRepositoryFragment on Repository {\n  isOwnerEnterpriseManaged\n}\n",
  "7c07c16fb121c8aa89e363c48c02e377": "query OrganizationIssueTypesListQuery(\n  $cursor: String\n  $issueTypesListPageSize: Int\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ...OrganizationIssueTypesList_17pbG9\n    id\n  }\n}\n\nfragment DeletionConfirmationDialogIssueType on IssueType {\n  id\n  name\n}\n\nfragment DisableOrganizationConfirmationDialogIssueType on IssueType {\n  id\n  name\n}\n\nfragment IssueTypeItemMenuItem on IssueType {\n  id\n  isEnabled\n  name\n}\n\nfragment IssueTypesListItem on IssueType {\n  id\n  name\n  isEnabled\n  isPrivate\n  description\n  color\n  ...DisableOrganizationConfirmationDialogIssueType\n  ...DeletionConfirmationDialogIssueType\n  ...IssueTypeItemMenuItem\n}\n\nfragment IssueTypesListList on IssueTypeConnection {\n  totalCount\n  edges {\n    node {\n      id\n      name\n      ...IssueTypesListItem\n    }\n  }\n}\n\nfragment OrganizationIssueTypesList_17pbG9 on Organization {\n  issueTypes(first: $issueTypesListPageSize, after: $cursor) {\n    ...IssueTypesListList\n    edges {\n      __typename\n      cursor\n      node {\n        __typename\n        id\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  login\n  id\n}\n",
  "7c23e9fdf6a7077f700f9124bdb2e2ec": "query MarkdownEditHistoryViewerQuery(\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ... on Comment {\n      __isComment: __typename\n      includesCreatedEdit\n      userContentEdits(last: 100) {\n        totalCount\n        edges {\n          node {\n            id\n            editedAt\n            deletedAt\n            editor {\n              __typename\n              avatarUrl\n              login\n              id\n            }\n          }\n        }\n      }\n    }\n    id\n  }\n}\n",
  "80370ba492764ebbdd42f2df2cada3d2": "query enterpriseOrgFilterProviderQuery(\n  $slug: String!\n  $count: Int!\n  $query: String\n) {\n  enterprise(slug: $slug) {\n    organizations(first: $count, query: $query, orderBy: {field: CREATED_AT, direction: DESC}) {\n      edges {\n        node {\n          name\n          login\n          avatarUrl\n          id\n        }\n      }\n    }\n    id\n  }\n}\n",
  "816c5a915fa9ac873e161bc88c6c7cd7": "mutation updateIssueMilestoneMutation(\n  $input: UpdateIssueInput!\n) {\n  updateIssue(input: $input) {\n    issue {\n      id\n      milestone {\n        ...MilestonePickerMilestone\n        id\n      }\n    }\n  }\n}\n\nfragment MilestonePickerMilestone on Milestone {\n  id\n  title\n  closed\n  dueOn\n  progressPercentage\n  url\n  closedAt\n}\n",
  "81d7ed8a6e6b63c1b5a5f777e63cf5d2": "mutation updateIssueAssigneesBulkMutation(\n  $input: UpdateIssuesBulkInput!\n) {\n  updateIssuesBulk(input: $input) {\n    jobId\n  }\n}\n",
  "86b06a65f88de774689b60f84ddfc720": "mutation linkPullRequestsMutation(\n  $baseIssueOrPullRequestId: ID!\n  $linkingIds: [ID!]!\n) {\n  linkIssueOrPullRequest(input: {baseIssueOrPullRequestId: $baseIssueOrPullRequestId, linkingIds: $linkingIds}) {\n    baseIssueOrPullRequest {\n      __typename\n      ... on Issue {\n        closedByPullRequestsReferences(first: 10, includeClosedPrs: true) {\n          nodes {\n            ...PullRequestPickerPullRequest\n            id\n          }\n        }\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n}\n\nfragment PullRequestPickerPullRequest on PullRequest {\n  id\n  __typename\n  url\n  number\n  title\n  state\n  isDraft\n  isInMergeQueue\n  createdAt\n  repository {\n    id\n    name\n    nameWithOwner\n    owner {\n      login\n      __typename\n      id\n    }\n  }\n}\n",
  "8949b6eb7dd35047449be8ed93ca88e7": "mutation transferIssueMutation(\n  $input: TransferIssueInput!\n) {\n  transferIssue(input: $input) {\n    issue {\n      url\n      id\n    }\n    errors {\n      __typename\n      message\n    }\n  }\n}\n",
  "899b1931949987b18b35989babfbf733": "query SelectTeamsInOrgQuery(\n  $organizationId: ID!\n  $teamSearchQuery: String\n) {\n  node(id: $organizationId) {\n    __typename\n    ... on Organization {\n      ...SelectTeamsOrgResults_1KhD7S\n    }\n    id\n  }\n}\n\nfragment SelectTeamsOrgResults_1KhD7S on Organization {\n  teams(first: 10, query: $teamSearchQuery) {\n    edges {\n      node {\n        ...TeamCheckboxItem\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n}\n\nfragment TeamCheckboxItem on Team {\n  id\n  name\n  avatarUrl\n  organization {\n    name\n    id\n  }\n}\n",
  "8a1d9e791a2c48ab94c980238b0a2856": "query ClosedByPullRequestsReferencesStoryQuery(\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ... on Issue {\n      ...ClosedByPullRequestsReferences_4i7Unr\n      ...ClosedByPullRequestsReferencesList_4i7Unr\n    }\n    id\n  }\n}\n\nfragment ClosedByPullRequestsReferencesList_4i7Unr on Issue {\n  closedByPullRequestsReferences(first: 10, includeClosedPrs: true) {\n    edges {\n      node {\n        ...PullRequest\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment ClosedByPullRequestsReferences_4i7Unr on Issue {\n  closedByPullRequestsReferences(first: 10, includeClosedPrs: true) {\n    totalCount\n  }\n}\n\nfragment PullRequest on PullRequest {\n  id\n  title\n  number\n  merged\n  closed\n  isDraft\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  url\n}\n",
  "8b296fae9f2499af49f72d6df68d6b5c": "mutation updateProjectItemFieldValueMutation(\n  $input: UpdateProjectV2ItemFieldValueInput!\n) {\n  updateProjectV2ItemFieldValue(input: $input) {\n    projectV2Item {\n      ...ProjectItemSectionFieldsValues\n      fieldValueByName(name: \"Status\") {\n        __typename\n        ... on ProjectV2ItemFieldSingleSelectValue {\n          name\n        }\n        ... on Node {\n          __isNode: __typename\n          id\n        }\n      }\n      id\n    }\n  }\n}\n\nfragment DateFieldConfigFragment on ProjectV2Field {\n  id\n  name\n}\n\nfragment DateFieldFragment on ProjectV2ItemFieldDateValue {\n  id\n  date\n  field {\n    __typename\n    ...DateFieldConfigFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment IterationFieldConfigFragment on ProjectV2IterationField {\n  id\n  name\n  configuration {\n    iterations {\n      ...IterationFieldIterationFragment\n    }\n    completedIterations {\n      ...IterationFieldIterationFragment\n    }\n  }\n}\n\nfragment IterationFieldFragment on ProjectV2ItemFieldIterationValue {\n  iterationId\n  title\n  titleHTML\n  startDate\n  duration\n  field {\n    __typename\n    ...IterationFieldConfigFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment IterationFieldIterationFragment on ProjectV2IterationFieldIteration {\n  id\n  title\n  titleHTML\n  startDate\n  duration\n}\n\nfragment NumberFieldConfigFragment on ProjectV2Field {\n  id\n  name\n}\n\nfragment NumberFieldFragment on ProjectV2ItemFieldNumberValue {\n  id\n  number\n  field {\n    __typename\n    ...NumberFieldConfigFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ProjectItemSectionFieldsValues on ProjectV2Item {\n  fieldValues(first: 50, orderBy: {field: POSITION, direction: ASC}) {\n    edges {\n      node {\n        __typename\n        ... on ProjectV2ItemFieldTextValue {\n          id\n          field {\n            __typename\n            ... on ProjectV2Field {\n              id\n            }\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n        ...TextFieldFragment\n        ... on ProjectV2ItemFieldNumberValue {\n          id\n          field {\n            __typename\n            ... on ProjectV2Field {\n              id\n            }\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n        ...NumberFieldFragment\n        ... on ProjectV2ItemFieldDateValue {\n          id\n          field {\n            __typename\n            ... on ProjectV2Field {\n              id\n            }\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n        ...DateFieldFragment\n        ... on ProjectV2ItemFieldSingleSelectValue {\n          id\n          field {\n            __typename\n            ... on ProjectV2SingleSelectField {\n              id\n            }\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n        ...SingleSelectFieldFragment\n        ... on ProjectV2ItemFieldIterationValue {\n          id\n          field {\n            __typename\n            ... on ProjectV2IterationField {\n              id\n            }\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n        ...IterationFieldFragment\n        ... on Node {\n          __isNode: __typename\n          id\n        }\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment SingleSelectFieldFragment on ProjectV2ItemFieldSingleSelectValue {\n  id\n  optionId\n  name\n  nameHTML\n  color\n}\n\nfragment TextFieldConfigFragment on ProjectV2Field {\n  id\n  name\n}\n\nfragment TextFieldFragment on ProjectV2ItemFieldTextValue {\n  id\n  text\n  field {\n    __typename\n    ...TextFieldConfigFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n",
  "8c51695aee59f3c67f7ae2aef94f5351": "query enterpriseRepoFilterProviderQuery(\n  $slug: String!\n  $count: Int!\n  $phrase: String\n) {\n  viewer {\n    enterpriseRepositories(phrase: $phrase, slug: $slug, first: $count) {\n      nodes {\n        nameWithOwner\n        id\n      }\n    }\n    id\n  }\n}\n",
  "8d8ac17ef76bdad9f7e262474b2a3f7c": "query JobInfoWrapperQuery(\n  $ids: [ID!]!\n) {\n  nodes(ids: $ids) {\n    __typename\n    ... on Issue {\n      ...IssueRow_hOfXh\n    }\n    id\n  }\n}\n\nfragment IssueItem_1aoQTH on Issue {\n  id\n  __typename\n  title\n  titleHtml: titleHTML\n  ...IssuePullRequestTitle_1aoQTH\n  ...IssuePullRequestDescription\n  ...IssuePullRequestStateIcon\n  ...IssueTypeIndicator\n}\n\nfragment IssuePullRequestDescription on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    createdAt\n    updatedAt\n    author {\n      __typename\n      login\n      avatarUrl\n      id\n    }\n    number\n    ...MilestoneMetadata\n  }\n  ... on PullRequest {\n    createdAt\n    updatedAt\n    author {\n      __typename\n      login\n      avatarUrl\n      id\n    }\n    number\n    ...MilestoneMetadata\n    reviewDecision\n  }\n}\n\nfragment IssuePullRequestStateIcon on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  __typename\n  ... on Issue {\n    state\n    stateReason\n  }\n  ... on PullRequest {\n    isDraft\n    isInMergeQueue\n    pullRequestState: state\n  }\n}\n\nfragment IssuePullRequestTitle_1aoQTH on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  __typename\n  ... on Issue {\n    number\n    labels(first: 20, orderBy: {field: NAME, direction: ASC}) {\n      nodes {\n        ...Label\n        name\n        id\n      }\n    }\n  }\n  ... on PullRequest {\n    number\n    labels(first: 20, orderBy: {field: NAME, direction: ASC}) {\n      nodes {\n        ...Label\n        name\n        id\n      }\n    }\n  }\n}\n\nfragment IssueRow_hOfXh on Issue {\n  ...IssueItem_1aoQTH\n  number\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment IssueTypeIndicator on Issue {\n  issueType {\n    id\n    name\n    color\n  }\n}\n\nfragment Label on Label {\n  id\n  nameHTML\n  color\n  name\n  description\n}\n\nfragment MilestoneMetadata on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    milestone {\n      title\n      url\n      id\n    }\n  }\n  ... on PullRequest {\n    milestone {\n      title\n      url\n      id\n    }\n  }\n}\n",
  "8d96eece6b96cc1ca13f9b9d547e4a2d": "query LabelsListPaginationQuery(\n  $count: Int = 100\n  $cursor: String\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ...LabelPickerLabelsPaginated_1G22uz\n    id\n  }\n}\n\nfragment LabelPickerLabel on Label {\n  id\n  color\n  name\n  nameHTML\n  description\n  url\n}\n\nfragment LabelPickerLabelsPaginated_1G22uz on Repository {\n  id\n  viewerIssueCreationPermissions {\n    labelable\n  }\n  labels(first: $count, after: $cursor, orderBy: {field: NAME, direction: ASC}) {\n    nodes {\n      ...LabelPickerLabel\n      id\n    }\n    totalCount\n  }\n}\n",
  "8fb2ad8c640842c40c78555ec3de36ef": "mutation updateIssueIssueTypeMutation(\n  $input: UpdateIssueIssueTypeInput!\n) {\n  updateIssueIssueType(input: $input) {\n    issue {\n      issueType {\n        id\n      }\n      id\n    }\n  }\n}\n",
  "91480cee581058e8a5fd0c71cab52af9": "query DiscussionCategoryPickerStoryQuery(\n  $first: Int!\n  $repo: String!\n  $owner: String!\n) {\n  repository(name: $repo, owner: $owner) {\n    ...DiscussionCategoryPickerDiscussionCategories\n    id\n  }\n}\n\nfragment DiscussionCategoryPickerDiscussionCategories on Repository {\n  discussionCategories(first: $first, filterByAssignable: true) {\n    edges {\n      node {\n        id\n        name\n      }\n    }\n  }\n}\n",
  "923dd74d0a87cb3e953e98a866bbf604": "query MarkdownEditHistoryViewerTestComponentQuery(\n  $commentId: ID!\n) {\n  node(id: $commentId) {\n    __typename\n    ... on Comment {\n      __isComment: __typename\n      ...MarkdownEditHistoryViewer_comment\n    }\n    id\n  }\n}\n\nfragment MarkdownEditHistoryViewer_comment on Comment {\n  __isComment: __typename\n  id\n  viewerCanReadUserContentEdits\n  lastEditedAt\n  lastUserContentEdit {\n    editor {\n      __typename\n      url\n      login\n      id\n    }\n    id\n  }\n}\n",
  "939afe7294aa8bf7920ff5b9360e9a0f": "query IssuePickerSearchQuery(\n  $commenters: String!\n  $mentions: String!\n  $assignee: String!\n  $author: String!\n  $open: String!\n  $first: Int = 10\n  $resource: URI!\n  $queryIsUrl: Boolean!\n) {\n  ...IssuePickerQuery\n}\n\nfragment IssuePickerQuery on Query {\n  commenters: search(type: ISSUE, first: $first, query: $commenters) {\n    nodes {\n      __typename\n      ... on Issue {\n        id\n        title\n        state\n        stateReason\n        repository {\n          nameWithOwner\n          id\n        }\n        databaseId\n        number\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n  mentions: search(type: ISSUE, first: $first, query: $mentions) {\n    nodes {\n      __typename\n      ... on Issue {\n        id\n        title\n        state\n        stateReason\n        repository {\n          nameWithOwner\n          id\n        }\n        databaseId\n        number\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n  assignee: search(type: ISSUE, first: $first, query: $assignee) {\n    nodes {\n      __typename\n      ... on Issue {\n        id\n        title\n        state\n        stateReason\n        repository {\n          nameWithOwner\n          id\n        }\n        databaseId\n        number\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n  author: search(type: ISSUE, first: $first, query: $author) {\n    nodes {\n      __typename\n      ... on Issue {\n        id\n        title\n        state\n        stateReason\n        repository {\n          nameWithOwner\n          id\n        }\n        databaseId\n        number\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n  open: search(type: ISSUE, first: $first, query: $open) {\n    nodes {\n      __typename\n      ... on Issue {\n        id\n        title\n        state\n        stateReason\n        repository {\n          nameWithOwner\n          id\n        }\n        databaseId\n        number\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n  resource(url: $resource) @include(if: $queryIsUrl) {\n    __typename\n    ... on Issue {\n      id\n      title\n      state\n      stateReason\n      repository {\n        nameWithOwner\n        id\n      }\n      databaseId\n      number\n      __typename\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n",
  "93ae8ff0a01499b4ef7dea671d338c8b": "query ApplyAssigneesActionQuery(\n  $ids: [ID!]!\n) {\n  nodes(ids: $ids) {\n    __typename\n    ... on Issue {\n      id\n      assignees(first: 20) {\n        edges {\n          node {\n            ...AssigneePickerAssignee\n            id\n          }\n        }\n      }\n      repository {\n        planFeatures {\n          maximumAssignees\n        }\n        id\n      }\n    }\n    id\n  }\n}\n\nfragment AssigneePickerAssignee on User {\n  id\n  login\n  name\n  avatarUrl(size: 64)\n}\n",
  "94488330b364e21d44a402f834159915": "mutation createLabelMutation(\n  $input: CreateLabelInput!\n) {\n  createLabel(input: $input) {\n    label {\n      id\n      name\n      nameHTML\n      color\n      description\n      url\n    }\n  }\n}\n",
  "95112ed4d46018d629c28241b711a389": "query EditHistoryDialogQuery(\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ... on UserContentEdit {\n      diff\n      diffBefore\n      deletedAt\n      deletedBy {\n        __typename\n        login\n        id\n      }\n      ...EditHistoryDialogHeaderFragment\n    }\n    id\n  }\n}\n\nfragment EditHistoryDialogHeaderFragment on UserContentEdit {\n  editor {\n    __typename\n    avatarUrl\n    login\n    id\n  }\n  deletedAt\n  editedAt\n  newest\n  firstEdit\n  viewerCanDelete\n}\n",
  "961ce9122c872bdb514a09efbebb8f2c": "query CrossReferencedEventTestTwoNodesQuery {\n  node1: node(id: \"node-id1\") {\n    __typename\n    ... on CrossReferencedEvent {\n      ...CrossReferencedEvent\n    }\n    id\n  }\n  node2: node(id: \"node-id2\") {\n    __typename\n    ... on CrossReferencedEvent {\n      ...CrossReferencedEvent\n    }\n    id\n  }\n}\n\nfragment CrossReferencedEvent on CrossReferencedEvent {\n  referencedAt\n  willCloseTarget\n  databaseId\n  target {\n    __typename\n    ... on Issue {\n      repository {\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  innerSource: source {\n    __typename\n    ...CrossReferencedEventInner\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment CrossReferencedEventInner on ReferencedSubject {\n  __isReferencedSubject: __typename\n  __typename\n  ... on Issue {\n    id\n    issueTitleHTML: titleHTML\n    url\n    number\n    stateReason\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n  ... on PullRequest {\n    id\n    pullTitleHTML: titleHTML\n    url\n    number\n    state\n    isDraft\n    isInMergeQueue\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n}\n\nfragment EventActor on Actor {\n  __isActor: __typename\n  avatarUrl(size: 64)\n  login\n  __typename\n}\n\nfragment TimelineRowEventActor on Actor {\n  __isActor: __typename\n  ...EventActor\n}\n",
  "987f47bca9795277908a355565259a50": "subscription ParentIssueSubscription(\n  $issueId: ID!\n) {\n  issueUpdated(id: $issueId) {\n    issueStateUpdated {\n      ...ParentIssueFragment\n      ...HeaderParentTitle\n      id\n    }\n    issueTitleUpdated {\n      ...ParentIssueFragment\n      ...HeaderParentTitle\n      id\n    }\n    subIssuesSummaryUpdated {\n      ...useSubIssuesSummary_4FLmrJ\n      id\n    }\n  }\n}\n\nfragment HeaderParentTitle on Issue {\n  parent {\n    id\n    number\n    repository {\n      name\n      owner {\n        __typename\n        login\n        id\n      }\n      id\n    }\n    state\n    stateReason\n    title\n    url\n  }\n}\n\nfragment ParentIssueFragment on Issue {\n  id\n  title\n  url\n  number\n  repository {\n    nameWithOwner\n    id\n  }\n  state\n  stateReason\n  ...SubIssuesSummary\n}\n\nfragment SubIssuesSummary on Issue {\n  url\n  ...useSubIssuesSummary_4FLmrJ\n}\n\nfragment useSubIssuesSummary_4FLmrJ on Issue {\n  subIssuesSummary {\n    completed\n  }\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n}\n",
  "9885454b814631a2ba78f2fbe3e1a13f": "query ApplyLabelsActionLabelQuery(\n  $ids: [ID!]!\n) {\n  nodes(ids: $ids) {\n    __typename\n    ... on Issue {\n      id\n      labels(first: 20, orderBy: {field: NAME, direction: ASC}) {\n        nodes {\n          ...LabelPickerLabel\n          id\n        }\n      }\n    }\n    id\n  }\n}\n\nfragment LabelPickerLabel on Label {\n  id\n  color\n  name\n  nameHTML\n  description\n  url\n}\n",
  "991812467d206a4a48bb15452f1a89df": "query SearchTestQuery(\n  $query: String = \"state:open archived:false assignee:@me sort:updated-desc\"\n  $first: Int = 25\n  $labelPageSize: Int = 20\n  $skip: Int = null\n) {\n  ...SearchRootFragment_48pks9\n}\n\nfragment IssueItem_WbnLh on Issue {\n  id\n  __typename\n  title\n  titleHtml: titleHTML\n  ...IssuePullRequestTitle_WbnLh\n  ...IssuePullRequestDescription\n  ...IssuePullRequestStateIcon\n  ...IssueTypeIndicator\n}\n\nfragment IssuePullRequestDescription on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    createdAt\n    updatedAt\n    author {\n      __typename\n      login\n      avatarUrl\n      id\n    }\n    number\n    ...MilestoneMetadata\n  }\n  ... on PullRequest {\n    createdAt\n    updatedAt\n    author {\n      __typename\n      login\n      avatarUrl\n      id\n    }\n    number\n    ...MilestoneMetadata\n    reviewDecision\n  }\n}\n\nfragment IssuePullRequestStateIcon on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  __typename\n  ... on Issue {\n    state\n    stateReason\n  }\n  ... on PullRequest {\n    isDraft\n    isInMergeQueue\n    pullRequestState: state\n  }\n}\n\nfragment IssuePullRequestTitle_WbnLh on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  __typename\n  ... on Issue {\n    number\n    labels(first: $labelPageSize, orderBy: {field: NAME, direction: ASC}) {\n      nodes {\n        ...Label\n        name\n        id\n      }\n    }\n  }\n  ... on PullRequest {\n    number\n    labels(first: $labelPageSize, orderBy: {field: NAME, direction: ASC}) {\n      nodes {\n        ...Label\n        name\n        id\n      }\n    }\n  }\n}\n\nfragment IssueRow_bj3h3 on Issue {\n  ...IssueItem_WbnLh\n  number\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment IssueTypeIndicator on Issue {\n  issueType {\n    id\n    name\n    color\n  }\n}\n\nfragment Label on Label {\n  id\n  nameHTML\n  color\n  name\n  description\n}\n\nfragment ListItemsPaginated_results_48pks9 on Query {\n  search(first: $first, query: $query, type: ISSUE, skip: $skip) @defer(label: \"Issue_searchResults\") {\n    edges {\n      node {\n        __typename\n        ... on Issue {\n          id\n          __typename\n          number\n          ...IssueRow_bj3h3\n        }\n        ... on PullRequest {\n          id\n          __typename\n          number\n          ...PullRequestRow_pullRequest_WbnLh\n        }\n        ... on Node {\n          __isNode: __typename\n          id\n        }\n      }\n      cursor\n    }\n    pageInfo {\n      startCursor\n      endCursor\n      hasPreviousPage\n      hasNextPage\n    }\n    issueCount\n  }\n}\n\nfragment MilestoneMetadata on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    milestone {\n      title\n      url\n      id\n    }\n  }\n  ... on PullRequest {\n    milestone {\n      title\n      url\n      id\n    }\n  }\n}\n\nfragment PullRequestItem_WbnLh on PullRequest {\n  id\n  __typename\n  headCommit {\n    commit {\n      id\n      statusCheckRollup {\n        state\n        contexts {\n          checkRunCount\n          checkRunCountsByState {\n            count\n            state\n          }\n        }\n        id\n      }\n    }\n    id\n  }\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  title\n  titleHTML\n  ...IssuePullRequestTitle_WbnLh\n  ...IssuePullRequestDescription\n  ...IssuePullRequestStateIcon\n}\n\nfragment PullRequestRow_pullRequest_WbnLh on PullRequest {\n  __typename\n  id\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...PullRequestItem_WbnLh\n  headCommit {\n    commit {\n      id\n    }\n    id\n  }\n  number\n}\n\nfragment SearchList_48pks9 on Query {\n  ...ListItemsPaginated_results_48pks9\n}\n\nfragment SearchRootFragment_48pks9 on Query {\n  ...SearchList_48pks9\n}\n",
  "9a1dbe2cf211192f79dde5950d19c2a0": "query SearchCurrentRepoTestQuery {\n  repository(name: \"test-repo-name\", owner: \"test-repo-owner\") {\n    ...SearchRepositoryFragment\n    id\n  }\n}\n\nfragment SearchBarRepositoryFragment on Repository {\n  isOwnerEnterpriseManaged\n}\n\nfragment SearchListRepo on Repository {\n  viewerCanPush\n  isDisabled\n  isLocked\n  isArchived\n}\n\nfragment SearchRepositoryFragment on Repository {\n  ...SearchBarRepositoryFragment\n  ...SearchListRepo\n}\n",
  "9a54433df8da239fa56d42bd6e199a6e": "query ClientSideRelayDataGeneratorViewQuery(\n  $id: ID = \"assigned\"\n) {\n  node(id: $id) {\n    __typename\n    ... on Shortcutable {\n      __isShortcutable: __typename\n      ...ListCurrentViewFragment\n      ...IssueDetailCurrentViewFragment\n      ...EditViewButtonCurrentViewFragment\n    }\n    id\n  }\n}\n\nfragment EditViewButtonCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  id\n  name\n  description\n  icon\n  color\n  query\n}\n\nfragment HeaderContentCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  name\n  description\n  id\n}\n\nfragment HeaderCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  id\n  name\n  query\n}\n\nfragment IconAndColorPickerViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  icon\n  color\n  id\n}\n\nfragment IssueDetailCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  name\n  query\n}\n\nfragment ListCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  ...SearchBarCurrentViewFragment\n  ...HeaderCurrentViewFragment\n  ...EditViewButtonCurrentViewFragment\n  ...HeaderContentCurrentViewFragment\n  ...IconAndColorPickerViewFragment\n}\n\nfragment SearchBarCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  id\n  name\n  description\n  icon\n  color\n  query\n  scopingRepository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n",
  "9b94bdfc7913807f1397e5d29e4dd3c0": "query SavedViewsPaginatedQuery(\n  $cursor: String\n  $searchTypes: [SearchShortcutType!]!\n  $viewsPageSize: Int\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ...SavedViewsPaginated_FuKkL\n    id\n  }\n}\n\nfragment SavedViewRow on SearchShortcut {\n  id\n  icon\n  name\n  color\n  description\n  query\n  scopingRepository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment SavedViewsPaginated_FuKkL on UserDashboard {\n  shortcuts(first: $viewsPageSize, after: $cursor, searchTypes: $searchTypes) {\n    edges {\n      node {\n        id\n        name\n        query\n        ...SavedViewRow\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n}\n",
  "9c4415bd71b66274e92d02f8c155acff": "mutation createTeamViewMutation(\n  $input: CreateTeamDashboardSearchShortcutInput!\n) {\n  createTeamDashboardSearchShortcut(input: $input) {\n    shortcutEdge {\n      node {\n        ...SharedViewTreeItem\n        id\n      }\n    }\n    shortcut {\n      id\n      ...ListCurrentViewFragment\n      ...IssueDetailCurrentViewFragment\n      ...EditViewButtonCurrentViewFragment\n    }\n  }\n}\n\nfragment EditViewButtonCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  id\n  name\n  description\n  icon\n  color\n  query\n}\n\nfragment HeaderContentCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  name\n  description\n  id\n}\n\nfragment HeaderCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  id\n  name\n  query\n}\n\nfragment IconAndColorPickerViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  icon\n  color\n  id\n}\n\nfragment IssueDetailCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  name\n  query\n}\n\nfragment ListCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  ...SearchBarCurrentViewFragment\n  ...HeaderCurrentViewFragment\n  ...EditViewButtonCurrentViewFragment\n  ...HeaderContentCurrentViewFragment\n  ...IconAndColorPickerViewFragment\n}\n\nfragment SearchBarCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  id\n  name\n  description\n  icon\n  color\n  query\n  scopingRepository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment SharedViewTreeItem on TeamSearchShortcut {\n  id\n  icon\n  name\n  query\n  color\n}\n",
  "9d182f4724c12aebdd96e805c4f3e470": "mutation updateSelectedTeamsMutation(\n  $input: UpdateDashboardSelectedTeamsInput!\n  $teamViewPageSize: Int!\n  $searchTypes: [SearchShortcutType!]!\n) {\n  updateDashboardSelectedTeams(input: $input) {\n    removedTeamIds\n    dashboardTeamEdges {\n      node {\n        id\n        ...SharedViewTreeRoot_346Jaw\n        ...RemoveTeamRow\n      }\n    }\n  }\n}\n\nfragment RemoveTeamRow on Team {\n  id\n  name\n  avatarUrl\n  organization {\n    name\n    id\n  }\n}\n\nfragment SharedViewTreeItem on TeamSearchShortcut {\n  id\n  icon\n  name\n  query\n  color\n}\n\nfragment SharedViewTreeRoot_346Jaw on Team {\n  id\n  ...TeamCheckboxItem\n  isViewerMember\n  viewerCanAdminister\n  name\n  avatarUrl\n  organization {\n    name\n    id\n  }\n  dashboard {\n    ...SharedViewTree_346Jaw\n    id\n  }\n}\n\nfragment SharedViewTree_346Jaw on TeamDashboard {\n  shortcuts(first: $teamViewPageSize, searchTypes: $searchTypes) {\n    edges {\n      node {\n        ...SharedViewTreeItem\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n}\n\nfragment TeamCheckboxItem on Team {\n  id\n  name\n  avatarUrl\n  organization {\n    name\n    id\n  }\n}\n",
  "9ef106ee92414640a838c24d1eb80da7": "mutation updateIssueLabelsBulkMutation(\n  $input: UpdateIssuesBulkInput!\n) {\n  updateIssuesBulk(input: $input) {\n    jobId\n  }\n}\n",
  "9f1e65601753e8d5ac4e48284dd4b25e": "query IssuePickerSelectedIssuesQuery(\n  $ids: [ID!]!\n) {\n  nodes(ids: $ids) {\n    __typename\n    ... on Issue {\n      id\n      title\n      state\n      stateReason\n      repository {\n        nameWithOwner\n        id\n      }\n      databaseId\n      number\n      __typename\n    }\n    id\n  }\n}\n",
  "9f280c396ededc4627ecab42d4a37ca8": "mutation convertIssueToDiscussionMutation(\n  $input: ConvertIssueToDiscussionInput!\n) {\n  convertIssueToDiscussion(input: $input) {\n    discussion {\n      url\n      id\n    }\n    errors {\n      __typename\n      message\n    }\n  }\n}\n",
  "9f6c5221285a1989cb5c1d2950bf0b02": "query ProjectPickerQuery(\n  $owner: String!\n  $repo: String!\n  $query: String\n) {\n  repository(owner: $owner, name: $repo) {\n    projectsV2(first: 5, query: $query, orderBy: {field: RELEVANCE, direction: DESC}) {\n      nodes {\n        ...ProjectPickerProject\n        id\n      }\n    }\n    recentProjects(first: 5) {\n      edges {\n        node {\n          ...ProjectPickerProject\n          id\n        }\n      }\n    }\n    projects(first: 5, search: $query) {\n      nodes {\n        ...ProjectPickerClassicProject\n        id\n      }\n    }\n    owner {\n      __typename\n      ... on Organization {\n        projectsV2(first: 5, orderBy: {field: RELEVANCE, direction: DESC}, query: $query) {\n          edges {\n            node {\n              ...ProjectPickerProject\n              id\n            }\n          }\n        }\n        recentProjects(first: 5) {\n          edges {\n            node {\n              ...ProjectPickerProject\n              id\n            }\n          }\n        }\n        projects(first: 5, search: $query) {\n          nodes {\n            ...ProjectPickerClassicProject\n            id\n          }\n        }\n      }\n      ... on User {\n        projectsV2(first: 5, orderBy: {field: RELEVANCE, direction: DESC}, query: $query) {\n          edges {\n            node {\n              ...ProjectPickerProject\n              id\n            }\n          }\n        }\n        recentProjects(first: 5) {\n          edges {\n            node {\n              ...ProjectPickerProject\n              id\n            }\n          }\n        }\n        projects(first: 5, search: $query) {\n          nodes {\n            ...ProjectPickerClassicProject\n            id\n          }\n        }\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment ProjectPickerClassicProject on Project {\n  id\n  title: name\n  closed\n  number\n  url\n  viewerCanUpdate\n  columns(first: 10) {\n    nodes {\n      id\n      name\n    }\n  }\n  __typename\n}\n\nfragment ProjectPickerProject on ProjectV2 {\n  id\n  title\n  closed\n  number\n  url\n  viewerCanUpdate\n  __typename\n}\n",
  "9fd211e9ada999fbd9d0193e7eaff36e": "subscription PullRequestRowCommentsSubscription(\n  $id: ID!\n) {\n  pullRequestCommentsUpdated(id: $id) {\n    id\n    totalCommentsCount\n  }\n}\n",
  "9fe16bdd876c2b7599593c7e07db392b": "query IssuePullRequestStateIconTestQuery(\n  $id: ID!\n) {\n  data: node(id: $id) {\n    __typename\n    ... on Issue {\n      ...IssuePullRequestStateIcon\n    }\n    id\n  }\n}\n\nfragment IssuePullRequestStateIcon on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  __typename\n  ... on Issue {\n    state\n    stateReason\n  }\n  ... on PullRequest {\n    isDraft\n    isInMergeQueue\n    pullRequestState: state\n  }\n}\n",
  "a1404ba230fd4248febc2adc9eea7281": "mutation deleteIssueMutation(\n  $input: DeleteIssueInput!\n) {\n  deleteIssue(input: $input) {\n    issue {\n      id\n    }\n  }\n}\n",
  "a16358d5269ef6d090e912428e8f6973": "query IssueItemMetadataTestQuery(\n  $id: ID!\n) {\n  data: node(id: $id) {\n    __typename\n    ... on Issue {\n      ...IssueItemMetadata_17LVvj\n    }\n    id\n  }\n}\n\nfragment Assignee on User {\n  login\n  avatarUrl(size: 64)\n}\n\nfragment Assignees_fhS7i on Assignable {\n  __isAssignable: __typename\n  assignees(first: 10) {\n    edges {\n      node {\n        id\n        ...Assignee\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  ... on Node {\n    __isNode: __typename\n    id\n  }\n}\n\nfragment ClosedByPullRequestsReferences on Issue {\n  closedByPullRequestsReferences(first: 0, includeClosedPrs: true) {\n    totalCount\n  }\n}\n\nfragment IssueItemMetadata_17LVvj on Issue {\n  id\n  totalCommentsCount\n  ...Assignees_fhS7i\n  ...ClosedByPullRequestsReferences\n}\n",
  "a2b64ff526446dae5dc530c4d6c15a86": "query DevelopmentPickerQuery(\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ... on Issue {\n      repository {\n        name\n        nameWithOwner\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    id\n  }\n}\n",
  "a3a55f038dcb1f435004c142f4f79b66": "query InternalIssueNewPageUrlArgumentsMetadataQuery(\n  $owner: String!\n  $name: String!\n  $withAnyMetadata: Boolean = false\n  $withAssignees: Boolean = false\n  $assigneeLogins: String = \"\"\n  $withLabels: Boolean = false\n  $labelNames: String = \"\"\n  $withMilestone: Boolean = false\n  $milestoneTitle: String = \"\"\n  $type: String = \"\"\n  $withType: Boolean = false\n  $withProjects: Boolean = false\n  $projectNumbers: [Int!] = []\n  $withTriagePermission: Boolean = false\n) {\n  repository(owner: $owner, name: $name) @include(if: $withAnyMetadata) {\n    viewerIssueCreationPermissions {\n      assignable @include(if: $withAssignees)\n      labelable @include(if: $withLabels)\n      milestoneable @include(if: $withMilestone)\n      triageable @include(if: $withTriagePermission)\n      typeable @include(if: $withType)\n    }\n    assignableUsers(first: 10, loginNames: $assigneeLogins) @include(if: $withAssignees) {\n      nodes {\n        ...AssigneePickerAssignee\n        id\n      }\n    }\n    labels(first: 20, names: $labelNames) @include(if: $withLabels) {\n      nodes {\n        ...LabelPickerLabel\n        id\n      }\n    }\n    milestoneByTitle(title: $milestoneTitle) @include(if: $withMilestone) {\n      ...MilestonePickerMilestone\n      id\n    }\n    issueType(name: $type) @include(if: $withType) {\n      ...IssueTypePickerIssueType\n      id\n    }\n    owner {\n      __typename\n      ... on ProjectV2Owner {\n        __isProjectV2Owner: __typename\n        projectsV2ByNumber(first: 20, numbers: $projectNumbers) @include(if: $withProjects) {\n          nodes {\n            ...ProjectPickerProject\n            id\n          }\n        }\n      }\n      id\n    }\n    id\n  }\n}\n\nfragment AssigneePickerAssignee on User {\n  id\n  login\n  name\n  avatarUrl(size: 64)\n}\n\nfragment IssueTypePickerIssueType on IssueType {\n  id\n  name\n  isEnabled\n  description\n  color\n}\n\nfragment LabelPickerLabel on Label {\n  id\n  color\n  name\n  nameHTML\n  description\n  url\n}\n\nfragment MilestonePickerMilestone on Milestone {\n  id\n  title\n  closed\n  dueOn\n  progressPercentage\n  url\n  closedAt\n}\n\nfragment ProjectPickerProject on ProjectV2 {\n  id\n  title\n  closed\n  number\n  url\n  viewerCanUpdate\n  __typename\n}\n",
  "a50bb5315cde2af3a286144d880bba7e": "query IssueRowTestQuery(\n  $id: ID!\n) {\n  issue: node(id: $id) {\n    __typename\n    ... on Issue {\n      ...IssueRow_jrBcu\n    }\n    id\n  }\n}\n\nfragment IssueItem_3rKiOK on Issue {\n  id\n  __typename\n  title\n  titleHtml: titleHTML\n  ...IssuePullRequestTitle_3rKiOK\n  ...IssuePullRequestDescription\n  ...IssuePullRequestStateIcon\n  ...IssueTypeIndicator\n}\n\nfragment IssuePullRequestDescription on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    createdAt\n    updatedAt\n    author {\n      __typename\n      login\n      avatarUrl\n      id\n    }\n    number\n    ...MilestoneMetadata\n  }\n  ... on PullRequest {\n    createdAt\n    updatedAt\n    author {\n      __typename\n      login\n      avatarUrl\n      id\n    }\n    number\n    ...MilestoneMetadata\n    reviewDecision\n  }\n}\n\nfragment IssuePullRequestStateIcon on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  __typename\n  ... on Issue {\n    state\n    stateReason\n  }\n  ... on PullRequest {\n    isDraft\n    isInMergeQueue\n    pullRequestState: state\n  }\n}\n\nfragment IssuePullRequestTitle_3rKiOK on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  __typename\n  ... on Issue {\n    number\n    labels(first: 5, orderBy: {field: NAME, direction: ASC}) {\n      nodes {\n        ...Label\n        name\n        id\n      }\n    }\n  }\n  ... on PullRequest {\n    number\n    labels(first: 5, orderBy: {field: NAME, direction: ASC}) {\n      nodes {\n        ...Label\n        name\n        id\n      }\n    }\n  }\n}\n\nfragment IssueRow_jrBcu on Issue {\n  ...IssueItem_3rKiOK\n  number\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment IssueTypeIndicator on Issue {\n  issueType {\n    id\n    name\n    color\n  }\n}\n\nfragment Label on Label {\n  id\n  nameHTML\n  color\n  name\n  description\n}\n\nfragment MilestoneMetadata on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    milestone {\n      title\n      url\n      id\n    }\n  }\n  ... on PullRequest {\n    milestone {\n      title\n      url\n      id\n    }\n  }\n}\n",
  "a94c38f511b0bf82679e4034de7dcaae": "subscription PullRequestRowTitleUpdatedSubscription(\n  $id: ID!\n) {\n  pullRequestTitleUpdated(id: $id) {\n    id\n    title\n    titleHTML\n  }\n}\n",
  "aa600e41891c24c180b03211292d3ba8": "mutation moveProjectCardMutation(\n  $input: MoveProjectCardInput!\n) {\n  moveProjectCard(input: $input) {\n    cardEdge {\n      node {\n        ...ClassicProjectItem\n        id\n      }\n    }\n  }\n}\n\nfragment ClassicProjectItem on ProjectCard {\n  project {\n    name\n    url\n    ...SingleSelectColumnProject\n    id\n  }\n  column {\n    ...SingleSelectColumn\n    id\n  }\n}\n\nfragment SingleSelectColumn on ProjectColumn {\n  id\n  name\n}\n\nfragment SingleSelectColumnProject on Project {\n  id\n  name\n  columns(first: 10) {\n    nodes {\n      ...SingleSelectColumn\n      id\n    }\n  }\n}\n",
  "aa8faac63fbfdb6cd01ef7774346c067": "query RepositoryPickerTopRepositoriesQuery(\n  $topRepositoriesFirst: Int = 10\n  $hasIssuesEnabled: Boolean\n  $owner: String = null\n) {\n  viewer {\n    ...RepositoryPickerTopRepositories_3OHFjY\n    id\n  }\n}\n\nfragment RepositoryPickerRepository on Repository {\n  id\n  databaseId\n  name\n  nameWithOwner\n  owner {\n    __typename\n    databaseId\n    login\n    avatarUrl(size: 64)\n    id\n  }\n  isPrivate\n  isArchived\n  isInOrganization\n  hasIssuesEnabled\n  slashCommandsEnabled\n  viewerCanPush\n  viewerIssueCreationPermissions {\n    labelable\n    milestoneable\n    assignable\n    triageable\n    typeable\n  }\n  securityPolicyUrl\n  contributingFileUrl\n  codeOfConductFileUrl\n  shortDescriptionHTML\n  planFeatures {\n    maximumAssignees\n  }\n}\n\nfragment RepositoryPickerTopRepositories_3OHFjY on User {\n  topRepositories(first: $topRepositoriesFirst, hasIssuesEnabled: $hasIssuesEnabled, orderBy: {field: UPDATED_AT, direction: DESC}, owner: $owner) {\n    edges {\n      node {\n        ...RepositoryPickerRepository\n        id\n      }\n    }\n  }\n}\n",
  "ac159a15acbad87d92409f608ddee1dd": "mutation setParentMutation(\n  $input: AddSubIssueInput!\n) {\n  addSubIssue(input: $input) {\n    subIssue {\n      ...RelationshipsSectionFragment\n      id\n    }\n  }\n}\n\nfragment ParentIssueFragment on Issue {\n  id\n  title\n  url\n  number\n  repository {\n    nameWithOwner\n    id\n  }\n  state\n  stateReason\n  ...SubIssuesSummary\n}\n\nfragment RelationshipsSectionFragment on Issue {\n  id\n  repository {\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  parent {\n    id\n    ...ParentIssueFragment\n  }\n  ...useCanEditSubIssues\n}\n\nfragment SubIssuesSummary on Issue {\n  url\n  ...useSubIssuesSummary_4FLmrJ\n}\n\nfragment useCanEditSubIssues on Issue {\n  viewerCanUpdateMetadata\n  repository {\n    isArchived\n    id\n  }\n}\n\nfragment useSubIssuesSummary_4FLmrJ on Issue {\n  subIssuesSummary {\n    completed\n  }\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n}\n",
  "ae867079d5e28b86561867090a013723": "query ProjectItemSectionViewTestQuery {\n  node(id: \"project_item1\") {\n    __typename\n    ...ProjectItemSectionView\n    id\n  }\n}\n\nfragment ProjectItemSectionView on ProjectV2Item {\n  id\n  isArchived\n  project {\n    id\n    title\n    template\n    viewerCanUpdate\n    url\n    field(name: \"Status\") {\n      __typename\n      ...SingleSelectFieldConfigFragment\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n  fieldValueByName(name: \"Status\") {\n    __typename\n    ...SingleSelectFieldFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment SingleSelectFieldConfigFragment on ProjectV2SingleSelectField {\n  id\n  name\n  options {\n    ...SingleSelectFieldOptionFragment\n    id\n    name\n    description\n    color\n  }\n}\n\nfragment SingleSelectFieldFragment on ProjectV2ItemFieldSingleSelectValue {\n  id\n  optionId\n  name\n  nameHTML\n  color\n}\n\nfragment SingleSelectFieldOptionFragment on ProjectV2SingleSelectFieldOption {\n  id\n  optionId\n  name\n  nameHTML\n  color\n  descriptionHTML\n}\n",
  "aeb19f6559807bc569b0ed324683446e": "query IssueDashboardPageQuery(\n  $query: String = \"state:open archived:false assignee:@me sort:updated-desc\"\n  $first: Int = 25\n  $labelPageSize: Int = 20\n  $skip: Int = null\n) {\n  ...ListQuery_48pks9\n}\n\nfragment IssueItem_WbnLh on Issue {\n  id\n  __typename\n  title\n  titleHtml: titleHTML\n  ...IssuePullRequestTitle_WbnLh\n  ...IssuePullRequestDescription\n  ...IssuePullRequestStateIcon\n  ...IssueTypeIndicator\n}\n\nfragment IssuePullRequestDescription on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    createdAt\n    updatedAt\n    author {\n      __typename\n      login\n      avatarUrl\n      id\n    }\n    number\n    ...MilestoneMetadata\n  }\n  ... on PullRequest {\n    createdAt\n    updatedAt\n    author {\n      __typename\n      login\n      avatarUrl\n      id\n    }\n    number\n    ...MilestoneMetadata\n    reviewDecision\n  }\n}\n\nfragment IssuePullRequestStateIcon on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  __typename\n  ... on Issue {\n    state\n    stateReason\n  }\n  ... on PullRequest {\n    isDraft\n    isInMergeQueue\n    pullRequestState: state\n  }\n}\n\nfragment IssuePullRequestTitle_WbnLh on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  __typename\n  ... on Issue {\n    number\n    labels(first: $labelPageSize, orderBy: {field: NAME, direction: ASC}) {\n      nodes {\n        ...Label\n        name\n        id\n      }\n    }\n  }\n  ... on PullRequest {\n    number\n    labels(first: $labelPageSize, orderBy: {field: NAME, direction: ASC}) {\n      nodes {\n        ...Label\n        name\n        id\n      }\n    }\n  }\n}\n\nfragment IssueRow_bj3h3 on Issue {\n  ...IssueItem_WbnLh\n  number\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment IssueTypeIndicator on Issue {\n  issueType {\n    id\n    name\n    color\n  }\n}\n\nfragment Label on Label {\n  id\n  nameHTML\n  color\n  name\n  description\n}\n\nfragment ListItemsPaginated_results_48pks9 on Query {\n  search(first: $first, query: $query, type: ISSUE, skip: $skip) @defer(label: \"Issue_searchResults\") {\n    edges {\n      node {\n        __typename\n        ... on Issue {\n          id\n          __typename\n          number\n          ...IssueRow_bj3h3\n        }\n        ... on PullRequest {\n          id\n          __typename\n          number\n          ...PullRequestRow_pullRequest_WbnLh\n        }\n        ... on Node {\n          __isNode: __typename\n          id\n        }\n      }\n      cursor\n    }\n    pageInfo {\n      startCursor\n      endCursor\n      hasPreviousPage\n      hasNextPage\n    }\n    issueCount\n  }\n}\n\nfragment ListQuery_48pks9 on Query {\n  ...SearchRootFragment_48pks9\n}\n\nfragment MilestoneMetadata on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    milestone {\n      title\n      url\n      id\n    }\n  }\n  ... on PullRequest {\n    milestone {\n      title\n      url\n      id\n    }\n  }\n}\n\nfragment PullRequestItem_WbnLh on PullRequest {\n  id\n  __typename\n  headCommit {\n    commit {\n      id\n      statusCheckRollup {\n        state\n        contexts {\n          checkRunCount\n          checkRunCountsByState {\n            count\n            state\n          }\n        }\n        id\n      }\n    }\n    id\n  }\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  title\n  titleHTML\n  ...IssuePullRequestTitle_WbnLh\n  ...IssuePullRequestDescription\n  ...IssuePullRequestStateIcon\n}\n\nfragment PullRequestRow_pullRequest_WbnLh on PullRequest {\n  __typename\n  id\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...PullRequestItem_WbnLh\n  headCommit {\n    commit {\n      id\n    }\n    id\n  }\n  number\n}\n\nfragment SearchList_48pks9 on Query {\n  ...ListItemsPaginated_results_48pks9\n}\n\nfragment SearchRootFragment_48pks9 on Query {\n  ...SearchList_48pks9\n}\n",
  "b07a22c8484ac2b45e8ddf1ce2a070dd": "query PullRequestRowTestQuery(\n  $id: ID!\n) {\n  pullRequest: node(id: $id) {\n    __typename\n    ... on PullRequest {\n      ...PullRequestRow_pullRequest_3rKiOK\n    }\n    id\n  }\n}\n\nfragment IssuePullRequestDescription on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    createdAt\n    updatedAt\n    author {\n      __typename\n      login\n      avatarUrl\n      id\n    }\n    number\n    ...MilestoneMetadata\n  }\n  ... on PullRequest {\n    createdAt\n    updatedAt\n    author {\n      __typename\n      login\n      avatarUrl\n      id\n    }\n    number\n    ...MilestoneMetadata\n    reviewDecision\n  }\n}\n\nfragment IssuePullRequestStateIcon on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  __typename\n  ... on Issue {\n    state\n    stateReason\n  }\n  ... on PullRequest {\n    isDraft\n    isInMergeQueue\n    pullRequestState: state\n  }\n}\n\nfragment IssuePullRequestTitle_3rKiOK on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  __typename\n  ... on Issue {\n    number\n    labels(first: 5, orderBy: {field: NAME, direction: ASC}) {\n      nodes {\n        ...Label\n        name\n        id\n      }\n    }\n  }\n  ... on PullRequest {\n    number\n    labels(first: 5, orderBy: {field: NAME, direction: ASC}) {\n      nodes {\n        ...Label\n        name\n        id\n      }\n    }\n  }\n}\n\nfragment Label on Label {\n  id\n  nameHTML\n  color\n  name\n  description\n}\n\nfragment MilestoneMetadata on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    milestone {\n      title\n      url\n      id\n    }\n  }\n  ... on PullRequest {\n    milestone {\n      title\n      url\n      id\n    }\n  }\n}\n\nfragment PullRequestItem_3rKiOK on PullRequest {\n  id\n  __typename\n  headCommit {\n    commit {\n      id\n      statusCheckRollup {\n        state\n        contexts {\n          checkRunCount\n          checkRunCountsByState {\n            count\n            state\n          }\n        }\n        id\n      }\n    }\n    id\n  }\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  title\n  titleHTML\n  ...IssuePullRequestTitle_3rKiOK\n  ...IssuePullRequestDescription\n  ...IssuePullRequestStateIcon\n}\n\nfragment PullRequestRow_pullRequest_3rKiOK on PullRequest {\n  __typename\n  id\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...PullRequestItem_3rKiOK\n  headCommit {\n    commit {\n      id\n    }\n    id\n  }\n  number\n}\n",
  "b1f373ae532cec7573afcf98210296ba": "query TextFieldTestQuery {\n  node(id: \"node-id\") {\n    __typename\n    ... on ProjectV2Item {\n      project {\n        viewerCanUpdate\n        url\n        id\n        fields(first: 50, orderBy: {field: POSITION, direction: ASC}) {\n          edges {\n            node {\n              __typename\n              ... on ProjectV2Field {\n                id\n                name\n                dataType\n                ...TextFieldConfigFragment\n              }\n              ... on Node {\n                __isNode: __typename\n                id\n              }\n            }\n          }\n        }\n      }\n      fieldValues(first: 50, orderBy: {field: POSITION, direction: ASC}) {\n        edges {\n          node {\n            __typename\n            ... on ProjectV2ItemFieldTextValue {\n              id\n              field {\n                __typename\n                ... on ProjectV2Field {\n                  id\n                }\n                ... on Node {\n                  __isNode: __typename\n                  id\n                }\n              }\n            }\n            ...TextFieldFragment\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n      }\n    }\n    id\n  }\n}\n\nfragment TextFieldConfigFragment on ProjectV2Field {\n  id\n  name\n}\n\nfragment TextFieldFragment on ProjectV2ItemFieldTextValue {\n  id\n  text\n  field {\n    __typename\n    ...TextFieldConfigFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n",
  "b28703fe6ea959e402c58aeaf0272897": "query SelectTeamsForViewerQuery(\n  $organizationId: ID!\n) {\n  viewer {\n    ...SelectTeamsViewerResults_4xMPKw\n    id\n  }\n}\n\nfragment SelectTeamsViewerResults_4xMPKw on User {\n  teams(first: 10, organizationID: $organizationId) {\n    edges {\n      node {\n        id\n        ...TeamCheckboxItem\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment TeamCheckboxItem on Team {\n  id\n  name\n  avatarUrl\n  organization {\n    name\n    id\n  }\n}\n",
  "b3c56c101a97603233bebecea3252932": "mutation addIssuesToProjectsBulkByQueryMutation(\n  $input: UpdateIssuesBulkByQueryInput!\n) {\n  updateIssuesBulkByQuery(input: $input) {\n    jobId\n  }\n}\n",
  "b4a8d70a2993b3985ea6c33da5dff412": "mutation updateIssueMilestoneBulkMutation(\n  $input: UpdateIssuesBulkInput!\n) {\n  updateIssuesBulk(input: $input) {\n    jobId\n  }\n}\n",
  "b63b92a4949aadd2031a13e896b5fea9": "query SavedViewsQuery(\n  $viewsPageSize: Int = 25\n  $selectedTeamsPageSize: Int = 25\n  $teamViewPageSize: Int = 25\n  $searchTypes: [SearchShortcutType!] = [ISSUES, PULL_REQUESTS]\n) {\n  viewer {\n    dashboard {\n      ...SavedViewsPaginated_1gfwbq\n      ...SharedViewTreeList_u1Bkr\n      id\n    }\n    id\n  }\n}\n\nfragment RemoveTeamRow on Team {\n  id\n  name\n  avatarUrl\n  organization {\n    name\n    id\n  }\n}\n\nfragment SavedViewRow on SearchShortcut {\n  id\n  icon\n  name\n  color\n  description\n  query\n  scopingRepository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment SavedViewsPaginated_1gfwbq on UserDashboard {\n  shortcuts(first: $viewsPageSize, searchTypes: $searchTypes) {\n    edges {\n      node {\n        id\n        name\n        query\n        ...SavedViewRow\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n}\n\nfragment SharedViewTreeItem on TeamSearchShortcut {\n  id\n  icon\n  name\n  query\n  color\n}\n\nfragment SharedViewTreeList_u1Bkr on UserDashboard {\n  selectedTeams(first: $selectedTeamsPageSize) {\n    edges {\n      node {\n        ...SharedViewTreeRoot_346Jaw\n        ...RemoveTeamRow\n        id\n        organization {\n          name\n          id\n        }\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n}\n\nfragment SharedViewTreeRoot_346Jaw on Team {\n  id\n  ...TeamCheckboxItem\n  isViewerMember\n  viewerCanAdminister\n  name\n  avatarUrl\n  organization {\n    name\n    id\n  }\n  dashboard {\n    ...SharedViewTree_346Jaw\n    id\n  }\n}\n\nfragment SharedViewTree_346Jaw on TeamDashboard {\n  shortcuts(first: $teamViewPageSize, searchTypes: $searchTypes) {\n    edges {\n      node {\n        ...SharedViewTreeItem\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n}\n\nfragment TeamCheckboxItem on Team {\n  id\n  name\n  avatarUrl\n  organization {\n    name\n    id\n  }\n}\n",
  "b78620a59d76b4f1f411a4115dd7c944": "query MilestonePickerSearchQuery(\n  $owner: String!\n  $repo: String!\n  $query: String\n  $count: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    milestones(query: $query, first: $count, orderByStates: [OPEN, CLOSED]) {\n      nodes {\n        ...MilestonePickerMilestone\n        id\n      }\n    }\n    id\n  }\n}\n\nfragment MilestonePickerMilestone on Milestone {\n  id\n  title\n  closed\n  dueOn\n  progressPercentage\n  url\n  closedAt\n}\n",
  "b808e1556facb76762e7f4a5b19d34cc": "query ReferencedEventTestTwoNodesQuery {\n  node1: node(id: \"node-id1\") {\n    __typename\n    ... on ReferencedEvent {\n      ...ReferencedEvent\n    }\n    id\n  }\n  node2: node(id: \"node-id2\") {\n    __typename\n    ... on ReferencedEvent {\n      ...ReferencedEvent\n    }\n    id\n  }\n}\n\nfragment EventActor on Actor {\n  __isActor: __typename\n  avatarUrl(size: 64)\n  login\n  __typename\n}\n\nfragment ReferencedEvent on ReferencedEvent {\n  databaseId\n  willCloseSubject\n  subject {\n    __typename\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  commit {\n    ...ReferencedEventInner\n    id\n  }\n  createdAt\n}\n\nfragment ReferencedEventInner on Commit {\n  message\n  messageHeadlineHTML\n  messageBodyHTML\n  url\n  abbreviatedOid\n  signature {\n    __typename\n    signer {\n      login\n      avatarUrl\n      id\n    }\n    state\n    wasSignedByGitHub\n    ... on SmimeSignature {\n      issuer {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n      subject {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n    }\n    ... on GpgSignature {\n      keyId\n    }\n    ... on SshSignature {\n      keyFingerprint\n    }\n  }\n  verificationStatus\n  hasSignature\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    defaultBranch\n    id\n  }\n}\n\nfragment TimelineRowEventActor on Actor {\n  __isActor: __typename\n  ...EventActor\n}\n",
  "b92bef8bf0e68483274bbf804df73796": "query IssueSidebarTestQuery {\n  node(id: \"test-id\") {\n    __typename\n    ... on Issue {\n      ...IssueSidebarPrimaryQuery\n    }\n    id\n  }\n  viewer {\n    ...IssueViewerViewer\n    id\n  }\n}\n\nfragment AssigneePickerAssignee on User {\n  id\n  login\n  name\n  avatarUrl(size: 64)\n}\n\nfragment AssigneesSectionAssignees on Issue {\n  assignees(first: 20) {\n    nodes {\n      ...AssigneePickerAssignee\n      id\n    }\n  }\n}\n\nfragment AssigneesSectionFragment on Issue {\n  id\n  number\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    isArchived\n    planFeatures {\n      maximumAssignees\n    }\n    id\n  }\n  ...AssigneesSectionAssignees\n  viewerCanUpdateNext\n  viewerCanAssign\n}\n\nfragment ClassicProjectItem on ProjectCard {\n  project {\n    name\n    url\n    ...SingleSelectColumnProject\n    id\n  }\n  column {\n    ...SingleSelectColumn\n    id\n  }\n}\n\nfragment IssueCommentComposerViewer on User {\n  id\n  login\n  avatarUrl(size: 64)\n}\n\nfragment IssueSidebarPrimaryQuery on Issue {\n  ...AssigneesSectionFragment\n  ...LabelsSectionFragment\n  ...ProjectsSectionFragment_654Fh\n  ...MilestonesSectionFragment\n  ...OptionsSectionFragment\n}\n\nfragment IssueTypesDialogIssueType on IssueType {\n  id\n}\n\nfragment IssueTypesDialogIssueTypes on IssueTypeConnection {\n  nodes {\n    id\n    name\n    color\n    description\n    isEnabled\n  }\n}\n\nfragment IssueViewerViewer on User {\n  enterpriseManagedEnterpriseId\n  login\n  ...IssueCommentComposerViewer\n  ...AssigneePickerAssignee\n  ...SubIssuesListViewViewer\n}\n\nfragment LabelPickerLabel on Label {\n  id\n  color\n  name\n  nameHTML\n  description\n  url\n}\n\nfragment LabelsSectionAssignedLabels on Labelable {\n  __isLabelable: __typename\n  labels(first: 100, orderBy: {field: NAME, direction: ASC}) {\n    edges {\n      node {\n        ...LabelPickerLabel\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  ... on Node {\n    __isNode: __typename\n    id\n  }\n}\n\nfragment LabelsSectionFragment on Issue {\n  id\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    isArchived\n    id\n  }\n  ...LabelsSectionAssignedLabels\n  viewerCanLabel\n}\n\nfragment MilestonePickerMilestone on Milestone {\n  id\n  title\n  closed\n  dueOn\n  progressPercentage\n  url\n  closedAt\n}\n\nfragment MilestonesSectionFragment on Issue {\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  id\n  ...MilestonesSectionMilestone\n  viewerCanSetMilestone\n}\n\nfragment MilestonesSectionMilestone on Issue {\n  milestone {\n    ...MilestonePickerMilestone\n    id\n  }\n}\n\nfragment OptionsSectionFragment on Issue {\n  id\n  isPinned\n  locked\n  viewerCanUpdateNext\n  viewerCanDelete\n  viewerCanTransfer\n  viewerCanConvertToDiscussion\n  viewerCanType\n  repository {\n    id\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    isPrivate\n    issueTypes(first: 10) {\n      ...IssueTypesDialogIssueTypes\n      totalCount\n    }\n    pinnedIssues(first: 3) {\n      totalCount\n    }\n    viewerCanPinIssues\n  }\n  issueType {\n    ...IssueTypesDialogIssueType\n    id\n  }\n}\n\nfragment ProjectItemSection on ProjectV2Item {\n  id\n  isArchived\n  project {\n    id\n  }\n  ...ProjectItemSectionView\n}\n\nfragment ProjectItemSectionView on ProjectV2Item {\n  id\n  isArchived\n  project {\n    id\n    title\n    template\n    viewerCanUpdate\n    url\n    field(name: \"Status\") {\n      __typename\n      ...SingleSelectFieldConfigFragment\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n  fieldValueByName(name: \"Status\") {\n    __typename\n    ...SingleSelectFieldFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ProjectPickerClassicProject on Project {\n  id\n  title: name\n  closed\n  number\n  url\n  viewerCanUpdate\n  columns(first: 10) {\n    nodes {\n      id\n      name\n    }\n  }\n  __typename\n}\n\nfragment ProjectPickerProject on ProjectV2 {\n  id\n  title\n  closed\n  number\n  url\n  viewerCanUpdate\n  __typename\n}\n\nfragment ProjectsSectionFragment_654Fh on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    number\n    repository {\n      name\n      owner {\n        __typename\n        login\n        id\n      }\n      isArchived\n      id\n    }\n    id\n    projectItemsNext(first: 10) {\n      edges {\n        node {\n          id\n          ...ProjectItemSection\n          project {\n            ...ProjectPickerProject\n            closed\n            title\n            id\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    projectCards(first: 10) {\n      edges {\n        node {\n          id\n          ...ClassicProjectItem\n          project {\n            id\n            closed\n            ...ProjectPickerClassicProject\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    viewerCanUpdateMetadata\n  }\n  ... on PullRequest {\n    number\n    repository {\n      name\n      owner {\n        __typename\n        login\n        id\n      }\n      isArchived\n      id\n    }\n    id\n    projectItemsNext(first: 10) {\n      edges {\n        node {\n          id\n          ...ProjectItemSection\n          project {\n            closed\n            ...ProjectPickerProject\n            title\n            id\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    projectCards(first: 10) {\n      edges {\n        node {\n          id\n          ...ClassicProjectItem\n          project {\n            id\n            closed\n            ...ProjectPickerClassicProject\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    viewerCanUpdate\n  }\n}\n\nfragment SingleSelectColumn on ProjectColumn {\n  id\n  name\n}\n\nfragment SingleSelectColumnProject on Project {\n  id\n  name\n  columns(first: 10) {\n    nodes {\n      ...SingleSelectColumn\n      id\n    }\n  }\n}\n\nfragment SingleSelectFieldConfigFragment on ProjectV2SingleSelectField {\n  id\n  name\n  options {\n    ...SingleSelectFieldOptionFragment\n    id\n    name\n    description\n    color\n  }\n}\n\nfragment SingleSelectFieldFragment on ProjectV2ItemFieldSingleSelectValue {\n  id\n  optionId\n  name\n  nameHTML\n  color\n}\n\nfragment SingleSelectFieldOptionFragment on ProjectV2SingleSelectFieldOption {\n  id\n  optionId\n  name\n  nameHTML\n  color\n  descriptionHTML\n}\n\nfragment SubIssuesListViewViewer on User {\n  isEmployee\n}\n",
  "b9a4afc78884025457f655e918413b6a": "mutation updateIssueLabelsBulkByQueryMutation(\n  $input: UpdateIssuesBulkByQueryInput!\n) {\n  updateIssuesBulkByQuery(input: $input) {\n    jobId\n  }\n}\n",
  "bbd3c2371df93efe8efafcdabf3f86fc": "query LabelsSectionStoryQuery(\n  $owner: String!\n  $repo: String!\n  $number: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $number) {\n      ...LabelsSectionFragment\n      id\n    }\n    id\n  }\n}\n\nfragment LabelPickerLabel on Label {\n  id\n  color\n  name\n  nameHTML\n  description\n  url\n}\n\nfragment LabelsSectionAssignedLabels on Labelable {\n  __isLabelable: __typename\n  labels(first: 100, orderBy: {field: NAME, direction: ASC}) {\n    edges {\n      node {\n        ...LabelPickerLabel\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  ... on Node {\n    __isNode: __typename\n    id\n  }\n}\n\nfragment LabelsSectionFragment on Issue {\n  id\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    isArchived\n    id\n  }\n  ...LabelsSectionAssignedLabels\n  viewerCanLabel\n}\n",
  "bddc79595bb4cb906c4c73e51f73e7d7": "query LazyLoadRepoDescriptionQuery(\n  $owner: String!\n  $repo: String!\n) {\n  repository(owner: $owner, name: $repo) {\n    description\n    id\n  }\n}\n",
  "be49f32458d6d5fc86f960ed9b30575e": "query IssuesShowQuery(\n  $owner: String!\n  $repo: String!\n  $number: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    ...IssuesShowPageInternalFragment_2xc3ua\n    id\n  }\n}\n\nfragment IssuesShowFragment on Issue {\n  title\n  number\n}\n\nfragment IssuesShowPageInternalFragment_2xc3ua on Repository {\n  ...ViewerIssuesShowPageInternalFragment_2xc3ua\n}\n\nfragment ViewerIssuesShowPageInternalFragment_2xc3ua on Repository {\n  nameWithOwner\n  issue(number: $number) {\n    ...IssuesShowFragment\n    id\n  }\n}\n",
  "c04b83c83e6ffc4edbe702e13e337ece": "subscription ApplyMilestoneActionIssueRowTestSubscription(\n  $issueId: ID!\n) {\n  issueUpdated(id: $issueId) {\n    issueMetadataUpdated {\n      ...MilestonesSectionMilestone\n      id\n    }\n  }\n}\n\nfragment MilestonePickerMilestone on Milestone {\n  id\n  title\n  closed\n  dueOn\n  progressPercentage\n  url\n  closedAt\n}\n\nfragment MilestonesSectionMilestone on Issue {\n  milestone {\n    ...MilestonePickerMilestone\n    id\n  }\n}\n",
  "c2772468f6d9410d0f4563e1714532f1": "query AssigneePickerSearchAssignableRepositoryUsersWithLoginsQuery(\n  $owner: String!\n  $name: String!\n  $query: String!\n  $first: Int!\n) {\n  repository(owner: $owner, name: $name) {\n    assignableUsers(loginNames: $query, first: $first) {\n      nodes {\n        ...AssigneePickerAssignee\n        id\n      }\n    }\n    id\n  }\n}\n\nfragment AssigneePickerAssignee on User {\n  id\n  login\n  name\n  avatarUrl(size: 64)\n}\n",
  "c4692a09b796be46dd128912d7d1cbd6": "query SearchBarQuery {\n  node(id: \"SSC_asdkasd\") {\n    __typename\n    ...SearchBarCurrentViewFragment\n    id\n  }\n}\n\nfragment SearchBarCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  id\n  name\n  description\n  icon\n  color\n  query\n  scopingRepository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n",
  "c6c7ea78576b613fb09a4ef07b376577": "subscription JobInfoWrapperStatusSubscription(\n  $id: ID!\n) {\n  jobStatusUpdated(id: $id) {\n    jobStatus {\n      percentage\n      updatedAt\n      jobId\n      state\n      executionErrors {\n        message\n        nodeId\n      }\n    }\n  }\n}\n",
  "c90f3c126f233d9f39659fe0c64d8646": "subscription ApplyLabelsActionIssueRowTestSubscription(\n  $issueId: ID!\n) {\n  issueUpdated(id: $issueId) {\n    issueMetadataUpdated {\n      ...Labels_1aoQTH\n      id\n    }\n  }\n}\n\nfragment Label on Label {\n  id\n  nameHTML\n  color\n  name\n  description\n}\n\nfragment Labels_1aoQTH on Labelable {\n  __isLabelable: __typename\n  labels(first: 20, orderBy: {field: NAME, direction: ASC}) {\n    nodes {\n      ...Label\n      name\n      id\n    }\n  }\n}\n",
  "ca33cc9313a76d62f0ad4e6081107395": "query CrossReferencedEventTestQuery {\n  node(id: \"node-id\") {\n    __typename\n    ... on CrossReferencedEvent {\n      ...CrossReferencedEvent\n    }\n    id\n  }\n}\n\nfragment CrossReferencedEvent on CrossReferencedEvent {\n  referencedAt\n  willCloseTarget\n  databaseId\n  target {\n    __typename\n    ... on Issue {\n      repository {\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  innerSource: source {\n    __typename\n    ...CrossReferencedEventInner\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment CrossReferencedEventInner on ReferencedSubject {\n  __isReferencedSubject: __typename\n  __typename\n  ... on Issue {\n    id\n    issueTitleHTML: titleHTML\n    url\n    number\n    stateReason\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n  ... on PullRequest {\n    id\n    pullTitleHTML: titleHTML\n    url\n    number\n    state\n    isDraft\n    isInMergeQueue\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n}\n\nfragment EventActor on Actor {\n  __isActor: __typename\n  avatarUrl(size: 64)\n  login\n  __typename\n}\n\nfragment TimelineRowEventActor on Actor {\n  __isActor: __typename\n  ...EventActor\n}\n",
  "cac4bf9cde645b1757c7ef9f43b03319": "mutation updateIssueStateMutationCloseMutation(\n  $id: ID!\n  $newStateReason: IssueClosedStateReason!\n) {\n  closeIssue(input: {issueId: $id, stateReason: $newStateReason}) {\n    issue {\n      id\n      state\n      stateReason\n    }\n  }\n}\n",
  "cbd33dd7e70001431b6d0502f1119fe4": "mutation addIssueToClassicProjectMutation(\n  $input: AddProjectCardInput!\n) {\n  addProjectCard(input: $input) {\n    cardEdge {\n      node {\n        ...ClassicProjectItem\n        id\n      }\n    }\n  }\n}\n\nfragment ClassicProjectItem on ProjectCard {\n  project {\n    name\n    url\n    ...SingleSelectColumnProject\n    id\n  }\n  column {\n    ...SingleSelectColumn\n    id\n  }\n}\n\nfragment SingleSelectColumn on ProjectColumn {\n  id\n  name\n}\n\nfragment SingleSelectColumnProject on Project {\n  id\n  name\n  columns(first: 10) {\n    nodes {\n      ...SingleSelectColumn\n      id\n    }\n  }\n}\n",
  "cc63e1903d3ee557d692f96955d8097a": "query TimelinePaginationBackQuery(\n  $cursor: String\n  $last: Int\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ...IssueTimelineBackPaginated_2EV0Bx\n    id\n  }\n}\n\nfragment AddedToProjectEvent on AddedToProjectEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  projectColumnName\n  databaseId\n}\n\nfragment AddedToProjectV2Event on AddedToProjectV2Event {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n}\n\nfragment AssignedEvent on AssignedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    login\n    id\n  }\n  assignee {\n    __typename\n    ... on User {\n      login\n    }\n    ... on Mannequin {\n      login\n    }\n    ... on Organization {\n      login\n    }\n    ... on Bot {\n      login\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ClosedEvent on ClosedEvent {\n  databaseId\n  createdAt\n  stateReason\n  closingProjectItemStatus\n  closer {\n    __typename\n    ... on ProjectV2 {\n      url\n      title\n    }\n    ... on PullRequest {\n      url\n      number\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Commit {\n      url\n      abbreviatedOid\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment CommentDeletedEvent on CommentDeletedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  deletedCommentAuthor {\n    __typename\n    login\n    id\n  }\n}\n\nfragment ConnectedEvent on ConnectedEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  subject {\n    __typename\n    ... on PullRequest {\n      title\n      url\n      number\n      state\n      isDraft\n      isInMergeQueue\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ConvertedFromDraftEvent on ConvertedFromDraftEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  databaseId\n}\n\nfragment ConvertedNoteToIssueEvent on ConvertedNoteToIssueEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  project {\n    url\n    name\n    id\n  }\n}\n\nfragment ConvertedToDiscussionEvent on ConvertedToDiscussionEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  discussion {\n    url\n    number\n    id\n  }\n}\n\nfragment CrossReferencedEvent on CrossReferencedEvent {\n  referencedAt\n  willCloseTarget\n  databaseId\n  target {\n    __typename\n    ... on Issue {\n      repository {\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  innerSource: source {\n    __typename\n    ...CrossReferencedEventInner\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment CrossReferencedEventInner on ReferencedSubject {\n  __isReferencedSubject: __typename\n  __typename\n  ... on Issue {\n    id\n    issueTitleHTML: titleHTML\n    url\n    number\n    stateReason\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n  ... on PullRequest {\n    id\n    pullTitleHTML: titleHTML\n    url\n    number\n    state\n    isDraft\n    isInMergeQueue\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n}\n\nfragment DemilestonedEvent on DemilestonedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  milestoneTitle\n  milestone {\n    url\n    id\n  }\n}\n\nfragment DisconnectedEvent on DisconnectedEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  subject {\n    __typename\n    ... on PullRequest {\n      title\n      url\n      number\n      state\n      isDraft\n      isInMergeQueue\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment EventActor on Actor {\n  __isActor: __typename\n  avatarUrl(size: 64)\n  login\n  __typename\n}\n\nfragment IssueCommentEditorBodyFragment on IssueComment {\n  id\n  body\n  bodyVersion\n  author {\n    __typename\n    login\n    avatarUrl\n    id\n  }\n  issue {\n    author {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...IssueCommentHeader\n}\n\nfragment IssueCommentEditor_repository on IssueComment {\n  repository {\n    slashCommandsEnabled\n    nameWithOwner\n    databaseId\n    id\n  }\n}\n\nfragment IssueCommentHeader on IssueComment {\n  id\n  databaseId\n  url\n  createdAt\n  body\n  authorAssociation\n  viewerCanUpdate\n  viewerCanDelete\n  viewerCanMinimize\n  viewerCanReport\n  viewerCanReportToMaintainer\n  viewerCanBlockFromOrg\n  viewerCanUnblockFromOrg\n  isHidden: isMinimized\n  minimizedReason\n  createdViaEmail\n  viewerDidAuthor\n  authorToRepoOwnerSponsorship {\n    createdAt\n    isActive\n    id\n  }\n  author {\n    __typename\n    id\n    login\n  }\n  repository {\n    id\n    name\n    owner {\n      __typename\n      id\n      login\n      url\n    }\n    isPrivate\n  }\n  issue {\n    number\n    id\n  }\n  ...MarkdownEditHistoryViewer_comment\n}\n\nfragment IssueCommentViewerCommentRow on IssueComment {\n  id\n  databaseId\n  ...IssueCommentViewerMarkdownViewer\n  ...IssueCommentHeader\n  author {\n    avatarUrl\n    login\n    __typename\n    id\n  }\n  issue {\n    id\n    locked\n  }\n  body\n  isHidden: isMinimized\n  viewerCanUpdate\n}\n\nfragment IssueCommentViewerMarkdownViewer on IssueComment {\n  id\n  body\n  bodyHTML(unfurlReferences: true)\n  bodyVersion\n  viewerCanUpdate\n}\n\nfragment IssueCommentViewerReactable on Reactable {\n  __isReactable: __typename\n  ...ReactionViewerGroups\n}\n\nfragment IssueComment_issueComment on IssueComment {\n  ...IssueCommentViewerCommentRow\n  ...IssueCommentViewerReactable\n  ...IssueCommentEditor_repository\n  ...IssueCommentEditorBodyFragment\n  issue {\n    id\n  }\n  id\n}\n\nfragment IssueTimelineBackPaginated_2EV0Bx on Issue {\n  timelineItems(last: $last, before: $cursor, visibleEventsOnly: true) @defer(label: \"Issue_backTimeline\") {\n    totalCount\n    pageInfo {\n      hasPreviousPage\n      startCursor\n    }\n    edges {\n      node {\n        ... on TimelineEvent {\n          __isTimelineEvent: __typename\n          databaseId\n        }\n        __typename\n        ... on Node {\n          __isNode: __typename\n          id\n        }\n      }\n      cursor\n    }\n    ...TimelineItemsPaginated\n  }\n  id\n  url\n}\n\nfragment LabelData on Label {\n  nameHTML\n  name\n  color\n  id\n  description\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment LabeledEvent on LabeledEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  label {\n    ...LabelData\n    id\n  }\n}\n\nfragment LockedEvent on LockedEvent {\n  databaseId\n  createdAt\n  lockReason\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment MarkdownEditHistoryViewer_comment on Comment {\n  __isComment: __typename\n  id\n  viewerCanReadUserContentEdits\n  lastEditedAt\n  lastUserContentEdit {\n    editor {\n      __typename\n      url\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment MarkedAsDuplicateEvent on MarkedAsDuplicateEvent {\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  canonical {\n    __typename\n    ... on Issue {\n      url\n      number\n      id\n    }\n    ... on PullRequest {\n      url\n      number\n      id\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  databaseId\n  viewerCanUndo\n  id\n}\n\nfragment MentionedEvent on MentionedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment MilestonedEvent on MilestonedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  milestoneTitle\n  milestone {\n    url\n    id\n  }\n}\n\nfragment MovedColumnsInProjectEvent on MovedColumnsInProjectEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  previousProjectColumnName\n  projectColumnName\n}\n\nfragment PinnedEvent on PinnedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment ProjectV2ItemStatusChangedEvent on ProjectV2ItemStatusChangedEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n  previousStatus\n  status\n}\n\nfragment ReactionButton_Reaction on ReactionGroup {\n  content\n  reactors(first: 5) {\n    nodes {\n      __typename\n      ... on User {\n        login\n        __typename\n      }\n      ... on Bot {\n        login\n        __typename\n      }\n      ... on Organization {\n        login\n        __typename\n      }\n      ... on Mannequin {\n        login\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n    totalCount\n  }\n  viewerHasReacted\n}\n\nfragment ReactionViewerGroups on Reactable {\n  __isReactable: __typename\n  reactionGroups {\n    ...ReactionButton_Reaction\n    ...ReactionsMenuItem_Reaction\n  }\n}\n\nfragment ReactionsMenuItem_Reaction on ReactionGroup {\n  content\n  viewerHasReacted\n}\n\nfragment ReferencedEvent on ReferencedEvent {\n  databaseId\n  willCloseSubject\n  subject {\n    __typename\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  commit {\n    ...ReferencedEventInner\n    id\n  }\n  createdAt\n}\n\nfragment ReferencedEventInner on Commit {\n  message\n  messageHeadlineHTML\n  messageBodyHTML\n  url\n  abbreviatedOid\n  signature {\n    __typename\n    signer {\n      login\n      avatarUrl\n      id\n    }\n    state\n    wasSignedByGitHub\n    ... on SmimeSignature {\n      issuer {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n      subject {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n    }\n    ... on GpgSignature {\n      keyId\n    }\n    ... on SshSignature {\n      keyFingerprint\n    }\n  }\n  verificationStatus\n  hasSignature\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    defaultBranch\n    id\n  }\n}\n\nfragment RemovedFromProjectEvent on RemovedFromProjectEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  projectColumnName\n}\n\nfragment RemovedFromProjectV2Event on RemovedFromProjectV2Event {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n}\n\nfragment RenamedTitleEvent on RenamedTitleEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  currentTitle\n  previousTitle\n}\n\nfragment ReopenedEvent on ReopenedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment SubscribedEvent on SubscribedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment TimelineItemsPaginated on IssueTimelineItemsConnection {\n  edges {\n    node {\n      ... on IssueComment {\n        databaseId\n        viewerDidAuthor\n        issue {\n          author {\n            __typename\n            login\n            id\n          }\n          id\n        }\n      }\n      ... on ReferencedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on CrossReferencedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        source {\n          __typename\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n        willCloseTarget\n      }\n      ... on MentionedEvent {\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on LabeledEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        label {\n          id\n        }\n      }\n      ... on UnlabeledEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        label {\n          id\n        }\n      }\n      ... on AssignedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        assignee {\n          __typename\n          ... on User {\n            id\n          }\n          ... on Bot {\n            id\n          }\n          ... on Mannequin {\n            id\n          }\n          ... on Organization {\n            id\n          }\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n      }\n      ... on UnassignedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        assignee {\n          __typename\n          ... on User {\n            id\n          }\n          ... on Bot {\n            id\n          }\n          ... on Mannequin {\n            id\n          }\n          ... on Organization {\n            id\n          }\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n      }\n      ... on AddedToProjectV2Event {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on RemovedFromProjectV2Event {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      __typename\n      ...IssueComment_issueComment\n      ...AddedToProjectEvent\n      ...MovedColumnsInProjectEvent\n      ...RemovedFromProjectEvent\n      ...SubscribedEvent\n      ...UnsubscribedEvent\n      ...MentionedEvent\n      ...ClosedEvent\n      ...ReopenedEvent\n      ...LockedEvent\n      ...UnlockedEvent\n      ...PinnedEvent\n      ...UnpinnedEvent\n      ...LabeledEvent\n      ...RenamedTitleEvent\n      ...UnlabeledEvent\n      ...UnassignedEvent\n      ...AssignedEvent\n      ...CommentDeletedEvent\n      ...UserBlockedEvent\n      ...MilestonedEvent\n      ...DemilestonedEvent\n      ...CrossReferencedEvent\n      ...ReferencedEvent\n      ...ConnectedEvent\n      ...TransferredEvent\n      ...ConvertedNoteToIssueEvent\n      ...DisconnectedEvent\n      ...MarkedAsDuplicateEvent\n      ...UnmarkedAsDuplicateEvent\n      ...ConvertedToDiscussionEvent\n      ...AddedToProjectV2Event\n      ...RemovedFromProjectV2Event\n      ...ProjectV2ItemStatusChangedEvent\n      ...ConvertedFromDraftEvent\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n}\n\nfragment TimelineRowEventActor on Actor {\n  __isActor: __typename\n  ...EventActor\n}\n\nfragment TransferredEvent on TransferredEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  fromRepository {\n    nameWithOwner\n    url\n    id\n  }\n}\n\nfragment UnassignedEvent on UnassignedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    login\n    ...TimelineRowEventActor\n    id\n  }\n  assignee {\n    __typename\n    ... on User {\n      login\n    }\n    ... on Mannequin {\n      login\n    }\n    ... on Organization {\n      login\n    }\n    ... on Bot {\n      login\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment UnlabeledEvent on UnlabeledEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  label {\n    ...LabelData\n    id\n  }\n}\n\nfragment UnlockedEvent on UnlockedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UnmarkedAsDuplicateEvent on UnmarkedAsDuplicateEvent {\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  canonical {\n    __typename\n    ... on Issue {\n      url\n      number\n    }\n    ... on PullRequest {\n      url\n      number\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  databaseId\n}\n\nfragment UnpinnedEvent on UnpinnedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UnsubscribedEvent on UnsubscribedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UserBlockedEvent on UserBlockedEvent {\n  databaseId\n  createdAt\n  blockDuration\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  blockedUser: subject {\n    login\n    id\n  }\n}\n",
  "cdc2c4b69492faa142269c6a6a60df92": "mutation deleteIssueProjectsMutation(\n  $input: DeleteProjectV2ItemInput!\n) {\n  deleteProjectV2Item(input: $input) {\n    deletedItemId\n  }\n}\n",
  "d0bdbcdbd489ff642338257e3a1f3321": "mutation removeUserViewMutation(\n  $input: RemoveDashboardSearchShortcutInput!\n) {\n  removeDashboardSearchShortcut(input: $input) {\n    shortcut {\n      id\n    }\n  }\n}\n",
  "d0e89267c4e97f304e49c2361c49809c": "query IssueBodyHeaderStoryQuery {\n  issue: node(id: \"abc\") {\n    __typename\n    ... on Issue {\n      ...IssueBodyHeader\n    }\n    id\n  }\n}\n\nfragment IssueBodyHeader on Comment {\n  __isComment: __typename\n  ...IssueBodyHeaderActions_comment\n  createdAt\n  viewerDidAuthor\n  author {\n    __typename\n    ...IssueBodyHeaderAuthor\n    ...IssueBodyHeaderActions\n    id\n  }\n}\n\nfragment IssueBodyHeaderActions on Actor {\n  __isActor: __typename\n  login\n  id\n}\n\nfragment IssueBodyHeaderActions_comment on Comment {\n  __isComment: __typename\n  body\n}\n\nfragment IssueBodyHeaderAuthor on Actor {\n  __isActor: __typename\n  login\n  avatarUrl\n  profileUrl\n}\n",
  "d10fef83e41122272fa59d67d1aabfba": "query RepositoryPickerCurrentRepoQuery(\n  $owner: String!\n  $name: String!\n  $includeTemplates: Boolean = false\n) {\n  repository(owner: $owner, name: $name) {\n    ...RepositoryPickerRepository\n    ...RepositoryPickerRepositoryIssueTemplates @include(if: $includeTemplates)\n    id\n  }\n}\n\nfragment AssigneePickerAssignee on User {\n  id\n  login\n  name\n  avatarUrl(size: 64)\n}\n\nfragment CheckboxesElement_input on IssueFormElementCheckboxes {\n  label\n  descriptionHTML\n  checkboxOptions: options {\n    label\n    labelHTML\n    required\n  }\n}\n\nfragment DropdownElement_input on IssueFormElementDropdown {\n  label\n  descriptionHTML\n  options\n  required\n  multiple\n  defaultOptionIndex: default\n}\n\nfragment IssueFormElements_templateElements on IssueForm {\n  elements {\n    __typename\n    ... on IssueFormElementInput {\n      ...TextInputElement_input\n    }\n    ... on IssueFormElementTextarea {\n      ...TextAreaElement_input\n    }\n    ... on IssueFormElementMarkdown {\n      ...MarkdownElement_input\n    }\n    ... on IssueFormElementDropdown {\n      ...DropdownElement_input\n    }\n    ... on IssueFormElementCheckboxes {\n      ...CheckboxesElement_input\n    }\n  }\n}\n\nfragment IssueTypePickerIssueType on IssueType {\n  id\n  name\n  isEnabled\n  description\n  color\n}\n\nfragment LabelPickerLabel on Label {\n  id\n  color\n  name\n  nameHTML\n  description\n  url\n}\n\nfragment MarkdownElement_input on IssueFormElementMarkdown {\n  contentHTML\n}\n\nfragment ProjectPickerProject on ProjectV2 {\n  id\n  title\n  closed\n  number\n  url\n  viewerCanUpdate\n  __typename\n}\n\nfragment RepositoryPickerRepository on Repository {\n  id\n  databaseId\n  name\n  nameWithOwner\n  owner {\n    __typename\n    databaseId\n    login\n    avatarUrl(size: 64)\n    id\n  }\n  isPrivate\n  isArchived\n  isInOrganization\n  hasIssuesEnabled\n  slashCommandsEnabled\n  viewerCanPush\n  viewerIssueCreationPermissions {\n    labelable\n    milestoneable\n    assignable\n    triageable\n    typeable\n  }\n  securityPolicyUrl\n  contributingFileUrl\n  codeOfConductFileUrl\n  shortDescriptionHTML\n  planFeatures {\n    maximumAssignees\n  }\n}\n\nfragment RepositoryPickerRepositoryIssueTemplates on Repository {\n  isSecurityPolicyEnabled\n  securityPolicyUrl\n  isBlankIssuesEnabled\n  templateTreeUrl\n  issueTemplates {\n    __typename\n    about\n    name\n    filename\n    body\n    title\n    labels(first: 20, orderBy: {field: NAME, direction: ASC}) {\n      edges {\n        node {\n          ...LabelPickerLabel\n          id\n        }\n      }\n      totalCount\n    }\n    assignees(first: 10) {\n      edges {\n        node {\n          ...AssigneePickerAssignee\n          id\n        }\n      }\n      totalCount\n    }\n    type {\n      ...IssueTypePickerIssueType\n      id\n    }\n  }\n  issueForms {\n    __typename\n    name\n    description\n    filename\n    title\n    ...IssueFormElements_templateElements\n    labels(first: 20, orderBy: {field: NAME, direction: ASC}) {\n      edges {\n        node {\n          ...LabelPickerLabel\n          id\n        }\n      }\n      totalCount\n    }\n    assignees(first: 10) {\n      edges {\n        node {\n          ...AssigneePickerAssignee\n          id\n        }\n      }\n      totalCount\n    }\n    projects(first: 20) {\n      edges {\n        node {\n          ...ProjectPickerProject\n          id\n        }\n      }\n    }\n    type {\n      ...IssueTypePickerIssueType\n      id\n    }\n  }\n  contactLinks {\n    name\n    about\n    url\n    __typename\n  }\n}\n\nfragment TextAreaElement_input on IssueFormElementTextarea {\n  itemId: id\n  label\n  descriptionHTML\n  placeholder\n  value\n  required\n  render\n}\n\nfragment TextInputElement_input on IssueFormElementInput {\n  itemId: id\n  label\n  descriptionHTML\n  placeholder\n  value\n  required\n}\n",
  "d132dec069be1a67131a5e271bc909a6": "mutation clearProjectItemFieldValueMutation(\n  $input: ClearProjectV2ItemFieldValueInput!\n) {\n  clearProjectV2ItemFieldValue(input: $input) {\n    projectV2Item {\n      id\n      type\n      project {\n        id\n      }\n      ...ProjectItemSectionFieldsValues\n      fieldValueByName(name: \"Status\") {\n        __typename\n        ... on ProjectV2ItemFieldSingleSelectValue {\n          name\n        }\n        ... on Node {\n          __isNode: __typename\n          id\n        }\n      }\n    }\n  }\n}\n\nfragment DateFieldConfigFragment on ProjectV2Field {\n  id\n  name\n}\n\nfragment DateFieldFragment on ProjectV2ItemFieldDateValue {\n  id\n  date\n  field {\n    __typename\n    ...DateFieldConfigFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment IterationFieldConfigFragment on ProjectV2IterationField {\n  id\n  name\n  configuration {\n    iterations {\n      ...IterationFieldIterationFragment\n    }\n    completedIterations {\n      ...IterationFieldIterationFragment\n    }\n  }\n}\n\nfragment IterationFieldFragment on ProjectV2ItemFieldIterationValue {\n  iterationId\n  title\n  titleHTML\n  startDate\n  duration\n  field {\n    __typename\n    ...IterationFieldConfigFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment IterationFieldIterationFragment on ProjectV2IterationFieldIteration {\n  id\n  title\n  titleHTML\n  startDate\n  duration\n}\n\nfragment NumberFieldConfigFragment on ProjectV2Field {\n  id\n  name\n}\n\nfragment NumberFieldFragment on ProjectV2ItemFieldNumberValue {\n  id\n  number\n  field {\n    __typename\n    ...NumberFieldConfigFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ProjectItemSectionFieldsValues on ProjectV2Item {\n  fieldValues(first: 50, orderBy: {field: POSITION, direction: ASC}) {\n    edges {\n      node {\n        __typename\n        ... on ProjectV2ItemFieldTextValue {\n          id\n          field {\n            __typename\n            ... on ProjectV2Field {\n              id\n            }\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n        ...TextFieldFragment\n        ... on ProjectV2ItemFieldNumberValue {\n          id\n          field {\n            __typename\n            ... on ProjectV2Field {\n              id\n            }\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n        ...NumberFieldFragment\n        ... on ProjectV2ItemFieldDateValue {\n          id\n          field {\n            __typename\n            ... on ProjectV2Field {\n              id\n            }\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n        ...DateFieldFragment\n        ... on ProjectV2ItemFieldSingleSelectValue {\n          id\n          field {\n            __typename\n            ... on ProjectV2SingleSelectField {\n              id\n            }\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n        ...SingleSelectFieldFragment\n        ... on ProjectV2ItemFieldIterationValue {\n          id\n          field {\n            __typename\n            ... on ProjectV2IterationField {\n              id\n            }\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n        ...IterationFieldFragment\n        ... on Node {\n          __isNode: __typename\n          id\n        }\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment SingleSelectFieldFragment on ProjectV2ItemFieldSingleSelectValue {\n  id\n  optionId\n  name\n  nameHTML\n  color\n}\n\nfragment TextFieldConfigFragment on ProjectV2Field {\n  id\n  name\n}\n\nfragment TextFieldFragment on ProjectV2ItemFieldTextValue {\n  id\n  text\n  field {\n    __typename\n    ...TextFieldConfigFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n",
  "d3d0229ddfd4e1dc97ad58aff75be8e2": "query ApplyMilestoneActionQuery(\n  $ids: [ID!]!\n) {\n  nodes(ids: $ids) {\n    __typename\n    ... on Issue {\n      id\n      milestone {\n        ...MilestonePickerMilestone\n        id\n      }\n    }\n    id\n  }\n}\n\nfragment MilestonePickerMilestone on Milestone {\n  id\n  title\n  closed\n  dueOn\n  progressPercentage\n  url\n  closedAt\n}\n",
  "d4427e4747158db59160a4d56862163f": "query RelayTestUtilsViewerQuery {\n  viewer {\n    ...IssuesShowFragmentViewer\n    id\n  }\n}\n\nfragment IssuesShowFragmentViewer on User {\n  name\n}\n",
  "d7c7ea5267b564c6984bce718bddbbae": "mutation removeReactionMutation(\n  $input: RemoveReactionInput!\n) {\n  removeReaction(input: $input) {\n    subject {\n      __typename\n      reactionGroups {\n        ...ReactionButton_Reaction\n      }\n      id\n    }\n  }\n}\n\nfragment ReactionButton_Reaction on ReactionGroup {\n  content\n  reactors(first: 5) {\n    nodes {\n      __typename\n      ... on User {\n        login\n        __typename\n      }\n      ... on Bot {\n        login\n        __typename\n      }\n      ... on Organization {\n        login\n        __typename\n      }\n      ... on Mannequin {\n        login\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n    totalCount\n  }\n  viewerHasReacted\n}\n",
  "d7f9f8b6a4b7a119a9acfce27b591d48": "query IssueBodyViewerReactionsStoryQuery {\n  issue: node(id: \"abc\") {\n    __typename\n    ... on Issue {\n      ...IssueBodyViewer\n      ...IssueBodyViewerReactable\n    }\n    id\n  }\n}\n\nfragment IssueBodyViewer on Comment {\n  __isComment: __typename\n  id\n}\n\nfragment IssueBodyViewerReactable on Reactable {\n  __isReactable: __typename\n  ...ReactionViewerGroups\n}\n\nfragment ReactionButton_Reaction on ReactionGroup {\n  content\n  reactors(first: 5) {\n    nodes {\n      __typename\n      ... on User {\n        login\n        __typename\n      }\n      ... on Bot {\n        login\n        __typename\n      }\n      ... on Organization {\n        login\n        __typename\n      }\n      ... on Mannequin {\n        login\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n    totalCount\n  }\n  viewerHasReacted\n}\n\nfragment ReactionViewerGroups on Reactable {\n  __isReactable: __typename\n  reactionGroups {\n    ...ReactionButton_Reaction\n    ...ReactionsMenuItem_Reaction\n  }\n}\n\nfragment ReactionsMenuItem_Reaction on ReactionGroup {\n  content\n  viewerHasReacted\n}\n",
  "d97c94919b8c5c49a429b8940b22f4ed": "mutation deleteIssueTypeMutation(\n  $input: DeleteIssueTypeInput!\n) {\n  deleteIssueType(input: $input) {\n    deletedIssueTypeId\n    errors {\n      __typename\n      message\n    }\n  }\n}\n",
  "d9ce6a42a3c134d2e551494e724fe47a": "query ProjectV2ItemStatusChangedEventBotTestQuery {\n  node(id: \"node-id\") {\n    __typename\n    ... on ProjectV2ItemStatusChangedEvent {\n      ...ProjectV2ItemStatusChangedEvent\n    }\n    id\n  }\n}\n\nfragment EventActor on Actor {\n  __isActor: __typename\n  avatarUrl(size: 64)\n  login\n  __typename\n}\n\nfragment ProjectV2ItemStatusChangedEvent on ProjectV2ItemStatusChangedEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n  previousStatus\n  status\n}\n\nfragment TimelineRowEventActor on Actor {\n  __isActor: __typename\n  ...EventActor\n}\n",
  "da3ddd34bd75926d4b320abbf42dba8b": "mutation dismissFirstTimeContributionBannerForRepoMutation(\n  $input: DismissRepositoryNoticeInput!\n) {\n  dismissRepositoryNotice(input: $input) {\n    clientMutationId\n  }\n}\n",
  "db7272dcc487e6ad38bb6c86075dad3a": "query IssueSidebarLazyTestQuery {\n  node(id: \"test-id\") {\n    __typename\n    ...IssueSidebarLazySections\n    id\n  }\n}\n\nfragment AssigneePickerAssignee on User {\n  id\n  login\n  name\n  avatarUrl(size: 64)\n}\n\nfragment BranchPickerRef on Ref {\n  name\n  id\n  __typename\n  target {\n    oid\n    id\n    __typename\n  }\n  repository {\n    id\n    nameWithOwner\n    defaultBranchRef {\n      name\n      id\n      target {\n        oid\n        id\n        __typename\n      }\n      associatedPullRequests {\n        totalCount\n      }\n      repository {\n        id\n      }\n    }\n  }\n  associatedPullRequests {\n    totalCount\n  }\n}\n\nfragment DevelopmentSectionFragment on Issue {\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  id\n  title\n  number\n  linkedBranches(first: 25) {\n    nodes {\n      id\n      ref {\n        ...BranchPickerRef\n        id\n      }\n    }\n  }\n  closedByPullRequestsReferences(first: 10, includeClosedPrs: true) {\n    nodes {\n      ...PullRequestPickerPullRequest\n      id\n    }\n  }\n  ...LinkedPullRequests\n  viewerCanUpdateNext\n}\n\nfragment IssueSidebarLazySections on Issue {\n  ...DevelopmentSectionFragment\n  ...RelationshipsSectionFragment\n  ...SubscriptionSectionFragment\n  ...ParticipantsSectionFragment\n}\n\nfragment LinkedPullRequest on PullRequest {\n  url\n  number\n  state\n  isDraft\n  repository {\n    name\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment LinkedPullRequests on Issue {\n  repository {\n    nameWithOwner\n    id\n  }\n  linkedPullRequests: closedByPullRequestsReferences(first: 10, includeClosedPrs: false, orderByState: true) {\n    nodes {\n      repository {\n        nameWithOwner\n        id\n      }\n      state\n      isDraft\n      ...LinkedPullRequest\n      id\n    }\n  }\n}\n\nfragment ParentIssueFragment on Issue {\n  id\n  title\n  url\n  number\n  repository {\n    nameWithOwner\n    id\n  }\n  state\n  stateReason\n  ...SubIssuesSummary\n}\n\nfragment ParticipantFragment on User {\n  ...AssigneePickerAssignee\n}\n\nfragment ParticipantsSectionFragment on Issue {\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  number\n  participants(first: 10) {\n    nodes {\n      ...ParticipantFragment\n      id\n    }\n    totalCount\n  }\n}\n\nfragment PullRequestPickerPullRequest on PullRequest {\n  id\n  __typename\n  url\n  number\n  title\n  state\n  isDraft\n  isInMergeQueue\n  createdAt\n  repository {\n    id\n    name\n    nameWithOwner\n    owner {\n      login\n      __typename\n      id\n    }\n  }\n}\n\nfragment RelationshipsSectionFragment on Issue {\n  id\n  repository {\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  parent {\n    id\n    ...ParentIssueFragment\n  }\n  ...useCanEditSubIssues\n}\n\nfragment SubIssuesSummary on Issue {\n  url\n  ...useSubIssuesSummary_4FLmrJ\n}\n\nfragment SubscriptionSectionFragment on Issue {\n  id\n  viewerThreadSubscriptionFormAction\n}\n\nfragment useCanEditSubIssues on Issue {\n  viewerCanUpdateMetadata\n  repository {\n    isArchived\n    id\n  }\n}\n\nfragment useSubIssuesSummary_4FLmrJ on Issue {\n  subIssuesSummary {\n    completed\n  }\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n}\n",
  "dcbde466874dea767e3c01eee3d8731c": "query NumberFieldTestQuery {\n  node(id: \"node-id\") {\n    __typename\n    ... on ProjectV2Item {\n      project {\n        viewerCanUpdate\n        url\n        id\n        fields(first: 50, orderBy: {field: POSITION, direction: ASC}) {\n          edges {\n            node {\n              __typename\n              ... on ProjectV2Field {\n                id\n                name\n                dataType\n                ...NumberFieldConfigFragment\n              }\n              ... on Node {\n                __isNode: __typename\n                id\n              }\n            }\n          }\n        }\n      }\n      fieldValues(first: 50, orderBy: {field: POSITION, direction: ASC}) {\n        edges {\n          node {\n            __typename\n            ... on ProjectV2ItemFieldNumberValue {\n              id\n              field {\n                __typename\n                ... on ProjectV2Field {\n                  id\n                }\n                ... on Node {\n                  __isNode: __typename\n                  id\n                }\n              }\n            }\n            ...NumberFieldFragment\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n      }\n    }\n    id\n  }\n}\n\nfragment NumberFieldConfigFragment on ProjectV2Field {\n  id\n  name\n}\n\nfragment NumberFieldFragment on ProjectV2ItemFieldNumberValue {\n  id\n  number\n  field {\n    __typename\n    ...NumberFieldConfigFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n",
  "ddd0873a2ea0cf4074cb30d45e20de4b": "query HeaderParentTitleQuery(\n  $issueId: ID!\n) {\n  node(id: $issueId) {\n    __typename\n    ... on Issue {\n      ...HeaderParentTitle\n    }\n    id\n  }\n}\n\nfragment HeaderParentTitle on Issue {\n  parent {\n    id\n    number\n    repository {\n      name\n      owner {\n        __typename\n        login\n        id\n      }\n      id\n    }\n    state\n    stateReason\n    title\n    url\n  }\n}\n",
  "dfa0b6a7bbad4efb222fca4a4a67bcdf": "query IssueViewerTestComponentQuery {\n  issue: node(id: \"mockIssueId1\") {\n    __typename\n    ... on Issue {\n      ...IssueViewerIssue\n    }\n    id\n  }\n  viewer: node(id: \"test-id-viewer\") {\n    __typename\n    ... on User {\n      ...IssueViewerViewer\n    }\n    id\n  }\n}\n\nfragment AddSubIssueButtonGroup_4FLmrJ on Issue {\n  id\n  repository {\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  parent {\n    id\n  }\n}\n\nfragment AddedToProjectEvent on AddedToProjectEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  projectColumnName\n  databaseId\n}\n\nfragment AddedToProjectV2Event on AddedToProjectV2Event {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n}\n\nfragment AssignedEvent on AssignedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    login\n    id\n  }\n  assignee {\n    __typename\n    ... on User {\n      login\n    }\n    ... on Mannequin {\n      login\n    }\n    ... on Organization {\n      login\n    }\n    ... on Bot {\n      login\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment AssigneePickerAssignee on User {\n  id\n  login\n  name\n  avatarUrl(size: 64)\n}\n\nfragment AssigneesSectionAssignees on Issue {\n  assignees(first: 20) {\n    nodes {\n      ...AssigneePickerAssignee\n      id\n    }\n  }\n}\n\nfragment AssigneesSectionFragment on Issue {\n  id\n  number\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    isArchived\n    planFeatures {\n      maximumAssignees\n    }\n    id\n  }\n  ...AssigneesSectionAssignees\n  viewerCanUpdateNext\n  viewerCanAssign\n}\n\nfragment ClassicProjectItem on ProjectCard {\n  project {\n    name\n    url\n    ...SingleSelectColumnProject\n    id\n  }\n  column {\n    ...SingleSelectColumn\n    id\n  }\n}\n\nfragment ClosedEvent on ClosedEvent {\n  databaseId\n  createdAt\n  stateReason\n  closingProjectItemStatus\n  closer {\n    __typename\n    ... on ProjectV2 {\n      url\n      title\n    }\n    ... on PullRequest {\n      url\n      number\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Commit {\n      url\n      abbreviatedOid\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment CommentDeletedEvent on CommentDeletedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  deletedCommentAuthor {\n    __typename\n    login\n    id\n  }\n}\n\nfragment ConnectedEvent on ConnectedEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  subject {\n    __typename\n    ... on PullRequest {\n      title\n      url\n      number\n      state\n      isDraft\n      isInMergeQueue\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ConvertedFromDraftEvent on ConvertedFromDraftEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  databaseId\n}\n\nfragment ConvertedNoteToIssueEvent on ConvertedNoteToIssueEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  project {\n    url\n    name\n    id\n  }\n}\n\nfragment ConvertedToDiscussionEvent on ConvertedToDiscussionEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  discussion {\n    url\n    number\n    id\n  }\n}\n\nfragment CrossReferencedEvent on CrossReferencedEvent {\n  referencedAt\n  willCloseTarget\n  databaseId\n  target {\n    __typename\n    ... on Issue {\n      repository {\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  innerSource: source {\n    __typename\n    ...CrossReferencedEventInner\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment CrossReferencedEventInner on ReferencedSubject {\n  __isReferencedSubject: __typename\n  __typename\n  ... on Issue {\n    id\n    issueTitleHTML: titleHTML\n    url\n    number\n    stateReason\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n  ... on PullRequest {\n    id\n    pullTitleHTML: titleHTML\n    url\n    number\n    state\n    isDraft\n    isInMergeQueue\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n}\n\nfragment DemilestonedEvent on DemilestonedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  milestoneTitle\n  milestone {\n    url\n    id\n  }\n}\n\nfragment DisconnectedEvent on DisconnectedEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  subject {\n    __typename\n    ... on PullRequest {\n      title\n      url\n      number\n      state\n      isDraft\n      isInMergeQueue\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment EventActor on Actor {\n  __isActor: __typename\n  avatarUrl(size: 64)\n  login\n  __typename\n}\n\nfragment Header on Issue {\n  title\n  number\n  id\n  repository {\n    nameWithOwner\n    id\n  }\n  ...HeaderViewer\n  ...HeaderMetadata\n}\n\nfragment HeaderIssueType on Issue {\n  repository {\n    nameWithOwner\n    id\n  }\n  issueType {\n    name\n    color\n    id\n  }\n}\n\nfragment HeaderMenu on Issue {\n  id\n  viewerCanUpdateNext\n  repository {\n    id\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    isArchived\n  }\n  url\n}\n\nfragment HeaderMetadata on Issue {\n  url\n  ...HeaderIssueType\n  ...HeaderMenu\n  ...HeaderState\n  ...StickyHeaderTitle\n  ...RepositoryPill\n  ...LinkedPullRequests\n  ...HeaderSubIssueSummaryWithPrimary\n}\n\nfragment HeaderState on Issue {\n  state\n  stateReason\n}\n\nfragment HeaderSubIssueSummary on Issue {\n  ...useSubIssuesSummary_46hWwf\n}\n\nfragment HeaderSubIssueSummaryWithPrimary on Issue {\n  ...useSubIssuesSummary_4FLmrJ\n}\n\nfragment HeaderViewer on Issue {\n  titleHTML\n  number\n  url\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...HeaderMenu\n}\n\nfragment IssueActions on Issue {\n  ...IssueActionsState\n}\n\nfragment IssueActionsState on Issue {\n  state\n  stateReason\n  id\n}\n\nfragment IssueBody on Issue {\n  id\n  databaseId\n  viewerDidAuthor\n  locked\n  author {\n    __typename\n    ...IssueBodyHeaderActions\n    id\n  }\n  repository {\n    databaseId\n    nameWithOwner\n    slashCommandsEnabled\n    id\n    owner {\n      __typename\n      login\n      id\n      url\n    }\n  }\n  url\n  viewerCanUpdateNext\n  ...IssueBodyViewer\n  ...IssueBodyContent\n  ...IssueBodyHeader\n  ...IssueBodyViewerReactable\n  ...IssueBodyViewerSubIssues\n}\n\nfragment IssueBodyContent on Issue {\n  body\n  bodyHTML(unfurlReferences: true, renderTasklistBlocks: true)\n  bodyVersion\n}\n\nfragment IssueBodyHeader on Comment {\n  __isComment: __typename\n  ...IssueBodyHeaderActions_comment\n  createdAt\n  viewerDidAuthor\n  author {\n    __typename\n    ...IssueBodyHeaderAuthor\n    ...IssueBodyHeaderActions\n    id\n  }\n}\n\nfragment IssueBodyHeaderActions on Actor {\n  __isActor: __typename\n  login\n  id\n}\n\nfragment IssueBodyHeaderActions_comment on Comment {\n  __isComment: __typename\n  body\n}\n\nfragment IssueBodyHeaderAuthor on Actor {\n  __isActor: __typename\n  login\n  avatarUrl\n  profileUrl\n}\n\nfragment IssueBodyViewer on Comment {\n  __isComment: __typename\n  id\n}\n\nfragment IssueBodyViewerReactable on Reactable {\n  __isReactable: __typename\n  ...ReactionViewerGroups\n}\n\nfragment IssueBodyViewerSubIssues on Issue {\n  ...useCanEditSubIssues\n  ...useHasSubIssues\n  ...AddSubIssueButtonGroup_4FLmrJ\n}\n\nfragment IssueCommentComposer on Issue {\n  id\n  locked\n  viewerCanComment\n  databaseId\n  repository {\n    id\n    databaseId\n    isArchived\n    nameWithOwner\n    viewerCanInteract\n    viewerInteractionLimitReasonHTML\n  }\n  ...IssueActions\n}\n\nfragment IssueCommentComposerViewer on User {\n  id\n  login\n  avatarUrl(size: 64)\n}\n\nfragment IssueCommentEditorBodyFragment on IssueComment {\n  id\n  body\n  bodyVersion\n  author {\n    __typename\n    login\n    avatarUrl\n    id\n  }\n  issue {\n    author {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...IssueCommentHeader\n}\n\nfragment IssueCommentEditor_repository on IssueComment {\n  repository {\n    slashCommandsEnabled\n    nameWithOwner\n    databaseId\n    id\n  }\n}\n\nfragment IssueCommentHeader on IssueComment {\n  id\n  databaseId\n  url\n  createdAt\n  body\n  authorAssociation\n  viewerCanUpdate\n  viewerCanDelete\n  viewerCanMinimize\n  viewerCanReport\n  viewerCanReportToMaintainer\n  viewerCanBlockFromOrg\n  viewerCanUnblockFromOrg\n  isHidden: isMinimized\n  minimizedReason\n  createdViaEmail\n  viewerDidAuthor\n  authorToRepoOwnerSponsorship {\n    createdAt\n    isActive\n    id\n  }\n  author {\n    __typename\n    id\n    login\n  }\n  repository {\n    id\n    name\n    owner {\n      __typename\n      id\n      login\n      url\n    }\n    isPrivate\n  }\n  issue {\n    number\n    id\n  }\n  ...MarkdownEditHistoryViewer_comment\n}\n\nfragment IssueCommentViewerCommentRow on IssueComment {\n  id\n  databaseId\n  ...IssueCommentViewerMarkdownViewer\n  ...IssueCommentHeader\n  author {\n    avatarUrl\n    login\n    __typename\n    id\n  }\n  issue {\n    id\n    locked\n  }\n  body\n  isHidden: isMinimized\n  viewerCanUpdate\n}\n\nfragment IssueCommentViewerMarkdownViewer on IssueComment {\n  id\n  body\n  bodyHTML(unfurlReferences: true)\n  bodyVersion\n  viewerCanUpdate\n}\n\nfragment IssueCommentViewerReactable on Reactable {\n  __isReactable: __typename\n  ...ReactionViewerGroups\n}\n\nfragment IssueComment_issueComment on IssueComment {\n  ...IssueCommentViewerCommentRow\n  ...IssueCommentViewerReactable\n  ...IssueCommentEditor_repository\n  ...IssueCommentEditorBodyFragment\n  issue {\n    id\n  }\n  id\n}\n\nfragment IssueSidebarPrimaryQuery_654Fh on Issue {\n  ...AssigneesSectionFragment\n  ...LabelsSectionFragment\n  ...ProjectsSectionFragment_654Fh\n  ...MilestonesSectionFragment\n  ...OptionsSectionFragment\n}\n\nfragment IssueTimelineBackPaginated_2Dhmdq on Issue {\n  timelineItems(last: 0, visibleEventsOnly: true) @defer(label: \"Issue_backTimeline\") {\n    totalCount\n    pageInfo {\n      hasPreviousPage\n      startCursor\n    }\n    edges {\n      node {\n        ... on TimelineEvent {\n          __isTimelineEvent: __typename\n          databaseId\n        }\n        __typename\n        ... on Node {\n          __isNode: __typename\n          id\n        }\n      }\n      cursor\n    }\n    ...TimelineItemsPaginated\n  }\n  id\n  url\n}\n\nfragment IssueTimelineFrontPaginated_40vLL5 on Issue {\n  frontTimeline: timelineItems(first: 15, visibleEventsOnly: true) @defer(label: \"Issue_frontTimeline\") {\n    totalCount\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    edges {\n      node {\n        ... on TimelineEvent {\n          __isTimelineEvent: __typename\n          databaseId\n        }\n        __typename\n        ... on Node {\n          __isNode: __typename\n          id\n        }\n      }\n      cursor\n    }\n    ...TimelineItemsPaginated\n  }\n  id\n  url\n}\n\nfragment IssueTimelinePaginated_40vLL5 on Issue {\n  author {\n    __typename\n    login\n    id\n  }\n  ...IssueTimelineFrontPaginated_40vLL5\n  ...IssueTimelineBackPaginated_2Dhmdq\n}\n\nfragment IssueTypesDialogIssueType on IssueType {\n  id\n}\n\nfragment IssueTypesDialogIssueTypes on IssueTypeConnection {\n  nodes {\n    id\n    name\n    color\n    description\n    isEnabled\n  }\n}\n\nfragment IssueViewerIssue on Issue {\n  id\n  updatedAt\n  ...useHasSubIssues\n  ...useCanEditSubIssues\n  ...Header\n  ...IssueBody\n  ...IssueCommentComposer\n  ...IssueSidebarPrimaryQuery_654Fh\n  ...IssueTimelinePaginated_40vLL5\n  ...HeaderSubIssueSummary\n}\n\nfragment IssueViewerViewer on User {\n  enterpriseManagedEnterpriseId\n  login\n  ...IssueCommentComposerViewer\n  ...AssigneePickerAssignee\n  ...SubIssuesListViewViewer\n}\n\nfragment LabelData on Label {\n  nameHTML\n  name\n  color\n  id\n  description\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment LabelPickerLabel on Label {\n  id\n  color\n  name\n  nameHTML\n  description\n  url\n}\n\nfragment LabeledEvent on LabeledEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  label {\n    ...LabelData\n    id\n  }\n}\n\nfragment LabelsSectionAssignedLabels on Labelable {\n  __isLabelable: __typename\n  labels(first: 100, orderBy: {field: NAME, direction: ASC}) {\n    edges {\n      node {\n        ...LabelPickerLabel\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  ... on Node {\n    __isNode: __typename\n    id\n  }\n}\n\nfragment LabelsSectionFragment on Issue {\n  id\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    isArchived\n    id\n  }\n  ...LabelsSectionAssignedLabels\n  viewerCanLabel\n}\n\nfragment LinkedPullRequest on PullRequest {\n  url\n  number\n  state\n  isDraft\n  repository {\n    name\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment LinkedPullRequests on Issue {\n  repository {\n    nameWithOwner\n    id\n  }\n  linkedPullRequests: closedByPullRequestsReferences(first: 10, includeClosedPrs: false, orderByState: true) {\n    nodes {\n      repository {\n        nameWithOwner\n        id\n      }\n      state\n      isDraft\n      ...LinkedPullRequest\n      id\n    }\n  }\n}\n\nfragment LockedEvent on LockedEvent {\n  databaseId\n  createdAt\n  lockReason\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment MarkdownEditHistoryViewer_comment on Comment {\n  __isComment: __typename\n  id\n  viewerCanReadUserContentEdits\n  lastEditedAt\n  lastUserContentEdit {\n    editor {\n      __typename\n      url\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment MarkedAsDuplicateEvent on MarkedAsDuplicateEvent {\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  canonical {\n    __typename\n    ... on Issue {\n      url\n      number\n      id\n    }\n    ... on PullRequest {\n      url\n      number\n      id\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  databaseId\n  viewerCanUndo\n  id\n}\n\nfragment MentionedEvent on MentionedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment MilestonePickerMilestone on Milestone {\n  id\n  title\n  closed\n  dueOn\n  progressPercentage\n  url\n  closedAt\n}\n\nfragment MilestonedEvent on MilestonedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  milestoneTitle\n  milestone {\n    url\n    id\n  }\n}\n\nfragment MilestonesSectionFragment on Issue {\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  id\n  ...MilestonesSectionMilestone\n  viewerCanSetMilestone\n}\n\nfragment MilestonesSectionMilestone on Issue {\n  milestone {\n    ...MilestonePickerMilestone\n    id\n  }\n}\n\nfragment MovedColumnsInProjectEvent on MovedColumnsInProjectEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  previousProjectColumnName\n  projectColumnName\n}\n\nfragment OptionsSectionFragment on Issue {\n  id\n  isPinned\n  locked\n  viewerCanUpdateNext\n  viewerCanDelete\n  viewerCanTransfer\n  viewerCanConvertToDiscussion\n  viewerCanType\n  repository {\n    id\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    isPrivate\n    issueTypes(first: 10) {\n      ...IssueTypesDialogIssueTypes\n      totalCount\n    }\n    pinnedIssues(first: 3) {\n      totalCount\n    }\n    viewerCanPinIssues\n  }\n  issueType {\n    ...IssueTypesDialogIssueType\n    id\n  }\n}\n\nfragment PinnedEvent on PinnedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment ProjectItemSection on ProjectV2Item {\n  id\n  isArchived\n  project {\n    id\n  }\n  ...ProjectItemSectionView\n}\n\nfragment ProjectItemSectionView on ProjectV2Item {\n  id\n  isArchived\n  project {\n    id\n    title\n    template\n    viewerCanUpdate\n    url\n    field(name: \"Status\") {\n      __typename\n      ...SingleSelectFieldConfigFragment\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n  fieldValueByName(name: \"Status\") {\n    __typename\n    ...SingleSelectFieldFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ProjectPickerClassicProject on Project {\n  id\n  title: name\n  closed\n  number\n  url\n  viewerCanUpdate\n  columns(first: 10) {\n    nodes {\n      id\n      name\n    }\n  }\n  __typename\n}\n\nfragment ProjectPickerProject on ProjectV2 {\n  id\n  title\n  closed\n  number\n  url\n  viewerCanUpdate\n  __typename\n}\n\nfragment ProjectV2ItemStatusChangedEvent on ProjectV2ItemStatusChangedEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n  previousStatus\n  status\n}\n\nfragment ProjectsSectionFragment_654Fh on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    number\n    repository {\n      name\n      owner {\n        __typename\n        login\n        id\n      }\n      isArchived\n      id\n    }\n    id\n    projectItemsNext(first: 10) {\n      edges {\n        node {\n          id\n          ...ProjectItemSection\n          project {\n            ...ProjectPickerProject\n            closed\n            title\n            id\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    projectCards(first: 10) {\n      edges {\n        node {\n          id\n          ...ClassicProjectItem\n          project {\n            id\n            closed\n            ...ProjectPickerClassicProject\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    viewerCanUpdateMetadata\n  }\n  ... on PullRequest {\n    number\n    repository {\n      name\n      owner {\n        __typename\n        login\n        id\n      }\n      isArchived\n      id\n    }\n    id\n    projectItemsNext(first: 10) {\n      edges {\n        node {\n          id\n          ...ProjectItemSection\n          project {\n            closed\n            ...ProjectPickerProject\n            title\n            id\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    projectCards(first: 10) {\n      edges {\n        node {\n          id\n          ...ClassicProjectItem\n          project {\n            id\n            closed\n            ...ProjectPickerClassicProject\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    viewerCanUpdate\n  }\n}\n\nfragment ReactionButton_Reaction on ReactionGroup {\n  content\n  reactors(first: 5) {\n    nodes {\n      __typename\n      ... on User {\n        login\n        __typename\n      }\n      ... on Bot {\n        login\n        __typename\n      }\n      ... on Organization {\n        login\n        __typename\n      }\n      ... on Mannequin {\n        login\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n    totalCount\n  }\n  viewerHasReacted\n}\n\nfragment ReactionViewerGroups on Reactable {\n  __isReactable: __typename\n  reactionGroups {\n    ...ReactionButton_Reaction\n    ...ReactionsMenuItem_Reaction\n  }\n}\n\nfragment ReactionsMenuItem_Reaction on ReactionGroup {\n  content\n  viewerHasReacted\n}\n\nfragment ReferencedEvent on ReferencedEvent {\n  databaseId\n  willCloseSubject\n  subject {\n    __typename\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  commit {\n    ...ReferencedEventInner\n    id\n  }\n  createdAt\n}\n\nfragment ReferencedEventInner on Commit {\n  message\n  messageHeadlineHTML\n  messageBodyHTML\n  url\n  abbreviatedOid\n  signature {\n    __typename\n    signer {\n      login\n      avatarUrl\n      id\n    }\n    state\n    wasSignedByGitHub\n    ... on SmimeSignature {\n      issuer {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n      subject {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n    }\n    ... on GpgSignature {\n      keyId\n    }\n    ... on SshSignature {\n      keyFingerprint\n    }\n  }\n  verificationStatus\n  hasSignature\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    defaultBranch\n    id\n  }\n}\n\nfragment RemovedFromProjectEvent on RemovedFromProjectEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  projectColumnName\n}\n\nfragment RemovedFromProjectV2Event on RemovedFromProjectV2Event {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n}\n\nfragment RenamedTitleEvent on RenamedTitleEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  currentTitle\n  previousTitle\n}\n\nfragment ReopenedEvent on ReopenedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment RepositoryPill on Issue {\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    isPrivate\n    id\n  }\n}\n\nfragment SingleSelectColumn on ProjectColumn {\n  id\n  name\n}\n\nfragment SingleSelectColumnProject on Project {\n  id\n  name\n  columns(first: 10) {\n    nodes {\n      ...SingleSelectColumn\n      id\n    }\n  }\n}\n\nfragment SingleSelectFieldConfigFragment on ProjectV2SingleSelectField {\n  id\n  name\n  options {\n    ...SingleSelectFieldOptionFragment\n    id\n    name\n    description\n    color\n  }\n}\n\nfragment SingleSelectFieldFragment on ProjectV2ItemFieldSingleSelectValue {\n  id\n  optionId\n  name\n  nameHTML\n  color\n}\n\nfragment SingleSelectFieldOptionFragment on ProjectV2SingleSelectFieldOption {\n  id\n  optionId\n  name\n  nameHTML\n  color\n  descriptionHTML\n}\n\nfragment StickyHeaderTitle on Issue {\n  titleHTML\n  number\n  url\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment SubIssuesListViewViewer on User {\n  isEmployee\n}\n\nfragment SubscribedEvent on SubscribedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment TimelineItemsPaginated on IssueTimelineItemsConnection {\n  edges {\n    node {\n      ... on IssueComment {\n        databaseId\n        viewerDidAuthor\n        issue {\n          author {\n            __typename\n            login\n            id\n          }\n          id\n        }\n      }\n      ... on ReferencedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on CrossReferencedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        source {\n          __typename\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n        willCloseTarget\n      }\n      ... on MentionedEvent {\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on LabeledEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        label {\n          id\n        }\n      }\n      ... on UnlabeledEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        label {\n          id\n        }\n      }\n      ... on AssignedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        assignee {\n          __typename\n          ... on User {\n            id\n          }\n          ... on Bot {\n            id\n          }\n          ... on Mannequin {\n            id\n          }\n          ... on Organization {\n            id\n          }\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n      }\n      ... on UnassignedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        assignee {\n          __typename\n          ... on User {\n            id\n          }\n          ... on Bot {\n            id\n          }\n          ... on Mannequin {\n            id\n          }\n          ... on Organization {\n            id\n          }\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n      }\n      ... on AddedToProjectV2Event {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on RemovedFromProjectV2Event {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      __typename\n      ...IssueComment_issueComment\n      ...AddedToProjectEvent\n      ...MovedColumnsInProjectEvent\n      ...RemovedFromProjectEvent\n      ...SubscribedEvent\n      ...UnsubscribedEvent\n      ...MentionedEvent\n      ...ClosedEvent\n      ...ReopenedEvent\n      ...LockedEvent\n      ...UnlockedEvent\n      ...PinnedEvent\n      ...UnpinnedEvent\n      ...LabeledEvent\n      ...RenamedTitleEvent\n      ...UnlabeledEvent\n      ...UnassignedEvent\n      ...AssignedEvent\n      ...CommentDeletedEvent\n      ...UserBlockedEvent\n      ...MilestonedEvent\n      ...DemilestonedEvent\n      ...CrossReferencedEvent\n      ...ReferencedEvent\n      ...ConnectedEvent\n      ...TransferredEvent\n      ...ConvertedNoteToIssueEvent\n      ...DisconnectedEvent\n      ...MarkedAsDuplicateEvent\n      ...UnmarkedAsDuplicateEvent\n      ...ConvertedToDiscussionEvent\n      ...AddedToProjectV2Event\n      ...RemovedFromProjectV2Event\n      ...ProjectV2ItemStatusChangedEvent\n      ...ConvertedFromDraftEvent\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n}\n\nfragment TimelineRowEventActor on Actor {\n  __isActor: __typename\n  ...EventActor\n}\n\nfragment TransferredEvent on TransferredEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  fromRepository {\n    nameWithOwner\n    url\n    id\n  }\n}\n\nfragment UnassignedEvent on UnassignedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    login\n    ...TimelineRowEventActor\n    id\n  }\n  assignee {\n    __typename\n    ... on User {\n      login\n    }\n    ... on Mannequin {\n      login\n    }\n    ... on Organization {\n      login\n    }\n    ... on Bot {\n      login\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment UnlabeledEvent on UnlabeledEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  label {\n    ...LabelData\n    id\n  }\n}\n\nfragment UnlockedEvent on UnlockedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UnmarkedAsDuplicateEvent on UnmarkedAsDuplicateEvent {\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  canonical {\n    __typename\n    ... on Issue {\n      url\n      number\n    }\n    ... on PullRequest {\n      url\n      number\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  databaseId\n}\n\nfragment UnpinnedEvent on UnpinnedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UnsubscribedEvent on UnsubscribedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UserBlockedEvent on UserBlockedEvent {\n  databaseId\n  createdAt\n  blockDuration\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  blockedUser: subject {\n    login\n    id\n  }\n}\n\nfragment useCanEditSubIssues on Issue {\n  viewerCanUpdateMetadata\n  repository {\n    isArchived\n    id\n  }\n}\n\nfragment useHasSubIssues on Issue {\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n}\n\nfragment useSubIssuesSummary_46hWwf on Issue {\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n  subIssues(first: 50) {\n    nodes {\n      closed\n      ...useSubIssuesSummary_issueState\n      id\n    }\n  }\n}\n\nfragment useSubIssuesSummary_4FLmrJ on Issue {\n  subIssuesSummary {\n    completed\n  }\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n}\n\nfragment useSubIssuesSummary_issueState on Issue {\n  closed\n}\n",
  "dfd8a2fa8a880338553ead35d599ab80": "query OrganizationPickerQuery {\n  viewer {\n    ...OrganizationPickerOrganizationsPaginated\n    id\n  }\n}\n\nfragment OrganizationPickerOrganization on Organization {\n  id\n  avatarUrl\n  name\n}\n\nfragment OrganizationPickerOrganizationsPaginated on User {\n  organizations(first: 100) {\n    edges {\n      node {\n        ...OrganizationPickerOrganization\n        id\n        __typename\n      }\n      cursor\n    }\n    totalCount\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n}\n",
  "e180c26358fa12169aa50c85756f93c5": "query AddToProjectsActionQuery(\n  $ids: [ID!]!\n) {\n  nodes(ids: $ids) {\n    __typename\n    ... on Issue {\n      id\n      projectItemsNext(first: 10) {\n        edges {\n          node {\n            id\n            project {\n              ...ProjectPickerProject\n              id\n            }\n          }\n        }\n      }\n    }\n    id\n  }\n}\n\nfragment ProjectPickerProject on ProjectV2 {\n  id\n  title\n  closed\n  number\n  url\n  viewerCanUpdate\n  __typename\n}\n",
  "e2ce9b4e2f1997f3dc0ca6145b0013ab": "query ClientSideRelayDataGeneratorQuery(\n  $ids: [ID!]!\n) {\n  nodes(ids: $ids) {\n    __typename\n    ... on Shortcutable {\n      __isShortcutable: __typename\n      ...ListCurrentViewFragment\n      ...IssueDetailCurrentViewFragment\n      ...EditViewButtonCurrentViewFragment\n    }\n    id\n  }\n}\n\nfragment EditViewButtonCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  id\n  name\n  description\n  icon\n  color\n  query\n}\n\nfragment HeaderContentCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  name\n  description\n  id\n}\n\nfragment HeaderCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  id\n  name\n  query\n}\n\nfragment IconAndColorPickerViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  icon\n  color\n  id\n}\n\nfragment IssueDetailCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  name\n  query\n}\n\nfragment ListCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  ...SearchBarCurrentViewFragment\n  ...HeaderCurrentViewFragment\n  ...EditViewButtonCurrentViewFragment\n  ...HeaderContentCurrentViewFragment\n  ...IconAndColorPickerViewFragment\n}\n\nfragment SearchBarCurrentViewFragment on Shortcutable {\n  __isShortcutable: __typename\n  id\n  name\n  description\n  icon\n  color\n  query\n  scopingRepository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n",
  "e556bd4fa534cbbaed2cb5c5734b8a95": "query IssueTypesDialogRepoTestQuery {\n  repository(name: \"github\", owner: \"cool-repo\") {\n    issueTypes(first: 10) {\n      ...IssueTypesDialogIssueTypes\n    }\n    id\n  }\n}\n\nfragment IssueTypesDialogIssueTypes on IssueTypeConnection {\n  nodes {\n    id\n    name\n    color\n    description\n    isEnabled\n  }\n}\n",
  "e5a693d51f81c0c0e48dba53110fe49a": "query IssueViewerTestComponentSecondaryQuery(\n  $issueId: ID!\n) {\n  node(id: $issueId) {\n    __typename\n    ... on Issue {\n      ...IssueViewerSecondaryIssueData\n    }\n    id\n  }\n}\n\nfragment AddSubIssueButtonGroup_46hWwf on Issue {\n  id\n  repository {\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  parent {\n    id\n  }\n  subIssues(first: 50) {\n    nodes {\n      id\n    }\n  }\n}\n\nfragment AssigneePickerAssignee on User {\n  id\n  login\n  name\n  avatarUrl(size: 64)\n}\n\nfragment AssigneesSectionLazyFragment on Issue {\n  participants(first: 10) {\n    nodes {\n      ...AssigneePickerAssignee\n      id\n    }\n  }\n}\n\nfragment BranchPickerRef on Ref {\n  name\n  id\n  __typename\n  target {\n    oid\n    id\n    __typename\n  }\n  repository {\n    id\n    nameWithOwner\n    defaultBranchRef {\n      name\n      id\n      target {\n        oid\n        id\n        __typename\n      }\n      associatedPullRequests {\n        totalCount\n      }\n      repository {\n        id\n      }\n    }\n  }\n  associatedPullRequests {\n    totalCount\n  }\n}\n\nfragment ClosedByPullRequestsReferences on Issue {\n  closedByPullRequestsReferences(first: 0, includeClosedPrs: true) {\n    totalCount\n  }\n}\n\nfragment DevelopmentSectionFragment on Issue {\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  id\n  title\n  number\n  linkedBranches(first: 25) {\n    nodes {\n      id\n      ref {\n        ...BranchPickerRef\n        id\n      }\n    }\n  }\n  closedByPullRequestsReferences(first: 10, includeClosedPrs: true) {\n    nodes {\n      ...PullRequestPickerPullRequest\n      id\n    }\n  }\n  ...LinkedPullRequests\n  viewerCanUpdateNext\n}\n\nfragment HeaderParentTitle on Issue {\n  parent {\n    id\n    number\n    repository {\n      name\n      owner {\n        __typename\n        login\n        id\n      }\n      id\n    }\n    state\n    stateReason\n    title\n    url\n  }\n}\n\nfragment HeaderSecondary on Issue {\n  isTransferInProgress\n}\n\nfragment HeaderSubIssueSummary on Issue {\n  ...useSubIssuesSummary_46hWwf\n}\n\nfragment IssueBodyHeaderSecondaryFragment on Comment {\n  __isComment: __typename\n  ...MarkdownEditHistoryViewer_comment\n}\n\nfragment IssueBodySecondaryFragment on Issue {\n  viewerCanReport\n  viewerCanReportToMaintainer\n  viewerCanBlockFromOrg\n  viewerCanUnblockFromOrg\n}\n\nfragment IssueCommentComposerSecondary on Issue {\n  viewerCanReopen\n  viewerCanClose\n  repository {\n    slashCommandsEnabled\n    id\n  }\n}\n\nfragment IssueSidebarLazySections on Issue {\n  ...DevelopmentSectionFragment\n  ...RelationshipsSectionFragment\n  ...SubscriptionSectionFragment\n  ...ParticipantsSectionFragment\n}\n\nfragment IssueSidebarSecondary on Issue {\n  ...OptionsSectionSecondary\n  ...AssigneesSectionLazyFragment\n}\n\nfragment IssueTimelineSecondary on Issue {\n  isTransferInProgress\n}\n\nfragment IssueViewerSecondaryIssueData on Issue {\n  ...HeaderSecondary\n  ...HeaderParentTitle\n  ...IssueCommentComposerSecondary\n  ...IssueTimelineSecondary\n  ...IssueSidebarLazySections\n  ...IssueSidebarSecondary\n  ...TaskListStatusFragment\n  ...TrackedByFragment\n  ...IssueBodyHeaderSecondaryFragment\n  ...IssueBodySecondaryFragment\n  ...SubIssuesList\n  ...SubIssuesCreateDialog\n  ...HeaderSubIssueSummary\n}\n\nfragment LinkedPullRequest on PullRequest {\n  url\n  number\n  state\n  isDraft\n  repository {\n    name\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment LinkedPullRequests on Issue {\n  repository {\n    nameWithOwner\n    id\n  }\n  linkedPullRequests: closedByPullRequestsReferences(first: 10, includeClosedPrs: false, orderByState: true) {\n    nodes {\n      repository {\n        nameWithOwner\n        id\n      }\n      state\n      isDraft\n      ...LinkedPullRequest\n      id\n    }\n  }\n}\n\nfragment MarkdownEditHistoryViewer_comment on Comment {\n  __isComment: __typename\n  id\n  viewerCanReadUserContentEdits\n  lastEditedAt\n  lastUserContentEdit {\n    editor {\n      __typename\n      url\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment OptionsSectionSecondary on Issue {\n  isTransferInProgress\n}\n\nfragment ParentIssueFragment on Issue {\n  id\n  title\n  url\n  number\n  repository {\n    nameWithOwner\n    id\n  }\n  state\n  stateReason\n  ...SubIssuesSummary\n}\n\nfragment ParticipantFragment on User {\n  ...AssigneePickerAssignee\n}\n\nfragment ParticipantsSectionFragment on Issue {\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  number\n  participants(first: 10) {\n    nodes {\n      ...ParticipantFragment\n      id\n    }\n    totalCount\n  }\n}\n\nfragment PullRequestPickerPullRequest on PullRequest {\n  id\n  __typename\n  url\n  number\n  title\n  state\n  isDraft\n  isInMergeQueue\n  createdAt\n  repository {\n    id\n    name\n    nameWithOwner\n    owner {\n      login\n      __typename\n      id\n    }\n  }\n}\n\nfragment RelationshipsSectionFragment on Issue {\n  id\n  repository {\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  parent {\n    id\n    ...ParentIssueFragment\n  }\n  ...useCanEditSubIssues\n}\n\nfragment SubIssueStateIcon on Issue {\n  state\n  stateReason\n}\n\nfragment SubIssueTitle_4FLmrJ on Issue {\n  url\n  databaseId\n  number\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  state\n  stateReason\n  ...SubIssueTitle_TitleValue\n  ...SubIssueTypeIndicator\n  ...SubIssuesCompletionPill_4FLmrJ\n}\n\nfragment SubIssueTitle_TitleValue on Issue {\n  title\n  titleHTML\n}\n\nfragment SubIssueTypeIndicator on Issue {\n  number\n  issueType {\n    id\n    name\n    color\n  }\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment SubIssuesCompletionPill_4FLmrJ on Issue {\n  ...useSubIssuesSummary_4FLmrJ\n  url\n}\n\nfragment SubIssuesCreateDialog on Issue {\n  id\n  repository {\n    id\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n  }\n}\n\nfragment SubIssuesList on Issue {\n  ...SubIssuesListView\n  ...AddSubIssueButtonGroup_46hWwf\n}\n\nfragment SubIssuesListItem on Issue {\n  id\n  ...SubIssueStateIcon\n  assignees(first: 10) {\n    totalCount\n    edges {\n      node {\n        id\n        login\n        avatarUrl\n      }\n    }\n  }\n  url\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...SubIssuesListItem_NestedSubIssues_4FLmrJ\n  ...ClosedByPullRequestsReferences\n}\n\nfragment SubIssuesListItem_NestedSubIssues_4FLmrJ on Issue {\n  ...SubIssueTitle_4FLmrJ\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n  id\n}\n\nfragment SubIssuesListView on Issue {\n  id\n  subIssues(first: 50) {\n    nodes {\n      id\n      ...SubIssuesListItem\n    }\n  }\n  ...useSubIssuesSummary_46hWwf\n}\n\nfragment SubIssuesSummary on Issue {\n  url\n  ...useSubIssuesSummary_4FLmrJ\n}\n\nfragment SubscriptionSectionFragment on Issue {\n  id\n  viewerThreadSubscriptionFormAction\n}\n\nfragment TaskListStatusFragment on Issue {\n  taskListSummary {\n    itemCount\n    completeCount\n  }\n  tasklistBlocksCompletion {\n    completed\n    total\n  }\n}\n\nfragment TrackedByFragment on Issue {\n  trackedInIssues(first: 10) {\n    nodes {\n      number\n      url\n      stateReason\n      id\n    }\n    totalCount\n  }\n}\n\nfragment useCanEditSubIssues on Issue {\n  viewerCanUpdateMetadata\n  repository {\n    isArchived\n    id\n  }\n}\n\nfragment useSubIssuesSummary_46hWwf on Issue {\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n  subIssues(first: 50) {\n    nodes {\n      closed\n      ...useSubIssuesSummary_issueState\n      id\n    }\n  }\n}\n\nfragment useSubIssuesSummary_4FLmrJ on Issue {\n  subIssuesSummary {\n    completed\n  }\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n}\n\nfragment useSubIssuesSummary_issueState on Issue {\n  closed\n}\n",
  "e7b92226bc71f15d55fc05b7ca0fd8c1": "query SearchBarWithFilterCurrentRepoQuery {\n  repository(name: \"test-repo-name\", owner: \"test-repo-owner\") {\n    ...SearchBarRepositoryFragment\n    id\n  }\n}\n\nfragment SearchBarRepositoryFragment on Repository {\n  isOwnerEnterpriseManaged\n}\n",
  "e7f14c985f40132ed0661408be8bc246": "query IssueTimelineTestSharedQuery(\n  $owner: String!\n  $repo: String!\n  $number: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $number) {\n      ...IssueTimelinePaginated_4jG6FL\n      id\n    }\n    id\n  }\n}\n\nfragment AddedToProjectEvent on AddedToProjectEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  projectColumnName\n  databaseId\n}\n\nfragment AddedToProjectV2Event on AddedToProjectV2Event {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n}\n\nfragment AssignedEvent on AssignedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    login\n    id\n  }\n  assignee {\n    __typename\n    ... on User {\n      login\n    }\n    ... on Mannequin {\n      login\n    }\n    ... on Organization {\n      login\n    }\n    ... on Bot {\n      login\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ClosedEvent on ClosedEvent {\n  databaseId\n  createdAt\n  stateReason\n  closingProjectItemStatus\n  closer {\n    __typename\n    ... on ProjectV2 {\n      url\n      title\n    }\n    ... on PullRequest {\n      url\n      number\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Commit {\n      url\n      abbreviatedOid\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment CommentDeletedEvent on CommentDeletedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  deletedCommentAuthor {\n    __typename\n    login\n    id\n  }\n}\n\nfragment ConnectedEvent on ConnectedEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  subject {\n    __typename\n    ... on PullRequest {\n      title\n      url\n      number\n      state\n      isDraft\n      isInMergeQueue\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ConvertedFromDraftEvent on ConvertedFromDraftEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  databaseId\n}\n\nfragment ConvertedNoteToIssueEvent on ConvertedNoteToIssueEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  project {\n    url\n    name\n    id\n  }\n}\n\nfragment ConvertedToDiscussionEvent on ConvertedToDiscussionEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  discussion {\n    url\n    number\n    id\n  }\n}\n\nfragment CrossReferencedEvent on CrossReferencedEvent {\n  referencedAt\n  willCloseTarget\n  databaseId\n  target {\n    __typename\n    ... on Issue {\n      repository {\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  innerSource: source {\n    __typename\n    ...CrossReferencedEventInner\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment CrossReferencedEventInner on ReferencedSubject {\n  __isReferencedSubject: __typename\n  __typename\n  ... on Issue {\n    id\n    issueTitleHTML: titleHTML\n    url\n    number\n    stateReason\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n  ... on PullRequest {\n    id\n    pullTitleHTML: titleHTML\n    url\n    number\n    state\n    isDraft\n    isInMergeQueue\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n}\n\nfragment DemilestonedEvent on DemilestonedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  milestoneTitle\n  milestone {\n    url\n    id\n  }\n}\n\nfragment DisconnectedEvent on DisconnectedEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  subject {\n    __typename\n    ... on PullRequest {\n      title\n      url\n      number\n      state\n      isDraft\n      isInMergeQueue\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment EventActor on Actor {\n  __isActor: __typename\n  avatarUrl(size: 64)\n  login\n  __typename\n}\n\nfragment IssueCommentEditorBodyFragment on IssueComment {\n  id\n  body\n  bodyVersion\n  author {\n    __typename\n    login\n    avatarUrl\n    id\n  }\n  issue {\n    author {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...IssueCommentHeader\n}\n\nfragment IssueCommentEditor_repository on IssueComment {\n  repository {\n    slashCommandsEnabled\n    nameWithOwner\n    databaseId\n    id\n  }\n}\n\nfragment IssueCommentHeader on IssueComment {\n  id\n  databaseId\n  url\n  createdAt\n  body\n  authorAssociation\n  viewerCanUpdate\n  viewerCanDelete\n  viewerCanMinimize\n  viewerCanReport\n  viewerCanReportToMaintainer\n  viewerCanBlockFromOrg\n  viewerCanUnblockFromOrg\n  isHidden: isMinimized\n  minimizedReason\n  createdViaEmail\n  viewerDidAuthor\n  authorToRepoOwnerSponsorship {\n    createdAt\n    isActive\n    id\n  }\n  author {\n    __typename\n    id\n    login\n  }\n  repository {\n    id\n    name\n    owner {\n      __typename\n      id\n      login\n      url\n    }\n    isPrivate\n  }\n  issue {\n    number\n    id\n  }\n  ...MarkdownEditHistoryViewer_comment\n}\n\nfragment IssueCommentViewerCommentRow on IssueComment {\n  id\n  databaseId\n  ...IssueCommentViewerMarkdownViewer\n  ...IssueCommentHeader\n  author {\n    avatarUrl\n    login\n    __typename\n    id\n  }\n  issue {\n    id\n    locked\n  }\n  body\n  isHidden: isMinimized\n  viewerCanUpdate\n}\n\nfragment IssueCommentViewerMarkdownViewer on IssueComment {\n  id\n  body\n  bodyHTML(unfurlReferences: true)\n  bodyVersion\n  viewerCanUpdate\n}\n\nfragment IssueCommentViewerReactable on Reactable {\n  __isReactable: __typename\n  ...ReactionViewerGroups\n}\n\nfragment IssueComment_issueComment on IssueComment {\n  ...IssueCommentViewerCommentRow\n  ...IssueCommentViewerReactable\n  ...IssueCommentEditor_repository\n  ...IssueCommentEditorBodyFragment\n  issue {\n    id\n  }\n  id\n}\n\nfragment IssueTimelineBackPaginated_2Dhmdq on Issue {\n  timelineItems(last: 0, visibleEventsOnly: true) @defer(label: \"Issue_backTimeline\") {\n    totalCount\n    pageInfo {\n      hasPreviousPage\n      startCursor\n    }\n    edges {\n      node {\n        ... on TimelineEvent {\n          __isTimelineEvent: __typename\n          databaseId\n        }\n        __typename\n        ... on Node {\n          __isNode: __typename\n          id\n        }\n      }\n      cursor\n    }\n    ...TimelineItemsPaginated\n  }\n  id\n  url\n}\n\nfragment IssueTimelineFrontPaginated_4jG6FL on Issue {\n  frontTimeline: timelineItems(first: 25, visibleEventsOnly: true) @defer(label: \"Issue_frontTimeline\") {\n    totalCount\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    edges {\n      node {\n        ... on TimelineEvent {\n          __isTimelineEvent: __typename\n          databaseId\n        }\n        __typename\n        ... on Node {\n          __isNode: __typename\n          id\n        }\n      }\n      cursor\n    }\n    ...TimelineItemsPaginated\n  }\n  id\n  url\n}\n\nfragment IssueTimelinePaginated_4jG6FL on Issue {\n  author {\n    __typename\n    login\n    id\n  }\n  ...IssueTimelineFrontPaginated_4jG6FL\n  ...IssueTimelineBackPaginated_2Dhmdq\n}\n\nfragment LabelData on Label {\n  nameHTML\n  name\n  color\n  id\n  description\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment LabeledEvent on LabeledEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  label {\n    ...LabelData\n    id\n  }\n}\n\nfragment LockedEvent on LockedEvent {\n  databaseId\n  createdAt\n  lockReason\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment MarkdownEditHistoryViewer_comment on Comment {\n  __isComment: __typename\n  id\n  viewerCanReadUserContentEdits\n  lastEditedAt\n  lastUserContentEdit {\n    editor {\n      __typename\n      url\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment MarkedAsDuplicateEvent on MarkedAsDuplicateEvent {\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  canonical {\n    __typename\n    ... on Issue {\n      url\n      number\n      id\n    }\n    ... on PullRequest {\n      url\n      number\n      id\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  databaseId\n  viewerCanUndo\n  id\n}\n\nfragment MentionedEvent on MentionedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment MilestonedEvent on MilestonedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  milestoneTitle\n  milestone {\n    url\n    id\n  }\n}\n\nfragment MovedColumnsInProjectEvent on MovedColumnsInProjectEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  previousProjectColumnName\n  projectColumnName\n}\n\nfragment PinnedEvent on PinnedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment ProjectV2ItemStatusChangedEvent on ProjectV2ItemStatusChangedEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n  previousStatus\n  status\n}\n\nfragment ReactionButton_Reaction on ReactionGroup {\n  content\n  reactors(first: 5) {\n    nodes {\n      __typename\n      ... on User {\n        login\n        __typename\n      }\n      ... on Bot {\n        login\n        __typename\n      }\n      ... on Organization {\n        login\n        __typename\n      }\n      ... on Mannequin {\n        login\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n    totalCount\n  }\n  viewerHasReacted\n}\n\nfragment ReactionViewerGroups on Reactable {\n  __isReactable: __typename\n  reactionGroups {\n    ...ReactionButton_Reaction\n    ...ReactionsMenuItem_Reaction\n  }\n}\n\nfragment ReactionsMenuItem_Reaction on ReactionGroup {\n  content\n  viewerHasReacted\n}\n\nfragment ReferencedEvent on ReferencedEvent {\n  databaseId\n  willCloseSubject\n  subject {\n    __typename\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  commit {\n    ...ReferencedEventInner\n    id\n  }\n  createdAt\n}\n\nfragment ReferencedEventInner on Commit {\n  message\n  messageHeadlineHTML\n  messageBodyHTML\n  url\n  abbreviatedOid\n  signature {\n    __typename\n    signer {\n      login\n      avatarUrl\n      id\n    }\n    state\n    wasSignedByGitHub\n    ... on SmimeSignature {\n      issuer {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n      subject {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n    }\n    ... on GpgSignature {\n      keyId\n    }\n    ... on SshSignature {\n      keyFingerprint\n    }\n  }\n  verificationStatus\n  hasSignature\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    defaultBranch\n    id\n  }\n}\n\nfragment RemovedFromProjectEvent on RemovedFromProjectEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  projectColumnName\n}\n\nfragment RemovedFromProjectV2Event on RemovedFromProjectV2Event {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n}\n\nfragment RenamedTitleEvent on RenamedTitleEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  currentTitle\n  previousTitle\n}\n\nfragment ReopenedEvent on ReopenedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment SubscribedEvent on SubscribedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment TimelineItemsPaginated on IssueTimelineItemsConnection {\n  edges {\n    node {\n      ... on IssueComment {\n        databaseId\n        viewerDidAuthor\n        issue {\n          author {\n            __typename\n            login\n            id\n          }\n          id\n        }\n      }\n      ... on ReferencedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on CrossReferencedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        source {\n          __typename\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n        willCloseTarget\n      }\n      ... on MentionedEvent {\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on LabeledEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        label {\n          id\n        }\n      }\n      ... on UnlabeledEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        label {\n          id\n        }\n      }\n      ... on AssignedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        assignee {\n          __typename\n          ... on User {\n            id\n          }\n          ... on Bot {\n            id\n          }\n          ... on Mannequin {\n            id\n          }\n          ... on Organization {\n            id\n          }\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n      }\n      ... on UnassignedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        assignee {\n          __typename\n          ... on User {\n            id\n          }\n          ... on Bot {\n            id\n          }\n          ... on Mannequin {\n            id\n          }\n          ... on Organization {\n            id\n          }\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n      }\n      ... on AddedToProjectV2Event {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on RemovedFromProjectV2Event {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      __typename\n      ...IssueComment_issueComment\n      ...AddedToProjectEvent\n      ...MovedColumnsInProjectEvent\n      ...RemovedFromProjectEvent\n      ...SubscribedEvent\n      ...UnsubscribedEvent\n      ...MentionedEvent\n      ...ClosedEvent\n      ...ReopenedEvent\n      ...LockedEvent\n      ...UnlockedEvent\n      ...PinnedEvent\n      ...UnpinnedEvent\n      ...LabeledEvent\n      ...RenamedTitleEvent\n      ...UnlabeledEvent\n      ...UnassignedEvent\n      ...AssignedEvent\n      ...CommentDeletedEvent\n      ...UserBlockedEvent\n      ...MilestonedEvent\n      ...DemilestonedEvent\n      ...CrossReferencedEvent\n      ...ReferencedEvent\n      ...ConnectedEvent\n      ...TransferredEvent\n      ...ConvertedNoteToIssueEvent\n      ...DisconnectedEvent\n      ...MarkedAsDuplicateEvent\n      ...UnmarkedAsDuplicateEvent\n      ...ConvertedToDiscussionEvent\n      ...AddedToProjectV2Event\n      ...RemovedFromProjectV2Event\n      ...ProjectV2ItemStatusChangedEvent\n      ...ConvertedFromDraftEvent\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n}\n\nfragment TimelineRowEventActor on Actor {\n  __isActor: __typename\n  ...EventActor\n}\n\nfragment TransferredEvent on TransferredEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  fromRepository {\n    nameWithOwner\n    url\n    id\n  }\n}\n\nfragment UnassignedEvent on UnassignedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    login\n    ...TimelineRowEventActor\n    id\n  }\n  assignee {\n    __typename\n    ... on User {\n      login\n    }\n    ... on Mannequin {\n      login\n    }\n    ... on Organization {\n      login\n    }\n    ... on Bot {\n      login\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment UnlabeledEvent on UnlabeledEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  label {\n    ...LabelData\n    id\n  }\n}\n\nfragment UnlockedEvent on UnlockedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UnmarkedAsDuplicateEvent on UnmarkedAsDuplicateEvent {\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  canonical {\n    __typename\n    ... on Issue {\n      url\n      number\n    }\n    ... on PullRequest {\n      url\n      number\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  databaseId\n}\n\nfragment UnpinnedEvent on UnpinnedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UnsubscribedEvent on UnsubscribedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UserBlockedEvent on UserBlockedEvent {\n  databaseId\n  createdAt\n  blockDuration\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  blockedUser: subject {\n    login\n    id\n  }\n}\n",
  "e85ac81963e3f5a5210808858dd10678": "query TimelinePaginationBackwardQuery(\n  $after: String\n  $before: String\n  $first: Int\n  $focusText: String\n  $last: Int\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ...HighlightedTimelineBackwardPaginated_Le289\n    id\n  }\n}\n\nfragment AddedToProjectEvent on AddedToProjectEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  projectColumnName\n  databaseId\n}\n\nfragment AddedToProjectV2Event on AddedToProjectV2Event {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n}\n\nfragment AssignedEvent on AssignedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    login\n    id\n  }\n  assignee {\n    __typename\n    ... on User {\n      login\n    }\n    ... on Mannequin {\n      login\n    }\n    ... on Organization {\n      login\n    }\n    ... on Bot {\n      login\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ClosedEvent on ClosedEvent {\n  databaseId\n  createdAt\n  stateReason\n  closingProjectItemStatus\n  closer {\n    __typename\n    ... on ProjectV2 {\n      url\n      title\n    }\n    ... on PullRequest {\n      url\n      number\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Commit {\n      url\n      abbreviatedOid\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment CommentDeletedEvent on CommentDeletedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  deletedCommentAuthor {\n    __typename\n    login\n    id\n  }\n}\n\nfragment ConnectedEvent on ConnectedEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  subject {\n    __typename\n    ... on PullRequest {\n      title\n      url\n      number\n      state\n      isDraft\n      isInMergeQueue\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ConvertedFromDraftEvent on ConvertedFromDraftEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  databaseId\n}\n\nfragment ConvertedNoteToIssueEvent on ConvertedNoteToIssueEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  project {\n    url\n    name\n    id\n  }\n}\n\nfragment ConvertedToDiscussionEvent on ConvertedToDiscussionEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  discussion {\n    url\n    number\n    id\n  }\n}\n\nfragment CrossReferencedEvent on CrossReferencedEvent {\n  referencedAt\n  willCloseTarget\n  databaseId\n  target {\n    __typename\n    ... on Issue {\n      repository {\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  innerSource: source {\n    __typename\n    ...CrossReferencedEventInner\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment CrossReferencedEventInner on ReferencedSubject {\n  __isReferencedSubject: __typename\n  __typename\n  ... on Issue {\n    id\n    issueTitleHTML: titleHTML\n    url\n    number\n    stateReason\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n  ... on PullRequest {\n    id\n    pullTitleHTML: titleHTML\n    url\n    number\n    state\n    isDraft\n    isInMergeQueue\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n}\n\nfragment DemilestonedEvent on DemilestonedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  milestoneTitle\n  milestone {\n    url\n    id\n  }\n}\n\nfragment DisconnectedEvent on DisconnectedEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  subject {\n    __typename\n    ... on PullRequest {\n      title\n      url\n      number\n      state\n      isDraft\n      isInMergeQueue\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment EventActor on Actor {\n  __isActor: __typename\n  avatarUrl(size: 64)\n  login\n  __typename\n}\n\nfragment HighlightedTimelineBackwardPaginated_Le289 on Issue {\n  timelineItems(first: $first, after: $after, before: $before, last: $last, focusText: $focusText, visibleEventsOnly: true) {\n    edges {\n      node {\n        __typename\n        ... on Node {\n          __isNode: __typename\n          id\n        }\n      }\n      cursor\n    }\n    ...TimelineItemsPaginated\n    pageInfo {\n      endCursor\n      hasNextPage\n      hasPreviousPage\n      startCursor\n    }\n  }\n  id\n  url\n}\n\nfragment IssueCommentEditorBodyFragment on IssueComment {\n  id\n  body\n  bodyVersion\n  author {\n    __typename\n    login\n    avatarUrl\n    id\n  }\n  issue {\n    author {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...IssueCommentHeader\n}\n\nfragment IssueCommentEditor_repository on IssueComment {\n  repository {\n    slashCommandsEnabled\n    nameWithOwner\n    databaseId\n    id\n  }\n}\n\nfragment IssueCommentHeader on IssueComment {\n  id\n  databaseId\n  url\n  createdAt\n  body\n  authorAssociation\n  viewerCanUpdate\n  viewerCanDelete\n  viewerCanMinimize\n  viewerCanReport\n  viewerCanReportToMaintainer\n  viewerCanBlockFromOrg\n  viewerCanUnblockFromOrg\n  isHidden: isMinimized\n  minimizedReason\n  createdViaEmail\n  viewerDidAuthor\n  authorToRepoOwnerSponsorship {\n    createdAt\n    isActive\n    id\n  }\n  author {\n    __typename\n    id\n    login\n  }\n  repository {\n    id\n    name\n    owner {\n      __typename\n      id\n      login\n      url\n    }\n    isPrivate\n  }\n  issue {\n    number\n    id\n  }\n  ...MarkdownEditHistoryViewer_comment\n}\n\nfragment IssueCommentViewerCommentRow on IssueComment {\n  id\n  databaseId\n  ...IssueCommentViewerMarkdownViewer\n  ...IssueCommentHeader\n  author {\n    avatarUrl\n    login\n    __typename\n    id\n  }\n  issue {\n    id\n    locked\n  }\n  body\n  isHidden: isMinimized\n  viewerCanUpdate\n}\n\nfragment IssueCommentViewerMarkdownViewer on IssueComment {\n  id\n  body\n  bodyHTML(unfurlReferences: true)\n  bodyVersion\n  viewerCanUpdate\n}\n\nfragment IssueCommentViewerReactable on Reactable {\n  __isReactable: __typename\n  ...ReactionViewerGroups\n}\n\nfragment IssueComment_issueComment on IssueComment {\n  ...IssueCommentViewerCommentRow\n  ...IssueCommentViewerReactable\n  ...IssueCommentEditor_repository\n  ...IssueCommentEditorBodyFragment\n  issue {\n    id\n  }\n  id\n}\n\nfragment LabelData on Label {\n  nameHTML\n  name\n  color\n  id\n  description\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment LabeledEvent on LabeledEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  label {\n    ...LabelData\n    id\n  }\n}\n\nfragment LockedEvent on LockedEvent {\n  databaseId\n  createdAt\n  lockReason\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment MarkdownEditHistoryViewer_comment on Comment {\n  __isComment: __typename\n  id\n  viewerCanReadUserContentEdits\n  lastEditedAt\n  lastUserContentEdit {\n    editor {\n      __typename\n      url\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment MarkedAsDuplicateEvent on MarkedAsDuplicateEvent {\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  canonical {\n    __typename\n    ... on Issue {\n      url\n      number\n      id\n    }\n    ... on PullRequest {\n      url\n      number\n      id\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  databaseId\n  viewerCanUndo\n  id\n}\n\nfragment MentionedEvent on MentionedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment MilestonedEvent on MilestonedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  milestoneTitle\n  milestone {\n    url\n    id\n  }\n}\n\nfragment MovedColumnsInProjectEvent on MovedColumnsInProjectEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  previousProjectColumnName\n  projectColumnName\n}\n\nfragment PinnedEvent on PinnedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment ProjectV2ItemStatusChangedEvent on ProjectV2ItemStatusChangedEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n  previousStatus\n  status\n}\n\nfragment ReactionButton_Reaction on ReactionGroup {\n  content\n  reactors(first: 5) {\n    nodes {\n      __typename\n      ... on User {\n        login\n        __typename\n      }\n      ... on Bot {\n        login\n        __typename\n      }\n      ... on Organization {\n        login\n        __typename\n      }\n      ... on Mannequin {\n        login\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n    totalCount\n  }\n  viewerHasReacted\n}\n\nfragment ReactionViewerGroups on Reactable {\n  __isReactable: __typename\n  reactionGroups {\n    ...ReactionButton_Reaction\n    ...ReactionsMenuItem_Reaction\n  }\n}\n\nfragment ReactionsMenuItem_Reaction on ReactionGroup {\n  content\n  viewerHasReacted\n}\n\nfragment ReferencedEvent on ReferencedEvent {\n  databaseId\n  willCloseSubject\n  subject {\n    __typename\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  commit {\n    ...ReferencedEventInner\n    id\n  }\n  createdAt\n}\n\nfragment ReferencedEventInner on Commit {\n  message\n  messageHeadlineHTML\n  messageBodyHTML\n  url\n  abbreviatedOid\n  signature {\n    __typename\n    signer {\n      login\n      avatarUrl\n      id\n    }\n    state\n    wasSignedByGitHub\n    ... on SmimeSignature {\n      issuer {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n      subject {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n    }\n    ... on GpgSignature {\n      keyId\n    }\n    ... on SshSignature {\n      keyFingerprint\n    }\n  }\n  verificationStatus\n  hasSignature\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    defaultBranch\n    id\n  }\n}\n\nfragment RemovedFromProjectEvent on RemovedFromProjectEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  projectColumnName\n}\n\nfragment RemovedFromProjectV2Event on RemovedFromProjectV2Event {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n}\n\nfragment RenamedTitleEvent on RenamedTitleEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  currentTitle\n  previousTitle\n}\n\nfragment ReopenedEvent on ReopenedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment SubscribedEvent on SubscribedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment TimelineItemsPaginated on IssueTimelineItemsConnection {\n  edges {\n    node {\n      ... on IssueComment {\n        databaseId\n        viewerDidAuthor\n        issue {\n          author {\n            __typename\n            login\n            id\n          }\n          id\n        }\n      }\n      ... on ReferencedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on CrossReferencedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        source {\n          __typename\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n        willCloseTarget\n      }\n      ... on MentionedEvent {\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on LabeledEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        label {\n          id\n        }\n      }\n      ... on UnlabeledEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        label {\n          id\n        }\n      }\n      ... on AssignedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        assignee {\n          __typename\n          ... on User {\n            id\n          }\n          ... on Bot {\n            id\n          }\n          ... on Mannequin {\n            id\n          }\n          ... on Organization {\n            id\n          }\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n      }\n      ... on UnassignedEvent {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n        assignee {\n          __typename\n          ... on User {\n            id\n          }\n          ... on Bot {\n            id\n          }\n          ... on Mannequin {\n            id\n          }\n          ... on Organization {\n            id\n          }\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n      }\n      ... on AddedToProjectV2Event {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      ... on RemovedFromProjectV2Event {\n        createdAt\n        actor {\n          __typename\n          login\n          id\n        }\n      }\n      __typename\n      ...IssueComment_issueComment\n      ...AddedToProjectEvent\n      ...MovedColumnsInProjectEvent\n      ...RemovedFromProjectEvent\n      ...SubscribedEvent\n      ...UnsubscribedEvent\n      ...MentionedEvent\n      ...ClosedEvent\n      ...ReopenedEvent\n      ...LockedEvent\n      ...UnlockedEvent\n      ...PinnedEvent\n      ...UnpinnedEvent\n      ...LabeledEvent\n      ...RenamedTitleEvent\n      ...UnlabeledEvent\n      ...UnassignedEvent\n      ...AssignedEvent\n      ...CommentDeletedEvent\n      ...UserBlockedEvent\n      ...MilestonedEvent\n      ...DemilestonedEvent\n      ...CrossReferencedEvent\n      ...ReferencedEvent\n      ...ConnectedEvent\n      ...TransferredEvent\n      ...ConvertedNoteToIssueEvent\n      ...DisconnectedEvent\n      ...MarkedAsDuplicateEvent\n      ...UnmarkedAsDuplicateEvent\n      ...ConvertedToDiscussionEvent\n      ...AddedToProjectV2Event\n      ...RemovedFromProjectV2Event\n      ...ProjectV2ItemStatusChangedEvent\n      ...ConvertedFromDraftEvent\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n}\n\nfragment TimelineRowEventActor on Actor {\n  __isActor: __typename\n  ...EventActor\n}\n\nfragment TransferredEvent on TransferredEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  fromRepository {\n    nameWithOwner\n    url\n    id\n  }\n}\n\nfragment UnassignedEvent on UnassignedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    login\n    ...TimelineRowEventActor\n    id\n  }\n  assignee {\n    __typename\n    ... on User {\n      login\n    }\n    ... on Mannequin {\n      login\n    }\n    ... on Organization {\n      login\n    }\n    ... on Bot {\n      login\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment UnlabeledEvent on UnlabeledEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  label {\n    ...LabelData\n    id\n  }\n}\n\nfragment UnlockedEvent on UnlockedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UnmarkedAsDuplicateEvent on UnmarkedAsDuplicateEvent {\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  canonical {\n    __typename\n    ... on Issue {\n      url\n      number\n    }\n    ... on PullRequest {\n      url\n      number\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  databaseId\n}\n\nfragment UnpinnedEvent on UnpinnedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UnsubscribedEvent on UnsubscribedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UserBlockedEvent on UserBlockedEvent {\n  databaseId\n  createdAt\n  blockDuration\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  blockedUser: subject {\n    login\n    id\n  }\n}\n",
  "e922b17ff1a4f25284acf2d7d4b03d44": "query ProjectV2ItemStatusChangedEventUserTestQuery {\n  node(id: \"node-id\") {\n    __typename\n    ... on ProjectV2ItemStatusChangedEvent {\n      ...ProjectV2ItemStatusChangedEvent\n    }\n    id\n  }\n}\n\nfragment EventActor on Actor {\n  __isActor: __typename\n  avatarUrl(size: 64)\n  login\n  __typename\n}\n\nfragment ProjectV2ItemStatusChangedEvent on ProjectV2ItemStatusChangedEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n  previousStatus\n  status\n}\n\nfragment TimelineRowEventActor on Actor {\n  __isActor: __typename\n  ...EventActor\n}\n",
  "ebe7709915a6ceaa066f23f1e6395b1e": "query ProjectsSectionQuery(\n  $owner: String!\n  $repo: String!\n  $number: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issueOrPullRequest(number: $number) {\n      __typename\n      ...ProjectsSectionFragment\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n    id\n  }\n}\n\nfragment ClassicProjectItem on ProjectCard {\n  project {\n    name\n    url\n    ...SingleSelectColumnProject\n    id\n  }\n  column {\n    ...SingleSelectColumn\n    id\n  }\n}\n\nfragment ProjectItemSection on ProjectV2Item {\n  id\n  isArchived\n  project {\n    id\n  }\n  ...ProjectItemSectionView\n}\n\nfragment ProjectItemSectionView on ProjectV2Item {\n  id\n  isArchived\n  project {\n    id\n    title\n    template\n    viewerCanUpdate\n    url\n    field(name: \"Status\") {\n      __typename\n      ...SingleSelectFieldConfigFragment\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n  fieldValueByName(name: \"Status\") {\n    __typename\n    ...SingleSelectFieldFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ProjectPickerClassicProject on Project {\n  id\n  title: name\n  closed\n  number\n  url\n  viewerCanUpdate\n  columns(first: 10) {\n    nodes {\n      id\n      name\n    }\n  }\n  __typename\n}\n\nfragment ProjectPickerProject on ProjectV2 {\n  id\n  title\n  closed\n  number\n  url\n  viewerCanUpdate\n  __typename\n}\n\nfragment ProjectsSectionFragment on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    number\n    repository {\n      name\n      owner {\n        __typename\n        login\n        id\n      }\n      isArchived\n      id\n    }\n    id\n    projectItemsNext(first: 10) {\n      edges {\n        node {\n          id\n          ...ProjectItemSection\n          project {\n            ...ProjectPickerProject\n            closed\n            title\n            id\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    projectCards(first: 10) {\n      edges {\n        node {\n          id\n          ...ClassicProjectItem\n          project {\n            id\n            closed\n            ...ProjectPickerClassicProject\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    viewerCanUpdateMetadata\n  }\n  ... on PullRequest {\n    number\n    repository {\n      name\n      owner {\n        __typename\n        login\n        id\n      }\n      isArchived\n      id\n    }\n    id\n    projectItemsNext(first: 10) {\n      edges {\n        node {\n          id\n          ...ProjectItemSection\n          project {\n            closed\n            ...ProjectPickerProject\n            title\n            id\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    projectCards(first: 10) {\n      edges {\n        node {\n          id\n          ...ClassicProjectItem\n          project {\n            id\n            closed\n            ...ProjectPickerClassicProject\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    viewerCanUpdate\n  }\n}\n\nfragment SingleSelectColumn on ProjectColumn {\n  id\n  name\n}\n\nfragment SingleSelectColumnProject on Project {\n  id\n  name\n  columns(first: 10) {\n    nodes {\n      ...SingleSelectColumn\n      id\n    }\n  }\n}\n\nfragment SingleSelectFieldConfigFragment on ProjectV2SingleSelectField {\n  id\n  name\n  options {\n    ...SingleSelectFieldOptionFragment\n    id\n    name\n    description\n    color\n  }\n}\n\nfragment SingleSelectFieldFragment on ProjectV2ItemFieldSingleSelectValue {\n  id\n  optionId\n  name\n  nameHTML\n  color\n}\n\nfragment SingleSelectFieldOptionFragment on ProjectV2SingleSelectFieldOption {\n  id\n  optionId\n  name\n  nameHTML\n  color\n  descriptionHTML\n}\n",
  "ec2e6e4315576664116555f0c7982435": "query MilestonesSectionTestQuery(\n  $owner: String!\n  $repo: String!\n  $number: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $number) {\n      ...MilestonesSectionFragment\n      id\n    }\n    id\n  }\n}\n\nfragment MilestonePickerMilestone on Milestone {\n  id\n  title\n  closed\n  dueOn\n  progressPercentage\n  url\n  closedAt\n}\n\nfragment MilestonesSectionFragment on Issue {\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  id\n  ...MilestonesSectionMilestone\n  viewerCanSetMilestone\n}\n\nfragment MilestonesSectionMilestone on Issue {\n  milestone {\n    ...MilestonePickerMilestone\n    id\n  }\n}\n",
  "ec4bbecd27eaaee4a883f2fa5c8a561a": "subscription IssueViewerSubscription(\n  $issueId: ID!\n  $skip: Int\n) {\n  issueUpdated(id: $issueId) {\n    deletedCommentId\n    issueMetadataUpdated {\n      ...LabelsSectionAssignedLabels\n      ...AssigneesSectionAssignees\n      ...MilestonesSectionMilestone\n      ...ProjectsSectionFragment\n      id\n    }\n    issueBodyUpdated {\n      ...IssueBodyContent\n      id\n    }\n    issueTitleUpdated {\n      ...Header\n      id\n    }\n    issueStateUpdated {\n      ...HeaderState\n      ...IssueActions\n      id\n    }\n    issueTypeUpdated {\n      ...HeaderIssueType\n      id\n    }\n    issueReactionUpdated {\n      ...ReactionViewerGroups\n      id\n    }\n    commentReactionUpdated {\n      ...ReactionViewerGroups\n      id\n    }\n    commentUpdated {\n      ...IssueCommentViewerMarkdownViewer\n      ...IssueCommentEditorBodyFragment\n      id\n    }\n    subIssuesUpdated {\n      ...SubIssuesList\n      ...useHasSubIssues\n      id\n    }\n    issueTransferStateUpdated {\n      ...SubIssuesList\n      ...useHasSubIssues\n      ...IssueBodyViewerSubIssues\n      id\n    }\n    parentIssueUpdated {\n      ...RelationshipsSectionFragment\n      ...HeaderParentTitle\n      id\n    }\n    issueTimelineUpdated {\n      timelineItems(skip: $skip, first: 10, visibleEventsOnly: true) {\n        totalCount\n        edges {\n          node {\n            __typename\n            ...AddedToProjectEvent\n            ...MovedColumnsInProjectEvent\n            ...RemovedFromProjectEvent\n            ...SubscribedEvent\n            ...UnsubscribedEvent\n            ...MentionedEvent\n            ...IssueComment_issueComment\n            ...ReactionViewerGroups\n            ...ClosedEvent\n            ...ReopenedEvent\n            ...LockedEvent\n            ...UnlockedEvent\n            ...PinnedEvent\n            ...UnpinnedEvent\n            ...LabeledEvent\n            ...RenamedTitleEvent\n            ...UnlabeledEvent\n            ...UnassignedEvent\n            ...AssignedEvent\n            ...CommentDeletedEvent\n            ...UserBlockedEvent\n            ...MilestonedEvent\n            ...DemilestonedEvent\n            ...CrossReferencedEvent\n            ...ReferencedEvent\n            ...ConnectedEvent\n            ...TransferredEvent\n            ...ConvertedNoteToIssueEvent\n            ...DisconnectedEvent\n            ...MarkedAsDuplicateEvent\n            ...UnmarkedAsDuplicateEvent\n            ...ConvertedToDiscussionEvent\n            ...AddedToProjectV2Event\n            ...RemovedFromProjectV2Event\n            ...ProjectV2ItemStatusChangedEvent\n            ...ConvertedFromDraftEvent\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n      }\n      id\n    }\n  }\n}\n\nfragment AddSubIssueButtonGroup_46hWwf on Issue {\n  id\n  repository {\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  parent {\n    id\n  }\n  subIssues(first: 50) {\n    nodes {\n      id\n    }\n  }\n}\n\nfragment AddSubIssueButtonGroup_4FLmrJ on Issue {\n  id\n  repository {\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  parent {\n    id\n  }\n}\n\nfragment AddedToProjectEvent on AddedToProjectEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  projectColumnName\n  databaseId\n}\n\nfragment AddedToProjectV2Event on AddedToProjectV2Event {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n}\n\nfragment AssignedEvent on AssignedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    login\n    id\n  }\n  assignee {\n    __typename\n    ... on User {\n      login\n    }\n    ... on Mannequin {\n      login\n    }\n    ... on Organization {\n      login\n    }\n    ... on Bot {\n      login\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment AssigneePickerAssignee on User {\n  id\n  login\n  name\n  avatarUrl(size: 64)\n}\n\nfragment AssigneesSectionAssignees on Issue {\n  assignees(first: 20) {\n    nodes {\n      ...AssigneePickerAssignee\n      id\n    }\n  }\n}\n\nfragment ClassicProjectItem on ProjectCard {\n  project {\n    name\n    url\n    ...SingleSelectColumnProject\n    id\n  }\n  column {\n    ...SingleSelectColumn\n    id\n  }\n}\n\nfragment ClosedByPullRequestsReferences on Issue {\n  closedByPullRequestsReferences(first: 0, includeClosedPrs: true) {\n    totalCount\n  }\n}\n\nfragment ClosedEvent on ClosedEvent {\n  databaseId\n  createdAt\n  stateReason\n  closingProjectItemStatus\n  closer {\n    __typename\n    ... on ProjectV2 {\n      url\n      title\n    }\n    ... on PullRequest {\n      url\n      number\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Commit {\n      url\n      abbreviatedOid\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment CommentDeletedEvent on CommentDeletedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  deletedCommentAuthor {\n    __typename\n    login\n    id\n  }\n}\n\nfragment ConnectedEvent on ConnectedEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  subject {\n    __typename\n    ... on PullRequest {\n      title\n      url\n      number\n      state\n      isDraft\n      isInMergeQueue\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ConvertedFromDraftEvent on ConvertedFromDraftEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  databaseId\n}\n\nfragment ConvertedNoteToIssueEvent on ConvertedNoteToIssueEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  project {\n    url\n    name\n    id\n  }\n}\n\nfragment ConvertedToDiscussionEvent on ConvertedToDiscussionEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  discussion {\n    url\n    number\n    id\n  }\n}\n\nfragment CrossReferencedEvent on CrossReferencedEvent {\n  referencedAt\n  willCloseTarget\n  databaseId\n  target {\n    __typename\n    ... on Issue {\n      repository {\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  innerSource: source {\n    __typename\n    ...CrossReferencedEventInner\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment CrossReferencedEventInner on ReferencedSubject {\n  __isReferencedSubject: __typename\n  __typename\n  ... on Issue {\n    id\n    issueTitleHTML: titleHTML\n    url\n    number\n    stateReason\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n  ... on PullRequest {\n    id\n    pullTitleHTML: titleHTML\n    url\n    number\n    state\n    isDraft\n    isInMergeQueue\n    repository {\n      id\n      name\n      isPrivate\n      owner {\n        __typename\n        login\n        id\n      }\n    }\n  }\n}\n\nfragment DemilestonedEvent on DemilestonedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  milestoneTitle\n  milestone {\n    url\n    id\n  }\n}\n\nfragment DisconnectedEvent on DisconnectedEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  subject {\n    __typename\n    ... on PullRequest {\n      title\n      url\n      number\n      state\n      isDraft\n      isInMergeQueue\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment EventActor on Actor {\n  __isActor: __typename\n  avatarUrl(size: 64)\n  login\n  __typename\n}\n\nfragment Header on Issue {\n  title\n  number\n  id\n  repository {\n    nameWithOwner\n    id\n  }\n  ...HeaderViewer\n  ...HeaderMetadata\n}\n\nfragment HeaderIssueType on Issue {\n  repository {\n    nameWithOwner\n    id\n  }\n  issueType {\n    name\n    color\n    id\n  }\n}\n\nfragment HeaderMenu on Issue {\n  id\n  viewerCanUpdateNext\n  repository {\n    id\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    isArchived\n  }\n  url\n}\n\nfragment HeaderMetadata on Issue {\n  url\n  ...HeaderIssueType\n  ...HeaderMenu\n  ...HeaderState\n  ...StickyHeaderTitle\n  ...RepositoryPill\n  ...LinkedPullRequests\n  ...HeaderSubIssueSummaryWithPrimary\n}\n\nfragment HeaderParentTitle on Issue {\n  parent {\n    id\n    number\n    repository {\n      name\n      owner {\n        __typename\n        login\n        id\n      }\n      id\n    }\n    state\n    stateReason\n    title\n    url\n  }\n}\n\nfragment HeaderState on Issue {\n  state\n  stateReason\n}\n\nfragment HeaderSubIssueSummaryWithPrimary on Issue {\n  ...useSubIssuesSummary_4FLmrJ\n}\n\nfragment HeaderViewer on Issue {\n  titleHTML\n  number\n  url\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...HeaderMenu\n}\n\nfragment IssueActions on Issue {\n  ...IssueActionsState\n}\n\nfragment IssueActionsState on Issue {\n  state\n  stateReason\n  id\n}\n\nfragment IssueBodyContent on Issue {\n  body\n  bodyHTML(unfurlReferences: true, renderTasklistBlocks: true)\n  bodyVersion\n}\n\nfragment IssueBodyViewerSubIssues on Issue {\n  ...useCanEditSubIssues\n  ...useHasSubIssues\n  ...AddSubIssueButtonGroup_4FLmrJ\n}\n\nfragment IssueCommentEditorBodyFragment on IssueComment {\n  id\n  body\n  bodyVersion\n  author {\n    __typename\n    login\n    avatarUrl\n    id\n  }\n  issue {\n    author {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...IssueCommentHeader\n}\n\nfragment IssueCommentEditor_repository on IssueComment {\n  repository {\n    slashCommandsEnabled\n    nameWithOwner\n    databaseId\n    id\n  }\n}\n\nfragment IssueCommentHeader on IssueComment {\n  id\n  databaseId\n  url\n  createdAt\n  body\n  authorAssociation\n  viewerCanUpdate\n  viewerCanDelete\n  viewerCanMinimize\n  viewerCanReport\n  viewerCanReportToMaintainer\n  viewerCanBlockFromOrg\n  viewerCanUnblockFromOrg\n  isHidden: isMinimized\n  minimizedReason\n  createdViaEmail\n  viewerDidAuthor\n  authorToRepoOwnerSponsorship {\n    createdAt\n    isActive\n    id\n  }\n  author {\n    __typename\n    id\n    login\n  }\n  repository {\n    id\n    name\n    owner {\n      __typename\n      id\n      login\n      url\n    }\n    isPrivate\n  }\n  issue {\n    number\n    id\n  }\n  ...MarkdownEditHistoryViewer_comment\n}\n\nfragment IssueCommentViewerCommentRow on IssueComment {\n  id\n  databaseId\n  ...IssueCommentViewerMarkdownViewer\n  ...IssueCommentHeader\n  author {\n    avatarUrl\n    login\n    __typename\n    id\n  }\n  issue {\n    id\n    locked\n  }\n  body\n  isHidden: isMinimized\n  viewerCanUpdate\n}\n\nfragment IssueCommentViewerMarkdownViewer on IssueComment {\n  id\n  body\n  bodyHTML(unfurlReferences: true)\n  bodyVersion\n  viewerCanUpdate\n}\n\nfragment IssueCommentViewerReactable on Reactable {\n  __isReactable: __typename\n  ...ReactionViewerGroups\n}\n\nfragment IssueComment_issueComment on IssueComment {\n  ...IssueCommentViewerCommentRow\n  ...IssueCommentViewerReactable\n  ...IssueCommentEditor_repository\n  ...IssueCommentEditorBodyFragment\n  issue {\n    id\n  }\n  id\n}\n\nfragment LabelData on Label {\n  nameHTML\n  name\n  color\n  id\n  description\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment LabelPickerLabel on Label {\n  id\n  color\n  name\n  nameHTML\n  description\n  url\n}\n\nfragment LabeledEvent on LabeledEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  label {\n    ...LabelData\n    id\n  }\n}\n\nfragment LabelsSectionAssignedLabels on Labelable {\n  __isLabelable: __typename\n  labels(first: 100, orderBy: {field: NAME, direction: ASC}) {\n    edges {\n      node {\n        ...LabelPickerLabel\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  ... on Node {\n    __isNode: __typename\n    id\n  }\n}\n\nfragment LinkedPullRequest on PullRequest {\n  url\n  number\n  state\n  isDraft\n  repository {\n    name\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment LinkedPullRequests on Issue {\n  repository {\n    nameWithOwner\n    id\n  }\n  linkedPullRequests: closedByPullRequestsReferences(first: 10, includeClosedPrs: false, orderByState: true) {\n    nodes {\n      repository {\n        nameWithOwner\n        id\n      }\n      state\n      isDraft\n      ...LinkedPullRequest\n      id\n    }\n  }\n}\n\nfragment LockedEvent on LockedEvent {\n  databaseId\n  createdAt\n  lockReason\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment MarkdownEditHistoryViewer_comment on Comment {\n  __isComment: __typename\n  id\n  viewerCanReadUserContentEdits\n  lastEditedAt\n  lastUserContentEdit {\n    editor {\n      __typename\n      url\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment MarkedAsDuplicateEvent on MarkedAsDuplicateEvent {\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  canonical {\n    __typename\n    ... on Issue {\n      url\n      number\n      id\n    }\n    ... on PullRequest {\n      url\n      number\n      id\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  databaseId\n  viewerCanUndo\n  id\n}\n\nfragment MentionedEvent on MentionedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment MilestonePickerMilestone on Milestone {\n  id\n  title\n  closed\n  dueOn\n  progressPercentage\n  url\n  closedAt\n}\n\nfragment MilestonedEvent on MilestonedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  milestoneTitle\n  milestone {\n    url\n    id\n  }\n}\n\nfragment MilestonesSectionMilestone on Issue {\n  milestone {\n    ...MilestonePickerMilestone\n    id\n  }\n}\n\nfragment MovedColumnsInProjectEvent on MovedColumnsInProjectEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  previousProjectColumnName\n  projectColumnName\n}\n\nfragment ParentIssueFragment on Issue {\n  id\n  title\n  url\n  number\n  repository {\n    nameWithOwner\n    id\n  }\n  state\n  stateReason\n  ...SubIssuesSummary\n}\n\nfragment PinnedEvent on PinnedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment ProjectItemSection on ProjectV2Item {\n  id\n  isArchived\n  project {\n    id\n  }\n  ...ProjectItemSectionView\n}\n\nfragment ProjectItemSectionView on ProjectV2Item {\n  id\n  isArchived\n  project {\n    id\n    title\n    template\n    viewerCanUpdate\n    url\n    field(name: \"Status\") {\n      __typename\n      ...SingleSelectFieldConfigFragment\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n  fieldValueByName(name: \"Status\") {\n    __typename\n    ...SingleSelectFieldFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ProjectPickerClassicProject on Project {\n  id\n  title: name\n  closed\n  number\n  url\n  viewerCanUpdate\n  columns(first: 10) {\n    nodes {\n      id\n      name\n    }\n  }\n  __typename\n}\n\nfragment ProjectPickerProject on ProjectV2 {\n  id\n  title\n  closed\n  number\n  url\n  viewerCanUpdate\n  __typename\n}\n\nfragment ProjectV2ItemStatusChangedEvent on ProjectV2ItemStatusChangedEvent {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n  previousStatus\n  status\n}\n\nfragment ProjectsSectionFragment on IssueOrPullRequest {\n  __isIssueOrPullRequest: __typename\n  ... on Issue {\n    number\n    repository {\n      name\n      owner {\n        __typename\n        login\n        id\n      }\n      isArchived\n      id\n    }\n    id\n    projectItemsNext(first: 10) {\n      edges {\n        node {\n          id\n          ...ProjectItemSection\n          project {\n            ...ProjectPickerProject\n            closed\n            title\n            id\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    projectCards(first: 10) {\n      edges {\n        node {\n          id\n          ...ClassicProjectItem\n          project {\n            id\n            closed\n            ...ProjectPickerClassicProject\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    viewerCanUpdateMetadata\n  }\n  ... on PullRequest {\n    number\n    repository {\n      name\n      owner {\n        __typename\n        login\n        id\n      }\n      isArchived\n      id\n    }\n    id\n    projectItemsNext(first: 10) {\n      edges {\n        node {\n          id\n          ...ProjectItemSection\n          project {\n            closed\n            ...ProjectPickerProject\n            title\n            id\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    projectCards(first: 10) {\n      edges {\n        node {\n          id\n          ...ClassicProjectItem\n          project {\n            id\n            closed\n            ...ProjectPickerClassicProject\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    viewerCanUpdate\n  }\n}\n\nfragment ReactionButton_Reaction on ReactionGroup {\n  content\n  reactors(first: 5) {\n    nodes {\n      __typename\n      ... on User {\n        login\n        __typename\n      }\n      ... on Bot {\n        login\n        __typename\n      }\n      ... on Organization {\n        login\n        __typename\n      }\n      ... on Mannequin {\n        login\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n    totalCount\n  }\n  viewerHasReacted\n}\n\nfragment ReactionViewerGroups on Reactable {\n  __isReactable: __typename\n  reactionGroups {\n    ...ReactionButton_Reaction\n    ...ReactionsMenuItem_Reaction\n  }\n}\n\nfragment ReactionsMenuItem_Reaction on ReactionGroup {\n  content\n  viewerHasReacted\n}\n\nfragment ReferencedEvent on ReferencedEvent {\n  databaseId\n  willCloseSubject\n  subject {\n    __typename\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  commit {\n    ...ReferencedEventInner\n    id\n  }\n  createdAt\n}\n\nfragment ReferencedEventInner on Commit {\n  message\n  messageHeadlineHTML\n  messageBodyHTML\n  url\n  abbreviatedOid\n  signature {\n    __typename\n    signer {\n      login\n      avatarUrl\n      id\n    }\n    state\n    wasSignedByGitHub\n    ... on SmimeSignature {\n      issuer {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n      subject {\n        commonName\n        emailAddress\n        organization\n        organizationUnit\n      }\n    }\n    ... on GpgSignature {\n      keyId\n    }\n    ... on SshSignature {\n      keyFingerprint\n    }\n  }\n  verificationStatus\n  hasSignature\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    defaultBranch\n    id\n  }\n}\n\nfragment RelationshipsSectionFragment on Issue {\n  id\n  repository {\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  parent {\n    id\n    ...ParentIssueFragment\n  }\n  ...useCanEditSubIssues\n}\n\nfragment RemovedFromProjectEvent on RemovedFromProjectEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    name\n    url\n    id\n  }\n  projectColumnName\n}\n\nfragment RemovedFromProjectV2Event on RemovedFromProjectV2Event {\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  project {\n    title\n    url\n    id\n  }\n}\n\nfragment RenamedTitleEvent on RenamedTitleEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  currentTitle\n  previousTitle\n}\n\nfragment ReopenedEvent on ReopenedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment RepositoryPill on Issue {\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    isPrivate\n    id\n  }\n}\n\nfragment SingleSelectColumn on ProjectColumn {\n  id\n  name\n}\n\nfragment SingleSelectColumnProject on Project {\n  id\n  name\n  columns(first: 10) {\n    nodes {\n      ...SingleSelectColumn\n      id\n    }\n  }\n}\n\nfragment SingleSelectFieldConfigFragment on ProjectV2SingleSelectField {\n  id\n  name\n  options {\n    ...SingleSelectFieldOptionFragment\n    id\n    name\n    description\n    color\n  }\n}\n\nfragment SingleSelectFieldFragment on ProjectV2ItemFieldSingleSelectValue {\n  id\n  optionId\n  name\n  nameHTML\n  color\n}\n\nfragment SingleSelectFieldOptionFragment on ProjectV2SingleSelectFieldOption {\n  id\n  optionId\n  name\n  nameHTML\n  color\n  descriptionHTML\n}\n\nfragment StickyHeaderTitle on Issue {\n  titleHTML\n  number\n  url\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment SubIssueStateIcon on Issue {\n  state\n  stateReason\n}\n\nfragment SubIssueTitle_4FLmrJ on Issue {\n  url\n  databaseId\n  number\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  state\n  stateReason\n  ...SubIssueTitle_TitleValue\n  ...SubIssueTypeIndicator\n  ...SubIssuesCompletionPill_4FLmrJ\n}\n\nfragment SubIssueTitle_TitleValue on Issue {\n  title\n  titleHTML\n}\n\nfragment SubIssueTypeIndicator on Issue {\n  number\n  issueType {\n    id\n    name\n    color\n  }\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n}\n\nfragment SubIssuesCompletionPill_4FLmrJ on Issue {\n  ...useSubIssuesSummary_4FLmrJ\n  url\n}\n\nfragment SubIssuesList on Issue {\n  ...SubIssuesListView\n  ...AddSubIssueButtonGroup_46hWwf\n}\n\nfragment SubIssuesListItem on Issue {\n  id\n  ...SubIssueStateIcon\n  assignees(first: 10) {\n    totalCount\n    edges {\n      node {\n        id\n        login\n        avatarUrl\n      }\n    }\n  }\n  url\n  repository {\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  ...SubIssuesListItem_NestedSubIssues_4FLmrJ\n  ...ClosedByPullRequestsReferences\n}\n\nfragment SubIssuesListItem_NestedSubIssues_4FLmrJ on Issue {\n  ...SubIssueTitle_4FLmrJ\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n  id\n}\n\nfragment SubIssuesListView on Issue {\n  id\n  subIssues(first: 50) {\n    nodes {\n      id\n      ...SubIssuesListItem\n    }\n  }\n  ...useSubIssuesSummary_46hWwf\n}\n\nfragment SubIssuesSummary on Issue {\n  url\n  ...useSubIssuesSummary_4FLmrJ\n}\n\nfragment SubscribedEvent on SubscribedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment TimelineRowEventActor on Actor {\n  __isActor: __typename\n  ...EventActor\n}\n\nfragment TransferredEvent on TransferredEvent {\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  fromRepository {\n    nameWithOwner\n    url\n    id\n  }\n}\n\nfragment UnassignedEvent on UnassignedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    login\n    ...TimelineRowEventActor\n    id\n  }\n  assignee {\n    __typename\n    ... on User {\n      login\n    }\n    ... on Mannequin {\n      login\n    }\n    ... on Organization {\n      login\n    }\n    ... on Bot {\n      login\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment UnlabeledEvent on UnlabeledEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  label {\n    ...LabelData\n    id\n  }\n}\n\nfragment UnlockedEvent on UnlockedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UnmarkedAsDuplicateEvent on UnmarkedAsDuplicateEvent {\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  createdAt\n  canonical {\n    __typename\n    ... on Issue {\n      url\n      number\n    }\n    ... on PullRequest {\n      url\n      number\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  databaseId\n}\n\nfragment UnpinnedEvent on UnpinnedEvent {\n  databaseId\n  createdAt\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UnsubscribedEvent on UnsubscribedEvent {\n  createdAt\n  databaseId\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment UserBlockedEvent on UserBlockedEvent {\n  databaseId\n  createdAt\n  blockDuration\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n  blockedUser: subject {\n    login\n    id\n  }\n}\n\nfragment useCanEditSubIssues on Issue {\n  viewerCanUpdateMetadata\n  repository {\n    isArchived\n    id\n  }\n}\n\nfragment useHasSubIssues on Issue {\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n}\n\nfragment useSubIssuesSummary_46hWwf on Issue {\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n  subIssues(first: 50) {\n    nodes {\n      closed\n      ...useSubIssuesSummary_issueState\n      id\n    }\n  }\n}\n\nfragment useSubIssuesSummary_4FLmrJ on Issue {\n  subIssuesSummary {\n    completed\n  }\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n}\n\nfragment useSubIssuesSummary_issueState on Issue {\n  closed\n}\n",
  "edda0b3b0dca6e39455186a59249b420": "query OpenClosedTabsQuery(\n  $query: String = \"archived:false assignee:@me sort:updated-desc\"\n) {\n  search(first: 0, query: $query, type: ISSUE, aggregations: true) {\n    closedIssueCount\n    openIssueCount\n  }\n}\n",
  "ee40cf8be0e6837821a941c82a804a7b": "query SubIssuesSummaryStoryQuery {\n  node(id: \"I_abc123\") {\n    __typename\n    ... on Issue {\n      ...SubIssuesSummary\n    }\n    id\n  }\n}\n\nfragment SubIssuesSummary on Issue {\n  url\n  ...useSubIssuesSummary_4FLmrJ\n}\n\nfragment useSubIssuesSummary_4FLmrJ on Issue {\n  subIssuesSummary {\n    completed\n  }\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n}\n",
  "ee65557dba34f761590e05175b20ef0d": "query IssueTypePickerQuery(\n  $owner: String!\n  $repo: String!\n) {\n  repository(owner: $owner, name: $repo) {\n    ...IssueTypePickerPaginated\n    id\n  }\n}\n\nfragment IssueTypePickerIssueType on IssueType {\n  id\n  name\n  isEnabled\n  description\n  color\n}\n\nfragment IssueTypePickerPaginated on Repository {\n  issueTypes(first: 10) {\n    edges {\n      node {\n        ...IssueTypePickerIssueType\n        id\n        __typename\n      }\n      cursor\n    }\n    totalCount\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n",
  "f017599aa67f5602c8b634c7f674e2f3": "mutation updateIssuesBulkMutation(\n  $input: UpdateIssuesBulkInput!\n) {\n  updateIssuesBulk(input: $input) {\n    jobId\n  }\n}\n",
  "f1b4217297a900367f4c850ddf490112": "query IssueBodyHeaderActionsStoryQuery {\n  author: node(id: \"abc\") {\n    __typename\n    ... on User {\n      ...IssueBodyHeaderActions\n    }\n    id\n  }\n}\n\nfragment IssueBodyHeaderActions on Actor {\n  __isActor: __typename\n  login\n  id\n}\n",
  "f3c420fc0b419099a71498aa98ef9c01": "query OptionsSectionTestQuery {\n  node(id: \"issue1\") {\n    __typename\n    ...OptionsSectionFragment\n    id\n  }\n}\n\nfragment IssueTypesDialogIssueType on IssueType {\n  id\n}\n\nfragment IssueTypesDialogIssueTypes on IssueTypeConnection {\n  nodes {\n    id\n    name\n    color\n    description\n    isEnabled\n  }\n}\n\nfragment OptionsSectionFragment on Issue {\n  id\n  isPinned\n  locked\n  viewerCanUpdateNext\n  viewerCanDelete\n  viewerCanTransfer\n  viewerCanConvertToDiscussion\n  viewerCanType\n  repository {\n    id\n    name\n    owner {\n      __typename\n      login\n      id\n    }\n    isPrivate\n    issueTypes(first: 10) {\n      ...IssueTypesDialogIssueTypes\n      totalCount\n    }\n    pinnedIssues(first: 3) {\n      totalCount\n    }\n    viewerCanPinIssues\n  }\n  issueType {\n    ...IssueTypesDialogIssueType\n    id\n  }\n}\n",
  "f47cefa32c7a668269c7ef6b49373801": "mutation pinIssueMutation(\n  $input: PinIssueInput!\n) {\n  pinIssue(input: $input) {\n    issue {\n      isPinned\n      repository {\n        pinnedIssues(first: 3) {\n          totalCount\n        }\n        id\n      }\n      id\n    }\n  }\n}\n",
  "f5839127717c71099ada0c934056544c": "query PullRequestPickerSearchQuery(\n  $commenters: String!\n  $mentions: String!\n  $assignee: String!\n  $author: String!\n  $open: String!\n  $first: Int = 10\n) {\n  ...PullRequestPickerQuery\n}\n\nfragment PullRequestPickerPullRequest on PullRequest {\n  id\n  __typename\n  url\n  number\n  title\n  state\n  isDraft\n  isInMergeQueue\n  createdAt\n  repository {\n    id\n    name\n    nameWithOwner\n    owner {\n      login\n      __typename\n      id\n    }\n  }\n}\n\nfragment PullRequestPickerQuery on Query {\n  commenters: search(type: ISSUE, first: $first, query: $commenters) {\n    nodes {\n      __typename\n      ...PullRequestPickerPullRequest\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n  mentions: search(type: ISSUE, first: $first, query: $mentions) {\n    nodes {\n      __typename\n      ...PullRequestPickerPullRequest\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n  assignee: search(type: ISSUE, first: $first, query: $assignee) {\n    nodes {\n      __typename\n      ...PullRequestPickerPullRequest\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n  author: search(type: ISSUE, first: $first, query: $author) {\n    nodes {\n      __typename\n      ...PullRequestPickerPullRequest\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n  open: search(type: ISSUE, first: $first, query: $open) {\n    nodes {\n      __typename\n      ...PullRequestPickerPullRequest\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n}\n",
  "f63e13f3d151bf986573d54872d38f26": "mutation updateIssueTypeMutation(\n  $input: UpdateIssueTypeInput!\n) {\n  updateIssueType(input: $input) {\n    issueType {\n      ...OrganizationIssueTypesSettingsEditInternalIssueType\n      id\n    }\n    errors {\n      __typename\n      message\n    }\n  }\n}\n\nfragment DangerZoneIssueType on IssueType {\n  id\n  isEnabled\n  ...DisableOrganizationConfirmationDialogIssueType\n  ...DeletionConfirmationDialogIssueType\n}\n\nfragment DeletionConfirmationDialogIssueType on IssueType {\n  id\n  name\n}\n\nfragment DisableOrganizationConfirmationDialogIssueType on IssueType {\n  id\n  name\n}\n\nfragment OrganizationIssueTypesSettingsEditInternalIssueType on IssueType {\n  description\n  id\n  isPrivate\n  isEnabled\n  name\n  color\n  ...DangerZoneIssueType\n}\n",
  "f7a0455deeee4e2cb604d181c34d2419": "subscription PullRequestRowReviewSubscription(\n  $id: ID!\n) {\n  pullRequestReviewDecisionUpdated(id: $id) {\n    id\n    reviewDecision\n  }\n}\n",
  "f7b6e30ed3e6252cd4b14a496dd9864a": "mutation updateIssueProjectsMutation(\n  $input: AddProjectV2ItemByIdInput!\n) {\n  addProjectV2ItemById(input: $input) {\n    projectEdge {\n      node {\n        ...ProjectItemSection\n        id\n      }\n    }\n  }\n}\n\nfragment ProjectItemSection on ProjectV2Item {\n  id\n  isArchived\n  project {\n    id\n  }\n  ...ProjectItemSectionView\n}\n\nfragment ProjectItemSectionView on ProjectV2Item {\n  id\n  isArchived\n  project {\n    id\n    title\n    template\n    viewerCanUpdate\n    url\n    field(name: \"Status\") {\n      __typename\n      ...SingleSelectFieldConfigFragment\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n  }\n  fieldValueByName(name: \"Status\") {\n    __typename\n    ...SingleSelectFieldFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment SingleSelectFieldConfigFragment on ProjectV2SingleSelectField {\n  id\n  name\n  options {\n    ...SingleSelectFieldOptionFragment\n    id\n    name\n    description\n    color\n  }\n}\n\nfragment SingleSelectFieldFragment on ProjectV2ItemFieldSingleSelectValue {\n  id\n  optionId\n  name\n  nameHTML\n  color\n}\n\nfragment SingleSelectFieldOptionFragment on ProjectV2SingleSelectFieldOption {\n  id\n  optionId\n  name\n  nameHTML\n  color\n  descriptionHTML\n}\n",
  "faf1f2ffec063512a277ac4c7251505c": "mutation updateIssueMutation(\n  $input: UpdateIssueInput!\n) {\n  updateIssue(input: $input) {\n    issue {\n      id\n      title\n      titleHTML\n      body\n      bodyHTML(unfurlReferences: true, renderTasklistBlocks: true)\n    }\n  }\n}\n",
  "fb9fd5943d51bf5311dec5a35836db2d": "mutation updateIssueIssueTypeBulkMutation(\n  $input: UpdateIssuesBulkInput!\n) {\n  updateIssuesBulk(input: $input) {\n    jobId\n  }\n}\n",
  "fc670d0bcff8900b33c0d8130d2e7e5f": "query IssueBodyQuery {\n  repository(owner: \"owner\", name: \"repo\") {\n    issue(number: 33) {\n      ...IssueBody\n      id\n    }\n    id\n  }\n}\n\nfragment AddSubIssueButtonGroup_4FLmrJ on Issue {\n  id\n  repository {\n    nameWithOwner\n    owner {\n      __typename\n      login\n      id\n    }\n    id\n  }\n  parent {\n    id\n  }\n}\n\nfragment IssueBody on Issue {\n  id\n  databaseId\n  viewerDidAuthor\n  locked\n  author {\n    __typename\n    ...IssueBodyHeaderActions\n    id\n  }\n  repository {\n    databaseId\n    nameWithOwner\n    slashCommandsEnabled\n    id\n    owner {\n      __typename\n      login\n      id\n      url\n    }\n  }\n  url\n  viewerCanUpdateNext\n  ...IssueBodyViewer\n  ...IssueBodyContent\n  ...IssueBodyHeader\n  ...IssueBodyViewerReactable\n  ...IssueBodyViewerSubIssues\n}\n\nfragment IssueBodyContent on Issue {\n  body\n  bodyHTML(unfurlReferences: true, renderTasklistBlocks: true)\n  bodyVersion\n}\n\nfragment IssueBodyHeader on Comment {\n  __isComment: __typename\n  ...IssueBodyHeaderActions_comment\n  createdAt\n  viewerDidAuthor\n  author {\n    __typename\n    ...IssueBodyHeaderAuthor\n    ...IssueBodyHeaderActions\n    id\n  }\n}\n\nfragment IssueBodyHeaderActions on Actor {\n  __isActor: __typename\n  login\n  id\n}\n\nfragment IssueBodyHeaderActions_comment on Comment {\n  __isComment: __typename\n  body\n}\n\nfragment IssueBodyHeaderAuthor on Actor {\n  __isActor: __typename\n  login\n  avatarUrl\n  profileUrl\n}\n\nfragment IssueBodyViewer on Comment {\n  __isComment: __typename\n  id\n}\n\nfragment IssueBodyViewerReactable on Reactable {\n  __isReactable: __typename\n  ...ReactionViewerGroups\n}\n\nfragment IssueBodyViewerSubIssues on Issue {\n  ...useCanEditSubIssues\n  ...useHasSubIssues\n  ...AddSubIssueButtonGroup_4FLmrJ\n}\n\nfragment ReactionButton_Reaction on ReactionGroup {\n  content\n  reactors(first: 5) {\n    nodes {\n      __typename\n      ... on User {\n        login\n        __typename\n      }\n      ... on Bot {\n        login\n        __typename\n      }\n      ... on Organization {\n        login\n        __typename\n      }\n      ... on Mannequin {\n        login\n        __typename\n      }\n      ... on Node {\n        __isNode: __typename\n        id\n      }\n    }\n    totalCount\n  }\n  viewerHasReacted\n}\n\nfragment ReactionViewerGroups on Reactable {\n  __isReactable: __typename\n  reactionGroups {\n    ...ReactionButton_Reaction\n    ...ReactionsMenuItem_Reaction\n  }\n}\n\nfragment ReactionsMenuItem_Reaction on ReactionGroup {\n  content\n  viewerHasReacted\n}\n\nfragment useCanEditSubIssues on Issue {\n  viewerCanUpdateMetadata\n  repository {\n    isArchived\n    id\n  }\n}\n\nfragment useHasSubIssues on Issue {\n  subIssuesConnection: subIssues {\n    totalCount\n  }\n}\n",
  "fd33caabe502263c3e5238fe7d1ae28e": "query ProjectItemSectionFieldListTestQuery {\n  node(id: 1) {\n    __typename\n    ... on ProjectV2Item {\n      ...ProjectItemSectionFields\n    }\n    id\n  }\n}\n\nfragment DateFieldConfigFragment on ProjectV2Field {\n  id\n  name\n}\n\nfragment DateFieldFragment on ProjectV2ItemFieldDateValue {\n  id\n  date\n  field {\n    __typename\n    ...DateFieldConfigFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment IterationFieldConfigFragment on ProjectV2IterationField {\n  id\n  name\n  configuration {\n    iterations {\n      ...IterationFieldIterationFragment\n    }\n    completedIterations {\n      ...IterationFieldIterationFragment\n    }\n  }\n}\n\nfragment IterationFieldFragment on ProjectV2ItemFieldIterationValue {\n  iterationId\n  title\n  titleHTML\n  startDate\n  duration\n  field {\n    __typename\n    ...IterationFieldConfigFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment IterationFieldIterationFragment on ProjectV2IterationFieldIteration {\n  id\n  title\n  titleHTML\n  startDate\n  duration\n}\n\nfragment NumberFieldConfigFragment on ProjectV2Field {\n  id\n  name\n}\n\nfragment NumberFieldFragment on ProjectV2ItemFieldNumberValue {\n  id\n  number\n  field {\n    __typename\n    ...NumberFieldConfigFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n\nfragment ProjectItemSectionFields on ProjectV2Item {\n  id\n  isArchived\n  project {\n    id\n    title\n    url\n    viewerCanUpdate\n    fields(first: 50, orderBy: {field: POSITION, direction: ASC}) {\n      edges {\n        node {\n          __typename\n          ... on ProjectV2Field {\n            id\n            dataType\n            name\n            ...TextFieldConfigFragment\n            ...DateFieldConfigFragment\n            ...NumberFieldConfigFragment\n          }\n          ... on ProjectV2IterationField {\n            id\n            dataType\n            name\n            ...IterationFieldConfigFragment\n          }\n          ... on ProjectV2SingleSelectField {\n            id\n            dataType\n            name\n            ...SingleSelectFieldConfigFragment\n          }\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n      }\n    }\n  }\n  ...ProjectItemSectionFieldsValues\n}\n\nfragment ProjectItemSectionFieldsValues on ProjectV2Item {\n  fieldValues(first: 50, orderBy: {field: POSITION, direction: ASC}) {\n    edges {\n      node {\n        __typename\n        ... on ProjectV2ItemFieldTextValue {\n          id\n          field {\n            __typename\n            ... on ProjectV2Field {\n              id\n            }\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n        ...TextFieldFragment\n        ... on ProjectV2ItemFieldNumberValue {\n          id\n          field {\n            __typename\n            ... on ProjectV2Field {\n              id\n            }\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n        ...NumberFieldFragment\n        ... on ProjectV2ItemFieldDateValue {\n          id\n          field {\n            __typename\n            ... on ProjectV2Field {\n              id\n            }\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n        ...DateFieldFragment\n        ... on ProjectV2ItemFieldSingleSelectValue {\n          id\n          field {\n            __typename\n            ... on ProjectV2SingleSelectField {\n              id\n            }\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n        ...SingleSelectFieldFragment\n        ... on ProjectV2ItemFieldIterationValue {\n          id\n          field {\n            __typename\n            ... on ProjectV2IterationField {\n              id\n            }\n            ... on Node {\n              __isNode: __typename\n              id\n            }\n          }\n        }\n        ...IterationFieldFragment\n        ... on Node {\n          __isNode: __typename\n          id\n        }\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment SingleSelectFieldConfigFragment on ProjectV2SingleSelectField {\n  id\n  name\n  options {\n    ...SingleSelectFieldOptionFragment\n    id\n    name\n    description\n    color\n  }\n}\n\nfragment SingleSelectFieldFragment on ProjectV2ItemFieldSingleSelectValue {\n  id\n  optionId\n  name\n  nameHTML\n  color\n}\n\nfragment SingleSelectFieldOptionFragment on ProjectV2SingleSelectFieldOption {\n  id\n  optionId\n  name\n  nameHTML\n  color\n  descriptionHTML\n}\n\nfragment TextFieldConfigFragment on ProjectV2Field {\n  id\n  name\n}\n\nfragment TextFieldFragment on ProjectV2ItemFieldTextValue {\n  id\n  text\n  field {\n    __typename\n    ...TextFieldConfigFragment\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n}\n",
  "fd7883ac20a09050a089f985cac445ce": "query MilestonePickerQuery(\n  $owner: String!\n  $repo: String!\n) {\n  repository(owner: $owner, name: $repo) {\n    ...MilestonePickerRecentlyUpdatedMilestones\n    id\n  }\n}\n\nfragment MilestonePickerMilestone on Milestone {\n  id\n  title\n  closed\n  dueOn\n  progressPercentage\n  url\n  closedAt\n}\n\nfragment MilestonePickerRecentlyUpdatedMilestones on Repository {\n  milestones(first: 100, orderBy: {field: UPDATED_AT, direction: DESC}, orderByStates: [OPEN, CLOSED]) {\n    nodes {\n      ...MilestonePickerMilestone\n      id\n    }\n  }\n  id\n}\n",
  "fee6de19b7114f873979e4a707513bdf": "query ClosedEventTestQuery {\n  node(id: \"node-id\") {\n    __typename\n    ... on ClosedEvent {\n      ...ClosedEvent\n    }\n    id\n  }\n}\n\nfragment ClosedEvent on ClosedEvent {\n  databaseId\n  createdAt\n  stateReason\n  closingProjectItemStatus\n  closer {\n    __typename\n    ... on ProjectV2 {\n      url\n      title\n    }\n    ... on PullRequest {\n      url\n      number\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Commit {\n      url\n      abbreviatedOid\n      repository {\n        name\n        owner {\n          __typename\n          login\n          id\n        }\n        id\n      }\n    }\n    ... on Node {\n      __isNode: __typename\n      id\n    }\n  }\n  actor {\n    __typename\n    ...TimelineRowEventActor\n    id\n  }\n}\n\nfragment EventActor on Actor {\n  __isActor: __typename\n  avatarUrl(size: 64)\n  login\n  __typename\n}\n\nfragment TimelineRowEventActor on Actor {\n  __isActor: __typename\n  ...EventActor\n}\n",
  "ff45f300b13c98cd7c110ef80b8f6978": "query ApplyAssigneesActionTestQuery(\n  $ids: [ID!]!\n) {\n  nodes(ids: $ids) {\n    __typename\n    ... on Issue {\n      id\n      assignees(first: 20) {\n        edges {\n          node {\n            ...AssigneePickerAssignee\n            id\n          }\n        }\n      }\n    }\n    id\n  }\n}\n\nfragment AssigneePickerAssignee on User {\n  id\n  login\n  name\n  avatarUrl(size: 64)\n}\n",
  "ff557e9bdb44d7077cf85d90d1cca501": "query PinnedIssueTestQuery {\n  node(id: \"pinnedIssue\") {\n    __typename\n    ... on Issue {\n      ...PinnedIssueIssue\n    }\n    id\n  }\n}\n\nfragment PinnedIssueIssue on Issue {\n  id\n  title\n  titleHTML\n  url\n  createdAt\n  state\n  stateReason\n  number\n  author {\n    __typename\n    login\n    url\n    id\n  }\n  totalCommentsCount\n  repository {\n    viewerCanPinIssues\n    id\n  }\n}\n"
}