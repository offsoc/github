# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Actions::V0::WorkflowUpdate::RunUpdate`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Actions::V0::WorkflowUpdate::RunUpdate`.

class Hydro::Schemas::Github::Actions::V0::WorkflowUpdate::RunUpdate
  sig do
    params(
      annotations: T.nilable(T.any(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::Actions::V0::Entities::Annotation], T::Array[Hydro::Schemas::Github::Actions::V0::Entities::Annotation])),
      artifacts: T.nilable(T.any(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::Actions::V0::Entities::Artifact], T::Array[Hydro::Schemas::Github::Actions::V0::Entities::Artifact])),
      check_suite_id: T.nilable(String),
      completed_at: T.nilable(Google::Protobuf::Timestamp),
      completed_log: T.nilable(Hydro::Schemas::Github::Actions::V0::Entities::Log),
      conclusion: T.nilable(T.any(Symbol, Integer)),
      concurrency: T.nilable(Hydro::Schemas::Github::Actions::V0::Entities::Concurrency),
      started_at: T.nilable(Google::Protobuf::Timestamp),
      status: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(annotations: T.unsafe(nil), artifacts: T.unsafe(nil), check_suite_id: nil, completed_at: nil, completed_log: nil, conclusion: nil, concurrency: nil, started_at: nil, status: nil); end

  sig { returns(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::Actions::V0::Entities::Annotation]) }
  def annotations; end

  sig do
    params(
      value: Google::Protobuf::RepeatedField[Hydro::Schemas::Github::Actions::V0::Entities::Annotation]
    ).void
  end
  def annotations=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::Actions::V0::Entities::Artifact]) }
  def artifacts; end

  sig { params(value: Google::Protobuf::RepeatedField[Hydro::Schemas::Github::Actions::V0::Entities::Artifact]).void }
  def artifacts=(value); end

  sig { returns(String) }
  def check_suite_id; end

  sig { params(value: String).void }
  def check_suite_id=(value); end

  sig { void }
  def clear_annotations; end

  sig { void }
  def clear_artifacts; end

  sig { void }
  def clear_check_suite_id; end

  sig { void }
  def clear_completed_at; end

  sig { void }
  def clear_completed_log; end

  sig { void }
  def clear_conclusion; end

  sig { void }
  def clear_concurrency; end

  sig { void }
  def clear_started_at; end

  sig { void }
  def clear_status; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def completed_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def completed_at=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Actions::V0::Entities::Log)) }
  def completed_log; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Actions::V0::Entities::Log)).void }
  def completed_log=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def conclusion; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def conclusion=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Actions::V0::Entities::Concurrency)) }
  def concurrency; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Actions::V0::Entities::Concurrency)).void }
  def concurrency=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def started_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def started_at=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def status; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def status=(value); end
end
