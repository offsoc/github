{"version":3,"file":"enterprise-server-stats-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/analytics-overrides/analytics-overrides.ts","ui/packages/enterprise-server-stats/components/Delta.tsx","ui/packages/enterprise-server-stats/components/HeroStat.tsx","ui/packages/enterprise-server-stats/components/Chart.tsx","ui/packages/enterprise-server-stats/hooks/use-chart-data.ts","ui/packages/enterprise-server-stats/EnterpriseServerStats.tsx","ui/packages/enterprise-server-stats/enterprise-server-stats.ts","ui/packages/enterprise-server-stats/entry.ts","ui/packages/failbot/failbot.ts","ui/packages/react-core/deferred-registry.ts","ui/packages/react-core/react-partial-anchor.ts","ui/packages/react-core/react-partial-registry.ts","ui/packages/react-core/ReactPartialElement.tsx","ui/packages/react-core/register-partial.ts","ui/packages/react-profiling-mode/src/index.ts","ui/packages/safe-storage/session-storage.ts","ui/packages/soft-nav/utils.ts","ui/packages/verified-fetch/verified-fetch.ts","ui/packages/react-core/PartialRouter.tsx","ui/packages/react-core/PartialEntry.tsx","ui/packages/react-core/ReactBaseElement.tsx"],"sourcesContent":["function queryLast<T extends Element>(selector: string): T | undefined {\n  const list = document.querySelectorAll<T>(selector)\n  if (list.length > 0) {\n    return list[list.length - 1]\n  }\n}\n\nfunction pagePathname() {\n  const locationOverride = queryLast<HTMLMetaElement>('meta[name=analytics-location]')\n  if (locationOverride) {\n    return locationOverride.content\n  } else {\n    return window.location.pathname\n  }\n}\n\nfunction pageQuery() {\n  const stripParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-query-strip]')\n  let search = ''\n\n  if (!stripParams) {\n    search = window.location.search\n  }\n\n  const extraParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-params]')\n  if (extraParams) {\n    search += (search ? '&' : '?') + extraParams.content\n  }\n\n  for (const meta of document.querySelectorAll<HTMLMetaElement>('meta[name=analytics-param-rename]')) {\n    const names = meta.content.split(':', 2)\n    search = search.replace(new RegExp(`(^|[?&])${names[0]}($|=)`, 'g'), `$1${names[1]}$2`)\n  }\n\n  return search\n}\n\nexport function requestUri() {\n  return `${window.location.protocol}//${window.location.host}${pagePathname() + pageQuery()}`\n}\n","import type React from 'react'\nimport {Box} from '@primer/react'\nimport {ArrowDownIcon, ArrowUpIcon} from '@primer/octicons-react'\n\ninterface Props extends Omit<React.ComponentProps<typeof Box>, 'children'> {\n  value?: number\n  suffix?: React.ReactNode\n}\n\nconst getColor = (value: number) => {\n  if (value === 0) return ''\n\n  if (value < 0) {\n    return 'danger.fg'\n  }\n\n  return 'success.fg'\n}\n\nconst getPrefix = (value: number) => {\n  if (value === 0) return null\n\n  const icon = value < 0 ? <ArrowDownIcon /> : <ArrowUpIcon />\n\n  return <Box sx={{mx: 1}}>{icon}</Box>\n}\n\nexport const Delta = ({value, suffix, sx, ...restProps}: Props) => {\n  if (value === undefined) {\n    return null\n  }\n\n  return (\n    <Box sx={{display: 'flex', color: getColor(value), fontWeight: 'bold', ...sx}} {...restProps}>\n      {getPrefix(value)}\n      {Math.abs(value)}\n      {suffix ?? null}\n    </Box>\n  )\n}\n\ntry{ Delta.displayName ||= 'Delta' } catch {}","import type React from 'react'\nimport {Box, Text, Heading} from '@primer/react'\nimport {Delta} from './Delta'\nimport type {HeroStatData} from '../types'\n\ntype Props = Omit<React.ComponentProps<typeof Box>, 'children'> & HeroStatData\n\nexport const HeroStat: React.FC<Props> = ({label, percentChange, sx = {}, total, ...restProps}) => {\n  return (\n    <Box\n      sx={{\n        alignItems: 'center',\n        bg: 'neutral.subtle',\n        boxShadow: 'shadow.small',\n        justifyContent: 'space-between',\n        p: 3,\n        width: '100%',\n        ...sx,\n      }}\n      {...restProps}\n    >\n      <div>\n        <Heading as=\"h3\" sx={{color: 'fg.muted', fontSize: 1, fontWeight: 'normal', mb: 1}}>\n          {label}\n        </Heading>\n      </div>\n      <Box sx={{display: 'flex', alignItems: 'baseline'}}>\n        <Text sx={{color: 'fg.default', fontSize: 4}}> {total.toLocaleString()}</Text>\n        <Delta value={percentChange} sx={{ml: 2}} suffix=\"%\" />\n      </Box>\n    </Box>\n  )\n}\n\ntry{ HeroStat.displayName ||= 'HeroStat' } catch {}","import type React from 'react'\nimport {Box, Spinner} from '@primer/react'\nimport {HeroStat} from './HeroStat'\nimport type {SeriesData, HeroStatData} from '../types'\n\ninterface Props extends React.ComponentProps<typeof Box> {\n  error?: string\n  height?: number\n  heroStats?: HeroStatData[]\n  loading?: boolean\n  series?: SeriesData\n  title: string\n}\n\nconst gridTemplateColumns = (length: number) => {\n  // fit all content on 1 row, with a minimum of 3 columns per row\n  let numColumns = length < 3 ? 3 : length\n  // and a maximum of 6 columns per row\n  numColumns = numColumns > 6 ? 6 : numColumns\n\n  return new Array(numColumns).fill('1fr').join(' ')\n}\n\nexport const Chart = ({height = 300, heroStats = [], loading, series, title, error, ...restProps}: Props) => {\n  return (\n    <Box aria-live=\"polite\" aria-busy={!!loading} {...restProps}>\n      <h3 className=\"mb-3\">{title}</h3>\n\n      {!!heroStats.length && (\n        <Box\n          sx={{\n            display: ['block', 'block', 'grid', 'grid'],\n            gap: 4,\n            gridTemplateColumns: gridTemplateColumns(heroStats.length),\n            justifyContent: 'space-between',\n            my: 4,\n          }}\n        >\n          {heroStats.map(heroStat => (\n            <HeroStat key={`${title}-${heroStat.label}`} sx={{marginTop: [2, 2, 0, 0]}} {...heroStat} />\n          ))}\n        </Box>\n      )}\n\n      <Box className=\"height-full\" sx={{my: 4}}>\n        <Box sx={{height, position: 'relative'}}>\n          {loading ? (\n            // Bypass the internal chart loading state since the web component is rendered on the client; this ensures\n            // a loading indicator is present on the first render, even if that happens on the server\n            <Spinner\n              data-testid=\"loading-indicator\"\n              sx={{margin: 'auto', position: 'absolute', top: 0, bottom: 0, left: 0, right: 0}}\n            />\n          ) : (\n            // See https://insights-docs.githubapp.com/v1/line-chart for supported attributes\n            <line-chart data-testid=\"line-chart\" error={error || null} series={JSON.stringify(series)} />\n          )}\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n\ntry{ Chart.displayName ||= 'Chart' } catch {}","import {useEffect, useMemo, useState} from 'react'\n// eslint-disable-next-line no-restricted-imports\nimport {reportError} from '@github-ui/failbot'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport type {HeroStatData, SeriesData, TimePeriod} from '../types'\n\ninterface Options {\n  enterpriseSlug: string\n  period: TimePeriod\n  server: string\n}\n\ninterface State {\n  loading: boolean\n  error?: string\n  data?: RawData\n}\n\nexport enum StatKey {\n  Issues = 'issues',\n  Pulls = 'pulls',\n  Repos = 'repos',\n  Users = 'users',\n  Orgs = 'orgs',\n}\n\ninterface ChartConfig {\n  title: string\n}\n\nconst chartsConfig: Record<StatKey, ChartConfig> = {\n  [StatKey.Issues]: {\n    title: 'Issues',\n  },\n  [StatKey.Pulls]: {\n    title: 'Pull Requests',\n  },\n  [StatKey.Repos]: {\n    title: 'Repositories',\n  },\n  [StatKey.Users]: {\n    title: 'Users',\n  },\n  [StatKey.Orgs]: {\n    title: 'Orgs & Teams',\n  },\n}\n\nexport interface RawData {\n  heroStats: HeroStatData[]\n  series: SeriesData\n}\n\ninterface Response {\n  data: RawData\n}\n\ninterface FetchOptions {\n  enterpriseSlug: string\n  period: string\n  server: string\n  statKey: StatKey\n}\n\nconst fetchChartData = async ({enterpriseSlug, period, server, statKey}: FetchOptions): Promise<Response> => {\n  try {\n    const search = new URLSearchParams({period, server}).toString()\n    const res = await verifiedFetchJSON(\n      `/enterprises/${enterpriseSlug}/enterprise_installations/server_stats/${statKey}?${search}`,\n    )\n    if (res.ok) {\n      return res.json()\n    } else {\n      throw new Error(res.statusText)\n    }\n  } catch (e) {\n    reportError(new Error(`error fetching chart data: ${(e as Error)?.message ?? 'unknown error'}`))\n    throw e\n  }\n}\n\nconst CHART_LOADING_STATE = {\n  data: undefined,\n  error: undefined,\n  loading: true,\n}\n\nexport function useChartData(statKey: StatKey, {enterpriseSlug, server, period}: Options) {\n  const [chartState, setChartState] = useState<State>(CHART_LOADING_STATE)\n\n  useEffect(() => {\n    setChartState(CHART_LOADING_STATE)\n    const handleFetch = async () => {\n      let data: Response | undefined\n      let error = undefined\n      try {\n        data = await fetchChartData({enterpriseSlug, period, server, statKey})\n      } catch (e: unknown) {\n        error = (e as Error)?.message || 'error fetching chart data'\n      }\n      setChartState({error, loading: false, ...data})\n    }\n\n    handleFetch()\n  }, [enterpriseSlug, period, server, statKey])\n\n  const chartData = useMemo(() => ({...chartState, statKey, title: chartsConfig[statKey].title}), [chartState, statKey])\n\n  return chartData\n}\n","import type {TimePeriod} from './types'\nimport {Chart} from './components/Chart'\nimport {useChartData, StatKey} from './hooks/use-chart-data'\n\nexport interface EnterpriseServerStatsProps extends React.ComponentProps<'div'> {\n  enterpriseSlug: string\n  selectedServer: string\n  timePeriod: TimePeriod\n}\n\nexport function EnterpriseServerStats({\n  enterpriseSlug,\n  selectedServer: server,\n  timePeriod: period,\n  ...restProps\n}: EnterpriseServerStatsProps) {\n  const chartOptions = {enterpriseSlug, period, server}\n  const issuesChart = useChartData(StatKey.Issues, chartOptions)\n  const pullsChart = useChartData(StatKey.Pulls, chartOptions)\n  const reposChart = useChartData(StatKey.Repos, chartOptions)\n  const usersChart = useChartData(StatKey.Users, chartOptions)\n  const orgsChart = useChartData(StatKey.Orgs, chartOptions)\n\n  return (\n    <div {...restProps}>\n      {[issuesChart, pullsChart, reposChart, usersChart, orgsChart].map(({loading, error, title, statKey, data}) => (\n        <Chart\n          data-hpc\n          error={error ? `Could not load ${title} data` : undefined}\n          key={statKey}\n          loading={loading}\n          sx={{my: 4}}\n          title={title}\n          {...data}\n        />\n      ))}\n    </div>\n  )\n}\n\ntry{ EnterpriseServerStats.displayName ||= 'EnterpriseServerStats' } catch {}","import {registerReactPartial} from '@github-ui/react-core/register-partial'\nimport {EnterpriseServerStats} from './EnterpriseServerStats'\n\nregisterReactPartial('enterprise-server-stats', {\n  Component: EnterpriseServerStats,\n})\n","/**\n * This file automatically registers this package with webpack and creates a bundle named `enterprise-server-stats`\n * Any code written in enterprise-server-stats.ts will run when the bundle is loaded.\n */\nimport {RegisterLineChart} from '@github-ui/insights-charts'\nimport './enterprise-server-stats'\n// This is only registered on the client side as it registers the `line-chart` web component.\nRegisterLineChart()\n","// Report uncaught JS errors to Sentry\n//   https://sentry.io/github/github-js\n\nimport {getOrCreateClientId} from '@github/hydro-analytics-client'\nimport {isSupported} from '@github/browser-support'\nimport {parse} from 'stacktrace-parser'\nimport {requestUri} from '@github-ui/analytics-overrides'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {getSoftNavReferrer} from '@github-ui/soft-nav/utils'\n\nlet extensionErrors = false\nlet errorsReported = 0\nconst loadTime = Date.now()\n// network error messages are not consistent across browsers, this is a list of known messages for chrome and firefox\nexport const EXPECTED_NETWORK_ERROR_MESSAGES = new Set([\n  'Failed to fetch',\n  'NetworkError when attempting to fetch resource.',\n])\n\ntype ErrorContext = {\n  message?: string\n}\n\n// Check if an arbitrary object is an error, or at least an object that satisfies the interface of an error,\n// with the necessary information to be able to report it to Sentry.\nfunction isError(error: unknown): error is Error {\n  // Check if it's a definite instance of an error\n  if (error instanceof Error) return true\n  // Otherwise, check that it at least satisfies the interface of an error\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'name' in error &&\n    typeof error.name === 'string' &&\n    'message' in error &&\n    typeof error.message === 'string'\n  )\n}\n\n/** Tries to serialize an arbitrary error value that is not an Error object, and returns a default message otherwise */\nfunction serializeNonError(error: unknown): string {\n  try {\n    return JSON.stringify(error)\n  } catch {\n    return 'Unserializable'\n  }\n}\n\nfunction isExpectedError(error: Error): boolean {\n  // We use AbortController to control events and some workflows. When we call `abort()` on it, it will raise an\n  // `AbortError` which doesn't represent a real error, so we don't want to report it.\n  if (error.name === 'AbortError') return true\n  // Failed to fetch errors are usually related to the user's network connection. They also do not represent\n  // real errors related to our code, so we will also ignore them.\n  if (error.name === 'TypeError' && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n  // For memex we use an ApiError class to represent errors returned from the API\n  // Additional details in the format of ApiErrorOpts are affixed to the name as a stringified JSON object\n  // so we just need to ensure the error name starts with ApiError\n  // see ui/packages/memex/src/client/platform/api-error.ts for more details.\n  if (error.name.startsWith('ApiError') && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n\n  return false\n}\n\n// @deprecated Re-throw the caught exception instead.\nexport function reportError(error: unknown, context: ErrorContext = {}) {\n  if (isFeatureEnabled('FAILBOT_HANDLE_NON_ERRORS')) {\n    if (!isError(error)) {\n      if (isIgnoredNonError(error)) return\n\n      // Create an error instance so that we can get the stacktrace of how this was reported\n      const errorForStackTrace = new Error()\n      const serializedErrorValue = serializeNonError(error)\n      // Construct a custom error object so we can keep track of anywhere that we report an error that isn't an Error object\n      const newError: PlatformJavascriptError = {\n        type: 'UnknownError',\n        value: `Unable to report error, due to a thrown non-Error type: ${typeof error}, with value ${serializedErrorValue}`,\n        stacktrace: stacktrace(errorForStackTrace),\n        catalogService: undefined,\n      }\n      report(errorContext(newError, context))\n      return\n    }\n    if (!isExpectedError(error)) {\n      report(errorContext(formatError(error), context))\n    }\n  } else {\n    // Without feature flag, we will cast the `error` variable which was implicitly the old\n    // behavior of the non-feature flagged code.\n    if (!isExpectedError(error as Error)) {\n      report(errorContext(formatError(error as Error), context))\n    }\n  }\n}\n\n// Report context info to Sentry.\nasync function report(context: PlatformReportBrowserErrorInput) {\n  if (!reportable()) return\n\n  const url = document.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-errors-url\"]')?.content\n  if (!url) return\n\n  if (isExtensionError(context.error.stacktrace)) {\n    extensionErrors = true\n    return\n  }\n\n  errorsReported++\n\n  try {\n    await fetch(url, {method: 'post', body: JSON.stringify(context)})\n  } catch {\n    // Error reporting failed so do nothing.\n  }\n}\n\nfunction formatError(error: Error): PlatformJavascriptError {\n  return {\n    type: error.name,\n    value: error.message,\n    stacktrace: stacktrace(error),\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    catalogService: (error as any)['catalogService'],\n  }\n}\n\nfunction errorContext(error: PlatformJavascriptError, context: ErrorContext = {}): PlatformReportBrowserErrorInput {\n  return Object.assign(\n    {\n      error,\n      sanitizedUrl: requestUri() || window.location.href,\n      readyState: document.readyState,\n      referrer: getSoftNavReferrer(),\n      timeSinceLoad: Math.round(Date.now() - loadTime),\n      user: pageUser() || undefined,\n      bundler,\n      ui: Boolean(document.querySelector('meta[name=\"ui\"]')),\n    },\n    context,\n  )\n}\n\nexport function stacktrace(error: Error): PlatformStackframe[] {\n  return parse(error.stack || '').map(frame => ({\n    filename: frame.file || '',\n    function: String(frame.methodName),\n    lineno: (frame.lineNumber || 0).toString(),\n    colno: (frame.column || 0).toString(),\n  }))\n}\n\nconst extensions = /(chrome|moz|safari)-extension:\\/\\//\n\n// Does this stack trace contain frames from browser extensions?\nfunction isExtensionError(stack: PlatformStackframe[]): boolean {\n  return stack.some(frame => extensions.test(frame.filename) || extensions.test(frame.function))\n}\n\nexport function pageUser() {\n  const login = document.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n  if (login) return login\n\n  const clientId = getOrCreateClientId()\n  return `anonymous-${clientId}`\n}\n\nlet unloaded = false\nssrSafeWindow?.addEventListener('pageshow', () => (unloaded = false))\nssrSafeWindow?.addEventListener('pagehide', () => (unloaded = true))\n\nfunction reportable() {\n  return !unloaded && !extensionErrors && errorsReported < 10 && isSupported()\n}\n\nif (typeof BroadcastChannel === 'function') {\n  const sharedWorkerErrorChannel = new BroadcastChannel('shared-worker-error')\n  sharedWorkerErrorChannel.addEventListener('message', event => {\n    // SharedWorker will emit a formatted error\n    reportError(event.data.error)\n  })\n}\n\nconst ignoredErrorMessages = [\n  'Object Not Found Matching Id', // from Microsoft Outlook SafeLink crawler\n  'Not implemented on this platform', // LastPass Safari extension\n  `provider because it's not your default extension`, // MetaMask extension\n]\n\n/**\n * We see a fair number of \"errors\" which are not actually Error objects. This function will return true if the\n * error is one of these known non-Error types and has content which we know can safely be ignored.\n * Most of these errors come from specific browsers or extensions which we can't control, so we just ignore them.\n * @param error An error that is not an Error object\n * @returns boolean\n */\nfunction isIgnoredNonError(error: unknown) {\n  if (!error || typeof error === 'boolean' || typeof error === 'number') {\n    // Rejected with a type that is not useful to report. Just ignore it.\n    return true\n  } else if (typeof error === 'string') {\n    // rejected with a string. See if it's a known error that we can ignore\n    if (ignoredErrorMessages.some(message => error.includes(message))) {\n      return true\n    }\n  } else if (\n    typeof error === 'object' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).message === 'string' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).code === 'number'\n  ) {\n    // We see an object like {\"message\":\"Not connected\",\"code\":4900} from some extension, likely MetaMask. Ignore these\n    return true\n  }\n\n  return false\n}\n","export class DeferredRegistry<T> {\n  private registrationEntries: Record<\n    string,\n    {\n      promise: Promise<T>\n      resolve?: (r: T) => void\n    }\n  > = {}\n\n  public register(name: string, registration: T) {\n    const entry = this.registrationEntries[name]\n    if (entry) {\n      entry.resolve?.(registration)\n    } else {\n      this.registrationEntries[name] = {\n        promise: Promise.resolve(registration),\n      }\n    }\n  }\n\n  public getRegistration(name: string): Promise<T> {\n    this.registrationEntries[name] ||= new Deferred()\n    return this.registrationEntries[name].promise\n  }\n}\n\nclass Deferred<T> {\n  declare promise\n  declare resolve: (r: T) => void\n\n  constructor() {\n    this.promise = new Promise<T>(resolve => {\n      this.resolve = resolve\n    })\n  }\n}\n","import type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {useCallback, useEffect, useRef, useState} from 'react'\n\ninterface ReactPartialAnchor {\n  /**\n   * DO NOT USE THIS PROPERTY DIRECTLY. It is meant to be used with useExternalAnchor and useOnAnchorClick\n   */\n  __wrapperElement: ReactPartialAnchorElement\n}\n\nexport interface ReactPartialAnchorProps {\n  reactPartialAnchor?: ReactPartialAnchor\n}\n\nexport function usePartialAnchorProps(\n  anchorElement: ReactPartialAnchorElement | undefined | null,\n): ReactPartialAnchorProps {\n  useEffect(() => {\n    const anchor = anchorElement?.anchor\n\n    if (!anchor) {\n      return\n    }\n\n    if ('disabled' in anchor) {\n      anchor.disabled = false\n    }\n    anchor.classList.remove('cursor-wait')\n  }, [anchorElement])\n\n  if (!anchorElement) {\n    return {}\n  }\n\n  return {\n    reactPartialAnchor: {\n      __wrapperElement: anchorElement,\n    },\n  }\n}\n\nexport function useExternalAnchor(reactPartialAnchor: ReactPartialAnchor) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor || null)\n  const [open, setOpen] = useState(false)\n\n  const onClick = useCallback(() => {\n    // toggle the open state when clicked\n    setOpen(!open)\n  }, [open, setOpen])\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    ref.current.setAttribute('aria-expanded', open.toString())\n    ref.current.setAttribute('aria-haspopup', 'true')\n  }, [ref, open])\n\n  useOnAnchorClick(reactPartialAnchor, onClick)\n\n  return {\n    ref,\n    open,\n    setOpen,\n  }\n}\n\nexport function useOnAnchorClick(reactPartialAnchor: ReactPartialAnchor, onClick: (event: MouseEvent) => void) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor)\n\n  useEffect(() => {\n    const element = ref.current\n    if (!element) {\n      return\n    }\n\n    element.addEventListener('click', onClick)\n    return () => element.removeEventListener('click', onClick)\n  }, [ref, onClick])\n}\n\nexport type PropsWithPartialAnchor<T> = T & Required<ReactPartialAnchorProps>\n","import {DeferredRegistry} from './deferred-registry'\n\nexport interface PartialRegistration {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Component: React.ComponentType<any>\n}\n\nexport const partialRegistry = new DeferredRegistry<PartialRegistration>()\n\nexport function getReactPartial(appName: string) {\n  return partialRegistry.getRegistration(appName)\n}\n","import {controller} from '@github/catalyst'\nimport {getReactPartial} from './react-partial-registry'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {ReactBaseElement} from './ReactBaseElement'\nimport {PartialEntry} from './PartialEntry'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\n\n// What is this silliness? Is it react or a web component?!\n// It's a web component we use to bootstrap react partials within the monolith.\n@controller\nclass ReactPartialElement extends ReactBaseElement<EmbeddedPartialData> {\n  nameAttribute = 'partial-name'\n\n  async getReactNode(embeddedData: EmbeddedPartialData) {\n    const {Component} = await getReactPartial(this.name)\n\n    // Some React Partials will be wrapped in a react-partial-anchor, which is used to conditionally render the Partial\n    const anchorElement = this.closest<ReactPartialAnchorElement>('react-partial-anchor')\n\n    return (\n      <PartialEntry\n        partialName={this.name}\n        embeddedData={embeddedData}\n        Component={Component}\n        wasServerRendered={this.hasSSRContent}\n        ssrError={this.ssrError}\n        anchorElement={anchorElement}\n      />\n    )\n  }\n}\n","import {partialRegistry, type PartialRegistration} from './react-partial-registry'\n// Import the web component to get it registered on the window\nimport './ReactPartialElement'\n\n// NOTE: if the signature of this method changes, also update the react-partial-name ESLint rule\n// /workspaces/github/ui/packages/eslint-plugin-github-monorepo/rules/react-partial-name.js\nexport function registerReactPartial(name: string, registration: PartialRegistration) {\n  partialRegistry.register(name, registration)\n}\n","import safeStorage from '@github-ui/safe-storage'\n\nconst {getItem, setItem, removeItem} = safeStorage('localStorage')\nconst REACT_PROFILING_ENABLED = 'REACT_PROFILING_ENABLED'\n\ninterface ReactProfilingModeMethods {\n  enable: () => void\n  disable: () => void\n  isEnabled: () => boolean\n}\n\nconst ReactProfilingMode: ReactProfilingModeMethods = {\n  enable: () => setItem(REACT_PROFILING_ENABLED, 'true'),\n  disable: () => removeItem(REACT_PROFILING_ENABLED),\n  isEnabled: () => !!getItem(REACT_PROFILING_ENABLED),\n}\n\nexport default ReactProfilingMode\n","import safeStorage from './safe-storage'\n\nexport const {getItem, setItem, removeItem} = safeStorage('sessionStorage')\n","import {getItem, removeItem, setItem} from '@github-ui/safe-storage/session-storage'\nimport type {SoftNavMechanism} from './events'\n\nexport const DEFAULT_SOFT_NAV_ERROR_REASON = 'reload'\n\nexport const SOFT_NAV_FAIL = 'soft-nav:fail'\nexport const SOFT_NAV_FAIL_REFERRER = 'soft-nav:fail-referrer'\nexport const SOFT_NAV_REFERRER = 'soft-nav:referrer'\nexport const SOFT_NAV_MARK = 'soft-nav:marker'\nexport const SOFT_NAV_REACT_APP_NAME = 'soft-nav:react-app-name'\nexport const SOFT_NAV_LATEST_MECHANISM = 'soft-nav:latest-mechanism'\n\nexport function clearSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n  removeItem(SOFT_NAV_REFERRER)\n  removeItem(SOFT_NAV_FAIL)\n  removeItem(SOFT_NAV_FAIL_REFERRER)\n  removeItem(SOFT_NAV_REACT_APP_NAME)\n  removeItem(SOFT_NAV_LATEST_MECHANISM)\n}\n\nexport function setSoftNavMechanism(mechanism: SoftNavMechanism) {\n  setItem(SOFT_NAV_MARK, mechanism)\n}\n\nexport function unsetSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n}\n\nexport function inSoftNav() {\n  const softNav = getItem(SOFT_NAV_MARK)\n  return softNav && softNav !== '0'\n}\n\nexport function getSoftNavMechanism(): SoftNavMechanism {\n  return getItem(SOFT_NAV_MARK) as SoftNavMechanism\n}\n\nexport function hasSoftNavFailure() {\n  return Boolean(getSoftNavFailReason())\n}\n\nexport function getSoftNavFailReason() {\n  return getItem(SOFT_NAV_FAIL)\n}\n\nexport function setSoftNavFailReason(reason: string) {\n  setItem(SOFT_NAV_FAIL, reason || DEFAULT_SOFT_NAV_ERROR_REASON)\n  setItem(SOFT_NAV_FAIL_REFERRER, window.location.href)\n}\n\nexport function setSoftNavReferrer() {\n  setItem(SOFT_NAV_REFERRER, window.location.href)\n}\n\nexport function getSoftNavReferrer() {\n  return getItem(SOFT_NAV_REFERRER) || document.referrer\n}\n\nexport function setSoftNavReactAppName() {\n  const appName = getCurrentReactAppName()\n\n  if (appName) {\n    setItem(SOFT_NAV_REACT_APP_NAME, appName)\n  } else {\n    removeItem(SOFT_NAV_REACT_APP_NAME)\n  }\n}\n\nexport function getSoftNavReactAppName() {\n  return getItem(SOFT_NAV_REACT_APP_NAME)\n}\n\nexport function getCurrentReactAppName() {\n  if (document.querySelector('meta[name=\"ui\"]')) return 'ui'\n\n  return document.querySelector('react-app')?.getAttribute('app-name')\n}\n\nexport function setLatestMechanism(mechanism: SoftNavMechanism) {\n  setItem(SOFT_NAV_LATEST_MECHANISM, mechanism)\n}\n\nexport function getLatestMechanism() {\n  return getItem(SOFT_NAV_LATEST_MECHANISM) as SoftNavMechanism\n}\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  assertRelativePathOrSameOrigin(path)\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\nfunction assertRelativePathOrSameOrigin(path: string) {\n  if (process.env.NODE_ENV === 'test' && !window.location.origin) return\n  const url = new URL(path, window.location.origin)\n  if (url.origin !== window.location.origin) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetch(path, {...init, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetchJSON(path, {...init, headers})\n}\n","import {useState} from 'react'\nimport type {BrowserHistory, MemoryHistory} from '@remix-run/router'\nimport {Router} from 'react-router-dom'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\ntype Props = {\n  children: React.ReactNode\n  history: BrowserHistory | MemoryHistory\n}\n\nexport function PartialRouter({children, history}: Props) {\n  const [state, setState] = useState({\n    location: history.location,\n  })\n\n  useHydratedEffect(() => history.listen(setState), [history])\n\n  return (\n    <Router location={state.location} navigator={history}>\n      {children}\n    </Router>\n  )\n}\n\ntry{ PartialRouter.displayName ||= 'PartialRouter' } catch {}","// Think of this as the entry point into the framework\nimport React from 'react'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {BaseProviders} from './BaseProviders'\nimport type {BrowserHistory} from '@remix-run/router'\nimport {createMemoryHistory} from '@remix-run/router'\nimport {AppContextProvider} from './AppContextProvider'\nimport {PartialRouter} from './PartialRouter'\nimport {CommonElements} from './CommonElements'\nimport {createBrowserHistory} from './create-browser-history'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {usePartialAnchorProps} from './react-partial-anchor'\n\ninterface Props {\n  partialName: string\n  embeddedData: EmbeddedPartialData\n  Component: React.ComponentType\n  wasServerRendered: boolean\n  ssrError?: HTMLScriptElement\n  anchorElement?: ReactPartialAnchorElement | null\n}\n\nexport function PartialEntry({\n  partialName,\n  embeddedData,\n  Component,\n  wasServerRendered,\n  ssrError,\n  anchorElement,\n}: Props) {\n  // Create a ref to track the browser history:\n  const historyRef = React.useRef<BrowserHistory>()\n  const window = globalThis.window as Window | undefined\n\n  // For linking to work, we can just pass a dummy pathname here. We may consider plumbing the actual path in\n  if (!historyRef.current) {\n    historyRef.current = !window\n      ? createMemoryHistory({initialEntries: [{pathname: '/'}]})\n      : createBrowserHistory({window})\n  }\n  const history = historyRef.current\n  const partialAnchorProps = usePartialAnchorProps(anchorElement)\n\n  // Wrap the partial in an AppContextProvider and static Router so that react-core links\n  // will be functional.\n  return (\n    <BaseProviders appName={partialName} wasServerRendered={wasServerRendered}>\n      <AppContextProvider history={history} routes={[]}>\n        <PartialRouter history={history}>\n          <Component {...embeddedData.props} {...(partialAnchorProps as object)} />\n          <CommonElements ssrError={ssrError} />\n        </PartialRouter>\n      </AppContextProvider>\n    </BaseProviders>\n  )\n}\n\ntry{ PartialEntry.displayName ||= 'PartialEntry' } catch {}","import {target} from '@github/catalyst'\nimport {createRoot, hydrateRoot} from 'react-dom/client'\nimport type {createRoot as createRootType, hydrateRoot as hydrateRootType, Root} from 'react-dom/client'\nimport React from 'react'\nimport ReactProfilingMode from '@github-ui/react-profiling-mode'\nimport {EXPECTED_ERRORS} from './expected-errors'\nimport {sendStats} from '@github-ui/stats'\n\ntype ReactDOM = {\n  createRoot: typeof createRootType\n  hydrateRoot: typeof hydrateRootType\n}\n\nconst REACT_INVARIANT_ERROR_REGEX = /Minified React error #(?<invariant>\\d+)/\n\nexport abstract class ReactBaseElement<T> extends HTMLElement {\n  @target embeddedData: HTMLScriptElement | undefined\n  @target ssrError: HTMLScriptElement | undefined\n  @target reactRoot: HTMLElement | undefined\n  private root: Root | undefined\n\n  abstract nameAttribute: string\n  abstract getReactNode(embeddedData: T): Promise<React.ReactNode>\n\n  protected get name() {\n    return this.getAttribute(this.nameAttribute) as string\n  }\n\n  private get embeddedDataText() {\n    const text = this.embeddedData?.textContent\n\n    if (!text) {\n      throw new Error(`No embedded data provided for react element ${this.name}`)\n    }\n\n    return text\n  }\n\n  get hasSSRContent() {\n    return this.getAttribute('data-ssr') === 'true'\n  }\n\n  connectedCallback() {\n    this.renderReact()\n  }\n\n  disconnectedCallback() {\n    this.root?.unmount()\n    this.root = undefined\n  }\n\n  private async renderReact() {\n    if (!this.reactRoot) throw new Error('No react root provided')\n    let reactDom: ReactDOM = {\n      createRoot,\n      hydrateRoot,\n    }\n\n    // Override the react-dom import if we're in profiling mode\n    if (ReactProfilingMode.isEnabled()) {\n      reactDom = await this.getReactDomWithProfiling()\n    }\n\n    const embeddedData = JSON.parse(this.embeddedDataText) as T\n    const ssrErrorText = this.ssrError?.textContent\n    const node = await this.getReactNode(embeddedData)\n    const baseNode = <React.StrictMode>{node}</React.StrictMode>\n\n    if (ssrErrorText) {\n      this.logSSRError(ssrErrorText)\n    }\n\n    if (this.hasSSRContent) {\n      /**\n       * Styled-components automatically looks for style tags to hydrate on first page load, but will not detect them\n       * if they are added after the initial page load. This causes a hydration error because React isn't expecting\n       * a style tag within the app. To work around this, we need to manually move the style tags to the head before\n       * hydrating the app.\n       *\n       * During hydration, styled-components will create a new style tag which matches the one we moved to the head.\n       * This means that after hydration, we can safely remove the style tag we manually moved to the head.\n       */\n      const styles = this.querySelector('style[data-styled=\"true\"]')\n      if (styles) document.head.appendChild(styles)\n\n      // Hydrate the react app\n      // onRecoverableError is disabled until we have a react version with this fix in:\n      // https://github.com/facebook/react/pull/25692\n      this.root = reactDom.hydrateRoot(this.reactRoot, baseNode, {\n        onRecoverableError: error => {\n          if (!(error instanceof Error)) return\n\n          const match = REACT_INVARIANT_ERROR_REGEX.exec(error.message)\n          const invariant = String(match?.groups?.invariant)\n\n          sendStats({\n            incrementKey: 'REACT_HYDRATION_ERROR',\n            incrementTags: {\n              appName: this.name,\n              invariant,\n            },\n          })\n        },\n      })\n\n      // Remove the manually moved style tag after hydration\n      if (styles) {\n        // Wait until things are idle to remove the style tag. If we do it immediately, we can cause a flash of unstyled content.\n        requestIdleCallback(() => {\n          // styles could have already been removed by Turbo if a navigation happens quickly. Only remove it from the DOM if it's still there.\n          styles.parentElement?.removeChild(styles)\n        })\n      }\n    } else {\n      this.root = reactDom.createRoot(this.reactRoot)\n      this.root.render(baseNode)\n    }\n\n    this.classList.add('loaded')\n  }\n\n  private getReactDomWithProfiling() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return import('react-dom/profiling') as any as Promise<ReactDOM>\n  }\n\n  private logSSRError(ssrErrorText: string) {\n    if (EXPECTED_ERRORS[ssrErrorText]) {\n      // eslint-disable-next-line no-console\n      return console.error('SSR failed with an expected error:', EXPECTED_ERRORS[ssrErrorText])\n    }\n\n    try {\n      const error = JSON.parse(ssrErrorText) as PlatformJavascriptError\n      const stacktrace = parseFailbotStacktrace(error)\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', `${error.type}: ${error.value}\\n`, error, stacktrace)\n    } catch {\n      /**\n       * In the event we couldn't log the error, we should not break the application\n       */\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', ssrErrorText, 'unable to parse as json')\n    }\n  }\n}\n\nfunction parseFailbotStacktrace(error: PlatformJavascriptError) {\n  if (!error.stacktrace) return ''\n  let prefix = '\\n '\n  const stack = error.stacktrace.map((frame: PlatformStackframe) => {\n    const {function: func, filename, lineno, colno} = frame\n    const line = `${prefix} at ${func} (${filename}:${lineno}:${colno})`\n    prefix = ' '\n    return line\n  })\n  return stack.join('\\n')\n}\n\ntry{ REACT_INVARIANT_ERROR_REGEX.displayName ||= 'REACT_INVARIANT_ERROR_REGEX' } catch {}"],"names":["queryLast","selector","list","document","querySelectorAll","length","requestUri","window","location","protocol","host","pagePathname","locationOverride","content","pathname","pageQuery","stripParams","search","extraParams","meta","names","split","replace","getColor","value","getPrefix","icon","ArrowDownIcon","ArrowUpIcon","Box","sx","mx","Delta","suffix","restProps","undefined","display","color","fontWeight","Math","abs","displayName","HeroStat","label","percentChange","total","alignItems","bg","boxShadow","justifyContent","p","width","div","Heading","as","fontSize","mb","Text","toLocaleString","ml","gridTemplateColumns","numColumns","fill","join","Chart","height","heroStats","loading","series","title","error","aria-live","aria-busy","h3","className","gap","my","map","heroStat","marginTop","position","Spinner","data-testid","margin","top","bottom","left","right","line-chart","JSON","stringify","StatKey","chartsConfig","fetchChartData","enterpriseSlug","period","server","statKey","URLSearchParams","toString","res","verifiedFetchJSON","ok","json","statusText","e","reportError","message","CHART_LOADING_STATE","data","useChartData","chartState","setChartState","useState","useEffect","handleFetch","useMemo","EnterpriseServerStats","selectedServer","timePeriod","chartOptions","issuesChart","Issues","pullsChart","Pulls","reposChart","Repos","usersChart","Users","orgsChart","Orgs","data-hpc","registerReactPartial","Component","RegisterLineChart","extensionErrors","errorsReported","loadTime","Date","now","EXPECTED_NETWORK_ERROR_MESSAGES","Set","isExpectedError","name","has","startsWith","context","isFeatureEnabled","Error","isIgnoredNonError","ignoredErrorMessages","some","includes","code","errorForStackTrace","serializedErrorValue","serializeNonError","report","errorContext","type","stacktrace","catalogService","formatError","unloaded","isSupported","url","head","querySelector","stack","frame","extensions","test","filename","function","fetch","method","body","Object","assign","sanitizedUrl","href","readyState","referrer","getSoftNavReferrer","timeSinceLoad","round","user","pageUser","login","clientId","getOrCreateClientId","bundler","ui","Boolean","parse","file","String","methodName","lineno","lineNumber","colno","column","ssrSafeWindow","addEventListener","BroadcastChannel","sharedWorkerErrorChannel","event","DeferredRegistry","register","registration","entry","registrationEntries","resolve","promise","Promise","getRegistration","Deferred","constructor","usePartialAnchorProps","anchorElement","anchor","disabled","classList","remove","reactPartialAnchor","__wrapperElement","useExternalAnchor","ref","useRef","open","setOpen","onClick","useCallback","current","setAttribute","useOnAnchorClick","element","removeEventListener","partialRegistry","ReactPartialElement","ReactBaseElement","getReactNode","embeddedData","appName","closest","PartialEntry","partialName","wasServerRendered","hasSSRContent","ssrError","nameAttribute","controller","getItem","setItem","removeItem","safeStorage","REACT_PROFILING_ENABLED","enable","disable","isEnabled","DEFAULT_SOFT_NAV_ERROR_REASON","SOFT_NAV_FAIL","SOFT_NAV_FAIL_REFERRER","SOFT_NAV_REFERRER","SOFT_NAV_MARK","SOFT_NAV_REACT_APP_NAME","SOFT_NAV_LATEST_MECHANISM","clearSoftNav","setSoftNavMechanism","mechanism","unsetSoftNav","inSoftNav","softNav","getSoftNavMechanism","hasSoftNavFailure","getSoftNavFailReason","setSoftNavFailReason","reason","setSoftNavReferrer","setSoftNavReactAppName","getCurrentReactAppName","getSoftNavReactAppName","getAttribute","setLatestMechanism","getLatestMechanism","verifiedFetch","path","init","assertRelativePathOrSameOrigin","URL","origin","headers","Accept","reactFetch","reactFetchJSON","PartialRouter","children","history","state","setState","useHydratedEffect","listen","Router","navigator","historyRef","React","globalThis","createBrowserHistory","createMemoryHistory","initialEntries","partialAnchorProps","BaseProviders","AppContextProvider","routes","props","CommonElements","REACT_INVARIANT_ERROR_REGEX","HTMLElement","embeddedDataText","text","textContent","connectedCallback","renderReact","disconnectedCallback","root","unmount","reactRoot","reactDom","createRoot","hydrateRoot","ReactProfilingMode","getReactDomWithProfiling","ssrErrorText","node","baseNode","logSSRError","styles","appendChild","onRecoverableError","match","exec","invariant","groups","sendStats","incrementKey","incrementTags","requestIdleCallback","parentElement","removeChild","render","add","EXPECTED_ERRORS","console","parseFailbotStacktrace","prefix","func","line","target"],"sourceRoot":""}