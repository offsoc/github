# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Proto::SecretScanning::Api::V2::SecretScanCustomPattern`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Proto::SecretScanning::Api::V2::SecretScanCustomPattern`.

class GitHub::Proto::SecretScanning::Api::V2::SecretScanCustomPattern
  sig do
    params(
      business_scope: T.nilable(GitHub::Proto::SecretScanning::Api::V2::CustomPatternBusinessScope),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      created_by_id: T.nilable(Integer),
      display_name: T.nilable(String),
      dry_run_repositories: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer])),
      expression: T.nilable(String),
      id: T.nilable(Integer),
      org_scope: T.nilable(GitHub::Proto::SecretScanning::Api::V2::CustomPatternOrgScope),
      post_processing: T.nilable(GitHub::Proto::SecretScanning::Api::V2::PostProcessing),
      push_protection_enabled: T.nilable(T::Boolean),
      repo_scope: T.nilable(GitHub::Proto::SecretScanning::Api::V2::CustomPatternRepoScope),
      row_version: T.nilable(String),
      secret_type: T.nilable(String),
      slug: T.nilable(String),
      state: T.nilable(T.any(Symbol, Integer)),
      updated_at: T.nilable(Google::Protobuf::Timestamp),
      updated_by_id: T.nilable(Integer)
    ).void
  end
  def initialize(business_scope: nil, created_at: nil, created_by_id: nil, display_name: nil, dry_run_repositories: T.unsafe(nil), expression: nil, id: nil, org_scope: nil, post_processing: nil, push_protection_enabled: nil, repo_scope: nil, row_version: nil, secret_type: nil, slug: nil, state: nil, updated_at: nil, updated_by_id: nil); end

  sig { returns(T.nilable(GitHub::Proto::SecretScanning::Api::V2::CustomPatternBusinessScope)) }
  def business_scope; end

  sig { params(value: T.nilable(GitHub::Proto::SecretScanning::Api::V2::CustomPatternBusinessScope)).void }
  def business_scope=(value); end

  sig { void }
  def clear_business_scope; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_created_by_id; end

  sig { void }
  def clear_display_name; end

  sig { void }
  def clear_dry_run_repositories; end

  sig { void }
  def clear_expression; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_org_scope; end

  sig { void }
  def clear_post_processing; end

  sig { void }
  def clear_push_protection_enabled; end

  sig { void }
  def clear_repo_scope; end

  sig { void }
  def clear_row_version; end

  sig { void }
  def clear_secret_type; end

  sig { void }
  def clear_slug; end

  sig { void }
  def clear_state; end

  sig { void }
  def clear_updated_at; end

  sig { void }
  def clear_updated_by_id; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(Integer) }
  def created_by_id; end

  sig { params(value: Integer).void }
  def created_by_id=(value); end

  sig { returns(String) }
  def display_name; end

  sig { params(value: String).void }
  def display_name=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def dry_run_repositories; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def dry_run_repositories=(value); end

  sig { returns(String) }
  def expression; end

  sig { params(value: String).void }
  def expression=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(T.nilable(GitHub::Proto::SecretScanning::Api::V2::CustomPatternOrgScope)) }
  def org_scope; end

  sig { params(value: T.nilable(GitHub::Proto::SecretScanning::Api::V2::CustomPatternOrgScope)).void }
  def org_scope=(value); end

  sig { returns(T.nilable(GitHub::Proto::SecretScanning::Api::V2::PostProcessing)) }
  def post_processing; end

  sig { params(value: T.nilable(GitHub::Proto::SecretScanning::Api::V2::PostProcessing)).void }
  def post_processing=(value); end

  sig { returns(T::Boolean) }
  def push_protection_enabled; end

  sig { params(value: T::Boolean).void }
  def push_protection_enabled=(value); end

  sig { returns(T.nilable(GitHub::Proto::SecretScanning::Api::V2::CustomPatternRepoScope)) }
  def repo_scope; end

  sig { params(value: T.nilable(GitHub::Proto::SecretScanning::Api::V2::CustomPatternRepoScope)).void }
  def repo_scope=(value); end

  sig { returns(String) }
  def row_version; end

  sig { params(value: String).void }
  def row_version=(value); end

  sig { returns(T.nilable(Symbol)) }
  def scope; end

  sig { returns(String) }
  def secret_type; end

  sig { params(value: String).void }
  def secret_type=(value); end

  sig { returns(String) }
  def slug; end

  sig { params(value: String).void }
  def slug=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def state; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def state=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end

  sig { returns(Integer) }
  def updated_by_id; end

  sig { params(value: Integer).void }
  def updated_by_id=(value); end
end
