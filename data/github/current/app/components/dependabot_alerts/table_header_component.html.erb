<%# erblint:counter DeprecatedComponentsCounter 1 %>
<dependabot-alert-table-header class="<% unless show_bulk_edit %>table-list-filters<%end%> d-flex flex-items-center" style="min-height:64px">
  <% if show_bulk_edit %>
    <div class="ml-3 d-flex flex-items-center" <%= test_selector("dependabot-alert-bulk-edit-container") %> >
      <input type="checkbox" data-check-all aria-label="Select all alerts" autocomplete="off" class="mr-3 mr-md-2">

      <span class="color-fg-muted" data-target="dependabot-alert-table-header.alertsSelectedCountText" hidden>
        <span data-check-all-count>0</span> selected
      </span>
    </div>

    <% if closed_selected? %>
      <div class="flex-auto d-flex flex-justify-end" data-target="dependabot-alert-table-header.alertsBulkActionContainer" hidden>
        <%= form_tag reopen_many_repository_alert_path, method: :put do %>
          <%= render Primer::ButtonComponent.new(type: :submit, scheme: :link, classes: "Link--muted", mr: 3) do %>Reopen<% end %>
          <div data-targets="dependabot-alert-table-header.bulkActionItemsContainers" hidden></div>
        <% end %>
      </div>
    <% else %>
      <%= render DependabotAlerts::AlertDismissalComponent.new(
        id: "regular",
        dismissal_path: dismiss_all_path,
        pluralize: true,
        ml: 3,
        hidden: true,
        bulk_items_system_arguments: {
          data: {
            "targets": "dependabot-alert-table-header.bulkActionItemsContainers",
          }
        },
        summary_system_arguments: {
          variant: :small,
          "aria-haspopup": "true",
        },
        data: { "target": "dependabot-alert-table-header.alertsBulkActionContainer" }
      ) do |c| %>
        <% c.with_summary do %>
          Dismiss alerts
          <div class="dropdown-caret"></div>
        <% end %>
      <% end %>
    <% end %>
  <% end %>

  <div class="flex-auto d-flex min-width-0 flex-items-center" data-target="dependabot-alert-table-header.filterContainer">
    <div class="no-wrap d-none d-xl-block table-list-header-toggle" aria-live="polite" aria-atomic="true">
      <%= render SecurityCenter::StatesComponent.new(
        open_state_href: dependabot_alerts_path(q: "is:open"),
        open_state_count: open_count,
        open_state_selected: open_selected? && !closed_selected?,
        closed_state_href: dependabot_alerts_path(q: "is:closed"),
        closed_state_count: closed_count,
        closed_state_selected: closed_selected? && !open_selected?
      ) %>
    </div>

    <div class="d-flex no-wrap flex-wrap flex-auto flex-sm-justify-start flex-xl-justify-end mr-3 py-3 table-list-header-toggle">
      <% unless open_selected? %>
        <%= filter_dropdown(
          id: "alerts-resolution-filter",
          src: closed_as_filter_path(q: params[:q]),
          button_content: "Closed as",
          menu_aria_label: "Filter by resolution",
          align_right: false,
          test_selector: "dependabot-alert-list-resolution-filter"
        )%>
      <% end %>

      <% if show_organization_filter? %>
        <%= filter_dropdown(
          id: "alerts-org-filter",
          src: organization_filter_path(q: params[:q]),
          button_content: "Organization",
          menu_aria_label: "Filter by organization",
          align_right: false,
          test_selector: "dependabot-alert-list-organization-filter",
        )%>
      <% end %>

      <% if show_repository_filter? %>
        <%= filter_dropdown(
          id: "alerts-repo-filter",
          src: repository_filter_path(q: params[:q]),
          button_content: "Repository",
          menu_aria_label: "Filter by repository",
          align_right: false,
          test_selector: "dependabot-alert-list-repository-filter",
        )%>
      <% end %>

      <%= filter_dropdown(
        id: "alerts-package-filter",
        src: package_filter_path(q: params[:q]),
        button_content: "Package",
        menu_aria_label: "Filter by packages",
        align_right: false,
        test_selector: "dependabot-alert-list-package-filter",
      )%>

      <%= filter_dropdown(
        id: "alerts-ecosystem-filter",
        src: ecosytem_filter_path(q: params[:q]),
        button_content: "Ecosystem",
        menu_aria_label: "Filter by ecosystem",
        align_right: false,
        test_selector: "dependabot-alert-list-ecosystem-filter",
      )%>

      <% if show_manifest_filter? %>
        <%= filter_dropdown(
          id: "alerts-manifest-filter",
          src: manifest_filter_path(q: params[:q]),
          button_content: "Manifest",
          menu_aria_label: "Filter by manifest",
          test_selector: "dependabot-alert-list-manifest-filter"
        )%>
      <% end %>

      <%= render Primer::Alpha::ActionMenu.new(
        menu_id: "dependabot-alert-list-severity-filter",
        anchor_align: :end,
        select_variant: :multiple,
        src: severity_filter_path(q: params[:q]),
        preload: true,
        test_selector: "dependabot-alert-list-severity-filter",
      ) do |menu| %>
        <% menu.with_show_button(
          size: :medium,
          font_weight: :normal,
          color: :muted,
          scheme: :invisible,
          aria: {
            label: "Filter by severity"
          }
        ) do |b| %>
          <% b.with_trailing_action_icon(icon: "triangle-down") %>
          <% "Severity" %>
        <% end %>
      <% end %>

      <% if show_sort_filter? %>
        <%= render Primer::Alpha::ActionMenu.new(
          menu_id: "dependabot-alert-list-sort-filter",
          anchor_align: :end,
          select_variant: :single,
          test_selector: "dependabot-alert-list-sort-filter",
        ) do |menu|%>
          <% menu.with_show_button(
            size: :medium,
            font_weight: :normal,
            color: :muted,
            scheme: :invisible,
            aria: {
              label: "Sort by"
            }
          ) do |b| %>
            <% b.with_trailing_action_icon(icon: "triangle-down") %>
            <% "Sort" %>
          <% end %>

          <% each_sort_option do |label, slug, selected| %>
            <% url = dependabot_alerts_path(q: "sort:#{slug}") %>
            <% menu.with_item(label: label, href: url, active: selected) %>
          <% end %>
        <% end%>
      <% end %>
    </div>
  </div>
</dependabot-alert-table-header>
