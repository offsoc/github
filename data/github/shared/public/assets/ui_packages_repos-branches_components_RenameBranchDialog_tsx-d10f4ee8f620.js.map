{"version":3,"file":"chunk-ui_packages_repos-branches_components_RenameBranchDialog_tsx-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@primer/react/lib-esm/Details/Details.js","node_modules/@primer/react/lib-esm/hooks/useDetails.js","ui/packages/repos-branches/components/RenameBranchDialog.tsx","ui/packages/repos-branches/hooks/use-rename-branch-effects.ts","ui/packages/repos-branches/hooks/use-rename-ref-check.ts"],"sourcesContent":["import styled from 'styled-components';\nimport sx from '../sx.js';\n\nconst Details = styled.details.withConfig({\n  displayName: \"Details\",\n  componentId: \"sc-1jjccgx-0\"\n})([\"& > summary{list-style:none;}& > summary::-webkit-details-marker{display:none;}\", \";\"], sx);\nDetails.displayName = 'Details';\n\nexport { Details as default };\n","import { useState, useRef, useCallback, useEffect } from 'react';\n\nfunction useDetails({\n  ref,\n  closeOnOutsideClick,\n  defaultOpen,\n  onClickOutside\n}) {\n  const [open, setOpen] = useState(defaultOpen);\n  const backupRef = useRef(null);\n  const customRef = ref !== null && ref !== void 0 ? ref : backupRef;\n  const onClickOutsideInternal = useCallback(event => {\n    const {\n      current\n    } = customRef;\n    const eventTarget = event.target;\n    const closest = eventTarget.closest('details');\n    if (closest !== current) {\n      onClickOutside && onClickOutside(event);\n      if (!event.defaultPrevented) {\n        setOpen(false);\n      }\n    }\n  }, [customRef, setOpen, onClickOutside]);\n\n  // handles the overlay behavior - closing the menu when clicking outside of it\n  useEffect(() => {\n    if (open && closeOnOutsideClick) {\n      document.addEventListener('click', onClickOutsideInternal);\n      return () => {\n        document.removeEventListener('click', onClickOutsideInternal);\n      };\n    }\n  }, [open, closeOnOutsideClick, onClickOutsideInternal]);\n  const handleToggle = e => {\n    if (!e.defaultPrevented) {\n      const eventTarget = e.target;\n      setOpen(eventTarget.open);\n    }\n  };\n  const getDetailsProps = () => {\n    return {\n      onToggle: handleToggle,\n      open,\n      ref: customRef\n    };\n  };\n  return {\n    open,\n    setOpen,\n    getDetailsProps\n  };\n}\n\nexport { useDetails as default };\n","import {Dialog} from '@primer/react/experimental'\nimport {renameRefPath} from '@github-ui/paths'\nimport {\n  Box,\n  BranchName,\n  Details,\n  Flash,\n  FormControl,\n  Link,\n  Octicon,\n  Spinner,\n  Text,\n  TextInput,\n  useDetails,\n} from '@primer/react'\nimport {useEffect, useState} from 'react'\nimport {useLocation} from 'react-router-dom'\nimport {useNavigate} from '@github-ui/use-navigate'\nimport type {Branch} from '../types'\nimport {AlertIcon, CheckIcon, InfoIcon, TriangleDownIcon, TriangleUpIcon, XIcon} from '@primer/octicons-react'\nimport {CopyToClipboardButton} from '@github-ui/copy-to-clipboard'\nimport type {Repository} from '@github-ui/current-repository'\nimport {type CheckResult, useRenameRefCheck} from '../hooks/use-rename-ref-check'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\n// eslint-disable-next-line no-restricted-imports\nimport {useToastContext} from '@github-ui/toast/ToastContext'\nimport useRenameBranchEffects from '../hooks/use-rename-branch-effects'\nimport {LoadingSkeleton} from '@github-ui/skeleton/LoadingSkeleton'\n\ninterface RenameBranchDialogProps {\n  repo: Repository\n  branch: Pick<Branch, 'name' | 'isDefault' | 'rulesetsPath' | 'path'>\n  onDismiss(): void\n}\n\nexport function RenameBranchDialog({repo, branch, onDismiss}: RenameBranchDialogProps): JSX.Element {\n  const renameBranchEffects = useRenameBranchEffects({repo, branchName: branch.name})\n  const [anyAutomaticChange, setAnyAutomaticChanges] = useState(false)\n  const [isRenaming, setRenaming] = useState(false)\n  const [isBlank, setIsBlank] = useState(false)\n  const [validate, setValidate] = useState(false)\n  const [renameErrors, setRenameErrors] = useState<string | null>(null)\n  const [newBranchName, setNewBranchName] = useState(branch.name)\n  const [normalizedName, setNormalizedName] = useState(branch.name)\n  const {getDetailsProps: getUpdateLocalEnvDetailsProps, open: openUpdateLocalEnvLearnMore} = useDetails({\n    closeOnOutsideClick: false,\n  })\n  const {getDetailsProps: getPagesDetailsProps, open: openPagesLearnMore} = useDetails({closeOnOutsideClick: false})\n  const navigate = useNavigate()\n  const {pathname} = useLocation()\n  const {addToast} = useToastContext()\n\n  const [result, runCheck] = useRenameRefCheck({repo, currentRefName: branch.name})\n  const content = `\n  git branch -m ${branch.name} ${normalizedName}\n  git fetch origin\n  git branch -u origin/${normalizedName} ${normalizedName}\n  git remote set-head origin -a\n  `\n\n  function resetData() {\n    setNewBranchName('')\n    setRenameErrors(null)\n    setIsBlank(false)\n    setValidate(false)\n    onDismiss()\n  }\n\n  function handleChange(name: string) {\n    setValidate(true)\n    !name.trim() ? setIsBlank(true) : setIsBlank(false)\n    setNewBranchName(name)\n  }\n\n  async function renameBranch() {\n    if (!isBlank && !isRenaming) {\n      setRenaming(true)\n      const body = {\n        new_name: newBranchName,\n      }\n\n      const response = await verifiedFetchJSON(\n        renameRefPath({owner: repo.ownerLogin, repo: repo.name, refName: branch.name}),\n        {\n          method: 'put',\n          body,\n        },\n      )\n      const json = await response.json()\n\n      if (response.ok) {\n        resetData()\n        // eslint-disable-next-line @github-ui/dotcom-primer/toast-migration\n        addToast({\n          type: 'success',\n          message: json.message,\n        })\n        navigate(pathname)\n      } else {\n        const errorMessage: string = json.error\n        if (errorMessage) {\n          setRenameErrors(errorMessage)\n        }\n      }\n      setRenaming(false)\n    }\n  }\n\n  // Validate branch name\n  useEffect(() => {\n    if (validate) {\n      runCheck(newBranchName)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- Only re-check when branch name changes and validation is true\n  }, [validate, newBranchName])\n\n  // Set validation message\n  useEffect(() => {\n    if (!validate) {\n      return\n    }\n    if (isBlank) {\n      setNormalizedName(branch.name)\n      return\n    }\n    if (result.message && result.normalizedName) {\n      setNormalizedName(result.normalizedName)\n    }\n  }, [isBlank, branch.name, result.message, result.normalizedName, validate])\n\n  // Set rename effects\n  useEffect(() => {\n    if (renameBranchEffects) {\n      const {prRetargetCount, prClosureCount, draftReleaseCount, protectedBranchCount, willPagesChange} =\n        renameBranchEffects\n      setAnyAutomaticChanges(\n        prRetargetCount > 0 ||\n          prClosureCount > 0 ||\n          draftReleaseCount > 0 ||\n          protectedBranchCount > 0 ||\n          !!willPagesChange,\n      )\n    }\n  }, [renameBranchEffects])\n\n  return (\n    <Dialog\n      title={`Rename ${branch.isDefault ? 'default ' : ''}branch`}\n      width=\"large\"\n      onClose={resetData}\n      footerButtons={[\n        {\n          content: 'Cancel',\n          buttonType: 'normal',\n          onClick: resetData,\n        },\n        {content: 'Rename branch', buttonType: 'primary', onClick: renameBranch},\n      ]}\n    >\n      <Box sx={{overflow: 'hidden'}}>\n        {renameErrors ? (\n          <Flash variant=\"danger\" sx={{mb: 3}}>\n            <span>{renameErrors}</span>\n          </Flash>\n        ) : null}\n        <FormControl sx={{mb: 3}}>\n          <FormControl.Label>\n            Rename <BranchName href={branch.path}>{branch.name}</BranchName> to:\n          </FormControl.Label>\n          <TextInput\n            block\n            aria-label=\"New branch name\"\n            className=\"color-bg-subtle\"\n            value={newBranchName}\n            placeholder={branch.name}\n            onChange={e => handleChange(e.target.value)}\n          />\n          {branch.isDefault && (\n            <FormControl.Caption>\n              Most projects name the default branch <Text sx={{fontWeight: 'bold'}}>main</Text>\n            </FormControl.Caption>\n          )}\n          <BranchRenameValidation validate={validate} isBlank={isBlank} result={result} />\n        </FormControl>\n        {!renameBranchEffects ? (\n          <>\n            <LoadingSkeleton sx={{width: '30%', mb: 2}} variant=\"rounded\" height=\"md\" />\n            <LoadingSkeleton sx={{width: '60%', mb: 2}} variant=\"rounded\" height=\"md\" />\n            <LoadingSkeleton sx={{width: '80%', mb: 2}} variant=\"rounded\" height=\"md\" />\n            <LoadingSkeleton sx={{width: '70%', mb: 2}} variant=\"rounded\" height=\"md\" />\n          </>\n        ) : (\n          <>\n            {anyAutomaticChange ? (\n              <div>\n                <Box sx={{mb: 2}}>\n                  <span>Renaming this branch:</span>\n                </Box>\n                <ul style={{display: 'flex', flexDirection: 'column', margin: 0, listStyle: 'none', gap: 2}}>\n                  {renameBranchEffects.prRetargetCount > 0 && (\n                    <li style={{display: 'flex', alignItems: 'flex-start', gap: 3}} data-testid=\"update-pr\">\n                      <div>\n                        <Octicon icon={CheckIcon} sx={{color: 'success.fg'}} />\n                      </div>\n                      <div>\n                        Will update <Text sx={{fontWeight: 'bold'}}>{renameBranchEffects.prRetargetCount}</Text> pull{' '}\n                        {pluralize({word: 'request', count: renameBranchEffects.prRetargetCount})} targeting this{' '}\n                        {renameBranchEffects.prRetargetRepoCount > 1 ? (\n                          <span>\n                            branch across{' '}\n                            <Text sx={{fontWeight: 'bold'}}>{renameBranchEffects.prRetargetRepoCount}</Text>{' '}\n                            repositories.\n                          </span>\n                        ) : (\n                          <span>branch.</span>\n                        )}\n                      </div>\n                    </li>\n                  )}\n                  {renameBranchEffects.prClosureCount > 0 && (\n                    <li style={{display: 'flex', alignItems: 'flex-start', gap: 3}} data-testid=\"close-pr\">\n                      <div>\n                        <Octicon icon={CheckIcon} sx={{color: 'success.fg'}} />\n                      </div>\n                      <div>\n                        Will close <Text sx={{fontWeight: 'bold'}}>{renameBranchEffects.prClosureCount}</Text> open pull{' '}\n                        {pluralize({word: 'request', count: renameBranchEffects.prClosureCount})} for this branch.\n                      </div>\n                    </li>\n                  )}\n                  {renameBranchEffects.draftReleaseCount > 0 && (\n                    <li style={{display: 'flex', alignItems: 'flex-start', gap: 3}} data-testid=\"rename-draft\">\n                      <div>\n                        <Octicon icon={CheckIcon} sx={{color: 'success.fg'}} />\n                      </div>\n                      <div>\n                        Will update<Text sx={{fontWeight: 'bold'}}> {renameBranchEffects.draftReleaseCount} </Text>\n                        draft{' '}\n                        {pluralize({\n                          word: 'release',\n                          count: renameBranchEffects.draftReleaseCount,\n                        })}{' '}\n                        targeting this branch.\n                      </div>\n                    </li>\n                  )}\n                  {renameBranchEffects.protectedBranchCount > 0 && (\n                    <li style={{display: 'flex', alignItems: 'flex-start', gap: 3}} data-testid=\"update-pb\">\n                      <div>\n                        <Octicon icon={CheckIcon} sx={{color: 'success.fg'}} />\n                      </div>\n                      <div>\n                        Will update <Text sx={{fontWeight: 'bold'}}>{renameBranchEffects.protectedBranchCount}</Text>{' '}\n                        branch {pluralize({word: 'protection', count: renameBranchEffects.protectedBranchCount})} that{' '}\n                        explicitly{' '}\n                        {pluralize({word: 'target', count: renameBranchEffects.protectedBranchCount, verb: true})}{' '}\n                        <BranchName href={branch.path}>{branch.name}</BranchName>.\n                      </div>\n                    </li>\n                  )}\n                  {!!renameBranchEffects.willPagesChange && (\n                    <li\n                      style={{display: 'flex', alignItems: 'flex-start', gap: 3, minWidth: 0}}\n                      data-testid=\"update-page\"\n                    >\n                      <div>\n                        <Octicon icon={AlertIcon} sx={{color: 'danger.fg'}} />\n                      </div>\n                      <Box sx={{minWidth: 0}}>\n                        <span>Will unpublish current GitHub Pages site.</span>\n                        <Details {...getPagesDetailsProps()}>\n                          {/* eslint-disable-next-line github/a11y-no-title-attribute */}\n                          <summary\n                            title={`${openPagesLearnMore ? 'Hide' : 'Show'} details on unpublishing GitHub Pages site`}\n                          >\n                            <Link sx={{display: 'flex', alignItems: 'center'}}>\n                              Learn more\n                              <Octicon icon={openPagesLearnMore ? TriangleUpIcon : TriangleDownIcon} />\n                            </Link>\n                          </summary>\n                          {openPagesLearnMore && (\n                            <Flash variant=\"default\" sx={{mt: 2}}>\n                              <Box sx={{display: 'flex'}}>\n                                <Octicon icon={InfoIcon} sx={{mt: 1}} />\n                                <Text sx={{fontSize: 0}}>\n                                  Your current GitHub Pages site will become unpublished. A new commit on the renamed{' '}\n                                  branch will publish the GitHub Pages site again.\n                                </Text>\n                              </Box>\n                            </Flash>\n                          )}\n                        </Details>\n                      </Box>\n                    </li>\n                  )}\n                  <li\n                    style={{display: 'flex', alignItems: 'flex-start', gap: 3, minWidth: 0}}\n                    data-testid=\"copy-details\"\n                  >\n                    <div>\n                      <Octicon icon={XIcon} sx={{color: 'danger.fg'}} />\n                    </div>\n                    <Box sx={{minWidth: 0}}>\n                      <Text sx={{verticalAlign: 'top'}}>Will not update your members&apos; local environments.</Text>\n                      <UpdateLocalEnvDetails\n                        getUpdateLocalEnvDetailsProps={getUpdateLocalEnvDetailsProps}\n                        openUpdateLocalEnvLearnMore={openUpdateLocalEnvLearnMore}\n                        content={content}\n                      />\n                    </Box>\n                  </li>\n                </ul>\n              </div>\n            ) : (\n              <>\n                <span>Renaming this branch will not update your members&apos; local environments.</span>\n                <UpdateLocalEnvDetails\n                  getUpdateLocalEnvDetailsProps={getUpdateLocalEnvDetailsProps}\n                  openUpdateLocalEnvLearnMore={openUpdateLocalEnvLearnMore}\n                  content={content}\n                />\n              </>\n            )}\n          </>\n        )}\n      </Box>\n    </Dialog>\n  )\n}\n\nfunction BranchRenameValidation({\n  validate,\n  isBlank,\n  result,\n}: {\n  validate: boolean\n  isBlank: boolean\n  result: CheckResult\n}): JSX.Element | null {\n  if (!validate) {\n    return null\n  }\n  if (isBlank) {\n    return <FormControl.Validation variant=\"error\">Name cannot be blank</FormControl.Validation>\n  }\n  if (!result.status) {\n    return (\n      <Box sx={{display: 'flex', alignItems: 'center', fontSize: 0}}>\n        <Spinner size=\"small\" aria-label=\"Checking if ref name is valid\" sx={{mr: 1}} />\n        <Text sx={{color: 'fg.subtle'}}>Checking if branch name is valid</Text>\n      </Box>\n    )\n  }\n\n  if (result.message) {\n    return (\n      <FormControl.Validation variant={result.status === 'valid' ? 'success' : 'error'}>\n        {result.message}\n      </FormControl.Validation>\n    )\n  }\n  return null\n}\n\nfunction pluralize({word, count, verb = false}: {word: string; count: number; verb?: boolean}) {\n  if (verb) {\n    // Add 's' when only 1\n    return `${word}${count === 1 ? 's' : ''}`\n  }\n  return `${word}${count === 1 ? '' : 's'}`\n}\n\nfunction UpdateLocalEnvDetails({\n  getUpdateLocalEnvDetailsProps,\n  openUpdateLocalEnvLearnMore,\n  content,\n}: {\n  getUpdateLocalEnvDetailsProps: () => {\n    onToggle: (e: React.SyntheticEvent<HTMLElement, Event>) => void\n    open: boolean | undefined\n    ref: React.RefObject<HTMLDetailsElement>\n  }\n  openUpdateLocalEnvLearnMore: boolean | undefined\n  content: string\n}): JSX.Element {\n  return (\n    <Details {...getUpdateLocalEnvDetailsProps()}>\n      {/* eslint-disable-next-line github/a11y-no-title-attribute */}\n      <summary title={`${openUpdateLocalEnvLearnMore ? 'Hide' : 'Show'} details on updating local environment`}>\n        <Link sx={{display: 'flex', alignItems: 'center'}}>\n          Learn more\n          <Octicon icon={openUpdateLocalEnvLearnMore ? TriangleUpIcon : TriangleDownIcon} />\n        </Link>\n      </summary>\n      {openUpdateLocalEnvLearnMore && (\n        <Flash variant=\"default\" sx={{mt: 2}}>\n          <Box sx={{display: 'flex'}}>\n            <Octicon icon={InfoIcon} sx={{mt: 1}} />\n            <Box sx={{overflowX: 'hidden'}}>\n              <Text sx={{fontSize: 0}}>\n                Your members will have to manually update their local environments. We&apos;ll let them know when they\n                visit the repository, or you can share the following commands.\n              </Text>\n              <Box\n                sx={{\n                  backgroundColor: 'canvas.subtle',\n                  marginTop: 3,\n                  position: 'relative',\n                  padding: 2,\n                  borderRadius: 2,\n                }}\n              >\n                <Box sx={{overflowX: 'auto'}} tabIndex={0}>\n                  <Text as=\"pre\" sx={{fontFamily: 'mono', fontSize: 0}}>\n                    {content}\n                  </Text>\n                </Box>\n                <Box sx={{position: 'absolute', top: 1, right: 1}}>\n                  <CopyToClipboardButton\n                    sx={{\n                      '.octicon-copy': {m: 0, color: 'fg.subtle'},\n                      '.octicon-check': {m: 0, color: 'success.fg'},\n                    }}\n                    textToCopy={content}\n                    ariaLabel={'Copy to clipboard'}\n                    tooltipProps={{direction: 'w'}}\n                  />\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n        </Flash>\n      )}\n    </Details>\n  )\n}\n\nexport default RenameBranchDialog\n\ntry{ RenameBranchDialog.displayName ||= 'RenameBranchDialog' } catch {}\ntry{ BranchRenameValidation.displayName ||= 'BranchRenameValidation' } catch {}\ntry{ UpdateLocalEnvDetails.displayName ||= 'UpdateLocalEnvDetails' } catch {}","import {renameBranchEffectsPath} from '@github-ui/paths'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {useEffect, useState} from 'react'\nimport type {Repository} from '@github-ui/current-repository'\nimport type {RenameBranchEffects} from '../types'\n\nexport default function useRenameBranchEffects({\n  repo,\n  branchName,\n}: {\n  repo: Repository\n  branchName: string\n}): RenameBranchEffects | undefined {\n  const [renameEffects, setRenameEffects] = useState<RenameBranchEffects | undefined>(undefined)\n\n  useEffect(() => {\n    const effectsUrl = renameBranchEffectsPath({owner: repo.ownerLogin, repo: repo.name, branchName})\n    const emptyEffects: RenameBranchEffects = {\n      prRetargetCount: 0,\n      prRetargetRepoCount: 0,\n      prClosureCount: 0,\n      draftReleaseCount: 0,\n      protectedBranchCount: 0,\n      willPagesChange: false,\n    }\n    async function fetchEffects() {\n      setRenameEffects(undefined)\n      try {\n        const response = await verifiedFetchJSON(effectsUrl, {method: 'GET'})\n        if (response.ok) {\n          const data = await response.json()\n          if (data) {\n            setRenameEffects(data)\n          } else {\n            setRenameEffects(emptyEffects)\n          }\n        } else {\n          setRenameEffects(emptyEffects)\n        }\n      } catch {\n        setRenameEffects(emptyEffects)\n      }\n    }\n    fetchEffects()\n  }, [branchName, repo.ownerLogin, repo.name])\n\n  return renameEffects\n}\n","import {debounce} from '@github/mini-throttle'\nimport {refNameCheckPath} from '@github-ui/paths'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {useCallback, useState} from 'react'\nimport type {Repository} from '@github-ui/current-repository'\n\nexport interface CheckResult {\n  status: 'invalid' | 'valid' | 'unknown' | null\n  normalizedName?: string\n  message?: string\n}\n\ninterface useRenameRefCheckProps {\n  repo: Repository\n  currentRefName: string\n}\n\ntype ReturnType = [CheckResult, (newRefName: string) => void]\n\n// A hook to check the validity of a ref name when it changes\nexport function useRenameRefCheck({repo, currentRefName}: useRenameRefCheckProps): ReturnType {\n  const [result, setResult] = useState<CheckResult>({status: null})\n\n  async function fetchCheck(newRefName: string) {\n    const data = {value: newRefName}\n\n    try {\n      const response = await verifiedFetchJSON(\n        refNameCheckPath({owner: repo.ownerLogin, repo: repo.name, refName: currentRefName}),\n        {\n          method: 'POST',\n          body: data,\n        },\n      )\n      const {message, normalized_name: normalizedName} = await response.json()\n      if (response.ok) {\n        setResult({\n          status: 'valid',\n          message,\n          normalizedName,\n        })\n      } else {\n        setResult({\n          status: 'invalid',\n          message,\n        })\n      }\n    } catch (err) {\n      setResult({status: 'invalid'})\n    }\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps -- this lint rule wants an inline function, but debounce seems more natural\n  const debouncedFetchCheck = useCallback(debounce(fetchCheck, 300), [])\n\n  const runnerCheck = useCallback(\n    (newRefName: string) => {\n      if (newRefName) {\n        setResult({status: null})\n        debouncedFetchCheck(newRefName)\n      } else {\n        setResult({status: 'unknown'})\n      }\n    },\n    [debouncedFetchCheck],\n  )\n\n  return [result, runnerCheck]\n}\n"],"names":["Details","details","withConfig","displayName","componentId","useDetails","ref","closeOnOutsideClick","defaultOpen","onClickOutside","open","setOpen","useState","backupRef","useRef","customRef","onClickOutsideInternal","useCallback","event","current","eventTarget","target","closest","defaultPrevented","useEffect","document","addEventListener","removeEventListener","handleToggle","e","getDetailsProps","onToggle","RenameBranchDialog","repo","branch","onDismiss","renameBranchEffects","useRenameBranchEffects","branchName","renameEffects","setRenameEffects","undefined","effectsUrl","renameBranchEffectsPath","owner","ownerLogin","name","emptyEffects","prRetargetCount","prRetargetRepoCount","prClosureCount","draftReleaseCount","protectedBranchCount","willPagesChange","fetchEffects","response","verifiedFetchJSON","method","ok","data","json","anyAutomaticChange","setAnyAutomaticChanges","isRenaming","setRenaming","isBlank","setIsBlank","validate","setValidate","renameErrors","setRenameErrors","newBranchName","setNewBranchName","normalizedName","setNormalizedName","getUpdateLocalEnvDetailsProps","openUpdateLocalEnvLearnMore","getPagesDetailsProps","openPagesLearnMore","navigate","useNavigate","pathname","useLocation","addToast","useToastContext","result","runCheck","useRenameRefCheck","currentRefName","setResult","status","fetchCheck","newRefName","refNameCheckPath","refName","body","value","message","normalized_name","err","debouncedFetchCheck","debounce","content","resetData","renameBranch","renameRefPath","new_name","type","errorMessage","error","Dialog","title","isDefault","width","onClose","footerButtons","buttonType","onClick","Box","sx","overflow","Flash","variant","mb","span","FormControl","Label","BranchName","href","path","TextInput","block","aria-label","className","placeholder","onChange","trim","Caption","Text","fontWeight","BranchRenameValidation","div","ul","style","display","flexDirection","margin","listStyle","gap","li","alignItems","data-testid","Octicon","icon","CheckIcon","color","pluralize","word","count","verb","minWidth","AlertIcon","summary","Link","TriangleUpIcon","TriangleDownIcon","mt","InfoIcon","fontSize","XIcon","verticalAlign","UpdateLocalEnvDetails","LoadingSkeleton","height","Validation","Spinner","size","mr","overflowX","backgroundColor","marginTop","position","padding","borderRadius","tabIndex","as","fontFamily","top","right","CopyToClipboardButton","m","textToCopy","ariaLabel","tooltipProps","direction"],"sourceRoot":""}