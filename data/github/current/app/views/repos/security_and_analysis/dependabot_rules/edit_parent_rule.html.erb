<% page_info \
  container_xl: true,
  selected_link: :security_analysis,
  title: "Edit #{rule.global? ? 'preset' : 'organization'} rule Â· Dependabot rules"
%>

<%= render layout: "edit_repositories/edit" do %>
  <%= render Primer::Beta::Subhead.new do |component| %>
    <% component.with_heading(tag: :h2) do %>
      <%= link_to "Code security and analysis", repository_security_and_analysis_path %> /
      <%= link_to "Dependabot rules", dependabot_rules_path %> /
      <%= rule.global? ? "GitHub Preset" : "Organization" %> rule
    <% end %>
  <% end %>
  <div <%= test_selector("edit-parent-rule")%>>
    <%= primer_form_with(
      url: update_parent_dependabot_rule_path(id: rule.id),
      method: :put,
      ) do |f| %>
      <%= render Primer::Alpha::TextField.new(
        name: "rule_name",
        label: "Rule name",
        value: rule.name,
        disabled: true,
      ) %>

      <%= render Primer::Box.new(my: 4) do %>
        <%= render Primer::Alpha::FormControl.new(
          label: "State",
          full_width: true,
          test_selector: "dependabot-alert-enforcement-options-menu"
        ) do |component| %>
          <%= component.with_input do %>
            <%= render DependabotAlerts::RuleEnforcementOptionsMenuComponent.new(form: f, target: current_repository, rule: rule) %>
          <% end %>
        <% end %>
      <% end %>

      <%= render Primer::Box.new(my: 4, test_selector: "rule-criteria") do %>
        <% if rule.global?%>
          <label class="FormControl-label">Target alerts</label>
          <span class="FormControl-caption d-block">
            <%= render DependabotAlerts::RuleDescriptionComponent.new(rule: rule) %>
          </span>
        <% else %>
          <%= render DependabotAlerts::RuleTargetAlertsTextboxComponent.new(rule: rule) %>
        <% end %>
      <% end %>

      <% unless rule.global? %>
        <%= render Primer::Box.new(mb: 4, test_selector: "rule-rules") do %>
          <label class="FormControl-label">Rules</label>
          <%= render DependabotAlerts::RuleActionsComponent.new(
            rule: rule,
            border_box_args: { padding: :condensed, mt: 1 }
          ) %>
        <% end %>
      <% end %>

      <%= render Primer::Beta::Button.new(
          scheme: :primary,
          type: :submit,
          display: :inline,
          mr: 2,
          "aria-label": "Save rule enforcement",
          test_selector: "rule_form_button") do %>
          Save rule
        <% end %>

      <%= render Primer::Beta::Button.new(
          tag: :a,
          href: dependabot_rules_path,
          scheme: :secondary,
          "aria-label": "Cancel rule enforcement changes"
        ).with_content("Cancel")
      %>
    <% end %>
  </div>
<% end %>
