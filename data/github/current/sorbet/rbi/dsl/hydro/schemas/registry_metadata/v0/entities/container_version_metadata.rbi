# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::RegistryMetadata::V0::Entities::ContainerVersionMetadata`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::RegistryMetadata::V0::Entities::ContainerVersionMetadata`.

class Hydro::Schemas::RegistryMetadata::V0::Entities::ContainerVersionMetadata
  sig do
    params(
      labels: T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::ContainerLabels),
      manifest: T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::ContainerManifest),
      tag: T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::ContainerTag)
    ).void
  end
  def initialize(labels: nil, manifest: nil, tag: nil); end

  sig { void }
  def clear_labels; end

  sig { void }
  def clear_manifest; end

  sig { void }
  def clear_tag; end

  sig { returns(T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::ContainerLabels)) }
  def labels; end

  sig { params(value: T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::ContainerLabels)).void }
  def labels=(value); end

  sig { returns(T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::ContainerManifest)) }
  def manifest; end

  sig { params(value: T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::ContainerManifest)).void }
  def manifest=(value); end

  sig { returns(T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::ContainerTag)) }
  def tag; end

  sig { params(value: T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::ContainerTag)).void }
  def tag=(value); end
end
