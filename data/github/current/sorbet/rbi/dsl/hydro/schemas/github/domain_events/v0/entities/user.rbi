# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::DomainEvents::V0::Entities::User`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::DomainEvents::V0::Entities::User`.

class Hydro::Schemas::Github::DomainEvents::V0::Entities::User
  sig do
    params(
      avatar_url: T.nilable(String),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      global_relay_id: T.nilable(String),
      id: T.nilable(Integer),
      login: T.nilable(String),
      site_admin: T.nilable(T::Boolean),
      spamurai_classification: T.nilable(T.any(Symbol, Integer)),
      type: T.nilable(T.any(Symbol, Integer)),
      updated_at: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(avatar_url: nil, created_at: nil, global_relay_id: nil, id: nil, login: nil, site_admin: nil, spamurai_classification: nil, type: nil, updated_at: nil); end

  sig { returns(String) }
  def avatar_url; end

  sig { params(value: String).void }
  def avatar_url=(value); end

  sig { void }
  def clear_avatar_url; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_global_relay_id; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_login; end

  sig { void }
  def clear_site_admin; end

  sig { void }
  def clear_spamurai_classification; end

  sig { void }
  def clear_type; end

  sig { void }
  def clear_updated_at; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(String) }
  def global_relay_id; end

  sig { params(value: String).void }
  def global_relay_id=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(String) }
  def login; end

  sig { params(value: String).void }
  def login=(value); end

  sig { returns(T::Boolean) }
  def site_admin; end

  sig { params(value: T::Boolean).void }
  def site_admin=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def spamurai_classification; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def spamurai_classification=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def type=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end
end
