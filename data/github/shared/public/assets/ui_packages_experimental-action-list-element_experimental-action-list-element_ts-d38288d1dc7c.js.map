{"version":3,"file":"chunk-ui_packages_experimental-action-list-element_experimental-action-list-element_ts-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/experimental-action-list-element/experimental-action-list-element.ts"],"sourcesContent":["import {FocusKeys, focusZone} from '@primer/behaviors'\nimport {attr, controller} from '@github/catalyst'\nimport type {FocusZoneSettings} from '@primer/behaviors'\n\n@controller\nclass ExperimentalActionListElement extends HTMLElement {\n  @attr arrowNavigation = false\n  @attr isNavigationList = false\n  #actionListContentItems: HTMLElement[]\n  #focusZoneAbortController: AbortController | null = null\n\n  connectedCallback(): void {\n    if (this.arrowNavigation === true) {\n      this.setupFocusZone()\n    }\n\n    if (this.isNavigationList) return\n\n    // On hashchange, add highlight to current target, if any.\n    window.addEventListener('hashchange', () => {\n      this.removeHighlightFromActiveItems()\n      this.addHighlightToCurrentTarget()\n    })\n    this.addHighlightToCurrentTarget()\n  }\n\n  // only target <action-list> components with data-action \"setupFocusZone\"\n  setupFocusZone() {\n    if (this.#focusZoneAbortController) {\n      this.#focusZoneAbortController.abort()\n    }\n    this.#actionListContentItems = Array.from(this.querySelectorAll('.ActionList-content'))\n    this.#focusZoneAbortController = focusZone(this, {\n      bindKeys: FocusKeys.ArrowAll | FocusKeys.HomeAndEnd,\n      getNextFocusable: (direction, current: HTMLElement, event) => {\n        if (current.tagName === 'BUTTON') {\n          if (event.code === 'ArrowRight') {\n            // if collapse item is already expanded, move focus to next visible item\n            if (current.getAttribute('aria-expanded') === 'true') {\n              return this.getNextVisibleItem(current)\n            } else {\n              // expand item, keep focus on current item\n              this.expandItem(current)\n              return current\n            }\n          } else if (event.code === 'ArrowLeft') {\n            // if collapse item is already collapsed, move focus to next previous item\n            if (current.getAttribute('aria-expanded') === 'false') {\n              return this.getPreviousVisibleItem(current)\n            } else {\n              // collapse item, keep focus on current item\n              this.collapseItem(current)\n              return current\n            }\n          }\n        }\n\n        if (direction === 'next') {\n          return this.getNextVisibleItem(current)\n        } else if (direction === 'previous') {\n          return this.getPreviousVisibleItem(current)\n        }\n      },\n      // check for [hidden] attribute used on filtered out items\n      focusableElementFilter: element => {\n        return !element.closest('[hidden]')\n      },\n    } as FocusZoneSettings)\n  }\n\n  // get next item if item or parent item is hidden\n  getNextVisibleItem(item: HTMLElement): HTMLElement | null {\n    const index = this.#actionListContentItems.indexOf(item)\n    if (index + 1 >= this.#actionListContentItems.length) {\n      return null\n    }\n\n    const nextContentItem = this.#actionListContentItems[index + 1]!\n    const parentUList = this.getParentHiddenSubGroup(nextContentItem)\n    if (nextContentItem.parentElement?.hidden || parentUList) {\n      return this.getNextVisibleItem(nextContentItem)\n    }\n    return nextContentItem\n  }\n\n  // get previous item if item or parent item is hidden\n  getPreviousVisibleItem(item: HTMLElement): HTMLElement | null {\n    const index = this.#actionListContentItems.indexOf(item)\n    if (index <= 0) {\n      return null\n    }\n\n    const previousContentItem = this.#actionListContentItems[index - 1]!\n    const parentUList = this.getParentHiddenSubGroup(previousContentItem)\n    if (previousContentItem.parentElement?.hidden || parentUList) {\n      return this.getPreviousVisibleItem(previousContentItem)\n    }\n\n    return previousContentItem\n  }\n\n  // expand collapsible item onClick, or ArrowLeft/ArrowRight\n  expandItem(item: HTMLElement) {\n    item.dispatchEvent(new CustomEvent('action-menu-item-toggle', {bubbles: true, detail: {action: 'expanded', item}}))\n    item.nextElementSibling?.removeAttribute('data-hidden')\n    item.setAttribute('aria-expanded', 'true')\n  }\n\n  collapseItem(item: HTMLElement) {\n    item.dispatchEvent(new CustomEvent('action-menu-item-toggle', {bubbles: true, detail: {action: 'collapsed', item}}))\n    item.nextElementSibling?.setAttribute('data-hidden', '')\n    item.setAttribute('aria-expanded', 'false')\n  }\n\n  getParentHiddenSubGroup(item: HTMLElement) {\n    return item?.closest('ul.ActionList--subGroup[data-hidden]') as HTMLUListElement\n  }\n\n  itemIsExpanded(item: HTMLElement | null) {\n    if (item?.tagName === 'A') {\n      return true\n    }\n    return item?.getAttribute('aria-expanded') === 'true'\n  }\n\n  // expand/collapse item\n  handleItemWithSubItemClick(e: Event) {\n    const target = e.target\n    if (!(target instanceof HTMLElement)) return\n\n    const button = target.closest<HTMLButtonElement>('button')\n    if (!button) return\n    if (this.itemIsExpanded(button)) {\n      this.collapseItem(button)\n    } else {\n      this.expandItem(button)\n    }\n\n    e.stopPropagation()\n  }\n\n  // Apply active state\n  handleItemClick(e: Event) {\n    const target = e.target\n    if (!(target instanceof HTMLElement)) return\n\n    const item = target.closest<HTMLLIElement>('.ActionList-item')\n    if (!item) return\n\n    this.removeHighlightFromActiveItems()\n    this.addHighlightToItem(item)\n  }\n\n  addHighlightToCurrentTarget(): void {\n    if (this.isNavigationList) return\n    if (window.location.hash === '') return\n    const listItems = document.querySelectorAll<HTMLLIElement>('.ActionList-item')\n\n    for (const listItem of listItems) {\n      const listItemContentLink = listItem.querySelector<HTMLAnchorElement>('.ActionList-content')\n      if (!listItemContentLink) continue\n      if (listItemContentLink.hash !== window.location.hash) continue\n\n      this.addHighlightToItem(listItem)\n    }\n  }\n\n  addHighlightToItem(item: HTMLLIElement): void {\n    item.classList.add('ActionList-item--navActive')\n    item.setAttribute('aria-current', 'location')\n    if (!item.classList.contains('ActionList-item--subItem')) return\n\n    const itemGroup = item.closest('.ActionList-item--hasSubItem')\n    if (!itemGroup) return\n\n    // if item is in folder, add active class to folder button\n    const groupButton = item.parentElement!.previousElementSibling\n    groupButton?.classList.add('ActionList-content--hasActiveSubItem')\n  }\n\n  removeHighlightFromActiveItems(): void {\n    const activeItems = document.querySelectorAll<HTMLLIElement>('.ActionList-item--navActive')\n\n    for (const activeItem of activeItems) {\n      this.removeHighlightFromActiveItem(activeItem)\n    }\n\n    const activeItemGroups = document.querySelectorAll<HTMLButtonElement>('.ActionList-content--hasActiveSubItem')\n    for (const activeItemGroup of activeItemGroups) {\n      activeItemGroup.classList.remove('ActionList-content--hasActiveSubItem')\n    }\n  }\n\n  removeHighlightFromActiveItem(item: HTMLLIElement) {\n    item.classList.remove('ActionList-item--navActive')\n    item.removeAttribute('aria-current')\n  }\n}\n"],"names":["ExperimentalActionListElement","HTMLElement","connectedCallback","arrowNavigation","setupFocusZone","isNavigationList","window","addEventListener","removeHighlightFromActiveItems","addHighlightToCurrentTarget","focusZoneAbortController","abort","actionListContentItems","Array","from","querySelectorAll","focusZone","bindKeys","FocusKeys","ArrowAll","HomeAndEnd","getNextFocusable","direction","current","event","tagName","code","getAttribute","getNextVisibleItem","expandItem","getPreviousVisibleItem","collapseItem","focusableElementFilter","element","closest","item","index","indexOf","length","nextContentItem","parentUList","getParentHiddenSubGroup","parentElement","hidden","previousContentItem","dispatchEvent","CustomEvent","bubbles","detail","action","nextElementSibling","removeAttribute","setAttribute","itemIsExpanded","handleItemWithSubItemClick","e","target","button","stopPropagation","handleItemClick","addHighlightToItem","location","hash","listItem","document","listItemContentLink","querySelector","classList","add","contains","groupButton","previousElementSibling","activeItem","removeHighlightFromActiveItem","activeItemGroup","remove","attr","controller"],"sourceRoot":""}