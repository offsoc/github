# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::ActionsRunnerAdmin::Api::V1::AddRunnerRequest`.
# Please instead update this file by running `bin/tapioca dsl GitHub::ActionsRunnerAdmin::Api::V1::AddRunnerRequest`.

class GitHub::ActionsRunnerAdmin::Api::V1::AddRunnerRequest
  sig do
    params(
      arch: T.nilable(String),
      entity: T.nilable(GitHub::ActionsRunnerAdmin::Entities::V1::GitHubEntity),
      ephemeral: T.nilable(T::Boolean),
      group_id: T.nilable(Integer),
      labels: T.nilable(T.any(Google::Protobuf::RepeatedField[GitHub::ActionsRunnerAdmin::Api::V1::AddLabelRequest], T::Array[GitHub::ActionsRunnerAdmin::Api::V1::AddLabelRequest])),
      name: T.nilable(String),
      os: T.nilable(String),
      public_key: T.nilable(String),
      updates_disabled: T.nilable(T::Boolean),
      version: T.nilable(String)
    ).void
  end
  def initialize(arch: nil, entity: nil, ephemeral: nil, group_id: nil, labels: T.unsafe(nil), name: nil, os: nil, public_key: nil, updates_disabled: nil, version: nil); end

  sig { returns(String) }
  def arch; end

  sig { params(value: String).void }
  def arch=(value); end

  sig { void }
  def clear_arch; end

  sig { void }
  def clear_entity; end

  sig { void }
  def clear_ephemeral; end

  sig { void }
  def clear_group_id; end

  sig { void }
  def clear_labels; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_os; end

  sig { void }
  def clear_public_key; end

  sig { void }
  def clear_updates_disabled; end

  sig { void }
  def clear_version; end

  sig { returns(T.nilable(GitHub::ActionsRunnerAdmin::Entities::V1::GitHubEntity)) }
  def entity; end

  sig { params(value: T.nilable(GitHub::ActionsRunnerAdmin::Entities::V1::GitHubEntity)).void }
  def entity=(value); end

  sig { returns(T::Boolean) }
  def ephemeral; end

  sig { params(value: T::Boolean).void }
  def ephemeral=(value); end

  sig { returns(Integer) }
  def group_id; end

  sig { params(value: Integer).void }
  def group_id=(value); end

  sig { returns(Google::Protobuf::RepeatedField[GitHub::ActionsRunnerAdmin::Api::V1::AddLabelRequest]) }
  def labels; end

  sig { params(value: Google::Protobuf::RepeatedField[GitHub::ActionsRunnerAdmin::Api::V1::AddLabelRequest]).void }
  def labels=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(String) }
  def os; end

  sig { params(value: String).void }
  def os=(value); end

  sig { returns(String) }
  def public_key; end

  sig { params(value: String).void }
  def public_key=(value); end

  sig { returns(T::Boolean) }
  def updates_disabled; end

  sig { params(value: T::Boolean).void }
  def updates_disabled=(value); end

  sig { returns(String) }
  def version; end

  sig { params(value: String).void }
  def version=(value); end
end
