# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PlatformTypes::WorkflowRun`.
# Please instead update this file by running `bin/tapioca dsl PlatformTypes::WorkflowRun`.

class PlatformTypes::WorkflowRun < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(T.nilable(Integer)) }
  def attempt_number; end

  sig { returns(T::Boolean) }
  def attempt_number?; end

  sig { returns(T.nilable(Integer)) }
  def billable_duration_in_seconds; end

  sig { returns(T::Boolean) }
  def billable_duration_in_seconds?; end

  sig { returns(PlatformTypes::CheckSuite) }
  def check_suite; end

  sig { returns(T::Boolean) }
  def check_suite?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def created_at; end

  sig { returns(T::Boolean) }
  def created_at?; end

  sig { returns(T.nilable(Integer)) }
  def database_id; end

  sig { returns(T::Boolean) }
  def database_id?; end

  sig { returns(PlatformTypes::DeploymentReviewConnection) }
  def deployment_reviews; end

  sig { returns(T::Boolean) }
  def deployment_reviews?; end

  sig { returns(String) }
  def event; end

  sig { returns(T::Boolean) }
  def event?; end

  sig { returns(String) }
  def event_type; end

  sig { returns(T::Boolean) }
  def event_type?; end

  sig { returns(T.nilable(PlatformTypes::WorkflowRunFile)) }
  def file; end

  sig { returns(T::Boolean) }
  def file?; end

  sig { returns(T::Boolean) }
  def has_multiple_attempts; end

  sig { returns(T::Boolean) }
  def has_multiple_attempts?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(PlatformTypes::DeploymentRequestConnection) }
  def pending_deployment_requests; end

  sig { returns(T::Boolean) }
  def pending_deployment_requests?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def resource_path; end

  sig { returns(T::Boolean) }
  def resource_path?; end

  sig { returns(Integer) }
  def run_number; end

  sig { returns(T::Boolean) }
  def run_number?; end

  sig { returns(T.nilable(String)) }
  def title; end

  sig { returns(T::Boolean) }
  def title?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def updated_at; end

  sig { returns(T::Boolean) }
  def updated_at?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def url; end

  sig { returns(T::Boolean) }
  def url?; end

  sig { returns(PlatformTypes::Workflow) }
  def workflow; end

  sig { returns(T::Boolean) }
  def workflow?; end
end
