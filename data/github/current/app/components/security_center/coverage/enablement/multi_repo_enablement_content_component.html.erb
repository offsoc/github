<% code_scanning_and_secret_scanning_settings = capture do %>
  <%= render(
    SecurityCenter::Coverage::Enablement::SettingsSectionComponent.new(
      SecurityCenter::Coverage::Enablement::SettingsSectionComponent::Data.new(
        depth: render_section_advanced_security ? 2 : 1,
        name: "Code Scanning",
        render: render_section_code_scanning
      ),
      ml: render_section_advanced_security ? 3 : nil,
      mt: 3,
      test_selector: CODE_SCANNING_SECTION_TEST_SELECTOR
    )
  ) do %>
    <%= render(
      SecurityCenter::Coverage::Enablement::SettingComponent.new(
        SecurityCenter::Coverage::Enablement::SettingComponent::Data.new(
          blocked_reason: data.codeql_default_setup.blocked_reason,
          description: data.codeql_default_setup.description,
          can_enable: data.codeql_default_setup.can_enable,
          can_disable: data.codeql_default_setup.can_disable,
          name: "CodeQL default setup",
          render: data.codeql_default_setup.is_available,
          select_name: "codeql_default_setup",
          aux_data: codeql_default_setup_aux_data,
        ),
        test_selector: CODEQL_DEFAULT_SETUP_TEST_SELECTOR
      )
    ) %>
  <% end %>

  <%= render(
    SecurityCenter::Coverage::Enablement::SettingsSectionComponent.new(
      SecurityCenter::Coverage::Enablement::SettingsSectionComponent::Data.new(
        depth: render_section_advanced_security ? 2 : 1,
        name: "Secret Scanning",
        render: render_section_secret_scanning
      ),
      ml: render_section_advanced_security ? 3 : nil,
      mt: 3,
      test_selector: SECRET_SCANNING_SECTION_TEST_SELECTOR
    )
  ) do %>
    <%= render(
      SecurityCenter::Coverage::Enablement::SettingComponent.new(
        SecurityCenter::Coverage::Enablement::SettingComponent::Data.new(
          blocked_reason: data.secret_scanning_alerts.blocked_reason,
          description: data.secret_scanning_alerts.description,
          can_enable: data.secret_scanning_alerts.can_enable,
          can_disable: data.secret_scanning_alerts.can_disable,
          name: "Alerts",
          render: data.secret_scanning_alerts.is_available,
          select_name: "secret_scanning_alerts"
        ),
        straight_bottom_border: data.secret_scanning_push_protection.is_available,
        test_selector: SECRET_SCANNING_ALERTS_TEST_SELECTOR
      )
    ) do %>
      <%= render(
        SecurityCenter::Coverage::Enablement::SettingComponent.new(
          SecurityCenter::Coverage::Enablement::SettingComponent::Data.new(
            description: data.secret_scanning_push_protection.description,
            can_enable: data.secret_scanning_push_protection.can_enable,
            can_disable: data.secret_scanning_push_protection.can_disable,
            blocked_reason: data.secret_scanning_push_protection.blocked_reason,
            name: "Push protection",
            render: data.secret_scanning_push_protection.is_available,
            select_name: "secret_scanning_push_protection"
          ),
          straight_top_border: true,
          style: "margin-top: -1px;",
          test_selector: PUSH_PROTECTION_TEST_SELECTOR
        )
      ) %>
    <% end %>
  <% end %>
<% end %>

<turbo-frame id="<%= TURBO_FRAME_ID %>">
  <%= render(Primer::Box.new(test_selector: TEST_SELECTOR)) do %>
    <%= render(
      SecurityCenter::Coverage::Enablement::SettingsSectionComponent.new(
        SecurityCenter::Coverage::Enablement::SettingsSectionComponent::Data.new(
          name: "Dependencies",
          render: render_section_dependencies
        ),
        test_selector: DEPENDENCIES_SECTION_TEST_SELECTOR
      )
    ) do %>
      <%= render(
        SecurityCenter::Coverage::Enablement::SettingComponent.new(
          SecurityCenter::Coverage::Enablement::SettingComponent::Data.new(
            description: data.dependency_graph.description,
            can_enable: data.dependency_graph.can_enable,
            can_disable: data.dependency_graph.can_disable,
            blocked_reason: data.dependency_graph.blocked_reason,
            name: "Dependency graph",
            render: data.dependency_graph.is_available,
            select_name: "dependency_graph"
          ),
          test_selector: DEPENDENCY_GRAPH_TEST_SELECTOR
        )
      ) do %>
        <%= render(
          SecurityCenter::Coverage::Enablement::SettingsSectionComponent.new(
            SecurityCenter::Coverage::Enablement::SettingsSectionComponent::Data.new(
              depth: 2,
              name: "Dependabot",
              render: render_section_dependabot
            ),
            ml: 3,
            mt: 3,
            test_selector: DEPENDABOT_SECTION_TEST_SELECTOR
          )
        ) do %>
          <%= render(
            SecurityCenter::Coverage::Enablement::SettingComponent.new(
              SecurityCenter::Coverage::Enablement::SettingComponent::Data.new(
                description: data.dependabot_alerts.description,
                can_enable: data.dependabot_alerts.can_enable,
                can_disable: data.dependabot_alerts.can_disable,
                blocked_reason: data.dependabot_alerts.blocked_reason,
                name: "Alerts",
                render: data.dependabot_alerts.is_available,
                select_name: "dependabot_alerts"
              ),
              straight_bottom_border: data.dependabot_security_updates.is_available,
              test_selector: DEPENDABOT_ALERTS_TEST_SELECTOR
            )
          ) do %>
            <%= render(
              SecurityCenter::Coverage::Enablement::SettingComponent.new(
                SecurityCenter::Coverage::Enablement::SettingComponent::Data.new(
                  description: data.dependabot_security_updates.description,
                  can_enable: data.dependabot_security_updates.can_enable,
                  can_disable: data.dependabot_security_updates.can_disable,
                  blocked_reason: data.dependabot_security_updates.blocked_reason,
                  name: "Security updates",
                  render: data.dependabot_security_updates.is_available,
                  select_name: "dependabot_security_updates"
                ),
                straight_top_border: true,
                style: "margin-top: -1px;",
                test_selector: DEPENDABOT_SECURITY_UPDATES_TEST_SELECTOR
              )
            ) %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>

    <% if render_section_advanced_security %>
      <%= render(
        SecurityCenter::Coverage::Enablement::SettingsSectionComponent.new(
          SecurityCenter::Coverage::Enablement::SettingsSectionComponent::Data.new(
            name: "Advanced Security"
          ),
          mt: 3,
          test_selector: ADVANCED_SECURITY_SECTION_TEST_SELECTOR
        )
      ) do %>
        <%= render(
          SecurityCenter::Coverage::Enablement::SettingComponent.new(
            SecurityCenter::Coverage::Enablement::SettingComponent::Data.new(
              blocked_reason: data.advanced_security.blocked_reason,
              can_enable: data.advanced_security.can_enable,
              can_disable: data.advanced_security.can_disable,
              description: data.advanced_security.description,
              name: "GitHub Advanced Security",
              render: data.advanced_security.is_available,
              select_name: "advanced_security"
            ),
            test_selector: ADVANCED_SECURITY_TEST_SELECTOR
          )
        ) do %>
          <%= code_scanning_and_secret_scanning_settings %>
        <% end %>
      <% end %>
    <% else %>
      <%= code_scanning_and_secret_scanning_settings %>
    <% end %>
  <% end %>
</turbo-frame>
