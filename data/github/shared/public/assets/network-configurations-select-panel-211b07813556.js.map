{"version":3,"file":"network-configurations-select-panel-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/form-utils/form-utils.ts","ui/packages/form-utils/remote-submit.ts","ui/packages/network-configurations-select-panel/constants/network-configurations-consts.ts","ui/packages/network-configurations-select-panel/NetworkConfigurationsSelectPanel.tsx","ui/packages/network-configurations-select-panel/network-configurations-select-panel.ts","ui/packages/network-configurations/classes/network-configuration.ts","ui/packages/react-core/deferred-registry.ts","ui/packages/react-core/react-partial-anchor.ts","ui/packages/react-core/react-partial-registry.ts","ui/packages/react-core/ReactPartialElement.tsx","ui/packages/react-core/register-partial.ts","ui/packages/react-profiling-mode/src/index.ts","ui/packages/react-core/PartialRouter.tsx","ui/packages/react-core/PartialEntry.tsx","ui/packages/react-core/ReactBaseElement.tsx"],"sourcesContent":["import {persistSubmitButtonValue} from './remote-submit'\n\ntype TextField = HTMLInputElement | HTMLTextAreaElement\ntype Button = HTMLInputElement | HTMLButtonElement\n\nfunction fire(target: HTMLElement, name: string, cancelable: boolean): boolean {\n  return target.dispatchEvent(\n    new CustomEvent(name, {\n      bubbles: true,\n      cancelable,\n    }),\n  )\n}\n\n// Submit a form while ensuring that `submit` event is also triggered.\n//\n// Calling native `form.submit()` method immediately submits the form without triggering the `submit` event.\n// As a result, code that wants to hook into form submits would never execute.\n//\n// This method first triggers the `submit` event and, if that event wasn't `preventDefault`d, submits the\n// form natively.\nexport function requestSubmit(form: HTMLFormElement, submitter?: Button) {\n  if (submitter) {\n    checkButtonValidity(form, submitter)\n    persistSubmitButtonValue(submitter)\n  }\n  if (fire(form, 'submit', true)) {\n    form.submit()\n  }\n}\n\n// Check submitter validity for form.requestSubmit compatibility.\n// See https://html.spec.whatwg.org/#dom-form-requestsubmit.\nfunction checkButtonValidity(form: HTMLFormElement, submitter: Button) {\n  if (!(form instanceof HTMLFormElement)) throw new TypeError('The specified element is not of type HTMLFormElement.')\n  if (!(submitter instanceof HTMLElement)) throw new TypeError('The specified element is not of type HTMLElement.')\n  if (submitter.type !== 'submit') throw new TypeError('The specified element is not a submit button.')\n  if (!form || form !== submitter.form) throw new Error('The specified element is not owned by the form element.')\n}\n\n// Set a form field value while ensuring that `change` event is also triggered.\n//\n// Having the `change` event fire is important for various behaviors to react, such as form validation.\nexport function changeValue(input: TextField, value: string | boolean) {\n  if (typeof value === 'boolean') {\n    if (input instanceof HTMLInputElement) {\n      input.checked = value\n    } else {\n      throw new TypeError('only checkboxes can be set to boolean value')\n    }\n  } else {\n    if (input.type === 'checkbox') {\n      throw new TypeError(\"checkbox can't be set to string value\")\n    } else {\n      input.value = value\n    }\n  }\n  fire(input, 'change', false)\n}\n\n// Fill multiple form fields by item name.\nexport function fillFormValues(form: HTMLFormElement, fields: {[key: string]: string}) {\n  for (const name in fields) {\n    const value = fields[name]\n    const element = form.elements.namedItem(name)\n\n    if (element instanceof HTMLInputElement) {\n      element.value = value!\n    } else if (element instanceof HTMLTextAreaElement) {\n      element.value = value!\n    }\n  }\n}\n\n// Test if element is a form field.\nexport function isFormField(element: Node): boolean {\n  if (!(element instanceof HTMLElement)) {\n    return false\n  }\n\n  const name = element.nodeName.toLowerCase()\n  const type = (element.getAttribute('type') || '').toLowerCase()\n  return (\n    name === 'select' ||\n    name === 'textarea' ||\n    (name === 'input' && type !== 'submit' && type !== 'reset') ||\n    element.isContentEditable\n  )\n}\n\nfunction searchParamsFromFormData(formData: FormData): URLSearchParams {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new URLSearchParams(formData as any)\n}\n\n// Get a `?` search string for a URL for a GET form, using its `action` attribute as well as its other fields.\nexport function combineGetFormSearchParams(formAction: URL, formData: FormData): string {\n  const allSearchParams = new URLSearchParams(formAction.search)\n  const searchParamsFromInputs = searchParamsFromFormData(formData)\n  for (const [key, value] of searchParamsFromInputs) {\n    allSearchParams.append(key, value)\n  }\n  return allSearchParams.toString()\n}\n\n// Serialize form data into string.\nexport function serialize(form: HTMLFormElement): string {\n  return searchParamsFromFormData(new FormData(form)).toString()\n}\n","// Emulates submit button submission values by inserting a hidden input to the form.\n//\n// Submit events can be triggerd in the following ways:\n// - User clicks on a submit button.\n// - User press Enter when focusing on a form field; also known as \"implicit submission\".\n// - Programmatically via requestSubmit helper.\n//\n// On GitHub.com, the submission is either handled by the browser or remoteForm.\n//\n// For submissions triggered by user actions, the name and value of the clicked submit button (also known as\n// \"the submitter\") is passed along in the request, and can be programmatically retrieved with FormData.entries().\n//\n// However, this value will be lost in the following cases:\n// - 1. When the submitter button is disabled, most commonly by [data-disable-with].\n// - 2. When submitting via requestSubmit (from form.js), because the submission does not originated from a submitter.\n// - 3. When submitting with remoteForm, because FormData(form).entries() does not know about the submitter. In Safari\n// the submitter is known during the submission steps, but this behavior is not supported in any other browsers.\n//\n// @see {@link https://github.com/github/form-data-entries/pull/7}.\n//\n// For the exact workarounds, refer to ./form.js and ./remote.js.\nexport function persistSubmitButtonValue(button: HTMLButtonElement | HTMLInputElement) {\n  const form = button.closest('form')\n  if (!(form instanceof HTMLFormElement)) {\n    return\n  }\n\n  let input = findPersistedSubmitButtonValue(form)\n\n  if (button.name) {\n    const defaultValue = button.matches('input[type=submit]') ? 'Submit' : ''\n    const value = button.value || defaultValue\n    if (!input) {\n      input = document.createElement('input')\n      input.type = 'hidden'\n      input.classList.add('js-submit-button-value')\n      form.prepend(input)\n    }\n    input.name = button.name\n    input.value = value\n  } else if (input) {\n    input.remove()\n  }\n}\n\nexport function findPersistedSubmitButtonValue(form: HTMLFormElement): HTMLInputElement | null {\n  const input = form.querySelector('input.js-submit-button-value')\n  return input instanceof HTMLInputElement ? input : null\n}\n","export const NetworkConfigurationConsts = {\n  networkConfigurations: 'Network configurations',\n  networkConfigurationsDescription:\n    'Select the network configuration for this runner group. Only available for GitHub-hosted runners.',\n  learnMore: 'Learn more about network configurations.',\n  learnMoreLink: 'https://github.co/actions-azure-vnet',\n}\n","import {Heading, Link, FormControl, ActionList} from '@primer/react'\nimport {useState, useEffect} from 'react'\nimport {TriangleDownIcon} from '@primer/octicons-react'\nimport {NetworkConfigurationConsts} from './constants/network-configurations-consts'\nimport {SelectPanel} from '@primer/react/drafts'\nimport {requestSubmit} from '@github-ui/form-utils'\nimport {NetworkConfiguration, ComputeService} from '@github-ui/network-configurations'\n\nexport interface NetworkConfigurationsSelectPanelProps {\n  networkConfigurations: NetworkConfiguration[]\n  selectedNetworkConfig?: NetworkConfiguration | undefined\n  isReadonly: boolean\n  isUpdate: boolean\n  formId: string\n}\n\nexport function NetworkConfigurationsSelectPanel({\n  networkConfigurations,\n  selectedNetworkConfig,\n  isReadonly,\n  isUpdate,\n  formId,\n}: NetworkConfigurationsSelectPanelProps) {\n  networkConfigurations = networkConfigurations ?? []\n  const noNetworkConfig = new NetworkConfiguration('-1', 'No configuration', '', ComputeService.Actions, '', [])\n  networkConfigurations = [noNetworkConfig, ...networkConfigurations]\n  const currentNetworkConfig = isUpdate && selectedNetworkConfig ? selectedNetworkConfig : noNetworkConfig\n  const [selected, setSelected] = useState(currentNetworkConfig)\n  const currentNetworkConfigIsDisabled = isUpdate && currentNetworkConfig.computeService !== ComputeService.Actions\n  const [shouldSubmit, setShouldSubmit] = useState(false)\n  const [searchText, setSearchText] = useState('')\n  const filtered_networks = networkConfigurations.filter(\n    item => !searchText || (item?.name ?? '').toLowerCase().includes(searchText.toLowerCase()),\n  )\n\n  const onSelectChange = (item: NetworkConfiguration) => {\n    setSelected(item)\n    const inputElement = document.querySelector('.js-network-configuration-selector') as HTMLInputElement\n    if (inputElement) {\n      inputElement.value = item.id\n      const event = new Event('change', {bubbles: true})\n      inputElement.dispatchEvent(event)\n    }\n    if (item === currentNetworkConfig) return\n    if (isUpdate) setShouldSubmit(true)\n  }\n\n  useEffect(() => {\n    if (typeof document === 'undefined') {\n      // Bail during server-side rendering since none of this is used then.\n      return\n    }\n    if (isUpdate && shouldSubmit) {\n      const form = document.getElementById(formId) as HTMLFormElement\n      requestSubmit(form)\n      setShouldSubmit(false)\n    }\n  }, [formId, isUpdate, shouldSubmit])\n\n  return (\n    <article>\n      <Heading as=\"h3\" sx={{fontSize: 3, fontWeight: 'normal'}}>\n        {NetworkConfigurationConsts.networkConfigurations}\n      </Heading>\n      <p className=\"color-fg-muted mb-2\">\n        {NetworkConfigurationConsts.networkConfigurationsDescription}{' '}\n        <Link inline href={NetworkConfigurationConsts.learnMoreLink}>\n          {NetworkConfigurationConsts.learnMore}\n        </Link>\n      </p>\n      <FormControl id=\"network-configuration-select-panel\">\n        <FormControl.Label visuallyHidden>Network Configurations Select Panel</FormControl.Label>\n        <SelectPanel title=\"Select network configuration\" selectionVariant=\"instant\">\n          <SelectPanel.Button disabled={isReadonly} trailingVisual={TriangleDownIcon}>\n            {selected.name}\n          </SelectPanel.Button>\n          <SelectPanel.Header>\n            <SelectPanel.SearchInput onChange={e => setSearchText(e.target.value)} />\n          </SelectPanel.Header>\n          {filtered_networks.length === 0 ? (\n            <SelectPanel.Message variant=\"empty\" title={`No network configuration found`}>\n              <span>Try a different search term</span>\n            </SelectPanel.Message>\n          ) : (\n            <ActionList selectionVariant=\"single\">\n              {filtered_networks\n                .filter(item => item.computeService === ComputeService.Actions)\n                .map(item => (\n                  <ActionList.Item\n                    key={item.id}\n                    role=\"menuitemradio\"\n                    selected={item.id === selected.id}\n                    aria-checked={item.id === selected.id}\n                    onSelect={() => onSelectChange(item)}\n                  >\n                    {item.name}\n                  </ActionList.Item>\n                ))}\n              {currentNetworkConfigIsDisabled && (\n                <>\n                  <ActionList.Divider />\n                  <ActionList.Group>\n                    <ActionList.GroupHeading>Disabled configuration</ActionList.GroupHeading>\n                    <ActionList.Item\n                      role=\"menuitemradio\"\n                      selected={currentNetworkConfig.id === selected.id}\n                      aria-checked={currentNetworkConfig.id === selected.id}\n                    >\n                      {currentNetworkConfig.name}\n                    </ActionList.Item>\n                  </ActionList.Group>\n                </>\n              )}\n            </ActionList>\n          )}\n        </SelectPanel>\n        {currentNetworkConfigIsDisabled && (\n          <FormControl.Validation variant=\"error\">This network configuration is disabled</FormControl.Validation>\n        )}\n      </FormControl>\n      <input\n        type=\"text\"\n        name=\"network_config_id\"\n        className=\"js-network-configuration-selector\"\n        value={selected.id}\n        hidden\n        readOnly\n      />\n    </article>\n  )\n}\n\ntry{ NetworkConfigurationsSelectPanel.displayName ||= 'NetworkConfigurationsSelectPanel' } catch {}","import {registerReactPartial} from '@github-ui/react-core/register-partial'\nimport {NetworkConfigurationsSelectPanel} from './NetworkConfigurationsSelectPanel'\n\nregisterReactPartial('network-configurations-select-panel', {\n  Component: NetworkConfigurationsSelectPanel,\n})\n","export type RunnerGroup = {\n  id: string\n  name: string\n  allowPublic: boolean\n  visibility: string\n  selectedTargetsCount: number\n}\n\nexport enum ComputeService {\n  None = 'none',\n  Actions = 'actions',\n  Codespaces = 'codespaces',\n}\n\nexport class NetworkConfiguration {\n  id: string\n  name: string\n  createdOn: string\n  computeService: ComputeService\n  service: string\n  runnerGroups: RunnerGroup[]\n  constructor(\n    id: string,\n    name: string,\n    createdOn: string,\n    computeService: ComputeService,\n    service: string,\n    runnerGroups: RunnerGroup[],\n  ) {\n    this.id = id\n    this.name = name\n    this.createdOn = createdOn\n    this.computeService = computeService\n    this.service = service\n    this.runnerGroups = runnerGroups\n  }\n}\n","export class DeferredRegistry<T> {\n  private registrationEntries: Record<\n    string,\n    {\n      promise: Promise<T>\n      resolve?: (r: T) => void\n    }\n  > = {}\n\n  public register(name: string, registration: T) {\n    const entry = this.registrationEntries[name]\n    if (entry) {\n      entry.resolve?.(registration)\n    } else {\n      this.registrationEntries[name] = {\n        promise: Promise.resolve(registration),\n      }\n    }\n  }\n\n  public getRegistration(name: string): Promise<T> {\n    this.registrationEntries[name] ||= new Deferred()\n    return this.registrationEntries[name].promise\n  }\n}\n\nclass Deferred<T> {\n  declare promise\n  declare resolve: (r: T) => void\n\n  constructor() {\n    this.promise = new Promise<T>(resolve => {\n      this.resolve = resolve\n    })\n  }\n}\n","import type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {useCallback, useEffect, useRef, useState} from 'react'\n\ninterface ReactPartialAnchor {\n  /**\n   * DO NOT USE THIS PROPERTY DIRECTLY. It is meant to be used with useExternalAnchor and useOnAnchorClick\n   */\n  __wrapperElement: ReactPartialAnchorElement\n}\n\nexport interface ReactPartialAnchorProps {\n  reactPartialAnchor?: ReactPartialAnchor\n}\n\nexport function usePartialAnchorProps(\n  anchorElement: ReactPartialAnchorElement | undefined | null,\n): ReactPartialAnchorProps {\n  useEffect(() => {\n    const anchor = anchorElement?.anchor\n\n    if (!anchor) {\n      return\n    }\n\n    if ('disabled' in anchor) {\n      anchor.disabled = false\n    }\n    anchor.classList.remove('cursor-wait')\n  }, [anchorElement])\n\n  if (!anchorElement) {\n    return {}\n  }\n\n  return {\n    reactPartialAnchor: {\n      __wrapperElement: anchorElement,\n    },\n  }\n}\n\nexport function useExternalAnchor(reactPartialAnchor: ReactPartialAnchor) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor || null)\n  const [open, setOpen] = useState(false)\n\n  const onClick = useCallback(() => {\n    // toggle the open state when clicked\n    setOpen(!open)\n  }, [open, setOpen])\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    ref.current.setAttribute('aria-expanded', open.toString())\n    ref.current.setAttribute('aria-haspopup', 'true')\n  }, [ref, open])\n\n  useOnAnchorClick(reactPartialAnchor, onClick)\n\n  return {\n    ref,\n    open,\n    setOpen,\n  }\n}\n\nexport function useOnAnchorClick(reactPartialAnchor: ReactPartialAnchor, onClick: (event: MouseEvent) => void) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor)\n\n  useEffect(() => {\n    const element = ref.current\n    if (!element) {\n      return\n    }\n\n    element.addEventListener('click', onClick)\n    return () => element.removeEventListener('click', onClick)\n  }, [ref, onClick])\n}\n\nexport type PropsWithPartialAnchor<T> = T & Required<ReactPartialAnchorProps>\n","import {DeferredRegistry} from './deferred-registry'\n\nexport interface PartialRegistration {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Component: React.ComponentType<any>\n}\n\nexport const partialRegistry = new DeferredRegistry<PartialRegistration>()\n\nexport function getReactPartial(appName: string) {\n  return partialRegistry.getRegistration(appName)\n}\n","import {controller} from '@github/catalyst'\nimport {getReactPartial} from './react-partial-registry'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {ReactBaseElement} from './ReactBaseElement'\nimport {PartialEntry} from './PartialEntry'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\n\n// What is this silliness? Is it react or a web component?!\n// It's a web component we use to bootstrap react partials within the monolith.\n@controller\nclass ReactPartialElement extends ReactBaseElement<EmbeddedPartialData> {\n  nameAttribute = 'partial-name'\n\n  async getReactNode(embeddedData: EmbeddedPartialData) {\n    const {Component} = await getReactPartial(this.name)\n\n    // Some React Partials will be wrapped in a react-partial-anchor, which is used to conditionally render the Partial\n    const anchorElement = this.closest<ReactPartialAnchorElement>('react-partial-anchor')\n\n    return (\n      <PartialEntry\n        partialName={this.name}\n        embeddedData={embeddedData}\n        Component={Component}\n        wasServerRendered={this.hasSSRContent}\n        ssrError={this.ssrError}\n        anchorElement={anchorElement}\n      />\n    )\n  }\n}\n","import {partialRegistry, type PartialRegistration} from './react-partial-registry'\n// Import the web component to get it registered on the window\nimport './ReactPartialElement'\n\n// NOTE: if the signature of this method changes, also update the react-partial-name ESLint rule\n// /workspaces/github/ui/packages/eslint-plugin-github-monorepo/rules/react-partial-name.js\nexport function registerReactPartial(name: string, registration: PartialRegistration) {\n  partialRegistry.register(name, registration)\n}\n","import safeStorage from '@github-ui/safe-storage'\n\nconst {getItem, setItem, removeItem} = safeStorage('localStorage')\nconst REACT_PROFILING_ENABLED = 'REACT_PROFILING_ENABLED'\n\ninterface ReactProfilingModeMethods {\n  enable: () => void\n  disable: () => void\n  isEnabled: () => boolean\n}\n\nconst ReactProfilingMode: ReactProfilingModeMethods = {\n  enable: () => setItem(REACT_PROFILING_ENABLED, 'true'),\n  disable: () => removeItem(REACT_PROFILING_ENABLED),\n  isEnabled: () => !!getItem(REACT_PROFILING_ENABLED),\n}\n\nexport default ReactProfilingMode\n","import {useState} from 'react'\nimport type {BrowserHistory, MemoryHistory} from '@remix-run/router'\nimport {Router} from 'react-router-dom'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\ntype Props = {\n  children: React.ReactNode\n  history: BrowserHistory | MemoryHistory\n}\n\nexport function PartialRouter({children, history}: Props) {\n  const [state, setState] = useState({\n    location: history.location,\n  })\n\n  useHydratedEffect(() => history.listen(setState), [history])\n\n  return (\n    <Router location={state.location} navigator={history}>\n      {children}\n    </Router>\n  )\n}\n\ntry{ PartialRouter.displayName ||= 'PartialRouter' } catch {}","// Think of this as the entry point into the framework\nimport React from 'react'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {BaseProviders} from './BaseProviders'\nimport type {BrowserHistory} from '@remix-run/router'\nimport {createMemoryHistory} from '@remix-run/router'\nimport {AppContextProvider} from './AppContextProvider'\nimport {PartialRouter} from './PartialRouter'\nimport {CommonElements} from './CommonElements'\nimport {createBrowserHistory} from './create-browser-history'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {usePartialAnchorProps} from './react-partial-anchor'\n\ninterface Props {\n  partialName: string\n  embeddedData: EmbeddedPartialData\n  Component: React.ComponentType\n  wasServerRendered: boolean\n  ssrError?: HTMLScriptElement\n  anchorElement?: ReactPartialAnchorElement | null\n}\n\nexport function PartialEntry({\n  partialName,\n  embeddedData,\n  Component,\n  wasServerRendered,\n  ssrError,\n  anchorElement,\n}: Props) {\n  // Create a ref to track the browser history:\n  const historyRef = React.useRef<BrowserHistory>()\n  const window = globalThis.window as Window | undefined\n\n  // For linking to work, we can just pass a dummy pathname here. We may consider plumbing the actual path in\n  if (!historyRef.current) {\n    historyRef.current = !window\n      ? createMemoryHistory({initialEntries: [{pathname: '/'}]})\n      : createBrowserHistory({window})\n  }\n  const history = historyRef.current\n  const partialAnchorProps = usePartialAnchorProps(anchorElement)\n\n  // Wrap the partial in an AppContextProvider and static Router so that react-core links\n  // will be functional.\n  return (\n    <BaseProviders appName={partialName} wasServerRendered={wasServerRendered}>\n      <AppContextProvider history={history} routes={[]}>\n        <PartialRouter history={history}>\n          <Component {...embeddedData.props} {...(partialAnchorProps as object)} />\n          <CommonElements ssrError={ssrError} />\n        </PartialRouter>\n      </AppContextProvider>\n    </BaseProviders>\n  )\n}\n\ntry{ PartialEntry.displayName ||= 'PartialEntry' } catch {}","import {target} from '@github/catalyst'\nimport {createRoot, hydrateRoot} from 'react-dom/client'\nimport type {createRoot as createRootType, hydrateRoot as hydrateRootType, Root} from 'react-dom/client'\nimport React from 'react'\nimport ReactProfilingMode from '@github-ui/react-profiling-mode'\nimport {EXPECTED_ERRORS} from './expected-errors'\nimport {sendStats} from '@github-ui/stats'\n\ntype ReactDOM = {\n  createRoot: typeof createRootType\n  hydrateRoot: typeof hydrateRootType\n}\n\nconst REACT_INVARIANT_ERROR_REGEX = /Minified React error #(?<invariant>\\d+)/\n\nexport abstract class ReactBaseElement<T> extends HTMLElement {\n  @target embeddedData: HTMLScriptElement | undefined\n  @target ssrError: HTMLScriptElement | undefined\n  @target reactRoot: HTMLElement | undefined\n  private root: Root | undefined\n\n  abstract nameAttribute: string\n  abstract getReactNode(embeddedData: T): Promise<React.ReactNode>\n\n  protected get name() {\n    return this.getAttribute(this.nameAttribute) as string\n  }\n\n  private get embeddedDataText() {\n    const text = this.embeddedData?.textContent\n\n    if (!text) {\n      throw new Error(`No embedded data provided for react element ${this.name}`)\n    }\n\n    return text\n  }\n\n  get hasSSRContent() {\n    return this.getAttribute('data-ssr') === 'true'\n  }\n\n  connectedCallback() {\n    this.renderReact()\n  }\n\n  disconnectedCallback() {\n    this.root?.unmount()\n    this.root = undefined\n  }\n\n  private async renderReact() {\n    if (!this.reactRoot) throw new Error('No react root provided')\n    let reactDom: ReactDOM = {\n      createRoot,\n      hydrateRoot,\n    }\n\n    // Override the react-dom import if we're in profiling mode\n    if (ReactProfilingMode.isEnabled()) {\n      reactDom = await this.getReactDomWithProfiling()\n    }\n\n    const embeddedData = JSON.parse(this.embeddedDataText) as T\n    const ssrErrorText = this.ssrError?.textContent\n    const node = await this.getReactNode(embeddedData)\n    const baseNode = <React.StrictMode>{node}</React.StrictMode>\n\n    if (ssrErrorText) {\n      this.logSSRError(ssrErrorText)\n    }\n\n    if (this.hasSSRContent) {\n      /**\n       * Styled-components automatically looks for style tags to hydrate on first page load, but will not detect them\n       * if they are added after the initial page load. This causes a hydration error because React isn't expecting\n       * a style tag within the app. To work around this, we need to manually move the style tags to the head before\n       * hydrating the app.\n       *\n       * During hydration, styled-components will create a new style tag which matches the one we moved to the head.\n       * This means that after hydration, we can safely remove the style tag we manually moved to the head.\n       */\n      const styles = this.querySelector('style[data-styled=\"true\"]')\n      if (styles) document.head.appendChild(styles)\n\n      // Hydrate the react app\n      // onRecoverableError is disabled until we have a react version with this fix in:\n      // https://github.com/facebook/react/pull/25692\n      this.root = reactDom.hydrateRoot(this.reactRoot, baseNode, {\n        onRecoverableError: error => {\n          if (!(error instanceof Error)) return\n\n          const match = REACT_INVARIANT_ERROR_REGEX.exec(error.message)\n          const invariant = String(match?.groups?.invariant)\n\n          sendStats({\n            incrementKey: 'REACT_HYDRATION_ERROR',\n            incrementTags: {\n              appName: this.name,\n              invariant,\n            },\n          })\n        },\n      })\n\n      // Remove the manually moved style tag after hydration\n      if (styles) {\n        // Wait until things are idle to remove the style tag. If we do it immediately, we can cause a flash of unstyled content.\n        requestIdleCallback(() => {\n          // styles could have already been removed by Turbo if a navigation happens quickly. Only remove it from the DOM if it's still there.\n          styles.parentElement?.removeChild(styles)\n        })\n      }\n    } else {\n      this.root = reactDom.createRoot(this.reactRoot)\n      this.root.render(baseNode)\n    }\n\n    this.classList.add('loaded')\n  }\n\n  private getReactDomWithProfiling() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return import('react-dom/profiling') as any as Promise<ReactDOM>\n  }\n\n  private logSSRError(ssrErrorText: string) {\n    if (EXPECTED_ERRORS[ssrErrorText]) {\n      // eslint-disable-next-line no-console\n      return console.error('SSR failed with an expected error:', EXPECTED_ERRORS[ssrErrorText])\n    }\n\n    try {\n      const error = JSON.parse(ssrErrorText) as PlatformJavascriptError\n      const stacktrace = parseFailbotStacktrace(error)\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', `${error.type}: ${error.value}\\n`, error, stacktrace)\n    } catch {\n      /**\n       * In the event we couldn't log the error, we should not break the application\n       */\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', ssrErrorText, 'unable to parse as json')\n    }\n  }\n}\n\nfunction parseFailbotStacktrace(error: PlatformJavascriptError) {\n  if (!error.stacktrace) return ''\n  let prefix = '\\n '\n  const stack = error.stacktrace.map((frame: PlatformStackframe) => {\n    const {function: func, filename, lineno, colno} = frame\n    const line = `${prefix} at ${func} (${filename}:${lineno}:${colno})`\n    prefix = ' '\n    return line\n  })\n  return stack.join('\\n')\n}\n\ntry{ REACT_INVARIANT_ERROR_REGEX.displayName ||= 'REACT_INVARIANT_ERROR_REGEX' } catch {}"],"names":["fire","target","name","cancelable","dispatchEvent","CustomEvent","bubbles","requestSubmit","form","submitter","checkButtonValidity","HTMLFormElement","HTMLElement","type","persistSubmitButtonValue","submit","changeValue","input","value","HTMLInputElement","checked","fillFormValues","fields","element","elements","namedItem","HTMLTextAreaElement","isFormField","nodeName","toLowerCase","getAttribute","isContentEditable","searchParamsFromFormData","formData","URLSearchParams","combineGetFormSearchParams","formAction","allSearchParams","search","key","append","toString","serialize","FormData","button","closest","findPersistedSubmitButtonValue","defaultValue","matches","document","createElement","classList","add","prepend","remove","querySelector","NetworkConfigurationConsts","networkConfigurations","networkConfigurationsDescription","learnMore","learnMoreLink","NetworkConfigurationsSelectPanel","selectedNetworkConfig","isReadonly","isUpdate","formId","noNetworkConfig","NetworkConfiguration","ComputeService","Actions","currentNetworkConfig","selected","setSelected","useState","currentNetworkConfigIsDisabled","computeService","shouldSubmit","setShouldSubmit","searchText","setSearchText","filtered_networks","filter","item","includes","onSelectChange","inputElement","id","event","Event","useEffect","getElementById","article","Heading","as","sx","fontSize","fontWeight","p","className","Link","inline","href","FormControl","Label","visuallyHidden","SelectPanel","title","selectionVariant","Button","disabled","trailingVisual","TriangleDownIcon","Header","SearchInput","onChange","e","length","Message","variant","span","ActionList","map","Item","role","aria-checked","onSelect","Divider","Group","GroupHeading","Validation","hidden","readOnly","displayName","registerReactPartial","Component","constructor","createdOn","service","runnerGroups","DeferredRegistry","register","registration","entry","registrationEntries","resolve","promise","Promise","getRegistration","Deferred","usePartialAnchorProps","anchorElement","anchor","reactPartialAnchor","__wrapperElement","useExternalAnchor","ref","useRef","open","setOpen","onClick","useCallback","current","setAttribute","useOnAnchorClick","addEventListener","removeEventListener","partialRegistry","ReactPartialElement","ReactBaseElement","getReactNode","embeddedData","appName","PartialEntry","partialName","wasServerRendered","hasSSRContent","ssrError","nameAttribute","controller","getItem","setItem","removeItem","safeStorage","REACT_PROFILING_ENABLED","enable","disable","isEnabled","PartialRouter","children","history","state","setState","location","useHydratedEffect","listen","Router","navigator","historyRef","React","window","globalThis","createBrowserHistory","createMemoryHistory","initialEntries","pathname","partialAnchorProps","BaseProviders","AppContextProvider","routes","props","CommonElements","REACT_INVARIANT_ERROR_REGEX","embeddedDataText","text","textContent","connectedCallback","renderReact","disconnectedCallback","root","unmount","undefined","reactRoot","reactDom","createRoot","hydrateRoot","ReactProfilingMode","getReactDomWithProfiling","JSON","parse","ssrErrorText","node","baseNode","logSSRError","styles","head","appendChild","onRecoverableError","error","Error","match","exec","message","invariant","String","groups","sendStats","incrementKey","incrementTags","requestIdleCallback","parentElement","removeChild","render","EXPECTED_ERRORS","console","stacktrace","parseFailbotStacktrace","prefix","stack","function","func","filename","lineno","colno","frame","line","join"],"sourceRoot":""}