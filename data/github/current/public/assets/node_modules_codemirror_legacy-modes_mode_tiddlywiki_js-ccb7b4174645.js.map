{"version":3,"file":"chunk-node_modules_codemirror_legacy-modes_mode_tiddlywiki_js-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@codemirror/legacy-modes/mode/tiddlywiki.js"],"sourcesContent":["// Tokenizer\nvar textwords = {};\n\nvar keywords = {\n  \"allTags\": true, \"closeAll\": true, \"list\": true,\n  \"newJournal\": true, \"newTiddler\": true,\n  \"permaview\": true, \"saveChanges\": true,\n  \"search\": true, \"slider\": true, \"tabs\": true,\n  \"tag\": true, \"tagging\": true, \"tags\": true,\n  \"tiddler\": true, \"timeline\": true,\n  \"today\": true, \"version\": true, \"option\": true,\n  \"with\": true, \"filter\": true\n};\n\nvar isSpaceName = /[\\w_\\-]/i,\n    reHR = /^\\-\\-\\-\\-+$/,                                 // <hr>\n    reWikiCommentStart = /^\\/\\*\\*\\*$/,            // /***\n    reWikiCommentStop = /^\\*\\*\\*\\/$/,             // ***/\n    reBlockQuote = /^<<<$/,\n\n    reJsCodeStart = /^\\/\\/\\{\\{\\{$/,                       // //{{{ js block start\n    reJsCodeStop = /^\\/\\/\\}\\}\\}$/,                        // //}}} js stop\n    reXmlCodeStart = /^<!--\\{\\{\\{-->$/,           // xml block start\n    reXmlCodeStop = /^<!--\\}\\}\\}-->$/,            // xml stop\n\n    reCodeBlockStart = /^\\{\\{\\{$/,                        // {{{ TW text div block start\n    reCodeBlockStop = /^\\}\\}\\}$/,                 // }}} TW text stop\n\n    reUntilCodeStop = /.*?\\}\\}\\}/;\n\nfunction chain(stream, state, f) {\n  state.tokenize = f;\n  return f(stream, state);\n}\n\nfunction tokenBase(stream, state) {\n  var sol = stream.sol(), ch = stream.peek();\n\n  state.block = false;        // indicates the start of a code block.\n\n  // check start of  blocks\n  if (sol && /[<\\/\\*{}\\-]/.test(ch)) {\n    if (stream.match(reCodeBlockStart)) {\n      state.block = true;\n      return chain(stream, state, twTokenCode);\n    }\n    if (stream.match(reBlockQuote))\n      return 'quote';\n    if (stream.match(reWikiCommentStart) || stream.match(reWikiCommentStop))\n      return 'comment';\n    if (stream.match(reJsCodeStart) || stream.match(reJsCodeStop) || stream.match(reXmlCodeStart) || stream.match(reXmlCodeStop))\n      return 'comment';\n    if (stream.match(reHR))\n      return 'contentSeparator';\n  }\n\n  stream.next();\n  if (sol && /[\\/\\*!#;:>|]/.test(ch)) {\n    if (ch == \"!\") { // tw header\n      stream.skipToEnd();\n      return \"header\";\n    }\n    if (ch == \"*\") { // tw list\n      stream.eatWhile('*');\n      return \"comment\";\n    }\n    if (ch == \"#\") { // tw numbered list\n      stream.eatWhile('#');\n      return \"comment\";\n    }\n    if (ch == \";\") { // definition list, term\n      stream.eatWhile(';');\n      return \"comment\";\n    }\n    if (ch == \":\") { // definition list, description\n      stream.eatWhile(':');\n      return \"comment\";\n    }\n    if (ch == \">\") { // single line quote\n      stream.eatWhile(\">\");\n      return \"quote\";\n    }\n    if (ch == '|')\n      return 'header';\n  }\n\n  if (ch == '{' && stream.match('{{'))\n    return chain(stream, state, twTokenCode);\n\n  // rudimentary html:// file:// link matching. TW knows much more ...\n  if (/[hf]/i.test(ch) &&\n      /[ti]/i.test(stream.peek()) &&\n      stream.match(/\\b(ttps?|tp|ile):\\/\\/[\\-A-Z0-9+&@#\\/%?=~_|$!:,.;]*[A-Z0-9+&@#\\/%=~_|$]/i))\n    return \"link\";\n\n  // just a little string indicator, don't want to have the whole string covered\n  if (ch == '\"')\n    return 'string';\n\n  if (ch == '~')    // _no_ CamelCase indicator should be bold\n    return 'brace';\n\n  if (/[\\[\\]]/.test(ch) && stream.match(ch)) // check for [[..]]\n    return 'brace';\n\n  if (ch == \"@\") {    // check for space link. TODO fix @@...@@ highlighting\n    stream.eatWhile(isSpaceName);\n    return \"link\";\n  }\n\n  if (/\\d/.test(ch)) {        // numbers\n    stream.eatWhile(/\\d/);\n    return \"number\";\n  }\n\n  if (ch == \"/\") { // tw invisible comment\n    if (stream.eat(\"%\")) {\n      return chain(stream, state, twTokenComment);\n    } else if (stream.eat(\"/\")) { //\n      return chain(stream, state, twTokenEm);\n    }\n  }\n\n  if (ch == \"_\" && stream.eat(\"_\")) // tw underline\n    return chain(stream, state, twTokenUnderline);\n\n  // strikethrough and mdash handling\n  if (ch == \"-\" && stream.eat(\"-\")) {\n    // if strikethrough looks ugly, change CSS.\n    if (stream.peek() != ' ')\n      return chain(stream, state, twTokenStrike);\n    // mdash\n    if (stream.peek() == ' ')\n      return 'brace';\n  }\n\n  if (ch == \"'\" && stream.eat(\"'\")) // tw bold\n    return chain(stream, state, twTokenStrong);\n\n  if (ch == \"<\" && stream.eat(\"<\")) // tw macro\n    return chain(stream, state, twTokenMacro);\n\n  // core macro handling\n  stream.eatWhile(/[\\w\\$_]/);\n  return textwords.propertyIsEnumerable(stream.current()) ? \"keyword\" : null\n}\n\n// tw invisible comment\nfunction twTokenComment(stream, state) {\n  var maybeEnd = false, ch;\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"%\");\n  }\n  return \"comment\";\n}\n\n// tw strong / bold\nfunction twTokenStrong(stream, state) {\n  var maybeEnd = false,\n      ch;\n  while (ch = stream.next()) {\n    if (ch == \"'\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"'\");\n  }\n  return \"strong\";\n}\n\n// tw code\nfunction twTokenCode(stream, state) {\n  var sb = state.block;\n\n  if (sb && stream.current()) {\n    return \"comment\";\n  }\n\n  if (!sb && stream.match(reUntilCodeStop)) {\n    state.tokenize = tokenBase;\n    return \"comment\";\n  }\n\n  if (sb && stream.sol() && stream.match(reCodeBlockStop)) {\n    state.tokenize = tokenBase;\n    return \"comment\";\n  }\n\n  stream.next();\n  return \"comment\";\n}\n\n// tw em / italic\nfunction twTokenEm(stream, state) {\n  var maybeEnd = false,\n      ch;\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"/\");\n  }\n  return \"emphasis\";\n}\n\n// tw underlined text\nfunction twTokenUnderline(stream, state) {\n  var maybeEnd = false,\n      ch;\n  while (ch = stream.next()) {\n    if (ch == \"_\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"_\");\n  }\n  return \"link\";\n}\n\n// tw strike through text looks ugly\n// change CSS if needed\nfunction twTokenStrike(stream, state) {\n  var maybeEnd = false, ch;\n\n  while (ch = stream.next()) {\n    if (ch == \"-\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"-\");\n  }\n  return \"deleted\";\n}\n\n// macro\nfunction twTokenMacro(stream, state) {\n  if (stream.current() == '<<') {\n    return 'meta';\n  }\n\n  var ch = stream.next();\n  if (!ch) {\n    state.tokenize = tokenBase;\n    return null;\n  }\n  if (ch == \">\") {\n    if (stream.peek() == '>') {\n      stream.next();\n      state.tokenize = tokenBase;\n      return \"meta\";\n    }\n  }\n\n  stream.eatWhile(/[\\w\\$_]/);\n  return keywords.propertyIsEnumerable(stream.current()) ? \"keyword\" : null\n}\n\n// Interface\nexport const tiddlyWiki = {\n  name: \"tiddlywiki\",\n\n  startState: function () {\n    return {tokenize: tokenBase};\n  },\n\n  token: function (stream, state) {\n    if (stream.eatSpace()) return null;\n    var style = state.tokenize(stream, state);\n    return style;\n  }\n};\n\n"],"names":["textwords","keywords","isSpaceName","reHR","reWikiCommentStart","reWikiCommentStop","reBlockQuote","reJsCodeStart","reJsCodeStop","reXmlCodeStart","reXmlCodeStop","reCodeBlockStart","reCodeBlockStop","reUntilCodeStop","chain","stream","state","f","tokenize","tokenBase","sol","ch","peek","block","test","match","twTokenCode","next","skipToEnd","eatWhile","eat","twTokenComment","twTokenEm","twTokenUnderline","twTokenStrike","twTokenStrong","twTokenMacro","propertyIsEnumerable","current","maybeEnd","sb","tiddlyWiki","name","startState","token","eatSpace"],"sourceRoot":""}