# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::Entities::RepositoryAction`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::Entities::RepositoryAction`.

class Hydro::Schemas::Github::V1::Entities::RepositoryAction
  sig do
    params(
      action_is_featured: T.nilable(T::Boolean),
      action_is_public: T.nilable(T::Boolean),
      color: T.nilable(String),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      description: T.nilable(String),
      icon_name: T.nilable(String),
      id: T.nilable(Integer),
      name: T.nilable(String),
      path: T.nilable(String),
      readme: T.nilable(String),
      repository_id: T.nilable(Integer)
    ).void
  end
  def initialize(action_is_featured: nil, action_is_public: nil, color: nil, created_at: nil, description: nil, icon_name: nil, id: nil, name: nil, path: nil, readme: nil, repository_id: nil); end

  sig { returns(T::Boolean) }
  def action_is_featured; end

  sig { params(value: T::Boolean).void }
  def action_is_featured=(value); end

  sig { returns(T::Boolean) }
  def action_is_public; end

  sig { params(value: T::Boolean).void }
  def action_is_public=(value); end

  sig { void }
  def clear_action_is_featured; end

  sig { void }
  def clear_action_is_public; end

  sig { void }
  def clear_color; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_description; end

  sig { void }
  def clear_icon_name; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_path; end

  sig { void }
  def clear_readme; end

  sig { void }
  def clear_repository_id; end

  sig { returns(String) }
  def color; end

  sig { params(value: String).void }
  def color=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(String) }
  def description; end

  sig { params(value: String).void }
  def description=(value); end

  sig { returns(String) }
  def icon_name; end

  sig { params(value: String).void }
  def icon_name=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(String) }
  def path; end

  sig { params(value: String).void }
  def path=(value); end

  sig { returns(String) }
  def readme; end

  sig { params(value: String).void }
  def readme=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end
end
