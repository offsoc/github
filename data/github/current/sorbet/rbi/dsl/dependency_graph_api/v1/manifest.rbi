# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `DependencyGraphAPI::V1::Manifest`.
# Please instead update this file by running `bin/tapioca dsl DependencyGraphAPI::V1::Manifest`.

class DependencyGraphAPI::V1::Manifest
  sig do
    params(
      dependencies: T.nilable(T.any(Google::Protobuf::RepeatedField[DependencyGraphAPI::V1::Manifest::Dependency], T::Array[DependencyGraphAPI::V1::Manifest::Dependency])),
      file_path: T.nilable(String),
      is_vendored: T.nilable(DependencyGraphAPI::V1::NullableBool),
      name: T.nilable(String),
      original_file_path: T.nilable(String),
      package_manager: T.nilable(T.any(Symbol, Integer)),
      snapshot_id: T.nilable(Integer),
      source: T.nilable(String),
      type: T.nilable(String)
    ).void
  end
  def initialize(dependencies: T.unsafe(nil), file_path: nil, is_vendored: nil, name: nil, original_file_path: nil, package_manager: nil, snapshot_id: nil, source: nil, type: nil); end

  sig { void }
  def clear_dependencies; end

  sig { void }
  def clear_file_path; end

  sig { void }
  def clear_is_vendored; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_original_file_path; end

  sig { void }
  def clear_package_manager; end

  sig { void }
  def clear_snapshot_id; end

  sig { void }
  def clear_source; end

  sig { void }
  def clear_type; end

  sig { returns(Google::Protobuf::RepeatedField[DependencyGraphAPI::V1::Manifest::Dependency]) }
  def dependencies; end

  sig { params(value: Google::Protobuf::RepeatedField[DependencyGraphAPI::V1::Manifest::Dependency]).void }
  def dependencies=(value); end

  sig { returns(String) }
  def file_path; end

  sig { params(value: String).void }
  def file_path=(value); end

  sig { returns(T.nilable(DependencyGraphAPI::V1::NullableBool)) }
  def is_vendored; end

  sig { params(value: T.nilable(DependencyGraphAPI::V1::NullableBool)).void }
  def is_vendored=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(String) }
  def original_file_path; end

  sig { params(value: String).void }
  def original_file_path=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def package_manager; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def package_manager=(value); end

  sig { returns(Integer) }
  def snapshot_id; end

  sig { params(value: Integer).void }
  def snapshot_id=(value); end

  sig { returns(String) }
  def source; end

  sig { params(value: String).void }
  def source=(value); end

  sig { returns(String) }
  def type; end

  sig { params(value: String).void }
  def type=(value); end
end
