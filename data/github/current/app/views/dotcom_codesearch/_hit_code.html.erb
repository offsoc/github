<%
  private_public_class = hit.private? ? "code-list-item-private" : "code-list-item-public"
  plural_match_string = "#{number_to_words(hit.number_of_matches)} #{'match'.pluralize(hit.number_of_matches)}"
%>
<div class="code-list-item col-12 py-4 <%= private_public_class %>">
  <div class="d-flex">
    <%= link_to image_tag(hit.repo_owner['avatar_url'], height: "48", alt: hit.owner_display_login, :class => "avatar flex-shrink-0 mr-2"), hit.repo_owner['html_url'] %>

    <div class="flex-auto min-width-0 col-10">
      <%= link_to hit.repo_nwo, hit.repo_link, :class => "text-bold" %>
      &#8211;
      <%= link_to hit.hl_filename, hit.file_url, :title => hit.path %>
      <div class="mb-2 d-flex d-md-block flex-column">
        <% if hit.number_of_matches > 0 %>
          <span class="text-small color-fg-muted match-count mr-md-2">Showing the top <%= plural_match_string %></span>
        <% end %>
        <span class="f6 color-fg-muted updated-at">Last indexed <%= time_ago_in_words_js hit.last_modified_at %></span>
      </div>
    </div>

    <% if language = Linguist::Language[hit.language] %>
      <span class="flex-shrink-0 f6 color-fg-muted">
        <%= language.name %>
      </span>
    <% end %>
  </div>


  <% if hit.has_file_highlights? %>
    <div class="file-box blob-wrapper">
      <table class="highlight">
        <%= render :partial => "dotcom_codesearch/hit_code_fragment", :collection => hit.highlights, :as => :highlight, :spacer_template => "codesearch/hit_code_fragment_divider", :locals => { :file_link => hit.file_url } %>
      </table>
    </div>
  <% elsif hit.has_path_highlights? %>
    <p class="full-path">
      <% if hit.private? %>
        <%= primer_octicon(:lock) %>
      <% else %>
        <%= render(Primer::Beta::Octicon.new(icon: "repo")) %>
      <% end %>
      <%= link_to hit.hl_path, hit.file_url %>
    </p>
  <% end %>
</div>
