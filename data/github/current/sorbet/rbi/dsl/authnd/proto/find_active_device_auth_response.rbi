# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Authnd::Proto::FindActiveDeviceAuthResponse`.
# Please instead update this file by running `bin/tapioca dsl Authnd::Proto::FindActiveDeviceAuthResponse`.

class Authnd::Proto::FindActiveDeviceAuthResponse
  sig do
    params(
      challenge_required: T.nilable(T::Boolean),
      created_at_utc: T.nilable(Google::Protobuf::Timestamp),
      device_display_name: T.nilable(String),
      has_valid_device_key: T.nilable(T::Boolean),
      id: T.nilable(Integer),
      ip_address: T.nilable(String),
      payload: T.nilable(String),
      result: T.nilable(T.any(Symbol, Integer)),
      type: T.nilable(String)
    ).void
  end
  def initialize(challenge_required: nil, created_at_utc: nil, device_display_name: nil, has_valid_device_key: nil, id: nil, ip_address: nil, payload: nil, result: nil, type: nil); end

  sig { returns(T::Boolean) }
  def challenge_required; end

  sig { params(value: T::Boolean).void }
  def challenge_required=(value); end

  sig { void }
  def clear_challenge_required; end

  sig { void }
  def clear_created_at_utc; end

  sig { void }
  def clear_device_display_name; end

  sig { void }
  def clear_has_valid_device_key; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_ip_address; end

  sig { void }
  def clear_payload; end

  sig { void }
  def clear_result; end

  sig { void }
  def clear_type; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at_utc; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at_utc=(value); end

  sig { returns(String) }
  def device_display_name; end

  sig { params(value: String).void }
  def device_display_name=(value); end

  sig { returns(T::Boolean) }
  def has_valid_device_key; end

  sig { params(value: T::Boolean).void }
  def has_valid_device_key=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(String) }
  def ip_address; end

  sig { params(value: String).void }
  def ip_address=(value); end

  sig { returns(String) }
  def payload; end

  sig { params(value: String).void }
  def payload=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def result; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def result=(value); end

  sig { returns(String) }
  def type; end

  sig { params(value: String).void }
  def type=(value); end
end
