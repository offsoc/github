{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "https://github.com/schemas/internal/scientist-result",
  "title": "Scientist::Result",
  "description": "A serialized Scientist::Result describing an executed experiment",
  "type": "object",
  "definitions": {
    "outcome": {
      "description": "An experiment outcome",
      "enum" : ["match", "ignore", "mismatch"]
    },
    "contextData": {
      "description": "Additional context associated with the experiment",
      "type": "object",
      "properties": {
        "hostname": {
          "description": "The hostname where the experiment result was recorded",
          "type": "string"
        },
        "pid": {
          "description": "The process id that recorded the experiment result",
          "type": "integer",
          "minimum": 1,
          "multiple": 1
        },
        "timestamp_epoch": {
          "description": "The time the result was recorded in (possibly fractional) seconds since 1970-01-01T00:00:00Z",
          "type": "number",
          "minimum": 0
        }
      },
      "required": ["hostname", "pid", "timestamp_epoch"],
      "additionalProperties": true
    },
    "executionOrder": {
      "description": "The order in which observations were randomly executed",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": { "type": "string" }
    },
    "backtraceType": {
      "description": "A function call stack recording execution state, e.g. for an exception",
      "type": [ "array", "null" ],
      "items": { "type": "string" },
      "minItems": 1
    },
    "exceptionType": {
      "description": "An exception that occurred during an observation",
      "type": "object",
      "properties": {
        "class": { "type": "string" },
        "message": { "type": [ "string", "null" ] },
        "backtrace": { "type": "string" }
      },
      "required": [ "class", "message", "backtrace" ],
      "additionalProperties": false
    },
    "valueObservation": {
      "description": "An observation which raised no exception and returned a (possibly nil) value",
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "duration_ms": {
          "type": "number",
          "minimum": 0
        },
        "value": {
          "description": "Can be literally anything"
        },
        "exception": { "enum": [ null ] }
      },
      "required": [ "name", "duration_ms", "value", "exception" ],
      "additionalProperties": false
    },
    "exceptionObservation": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "duration_ms": { "type": "number" },
        "value": {
          "description": "must be null since no value can be produced if an exception occurred",
          "enum": [ null ]
        },
        "exception": { "$ref": "#/definitions/exception" }
      },
      "required": [ "name", "duration_ms", "value", "exception" ],
      "additionalProperties": false
    }
  },
  "properties": {
    "name": { "type": "string" },
    "outcome": { "$ref": "#/definitions/outcome" },
    "context": { "$ref": "#/definitions/contextData" },
    "execution_order": { "$ref": "#/definitions/executionOrder" },
    "observations": {
      "description": "Data about the execution of each step of the experiment",
      "type": "array",
      "minItems": 1,
      "items": {
        "oneOf": [
          { "$ref": "#/definitions/valueObservation" },
          { "$ref": "#/definitions/exceptionObservation" }
        ]
      }
    }
  },
  "required": [ "name", "outcome", "context", "execution_order", "observations" ],
  "additionalProperties": false
}
