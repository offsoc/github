<%= render Primer::BaseComponent.new(
  tag: :div,
  test_selector: "reactions-container",
  **system_arguments
) do %>
  <% if viewer_can_react? && show_reaction_selector %>
    <%= render Reactions::DropdownComponent.new(
      target_global_relay_id: target_global_relay_id,
      available_emotions: available_emotions,
      reaction_path: reaction_path,
      viewer_reactions: viewer_reactions,
      form_context: form_context,
      popover_direction: popover_direction,
      focus: reactions_focus_index == -1,
      data: @selector_data,
    ) %>
  <% end %>
  <%= form_tag reaction_path, method: :put, class: "js-pick-reaction" do %>
    <input type="hidden" name="input[subjectId]" value="<%= target_global_relay_id %>">
    <% form_context.each do |key, value| %>
      <input type="hidden" name="input[<%= key %>]" value="<%= value %>" <%= test_selector("reactions-input-#{key}") %>>
    <% end %>
    <div <%= test_selector("reactions-options") %> class="js-comment-reactions-options d-flex flex-items-center flex-row flex-wrap">
      <% Emotion.all.each_with_index do |emotion, idx| %>
        <% reaction = reactions_to_render.find { |reaction| reaction[:emotion].content == emotion.content } %>
        <% next unless reaction %>
        <%= render Reactions::ReactionButtonComponent.new(
          disabled: !viewer_can_react?,
          emotion: emotion,
          index: idx,
          mr: 2,
          user_has_reacted: reacted_to?(emotion.content),
          test_selector: "#{emotion.content}-reaction-button-#{target_global_relay_id}",
          data: reaction[:data],
          title: reaction[:title],
          aria: reaction[:aria],
          focus: reactions_focus_index == idx
        ) do %>
          <%= emoji_tag(emotion.emoji_character, alias: emotion.content, class: "social-button-emoji") %>
          <% if reaction[:count] %>
            <span class="js-discussion-reaction-group-count"><%= reaction[:count] %></span>
          <% end %>
        <% end %>
      <% end %>
      <div class="js-reactions-container">
        <details class="dropdown details-reset details-overlay d-inline-block js-all-reactions-popover" hidden>
          <%= render Primer::Beta::Button.new(tag: :summary, scheme: :link, "aria-haspopup": "true") do %>

            All reactions
          <% end %>

          <ul class="dropdown-menu dropdown-menu-se">
           <% reactions_to_render.each_with_index do |reaction, idx| %>
              <% emotion = reaction[:emotion] %>
              <li class="dropdown-item" aria-label="<%= reaction[:title] %>">
                <%= emoji_tag(emotion.emoji_character, alias: emotion.content, class: "social-button-emoji mr-2") %>
                <% if reaction[:count] %>
                  <span><%= pluralize(reaction[:count], "reaction") %></span>
                <% end %>
              </li>
            <% end %>
          </ul>
        </details>
      </div>
    </div>
  <% end %>
  <% if summary.present? %>
    <%= summary %>
  <% end %>
<% end %>
