<%# erblint:counter DeprecatedComponentsCounter 1 %>
<%# erblint:counter ButtonComponentMigrationCounter 1 %>

<% if data.secret_scanning_show_free_experience %>
  <div class="d-flex flex-md-row flex-column flex-md-items-center pb-3 pt-3 color-border-muted" <%= test_selector("secret-scanning-settings") %>>
    <div class="mb-md-0 mb-2 flex-auto col-md-10">
      <h3>Secret scanning</h3>
      <p class="mb-0 color-fg-muted">
          GitHub will always send alerts to partners for detected secrets in public repositories.
        <%= link_to "Learn more about partner patterns", helpers.docs_url("code-security/about-secret-scanning-for-partner-patterns"), class: "Link--inTextBlock" %>.
      </p>
    </div>
    <div>
      <div class="BtnGroup flex-auto">
        <%= render Primer::Beta::Button.new(test_selector: "secret-scanning-button-disabled", "aria-disabled": "true", "aria-label": "Disable secret scanning", scheme: :danger, px: 3) do %>
          Disable
        <% end %>
      </div>
    </div>
  </div> <%# End secret scanning free %>
<% elsif data.secret_scanning_show_ghas_experience %>
  <div class="d-flex flex-md-row flex-column flex-md-items-center mb-3 pt-2 color-border-muted border-bottom" <%= test_selector("secret-scanning-settings") %>>
    <div class="mb-md-0 mb-2 flex-auto col-md-10">
      <h3>Secret scanning</h3>
      <p>Receive alerts on GitHub for detected secrets, keys, or other tokens.</p>
      <% if data.secret_scanning_public_scanning_enabled %>
        <p class="mb-0 color-fg-muted text-small">
          GitHub will always send alerts to partners for detected secrets in public repositories.
          <%= link_to "Learn more about partner patterns", "#{GitHub.help_url}/enterprise-cloud@latest/code-security/secret-scanning/about-secret-scanning#about-secret-scanning-for-partner-patterns", class: "Link--inTextBlock" %>.
        </p>
      <% end %>
      <% if has_mixed_restrictions? %>
        <% if restricted_by_enterprise_policy? %>
          <%= render(SecurityProductsEnablement::RepositoryCodeSecurityPolicyNotificationComponent.new(business, mt: 1, mb: 2)) %>
        <% elsif restricted_by_security_configuration? %>
          <%= render(SecurityProductsEnablement::RepositoryCodeSecurityPolicyNotificationComponent.new(helpers.owner, mt: 1, mb: 2)) %>
        <% end %>
      <% end %>
    </div>
    <div>
      <div class="BtnGroup flex-auto">
        <% secret_scanning_enablement_action = is_currently_enabled? ? "Disable" : "Enable" %>
        <% if restricted? %>
          <div class="BtnGroup flex-auto">
            <div <%= test_selector("secret-scanning-restricted-status") %>>
              <%= render Primer::Beta::Octicon.new(:"shield-lock", color: :muted) if display_shield_icon? %>
              <% if is_currently_enabled? %>
                Enabled
              <% else %>
                Disabled
              <% end %>
            </div>
          </div>
        <% elsif data.secret_scanning_blocked_by_in_progress_setting %>
          <%= render Primer::Beta::Button.new(
            aria: { disabled: true, label: "#{secret_scanning_enablement_action} secret scanning" },
            scheme: secret_scanning_enablement_action == "Enable" ? :default : :danger,
            test_selector: "secret-scanning-button-disabled-by-security-product-toggling-in-progress",
            title: "Org-level toggling in progress"
          ).with_content(secret_scanning_enablement_action) %>
        <% else %>
          <%= form_tag update_security_products_settings_path, method: :put do %>
            <% if data.secret_scanning_show_requires_ghas %>
              <button
                <%= test_selector("secret-scanning-button-disabled-by-ghas") %>
                type="button"
                aria-disabled="true"
                aria-label="Enable secret scanning"
                class="btn"
                title="Advanced Security must be enabled on this repository to use secret scanning"><%# erblint:disable GitHub::Accessibility::NoTitleAttribute %>
                Enable
              </button>
            <% elsif is_currently_enabled? %>
              <input type="hidden" name="token_scanning_enabled" value="0">
              <%= render Primer::Beta::Button.new(
                type: :submit,
                scheme: :danger,
                "aria-label": "Disable secret scanning",
                data: {
                  **analytics_click_attributes(
                    category: "repository_settings",
                    action: "token_scanning.disable"
                  )},
                px: 3,
                ) do %>
                Disable
              <% end %>
            <% else %>
              <input type="hidden" name="token_scanning_enabled" value="1">
              <%= render Primer::Beta::Button.new(
                type: :submit,
                "aria-label": "Enable secret scanning",
                data: {
                  **analytics_click_attributes(
                    category: "repository_settings",
                    action: "token_scanning.enable"
                  )},
                px: 3,
                ) do %>
                Enable
              <% end %>
            <% end %>
          <% end %>
        <% end %>
      </div>
    </div>
  </div>

  <%# Original validity checks checkbox%>
  <% if data.secret_scanning_validity_checks_visible && !validity_checks_show_new_button? %>
    <div class="pb-3">
      <div class="d-flex flex-md-row flex-column flex-md-items-center" <%= test_selector("validity-checks-settings") %>>
        <%= form_tag data.update_security_products_settings_path, method: :put, class: "js-repo-features-form" do %>
          <div class="js-repo-option form-checkbox my-0" <%= test_selector("validity-checks-settings-toggle")%>>
            <input type="hidden" name="token_scanning_validity_checks_enabled" value="0">
            <input type="checkbox" name="token_scanning_validity_checks_enabled" value="1"
              id="token_scanning_validity_checks_enabled"
              <%= data.secret_scanning_validity_checks_enabled ? 'checked' : '' %>
              <%= data.secret_scanning_validity_checks_checkbox_disabled ? 'disabled' : '' %>
              <%= test_selector("validity-checks-settings-checkbox")%>
              data-autosubmit="true">
            <label for="token_scanning_validity_checks_enabled" <%= test_selector("validity-checks-settings-toggle-label") %>>
              Automatically
              <%= render(Primer::Beta::Link.new(href: helpers.docs_url("code-security/supported-secret-scanning-patterns-supported-secrets", ghec: true), classes: "Link--inTextBlock")) { "verify if a secret is valid" } %>
              by sending it to the relevant partner
            </label>
            <span class="status-indicator ml-1 js-status-indicator">
              <%= primer_octicon(:check) %>
              <%= primer_octicon(:x) %>
            </span>
          </div>
        <% end %>
      </div>
      <% if data.secret_scanning_validity_checks_enabled_by_business %>
        <div class="text-small color-fg-muted" <%= test_selector("validity-checks-owner-override-label")%>>
          <%= primer_octicon(:"shield-lock") %>
          This setting has been set by enterprise administrators.
        </div>
      <% elsif data.secret_scanning_validity_checks_enabled_by_org %>
        <div class="text-small color-fg-muted" <%= test_selector("validity-checks-owner-override-label")%>>
          <%= primer_octicon(:"shield-lock") %>
          This setting has been set by organization administrators.
        </div>
      <% elsif restricted_by_enterprise_policy? %>
        <%= render(SecurityProductsEnablement::RepositoryCodeSecurityPolicyNotificationComponent.new(business, mt: 1, mb: 2)) %>
      <% end %>
    </div>
  <% end %>

  <%# Original non-provider patterns checkbox%>
  <% if data.secret_scanning_lower_confidence_patterns_visible && !lower_confidence_patterns_show_new_button? %>
    <div class="pb-3">
      <div class="d-flex flex-md-row flex-column flex-md-items-center" <%= test_selector("lower-confidence-patterns-settings") %>>
        <%= form_tag data.update_security_products_settings_path, method: :put, class: "js-repo-features-form" do %>
          <div class="js-repo-option form-checkbox my-0" <%= test_selector("lower-confidence-patterns-settings-toggle")%>>
            <input type="hidden" name="token_scanning_lower_confidence_patterns_enabled" value="0">
            <input type="checkbox" name="token_scanning_lower_confidence_patterns_enabled" value="1"
              id="token_scanning_lower_confidence_patterns_enabled"
              <%= data.secret_scanning_lower_confidence_patterns_enabled ? 'checked' : '' %>
              <%= data.secret_scanning_lower_confidence_patterns_checkbox_disabled ? 'disabled' : '' %>
              <%= test_selector("lower-confidence-patterns-settings-checkbox")%>
              data-autosubmit="true">
            <label for="token_scanning_lower_confidence_patterns_enabled" <%= test_selector("lower-confidence-patterns-settings-toggle-label") %>>
              Scan for non-provider patterns
            </label>
            <%= render GitHub::BetaFlagComponent.new(px: 2) %>
            <span class="status-indicator ml-1 js-status-indicator">
              <%= primer_octicon(:check) %>
              <%= primer_octicon(:x) %>
            </span>
          </div>
        <% end %>
      </div>
      <div class="text-small color-fg-muted form-checkbox my-0">
        <%= render(Primer::Beta::Link.new(href: helpers.docs_url("code-security/supported-secret-scanning-patterns-supported-secrets", ghec: true), classes: "Link--inTextBlock")) { "Learn more about non-provider patterns" } %>
      </div>
      <% if data.secret_scanning_lower_confidence_patterns_enabled_by_enterprise %>
        <div class="text-small color-fg-muted">
          <%= primer_octicon(:"shield-lock") %>
          This setting has been set by enterprise administrators.
        </div>
      <% elsif data.secret_scanning_lower_confidence_patterns_enabled_by_organization %>
        <div class="text-small color-fg-muted">
          <%= primer_octicon(:"shield-lock") %>
          This setting has been set by organization administrators.
        </div>
      <% elsif restricted_by_enterprise_policy? %>
        <%= render(SecurityProductsEnablement::RepositoryCodeSecurityPolicyNotificationComponent.new(business, mt: 1, mb: 2)) %>
      <% end %>
    </div>
  <% end %>

  <% if data.secret_scanning_generic_secrets_visible %>
    <div class="pb-3">
      <div class="d-flex flex-md-row flex-column flex-md-items-center" <%= test_selector("generic-secrets-settings") %>>
        <%= form_tag data.update_security_products_settings_path, method: :put, class: "js-repo-features-form" do %>
          <div class="js-repo-option form-checkbox my-0" <%= test_selector("generic-secrets-settings-toggle")%>>
            <input type="hidden" name="token_scanning_generic_secrets_enabled" value="0">
            <input type="checkbox" name="token_scanning_generic_secrets_enabled" value="1"
              id="token_scanning_generic_secrets_enabled"
              <%= data.secret_scanning_generic_secrets_enabled ? 'checked' : '' %>
              <%= data.secret_scanning_generic_secrets_checkbox_disabled ? 'disabled' : '' %>
              <%= test_selector("generic-secrets-settings-checkbox")%>
              data-autosubmit="true">
            <label for="token_scanning_generic_secrets_enabled" <%= test_selector("generic-secrets-settings-toggle-label") %>>
              Use AI detection to find additional secrets
            </label>
            <%= render GitHub::BetaFlagComponent.new(px: 2) %>
            <span class="status-indicator ml-1 js-status-indicator">
              <%= primer_octicon(:check) %>
              <%= primer_octicon(:x) %>
            </span>
          </div>
        <% end %>
      </div>
      <div class="text-small color-fg-muted form-checkbox my-0">
        Use an AI model to detect additional secrets beyond the secrets detected with regular expressions.
      </div>
      <% if data.secret_scanning_generic_secrets_enabled_by_enterprise %>
        <div class="text-small color-fg-muted">
          <%= primer_octicon(:"shield-lock") %>
          This setting has been set by enterprise administrators.
        </div>
      <% elsif data.secret_scanning_generic_secrets_enabled_by_organization %>
        <div class="text-small color-fg-muted">
          <%= primer_octicon(:"shield-lock") %>
          This setting has been set by organization administrators.
        </div>
      <% elsif restricted_by_enterprise_policy? %>
        <%= render(SecurityProductsEnablement::RepositoryCodeSecurityPolicyNotificationComponent.new(business, mt: 1, mb: 2)) %>
      <% end %>
    </div>
  <% end %>

  <%# New validity checks enable/disable%>
  <% if data.secret_scanning_validity_checks_visible && validity_checks_show_new_button? %>
    <div class="pb-2">
      <%# SecurityProductsEnablement::RepositorySettings::SecretScanningValidityChecksComponent %>
      <%= render SecurityProductsEnablement::RepositorySettings::Manager.new(repository: current_repository, actor: current_user, data:).secret_scanning_validity_checks %> <%# rubocop:disable GitHub/RailsViewRenderLiteral %>
    </div>
  <% end%>

   <%# New non-provider patterns enable/disable%>
  <% if data.secret_scanning_lower_confidence_patterns_visible && lower_confidence_patterns_show_new_button? %>
    <div class="pb-2">
      <%# SecurityProductsEnablement::RepositorySettings::SecretScanningNonProviderPatternsComponent %>
      <%= render SecurityProductsEnablement::RepositorySettings::Manager.new(repository: current_repository, actor: current_user, data:).secret_scanning_non_provider_patterns %> <%# rubocop:disable GitHub/RailsViewRenderLiteral %>
    </div>
  <% end%>

  <%# SecurityProductsEnablement::RepositorySettings::SecretScanningPushProtectionComponent %>
  <%= render SecurityProductsEnablement::RepositorySettings::Manager.new(repository: current_repository, actor: current_user, data:).secret_scanning_push_protection %> <%# rubocop:disable GitHub/RailsViewRenderLiteral %>

  <% if data.secret_scanning_push_protection_enabled && data.secret_scanning_delegated_bypass_visible %>
    <%= render(SecretScanning::PushProtection::DelegatedBypassReviewersComponent.new(
      source: current_repository,
      current_user: current_user,
      enabled: data.secret_scanning_delegated_bypass_enabled,
      org_enabled: data.secret_scanning_delegated_bypass_enabled_by_organization,
      update_path: data.update_security_products_settings_path,
      add_reviewers_path: repository_secret_scanning_add_bypass_reviewer_path(current_repository.owner.display_login, current_repository),
      remove_reviewers_path: repository_secret_scanning_remove_bypass_reviewer_path(current_repository.owner.display_login, current_repository),
      suggested_reviewers_path: secret_scanning_bypass_reviewer_suggestions_path(current_repository.owner.display_login, current_repository),
    )) %>
  <% end # end delegated bypass %>

  <div class="pt-3">
    <% if data.secret_scanning_show_custom_patterns %>
      <% if flash[:custom_pattern_error_message] %>
        <%= render(Primer::Beta::Flash.new(scheme: :danger)) do %>
          <%= flash[:custom_pattern_error_message] %>
        <% end %>
      <% end %>
      <div>
        <%= render(SecretScanning::CustomPatterns::ListComponent.new(
          pattern_model: SecretScanning::CustomPatterns::ListComponent::RepoSecretScanningCustomPatternsModel.new(repo: current_repository, user: current_user, cursor: cursor, query: custom_patterns_query)
          )
        ) %>
      </div>
    <% end # end custom patterns %>
  </div>
<% end # end GHAS secret scanning %>
