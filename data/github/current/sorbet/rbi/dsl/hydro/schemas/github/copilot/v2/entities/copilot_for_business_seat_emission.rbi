# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessSeatEmission`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessSeatEmission`.

class Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessSeatEmission
  sig do
    params(
      business: T.nilable(Hydro::Schemas::Github::V1::Entities::Business),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      emission: T.nilable(String),
      id: T.nilable(Integer),
      occurred_at: T.nilable(Google::Protobuf::Timestamp),
      organization: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization),
      quantity: T.nilable(Float),
      unique_id: T.nilable(String)
    ).void
  end
  def initialize(business: nil, created_at: nil, emission: nil, id: nil, occurred_at: nil, organization: nil, quantity: nil, unique_id: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Business)) }
  def business; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Business)).void }
  def business=(value); end

  sig { void }
  def clear_business; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_emission; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_occurred_at; end

  sig { void }
  def clear_organization; end

  sig { void }
  def clear_quantity; end

  sig { void }
  def clear_unique_id; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(String) }
  def emission; end

  sig { params(value: String).void }
  def emission=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def occurred_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def occurred_at=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)) }
  def organization; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)).void }
  def organization=(value); end

  sig { returns(Float) }
  def quantity; end

  sig { params(value: Float).void }
  def quantity=(value); end

  sig { returns(String) }
  def unique_id; end

  sig { params(value: String).void }
  def unique_id=(value); end
end
