<%= render Primer::BaseComponent.new(
  tag: :div,
  display: :flex,
  align_items: :center,
  justify_content: :space_between,
  test_selector: "sponsorship_item_#{item.id}",
) do %>
  <div class="d-flex flex-items-center pl-1">
    <%= linked_avatar_for(sponsorable, 36, img_class: "avatar") %>
    <div class="ml-2">
      <%= profile_link(sponsorable, class: "text-bold color-fg-muted") { sponsorable.name } %>
      <%= profile_link(sponsorable, class: "text-small") { "@#{sponsorable.display_login}" } %>
    </div>
  </div>

  <% if item.cancelled? && allowed_to_responsor? %>
    <%= render Primer::Beta::Button.new(
      tag: :a,
      size: :small,
      href: sponsorable_path(sponsorable, sponsor: user_or_org),
      test_selector: "re_sponsor",
    ).with_content("Re-sponsor") %>
  <% end %>

  <% if show_admin_controls? %>
    <%= render Primer::Alpha::ActionMenu.new do |menu| %>
      <% menu.with_show_button(size: :small, test_selector: "sponsorship_amount_and_frequency") do |button| %>
        <% button.with_trailing_action_icon(icon: :"triangle-down") %>
        <%= item.subscribable_name %>
      <% end %>

      <% menu.with_item(
        label: "View sponsorship",
        href: sponsorable_path(sponsorable, sponsor: user_or_org),
      ) %>

      <% unless item.one_time_sponsorship? %>
        <% menu.with_item(
          label: "Cancel sponsorship",
          scheme: :danger,
          href: sponsorable_sponsorships_path(sponsorable, sponsor: user_or_org),
          form_arguments: { method: :delete },
          content_arguments: { "data-confirm": cancel_msg },
          test_selector: "cancel_sponsorship",
        ) %>
      <% end %>
    <% end %>
  <% end %>
<% end %>

<%= render Sponsors::PendingChangeNoticeComponent.new(sponsorship: sponsorship) %>
