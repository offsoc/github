# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Aleph::Proto::FindReflexiveTransitiveCallersByDefiniensLocationRequest`.
# Please instead update this file by running `bin/tapioca dsl Aleph::Proto::FindReflexiveTransitiveCallersByDefiniensLocationRequest`.

class Aleph::Proto::FindReflexiveTransitiveCallersByDefiniensLocationRequest
  sig do
    params(
      backends: T.nilable(T.any(Google::Protobuf::RepeatedField[T.any(Symbol, Integer)], T::Array[T.any(Symbol, Integer)])),
      commit_oid: T.nilable(String),
      language: T.nilable(String),
      network_id: T.nilable(Integer),
      path: T.nilable(String),
      range: T.nilable(Aleph::Proto::Range),
      ranges: T.nilable(T.any(Google::Protobuf::RepeatedField[Aleph::Proto::Range], T::Array[Aleph::Proto::Range])),
      ref: T.nilable(String),
      repository_id: T.nilable(Integer)
    ).void
  end
  def initialize(backends: T.unsafe(nil), commit_oid: nil, language: nil, network_id: nil, path: nil, range: nil, ranges: T.unsafe(nil), ref: nil, repository_id: nil); end

  sig { returns(Google::Protobuf::RepeatedField[T.any(Symbol, Integer)]) }
  def backends; end

  sig { params(value: Google::Protobuf::RepeatedField[T.any(Symbol, Integer)]).void }
  def backends=(value); end

  sig { void }
  def clear_backends; end

  sig { void }
  def clear_commit_oid; end

  sig { void }
  def clear_language; end

  sig { void }
  def clear_network_id; end

  sig { void }
  def clear_path; end

  sig { void }
  def clear_range; end

  sig { void }
  def clear_ranges; end

  sig { void }
  def clear_ref; end

  sig { void }
  def clear_repository_id; end

  sig { returns(String) }
  def commit_oid; end

  sig { params(value: String).void }
  def commit_oid=(value); end

  sig { returns(String) }
  def language; end

  sig { params(value: String).void }
  def language=(value); end

  sig { returns(Integer) }
  def network_id; end

  sig { params(value: Integer).void }
  def network_id=(value); end

  sig { returns(String) }
  def path; end

  sig { params(value: String).void }
  def path=(value); end

  sig { returns(T.nilable(Aleph::Proto::Range)) }
  def range; end

  sig { params(value: T.nilable(Aleph::Proto::Range)).void }
  def range=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Aleph::Proto::Range]) }
  def ranges; end

  sig { params(value: Google::Protobuf::RepeatedField[Aleph::Proto::Range]).void }
  def ranges=(value); end

  sig { returns(String) }
  def ref; end

  sig { params(value: String).void }
  def ref=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end
end
