{"version":3,"file":"chunk-node_modules_monaco-editor_esm_vs_basic-languages_dockerfile_dockerfile_js-xxxxxxxxxxxx.js","mappings":"kNAAA;;;;;+EAK+E,EAI/E,IAAIA,EAAO,CACTC,SAAU,CACR,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACX,CACDC,iBAAkB,CAChB,CAAEC,KAAM,IAAKC,MAAO,GAAI,EACxB,CAAED,KAAM,IAAKC,MAAO,GAAI,EACxB,CAAED,KAAM,IAAKC,MAAO,GAAI,EACxB,CAAED,KAAM,IAAKC,MAAO,GAAI,EACxB,CAAED,KAAM,IAAKC,MAAO,GAAI,EACzB,CACDC,iBAAkB,CAChB,CAAEF,KAAM,IAAKC,MAAO,GAAI,EACxB,CAAED,KAAM,IAAKC,MAAO,GAAI,EACxB,CAAED,KAAM,IAAKC,MAAO,GAAI,EACxB,CAAED,KAAM,IAAKC,MAAO,GAAI,EACxB,CAAED,KAAM,IAAKC,MAAO,GAAI,EACzB,EAECE,EAAW,CACbC,aAAc,GACdC,aAAc,cACdC,SAAU,cACVC,UAAW,CACTC,KAAM,CACJ,CAAEC,QAAS,aAAc,EACzB,CAAEA,QAAS,UAAW,EACtB,CAAC,iBAAkB,CAAC,UAAW,GAAG,CAAC,CACnC,CAAC,oBAAqB,CAAC,UAAW,GAAI,CAAEC,MAAO,WAAYC,KAAM,YAAa,EAAE,CAAC,CACjF,CACE,sHACA,CAAED,MAAO,UAAWC,KAAM,YAAa,EACxC,CACF,CACDC,UAAW,CACT,CAAEH,QAAS,aAAc,EACzB,CAAEA,QAAS,UAAW,EACtB,CACE,cACA,CACEI,MAAO,CACL,OAAQ,CAAEH,MAAO,WAAYC,KAAM,SAAU,EAC7C,WAAY,UACd,CACF,EACD,CACD,CACE,KACA,CACEE,MAAO,CACL,OAAQ,GACR,WAAY,EACd,CACF,EACD,CACD,CACE,IACA,CACEA,MAAO,CACL,OAAQ,CAAEH,MAAO,GAAIC,KAAM,SAAU,EACrC,WAAY,EACd,CACF,EACD,CACF,CAEDG,WAAY,CACV,CACE,MACA,CACED,MAAO,CACL,OAAQ,CAAEH,MAAO,GAAIC,KAAM,SAAU,EACrC,WAAY,EACd,CACF,EACD,CACF,CACDI,QAAS,CAAC,CAAC,UAAW,UAAW,UAAU,CAAC,CAE5CC,QAAS,CACP,CAAC,OAAQ,GAAI,UAAU,CAEvB,CAAC,MAAO,GAAG,CAEX,CAAC,KAAM,SAAU,UAAU,CAC3B,CAAC,IAAK,SAAU,cAAc,CAC9B,CAAC,KAAM,SAAU,UAAU,CAC3B,CAAC,IAAK,SAAU,iBAAiB,CAClC,CACDC,WAAY,CACV,CACE,WACA,CACEJ,MAAO,CACL,OAAQ,CAAEH,MAAO,SAAUC,KAAM,SAAU,EAC3C,WAAY,QACd,CACF,EACD,CACD,CAAC,MAAO,gBAAgB,CACxB,CAAC,KAAM,SAAU,UAAU,CAC3B,CAAC,IAAK,SAAU,OAAO,CACvB,CAAC,cAAe,WAAW,CAC3B,CAAC,MAAO,SAAS,CACjB,CAAC,IAAK,SAAU,UAAU,CAC3B,CACDO,cAAe,CACb,CACE,WACA,CACEL,MAAO,CACL,OAAQ,CAAEH,MAAO,SAAUC,KAAM,SAAU,EAC3C,WAAY,QACd,CACF,EACD,CACD,CAAC,MAAO,gBAAgB,CACxB,CAAC,KAAM,SAAU,UAAU,CAC3B,CAAC,IAAK,SAAU,OAAO,CACvB,CAAC,cAAe,WAAW,CAC3B,CAAC,MAAO,SAAS,CACjB,CAAC,IAAK,SAAU,UAAU,CAC3B,CAEL,C","sources":["node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.49.0(383fdf3fc0e1e1a024068b8d0fd4f3dcbae74d04)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/dockerfile/dockerfile.ts\nvar conf = {\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".dockerfile\",\n  variable: /\\${?[\\w]+}?/,\n  tokenizer: {\n    root: [\n      { include: \"@whitespace\" },\n      { include: \"@comment\" },\n      [/(ONBUILD)(\\s+)/, [\"keyword\", \"\"]],\n      [/(ENV)(\\s+)([\\w]+)/, [\"keyword\", \"\", { token: \"variable\", next: \"@arguments\" }]],\n      [\n        /(FROM|MAINTAINER|RUN|EXPOSE|ENV|ADD|ARG|VOLUME|LABEL|USER|WORKDIR|COPY|CMD|STOPSIGNAL|SHELL|HEALTHCHECK|ENTRYPOINT)/,\n        { token: \"keyword\", next: \"@arguments\" }\n      ]\n    ],\n    arguments: [\n      { include: \"@whitespace\" },\n      { include: \"@strings\" },\n      [\n        /(@variable)/,\n        {\n          cases: {\n            \"@eos\": { token: \"variable\", next: \"@popall\" },\n            \"@default\": \"variable\"\n          }\n        }\n      ],\n      [\n        /\\\\/,\n        {\n          cases: {\n            \"@eos\": \"\",\n            \"@default\": \"\"\n          }\n        }\n      ],\n      [\n        /./,\n        {\n          cases: {\n            \"@eos\": { token: \"\", next: \"@popall\" },\n            \"@default\": \"\"\n          }\n        }\n      ]\n    ],\n    // Deal with white space, including comments\n    whitespace: [\n      [\n        /\\s+/,\n        {\n          cases: {\n            \"@eos\": { token: \"\", next: \"@popall\" },\n            \"@default\": \"\"\n          }\n        }\n      ]\n    ],\n    comment: [[/(^#.*$)/, \"comment\", \"@popall\"]],\n    // Recognize strings, including those broken across lines with \\ (but not without)\n    strings: [\n      [/\\\\'$/, \"\", \"@popall\"],\n      // \\' leaves @arguments at eol\n      [/\\\\'/, \"\"],\n      // \\' is not a string\n      [/'$/, \"string\", \"@popall\"],\n      [/'/, \"string\", \"@stringBody\"],\n      [/\"$/, \"string\", \"@popall\"],\n      [/\"/, \"string\", \"@dblStringBody\"]\n    ],\n    stringBody: [\n      [\n        /[^\\\\\\$']/,\n        {\n          cases: {\n            \"@eos\": { token: \"string\", next: \"@popall\" },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      [/\\\\./, \"string.escape\"],\n      [/'$/, \"string\", \"@popall\"],\n      [/'/, \"string\", \"@pop\"],\n      [/(@variable)/, \"variable\"],\n      [/\\\\$/, \"string\"],\n      [/$/, \"string\", \"@popall\"]\n    ],\n    dblStringBody: [\n      [\n        /[^\\\\\\$\"]/,\n        {\n          cases: {\n            \"@eos\": { token: \"string\", next: \"@popall\" },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      [/\\\\./, \"string.escape\"],\n      [/\"$/, \"string\", \"@popall\"],\n      [/\"/, \"string\", \"@pop\"],\n      [/(@variable)/, \"variable\"],\n      [/\\\\$/, \"string\"],\n      [/$/, \"string\", \"@popall\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["conf","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","variable","tokenizer","root","include","token","next","arguments","cases","whitespace","comment","strings","stringBody","dblStringBody"],"sourceRoot":""}