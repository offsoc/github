<div id="access-token-<%= token.id %>" class="access-token js-revoke-item <%= token_is_new?(token) ? "new-token" : "" %>" data-id="<%= token.id %>" data-type="token">
  <div class="listgroup-item">
    <div class="d-flex float-right">
      <% if show_sso_ready_badge? %>
        <%= render(Organizations::CredentialAuthorizations::ConfigureSsoComponent.new(
          credential: token, src: settings_user_token_organization_credential_authorizations_path(token)
        )) %>
      <% end %>

      <%= render partial: "oauth_tokens/delete_token_dialog", locals: { token: token, ajax: true, edit_view: false } %>
    </div>

    <% if !token_is_new?(token) %>
      <small class="last-used float-right"><%=last_access_description(token)%></small>
    <% end %>

    <% if token_is_new?(token) %>
      <%= render(Primer::Beta::Octicon.new(icon: "check")) %>
      <code id="new-oauth-token" class="token"><%= flash[:new_personal_access]["token"] %></code>
      <%= render Primer::Beta::ClipboardCopy.new(for: "new-oauth-token", "aria-label": "Copy token", classes: "btn-link", "data-copy-feedback": "Copied!", "data-tooltip-direction": "ne") %>
    <% else %>
      <span class="token-description">
        <strong>
          <a href="<%= settings_user_token_path(token) %>" data-pjax>
            <%= token.description.blank? ? "(No description)" : token.description %></a>
        </strong>
        <span class="color-fg-muted">
          <%= scopes_description_tooltip_list(token.scopes) %>
        </span>
      </span>
      <% if token_is_old_format?(token) %>
        <div>
          <%= render(Primer::Beta::Octicon.new(icon: "sync", color: :attention)) %>
          <span class="color-fg-default">
            <a class="Link--inTextBlock" href="<%= regenerate_edit_settings_user_token_path(token, index_page: params[:page] || "1") %>" data-pjax>Regenerate</a>
            this token to take advantage of the
            <a class="Link--inTextBlock" href="https://github.blog/2021-04-05-behind-githubs-new-authentication-token-formats/">new token formats</a>
          </span>
        </div>
      <% end %>
      <div>
        <% if token.expires_at %>
          <% if token.expires_soon? %>
            <span class="color-fg-attention">
              <%= render(Primer::Beta::Octicon.new(icon: "alert", color: :attention)) %>
              <%= link_to regenerate_edit_settings_user_token_path(token, index_page: params[:page] || "1"), class: "color-fg-attention" do %>
                Expires <span class="text-semibold text-italic"><%= display_expiration_date(token) %></span>.
              <% end %>
            </span>
          <% elsif token.expired? %>
            <span class="color-fg-attention">
              <%= link_to regenerate_edit_settings_user_token_path(token, index_page: params[:page] || "1"), class: "color-fg-attention" do %>
                Expired <span class="text-semibold text-italic"><%= display_expiration_date(token) %></span>.
              <% end %>
            </span>
          <% else %>
            <span class="color-fg-default">
              Expires <span class="text-semibold text-italic"><%= display_expiration_date(token) %></span>.
            </span>
          <% end %>
        <% else %>
          <span class="color-fg-attention">
            <%= render(Primer::Beta::Octicon.new(icon: "alert", color: :attention)) %>
            <%= link_to "This token has no expiration date", regenerate_edit_settings_user_token_path(token, index_page: params[:page] || "1"), class: "color-fg-attention Link--inTextBlock" %>.
          </span>
        <% end %>
      </div>
    <% end %>
  </div>
</div>
