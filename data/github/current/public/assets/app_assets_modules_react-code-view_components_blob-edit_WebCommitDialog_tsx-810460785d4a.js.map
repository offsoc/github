{"version":3,"file":"chunk-app_assets_modules_react-code-view_components_blob-edit_WebCommitDialog_tsx-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/eventloop-tasks/eventloop-tasks.ts","app/assets/modules/react-code-view/components/blob-edit/utilities/fetch-is-commit-available.ts","app/assets/modules/react-code-view/components/blob-edit/WebCommitDialog.tsx","ui/packages/flash-error/FlashError.tsx","ui/packages/web-commit-dialog/FileStatusIcon.tsx","ui/packages/web-commit-dialog/BranchProtectionNotEnforcedBanner.tsx","ui/packages/text-expander/TextExpander.tsx","ui/packages/web-commit-dialog/WebCommitDialog.module.css","ui/packages/web-commit-dialog/WebCommitDialog.tsx"],"sourcesContent":["// This is a simple function that just returns Promise.resolve() It is used in instances when we want to queue a\n// microtask before moving onto the next operation, but want to do so in a very explicit manner: `await microtask`\n// looks a lot clearer in intent than `await void 0` or `await Promise.resolve()`.\n//\n// You would want to use `await microtask()` if you have something that needs to be done very urgently, but still\n// needs to be done asynchronously. This will _not_ yield to the browser for any UI updates or wait for idle, instead\n// it queues a task in the \"microtask\" which is run immediately after the current stack. Use this sparingly. This\n// will likely delay subsequent code for 0-10ms.\nexport function microtask(): Promise<void> {\n  return Promise.resolve()\n}\n\n// This function simply Promisifies requestAnimationFrame so it is awaitable.\n//\n// You would want to use `await animationFrame()` if you're happy to yield to the browser to complete any UI updates\n// before calling your next piece of code. This is useful if - for example - you need to wait for scroll events,\n// or CSS transitions or something. This will likely delay subsequent code for 16ms or so - much longer (30-60ms)\n// if the tab is not focussed.\nexport function animationFrame(): Promise<number> {\n  return new Promise(window.requestAnimationFrame)\n}\n\n// Rejects a promise after a timeout has elapsed. The promise is never\n// successfully fulfilled.\n//\n// Examples\n//\n//   try {\n//     const value = await Promise.race([timeout(100), somethingSlow()])\n//     console.log('Slow operation finished within the timeout', value)\n//   } catch (e) {\n//     console.log('Slow operation did not finish', e)\n//   }\n//\n// Returns a rejected Promise rejected after a timeout.\nexport async function timeout(ms: number, signal?: AbortSignal): Promise<void> {\n  let id\n  const done = new Promise<void>((resolve, reject) => {\n    id = self.setTimeout(() => reject(new Error('timeout')), ms)\n  })\n  if (!signal) return done\n  try {\n    await Promise.race([done, whenAborted(signal)])\n  } catch (e) {\n    self.clearTimeout(id)\n    throw e\n  }\n}\n\n// Fulfills a promise after a timeout has elapsed. The promise is never rejected.\n//\n// Examples\n//\n//   step1()\n//   await wait(100)\n//   step2()\n//\n// Returns a Promise fulfilled after a timeout.\nexport async function wait(ms: number, signal?: AbortSignal): Promise<void> {\n  let id\n  const done = new Promise<void>(resolve => {\n    id = self.setTimeout(resolve, ms)\n  })\n  if (!signal) return done\n  try {\n    await Promise.race([done, whenAborted(signal)])\n  } catch (e) {\n    self.clearTimeout(id)\n    throw e\n  }\n}\n\nfunction whenAborted(signal: AbortSignal): Promise<never> {\n  return new Promise((resolve, reject) => {\n    const error = new Error('aborted')\n    error.name = 'AbortError'\n    if (signal.aborted) {\n      reject(error)\n    } else {\n      signal.addEventListener('abort', () => reject(error))\n    }\n  })\n}\n\nexport function taskQueue<T>(fn: (values: T[]) => unknown): (value: T) => void {\n  const queue: T[] = []\n  return function (value: T) {\n    queue.push(value)\n    if (queue.length === 1) {\n      queueMicrotask(() => {\n        const values = queue.slice(0)\n        queue.length = 0\n        fn(values)\n      })\n    }\n  }\n}\n","import {wait} from '@github-ui/eventloop-tasks'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\n\ninterface CommitQuorumCheckResponse {\n  data: {\n    hasQuorum: boolean\n  }\n}\n\ninterface CommitQuorumCheckErrorResponse {\n  statusText: string\n}\n\nasync function fetchCommitQuorumCheckJSON(url: string): Promise<boolean | CommitQuorumCheckErrorResponse> {\n  const response = await verifiedFetchJSON(url)\n  if (response.ok) {\n    const json = (await response.json()) as CommitQuorumCheckResponse\n    return json.data.hasQuorum\n  } else {\n    return {statusText: response.statusText}\n  }\n}\n\n/**\n * Polls the given URL with backoff until the commit has quorum\n * or until the max number of retries is reached\n * This allows us to check if git has quorum before redirecting\n * @param url - The URL to poll for commit availability\n * @returns A promise that resolves when the commit has quorum, the max number of retries is reached, or an error occurs\n */\nexport async function pollUntilCommitHasQuorum(url: string): Promise<void> {\n  let hasQuorum = false\n  let retries = 0\n\n  try {\n    while (hasQuorum === false && retries < 3) {\n      const commitQuorumCheckResponse = await fetchCommitQuorumCheckJSON(`${url}?attempt_number=${retries + 1}`)\n\n      if (typeof commitQuorumCheckResponse === 'boolean') {\n        hasQuorum = hasQuorum || commitQuorumCheckResponse\n\n        if (!hasQuorum) {\n          retries++\n          await wait(retries * 1000) // wait and poll with backoff 1s, 2s, 3s\n        }\n      } else {\n        // if the response is not a boolean, it's an error and we should stop polling\n        break\n      }\n    }\n  } catch {\n    // swallow any errors - this polling is a QOL improvemment\n    // and shouldn't block the redirecting to the quickpull if it fails\n  }\n}\n","import {useCodeViewAddQueuedBanner} from '@github-ui/code-view-shared/contexts/CodeViewBannersContext'\nimport type {SaveResponse, SaveResponseErrorDetails, WebCommitInfo} from '@github-ui/code-view-types'\nimport {useFileTreeControlContext} from '@github-ui/repos-file-tree-view'\nimport type {BypassMetadata} from '@github-ui/secret-scanning'\nimport {useCSRFToken} from '@github-ui/use-csrf-token'\nimport {resetMemoizeFetchJSON} from '@github-ui/use-latest-commit'\nimport {useNavigate} from '@github-ui/use-navigate'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport {WebCommitDialog as CommitDialog, type WebCommitDialogState} from '@github-ui/web-commit-dialog'\nimport React, {useEffect} from 'react'\n\nimport {pollUntilCommitHasQuorum} from './utilities/fetch-is-commit-available'\n\ninterface ISaveBlobData {\n  message: string\n  placeholder_message: string\n  description: string\n  author_email?: string\n  'commit-choice'?: string\n  target_branch?: string\n  quick_pull: string\n  guidance_task: string\n  commit: string\n  same_repo?: number\n  pr: string\n}\n\ninterface IEditSaveBlobData extends ISaveBlobData {\n  content_changed: boolean\n  filename: string\n  new_filename: string\n  value: string\n}\n\ninterface IDeleteSaveBlobData extends ISaveBlobData {\n  _method: string\n}\n\n// states and transitions:\n// closed\n//  -> pending\n// pending\n//  -> closed\n//  -> saving\n// saving\n//  -> saved\n//  -> pending\n//  -> closed\n\nexport default function WebCommitDialog(props: {\n  content?: string\n  contentChanged?: boolean\n  fileName?: string\n  isDelete: boolean\n  isNewFile: boolean\n  helpUrl: string\n  oldPath?: string\n  ownerName: string\n  placeholderMessage: string\n  refName: string\n  returnFocusRef: React.RefObject<HTMLElement>\n  webCommitInfo: WebCommitInfo\n  dialogState: WebCommitDialogState\n  setDialogState: (state: WebCommitDialogState) => void\n  setSecretDetected?: (secretDetected: boolean) => void\n  setSecretBypassMetadata?: (bypassMetadata: BypassMetadata) => void\n}) {\n  const {\n    content,\n    contentChanged,\n    fileName,\n    isDelete,\n    isNewFile,\n    oldPath,\n    ownerName,\n    placeholderMessage,\n    refName,\n    webCommitInfo,\n    setDialogState,\n    setSecretDetected,\n    setSecretBypassMetadata,\n  } = props\n\n  const {\n    authorEmails,\n    canCommitStatus,\n    commitOid,\n    defaultEmail,\n    defaultNewBranchName,\n    forkedRepo,\n    guidanceTask,\n    pr,\n    repoHeadEmpty,\n    saveUrl,\n  } = webCommitInfo\n  const savingToken = useCSRFToken(saveUrl, isDelete ? 'delete' : 'post')\n  const navigate = useNavigate()\n\n  const [message, setMessage] = React.useState(placeholderMessage)\n  const [description, setDescription] = React.useState('')\n  const [isQuickPull, setIsQuickPull] = React.useState(canCommitStatus !== 'allowed' || !!forkedRepo)\n  const [prTargetBranch, setPRTargetBranch] = React.useState(defaultNewBranchName)\n  const [authorEmail, setAuthorEmail] = React.useState(authorEmails.length ? defaultEmail : undefined)\n  const [errorMessage, setErrorMessage] = React.useState('')\n  const [errorDetails, setErrorDetails] = React.useState<SaveResponseErrorDetails>()\n  const {refreshTree} = useFileTreeControlContext()\n  const addQueuedBanner = useCodeViewAddQueuedBanner()\n\n  const commitMessageInputRef = React.useRef<HTMLInputElement>(null)\n  useEffect(() => {\n    if (commitMessageInputRef.current) {\n      commitMessageInputRef.current.focus()\n    }\n  }, [])\n\n  const quickPullChoice = !forkedRepo && !repoHeadEmpty\n\n  const onSave = async () => {\n    setDialogState('saving')\n\n    // TODO: Guidance task\n    const quickPullBase = forkedRepo ? `${ownerName}:${refName}` : refName\n\n    const sharedData: ISaveBlobData = {\n      message,\n      // eslint-disable-next-line camelcase\n      placeholder_message: placeholderMessage,\n      description,\n      // eslint-disable-next-line camelcase\n      author_email: authorEmail ?? undefined,\n      'commit-choice': quickPullChoice ? (isQuickPull ? 'quick-pull' : 'direct') : undefined,\n      // eslint-disable-next-line camelcase\n      target_branch: quickPullChoice ? (isQuickPull ? prTargetBranch : refName) : undefined,\n      // eslint-disable-next-line camelcase\n      quick_pull: isQuickPull ? quickPullBase : '',\n      // eslint-disable-next-line camelcase\n      guidance_task: guidanceTask ?? '',\n      commit: commitOid,\n      // eslint-disable-next-line camelcase\n      same_repo: !forkedRepo && !repoHeadEmpty ? 1 : undefined,\n      pr: pr ?? '',\n    }\n\n    let data: ISaveBlobData\n\n    if (isDelete) {\n      data = {...sharedData, _method: 'delete'} as IDeleteSaveBlobData\n    } else {\n      data = {\n        ...sharedData,\n        // eslint-disable-next-line camelcase\n        content_changed: contentChanged,\n        filename: isNewFile ? fileName : oldPath,\n        // eslint-disable-next-line camelcase\n        new_filename: fileName,\n        value: content,\n      } as IEditSaveBlobData\n    }\n\n    const formData = new FormData()\n    for (const [key, dataValue] of Object.entries(data)) {\n      if (dataValue !== undefined) {\n        formData.set(key, dataValue)\n      }\n    }\n\n    // eslint-disable-next-line github/authenticity-token\n    formData.append('authenticity_token', savingToken ?? '')\n\n    try {\n      const result = await verifiedFetch(saveUrl, {\n        method: 'post',\n        body: formData,\n        headers: {Accept: 'application/json'},\n      })\n\n      const json: SaveResponse = await result.json()\n\n      if (json.data.commitQuorumPollPath) {\n        await pollUntilCommitHasQuorum(json.data.commitQuorumPollPath)\n      }\n\n      // on a successful save, we are redirected to either back to the blob, back the PR, or to a quick pull PR\n      if (json.data.redirect) {\n        const redirectUrl = json.data.redirect\n        const url = redirectUrl.startsWith(window.location.origin)\n          ? redirectUrl.replace(window.location.origin, '')\n          : redirectUrl\n\n        // Reset the latest commit cache so that the next time the user navigates to the blob, they see the latest commit\n        resetMemoizeFetchJSON()\n\n        // Refresh the file tree if the file name changed.\n        if (refreshTree?.current !== undefined) {\n          refreshTree.current = true\n        }\n\n        if (json.data.message) {\n          addQueuedBanner({message: json.data.message, variant: 'default'})\n        }\n\n        setDialogState('saved')\n\n        // sometimes react will not have updated the dialog state before the redirect happens\n        // so we need to wait a bit for the state to update before redirecting\n        setTimeout(() => {\n          navigate(url)\n        }, 50)\n\n        return\n      } else if (json.data.error && json.data.secretBypassMetadata) {\n        setSecretDetected && setSecretDetected(true)\n        setSecretBypassMetadata?.(json.data.secretBypassMetadata)\n        setDialogState('closed')\n      } else if (json.data.error) {\n        setDialogState('pending')\n        setErrorMessage(json.data.error)\n        if (json.data.error_details) {\n          setErrorDetails(json.data.error_details)\n        }\n      } else {\n        setErrorMessage('File could not be edited')\n        setDialogState('pending')\n      }\n    } catch (e) {\n      setErrorMessage('File could not be edited')\n      setDialogState('pending')\n    }\n  }\n\n  // remove nulls from author emails\n\n  // Use the danger button type if a user has to bypass rules to commit\n\n  return (\n    <CommitDialog\n      onSave={onSave}\n      {...{\n        message,\n        setMessage,\n        description,\n        setDescription,\n        isQuickPull,\n        setIsQuickPull,\n        prTargetBranch,\n        setPRTargetBranch,\n        setAuthorEmail,\n        errorMessage,\n        errorDetails,\n      }}\n      {...props}\n    />\n  )\n}\n\ntry{ WebCommitDialog.displayName ||= 'WebCommitDialog' } catch {}","import {XCircleFillIcon} from '@primer/octicons-react'\nimport {Box, Flash, Link, Octicon} from '@primer/react'\nimport {SafeHTMLText} from '@github-ui/safe-html'\n\nexport function FlashError({\n  prefix,\n  errorMessageUsingPrefix,\n  errorMessageNotUsingPrefix,\n  ruleErrors,\n  helpUrl,\n  flashRef,\n}: {\n  prefix: string\n  errorMessageUsingPrefix?: string\n  errorMessageNotUsingPrefix?: string\n  ruleErrors?: string[]\n  helpUrl: string\n  flashRef?: React.RefObject<HTMLDivElement>\n}) {\n  const isRuleViolation = (ruleErrors?.length || 0) > 0\n\n  return errorMessageUsingPrefix || errorMessageNotUsingPrefix ? (\n    <>\n      <Flash\n        id=\"flash\"\n        variant=\"danger\"\n        className=\"d-flex flex-items-center flex-justify-between\"\n        sx={{marginBottom: 3}}\n        tabIndex={-1}\n        ref={flashRef}\n      >\n        {errorMessageUsingPrefix ? (\n          <div>\n            {prefix} <SafeHTMLText sx={{fontWeight: 'bold'}} unverifiedHTML={errorMessageUsingPrefix} />\n            {isRuleViolation && (\n              <Link\n                href={`${helpUrl}/repositories/configuring-branches-and-merges-in-your-repository/managing-rulesets/about-rulesets`}\n                sx={{marginLeft: 1}}\n              >\n                Learn more about rulesets.\n              </Link>\n            )}\n          </div>\n        ) : (\n          errorMessageNotUsingPrefix && <div>{errorMessageNotUsingPrefix}</div>\n        )}\n      </Flash>\n      {isRuleViolation && (\n        <Box sx={{marginBottom: 3}}>\n          <Box sx={{fontWeight: 'bold', marginBottom: 1}}>Repository rule violations found:</Box>\n          {ruleErrors?.map(rule => (\n            <Box key={rule} sx={{display: 'flex', alignItems: 'center'}}>\n              <Octicon icon={XCircleFillIcon} size={16} sx={{color: 'danger.fg'}} />\n              <Box sx={{marginLeft: 2}}>{rule}</Box>\n            </Box>\n          ))}\n        </Box>\n      )}\n    </>\n  ) : null\n}\n\ntry{ FlashError.displayName ||= 'FlashError' } catch {}","import {DiffRenamedIcon, FileAddedIcon, FileDiffIcon, FileIcon, FileRemovedIcon} from '@primer/octicons-react'\n\nexport interface FileStatusIconProps {\n  status?: string\n}\n\nexport const FileStatusIcon = ({status}: FileStatusIconProps) => {\n  switch (status) {\n    case 'A':\n      return <FileAddedIcon className=\"color-fg-success\" />\n    case 'D':\n      return <FileRemovedIcon className=\"color-fg-danger\" />\n    case 'M':\n      return <FileDiffIcon className=\"color-fg-attention\" />\n    case 'R':\n      return <DiffRenamedIcon className=\"color-fg-muted\" />\n    default:\n      return <FileIcon />\n  }\n}\n\ntry{ FileStatusIcon.displayName ||= 'FileStatusIcon' } catch {}","import {linkButtonSx} from '@github-ui/code-view-shared/utilities/styles'\nimport type {ProtectionNotEnforcedInfo} from '@github-ui/code-view-types'\nimport {FeatureRequest} from '@github-ui/feature-request'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {AlertIcon} from '@primer/octicons-react'\nimport {Box, Flash, Link, LinkButton, Octicon} from '@primer/react'\n\nexport function BranchProtectionNotEnforcedBanner({\n  branch,\n  protectionNotEnforcedInfo,\n}: {\n  branch: string\n  protectionNotEnforcedInfo: ProtectionNotEnforcedInfo\n}) {\n  const cta = protectionNotEnforcedInfo.upsellCtaInfo.cta\n  const organization = protectionNotEnforcedInfo.organization\n  const {branchProtected, rulesetsProtected} = protectionNotEnforcedInfo\n  const {showUpgradeButton, askAdmin, ctaPath} = cta\n\n  const BannerMessage = () => {\n    function ProtectedBranchOrganizationMessage({branchProtectionPath}: {branchProtectionPath: string}) {\n      return (\n        <div {...testIdProps('pb-org')}>\n          <Octicon icon={AlertIcon} />\n          Your {LinkToIf(!askAdmin, 'protected branch rules', branchProtectionPath)} <strong>{branch}</strong>\n          {\n            \" branch won't be enforced on this private repository until you upgrade this organization to a GitHub Team or Enterprise account.\"\n          }\n        </div>\n      )\n    }\n\n    function ProtectedBranchPersonalMessage({branchProtectionPath}: {branchProtectionPath: string}) {\n      return (\n        <div {...testIdProps('pb-personal')}>\n          <Octicon icon={AlertIcon} />\n          Your {LinkToIf(!askAdmin, 'protected branch rules', branchProtectionPath)} <strong>{branch}</strong>\n          {\n            \" branch won't be enforced on this private repository until you move to a GitHub Team or Enterprise account.\"\n          }\n        </div>\n      )\n    }\n\n    function RulesetsUpsellPersonalMessage({rulesetsPath}: {rulesetsPath: string}) {\n      return (\n        <div {...testIdProps('ru-personal')}>\n          <Octicon icon={AlertIcon} />\n          The {LinkToIf(!askAdmin, 'rulesets', rulesetsPath)}\n          {' targeting your '}\n          <strong>{branch}</strong>\n          {\" branch won't be enforced on this private repository until you move to a GitHub Team organization account.\"}\n        </div>\n      )\n    }\n\n    function RulesetUpsellOrganizationMessage({rulesetsPath}: {rulesetsPath: string}) {\n      return (\n        <div {...testIdProps('ru-org')}>\n          <Octicon icon={AlertIcon} />\n          The {LinkToIf(!askAdmin, 'rulesets', rulesetsPath)}\n          {' targeting your '}\n          <strong>{branch}</strong>\n          {!askAdmin\n            ? \" branch won't be enforced on this private repository until you upgrade this organization to GitHub Team.\"\n            : \" branch won't be enforced on this private repository until your organization admins upgrade this organization account to GitHub Team.\"}\n        </div>\n      )\n    }\n\n    if (organization) {\n      if (branchProtected && !rulesetsProtected) {\n        return (\n          <ProtectedBranchOrganizationMessage\n            branchProtectionPath={protectionNotEnforcedInfo.editRepositoryBranchesPath}\n          />\n        )\n      }\n      return <RulesetUpsellOrganizationMessage rulesetsPath={protectionNotEnforcedInfo.editRepositoryRulesetsPath} />\n    }\n    if (branchProtected && !rulesetsProtected) {\n      return (\n        <ProtectedBranchPersonalMessage branchProtectionPath={protectionNotEnforcedInfo.editRepositoryBranchesPath} />\n      )\n    }\n    return <RulesetsUpsellPersonalMessage rulesetsPath={protectionNotEnforcedInfo.editRepositoryRulesetsPath} />\n  }\n\n  function LinkToIf(condition: boolean, text: string, link: string) {\n    return condition ? (\n      <Link href={link} role=\"link\" {...testIdProps('linked-text')} underline>\n        {text}\n      </Link>\n    ) : (\n      text\n    )\n  }\n\n  return (\n    <Flash variant=\"warning\" sx={{alignItems: 'flex-start', display: 'flex', flexDirection: 'column', mt: 2, mb: 3}}>\n      <BannerMessage />\n      {showUpgradeButton && (\n        <LinkButton {...testIdProps('Upgrade-Btn')} href={ctaPath} sx={{mt: 2, ...linkButtonSx}}>\n          {'Upgrade'}\n        </LinkButton>\n      )}\n      <Box sx={{mt: 2}}>\n        <FeatureRequest\n          featureRequestInfo={protectionNotEnforcedInfo.featureRequestInfo}\n          requestedMessage=\"You've successfully submitted a request to your organization's admins for this feature.\"\n        />\n      </Box>\n    </Flash>\n  )\n}\n\ntry{ BranchProtectionNotEnforcedBanner.displayName ||= 'BranchProtectionNotEnforcedBanner' } catch {}\ntry{ BannerMessage.displayName ||= 'BannerMessage' } catch {}\ntry{ ProtectedBranchOrganizationMessage.displayName ||= 'ProtectedBranchOrganizationMessage' } catch {}\ntry{ ProtectedBranchPersonalMessage.displayName ||= 'ProtectedBranchPersonalMessage' } catch {}\ntry{ RulesetsUpsellPersonalMessage.displayName ||= 'RulesetsUpsellPersonalMessage' } catch {}\ntry{ RulesetUpsellOrganizationMessage.displayName ||= 'RulesetUpsellOrganizationMessage' } catch {}\ntry{ LinkToIf.displayName ||= 'LinkToIf' } catch {}","import '@github/text-expander-element'\n\nimport {Box, Textarea, type TextareaProps} from '@primer/react'\nimport type {BetterSystemStyleObject} from '@primer/react/lib-esm/sx'\nimport {useCallback, useEffect, useRef} from 'react'\n\nexport interface TextExpanderProps {\n  suggestionsUrlIssue: string\n  suggestionsUrlMention: string\n  suggestionsUrlEmoji: string\n  value: string\n  setValue: (value: string) => void\n  sx?: BetterSystemStyleObject\n  textareaProps?: Omit<TextareaProps, 'sx' | 'value' | 'ref' | 'onChange' | 'onKeyDown'>\n}\n\nexport function TextExpander({\n  suggestionsUrlIssue,\n  suggestionsUrlMention,\n  suggestionsUrlEmoji,\n  value,\n  setValue,\n  sx,\n  textareaProps,\n}: TextExpanderProps) {\n  const textExpanderRef = useRef<HTMLDivElement>(null)\n  const textareaRef = useRef<HTMLTextAreaElement>(null)\n\n  const textExpanderValueHandler = (ev: React.KeyboardEvent) => {\n    if (\n      // prevent the handler from submitting forms unless ctrl/cmd+enter since text areas allow new lines\n      // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n      (ev.code === 'Enter' && !(ev.metaKey || ev.ctrlKey)) ||\n      // prevent the handler from submitting forms or tabbing off until values are synced up\n      (ev.code === 'Tab' && textareaRef.current?.value !== value)\n    ) {\n      ev.stopPropagation()\n    }\n  }\n\n  const onTextExpanderCommitted = useCallback(() => {\n    setValue(textareaRef.current?.value || value)\n  }, [setValue, value])\n\n  useEffect(() => {\n    const innerTextExpanderRef = textExpanderRef.current\n\n    innerTextExpanderRef?.addEventListener('text-expander-committed', onTextExpanderCommitted)\n\n    return () => {\n      innerTextExpanderRef?.removeEventListener('text-expander-committed', onTextExpanderCommitted)\n    }\n  }, [onTextExpanderCommitted])\n\n  return (\n    <Box sx={{position: 'relative', ...sx}}>\n      <text-expander\n        keys=\": @ #\"\n        data-issue-url={suggestionsUrlIssue}\n        data-mention-url={suggestionsUrlMention}\n        data-emoji-url={suggestionsUrlEmoji}\n        ref={textExpanderRef}\n      >\n        <Textarea\n          onChange={event => setValue(event.target.value)}\n          onKeyDown={textExpanderValueHandler}\n          ref={textareaRef}\n          value={value}\n          sx={{width: '100%'}}\n          {...textareaProps}\n        />\n      </text-expander>\n    </Box>\n  )\n}\n\ntry{ TextExpander.displayName ||= 'TextExpander' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"commitFileIcon\":\"WebCommitDialog-module__commitFileIcon--sHZ5I\"};","import {DuplicateOnKeydownButton} from '@github-ui/code-view-shared/components/DuplicateOnKeydownButton'\nimport {useShortcut} from '@github-ui/code-view-shared/hooks/shortcuts'\nimport type {SaveResponseErrorDetails, WebCommitInfo} from '@github-ui/code-view-types'\nimport {FlashError} from '@github-ui/flash-error'\nimport {TextExpander} from '@github-ui/text-expander'\nimport {GitPullRequestIcon} from '@primer/octicons-react'\nimport {\n  Box,\n  Button,\n  Checkbox,\n  CheckboxGroup,\n  FormControl,\n  Link,\n  Radio,\n  RadioGroup,\n  Select,\n  TextInput,\n} from '@primer/react'\nimport {Dialog, type DialogProps} from '@primer/react/experimental'\nimport React, {useCallback, useEffect} from 'react'\n\nimport {BranchProtectionNotEnforcedBanner} from './BranchProtectionNotEnforcedBanner'\nimport {FileStatusIcon} from './FileStatusIcon'\nimport styles from './WebCommitDialog.module.css'\n\nconst COMMIT_MESSAGE_INPUT_ID = 'commit-message-input'\nconst COMMIT_DESCRIPTION_INPUT_ID = 'commit-description-input'\nconst BRANCH_NAME_INPUT_ID = 'branch-name-input'\n\nexport type WebCommitDialogState = 'closed' | 'pending' | 'saving' | 'saved'\n\nexport type FileStatus = 'A' | 'D' | 'M' | 'R'\nexport type FileStatuses = {[key: string]: FileStatus}\n\nexport interface WebCommitDialogProps {\n  additionalFooterContent?: JSX.Element\n  dialogProps?: Partial<DialogProps>\n  helpUrl: string\n  placeholderMessage?: string\n  refName: string\n  webCommitInfo: WebCommitInfo\n  onSave: () => void\n  dialogState: WebCommitDialogState\n  setDialogState: (state: WebCommitDialogState) => void\n  message: string\n  setMessage: (message: string) => void\n  description: string\n  setDescription: React.Dispatch<React.SetStateAction<string>>\n  isQuickPull: boolean\n  setAuthorEmail: React.Dispatch<React.SetStateAction<string | undefined>>\n  setIsQuickPull?: React.Dispatch<React.SetStateAction<boolean>>\n  prTargetBranch?: string\n  setPRTargetBranch?: React.Dispatch<React.SetStateAction<string>>\n  errorMessage?: string\n  errorDetails?: SaveResponseErrorDetails\n  fileStatuses?: FileStatuses\n  selectedFiles?: Set<string>\n  setSelectedFiles?: React.Dispatch<React.SetStateAction<Set<string>>>\n  disableQuickPull?: boolean\n  returnFocusRef?: React.RefObject<HTMLElement>\n}\n\n// states and transitions:\n// closed\n//  -> pending\n// pending\n//  -> closed\n//  -> saving\n// saving\n//  -> saved\n//  -> pending\n//  -> closed\n\nexport function WebCommitDialog({\n  additionalFooterContent,\n  disableQuickPull,\n  dialogProps,\n  helpUrl,\n  placeholderMessage,\n  refName,\n  webCommitInfo,\n  dialogState,\n  onSave,\n  setDialogState,\n  fileStatuses,\n  selectedFiles,\n  setSelectedFiles,\n  message,\n  setMessage,\n  description,\n  setDescription,\n  isQuickPull,\n  setIsQuickPull,\n  prTargetBranch,\n  setPRTargetBranch,\n  setAuthorEmail,\n  errorMessage,\n  errorDetails,\n  returnFocusRef,\n}: WebCommitDialogProps) {\n  const {\n    authorEmails,\n    canCommitStatus,\n    dcoSignoffEnabled,\n    dcoSignoffHelpUrl,\n    defaultEmail,\n    defaultNewBranchName,\n    forkedRepo,\n    repoHeadEmpty,\n    suggestionsUrlEmoji,\n    suggestionsUrlIssue,\n    suggestionsUrlMention,\n  } = webCommitInfo\n\n  const [branchNamedWrong, setBranchNamedWrong] = React.useState(false)\n  const isSaving = dialogState === 'saving'\n  const branchNameInputRef = React.useRef<HTMLInputElement>(null)\n  const flashErrorRef = React.useRef<HTMLDivElement>(null)\n  const {submitCommitDialogShortcut} = useShortcut()\n\n  const handleChoiceOneChange = (selectedValue: string | null) => {\n    setIsQuickPull?.(selectedValue === 'pr')\n  }\n\n  const commitMessageInputRef = React.useRef<HTMLInputElement>(null)\n  useEffect(() => {\n    if (commitMessageInputRef.current) {\n      commitMessageInputRef.current.focus()\n    }\n  }, [])\n\n  const isIMEOpen = React.useRef(false)\n\n  let webCommitTitle = isQuickPull ? 'Propose changes' : 'Commit changes'\n\n  if (dcoSignoffEnabled) {\n    webCommitTitle = `Sign off and ${webCommitTitle.toLocaleLowerCase()}`\n  }\n\n  const quickPullChoice = !forkedRepo && !repoHeadEmpty && !disableQuickPull\n\n  const saveHandler = async () => {\n    if (isQuickPull && quickPullChoice && prTargetBranch === 'HEAD') {\n      setBranchNamedWrong(true)\n      branchNameInputRef.current?.focus()\n      return\n    }\n    setBranchNamedWrong(false)\n    onSave()\n  }\n\n  const checkboxHandler = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const path = event.target.value\n      setSelectedFiles?.(prevSelectedFiles => {\n        const newSelectedFiles = new Set(prevSelectedFiles)\n        if (newSelectedFiles.has(path)) {\n          newSelectedFiles.delete(path)\n        } else {\n          newSelectedFiles.add(path)\n        }\n        return newSelectedFiles\n      })\n    },\n    [setSelectedFiles],\n  )\n\n  useEffect(() => {\n    if (errorMessage && flashErrorRef.current) {\n      flashErrorRef.current.focus()\n    }\n  }, [errorMessage])\n\n  // remove nulls from author emails\n  const filteredAuthorEmails = authorEmails.filter(email => email)\n\n  // Use the danger button type if a user has to bypass rules to commit\n  const saveButtonType = canCommitStatus !== 'allowed' && !isQuickPull ? 'danger' : 'primary'\n  const saveButtonMessage =\n    canCommitStatus === 'can_bypass' && !isQuickPull ? 'Bypass rules and commit changes' : webCommitTitle\n\n  return (\n    <Dialog\n      aria-labelledby=\"web-commit-dialog-header\"\n      onClose={gesture => {\n        if (gesture !== 'close-button') {\n          return\n        }\n\n        if (!isIMEOpen.current) {\n          setDialogState('closed')\n        }\n      }}\n      sx={{overflowY: 'auto'}}\n      title={webCommitTitle}\n      returnFocusRef={returnFocusRef}\n      width=\"large\"\n      renderFooter={() => (\n        <Box\n          sx={{\n            borderTop: '1px solid',\n            borderColor: 'border.default',\n            display: 'flex',\n            justifyContent: 'flex-end',\n            flexWrap: 'wrap-reverse',\n            gap: 2,\n            padding: 3,\n          }}\n        >\n          {additionalFooterContent}\n          <Button\n            onClick={() => {\n              setDialogState('closed')\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={saveHandler}\n            disabled={isSaving}\n            variant={saveButtonType}\n            data-hotkey={submitCommitDialogShortcut.hotkey}\n          >\n            {isSaving ? 'Saving...' : saveButtonMessage}\n          </Button>\n          <DuplicateOnKeydownButton\n            buttonFocusId={COMMIT_MESSAGE_INPUT_ID}\n            buttonHotkey={submitCommitDialogShortcut.hotkey}\n            onlyAddHotkeyScopeButton={true}\n            onButtonClick={saveHandler}\n          />\n          <DuplicateOnKeydownButton\n            buttonFocusId={COMMIT_DESCRIPTION_INPUT_ID}\n            buttonHotkey={submitCommitDialogShortcut.hotkey}\n            onlyAddHotkeyScopeButton={true}\n            onButtonClick={saveHandler}\n          />\n          <DuplicateOnKeydownButton\n            buttonFocusId={BRANCH_NAME_INPUT_ID}\n            buttonHotkey={submitCommitDialogShortcut.hotkey}\n            onlyAddHotkeyScopeButton={true}\n            onButtonClick={saveHandler}\n          />\n        </Box>\n      )}\n      {...dialogProps}\n    >\n      <FlashError\n        prefix=\"There was an error committing your changes:\"\n        errorMessageUsingPrefix={errorMessage}\n        ruleErrors={errorDetails?.ruleViolations}\n        helpUrl={helpUrl}\n        flashRef={flashErrorRef}\n      />\n\n      <form\n        onSubmit={(event: React.FormEvent) => {\n          saveHandler()\n          event.preventDefault()\n        }}\n      >\n        <FormControl id={COMMIT_MESSAGE_INPUT_ID}>\n          <FormControl.Label>Commit message</FormControl.Label>\n          <TextInput\n            onChange={event => setMessage(event.target.value)}\n            placeholder={placeholderMessage}\n            value={message}\n            ref={commitMessageInputRef}\n            sx={{width: '100%', mb: 3}}\n          />\n        </FormControl>\n\n        <FormControl>\n          <FormControl.Label>Extended description</FormControl.Label>\n          <TextExpander\n            suggestionsUrlIssue={suggestionsUrlIssue}\n            suggestionsUrlMention={suggestionsUrlMention}\n            suggestionsUrlEmoji={suggestionsUrlEmoji}\n            value={description}\n            setValue={setDescription}\n            sx={{width: '100%', mb: 3}}\n            textareaProps={{\n              placeholder: 'Add an optional extended description..',\n              onCompositionStart: () => (isIMEOpen.current = true),\n              onCompositionEnd: () => (isIMEOpen.current = false),\n              id: COMMIT_DESCRIPTION_INPUT_ID,\n            }}\n          />\n        </FormControl>\n\n        {filteredAuthorEmails.length > 1 ? (\n          <FormControl sx={{mb: 3}}>\n            <FormControl.Label>Commit Email</FormControl.Label>\n            <Select\n              onChange={ev => {\n                setAuthorEmail(ev.target.value)\n              }}\n              defaultValue={defaultEmail}\n            >\n              {authorEmails.map((email, index) => (\n                <Select.Option key={index} value={email}>\n                  {email}\n                </Select.Option>\n              ))}\n            </Select>\n            {dcoSignoffEnabled && (\n              <FormControl.Caption>\n                Choose an email address for{' '}\n                <Link href={dcoSignoffHelpUrl} target=\"_blank\" rel=\"noreferrer\" inline>\n                  signing off\n                </Link>{' '}\n                on this commit\n              </FormControl.Caption>\n            )}\n          </FormControl>\n        ) : dcoSignoffEnabled ? (\n          <Box sx={{mb: 3}}>\n            You are{' '}\n            <Link href={dcoSignoffHelpUrl} target=\"_blank\" rel=\"noreferrer\" inline>\n              signing off\n            </Link>{' '}\n            on this commit as {defaultEmail}\n          </Box>\n        ) : null}\n        {webCommitInfo.protectionNotEnforcedInfo?.upsellCtaInfo.visible && (\n          <BranchProtectionNotEnforcedBanner\n            branch={refName}\n            protectionNotEnforcedInfo={webCommitInfo.protectionNotEnforcedInfo}\n          />\n        )}\n        {quickPullChoice && (\n          <RadioGroup name=\"pr-choice\" onChange={handleChoiceOneChange}>\n            <RadioGroup.Label visuallyHidden>Direct commit or PR</RadioGroup.Label>\n            <FormControl>\n              {canCommitStatus !== 'blocked' && (\n                <Radio\n                  aria-checked={!isQuickPull}\n                  aria-describedby={canCommitStatus === 'can_bypass' && !isQuickPull ? 'bypass-warning' : undefined}\n                  value=\"direct\"\n                  defaultChecked={!isQuickPull}\n                />\n              )}\n              <FormControl.Label sx={{fontWeight: 'normal'}}>\n                {canCommitStatus !== 'blocked' ? (\n                  <>\n                    Commit directly to the{' '}\n                    <Box as=\"pre\" sx={{display: 'inline'}}>\n                      {refName}\n                    </Box>{' '}\n                    branch\n                  </>\n                ) : (\n                  <>\n                    You can’t commit to{' '}\n                    <Box as=\"pre\" sx={{display: 'inline'}}>\n                      {refName}\n                    </Box>{' '}\n                    because it is a{' '}\n                    <Link\n                      href={`${helpUrl}/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests`}\n                      inline\n                    >\n                      protected branch\n                    </Link>\n                  </>\n                )}\n              </FormControl.Label>\n              {canCommitStatus !== 'blocked' && canCommitStatus === 'can_bypass' && !isQuickPull && (\n                <FormControl.Caption>Some rules will be bypassed by committing directly</FormControl.Caption>\n              )}\n            </FormControl>\n            <FormControl>\n              <Radio aria-checked={isQuickPull} value=\"pr\" defaultChecked={isQuickPull} />\n              <FormControl.Label sx={{fontWeight: 'normal'}}>\n                Create a <strong>new branch</strong> for this commit and start a pull request{' '}\n                <Link\n                  href={`${helpUrl}/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests`}\n                  sx={{fontSize: 0}}\n                  inline\n                >\n                  Learn more about pull requests\n                </Link>\n              </FormControl.Label>\n            </FormControl>\n            {isQuickPull && (\n              <Box sx={{mt: 3, mx: 3}}>\n                <FormControl id={BRANCH_NAME_INPUT_ID}>\n                  <FormControl.Label visuallyHidden>Branch Name</FormControl.Label>\n                  <TextInput\n                    ref={branchNameInputRef}\n                    aria-label=\"PR target branch\"\n                    leadingVisual={GitPullRequestIcon}\n                    onChange={event => setPRTargetBranch?.(event.target.value)}\n                    placeholder={defaultNewBranchName}\n                    sx={{width: '100%'}}\n                    value={prTargetBranch}\n                  />\n\n                  {branchNamedWrong && (\n                    <FormControl.Validation variant=\"error\">\n                      New branch name can not be &quot;HEAD&quot;\n                    </FormControl.Validation>\n                  )}\n                </FormControl>\n              </Box>\n            )}\n          </RadioGroup>\n        )}\n        {fileStatuses && selectedFiles && (\n          <CheckboxGroup sx={{flexGrow: 1}}>\n            <CheckboxGroup.Label>Changes to commit</CheckboxGroup.Label>\n            {Object.entries(fileStatuses).map(([path, status]) => (\n              <FormControl key={path}>\n                <Checkbox value={path} checked={selectedFiles.has(path)} onChange={checkboxHandler} />\n                <FormControl.Label sx={{display: 'flex'}}>\n                  <div className={styles.commitFileIcon}>\n                    <FileStatusIcon status={status} />\n                  </div>\n                  {path}\n                </FormControl.Label>\n              </FormControl>\n            ))}\n          </CheckboxGroup>\n        )}\n      </form>\n    </Dialog>\n  )\n}\n\ntry{ WebCommitDialog.displayName ||= 'WebCommitDialog' } catch {}"],"names":["microtask","Promise","resolve","animationFrame","window","requestAnimationFrame","wait","ms","signal","id","done","self","setTimeout","race","reject","error","name","aborted","addEventListener","e","clearTimeout","taskQueue","fn","queue","value","push","length","queueMicrotask","values","slice","fetchCommitQuorumCheckJSON","url","response","verifiedFetchJSON","ok","json","data","hasQuorum","statusText","pollUntilCommitHasQuorum","retries","commitQuorumCheckResponse","WebCommitDialog","props","content","contentChanged","fileName","isDelete","isNewFile","oldPath","ownerName","placeholderMessage","refName","webCommitInfo","setDialogState","setSecretDetected","setSecretBypassMetadata","authorEmails","canCommitStatus","commitOid","defaultEmail","defaultNewBranchName","forkedRepo","guidanceTask","pr","repoHeadEmpty","saveUrl","savingToken","useCSRFToken","navigate","useNavigate","message","setMessage","React","description","setDescription","isQuickPull","setIsQuickPull","prTargetBranch","setPRTargetBranch","authorEmail","setAuthorEmail","undefined","errorMessage","setErrorMessage","errorDetails","setErrorDetails","refreshTree","useFileTreeControlContext","addQueuedBanner","useCodeViewAddQueuedBanner","commitMessageInputRef","useEffect","current","focus","quickPullChoice","onSave","quickPullBase","sharedData","placeholder_message","author_email","target_branch","quick_pull","guidance_task","commit","same_repo","_method","content_changed","filename","new_filename","formData","FormData","key","dataValue","Object","entries","set","append","result","verifiedFetch","method","body","headers","Accept","commitQuorumPollPath","redirect","redirectUrl","startsWith","location","origin","replace","resetMemoizeFetchJSON","variant","secretBypassMetadata","error_details","CommitDialog","displayName","FlashError","prefix","errorMessageUsingPrefix","errorMessageNotUsingPrefix","ruleErrors","helpUrl","flashRef","isRuleViolation","Flash","className","sx","marginBottom","tabIndex","ref","div","SafeHTMLText","fontWeight","unverifiedHTML","Link","href","marginLeft","Box","map","rule","display","alignItems","Octicon","icon","XCircleFillIcon","size","color","FileStatusIcon","status","FileAddedIcon","FileRemovedIcon","FileDiffIcon","DiffRenamedIcon","FileIcon","BannerMessage","ProtectedBranchOrganizationMessage","ProtectedBranchPersonalMessage","RulesetsUpsellPersonalMessage","RulesetUpsellOrganizationMessage","LinkToIf","TextExpander","suggestionsUrlIssue","suggestionsUrlMention","suggestionsUrlEmoji","setValue","textareaProps","textExpanderRef","useRef","textareaRef","onTextExpanderCommitted","useCallback","innerTextExpanderRef","removeEventListener","position","text-expander","keys","data-issue-url","data-mention-url","data-emoji-url","Textarea","onChange","event","target","onKeyDown","ev","code","metaKey","ctrlKey","stopPropagation","width","BranchProtectionNotEnforcedBanner","branch","protectionNotEnforcedInfo","cta","upsellCtaInfo","organization","branchProtected","rulesetsProtected","showUpgradeButton","askAdmin","ctaPath","condition","text","link","role","testIdProps","underline","flexDirection","mt","mb","branchProtectionPath","AlertIcon","strong","editRepositoryBranchesPath","rulesetsPath","editRepositoryRulesetsPath","LinkButton","linkButtonSx","FeatureRequest","featureRequestInfo","requestedMessage","COMMIT_MESSAGE_INPUT_ID","COMMIT_DESCRIPTION_INPUT_ID","BRANCH_NAME_INPUT_ID","additionalFooterContent","disableQuickPull","dialogProps","dialogState","fileStatuses","selectedFiles","setSelectedFiles","returnFocusRef","dcoSignoffEnabled","dcoSignoffHelpUrl","branchNamedWrong","setBranchNamedWrong","isSaving","branchNameInputRef","flashErrorRef","submitCommitDialogShortcut","useShortcut","isIMEOpen","webCommitTitle","toLocaleLowerCase","saveHandler","checkboxHandler","path","prevSelectedFiles","newSelectedFiles","Set","has","delete","add","filteredAuthorEmails","filter","email","saveButtonType","saveButtonMessage","Dialog","aria-labelledby","onClose","gesture","overflowY","title","renderFooter","borderTop","borderColor","justifyContent","flexWrap","gap","padding","Button","onClick","disabled","data-hotkey","hotkey","DuplicateOnKeydownButton","buttonFocusId","buttonHotkey","onlyAddHotkeyScopeButton","onButtonClick","ruleViolations","form","onSubmit","preventDefault","FormControl","Label","TextInput","placeholder","onCompositionStart","onCompositionEnd","Select","defaultValue","index","Option","Caption","rel","inline","visible","RadioGroup","selectedValue","visuallyHidden","Radio","aria-checked","aria-describedby","defaultChecked","as","fontSize","mx","aria-label","leadingVisual","GitPullRequestIcon","Validation","CheckboxGroup","flexGrow","Checkbox","checked","styles","commitFileIcon"],"sourceRoot":""}