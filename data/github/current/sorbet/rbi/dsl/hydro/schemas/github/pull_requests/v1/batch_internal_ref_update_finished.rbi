# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::PullRequests::V1::BatchInternalRefUpdateFinished`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::PullRequests::V1::BatchInternalRefUpdateFinished`.

class Hydro::Schemas::Github::PullRequests::V1::BatchInternalRefUpdateFinished
  sig do
    params(
      all_updates_successful: T.nilable(T::Boolean),
      complete_at: T.nilable(Google::Protobuf::Timestamp),
      e2e_durations: T.nilable(T.any(Google::Protobuf::Map[Integer, Google::Protobuf::Duration], T::Hash[Integer, Google::Protobuf::Duration])),
      errors: T.nilable(T.any(Google::Protobuf::Map[Integer, String], T::Hash[Integer, String])),
      failed_predicates: T.nilable(T.any(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V1::Entities::DGitPredicate], T::Array[Hydro::Schemas::Github::V1::Entities::DGitPredicate])),
      git_duration: T.nilable(Google::Protobuf::Duration),
      input: T.nilable(Hydro::Schemas::Github::PullRequests::V1::BatchInternalRefUpdateReady),
      repository_id: T.nilable(Integer),
      retry_count: T.nilable(Integer),
      stale_during_3pc: T.nilable(T.any(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V1::Entities::InternalRefUpdate], T::Array[Hydro::Schemas::Github::V1::Entities::InternalRefUpdate])),
      stale_pre_3pc: T.nilable(T.any(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V1::Entities::InternalRefUpdate], T::Array[Hydro::Schemas::Github::V1::Entities::InternalRefUpdate]))
    ).void
  end
  def initialize(all_updates_successful: nil, complete_at: nil, e2e_durations: T.unsafe(nil), errors: T.unsafe(nil), failed_predicates: T.unsafe(nil), git_duration: nil, input: nil, repository_id: nil, retry_count: nil, stale_during_3pc: T.unsafe(nil), stale_pre_3pc: T.unsafe(nil)); end

  sig { returns(T::Boolean) }
  def all_updates_successful; end

  sig { params(value: T::Boolean).void }
  def all_updates_successful=(value); end

  sig { void }
  def clear_all_updates_successful; end

  sig { void }
  def clear_complete_at; end

  sig { void }
  def clear_e2e_durations; end

  sig { void }
  def clear_errors; end

  sig { void }
  def clear_failed_predicates; end

  sig { void }
  def clear_git_duration; end

  sig { void }
  def clear_input; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_retry_count; end

  sig { void }
  def clear_stale_during_3pc; end

  sig { void }
  def clear_stale_pre_3pc; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def complete_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def complete_at=(value); end

  sig { returns(Google::Protobuf::Map[Integer, Google::Protobuf::Duration]) }
  def e2e_durations; end

  sig { params(value: Google::Protobuf::Map[Integer, Google::Protobuf::Duration]).void }
  def e2e_durations=(value); end

  sig { returns(Google::Protobuf::Map[Integer, String]) }
  def errors; end

  sig { params(value: Google::Protobuf::Map[Integer, String]).void }
  def errors=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V1::Entities::DGitPredicate]) }
  def failed_predicates; end

  sig { params(value: Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V1::Entities::DGitPredicate]).void }
  def failed_predicates=(value); end

  sig { returns(T.nilable(Google::Protobuf::Duration)) }
  def git_duration; end

  sig { params(value: T.nilable(Google::Protobuf::Duration)).void }
  def git_duration=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::PullRequests::V1::BatchInternalRefUpdateReady)) }
  def input; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::PullRequests::V1::BatchInternalRefUpdateReady)).void }
  def input=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end

  sig { returns(Integer) }
  def retry_count; end

  sig { params(value: Integer).void }
  def retry_count=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V1::Entities::InternalRefUpdate]) }
  def stale_during_3pc; end

  sig { params(value: Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V1::Entities::InternalRefUpdate]).void }
  def stale_during_3pc=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V1::Entities::InternalRefUpdate]) }
  def stale_pre_3pc; end

  sig { params(value: Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V1::Entities::InternalRefUpdate]).void }
  def stale_pre_3pc=(value); end
end
