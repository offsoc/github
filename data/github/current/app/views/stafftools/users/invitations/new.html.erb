<%# erblint:counter DeprecatedComponentsCounter 2 %>
<% page_info title: "Site admin - Invite user" %>

<%= render layout: "stafftools/stafftools" do %>
  <%= render Primer::Beta::Subhead.new do |component| %>
    <% component.with_heading(tag: :h2) { "Invite user" } %>
  <% end %>

  <% if enterprise_license.reached_seat_limit? %>
    <p>
      You have reached your license limit for seats. Please upgrade your license to invite more
      users.
    </p>
  <% else %>
    <div>
      <% if GitHub.smtp_enabled? %>
        <p>Create a new user and send them an e-mail to set their password.</p>
      <% else %>
        <%= render Primer::Beta::Flash.new(scheme: :warning) do %>
          To send an invitation via e-mail, SMTP must be configured from the
          <%= link_to "Management Console", "/setup", class: "Link--inTextBlock" %>.
        <% end %>

        <p>Generate a password reset link. This link must be manually sent to the new user.</p>
      <% end %>
      <%
        email_error = if new_user && new_user.errors && new_user.errors[:emails].any?
          "Email is invalid or already taken"
        end
      %>
      <%= form_for new_user, url: stafftools_users_invitations_path do |f| %>
        <div class="form-group">
          <auto-check src="<%= username_check_get_path(suggest_usernames: true) %>" http-method="GET">
            <%= f.text_group "Username", :login, error: error_for(new_user, :login) %>
          </auto-check>
          <auto-check src="<%= email_check_path %>">
            <%= f.text_group "Email", :email, error: email_error %>
            <%= csrf_hidden_input_for email_check_path %>
          </auto-check>

          <%= render Primer::ButtonComponent.new(type: :submit) do %>
            <% if GitHub.smtp_enabled? %>
              Send an e-mail invitation
            <% else %>
              Generate a password reset link
            <% end %>
          <% end %>
        </div>
      <% end %>
    </div>
  <% end %>
<% end %>
