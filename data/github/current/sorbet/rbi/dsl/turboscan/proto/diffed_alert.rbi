# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Turboscan::Proto::DiffedAlert`.
# Please instead update this file by running `bin/tapioca dsl Turboscan::Proto::DiffedAlert`.

class Turboscan::Proto::DiffedAlert
  sig do
    params(
      location: T.nilable(Turboscan::Proto::Location),
      message_markdown: T.nilable(String),
      message_text: T.nilable(String),
      number: T.nilable(Integer),
      rule_sarif_identifier: T.nilable(String),
      rule_severity: T.nilable(T.any(Symbol, Integer)),
      rule_short_description: T.nilable(String),
      security_severity: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(location: nil, message_markdown: nil, message_text: nil, number: nil, rule_sarif_identifier: nil, rule_severity: nil, rule_short_description: nil, security_severity: nil); end

  sig { void }
  def clear_location; end

  sig { void }
  def clear_message_markdown; end

  sig { void }
  def clear_message_text; end

  sig { void }
  def clear_number; end

  sig { void }
  def clear_rule_sarif_identifier; end

  sig { void }
  def clear_rule_severity; end

  sig { void }
  def clear_rule_short_description; end

  sig { void }
  def clear_security_severity; end

  sig { returns(T.nilable(Turboscan::Proto::Location)) }
  def location; end

  sig { params(value: T.nilable(Turboscan::Proto::Location)).void }
  def location=(value); end

  sig { returns(String) }
  def message_markdown; end

  sig { params(value: String).void }
  def message_markdown=(value); end

  sig { returns(String) }
  def message_text; end

  sig { params(value: String).void }
  def message_text=(value); end

  sig { returns(Integer) }
  def number; end

  sig { params(value: Integer).void }
  def number=(value); end

  sig { returns(String) }
  def rule_sarif_identifier; end

  sig { params(value: String).void }
  def rule_sarif_identifier=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def rule_severity; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def rule_severity=(value); end

  sig { returns(String) }
  def rule_short_description; end

  sig { params(value: String).void }
  def rule_short_description=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def security_severity; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def security_severity=(value); end
end
