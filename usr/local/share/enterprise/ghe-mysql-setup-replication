#!/bin/bash
#
# Sets up replication using a database_seed.sql file
# generated by ghe-mysql-generate-seed
set -e

# Set true by ghe-repl-start to enable set -x logging.
: ${GHE_REPL_VERBOSE:=false}
$GHE_REPL_VERBOSE && set -x

if [[ $# -lt 4 ]]; then
  echo "Usage: `basename $0` master username password database_seed
Example: `basename $0` master-host.example.com example-user pass123 database_seed.sql"
  exit 1
fi

MASTER=$1
REPL_USER=$2
REPL_PASS=$3
SEED_FILE=$4

export PATH="$PATH:/usr/local/share/enterprise"
#shellcheck source=vm_files/usr/local/share/enterprise/ghe-repl-lib
. ghe-repl-lib

if [[ -f "${SEED_FILE}" ]]; then
  query "STOP SLAVE; RESET SLAVE ALL; RESET MASTER;"
  if ghe-config --true 'mysql.backup.binary'; then
    echo "Loading binary backup into MySQL." 1>&2
    cat "${SEED_FILE}" | ghe-import-mysql-xtrabackup
  else
    echo "Loading seed file into MySQL." 1>&2
    sudo pv -f -w 78 "${SEED_FILE}" | sudo mysql -u root
  fi

  echo "Running 'set sql_log_bin = OFF; FLUSH PRIVILEGES;'"
  query "set sql_log_bin = OFF; FLUSH PRIVILEGES;"

  echo "Running '/usr/local/share/enterprise/ghe-mysql-prepare-replication'"
  /usr/local/share/enterprise/ghe-mysql-prepare-replication $MASTER $REPL_USER $REPL_PASS

  echo "Running 'START SLAVE'"
  query "START SLAVE;"

  echo "Checking MySQL replication setup succeeded"
  tries=0
  while [ $tries -lt 10 ]; do
    status=$(query "SHOW SLAVE STATUS\G") || true
    slave_io_running=$(echo "$status" | grep Slave_IO_Running | head -1 | awk '{print $2}')
    slave_sql_running=$(echo "$status"  | grep Slave_SQL_Running | head -1 | awk '{print $2}')
    if [[ $slave_io_running == "Yes" ]] && [[ $slave_sql_running == "Yes" ]]; then   
      query "SET GLOBAL read_only = 1;"
      echo "Setting up MySQL replication succeeded."
      exit 0
    fi
    sleep 5
    tries=$((tries+1))
  done

  echo "Setting up replication failed. See the output of SHOW SLAVE STATUS" 1>&2
  query "SHOW SLAVE STATUS\G"
  exit 1
else
  echo "${SEED_FILE} doesn't exist" 1>&2
  exit 1
fi
