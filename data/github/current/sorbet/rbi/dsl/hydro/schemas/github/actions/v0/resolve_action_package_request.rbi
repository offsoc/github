# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Actions::V0::ResolveActionPackageRequest`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Actions::V0::ResolveActionPackageRequest`.

class Hydro::Schemas::Github::Actions::V0::ResolveActionPackageRequest
  sig do
    params(
      action_nwo: T.nilable(String),
      connect_request: T.nilable(T::Boolean),
      job_id: T.nilable(String),
      ref: T.nilable(String),
      resolved_name: T.nilable(String),
      resolved_package: T.nilable(String),
      resolved_ref: T.nilable(String),
      resolved_sha: T.nilable(String),
      user: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      workflow_repository_id: T.nilable(Google::Protobuf::Int64Value),
      workflow_run_id: T.nilable(Google::Protobuf::Int64Value)
    ).void
  end
  def initialize(action_nwo: nil, connect_request: nil, job_id: nil, ref: nil, resolved_name: nil, resolved_package: nil, resolved_ref: nil, resolved_sha: nil, user: nil, workflow_repository_id: nil, workflow_run_id: nil); end

  sig { returns(String) }
  def action_nwo; end

  sig { params(value: String).void }
  def action_nwo=(value); end

  sig { void }
  def clear_action_nwo; end

  sig { void }
  def clear_connect_request; end

  sig { void }
  def clear_job_id; end

  sig { void }
  def clear_ref; end

  sig { void }
  def clear_resolved_name; end

  sig { void }
  def clear_resolved_package; end

  sig { void }
  def clear_resolved_ref; end

  sig { void }
  def clear_resolved_sha; end

  sig { void }
  def clear_user; end

  sig { void }
  def clear_workflow_repository_id; end

  sig { void }
  def clear_workflow_run_id; end

  sig { returns(T::Boolean) }
  def connect_request; end

  sig { params(value: T::Boolean).void }
  def connect_request=(value); end

  sig { returns(String) }
  def job_id; end

  sig { params(value: String).void }
  def job_id=(value); end

  sig { returns(String) }
  def ref; end

  sig { params(value: String).void }
  def ref=(value); end

  sig { returns(String) }
  def resolved_name; end

  sig { params(value: String).void }
  def resolved_name=(value); end

  sig { returns(String) }
  def resolved_package; end

  sig { params(value: String).void }
  def resolved_package=(value); end

  sig { returns(String) }
  def resolved_ref; end

  sig { params(value: String).void }
  def resolved_ref=(value); end

  sig { returns(String) }
  def resolved_sha; end

  sig { params(value: String).void }
  def resolved_sha=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def user; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def user=(value); end

  sig { returns(T.nilable(Google::Protobuf::Int64Value)) }
  def workflow_repository_id; end

  sig { params(value: T.nilable(Google::Protobuf::Int64Value)).void }
  def workflow_repository_id=(value); end

  sig { returns(T.nilable(Google::Protobuf::Int64Value)) }
  def workflow_run_id; end

  sig { params(value: T.nilable(Google::Protobuf::Int64Value)).void }
  def workflow_run_id=(value); end
end
