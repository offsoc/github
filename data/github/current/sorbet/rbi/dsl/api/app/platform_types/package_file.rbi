# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Api::App::PlatformTypes::PackageFile`.
# Please instead update this file by running `bin/tapioca dsl Api::App::PlatformTypes::PackageFile`.

class Api::App::PlatformTypes::PackageFile < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(T::Boolean) }
  def billing_allowed; end

  sig { returns(T::Boolean) }
  def billing_allowed?; end

  sig { returns(T.nilable(Integer)) }
  def database_id; end

  sig { returns(T::Boolean) }
  def database_id?; end

  sig { returns(T.nilable(String)) }
  def guid; end

  sig { returns(T::Boolean) }
  def guid?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(T.nilable(String)) }
  def md5; end

  sig { returns(T::Boolean) }
  def md5?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def metadata_url; end

  sig { returns(T::Boolean) }
  def metadata_url?; end

  sig { returns(String) }
  def name; end

  sig { returns(T::Boolean) }
  def name?; end

  sig { returns(String) }
  def object_migration_state; end

  sig { returns(T::Boolean) }
  def object_migration_state?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::PackageVersion)) }
  def package_version; end

  sig { returns(T::Boolean) }
  def package_version?; end

  sig { returns(T.nilable(String)) }
  def sha1; end

  sig { returns(T::Boolean) }
  def sha1?; end

  sig { returns(T.nilable(String)) }
  def sha256; end

  sig { returns(T::Boolean) }
  def sha256?; end

  sig { returns(T.nilable(Integer)) }
  def size; end

  sig { returns(T::Boolean) }
  def size?; end

  sig { returns(T.nilable(String)) }
  def sri; end

  sig { returns(T::Boolean) }
  def sri?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def updated_at; end

  sig { returns(T::Boolean) }
  def updated_at?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def url; end

  sig { returns(T::Boolean) }
  def url?; end
end
