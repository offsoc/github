# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Launch::Services::Largerrunners::ListPoolsRequest`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Launch::Services::Largerrunners::ListPoolsRequest`.

class GitHub::Launch::Services::Largerrunners::ListPoolsRequest
  sig do
    params(
      entity_id: T.nilable(GitHub::Launch::Pbtypes::GitHub::Identity),
      entity_is_private: T.nilable(T::Boolean),
      is_public_ip_enabled: T.nilable(Google::Protobuf::BoolValue),
      owner_id: T.nilable(GitHub::Launch::Pbtypes::GitHub::Identity),
      plan_owner_id: T.nilable(GitHub::Launch::Pbtypes::GitHub::Identity)
    ).void
  end
  def initialize(entity_id: nil, entity_is_private: nil, is_public_ip_enabled: nil, owner_id: nil, plan_owner_id: nil); end

  sig { void }
  def clear_entity_id; end

  sig { void }
  def clear_entity_is_private; end

  sig { void }
  def clear_is_public_ip_enabled; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_plan_owner_id; end

  sig { returns(T.nilable(GitHub::Launch::Pbtypes::GitHub::Identity)) }
  def entity_id; end

  sig { params(value: T.nilable(GitHub::Launch::Pbtypes::GitHub::Identity)).void }
  def entity_id=(value); end

  sig { returns(T::Boolean) }
  def entity_is_private; end

  sig { params(value: T::Boolean).void }
  def entity_is_private=(value); end

  sig { returns(T.nilable(Google::Protobuf::BoolValue)) }
  def is_public_ip_enabled; end

  sig { params(value: T.nilable(Google::Protobuf::BoolValue)).void }
  def is_public_ip_enabled=(value); end

  sig { returns(T.nilable(GitHub::Launch::Pbtypes::GitHub::Identity)) }
  def owner_id; end

  sig { params(value: T.nilable(GitHub::Launch::Pbtypes::GitHub::Identity)).void }
  def owner_id=(value); end

  sig { returns(T.nilable(GitHub::Launch::Pbtypes::GitHub::Identity)) }
  def plan_owner_id; end

  sig { params(value: T.nilable(GitHub::Launch::Pbtypes::GitHub::Identity)).void }
  def plan_owner_id=(value); end
end
