{"version":3,"file":"chunk-app_components_organizations_settings_codespaces_policy_form_constraint_row_allowed-values-in-672002-xxxxxxxxxxxx.js","mappings":"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","sources":["app/components/organizations/settings/codespaces_policy_form/constraint_row/allowed-values-input-element.ts"],"sourcesContent":["import {controller, target} from '@github/catalyst'\n\n// TODO: Move this logic into a shared component\nfunction hideElement(element: HTMLElement | null): void {\n  if (element !== null) {\n    element.hidden = true\n  }\n}\n\nfunction showElement(element: HTMLElement | null): void {\n  if (element !== null) {\n    element.hidden = false\n  }\n}\n\n// From https://stackoverflow.com/questions/39671641/regex-to-parse-docker-tag\nconst DOCKER_IMAGE_REGEX = new RegExp(\n  '^(?:(?=[^:/]{1,253})(?!-)[a-zA-Z0-9-]{1,63}(?<!-)(?:.(?!-)[a-zA-Z0-9-]{1,63}(?<!-))*(?::[0-9]{1,5})?/)?((?![._-])(?:[a-z0-9._-]*)(?<![._-])(?:/(?![._-])[a-z0-9._-]*(?<![._-]))*)(?::(?![.-])[a-zA-Z0-9_.-]{1,128})?$',\n)\n\n@controller\nclass AllowedValuesInputElement extends HTMLElement {\n  @target allowedValuesFormGroup: HTMLDivElement\n  @target allowedValuesInput: HTMLTextAreaElement\n  @target selectedAllowedValuesText: HTMLSpanElement\n  @target allowedValuesList: HTMLDivElement\n  @target allowedValueTemplate: HTMLDivElement\n  @target allowedValuesValidationErrorMsg: HTMLDivElement\n  @target deleteButton: HTMLButtonElement\n\n  allowedValues: {[key: string]: 1} = {}\n  connectedCallback(): void {\n    const values = JSON.parse(this.allowedValuesFormGroup.getAttribute('data-value') as string) || []\n    values.map((value: string) => {\n      this.allowedValues = {[value]: 1, ...this.allowedValues}\n    })\n  }\n\n  errorMessage = 'Value must be between 0 and 100 characters.'\n\n  updateDisplayText(): void {\n    const inputValue = Object.keys(this.allowedValues).join(', ')\n    if (inputValue.length > 0 && inputValue.length < 100) {\n      this.selectedAllowedValuesText.textContent = inputValue\n    } else if (inputValue.length > 0 && inputValue.length > 100) {\n      this.selectedAllowedValuesText.textContent = `${inputValue.slice(0, 100)}...`\n    } else {\n      this.selectedAllowedValuesText.textContent = 'None'\n    }\n  }\n\n  saveAllowedValuesConstraintChange(): void {\n    const values = Object.keys(this.allowedValues)\n    const constraintName = this.allowedValuesInput.getAttribute('data-constraint-name')\n    this.dispatchEvent(new CustomEvent('commit', {detail: {values, constraintName}}))\n  }\n\n  addAllowedValue(): void {\n    const {value} = this.allowedValuesInput\n    // allow for users to put in a comma separated list of values\n    const inputtedValues = value.replace(/\\s/g, '').split(',')\n    const invalidValues = [] as string[]\n    inputtedValues.flatMap(inputtedValue => {\n      if (!this.isValid(inputtedValue)) {\n        invalidValues.push(inputtedValue)\n        return []\n      }\n\n      if (this.allowedValues[inputtedValue]) {\n        return []\n      }\n      //update state object of allowedValues\n      this.allowedValues = {[inputtedValue]: 1, ...this.allowedValues}\n\n      //save the allowed value to the state\n      this.saveAllowedValuesConstraintChange()\n      //copy template element\n      const div = this.allowedValueTemplate.cloneNode(true) as HTMLDivElement\n      div.setAttribute('data-target', 'allowed-values-input.allowedValue')\n      const deleteButton = div.querySelector('button') as HTMLButtonElement\n      //register delete button event listener\n      deleteButton.addEventListener('click', () => {\n        this.removeAllowedValueAndDiv(inputtedValue, div)\n      })\n      //update text content of new element\n      const paragraph = div.querySelector('p') as HTMLParagraphElement\n      paragraph.textContent = inputtedValue\n      //append new element to allowedValuesList\n      div.hidden = false\n      this.allowedValuesList.appendChild(div)\n    })\n\n    //clear input\n    this.allowedValuesInput.value = ''\n\n    if (invalidValues.length > 0) {\n      this.allowedValuesInput.value = invalidValues.join(', ')\n      this.toggleMaxValueError({showError: true})\n    } else {\n      this.toggleMaxValueError({showError: false})\n    }\n\n    //update display text\n    this.updateDisplayText()\n  }\n\n  isValid(value: string): boolean {\n    const constraintName = this.allowedValuesInput.getAttribute('data-constraint-name')\n\n    switch (constraintName) {\n      case 'codespaces.allowed_base_images': {\n        // eslint-disable-next-line i18n-text/no-en\n        this.errorMessage = \"Value must be a valid docker image or image prefix ending in '*'.\"\n        /**\n         * value is valid if the following conditions are met:\n         * 1. Length of value must be greater than zero\n         * 2. It can contain at most 1 '*' character, and if so it must be the final character\n         * 3. It can end with ':*' but not with ':' --> in order to allow all tags of the base image\n         * 4. It matches docker image regex\n         */\n        const valueWithoutPrefix = value.replace(/(\\*|:\\*)$/g, '')\n        return value.length > 0 && DOCKER_IMAGE_REGEX.test(valueWithoutPrefix) && !valueWithoutPrefix.includes('*')\n      }\n      default:\n        return value.length > 0 && value.length < 100\n    }\n  }\n\n  toggleMaxValueError({showError}: {showError: boolean}): void {\n    if (showError) {\n      this.allowedValuesFormGroup.classList.add('errored')\n      this.allowedValuesValidationErrorMsg.textContent = this.errorMessage\n      showElement(this.allowedValuesValidationErrorMsg)\n      return\n    }\n\n    this.allowedValuesFormGroup.classList.remove('errored')\n    hideElement(this.allowedValuesValidationErrorMsg)\n  }\n\n  handleRemoveValue(event: Event): void {\n    const button = event.target as HTMLElement\n\n    const container = button.closest('[data-target=\"allowed-values-input.deleteButtonContainer\"]') as HTMLElement\n\n    if (container) {\n      this.removeAllowedValueAndDiv(container.getAttribute('data-value') || '', container)\n    }\n  }\n\n  removeAllowedValueAndDiv(allowedValue: string, div: HTMLElement): void {\n    delete this.allowedValues[allowedValue]\n    div.remove()\n    //save the allowed value to the state\n    this.saveAllowedValuesConstraintChange()\n    //update display text\n    this.updateDisplayText()\n  }\n\n  handleInputChange(): void {\n    // If input has been cleared, then we should clear any errors\n    if (this.allowedValuesInput.value.length === 0) {\n      this.toggleMaxValueError({showError: false})\n    }\n  }\n}\n"],"names":["DOCKER_IMAGE_REGEX","AllowedValuesInputElement","HTMLElement","connectedCallback","values","JSON","parse","allowedValuesFormGroup","getAttribute","map","allowedValues","value","updateDisplayText","inputValue","Object","keys","join","length","selectedAllowedValuesText","textContent","slice","saveAllowedValuesConstraintChange","constraintName","allowedValuesInput","dispatchEvent","CustomEvent","detail","addAllowedValue","inputtedValues","replace","split","invalidValues","flatMap","inputtedValue","isValid","push","div","allowedValueTemplate","cloneNode","setAttribute","deleteButton","querySelector","addEventListener","removeAllowedValueAndDiv","paragraph","hidden","allowedValuesList","appendChild","toggleMaxValueError","showError","errorMessage","valueWithoutPrefix","test","includes","element","classList","add","allowedValuesValidationErrorMsg","remove","handleRemoveValue","event","container","button","target","closest","allowedValue","handleInputChange","controller"],"sourceRoot":""}