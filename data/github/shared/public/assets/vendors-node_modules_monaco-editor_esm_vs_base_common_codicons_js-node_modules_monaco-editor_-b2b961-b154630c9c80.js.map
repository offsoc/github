{"version":3,"file":"vendors-node_modules_monaco-editor_esm_vs_base_common_codicons_js-node_modules_monaco-editor_-b2b961-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/monaco-editor/esm/vs/base/common/codiconsLibrary.js","node_modules/monaco-editor/esm/vs/base/common/codicons.js","node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","node_modules/monaco-editor/esm/vs/base/common/functional.js","node_modules/monaco-editor/esm/vs/base/common/lazy.js","node_modules/monaco-editor/esm/vs/base/common/linkedList.js","node_modules/monaco-editor/esm/vs/base/common/process.js","node_modules/monaco-editor/esm/vs/base/common/stopwatch.js","node_modules/monaco-editor/esm/vs/base/common/uint.js","node_modules/monaco-editor/esm/vs/editor/common/core/lineRange.js","node_modules/monaco-editor/esm/vs/editor/common/core/position.js","node_modules/monaco-editor/esm/vs/editor/common/core/positionToOffset.js","node_modules/monaco-editor/esm/vs/editor/common/core/range.js","node_modules/monaco-editor/esm/vs/editor/common/core/textLength.js","node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/diffAlgorithm.js","node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/utils.js","node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/dynamicProgrammingDiffing.js","node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/myersDiffAlgorithm.js","node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/linesSliceCharSequence.js","node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/computeMovedLines.js","node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/lineSequence.js","node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/defaultLinesDiffComputer.js","node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/heuristicSequenceOptimizations.js","node_modules/monaco-editor/esm/vs/editor/common/diff/linesDiffComputer.js","node_modules/monaco-editor/esm/vs/editor/common/diff/rangeMapping.js","node_modules/monaco-editor/esm/vs/editor/common/services/editorBaseApi.js","node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","node_modules/monaco-editor/esm/vs/editor/common/languages/linkComputer.js","node_modules/monaco-editor/esm/vs/editor/common/languages/supports/inplaceReplaceSupport.js","node_modules/monaco-editor/esm/vs/editor/common/diff/legacyLinesDiffComputer.js","node_modules/monaco-editor/esm/vs/editor/common/diff/linesDiffComputers.js","node_modules/monaco-editor/esm/vs/editor/common/languages/defaultDocumentColorsComputer.js","node_modules/monaco-editor/esm/vs/editor/common/services/findSectionHeaders.js","node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","node_modules/monaco-editor/esm/vs/editor/common/services/unicodeTextModelHighlighter.js","node_modules/monaco-editor/esm/vs/editor/common/tokenizationRegistry.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { register } from './codiconsUtil.js';\n// This file is automatically generated by (microsoft/vscode-codicons)/scripts/export-to-ts.js\n// Please don't edit it, as your changes will be overwritten.\n// Instead, add mappings to codiconsDerived in codicons.ts.\nexport const codiconsLibrary = {\n    add: register('add', 0xea60),\n    plus: register('plus', 0xea60),\n    gistNew: register('gist-new', 0xea60),\n    repoCreate: register('repo-create', 0xea60),\n    lightbulb: register('lightbulb', 0xea61),\n    lightBulb: register('light-bulb', 0xea61),\n    repo: register('repo', 0xea62),\n    repoDelete: register('repo-delete', 0xea62),\n    gistFork: register('gist-fork', 0xea63),\n    repoForked: register('repo-forked', 0xea63),\n    gitPullRequest: register('git-pull-request', 0xea64),\n    gitPullRequestAbandoned: register('git-pull-request-abandoned', 0xea64),\n    recordKeys: register('record-keys', 0xea65),\n    keyboard: register('keyboard', 0xea65),\n    tag: register('tag', 0xea66),\n    gitPullRequestLabel: register('git-pull-request-label', 0xea66),\n    tagAdd: register('tag-add', 0xea66),\n    tagRemove: register('tag-remove', 0xea66),\n    person: register('person', 0xea67),\n    personFollow: register('person-follow', 0xea67),\n    personOutline: register('person-outline', 0xea67),\n    personFilled: register('person-filled', 0xea67),\n    gitBranch: register('git-branch', 0xea68),\n    gitBranchCreate: register('git-branch-create', 0xea68),\n    gitBranchDelete: register('git-branch-delete', 0xea68),\n    sourceControl: register('source-control', 0xea68),\n    mirror: register('mirror', 0xea69),\n    mirrorPublic: register('mirror-public', 0xea69),\n    star: register('star', 0xea6a),\n    starAdd: register('star-add', 0xea6a),\n    starDelete: register('star-delete', 0xea6a),\n    starEmpty: register('star-empty', 0xea6a),\n    comment: register('comment', 0xea6b),\n    commentAdd: register('comment-add', 0xea6b),\n    alert: register('alert', 0xea6c),\n    warning: register('warning', 0xea6c),\n    search: register('search', 0xea6d),\n    searchSave: register('search-save', 0xea6d),\n    logOut: register('log-out', 0xea6e),\n    signOut: register('sign-out', 0xea6e),\n    logIn: register('log-in', 0xea6f),\n    signIn: register('sign-in', 0xea6f),\n    eye: register('eye', 0xea70),\n    eyeUnwatch: register('eye-unwatch', 0xea70),\n    eyeWatch: register('eye-watch', 0xea70),\n    circleFilled: register('circle-filled', 0xea71),\n    primitiveDot: register('primitive-dot', 0xea71),\n    closeDirty: register('close-dirty', 0xea71),\n    debugBreakpoint: register('debug-breakpoint', 0xea71),\n    debugBreakpointDisabled: register('debug-breakpoint-disabled', 0xea71),\n    debugHint: register('debug-hint', 0xea71),\n    terminalDecorationSuccess: register('terminal-decoration-success', 0xea71),\n    primitiveSquare: register('primitive-square', 0xea72),\n    edit: register('edit', 0xea73),\n    pencil: register('pencil', 0xea73),\n    info: register('info', 0xea74),\n    issueOpened: register('issue-opened', 0xea74),\n    gistPrivate: register('gist-private', 0xea75),\n    gitForkPrivate: register('git-fork-private', 0xea75),\n    lock: register('lock', 0xea75),\n    mirrorPrivate: register('mirror-private', 0xea75),\n    close: register('close', 0xea76),\n    removeClose: register('remove-close', 0xea76),\n    x: register('x', 0xea76),\n    repoSync: register('repo-sync', 0xea77),\n    sync: register('sync', 0xea77),\n    clone: register('clone', 0xea78),\n    desktopDownload: register('desktop-download', 0xea78),\n    beaker: register('beaker', 0xea79),\n    microscope: register('microscope', 0xea79),\n    vm: register('vm', 0xea7a),\n    deviceDesktop: register('device-desktop', 0xea7a),\n    file: register('file', 0xea7b),\n    fileText: register('file-text', 0xea7b),\n    more: register('more', 0xea7c),\n    ellipsis: register('ellipsis', 0xea7c),\n    kebabHorizontal: register('kebab-horizontal', 0xea7c),\n    mailReply: register('mail-reply', 0xea7d),\n    reply: register('reply', 0xea7d),\n    organization: register('organization', 0xea7e),\n    organizationFilled: register('organization-filled', 0xea7e),\n    organizationOutline: register('organization-outline', 0xea7e),\n    newFile: register('new-file', 0xea7f),\n    fileAdd: register('file-add', 0xea7f),\n    newFolder: register('new-folder', 0xea80),\n    fileDirectoryCreate: register('file-directory-create', 0xea80),\n    trash: register('trash', 0xea81),\n    trashcan: register('trashcan', 0xea81),\n    history: register('history', 0xea82),\n    clock: register('clock', 0xea82),\n    folder: register('folder', 0xea83),\n    fileDirectory: register('file-directory', 0xea83),\n    symbolFolder: register('symbol-folder', 0xea83),\n    logoGithub: register('logo-github', 0xea84),\n    markGithub: register('mark-github', 0xea84),\n    github: register('github', 0xea84),\n    terminal: register('terminal', 0xea85),\n    console: register('console', 0xea85),\n    repl: register('repl', 0xea85),\n    zap: register('zap', 0xea86),\n    symbolEvent: register('symbol-event', 0xea86),\n    error: register('error', 0xea87),\n    stop: register('stop', 0xea87),\n    variable: register('variable', 0xea88),\n    symbolVariable: register('symbol-variable', 0xea88),\n    array: register('array', 0xea8a),\n    symbolArray: register('symbol-array', 0xea8a),\n    symbolModule: register('symbol-module', 0xea8b),\n    symbolPackage: register('symbol-package', 0xea8b),\n    symbolNamespace: register('symbol-namespace', 0xea8b),\n    symbolObject: register('symbol-object', 0xea8b),\n    symbolMethod: register('symbol-method', 0xea8c),\n    symbolFunction: register('symbol-function', 0xea8c),\n    symbolConstructor: register('symbol-constructor', 0xea8c),\n    symbolBoolean: register('symbol-boolean', 0xea8f),\n    symbolNull: register('symbol-null', 0xea8f),\n    symbolNumeric: register('symbol-numeric', 0xea90),\n    symbolNumber: register('symbol-number', 0xea90),\n    symbolStructure: register('symbol-structure', 0xea91),\n    symbolStruct: register('symbol-struct', 0xea91),\n    symbolParameter: register('symbol-parameter', 0xea92),\n    symbolTypeParameter: register('symbol-type-parameter', 0xea92),\n    symbolKey: register('symbol-key', 0xea93),\n    symbolText: register('symbol-text', 0xea93),\n    symbolReference: register('symbol-reference', 0xea94),\n    goToFile: register('go-to-file', 0xea94),\n    symbolEnum: register('symbol-enum', 0xea95),\n    symbolValue: register('symbol-value', 0xea95),\n    symbolRuler: register('symbol-ruler', 0xea96),\n    symbolUnit: register('symbol-unit', 0xea96),\n    activateBreakpoints: register('activate-breakpoints', 0xea97),\n    archive: register('archive', 0xea98),\n    arrowBoth: register('arrow-both', 0xea99),\n    arrowDown: register('arrow-down', 0xea9a),\n    arrowLeft: register('arrow-left', 0xea9b),\n    arrowRight: register('arrow-right', 0xea9c),\n    arrowSmallDown: register('arrow-small-down', 0xea9d),\n    arrowSmallLeft: register('arrow-small-left', 0xea9e),\n    arrowSmallRight: register('arrow-small-right', 0xea9f),\n    arrowSmallUp: register('arrow-small-up', 0xeaa0),\n    arrowUp: register('arrow-up', 0xeaa1),\n    bell: register('bell', 0xeaa2),\n    bold: register('bold', 0xeaa3),\n    book: register('book', 0xeaa4),\n    bookmark: register('bookmark', 0xeaa5),\n    debugBreakpointConditionalUnverified: register('debug-breakpoint-conditional-unverified', 0xeaa6),\n    debugBreakpointConditional: register('debug-breakpoint-conditional', 0xeaa7),\n    debugBreakpointConditionalDisabled: register('debug-breakpoint-conditional-disabled', 0xeaa7),\n    debugBreakpointDataUnverified: register('debug-breakpoint-data-unverified', 0xeaa8),\n    debugBreakpointData: register('debug-breakpoint-data', 0xeaa9),\n    debugBreakpointDataDisabled: register('debug-breakpoint-data-disabled', 0xeaa9),\n    debugBreakpointLogUnverified: register('debug-breakpoint-log-unverified', 0xeaaa),\n    debugBreakpointLog: register('debug-breakpoint-log', 0xeaab),\n    debugBreakpointLogDisabled: register('debug-breakpoint-log-disabled', 0xeaab),\n    briefcase: register('briefcase', 0xeaac),\n    broadcast: register('broadcast', 0xeaad),\n    browser: register('browser', 0xeaae),\n    bug: register('bug', 0xeaaf),\n    calendar: register('calendar', 0xeab0),\n    caseSensitive: register('case-sensitive', 0xeab1),\n    check: register('check', 0xeab2),\n    checklist: register('checklist', 0xeab3),\n    chevronDown: register('chevron-down', 0xeab4),\n    chevronLeft: register('chevron-left', 0xeab5),\n    chevronRight: register('chevron-right', 0xeab6),\n    chevronUp: register('chevron-up', 0xeab7),\n    chromeClose: register('chrome-close', 0xeab8),\n    chromeMaximize: register('chrome-maximize', 0xeab9),\n    chromeMinimize: register('chrome-minimize', 0xeaba),\n    chromeRestore: register('chrome-restore', 0xeabb),\n    circleOutline: register('circle-outline', 0xeabc),\n    circle: register('circle', 0xeabc),\n    debugBreakpointUnverified: register('debug-breakpoint-unverified', 0xeabc),\n    terminalDecorationIncomplete: register('terminal-decoration-incomplete', 0xeabc),\n    circleSlash: register('circle-slash', 0xeabd),\n    circuitBoard: register('circuit-board', 0xeabe),\n    clearAll: register('clear-all', 0xeabf),\n    clippy: register('clippy', 0xeac0),\n    closeAll: register('close-all', 0xeac1),\n    cloudDownload: register('cloud-download', 0xeac2),\n    cloudUpload: register('cloud-upload', 0xeac3),\n    code: register('code', 0xeac4),\n    collapseAll: register('collapse-all', 0xeac5),\n    colorMode: register('color-mode', 0xeac6),\n    commentDiscussion: register('comment-discussion', 0xeac7),\n    creditCard: register('credit-card', 0xeac9),\n    dash: register('dash', 0xeacc),\n    dashboard: register('dashboard', 0xeacd),\n    database: register('database', 0xeace),\n    debugContinue: register('debug-continue', 0xeacf),\n    debugDisconnect: register('debug-disconnect', 0xead0),\n    debugPause: register('debug-pause', 0xead1),\n    debugRestart: register('debug-restart', 0xead2),\n    debugStart: register('debug-start', 0xead3),\n    debugStepInto: register('debug-step-into', 0xead4),\n    debugStepOut: register('debug-step-out', 0xead5),\n    debugStepOver: register('debug-step-over', 0xead6),\n    debugStop: register('debug-stop', 0xead7),\n    debug: register('debug', 0xead8),\n    deviceCameraVideo: register('device-camera-video', 0xead9),\n    deviceCamera: register('device-camera', 0xeada),\n    deviceMobile: register('device-mobile', 0xeadb),\n    diffAdded: register('diff-added', 0xeadc),\n    diffIgnored: register('diff-ignored', 0xeadd),\n    diffModified: register('diff-modified', 0xeade),\n    diffRemoved: register('diff-removed', 0xeadf),\n    diffRenamed: register('diff-renamed', 0xeae0),\n    diff: register('diff', 0xeae1),\n    diffSidebyside: register('diff-sidebyside', 0xeae1),\n    discard: register('discard', 0xeae2),\n    editorLayout: register('editor-layout', 0xeae3),\n    emptyWindow: register('empty-window', 0xeae4),\n    exclude: register('exclude', 0xeae5),\n    extensions: register('extensions', 0xeae6),\n    eyeClosed: register('eye-closed', 0xeae7),\n    fileBinary: register('file-binary', 0xeae8),\n    fileCode: register('file-code', 0xeae9),\n    fileMedia: register('file-media', 0xeaea),\n    filePdf: register('file-pdf', 0xeaeb),\n    fileSubmodule: register('file-submodule', 0xeaec),\n    fileSymlinkDirectory: register('file-symlink-directory', 0xeaed),\n    fileSymlinkFile: register('file-symlink-file', 0xeaee),\n    fileZip: register('file-zip', 0xeaef),\n    files: register('files', 0xeaf0),\n    filter: register('filter', 0xeaf1),\n    flame: register('flame', 0xeaf2),\n    foldDown: register('fold-down', 0xeaf3),\n    foldUp: register('fold-up', 0xeaf4),\n    fold: register('fold', 0xeaf5),\n    folderActive: register('folder-active', 0xeaf6),\n    folderOpened: register('folder-opened', 0xeaf7),\n    gear: register('gear', 0xeaf8),\n    gift: register('gift', 0xeaf9),\n    gistSecret: register('gist-secret', 0xeafa),\n    gist: register('gist', 0xeafb),\n    gitCommit: register('git-commit', 0xeafc),\n    gitCompare: register('git-compare', 0xeafd),\n    compareChanges: register('compare-changes', 0xeafd),\n    gitMerge: register('git-merge', 0xeafe),\n    githubAction: register('github-action', 0xeaff),\n    githubAlt: register('github-alt', 0xeb00),\n    globe: register('globe', 0xeb01),\n    grabber: register('grabber', 0xeb02),\n    graph: register('graph', 0xeb03),\n    gripper: register('gripper', 0xeb04),\n    heart: register('heart', 0xeb05),\n    home: register('home', 0xeb06),\n    horizontalRule: register('horizontal-rule', 0xeb07),\n    hubot: register('hubot', 0xeb08),\n    inbox: register('inbox', 0xeb09),\n    issueReopened: register('issue-reopened', 0xeb0b),\n    issues: register('issues', 0xeb0c),\n    italic: register('italic', 0xeb0d),\n    jersey: register('jersey', 0xeb0e),\n    json: register('json', 0xeb0f),\n    kebabVertical: register('kebab-vertical', 0xeb10),\n    key: register('key', 0xeb11),\n    law: register('law', 0xeb12),\n    lightbulbAutofix: register('lightbulb-autofix', 0xeb13),\n    linkExternal: register('link-external', 0xeb14),\n    link: register('link', 0xeb15),\n    listOrdered: register('list-ordered', 0xeb16),\n    listUnordered: register('list-unordered', 0xeb17),\n    liveShare: register('live-share', 0xeb18),\n    loading: register('loading', 0xeb19),\n    location: register('location', 0xeb1a),\n    mailRead: register('mail-read', 0xeb1b),\n    mail: register('mail', 0xeb1c),\n    markdown: register('markdown', 0xeb1d),\n    megaphone: register('megaphone', 0xeb1e),\n    mention: register('mention', 0xeb1f),\n    milestone: register('milestone', 0xeb20),\n    gitPullRequestMilestone: register('git-pull-request-milestone', 0xeb20),\n    mortarBoard: register('mortar-board', 0xeb21),\n    move: register('move', 0xeb22),\n    multipleWindows: register('multiple-windows', 0xeb23),\n    mute: register('mute', 0xeb24),\n    noNewline: register('no-newline', 0xeb25),\n    note: register('note', 0xeb26),\n    octoface: register('octoface', 0xeb27),\n    openPreview: register('open-preview', 0xeb28),\n    package: register('package', 0xeb29),\n    paintcan: register('paintcan', 0xeb2a),\n    pin: register('pin', 0xeb2b),\n    play: register('play', 0xeb2c),\n    run: register('run', 0xeb2c),\n    plug: register('plug', 0xeb2d),\n    preserveCase: register('preserve-case', 0xeb2e),\n    preview: register('preview', 0xeb2f),\n    project: register('project', 0xeb30),\n    pulse: register('pulse', 0xeb31),\n    question: register('question', 0xeb32),\n    quote: register('quote', 0xeb33),\n    radioTower: register('radio-tower', 0xeb34),\n    reactions: register('reactions', 0xeb35),\n    references: register('references', 0xeb36),\n    refresh: register('refresh', 0xeb37),\n    regex: register('regex', 0xeb38),\n    remoteExplorer: register('remote-explorer', 0xeb39),\n    remote: register('remote', 0xeb3a),\n    remove: register('remove', 0xeb3b),\n    replaceAll: register('replace-all', 0xeb3c),\n    replace: register('replace', 0xeb3d),\n    repoClone: register('repo-clone', 0xeb3e),\n    repoForcePush: register('repo-force-push', 0xeb3f),\n    repoPull: register('repo-pull', 0xeb40),\n    repoPush: register('repo-push', 0xeb41),\n    report: register('report', 0xeb42),\n    requestChanges: register('request-changes', 0xeb43),\n    rocket: register('rocket', 0xeb44),\n    rootFolderOpened: register('root-folder-opened', 0xeb45),\n    rootFolder: register('root-folder', 0xeb46),\n    rss: register('rss', 0xeb47),\n    ruby: register('ruby', 0xeb48),\n    saveAll: register('save-all', 0xeb49),\n    saveAs: register('save-as', 0xeb4a),\n    save: register('save', 0xeb4b),\n    screenFull: register('screen-full', 0xeb4c),\n    screenNormal: register('screen-normal', 0xeb4d),\n    searchStop: register('search-stop', 0xeb4e),\n    server: register('server', 0xeb50),\n    settingsGear: register('settings-gear', 0xeb51),\n    settings: register('settings', 0xeb52),\n    shield: register('shield', 0xeb53),\n    smiley: register('smiley', 0xeb54),\n    sortPrecedence: register('sort-precedence', 0xeb55),\n    splitHorizontal: register('split-horizontal', 0xeb56),\n    splitVertical: register('split-vertical', 0xeb57),\n    squirrel: register('squirrel', 0xeb58),\n    starFull: register('star-full', 0xeb59),\n    starHalf: register('star-half', 0xeb5a),\n    symbolClass: register('symbol-class', 0xeb5b),\n    symbolColor: register('symbol-color', 0xeb5c),\n    symbolConstant: register('symbol-constant', 0xeb5d),\n    symbolEnumMember: register('symbol-enum-member', 0xeb5e),\n    symbolField: register('symbol-field', 0xeb5f),\n    symbolFile: register('symbol-file', 0xeb60),\n    symbolInterface: register('symbol-interface', 0xeb61),\n    symbolKeyword: register('symbol-keyword', 0xeb62),\n    symbolMisc: register('symbol-misc', 0xeb63),\n    symbolOperator: register('symbol-operator', 0xeb64),\n    symbolProperty: register('symbol-property', 0xeb65),\n    wrench: register('wrench', 0xeb65),\n    wrenchSubaction: register('wrench-subaction', 0xeb65),\n    symbolSnippet: register('symbol-snippet', 0xeb66),\n    tasklist: register('tasklist', 0xeb67),\n    telescope: register('telescope', 0xeb68),\n    textSize: register('text-size', 0xeb69),\n    threeBars: register('three-bars', 0xeb6a),\n    thumbsdown: register('thumbsdown', 0xeb6b),\n    thumbsup: register('thumbsup', 0xeb6c),\n    tools: register('tools', 0xeb6d),\n    triangleDown: register('triangle-down', 0xeb6e),\n    triangleLeft: register('triangle-left', 0xeb6f),\n    triangleRight: register('triangle-right', 0xeb70),\n    triangleUp: register('triangle-up', 0xeb71),\n    twitter: register('twitter', 0xeb72),\n    unfold: register('unfold', 0xeb73),\n    unlock: register('unlock', 0xeb74),\n    unmute: register('unmute', 0xeb75),\n    unverified: register('unverified', 0xeb76),\n    verified: register('verified', 0xeb77),\n    versions: register('versions', 0xeb78),\n    vmActive: register('vm-active', 0xeb79),\n    vmOutline: register('vm-outline', 0xeb7a),\n    vmRunning: register('vm-running', 0xeb7b),\n    watch: register('watch', 0xeb7c),\n    whitespace: register('whitespace', 0xeb7d),\n    wholeWord: register('whole-word', 0xeb7e),\n    window: register('window', 0xeb7f),\n    wordWrap: register('word-wrap', 0xeb80),\n    zoomIn: register('zoom-in', 0xeb81),\n    zoomOut: register('zoom-out', 0xeb82),\n    listFilter: register('list-filter', 0xeb83),\n    listFlat: register('list-flat', 0xeb84),\n    listSelection: register('list-selection', 0xeb85),\n    selection: register('selection', 0xeb85),\n    listTree: register('list-tree', 0xeb86),\n    debugBreakpointFunctionUnverified: register('debug-breakpoint-function-unverified', 0xeb87),\n    debugBreakpointFunction: register('debug-breakpoint-function', 0xeb88),\n    debugBreakpointFunctionDisabled: register('debug-breakpoint-function-disabled', 0xeb88),\n    debugStackframeActive: register('debug-stackframe-active', 0xeb89),\n    circleSmallFilled: register('circle-small-filled', 0xeb8a),\n    debugStackframeDot: register('debug-stackframe-dot', 0xeb8a),\n    terminalDecorationMark: register('terminal-decoration-mark', 0xeb8a),\n    debugStackframe: register('debug-stackframe', 0xeb8b),\n    debugStackframeFocused: register('debug-stackframe-focused', 0xeb8b),\n    debugBreakpointUnsupported: register('debug-breakpoint-unsupported', 0xeb8c),\n    symbolString: register('symbol-string', 0xeb8d),\n    debugReverseContinue: register('debug-reverse-continue', 0xeb8e),\n    debugStepBack: register('debug-step-back', 0xeb8f),\n    debugRestartFrame: register('debug-restart-frame', 0xeb90),\n    debugAlt: register('debug-alt', 0xeb91),\n    callIncoming: register('call-incoming', 0xeb92),\n    callOutgoing: register('call-outgoing', 0xeb93),\n    menu: register('menu', 0xeb94),\n    expandAll: register('expand-all', 0xeb95),\n    feedback: register('feedback', 0xeb96),\n    gitPullRequestReviewer: register('git-pull-request-reviewer', 0xeb96),\n    groupByRefType: register('group-by-ref-type', 0xeb97),\n    ungroupByRefType: register('ungroup-by-ref-type', 0xeb98),\n    account: register('account', 0xeb99),\n    gitPullRequestAssignee: register('git-pull-request-assignee', 0xeb99),\n    bellDot: register('bell-dot', 0xeb9a),\n    debugConsole: register('debug-console', 0xeb9b),\n    library: register('library', 0xeb9c),\n    output: register('output', 0xeb9d),\n    runAll: register('run-all', 0xeb9e),\n    syncIgnored: register('sync-ignored', 0xeb9f),\n    pinned: register('pinned', 0xeba0),\n    githubInverted: register('github-inverted', 0xeba1),\n    serverProcess: register('server-process', 0xeba2),\n    serverEnvironment: register('server-environment', 0xeba3),\n    pass: register('pass', 0xeba4),\n    issueClosed: register('issue-closed', 0xeba4),\n    stopCircle: register('stop-circle', 0xeba5),\n    playCircle: register('play-circle', 0xeba6),\n    record: register('record', 0xeba7),\n    debugAltSmall: register('debug-alt-small', 0xeba8),\n    vmConnect: register('vm-connect', 0xeba9),\n    cloud: register('cloud', 0xebaa),\n    merge: register('merge', 0xebab),\n    export: register('export', 0xebac),\n    graphLeft: register('graph-left', 0xebad),\n    magnet: register('magnet', 0xebae),\n    notebook: register('notebook', 0xebaf),\n    redo: register('redo', 0xebb0),\n    checkAll: register('check-all', 0xebb1),\n    pinnedDirty: register('pinned-dirty', 0xebb2),\n    passFilled: register('pass-filled', 0xebb3),\n    circleLargeFilled: register('circle-large-filled', 0xebb4),\n    circleLarge: register('circle-large', 0xebb5),\n    circleLargeOutline: register('circle-large-outline', 0xebb5),\n    combine: register('combine', 0xebb6),\n    gather: register('gather', 0xebb6),\n    table: register('table', 0xebb7),\n    variableGroup: register('variable-group', 0xebb8),\n    typeHierarchy: register('type-hierarchy', 0xebb9),\n    typeHierarchySub: register('type-hierarchy-sub', 0xebba),\n    typeHierarchySuper: register('type-hierarchy-super', 0xebbb),\n    gitPullRequestCreate: register('git-pull-request-create', 0xebbc),\n    runAbove: register('run-above', 0xebbd),\n    runBelow: register('run-below', 0xebbe),\n    notebookTemplate: register('notebook-template', 0xebbf),\n    debugRerun: register('debug-rerun', 0xebc0),\n    workspaceTrusted: register('workspace-trusted', 0xebc1),\n    workspaceUntrusted: register('workspace-untrusted', 0xebc2),\n    workspaceUnknown: register('workspace-unknown', 0xebc3),\n    terminalCmd: register('terminal-cmd', 0xebc4),\n    terminalDebian: register('terminal-debian', 0xebc5),\n    terminalLinux: register('terminal-linux', 0xebc6),\n    terminalPowershell: register('terminal-powershell', 0xebc7),\n    terminalTmux: register('terminal-tmux', 0xebc8),\n    terminalUbuntu: register('terminal-ubuntu', 0xebc9),\n    terminalBash: register('terminal-bash', 0xebca),\n    arrowSwap: register('arrow-swap', 0xebcb),\n    copy: register('copy', 0xebcc),\n    personAdd: register('person-add', 0xebcd),\n    filterFilled: register('filter-filled', 0xebce),\n    wand: register('wand', 0xebcf),\n    debugLineByLine: register('debug-line-by-line', 0xebd0),\n    inspect: register('inspect', 0xebd1),\n    layers: register('layers', 0xebd2),\n    layersDot: register('layers-dot', 0xebd3),\n    layersActive: register('layers-active', 0xebd4),\n    compass: register('compass', 0xebd5),\n    compassDot: register('compass-dot', 0xebd6),\n    compassActive: register('compass-active', 0xebd7),\n    azure: register('azure', 0xebd8),\n    issueDraft: register('issue-draft', 0xebd9),\n    gitPullRequestClosed: register('git-pull-request-closed', 0xebda),\n    gitPullRequestDraft: register('git-pull-request-draft', 0xebdb),\n    debugAll: register('debug-all', 0xebdc),\n    debugCoverage: register('debug-coverage', 0xebdd),\n    runErrors: register('run-errors', 0xebde),\n    folderLibrary: register('folder-library', 0xebdf),\n    debugContinueSmall: register('debug-continue-small', 0xebe0),\n    beakerStop: register('beaker-stop', 0xebe1),\n    graphLine: register('graph-line', 0xebe2),\n    graphScatter: register('graph-scatter', 0xebe3),\n    pieChart: register('pie-chart', 0xebe4),\n    bracket: register('bracket', 0xeb0f),\n    bracketDot: register('bracket-dot', 0xebe5),\n    bracketError: register('bracket-error', 0xebe6),\n    lockSmall: register('lock-small', 0xebe7),\n    azureDevops: register('azure-devops', 0xebe8),\n    verifiedFilled: register('verified-filled', 0xebe9),\n    newline: register('newline', 0xebea),\n    layout: register('layout', 0xebeb),\n    layoutActivitybarLeft: register('layout-activitybar-left', 0xebec),\n    layoutActivitybarRight: register('layout-activitybar-right', 0xebed),\n    layoutPanelLeft: register('layout-panel-left', 0xebee),\n    layoutPanelCenter: register('layout-panel-center', 0xebef),\n    layoutPanelJustify: register('layout-panel-justify', 0xebf0),\n    layoutPanelRight: register('layout-panel-right', 0xebf1),\n    layoutPanel: register('layout-panel', 0xebf2),\n    layoutSidebarLeft: register('layout-sidebar-left', 0xebf3),\n    layoutSidebarRight: register('layout-sidebar-right', 0xebf4),\n    layoutStatusbar: register('layout-statusbar', 0xebf5),\n    layoutMenubar: register('layout-menubar', 0xebf6),\n    layoutCentered: register('layout-centered', 0xebf7),\n    target: register('target', 0xebf8),\n    indent: register('indent', 0xebf9),\n    recordSmall: register('record-small', 0xebfa),\n    errorSmall: register('error-small', 0xebfb),\n    terminalDecorationError: register('terminal-decoration-error', 0xebfb),\n    arrowCircleDown: register('arrow-circle-down', 0xebfc),\n    arrowCircleLeft: register('arrow-circle-left', 0xebfd),\n    arrowCircleRight: register('arrow-circle-right', 0xebfe),\n    arrowCircleUp: register('arrow-circle-up', 0xebff),\n    layoutSidebarRightOff: register('layout-sidebar-right-off', 0xec00),\n    layoutPanelOff: register('layout-panel-off', 0xec01),\n    layoutSidebarLeftOff: register('layout-sidebar-left-off', 0xec02),\n    blank: register('blank', 0xec03),\n    heartFilled: register('heart-filled', 0xec04),\n    map: register('map', 0xec05),\n    mapHorizontal: register('map-horizontal', 0xec05),\n    foldHorizontal: register('fold-horizontal', 0xec05),\n    mapFilled: register('map-filled', 0xec06),\n    mapHorizontalFilled: register('map-horizontal-filled', 0xec06),\n    foldHorizontalFilled: register('fold-horizontal-filled', 0xec06),\n    circleSmall: register('circle-small', 0xec07),\n    bellSlash: register('bell-slash', 0xec08),\n    bellSlashDot: register('bell-slash-dot', 0xec09),\n    commentUnresolved: register('comment-unresolved', 0xec0a),\n    gitPullRequestGoToChanges: register('git-pull-request-go-to-changes', 0xec0b),\n    gitPullRequestNewChanges: register('git-pull-request-new-changes', 0xec0c),\n    searchFuzzy: register('search-fuzzy', 0xec0d),\n    commentDraft: register('comment-draft', 0xec0e),\n    send: register('send', 0xec0f),\n    sparkle: register('sparkle', 0xec10),\n    insert: register('insert', 0xec11),\n    mic: register('mic', 0xec12),\n    thumbsdownFilled: register('thumbsdown-filled', 0xec13),\n    thumbsupFilled: register('thumbsup-filled', 0xec14),\n    coffee: register('coffee', 0xec15),\n    snake: register('snake', 0xec16),\n    game: register('game', 0xec17),\n    vr: register('vr', 0xec18),\n    chip: register('chip', 0xec19),\n    piano: register('piano', 0xec1a),\n    music: register('music', 0xec1b),\n    micFilled: register('mic-filled', 0xec1c),\n    repoFetch: register('repo-fetch', 0xec1d),\n    copilot: register('copilot', 0xec1e),\n    lightbulbSparkle: register('lightbulb-sparkle', 0xec1f),\n    robot: register('robot', 0xec20),\n    sparkleFilled: register('sparkle-filled', 0xec21),\n    diffSingle: register('diff-single', 0xec22),\n    diffMultiple: register('diff-multiple', 0xec23),\n    surroundWith: register('surround-with', 0xec24),\n    share: register('share', 0xec25),\n    gitStash: register('git-stash', 0xec26),\n    gitStashApply: register('git-stash-apply', 0xec27),\n    gitStashPop: register('git-stash-pop', 0xec28),\n    vscode: register('vscode', 0xec29),\n    vscodeInsiders: register('vscode-insiders', 0xec2a),\n    codeOss: register('code-oss', 0xec2b),\n    runCoverage: register('run-coverage', 0xec2c),\n    runAllCoverage: register('run-all-coverage', 0xec2d),\n    coverage: register('coverage', 0xec2e),\n    githubProject: register('github-project', 0xec2f),\n    mapVertical: register('map-vertical', 0xec30),\n    foldVertical: register('fold-vertical', 0xec30),\n    mapVerticalFilled: register('map-vertical-filled', 0xec31),\n    foldVerticalFilled: register('fold-vertical-filled', 0xec31),\n    goToSearch: register('go-to-search', 0xec32),\n    percentage: register('percentage', 0xec33),\n    sortPercentage: register('sort-percentage', 0xec33),\n};\n","import { register } from './codiconsUtil.js';\nimport { codiconsLibrary } from './codiconsLibrary.js';\n/**\n * Derived icons, that could become separate icons.\n * These mappings should be moved into the mapping file in the vscode-codicons repo at some point.\n */\nexport const codiconsDerived = {\n    dialogError: register('dialog-error', 'error'),\n    dialogWarning: register('dialog-warning', 'warning'),\n    dialogInfo: register('dialog-info', 'info'),\n    dialogClose: register('dialog-close', 'close'),\n    treeItemExpanded: register('tree-item-expanded', 'chevron-down'), // collapsed is done with rotation\n    treeFilterOnTypeOn: register('tree-filter-on-type-on', 'list-filter'),\n    treeFilterOnTypeOff: register('tree-filter-on-type-off', 'list-selection'),\n    treeFilterClear: register('tree-filter-clear', 'close'),\n    treeItemLoading: register('tree-item-loading', 'loading'),\n    menuSelection: register('menu-selection', 'check'),\n    menuSubmenu: register('menu-submenu', 'chevron-right'),\n    menuBarMore: register('menubar-more', 'more'),\n    scrollbarButtonLeft: register('scrollbar-button-left', 'triangle-left'),\n    scrollbarButtonRight: register('scrollbar-button-right', 'triangle-right'),\n    scrollbarButtonUp: register('scrollbar-button-up', 'triangle-up'),\n    scrollbarButtonDown: register('scrollbar-button-down', 'triangle-down'),\n    toolBarMore: register('toolbar-more', 'more'),\n    quickInputBack: register('quick-input-back', 'arrow-left'),\n    dropDownButton: register('drop-down-button', 0xeab4),\n    symbolCustomColor: register('symbol-customcolor', 0xeb5c),\n    exportIcon: register('export', 0xebac),\n    workspaceUnspecified: register('workspace-unspecified', 0xebc3),\n    newLine: register('newline', 0xebea),\n    thumbsDownFilled: register('thumbsdown-filled', 0xec13),\n    thumbsUpFilled: register('thumbsup-filled', 0xec14),\n    gitFetch: register('git-fetch', 0xec1d),\n    lightbulbSparkleAutofix: register('lightbulb-sparkle-autofix', 0xec1f),\n    debugBreakpointPending: register('debug-breakpoint-pending', 0xebd9),\n};\n/**\n * The Codicon library is a set of default icons that are built-in in VS Code.\n *\n * In the product (outside of base) Codicons should only be used as defaults. In order to have all icons in VS Code\n * themeable, component should define new, UI component specific icons using `iconRegistry.registerIcon`.\n * In that call a Codicon can be named as default.\n */\nexport const Codicon = {\n    ...codiconsLibrary,\n    ...codiconsDerived\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Represents information about a specific difference between two sequences.\n */\nexport class DiffChange {\n    /**\n     * Constructs a new DiffChange with the given sequence information\n     * and content.\n     */\n    constructor(originalStart, originalLength, modifiedStart, modifiedLength) {\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the original sequence.\n     */\n    getOriginalEnd() {\n        return this.originalStart + this.originalLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the modified sequence.\n     */\n    getModifiedEnd() {\n        return this.modifiedStart + this.modifiedLength;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Given a function, returns a function that is only calling that function once.\n */\nexport function createSingleCallFunction(fn, fnDidRunCallback) {\n    const _this = this;\n    let didCall = false;\n    let result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        if (fnDidRunCallback) {\n            try {\n                result = fn.apply(_this, arguments);\n            }\n            finally {\n                fnDidRunCallback();\n            }\n        }\n        else {\n            result = fn.apply(_this, arguments);\n        }\n        return result;\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Lazy {\n    constructor(executor) {\n        this.executor = executor;\n        this._didRun = false;\n    }\n    /**\n     * Get the wrapped value.\n     *\n     * This will force evaluation of the lazy value if it has not been resolved yet. Lazy values are only\n     * resolved once. `getValue` will re-throw exceptions that are hit while resolving the value\n     */\n    get value() {\n        if (!this._didRun) {\n            try {\n                this._value = this.executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    /**\n     * Get the wrapped value without forcing evaluation.\n     */\n    get rawValue() { return this._value; }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass Node {\n    constructor(element) {\n        this.element = element;\n        this.next = Node.Undefined;\n        this.prev = Node.Undefined;\n    }\n}\nNode.Undefined = new Node(undefined);\nexport class LinkedList {\n    constructor() {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    get size() {\n        return this._size;\n    }\n    isEmpty() {\n        return this._first === Node.Undefined;\n    }\n    clear() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            const next = node.next;\n            node.prev = Node.Undefined;\n            node.next = Node.Undefined;\n            node = next;\n        }\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    unshift(element) {\n        return this._insert(element, false);\n    }\n    push(element) {\n        return this._insert(element, true);\n    }\n    _insert(element, atTheEnd) {\n        const newNode = new Node(element);\n        if (this._first === Node.Undefined) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            const oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            const oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        let didRemove = false;\n        return () => {\n            if (!didRemove) {\n                didRemove = true;\n                this._remove(newNode);\n            }\n        };\n    }\n    shift() {\n        if (this._first === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    }\n    pop() {\n        if (this._last === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._last.element;\n            this._remove(this._last);\n            return res;\n        }\n    }\n    _remove(node) {\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n            // middle\n            const anchor = node.prev;\n            anchor.next = node.next;\n            node.next.prev = anchor;\n        }\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n            // only node\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n        }\n        else if (node.next === Node.Undefined) {\n            // last\n            this._last = this._last.prev;\n            this._last.next = Node.Undefined;\n        }\n        else if (node.prev === Node.Undefined) {\n            // first\n            this._first = this._first.next;\n            this._first.prev = Node.Undefined;\n        }\n        // done\n        this._size -= 1;\n    }\n    *[Symbol.iterator]() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            yield node.element;\n            node = node.next;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isMacintosh, isWindows } from './platform.js';\nlet safeProcess;\n// Native sandbox environment\nconst vscodeGlobal = globalThis.vscode;\nif (typeof vscodeGlobal !== 'undefined' && typeof vscodeGlobal.process !== 'undefined') {\n    const sandboxProcess = vscodeGlobal.process;\n    safeProcess = {\n        get platform() { return sandboxProcess.platform; },\n        get arch() { return sandboxProcess.arch; },\n        get env() { return sandboxProcess.env; },\n        cwd() { return sandboxProcess.cwd(); }\n    };\n}\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n    safeProcess = {\n        get platform() { return process.platform; },\n        get arch() { return process.arch; },\n        get env() { return process.env; },\n        cwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n    };\n}\n// Web environment\nelse {\n    safeProcess = {\n        // Supported\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n        get arch() { return undefined; /* arch is undefined in web */ },\n        // Unsupported\n        get env() { return {}; },\n        cwd() { return '/'; }\n    };\n}\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n *\n * @skipMangle\n */\nexport const cwd = safeProcess.cwd;\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nconst hasPerformanceNow = (globalThis.performance && typeof globalThis.performance.now === 'function');\nexport class StopWatch {\n    static create(highResolution) {\n        return new StopWatch(highResolution);\n    }\n    constructor(highResolution) {\n        this._now = hasPerformanceNow && highResolution === false ? Date.now : globalThis.performance.now.bind(globalThis.performance);\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    stop() {\n        this._stopTime = this._now();\n    }\n    reset() {\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    elapsed() {\n        if (this._stopTime !== -1) {\n            return this._stopTime - this._startTime;\n        }\n        return this._now() - this._startTime;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* Constants.MAX_UINT_8 */) {\n        return 255 /* Constants.MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* Constants.MAX_UINT_32 */) {\n        return 4294967295 /* Constants.MAX_UINT_32 */;\n    }\n    return v | 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { OffsetRange } from './offsetRange.js';\nimport { Range } from './range.js';\nimport { findFirstIdxMonotonousOrArrLen, findLastIdxMonotonous, findLastMonotonous } from '../../../base/common/arraysFind.js';\n/**\n * A range of lines (1-based).\n */\nexport class LineRange {\n    static fromRangeInclusive(range) {\n        return new LineRange(range.startLineNumber, range.endLineNumber + 1);\n    }\n    /**\n     * @param lineRanges An array of sorted line ranges.\n     */\n    static joinMany(lineRanges) {\n        if (lineRanges.length === 0) {\n            return [];\n        }\n        let result = new LineRangeSet(lineRanges[0].slice());\n        for (let i = 1; i < lineRanges.length; i++) {\n            result = result.getUnion(new LineRangeSet(lineRanges[i].slice()));\n        }\n        return result.ranges;\n    }\n    static join(lineRanges) {\n        if (lineRanges.length === 0) {\n            throw new BugIndicatingError('lineRanges cannot be empty');\n        }\n        let startLineNumber = lineRanges[0].startLineNumber;\n        let endLineNumberExclusive = lineRanges[0].endLineNumberExclusive;\n        for (let i = 1; i < lineRanges.length; i++) {\n            startLineNumber = Math.min(startLineNumber, lineRanges[i].startLineNumber);\n            endLineNumberExclusive = Math.max(endLineNumberExclusive, lineRanges[i].endLineNumberExclusive);\n        }\n        return new LineRange(startLineNumber, endLineNumberExclusive);\n    }\n    static ofLength(startLineNumber, length) {\n        return new LineRange(startLineNumber, startLineNumber + length);\n    }\n    /**\n     * @internal\n     */\n    static deserialize(lineRange) {\n        return new LineRange(lineRange[0], lineRange[1]);\n    }\n    constructor(startLineNumber, endLineNumberExclusive) {\n        if (startLineNumber > endLineNumberExclusive) {\n            throw new BugIndicatingError(`startLineNumber ${startLineNumber} cannot be after endLineNumberExclusive ${endLineNumberExclusive}`);\n        }\n        this.startLineNumber = startLineNumber;\n        this.endLineNumberExclusive = endLineNumberExclusive;\n    }\n    /**\n     * Indicates if this line range contains the given line number.\n     */\n    contains(lineNumber) {\n        return this.startLineNumber <= lineNumber && lineNumber < this.endLineNumberExclusive;\n    }\n    /**\n     * Indicates if this line range is empty.\n     */\n    get isEmpty() {\n        return this.startLineNumber === this.endLineNumberExclusive;\n    }\n    /**\n     * Moves this line range by the given offset of line numbers.\n     */\n    delta(offset) {\n        return new LineRange(this.startLineNumber + offset, this.endLineNumberExclusive + offset);\n    }\n    deltaLength(offset) {\n        return new LineRange(this.startLineNumber, this.endLineNumberExclusive + offset);\n    }\n    /**\n     * The number of lines this line range spans.\n     */\n    get length() {\n        return this.endLineNumberExclusive - this.startLineNumber;\n    }\n    /**\n     * Creates a line range that combines this and the given line range.\n     */\n    join(other) {\n        return new LineRange(Math.min(this.startLineNumber, other.startLineNumber), Math.max(this.endLineNumberExclusive, other.endLineNumberExclusive));\n    }\n    toString() {\n        return `[${this.startLineNumber},${this.endLineNumberExclusive})`;\n    }\n    /**\n     * The resulting range is empty if the ranges do not intersect, but touch.\n     * If the ranges don't even touch, the result is undefined.\n     */\n    intersect(other) {\n        const startLineNumber = Math.max(this.startLineNumber, other.startLineNumber);\n        const endLineNumberExclusive = Math.min(this.endLineNumberExclusive, other.endLineNumberExclusive);\n        if (startLineNumber <= endLineNumberExclusive) {\n            return new LineRange(startLineNumber, endLineNumberExclusive);\n        }\n        return undefined;\n    }\n    intersectsStrict(other) {\n        return this.startLineNumber < other.endLineNumberExclusive && other.startLineNumber < this.endLineNumberExclusive;\n    }\n    overlapOrTouch(other) {\n        return this.startLineNumber <= other.endLineNumberExclusive && other.startLineNumber <= this.endLineNumberExclusive;\n    }\n    equals(b) {\n        return this.startLineNumber === b.startLineNumber && this.endLineNumberExclusive === b.endLineNumberExclusive;\n    }\n    toInclusiveRange() {\n        if (this.isEmpty) {\n            return null;\n        }\n        return new Range(this.startLineNumber, 1, this.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER);\n    }\n    /**\n     * @deprecated Using this function is discouraged because it might lead to bugs: The end position is not guaranteed to be a valid position!\n    */\n    toExclusiveRange() {\n        return new Range(this.startLineNumber, 1, this.endLineNumberExclusive, 1);\n    }\n    mapToLineArray(f) {\n        const result = [];\n        for (let lineNumber = this.startLineNumber; lineNumber < this.endLineNumberExclusive; lineNumber++) {\n            result.push(f(lineNumber));\n        }\n        return result;\n    }\n    forEach(f) {\n        for (let lineNumber = this.startLineNumber; lineNumber < this.endLineNumberExclusive; lineNumber++) {\n            f(lineNumber);\n        }\n    }\n    /**\n     * @internal\n     */\n    serialize() {\n        return [this.startLineNumber, this.endLineNumberExclusive];\n    }\n    includes(lineNumber) {\n        return this.startLineNumber <= lineNumber && lineNumber < this.endLineNumberExclusive;\n    }\n    /**\n     * Converts this 1-based line range to a 0-based offset range (subtracts 1!).\n     * @internal\n     */\n    toOffsetRange() {\n        return new OffsetRange(this.startLineNumber - 1, this.endLineNumberExclusive - 1);\n    }\n}\nexport class LineRangeSet {\n    constructor(\n    /**\n     * Sorted by start line number.\n     * No two line ranges are touching or intersecting.\n     */\n    _normalizedRanges = []) {\n        this._normalizedRanges = _normalizedRanges;\n    }\n    get ranges() {\n        return this._normalizedRanges;\n    }\n    addRange(range) {\n        if (range.length === 0) {\n            return;\n        }\n        // Idea: Find joinRange such that:\n        // replaceRange = _normalizedRanges.replaceRange(joinRange, range.joinAll(joinRange.map(idx => this._normalizedRanges[idx])))\n        // idx of first element that touches range or that is after range\n        const joinRangeStartIdx = findFirstIdxMonotonousOrArrLen(this._normalizedRanges, r => r.endLineNumberExclusive >= range.startLineNumber);\n        // idx of element after { last element that touches range or that is before range }\n        const joinRangeEndIdxExclusive = findLastIdxMonotonous(this._normalizedRanges, r => r.startLineNumber <= range.endLineNumberExclusive) + 1;\n        if (joinRangeStartIdx === joinRangeEndIdxExclusive) {\n            // If there is no element that touches range, then joinRangeStartIdx === joinRangeEndIdxExclusive and that value is the index of the element after range\n            this._normalizedRanges.splice(joinRangeStartIdx, 0, range);\n        }\n        else if (joinRangeStartIdx === joinRangeEndIdxExclusive - 1) {\n            // Else, there is an element that touches range and in this case it is both the first and last element. Thus we can replace it\n            const joinRange = this._normalizedRanges[joinRangeStartIdx];\n            this._normalizedRanges[joinRangeStartIdx] = joinRange.join(range);\n        }\n        else {\n            // First and last element are different - we need to replace the entire range\n            const joinRange = this._normalizedRanges[joinRangeStartIdx].join(this._normalizedRanges[joinRangeEndIdxExclusive - 1]).join(range);\n            this._normalizedRanges.splice(joinRangeStartIdx, joinRangeEndIdxExclusive - joinRangeStartIdx, joinRange);\n        }\n    }\n    contains(lineNumber) {\n        const rangeThatStartsBeforeEnd = findLastMonotonous(this._normalizedRanges, r => r.startLineNumber <= lineNumber);\n        return !!rangeThatStartsBeforeEnd && rangeThatStartsBeforeEnd.endLineNumberExclusive > lineNumber;\n    }\n    intersects(range) {\n        const rangeThatStartsBeforeEnd = findLastMonotonous(this._normalizedRanges, r => r.startLineNumber < range.endLineNumberExclusive);\n        return !!rangeThatStartsBeforeEnd && rangeThatStartsBeforeEnd.endLineNumberExclusive > range.startLineNumber;\n    }\n    getUnion(other) {\n        if (this._normalizedRanges.length === 0) {\n            return other;\n        }\n        if (other._normalizedRanges.length === 0) {\n            return this;\n        }\n        const result = [];\n        let i1 = 0;\n        let i2 = 0;\n        let current = null;\n        while (i1 < this._normalizedRanges.length || i2 < other._normalizedRanges.length) {\n            let next = null;\n            if (i1 < this._normalizedRanges.length && i2 < other._normalizedRanges.length) {\n                const lineRange1 = this._normalizedRanges[i1];\n                const lineRange2 = other._normalizedRanges[i2];\n                if (lineRange1.startLineNumber < lineRange2.startLineNumber) {\n                    next = lineRange1;\n                    i1++;\n                }\n                else {\n                    next = lineRange2;\n                    i2++;\n                }\n            }\n            else if (i1 < this._normalizedRanges.length) {\n                next = this._normalizedRanges[i1];\n                i1++;\n            }\n            else {\n                next = other._normalizedRanges[i2];\n                i2++;\n            }\n            if (current === null) {\n                current = next;\n            }\n            else {\n                if (current.endLineNumberExclusive >= next.startLineNumber) {\n                    // merge\n                    current = new LineRange(current.startLineNumber, Math.max(current.endLineNumberExclusive, next.endLineNumberExclusive));\n                }\n                else {\n                    // push\n                    result.push(current);\n                    current = next;\n                }\n            }\n        }\n        if (current !== null) {\n            result.push(current);\n        }\n        return new LineRangeSet(result);\n    }\n    /**\n     * Subtracts all ranges in this set from `range` and returns the result.\n     */\n    subtractFrom(range) {\n        // idx of first element that touches range or that is after range\n        const joinRangeStartIdx = findFirstIdxMonotonousOrArrLen(this._normalizedRanges, r => r.endLineNumberExclusive >= range.startLineNumber);\n        // idx of element after { last element that touches range or that is before range }\n        const joinRangeEndIdxExclusive = findLastIdxMonotonous(this._normalizedRanges, r => r.startLineNumber <= range.endLineNumberExclusive) + 1;\n        if (joinRangeStartIdx === joinRangeEndIdxExclusive) {\n            return new LineRangeSet([range]);\n        }\n        const result = [];\n        let startLineNumber = range.startLineNumber;\n        for (let i = joinRangeStartIdx; i < joinRangeEndIdxExclusive; i++) {\n            const r = this._normalizedRanges[i];\n            if (r.startLineNumber > startLineNumber) {\n                result.push(new LineRange(startLineNumber, r.startLineNumber));\n            }\n            startLineNumber = r.endLineNumberExclusive;\n        }\n        if (startLineNumber < range.endLineNumberExclusive) {\n            result.push(new LineRange(startLineNumber, range.endLineNumberExclusive));\n        }\n        return new LineRangeSet(result);\n    }\n    toString() {\n        return this._normalizedRanges.map(r => r.toString()).join(', ');\n    }\n    getIntersection(other) {\n        const result = [];\n        let i1 = 0;\n        let i2 = 0;\n        while (i1 < this._normalizedRanges.length && i2 < other._normalizedRanges.length) {\n            const r1 = this._normalizedRanges[i1];\n            const r2 = other._normalizedRanges[i2];\n            const i = r1.intersect(r2);\n            if (i && !i.isEmpty) {\n                result.push(i);\n            }\n            if (r1.endLineNumberExclusive < r2.endLineNumberExclusive) {\n                i1++;\n            }\n            else {\n                i2++;\n            }\n        }\n        return new LineRangeSet(result);\n    }\n    getWithDelta(value) {\n        return new LineRangeSet(this._normalizedRanges.map(r => r.delta(value)));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * A position in the editor.\n */\nexport class Position {\n    constructor(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Create a new position from this position.\n     *\n     * @param newLineNumber new line number\n     * @param newColumn new column\n     */\n    with(newLineNumber = this.lineNumber, newColumn = this.column) {\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\n            return this;\n        }\n        else {\n            return new Position(newLineNumber, newColumn);\n        }\n    }\n    /**\n     * Derive a new position from this position.\n     *\n     * @param deltaLineNumber line number delta\n     * @param deltaColumn column delta\n     */\n    delta(deltaLineNumber = 0, deltaColumn = 0) {\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n    }\n    /**\n     * Test if this position equals other position\n     */\n    equals(other) {\n        return Position.equals(this, other);\n    }\n    /**\n     * Test if position `a` equals position `b`\n     */\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    }\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    isBefore(other) {\n        return Position.isBefore(this, other);\n    }\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    static isBefore(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    }\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    isBeforeOrEqual(other) {\n        return Position.isBeforeOrEqual(this, other);\n    }\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    static isBeforeOrEqual(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    }\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    static compare(a, b) {\n        const aLineNumber = a.lineNumber | 0;\n        const bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            const aColumn = a.column | 0;\n            const bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    }\n    /**\n     * Clone this position.\n     */\n    clone() {\n        return new Position(this.lineNumber, this.column);\n    }\n    /**\n     * Convert to a human-readable representation.\n     */\n    toString() {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    }\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    static lift(pos) {\n        return new Position(pos.lineNumber, pos.column);\n    }\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    static isIPosition(obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    }\n    toJSON() {\n        return {\n            lineNumber: this.lineNumber,\n            column: this.column\n        };\n    }\n}\n","import { OffsetRange } from './offsetRange.js';\nimport { TextLength } from './textLength.js';\nexport class PositionOffsetTransformer {\n    constructor(text) {\n        this.text = text;\n        this.lineStartOffsetByLineIdx = [];\n        this.lineStartOffsetByLineIdx.push(0);\n        for (let i = 0; i < text.length; i++) {\n            if (text.charAt(i) === '\\n') {\n                this.lineStartOffsetByLineIdx.push(i + 1);\n            }\n        }\n    }\n    getOffset(position) {\n        return this.lineStartOffsetByLineIdx[position.lineNumber - 1] + position.column - 1;\n    }\n    getOffsetRange(range) {\n        return new OffsetRange(this.getOffset(range.getStartPosition()), this.getOffset(range.getEndPosition()));\n    }\n    get textLength() {\n        const lineIdx = this.lineStartOffsetByLineIdx.length - 1;\n        return new TextLength(lineIdx, this.text.length - this.lineStartOffsetByLineIdx[lineIdx]);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n    constructor(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    /**\n     * Test if this range is empty.\n     */\n    isEmpty() {\n        return Range.isEmpty(this);\n    }\n    /**\n     * Test if `range` is empty.\n     */\n    static isEmpty(range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    }\n    /**\n     * Test if position is in this range. If the position is at the edges, will return true.\n     */\n    containsPosition(position) {\n        return Range.containsPosition(this, position);\n    }\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\n     */\n    static containsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return false.\n     * @internal\n     */\n    static strictContainsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column <= range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if range is in this range. If the range is equal to this range, will return true.\n     */\n    containsRange(range) {\n        return Range.containsRange(this, range);\n    }\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    static containsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true.\n     */\n    strictContainsRange(range) {\n        return Range.strictContainsRange(this, range);\n    }\n    /**\n     * Test if `otherRange` is strictly in `range` (must start after, and end before). If the ranges are equal, will return false.\n     */\n    static strictContainsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    plusRange(range) {\n        return Range.plusRange(this, range);\n    }\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    static plusRange(a, b) {\n        let startLineNumber;\n        let startColumn;\n        let endLineNumber;\n        let endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    }\n    /**\n     * A intersection of the two ranges.\n     */\n    intersectRanges(range) {\n        return Range.intersectRanges(this, range);\n    }\n    /**\n     * A intersection of the two ranges.\n     */\n    static intersectRanges(a, b) {\n        let resultStartLineNumber = a.startLineNumber;\n        let resultStartColumn = a.startColumn;\n        let resultEndLineNumber = a.endLineNumber;\n        let resultEndColumn = a.endColumn;\n        const otherStartLineNumber = b.startLineNumber;\n        const otherStartColumn = b.startColumn;\n        const otherEndLineNumber = b.endLineNumber;\n        const otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        // Check if selection is now empty\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    }\n    /**\n     * Test if this range equals other.\n     */\n    equalsRange(other) {\n        return Range.equalsRange(this, other);\n    }\n    /**\n     * Test if range `a` equals `b`.\n     */\n    static equalsRange(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    }\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    getEndPosition() {\n        return Range.getEndPosition(this);\n    }\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    static getEndPosition(range) {\n        return new Position(range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    getStartPosition() {\n        return Range.getStartPosition(this);\n    }\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    static getStartPosition(range) {\n        return new Position(range.startLineNumber, range.startColumn);\n    }\n    /**\n     * Transform to a user presentable string representation.\n     */\n    toString() {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    }\n    /**\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n     */\n    setEndPosition(endLineNumber, endColumn) {\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    }\n    /**\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n     */\n    setStartPosition(startLineNumber, startColumn) {\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    }\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    collapseToStart() {\n        return Range.collapseToStart(this);\n    }\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    static collapseToStart(range) {\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    }\n    /**\n     * Create a new empty range using this range's end position.\n     */\n    collapseToEnd() {\n        return Range.collapseToEnd(this);\n    }\n    /**\n     * Create a new empty range using this range's end position.\n     */\n    static collapseToEnd(range) {\n        return new Range(range.endLineNumber, range.endColumn, range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Moves the range by the given amount of lines.\n     */\n    delta(lineCount) {\n        return new Range(this.startLineNumber + lineCount, this.startColumn, this.endLineNumber + lineCount, this.endColumn);\n    }\n    // ---\n    static fromPositions(start, end = start) {\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    }\n    static lift(range) {\n        if (!range) {\n            return null;\n        }\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Test if `obj` is an `IRange`.\n     */\n    static isIRange(obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    }\n    /**\n     * Test if the two ranges are touching in any way.\n     */\n    static areIntersectingOrTouching(a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    }\n    /**\n     * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n     */\n    static areIntersecting(a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    }\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the startPosition and then on the endPosition\n     */\n    static compareRangesUsingStarts(a, b) {\n        if (a && b) {\n            const aStartLineNumber = a.startLineNumber | 0;\n            const bStartLineNumber = b.startLineNumber | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                const aStartColumn = a.startColumn | 0;\n                const bStartColumn = b.startColumn | 0;\n                if (aStartColumn === bStartColumn) {\n                    const aEndLineNumber = a.endLineNumber | 0;\n                    const bEndLineNumber = b.endLineNumber | 0;\n                    if (aEndLineNumber === bEndLineNumber) {\n                        const aEndColumn = a.endColumn | 0;\n                        const bEndColumn = b.endColumn | 0;\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        }\n        const aExists = (a ? 1 : 0);\n        const bExists = (b ? 1 : 0);\n        return aExists - bExists;\n    }\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the endPosition and then on the startPosition\n     */\n    static compareRangesUsingEnds(a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    }\n    /**\n     * Test if the range spans multiple lines.\n     */\n    static spansMultipleLines(range) {\n        return range.endLineNumber > range.startLineNumber;\n    }\n    toJSON() {\n        return this;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * Represents a non-negative length of text in terms of line and column count.\n*/\nexport class TextLength {\n    static betweenPositions(position1, position2) {\n        if (position1.lineNumber === position2.lineNumber) {\n            return new TextLength(0, position2.column - position1.column);\n        }\n        else {\n            return new TextLength(position2.lineNumber - position1.lineNumber, position2.column - 1);\n        }\n    }\n    static ofRange(range) {\n        return TextLength.betweenPositions(range.getStartPosition(), range.getEndPosition());\n    }\n    static ofText(text) {\n        let line = 0;\n        let column = 0;\n        for (const c of text) {\n            if (c === '\\n') {\n                line++;\n                column = 0;\n            }\n            else {\n                column++;\n            }\n        }\n        return new TextLength(line, column);\n    }\n    constructor(lineCount, columnCount) {\n        this.lineCount = lineCount;\n        this.columnCount = columnCount;\n    }\n    isGreaterThanOrEqualTo(other) {\n        if (this.lineCount !== other.lineCount) {\n            return this.lineCount > other.lineCount;\n        }\n        return this.columnCount >= other.columnCount;\n    }\n    createRange(startPosition) {\n        if (this.lineCount === 0) {\n            return new Range(startPosition.lineNumber, startPosition.column, startPosition.lineNumber, startPosition.column + this.columnCount);\n        }\n        else {\n            return new Range(startPosition.lineNumber, startPosition.column, startPosition.lineNumber + this.lineCount, this.columnCount + 1);\n        }\n    }\n    addToPosition(position) {\n        if (this.lineCount === 0) {\n            return new Position(position.lineNumber, position.column + this.columnCount);\n        }\n        else {\n            return new Position(position.lineNumber + this.lineCount, this.columnCount + 1);\n        }\n    }\n    toString() {\n        return `${this.lineCount},${this.columnCount}`;\n    }\n}\nTextLength.zero = new TextLength(0, 0);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { forEachAdjacent } from '../../../../../base/common/arrays.js';\nimport { BugIndicatingError } from '../../../../../base/common/errors.js';\nimport { OffsetRange } from '../../../core/offsetRange.js';\nexport class DiffAlgorithmResult {\n    static trivial(seq1, seq2) {\n        return new DiffAlgorithmResult([new SequenceDiff(OffsetRange.ofLength(seq1.length), OffsetRange.ofLength(seq2.length))], false);\n    }\n    static trivialTimedOut(seq1, seq2) {\n        return new DiffAlgorithmResult([new SequenceDiff(OffsetRange.ofLength(seq1.length), OffsetRange.ofLength(seq2.length))], true);\n    }\n    constructor(diffs, \n    /**\n     * Indicates if the time out was reached.\n     * In that case, the diffs might be an approximation and the user should be asked to rerun the diff with more time.\n     */\n    hitTimeout) {\n        this.diffs = diffs;\n        this.hitTimeout = hitTimeout;\n    }\n}\nexport class SequenceDiff {\n    static invert(sequenceDiffs, doc1Length) {\n        const result = [];\n        forEachAdjacent(sequenceDiffs, (a, b) => {\n            result.push(SequenceDiff.fromOffsetPairs(a ? a.getEndExclusives() : OffsetPair.zero, b ? b.getStarts() : new OffsetPair(doc1Length, (a ? a.seq2Range.endExclusive - a.seq1Range.endExclusive : 0) + doc1Length)));\n        });\n        return result;\n    }\n    static fromOffsetPairs(start, endExclusive) {\n        return new SequenceDiff(new OffsetRange(start.offset1, endExclusive.offset1), new OffsetRange(start.offset2, endExclusive.offset2));\n    }\n    constructor(seq1Range, seq2Range) {\n        this.seq1Range = seq1Range;\n        this.seq2Range = seq2Range;\n    }\n    swap() {\n        return new SequenceDiff(this.seq2Range, this.seq1Range);\n    }\n    toString() {\n        return `${this.seq1Range} <-> ${this.seq2Range}`;\n    }\n    join(other) {\n        return new SequenceDiff(this.seq1Range.join(other.seq1Range), this.seq2Range.join(other.seq2Range));\n    }\n    delta(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return new SequenceDiff(this.seq1Range.delta(offset), this.seq2Range.delta(offset));\n    }\n    deltaStart(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return new SequenceDiff(this.seq1Range.deltaStart(offset), this.seq2Range.deltaStart(offset));\n    }\n    deltaEnd(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return new SequenceDiff(this.seq1Range.deltaEnd(offset), this.seq2Range.deltaEnd(offset));\n    }\n    intersect(other) {\n        const i1 = this.seq1Range.intersect(other.seq1Range);\n        const i2 = this.seq2Range.intersect(other.seq2Range);\n        if (!i1 || !i2) {\n            return undefined;\n        }\n        return new SequenceDiff(i1, i2);\n    }\n    getStarts() {\n        return new OffsetPair(this.seq1Range.start, this.seq2Range.start);\n    }\n    getEndExclusives() {\n        return new OffsetPair(this.seq1Range.endExclusive, this.seq2Range.endExclusive);\n    }\n}\nexport class OffsetPair {\n    constructor(offset1, offset2) {\n        this.offset1 = offset1;\n        this.offset2 = offset2;\n    }\n    toString() {\n        return `${this.offset1} <-> ${this.offset2}`;\n    }\n    delta(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return new OffsetPair(this.offset1 + offset, this.offset2 + offset);\n    }\n    equals(other) {\n        return this.offset1 === other.offset1 && this.offset2 === other.offset2;\n    }\n}\nOffsetPair.zero = new OffsetPair(0, 0);\nOffsetPair.max = new OffsetPair(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\nexport class InfiniteTimeout {\n    isValid() {\n        return true;\n    }\n}\nInfiniteTimeout.instance = new InfiniteTimeout();\nexport class DateTimeout {\n    constructor(timeout) {\n        this.timeout = timeout;\n        this.startTime = Date.now();\n        this.valid = true;\n        if (timeout <= 0) {\n            throw new BugIndicatingError('timeout must be positive');\n        }\n    }\n    // Recommendation: Set a log-point `{this.disable()}` in the body\n    isValid() {\n        const valid = Date.now() - this.startTime < this.timeout;\n        if (!valid && this.valid) {\n            this.valid = false; // timeout reached\n            // eslint-disable-next-line no-debugger\n            debugger; // WARNING: Most likely debugging caused the timeout. Call `this.disable()` to continue without timing out.\n        }\n        return this.valid;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Array2D {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        this.array = [];\n        this.array = new Array(width * height);\n    }\n    get(x, y) {\n        return this.array[x + y * this.width];\n    }\n    set(x, y, value) {\n        this.array[x + y * this.width] = value;\n    }\n}\nexport function isSpace(charCode) {\n    return charCode === 32 /* CharCode.Space */ || charCode === 9 /* CharCode.Tab */;\n}\nexport class LineRangeFragment {\n    static getKey(chr) {\n        let key = this.chrKeys.get(chr);\n        if (key === undefined) {\n            key = this.chrKeys.size;\n            this.chrKeys.set(chr, key);\n        }\n        return key;\n    }\n    constructor(range, lines, source) {\n        this.range = range;\n        this.lines = lines;\n        this.source = source;\n        this.histogram = [];\n        let counter = 0;\n        for (let i = range.startLineNumber - 1; i < range.endLineNumberExclusive - 1; i++) {\n            const line = lines[i];\n            for (let j = 0; j < line.length; j++) {\n                counter++;\n                const chr = line[j];\n                const key = LineRangeFragment.getKey(chr);\n                this.histogram[key] = (this.histogram[key] || 0) + 1;\n            }\n            counter++;\n            const key = LineRangeFragment.getKey('\\n');\n            this.histogram[key] = (this.histogram[key] || 0) + 1;\n        }\n        this.totalCount = counter;\n    }\n    computeSimilarity(other) {\n        var _a, _b;\n        let sumDifferences = 0;\n        const maxLength = Math.max(this.histogram.length, other.histogram.length);\n        for (let i = 0; i < maxLength; i++) {\n            sumDifferences += Math.abs(((_a = this.histogram[i]) !== null && _a !== void 0 ? _a : 0) - ((_b = other.histogram[i]) !== null && _b !== void 0 ? _b : 0));\n        }\n        return 1 - (sumDifferences / (this.totalCount + other.totalCount));\n    }\n}\nLineRangeFragment.chrKeys = new Map();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { OffsetRange } from '../../../core/offsetRange.js';\nimport { SequenceDiff, InfiniteTimeout, DiffAlgorithmResult } from './diffAlgorithm.js';\nimport { Array2D } from '../utils.js';\n/**\n * A O(MN) diffing algorithm that supports a score function.\n * The algorithm can be improved by processing the 2d array diagonally.\n*/\nexport class DynamicProgrammingDiffing {\n    compute(sequence1, sequence2, timeout = InfiniteTimeout.instance, equalityScore) {\n        if (sequence1.length === 0 || sequence2.length === 0) {\n            return DiffAlgorithmResult.trivial(sequence1, sequence2);\n        }\n        /**\n         * lcsLengths.get(i, j): Length of the longest common subsequence of sequence1.substring(0, i + 1) and sequence2.substring(0, j + 1).\n         */\n        const lcsLengths = new Array2D(sequence1.length, sequence2.length);\n        const directions = new Array2D(sequence1.length, sequence2.length);\n        const lengths = new Array2D(sequence1.length, sequence2.length);\n        // ==== Initializing lcsLengths ====\n        for (let s1 = 0; s1 < sequence1.length; s1++) {\n            for (let s2 = 0; s2 < sequence2.length; s2++) {\n                if (!timeout.isValid()) {\n                    return DiffAlgorithmResult.trivialTimedOut(sequence1, sequence2);\n                }\n                const horizontalLen = s1 === 0 ? 0 : lcsLengths.get(s1 - 1, s2);\n                const verticalLen = s2 === 0 ? 0 : lcsLengths.get(s1, s2 - 1);\n                let extendedSeqScore;\n                if (sequence1.getElement(s1) === sequence2.getElement(s2)) {\n                    if (s1 === 0 || s2 === 0) {\n                        extendedSeqScore = 0;\n                    }\n                    else {\n                        extendedSeqScore = lcsLengths.get(s1 - 1, s2 - 1);\n                    }\n                    if (s1 > 0 && s2 > 0 && directions.get(s1 - 1, s2 - 1) === 3) {\n                        // Prefer consecutive diagonals\n                        extendedSeqScore += lengths.get(s1 - 1, s2 - 1);\n                    }\n                    extendedSeqScore += (equalityScore ? equalityScore(s1, s2) : 1);\n                }\n                else {\n                    extendedSeqScore = -1;\n                }\n                const newValue = Math.max(horizontalLen, verticalLen, extendedSeqScore);\n                if (newValue === extendedSeqScore) {\n                    // Prefer diagonals\n                    const prevLen = s1 > 0 && s2 > 0 ? lengths.get(s1 - 1, s2 - 1) : 0;\n                    lengths.set(s1, s2, prevLen + 1);\n                    directions.set(s1, s2, 3);\n                }\n                else if (newValue === horizontalLen) {\n                    lengths.set(s1, s2, 0);\n                    directions.set(s1, s2, 1);\n                }\n                else if (newValue === verticalLen) {\n                    lengths.set(s1, s2, 0);\n                    directions.set(s1, s2, 2);\n                }\n                lcsLengths.set(s1, s2, newValue);\n            }\n        }\n        // ==== Backtracking ====\n        const result = [];\n        let lastAligningPosS1 = sequence1.length;\n        let lastAligningPosS2 = sequence2.length;\n        function reportDecreasingAligningPositions(s1, s2) {\n            if (s1 + 1 !== lastAligningPosS1 || s2 + 1 !== lastAligningPosS2) {\n                result.push(new SequenceDiff(new OffsetRange(s1 + 1, lastAligningPosS1), new OffsetRange(s2 + 1, lastAligningPosS2)));\n            }\n            lastAligningPosS1 = s1;\n            lastAligningPosS2 = s2;\n        }\n        let s1 = sequence1.length - 1;\n        let s2 = sequence2.length - 1;\n        while (s1 >= 0 && s2 >= 0) {\n            if (directions.get(s1, s2) === 3) {\n                reportDecreasingAligningPositions(s1, s2);\n                s1--;\n                s2--;\n            }\n            else {\n                if (directions.get(s1, s2) === 1) {\n                    s1--;\n                }\n                else {\n                    s2--;\n                }\n            }\n        }\n        reportDecreasingAligningPositions(-1, -1);\n        result.reverse();\n        return new DiffAlgorithmResult(result, false);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { OffsetRange } from '../../../core/offsetRange.js';\nimport { DiffAlgorithmResult, InfiniteTimeout, SequenceDiff } from './diffAlgorithm.js';\n/**\n * An O(ND) diff algorithm that has a quadratic space worst-case complexity.\n*/\nexport class MyersDiffAlgorithm {\n    compute(seq1, seq2, timeout = InfiniteTimeout.instance) {\n        // These are common special cases.\n        // The early return improves performance dramatically.\n        if (seq1.length === 0 || seq2.length === 0) {\n            return DiffAlgorithmResult.trivial(seq1, seq2);\n        }\n        const seqX = seq1; // Text on the x axis\n        const seqY = seq2; // Text on the y axis\n        function getXAfterSnake(x, y) {\n            while (x < seqX.length && y < seqY.length && seqX.getElement(x) === seqY.getElement(y)) {\n                x++;\n                y++;\n            }\n            return x;\n        }\n        let d = 0;\n        // V[k]: X value of longest d-line that ends in diagonal k.\n        // d-line: path from (0,0) to (x,y) that uses exactly d non-diagonals.\n        // diagonal k: Set of points (x,y) with x-y = k.\n        // k=1 -> (1,0),(2,1)\n        const V = new FastInt32Array();\n        V.set(0, getXAfterSnake(0, 0));\n        const paths = new FastArrayNegativeIndices();\n        paths.set(0, V.get(0) === 0 ? null : new SnakePath(null, 0, 0, V.get(0)));\n        let k = 0;\n        loop: while (true) {\n            d++;\n            if (!timeout.isValid()) {\n                return DiffAlgorithmResult.trivialTimedOut(seqX, seqY);\n            }\n            // The paper has `for (k = -d; k <= d; k += 2)`, but we can ignore diagonals that cannot influence the result.\n            const lowerBound = -Math.min(d, seqY.length + (d % 2));\n            const upperBound = Math.min(d, seqX.length + (d % 2));\n            for (k = lowerBound; k <= upperBound; k += 2) {\n                let step = 0;\n                // We can use the X values of (d-1)-lines to compute X value of the longest d-lines.\n                const maxXofDLineTop = k === upperBound ? -1 : V.get(k + 1); // We take a vertical non-diagonal (add a symbol in seqX)\n                const maxXofDLineLeft = k === lowerBound ? -1 : V.get(k - 1) + 1; // We take a horizontal non-diagonal (+1 x) (delete a symbol in seqX)\n                step++;\n                const x = Math.min(Math.max(maxXofDLineTop, maxXofDLineLeft), seqX.length);\n                const y = x - k;\n                step++;\n                if (x > seqX.length || y > seqY.length) {\n                    // This diagonal is irrelevant for the result.\n                    // TODO: Don't pay the cost for this in the next iteration.\n                    continue;\n                }\n                const newMaxX = getXAfterSnake(x, y);\n                V.set(k, newMaxX);\n                const lastPath = x === maxXofDLineTop ? paths.get(k + 1) : paths.get(k - 1);\n                paths.set(k, newMaxX !== x ? new SnakePath(lastPath, x, y, newMaxX - x) : lastPath);\n                if (V.get(k) === seqX.length && V.get(k) - k === seqY.length) {\n                    break loop;\n                }\n            }\n        }\n        let path = paths.get(k);\n        const result = [];\n        let lastAligningPosS1 = seqX.length;\n        let lastAligningPosS2 = seqY.length;\n        while (true) {\n            const endX = path ? path.x + path.length : 0;\n            const endY = path ? path.y + path.length : 0;\n            if (endX !== lastAligningPosS1 || endY !== lastAligningPosS2) {\n                result.push(new SequenceDiff(new OffsetRange(endX, lastAligningPosS1), new OffsetRange(endY, lastAligningPosS2)));\n            }\n            if (!path) {\n                break;\n            }\n            lastAligningPosS1 = path.x;\n            lastAligningPosS2 = path.y;\n            path = path.prev;\n        }\n        result.reverse();\n        return new DiffAlgorithmResult(result, false);\n    }\n}\nclass SnakePath {\n    constructor(prev, x, y, length) {\n        this.prev = prev;\n        this.x = x;\n        this.y = y;\n        this.length = length;\n    }\n}\n/**\n * An array that supports fast negative indices.\n*/\nclass FastInt32Array {\n    constructor() {\n        this.positiveArr = new Int32Array(10);\n        this.negativeArr = new Int32Array(10);\n    }\n    get(idx) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            return this.negativeArr[idx];\n        }\n        else {\n            return this.positiveArr[idx];\n        }\n    }\n    set(idx, value) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            if (idx >= this.negativeArr.length) {\n                const arr = this.negativeArr;\n                this.negativeArr = new Int32Array(arr.length * 2);\n                this.negativeArr.set(arr);\n            }\n            this.negativeArr[idx] = value;\n        }\n        else {\n            if (idx >= this.positiveArr.length) {\n                const arr = this.positiveArr;\n                this.positiveArr = new Int32Array(arr.length * 2);\n                this.positiveArr.set(arr);\n            }\n            this.positiveArr[idx] = value;\n        }\n    }\n}\n/**\n * An array that supports fast negative indices.\n*/\nclass FastArrayNegativeIndices {\n    constructor() {\n        this.positiveArr = [];\n        this.negativeArr = [];\n    }\n    get(idx) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            return this.negativeArr[idx];\n        }\n        else {\n            return this.positiveArr[idx];\n        }\n    }\n    set(idx, value) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            this.negativeArr[idx] = value;\n        }\n        else {\n            this.positiveArr[idx] = value;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { findLastIdxMonotonous, findLastMonotonous, findFirstMonotonous } from '../../../../base/common/arraysFind.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { Position } from '../../core/position.js';\nimport { Range } from '../../core/range.js';\nimport { isSpace } from './utils.js';\nexport class LinesSliceCharSequence {\n    constructor(lines, lineRange, considerWhitespaceChanges) {\n        // This slice has to have lineRange.length many \\n! (otherwise diffing against an empty slice will be problematic)\n        // (Unless it covers the entire document, in that case the other slice also has to cover the entire document ands it's okay)\n        this.lines = lines;\n        this.considerWhitespaceChanges = considerWhitespaceChanges;\n        this.elements = [];\n        this.firstCharOffsetByLine = [];\n        // To account for trimming\n        this.additionalOffsetByLine = [];\n        // If the slice covers the end, but does not start at the beginning, we include just the \\n of the previous line.\n        let trimFirstLineFully = false;\n        if (lineRange.start > 0 && lineRange.endExclusive >= lines.length) {\n            lineRange = new OffsetRange(lineRange.start - 1, lineRange.endExclusive);\n            trimFirstLineFully = true;\n        }\n        this.lineRange = lineRange;\n        this.firstCharOffsetByLine[0] = 0;\n        for (let i = this.lineRange.start; i < this.lineRange.endExclusive; i++) {\n            let line = lines[i];\n            let offset = 0;\n            if (trimFirstLineFully) {\n                offset = line.length;\n                line = '';\n                trimFirstLineFully = false;\n            }\n            else if (!considerWhitespaceChanges) {\n                const trimmedStartLine = line.trimStart();\n                offset = line.length - trimmedStartLine.length;\n                line = trimmedStartLine.trimEnd();\n            }\n            this.additionalOffsetByLine.push(offset);\n            for (let i = 0; i < line.length; i++) {\n                this.elements.push(line.charCodeAt(i));\n            }\n            // Don't add an \\n that does not exist in the document.\n            if (i < lines.length - 1) {\n                this.elements.push('\\n'.charCodeAt(0));\n                this.firstCharOffsetByLine[i - this.lineRange.start + 1] = this.elements.length;\n            }\n        }\n        // To account for the last line\n        this.additionalOffsetByLine.push(0);\n    }\n    toString() {\n        return `Slice: \"${this.text}\"`;\n    }\n    get text() {\n        return this.getText(new OffsetRange(0, this.length));\n    }\n    getText(range) {\n        return this.elements.slice(range.start, range.endExclusive).map(e => String.fromCharCode(e)).join('');\n    }\n    getElement(offset) {\n        return this.elements[offset];\n    }\n    get length() {\n        return this.elements.length;\n    }\n    getBoundaryScore(length) {\n        //   a   b   c   ,           d   e   f\n        // 11  0   0   12  15  6   13  0   0   11\n        const prevCategory = getCategory(length > 0 ? this.elements[length - 1] : -1);\n        const nextCategory = getCategory(length < this.elements.length ? this.elements[length] : -1);\n        if (prevCategory === 7 /* CharBoundaryCategory.LineBreakCR */ && nextCategory === 8 /* CharBoundaryCategory.LineBreakLF */) {\n            // don't break between \\r and \\n\n            return 0;\n        }\n        if (prevCategory === 8 /* CharBoundaryCategory.LineBreakLF */) {\n            // prefer the linebreak before the change\n            return 150;\n        }\n        let score = 0;\n        if (prevCategory !== nextCategory) {\n            score += 10;\n            if (prevCategory === 0 /* CharBoundaryCategory.WordLower */ && nextCategory === 1 /* CharBoundaryCategory.WordUpper */) {\n                score += 1;\n            }\n        }\n        score += getCategoryBoundaryScore(prevCategory);\n        score += getCategoryBoundaryScore(nextCategory);\n        return score;\n    }\n    translateOffset(offset) {\n        // find smallest i, so that lineBreakOffsets[i] <= offset using binary search\n        if (this.lineRange.isEmpty) {\n            return new Position(this.lineRange.start + 1, 1);\n        }\n        const i = findLastIdxMonotonous(this.firstCharOffsetByLine, (value) => value <= offset);\n        return new Position(this.lineRange.start + i + 1, offset - this.firstCharOffsetByLine[i] + this.additionalOffsetByLine[i] + 1);\n    }\n    translateRange(range) {\n        return Range.fromPositions(this.translateOffset(range.start), this.translateOffset(range.endExclusive));\n    }\n    /**\n     * Finds the word that contains the character at the given offset\n     */\n    findWordContaining(offset) {\n        if (offset < 0 || offset >= this.elements.length) {\n            return undefined;\n        }\n        if (!isWordChar(this.elements[offset])) {\n            return undefined;\n        }\n        // find start\n        let start = offset;\n        while (start > 0 && isWordChar(this.elements[start - 1])) {\n            start--;\n        }\n        // find end\n        let end = offset;\n        while (end < this.elements.length && isWordChar(this.elements[end])) {\n            end++;\n        }\n        return new OffsetRange(start, end);\n    }\n    countLinesIn(range) {\n        return this.translateOffset(range.endExclusive).lineNumber - this.translateOffset(range.start).lineNumber;\n    }\n    isStronglyEqual(offset1, offset2) {\n        return this.elements[offset1] === this.elements[offset2];\n    }\n    extendToFullLines(range) {\n        var _a, _b;\n        const start = (_a = findLastMonotonous(this.firstCharOffsetByLine, x => x <= range.start)) !== null && _a !== void 0 ? _a : 0;\n        const end = (_b = findFirstMonotonous(this.firstCharOffsetByLine, x => range.endExclusive <= x)) !== null && _b !== void 0 ? _b : this.elements.length;\n        return new OffsetRange(start, end);\n    }\n}\nfunction isWordChar(charCode) {\n    return charCode >= 97 /* CharCode.a */ && charCode <= 122 /* CharCode.z */\n        || charCode >= 65 /* CharCode.A */ && charCode <= 90 /* CharCode.Z */\n        || charCode >= 48 /* CharCode.Digit0 */ && charCode <= 57 /* CharCode.Digit9 */;\n}\nconst score = {\n    [0 /* CharBoundaryCategory.WordLower */]: 0,\n    [1 /* CharBoundaryCategory.WordUpper */]: 0,\n    [2 /* CharBoundaryCategory.WordNumber */]: 0,\n    [3 /* CharBoundaryCategory.End */]: 10,\n    [4 /* CharBoundaryCategory.Other */]: 2,\n    [5 /* CharBoundaryCategory.Separator */]: 30,\n    [6 /* CharBoundaryCategory.Space */]: 3,\n    [7 /* CharBoundaryCategory.LineBreakCR */]: 10,\n    [8 /* CharBoundaryCategory.LineBreakLF */]: 10,\n};\nfunction getCategoryBoundaryScore(category) {\n    return score[category];\n}\nfunction getCategory(charCode) {\n    if (charCode === 10 /* CharCode.LineFeed */) {\n        return 8 /* CharBoundaryCategory.LineBreakLF */;\n    }\n    else if (charCode === 13 /* CharCode.CarriageReturn */) {\n        return 7 /* CharBoundaryCategory.LineBreakCR */;\n    }\n    else if (isSpace(charCode)) {\n        return 6 /* CharBoundaryCategory.Space */;\n    }\n    else if (charCode >= 97 /* CharCode.a */ && charCode <= 122 /* CharCode.z */) {\n        return 0 /* CharBoundaryCategory.WordLower */;\n    }\n    else if (charCode >= 65 /* CharCode.A */ && charCode <= 90 /* CharCode.Z */) {\n        return 1 /* CharBoundaryCategory.WordUpper */;\n    }\n    else if (charCode >= 48 /* CharCode.Digit0 */ && charCode <= 57 /* CharCode.Digit9 */) {\n        return 2 /* CharBoundaryCategory.WordNumber */;\n    }\n    else if (charCode === -1) {\n        return 3 /* CharBoundaryCategory.End */;\n    }\n    else if (charCode === 44 /* CharCode.Comma */ || charCode === 59 /* CharCode.Semicolon */) {\n        return 5 /* CharBoundaryCategory.Separator */;\n    }\n    else {\n        return 4 /* CharBoundaryCategory.Other */;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SequenceDiff } from './algorithms/diffAlgorithm.js';\nimport { LineRangeMapping } from '../rangeMapping.js';\nimport { pushMany, compareBy, numberComparator, reverseOrder } from '../../../../base/common/arrays.js';\nimport { MonotonousArray, findLastMonotonous } from '../../../../base/common/arraysFind.js';\nimport { SetMap } from '../../../../base/common/map.js';\nimport { LineRange, LineRangeSet } from '../../core/lineRange.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { LinesSliceCharSequence } from './linesSliceCharSequence.js';\nimport { LineRangeFragment, isSpace } from './utils.js';\nimport { MyersDiffAlgorithm } from './algorithms/myersDiffAlgorithm.js';\nexport function computeMovedLines(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout) {\n    let { moves, excludedChanges } = computeMovesFromSimpleDeletionsToSimpleInsertions(changes, originalLines, modifiedLines, timeout);\n    if (!timeout.isValid()) {\n        return [];\n    }\n    const filteredChanges = changes.filter(c => !excludedChanges.has(c));\n    const unchangedMoves = computeUnchangedMoves(filteredChanges, hashedOriginalLines, hashedModifiedLines, originalLines, modifiedLines, timeout);\n    pushMany(moves, unchangedMoves);\n    moves = joinCloseConsecutiveMoves(moves);\n    // Ignore too short moves\n    moves = moves.filter(current => {\n        const lines = current.original.toOffsetRange().slice(originalLines).map(l => l.trim());\n        const originalText = lines.join('\\n');\n        return originalText.length >= 15 && countWhere(lines, l => l.length >= 2) >= 2;\n    });\n    moves = removeMovesInSameDiff(changes, moves);\n    return moves;\n}\nfunction countWhere(arr, predicate) {\n    let count = 0;\n    for (const t of arr) {\n        if (predicate(t)) {\n            count++;\n        }\n    }\n    return count;\n}\nfunction computeMovesFromSimpleDeletionsToSimpleInsertions(changes, originalLines, modifiedLines, timeout) {\n    const moves = [];\n    const deletions = changes\n        .filter(c => c.modified.isEmpty && c.original.length >= 3)\n        .map(d => new LineRangeFragment(d.original, originalLines, d));\n    const insertions = new Set(changes\n        .filter(c => c.original.isEmpty && c.modified.length >= 3)\n        .map(d => new LineRangeFragment(d.modified, modifiedLines, d)));\n    const excludedChanges = new Set();\n    for (const deletion of deletions) {\n        let highestSimilarity = -1;\n        let best;\n        for (const insertion of insertions) {\n            const similarity = deletion.computeSimilarity(insertion);\n            if (similarity > highestSimilarity) {\n                highestSimilarity = similarity;\n                best = insertion;\n            }\n        }\n        if (highestSimilarity > 0.90 && best) {\n            insertions.delete(best);\n            moves.push(new LineRangeMapping(deletion.range, best.range));\n            excludedChanges.add(deletion.source);\n            excludedChanges.add(best.source);\n        }\n        if (!timeout.isValid()) {\n            return { moves, excludedChanges };\n        }\n    }\n    return { moves, excludedChanges };\n}\nfunction computeUnchangedMoves(changes, hashedOriginalLines, hashedModifiedLines, originalLines, modifiedLines, timeout) {\n    const moves = [];\n    const original3LineHashes = new SetMap();\n    for (const change of changes) {\n        for (let i = change.original.startLineNumber; i < change.original.endLineNumberExclusive - 2; i++) {\n            const key = `${hashedOriginalLines[i - 1]}:${hashedOriginalLines[i + 1 - 1]}:${hashedOriginalLines[i + 2 - 1]}`;\n            original3LineHashes.add(key, { range: new LineRange(i, i + 3) });\n        }\n    }\n    const possibleMappings = [];\n    changes.sort(compareBy(c => c.modified.startLineNumber, numberComparator));\n    for (const change of changes) {\n        let lastMappings = [];\n        for (let i = change.modified.startLineNumber; i < change.modified.endLineNumberExclusive - 2; i++) {\n            const key = `${hashedModifiedLines[i - 1]}:${hashedModifiedLines[i + 1 - 1]}:${hashedModifiedLines[i + 2 - 1]}`;\n            const currentModifiedRange = new LineRange(i, i + 3);\n            const nextMappings = [];\n            original3LineHashes.forEach(key, ({ range }) => {\n                for (const lastMapping of lastMappings) {\n                    // does this match extend some last match?\n                    if (lastMapping.originalLineRange.endLineNumberExclusive + 1 === range.endLineNumberExclusive &&\n                        lastMapping.modifiedLineRange.endLineNumberExclusive + 1 === currentModifiedRange.endLineNumberExclusive) {\n                        lastMapping.originalLineRange = new LineRange(lastMapping.originalLineRange.startLineNumber, range.endLineNumberExclusive);\n                        lastMapping.modifiedLineRange = new LineRange(lastMapping.modifiedLineRange.startLineNumber, currentModifiedRange.endLineNumberExclusive);\n                        nextMappings.push(lastMapping);\n                        return;\n                    }\n                }\n                const mapping = {\n                    modifiedLineRange: currentModifiedRange,\n                    originalLineRange: range,\n                };\n                possibleMappings.push(mapping);\n                nextMappings.push(mapping);\n            });\n            lastMappings = nextMappings;\n        }\n        if (!timeout.isValid()) {\n            return [];\n        }\n    }\n    possibleMappings.sort(reverseOrder(compareBy(m => m.modifiedLineRange.length, numberComparator)));\n    const modifiedSet = new LineRangeSet();\n    const originalSet = new LineRangeSet();\n    for (const mapping of possibleMappings) {\n        const diffOrigToMod = mapping.modifiedLineRange.startLineNumber - mapping.originalLineRange.startLineNumber;\n        const modifiedSections = modifiedSet.subtractFrom(mapping.modifiedLineRange);\n        const originalTranslatedSections = originalSet.subtractFrom(mapping.originalLineRange).getWithDelta(diffOrigToMod);\n        const modifiedIntersectedSections = modifiedSections.getIntersection(originalTranslatedSections);\n        for (const s of modifiedIntersectedSections.ranges) {\n            if (s.length < 3) {\n                continue;\n            }\n            const modifiedLineRange = s;\n            const originalLineRange = s.delta(-diffOrigToMod);\n            moves.push(new LineRangeMapping(originalLineRange, modifiedLineRange));\n            modifiedSet.addRange(modifiedLineRange);\n            originalSet.addRange(originalLineRange);\n        }\n    }\n    moves.sort(compareBy(m => m.original.startLineNumber, numberComparator));\n    const monotonousChanges = new MonotonousArray(changes);\n    for (let i = 0; i < moves.length; i++) {\n        const move = moves[i];\n        const firstTouchingChangeOrig = monotonousChanges.findLastMonotonous(c => c.original.startLineNumber <= move.original.startLineNumber);\n        const firstTouchingChangeMod = findLastMonotonous(changes, c => c.modified.startLineNumber <= move.modified.startLineNumber);\n        const linesAbove = Math.max(move.original.startLineNumber - firstTouchingChangeOrig.original.startLineNumber, move.modified.startLineNumber - firstTouchingChangeMod.modified.startLineNumber);\n        const lastTouchingChangeOrig = monotonousChanges.findLastMonotonous(c => c.original.startLineNumber < move.original.endLineNumberExclusive);\n        const lastTouchingChangeMod = findLastMonotonous(changes, c => c.modified.startLineNumber < move.modified.endLineNumberExclusive);\n        const linesBelow = Math.max(lastTouchingChangeOrig.original.endLineNumberExclusive - move.original.endLineNumberExclusive, lastTouchingChangeMod.modified.endLineNumberExclusive - move.modified.endLineNumberExclusive);\n        let extendToTop;\n        for (extendToTop = 0; extendToTop < linesAbove; extendToTop++) {\n            const origLine = move.original.startLineNumber - extendToTop - 1;\n            const modLine = move.modified.startLineNumber - extendToTop - 1;\n            if (origLine > originalLines.length || modLine > modifiedLines.length) {\n                break;\n            }\n            if (modifiedSet.contains(modLine) || originalSet.contains(origLine)) {\n                break;\n            }\n            if (!areLinesSimilar(originalLines[origLine - 1], modifiedLines[modLine - 1], timeout)) {\n                break;\n            }\n        }\n        if (extendToTop > 0) {\n            originalSet.addRange(new LineRange(move.original.startLineNumber - extendToTop, move.original.startLineNumber));\n            modifiedSet.addRange(new LineRange(move.modified.startLineNumber - extendToTop, move.modified.startLineNumber));\n        }\n        let extendToBottom;\n        for (extendToBottom = 0; extendToBottom < linesBelow; extendToBottom++) {\n            const origLine = move.original.endLineNumberExclusive + extendToBottom;\n            const modLine = move.modified.endLineNumberExclusive + extendToBottom;\n            if (origLine > originalLines.length || modLine > modifiedLines.length) {\n                break;\n            }\n            if (modifiedSet.contains(modLine) || originalSet.contains(origLine)) {\n                break;\n            }\n            if (!areLinesSimilar(originalLines[origLine - 1], modifiedLines[modLine - 1], timeout)) {\n                break;\n            }\n        }\n        if (extendToBottom > 0) {\n            originalSet.addRange(new LineRange(move.original.endLineNumberExclusive, move.original.endLineNumberExclusive + extendToBottom));\n            modifiedSet.addRange(new LineRange(move.modified.endLineNumberExclusive, move.modified.endLineNumberExclusive + extendToBottom));\n        }\n        if (extendToTop > 0 || extendToBottom > 0) {\n            moves[i] = new LineRangeMapping(new LineRange(move.original.startLineNumber - extendToTop, move.original.endLineNumberExclusive + extendToBottom), new LineRange(move.modified.startLineNumber - extendToTop, move.modified.endLineNumberExclusive + extendToBottom));\n        }\n    }\n    return moves;\n}\nfunction areLinesSimilar(line1, line2, timeout) {\n    if (line1.trim() === line2.trim()) {\n        return true;\n    }\n    if (line1.length > 300 && line2.length > 300) {\n        return false;\n    }\n    const myersDiffingAlgorithm = new MyersDiffAlgorithm();\n    const result = myersDiffingAlgorithm.compute(new LinesSliceCharSequence([line1], new OffsetRange(0, 1), false), new LinesSliceCharSequence([line2], new OffsetRange(0, 1), false), timeout);\n    let commonNonSpaceCharCount = 0;\n    const inverted = SequenceDiff.invert(result.diffs, line1.length);\n    for (const seq of inverted) {\n        seq.seq1Range.forEach(idx => {\n            if (!isSpace(line1.charCodeAt(idx))) {\n                commonNonSpaceCharCount++;\n            }\n        });\n    }\n    function countNonWsChars(str) {\n        let count = 0;\n        for (let i = 0; i < line1.length; i++) {\n            if (!isSpace(str.charCodeAt(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    const longerLineLength = countNonWsChars(line1.length > line2.length ? line1 : line2);\n    const r = commonNonSpaceCharCount / longerLineLength > 0.6 && longerLineLength > 10;\n    return r;\n}\nfunction joinCloseConsecutiveMoves(moves) {\n    if (moves.length === 0) {\n        return moves;\n    }\n    moves.sort(compareBy(m => m.original.startLineNumber, numberComparator));\n    const result = [moves[0]];\n    for (let i = 1; i < moves.length; i++) {\n        const last = result[result.length - 1];\n        const current = moves[i];\n        const originalDist = current.original.startLineNumber - last.original.endLineNumberExclusive;\n        const modifiedDist = current.modified.startLineNumber - last.modified.endLineNumberExclusive;\n        const currentMoveAfterLast = originalDist >= 0 && modifiedDist >= 0;\n        if (currentMoveAfterLast && originalDist + modifiedDist <= 2) {\n            result[result.length - 1] = last.join(current);\n            continue;\n        }\n        result.push(current);\n    }\n    return result;\n}\nfunction removeMovesInSameDiff(changes, moves) {\n    const changesMonotonous = new MonotonousArray(changes);\n    moves = moves.filter(m => {\n        const diffBeforeEndOfMoveOriginal = changesMonotonous.findLastMonotonous(c => c.original.startLineNumber < m.original.endLineNumberExclusive)\n            || new LineRangeMapping(new LineRange(1, 1), new LineRange(1, 1));\n        const diffBeforeEndOfMoveModified = findLastMonotonous(changes, c => c.modified.startLineNumber < m.modified.endLineNumberExclusive);\n        const differentDiffs = diffBeforeEndOfMoveOriginal !== diffBeforeEndOfMoveModified;\n        return differentDiffs;\n    });\n    return moves;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class LineSequence {\n    constructor(trimmedHash, lines) {\n        this.trimmedHash = trimmedHash;\n        this.lines = lines;\n    }\n    getElement(offset) {\n        return this.trimmedHash[offset];\n    }\n    get length() {\n        return this.trimmedHash.length;\n    }\n    getBoundaryScore(length) {\n        const indentationBefore = length === 0 ? 0 : getIndentation(this.lines[length - 1]);\n        const indentationAfter = length === this.lines.length ? 0 : getIndentation(this.lines[length]);\n        return 1000 - (indentationBefore + indentationAfter);\n    }\n    getText(range) {\n        return this.lines.slice(range.start, range.endExclusive).join('\\n');\n    }\n    isStronglyEqual(offset1, offset2) {\n        return this.lines[offset1] === this.lines[offset2];\n    }\n}\nfunction getIndentation(str) {\n    let i = 0;\n    while (i < str.length && (str.charCodeAt(i) === 32 /* CharCode.Space */ || str.charCodeAt(i) === 9 /* CharCode.Tab */)) {\n        i++;\n    }\n    return i;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { equals, groupAdjacentBy } from '../../../../base/common/arrays.js';\nimport { assertFn, checkAdjacentItems } from '../../../../base/common/assert.js';\nimport { LineRange } from '../../core/lineRange.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { Range } from '../../core/range.js';\nimport { DateTimeout, InfiniteTimeout, SequenceDiff } from './algorithms/diffAlgorithm.js';\nimport { DynamicProgrammingDiffing } from './algorithms/dynamicProgrammingDiffing.js';\nimport { MyersDiffAlgorithm } from './algorithms/myersDiffAlgorithm.js';\nimport { computeMovedLines } from './computeMovedLines.js';\nimport { extendDiffsToEntireWordIfAppropriate, optimizeSequenceDiffs, removeShortMatches, removeVeryShortMatchingLinesBetweenDiffs, removeVeryShortMatchingTextBetweenLongDiffs } from './heuristicSequenceOptimizations.js';\nimport { LineSequence } from './lineSequence.js';\nimport { LinesSliceCharSequence } from './linesSliceCharSequence.js';\nimport { LinesDiff, MovedText } from '../linesDiffComputer.js';\nimport { DetailedLineRangeMapping, RangeMapping } from '../rangeMapping.js';\nexport class DefaultLinesDiffComputer {\n    constructor() {\n        this.dynamicProgrammingDiffing = new DynamicProgrammingDiffing();\n        this.myersDiffingAlgorithm = new MyersDiffAlgorithm();\n    }\n    computeDiff(originalLines, modifiedLines, options) {\n        if (originalLines.length <= 1 && equals(originalLines, modifiedLines, (a, b) => a === b)) {\n            return new LinesDiff([], [], false);\n        }\n        if (originalLines.length === 1 && originalLines[0].length === 0 || modifiedLines.length === 1 && modifiedLines[0].length === 0) {\n            return new LinesDiff([\n                new DetailedLineRangeMapping(new LineRange(1, originalLines.length + 1), new LineRange(1, modifiedLines.length + 1), [\n                    new RangeMapping(new Range(1, 1, originalLines.length, originalLines[originalLines.length - 1].length + 1), new Range(1, 1, modifiedLines.length, modifiedLines[modifiedLines.length - 1].length + 1))\n                ])\n            ], [], false);\n        }\n        const timeout = options.maxComputationTimeMs === 0 ? InfiniteTimeout.instance : new DateTimeout(options.maxComputationTimeMs);\n        const considerWhitespaceChanges = !options.ignoreTrimWhitespace;\n        const perfectHashes = new Map();\n        function getOrCreateHash(text) {\n            let hash = perfectHashes.get(text);\n            if (hash === undefined) {\n                hash = perfectHashes.size;\n                perfectHashes.set(text, hash);\n            }\n            return hash;\n        }\n        const originalLinesHashes = originalLines.map((l) => getOrCreateHash(l.trim()));\n        const modifiedLinesHashes = modifiedLines.map((l) => getOrCreateHash(l.trim()));\n        const sequence1 = new LineSequence(originalLinesHashes, originalLines);\n        const sequence2 = new LineSequence(modifiedLinesHashes, modifiedLines);\n        const lineAlignmentResult = (() => {\n            if (sequence1.length + sequence2.length < 1700) {\n                // Use the improved algorithm for small files\n                return this.dynamicProgrammingDiffing.compute(sequence1, sequence2, timeout, (offset1, offset2) => originalLines[offset1] === modifiedLines[offset2]\n                    ? modifiedLines[offset2].length === 0\n                        ? 0.1\n                        : 1 + Math.log(1 + modifiedLines[offset2].length)\n                    : 0.99);\n            }\n            return this.myersDiffingAlgorithm.compute(sequence1, sequence2);\n        })();\n        let lineAlignments = lineAlignmentResult.diffs;\n        let hitTimeout = lineAlignmentResult.hitTimeout;\n        lineAlignments = optimizeSequenceDiffs(sequence1, sequence2, lineAlignments);\n        lineAlignments = removeVeryShortMatchingLinesBetweenDiffs(sequence1, sequence2, lineAlignments);\n        const alignments = [];\n        const scanForWhitespaceChanges = (equalLinesCount) => {\n            if (!considerWhitespaceChanges) {\n                return;\n            }\n            for (let i = 0; i < equalLinesCount; i++) {\n                const seq1Offset = seq1LastStart + i;\n                const seq2Offset = seq2LastStart + i;\n                if (originalLines[seq1Offset] !== modifiedLines[seq2Offset]) {\n                    // This is because of whitespace changes, diff these lines\n                    const characterDiffs = this.refineDiff(originalLines, modifiedLines, new SequenceDiff(new OffsetRange(seq1Offset, seq1Offset + 1), new OffsetRange(seq2Offset, seq2Offset + 1)), timeout, considerWhitespaceChanges);\n                    for (const a of characterDiffs.mappings) {\n                        alignments.push(a);\n                    }\n                    if (characterDiffs.hitTimeout) {\n                        hitTimeout = true;\n                    }\n                }\n            }\n        };\n        let seq1LastStart = 0;\n        let seq2LastStart = 0;\n        for (const diff of lineAlignments) {\n            assertFn(() => diff.seq1Range.start - seq1LastStart === diff.seq2Range.start - seq2LastStart);\n            const equalLinesCount = diff.seq1Range.start - seq1LastStart;\n            scanForWhitespaceChanges(equalLinesCount);\n            seq1LastStart = diff.seq1Range.endExclusive;\n            seq2LastStart = diff.seq2Range.endExclusive;\n            const characterDiffs = this.refineDiff(originalLines, modifiedLines, diff, timeout, considerWhitespaceChanges);\n            if (characterDiffs.hitTimeout) {\n                hitTimeout = true;\n            }\n            for (const a of characterDiffs.mappings) {\n                alignments.push(a);\n            }\n        }\n        scanForWhitespaceChanges(originalLines.length - seq1LastStart);\n        const changes = lineRangeMappingFromRangeMappings(alignments, originalLines, modifiedLines);\n        let moves = [];\n        if (options.computeMoves) {\n            moves = this.computeMoves(changes, originalLines, modifiedLines, originalLinesHashes, modifiedLinesHashes, timeout, considerWhitespaceChanges);\n        }\n        // Make sure all ranges are valid\n        assertFn(() => {\n            function validatePosition(pos, lines) {\n                if (pos.lineNumber < 1 || pos.lineNumber > lines.length) {\n                    return false;\n                }\n                const line = lines[pos.lineNumber - 1];\n                if (pos.column < 1 || pos.column > line.length + 1) {\n                    return false;\n                }\n                return true;\n            }\n            function validateRange(range, lines) {\n                if (range.startLineNumber < 1 || range.startLineNumber > lines.length + 1) {\n                    return false;\n                }\n                if (range.endLineNumberExclusive < 1 || range.endLineNumberExclusive > lines.length + 1) {\n                    return false;\n                }\n                return true;\n            }\n            for (const c of changes) {\n                if (!c.innerChanges) {\n                    return false;\n                }\n                for (const ic of c.innerChanges) {\n                    const valid = validatePosition(ic.modifiedRange.getStartPosition(), modifiedLines) && validatePosition(ic.modifiedRange.getEndPosition(), modifiedLines) &&\n                        validatePosition(ic.originalRange.getStartPosition(), originalLines) && validatePosition(ic.originalRange.getEndPosition(), originalLines);\n                    if (!valid) {\n                        return false;\n                    }\n                }\n                if (!validateRange(c.modified, modifiedLines) || !validateRange(c.original, originalLines)) {\n                    return false;\n                }\n            }\n            return true;\n        });\n        return new LinesDiff(changes, moves, hitTimeout);\n    }\n    computeMoves(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout, considerWhitespaceChanges) {\n        const moves = computeMovedLines(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout);\n        const movesWithDiffs = moves.map(m => {\n            const moveChanges = this.refineDiff(originalLines, modifiedLines, new SequenceDiff(m.original.toOffsetRange(), m.modified.toOffsetRange()), timeout, considerWhitespaceChanges);\n            const mappings = lineRangeMappingFromRangeMappings(moveChanges.mappings, originalLines, modifiedLines, true);\n            return new MovedText(m, mappings);\n        });\n        return movesWithDiffs;\n    }\n    refineDiff(originalLines, modifiedLines, diff, timeout, considerWhitespaceChanges) {\n        const slice1 = new LinesSliceCharSequence(originalLines, diff.seq1Range, considerWhitespaceChanges);\n        const slice2 = new LinesSliceCharSequence(modifiedLines, diff.seq2Range, considerWhitespaceChanges);\n        const diffResult = slice1.length + slice2.length < 500\n            ? this.dynamicProgrammingDiffing.compute(slice1, slice2, timeout)\n            : this.myersDiffingAlgorithm.compute(slice1, slice2, timeout);\n        let diffs = diffResult.diffs;\n        diffs = optimizeSequenceDiffs(slice1, slice2, diffs);\n        diffs = extendDiffsToEntireWordIfAppropriate(slice1, slice2, diffs);\n        diffs = removeShortMatches(slice1, slice2, diffs);\n        diffs = removeVeryShortMatchingTextBetweenLongDiffs(slice1, slice2, diffs);\n        const result = diffs.map((d) => new RangeMapping(slice1.translateRange(d.seq1Range), slice2.translateRange(d.seq2Range)));\n        // Assert: result applied on original should be the same as diff applied to original\n        return {\n            mappings: result,\n            hitTimeout: diffResult.hitTimeout,\n        };\n    }\n}\nexport function lineRangeMappingFromRangeMappings(alignments, originalLines, modifiedLines, dontAssertStartLine = false) {\n    const changes = [];\n    for (const g of groupAdjacentBy(alignments.map(a => getLineRangeMapping(a, originalLines, modifiedLines)), (a1, a2) => a1.original.overlapOrTouch(a2.original)\n        || a1.modified.overlapOrTouch(a2.modified))) {\n        const first = g[0];\n        const last = g[g.length - 1];\n        changes.push(new DetailedLineRangeMapping(first.original.join(last.original), first.modified.join(last.modified), g.map(a => a.innerChanges[0])));\n    }\n    assertFn(() => {\n        if (!dontAssertStartLine && changes.length > 0) {\n            if (changes[0].modified.startLineNumber !== changes[0].original.startLineNumber) {\n                return false;\n            }\n            if (modifiedLines.length - changes[changes.length - 1].modified.endLineNumberExclusive !== originalLines.length - changes[changes.length - 1].original.endLineNumberExclusive) {\n                return false;\n            }\n        }\n        return checkAdjacentItems(changes, (m1, m2) => m2.original.startLineNumber - m1.original.endLineNumberExclusive === m2.modified.startLineNumber - m1.modified.endLineNumberExclusive &&\n            // There has to be an unchanged line in between (otherwise both diffs should have been joined)\n            m1.original.endLineNumberExclusive < m2.original.startLineNumber &&\n            m1.modified.endLineNumberExclusive < m2.modified.startLineNumber);\n    });\n    return changes;\n}\nexport function getLineRangeMapping(rangeMapping, originalLines, modifiedLines) {\n    let lineStartDelta = 0;\n    let lineEndDelta = 0;\n    // rangeMapping describes the edit that replaces `rangeMapping.originalRange` with `newText := getText(modifiedLines, rangeMapping.modifiedRange)`.\n    // original: ]xxx \\n <- this line is not modified\n    // modified: ]xx  \\n\n    if (rangeMapping.modifiedRange.endColumn === 1 && rangeMapping.originalRange.endColumn === 1\n        && rangeMapping.originalRange.startLineNumber + lineStartDelta <= rangeMapping.originalRange.endLineNumber\n        && rangeMapping.modifiedRange.startLineNumber + lineStartDelta <= rangeMapping.modifiedRange.endLineNumber) {\n        // We can only do this if the range is not empty yet\n        lineEndDelta = -1;\n    }\n    // original: xxx[ \\n <- this line is not modified\n    // modified: xxx[ \\n\n    if (rangeMapping.modifiedRange.startColumn - 1 >= modifiedLines[rangeMapping.modifiedRange.startLineNumber - 1].length\n        && rangeMapping.originalRange.startColumn - 1 >= originalLines[rangeMapping.originalRange.startLineNumber - 1].length\n        && rangeMapping.originalRange.startLineNumber <= rangeMapping.originalRange.endLineNumber + lineEndDelta\n        && rangeMapping.modifiedRange.startLineNumber <= rangeMapping.modifiedRange.endLineNumber + lineEndDelta) {\n        // We can only do this if the range is not empty yet\n        lineStartDelta = 1;\n    }\n    const originalLineRange = new LineRange(rangeMapping.originalRange.startLineNumber + lineStartDelta, rangeMapping.originalRange.endLineNumber + 1 + lineEndDelta);\n    const modifiedLineRange = new LineRange(rangeMapping.modifiedRange.startLineNumber + lineStartDelta, rangeMapping.modifiedRange.endLineNumber + 1 + lineEndDelta);\n    return new DetailedLineRangeMapping(originalLineRange, modifiedLineRange, [rangeMapping]);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { forEachWithNeighbors } from '../../../../base/common/arrays.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { OffsetPair, SequenceDiff } from './algorithms/diffAlgorithm.js';\nexport function optimizeSequenceDiffs(sequence1, sequence2, sequenceDiffs) {\n    let result = sequenceDiffs;\n    result = joinSequenceDiffsByShifting(sequence1, sequence2, result);\n    // Sometimes, calling this function twice improves the result.\n    // Uncomment the second invocation and run the tests to see the difference.\n    result = joinSequenceDiffsByShifting(sequence1, sequence2, result);\n    result = shiftSequenceDiffs(sequence1, sequence2, result);\n    return result;\n}\n/**\n * This function fixes issues like this:\n * ```\n * import { Baz, Bar } from \"foo\";\n * ```\n * <->\n * ```\n * import { Baz, Bar, Foo } from \"foo\";\n * ```\n * Computed diff: [ {Add \",\" after Bar}, {Add \"Foo \" after space} }\n * Improved diff: [{Add \", Foo\" after Bar}]\n */\nfunction joinSequenceDiffsByShifting(sequence1, sequence2, sequenceDiffs) {\n    if (sequenceDiffs.length === 0) {\n        return sequenceDiffs;\n    }\n    const result = [];\n    result.push(sequenceDiffs[0]);\n    // First move them all to the left as much as possible and join them if possible\n    for (let i = 1; i < sequenceDiffs.length; i++) {\n        const prevResult = result[result.length - 1];\n        let cur = sequenceDiffs[i];\n        if (cur.seq1Range.isEmpty || cur.seq2Range.isEmpty) {\n            const length = cur.seq1Range.start - prevResult.seq1Range.endExclusive;\n            let d;\n            for (d = 1; d <= length; d++) {\n                if (sequence1.getElement(cur.seq1Range.start - d) !== sequence1.getElement(cur.seq1Range.endExclusive - d) ||\n                    sequence2.getElement(cur.seq2Range.start - d) !== sequence2.getElement(cur.seq2Range.endExclusive - d)) {\n                    break;\n                }\n            }\n            d--;\n            if (d === length) {\n                // Merge previous and current diff\n                result[result.length - 1] = new SequenceDiff(new OffsetRange(prevResult.seq1Range.start, cur.seq1Range.endExclusive - length), new OffsetRange(prevResult.seq2Range.start, cur.seq2Range.endExclusive - length));\n                continue;\n            }\n            cur = cur.delta(-d);\n        }\n        result.push(cur);\n    }\n    const result2 = [];\n    // Then move them all to the right and join them again if possible\n    for (let i = 0; i < result.length - 1; i++) {\n        const nextResult = result[i + 1];\n        let cur = result[i];\n        if (cur.seq1Range.isEmpty || cur.seq2Range.isEmpty) {\n            const length = nextResult.seq1Range.start - cur.seq1Range.endExclusive;\n            let d;\n            for (d = 0; d < length; d++) {\n                if (!sequence1.isStronglyEqual(cur.seq1Range.start + d, cur.seq1Range.endExclusive + d) ||\n                    !sequence2.isStronglyEqual(cur.seq2Range.start + d, cur.seq2Range.endExclusive + d)) {\n                    break;\n                }\n            }\n            if (d === length) {\n                // Merge previous and current diff, write to result!\n                result[i + 1] = new SequenceDiff(new OffsetRange(cur.seq1Range.start + length, nextResult.seq1Range.endExclusive), new OffsetRange(cur.seq2Range.start + length, nextResult.seq2Range.endExclusive));\n                continue;\n            }\n            if (d > 0) {\n                cur = cur.delta(d);\n            }\n        }\n        result2.push(cur);\n    }\n    if (result.length > 0) {\n        result2.push(result[result.length - 1]);\n    }\n    return result2;\n}\n// align character level diffs at whitespace characters\n// import { IBar } from \"foo\";\n// import { I[Arr, I]Bar } from \"foo\";\n// ->\n// import { [IArr, ]IBar } from \"foo\";\n// import { ITransaction, observableValue, transaction } from 'vs/base/common/observable';\n// import { ITransaction, observable[FromEvent, observable]Value, transaction } from 'vs/base/common/observable';\n// ->\n// import { ITransaction, [observableFromEvent, ]observableValue, transaction } from 'vs/base/common/observable';\n// collectBrackets(level + 1, levelPerBracketType);\n// collectBrackets(level + 1, levelPerBracket[ + 1, levelPerBracket]Type);\n// ->\n// collectBrackets(level + 1, [levelPerBracket + 1, ]levelPerBracketType);\nfunction shiftSequenceDiffs(sequence1, sequence2, sequenceDiffs) {\n    if (!sequence1.getBoundaryScore || !sequence2.getBoundaryScore) {\n        return sequenceDiffs;\n    }\n    for (let i = 0; i < sequenceDiffs.length; i++) {\n        const prevDiff = (i > 0 ? sequenceDiffs[i - 1] : undefined);\n        const diff = sequenceDiffs[i];\n        const nextDiff = (i + 1 < sequenceDiffs.length ? sequenceDiffs[i + 1] : undefined);\n        const seq1ValidRange = new OffsetRange(prevDiff ? prevDiff.seq1Range.endExclusive + 1 : 0, nextDiff ? nextDiff.seq1Range.start - 1 : sequence1.length);\n        const seq2ValidRange = new OffsetRange(prevDiff ? prevDiff.seq2Range.endExclusive + 1 : 0, nextDiff ? nextDiff.seq2Range.start - 1 : sequence2.length);\n        if (diff.seq1Range.isEmpty) {\n            sequenceDiffs[i] = shiftDiffToBetterPosition(diff, sequence1, sequence2, seq1ValidRange, seq2ValidRange);\n        }\n        else if (diff.seq2Range.isEmpty) {\n            sequenceDiffs[i] = shiftDiffToBetterPosition(diff.swap(), sequence2, sequence1, seq2ValidRange, seq1ValidRange).swap();\n        }\n    }\n    return sequenceDiffs;\n}\nfunction shiftDiffToBetterPosition(diff, sequence1, sequence2, seq1ValidRange, seq2ValidRange) {\n    const maxShiftLimit = 100; // To prevent performance issues\n    // don't touch previous or next!\n    let deltaBefore = 1;\n    while (diff.seq1Range.start - deltaBefore >= seq1ValidRange.start &&\n        diff.seq2Range.start - deltaBefore >= seq2ValidRange.start &&\n        sequence2.isStronglyEqual(diff.seq2Range.start - deltaBefore, diff.seq2Range.endExclusive - deltaBefore) && deltaBefore < maxShiftLimit) {\n        deltaBefore++;\n    }\n    deltaBefore--;\n    let deltaAfter = 0;\n    while (diff.seq1Range.start + deltaAfter < seq1ValidRange.endExclusive &&\n        diff.seq2Range.endExclusive + deltaAfter < seq2ValidRange.endExclusive &&\n        sequence2.isStronglyEqual(diff.seq2Range.start + deltaAfter, diff.seq2Range.endExclusive + deltaAfter) && deltaAfter < maxShiftLimit) {\n        deltaAfter++;\n    }\n    if (deltaBefore === 0 && deltaAfter === 0) {\n        return diff;\n    }\n    // Visualize `[sequence1.text, diff.seq1Range.start + deltaAfter]`\n    // and `[sequence2.text, diff.seq2Range.start + deltaAfter, diff.seq2Range.endExclusive + deltaAfter]`\n    let bestDelta = 0;\n    let bestScore = -1;\n    // find best scored delta\n    for (let delta = -deltaBefore; delta <= deltaAfter; delta++) {\n        const seq2OffsetStart = diff.seq2Range.start + delta;\n        const seq2OffsetEndExclusive = diff.seq2Range.endExclusive + delta;\n        const seq1Offset = diff.seq1Range.start + delta;\n        const score = sequence1.getBoundaryScore(seq1Offset) + sequence2.getBoundaryScore(seq2OffsetStart) + sequence2.getBoundaryScore(seq2OffsetEndExclusive);\n        if (score > bestScore) {\n            bestScore = score;\n            bestDelta = delta;\n        }\n    }\n    return diff.delta(bestDelta);\n}\nexport function removeShortMatches(sequence1, sequence2, sequenceDiffs) {\n    const result = [];\n    for (const s of sequenceDiffs) {\n        const last = result[result.length - 1];\n        if (!last) {\n            result.push(s);\n            continue;\n        }\n        if (s.seq1Range.start - last.seq1Range.endExclusive <= 2 || s.seq2Range.start - last.seq2Range.endExclusive <= 2) {\n            result[result.length - 1] = new SequenceDiff(last.seq1Range.join(s.seq1Range), last.seq2Range.join(s.seq2Range));\n        }\n        else {\n            result.push(s);\n        }\n    }\n    return result;\n}\nexport function extendDiffsToEntireWordIfAppropriate(sequence1, sequence2, sequenceDiffs) {\n    const equalMappings = SequenceDiff.invert(sequenceDiffs, sequence1.length);\n    const additional = [];\n    let lastPoint = new OffsetPair(0, 0);\n    function scanWord(pair, equalMapping) {\n        if (pair.offset1 < lastPoint.offset1 || pair.offset2 < lastPoint.offset2) {\n            return;\n        }\n        const w1 = sequence1.findWordContaining(pair.offset1);\n        const w2 = sequence2.findWordContaining(pair.offset2);\n        if (!w1 || !w2) {\n            return;\n        }\n        let w = new SequenceDiff(w1, w2);\n        const equalPart = w.intersect(equalMapping);\n        let equalChars1 = equalPart.seq1Range.length;\n        let equalChars2 = equalPart.seq2Range.length;\n        // The words do not touch previous equals mappings, as we would have processed them already.\n        // But they might touch the next ones.\n        while (equalMappings.length > 0) {\n            const next = equalMappings[0];\n            const intersects = next.seq1Range.intersects(w.seq1Range) || next.seq2Range.intersects(w.seq2Range);\n            if (!intersects) {\n                break;\n            }\n            const v1 = sequence1.findWordContaining(next.seq1Range.start);\n            const v2 = sequence2.findWordContaining(next.seq2Range.start);\n            // Because there is an intersection, we know that the words are not empty.\n            const v = new SequenceDiff(v1, v2);\n            const equalPart = v.intersect(next);\n            equalChars1 += equalPart.seq1Range.length;\n            equalChars2 += equalPart.seq2Range.length;\n            w = w.join(v);\n            if (w.seq1Range.endExclusive >= next.seq1Range.endExclusive) {\n                // The word extends beyond the next equal mapping.\n                equalMappings.shift();\n            }\n            else {\n                break;\n            }\n        }\n        if (equalChars1 + equalChars2 < (w.seq1Range.length + w.seq2Range.length) * 2 / 3) {\n            additional.push(w);\n        }\n        lastPoint = w.getEndExclusives();\n    }\n    while (equalMappings.length > 0) {\n        const next = equalMappings.shift();\n        if (next.seq1Range.isEmpty) {\n            continue;\n        }\n        scanWord(next.getStarts(), next);\n        // The equal parts are not empty, so -1 gives us a character that is equal in both parts.\n        scanWord(next.getEndExclusives().delta(-1), next);\n    }\n    const merged = mergeSequenceDiffs(sequenceDiffs, additional);\n    return merged;\n}\nfunction mergeSequenceDiffs(sequenceDiffs1, sequenceDiffs2) {\n    const result = [];\n    while (sequenceDiffs1.length > 0 || sequenceDiffs2.length > 0) {\n        const sd1 = sequenceDiffs1[0];\n        const sd2 = sequenceDiffs2[0];\n        let next;\n        if (sd1 && (!sd2 || sd1.seq1Range.start < sd2.seq1Range.start)) {\n            next = sequenceDiffs1.shift();\n        }\n        else {\n            next = sequenceDiffs2.shift();\n        }\n        if (result.length > 0 && result[result.length - 1].seq1Range.endExclusive >= next.seq1Range.start) {\n            result[result.length - 1] = result[result.length - 1].join(next);\n        }\n        else {\n            result.push(next);\n        }\n    }\n    return result;\n}\nexport function removeVeryShortMatchingLinesBetweenDiffs(sequence1, _sequence2, sequenceDiffs) {\n    let diffs = sequenceDiffs;\n    if (diffs.length === 0) {\n        return diffs;\n    }\n    let counter = 0;\n    let shouldRepeat;\n    do {\n        shouldRepeat = false;\n        const result = [\n            diffs[0]\n        ];\n        for (let i = 1; i < diffs.length; i++) {\n            const cur = diffs[i];\n            const lastResult = result[result.length - 1];\n            function shouldJoinDiffs(before, after) {\n                const unchangedRange = new OffsetRange(lastResult.seq1Range.endExclusive, cur.seq1Range.start);\n                const unchangedText = sequence1.getText(unchangedRange);\n                const unchangedTextWithoutWs = unchangedText.replace(/\\s/g, '');\n                if (unchangedTextWithoutWs.length <= 4\n                    && (before.seq1Range.length + before.seq2Range.length > 5 || after.seq1Range.length + after.seq2Range.length > 5)) {\n                    return true;\n                }\n                return false;\n            }\n            const shouldJoin = shouldJoinDiffs(lastResult, cur);\n            if (shouldJoin) {\n                shouldRepeat = true;\n                result[result.length - 1] = result[result.length - 1].join(cur);\n            }\n            else {\n                result.push(cur);\n            }\n        }\n        diffs = result;\n    } while (counter++ < 10 && shouldRepeat);\n    return diffs;\n}\nexport function removeVeryShortMatchingTextBetweenLongDiffs(sequence1, sequence2, sequenceDiffs) {\n    let diffs = sequenceDiffs;\n    if (diffs.length === 0) {\n        return diffs;\n    }\n    let counter = 0;\n    let shouldRepeat;\n    do {\n        shouldRepeat = false;\n        const result = [\n            diffs[0]\n        ];\n        for (let i = 1; i < diffs.length; i++) {\n            const cur = diffs[i];\n            const lastResult = result[result.length - 1];\n            function shouldJoinDiffs(before, after) {\n                const unchangedRange = new OffsetRange(lastResult.seq1Range.endExclusive, cur.seq1Range.start);\n                const unchangedLineCount = sequence1.countLinesIn(unchangedRange);\n                if (unchangedLineCount > 5 || unchangedRange.length > 500) {\n                    return false;\n                }\n                const unchangedText = sequence1.getText(unchangedRange).trim();\n                if (unchangedText.length > 20 || unchangedText.split(/\\r\\n|\\r|\\n/).length > 1) {\n                    return false;\n                }\n                const beforeLineCount1 = sequence1.countLinesIn(before.seq1Range);\n                const beforeSeq1Length = before.seq1Range.length;\n                const beforeLineCount2 = sequence2.countLinesIn(before.seq2Range);\n                const beforeSeq2Length = before.seq2Range.length;\n                const afterLineCount1 = sequence1.countLinesIn(after.seq1Range);\n                const afterSeq1Length = after.seq1Range.length;\n                const afterLineCount2 = sequence2.countLinesIn(after.seq2Range);\n                const afterSeq2Length = after.seq2Range.length;\n                // TODO: Maybe a neural net can be used to derive the result from these numbers\n                const max = 2 * 40 + 50;\n                function cap(v) {\n                    return Math.min(v, max);\n                }\n                if (Math.pow(Math.pow(cap(beforeLineCount1 * 40 + beforeSeq1Length), 1.5) + Math.pow(cap(beforeLineCount2 * 40 + beforeSeq2Length), 1.5), 1.5)\n                    + Math.pow(Math.pow(cap(afterLineCount1 * 40 + afterSeq1Length), 1.5) + Math.pow(cap(afterLineCount2 * 40 + afterSeq2Length), 1.5), 1.5) > ((max ** 1.5) ** 1.5) * 1.3) {\n                    return true;\n                }\n                return false;\n            }\n            const shouldJoin = shouldJoinDiffs(lastResult, cur);\n            if (shouldJoin) {\n                shouldRepeat = true;\n                result[result.length - 1] = result[result.length - 1].join(cur);\n            }\n            else {\n                result.push(cur);\n            }\n        }\n        diffs = result;\n    } while (counter++ < 10 && shouldRepeat);\n    const newDiffs = [];\n    // Remove short suffixes/prefixes\n    forEachWithNeighbors(diffs, (prev, cur, next) => {\n        let newDiff = cur;\n        function shouldMarkAsChanged(text) {\n            return text.length > 0 && text.trim().length <= 3 && cur.seq1Range.length + cur.seq2Range.length > 100;\n        }\n        const fullRange1 = sequence1.extendToFullLines(cur.seq1Range);\n        const prefix = sequence1.getText(new OffsetRange(fullRange1.start, cur.seq1Range.start));\n        if (shouldMarkAsChanged(prefix)) {\n            newDiff = newDiff.deltaStart(-prefix.length);\n        }\n        const suffix = sequence1.getText(new OffsetRange(cur.seq1Range.endExclusive, fullRange1.endExclusive));\n        if (shouldMarkAsChanged(suffix)) {\n            newDiff = newDiff.deltaEnd(suffix.length);\n        }\n        const availableSpace = SequenceDiff.fromOffsetPairs(prev ? prev.getEndExclusives() : OffsetPair.zero, next ? next.getStarts() : OffsetPair.max);\n        const result = newDiff.intersect(availableSpace);\n        if (newDiffs.length > 0 && result.getStarts().equals(newDiffs[newDiffs.length - 1].getEndExclusives())) {\n            newDiffs[newDiffs.length - 1] = newDiffs[newDiffs.length - 1].join(result);\n        }\n        else {\n            newDiffs.push(result);\n        }\n    });\n    return newDiffs;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class LinesDiff {\n    constructor(changes, \n    /**\n     * Sorted by original line ranges.\n     * The original line ranges and the modified line ranges must be disjoint (but can be touching).\n     */\n    moves, \n    /**\n     * Indicates if the time out was reached.\n     * In that case, the diffs might be an approximation and the user should be asked to rerun the diff with more time.\n     */\n    hitTimeout) {\n        this.changes = changes;\n        this.moves = moves;\n        this.hitTimeout = hitTimeout;\n    }\n}\nexport class MovedText {\n    constructor(lineRangeMapping, changes) {\n        this.lineRangeMapping = lineRangeMapping;\n        this.changes = changes;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { LineRange } from '../core/lineRange.js';\nimport { Range } from '../core/range.js';\nimport { SingleTextEdit } from '../core/textEdit.js';\n/**\n * Maps a line range in the original text model to a line range in the modified text model.\n */\nexport class LineRangeMapping {\n    static inverse(mapping, originalLineCount, modifiedLineCount) {\n        const result = [];\n        let lastOriginalEndLineNumber = 1;\n        let lastModifiedEndLineNumber = 1;\n        for (const m of mapping) {\n            const r = new LineRangeMapping(new LineRange(lastOriginalEndLineNumber, m.original.startLineNumber), new LineRange(lastModifiedEndLineNumber, m.modified.startLineNumber));\n            if (!r.modified.isEmpty) {\n                result.push(r);\n            }\n            lastOriginalEndLineNumber = m.original.endLineNumberExclusive;\n            lastModifiedEndLineNumber = m.modified.endLineNumberExclusive;\n        }\n        const r = new LineRangeMapping(new LineRange(lastOriginalEndLineNumber, originalLineCount + 1), new LineRange(lastModifiedEndLineNumber, modifiedLineCount + 1));\n        if (!r.modified.isEmpty) {\n            result.push(r);\n        }\n        return result;\n    }\n    static clip(mapping, originalRange, modifiedRange) {\n        const result = [];\n        for (const m of mapping) {\n            const original = m.original.intersect(originalRange);\n            const modified = m.modified.intersect(modifiedRange);\n            if (original && !original.isEmpty && modified && !modified.isEmpty) {\n                result.push(new LineRangeMapping(original, modified));\n            }\n        }\n        return result;\n    }\n    constructor(originalRange, modifiedRange) {\n        this.original = originalRange;\n        this.modified = modifiedRange;\n    }\n    toString() {\n        return `{${this.original.toString()}->${this.modified.toString()}}`;\n    }\n    flip() {\n        return new LineRangeMapping(this.modified, this.original);\n    }\n    join(other) {\n        return new LineRangeMapping(this.original.join(other.original), this.modified.join(other.modified));\n    }\n    /**\n     * This method assumes that the LineRangeMapping describes a valid diff!\n     * I.e. if one range is empty, the other range cannot be the entire document.\n     * It avoids various problems when the line range points to non-existing line-numbers.\n    */\n    toRangeMapping() {\n        const origInclusiveRange = this.original.toInclusiveRange();\n        const modInclusiveRange = this.modified.toInclusiveRange();\n        if (origInclusiveRange && modInclusiveRange) {\n            return new RangeMapping(origInclusiveRange, modInclusiveRange);\n        }\n        else if (this.original.startLineNumber === 1 || this.modified.startLineNumber === 1) {\n            if (!(this.modified.startLineNumber === 1 && this.original.startLineNumber === 1)) {\n                // If one line range starts at 1, the other one must start at 1 as well.\n                throw new BugIndicatingError('not a valid diff');\n            }\n            // Because one range is empty and both ranges start at line 1, none of the ranges can cover all lines.\n            // Thus, `endLineNumberExclusive` is a valid line number.\n            return new RangeMapping(new Range(this.original.startLineNumber, 1, this.original.endLineNumberExclusive, 1), new Range(this.modified.startLineNumber, 1, this.modified.endLineNumberExclusive, 1));\n        }\n        else {\n            // We can assume here that both startLineNumbers are greater than 1.\n            return new RangeMapping(new Range(this.original.startLineNumber - 1, Number.MAX_SAFE_INTEGER, this.original.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER), new Range(this.modified.startLineNumber - 1, Number.MAX_SAFE_INTEGER, this.modified.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER));\n        }\n    }\n}\n/**\n * Maps a line range in the original text model to a line range in the modified text model.\n * Also contains inner range mappings.\n */\nexport class DetailedLineRangeMapping extends LineRangeMapping {\n    static fromRangeMappings(rangeMappings) {\n        const originalRange = LineRange.join(rangeMappings.map(r => LineRange.fromRangeInclusive(r.originalRange)));\n        const modifiedRange = LineRange.join(rangeMappings.map(r => LineRange.fromRangeInclusive(r.modifiedRange)));\n        return new DetailedLineRangeMapping(originalRange, modifiedRange, rangeMappings);\n    }\n    constructor(originalRange, modifiedRange, innerChanges) {\n        super(originalRange, modifiedRange);\n        this.innerChanges = innerChanges;\n    }\n    flip() {\n        var _a;\n        return new DetailedLineRangeMapping(this.modified, this.original, (_a = this.innerChanges) === null || _a === void 0 ? void 0 : _a.map(c => c.flip()));\n    }\n    withInnerChangesFromLineRanges() {\n        return new DetailedLineRangeMapping(this.original, this.modified, [this.toRangeMapping()]);\n    }\n}\n/**\n * Maps a range in the original text model to a range in the modified text model.\n */\nexport class RangeMapping {\n    constructor(originalRange, modifiedRange) {\n        this.originalRange = originalRange;\n        this.modifiedRange = modifiedRange;\n    }\n    toString() {\n        return `{${this.originalRange.toString()}->${this.modifiedRange.toString()}}`;\n    }\n    flip() {\n        return new RangeMapping(this.modifiedRange, this.originalRange);\n    }\n    /**\n     * Creates a single text edit that describes the change from the original to the modified text.\n    */\n    toTextEdit(modified) {\n        const newText = modified.getValueOfRange(this.modifiedRange);\n        return new SingleTextEdit(this.originalRange, newText);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../languages.js';\nimport * as standaloneEnums from '../standalone/standaloneEnums.js';\nexport class KeyMod {\n    static chord(firstPart, secondPart) {\n        return KeyChord(firstPart, secondPart);\n    }\n}\nKeyMod.CtrlCmd = 2048 /* ConstKeyMod.CtrlCmd */;\nKeyMod.Shift = 1024 /* ConstKeyMod.Shift */;\nKeyMod.Alt = 512 /* ConstKeyMod.Alt */;\nKeyMod.WinCtrl = 256 /* ConstKeyMod.WinCtrl */;\nexport function createMonacoBaseAPI() {\n    return {\n        editor: undefined, // undefined override expected here\n        languages: undefined, // undefined override expected here\n        CancellationTokenSource: CancellationTokenSource,\n        Emitter: Emitter,\n        KeyCode: standaloneEnums.KeyCode,\n        KeyMod: KeyMod,\n        Position: Position,\n        Range: Range,\n        Selection: Selection,\n        SelectionDirection: standaloneEnums.SelectionDirection,\n        MarkerSeverity: standaloneEnums.MarkerSeverity,\n        MarkerTag: standaloneEnums.MarkerTag,\n        Uri: URI,\n        Token: Token\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { splitLines } from '../../../base/common/strings.js';\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from './prefixSumComputer.js';\nexport class MirrorTextModel {\n    constructor(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n        this._lineStarts = null;\n        this._cachedTextValue = null;\n    }\n    dispose() {\n        this._lines.length = 0;\n    }\n    get version() {\n        return this._versionId;\n    }\n    getText() {\n        if (this._cachedTextValue === null) {\n            this._cachedTextValue = this._lines.join(this._eol);\n        }\n        return this._cachedTextValue;\n    }\n    onEvents(e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        // Update my lines\n        const changes = e.changes;\n        for (const change of changes) {\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n        this._versionId = e.versionId;\n        this._cachedTextValue = null;\n    }\n    _ensureLineStarts() {\n        if (!this._lineStarts) {\n            const eolLength = this._eol.length;\n            const linesLength = this._lines.length;\n            const lineStartValues = new Uint32Array(linesLength);\n            for (let i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\n        }\n    }\n    /**\n     * All changes to a line's text go through this method\n     */\n    _setLineText(lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.setValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    }\n    _acceptDeleteRange(range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        // Delete middle lines\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    }\n    _acceptInsertText(position, insertText) {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        const insertLines = splitLines(insertText);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        // Delete overflowing text from first line and insert text on first line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        // Insert new lines & store lengths\n        const newLengths = new Uint32Array(insertLines.length - 1);\n        for (let i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nclass Uint8Matrix {\n    constructor(rows, cols, defaultValue) {\n        const data = new Uint8Array(rows * cols);\n        for (let i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    get(row, col) {\n        return this._data[row * this.cols + col];\n    }\n    set(row, col, value) {\n        this._data[row * this.cols + col] = value;\n    }\n}\nexport class StateMachine {\n    constructor(edges) {\n        let maxCharCode = 0;\n        let maxState = 0 /* State.Invalid */;\n        for (let i = 0, len = edges.length; i < len; i++) {\n            const [from, chCode, to] = edges[i];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        const states = new Uint8Matrix(maxState, maxCharCode, 0 /* State.Invalid */);\n        for (let i = 0, len = edges.length; i < len; i++) {\n            const [from, chCode, to] = edges[i];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    nextState(currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 /* State.Invalid */;\n        }\n        return this._states.get(currentState, chCode);\n    }\n}\n// State machine for http:// or https:// or file://\nlet _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [1 /* State.Start */, 104 /* CharCode.h */, 2 /* State.H */],\n            [1 /* State.Start */, 72 /* CharCode.H */, 2 /* State.H */],\n            [1 /* State.Start */, 102 /* CharCode.f */, 6 /* State.F */],\n            [1 /* State.Start */, 70 /* CharCode.F */, 6 /* State.F */],\n            [2 /* State.H */, 116 /* CharCode.t */, 3 /* State.HT */],\n            [2 /* State.H */, 84 /* CharCode.T */, 3 /* State.HT */],\n            [3 /* State.HT */, 116 /* CharCode.t */, 4 /* State.HTT */],\n            [3 /* State.HT */, 84 /* CharCode.T */, 4 /* State.HTT */],\n            [4 /* State.HTT */, 112 /* CharCode.p */, 5 /* State.HTTP */],\n            [4 /* State.HTT */, 80 /* CharCode.P */, 5 /* State.HTTP */],\n            [5 /* State.HTTP */, 115 /* CharCode.s */, 9 /* State.BeforeColon */],\n            [5 /* State.HTTP */, 83 /* CharCode.S */, 9 /* State.BeforeColon */],\n            [5 /* State.HTTP */, 58 /* CharCode.Colon */, 10 /* State.AfterColon */],\n            [6 /* State.F */, 105 /* CharCode.i */, 7 /* State.FI */],\n            [6 /* State.F */, 73 /* CharCode.I */, 7 /* State.FI */],\n            [7 /* State.FI */, 108 /* CharCode.l */, 8 /* State.FIL */],\n            [7 /* State.FI */, 76 /* CharCode.L */, 8 /* State.FIL */],\n            [8 /* State.FIL */, 101 /* CharCode.e */, 9 /* State.BeforeColon */],\n            [8 /* State.FIL */, 69 /* CharCode.E */, 9 /* State.BeforeColon */],\n            [9 /* State.BeforeColon */, 58 /* CharCode.Colon */, 10 /* State.AfterColon */],\n            [10 /* State.AfterColon */, 47 /* CharCode.Slash */, 11 /* State.AlmostThere */],\n            [11 /* State.AlmostThere */, 47 /* CharCode.Slash */, 12 /* State.End */],\n        ]);\n    }\n    return _stateMachine;\n}\nlet _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = new CharacterClassifier(0 /* CharacterClass.None */);\n        // allow-any-unicode-next-line\n        const FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；‘〈「『〔（［｛｢｣｝］）〕』」〉’｀～…';\n        for (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* CharacterClass.ForceTermination */);\n        }\n        const CANNOT_END_WITH_CHARACTERS = '.,;:';\n        for (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CharacterClass.CannotEndIn */);\n        }\n    }\n    return _classifier;\n}\nexport class LinkComputer {\n    static _createLink(classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        // Do not allow to end link in certain characters...\n        let lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            const chCode = line.charCodeAt(lastIncludedCharIndex);\n            const chClass = classifier.get(chCode);\n            if (chClass !== 2 /* CharacterClass.CannotEndIn */) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        // Handle links enclosed in parens, square brackets and curlys.\n        if (linkBeginIndex > 0) {\n            const charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            const lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === 40 /* CharCode.OpenParen */ && lastCharCodeInLink === 41 /* CharCode.CloseParen */)\n                || (charCodeBeforeLink === 91 /* CharCode.OpenSquareBracket */ && lastCharCodeInLink === 93 /* CharCode.CloseSquareBracket */)\n                || (charCodeBeforeLink === 123 /* CharCode.OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CharCode.CloseCurlyBrace */)) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    }\n    static computeLinks(model, stateMachine = getStateMachine()) {\n        const classifier = getClassifier();\n        const result = [];\n        for (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            const line = model.getLineContent(i);\n            const len = line.length;\n            let j = 0;\n            let linkBeginIndex = 0;\n            let linkBeginChCode = 0;\n            let state = 1 /* State.Start */;\n            let hasOpenParens = false;\n            let hasOpenSquareBracket = false;\n            let inSquareBrackets = false;\n            let hasOpenCurlyBracket = false;\n            while (j < len) {\n                let resetStateMachine = false;\n                const chCode = line.charCodeAt(j);\n                if (state === 13 /* State.Accept */) {\n                    let chClass;\n                    switch (chCode) {\n                        case 40 /* CharCode.OpenParen */:\n                            hasOpenParens = true;\n                            chClass = 0 /* CharacterClass.None */;\n                            break;\n                        case 41 /* CharCode.CloseParen */:\n                            chClass = (hasOpenParens ? 0 /* CharacterClass.None */ : 1 /* CharacterClass.ForceTermination */);\n                            break;\n                        case 91 /* CharCode.OpenSquareBracket */:\n                            inSquareBrackets = true;\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* CharacterClass.None */;\n                            break;\n                        case 93 /* CharCode.CloseSquareBracket */:\n                            inSquareBrackets = false;\n                            chClass = (hasOpenSquareBracket ? 0 /* CharacterClass.None */ : 1 /* CharacterClass.ForceTermination */);\n                            break;\n                        case 123 /* CharCode.OpenCurlyBrace */:\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 /* CharacterClass.None */;\n                            break;\n                        case 125 /* CharCode.CloseCurlyBrace */:\n                            chClass = (hasOpenCurlyBracket ? 0 /* CharacterClass.None */ : 1 /* CharacterClass.ForceTermination */);\n                            break;\n                        // The following three rules make it that ' or \" or ` are allowed inside links\n                        // only if the link is wrapped by some other quote character\n                        case 39 /* CharCode.SingleQuote */:\n                        case 34 /* CharCode.DoubleQuote */:\n                        case 96 /* CharCode.BackTick */:\n                            if (linkBeginChCode === chCode) {\n                                chClass = 1 /* CharacterClass.ForceTermination */;\n                            }\n                            else if (linkBeginChCode === 39 /* CharCode.SingleQuote */ || linkBeginChCode === 34 /* CharCode.DoubleQuote */ || linkBeginChCode === 96 /* CharCode.BackTick */) {\n                                chClass = 0 /* CharacterClass.None */;\n                            }\n                            else {\n                                chClass = 1 /* CharacterClass.ForceTermination */;\n                            }\n                            break;\n                        case 42 /* CharCode.Asterisk */:\n                            // `*` terminates a link if the link began with `*`\n                            chClass = (linkBeginChCode === 42 /* CharCode.Asterisk */) ? 1 /* CharacterClass.ForceTermination */ : 0 /* CharacterClass.None */;\n                            break;\n                        case 124 /* CharCode.Pipe */:\n                            // `|` terminates a link if the link began with `|`\n                            chClass = (linkBeginChCode === 124 /* CharCode.Pipe */) ? 1 /* CharacterClass.ForceTermination */ : 0 /* CharacterClass.None */;\n                            break;\n                        case 32 /* CharCode.Space */:\n                            // ` ` allow space in between [ and ]\n                            chClass = (inSquareBrackets ? 0 /* CharacterClass.None */ : 1 /* CharacterClass.ForceTermination */);\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* CharacterClass.ForceTermination */) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 /* State.End */) {\n                    let chClass;\n                    if (chCode === 91 /* CharCode.OpenSquareBracket */) {\n                        // Allow for the authority part to contain ipv6 addresses which contain [ and ]\n                        hasOpenSquareBracket = true;\n                        chClass = 0 /* CharacterClass.None */;\n                    }\n                    else {\n                        chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* CharacterClass.ForceTermination */) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 /* State.Accept */;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 /* State.Invalid */) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 /* State.Start */;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 /* State.Accept */) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    }\n}\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class BasicInplaceReplace {\n    constructor() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    navigateValueSet(range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            const result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            const result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    }\n    doNavigateValueSet(text, up) {\n        const numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    }\n    numberReplace(value, up) {\n        const precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        let n1 = Number(value);\n        const n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null; // don't do negative\n                //\t\t\t} else if(n1 === 9 && up) {\n                //\t\t\t\treturn null; // don't insert 10 into a number\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    }\n    textReplace(value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    }\n    valueSetsReplace(valueSets, value, up) {\n        let result = null;\n        for (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    }\n    valueSetReplace(valueSet, value, up) {\n        let idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    }\n}\nBasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport { LinesDiff } from './linesDiffComputer.js';\nimport { RangeMapping, DetailedLineRangeMapping } from './rangeMapping.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { Range } from '../core/range.js';\nimport { assertFn, checkAdjacentItems } from '../../../base/common/assert.js';\nimport { LineRange } from '../core/lineRange.js';\nconst MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nexport class LegacyLinesDiffComputer {\n    computeDiff(originalLines, modifiedLines, options) {\n        var _a;\n        const diffComputer = new DiffComputer(originalLines, modifiedLines, {\n            maxComputationTime: options.maxComputationTimeMs,\n            shouldIgnoreTrimWhitespace: options.ignoreTrimWhitespace,\n            shouldComputeCharChanges: true,\n            shouldMakePrettyDiff: true,\n            shouldPostProcessCharChanges: true,\n        });\n        const result = diffComputer.computeDiff();\n        const changes = [];\n        let lastChange = null;\n        for (const c of result.changes) {\n            let originalRange;\n            if (c.originalEndLineNumber === 0) {\n                // Insertion\n                originalRange = new LineRange(c.originalStartLineNumber + 1, c.originalStartLineNumber + 1);\n            }\n            else {\n                originalRange = new LineRange(c.originalStartLineNumber, c.originalEndLineNumber + 1);\n            }\n            let modifiedRange;\n            if (c.modifiedEndLineNumber === 0) {\n                // Deletion\n                modifiedRange = new LineRange(c.modifiedStartLineNumber + 1, c.modifiedStartLineNumber + 1);\n            }\n            else {\n                modifiedRange = new LineRange(c.modifiedStartLineNumber, c.modifiedEndLineNumber + 1);\n            }\n            let change = new DetailedLineRangeMapping(originalRange, modifiedRange, (_a = c.charChanges) === null || _a === void 0 ? void 0 : _a.map(c => new RangeMapping(new Range(c.originalStartLineNumber, c.originalStartColumn, c.originalEndLineNumber, c.originalEndColumn), new Range(c.modifiedStartLineNumber, c.modifiedStartColumn, c.modifiedEndLineNumber, c.modifiedEndColumn))));\n            if (lastChange) {\n                if (lastChange.modified.endLineNumberExclusive === change.modified.startLineNumber\n                    || lastChange.original.endLineNumberExclusive === change.original.startLineNumber) {\n                    // join touching diffs. Probably moving diffs up/down in the algorithm causes touching diffs.\n                    change = new DetailedLineRangeMapping(lastChange.original.join(change.original), lastChange.modified.join(change.modified), lastChange.innerChanges && change.innerChanges ?\n                        lastChange.innerChanges.concat(change.innerChanges) : undefined);\n                    changes.pop();\n                }\n            }\n            changes.push(change);\n            lastChange = change;\n        }\n        assertFn(() => {\n            return checkAdjacentItems(changes, (m1, m2) => m2.original.startLineNumber - m1.original.endLineNumberExclusive === m2.modified.startLineNumber - m1.modified.endLineNumberExclusive &&\n                // There has to be an unchanged line in between (otherwise both diffs should have been joined)\n                m1.original.endLineNumberExclusive < m2.original.startLineNumber &&\n                m1.modified.endLineNumberExclusive < m2.modified.startLineNumber);\n        });\n        return new LinesDiff(changes, [], result.quitEarly);\n    }\n}\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    const diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n    return diffAlgo.ComputeDiff(pretty);\n}\nclass LineSequence {\n    constructor(lines) {\n        const startColumns = [];\n        const endColumns = [];\n        for (let i = 0, length = lines.length; i < length; i++) {\n            startColumns[i] = getFirstNonBlankColumn(lines[i], 1);\n            endColumns[i] = getLastNonBlankColumn(lines[i], 1);\n        }\n        this.lines = lines;\n        this._startColumns = startColumns;\n        this._endColumns = endColumns;\n    }\n    getElements() {\n        const elements = [];\n        for (let i = 0, len = this.lines.length; i < len; i++) {\n            elements[i] = this.lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n        }\n        return elements;\n    }\n    getStrictElement(index) {\n        return this.lines[index];\n    }\n    getStartLineNumber(i) {\n        return i + 1;\n    }\n    getEndLineNumber(i) {\n        return i + 1;\n    }\n    createCharSequence(shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n        const charCodes = [];\n        const lineNumbers = [];\n        const columns = [];\n        let len = 0;\n        for (let index = startIndex; index <= endIndex; index++) {\n            const lineContent = this.lines[index];\n            const startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n            const endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n            for (let col = startColumn; col < endColumn; col++) {\n                charCodes[len] = lineContent.charCodeAt(col - 1);\n                lineNumbers[len] = index + 1;\n                columns[len] = col;\n                len++;\n            }\n            if (!shouldIgnoreTrimWhitespace && index < endIndex) {\n                // Add \\n if trim whitespace is not ignored\n                charCodes[len] = 10 /* CharCode.LineFeed */;\n                lineNumbers[len] = index + 1;\n                columns[len] = lineContent.length + 1;\n                len++;\n            }\n        }\n        return new CharSequence(charCodes, lineNumbers, columns);\n    }\n}\nclass CharSequence {\n    constructor(charCodes, lineNumbers, columns) {\n        this._charCodes = charCodes;\n        this._lineNumbers = lineNumbers;\n        this._columns = columns;\n    }\n    toString() {\n        return ('[' + this._charCodes.map((s, idx) => (s === 10 /* CharCode.LineFeed */ ? '\\\\n' : String.fromCharCode(s)) + `-(${this._lineNumbers[idx]},${this._columns[idx]})`).join(', ') + ']');\n    }\n    _assertIndex(index, arr) {\n        if (index < 0 || index >= arr.length) {\n            throw new Error(`Illegal index`);\n        }\n    }\n    getElements() {\n        return this._charCodes;\n    }\n    getStartLineNumber(i) {\n        if (i > 0 && i === this._lineNumbers.length) {\n            // the start line number of the element after the last element\n            // is the end line number of the last element\n            return this.getEndLineNumber(i - 1);\n        }\n        this._assertIndex(i, this._lineNumbers);\n        return this._lineNumbers[i];\n    }\n    getEndLineNumber(i) {\n        if (i === -1) {\n            // the end line number of the element before the first element\n            // is the start line number of the first element\n            return this.getStartLineNumber(i + 1);\n        }\n        this._assertIndex(i, this._lineNumbers);\n        if (this._charCodes[i] === 10 /* CharCode.LineFeed */) {\n            return this._lineNumbers[i] + 1;\n        }\n        return this._lineNumbers[i];\n    }\n    getStartColumn(i) {\n        if (i > 0 && i === this._columns.length) {\n            // the start column of the element after the last element\n            // is the end column of the last element\n            return this.getEndColumn(i - 1);\n        }\n        this._assertIndex(i, this._columns);\n        return this._columns[i];\n    }\n    getEndColumn(i) {\n        if (i === -1) {\n            // the end column of the element before the first element\n            // is the start column of the first element\n            return this.getStartColumn(i + 1);\n        }\n        this._assertIndex(i, this._columns);\n        if (this._charCodes[i] === 10 /* CharCode.LineFeed */) {\n            return 1;\n        }\n        return this._columns[i] + 1;\n    }\n}\nclass CharChange {\n    constructor(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    static createFromDiffChange(diffChange, originalCharSequence, modifiedCharSequence) {\n        const originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n        const originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n        const originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        const originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        const modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n        const modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n        const modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        const modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n    }\n}\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    const result = [rawChanges[0]];\n    let prevChange = result[0];\n    for (let i = 1, len = rawChanges.length; i < len; i++) {\n        const currChange = rawChanges[i];\n        const originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        const modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n        const matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            // Merge the current change into the previous one\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            // Add the current change\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nclass LineChange {\n    constructor(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    static createFromDiffResult(shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueCharDiff, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n        let originalStartLineNumber;\n        let originalEndLineNumber;\n        let modifiedStartLineNumber;\n        let modifiedEndLineNumber;\n        let charChanges = undefined;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (shouldComputeCharChanges && diffChange.originalLength > 0 && diffChange.originalLength < 20 && diffChange.modifiedLength > 0 && diffChange.modifiedLength < 20 && continueCharDiff()) {\n            // Compute character changes for diff chunks of at most 20 lines...\n            const originalCharSequence = originalLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            const modifiedCharSequence = modifiedLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            if (originalCharSequence.getElements().length > 0 && modifiedCharSequence.getElements().length > 0) {\n                let rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueCharDiff, true).changes;\n                if (shouldPostProcessCharChanges) {\n                    rawChanges = postProcessCharChanges(rawChanges);\n                }\n                charChanges = [];\n                for (let i = 0, length = rawChanges.length; i < length; i++) {\n                    charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n                }\n            }\n        }\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n    }\n}\nexport class DiffComputer {\n    constructor(originalLines, modifiedLines, opts) {\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = new LineSequence(originalLines);\n        this.modified = new LineSequence(modifiedLines);\n        this.continueLineDiff = createContinueProcessingPredicate(opts.maxComputationTime);\n        this.continueCharDiff = createContinueProcessingPredicate(opts.maxComputationTime === 0 ? 0 : Math.min(opts.maxComputationTime, 5000)); // never run after 5s for character changes...\n    }\n    computeDiff() {\n        if (this.original.lines.length === 1 && this.original.lines[0].length === 0) {\n            // empty original => fast path\n            if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n                return {\n                    quitEarly: false,\n                    changes: []\n                };\n            }\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: 1,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: this.modified.lines.length,\n                        charChanges: undefined\n                    }]\n            };\n        }\n        if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n            // empty modified => fast path\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: this.original.lines.length,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: 1,\n                        charChanges: undefined\n                    }]\n            };\n        }\n        const diffResult = computeDiff(this.original, this.modified, this.continueLineDiff, this.shouldMakePrettyDiff);\n        const rawChanges = diffResult.changes;\n        const quitEarly = diffResult.quitEarly;\n        // The diff is always computed with ignoring trim whitespace\n        // This ensures we get the prettiest diff\n        if (this.shouldIgnoreTrimWhitespace) {\n            const lineChanges = [];\n            for (let i = 0, length = rawChanges.length; i < length; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n            }\n            return {\n                quitEarly: quitEarly,\n                changes: lineChanges\n            };\n        }\n        // Need to post-process and introduce changes where the trim whitespace is different\n        // Note that we are looping starting at -1 to also cover the lines before the first change\n        const result = [];\n        let originalLineIndex = 0;\n        let modifiedLineIndex = 0;\n        for (let i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n            const nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            const originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            const modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                const originalLine = this.originalLines[originalLineIndex];\n                const modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    // These lines differ only in trim whitespace\n                    // Check the leading whitespace\n                    {\n                        let originalStartColumn = getFirstNonBlankColumn(originalLine, 1);\n                        let modifiedStartColumn = getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            const originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            const modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    // Check the trailing whitespace\n                    {\n                        let originalEndColumn = getLastNonBlankColumn(originalLine, 1);\n                        let modifiedEndColumn = getLastNonBlankColumn(modifiedLine, 1);\n                        const originalMaxColumn = originalLine.length + 1;\n                        const modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            const originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            const modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                // Emit the actual change\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return {\n            quitEarly: quitEarly,\n            changes: result\n        };\n    }\n    _pushTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            // Merged into previous\n            return;\n        }\n        let charChanges = undefined;\n        if (this.shouldComputeCharChanges) {\n            charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\n        }\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\n    }\n    _mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        const len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        const prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            // Don't merge with inserts/deletes\n            return false;\n        }\n        if (prevChange.originalEndLineNumber === originalLineNumber && prevChange.modifiedEndLineNumber === modifiedLineNumber) {\n            if (this.shouldComputeCharChanges && prevChange.charChanges) {\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            }\n            return true;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            if (this.shouldComputeCharChanges && prevChange.charChanges) {\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            }\n            return true;\n        }\n        return false;\n    }\n}\nfunction getFirstNonBlankColumn(txt, defaultValue) {\n    const r = strings.firstNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 1;\n}\nfunction getLastNonBlankColumn(txt, defaultValue) {\n    const r = strings.lastNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 2;\n}\nfunction createContinueProcessingPredicate(maximumRuntime) {\n    if (maximumRuntime === 0) {\n        return () => true;\n    }\n    const startTime = Date.now();\n    return () => {\n        return Date.now() - startTime < maximumRuntime;\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LegacyLinesDiffComputer } from './legacyLinesDiffComputer.js';\nimport { DefaultLinesDiffComputer } from './defaultLinesDiffComputer/defaultLinesDiffComputer.js';\nexport const linesDiffComputers = {\n    getLegacy: () => new LegacyLinesDiffComputer(),\n    getDefault: () => new DefaultLinesDiffComputer(),\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Color, HSLA } from '../../../base/common/color.js';\nfunction _parseCaptureGroups(captureGroups) {\n    const values = [];\n    for (const captureGroup of captureGroups) {\n        const parsedNumber = Number(captureGroup);\n        if (parsedNumber || parsedNumber === 0 && captureGroup.replace(/\\s/g, '') !== '') {\n            values.push(parsedNumber);\n        }\n    }\n    return values;\n}\nfunction _toIColor(r, g, b, a) {\n    return {\n        red: r / 255,\n        blue: b / 255,\n        green: g / 255,\n        alpha: a\n    };\n}\nfunction _findRange(model, match) {\n    const index = match.index;\n    const length = match[0].length;\n    if (!index) {\n        return;\n    }\n    const startPosition = model.positionAt(index);\n    const range = {\n        startLineNumber: startPosition.lineNumber,\n        startColumn: startPosition.column,\n        endLineNumber: startPosition.lineNumber,\n        endColumn: startPosition.column + length\n    };\n    return range;\n}\nfunction _findHexColorInformation(range, hexValue) {\n    if (!range) {\n        return;\n    }\n    const parsedHexColor = Color.Format.CSS.parseHex(hexValue);\n    if (!parsedHexColor) {\n        return;\n    }\n    return {\n        range: range,\n        color: _toIColor(parsedHexColor.rgba.r, parsedHexColor.rgba.g, parsedHexColor.rgba.b, parsedHexColor.rgba.a)\n    };\n}\nfunction _findRGBColorInformation(range, matches, isAlpha) {\n    if (!range || matches.length !== 1) {\n        return;\n    }\n    const match = matches[0];\n    const captureGroups = match.values();\n    const parsedRegex = _parseCaptureGroups(captureGroups);\n    return {\n        range: range,\n        color: _toIColor(parsedRegex[0], parsedRegex[1], parsedRegex[2], isAlpha ? parsedRegex[3] : 1)\n    };\n}\nfunction _findHSLColorInformation(range, matches, isAlpha) {\n    if (!range || matches.length !== 1) {\n        return;\n    }\n    const match = matches[0];\n    const captureGroups = match.values();\n    const parsedRegex = _parseCaptureGroups(captureGroups);\n    const colorEquivalent = new Color(new HSLA(parsedRegex[0], parsedRegex[1] / 100, parsedRegex[2] / 100, isAlpha ? parsedRegex[3] : 1));\n    return {\n        range: range,\n        color: _toIColor(colorEquivalent.rgba.r, colorEquivalent.rgba.g, colorEquivalent.rgba.b, colorEquivalent.rgba.a)\n    };\n}\nfunction _findMatches(model, regex) {\n    if (typeof model === 'string') {\n        return [...model.matchAll(regex)];\n    }\n    else {\n        return model.findMatches(regex);\n    }\n}\nfunction computeColors(model) {\n    const result = [];\n    // Early validation for RGB and HSL\n    const initialValidationRegex = /\\b(rgb|rgba|hsl|hsla)(\\([0-9\\s,.\\%]*\\))|(#)([A-Fa-f0-9]{3})\\b|(#)([A-Fa-f0-9]{4})\\b|(#)([A-Fa-f0-9]{6})\\b|(#)([A-Fa-f0-9]{8})\\b/gm;\n    const initialValidationMatches = _findMatches(model, initialValidationRegex);\n    // Potential colors have been found, validate the parameters\n    if (initialValidationMatches.length > 0) {\n        for (const initialMatch of initialValidationMatches) {\n            const initialCaptureGroups = initialMatch.filter(captureGroup => captureGroup !== undefined);\n            const colorScheme = initialCaptureGroups[1];\n            const colorParameters = initialCaptureGroups[2];\n            if (!colorParameters) {\n                continue;\n            }\n            let colorInformation;\n            if (colorScheme === 'rgb') {\n                const regexParameters = /^\\(\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*\\)$/gm;\n                colorInformation = _findRGBColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), false);\n            }\n            else if (colorScheme === 'rgba') {\n                const regexParameters = /^\\(\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\\s*\\)$/gm;\n                colorInformation = _findRGBColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), true);\n            }\n            else if (colorScheme === 'hsl') {\n                const regexParameters = /^\\(\\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*\\)$/gm;\n                colorInformation = _findHSLColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), false);\n            }\n            else if (colorScheme === 'hsla') {\n                const regexParameters = /^\\(\\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\\s*\\)$/gm;\n                colorInformation = _findHSLColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), true);\n            }\n            else if (colorScheme === '#') {\n                colorInformation = _findHexColorInformation(_findRange(model, initialMatch), colorScheme + colorParameters);\n            }\n            if (colorInformation) {\n                result.push(colorInformation);\n            }\n        }\n    }\n    return result;\n}\n/**\n * Returns an array of all default document colors in the provided document\n */\nexport function computeDefaultDocumentColors(model) {\n    if (!model || typeof model.getValue !== 'function' || typeof model.positionAt !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return computeColors(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nconst markRegex = /\\bMARK:\\s*(.*)$/d;\nconst trimDashesRegex = /^-+|-+$/g;\n/**\n * Find section headers in the model.\n *\n * @param model the text model to search in\n * @param options options to search with\n * @returns an array of section headers\n */\nexport function findSectionHeaders(model, options) {\n    var _a;\n    let headers = [];\n    if (options.findRegionSectionHeaders && ((_a = options.foldingRules) === null || _a === void 0 ? void 0 : _a.markers)) {\n        const regionHeaders = collectRegionHeaders(model, options);\n        headers = headers.concat(regionHeaders);\n    }\n    if (options.findMarkSectionHeaders) {\n        const markHeaders = collectMarkHeaders(model);\n        headers = headers.concat(markHeaders);\n    }\n    return headers;\n}\nfunction collectRegionHeaders(model, options) {\n    const regionHeaders = [];\n    const endLineNumber = model.getLineCount();\n    for (let lineNumber = 1; lineNumber <= endLineNumber; lineNumber++) {\n        const lineContent = model.getLineContent(lineNumber);\n        const match = lineContent.match(options.foldingRules.markers.start);\n        if (match) {\n            const range = { startLineNumber: lineNumber, startColumn: match[0].length + 1, endLineNumber: lineNumber, endColumn: lineContent.length + 1 };\n            if (range.endColumn > range.startColumn) {\n                const sectionHeader = {\n                    range,\n                    ...getHeaderText(lineContent.substring(match[0].length)),\n                    shouldBeInComments: false\n                };\n                if (sectionHeader.text || sectionHeader.hasSeparatorLine) {\n                    regionHeaders.push(sectionHeader);\n                }\n            }\n        }\n    }\n    return regionHeaders;\n}\nfunction collectMarkHeaders(model) {\n    const markHeaders = [];\n    const endLineNumber = model.getLineCount();\n    for (let lineNumber = 1; lineNumber <= endLineNumber; lineNumber++) {\n        const lineContent = model.getLineContent(lineNumber);\n        addMarkHeaderIfFound(lineContent, lineNumber, markHeaders);\n    }\n    return markHeaders;\n}\nfunction addMarkHeaderIfFound(lineContent, lineNumber, sectionHeaders) {\n    markRegex.lastIndex = 0;\n    const match = markRegex.exec(lineContent);\n    if (match) {\n        const column = match.indices[1][0] + 1;\n        const endColumn = match.indices[1][1] + 1;\n        const range = { startLineNumber: lineNumber, startColumn: column, endLineNumber: lineNumber, endColumn: endColumn };\n        if (range.endColumn > range.startColumn) {\n            const sectionHeader = {\n                range,\n                ...getHeaderText(match[1]),\n                shouldBeInComments: true\n            };\n            if (sectionHeader.text || sectionHeader.hasSeparatorLine) {\n                sectionHeaders.push(sectionHeader);\n            }\n        }\n    }\n}\nfunction getHeaderText(text) {\n    text = text.trim();\n    const hasSeparatorLine = text.startsWith('-');\n    text = text.replace(trimDashesRegex, '');\n    return { text, hasSeparatorLine };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\nimport { ensureValidWordDefinition, getWordAtText } from '../core/wordHelper.js';\nimport { computeLinks } from '../languages/linkComputer.js';\nimport { BasicInplaceReplace } from '../languages/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from './editorBaseApi.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { UnicodeTextModelHighlighter } from './unicodeTextModelHighlighter.js';\nimport { linesDiffComputers } from '../diff/linesDiffComputers.js';\nimport { createProxyObject, getAllMethodNames } from '../../../base/common/objects.js';\nimport { computeDefaultDocumentColors } from '../languages/defaultDocumentColorsComputer.js';\nimport { findSectionHeaders } from './findSectionHeaders.js';\n/**\n * @internal\n */\nclass MirrorModel extends BaseMirrorModel {\n    get uri() {\n        return this._uri;\n    }\n    get eol() {\n        return this._eol;\n    }\n    getValue() {\n        return this.getText();\n    }\n    findMatches(regex) {\n        const matches = [];\n        for (let i = 0; i < this._lines.length; i++) {\n            const line = this._lines[i];\n            const offsetToAdd = this.offsetAt(new Position(i + 1, 1));\n            const iteratorOverMatches = line.matchAll(regex);\n            for (const match of iteratorOverMatches) {\n                if (match.index || match.index === 0) {\n                    match.index = match.index + offsetToAdd;\n                }\n                matches.push(match);\n            }\n        }\n        return matches;\n    }\n    getLinesContent() {\n        return this._lines.slice(0);\n    }\n    getLineCount() {\n        return this._lines.length;\n    }\n    getLineContent(lineNumber) {\n        return this._lines[lineNumber - 1];\n    }\n    getWordAtPosition(position, wordDefinition) {\n        const wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n        }\n        return null;\n    }\n    words(wordDefinition) {\n        const lines = this._lines;\n        const wordenize = this._wordenize.bind(this);\n        let lineNumber = 0;\n        let lineText = '';\n        let wordRangesIdx = 0;\n        let wordRanges = [];\n        return {\n            *[Symbol.iterator]() {\n                while (true) {\n                    if (wordRangesIdx < wordRanges.length) {\n                        const value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                        wordRangesIdx += 1;\n                        yield value;\n                    }\n                    else {\n                        if (lineNumber < lines.length) {\n                            lineText = lines[lineNumber];\n                            wordRanges = wordenize(lineText, wordDefinition);\n                            wordRangesIdx = 0;\n                            lineNumber += 1;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n            }\n        };\n    }\n    getLineWords(lineNumber, wordDefinition) {\n        const content = this._lines[lineNumber - 1];\n        const ranges = this._wordenize(content, wordDefinition);\n        const words = [];\n        for (const range of ranges) {\n            words.push({\n                word: content.substring(range.start, range.end),\n                startColumn: range.start + 1,\n                endColumn: range.end + 1\n            });\n        }\n        return words;\n    }\n    _wordenize(content, wordDefinition) {\n        const result = [];\n        let match;\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                // it did match the empty string\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    }\n    getValueInRange(range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        const lineEnding = this._eol;\n        const startLineIndex = range.startLineNumber - 1;\n        const endLineIndex = range.endLineNumber - 1;\n        const resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (let i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    }\n    offsetAt(position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getPrefixSum(position.lineNumber - 2) + (position.column - 1);\n    }\n    positionAt(offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        const out = this._lineStarts.getIndexOf(offset);\n        const lineLength = this._lines[out.index].length;\n        // Ensure we return a valid position\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    }\n    _validateRange(range) {\n        const start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        const end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    }\n    _validatePosition(position) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        let { lineNumber, column } = position;\n        let hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            const maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber, column };\n        }\n    }\n}\n/**\n * @internal\n */\nexport class EditorSimpleWorker {\n    constructor(host, foreignModuleFactory) {\n        this._host = host;\n        this._models = Object.create(null);\n        this._foreignModuleFactory = foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    dispose() {\n        this._models = Object.create(null);\n    }\n    _getModel(uri) {\n        return this._models[uri];\n    }\n    _getModels() {\n        const all = [];\n        Object.keys(this._models).forEach((key) => all.push(this._models[key]));\n        return all;\n    }\n    acceptNewModel(data) {\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n    }\n    acceptModelChanged(strURL, e) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        const model = this._models[strURL];\n        model.onEvents(e);\n    }\n    acceptRemovedModel(strURL) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        delete this._models[strURL];\n    }\n    async computeUnicodeHighlights(url, options, range) {\n        const model = this._getModel(url);\n        if (!model) {\n            return { ranges: [], hasMore: false, ambiguousCharacterCount: 0, invisibleCharacterCount: 0, nonBasicAsciiCharacterCount: 0 };\n        }\n        return UnicodeTextModelHighlighter.computeUnicodeHighlights(model, options, range);\n    }\n    async findSectionHeaders(url, options) {\n        const model = this._getModel(url);\n        if (!model) {\n            return [];\n        }\n        return findSectionHeaders(model, options);\n    }\n    // ---- BEGIN diff --------------------------------------------------------------------------\n    async computeDiff(originalUrl, modifiedUrl, options, algorithm) {\n        const original = this._getModel(originalUrl);\n        const modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return null;\n        }\n        const result = EditorSimpleWorker.computeDiff(original, modified, options, algorithm);\n        return result;\n    }\n    static computeDiff(originalTextModel, modifiedTextModel, options, algorithm) {\n        const diffAlgorithm = algorithm === 'advanced' ? linesDiffComputers.getDefault() : linesDiffComputers.getLegacy();\n        const originalLines = originalTextModel.getLinesContent();\n        const modifiedLines = modifiedTextModel.getLinesContent();\n        const result = diffAlgorithm.computeDiff(originalLines, modifiedLines, options);\n        const identical = (result.changes.length > 0 ? false : this._modelsAreIdentical(originalTextModel, modifiedTextModel));\n        function getLineChanges(changes) {\n            return changes.map(m => {\n                var _a;\n                return ([m.original.startLineNumber, m.original.endLineNumberExclusive, m.modified.startLineNumber, m.modified.endLineNumberExclusive, (_a = m.innerChanges) === null || _a === void 0 ? void 0 : _a.map(m => [\n                        m.originalRange.startLineNumber,\n                        m.originalRange.startColumn,\n                        m.originalRange.endLineNumber,\n                        m.originalRange.endColumn,\n                        m.modifiedRange.startLineNumber,\n                        m.modifiedRange.startColumn,\n                        m.modifiedRange.endLineNumber,\n                        m.modifiedRange.endColumn,\n                    ])]);\n            });\n        }\n        return {\n            identical,\n            quitEarly: result.hitTimeout,\n            changes: getLineChanges(result.changes),\n            moves: result.moves.map(m => ([\n                m.lineRangeMapping.original.startLineNumber,\n                m.lineRangeMapping.original.endLineNumberExclusive,\n                m.lineRangeMapping.modified.startLineNumber,\n                m.lineRangeMapping.modified.endLineNumberExclusive,\n                getLineChanges(m.changes)\n            ])),\n        };\n    }\n    static _modelsAreIdentical(original, modified) {\n        const originalLineCount = original.getLineCount();\n        const modifiedLineCount = modified.getLineCount();\n        if (originalLineCount !== modifiedLineCount) {\n            return false;\n        }\n        for (let line = 1; line <= originalLineCount; line++) {\n            const originalLine = original.getLineContent(line);\n            const modifiedLine = modified.getLineContent(line);\n            if (originalLine !== modifiedLine) {\n                return false;\n            }\n        }\n        return true;\n    }\n    async computeMoreMinimalEdits(modelUrl, edits, pretty) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return edits;\n        }\n        const result = [];\n        let lastEol = undefined;\n        edits = edits.slice(0).sort((a, b) => {\n            if (a.range && b.range) {\n                return Range.compareRangesUsingStarts(a.range, b.range);\n            }\n            // eol only changes should go to the end\n            const aRng = a.range ? 0 : 1;\n            const bRng = b.range ? 0 : 1;\n            return aRng - bRng;\n        });\n        // merge adjacent edits\n        let writeIndex = 0;\n        for (let readIndex = 1; readIndex < edits.length; readIndex++) {\n            if (Range.getEndPosition(edits[writeIndex].range).equals(Range.getStartPosition(edits[readIndex].range))) {\n                edits[writeIndex].range = Range.fromPositions(Range.getStartPosition(edits[writeIndex].range), Range.getEndPosition(edits[readIndex].range));\n                edits[writeIndex].text += edits[readIndex].text;\n            }\n            else {\n                writeIndex++;\n                edits[writeIndex] = edits[readIndex];\n            }\n        }\n        edits.length = writeIndex + 1;\n        for (let { range, text, eol } of edits) {\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (Range.isEmpty(range) && !text) {\n                // empty change\n                continue;\n            }\n            const original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                // noop\n                continue;\n            }\n            // make sure diff won't take too long\n            if (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n                result.push({ range, text });\n                continue;\n            }\n            // compute diff between original and edit.text\n            const changes = stringDiff(original, text, pretty);\n            const editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n            for (const change of changes) {\n                const start = model.positionAt(editOffset + change.originalStart);\n                const end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                const newEdit = {\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\n                    range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                };\n                if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                    result.push(newEdit);\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n        }\n        return result;\n    }\n    // ---- END minimal edits ---------------------------------------------------------------\n    async computeLinks(modelUrl) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        return computeLinks(model);\n    }\n    // --- BEGIN default document colors -----------------------------------------------------------\n    async computeDefaultDocumentColors(modelUrl) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        return computeDefaultDocumentColors(model);\n    }\n    async textualSuggest(modelUrls, leadingWord, wordDef, wordDefFlags) {\n        const sw = new StopWatch();\n        const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        const seen = new Set();\n        outer: for (const url of modelUrls) {\n            const model = this._getModel(url);\n            if (!model) {\n                continue;\n            }\n            for (const word of model.words(wordDefRegExp)) {\n                if (word === leadingWord || !isNaN(Number(word))) {\n                    continue;\n                }\n                seen.add(word);\n                if (seen.size > EditorSimpleWorker._suggestionsLimit) {\n                    break outer;\n                }\n            }\n        }\n        return { words: Array.from(seen), duration: sw.elapsed() };\n    }\n    // ---- END suggest --------------------------------------------------------------------------\n    //#region -- word ranges --\n    async computeWordRanges(modelUrl, range, wordDef, wordDefFlags) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return Object.create(null);\n        }\n        const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        const result = Object.create(null);\n        for (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n            const words = model.getLineWords(line, wordDefRegExp);\n            for (const word of words) {\n                if (!isNaN(Number(word.word))) {\n                    continue;\n                }\n                let array = result[word.word];\n                if (!array) {\n                    array = [];\n                    result[word.word] = array;\n                }\n                array.push({\n                    startLineNumber: line,\n                    startColumn: word.startColumn,\n                    endLineNumber: line,\n                    endColumn: word.endColumn\n                });\n            }\n        }\n        return result;\n    }\n    //#endregion\n    async navigateValueSet(modelUrl, range, up, wordDef, wordDefFlags) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        if (range.startColumn === range.endColumn) {\n            range = {\n                startLineNumber: range.startLineNumber,\n                startColumn: range.startColumn,\n                endLineNumber: range.endLineNumber,\n                endColumn: range.endColumn + 1\n            };\n        }\n        const selectionText = model.getValueInRange(range);\n        const wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n        if (!wordRange) {\n            return null;\n        }\n        const word = model.getValueInRange(wordRange);\n        const result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n        return result;\n    }\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\n    loadForeignModule(moduleId, createData, foreignHostMethods) {\n        const proxyMethodRequest = (method, args) => {\n            return this._host.fhr(method, args);\n        };\n        const foreignHost = createProxyObject(foreignHostMethods, proxyMethodRequest);\n        const ctx = {\n            host: foreignHost,\n            getMirrorModels: () => {\n                return this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            // static foreing module\n            return Promise.resolve(getAllMethodNames(this._foreignModule));\n        }\n        // ESM-comment-begin\n        // \t\treturn new Promise<any>((resolve, reject) => {\n        // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n        // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n        // \n        // \t\t\t\tresolve(getAllMethodNames(this._foreignModule));\n        // \n        // \t\t\t}, reject);\n        // \t\t});\n        // ESM-comment-end\n        // ESM-uncomment-begin\n        return Promise.reject(new Error(`Unexpected usage`));\n        // ESM-uncomment-end\n    }\n    // foreign method request\n    fmr(method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n}\n// ---- END diff --------------------------------------------------------------------------\n// ---- BEGIN minimal edits ---------------------------------------------------------------\nEditorSimpleWorker._diffLimit = 100000;\n// ---- BEGIN suggest --------------------------------------------------------------------------\nEditorSimpleWorker._suggestionsLimit = 10000;\n/**\n * Called on the worker side\n * @internal\n */\nexport function create(host) {\n    return new EditorSimpleWorker(host, null);\n}\nif (typeof importScripts === 'function') {\n    // Running in a web worker\n    globalThis.monaco = createMonacoBaseAPI();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../core/range.js';\nimport { Searcher } from '../model/textModelSearch.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { assertNever } from '../../../base/common/assert.js';\nimport { DEFAULT_WORD_REGEXP, getWordAtText } from '../core/wordHelper.js';\nexport class UnicodeTextModelHighlighter {\n    static computeUnicodeHighlights(model, options, range) {\n        const startLine = range ? range.startLineNumber : 1;\n        const endLine = range ? range.endLineNumber : model.getLineCount();\n        const codePointHighlighter = new CodePointHighlighter(options);\n        const candidates = codePointHighlighter.getCandidateCodePoints();\n        let regex;\n        if (candidates === 'allNonBasicAscii') {\n            regex = new RegExp('[^\\\\t\\\\n\\\\r\\\\x20-\\\\x7E]', 'g');\n        }\n        else {\n            regex = new RegExp(`${buildRegExpCharClassExpr(Array.from(candidates))}`, 'g');\n        }\n        const searcher = new Searcher(null, regex);\n        const ranges = [];\n        let hasMore = false;\n        let m;\n        let ambiguousCharacterCount = 0;\n        let invisibleCharacterCount = 0;\n        let nonBasicAsciiCharacterCount = 0;\n        forLoop: for (let lineNumber = startLine, lineCount = endLine; lineNumber <= lineCount; lineNumber++) {\n            const lineContent = model.getLineContent(lineNumber);\n            const lineLength = lineContent.length;\n            // Reset regex to search from the beginning\n            searcher.reset(0);\n            do {\n                m = searcher.next(lineContent);\n                if (m) {\n                    let startIndex = m.index;\n                    let endIndex = m.index + m[0].length;\n                    // Extend range to entire code point\n                    if (startIndex > 0) {\n                        const charCodeBefore = lineContent.charCodeAt(startIndex - 1);\n                        if (strings.isHighSurrogate(charCodeBefore)) {\n                            startIndex--;\n                        }\n                    }\n                    if (endIndex + 1 < lineLength) {\n                        const charCodeBefore = lineContent.charCodeAt(endIndex - 1);\n                        if (strings.isHighSurrogate(charCodeBefore)) {\n                            endIndex++;\n                        }\n                    }\n                    const str = lineContent.substring(startIndex, endIndex);\n                    let word = getWordAtText(startIndex + 1, DEFAULT_WORD_REGEXP, lineContent, 0);\n                    if (word && word.endColumn <= startIndex + 1) {\n                        // The word does not include the problematic character, ignore the word\n                        word = null;\n                    }\n                    const highlightReason = codePointHighlighter.shouldHighlightNonBasicASCII(str, word ? word.word : null);\n                    if (highlightReason !== 0 /* SimpleHighlightReason.None */) {\n                        if (highlightReason === 3 /* SimpleHighlightReason.Ambiguous */) {\n                            ambiguousCharacterCount++;\n                        }\n                        else if (highlightReason === 2 /* SimpleHighlightReason.Invisible */) {\n                            invisibleCharacterCount++;\n                        }\n                        else if (highlightReason === 1 /* SimpleHighlightReason.NonBasicASCII */) {\n                            nonBasicAsciiCharacterCount++;\n                        }\n                        else {\n                            assertNever(highlightReason);\n                        }\n                        const MAX_RESULT_LENGTH = 1000;\n                        if (ranges.length >= MAX_RESULT_LENGTH) {\n                            hasMore = true;\n                            break forLoop;\n                        }\n                        ranges.push(new Range(lineNumber, startIndex + 1, lineNumber, endIndex + 1));\n                    }\n                }\n            } while (m);\n        }\n        return {\n            ranges,\n            hasMore,\n            ambiguousCharacterCount,\n            invisibleCharacterCount,\n            nonBasicAsciiCharacterCount\n        };\n    }\n    static computeUnicodeHighlightReason(char, options) {\n        const codePointHighlighter = new CodePointHighlighter(options);\n        const reason = codePointHighlighter.shouldHighlightNonBasicASCII(char, null);\n        switch (reason) {\n            case 0 /* SimpleHighlightReason.None */:\n                return null;\n            case 2 /* SimpleHighlightReason.Invisible */:\n                return { kind: 1 /* UnicodeHighlighterReasonKind.Invisible */ };\n            case 3 /* SimpleHighlightReason.Ambiguous */: {\n                const codePoint = char.codePointAt(0);\n                const primaryConfusable = codePointHighlighter.ambiguousCharacters.getPrimaryConfusable(codePoint);\n                const notAmbiguousInLocales = strings.AmbiguousCharacters.getLocales().filter((l) => !strings.AmbiguousCharacters.getInstance(new Set([...options.allowedLocales, l])).isAmbiguous(codePoint));\n                return { kind: 0 /* UnicodeHighlighterReasonKind.Ambiguous */, confusableWith: String.fromCodePoint(primaryConfusable), notAmbiguousInLocales };\n            }\n            case 1 /* SimpleHighlightReason.NonBasicASCII */:\n                return { kind: 2 /* UnicodeHighlighterReasonKind.NonBasicAscii */ };\n        }\n    }\n}\nfunction buildRegExpCharClassExpr(codePoints, flags) {\n    const src = `[${strings.escapeRegExpCharacters(codePoints.map((i) => String.fromCodePoint(i)).join(''))}]`;\n    return src;\n}\nclass CodePointHighlighter {\n    constructor(options) {\n        this.options = options;\n        this.allowedCodePoints = new Set(options.allowedCodePoints);\n        this.ambiguousCharacters = strings.AmbiguousCharacters.getInstance(new Set(options.allowedLocales));\n    }\n    getCandidateCodePoints() {\n        if (this.options.nonBasicASCII) {\n            return 'allNonBasicAscii';\n        }\n        const set = new Set();\n        if (this.options.invisibleCharacters) {\n            for (const cp of strings.InvisibleCharacters.codePoints) {\n                if (!isAllowedInvisibleCharacter(String.fromCodePoint(cp))) {\n                    set.add(cp);\n                }\n            }\n        }\n        if (this.options.ambiguousCharacters) {\n            for (const cp of this.ambiguousCharacters.getConfusableCodePoints()) {\n                set.add(cp);\n            }\n        }\n        for (const cp of this.allowedCodePoints) {\n            set.delete(cp);\n        }\n        return set;\n    }\n    shouldHighlightNonBasicASCII(character, wordContext) {\n        const codePoint = character.codePointAt(0);\n        if (this.allowedCodePoints.has(codePoint)) {\n            return 0 /* SimpleHighlightReason.None */;\n        }\n        if (this.options.nonBasicASCII) {\n            return 1 /* SimpleHighlightReason.NonBasicASCII */;\n        }\n        let hasBasicASCIICharacters = false;\n        let hasNonConfusableNonBasicAsciiCharacter = false;\n        if (wordContext) {\n            for (const char of wordContext) {\n                const codePoint = char.codePointAt(0);\n                const isBasicASCII = strings.isBasicASCII(char);\n                hasBasicASCIICharacters = hasBasicASCIICharacters || isBasicASCII;\n                if (!isBasicASCII &&\n                    !this.ambiguousCharacters.isAmbiguous(codePoint) &&\n                    !strings.InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                    hasNonConfusableNonBasicAsciiCharacter = true;\n                }\n            }\n        }\n        if (\n        /* Don't allow mixing weird looking characters with ASCII */ !hasBasicASCIICharacters &&\n            /* Is there an obviously weird looking character? */ hasNonConfusableNonBasicAsciiCharacter) {\n            return 0 /* SimpleHighlightReason.None */;\n        }\n        if (this.options.invisibleCharacters) {\n            // TODO check for emojis\n            if (!isAllowedInvisibleCharacter(character) && strings.InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                return 2 /* SimpleHighlightReason.Invisible */;\n            }\n        }\n        if (this.options.ambiguousCharacters) {\n            if (this.ambiguousCharacters.isAmbiguous(codePoint)) {\n                return 3 /* SimpleHighlightReason.Ambiguous */;\n            }\n        }\n        return 0 /* SimpleHighlightReason.None */;\n    }\n}\nfunction isAllowedInvisibleCharacter(character) {\n    return character === ' ' || character === '\\n' || character === '\\t';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../base/common/lifecycle.js';\nexport class TokenizationRegistry {\n    constructor() {\n        this._tokenizationSupports = new Map();\n        this._factories = new Map();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._colorMap = null;\n    }\n    handleChange(languageIds) {\n        this._onDidChange.fire({\n            changedLanguages: languageIds,\n            changedColorMap: false\n        });\n    }\n    register(languageId, support) {\n        this._tokenizationSupports.set(languageId, support);\n        this.handleChange([languageId]);\n        return toDisposable(() => {\n            if (this._tokenizationSupports.get(languageId) !== support) {\n                return;\n            }\n            this._tokenizationSupports.delete(languageId);\n            this.handleChange([languageId]);\n        });\n    }\n    get(languageId) {\n        return this._tokenizationSupports.get(languageId) || null;\n    }\n    registerFactory(languageId, factory) {\n        var _a;\n        (_a = this._factories.get(languageId)) === null || _a === void 0 ? void 0 : _a.dispose();\n        const myData = new TokenizationSupportFactoryData(this, languageId, factory);\n        this._factories.set(languageId, myData);\n        return toDisposable(() => {\n            const v = this._factories.get(languageId);\n            if (!v || v !== myData) {\n                return;\n            }\n            this._factories.delete(languageId);\n            v.dispose();\n        });\n    }\n    async getOrCreate(languageId) {\n        // check first if the support is already set\n        const tokenizationSupport = this.get(languageId);\n        if (tokenizationSupport) {\n            return tokenizationSupport;\n        }\n        const factory = this._factories.get(languageId);\n        if (!factory || factory.isResolved) {\n            // no factory or factory.resolve already finished\n            return null;\n        }\n        await factory.resolve();\n        return this.get(languageId);\n    }\n    isResolved(languageId) {\n        const tokenizationSupport = this.get(languageId);\n        if (tokenizationSupport) {\n            return true;\n        }\n        const factory = this._factories.get(languageId);\n        if (!factory || factory.isResolved) {\n            return true;\n        }\n        return false;\n    }\n    setColorMap(colorMap) {\n        this._colorMap = colorMap;\n        this._onDidChange.fire({\n            changedLanguages: Array.from(this._tokenizationSupports.keys()),\n            changedColorMap: true\n        });\n    }\n    getColorMap() {\n        return this._colorMap;\n    }\n    getDefaultBackground() {\n        if (this._colorMap && this._colorMap.length > 2 /* ColorId.DefaultBackground */) {\n            return this._colorMap[2 /* ColorId.DefaultBackground */];\n        }\n        return null;\n    }\n}\nclass TokenizationSupportFactoryData extends Disposable {\n    get isResolved() {\n        return this._isResolved;\n    }\n    constructor(_registry, _languageId, _factory) {\n        super();\n        this._registry = _registry;\n        this._languageId = _languageId;\n        this._factory = _factory;\n        this._isDisposed = false;\n        this._resolvePromise = null;\n        this._isResolved = false;\n    }\n    dispose() {\n        this._isDisposed = true;\n        super.dispose();\n    }\n    async resolve() {\n        if (!this._resolvePromise) {\n            this._resolvePromise = this._create();\n        }\n        return this._resolvePromise;\n    }\n    async _create() {\n        const value = await this._factory.tokenizationSupport;\n        this._isResolved = true;\n        if (value && !this._isDisposed) {\n            this._register(this._registry.register(this._languageId, value));\n        }\n    }\n}\n"],"names":["codiconsLibrary","add","plus","gistNew","repoCreate","lightbulb","lightBulb","repo","repoDelete","gistFork","repoForked","gitPullRequest","gitPullRequestAbandoned","recordKeys","keyboard","tag","gitPullRequestLabel","tagAdd","tagRemove","person","personFollow","personOutline","personFilled","gitBranch","gitBranchCreate","gitBranchDelete","sourceControl","mirror","mirrorPublic","star","starAdd","starDelete","starEmpty","comment","commentAdd","alert","warning","search","searchSave","logOut","signOut","logIn","signIn","eye","eyeUnwatch","eyeWatch","circleFilled","primitiveDot","closeDirty","debugBreakpoint","debugBreakpointDisabled","debugHint","terminalDecorationSuccess","primitiveSquare","edit","pencil","info","issueOpened","gistPrivate","gitForkPrivate","lock","mirrorPrivate","close","removeClose","x","repoSync","sync","clone","desktopDownload","beaker","microscope","vm","deviceDesktop","file","fileText","more","ellipsis","kebabHorizontal","mailReply","reply","organization","organizationFilled","organizationOutline","newFile","fileAdd","newFolder","fileDirectoryCreate","trash","trashcan","history","clock","folder","fileDirectory","symbolFolder","logoGithub","markGithub","github","terminal","console","repl","zap","symbolEvent","error","stop","variable","symbolVariable","array","symbolArray","symbolModule","symbolPackage","symbolNamespace","symbolObject","symbolMethod","symbolFunction","symbolConstructor","symbolBoolean","symbolNull","symbolNumeric","symbolNumber","symbolStructure","symbolStruct","symbolParameter","symbolTypeParameter","symbolKey","symbolText","symbolReference","goToFile","symbolEnum","symbolValue","symbolRuler","symbolUnit","activateBreakpoints","archive","arrowBoth","arrowDown","arrowLeft","arrowRight","arrowSmallDown","arrowSmallLeft","arrowSmallRight","arrowSmallUp","arrowUp","bell","bold","book","bookmark","debugBreakpointConditionalUnverified","debugBreakpointConditional","debugBreakpointConditionalDisabled","debugBreakpointDataUnverified","debugBreakpointData","debugBreakpointDataDisabled","debugBreakpointLogUnverified","debugBreakpointLog","debugBreakpointLogDisabled","briefcase","broadcast","browser","bug","calendar","caseSensitive","check","checklist","chevronDown","chevronLeft","chevronRight","chevronUp","chromeClose","chromeMaximize","chromeMinimize","chromeRestore","circleOutline","circle","debugBreakpointUnverified","terminalDecorationIncomplete","circleSlash","circuitBoard","clearAll","clippy","closeAll","cloudDownload","cloudUpload","code","collapseAll","colorMode","commentDiscussion","creditCard","dash","dashboard","database","debugContinue","debugDisconnect","debugPause","debugRestart","debugStart","debugStepInto","debugStepOut","debugStepOver","debugStop","debug","deviceCameraVideo","deviceCamera","deviceMobile","diffAdded","diffIgnored","diffModified","diffRemoved","diffRenamed","diff","diffSidebyside","discard","editorLayout","emptyWindow","exclude","extensions","eyeClosed","fileBinary","fileCode","fileMedia","filePdf","fileSubmodule","fileSymlinkDirectory","fileSymlinkFile","fileZip","files","filter","flame","foldDown","foldUp","fold","folderActive","folderOpened","gear","gift","gistSecret","gist","gitCommit","gitCompare","compareChanges","gitMerge","githubAction","githubAlt","globe","grabber","graph","gripper","heart","home","horizontalRule","hubot","inbox","issueReopened","issues","italic","jersey","json","kebabVertical","key","law","lightbulbAutofix","linkExternal","link","listOrdered","listUnordered","liveShare","loading","location","mailRead","mail","markdown","megaphone","mention","milestone","gitPullRequestMilestone","mortarBoard","move","multipleWindows","mute","noNewline","note","octoface","openPreview","package","paintcan","pin","play","run","plug","preserveCase","preview","project","pulse","question","quote","radioTower","reactions","references","refresh","regex","remoteExplorer","remote","remove","replaceAll","replace","repoClone","repoForcePush","repoPull","repoPush","report","requestChanges","rocket","rootFolderOpened","rootFolder","rss","ruby","saveAll","saveAs","save","screenFull","screenNormal","searchStop","server","settingsGear","settings","shield","smiley","sortPrecedence","splitHorizontal","splitVertical","squirrel","starFull","starHalf","symbolClass","symbolColor","symbolConstant","symbolEnumMember","symbolField","symbolFile","symbolInterface","symbolKeyword","symbolMisc","symbolOperator","symbolProperty","wrench","wrenchSubaction","symbolSnippet","tasklist","telescope","textSize","threeBars","thumbsdown","thumbsup","tools","triangleDown","triangleLeft","triangleRight","triangleUp","twitter","unfold","unlock","unmute","unverified","verified","versions","vmActive","vmOutline","vmRunning","watch","whitespace","wholeWord","window","wordWrap","zoomIn","zoomOut","listFilter","listFlat","listSelection","selection","listTree","debugBreakpointFunctionUnverified","debugBreakpointFunction","debugBreakpointFunctionDisabled","debugStackframeActive","circleSmallFilled","debugStackframeDot","terminalDecorationMark","debugStackframe","debugStackframeFocused","debugBreakpointUnsupported","symbolString","debugReverseContinue","debugStepBack","debugRestartFrame","debugAlt","callIncoming","callOutgoing","menu","expandAll","feedback","gitPullRequestReviewer","groupByRefType","ungroupByRefType","account","gitPullRequestAssignee","bellDot","debugConsole","library","output","runAll","syncIgnored","pinned","githubInverted","serverProcess","serverEnvironment","pass","issueClosed","stopCircle","playCircle","record","debugAltSmall","vmConnect","cloud","merge","export","graphLeft","magnet","notebook","redo","checkAll","pinnedDirty","passFilled","circleLargeFilled","circleLarge","circleLargeOutline","combine","gather","table","variableGroup","typeHierarchy","typeHierarchySub","typeHierarchySuper","gitPullRequestCreate","runAbove","runBelow","notebookTemplate","debugRerun","workspaceTrusted","workspaceUntrusted","workspaceUnknown","terminalCmd","terminalDebian","terminalLinux","terminalPowershell","terminalTmux","terminalUbuntu","terminalBash","arrowSwap","copy","personAdd","filterFilled","wand","debugLineByLine","inspect","layers","layersDot","layersActive","compass","compassDot","compassActive","azure","issueDraft","gitPullRequestClosed","gitPullRequestDraft","debugAll","debugCoverage","runErrors","folderLibrary","debugContinueSmall","beakerStop","graphLine","graphScatter","pieChart","bracket","bracketDot","bracketError","lockSmall","azureDevops","verifiedFilled","newline","layout","layoutActivitybarLeft","layoutActivitybarRight","layoutPanelLeft","layoutPanelCenter","layoutPanelJustify","layoutPanelRight","layoutPanel","layoutSidebarLeft","layoutSidebarRight","layoutStatusbar","layoutMenubar","layoutCentered","target","indent","recordSmall","errorSmall","terminalDecorationError","arrowCircleDown","arrowCircleLeft","arrowCircleRight","arrowCircleUp","layoutSidebarRightOff","layoutPanelOff","layoutSidebarLeftOff","blank","heartFilled","map","mapHorizontal","foldHorizontal","mapFilled","mapHorizontalFilled","foldHorizontalFilled","circleSmall","bellSlash","bellSlashDot","commentUnresolved","gitPullRequestGoToChanges","gitPullRequestNewChanges","searchFuzzy","commentDraft","send","sparkle","insert","mic","thumbsdownFilled","thumbsupFilled","coffee","snake","game","vr","chip","piano","music","micFilled","repoFetch","copilot","lightbulbSparkle","robot","sparkleFilled","diffSingle","diffMultiple","surroundWith","share","gitStash","gitStashApply","gitStashPop","vscode","vscodeInsiders","codeOss","runCoverage","runAllCoverage","coverage","githubProject","mapVertical","foldVertical","mapVerticalFilled","foldVerticalFilled","goToSearch","percentage","sortPercentage","codiconsDerived","dialogError","dialogWarning","dialogInfo","dialogClose","treeItemExpanded","treeFilterOnTypeOn","treeFilterOnTypeOff","treeFilterClear","treeItemLoading","menuSelection","menuSubmenu","menuBarMore","scrollbarButtonLeft","scrollbarButtonRight","scrollbarButtonUp","scrollbarButtonDown","toolBarMore","quickInputBack","dropDownButton","symbolCustomColor","exportIcon","workspaceUnspecified","newLine","thumbsDownFilled","thumbsUpFilled","gitFetch","lightbulbSparkleAutofix","debugBreakpointPending","Codicon","DiffChange","constructor","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","createSingleCallFunction","fn","fnDidRunCallback","result","_this","didCall","apply","arguments","Lazy","executor","_didRun","value","_value","err","_error","rawValue","Node","element","next","Undefined","prev","undefined","LinkedList","_first","_last","_size","size","isEmpty","clear","node","unshift","_insert","push","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","shift","res","pop","anchor","Symbol","iterator","safeProcess","vscodeGlobal","globalThis","process","sandboxProcess","platform","arch","env","cwd","hasPerformanceNow","performance","now","StopWatch","create","highResolution","_now","Date","bind","_startTime","_stopTime","reset","elapsed","toUint8","v","toUint32","LineRange","fromRangeInclusive","range","startLineNumber","endLineNumber","joinMany","lineRanges","length","LineRangeSet","slice","i","getUnion","ranges","join","endLineNumberExclusive","Math","min","max","ofLength","deserialize","lineRange","contains","lineNumber","delta","offset","deltaLength","other","toString","intersect","intersectsStrict","overlapOrTouch","equals","b","toInclusiveRange","Number","MAX_SAFE_INTEGER","toExclusiveRange","mapToLineArray","f","forEach","serialize","includes","toOffsetRange","_normalizedRanges","addRange","joinRangeStartIdx","r","joinRangeEndIdxExclusive","splice","joinRange","rangeThatStartsBeforeEnd","intersects","i1","i2","current","lineRange1","lineRange2","subtractFrom","getIntersection","r1","r2","getWithDelta","Position","column","with","newLineNumber","newColumn","deltaLineNumber","deltaColumn","a","isBefore","isBeforeOrEqual","compare","aLineNumber","bLineNumber","aColumn","lift","pos","isIPosition","obj","toJSON","PositionOffsetTransformer","text","lineStartOffsetByLineIdx","charAt","getOffset","position","getOffsetRange","getStartPosition","getEndPosition","textLength","lineIdx","Range","startColumn","endColumn","containsPosition","strictContainsPosition","containsRange","otherRange","strictContainsRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","setEndPosition","setStartPosition","collapseToStart","collapseToEnd","lineCount","fromPositions","start","end","isIRange","areIntersectingOrTouching","areIntersecting","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","aEndColumn","aExists","compareRangesUsingEnds","spansMultipleLines","TextLength","betweenPositions","position1","position2","ofRange","ofText","line","c","columnCount","isGreaterThanOrEqualTo","createRange","startPosition","addToPosition","zero","DiffAlgorithmResult","trivial","seq1","seq2","SequenceDiff","trivialTimedOut","diffs","hitTimeout","invert","sequenceDiffs","doc1Length","fromOffsetPairs","getEndExclusives","OffsetPair","getStarts","seq2Range","endExclusive","seq1Range","offset1","offset2","swap","deltaStart","deltaEnd","InfiniteTimeout","isValid","instance","DateTimeout","timeout","startTime","valid","Array2D","width","height","get","y","set","isSpace","charCode","LineRangeFragment","getKey","chr","chrKeys","lines","source","histogram","counter","j","totalCount","computeSimilarity","_a","_b","sumDifferences","maxLength","abs","Map","DynamicProgrammingDiffing","compute","sequence1","sequence2","equalityScore","lcsLengths","directions","lengths","s1","s2","extendedSeqScore","horizontalLen","verticalLen","getElement","newValue","prevLen","lastAligningPosS1","lastAligningPosS2","reportDecreasingAligningPositions","reverse","MyersDiffAlgorithm","getXAfterSnake","seqX","seqY","d","V","FastInt32Array","paths","FastArrayNegativeIndices","SnakePath","k","loop","lowerBound","upperBound","step","maxXofDLineTop","maxXofDLineLeft","newMaxX","lastPath","path","endX","endY","positiveArr","Int32Array","negativeArr","idx","arr","LinesSliceCharSequence","considerWhitespaceChanges","elements","firstCharOffsetByLine","additionalOffsetByLine","trimFirstLineFully","trimmedStartLine","trimStart","trimEnd","charCodeAt","getText","e","String","fromCharCode","getBoundaryScore","prevCategory","getCategory","nextCategory","score","translateOffset","translateRange","findWordContaining","isWordChar","countLinesIn","isStronglyEqual","extendToFullLines","areLinesSimilar","line1","line2","trim","myersDiffingAlgorithm","commonNonSpaceCharCount","seq","longerLineLength","countNonWsChars","str","count","LineSequence","trimmedHash","indentationBefore","getIndentation","DefaultLinesDiffComputer","dynamicProgrammingDiffing","computeDiff","originalLines","modifiedLines","options","maxComputationTimeMs","ignoreTrimWhitespace","perfectHashes","getOrCreateHash","hash","originalLinesHashes","l","modifiedLinesHashes","lineAlignmentResult","log","lineAlignments","alignments","scanForWhitespaceChanges","equalLinesCount","seq1Offset","seq1LastStart","seq2Offset","seq2LastStart","characterDiffs","refineDiff","mappings","assert","changes","lineRangeMappingFromRangeMappings","moves","computeMoves","validatePosition","validateRange","innerChanges","ic","modifiedRange","originalRange","modified","original","hashedOriginalLines","hashedModifiedLines","excludedChanges","computeMovesFromSimpleDeletionsToSimpleInsertions","deletions","insertions","Set","deletion","best","highestSimilarity","insertion","similarity","delete","unchangedMoves","computeUnchangedMoves","original3LineHashes","change","possibleMappings","sort","lastMappings","currentModifiedRange","nextMappings","lastMapping","originalLineRange","modifiedLineRange","mapping","m","modifiedSet","originalSet","diffOrigToMod","modifiedSections","originalTranslatedSections","s","modifiedIntersectedSections","monotonousChanges","extendToTop","extendToBottom","firstTouchingChangeOrig","findLastMonotonous","firstTouchingChangeMod","linesAbove","lastTouchingChangeOrig","lastTouchingChangeMod","linesBelow","origLine","modLine","has","removeMovesInSameDiff","changesMonotonous","diffBeforeEndOfMoveOriginal","joinCloseConsecutiveMoves","last","originalDist","modifiedDist","currentMoveAfterLast","originalText","countWhere","predicate","t","moveChanges","slice1","slice2","diffResult","dontAssertStartLine","g","getLineRangeMapping","rangeMapping","lineStartDelta","lineEndDelta","a1","a2","first","m1","m2","optimizeSequenceDiffs","joinSequenceDiffsByShifting","shiftSequenceDiffs","prevDiff","nextDiff","seq1ValidRange","seq2ValidRange","shiftDiffToBetterPosition","prevResult","cur","result2","nextResult","deltaBefore","deltaAfter","bestDelta","bestScore","seq2OffsetStart","seq2OffsetEndExclusive","removeShortMatches","extendDiffsToEntireWordIfAppropriate","equalMappings","additional","lastPoint","scanWord","pair","equalMapping","w1","w2","w","equalPart","equalChars1","equalChars2","v1","v2","mergeSequenceDiffs","sequenceDiffs1","sequenceDiffs2","sd1","sd2","removeVeryShortMatchingLinesBetweenDiffs","_sequence2","shouldRepeat","lastResult","shouldJoinDiffs","before","after","unchangedRange","unchangedTextWithoutWs","removeVeryShortMatchingTextBetweenLongDiffs","unchangedLineCount","unchangedText","split","beforeLineCount1","beforeSeq1Length","beforeLineCount2","beforeSeq2Length","afterLineCount1","afterSeq1Length","afterLineCount2","afterSeq2Length","cap","pow","newDiffs","newDiff","shouldMarkAsChanged","fullRange1","prefix","suffix","availableSpace","LinesDiff","MovedText","lineRangeMapping","LineRangeMapping","inverse","originalLineCount","modifiedLineCount","lastOriginalEndLineNumber","lastModifiedEndLineNumber","clip","flip","toRangeMapping","origInclusiveRange","modInclusiveRange","RangeMapping","DetailedLineRangeMapping","fromRangeMappings","rangeMappings","withInnerChangesFromLineRanges","toTextEdit","newText","getValueOfRange","KeyMod","chord","firstPart","secondPart","createMonacoBaseAPI","editor","languages","CancellationTokenSource","Emitter","KeyCode","Selection","SelectionDirection","MarkerSeverity","MarkerTag","Uri","Token","CtrlCmd","Shift","Alt","WinCtrl","MirrorTextModel","uri","eol","versionId","_uri","_lines","_eol","_versionId","_lineStarts","_cachedTextValue","dispose","version","onEvents","_acceptDeleteRange","_acceptInsertText","_ensureLineStarts","eolLength","linesLength","lineStartValues","Uint32Array","_setLineText","lineIndex","setValue","substring","removeValues","insertText","insertLines","newLengths","insertValues","Uint8Matrix","rows","cols","defaultValue","data","Uint8Array","len","_data","row","col","StateMachine","edges","maxCharCode","maxState","from","chCode","to","states","_states","_maxCharCode","nextState","currentState","_stateMachine","getStateMachine","_classifier","LinkComputer","_createLink","classifier","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","chClass","charCodeBeforeLink","lastCharCodeInLink","url","computeLinks","model","stateMachine","getClassifier","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","getLineCount","getLineContent","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","inSquareBrackets","hasOpenCurlyBracket","resetStateMachine","BasicInplaceReplace","_defaultValueSet","navigateValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","lastIndexOf","n1","n2","parseFloat","isNaN","floor","valueSetsReplace","valueSets","valueSetReplace","valueSet","indexOf","INSTANCE","LegacyLinesDiffComputer","diffComputer","DiffComputer","maxComputationTime","shouldIgnoreTrimWhitespace","shouldComputeCharChanges","shouldMakePrettyDiff","shouldPostProcessCharChanges","lastChange","originalEndLineNumber","originalStartLineNumber","modifiedEndLineNumber","modifiedStartLineNumber","charChanges","originalStartColumn","originalEndColumn","modifiedStartColumn","modifiedEndColumn","concat","quitEarly","originalSequence","modifiedSequence","continueProcessingPredicate","pretty","diffAlgo","ComputeDiff","startColumns","endColumns","getFirstNonBlankColumn","getLastNonBlankColumn","_startColumns","_endColumns","getElements","getStrictElement","index","getStartLineNumber","getEndLineNumber","createCharSequence","startIndex","endIndex","charCodes","lineNumbers","columns","lineContent","CharSequence","_charCodes","_lineNumbers","_columns","_assertIndex","getStartColumn","getEndColumn","CharChange","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","LineChange","createFromDiffResult","originalLineSequence","modifiedLineSequence","continueCharDiff","rawChanges","postProcessCharChanges","prevChange","currChange","opts","continueLineDiff","createContinueProcessingPredicate","lineChanges","originalLineIndex","modifiedLineIndex","nextChange","originalStop","modifiedStop","originalLine","modifiedLine","originalChar","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","txt","strings","maximumRuntime","linesDiffComputers","getLegacy","getDefault","_parseCaptureGroups","captureGroups","values","captureGroup","parsedNumber","_toIColor","red","blue","green","alpha","_findRange","match","positionAt","_findRGBColorInformation","matches","isAlpha","parsedRegex","color","_findHSLColorInformation","colorEquivalent","rgba","_findMatches","matchAll","findMatches","markRegex","trimDashesRegex","getHeaderText","hasSeparatorLine","startsWith","MirrorModel","getValue","offsetToAdd","offsetAt","getLinesContent","getWordAtPosition","wordDefinition","wordAtText","words","wordenize","_wordenize","lineText","wordRangesIdx","wordRanges","getLineWords","content","word","lastIndex","exec","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","_validatePosition","getPrefixSum","out","getIndexOf","lineLength","remainder","hasChanged","maxCharacter","EditorSimpleWorker","host","foreignModuleFactory","_host","_models","Object","_foreignModuleFactory","_foreignModule","_getModel","_getModels","all","keys","acceptNewModel","parse","EOL","acceptModelChanged","strURL","acceptRemovedModel","computeUnicodeHighlights","hasMore","ambiguousCharacterCount","invisibleCharacterCount","nonBasicAsciiCharacterCount","findSectionHeaders","headers","findRegionSectionHeaders","foldingRules","markers","regionHeaders","collectRegionHeaders","sectionHeader","shouldBeInComments","findMarkSectionHeaders","markHeaders","collectMarkHeaders","addMarkHeaderIfFound","sectionHeaders","indices","originalUrl","modifiedUrl","algorithm","originalTextModel","modifiedTextModel","diffAlgorithm","getLineChanges","identical","_modelsAreIdentical","computeMoreMinimalEdits","modelUrl","edits","lastEol","aRng","writeIndex","readIndex","_diffLimit","editOffset","newEdit","substr","computeDefaultDocumentColors","computeColors","initialValidationMatches","initialMatch","colorInformation","initialCaptureGroups","colorScheme","colorParameters","regexParameters","_findHexColorInformation","hexValue","parsedHexColor","Format","CSS","parseHex","textualSuggest","modelUrls","leadingWord","wordDef","wordDefFlags","sw","wordDefRegExp","RegExp","seen","outer","_suggestionsLimit","Array","duration","computeWordRanges","selectionText","wordRange","loadForeignModule","moduleId","createData","foreignHostMethods","foreignHost","method","args","fhr","getMirrorModels","Promise","resolve","reject","fmr","importScripts","monaco","UnicodeTextModelHighlighter","codePoints","startLine","endLine","codePointHighlighter","CodePointHighlighter","candidates","getCandidateCodePoints","fromCodePoint","searcher","forLoop","charCodeBefore","highlightReason","shouldHighlightNonBasicASCII","computeUnicodeHighlightReason","char","kind","codePoint","codePointAt","primaryConfusable","ambiguousCharacters","getPrimaryConfusable","notAmbiguousInLocales","getLocales","getInstance","allowedLocales","isAmbiguous","confusableWith","allowedCodePoints","nonBasicASCII","invisibleCharacters","cp","isAllowedInvisibleCharacter","getConfusableCodePoints","character","wordContext","hasBasicASCIICharacters","hasNonConfusableNonBasicAsciiCharacter","isBasicASCII","isInvisibleCharacter","TokenizationRegistry","_tokenizationSupports","_factories","_onDidChange","onDidChange","event","_colorMap","handleChange","languageIds","fire","changedLanguages","changedColorMap","register","languageId","support","registerFactory","factory","myData","TokenizationSupportFactoryData","getOrCreate","tokenizationSupport","isResolved","setColorMap","colorMap","getColorMap","getDefaultBackground","_isResolved","_registry","_languageId","_factory","_isDisposed","_resolvePromise","_create","_register"],"sourceRoot":""}