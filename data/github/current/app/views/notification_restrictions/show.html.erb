<% members_without_eligible_email_count = owner.members_without_eligible_email_count %>
<% enabled_by_policy = verifiable_domains_notification_restrictions_enabled_by_policy?(owner) %>
<% render_confirmation = render_verifiable_domain_notification_restriction_confirmation?(owner) %>

<%= form_tag notification_restrictions_path_for(owner), method: :patch do %>
  <div class="form-checkbox mt-0">
    <label for="restrict_notifications">
      Restrict email notifications to only approved or verified domains
    </label>
    <%= check_box_tag "restrict_notifications", "on", owner.restrict_notifications_to_verified_domains?,
        class: render_confirmation ? "js-notification-restrictions-confirmation-needed" : "",
        disabled: enabled_by_policy %>
  </div>
  <div class="mb-3">
    <% if members_without_eligible_email_count > 0 %>
      <%= render partial: "verifiable_domains/notification_restrictions_members_without_domain_email",
        locals: {
          owner: owner,
          members_without_eligible_email_count: members_without_eligible_email_count
        } %>
    <% else %>
      <p class="note mt-3">
        All members are currently able to receive email notifications.
      </p>
    <% end %>
  </div>

  <%= render Primer::Beta::Button.new(
    type: :submit,
    classes: "js-notification-restrictions-save",
    disabled: enabled_by_policy,
    data: { "disable-with": "Saving" }) do |button| %>
    Save
  <% end %>

  <% if render_confirmation %>
    <div class="js-notification-restrictions-confirm-modal" hidden>
      <%= render layout: "shared/details_dialog", locals: {
          dialog_class: "overflow-auto",
          button_text: "Save",
          title: "Confirm restricting notifications",
      } do %>
        <%= render partial: "verifiable_domains/notification_restrictions_confirmation",
          locals: {
            owner: owner,
            members_without_eligible_email_count: members_without_eligible_email_count
          } %>
      <% end %>
    </div>
  <% end %>
<% end %>
