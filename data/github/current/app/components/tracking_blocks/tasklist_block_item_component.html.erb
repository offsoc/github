<%# erblint:counter DeprecatedComponentsCounter 1 %>
<li tabindex="0" role="listitem" class="TrackingBlock-item d-flex mt-0 px-3 py-1 gap-2 flex-justify-between position-relative js-tasklist-draggable-issue border-bottom"
  <% if draft_issue? %>data-draft-issue<% else %>data-issue<% end %>
  data-targets="tracking-block.listItems"
  data-item-uuid="<%= uuid %>"
  data-item-title="<%= title %>"
  data-item-state="<%= state %>"
  data-item-position="<%= position %>"
  aria-label="<%= aria_item_label %>"
  <% unless item_id.nil? || item_id.zero? %>data-item-id="<%= item_id %>"<% end %>
  <% unless display_number.nil? || display_number.zero? %>data-display-number="<%= display_number %>"<% end %>
  <% unless repository_id.nil? || repository_id.zero? %>data-repository-id="<%= repository_id %>"<% end %>
  <% if repository_name.present? %>data-repository-name="<%= repository_name %>"<% end %>
  <%= test_selector("tracking-block-item") %>
>
    <% if draft_issue? %>
      <% if is_precache? && parent_issue %>
        <% if !readonly %>
          <%= repository_resource_reference_wrapper(parent_issue, check_type: :write) do |wrapper| %>
            <% wrapper.authorized do %>
              <% render(Primer::Box.new(classes: "tasklist-issue-handle js-tasklist-drag-handle draft-handle flex-self-start")) do %>
                <% primer_octicon(:grabber, classes: "dragger-icon") %>
              <% end %>
            <% end %>
          <% end %>

          <%= render(Primer::Box.new(display: :flex, classes: "Truncate tasklist-flex-grow")) do %>
            <label class="tasklist-checkbox">
              <input
                data-action="change:tracking-block"
                data-targets="tracking-block.inputs"
                class="mr-2"
                type="checkbox"
                <%= "checked" if checked? %>
              >
              <span class="sr-only tasklist-draft user-select-none"><%= is_precache? ? content : title %></span>
            </label>

            <div data-tracking-block-draft-title class="tasklist-flex-grow d-flex" >
              <%= render Primer::Box.new(hidden: true, classes: "js-title-text-field-wrapper tasklist-textarea-container", w: :full, data: {"morpheus-ignore": "hidden"} ) do %>
                <textarea class="js-size-to-fit" aria-label="Draft title" data-action="change:tracking-block keydown:tracking-block focusout:tracking-block#draftTitleInputOutFocus" data-targets="tracking-block.inputs" rows="1"><%= title %></textarea>
              <% end %>

              <%= render Primer::Box.new(
                display: :flex,
                align_items: :flex_start,
                data: {targets: "tracking-block.renderedTitles", action: "click:tracking-block#handleDraftTitleClick", "morpheus-ignore": "hidden" },
                classes: "js-draft-title tasklist-draft-title-container", w: :full ) do %>
                <%= render(Primer::Beta::Text.new(word_break: :break_word)) { is_precache? ? content : safe_title } %>
              <% end %>
            </div>
          <% end %>
        <% else %>
          <%= render(Primer::Box.new(display: :flex, pt: 1, pb: 1, classes: "Truncate tasklist-draft tasklist-flex-grow")) do %>
            <label class="tasklist-checkbox read-only">
              <input
                disabled
                class="mr-2 mt-1"
                type="checkbox"
                <%= "checked" if checked? %>
              >
              <div class="tasklist-draft d-flex">
                <span style="font-weight: normal"><%= is_precache? ? content : safe_title %></span>
              </div>
            </label>
          <% end %>
        <% end %>
      <% else %>
        <% if !readonly %>
          <div class="tasklist-issue-handle js-tasklist-drag-handle draft-handle flex-self-start">
            <%= primer_octicon(:grabber, classes: "dragger-icon") %>
          </div>
          <div class="d-flex Truncate tasklist-flex-grow">
            <label class="tasklist-checkbox">
              <input
                data-action="change:tracking-block"
                data-targets="tracking-block.inputs"
                class="mr-2"
                type="checkbox"
                <%= "checked" if checked? %>
              >
              <span class="sr-only tasklist-draft user-select-none"><%= is_precache? ? content : title %></span>
            </label>

            <div data-tracking-block-draft-title class="tasklist-flex-grow d-flex" >
              <%= render Primer::Box.new(hidden: true, classes: "js-title-text-field-wrapper tasklist-textarea-container", w: :full, data: {"morpheus-ignore": "hidden"} ) do %>
                <textarea class="js-size-to-fit" aria-label="Draft title" data-action="change:tracking-block keydown:tracking-block focusout:tracking-block#draftTitleInputOutFocus" data-targets="tracking-block.inputs" rows="1"><%= title %></textarea>
              <% end %>

              <%= render Primer::Box.new(
                display: :flex,
                align_items: :flex_start,
                data: {targets: "tracking-block.renderedTitles", action: "click:tracking-block#handleDraftTitleClick", "morpheus-ignore": "hidden" },
                classes: "js-draft-title tasklist-draft-title-container", w: :full ) do %>
                <%= render(Primer::Beta::Text.new(word_break: :break_word)) { is_precache? ? content : safe_title } %>
              <% end %>
            </div>
          </div>
        <% else %>
          <div class="d-flex Truncate tasklist-draft tasklist-flex-grow py-1">
            <label class="tasklist-checkbox read-only">
              <input
                disabled
                class="mr-2 mt-1"
                type="checkbox"
                <%= "checked" if checked? %>
              >
              <div class="tasklist-draft d-flex">
                <span style="font-weight: normal"><%= is_precache? ? content : safe_title %></span>
              </div>
            </label>
          </div>
        <% end %>
      <% end %>
    <% else %>
      <% unless readonly? %>
        <% if is_precache? && parent_issue %>
          <%= repository_resource_reference_wrapper(parent_issue, check_type: :write) do |wrapper| %>
            <% wrapper.authorized do %>
              <% render(Primer::Box.new(mt: 1, mb: 1, classes: "tasklist-issue-handle js-tasklist-drag-handle flex-self-start")) do %>
                <%= primer_octicon(:grabber, classes: "dragger-icon") %>
              <% end %>
            <% end %>
          <% end %>
        <% else %>
          <div class="tasklist-issue-handle js-tasklist-drag-handle flex-self-start my-1">
            <%= primer_octicon(:grabber, classes: "dragger-icon") %>
          </div>
        <% end %>
      <% end %>
      <div class="tasklist-issue-content d-flex js-item-title flex-items-start my-1">
        <% if is_precache? %>
          <%= content %>
        <% else %>
          <% hovercard_type = pull_request? ? "pull" : "issue" %>
          <%= render Issues::IssueHrefComponent.new(
              owner: owner_display_login,
              repository: repository_name,
              issue_number: display_number,
              issue_title: title,
              issue_url: url,
              issue_state: state,
              issue_state_reason: state_reason,
              item_type: item_type,
              is_pull_request: pull_request?,
              render_context: {
                current_owner: render_context.current_owner_login,
                current_repository: render_context.current_repository_name,
                style_link_normal: true,
                truncate: false,
                issue_click_hydro_event: issue_click_hydro_event,
                hovercard_attributes: safe_data_attributes({
                  "hovercard-type" => hovercard_type,
                  "hovercard-url" => issue_path(owner_display_login, repository_name, display_number) + "/hovercard"
                })
              },
          ) %>
        <% end %>
      </div>
      <% if completion %>
        <div class="flex-shrink-0 mt-1 flex-items-start">
          <%= render partial: "issues/tracking_block_progress", locals: {
              completion: completion,
              issue: display_number,
              tasklist_block_enabled: true,
              render_mode: :tasklist_item,
              sticky: true,
            }
          %>
        </div>
      <% end %>
      <%= render Primer::Box.new(style: "flex-grow: 1") do %>
    <% end %>
  <% end %>

  <% unless draft_issue? %>
    <div class="js-label-loading-container d-flex flex-items-start mt-1 ml-1">
      <div class="Skeleton"></div>
      <div class="Skeleton"></div>
    </div>

    <%= render Primer::Box.new(display: :flex, ml: 1, mt: 1, classes: "js-label-assignee-container hide-labels flex-justify-end flex-grow-1 flex-items-start") do %>
      <% labels.each do |label| %>
        <%= render Issues::LabelComponent.new(
            id: "",
            color: label.color,
            name: label.name,
            ml: 1,
            vertical_align: :middle,
            classes: "js-item-label",
            ) do |component| %>
          <span class="css-truncate css-truncate-target width-fit v-align-middle"><%= html_label_name(label.name) %></span>
        <% end %>
      <% end %>
      <%= render Issues::LabelComponent.new(
          id: "",
          color: "#bdcda4",
          ml: 1,
          vertical_align: :middle,
          classes: "js-item-label label-template",
          ) do |component| %>
        <span class="css-truncate css-truncate-target width-fit v-align-middle"></span>
      <% end %>
      <%= render(Primer::ButtonComponent.new(
        id: "hidden-label-button-#{title}-#{tasklist_block_id}",
        aria: { label: labels.map { |label| label.name }.join(",") },
        data: { action: "click:tracking-block#toggleLabelCountPopover" },
        display: :flex,
        ml: 1,
        classes: "js-hidden-label-counter")) do %>
        <%= "+#{labels.length}" %>
      <% end %>
      <div
        style="position: relative"
        class="js-label-count-popover-container"
        hidden>
        <div class="label-count-popover-overlay" data-action="click:tracking-block#hideLabelCountPopover"></div>
        <%= render Primer::Beta::Popover.new(
              position: :absolute,
              left: true,
              right: false,
              style: "top: 16px",
        ) do |component| %>
          <% component.with_body(p: 2, caret: :top_right, display: :flex, flex_wrap: :wrap) do %>
            <% labels.each do |label| %>
              <%= render Issues::LabelComponent.new(
                  id: "",
                  color: label.color,
                  name: label.name,
                  mt: 1,
                  mb: 1,
                  mr: 1,
                  vertical_align: :middle,
                  classes: "js-item-label-in-popover",
                  hidden: true
                  ) do |component| %>
                <span class="css-truncate css-truncate-target width-fit v-align-middle"><%= html_label_name(label.name) %></span>
              <% end %>
            <% end %>
            <%= render Issues::LabelComponent.new(
                id: "",
                color: "#bdcda4",
                mt: 1,
                mb: 1,
                mr: 1,
                vertical_align: :middle,
                classes: "js-item-label-in-popover label-popover-template",
                hidden: true) do |component| %>
              <span class="css-truncate css-truncate-target width-fit v-align-middle"></span>
            <% end %>
          <% end %>
        <% end %>
      </div>
    <% end %>

    <% unless error %>
      <%= render Primer::Box.new(display: :flex, align_items: :flex_start, mt: 1) do %>
        <%= render Primer::Beta::AvatarStack.new(body_arguments: { test_selector: "assignees" }, align: :right, hidden: !assignees.any?, classes: "js-item-avatar-stack") do |c| %>
          <% assignees.each do |assignee| %>
            <% c.with_avatar(
              src: assignee.avatarUrl,
              alt: assignee.login,
              size: 20,
              data: {
                "hovercard-type": "user",
                "hovercard-url": "/users/#{assignee.login}/hovercard",
              }
            ) %>
          <% end %>
          <% c.with_avatar(
            href: "",
            src: "",
            alt: "",
            size: 20,
            classes: "avatar-template",
            data: {
              "hovercard-type": "user",
            }
            )
          %>
        <% end %>
        <% unless assignees.any?%>
          <%= render(Primer::Beta::Octicon.new(
            icon: "person",
            color: :muted,
            classes: "empty-avatar-icon",
            aria: { label: "avatars" }
          )) %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>

  <% if error %>
    <%= render Primer::Box.new(display: :flex, align_items: :center, color: :danger) do %>
      <%= render Primer::Beta::Octicon.new(icon: "alert", color: :danger, mr: 2, aria: { label: "item-error" }) %>
      <% if error == "invalid_duplicate" %>
        Duplicate
      <% elsif error == "invalid_length" %>
        Exceeds&nbsp;512&nbsp;characters
      <% end %>
    <% end %>
  <% end %>

  <% unless readonly? %>
    <% if is_precache? && parent_issue %>
      <%= repository_resource_reference_wrapper(parent_issue, check_type: :write) do |wrapper| %>
        <% wrapper.authorized do %>
          <% render(Primer::Box.new(data: { targets: "tracking-block.itemMenus" })) do %>
            <%= render Primer::Alpha::ActionMenu.new(menu_id: "tracking-block-list-item-dropdown-menu-#{uuid}-#{tasklist_block_id}", anchor_align: :end, classes: "tracking-block-list-item-dropdown-menu") do |c| %>
              <% c.with_show_button(bg: :transparent, style: "max-height:24px", size: :small, p: 1, position: :relative, icon: :"kebab-horizontal", scheme: :invisible, classes: "Truncate tracking-block-item-menu-btn", "aria-label": "#{metadata_edit_menu_label}", test_selector: "tracking-block-item-kebab", data: { targets: "tracking-block.dropdownMenu"}) %>
              <% if show_metadata_edit_menu? %>
                <% c.with_item(tag: :button, type: "button", color: :default, display: :flex, data: { action: "click:tracking-block#handleEditLabels" }) do %>
                  <%= render(
                    Primer::Box.new(
                      display: :flex,
                      align_items: :center,
                      justify_content: :space_between,)
                    ) do %>
                      <%= render(Primer::Beta::Text.new) { "Set labels" } %>
                  <%end%>
                <% end %>
                <% c.with_item(tag: :button, type: "button", color: :default, display: :flex, data: { action: "click:tracking-block#handleEditAssignees" }) do %>
                  <%= render(
                    Primer::Box.new(
                      display: :flex,
                      align_items: :center,
                      justify_content: :space_between,)
                    ) do %>
                      <%= render(Primer::Beta::Text.new) { "Set assignees" } %>
                  <%end%>
                <% end %>
                <% c.with_item(tag: :button, type: "button", color: :default, display: :flex, data: { action: "click:tracking-block#handleEditProject" }) do %>
                  <%= render(
                    Primer::Box.new(
                      display: :flex,
                      align_items: :center,
                      justify_content: :space_between,)
                    ) do %>
                      <%= render(Primer::Beta::Text.new) { "Set project" } %>
                  <%end%>
                <% end %>
              <% end %>
              <% if draft_issue? && !error %>
                <% c.with_item(tag: :button, type: "button", color: :default, display: :flex, "data-tracking-block-convert-button": "") do %>
                  <%= render(
                    Primer::Box.new(
                      display: :flex,
                      align_items: :center,
                      justify_content: :space_between,)
                    ) do %>
                      <%= render(Primer::Beta::Text.new) { "Convert to issue" } %>
                  <%end%>
                <% end %>
                <% c.with_item(tag: :button, type: "button", color: :default, data: { action: "click:tracking-block#handleMarkAsDone" }) do %>
                  <%= render(
                    Primer::Box.new(
                      display: :flex,
                      align_items: :center,
                      justify_content: :space_between,)
                    ) do %>
                      <%= render(Primer::Beta::Text.new) { "Toggle completion" } %>
                  <%end%>
                <% end %>
                <% c.with_item(tag: :button, type: "button", color: :default, display: :flex, data: { action: "click:tracking-block#handleRename" }) do %>
                  <%= render(
                    Primer::Box.new(
                      display: :flex,
                      align_items: :center,
                      justify_content: :space_between,)
                    ) do %>
                      <%= render(Primer::Beta::Text.new) { "Rename" } %>
                  <%end%>
                <% end %>

              <% end %>
              <% c.with_item(tag: :button, type: "button", scheme: :danger, display: :flex, "data-tracking-block-remove-button": "") do %>
                <%= render(
                    Primer::Box.new(
                      display: :flex,
                      align_items: :center,
                      justify_content: :space_between,)
                    ) do %>
                      <%= render(Primer::Beta::Text.new) { "Remove" } %>
                  <%end%>
              <% end %>
            <% end %>
            <% if is_precache? && repository %>
              <%= repository_reference_wrapper(repository, check_type: :push) do |wrapper| %>
                <% wrapper.authorized do %>
                  <% if show_metadata_edit_menu? %>
                    <% %w[assignees labels project].each do |menu_type| %>
                      <div class="edit-metadata-popover-container js-edit-metadata-popover-container" data-menu-type="<%= menu_type %>" hidden>
                        <div class="edit-metadata-popover-overlay" data-action="click:tracking-block#handleClosePopover"></div>
                        <%= render Primer::Beta::Popover.new(
                          position: :absolute,
                          left: true,
                          right: false,
                        ) do |component| %>
                          <% component.with_body(caret: :top_right, p: 0, display: :flex, justify_content: :center) do %>
                            <turbo-frame id="tasklist-item-<%= tasklist_block_id %>-<%= item_id %>-<%= menu_type %>" src="<%= get_turbo_src(menu_type) %>" loading="lazy" hidden>
                              <div class="px-6 py-2">
                                <%= render(Primer::Beta::Spinner.new) %>
                              </div>
                            </turbo-frame>
                          <% end %>
                        <% end %>
                      </div>
                    <% end %>
                  <% end %>
                <% end %>
              <% end %>
            <% elsif show_metadata_edit_menu? %>
              <% %w[assignees labels project].each do |menu_type| %>
                <div class="edit-metadata-popover-container js-edit-metadata-popover-container" data-menu-type="<%= menu_type %>" hidden>
                  <div class="edit-metadata-popover-overlay" data-action="click:tracking-block#handleClosePopover"></div>
                  <%= render Primer::Beta::Popover.new(
                    position: :absolute,
                    left: true,
                    right: false,
                  ) do |component| %>
                    <% component.with_body(caret: :top_right, p: 0, display: :flex, justify_content: :center) do %>
                      <turbo-frame id="tasklist-item-<%= tasklist_block_id %>-<%= item_id %>-<%= menu_type %>" src="<%= get_turbo_src(menu_type) %>" loading="lazy" hidden>
                        <div class="px-6 py-2">
                          <%= render(Primer::Beta::Spinner.new) %>
                        </div>
                      </turbo-frame>
                    <% end %>
                  <% end %>
                </div>
              <% end %>
            <% end %>
          <% end %>
        <% end %>
        <% wrapper.authorized do %>
          <% render(Primer::Box.new(
            hidden: true,
            classes: "Toast Toast--success tasklist-metadata-toast js-edit-metadata-success-toast"
          )) do %>
            <span class="Toast-icon">
              <%= render(Primer::Beta::Octicon.new(icon: "check")) %>
            </span>
            <span class="Toast-content">Successfully updated the issue's project</span>
          <% end %>
        <% end %>
        <% wrapper.authorized do %>
          <% render(Primer::Box.new(
            hidden: true,
            classes: "Toast Toast--error tasklist-metadata-toast js-edit-metadata-error-toast"
          )) do %>
            <span class="Toast-icon">
              <%= render(Primer::Beta::Octicon.new(icon: "stop")) %>
            </span>
            <span class="Toast-content">There was an error updating the issue's project</span>
          <% end %>
        <% end %>
      <% end %>
    <% else %>
      <div data-targets="tracking-block.itemMenus">
        <%= render Primer::Alpha::ActionMenu.new(menu_id: "tracking-block-list-item-dropdown-menu-#{uuid}-#{tasklist_block_id}", anchor_align: :end, classes: "tracking-block-list-item-dropdown-menu") do |c| %>
          <% c.with_show_button(bg: :transparent, style: "max-height:24px", size: :small, p: 1, m: 0, position: :relative, icon: :"kebab-horizontal", scheme: :invisible, classes: "Truncate tracking-block-item-menu-btn", "aria-label": "#{metadata_edit_menu_label}", test_selector: "tracking-block-item-kebab", data: { targets: "tracking-block.dropdownMenu"}) %>
          <% if show_metadata_edit_menu? %>
            <% c.with_item(tag: :button, type: "button", color: :default, display: :flex, data: { action: "click:tracking-block#handleEditLabels" }) do %>
              <%= render(
                Primer::Box.new(
                  display: :flex,
                  align_items: :center,
                  justify_content: :space_between,)
                ) do %>
                  <%= render(Primer::Beta::Text.new) { "Set labels" } %>
              <%end%>
            <% end %>
            <% c.with_item(tag: :button, type: "button", color: :default, display: :flex, data: { action: "click:tracking-block#handleEditAssignees" }) do %>
              <%= render(
                Primer::Box.new(
                  display: :flex,
                  align_items: :center,
                  justify_content: :space_between,)
                ) do %>
                  <%= render(Primer::Beta::Text.new) { "Set assignees" } %>
              <%end%>
            <% end %>
            <% c.with_item(tag: :button, type: "button", color: :default, display: :flex, data: { action: "click:tracking-block#handleEditProject" }) do %>
              <%= render(
                Primer::Box.new(
                  display: :flex,
                  align_items: :center,
                  justify_content: :space_between,)
                ) do %>
                  <%= render(Primer::Beta::Text.new) { "Set project" } %>
              <%end%>
            <% end %>
          <% end %>
          <% if draft_issue? && !error %>
            <% c.with_item(tag: :button, type: "button", color: :default, display: :flex, "data-tracking-block-convert-button": "") do %>
              <%= render(
                Primer::Box.new(
                  display: :flex,
                  align_items: :center,
                  justify_content: :space_between,)
                ) do %>
                  <%= render(Primer::Beta::Text.new) { "Convert to issue" } %>
              <%end%>
            <% end %>
            <% c.with_item(tag: :button, type: "button", color: :default, data: { action: "click:tracking-block#handleMarkAsDone" }) do %>
              <%= render(
                Primer::Box.new(
                  display: :flex,
                  align_items: :center,
                  justify_content: :space_between,)
                ) do %>
                  <%= render(Primer::Beta::Text.new) { "Toggle completion" } %>
              <%end%>
            <% end %>
            <% c.with_item(tag: :button, type: "button", color: :default, display: :flex, data: { action: "click:tracking-block#handleRename" }) do %>
              <%= render(
                Primer::Box.new(
                  display: :flex,
                  align_items: :center,
                  justify_content: :space_between,)
                ) do %>
                  <%= render(Primer::Beta::Text.new) { "Rename" } %>
              <%end%>
            <% end %>
          <% end %>
          <% c.with_item(tag: :button, type: "button", scheme: :danger, display: :flex, "data-tracking-block-remove-button": "") do %>
            <%= render(
                Primer::Box.new(
                  display: :flex,
                  align_items: :center,
                  justify_content: :space_between,)
                ) do %>
                  <%= render(Primer::Beta::Text.new) { "Remove" } %>
              <%end%>
          <% end %>
        <% end %>
        <% if is_precache? && repository %>
          <%= repository_reference_wrapper(repository, check_type: :push) do |wrapper| %>
            <% wrapper.authorized do %>
              <% if show_metadata_edit_menu? %>
                <% %w[assignees labels project].each do |menu_type| %>
                  <div class="edit-metadata-popover-container js-edit-metadata-popover-container" data-menu-type="<%= menu_type %>" hidden>
                    <div class="edit-metadata-popover-overlay" data-action="click:tracking-block#handleClosePopover"></div>
                    <%= render Primer::Beta::Popover.new(
                      position: :absolute,
                      left: true,
                      right: false,
                    ) do |component| %>
                      <% component.with_body(caret: :top_right, p: 0, display: :flex, justify_content: :center) do %>
                        <turbo-frame id="tasklist-item-<%= tasklist_block_id %>-<%= item_id %>-<%= menu_type %>" src="<%= get_turbo_src(menu_type) %>" loading="lazy" hidden>
                          <div class="px-6 py-2">
                            <%= render(Primer::Beta::Spinner.new) %>
                          </div>
                        </turbo-frame>
                      <% end %>
                    <% end %>
                  </div>
                <% end %>
              <% end %>
            <% end %>
          <% end %>
        <% elsif show_metadata_edit_menu? %>
          <% %w[assignees labels project].each do |menu_type| %>
            <div class="edit-metadata-popover-container js-edit-metadata-popover-container" data-menu-type="<%= menu_type %>" hidden>
              <div class="edit-metadata-popover-overlay" data-action="click:tracking-block#handleClosePopover"></div>
              <%= render Primer::Beta::Popover.new(
                position: :absolute,
                left: true,
                right: false,
              ) do |component| %>
                <% component.with_body(caret: :top_right, p: 0, display: :flex, justify_content: :center) do %>
                  <turbo-frame id="tasklist-item-<%= tasklist_block_id %>-<%= item_id %>-<%= menu_type %>" src="<%= get_turbo_src(menu_type) %>" loading="lazy" hidden>
                    <div class="px-6 py-2">
                      <%= render(Primer::Beta::Spinner.new) %>
                    </div>
                  </turbo-frame>
                <% end %>
              <% end %>
            </div>
          <% end %>
        <% end %>
      </div>
      <div hidden class="Toast Toast--success tasklist-metadata-toast js-edit-metadata-success-toast">
        <span class="Toast-icon">
          <%= render(Primer::Beta::Octicon.new(icon: "check")) %>
        </span>
        <span class="Toast-content">Successfully updated the issue's project</span>
      </div>
      <div hidden class="Toast Toast--error tasklist-metadata-toast js-edit-metadata-error-toast">
        <span class="Toast-icon">
          <%= render(Primer::Beta::Octicon.new(icon: "stop")) %>
        </span>
        <span class="Toast-content">There was an error updating the issue's project</span>
      </div>
    <% end %>
  <% end %>
</li>
