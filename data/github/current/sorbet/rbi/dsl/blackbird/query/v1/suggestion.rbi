# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Blackbird::Query::V1::Suggestion`.
# Please instead update this file by running `bin/tapioca dsl Blackbird::Query::V1::Suggestion`.

class Blackbird::Query::V1::Suggestion
  sig do
    params(
      commit_sha: T.nilable(String),
      kind: T.nilable(T.any(Symbol, Integer)),
      language_id: T.nilable(Integer),
      line_number: T.nilable(Integer),
      path: T.nilable(String),
      query: T.nilable(String),
      repository_id: T.nilable(Integer),
      repository_nwo: T.nilable(String),
      symbol: T.nilable(Blackbird::Query::V1::Symbol)
    ).void
  end
  def initialize(commit_sha: nil, kind: nil, language_id: nil, line_number: nil, path: nil, query: nil, repository_id: nil, repository_nwo: nil, symbol: nil); end

  sig { void }
  def clear_commit_sha; end

  sig { void }
  def clear_kind; end

  sig { void }
  def clear_language_id; end

  sig { void }
  def clear_line_number; end

  sig { void }
  def clear_path; end

  sig { void }
  def clear_query; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_repository_nwo; end

  sig { void }
  def clear_symbol; end

  sig { returns(String) }
  def commit_sha; end

  sig { params(value: String).void }
  def commit_sha=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def kind; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def kind=(value); end

  sig { returns(Integer) }
  def language_id; end

  sig { params(value: Integer).void }
  def language_id=(value); end

  sig { returns(Integer) }
  def line_number; end

  sig { params(value: Integer).void }
  def line_number=(value); end

  sig { returns(String) }
  def path; end

  sig { params(value: String).void }
  def path=(value); end

  sig { returns(String) }
  def query; end

  sig { params(value: String).void }
  def query=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end

  sig { returns(String) }
  def repository_nwo; end

  sig { params(value: String).void }
  def repository_nwo=(value); end

  sig { returns(T.nilable(Blackbird::Query::V1::Symbol)) }
  def symbol; end

  sig { params(value: T.nilable(Blackbird::Query::V1::Symbol)).void }
  def symbol=(value); end
end
