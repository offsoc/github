# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::RepositoryEmptyStateClick`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::RepositoryEmptyStateClick`.

class Hydro::Schemas::Github::V1::RepositoryEmptyStateClick
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      repository_context: T.nilable(T.any(Symbol, Integer)),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext),
      target: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(actor: nil, repository_context: nil, request_context: nil, target: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_repository_context; end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_target; end

  sig { returns(T.any(Symbol, Integer)) }
  def repository_context; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def repository_context=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def target; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def target=(value); end
end
