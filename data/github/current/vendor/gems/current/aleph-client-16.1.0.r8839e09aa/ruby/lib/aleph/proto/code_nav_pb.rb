# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: aleph/proto/code_nav.proto

require 'google/protobuf'

require 'google/protobuf/timestamp_pb'
require 'aleph/proto/indexing_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("aleph/proto/code_nav.proto", :syntax => :proto3) do
    add_message "github.aleph.FindSymbolsForPathRequest" do
      optional :root_id, :uint64, 1
      optional :sha, :string, 2
      optional :path, :string, 3
      optional :repository_owner, :string, 4
      optional :repository_name, :string, 5
      optional :ref, :string, 6
      optional :network_id, :uint64, 7
      optional :repository_id, :uint64, 8
    end
    add_message "github.aleph.FindSymbolsResponse" do
      repeated :tags, :message, 1, "github.aleph.Definition"
    end
    add_message "github.aleph.Definition" do
      optional :symbol, :string, 1
      optional :path, :string, 2
      optional :kind, :string, 3
      optional :line, :string, 4
      optional :row, :uint32, 5
      optional :column, :uint32, 6
    end
    add_message "github.aleph.IndexRepositoryRequest" do
      optional :root_id, :uint64, 1
      optional :ref, :string, 2
      optional :repository_owner, :string, 3
      optional :repository_name, :string, 4
      optional :network_id, :uint64, 7
      optional :repository_id, :uint64, 8
    end
    add_message "github.aleph.IndexRepositoryResponse" do
      optional :repository_id, :uint64, 1
      optional :repository_nwo, :string, 2
      optional :sha, :string, 3
    end
    add_message "github.aleph.RequestIndexRequest" do
      optional :should_index_future_pushes, :bool, 6
      optional :reason, :enum, 7, "github.aleph.RequestIndexReason"
      optional :ref, :string, 8
      oneof :indexing_scope do
        optional :repo_commit, :message, 9, "github.aleph.RepoCommit"
        optional :search_key, :string, 10
      end
    end
    add_message "github.aleph.RequestIndexResponse" do
      optional :result, :message, 2, "github.aleph.IndexingResult"
      optional :already_indexed, :bool, 1
    end
    add_message "github.aleph.GetIndexingStatusRequest" do
      oneof :indexing_scope do
        optional :repo_commit, :message, 6, "github.aleph.RepoCommit"
        optional :search_key, :string, 7
      end
    end
    add_message "github.aleph.GetIndexingStatusResponse" do
      optional :result, :message, 1, "github.aleph.IndexingResult"
    end
    add_message "github.aleph.IndexingResult" do
      optional :repo_commit, :message, 1, "github.aleph.RepoCommit"
      optional :status, :enum, 2, "github.aleph.IndexingStatus"
      optional :reason, :string, 3
      optional :enqueued_at, :message, 4, "google.protobuf.Timestamp"
      optional :started_at, :message, 5, "google.protobuf.Timestamp"
      optional :finished_at, :message, 6, "google.protobuf.Timestamp"
      optional :language, :string, 7
    end
    add_message "github.aleph.ToggleRepoNetworkRequest" do
      optional :repository_id, :uint64, 1
      optional :network_id, :uint64, 2
      optional :operation, :enum, 3, "github.aleph.ToggleRepoNetworkOperation"
    end
    add_message "github.aleph.ToggleRepoNetworkResponse" do
      optional :repository_id, :uint64, 1
      optional :network_id, :uint64, 2
      optional :enabled, :bool, 3
    end
    add_enum "github.aleph.RequestIndexReason" do
      value :UNKNOWN_INDEXING_REQUESTER, 0
      value :CODE_NAV_USER_VIEWING_CODE, 1
      value :VEA_REPO_WITH_VULNERABILITY, 2
      value :VEA_REPO_WITH_ALERT, 3
      value :VEA_REPO_USER_VIEWING_ALERTS, 4
      value :CODE_NAV_USER_VIEWING_CODE_DIFF, 5
    end
    add_enum "github.aleph.IndexingStatus" do
      value :UNKNOWN_INDEXING_STATUS, 0
      value :NOT_INDEXED, 1
      value :INDEXING_ENQUEUED, 2
      value :INDEXING_TIMED_OUT, 3
      value :INDEXING_FAILED, 4
      value :INDEXING_IN_PROGRESS, 5
      value :INDEXING_SKIPPED, 6
      value :INDEXED_SUCCESSFULLY, 7
    end
    add_enum "github.aleph.ToggleRepoNetworkOperation" do
      value :UNKNOWN, 0
      value :ENABLE, 1
      value :DISABLE, 2
    end
  end
end

module Aleph::Proto
  FindSymbolsForPathRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.FindSymbolsForPathRequest").msgclass
  FindSymbolsResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.FindSymbolsResponse").msgclass
  Definition = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.Definition").msgclass
  IndexRepositoryRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.IndexRepositoryRequest").msgclass
  IndexRepositoryResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.IndexRepositoryResponse").msgclass
  RequestIndexRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.RequestIndexRequest").msgclass
  RequestIndexResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.RequestIndexResponse").msgclass
  GetIndexingStatusRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.GetIndexingStatusRequest").msgclass
  GetIndexingStatusResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.GetIndexingStatusResponse").msgclass
  IndexingResult = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.IndexingResult").msgclass
  ToggleRepoNetworkRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.ToggleRepoNetworkRequest").msgclass
  ToggleRepoNetworkResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.ToggleRepoNetworkResponse").msgclass
  RequestIndexReason = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.RequestIndexReason").enummodule
  IndexingStatus = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.IndexingStatus").enummodule
  ToggleRepoNetworkOperation = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.ToggleRepoNetworkOperation").enummodule
end
