{
  "$schema": "http://json-schema.org/draft-04/hyper-schema",
  "id": "https://schema.github.com/v3/hook.json",
  "title": "Webook",
  "description": "Webhooks for repositories.",
  "type": "object",
  "definitions": {
    "owner": {
      "description": "The owner of the repository.",
      "type": "string"
    },
    "repo": {
      "description": "The name of the repository.",
      "type": "string"
    },
    "hook_id": {
      "description": "The ID of the hook.",
      "type": "integer"
    },
    "repository_id": {
      "description": "The ID of the repository.",
      "type": "integer",
      "example": 42
    },
    "id": {
      "description": "Unique identifier of the webhook.",
      "example": 42,
      "type": "integer"
    },
    "name": {
      "description": "The name of a valid service, use 'web' for a webhook.",
      "example": "web",
      "type": "string"
    },
    "config": {
      "description": "Key/value pairs to provide settings for this hook.",
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "events": {
      "description": "Determines what events the hook is triggered for. Default: ['push'].",
      "type": "array",
      "items": {
        "type": "string"
      },
      "example": [
        "push",
        "pull_request"
      ]
    },
    "add_events": {
      "description": "Determines a list of events to be added to the list of events that the Hook triggers for.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "remove_events": {
      "description": "Determines a list of events to be removed from the list of events that the Hook triggers for.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "active": {
      "description": "Determines whether the hook is actually triggered on pushes.",
      "type": "boolean",
      "example": true
    },
    "url": {
      "type": "string",
      "format": "uri",
      "example": "https://api.github.com/repos/octocat/Hello-World/hooks/1"
    },
    "type": {
      "type": "string"
    },
    "ping_url": {
      "type": "string",
      "format": "uri",
      "example": "https://api.github.com/repos/octocat/Hello-World/hooks/1/pings"
    },
    "deliveries_url": {
      "type": "string",
      "format": "uri",
      "example": "https://api.github.com/repos/octocat/Hello-World/hooks/1/deliveries"
    },
    "created_at": {
      "type": "string",
      "format": "date-time",
      "example": "2011-09-06T17:26:27Z"
    },
    "updated_at": {
      "type": "string",
      "format": "date-time",
      "example": "2011-09-06T20:39:23Z"
    },
    "test_url": {
      "type": "string",
      "format": "uri",
      "example": "https://api.github.com/repos/octocat/Hello-World/hooks/1/test"
    }
  },
  "links": [
    {
      "href": "/repositories/{repository_id}/hooks",
      "method": "POST",
      "rel": "create-legacy",
      "schema": {
        "properties": {
          "name": {
            "$ref": "#/definitions/name"
          },
          "config": {
            "$ref": "#/definitions/config"
          },
          "events": {
            "$ref": "#/definitions/events"
          },
          "active": {
            "$ref": "#/definitions/active"
          }
        },
        "type": [
          "object",
          "null"
        ]
      },
      "title": "Create a webhook"
    },
    {
      "href": "/repositories/{repository_id}/hooks/{hook_id}",
      "method": "PUT",
      "rel": "update-legacy",
      "schema": {
        "properties": {
          "config": {
            "$ref": "#/definitions/config"
          },
          "events": {
            "$ref": "#/definitions/events"
          },
          "add_events": {
            "$ref": "#/definitions/add_events"
          },
          "remove_events": {
            "$ref": "#/definitions/remove_events"
          },
          "active": {
            "$ref": "#/definitions/active"
          }
        },
        "type": [
          "object",
          "null"
        ]
      },
      "title": "Update a webhook"
    },
    {
      "title": "Ping a hook",
      "method": "POST",
      "rel": "ping",
      "href": "/repositories/{repository_id}/hooks/{hook_id}/pings",
      "schema": {
        "additionalProperties": false,
        "type": [
          "null",
          "object"
        ]
      }
    },
    {
      "title": "Test a push hook",
      "method": "POST",
      "rel": "test",
      "href": "/repositories/{repository_id}/hooks/{hook_id}/tests",
      "schema": {
        "additionalProperties": false,
        "type": [
          "null",
          "object"
        ]
      }
    },
    {
      "href": "/repositories/{repository_id}/hooks/{hook_id}",
      "method": "PATCH",
      "rel": "update",
      "schema": {
        "properties": {
          "config": {
            "$ref": "#/definitions/config"
          },
          "events": {
            "$ref": "#/definitions/events"
          },
          "add_events": {
            "$ref": "#/definitions/add_events"
          },
          "remove_events": {
            "$ref": "#/definitions/remove_events"
          },
          "active": {
            "$ref": "#/definitions/active"
          }
        },
        "type": [
          "object",
          "null"
        ]
      },
      "title": "Update a webhook"
    },
    {
      "href": "/repositories/{repository_id}/hooks/{hook_id}",
      "method": "POST",
      "rel": "update",
      "schema": {
        "properties": {
          "config": {
            "$ref": "#/definitions/config"
          },
          "events": {
            "$ref": "#/definitions/events"
          },
          "add_events": {
            "$ref": "#/definitions/add_events"
          },
          "remove_events": {
            "$ref": "#/definitions/remove_events"
          },
          "active": {
            "$ref": "#/definitions/active"
          }
        },
        "type": [
          "object",
          "null"
        ]
      },
      "title": "Update a webhook"
    },
    {
      "title": "Delete a hook",
      "method": "DELETE",
      "rel": "delete",
      "href": "/repositories/{repository_id}/hooks/{hook_id}",
      "schema": {
        "additionalProperties": false,
        "type": [
          "null",
          "object"
        ]
      }
    },
    {
      "title": "Create a webhook",
      "method": "POST",
      "href": "/repositories/{repository_id}/hooks",
      "rel": "create",
      "schema": {
        "properties": {
          "name": {
            "$ref": "#/definitions/name"
          },
          "config": {
            "$ref": "#/definitions/config"
          },
          "events": {
            "$ref": "#/definitions/events"
          },
          "active": {
            "$ref": "#/definitions/active"
          }
        },
        "type": [
          "object",
          "null"
        ],
        "additionalProperties": false
      }
    },
    {
      "title": "Update a webhook",
      "method": "PUT",
      "href": "/repositories/{repository_id}/hooks/{hook_id}",
      "rel": "update",
      "schema": {
        "properties": {
          "config": {
            "$ref": "#/definitions/config"
          },
          "events": {
            "$ref": "#/definitions/events"
          },
          "add_events": {
            "$ref": "#/definitions/add_events"
          },
          "remove_events": {
            "$ref": "#/definitions/remove_events"
          },
          "active": {
            "$ref": "#/definitions/active"
          }
        },
        "type": [
          "object",
          "null"
        ],
        "additionalProperties": false
      }
    },
    {
      "title": "Fetch deliveries for hook",
      "method": "GET",
      "rel": "deliveries",
      "href": "/repositories/{repository_id}/hooks/{hook_id}/deliveries",
      "schema": {
        "properties": {
          "since": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string",
                "format": "date"
              }
            ]
          },
          "until": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string",
                "format": "date"
              }
            ]
          },
          "per_page": {
            "type": "string",
            "pattern": "^\\d+$"
          },
          "status": {
            "type": "string",
            "enum": [
              "failure",
              "success"
            ]
          },
          "status_code": {
            "type": "string",
            "pattern": "^[1-5][0-9]{2}$"
          },
          "events": {
            "type": "string",
            "pattern": "^([a-z_]+(\\.[a-z_]+)?,?)+[^,]$"
          },
          "redelivery": {
            "type": "string",
            "enum": [
              "true",
              "false"
            ]
          },
          "guid": {
            "type": "string",
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          },
          "repo_id": {
            "type": "string",
            "pattern": "^\\d+$"
          },
          "cursor": {
            "type": "string",
            "pattern": "^[A-Za-z0-9_]+$"
          }
        },
        "additionalProperties": false,
        "type": [
          "null",
          "object"
        ]
      }
    },
    {
      "title": "Fetch delivery for hook",
      "method": "GET",
      "rel": "delivery",
      "href": "/repositories/{repository_id}/hooks/{hook_id}/deliveries/{delivery_id}",
      "schema": {
        "properties": {
          "include_payload": {
            "type": "string",
            "enum": [
              "true",
              "false"
            ]
          }
        },
        "additionalProperties": false,
        "type": [
          "null",
          "object"
        ]
      }
    },
    {
      "title": "Create redelivery for hook",
      "method": "POST",
      "href": "/repositories/{repository_id}/hooks/{hook_id}/deliveries/{delivery_id}/attempts",
      "rel": "redelivery",
      "schema": {
        "properties": {
        },
        "type": [
          "object",
          "null"
        ],
        "additionalProperties": false
      }
    }
  ],
  "properties": {
    "id": {
      "$ref": "#/definitions/id"
    },
    "url": {
      "$ref": "#/definitions/url"
    },
    "type": {
      "$ref": "#/definitions/type"
    },
    "name": {
      "$ref": "#/definitions/name"
    },
    "active": {
      "$ref": "#/definitions/active"
    },
    "events": {
      "$ref": "#/definitions/events"
    },
    "config": {
      "type": "object",
      "properties": {
      },
      "additionalProperties": true,
      "required": [

      ]
    },
    "ping_url": {
      "$ref": "#/definitions/ping_url"
    },
    "deliveries_url": {
      "$ref": "#/definitions/deliveries_url"
    },
    "created_at": {
      "$ref": "#/definitions/created_at"
    },
    "updated_at": {
      "$ref": "#/definitions/updated_at"
    },
    "last_response": {
      "$ref": "https://schema.github.com/v3/hook-response.json#"
    },
    "test_url": {
      "$ref": "#/definitions/test_url"
    }
  },
  "additionalProperties": false,
  "required": [
    "id",
    "url",
    "type",
    "name",
    "active",
    "events",
    "config",
    "ping_url",
    "deliveries_url",
    "created_at",
    "updated_at",
    "last_response",
    "test_url"
  ]
}
