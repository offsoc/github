<%
  tags ||= []
  fragment_layout = false unless defined? fragment_layout
  react_mode = false unless defined? react_mode

  if !fragment_layout
    view = Issues::IndexView.new :query => query, :issues => issues,
                                :repo => current_repository, :pulls_only => pulls_only,
                                :current_user => current_user,
                                :cap_view_filter => cap_view_filter
  end

  page_title = defined?(document_title_override) ? document_title_override : view.title
  page_selected_link = defined?(document_link_override) ? document_link_override : view.selected_link

  page_info \
    title: page_title,
    container_xl: true,
    selected_link: page_selected_link,
    stafftools: gh_stafftools_repository_issues_path(current_repository),
    breadcrumb: pulls_only ? "Pull requests" : "Issues",
    canonical_url: request.original_url
%>

<% if fragment_layout %>
  <% content_for :head do %>
    <meta name="voltron-timing" value="<view-proxy-timing></view-proxy-timing>">
  <% end %>
<% end %>

<% if react_mode %>
  <viewproxy-fragment id="content"></viewproxy-fragment>
<% else %>
  <%= render layout: "issues/issues" do %>
    <% if fragment_layout %>
      <viewproxy-fragment id="content"></viewproxy-fragment>
    <% else %>
      <%= render partial: "issues/issues_index_main_section", locals: {
        view: view,
        tags: tags,
        render_issue_react_opt_in: render_issue_react_opt_in,
        issues: issues,
        pulls_only: pulls_only,
        fragment_layout: fragment_layout,
        query: query,
        milestones_count: milestones_count,
        labels_count: labels_count,
        open_count: open_count,
        closed_count: closed_count,
        query_error: query_error,
        } %>
    <% end %>
  <% end %>
<% end %>
