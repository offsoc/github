# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: actionpackages_service.proto

require 'google/protobuf'

require_relative 'pkg_entities'
require_relative 'container_entities'
require_relative 'actionpackages_entities'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("actionpackages_service.proto", :syntax => :proto3) do
    add_message "github.registry.metadata.v1.pkg.ResolveActionPackageVersionsRequest" do
      repeated :actions, :message, 1, "github.registry.metadata.v1.pkg.ActionReference"
      optional :workflow_repo_id, :int64, 2
      optional :anonymous_request, :bool, 3
    end
    add_message "github.registry.metadata.v1.pkg.ActionReference" do
      optional :namespace, :string, 1
      optional :name, :string, 2
      optional :semver_ref, :string, 3
    end
    add_message "github.registry.metadata.v1.pkg.ResolveActionPackageVersionsResponse" do
      repeated :results, :message, 1, "github.registry.metadata.v1.pkg.ResolveActionPackageVersionResult"
    end
    add_message "github.registry.metadata.v1.pkg.ResolveActionPackageVersionResult" do
      optional :action_ref, :message, 1, "github.registry.metadata.v1.pkg.ActionReference"
      optional :outcome, :enum, 2, "github.registry.metadata.v1.pkg.ActionPackageResolutionOutcome"
      optional :resolved_package_version, :message, 3, "github.registry.metadata.v1.pkg.ResolvedActionPackageVersion"
    end
    add_message "github.registry.metadata.v1.pkg.ResolvedActionPackageVersion" do
      optional :package_id, :int64, 1
      optional :semantic_version_tag, :string, 2
      optional :package_visibility, :enum, 3, "github.registry.metadata.v1.pkg.Visibility"
    end
    add_message "github.registry.metadata.v1.pkg.GetActionPackageResolutionSettingsRequest" do
      optional :package_id, :int64, 1
    end
    add_message "github.registry.metadata.v1.pkg.GetActionPackageResolutionSettingsResponse" do
      optional :is_action_package, :bool, 1
      optional :settings, :message, 2, "github.registry.metadata.v1.pkg.ActionPackageResolutionSettings"
    end
    add_message "github.registry.metadata.v1.pkg.ActionPackageResolutionSettings" do
      optional :activated, :bool, 1
      optional :sharing_policy, :enum, 2, "github.registry.metadata.v1.pkg.ActionPackageSharingPolicy"
    end
    add_message "github.registry.metadata.v1.pkg.UpdateActionPackageSharingPolicyRequest" do
      optional :package_id, :int64, 1
      optional :sharing_policy, :enum, 2, "github.registry.metadata.v1.pkg.ActionPackageSharingPolicy"
    end
    add_message "github.registry.metadata.v1.pkg.UpdateActionPackageSharingPolicyResponse" do
    end
    add_message "github.registry.metadata.v1.pkg.ActivateActionPackageResolutionRequest" do
      optional :package_id, :int64, 1
    end
    add_message "github.registry.metadata.v1.pkg.ActivateActionPackageResolutionResponse" do
    end
    add_message "github.registry.metadata.v1.pkg.GetActionPackageVersionsMetadataRequest" do
      repeated :versions, :message, 1, "github.registry.metadata.v1.pkg.ActionReference"
    end
    add_message "github.registry.metadata.v1.pkg.GetActionPackageVersionsMetadataResponse" do
      repeated :results, :message, 1, "github.registry.metadata.v1.pkg.MetadataWrapper"
    end
    add_message "github.registry.metadata.v1.pkg.MetadataWrapper" do
      optional :found, :bool, 1
      optional :metadata, :message, 2, "github.registry.metadata.v1.container.ContainerMetadata"
    end
    add_enum "github.registry.metadata.v1.pkg.ActionPackageResolutionOutcome" do
      value :UNKNOWN_OUTCOME, 0
      value :PACKAGE_NOT_FOUND, 1
      value :VERSION_NOT_FOUND, 2
      value :NAMESPACE_RETIRED, 3
      value :ACCESS_DENIED, 4
      value :VERSION_RESOLVED, 5
    end
  end
end

module Proto
  module RegistryMetadata
    module V1
      module ActionPackages
        ResolveActionPackageVersionsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.pkg.ResolveActionPackageVersionsRequest").msgclass
        ActionReference = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.pkg.ActionReference").msgclass
        ResolveActionPackageVersionsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.pkg.ResolveActionPackageVersionsResponse").msgclass
        ResolveActionPackageVersionResult = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.pkg.ResolveActionPackageVersionResult").msgclass
        ResolvedActionPackageVersion = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.pkg.ResolvedActionPackageVersion").msgclass
        GetActionPackageResolutionSettingsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.pkg.GetActionPackageResolutionSettingsRequest").msgclass
        GetActionPackageResolutionSettingsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.pkg.GetActionPackageResolutionSettingsResponse").msgclass
        ActionPackageResolutionSettings = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.pkg.ActionPackageResolutionSettings").msgclass
        UpdateActionPackageSharingPolicyRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.pkg.UpdateActionPackageSharingPolicyRequest").msgclass
        UpdateActionPackageSharingPolicyResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.pkg.UpdateActionPackageSharingPolicyResponse").msgclass
        ActivateActionPackageResolutionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.pkg.ActivateActionPackageResolutionRequest").msgclass
        ActivateActionPackageResolutionResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.pkg.ActivateActionPackageResolutionResponse").msgclass
        GetActionPackageVersionsMetadataRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.pkg.GetActionPackageVersionsMetadataRequest").msgclass
        GetActionPackageVersionsMetadataResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.pkg.GetActionPackageVersionsMetadataResponse").msgclass
        MetadataWrapper = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.pkg.MetadataWrapper").msgclass
        ActionPackageResolutionOutcome = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.pkg.ActionPackageResolutionOutcome").enummodule
      end
    end
  end
end
