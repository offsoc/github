# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::Entities::IssueTemplate`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::Entities::IssueTemplate`.

class Hydro::Schemas::Github::V1::Entities::IssueTemplate
  sig do
    params(
      assignee: T.nilable(T::Boolean),
      is_issue_form: T.nilable(T::Boolean),
      issue_type: T.nilable(T::Boolean),
      label: T.nilable(T::Boolean),
      name_hash: T.nilable(String),
      project: T.nilable(T::Boolean),
      project_count: T.nilable(Integer),
      title: T.nilable(T::Boolean)
    ).void
  end
  def initialize(assignee: nil, is_issue_form: nil, issue_type: nil, label: nil, name_hash: nil, project: nil, project_count: nil, title: nil); end

  sig { returns(T::Boolean) }
  def assignee; end

  sig { params(value: T::Boolean).void }
  def assignee=(value); end

  sig { void }
  def clear_assignee; end

  sig { void }
  def clear_is_issue_form; end

  sig { void }
  def clear_issue_type; end

  sig { void }
  def clear_label; end

  sig { void }
  def clear_name_hash; end

  sig { void }
  def clear_project; end

  sig { void }
  def clear_project_count; end

  sig { void }
  def clear_title; end

  sig { returns(T::Boolean) }
  def is_issue_form; end

  sig { params(value: T::Boolean).void }
  def is_issue_form=(value); end

  sig { returns(T::Boolean) }
  def issue_type; end

  sig { params(value: T::Boolean).void }
  def issue_type=(value); end

  sig { returns(T::Boolean) }
  def label; end

  sig { params(value: T::Boolean).void }
  def label=(value); end

  sig { returns(String) }
  def name_hash; end

  sig { params(value: String).void }
  def name_hash=(value); end

  sig { returns(T::Boolean) }
  def project; end

  sig { params(value: T::Boolean).void }
  def project=(value); end

  sig { returns(Integer) }
  def project_count; end

  sig { params(value: Integer).void }
  def project_count=(value); end

  sig { returns(T::Boolean) }
  def title; end

  sig { params(value: T::Boolean).void }
  def title=(value); end
end
