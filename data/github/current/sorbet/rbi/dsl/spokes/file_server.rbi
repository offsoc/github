# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Spokes::FileServer`.
# Please instead update this file by running `bin/tapioca dsl Spokes::FileServer`.

class Spokes::FileServer
  sig do
    params(
      cacheLocation: T.nilable(String),
      datacenter: T.nilable(String),
      embargoed: T.nilable(T::Boolean),
      evacuating: T.nilable(T::Boolean),
      fqdn: T.nilable(String),
      hddStorage: T.nilable(T::Boolean),
      ip: T.nilable(String),
      name: T.nilable(String),
      online: T.nilable(T::Boolean),
      overloaded: T.nilable(T::Boolean),
      rack: T.nilable(String),
      unreachable: T.nilable(T::Boolean),
      voting: T.nilable(T::Boolean)
    ).void
  end
  def initialize(cacheLocation: nil, datacenter: nil, embargoed: nil, evacuating: nil, fqdn: nil, hddStorage: nil, ip: nil, name: nil, online: nil, overloaded: nil, rack: nil, unreachable: nil, voting: nil); end

  sig { returns(String) }
  def cacheLocation; end

  sig { params(value: String).void }
  def cacheLocation=(value); end

  sig { void }
  def clear_cacheLocation; end

  sig { void }
  def clear_datacenter; end

  sig { void }
  def clear_embargoed; end

  sig { void }
  def clear_evacuating; end

  sig { void }
  def clear_fqdn; end

  sig { void }
  def clear_hddStorage; end

  sig { void }
  def clear_ip; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_online; end

  sig { void }
  def clear_overloaded; end

  sig { void }
  def clear_rack; end

  sig { void }
  def clear_unreachable; end

  sig { void }
  def clear_voting; end

  sig { returns(String) }
  def datacenter; end

  sig { params(value: String).void }
  def datacenter=(value); end

  sig { returns(T::Boolean) }
  def embargoed; end

  sig { params(value: T::Boolean).void }
  def embargoed=(value); end

  sig { returns(T::Boolean) }
  def evacuating; end

  sig { params(value: T::Boolean).void }
  def evacuating=(value); end

  sig { returns(String) }
  def fqdn; end

  sig { params(value: String).void }
  def fqdn=(value); end

  sig { returns(T::Boolean) }
  def hddStorage; end

  sig { params(value: T::Boolean).void }
  def hddStorage=(value); end

  sig { returns(String) }
  def ip; end

  sig { params(value: String).void }
  def ip=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(T::Boolean) }
  def online; end

  sig { params(value: T::Boolean).void }
  def online=(value); end

  sig { returns(T::Boolean) }
  def overloaded; end

  sig { params(value: T::Boolean).void }
  def overloaded=(value); end

  sig { returns(String) }
  def rack; end

  sig { params(value: String).void }
  def rack=(value); end

  sig { returns(T::Boolean) }
  def unreachable; end

  sig { params(value: T::Boolean).void }
  def unreachable=(value); end

  sig { returns(T::Boolean) }
  def voting; end

  sig { params(value: T::Boolean).void }
  def voting=(value); end
end
