# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Copilot::V2::CopilotForBusinessSeatUncancelledByStaff`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Copilot::V2::CopilotForBusinessSeatUncancelledByStaff`.

class Hydro::Schemas::Github::Copilot::V2::CopilotForBusinessSeatUncancelledByStaff
  sig do
    params(
      copilot_for_business_details: T.nilable(T.any(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessDetail], T::Array[Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessDetail])),
      other_cfb_organization_analytics_tracking_ids: T.nilable(String),
      owner_details: T.nilable(Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessOwnerDetails),
      seat: T.nilable(Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessSeat),
      staff_actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      user: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(copilot_for_business_details: T.unsafe(nil), other_cfb_organization_analytics_tracking_ids: nil, owner_details: nil, seat: nil, staff_actor: nil, user: nil); end

  sig { void }
  def clear_copilot_for_business_details; end

  sig { void }
  def clear_other_cfb_organization_analytics_tracking_ids; end

  sig { void }
  def clear_owner_details; end

  sig { void }
  def clear_seat; end

  sig { void }
  def clear_staff_actor; end

  sig { void }
  def clear_user; end

  sig do
    returns(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessDetail])
  end
  def copilot_for_business_details; end

  sig do
    params(
      value: Google::Protobuf::RepeatedField[Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessDetail]
    ).void
  end
  def copilot_for_business_details=(value); end

  sig { returns(String) }
  def other_cfb_organization_analytics_tracking_ids; end

  sig { params(value: String).void }
  def other_cfb_organization_analytics_tracking_ids=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessOwnerDetails)) }
  def owner_details; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessOwnerDetails)).void }
  def owner_details=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessSeat)) }
  def seat; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessSeat)).void }
  def seat=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def staff_actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def staff_actor=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def user; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def user=(value); end
end
