<%# erblint:counter DeprecatedComponentsCounter 1 %>
<%# rubocop:disable Lint/InstanceVariable %>
<%= form_for @target, :url => form_url do |f| %>
  <%= f.fields_for :hook_attributes do |hook_form| %>
    <%= hook_form.text_group "Hook name", :name, :value => @target.hook.name , :error => error_for(@target.hook, :name) %>

    <%= render :partial => 'businesses/pre_receive_hook_targets/environments', :locals => {:view => view} %>

    <%= hook_form.hidden_field :environment_id, :value => @target.hook.environment_id %>

    <dl class="form-group">
      <dt>
        <label for="file-filter-field">Script</label>
        <p class="note">
          Choose the repository containing and path executing the pre-receive hook.
        </p>
      </dt>

      <dd>
        <%= render partial: "businesses/pre_receive_hook_targets/repositories", locals: { view: view } %>
        <%= hook_form.hidden_field :repository_id, value: @target.hook.repository_id, id: "pre_receive_hook_target_hook_attributes_repository_id" %>

        <p class="path-separator">/</p>
        <div class="script-group">
          <% url = file_list_enterprise_pre_receive_hook_targets_path(GitHub.global_business) %>
          <div class="js-file-results" data-contents-url="<%= url %>">
            <%= render :partial => 'businesses/pre_receive_hook_targets/files', :locals => {:view => view} %>
          </div>
          <%= hook_form.hidden_field :script, :value => @target.hook.script %>
        </div>
      </dd>
    </dl>

  <% end %>

  <%= render :partial => 'businesses/pre_receive_hook_targets/enforcement_buttons', :locals => {:f => f, :target => @target} %>

  <%= render Primer::ButtonComponent.new(scheme: :primary, classes: "form-action-spacious", type: :submit, "data-disable-with": "Saving changesâ€¦", "aria-label": "Save changes") do %>
    <%= button_text %>
  <% end %>

<% end %>
