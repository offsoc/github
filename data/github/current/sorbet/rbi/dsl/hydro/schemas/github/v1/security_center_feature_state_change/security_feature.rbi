# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::SecurityCenterFeatureStateChange::SecurityFeature`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::SecurityCenterFeatureStateChange::SecurityFeature`.

class Hydro::Schemas::Github::V1::SecurityCenterFeatureStateChange::SecurityFeature
  sig do
    params(
      feature_supported: T.nilable(T::Boolean),
      scanning_date: T.nilable(Google::Protobuf::Timestamp),
      scanning_status: T.nilable(T.any(Symbol, Integer)),
      severity_counts: T.nilable(Hydro::Schemas::Github::V1::SecurityCenterFeatureStateChange::SeverityCounts)
    ).void
  end
  def initialize(feature_supported: nil, scanning_date: nil, scanning_status: nil, severity_counts: nil); end

  sig { void }
  def clear_feature_supported; end

  sig { void }
  def clear_scanning_date; end

  sig { void }
  def clear_scanning_status; end

  sig { void }
  def clear_severity_counts; end

  sig { returns(T::Boolean) }
  def feature_supported; end

  sig { params(value: T::Boolean).void }
  def feature_supported=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def scanning_date; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def scanning_date=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def scanning_status; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def scanning_status=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::SecurityCenterFeatureStateChange::SeverityCounts)) }
  def severity_counts; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::SecurityCenterFeatureStateChange::SeverityCounts)).void }
  def severity_counts=(value); end
end
