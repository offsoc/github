{"version":3,"file":"actions-metrics-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/actions-metrics/common/components/MetricsTabs.tsx","ui/packages/actions-metrics/App.tsx","ui/packages/actions-metrics/common/services/services.ts","ui/packages/actions-metrics/common/components/MetricsRouteHelper.tsx","ui/packages/actions-metrics/common/observables/observable.ts","ui/packages/actions-metrics/common/observables/observer-base.tsx","ui/packages/actions-metrics/common/observables/Observer.tsx","ui/packages/actions-metrics/common/resources/labels.ts","ui/packages/actions-metrics/common/components/MetricsError.tsx","ui/packages/actions-metrics/common/models/enums.ts","ui/packages/actions-metrics/common/components/MetricsDateRangeSelector.tsx","ui/packages/actions-metrics/common/constants/controller_paths.ts","ui/packages/actions-metrics/common/components/MetricsSideNav.tsx","ui/packages/actions-metrics/common/constants/constants.ts","ui/packages/actions-metrics/common/utils/utils.ts","ui/packages/actions-metrics/common/components/MetricsDateRangeDescription.tsx","ui/packages/actions-metrics/common/components/MetricsLayout.tsx","ui/packages/actions-metrics/common/observables/ConditionalChildren.tsx","ui/packages/actions-metrics/common/components/MetricsTable.tsx","ui/packages/actions-metrics/common/utils/filter-utils.ts","ui/packages/actions-metrics/common/components/MetricsFilter.tsx","ui/packages/actions-metrics/common/components/MetricsZeroData.tsx","ui/packages/actions-metrics/common/resources/zero-data.ts","ui/packages/actions-metrics/common/components/MetricsExport.tsx","ui/packages/actions-metrics/common/components/MetricsHeroCards.tsx","ui/packages/actions-metrics/common/components/MetricsLayoutTable.tsx","ui/packages/actions-metrics/common/services/metrics-service.ts","ui/packages/actions-metrics/common/components/MetricsCells.tsx","ui/packages/actions-metrics/common/utils/filter-providers.ts","ui/packages/actions-metrics/common/constants/filters.ts","ui/packages/actions-metrics/views/usage/utils/filter-providers.ts","ui/packages/actions-metrics/views/usage/services/usage-service.ts","ui/packages/actions-metrics/views/usage/components/Usage.tsx","ui/packages/actions-metrics/routes/OrgUsage.tsx","ui/packages/actions-metrics/common/services/analytics-service.ts","ui/packages/actions-metrics/common/services/cache-service.ts","ui/packages/actions-metrics/common/services/data-service.ts","ui/packages/actions-metrics/common/services/error-service.ts","ui/packages/actions-metrics/common/services/payload-service.ts","ui/packages/actions-metrics/common/services/filter-service.ts","ui/packages/actions-metrics/common/services/routing-service.ts","ui/packages/actions-metrics/common/services/service-registrations.ts","ui/packages/actions-metrics/views/performance/utils/filter-providers.ts","ui/packages/actions-metrics/views/performance/services/performance-service.ts","ui/packages/actions-metrics/views/performance/components/Performance.tsx","ui/packages/actions-metrics/routes/OrgPerformance.tsx","ui/packages/actions-metrics/routes/RepoPerformance.tsx","ui/packages/actions-metrics/routes/RepoUsage.tsx","ui/packages/actions-metrics/actions-metrics.ts","ui/packages/fuzzy-score/fuzzy-filter.ts","ui/packages/fuzzy-score/fuzzy-score.ts","ui/packages/is-hash-navigation/is-hash-navigation.ts","ui/packages/test-id-props/test-id-props.ts","ui/packages/use-navigate/use-navigate.ts","ui/packages/verified-fetch/verified-fetch.ts","ui/packages/data-card/Counter.tsx","ui/packages/data-card/Description.tsx","ui/packages/data-card/Shared.tsx","ui/packages/data-card/List.tsx","ui/packages/data-card/ProgressBar.tsx","ui/packages/data-card/NoData.tsx","ui/packages/data-card/DataCard.tsx","ui/packages/github-avatar/GitHubAvatar.tsx","ui/packages/insights-sidenav/InsightsSidenav.tsx","ui/packages/react-core/JsonRoute.tsx","ui/packages/safe-html/SafeHTML.tsx","ui/packages/skeleton/LoadingSkeleton.tsx"],"sourcesContent":["import {Box, TabNav} from '@primer/react'\nimport type {IMetricsService} from '../services/metrics-service'\nimport type {MetricsTab, MetricsViewReadOnly} from '../models/models'\nimport {Observer} from '../observables/Observer'\nimport type {Icon, IconProps} from '@primer/octicons-react'\nimport type {IAnalyticsService} from '../services/analytics-service'\nimport {Services} from '../services/services'\n\nexport interface MetricsTabsProps {\n  children: React.ReactNode\n  metricsService: IMetricsService\n  panelId?: string\n}\nexport const MetricsTabs = (props: MetricsTabsProps) => {\n  const analyticsService = Services.get<IAnalyticsService>('IAnalyticsService')\n  const metricsService = props.metricsService\n  const tabs = metricsService.getTabs()\n  const view = metricsService.getMetricsView()\n  return (\n    <div>\n      <Observer view={view} tabs={tabs}>\n        {(obs: {view: MetricsViewReadOnly; tabs: MetricsTab[]}) => {\n          return (\n            <TabNav>\n              {obs.tabs.map((tab, index) => {\n                const preview = metricsService.setTab(tab.value, {preview: true})\n                const url = metricsService.getViewUrl(preview)\n                return (\n                  <MetricsTabButton\n                    key={tab.value}\n                    href={url}\n                    value={tab.value}\n                    displayValue={tab.displayValue}\n                    icon={tab.icon}\n                    panelId={props.panelId}\n                    onClick={value => {\n                      analyticsService.logEvent('tab.click', 'MetricsTabs', {\n                        tab: tab.value,\n                        previous: JSON.stringify(obs.view),\n                      })\n\n                      metricsService.setTab(value)\n                    }}\n                    selected={obs.view.tab === tab.value || (index === 0 && !obs.view.tab)}\n                  />\n                )\n              })}\n            </TabNav>\n          )\n        }}\n      </Observer>\n      <MetricsTabPanel id={props.panelId}>{props.children}</MetricsTabPanel>\n    </div>\n  )\n}\n\nexport interface MetricsTabButtonProps {\n  displayValue?: string\n  href?: string\n  icon: Icon\n  onClick: (value: string) => void\n  panelId?: string\n  selected: boolean\n  value: string\n}\nexport const MetricsTabButton = (props: MetricsTabButtonProps) => {\n  const TabIcon = iconHelper(props.icon)\n  return (\n    <TabNav.Link\n      className=\"d-flex flex-nowrap flex-items-center\"\n      id={props.value}\n      href={props.href}\n      aria-controls={props.panelId ?? 'metrics-tab-panel'}\n      selected={props.selected}\n      onClick={event => {\n        props.onClick(props.value)\n        event.preventDefault()\n        event.defaultPrevented = true\n      }}\n      role=\"tab\"\n      sx={{\n        cursor: props.selected ? 'default' : 'pointer',\n        whiteSpace: 'nowrap',\n        color: props.selected ? undefined : 'fg.muted',\n        ':hover': props.selected\n          ? undefined\n          : {\n              color: 'fg.default',\n            },\n      }}\n    >\n      <TabIcon className=\"mr-2\" />\n      {props.displayValue ?? props.value}\n    </TabNav.Link>\n  )\n}\n\nexport interface MetricsTabPanelProps {\n  id?: string\n  children: React.ReactNode\n}\nexport const MetricsTabPanel = (props: MetricsTabPanelProps) => {\n  return (\n    <Box id={props.id ?? 'metrics-tab-panel'} role=\"tabpanel\" sx={{pt: 3}}>\n      {props.children}\n    </Box>\n  )\n}\n\nconst iconHelper = (icon: Icon): React.FC<IconProps & {children?: React.ReactNode}> => {\n  return icon\n}\n\ntry{ MetricsTabs.displayName ||= 'MetricsTabs' } catch {}\ntry{ MetricsTabButton.displayName ||= 'MetricsTabButton' } catch {}\ntry{ TabIcon.displayName ||= 'TabIcon' } catch {}\ntry{ MetricsTabPanel.displayName ||= 'MetricsTabPanel' } catch {}","import type React from 'react'\n\n/**\n * The App component is used to render content which should be present on _all_ routes within this app\n */\nexport function App(props: {children?: React.ReactNode}) {\n  return <>{props.children}</>\n}\n\ntry{ App.displayName ||= 'App' } catch {}","export abstract class Services {\n  private static container: {[key: string]: ICachedService | undefined} = {}\n\n  public static add = (key: string, serviceFactory: ServiceFactory, override = false): void => {\n    if (!key) {\n      throw new Error('key is required for service registration')\n    }\n\n    if (!serviceFactory) {\n      throw new Error('serviceFactory is required for service registration')\n    }\n\n    if (Services.container[key]) {\n      // service already exists\n\n      const current = Services.get(key)\n      const replacement = getService(serviceFactory)\n      const currentIsMock = isMockService(current)\n      const replacementIsMock = isMockService(replacement)\n\n      // container contains real service replaced by mock service: replace\n      if ((replacementIsMock && !currentIsMock) || override) {\n        Services.container[key] = {service: replacement, factory: serviceFactory}\n        return\n      }\n\n      // container contains real service replaced by real service: error\n      if (!replacementIsMock && !currentIsMock && !override) {\n        throw new Error(`Service '${key}' already exists`)\n      }\n    }\n    this.container[key] = {service: undefined, factory: serviceFactory}\n  }\n\n  public static get = <T extends IService>(key: string): T => {\n    const cachedService = Services.container[key]\n    if (cachedService) {\n      if (!cachedService.service) {\n        cachedService.service = getService(cachedService.factory)\n      }\n      return cachedService.service as T\n    }\n\n    throw new Error(`Service \"${key}\" not found - make sure it is registered in service-registrations`)\n  }\n\n  public static instantiated = (key: string): boolean => {\n    const cachedService = Services.container[key]\n    return !!cachedService && !!cachedService.service\n  }\n\n  public static registered = (key: string): boolean => {\n    const cachedService = Services.container[key]\n    return !!cachedService\n  }\n}\n\nexport type ServiceFactory = (new () => IService) | (() => IService)\n\nexport interface IService {}\n\nexport abstract class ServiceBase implements IService {\n  public static serviceId: string\n\n  public static serviceFactory: ServiceFactory\n\n  public static registerService = (serviceId: string, serviceFactory: ServiceFactory): void => {\n    Services.add(serviceId, serviceFactory)\n  }\n}\n\ninterface ICachedService {\n  service?: IService\n  factory: ServiceFactory\n}\n\nexport interface IMockService extends IService {\n  isMock: boolean\n}\n\nexport abstract class MockServiceBase extends ServiceBase implements IMockService {\n  public get isMock(): boolean {\n    return true\n  }\n\n  public static override registerService = (serviceId: string, serviceFactory: ServiceFactory): void => {\n    super.registerService(serviceId, serviceFactory)\n  }\n}\n\nconst isMockService = (service: IService): service is IMockService => {\n  return (service as IMockService).isMock === true\n}\n\nconst getService = (factory: ServiceFactory): IService => {\n  let service: IService\n  try {\n    service = new (factory as new () => IService)()\n  } catch (e) {\n    service = (factory as () => IService)()\n  }\n\n  return service\n}\n","import {useNavigate, useSearchParams} from '@github-ui/use-navigate'\nimport {useEffect} from 'react'\nimport type {IMetricsService} from '../services/metrics-service'\nimport type {IRoutingService} from '../services/routing-service'\nimport {Services} from '../services/services'\n\nexport interface MetricsRouteHelperProps {\n  metricsService: IMetricsService\n}\n\n// this component wires up the routing service since we should not call hooks outside components\nexport function MetricsRouteHelper(props: MetricsRouteHelperProps) {\n  const [searchParams] = useSearchParams()\n  const routingService = Services.get<IRoutingService>('IRoutingService')\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    props.metricsService?.setMetricsViewFromSearchParams()\n    routingService?.init(navigate)\n    return () => {}\n  }, [searchParams, props.metricsService, routingService, navigate])\n\n  return <></>\n}\n\ntry{ MetricsRouteHelper.displayName ||= 'MetricsRouteHelper' } catch {}","import React from 'react'\n\n/**\n * Core client interface for an IObservable collection keyed by K with values of type V.\n */\nexport interface IObservable<T, TAction extends string = string> {\n  /**\n   * subscribe should be called when the caller wants to be notified about changes to\n   * the underlying data. The caller should only call once per delegate, but will\n   * get notified N times (once for each call to subscribe).\n   *\n   * @param observer - This is the delegate to be notified when the underlying data changes.\n   *\n   * @param action - Optional argument that allows the consumer to supply a action\n   *  with the delegate. If the action is supplied only those actions are delievered,\n   *  while all actions are delivered is no action is supplied.\n   *\n   * @returns observer parameter, unchanged\n   */\n  subscribe: (observer: (value: T, action?: TAction) => void, action?: TAction) => (value: T, action?: TAction) => void\n\n  /**\n   * unsubscribe should be called with a previously supplied delegate to subscribe.\n   * The client MUST call unsubscribe once for every call to subscribe with the\n   * appropriate delegates.\n   *\n   * @param observer - This is the delegate that was previously registered with subscribe.\n   *\n   * @param action - Optional argument that defines the action that was subscribed to.\n   */\n  unsubscribe: (observer: (value: T, action?: TAction) => void, action?: TAction) => void\n}\n\n/**\n * IObservableEvent<T> encapsulates the data used to send a notification.\n */\ninterface IObservableEvent<T, TAction extends string = string> {\n  // An IObservableEvent should ALWAYS have the _action value ...\n  action: TAction\n\n  // along with any other properties that are valid for the event type\n  value: T\n}\n\n/**\n * An Observable implementation that will track a set of subscribers and supports\n * notifications when the underlying system changes.\n */\nexport class Observable<T, TAction extends string = string> implements IObservable<T, TAction> {\n  private observers: {[action: string]: Array<(value: T, action: TAction) => void>} = {}\n  private events?: Array<IObservableEvent<T, TAction>>\n  protected subscriberCount = 0\n\n  /**\n   * notify is used to send the event to all subscribers that have signed up for this events\n   * action. This means they have subscribed directly to this action, or to all actions.\n   * If the caller requested the event be persisted the event will be fired in order to new\n   * subscribers as well when they subscribe.\n   *\n   * @param value - The object that represents the event data.\n   *\n   * @param action - The action that happened on this observable to produce the event.\n   *\n   * @param persistEvent - Optional value that determines if all future subscribers will\n   *  recieve the event as well.\n   */\n  public notify(value: T, action: TAction, persistEvent?: boolean): void {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const executeObserverAction = (observer: (value: T, action: TAction) => void, value: T, action: TAction) => {\n      try {\n        observer(value, action)\n      } catch (ex) {\n        if (ex && typeof ErrorEvent === 'function') {\n          window.dispatchEvent(\n            new ErrorEvent('error', {\n              error: ex,\n              filename: 'Observable.ts',\n              message: (ex as Error).message,\n            }),\n          )\n        }\n      }\n    }\n\n    // NOTE: We need to make a copy of the observers since they may change during notification.\n    if (this.observers[action]) {\n      const observers = this.observers[action].slice()\n      for (let observerIndex = 0; observerIndex < observers.length; observerIndex++) {\n        executeObserverAction(observers[observerIndex]!, value, action)\n      }\n    }\n\n    if (this.observers['']) {\n      const observers = this.observers[''].slice()\n      for (let observerIndex = 0; observerIndex < observers.length; observerIndex++) {\n        executeObserverAction(observers[observerIndex]!, value, action)\n      }\n    }\n\n    // If the caller wants this event sent to all subscribers, even future ones, track it.\n    if (persistEvent) {\n      if (!this.events) {\n        this.events = []\n      }\n\n      this.events.push({action, value})\n    }\n  }\n\n  public subscribe(\n    observer: (value: T, action: TAction) => void,\n    action?: string,\n  ): (value: T, action?: TAction) => void {\n    action = action || ''\n    if (!this.observers[action]) {\n      this.observers[action] = []\n    }\n\n    this.observers[action]!.push(observer)\n    this.subscriberCount++\n\n    // Fire the callback for any events that were persisted when they were sent.\n    if (this.events) {\n      for (const event of this.events) {\n        if (!action || event.action === action) {\n          observer(event.value, event.action)\n        }\n      }\n    }\n\n    return observer as (value: T, action?: TAction) => void\n  }\n\n  public unsubscribe(observer: (value: T, action: TAction) => void, action?: string): void {\n    action = action || ''\n    if (this.observers[action]) {\n      const observerIndex = this.observers[action]!.indexOf(observer)\n      if (observerIndex >= 0) {\n        this.observers[action]!.splice(observerIndex, 1)\n        this.subscriberCount--\n      }\n    }\n  }\n}\n\nexport type IObservableLikeValue<T> = IObservableValue<T> | T\nexport type IObservableLikeArray<T> = IObservableArray<T> | IReadonlyObservableArray<T> | T[]\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace ObservableLike {\n  /**\n   * Check whether the specified object is an observable or not.\n   *\n   * @param observableLike Object to perform observable check.\n   */\n  export function isObservable<T>(observableLike: IObservable<T> | unknown): observableLike is IObservable<T> {\n    return !!observableLike && typeof (observableLike as IObservable<T>).subscribe === 'function'\n  }\n\n  /**\n   * Gets the value of the specified observable like. If not observable, returns the passed argument.\n   *\n   * @param observableLike Object to get the value.\n   * @returns Observable value or the observable like itself.\n   */\n  export function getValue<T>(observableLike: IObservableLikeValue<T>): T\n\n  /**\n   * Gets the value of the specified observable like. If not observable, returns the passed argument.\n   *\n   * @param observableLikeArray Object to get the value.\n   * @returns Observable value or the observable like itself.\n   */\n  export function getValue<T>(observableArrayLike: IObservableLikeArray<T>): T[]\n\n  export function getValue<T>(observableLike: IObservableLikeValue<T> | IObservableLikeArray<T>): T | T[] {\n    if (isObservable(observableLike)) {\n      return (observableLike as unknown as IObservableValue<T>).value\n    }\n\n    return observableLike as T\n  }\n\n  /**\n   * Subscribes to the specified object if it is an observable.\n   *\n   * @param observableLike Object to subscribe its value change if applicable.\n   * @param observer Delegate to be executed when the underlying data changes.\n   * @param action Optional argument that allows the consumer to supply a action\n   *  with the delegate. If the action is supplied only those actions are delievered,\n   *  while all actions are delivered is no action is supplied.\n   * @returns observer\n   */\n  export function subscribe<T>(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    observableLike: IObservable<T> | any,\n    observer: (value: T, action: string) => void,\n    action?: string,\n  ): (value: T, action: string | undefined) => void {\n    if (isObservable(observableLike)) {\n      return (observableLike as IObservable<T>).subscribe(\n        observer as (value: T, action?: string | undefined) => void,\n        action,\n      )\n    }\n\n    return () => {}\n  }\n\n  /**\n   * Unsubscribes from the specified object if it is an observable.\n   *\n   * @param observableLike Object to subscribe its value change if applicable.\n   * @param observer Delegate to be executed when the underlying data changes.\n   * @param action Optional argument that allows the consumer to supply a action\n   *  with the delegate. If the action is supplied only those actions are delievered,\n   *  while all actions are delivered is no action is supplied.\n   */\n  export function unsubscribe<T>(\n    observableLike: IObservable<T> | unknown,\n    observer: (value: T, action: string) => void,\n    action?: string,\n  ): void {\n    if (isObservable(observableLike)) {\n      ;(observableLike as IObservable<T>).unsubscribe(observer as (value: T, action?: string) => void, action)\n    }\n  }\n}\n\n/**\n * An IReadonlyObservableValue<T> gives a readonly view of an IObservableValue<T>.\n *\n * The normal pattern to follow is for a parent object/component creates an IObservableValue<T>\n * and pass it to dependants as an IReadonlyObservableValue<T>. This prevents the callee\n * from changing the value and treating the relationship as a two way binding. Observables\n * are intended to be used as a one way binding where the object owner uses the observable to\n * notify others about changes to the value without giving them control over the value.\n */\nexport interface IReadonlyObservableValue<T> extends IObservable<T> {\n  /**\n   * Read access to the value being observed.\n   */\n  readonly value: T\n}\n\n/**\n * Given a type, returns the type that it is observing.\n */\nexport type ObservedValue<T> = T extends IReadonlyObservableValue<infer U> ? U : T\n\n/**\n * An IObservableValue<T> tracks an instance of type T and allows consumers\n * be notified with the value is changed.\n *\n * EventTypes:\n *  set - T\n */\nexport interface IObservableValue<T> extends IReadonlyObservableValue<T> {\n  /**\n   * This is the current value of the observable.\n   */\n  value: T\n}\n\nexport class ObservableValue<T> extends Observable<T> implements IObservableValue<T> {\n  private v: T\n\n  constructor(value: T) {\n    super()\n    this.v = value\n  }\n\n  public get value(): T {\n    return this.v\n  }\n\n  public set value(value: T) {\n    this.v = value\n    this.notify(this.v, 'set')\n  }\n}\n\n/**\n * When an action occurs on an IObservableObject the event should take the form\n * of an IObjectProperty<T> where T is the type of the value being stored.\n */\nexport interface IObjectProperty<T> {\n  key: string\n  value?: T\n}\n\n/**\n * An Observable collection is used to track a set of objects by name and offer notifications\n * for consumers when the collection has changed.\n *\n * EventTypes:\n *  add - ICollectionEvent<V>\n */\nexport interface IObservableObject<V> extends IObservable<IObjectProperty<V>> {\n  /**\n   * Adding an object to the collection will notify all observers of the collection\n   * and keep track of the objects.\n   *\n   * @param objectName - name of the object be registered.\n   *\n   * @param objectDefinition - details of the object being registered\n   */\n  add: (objectName: string, objectDefinition: V) => void\n\n  /**\n   * get is used to retrieve the objectDefinition for named object.\n   *\n   * @param objectName - name of the object to get the definition.\n   */\n  get: (objectName: string) => V | undefined\n\n  /**\n   * Adds an object to the collection, overwriting the old\n   *\n   * @param objectName - name of the object be registered.\n   *\n   * @param objectDefinition - details of the object being registered\n   */\n  set: (objectName: string, objectDefinition: V) => void\n\n  /**\n   * A read-only collection of the existing objects.\n   */\n  keys: () => string[]\n}\n\n/**\n * An ObservableObject can be used to key a named collection of properties\n * and offer an observable endpoint.\n */\nexport class ObservableObject<V> extends Observable<IObjectProperty<V>> implements IObservableObject<V> {\n  private objects: {[objectName: string]: V} = {}\n\n  public add(objectName: string, objectDefinition: V): void {\n    if (!this.objects.hasOwnProperty(objectName)) {\n      this.objects[objectName] = objectDefinition\n      this.notify({key: objectName, value: objectDefinition}, 'add')\n    }\n  }\n\n  public get(objectName: string): V | undefined {\n    return this.objects[objectName]\n  }\n\n  public set(objectName: string, objectDefinition: V): void {\n    if (this.objects.hasOwnProperty(objectName)) {\n      this.objects[objectName] = objectDefinition\n      this.notify({key: objectName, value: objectDefinition}, 'replace')\n    } else {\n      this.add(objectName, objectDefinition)\n    }\n  }\n\n  public keys(): string[] {\n    return Object.keys(this.objects)\n  }\n}\n\n/**\n * List of actions that are notified on the ObservableArray.\n */\nexport type ObservableArrayAction = 'change' | 'push' | 'pop' | 'splice' | 'removeAll'\n\n/**\n * All ObservableArray events will have an action associated with them.\n */\nexport interface IObservableArrayEventArgs<T> {\n  /**\n   * Items added to ObservableArray.\n   */\n  addedItems?: T[]\n\n  /**\n   * Items that were changed.\n   */\n  changedItems?: T[]\n\n  /**\n   * The index that the operation started.\n   */\n  index: number\n\n  /**\n   * Items removed from ObservableArray.\n   */\n  removedItems?: T[]\n}\n\n/**\n * An Observable array is used to track an array of items and offer notifications\n * for consumers when the array has changed.\n *\n * EventTypes:\n *  change - { changedItems, index }\n *  push - {addedItems, index }\n *  pop - { index, removedItems}\n *  removeAll - {index, removedItems }\n *  splice - { addedItems, index, removedItems }\n */\nexport interface IReadonlyObservableArray<T> extends IObservable<IObservableArrayEventArgs<T>, ObservableArrayAction> {\n  /**\n   * Gets the number of the items in the ObservableArray.\n   */\n  readonly length: number\n\n  /**\n   * Gets all the items in the ObservableArray.\n   */\n  readonly value: T[]\n}\n\n/**\n * An Observable array is used to track an array of items and offer notifications\n * for consumers when the array has changed.\n *\n * EventTypes:\n *  change - { changedItems, index }\n *  push - {addedItems, index }\n *  pop - { index, removedItems}\n *  removeAll - {index, removedItems }\n *  splice - { addedItems, index, removedItems }\n */\nexport interface IObservableArray<T> extends IReadonlyObservableArray<T> {\n  /**\n   * Change can be used to update a set of items in the array. Using change instead\n   * of splice allows any observers to potentially optimize the updates to only the\n   * affected data.\n   *\n   * @param start Zero based index of the first item to change.\n   * @param items The set of items to change.\n   */\n  change: (start: number, ...items: T[]) => number\n\n  /**\n   * The length property can be used to determine the number of elements in\n   * the observable array.\n   */\n  readonly length: number\n\n  /**\n   * Appends new elements to an array, and returns the new length of the array.\n   *\n   * NOTE: Use of ...array places all items onto the stack which can cause the\n   * browser to run out of stack space if you pass more than 32K/64K items (browser dependent).\n   * Use \"value\" or add items in batches in this case.\n   *\n   * @param items - new elements of the ObservableArray.\n   *\n   * @returns - number of the newly inserted items.\n   */\n  push: (...items: T[]) => number\n\n  /**\n   * Removes the last element from an array and returns it.\n   *\n   * @returns - removed element or undefined if ObservableArray has no items.\n   */\n  pop: () => T | undefined\n\n  /**\n   * Remove all items from the array that match the specified filter\n   *\n   * @param filter - Delegate which returns true for each item to remove. If undefined, all items in the array are removed.\n   */\n  removeAll: (filter?: (item: T) => boolean) => void\n\n  /**\n   * Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n   *\n   * NOTE: Use of ...array places all items onto the stack which can cause the\n   * browser to run out of stack space if you pass more than 32K/64K items (browser dependent).\n   * Use \"value\" or add items in batches in this case.\n   *\n   * @param start - Zero-based location in the array from which to start removing elements.\n   *\n   * @param deleteCount - Number of elements to remove.\n   *\n   * @param items - Elements to insert into the array in place of the deleted elements.\n   *\n   * @returns - deleted elements.\n   */\n  splice: (start: number, deleteCount: number, ...items: T[]) => T[]\n\n  /**\n   * Gets all the items in ObservableArray.\n   */\n  value: T[]\n}\n\n/**\n * EventTypes:\n *  change - { changedItems, index }\n *  push - {addedItems, index }\n *  pop - { index, removedItems}\n *  removeAll - {index, removedItems }\n *  splice - { addedItems, index, removedItems }\n */\nexport class ObservableArray<T>\n  extends Observable<IObservableArrayEventArgs<T>, ObservableArrayAction>\n  implements IObservableArray<T>\n{\n  protected internalItems: T[]\n\n  constructor(items: T[] = []) {\n    super()\n    this.internalItems = [...items] || []\n  }\n\n  public change(start: number, ...items: T[]): number {\n    this.internalItems.splice(start, items.length, ...items)\n    this.notify({index: start, changedItems: items}, 'change')\n\n    return items.length\n  }\n\n  public changeOrderedBatch(batch: Array<{start: number; items?: T[]}>): number {\n    const changedItems: T[] = []\n    for (const el of batch) {\n      if (el.items !== undefined && el.items.length) {\n        this.internalItems.splice(el.start, el.items.length, ...el.items)\n        changedItems.push(...el.items)\n      }\n    }\n\n    this.notify({index: this.getMinItemIndexByBatch(batch), changedItems}, 'change')\n    return batch.reduce((acc, val) => (acc += val.items ? val.items.length : 0), 0)\n  }\n\n  public get length(): number {\n    return this.internalItems.length\n  }\n\n  public push(...items: T[]): number {\n    if (items.length) {\n      const index = this.internalItems.length\n      this.internalItems.push(...items)\n      this.notify({addedItems: items, index}, 'push')\n    }\n\n    return items.length\n  }\n\n  public pop(): T | undefined {\n    const item = this.internalItems.pop()\n    if (item !== undefined) {\n      this.notify({index: this.internalItems.length, removedItems: [item]}, 'pop')\n    }\n\n    return item\n  }\n\n  public removeAll(filter?: (item: T) => boolean): T[] {\n    const removedItems: T[] = []\n    const remainingItems: T[] = []\n\n    for (const item of this.internalItems) {\n      if (!filter || filter(item)) {\n        removedItems.push(item)\n      } else {\n        remainingItems.push(item)\n      }\n    }\n\n    if (removedItems.length > 0) {\n      this.internalItems.splice(0, this.internalItems.length)\n      for (const item of remainingItems) {\n        this.internalItems.push(item)\n      }\n      this.notify({index: 0, removedItems}, 'removeAll')\n    }\n\n    return removedItems\n  }\n\n  public splice(start: number, deleteCount: number, ...itemsToAdd: T[]): T[] {\n    const removedItems = this.internalItems.splice(start, deleteCount, ...itemsToAdd)\n    this.notify({addedItems: itemsToAdd, index: start, removedItems}, 'splice')\n\n    return removedItems\n  }\n\n  public spliceOrderedBatch(batch: Array<{start: number; deleteCount: number; itemsToAdd?: T[]}>): T[] {\n    const added: T[] = []\n    const removed: T[] = []\n    for (const el of batch) {\n      let removedItems\n      if (el.itemsToAdd !== undefined && el.itemsToAdd.length) {\n        removedItems = this.internalItems.splice(el.start, el.deleteCount, ...el.itemsToAdd)\n        added.push(...el.itemsToAdd)\n      } else {\n        removedItems = this.internalItems.splice(el.start, el.deleteCount)\n      }\n\n      removed.push(...removedItems)\n    }\n\n    this.notify({addedItems: added, index: this.getMinItemIndexByBatch(batch), removedItems: removed}, 'splice')\n\n    return removed\n  }\n\n  public get value(): T[] {\n    return this.internalItems\n  }\n\n  public set value(items: T[]) {\n    // Preserve the original array, but avoid the \"...\" arguments issue with splice/push\n    let removedItems: T[]\n    if (items === this.internalItems) {\n      // Special case for someone passing us the same internal array that we are already using\n      // We don't need to modify the internalItems. The \"removedItems\" in the event is\n      // not going to be accurate in the case that someone modified this internal array\n      // outside of the observable -- we won't know the prior state in that case.\n      removedItems = this.internalItems\n    } else {\n      // Clear out the existing items\n      removedItems = this.internalItems.slice()\n      this.internalItems.length = 0\n\n      // Add all new items\n      if (items.length) {\n        for (const item of items) {\n          this.internalItems.push(item)\n        }\n      }\n    }\n    this.notify({addedItems: items, index: 0, removedItems}, 'splice')\n  }\n\n  private getMinItemIndexByBatch(batch: Array<{start: number; items?: T[]}>): number {\n    const itemChangesStartedAt = batch.reduce((minObject, currentObject) => {\n      if (currentObject.start < minObject.start) {\n        return currentObject\n      }\n      return minObject\n    })\n\n    return itemChangesStartedAt.start\n  }\n}\n\ninterface IObservableCollectionInternalEntry<T, TInput> {\n  items: T[]\n  observable?: IReadonlyObservableArray<TInput>\n  subscriber?: (args: IObservableArrayEventArgs<TInput>) => void\n  transformItems?: (input: TInput) => T | undefined\n}\n\n/**\n * An Observable Collection takes an arry of arrays or observable arrays\n * and flattens out the items into a single readonly observable array\n * (with all the underlying array values aggregated together).\n *\n * This handles subscribing to any underlying observable arrays and\n * updating the aggregate array as appropriate (and notifying subscribers)\n */\nexport class ObservableCollection<T>\n  extends Observable<IObservableArrayEventArgs<T>, ObservableArrayAction>\n  implements IReadonlyObservableArray<T>\n{\n  public get length(): number {\n    if (!this.subscriberCount) {\n      this.recalculateItems()\n    }\n\n    return this.items.length\n  }\n\n  public get value(): T[] {\n    if (!this.subscriberCount) {\n      this.recalculateItems()\n    }\n\n    return this.items\n  }\n  private collections: Array<IObservableCollectionInternalEntry<T, unknown>> = []\n  private items: T[] = []\n\n  /**\n   * Adds an additional collection of items to the end of the array\n   *\n   * @param collection Array of items or an observable array of items\n   * @params transformItems Delegate to process each item that is pulled from the given collection\n   */\n  public push<TInput = T>(\n    collection: TInput[] | IReadonlyObservableArray<TInput>,\n    transformItems?: (input: TInput) => T | undefined,\n  ): void {\n    let collectionEntry: IObservableCollectionInternalEntry<T, TInput> | undefined\n    let pushedItems: TInput[] | undefined\n\n    if (ObservableLike.isObservable(collection)) {\n      const observable = collection as IReadonlyObservableArray<TInput>\n      const subscriber = this.getSubscriber<TInput>(this.collections.length, transformItems)\n      collectionEntry = {observable, subscriber, transformItems, items: []}\n      pushedItems = observable.value\n\n      if (this.subscriberCount) {\n        ObservableLike.subscribe(collectionEntry.observable, subscriber)\n      }\n    } else if ((collection as TInput[]).length) {\n      pushedItems = collection as TInput[]\n      collectionEntry = {items: this.transformItems(pushedItems, transformItems)}\n    }\n\n    if (collectionEntry) {\n      this.collections.push(collectionEntry as IObservableCollectionInternalEntry<T, unknown>)\n\n      if (this.subscriberCount && pushedItems!.length) {\n        const newItems = this.transformItems(pushedItems, transformItems)\n        for (const newItem of newItems) {\n          this.items.push(newItem)\n        }\n        this.notify({addedItems: newItems, index: this.items.length - newItems.length}, 'push')\n      }\n    }\n  }\n\n  public override subscribe(\n    observer: (value: IObservableArrayEventArgs<T>, action: ObservableArrayAction) => void,\n    action?: ObservableArrayAction,\n  ): (value: IObservableArrayEventArgs<T>, action?: ObservableArrayAction) => void {\n    const subscription = super.subscribe(observer, action)\n    if (this.subscriberCount === 1) {\n      this.recalculateItems()\n\n      for (const collection of this.collections) {\n        if (collection.subscriber) {\n          collection.observable!.subscribe(collection.subscriber)\n        }\n      }\n    }\n\n    return subscription\n  }\n\n  public override unsubscribe(\n    observer: (value: IObservableArrayEventArgs<T>, action: ObservableArrayAction) => void,\n    action?: ObservableArrayAction,\n  ): void {\n    super.unsubscribe(observer, action)\n    if (this.subscriberCount === 0) {\n      for (const collection of this.collections) {\n        if (collection.subscriber) {\n          collection.observable!.unsubscribe(collection.subscriber)\n        }\n      }\n    }\n  }\n\n  /**\n   * Recalculate items. This is necessary while we work without subscribers, as we're not listening to changes in observable inner collections.\n   * Once the first subscriber joins, items collection will be in sync real-time.\n   */\n  private recalculateItems() {\n    this.items.length = 0\n    for (const collection of this.collections) {\n      if (collection.observable) {\n        collection.items = this.transformItems(collection.observable.value, collection.transformItems)\n      }\n      for (const item of collection.items) {\n        this.items.push(item)\n      }\n    }\n  }\n\n  private transformItems<TInput>(\n    inputItems: TInput[] | undefined,\n    transformInput: {(input: TInput): T | undefined} | undefined,\n  ): T[] {\n    let transformedItems: T[]\n    if (!inputItems) {\n      transformedItems = []\n    } else if (transformInput) {\n      transformedItems = []\n      for (const inputItem of inputItems) {\n        const transformedItem = transformInput(inputItem)\n        if (transformedItem !== undefined) {\n          transformedItems.push(transformedItem)\n        }\n      }\n    } else {\n      transformedItems = inputItems as unknown[] as T[]\n    }\n    return transformedItems\n  }\n\n  private getSubscriber<TInput>(\n    collectionIndex: number,\n    transformInput?: (input: TInput) => T | undefined,\n  ): (args: IObservableArrayEventArgs<TInput>) => void {\n    return (args: IObservableArrayEventArgs<TInput>) => {\n      // Find the index in our aggregate array\n      let index = args.index\n      for (let i = 0; i < collectionIndex; i++) {\n        index += this.collections[i]!.items.length\n      }\n\n      if (args.changedItems) {\n        // Handle change event\n        const changedItems = this.transformItems(args.changedItems, transformInput)\n        this.items.splice(index, args.changedItems.length, ...changedItems)\n        this.notify({changedItems, index}, 'change')\n      } else {\n        // Handle splice, push, pop events\n        const removedItems = this.transformItems(args.removedItems, transformInput)\n        const addedItems = this.transformItems(args.addedItems, transformInput)\n\n        // We would normally just call splice here with 3 arguments, but splice takes a \"...\" argument for added items\n        // which passes array elements on the stack and is therefore limited (to 32K/64K on some browsers)\n\n        // Remove the removedItems first\n        this.items.splice(index, removedItems.length)\n\n        // Slice-off any remaining items past where we want to insert\n        const endItems = this.items.splice(index)\n\n        // Push the addedItems followed by the endItems that we just removed\n        for (const item of addedItems) {\n          this.items.push(item)\n        }\n        for (const item of endItems) {\n          this.items.push(item)\n        }\n\n        this.notify({removedItems, addedItems, index}, 'splice')\n      }\n    }\n  }\n}\n\n/**\n * Indicates an object that has a ready property to let consumers know when the object is ready.\n */\nexport interface IReadyable {\n  /**\n   * An observable which lets the consumer know when the object is ready\n   */\n  ready: IObservableValue<boolean>\n}\n\n/**\n * Indicates an object that has a ready property to let consumers know when the object is ready.\n */\nexport interface IReadonlyReadyable {\n  /**\n   * An observable which lets the consumer know when the object is ready\n   */\n  ready: IReadonlyObservableValue<boolean>\n}\n\n/**\n * An observable array which lets consumers know when its initial items have been populated and it is ready to use.\n */\nexport interface IReadyableReadonlyObservableArray<T> extends IReadonlyObservableArray<T>, IReadonlyReadyable {}\n\n/**\n * An observable array which lets consumers know when its initial items have been populated and it is ready to use.\n */\nexport interface IReadyableObservableArray<T> extends IObservableArray<T>, IReadyable {}\n\nexport class ReadyableObservableArray<T> extends ObservableArray<T> implements IReadyableObservableArray<T> {\n  public readonly ready: ObservableValue<boolean>\n  constructor(items: T[] = [], ready = false) {\n    super(items)\n    this.ready = new ObservableValue(ready)\n  }\n}\n\n/**\n * React Hooks extension that allows the consumer to track Observables with a useState like\n * hooks API.\n *\n * @param initialState Initial value for the state, or a function that will resolve the value\n * the when the value is initialized.\n */\nexport function useObservable<T>(\n  initialState: T | (() => T),\n): [ObservableValue<T>, React.Dispatch<React.SetStateAction<T>>] {\n  const [underlyingState] = React.useState<T>(initialState)\n\n  const [observable] = React.useState<ObservableValue<T>>(() => new ObservableValue<T>(underlyingState))\n  const updateState = (updatedState: T | ((prevState: T) => T)) => {\n    if (typeof updatedState === 'function') {\n      observable.value = (updatedState as (prevState: T) => T)(observable.value)\n    } else {\n      observable.value = updatedState\n    }\n  }\n\n  return [observable, updateState]\n}\n\n/**\n * React Hooks extension that allows the consmer to track ObservableArrays with a useState like\n * hooks API.\n *\n * @param initialState Initial value for the state, or a function that will resolve the value\n * the when the value is initialized.\n */\nexport function useObservableArray<T>(\n  initialState: T[] | (() => T[]),\n): [IObservableArray<T>, React.Dispatch<React.SetStateAction<T[]>>] {\n  const [underlyingState] = React.useState<T[]>(initialState)\n\n  const reactState = React.useState<ObservableArray<T>>(new ObservableArray<T>(underlyingState))\n  const updateState = (updatedState: T[] | ((prevState: T[]) => T[])) => {\n    if (typeof updatedState === 'function') {\n      reactState[0].value = (updatedState as (prevState: T[]) => T[])(reactState[0].value)\n    } else {\n      reactState[0].value = updatedState\n    }\n  }\n\n  return [reactState[0], updateState]\n}\n\n/**\n * React Hooks extension that provides a constant reference to an ObservableValue which will update\n * based on another observable.\n *\n * @remarks\n * The subscription will be safely unsubscribed any time:\n * - The source observable points to a new object\n * - The callback dependencies array changes\n * - The component is unmounted\n *\n * @param sourceObservable\n * @param getDerivedValue\n * @param callbackDependencies\n */\nexport function useDerivedObservable<TSource, T>(\n  sourceObservable: IObservableValue<TSource>,\n  getDerivedValue: (source: TSource) => T,\n  callbackDependencies: unknown[],\n): IReadonlyObservableValue<T> {\n  const initialValue = getDerivedValue(sourceObservable.value)\n  const [observable, setValue] = useObservable<T>(initialValue)\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const getDerivedValueCallback = React.useCallback(getDerivedValue, callbackDependencies)\n\n  // Update the observable's value when the source observable changes its value\n  useSubscription(\n    sourceObservable,\n    (newValue: TSource) => {\n      const derivedValue = getDerivedValueCallback(newValue)\n      setValue(derivedValue)\n    },\n    callbackDependencies,\n  )\n\n  return observable\n}\n\n/**\n * React Hooks extension that fires a callback whenever the provided observable changes.\n * Note that when an observable array is provided, the callback will be called with the entire array rather\n * than with the usual observable array subscription args.\n *\n * @remarks\n * The subscription will be safely unsubscribed any time:\n * - The source observable points to a new object\n * - The callback dependencies array changes\n * - The component is unmounted\n *\n * @param sourceObservable\n * @param callbackFn\n * @param callbackDependencies\n */\nexport function useSubscription<T>(\n  sourceObservable: IObservableValue<T>,\n  callbackFn: (value: T) => void,\n  callbackDependencies?: unknown[],\n): void\nexport function useSubscription<T>(\n  sourceObservable: IObservableArray<T>,\n  callbackFn: (value: T[]) => void,\n  callbackDependencies?: unknown[],\n): void\nexport function useSubscription<T>(\n  sourceObservable: IObservableValue<T> | IObservableArray<T>,\n  callbackFn: (value: T) => void,\n  callbackDependencies: unknown[] = [],\n): void {\n  const isFirstRenderFinished = React.useRef(false)\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const callback = React.useCallback(callbackFn, callbackDependencies)\n\n  // Call the callback when the source observable points to a new object, but not on the first render with the first observable\n  React.useEffect(() => {\n    if (!isFirstRenderFinished.current) {\n      isFirstRenderFinished.current = true\n      return\n    }\n    callback(sourceObservable.value as T)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sourceObservable])\n\n  // Call the callback when the source observable changes its value\n  React.useEffect(() => {\n    const doCallback = () => callback(sourceObservable.value as T)\n    sourceObservable.subscribe(doCallback)\n    return () => sourceObservable.unsubscribe(doCallback)\n  }, [sourceObservable, callback])\n}\n\n/**\n * React Hooks extension that debounces the firing of a callback whenever the provided observable changes.\n * Note that when an observable array is provided, the callback will be called with the entire array rather\n * than with the usual observable array subscription args.\n *\n * @remarks\n * The subscription will be safely unsubscribed any time:\n * - The source observable points to a new object\n * - The timeout value changes\n * - The callback dependencies array changes\n * - The component is unmounted\n *\n * @param sourceObservable\n * @param callbackFn\n * @param callbackDependencies\n */\nexport function useDebouncedSubscription<T>(\n  sourceObservable: IObservableValue<T>,\n  debounceMs: number,\n  callbackFn: (value: T) => void,\n  callbackDependencies?: unknown[],\n): void\nexport function useDebouncedSubscription<T>(\n  sourceObservable: IObservableArray<T>,\n  debounceMs: number,\n  callbackFn: (value: T[]) => void,\n  callbackDependencies?: unknown[],\n): void\nexport function useDebouncedSubscription<T>(\n  sourceObservable: IObservableValue<T> | IObservableArray<T>,\n  debounceMs: number,\n  callbackFn: (value: T) => void,\n  callbackDependencies: unknown[] = [],\n): void {\n  const timeoutRef = React.useRef<number | null>(null)\n\n  useSubscription(\n    sourceObservable as IObservableValue<T>,\n    (value: T) => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current)\n      }\n      timeoutRef.current = setTimeout(() => {\n        callbackFn(value)\n        timeoutRef.current = null\n      }, debounceMs) as unknown as number\n    },\n    [debounceMs, ...callbackDependencies],\n  )\n}\n","// eslint-disable-next-line filenames/match-regex\nimport {Component, Children, cloneElement, type DetailedReactHTMLElement} from 'react'\nimport type {\n  IObservableValue,\n  IObservable,\n  IObservableLikeArray,\n  IObservableLikeValue,\n  IReadonlyObservableArray,\n  IReadonlyObservableValue,\n} from './observable'\nimport {ObservableLike} from './observable'\n\ntype ArrayMember<T> = T extends Array<infer U> ? U : never\n\nexport type ObservedArgs<T> = T extends IObservable<infer U> ? U : never\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport interface IObservableExpression<T = any> {\n  /**\n   * Using an observableExpression you can sign up for an action instead of\n   * all actions which is the default.\n   */\n  action?: string\n\n  /**\n   * filter function that determines whether or not an action should affect\n   * the state of the Observer.\n   *\n   * @param value The observable value that is being supplied for the action.\n   * @param action The action that has taken place.\n   *\n   * @returns true if the Observer should setState, false if the change should\n   * be ignored.\n   */\n  filter?: (value: ObservedArgs<T>, action: string) => boolean\n\n  /**\n   * The observableValue is the value being observed. When actions are fired,\n   * the filter is called and the results determine whether the component\n   * changes state.\n   */\n  observableValue: T | IObservableLikeValue<T> | IObservableLikeArray<ArrayMember<T>>\n}\n\n/** Extracts the observed type from an IReadonlyObservableValue or IReadonlyObservableArray */\ntype SimpleObserved<T> = T extends IReadonlyObservableArray<infer U>\n  ? U[]\n  : T extends IReadonlyObservableValue<infer V>\n    ? V\n    : T\n\n/** Extracts the observed type from an IObservableExpression or IReadonlyObservableValue or IReadonlyObservableArray */\nexport type Observed<T> = T extends IObservableExpression<infer W> ? SimpleObserved<W> : SimpleObserved<T>\n\n/** Converts all observable members of T to their observed type */\nexport type ObservedMembers<T> = {\n  [P in keyof Omit<T, 'children'>]: Observed<T[P]>\n}\n\n/** The child of an <Observer> element. */\nexport type ObserverChildFunction<TObservables> = (props: ObservedMembers<TObservables>) => React.ReactNode\n\nexport type IObserverProps<TObservables> = TObservables & {\n  /**\n   * Called whenever componentDidUpdate is run by the Observer\n   * (after subscriptions have been updated).\n   * Useful in situations where you need to be notified when Observer updates\n   * happen, but don't want to insert a new component just for the lifecycle methods.\n   */\n  onUpdate?: () => void\n\n  /**\n   * All props that should be passed down to the child element.\n   * These properties are IObservableLikeValues, meaning that if they are observable,\n   * we will attempt to subscribe to their changes.\n   */\n  children: ObserverChildFunction<TObservables>\n}\n\nexport interface IUncheckedObserverProps {\n  /**\n   * Called whenever componentDidUpdate is run by the Observer\n   * (after subscriptions have been updated).\n   * Useful in situations where you need to be notified when Observer updates\n   * happen, but don't want to insert a new component just for the lifecycle methods.\n   */\n  onUpdate?: () => void\n\n  /**\n   * All props that should be passed down to the child element.\n   * These properties are IObservableLikeValues, meaning that if they are observable,\n   * we will attempt to subscribe to their changes.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [propName: string]: IObservableLikeValue<any> | IObservableExpression\n}\n\nexport interface IObserverState<TProps> {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  values: {[propName: string]: any}\n  oldProps: Partial<TProps>\n}\n\ninterface ISubscribable<TProps> {\n  subscribe(propName: string, props: TProps): void\n  unsubscribe(propName: string, props: TProps): void\n  hasSubscription(propName: string): boolean\n}\n\ninterface ISubscription {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  delegate: (value: any, action?: string) => void\n  action: string | undefined\n}\n\n/**\n * Handles subscription to properties that are IObservableValues, so that components don't have to handle on their own.\n *\n * Usage:\n *\n * <Observer myObservableValue={observableValue}>\n *     <MyComponent myObservableValue='' />\n * </Observer>\n *\n * Your component will get re-rendered with the new value of myObservableValue whenever that value changes.\n * Additionally, any additional props set on the Observer will also get passed down.\n */\nexport class ObserverBase<TProps extends {onUpdate?: () => void}> extends Component<TProps, IObserverState<TProps>> {\n  public static getDerivedStateFromProps<TProps>(\n    props: Readonly<TProps>,\n    state: Readonly<IObserverState<TProps>>,\n  ): Partial<IObserverState<TProps>> {\n    const newState = updateSubscriptionsAndState(state.oldProps, props, state)\n    if (newState != null) {\n      return {...newState, oldProps: props}\n    }\n\n    return {oldProps: props}\n  }\n\n  private subscribedProps: TProps\n  private subscriptions: {[propName: string]: ISubscription}\n\n  constructor(props: Readonly<TProps>) {\n    super(props)\n\n    this.subscriptions = {}\n\n    // Initialize the state with the initial value of the observable.\n    const state: IObserverState<TProps> = {values: {}, oldProps: {}}\n    for (const propName in props) {\n      state.values[propName] = getPropValue(props[propName])\n    }\n\n    this.state = state\n  }\n\n  public override render(): JSX.Element {\n    const newProps: Partial<TProps> = {}\n\n    // Copy over any properties from the observable component to the children.\n    for (const key in this.state.values) {\n      if (key !== 'children') {\n        newProps[key as keyof TProps] = this.state.values[key]\n      }\n    }\n\n    if (typeof this.props['children' as keyof TProps] === 'function') {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const child: (props: TProps) => JSX.Element = this.props['children' as keyof TProps] as any\n      return child(newProps as TProps)\n    } else {\n      const child = Children.only(this.props['children' as keyof TProps]) as DetailedReactHTMLElement<\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        any,\n        HTMLElement\n      >\n      return cloneElement(child, {...child.props, ...newProps}, child.props.children)\n    }\n  }\n\n  public override componentDidMount(): void {\n    this.updateSubscriptionsAndStateAfterRender()\n  }\n\n  public override componentDidUpdate(): void {\n    this.updateSubscriptionsAndStateAfterRender()\n\n    if (this.props.onUpdate) {\n      this.props.onUpdate()\n    }\n  }\n\n  public override componentWillUnmount(): void {\n    // Unsubscribe from any of the observable properties.\n    for (const propName in this.subscribedProps) {\n      this.unsubscribe(propName, this.subscribedProps)\n    }\n  }\n\n  public subscribe(propName: string, props: TProps) {\n    if (propName !== 'children') {\n      let observableExpression: IObservableExpression | undefined\n      let observableValue = props[propName as keyof TProps]\n      let action: string | undefined\n\n      // If this is an observableExpression, we need to subscribe to the value\n      // and execute the filter on changes.\n      if (observableValue && (observableValue as unknown as IObservableExpression).observableValue !== undefined) {\n        observableExpression = observableValue as unknown as IObservableExpression\n        observableValue = observableExpression.observableValue\n        action = observableExpression.action\n      }\n\n      if (ObservableLike.isObservable(observableValue)) {\n        const delegate = this.onValueChanged.bind(\n          this,\n          propName,\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          observableValue as unknown as IObservableValue<any>,\n          observableExpression,\n        )\n        ObservableLike.subscribe(observableValue, delegate, action)\n        this.subscriptions[propName] = {delegate, action} as ISubscription\n      }\n    }\n  }\n\n  public unsubscribe(propName: string, props: TProps) {\n    if (propName !== 'children') {\n      const observableValue = getObservableValue(props[propName as keyof TProps])\n\n      if (ObservableLike.isObservable(observableValue)) {\n        const subscription = this.subscriptions[propName]\n        ObservableLike.unsubscribe(observableValue, subscription!.delegate, subscription!.action)\n        delete this.subscriptions[propName]\n      }\n    }\n  }\n\n  public hasSubscription(propName: string) {\n    return !!this.subscriptions[propName]\n  }\n\n  private updateSubscriptionsAndStateAfterRender() {\n    const newState = updateSubscriptionsAndState(\n      this.subscribedProps,\n      this.props,\n      this.state,\n      this as ISubscribable<TProps>,\n    )\n    if (newState != null) {\n      this.setState(newState)\n    }\n\n    this.subscribedProps = {...this.props}\n  }\n\n  private onValueChanged(\n    propName: string,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    observableValue: IObservableValue<any>,\n    observableExpression: IObservableExpression | undefined,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    value: any,\n    action: string,\n  ) {\n    let setState = true\n\n    if (!(propName in this.subscriptions)) {\n      return\n    }\n\n    // If this is an ObservableExpression we will call the filter before setting state.\n    if (observableExpression && observableExpression.filter) {\n      setState = observableExpression.filter(value, action)\n    }\n    if (setState) {\n      this.setState((prevState: Readonly<IObserverState<TProps>>, _props: Readonly<TProps>) => {\n        return {\n          values: {\n            ...prevState.values,\n            [propName]: observableValue.value || value,\n          },\n        }\n      })\n    }\n  }\n}\n\nfunction getObservableValue(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  propValue: IObservableValue<any> | IObservableExpression | any,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): IObservableValue<any> | any {\n  if (propValue && propValue.observableValue !== undefined) {\n    return propValue.observableValue\n  }\n\n  return propValue\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getPropValue(propValue: IObservableValue<any> | IObservableExpression | any): any {\n  return ObservableLike.getValue(getObservableValue(propValue))\n}\n\nfunction updateSubscriptionsAndState<TProps>(\n  oldProps: TProps,\n  newProps: TProps,\n  state: IObserverState<TProps>,\n  component?: ISubscribable<TProps>,\n): IObserverState<TProps> | null {\n  // We need to unsubscribe from any observable values on old props and\n  // subscribe to any observable values on new props.\n  // In addition, if any of the values of the observables on the new props\n  // differ from the value on the state, then we need to update the state.\n  // This is possible if the value of the observable changed while the value\n  // was being rendered, but before we had set up the subscription.\n  // If we want to unsubscribe/resubscribe, then a component should be passed,\n  // since this method is always called statically.\n\n  const newState: IObserverState<TProps> = {...state}\n  let stateChanged = false\n  if (oldProps) {\n    for (const propName in oldProps) {\n      const oldValue = getObservableValue(oldProps[propName as keyof TProps])\n      const newValue = getObservableValue(newProps[propName as keyof TProps])\n\n      if (oldValue !== newValue) {\n        component && component.unsubscribe(propName, oldProps)\n        if (newValue === undefined) {\n          delete newState.values[propName]\n          stateChanged = true\n        }\n      }\n    }\n  }\n\n  for (const propName in newProps) {\n    const oldValue = oldProps && getObservableValue(oldProps[propName])\n    const newValue = getObservableValue(newProps[propName])\n\n    if (oldValue !== newValue || (component && !component.hasSubscription(propName))) {\n      component && component.subscribe(propName, newProps)\n\n      // Look for changes in the observables between creation and now.\n      if (state.values[propName] !== getPropValue(newValue)) {\n        newState.values[propName] = getPropValue(newValue)\n        stateChanged = true\n      }\n    }\n  }\n\n  // If any state updates occurred update the state now.\n  if (stateChanged) {\n    return newState\n  }\n\n  return null\n}\n\n/**\n * UncheckedObserver is like Observer, except that it performs less (no) typechecking on the child observer function,\n * and allows child React elements.\n *\n * Usage:\n *\n * <Observer myObservableValue={observableValue}>\n *     {(props: {myObservableValue: string}) =>\n *         <MyComponent myObservableValue={props.myObservableValue} />\n *     }\n * </Observer>\n *\n * -or-\n *\n * <Observer myObservableValue={observableValue}>\n *     <MyComponent myObservableValue='' />\n * </Observer>\n *\n * Your component will get re-rendered with the new value of myObservableValue whenever that value changes.\n * Additionally, any additional props set on the Observer will also get passed down.\n */\nexport class UncheckedObserver extends ObserverBase<IUncheckedObserverProps> {}\n","import type {IObserverProps} from './observer-base'\nimport {ObserverBase} from './observer-base'\n\n/**\n * Handles subscription to properties that are IObservableValues, so that components don't have to handle on their own.\n *\n * Usage:\n *\n * <Observer myObservableValue={observableValue}>\n *     {(props: {myObservableValue: string}) =>\n *         <MyComponent myObservableValue={props.myObservableValue} />\n *     }\n * </Observer>\n *\n * Your component will get re-rendered with the new value of myObservableValue whenever that value changes.\n */\nexport class Observer<TObservables> extends ObserverBase<IObserverProps<TObservables>> {}\n","export const LABELS = {\n  actions: 'Actions',\n  actionsPerformanceMetrics: 'Actions Performance Metrics',\n  actionsUsageMetrics: 'Actions Usage Metrics',\n  avgJobQueueTime: 'Avg job queue time',\n  avgJobRunTime: 'Avg job run time',\n  avgQueueTime: 'Avg queue time',\n  avgQueueTimeMinutes: 'Avg queue time minutes',\n  avgRunTime: 'Avg run time',\n  avgRunTimeMinutes: 'Avg run time minutes',\n  beta: 'Beta',\n  cardHeadings: {\n    averageQueueTimeDescription: 'Average queue time of jobs in this organization for',\n    averageQueueTimeTitle: 'Avg job queue time',\n    averageRunTimeDescription: 'Average run time of jobs in this organization for',\n    averageRunTimeTitle: 'Avg job run time',\n    failureRateDescription: 'Failure rate across jobs in this organization for',\n    failureRateTitle: 'Job failure rate',\n    totalFailureMinutesDescription: 'Total minutes used across failed jobs in this organization for',\n    totalFailureMinutesTitle: 'Failed job usage',\n    totalJobDescription: 'Total job runs across all workflows in this organization for',\n    totalJobTitle: 'Total job runs',\n    totalMinutesDescription: 'Total minutes across all workflows in this organization for',\n    totalMinutesTitle: 'Total minutes',\n  },\n  close: 'Close',\n  dateDescription: 'Showing data from',\n  dateDescriptionDelimiter: 'to',\n  dateRangeTypes: {\n    currentWeek: 'Current week (Mon-Sun)',\n    currentMonth: 'Current month',\n    lastMonth: 'Last month',\n    last30Days: 'Last 30 days',\n    last90Days: 'Last 90 days',\n    lastYear: 'Last year',\n  },\n  dependencies: 'Dependencies',\n  downloadReport: 'Download report',\n  exportError:\n    'Export has failed, you may need to select a smaller time range or filter down results. If the problem persists contact support.',\n  failureRate: 'Failure rate',\n  fetchError: 'An unexpected error was encountered, please try again. If the problem persists contact support.',\n  filter: 'Filter',\n  filters: {\n    atLeast1: 'At least 1',\n    moreThan10: 'More than 10',\n  },\n  filterValidationMessage: 'Text will be ignored since it is not supported in this tab',\n  hasJobFailures: 'Has job failures',\n  insights: 'Insights',\n  insightsNavigation: 'Insights navigation',\n  job: 'Job',\n  jobRuns: 'Job runs',\n  jobs: 'Jobs',\n  loading: 'Loading',\n  now: 'now',\n  period: 'Period',\n  repositories: 'Repositories',\n  runnerType: 'Runner type',\n  runnerTypes: {\n    unknown: 'unknown',\n    selfHosted: 'self-hosted',\n    hosted: 'hosted',\n    hostedLarger: 'hosted-larger',\n  },\n  runtimeOs: 'Runtime OS',\n  runtimes: {\n    unknown: 'unknown',\n    linux: 'linux',\n    windows: 'windows',\n    macos: 'macos',\n  },\n  sourceRepository: 'Source repository',\n  time: {\n    days: 'd',\n    hours: 'h',\n    minutes: 'm',\n    seconds: 's',\n  },\n  totalMinutes: 'Total minutes',\n  unknown: 'Unknown',\n  workflow: 'Workflow',\n  workflowCount: 'Workflow count',\n  workflowRuns: 'Workflow runs',\n  workflows: 'Workflows',\n}\n","import {AlertIcon, XIcon} from '@primer/octicons-react'\nimport {Flash, IconButton} from '@primer/react'\nimport {Observer} from '../observables/Observer'\nimport {Services} from '../services/services'\nimport type {ErrorMessage, IErrorService} from '../services/error-service'\nimport {LABELS} from '../resources/labels'\n\nexport const MetricsError = () => {\n  const errorService = Services.get<IErrorService>('IErrorService')\n  return (\n    <Observer errorMessages={errorService.getMessagesToDisplay()}>\n      {(obs: {errorMessages: ErrorMessage[]}) => {\n        return <>{obs.errorMessages.map(em => MetricsErrorFlash(em))}</>\n      }}\n    </Observer>\n  )\n}\n\nconst MetricsErrorFlash = (error: ErrorMessage) => {\n  const errorService = Services.get<IErrorService>('IErrorService')\n\n  return (\n    <Flash variant={'danger'} key={error.id} sx={{mb: 3}}>\n      <div className=\"d-flex flex-items-center\">\n        <div>\n          <AlertIcon size={'small'} />\n        </div>\n        <div className=\"flex-1\">\n          <span>{error.message}</span>\n        </div>\n        <div>\n          <IconButton\n            aria-label={LABELS.close}\n            icon={XIcon}\n            size=\"small\"\n            onClick={() => errorService.removeMessageToDisplay(error.id)}\n            variant=\"invisible\"\n            sx={{pl: 2}}\n          />\n        </div>\n      </div>\n    </Flash>\n  )\n}\n\ntry{ MetricsError.displayName ||= 'MetricsError' } catch {}\ntry{ MetricsErrorFlash.displayName ||= 'MetricsErrorFlash' } catch {}","import {LABELS} from '../resources/labels'\n\nexport enum DateRangeType {\n  Unkown = 'DATE_RANGE_TYPE_UNKNOWN',\n  CurrentWeek = 'DATE_RANGE_TYPE_CURRENT_WEEK',\n  CurrentMonth = 'DATE_RANGE_TYPE_LATEST_MONTH',\n  LastMonth = 'DATE_RANGE_TYPE_PREVIOUS_MONTH',\n  Last30Days = 'DATE_RANGE_TYPE_LAST_30_DAYS',\n  Last90Days = 'DATE_RANGE_TYPE_LAST_90_DAYS',\n  LastYear = 'DATE_RANGE_TYPE_LAST_YEAR',\n}\n\nexport const GET_DATE_RANGE_LABEL = (dateRange: DateRangeType): string => {\n  return DATE_RANGE_LABELS[dateRange] || LABELS.unknown\n}\n\nexport enum OperatorType {\n  Unknown = 'FILTER_OPERATOR_UNKNOWN',\n  Equals = 'FILTER_OPERATOR_EQUALS',\n  NotEquals = 'FILTER_OPERATOR_NOT_EQUALS',\n  Contains = 'FILTER_OPERATOR_CONTAINS',\n  GreaterThan = 'FILTER_OPERATOR_GREATER_THAN',\n  LessThan = 'FILTER_OPERATOR_LESS_THAN',\n  GreaterEqualTo = 'FILTER_OPERATOR_GREATER_THAN_OR_EQUAL',\n  LessEqualTo = 'FILTER_OPERATOR_LESS_THAN_OR_EQUAL',\n  Between = 'FILTER_OPERATOR_BETWEEN',\n}\n\nexport enum ZeroDataType {\n  None,\n  Start,\n  Search,\n}\n\nexport enum TabType {\n  Workflows = 'workflows',\n  Jobs = 'jobs',\n  Repositories = 'repositories',\n  Runtime = 'runtime',\n  RunnerType = 'runner',\n}\n\nconst DATE_RANGE_LABELS: {[key: string]: string} = {\n  [DateRangeType.CurrentWeek]: LABELS.dateRangeTypes.currentWeek,\n  [DateRangeType.CurrentMonth]: LABELS.dateRangeTypes.currentMonth,\n  [DateRangeType.LastMonth]: LABELS.dateRangeTypes.lastMonth,\n  [DateRangeType.Last30Days]: LABELS.dateRangeTypes.last30Days,\n  [DateRangeType.Last90Days]: LABELS.dateRangeTypes.last90Days,\n  [DateRangeType.LastYear]: LABELS.dateRangeTypes.lastYear,\n}\n\nexport enum ExportStatus {\n  EXPORT_STATUS_UNKNOWN = 'EXPORT_STATUS_UNKNOWN',\n  EXPORT_STATUS_PENDING = 'EXPORT_STATUS_PENDING',\n  EXPORT_STATUS_COMPLETE = 'EXPORT_STATUS_COMPLETE',\n  EXPORT_STATUS_FAILED = 'EXPORT_STATUS_FAILED',\n}\n\nexport enum OrderByDirection {\n  ORDER_BY_DIRECTION_UNKNOWN = 'ORDER_BY_DIRECTION_UNKNOWN',\n  ORDER_BY_DIRECTION_ASC = 'ORDER_BY_DIRECTION_ASC',\n  ORDER_BY_DIRECTION_DESC = 'ORDER_BY_DIRECTION_DESC',\n}\n\nexport enum RequestType {\n  Unknown = 'REQUEST_TYPE_UNKNOWN',\n  Usage = 'REQUEST_TYPE_USAGE',\n  Performance = 'REQUEST_TYPE_PERFORMANCE',\n}\n\nexport enum ScopeType {\n  Unknown = 'SCOPE_TYPE_UNKNOWN',\n  Org = 'SCOPE_TYPE_ORG',\n  Repo = 'SCOPE_TYPE_REPO',\n}\n\nexport const GET_SCOPE_TYPE = (scope?: string): ScopeType => {\n  if (scope === ScopeType.Org) {\n    return ScopeType.Org\n  }\n\n  if (scope === ScopeType.Repo) {\n    return ScopeType.Repo\n  }\n\n  return ScopeType.Unknown\n}\n","import {ActionList, ActionMenu} from '@primer/react'\nimport {Observer} from '../observables/Observer'\nimport type {IMetricsService} from '../services/metrics-service'\nimport {DateRangeType, GET_DATE_RANGE_LABEL} from '../models/enums'\nimport type {MetricsView} from '../models/models'\nimport {Services} from '../services/services'\nimport type {IAnalyticsService} from '../services/analytics-service'\nimport {LABELS} from '../resources/labels'\n\nexport interface MetricsDateRangeSelectorProps {\n  metricsService: IMetricsService\n}\n\nexport const MetricsDateRangeSelector = (props: MetricsDateRangeSelectorProps) => {\n  const analyticsService = Services.get<IAnalyticsService>('IAnalyticsService')\n  const metricsService = props.metricsService\n  const state = metricsService.getMetricsView()\n\n  const dateRangeOptions: DateRangeOption[] = [\n    GET_DATE_RANGE_OPTION(DateRangeType.CurrentWeek),\n    GET_DATE_RANGE_OPTION(DateRangeType.CurrentMonth),\n    GET_DATE_RANGE_OPTION(DateRangeType.LastMonth),\n    GET_DATE_RANGE_OPTION(DateRangeType.Last30Days),\n    GET_DATE_RANGE_OPTION(DateRangeType.Last90Days),\n    GET_DATE_RANGE_OPTION(DateRangeType.LastYear),\n  ]\n\n  return (\n    <Observer state={state}>\n      {(obs: {state: MetricsView}) => {\n        const selectedOptionIndex = dateRangeOptions.findIndex(\n          (option: DateRangeOption) => option.key === obs.state.dateRangeType,\n        )\n        const selectedOption = dateRangeOptions[selectedOptionIndex]\n        return (\n          <ActionMenu>\n            <ActionMenu.Button>\n              <span>\n                {LABELS.period}: {selectedOption?.display}\n              </span>\n            </ActionMenu.Button>\n            <ActionMenu.Overlay width=\"medium\">\n              <ActionList selectionVariant=\"single\">\n                {dateRangeOptions.map((option, index) => (\n                  <ActionList.Item\n                    key={index}\n                    selected={index === selectedOptionIndex}\n                    onSelect={() => {\n                      analyticsService.logEvent('date-range-selector.select', 'MetricsDateRangeSelector', {\n                        date: option.key,\n                        previous: JSON.stringify(obs.state),\n                      })\n                      metricsService.setDateRange(option.key)\n                    }}\n                  >\n                    {option.display}\n                  </ActionList.Item>\n                ))}\n              </ActionList>\n            </ActionMenu.Overlay>\n          </ActionMenu>\n        )\n      }}\n    </Observer>\n  )\n}\n\ninterface DateRangeOption {\n  key: DateRangeType\n  display: string\n}\n\nconst GET_DATE_RANGE_OPTION = (dateRange: DateRangeType): DateRangeOption => {\n  return {display: GET_DATE_RANGE_LABEL(dateRange), key: dateRange}\n}\n\ntry{ MetricsDateRangeSelector.displayName ||= 'MetricsDateRangeSelector' } catch {}\ntry{ GET_DATE_RANGE_OPTION.displayName ||= 'GET_DATE_RANGE_OPTION' } catch {}","export const PATHS = {\n  getJobs: '/jobs',\n  getRepositories: '/repositories',\n  getWorkflows: '/workflows',\n  getExport: '/export',\n  getExportStatus: '/export_status',\n  summary: '/summary',\n  usage: 'actions/metrics/usage',\n  performance: 'actions/metrics/performance',\n}\n","import {InsightsSidenavPanel} from '@github-ui/insights-sidenav'\nimport {Services} from '../services/services'\nimport type {IPayloadService} from '../services/payload-service'\nimport {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {PATHS} from '../constants/controller_paths'\n\nexport const MetricsSideNav = () => {\n  const payloadService = Services.get<IPayloadService>('IPayloadService')\n  return (\n    <InsightsSidenavPanel\n      selectedKey={getSideNavKey()}\n      showActionsPerformanceMetrics={payloadService.getFeatureFlag('actions_performance_metrics')}\n      showActionsUsageMetrics={payloadService.getFeatureFlag('actions_usage_metrics')}\n      showDependencies={payloadService.getFeatureFlag('dependency_insights_enabled')}\n      showApi={payloadService.getFeatureFlag('api_insights_enabled')}\n      urls={payloadService.getPayload().paths || {}}\n    />\n  )\n}\n\nconst getSideNavKey = (): 'actions_usage_metrics' | 'actions_performance_metrics' | undefined => {\n  if (ssrSafeWindow?.location.href.includes(PATHS.performance)) {\n    return 'actions_performance_metrics'\n  } else if (ssrSafeWindow?.location.href.includes(PATHS.usage)) {\n    return 'actions_usage_metrics'\n  }\n\n  return undefined\n}\n\ntry{ MetricsSideNav.displayName ||= 'MetricsSideNav' } catch {}","import {RepoIcon, ServerIcon, StopwatchIcon, WorkflowIcon} from '@primer/octicons-react'\nimport {LABELS} from '../resources/labels'\nimport {TabType} from '../models/enums'\n\nexport const ORG_TABS = [\n  {value: TabType.Workflows, displayValue: LABELS.workflows, icon: WorkflowIcon},\n  {value: TabType.Jobs, displayValue: LABELS.jobs, icon: StopwatchIcon},\n  {value: TabType.Repositories, displayValue: LABELS.repositories, icon: RepoIcon},\n  {value: TabType.Runtime, displayValue: LABELS.runtimeOs, icon: ServerIcon},\n  {value: TabType.RunnerType, displayValue: LABELS.runnerType, icon: ServerIcon},\n]\n\nexport const REPO_TABS = ORG_TABS.filter(t => t.value !== TabType.Repositories)\n\nexport const COLUMNS = {\n  // common\n  workflowFileName: 'workflow_file_name',\n  workflowFilePath: 'workflow_file_path',\n  repository: 'repository',\n  runnerRuntime: 'runner_runtime',\n  runnerType: 'runner_type',\n\n  // usage\n  jobs: 'jobs',\n  jobName: 'job_name',\n  jobExecutions: 'job_executions',\n  totalMinutes: 'total_minutes',\n  workflows: 'workflows',\n  workflowExecutions: 'workflow_executions',\n\n  // performance\n  averageRunTime: 'average_run_time',\n  averageQueueTime: 'average_queue_time',\n  failureRate: 'failure_rate',\n\n  // special values just for filters\n  filterQueueTimeMinutes: 'average_queue_minutes',\n  filterRunTimeMinutes: 'average_run_minutes',\n}\n\nexport const TIME_IN_MS = {\n  second: 1000,\n  minute: 1000 * 60,\n  hour: 1000 * 60 * 60,\n  day: 1000 * 60 * 60 * 24,\n}\n","import {COLUMNS, TIME_IN_MS} from '../constants/constants'\nimport type {\n  MetricsResponseItem,\n  MetricsItem,\n  MetricsResponse,\n  MetricsView,\n  Timestamp,\n  CardHeading,\n} from '../models/models'\nimport {LABELS} from '../resources/labels'\nimport {ScopeType} from '../models/enums'\n\nexport class Utils {\n  public static objectEquals = (a?: object, b?: object, propsToBeChecked?: string[]): boolean => {\n    if (!propsToBeChecked?.length) {\n      // may want to use lodash deep isEqual or something similar later since stringify may be inconsistent\n      return JSON.stringify(a) === JSON.stringify(b)\n    }\n    if (!a || !b) {\n      return a === b\n    }\n\n    const aTrimmed = Utils.withOnlyRequestedKeys<object>(a, propsToBeChecked)\n    const bTrimmed = Utils.withOnlyRequestedKeys<object>(b, propsToBeChecked)\n\n    return this.objectEquals(aTrimmed, bTrimmed)\n  }\n\n  public static getCurrentPage = (offset: number, pageSize: number, totalCount?: number): number => {\n    const nextItemOffset = offset\n    const currentPage = Math.ceil(nextItemOffset / pageSize)\n    const lastPage = totalCount ? Math.floor(totalCount / pageSize) : currentPage\n    return currentPage > lastPage ? lastPage : currentPage\n  }\n\n  public static getOffsetFromPage = (pageSize: number, page: number): number => {\n    return (page - 1) * pageSize + 1\n  }\n\n  public static getRealOffsetFromVirtual = (virtualOffset: number, realPageSize: number): number => {\n    return Math.floor(virtualOffset / realPageSize) * realPageSize\n  }\n\n  public static convertFromResponse = <From extends MetricsResponseItem, To extends MetricsItem>(\n    response: MetricsResponse<From>,\n    transformer?: (from: From, uniqueId: string) => To,\n  ): [MetricsView, To[]] => {\n    const view = {} as MetricsView\n\n    for (const key of Object.keys(response)) {\n      if (key !== 'items') {\n        Utils.convertFromResponseProperty(response, view, key)\n      }\n    }\n\n    return [\n      view,\n      response.items.map((item, index) =>\n        transformer ? transformer(item, index.toString()) : Utils.convertFromResponseItem(item, index.toString()),\n      ),\n    ]\n  }\n\n  public static convertFromResponseItem = <From extends MetricsResponseItem, To extends MetricsItem>(\n    from: From,\n    uniqueId: string,\n  ): To => {\n    const item = {} as To\n\n    for (const key of Object.keys(from)) {\n      Utils.convertFromResponseProperty(from, item, key)\n    }\n\n    item.id = uniqueId\n    return item\n  }\n\n  public static convertFromResponseProperty = <\n    From extends MetricsResponseItem | MetricsResponse<MetricsResponseItem>,\n    To,\n  >(\n    from: From,\n    to: To,\n    propKey: string,\n  ): void => {\n    let fromProp = from[propKey as keyof From] as never | undefined | null\n\n    if (fromProp === null) {\n      fromProp = undefined\n    }\n\n    const key = Utils.snakeToCamel(propKey)\n\n    if (key === 'startTime' || key === 'endTime') {\n      const time = (fromProp as Timestamp | undefined)?.seconds\n        ? (fromProp as Timestamp | undefined)!.seconds * 1000 // multiplied by 1000 so that the argument is in milliseconds, not seconds\n        : Date.now() // use now as fallback in case of empty response (error)\n\n      to[key as keyof To] = new Date(time) as never\n    } else {\n      to[key as keyof To] = fromProp as never\n    }\n  }\n\n  public static snakeToCamel = (snake: string): string => {\n    return snake\n      .split('_')\n      .map((part, index) => (part.length > 1 && index > 0 ? part.charAt(0).toUpperCase() + part.slice(1) : part))\n      .join('')\n  }\n\n  public static camelToSnake = (camel: string): string => {\n    let snake = ''\n\n    for (let i = 0; i < camel.length; i++) {\n      const c = camel.charAt(i)\n\n      if (c === c.toUpperCase()) {\n        snake += `_${c.toLowerCase()}`\n      } else {\n        snake += c\n      }\n    }\n\n    return snake\n  }\n\n  public static camelToSnakeObject = (obj: object): object => {\n    const result = {}\n\n    for (const key of Object.keys(obj)) {\n      result[Utils.camelToSnake(key) as keyof object] = obj[key as keyof object]\n    }\n\n    return result\n  }\n\n  public static in15Minutes = (minutesOverride: number = 15): Date => {\n    return new Date(minutesOverride * 60000 + Date.now())\n  }\n\n  public static removeKeys = (obj: object, keys: string[]) => {\n    for (const key of keys) {\n      if (Object.hasOwn(obj, key)) {\n        delete obj[key as keyof object]\n      }\n    }\n  }\n\n  public static withOnlyRequestedKeys = <T>(obj: object, keys: string[]): T => {\n    const result: T = {} as T\n    for (const key of keys) {\n      if (Object.hasOwn(obj, key)) {\n        result[key as keyof T] = obj[key as keyof object]\n      }\n    }\n\n    return result\n  }\n\n  public static getUniqueSortedNonEmpty = (values: string[]): string[] => {\n    return Array.from(new Set<string>(values.filter(v => !!v)).values()).sort()\n  }\n\n  public static isNumber = (s: unknown) => {\n    return (!!s || s === 0) && !isNaN(Number(s))\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public static debounce<F extends (...args: any[]) => any>(fn: F, ms = 250) {\n    let timer: ReturnType<typeof setTimeout> | null = null\n\n    return function (...args: Parameters<F>): Promise<ReturnType<F>> {\n      clearTimeout(timer as ReturnType<typeof setTimeout>)\n\n      return new Promise(resolve => {\n        timer = setTimeout(() => resolve(fn(...args)), ms)\n      })\n    }\n  }\n\n  public static downloadFileFromURL = (url: string) => {\n    const anchor = document.createElement('a')\n    anchor.setAttribute('target', '_blank')\n    anchor.href = url\n    anchor.style.display = 'none'\n    // you can't click a link unless it's part of the document:\n    document.body.appendChild(anchor)\n    anchor.click()\n    document.body.removeChild(anchor)\n  }\n\n  public static getUTCDateString = (date: Date): string => date.toLocaleDateString(undefined, {timeZone: 'UTC'})\n\n  public static sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms))\n\n  public static getPercentage = (value: number): string => {\n    return value > 0 && value < 1 ? '<1%' : `${Math.round(value)}%`\n  }\n\n  public static getDuration = (ms: number): string => {\n    // number => xd xh xm xs\n\n    if (ms < 1000) {\n      return `<1${LABELS.time.seconds}`\n    }\n\n    let remainingTime = ms\n    let days = Math.floor(remainingTime / TIME_IN_MS.day)\n\n    remainingTime = remainingTime - days * TIME_IN_MS.day\n    let hours = Math.floor(remainingTime / TIME_IN_MS.hour)\n\n    remainingTime = remainingTime - hours * TIME_IN_MS.hour\n    let minutes = Math.floor(remainingTime / TIME_IN_MS.minute)\n\n    remainingTime = remainingTime - minutes * TIME_IN_MS.minute\n    let seconds = Math.round(remainingTime / TIME_IN_MS.second)\n\n    if (hours === 24) {\n      days++\n      hours = 0\n    }\n    if (minutes === 60) {\n      hours++\n      minutes = 0\n    }\n    if (seconds === 60) {\n      minutes++\n      seconds = 0\n    }\n\n    const daysStr = days > 0 ? `${days}${LABELS.time.days}` : ''\n    const hoursStr = hours > 0 ? `${hours}${LABELS.time.hours}` : ''\n    const minutesStr = minutes > 0 ? `${minutes}${LABELS.time.minutes}` : ''\n    const secondsStr = seconds > 0 ? `${seconds}${LABELS.time.seconds}` : ''\n\n    return [daysStr, hoursStr, minutesStr, secondsStr].filter(str => !!str).join(' ') || ''\n  }\n\n  public static getCardHeading = (\n    title: string,\n    description: string,\n    dateRange: string,\n    format?: (value: number) => string,\n  ): CardHeading => {\n    return {\n      title,\n      description: `${description} ${dateRange}`,\n      format,\n    }\n  }\n\n  public static columnValidForScope(id: string, scope: ScopeType) {\n    if (scope === ScopeType.Org) {\n      return true\n    }\n\n    if (scope === ScopeType.Repo) {\n      return id !== COLUMNS.repository\n    }\n  }\n}\n","import {Observer} from '../observables/Observer'\nimport {LABELS} from '../resources/labels'\nimport type {IMetricsService} from '../services/metrics-service'\nimport type {MetricsView} from '../models/models'\nimport {LoadingSkeleton} from '@github-ui/skeleton/LoadingSkeleton'\nimport {DateRangeType} from '../models/enums'\nimport type {ReactNode} from 'react'\nimport {RelativeTime} from '@primer/react'\nimport {Utils} from '../utils/utils'\n\nexport interface MetricsDateRangeDescriptionProps {\n  metricsService: IMetricsService\n}\n\nexport const MetricsDateRangeDescription = (props: MetricsDateRangeDescriptionProps) => {\n  const metricsService = props.metricsService\n\n  return (\n    <Observer loading={metricsService.getLoading()} view={metricsService.getMetricsView()}>\n      {(obs: {loading: boolean; view: MetricsView}) => {\n        if (obs.loading) {\n          return <LoadingSkeleton height={'21px'} width={'300px'} />\n        }\n\n        const start = Utils.getUTCDateString(obs.view.startTime)\n        let end: ReactNode = <RelativeTime date={obs.view.endTime} />\n\n        if (obs.view.dateRangeType === DateRangeType.LastMonth) {\n          end = Utils.getUTCDateString(obs.view.endTime)\n        }\n\n        return (\n          <span>\n            {`${LABELS.dateDescription} ${start} ${LABELS.dateDescriptionDelimiter} `}\n            {end}\n          </span>\n        )\n      }}\n    </Observer>\n  )\n}\n\ntry{ MetricsDateRangeDescription.displayName ||= 'MetricsDateRangeDescription' } catch {}","import {Box, Label} from '@primer/react'\nimport {MetricsRouteHelper, type MetricsRouteHelperProps} from './MetricsRouteHelper'\nimport {MetricsError} from './MetricsError'\nimport {MetricsDateRangeSelector} from './MetricsDateRangeSelector'\nimport type {IMetricsService} from '../services/metrics-service'\nimport {MetricsSideNav} from './MetricsSideNav'\nimport {PageHeader} from '@primer/react/drafts'\nimport {MetricsDateRangeDescription} from './MetricsDateRangeDescription'\nimport {LABELS} from '../resources/labels'\nimport {Services} from '../services/services'\n\nexport interface MetricsLayoutProps extends MetricsHeaderProps, MetricsRouteHelperProps {\n  children: React.ReactNode\n  hideSideNav?: boolean\n}\n\nexport function MetricsLayout(props: MetricsLayoutProps) {\n  if (props.hideSideNav === false) {\n    return (\n      <>\n        <MetricsRouteHelper metricsService={props.metricsService} />\n        <div>\n          <MetricsHeader {...props} />\n          <MetricsError />\n          {props.children}\n        </div>\n        <div />\n      </>\n    )\n  }\n\n  return (\n    <>\n      <MetricsRouteHelper metricsService={props.metricsService} />\n      <div className=\"d-flex flex-column flex-lg-row flex-content-stretch\">\n        <MetricsSideNav />\n        <Box className=\"flex-1 mx-lg-auto\" sx={{maxWidth: 1664 /* 1280 + 336 (side nav width) + 48 padding */, p: 4}}>\n          <div className=\"container-xl mx-auto mr-lg-auto ml-lg-0\">\n            <MetricsHeader {...props} />\n            <MetricsError />\n            {props.children}\n          </div>\n        </Box>\n      </div>\n      <div />\n    </>\n  )\n}\n\nexport interface MetricsHeaderProps {\n  beta?: boolean\n  title: string\n}\n\nexport function MetricsHeader(props: MetricsHeaderProps) {\n  const metricsService = Services.get<IMetricsService>('IMetricsService')\n  return (\n    <>\n      <PageHeader\n        className=\"hide-sm\"\n        sx={{\n          borderBottomWidth: 1,\n          borderBottomStyle: 'solid',\n          borderColor: 'border.default',\n          pb: 2,\n          mb: 3,\n        }}\n      >\n        <PageHeader.TitleArea>\n          <PageHeader.Title as=\"h1\">{props.title}</PageHeader.Title>\n          <PageHeader.TrailingVisual>\n            {props.beta && <Label variant=\"success\">{LABELS.beta}</Label>}\n          </PageHeader.TrailingVisual>\n        </PageHeader.TitleArea>\n        <PageHeader.Actions>\n          <MetricsDateRangeSelector metricsService={metricsService} />\n        </PageHeader.Actions>\n        <PageHeader.Description>\n          <MetricsDateRangeDescription metricsService={metricsService} />\n        </PageHeader.Description>\n      </PageHeader>\n\n      <Box\n        className=\"d-flex flex-column hide-md hide-lg hide-xl\"\n        sx={{\n          borderBottomWidth: 1,\n          borderBottomStyle: 'solid',\n          borderColor: 'border.default',\n          pb: 2,\n          mb: 3,\n        }}\n      >\n        <PageHeader>\n          <PageHeader.TitleArea>\n            <PageHeader.Title as=\"h1\">{props.title}</PageHeader.Title>\n            <PageHeader.TrailingVisual>\n              {props.beta && <Label variant=\"success\">{LABELS.beta}</Label>}\n            </PageHeader.TrailingVisual>\n          </PageHeader.TitleArea>\n        </PageHeader>\n        <div className=\"py-2\">\n          <MetricsDateRangeSelector metricsService={metricsService} />\n        </div>\n        <MetricsDateRangeDescription metricsService={metricsService} />\n      </Box>\n    </>\n  )\n}\n\ntry{ MetricsLayout.displayName ||= 'MetricsLayout' } catch {}\ntry{ MetricsHeader.displayName ||= 'MetricsHeader' } catch {}","import {Observer} from './Observer'\nimport type {IObservableLikeValue} from './observable'\n\nexport interface IConditionalChildrenProps {\n  /**\n   * Whether to apply a not operator to the result of the renderChildren value\n   * @default false\n   */\n  inverse?: boolean\n\n  /**\n   * Whether or not to show the children of this component.\n   * If Observable, will subscribe and re-render on change notifications.\n   */\n  renderChildren: IObservableLikeValue<boolean>\n}\n\nexport function ConditionalChildren(props: IConditionalChildrenProps & Readonly<{children?: React.ReactNode}>) {\n  return (\n    <Observer renderChildren={props.renderChildren}>\n      {(observedProps: {renderChildren: boolean}) => {\n        if (observedProps.renderChildren !== !!props.inverse) {\n          if (props.children) {\n            return props.children\n          }\n        }\n        return null\n      }}\n    </Observer>\n  )\n}\n\ntry{ ConditionalChildren.displayName ||= 'ConditionalChildren' } catch {}","import type {MetricsItem, MetricsViewReadOnly} from '../models/models'\nimport {Observer} from '../observables/Observer'\nimport type {Column} from '@primer/react/drafts'\nimport {DataTable, Table} from '@primer/react/drafts'\nimport type {IMetricsService} from '../services/metrics-service'\nimport {Utils} from '../utils/utils'\nimport {ConditionalChildren} from '../observables/ConditionalChildren'\nimport {Services} from '../services/services'\nimport type {IAnalyticsService} from '../services/analytics-service'\nimport {OrderByDirection} from '../models/enums'\n\nexport interface MetricsTableProps {\n  metricsService: IMetricsService\n}\n\nexport const MetricsTable = (props: MetricsTableProps) => {\n  const analyticsService = Services.get<IAnalyticsService>('IAnalyticsService')\n  const metricsService = props.metricsService\n  const state = metricsService.getMetricsView()\n  const columns = metricsService.getColumns()\n  const data = metricsService.getMetrics()\n  const loading = metricsService.getLoading()\n\n  return (\n    <>\n      <Table.Container>\n        <ConditionalChildren renderChildren={loading}>\n          <Observer columns={columns} state={state}>\n            {(obs: {columns: Array<Column<MetricsItem>>; state: MetricsViewReadOnly | undefined}) => {\n              return <Table.Skeleton columns={obs.columns} rows={obs.state?.virtualPageSize} />\n            }}\n          </Observer>\n        </ConditionalChildren>\n\n        <ConditionalChildren renderChildren={loading} inverse={true}>\n          <Observer data={data} columns={columns} view={state}>\n            {(obs: {data: MetricsItem[]; columns: Array<Column<MetricsItem>>; view: MetricsViewReadOnly}) => {\n              const defaultOrderBy = metricsService.getDefaultOrderBy()\n              const direction = obs.view.orderBy?.direction || defaultOrderBy.direction\n              const field = obs.view.orderBy?.field || defaultOrderBy.field\n              const initialSortDirection = direction === OrderByDirection.ORDER_BY_DIRECTION_DESC ? 'DESC' : 'ASC'\n              const initialSortColumn = Utils.camelToSnake(field)\n              return (\n                <DataTable\n                  key={initialSortColumn + initialSortDirection + Math.random()} // not rendering correctly unless we use key to force total update\n                  data={obs.data}\n                  columns={obs.columns}\n                  initialSortDirection={initialSortDirection}\n                  initialSortColumn={initialSortColumn}\n                />\n              )\n            }}\n          </Observer>\n        </ConditionalChildren>\n\n        <Observer state={state}>\n          {(obs: {state: MetricsViewReadOnly}) => {\n            const defaultPageIndex = Utils.getCurrentPage(\n              obs.state?.virtualOffset ?? 0,\n              obs.state?.virtualPageSize ?? 0,\n              obs.state?.totalItems,\n            )\n            return (\n              obs.state.totalItems && (\n                <Table.Pagination\n                  key={defaultPageIndex + Math.random()} // not rendering correctly unless we use key to force total update\n                  aria-label=\"Pagination for table\"\n                  pageSize={obs.state.virtualPageSize}\n                  totalCount={obs.state.totalItems}\n                  onChange={pageInfo => {\n                    analyticsService.logEvent('pagination.change', 'MetricsTable', {\n                      page: pageInfo.pageIndex,\n                      previous: JSON.stringify(obs.state),\n                    })\n                    props.metricsService.setPage(pageInfo.pageIndex)\n                  }}\n                  defaultPageIndex={defaultPageIndex}\n                />\n              )\n            )\n          }}\n        </Observer>\n      </Table.Container>\n    </>\n  )\n}\n\ntry{ MetricsTable.displayName ||= 'MetricsTable' } catch {}","import {FilterOperator, FilterProviderType, type FilterBlock, type FilterProvider} from '@github-ui/filter'\nimport {OperatorType} from '../models/enums'\nimport type {FilterValue} from '../models/models'\nimport {Services} from '../services/services'\nimport type {IFilterService} from '../services/filter-service'\nimport {Utils} from './utils'\nimport {getUnescapedFilterValue} from '@github-ui/filter/utils'\nimport type {IErrorService} from '../services/error-service'\nimport {FilterQueryParser} from '@github-ui/filter/parser/v2'\nimport {COLUMNS} from '../constants/constants'\n\nexport class FilterUtils {\n  public static parseFilter = (providers: FilterProvider[], filter?: string): FilterValue[] | undefined => {\n    if (!filter?.trim()) {\n      return undefined\n    }\n\n    const providersMap = new Map<string, FilterProvider>()\n    for (const provider of providers) {\n      providersMap.set(provider.key, provider)\n    }\n\n    const filterQueryParser = new FilterQueryParser(providers)\n    const parsedQuery = filterQueryParser.parse(filter)\n\n    let filterBlocks = parsedQuery.blocks.filter(b => b.type === 'text' || b.type === 'filter')\n\n    if (!FilterUtils.TextFilterSupportEnabled(providers)) {\n      filterBlocks = filterBlocks.filter(b => b.type === 'filter')\n    }\n\n    const filterValues: FilterValue[] = []\n    const foundKeys = new Set<string>()\n\n    for (let i = 0; i < filterBlocks.length; i++) {\n      try {\n        if (filterBlocks[i]?.type === 'text') {\n          const block = filterBlocks[i]!\n          const value = block?.raw ?? ''\n          const textValue = getUnescapedFilterValue(value) ?? ''\n          if (textValue) {\n            const filterValue: FilterValue = {\n              key: 'text',\n              values: [textValue],\n              order: i,\n              operator: OperatorType.Contains,\n              display: block.raw,\n            }\n\n            filterValues.push(filterValue)\n          }\n        } else {\n          const block = filterBlocks[i] as FilterBlock\n          const key = block.key.value\n          const realFilterKey = key?.startsWith('-') && key?.length > 1 ? key.substring(1, key.length) : key ?? ''\n\n          if (key && key !== '-' && block.value.values.length && !foundKeys.has(realFilterKey)) {\n            // regular filter\n            const provider = providersMap.get(realFilterKey)!\n            const values = FilterUtils.getFilterValues(block, provider)\n            if (values.length) {\n              const filterValue: FilterValue = {\n                key: realFilterKey,\n                values,\n                order: i,\n                display: block.raw,\n                operator: FilterUtils.getOperator(block),\n              }\n\n              if (filterValue.operator !== OperatorType.Unknown && filterValue.values.length) {\n                foundKeys.add(realFilterKey)\n                filterValues.push(filterValue)\n              }\n            }\n          }\n        }\n      } catch (e) {\n        const errorService = Services.get<IErrorService>('IErrorService')\n        errorService.log(e as Error)\n      }\n    }\n\n    const sorted = filterValues.sort((a, b) => {\n      let result = a.key.localeCompare(b.key)\n      // if keys are the same, sort by order\n      if (result === 0) {\n        result = a.order - b.order\n      }\n      return result\n    })\n    return sorted.length > 0 ? sorted : undefined\n  }\n\n  public static stringifyFilters = (filters?: FilterValue[]): string | undefined => {\n    if (!filters?.length) {\n      return undefined\n    }\n\n    return filters\n      .sort((a, b) => a.order - b.order)\n      .map(filter => filter.display)\n      .join(' ')\n  }\n\n  public static getFilterValues = (block: FilterBlock, provider: FilterProvider): string[] => {\n    if (provider.type === FilterProviderType.Number) {\n      const operator = FilterUtils.getOperator(block)\n      const value = block.value.values[0]?.value as string\n      if (operator !== OperatorType.Unknown && value?.length) {\n        if (operator === OperatorType.GreaterEqualTo || operator === OperatorType.LessEqualTo) {\n          return [value.substring(2)]\n        }\n        if (operator === OperatorType.GreaterThan || operator === OperatorType.LessThan) {\n          return [value.substring(1)]\n        }\n      }\n    }\n\n    const filterService = Services.get<IFilterService>('IFilterService')\n\n    const values = block.value.values.map(b => getUnescapedFilterValue(b.value as string)).filter(s => !!s) as string[]\n\n    return Utils.getUniqueSortedNonEmpty(values.filter(v => filterService.isFilterValueValid(v, provider)))\n  }\n\n  public static getOperator = (block: FilterBlock): OperatorType => {\n    switch (block.operator) {\n      case FilterOperator.IsOneOf:\n        return OperatorType.Equals\n      case FilterOperator.IsNotOneOf:\n        return OperatorType.NotEquals\n      case FilterOperator.GreaterThanOrEqualTo:\n        return OperatorType.GreaterEqualTo\n      case FilterOperator.GreaterThan:\n        return OperatorType.GreaterThan\n      case FilterOperator.LessThanOrEqualTo:\n        return OperatorType.LessEqualTo\n      case FilterOperator.LessThan:\n        return OperatorType.LessThan\n      case FilterOperator.Between:\n        return OperatorType.Between\n      case FilterOperator.EqualTo:\n        return OperatorType.Equals\n      default:\n        return OperatorType.Unknown\n    }\n  }\n\n  public static isAsync = (provider: FilterProvider): boolean => {\n    return !provider.filterValues?.length\n  }\n\n  public static TextFilterSupportEnabled = (providers: FilterProvider[]): boolean => {\n    // ignore text blocks if there are no async filters, because we only support free text search on async providers\n    return providers.find(p => FilterUtils.isAsync(p) && p.key.indexOf(COLUMNS.repository) === -1) !== undefined\n  }\n}\n","import type {FilterProvider, FilterQuery} from '@github-ui/filter'\nimport {BlockType, Filter, ValidationMessage} from '@github-ui/filter'\nimport type {FilterValue, MetricsView} from '../models/models'\nimport {Observer} from '../observables/Observer'\nimport {LABELS} from '../resources/labels'\nimport type {IAnalyticsService} from '../services/analytics-service'\nimport type {IMetricsService} from '../services/metrics-service'\nimport {Services} from '../services/services'\nimport {FilterUtils} from '../utils/filter-utils'\nimport {useCallback, useEffect, useState} from 'react'\nimport {useSearchParams} from 'react-router-dom'\n\nexport interface MetricsFilterProps {\n  metricsService: IMetricsService\n  providers: FilterProvider[]\n  onChange: (filters?: FilterValue[]) => void\n}\n\nexport const MetricsFilter = (props: MetricsFilterProps) => {\n  const analyticsService = Services.get<IAnalyticsService>('IAnalyticsService')\n  const view = props.metricsService.getMetricsView()\n\n  const [filterText, setFilterText] = useState<string>(FilterUtils.stringifyFilters(view.value.filters) ?? '')\n  const [searchParams] = useSearchParams()\n\n  useEffect(() => {\n    if (FilterUtils.stringifyFilters(view.value.filters) !== filterText) {\n      setFilterText(FilterUtils.stringifyFilters(view.value.filters) ?? '')\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams])\n\n  useEffect(() => {\n    // fix issue where onSubmit is not triggered when filter is cleared\n    if (!filterText) {\n      onChangeInternal('')\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filterText])\n\n  // this provides a temporary fix to prevent users from using text filters on tabs it is not supported on,\n  // see https://github.slack.com/archives/C06NSCQJS23/p1721247830298919 for more info\n  const [validationMessage, setValidationMessage] = useState<string[]>([])\n  const validationCallback = useCallback((_: string[], request: FilterQuery) => {\n    const rawText = []\n    for (const block of request.blocks) {\n      if (block.type === BlockType.Text && !FilterUtils.TextFilterSupportEnabled(props.providers)) {\n        const errorMessage = `${LABELS.filterValidationMessage}: <pre>${block.raw}</pre>`\n        rawText.push(errorMessage)\n      }\n    }\n    if (rawText.length > 0 || request.errors.length > 0) {\n      setValidationMessage([...request.errors, ...rawText])\n    } else {\n      setValidationMessage([])\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  function onChangeInternal(newFilter: string) {\n    analyticsService.logEvent('filter.change', 'MetricsFilter', {filter: newFilter})\n    onChange(props, newFilter)\n  }\n\n  return (\n    <Observer view={view}>\n      {(obs: {view: MetricsView}) => {\n        return (\n          <div>\n            <Filter\n              key={`metrics-filter-${obs.view.tab}`}\n              id={'metrics-filter'}\n              label={LABELS.filter}\n              onChange={v => setFilterText(v)}\n              onSubmit={request => onChangeInternal(request.raw)}\n              providers={props.providers}\n              filterValue={filterText}\n              variant={'full'}\n              settings={{disableAdvancedTextFilter: true}}\n              onValidation={validationCallback}\n            />\n            {validationMessage.length > 0 && (\n              <ValidationMessage\n                messages={validationMessage}\n                key={`metrics-filter-validation-message-${obs.view.tab}`}\n                id={'metrics-filter-validation-message'}\n              />\n            )}\n          </div>\n        )\n      }}\n    </Observer>\n  )\n}\n\nconst onChange = (props: MetricsFilterProps, filter: string) => {\n  const newParsed = FilterUtils.parseFilter(props.providers, filter)\n  props.onChange(newParsed)\n}\n\ntry{ MetricsFilter.displayName ||= 'MetricsFilter' } catch {}","import {Blankslate} from '@primer/react/drafts'\n\nexport interface MetricsZeroDataProps {\n  heading?: string\n  description?: string\n  primaryActionText?: string\n  primaryActionHref?: string\n  secondaryActionText?: string\n  secondaryActionHref?: string\n  visual?: React.ReactNode\n}\n\nexport const MetricsZeroData = (props: MetricsZeroDataProps) => {\n  return (\n    <Blankslate border>\n      {props.visual && <Blankslate.Visual>{props.visual}</Blankslate.Visual>}\n      {props.heading && <Blankslate.Heading>{props.heading}</Blankslate.Heading>}\n      {props.description && <Blankslate.Description>{props.description}</Blankslate.Description>}\n      {props.primaryActionText && props.primaryActionHref && (\n        <Blankslate.PrimaryAction href={props.primaryActionHref}>{props.primaryActionText}</Blankslate.PrimaryAction>\n      )}\n      {props.secondaryActionText && props.secondaryActionHref && (\n        <Blankslate.SecondaryAction href={props.secondaryActionHref}>\n          {props.secondaryActionText}\n        </Blankslate.SecondaryAction>\n      )}\n    </Blankslate>\n  )\n}\n\ntry{ MetricsZeroData.displayName ||= 'MetricsZeroData' } catch {}","export const ZERO_DATA_RESOURCES = {\n  search: {\n    heading: 'No results matched your search.',\n    description: 'You could clear your search or try a different time period.',\n  },\n  start: {\n    heading: 'No table data available yet.',\n    description: \"You don't have workflows on any of your organization repositories.\",\n    action: 'Get started with GitHub Actions',\n  },\n}\n","import {DownloadIcon} from '@primer/octicons-react'\nimport type {IMetricsService} from '../services/metrics-service'\nimport {Box, IconButton, Spinner} from '@primer/react'\nimport {LABELS} from '../resources/labels'\nimport {Observer} from '../observables/Observer'\nimport type {MetricsView} from '../models/models'\nimport type {IAnalyticsService} from '../services/analytics-service'\nimport {Services} from '../services/services'\nexport interface MetricsExportProps {\n  metricsService: IMetricsService\n}\n\nexport const MetricsExport = (props: MetricsExportProps) => {\n  const analyticsService = Services.get<IAnalyticsService>('IAnalyticsService')\n  const isExporting = props.metricsService.getIsExporting()\n  const state = props.metricsService.getMetricsView()\n  return (\n    <Observer isExporting={isExporting} state={state}>\n      {(obs: {isExporting: boolean; state: MetricsView}) => {\n        if (!obs.isExporting) {\n          return (\n            <div>\n              <IconButton\n                tooltipDirection=\"w\"\n                description={LABELS.downloadReport}\n                aria-label={LABELS.downloadReport}\n                icon={DownloadIcon}\n                size=\"small\"\n                onClick={() => {\n                  analyticsService.logEvent('export.click', 'MetricsExport', {\n                    view: props.metricsService.getMetricsView().value,\n                  })\n                  props.metricsService.downloadExport()\n                }}\n                variant=\"invisible\"\n                disabled={!state.value.totalItems}\n              />\n            </div>\n          )\n        } else {\n          return (\n            <Box className=\"mt-1\" sx={{width: 22, height: 18}}>\n              <Spinner size=\"small\" srText={LABELS.loading} />\n            </Box>\n          )\n        }\n      }}\n    </Observer>\n  )\n}\n\ntry{ MetricsExport.displayName ||= 'MetricsExport' } catch {}","import DataCard from '@github-ui/data-card'\nimport {Text} from '@primer/react'\nimport {Services} from '../services/services'\nimport type {IMetricsService} from '../services/metrics-service'\nimport {Observer} from '../observables/Observer'\nimport type {CardData} from '../models/models'\n\nexport const MetricsHeroCards = () => {\n  const metricsService = Services.get<IMetricsService>('IMetricsService')\n  const cardData = metricsService.getCardData()\n\n  return (\n    <Observer cardData={cardData}>\n      {(obs: {cardData: Array<CardData | undefined>}) => {\n        return (\n          <div className=\"d-flex flex-row flex-content-stretch flex-wrap gutter-condensed\">\n            {obs.cardData.map((data, index) => (\n              <MetricsHeroCard data={data} key={data?.metric ?? index} />\n            ))}\n          </div>\n        )\n      }}\n    </Observer>\n  )\n}\n\nconst LoadingCard = () => <DataCard loading={true} sx={HERO_CARD_STYLING} />\n\ninterface MetricsHeroCardProps {\n  data?: CardData\n}\n\nconst MetricsHeroCard = (props: MetricsHeroCardProps) => {\n  const card = props.data\n\n  if (card) {\n    return (\n      <DataCard cardTitle={card.title} sx={HERO_CARD_STYLING}>\n        <MetricsHeroCardContent data={card} />\n        <DataCard.Description>{card.description}</DataCard.Description>\n      </DataCard>\n    )\n  } else {\n    return <LoadingCard />\n  }\n}\n\ninterface MetricsHeroCardContentProps {\n  data: CardData\n}\n\nconst MetricsHeroCardContent = (props: MetricsHeroCardContentProps) => {\n  if (props.data.format) {\n    return (\n      <Text\n        sx={{\n          fontSize: '24px',\n          fontWeight: 400,\n          lineHeight: '24px',\n        }}\n      >\n        {props.data.format && props.data.format(props.data.value)}\n      </Text>\n    )\n  }\n\n  return <DataCard.Counter count={props.data.value || 0} />\n}\n\nconst HERO_CARD_STYLING = {\n  mx: 2,\n  mb: 3,\n  // was having an odd bug where % wasn't working correctly, so for below values:\n  // 50% -> 40%\n  // 25% -> 21%\n  // wrapping should work the same way either way\n  flexBasis: [\n    '100%', // default no sidebar\n    '40%', // small       (min-width: 544px) no sidebar\n    '21%', // medium    (min-width: 768px) no sidebar\n    '40%', // large     (min-width: 1012px) sidebar\n    '21%', // xlarge (min-width: 1280px) sidebar\n  ],\n}\n\ntry{ MetricsHeroCards.displayName ||= 'MetricsHeroCards' } catch {}\ntry{ LoadingCard.displayName ||= 'LoadingCard' } catch {}\ntry{ MetricsHeroCard.displayName ||= 'MetricsHeroCard' } catch {}\ntry{ MetricsHeroCardContent.displayName ||= 'MetricsHeroCardContent' } catch {}","import {MetricsLayout, type MetricsHeaderProps} from './MetricsLayout'\nimport {LABELS} from '../resources/labels'\nimport {MetricsTable} from './MetricsTable'\nimport {Observer} from '../observables/Observer'\nimport type {FilterProvider} from '@github-ui/filter'\nimport {MetricsFilter} from './MetricsFilter'\nimport {ZeroDataType} from '../models/enums'\nimport {MetricsZeroData} from './MetricsZeroData'\nimport {ZERO_DATA_RESOURCES} from '../resources/zero-data'\nimport {MetricsExport} from './MetricsExport'\nimport {MetricsTabs} from './MetricsTabs'\nimport type {IMetricsService} from '../services/metrics-service'\nimport {Services} from '../services/services'\nimport {MetricsHeroCards} from './MetricsHeroCards'\n\nexport interface MetricsLayoutTableProps extends MetricsHeaderProps {\n  hideSideNav?: boolean\n}\n\nexport function MetricsLayoutTable(props: MetricsLayoutTableProps) {\n  const metricsService = Services.get<IMetricsService>('IMetricsService')\n  const providers = metricsService.getFilterProviders()\n  const zeroData = metricsService.getZeroDataState()\n\n  return (\n    <MetricsLayout\n      title={props.title ?? LABELS.actions}\n      metricsService={metricsService}\n      hideSideNav={props.hideSideNav}\n      beta={props.beta}\n    >\n      <MetricsHeroCards />\n      <MetricsTabs metricsService={metricsService}>\n        <div className=\"d-flex pb-3\">\n          <div className=\"flex-1\">\n            <Observer providers={providers}>\n              {(obs: {providers: FilterProvider[]}) => {\n                return (\n                  <MetricsFilter\n                    metricsService={metricsService}\n                    onChange={filters => metricsService.setFilters(filters)}\n                    providers={obs.providers}\n                  />\n                )\n              }}\n            </Observer>\n          </div>\n          <div className=\"d-flex flex-nowrap flex-items-center flex-self-start mt-1 pl-1\">\n            <MetricsExport metricsService={metricsService} />\n          </div>\n        </div>\n\n        <Observer zeroData={zeroData}>\n          {(obs: {zeroData: ZeroDataType}) => {\n            if (obs.zeroData === ZeroDataType.Start) {\n              return (\n                <MetricsZeroData\n                  heading={ZERO_DATA_RESOURCES.start.heading}\n                  description={ZERO_DATA_RESOURCES.start.description}\n                  secondaryActionText={ZERO_DATA_RESOURCES.start.action}\n                  secondaryActionHref={'https://docs.github.com/actions/quickstart'}\n                />\n              )\n            }\n\n            if (obs.zeroData === ZeroDataType.Search) {\n              return (\n                <MetricsZeroData\n                  heading={ZERO_DATA_RESOURCES.search.heading}\n                  description={ZERO_DATA_RESOURCES.search.description}\n                />\n              )\n            }\n\n            return <MetricsTable metricsService={metricsService} />\n          }}\n        </Observer>\n      </MetricsTabs>\n    </MetricsLayout>\n  )\n}\n\ntry{ MetricsLayoutTable.displayName ||= 'MetricsLayoutTable' } catch {}","import type {Column} from '@primer/react/drafts'\nimport type {\n  FilterValue,\n  MetricsExportRequest,\n  MetricsItem,\n  MetricsRequest,\n  MetricsResponse,\n  MetricsResponseItem,\n  MetricsTab,\n  MetricsView,\n  MetricsViewReadOnly,\n  CardData,\n  Summary,\n  CardHeading,\n  ExportStatusResponse,\n  StartExportResponse,\n  OrderBy,\n} from '../models/models'\nimport type {\n  IObservableArray,\n  IObservableValue,\n  IReadonlyObservableArray,\n  IReadonlyObservableValue,\n} from '../observables/observable'\nimport {ObservableArray, ObservableValue} from '../observables/observable'\nimport type {IService, ServiceFactory} from './services'\nimport {ServiceBase, Services} from './services'\nimport type {IRoutingService} from './routing-service'\nimport {Utils} from '../utils/utils'\nimport {DateRangeType, ExportStatus, OrderByDirection, ScopeType, ZeroDataType} from '../models/enums'\nimport type {IDataService} from './data-service'\nimport {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport type {FilterProvider} from '@github-ui/filter'\nimport {FilterUtils} from '../utils/filter-utils'\nimport type {IErrorService} from './error-service'\nimport {PATHS} from '../constants/controller_paths'\nimport type {IAnalyticsService} from './analytics-service'\nimport {LABELS} from '../resources/labels'\nimport type {IPayloadService} from './payload-service'\nimport {ORG_TABS, REPO_TABS, TIME_IN_MS} from '../constants/constants'\n\nexport interface SetOptions {\n  /**\n   * return modified view that would result from running operation without actually running it.\n   */\n  preview?: boolean\n}\n\nexport interface IMetricsService extends IService {\n  downloadExport: () => void\n  getColumns: () => IReadonlyObservableArray<Column<MetricsItem>>\n  getDefaultOrderBy: () => OrderBy\n  getFilterProviders: () => IReadonlyObservableArray<FilterProvider>\n  getIsExporting: () => IReadonlyObservableValue<boolean>\n  getLoading: () => IReadonlyObservableValue<boolean>\n  getMetrics: () => IReadonlyObservableArray<MetricsItem>\n  getMetricsView: () => IReadonlyObservableValue<MetricsViewReadOnly>\n  getServiceId: () => string\n  getTabs: () => IObservableArray<MetricsTab>\n  getViewUrl: (view: MetricsViewReadOnly) => string\n  getZeroDataState: () => IReadonlyObservableValue<ZeroDataType>\n  getCardData: () => IReadonlyObservableArray<CardData | undefined>\n  setDateRange: (dateRangeType: DateRangeType, options?: SetOptions) => MetricsViewReadOnly\n  setFilters: (filters?: FilterValue[], options?: SetOptions) => MetricsViewReadOnly\n  setLoading: (isLoading: boolean) => void\n  setMetricsViewFromSearchParams: () => void\n  setOrderBy: (orderBy: OrderBy, options?: SetOptions) => MetricsViewReadOnly\n  setPage: (zeroIndexPage: number, options?: SetOptions) => MetricsViewReadOnly\n  setScope: () => void\n  setTab: (tab?: string, options?: SetOptions) => MetricsViewReadOnly\n}\n\nexport abstract class MetricsService extends ServiceBase implements IMetricsService {\n  protected readonly isExporting = new ObservableValue<boolean>(false)\n  protected readonly isLoading = new ObservableValue<boolean>(false)\n  protected readonly metrics = new ObservableArray<MetricsItem>([])\n  protected readonly metricsView = new ObservableValue<MetricsView>(DEFAULT_VIEW)\n  protected readonly zeroData = new ObservableValue<ZeroDataType>(ZeroDataType.Start)\n  protected readonly payloadService = Services.get<IPayloadService>('IPayloadService')\n  protected readonly analyticsService = Services.get<IAnalyticsService>('IAnalyticsService')\n  protected readonly dataService = Services.get<IDataService>('IDataService')\n  protected readonly routingService = Services.get<IRoutingService>('IRoutingService')\n  protected readonly errorService = Services.get<IErrorService>('IErrorService')\n  protected readonly offsetsToIgnoreCacheFor = new Set<string>()\n  protected readonly lastStateForTab = new Map<string, MetricsView>()\n  protected readonly tabs = new ObservableArray<MetricsTab>()\n\n  protected latestMetricsRequest: MetricsView = DEFAULT_VIEW\n  protected initialized = false\n  protected response: unknown\n  protected defaultTab: string\n  protected scope = ScopeType.Unknown\n\n  // should be initialized with a number of undefined elements that represents # of loading hero cards\n  protected abstract readonly cardData: ObservableArray<CardData | undefined>\n  protected abstract readonly cardCount: number // # of loading hero cards to show\n\n  public abstract getColumns(): IObservableArray<Column<MetricsItem>>\n  public abstract getFilterProviders(): IObservableArray<FilterProvider>\n  public abstract getDefaultOrderBy(): OrderBy\n  public abstract getServiceId(): string\n  protected abstract setColumns(tab?: string): void\n  protected abstract setFilterProviders(tab?: string): void\n  protected abstract getCardHeading(key: string): CardHeading\n\n  public downloadExport(): void {\n    if (!this.isExporting.value) {\n      this.analyticsService.logEvent('export.start', 'MetricsService', {view: JSON.stringify(this.metricsView.value)})\n\n      // only allow 1 download operation at a time\n      this.isExporting.value = true\n\n      this.startExport()\n    }\n  }\n\n  public getMetrics(): IObservableArray<MetricsItem> {\n    return this.metrics\n  }\n\n  public getMetricsView(): IObservableValue<MetricsView> {\n    return this.metricsView\n  }\n\n  public getLoading() {\n    return this.isLoading\n  }\n\n  public getIsExporting(): IObservableValue<boolean> {\n    return this.isExporting\n  }\n\n  public getViewUrl(view: MetricsView): string {\n    const queryParams = this.setSearchParams(view, {preview: true})\n    return this.routingService.getFullUrl(queryParams).toString()\n  }\n\n  public getZeroDataState() {\n    return this.zeroData\n  }\n\n  public getCardData() {\n    return this.cardData\n  }\n\n  public getTabs(): IObservableArray<MetricsTab> {\n    return this.tabs\n  }\n\n  public setDateRange = (dateRangeType: DateRangeType, options?: SetOptions) => {\n    const metricsView = this.metricsView.value\n\n    if (metricsView.dateRangeType !== dateRangeType) {\n      const newView = this.getDefaultGlobalView()\n      newView.dateRangeType = dateRangeType\n      newView.filters = metricsView.filters\n\n      if (!options?.preview) {\n        this.setMetricsView(newView)\n        this.fetchCardData()\n      }\n\n      return newView\n    }\n\n    return metricsView\n  }\n\n  public setFilters(filters?: FilterValue[], options?: SetOptions) {\n    const newView = {...this.metricsView.value}\n    if (!Utils.objectEquals(filters, this.metricsView.value.filters)) {\n      newView.filters = filters\n      resetViewToFirstPage(newView)\n\n      this.analyticsService.logEvent('filter.change', 'MetricsService', {view: JSON.stringify(this.metricsView.value)})\n\n      !options?.preview && this.setMetricsView(newView)\n    }\n\n    return newView\n  }\n\n  public setLoading(isLoading: boolean) {\n    if (this.isLoading.value !== isLoading) {\n      this.isLoading.value = isLoading\n      this.setZeroData()\n    }\n  }\n\n  public setPage(zeroIndexPage: number, options?: SetOptions) {\n    // we are virtualizing the pagination, so need to figure out the real offset\n    const virtualOffset = zeroIndexPage * this.metricsView.value.virtualPageSize\n    const realOffset = Utils.getRealOffsetFromVirtual(virtualOffset, REAL_PAGE_SIZE)\n\n    const newView: MetricsView = {...this.metricsView.value, virtualOffset, offset: realOffset}\n    !options?.preview && this.setMetricsView(newView)\n\n    return newView\n  }\n\n  public setOrderBy(orderBy?: OrderBy, options?: SetOptions) {\n    let realViewValue = orderBy\n    const defaultOrderBy = this.getDefaultOrderBy()\n    if (realViewValue?.field === defaultOrderBy.field && realViewValue?.direction === defaultOrderBy.direction) {\n      realViewValue = undefined\n    }\n\n    const newView = {...this.metricsView.value, orderBy: realViewValue}\n\n    if (\n      realViewValue?.field !== this.metricsView.value.orderBy?.field ||\n      realViewValue?.direction !== this.metricsView.value.orderBy?.direction\n    ) {\n      resetViewToFirstPage(newView)\n\n      !options?.preview && this.setMetricsView(newView)\n    }\n\n    return newView\n  }\n\n  public setTab = (tab?: string, options?: SetOptions) => {\n    // if first tab force undefined to avoid mismatched values\n    const realTabValue: string | undefined = tab === this.defaultTab ? undefined : tab\n    if (this.metricsView.value.tab !== realTabValue) {\n      this.lastStateForTab.set(this.metricsView.value.tab ?? '', {...this.metricsView.value})\n      const newView = this.lastStateForTab.get(realTabValue ?? '') || this.getDefaultGlobalView()\n      // set currently selected tab to new tab and reset everything\n      newView.tab = realTabValue\n      newView.dateRangeType = this.metricsView.value.dateRangeType\n      !options?.preview && this.setMetricsView(newView)\n      return newView\n    }\n    return this.metricsView.value\n  }\n\n  public setMetricsViewFromSearchParams(noFetch = false) {\n    const params = this.routingService.getSearchParams()\n    const view = {...this.getMetricsView().value}\n\n    for (const key of params.keys()) {\n      const transform = searchParamToView[key]\n      const value = params.get(key)\n      if (transform) {\n        view[transform.prop as keyof MetricsView] = (\n          transform?.transform ? transform.transform(view, value ?? undefined, this) : value ?? ''\n        ) as never\n      } else {\n        view[key as keyof MetricsView] = (value ?? undefined) as never\n      }\n    }\n\n    // make sure we handle default values where there might not be a query param\n    // for example url?page=2 => url means page is 1 which is default value\n    const defaultKeys = Object.keys(DEFAULT_VIEW)\n      .filter(key => !IGNORED_PROPS.has(key))\n      .filter(key => !params.has(viewToSearchParam[key]?.prop ?? key))\n\n    for (const key of defaultKeys) {\n      view[key as keyof MetricsView] = DEFAULT_VIEW[key as keyof MetricsRequest] as never\n    }\n\n    if (!Utils.objectEquals(view, this.metricsView.value, VIEW_KEYS)) {\n      if (noFetch) {\n        this.metricsView.value = view\n      } else {\n        this.setMetricsView(view)\n      }\n    }\n  }\n\n  public setScope = (): void => {\n    const scope = this.payloadService.getScope()\n\n    if (this.scope !== scope) {\n      // when scope changes we want to:\n      // 1. update tabs\n      // 2. update columns\n      // 3. update filters\n\n      this.scope = scope\n\n      // update tabs\n      this.setTabsConfig()\n      let currentTab = this.metricsView.value.tab\n      if (currentTab) {\n        const currentTabInTabsConfig = this.tabs.value.find(t => t.value === currentTab)\n\n        if (!currentTabInTabsConfig) {\n          this.setTab() // if current tab not in list of tabs then set default tab\n          currentTab = this.metricsView.value.tab\n        }\n      }\n\n      // update columns\n      this.setColumns(currentTab)\n\n      // update filters\n      this.setFilterProviders(currentTab)\n      const filters = this.metricsView.value.filters\n      if (filters) {\n        this.setFilters() // reset filters if filters set to avoid issue with invalid filter for current scope\n      }\n    }\n  }\n\n  public static override registerService = (serviceId: string, serviceFactory: ServiceFactory): void => {\n    const serviceRegistrationId = 'IMetricsService'\n\n    if (!Services.instantiated(serviceRegistrationId) || !Services.registered(serviceRegistrationId)) {\n      // if service has not been instantiated or registered then go ahead and register\n      Services.add(serviceRegistrationId, serviceFactory, true)\n    } else {\n      // service has been instantiated so safe to get without fetching data\n      const service = Services.get<IMetricsService>(serviceRegistrationId)\n\n      if (service.getServiceId() !== serviceId) {\n        Services.add(serviceRegistrationId, serviceFactory, true)\n      }\n    }\n  }\n\n  protected init() {\n    this.setScope()\n    this.setTabsConfig()\n    if (!this.isMetricsViewLoaded() && !this.initialized) {\n      this.setLoading(true)\n      this.initialized = true\n      this.defaultTab = this.getTabs().value[0]?.value ?? ''\n\n      this.setMetricsViewFromSearchParams(true) // make sure we set the view from search params before initial fetch\n\n      // setting columns and filter providers needs to happen AFTER setting view from search params\n      this.setColumns(this.metricsView.value.tab)\n      this.setFilterProviders(this.metricsView.value.tab)\n\n      // need to do this again to make sure filter is initialized correctly since filter providers may have been wrong\n      this.setMetricsViewFromSearchParams(true)\n\n      this.analyticsService.logEvent('view.init', 'MetricsService', {view: JSON.stringify(this.metricsView.value)})\n      this.fetchData(this.metricsView.value)\n\n      this.fetchCardData()\n    }\n  }\n\n  protected setMetricsView(view: MetricsView) {\n    const metricsView: MetricsView = this.metricsView.value\n\n    if (!Utils.objectEquals(view, metricsView, VIEW_KEYS) || !metricsView.totalItems) {\n      this.analyticsService.logEvent('view.change', 'MetricsService', {\n        view: JSON.stringify(view),\n        previous: JSON.stringify(metricsView),\n      })\n\n      this.setLoading(true)\n\n      if (metricsView.tab !== view.tab) {\n        this.setColumns(view.tab)\n        this.setFilterProviders(view.tab)\n      }\n\n      this.metricsView.value = view\n      this.metrics.value = []\n      this.setSearchParams(this.metricsView.value)\n\n      this.fetchData(view)\n    }\n  }\n\n  protected isMetricsViewLoaded() {\n    // only checks if some data has been loaded from fetch at some point, not that data is current\n    return this.metricsView.value !== DEFAULT_VIEW && this.metricsView.value.totalItems !== undefined\n  }\n\n  protected async fetchData(view: MetricsView): Promise<[MetricsView, MetricsItem[]] | undefined> {\n    const setKey = `${view.tab ?? ''}-${view.offset}`\n    // try to prevent data inconsistencies by ignoring cache for old offset after new non-cached offset fetch\n    const ignoreCache = this.offsetsToIgnoreCacheFor.has(setKey)\n    let offsetToIgnoreCacheFor: number | undefined = undefined\n    if (this.latestMetricsRequest.offset /* previous view offset */ !== view.offset) {\n      // this is a real (not virtual) page change so want to skip cache if fetched again, but only prepare this\n      // and handle after successful response in case request fails\n      offsetToIgnoreCacheFor = this.latestMetricsRequest.offset /* previous view offset */\n    }\n    const requestBody = Utils.withOnlyRequestedKeys<MetricsRequest>(view, REQUEST_KEYS)\n    this.latestMetricsRequest = view\n\n    const newSetKey = `${view.tab ?? ''}-${offsetToIgnoreCacheFor}`\n    offsetToIgnoreCacheFor !== undefined && this.offsetsToIgnoreCacheFor.add(newSetKey)\n\n    // this will be cached by default so can continue to call fetch to get response for virtual pagination\n    const response = await this.dataService.post<MetricsResponse<MetricsItem>>(this.getUrlPath(), requestBody, {\n      ignoreCache,\n    })\n\n    if (response) {\n      ignoreCache && this.offsetsToIgnoreCacheFor.delete(setKey)\n\n      const [responseView, responseItems] = Utils.convertFromResponse<MetricsResponseItem, MetricsItem>(response)\n\n      // make sure the latest request matches THIS request view before setting it since this is async\n      if (Utils.objectEquals(view, this.latestMetricsRequest)) {\n        this.metricsView.value = {\n          ...view,\n          ...responseView,\n          totalItems: responseView.totalItems,\n        }\n        const sliceStart = view.virtualOffset - view.offset\n        const sliceEnd = sliceStart + view.virtualPageSize\n        this.metrics.value = responseItems.slice(sliceStart, sliceEnd)\n        this.setLoading(false)\n        this.fixPageOutOfBounds()\n      }\n\n      return [responseView, responseItems]\n    }\n\n    // need to force a rerender to fix bug in pagination component\n    this.metricsView.value = {...this.metricsView.value}\n    this.setLoading(false)\n    return undefined\n  }\n\n  protected async startExport() {\n    const url = this.getUrlPath() + PATHS.getExport\n    const requestBody = Utils.withOnlyRequestedKeys<MetricsExportRequest>(\n      this.metricsView.value,\n      REQUEST_KEYS.filter(k => k !== 'offset' && k !== 'pageSize'),\n    )\n\n    requestBody.headers = this.getColumns().value.map(column => {\n      return {\n        key: column.id!,\n        display: column.header as string,\n      }\n    })\n\n    const start = new Date()\n\n    const response = await this.dataService.post<StartExportResponse>(url, requestBody)\n\n    if (response?.export_id) {\n      let statusResponse: ExportStatusResponse | undefined\n      const durationStart = new Date()\n      let currentDuration = 0\n      do {\n        await Utils.sleep(EXPORT_STATUS_SLEEP_DURATION)\n        statusResponse = await this.getExportStatus(response.export_id)\n        currentDuration = new Date().getTime() - durationStart.getTime()\n      } while (statusResponse?.status === ExportStatus.EXPORT_STATUS_PENDING && currentDuration < EXPORT_TIMEOUT)\n\n      const end = new Date()\n\n      if (statusResponse?.status === ExportStatus.EXPORT_STATUS_COMPLETE) {\n        Utils.downloadFileFromURL(statusResponse.download_url)\n      } else if (statusResponse?.status) {\n        let error = new Error(`Export has failed for export id: ${response.export_id}`)\n        if (statusResponse.status === ExportStatus.EXPORT_STATUS_PENDING) {\n          error = new Error(`Export has taken too long to complete for export id: ${response.export_id}`)\n        } else if (statusResponse.status === ExportStatus.EXPORT_STATUS_UNKNOWN) {\n          error = new Error(`Export has failed with unknown status for export id: ${response.export_id}`)\n        }\n\n        error.name = 'MetricsServiceExportError'\n        this.errorService.log(error, LABELS.exportError)\n      } else {\n        const error = new Error(`Export has failed due to unknown error for export id: ${response.export_id}`)\n        error.name = 'MetricsServiceExportError'\n        this.errorService.log(error, undefined) // don't want to show error message because one is already showing\n      }\n\n      const duration = (end.getTime() - start.getTime()) / 1000\n\n      this.analyticsService.logEvent('export.end', 'MetricsService', {\n        view: JSON.stringify(this.metricsView.value),\n        export_id: response.export_id,\n        duration,\n        success: statusResponse?.status === ExportStatus.EXPORT_STATUS_COMPLETE,\n      })\n    }\n\n    this.isExporting.value = false\n  }\n\n  protected async getExportStatus(exportId: string) {\n    const url = this.getUrlPath() + PATHS.getExportStatus\n\n    return this.dataService.post<ExportStatusResponse>(url, {exportId}, {skipCache: true}) // must skip cache\n  }\n\n  protected getUrlPath(): string {\n    return ssrSafeLocation.pathname\n  }\n\n  protected setSearchParams(view: MetricsView, options?: SetOptions): URLSearchParams {\n    const searchParams = new URLSearchParams()\n\n    for (const key of Object.keys(DEFAULT_VIEW)) {\n      if (!IGNORED_PROPS.has(key) && view[key as keyof MetricsView] !== DEFAULT_VIEW[key as keyof MetricsRequest]) {\n        const transform = viewToSearchParam[key]\n        let searchParamValue = `${view[key as keyof MetricsView] ?? ''}`\n        let searchParamKey = key\n\n        if (transform) {\n          searchParamValue = transform.transform\n            ? (transform.transform(view) as string | undefined) ?? ''\n            : `${view[key as keyof MetricsView] ?? ''}`\n          searchParamKey = transform.prop\n        }\n\n        if (searchParamValue) {\n          searchParams.set(searchParamKey, searchParamValue)\n        }\n      }\n    }\n\n    !options?.preview && this.routingService.setSearchParams(searchParams)\n\n    return searchParams\n  }\n\n  protected setZeroData() {\n    const loading = this.isLoading.value\n    const filters = !!this.metricsView.value.filters\n    const data = !!this.metrics.length\n\n    if (loading) {\n      this.zeroData.value = ZeroDataType.None\n    } else if (!filters && !data) {\n      this.zeroData.value = ZeroDataType.Start\n    } else if (filters && !data) {\n      this.zeroData.value = ZeroDataType.Search\n    } else {\n      this.zeroData.value = ZeroDataType.None\n    }\n  }\n\n  protected fixPageOutOfBounds() {\n    const view = this.metricsView.value\n    if (view.totalItems) {\n      // if page not out of bounds this will be noop\n      this.setPage(Utils.getCurrentPage(view.virtualOffset, view.virtualPageSize, view.totalItems))\n    }\n  }\n\n  protected getDefaultGlobalView(): MetricsView {\n    // return new default view while persisting global props (e.g. tab and dateRangeType)\n    const metricsView = this.metricsView.value\n    const tab = metricsView.tab === this.defaultTab ? undefined : metricsView.tab\n    const newView = {...DEFAULT_VIEW, tab, dateRangeType: metricsView.dateRangeType, version: metricsView.version}\n    return newView\n  }\n\n  protected async fetchCardData() {\n    // Triggers loading state in UI\n    this.cardData.value = new Array<CardData | undefined>(this.cardCount)\n    this.cardData.value.fill(undefined)\n\n    const params = new URLSearchParams()\n    params.append('date_range_type', this.metricsView.value.dateRangeType!)\n\n    if (this.metricsView.value.version) {\n      params.append('version', this.metricsView.value.version)\n    }\n\n    const url = new URL(`${this.getUrlPath()}/${PATHS.summary}`, ssrSafeLocation.origin)\n    url.search = params.toString()\n\n    const data = await this.dataService.get<Summary>(url.toString())\n\n    if (data) {\n      const cardData = Object.entries(data).map<CardData>(([k, v]) => ({\n        metric: k,\n        value: v,\n        ...this.getCardHeading(k),\n      }))\n\n      this.cardData.value = cardData\n    }\n  }\n\n  protected setOrderByHelper = Utils.debounce((field: string) => {\n    // used by table to set orderby without direction\n\n    let direction = OrderByDirection.ORDER_BY_DIRECTION_ASC // UI defaults to asc first, and we have no way of changing it\n    const defaultOrderBy = this.getDefaultOrderBy()\n\n    if (\n      this.metricsView.value.orderBy?.field === field ||\n      (this.metricsView.value.orderBy?.field === undefined && field === defaultOrderBy.field)\n    ) {\n      direction =\n        this.metricsView.value.orderBy?.direction === OrderByDirection.ORDER_BY_DIRECTION_ASC\n          ? OrderByDirection.ORDER_BY_DIRECTION_DESC\n          : OrderByDirection.ORDER_BY_DIRECTION_ASC\n    }\n\n    this.setOrderBy({field, direction})\n  }, 5)\n\n  protected setColumnsHelper(\n    columnMap: Map<string, Array<Column<MetricsItem>>>,\n    nonSortableColumns: Set<string>,\n    tab?: string,\n  ) {\n    // helper method that services that implement MetricsService can call in their own setColumns function\n\n    const columns = tab && columnMap.has(tab) ? [...columnMap.get(tab)!] : [...columnMap.get(this.defaultTab)!]\n\n    for (const col of columns) {\n      if (col.id && !nonSortableColumns.has(col.id)) {\n        col.sortBy = () => {\n          this.setOrderByHelper(Utils.snakeToCamel(col.id!))\n          return 0\n        }\n\n        col.field = 'id' // required for sorting to work, even though it makes no sense\n      }\n    }\n\n    this.getColumns().value = columns.filter(c => Utils.columnValidForScope(c.id ?? '', this.scope))\n  }\n\n  protected setTabsConfig() {\n    switch (this.payloadService.getScope()) {\n      case ScopeType.Org:\n        this.tabs.value = ORG_TABS\n        break\n\n      case ScopeType.Repo:\n        this.tabs.value = REPO_TABS\n        break\n\n      default:\n        this.tabs.value = []\n        break\n    }\n\n    this.defaultTab = this.getTabs().value[0]?.value ?? ''\n  }\n}\n\nexport const REAL_PAGE_SIZE = 500 // need to make sure that this is always divisible by the virtual page size\nexport const VIRTUAL_PAGE_SIZE = 25\nconst EXPORT_TIMEOUT = 5 * TIME_IN_MS.minute\nconst EXPORT_STATUS_SLEEP_DURATION = 1 * TIME_IN_MS.second\n\nconst DEFAULT_VIEW: MetricsView = {\n  dateRangeType: DateRangeType.CurrentMonth,\n  offset: 0,\n  pageSize: REAL_PAGE_SIZE,\n  orderBy: undefined,\n  tab: undefined,\n  filters: undefined,\n  virtualOffset: 0,\n  virtualPageSize: VIRTUAL_PAGE_SIZE,\n  startTime: new Date(),\n  endTime: new Date(),\n  version: undefined,\n  requestType: undefined,\n}\n\nexport const DEFAULT_ORDER_BY_DIRECTION = OrderByDirection.ORDER_BY_DIRECTION_DESC\n\nconst IGNORED_PROPS = new Set<string>()\nIGNORED_PROPS.add('pageSize')\nIGNORED_PROPS.add('offset')\nIGNORED_PROPS.add('startTime')\nIGNORED_PROPS.add('endTime')\nIGNORED_PROPS.add('requestType')\n\nconst REQUEST_KEYS = Object.keys(DEFAULT_VIEW).filter(k => !k.startsWith('virtual') && !k.endsWith('Time'))\nconst VIEW_KEYS = Object.keys(DEFAULT_VIEW).filter(k => !k.endsWith('Time'))\n\nconst searchParamToView: {[key: string]: Transform | undefined} = {\n  page: {\n    prop: 'virtualOffset',\n    transform: (view, str) => {\n      const currentPage = Number(str)\n      const virtualOffset = Utils.getOffsetFromPage(view!.virtualPageSize, currentPage) - 1\n      view!.offset = Utils.getRealOffsetFromVirtual(virtualOffset, REAL_PAGE_SIZE)\n      return virtualOffset\n    },\n  },\n  size: {\n    prop: 'virtualPageSize',\n    transform: (view, str) => {\n      return Number(str)\n    },\n  },\n  filters: {\n    prop: 'filters',\n    transform: (view, str, service) => {\n      return FilterUtils.parseFilter(service!.getFilterProviders().value, str)\n    },\n  },\n  sort: {\n    prop: 'orderBy',\n    transform: (view, str) => {\n      // sort=field,direction if direction is not default, otherwise just field\n      const parts = str!.split(',')\n      const field = parts[0]\n      const direction = parts[1] || DEFAULT_ORDER_BY_DIRECTION\n      return {field, direction}\n    },\n  },\n}\n\nconst viewToSearchParam: {[key: string]: Transform | undefined} = {\n  virtualOffset: {\n    prop: 'page',\n    transform: view => {\n      return Utils.getCurrentPage(view!.virtualOffset, view!.virtualPageSize, view!.totalItems) + 1\n    },\n  },\n  virtualPageSize: {\n    prop: 'size',\n    transform: view => {\n      return view!.virtualPageSize.toString()\n    },\n  },\n  filters: {\n    prop: 'filters',\n    transform: view => {\n      return FilterUtils.stringifyFilters(view!.filters)\n    },\n  },\n  orderBy: {\n    prop: 'sort',\n    transform: view => {\n      return `${view!.orderBy?.field}${\n        DEFAULT_ORDER_BY_DIRECTION === view!.orderBy?.direction ? '' : `,${view!.orderBy?.direction}`\n      }`\n    },\n  },\n}\n\ninterface Transform {\n  prop: string\n  transform?: (view?: MetricsView, str?: string, service?: IMetricsService) => unknown\n}\n\nconst resetViewToFirstPage = (view: MetricsView) => {\n  view.offset = 0\n  view.virtualOffset = 0\n}\n","import {RepoIcon, RepoLockedIcon} from '@primer/octicons-react'\nimport type {Repository} from '../models/models'\nimport {Link, Truncate} from '@primer/react'\nimport {Utils} from '../utils/utils'\nimport {RequestType} from '../models/enums'\n\ninterface MetricsCellProps {\n  children: React.ReactNode\n  tooltip?: string\n}\nexport function MetricsCell(props: MetricsCellProps) {\n  return (\n    <Truncate inline={true} title={props.tooltip || ''} sx={{maxWidth: '100%'}}>\n      <>{props.children}</>\n    </Truncate>\n  )\n}\n\nexport function RepositoryCell(repository?: Repository, linkToMetrics?: boolean, requestType?: RequestType) {\n  if (!repository) {\n    return BlankCell()\n  }\n\n  const icon = repository.public ? (\n    <RepoIcon size={16} className=\"mr-2\" />\n  ) : (\n    <RepoLockedIcon size={16} className=\"mr-2\" />\n  )\n\n  let url = repository.url\n\n  if (linkToMetrics && requestType) {\n    if (requestType === RequestType.Performance) {\n      url += `/actions/metrics/performance`\n    } else if (requestType === RequestType.Usage) {\n      url += `/actions/metrics/usage`\n    }\n  }\n\n  return (\n    <MetricsCell tooltip={repository.name}>\n      {icon} <LinkCell href={url}>{repository.name}</LinkCell>\n    </MetricsCell>\n  )\n}\n\nexport function WorkflowCell(workflow?: string, repository?: Repository, org?: string) {\n  if (workflow && repository && org) {\n    const href = `/${org}/${repository.name}/actions/workflows/${workflow}`\n    const workflowFileName = workflow.split('/').pop()\n    return (\n      <MetricsCell tooltip={workflowFileName || ''}>\n        <LinkCell href={href}>{workflowFileName}</LinkCell>\n      </MetricsCell>\n    )\n  }\n\n  if (workflow) {\n    const workflowFileName = workflow.split('/').pop()\n    return <MetricsCell tooltip={workflowFileName || ''}>{workflowFileName}</MetricsCell>\n  }\n\n  return BlankCell()\n}\n\nexport function NumberCell(num?: number, approximate?: boolean) {\n  let numberToShow = ''\n\n  if (num !== undefined) {\n    let approximateNumber = num\n\n    if (approximate) {\n      approximateNumber = Math.floor(approximateNumber / 1000) * 1000 // round down to nearest thousand\n    }\n\n    numberToShow = approximateNumber?.toLocaleString() ?? ''\n  }\n\n  if (numberToShow && approximate) {\n    numberToShow += '+'\n  }\n\n  return <MetricsCell tooltip={numberToShow}>{numberToShow}</MetricsCell>\n}\n\nexport function PercentCell(num?: number) {\n  let numberToShow = ''\n\n  if (num !== undefined) {\n    numberToShow = Utils.getPercentage(num)\n  }\n\n  return <MetricsCell>{numberToShow}</MetricsCell>\n}\n\nexport function DurationCell(num?: number) {\n  // number => xd xh xm xs\n  let textToShow = ''\n\n  if (num !== undefined) {\n    textToShow = Utils.getDuration(num)\n  }\n\n  return <MetricsCell>{textToShow}</MetricsCell>\n}\n\nexport function TextCell(str?: string) {\n  return <MetricsCell tooltip={str ?? ''}>{str ?? ''}</MetricsCell>\n}\n\ninterface LinkCellProps {\n  href: string\n  ariaLabel?: string\n  children: React.ReactNode\n}\nfunction LinkCell(props: LinkCellProps) {\n  return (\n    <Link href={props.href} aria-label={props.ariaLabel}>\n      {props.children}\n    </Link>\n  )\n}\n\nfunction BlankCell() {\n  return <></>\n}\n\ntry{ MetricsCell.displayName ||= 'MetricsCell' } catch {}\ntry{ RepositoryCell.displayName ||= 'RepositoryCell' } catch {}\ntry{ WorkflowCell.displayName ||= 'WorkflowCell' } catch {}\ntry{ NumberCell.displayName ||= 'NumberCell' } catch {}\ntry{ PercentCell.displayName ||= 'PercentCell' } catch {}\ntry{ DurationCell.displayName ||= 'DurationCell' } catch {}\ntry{ TextCell.displayName ||= 'TextCell' } catch {}\ntry{ LinkCell.displayName ||= 'LinkCell' } catch {}\ntry{ BlankCell.displayName ||= 'BlankCell' } catch {}","import {FilterProviderType, FilterValueType} from '@github-ui/filter'\nimport type {\n  FilterQuery,\n  FilterKey,\n  FilterSuggestion,\n  SuppliedFilterProviderOptions,\n  MutableFilterBlock,\n  AnyBlock,\n  FilterProvider,\n  ARIAFilterSuggestion,\n  FilterValueData,\n  ValueRowProps,\n  FilterConfig,\n  IndexedBlockValueItem,\n  FilterBlock,\n} from '@github-ui/filter'\nimport {AsyncFilterProvider, StaticFilterProvider} from '@github-ui/filter/providers'\nimport {getFilterValue, getUnescapedFilterValue} from '@github-ui/filter/utils'\nimport {Services} from '../services/services'\nimport type {IFilterService} from '../services/filter-service'\n\nexport class NumberFilterProvider extends StaticFilterProvider {\n  constructor(filter: FilterKey, values: FilterSuggestion[], options?: SuppliedFilterProviderOptions) {\n    super(filter, values, {...options, filterTypes: {multiKey: false, valueless: false}})\n    this.type = FilterProviderType.Number\n  }\n}\nexport class ValuesFilterProvider extends StaticFilterProvider {\n  constructor(filter: FilterKey, values: FilterSuggestion[], options?: SuppliedFilterProviderOptions) {\n    super(filter, values, {...options, filterTypes: {multiKey: false, valueless: false}})\n    this.type = values.length === 0 ? FilterProviderType.RawText : FilterProviderType.Select\n  }\n}\n\nexport class AsyncSuggestionsFilterProvider<T> extends AsyncFilterProvider<T> implements FilterProvider {\n  public transform: (suggestion: T) => string\n  private readonly filterService = Services.get<IFilterService>('IFilterService')\n\n  constructor(\n    filter: FilterKey,\n    endpoint: string,\n    transform: (suggestion: T) => string,\n    options?: SuppliedFilterProviderOptions,\n  ) {\n    super(filter, {\n      ...options,\n      filterTypes: {multiKey: false, valueless: false},\n    })\n    this.type = FilterProviderType.Select\n    this.suggestionEndpoint = endpoint\n    this.validationEndpoint = endpoint\n    this.transform = transform\n  }\n\n  async getSuggestions(\n    filterQuery: FilterQuery,\n    filterBlock: AnyBlock | MutableFilterBlock,\n    config: FilterConfig,\n    caretIndex?: number | null,\n  ) {\n    return this.processSuggestions(filterQuery, filterBlock, this.processSuggestion.bind(this), caretIndex)\n  }\n\n  getValueRowProps(value: FilterValueData): ValueRowProps {\n    return {\n      text: value.displayName ?? getFilterValue(value.value) ?? '',\n    }\n  }\n\n  override async fetchSuggestions(value: string): Promise<T[] | null> {\n    try {\n      const fetchResults = await this.filterService.getAsyncFilterSuggestions(\n        this as unknown as AsyncSuggestionsFilterProvider<unknown>,\n        value,\n        this.abortSuggestionsController.signal,\n      )\n\n      // make sure whatever was typed is always selectable and the first result\n      const results: string[] = []\n      if (value) {\n        results.push(value)\n      }\n\n      // make sure we don't have duplicate for what was typed\n      if (fetchResults) {\n        results.push(...fetchResults.filter(v => v !== value))\n      }\n\n      const typedResults = results as unknown as T[]\n\n      if (!typedResults?.length) {\n        return null\n      }\n\n      return typedResults\n    } catch {\n      return null\n    }\n  }\n\n  private processSuggestion(data: T, _value: string): ARIAFilterSuggestion {\n    const suggestion = this.transform(data)\n\n    return {\n      type: FilterValueType.Value,\n      value: suggestion,\n      ariaLabel: suggestion,\n      priority: 0,\n    }\n  }\n\n  override async validateFilterBlockValues(\n    filterQuery: FilterQuery,\n    block: FilterBlock,\n    values: IndexedBlockValueItem[],\n  ): Promise<IndexedBlockValueItem[]> {\n    const valuesIndex: Record<number, IndexedBlockValueItem> = {}\n    const validations = values.map(async (v, i) => {\n      const extractedValue = getUnescapedFilterValue(v.value) ?? ''\n      valuesIndex[i] = {\n        ...v,\n        valid: this.filterService.isFilterValueValid(extractedValue, this),\n      }\n      return\n    })\n\n    await Promise.all(validations)\n\n    return Object.values(valuesIndex)\n  }\n}\n\nexport class AsyncStringSuggestionsFilterProvider extends AsyncSuggestionsFilterProvider<string> {\n  constructor(filter: FilterKey, endpoint: string, options?: SuppliedFilterProviderOptions) {\n    super(filter, endpoint, str => str, options)\n  }\n}\n","import type {FilterKey, FilterProvider, FilterSuggestion} from '@github-ui/filter'\nimport {\n  ClockIcon,\n  GlobeIcon,\n  PackageIcon,\n  PulseIcon,\n  RepoIcon,\n  RocketIcon,\n  WorkflowIcon,\n  XCircleIcon,\n} from '@primer/octicons-react'\nimport {LABELS} from '../resources/labels'\nimport {COLUMNS} from './constants'\nimport {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {\n  AsyncStringSuggestionsFilterProvider,\n  NumberFilterProvider,\n  ValuesFilterProvider,\n} from '../utils/filter-providers'\nimport {PATHS} from './controller_paths'\nimport type {TabType} from '../models/enums'\nimport {Utils} from '../utils/utils'\n\nexport interface FilterItem {\n  key: string\n  priority: number\n}\n\nexport const enum FilterType {\n  Number,\n  Values,\n  Async,\n}\n\nexport const FILTER = 0\nexport const FILTER_TYPE = 1\n\n// map key (camelCase) must match object key (snake_case)\nexport const FILTERS: {[key: string]: [Omit<FilterKey, 'priority'>, FilterType]} = {\n  // common\n  workflowFileName: [\n    {displayName: LABELS.workflow, key: COLUMNS.workflowFileName, icon: WorkflowIcon},\n    FilterType.Async,\n  ],\n  repository: [{displayName: LABELS.sourceRepository, key: COLUMNS.repository, icon: RepoIcon}, FilterType.Async],\n  jobName: [{displayName: LABELS.job, key: COLUMNS.jobName, icon: PulseIcon}, FilterType.Async],\n  runnerRuntime: [{displayName: LABELS.runtimeOs, key: COLUMNS.runnerRuntime, icon: GlobeIcon}, FilterType.Values],\n  runnerType: [{displayName: LABELS.runnerType, key: COLUMNS.runnerType, icon: PackageIcon}, FilterType.Values],\n\n  // usage\n  totalMinutes: [{displayName: LABELS.totalMinutes, key: COLUMNS.totalMinutes, icon: ClockIcon}, FilterType.Number],\n  jobExecutions: [{displayName: LABELS.jobRuns, key: COLUMNS.jobExecutions, icon: RocketIcon}, FilterType.Number],\n  jobs: [{displayName: LABELS.jobs, key: COLUMNS.jobs, icon: PulseIcon}, FilterType.Number],\n  workflows: [{displayName: LABELS.workflows, key: COLUMNS.workflows, icon: WorkflowIcon}, FilterType.Number],\n  workflowExecutions: [\n    {displayName: LABELS.workflowRuns, key: COLUMNS.workflowExecutions, icon: RocketIcon},\n    FilterType.Number,\n  ],\n\n  // performance\n  averageRunMinutes: [\n    {displayName: LABELS.avgRunTimeMinutes, key: COLUMNS.filterRunTimeMinutes, icon: ClockIcon},\n    FilterType.Number,\n  ],\n  averageQueueMinutes: [\n    {displayName: LABELS.avgQueueTimeMinutes, key: COLUMNS.filterQueueTimeMinutes, icon: ClockIcon},\n    FilterType.Number,\n  ],\n  failureRate: [{displayName: LABELS.failureRate, key: COLUMNS.failureRate, icon: XCircleIcon}, FilterType.Number],\n}\n\nexport const NUMBER_COUNT_VALUE = [\n  {value: '>0', displayName: LABELS.filters.atLeast1, priority: 1},\n  {value: '>10', displayName: LABELS.filters.moreThan10, priority: 2},\n]\n\nexport const RUNTIME_VALUES = [\n  {value: LABELS.runtimes.linux, priority: 1},\n  {value: LABELS.runtimes.windows, priority: 2},\n  {value: LABELS.runtimes.macos, priority: 3},\n]\n\nexport const RUNNER_TYPE_VALUES = [\n  {value: LABELS.runnerTypes.hosted, priority: 1},\n  {value: LABELS.runnerTypes.hostedLarger, priority: 2},\n  {value: LABELS.runnerTypes.selfHosted, priority: 3},\n]\n\nexport function getFilters(\n  tabToFiltersMap: Map<TabType, FilterItem[]>,\n  defaultTabFilters: FilterItem[],\n  tab?: string,\n): FilterProvider[] {\n  const filterItems =\n    tab && tabToFiltersMap.has(tab as TabType) ? tabToFiltersMap.get(tab as TabType) : defaultTabFilters\n  const result = filterItems!\n    .map(filterItem => {\n      const filterAndType = FILTERS[Utils.snakeToCamel(filterItem.key)]!\n      const filter = filterAndType[FILTER] as unknown as FilterKey\n      filter.priority = filterItem.priority\n      const type = filterAndType[FILTER_TYPE]\n\n      if (type === FilterType.Values) {\n        let suggestions: FilterSuggestion[] | undefined = undefined\n        if (filterItem.key === COLUMNS.runnerRuntime) {\n          suggestions = RUNTIME_VALUES\n        }\n        if (filterItem.key === COLUMNS.runnerType) {\n          suggestions = RUNNER_TYPE_VALUES\n        }\n\n        if (suggestions) {\n          return new ValuesFilterProvider(filter, suggestions)\n        }\n      }\n\n      if (type === FilterType.Async) {\n        const url = ssrSafeLocation.pathname\n        let endpoint = ''\n        if (filterItem.key === COLUMNS.workflowFileName) {\n          endpoint = url + PATHS.getWorkflows\n        }\n\n        if (filterItem.key === COLUMNS.repository) {\n          endpoint = url + PATHS.getRepositories\n        }\n\n        if (filterItem.key === COLUMNS.jobName) {\n          endpoint = url + PATHS.getJobs\n        }\n\n        if (endpoint) {\n          return new AsyncStringSuggestionsFilterProvider(filter, endpoint)\n        }\n      }\n\n      if (type === FilterType.Number) {\n        return new NumberFilterProvider(filter, NUMBER_COUNT_VALUE)\n      }\n\n      return undefined\n    })\n    .filter(filter => filter !== undefined) as FilterProvider[]\n\n  return result\n}\n","import type {FilterProvider} from '@github-ui/filter'\nimport {TabType} from '../../../common/models/enums'\nimport {getFilters, type FilterItem} from '../../../common/constants/filters'\nimport {COLUMNS} from '../../../common/constants/constants'\n\nconst WORKFLOW_FILTERS: FilterItem[] = [\n  {key: COLUMNS.repository, priority: 1},\n  {key: COLUMNS.workflowFileName, priority: 1},\n  {key: COLUMNS.runnerRuntime, priority: 2},\n  {key: COLUMNS.runnerType, priority: 2},\n  {key: COLUMNS.totalMinutes, priority: 3},\n  {key: COLUMNS.workflowExecutions, priority: 3},\n  {key: COLUMNS.jobs, priority: 3},\n]\n\nconst JOBS_FILTERS: FilterItem[] = [\n  {key: COLUMNS.repository, priority: 1},\n  {key: COLUMNS.jobName, priority: 1},\n  {key: COLUMNS.workflowFileName, priority: 1},\n  {key: COLUMNS.runnerRuntime, priority: 2},\n  {key: COLUMNS.runnerType, priority: 2},\n  {key: COLUMNS.totalMinutes, priority: 3},\n  {key: COLUMNS.jobExecutions, priority: 3},\n]\n\nconst REPOSITORIES_FILTERS: FilterItem[] = [\n  {key: COLUMNS.repository, priority: 1},\n  {key: COLUMNS.totalMinutes, priority: 2},\n  {key: COLUMNS.workflowExecutions, priority: 3},\n  {key: COLUMNS.workflows, priority: 3},\n]\n\nconst RUNTIME_FILTERS: FilterItem[] = [\n  {key: COLUMNS.runnerRuntime, priority: 1},\n  {key: COLUMNS.totalMinutes, priority: 2},\n  {key: COLUMNS.workflowExecutions, priority: 3},\n  {key: COLUMNS.workflows, priority: 3},\n]\n\nconst RUNNER_TYPE_FILTERS: FilterItem[] = [\n  {key: COLUMNS.runnerType, priority: 1},\n  {key: COLUMNS.totalMinutes, priority: 2},\n  {key: COLUMNS.workflowExecutions, priority: 3},\n  {key: COLUMNS.workflows, priority: 3},\n]\n\nconst TAB_TO_FILTERS_MAPPING = new Map<TabType, FilterItem[]>()\nTAB_TO_FILTERS_MAPPING.set(TabType.Workflows, WORKFLOW_FILTERS)\nTAB_TO_FILTERS_MAPPING.set(TabType.Jobs, JOBS_FILTERS)\nTAB_TO_FILTERS_MAPPING.set(TabType.Repositories, REPOSITORIES_FILTERS)\nTAB_TO_FILTERS_MAPPING.set(TabType.Runtime, RUNTIME_FILTERS)\nTAB_TO_FILTERS_MAPPING.set(TabType.RunnerType, RUNNER_TYPE_FILTERS)\n\nexport function getUsageFilters(tab?: string): FilterProvider[] {\n  return getFilters(TAB_TO_FILTERS_MAPPING, WORKFLOW_FILTERS, tab)\n}\n","import type {Column} from '@primer/react/drafts'\nimport type {CardData, CardHeading, MetricsItem, OrderBy} from '../../../common/models/models'\nimport type {IObservableArray} from '../../../common/observables/observable'\nimport {ObservableArray} from '../../../common/observables/observable'\nimport type {IMetricsService} from '../../../common/services/metrics-service'\nimport {DEFAULT_ORDER_BY_DIRECTION, MetricsService} from '../../../common/services/metrics-service'\nimport {LABELS} from '../../../common/resources/labels'\nimport {NumberCell, RepositoryCell, TextCell, WorkflowCell} from '../../../common/components/MetricsCells'\nimport {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport type {FilterProvider} from '@github-ui/filter'\nimport {getUsageFilters} from '../utils/filter-providers'\nimport {GET_DATE_RANGE_LABEL, RequestType, TabType} from '../../../common/models/enums'\nimport type {\n  JobMetricsItem,\n  RepositoryMetricsItem,\n  RunnerMetricsItem,\n  RuntimeMetricsItem,\n  WorkflowMetricsItem,\n} from '../models/models'\nimport {COLUMNS} from '../../../common/constants/constants'\nimport {Utils} from '../../../common/utils/utils'\n\nexport interface IUsageService extends IMetricsService {}\n\nexport class UsageService extends MetricsService implements IUsageService {\n  public static override serviceId = 'IOrgUsageService'\n  protected readonly columns = new ObservableArray<Column<MetricsItem>>([])\n  protected readonly filterProviders = new ObservableArray<FilterProvider>()\n  protected readonly cardData = new ObservableArray<CardData | undefined>()\n  protected readonly cardCount = 2\n\n  protected columnConfig: Map<string, Array<Column<MetricsItem>>>\n\n  constructor() {\n    super()\n    this.metricsView.value.requestType = RequestType.Usage\n    this.setColumnConfig()\n    this.init()\n  }\n\n  public override getServiceId(): string {\n    return UsageService.serviceId\n  }\n\n  public override getColumns(): IObservableArray<Column<MetricsItem>> {\n    return this.columns\n  }\n\n  public override getFilterProviders(): IObservableArray<FilterProvider> {\n    return this.filterProviders\n  }\n\n  public override getDefaultOrderBy(): OrderBy {\n    return {field: 'totalMinutes', direction: DEFAULT_ORDER_BY_DIRECTION}\n  }\n\n  public getColumnConfig() {\n    // used for tests\n    return this.columnConfig\n  }\n\n  protected setColumns(tab?: string) {\n    this.setColumnsHelper(this.columnConfig, NON_SORTABLE_COLUMNS, tab)\n  }\n\n  protected setFilterProviders(tab?: string) {\n    this.filterProviders.value = getUsageFilters(tab).filter(f => Utils.columnValidForScope(f.key, this.scope))\n  }\n\n  protected getCardHeading(key: string): CardHeading {\n    const dateRange = GET_DATE_RANGE_LABEL(this.metricsView.value.dateRangeType!).toLowerCase()\n\n    switch (key) {\n      case 'total_minutes':\n        return Utils.getCardHeading(\n          LABELS.cardHeadings.totalMinutesTitle,\n          LABELS.cardHeadings.totalMinutesDescription,\n          dateRange,\n        )\n      case 'job_executions':\n        return Utils.getCardHeading(\n          LABELS.cardHeadings.totalJobTitle,\n          LABELS.cardHeadings.totalJobDescription,\n          dateRange,\n        )\n      default:\n        return {title: '', description: ''}\n    }\n  }\n\n  protected setColumnConfig() {\n    const isRepoLevelEnabled = this.payloadService.getFeatureFlag('actions_usage_metrics_repo')\n    const tableColumns = new Map<string, Array<Column<MetricsItem>>>()\n\n    const workflowTabColumns: Array<Column<WorkflowMetricsItem>> = [\n      {\n        id: COLUMNS.workflowFilePath,\n        header: LABELS.workflow,\n        width: 'growCollapse',\n        renderCell: data => WorkflowCell(data.workflowFilePath, data.repository, ORG_NAME),\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.repository,\n        header: LABELS.sourceRepository,\n        width: 'growCollapse',\n        renderCell: data => RepositoryCell(data.repository, isRepoLevelEnabled, RequestType.Usage),\n        maxWidth: LARGE_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.totalMinutes,\n        header: LABELS.totalMinutes,\n        align: 'end',\n        renderCell: data => NumberCell(data.totalMinutes),\n        maxWidth: SMALL_COLUMN_WIDTH,\n        minWidth: MEDIUM_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.workflowExecutions,\n        header: LABELS.workflowRuns,\n        align: 'end',\n        renderCell: data => NumberCell(data.workflowExecutions?.count, data.workflowExecutions?.approximate),\n        maxWidth: SMALL_COLUMN_WIDTH,\n        minWidth: MEDIUM_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.jobs,\n        header: LABELS.jobs,\n        renderCell: data => NumberCell(data.jobs?.count, data.jobs?.approximate),\n        align: 'end',\n        maxWidth: EXTRA_SMALL_COLUMN_WIDTH,\n        minWidth: EXTRA_SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.runnerType,\n        header: LABELS.runnerType,\n        renderCell: data => TextCell(data.runnerType),\n        maxWidth: SMALL_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.runnerRuntime,\n        header: LABELS.runtimeOs,\n        renderCell: data => TextCell(data.runnerRuntime),\n        maxWidth: SMALL_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n    ]\n\n    const jobsTabColumns: Array<Column<JobMetricsItem>> = [\n      {\n        id: COLUMNS.jobName,\n        header: LABELS.job,\n        width: 'growCollapse',\n        renderCell: data => TextCell(data.jobName),\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.workflowFilePath,\n        header: LABELS.workflow,\n        width: 'growCollapse',\n        renderCell: data => WorkflowCell(data.workflowFilePath, data.repository, ORG_NAME),\n        maxWidth: LARGE_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.repository,\n        header: LABELS.sourceRepository,\n        width: 'growCollapse',\n        renderCell: data => RepositoryCell(data.repository, isRepoLevelEnabled, RequestType.Usage),\n        maxWidth: LARGE_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.totalMinutes,\n        header: LABELS.totalMinutes,\n        align: 'end',\n        renderCell: data => NumberCell(data.totalMinutes),\n        maxWidth: MEDIUM_COLUMN_WIDTH,\n        minWidth: MEDIUM_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.jobExecutions,\n        header: LABELS.jobRuns,\n        align: 'end',\n        renderCell: data => NumberCell(data.jobExecutions),\n        maxWidth: EXTRA_SMALL_COLUMN_WIDTH,\n        minWidth: EXTRA_SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.runnerType,\n        header: LABELS.runnerType,\n        renderCell: data => TextCell(data.runnerType),\n        maxWidth: SMALL_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.runnerRuntime,\n        header: LABELS.runtimeOs,\n        renderCell: data => TextCell(data.runnerRuntime),\n        maxWidth: SMALL_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n    ]\n\n    const repoTabColumns: Array<Column<RepositoryMetricsItem>> = [\n      {\n        id: COLUMNS.repository,\n        header: LABELS.sourceRepository,\n        width: 'growCollapse',\n        renderCell: data => RepositoryCell(data.repository, isRepoLevelEnabled, RequestType.Usage),\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.totalMinutes,\n        header: LABELS.totalMinutes,\n        align: 'end',\n        renderCell: data => NumberCell(data.totalMinutes),\n        maxWidth: MEDIUM_COLUMN_WIDTH,\n        minWidth: MEDIUM_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.workflowExecutions,\n        header: LABELS.workflowRuns,\n        align: 'end',\n        renderCell: data => NumberCell(data.workflowExecutions?.count, data.workflowExecutions?.approximate),\n        maxWidth: MEDIUM_COLUMN_WIDTH,\n        minWidth: MEDIUM_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.workflows,\n        header: LABELS.workflows,\n        align: 'end',\n        renderCell: data => NumberCell(data.workflows?.count, data.workflows?.approximate),\n        maxWidth: SMALL_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n    ]\n\n    const runtimeTabColumns: Array<Column<RuntimeMetricsItem>> = [\n      {\n        id: COLUMNS.runnerRuntime,\n        header: LABELS.runtimeOs,\n        renderCell: data => TextCell(data.runnerRuntime),\n        width: 'growCollapse',\n        maxWidth: SMALL_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.totalMinutes,\n        header: LABELS.totalMinutes,\n        align: 'end',\n        renderCell: data => NumberCell(data.totalMinutes),\n        width: 'growCollapse',\n        minWidth: LARGE_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.workflowExecutions,\n        header: LABELS.workflowRuns,\n        align: 'end',\n        renderCell: data => NumberCell(data.workflowExecutions?.count, data.workflowExecutions?.approximate),\n        maxWidth: MEDIUM_COLUMN_WIDTH,\n        minWidth: MEDIUM_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.workflows,\n        header: LABELS.workflows,\n        align: 'end',\n        renderCell: data => NumberCell(data.workflows?.count, data.workflows?.approximate),\n        maxWidth: SMALL_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n    ]\n\n    const runnerTabColumns: Array<Column<RunnerMetricsItem>> = [\n      {\n        id: COLUMNS.runnerType,\n        header: LABELS.runnerType,\n        renderCell: data => TextCell(data.runnerType),\n        maxWidth: SMALL_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.totalMinutes,\n        header: LABELS.totalMinutes,\n        align: 'end',\n        renderCell: data => NumberCell(data.totalMinutes),\n        width: 'growCollapse',\n        minWidth: LARGE_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.workflowExecutions,\n        header: LABELS.workflowRuns,\n        align: 'end',\n        renderCell: data => NumberCell(data.workflowExecutions?.count, data.workflowExecutions?.approximate),\n        maxWidth: MEDIUM_COLUMN_WIDTH,\n        minWidth: MEDIUM_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.workflows,\n        header: LABELS.workflows,\n        align: 'end',\n        renderCell: data => NumberCell(data.workflows?.count, data.workflows?.approximate),\n        maxWidth: SMALL_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n    ]\n\n    tableColumns.set(TabType.Workflows, workflowTabColumns as Array<Column<MetricsItem>>)\n    tableColumns.set(TabType.Jobs, jobsTabColumns as Array<Column<MetricsItem>>)\n    tableColumns.set(TabType.Repositories, repoTabColumns as Array<Column<MetricsItem>>)\n    tableColumns.set(TabType.Runtime, runtimeTabColumns as Array<Column<MetricsItem>>)\n    tableColumns.set(TabType.RunnerType, runnerTabColumns as Array<Column<MetricsItem>>)\n\n    this.columnConfig = tableColumns\n  }\n}\n\n// /orgs/<org name>/actions/metrics/usage => ['', orgs, <org name>, ...]\nconst ORG_NAME = ssrSafeLocation.pathname.split('/')[2] || ''\n\nconst LARGE_COLUMN_WIDTH = 225\nconst MEDIUM_COLUMN_WIDTH = 150\nconst SMALL_COLUMN_WIDTH = 125\nconst EXTRA_SMALL_COLUMN_WIDTH = 100\n\nconst NON_SORTABLE_COLUMNS = new Set<string>([COLUMNS.repository])\n","import {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {MetricsLayoutTable} from '../../../common/components/MetricsLayoutTable'\nimport type {MetricsPayload} from '../../../common/models/models'\nimport {LABELS} from '../../../common/resources/labels'\nimport type {IPayloadService} from '../../../common/services/payload-service'\nimport {Services} from '../../../common/services/services'\nimport {UsageService} from '../services/usage-service'\nimport type {IMetricsService} from '../../../common/services/metrics-service'\n\nexport interface UsageProps {\n  beta?: boolean\n  showSideNav?: boolean\n}\n\nexport function Usage(props: UsageProps) {\n  const payload = useRoutePayload<MetricsPayload>()\n  const payloadService = Services.get<IPayloadService>('IPayloadService')\n  payloadService.init(payload)\n\n  UsageService.registerService(UsageService.serviceId, UsageService)\n  const metricsService = Services.get<IMetricsService>('IMetricsService')\n  metricsService.setScope()\n\n  return <MetricsLayoutTable title={LABELS.actionsUsageMetrics} beta={props.beta} hideSideNav={props.showSideNav} />\n}\n\ntry{ Usage.displayName ||= 'Usage' } catch {}","import {Usage} from '../views/usage/components/Usage'\n\nexport function OrgUsage() {\n  return <Usage />\n}\n\ntry{ OrgUsage.displayName ||= 'OrgUsage' } catch {}","import type {IService} from './services'\nimport {ServiceBase} from './services'\nimport {sendEvent} from '@github-ui/hydro-analytics'\n\nexport interface IAnalyticsService extends IService {\n  logEvent: (eventType: string, target: string, payload: object) => void\n}\n\nexport class AnalyticsService extends ServiceBase implements IAnalyticsService {\n  public static override readonly serviceId = 'IAnalyticsService'\n\n  logEvent = (eventType: string, target: string, payload: object) => {\n    sendEvent(`${CONTEXT.app_name}.${eventType}`, {...CONTEXT, ...payload, target})\n  }\n}\n\nconst CONTEXT = {\n  app_name: 'actions-metrics',\n  category: '',\n  react: true,\n}\n","import type {IService} from './services'\nimport {ServiceBase} from './services'\n\nexport interface ICacheService extends IService {\n  clear: () => void\n  get: <T>(key: string) => T | undefined\n  remove: (key: string) => void\n  set: (key: string, object: unknown, expiration?: Date) => void\n}\n\nexport class CacheService extends ServiceBase implements ICacheService {\n  public static override readonly serviceId = 'ICacheService'\n  private cache = new Map<string, CacheItem>()\n\n  public clear() {\n    this.cache.clear()\n  }\n\n  public get<T>(key: string): T | undefined {\n    const item = this.cache.get(key)\n    if (item) {\n      if (!item.expiration || item.expiration > new Date()) {\n        return item.object as T\n      }\n      this.remove(key)\n    }\n\n    return undefined\n  }\n\n  public remove(key: string) {\n    this.cache.delete(key)\n  }\n\n  public set(key: string, object: unknown, expiration?: Date | undefined) {\n    this.cache.set(key, {object, expiration})\n  }\n}\n\ninterface CacheItem {\n  object: unknown\n  expiration?: Date\n}\n","import {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport type {IService} from './services'\nimport {ServiceBase, Services} from './services'\nimport type {ICacheService} from './cache-service'\nimport {Utils} from '../utils/utils'\nimport type {IErrorService} from './error-service'\nimport {LABELS} from '../resources/labels'\n\nexport interface IDataService extends IService {\n  post: <T>(url: string, body: object, options?: FetchOptions) => Promise<T | undefined>\n  get: <T>(url: string, options?: FetchOptions) => Promise<T | undefined>\n}\n\nexport class DataService extends ServiceBase implements IDataService {\n  public static override readonly serviceId = 'IDataService'\n  private readonly cacheService = Services.get<ICacheService>('ICacheService')\n  private readonly errorService = Services.get<IErrorService>('IErrorService')\n\n  public post = async <T>(url: string, body: object, options?: FetchOptions): Promise<T | undefined> => {\n    return this.fetchAndCache<T>(Method.Post, url, body, options)\n  }\n\n  public get = async <T>(url: string, options?: FetchOptions): Promise<T | undefined> => {\n    return this.fetchAndCache<T>(Method.Get, url, undefined, options)\n  }\n\n  protected fetchAndCache = <T>(\n    method: Method,\n    url: string,\n    body?: object,\n    options?: FetchOptions,\n  ): Promise<T | undefined> => {\n    const cacheKey = options?.cacheKey ?? getCacheKey(url, body)\n    if (options?.ignoreCache) {\n      const response = this.fetch(method, url, body, options)\n        // eslint-disable-next-line github/no-then\n        .then(fetchResponse => {\n          try {\n            if (fetchResponse.ok) {\n              return fetchResponse.json() as Promise<T>\n            } else {\n              throw new Error(fetchResponse.statusText)\n            }\n          } catch (e) {\n            this.cacheService.remove(cacheKey)\n\n            // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n            if (e.name !== 'AbortError') {\n              // sometimes error is lacking any info, so create an error with some default values just in case\n              const eAsError = e as Error\n              const error = new Error(\n                eAsError.message || `Unknown error when fetching data from ${url} with body: ${JSON.stringify(body)}`,\n              )\n              error.cause = eAsError.cause\n              error.stack = eAsError.stack\n              error.name = eAsError.name || 'UnknownFetchError'\n\n              if (options?.handleErrors === undefined ?? options.handleErrors) {\n                this.errorService.log(error, LABELS.fetchError)\n              } else {\n                throw error\n              }\n            }\n\n            return undefined\n          }\n        })\n\n      if (!options.skipCache) {\n        const expiration = options.neverExpires ? undefined : options.customExpiration ?? Utils.in15Minutes()\n        this.cacheService.set(cacheKey, response, expiration)\n      }\n\n      return response\n    }\n\n    const cachedResult = this.cacheService.get<Promise<T | undefined>>(cacheKey)\n\n    if (cachedResult !== undefined) {\n      return cachedResult\n    }\n\n    return this.fetchAndCache(method, url, body, {...(options || {}), ignoreCache: true, cacheKey})\n  }\n\n  protected fetch = async (method: string, url: string, body?: object, options?: FetchOptions): Promise<Response> => {\n    let convertedBody: object | undefined = undefined\n\n    if (body && !options?.skipSnakeConversion) {\n      convertedBody = Utils.camelToSnakeObject(body)\n    }\n\n    return this.verifiedFetchJSONWrapper(method, url, convertedBody, options)\n  }\n\n  protected async verifiedFetchJSONWrapper(\n    method: string,\n    url: string,\n    body?: object,\n    options?: FetchOptions,\n  ): Promise<Response> {\n    return verifiedFetchJSON(url, {...(options?.requestInit || {}), method, body})\n  }\n}\n\nexport interface FetchOptions {\n  /**\n   * custom request init to pass to fetch\n   */\n  requestInit?: Omit<RequestInit, 'body' | 'method'>\n\n  /**\n   * custom key to use for cache, default is stringify of body\n   */\n  cacheKey?: string\n\n  /**\n   * add to cache with custom expiration (default is 15 minutes)\n   */\n  customExpiration?: Date\n\n  /**\n   * defaults to true, catches errors and logs in error service. Does nothing when false.\n   */\n  handleErrors?: boolean\n\n  /**\n   * skip trying to get value from cache when true\n   */\n  ignoreCache?: boolean\n\n  /**\n   * add to cache without expiration\n   */\n  neverExpires?: boolean\n\n  /**\n   * skip caching the object for future requests\n   */\n  skipCache?: boolean\n\n  /**\n   * skip converting body to snake case\n   */\n  skipSnakeConversion?: boolean\n}\n\nconst getCacheKey = (url: string, obj?: object) => {\n  return obj ? url + JSON.stringify(obj) : url\n}\n\nconst enum Method {\n  Get = 'GET',\n  Post = 'POST',\n}\n","import {ObservableArray, type IReadonlyObservableArray} from '../observables/observable'\nimport type {IService} from './services'\nimport {ServiceBase} from './services'\n\nexport interface IErrorService extends IService {\n  getMessagesToDisplay: () => IReadonlyObservableArray<ErrorMessage>\n  log: (error: Error, displayMessage?: string) => void\n  removeMessageToDisplay: (id: string) => void\n}\n\nexport class ErrorService extends ServiceBase implements IErrorService {\n  public static override readonly serviceId = 'IErrorService'\n  private readonly errorMessages = new ObservableArray<ErrorMessage>()\n\n  public log = (error: Error, displayMessage?: string) => {\n    if (displayMessage?.length) {\n      const errorMessage: ErrorMessage = {id: getRandomId(), message: displayMessage}\n      this.errorMessages.push(errorMessage)\n    }\n\n    // this was the recommended way of logging an error since we want to throw while making sure it never interrupts\n    // execution. We need to throw uncaught so that it will get logged to sentry\n    setTimeout(() => {\n      throw error\n    }, 5)\n  }\n\n  public removeMessageToDisplay = (id: string) => {\n    this.errorMessages.value = this.errorMessages.value.filter(v => v.id !== id)\n  }\n\n  public getMessagesToDisplay = (): IReadonlyObservableArray<ErrorMessage> => {\n    return this.errorMessages\n  }\n}\n\nexport interface ErrorMessage {\n  id: string\n  message: string\n}\n\nconst getRandomId = (): string => {\n  return (Math.random() * 1000000000000000000).toString()\n}\n","import {GET_SCOPE_TYPE, type ScopeType} from '../models/enums'\nimport type {MetricsPayload} from '../models/models'\nimport type {IService} from './services'\nimport {ServiceBase} from './services'\n\nexport interface IPayloadService extends IService {\n  getFeatureFlag: (key: string, defaultValue?: boolean) => boolean\n  getPath: (key: string, defaultValue?: string) => string | undefined\n  getPayload: () => Readonly<MetricsPayload>\n  getScope: () => ScopeType\n  init: (payload: MetricsPayload) => void\n}\n\nexport class PayloadService extends ServiceBase implements IPayloadService {\n  public static override readonly serviceId = 'IPayloadService'\n  private readonly featureFlags = new Map<string, boolean>()\n  private readonly paths = new Map<string, string>()\n  private payload: MetricsPayload\n\n  public getFeatureFlag(key: string, defaultValue = false): boolean {\n    return this.featureFlags.get(key) ?? defaultValue\n  }\n\n  public getPath(key: string, defaultValue?: string): string | undefined {\n    return this.paths.get(key) ?? defaultValue\n  }\n\n  public getPayload(): MetricsPayload {\n    return this.payload\n  }\n\n  public getScope(): ScopeType {\n    return GET_SCOPE_TYPE(this.payload.scope)\n  }\n\n  public init(payload?: MetricsPayload) {\n    if (payload) {\n      this.payload = payload\n      const ffKeys = Object.keys(payload?.enabled_features || {})\n\n      for (const key of ffKeys) {\n        const value = !!(payload?.enabled_features && payload?.enabled_features[key])\n        this.featureFlags.set(key, value)\n      }\n\n      const pathKeys = Object.keys(payload?.paths || {})\n\n      for (const key of pathKeys) {\n        const value = payload?.paths && payload?.paths[key]\n        value && this.paths.set(key, value)\n      }\n    }\n  }\n}\n","import {FilterProviderType, type FilterProvider} from '@github-ui/filter'\nimport {Utils} from '../utils/utils'\nimport type {IDataService} from './data-service'\nimport type {IService} from './services'\nimport {ServiceBase, Services} from './services'\nimport type {AsyncSuggestionsFilterProvider} from '../utils/filter-providers'\nimport {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {FilterUtils} from '../utils/filter-utils'\n\nexport interface IFilterService extends IService {\n  isFilterValueValid: (filterValue: string, provider: FilterProvider) => boolean\n  getAsyncFilterSuggestions: (\n    provider: AsyncSuggestionsFilterProvider<unknown>,\n    filterValue?: string,\n    abortSignal?: AbortSignal,\n  ) => Promise<string[] | undefined>\n}\n\nexport class FilterService extends ServiceBase implements IFilterService {\n  public static override readonly serviceId = 'IFilterService'\n  private readonly dataService = Services.get<IDataService>('IDataService')\n  private readonly validValuesSetMap = new Map<string, Set<string>>()\n\n  public isFilterValueValid(filterValue: string, provider: FilterProvider): boolean {\n    if (provider.type !== FilterProviderType.Number) {\n      if (!FilterUtils.isAsync(provider)) {\n        return this.processProvider(provider).has(filterValue)\n      }\n    }\n\n    // always return true to allow user typed values\n    return !!filterValue\n  }\n\n  public async getAsyncFilterSuggestions(\n    provider: AsyncSuggestionsFilterProvider<unknown>,\n    filterValue?: string,\n    abortSignal?: AbortSignal,\n  ): Promise<string[] | undefined> {\n    return this.debounceGetAsyncFilterSuggestions(provider, filterValue, abortSignal) as never\n  }\n\n  private debounceGetAsyncFilterSuggestions = Utils.debounce(\n    (provider: AsyncSuggestionsFilterProvider<unknown>, filterValue?: string, abortSignal?: AbortSignal) => {\n      return this.getAsyncFilterSuggestionsInternal(provider, filterValue, abortSignal)\n    },\n  )\n\n  private async getAsyncFilterSuggestionsInternal(\n    provider: AsyncSuggestionsFilterProvider<unknown>,\n    filterValue?: string,\n    abortSignal?: AbortSignal,\n  ): Promise<string[] | undefined> {\n    const params = new URLSearchParams()\n    params.set('q', filterValue ?? '')\n\n    const viewParams = new URLSearchParams(ssrSafeLocation.search)\n    if (viewParams.has('version')) {\n      const version = viewParams.get('version')\n      version && params.set('version', version)\n    }\n\n    // this will not return Response, but force cast it here and fix in fetchSuggestions\n    const unknownItems = await this.dataService.get<unknown[]>(`${provider.suggestionEndpoint}?${params.toString()}`, {\n      requestInit: {signal: abortSignal},\n    })\n    const items = unknownItems?.map(item => provider.transform(item))\n\n    if (items) {\n      if (!this.validValuesSetMap.has(provider.key)) {\n        this.validValuesSetMap.set(provider.key, new Set<string>())\n      }\n\n      const set = this.validValuesSetMap.get(provider.key)!\n\n      for (const item of items) {\n        set.add(provider.transform(item))\n      }\n    }\n\n    return items\n  }\n\n  private processProvider(provider: FilterProvider): Set<string> {\n    let valuesSet = this.validValuesSetMap.get(provider.key)\n    if (!valuesSet) {\n      if (provider.type === FilterProviderType.Select && provider.filterValues?.length) {\n        // init with provider options because it is not async\n        const values = provider.filterValues.map(value => value.value) as string[]\n        valuesSet = new Set<string>(values)\n      } else {\n        valuesSet = new Set<string>()\n      }\n\n      this.validValuesSetMap.set(provider.key, valuesSet)\n    }\n    return valuesSet\n  }\n}\n","import type {IService} from './services'\nimport {ServiceBase} from './services'\nimport type {NavigateOptions, To} from 'react-router-dom'\nimport {ssrSafeLocation, ssrSafeWindow} from '@github-ui/ssr-utils'\n\nexport interface IRoutingService extends IService {\n  init: (navigator: (to: To, options?: NavigateOptions) => void) => void\n  getFullUrl: (params: URLSearchParams) => URL\n  getSearchParams: () => URLSearchParams\n  setSearchParams: (searchParams: URLSearchParams) => void\n  navigate: (to: To, options?: NavigateOptions) => void\n}\n\nexport class RoutingService extends ServiceBase implements IRoutingService {\n  public static override readonly serviceId = 'IRoutingService'\n  private navigator: (to: To, options?: NavigateOptions) => void\n\n  public init = (navigator: (to: To, options?: NavigateOptions) => void) => {\n    this.navigator = navigator\n  }\n\n  public getFullUrl = (params: URLSearchParams): URL => {\n    const url = new URL(ssrSafeWindow?.location.href || '', ssrSafeLocation.origin)\n    url.search = params.toString()\n    return url\n  }\n\n  public getSearchParams = (): URLSearchParams => {\n    return new URLSearchParams(ssrSafeLocation.search)\n  }\n\n  public setSearchParams = (params: URLSearchParams, replace = false) => {\n    if (replace || params.toString() !== this.getSearchParams().toString()) {\n      // this needs to use the useNavigate hook (github-ui) and cannot use the setter on the searchParams hook from\n      // react-router-dom or it will break some things with the special GH navigation handling\n      this.navigate(\n        {pathname: ssrSafeLocation.pathname, search: params.toString()},\n        {\n          replace,\n        },\n      )\n    }\n  }\n\n  public navigate = (to: To, options?: NavigateOptions) => {\n    this.navigator(to, options)\n  }\n}\n","import {AnalyticsService} from './analytics-service'\nimport {CacheService} from './cache-service'\nimport {DataService} from './data-service'\nimport {ErrorService} from './error-service'\nimport {PayloadService} from './payload-service'\nimport {FilterService} from './filter-service'\nimport {RoutingService} from './routing-service'\nimport type {ServiceFactory} from './services'\n\nlet registered = false\n\n// Add new services to be registered here\nconst servicesToBeRegistered = [\n  AnalyticsService,\n  CacheService,\n  DataService,\n  ErrorService,\n  PayloadService,\n  FilterService,\n  RoutingService,\n]\n\nexport const registerServices = () => {\n  if (!registered) {\n    registered = true\n    for (const serviceType of servicesToBeRegistered) {\n      serviceType.registerService(serviceType.serviceId, serviceType as unknown as ServiceFactory)\n    }\n  }\n}\n","import type {FilterProvider} from '@github-ui/filter'\nimport {TabType} from '../../../common/models/enums'\nimport {getFilters, type FilterItem} from '../../../common/constants/filters'\nimport {COLUMNS} from '../../../common/constants/constants'\n\nconst COMMON_JOB_FILTERS = [\n  {key: COLUMNS.filterRunTimeMinutes, priority: 2},\n  {key: COLUMNS.filterQueueTimeMinutes, priority: 2},\n  {key: COLUMNS.failureRate, priority: 2},\n  {key: COLUMNS.jobExecutions, priority: 2},\n]\n\nconst WORKFLOW_FILTERS: FilterItem[] = [\n  {key: COLUMNS.repository, priority: 1},\n  {key: COLUMNS.workflowFileName, priority: 1},\n  {key: COLUMNS.filterRunTimeMinutes, priority: 2},\n  {key: COLUMNS.failureRate, priority: 2},\n  {key: COLUMNS.jobs, priority: 2},\n  {key: COLUMNS.workflowExecutions, priority: 2},\n]\n\nconst JOBS_FILTERS: FilterItem[] = [\n  {key: COLUMNS.repository, priority: 1},\n  {key: COLUMNS.jobName, priority: 1},\n  {key: COLUMNS.workflowFileName, priority: 1},\n  {key: COLUMNS.runnerRuntime, priority: 2},\n  {key: COLUMNS.runnerType, priority: 2},\n  ...COMMON_JOB_FILTERS,\n]\n\nconst REPOSITORIES_FILTERS: FilterItem[] = [{key: COLUMNS.repository, priority: 1}, ...COMMON_JOB_FILTERS]\n\nconst RUNTIME_FILTERS: FilterItem[] = [{key: COLUMNS.runnerRuntime, priority: 1}, ...COMMON_JOB_FILTERS]\n\nconst RUNNER_TYPE_FILTERS: FilterItem[] = [{key: COLUMNS.runnerType, priority: 1}, ...COMMON_JOB_FILTERS]\n\nconst TAB_TO_FILTERS_MAPPING = new Map<TabType, FilterItem[]>()\nTAB_TO_FILTERS_MAPPING.set(TabType.Workflows, WORKFLOW_FILTERS)\nTAB_TO_FILTERS_MAPPING.set(TabType.Jobs, JOBS_FILTERS)\nTAB_TO_FILTERS_MAPPING.set(TabType.Repositories, REPOSITORIES_FILTERS)\nTAB_TO_FILTERS_MAPPING.set(TabType.Runtime, RUNTIME_FILTERS)\nTAB_TO_FILTERS_MAPPING.set(TabType.RunnerType, RUNNER_TYPE_FILTERS)\n\nexport function getPerformanceFilters(tab?: string): FilterProvider[] {\n  return getFilters(TAB_TO_FILTERS_MAPPING, WORKFLOW_FILTERS, tab)\n}\n","import type {Column} from '@primer/react/drafts'\nimport type {CardData, CardHeading, MetricsItem, OrderBy} from '../../../common/models/models'\nimport type {IObservableArray} from '../../../common/observables/observable'\nimport {ObservableArray} from '../../../common/observables/observable'\nimport type {IMetricsService} from '../../../common/services/metrics-service'\nimport {DEFAULT_ORDER_BY_DIRECTION, MetricsService} from '../../../common/services/metrics-service'\nimport {LABELS} from '../../../common/resources/labels'\nimport {\n  DurationCell,\n  NumberCell,\n  PercentCell,\n  RepositoryCell,\n  TextCell,\n  WorkflowCell,\n} from '../../../common/components/MetricsCells'\nimport {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport type {FilterProvider} from '@github-ui/filter'\nimport {getPerformanceFilters} from '../utils/filter-providers'\nimport {GET_DATE_RANGE_LABEL, RequestType, TabType} from '../../../common/models/enums'\nimport type {\n  JobMetricsItem,\n  RepositoryMetricsItem,\n  RunnerMetricsItem,\n  RuntimeMetricsItem,\n  WorkflowMetricsItem,\n} from '../models/models'\nimport {COLUMNS} from '../../../common/constants/constants'\nimport {Utils} from '../../../common/utils/utils'\n\nexport interface IPerformanceService extends IMetricsService {}\n\nexport class PerformanceService extends MetricsService implements IPerformanceService {\n  public static override serviceId = 'IOrgPerformanceService'\n  protected readonly columns = new ObservableArray<Column<MetricsItem>>([])\n  protected readonly filterProviders = new ObservableArray<FilterProvider>()\n  protected readonly cardData = new ObservableArray<CardData | undefined>()\n  protected readonly cardCount = 4\n\n  protected columnConfig: Map<string, Array<Column<MetricsItem>>>\n\n  constructor() {\n    super()\n    this.metricsView.value.requestType = RequestType.Performance\n    this.setColumnConfig()\n    this.init()\n  }\n\n  public override getServiceId(): string {\n    return PerformanceService.serviceId\n  }\n\n  public override getColumns(): IObservableArray<Column<MetricsItem>> {\n    return this.columns\n  }\n\n  public override getFilterProviders(): IObservableArray<FilterProvider> {\n    return this.filterProviders\n  }\n\n  public override getDefaultOrderBy(): OrderBy {\n    return {field: 'averageRunTime', direction: DEFAULT_ORDER_BY_DIRECTION}\n  }\n\n  protected setColumns(tab?: string) {\n    this.setColumnsHelper(this.columnConfig, NON_SORtableColumns, tab)\n  }\n\n  protected setFilterProviders(tab?: string) {\n    this.filterProviders.value = getPerformanceFilters(tab).filter(f => Utils.columnValidForScope(f.key, this.scope))\n  }\n\n  protected getCardHeading(key: string): CardHeading {\n    const dateRange = GET_DATE_RANGE_LABEL(this.metricsView.value.dateRangeType!).toLowerCase()\n\n    switch (key) {\n      case 'average_job_run_time':\n        return Utils.getCardHeading(\n          LABELS.cardHeadings.averageRunTimeTitle,\n          LABELS.cardHeadings.averageRunTimeDescription,\n          dateRange,\n          Utils.getDuration,\n        )\n\n      case 'average_job_queue_time':\n        return Utils.getCardHeading(\n          LABELS.cardHeadings.averageQueueTimeTitle,\n          LABELS.cardHeadings.averageQueueTimeDescription,\n          dateRange,\n          Utils.getDuration,\n        )\n      case 'job_failure_rate':\n        return Utils.getCardHeading(\n          LABELS.cardHeadings.failureRateTitle,\n          LABELS.cardHeadings.failureRateDescription,\n          dateRange,\n          Utils.getPercentage,\n        )\n      case 'total_failure_minutes':\n        return Utils.getCardHeading(\n          LABELS.cardHeadings.totalFailureMinutesTitle,\n          LABELS.cardHeadings.totalFailureMinutesDescription,\n          dateRange,\n        )\n      default:\n        return {title: '', description: ''}\n    }\n  }\n\n  protected setColumnConfig() {\n    const isRepoLevelEnabled = this.payloadService.getFeatureFlag('actions_usage_metrics_repo')\n    const tableColumns = new Map<string, Array<Column<MetricsItem>>>()\n\n    const workflowTabColumns: Array<Column<WorkflowMetricsItem>> = [\n      {\n        id: COLUMNS.workflowFilePath,\n        header: LABELS.workflow,\n        width: 'growCollapse',\n        renderCell: data => WorkflowCell(data.workflowFilePath, data.repository, ORG_NAME),\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.repository,\n        header: LABELS.sourceRepository,\n        width: 'growCollapse',\n        renderCell: data => RepositoryCell(data.repository, isRepoLevelEnabled, RequestType.Performance),\n        maxWidth: LARGE_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.failureRate,\n        header: LABELS.hasJobFailures,\n        renderCell: data => PercentCell(data.failureRate),\n        align: 'end',\n        maxWidth: MEDIUM_COLUMN_WIDTH,\n        minWidth: MEDIUM_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.averageRunTime,\n        header: LABELS.avgRunTime,\n        align: 'end',\n        renderCell: data => DurationCell(data.averageRunTime),\n        maxWidth: MEDIUM_COLUMN_WIDTH,\n        minWidth: MEDIUM_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.workflowExecutions,\n        header: LABELS.workflowRuns,\n        align: 'end',\n        renderCell: data => NumberCell(data.workflowExecutions),\n        maxWidth: MEDIUM_COLUMN_WIDTH,\n        minWidth: MEDIUM_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.jobs,\n        header: LABELS.jobs,\n        renderCell: data => NumberCell(data.jobs?.count, data.jobs?.approximate),\n        align: 'end',\n        maxWidth: EXTRA_SMALL_COLUMN_WIDTH,\n        minWidth: EXTRA_SMALL_COLUMN_WIDTH,\n      },\n    ]\n\n    const jobsTabColumns: Array<Column<JobMetricsItem>> = [\n      {\n        id: COLUMNS.jobName,\n        header: LABELS.job,\n        width: 'growCollapse',\n        renderCell: data => TextCell(data.jobName),\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.workflowFilePath,\n        header: LABELS.workflow,\n        width: 'growCollapse',\n        renderCell: data => WorkflowCell(data.workflowFilePath, data.repository, ORG_NAME),\n        maxWidth: LARGE_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.repository,\n        header: LABELS.sourceRepository,\n        width: 'growCollapse',\n        renderCell: data => RepositoryCell(data.repository, isRepoLevelEnabled, RequestType.Performance),\n        maxWidth: LARGE_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.failureRate,\n        header: LABELS.failureRate,\n        renderCell: data => PercentCell(data.failureRate),\n        align: 'end',\n        maxWidth: SMALL_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.averageRunTime,\n        header: LABELS.avgRunTime,\n        align: 'end',\n        renderCell: data => DurationCell(data.averageRunTime),\n        maxWidth: MEDIUM_COLUMN_WIDTH,\n        minWidth: MEDIUM_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.averageQueueTime,\n        header: LABELS.avgQueueTime,\n        align: 'end',\n        renderCell: data => DurationCell(data.averageQueueTime),\n        maxWidth: MEDIUM_COLUMN_WIDTH,\n        minWidth: MEDIUM_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.runnerType,\n        header: LABELS.runnerType,\n        renderCell: data => TextCell(data.runnerType),\n        maxWidth: SMALL_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.runnerRuntime,\n        header: LABELS.runtimeOs,\n        renderCell: data => TextCell(data.runnerRuntime),\n        maxWidth: SMALL_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.jobExecutions,\n        header: LABELS.jobRuns,\n        align: 'end',\n        renderCell: data => NumberCell(data.jobExecutions),\n        maxWidth: SMALL_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n    ]\n\n    const repoTabColumns: Array<Column<RepositoryMetricsItem>> = [\n      {\n        id: COLUMNS.repository,\n        header: LABELS.sourceRepository,\n        width: 'growCollapse',\n        renderCell: data => RepositoryCell(data.repository, isRepoLevelEnabled, RequestType.Performance),\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.failureRate,\n        header: LABELS.failureRate,\n        renderCell: data => PercentCell(data.failureRate),\n        align: 'end',\n        maxWidth: SMALL_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.averageRunTime,\n        header: LABELS.avgJobRunTime,\n        align: 'end',\n        renderCell: data => DurationCell(data.averageRunTime),\n        maxWidth: LARGE_COLUMN_WIDTH,\n        minWidth: LARGE_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.averageQueueTime,\n        header: LABELS.avgJobQueueTime,\n        align: 'end',\n        renderCell: data => DurationCell(data.averageQueueTime),\n        maxWidth: LARGE_COLUMN_WIDTH,\n        minWidth: LARGE_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.jobExecutions,\n        header: LABELS.jobRuns,\n        align: 'end',\n        renderCell: data => NumberCell(data.jobExecutions),\n        maxWidth: SMALL_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n    ]\n\n    const runtimeTabColumns: Array<Column<RuntimeMetricsItem>> = [\n      {\n        id: COLUMNS.runnerRuntime,\n        header: LABELS.runtimeOs,\n        renderCell: data => TextCell(data.runnerRuntime),\n        maxWidth: SMALL_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.failureRate,\n        header: LABELS.failureRate,\n        renderCell: data => PercentCell(data.failureRate),\n        align: 'end',\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.averageRunTime,\n        header: LABELS.avgJobRunTime,\n        align: 'end',\n        renderCell: data => DurationCell(data.averageRunTime),\n        maxWidth: LARGE_COLUMN_WIDTH,\n        minWidth: LARGE_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.averageQueueTime,\n        header: LABELS.avgJobQueueTime,\n        align: 'end',\n        renderCell: data => DurationCell(data.averageQueueTime),\n        maxWidth: LARGE_COLUMN_WIDTH,\n        minWidth: LARGE_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.jobExecutions,\n        header: LABELS.jobRuns,\n        align: 'end',\n        renderCell: data => NumberCell(data.jobExecutions),\n        maxWidth: SMALL_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n    ]\n\n    const runnerTabColumns: Array<Column<RunnerMetricsItem>> = [\n      {\n        id: COLUMNS.runnerType,\n        header: LABELS.runnerType,\n        renderCell: data => TextCell(data.runnerType),\n        maxWidth: SMALL_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.failureRate,\n        header: LABELS.failureRate,\n        renderCell: data => PercentCell(data.failureRate),\n        align: 'end',\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.averageRunTime,\n        header: LABELS.avgJobRunTime,\n        align: 'end',\n        renderCell: data => DurationCell(data.averageRunTime),\n        maxWidth: LARGE_COLUMN_WIDTH,\n        minWidth: LARGE_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.averageQueueTime,\n        header: LABELS.avgJobQueueTime,\n        align: 'end',\n        renderCell: data => DurationCell(data.averageQueueTime),\n        maxWidth: LARGE_COLUMN_WIDTH,\n        minWidth: LARGE_COLUMN_WIDTH,\n      },\n      {\n        id: COLUMNS.jobExecutions,\n        header: LABELS.jobRuns,\n        align: 'end',\n        renderCell: data => NumberCell(data.jobExecutions),\n        maxWidth: SMALL_COLUMN_WIDTH,\n        minWidth: SMALL_COLUMN_WIDTH,\n      },\n    ]\n\n    tableColumns.set(TabType.Workflows, workflowTabColumns as Array<Column<MetricsItem>>)\n    tableColumns.set(TabType.Jobs, jobsTabColumns as Array<Column<MetricsItem>>)\n    tableColumns.set(TabType.Repositories, repoTabColumns as Array<Column<MetricsItem>>)\n    tableColumns.set(TabType.Runtime, runtimeTabColumns as Array<Column<MetricsItem>>)\n    tableColumns.set(TabType.RunnerType, runnerTabColumns as Array<Column<MetricsItem>>)\n\n    this.columnConfig = tableColumns\n  }\n}\n\n// /orgs/<org name>/actions/metrics/Performance => ['', orgs, <org name>, ...]\nconst ORG_NAME = ssrSafeLocation.pathname.split('/')[2] || ''\nconst LARGE_COLUMN_WIDTH = 225\nconst MEDIUM_COLUMN_WIDTH = 150\nconst SMALL_COLUMN_WIDTH = 125\nconst EXTRA_SMALL_COLUMN_WIDTH = 100\nconst NON_SORtableColumns = new Set<string>([COLUMNS.repository])\n","import {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {MetricsLayoutTable} from '../../../common/components/MetricsLayoutTable'\nimport type {MetricsPayload} from '../../../common/models/models'\nimport {LABELS} from '../../../common/resources/labels'\nimport type {IPayloadService} from '../../../common/services/payload-service'\nimport {Services} from '../../../common/services/services'\nimport {PerformanceService} from '../services/performance-service'\nimport type {IMetricsService} from '../../../common/services/metrics-service'\n\nexport interface PerformanceProps {\n  beta?: boolean\n  showSideNav?: boolean\n}\n\nexport function Performance(props: PerformanceProps) {\n  const payload = useRoutePayload<MetricsPayload>()\n  const payloadService = Services.get<IPayloadService>('IPayloadService')\n  payloadService.init(payload)\n\n  PerformanceService.registerService(PerformanceService.serviceId, PerformanceService)\n  const metricsService = Services.get<IMetricsService>('IMetricsService')\n  metricsService.setScope()\n\n  return (\n    <MetricsLayoutTable title={LABELS.actionsPerformanceMetrics} beta={props.beta} hideSideNav={props.showSideNav} />\n  )\n}\n\ntry{ Performance.displayName ||= 'Performance' } catch {}","import {Performance} from '../views/performance/components/Performance'\n\nexport function OrgPerformance() {\n  return <Performance />\n}\n\ntry{ OrgPerformance.displayName ||= 'OrgPerformance' } catch {}","import {Performance} from '../views/performance/components/Performance'\n\nexport function RepoPerformance() {\n  return <Performance beta={true} showSideNav={false} />\n}\n\ntry{ RepoPerformance.displayName ||= 'RepoPerformance' } catch {}","import {Usage} from '../views/usage/components/Usage'\n\nexport function RepoUsage() {\n  return <Usage beta={true} showSideNav={false} />\n}\n\ntry{ RepoUsage.displayName ||= 'RepoUsage' } catch {}","import {App} from './App'\nimport {OrgUsage} from './routes/OrgUsage'\nimport {registerReactAppFactory} from '@github-ui/react-core/register-app'\nimport {jsonRoute} from '@github-ui/react-core/json-route'\nimport {registerServices} from './common/services/service-registrations'\nimport {TransitionType} from '@github-ui/react-core/app-routing-types'\nimport {OrgPerformance} from './routes/OrgPerformance'\nimport {RepoPerformance} from './routes/RepoPerformance'\nimport {RepoUsage} from './routes/RepoUsage'\n\nregisterServices()\nregisterReactAppFactory('actions-metrics', () => ({\n  App,\n  routes: [\n    jsonRoute({\n      path: '/orgs/:org/actions/metrics/usage',\n      Component: OrgUsage,\n      transitionType: TransitionType.TRANSITION_WITHOUT_FETCH,\n    }),\n    jsonRoute({\n      path: '/orgs/:org/actions/metrics/performance',\n      Component: OrgPerformance,\n      transitionType: TransitionType.TRANSITION_WITHOUT_FETCH,\n    }),\n    jsonRoute({\n      path: '/:owner/:repo/actions/metrics/usage',\n      Component: RepoUsage,\n      transitionType: TransitionType.TRANSITION_WITHOUT_FETCH,\n    }),\n    jsonRoute({\n      path: '/:owner/:repo/actions/metrics/performance',\n      Component: RepoPerformance,\n      transitionType: TransitionType.TRANSITION_WITHOUT_FETCH,\n    }),\n  ],\n}))\n","import {NO_MATCH, fuzzyScore} from './fuzzy-score'\n\ntype fuzzyFilterProps<T> = {\n  items: T[]\n  filter: string\n  key: (option: T) => string\n  // Used when you want to compare against two attributes, and take the highest score.\n  // An example could be comparing against a users login, and then name, and taking the highest score.\n  secondaryKey?: (option: T) => string\n}\n\nexport const fuzzyFilter = <T>({items, filter, key, secondaryKey}: fuzzyFilterProps<T>): T[] => {\n  let filteredItems = items.map(i => [fuzzyScore(filter, key(i)), i] as const)\n\n  if (secondaryKey) {\n    filteredItems = filteredItems.map(\n      ([keyScore, i]) => [Math.max(keyScore, fuzzyScore(filter, secondaryKey(i))), i] as const,\n    )\n  }\n\n  return filteredItems\n    .filter(([s]) => s > NO_MATCH)\n    .sort(([aScore, a], [bScore, b]) => {\n      if (bScore === aScore) {\n        // Default to sorting alphabetically if scores are the same.\n        return key(a).localeCompare(key(b))\n      }\n      return bScore - aScore\n    })\n    .map(([, o]) => o)\n}\n","import {score} from 'fzy.js'\n\nexport const DIRECT_MATCH = Infinity\nexport const NO_MATCH = -Infinity\nexport const BONUS_POINT = 1\n\nexport const fuzzyScore = (searchQuery: string, text: string, bonusForStartOrEndMatch = BONUS_POINT): number => {\n  const safeSearchQuery = searchQuery.trim().toLowerCase()\n  const safeText = text.trim().toLowerCase()\n\n  if (safeSearchQuery === safeText) {\n    return DIRECT_MATCH\n  }\n\n  if (safeText.length === 0 || safeSearchQuery.length === 0) {\n    return NO_MATCH\n  }\n\n  const fzyScore = score(safeSearchQuery, safeText)\n\n  // fzy unintuitively returns Infinity if the length of the item is less than or equal to the length of the query\n  if (fzyScore === Infinity && safeSearchQuery !== safeText) {\n    return NO_MATCH\n  }\n\n  // Bonus points awarding to direct matches on individual components\n  if (safeText.startsWith(safeSearchQuery) || safeText.endsWith(safeSearchQuery)) {\n    return fzyScore + bonusForStartOrEndMatch\n  } else {\n    return fzyScore\n  }\n}\n","// Check if the navigation is only a hash change.\nconst isHashNavigation = (currentUrl: string, targetUrl: string): boolean => {\n  const current = new URL(currentUrl, window.location.origin)\n  const target = new URL(targetUrl, window.location.origin)\n  const hasHash = target.href.includes('#')\n\n  return (\n    hasHash && current.host === target.host && current.pathname === target.pathname && current.search === target.search\n  )\n}\n\nexport default isHashNavigation\n","export interface TestIdProps {\n  /** Test ID to be queried by automated testing suites */\n  'data-testid'?: string\n}\n\nexport const testIdProps = (value: string): TestIdProps => {\n  return {'data-testid': value}\n}\n","import React, {startTransition} from 'react'\nimport {\n  createSearchParams,\n  matchRoutes,\n  resolvePath,\n  useLocation,\n  useNavigate as useReactRouterNavigate,\n  useSearchParams as useReactRouterSearchParams,\n  type NavigateOptions,\n  type To,\n  type URLSearchParamsInit,\n} from 'react-router-dom'\n\nimport isHashNavigation from '@github-ui/is-hash-navigation'\nimport {AppContext} from '@github-ui/react-core/app-context'\nimport {startSoftNav} from '@github-ui/soft-nav/state'\nimport {PREVENT_AUTOFOCUS_KEY} from '@github-ui/react-core/prevent-autofocus'\n\nexport interface NavigateOptionsWithPreventAutofocus extends NavigateOptions {\n  preventAutofocus?: boolean\n}\n\nexport const useNavigate = (): ((to: To, options?: NavigateOptionsWithPreventAutofocus) => void) => {\n  const {routes, history} = React.useContext(AppContext)\n  const reactRouterNavigate = useReactRouterNavigate()\n  return React.useCallback(\n    (to, navigateOptions = {}) => {\n      const pathname = resolvePath(to).pathname\n      const isExternalToApp = !matchRoutes(routes, pathname)\n\n      if (isExternalToApp) {\n        const href = history.createHref(to)\n        ;(async () => {\n          const {softNavigate: turboSoftNavigate} = await import('@github-ui/soft-navigate')\n          turboSoftNavigate(href)\n        })()\n      } else {\n        if (!isHashNavigation(location.href, to.toString())) {\n          startSoftNav('react')\n        }\n        const {preventAutofocus, ...options} = navigateOptions\n        startTransition(() => {\n          reactRouterNavigate(\n            to,\n            preventAutofocus\n              ? {\n                  ...options,\n                  state: {\n                    [PREVENT_AUTOFOCUS_KEY]: true,\n                    ...options.state,\n                  },\n                }\n              : options,\n          )\n          const {turbo, ...state} = window.history.state\n          window.history.replaceState({...state, skipTurbo: true}, '', location.href)\n        })\n      }\n    },\n    [history, reactRouterNavigate, routes],\n  )\n}\n\n/**\n * An implementation of `useSearchParams` that mirrors `react-router-dom`'s `useSearchParams` hook\n * but utilizes `@github-ui/useNavigate` instead of `react-router` `useNavigate` to handle updates.\n */\nexport const useSearchParams = () => {\n  const [searchParams] = useReactRouterSearchParams()\n  const navigate = useNavigate()\n  const {pathname} = useLocation()\n\n  const setSearchParams = React.useCallback<\n    (\n      nextInit?: URLSearchParamsInit | ((prev: URLSearchParams) => URLSearchParamsInit),\n      navigateOpts?: NavigateOptionsWithPreventAutofocus,\n    ) => void\n  >(\n    (nextInit, navigateOptions = {}) => {\n      const newSearchParams = createSearchParams(typeof nextInit === 'function' ? nextInit(searchParams) : nextInit)\n      navigate(\n        {\n          pathname,\n          search: newSearchParams.toString(),\n        },\n        navigateOptions,\n      )\n    },\n    [searchParams, navigate, pathname],\n  )\n\n  return [searchParams, setSearchParams] as const\n}\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  assertRelativePathOrSameOrigin(path)\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\nfunction assertRelativePathOrSameOrigin(path: string) {\n  if (process.env.NODE_ENV === 'test' && !window.location.origin) return\n  const url = new URL(path, window.location.origin)\n  if (url.origin !== window.location.origin) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetch(path, {...init, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetchJSON(path, {...init, headers})\n}\n","import type {SxProp} from '@primer/react'\nimport {Box, Text} from '@primer/react'\n\nexport interface CounterProps extends SxProp {\n  count: number\n  total?: number\n  metric?: {singular: string; plural: string} | string\n}\n\nfunction Counter(props: CounterProps) {\n  const countStyle = {\n    fontSize: '24px',\n    fontWeight: 400,\n    lineHeight: '24px',\n  }\n\n  const mutedStyle = {\n    fontSize: '16px',\n    fontWeight: 400,\n    color: 'fg.muted',\n  }\n\n  function pluralizeCountLabel() {\n    if (props.metric === undefined) {\n      return null\n    }\n\n    const style = props.total ? mutedStyle : countStyle\n    let metric = ''\n\n    if (typeof props.metric === 'string') {\n      metric = props.metric\n    } else {\n      metric = props.count === 1 ? props.metric.singular : props.metric.plural\n    }\n\n    return <Text sx={{...style, ml: 1}}> {metric.toLowerCase()}</Text>\n  }\n\n  function renderCount() {\n    const numberFormatter = Intl.NumberFormat('en-US', {\n      notation: 'standard',\n    })\n    const count = numberFormatter.format(props.count)\n\n    return (\n      <>\n        <Text sx={countStyle}>\n          {count}\n          {props.total !== undefined && <Text sx={mutedStyle}> / {numberFormatter.format(props.total)} </Text>}\n        </Text>\n      </>\n    )\n  }\n\n  const boxStyle = {\n    display: 'flex',\n    ...props.sx,\n  }\n\n  return (\n    <Box sx={boxStyle}>\n      {renderCount()}\n      {pluralizeCountLabel()}\n    </Box>\n  )\n}\n\nCounter.displayName = 'DataCard.Counter'\n\nexport default Counter\n","import type {SxProp} from '@primer/react'\nimport {Text} from '@primer/react'\nimport type {PropsWithChildren} from 'react'\n\nconst defaultStyle = {\n  fontSize: '12px',\n  fontWeight: '400',\n  lineHeight: '18px',\n  marginTop: 2,\n  color: 'fg.muted',\n}\n\nexport interface DescriptionProps extends SxProp {}\n\nexport function Description({sx, children}: PropsWithChildren<DescriptionProps>) {\n  const style = {...defaultStyle, sx}\n\n  return (\n    <Text as=\"p\" sx={style}>\n      {children}\n    </Text>\n  )\n}\n\ntry{ Description.displayName ||= 'Description' } catch {}","export function ColorByIndex(index: number) {\n  const colors = ['accent.emphasis', 'success.emphasis', 'danger.emphasis', 'done.emphasis']\n  return colors[index % colors.length]\n}\n\ntry{ ColorByIndex.displayName ||= 'ColorByIndex' } catch {}","import type {OcticonProps} from '@primer/react'\nimport {ActionList, CircleBadge, CounterLabel, Text} from '@primer/react'\nimport type {ReactElement} from 'react'\nimport React from 'react'\nimport {ColorByIndex} from './Shared'\n\ninterface ListData {\n  label: string\n  value: number\n  color?: string\n  icon?: ReactElement<OcticonProps>\n}\n\nexport interface ListProps {\n  data: ListData[]\n  showPercentages?: boolean\n}\n\nfunction List({data, showPercentages}: ListProps) {\n  const total = data.reduce((acc, item) => acc + item.value, 0)\n\n  const formatValue = (value: number) => {\n    return Intl.NumberFormat('en-US', {\n      notation: 'compact',\n      maximumFractionDigits: 2,\n      maximumSignificantDigits: 3,\n    }).format(value)\n  }\n\n  function renderListItem(item: ListData, index: number) {\n    const percentageOfTotal = total ? parseFloat(((item.value / total) * 100).toFixed(2)) : 0\n    const color = item.color ?? ColorByIndex(index)\n    const counterContent = showPercentages\n      ? `${percentageOfTotal}% (${formatValue(item.value)})`\n      : formatValue(item.value)\n\n    return (\n      <React.Fragment key={`${item.label}-${index}`}>\n        {index > 0 && <ActionList.Divider sx={{marginY: 0, backgroundColor: 'border.default'}} />}\n        <ActionList.Item sx={{display: 'flex', paddingLeft: 0}}>\n          <ActionList.LeadingVisual>\n            {item.icon ?? <CircleBadge inline size={12} sx={{backgroundColor: color}} />}\n          </ActionList.LeadingVisual>\n          <Text className=\"mr-1\" sx={{flexGrow: 1}}>\n            {item.label}\n          </Text>\n          <ActionList.TrailingVisual>\n            <CounterLabel>{counterContent}</CounterLabel>\n          </ActionList.TrailingVisual>\n        </ActionList.Item>\n      </React.Fragment>\n    )\n  }\n\n  function renderList(items: ListData[]) {\n    return items.map((item, index) => renderListItem(item, index))\n  }\n\n  return <ActionList variant=\"full\">{renderList(data)}</ActionList>\n}\n\nList.displayName = 'DataCard.List'\n\nexport default List\n","import type {ProgressBarProps as PrimerProgressBarProps} from '@primer/react'\nimport {ProgressBar as PrimerProgressBar} from '@primer/react'\nimport {ColorByIndex} from './Shared'\n\ninterface Item {\n  progress: number\n  color?: string\n  label?: string\n}\n\nexport interface ProgressBarProps extends Omit<PrimerProgressBarProps, 'progress'> {\n  data: Item[]\n}\n\nfunction ProgressBar(props: ProgressBarProps) {\n  function renderItems() {\n    return props.data.map((item, index) => {\n      const color = item.color ?? ColorByIndex(index)\n      const label = item.label\n\n      return (\n        <PrimerProgressBar.Item key={index} progress={item.progress} sx={{backgroundColor: color}} aria-label={label} />\n      )\n    })\n  }\n\n  function valueNow() {\n    return props.data.reduce((acc, item) => acc + item.progress, 0)\n  }\n\n  return (\n    <PrimerProgressBar aria-valuenow={valueNow()} aria-label={props['aria-label']} sx={{marginY: 2, ...props.sx}}>\n      {renderItems()}\n    </PrimerProgressBar>\n  )\n}\n\nProgressBar.displayName = 'DataCard.ProgressBar'\n\nProgressBar.Item = PrimerProgressBar.Item\n\nexport default ProgressBar\n","import {Text} from '@primer/react'\n\nexport function NoData() {\n  return (\n    <>\n      <Text\n        as=\"p\"\n        sx={{\n          color: 'fg.subtle',\n          fontSize: 4,\n          fontWeight: 'light',\n          lineHeight: 'condensed',\n        }}\n      >\n        Data unavailable\n      </Text>\n    </>\n  )\n}\n\ntry{ NoData.displayName ||= 'NoData' } catch {}","import type {SxProp} from '@primer/react'\nimport {Box, useTheme, Text, Stack} from '@primer/react'\nimport Counter from './Counter'\nimport {Description} from './Description'\nimport List from './List'\nimport ProgressBar from './ProgressBar'\nimport {NoData} from './NoData'\nimport type {PropsWithChildren, ReactNode} from 'react'\nimport {LoadingSkeleton} from '@github-ui/skeleton/LoadingSkeleton'\n\nexport type DataCardProps = PropsWithChildren<\n  SxProp & {\n    cardTitle?: string\n    action?: ReactNode\n    loading?: boolean\n    error?: boolean\n    noData?: boolean\n  }\n>\n\nfunction DataCardBody({\n  loading,\n  error,\n  noData,\n  children,\n}: Pick<DataCardProps, 'loading' | 'error' | 'noData' | 'children'>) {\n  const {theme} = useTheme()\n  const textDescriptionHeight = parseInt(theme?.fontSizes[0]) * theme?.lineHeights.default\n  if (loading) {\n    return (\n      <>\n        <LoadingSkeleton\n          data-testid=\"data-card-loading-skeleton\"\n          sx={{height: theme?.fontSizes[4], width: 75}}\n          variant=\"rounded\"\n        />\n        <LoadingSkeleton\n          sx={{height: textDescriptionHeight, mt: 2, mb: '10px', width: 200, borderRadius: '6px'}}\n          variant=\"rounded\"\n        />\n      </>\n    )\n  }\n\n  if (error) {\n    return <Description sx={{color: 'attention.fg'}}>Data could not be loaded right now</Description>\n  }\n\n  if (noData) {\n    return (\n      <>\n        <NoData />\n        <Description>No data exists for this metric with the given filters.</Description>\n      </>\n    )\n  }\n\n  if (children) {\n    return <>{children}</>\n  }\n\n  return (\n    <>\n      <NoData />\n      <Description>No data exists for this metric.</Description>\n    </>\n  )\n}\n\nfunction DataCard({loading, error, noData, children, cardTitle, action, sx, ...otherProps}: DataCardProps) {\n  const cardStyle = {\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: 'border.default',\n    borderRadius: 6,\n    width: '270px',\n    paddingTop: '12px',\n    paddingBottom: '6px',\n    paddingX: '16px',\n    flexGrow: 1,\n    ...sx,\n  }\n\n  return (\n    <Box sx={cardStyle} {...otherProps}>\n      <Stack direction=\"horizontal\" justify=\"space-between\">\n        {cardTitle && (\n          <Text as=\"p\" sx={{fontWeight: '600'}}>\n            {cardTitle}\n          </Text>\n        )}\n        {action}\n      </Stack>\n      <DataCardBody loading={loading} error={error} noData={noData}>\n        {children}\n      </DataCardBody>\n    </Box>\n  )\n}\n\n//Child Components\nDataCard.Description = Description\n// Path: ui/packages/data-card/Counter.tsx\nDataCard.Counter = Counter\n// Path: ui/packages/data-card/ProgressBar.tsx\nDataCard.ProgressBar = ProgressBar\n// Path: ui/packages/data-card/List.tsx\nDataCard.List = List\n\nexport default DataCard\n\ntry{ DataCardBody.displayName ||= 'DataCardBody' } catch {}\ntry{ DataCard.displayName ||= 'DataCard' } catch {}","import {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {\n  // eslint-disable-next-line no-restricted-imports\n  Avatar,\n  type AvatarProps,\n} from '@primer/react'\nimport {forwardRef, useMemo} from 'react'\n\nexport type GitHubAvatarProps = AvatarProps\n\nexport const GitHubAvatar = forwardRef<HTMLImageElement, GitHubAvatarProps>(function GitHubAvatar(\n  {src, size = 20, ...otherProps}: GitHubAvatarProps,\n  ref,\n) {\n  const avatarUrl = useMemo(() => {\n    // src maybe be relative, e.g. `/mona.png`, in which case the instances main origin should be used,\n    // e.g. \"https://github.com\" for dotcom. If src is a fully quallified URL then the origin argument is ignored.\n    const url = new URL(src, ssrSafeLocation.origin)\n\n    // do not override size if it's already set as query parameter\n    if (!url.searchParams.has('size') && !url.searchParams.has('s')) {\n      // we double size for better rendering on high density pixel screens\n      url.searchParams.set('size', String(Number(size) * 2))\n    }\n\n    return url.toString()\n  }, [src, size])\n\n  return <Avatar ref={ref} src={avatarUrl} size={size} data-testid=\"github-avatar\" {...otherProps} />\n})\n\ntry{ GitHubAvatar.displayName ||= 'GitHubAvatar' } catch {}","import {PlayIcon, type Icon, PackageIcon, CodeSquareIcon} from '@primer/octicons-react'\nimport {Box, Heading, Label, NavList, Octicon} from '@primer/react'\nimport {testIdProps} from '@github-ui/test-id-props'\n\nexport interface InsightsSidenavProps {\n  selectedKey?: 'dependency_insights' | 'actions_usage_metrics' | 'actions_performance_metrics' | 'api'\n  /* the show- properties are only needed when something has to be hidden at times (i.e. FF) */\n  showDependencies?: boolean\n  urls: {[key: string]: string}\n  showActionsUsageMetrics?: boolean\n  showActionsPerformanceMetrics?: boolean\n  showApi?: boolean\n}\n\nexport const InsightsSidenav = (props: InsightsSidenavProps) => {\n  const navItems: InsightsSideNavItem[] = []\n\n  const actionsUsageMetricsKey = `actions_usage_metrics`\n  props.showActionsUsageMetrics &&\n    navItems.push({\n      display: 'Actions Usage Metrics',\n      key: actionsUsageMetricsKey,\n      href: props.urls[actionsUsageMetricsKey] || '#',\n      selected: props.selectedKey === actionsUsageMetricsKey,\n      icon: PlayIcon,\n    })\n\n  const actionsPerformanceMetricsKey = `actions_performance_metrics`\n  props.showActionsPerformanceMetrics &&\n    navItems.push({\n      display: 'Actions Performance Metrics',\n      key: actionsPerformanceMetricsKey,\n      href: props.urls[actionsPerformanceMetricsKey] || '#',\n      selected: props.selectedKey === actionsPerformanceMetricsKey,\n      icon: PlayIcon,\n      beta: true,\n    })\n\n  const dependencyKey = 'dependency_insights'\n  props.showDependencies &&\n    navItems.push({\n      display: 'Dependencies',\n      key: dependencyKey,\n      href: props.urls[dependencyKey] || '#',\n      selected: props.selectedKey === dependencyKey,\n      icon: PackageIcon,\n    })\n\n  const apiKey = 'api'\n  props.showApi &&\n    navItems.push({\n      display: 'API',\n      key: apiKey,\n      href: props.urls[apiKey] || '#',\n      selected: props.selectedKey === apiKey,\n      icon: CodeSquareIcon,\n    })\n\n  return (\n    <Box sx={{p: 4}} {...testIdProps('InsightsSidenav')}>\n      <Heading as=\"h1\" sx={{fontSize: '24px', px: 3, pb: 2}}>\n        Insights\n      </Heading>\n      <NavList aria-label={'Insights navigation'}>\n        {navItems.map(item => {\n          return (\n            <NavList.Item key={item.key} href={item.href} aria-current={item.selected}>\n              <NavList.LeadingVisual>\n                <Octicon icon={item.icon} size={16} />\n              </NavList.LeadingVisual>\n              {item.display}\n              {item.beta && (\n                <NavList.TrailingVisual>\n                  <Label variant=\"success\">Beta</Label>\n                </NavList.TrailingVisual>\n              )}\n            </NavList.Item>\n          )\n        })}\n      </NavList>\n    </Box>\n  )\n}\n\nexport const InsightsSidenavPanel = (props: InsightsSidenavProps) => {\n  return (\n    <Box className=\"border-lg-right\" sx={{width: ['100%', '100%', '100%', 336]}}>\n      <InsightsSidenav {...props} />\n    </Box>\n  )\n}\n\ninterface InsightsSideNavItem {\n  key: string\n  href: string\n  display: string\n  selected?: boolean\n  icon: Icon\n  beta?: boolean\n}\n\ntry{ InsightsSidenav.displayName ||= 'InsightsSidenav' } catch {}\ntry{ InsightsSidenavPanel.displayName ||= 'InsightsSidenavPanel' } catch {}","import type {ChildRoute, LoaderResult, RouteRegistration, TransitionType} from './app-routing-types'\nimport type React from 'react'\nimport type {Location} from '@remix-run/router'\n\nexport interface JsonRouteProps {\n  path: string\n  Component: React.ComponentType\n  transitionType?: TransitionType\n  shouldNavigateOnError?: boolean\n  children?: ChildRoute[]\n}\n/**\n * A utility for building a route registration for a route that consumes a JSON object (either via embedding in a\n * script tag or via a JSON fetch on React soft navigations).\n */\nexport function jsonRoute<TRouteData, TEmbeddedData>({\n  path,\n  Component,\n  /**\n   * Some routes want to handle their own errors and not just show a generic error page. In this case,\n   * the error is just handled like any other payload for the route.\n   * NOTE: We might consider replacing the shouldNavigateOnError flag with a parallel implementation to jsonRoute.\n   */\n  shouldNavigateOnError,\n  transitionType,\n  children,\n}: JsonRouteProps): RouteRegistration<TRouteData, TEmbeddedData> {\n  async function coreLoader({location}: {location: Location}): Promise<LoaderResult<TRouteData>> {\n    let response: Response\n    try {\n      const fetchPath = `${location.pathname}${location.search}`\n      response = await window.fetch(fetchPath, {\n        headers: {\n          Accept: 'application/json',\n          'X-Requested-With': 'XMLHttpRequest',\n          'X-GitHub-Target': 'dotcom',\n          'X-React-Router': 'json',\n        },\n      })\n    } catch (error) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'fetchError'},\n      }\n    }\n    if (response.redirected) {\n      return {\n        type: 'redirect',\n        url: response.url,\n      }\n    } else if (!response.ok) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'httpError', httpStatus: response.status},\n      }\n    } else {\n      try {\n        const responseJson = await response.json()\n        return {\n          type: 'loaded',\n          data: responseJson,\n          title: responseJson.title,\n        }\n      } catch (error) {\n        return {\n          type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n          error: {type: 'badResponseError'},\n        }\n      }\n    }\n  }\n\n  function loadFromEmbeddedData({embeddedData}: {embeddedData: TEmbeddedData}): {data: TRouteData; title: string} {\n    const data = embeddedData as unknown as TRouteData & {title: string}\n    return {data, title: data.title}\n  }\n\n  return {\n    path,\n    // TODO: consider wrapping Component with a component that passes payload as a prop — ideally as part of migrating\n    // away from useRoutePayload.\n    Component,\n    coreLoader,\n    loadFromEmbeddedData,\n    transitionType,\n    children,\n  }\n}\n","import {Box, type BoxProps, Text, type TextProps} from '@primer/react'\nimport type {ForwardRefComponent as PolymorphicForwardRefComponent} from '@radix-ui/react-polymorphic'\nimport DOMPurify, {type Config as DOMPurifyConfig} from 'dompurify'\nimport type React from 'react'\nimport {forwardRef} from 'react'\n\ntype Brand<TBase, TBrand extends string> = TBase & {__brand: TBrand}\n\n/**\n * A string that has specifically been marked as verified.\n *\n * WARNING: A string should only be branded as a `SafeHTMLString` if one of the following applies:\n * - it comes from a trusted source on the server\n * - has known static content, or\n * - has been sanitized by DOMPurify.\n */\nexport type SafeHTMLString = Brand<string, 'SafeHTMLString'>\n\ninterface BaseHTMLProps {\n  /**\n   * Set the rendered HTML of the component. Use this prop if the source is untrusted. If you know the string can be\n   * trusted, or has already been sanitized, use the `html` prop instead to avoid re-sanitizing.\n   */\n  unverifiedHTML?: string\n  /**\n   * Optional config passed to DOMPurify when sanitizing `unverifiedHTML`.\n   */\n  unverifiedHTMLConfig?: DOMPurifyConfig\n  /**\n   * Set the rendered HTML of the component. To prevent XSS, ensure that the source of this\n   * HTML is trusted! If the source is untrusted, use `unverifiedHTML` instead.\n   */\n  html?: SafeHTMLString\n}\n\ninterface VerifiedHTMLProps extends BaseHTMLProps {\n  unverifiedHTML?: undefined\n  html: SafeHTMLString\n}\n\ninterface UnverifiedHTMLProps extends BaseHTMLProps {\n  unverifiedHTML: string\n  html?: undefined\n}\n\nexport type SafeHTMLProps = VerifiedHTMLProps | UnverifiedHTMLProps\n\ntype PropsWithHTML<T> = T & SafeHTMLProps\n\nfunction getSafeHTMLAndProps<T>(propsWithHtml: PropsWithHTML<T>) {\n  /**\n   * Note we have to explicitly cast props to T because TypeScript\n   * is not properly converting Omit<T & VerifiedHTMLProps, 'html'> to T.\n   *\n   * We include the `as unknown` intermediate step to avoid warnings\n   * about insufficient type overlap\n   */\n\n  if ('html' in propsWithHtml && propsWithHtml.html !== undefined) {\n    const {html, ...props} = propsWithHtml\n    return {\n      // This is verified html, so we can use it directly\n      safeHTML: html,\n      props: props as unknown as T,\n    }\n  }\n\n  const {unverifiedHTML, unverifiedHTMLConfig, ...props} = propsWithHtml\n  const config = {\n    ...unverifiedHTMLConfig,\n    // we want to ensure we are returning a string not a dom node\n    RETURN_DOM: false,\n    RETURN_DOM_FRAGMENT: false,\n  } satisfies DOMPurifyConfig\n\n  return {\n    // Run the unverified HTML through DOMPurify to sanitize it\n    safeHTML: DOMPurify.sanitize(unverifiedHTML, config),\n    props: props as unknown as T,\n  }\n}\n\n/**\n * `SafeHTMLBox` extends `Box` from `@primer/react` with props for safely\n * rendering HTML strings. Exactly one `html` or `unverifiedHTML` must be\n * supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLBox = withSafeHTML<BoxProps>(Box) as PolymorphicForwardRefComponent<\n  'div' | 'span' | 'pre' | 'table' | 'tbody' | 'tr' | 'td' | 'ul' | 'ol' | 'li',\n  PropsWithHTML<BoxProps>\n>\nSafeHTMLBox.displayName = 'SafeHTMLBox'\n\n/**\n * `SafeHTMLText` extends `Text` from `@primer/react` with props for safely\n * rendering HTML strings. Exactly one `html` or `unverifiedHTML` must be\n * supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLText = withSafeHTML<TextProps>(Text) as PolymorphicForwardRefComponent<\n  'div' | 'span' | 'p' | 'strong' | 'em' | 'pre' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'a',\n  PropsWithHTML<TextProps>\n>\nSafeHTMLText.displayName = 'SafeHTMLText'\n\n/**\n * A higher-order component that extends a basic component by offering\n * `html` and `unverifiedHTML` props that are safe alternatives to `dangerouslySetInnerHTML`.\n */\nfunction withSafeHTML<T>(Component: React.ComponentType<T>) {\n  // We give these display names above\n  // eslint-disable-next-line react/display-name\n  const SafeHTMLComponent = forwardRef<HTMLSpanElement, PropsWithHTML<T>>((propsWithHtml, ref) => {\n    const {safeHTML, props} = getSafeHTMLAndProps(propsWithHtml)\n    // This is the only place in the codebase where `dangerouslySetInnerHTML` should be allowed\n    // eslint-disable-next-line react/forbid-component-props\n    return <Component ref={ref} {...props} dangerouslySetInnerHTML={safeHTML ? {__html: safeHTML} : undefined} />\n  })\n\n  return SafeHTMLComponent\n}\n\n/**\n * `SafeHTMLDiv` extends `div`with props for safely rendering HTML strings.\n * Exactly one `html` or `unverifiedHTML` must be supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLDiv = forwardRef<\n  HTMLDivElement,\n  PropsWithHTML<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>>\n>((propsWithHtml, ref) => {\n  const {safeHTML, props} = getSafeHTMLAndProps(propsWithHtml)\n  // eslint-disable-next-line react/no-danger\n  return <div ref={ref} {...props} dangerouslySetInnerHTML={safeHTML ? {__html: safeHTML} : undefined} />\n})\nSafeHTMLDiv.displayName = 'SafeHTMLDiv'\n\ntry{ SafeHTMLComponent.displayName ||= 'SafeHTMLComponent' } catch {}","import {Box, sx, type SxProp, themeGet} from '@primer/react'\nimport type React from 'react'\nimport styled, {css, keyframes} from 'styled-components'\n\nexport type LoadingSkeletonProps = {\n  animationStyle?: 'wave' | 'pulse'\n  as?: string | React.ComponentType | undefined\n  height?: string\n  variant?: 'rectangular' | 'elliptical' | 'rounded' | 'pill' | 'text'\n  width?: 'random' | string\n} & SxProp\n\nconst waveAnimation = keyframes`\n  0% {\n    transform: translateX(-100%);\n  }\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n  100% {\n    transform: translateX(100%);\n  }\n`\nconst waveMixin = css`\n  animation: ${waveAnimation} 1.5s infinite linear;\n`\n\nconst pulseAnimation = keyframes`\n  0% {\n    opacity: .3;\n  }\n  10% {\n    opacity: 1;\n  }\n  100% {\n    opacity: .3;\n  }\n`\n\nconst pulseMixin = css`\n  animation: ${pulseAnimation} 2s infinite linear;\n`\n\nexport const LoadingSkeleton = styled(Box)<LoadingSkeletonProps>`\n  /* stylelint-disable declaration-block-no-duplicate-properties, color-named */\n  position: relative;\n  overflow: hidden;\n  mask-image: radial-gradient(white, black);\n  ${({animationStyle}) => animationStyle === 'pulse' && pulseMixin};\n  &::after {\n    ${({animationStyle}) => animationStyle !== 'pulse' && waveMixin};\n    background: linear-gradient(90deg, transparent, ${themeGet('colors.neutral.subtle')}, transparent);\n    content: '';\n    position: absolute;\n    transform: translateX(-100%); /* Avoid flash during server-side hydration */\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n  }\n  background-color: ${themeGet('colors.neutral.subtle')};\n  border-radius: ${({theme, variant}) => {\n    switch (variant) {\n      case 'rounded':\n        return themeGet('radii.1')(theme)\n      case 'pill':\n        return '100px'\n      case 'elliptical':\n        return '50%'\n      default:\n        return '0'\n    }\n  }};\n  display: block;\n  height: 1.2em;\n  ${({variant}) =>\n    variant === 'elliptical' && {\n      borderRadius: '50%',\n    }}\n  width: ${({width}) => {\n    switch (width) {\n      case 'random':\n        return `${Math.floor(Math.random() * 40 + 40)}%`\n      case 'xl':\n        return '32px'\n      case 'lg':\n        return '24px'\n      case 'md':\n        return '20px'\n      case 'sm':\n        return '16px'\n      default:\n        return width\n    }\n  }};\n  height: ${({height}) => {\n    switch (height) {\n      case 'xl':\n        return '32px'\n      case 'lg':\n        return '24px'\n      case 'md':\n        return '20px'\n      case 'sm':\n        return '16px'\n      default:\n        return height\n    }\n  }};\n  ${sx}\n`\n\ntry{ LoadingSkeleton.displayName ||= 'LoadingSkeleton' } catch {}"],"names":["TabIcon","App","props","children","displayName","Services","container","add","key","serviceFactory","override","current","get","replacement","getService","currentIsMock","isMockService","replacementIsMock","service","factory","undefined","cachedService","instantiated","registered","ServiceBase","registerService","serviceId","MockServiceBase","isMock","e","MetricsRouteHelper","searchParams","useSearchParams","routingService","navigate","useNavigate","useEffect","metricsService","setMetricsViewFromSearchParams","init","Observable","value","action","persistEvent","executeObserverAction","observer","ex","ErrorEvent","window","dispatchEvent","error","filename","message","observers","slice","observerIndex","length","events","push","subscribe","subscriberCount","event","unsubscribe","indexOf","splice","ObservableLike","isObservable","observableLike","getValue","ObservableValue","v","notify","constructor","ObservableArray","change","start","items","internalItems","index","changedItems","changeOrderedBatch","batch","el","getMinItemIndexByBatch","reduce","acc","val","addedItems","pop","item","removedItems","removeAll","filter","remainingItems","deleteCount","itemsToAdd","spliceOrderedBatch","added","removed","itemChangesStartedAt","minObject","currentObject","ObserverBase","Component","getDerivedStateFromProps","state","newState","updateSubscriptionsAndState","oldProps","render","newProps","values","child","Children","only","cloneElement","componentDidMount","updateSubscriptionsAndStateAfterRender","componentDidUpdate","onUpdate","componentWillUnmount","propName","subscribedProps","observableExpression","observableValue","delegate","onValueChanged","bind","subscriptions","getObservableValue","subscription","hasSubscription","setState","prevState","_props","getPropValue","propValue","component","stateChanged","oldValue","newValue","Observer","LABELS","actions","actionsPerformanceMetrics","actionsUsageMetrics","avgJobQueueTime","avgJobRunTime","avgQueueTime","avgQueueTimeMinutes","avgRunTime","avgRunTimeMinutes","beta","cardHeadings","averageQueueTimeDescription","averageQueueTimeTitle","averageRunTimeDescription","averageRunTimeTitle","failureRateDescription","failureRateTitle","totalFailureMinutesDescription","totalFailureMinutesTitle","totalJobDescription","totalJobTitle","totalMinutesDescription","totalMinutesTitle","close","dateDescription","dateDescriptionDelimiter","dateRangeTypes","currentWeek","currentMonth","lastMonth","last30Days","last90Days","lastYear","downloadReport","exportError","failureRate","fetchError","filters","atLeast1","moreThan10","filterValidationMessage","hasJobFailures","job","jobRuns","jobs","loading","period","repositories","runnerType","runnerTypes","unknown","selfHosted","hosted","hostedLarger","runtimeOs","runtimes","linux","windows","macos","sourceRepository","time","days","hours","minutes","seconds","totalMinutes","workflow","workflowRuns","workflows","MetricsError","errorService","errorMessages","getMessagesToDisplay","obs","map","em","MetricsErrorFlash","Flash","variant","sx","mb","div","className","AlertIcon","size","span","IconButton","aria-label","icon","XIcon","onClick","removeMessageToDisplay","id","pl","DateRangeType","GET_DATE_RANGE_LABEL","DATE_RANGE_LABELS","dateRange","OperatorType","ZeroDataType","TabType","ExportStatus","OrderByDirection","RequestType","ScopeType","GET_SCOPE_TYPE","scope","MetricsDateRangeSelector","analyticsService","getMetricsView","dateRangeOptions","GET_DATE_RANGE_OPTION","CurrentWeek","CurrentMonth","LastMonth","Last30Days","Last90Days","LastYear","selectedOptionIndex","findIndex","option","dateRangeType","selectedOption","ActionMenu","Button","display","Overlay","width","ActionList","selectionVariant","Item","selected","onSelect","logEvent","date","previous","JSON","stringify","setDateRange","PATHS","getJobs","getRepositories","getWorkflows","getExport","getExportStatus","summary","usage","performance","MetricsSideNav","payloadService","InsightsSidenavPanel","selectedKey","getSideNavKey","showActionsPerformanceMetrics","getFeatureFlag","showActionsUsageMetrics","showDependencies","showApi","urls","getPayload","paths","ssrSafeWindow","location","href","includes","ORG_TABS","Workflows","displayValue","WorkflowIcon","Jobs","StopwatchIcon","Repositories","RepoIcon","Runtime","ServerIcon","RunnerType","REPO_TABS","t","COLUMNS","workflowFileName","workflowFilePath","repository","runnerRuntime","jobName","jobExecutions","workflowExecutions","averageRunTime","averageQueueTime","filterQueueTimeMinutes","filterRunTimeMinutes","TIME_IN_MS","second","minute","hour","day","Utils","debounce","fn","ms","timer","args","clearTimeout","Promise","resolve","setTimeout","columnValidForScope","Org","Repo","objectEquals","a","b","propsToBeChecked","aTrimmed","withOnlyRequestedKeys","bTrimmed","getCurrentPage","offset","pageSize","totalCount","currentPage","Math","ceil","nextItemOffset","lastPage","floor","getOffsetFromPage","page","getRealOffsetFromVirtual","virtualOffset","realPageSize","convertFromResponse","response","transformer","view","Object","keys","convertFromResponseProperty","toString","convertFromResponseItem","from","uniqueId","to","propKey","fromProp","snakeToCamel","Date","now","snake","split","part","charAt","toUpperCase","join","camelToSnake","i","camel","c","toLowerCase","camelToSnakeObject","result","obj","in15Minutes","minutesOverride","removeKeys","hasOwn","getUniqueSortedNonEmpty","Array","Set","sort","isNumber","s","isNaN","Number","downloadFileFromURL","anchor","document","createElement","setAttribute","url","style","body","appendChild","click","removeChild","getUTCDateString","toLocaleDateString","timeZone","sleep","getPercentage","round","getDuration","remainingTime","daysStr","str","getCardHeading","title","description","format","MetricsDateRangeDescription","getLoading","LoadingSkeleton","height","startTime","end","RelativeTime","endTime","MetricsLayout","hideSideNav","MetricsHeader","Box","maxWidth","p","PageHeader","borderBottomWidth","borderBottomStyle","borderColor","pb","TitleArea","Title","as","TrailingVisual","Label","Actions","Description","ConditionalChildren","renderChildren","inverse","observedProps","MetricsTable","columns","getColumns","data","getMetrics","Table","Container","Skeleton","rows","virtualPageSize","defaultOrderBy","getDefaultOrderBy","direction","orderBy","field","initialSortDirection","ORDER_BY_DIRECTION_DESC","initialSortColumn","DataTable","random","defaultPageIndex","totalItems","Pagination","onChange","pageInfo","pageIndex","setPage","FilterUtils","parseFilter","providers","trim","providersMap","Map","provider","set","filterBlocks","parsedQuery","FilterQueryParser","parse","blocks","type","TextFilterSupportEnabled","filterValues","foundKeys","block","raw","textValue","getUnescapedFilterValue","filterValue","order","operator","Contains","realFilterKey","startsWith","substring","has","getFilterValues","getOperator","Unknown","log","sorted","localeCompare","stringifyFilters","FilterProviderType","GreaterEqualTo","LessEqualTo","GreaterThan","LessThan","filterService","isFilterValueValid","FilterOperator","IsOneOf","Equals","IsNotOneOf","NotEquals","GreaterThanOrEqualTo","LessThanOrEqualTo","Between","EqualTo","isAsync","find","MetricsFilter","filterText","setFilterText","useState","onChangeInternal","validationMessage","setValidationMessage","validationCallback","useCallback","_","request","rawText","BlockType","Text","errorMessage","errors","newFilter","Filter","label","onSubmit","settings","disableAdvancedTextFilter","onValidation","tab","ValidationMessage","messages","newParsed","MetricsZeroData","Blankslate","border","visual","Visual","heading","Heading","primaryActionText","primaryActionHref","PrimaryAction","secondaryActionText","secondaryActionHref","SecondaryAction","ZERO_DATA_RESOURCES","search","MetricsExport","isExporting","getIsExporting","Spinner","srText","tooltipDirection","DownloadIcon","downloadExport","disabled","MetricsTabs","tabs","getTabs","TabNav","preview","setTab","getViewUrl","MetricsTabButton","panelId","MetricsTabPanel","iconHelper","Link","aria-controls","preventDefault","defaultPrevented","role","cursor","whiteSpace","color","pt","MetricsHeroCards","cardData","getCardData","MetricsHeroCard","metric","LoadingCard","DataCard","HERO_CARD_STYLING","card","cardTitle","MetricsHeroCardContent","fontSize","fontWeight","lineHeight","Counter","count","mx","flexBasis","MetricsLayoutTable","getFilterProviders","zeroData","getZeroDataState","setFilters","Start","Search","MetricsService","metricsView","startExport","metrics","isLoading","queryParams","setSearchParams","getFullUrl","options","newView","resetViewToFirstPage","setMetricsView","setLoading","setZeroData","zeroIndexPage","realOffset","REAL_PAGE_SIZE","setOrderBy","realViewValue","noFetch","params","getSearchParams","transform","searchParamToView","prop","DEFAULT_VIEW","IGNORED_PROPS","viewToSearchParam","VIEW_KEYS","setScope","setTabsConfig","isMetricsViewLoaded","initialized","defaultTab","setColumns","setFilterProviders","fetchData","fetchCardData","offsetToIgnoreCacheFor","setKey","ignoreCache","offsetsToIgnoreCacheFor","latestMetricsRequest","requestBody","REQUEST_KEYS","newSetKey","dataService","post","getUrlPath","delete","responseView","responseItems","sliceStart","sliceEnd","fixPageOutOfBounds","k","headers","column","header","export_id","statusResponse","durationStart","currentDuration","EXPORT_STATUS_SLEEP_DURATION","getTime","status","EXPORT_STATUS_PENDING","EXPORT_TIMEOUT","EXPORT_STATUS_COMPLETE","download_url","EXPORT_STATUS_UNKNOWN","name","duration","success","exportId","skipCache","ssrSafeLocation","pathname","URLSearchParams","searchParamValue","searchParamKey","None","getDefaultGlobalView","version","cardCount","fill","append","URL","origin","entries","setColumnsHelper","columnMap","nonSortableColumns","col","sortBy","setOrderByHelper","getScope","lastStateForTab","realTabValue","currentTab","ORDER_BY_DIRECTION_ASC","serviceRegistrationId","getServiceId","requestType","DEFAULT_ORDER_BY_DIRECTION","endsWith","parts","MetricsCell","Truncate","inline","tooltip","RepositoryCell","linkToMetrics","BlankCell","public","RepoLockedIcon","Performance","Usage","LinkCell","WorkflowCell","org","NumberCell","num","approximate","numberToShow","approximateNumber","toLocaleString","PercentCell","DurationCell","textToShow","TextCell","ariaLabel","NumberFilterProvider","StaticFilterProvider","filterTypes","multiKey","valueless","ValuesFilterProvider","RawText","Select","AsyncSuggestionsFilterProvider","AsyncFilterProvider","getSuggestions","filterQuery","filterBlock","config","caretIndex","processSuggestions","processSuggestion","getValueRowProps","text","getFilterValue","fetchSuggestions","fetchResults","getAsyncFilterSuggestions","abortSuggestionsController","signal","results","_value","suggestion","FilterValueType","Value","priority","validateFilterBlockValues","valuesIndex","validations","extractedValue","valid","all","endpoint","suggestionEndpoint","validationEndpoint","AsyncStringSuggestionsFilterProvider","FilterType","FILTERS","PulseIcon","GlobeIcon","PackageIcon","ClockIcon","RocketIcon","averageRunMinutes","averageQueueMinutes","XCircleIcon","NUMBER_COUNT_VALUE","RUNTIME_VALUES","RUNNER_TYPE_VALUES","getFilters","tabToFiltersMap","defaultTabFilters","filterItems","filterItem","filterAndType","suggestions","WORKFLOW_FILTERS","JOBS_FILTERS","REPOSITORIES_FILTERS","RUNTIME_FILTERS","RUNNER_TYPE_FILTERS","TAB_TO_FILTERS_MAPPING","UsageService","filterProviders","getColumnConfig","columnConfig","NON_SORTABLE_COLUMNS","getUsageFilters","f","setColumnConfig","isRepoLevelEnabled","tableColumns","workflowTabColumns","renderCell","ORG_NAME","minWidth","SMALL_COLUMN_WIDTH","LARGE_COLUMN_WIDTH","align","MEDIUM_COLUMN_WIDTH","EXTRA_SMALL_COLUMN_WIDTH","jobsTabColumns","repoTabColumns","runtimeTabColumns","runnerTabColumns","payload","useRoutePayload","showSideNav","OrgUsage","AnalyticsService","eventType","target","sendEvent","CONTEXT","app_name","category","react","CacheService","clear","cache","expiration","object","remove","DataService","verifiedFetchJSONWrapper","method","verifiedFetchJSON","requestInit","cacheService","fetchAndCache","cacheKey","getCacheKey","fetch","then","fetchResponse","ok","json","statusText","eAsError","cause","stack","handleErrors","neverExpires","customExpiration","cachedResult","convertedBody","skipSnakeConversion","ErrorService","displayMessage","getRandomId","PayloadService","defaultValue","featureFlags","getPath","enabled_features","FilterService","processProvider","abortSignal","debounceGetAsyncFilterSuggestions","getAsyncFilterSuggestionsInternal","viewParams","unknownItems","validValuesSetMap","valuesSet","RoutingService","navigator","replace","servicesToBeRegistered","COMMON_JOB_FILTERS","PerformanceService","NON_SORtableColumns","getPerformanceFilters","OrgPerformance","RepoPerformance","RepoUsage","registerServices","serviceType","registerReactAppFactory","routes","jsonRoute","path","transitionType","TransitionType","TRANSITION_WITHOUT_FETCH","fuzzyFilter","secondaryKey","filteredItems","fuzzyScore","keyScore","max","NO_MATCH","aScore","bScore","o","DIRECT_MATCH","Infinity","BONUS_POINT","searchQuery","bonusForStartOrEndMatch","safeSearchQuery","safeText","fzyScore","score","currentUrl","targetUrl","hasHash","host","testIdProps","history","React","AppContext","reactRouterNavigate","useReactRouterNavigate","navigateOptions","resolvePath","matchRoutes","isHashNavigation","startSoftNav","preventAutofocus","startTransition","PREVENT_AUTOFOCUS_KEY","turbo","replaceState","skipTurbo","createHref","softNavigate","turboSoftNavigate","useReactRouterSearchParams","useLocation","nextInit","newSearchParams","createSearchParams","verifiedFetch","assertRelativePathOrSameOrigin","Accept","reactFetch","reactFetchJSON","countStyle","mutedStyle","boxStyle","renderCount","numberFormatter","Intl","NumberFormat","notation","total","pluralizeCountLabel","singular","plural","ml","defaultStyle","marginTop","ColorByIndex","colors","List","showPercentages","formatValue","maximumFractionDigits","maximumSignificantDigits","renderListItem","percentageOfTotal","parseFloat","toFixed","counterContent","Divider","marginY","backgroundColor","paddingLeft","LeadingVisual","CircleBadge","flexGrow","CounterLabel","ProgressBar","PrimerProgressBar","aria-valuenow","progress","NoData","DataCardBody","noData","theme","useTheme","textDescriptionHeight","parseInt","fontSizes","lineHeights","default","data-testid","mt","borderRadius","otherProps","cardStyle","borderWidth","borderStyle","paddingTop","paddingBottom","paddingX","Stack","justify","GitHubAvatar","forwardRef","src","ref","avatarUrl","useMemo","String","Avatar","InsightsSidenav","navItems","actionsUsageMetricsKey","PlayIcon","actionsPerformanceMetricsKey","dependencyKey","CodeSquareIcon","px","NavList","aria-current","Octicon","shouldNavigateOnError","coreLoader","fetchPath","redirected","httpStatus","responseJson","loadFromEmbeddedData","embeddedData","SafeHTMLComponent","getSafeHTMLAndProps","propsWithHtml","html","safeHTML","unverifiedHTML","unverifiedHTMLConfig","RETURN_DOM","RETURN_DOM_FRAGMENT","DOMPurify","SafeHTMLBox","withSafeHTML","SafeHTMLText","dangerouslySetInnerHTML","__html","SafeHTMLDiv","waveAnimation","keyframes","waveMixin","css","pulseAnimation","pulseMixin","styled","animationStyle","themeGet"],"sourceRoot":""}