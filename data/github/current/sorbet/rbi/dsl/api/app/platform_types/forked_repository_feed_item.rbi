# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Api::App::PlatformTypes::ForkedRepositoryFeedItem`.
# Please instead update this file by running `bin/tapioca dsl Api::App::PlatformTypes::ForkedRepositoryFeedItem`.

class Api::App::PlatformTypes::ForkedRepositoryFeedItem < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(Api::App::PlatformTypes::User) }
  def actor; end

  sig { returns(T::Boolean) }
  def actor?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def created_at; end

  sig { returns(T::Boolean) }
  def created_at?; end

  sig { returns(String) }
  def description; end

  sig { returns(T::Boolean) }
  def description?; end

  sig { returns(T::Boolean) }
  def dismissable; end

  sig { returns(T::Boolean) }
  def dismissable?; end

  sig { returns(String) }
  def identifier; end

  sig { returns(T::Boolean) }
  def identifier?; end

  sig { returns(T.nilable(String)) }
  def reason_message; end

  sig { returns(T::Boolean) }
  def reason_message?; end

  sig { returns(T.nilable(String)) }
  def related_by; end

  sig { returns(T::Boolean) }
  def related_by?; end

  sig do
    returns(T::Array[T.any(Api::App::PlatformTypes::StarredRepositoryFeedItem, Api::App::PlatformTypes::ForkedRepositoryFeedItem, Api::App::PlatformTypes::CreatedRepositoryFeedItem, Api::App::PlatformTypes::PublishedReleaseFeedItem, Api::App::PlatformTypes::CreatedDiscussionFeedItem, Api::App::PlatformTypes::SponsoredUserFeedItem, Api::App::PlatformTypes::FollowedUserFeedItem, Api::App::PlatformTypes::BecameSponsorableFeedItem, Api::App::PlatformTypes::RepositoryRecommendationFeedItem, Api::App::PlatformTypes::AddedToListFeedItem, Api::App::PlatformTypes::NearSponsorsGoalFeedItem, Api::App::PlatformTypes::FollowRecommendationFeedItem, Api::App::PlatformTypes::MergedPullRequestFeedItem, Api::App::PlatformTypes::MemberAddToRepositoryFeedItem)])
  end
  def related_items; end

  sig { returns(T::Boolean) }
  def related_items?; end

  sig { returns(Api::App::PlatformTypes::Repository) }
  def repository; end

  sig { returns(T::Boolean) }
  def repository?; end

  sig { returns(T::Boolean) }
  def subject_is_viewer; end

  sig { returns(T::Boolean) }
  def subject_is_viewer?; end
end
