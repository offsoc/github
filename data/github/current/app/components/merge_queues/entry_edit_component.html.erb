<%= render(Primer::Experimental::ActionMenu.new(menu_id: menu_id, anchor_align: :end)) do |c| %>
  <% c.with_trigger("aria-label": "Actions", icon: :"kebab-horizontal") do %>
  <% end %>

  <% if show_solo_merge_option? %>
    <% c.with_item(
        tag: :button,
        type: "button",
        classes: "",
        test_selector: "force-solo-merge",
        data: { "show-dialog-id": "solo-merge-dialog-#{pull_request.number}", target: "modal-dialog.show-button" }
      ) do |item| %>
        Force solo merge
    <% end %>
  <% end %>

  <% if show_jump_queue_option? %>
    <% c.with_item(
        tag: :button,
        type: "button",
        classes: "",
        test_selector: "force-jump-queue",
        data: { "show-dialog-id": "jump-queue-dialog-#{pull_request.number}", target: "modal-dialog.show-button" }
      ) do |item| %>
        Jump queue
    <% end %>
  <% end %>

  <% c.with_item(
      tag: :button,
      type: "button",
      is_dangerous: true,
      classes: "",
      test_selector: "remove-from-queue",
      data: { "show-dialog-id": "remove-from-queue-dialog-#{pull_request.number}", target: "modal-dialog.show-button" }
    ) do |item| %>
      Remove from queue
  <% end %>
<% end %>

<% if show_solo_merge_option? %>
  <%= render(Primer::Alpha::Dialog.new(id: "solo-merge-dialog-#{pull_request.number}", title: "Solo Merge")) do |d| %>
    <%= form_tag(
          merge_queue_entry_path(repository: @repository, user_id: @repository.owner_display_login, merge_queue_branch: @merge_queue.branch, id: entry.id),
          method: :patch
        ) do %>
      <%= render(Primer::Alpha::Dialog::Body.new) do %>
        Are you sure you want to force <strong>#<%= pull_request.number %></strong> to merge solo?
        <% if show_solo_merge_warning? %>
          This may delay other pull requests in the queue.
        <% end %>
        <%= hidden_field_tag :solo, "true", id: nil %>
      <% end %>
      <%= render(Primer::Alpha::Dialog::Footer.new(show_divider: false)) do %>
        <%= render(Primer::Beta::Button.new(data: { "close-dialog-id": "solo-merge-dialog-#{pull_request.number}" })) { "Cancel" } %>
        <%= render(Primer::Beta::Button.new(scheme: :danger, type: :submit, "data-disable-with": "Forcing solo merge...")) { "Yes, force solo merge" } %>
      <% end %>
    <% end %>
  <% end %>
<% end %>

<% if show_jump_queue_option? %>
  <%= render(Primer::Alpha::Dialog.new(id: "jump-queue-dialog-#{pull_request.number}", title: "Jump queue")) do |d| %>
    <%= form_tag(
        merge_queue_entry_path(repository: @repository, user_id: @repository.owner_display_login, merge_queue_branch: @merge_queue.branch, id: entry.id),
        method: :patch
      ) do %>
      <%= render(Primer::Alpha::Dialog::Body.new) do %>
        <%= hidden_field_tag :jump, "true", id: nil %>
        Are you sure you want to force <strong>#<%= pull_request.number %></strong> to jump the queue?
      <% end %>
      <%= render(Primer::Alpha::Dialog::Footer.new(show_divider: false)) do %>
        <%= render(Primer::Beta::Button.new(data: { "close-dialog-id": "jump-queue-dialog-#{pull_request.number}" })) { "Cancel" } %>
        <%= render(Primer::Beta::Button.new(scheme: :danger, type: :submit, "data-disable-with": "Jumping the queue...")) { "Yes, jump the queue" } %>
      <% end %>
    <% end %>
  <% end %>
<% end %>

<%= render(Primer::Alpha::Dialog.new(id: "remove-from-queue-dialog-#{pull_request.number}", title: "Remove pull request from queue")) do |d| %>
  <%= form_tag(
        merge_queue_entry_path(repository: @repository, user_id: @repository.owner_display_login, merge_queue_branch: @merge_queue.branch, id: entry.id),
        method: :delete
      ) do %>
    <%= render(Primer::Alpha::Dialog::Body.new) do %>
      Are you sure you want to remove <strong>#<%= pull_request.number %></strong> from the queue? This action cannot be undone. You can enqueue the pull request again, but it will lose its current spot in the queue.
    <% end %>
    <%= render(Primer::Alpha::Dialog::Footer.new(show_divider: false)) do %>
      <%= render(Primer::Beta::Button.new(data: { "close-dialog-id": "remove-from-queue-dialog-#{pull_request.number}" })) { "Cancel" } %>
      <%= render(Primer::Beta::Button.new(scheme: :danger, type: :submit, "data-disable-with": "Removing from queue...")) { "Yes, remove from queue" } %>
    <% end %>
  <% end %>
<% end %>
