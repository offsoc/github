# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Api::App::PlatformTypes::MarkedAsDuplicateEvent`.
# Please instead update this file by running `bin/tapioca dsl Api::App::PlatformTypes::MarkedAsDuplicateEvent`.

class Api::App::PlatformTypes::MarkedAsDuplicateEvent < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(T.nilable(GraphQL::Client::Schema::InterfaceType)) }
  def actor; end

  sig { returns(T::Boolean) }
  def actor?; end

  sig { returns(T.nilable(T.any(Api::App::PlatformTypes::Issue, Api::App::PlatformTypes::PullRequest))) }
  def canonical; end

  sig { returns(T::Boolean) }
  def canonical?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def created_at; end

  sig { returns(T::Boolean) }
  def created_at?; end

  sig { returns(T.nilable(Integer)) }
  def database_id; end

  sig { returns(T::Boolean) }
  def database_id?; end

  sig { returns(T.nilable(T.any(Api::App::PlatformTypes::Issue, Api::App::PlatformTypes::PullRequest))) }
  def duplicate; end

  sig { returns(T::Boolean) }
  def duplicate?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def full_database_id; end

  sig { returns(T::Boolean) }
  def full_database_id?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(T::Boolean) }
  def is_cross_repository; end

  sig { returns(T::Boolean) }
  def is_cross_repository?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::InterfaceType)) }
  def safe_actor; end

  sig { returns(T::Boolean) }
  def safe_actor?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def unmark_as_duplicate_resource_path; end

  sig { returns(T::Boolean) }
  def unmark_as_duplicate_resource_path?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def unmark_as_duplicate_url; end

  sig { returns(T::Boolean) }
  def unmark_as_duplicate_url?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::App)) }
  def via_app; end

  sig { returns(T::Boolean) }
  def via_app?; end

  sig { returns(T::Boolean) }
  def viewer_can_undo; end

  sig { returns(T::Boolean) }
  def viewer_can_undo?; end
end
