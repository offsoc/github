{"version":3,"file":"chunk-node_modules_codemirror_legacy-modes_mode_dockerfile_js-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@codemirror/legacy-modes/mode/dockerfile.js","node_modules/@codemirror/legacy-modes/mode/simple-mode.js"],"sourcesContent":["import {simpleMode} from \"./simple-mode.js\"\n\nvar from = \"from\";\nvar fromRegex = new RegExp(\"^(\\\\s*)\\\\b(\" + from + \")\\\\b\", \"i\");\n\nvar shells = [\"run\", \"cmd\", \"entrypoint\", \"shell\"];\nvar shellsAsArrayRegex = new RegExp(\"^(\\\\s*)(\" + shells.join('|') + \")(\\\\s+\\\\[)\", \"i\");\n\nvar expose = \"expose\";\nvar exposeRegex = new RegExp(\"^(\\\\s*)(\" + expose + \")(\\\\s+)\", \"i\");\n\nvar others = [\n  \"arg\", \"from\", \"maintainer\", \"label\", \"env\",\n  \"add\", \"copy\", \"volume\", \"user\",\n  \"workdir\", \"onbuild\", \"stopsignal\", \"healthcheck\", \"shell\"\n];\n\n// Collect all Dockerfile directives\nvar instructions = [from, expose].concat(shells).concat(others),\n    instructionRegex = \"(\" + instructions.join('|') + \")\",\n    instructionOnlyLine = new RegExp(\"^(\\\\s*)\" + instructionRegex + \"(\\\\s*)(#.*)?$\", \"i\"),\n    instructionWithArguments = new RegExp(\"^(\\\\s*)\" + instructionRegex + \"(\\\\s+)\", \"i\");\n\nexport const dockerFile = simpleMode({\n  start: [\n    // Block comment: This is a line starting with a comment\n    {\n      regex: /^\\s*#.*$/,\n      sol: true,\n      token: \"comment\"\n    },\n    {\n      regex: fromRegex,\n      token: [null, \"keyword\"],\n      sol: true,\n      next: \"from\"\n    },\n    // Highlight an instruction without any arguments (for convenience)\n    {\n      regex: instructionOnlyLine,\n      token: [null, \"keyword\", null, \"error\"],\n      sol: true\n    },\n    {\n      regex: shellsAsArrayRegex,\n      token: [null, \"keyword\", null],\n      sol: true,\n      next: \"array\"\n    },\n    {\n      regex: exposeRegex,\n      token: [null, \"keyword\", null],\n      sol: true,\n      next: \"expose\"\n    },\n    // Highlight an instruction followed by arguments\n    {\n      regex: instructionWithArguments,\n      token: [null, \"keyword\", null],\n      sol: true,\n      next: \"arguments\"\n    },\n    {\n      regex: /./,\n      token: null\n    }\n  ],\n  from: [\n    {\n      regex: /\\s*$/,\n      token: null,\n      next: \"start\"\n    },\n    {\n      // Line comment without instruction arguments is an error\n      regex: /(\\s*)(#.*)$/,\n      token: [null, \"error\"],\n      next: \"start\"\n    },\n    {\n      regex: /(\\s*\\S+\\s+)(as)/i,\n      token: [null, \"keyword\"],\n      next: \"start\"\n    },\n    // Fail safe return to start\n    {\n      token: null,\n      next: \"start\"\n    }\n  ],\n  single: [\n    {\n      regex: /(?:[^\\\\']|\\\\.)/,\n      token: \"string\"\n    },\n    {\n      regex: /'/,\n      token: \"string\",\n      pop: true\n    }\n  ],\n  double: [\n    {\n      regex: /(?:[^\\\\\"]|\\\\.)/,\n      token: \"string\"\n    },\n    {\n      regex: /\"/,\n      token: \"string\",\n      pop: true\n    }\n  ],\n  array: [\n    {\n      regex: /\\]/,\n      token: null,\n      next: \"start\"\n    },\n    {\n      regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/,\n      token: \"string\"\n    }\n  ],\n  expose: [\n    {\n      regex: /\\d+$/,\n      token: \"number\",\n      next: \"start\"\n    },\n    {\n      regex: /[^\\d]+$/,\n      token: null,\n      next: \"start\"\n    },\n    {\n      regex: /\\d+/,\n      token: \"number\"\n    },\n    {\n      regex: /[^\\d]+/,\n      token: null\n    },\n    // Fail safe return to start\n    {\n      token: null,\n      next: \"start\"\n    }\n  ],\n  arguments: [\n    {\n      regex: /^\\s*#.*$/,\n      sol: true,\n      token: \"comment\"\n    },\n    {\n      regex: /\"(?:[^\\\\\"]|\\\\.)*\"?$/,\n      token: \"string\",\n      next: \"start\"\n    },\n    {\n      regex: /\"/,\n      token: \"string\",\n      push: \"double\"\n    },\n    {\n      regex: /'(?:[^\\\\']|\\\\.)*'?$/,\n      token: \"string\",\n      next: \"start\"\n    },\n    {\n      regex: /'/,\n      token: \"string\",\n      push: \"single\"\n    },\n    {\n      regex: /[^#\"']+[\\\\`]$/,\n      token: null\n    },\n    {\n      regex: /[^#\"']+$/,\n      token: null,\n      next: \"start\"\n    },\n    {\n      regex: /[^#\"']+/,\n      token: null\n    },\n    // Fail safe return to start\n    {\n      token: null,\n      next: \"start\"\n    }\n  ],\n  languageData: {\n    commentTokens: {line: \"#\"}\n  }\n});\n\n","export function simpleMode(states) {\n  ensureState(states, \"start\");\n  var states_ = {}, meta = states.languageData || {}, hasIndentation = false;\n  for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n    var list = states_[state] = [], orig = states[state];\n    for (var i = 0; i < orig.length; i++) {\n      var data = orig[i];\n      list.push(new Rule(data, states));\n      if (data.indent || data.dedent) hasIndentation = true;\n    }\n  }\n  return {\n    name: meta.name,\n    startState: function() {\n      return {state: \"start\", pending: null, indent: hasIndentation ? [] : null};\n    },\n    copyState: function(state) {\n      var s = {state: state.state, pending: state.pending, indent: state.indent && state.indent.slice(0)};\n      if (state.stack)\n        s.stack = state.stack.slice(0);\n      return s;\n    },\n    token: tokenFunction(states_),\n    indent: indentFunction(states_, meta),\n    languageData: meta\n  }\n};\n\nfunction ensureState(states, name) {\n  if (!states.hasOwnProperty(name))\n    throw new Error(\"Undefined state \" + name + \" in simple mode\");\n}\n\nfunction toRegex(val, caret) {\n  if (!val) return /(?:)/;\n  var flags = \"\";\n  if (val instanceof RegExp) {\n    if (val.ignoreCase) flags = \"i\";\n    val = val.source;\n  } else {\n    val = String(val);\n  }\n  return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n}\n\nfunction asToken(val) {\n  if (!val) return null;\n  if (val.apply) return val\n  if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n  var result = [];\n  for (var i = 0; i < val.length; i++)\n    result.push(val[i] && val[i].replace(/\\./g, \" \"));\n  return result;\n}\n\nfunction Rule(data, states) {\n  if (data.next || data.push) ensureState(states, data.next || data.push);\n  this.regex = toRegex(data.regex);\n  this.token = asToken(data.token);\n  this.data = data;\n}\n\nfunction tokenFunction(states) {\n  return function(stream, state) {\n    if (state.pending) {\n      var pend = state.pending.shift();\n      if (state.pending.length == 0) state.pending = null;\n      stream.pos += pend.text.length;\n      return pend.token;\n    }\n\n    var curState = states[state.state];\n    for (var i = 0; i < curState.length; i++) {\n      var rule = curState[i];\n      var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n      if (matches) {\n        if (rule.data.next) {\n          state.state = rule.data.next;\n        } else if (rule.data.push) {\n          (state.stack || (state.stack = [])).push(state.state);\n          state.state = rule.data.push;\n        } else if (rule.data.pop && state.stack && state.stack.length) {\n          state.state = state.stack.pop();\n        }\n\n        if (rule.data.indent)\n          state.indent.push(stream.indentation() + stream.indentUnit);\n        if (rule.data.dedent)\n          state.indent.pop();\n        var token = rule.token\n        if (token && token.apply) token = token(matches)\n        if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n          state.pending = [];\n          for (var j = 2; j < matches.length; j++)\n            if (matches[j])\n              state.pending.push({text: matches[j], token: rule.token[j - 1]});\n          stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n          return token[0];\n        } else if (token && token.join) {\n          return token[0];\n        } else {\n          return token;\n        }\n      }\n    }\n    stream.next();\n    return null;\n  };\n}\n\nfunction indentFunction(states, meta) {\n  return function(state, textAfter) {\n    if (state.indent == null || meta.dontIndentStates && meta.doneIndentState.indexOf(state.state) > -1)\n      return null\n\n    var pos = state.indent.length - 1, rules = states[state.state];\n    scan: for (;;) {\n      for (var i = 0; i < rules.length; i++) {\n        var rule = rules[i];\n        if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n          var m = rule.regex.exec(textAfter);\n          if (m && m[0]) {\n            pos--;\n            if (rule.next || rule.push) rules = states[rule.next || rule.push];\n            textAfter = textAfter.slice(m[0].length);\n            continue scan;\n          }\n        }\n      }\n      break;\n    }\n    return pos < 0 ? 0 : state.indent[pos];\n  };\n}\n"],"names":["from","fromRegex","shells","shellsAsArrayRegex","join","expose","exposeRegex","instructionRegex","instructions","concat","instructionOnlyLine","instructionWithArguments","dockerFile","start","regex","sol","token","next","single","pop","double","array","arguments","push","languageData","commentTokens","line","simpleMode","states","ensureState","states_","meta","hasIndentation","state","hasOwnProperty","list","orig","i","length","data","Rule","indent","dedent","name","startState","pending","copyState","s","slice","stack","stream","pend","shift","pos","text","curState","rule","matches","match","indentation","indentUnit","apply","j","backUp","textAfter","dontIndentStates","doneIndentState","indexOf","rules","scan","dedentIfLineStart","m","exec","toRegex","val","caret","flags","RegExp","ignoreCase","source","String","asToken","replace","result"],"sourceRoot":""}