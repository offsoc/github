{"version":3,"file":"actions-secrets-variables-list-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/actions-secrets-variables-list/types.ts","ui/packages/actions-secrets-variables-list/util.ts","ui/packages/actions-secrets-variables-list/FormDialog.tsx","ui/packages/actions-secrets-variables-list/DeleteDialog.tsx","ui/packages/actions-secrets-variables-list/DescriptionElement.tsx","ui/packages/actions-secrets-variables-list/ActionsSecretsVariablesBlankstate.tsx","ui/packages/actions-secrets-variables-list/TableAction.tsx","ui/packages/actions-secrets-variables-list/ActionsSecretsVariablesList.tsx","ui/packages/actions-secrets-variables-list/actions-secrets-variables-list.ts","ui/packages/analytics-overrides/analytics-overrides.ts","ui/packages/details-dialog/details-dialog.ts","ui/packages/failbot/failbot.ts","ui/packages/html-safe-nonce/html-safe-nonce.ts","ui/packages/trusted-types-policies/server-x-safe-html.ts","ui/packages/fetch-utils/fetch-utils.ts","ui/packages/hydro-analytics/hydro-analytics.ts","ui/packages/trusted-types-policies/parse-html.ts","ui/packages/parse-html/parse-html.ts","ui/packages/react-core/deferred-registry.ts","ui/packages/react-core/react-partial-anchor.ts","ui/packages/react-core/react-partial-registry.ts","ui/packages/react-core/ReactPartialElement.tsx","ui/packages/react-core/register-partial.ts","ui/packages/react-profiling-mode/src/index.ts","ui/packages/safe-storage/session-storage.ts","ui/packages/soft-nav/utils.ts","ui/packages/sudo/sudo.ts","ui/packages/test-id-props/test-id-props.ts","ui/packages/trusted-types-policies/policy.ts","ui/packages/trusted-types/trusted-types.ts","ui/packages/verified-fetch/verified-fetch.ts","ui/packages/webauthn-support-level/webauthn-support-level.ts","ui/packages/react-core/PartialRouter.tsx","ui/packages/react-core/PartialEntry.tsx","ui/packages/react-core/ReactBaseElement.tsx"],"sourcesContent":["export enum ItemsScope {\n  Organization = 'Organization',\n  OrgHostSetup = 'Host setup',\n  OrgDevEnv = 'Development environment',\n  Repository = 'Repository',\n  Environment = 'Environment',\n  CodespaceUser = 'Codespace user',\n}\n\nexport enum ListMode {\n  secret = 'secret',\n  variable = 'variable',\n}\n\nexport interface RowData {\n  // ID is the unique identifier for the row - same as name except for environment secrets on the repo page\n  id: string\n  // Name is the display name for the row\n  name: string\n  scope?: ItemsScope\n  environment?: string\n  environmentUrl?: string\n  editUrl?: string\n  deleteUrl?: string\n  lastUpdated?: Date\n  visibility?: string\n  override?: boolean\n  value?: string\n}\n\nexport interface Item {\n  name: string\n  environment_name?: string\n  environment_url?: string\n  visibility_description?: string\n  updated_at: Date\n  scope: ItemsScope\n  value?: string\n}\n\nexport enum FormMode {\n  add = 'add',\n  update = 'update',\n}\n\nexport interface CrudUrls {\n  editUrls?: {[secretName: string]: string}\n  deleteUrls?: {[secretName: string]: string}\n}\n\nexport interface TableActionProps {\n  url?: string\n  mode: ListMode\n  message: string\n  useDialog?: boolean\n  isEditableInScope: boolean\n  publicKey?: string\n  keyId?: string\n  tableDataUpdater: (item: Item, url: string, mode: FormMode) => void\n}\n\nexport interface Description {\n  text: string\n  contextUrl?: string\n  contextLinkText?: string\n}\n\nexport interface ActionsSecretsVariablesListProps {\n  items: Item[]\n  overrides?: Item[]\n  scope: ItemsScope\n  environmentUrls?: {[environmentName: string]: string}\n  crudUrls?: CrudUrls\n  tableActionProps: TableActionProps\n  mode: ListMode\n  description?: Description\n  isPrivateRepoInFreeOrg: boolean\n}\n\nexport interface FormDialogProps {\n  mode: ListMode\n  name?: string\n  value?: string\n  onClose: () => void\n  tableDataUpdater: (item: Item, url: string, mode: FormMode) => void\n  formMode: FormMode\n  url?: string\n  publicKey?: string\n  rowId: string\n  keyId?: string\n}\n\nexport interface DeleteDialogProps {\n  url: string\n  rowId: string\n  mode: ListMode\n  additionalFormData?: {[key: string]: string}\n  setClose: (open: boolean, rowId: string) => void\n  tableDataUpdater: (itemName: string) => void\n}\n\nexport interface DescriptionElementProps {\n  description: Description\n}\n\nexport interface ActionsSecretsVariablesBlankstateProps {\n  scope: ItemsScope\n  mode: ListMode\n  description: Description\n  tableAction: JSX.Element\n  isEditableInScope: boolean\n  isPrivateRepoInFreeOrg: boolean\n}\n","// eslint-disable-next-line import/no-nodejs-modules\nimport {Buffer} from 'buffer'\n\nexport async function encryptString(itemValue: string, publicKey: string) {\n  const {seal} = await import('../../../app/assets/modules/github/tweetsodium')\n  const itemBytes = Buffer.from(itemValue)\n  const publicKeyBytes = Buffer.from(publicKey, 'base64')\n  const encryptedBytes = seal(itemBytes, publicKeyBytes)\n  const encryptedValue = Buffer.from(encryptedBytes).toString('base64')\n\n  return encryptedValue\n}\n","import type {FormEvent} from 'react'\nimport {useState} from 'react'\nimport {Dialog} from '@primer/react/drafts'\nimport {Flash, FormControl, TextInput, Textarea} from '@primer/react'\nimport {fetchSessionInSudo, sudoPrompt} from '@github-ui/sudo'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport capitalize from 'lodash-es/capitalize'\nimport {ItemsScope, ListMode, FormMode, type Item, type FormDialogProps} from './types'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {encryptString} from './util'\n\n// eslint-disable-next-line import/no-nodejs-modules\nimport {Buffer} from 'buffer'\n\nexport const FormDialog = ({\n  mode,\n  name,\n  value,\n  onClose,\n  tableDataUpdater,\n  formMode,\n  publicKey,\n  keyId,\n  url,\n}: FormDialogProps) => {\n  const [err, setError] = useState(false)\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const [nameValue, setNameValue] = useState<string>(name || '')\n  const [itemValue, setItemValue] = useState<string>(value || '')\n\n  const prefix = capitalize(formMode)\n\n  const [visible, setVisible] = useState(true)\n  const [saving, setSaving] = useState(false)\n\n  const resetToDefaultStates = () => {\n    setError(false)\n    setErrorMessage('')\n    setSaving(false)\n  }\n\n  const handleSubmit = async (e: FormEvent<HTMLElement>) => {\n    resetToDefaultStates()\n    if (!nameValue || !itemValue || (!keyId && mode === ListMode.secret)) {\n      setError(true)\n      setErrorMessage('Name and value are required')\n      return\n    }\n\n    if (url) {\n      // If we're updating a secret or variable, we need to check if the user is in sudo mode\n      if (formMode !== FormMode.add) {\n        // check if the current session is in sudo mode\n        let sessionInSudo = await fetchSessionInSudo()\n\n        // if not in sudo mode, we need to prompt the user to confirm access to sudo mode\n        if (!sessionInSudo) {\n          // we need to hide this dialog so that the sudo modal doesn't have issues with focus trapping\n          setVisible(false)\n          sessionInSudo = await sudoPrompt(e.currentTarget)\n          setVisible(true)\n          // if the user cancels the sudo prompt, we can stop here with an error\n          if (!sessionInSudo) {\n            setError(true)\n            setErrorMessage('Re-authentication required')\n            return\n          }\n        }\n      }\n\n      // Set form data\n      const formData = new FormData()\n      setSaving(true)\n      if (mode === ListMode.secret) {\n        if (keyId && publicKey !== undefined) {\n          const encryptedValue = await encryptString(itemValue, publicKey)\n\n          formData.set('secret_name', nameValue)\n          formData.set('encrypted_value', encryptedValue)\n          formData.set('key_id', keyId)\n        } else {\n          // This error should only occur from improper use of the component, should never surface to user\n          setError(true)\n          setErrorMessage('Secret encryption failed: missing public key')\n          return\n        }\n      } else if (mode === ListMode.variable) {\n        formData.set(formMode === FormMode.update ? 'variable_updated_name' : 'variable_name', nameValue)\n        formData.set('variable_value', itemValue)\n      }\n\n      // Do request and handle result\n      const resp = await verifiedFetch(url, {\n        method: formMode === FormMode.add ? 'POST' : 'PUT',\n        body: formData,\n      })\n      setSaving(false)\n      if (resp.ok) {\n        onClose()\n\n        // Pre-encrypt variables for re-render in parent component\n        const finalValue = mode === ListMode.secret ? undefined : Buffer.from(itemValue).toString('base64')\n        const result: Item = {\n          name: nameValue.toUpperCase(),\n          value: finalValue,\n          scope: ItemsScope.Environment,\n          updated_at: new Date(Date.now()),\n        }\n\n        // Generate new URL for update/delete routes\n        const urlArray = url.split('/')\n        urlArray.pop()\n        urlArray.push(nameValue.toUpperCase())\n        const newUrl = urlArray.join('/')\n\n        tableDataUpdater(result, newUrl, formMode)\n        setVisible(false)\n      } else {\n        const body = await resp.json()\n        setErrorMessage(body.message ?? `An error occurred while saving your ${mode}, please try again`)\n        setError(true)\n      }\n    }\n  }\n\n  return (\n    <Dialog\n      title={`${prefix} ${mode}`}\n      sx={{visibility: visible ? 'visible' : 'hidden'}}\n      onClose={() => {\n        resetToDefaultStates()\n        onClose()\n      }}\n      footerButtons={[\n        {\n          buttonType: 'danger',\n          content: 'Cancel',\n          onClick: () => {\n            resetToDefaultStates()\n            onClose()\n          },\n        },\n        {\n          buttonType: 'primary',\n          content: `${prefix} ${mode}`,\n          onClick: e => {\n            handleSubmit(e)\n          },\n          autoFocus: true,\n          disabled: saving,\n          ...testIdProps('submit-button'),\n        },\n      ]}\n    >\n      <Dialog.Body data-testid=\"form-dialog\">\n        {err && (\n          <div className=\"mb-2\">\n            <Flash variant=\"danger\" data-testid=\"error-block\">\n              {errorMessage}\n            </Flash>\n          </div>\n        )}\n        {mode === ListMode.secret && formMode === FormMode.update ? (\n          <p>\n            <code className=\"color-fg-default f4\" data-testid={`environment-${mode}-name`}>\n              {nameValue}\n            </code>\n          </p>\n        ) : (\n          <FormControl>\n            <FormControl.Label>Name</FormControl.Label>\n            <TextInput\n              sx={{width: '100%'}}\n              placeholder={`YOUR_${mode.toUpperCase()}_NAME`}\n              value={nameValue}\n              onChange={e => setNameValue(e.target.value)}\n              data-testid={`environment-${mode}-name-input`}\n            />\n          </FormControl>\n        )}\n        <FormControl>\n          <FormControl.Label>\n            <div className=\"mt-2\">Value</div>\n          </FormControl.Label>\n          <Textarea\n            placeholder={`${capitalize(mode)} value`}\n            value={itemValue}\n            onChange={e => setItemValue(e.target.value)}\n            sx={{width: '100%'}}\n            data-testid={`environment-${mode}-value`}\n          />\n        </FormControl>\n      </Dialog.Body>\n    </Dialog>\n  )\n}\n\nexport default FormDialog\n\ntry{ FormDialog.displayName ||= 'FormDialog' } catch {}","import {useState} from 'react'\nimport {Dialog} from '@primer/react/drafts'\nimport {fetchSessionInSudo, sudoPrompt} from '@github-ui/sudo'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport {Button, Flash} from '@primer/react'\nimport type {DeleteDialogProps} from './types'\n\nexport const DeleteDialog = ({url, rowId, mode, setClose, additionalFormData, tableDataUpdater}: DeleteDialogProps) => {\n  const [err, setError] = useState(false)\n  const [deleting, setDeleting] = useState(false)\n  // this is required as sort of a workaround to prevent\n  // focus trapping while the sudo modal is open\n  const [visible, setVisible] = useState(true)\n\n  return (\n    <Dialog\n      title={`Delete ${mode}`}\n      onClose={() => {\n        setClose(false, rowId)\n        setError(false)\n      }}\n      sx={{visibility: visible ? 'visible' : 'hidden'}}\n      renderFooter={() => {\n        return (\n          <Dialog.Footer>\n            <Button\n              variant=\"danger\"\n              block={true}\n              disabled={deleting}\n              data-testid=\"confirm-delete-button\"\n              onClick={async e => {\n                if (url) {\n                  // reset any previous errors\n                  setError(false)\n\n                  // check if the current session is in sudo mode\n                  let sessionInSudo = await fetchSessionInSudo()\n\n                  // if not in sudo mode, we need to prompt the user to confirm access to sudo mode\n                  if (!sessionInSudo) {\n                    // we need to hide this dialog so that the sudo modal doesn't have issues with focus trapping\n                    setVisible(false)\n                    sessionInSudo = await sudoPrompt(e.currentTarget)\n                    setVisible(true)\n                    // if the user cancels the sudo prompt, we can stop here with an error\n                    if (!sessionInSudo) {\n                      setError(true)\n                      return\n                    }\n                  }\n\n                  setDeleting(true)\n                  const formData = new FormData()\n                  formData.append('_method', 'delete')\n                  if (additionalFormData) {\n                    for (const key in additionalFormData) {\n                      formData.append(key, additionalFormData[key]!)\n                    }\n                  }\n                  const resp = await verifiedFetch(url, {\n                    method: 'POST',\n                    body: formData,\n                  })\n                  setDeleting(false)\n\n                  if (resp.ok) {\n                    setClose(false, rowId)\n                    tableDataUpdater(rowId)\n                  } else {\n                    setError(true)\n                  }\n                }\n              }}\n            >\n              Yes, delete this {mode}\n            </Button>\n          </Dialog.Footer>\n        )\n      }}\n      aria-label={`Delete ${mode}`}\n      data-testid=\"delete-dialog\"\n    >\n      {err && (\n        <div className=\"mb-2\">\n          <Flash variant=\"danger\">Unable to delete {mode}</Flash>\n        </div>\n      )}\n      {deleting ? (\n        <p>\n          Deleting <code className=\"color-fg-default f6\">{rowId}</code>...\n        </p>\n      ) : (\n        <p>\n          Are you sure you want to delete <code className=\"color-fg-default f6\">{rowId}</code>?\n        </p>\n      )}\n    </Dialog>\n  )\n}\n\nexport default DeleteDialog\n\ntry{ DeleteDialog.displayName ||= 'DeleteDialog' } catch {}","import type {DescriptionElementProps} from './types'\nimport {Text, Link} from '@primer/react'\n\nexport const DescriptionElement = ({description}: DescriptionElementProps) => {\n  return (\n    <div className=\"mt-2\">\n      <Text className=\"color-fg-muted\" sx={{fontSize: 1}}>\n        {description.text}\n        <Link href={description.contextUrl} inline>\n          {description.contextLinkText}\n        </Link>\n        .\n      </Text>\n    </div>\n  )\n}\n\nexport default DescriptionElement\n\ntry{ DescriptionElement.displayName ||= 'DescriptionElement' } catch {}","import {Blankslate} from '@primer/react/drafts'\nimport {Text} from '@primer/react'\n\nimport {DescriptionElement} from './DescriptionElement'\nimport {ItemsScope, type ActionsSecretsVariablesBlankstateProps as TableBlankstateProps} from './types'\n\nexport function TableBlankstate({\n  scope,\n  mode,\n  description,\n  tableAction,\n  isEditableInScope,\n  isPrivateRepoInFreeOrg,\n}: TableBlankstateProps) {\n  const lowerCaseScope = scope.toLowerCase()\n  const tableName = `${scope} ${mode}s`\n  let emptyMessage = ''\n\n  switch (scope) {\n    case ItemsScope.Repository:\n      emptyMessage = `This repository has no ${mode}s.`\n      break\n    case ItemsScope.Environment:\n      emptyMessage = `This environment has no ${mode}s.`\n      break\n    case ItemsScope.Organization:\n      if (isEditableInScope) {\n        emptyMessage = `This organization has no ${mode}s.`\n      } else if (isPrivateRepoInFreeOrg) {\n        emptyMessage = `Organization ${mode}s can only be used by public repositories on your plan. If you would like to use organization ${mode}s in a private repository, you will need to upgrade your plan.`\n      } else {\n        emptyMessage = `There are no organization ${mode}s available to this repository.`\n      }\n      break\n    case ItemsScope.OrgHostSetup:\n      emptyMessage = `This organization has no host setup ${mode}s.`\n      break\n    case ItemsScope.OrgDevEnv:\n      emptyMessage = `This organization has no development environment ${mode}s.`\n      break\n    case ItemsScope.CodespaceUser:\n      emptyMessage = `There are no Codespace ${mode}s.`\n      break\n  }\n\n  return (\n    <>\n      <Text as=\"h2\" id={`${lowerCaseScope}-${mode}s`} sx={{fontSize: 2, fontWeight: 'bold'}}>\n        {tableName}\n      </Text>\n      {description.text ? <DescriptionElement description={description} /> : undefined}\n      <div className=\"border rounded-2 mt-2\">\n        <Blankslate>\n          <Blankslate.Description>\n            <Text sx={{color: 'fg.muted', fontSize: 1, display: 'flex', textAlign: 'center'}}>{emptyMessage}</Text>\n          </Blankslate.Description>\n          <div className=\"mt-2\" data-testid={'table-action'}>\n            {tableAction}\n          </div>\n        </Blankslate>\n      </div>\n    </>\n  )\n}\n\nexport default TableBlankstate\n\ntry{ TableBlankstate.displayName ||= 'TableBlankstate' } catch {}","import {LinkButton} from '@primer/react'\nimport {useState} from 'react'\nimport {FormDialog} from './FormDialog'\nimport {testIdProps} from '@github-ui/test-id-props'\n\nimport {FormMode} from './types'\nimport type {TableActionProps} from './types'\n\nexport const TableAction = ({\n  url,\n  mode,\n  message,\n  useDialog,\n  isEditableInScope,\n  publicKey,\n  keyId,\n  tableDataUpdater,\n}: TableActionProps) => {\n  const variant = isEditableInScope ? 'primary' : 'default'\n  const [newItemDialogOpen, setNewItemDialogOpen] = useState(false)\n\n  if (url) {\n    if (useDialog) {\n      return (\n        <>\n          <LinkButton\n            variant=\"default\"\n            sx={{fontSize: 1, ':hover': {textDecoration: 'none'}}}\n            underline={false}\n            onClick={() => setNewItemDialogOpen(true)}\n            {...testIdProps('create-new-item-form-button')}\n          >\n            {message}\n          </LinkButton>\n          {newItemDialogOpen && (\n            <FormDialog\n              mode={mode}\n              onClose={() => setNewItemDialogOpen(false)}\n              tableDataUpdater={tableDataUpdater}\n              formMode={FormMode.add}\n              url={url}\n              publicKey={publicKey}\n              keyId={keyId}\n              rowId={''}\n            />\n          )}\n        </>\n      )\n    } else {\n      return (\n        <LinkButton\n          variant={variant}\n          sx={{fontSize: 1, ':hover': {textDecoration: 'none'}}}\n          underline={false}\n          href={url}\n        >\n          {message}\n        </LinkButton>\n      )\n    }\n  } else {\n    // Non-admins do not have a table action\n    return <></>\n  }\n}\n\nexport default TableAction\n\ntry{ TableAction.displayName ||= 'TableAction' } catch {}","import {PencilIcon, LockIcon, TrashIcon} from '@primer/octicons-react'\nimport {DataTable, Table, createColumnHelper} from '@primer/react/drafts'\nimport {IconButton, Link, Octicon, RelativeTime, Text, Truncate} from '@primer/react'\n\nimport {useMemo, useState} from 'react'\nimport {FormDialog} from './FormDialog'\nimport {DeleteDialog} from './DeleteDialog'\nimport {DescriptionElement} from './DescriptionElement'\nimport {TableBlankstate} from './ActionsSecretsVariablesBlankstate'\nimport {TableAction} from './TableAction'\n\n// eslint-disable-next-line import/no-nodejs-modules\nimport {Buffer} from 'buffer'\nimport capitalize from 'lodash-es/capitalize'\nimport {ListMode, ItemsScope, FormMode} from './types'\nimport type {CrudUrls, ActionsSecretsVariablesListProps, Item, RowData} from './types'\n\nconst VISIBILITY_COL_MAX_WIDTH = 180\nconst LAST_UPDATED_COL_MAX_WIDTH = 127\n\nexport function ActionsSecretsVariablesList({\n  items,\n  overrides,\n  scope,\n  environmentUrls,\n  crudUrls,\n  tableActionProps,\n  mode,\n  description = {text: '', contextUrl: ''},\n  isPrivateRepoInFreeOrg = false,\n}: ActionsSecretsVariablesListProps) {\n  const lowerCaseScope = scope.toLowerCase()\n  const isEditableInScope = crudUrls !== undefined\n  const tableName = `${scope} ${mode}s`\n\n  const columnHelper = createColumnHelper<RowData>()\n  const columns = []\n\n  const [deleteDialogStates, setDeleteDialogStates] = useState(new Map<string, boolean>())\n  const [saveDialogStates, setSaveDialogStates] = useState(new Map<string, boolean>())\n  const [itemsState, setItemsState] = useState(items)\n  const [crudUrlsState, setCrudUrlsState] = useState(crudUrls)\n\n  function setIsDeleteDialogOpenForRow(open: boolean, rowId: string) {\n    const updatedDialogStates = new Map(deleteDialogStates)\n    updatedDialogStates.set(rowId, open)\n    setDeleteDialogStates(updatedDialogStates)\n  }\n\n  function setIsSaveDialogOpenForRow(open: boolean, rowId: string) {\n    const updatedDialogStates = new Map(saveDialogStates)\n    updatedDialogStates.set(rowId, open)\n    setSaveDialogStates(updatedDialogStates)\n  }\n\n  function handleUpdateTableData(item: Item, url: string, formMode: FormMode) {\n    if (!item) {\n      return\n    }\n\n    // Add item or update existing item\n    if (formMode === FormMode.add) {\n      setItemsState(currentItems => [...currentItems, item])\n    } else {\n      const index = itemsState.findIndex(i => i.name === item.name)\n      if (index !== -1) {\n        const newItems = [...itemsState]\n        newItems[index] = item\n        setItemsState(newItems)\n      }\n    }\n\n    // Update crudUrls\n    const newCrudUrls = crudUrlsState\n    if (newCrudUrls?.editUrls) {\n      newCrudUrls.editUrls[item.name] = url\n    }\n    if (newCrudUrls?.deleteUrls) {\n      newCrudUrls.deleteUrls[item.name] = url\n    }\n    setCrudUrlsState(newCrudUrls)\n  }\n\n  function handleDeleteTableData(itemName: string) {\n    setItemsState(currentItems => currentItems.filter(i => i.name !== itemName))\n  }\n\n  const tableAction = (\n    <TableAction\n      url={tableActionProps.url}\n      mode={mode}\n      message={tableActionProps.message}\n      useDialog={tableActionProps.useDialog}\n      isEditableInScope={isEditableInScope}\n      publicKey={tableActionProps.publicKey}\n      keyId={tableActionProps.keyId}\n      tableDataUpdater={handleUpdateTableData}\n    />\n  )\n\n  // Construct a new array of data with all the items\n  const tableData = useMemo(\n    () => generateRowData(itemsState, scope, overrides, crudUrls, mode, isEditableInScope, environmentUrls),\n    [crudUrls, environmentUrls, isEditableInScope, itemsState, mode, overrides, scope],\n  )\n\n  if (tableData.length > 0 && !isPrivateRepoInFreeOrg) {\n    const hasVisibilityDescription = itemsState.some(i => i.visibility_description)\n\n    // Name column\n    columns.push(\n      columnHelper.column({\n        id: 'name',\n        header: 'Name',\n        field: 'id',\n        sortBy: 'alphanumeric',\n        width: 'growCollapse',\n        renderCell: row => {\n          let overrideMessage = ''\n          if (row.override && scope === ItemsScope.Organization) {\n            overrideMessage = `This ${mode} is overridden by a repository ${mode}`\n          } else if (row.override && scope === ItemsScope.Repository) {\n            overrideMessage = `This ${mode} overrides an organization ${mode}`\n          }\n          if (overrideMessage === '') {\n            return (\n              <Truncate inline={true} title={row.id} sx={{maxWidth: '100%'}}>\n                <Octicon icon={LockIcon} className=\"mr-2\" />\n                <code data-testid={`${row.id}-name`}>{row.name}</code>\n              </Truncate>\n            )\n          } else {\n            return (\n              <Truncate inline={true} title={row.id} className=\"d-flex flex-items-center\" sx={{maxWidth: '100%'}}>\n                <Octicon icon={LockIcon} className=\"mr-2\" />\n                <Truncate inline={true} title={row.id} sx={{maxWidth: '100%'}}>\n                  <div className=\"d-flex flex-column\">\n                    <Truncate inline={true} title={row.id} sx={{maxWidth: '100%'}}>\n                      <code data-testid={`${row.id}-name`}>{row.name}</code>\n                    </Truncate>\n                    <Truncate inline={true} title={overrideMessage} sx={{maxWidth: '100%', color: 'attention.fg'}}>\n                      <Text sx={{color: 'attention.fg'}}>{overrideMessage}</Text>\n                    </Truncate>\n                  </div>\n                </Truncate>\n              </Truncate>\n            )\n          }\n        },\n      }),\n    )\n\n    // Variable value column\n    if (mode === ListMode.variable) {\n      columns.push(\n        columnHelper.column({\n          header: 'Value',\n          field: 'value',\n          sortBy: 'alphanumeric',\n          width: 'growCollapse',\n          renderCell: row => {\n            if (row.value) {\n              return (\n                <Truncate inline={true} title={row.value} sx={{maxWidth: '100%'}}>\n                  <Text sx={{fontSize: 0}}>{row.value}</Text>\n                </Truncate>\n              )\n            }\n          },\n        }),\n      )\n    }\n\n    // Environment column, only show if we're not on the environment page\n    if (scope === ItemsScope.Environment && !tableActionProps?.useDialog) {\n      columns.push(\n        columnHelper.column({\n          header: 'Environment',\n          field: 'environment',\n          sortBy: 'alphanumeric',\n          width: 'growCollapse',\n          renderCell: row => {\n            if (row.environment && row.environmentUrl) {\n              return (\n                <Truncate inline={true} title={row.environment} sx={{maxWidth: '100%'}}>\n                  <Link href={row.environmentUrl} data-testid={`${row.id}-env-link`}>\n                    {row.environment}\n                  </Link>\n                </Truncate>\n              )\n            }\n            return null\n          },\n        }),\n      )\n    }\n\n    // Visibility column\n    if (hasVisibilityDescription) {\n      columns.push(\n        columnHelper.column({\n          header: 'Visibility',\n          field: 'visibility',\n          width: 'auto',\n          sortBy: (a: RowData, b: RowData) => {\n            const va = a.visibility!\n            const vb = b.visibility!\n            // Order \"All repos\" first, then \"Private / Internal\", then \"N repositories\" in descending order\n            const isNumberedEntry = (entry: string) => /(\\d|,)+ repositor(y|ies)/.test(entry)\n\n            if (isNumberedEntry(va) && isNumberedEntry(vb)) {\n              // Match numbers, strip commas, and parse the result\n              const numA = parseInt(va.match(/(\\d|,)+/)![0].replace(/,/g, ''))\n              const numB = parseInt(vb.match(/(\\d|,)+/)![0].replace(/,/g, ''))\n              return numB - numA\n            }\n\n            if (va === 'all repositories') return -1\n            if (vb === 'all repositories') return 1\n            if (va === 'private and internal repositories') return -1\n            if (vb === 'private and internal repositories') return 1\n\n            // Alphabetically works for All/Private in this case\n            return va.localeCompare(vb)\n          },\n          renderCell: row => {\n            if (row.visibility) {\n              return (\n                <Truncate inline={true} title={row.visibility} sx={{maxWidth: VISIBILITY_COL_MAX_WIDTH}}>\n                  <Text sx={{fontSize: 0}}>{capitalize(row.visibility)}</Text>\n                </Truncate>\n              )\n            }\n            return null\n          },\n        }),\n      )\n    }\n\n    // Last updated column\n    columns.push(\n      columnHelper.column({\n        header: () => {\n          return (\n            <Truncate inline={true} title=\"Last updated\" sx={{maxWidth: LAST_UPDATED_COL_MAX_WIDTH}}>\n              Last updated\n            </Truncate>\n          )\n        },\n        width: 'auto',\n        field: 'lastUpdated',\n        align: 'end',\n        sortBy: 'datetime',\n        renderCell: row => {\n          if (row.lastUpdated) {\n            const date = new Date(row.lastUpdated)\n            return (\n              <Truncate inline={true} title={date.toLocaleDateString()} sx={{maxWidth: LAST_UPDATED_COL_MAX_WIDTH}}>\n                <RelativeTime date={date} tense=\"past\" data-testid={`${row.id}-relative-time`} />\n              </Truncate>\n            )\n          }\n        },\n      }),\n    )\n\n    // Modify buttons column\n    if (crudUrls?.editUrls) {\n      columns.push(\n        columnHelper.column({\n          id: 'actions',\n          width: 'auto',\n          align: 'end',\n          header: () => <span className=\"sr-only\">Actions</span>,\n          renderCell: row => {\n            const editButton = row.editUrl && (\n              <div>\n                {tableActionProps && !tableActionProps.useDialog ? (\n                  // eslint-disable-next-line primer-react/a11y-remove-disable-tooltip\n                  <IconButton\n                    unsafeDisableTooltip={true}\n                    aria-label={`Edit ${row.name}`}\n                    title={`Edit ${row.name}`}\n                    icon={PencilIcon}\n                    variant=\"invisible\"\n                    className=\"mr-1\"\n                    data-testid={`${row.id}-edit`}\n                    href={row.editUrl}\n                    as=\"a\"\n                  />\n                ) : (\n                  // eslint-disable-next-line primer-react/a11y-remove-disable-tooltip\n                  <IconButton\n                    unsafeDisableTooltip={true}\n                    aria-label={`Edit ${row.name}`}\n                    title={`Edit ${row.name}`}\n                    icon={PencilIcon}\n                    variant=\"invisible\"\n                    className=\"mr-1\"\n                    data-testid={`${row.id}-edit`}\n                    onClick={() => {\n                      setIsSaveDialogOpenForRow(true, row.id)\n                    }}\n                  />\n                )}\n\n                {saveDialogStates.get(row.id) && (\n                  <FormDialog\n                    mode={mode}\n                    rowId={row.id}\n                    onClose={() => setIsSaveDialogOpenForRow(false, row.id)}\n                    tableDataUpdater={handleUpdateTableData}\n                    formMode={FormMode.update}\n                    url={row.editUrl ?? ''}\n                    publicKey={tableActionProps?.publicKey}\n                    keyId={tableActionProps?.keyId}\n                    name={row.name}\n                    value={row.value}\n                  />\n                )}\n              </div>\n            )\n            const additionalFormData: {[key: string]: string} = {}\n            if (row.deleteUrl && scope === ItemsScope.CodespaceUser && tableActionProps.keyId) {\n              additionalFormData['commit'] = 'Delete'\n              additionalFormData['codespaces_user_secret[key_id]'] = tableActionProps.keyId\n            }\n            const deleteButton = row.deleteUrl && (\n              <div>\n                {/* eslint-disable-next-line primer-react/a11y-remove-disable-tooltip */}\n                <IconButton\n                  unsafeDisableTooltip={true}\n                  aria-label={`Delete ${row.name}`}\n                  title={`Delete ${row.name}`}\n                  icon={TrashIcon}\n                  variant=\"invisible\"\n                  data-testid={`${row.id}-delete`}\n                  onClick={() => {\n                    setIsDeleteDialogOpenForRow(true, row.id)\n                  }}\n                />\n                {deleteDialogStates.get(row.id) && (\n                  <DeleteDialog\n                    url={row.deleteUrl ?? ''}\n                    rowId={row.id}\n                    setClose={setIsDeleteDialogOpenForRow}\n                    mode={mode}\n                    tableDataUpdater={handleDeleteTableData}\n                    additionalFormData={additionalFormData}\n                  />\n                )}\n              </div>\n            )\n            return (\n              <div className=\"d-flex\">\n                {editButton}\n                {deleteButton}\n              </div>\n            )\n          },\n        }),\n      )\n    }\n  }\n\n  return (\n    <div className=\"mb-5\">\n      {itemsState.length > 0 && !isPrivateRepoInFreeOrg ? (\n        <Table.Container>\n          <Table.Title as=\"h2\" id={`${lowerCaseScope}-${mode}s`}>\n            <Text sx={{fontSize: 2, fontWeight: 'bold'}}>{tableName}</Text>\n          </Table.Title>\n          <Table.Actions>{tableAction}</Table.Actions>\n          <Table.Subtitle id={`repository-${mode}s-subtitle`}>\n            {description.text ? <DescriptionElement description={description} /> : undefined}\n          </Table.Subtitle>\n          <DataTable\n            aria-labelledby={`${lowerCaseScope}-${mode}s`}\n            aria-describedby={`${lowerCaseScope}-${mode}s-subtitle`}\n            initialSortColumn={'name'}\n            data={tableData}\n            columns={columns}\n          />\n        </Table.Container>\n      ) : (\n        <TableBlankstate\n          scope={scope}\n          mode={mode}\n          description={description}\n          tableAction={tableAction}\n          isEditableInScope={isEditableInScope}\n          isPrivateRepoInFreeOrg={isPrivateRepoInFreeOrg}\n        />\n      )}\n    </div>\n  )\n}\n\nfunction generateRowData(\n  items: Item[],\n  scope: ItemsScope,\n  overrides: Item[] | undefined,\n  crudUrls: CrudUrls | undefined,\n  mode: ListMode,\n  isEditableInScope: boolean,\n  environmentUrls: {[environmentName: string]: string} | undefined,\n) {\n  const result = new Array<RowData>()\n  for (const item of items) {\n    const tableRow: RowData = {\n      id: getItemId(item),\n      name: item.name,\n      scope,\n      lastUpdated: item.updated_at,\n      visibility: item.visibility_description,\n      override: overrides && overrides.some(obj => obj.hasOwnProperty('name') && obj.name === item.name),\n    }\n\n    if (crudUrls?.editUrls) {\n      tableRow.editUrl = crudUrls.editUrls[item.name]\n    }\n\n    if (crudUrls?.deleteUrls) {\n      tableRow.deleteUrl = crudUrls.deleteUrls[item.name]\n    }\n\n    if (mode === ListMode.variable && item.value) {\n      if (scope === ItemsScope.Organization) {\n        // Org vars are fetched as base64 encoded on the repo page but not the org page\n        if (isEditableInScope) {\n          tableRow.value = item.value\n        } else {\n          tableRow.value = Buffer.from(item.value, 'base64').toString()\n        }\n      } else {\n        tableRow.value = Buffer.from(item.value, 'base64').toString()\n      }\n    }\n\n    if (item.environment_name && environmentUrls) {\n      tableRow.environmentUrl = environmentUrls[item.environment_name]\n      tableRow.environment = item.environment_name\n    }\n\n    result.push(tableRow)\n  }\n  return result\n}\n\nfunction getItemId(item: Item) {\n  // Append the environment name to environment secrets to ensure uniqueness\n  if (item.environment_name) {\n    return `${item.name}-${item.environment_name}`\n  }\n  return item.name\n}\n\ntry{ ActionsSecretsVariablesList.displayName ||= 'ActionsSecretsVariablesList' } catch {}","import {registerReactPartial} from '@github-ui/react-core/register-partial'\nimport {ActionsSecretsVariablesList} from './ActionsSecretsVariablesList'\n\nregisterReactPartial('actions-secrets-variables-list', {\n  Component: ActionsSecretsVariablesList,\n})\n","function queryLast<T extends Element>(selector: string): T | undefined {\n  const list = document.querySelectorAll<T>(selector)\n  if (list.length > 0) {\n    return list[list.length - 1]\n  }\n}\n\nfunction pagePathname() {\n  const locationOverride = queryLast<HTMLMetaElement>('meta[name=analytics-location]')\n  if (locationOverride) {\n    return locationOverride.content\n  } else {\n    return window.location.pathname\n  }\n}\n\nfunction pageQuery() {\n  const stripParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-query-strip]')\n  let search = ''\n\n  if (!stripParams) {\n    search = window.location.search\n  }\n\n  const extraParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-params]')\n  if (extraParams) {\n    search += (search ? '&' : '?') + extraParams.content\n  }\n\n  for (const meta of document.querySelectorAll<HTMLMetaElement>('meta[name=analytics-param-rename]')) {\n    const names = meta.content.split(':', 2)\n    search = search.replace(new RegExp(`(^|[?&])${names[0]}($|=)`, 'g'), `$1${names[1]}$2`)\n  }\n\n  return search\n}\n\nexport function requestUri() {\n  return `${window.location.protocol}//${window.location.host}${pagePathname() + pageQuery()}`\n}\n","import {fire} from 'delegated-events'\n\ntype Options = {\n  content: DocumentFragment | Promise<DocumentFragment> | Node\n  dialogClass?: string\n  detailsClass?: string\n  labelledBy?: string | null\n  label?: string | null\n  errorMessage?: string | null\n}\n\n// Open the site-wide Details Dialog element.\nexport async function dialog(options: Options): Promise<HTMLElement> {\n  const dialogTemplate = document.querySelector<HTMLTemplateElement>('#site-details-dialog')!\n  const clonedDetails = dialogTemplate.content.cloneNode(true) as Element\n  const details = clonedDetails.querySelector<HTMLElement>('details')!\n  const detailsDialog = details.querySelector<HTMLElement>('details-dialog')!\n  const spinner = details.querySelector<HTMLElement>('.js-details-dialog-spinner')!\n  if (options.detailsClass) details.classList.add(...options.detailsClass.split(' '))\n  if (options.dialogClass) detailsDialog.classList.add(...options.dialogClass.split(' '))\n\n  if (options.label) {\n    detailsDialog.setAttribute('aria-label', options.label)\n  } else if (options.labelledBy) {\n    detailsDialog.setAttribute('aria-labelledby', options.labelledBy)\n  }\n\n  document.body.append(clonedDetails)\n  try {\n    const content = await options.content\n    spinner.remove()\n    detailsDialog.prepend(content)\n  } catch (error) {\n    spinner.remove()\n    // create a span with the error message\n    const errorSpan = document.createElement('span')\n    errorSpan.textContent = options.errorMessage || \"Couldn't load the content\"\n    errorSpan.classList.add('my-6')\n    errorSpan.classList.add('mx-4')\n    detailsDialog.prepend(errorSpan)\n  }\n\n  details.addEventListener('toggle', () => {\n    if (details.hasAttribute('open')) return\n    fire(detailsDialog, 'dialog:remove')\n    details.remove()\n  })\n\n  return detailsDialog\n}\n","// Report uncaught JS errors to Sentry\n//   https://sentry.io/github/github-js\n\nimport {getOrCreateClientId} from '@github/hydro-analytics-client'\nimport {isSupported} from '@github/browser-support'\nimport {parse} from 'stacktrace-parser'\nimport {requestUri} from '@github-ui/analytics-overrides'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {getSoftNavReferrer} from '@github-ui/soft-nav/utils'\n\nlet extensionErrors = false\nlet errorsReported = 0\nconst loadTime = Date.now()\n// network error messages are not consistent across browsers, this is a list of known messages for chrome and firefox\nexport const EXPECTED_NETWORK_ERROR_MESSAGES = new Set([\n  'Failed to fetch',\n  'NetworkError when attempting to fetch resource.',\n])\n\ntype ErrorContext = {\n  message?: string\n}\n\n// Check if an arbitrary object is an error, or at least an object that satisfies the interface of an error,\n// with the necessary information to be able to report it to Sentry.\nfunction isError(error: unknown): error is Error {\n  // Check if it's a definite instance of an error\n  if (error instanceof Error) return true\n  // Otherwise, check that it at least satisfies the interface of an error\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'name' in error &&\n    typeof error.name === 'string' &&\n    'message' in error &&\n    typeof error.message === 'string'\n  )\n}\n\n/** Tries to serialize an arbitrary error value that is not an Error object, and returns a default message otherwise */\nfunction serializeNonError(error: unknown): string {\n  try {\n    return JSON.stringify(error)\n  } catch {\n    return 'Unserializable'\n  }\n}\n\nfunction isExpectedError(error: Error): boolean {\n  // We use AbortController to control events and some workflows. When we call `abort()` on it, it will raise an\n  // `AbortError` which doesn't represent a real error, so we don't want to report it.\n  if (error.name === 'AbortError') return true\n  // Failed to fetch errors are usually related to the user's network connection. They also do not represent\n  // real errors related to our code, so we will also ignore them.\n  if (error.name === 'TypeError' && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n  // For memex we use an ApiError class to represent errors returned from the API\n  // Additional details in the format of ApiErrorOpts are affixed to the name as a stringified JSON object\n  // so we just need to ensure the error name starts with ApiError\n  // see ui/packages/memex/src/client/platform/api-error.ts for more details.\n  if (error.name.startsWith('ApiError') && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n\n  return false\n}\n\n// @deprecated Re-throw the caught exception instead.\nexport function reportError(error: unknown, context: ErrorContext = {}) {\n  if (isFeatureEnabled('FAILBOT_HANDLE_NON_ERRORS')) {\n    if (!isError(error)) {\n      if (isIgnoredNonError(error)) return\n\n      // Create an error instance so that we can get the stacktrace of how this was reported\n      const errorForStackTrace = new Error()\n      const serializedErrorValue = serializeNonError(error)\n      // Construct a custom error object so we can keep track of anywhere that we report an error that isn't an Error object\n      const newError: PlatformJavascriptError = {\n        type: 'UnknownError',\n        value: `Unable to report error, due to a thrown non-Error type: ${typeof error}, with value ${serializedErrorValue}`,\n        stacktrace: stacktrace(errorForStackTrace),\n        catalogService: undefined,\n      }\n      report(errorContext(newError, context))\n      return\n    }\n    if (!isExpectedError(error)) {\n      report(errorContext(formatError(error), context))\n    }\n  } else {\n    // Without feature flag, we will cast the `error` variable which was implicitly the old\n    // behavior of the non-feature flagged code.\n    if (!isExpectedError(error as Error)) {\n      report(errorContext(formatError(error as Error), context))\n    }\n  }\n}\n\n// Report context info to Sentry.\nasync function report(context: PlatformReportBrowserErrorInput) {\n  if (!reportable()) return\n\n  const url = document.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-errors-url\"]')?.content\n  if (!url) return\n\n  if (isExtensionError(context.error.stacktrace)) {\n    extensionErrors = true\n    return\n  }\n\n  errorsReported++\n\n  try {\n    await fetch(url, {method: 'post', body: JSON.stringify(context)})\n  } catch {\n    // Error reporting failed so do nothing.\n  }\n}\n\nfunction formatError(error: Error): PlatformJavascriptError {\n  return {\n    type: error.name,\n    value: error.message,\n    stacktrace: stacktrace(error),\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    catalogService: (error as any)['catalogService'],\n  }\n}\n\nfunction errorContext(error: PlatformJavascriptError, context: ErrorContext = {}): PlatformReportBrowserErrorInput {\n  return Object.assign(\n    {\n      error,\n      sanitizedUrl: requestUri() || window.location.href,\n      readyState: document.readyState,\n      referrer: getSoftNavReferrer(),\n      timeSinceLoad: Math.round(Date.now() - loadTime),\n      user: pageUser() || undefined,\n      bundler,\n      ui: Boolean(document.querySelector('meta[name=\"ui\"]')),\n    },\n    context,\n  )\n}\n\nexport function stacktrace(error: Error): PlatformStackframe[] {\n  return parse(error.stack || '').map(frame => ({\n    filename: frame.file || '',\n    function: String(frame.methodName),\n    lineno: (frame.lineNumber || 0).toString(),\n    colno: (frame.column || 0).toString(),\n  }))\n}\n\nconst extensions = /(chrome|moz|safari)-extension:\\/\\//\n\n// Does this stack trace contain frames from browser extensions?\nfunction isExtensionError(stack: PlatformStackframe[]): boolean {\n  return stack.some(frame => extensions.test(frame.filename) || extensions.test(frame.function))\n}\n\nexport function pageUser() {\n  const login = document.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n  if (login) return login\n\n  const clientId = getOrCreateClientId()\n  return `anonymous-${clientId}`\n}\n\nlet unloaded = false\nssrSafeWindow?.addEventListener('pageshow', () => (unloaded = false))\nssrSafeWindow?.addEventListener('pagehide', () => (unloaded = true))\n\nfunction reportable() {\n  return !unloaded && !extensionErrors && errorsReported < 10 && isSupported()\n}\n\nif (typeof BroadcastChannel === 'function') {\n  const sharedWorkerErrorChannel = new BroadcastChannel('shared-worker-error')\n  sharedWorkerErrorChannel.addEventListener('message', event => {\n    // SharedWorker will emit a formatted error\n    reportError(event.data.error)\n  })\n}\n\nconst ignoredErrorMessages = [\n  'Object Not Found Matching Id', // from Microsoft Outlook SafeLink crawler\n  'Not implemented on this platform', // LastPass Safari extension\n  `provider because it's not your default extension`, // MetaMask extension\n]\n\n/**\n * We see a fair number of \"errors\" which are not actually Error objects. This function will return true if the\n * error is one of these known non-Error types and has content which we know can safely be ignored.\n * Most of these errors come from specific browsers or extensions which we can't control, so we just ignore them.\n * @param error An error that is not an Error object\n * @returns boolean\n */\nfunction isIgnoredNonError(error: unknown) {\n  if (!error || typeof error === 'boolean' || typeof error === 'number') {\n    // Rejected with a type that is not useful to report. Just ignore it.\n    return true\n  } else if (typeof error === 'string') {\n    // rejected with a string. See if it's a known error that we can ignore\n    if (ignoredErrorMessages.some(message => error.includes(message))) {\n      return true\n    }\n  } else if (\n    typeof error === 'object' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).message === 'string' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).code === 'number'\n  ) {\n    // We see an object like {\"message\":\"Not connected\",\"code\":4900} from some extension, likely MetaMask. Ignore these\n    return true\n  }\n\n  return false\n}\n","//  Get document's HTML Safe nonce.\n//\n// Example:\n//\n//   <meta name=\"html-safe-nonce\" content=\"de43a1f355c711f7f705e4f971964391ac0c8e13\">\nexport function getDocumentHtmlSafeNonces(document: Document): string[] {\n  const nonces = [...document.querySelectorAll<HTMLMetaElement>('meta[name=html-safe-nonce]')].map(meta => meta.content)\n\n  if (nonces.length < 1) {\n    throw new Error('could not find html-safe-nonce on document')\n  }\n  return nonces\n}\n\ninterface Response {\n  headers: Headers\n  status: number\n}\n\nclass ResponseError extends Error {\n  response: Response\n\n  constructor(message: string, response: Response) {\n    super(`${message} for HTTP ${response.status}`)\n    this.response = response\n  }\n}\n\nexport function verifyResponseHtmlSafeNonce(nonces: string[], response: Response, allowJson = false) {\n  const contentType = response.headers.get('content-type') || ''\n  if (!allowJson && !contentType.startsWith('text/html')) {\n    throw new ResponseError(`expected response with text/html, but was ${contentType}`, response)\n  }\n\n  if (allowJson && !(contentType.startsWith('text/html') || contentType.startsWith('application/json'))) {\n    throw new ResponseError(`expected response with text/html or application/json, but was ${contentType}`, response)\n  }\n\n  const responseNonce = response.headers.get('x-html-safe')\n  if (!responseNonce) {\n    throw new ResponseError(`missing X-HTML-Safe nonce`, response)\n  } else if (!nonces.includes(responseNonce)) {\n    throw new ResponseError(`response X-HTML-Safe nonce did not match`, response)\n  }\n}\n","import {getDocumentHtmlSafeNonces, verifyResponseHtmlSafeNonce} from '@github-ui/html-safe-nonce'\nimport {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {trustedTypesPolicy} from './policy'\n\nconst policyName = 'server-x-safe-html'\n\n// This is a no-op policy to be used with server-side rendered HTML.\nexport const serverXSafeHTMLPolicy = ghTrustedTypes.createPolicy(policyName, {\n  createHTML: (s: string, response: Response) => {\n    return trustedTypesPolicy.apply({\n      policy: () => {\n        verifyResponseHtmlSafeNonce(getDocumentHtmlSafeNonces(document), response)\n        return s\n      },\n      policyName,\n      fallback: s,\n      silenceErrorReporting: true,\n    })\n  },\n})\n","import {parseHTML} from '@github-ui/parse-html'\nimport {serverXSafeHTMLPolicy} from '@github-ui/trusted-types-policies/server-x-safe-html'\n\nexport async function fetchSafeDocumentFragment(\n  document: Document,\n  url: RequestInfo,\n  options?: RequestInit,\n): Promise<DocumentFragment> {\n  const request = new Request(url, options)\n  request.headers.append('X-Requested-With', 'XMLHttpRequest')\n  const response = await self.fetch(request)\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error(`HTTP ${response.status}${response.statusText || ''}`)\n  }\n  const trustedHTML = serverXSafeHTMLPolicy.createHTML(await response.text(), response)\n  return parseHTML(document, trustedHTML)\n}\n\nexport function fetchPoll(\n  url: RequestInfo,\n  options?: RequestInit,\n  timeBetweenRequests = 1000,\n  acceptedStatusCodes = [200],\n  pollStatusCodes = [202],\n): Promise<Response> {\n  return (async function poll(wait: number): Promise<Response> {\n    const request = new Request(url, options)\n    request.headers.append('X-Requested-With', 'XMLHttpRequest')\n    const response = await self.fetch(request)\n\n    if (pollStatusCodes.includes(response.status)) {\n      await new Promise(resolve => setTimeout(resolve, wait))\n      return poll(wait * 1.5)\n    }\n    if (acceptedStatusCodes.includes(response.status)) {\n      return response\n    }\n    if (response.status < 200 || response.status >= 300) {\n      throw new Error(`HTTP ${response.status}${response.statusText || ''}`)\n    }\n    throw new Error(`Unexpected ${response.status} response status from poll endpoint`)\n  })(timeBetweenRequests)\n}\n\ntype RetryResult = Response | 'retry'\ntype FetchRetryOptions = {\n  // Base wait time between retries\n  // this will be multiplied with the current attempt to perform a backoff strategy\n  // Defaults to 500ms\n  wait?: number\n  // List of accepted status codes that should not be retried. Defaults to [200]\n  acceptedStatusCodes?: number[]\n  // Max number of attempts. Defaults to 3\n  max?: number\n  // Current retry attempt. Starts at 0\n  attempt?: number\n}\n\n// Execute a fetch call in a callback and retry it up to `options.max` times\n// Each retry will be delayed `options.wait` * `options.attempt`\nexport async function fetchRetry(\n  url: RequestInfo,\n  fetchOptions?: RequestInit,\n  options?: FetchRetryOptions,\n): Promise<Response> {\n  const {wait = 500, acceptedStatusCodes = [200], max = 3, attempt = 0} = options || {}\n\n  const retry: () => Promise<RetryResult> = async () => {\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          const request = new Request(url, fetchOptions)\n          request.headers.append('X-Requested-With', 'XMLHttpRequest')\n          const response = await self.fetch(request)\n          if (acceptedStatusCodes.includes(response.status) || attempt + 1 === max) {\n            return resolve(response)\n          }\n\n          // The response failed, we indicate that it must be retried\n          resolve('retry')\n        } catch (err) {\n          // Only non successful HTTP status codes are controlled by this retry mechanism\n          // Any other error is propagated\n          reject(err)\n        }\n      }, wait * attempt)\n    })\n  }\n\n  const result = await retry()\n  if (result !== 'retry') {\n    return result\n  }\n\n  return fetchRetry(url, fetchOptions, {wait, acceptedStatusCodes, max, attempt: attempt + 1})\n}\n","import {AnalyticsClient, getOptionsFromMeta} from '@github/hydro-analytics-client'\nimport type {Context} from '@github/hydro-analytics-client'\nimport safeStorage from '@github-ui/safe-storage'\nimport {isStaff} from '@github-ui/stats'\nconst {getItem} = safeStorage('localStorage')\n\ndeclare const process: {\n  env: {\n    NODE_ENV: string\n  }\n}\n\nconst dimensionPrefix = 'dimension_'\nlet hydroAnalyticsClient: AnalyticsClient | undefined\n\nconst MARKETING_PARAMS = ['utm_source', 'utm_medium', 'utm_campaign', 'utm_term', 'utm_content', 'scid']\n\ntry {\n  const options = getOptionsFromMeta('octolytics')\n\n  // Remove the base context because meta tags can change as the user navigates with Turbo\n  // These will be folded in for each event & page view\n  delete options.baseContext\n\n  hydroAnalyticsClient = new AnalyticsClient(options)\n} catch (_) {\n  // Failed to get options from meta tags.  This most likely means analytics are disabled.\n}\n\nfunction extendBaseContext(context?: Context) {\n  const baseContext = getOptionsFromMeta('octolytics').baseContext || {}\n\n  if (baseContext) {\n    delete baseContext.app_id\n    delete baseContext.event_url\n    delete baseContext.host\n\n    for (const [key, value] of Object.entries(baseContext)) {\n      // some octolytics meta tags are prefixed with dimension-, which we don't need with the new hydro-analytics-client\n      if (key.startsWith(dimensionPrefix)) {\n        baseContext[key.replace(dimensionPrefix, '')] = value\n        delete baseContext[key]\n      }\n    }\n  }\n\n  const visitorMeta = document.querySelector<HTMLMetaElement>('meta[name=visitor-payload]')\n  if (visitorMeta) {\n    const visitorHash = JSON.parse(atob(visitorMeta.content))\n    Object.assign(baseContext, visitorHash)\n  }\n\n  const urlParams = new URLSearchParams(window.location.search)\n  for (const [key, value] of urlParams) {\n    if (MARKETING_PARAMS.includes(key.toLowerCase())) {\n      baseContext[key] = value\n    }\n  }\n\n  // Include additional context from the page\n  baseContext.staff = isStaff().toString()\n\n  return Object.assign(baseContext, context)\n}\n\nexport function sendPageView(context?: Context) {\n  hydroAnalyticsClient?.sendPageView(extendBaseContext(context))\n}\n\nexport function sendEvent(type: string, context: Record<string, string | number | boolean | undefined | null> = {}) {\n  const service = document.head?.querySelector<HTMLMetaElement>('meta[name=\"current-catalog-service\"]')?.content\n\n  const cleanContext: Context = service ? {service} : {}\n\n  for (const [key, value] of Object.entries(context)) {\n    if (value !== undefined && value !== null) {\n      cleanContext[key] = `${value}`\n    }\n  }\n\n  if (hydroAnalyticsClient) {\n    const typeWithFallback = type || 'unknown'\n    const fullContext = extendBaseContext(cleanContext)\n    hydroAnalyticsClient.sendEvent(typeWithFallback, extendBaseContext(cleanContext))\n\n    if (process.env.NODE_ENV === 'development') {\n      debugSendEvent(typeWithFallback, fullContext)\n    }\n  }\n}\n\nexport function stringifyObjectValues(obj: object) {\n  return Object.fromEntries(Object.entries(obj).map(([k, v]) => [k, JSON.stringify(v)]))\n}\n\nfunction debugSendEvent(type: string, context: Context) {\n  if (getItem('hydro-debug.send-event') === 'true') {\n    // eslint-disable-next-line no-console\n    console.group('[hydro-debug.send-event]')\n    // eslint-disable-next-line no-console\n    console.log({type, context})\n    // eslint-disable-next-line no-console\n    console.groupEnd()\n  }\n}\n","import {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {trustedTypesPolicy} from './policy'\n\nconst policyName = 'parse-html-no-op'\n// This is a temporary policy to allow us to migrate to Trusted Types without breaking existing code.\nexport const temporaryPermissiveParseHTMLPolicy = ghTrustedTypes.createPolicy(policyName, {\n  createHTML: (s: string) => {\n    return trustedTypesPolicy.apply({\n      policy: () => s,\n      policyName,\n      fallback: s,\n      sanitize: false,\n      fallbackOnError: true,\n    })\n  },\n})\n","import {temporaryPermissiveParseHTMLPolicy} from '@github-ui/trusted-types-policies/parse-html'\n\nexport function parseHTML(document: Document, html: string): DocumentFragment {\n  const template = document.createElement('template')\n  template.innerHTML = temporaryPermissiveParseHTMLPolicy.createHTML(html)\n  return document.importNode(template.content, true)\n}\n","export class DeferredRegistry<T> {\n  private registrationEntries: Record<\n    string,\n    {\n      promise: Promise<T>\n      resolve?: (r: T) => void\n    }\n  > = {}\n\n  public register(name: string, registration: T) {\n    const entry = this.registrationEntries[name]\n    if (entry) {\n      entry.resolve?.(registration)\n    } else {\n      this.registrationEntries[name] = {\n        promise: Promise.resolve(registration),\n      }\n    }\n  }\n\n  public getRegistration(name: string): Promise<T> {\n    this.registrationEntries[name] ||= new Deferred()\n    return this.registrationEntries[name].promise\n  }\n}\n\nclass Deferred<T> {\n  declare promise\n  declare resolve: (r: T) => void\n\n  constructor() {\n    this.promise = new Promise<T>(resolve => {\n      this.resolve = resolve\n    })\n  }\n}\n","import type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {useCallback, useEffect, useRef, useState} from 'react'\n\ninterface ReactPartialAnchor {\n  /**\n   * DO NOT USE THIS PROPERTY DIRECTLY. It is meant to be used with useExternalAnchor and useOnAnchorClick\n   */\n  __wrapperElement: ReactPartialAnchorElement\n}\n\nexport interface ReactPartialAnchorProps {\n  reactPartialAnchor?: ReactPartialAnchor\n}\n\nexport function usePartialAnchorProps(\n  anchorElement: ReactPartialAnchorElement | undefined | null,\n): ReactPartialAnchorProps {\n  useEffect(() => {\n    const anchor = anchorElement?.anchor\n\n    if (!anchor) {\n      return\n    }\n\n    if ('disabled' in anchor) {\n      anchor.disabled = false\n    }\n    anchor.classList.remove('cursor-wait')\n  }, [anchorElement])\n\n  if (!anchorElement) {\n    return {}\n  }\n\n  return {\n    reactPartialAnchor: {\n      __wrapperElement: anchorElement,\n    },\n  }\n}\n\nexport function useExternalAnchor(reactPartialAnchor: ReactPartialAnchor) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor || null)\n  const [open, setOpen] = useState(false)\n\n  const onClick = useCallback(() => {\n    // toggle the open state when clicked\n    setOpen(!open)\n  }, [open, setOpen])\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    ref.current.setAttribute('aria-expanded', open.toString())\n    ref.current.setAttribute('aria-haspopup', 'true')\n  }, [ref, open])\n\n  useOnAnchorClick(reactPartialAnchor, onClick)\n\n  return {\n    ref,\n    open,\n    setOpen,\n  }\n}\n\nexport function useOnAnchorClick(reactPartialAnchor: ReactPartialAnchor, onClick: (event: MouseEvent) => void) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor)\n\n  useEffect(() => {\n    const element = ref.current\n    if (!element) {\n      return\n    }\n\n    element.addEventListener('click', onClick)\n    return () => element.removeEventListener('click', onClick)\n  }, [ref, onClick])\n}\n\nexport type PropsWithPartialAnchor<T> = T & Required<ReactPartialAnchorProps>\n","import {DeferredRegistry} from './deferred-registry'\n\nexport interface PartialRegistration {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Component: React.ComponentType<any>\n}\n\nexport const partialRegistry = new DeferredRegistry<PartialRegistration>()\n\nexport function getReactPartial(appName: string) {\n  return partialRegistry.getRegistration(appName)\n}\n","import {controller} from '@github/catalyst'\nimport {getReactPartial} from './react-partial-registry'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {ReactBaseElement} from './ReactBaseElement'\nimport {PartialEntry} from './PartialEntry'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\n\n// What is this silliness? Is it react or a web component?!\n// It's a web component we use to bootstrap react partials within the monolith.\n@controller\nclass ReactPartialElement extends ReactBaseElement<EmbeddedPartialData> {\n  nameAttribute = 'partial-name'\n\n  async getReactNode(embeddedData: EmbeddedPartialData) {\n    const {Component} = await getReactPartial(this.name)\n\n    // Some React Partials will be wrapped in a react-partial-anchor, which is used to conditionally render the Partial\n    const anchorElement = this.closest<ReactPartialAnchorElement>('react-partial-anchor')\n\n    return (\n      <PartialEntry\n        partialName={this.name}\n        embeddedData={embeddedData}\n        Component={Component}\n        wasServerRendered={this.hasSSRContent}\n        ssrError={this.ssrError}\n        anchorElement={anchorElement}\n      />\n    )\n  }\n}\n","import {partialRegistry, type PartialRegistration} from './react-partial-registry'\n// Import the web component to get it registered on the window\nimport './ReactPartialElement'\n\n// NOTE: if the signature of this method changes, also update the react-partial-name ESLint rule\n// /workspaces/github/ui/packages/eslint-plugin-github-monorepo/rules/react-partial-name.js\nexport function registerReactPartial(name: string, registration: PartialRegistration) {\n  partialRegistry.register(name, registration)\n}\n","import safeStorage from '@github-ui/safe-storage'\n\nconst {getItem, setItem, removeItem} = safeStorage('localStorage')\nconst REACT_PROFILING_ENABLED = 'REACT_PROFILING_ENABLED'\n\ninterface ReactProfilingModeMethods {\n  enable: () => void\n  disable: () => void\n  isEnabled: () => boolean\n}\n\nconst ReactProfilingMode: ReactProfilingModeMethods = {\n  enable: () => setItem(REACT_PROFILING_ENABLED, 'true'),\n  disable: () => removeItem(REACT_PROFILING_ENABLED),\n  isEnabled: () => !!getItem(REACT_PROFILING_ENABLED),\n}\n\nexport default ReactProfilingMode\n","import safeStorage from './safe-storage'\n\nexport const {getItem, setItem, removeItem} = safeStorage('sessionStorage')\n","import {getItem, removeItem, setItem} from '@github-ui/safe-storage/session-storage'\nimport type {SoftNavMechanism} from './events'\n\nexport const DEFAULT_SOFT_NAV_ERROR_REASON = 'reload'\n\nexport const SOFT_NAV_FAIL = 'soft-nav:fail'\nexport const SOFT_NAV_FAIL_REFERRER = 'soft-nav:fail-referrer'\nexport const SOFT_NAV_REFERRER = 'soft-nav:referrer'\nexport const SOFT_NAV_MARK = 'soft-nav:marker'\nexport const SOFT_NAV_REACT_APP_NAME = 'soft-nav:react-app-name'\nexport const SOFT_NAV_LATEST_MECHANISM = 'soft-nav:latest-mechanism'\n\nexport function clearSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n  removeItem(SOFT_NAV_REFERRER)\n  removeItem(SOFT_NAV_FAIL)\n  removeItem(SOFT_NAV_FAIL_REFERRER)\n  removeItem(SOFT_NAV_REACT_APP_NAME)\n  removeItem(SOFT_NAV_LATEST_MECHANISM)\n}\n\nexport function setSoftNavMechanism(mechanism: SoftNavMechanism) {\n  setItem(SOFT_NAV_MARK, mechanism)\n}\n\nexport function unsetSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n}\n\nexport function inSoftNav() {\n  const softNav = getItem(SOFT_NAV_MARK)\n  return softNav && softNav !== '0'\n}\n\nexport function getSoftNavMechanism(): SoftNavMechanism {\n  return getItem(SOFT_NAV_MARK) as SoftNavMechanism\n}\n\nexport function hasSoftNavFailure() {\n  return Boolean(getSoftNavFailReason())\n}\n\nexport function getSoftNavFailReason() {\n  return getItem(SOFT_NAV_FAIL)\n}\n\nexport function setSoftNavFailReason(reason: string) {\n  setItem(SOFT_NAV_FAIL, reason || DEFAULT_SOFT_NAV_ERROR_REASON)\n  setItem(SOFT_NAV_FAIL_REFERRER, window.location.href)\n}\n\nexport function setSoftNavReferrer() {\n  setItem(SOFT_NAV_REFERRER, window.location.href)\n}\n\nexport function getSoftNavReferrer() {\n  return getItem(SOFT_NAV_REFERRER) || document.referrer\n}\n\nexport function setSoftNavReactAppName() {\n  const appName = getCurrentReactAppName()\n\n  if (appName) {\n    setItem(SOFT_NAV_REACT_APP_NAME, appName)\n  } else {\n    removeItem(SOFT_NAV_REACT_APP_NAME)\n  }\n}\n\nexport function getSoftNavReactAppName() {\n  return getItem(SOFT_NAV_REACT_APP_NAME)\n}\n\nexport function getCurrentReactAppName() {\n  if (document.querySelector('meta[name=\"ui\"]')) return 'ui'\n\n  return document.querySelector('react-app')?.getAttribute('app-name')\n}\n\nexport function setLatestMechanism(mechanism: SoftNavMechanism) {\n  setItem(SOFT_NAV_LATEST_MECHANISM, mechanism)\n}\n\nexport function getLatestMechanism() {\n  return getItem(SOFT_NAV_LATEST_MECHANISM) as SoftNavMechanism\n}\n","import {dialog} from '@github-ui/details-dialog'\nimport {fetchSafeDocumentFragment} from '@github-ui/fetch-utils'\nimport type {Kicker} from '@github/remote-form'\nimport {remoteForm} from '@github/remote-form'\nimport {webauthnSupportLevel} from '@github-ui/webauthn-support-level'\n\nlet sudoPromptExist = false\n\n/**\n * Take a URL and add webauthn params to it.\n *\n * @param {string} oldURL - The old URL.\n * @returns {string} - The new URL with added params.\n */\nfunction urlWithParams(oldURL: string): string {\n  const newURL = new URL(oldURL, window.location.origin)\n  const params = new URLSearchParams(newURL.search.slice(1))\n  params.set('webauthn-support', webauthnSupportLevel())\n  newURL.search = params.toString()\n  return newURL.toString()\n}\n\nasync function loadPromptTemplate(): Promise<HTMLTemplateElement> {\n  const link = document.querySelector<HTMLLinkElement>('link[rel=sudo-modal]')!\n  const template = document.querySelector('.js-sudo-prompt')\n  if (template instanceof HTMLTemplateElement) {\n    return template\n  } else if (link) {\n    const fragment = await fetchSafeDocumentFragment(document, urlWithParams(link.href))\n    document.body.appendChild(fragment)\n    return document.querySelector<HTMLTemplateElement>('.js-sudo-prompt')!\n  } else {\n    throw new Error(\"couldn't load sudo prompt\")\n  }\n}\n\nlet succeeded = false\n\n/**\n * Provide a sudo prompt, and return when it has been filled in or dismissed.\n *\n * @returns {Promise<boolean>} - Resolves to `true` if the user successfully authed with sudo.\n */\nexport async function sudoPrompt(currentTarget?: HTMLElement): Promise<boolean> {\n  if (sudoPromptExist) return false\n  sudoPromptExist = true\n  succeeded = false\n  const template = await loadPromptTemplate()\n  const content = template.content.cloneNode(true)\n  const prompt = await dialog({content})\n\n  // open/expanded HTML5 <details> can potentially steal focus from the dialog (https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details)\n  // Example bug: https://github.com/github/authentication/issues/2208\n  // close the open details element that triggered this sudo challenge\n  const details = currentTarget?.closest('details[open]') as HTMLElement\n  if (details) {\n    details.removeAttribute('open')\n  }\n\n  await new Promise<void>(resolve => {\n    prompt.addEventListener(\n      'dialog:remove',\n      function () {\n        // re-add the open attribute to the details that we closed above\n        if (details) {\n          details.setAttribute('open', 'open')\n        }\n        sudoPromptExist = false\n        resolve()\n      },\n      {once: true},\n    )\n  })\n  return succeeded\n}\n\nasync function sudoModalErrorOrClose(\n  form: HTMLFormElement,\n  wants: Kicker,\n  unauthorizedError = 'Sudo authentication failed.',\n  tooManyError = 'Too many authentication attempts. Please try again later.',\n  errorSelector = '.js-sudo-error',\n  inputElementSelector?: string,\n) {\n  try {\n    await wants.text()\n  } catch (error) {\n    // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n    if (!error.response) throw error\n    let errorMessage\n    // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n    switch (error.response.status) {\n      case 401:\n        errorMessage = unauthorizedError\n        break\n      case 429:\n        errorMessage = tooManyError\n        break\n      default:\n        errorMessage = 'An unknown error occurred. Please try again later.'\n    }\n\n    form.querySelector<HTMLElement>(errorSelector)!.textContent = errorMessage\n    form.querySelector<HTMLElement>(errorSelector)!.hidden = false\n    if (inputElementSelector) {\n      form.querySelector<HTMLInputElement>(inputElementSelector)!.value = ''\n    }\n\n    // rethrow error if not expected, only after surfacing it in flash\n    // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n    if (error.response.status !== 401 && error.response.status !== 429) {\n      throw error\n    }\n\n    return\n  }\n  succeeded = true\n  form.closest<HTMLElement>('details')!.removeAttribute('open')\n}\n\nremoteForm('.js-sudo-webauthn-form', async function (form, wants) {\n  await sudoModalErrorOrClose(form, wants)\n})\n\nremoteForm('.js-sudo-github-mobile-form', async function (form, wants) {\n  await sudoModalErrorOrClose(form, wants)\n})\n\nremoteForm('.js-sudo-totp-form', async function (form, wants) {\n  await sudoModalErrorOrClose(form, wants, undefined, undefined, '.flash-error', '#totp')\n})\n\nremoteForm('.js-sudo-password-form', async function (form, wants) {\n  await sudoModalErrorOrClose(\n    form,\n    wants,\n    'Incorrect password.',\n    'Too many password attempts. Please wait and try again.',\n    undefined,\n    '.js-sudo-password',\n  )\n})\n\n/**\n * Check if user is in sudo mode. If not, show a sudo prompt.\n *\n * @returns {Promise<boolean>} - Will be `true` if user is in or got in sudo mode after prompt.\n */\nexport default async function triggerSudoPrompt(currentTarget?: HTMLElement): Promise<boolean> {\n  const response = await fetch('/sessions/in_sudo', {\n    headers: {accept: 'application/json', 'X-Requested-With': 'XMLHttpRequest'},\n  })\n  if (response.ok) {\n    const sudoResponse = await response.text()\n    if (sudoResponse === 'true') {\n      return true\n    }\n  }\n  return sudoPrompt(currentTarget)\n}\n\nexport async function fetchSessionInSudo(): Promise<boolean> {\n  const response = await fetch('/sessions/in_sudo', {\n    headers: {accept: 'application/json', 'X-Requested-With': 'XMLHttpRequest'},\n  })\n  if (response.ok) {\n    const sudoResponse = await response.text()\n    if (sudoResponse === 'true') {\n      return true\n    }\n  }\n  return false\n}\n","export interface TestIdProps {\n  /** Test ID to be queried by automated testing suites */\n  'data-testid'?: string\n}\n\nexport const testIdProps = (value: string): TestIdProps => {\n  return {'data-testid': value}\n}\n","import {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {sendStats} from '@github-ui/stats'\n// eslint-disable-next-line no-restricted-imports\nimport {reportError} from '@github-ui/failbot'\nimport dompurify from 'dompurify'\nimport {sendEvent} from '@github-ui/hydro-analytics'\n\nexport class TrustedTypesPolicyError extends Error {}\n\ninterface PolicyParam {\n  policy: () => string\n  policyName: string\n  fallback: string\n  fallbackOnError?: boolean\n  sanitize?: boolean // report-only mode for now\n  silenceErrorReporting?: boolean\n}\n\nfunction apply({\n  policy,\n  policyName,\n  fallback,\n  fallbackOnError = false,\n  sanitize,\n  silenceErrorReporting = false,\n}: PolicyParam): string {\n  try {\n    if (isFeatureEnabled('BYPASS_TRUSTED_TYPES_POLICY_RULES')) return fallback\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_CALLED', trustedTypesPolicyName: policyName}, false, 0.1)\n    const policyOutput = policy()\n    if (sanitize) {\n      new Promise(resolve => {\n        const startTime = window.performance.now()\n        const sanitized = dompurify.sanitize(policyOutput, {FORBID_ATTR: []})\n        const endTime = window.performance.now()\n        const executionTime = endTime - startTime\n        if (policyOutput.length !== sanitized.length) {\n          const err = new Error('Trusted Types policy output sanitized')\n          const stack = err.stack?.slice(0, 1000)\n          const output = policyOutput.slice(0, 250)\n          sendEvent('trusted_types_policy.sanitize', {\n            policyName,\n            output,\n            stack,\n            outputLength: policyOutput.length,\n            sanitizedLength: sanitized.length,\n            executionTime,\n          })\n          resolve(policyOutput)\n        }\n      })\n    }\n    return policyOutput\n  } catch (e) {\n    if (e instanceof TrustedTypesPolicyError) throw e\n    if (!silenceErrorReporting) reportError(e)\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_ERROR', trustedTypesPolicyName: policyName})\n    if (!fallbackOnError) throw e\n  }\n\n  return fallback\n}\n\nexport const trustedTypesPolicy = {apply}\n","/* eslint no-restricted-globals: ['off', '__TRUSTED_TYPE_POLICIES__'] */\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\n/*\n * Tinyfill for trusted types\n */\n\ninterface GHTrustedTypePolicyOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createHTML: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScript: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScriptURL: (input: string, ...args: any[]) => string\n}\n\ninterface GHTrustedTypePolicyWithName extends GHTrustedTypePolicyOptions {\n  name: string\n}\n\nfunction unimplemented(functionName: string) {\n  return () => {\n    throw new TypeError(`The policy does not implement the function ${functionName}`)\n  }\n}\n\nconst fallbacks = {\n  createHTML: unimplemented('createHTML'),\n  createScript: unimplemented('createScript'),\n  createScriptURL: unimplemented('createScriptURL'),\n}\n\nconst tinyfill = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => ({\n    name,\n    ...fallbacks,\n    ...rules,\n  }),\n}\n\ntype TrustedTypesPolicies = Map<string, GHTrustedTypePolicyOptions>\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var trustedTypes: typeof tinyfill | undefined\n  // We need to store the policies in a global variable so that they accurately track the global policy store in the\n  // browser. This prevents false misses when there is more than one instance of this module loaded on the page.\n  // eslint-disable-next-line no-var\n  var __TRUSTED_TYPE_POLICIES__: TrustedTypesPolicies\n}\n\nconst registeredPolicies: TrustedTypesPolicies = (globalThis.__TRUSTED_TYPE_POLICIES__ ??= new Map())\n\n// eslint-disable-next-line compat/compat\nconst trustedTypes = globalThis.trustedTypes ?? tinyfill\n\nexport const ghTrustedTypes = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => {\n    if (registeredPolicies.has(name)) {\n      sendStats({\n        incrementKey: 'TRUSTED_TYPES_POLICY_INITIALIZED_TWICE',\n      })\n      return registeredPolicies.get(name) as GHTrustedTypePolicyWithName\n    } else {\n      const policy = Object.freeze(trustedTypes.createPolicy(name, rules))\n      registeredPolicies.set(name, policy)\n      return policy\n    }\n  },\n}\n\n// This export is only for testing. Do not import in production code.\nexport const registeredPoliciesForTesting = registeredPolicies\nexport const tinyfillForTesting = tinyfill\n\n/*\n *\n * This is a temporary warning to indicate to hubbers that the following errors are expected and safe to ignore.\n *\n */\nlet hasWarnedHubberAboutTrustedTypes = false\n\nssrSafeDocument?.addEventListener('securitypolicyviolation', (e: SecurityPolicyViolationEvent) => {\n  if (e.violatedDirective === 'require-trusted-types-for' && !hasWarnedHubberAboutTrustedTypes) {\n    // eslint-disable-next-line no-console\n    console.warn(`Hi fellow Hubber!\n    You're probably seeing a Report Only Trusted Types error near this message. This is intended behaviour, staff-only,\n    does not impact application control flow, and is used solely for statistic collection. Unfortunately we\n    can't gather these statistics without adding the above warnings to your console. Sorry about that!\n    Feel free to drop by #prodsec-engineering if you have any additional questions about Trusted Types or CSP.`)\n    hasWarnedHubberAboutTrustedTypes = true\n  }\n})\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  assertRelativePathOrSameOrigin(path)\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\nfunction assertRelativePathOrSameOrigin(path: string) {\n  if (process.env.NODE_ENV === 'test' && !window.location.origin) return\n  const url = new URL(path, window.location.origin)\n  if (url.origin !== window.location.origin) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetch(path, {...init, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetchJSON(path, {...init, headers})\n}\n","import {supported as webauthnSupported} from '@github/webauthn-json/browser-ponyfill'\n\n// Note: the default feedback value stored in the form is 'unknown', but that\n// should not be used unless the JS fails to run.\ntype WebauthnSupportLevel = 'supported' | 'unsupported'\n\n// Calculates a string value to send to the server.\nexport function webauthnSupportLevel(): WebauthnSupportLevel {\n  return webauthnSupported() ? 'supported' : 'unsupported'\n}\n\n// Calculates a string value to send to the server.\nexport async function iuvpaaSupportLevel(): Promise<WebauthnSupportLevel> {\n  if (await window.PublicKeyCredential?.isUserVerifyingPlatformAuthenticatorAvailable()) {\n    return 'supported'\n  }\n  return 'unsupported'\n}\n","import {useState} from 'react'\nimport type {BrowserHistory, MemoryHistory} from '@remix-run/router'\nimport {Router} from 'react-router-dom'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\ntype Props = {\n  children: React.ReactNode\n  history: BrowserHistory | MemoryHistory\n}\n\nexport function PartialRouter({children, history}: Props) {\n  const [state, setState] = useState({\n    location: history.location,\n  })\n\n  useHydratedEffect(() => history.listen(setState), [history])\n\n  return (\n    <Router location={state.location} navigator={history}>\n      {children}\n    </Router>\n  )\n}\n\ntry{ PartialRouter.displayName ||= 'PartialRouter' } catch {}","// Think of this as the entry point into the framework\nimport React from 'react'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {BaseProviders} from './BaseProviders'\nimport type {BrowserHistory} from '@remix-run/router'\nimport {createMemoryHistory} from '@remix-run/router'\nimport {AppContextProvider} from './AppContextProvider'\nimport {PartialRouter} from './PartialRouter'\nimport {CommonElements} from './CommonElements'\nimport {createBrowserHistory} from './create-browser-history'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {usePartialAnchorProps} from './react-partial-anchor'\n\ninterface Props {\n  partialName: string\n  embeddedData: EmbeddedPartialData\n  Component: React.ComponentType\n  wasServerRendered: boolean\n  ssrError?: HTMLScriptElement\n  anchorElement?: ReactPartialAnchorElement | null\n}\n\nexport function PartialEntry({\n  partialName,\n  embeddedData,\n  Component,\n  wasServerRendered,\n  ssrError,\n  anchorElement,\n}: Props) {\n  // Create a ref to track the browser history:\n  const historyRef = React.useRef<BrowserHistory>()\n  const window = globalThis.window as Window | undefined\n\n  // For linking to work, we can just pass a dummy pathname here. We may consider plumbing the actual path in\n  if (!historyRef.current) {\n    historyRef.current = !window\n      ? createMemoryHistory({initialEntries: [{pathname: '/'}]})\n      : createBrowserHistory({window})\n  }\n  const history = historyRef.current\n  const partialAnchorProps = usePartialAnchorProps(anchorElement)\n\n  // Wrap the partial in an AppContextProvider and static Router so that react-core links\n  // will be functional.\n  return (\n    <BaseProviders appName={partialName} wasServerRendered={wasServerRendered}>\n      <AppContextProvider history={history} routes={[]}>\n        <PartialRouter history={history}>\n          <Component {...embeddedData.props} {...(partialAnchorProps as object)} />\n          <CommonElements ssrError={ssrError} />\n        </PartialRouter>\n      </AppContextProvider>\n    </BaseProviders>\n  )\n}\n\ntry{ PartialEntry.displayName ||= 'PartialEntry' } catch {}","import {target} from '@github/catalyst'\nimport {createRoot, hydrateRoot} from 'react-dom/client'\nimport type {createRoot as createRootType, hydrateRoot as hydrateRootType, Root} from 'react-dom/client'\nimport React from 'react'\nimport ReactProfilingMode from '@github-ui/react-profiling-mode'\nimport {EXPECTED_ERRORS} from './expected-errors'\nimport {sendStats} from '@github-ui/stats'\n\ntype ReactDOM = {\n  createRoot: typeof createRootType\n  hydrateRoot: typeof hydrateRootType\n}\n\nconst REACT_INVARIANT_ERROR_REGEX = /Minified React error #(?<invariant>\\d+)/\n\nexport abstract class ReactBaseElement<T> extends HTMLElement {\n  @target embeddedData: HTMLScriptElement | undefined\n  @target ssrError: HTMLScriptElement | undefined\n  @target reactRoot: HTMLElement | undefined\n  private root: Root | undefined\n\n  abstract nameAttribute: string\n  abstract getReactNode(embeddedData: T): Promise<React.ReactNode>\n\n  protected get name() {\n    return this.getAttribute(this.nameAttribute) as string\n  }\n\n  private get embeddedDataText() {\n    const text = this.embeddedData?.textContent\n\n    if (!text) {\n      throw new Error(`No embedded data provided for react element ${this.name}`)\n    }\n\n    return text\n  }\n\n  get hasSSRContent() {\n    return this.getAttribute('data-ssr') === 'true'\n  }\n\n  connectedCallback() {\n    this.renderReact()\n  }\n\n  disconnectedCallback() {\n    this.root?.unmount()\n    this.root = undefined\n  }\n\n  private async renderReact() {\n    if (!this.reactRoot) throw new Error('No react root provided')\n    let reactDom: ReactDOM = {\n      createRoot,\n      hydrateRoot,\n    }\n\n    // Override the react-dom import if we're in profiling mode\n    if (ReactProfilingMode.isEnabled()) {\n      reactDom = await this.getReactDomWithProfiling()\n    }\n\n    const embeddedData = JSON.parse(this.embeddedDataText) as T\n    const ssrErrorText = this.ssrError?.textContent\n    const node = await this.getReactNode(embeddedData)\n    const baseNode = <React.StrictMode>{node}</React.StrictMode>\n\n    if (ssrErrorText) {\n      this.logSSRError(ssrErrorText)\n    }\n\n    if (this.hasSSRContent) {\n      /**\n       * Styled-components automatically looks for style tags to hydrate on first page load, but will not detect them\n       * if they are added after the initial page load. This causes a hydration error because React isn't expecting\n       * a style tag within the app. To work around this, we need to manually move the style tags to the head before\n       * hydrating the app.\n       *\n       * During hydration, styled-components will create a new style tag which matches the one we moved to the head.\n       * This means that after hydration, we can safely remove the style tag we manually moved to the head.\n       */\n      const styles = this.querySelector('style[data-styled=\"true\"]')\n      if (styles) document.head.appendChild(styles)\n\n      // Hydrate the react app\n      // onRecoverableError is disabled until we have a react version with this fix in:\n      // https://github.com/facebook/react/pull/25692\n      this.root = reactDom.hydrateRoot(this.reactRoot, baseNode, {\n        onRecoverableError: error => {\n          if (!(error instanceof Error)) return\n\n          const match = REACT_INVARIANT_ERROR_REGEX.exec(error.message)\n          const invariant = String(match?.groups?.invariant)\n\n          sendStats({\n            incrementKey: 'REACT_HYDRATION_ERROR',\n            incrementTags: {\n              appName: this.name,\n              invariant,\n            },\n          })\n        },\n      })\n\n      // Remove the manually moved style tag after hydration\n      if (styles) {\n        // Wait until things are idle to remove the style tag. If we do it immediately, we can cause a flash of unstyled content.\n        requestIdleCallback(() => {\n          // styles could have already been removed by Turbo if a navigation happens quickly. Only remove it from the DOM if it's still there.\n          styles.parentElement?.removeChild(styles)\n        })\n      }\n    } else {\n      this.root = reactDom.createRoot(this.reactRoot)\n      this.root.render(baseNode)\n    }\n\n    this.classList.add('loaded')\n  }\n\n  private getReactDomWithProfiling() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return import('react-dom/profiling') as any as Promise<ReactDOM>\n  }\n\n  private logSSRError(ssrErrorText: string) {\n    if (EXPECTED_ERRORS[ssrErrorText]) {\n      // eslint-disable-next-line no-console\n      return console.error('SSR failed with an expected error:', EXPECTED_ERRORS[ssrErrorText])\n    }\n\n    try {\n      const error = JSON.parse(ssrErrorText) as PlatformJavascriptError\n      const stacktrace = parseFailbotStacktrace(error)\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', `${error.type}: ${error.value}\\n`, error, stacktrace)\n    } catch {\n      /**\n       * In the event we couldn't log the error, we should not break the application\n       */\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', ssrErrorText, 'unable to parse as json')\n    }\n  }\n}\n\nfunction parseFailbotStacktrace(error: PlatformJavascriptError) {\n  if (!error.stacktrace) return ''\n  let prefix = '\\n '\n  const stack = error.stacktrace.map((frame: PlatformStackframe) => {\n    const {function: func, filename, lineno, colno} = frame\n    const line = `${prefix} at ${func} (${filename}:${lineno}:${colno})`\n    prefix = ' '\n    return line\n  })\n  return stack.join('\\n')\n}\n\ntry{ REACT_INVARIANT_ERROR_REGEX.displayName ||= 'REACT_INVARIANT_ERROR_REGEX' } catch {}"],"names":["ItemsScope","ListMode","FormMode","encryptString","itemValue","publicKey","seal","encryptedBytes","Buffer","from","toString","FormDialog","mode","name","value","onClose","tableDataUpdater","formMode","keyId","url","err","setError","useState","errorMessage","setErrorMessage","nameValue","setNameValue","setItemValue","prefix","capitalize","visible","setVisible","saving","setSaving","resetToDefaultStates","handleSubmit","e","secret","add","sessionInSudo","fetchSessionInSudo","sudoPrompt","currentTarget","formData","FormData","undefined","encryptedValue","set","variable","update","resp","verifiedFetch","method","body","ok","finalValue","result","toUpperCase","scope","Environment","updated_at","Date","now","urlArray","split","pop","push","join","json","message","Dialog","title","sx","visibility","footerButtons","buttonType","content","onClick","autoFocus","disabled","testIdProps","Body","data-testid","div","className","Flash","variant","p","code","FormControl","Label","TextInput","width","placeholder","onChange","target","Textarea","displayName","DeleteDialog","rowId","setClose","additionalFormData","deleting","setDeleting","renderFooter","Footer","Button","block","append","key","aria-label","DescriptionElement","description","Text","fontSize","text","Link","href","contextUrl","inline","contextLinkText","TableBlankstate","tableAction","isEditableInScope","isPrivateRepoInFreeOrg","lowerCaseScope","toLowerCase","tableName","emptyMessage","Repository","Organization","OrgHostSetup","OrgDevEnv","CodespaceUser","as","id","fontWeight","Blankslate","Description","color","display","textAlign","TableAction","useDialog","newItemDialogOpen","setNewItemDialogOpen","LinkButton","textDecoration","underline","ActionsSecretsVariablesList","items","overrides","environmentUrls","crudUrls","tableActionProps","columnHelper","createColumnHelper","columns","deleteDialogStates","setDeleteDialogStates","Map","saveDialogStates","setSaveDialogStates","itemsState","setItemsState","crudUrlsState","setCrudUrlsState","setIsDeleteDialogOpenForRow","open","updatedDialogStates","setIsSaveDialogOpenForRow","handleUpdateTableData","item","currentItems","index","findIndex","i","newItems","editUrls","newCrudUrls","deleteUrls","handleDeleteTableData","itemName","filter","tableData","useMemo","generateRowData","Array","tableRow","environment_name","lastUpdated","visibility_description","override","some","obj","hasOwnProperty","editUrl","deleteUrl","environmentUrl","environment","length","hasVisibilityDescription","column","header","field","sortBy","renderCell","row","overrideMessage","Truncate","maxWidth","Octicon","icon","LockIcon","a","b","va","vb","isNumberedEntry","test","entry","numA","parseInt","match","replace","numB","localeCompare","align","date","toLocaleDateString","RelativeTime","tense","span","editButton","IconButton","unsafeDisableTooltip","PencilIcon","get","deleteButton","TrashIcon","Table","Container","Title","Actions","Subtitle","DataTable","aria-labelledby","aria-describedby","initialSortColumn","data","registerReactPartial","Component","queryLast","selector","list","document","querySelectorAll","requestUri","window","location","protocol","host","pagePathname","locationOverride","pathname","pageQuery","stripParams","search","extraParams","meta","names","dialog","options","clonedDetails","dialogTemplate","querySelector","cloneNode","details","detailsDialog","spinner","detailsClass","classList","dialogClass","label","setAttribute","labelledBy","remove","prepend","error","errorSpan","createElement","textContent","addEventListener","hasAttribute","fire","extensionErrors","errorsReported","loadTime","EXPECTED_NETWORK_ERROR_MESSAGES","Set","isExpectedError","has","startsWith","reportError","context","isFeatureEnabled","Error","isIgnoredNonError","ignoredErrorMessages","includes","errorForStackTrace","serializedErrorValue","serializeNonError","JSON","stringify","report","errorContext","type","stacktrace","catalogService","formatError","unloaded","isSupported","head","stack","frame","extensions","filename","function","fetch","Object","assign","sanitizedUrl","readyState","referrer","getSoftNavReferrer","timeSinceLoad","Math","round","user","pageUser","login","clientId","getOrCreateClientId","bundler","ui","Boolean","parse","map","file","String","methodName","lineno","lineNumber","colno","ssrSafeWindow","BroadcastChannel","sharedWorkerErrorChannel","event","ResponseError","constructor","response","status","policyName","serverXSafeHTMLPolicy","ghTrustedTypes","createPolicy","createHTML","s","trustedTypesPolicy","apply","policy","verifyResponseHtmlSafeNonce","nonces","allowJson","contentType","headers","responseNonce","getDocumentHtmlSafeNonces","fallback","silenceErrorReporting","fetchSafeDocumentFragment","request","Request","self","statusText","trustedHTML","parseHTML","fetchPoll","timeBetweenRequests","acceptedStatusCodes","pollStatusCodes","poll","wait","Promise","resolve","setTimeout","fetchRetry","fetchOptions","max","attempt","retry","reject","hydroAnalyticsClient","getItem","safeStorage","dimensionPrefix","MARKETING_PARAMS","getOptionsFromMeta","baseContext","AnalyticsClient","_","extendBaseContext","app_id","event_url","entries","visitorMeta","atob","URLSearchParams","staff","isStaff","sendPageView","sendEvent","service","cleanContext","stringifyObjectValues","fromEntries","k","v","temporaryPermissiveParseHTMLPolicy","sanitize","fallbackOnError","html","template","innerHTML","importNode","DeferredRegistry","register","registration","registrationEntries","promise","getRegistration","Deferred","usePartialAnchorProps","anchorElement","useEffect","anchor","reactPartialAnchor","__wrapperElement","useExternalAnchor","ref","useRef","setOpen","useCallback","current","useOnAnchorClick","element","removeEventListener","partialRegistry","ReactPartialElement","ReactBaseElement","getReactNode","embeddedData","appName","closest","PartialEntry","partialName","wasServerRendered","hasSSRContent","ssrError","nameAttribute","controller","setItem","removeItem","REACT_PROFILING_ENABLED","enable","disable","isEnabled","DEFAULT_SOFT_NAV_ERROR_REASON","SOFT_NAV_FAIL","SOFT_NAV_FAIL_REFERRER","SOFT_NAV_REFERRER","SOFT_NAV_MARK","SOFT_NAV_REACT_APP_NAME","SOFT_NAV_LATEST_MECHANISM","clearSoftNav","setSoftNavMechanism","mechanism","unsetSoftNav","inSoftNav","softNav","getSoftNavMechanism","hasSoftNavFailure","getSoftNavFailReason","setSoftNavFailReason","reason","setSoftNavReferrer","setSoftNavReactAppName","getCurrentReactAppName","getSoftNavReactAppName","getAttribute","setLatestMechanism","getLatestMechanism","sudoPromptExist","loadPromptTemplate","link","HTMLTemplateElement","fragment","urlWithParams","oldURL","newURL","URL","origin","params","slice","webauthnSupportLevel","appendChild","succeeded","prompt","removeAttribute","once","sudoModalErrorOrClose","form","wants","unauthorizedError","tooManyError","errorSelector","inputElementSelector","hidden","triggerSudoPrompt","accept","sudoResponse","remoteForm","TrustedTypesPolicyError","sendStats","incrementKey","trustedTypesPolicyName","policyOutput","startTime","performance","sanitized","dompurify","FORBID_ATTR","endTime","output","outputLength","sanitizedLength","executionTime","globalThis","unimplemented","functionName","fallbacks","createScript","createScriptURL","registeredPolicies","__TRUSTED_TYPE_POLICIES__","trustedTypes","rules","freeze","hasWarnedHubberAboutTrustedTypes","ssrSafeDocument","violatedDirective","console","warn","path","init","assertRelativePathOrSameOrigin","verifiedFetchJSON","Accept","reactFetch","reactFetchJSON","webauthnSupported","iuvpaaSupportLevel","PublicKeyCredential","isUserVerifyingPlatformAuthenticatorAvailable","PartialRouter","children","history","state","setState","useHydratedEffect","listen","Router","navigator","historyRef","React","createBrowserHistory","createMemoryHistory","initialEntries","partialAnchorProps","BaseProviders","AppContextProvider","routes","props","CommonElements","REACT_INVARIANT_ERROR_REGEX","HTMLElement","embeddedDataText","connectedCallback","renderReact","disconnectedCallback","root","unmount","reactRoot","reactDom","createRoot","hydrateRoot","ReactProfilingMode","getReactDomWithProfiling","ssrErrorText","node","baseNode","logSSRError","styles","onRecoverableError","exec","invariant","groups","incrementTags","requestIdleCallback","parentElement","removeChild","render","EXPECTED_ERRORS","parseFailbotStacktrace","func","line"],"sourceRoot":""}