{"version":3,"file":"chunk-app_components_primer_experimental_split-page-layout-element_ts-xxxxxxxxxxxx.js","mappings":"ggCAME,cACA,cACA,cA0FI,cAhGN,YACMA,+BAA+BC,YAkCnCC,sBAAuB,CACG,KAApB,MAAI,CAAEC,K,OAGJA,EAAY,IAGlBC,OAAOC,gBAAgB,CAAC,SAAU,IAAI,CAACC,gBAAgB,EAEvDF,OAAOC,gBAAgB,CAAC,SAAU,IAAI,CAACC,gBAAgB,EAEvD,IAAI,CAACA,gBAAgB,GACvB,CAEAC,qBAAsB,CACI,KAApB,MAAI,CAAEJ,K,OAGJA,EAAY,IAElBC,OAAOI,mBAAmB,CAAC,SAAU,IAAI,CAACF,gBAAgB,EAC1DF,OAAOI,mBAAmB,CAAC,SAAU,IAAI,CAACF,gBAAgB,EAC5D,CAEAG,mBAAoB,CACd,MAAI,CAAEC,IACR,IAAI,CAACC,eAAe,EAExB,CAEAC,sBAAuB,CACrB,MAAI,CAAEC,GAASC,SAAS,CAAC,IAAI,CAACC,IAAI,EAClC,IAAI,CAACR,mBAAmB,EAC1B,CAEAI,iBAAkB,CAChB,IAAMK,EAAaC,WAAWC,iBAAiB,IAAI,CAACH,IAAI,EAAEI,GAAG,E,OACvDH,EAAaI,MAAMJ,GAAc,EAAIA,G,OAErCH,EAAW,IAAIQ,qBACnB,IACE,IAAK,IAAMC,KAASC,EAIdD,EAAME,iBAAiB,CAAG,GAC5B,IAAI,CAACtB,oBAAoB,EAG/B,EACA,CACEuB,KAAMC,SAENC,WAAY,CAAC,CAAC,EAAE,MAAI,CAAEX,GAAW,cAAc,CAAC,CAChDY,UAAW,CAAC,EAAE,IAGlB,MAAI,CAAEf,GAASgB,OAAO,CAAC,IAAI,CAACd,IAAI,EAChC,IAAI,CAACb,oBAAoB,EAC3B,C,8BAEA,OAAI,G,IAAJ,E,aA5FA,U,kBAAA,M,GACA,U,kBAAA,M,GACA,U,kBAAA,M,QAEAI,gBAAgB,CAAG,KACjB,IAAMwB,EAAU,IAAI,CAACf,IAAI,CAACgB,qBAAqB,GACzCC,EAAa,IAAI,CAACC,OAAO,CAACF,qBAAqB,GACjDG,EAAS,CAAC,EAAEJ,EAAQX,GAAG,CAAC,EAAE,CAAC,CAE/B,GAAIW,EAAQX,GAAG,CAAG,MAAI,CAAEH,GAEtBkB,EAAS,CAAC,EAAEJ,EAAQX,GAAG,CAAC,EAAE,CAAC,MACtB,GAAIa,EAAWG,MAAM,CAAG/B,OAAOgC,WAAW,CAAE,CAEjD,IAAMC,EAAejC,OAAOgC,WAAW,CAAGJ,EAAWG,MAAM,CAC3DD,EAAS,CAAC,EAAE,MAAI,CAAElB,GAAW,KAAK,EAAEqB,EAAa,EAAE,CAAC,CAGpD,IAAMC,EAAgBZ,SAASa,IAAI,CAACC,YAAY,CAAGpC,OAAOqC,OAAO,CACjE,GAAIH,EAAgBlC,OAAOgC,WAAW,CAAE,CACtC,IAAMM,EAAsBL,EAAgBjC,CAAAA,OAAOgC,WAAW,CAAGE,CAAY,EAC7EJ,EAAS,CAAC,EAAE,MAAI,CAAElB,GAAW,KAAK,EAAE0B,EAAoB,EAAE,CAAC,CAE/D,MAEE,IAAI,CAACnC,mBAAmB,EAG1B,KAAI,CAACQ,IAAI,CAAC4B,KAAK,CAACC,MAAM,CAAG,CAAC,aAAa,EAAEV,EAAO,CAAC,CAAC,C,CAmEtD,EAHE,aACE,OAAO,IAAI,CAACnB,IAAI,EAAI,IAAI,CAACA,IAAI,CAAC8B,SAAS,CAACC,QAAQ,CAAC,0BACnD,C,GAhGCC,EAAAA,EAAMA,C,CADH/C,EAAAA,SAAAA,CAAAA,OAAAA,KAAAA,G,GAEH+C,EAAAA,EAAMA,C,CAFH/C,EAAAA,SAAAA,CAAAA,UAAAA,KAAAA,GAAAA,EAAAA,EAAAA,CADLgD,EAAAA,EAAUA,C,CACLhD,E","sources":["app/components/primer/experimental/split-page-layout-element.ts"],"sourcesContent":["import {controller, target} from '@github/catalyst'\n\n@controller\nclass SplitPageLayoutElement extends HTMLElement {\n  @target pane: HTMLElement\n  @target content: HTMLElement\n  #listening: boolean\n  #defaultTop: number\n  #observer: IntersectionObserver\n\n  updatePaneHeight = () => {\n    const panePos = this.pane.getBoundingClientRect()\n    const contentPos = this.content.getBoundingClientRect()\n    let offset = `${panePos.top}px`\n\n    if (panePos.top > this.#defaultTop) {\n      // The pane hasn't reached the top\n      offset = `${panePos.top}px`\n    } else if (contentPos.bottom < window.innerHeight) {\n      // The pane has reached the bottom\n      const bottomOffset = window.innerHeight - contentPos.bottom\n      offset = `${this.#defaultTop}px - ${bottomOffset}px`\n\n      // the pane has passed the bottom with Safari's elastic scroll\n      const elasticScroll = document.body.scrollHeight - window.scrollY\n      if (elasticScroll < window.innerHeight) {\n        const bottomElasticOffset = bottomOffset - (window.innerHeight - elasticScroll)\n        offset = `${this.#defaultTop}px - ${bottomElasticOffset}px`\n      }\n    } else {\n      // the pane is at the maximum available height\n      this.stopScrollListeners()\n    }\n\n    this.pane.style.height = `calc(100vh - ${offset})`\n  }\n\n  startScrollListeners() {\n    if (this.#listening === true) {\n      return\n    }\n    this.#listening = true\n\n    // eslint-disable-next-line github/prefer-observers\n    window.addEventListener('scroll', this.updatePaneHeight)\n    // eslint-disable-next-line github/prefer-observers\n    window.addEventListener('resize', this.updatePaneHeight)\n\n    this.updatePaneHeight()\n  }\n\n  stopScrollListeners() {\n    if (this.#listening === false) {\n      return\n    }\n    this.#listening = false\n\n    window.removeEventListener('scroll', this.updatePaneHeight)\n    window.removeEventListener('resize', this.updatePaneHeight)\n  }\n\n  connectedCallback() {\n    if (this.#stickyPane) {\n      this.setupStickyPane()\n    }\n  }\n\n  disconnectedCallback() {\n    this.#observer.unobserve(this.pane)\n    this.stopScrollListeners()\n  }\n\n  setupStickyPane() {\n    const defaultTop = parseFloat(getComputedStyle(this.pane).top)\n    this.#defaultTop = isNaN(defaultTop) ? 0 : defaultTop\n\n    this.#observer = new IntersectionObserver(\n      (entries: IntersectionObserverEntry[]) => {\n        for (const entry of entries) {\n          // intersection ratio will be 1 when the pane is at full height and completely in view\n          // at top/bottom edges, a full-height pane will be partially out of the observed section, so ratio < 1\n          // so ratio < 1 means we need to start watching the scroll again\n          if (entry.intersectionRatio < 1) {\n            this.startScrollListeners()\n          }\n        }\n      },\n      {\n        root: document,\n        // we need to account for the \"top\" buffer\n        rootMargin: `-${this.#defaultTop}px 0px 0px 0px`,\n        threshold: [1],\n      },\n    )\n    this.#observer.observe(this.pane)\n    this.startScrollListeners()\n  }\n\n  get #stickyPane() {\n    return this.pane && this.pane.classList.contains('PageLayout-pane--sticky')\n  }\n}\n"],"names":["SplitPageLayoutElement","HTMLElement","startScrollListeners","listening","window","addEventListener","updatePaneHeight","stopScrollListeners","removeEventListener","connectedCallback","stickyPane","setupStickyPane","disconnectedCallback","observer","unobserve","pane","defaultTop","parseFloat","getComputedStyle","top","isNaN","IntersectionObserver","entry","entries","intersectionRatio","root","document","rootMargin","threshold","observe","panePos","getBoundingClientRect","contentPos","content","offset","bottom","innerHeight","bottomOffset","elasticScroll","body","scrollHeight","scrollY","bottomElasticOffset","style","height","classList","contains","target","controller"],"sourceRoot":""}