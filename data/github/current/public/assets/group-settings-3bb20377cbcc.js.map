{"version":3,"file":"group-settings-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/alive/alive.ts","ui/packages/alive/connect-alive-subscription.ts","ui/packages/alive/session.ts","ui/packages/analytics-overrides/analytics-overrides.ts","ui/packages/failbot/failbot.ts","ui/packages/group-settings/contexts/BasePathContext.tsx","ui/packages/group-settings/contexts/ReadOnlyContext.tsx","ui/packages/group-settings/contexts/OrganizationContext.tsx","ui/packages/group-settings/contexts/BaseAvatarUrlContext.tsx","ui/packages/group-settings/hooks/use-group-tree.ts","ui/packages/group-settings/contexts/GroupTreeContext.tsx","ui/packages/group-settings/contexts/MaxDepthContext.tsx","ui/packages/group-settings/App.tsx","ui/packages/group-settings/contexts/RecursiveGroupContext.tsx","ui/packages/group-settings/components/DangerConfirmationDialog.tsx","ui/packages/group-settings/components/TreeListItem.tsx","ui/packages/group-settings/components/RecursiveGroup.tsx","ui/packages/group-settings/components/Layout.tsx","ui/packages/group-settings/types.ts","ui/packages/group-settings/routes/List.tsx","ui/packages/group-settings/contexts/GroupFormContext.tsx","ui/packages/group-settings/hooks/use-form-field.ts","ui/packages/group-settings/components/GroupFormFields/GroupNameField.tsx","ui/packages/group-settings/components/CheckboxField.tsx","ui/packages/group-settings/components/GroupFormFields/ManageForkDestinationsField.tsx","ui/packages/group-settings/components/GroupFormFields/ForkDestinationsField.tsx","ui/packages/group-settings/components/GroupFormFields/ManageAccessPermissionsField.tsx","ui/packages/group-settings/components/GroupFormFields/AccessPermissionsField.tsx","ui/packages/group-settings/components/GroupFormFields/AllowAdditionalCollaboratorsField.tsx","ui/packages/group-settings/components/LiveBanner.tsx","ui/packages/group-settings/components/GroupFormFields/RepositoryListField.module.css","ui/packages/group-settings/components/GroupFormFields/RepositoryListField.tsx","ui/packages/group-settings/components/GroupForm.tsx","ui/packages/group-settings/routes/New.tsx","ui/packages/group-settings/routes/Show.tsx","ui/packages/group-settings/group-settings.ts","ui/packages/trusted-types-policies/alive.ts","ui/packages/trusted-types-policies/policy.ts","ui/packages/trusted-types/trusted-types.ts","ui/packages/use-alive/TestAliveSubscription.tsx","ui/packages/use-alive/use-alive.ts","ui/packages/list-view/src/ListItem/Description.module.css","ui/packages/list-view/src/ListItem/Description.tsx","ui/packages/list-view/src/ListItem/LeadingContent.module.css","ui/packages/list-view/src/ListItem/LeadingContent.tsx","ui/packages/list-view/src/ListItem/LeadingVisual.module.css","ui/packages/list-view/src/ListItem/UnreadIndicator.module.css","ui/packages/list-view/src/ListItem/UnreadIndicator.tsx","ui/packages/list-view/src/ListItem/LeadingVisual.tsx","ui/packages/list-view/src/ListItem/MainContent.module.css","ui/packages/list-view/src/ListItem/MainContent.tsx","ui/packages/list-view/src/ListView/Metadata.tsx","ui/packages/list-view/src/density-gap.module.css","ui/packages/list-view/src/ListView/ActionBar.module.css","ui/packages/list-view/src/ListView/ActionBar.tsx","ui/packages/list-view/src/ListView/Metadata.module.css","ui/packages/list-view/src/ListView/SectionFilters.module.css","ui/packages/list-view/src/ListView/SectionFilters.tsx","ui/packages/list-view/src/ListView/SelectAllCheckbox.module.css","ui/packages/list-view/src/ListView/SelectAllCheckbox.tsx","ui/packages/react-core/Link.tsx"],"sourcesContent":["import type {AliveEvent, MetadataUpdate, Notifier, Subscription} from '@github/alive-client'\nimport {PresenceMetadataSet, SubscriptionSet, isPresenceChannel} from '@github/alive-client'\nimport {AliveSession} from './session'\nimport {debounce} from '@github/mini-throttle'\nimport {ready} from '@github-ui/document-ready'\nimport safeStorage from '@github-ui/safe-storage'\nimport {alivePolicy, InvalidSourceRelError} from '@github-ui/trusted-types-policies/alive'\nimport {isSafari} from '@braintree/browser-detection'\n\nexport interface Dispatchable {\n  dispatchEvent: (e: Event) => unknown\n}\n\nfunction isSharedWorkerSupported(): boolean {\n  // There is currently a bug in safari that causes shared workers to stop working after a while\n  // see https://github.com/github/web-systems/issues/965\n  if (isSafari()) return false\n  return 'SharedWorker' in window && safeStorage('localStorage').getItem('bypassSharedWorker') !== 'true'\n}\n\nexport function workerSrc(): string | null {\n  const url =\n    document.head.querySelector<HTMLLinkElement>(`link[rel=shared-web-socket-src]`)?.getAttribute('href') ?? ''\n  try {\n    return alivePolicy.createScriptURL(url)\n  } catch (e) {\n    if (e instanceof InvalidSourceRelError) {\n      return null\n    }\n    throw e\n  }\n}\n\nfunction socketUrl(): string | null {\n  return document.head.querySelector<HTMLLinkElement>('link[rel=shared-web-socket]')?.href ?? null\n}\n\nfunction socketRefreshUrl(): string | null {\n  return (\n    document.head.querySelector<HTMLLinkElement>('link[rel=shared-web-socket]')?.getAttribute('data-refresh-url') ??\n    null\n  )\n}\n\nfunction sessionIdentifier(): string | null {\n  return (\n    document.head.querySelector<HTMLLinkElement>('link[rel=shared-web-socket]')?.getAttribute('data-session-id') ?? null\n  )\n}\n\n/**\n * dispatches events of type: 'socket:message' | 'socket:presence'\n */\nfunction notify(subscribers: Iterable<Dispatchable>, {channel, type, data}: AliveEvent) {\n  for (const el of subscribers) {\n    el.dispatchEvent(\n      new CustomEvent(`socket:${type}`, {\n        bubbles: false,\n        cancelable: false,\n        detail: {name: channel, data},\n      }),\n    )\n  }\n}\n\nclass AliveSessionProxy {\n  private worker: SharedWorker\n  private subscriptions = new SubscriptionSet<Dispatchable>()\n  private presenceMetadata = new PresenceMetadataSet<Dispatchable>()\n  private notify: Notifier<Dispatchable>\n\n  constructor(src: string, url: string, refreshUrl: string, sessionId: string, notifier: Notifier<Dispatchable>) {\n    this.notify = notifier\n    // eslint-disable-next-line ssr-friendly/no-dom-globals-in-constructor, compat/compat\n    this.worker = new SharedWorker(src, `github-socket-worker-v2-${sessionId}`)\n    this.worker.port.onmessage = ({data}) => this.receive(data)\n    this.worker.port.postMessage({connect: {url, refreshUrl}})\n  }\n\n  subscribe(subs: Array<Subscription<Dispatchable>>) {\n    const added = this.subscriptions.add(...subs)\n    if (added.length) {\n      this.worker.port.postMessage({subscribe: added})\n    }\n\n    // We may be adding a subscription to a presence channel which is already subscribed.\n    // In this case, we need to explicitly ask the SharedWorker to send us the presence data.\n    const addedChannels = new Set(added.map(topic => topic.name))\n    const redundantPresenceChannels = subs.reduce((redundantChannels, subscription) => {\n      const channel = subscription.topic.name\n\n      if (isPresenceChannel(channel) && !addedChannels.has(channel)) {\n        redundantChannels.add(channel)\n      }\n\n      return redundantChannels\n    }, new Set<string>())\n\n    if (redundantPresenceChannels.size) {\n      this.worker.port.postMessage({requestPresence: Array.from(redundantPresenceChannels)})\n    }\n  }\n\n  unsubscribeAll(...subscribers: Dispatchable[]) {\n    const removed = this.subscriptions.drain(...subscribers)\n    if (removed.length) {\n      this.worker.port.postMessage({unsubscribe: removed})\n    }\n\n    const updatedPresenceChannels = this.presenceMetadata.removeSubscribers(subscribers)\n    this.sendPresenceMetadataUpdate(updatedPresenceChannels)\n  }\n\n  updatePresenceMetadata(metadataUpdates: Array<MetadataUpdate<Dispatchable>>) {\n    const updatedChannels = new Set<string>()\n\n    for (const update of metadataUpdates) {\n      // update the local metadata for this specific element\n      this.presenceMetadata.setMetadata(update)\n      updatedChannels.add(update.channelName)\n    }\n\n    // Send the full local metadata for these channels to the SharedWorker\n    this.sendPresenceMetadataUpdate(updatedChannels)\n  }\n\n  sendPresenceMetadataUpdate(channelNames: Set<string>) {\n    if (!channelNames.size) {\n      return\n    }\n\n    const updatesForSharedWorker: Array<Omit<MetadataUpdate<Element>, 'subscriber'>> = []\n\n    for (const channelName of channelNames) {\n      // get all metadata for this channel (from all elements) to send to the SharedWorker\n      updatesForSharedWorker.push({\n        channelName,\n        metadata: this.presenceMetadata.getChannelMetadata(channelName),\n      })\n    }\n\n    // Send the full metadata updates to the SharedWorker\n    this.worker.port.postMessage({updatePresenceMetadata: updatesForSharedWorker})\n  }\n\n  online() {\n    this.worker.port.postMessage({online: true})\n  }\n\n  offline() {\n    this.worker.port.postMessage({online: false})\n  }\n\n  hangup() {\n    this.worker.port.postMessage({hangup: true})\n  }\n\n  private notifyPresenceDebouncedByChannel = new Map<string, Notifier<Dispatchable>>()\n  private receive(event: AliveEvent) {\n    const {channel} = event\n\n    if (event.type === 'presence') {\n      // There are times when we get a flood of messages from the SharedWorker, such as a tab that has been idle for a long time and then comes back to the foreground.\n      // Since each presence message for a channel contains the full list of users, we can debounce the events and only notify subscribers with the last one\n      let debouncedNotify = this.notifyPresenceDebouncedByChannel.get(channel)\n      if (!debouncedNotify) {\n        debouncedNotify = debounce((subscribers, debouncedEvent) => {\n          this.notify(subscribers, debouncedEvent)\n          this.notifyPresenceDebouncedByChannel.delete(channel)\n        }, 100)\n        this.notifyPresenceDebouncedByChannel.set(channel, debouncedNotify)\n      }\n\n      debouncedNotify(this.subscriptions.subscribers(channel), event)\n      return\n    }\n\n    // For non-presence messages, we can send them through immediately since they may contain different messages/data\n    this.notify(this.subscriptions.subscribers(channel), event)\n  }\n}\n\nasync function connect() {\n  const src = workerSrc()\n  if (!src) return\n\n  const url = socketUrl()\n  if (!url) return\n\n  const refreshUrl = socketRefreshUrl()\n  if (!refreshUrl) return\n\n  const sessionId = sessionIdentifier()\n  if (!sessionId) return\n\n  const createSession = () => {\n    if (isSharedWorkerSupported()) {\n      try {\n        return new AliveSessionProxy(src, url, refreshUrl, sessionId, notify)\n      } catch (_) {\n        // ignore errors.  CSP will some times block SharedWorker creation. Fall back to standard AliveSession.\n      }\n    }\n\n    return new AliveSession(url, refreshUrl, false, notify)\n  }\n  const session = createSession()\n\n  window.addEventListener('online', () => session.online())\n  window.addEventListener('offline', () => session.offline())\n  window.addEventListener('pagehide', () => {\n    if ('hangup' in session) session.hangup()\n  })\n\n  return session\n}\n\nasync function connectWhenReady() {\n  await ready\n  return connect()\n}\n\nlet sessionPromise: undefined | ReturnType<typeof connectWhenReady>\n\nexport function getSession() {\n  return (sessionPromise ||= connectWhenReady())\n}\n","import type {getSession} from '@github-ui/alive'\nimport {Topic} from '@github/alive-client'\n\n/**\n * Connect to an Alive subscription\n * @param aliveSession the Alive session\n * @param channelName the signed channel name\n * @param callback a callback to receive events from the alive channel. This callback should be memoized to avoid unnecessary resubscribes when React re-renders.\n */\n\nexport function connectAliveSubscription<T>(\n  aliveSession: Awaited<ReturnType<typeof getSession>>,\n  channelName: string | null,\n  callback: (data: T) => unknown,\n) {\n  if (!aliveSession) {\n    // the alive session failed to connect\n    throw new Error('Not connected to alive')\n  }\n\n  if (!channelName) {\n    throw new Error('No channel name')\n  }\n\n  const topic = Topic.parse(channelName)\n\n  if (!topic) {\n    throw new Error('Invalid channel name')\n  }\n\n  const aliveSubscription = {\n    subscriber: {\n      dispatchEvent: (event: Event) => {\n        if (event instanceof CustomEvent) {\n          const subscriptionEvent = event.detail\n          callback(subscriptionEvent.data)\n        }\n      },\n    },\n    topic,\n  }\n\n  aliveSession.subscribe([aliveSubscription])\n  return {\n    unsubscribe: () => aliveSession.unsubscribeAll(aliveSubscription.subscriber),\n  }\n}\n","import {AliveSession as BaseAliveSession} from '@github/alive-client'\nimport type {Notifier} from '@github/alive-client'\nexport class AliveSession<T> extends BaseAliveSession<T> {\n  constructor(\n    url: string,\n    private refreshUrl: string,\n    shared: boolean,\n    notify: Notifier<T>,\n  ) {\n    super(url, () => this.getUrlFromRefreshUrl(), shared, notify)\n  }\n\n  private getUrlFromRefreshUrl() {\n    return fetchRefreshUrl(this.refreshUrl)\n  }\n}\n\ntype PostUrl = {url?: string; token?: string}\nasync function fetchRefreshUrl(url: string): Promise<string | null> {\n  const data = await fetchJSON<PostUrl>(url)\n  return data && data.url && data.token ? post(data.url, data.token) : null\n}\n\nasync function fetchJSON<T>(url: string): Promise<T | null> {\n  const response = await fetch(url, {headers: {Accept: 'application/json'}})\n  if (response.ok) {\n    return response.json()\n  } else if (response.status === 404) {\n    return null\n  } else {\n    throw new Error('fetch error')\n  }\n}\n\nasync function post(url: string, csrf: string): Promise<string> {\n  const response = await fetch(url, {\n    method: 'POST',\n    mode: 'same-origin',\n    headers: {\n      'Scoped-CSRF-Token': csrf,\n    },\n  })\n  if (response.ok) {\n    return response.text()\n  } else {\n    throw new Error('fetch error')\n  }\n}\n","function queryLast<T extends Element>(selector: string): T | undefined {\n  const list = document.querySelectorAll<T>(selector)\n  if (list.length > 0) {\n    return list[list.length - 1]\n  }\n}\n\nfunction pagePathname() {\n  const locationOverride = queryLast<HTMLMetaElement>('meta[name=analytics-location]')\n  if (locationOverride) {\n    return locationOverride.content\n  } else {\n    return window.location.pathname\n  }\n}\n\nfunction pageQuery() {\n  const stripParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-query-strip]')\n  let search = ''\n\n  if (!stripParams) {\n    search = window.location.search\n  }\n\n  const extraParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-params]')\n  if (extraParams) {\n    search += (search ? '&' : '?') + extraParams.content\n  }\n\n  for (const meta of document.querySelectorAll<HTMLMetaElement>('meta[name=analytics-param-rename]')) {\n    const names = meta.content.split(':', 2)\n    search = search.replace(new RegExp(`(^|[?&])${names[0]}($|=)`, 'g'), `$1${names[1]}$2`)\n  }\n\n  return search\n}\n\nexport function requestUri() {\n  return `${window.location.protocol}//${window.location.host}${pagePathname() + pageQuery()}`\n}\n","// Report uncaught JS errors to Sentry\n//   https://sentry.io/github/github-js\n\nimport {getOrCreateClientId} from '@github/hydro-analytics-client'\nimport {isSupported} from '@github/browser-support'\nimport {parse} from 'stacktrace-parser'\nimport {requestUri} from '@github-ui/analytics-overrides'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {getSoftNavReferrer} from '@github-ui/soft-nav/utils'\n\nlet extensionErrors = false\nlet errorsReported = 0\nconst loadTime = Date.now()\n// network error messages are not consistent across browsers, this is a list of known messages for chrome and firefox\nexport const EXPECTED_NETWORK_ERROR_MESSAGES = new Set([\n  'Failed to fetch',\n  'NetworkError when attempting to fetch resource.',\n])\n\ntype ErrorContext = {\n  message?: string\n}\n\n// Check if an arbitrary object is an error, or at least an object that satisfies the interface of an error,\n// with the necessary information to be able to report it to Sentry.\nfunction isError(error: unknown): error is Error {\n  // Check if it's a definite instance of an error\n  if (error instanceof Error) return true\n  // Otherwise, check that it at least satisfies the interface of an error\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'name' in error &&\n    typeof error.name === 'string' &&\n    'message' in error &&\n    typeof error.message === 'string'\n  )\n}\n\n/** Tries to serialize an arbitrary error value that is not an Error object, and returns a default message otherwise */\nfunction serializeNonError(error: unknown): string {\n  try {\n    return JSON.stringify(error)\n  } catch {\n    return 'Unserializable'\n  }\n}\n\nfunction isExpectedError(error: Error): boolean {\n  // We use AbortController to control events and some workflows. When we call `abort()` on it, it will raise an\n  // `AbortError` which doesn't represent a real error, so we don't want to report it.\n  if (error.name === 'AbortError') return true\n  // Failed to fetch errors are usually related to the user's network connection. They also do not represent\n  // real errors related to our code, so we will also ignore them.\n  if (error.name === 'TypeError' && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n  // For memex we use an ApiError class to represent errors returned from the API\n  // Additional details in the format of ApiErrorOpts are affixed to the name as a stringified JSON object\n  // so we just need to ensure the error name starts with ApiError\n  // see ui/packages/memex/src/client/platform/api-error.ts for more details.\n  if (error.name.startsWith('ApiError') && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n\n  return false\n}\n\n// @deprecated Re-throw the caught exception instead.\nexport function reportError(error: unknown, context: ErrorContext = {}) {\n  if (isFeatureEnabled('FAILBOT_HANDLE_NON_ERRORS')) {\n    if (!isError(error)) {\n      if (isIgnoredNonError(error)) return\n\n      // Create an error instance so that we can get the stacktrace of how this was reported\n      const errorForStackTrace = new Error()\n      const serializedErrorValue = serializeNonError(error)\n      // Construct a custom error object so we can keep track of anywhere that we report an error that isn't an Error object\n      const newError: PlatformJavascriptError = {\n        type: 'UnknownError',\n        value: `Unable to report error, due to a thrown non-Error type: ${typeof error}, with value ${serializedErrorValue}`,\n        stacktrace: stacktrace(errorForStackTrace),\n        catalogService: undefined,\n      }\n      report(errorContext(newError, context))\n      return\n    }\n    if (!isExpectedError(error)) {\n      report(errorContext(formatError(error), context))\n    }\n  } else {\n    // Without feature flag, we will cast the `error` variable which was implicitly the old\n    // behavior of the non-feature flagged code.\n    if (!isExpectedError(error as Error)) {\n      report(errorContext(formatError(error as Error), context))\n    }\n  }\n}\n\n// Report context info to Sentry.\nasync function report(context: PlatformReportBrowserErrorInput) {\n  if (!reportable()) return\n\n  const url = document.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-errors-url\"]')?.content\n  if (!url) return\n\n  if (isExtensionError(context.error.stacktrace)) {\n    extensionErrors = true\n    return\n  }\n\n  errorsReported++\n\n  try {\n    await fetch(url, {method: 'post', body: JSON.stringify(context)})\n  } catch {\n    // Error reporting failed so do nothing.\n  }\n}\n\nfunction formatError(error: Error): PlatformJavascriptError {\n  return {\n    type: error.name,\n    value: error.message,\n    stacktrace: stacktrace(error),\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    catalogService: (error as any)['catalogService'],\n  }\n}\n\nfunction errorContext(error: PlatformJavascriptError, context: ErrorContext = {}): PlatformReportBrowserErrorInput {\n  return Object.assign(\n    {\n      error,\n      sanitizedUrl: requestUri() || window.location.href,\n      readyState: document.readyState,\n      referrer: getSoftNavReferrer(),\n      timeSinceLoad: Math.round(Date.now() - loadTime),\n      user: pageUser() || undefined,\n      bundler,\n      ui: Boolean(document.querySelector('meta[name=\"ui\"]')),\n    },\n    context,\n  )\n}\n\nexport function stacktrace(error: Error): PlatformStackframe[] {\n  return parse(error.stack || '').map(frame => ({\n    filename: frame.file || '',\n    function: String(frame.methodName),\n    lineno: (frame.lineNumber || 0).toString(),\n    colno: (frame.column || 0).toString(),\n  }))\n}\n\nconst extensions = /(chrome|moz|safari)-extension:\\/\\//\n\n// Does this stack trace contain frames from browser extensions?\nfunction isExtensionError(stack: PlatformStackframe[]): boolean {\n  return stack.some(frame => extensions.test(frame.filename) || extensions.test(frame.function))\n}\n\nexport function pageUser() {\n  const login = document.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n  if (login) return login\n\n  const clientId = getOrCreateClientId()\n  return `anonymous-${clientId}`\n}\n\nlet unloaded = false\nssrSafeWindow?.addEventListener('pageshow', () => (unloaded = false))\nssrSafeWindow?.addEventListener('pagehide', () => (unloaded = true))\n\nfunction reportable() {\n  return !unloaded && !extensionErrors && errorsReported < 10 && isSupported()\n}\n\nif (typeof BroadcastChannel === 'function') {\n  const sharedWorkerErrorChannel = new BroadcastChannel('shared-worker-error')\n  sharedWorkerErrorChannel.addEventListener('message', event => {\n    // SharedWorker will emit a formatted error\n    reportError(event.data.error)\n  })\n}\n\nconst ignoredErrorMessages = [\n  'Object Not Found Matching Id', // from Microsoft Outlook SafeLink crawler\n  'Not implemented on this platform', // LastPass Safari extension\n  `provider because it's not your default extension`, // MetaMask extension\n]\n\n/**\n * We see a fair number of \"errors\" which are not actually Error objects. This function will return true if the\n * error is one of these known non-Error types and has content which we know can safely be ignored.\n * Most of these errors come from specific browsers or extensions which we can't control, so we just ignore them.\n * @param error An error that is not an Error object\n * @returns boolean\n */\nfunction isIgnoredNonError(error: unknown) {\n  if (!error || typeof error === 'boolean' || typeof error === 'number') {\n    // Rejected with a type that is not useful to report. Just ignore it.\n    return true\n  } else if (typeof error === 'string') {\n    // rejected with a string. See if it's a known error that we can ignore\n    if (ignoredErrorMessages.some(message => error.includes(message))) {\n      return true\n    }\n  } else if (\n    typeof error === 'object' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).message === 'string' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).code === 'number'\n  ) {\n    // We see an object like {\"message\":\"Not connected\",\"code\":4900} from some extension, likely MetaMask. Ignore these\n    return true\n  }\n\n  return false\n}\n","import {createContext, useContext} from 'react'\n\nconst BasePathContext = createContext<string>('')\n\nexport function BasePathProvider({basePath, children}: React.PropsWithChildren<{basePath?: string}>) {\n  return <BasePathContext.Provider value={basePath || ''}> {children} </BasePathContext.Provider>\n}\n\nexport function useBasePath() {\n  const context = useContext(BasePathContext)\n  if (context === undefined) {\n    throw new Error('useBasePath must be within BasePathProvider')\n  }\n  return context\n}\n\ntry{ BasePathContext.displayName ||= 'BasePathContext' } catch {}\ntry{ BasePathProvider.displayName ||= 'BasePathProvider' } catch {}","import {createContext, useContext} from 'react'\n\nconst ReadOnlyContext = createContext<boolean>(false)\n\nexport function ReadOnlyProvider({readOnly, children}: React.PropsWithChildren<{readOnly: boolean}>) {\n  return <ReadOnlyContext.Provider value={!!readOnly}> {children} </ReadOnlyContext.Provider>\n}\n\nexport function useReadOnly() {\n  const context = useContext(ReadOnlyContext)\n  if (context === undefined) {\n    throw new Error('useReadOnly must be within ReadOnlyProvider')\n  }\n  return context\n}\n\ntry{ ReadOnlyContext.displayName ||= 'ReadOnlyContext' } catch {}\ntry{ ReadOnlyProvider.displayName ||= 'ReadOnlyProvider' } catch {}","import {createContext, useContext} from 'react'\nimport type {Organization} from '../types'\n\nconst OrganizationContext = createContext<Organization | undefined>(undefined)\n\nexport function OrganizationProvider({organization, children}: React.PropsWithChildren<{organization: Organization}>) {\n  return <OrganizationContext.Provider value={organization}> {children} </OrganizationContext.Provider>\n}\n\nexport function useOrganization() {\n  const context = useContext(OrganizationContext)\n  if (context === undefined) {\n    throw new Error('useOrganization must be within OrganizationProvider')\n  }\n  return context\n}\n\ntry{ OrganizationContext.displayName ||= 'OrganizationContext' } catch {}\ntry{ OrganizationProvider.displayName ||= 'OrganizationProvider' } catch {}","import {createContext, type PropsWithChildren, useContext} from 'react'\n\nconst BaseAvatarUrlContext = createContext<string>('')\n\nexport function BaseAvatarUrlProvider({baseAvatarUrl, children}: PropsWithChildren<{baseAvatarUrl?: string}>) {\n  return <BaseAvatarUrlContext.Provider value={baseAvatarUrl || ''}> {children} </BaseAvatarUrlContext.Provider>\n}\n\nexport function useBaseAvatarUrl() {\n  const context = useContext(BaseAvatarUrlContext)\n  if (context === undefined) {\n    throw new Error('useBaseAvatarUrl must be within BaseAvatarUrlProvider')\n  }\n  return context\n}\n\ntry{ BaseAvatarUrlContext.displayName ||= 'BaseAvatarUrlContext' } catch {}\ntry{ BaseAvatarUrlProvider.displayName ||= 'BaseAvatarUrlProvider' } catch {}","import {useCallback, useMemo} from 'react'\nimport type {Group, GroupTree} from '../types'\nimport {useOrganization} from '../contexts/OrganizationContext'\n\nexport type UseGroupTreeResult = {\n  tree?: GroupTree\n  groups: Group[]\n  getGroup(id: number): Group | undefined\n  walkTree(id: number): GroupTree | undefined\n}\n\nexport const useGroupTree = (groups: Group[]): UseGroupTreeResult => {\n  const organization = useOrganization()\n  const groupTree: GroupTree | undefined = useMemo(() => {\n    if (groups.length === 0) {\n      return undefined\n    }\n    const root = groups[0] as Group\n    const tree: GroupTree = {\n      id: root.id,\n      total_count: root.total_count,\n      nodes: {\n        [organization.name]: {\n          id: root.id,\n          total_count: root.total_count,\n          repos: root.repos,\n        },\n      },\n    }\n\n    for (const {id, group_path, total_count, repos} of groups.slice(1)) {\n      if (group_path === null) {\n        // Skip repos not in a group\n        continue\n      }\n\n      const steps = group_path.split('/')\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      let currentTree = tree.nodes![organization.name] as GroupTree\n      for (const step of steps) {\n        if (!currentTree.nodes) {\n          currentTree.nodes = {\n            [step]: {\n              id,\n              total_count,\n              repos,\n            },\n          }\n        } else if (!currentTree.nodes[step]) {\n          currentTree.nodes[step] = {\n            id,\n            total_count,\n            repos,\n          }\n        }\n        currentTree = currentTree.nodes[step] as GroupTree\n      }\n    }\n\n    return tree\n  }, [groups, organization])\n\n  const getGroup = useCallback(\n    (id: number) => {\n      return groups?.find(group => group.id === id)\n    },\n    [groups],\n  )\n\n  const walkTree = useCallback(\n    (id: number) => {\n      if (!groupTree || !getGroup(id)) {\n        return undefined\n      }\n      function walk(subTree: GroupTree): GroupTree | undefined {\n        if (subTree.id === id) {\n          return subTree\n        }\n        if (subTree.nodes) {\n          for (const group_path in subTree.nodes) {\n            const trail = walk(subTree.nodes[group_path] as GroupTree)\n            if (trail) {\n              return trail\n            }\n          }\n        }\n        return undefined\n      }\n      return walk(groupTree)\n    },\n    [groupTree, getGroup],\n  )\n\n  return useMemo<UseGroupTreeResult>(\n    () => ({\n      tree: groupTree,\n      groups,\n      getGroup,\n      walkTree,\n    }),\n    [groupTree, groups, getGroup, walkTree],\n  )\n}\n","import {createContext, useContext} from 'react'\nimport {useGroupTree, type UseGroupTreeResult} from '../hooks/use-group-tree'\nimport type {Group} from '../types'\n\nconst defaultValue: UseGroupTreeResult = {\n  tree: undefined,\n  groups: [],\n  getGroup(_id: number) {\n    return undefined\n  },\n  walkTree(_id: number) {\n    return undefined\n  },\n}\n\nconst GroupTreeContext = createContext<UseGroupTreeResult>(defaultValue)\n\nexport function GroupTreeProvider({groups, children}: React.PropsWithChildren<{groups: Group[]}>) {\n  const value = useGroupTree(groups)\n  return <GroupTreeContext.Provider value={value}>{children}</GroupTreeContext.Provider>\n}\n\nexport function useGroupTreeContext() {\n  const context = useContext(GroupTreeContext)\n  if (context === undefined) {\n    throw new Error('useGroupTreeContext must be within GroupTreeProvider')\n  }\n  return context\n}\n\ntry{ GroupTreeContext.displayName ||= 'GroupTreeContext' } catch {}\ntry{ GroupTreeProvider.displayName ||= 'GroupTreeProvider' } catch {}","import {createContext, useContext} from 'react'\n\nconst MaxDepthContext = createContext<number>(6)\n\nexport function MaxDepthProvider({maxDepth, children}: React.PropsWithChildren<{maxDepth?: number}>) {\n  return <MaxDepthContext.Provider value={maxDepth || 6}>{children}</MaxDepthContext.Provider>\n}\n\nexport function useMaxDepth() {\n  const context = useContext(MaxDepthContext)\n  if (context === undefined) {\n    throw new Error('useMaxDepth must be within MaxDepthProvider')\n  }\n  return context\n}\n\ntry{ MaxDepthContext.displayName ||= 'MaxDepthContext' } catch {}\ntry{ MaxDepthProvider.displayName ||= 'MaxDepthProvider' } catch {}","import type React from 'react'\nimport {BasePathProvider} from './contexts/BasePathContext'\nimport type {AppPayload, RoutePayload} from './types'\nimport {useAppPayload} from '@github-ui/react-core/use-app-payload'\nimport {ReadOnlyProvider} from './contexts/ReadOnlyContext'\nimport {OrganizationProvider} from './contexts/OrganizationContext'\nimport {BaseAvatarUrlProvider} from './contexts/BaseAvatarUrlContext'\nimport {GroupTreeProvider} from './contexts/GroupTreeContext'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {MaxDepthProvider} from './contexts/MaxDepthContext'\n\n/**\n * The App component is used to render content which should be present on _all_ routes within this app\n */\nexport function App(props: {children?: React.ReactNode}) {\n  const {basePath, baseAvatarUrl, maxDepth, organization, readOnly} = useAppPayload<AppPayload>()\n  const {groups} = useRoutePayload<RoutePayload>()\n  return (\n    <ReadOnlyProvider readOnly={readOnly}>\n      <BasePathProvider basePath={basePath}>\n        <MaxDepthProvider maxDepth={maxDepth}>\n          <BaseAvatarUrlProvider baseAvatarUrl={baseAvatarUrl}>\n            <OrganizationProvider organization={organization}>\n              <GroupTreeProvider groups={groups}>{props.children}</GroupTreeProvider>\n            </OrganizationProvider>\n          </BaseAvatarUrlProvider>\n        </MaxDepthProvider>\n      </BasePathProvider>\n    </ReadOnlyProvider>\n  )\n}\n\ntry{ App.displayName ||= 'App' } catch {}","import {createContext, useContext, useMemo} from 'react'\n\nexport type RecursiveGroupContextProps = {\n  collapse?: boolean\n  hideGroupActions?: boolean\n  onRemoveGroup?: (id: number) => void\n}\n\nconst defaultValue: RecursiveGroupContextProps = {\n  collapse: undefined,\n  hideGroupActions: undefined,\n  onRemoveGroup: undefined,\n}\n\nconst RecursiveGroupContext = createContext<RecursiveGroupContextProps>(defaultValue)\n\nexport function RecursiveGroupProvider({\n  children,\n  collapse,\n  hideGroupActions,\n  onRemoveGroup,\n}: React.PropsWithChildren<RecursiveGroupContextProps>) {\n  const value = useMemo(\n    () => ({\n      collapse,\n      hideGroupActions,\n      onRemoveGroup,\n    }),\n    [collapse, hideGroupActions, onRemoveGroup],\n  )\n  return <RecursiveGroupContext.Provider value={value}>{children}</RecursiveGroupContext.Provider>\n}\n\nexport function useRecursiveGroupContext() {\n  const context = useContext(RecursiveGroupContext)\n  if (context === undefined) {\n    throw new Error('useRecursiveGroupContext must be within RecursiveGroupProvider')\n  }\n  return context\n}\n\ntry{ RecursiveGroupContext.displayName ||= 'RecursiveGroupContext' } catch {}\ntry{ RecursiveGroupProvider.displayName ||= 'RecursiveGroupProvider' } catch {}","import {Button, Dialog} from '@primer/react'\n\nexport function DangerConfirmationDialog({\n  isOpen,\n  title,\n  text,\n  buttonText,\n  onDismiss,\n  onConfirm,\n}: {\n  isOpen: boolean\n  title: string\n  text: string\n  buttonText: string\n  onDismiss: () => void\n  onConfirm: () => void\n}) {\n  return (\n    <Dialog isOpen={isOpen} onDismiss={onDismiss}>\n      <Dialog.Header>{title}</Dialog.Header>\n      <div className=\"p-3\">\n        <span>{text}</span>\n        <div className=\"d-flex flex-justify-center mt-3\">\n          <Button type=\"button\" onClick={onDismiss}>\n            Cancel\n          </Button>\n          <Button type=\"button\" variant=\"danger\" onClick={onConfirm} className=\"ml-2\">\n            {buttonText}\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  )\n}\n\ntry{ DangerConfirmationDialog.displayName ||= 'DangerConfirmationDialog' } catch {}","import {type PropsWithChildren, useCallback, useState} from 'react'\nimport {ActionList, IconButton} from '@primer/react'\nimport {\n  ChevronDownIcon,\n  ChevronRightIcon,\n  FileDirectoryFillIcon,\n  FileDirectoryOpenFillIcon,\n  PencilIcon,\n  PlusIcon,\n  TrashIcon,\n} from '@primer/octicons-react'\nimport {ListItemActionBar} from '@github-ui/list-view/ListItemActionBar'\nimport {ListItemDescription} from '@github-ui/list-view/ListItemDescription'\nimport {ListItemLeadingContent} from '@github-ui/list-view/ListItemLeadingContent'\nimport {ListItemLeadingVisual} from '@github-ui/list-view/ListItemLeadingVisual'\nimport {ListItemMainContent} from '@github-ui/list-view/ListItemMainContent'\nimport {ListItemTitle} from '@github-ui/list-view/ListItemTitle'\nimport {ListItem} from '@github-ui/list-view/ListItem'\nimport {Link} from '@github-ui/react-core/link'\nimport {useBasePath} from '../contexts/BasePathContext'\nimport {useRecursiveGroupContext} from '../contexts/RecursiveGroupContext'\nimport {DangerConfirmationDialog} from './DangerConfirmationDialog'\n\nexport function TreeListItem({\n  id,\n  group_path,\n  depth,\n  total_count,\n  children,\n}: PropsWithChildren<{\n  id: number\n  group_path: string\n  depth: number\n  total_count: number\n}>) {\n  const {collapse, hideGroupActions, onRemoveGroup} = useRecursiveGroupContext()\n  const [collapsed, setCollapsed] = useState<boolean>(collapse ?? depth !== 0)\n  return (\n    <>\n      <ListItem\n        key={id}\n        sx={{\n          paddingLeft: 2,\n          borderLeft: '1px solid var(--borderColor-default)',\n          borderRight: '1px solid var(--borderColor-default)',\n          '&:last-child': {\n            borderBottom: '1px solid var(--borderColor-default)',\n          },\n        }}\n        title={<ListItemTitle value={group_path} />}\n        secondaryActions={!hideGroupActions ? <SecondaryActions id={id} onRemoveGroup={onRemoveGroup} /> : undefined}\n      >\n        <ListItemLeadingContent\n          sx={{\n            paddingLeft: `calc(var(--base-size-16) * ${depth})`,\n          }}\n        >\n          {/* eslint-disable-next-line primer-react/a11y-remove-disable-tooltip */}\n          <IconButton\n            onClick={() => setCollapsed(!collapsed)}\n            icon={collapsed ? ChevronRightIcon : ChevronDownIcon}\n            className=\"flex-self-center\"\n            aria-label={`${collapsed ? 'expand' : 'collapse'} subgroups`}\n            variant=\"invisible\"\n            unsafeDisableTooltip={true}\n          />\n          <ListItemLeadingVisual\n            color=\"var(--treeViewItem-leadingVisual-iconColor-rest, var(--color-icon-directory))\"\n            icon={collapsed ? FileDirectoryFillIcon : FileDirectoryOpenFillIcon}\n          />\n        </ListItemLeadingContent>\n        <ListItemMainContent>\n          <ListItemDescription>{total_count} repositories</ListItemDescription>\n        </ListItemMainContent>\n      </ListItem>\n      {!collapsed ? (\n        <li>\n          <ul className=\"list-style-none\">{children}</ul>\n        </li>\n      ) : null}\n    </>\n  )\n}\n\ntype SecondaryActionsProps = {\n  id: number\n  onRemoveGroup?: (id: number) => void\n}\n\nfunction SecondaryActions({id, onRemoveGroup}: SecondaryActionsProps) {\n  const basePath = useBasePath()\n  const [isDangerDialogOpen, setIsDangerDialogOpen] = useState(false)\n\n  const showDeleteDialog = useCallback(() => {\n    setIsDangerDialogOpen(true)\n  }, [setIsDangerDialogOpen])\n\n  const hideDeleteDialog = useCallback(() => {\n    setIsDangerDialogOpen(false)\n  }, [setIsDangerDialogOpen])\n\n  const removeGroup = useCallback(() => {\n    onRemoveGroup?.(id)\n    hideDeleteDialog()\n  }, [id, onRemoveGroup, hideDeleteDialog])\n\n  return (\n    <>\n      <ListItemActionBar\n        label=\"group actions\"\n        staticMenuActions={[\n          {\n            key: 'new-sub-group',\n            render: () => (\n              <ActionList.LinkItem as={Link} to={`./new?parentId=${id}`}>\n                <ActionList.LeadingVisual>\n                  <PlusIcon />\n                </ActionList.LeadingVisual>\n                New sub-group\n              </ActionList.LinkItem>\n            ),\n          },\n          {\n            key: 'edit-group',\n            render: () => (\n              <ActionList.LinkItem as={Link} to={`${basePath}/${id ?? 'new?root=true'}`}>\n                <ActionList.LeadingVisual>\n                  <PencilIcon />\n                </ActionList.LeadingVisual>\n                Edit group\n              </ActionList.LinkItem>\n            ),\n          },\n          {\n            key: 'delete-group',\n            render: () => (\n              <ActionList.Item variant=\"danger\" onSelect={showDeleteDialog}>\n                <ActionList.LeadingVisual>\n                  <TrashIcon />\n                </ActionList.LeadingVisual>\n                Delete group\n              </ActionList.Item>\n            ),\n          },\n        ]}\n      />\n      <DangerConfirmationDialog\n        isOpen={isDangerDialogOpen}\n        title=\"Delete group?\"\n        text=\"Are you sure you want to delete this group? This action cannot be undone.\"\n        buttonText=\"Delete\"\n        onDismiss={hideDeleteDialog}\n        onConfirm={removeGroup}\n      />\n    </>\n  )\n}\n\ntry{ TreeListItem.displayName ||= 'TreeListItem' } catch {}\ntry{ SecondaryActions.displayName ||= 'SecondaryActions' } catch {}","import {ActionList, IconButton} from '@primer/react'\nimport {RepoIcon, XIcon} from '@primer/octicons-react'\nimport {Link} from '@github-ui/react-core/link'\nimport {TreeListItem} from './TreeListItem'\nimport type {GroupTree} from '../types'\nimport {ListItemActionBar} from '@github-ui/list-view/ListItemActionBar'\nimport {ListItemLeadingContent} from '@github-ui/list-view/ListItemLeadingContent'\nimport {ListItemLeadingVisual} from '@github-ui/list-view/ListItemLeadingVisual'\nimport {ListItemTitle} from '@github-ui/list-view/ListItemTitle'\nimport {ListItem} from '@github-ui/list-view/ListItem'\nimport {repositoryPath} from '@github-ui/paths'\nimport {RecursiveGroupProvider, type RecursiveGroupContextProps} from '../contexts/RecursiveGroupContext'\nimport {useMaxDepth} from '../contexts/MaxDepthContext'\nimport {useOrganization} from '../contexts/OrganizationContext'\n\ntype InnerRecursiveGroupProps = {\n  tree: GroupTree\n  depth?: number\n  showTopLevelRepos?: boolean\n  onRemoveRepository?: (id: number) => void\n}\n\ntype RecursiveGroupProps = RecursiveGroupContextProps & InnerRecursiveGroupProps\n\nexport function RecursiveGroup({\n  tree,\n  depth = 0,\n  collapse,\n  hideGroupActions = false,\n  showTopLevelRepos = false,\n  onRemoveRepository,\n  onRemoveGroup,\n}: RecursiveGroupProps) {\n  return (\n    <RecursiveGroupProvider collapse={collapse} hideGroupActions={hideGroupActions} onRemoveGroup={onRemoveGroup}>\n      <InnerRecursiveGroup\n        tree={tree}\n        depth={depth}\n        showTopLevelRepos={showTopLevelRepos}\n        onRemoveRepository={onRemoveRepository}\n      />\n    </RecursiveGroupProvider>\n  )\n}\n\nexport function InnerRecursiveGroup({\n  tree,\n  depth = 0,\n  showTopLevelRepos = false,\n  onRemoveRepository,\n}: InnerRecursiveGroupProps) {\n  const organization = useOrganization()\n  const maxDepth = useMaxDepth()\n  if (depth >= maxDepth) {\n    throw new Error(`Group rendered at depth ${depth}, max depth is ${maxDepth}`)\n  }\n  if (!tree) {\n    return null\n  }\n  const nodes = tree.nodes || []\n  if (nodes.length === 0 && tree.repos?.length === 0) {\n    return null\n  }\n\n  const keys = Object.keys(nodes)\n\n  return (\n    <>\n      {keys.map(key => {\n        //@ts-expect-error ts doesn't like hashes :shrug:\n        const node = nodes[key]\n        return (\n          <TreeListItem key={key} id={node.id} group_path={key} depth={depth} total_count={node.total_count}>\n            <InnerRecursiveGroup tree={node} depth={depth + 1} />\n          </TreeListItem>\n        )\n      })}\n      {showTopLevelRepos &&\n        tree.repos?.map(repo => (\n          <ListItem\n            key={repo.id}\n            title={\n              <ListItemTitle\n                value={repo.name}\n                href=\"#\"\n                linkProps={{\n                  as: Link,\n                  to: repositoryPath({owner: organization.name, repo: repo.name}),\n                }}\n              />\n            }\n            sx={{\n              borderLeft: '1px solid var(--borderColor-default)',\n              borderRight: '1px solid var(--borderColor-default)',\n              '&:last-child': {\n                borderBottom: '1px solid var(--borderColor-default)',\n              },\n            }}\n            secondaryActions={\n              onRemoveRepository ? (\n                <ListItemActionBar\n                  actions={[\n                    {\n                      key: 'remove-repository',\n                      render: isOverflowMenu =>\n                        isOverflowMenu ? (\n                          <ActionList.Item onSelect={() => onRemoveRepository(repo.id)}>\n                            <ActionList.LeadingVisual>\n                              <XIcon />\n                            </ActionList.LeadingVisual>\n                            Remove {repo.name}\n                          </ActionList.Item>\n                        ) : (\n                          // eslint-disable-next-line primer-react/a11y-remove-disable-tooltip\n                          <IconButton\n                            variant=\"invisible\"\n                            icon={XIcon}\n                            aria-label={`Remove ${repo.name}`}\n                            onClick={() => onRemoveRepository(repo.id)}\n                            unsafeDisableTooltip={true}\n                          />\n                        ),\n                    },\n                  ]}\n                />\n              ) : undefined\n            }\n          >\n            <ListItemLeadingContent\n              sx={{\n                pl: `calc(48px + var(--base-size-16) * ${depth})`,\n              }}\n            >\n              <ListItemLeadingVisual\n                color=\"var(--treeViewItem-leadingVisual-iconColor-rest, var(--color-icon-directory))\"\n                icon={RepoIcon}\n              />\n            </ListItemLeadingContent>\n          </ListItem>\n        ))}\n    </>\n  )\n}\n\ntry{ RecursiveGroup.displayName ||= 'RecursiveGroup' } catch {}\ntry{ InnerRecursiveGroup.displayName ||= 'InnerRecursiveGroup' } catch {}","import type {PropsWithChildren} from 'react'\nimport {Breadcrumbs, Heading, Pagehead} from '@primer/react'\nimport {Link} from '@github-ui/react-core/link'\nimport {useBasePath} from '../contexts/BasePathContext'\nimport {useReadOnly} from '../contexts/ReadOnlyContext'\nimport {useOrganization} from '../contexts/OrganizationContext'\nimport {PAGE} from '../types'\n\nexport type LayoutProps = PropsWithChildren<{\n  page: PAGE\n  name?: string\n}>\n\nfunction GroupBreadcrumbs({page, name}: Pick<LayoutProps, 'page' | 'name'>) {\n  const basePath = useBasePath()\n  const organization = useOrganization()\n  const displayName = page === PAGE.New ? 'New group' : name || organization.name\n  return (\n    <Breadcrumbs>\n      <Breadcrumbs.Item as={Link} to={basePath} selected={page === PAGE.List}>\n        Home\n      </Breadcrumbs.Item>\n      {page !== PAGE.List ? (\n        <>\n          <Breadcrumbs.Item\n            as={Link}\n            to={page === PAGE.New ? '' : `${basePath}/${name}`}\n            selected={[PAGE.New, PAGE.Show].includes(page)}\n          >\n            {displayName}\n          </Breadcrumbs.Item>\n          {page === PAGE.Review ? (\n            <Breadcrumbs.Item href={`${basePath}/${name}/review`} selected={page === PAGE.Review}>\n              Review changes\n            </Breadcrumbs.Item>\n          ) : null}\n        </>\n      ) : null}\n    </Breadcrumbs>\n  )\n}\n\nfunction Header({page}: Pick<LayoutProps, 'page'>) {\n  const readOnly = useReadOnly()\n\n  const TITLES: Record<PAGE, string> = {\n    [PAGE.List]: 'Groups',\n    [PAGE.New]: 'New group',\n    [PAGE.Show]: `${readOnly ? 'View' : 'Edit'} group`,\n    [PAGE.Review]: 'Review changes',\n  }\n  return (\n    <Pagehead data-hpc sx={{pb: 2}}>\n      <div>\n        <Heading as=\"h2\" className=\"h3\">\n          {TITLES[page]}\n        </Heading>\n        {page === PAGE.List ? (\n          <span className=\"color-fg-muted pt-3\">\n            Manage access and settings for groups of repositories in your organization.\n          </span>\n        ) : null}\n      </div>\n    </Pagehead>\n  )\n}\n\nexport function Layout({page, name, children}: LayoutProps) {\n  return (\n    <>\n      <GroupBreadcrumbs page={page} name={name} />\n      <Header page={page} />\n      {children}\n    </>\n  )\n}\n\ntry{ GroupBreadcrumbs.displayName ||= 'GroupBreadcrumbs' } catch {}\ntry{ Header.displayName ||= 'Header' } catch {}\ntry{ Layout.displayName ||= 'Layout' } catch {}","export type Group = {\n  id: number\n  group_path: string\n  direct_count: number\n  total_count: number\n  repos: Repository[]\n  directSettings?: Settings\n  inheritedSettings?: Settings\n  orchestration?: SettingsOrchestration\n}\n\ntype Settings = {\n  forkDestinations: Record<ForkDestination, boolean>\n  accessPermissions: {\n    teams: Team[]\n    allowAdditionalCollaborators: boolean\n  }\n}\n\nexport type Repository = {\n  id: number\n  name: string\n}\n\nexport type SettingsOrchestration = {\n  state: string\n  id: number\n  succeeded: number\n  failed: number\n  total: number\n  channel?: string\n  completed?: Date\n}\n\nexport type Team = {\n  id: number\n  role: string\n  name: string\n}\n\nexport type GroupTree = {\n  id: number\n  nodes?: {\n    [key: string]: GroupTree\n  }\n  total_count: number\n  repos?: Repository[]\n}\n\nexport type Organization = {\n  name: string\n}\n\nexport type AppPayload = {\n  maxDepth: number\n  isStafftools: boolean\n  organization: Organization\n  readOnly: boolean\n  basePath: string\n  baseAvatarUrl: string\n}\n\nexport interface RoutePayload {\n  groups: Group[]\n}\nexport interface FormPayload {\n  isRoot: boolean\n}\nexport interface ListPayload extends RoutePayload {}\n\nexport interface NewPayload extends RoutePayload, FormPayload {\n  parentGroup: Group\n}\n\nexport interface ShowPayload extends RoutePayload, FormPayload {\n  group: Group\n}\n\nexport interface ReviewPayload extends RoutePayload {}\n\nexport type FieldComponentProps<ValueType = unknown> = {\n  initialValue?: ValueType\n  inherited?: boolean\n}\n\nexport const enum ForkDestination {\n  EXTERNAL = 'EXTERNAL',\n  INTERNAL = 'INTERNAL',\n  USERS = 'USERS',\n}\n\nexport type AccessPermission = {\n  id: number\n  name: string\n  role: string\n}\n\nexport type FormField<ValueType = unknown, ValidationError = unknown> = {\n  value: ValueType\n  validationError?: ValidationError\n  touched: boolean\n  name: string\n  validate(): Promise<ValidationError | undefined>\n  update(newValue: ValueType): Promise<void>\n  reset(): void\n  isValid(): boolean\n  setFieldError(newValidationError: ValidationError): void\n}\n\nexport enum PAGE {\n  'List',\n  'New',\n  'Show',\n  'Review',\n}\n","import {Button, Flash} from '@primer/react'\nimport {Blankslate} from '@primer/react/drafts'\nimport {Link} from '@github-ui/react-core/link'\nimport {ListView} from '@github-ui/list-view'\nimport {ListViewMetadata} from '@github-ui/list-view/ListViewMetadata'\nimport {RecursiveGroup} from '../components/RecursiveGroup'\nimport {Layout} from '../components/Layout'\nimport {useGroupTreeContext} from '../contexts/GroupTreeContext'\nimport {PAGE} from '../types'\nimport {useCallback, useState} from 'react'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {useBasePath} from '../contexts/BasePathContext'\nimport {useNavigate, useSearchParams} from '@github-ui/use-navigate'\n\nexport function List() {\n  const basePath = useBasePath()\n  const groupTree = useGroupTreeContext()\n  const [searchParams] = useSearchParams()\n  const [errorMessage, setErrorMessage] = useState('')\n  const navigate = useNavigate()\n\n  const tree = groupTree?.tree\n  const groups = groupTree?.groups || []\n\n  const onRemoveGroup = useCallback(\n    async (id: number) => {\n      setErrorMessage('')\n      const response = await verifiedFetchJSON(`${basePath}/${id}`, {\n        method: 'DELETE',\n      })\n      if (response.ok) {\n        searchParams.set('removed', `${id}`)\n        navigate(`${basePath}?${searchParams.toString()}`)\n      } else {\n        const error = await response.json()\n        setErrorMessage(error.message || 'Failed to remove group')\n      }\n    },\n    [basePath, searchParams, navigate],\n  )\n\n  return (\n    <Layout page={PAGE.List}>\n      <div className=\"d-flex flex-column gap-3\">\n        {errorMessage ? <Flash variant=\"danger\">{errorMessage}</Flash> : null}\n        <ListView\n          title=\"List of groups of repositories for this organization\"\n          variant=\"default\"\n          pluralUnits=\"groups\"\n          singularUnits=\"group\"\n          totalCount={groups.length}\n          metadata={\n            <ListViewMetadata\n              title={\n                <span className=\"font-bold\">\n                  {groups.length} {groups.length === 1 ? 'group' : 'groups'}\n                </span>\n              }\n            >\n              <Button as={Link} to=\"./new\">\n                New group\n              </Button>\n            </ListViewMetadata>\n          }\n        >\n          {tree ? (\n            <RecursiveGroup tree={tree} onRemoveGroup={onRemoveGroup} />\n          ) : (\n            <li>\n              <Blankslate>Your groups are in another castle</Blankslate>\n            </li>\n          )}\n        </ListView>\n      </div>\n    </Layout>\n  )\n}\n\ntry{ List.displayName ||= 'List' } catch {}","import {createContext, useCallback, useContext, useMemo, useState, type PropsWithChildren} from 'react'\nimport type {FormField} from '../types'\n\ntype UpdateProps<ValueType = unknown, ValidationError = unknown> = Pick<\n  FormField<ValueType, ValidationError>,\n  'name' | 'value' | 'validationError' | 'touched'\n>\n\ntype Update = <ValueType = unknown, ValidationError = unknown>(props: UpdateProps<ValueType, ValidationError>) => void\n\nconst defaultValues = {\n  state: {},\n  isTouched: false,\n  update(_props: UpdateProps) {\n    return\n  },\n  getBody() {\n    return {}\n  },\n}\n\nconst GroupFormContext = createContext(defaultValues)\n\nexport function GroupFormProvider({children}: PropsWithChildren) {\n  const [state, setState] = useState({})\n  const update: Update = useCallback(\n    ({name, value, touched, validationError}) => {\n      setState(currentState => ({\n        ...currentState,\n        [name]: {\n          value,\n          touched,\n          validationError,\n        },\n      }))\n    },\n    [setState],\n  )\n  const getBody = useCallback(() => {\n    const body = {}\n    for (const key in state) {\n      // @ts-expect-error mapping loosely typed objects, should be safe\n      body[key] = state[key].value\n    }\n    return body\n  }, [state])\n\n  const isTouched = useMemo(() => {\n    for (const key in state) {\n      //@ts-expect-error mapping loosely typed objects, should be safe\n      if (state[key].touched) {\n        return true\n      }\n    }\n    return false\n  }, [state])\n\n  const value = useMemo(\n    () => ({\n      state,\n      isTouched,\n      update,\n      getBody,\n    }),\n    [state, isTouched, update, getBody],\n  )\n\n  return <GroupFormContext.Provider value={value}>{children}</GroupFormContext.Provider>\n}\n\nexport function useGroupFormContext() {\n  const context = useContext(GroupFormContext)\n  if (context === undefined) {\n    throw new Error('useGroupFormContext must be within GroupFormProvider')\n  }\n  return context\n}\n\ntry{ GroupFormContext.displayName ||= 'GroupFormContext' } catch {}\ntry{ GroupFormProvider.displayName ||= 'GroupFormProvider' } catch {}","import {useCallback, useState, type RefObject, useEffect} from 'react'\nimport {useGroupFormContext} from '../contexts/GroupFormContext'\nimport type {FormField} from '../types'\n\ntype Validator<ValueType, ValidationError> = (\n  value: ValueType,\n) => ValidationError | undefined | Promise<ValidationError> | Promise<undefined>\n\nexport function useFormField<ValueType, ValidationError>(\n  name: string,\n  initialValue: ValueType,\n  options?: {\n    validator?: Validator<ValueType, ValidationError>\n    errorRef?: RefObject<HTMLElement>\n    fieldRef?: RefObject<HTMLElement>\n  },\n): FormField<ValueType, ValidationError> {\n  const [value, setValue] = useState<ValueType>(initialValue)\n  const [validationError, setValidationError] = useState<ValidationError>()\n  const [touched, setTouched] = useState<boolean>(false)\n  const form = useGroupFormContext()\n\n  useEffect(() => {\n    setValidationError(undefined)\n    setTouched(false)\n  }, [initialValue])\n\n  const update = useCallback(\n    async (newValue: ValueType) => {\n      setValue(newValue)\n      if (options?.validator) {\n        setValidationError(await options.validator(newValue))\n      }\n      setTouched(true)\n    },\n    [options, setValue, setValidationError, setTouched],\n  )\n\n  const validate = useCallback(async () => {\n    const newValidationError = await options?.validator?.(value)\n    setValidationError(newValidationError)\n\n    return newValidationError\n  }, [options, value, setValidationError])\n\n  const reset = useCallback(() => {\n    setValue(initialValue)\n    setValidationError(undefined)\n    setTouched(false)\n  }, [initialValue, setValue, setValidationError, setTouched])\n\n  const isValid = useCallback(() => {\n    return !validationError\n  }, [validationError])\n\n  const setFieldError = useCallback(\n    (newValidationError: ValidationError) => {\n      setValidationError(newValidationError)\n    },\n    [setValidationError],\n  )\n\n  useEffect(() => {\n    form.update({\n      name,\n      value,\n      validationError,\n      touched,\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [form.update, name, value, validationError, touched, reset])\n\n  return {\n    value,\n    validationError,\n    touched,\n    name,\n    validate,\n    update,\n    reset,\n    isValid,\n    setFieldError,\n  }\n}\n","import {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {Button, FormControl, Octicon, SelectPanel, TextInput} from '@primer/react'\nimport type {ItemProps} from '@primer/react/lib-esm/deprecated/ActionList'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {useFormField} from '../../hooks/use-form-field'\nimport type {FieldComponentProps, Group} from '../../types'\nimport {useBasePath} from '../../contexts/BasePathContext'\nimport {useReadOnly} from '../../contexts/ReadOnlyContext'\nimport {FileDirectoryFillIcon, TriangleDownIcon} from '@primer/octicons-react'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {useOrganization} from '../../contexts/OrganizationContext'\n\ntype GroupNameFieldProps = FieldComponentProps<string> & {\n  isRoot?: boolean\n  readOnlyOverride?: boolean\n}\n\nexport function GroupNameField({initialValue = '', readOnlyOverride = false, isRoot}: GroupNameFieldProps) {\n  const {parentGroup} = useRoutePayload<{parentGroup?: Group}>()\n  const organization = useOrganization()\n  const globalReadOnly = useReadOnly()\n  const [groups, setGroups] = useState<Group[]>([])\n  const fieldRef = useRef<HTMLInputElement>(null)\n  const [isParentPathOpen, setIsParentPathOpen] = useState(false)\n  const [parentPathFilter, setParentPathFilter] = useState<string>('')\n  const readOnly = globalReadOnly || readOnlyOverride\n\n  const initialParentValue = parentGroup?.group_path ? `${parentGroup.group_path}/` : initialValue\n\n  const field = useFormField<string, string>('group_path', initialParentValue, {\n    validator: (newValue: string) => {\n      if (newValue.includes('/')) {\n        return 'Group names cannot includes delimitters'\n      }\n      return\n    },\n    fieldRef,\n  })\n  const basePath = useBasePath()\n\n  const parentGroupPath = field.value.split('/').slice(0, -1).join('/') || ''\n  const groupName = field.value.split('/').pop() || ''\n\n  useEffect(() => {\n    const fetcher = async () => {\n      if (readOnly) {\n        return\n      }\n      const response = await verifiedFetchJSON(basePath)\n      if (response.ok) {\n        const {payload} = await response.json()\n        setGroups(payload.groups)\n      }\n    }\n    fetcher()\n  }, [readOnly, basePath, isRoot, setGroups])\n\n  const updateGroupPath = useCallback(\n    ({\n      newParentGroupPath = parentGroupPath,\n      newGroupName = groupName,\n    }: {\n      newParentGroupPath?: string\n      newGroupName?: string\n    }) => {\n      const path = newParentGroupPath === '' ? newGroupName : `${newParentGroupPath}/${newGroupName}`\n      if (path !== field.value) {\n        field.update(path)\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [field.update, parentGroupPath, groupName],\n  )\n\n  const onOpen = useCallback(() => setIsParentPathOpen(!isParentPathOpen), [isParentPathOpen, setIsParentPathOpen])\n  const onSelect = useCallback(\n    (item?: ItemProps) => {\n      if (!item) {\n        return\n      }\n      updateGroupPath({newParentGroupPath: item.text})\n    },\n    [updateGroupPath],\n  )\n\n  const items = useMemo<ItemProps[]>(\n    () =>\n      groups.map(group => ({\n        leadingVisual: () => <Octicon icon={FileDirectoryFillIcon} />,\n        text: group.group_path || organization.name,\n        id: group.id,\n        selectionVariant: 'single',\n      })),\n    [groups, organization.name],\n  )\n  const filteredItems = useMemo(\n    () => items.filter(item => item.text?.toLowerCase()?.includes(parentPathFilter.toLowerCase())),\n    [items, parentPathFilter],\n  )\n\n  return (\n    <div className=\"d-flex flex-row flex-start gap-2 flex-items-end\">\n      {!isRoot && groups.length > 0 ? (\n        <>\n          <FormControl id={`${field.name}-parent`}>\n            <FormControl.Label>Parent</FormControl.Label>\n            <SelectPanel\n              renderAnchor={({children, ...anchorProps}) => (\n                <Button leadingVisual={FileDirectoryFillIcon} trailingVisual={TriangleDownIcon} {...anchorProps}>\n                  {children || organization.name}\n                </Button>\n              )}\n              placeholderText=\"Search organizations\"\n              items={filteredItems}\n              selected={items.find(item => item.text === parentGroupPath)}\n              onSelectedChange={onSelect}\n              onOpenChange={onOpen}\n              onFilterChange={setParentPathFilter}\n              open={isParentPathOpen}\n              overlayProps={{width: 'small', height: filteredItems.length > 6 ? 'small' : 'auto'}}\n            />\n          </FormControl>\n          <span className=\"text-bold mb-1\" style={{fontSize: 20}}>\n            /\n          </span>\n        </>\n      ) : null}\n      <FormControl required id={`${field.name}-name`}>\n        <FormControl.Label>Group name</FormControl.Label>\n        <TextInput\n          readOnly={isRoot}\n          ref={fieldRef}\n          value={!isRoot ? groupName : organization.name}\n          onChange={e => {\n            const newGroupName = e.target.value.replaceAll('/', '')\n            updateGroupPath({newGroupName})\n          }}\n        />\n        {isRoot ? <FormControl.Caption>This group cannot be renamed</FormControl.Caption> : null}\n      </FormControl>\n    </div>\n  )\n}\n\ntry{ GroupNameField.displayName ||= 'GroupNameField' } catch {}","import {Checkbox, FormControl, Label} from '@primer/react'\nimport {useFormField} from '../hooks/use-form-field'\nimport type {FieldComponentProps} from '../types'\n\ntype CheckboxFieldProps = FieldComponentProps<boolean> & {\n  name: string\n  label: string\n  caption?: string\n  inherited?: boolean\n}\n\nexport function CheckboxField({name, label, caption, initialValue = false, inherited = false}: CheckboxFieldProps) {\n  const field = useFormField(name, initialValue)\n  return (\n    <FormControl id={field.name} disabled={inherited}>\n      <FormControl.Label sx={{display: 'flex', alignItems: 'center', flexDirection: 'row', gap: 2}}>\n        <span>{label}</span>\n        {inherited ? <Label>Inherited</Label> : null}\n      </FormControl.Label>\n      {caption ? <FormControl.Caption>{caption}</FormControl.Caption> : null}\n      <Checkbox checked={field.value} onChange={e => (inherited ? null : field.update(e.target.checked))} />\n    </FormControl>\n  )\n}\n\ntry{ CheckboxField.displayName ||= 'CheckboxField' } catch {}","import {CheckboxField} from '../CheckboxField'\nimport type {FieldComponentProps} from '../../types'\n\nexport function ManageForkDestinationsField({initialValue = false}: FieldComponentProps<boolean>) {\n  return (\n    <CheckboxField\n      name=\"manageForkDestination\"\n      label=\"Manage fork destinations\"\n      caption=\"Choose where forks of repositiories in this group can be created\"\n      initialValue={initialValue}\n    />\n  )\n}\n\ntry{ ManageForkDestinationsField.displayName ||= 'ManageForkDestinationsField' } catch {}","import {useCallback} from 'react'\nimport {Checkbox, CheckboxGroup, FormControl} from '@primer/react'\nimport {type FieldComponentProps, ForkDestination} from '../../types'\nimport {useFormField} from '../../hooks/use-form-field'\n\nexport function ForkDestinationsField({initialValue = []}: FieldComponentProps<ForkDestination[]>) {\n  const field = useFormField('forkDestination', initialValue)\n  const toggleDestination = useCallback(\n    (destination: ForkDestination, checked: boolean) => {\n      const destinationIsChecked = field.value.includes(destination)\n      if (checked) {\n        if (!destinationIsChecked) {\n          field.update([...field.value, destination])\n        }\n      } else {\n        if (destinationIsChecked) {\n          field.update(field.value.filter(dest => dest !== destination))\n        }\n      }\n    },\n    [field],\n  )\n\n  return (\n    <CheckboxGroup>\n      <CheckboxGroup.Label>Fork destinations</CheckboxGroup.Label>\n      <FormControl>\n        <Checkbox\n          checked={field.value.includes(ForkDestination.EXTERNAL)}\n          onChange={e => toggleDestination(ForkDestination.EXTERNAL, e.target.checked)}\n        />\n        <FormControl.Label>This organization</FormControl.Label>\n        <FormControl.Caption>\n          Forks of repositories in this group can be created within this organization.\n        </FormControl.Caption>\n      </FormControl>\n      <FormControl>\n        <Checkbox\n          checked={field.value.includes(ForkDestination.INTERNAL)}\n          onChange={e => toggleDestination(ForkDestination.INTERNAL, e.target.checked)}\n        />\n        <FormControl.Label>Other enterprise organizations</FormControl.Label>\n        <FormControl.Caption>\n          Forks of repositories in this group can be created within other enterprise organizations.\n        </FormControl.Caption>\n      </FormControl>\n      <FormControl>\n        <Checkbox\n          checked={field.value.includes(ForkDestination.USERS)}\n          onChange={e => toggleDestination(ForkDestination.USERS, e.target.checked)}\n        />\n        <FormControl.Label>User accounts</FormControl.Label>\n        <FormControl.Caption>\n          Forks of repositories in this group can be created within user accounts.\n        </FormControl.Caption>\n      </FormControl>\n    </CheckboxGroup>\n  )\n}\n\ntry{ ForkDestinationsField.displayName ||= 'ForkDestinationsField' } catch {}","import {CheckboxField} from '../CheckboxField'\nimport type {FieldComponentProps} from '../../types'\n\nexport function ManageAccessPermissionsField({initialValue = false}: FieldComponentProps<boolean>) {\n  return (\n    <CheckboxField\n      name=\"manageAccessPermissions\"\n      label=\"Manage access permissions\"\n      caption=\"Manage collaborator and team access permissions for the repositories in this group.\"\n      initialValue={initialValue}\n    />\n  )\n}\n\ntry{ ManageAccessPermissionsField.displayName ||= 'ManageAccessPermissionsField' } catch {}","import {useCallback, useEffect, useRef, useState} from 'react'\nimport {ActionList, ActionMenu, Button, Heading, IconButton, Label} from '@primer/react'\nimport {Blankslate} from '@primer/react/experimental'\nimport {XIcon} from '@primer/octicons-react'\nimport type {FieldComponentProps, Team} from '../../types'\nimport {useFormField} from '../../hooks/use-form-field'\nimport {useBasePath} from '../../contexts/BasePathContext'\n\nimport {GitHubAvatar} from '@github-ui/github-avatar'\nimport {BypassDialog} from '@github-ui/bypass-actors/BypassDialog'\nimport {useBaseAvatarUrl} from '../../contexts/BaseAvatarUrlContext'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\n\nconst roles = ['read', 'triage', 'write', 'maintain', 'admin']\n\ntype AccessPermissionsFieldProps = FieldComponentProps<Team[]> & {\n  inheritedTeams?: Team[]\n}\n\nexport function AccessPermissionsField({\n  initialValue = [],\n  inheritedTeams = [],\n  inherited = false,\n}: AccessPermissionsFieldProps) {\n  const basePath = useBasePath()\n  const baseAvatarUrl = useBaseAvatarUrl()\n  const field = useFormField('accessPermissions', initialValue)\n  const [showDialog, setShowDialog] = useState(false)\n  const [initialSuggestions, setInitialSuggestions] = useState([])\n  const hasFetchedInitialSuggestions = useRef(false)\n\n  const updateTeam = useCallback(\n    ({id, name, role = 'read'}: {id: number; name: string; role: string}) => {\n      const teamIndex = field.value.findIndex(team => team.id === id)\n      if (teamIndex !== -1) {\n        field.update([\n          ...field.value.slice(0, teamIndex),\n          {\n            id,\n            name,\n            role,\n          },\n          ...field.value.slice(teamIndex + 1),\n        ])\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [field.update, field.value],\n  )\n\n  const addTeam = useCallback(\n    (actorId: number, actorType: string, name: string) => {\n      field.update([\n        ...field.value,\n        {\n          id: actorId,\n          name,\n          role: 'read',\n        },\n      ])\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [field.update, field.value],\n  )\n\n  const removeTeam = useCallback(\n    (id: number) => {\n      const teamIndex = field.value.findIndex(team => team.id === id)\n      if (teamIndex !== -1) {\n        field.update([...field.value.slice(0, teamIndex), ...field.value.slice(teamIndex + 1)])\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [field.update, field.value],\n  )\n\n  useEffect(() => {\n    if (!hasFetchedInitialSuggestions.current) {\n      hasFetchedInitialSuggestions.current = true\n      const fetcher = async () => {\n        const response = await verifiedFetchJSON(`${basePath}/suggestions/access_permissions`)\n        if (response.ok) {\n          const suggestions = await response.json()\n          setInitialSuggestions(suggestions)\n        }\n      }\n      fetcher()\n    }\n  }, [basePath, hasFetchedInitialSuggestions])\n\n  const teamCount = field.value.length + inheritedTeams.length\n\n  return (\n    <>\n      <div className=\"Box\">\n        <div className=\"Box-header py-2\">\n          <div className=\"Box-title d-flex flex-justify-between flex-items-center\">\n            <Heading as=\"h3\" className=\"f5\">\n              {teamCount} team{teamCount === 1 ? '' : 's'}\n            </Heading>\n            {!inherited ? <Button onClick={() => setShowDialog(true)}>Add people or teams</Button> : null}\n          </div>\n        </div>\n        {field.value.length + inheritedTeams.length > 0 ? (\n          <ul>\n            {inheritedTeams.map(team => (\n              <li key={team.id} className=\"Box-row d-flex flex-justify-between\">\n                <div className=\"d-flex flex-row flex-items-center gap-2\">\n                  <GitHubAvatar alt={team.name} src={`${baseAvatarUrl}/t/${team.id}`} size={32} />\n                  {team.name}\n                  <Label>Inherited</Label>\n                </div>\n                <div className=\"d-flex flex-row flex-items-center mr-2\">\n                  <Label className=\"mr-4 p-3\">{team.role}</Label>\n                </div>\n              </li>\n            ))}\n            {field.value.map(actor => (\n              <li key={actor.id} className=\"Box-row d-flex flex-justify-between\">\n                <div className=\"d-flex flex-row flex-items-center gap-2\">\n                  <GitHubAvatar alt={actor.name} src={`${baseAvatarUrl}/t/${actor.id}`} size={32} />\n                  {actor.name}\n                </div>\n                {!inherited ? (\n                  <div className=\"d-flex flex-row flex-items-center\">\n                    <ActionMenu>\n                      <ActionMenu.Button>\n                        <span className=\"fg-color-muted\">Options:</span> {actor.role}\n                      </ActionMenu.Button>\n                      <ActionMenu.Overlay width=\"auto\">\n                        <ActionList selectionVariant=\"single\">\n                          {roles.map(role => (\n                            <ActionList.Item\n                              key={role}\n                              selected={role === actor.role}\n                              onSelect={() =>\n                                updateTeam({\n                                  id: actor.id,\n                                  name: actor.name,\n                                  role,\n                                })\n                              }\n                            >\n                              {role}\n                            </ActionList.Item>\n                          ))}\n                        </ActionList>\n                      </ActionMenu.Overlay>\n                    </ActionMenu>\n                    {/* eslint-disable-next-line primer-react/a11y-remove-disable-tooltip */}\n                    <IconButton\n                      icon={XIcon}\n                      aria-label={`Stop managing ${actor.name}`}\n                      variant=\"invisible\"\n                      onClick={() => removeTeam(actor.id)}\n                      unsafeDisableTooltip={true}\n                    />\n                  </div>\n                ) : (\n                  <div className=\"d-flex flex-row flex-items-center mr-2\">\n                    <Label className=\"mr-4 p-3\">{actor.role}</Label>\n                  </div>\n                )}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <Blankslate>\n            <Blankslate.Heading as=\"h3\">No teams added</Blankslate.Heading>\n          </Blankslate>\n        )}\n      </div>\n      {showDialog && (\n        <BypassDialog\n          baseAvatarUrl={baseAvatarUrl}\n          // @ts-expect-error types aren't fully compat\n          enabledBypassActors={field.value}\n          initialSuggestions={initialSuggestions}\n          onClose={() => setShowDialog(false)}\n          // @ts-expect-error types aren't fully compat\n          addBypassActor={addTeam}\n          suggestionsUrl={`${basePath}/suggestions/access_permissions`}\n          addReviewerSubtitle={'Choose which roles and teams can bypass this ruleset'}\n        />\n      )}\n    </>\n  )\n}\n\ntry{ AccessPermissionsField.displayName ||= 'AccessPermissionsField' } catch {}","import {CheckboxField} from '../CheckboxField'\nimport type {FieldComponentProps} from '../../types'\n\nexport function AllowAdditionalCollaboratorsField({\n  initialValue = false,\n  inherited = false,\n}: FieldComponentProps<boolean>) {\n  return (\n    <div className=\"Box p-3\">\n      <CheckboxField\n        name=\"allowAdditionalCollaborators\"\n        label=\"Allow additional collaborators and teams\"\n        caption=\"Sub-groups and repositories can add additional people or teams as collaborators.\"\n        initialValue={initialValue}\n        inherited={inherited}\n      />\n    </div>\n  )\n}\n\ntry{ AllowAdditionalCollaboratorsField.displayName ||= 'AllowAdditionalCollaboratorsField' } catch {}","import {useCallback, useState} from 'react'\nimport {useAlive} from '@github-ui/use-alive'\nimport {Box, Heading, Octicon, RelativeTime, Spinner, Text} from '@primer/react'\nimport {CheckCircleFillIcon, PencilIcon} from '@primer/octicons-react'\nimport type {SettingsOrchestration} from '../types'\n\ntype LiveBannerProps = {\n  channel?: string\n  initialState?: SettingsOrchestration\n  isFormTouched?: boolean\n}\n\nexport function LiveBanner({channel = '', initialState = undefined, isFormTouched = false}: LiveBannerProps) {\n  const [status, setStatus] = useState<SettingsOrchestration | undefined>(initialState)\n\n  if (!status && !channel && !isFormTouched) {\n    return null\n  }\n\n  if (isFormTouched) {\n    return (\n      <div className=\"Box d-flex p-3 flex-items-center\">\n        <Octicon icon={PencilIcon} size={36} />\n        <div className=\"pl-2 d-flex flex-column\">\n          <Heading sx={{fontSize: 2}} as=\"h3\">\n            Unsaved changes\n          </Heading>\n          <span className=\"color-fg-muted\">This form has unsaved changes </span>\n        </div>\n      </div>\n    )\n  }\n\n  const finished = status?.state === 'succeeded' || status?.state === 'finished'\n  return (\n    <div className=\"Box d-flex p-3 flex-items-center\">\n      {channel && <AliveUpdater channel={channel} setStatus={setStatus} />}\n      {finished ? (\n        <Octicon icon={CheckCircleFillIcon} size={36} sx={{color: 'success.fg'}} />\n      ) : (\n        <Box sx={{display: 'flex', flexDirection: 'column', alignItems: 'center', py: 2}}>\n          <Spinner size=\"medium\" />\n        </Box>\n      )}\n      <div className=\"pl-2 d-flex flex-column\">\n        <Heading sx={{fontSize: 2}} as=\"h3\">\n          {finished ? 'Settings are up to date' : 'Applying group settings'}\n        </Heading>\n        {finished ? (\n          <Text sx={{color: 'fg.muted'}}>\n            Applied to {status?.total} repositories{' • '}\n            {status?.completed ? <RelativeTime date={new Date(status.completed)} tense=\"past\" /> : 'Now'}\n          </Text>\n        ) : (\n          <Text sx={{color: 'fg.muted'}}>\n            {status?.total ? `${status?.succeeded} of ${status?.total} repositories` : 'Applying to repositories'}\n          </Text>\n        )}\n      </div>\n    </div>\n  )\n}\n\nfunction AliveUpdater({channel = '', setStatus}: {channel: string; setStatus: (args: SettingsOrchestration) => void}) {\n  const aliveCallback = useCallback(\n    (args: SettingsOrchestration) => {\n      setStatus(args)\n    },\n    [setStatus],\n  )\n\n  useAlive(channel, aliveCallback)\n\n  return null\n}\n\ntry{ LiveBanner.displayName ||= 'LiveBanner' } catch {}\ntry{ AliveUpdater.displayName ||= 'AliveUpdater' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"blankslate\":\"RepositoryListField-module__blankslate--nOmFU\",\"listViewWrapper\":\"RepositoryListField-module__listViewWrapper--b_tC_\",\"listViewItems\":\"RepositoryListField-module__listViewItems--URKDn\"};","import {useCallback, useMemo} from 'react'\nimport {Blankslate} from '@primer/react/experimental'\nimport {ReposSelector} from '@github-ui/repos-selector'\nimport {useFormField} from '../../hooks/use-form-field'\nimport type {FieldComponentProps, Group, Repository} from '../../types'\nimport {ListView} from '@github-ui/list-view'\nimport {ListViewMetadata} from '@github-ui/list-view/ListViewMetadata'\nimport {useGroupTreeContext} from '../../contexts/GroupTreeContext'\nimport {RecursiveGroup} from '../RecursiveGroup'\nimport {useBasePath} from '../../contexts/BasePathContext'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {clsx} from 'clsx'\nimport styles from './RepositoryListField.module.css'\n\ntype RepositoryListFieldProps = FieldComponentProps<Repository[]> & {\n  group?: Group\n}\n\nexport function RepositoryListField({initialValue, group}: RepositoryListFieldProps) {\n  const basePath = useBasePath()\n  const field = useFormField('repositories', initialValue || [])\n  const {walkTree} = useGroupTreeContext()\n  const subTree = useMemo(() => {\n    if (!group) {\n      return {\n        repos: field.value,\n      }\n    }\n    return {\n      ...walkTree(group.id),\n      repos: field.value,\n    }\n  }, [group, walkTree, field.value])\n\n  const queryForRepos = useCallback(\n    async (query: string) => {\n      const response = await verifiedFetchJSON(`${basePath}/suggestions/repositories?q=${encodeURIComponent(query)}`)\n      if (response.ok) {\n        return (await response).json()\n      }\n      return []\n    },\n    [basePath],\n  )\n\n  const addRepositories = useCallback(\n    (repos?: Repository[]) => {\n      if (repos) {\n        field.update(repos)\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [field.update, field.value],\n  )\n\n  const removeRepository = useCallback(\n    (id: number) => {\n      const repoIndex = field.value.findIndex(repo => repo.id === id)\n      if (repoIndex !== -1) {\n        field.update([...field.value.slice(0, repoIndex), ...field.value.slice(repoIndex + 1)])\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [field.update, field.value],\n  )\n\n  const totalCount = (subTree?.total_count || 0) - (initialValue?.length || 0) + (subTree?.repos.length || 0)\n  const title = subTree ? `${totalCount} repositor${totalCount === 1 ? 'y' : 'ies'}` : 'Repositories'\n\n  return (\n    <div className={styles.listViewWrapper}>\n      <ListView\n        title=\"List of repositories\"\n        variant=\"default\"\n        pluralUnits=\"repositories\"\n        singularUnits=\"repository\"\n        itemsListClassName={styles.listViewItems}\n        metadata={\n          <ListViewMetadata title={<span className=\"text-bold\">{title}</span>}>\n            <ReposSelector<Repository>\n              currentSelection={field.value}\n              repositoryLoader={queryForRepos}\n              selectionVariant=\"multiple\"\n              selectAllOption={false}\n              onSelect={addRepositories}\n              buttonText=\"Add repositories\"\n            />\n          </ListViewMetadata>\n        }\n        totalCount={field.value.length}\n      >\n        {subTree.repos.length > 0 ? (\n          <RecursiveGroup\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            //@ts-expect-error\n            tree={subTree}\n            collapse\n            hideGroupActions\n            showTopLevelRepos\n            onRemoveRepository={removeRepository}\n          />\n        ) : (\n          <li className={clsx('Box-body', styles.blankslate)}>\n            <Blankslate>\n              <Blankslate.Heading as=\"h3\">No repositories in this group</Blankslate.Heading>\n            </Blankslate>\n          </li>\n        )}\n      </ListView>\n    </div>\n  )\n}\n\ntry{ RepositoryListField.displayName ||= 'RepositoryListField' } catch {}","import {useState, type FormEvent} from 'react'\nimport {Button, Flash, Heading} from '@primer/react'\nimport {GroupNameField} from './GroupFormFields/GroupNameField'\nimport {ManageForkDestinationsField} from './GroupFormFields/ManageForkDestinationsField'\nimport {ForkDestinationsField} from './GroupFormFields/ForkDestinationsField'\nimport {ManageAccessPermissionsField} from './GroupFormFields/ManageAccessPermissionsField'\nimport {AccessPermissionsField} from './GroupFormFields/AccessPermissionsField'\nimport {AllowAdditionalCollaboratorsField} from './GroupFormFields/AllowAdditionalCollaboratorsField'\nimport {LiveBanner} from './LiveBanner'\nimport {type ForkDestination, type Group, PAGE, type FormPayload} from '../types'\nimport {useGroupFormContext} from '../contexts/GroupFormContext'\nimport {useBasePath} from '../contexts/BasePathContext'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {useNavigate} from '@github-ui/use-navigate'\nimport {RepositoryListField} from './GroupFormFields/RepositoryListField'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\n\nexport function GroupForm({group, page}: {group?: Group; page: PAGE}) {\n  const {isRoot} = useRoutePayload<FormPayload>()\n  const navigate = useNavigate()\n  const form = useGroupFormContext()\n  const basePath = useBasePath()\n  const [errorMessage, setErrorMessage] = useState<string>()\n  const channel = group?.orchestration?.channel\n  const isExistingGroup = !!group?.id\n\n  const onSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    setErrorMessage('')\n    // here's where we can call form.validate() once we have those configured per field\n    const body = form.getBody()\n    const url = isExistingGroup ? `${basePath}/${group.id}` : `${basePath}/new`\n    const response = await verifiedFetchJSON(url, {\n      method: isExistingGroup ? 'PUT' : 'POST',\n      body: {\n        group: {\n          ...body,\n          id: group?.id,\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          //@ts-expect-error\n          ...(body.manageAccessPermissions\n            ? {}\n            : {\n                accessPermissions: undefined,\n                allowAdditionalCollaborators: undefined,\n              }),\n        },\n      },\n    })\n    if (response.ok) {\n      const {id} = await response.json()\n      navigate(`${basePath}/${id}`)\n    } else {\n      const error = await response.json()\n      setErrorMessage(error.message || 'Group failed to save')\n    }\n  }\n\n  const forkDestinations: ForkDestination[] = group?.directSettings?.forkDestinations\n    ? Object.keys(group?.directSettings?.forkDestinations)\n        .filter(\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-expect-error\n          (key: ForkDestination) => group?.directSettings?.forkDestinations[key.toLowerCase()],\n        )\n        .map(key => key.toUpperCase() as ForkDestination)\n    : []\n\n  const manageAccessPermissions = group?.directSettings?.accessPermissions !== null\n\n  return (\n    <form\n      onSubmit={onSubmit}\n      action={`${basePath}/${group?.group_path || 'new'}`}\n      method=\"POST\"\n      className=\"d-flex flex-column gap-3\"\n    >\n      <LiveBanner channel={channel} initialState={group?.orchestration} isFormTouched={form.isTouched} />\n\n      {errorMessage ? <Flash variant=\"danger\">{errorMessage}</Flash> : null}\n\n      <GroupNameField\n        initialValue={group?.group_path}\n        isRoot={isRoot}\n        readOnlyOverride={isRoot && page === PAGE.Show}\n      />\n      <Heading as=\"h2\" className=\"h4\">\n        Managed Settings\n      </Heading>\n      <hr className=\"my-0\" />\n      <ManageAccessPermissionsField initialValue={manageAccessPermissions} />\n      {/* @ts-expect-error typing doesn't describe `manageAccessPermissions` */}\n      {form.state['manageAccessPermissions']?.value ? (\n        <div className=\"ml-4 d-flex flex-column gap-3\">\n          <AccessPermissionsField\n            initialValue={group?.directSettings?.accessPermissions?.teams}\n            inheritedTeams={group?.inheritedSettings?.accessPermissions?.teams}\n            inherited={group?.inheritedSettings?.accessPermissions?.allowAdditionalCollaborators === false}\n          />\n          <AllowAdditionalCollaboratorsField\n            initialValue={\n              group?.inheritedSettings?.accessPermissions?.allowAdditionalCollaborators === false\n                ? false\n                : group?.directSettings?.accessPermissions?.allowAdditionalCollaborators\n            }\n            inherited={group?.inheritedSettings?.accessPermissions?.allowAdditionalCollaborators === false}\n          />\n        </div>\n      ) : null}\n      <ManageForkDestinationsField initialValue={forkDestinations.length !== 3} />\n      {/* @ts-expect-error typing doesn't describe `manageForkDestination` */}\n      {form.state['manageForkDestination']?.value ? (\n        <div className=\"Box p-3 ml-4 d-flex flex-column gap-2\">\n          <ForkDestinationsField initialValue={forkDestinations} />\n        </div>\n      ) : null}\n      <hr className=\"my-0\" />\n      <RepositoryListField initialValue={group?.repos} group={group} />\n      <div className=\"d-flex flex-row gap-2\">\n        <Button type=\"submit\" variant=\"primary\">\n          Save\n        </Button>\n        <Button type=\"reset\">Cancel</Button>\n      </div>\n    </form>\n  )\n}\n\ntry{ GroupForm.displayName ||= 'GroupForm' } catch {}","import {GroupForm} from '../components/GroupForm'\nimport {Layout} from '../components/Layout'\nimport {GroupFormProvider} from '../contexts/GroupFormContext'\nimport {PAGE} from '../types'\n\nexport function New() {\n  return (\n    <Layout page={PAGE.New}>\n      <GroupFormProvider>\n        <GroupForm page={PAGE.New} />\n      </GroupFormProvider>\n    </Layout>\n  )\n}\n\ntry{ New.displayName ||= 'New' } catch {}","import {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {GroupForm} from '../components/GroupForm'\nimport {GroupFormProvider} from '../contexts/GroupFormContext'\nimport {Layout} from '../components/Layout'\nimport {PAGE, type ShowPayload} from '../types'\n\nexport function Show() {\n  const {group} = useRoutePayload<ShowPayload>()\n  const name = group.group_path.split('/').pop()\n\n  return (\n    <Layout page={PAGE.Show} name={name}>\n      <GroupFormProvider>\n        <GroupForm group={group} page={PAGE.Show} />\n      </GroupFormProvider>\n    </Layout>\n  )\n}\n\ntry{ Show.displayName ||= 'Show' } catch {}","import {App} from './App'\nimport {List} from './routes/List'\nimport {New} from './routes/New'\nimport {Show} from './routes/Show'\nimport {registerReactAppFactory} from '@github-ui/react-core/register-app'\nimport {jsonRoute} from '@github-ui/react-core/json-route'\n\nregisterReactAppFactory('group-settings', () => ({\n  App,\n  routes: [\n    jsonRoute({path: '/organizations/:organization_id/groups', Component: List}),\n    jsonRoute({path: '/organizations/:organization_id/settings/groups', Component: List}),\n    jsonRoute({path: '/organizations/:organization_id/settings/groups/new', Component: New}),\n    jsonRoute({path: '/organizations/:organization_id/settings/groups/:group_id', Component: Show}),\n    // jsonRoute({path: '/organizations/:organization_id/settings/groups/:group_path/review', Component: Review}),\n  ],\n}))\n","import {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {isStaff} from '@github-ui/stats'\nimport {TrustedTypesPolicyError, trustedTypesPolicy} from './policy'\n\nconst policyName = 'alive'\n\nexport class InvalidSourceRelError extends TrustedTypesPolicyError {}\nexport const alivePolicy = ghTrustedTypes.createPolicy(policyName, {\n  createScriptURL: (url: string) => {\n    return trustedTypesPolicy.apply({\n      policy: () => {\n        if (!isStaff()) return url\n        if (!url.startsWith('/')) throw new InvalidSourceRelError('Alive worker src URL must start with a slash')\n        return url\n      },\n      policyName,\n      fallback: url,\n      fallbackOnError: true,\n    })\n  },\n})\n","import {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {sendStats} from '@github-ui/stats'\n// eslint-disable-next-line no-restricted-imports\nimport {reportError} from '@github-ui/failbot'\nimport dompurify from 'dompurify'\nimport {sendEvent} from '@github-ui/hydro-analytics'\n\nexport class TrustedTypesPolicyError extends Error {}\n\ninterface PolicyParam {\n  policy: () => string\n  policyName: string\n  fallback: string\n  fallbackOnError?: boolean\n  sanitize?: boolean // report-only mode for now\n  silenceErrorReporting?: boolean\n}\n\nfunction apply({\n  policy,\n  policyName,\n  fallback,\n  fallbackOnError = false,\n  sanitize,\n  silenceErrorReporting = false,\n}: PolicyParam): string {\n  try {\n    if (isFeatureEnabled('BYPASS_TRUSTED_TYPES_POLICY_RULES')) return fallback\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_CALLED', trustedTypesPolicyName: policyName}, false, 0.1)\n    const policyOutput = policy()\n    if (sanitize) {\n      new Promise(resolve => {\n        const startTime = window.performance.now()\n        const sanitized = dompurify.sanitize(policyOutput, {FORBID_ATTR: []})\n        const endTime = window.performance.now()\n        const executionTime = endTime - startTime\n        if (policyOutput.length !== sanitized.length) {\n          const err = new Error('Trusted Types policy output sanitized')\n          const stack = err.stack?.slice(0, 1000)\n          const output = policyOutput.slice(0, 250)\n          sendEvent('trusted_types_policy.sanitize', {\n            policyName,\n            output,\n            stack,\n            outputLength: policyOutput.length,\n            sanitizedLength: sanitized.length,\n            executionTime,\n          })\n          resolve(policyOutput)\n        }\n      })\n    }\n    return policyOutput\n  } catch (e) {\n    if (e instanceof TrustedTypesPolicyError) throw e\n    if (!silenceErrorReporting) reportError(e)\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_ERROR', trustedTypesPolicyName: policyName})\n    if (!fallbackOnError) throw e\n  }\n\n  return fallback\n}\n\nexport const trustedTypesPolicy = {apply}\n","/* eslint no-restricted-globals: ['off', '__TRUSTED_TYPE_POLICIES__'] */\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\n/*\n * Tinyfill for trusted types\n */\n\ninterface GHTrustedTypePolicyOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createHTML: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScript: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScriptURL: (input: string, ...args: any[]) => string\n}\n\ninterface GHTrustedTypePolicyWithName extends GHTrustedTypePolicyOptions {\n  name: string\n}\n\nfunction unimplemented(functionName: string) {\n  return () => {\n    throw new TypeError(`The policy does not implement the function ${functionName}`)\n  }\n}\n\nconst fallbacks = {\n  createHTML: unimplemented('createHTML'),\n  createScript: unimplemented('createScript'),\n  createScriptURL: unimplemented('createScriptURL'),\n}\n\nconst tinyfill = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => ({\n    name,\n    ...fallbacks,\n    ...rules,\n  }),\n}\n\ntype TrustedTypesPolicies = Map<string, GHTrustedTypePolicyOptions>\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var trustedTypes: typeof tinyfill | undefined\n  // We need to store the policies in a global variable so that they accurately track the global policy store in the\n  // browser. This prevents false misses when there is more than one instance of this module loaded on the page.\n  // eslint-disable-next-line no-var\n  var __TRUSTED_TYPE_POLICIES__: TrustedTypesPolicies\n}\n\nconst registeredPolicies: TrustedTypesPolicies = (globalThis.__TRUSTED_TYPE_POLICIES__ ??= new Map())\n\n// eslint-disable-next-line compat/compat\nconst trustedTypes = globalThis.trustedTypes ?? tinyfill\n\nexport const ghTrustedTypes = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => {\n    if (registeredPolicies.has(name)) {\n      sendStats({\n        incrementKey: 'TRUSTED_TYPES_POLICY_INITIALIZED_TWICE',\n      })\n      return registeredPolicies.get(name) as GHTrustedTypePolicyWithName\n    } else {\n      const policy = Object.freeze(trustedTypes.createPolicy(name, rules))\n      registeredPolicies.set(name, policy)\n      return policy\n    }\n  },\n}\n\n// This export is only for testing. Do not import in production code.\nexport const registeredPoliciesForTesting = registeredPolicies\nexport const tinyfillForTesting = tinyfill\n\n/*\n *\n * This is a temporary warning to indicate to hubbers that the following errors are expected and safe to ignore.\n *\n */\nlet hasWarnedHubberAboutTrustedTypes = false\n\nssrSafeDocument?.addEventListener('securitypolicyviolation', (e: SecurityPolicyViolationEvent) => {\n  if (e.violatedDirective === 'require-trusted-types-for' && !hasWarnedHubberAboutTrustedTypes) {\n    // eslint-disable-next-line no-console\n    console.warn(`Hi fellow Hubber!\n    You're probably seeing a Report Only Trusted Types error near this message. This is intended behaviour, staff-only,\n    does not impact application control flow, and is used solely for statistic collection. Unfortunately we\n    can't gather these statistics without adding the above warnings to your console. Sorry about that!\n    Feel free to drop by #prodsec-engineering if you have any additional questions about Trusted Types or CSP.`)\n    hasWarnedHubberAboutTrustedTypes = true\n  }\n})\n","import {createContext, useContext, useEffect, type PropsWithChildren} from 'react'\nimport {SubscriptionSet, Topic} from '@github/alive-client'\n\ntype InitialMessages = Array<[string, unknown]>\n\nconst AliveTestContext = createContext<typeof testSubscribeToAlive | null>(null)\n\nlet subscriptions: SubscriptionSet<(data: unknown) => unknown> | null = null\n/**\n * Provides context required to dispatch mock alive messages via `dispatchAliveTestMessage`\n *\n *@example\n * ```ts\n * import {AliveTestProvider, dispatchAliveTestMessage, signChannel} from '@github-ui/use-alive/test-utils'\n *\n * render(<MyComponent aliveChannel={signChannel(\"channel-name\")} />, {\n *   wrapper: ({children}) => (\n *     <AliveTestProvider\n *       initialMessages={[[\"channel-name\", {data: 1}]]}\n *     >\n *       {children}\n *     </AliveTestProvider>\n * )})\n *\n * // later in the test, you can send another message:\n * dispatchAliveTestMessage(\"channel-name\", {data: 2})\n * ```\n */\nexport function AliveTestProvider({children, initialMessages}: PropsWithChildren<{initialMessages?: InitialMessages}>) {\n  useEffect(() => {\n    if (initialMessages) {\n      for (const [channel, users] of initialMessages) {\n        setTimeout(() => {\n          dispatchAliveTestMessage(channel, users)\n        }, 0)\n      }\n    }\n\n    return () => {\n      // delete subscriptions on unmount of provider to reset subs between tests\n      subscriptions = null\n    }\n  })\n  return <AliveTestContext.Provider value={testSubscribeToAlive}>{children}</AliveTestContext.Provider>\n}\n\n/**\n * Send mock Alive messages for tests or storybook etc.\n * Component under test **must** be wrapped in `AliveTestProvider` to enable Alive mocking.\n *\n * @see `AliveTestProvider`\n *\n * @param channel - an unsigned alive channel name: subscribers to this channel will be notified\n * @param data - data to send to subscribers\n */\nexport function dispatchAliveTestMessage(channel: string, data: unknown) {\n  if (subscriptions === null) {\n    throw new Error(\n      'Test helper `dispatchAliveTestMessage` called outside `AliveTestProvider`. Please wrap your component under test in `AliveTestProvider` from \"@github-ui/use-alive/test-utils\".',\n    )\n  }\n\n  const subscribers = Array.from(subscriptions.subscribers(channel))\n  for (const subscriber of subscribers) {\n    subscriber(data)\n  }\n}\n\n/**\n * Provides access to the `testSubscribeToAlive` mock if called from within a `AliveTestProvider` context\n */\nexport function useTestSubscribeToAlive() {\n  return useContext(AliveTestContext)\n}\n\n/**\n * This function is private and is intended only to be consumable via `AliveTestProvider` / `useTestSubscribeToAlive`\n * Furthermore it is only expected to be used in `use-alive.ts`\n * @param signedChannel - A signed alive channel. You can use `signChannel` to generate a signed channel from a channel name.\n * @param callback - this will be called with data provided via `dispatchAliveTestMessage` to simulate an alive message\n * @private\n */\nfunction testSubscribeToAlive(signedChannel: string, callback: (data: unknown) => unknown) {\n  const topic = Topic.parse(signedChannel)\n  if (!topic) {\n    throw new Error(`Invalid channel name. Did you forget to sign it with \\`signChannel(\"${signedChannel}\")\\`?`)\n  }\n  if (!subscriptions) {\n    subscriptions = new SubscriptionSet()\n  }\n  subscriptions.add({topic, subscriber: callback})\n  return {\n    unsubscribe: () => {\n      subscriptions?.delete({topic, subscriber: callback})\n    },\n  }\n}\n\nconst fakeTimestamp = 1234567890\nconst fakeSignature = 'SIGNATURE'\n\n/**\n * Simulate a server-signed alive channel. Useful for passing as the signed channel to `useAlive` in code under test.\n *\n * @param channel - Unsigned channel name. This is the channel you will dispatch messages to.\n * @param [timestamp=1234567890] - Unix Epoch Time the channel was signed on the server. Default is equal to\n *         \"2009-02-13T23:31:30.000Z\" (multiply by 1000 for JS time in milliseconds)\n * @param [signature='SIGNATURE'] - String used to verify the signature. Ignored in test mode.\n * @returns A signed channel of the form `${btoa({\"c\": \"CHANNEL\", \"t\": 1234567890}')}--SIGNATURE`\n */\nexport function signChannel(channel: string, timestamp = fakeTimestamp, signature = fakeSignature) {\n  return `${btoa(`{\"c\": \"${channel}\", \"t\": ${timestamp}}`)}--${signature}`\n}\n\ntry{ AliveTestContext.displayName ||= 'AliveTestContext' } catch {}\ntry{ AliveTestProvider.displayName ||= 'AliveTestProvider' } catch {}","import {useEffect} from 'react'\nimport useIsMounted from '@github-ui/use-is-mounted'\nimport {getSession} from '@github-ui/alive'\nimport {connectAliveSubscription} from '@github-ui/alive/connect-alive-subscription'\nimport {useTestSubscribeToAlive} from './TestAliveSubscription'\n\n/**\n * Subscribe to an alive channel with a signed channel name. Event data\n * will be passed to the callback.\n * @param signedChannel the signed channel name, provided from the server\n * @param callback a callback to receive events from the alive channel. This callback should be memoized to avoid unnecessary resubscribes when React re-renders.\n */\nexport function useAlive<T>(signedChannel: string, callback: (data: T) => unknown) {\n  const isMounted = useIsMounted()\n  const testSubscribeToAlive = useTestSubscribeToAlive()\n\n  useEffect(() => {\n    let unsubscribeFromAlive = () => {}\n    let closed = false\n\n    async function subscribeToAlive() {\n      if (typeof testSubscribeToAlive === 'function') {\n        const subs = await testSubscribeToAlive(signedChannel, callback as (data: unknown) => unknown)\n        if (subs) {\n          unsubscribeFromAlive = subs.unsubscribe\n        }\n        return\n      }\n\n      try {\n        const aliveSession = await getSession()\n        if (closed) {\n          // Possible we unsubscribed before the session returned\n          // this is fine, we just don't subscribe to the channel on the alive side\n          return\n        }\n        const resp = connectAliveSubscription(aliveSession, signedChannel, callback)\n        if (resp?.unsubscribe) {\n          if (isMounted()) {\n            unsubscribeFromAlive = resp.unsubscribe\n          } else {\n            resp.unsubscribe()\n          }\n        }\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e)\n      }\n    }\n\n    subscribeToAlive()\n\n    return () => {\n      closed = true\n      unsubscribeFromAlive()\n    }\n  }, [signedChannel, callback, isMounted, testSubscribeToAlive])\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Description-module__container--b3n6F\"};","import {testIdProps} from '@github-ui/test-id-props'\nimport {Box} from '@primer/react'\nimport {clsx} from 'clsx'\n\nimport type {StylableProps} from '../types'\nimport styles from './Description.module.css'\n\ninterface ListItemDescriptionProps extends StylableProps {\n  children?: React.ReactNode\n}\n\nexport function ListItemDescription({children, style, className, sx}: ListItemDescriptionProps) {\n  return (\n    <Box\n      {...testIdProps('list-view-item-description')}\n      className={clsx(styles.container, className)}\n      style={style}\n      sx={sx}\n    >\n      {children}\n    </Box>\n  )\n}\n\ntry{ ListItemDescription.displayName ||= 'ListItemDescription' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LeadingContent-module__container--NoK8W\",\"isSelectable\":\"LeadingContent-module__isSelectable--J9kYS\"};","import {testIdProps} from '@github-ui/test-id-props'\nimport {Box} from '@primer/react'\nimport {clsx} from 'clsx'\nimport type {PropsWithChildren} from 'react'\n\nimport {useListViewSelection} from '../ListView/SelectionContext'\nimport type {StylableProps} from '../types'\nimport styles from './LeadingContent.module.css'\n\nexport const ListItemLeadingContent = ({style, className, sx, children}: PropsWithChildren<StylableProps>) => {\n  const {isSelectable} = useListViewSelection()\n\n  return (\n    <Box\n      className={clsx(styles.container, isSelectable && styles.isSelectable, className)}\n      {...testIdProps('list-view-item-leading-content')}\n      style={style}\n      sx={sx}\n    >\n      {children}\n    </Box>\n  )\n}\n\ntry{ ListItemLeadingContent.displayName ||= 'ListItemLeadingContent' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"outer\":\"LeadingVisual-module__outer--SJchr\",\"hasNewActivity\":\"LeadingVisual-module__hasNewActivity--soQyL\",\"defaultVariant\":\"LeadingVisual-module__defaultVariant--ITyiW\",\"inner\":\"LeadingVisual-module__inner--O92jr\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"UnreadIndicator-module__container--RzNLy\"};","import {testIdProps} from '@github-ui/test-id-props'\n\nimport styles from './UnreadIndicator.module.css'\n\nexport const ListItemUnreadIndicator = () => {\n  return (\n    <div className={styles.container}>\n      <span className=\"sr-only\" {...testIdProps('list-view-item-unread-indicator')}>\n        New activity.\n      </span>\n    </div>\n  )\n}\n\ntry{ ListItemUnreadIndicator.displayName ||= 'ListItemUnreadIndicator' } catch {}","import {testIdProps} from '@github-ui/test-id-props'\nimport {Octicon, type OcticonProps} from '@primer/react'\nimport {clsx} from 'clsx'\nimport {type PropsWithChildren, type ReactNode, useEffect} from 'react'\n\nimport {useListViewVariant} from '../ListView/VariantContext'\nimport styles from './LeadingVisual.module.css'\nimport {useListItemNewActivity} from './NewActivityContext'\nimport {useListItemStatus} from './StatusContext'\nimport {ListItemUnreadIndicator} from './UnreadIndicator'\n\nexport type ListItemLeadingVisualProps = {\n  /**\n   * The Octicon component representing the desired icon\n   */\n  icon?: OcticonProps['icon']\n  /**\n   * Render any child content as the leading visual\n   * NOTE: if both icon and children are passed, the icon will be rendered first, with the children appended after\n   */\n  children?: ReactNode\n  /**\n   * The name of the Primer variable that will be used for the icon's fill\n   * eg.: done.fg\n   */\n  color?: string\n  /**\n   * A text description of the item\n   * Used for visually hidden text to describe the item on focus for the screen readers\n   */\n  description?: string\n  /**\n   * Indicates whether the rendered item has new content since lastViewed\n   */\n  newActivity?: boolean\n}\n\nexport function ListItemLeadingVisual({\n  icon,\n  color,\n  description,\n  newActivity = false,\n  children,\n  ...props\n}: ListItemLeadingVisualProps & PropsWithChildren) {\n  const {variant} = useListViewVariant()\n  const {setStatus} = useListItemStatus()\n  const {setHasNewActivity} = useListItemNewActivity()\n  const trimmedDescription = description?.trim()\n\n  useEffect(() => {\n    setHasNewActivity(newActivity)\n  }, [newActivity, setHasNewActivity])\n\n  useEffect(() => {\n    if (trimmedDescription) setStatus(trimmedDescription)\n  }, [setStatus, trimmedDescription])\n\n  return (\n    <div\n      className={clsx(\n        styles.outer,\n        variant === 'default' && styles.defaultVariant,\n        newActivity && styles.hasNewActivity,\n      )}\n      {...props}\n    >\n      <div>\n        <div {...testIdProps('list-view-leading-visual')} className={styles.inner}>\n          {icon && <Octicon aria-label=\"\" icon={icon} color={color} />}\n          {children}\n          {trimmedDescription && (\n            <span className=\"sr-only\" {...testIdProps('leading-visual-text-description')}>\n              {trimmedDescription}\n            </span>\n          )}\n        </div>\n      </div>\n      {newActivity && <ListItemUnreadIndicator />}\n    </div>\n  )\n}\n\ntry{ ListItemLeadingVisual.displayName ||= 'ListItemLeadingVisual' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MainContent-module__container--ry4iL\",\"inner\":\"MainContent-module__inner--bU_tk\",\"compact\":\"MainContent-module__compact--mM626\"};","import {testIdProps} from '@github-ui/test-id-props'\nimport {clsx} from 'clsx'\nimport {Children, isValidElement, type ReactNode} from 'react'\n\nimport {useListViewVariant} from '../ListView/VariantContext'\nimport styles from './MainContent.module.css'\nimport {ListItemTitle} from './Title'\n\nexport function ListItemMainContent({children}: {children?: ReactNode}) {\n  const {variant} = useListViewVariant()\n  const childrenArray = Children.toArray(children)\n  const titleIndex = childrenArray.findIndex(\n    child => isValidElement(child) && typeof child !== 'string' && child.type === ListItemTitle,\n  )\n  const title = childrenArray[titleIndex]\n  const nonTitleChildren =\n    titleIndex < 0 ? childrenArray : childrenArray.slice(0, titleIndex).concat(childrenArray.slice(titleIndex + 1))\n  return (\n    <>\n      {title}\n      <div {...testIdProps('list-view-item-main-content')} className={styles.container}>\n        <div className={clsx(styles.inner, variant === 'compact' && styles.compact)}>{nonTitleChildren}</div>\n      </div>\n    </>\n  )\n}\n\ntry{ ListItemMainContent.displayName ||= 'ListItemMainContent' } catch {}","import {announceFromElement} from '@github-ui/aria-live'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {Box} from '@primer/react'\nimport {clsx} from 'clsx'\nimport type {ReactElement, ReactNode, Suspense} from 'react'\nimport {isValidElement, useCallback, useEffect, useRef} from 'react'\n\nimport densityStyles from '../density-gap.module.css'\nimport {useNextHeaderTag} from '../hooks/use-next-header-tag'\nimport type {PrefixedStylableProps, StylableProps} from '../types'\nimport {ListViewActionBar, type ListViewActionBarProps} from './ActionBar'\nimport {useListViewId} from './IdContext'\nimport styles from './Metadata.module.css'\nimport type {ListViewSectionFilterLinks} from './SectionFilterLink'\nimport {ListViewSectionFilters} from './SectionFilters'\nimport {ListViewSelectAllCheckbox} from './SelectAllCheckbox'\nimport {useListViewSelection} from './SelectionContext'\nimport {useListViewTitle} from './TitleContext'\n\nexport type ListViewMetadataProps = {\n  /**\n   * The rendered title of the list or information regarding its contents.\n   */\n  title?: string | ReactNode\n  /**\n   * Links for applying any categorical, mutually exclusive section filters for the content of the ListView.\n   */\n  sectionFilters?: ListViewSectionFilterLinks | ReactElement<typeof Suspense>\n  /**\n   * Used for assistive announcements that are reflective of the visual updates to the list container a sighted user\n   * will experience when using the list. Defaults to no announcement. Visually hidden, for screenreaders only.\n   */\n  assistiveAnnouncement?: string\n  /**\n   * Callback for when the checkbox for selecting and deselecting all list items is toggled.\n   */\n  onToggleSelectAll?: (isSelectAllChecked: boolean) => void\n  /**\n   * Optional additional actions to show. Will not fall into an overflow dropdown menu to accommodate small screen\n   * widths.\n   */\n  children?: ReactNode\n} & StylableProps &\n  PrefixedStylableProps<'actions'> &\n  ListViewActionBarProps\n\nexport const ListViewMetadata = ({\n  title,\n  assistiveAnnouncement,\n  sectionFilters,\n  children,\n  style,\n  sx,\n  className,\n  actionsStyle,\n  actionsSx,\n  actionsClassName,\n  onToggleSelectAll,\n  ...actionBarProps\n}: ListViewMetadataProps) => {\n  const {idPrefix} = useListViewId()\n  const {anyItemsSelected} = useListViewSelection()\n  const {setHasMetadataTitle} = useListViewTitle()\n  const TitleTag = useNextHeaderTag('list-view-metadata')\n  const announceRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    setHasMetadataTitle(!!title)\n  })\n\n  useEffect(() => {\n    if (announceRef.current) announceFromElement(announceRef.current)\n  }, [assistiveAnnouncement])\n\n  const ListViewAnnouncements = () => {\n    return (\n      <div\n        id={`${idPrefix}-list-view-announcements`}\n        role=\"status\"\n        aria-live=\"polite\"\n        aria-atomic=\"true\"\n        className=\"sr-only\"\n        ref={announceRef}\n        {...testIdProps('list-view-announcement-container')}\n      >\n        {assistiveAnnouncement}\n      </div>\n    )\n  }\n\n  const ListFilters = useCallback(() => {\n    if (!sectionFilters) return null\n\n    if (Array.isArray(sectionFilters)) {\n      return <ListViewSectionFilters links={sectionFilters} />\n    } else if (isValidElement(sectionFilters)) {\n      return <>{sectionFilters}</>\n    }\n    return null\n  }, [sectionFilters])\n\n  return (\n    <Box\n      id={`${idPrefix}-list-view-metadata`}\n      className={clsx(styles.container, className, anyItemsSelected && densityStyles.spacious)}\n      style={style}\n      sx={sx}\n      {...testIdProps('list-view-metadata')}\n    >\n      <ListViewSelectAllCheckbox\n        onToggle={(isSelectAllChecked: boolean) => {\n          if (onToggleSelectAll) onToggleSelectAll(isSelectAllChecked)\n        }}\n      />\n\n      <ListFilters />\n\n      {title && !anyItemsSelected && (\n        <TitleTag className={styles.heading} {...testIdProps('list-view-header-title')}>\n          {title}\n        </TitleTag>\n      )}\n\n      <ListViewActionBar style={actionsStyle} sx={actionsSx} className={actionsClassName} {...actionBarProps}>\n        {children}\n      </ListViewActionBar>\n\n      {assistiveAnnouncement && <ListViewAnnouncements />}\n    </Box>\n  )\n}\n\ntry{ ListViewMetadata.displayName ||= 'ListViewMetadata' } catch {}\ntry{ TitleTag.displayName ||= 'TitleTag' } catch {}\ntry{ ListViewAnnouncements.displayName ||= 'ListViewAnnouncements' } catch {}\ntry{ ListFilters.displayName ||= 'ListFilters' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"normal\":\"density-gap-module__normal--WYrBD\",\"none\":\"density-gap-module__none--WMH6V\",\"condensed\":\"density-gap-module__condensed--seZl0\",\"spacious\":\"density-gap-module__spacious--Nnm9Z\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ActionBar-module__container--SjALR\"};","import {ActionBar as GitHubUiActionBar, type ActionBarProps as GitHubUiActionBarProps} from '@github-ui/action-bar'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {Box} from '@primer/react'\nimport {clsx} from 'clsx'\nimport type {ReactElement} from 'react'\n\nimport densityStyles from '../density-gap.module.css'\nimport type {StylableProps} from '../types'\nimport styles from './ActionBar.module.css'\nimport type {ListViewDensityToggle} from './DensityToggle'\n\n// Require actionsLabel if actions are provided, and vice versa.\ntype ListViewActionBar =\n  | {\n      /**\n       * Description of the controls found in the action bar, e.g., \"Issue actions\", \"Markdown formatting tools\".\n       * Will be used in a hidden label for accessibility purposes. Defaults to the title for the ListView.\n       */\n      actionsLabel: GitHubUiActionBarProps['label']\n      /**\n       * The controls to show in the action bar. These will move into a dropdown menu when the screen isn't big enough to\n       * fit them side by side.\n       */\n      actions: GitHubUiActionBarProps['actions']\n    }\n  | {actionsLabel?: undefined; actions?: undefined}\n\nexport type ListViewActionBarProps = ListViewActionBar & {\n  /**\n   * Include a toggle to switch between Comfortable and Condensed view modes.\n   */\n  densityToggle?: ReactElement<typeof ListViewDensityToggle>\n} & StylableProps &\n  Omit<GitHubUiActionBarProps, 'actions' | 'label'>\n\nexport const ListViewActionBar = ({\n  actions,\n  style,\n  sx,\n  className,\n  children,\n  density,\n  actionsLabel,\n  densityToggle,\n}: ListViewActionBarProps) => {\n  const nonCollapsibleActions = (\n    <>\n      {children}\n      {densityToggle}\n    </>\n  )\n\n  if (actions && actions.length > 0) {\n    return (\n      <GitHubUiActionBar\n        label={actionsLabel?.trim()}\n        actions={actions}\n        density={density}\n        {...testIdProps('list-view-actions')}\n        style={style}\n        sx={sx}\n        className={className}\n      >\n        {nonCollapsibleActions}\n      </GitHubUiActionBar>\n    )\n  }\n\n  return (\n    <Box\n      {...testIdProps('list-view-actions')}\n      style={style}\n      sx={sx}\n      className={clsx(styles.container, density && densityStyles[density], className)}\n    >\n      {nonCollapsibleActions}\n    </Box>\n  )\n}\n\ntry{ ListViewActionBar.displayName ||= 'ListViewActionBar' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Metadata-module__container--tL6Q3\",\"heading\":\"Metadata-module__heading--HAxII\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SectionFilters-module__container--MmIUF\"};","import {testIdProps} from '@github-ui/test-id-props'\nimport {clsx} from 'clsx'\n\nimport type {ListViewSectionFilterLinks} from './SectionFilterLink'\nimport styles from './SectionFilters.module.css'\n\ntype ListViewSectionFiltersProps = {\n  links: ListViewSectionFilterLinks\n}\n\nexport const ListViewSectionFilters = ({links}: ListViewSectionFiltersProps) => {\n  if (links.length < 1) return null\n\n  return (\n    <div {...testIdProps('list-view-section-filters')}>\n      <ul className={clsx('list-style-none', styles.container)}>\n        {links.map((sectionFilterLink, index) => (\n          <li key={`section-filter-${index}`} {...testIdProps(`list-view-section-filter-${index}`)}>\n            {sectionFilterLink}\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\ntry{ ListViewSectionFilters.displayName ||= 'ListViewSectionFilters' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SelectAllCheckbox-module__container--FJDtV\",\"formControlContainer\":\"SelectAllCheckbox-module__formControlContainer--JTzPI\",\"count\":\"SelectAllCheckbox-module__count--xEF8c\"};","import {announceFromElement} from '@github-ui/aria-live'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {Box, Checkbox, FormControl} from '@primer/react'\nimport {clsx} from 'clsx'\nimport type {KeyboardEvent} from 'react'\nimport {useCallback, useEffect, useId, useMemo, useRef} from 'react'\n\nimport type {StylableProps} from '../types'\nimport {useListViewMultiPageSelection} from './MultiPageSelectionContext'\nimport styles from './SelectAllCheckbox.module.css'\nimport {useListViewSelection} from './SelectionContext'\nimport {useListViewTitle} from './TitleContext'\n\ntype ListViewSelectAllCheckboxProps = {onToggle?: (value: boolean) => void; className?: string} & StylableProps\n\nexport const ListViewSelectAllCheckbox = ({onToggle, style, className, sx}: ListViewSelectAllCheckboxProps) => {\n  const {title} = useListViewTitle()\n  const {\n    isSelectable,\n    selectedCount,\n    totalCount,\n    countOnPage,\n    isSelectAllChecked,\n    anyItemsSelected,\n    singularUnits,\n    pluralUnits,\n  } = useListViewSelection()\n  const {multiPageSelectionAllowed} = useListViewMultiPageSelection()\n  const idPrefix = useId()\n  const checkboxRef = useRef<HTMLInputElement>(null)\n  const srRef = useRef<HTMLSpanElement>(null)\n  const notAllItemsSelected = useMemo(() => {\n    if (multiPageSelectionAllowed && typeof totalCount === 'number') {\n      return selectedCount < Math.max(totalCount, countOnPage)\n    }\n    return selectedCount < countOnPage\n  }, [countOnPage, multiPageSelectionAllowed, selectedCount, totalCount])\n  const isIndeterminate = anyItemsSelected && notAllItemsSelected\n  const units = selectedCount === 1 ? singularUnits : pluralUnits\n  const suffix = typeof totalCount === 'number' ? `of ${totalCount} selected` : 'selected'\n  const srString = `${selectedCount} ${units} ${suffix}`\n\n  const handleBulkSelectToggle = useCallback(() => {\n    if (!onToggle) return\n\n    if (isIndeterminate) {\n      onToggle(false)\n    } else {\n      onToggle(!isSelectAllChecked)\n    }\n  }, [isIndeterminate, isSelectAllChecked, onToggle])\n\n  useEffect(() => {\n    srRef.current && announceFromElement(srRef.current)\n  }, [srRef, srString])\n\n  if (!isSelectable) return null\n\n  const checkboxId = `${idPrefix}-list-view-select-all`\n\n  const onKeyDown = (event: KeyboardEvent<HTMLInputElement>) => {\n    // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault()\n      handleBulkSelectToggle()\n    }\n  }\n\n  return (\n    <Box\n      style={style}\n      sx={sx}\n      className={clsx(styles.container, className)}\n      {...testIdProps('list-view-select-all-container')}\n      id={`${idPrefix}-list-view-select-all-container`}\n    >\n      <div className={styles.formControlContainer}>\n        <FormControl id={checkboxId}>\n          <Checkbox\n            onChange={handleBulkSelectToggle}\n            value=\"default\"\n            checked={isSelectAllChecked}\n            indeterminate={isIndeterminate}\n            onKeyDown={onKeyDown}\n            tabIndex={0}\n            ref={checkboxRef}\n            {...testIdProps('select-all-checkbox')}\n          />\n          <FormControl.Label visuallyHidden {...testIdProps('select-all-label')}>\n            Select all {pluralUnits}: {title}\n          </FormControl.Label>\n        </FormControl>\n      </div>\n      <p\n        className={clsx(styles.count, anyItemsSelected ? undefined : 'sr-only')}\n        {...testIdProps('select-all-selected-count')}\n      >\n        <span\n          aria-hidden=\"true\"\n          className={anyItemsSelected ? undefined : 'sr-only'}\n          {...testIdProps('select-all-selected-count-without-units')}\n        >\n          {selectedCount} {suffix}{' '}\n        </span>\n        <span className=\"sr-only\" ref={srRef} {...testIdProps('sr-content')}>\n          {srString}\n        </span>\n      </p>\n    </Box>\n  )\n}\n\ntry{ ListViewSelectAllCheckbox.displayName ||= 'ListViewSelectAllCheckbox' } catch {}","import {useContext, forwardRef, type ForwardedRef, type ReactElement} from 'react'\nimport {\n  Link as RouterLink,\n  NavLink as RouterNavLink,\n  type LinkProps,\n  type NavLinkProps,\n  resolvePath,\n  matchRoutes,\n} from 'react-router-dom'\nimport {AppContext} from './app-context'\nimport {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {PREVENT_AUTOFOCUS_KEY} from './prevent-autofocus'\n\ntype PreventAutofocusProp = {preventAutofocus?: boolean}\n\nexport const Link = forwardRef(\n  (\n    {to, reloadDocument, preventAutofocus, ...props}: LinkProps & PreventAutofocusProp,\n    ref: ForwardedRef<HTMLAnchorElement>,\n  ): ReactElement => {\n    const {routes} = useContext(AppContext)\n    const pathname = resolvePath(to, ssrSafeLocation.pathname).pathname\n    reloadDocument = reloadDocument ?? !matchRoutes(routes, pathname)\n    return (\n      <RouterLink\n        to={to}\n        {...props}\n        state={\n          preventAutofocus\n            ? {\n                [PREVENT_AUTOFOCUS_KEY]: true,\n                ...props.state,\n              }\n            : props.state\n        }\n        reloadDocument={reloadDocument}\n        ref={ref}\n      />\n    )\n  },\n)\n\nLink.displayName = 'Link'\n\nexport const NavLink = forwardRef(function NavLink(\n  {to, reloadDocument, preventAutofocus, ...props}: NavLinkProps & PreventAutofocusProp,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n): React.ReactElement {\n  const {routes} = useContext(AppContext)\n  const pathname = resolvePath(to, ssrSafeLocation.pathname).pathname\n  reloadDocument = reloadDocument ?? !matchRoutes(routes, pathname)\n  return (\n    <RouterNavLink\n      to={to}\n      {...props}\n      state={\n        preventAutofocus\n          ? {\n              [PREVENT_AUTOFOCUS_KEY]: true,\n              ...props.state,\n            }\n          : props.state\n      }\n      reloadDocument={reloadDocument}\n      ref={ref}\n    />\n  )\n})\n\ntry{ NavLink.displayName ||= 'NavLink' } catch {}"],"names":["sessionPromise","notify","subscribers","channel","type","data","el","dispatchEvent","CustomEvent","bubbles","cancelable","detail","name","AliveSessionProxy","subscribe","subs","added","subscriptions","add","length","worker","port","postMessage","addedChannels","Set","map","topic","redundantPresenceChannels","reduce","redundantChannels","subscription","isPresenceChannel","has","size","requestPresence","Array","from","unsubscribeAll","removed","drain","unsubscribe","updatedPresenceChannels","presenceMetadata","removeSubscribers","sendPresenceMetadataUpdate","updatePresenceMetadata","metadataUpdates","updatedChannels","update","setMetadata","channelName","channelNames","updatesForSharedWorker","push","metadata","getChannelMetadata","online","offline","hangup","receive","event","debouncedNotify","notifyPresenceDebouncedByChannel","get","debounce","debouncedEvent","delete","set","constructor","src","url","refreshUrl","sessionId","notifier","SubscriptionSet","PresenceMetadataSet","Map","SharedWorker","onmessage","connect","workerSrc","document","head","querySelector","getAttribute","alivePolicy","createScriptURL","e","InvalidSourceRelError","href","session","createSession","isSafari","window","safeStorage","getItem","_","AliveSession","addEventListener","connectWhenReady","ready","getSession","connectAliveSubscription","aliveSession","callback","Topic","parse","aliveSubscription","subscriber","subscriptionEvent","BaseAliveSession","getUrlFromRefreshUrl","fetchRefreshUrl","shared","fetchJSON","token","post","response","fetch","headers","Accept","ok","json","status","csrf","method","mode","text","queryLast","selector","list","querySelectorAll","requestUri","location","protocol","host","pagePathname","locationOverride","content","pathname","pageQuery","stripParams","search","extraParams","meta","names","split","replace","extensionErrors","errorsReported","loadTime","Date","now","EXPECTED_NETWORK_ERROR_MESSAGES","isExpectedError","error","message","startsWith","reportError","context","isFeatureEnabled","Error","isIgnoredNonError","ignoredErrorMessages","some","includes","code","errorForStackTrace","serializedErrorValue","serializeNonError","JSON","stringify","report","errorContext","value","stacktrace","catalogService","undefined","formatError","unloaded","isSupported","stack","frame","extensions","test","filename","function","body","Object","assign","sanitizedUrl","readyState","referrer","getSoftNavReferrer","timeSinceLoad","Math","round","user","pageUser","login","clientId","getOrCreateClientId","bundler","ui","Boolean","file","String","methodName","lineno","lineNumber","toString","colno","column","ssrSafeWindow","BroadcastChannel","sharedWorkerErrorChannel","BasePathContext","createContext","BasePathProvider","basePath","children","Provider","useBasePath","useContext","displayName","ReadOnlyContext","ReadOnlyProvider","readOnly","useReadOnly","OrganizationContext","OrganizationProvider","organization","useOrganization","BaseAvatarUrlContext","BaseAvatarUrlProvider","baseAvatarUrl","useGroupTree","groupTree","useMemo","groups","root","tree","id","total_count","nodes","repos","group_path","slice","steps","currentTree","step","getGroup","useCallback","find","group","walkTree","walk","subTree","trail","GroupTreeContext","_id","GroupTreeProvider","useGroupTreeContext","MaxDepthContext","MaxDepthProvider","maxDepth","App","props","useAppPayload","useRoutePayload","RecursiveGroupContext","collapse","hideGroupActions","onRemoveGroup","RecursiveGroupProvider","DangerConfirmationDialog","isOpen","title","buttonText","onDismiss","onConfirm","Dialog","Header","div","className","span","Button","onClick","variant","TreeListItem","depth","useRecursiveGroupContext","collapsed","setCollapsed","useState","ListItem","sx","paddingLeft","borderLeft","borderRight","borderBottom","ListItemTitle","secondaryActions","SecondaryActions","ListItemLeadingContent","IconButton","icon","ChevronRightIcon","ChevronDownIcon","aria-label","unsafeDisableTooltip","ListItemLeadingVisual","color","FileDirectoryFillIcon","FileDirectoryOpenFillIcon","ListItemMainContent","ListItemDescription","li","ul","isDangerDialogOpen","setIsDangerDialogOpen","showDeleteDialog","hideDeleteDialog","removeGroup","ListItemActionBar","label","staticMenuActions","key","render","ActionList","LinkItem","as","Link","to","LeadingVisual","PlusIcon","PencilIcon","Item","onSelect","TrashIcon","RecursiveGroup","showTopLevelRepos","onRemoveRepository","InnerRecursiveGroup","useMaxDepth","keys","node","repo","linkProps","repositoryPath","owner","actions","isOverflowMenu","XIcon","pl","RepoIcon","GroupBreadcrumbs","page","PAGE","New","Breadcrumbs","selected","List","Show","Review","TITLES","Pagehead","data-hpc","pb","Heading","Layout","ForkDestination","searchParams","useSearchParams","errorMessage","setErrorMessage","navigate","useNavigate","verifiedFetchJSON","Flash","ListView","pluralUnits","singularUnits","totalCount","ListViewMetadata","Blankslate","GroupFormContext","state","isTouched","_props","getBody","GroupFormProvider","setState","touched","validationError","currentState","useGroupFormContext","useFormField","initialValue","options","setValue","setValidationError","setTouched","form","useEffect","newValue","validator","validate","newValidationError","reset","isValid","setFieldError","GroupNameField","readOnlyOverride","isRoot","parentGroup","globalReadOnly","setGroups","fieldRef","useRef","isParentPathOpen","setIsParentPathOpen","parentPathFilter","setParentPathFilter","field","parentGroupPath","join","groupName","pop","fetcher","payload","updateGroupPath","newParentGroupPath","newGroupName","path","onOpen","item","items","leadingVisual","Octicon","selectionVariant","filteredItems","filter","toLowerCase","FormControl","Label","SelectPanel","renderAnchor","anchorProps","trailingVisual","TriangleDownIcon","placeholderText","onSelectedChange","onOpenChange","onFilterChange","open","overlayProps","width","height","style","fontSize","required","TextInput","ref","onChange","target","replaceAll","Caption","CheckboxField","caption","inherited","disabled","display","alignItems","flexDirection","gap","Checkbox","checked","ManageForkDestinationsField","ForkDestinationsField","toggleDestination","destination","destinationIsChecked","dest","CheckboxGroup","EXTERNAL","INTERNAL","USERS","ManageAccessPermissionsField","roles","AccessPermissionsField","inheritedTeams","useBaseAvatarUrl","showDialog","setShowDialog","initialSuggestions","setInitialSuggestions","hasFetchedInitialSuggestions","updateTeam","role","teamIndex","findIndex","team","addTeam","actorId","actorType","removeTeam","current","teamCount","GitHubAvatar","alt","actor","ActionMenu","Overlay","BypassDialog","enabledBypassActors","onClose","addBypassActor","suggestionsUrl","addReviewerSubtitle","AllowAdditionalCollaboratorsField","LiveBanner","initialState","isFormTouched","setStatus","finished","AliveUpdater","CheckCircleFillIcon","Box","py","Spinner","Text","total","completed","RelativeTime","date","tense","succeeded","aliveCallback","args","useAlive","RepositoryListField","queryForRepos","query","encodeURIComponent","addRepositories","removeRepository","repoIndex","styles","listViewWrapper","itemsListClassName","listViewItems","ReposSelector","currentSelection","repositoryLoader","selectAllOption","clsx","blankslate","GroupForm","orchestration","isExistingGroup","onSubmit","preventDefault","manageAccessPermissions","accessPermissions","allowAdditionalCollaborators","forkDestinations","directSettings","toUpperCase","action","hr","teams","inheritedSettings","registerReactAppFactory","routes","jsonRoute","Component","policyName","TrustedTypesPolicyError","ghTrustedTypes","createPolicy","trustedTypesPolicy","apply","policy","isStaff","fallback","fallbackOnError","sanitize","silenceErrorReporting","sendStats","incrementKey","trustedTypesPolicyName","policyOutput","Promise","resolve","startTime","performance","sanitized","dompurify","FORBID_ATTR","endTime","err","output","sendEvent","outputLength","sanitizedLength","executionTime","globalThis","unimplemented","functionName","fallbacks","createHTML","createScript","registeredPolicies","__TRUSTED_TYPE_POLICIES__","trustedTypes","rules","freeze","hasWarnedHubberAboutTrustedTypes","ssrSafeDocument","violatedDirective","console","warn","AliveTestProvider","AliveTestContext","testSubscribeToAlive","signedChannel","initialMessages","users","setTimeout","dispatchAliveTestMessage","isMounted","useIsMounted","unsubscribeFromAlive","closed","subscribeToAlive","resp","testIdProps","container","isSelectable","useListViewSelection","ListItemUnreadIndicator","description","newActivity","useListViewVariant","useListItemStatus","setHasNewActivity","useListItemNewActivity","trimmedDescription","trim","outer","defaultVariant","hasNewActivity","inner","childrenArray","Children","toArray","titleIndex","child","isValidElement","nonTitleChildren","concat","compact","TitleTag","ListViewAnnouncements","ListFilters","ListViewActionBar","density","actionsLabel","densityToggle","nonCollapsibleActions","GitHubUiActionBar","densityStyles","ListViewSectionFilters","links","sectionFilterLink","index","ListViewSelectAllCheckbox","onToggle","useListViewTitle","selectedCount","countOnPage","isSelectAllChecked","anyItemsSelected","multiPageSelectionAllowed","useListViewMultiPageSelection","idPrefix","useId","checkboxRef","srRef","notAllItemsSelected","max","isIndeterminate","units","suffix","srString","handleBulkSelectToggle","announceFromElement","checkboxId","formControlContainer","indeterminate","onKeyDown","tabIndex","visuallyHidden","p","count","aria-hidden","assistiveAnnouncement","sectionFilters","actionsStyle","actionsSx","actionsClassName","onToggleSelectAll","actionBarProps","useListViewId","setHasMetadataTitle","useNextHeaderTag","announceRef","isArray","spacious","heading","aria-live","aria-atomic","forwardRef","reloadDocument","preventAutofocus","AppContext","resolvePath","ssrSafeLocation","matchRoutes","RouterLink","PREVENT_AUTOFOCUS_KEY","NavLink","RouterNavLink"],"sourceRoot":""}