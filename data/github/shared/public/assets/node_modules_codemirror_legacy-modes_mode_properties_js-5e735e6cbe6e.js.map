{"version":3,"file":"chunk-node_modules_codemirror_legacy-modes_mode_properties_js-xxxxxxxxxxxx.js","mappings":"uLAAO,IAAMA,EAAa,CACxBC,KAAM,aAENC,MAAO,SAASC,CAAM,CAAEC,CAAK,EAC3B,IAAIC,EAAMF,EAAOE,GAAG,IAAMD,EAAME,YAAY,CACxCC,EAAMJ,EAAOI,GAAG,GAkBpB,GAhBAH,EAAME,YAAY,CAAG,GAEjBD,IACED,EAAMI,aAAa,EACrBJ,EAAMK,WAAW,CAAG,GACpBL,EAAMI,aAAa,CAAG,IAEtBJ,EAAMM,QAAQ,CAAG,OAIjBH,GAAO,CAAEH,EAAMI,aAAa,GAC9BJ,EAAMK,WAAW,CAAG,GACpBL,EAAMM,QAAQ,CAAG,OAGfL,EACF,KAAMF,EAAOQ,QAAQ,KAGvB,IAAIC,EAAKT,EAAOU,IAAI,UAEpB,GAAYD,CAAAA,MAAAA,GAAcA,MAAAA,GAAcA,MAAAA,CAAS,GAC/CR,EAAMM,QAAQ,CAAG,UACjBP,EAAOW,SAAS,GACT,WACET,GAAOO,MAAAA,GAChBR,EAAME,YAAY,CAAG,GACrBH,EAAOY,MAAM,CAAC,KAAMZ,EAAOa,GAAG,CAAC,KACxB,UACEJ,MAAAA,GAAcA,MAAAA,GACvBR,EAAMM,QAAQ,CAAG,QACV,OACS,OAAPE,GAAeR,UAAAA,EAAMM,QAAQ,EAClCP,EAAOI,GAAG,IAEZH,CAAAA,EAAMI,aAAa,CAAG,EAAG,EAItBJ,EAAMM,QAAQ,CACvB,EAEAO,WAAY,WACV,MAAO,CACLP,SAAW,MACXF,cAAgB,GAChBC,YAAc,GACdH,aAAe,EACjB,CACF,CAEF,C","sources":["node_modules/@codemirror/legacy-modes/mode/properties.js"],"sourcesContent":["export const properties = {\n  name: \"properties\",\n\n  token: function(stream, state) {\n    var sol = stream.sol() || state.afterSection;\n    var eol = stream.eol();\n\n    state.afterSection = false;\n\n    if (sol) {\n      if (state.nextMultiline) {\n        state.inMultiline = true;\n        state.nextMultiline = false;\n      } else {\n        state.position = \"def\";\n      }\n    }\n\n    if (eol && ! state.nextMultiline) {\n      state.inMultiline = false;\n      state.position = \"def\";\n    }\n\n    if (sol) {\n      while(stream.eatSpace()) {}\n    }\n\n    var ch = stream.next();\n\n    if (sol && (ch === \"#\" || ch === \"!\" || ch === \";\")) {\n      state.position = \"comment\";\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (sol && ch === \"[\") {\n      state.afterSection = true;\n      stream.skipTo(\"]\"); stream.eat(\"]\");\n      return \"header\";\n    } else if (ch === \"=\" || ch === \":\") {\n      state.position = \"quote\";\n      return null;\n    } else if (ch === \"\\\\\" && state.position === \"quote\") {\n      if (stream.eol()) {  // end of line?\n        // Multiline value\n        state.nextMultiline = true;\n      }\n    }\n\n    return state.position;\n  },\n\n  startState: function() {\n    return {\n      position : \"def\",       // Current position, \"def\", \"quote\" or \"comment\"\n      nextMultiline : false,  // Is the next line multiline value\n      inMultiline : false,    // Is the current line a multiline value\n      afterSection : false    // Did we just open a section\n    };\n  }\n\n};\n"],"names":["properties","name","token","stream","state","sol","afterSection","eol","nextMultiline","inMultiline","position","eatSpace","ch","next","skipToEnd","skipTo","eat","startState"],"sourceRoot":""}