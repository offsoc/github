<%# erblint:counter DeprecatedComponentsCounter 2 %>
<%= render Primer::Beta::Subhead.new(display: :block, mb: 0) do |component| %>
  <% component.with_heading(display: :flex, align_items: :center) do %>
    <%= render(Primer::Beta::Heading.new(tag: :h2, flex: :auto, test_selector: "show-pattern-read-only-subheading")) { pattern.display_name } %>
  <% end %>
<% end %>
<%= render(Primer::Box.new(display: :block, mt: 4)) do %>
  <h5 class="mb-1">Secret format</h5>
  <p class="color-fg-muted mt-1 f5">The pattern for the secret, specified as a regular expression. <%= link_to "Learn more about defining custom patterns", "#{GitHub.help_url}/code-security/secret-security/defining-custom-patterns-for-secret-scanning", class: "Link--inTextBlock" %>.</p>
  <%= render(Primer::Box.new(bg: :subtle, p: 3, border_radius: 2)) do %>
    <%= render(Primer::Beta::Text.new(font_family: :mono, font_size: 5, test_selector: "show-pattern-read-only-expression")) { pattern.expression } %>
  <% end %>
  <div class="js-details-container Details color-fg-muted mt-1">
    <%= render Primer::ButtonComponent.new(scheme: :link, color: :muted, ml: 0, mt: 4, underline: false, classes: "Details-content--shown js-details-target", aria: { expanded: false }) do %>
      <%= render Primer::Beta::Octicon.new(icon: "chevron-right") %> More options
    <% end %>
    <%= render Primer::ButtonComponent.new(scheme: :link, color: :muted, ml: 0, mt: 4, underline: false, classes: "Details-content--hidden js-details-target", aria: { expanded: true }) do %>
      <%= render Primer::Beta::Octicon.new(icon: "chevron-down") %> Less options
    <% end %>
    <div class="mt-4 mb-0 Details-content--hidden">
      <%= render(Primer::Box.new(display: :flex, justify_content: :space_between, mb: 4)) do %>
        <%= render(Primer::Box.new(flex: :auto, mr: 2)) do %>
          <h5 class="mb-2">Before secret</h5>
          <%= render(Primer::Box.new(bg: :subtle, p: 3, border_radius: 2)) do %>
            <%= render(Primer::Beta::Text.new(font_family: :mono, font_size: 5)) { start_delimiter } %>
          <% end %>
        <% end %>
        <%= render(Primer::Box.new(flex: :auto)) do %>
          <h5 class="mb-2">After secret</h5>
          <%= render(Primer::Box.new(bg: :subtle, p: 3, border_radius: 2)) do %>
            <%= render(Primer::Beta::Text.new(font_family: :mono, font_size: 5)) { end_delimiter } %>
          <% end %>
        <% end %>
      <% end %>
      <% unless post_processing_must_match.empty? && post_processing_must_not_match.empty? %>
        <h5 class="mt-4 mb-2">Additional match requirements</h5>
      <% end %>
      <% unless post_processing_must_match.empty? %>
        <p class="f5 mb-2 pt-3">Must match:</p>
        <% post_processing_must_match.each do |expression| %>
          <%= render(Primer::Box.new(bg: :subtle, p: 3, border_radius: 2, mb: 3)) do %>
            <%= render(Primer::Beta::Text.new(font_family: :mono, font_size: 5)) { expression } %>
          <% end %>
        <% end %>
      <% end %>
      <% unless post_processing_must_not_match.empty? %>
        <p class="f5 mb-2 pt-3">Must not match:</p>
        <% post_processing_must_not_match.each do |expression| %>
          <%= render(Primer::Box.new(bg: :subtle, p: 3, border_radius: 2, mb: 3)) do %>
            <%= render(Primer::Beta::Text.new(font_family: :mono, font_size: 5)) { expression } %>
          <% end %>
        <% end %>
      <% end %>
    </div>
  </div>
  <%= form_with \
    id: "test-custom-pattern-form",
    class: "js-test-custom-secret-scanning-pattern",
    data: { "source-is-readonly": true }, # In js, we look for data-source-is-readonly
    url: @test_pattern_path,
    method: :post do |form|
  %>
    <%= form.hidden_field :display_name, value: pattern.display_name %>
    <%= form.hidden_field :secret_format, value: pattern.expression %>
    <%= form.hidden_field :before_secret, value: start_delimiter %>
    <%= form.hidden_field :after_secret, value: end_delimiter %>
    <% offset = 0 %>
    <% post_processing_must_match.each_with_index do |expression, index| %>
      <%= form.hidden_field "post_processing_#{index}", value: expression %>
      <%= form.hidden_field "post_processing_rule_#{index}", value: :must_match %>
      <% offset = offset + 1%>
    <% end %>
    <% post_processing_must_not_match.each_with_index do |expression, index| %>
      <%= form.hidden_field "post_processing_#{index + offset}", value: expression %>
      <%= form.hidden_field "post_processing_rule_#{index + offset}", value: :must_not_match %>
    <% end %>
    <%= render(Primer::Box.new(display: :flex, mt: 4)) do %>
      <%= render(Primer::Box.new(flex: :auto)) do %>
        <div class="form-group-header mb-1 d-inline-block">
          <%= form.label "Test string", for: "test_code" %>
        </div>
        <div class="js-test-pattern-matches color-fg-default d-inline-block"></div>
        <div class="form-group-body">
          <%= form.text_area :test_code,
            id: "test_code",
            rows: "6",
            aria_label: "Test code changes",
            class: "js-test-code form-control input-monospace input-contrast input-block",
            type: "text"
          %>
        </div>
      <% end %>
    <% end %>
  <% end %>
  <%= render Primer::Beta::Text.new(tag: :p, color: :muted, font_size: 5, mt: 4, test_selector: "show-pattern-read-only-access-text") do %>
    You can only edit the patterns that you create.
  <% end %>
<% end %>
<%= render SecretScanning::CustomPatterns::DangerZoneComponent.new(
  pattern: @pattern,
  pattern_state: pattern_state,
  remove_pattern_path: @remove_pattern_path,
) %>
