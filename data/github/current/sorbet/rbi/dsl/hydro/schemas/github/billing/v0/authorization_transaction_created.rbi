# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Billing::V0::AuthorizationTransactionCreated`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Billing::V0::AuthorizationTransactionCreated`.

class Hydro::Schemas::Github::Billing::V0::AuthorizationTransactionCreated
  sig do
    params(
      account_type: T.nilable(T.any(Symbol, Integer)),
      authorization_amount_in_cents: T.nilable(Integer),
      billing_locked: T.nilable(T::Boolean),
      billing_unlocked: T.nilable(T::Boolean),
      business_account: T.nilable(Hydro::Schemas::Github::V1::Entities::Business),
      declined: T.nilable(T::Boolean),
      payment_method: T.nilable(Hydro::Schemas::Github::Billing::V0::Entities::PaymentMethod),
      processor_response: T.nilable(Google::Protobuf::StringValue),
      processor_response_code: T.nilable(Google::Protobuf::StringValue),
      success: T.nilable(T::Boolean),
      user_account: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(account_type: nil, authorization_amount_in_cents: nil, billing_locked: nil, billing_unlocked: nil, business_account: nil, declined: nil, payment_method: nil, processor_response: nil, processor_response_code: nil, success: nil, user_account: nil); end

  sig { returns(T.nilable(Symbol)) }
  def BillableEntity; end

  sig { returns(T.any(Symbol, Integer)) }
  def account_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def account_type=(value); end

  sig { returns(Integer) }
  def authorization_amount_in_cents; end

  sig { params(value: Integer).void }
  def authorization_amount_in_cents=(value); end

  sig { returns(T::Boolean) }
  def billing_locked; end

  sig { params(value: T::Boolean).void }
  def billing_locked=(value); end

  sig { returns(T::Boolean) }
  def billing_unlocked; end

  sig { params(value: T::Boolean).void }
  def billing_unlocked=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Business)) }
  def business_account; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Business)).void }
  def business_account=(value); end

  sig { void }
  def clear_account_type; end

  sig { void }
  def clear_authorization_amount_in_cents; end

  sig { void }
  def clear_billing_locked; end

  sig { void }
  def clear_billing_unlocked; end

  sig { void }
  def clear_business_account; end

  sig { void }
  def clear_declined; end

  sig { void }
  def clear_payment_method; end

  sig { void }
  def clear_processor_response; end

  sig { void }
  def clear_processor_response_code; end

  sig { void }
  def clear_success; end

  sig { void }
  def clear_user_account; end

  sig { returns(T::Boolean) }
  def declined; end

  sig { params(value: T::Boolean).void }
  def declined=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Billing::V0::Entities::PaymentMethod)) }
  def payment_method; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Billing::V0::Entities::PaymentMethod)).void }
  def payment_method=(value); end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def processor_response; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def processor_response=(value); end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def processor_response_code; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def processor_response_code=(value); end

  sig { returns(T::Boolean) }
  def success; end

  sig { params(value: T::Boolean).void }
  def success=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def user_account; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def user_account=(value); end
end
