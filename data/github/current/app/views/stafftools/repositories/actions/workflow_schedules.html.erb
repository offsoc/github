<%= render Primer::Beta::Subhead.new do |component| %>
  <% component.with_heading(tag: :h2) do %>
    <%= workflow_schedule_data_count %> Workflow <%= "schedule".pluralize(workflow_schedule_data_count) %>
  <% end %>
  <% component.with_actions(display: :flex) do %>
    <%= form_tag resync_actions_workflow_schedules_stafftools_repository_path, method: :post do %>
      <%= render Primer::Beta::Button.new(type: :submit, scheme: :danger, float: :right, ml: 2) do %>Resync schedules<% end %>
    <% end %>
  <% end %>
<% end %>
<% if workflow_schedule_data.none? %>
  <%= render Primer::Beta::Blankslate.new do |c| %>
    <% c.with_heading(tag: :h2) do %>
      There are no workflow schedules registered for this repository.
    <% end %>
  <% end %>
<% else %>
  <% if workflow_schedule_data_count >= 100 %>
    <%= render Primer::Alpha::Banner.new(scheme: :warning, dismiss_scheme: :none) do %>
      This page only displays the first 100 workflow schedules.
    <% end %>
  <% end %>
  <% workflow_schedule_data.each do |data| %>
    <%= render(Primer::Beta::BorderBox.new(padding: :condensed, classes: "summary")) do |component| %>
      <% component.with_header(font_weight: :bold) do %>
        <%= link_to data.schedule.workflow_file_path, repository_url(repository, repository.default_branch_ref.qualified_name, data.schedule.workflow_file_path) %>
      <% end %>
      <% component.with_body do %>
        <dl>
          <dt>Identifier</dt>
          <dd><%= data.schedule.workflow_identifier %></dd>
        </dl>
        <dl>
          <dt>Schedule</dt>
          <dd><%= data.schedule.schedule %></dd>
        </dl>
        <%= render(Primer::Beta::BorderBox.new(padding: :condensed, classes: "summary")) do |actor_component| %>
          <% header_style = data.actor.nil? || data.actor.disabled? || data.actor.spammy? || (data.actor.no_verified_emails? && !data.actor.bot?) ?
            "background-color: LavenderBlush;" : "" %>
          <% actor_component.with_header(font_weight: :bold, style: header_style) do %>
            <dl>
              <dt>Actor</dt>
              <% actor_suffix = data.actor.present? && data.actor.bot? ? " (bot)" : "" %>
              <dd><%= link_to data.schedule.actor_login, stafftools_user_path(data.schedule.actor_login) %><%= actor_suffix %></dd>
            </dl>
          <% end %>
          <% actor_component.with_body do %>
            <% if data.actor.present? %>
              <dl>
                <dt>Is Enabled</dt>
                <dd><%= data.actor.disabled? ? primer_octicon(:x, color: :danger) : primer_octicon(:check, color: :success) %></dd>
              </dl>
              <dl>
                <dt>Is Not Spammy</dt>
                <dd><%= data.actor.spammy? ? primer_octicon(:x, color: :danger) : primer_octicon(:check, color: :success) %></dd>
              </dl>
              <% if !data.actor.bot? %>
                <dl>
                  <dt>Has Verified Email</dt>
                  <dd><%= data.actor.no_verified_emails? ? primer_octicon(:x, color: :danger) : primer_octicon(:check, color: :success) %></dd>
                </dl>
              <% end %>
            <% else %>
              <%= primer_octicon(:x, color: :danger) %> Actor not found. Was the account deleted?
            <% end %>
          <% end %>
        <% end %>
        <dl>
          <dt>Commit SHA</dt>
          <dd><%= link_to data.schedule.commit_sha, commit_path(data.schedule.commit_sha, repository) %></dd>
        </dl>
        <dl>
          <dt>Tier</dt>
          <dd><%= data.schedule.tier %></dd>
        </dl>
        <dl>
          <dt>Scatter Offset</dt>
          <dd><%= data.schedule.scatter_offset %></dd>
        </dl>
        <dl>
          <dt>Created At</dt>
          <dd><%= data.schedule.created_at&.to_time&.utc %></dd>
        </dl>
        <dl>
          <dt>Next Run At</dt>
          <dd><%= data.schedule.next_run_at&.to_time&.utc %></dd>
        </dl>
      <% end%>
      <% component.with_row do %>
        <%= form_tag update_actions_workflow_schedules_stafftools_repository_path, method: :post do %>
          <input type="text" name="actor_login" class="form-control" placeholder="new actor username">
          <input type="hidden" name="workflow_file_path" value="<%= URI::encode_www_form_component(data.schedule.workflow_file_path) %>">
          <%= render Primer::Beta::Button.new(type: :submit, scheme: :danger) do %>Recreate<% end %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% end %>
