# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::OrganizationCreate`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::OrganizationCreate`.

class Hydro::Schemas::Github::V1::OrganizationCreate
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      actor_email: T.nilable(Hydro::Schemas::Github::V1::Entities::UserEmail),
      actor_profile: T.nilable(Hydro::Schemas::Github::V1::Entities::Profile),
      first_organization_adminable_by_actor: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization),
      number_of_organizations_adminable_by_actor: T.nilable(Integer),
      organization: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext),
      visitor_id: T.nilable(String)
    ).void
  end
  def initialize(actor: nil, actor_email: nil, actor_profile: nil, first_organization_adminable_by_actor: nil, number_of_organizations_adminable_by_actor: nil, organization: nil, request_context: nil, visitor_id: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::UserEmail)) }
  def actor_email; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::UserEmail)).void }
  def actor_email=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Profile)) }
  def actor_profile; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Profile)).void }
  def actor_profile=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_actor_email; end

  sig { void }
  def clear_actor_profile; end

  sig { void }
  def clear_first_organization_adminable_by_actor; end

  sig { void }
  def clear_number_of_organizations_adminable_by_actor; end

  sig { void }
  def clear_organization; end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_visitor_id; end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)) }
  def first_organization_adminable_by_actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)).void }
  def first_organization_adminable_by_actor=(value); end

  sig { returns(Integer) }
  def number_of_organizations_adminable_by_actor; end

  sig { params(value: Integer).void }
  def number_of_organizations_adminable_by_actor=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)) }
  def organization; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)).void }
  def organization=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(String) }
  def visitor_id; end

  sig { params(value: String).void }
  def visitor_id=(value); end
end
