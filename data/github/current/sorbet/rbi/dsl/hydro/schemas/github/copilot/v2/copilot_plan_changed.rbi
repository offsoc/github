# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Copilot::V2::CopilotPlanChanged`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Copilot::V2::CopilotPlanChanged`.

class Hydro::Schemas::Github::Copilot::V2::CopilotPlanChanged
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      business: T.nilable(Hydro::Schemas::Github::V1::Entities::Business),
      old_plan: T.nilable(T.any(Symbol, Integer)),
      organization: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization),
      plan: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(actor: nil, business: nil, old_plan: nil, organization: nil, plan: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Business)) }
  def business; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Business)).void }
  def business=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_business; end

  sig { void }
  def clear_old_plan; end

  sig { void }
  def clear_organization; end

  sig { void }
  def clear_plan; end

  sig { returns(T.any(Symbol, Integer)) }
  def old_plan; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def old_plan=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)) }
  def organization; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)).void }
  def organization=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def plan; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def plan=(value); end
end
