{"version":3,"file":"chunk-ui_packages_codespace-share-dialog-element_codespace-share-dialog-element_ts-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/codespace-share-dialog-element/codespace-share-dialog-element.ts"],"sourcesContent":["import {controller, target, targets, attr} from '@github/catalyst'\nimport type {ClipboardCopyElement} from '@github/clipboard-copy-element'\n\n@controller\nexport class CodespaceShareDialogElement extends HTMLElement {\n  @attr baseUrlTemplate = ''\n  @attr badgeUrl = ''\n  @attr templateMode = false\n  @attr skipTemplate = false\n  @attr quickstartEnabled = false\n  @attr devcontainerEnabled = false\n\n  @target devcontainerDisabledButton: HTMLInputElement\n  @target devcontainerDisabledButtonText: HTMLElement\n  @target devcontainerPicker: HTMLElement\n  @targets devcontainers: HTMLInputElement[]\n  @target urlTextInput: HTMLInputElement\n  @target urlClipboardButton: ClipboardCopyElement\n  @target htmlTextInput: HTMLInputElement\n  @target htmlClipboardButton: ClipboardCopyElement\n  @target markdownTextInput: HTMLInputElement\n  @target markdownClipboardButton: ClipboardCopyElement\n\n  connectedCallback() {\n    this.urlTextInput.value = this.baseUrlTemplate\n    if (this.devcontainerDisabledButton) this.devcontainerDisabledButton.hidden = false\n    if (this.devcontainerPicker) this.devcontainerPicker.hidden = true\n    this.updateUrl()\n  }\n\n  toggleSkipTemplate(event: Event) {\n    const element = event.currentTarget as HTMLInputElement\n    this.skipTemplate = !element.checked\n    this.updateUrl()\n  }\n\n  toggleQuickstart(event: Event) {\n    const element = event.currentTarget as HTMLInputElement\n    this.quickstartEnabled = element.checked\n    this.updateUrl()\n  }\n\n  toggleDevcontainer(event: Event) {\n    const element = event.currentTarget as HTMLInputElement\n    this.devcontainerEnabled = element.checked\n    if (this.devcontainerEnabled) {\n      this.devcontainerDisabledButton.hidden = true\n      this.devcontainerPicker.hidden = false\n    } else {\n      this.devcontainerDisabledButton.hidden = false\n      this.devcontainerPicker.hidden = true\n    }\n    this.updateUrl()\n  }\n\n  updateUrl() {\n    const url = new URL(this.baseUrlTemplate, window.location.origin)\n    const params = new URLSearchParams(url.search.slice(1))\n    if (this.templateMode && this.skipTemplate) params.append('template', 'false')\n    if (this.quickstartEnabled) params.append('quickstart', '1')\n    if (this.devcontainerEnabled) {\n      const selectedDevcontainer = this.devcontainers.find(el => el.checked)\n      if (selectedDevcontainer) {\n        this.devcontainerDisabledButtonText.textContent = selectedDevcontainer.getAttribute('data-display-name')\n        params.append('devcontainer_path', selectedDevcontainer.value)\n      }\n    }\n    url.search = params.toString()\n    const newUrl = url.toString()\n    // This is used in text input and clipboard copy values so we need a raw string\n    // eslint-disable-next-line github/unescaped-html-literal\n    const htmlText = `<a href='${newUrl}'><img src='${this.badgeUrl}' alt='Open in GitHub Codespaces' style='max-width: 100%;'></a>`\n    const markdownText = `[![Open in GitHub Codespaces](${this.badgeUrl})](${newUrl})`\n\n    this.urlTextInput.value = newUrl\n    this.urlClipboardButton.value = newUrl\n    this.htmlTextInput.value = htmlText\n    this.htmlClipboardButton.value = htmlText\n    this.markdownTextInput.value = markdownText\n    this.markdownClipboardButton.value = markdownText\n  }\n}\n"],"names":["CodespaceShareDialogElement","HTMLElement","connectedCallback","urlTextInput","value","baseUrlTemplate","devcontainerDisabledButton","hidden","devcontainerPicker","updateUrl","toggleSkipTemplate","event","element","currentTarget","skipTemplate","checked","toggleQuickstart","quickstartEnabled","toggleDevcontainer","devcontainerEnabled","url","URL","window","location","origin","params","URLSearchParams","search","slice","templateMode","append","selectedDevcontainer","devcontainers","find","el","devcontainerDisabledButtonText","textContent","getAttribute","toString","newUrl","htmlText","badgeUrl","markdownText","urlClipboardButton","htmlTextInput","htmlClipboardButton","markdownTextInput","markdownClipboardButton","attr","target","targets","controller"],"sourceRoot":""}