{"version":3,"file":"ui_packages_mergebox_index_ts-xxxxxxxxxxxx.js","mappings":"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,MAAS,KACT,KAAQ,KACR,aAAgB,aAChB,KAAQ,cACR,KAAQ,aACR,OAAU,GACV,WAAc,CACXF,EACF,CACD,WAAc,IAChB,EACA,CACE,MAAS,KACT,KAASI,EACT,aAAgB,+BAChB,KAAQ,cACR,KAAQ,oBACR,OAAU,GACV,WAAc,CACXC,EACAC,EACAC,EACAL,EACD,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,KAChB,KAAQ,cACR,KAAQ,aACR,OAAU,GACV,WAAc,CACXM,EACAC,EACAC,EACD,CACE,KAAQ,iBACR,WAAc,CACZ,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,KAChB,KAAQ,cACR,KAAQ,cACR,OAAU,GACV,WAAc,CACXD,EACAE,EACAD,EACAE,EACF,CACD,WAAc,IAChB,EACD,CACD,KAAQ,4BACR,YAAe,IACjB,EACCC,EACF,CACD,WAAc,IAChB,EACD,CACD,WAAc,IAChB,EACCC,EACAC,EACAb,EACAc,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACF,CACD,KAAQ,KACR,oBAAuB,CACrB,CACE,KAAQ,eACR,KAAQ,aACV,EACD,EAEJ,CACD,KAAQ,cACR,YAAe,IACjB,EACD,CACD,WAAc,IAChB,EACA,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,OAChB,KAAQ,cACR,KAAQ,SACR,OAAU,GACV,WAAe1C,EACf,WAAc,IAChB,EACD,CACD,KAAQ,QACR,YAAe,IACjB,EACA,KAAQ,UACR,UAAa,CACX,oBAAwBT,EACxB,KAAQ,YACR,KAAQ,uBACR,WAAc,CACZ,CACE,MAAS,cACT,KAASC,EACT,aAAgB,KAChB,KAAQ,cACR,KAAQ,OACR,OAAU,GACV,WAAc,CACXwB,EACAd,EACD,CACE,KAAQ,iBACR,WAAc,CACXT,EACAC,EACAC,EACAE,EACAC,EACD,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,aAChB,KAAQ,cACR,KAAQ,iBACR,OAAU,GACV,WAAc,CACZ,CACE,MAAS,KACT,K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Q,cACR,KAAQ,oBACR,OAAU,GACV,WAAc,CACXC,EACAC,EACAC,EACAL,EACD,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,KAChB,KAAQ,cACR,KAAQ,aACR,OAAU,GACV,WAAc,CACXM,EACAC,EACAC,EACD,CACE,KAAQ,iBACR,WAAc,CACZ,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,KAChB,KAAQ,cACR,KAAQ,cACR,OAAU,GACV,WAAc,CACXD,EACAE,EACAD,EACAE,EACF,CACD,WAAc,IAChB,EACD,CACD,KAAQ,4BACR,YAAe,IACjB,EACCC,EACF,CACD,WAAc,IAChB,EACD,CACD,WAAc,IAChB,EACCC,EACAC,EACAb,EACAc,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACF,CACD,KAAQ,KACR,oBAAuB,CACrB,CACE,KAAQ,eACR,KAAQ,aACV,EACD,EAEH,CACE,KAAQ,KACR,KAAQ,iBACR,KAAQ,4BACV,EACD,CACD,WAAc,IAChB,EACD,CACD,WAAc,IAChB,EACD,CACD,WAAc,IAChB,EACD,CACD,KAAQ,WACR,YAAe,IACjB,EACA,KAAQ,UACR,UAAa,CACX,oBAAwBlD,EACxB,KAAQ,YACR,KAAQ,6BACR,WAAc,CACZ,CACE,MAAS,KACT,KAASC,EACT,aAAgB,4BAChB,KAAQ,cACR,KAAQ,qBACR,OAAU,GACV,WAAc,CACZ,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,kBAChB,KAAQ,cACR,KAAQ,kBACR,OAAU,GACV,WAAc,CACZ,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,cAChB,KAAQ,cACR,KAAQ,cACR,OAAU,GACV,WAAc,CACXC,EACAC,EACAC,EACAE,EACAC,EACD,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,aAChB,KAAQ,cACR,KAAQ,iBACR,OAAU,GACV,WAAc,CACX02B,EACAx2B,EACAC,EACD,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,SACR,WAAc,IAChB,EA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AAc,sBAChB,EACCS,EACF,CACD,WAAc,IAChB,EACD,CACD,WAAc,IAChB,EACD,CACD,WAAc,qCAChB,EACA,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,kBAChB,KAAQ,cACR,KAAQ,kBACR,OAAU,GACV,WAAc,CACXC,EACAD,EACF,CACD,WAAc,IAChB,EACA,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,aAChB,KAAQ,cACR,KAAQ,aACR,OAAU,GACV,WAAc,CACXF,EACF,CACD,WAAc,IAChB,EACA,CACE,MAAS,KACT,KAASI,EACT,aAAgB,+BAChB,KAAQ,cACR,KAAQ,oBACR,OAAU,GACV,WAAc,CACXC,EACAC,EACAC,EACAL,EACD,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,KAChB,KAAQ,cACR,KAAQ,aACR,OAAU,GACV,WAAc,CACXM,EACAC,EACAC,EACD,CACE,KAAQ,iBACR,WAAc,CACZ,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,KAChB,KAAQ,cACR,KAAQ,cACR,OAAU,GACV,WAAc,CACXD,EACAE,EACAD,EACAE,EACF,CACD,WAAc,IAChB,EACD,CACD,KAAQ,4BACR,YAAe,IACjB,EACCC,EACF,CACD,WAAc,IAChB,EACD,CACD,WAAc,IAChB,EACCC,EACAC,EACAb,EACAc,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACF,CACD,KAAQ,KACR,oBAAuB,CACrB,CACE,KAAQ,eACR,KAAQ,aACV,EACD,EAEJ,CACD,WAAc,IAChB,EACD,CACD,WAAc,IAChB,EACD,CACD,KAAQ,WACR,YAAe,IACjB,EACA,KAAQ,UACR,UAAa,CACX,oBAAwBlD,EACxB,KAAQ,YACR,KAAQ,kCACR,WAAc,CACZ,CACE,MAAS,KACT,KAASC,EACT,aAAgB,iCAChB,KAAQ,cACR,KAAQ,0BACR,OAAU,GACV,WAAc,CACZ,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,cAChB,KAAQ,cACR,KAAQ,cACR,OAAU,G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","sources":["ui/packages/assert-data-present/assert-data-present.ts","ui/packages/mergebox/components/sections/merge-section/__generated__/MergeSection_enablePullRequestAutoMergeMutation.graphql.ts","ui/packages/mergebox/hooks/__generated__/useLoadMergeBoxQuery.graphql.ts","ui/packages/mergebox/hooks/__generated__/useLoadMergeBoxQuery_pullRequest.graphql.ts","ui/packages/mergebox/contexts/MergeMethodContext.tsx","ui/packages/mergebox/components/sections/common/MergeBoxSectionHeader.module.css","ui/packages/mergebox/components/sections/common/ExpandableSectionIcon.tsx","ui/packages/mergebox/components/sections/common/MergeBoxSectionHeader.tsx","ui/packages/mergebox/helpers/status-check-helpers.ts","ui/packages/mergebox/components/sections/checks/ExpandedChecks.module.css","ui/packages/mergebox/components/sections/common/ExpandableGroupIcon.tsx","ui/packages/mergebox/components/sections/checks/ChecksGroup.tsx","ui/packages/mergebox/components/sections/checks/StatusCheckRow.module.css","ui/packages/mergebox/components/sections/checks/StatusCheckRow.tsx","ui/packages/mergebox/components/sections/checks/ExpandedChecksList.tsx","ui/packages/mergebox/components/sections/common/MergeBoxExpandable.module.css","ui/packages/mergebox/components/sections/common/MergeBoxExpandable.tsx","ui/packages/mergebox/page-data/loaders/use-status-checks-page-data.ts","ui/packages/mergebox/components/sections/checks/StatusCheckStatesIcon.module.css","ui/packages/mergebox/components/sections/checks/StatusCheckStatesIcon.tsx","ui/packages/mergebox/constants.ts","ui/packages/mergebox/components/sections/ChecksSection.tsx","ui/packages/mergebox/hooks/use-status-checks-live-updates.ts","ui/packages/mergebox/components/sections/ChecksSectionFetchFailure.tsx","ui/packages/mergebox/helpers/mergeability-status.ts","ui/packages/mergebox/components/ClosedOrMergedStateMergeBox.tsx","ui/packages/mergebox/mutations/delete-pull-request-head-ref-mutation.ts","ui/packages/mergebox/mutations/restore-pull-request-head-ref.ts","ui/packages/mergebox/components/sections/common/CenteredLoadingSpinner.tsx","ui/packages/mergebox/components/sections/common/ButtonWithDropdown.tsx","ui/packages/mergebox/components/sections/common/AlertIcon.tsx","ui/packages/mergebox/components/sections/ConflictsSection.tsx","ui/packages/mergebox/mutations/update-pull-request-branch.ts","ui/packages/mergebox/hooks/use-load-merge-box-query.ts","ui/packages/mergebox/components/sections/merge-section/MergeQueueSection.tsx","ui/packages/mergebox/mutations/dequeue-pull-request-mutation.ts","ui/packages/mergebox/helpers/merge-button-text.ts","ui/packages/mergebox/mutations/merge-pull-request-mutation.ts","ui/packages/mergebox/components/ConfirmMerge.tsx","ui/packages/mergebox/hooks/use-enable-auto-merge-mutation.ts","ui/packages/mergebox/components/sections/merge-section/MergeDropdownOption.tsx","ui/packages/mergebox/components/sections/merge-section/BypassMergeRequirementsToggle.tsx","ui/packages/mergebox/components/sections/merge-section/DirectMergeActionsSection.tsx","ui/packages/mergebox/components/sections/merge-section/MergeSection.tsx","ui/packages/mergebox/hooks/use-disable-auto-merge-mutation.ts","ui/packages/mergebox/components/sections/BlockedSection.tsx","ui/packages/mergebox/mutations/mark-pull-request-ready-for-review-mutation.ts","ui/packages/mergebox/components/sections/DraftStateSection.tsx","ui/packages/mergebox/components/MergeBox.module.css","ui/packages/mergebox/components/MergeabilityIcon.module.css","ui/packages/mergebox/components/MergeabilityIcon.tsx","ui/packages/mergebox/components/sections/ReviewerSection.module.css","ui/packages/mergebox/components/sections/ReviewerSection.tsx","ui/packages/mergebox/accessible-review-summary.ts","ui/packages/mergebox/components/MergeBox.tsx","ui/packages/mergebox/page-data/loaders/use-merge-box-page-data.ts","ui/packages/mergebox/helpers/json-api-helpers.ts","ui/packages/mergebox/hooks/use-mergeability-live-updates.ts","ui/packages/mergebox/components/MergeabilitySidesheet.tsx","ui/packages/mergebox/components/MergeStatusButton.tsx","ui/packages/mergebox/helpers/merge-method-helpers.ts","ui/packages/mergebox/mutations/__generated__/deletePullRequestHeadRefMutation.graphql.ts","ui/packages/mergebox/mutations/__generated__/dequeuePullRequestMutation.graphql.ts","ui/packages/mergebox/mutations/__generated__/markPullRequestReadyForReviewMutation.graphql.ts","ui/packages/mergebox/mutations/__generated__/mergePullRequestMutation.graphql.ts","ui/packages/mergebox/mutations/__generated__/restorePullRequestHeadRefMutation.graphql.ts","ui/packages/mergebox/mutations/__generated__/updatePullRequestBranchMutation.graphql.ts","ui/packages/mergebox/types.ts","ui/packages/pull-request-page-data-tooling/hooks/use-page-data-url.ts","ui/packages/pull-request-page-data-tooling/payloads/page-data.ts","ui/packages/pull-request-page-data-tooling/query-client.ts","ui/packages/reviewer-avatar/review-states.ts","ui/packages/reviewer-avatar/ReviewerAvatar.tsx","ui/packages/use-alive/TestAliveSubscription.tsx","ui/packages/use-alive/use-alive.ts","ui/packages/use-previous-value/use-previous-value.ts","ui/packages/pull-request-page-data-tooling/contexts/PageDataContext.tsx","ui/packages/status-avatar/StatusAvatar.tsx","ui/packages/status-avatar/StatusIcon.tsx"],"sourcesContent":["export const errorMessage = 'Failed to load page data.'\n\nexport function assertDataPresent<T>(data: T): asserts data is NonNullable<T> {\n  if (data === undefined || data === null) {\n    throw new Error(errorMessage)\n  }\n}\n","/**\n * @generated SignedSource<<f971709a3296126c1351a9af65ae6fcc>>\n * @relayHash c30cc9ed82dd36123bd4173528be767d\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\n// @relayRequestID c30cc9ed82dd36123bd4173528be767d\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type MergeQueueMethod = \"GROUP\" | \"JUMP\" | \"SOLO\" | \"%future added value\";\nexport type PullRequestMergeMethod = \"MERGE\" | \"REBASE\" | \"SQUASH\" | \"%future added value\";\nexport type EnablePullRequestAutoMergeInput = {\n  authorEmail?: string | null | undefined;\n  clientMutationId?: string | null | undefined;\n  commitBody?: string | null | undefined;\n  commitHeadline?: string | null | undefined;\n  expectedHeadOid?: any | null | undefined;\n  mergeMethod?: PullRequestMergeMethod | null | undefined;\n  mergeQueueMethod?: MergeQueueMethod | null | undefined;\n  pullRequestId: string;\n};\nexport type MergeSection_enablePullRequestAutoMergeMutation$variables = {\n  input: EnablePullRequestAutoMergeInput;\n};\nexport type MergeSection_enablePullRequestAutoMergeMutation$data = {\n  readonly enablePullRequestAutoMerge: {\n    readonly pullRequest: {\n      readonly autoMergeRequest: {\n        readonly mergeMethod: PullRequestMergeMethod;\n      } | null | undefined;\n      readonly isInMergeQueue: boolean;\n      readonly viewerCanDisableAutoMerge: boolean;\n    } | null | undefined;\n  } | null | undefined;\n};\nexport type MergeSection_enablePullRequestAutoMergeMutation = {\n  response: MergeSection_enablePullRequestAutoMergeMutation$data;\n  variables: MergeSection_enablePullRequestAutoMergeMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"input\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"input\",\n    \"variableName\": \"input\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"AutoMergeRequest\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"autoMergeRequest\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"mergeMethod\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanDisableAutoMerge\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"isInMergeQueue\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"MergeSection_enablePullRequestAutoMergeMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"EnablePullRequestAutoMergePayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"enablePullRequestAutoMerge\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"PullRequest\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"pullRequest\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v4/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutation\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"MergeSection_enablePullRequestAutoMergeMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"EnablePullRequestAutoMergePayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"enablePullRequestAutoMerge\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"PullRequest\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"pullRequest\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v4/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": \"c30cc9ed82dd36123bd4173528be767d\",\n    \"metadata\": {},\n    \"name\": \"MergeSection_enablePullRequestAutoMergeMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": null\n  }\n};\n})();\n\n(node as any).hash = \"712be833d2b87a8412315dc097ad822a\";\n\nexport default node;\n","/**\n * @generated SignedSource<<dd0de40a553fe389b9e7db4b94493275>>\n * @relayHash 182187fb626bab1ed591bec846627ba6\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\n// @relayRequestID 182187fb626bab1ed591bec846627ba6\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type PullRequestMergeMethod = \"MERGE\" | \"REBASE\" | \"SQUASH\" | \"%future added value\";\nexport type useLoadMergeBoxQuery$variables = {\n  id: string;\n  mergeMethod?: PullRequestMergeMethod | null | undefined;\n};\nexport type useLoadMergeBoxQuery$data = {\n  readonly pullRequest: {\n    readonly \" $fragmentSpreads\": FragmentRefs<\"useLoadMergeBoxQuery_pullRequest\">;\n  } | null | undefined;\n  readonly viewer: {\n    readonly login: string;\n  };\n};\nexport type useLoadMergeBoxQuery = {\n  response: useLoadMergeBoxQuery$data;\n  variables: useLoadMergeBoxQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"mergeMethod\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"id\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"AutoMergeRequest\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"autoMergeRequest\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"mergeMethod\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"baseRefName\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"PullRequestCommitConnection\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"commits\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"totalCount\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"headRefOid\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"headRefName\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"login\",\n  \"storageKey\": null\n},\nv8 = [\n  (v7/*: any*/)\n],\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"isDraft\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"isInMergeQueue\",\n  \"storageKey\": null\n},\nv13 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"first\",\n    \"value\": 100\n  }\n],\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"authorCanPushToRepository\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"avatarUrl\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n},\nv17 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"first\",\n    \"value\": 10\n  }\n],\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"state\",\n  \"storageKey\": null\n},\nv19 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"position\",\n  \"storageKey\": null\n},\nv20 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"mergeMethod\",\n    \"variableName\": \"mergeMethod\"\n  }\n],\nv21 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"commitAuthor\",\n  \"storageKey\": null\n},\nv22 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"commitMessageBody\",\n  \"storageKey\": null\n},\nv23 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"commitMessageHeadline\",\n  \"storageKey\": null\n},\nv24 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"__typename\",\n  \"storageKey\": null\n},\nv25 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"message\",\n  \"storageKey\": null\n},\nv26 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"result\",\n  \"storageKey\": null\n},\nv27 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"ruleType\",\n  \"storageKey\": null\n},\nv28 = {\n  \"kind\": \"InlineFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"failureReasons\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"requiredReviewers\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"requiresCodeowners\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"PullRequestRuleRollup\",\n  \"abstractKey\": null\n},\nv29 = {\n  \"kind\": \"InlineFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"conflicts\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"isConflictResolvableInWeb\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"PullRequestMergeConflictStateCondition\",\n  \"abstractKey\": null\n},\nv30 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"mergeStateStatus\",\n  \"storageKey\": null\n},\nv31 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resourcePath\",\n  \"storageKey\": null\n},\nv32 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanAddAndRemoveFromMergeQueue\",\n  \"storageKey\": null\n},\nv33 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanDeleteHeadRef\",\n  \"storageKey\": null\n},\nv34 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanDisableAutoMerge\",\n  \"storageKey\": null\n},\nv35 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanEnableAutoMerge\",\n  \"storageKey\": null\n},\nv36 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanRestoreHeadRef\",\n  \"storageKey\": null\n},\nv37 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanUpdate\",\n  \"storageKey\": null\n},\nv38 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanUpdateBranch\",\n  \"storageKey\": null\n},\nv39 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerDidAuthor\",\n  \"storageKey\": null\n},\nv40 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"isAllowable\",\n  \"storageKey\": null\n},\nv41 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"AllowablePullRequestMergeAction\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"viewerMergeActions\",\n  \"plural\": true,\n  \"selections\": [\n    (v9/*: any*/),\n    (v40/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"AllowablePullRequestMergeMethod\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"mergeMethods\",\n      \"plural\": true,\n      \"selections\": [\n        (v9/*: any*/),\n        (v40/*: any*/),\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"isAllowableWithBypass\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv42 = {\n  \"alias\": \"stateChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"STATE\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"STATE\\\")\"\n},\nv43 = {\n  \"alias\": \"deployedChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"DEPLOYED\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"DEPLOYED\\\")\"\n},\nv44 = {\n  \"alias\": \"reviewStateChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"REVIEW_STATE\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"REVIEW_STATE\\\")\"\n},\nv45 = {\n  \"alias\": \"workflowsChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"WORKFLOWS\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"WORKFLOWS\\\")\"\n},\nv46 = {\n  \"alias\": \"mergeQueueChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"MERGE_QUEUE\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"MERGE_QUEUE\\\")\"\n},\nv47 = {\n  \"alias\": \"headRefChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"HEAD_REF\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"HEAD_REF\\\")\"\n},\nv48 = {\n  \"alias\": \"baseRefChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"BASE_REF\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"BASE_REF\\\")\"\n},\nv49 = {\n  \"alias\": \"commitHeadShaChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"COMMIT_HEAD_SHA\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"COMMIT_HEAD_SHA\\\")\"\n},\nv50 = {\n  \"alias\": \"gitMergeStateChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"GIT_MERGE_STATE\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"GIT_MERGE_STATE\\\")\"\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"useLoadMergeBoxQuery\",\n    \"selections\": [\n      {\n        \"alias\": \"pullRequest\",\n        \"args\": (v1/*: any*/),\n        \"concreteType\": null,\n        \"kind\": \"LinkedField\",\n        \"name\": \"node\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"InlineFragment\",\n            \"selections\": [\n              {\n                \"kind\": \"InlineDataFragmentSpread\",\n                \"name\": \"useLoadMergeBoxQuery_pullRequest\",\n                \"selections\": [\n                  (v2/*: any*/),\n                  (v3/*: any*/),\n                  (v4/*: any*/),\n                  (v5/*: any*/),\n                  (v6/*: any*/),\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Repository\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"headRepository\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": null,\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"owner\",\n                        \"plural\": false,\n                        \"selections\": (v8/*: any*/),\n                        \"storageKey\": null\n                      },\n                      (v9/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  (v10/*: any*/),\n                  (v11/*: any*/),\n                  (v12/*: any*/),\n                  {\n                    \"alias\": null,\n                    \"args\": (v13/*: any*/),\n                    \"concreteType\": \"PullRequestReviewConnection\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"latestOpinionatedReviews\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": \"PullRequestReviewEdge\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"edges\",\n                        \"plural\": true,\n                        \"selections\": [\n                          {\n                            \"alias\": null,\n                            \"args\": null,\n                            \"concreteType\": \"PullRequestReview\",\n                            \"kind\": \"LinkedField\",\n                            \"name\": \"node\",\n                            \"plural\": false,\n                            \"selections\": [\n                              (v14/*: any*/),\n                              {\n                                \"alias\": null,\n                                \"args\": null,\n                                \"concreteType\": null,\n                                \"kind\": \"LinkedField\",\n                                \"name\": \"author\",\n                                \"plural\": false,\n                                \"selections\": [\n                                  (v7/*: any*/),\n                                  (v15/*: any*/),\n                                  (v9/*: any*/),\n                                  (v16/*: any*/)\n                                ],\n                                \"storageKey\": null\n                              },\n                              {\n                                \"alias\": null,\n                                \"args\": (v17/*: any*/),\n                                \"concreteType\": \"TeamConnection\",\n                                \"kind\": \"LinkedField\",\n                                \"name\": \"onBehalfOf\",\n                                \"plural\": false,\n                                \"selections\": [\n                                  {\n                                    \"alias\": null,\n                                    \"args\": null,\n                                    \"concreteType\": \"TeamEdge\",\n                                    \"kind\": \"LinkedField\",\n                                    \"name\": \"edges\",\n                                    \"plural\": true,\n                                    \"selections\": [\n                                      {\n                                        \"alias\": null,\n                                        \"args\": null,\n                                        \"concreteType\": \"Team\",\n                                        \"kind\": \"LinkedField\",\n                                        \"name\": \"node\",\n                                        \"plural\": false,\n                                        \"selections\": [\n                                          (v9/*: any*/)\n                                        ],\n                                        \"storageKey\": null\n                                      }\n                                    ],\n                                    \"storageKey\": null\n                                  }\n                                ],\n                                \"storageKey\": \"onBehalfOf(first:10)\"\n                              },\n                              (v18/*: any*/)\n                            ],\n                            \"storageKey\": null\n                          }\n                        ],\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": \"latestOpinionatedReviews(first:100)\"\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"MergeQueueEntry\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"mergeQueueEntry\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v19/*: any*/),\n                      (v18/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"MergeQueue\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"mergeQueue\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v16/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": (v20/*: any*/),\n                    \"concreteType\": \"PullRequestMergeRequirements\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"mergeRequirements\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v21/*: any*/),\n                      (v22/*: any*/),\n                      (v23/*: any*/),\n                      (v18/*: any*/),\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": null,\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"conditions\",\n                        \"plural\": true,\n                        \"selections\": [\n                          (v24/*: any*/),\n                          (v25/*: any*/),\n                          (v26/*: any*/),\n                          {\n                            \"kind\": \"InlineFragment\",\n                            \"selections\": [\n                              {\n                                \"alias\": null,\n                                \"args\": null,\n                                \"concreteType\": null,\n                                \"kind\": \"LinkedField\",\n                                \"name\": \"ruleRollups\",\n                                \"plural\": true,\n                                \"selections\": [\n                                  (v25/*: any*/),\n                                  (v27/*: any*/),\n                                  (v26/*: any*/),\n                                  (v28/*: any*/)\n                                ],\n                                \"storageKey\": null\n                              }\n                            ],\n                            \"type\": \"PullRequestRulesCondition\",\n                            \"abstractKey\": null\n                          },\n                          (v29/*: any*/)\n                        ],\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": null\n                  },\n                  (v30/*: any*/),\n                  (v31/*: any*/),\n                  (v18/*: any*/),\n                  (v32/*: any*/),\n                  (v33/*: any*/),\n                  (v34/*: any*/),\n                  (v35/*: any*/),\n                  (v36/*: any*/),\n                  (v37/*: any*/),\n                  (v38/*: any*/),\n                  (v39/*: any*/),\n                  (v41/*: any*/),\n                  (v42/*: any*/),\n                  (v43/*: any*/),\n                  (v44/*: any*/),\n                  (v45/*: any*/),\n                  (v46/*: any*/),\n                  (v47/*: any*/),\n                  (v48/*: any*/),\n                  (v49/*: any*/),\n                  (v50/*: any*/)\n                ],\n                \"args\": null,\n                \"argumentDefinitions\": [\n                  {\n                    \"kind\": \"RootArgument\",\n                    \"name\": \"mergeMethod\"\n                  }\n                ]\n              }\n            ],\n            \"type\": \"PullRequest\",\n            \"abstractKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"viewer\",\n        \"plural\": false,\n        \"selections\": (v8/*: any*/),\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"useLoadMergeBoxQuery\",\n    \"selections\": [\n      {\n        \"alias\": \"pullRequest\",\n        \"args\": (v1/*: any*/),\n        \"concreteType\": null,\n        \"kind\": \"LinkedField\",\n        \"name\": \"node\",\n        \"plural\": false,\n        \"selections\": [\n          (v24/*: any*/),\n          (v10/*: any*/),\n          {\n            \"kind\": \"InlineFragment\",\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v4/*: any*/),\n              (v5/*: any*/),\n              (v6/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Repository\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"headRepository\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": null,\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"owner\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v24/*: any*/),\n                      (v7/*: any*/),\n                      (v10/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  (v9/*: any*/),\n                  (v10/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v11/*: any*/),\n              (v12/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": (v13/*: any*/),\n                \"concreteType\": \"PullRequestReviewConnection\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"latestOpinionatedReviews\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"PullRequestReviewEdge\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"edges\",\n                    \"plural\": true,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": \"PullRequestReview\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"node\",\n                        \"plural\": false,\n                        \"selections\": [\n                          (v14/*: any*/),\n                          {\n                            \"alias\": null,\n                            \"args\": null,\n                            \"concreteType\": null,\n                            \"kind\": \"LinkedField\",\n                            \"name\": \"author\",\n                            \"plural\": false,\n                            \"selections\": [\n                              (v24/*: any*/),\n                              (v7/*: any*/),\n                              (v15/*: any*/),\n                              (v9/*: any*/),\n                              (v16/*: any*/),\n                              (v10/*: any*/)\n                            ],\n                            \"storageKey\": null\n                          },\n                          {\n                            \"alias\": null,\n                            \"args\": (v17/*: any*/),\n                            \"concreteType\": \"TeamConnection\",\n                            \"kind\": \"LinkedField\",\n                            \"name\": \"onBehalfOf\",\n                            \"plural\": false,\n                            \"selections\": [\n                              {\n                                \"alias\": null,\n                                \"args\": null,\n                                \"concreteType\": \"TeamEdge\",\n                                \"kind\": \"LinkedField\",\n                                \"name\": \"edges\",\n                                \"plural\": true,\n                                \"selections\": [\n                                  {\n                                    \"alias\": null,\n                                    \"args\": null,\n                                    \"concreteType\": \"Team\",\n                                    \"kind\": \"LinkedField\",\n                                    \"name\": \"node\",\n                                    \"plural\": false,\n                                    \"selections\": [\n                                      (v9/*: any*/),\n                                      (v10/*: any*/)\n                                    ],\n                                    \"storageKey\": null\n                                  }\n                                ],\n                                \"storageKey\": null\n                              }\n                            ],\n                            \"storageKey\": \"onBehalfOf(first:10)\"\n                          },\n                          (v18/*: any*/),\n                          (v10/*: any*/)\n                        ],\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": \"latestOpinionatedReviews(first:100)\"\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"MergeQueueEntry\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"mergeQueueEntry\",\n                \"plural\": false,\n                \"selections\": [\n                  (v19/*: any*/),\n                  (v18/*: any*/),\n                  (v10/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"MergeQueue\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"mergeQueue\",\n                \"plural\": false,\n                \"selections\": [\n                  (v16/*: any*/),\n                  (v10/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": (v20/*: any*/),\n                \"concreteType\": \"PullRequestMergeRequirements\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"mergeRequirements\",\n                \"plural\": false,\n                \"selections\": [\n                  (v21/*: any*/),\n                  (v22/*: any*/),\n                  (v23/*: any*/),\n                  (v18/*: any*/),\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": null,\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"conditions\",\n                    \"plural\": true,\n                    \"selections\": [\n                      (v24/*: any*/),\n                      (v25/*: any*/),\n                      (v26/*: any*/),\n                      {\n                        \"kind\": \"InlineFragment\",\n                        \"selections\": [\n                          {\n                            \"alias\": null,\n                            \"args\": null,\n                            \"concreteType\": null,\n                            \"kind\": \"LinkedField\",\n                            \"name\": \"ruleRollups\",\n                            \"plural\": true,\n                            \"selections\": [\n                              (v24/*: any*/),\n                              (v25/*: any*/),\n                              (v27/*: any*/),\n                              (v26/*: any*/),\n                              (v28/*: any*/)\n                            ],\n                            \"storageKey\": null\n                          }\n                        ],\n                        \"type\": \"PullRequestRulesCondition\",\n                        \"abstractKey\": null\n                      },\n                      (v29/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              },\n              (v30/*: any*/),\n              (v31/*: any*/),\n              (v18/*: any*/),\n              (v32/*: any*/),\n              (v33/*: any*/),\n              (v34/*: any*/),\n              (v35/*: any*/),\n              (v36/*: any*/),\n              (v37/*: any*/),\n              (v38/*: any*/),\n              (v39/*: any*/),\n              (v41/*: any*/),\n              (v42/*: any*/),\n              (v43/*: any*/),\n              (v44/*: any*/),\n              (v45/*: any*/),\n              (v46/*: any*/),\n              (v47/*: any*/),\n              (v48/*: any*/),\n              (v49/*: any*/),\n              (v50/*: any*/)\n            ],\n            \"type\": \"PullRequest\",\n            \"abstractKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"viewer\",\n        \"plural\": false,\n        \"selections\": [\n          (v7/*: any*/),\n          (v10/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": \"182187fb626bab1ed591bec846627ba6\",\n    \"metadata\": {},\n    \"name\": \"useLoadMergeBoxQuery\",\n    \"operationKind\": \"query\",\n    \"text\": null\n  }\n};\n})();\n\n(node as any).hash = \"e4fa23ecaf08321a3ceeeb839b941b7f\";\n\nexport default node;\n","/**\n * @generated SignedSource<<45da83b64f2674a9fd6e8f8076cdcbbc>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { InlineFragment, ReaderInlineDataFragment } from 'relay-runtime';\nexport type MergeQueueEntryState = \"AWAITING_CHECKS\" | \"LOCKED\" | \"MERGEABLE\" | \"QUEUED\" | \"UNMERGEABLE\" | \"%future added value\";\nexport type MergeStateStatus = \"BEHIND\" | \"BLOCKED\" | \"CLEAN\" | \"DIRTY\" | \"DRAFT\" | \"HAS_HOOKS\" | \"UNKNOWN\" | \"UNSTABLE\" | \"%future added value\";\nexport type PullRequestMergeAction = \"DIRECT_MERGE\" | \"MERGE_QUEUE\" | \"%future added value\";\nexport type PullRequestMergeConditionResult = \"FAILED\" | \"PASSED\" | \"UNKNOWN\" | \"%future added value\";\nexport type PullRequestMergeMethod = \"MERGE\" | \"REBASE\" | \"SQUASH\" | \"%future added value\";\nexport type PullRequestMergeRequirementsState = \"MERGEABLE\" | \"UNKNOWN\" | \"UNMERGEABLE\" | \"%future added value\";\nexport type PullRequestReviewState = \"APPROVED\" | \"CHANGES_REQUESTED\" | \"COMMENTED\" | \"DISMISSED\" | \"PENDING\" | \"%future added value\";\nexport type PullRequestRuleFailureReason = \"CHANGES_REQUESTED\" | \"CODE_OWNER_REVIEW_REQUIRED\" | \"MORE_REVIEWS_REQUIRED\" | \"SOC2_APPROVAL_PROCESS_REQUIRED\" | \"THREAD_RESOLUTION_REQUIRED\" | \"%future added value\";\nexport type PullRequestState = \"CLOSED\" | \"MERGED\" | \"OPEN\" | \"%future added value\";\nexport type RepositoryRuleEvaluationResult = \"FAILED\" | \"PASSED\" | \"%future added value\";\nexport type RepositoryRuleType = \"AUTHORIZATION\" | \"BRANCH_NAME_PATTERN\" | \"CODE_SCANNING\" | \"COMMITTER_EMAIL_PATTERN\" | \"COMMIT_AUTHOR_EMAIL_PATTERN\" | \"COMMIT_MESSAGE_PATTERN\" | \"COMMIT_OID\" | \"CREATION\" | \"DELETION\" | \"FILE_EXTENSION_RESTRICTION\" | \"FILE_PATH_RESTRICTION\" | \"LOCK_BRANCH\" | \"MAX_FILE_PATH_LENGTH\" | \"MAX_FILE_SIZE\" | \"MAX_REF_UPDATES\" | \"MERGE_QUEUE\" | \"MERGE_QUEUE_LOCKED_REF\" | \"NON_FAST_FORWARD\" | \"PULL_REQUEST\" | \"REPOSITORY_TRANSFER\" | \"REQUIRED_DEPLOYMENTS\" | \"REQUIRED_LINEAR_HISTORY\" | \"REQUIRED_REVIEW_THREAD_RESOLUTION\" | \"REQUIRED_SIGNATURES\" | \"REQUIRED_STATUS_CHECKS\" | \"REQUIRED_WORKFLOW_STATUS_CHECKS\" | \"RESTRICT_REPOSITORY_NAME\" | \"RESTRICT_REPO_DELETE\" | \"RESTRICT_REPO_VISIBILITY\" | \"SECRET_SCANNING\" | \"TAG\" | \"TAG_NAME_PATTERN\" | \"UPDATE\" | \"WORKFLOWS\" | \"WORKFLOW_UPDATES\" | \"%future added value\";\nimport { FragmentRefs } from \"relay-runtime\";\nexport type useLoadMergeBoxQuery_pullRequest$data = {\n  readonly autoMergeRequest: {\n    readonly mergeMethod: PullRequestMergeMethod;\n  } | null | undefined;\n  readonly baseRefChannel: string | null | undefined;\n  readonly baseRefName: string;\n  readonly commitHeadShaChannel: string | null | undefined;\n  readonly commits: {\n    readonly totalCount: number;\n  };\n  readonly deployedChannel: string | null | undefined;\n  readonly gitMergeStateChannel: string | null | undefined;\n  readonly headRefChannel: string | null | undefined;\n  readonly headRefName: string;\n  readonly headRefOid: any;\n  readonly headRepository: {\n    readonly name: string;\n    readonly owner: {\n      readonly login: string;\n    };\n  } | null | undefined;\n  readonly id: string;\n  readonly isDraft: boolean;\n  readonly isInMergeQueue: boolean;\n  readonly latestOpinionatedReviews: {\n    readonly edges: ReadonlyArray<{\n      readonly node: {\n        readonly author: {\n          readonly avatarUrl: string;\n          readonly login: string;\n          readonly name: string | null | undefined;\n          readonly url: string;\n        } | null | undefined;\n        readonly authorCanPushToRepository: boolean;\n        readonly onBehalfOf: {\n          readonly edges: ReadonlyArray<{\n            readonly node: {\n              readonly name: string;\n            } | null | undefined;\n          } | null | undefined> | null | undefined;\n        };\n        readonly state: PullRequestReviewState;\n      } | null | undefined;\n    } | null | undefined> | null | undefined;\n  } | null | undefined;\n  readonly mergeQueue: {\n    readonly url: string;\n  } | null | undefined;\n  readonly mergeQueueChannel: string | null | undefined;\n  readonly mergeQueueEntry: {\n    readonly position: number;\n    readonly state: MergeQueueEntryState;\n  } | null | undefined;\n  readonly mergeRequirements: {\n    readonly commitAuthor: string;\n    readonly commitMessageBody: string | null | undefined;\n    readonly commitMessageHeadline: string | null | undefined;\n    readonly conditions: ReadonlyArray<{\n      readonly __typename: string;\n      readonly conflicts?: ReadonlyArray<string>;\n      readonly isConflictResolvableInWeb?: boolean;\n      readonly message: string | null | undefined;\n      readonly result: PullRequestMergeConditionResult;\n      readonly ruleRollups?: ReadonlyArray<{\n        readonly failureReasons?: ReadonlyArray<PullRequestRuleFailureReason>;\n        readonly message: string | null | undefined;\n        readonly requiredReviewers?: number;\n        readonly requiresCodeowners?: boolean;\n        readonly result: RepositoryRuleEvaluationResult;\n        readonly ruleType: RepositoryRuleType;\n      }>;\n    }>;\n    readonly state: PullRequestMergeRequirementsState;\n  };\n  readonly mergeStateStatus: MergeStateStatus;\n  readonly resourcePath: string;\n  readonly reviewStateChannel: string | null | undefined;\n  readonly state: PullRequestState;\n  readonly stateChannel: string | null | undefined;\n  readonly viewerCanAddAndRemoveFromMergeQueue: boolean;\n  readonly viewerCanDeleteHeadRef: boolean;\n  readonly viewerCanDisableAutoMerge: boolean;\n  readonly viewerCanEnableAutoMerge: boolean;\n  readonly viewerCanRestoreHeadRef: boolean;\n  readonly viewerCanUpdate: boolean;\n  readonly viewerCanUpdateBranch: boolean;\n  readonly viewerDidAuthor: boolean;\n  readonly viewerMergeActions: ReadonlyArray<{\n    readonly isAllowable: boolean;\n    readonly mergeMethods: ReadonlyArray<{\n      readonly isAllowable: boolean;\n      readonly isAllowableWithBypass: boolean;\n      readonly name: PullRequestMergeMethod;\n    }>;\n    readonly name: PullRequestMergeAction;\n  }>;\n  readonly workflowsChannel: string | null | undefined;\n  readonly \" $fragmentType\": \"useLoadMergeBoxQuery_pullRequest\";\n};\nexport type useLoadMergeBoxQuery_pullRequest$key = {\n  readonly \" $data\"?: useLoadMergeBoxQuery_pullRequest$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"useLoadMergeBoxQuery_pullRequest\">;\n};\n\nconst node: ReaderInlineDataFragment = {\n  \"kind\": \"InlineDataFragment\",\n  \"name\": \"useLoadMergeBoxQuery_pullRequest\"\n};\n\n(node as any).hash = \"319ed4afaedc868461319761ebef5a48\";\n\nexport default node;\n","import type {PropsWithChildren} from 'react'\nimport {createContext, useContext, useMemo, useState} from 'react'\n\nimport {MergeMethod} from '../types'\n\ninterface MergeMethodContextData {\n  mergeMethod: MergeMethod\n  setMergeMethod: (mergeMethod: MergeMethod) => void\n}\n\nexport const MergeMethodContext = createContext<MergeMethodContextData>({\n  mergeMethod: MergeMethod.MERGE,\n  setMergeMethod: () => {},\n})\n\nexport function MergeMethodContextProvider({\n  children,\n  defaultMergeMethod,\n}: PropsWithChildren<{defaultMergeMethod: MergeMethod}>) {\n  const [mergeMethod, setMergeMethod] = useState<MergeMethod>(defaultMergeMethod)\n\n  const value = useMemo(\n    () => ({\n      mergeMethod,\n      setMergeMethod,\n    }),\n    [mergeMethod],\n  )\n\n  return <MergeMethodContext.Provider value={value}>{children}</MergeMethodContext.Provider>\n}\n\nexport function useMergeMethodContext(): MergeMethodContextData {\n  const contextData = useContext(MergeMethodContext)\n  return contextData\n}\n\ntry{ MergeMethodContext.displayName ||= 'MergeMethodContext' } catch {}\ntry{ MergeMethodContextProvider.displayName ||= 'MergeMethodContextProvider' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MergeBoxSectionHeader-module__wrapper--f99Ts\",\"wrapperCanExpand\":\"MergeBoxSectionHeader-module__wrapperCanExpand--Hv6nF\",\"button\":\"MergeBoxSectionHeader-module__button--RGF7G\"};","import {ChevronUpIcon} from '@primer/octicons-react'\n\nexport const ExpandableSectionIcon = ({isExpanded}: {isExpanded: boolean}) => {\n  return (\n    <div style={{transition: 'transform 0.15s ease-in-out', transform: isExpanded ? '' : 'rotate(180deg)'}}>\n      <ChevronUpIcon />\n    </div>\n  )\n}\n\ntry{ ExpandableSectionIcon.displayName ||= 'ExpandableSectionIcon' } catch {}","import {Heading} from '@primer/react'\nimport styles from './MergeBoxSectionHeader.module.css'\nimport {clsx} from 'clsx'\nimport {ExpandableSectionIcon} from './ExpandableSectionIcon'\n\ninterface MergeBoxSectionHeaderProps {\n  /**\n   * The title of the section\n   */\n  title: JSX.Element | string | undefined\n  /**\n   * The optional title of the section\n   */\n  subtitle?: JSX.Element | string\n  /**\n   * An optional icon to display\n   */\n  icon?: JSX.Element\n  /**\n   * When passed, the section will be expandable and the toggle will render. This cannot be combined with `rightSideContent`.\n   */\n  expandableProps?: {\n    isExpanded: boolean\n    ariaLabel: string\n    onToggle: () => void\n  }\n  /**\n   * The content to render under the title and subtitle\n   */\n  children?: React.ReactNode\n  /**\n   * The content to render to the right of the title and subtitle\n   */\n  rightSideContent?: JSX.Element\n}\n\n/**\n * Shared header for sections in the merge box. When `expandableProps` is passed, the section will be expandable and the toggle will render. This cannot be combined with `rightSideContent`.\n */\nexport const MergeBoxSectionHeader = ({\n  title,\n  subtitle,\n  icon,\n  expandableProps,\n  children,\n  rightSideContent,\n}: MergeBoxSectionHeaderProps) => {\n  if (expandableProps && rightSideContent) {\n    throw new Error('MergeBoxSectionHeader: rightSideContent is not supported when expandableProps exist')\n  }\n  const {isExpanded, ariaLabel, onToggle} = expandableProps || {}\n\n  return (\n    <div\n      className={clsx(\n        styles.wrapper,\n        expandableProps && styles.wrapperCanExpand,\n        !expandableProps && `flex-column flex-sm-row flex-items-center flex-sm-items-start flex-justify-between`,\n      )}\n    >\n      <div className=\"d-flex width-full\">\n        {icon && <div className=\"mr-2 flex-shrink-0\">{icon}</div>}\n        <div className=\"d-flex flex-1 flex-column flex-sm-row gap-2\">\n          <div className=\"flex-1\">\n            <Heading as=\"h3\" sx={{fontSize: 2}}>\n              {title}\n            </Heading>\n            <p className=\"fgColor-muted mb-0\">{subtitle}</p>\n            {children}\n          </div>\n          {rightSideContent}\n        </div>\n      </div>\n      {expandableProps && (\n        <>\n          <button\n            aria-label={ariaLabel}\n            type=\"button\"\n            className={styles.button}\n            onClick={onToggle}\n            aria-expanded={isExpanded}\n          />\n          <div className=\"fgColor-muted pr-2 pt-2\">\n            <ExpandableSectionIcon isExpanded={Boolean(isExpanded)} />\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\ntry{ MergeBoxSectionHeader.displayName ||= 'MergeBoxSectionHeader' } catch {}","import {\n  CheckIcon,\n  ClockIcon,\n  DotFillIcon,\n  MoonIcon,\n  SkipIcon,\n  SquareFillIcon,\n  StopIcon,\n  XCircleFillIcon,\n} from '@primer/octicons-react'\n\nimport type {CheckStateRollup, StatusCheck, StatusCheckState} from '../page-data/payloads/status-checks'\n\n/**\n * Consider this a very scrappy version of the StatusCheckConfig ruby class\n * in packages/checks/app/models/status_check_config.rb,\n * but filtered to only contain the values in https://docs.github.com/graphql/reference/enums#checkrunstate\n */\nexport const STATUS_CHECK_CONFIGS = {\n  ACTION_REQUIRED: {\n    icon: XCircleFillIcon,\n    iconColor: 'var(--fgColor-danger, var(--color-danger-fg))',\n    isPending: false,\n    isSuccess: false,\n  },\n  CANCELLED: {\n    icon: StopIcon,\n    iconColor: 'var(--fgColor-muted, var(--color-fg-muted))',\n    isPending: false,\n    isSuccess: false,\n  },\n  COMPLETED: {\n    icon: CheckIcon,\n    iconColor: 'var(--fgColor-success, var(--color-success-fg))',\n    isSuccess: true,\n    isPending: false,\n  },\n  ERROR: {\n    icon: XCircleFillIcon,\n    iconColor: 'var(--fgColor-danger, var(--color-danger-fg))',\n    isPending: false,\n    isSuccess: false,\n  },\n  EXPECTED: {\n    icon: DotFillIcon,\n    iconColor: 'var(--fgColor-attention, var(--color-attention-fg))',\n    isPending: true,\n    isSuccess: false,\n  },\n  FAILURE: {\n    icon: XCircleFillIcon,\n    iconColor: 'var(--fgColor-danger, var(--color-danger-fg))',\n    isPending: false,\n    isSuccess: false,\n  },\n  IN_PROGRESS: {\n    icon: DotFillIcon,\n    iconColor: 'var(--fgColor-attention, var(--color-attention-fg))',\n    isPending: true,\n    isSuccess: false,\n  },\n  NEUTRAL: {\n    icon: SquareFillIcon,\n    iconColor: 'var(--fgColor-muted, var(--color-fg-muted))',\n    isPending: false,\n    isSuccess: false,\n  },\n  PENDING: {\n    icon: DotFillIcon,\n    iconColor: 'var(--fgColor-attention, var(--color-attention-fg))',\n    isPending: true,\n    isSuccess: false,\n  },\n  QUEUED: {\n    icon: DotFillIcon,\n    iconColor: 'var(--fgColor-attention, var(--color-attention-fg))',\n    isPending: true,\n    isSuccess: false,\n  },\n  REQUESTED: {\n    icon: DotFillIcon,\n    iconColor: 'var(--fgColor-attention, var(--color-attention-fg))',\n    backgroundColor: 'none',\n    isPending: false,\n    isSuccess: false,\n  },\n  SKIPPED: {\n    icon: SkipIcon,\n    iconColor: 'var(--fgColor-muted, var(--color-fg-muted))',\n    isPending: false,\n    isSuccess: false,\n  },\n  STALE: {\n    icon: MoonIcon,\n    iconColor: 'var(--fgColor-muted, var(--color-fg-muted))',\n    isPending: false,\n    isSuccess: false,\n  },\n  STARTUP_FAILURE: {\n    icon: XCircleFillIcon,\n    iconColor: 'var(--fgColor-danger, var(--color-danger-fg))',\n    isPending: false,\n    isSuccess: false,\n  },\n  SUCCESS: {\n    icon: CheckIcon,\n    iconColor: 'var(--fgColor-success, var(--color-success-fg))',\n    isSuccess: true,\n    isPending: false,\n  },\n  TIMED_OUT: {\n    icon: XCircleFillIcon,\n    iconColor: 'var(--fgColor-danger, var(--color-danger-fg))',\n    isPending: false,\n    isSuccess: false,\n  },\n  WAITING: {\n    icon: ClockIcon,\n    iconColor: 'var(--fgColor-attention, var(--color-attention-fg))',\n    isPending: true,\n    isSuccess: false,\n  },\n  _UNKNOWN_VALUE: {\n    icon: DotFillIcon,\n    iconColor: 'var(--fgColor-attention, var(--color-attention-fg))',\n    isPending: true,\n    isSuccess: false,\n  },\n}\n\n/**\n * A map of the status check states to their sort order. List ordering copied from:\n * https://github.com/github/github/blob/master/packages/checks/app/models/status_check_config.rb\n */\nexport const STATUS_CHECK_SORT_ORDER: {[key: string]: number} = {\n  ACTION_REQUIRED: 0,\n  TIMED_OUT: 1,\n  FAILURE: 2,\n  CANCELLED: 3,\n  STALE: 4,\n  EXPECTED: 5,\n  REQUESTED: 6,\n  QUEUED: 7,\n  IN_PROGRESS: 8,\n  PENDING: 9,\n  WAITING: 10,\n  NEUTRAL: 11,\n  SKIPPED: 12,\n  SUCCESS: 13,\n  COMPLETED: 14,\n  STARTUP_FAILURE: 15,\n  _UNKNOWN_VALUE: 16,\n}\n\n/**\n * map of check statuses to their accessible text. The order matters.\n */\nexport const STATUS_CHECK_ACCESSIBLE_NAMES = {\n  FAILURE: 'failing',\n  NEUTRAL: 'neutral',\n  TIMED_OUT: 'timed out',\n  CANCELLED: 'cancelled',\n  STALE: 'stale',\n  PENDING: 'pending',\n  IN_PROGRESS: 'in progress',\n  REQUESTED: 'requested',\n  QUEUED: 'queued',\n  SKIPPED: 'skipped',\n  EXPECTED: 'expected',\n  SUCCESS: 'successful',\n}\n\nexport function getAccessibleStatusText(groupStatus: keyof typeof STATUS_CHECK_ACCESSIBLE_NAMES) {\n  return STATUS_CHECK_ACCESSIBLE_NAMES[groupStatus]\n}\n\nconst STATUS_CHECK_STATES = Object.keys(STATUS_CHECK_CONFIGS) as StatusCheckState[]\n\nexport function isValidStatusOrConclusion(value: string): value is StatusCheckState {\n  return STATUS_CHECK_STATES.includes(value as StatusCheckState)\n}\n\n/**\n * Maps the a check's conclusion or status into a key that can be used to look up the config in STATUS_CHECK_CONFIGS\n * Returns the _UNKNOWN_VALUE config if the state is not in STATUS_KEYS\n */\nexport function stateConfigKey(state: string): StatusCheckState {\n  // we have to check if state is in the STATUS_KEYS array at runtime\n  // because it's slightly possible the GraphQL enum values won't match what we have in STATUS_CHECK_CONFIGS\n  // if that happens, we'll just return the _UNKNOWN_VALUE config\n  return isValidStatusOrConclusion(state) ? state : '_UNKNOWN_VALUE'\n}\n\nfunction stateConfig(state: StatusCheckState) {\n  return STATUS_CHECK_CONFIGS[state]\n}\n\n// get the adjective by downcasing the status value, 'PENDING' becomes 'Pending', etc.\n// turn underscores into spaces.\nfunction adjectiveForState(state: StatusCheckState) {\n  return state.charAt(0) + state.slice(1).toLowerCase().replace(/_/g, ' ')\n}\n\n/**\n * Takes a given state and duration in seconds and returns a string that describes the time to complete\n * ex: 'Pending after 1m', 'Success in 2m', 'Skipped'\n */\nexport function timeToComplete(state: StatusCheckState, durationSeconds: number) {\n  // return blank for unknown values\n  if (state === '_UNKNOWN_VALUE') return ''\n  const adjective = adjectiveForState(state)\n  const config = stateConfig(state)\n\n  if (durationSeconds <= 0 || config.isPending) return adjective\n\n  const preposition = config.isSuccess ? 'in' : 'after'\n\n  return `${adjective} ${preposition} ${formatDuration(durationSeconds)}`\n}\n\n/**\n * Takes a given duration in seconds and returns a formatted string that rounds to the nearest minute,\n * or returns the number of seconds if the duration is less than one minute.\n */\nexport function formatDuration(duration: number) {\n  if (duration < 60) {\n    return `${duration}s`\n  }\n\n  return `${Math.round(duration / 60)}m`\n}\n\n// sort by displayName case insensitive\nexport function compareChecks(a: StatusCheck, b: StatusCheck) {\n  return a.displayName.localeCompare(b.displayName)\n}\n\n/**\n * Group checks data with a provided mapping of group to states. Ordering of key-value pairs will be determined by\n * the provided state mapping.\n *\n * @param checks List of checks-like data\n * @param stateMapping Mapping with group names as keys and a list of corresponding states as values\n * @param getState Function that takes a check value and returns its current state\n *\n * @returns a mapping of the defined groupings to checks\n */\nexport function groupChecks<T>(\n  checks: T[],\n  stateMapping: Record<string, string[]>,\n  getState: (check: T) => string,\n): Record<string, T[]> {\n  const initialValue: Record<string, T[]> = {}\n  for (const key of Object.keys(stateMapping)) {\n    initialValue[key] = []\n  }\n\n  return checks.reduce<Record<string, T[]>>((accumulator, currentCheck) => {\n    const state = getState(currentCheck)\n    const stateGrouping = Object.keys(stateMapping).find(groupName => stateMapping[groupName]!.includes(state))\n\n    if (stateGrouping) {\n      const checksForState = accumulator[stateGrouping]\n\n      if (checksForState) {\n        checksForState.push(currentCheck)\n      }\n    }\n\n    return accumulator\n  }, initialValue)\n}\n\n/*\n * Return aggregated counts for how many checks are failed, successful, pending, skipped, etc .\n *\n * The API returns more granular information about the check status. In order to determine\n * an overall \"state\" for the pull request, we want to group these granular states into\n * general \"buckets\".\n */\nexport function countChecksByGroup(\n  checks: CheckStateRollup[],\n  stateMapping: Record<string, string[]>,\n): Record<string, number> {\n  const getCheckState = (check: CheckStateRollup) => {\n    return check.state\n  }\n\n  const groupedCheckCounts = groupChecks(checks, stateMapping, getCheckState)\n  const countChecksForGroup = (checksToCount?: CheckStateRollup[]) =>\n    checksToCount?.reduce<number>((accumulator, currentCheck) => accumulator + currentCheck.count, 0) ?? 0\n\n  return Object.fromEntries(\n    Object.keys(groupedCheckCounts).map(group => [group, countChecksForGroup(groupedCheckCounts[group])]),\n  )\n}\n\nexport function extractChecksAnalyticsMetadata(statusChecks: CheckStateRollup[]) {\n  const statusCheckCounts: Record<string, number> = {}\n\n  for (const obj of statusChecks) {\n    statusCheckCounts[obj.state] = obj.count\n  }\n\n  return {statusCheckCounts}\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"checksGroupHeadingButton\":\"ExpandedChecks-module__checksGroupHeadingButton--mccqk\",\"checksGroupActionList\":\"ExpandedChecks-module__checksGroupActionList--YDMMy\",\"checksContainer\":\"ExpandedChecks-module__checksContainer--R2xmH\",\"expandableWrapper\":\"ExpandedChecks-module__expandableWrapper--mgDmj\",\"expandableContent\":\"ExpandedChecks-module__expandableContent--w8gF0\",\"isExpanded\":\"ExpandedChecks-module__isExpanded--w2Qyq\"};","import {ChevronRightIcon} from '@primer/octicons-react'\n\nexport const ExpandableGroupIcon = ({isExpanded}: {isExpanded: boolean}) => {\n  return (\n    <div style={{transform: isExpanded ? 'rotate(90deg)' : ''}}>\n      <ChevronRightIcon size={12} />\n    </div>\n  )\n}\n\ntry{ ExpandableGroupIcon.displayName ||= 'ExpandableGroupIcon' } catch {}","import {useAnalytics} from '@github-ui/use-analytics'\nimport {ActionList, Button} from '@primer/react'\nimport {type PropsWithChildren, useState, useId} from 'react'\nimport type {STATUS_CHECK_ACCESSIBLE_NAMES} from '../../../helpers/status-check-helpers'\nimport {getAccessibleStatusText} from '../../../helpers/status-check-helpers'\nimport styles from './ExpandedChecks.module.css'\nimport {clsx} from 'clsx'\nimport {ExpandableGroupIcon} from '../common/ExpandableGroupIcon'\n\nexport function ChecksGroup({\n  children,\n  count,\n  groupStatus,\n  isOpenByDefault,\n  isToggleVisible,\n  analyticsMetadata,\n}: PropsWithChildren<{\n  count: number\n  groupStatus: string\n  analyticsMetadata: {statusCheckCounts: Record<string, number>}\n  isOpenByDefault?: boolean\n  isToggleVisible?: boolean\n}>) {\n  const [isOpen, setIsOpen] = useState(isOpenByDefault)\n  const {sendAnalyticsEvent} = useAnalytics()\n  const groupStatusText = getAccessibleStatusText(groupStatus as keyof typeof STATUS_CHECK_ACCESSIBLE_NAMES)\n  const groupContentId = useId()\n  const showListToggle = isToggleVisible\n  const showChecksList = isOpen || !isToggleVisible\n\n  return (\n    <div>\n      {showListToggle && (\n        <Button\n          aria-controls={groupContentId}\n          aria-expanded={isOpen}\n          className={styles.checksGroupHeadingButton}\n          variant=\"invisible\"\n          size=\"small\"\n          trailingVisual={() => <ExpandableGroupIcon isExpanded={Boolean(isOpen)} />}\n          onClick={() => {\n            const eventTarget = 'MERGEBOX_CHECKS_GROUP_TOGGLE_BUTTON'\n            const eventType = isOpen ? 'checks_group.collapse' : 'checks_group.expand'\n            const eventMetadata = {...analyticsMetadata, group: groupStatus}\n            sendAnalyticsEvent(eventType, eventTarget, eventMetadata)\n            setIsOpen(!isOpen)\n          }}\n        >\n          {count} {groupStatusText} check{count > 1 ? 's' : ''}\n        </Button>\n      )}\n      <div\n        className={clsx(styles.expandableWrapper, showChecksList && styles.isExpanded)}\n        //  We're setting visibility directly because tests don't pick up styles from modules\n        style={{visibility: showChecksList ? 'visible' : 'hidden'}}\n      >\n        <div className={clsx(styles.expandableContent)} role=\"group\" aria-label={`${groupStatusText} checks`}>\n          <ActionList id={groupContentId} className={styles.checksGroupActionList} showDividers>\n            {children}\n          </ActionList>\n        </div>\n      </div>\n    </div>\n  )\n}\n\ntry{ ChecksGroup.displayName ||= 'ChecksGroup' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"check-spinner-wrapper\":\"StatusCheckRow-module__check-spinner-wrapper--h2lFg\",\"check-spinner-inner\":\"StatusCheckRow-module__check-spinner-inner--cBgeT\",\"check-row\":\"StatusCheckRow-module__check-row--Qk1QO\",\"check-row-has-target\":\"StatusCheckRow-module__check-row-has-target--cBzPm\",\"check-row-prepending-content\":\"StatusCheckRow-module__check-row-prepending-content--GEuVw\",\"check-row-main-content\":\"StatusCheckRow-module__check-row-main-content--SWNW_\",\"check-row-left-content\":\"StatusCheckRow-module__check-row-left-content--oasav\",\"check-row-link\":\"StatusCheckRow-module__check-row-link--rKTiI\",\"control-small\":\"StatusCheckRow-module__control-small--soxPL\",\"button\":\"StatusCheckRow-module__button--LVOdv\"};","import {Label, Octicon, Spinner} from '@primer/react'\nimport {memo} from 'react'\nimport {clsx} from 'clsx'\n\nimport {GitHubAvatar} from '@github-ui/github-avatar'\nimport {ArrowRightIcon} from '@primer/octicons-react'\nimport {STATUS_CHECK_CONFIGS} from '../../../helpers/status-check-helpers'\nimport type {StatusCheck} from '../../../page-data/payloads/status-checks'\nimport styles from './StatusCheckRow.module.css'\n\nfunction StatusIcon({iconColor, icon}: {iconColor: string; icon: React.ElementType}) {\n  return (\n    <Octicon\n      icon={icon}\n      sx={{\n        color: iconColor,\n      }}\n    />\n  )\n}\n\nfunction CheckSpinner() {\n  return (\n    <div className=\"position-relative d-flex color-fg-attention\">\n      <Spinner size=\"small\" />\n      <div className={styles['check-spinner-wrapper']}>\n        <div className={styles['check-spinner-inner']} />\n      </div>\n    </div>\n  )\n}\n\n/**\n * Renders either a check run or a status context in the DOM as link. This component does not use Relay.\n */\nexport const StatusCheckRow = memo(function StatusCheckRow({\n  avatarUrl,\n  displayName,\n  description,\n  state,\n  targetUrl,\n  isRequired,\n}: Partial<StatusCheck>) {\n  const statusState = STATUS_CHECK_CONFIGS[state as keyof typeof STATUS_CHECK_CONFIGS]\n  return (\n    <li className={clsx(styles['check-row'], targetUrl && styles['check-row-has-target'])}>\n      <div className={styles['check-row-prepending-content']}>\n        {state === 'IN_PROGRESS' ? (\n          <CheckSpinner />\n        ) : (\n          <StatusIcon icon={statusState.icon} iconColor={statusState.iconColor} />\n        )}\n        {avatarUrl && <GitHubAvatar alt={displayName} size={20} square src={avatarUrl} className=\"flex-shrink-0\" />}\n      </div>\n      <div className={styles['check-row-main-content']}>\n        <div className={styles['check-row-left-content']}>\n          {targetUrl ? (\n            <a href={targetUrl} className={styles['check-row-link']}>\n              {displayName}\n            </a>\n          ) : (\n            <span className={styles['check-row-link']}>{displayName}</span>\n          )}\n          {description}\n        </div>\n        <div className=\"d-flex flex-items-center gap-1\">\n          {isRequired && (\n            <div className=\"flex-shrink-0\">\n              <Label>Required</Label>\n            </div>\n          )}\n          <div className={styles['control-small']}>\n            {targetUrl && (\n              <>\n                <a\n                  className={styles.button}\n                  href={targetUrl}\n                  tabIndex={-1} // Setting negative tabIndex as it's a repeated link, the whole row is focusable\n                >\n                  Go to Checks detail\n                </a>\n                <ArrowRightIcon />\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </li>\n  )\n})\n\ntry{ StatusIcon.displayName ||= 'StatusIcon' } catch {}\ntry{ CheckSpinner.displayName ||= 'CheckSpinner' } catch {}\ntry{ StatusCheckRow.displayName ||= 'StatusCheckRow' } catch {}","import {useMemo} from 'react'\n\nimport {\n  compareChecks,\n  countChecksByGroup,\n  groupChecks,\n  extractChecksAnalyticsMetadata,\n} from '../../../helpers/status-check-helpers'\nimport styles from './ExpandedChecks.module.css'\nimport {ChecksGroup} from './ChecksGroup'\nimport {StatusCheckRow} from './StatusCheckRow'\nimport type {CheckStateRollup, StatusCheck} from '../../../page-data/payloads/status-checks'\n\nconst CHECKS_LIST_GROUPINGS = {\n  FAILURE: ['CANCELLED', 'ERROR', 'FAILURE', 'STALE', 'STARTUP_FAILURE', 'TIMED_OUT'],\n  PENDING: ['ACTION_REQUIRED', 'EXPECTED', 'PENDING', 'QUEUED', 'REQUESTED', 'WAITING', '_UNKNOWN_VALUE'],\n  IN_PROGRESS: ['IN_PROGRESS'],\n  SKIPPED: ['SKIPPED'],\n  NEUTRAL: ['NEUTRAL'],\n  SUCCESS: ['SUCCESS', 'COMPLETED'],\n}\n\ninterface Props {\n  statusChecks: StatusCheck[]\n  statusRollupSummary: CheckStateRollup[]\n}\n\n/**\n * Displays the list of expanded checks\n */\nexport function ExpandedChecksList({statusChecks, statusRollupSummary}: Props) {\n  const sortedChecksOrStatuses = useMemo(() => statusChecks.sort(compareChecks), [statusChecks])\n  const countsByGroup = countChecksByGroup(statusRollupSummary, CHECKS_LIST_GROUPINGS)\n  const checksByGroup = groupChecks(sortedChecksOrStatuses, CHECKS_LIST_GROUPINGS, check => check.state)\n\n  // count how many groups actually have items\n  const groupsWithItemsCount = Object.entries(countsByGroup).reduce<number>(\n    (groupsWithItems, [, count]) => (count > 0 ? groupsWithItems + 1 : groupsWithItems),\n    0,\n  )\n\n  return (\n    <div className={styles.checksContainer}>\n      {Object.entries(countsByGroup).map(([groupStatus, count]) => {\n        if (count === 0) return null\n\n        // close the success group by default unless it's the only group\n        const isOpenByDefault = groupStatus !== 'SUCCESS' || groupsWithItemsCount === 1\n        const isToggleVisible = groupsWithItemsCount > 1\n        return (\n          <ChecksGroup\n            key={groupStatus}\n            count={count}\n            groupStatus={groupStatus}\n            isOpenByDefault={isOpenByDefault}\n            isToggleVisible={isToggleVisible}\n            analyticsMetadata={extractChecksAnalyticsMetadata(statusRollupSummary)}\n          >\n            {checksByGroup[groupStatus]?.map((checkOrStatus, idx) => {\n              if (!checkOrStatus) return null\n              return <StatusCheckRow key={idx} {...checkOrStatus} />\n            })}\n          </ChecksGroup>\n        )\n      })}\n    </div>\n  )\n}\n\ntry{ ExpandedChecksList.displayName ||= 'ExpandedChecksList' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"expandableContent\":\"MergeBoxExpandable-module__expandableContent--F8GC8\",\"expandableWrapper\":\"MergeBoxExpandable-module__expandableWrapper--WmDqF\",\"isExpanded\":\"MergeBoxExpandable-module__isExpanded--Le972\"};","import {clsx} from 'clsx'\nimport styles from './MergeBoxExpandable.module.css'\nimport type React from 'react'\n\ntype MergeBoxExpandableProps = {\n  isExpanded?: boolean\n  children: React.ReactNode\n}\n\n/**\n * Handles shared style treatment around collapsing Expandables\n */\nexport const MergeBoxExpandable = ({isExpanded = false, children}: MergeBoxExpandableProps) => {\n  return (\n    <div\n      className={clsx(styles.expandableWrapper, isExpanded && styles.isExpanded)}\n      //  We're setting visibility directly because tests don't pick up styles from modules\n      style={{visibility: isExpanded ? 'visible' : 'hidden'}}\n    >\n      <div className={clsx(styles.expandableContent, isExpanded && styles.isExpanded)}>{children}</div>\n    </div>\n  )\n}\n\ntry{ MergeBoxExpandable.displayName ||= 'MergeBoxExpandable' } catch {}","import {useSuspenseQuery} from '@tanstack/react-query'\nimport {PageData} from '@github-ui/pull-request-page-data-tooling/page-data'\nimport {usePageDataUrl} from '@github-ui/pull-request-page-data-tooling/use-page-data-url'\nimport {reactFetch} from '@github-ui/verified-fetch'\nimport {reportTraceData} from '@github-ui/internal-api-insights'\nimport type {StatusChecksPageData} from '../payloads/status-checks'\n\nexport function useStatusChecksPageData({pullRequestHeadSha}: {pullRequestHeadSha: string}) {\n  const apiURL = usePageDataUrl(PageData.statusChecks)\n\n  return useSuspenseQuery<StatusChecksPageData, Error>({\n    queryKey: [PageData.statusChecks, apiURL, pullRequestHeadSha],\n    queryFn: async () => {\n      const result = await reactFetch(apiURL)\n      if (!result.ok) throw new Error(`HTTP ${result.status}`)\n      const json = await result.json()\n      reportTraceData(json)\n      return json\n    },\n  })\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"iconWrapper\":\"StatusCheckStatesIcon-module__iconWrapper--QKoB5\",\"icon\":\"StatusCheckStatesIcon-module__icon--WxAzZ\",\"icon-animate\":\"StatusCheckStatesIcon-module__icon-animate--cC7m6\",\"smooth-appear\":\"StatusCheckStatesIcon-module__smooth-appear--ijvQS\"};","import {useMemo, useRef, useState} from 'react'\nimport type {CheckStateRollup} from '../../../page-data/payloads/status-checks'\nimport {countChecksByGroup} from '../../../helpers/status-check-helpers'\nimport styles from './StatusCheckStatesIcon.module.css'\nimport {clsx} from 'clsx'\nimport {CircleOcticon} from '@primer/react'\nimport {HEADER_ICON_SIZE} from '../../../constants'\nimport {CheckIcon, XIcon} from '@primer/octicons-react'\n\nconst icons: {[key: string]: JSX.Element} = {\n  PASSING: (\n    <CircleOcticon\n      icon={() => <CheckIcon size={16} />}\n      className=\"bgColor-success-emphasis fgColor-onEmphasis\"\n      size={HEADER_ICON_SIZE}\n    />\n  ),\n  FAILING: (\n    <CircleOcticon\n      icon={() => <XIcon size={16} />}\n      className=\"bgColor-danger-emphasis fgColor-onEmphasis\"\n      size={HEADER_ICON_SIZE}\n    />\n  ),\n}\n\nexport const sectionNames = {\n  FAILURE: ['CANCELLED', 'ERROR', 'FAILURE', 'STALE', 'STARTUP_FAILURE', 'TIMED_OUT'],\n  PENDING: [\n    '_UNKNOWN_VALUE',\n    'EXPECTED',\n    'QUEUED',\n    'PENDING',\n    'WAITING',\n    'REQUESTED',\n    'ACTION_REQUIRED',\n    'IN_PROGRESS',\n  ],\n  SKIPPED: ['SKIPPED', 'NEUTRAL'],\n  SUCCESS: ['SUCCESS', 'COMPLETED'],\n}\n\nconst transition = {\n  length: 1000, // ms\n  delay: 0, // ms\n}\n\nconst sectionColorMapping = {\n  FAILURE: 'var(--fgColor-danger)',\n  SUCCESS: 'var(--fgColor-success)',\n  PENDING: 'var(--fgColor-attention)',\n  SKIPPED: 'var(--fgColor-neutral)',\n}\n\nconst strokeWidth = 12\nconst radius = 100 / 2 - strokeWidth / 2\nconst circumference = 2 * Math.PI * radius\nconst svgSettings = {\n  gapPercent: 5,\n  strokeWidth,\n  size: 32, // px\n  circleSize: 100, // px\n  radius,\n  circumference,\n  percentToDegree: 360 / 100, // deg\n  percentToPx: circumference / 100, // px\n}\n\ntype DashArray = `${number} ${number}`\ntype Transform = `rotate(${string}deg)`\ntype SectionName = keyof typeof sectionNames\ntype Section = {\n  name: SectionName\n  percentage: number\n  dashArray: DashArray\n  transform: Transform\n  stroke: string | undefined\n}\n\nfunction dashArray(percentage: number): DashArray {\n  return `${Math.max(percentage * svgSettings.percentToPx, 0)} ${svgSettings.circumference}`\n}\n\nconst sumOfPriorParts = (percentage: number, previousStrokes: number[]) => {\n  if (percentage === 0) return percentage\n  let sum = 0\n  for (let i = 0; i < previousStrokes.length; i++) {\n    const stroke = previousStrokes[i]\n    if (!stroke) continue\n    sum += stroke + svgSettings.gapPercent\n  }\n  return sum\n}\n\nfunction transform(percentage: number, previousStrokes: number[], index: number, numOfSections: number): Transform {\n  let additionalStrokeOffset = 0\n  const isNotFirstOrLastSection = index !== 0 || index !== numOfSections - 1\n  const onlyTwoSections = numOfSections === 2\n\n  // To keep visual gap between start and end sections, we need to add additional gaps to sections between start and end sections.\n  // If there are only 2 groups, we also need to add additonal stroke offset.\n  if ((isNotFirstOrLastSection && numOfSections > 1) || onlyTwoSections) {\n    additionalStrokeOffset = 2.5\n  }\n\n  const strokeOffset = sumOfPriorParts(percentage, previousStrokes)\n\n  return `rotate(${-90 + (strokeOffset + additionalStrokeOffset) * svgSettings.percentToDegree}deg)`\n}\n\nfunction isValidSectionKey(key: string): key is SectionName {\n  return Object.keys(sectionNames).includes(key)\n}\n\nfunction getPercentage(\n  sectionName: SectionName,\n  count: number,\n  totalCount: number,\n  numberOfSections: number,\n  sectionsNotMeetingMinimumPercentage: string[],\n  percentageReduction: number,\n): number {\n  let percentage = (count / totalCount) * 100\n\n  // Remove 5% from each section to ensure a visual gap between SVG circle strokes\n  if (numberOfSections > 1) percentage -= svgSettings.gapPercent\n\n  // Add back 5% to the percentage, so that the SVG circle stroke is visible for smaller sections.\n  if (sectionsNotMeetingMinimumPercentage.includes(sectionName)) return percentage + 5\n\n  return percentage - percentageReduction\n}\n\nfunction getPercentageReduction(sectionsNotMeetingMinimumPercentage: string[], numOfSections: number) {\n  // Percentage reduction is dynamically calculated # of sections and # of sections that don't meet minimum percentage\n  let percentageReduction = 0\n\n  if (sectionsNotMeetingMinimumPercentage.length === 3) {\n    // 15% gap / (sections count - 3)\n    percentageReduction = 15 / (numOfSections - 3)\n  } else if (sectionsNotMeetingMinimumPercentage.length === 2) {\n    // 10% gap / (sections count - 2)\n    percentageReduction = 10 / (numOfSections - 2)\n  } else if (sectionsNotMeetingMinimumPercentage.length === 1) {\n    // 5% gap / (sections count - 1)\n    percentageReduction = 5 / (numOfSections - 1)\n  }\n\n  return percentageReduction\n}\n\nfunction isBelowSixPercent(count: number, totalCount: number) {\n  return (count / totalCount) * 100 < 6\n}\n\nexport function buildSectionsData(statusRollupSummary: CheckStateRollup[]): Section[] {\n  const countsBySection = countChecksByGroup(statusRollupSummary, sectionNames)\n  // Order matters here as we want the Icon's color wheel starting and ending in this order:\n  // 1. SUCCESS\n  // 2. SKIPPED\n  // 3. PENDING\n  // 4. FAILURE\n  const orderedSections = [\n    {name: 'SUCCESS', count: countsBySection['SUCCESS'] ?? 0},\n    {name: 'SKIPPED', count: countsBySection['SKIPPED'] ?? 0},\n    {name: 'PENDING', count: countsBySection['PENDING'] ?? 0},\n    {name: 'FAILURE', count: countsBySection['FAILURE'] ?? 0},\n  ]\n    // Remove null values.\n    .flatMap(section => (section ? [section] : []))\n    // Remove counts that are < 1 as we don't need to run calculations or render them.\n    .filter(section => {\n      if (!section.count) return false\n      return section.count > 0\n    })\n  const totalCount = orderedSections.reduce((acc, section) => acc + section.count, 0)\n  const previousStrokes: number[] = []\n  const numOfSections = orderedSections.length ?? 0\n  const sectionsNotMeetingMinimumPercentage = orderedSections\n    .filter(({count}) => isBelowSixPercent(count, totalCount))\n    .map(section => section.name)\n  const percentageReduction = getPercentageReduction(sectionsNotMeetingMinimumPercentage, numOfSections)\n\n  return (\n    orderedSections\n      .map((section, index) => {\n        if (!isValidSectionKey(section.name)) return null\n        const count = section.count\n\n        if (!count) return null\n\n        const percentage = getPercentage(\n          section.name,\n          count,\n          totalCount,\n          numOfSections,\n          sectionsNotMeetingMinimumPercentage,\n          percentageReduction,\n        )\n        const data = {\n          name: section.name,\n          percentage,\n          dashArray: dashArray(percentage),\n          transform: transform(percentage, previousStrokes, index, numOfSections),\n          stroke: sectionColorMapping[section.name],\n        }\n\n        previousStrokes.push(percentage)\n\n        return data\n      })\n      // Remove null values\n      .flatMap(section => (section ? [section] : []))\n  )\n}\n/**\n * Returns a SVG Circle Element\n * The colored sections are grouped by status.\n * Each section's size is propertional to the percentage of status checks in the group.\n * There are 4 colored groupings.\n * The grouping color scheme matches the styling of the Status Check rows by state.\n *\n * @param CheckStateRollup[]\n */\nexport function StatusCheckStatesIcon({statusRollupSummary}: {statusRollupSummary: CheckStateRollup[]}) {\n  const [shouldAnimate, setAnimate] = useState(false)\n  const prevStatusRollupSummary = useRef<CheckStateRollup[] | undefined>(undefined)\n\n  const sections = useMemo(() => buildSectionsData(statusRollupSummary), [statusRollupSummary])\n\n  // We don't want to animate in if the initial state is already the completed one (e.g. just passing checks, or just failing checks).\n  const allChecksPassing = statusRollupSummary.length === 1 && statusRollupSummary[0]?.state === 'SUCCESS'\n  const allChecksFailing = statusRollupSummary.length === 1 && statusRollupSummary[0]?.state === 'FAILURE'\n  const shouldRenderSVG = allChecksPassing || allChecksFailing ? shouldAnimate : true\n\n  useMemo(() => {\n    if (prevStatusRollupSummary.current !== undefined && statusRollupSummary.length > 0) {\n      setAnimate(true)\n    }\n    prevStatusRollupSummary.current = statusRollupSummary\n  }, [statusRollupSummary])\n\n  return (\n    <div className={styles.iconWrapper}>\n      {allChecksPassing && (\n        <div className={clsx(styles['icon'], shouldAnimate && styles['icon-animate'])}>{icons.PASSING}</div>\n      )}\n      {allChecksFailing && (\n        <div className={clsx(styles['icon'], shouldAnimate && styles['icon-animate'])}>{icons.FAILING}</div>\n      )}\n\n      {shouldRenderSVG && (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox={`0 0 ${svgSettings.circleSize} ${svgSettings.circleSize}`}\n          shapeRendering=\"crispEdges\"\n          width={svgSettings.size}\n          height={svgSettings.size}\n          style={{userSelect: 'none'}}\n          fill=\"none\"\n          aria-hidden=\"true\"\n        >\n          {sections.map(section => (\n            <circle\n              key={section.name}\n              cx={svgSettings.circleSize / 2}\n              cy={svgSettings.circleSize / 2}\n              r={radius}\n              style={{\n                strokeLinecap: 'round',\n                strokeLinejoin: 'round',\n                strokeDashoffset: 0,\n                strokeWidth: svgSettings.strokeWidth,\n                transition: `all ${transition.length}ms ease ${transition.delay}ms`,\n                transformOrigin: '50% 50%',\n                shapeRendering: 'geometricPrecision',\n                strokeDasharray: section.dashArray,\n                transform: section.transform,\n                stroke: section.stroke,\n              }}\n            />\n          ))}\n        </svg>\n      )}\n    </div>\n  )\n}\n\ntry{ StatusCheckStatesIcon.displayName ||= 'StatusCheckStatesIcon' } catch {}","export const HEADER_ICON_SIZE = 32\nexport const REFETCH_THROTTLE_INTERVAL_IN_MS = 2000\n","import {Box} from '@primer/react'\nimport {useAnalytics} from '@github-ui/use-analytics'\nimport {useSessionStorage} from '@github-ui/use-safe-storage/session-storage'\n\nimport {MergeBoxSectionHeader} from './common/MergeBoxSectionHeader'\nimport {\n  countChecksByGroup,\n  STATUS_CHECK_ACCESSIBLE_NAMES,\n  getAccessibleStatusText,\n  extractChecksAnalyticsMetadata,\n} from '../../helpers/status-check-helpers'\nimport {ExpandedChecksList} from './checks/ExpandedChecksList'\nimport {MergeBoxExpandable} from './common/MergeBoxExpandable'\nimport {useStatusChecksPageData} from '../../page-data/loaders/use-status-checks-page-data'\nimport type {CheckStateRollup, CombinedState} from '../../page-data/payloads/status-checks'\nimport {useStatusChecksLiveUpdates} from '../../hooks/use-status-checks-live-updates'\nimport {StatusCheckStatesIcon} from './checks/StatusCheckStatesIcon'\n\nconst CHECKS_SUMMARY_GROUPINGS = {\n  FAILURE: ['ERROR', 'FAILURE', 'STARTUP_FAILURE'],\n  TIMED_OUT: ['TIMED_OUT'],\n  CANCELLED: ['CANCELLED'],\n  SUCCESS: ['SUCCESS'],\n  STALE: ['STALE'],\n  PENDING: ['ACTION_REQUIRED', 'PENDING', 'WAITING', '_UNKNOWN_VALUE'],\n  IN_PROGRESS: ['IN_PROGRESS'],\n  QUEUED: ['QUEUED'],\n  NEUTRAL: ['NEUTRAL'],\n  SKIPPED: ['SKIPPED'],\n  EXPECTED: ['EXPECTED'],\n  REQUESTED: ['REQUESTED'],\n}\n\n/**\n *  Returns a text summary of the statuses of skipped, pending, failing, and successful checks\n *\n *  examples:\n *   - \"4 successful checks\"\n *   - \"1 pending, 1 successful checks\"\n *   - \"2 failing, 3 successful checks\"\n */\nexport function accessibleChecksSummary(checks: CheckStateRollup[]): string {\n  if (checks.length === 0) {\n    return 'No checks available.'\n  }\n\n  const groupedCheckCounts = countChecksByGroup(checks, CHECKS_SUMMARY_GROUPINGS)\n  const totalCheckCounts = Object.keys(groupedCheckCounts).reduce((previous, key) => {\n    const count = groupedCheckCounts[key]\n    return count ? previous + count : previous\n  }, 0)\n  const summaryText = Object.keys(STATUS_CHECK_ACCESSIBLE_NAMES)\n    .map(key => {\n      const count = groupedCheckCounts[key] ?? 0\n      const text = getAccessibleStatusText(key as keyof typeof STATUS_CHECK_ACCESSIBLE_NAMES)\n      return count > 0 ? `${count} ${text}` : undefined\n    })\n    .filter(Boolean)\n    .join(', ')\n\n  return `${summaryText} ${totalCheckCounts > 1 ? 'checks' : 'check'}`\n}\n\nconst heading: Record<CombinedState, string> = {\n  PASSED: 'All checks have passed',\n  PENDING: \"Some checks haven't completed yet\",\n  PENDING_APPROVAL: 'Some checks are waiting for approval',\n  PENDING_FAILED: 'Some checks were not successful',\n  SOME_FAILED: 'Some checks were not successful',\n  FAILED: 'All checks have failed',\n}\n\n/**\n *\n * Renders a collapsible checks section for a pull request\n */\nexport function ChecksSection({\n  pullRequestId,\n  pullRequestHeadSha,\n}: {\n  pullRequestId: string\n  pullRequestHeadSha: string\n}) {\n  const {\n    data: {aliveChannels, statusRollup, statusChecks},\n  } = useStatusChecksPageData({pullRequestHeadSha})\n  // expand checks state by default unless all checks pass or user has already collapsed toggle\n  const isPassingChecksState = statusRollup.combinedState === 'PASSED'\n  const [checksExpanded, setChecksExpanded] = useSessionStorage<boolean>(\n    `${pullRequestId}:checksExpanded`,\n    !isPassingChecksState,\n  )\n  const {sendAnalyticsEvent} = useAnalytics()\n\n  useStatusChecksLiveUpdates(aliveChannels.commitHeadShaChannel, pullRequestHeadSha)\n\n  // Don't render section if there are no checks\n  if (statusRollup.summary.length === 0) return null\n\n  return (\n    <Box aria-label=\"Checks\" as=\"section\" sx={{borderBottom: '1px solid', borderColor: 'border.muted'}}>\n      <MergeBoxSectionHeader\n        title={heading[statusRollup.combinedState]}\n        subtitle={accessibleChecksSummary(statusRollup.summary)}\n        icon={<StatusCheckStatesIcon statusRollupSummary={statusRollup.summary} />}\n        expandableProps={{\n          ariaLabel: 'Checks details',\n          isExpanded: checksExpanded,\n          onToggle: () => {\n            const eventMetadata = extractChecksAnalyticsMetadata(statusRollup.summary)\n            const eventTarget = 'MERGEBOX_CHECKS_SECTION_TOGGLE_BUTTON'\n            const eventType = !checksExpanded ? 'checks_section.expand' : 'checks_section.collapse'\n            sendAnalyticsEvent(eventType, eventTarget, eventMetadata)\n            setChecksExpanded(!checksExpanded)\n          },\n        }}\n      />\n      <MergeBoxExpandable isExpanded={checksExpanded}>\n        <ExpandedChecksList statusChecks={statusChecks} statusRollupSummary={statusRollup.summary} />\n      </MergeBoxExpandable>\n    </Box>\n  )\n}\n\ntry{ ChecksSection.displayName ||= 'ChecksSection' } catch {}","import {useAlive} from '@github-ui/use-alive'\nimport {throttle} from '@github/mini-throttle'\nimport useIsMounted from '@github-ui/use-is-mounted'\nimport {useCallback, useMemo, useRef} from 'react'\nimport {REFETCH_THROTTLE_INTERVAL_IN_MS} from '../constants'\n\nimport {useStatusChecksPageData} from '../page-data/loaders/use-status-checks-page-data'\n\ntype CallbackState = {\n  func: () => void\n  cleanup: () => void\n}\n\n/**\n * Hook that returns a function that will execute the provided callback when the page becomes visible. This allows us\n * to delay refetching on alive updates until the user actually sees the page.\n *\n * @returns A function that will execute the provided callback when the page becomes visible\n */\nfunction useFireOnPageVisible() {\n  const callbackRef = useRef<CallbackState>()\n  return useCallback((func: () => void) => {\n    if (!document.hidden) {\n      // if the page is visible, execute the callback immediately\n      func()\n    } else {\n      // clean up the previous listener without executing - we only want to execute the last subscribed callback\n      // when the page becomes visible again\n      callbackRef.current?.cleanup()\n\n      const handler = () => {\n        if (!document.hidden) {\n          func()\n          callbackRef.current?.cleanup()\n          callbackRef.current = undefined\n        }\n      }\n\n      const cleanup = () => {\n        window.removeEventListener('visibilitychange', handler)\n      }\n\n      callbackRef.current = {func, cleanup}\n\n      // re-subscribe with the new callback\n      window.addEventListener('visibilitychange', handler)\n    }\n  }, [])\n}\n\nexport function useStatusChecksLiveUpdates(channel: string, pullRequestHeadSha: string): void {\n  const {refetch} = useStatusChecksPageData({pullRequestHeadSha})\n  const isMounted = useIsMounted()\n  const fireOnPageVisible = useFireOnPageVisible()\n\n  const throttledRefetch = useMemo(\n    () =>\n      throttle(() => {\n        if (isMounted()) {\n          fireOnPageVisible(refetch)\n        }\n      }, REFETCH_THROTTLE_INTERVAL_IN_MS),\n    [fireOnPageVisible, isMounted, refetch],\n  )\n\n  const handleNotification = useCallback(\n    (data: {wait?: number}) => {\n      // This creates a 2000ms throttle to prevent multiple refetches happening in the same < 500ms time window\n      window.setTimeout(throttledRefetch, data.wait || 0)\n    },\n    [throttledRefetch],\n  )\n\n  useAlive(channel, handleNotification)\n}\n","import {AlertIcon} from '@primer/octicons-react'\nimport {Link} from '@primer/react'\n\nimport {MergeBoxSectionHeader} from './common/MergeBoxSectionHeader'\nimport {usePageDataContext} from '@github-ui/pull-request-page-data-tooling/page-data-context'\n\n/**\n * Renders a failure state of the checks section when a PageData JSON fetch fails\n */\nexport function ChecksSectionFetchFailure() {\n  const {basePageDataUrl} = usePageDataContext()\n  return (\n    <section aria-label=\"Checks\" className=\"border-bottom borderColor-muted\">\n      <MergeBoxSectionHeader\n        title=\"Checks cannot be loaded right now\"\n        subtitle={\n          <>\n            Try again or if the problem persists{' '}\n            <Link href=\"https://support.github.com/\" inline>\n              contact support\n            </Link>{' '}\n            or{' '}\n            <Link href={`${basePageDataUrl}/checks`} inline>\n              view the Checks tab.\n            </Link>\n          </>\n        }\n        icon={<AlertIcon className=\"mx-1\" size={24} />}\n      />\n    </section>\n  )\n}\n\ntry{ ChecksSectionFetchFailure.displayName ||= 'ChecksSectionFetchFailure' } catch {}","import {\n  CheckCircleFillIcon,\n  DotFillIcon,\n  GitMergeIcon,\n  GitMergeQueueIcon,\n  GitPullRequestClosedIcon,\n  GitPullRequestDraftIcon,\n  XCircleFillIcon,\n  type Icon,\n} from '@primer/octicons-react'\nimport type {MergeStatusButtonData, PullRequestRuleFailureReason, RepositoryRuleType} from '../types'\nimport type {MergeBoxPageData, PullRequestMergeRequirementsPayload} from '../page-data/payloads/merge-box'\n\nexport enum Status {\n  AwaitingReview,\n  ChangesRequested,\n  ChecksFailing,\n  ChecksPending,\n  DraftReadyForReview,\n  DraftNotReadyForReview,\n  InMergeQueue,\n  MergeConflicts,\n  Mergeable,\n  NonactionableFailure,\n  UnableToMerge,\n  Unknown,\n  Merged,\n  Closed,\n}\n\ntype ButtonPresentation = {\n  icon: Icon\n  iconColor: string\n  title: string\n}\n\n/**\n * Returns the button presentation details for the given mergeability status\n */\nexport function presentationForStatus(status: Status): ButtonPresentation {\n  switch (status) {\n    case Status.Mergeable:\n      return {\n        icon: CheckCircleFillIcon,\n        iconColor: 'success.emphasis',\n        title: 'Merge pull request',\n      }\n    case Status.DraftReadyForReview:\n      return {\n        icon: GitPullRequestDraftIcon,\n        iconColor: 'neutral.emphasis',\n        title: 'Draft',\n      }\n    case Status.DraftNotReadyForReview:\n      return {\n        icon: GitPullRequestDraftIcon,\n        iconColor: 'neutral.emphasis',\n        title: 'Draft',\n      }\n    case Status.InMergeQueue:\n      return {\n        icon: GitMergeQueueIcon,\n        iconColor: 'attention.emphasis',\n        title: 'Queued',\n      }\n    case Status.ChecksPending:\n      return {\n        icon: DotFillIcon,\n        iconColor: 'neutral.emphasis',\n        title: 'Checks pending',\n      }\n    case Status.ChecksFailing:\n      return {\n        icon: XCircleFillIcon,\n        iconColor: 'danger.emphasis',\n        title: 'Checks failing',\n      }\n    case Status.AwaitingReview:\n      return {\n        icon: DotFillIcon,\n        iconColor: 'attention.emphasis',\n        title: 'Awaiting reviews',\n      }\n    case Status.ChangesRequested:\n      return {\n        icon: XCircleFillIcon,\n        iconColor: 'danger.emphasis',\n        title: 'Changes requested',\n      }\n    case Status.MergeConflicts:\n      return {\n        icon: XCircleFillIcon,\n        iconColor: 'danger.emphasis',\n        title: 'Merge conflicts',\n      }\n    case Status.Unknown:\n      return {\n        icon: DotFillIcon,\n        iconColor: 'neutral.emphasis',\n        title: 'Unknown',\n      }\n    case Status.Merged:\n      return {\n        icon: GitMergeIcon,\n        iconColor: 'done.emphasis',\n        title: 'Merged',\n      }\n    case Status.Closed:\n      return {\n        icon: GitPullRequestClosedIcon,\n        iconColor: 'neutral.emphasis',\n        title: 'Closed',\n      }\n    default:\n      return {\n        icon: XCircleFillIcon,\n        iconColor: 'danger.emphasis',\n        title: 'Unable to merge',\n      }\n  }\n}\n\n/**\n * Returns the border color for a given mergeability status\n */\nexport function borderColorClassForStatus(status: Status): string {\n  switch (status) {\n    case Status.Mergeable:\n      return 'borderColor-success-emphasis'\n    case Status.DraftReadyForReview:\n      return 'borderColor-default'\n    case Status.DraftNotReadyForReview:\n      return 'borderColor-default'\n    case Status.InMergeQueue:\n      return 'borderColor-attention-emphasis'\n    case Status.ChecksPending:\n      return 'borderColor-attention-emphasis'\n    case Status.ChecksFailing:\n      return 'borderColor-danger-emphasis'\n    case Status.AwaitingReview:\n      return 'borderColor-attention-emphasis'\n    case Status.ChangesRequested:\n      return 'borderColor-danger-emphasis'\n    case Status.MergeConflicts:\n      return 'borderColor-danger-emphasis'\n    case Status.Merged:\n      return 'borderColor-done-emphasis'\n    case Status.Closed:\n      return 'borderColor-muted'\n    case Status.Unknown:\n      return 'borderColor-default'\n    default:\n      return 'borderColor-danger-emphasis'\n  }\n}\n\n/**\n * This file returns the mergebility status for a pull request.\n * There are two versions, one that is compatible with Relay and one that is compatible with the bespoke JSON endpoint.\n */\n\nfunction failingConditionsFromRelay(pull: MergeStatusButtonData): string[] {\n  const failures = pull.mergeRequirements.conditions.filter(cond => 'result' in cond && cond.result === 'FAILED')\n  return failures.map(cond => cond.__typename)\n}\n\nfunction failingRuleRollupTypesFromRelay(pull: MergeStatusButtonData): RepositoryRuleType[] {\n  const ruleCondition = pull.mergeRequirements.conditions.find(cond => cond.__typename === 'PullRequestRulesCondition')\n  if (!ruleCondition || !('ruleRollups' in ruleCondition)) return []\n\n  const failures = ruleCondition.ruleRollups?.filter(rollup => rollup.result === 'FAILED')\n  if (!failures) return []\n\n  return failures.map(rollup => rollup.ruleType)\n}\n\nfunction hasNonactionableFailuresFromRelay(pull: MergeStatusButtonData): boolean {\n  const failing = failingConditionsFromRelay(pull)\n  return failing.includes('PullRequestRepoStateCondition') || failing.includes('PullRequestUserStateCondition')\n}\n\nfunction hasConflictsFromRelay(pull: MergeStatusButtonData): boolean {\n  return failingConditionsFromRelay(pull).includes('PullRequestMergeConflictStateCondition')\n}\n\nfunction requiredStatusCheckMessageFromRelay(pull: MergeStatusButtonData): string {\n  const ruleCondition = pull.mergeRequirements.conditions.find(cond => cond.__typename === 'PullRequestRulesCondition')\n  const reqChecksRollup =\n    ruleCondition?.__typename === 'PullRequestRulesCondition'\n      ? ruleCondition.ruleRollups!.find(rollup => rollup.ruleType === 'REQUIRED_STATUS_CHECKS')\n      : null\n  if (!reqChecksRollup || reqChecksRollup.result !== 'FAILED') return ''\n\n  return reqChecksRollup.message ?? ''\n}\n\nfunction hasPendingRequiredChecksFromRelay(pull: MergeStatusButtonData): boolean {\n  return (\n    failingRuleRollupTypesFromRelay(pull).includes('REQUIRED_STATUS_CHECKS') && !hasFailingRequiredChecksFromRelay(pull)\n  )\n}\n\nfunction hasFailingRequiredChecksFromRelay(pull: MergeStatusButtonData): boolean {\n  return (\n    failingRuleRollupTypesFromRelay(pull).includes('REQUIRED_STATUS_CHECKS') &&\n    !!requiredStatusCheckMessageFromRelay(pull).match(/failing|errored/)\n  )\n}\n\nfunction pullRequestRuleFailureReasonsFromRelay(pull: MergeStatusButtonData): readonly PullRequestRuleFailureReason[] {\n  const ruleCondition = pull.mergeRequirements.conditions.find(cond => cond.__typename === 'PullRequestRulesCondition')\n  const pullRequestRollup =\n    ruleCondition?.__typename === 'PullRequestRulesCondition'\n      ? ruleCondition.ruleRollups!.find(rollup => rollup.ruleType === 'PULL_REQUEST')\n      : null\n  if (!pullRequestRollup || pullRequestRollup.result !== 'FAILED') return []\n\n  return pullRequestRollup.failureReasons || []\n}\n\nfunction isAwaitingReviewFromRelay(pull: MergeStatusButtonData): boolean {\n  return (\n    failingRuleRollupTypesFromRelay(pull).includes('PULL_REQUEST') &&\n    !pullRequestRuleFailureReasonsFromRelay(pull).includes('CHANGES_REQUESTED')\n  )\n}\n\nfunction hasRequestedChangesFromRelay(pull: MergeStatusButtonData): boolean {\n  return pullRequestRuleFailureReasonsFromRelay(pull).includes('CHANGES_REQUESTED')\n}\n\n/**\n * Computes the mergeability status of a pull request,\n * which is used to determine the color and presentation of the\n * merge status button and various other UI elements.\n * This is the version that is compatible with Relay.\n */\nexport function mergeabilityStatusFromRelay(pull: MergeStatusButtonData): Status {\n  const reqs = pull.mergeRequirements\n  if (pull.state === 'MERGED') {\n    return Status.Merged\n  } else if (pull.state === 'CLOSED') {\n    return Status.Closed\n  } else if (hasNonactionableFailuresFromRelay(pull)) {\n    return Status.NonactionableFailure\n  } else if (pull.isInMergeQueue) {\n    return Status.InMergeQueue\n  } else if (pull.isDraft && !failingRuleRollupTypesFromRelay(pull).includes('REQUIRED_STATUS_CHECKS')) {\n    return Status.DraftReadyForReview\n  } else if (pull.isDraft) {\n    return Status.DraftNotReadyForReview\n  } else if (reqs.state === 'MERGEABLE') {\n    return Status.Mergeable\n  } else if (hasPendingRequiredChecksFromRelay(pull)) {\n    return Status.ChecksPending\n  } else if (hasFailingRequiredChecksFromRelay(pull)) {\n    return Status.ChecksFailing\n  } else if (isAwaitingReviewFromRelay(pull)) {\n    return Status.AwaitingReview\n  } else if (hasRequestedChangesFromRelay(pull)) {\n    return Status.ChangesRequested\n  } else if (reqs.state === 'UNKNOWN' && !hasConflictsFromRelay(pull)) {\n    return Status.Unknown\n  } else if (hasConflictsFromRelay(pull)) {\n    return Status.MergeConflicts\n  } else {\n    return Status.UnableToMerge\n  }\n}\n\nfunction failingConditions(mergeRequirements: PullRequestMergeRequirementsPayload | null): string[] {\n  const failures = mergeRequirements?.conditions.filter(cond => cond.result === 'FAILED') ?? []\n  return failures.map(cond => cond.type)\n}\n\nfunction hasNonactionableFailures(mergeRequirements: PullRequestMergeRequirementsPayload | null) {\n  const failing = failingConditions(mergeRequirements)\n  return failing.includes('PULL_REQUEST_REPO_STATE') || failing.includes('PULL_REQUEST_USER_STATE')\n}\n\nfunction failingRuleRollupTypes(mergeRequirements: PullRequestMergeRequirementsPayload | null): RepositoryRuleType[] {\n  const ruleCondition = mergeRequirements?.conditions.find(cond => cond.type === 'PULL_REQUEST_RULES')\n  if (!ruleCondition) return []\n\n  const failures = ruleCondition?.ruleRollups?.filter(rollup => rollup.result === 'FAILED')\n  if (!failures) return []\n\n  return failures.map(rollup => rollup.ruleType)\n}\n\nfunction hasPendingRequiredChecks(mergeRequirements: PullRequestMergeRequirementsPayload | null): boolean {\n  return (\n    failingRuleRollupTypes(mergeRequirements).includes('REQUIRED_STATUS_CHECKS') &&\n    !hasFailingRequiredChecks(mergeRequirements)\n  )\n}\n\nfunction requiredStatusCheckMessage(mergeRequirements: PullRequestMergeRequirementsPayload | null): string {\n  const ruleCondition = mergeRequirements?.conditions.find(cond => cond.type === 'PULL_REQUEST_RULES')\n  const reqChecksRollup = ruleCondition?.ruleRollups?.find(rollup => rollup.ruleType === 'REQUIRED_STATUS_CHECKS')\n  if (!reqChecksRollup || reqChecksRollup.result !== 'FAILED') return ''\n\n  return reqChecksRollup.message ?? ''\n}\n\nfunction hasFailingRequiredChecks(mergeRequirements: PullRequestMergeRequirementsPayload | null): boolean {\n  return (\n    failingRuleRollupTypes(mergeRequirements).includes('REQUIRED_STATUS_CHECKS') &&\n    !!requiredStatusCheckMessage(mergeRequirements).match(/failing|errored/)\n  )\n}\n\nfunction isAwaitingReview(mergeRequirements: PullRequestMergeRequirementsPayload | null): boolean {\n  return (\n    failingRuleRollupTypes(mergeRequirements).includes('PULL_REQUEST') &&\n    !pullRequestRuleFailureReasons(mergeRequirements).includes('CHANGES_REQUESTED')\n  )\n}\n\nfunction pullRequestRuleFailureReasons(\n  mergeRequirements: PullRequestMergeRequirementsPayload | null,\n): PullRequestRuleFailureReason[] {\n  const ruleCondition = mergeRequirements?.conditions.find(cond => cond.type === 'PULL_REQUEST_RULES')\n  const pullRequestRollup = ruleCondition?.ruleRollups?.find(rollup => rollup.ruleType === 'PULL_REQUEST')\n  if (!pullRequestRollup || pullRequestRollup.result !== 'FAILED') return []\n  const metadata = pullRequestRollup.metadata\n\n  return metadata && 'failureReasons' in metadata\n    ? (metadata.failureReasons.map(r => r.toUpperCase()) as PullRequestRuleFailureReason[]) || []\n    : []\n}\n\nfunction hasRequestedChanges(mergeRequirements: PullRequestMergeRequirementsPayload | null): boolean {\n  return pullRequestRuleFailureReasons(mergeRequirements).includes('CHANGES_REQUESTED')\n}\n\nfunction hasConflicts(mergeRequirements: PullRequestMergeRequirementsPayload | null) {\n  return failingConditions(mergeRequirements).includes('PULL_REQUEST_MERGE_CONFLICT_STATE')\n}\n\n/**\n * Computes the mergeability status of a pull request,\n * which is used to determine the color and presentation of the\n * merge status button and various other UI elements.\n * This is the version that is compatible with the bespoke JSON endpoint.\n */\nexport function mergeabilityStatus({pullRequest: pull, mergeRequirements}: MergeBoxPageData) {\n  if (pull.state === 'MERGED') {\n    return Status.Merged\n  } else if (pull.state === 'CLOSED') {\n    return Status.Closed\n  } else if (hasNonactionableFailures(mergeRequirements)) {\n    return Status.NonactionableFailure\n  } else if (pull.isInMergeQueue) {\n    return Status.InMergeQueue\n  } else if (pull.isDraft && !failingRuleRollupTypes(mergeRequirements).includes('REQUIRED_STATUS_CHECKS')) {\n    return Status.DraftReadyForReview\n  } else if (pull.isDraft) {\n    return Status.DraftNotReadyForReview\n  } else if (mergeRequirements?.state === 'MERGEABLE') {\n    return Status.Mergeable\n  } else if (hasPendingRequiredChecks(mergeRequirements)) {\n    return Status.ChecksPending\n  } else if (hasFailingRequiredChecks(mergeRequirements)) {\n    return Status.ChecksFailing\n  } else if (isAwaitingReview(mergeRequirements)) {\n    return Status.AwaitingReview\n  } else if (hasRequestedChanges(mergeRequirements)) {\n    return Status.ChangesRequested\n  } else if (mergeRequirements?.state === 'UNKNOWN' && !hasConflicts(mergeRequirements)) {\n    return Status.Unknown\n  } else if (hasConflicts(mergeRequirements)) {\n    return Status.MergeConflicts\n  } else {\n    return Status.UnableToMerge\n  }\n}\n","import {branchPath} from '@github-ui/paths'\nimport useSafeState from '@github-ui/use-safe-state'\nimport {SyncIcon} from '@primer/octicons-react'\nimport {BranchName, Button, Spinner} from '@primer/react'\nimport {useRelayEnvironment} from 'react-relay'\n\nimport {deletePullRequestHeadRefMutation} from '../mutations/delete-pull-request-head-ref-mutation'\nimport {restorePullRequestHeadRefMutation} from '../mutations/restore-pull-request-head-ref'\nimport type {deletePullRequestHeadRefMutation$data} from '../mutations/__generated__/deletePullRequestHeadRefMutation.graphql'\nimport type {restorePullRequestHeadRefMutation$data} from '../mutations/__generated__/restorePullRequestHeadRefMutation.graphql'\nimport {MergeBoxSectionHeader} from './sections/common/MergeBoxSectionHeader'\nimport {borderColorClassForStatus, Status} from '../helpers/mergeability-status'\nimport type {PullRequestState} from '../types'\n\ninterface Props {\n  // We only care about the closed and merged state\n  state: PullRequestState\n\n  // All of this needed only to create the branch path.\n  headRefName: string\n  headRepository:\n    | {\n        owner: {\n          login: string\n        }\n        name: string\n      }\n    | null\n    | undefined\n\n  // These states are mutually exclusive\n  viewerCanDeleteHeadRef: boolean\n  viewerCanRestoreHeadRef: boolean\n}\n\ntype RelayMutationCallbacks<T> = {\n  onCompleted: (response: T) => void\n  onError: (error: Error) => void\n}\n\ninterface Callbacks {\n  onDeleteHeadRef: ({onCompleted, onError}: RelayMutationCallbacks<deletePullRequestHeadRefMutation$data>) => void\n  onRestoreHeadRef: ({onCompleted, onError}: RelayMutationCallbacks<restorePullRequestHeadRefMutation$data>) => void\n}\n\n/*\n * Displays closed and merged states for the merge box\n * For closed, only displays if the viewer can delete the head ref\n * For merged, only displays if the viewer can either delete the head ref or restore it\n */\nexport function ClosedOrMergedStateMergeBox({\n  state,\n  headRefName,\n  headRepository,\n  viewerCanDeleteHeadRef,\n  viewerCanRestoreHeadRef,\n  onDeleteHeadRef: onDeleteHeadRef,\n  onRestoreHeadRef: onRestoreHeadRef,\n}: Props & Callbacks) {\n  const [error, setError] = useSafeState(false)\n  const [isSubmitting, setIsSubmitting] = useSafeState(false)\n  const [isDeletingBranch, setIsDeletingBranch] = useSafeState(false)\n\n  if (state === 'OPEN' || (!viewerCanDeleteHeadRef && !viewerCanRestoreHeadRef)) {\n    return null\n  }\n\n  const handleDeleteRef = () => {\n    setIsSubmitting(true)\n    setIsDeletingBranch(true)\n    onDeleteHeadRef({\n      onCompleted: () => {\n        setError(false)\n        setIsDeletingBranch(false)\n        setIsSubmitting(false)\n      },\n      onError: () => {\n        // TODO: We should be doing something with the error being returned here - @jah2488 (2024-04-22)\n        setError(true)\n        setIsSubmitting(false)\n      },\n    })\n  }\n\n  const handleRestoreRef = () => {\n    setIsSubmitting(true)\n    onRestoreHeadRef({\n      onCompleted: () => {\n        setError(false)\n        setIsSubmitting(false)\n      },\n      onError: () => {\n        // TODO: We should be doing something with the error being returned here - @jah2488 (2024-04-22)\n        setError(true)\n        setIsSubmitting(false)\n      },\n    })\n  }\n\n  const generateRepositoryURL = (): string => {\n    if (!headRepository || !headRepository.name) {\n      return ''\n    }\n    return branchPath({\n      owner: headRepository.owner.login,\n      repo: headRepository.name,\n      branch: headRefName,\n    })\n  }\n\n  const headingText =\n    state === 'MERGED' ? 'Pull request successfully merged and closed' : 'Closed with unmerged commits'\n  const borderColor =\n    state === 'MERGED' ? borderColorClassForStatus(Status.Merged) : borderColorClassForStatus(Status.Closed)\n\n  const actionButton = () => {\n    if (viewerCanDeleteHeadRef) {\n      return (\n        <Button disabled={isSubmitting} onClick={handleDeleteRef} aria-busy={isDeletingBranch}>\n          {isDeletingBranch ? (\n            <div className=\"d-flex flex-row flex-items-center\">\n              <Spinner size={'small'} sx={{mr: 1}} />\n              <span>Deleting branch...</span>\n            </div>\n          ) : (\n            <span>Delete branch</span>\n          )}\n        </Button>\n      )\n    } else if (viewerCanRestoreHeadRef) {\n      return (\n        <Button disabled={isSubmitting} onClick={handleRestoreRef}>\n          Restore branch\n        </Button>\n      )\n    }\n  }\n\n  const subtitle = () => {\n    if (state === 'MERGED') {\n      if (viewerCanDeleteHeadRef) {\n        return (\n          <>\n            You&#39;re all set &#8212; the <BranchName href={generateRepositoryURL()}>{headRefName}</BranchName> branch\n            can be safely deleted.\n          </>\n        )\n      } else if (viewerCanRestoreHeadRef) {\n        return (\n          <>\n            You&#39;re all set &#8212; the <BranchName as=\"span\">{headRefName}</BranchName> branch has been merged and\n            deleted.\n          </>\n        )\n      }\n    } else {\n      if (viewerCanDeleteHeadRef) {\n        return (\n          <>\n            This pull request is closed, but the <BranchName href={generateRepositoryURL()}>{headRefName}</BranchName>{' '}\n            branch has unmerged commits.\n          </>\n        )\n      } else if (viewerCanRestoreHeadRef) {\n        return (\n          <>\n            This pull request is closed and the <BranchName href={generateRepositoryURL()}> {headRefName} </BranchName>\n            branch has been deleted.\n          </>\n        )\n      }\n    }\n  }\n\n  const mainContent = () => {\n    if (error) {\n      return (\n        <MergeBoxSectionHeader\n          title=\"Couldn&#39;t update branch\"\n          subtitle=\"Oops, something went wrong.\"\n          rightSideContent={\n            <Button disabled={isSubmitting} leadingVisual={SyncIcon} onClick={() => setError(false)}>\n              Try again\n            </Button>\n          }\n        />\n      )\n    } else {\n      return <MergeBoxSectionHeader title={headingText} subtitle={subtitle()} rightSideContent={actionButton()} />\n    }\n  }\n\n  return <div className={`width-full border ${borderColor} rounded-2`}>{mainContent()}</div>\n}\n\n/*\n * The relay connected wrapper for the ClosedOrMergedStateMergeBox component\n */\nexport function ClosedOrMergedStateMergeBoxWithRelay({id: pullRequestId, ...props}: Props & {id: string}) {\n  const environment = useRelayEnvironment()\n\n  const onDeleteHeadRef = ({\n    onCompleted,\n    onError,\n  }: RelayMutationCallbacks<deletePullRequestHeadRefMutation$data>): void => {\n    deletePullRequestHeadRefMutation({\n      environment,\n      input: {pullRequestId},\n      onCompleted,\n      onError,\n    })\n  }\n\n  const onRestoreHeadRef = ({\n    onCompleted,\n    onError,\n  }: RelayMutationCallbacks<restorePullRequestHeadRefMutation$data>): void => {\n    restorePullRequestHeadRefMutation({\n      environment,\n      input: {pullRequestId},\n      onCompleted,\n      onError,\n    })\n  }\n  return (\n    <div className=\"d-flex flex-row position-relative\">\n      <ClosedOrMergedStateMergeBox {...props} onDeleteHeadRef={onDeleteHeadRef} onRestoreHeadRef={onRestoreHeadRef} />\n    </div>\n  )\n}\n\ntry{ ClosedOrMergedStateMergeBox.displayName ||= 'ClosedOrMergedStateMergeBox' } catch {}\ntry{ ClosedOrMergedStateMergeBoxWithRelay.displayName ||= 'ClosedOrMergedStateMergeBoxWithRelay' } catch {}","import {commitMutation, graphql} from 'react-relay'\nimport type {Environment} from 'relay-runtime'\n\nimport type {\n  deletePullRequestHeadRefMutation as deletePullRequestHeadRefMutationType,\n  deletePullRequestHeadRefMutation$data,\n} from './__generated__/deletePullRequestHeadRefMutation.graphql'\n\nexport function deletePullRequestHeadRefMutation({\n  environment,\n  input: {pullRequestId},\n  onCompleted,\n  onError,\n}: {\n  environment: Environment\n  input: {pullRequestId: string}\n  onCompleted?: (response: deletePullRequestHeadRefMutation$data) => void\n  onError?: (error: Error) => void\n}) {\n  return commitMutation<deletePullRequestHeadRefMutationType>(environment, {\n    mutation: graphql`\n      mutation deletePullRequestHeadRefMutation($id: ID!) @raw_response_type {\n        deletePullRequestHeadRef(input: {pullRequestId: $id}) {\n          pullRequest {\n            id\n            state\n            headRefName\n            headRepository {\n              owner {\n                login\n              }\n              name\n            }\n            viewerCanDeleteHeadRef\n            viewerCanRestoreHeadRef\n            viewerCanReopen\n          }\n        }\n      }\n    `,\n    variables: {id: pullRequestId},\n    onCompleted,\n    onError,\n  })\n}\n","import {commitMutation, graphql} from 'react-relay'\nimport type {Environment} from 'relay-runtime'\n\nimport type {\n  restorePullRequestHeadRefMutation as restorePullRequestHeadRefMutationType,\n  restorePullRequestHeadRefMutation$data,\n} from './__generated__/restorePullRequestHeadRefMutation.graphql'\n\nexport function restorePullRequestHeadRefMutation({\n  environment,\n  input: {pullRequestId},\n  onCompleted,\n  onError,\n}: {\n  environment: Environment\n  input: {pullRequestId: string}\n  onCompleted?: (response: restorePullRequestHeadRefMutation$data) => void\n  onError?: (error: Error) => void\n}) {\n  return commitMutation<restorePullRequestHeadRefMutationType>(environment, {\n    mutation: graphql`\n      mutation restorePullRequestHeadRefMutation($id: ID!) @raw_response_type {\n        restorePullRequestHeadRef(input: {pullRequestId: $id}) {\n          pullRequest {\n            id\n            state\n            headRefName\n            headRepository {\n              owner {\n                login\n              }\n              name\n            }\n            viewerCanDeleteHeadRef\n            viewerCanRestoreHeadRef\n            viewerCanReopen\n          }\n        }\n      }\n    `,\n    variables: {id: pullRequestId},\n    onCompleted,\n    onError,\n  })\n}\n","import {Box, Spinner} from '@primer/react'\nimport type {BetterSystemStyleObject} from '@primer/react/lib-esm/sx'\n\nexport function CenteredLoadingSpinner({sx}: {sx?: BetterSystemStyleObject}): JSX.Element {\n  return (\n    <Box\n      sx={{\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        mt: 6,\n        width: '100%',\n        ...sx,\n      }}\n    >\n      <Spinner />\n    </Box>\n  )\n}\n\ntry{ CenteredLoadingSpinner.displayName ||= 'CenteredLoadingSpinner' } catch {}","import {noop} from '@github-ui/noop'\nimport {TriangleDownIcon} from '@primer/octicons-react'\nimport {ActionMenu, Button, ButtonGroup, IconButton, type ButtonProps} from '@primer/react'\nimport {useEffect, useRef, useState} from 'react'\nimport {Tooltip} from '@primer/react/next'\n\ntype ButtonWithDropdownProps = {\n  /**\n   * The text to render in the primary button\n   */\n  children?: string | JSX.Element\n  /**\n   * Whether the primary button is in a busy state\n   */\n  ariaBusy?: boolean\n  /**\n   * Action list component that renders when the secondary icon button is activated\n   */\n  actionList?: JSX.Element\n  /**\n   * Whether to make both primary and secondary buttons inactive\n   */\n  inactive: boolean\n  /**\n   * Tooltip text if the buttons are inactive\n   */\n  inactiveTooltipText: string\n  /**\n   * Optional override that makes the secondary button active even if the inactive prop is set to false\n   */\n  secondaryButtonActive?: boolean\n  /**\n   * The aria-label for the secondary button\n   */\n  secondaryButtonAriaLabel: string\n  /**\n   * Function to handle the primary button click\n   */\n  onPrimaryButtonClick: () => void\n  /**\n   * If buttons should be shown in their primary variant\n   */\n  isPrimary?: boolean\n  /**\n   * Whether to focus the primary button on render\n   */\n  shouldFocusPrimaryButton?: boolean\n  /**\n   * Optional function to handle focus\n   */\n  onFocusPrimaryButton?: () => void\n  /**\n   * Optional boolean to hide secondaryButton\n   */\n  hideSecondaryButton?: boolean\n} & Pick<ButtonProps, 'variant'>\n\n/**\n * Renders a primary button with a secondary icon button dropdown\n */\nexport function ButtonWithDropdown({\n  children,\n  actionList,\n  ariaBusy,\n  inactive,\n  inactiveTooltipText,\n  secondaryButtonActive,\n  secondaryButtonAriaLabel,\n  onPrimaryButtonClick,\n  shouldFocusPrimaryButton,\n  onFocusPrimaryButton,\n  isPrimary = false,\n  hideSecondaryButton = false,\n}: ButtonWithDropdownProps) {\n  const primaryButtonRef = useRef<HTMLButtonElement>(null)\n  useEffect(() => {\n    if (shouldFocusPrimaryButton) {\n      primaryButtonRef.current?.focus()\n      onFocusPrimaryButton?.()\n    }\n  }, [shouldFocusPrimaryButton, onFocusPrimaryButton])\n\n  // The button group constrains the width of the overlay, so we set it to a fixed width\n  const overlayWidth = '320px'\n  const buttonVariant = isPrimary ? 'primary' : 'default'\n\n  const [isOpen, setIsOpen] = useState(false)\n\n  const secondaryButtonInactive = inactive && !secondaryButtonActive\n\n  const buttonContent = (\n    <ButtonGroup>\n      <Button\n        variant={buttonVariant}\n        ref={primaryButtonRef}\n        inactive={inactive}\n        aria-busy={ariaBusy}\n        aria-disabled={inactive}\n        onClick={inactive ? noop : onPrimaryButtonClick}\n      >\n        {children}\n      </Button>\n      {!hideSecondaryButton && (\n        <ActionMenu open={isOpen} onOpenChange={secondaryButtonInactive ? noop : open => setIsOpen(open)}>\n          <ActionMenu.Anchor>\n            {/* eslint-disable-next-line primer-react/a11y-remove-disable-tooltip */}\n            <IconButton\n              variant={buttonVariant}\n              unsafeDisableTooltip={true}\n              aria-label={secondaryButtonAriaLabel}\n              aria-disabled={secondaryButtonInactive}\n              inactive={secondaryButtonInactive}\n              icon={TriangleDownIcon}\n            />\n          </ActionMenu.Anchor>\n          <ActionMenu.Overlay align=\"end\" sx={{width: overlayWidth}}>\n            {actionList}\n          </ActionMenu.Overlay>\n        </ActionMenu>\n      )}\n    </ButtonGroup>\n  )\n\n  if (inactive) {\n    return (\n      <Tooltip text={inactiveTooltipText} direction=\"ne\">\n        {buttonContent}\n      </Tooltip>\n    )\n  }\n\n  return buttonContent\n}\n\ntry{ ButtonWithDropdown.displayName ||= 'ButtonWithDropdown' } catch {}","import {AlertFillIcon} from '@primer/octicons-react'\nimport {CircleOcticon} from '@primer/react'\nimport {HEADER_ICON_SIZE} from '../../../constants'\n\nexport function AlertIcon() {\n  return (\n    <CircleOcticon\n      icon={() => <AlertFillIcon size={16} />}\n      size={HEADER_ICON_SIZE}\n      sx={{bg: 'neutral.emphasis', color: 'fg.onEmphasis'}}\n    />\n  )\n}\n\ntry{ AlertIcon.displayName ||= 'AlertIcon' } catch {}","// eslint-disable-next-line no-restricted-imports\nimport {useToastContext} from '@github-ui/toast/ToastContext'\nimport {useAnalytics} from '@github-ui/use-analytics'\nimport useSafeState from '@github-ui/use-safe-state'\nimport {CheckIcon, FileIcon} from '@primer/octicons-react'\nimport {ActionList, CircleOcticon, Link, LinkButton, Spinner} from '@primer/react'\nimport {useState} from 'react'\nimport {useRelayEnvironment} from 'react-relay'\n\nimport {useMergeMethodContext} from '../../contexts/MergeMethodContext'\nimport updatePullRequestBranch from '../../mutations/update-pull-request-branch'\nimport {CenteredLoadingSpinner} from './common/CenteredLoadingSpinner'\nimport {ButtonWithDropdown} from './common/ButtonWithDropdown'\nimport {AlertIcon} from './common/AlertIcon'\nimport {HEADER_ICON_SIZE} from '../../constants'\nimport {MergeBoxSectionHeader} from './common/MergeBoxSectionHeader'\nimport type {MergeMethod, MergeStateStatus, PullRequestMergeConditionResult} from '../../types'\nimport type {PullRequestBranchUpdateMethod} from '../../mutations/__generated__/updatePullRequestBranchMutation.graphql'\n\nexport type UpdateBranchFunction = ({\n  selectedUpdateMethod,\n  onCompleted,\n  onError,\n  mergeMethod,\n}: {\n  selectedUpdateMethod: PullRequestBranchUpdateMethod\n  onCompleted: () => void\n  onError: () => void\n  mergeMethod: MergeMethod\n}) => void\n\nfunction UpdateBranchOption({\n  description,\n  onSelect,\n  selected,\n  text,\n}: {\n  description: string\n  onSelect: () => void\n  selected: boolean\n  text: string\n}) {\n  return (\n    <ActionList.Item selected={selected} onSelect={onSelect}>\n      {text}\n      <ActionList.Description variant=\"block\">{description}</ActionList.Description>\n    </ActionList.Item>\n  )\n}\n\nconst heading: {[key: string]: string} = {\n  NO_CONFLICTS: 'This branch has no conflicts with the base branch',\n  PENDING: 'Checking for the ability to merge automatically...',\n  OUT_OF_DATE: 'This branch is out-of-date with the base branch',\n  HAS_CONFLICTS: 'This branch has conflicts that must be resolved',\n  COMPLEX_CONFLICTS: 'This branch has conflicts that must be resolved',\n}\n\nconst icons: {[key: string]: JSX.Element} = {\n  NO_CONFLICTS: (\n    <CircleOcticon\n      icon={() => <CheckIcon size={16} />}\n      className=\"bgColor-success-emphasis fgColor-onEmphasis\"\n      size={HEADER_ICON_SIZE}\n    />\n  ),\n  PENDING: <CenteredLoadingSpinner sx={{mt: 0, width: 'auto'}} />,\n  OUT_OF_DATE: <AlertIcon />,\n  HAS_CONFLICTS: <AlertIcon />,\n  COMPLEX_CONFLICTS: <AlertIcon />,\n}\n\ntype ConflictsSectionWithRelayProps = Omit<ConflictsSectionProps, 'onUpdateBranch'> & {id: string}\nexport function ConflictsSectionWithRelay({id, ...props}: ConflictsSectionWithRelayProps) {\n  const environment = useRelayEnvironment()\n  const onUpdateBranch: UpdateBranchFunction = ({selectedUpdateMethod, mergeMethod, onCompleted, onError}) => {\n    updatePullRequestBranch({\n      environment,\n      input: {\n        pullRequestId: id,\n        updateMethod: selectedUpdateMethod,\n      },\n      onCompleted,\n      onError,\n      mergeMethod,\n    })\n  }\n\n  return <ConflictsSection {...props} onUpdateBranch={onUpdateBranch} />\n}\n\ntype ConflictMergeCondition = {\n  conflicts?: string[] | null | undefined\n  isConflictResolvableInWeb?: boolean | null | undefined\n  message: string | null | undefined\n  result: PullRequestMergeConditionResult\n}\n\nexport type ConflictsSectionProps = {\n  baseRefName: string\n  mergeStateStatus: MergeStateStatus\n  resourcePath: string\n  viewerCanUpdateBranch: boolean\n  viewerLogin: string\n  conflictsCondition: ConflictMergeCondition | undefined\n} & Callbacks\n\ntype Callbacks = {\n  onUpdateBranch: UpdateBranchFunction\n}\n\n/**\n *\n * Renders the pull request \"git\" merge status\n * If there are merge conflicts, describes them.\n * Allows the user to update a branch if it's out of date.\n * Also: It returns null if the merge state status is BLOCKED because this component doesn't care about BLOCKED.\n */\nexport function ConflictsSection({\n  baseRefName,\n  mergeStateStatus,\n  resourcePath,\n  viewerCanUpdateBranch,\n  viewerLogin,\n  conflictsCondition,\n  onUpdateBranch,\n}: ConflictsSectionProps) {\n  const {addToast} = useToastContext()\n  const [selectedUpdateMethod, setSelectedUpdateMethod] = useState<'MERGE' | 'REBASE'>('MERGE')\n  const [isUpdating, setIsUpdating] = useSafeState(false)\n  const {mergeMethod} = useMergeMethodContext()\n  const {sendAnalyticsEvent} = useAnalytics()\n\n  const handleUpdateBranch = () => {\n    if (isUpdating) return\n\n    setIsUpdating(true)\n    onUpdateBranch({\n      selectedUpdateMethod,\n      onCompleted: () => {\n        setIsUpdating(false)\n      },\n      onError: () => {\n        setIsUpdating(false)\n        // eslint-disable-next-line @github-ui/dotcom-primer/toast-migration\n        addToast({\n          message: 'Something went wrong trying to update branch. Please try again.',\n          type: 'error',\n        })\n      },\n      mergeMethod,\n    })\n    sendAnalyticsEvent('conflicts_section.update_branch', 'MERGEBOX_CONFLICTS_SECTION_UPDATE_BRANCH_BUTTON')\n  }\n\n  let conflictsState = 'PENDING'\n  const conflictsWebEditorPath = `${resourcePath}/conflicts`\n\n  if (!conflictsCondition) return null\n  if (!('conflicts' in conflictsCondition) || !('result' in conflictsCondition)) return null\n  const conflicts = conflictsCondition.conflicts ?? []\n\n  if (mergeStateStatus === 'BEHIND') {\n    conflictsState = 'OUT_OF_DATE'\n  } else if (mergeStateStatus === 'UNKNOWN') {\n    conflictsState = 'PENDING'\n  } else if (mergeStateStatus === 'CLEAN' || mergeStateStatus === 'UNSTABLE' || mergeStateStatus === 'HAS_HOOKS') {\n    conflictsState = 'NO_CONFLICTS'\n  } else if (mergeStateStatus === 'DIRTY' && conflictsCondition.result === 'FAILED' && conflicts.length > 0) {\n    if ('isConflictResolvableInWeb' in conflictsCondition && conflictsCondition.isConflictResolvableInWeb) {\n      conflictsState = 'HAS_CONFLICTS'\n    } else {\n      conflictsState = 'COMPLEX_CONFLICTS'\n    }\n  } else if (mergeStateStatus === 'BLOCKED') {\n    conflictsState = 'OUT_OF_DATE'\n  }\n\n  function updateBranchButtonText() {\n    if (selectedUpdateMethod === 'MERGE' && isUpdating) {\n      return (\n        <div className=\"d-flex flex-row flex-items-center\">\n          <Spinner size=\"small\" sx={{mr: 1}} />\n          <span> Updating branch... </span>\n        </div>\n      )\n    }\n    if (selectedUpdateMethod === 'MERGE' && !isUpdating) {\n      return <span> Update branch </span>\n    }\n    if (isUpdating) {\n      return (\n        <div className=\"d-flex flex-row flex-items-center\">\n          <Spinner size=\"small\" sx={{mr: 1}} />\n          <span> Rebasing branch... </span>\n        </div>\n      )\n    }\n\n    return <span> Rebase branch </span>\n  }\n\n  const showUpdateBranchButton =\n    (conflictsState === 'OUT_OF_DATE' || conflictsState === 'NO_CONFLICTS' || conflictsState === 'PENDING') &&\n    viewerCanUpdateBranch\n\n  const subtitle: {[key: string]: string | JSX.Element} = {\n    NO_CONFLICTS: 'Merging can be performed automatically.',\n    PENDING: \"Hang in there while we check the branch's status.\",\n    OUT_OF_DATE: `Merge the latest changes from ${baseRefName} into this branch. This merge commit will be associated with ${viewerLogin}.`,\n    HAS_CONFLICTS: (\n      <span>\n        Use the{' '}\n        <Link inline href={conflictsWebEditorPath} underline={true}>\n          web editor\n        </Link>{' '}\n        or the command line to resolve conflicts before continuing. Actions workflows will not trigger on activity from\n        this pull request while it has merge conflicts.\n      </span>\n    ),\n    COMPLEX_CONFLICTS:\n      'Resolve conflicts then push again. These conflicts are too complex to resolve in the web editor. Actions workflows will not trigger on activity from this pull request while it has merge conflicts.',\n  }\n\n  if (mergeStateStatus === 'BLOCKED' && !viewerCanUpdateBranch) return null\n\n  return (\n    <section aria-label=\"Conflicts\" className=\"border-bottom borderColor-muted\">\n      <div className=\"d-flex flex-column width-full overflow-hidden\">\n        <MergeBoxSectionHeader\n          icon={icons[conflictsState]}\n          title={\n            <>\n              {heading[conflictsState]}\n              {isUpdating && <Spinner size=\"small\" sx={{ml: 2}} />}\n            </>\n          }\n          subtitle={subtitle[conflictsState]}\n          rightSideContent={\n            <>\n              {showUpdateBranchButton && (\n                <ButtonWithDropdown\n                  ariaBusy={isUpdating}\n                  inactive={false}\n                  inactiveTooltipText=\"Updating a branch is not available at this time.\"\n                  secondaryButtonAriaLabel=\"Update branch options\"\n                  actionList={\n                    <ActionList selectionVariant=\"single\" showDividers>\n                      <UpdateBranchOption\n                        description=\"The merge commit will be associated with your account.\"\n                        selected={selectedUpdateMethod === 'MERGE'}\n                        text=\"Update with merge commit\"\n                        onSelect={() => {\n                          sendAnalyticsEvent(\n                            'conflicts_section.select_merge_commit_method',\n                            'MERGEBOX_CONFLICTS_SECTION_MERGE_METHOD_MENU_ITEM',\n                          )\n                          setSelectedUpdateMethod('MERGE')\n                        }}\n                      />\n                      <UpdateBranchOption\n                        description=\"This pull request will be rebased on top of the latest changes and then force pushed.\"\n                        selected={selectedUpdateMethod === 'REBASE'}\n                        text=\"Update with rebase\"\n                        onSelect={() => {\n                          sendAnalyticsEvent(\n                            'conflicts_section.select_rebase_method',\n                            'MERGEBOX_CONFLICTS_SECTION_MERGE_METHOD_MENU_ITEM',\n                          )\n                          setSelectedUpdateMethod('REBASE')\n                        }}\n                      />\n                    </ActionList>\n                  }\n                  onPrimaryButtonClick={handleUpdateBranch}\n                >\n                  {updateBranchButtonText()}\n                </ButtonWithDropdown>\n              )}\n              {conflictsState === 'HAS_CONFLICTS' && (\n                <LinkButton href={conflictsWebEditorPath} underline={true}>\n                  Resolve conflicts\n                </LinkButton>\n              )}\n            </>\n          }\n        >\n          {(conflictsState === 'HAS_CONFLICTS' || conflictsState === 'COMPLEX_CONFLICTS') && (\n            <div className=\"ml-n3\">\n              <ActionList className=\"py-0 overflow-hidden\">\n                {conflicts.map(conflictPath => {\n                  return (\n                    <ActionList.Item key={conflictPath}>\n                      <ActionList.LeadingVisual className=\"fgColor-muted\">\n                        <FileIcon />\n                      </ActionList.LeadingVisual>\n                      <span className=\"input-monospace f6\">{conflictPath}</span>\n                    </ActionList.Item>\n                  )\n                })}\n              </ActionList>\n            </div>\n          )}\n        </MergeBoxSectionHeader>\n      </div>\n    </section>\n  )\n}\n\ntry{ UpdateBranchOption.displayName ||= 'UpdateBranchOption' } catch {}\ntry{ ConflictsSectionWithRelay.displayName ||= 'ConflictsSectionWithRelay' } catch {}\ntry{ ConflictsSection.displayName ||= 'ConflictsSection' } catch {}","import {commitMutation, graphql} from 'react-relay'\nimport type {Environment} from 'relay-runtime'\n\nimport type {MergeMethod} from '../types'\nimport type {\n  PullRequestBranchUpdateMethod,\n  updatePullRequestBranchMutation as updatePullRequestBranchType,\n  updatePullRequestBranchMutation$data,\n} from './__generated__/updatePullRequestBranchMutation.graphql'\n\ninterface UpdatePullRequestBranchInput {\n  pullRequestId: string\n  updateMethod: PullRequestBranchUpdateMethod | null | undefined\n}\n\nexport default function updatePullRequestBranch({\n  environment,\n  input,\n  onCompleted,\n  onError,\n  mergeMethod,\n}: {\n  environment: Environment\n  input: UpdatePullRequestBranchInput\n  onCompleted?: (response: updatePullRequestBranchMutation$data) => void\n  onError?: (error: Error) => void\n  mergeMethod: MergeMethod\n}) {\n  return commitMutation<updatePullRequestBranchType>(environment, {\n    mutation: graphql`\n      mutation updatePullRequestBranchMutation(\n        $input: UpdatePullRequestBranchInput!\n        $mergeMethod: PullRequestMergeMethod\n      ) {\n        updatePullRequestBranch(input: $input) {\n          pullRequest {\n            ...useLoadMergeBoxQuery_pullRequest\n          }\n        }\n      }\n    `,\n    variables: {input, mergeMethod},\n    onCompleted,\n    onError,\n  })\n}\n","import {useMergeMethodContext} from '../contexts/MergeMethodContext'\nimport {graphql, useQueryLoader} from 'react-relay'\nimport {usePreviousValue} from '@github-ui/use-previous-value'\n\nimport type {useLoadMergeBoxQuery} from './__generated__/useLoadMergeBoxQuery.graphql'\nimport {startTransition, useEffect} from 'react'\n\nexport const MergeBoxFragment = graphql`\n  fragment useLoadMergeBoxQuery_pullRequest on PullRequest @inline {\n    # eslint-disable-next-line relay/unused-fields\n    autoMergeRequest {\n      mergeMethod\n    }\n    # eslint-disable-next-line relay/unused-fields\n    baseRefName\n    # eslint-disable-next-line relay/unused-fields\n    commits {\n      totalCount\n    }\n    # eslint-disable-next-line relay/unused-fields\n    headRefOid\n    # eslint-disable-next-line relay/unused-fields\n    headRefName\n    # eslint-disable-next-line relay/unused-fields\n    headRepository {\n      owner {\n        login\n      }\n      name\n    }\n    # eslint-disable-next-line relay/unused-fields\n    id\n    # eslint-disable-next-line relay/unused-fields\n    isDraft\n    # eslint-disable-next-line relay/unused-fields\n    isInMergeQueue\n    # eslint-disable-next-line relay/unused-fields\n    latestOpinionatedReviews(first: 100) {\n      edges {\n        node {\n          authorCanPushToRepository\n          author {\n            login\n            avatarUrl\n            name\n            url\n          }\n          onBehalfOf(first: 10) {\n            edges {\n              node {\n                name\n              }\n            }\n          }\n          state\n        }\n      }\n    }\n    # eslint-disable-next-line relay/unused-fields\n    mergeQueueEntry {\n      position\n      state\n    }\n    # eslint-disable-next-line relay/unused-fields\n    mergeQueue {\n      url\n    }\n    # eslint-disable-next-line relay/unused-fields\n    mergeRequirements(mergeMethod: $mergeMethod) {\n      commitAuthor\n      commitMessageBody\n      commitMessageHeadline\n      state\n      conditions {\n        __typename\n        message\n        result\n        ... on PullRequestRulesCondition {\n          ruleRollups {\n            message\n            ruleType\n            result\n            ... on PullRequestRuleRollup {\n              failureReasons\n              requiredReviewers\n              requiresCodeowners\n            }\n          }\n        }\n        ... on PullRequestMergeConflictStateCondition {\n          __typename\n          conflicts\n          isConflictResolvableInWeb\n          result\n        }\n      }\n    }\n    # eslint-disable-next-line relay/unused-fields\n    mergeStateStatus\n    # eslint-disable-next-line relay/unused-fields\n    resourcePath\n    # eslint-disable-next-line relay/unused-fields\n    state\n    # eslint-disable-next-line relay/unused-fields\n    viewerCanAddAndRemoveFromMergeQueue\n    # eslint-disable-next-line relay/unused-fields\n    viewerCanDeleteHeadRef\n    # eslint-disable-next-line relay/unused-fields\n    viewerCanDisableAutoMerge\n    # eslint-disable-next-line relay/unused-fields\n    viewerCanEnableAutoMerge\n    # eslint-disable-next-line relay/unused-fields\n    viewerCanRestoreHeadRef\n    # eslint-disable-next-line relay/unused-fields\n    viewerCanUpdate\n    # eslint-disable-next-line relay/unused-fields\n    viewerCanUpdateBranch\n    # eslint-disable-next-line relay/unused-fields\n    viewerDidAuthor\n    # eslint-disable-next-line relay/unused-fields\n    viewerMergeActions {\n      name\n      isAllowable\n      # eslint-disable-next-line relay/unused-fields\n      mergeMethods {\n        name\n        isAllowable\n        isAllowableWithBypass\n      }\n    }\n    # eslint-disable-next-line relay/unused-fields\n    stateChannel: updatesChannel(name: STATE)\n    # eslint-disable-next-line relay/unused-fields\n    deployedChannel: updatesChannel(name: DEPLOYED)\n    # eslint-disable-next-line relay/unused-fields\n    reviewStateChannel: updatesChannel(name: REVIEW_STATE)\n    # eslint-disable-next-line relay/unused-fields\n    workflowsChannel: updatesChannel(name: WORKFLOWS)\n    # eslint-disable-next-line relay/unused-fields\n    mergeQueueChannel: updatesChannel(name: MERGE_QUEUE)\n    # eslint-disable-next-line relay/unused-fields\n    headRefChannel: updatesChannel(name: HEAD_REF)\n    # eslint-disable-next-line relay/unused-fields\n    baseRefChannel: updatesChannel(name: BASE_REF)\n    # eslint-disable-next-line relay/unused-fields\n    commitHeadShaChannel: updatesChannel(name: COMMIT_HEAD_SHA)\n    # eslint-disable-next-line relay/unused-fields\n    gitMergeStateChannel: updatesChannel(name: GIT_MERGE_STATE)\n  }\n`\n\nexport const LoadMergeBoxQuery = graphql`\n  query useLoadMergeBoxQuery($id: ID!, $mergeMethod: PullRequestMergeMethod) {\n    pullRequest: node(id: $id) {\n      ... on PullRequest {\n        ...useLoadMergeBoxQuery_pullRequest\n      }\n    }\n    # eslint-disable-next-line relay/unused-fields\n    viewer {\n      # eslint-disable-next-line relay/unused-fields\n      login\n    }\n  }\n`\n\nexport function useLoadMergeBoxQuery({pullRequestId}: {pullRequestId: string}) {\n  const {mergeMethod} = useMergeMethodContext()\n  const previousMergeMethod = usePreviousValue(mergeMethod)\n\n  const [query, loadQuery] = useQueryLoader<useLoadMergeBoxQuery>(LoadMergeBoxQuery)\n\n  useEffect(() => {\n    startTransition(() =>\n      loadQuery(\n        {mergeMethod, id: pullRequestId},\n        {\n          fetchPolicy:\n            !!previousMergeMethod && previousMergeMethod !== mergeMethod ? 'network-only' : 'store-or-network',\n        },\n      ),\n    )\n  }, [loadQuery, mergeMethod, previousMergeMethod, pullRequestId])\n\n  return {query, loadQuery}\n}\n","import useSafeState from '@github-ui/use-safe-state'\nimport {GitMergeQueueIcon, StopIcon} from '@primer/octicons-react'\nimport {Button, CircleOcticon, Dialog, Flash, Link, Octicon, Spinner, Text} from '@primer/react'\nimport {useRelayEnvironment} from 'react-relay'\n\nimport {useMergeMethodContext} from '../../../contexts/MergeMethodContext'\nimport removePullRequestFromMergeQueue from '../../../mutations/dequeue-pull-request-mutation'\nimport {MergeBoxSectionHeader} from '../common/MergeBoxSectionHeader'\nimport type {MergeMethod, MergeQueueEntryState} from '../../../types'\nimport {useRef, useState} from 'react'\nimport {announce} from '@github-ui/aria-live'\nimport {useAnalytics} from '@github-ui/use-analytics'\n\nexport type RemoveFromQueueFunction = ({\n  mergeMethod,\n  onCompleted,\n  onError,\n}: {\n  mergeMethod: MergeMethod\n  onCompleted: () => void\n  onError: (e: Error) => void\n}) => void\n\ntype MergeButtonFocusProps = {\n  focusPrimaryMergeButton: () => void\n}\n\ntype MergeQueueSectionWithRelayProps = Omit<Props, 'onRemoveFromQueue'> & {id: string}\n\n/**\n *\n * Wrapper component for the MergeQueueSection component\n */\nexport function MergeQueueSectionWithRelay({id, ...props}: MergeQueueSectionWithRelayProps) {\n  const environment = useRelayEnvironment()\n  const onRemoveFromQueue: RemoveFromQueueFunction = ({mergeMethod, onCompleted, onError}) => {\n    removePullRequestFromMergeQueue({\n      environment,\n      input: {id},\n      onCompleted,\n      onError,\n      mergeMethod,\n    })\n  }\n  return <MergeQueueSection {...props} onRemoveFromQueue={onRemoveFromQueue} />\n}\n\nexport type Props = {\n  mergeQueue:\n    | {\n        url: string\n      }\n    | null\n    | undefined\n  mergeQueueEntry:\n    | {\n        position: number\n        state: MergeQueueEntryState\n      }\n    | null\n    | undefined\n  viewerCanAddAndRemoveFromMergeQueue: boolean\n} & Callbacks &\n  MergeButtonFocusProps\n\ntype Callbacks = {\n  onRemoveFromQueue: RemoveFromQueueFunction\n}\n\n/**\n *\n * Presentational component for the MergeQueueSection\n * Displays queue position details and allows user to dequeue the pull request\n */\nexport function MergeQueueSection({\n  mergeQueue,\n  mergeQueueEntry,\n  viewerCanAddAndRemoveFromMergeQueue,\n  onRemoveFromQueue,\n  focusPrimaryMergeButton,\n}: Props) {\n  const isMergeEntryLocked = mergeQueueEntry?.state === 'LOCKED'\n  const mergePosition = mergeQueueEntry?.position\n  const mergeQueueUrl = mergeQueue?.url\n\n  const returnConfirmationRef = useRef<HTMLButtonElement>(null)\n  const [dequeueing, setDequeueing] = useSafeState(false)\n  const [isConfirmationDialogOpen, setIsConfirmationDialogOpen] = useState(false)\n  const [errorMessage, setErrorMessage] = useSafeState<string | null>(null)\n  const {mergeMethod} = useMergeMethodContext()\n\n  const {sendAnalyticsEvent} = useAnalytics()\n\n  const handleDequeue = () => {\n    if (dequeueing) return\n    setDequeueing(true)\n    setErrorMessage(null)\n    sendAnalyticsEvent(\n      'merge_queue_section.dequeue_pull_request',\n      'MERGEBOX_MERGE_QUEUE_SECTION_REMOVE_FROM_QUEUE_BUTTON',\n    )\n\n    onRemoveFromQueue({\n      mergeMethod,\n      onCompleted: () => {\n        setDequeueing(false)\n        setIsConfirmationDialogOpen(false)\n        setTimeout(() => announce('The pull request was successfully removed from the queue.'), 1000)\n        focusPrimaryMergeButton()\n      },\n      onError: (e: Error) => {\n        setDequeueing(false)\n        setIsConfirmationDialogOpen(false)\n        setErrorMessage(e.message)\n        returnConfirmationRef.current?.focus()\n        setTimeout(() => announce('Failed to remove pull request from the merge queue'), 1000)\n      },\n    })\n  }\n\n  const handleOpenConfirmation = () => {\n    setErrorMessage(null)\n    setIsConfirmationDialogOpen(true)\n  }\n\n  return (\n    <>\n      <Dialog\n        aria-labelledby=\"remove-from-queue-dialog-title\"\n        isOpen={isConfirmationDialogOpen}\n        returnFocusRef={returnConfirmationRef}\n        onDismiss={() => setIsConfirmationDialogOpen(false)}\n      >\n        <Dialog.Header id=\"remove-from-queue-dialog-title\">Remove from the queue?</Dialog.Header>\n        <div className=\"p-3\">\n          <span>\n            Removing this pull request from the queue could impact other pull requests in the queue. Are you sure?\n          </span>\n          <div className=\"d-flex flex-justify-end mt-3\">\n            <Button\n              className=\"mr-1\"\n              inactive={dequeueing}\n              onClick={() => {\n                if (!dequeueing) {\n                  setIsConfirmationDialogOpen(false)\n                  returnConfirmationRef.current?.focus()\n                }\n              }}\n            >\n              Cancel\n            </Button>\n            <Button variant=\"danger\" aria-busy={dequeueing} onClick={handleDequeue}>\n              <div className=\"d-flex flex-row flex-items-center\">\n                {dequeueing && <Spinner size=\"small\" sx={{mr: 2}} />}\n                {dequeueing ? 'Removing' : 'Remove'} from the queue\n              </div>\n            </Button>\n          </div>\n        </div>\n      </Dialog>\n      {errorMessage && (\n        <Flash className=\"mx-3 my-2\" variant=\"danger\">\n          <Octicon className=\"mr-2\" icon={StopIcon} />\n          {errorMessage}\n        </Flash>\n      )}\n      <MergeBoxSectionHeader\n        title=\"Queued to merge...\"\n        icon={\n          <CircleOcticon\n            icon={() => <GitMergeQueueIcon size={16} />}\n            className=\"bgColor-attention-emphasis fgColor-onEmphasis\"\n            size={32}\n          />\n        }\n        rightSideContent={\n          <>\n            {viewerCanAddAndRemoveFromMergeQueue && !isMergeEntryLocked && (\n              <Button ref={returnConfirmationRef} onClick={handleOpenConfirmation}>\n                Remove from queue\n              </Button>\n            )}\n          </>\n        }\n      >\n        <MergeQueuePositionText position={mergePosition} resourcePath={mergeQueueUrl} />\n      </MergeBoxSectionHeader>\n    </>\n  )\n}\n\nfunction MergeQueuePositionText({position, resourcePath}: {position?: number; resourcePath?: string}) {\n  if (!position || !resourcePath) return <></>\n  const pullsBeforeInQueue = position - 1\n\n  if (pullsBeforeInQueue === 0) {\n    return (\n      <>\n        <Text sx={{color: 'fg.muted'}}>This pull request is next up in the</Text>{' '}\n        <Link inline href={resourcePath}>\n          merge queue\n        </Link>\n        .\n      </>\n    )\n  }\n\n  if (pullsBeforeInQueue === 1) {\n    return (\n      <>\n        <Text sx={{color: 'fg.muted'}}>There is {pullsBeforeInQueue} pull request ahead of this one in the</Text>{' '}\n        <Link inline href={resourcePath}>\n          merge queue\n        </Link>\n        .\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Text sx={{color: 'fg.muted'}}>There are {pullsBeforeInQueue} pull requests ahead of this one in the</Text>{' '}\n      <Link inline href={resourcePath}>\n        merge queue\n      </Link>\n      .\n    </>\n  )\n}\n\ntry{ MergeQueueSectionWithRelay.displayName ||= 'MergeQueueSectionWithRelay' } catch {}\ntry{ MergeQueueSection.displayName ||= 'MergeQueueSection' } catch {}\ntry{ MergeQueuePositionText.displayName ||= 'MergeQueuePositionText' } catch {}","import {commitMutation, graphql} from 'react-relay'\nimport type {Environment} from 'relay-runtime'\n\nimport type {MergeMethod} from '../types'\nimport type {dequeuePullRequestMutation} from './__generated__/dequeuePullRequestMutation.graphql'\n\nexport default function removePullRequestFromMergeQueue({\n  environment,\n  input,\n  onCompleted,\n  onError,\n  mergeMethod,\n}: {\n  environment: Environment\n  input: {id: string}\n  onCompleted?: () => void\n  onError?: (error: Error) => void\n  mergeMethod: MergeMethod\n}) {\n  return commitMutation<dequeuePullRequestMutation>(environment, {\n    mutation: graphql`\n      mutation dequeuePullRequestMutation($input: DequeuePullRequestInput!, $mergeMethod: PullRequestMergeMethod) {\n        dequeuePullRequest(input: $input) {\n          mergeQueueEntry {\n            pullRequest {\n              ...useLoadMergeBoxQuery_pullRequest\n              ...HeaderMetadata_pullRequest\n            }\n          }\n        }\n      }\n    `,\n    variables: {input, mergeMethod},\n    onCompleted,\n    onError,\n  })\n}\n","import {MergeMethod, MergeQueueMethod} from '../types'\n\n/**\n * Returns the button text depending on the merge method\n */\nexport function mergeButtonText({\n  mergeMethod,\n  confirming,\n  isBypassMerge = false,\n  inProgress = false,\n  isAutoMergeAllowed = false,\n}: {\n  mergeMethod: MergeMethod\n  confirming: boolean\n  isBypassMerge?: boolean\n  inProgress?: boolean\n  isAutoMergeAllowed?: boolean\n}) {\n  if (inProgress) {\n    return 'Merging...'\n  }\n\n  const mergedText = isAutoMergeAllowed ? 'auto-merge' : 'merge'\n\n  switch (mergeMethod) {\n    case MergeMethod.MERGE:\n      if (confirming) {\n        return isBypassMerge ? 'Confirm bypass rules and merge' : `Confirm ${mergedText}`\n      } else {\n        return isBypassMerge\n          ? `Bypass rules and ${mergedText}`\n          : `${isAutoMergeAllowed ? 'Enable auto-merge' : 'Merge pull request'}`\n      }\n    case MergeMethod.SQUASH:\n      if (confirming) {\n        return isBypassMerge ? `Confirm bypass rules and ${mergedText} (squash)` : `Confirm squash and ${mergedText}`\n      } else {\n        return isBypassMerge ? `Bypass rules and ${mergedText} (squash)` : `Squash and ${mergedText}`\n      }\n    case MergeMethod.REBASE:\n      if (confirming) {\n        return isBypassMerge ? `Confirm bypass rules and ${mergedText} (rebase)` : `Confirm rebase and ${mergedText}`\n      } else {\n        return isBypassMerge ? `Bypass rules and ${mergedText} (rebase)` : `Rebase and ${mergedText}`\n      }\n  }\n}\n\n/**\n * Returns the button text depending on the selected merge queue method\n */\nexport function mergeQueueButtonText({mergeMethod, confirming}: {mergeMethod: MergeQueueMethod; confirming: boolean}) {\n  switch (mergeMethod) {\n    case MergeQueueMethod.GROUP:\n      return confirming ? 'Confirm merge when ready' : 'Merge when ready'\n    case MergeQueueMethod.SOLO:\n      return confirming ? 'Confirm queue and force solo merge' : 'Queue and force solo merge'\n  }\n}\n","import {commitMutation, graphql} from 'react-relay'\nimport type {Environment} from 'relay-runtime'\n\nimport type {MergeMethod} from '../types'\n\nexport default function mergePullRequest({\n  environment,\n  input,\n  onCompleted,\n  onError,\n}: {\n  environment: Environment\n  input: {\n    pullRequestId: string\n    mergeMethod: MergeMethod\n    authorEmail?: string\n    commitHeadline: string\n    commitBody: string\n  }\n  onCompleted?: () => void\n  onError?: (error: Error) => void\n}) {\n  return commitMutation(environment, {\n    mutation: graphql`\n      mutation mergePullRequestMutation($input: MergePullRequestInput!) {\n        mergePullRequest(input: $input) {\n          pullRequest {\n            id\n            state\n            headRefName\n            headRepository {\n              owner {\n                login\n              }\n              name\n            }\n            viewerCanDeleteHeadRef\n            viewerCanRestoreHeadRef\n          }\n        }\n      }\n    `,\n    variables: {input},\n    onCompleted,\n    onError,\n  })\n}\n","import {useAnalytics} from '@github-ui/use-analytics'\nimport {AlertFillIcon} from '@primer/octicons-react'\nimport {Box, Button, FormControl, Heading, Spinner, Text, Textarea, TextInput} from '@primer/react'\nimport {useEffect, useRef, useState} from 'react'\nimport {useRelayEnvironment} from 'react-relay'\nimport {useEnableAutoMergeMutation} from '../hooks/use-enable-auto-merge-mutation'\n\nimport mergePullRequest from '../mutations/merge-pull-request-mutation'\nimport {mergeButtonText} from '../helpers/merge-button-text'\nimport {MergeMethod} from '../types'\n\n/**\n * Displays an error message if the merge fails\n * Per https://primer.style/ui-patterns/loading#button-loading-state,\n * we focus the heading of the error message when the error appears\n */\nfunction MergeErrorMessage({errorMessage, isAutoMergeAllowed}: {errorMessage: string; isAutoMergeAllowed?: boolean}) {\n  const headingRef = useRef<HTMLHeadingElement>(null)\n\n  useEffect(() => {\n    headingRef.current?.focus()\n  }, [])\n\n  return (\n    <Heading\n      ref={headingRef}\n      as=\"h2\"\n      sx={{fontSize: 1, color: 'danger.emphasis', mt: 3, display: 'flex', alignItems: 'center', gap: 1}}\n      tabIndex={0}\n    >\n      <AlertFillIcon size={14} />\n      {isAutoMergeAllowed ? errorMessage : `Failed to merge due to ${errorMessage}`}\n    </Heading>\n  )\n}\n\ntype ConfirmMergeProps = {\n  commitAuthorEmail: string\n  commitMessageBody: string\n  commitMessageHeadline: string\n  defaultBranchName: string\n  isBypassMerge: boolean\n  onCancel: () => void\n  pullRequestId: string\n  selectedMergeMethod: MergeMethod\n  isAutoMergeAllowed: boolean\n  refetchMergeBoxQuery: () => void\n}\n\n/**\n * Renders the confirmation options and inputs for commit header and message for merging\n */\nexport function ConfirmMerge({\n  commitAuthorEmail,\n  commitMessageBody,\n  commitMessageHeadline,\n  defaultBranchName,\n  isBypassMerge,\n  onCancel,\n  pullRequestId,\n  selectedMergeMethod,\n  isAutoMergeAllowed = false,\n  refetchMergeBoxQuery,\n}: ConfirmMergeProps) {\n  const commitHeaderRef = useRef<HTMLInputElement>(null)\n  const confirmMergeButtonRef = useRef<HTMLButtonElement>(null)\n\n  useEffect(() => {\n    commitHeaderRef.current?.focus()\n    confirmMergeButtonRef.current?.scrollIntoView({behavior: 'smooth', block: 'nearest'})\n  }, [])\n\n  const [commitMessageHeadlineValue, setCommitMessageHeadlineValue] = useState(commitMessageHeadline)\n  const [commitMessageBodyValue, setCommitMessageBodyValue] = useState(commitMessageBody)\n  const {sendAnalyticsEvent} = useAnalytics()\n  const environment = useRelayEnvironment()\n  const [merging, setMerging] = useState(false)\n  const [mergeErrorMessage, setMergeErrorMessage] = useState('')\n\n  const {mutate} = useEnableAutoMergeMutation({\n    onSuccess: () => {\n      setMerging(false)\n      refetchMergeBoxQuery()\n    },\n    onError: (e: Error) => {\n      setMerging(false)\n      setMergeErrorMessage(e.message)\n    },\n  })\n\n  if (!mergePullRequest && !mutate) return\n\n  const handleConfirmMerge = () => {\n    if (merging) return\n\n    setMerging(true)\n    setMergeErrorMessage('')\n\n    if (isAutoMergeAllowed) {\n      mutate({\n        authorEmail: commitAuthorEmail,\n        commitMessage: commitMessageBodyValue,\n        commitTitle: commitMessageHeadlineValue,\n        mergeMethod: selectedMergeMethod,\n      })\n      sendAnalyticsEvent('direct_merge_section.confirm_auto_merge', 'MERGEBOX_AUTO_MERGE_CONFIRMATION_BUTTON')\n    } else {\n      mergePullRequest({\n        environment,\n        input: {\n          pullRequestId,\n          mergeMethod: selectedMergeMethod,\n          commitHeadline: commitMessageHeadlineValue,\n          commitBody: commitMessageBodyValue,\n        },\n        onCompleted: () => setMerging(false),\n        onError: (e: Error) => {\n          setMerging(false)\n          setMergeErrorMessage(e.message)\n        },\n      })\n      sendAnalyticsEvent('direct_merge_section.confirm_direct_merge', 'MERGEBOX_DIRECT_MERGE_CONFIRMATION_BUTTON')\n    }\n  }\n\n  return (\n    <div>\n      {selectedMergeMethod !== MergeMethod.REBASE && (\n        <>\n          <FormControl>\n            <FormControl.Label>Commit header</FormControl.Label>\n            <TextInput\n              ref={commitHeaderRef}\n              block\n              defaultValue={commitMessageHeadlineValue}\n              onChange={e => setCommitMessageHeadlineValue(e.currentTarget.value)}\n            />\n          </FormControl>\n          <FormControl className=\"mt-3 width-full\">\n            <FormControl.Label>Commit message</FormControl.Label>\n            <Textarea\n              block\n              defaultValue={commitMessageBodyValue}\n              onChange={e => setCommitMessageBodyValue(e.currentTarget.value)}\n            />\n          </FormControl>\n          <Box sx={{mt: 3}}>\n            <Text sx={{color: 'fg.muted', fontSize: 1}}>This commit will be authored by {commitAuthorEmail}.</Text>\n          </Box>\n        </>\n      )}\n      {selectedMergeMethod === MergeMethod.REBASE && (\n        <Text sx={{color: 'fg.muted', fontSize: 1}}>\n          This will rebase your changes and merge them into {defaultBranchName}.\n        </Text>\n      )}\n      <Box sx={{display: 'flex', mt: 3, gap: 2}}>\n        <Button\n          ref={confirmMergeButtonRef}\n          aria-busy={merging}\n          aria-describedby={merging ? 'merging-message' : undefined}\n          aria-disabled={merging}\n          variant={isBypassMerge ? 'danger' : 'primary'}\n          onClick={handleConfirmMerge}\n        >\n          <Box sx={{display: 'flex', alignItems: 'center'}}>\n            {merging && <Spinner size={'small'} sx={{mr: 1}} />}\n            <Text sx={{fontSize: 1}}>\n              {mergeButtonText({\n                mergeMethod: selectedMergeMethod,\n                confirming: true,\n                isBypassMerge,\n                inProgress: merging,\n                isAutoMergeAllowed,\n              })}\n            </Text>\n          </Box>\n        </Button>\n        <Button onClick={onCancel}>Cancel</Button>\n      </Box>\n      {merging && (\n        <Text aria-busy=\"true\" aria-live=\"polite\" id=\"merging-message\" sx={{display: 'none'}}>\n          Merging...\n        </Text>\n      )}\n      {mergeErrorMessage && (\n        <MergeErrorMessage errorMessage={mergeErrorMessage} isAutoMergeAllowed={isAutoMergeAllowed} />\n      )}\n    </div>\n  )\n}\n\ntry{ MergeErrorMessage.displayName ||= 'MergeErrorMessage' } catch {}\ntry{ ConfirmMerge.displayName ||= 'ConfirmMerge' } catch {}","import {useMutation} from '@tanstack/react-query'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport {PageData} from '@github-ui/pull-request-page-data-tooling/page-data'\nimport {usePageDataUrl} from '@github-ui/pull-request-page-data-tooling/use-page-data-url'\n\nexport type EnableAutoMergeInput = {\n  authorEmail?: string\n  commitMessage?: string\n  commitTitle?: string\n  mergeMethod?: string\n}\n\nexport function useEnableAutoMergeMutation({\n  onSuccess,\n  onError,\n}: {\n  onSuccess: () => void\n  onError: (error: Error) => void\n}) {\n  const apiURL = usePageDataUrl(PageData.enableAutoMerge)\n  return useMutation({\n    mutationFn: async (input: EnableAutoMergeInput) => {\n      const result = await verifiedFetch(`${apiURL}`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n        },\n        body: JSON.stringify({\n          author_email: input.authorEmail,\n          commit_message: input.commitMessage,\n          commit_title: input.commitTitle,\n          mergeMethod: input.mergeMethod,\n        }),\n      })\n      if (result.ok) {\n        const json = await result.json()\n        return json\n      }\n      throw new Error('Failed enabling auto-merge for pull request.')\n    },\n    onSuccess: () => {\n      onSuccess()\n    },\n    onError: (e: Error) => {\n      onError(e)\n    },\n  })\n}\n","import {ActionList} from '@primer/react'\n\nexport function MergeDropdownOption({\n  onSelect,\n  primaryText,\n  secondaryText,\n  selected,\n}: {\n  onSelect: () => void\n  primaryText: string\n  secondaryText: string\n  selected: boolean\n}) {\n  return (\n    <ActionList.Item selected={selected} onSelect={onSelect}>\n      {primaryText}\n      <ActionList.Description variant=\"block\">{secondaryText}</ActionList.Description>\n    </ActionList.Item>\n  )\n}\n\ntry{ MergeDropdownOption.displayName ||= 'MergeDropdownOption' } catch {}","import {Checkbox, FormControl} from '@primer/react'\n\nexport function BypassMergeRequirementsToggle({\n  checked,\n  onToggleChecked,\n}: {\n  checked: boolean\n  onToggleChecked: () => void\n}) {\n  return (\n    <FormControl>\n      <Checkbox onChange={onToggleChecked} checked={checked} />\n      <FormControl.Label>\n        <span className=\"fgColor-danger\"> Merge without waiting for requirements to be met (bypass rules) </span>\n      </FormControl.Label>\n    </FormControl>\n  )\n}\n\ntry{ BypassMergeRequirementsToggle.displayName ||= 'BypassMergeRequirementsToggle' } catch {}","import {assertDataPresent} from '@github-ui/assert-data-present'\nimport {useAnalytics} from '@github-ui/use-analytics'\nimport {ActionList} from '@primer/react'\nimport {useState} from 'react'\n\nimport {useMergeMethodContext} from '../../../contexts/MergeMethodContext'\nimport {mergeButtonText} from '../../../helpers/merge-button-text'\nimport {\n  MergeMethod,\n  MergeAction,\n  type PullRequestMergeRequirements,\n  type ViewerMergeActions,\n  type ViewerMergeMethods,\n  type PullRequestMergeConditionResult,\n} from '../../../types'\nimport {ConfirmMerge} from '../../ConfirmMerge'\nimport {ButtonWithDropdown} from '../common/ButtonWithDropdown'\nimport {MergeDropdownOption} from './MergeDropdownOption'\nimport {BypassMergeRequirementsToggle} from './BypassMergeRequirementsToggle'\n\n/**\n * Return a list of merge methods to show in the \"select merge method\" dropdown\n */\nexport function allowableMergeMethods({\n  mergeMethods,\n  bypassableOnly = false,\n}: {\n  mergeMethods: ViewerMergeMethods\n  bypassableOnly?: boolean\n}): MergeMethod[] {\n  return mergeMethods.reduce<MergeMethod[]>((allowedMergeMethods, method) => {\n    if ((!bypassableOnly && method?.isAllowable) || method?.isAllowableWithBypass) {\n      allowedMergeMethods.push(method.name as MergeMethod)\n    }\n\n    return allowedMergeMethods\n  }, [])\n}\n\nexport type MergeButtonFocusProps = {\n  shouldFocusPrimaryMergeButton: boolean\n  setShouldFocusPrimaryMergeButton: (shouldFocus: boolean) => void\n  refetchMergeBoxQuery: () => void\n}\n\nexport type Props = {\n  baseRefName: string\n  numberOfCommits: number\n  pullRequestId: string\n  isDraft: boolean\n  isAutoMergeAllowed?: boolean\n  isMergeQueueBypassRulesActive?: boolean\n  commitAuthor: PullRequestMergeRequirements['commitAuthor']\n  commitMessageBody: PullRequestMergeRequirements['commitMessageBody']\n  commitMessageHeadline: PullRequestMergeRequirements['commitMessageHeadline']\n  mergeRequirementsState: PullRequestMergeRequirements['state']\n  mergeable: boolean\n  viewerMergeActions: ViewerMergeActions\n  conflictsCondition: {result: PullRequestMergeConditionResult} | undefined\n}\n\n/**\n * Renders the merge button and provides the ability to select from the available merge methods\n */\nexport function DirectMergeActionsSection({\n  baseRefName,\n  numberOfCommits,\n  conflictsCondition,\n  pullRequestId,\n  isDraft,\n  commitAuthor,\n  commitMessageBody,\n  commitMessageHeadline,\n  mergeRequirementsState,\n  mergeable,\n  refetchMergeBoxQuery,\n  setShouldFocusPrimaryMergeButton,\n  shouldFocusPrimaryMergeButton,\n  viewerMergeActions,\n  isAutoMergeAllowed = false,\n  isMergeQueueBypassRulesActive,\n}: Props & MergeButtonFocusProps) {\n  const {mergeMethod, setMergeMethod} = useMergeMethodContext()\n  const {sendAnalyticsEvent} = useAnalytics()\n\n  const [isConfirmingSelectedMerge, setIsConfirmingSelectedMerge] = useState(false)\n  const [isBypassRulesChecked, setIsBypassRulesChecked] = useState(false)\n\n  // TODO: Allow ability to select from possible commit emails\n  const commitAuthorEmail = commitAuthor\n\n  if (!conflictsCondition) return null\n  const hasConflict = 'result' in conflictsCondition && conflictsCondition.result === 'FAILED'\n  const hasRebaseMergeConflict = hasConflict && mergeMethod === MergeMethod.REBASE\n  const areMergeRequirementsBypassable = !hasConflict && !isDraft && mergeRequirementsState === 'UNMERGEABLE'\n\n  const directMergeAction = viewerMergeActions.find(action => action.name === MergeAction.DIRECT_MERGE)\n  assertDataPresent(directMergeAction)\n\n  const allowedMergeMethods = allowableMergeMethods({mergeMethods: directMergeAction.mergeMethods})\n  const bypassableMergeMethods = allowableMergeMethods({\n    mergeMethods: directMergeAction.mergeMethods,\n    bypassableOnly: true,\n  })\n  const canCreateMergeCommit = allowedMergeMethods.includes(MergeMethod.MERGE)\n  const canSquashMerge = allowedMergeMethods.includes(MergeMethod.SQUASH)\n  const canRebaseMerge = allowedMergeMethods.includes(MergeMethod.REBASE)\n  const selectedMergeMethod = directMergeAction.mergeMethods.find(method => method.name === mergeMethod)\n\n  // allow bypassing when there are no merge conflicts, the PR is not in draft, the user has permissions, and the PR is currenty unmergeable\n  // evaluating isMergeQueueBypassRulesActive here so that the checkbox is not rendered twice\n  const showBypassCheckbox = isMergeQueueBypassRulesActive\n    ? !isMergeQueueBypassRulesActive\n    : areMergeRequirementsBypassable && !!selectedMergeMethod?.isAllowableWithBypass\n\n  // account for a scenario where the button is checked, then a live update causes the PR's state to update to\n  // be mergeable and we stop showing the checkbox\n  const isBypassRulesActive = isMergeQueueBypassRulesActive ?? (showBypassCheckbox && isBypassRulesChecked)\n\n  // ensures that the user can switch merge methods via the dropdown when other merge options may be useable\n  // even if the current option isn't\n  const bypassableMethodsWithoutSelected = bypassableMergeMethods.filter(method => method !== selectedMergeMethod?.name)\n  const isDropdownButtonActiveOverride =\n    hasRebaseMergeConflict || (areMergeRequirementsBypassable && bypassableMethodsWithoutSelected.length > 0)\n\n  const confirmMerge = () => {\n    setIsConfirmingSelectedMerge(true)\n    const analyticsEventKey = isAutoMergeAllowed\n      ? 'direct_merge_section.auto_merge_click'\n      : 'direct_merge_section.direct_merge_click'\n\n    const analyticsEventValue = isAutoMergeAllowed\n      ? 'MERGEBOX_AUTO_MERGE_SECTION_MERGE_BUTTON'\n      : 'MERGEBOX_DIRECT_MERGE_SECTION_MERGE_BUTTON'\n\n    sendAnalyticsEvent(analyticsEventKey, analyticsEventValue)\n  }\n\n  const cancelMerge = () => {\n    setIsConfirmingSelectedMerge(false)\n    setShouldFocusPrimaryMergeButton(true)\n\n    const analyticsEventKey = isAutoMergeAllowed\n      ? 'direct_merge_section.cancel_auto_merge'\n      : 'direct_merge_section.cancel_direct_merge'\n\n    const analyticsEventValue = isAutoMergeAllowed\n      ? 'MERGEBOX_AUTO_MERGE_CANCEL_CONFIRMATION_BUTTON'\n      : 'MERGEBOX_DIRECT_MERGE_CANCEL_CONFIRMATION_BUTTON'\n\n    sendAnalyticsEvent(analyticsEventKey, analyticsEventValue)\n  }\n\n  const updateMergeMethod = (newMergeMethod: MergeMethod, analyticsEvent: string) => {\n    setMergeMethod(newMergeMethod)\n    sendAnalyticsEvent(analyticsEvent, 'MERGEBOX_DIRECT_MERGE_SECTION_MERGE_METHOD_MENU_ITEM')\n  }\n\n  if (isConfirmingSelectedMerge) {\n    return (\n      <ConfirmMerge\n        commitAuthorEmail={commitAuthorEmail}\n        commitMessageBody={commitMessageBody || ''}\n        commitMessageHeadline={commitMessageHeadline || ''}\n        defaultBranchName={baseRefName}\n        isBypassMerge={isBypassRulesActive}\n        pullRequestId={pullRequestId}\n        selectedMergeMethod={mergeMethod}\n        onCancel={cancelMerge}\n        isAutoMergeAllowed={isAutoMergeAllowed}\n        refetchMergeBoxQuery={refetchMergeBoxQuery}\n      />\n    )\n  }\n\n  return (\n    <div className=\"d-flex flex-items-start flex-column gap-3\">\n      {showBypassCheckbox && (\n        <BypassMergeRequirementsToggle\n          checked={isBypassRulesChecked}\n          onToggleChecked={() => setIsBypassRulesChecked(!isBypassRulesChecked)}\n        />\n      )}\n      <div className=\"d-flex flex-items-start flex-sm-items-center flex-sm-row gap-3\">\n        <ButtonWithDropdown\n          hideSecondaryButton={allowedMergeMethods.length === 1}\n          inactive={isAutoMergeAllowed ? false : !mergeable && !isBypassRulesActive}\n          inactiveTooltipText=\"Merging is blocked due to failing merge requirements\"\n          isPrimary={mergeable}\n          secondaryButtonActive={isDropdownButtonActiveOverride}\n          secondaryButtonAriaLabel=\"Select merge method\"\n          shouldFocusPrimaryButton={shouldFocusPrimaryMergeButton}\n          actionList={\n            <ActionList selectionVariant=\"single\" showDividers>\n              {canCreateMergeCommit && (\n                <MergeDropdownOption\n                  primaryText=\"Create a merge commit\"\n                  secondaryText=\"All commits from this branch will be added to the base branch via a merge commit.\"\n                  selected={mergeMethod === MergeMethod.MERGE}\n                  onSelect={() =>\n                    updateMergeMethod(MergeMethod.MERGE, 'direct_merge_section.select_create_a_merge_commit')\n                  }\n                />\n              )}\n              {canSquashMerge && (\n                <MergeDropdownOption\n                  primaryText=\"Squash and merge\"\n                  secondaryText={\n                    numberOfCommits === 1\n                      ? 'The 1 commit from this branch will be added to the base branch.'\n                      : `The ${numberOfCommits} commits from this branch will be combined into one commit in the base branch.`\n                  }\n                  selected={mergeMethod === MergeMethod.SQUASH}\n                  onSelect={() => updateMergeMethod(MergeMethod.SQUASH, 'direct_merge_section.select_squash_and_merge')}\n                />\n              )}\n              {canRebaseMerge && (\n                <MergeDropdownOption\n                  primaryText=\"Rebase and merge\"\n                  secondaryText={`The ${numberOfCommits} commit${\n                    numberOfCommits !== 1 ? 's' : ''\n                  } from this branch will be rebased and added to the base branch.`}\n                  selected={mergeMethod === MergeMethod.REBASE}\n                  onSelect={() => updateMergeMethod(MergeMethod.REBASE, 'direct_merge_section.select_rebase_and_merge')}\n                />\n              )}\n            </ActionList>\n          }\n          onFocusPrimaryButton={() => setShouldFocusPrimaryMergeButton(false)}\n          onPrimaryButtonClick={confirmMerge}\n        >\n          {mergeButtonText({\n            mergeMethod,\n            confirming: false,\n            isBypassMerge: isBypassRulesActive,\n            isAutoMergeAllowed,\n          })}\n        </ButtonWithDropdown>\n        <span className=\"f6 fgColor-muted\">\n          You can also merge this with the command line, view command line instructions.\n        </span>\n      </div>\n    </div>\n  )\n}\n\ntry{ DirectMergeActionsSection.displayName ||= 'DirectMergeActionsSection' } catch {}","import {useAnalytics} from '@github-ui/use-analytics'\nimport useSafeState from '@github-ui/use-safe-state'\nimport {ActionList, Button, Flash, Link, Octicon, Spinner} from '@primer/react'\nimport {useEffect, useRef, useState} from 'react'\nimport {graphql, useMutation} from 'react-relay'\nimport {MergeAction, MergeQueueMethod} from '../../../types'\n\nimport {ButtonWithDropdown} from '../common/ButtonWithDropdown'\nimport {mergeQueueButtonText} from '../../../helpers/merge-button-text'\nimport {StopIcon} from '@primer/octicons-react'\nimport {\n  type Props as DirectMergeActionsSectionProps,\n  DirectMergeActionsSection,\n  type MergeButtonFocusProps,\n} from './DirectMergeActionsSection'\nimport {MergeDropdownOption} from './MergeDropdownOption'\nimport type {\n  MergeStateStatus,\n  ViewerMergeActions,\n  PullRequestMergeRequirements,\n  MergeQueue,\n  AutoMergeRequest,\n} from '../../../types'\nimport {useDisableAutoMergeMutation} from '../../../hooks/use-disable-auto-merge-mutation'\nimport {assertDataPresent} from '@github-ui/assert-data-present'\nimport {useMergeMethodContext} from '../../../contexts/MergeMethodContext'\nimport {BypassMergeRequirementsToggle} from './BypassMergeRequirementsToggle'\n\nconst AUTOMERGE_DOCS_LINK =\n  'https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/automatically-merging-a-pull-request'\n\nexport type AddToMergeQueueSectionProps = {\n  autoMergeRequest: AutoMergeRequest\n  baseRefName: string\n  pullRequestId: string\n  isDraft: boolean\n  isInMergeQueue: boolean\n  mergeQueue: MergeQueue\n  mergeRequirementsState: PullRequestMergeRequirements['state']\n  mergeStateStatus: MergeStateStatus\n  viewerCanAddAndRemoveFromMergeQueue: boolean\n}\n\n/**\n * Renders the merge queue button and provides the ability to select from the merge queue methods\n */\nfunction AddToMergeQueueSection({\n  autoMergeRequest,\n  baseRefName,\n  pullRequestId,\n  isDraft,\n  isInMergeQueue,\n  mergeQueue,\n  mergeRequirementsState,\n  mergeStateStatus,\n  viewerCanAddAndRemoveFromMergeQueue,\n  shouldFocusPrimaryMergeButton,\n  setShouldFocusPrimaryMergeButton,\n}: AddToMergeQueueSectionProps & MergeButtonFocusProps) {\n  const mergeQueueUrl = mergeQueue?.url\n\n  const [selectedMergeQueueOption, setSelectedMergeQueueOption] = useState<MergeQueueMethod>(MergeQueueMethod.GROUP)\n  const [showConfirmMergeWhenReady, setShowConfirmMergeWhenReady] = useState(false)\n  const [errorMessage, setErrorMessage] = useSafeState<string>()\n  const {sendAnalyticsEvent} = useAnalytics()\n\n  const [enableAutoMerge, isEnableInFlight] = useMutation(graphql`\n    mutation MergeSection_enablePullRequestAutoMergeMutation($input: EnablePullRequestAutoMergeInput!) {\n      enablePullRequestAutoMerge(input: $input) {\n        pullRequest {\n          autoMergeRequest {\n            mergeMethod\n          }\n          viewerCanDisableAutoMerge\n          isInMergeQueue\n        }\n      }\n    }\n  `)\n\n  const enqueuePullRequest = () => {\n    setShowConfirmMergeWhenReady(true)\n    sendAnalyticsEvent('auto_merge_section.merge_click', 'MERGEBOX_AUTO_MERGE_BUTTON')\n  }\n\n  const createAutoMergeRequest = () => {\n    if (isEnableInFlight) return\n\n    // todo: add jump method along with permission checks for each option\n    const mergeQueueMethod = selectedMergeQueueOption === MergeQueueMethod.SOLO ? 'SOLO' : 'GROUP'\n    enableAutoMerge({\n      variables: {input: {pullRequestId, mergeQueueMethod}},\n      onError: () => {\n        setErrorMessage('Failed to enable auto merge.')\n      },\n    })\n    sendAnalyticsEvent('auto_merge_section.confirm_direct_merge', 'MERGEBOX_AUTO_MERGE_CONFIRMATION_BUTTON')\n  }\n\n  const updateMergeQueueMethod = (newMergeQueueMethod: MergeQueueMethod, analyticsEvent: string) => {\n    setSelectedMergeQueueOption(newMergeQueueMethod)\n    sendAnalyticsEvent(analyticsEvent, 'MERGEBOX_MERGE_QUEUE_SECTION_MERGE_METHOD_MENU_ITEM')\n  }\n\n  const isMergeable = mergeRequirementsState === 'MERGEABLE'\n  const mergeWhenReadyDisabled =\n    !viewerCanAddAndRemoveFromMergeQueue ||\n    mergeStateStatus === 'UNKNOWN' ||\n    isDraft ||\n    isInMergeQueue ||\n    !!autoMergeRequest\n\n  const defaultBranchName = baseRefName\n\n  const mergeButtonRef = useRef<HTMLButtonElement>(null)\n\n  useEffect(() => {\n    if (showConfirmMergeWhenReady && mergeButtonRef?.current) {\n      mergeButtonRef?.current.focus()\n    }\n  }, [showConfirmMergeWhenReady])\n\n  return (\n    <div className=\"d-flex flex-column d-flex flex-items-start gap-3\">\n      {errorMessage && (\n        <Flash className=\"mb-3\" variant=\"danger\">\n          <Octicon className=\"mr-2\" icon={StopIcon} />\n          {errorMessage}\n        </Flash>\n      )}\n      <div className=\"d-flex flex-items-start flex-sm-items-center flex-column flex-sm-row gap-2 width-full\">\n        {showConfirmMergeWhenReady ? (\n          <>\n            <Button\n              ref={mergeButtonRef}\n              aria-busy={isEnableInFlight}\n              aria-label={isEnableInFlight ? 'Creating auto merge request' : undefined}\n              variant=\"primary\"\n              onClick={createAutoMergeRequest}\n            >\n              <div className=\"d-flex flex-items-center flex-row\">\n                {mergeQueueButtonText({mergeMethod: selectedMergeQueueOption, confirming: true})}\n                {isEnableInFlight && <Spinner size=\"small\" sx={{ml: 2}} />}\n              </div>\n            </Button>\n            <Button\n              onClick={() => {\n                setShowConfirmMergeWhenReady(false)\n                sendAnalyticsEvent(\n                  'auto_merge_section.cancel_auto_merge',\n                  'MERGEBOX_AUTO_MERGE_CANCEL_CONFIRMATION_BUTTON',\n                )\n              }}\n            >\n              Cancel\n            </Button>\n          </>\n        ) : (\n          <div className=\"width-full\">\n            <>\n              <ButtonWithDropdown\n                inactive={mergeWhenReadyDisabled}\n                inactiveTooltipText=\"Merging is blocked due to failing merge requirements\"\n                secondaryButtonAriaLabel=\"Select merge queue method\"\n                isPrimary={isMergeable}\n                shouldFocusPrimaryButton={shouldFocusPrimaryMergeButton}\n                onFocusPrimaryButton={() => setShouldFocusPrimaryMergeButton(false)}\n                actionList={\n                  <ActionList selectionVariant=\"single\">\n                    <>\n                      <MergeDropdownOption\n                        primaryText=\"Queue and merge in a group\"\n                        secondaryText={`This pull request will be automatically grouped with other pull requests and merged into ${defaultBranchName}.`}\n                        selected={selectedMergeQueueOption === MergeQueueMethod.GROUP}\n                        onSelect={() =>\n                          updateMergeQueueMethod(\n                            MergeQueueMethod.GROUP,\n                            'merqe_queue_section.select_queue_and_merge_in_a_group',\n                          )\n                        }\n                      />\n                      <MergeDropdownOption\n                        primaryText=\"Queue and force solo merge\"\n                        secondaryText={`This pull request will be merged into ${defaultBranchName} by itself.`}\n                        selected={selectedMergeQueueOption === MergeQueueMethod.SOLO}\n                        onSelect={() =>\n                          updateMergeQueueMethod(\n                            MergeQueueMethod.SOLO,\n                            'merqe_queue_section.select_queue_and_force_solo_merge',\n                          )\n                        }\n                      />\n                    </>\n                  </ActionList>\n                }\n                onPrimaryButtonClick={enqueuePullRequest}\n              >\n                {mergeQueueButtonText({\n                  mergeMethod: selectedMergeQueueOption,\n                  confirming: false,\n                })}\n              </ButtonWithDropdown>\n              <span className=\"f6 fgColor-muted pl-2\">\n                This repository uses the{' '}\n                <Link href={mergeQueueUrl} inline>\n                  merge queue\n                </Link>{' '}\n                for all merges into the {defaultBranchName} branch.\n              </span>\n            </>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\ntype DisableAutoMergeProps = {\n  autoMergeRequest: AutoMergeRequest\n  isMergeQueueEnabled?: boolean\n  viewerCanDisableAutoMerge: boolean\n  refetchMergeBoxQuery: () => void\n}\n\n/**\n * Renders the \"disable auto merge\" button when auto merge is currently enabled but the PR hasn't merged or been\n * added to the merge queue yet\n */\nfunction DisableAutoMerge({\n  autoMergeRequest,\n  viewerCanDisableAutoMerge,\n  isMergeQueueEnabled,\n  refetchMergeBoxQuery,\n}: DisableAutoMergeProps) {\n  const {sendAnalyticsEvent} = useAnalytics()\n  const [errorMessage, setErrorMessage] = useState<string>()\n  const [isDisableInFlight, setIsDisableInFlight] = useState(false)\n\n  const {mutate: disableAutoMerge} = useDisableAutoMergeMutation({\n    onSuccess: () => {\n      setIsDisableInFlight(false)\n      refetchMergeBoxQuery()\n    },\n    onError: (e: Error) => {\n      setErrorMessage(e.message)\n    },\n  })\n\n  const handleDisableAutoMerge = () => {\n    if (isDisableInFlight) return\n    setIsDisableInFlight(true)\n    disableAutoMerge()\n    sendAnalyticsEvent('auto_merge_section.disable_auto_merge', 'MERGEBOX_AUTO_MERGE_DISABLE_BUTTON')\n  }\n\n  const autoMergeVerb = autoMergeRequest?.mergeMethod.toLowerCase() ?? 'merge'\n  const autoMergeMessage = isMergeQueueEnabled ? 'be added to the merge queue' : `${autoMergeVerb} automatically`\n\n  return (\n    <div className=\"d-flex flex-column\">\n      {errorMessage && (\n        <Flash className=\"mx-3 my-2\" variant=\"danger\">\n          <Octicon className=\"mr-2\" icon={StopIcon} />\n          {errorMessage}\n        </Flash>\n      )}\n      <div className=\"d-flex flex-row flex-items-center\">\n        <Button disabled={!viewerCanDisableAutoMerge} onClick={handleDisableAutoMerge}>\n          <div className=\"d-flex flex-items-center flex-row\">\n            Disable auto-merge\n            {isDisableInFlight && <Spinner size=\"small\" sx={{ml: 2}} />}\n          </div>\n        </Button>\n        <div className=\"d-flex flex-column flex-grow-1 ml-3\">\n          <div>\n            This pull request will <span className=\"text-semibold\">{autoMergeMessage}</span> when all requirements are\n            met.{' '}\n            <Link inline href={AUTOMERGE_DOCS_LINK}>\n              Learn more.\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport type MergeSectionProps = {\n  autoMergeRequest: AutoMergeRequest\n  baseRefName: string\n  commitAuthor: PullRequestMergeRequirements['commitAuthor']\n  commitMessageBody: PullRequestMergeRequirements['commitMessageBody']\n  commitMessageHeadline: PullRequestMergeRequirements['commitMessageHeadline']\n  conflictsCondition: DirectMergeActionsSectionProps['conflictsCondition']\n  id: string\n  isDraft: boolean\n  isInMergeQueue: boolean\n  mergeQueue: MergeQueue\n  mergeRequirementsState: PullRequestMergeRequirements['state']\n  mergeStateStatus: MergeStateStatus\n  numberOfCommits: number\n  viewerCanAddAndRemoveFromMergeQueue: boolean\n  viewerCanDisableAutoMerge: boolean\n  viewerCanEnableAutoMerge: boolean\n  viewerMergeActions: ViewerMergeActions\n  isReadingFromJSONAPI: boolean\n}\n\n/**\n * Technically, this component still contains Relay since mutations in its children are still using Relay.\n */\nexport function MergeSectionWithRelay(props: MergeSectionProps & MergeButtonFocusProps) {\n  return <MergeSection {...props} />\n}\n\n/**\n * Renders the merge actions section of the merge box, specifically the merge button\n * Depending on configurations, a viewer can select a merge method, merge directly, or add the pull request to the merge queue\n */\nexport function MergeSection({\n  autoMergeRequest,\n  baseRefName,\n  commitAuthor,\n  commitMessageBody,\n  commitMessageHeadline,\n  conflictsCondition,\n  id,\n  isDraft,\n  isInMergeQueue,\n  mergeQueue,\n  mergeRequirementsState,\n  mergeStateStatus,\n  numberOfCommits,\n  viewerCanAddAndRemoveFromMergeQueue,\n  viewerCanDisableAutoMerge,\n  viewerCanEnableAutoMerge,\n  viewerMergeActions,\n  isReadingFromJSONAPI,\n  ...props\n}: MergeSectionProps & MergeButtonFocusProps) {\n  const [isAdminBypassToggleChecked, setIsAdminBypassToggleChecked] = useState(false)\n  const {mergeMethod} = useMergeMethodContext()\n  const mergeQueueMergeAction = viewerMergeActions.find(({name}) => name === MergeAction.MERGE_QUEUE)\n  const directMergeAction = viewerMergeActions.find(action => action.name === MergeAction.DIRECT_MERGE)\n  assertDataPresent(directMergeAction)\n  const selectedMergeMethod = directMergeAction.mergeMethods.find(method => method.name === mergeMethod)\n  const isAllowableWithBypass = selectedMergeMethod?.isAllowableWithBypass ?? false\n  const isMergeQueueBypassRulesActive = isAllowableWithBypass && isAdminBypassToggleChecked\n\n  const isMergeable = mergeRequirementsState === 'MERGEABLE'\n  const isMergeQueueEnabled = mergeQueueMergeAction?.isAllowable\n  const isDirectMergeEnabled = directMergeAction?.isAllowable\n  const isAutoMergeActive = !!autoMergeRequest\n\n  let mergeComponent\n  if (isAutoMergeActive) {\n    mergeComponent = (\n      <DisableAutoMerge\n        autoMergeRequest={autoMergeRequest}\n        isMergeQueueEnabled={isMergeQueueEnabled}\n        viewerCanDisableAutoMerge={viewerCanDisableAutoMerge}\n        refetchMergeBoxQuery={props.refetchMergeBoxQuery}\n      />\n    )\n  } else if (!isMergeQueueEnabled && !isDirectMergeEnabled) {\n    // Inactive state\n    mergeComponent = (\n      <DirectMergeActionsSection\n        baseRefName={baseRefName}\n        conflictsCondition={conflictsCondition}\n        numberOfCommits={numberOfCommits}\n        pullRequestId={id}\n        isDraft={isDraft}\n        commitAuthor={commitAuthor}\n        commitMessageBody={commitMessageBody}\n        commitMessageHeadline={commitMessageHeadline}\n        mergeRequirementsState={mergeRequirementsState}\n        mergeable={false}\n        viewerMergeActions={viewerMergeActions}\n        {...props}\n      />\n    )\n  } else if (isMergeQueueEnabled && isMergeQueueBypassRulesActive) {\n    mergeComponent = (\n      <DirectMergeActionsSection\n        baseRefName={baseRefName}\n        conflictsCondition={conflictsCondition}\n        commitAuthor={commitAuthor}\n        commitMessageBody={commitMessageBody}\n        commitMessageHeadline={commitMessageHeadline}\n        pullRequestId={id}\n        isDraft={isDraft}\n        numberOfCommits={numberOfCommits}\n        mergeRequirementsState={mergeRequirementsState}\n        mergeable={isMergeable}\n        viewerMergeActions={viewerMergeActions}\n        isMergeQueueBypassRulesActive={isMergeQueueBypassRulesActive}\n        {...props}\n      />\n    )\n  } else if (isMergeQueueEnabled) {\n    mergeComponent = (\n      <AddToMergeQueueSection\n        autoMergeRequest={autoMergeRequest}\n        baseRefName={baseRefName}\n        pullRequestId={id}\n        isDraft={isDraft}\n        isInMergeQueue={isInMergeQueue}\n        mergeQueue={mergeQueue}\n        mergeRequirementsState={mergeRequirementsState}\n        mergeStateStatus={mergeStateStatus}\n        viewerCanAddAndRemoveFromMergeQueue={viewerCanAddAndRemoveFromMergeQueue}\n        {...props}\n      />\n    )\n  } else if (viewerCanEnableAutoMerge) {\n    mergeComponent = (\n      <DirectMergeActionsSection\n        baseRefName={baseRefName}\n        numberOfCommits={numberOfCommits}\n        conflictsCondition={conflictsCondition}\n        pullRequestId={id}\n        isAutoMergeAllowed={true}\n        isDraft={isDraft}\n        commitAuthor={commitAuthor}\n        commitMessageBody={commitMessageBody}\n        commitMessageHeadline={commitMessageHeadline}\n        mergeRequirementsState={mergeRequirementsState}\n        mergeable={isMergeable}\n        viewerMergeActions={viewerMergeActions}\n        {...props}\n      />\n    )\n  } else {\n    mergeComponent = (\n      <DirectMergeActionsSection\n        baseRefName={baseRefName}\n        conflictsCondition={conflictsCondition}\n        numberOfCommits={numberOfCommits}\n        pullRequestId={id}\n        isDraft={isDraft}\n        commitAuthor={commitAuthor}\n        commitMessageBody={commitMessageBody}\n        commitMessageHeadline={commitMessageHeadline}\n        mergeRequirementsState={mergeRequirementsState}\n        mergeable={isMergeable}\n        viewerMergeActions={viewerMergeActions}\n        {...props}\n      />\n    )\n  }\n\n  return (\n    <div className=\"p-3 bgColor-muted borderColor-muted rounded-bottom-2\">\n      <>\n        {isAllowableWithBypass && isReadingFromJSONAPI && (\n          <div className=\"mb-3\">\n            <BypassMergeRequirementsToggle\n              checked={isAdminBypassToggleChecked}\n              onToggleChecked={() => setIsAdminBypassToggleChecked(!isAdminBypassToggleChecked)}\n            />\n          </div>\n        )}\n        {mergeComponent}\n      </>\n    </div>\n  )\n}\n\ntry{ AddToMergeQueueSection.displayName ||= 'AddToMergeQueueSection' } catch {}\ntry{ DisableAutoMerge.displayName ||= 'DisableAutoMerge' } catch {}\ntry{ MergeSectionWithRelay.displayName ||= 'MergeSectionWithRelay' } catch {}\ntry{ MergeSection.displayName ||= 'MergeSection' } catch {}","import {useMutation} from '@tanstack/react-query'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport {PageData} from '@github-ui/pull-request-page-data-tooling/page-data'\nimport {usePageDataUrl} from '@github-ui/pull-request-page-data-tooling/use-page-data-url'\n\nexport function useDisableAutoMergeMutation({\n  onSuccess,\n  onError,\n}: {\n  onSuccess: () => void\n  onError: (error: Error) => void\n}) {\n  const apiURL = usePageDataUrl(PageData.disableAutoMerge)\n  return useMutation({\n    mutationFn: async () => {\n      const result = await verifiedFetch(`${apiURL}`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n        },\n      })\n      if (result.ok) {\n        const json = await result.json()\n        return json\n      }\n      throw new Error('Failed to disable auto-merge for pull request.')\n    },\n    onSuccess: () => {\n      onSuccess()\n    },\n    onError: (e: Error) => {\n      onError(e)\n    },\n  })\n}\n","import {Box, Text} from '@primer/react'\nimport {AlertIcon} from './common/AlertIcon'\nimport {MergeBoxSectionHeader} from './common/MergeBoxSectionHeader'\nimport type {PullRequestMergeRequirements} from '../../types'\n\nconst RULE_ROLLUP_TYPES_EXCLUDED_FROM_DISPLAY = ['MERGE_QUEUE']\n\n// Temporarily allow %other and very generous message types to avoid type casting\nexport interface BlockedSectionProps {\n  isDraft: boolean\n  failingMergeConditionsWithoutRulesCondition: Array<{message: string | null | undefined} | {__typename: '%other'}>\n  // There should only be one rules condition, but keep an array for keeping interfaces similar\n  failingRulesConditions: Array<\n    | {\n        message: string | null | undefined\n        ruleRollups?:\n          | ReadonlyArray<{message: string | null | undefined; ruleType: string; result: string}>\n          | undefined\n          | null\n      }\n    | {__typename: '%other'}\n  >\n  mergeRequirementsState: PullRequestMergeRequirements['state']\n}\n\n/**\n *\n * Describes why a pull request is unmergeable\n *\n * If the pull request is unmergeable, this component will render a section describing why\n * If the pull request is mergeable or the status is unknown, it will return null\n */\nexport function BlockedSection({\n  failingMergeConditionsWithoutRulesCondition,\n  failingRulesConditions,\n  isDraft,\n  mergeRequirementsState,\n}: BlockedSectionProps) {\n  if (isDraft || mergeRequirementsState !== 'UNMERGEABLE') return null\n\n  const failingRuleRollups = failingRulesConditions\n    .flatMap(c => ('ruleRollups' in c ? c.ruleRollups : []))\n    .filter(rule => rule?.result === 'FAILED' && !RULE_ROLLUP_TYPES_EXCLUDED_FROM_DISPLAY.includes(rule.ruleType))\n\n  const failingConditionsAndRules = [...failingMergeConditionsWithoutRulesCondition, ...failingRuleRollups]\n\n  return (\n    <Box aria-label=\"Merging is blocked\" as=\"section\" sx={{borderBottom: '1px solid', borderColor: 'border.muted'}}>\n      <MergeBoxSectionHeader title=\"Merging is blocked\" icon={<AlertIcon />}>\n        <ul className=\"list-style-none\">\n          {failingConditionsAndRules.map(\n            (condition, i) =>\n              condition &&\n              'message' in condition && (\n                <Text key={i} as=\"li\" sx={{color: 'fg.muted', mb: 0}}>\n                  {condition.message}\n                </Text>\n              ),\n          )}\n        </ul>\n      </MergeBoxSectionHeader>\n    </Box>\n  )\n}\n\ntry{ BlockedSection.displayName ||= 'BlockedSection' } catch {}","import {commitMutation, graphql} from 'react-relay'\nimport type {Environment} from 'relay-runtime'\n\nimport type {\n  MarkPullRequestReadyForReviewInput,\n  markPullRequestReadyForReviewMutation as markPullRequestReadyForReviewMutationType,\n  markPullRequestReadyForReviewMutation$data,\n} from './__generated__/markPullRequestReadyForReviewMutation.graphql'\n\nexport function markPullRequestReadyForReviewMutation({\n  environment,\n  input,\n  onCompleted,\n  onError,\n}: {\n  environment: Environment\n  input: MarkPullRequestReadyForReviewInput\n  onCompleted?: (response: markPullRequestReadyForReviewMutation$data) => void\n  onError?: (error: Error) => void\n}) {\n  return commitMutation<markPullRequestReadyForReviewMutationType>(environment, {\n    mutation: graphql`\n      mutation markPullRequestReadyForReviewMutation($input: MarkPullRequestReadyForReviewInput!) @raw_response_type {\n        markPullRequestReadyForReview(input: $input) {\n          pullRequest {\n            id\n            isDraft\n          }\n        }\n      }\n    `,\n    variables: {input},\n    onCompleted,\n    onError,\n  })\n}\n","import {GitPullRequestDraftIcon, StopIcon} from '@primer/octicons-react'\nimport {useAnalytics} from '@github-ui/use-analytics'\nimport {HEADER_ICON_SIZE} from '../../constants'\nimport {Box, CircleOcticon, Button, Flash, Octicon, Spinner} from '@primer/react'\nimport useSafeState from '@github-ui/use-safe-state'\n\nimport {useRelayEnvironment} from 'react-relay'\n\nimport type {PullRequestState} from '../../types'\n\nimport {markPullRequestReadyForReviewMutation} from '../../mutations/mark-pull-request-ready-for-review-mutation'\nimport {MergeBoxSectionHeader} from './common/MergeBoxSectionHeader'\n\nexport type MarkReadyForReviewFunction = ({\n  onCompleted,\n  onError,\n}: {\n  onCompleted: () => void\n  onError: () => void\n}) => void\n\ntype DraftStateSectionWithRelayProps = Omit<DraftStateSectionProps, 'onMarkReadyForReview'> & {id: string}\nexport function DraftStateSectionWithRelay({id, ...props}: DraftStateSectionWithRelayProps) {\n  const environment = useRelayEnvironment()\n  const onMarkReadyForReview: MarkReadyForReviewFunction = ({onCompleted, onError}) => {\n    markPullRequestReadyForReviewMutation({\n      environment,\n      input: {pullRequestId: id},\n      onCompleted,\n      onError,\n    })\n  }\n  return <DraftStateSection {...props} onMarkReadyForReview={onMarkReadyForReview} />\n}\n\nexport type DraftStateSectionProps = {\n  isDraft: boolean\n  state: PullRequestState\n  viewerCanUpdate: boolean\n} & Callbacks\n\ntype Callbacks = {\n  onMarkReadyForReview: MarkReadyForReviewFunction\n}\n\n/**\n *\n * Renders if the pull request is in a Draft State\n */\nexport function DraftStateSection({isDraft, state, viewerCanUpdate, onMarkReadyForReview}: DraftStateSectionProps) {\n  const [errorMessage, setErrorMessage] = useSafeState<string | null>(null)\n  const [markingReadyForReview, setMarkingReadyForReview] = useSafeState(false)\n  const {sendAnalyticsEvent} = useAnalytics()\n\n  function handleMarkReadyForReview() {\n    if (markingReadyForReview) return\n    setMarkingReadyForReview(true)\n    onMarkReadyForReview({\n      onCompleted: () => setMarkingReadyForReview(false),\n      onError: () => {\n        setMarkingReadyForReview(false)\n        setErrorMessage('Could not mark ready for review')\n      },\n    })\n\n    sendAnalyticsEvent(\n      'draft_state_section.mark_ready_for_review',\n      'MERGEBOX_DRAFT_STATE_SECTION_MARK_READY_FOR_REVIEW_BUTTON',\n    )\n  }\n\n  if (state !== 'OPEN' || !isDraft || !viewerCanUpdate) {\n    return null\n  }\n\n  return (\n    <Box aria-label=\"Draft state\" as=\"section\" sx={{borderBottom: '1px solid', borderColor: 'border.muted'}}>\n      <MergeBoxSectionHeader\n        title=\"This pull request is still a work in progress\"\n        subtitle=\"Draft pull requests cannot be merged.\"\n        icon={\n          <CircleOcticon\n            size={HEADER_ICON_SIZE}\n            icon={() => <GitPullRequestDraftIcon size={16} />}\n            sx={{bg: 'neutral.emphasis', color: 'fg.onEmphasis'}}\n          />\n        }\n        rightSideContent={\n          <Button\n            aria-busy={markingReadyForReview}\n            aria-label={\n              markingReadyForReview ? 'Marking pull request ready for review' : 'Mark pull request ready for review'\n            }\n            onClick={handleMarkReadyForReview}\n          >\n            <div className=\"d-flex flex-row flex-items-center\">\n              {markingReadyForReview ? (\n                <>\n                  <Spinner size=\"small\" sx={{mr: 1}} />\n                  <span>Marking ready for review...</span>\n                </>\n              ) : (\n                'Ready for review'\n              )}\n            </div>\n          </Button>\n        }\n      >\n        {errorMessage && (\n          <Flash sx={{mb: 3}} variant=\"danger\">\n            <Octicon sx={{mr: 2}} icon={StopIcon} />\n            {errorMessage}\n          </Flash>\n        )}\n      </MergeBoxSectionHeader>\n    </Box>\n  )\n}\n\ntry{ DraftStateSectionWithRelay.displayName ||= 'DraftStateSectionWithRelay' } catch {}\ntry{ DraftStateSection.displayName ||= 'DraftStateSection' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"mergeboxLoading\":\"MergeBox-module__mergeboxLoading--welQH\"};","// extracted by mini-css-extract-plugin\nexport default {\"mergeabilityIcon\":\"MergeabilityIcon-module__mergeabilityIcon--GOu7M\"};","import type {Icon} from '@primer/octicons-react'\nimport {Box, Octicon} from '@primer/react'\nimport styles from './MergeabilityIcon.module.css'\nimport {clsx} from 'clsx'\n\ntype MergeabilityIconProps = {\n  icon: Icon\n  ariaLabel: string\n  iconBackgroundColor: string\n}\n\nexport function MergeabilityIcon({icon, ariaLabel, iconBackgroundColor}: MergeabilityIconProps) {\n  return (\n    <Box\n      className={clsx(\n        `d-flex flex-justify-center flex-items-center mr-2 rounded-2 height-2 width-2 position-absolute`,\n        styles.mergeabilityIcon,\n      )}\n      sx={{backgroundColor: iconBackgroundColor}}\n    >\n      <Octicon className=\"fgColor-onEmphasis\" icon={icon} size={24} aria-label={ariaLabel} />\n    </Box>\n  )\n}\n\ntry{ MergeabilityIcon.displayName ||= 'MergeabilityIcon' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"reviewerRow\":\"ReviewerSection-module__reviewerRow--ZjWIa\",\"reviewAuthor\":\"ReviewerSection-module__reviewAuthor--V23_y\",\"reviewedIcon\":\"ReviewerSection-module__reviewedIcon--WwqSG\"};","import {userHovercardPath} from '@github-ui/paths'\nimport {ReviewerAvatar} from '@github-ui/reviewer-avatar'\nimport {useAnalytics} from '@github-ui/use-analytics'\nimport {CheckIcon, CodeReviewIcon, FileDiffIcon, XIcon} from '@primer/octicons-react'\nimport {ActionList, CircleOcticon, Label, Tooltip} from '@primer/react'\nimport {clsx} from 'clsx'\nimport {useState} from 'react'\n\nimport {accessibleReviewSummary} from '../../accessible-review-summary'\nimport {HEADER_ICON_SIZE} from '../../constants'\nimport {MergeBoxSectionHeader} from './common/MergeBoxSectionHeader'\nimport type {PullRequestReviewState, PullRequestRuleFailureReason, Review} from '../../types'\nimport styles from './ReviewerSection.module.css'\nimport {MergeBoxExpandable} from './common/MergeBoxExpandable'\n\nexport enum ConsolidatedReviewState {\n  APPROVED = 'APPROVED',\n  CHANGES_REQUESTED = 'CHANGES_REQUESTED',\n  REVIEW_REQUIRED = 'REVIEW_REQUIRED',\n  REVIEWED = 'REVIEWED',\n}\n\nexport const getReviewsState = (\n  reviewsRequired: number,\n  isCodeownersRequired: boolean,\n  reviews: Array<{\n    authorCanPushToRepository: boolean\n    state: PullRequestReviewState\n  }>,\n  failureReasons: PullRequestRuleFailureReason[],\n): ConsolidatedReviewState => {\n  if (failureReasons.length === 0 && reviews.length > 0 && (reviewsRequired > 0 || isCodeownersRequired)) {\n    return ConsolidatedReviewState.APPROVED\n  }\n  if (\n    failureReasons.includes('CODE_OWNER_REVIEW_REQUIRED') ||\n    failureReasons.includes('SOC2_APPROVAL_PROCESS_REQUIRED') ||\n    failureReasons.includes('MORE_REVIEWS_REQUIRED')\n  ) {\n    return ConsolidatedReviewState.REVIEW_REQUIRED\n  }\n  if (failureReasons.includes('CHANGES_REQUESTED')) {\n    return ConsolidatedReviewState.CHANGES_REQUESTED\n  }\n  // we can assume if we fall through to here that there is a review because if\n  // no reviews are required and we have none, we return early and don't render\n  return ConsolidatedReviewState.REVIEWED\n}\n\nconst reviewRequiredSummary = (reviewsRequired: number, failureReasons: PullRequestRuleFailureReason[]): string => {\n  if (failureReasons.includes('MORE_REVIEWS_REQUIRED')) {\n    if (reviewsRequired === 1) {\n      return 'At least 1 approving review is required'\n    } else {\n      return `At least ${reviewsRequired} approving reviews are required`\n    }\n  } else {\n    if (failureReasons.includes('CODE_OWNER_REVIEW_REQUIRED')) {\n      return 'Code owner review required'\n    } else if (failureReasons.includes('SOC2_APPROVAL_PROCESS_REQUIRED')) {\n      return 'A review from a compliance team is required'\n    }\n  }\n  return ''\n}\n\nconst heading: {[key: string]: string} = {\n  APPROVED: 'Changes approved',\n  CHANGES_REQUESTED: 'Changes requested',\n  REVIEW_REQUIRED: 'Review required',\n  REVIEWED: 'Changes reviewed',\n}\n\nconst icon: {[key: string]: JSX.Element} = {\n  APPROVED: (\n    <CircleOcticon\n      className=\"bgColor-success-emphasis fgColor-onEmphasis\"\n      icon={() => <CheckIcon size={16} />}\n      size={HEADER_ICON_SIZE}\n    />\n  ),\n  CHANGES_REQUESTED: (\n    <CircleOcticon\n      className=\"bgColor-danger-emphasis fgColor-onEmphasis\"\n      icon={() => <FileDiffIcon size={16} />}\n      size={HEADER_ICON_SIZE}\n    />\n  ),\n  REVIEW_REQUIRED: (\n    <CircleOcticon\n      className=\"bgColor-danger-emphasis fgColor-onEmphasis\"\n      icon={() => <XIcon size={16} />}\n      size={HEADER_ICON_SIZE}\n    />\n  ),\n  REVIEWED: (\n    <CircleOcticon\n      className={clsx(styles.reviewedIcon, 'fgColor-onEmphasis')}\n      icon={() => <CodeReviewIcon size={16} />}\n      size={HEADER_ICON_SIZE}\n    />\n  ),\n}\n\nconst joinWithAnd = (items: string[]) => {\n  if (items.length === 0) {\n    return ''\n  } else if (items.length === 1) {\n    return items[0]\n  } else if (items.length === 2) {\n    return items.join(' and ')\n  } else {\n    const last = items.pop()\n    return `${items.join(', ')}, and ${last}`\n  }\n}\n\nconst reviewStatusText = (state: string, onBehalfOf: string[]) => {\n  let statusText = ''\n  switch (state) {\n    case 'APPROVED':\n      statusText += 'Approved these changes'\n      break\n    case 'CHANGES_REQUESTED':\n      statusText += 'Requested changes'\n      break\n    case 'COMMENTED':\n      statusText += 'Commented'\n      break\n  }\n  if (state === 'APPROVED' && onBehalfOf.length > 0) {\n    statusText += ` for ${joinWithAnd(onBehalfOf)}`\n  }\n  return statusText\n}\n\nconst isReviewRelatedFailureReason = (r: PullRequestRuleFailureReason) => {\n  return (\n    r === 'CODE_OWNER_REVIEW_REQUIRED' ||\n    r === 'SOC2_APPROVAL_PROCESS_REQUIRED' ||\n    r === 'CHANGES_REQUESTED' ||\n    r === 'MORE_REVIEWS_REQUIRED'\n  )\n}\n\nexport type ReviewerSectionProps = {\n  reviewerRuleRollups: Array<{\n    requiredReviewers?: number\n    requiresCodeowners?: boolean\n    failureReasons?: PullRequestRuleFailureReason[]\n  }>\n  latestOpinionatedReviews: Review[]\n}\n\n/**\n * Renders a collapsible section with a list of reviewers and their reviews.\n */\nexport function ReviewerSection({reviewerRuleRollups, latestOpinionatedReviews}: ReviewerSectionProps) {\n  const reviews = latestOpinionatedReviews\n  const [reviewersExpanded, setReviewersExpanded] = useState(false)\n  const {sendAnalyticsEvent} = useAnalytics()\n\n  const reviewRules = reviewerRuleRollups\n\n  const requiredReviewCounts = reviewRules?.flatMap(rule => rule.requiredReviewers || []) || []\n  const numReviewsRequired = requiredReviewCounts.length ? Math.max(...requiredReviewCounts) : 0\n\n  const codeownersRequiredRules = reviewRules?.filter(rule => rule.requiresCodeowners) || []\n  const codeownersRequired = codeownersRequiredRules.length > 0\n\n  const allFailureReasons = reviewRules?.flatMap(rule => rule.failureReasons || []) || []\n  const consolidatedFailureReasons = [...new Set(allFailureReasons)].filter(isReviewRelatedFailureReason)\n\n  const reviewsState = getReviewsState(numReviewsRequired, codeownersRequired, reviews, consolidatedFailureReasons)\n\n  // don't render if there are no reviews and no reviews are required\n  if (reviews.length === 0 && consolidatedFailureReasons.length === 0) {\n    return null\n  }\n\n  return (\n    <section aria-label=\"Reviews\" className=\"border-bottom color-border-subtle\">\n      <MergeBoxSectionHeader\n        title={heading[reviewsState]}\n        subtitle={`${\n          reviewsState === ConsolidatedReviewState.REVIEW_REQUIRED\n            ? reviewRequiredSummary(numReviewsRequired, consolidatedFailureReasons)\n            : accessibleReviewSummary(reviews)\n        }\n          by reviewers with write access.`}\n        icon={icon[reviewsState]}\n        expandableProps={\n          reviews.length > 0\n            ? {\n                ariaLabel: reviewersExpanded ? 'Collapse reviews' : 'Expand reviews',\n                isExpanded: reviewersExpanded,\n                onToggle: () => {\n                  const eventType = reviewersExpanded ? 'reviewers_section.collapse' : 'reviewers_section.expand'\n                  const eventTarget = 'MERGEBOX_REVIEWERS_SECTION_TOGGLE_BUTTON'\n                  sendAnalyticsEvent(eventType, eventTarget)\n                  setReviewersExpanded(!reviewersExpanded)\n                },\n              }\n            : undefined\n        }\n      />\n      <MergeBoxExpandable isExpanded={reviewersExpanded}>\n        <ActionList showDividers>\n          {reviews.map(review => {\n            const onBehalfOfTeams = review.onBehalfOf\n            return (\n              review.author && (\n                <ActionList.LinkItem\n                  key={review.author.login}\n                  data-hovercard-url={userHovercardPath({owner: review.author.login})}\n                  href={review.author.url}\n                  className={styles.reviewerRow}\n                >\n                  <ActionList.LeadingVisual>\n                    <ReviewerAvatar\n                      author={{login: review.author.login, avatarUrl: review.author.avatarUrl}}\n                      state={review.state}\n                    />\n                  </ActionList.LeadingVisual>\n                  <div className={clsx(styles.reviewAuthor)}>{review.author.login}</div>\n                  <ActionList.Description>{reviewStatusText(review.state, onBehalfOfTeams)}</ActionList.Description>\n                  {review.authorCanPushToRepository || (\n                    <ActionList.TrailingVisual>\n                      <Label>\n                        <Tooltip aria-label=\"User has read access to this repository\" direction=\"n\">\n                          Read-only\n                        </Tooltip>\n                      </Label>\n                    </ActionList.TrailingVisual>\n                  )}\n                </ActionList.LinkItem>\n              )\n            )\n          })}\n        </ActionList>\n      </MergeBoxExpandable>\n    </section>\n  )\n}\n\ntry{ ReviewerSection.displayName ||= 'ReviewerSection' } catch {}","/**\n *  Returns a text summary of the counts of change requests and approvals\n *  for screen readers\n *\n *  examples:\n *   - \"2 approving reviews\"\n *   - \"1 change requested, 2 approving review\"\n *   - \"2 changes requested, 2 approving reviews\"\n */\nexport function accessibleReviewSummary(\n  reviews: Array<{state: string; authorCanPushToRepository: boolean} | null | undefined>,\n): string {\n  const changeRequests = reviews.filter(\n    review => review && review.state === 'CHANGES_REQUESTED' && review.authorCanPushToRepository,\n  ).length\n  const approvals = reviews.filter(\n    review => review && review.state === 'APPROVED' && review.authorCanPushToRepository,\n  ).length\n\n  if (changeRequests === 0 && approvals === 0) {\n    return 'No applicable reviews submitted'\n  }\n\n  const changeRequestText =\n    changeRequests > 0 ? `${changeRequests} change${changeRequests === 1 ? '' : 's'} requested` : undefined\n  const approvalText = approvals > 0 ? `${approvals} approving review${approvals === 1 ? '' : 's'}` : undefined\n\n  const summaryText = [changeRequestText, approvalText].filter(Boolean).join(', ')\n\n  return summaryText\n}\n","import {assertDataPresent} from '@github-ui/assert-data-present'\nimport {Spinner} from '@primer/react'\nimport {memo, startTransition, useCallback, useState, Suspense, useMemo} from 'react'\nimport {readInlineData, usePreloadedQuery, type FetchPolicy, type PreloadedQuery} from 'react-relay'\nimport type {MergeMethod, PullRequestMergeRequirements, RelayPullRequest, ViewerPayload} from '../types'\nimport {MergeAction} from '../types'\nimport {useMergeMethodContext} from '../contexts/MergeMethodContext'\nimport type {useLoadMergeBoxQuery as useLoadMergeBoxQueryType} from '../hooks/__generated__/useLoadMergeBoxQuery.graphql'\nimport type {useLoadMergeBoxQuery_pullRequest$key} from '../hooks/__generated__/useLoadMergeBoxQuery_pullRequest.graphql'\nimport {ChecksSection} from './sections/ChecksSection'\nimport {ChecksSectionFetchFailure} from './sections/ChecksSectionFetchFailure'\nimport {ClosedOrMergedStateMergeBoxWithRelay} from './ClosedOrMergedStateMergeBox'\nimport {ConflictsSectionWithRelay, type ConflictsSectionProps} from './sections/ConflictsSection'\nimport {useMergeabilityLiveUpdates, type Channels} from '../hooks/use-mergeability-live-updates'\nimport {LoadMergeBoxQuery, MergeBoxFragment, useLoadMergeBoxQuery} from '../hooks/use-load-merge-box-query'\nimport {MergeQueueSectionWithRelay} from './sections/merge-section/MergeQueueSection'\nimport {MergeSectionWithRelay} from './sections/merge-section/MergeSection'\nimport {BlockedSection, type BlockedSectionProps} from './sections/BlockedSection'\nimport {DraftStateSectionWithRelay} from './sections/DraftStateSection'\nimport styles from './MergeBox.module.css'\nimport type {Status} from '../helpers/mergeability-status'\nimport {\n  borderColorClassForStatus,\n  mergeabilityStatus,\n  mergeabilityStatusFromRelay,\n  presentationForStatus,\n} from '../helpers/mergeability-status'\nimport {GitMergeIcon, GitMergeQueueIcon} from '@primer/octicons-react'\nimport {MergeabilityIcon} from './MergeabilityIcon'\nimport {QueryClientProvider} from '@tanstack/react-query'\nimport {ReactQueryDevtools} from '@tanstack/react-query-devtools'\nimport queryClient from '@github-ui/pull-request-page-data-tooling/query-client'\nimport {ErrorBoundary} from '@github-ui/react-core/error-boundary'\nimport {ReviewerSection, type ReviewerSectionProps} from './sections/ReviewerSection'\nimport {useMergeBoxPageData} from '../page-data/loaders/use-merge-box-page-data'\nimport {\n  getConflictsCondition,\n  getFailingMergeConditionsWithoutRulesCondition,\n  getFailingRulesConditions,\n  getReviewRuleRollupMetadata,\n  transformProperties,\n} from '../helpers/json-api-helpers'\n\ntype RefetchQuery = (input: {mergeMethod: MergeMethod; id: string}, policy: {fetchPolicy: FetchPolicy}) => void\n\nfunction MergeBoxLoading() {\n  return (\n    <div className={styles.mergeboxLoading}>\n      <Spinner />\n    </div>\n  )\n}\n\ntype MergeBoxWithRelaySuspenseProps = {\n  /**\n   * The ID of the pull request\n   */\n  pullRequestId: string\n  /**\n   * When true, hides the mergeability icon that is shown to the left of the mergebox\n   */\n  hideIcon?: boolean\n  /**\n   * When true the mergebox is reading from the JSON API\n   */\n  isReadingFromJSONAPI?: boolean\n}\n\n/**\n * Provides a suspense boundary for the mergebox\n */\nexport const MergeBoxWithRelaySuspense = memo(function MergeBoxWithRelaySuspense({\n  pullRequestId,\n  hideIcon = false,\n  isReadingFromJSONAPI = false,\n}: MergeBoxWithRelaySuspenseProps) {\n  const {query, loadQuery} = useLoadMergeBoxQuery({pullRequestId})\n  if (!query) return <MergeBoxLoading />\n\n  return (\n    <Suspense fallback={<MergeBoxLoading />}>\n      <MergeBoxWithRelayWrapper\n        query={query}\n        hideIcon={hideIcon}\n        refetchQuery={loadQuery}\n        isReadingFromJSONAPI={isReadingFromJSONAPI}\n      />\n    </Suspense>\n  )\n})\n\ntype MergeBoxWithSuspenseProps = {\n  /**\n   * When true, hides the mergeability icon that is shown to the left of the mergebox\n   */\n  hideIcon?: boolean\n  /**\n   * The current user's display login\n   */\n  viewerLogin: string\n\n  /**\n   * When true, the mergebox is reading from the JSON API\n   */\n  isReadingFromJSONAPI: boolean\n}\n/**\n * Provides a suspense boundary for the mergebox\n */\nexport const MergeBoxWithSuspense = memo(function MergeBoxWithSuspense({\n  hideIcon = false,\n  ...rest\n}: MergeBoxWithSuspenseProps) {\n  return (\n    <Suspense fallback={<MergeBoxLoading />}>\n      <QueryClientProvider client={queryClient}>\n        <MergeBoxWrapper hideIcon={hideIcon} {...rest} />\n        <ReactQueryDevtools initialIsOpen={false} />\n      </QueryClientProvider>\n    </Suspense>\n  )\n})\n\n/**\n * Loads the data for the MergeBox\n */\nexport function MergeBoxWithRelayWrapper({\n  query,\n  refetchQuery,\n  hideIcon = false,\n  isReadingFromJSONAPI,\n}: {\n  query: PreloadedQuery<useLoadMergeBoxQueryType>\n  refetchQuery: RefetchQuery\n  hideIcon?: boolean\n  isReadingFromJSONAPI: boolean\n}) {\n  const data = usePreloadedQuery<useLoadMergeBoxQueryType>(LoadMergeBoxQuery, query)\n\n  const pullRequest = data.pullRequest\n  if (!pullRequest) return null\n  // eslint-disable-next-line no-restricted-syntax\n  const pullRequestData = readInlineData<useLoadMergeBoxQuery_pullRequest$key>(MergeBoxFragment, pullRequest)\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <MergeBoxWithRelay\n        pullRequest={pullRequestData}\n        viewer={data.viewer}\n        hideIcon={hideIcon}\n        refetchQuery={refetchQuery}\n        isReadingFromJSONAPI={isReadingFromJSONAPI}\n      />\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  )\n}\n\n/**\n * Loads the data for the MergeBox and translates it into an agnostic format for the MergeBox\n */\nexport function MergeBoxWrapper({\n  viewerLogin,\n  isReadingFromJSONAPI,\n  ...rest\n}: {\n  hideIcon?: boolean\n  viewerLogin: string\n  isReadingFromJSONAPI: boolean\n}) {\n  const {mergeMethod} = useMergeMethodContext()\n  const {\n    data: {pullRequest, mergeRequirements},\n    refetch,\n  } = useMergeBoxPageData({mergeMethod, bypassRequirements: false})\n\n  const status = mergeabilityStatus({pullRequest, mergeRequirements})\n\n  const aliveChannels = pullRequest.mergeBoxAliveChannels\n  const reviewRules = getReviewRuleRollupMetadata(mergeRequirements)\n  const conflictsCondition = getConflictsCondition(mergeRequirements)\n\n  const failingMergeConditionsWithoutRulesCondition = getFailingMergeConditionsWithoutRulesCondition(mergeRequirements)\n\n  const failingRulesConditions = getFailingRulesConditions(mergeRequirements)\n  const pullRequestData = transformProperties(pullRequest)\n\n  // Create a refetch query function with the same interface. Ignore arguments because the TanStack query doesn't need them.\n  function refetchQuery(_input: {mergeMethod: MergeMethod; id: string}) {\n    refetch()\n  }\n\n  return (\n    <MergeBox\n      aliveChannels={aliveChannels}\n      conflictsCondition={conflictsCondition}\n      failingMergeConditionsWithoutRulesCondition={failingMergeConditionsWithoutRulesCondition}\n      failingRulesConditions={failingRulesConditions}\n      mergeRequirements={mergeRequirements}\n      numberOfCommits={pullRequest.numberOfCommits || 0}\n      pullRequest={pullRequestData}\n      reviewRules={reviewRules}\n      reviews={pullRequest.latestOpinionatedReviews}\n      status={status}\n      viewerLogin={viewerLogin}\n      refetchQuery={refetchQuery}\n      isReadingFromJSONAPI={isReadingFromJSONAPI}\n      {...rest}\n    />\n  )\n}\n\n/**\n * Transforms relay-specific data into an agnostic format\n */\nexport function MergeBoxWithRelay({\n  pullRequest: pullRequestData,\n  viewer: viewerData,\n  isReadingFromJSONAPI,\n  ...rest\n}: {\n  pullRequest: RelayPullRequest\n  viewer: ViewerPayload\n  hideIcon?: boolean\n  refetchQuery: RefetchQuery\n  isReadingFromJSONAPI: boolean\n}) {\n  const reviews = (pullRequestData.latestOpinionatedReviews?.edges || []).flatMap(reviewEdge => {\n    const reviewData = reviewEdge?.node\n    if (!reviewData) return []\n\n    return {\n      ...reviewData,\n      onBehalfOf: reviewData.onBehalfOf.edges?.flatMap(onBehalfOf => onBehalfOf?.node?.name ?? []) ?? [],\n    }\n  })\n\n  const {mergeRequirements} = pullRequestData\n  const applicableRulesCondition = mergeRequirements.conditions?.filter(\n    c => c.__typename === 'PullRequestRulesCondition',\n  )?.[0]\n\n  const reviewRules =\n    applicableRulesCondition?.__typename === 'PullRequestRulesCondition' && applicableRulesCondition?.ruleRollups\n      ? applicableRulesCondition.ruleRollups\n      : []\n\n  const conflictsCondition = mergeRequirements.conditions.find(\n    c => c.__typename === 'PullRequestMergeConflictStateCondition',\n  )\n  const failingMergeConditionsWithoutRulesCondition = mergeRequirements.conditions.filter(\n    condition =>\n      'result' in condition && condition.result === 'FAILED' && condition.__typename !== 'PullRequestRulesCondition',\n  )\n  const failingRulesConditions = mergeRequirements.conditions.filter(\n    condition =>\n      'result' in condition && condition.result === 'FAILED' && condition.__typename === 'PullRequestRulesCondition',\n  )\n  const status = mergeabilityStatusFromRelay(pullRequestData)\n  const aliveChannels = useMemo(() => {\n    return {\n      stateChannel: pullRequestData.stateChannel,\n      deployedChannel: pullRequestData.deployedChannel,\n      reviewStateChannel: pullRequestData.reviewStateChannel,\n      workflowsChannel: pullRequestData.workflowsChannel,\n      mergeQueueChannel: pullRequestData.mergeQueueChannel,\n      headRefChannel: pullRequestData.headRefChannel,\n      baseRefChannel: pullRequestData.baseRefChannel,\n      commitHeadShaChannel: pullRequestData.commitHeadShaChannel,\n      gitMergeStateChannel: pullRequestData.gitMergeStateChannel,\n    }\n  }, [\n    pullRequestData.stateChannel,\n    pullRequestData.deployedChannel,\n    pullRequestData.reviewStateChannel,\n    pullRequestData.workflowsChannel,\n    pullRequestData.mergeQueueChannel,\n    pullRequestData.headRefChannel,\n    pullRequestData.baseRefChannel,\n    pullRequestData.commitHeadShaChannel,\n    pullRequestData.gitMergeStateChannel,\n  ])\n\n  return (\n    <MergeBox\n      aliveChannels={aliveChannels}\n      conflictsCondition={conflictsCondition && Object.assign(conflictsCondition)}\n      failingMergeConditionsWithoutRulesCondition={failingMergeConditionsWithoutRulesCondition}\n      failingRulesConditions={failingRulesConditions}\n      mergeRequirements={mergeRequirements}\n      numberOfCommits={pullRequestData.commits.totalCount || 0}\n      pullRequest={pullRequestData}\n      reviewRules={Object.assign(reviewRules)}\n      reviews={reviews}\n      status={status}\n      viewerLogin={viewerData.login}\n      isReadingFromJSONAPI={isReadingFromJSONAPI}\n      {...rest}\n    />\n  )\n}\n\ntype MergeBoxPullRequest = Omit<\n  RelayPullRequest,\n  | 'baseRefChannel'\n  | 'commitHeadShaChannel'\n  | 'commits'\n  | 'deployedChannel'\n  | 'gitMergeStateChannel'\n  | 'headRefChannel'\n  | 'mergeQueueChannel'\n  | 'mergeRequirements'\n  | 'reviewStateChannel'\n  | 'stateChannel'\n  | 'workflowsChannel'\n  | 'latestOpinionatedReviews'\n>\n\nexport type MergeBoxProps = {\n  aliveChannels: Channels\n  conflictsCondition: ConflictsSectionProps['conflictsCondition']\n  failingMergeConditionsWithoutRulesCondition: BlockedSectionProps['failingMergeConditionsWithoutRulesCondition']\n  failingRulesConditions: BlockedSectionProps['failingRulesConditions']\n  hideIcon?: boolean\n  isReadingFromJSONAPI: boolean\n  mergeRequirements: Pick<\n    PullRequestMergeRequirements,\n    'commitAuthor' | 'commitMessageBody' | 'commitMessageHeadline' | 'state'\n  > | null\n  numberOfCommits: number\n  pullRequest: MergeBoxPullRequest\n  refetchQuery: RefetchQuery\n  reviewRules: ReviewerSectionProps['reviewerRuleRollups']\n  reviews: ReviewerSectionProps['latestOpinionatedReviews']\n  status: Status\n  viewerLogin: string\n}\n/**\n * The actual mergebox with sections\n */\nexport function MergeBox({\n  aliveChannels,\n  conflictsCondition,\n  failingMergeConditionsWithoutRulesCondition,\n  failingRulesConditions,\n  hideIcon = false,\n  isReadingFromJSONAPI,\n  mergeRequirements,\n  numberOfCommits,\n  pullRequest: pullRequestData,\n  refetchQuery: refetch,\n  reviewRules,\n  reviews,\n  status,\n  viewerLogin,\n}: MergeBoxProps) {\n  const directMergeAction = pullRequestData.viewerMergeActions.find(action => action.name === MergeAction.DIRECT_MERGE)\n  assertDataPresent(directMergeAction)\n\n  const [shouldFocusPrimaryMergeButton, setShouldFocusPrimaryMergeButton] = useState(false)\n  const {mergeMethod} = useMergeMethodContext()\n  const {isInMergeQueue, state, viewerCanDeleteHeadRef, viewerCanRestoreHeadRef} = pullRequestData\n  const shouldHideIcon =\n    hideIcon || ((state === 'CLOSED' || state === 'MERGED') && !viewerCanDeleteHeadRef && !viewerCanRestoreHeadRef)\n\n  const mergeStatusPresentation = presentationForStatus(status)\n  const mergeboxBorderColor = borderColorClassForStatus(status)\n\n  const mergeBoxIcon = isInMergeQueue ? GitMergeQueueIcon : GitMergeIcon\n\n  const refetchQuery = useCallback(() => {\n    startTransition(() => {\n      refetch({mergeMethod, id: pullRequestData.id}, {fetchPolicy: 'network-only'})\n    })\n  }, [pullRequestData.id, mergeMethod, refetch])\n\n  useMergeabilityLiveUpdates({refetchQuery, channels: aliveChannels})\n\n  const focusPrimaryMergeButton = useCallback(() => {\n    setShouldFocusPrimaryMergeButton(true)\n  }, [setShouldFocusPrimaryMergeButton])\n\n  return (\n    <div id=\"partial-pull-merging\" className=\"position-relative\">\n      {!shouldHideIcon && (\n        <MergeabilityIcon\n          icon={mergeBoxIcon}\n          ariaLabel={mergeStatusPresentation.title}\n          iconBackgroundColor={mergeStatusPresentation.iconColor}\n        />\n      )}\n\n      {pullRequestData.state !== 'OPEN' || !mergeRequirements ? (\n        <ClosedOrMergedStateMergeBoxWithRelay\n          id={pullRequestData.id}\n          state={pullRequestData.state}\n          headRefName={pullRequestData.headRefName}\n          headRepository={pullRequestData.headRepository}\n          viewerCanDeleteHeadRef={pullRequestData.viewerCanDeleteHeadRef}\n          viewerCanRestoreHeadRef={pullRequestData.viewerCanRestoreHeadRef}\n        />\n      ) : (\n        <div className={`border rounded-2 ${mergeboxBorderColor}`}>\n          {isInMergeQueue ? (\n            <MergeQueueSectionWithRelay\n              id={pullRequestData.id}\n              viewerCanAddAndRemoveFromMergeQueue={pullRequestData.viewerCanAddAndRemoveFromMergeQueue}\n              mergeQueueEntry={pullRequestData.mergeQueueEntry}\n              mergeQueue={pullRequestData.mergeQueue}\n              focusPrimaryMergeButton={focusPrimaryMergeButton}\n            />\n          ) : (\n            <>\n              <ReviewerSection reviewerRuleRollups={reviewRules} latestOpinionatedReviews={reviews} />\n              <ErrorBoundary fallback={<ChecksSectionFetchFailure />}>\n                <ChecksSection pullRequestId={pullRequestData.id} pullRequestHeadSha={pullRequestData.headRefOid} />\n              </ErrorBoundary>\n              <ConflictsSectionWithRelay\n                baseRefName={pullRequestData.baseRefName}\n                id={pullRequestData.id}\n                conflictsCondition={conflictsCondition}\n                mergeStateStatus={pullRequestData.mergeStateStatus}\n                resourcePath={pullRequestData.resourcePath}\n                viewerCanUpdateBranch={pullRequestData.viewerCanUpdateBranch}\n                viewerLogin={viewerLogin}\n              />\n              <BlockedSection\n                isDraft={pullRequestData.isDraft}\n                failingMergeConditionsWithoutRulesCondition={failingMergeConditionsWithoutRulesCondition}\n                failingRulesConditions={failingRulesConditions}\n                mergeRequirementsState={mergeRequirements.state}\n              />\n              <DraftStateSectionWithRelay\n                id={pullRequestData.id}\n                isDraft={pullRequestData.isDraft}\n                state={pullRequestData.state}\n                viewerCanUpdate={pullRequestData.viewerCanUpdate}\n              />\n              <MergeSectionWithRelay\n                autoMergeRequest={pullRequestData.autoMergeRequest}\n                baseRefName={pullRequestData.baseRefName}\n                numberOfCommits={numberOfCommits}\n                conflictsCondition={conflictsCondition}\n                id={pullRequestData.id}\n                isDraft={pullRequestData.isDraft}\n                isInMergeQueue={pullRequestData.isInMergeQueue}\n                mergeQueue={pullRequestData.mergeQueue}\n                commitAuthor={mergeRequirements.commitAuthor}\n                commitMessageBody={mergeRequirements.commitMessageBody}\n                commitMessageHeadline={mergeRequirements.commitMessageHeadline}\n                mergeRequirementsState={mergeRequirements.state}\n                mergeStateStatus={pullRequestData.mergeStateStatus}\n                viewerCanAddAndRemoveFromMergeQueue={pullRequestData.viewerCanAddAndRemoveFromMergeQueue}\n                viewerCanDisableAutoMerge={pullRequestData.viewerCanDisableAutoMerge}\n                viewerMergeActions={pullRequestData.viewerMergeActions}\n                viewerCanEnableAutoMerge={pullRequestData.viewerCanEnableAutoMerge}\n                refetchMergeBoxQuery={refetchQuery}\n                shouldFocusPrimaryMergeButton={shouldFocusPrimaryMergeButton}\n                setShouldFocusPrimaryMergeButton={setShouldFocusPrimaryMergeButton}\n                isReadingFromJSONAPI={isReadingFromJSONAPI}\n              />\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\n\ntry{ MergeBoxLoading.displayName ||= 'MergeBoxLoading' } catch {}\ntry{ MergeBoxWithRelaySuspense.displayName ||= 'MergeBoxWithRelaySuspense' } catch {}\ntry{ MergeBoxWithSuspense.displayName ||= 'MergeBoxWithSuspense' } catch {}\ntry{ MergeBoxWithRelayWrapper.displayName ||= 'MergeBoxWithRelayWrapper' } catch {}\ntry{ MergeBoxWrapper.displayName ||= 'MergeBoxWrapper' } catch {}\ntry{ MergeBoxWithRelay.displayName ||= 'MergeBoxWithRelay' } catch {}\ntry{ MergeBox.displayName ||= 'MergeBox' } catch {}","import {useSuspenseQuery} from '@tanstack/react-query'\nimport {PageData} from '@github-ui/pull-request-page-data-tooling/page-data'\nimport {usePageDataUrl} from '@github-ui/pull-request-page-data-tooling/use-page-data-url'\nimport {reactFetch} from '@github-ui/verified-fetch'\nimport {reportTraceData} from '@github-ui/internal-api-insights'\nimport type {MergeBoxPageData} from '../payloads/merge-box'\n\nexport function useMergeBoxPageData({\n  mergeMethod,\n  bypassRequirements = false,\n}: {\n  mergeMethod: string\n  bypassRequirements?: boolean\n}) {\n  const searchParams = new URLSearchParams()\n  searchParams.append('merge_method', mergeMethod)\n  searchParams.append('bypass_requirements', bypassRequirements.toString())\n  const apiURL = `${usePageDataUrl(PageData.mergeBox)}?${searchParams.toString()}`\n\n  return useSuspenseQuery<MergeBoxPageData, Error>({\n    queryKey: [PageData.mergeBox, apiURL, mergeMethod, bypassRequirements],\n    queryFn: async () => {\n      const result = await reactFetch(apiURL)\n      if (!result.ok) throw new Error(`HTTP ${result.status}`)\n      const json = await result.json()\n      reportTraceData(json)\n      return json\n    },\n  })\n}\n","import type {\n  PullRequestMergeRequirementsPayload,\n  ConflictMergeConditionPayload,\n  MergeConditionPayload,\n  JSONAPIPullRequestPayload,\n} from '../page-data/payloads/merge-box'\nimport type {PullRequestRuleFailureReason} from '../types'\n\ntype ReviewerRollup = {\n  requiredReviewers: number\n  requiresCodeowners: boolean\n  failureReasons: PullRequestRuleFailureReason[]\n}\n/**\n * Extracts the metadata for the pull request rule from the merge requirements payload\n * @param mergeRequirements\n * @returns ReviewerRuleMetadata[]\n */\nexport function getReviewRuleRollupMetadata(\n  mergeRequirements: PullRequestMergeRequirementsPayload | null,\n): ReviewerRollup[] {\n  const pullRequestCondition =\n    mergeRequirements && mergeRequirements.conditions.find(c => c.type === 'PULL_REQUEST_RULES')\n  const rollupMetadata =\n    pullRequestCondition?.ruleRollups?.filter(rr => rr.ruleType === 'PULL_REQUEST').map(rollup => rollup.metadata) ?? []\n\n  return (\n    rollupMetadata\n      .filter(metadata => metadata !== null)\n      .filter(\n        metadata => 'requiredReviewers' in metadata && 'requiresCodeowners' in metadata && 'failureReasons' in metadata,\n      )\n      .map(metadata => {\n        const failureReasons = metadata.failureReasons.map(\n          reason => reason.toUpperCase() as PullRequestRuleFailureReason,\n        )\n        return {\n          requiredReviewers: metadata.requiredReviewers,\n          requiresCodeowners: metadata.requiresCodeowners,\n          failureReasons,\n        }\n      }) ?? []\n  )\n}\n\n/**\n * Gets the conflict condition from the merge requirements payload\n * @param mergeRequirements\n * @returns ConflictMergeConditionPayload | undefined\n */\nexport function getConflictsCondition(\n  mergeRequirements: PullRequestMergeRequirementsPayload | null,\n): ConflictMergeConditionPayload | undefined {\n  const condition =\n    mergeRequirements && mergeRequirements.conditions.find(c => c.type === 'PULL_REQUEST_MERGE_CONFLICT_STATE')\n  if (condition && 'conflicts' in condition && 'isConflictResolvableInWeb' in condition) {\n    return condition\n  }\n}\n\n/**\n * Gets the failing merge conditions excluding the pull request rules condition from the merge requirements payload\n * The rules condition has a rollup of additional rules that have messages, so we handle those separately\n * @param mergeRequirements\n * @returns MergeConditionPayload[]\n */\nexport function getFailingMergeConditionsWithoutRulesCondition(\n  mergeRequirements: PullRequestMergeRequirementsPayload | null,\n): MergeConditionPayload[] {\n  const failedConditions =\n    mergeRequirements?.conditions.filter(\n      condition => condition.type !== 'PULL_REQUEST_RULES' && condition.result === 'FAILED',\n    ) ?? []\n  return failedConditions\n}\n\n/**\n * Gets the failing pull request rules conditions from the merge requirements payload\n * @param mergeRequirements\n * @returns MergeConditionPayload[]\n */\nexport function getFailingRulesConditions(\n  mergeRequirements: PullRequestMergeRequirementsPayload | null,\n): MergeConditionPayload[] {\n  const failedRules =\n    mergeRequirements?.conditions.filter(\n      condition => condition.type === 'PULL_REQUEST_RULES' && condition.result === 'FAILED',\n    ) ?? []\n  return failedRules\n}\n\n/**\n * Helper to make the head repository the same shape as expected\n */\nexport function transformProperties(pullRequest: JSONAPIPullRequestPayload) {\n  return {\n    ...pullRequest,\n    headRepository: pullRequest.headRepository\n      ? {...pullRequest.headRepository, owner: {login: pullRequest.headRepository.ownerLogin}}\n      : null,\n  }\n}\n","import {throttle} from '@github/mini-throttle'\nimport {useAlive} from '@github-ui/use-alive'\nimport useIsMounted from '@github-ui/use-is-mounted'\nimport {useMemo} from 'react'\n\nexport type Channels = {\n  stateChannel: string | null | undefined\n  deployedChannel: string | null | undefined\n  reviewStateChannel: string | null | undefined\n  workflowsChannel: string | null | undefined\n  mergeQueueChannel: string | null | undefined\n  headRefChannel: string | null | undefined\n  baseRefChannel: string | null | undefined\n  commitHeadShaChannel: string | null | undefined\n  gitMergeStateChannel: string | null | undefined\n}\nexport function useMergeabilityLiveUpdates({\n  channels,\n  refetchQuery,\n}: {\n  channels: Channels\n  refetchQuery: () => void\n}): void {\n  const aliveMergabilityChannels: string[] = useMemo(() => {\n    return Object.values(channels).filter((channel): channel is string => channel !== null)\n  }, [channels])\n\n  const isMounted = useIsMounted()\n\n  // There are several PR websocket events that can trigger a refresh of the MergeBox Pull Request data.\n  // This creates a 2000ms throttle to prevent multiple refetches happening in the same < 500ms time window\n  // This is also in place to preventing inflicting a DDOS attack on ourselves by refetching too often.\n  const throttleRefetchingPullRequestData = useMemo(\n    () =>\n      throttle(() => {\n        if (isMounted()) {\n          refetchQuery()\n        }\n      }, 2000),\n    [refetchQuery, isMounted],\n  )\n\n  const handleMergabilityChannelNotification = useMemo(\n    () => (data: {wait?: number}) => {\n      // Some of our WebSocket event notifications include a wait value to assure that we consider replication lag times.\n      // We need to avoid calling our refetching method until that wait time is over by using a setTimeout that is equal to the data.wait value, if it exists.\n      window.setTimeout(() => throttleRefetchingPullRequestData(), data.wait || 0)\n    },\n    [throttleRefetchingPullRequestData],\n  )\n\n  for (const channel of aliveMergabilityChannels) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useAlive(channel, handleMergabilityChannelNotification)\n  }\n}\n","import {XIcon} from '@primer/octicons-react'\nimport {Heading, IconButton, Overlay} from '@primer/react'\nimport {useRef} from 'react'\n\nimport {MergeBoxWithRelaySuspense} from './MergeBox'\n\ninterface MergeabilitySidesheetProps {\n  pullRequestId: string\n  mergeabilitySidesheetIsOpen: boolean\n  toggleMergeabilitySidesheet: (isOpen: boolean) => void\n  mergeStatusButtonRef: React.RefObject<HTMLButtonElement>\n}\n\n/**\n * Renders the merge box in a sidesheet that is triggered from the header\n */\nexport function MergeabilitySidesheet({\n  mergeabilitySidesheetIsOpen,\n  toggleMergeabilitySidesheet,\n  mergeStatusButtonRef,\n  pullRequestId,\n}: MergeabilitySidesheetProps) {\n  const closeButtonRef = useRef<HTMLButtonElement>(null)\n\n  const exitOverlay = () => toggleMergeabilitySidesheet?.(false)\n\n  return (\n    <Overlay\n      anchorSide=\"inside-left\"\n      aria-label=\"Merge status\"\n      initialFocusRef={closeButtonRef}\n      position=\"fixed\"\n      returnFocusRef={mergeStatusButtonRef}\n      right={0}\n      role=\"complementary\"\n      top={0}\n      width=\"xlarge\"\n      className=\"py-2 rounded-right-0 height-full\"\n      sx={{\n        display: mergeabilitySidesheetIsOpen ? 'block' : 'none',\n        height: '100vh',\n        maxHeight: '100vh',\n      }}\n      onClickOutside={exitOverlay}\n      onEscape={exitOverlay}\n    >\n      <div className=\"d-flex flex-justify-between flex-items-center my-2 mx-3\">\n        <Heading as=\"h3\" className=\"f3 text-bold\">\n          Merge status\n        </Heading>\n        {/* eslint-disable-next-line primer-react/a11y-remove-disable-tooltip */}\n        <IconButton\n          unsafeDisableTooltip={true}\n          ref={closeButtonRef}\n          aria-label=\"Close merge status\"\n          icon={XIcon}\n          variant=\"invisible\"\n          onClick={exitOverlay}\n        />\n      </div>\n      <div className=\"mx-3\">\n        <MergeBoxWithRelaySuspense pullRequestId={pullRequestId} hideIcon={true} />\n      </div>\n    </Overlay>\n  )\n}\n\ntry{ MergeabilitySidesheet.displayName ||= 'MergeabilitySidesheet' } catch {}","import {testIdProps} from '@github-ui/test-id-props'\nimport {ClockIcon} from '@primer/octicons-react'\nimport {Box, Button} from '@primer/react'\nimport {memo, type RefObject, useCallback, useRef, useState} from 'react'\nimport {readInlineData, usePreloadedQuery, type PreloadedQuery} from 'react-relay'\nimport type {useLoadMergeBoxQuery_pullRequest$key} from '../hooks/__generated__/useLoadMergeBoxQuery_pullRequest.graphql'\n\nimport {LoadMergeBoxQuery, MergeBoxFragment, useLoadMergeBoxQuery} from '../hooks/use-load-merge-box-query'\nimport {MergeabilitySidesheet} from './MergeabilitySidesheet'\nimport type {MergeStatusButtonData} from '../types'\nimport type {useLoadMergeBoxQuery as useLoadMergeBoxQueryType} from '../hooks/__generated__/useLoadMergeBoxQuery.graphql'\nimport {presentationForStatus, mergeabilityStatusFromRelay, Status} from '../helpers/mergeability-status'\n\n/**\n * Loads the merge-related data and provides a fallback state for the merge status button\n */\nexport const MergeStatusButtonWithSuspense = memo(function MergeStatusButtonWithSuspense({\n  pullRequestId,\n}: {\n  pullRequestId: string\n}) {\n  const {query} = useLoadMergeBoxQuery({pullRequestId})\n  const mergeStatusButtonRef = useRef<HTMLButtonElement>(null)\n  const [mergeabilitySidesheetIsOpen, setMergeabilitySidesheetIsOpen] = useState(false)\n  const toggleMergeabilitySidesheet = useCallback(\n    (isOpen: boolean) => {\n      setMergeabilitySidesheetIsOpen(isOpen)\n    },\n    [setMergeabilitySidesheetIsOpen],\n  )\n\n  const sidesheet = (\n    <MergeabilitySidesheet\n      mergeStatusButtonRef={mergeStatusButtonRef}\n      mergeabilitySidesheetIsOpen={mergeabilitySidesheetIsOpen}\n      pullRequestId={pullRequestId}\n      toggleMergeabilitySidesheet={toggleMergeabilitySidesheet}\n    />\n  )\n\n  if (!query)\n    return (\n      <>\n        <Button ref={mergeStatusButtonRef} leadingVisual={ClockIcon} onClick={() => toggleMergeabilitySidesheet(true)}>\n          Status: Calculating mergeability…\n        </Button>\n        {sidesheet}\n      </>\n    )\n\n  return (\n    <>\n      <MergeStatusButtonWrapper\n        mergeStatusButtonRef={mergeStatusButtonRef}\n        toggleMergeabilitySidesheet={toggleMergeabilitySidesheet}\n        query={query}\n      />\n      {sidesheet}\n    </>\n  )\n})\n\ninterface MergeStatusButtonCommonProps {\n  mergeStatusButtonRef: RefObject<HTMLButtonElement> | null\n  toggleMergeabilitySidesheet: (isOpen: boolean) => void\n}\n\n/**\n * A button that displays the merge status of a pull request.\n * Opens the mergeability sidesheet.\n */\nfunction MergeStatusButtonWrapper({\n  query,\n  ...rest\n}: {query: PreloadedQuery<useLoadMergeBoxQueryType>} & MergeStatusButtonCommonProps) {\n  const data = usePreloadedQuery<useLoadMergeBoxQueryType>(LoadMergeBoxQuery, query)\n\n  if (!data.pullRequest) return null\n  // eslint-disable-next-line no-restricted-syntax\n  const pullRequest = readInlineData<useLoadMergeBoxQuery_pullRequest$key>(MergeBoxFragment, data.pullRequest)\n  // TODO: Remove this check after we switch to reading from TanStack and can guarantee these fields will not be undefined\n  if (!pullRequest.state || !pullRequest.mergeRequirements) return null\n\n  return (\n    <MergeStatusButton\n      isDraft={!!pullRequest.isDraft}\n      state={pullRequest.state}\n      isInMergeQueue={!!pullRequest.isInMergeQueue}\n      mergeRequirements={pullRequest.mergeRequirements}\n      viewerDidAuthor={!!pullRequest.viewerDidAuthor}\n      {...rest}\n    />\n  )\n}\n\nexport function MergeStatusButton({\n  isDraft,\n  state,\n  isInMergeQueue,\n  mergeRequirements,\n  viewerDidAuthor,\n  mergeStatusButtonRef,\n  toggleMergeabilitySidesheet,\n}: MergeStatusButtonData & MergeStatusButtonCommonProps) {\n  if (!mergeStatusButtonRef) return null\n\n  const status = mergeabilityStatusFromRelay({isDraft, state, isInMergeQueue, mergeRequirements, viewerDidAuthor})\n  // Don't render merge status button if failure is non-actionable (repo is not writeable, etc.)\n  if (status === Status.NonactionableFailure) return null\n\n  const presentation = presentationForStatus(status)\n  const isPrimary = status === Status.Mergeable && viewerDidAuthor\n\n  return (\n    <Button\n      ref={mergeStatusButtonRef}\n      leadingVisual={presentation.icon}\n      variant={isPrimary ? 'primary' : 'default'}\n      {...testIdProps('merge-status-button')}\n      sx={{\n        color: isPrimary ? 'fg.primary' : 'fg.default',\n        '[data-component=\"leadingVisual\"]': {\n          color: isPrimary ? 'fg.primary' : presentation.iconColor,\n        },\n      }}\n      onClick={() => {\n        toggleMergeabilitySidesheet?.(true)\n      }}\n    >\n      <Box as=\"span\" sx={{display: ['flex', 'flex', 'flex', 'none']}}>\n        View status\n      </Box>\n      <Box as=\"span\" sx={{gap: 1, display: ['none', 'none', 'none', 'flex']}}>\n        {status !== Status.Mergeable && (\n          <Box as=\"span\" sx={{color: 'fg.muted', fontWeight: 'normal'}}>\n            Status:{' '}\n          </Box>\n        )}\n        {presentation.title}\n      </Box>\n    </Button>\n  )\n}\n\ntry{ MergeStatusButtonWithSuspense.displayName ||= 'MergeStatusButtonWithSuspense' } catch {}\ntry{ MergeStatusButtonWrapper.displayName ||= 'MergeStatusButtonWrapper' } catch {}\ntry{ MergeStatusButton.displayName ||= 'MergeStatusButton' } catch {}","import {MergeMethod} from '../types'\n\nexport function validateMergeMethod(mergeMethod: string): mergeMethod is MergeMethod {\n  return Object.values<string>(MergeMethod).includes(mergeMethod)\n}\n","/**\n * @generated SignedSource<<541ce87f57e9bac4ad7f6eb2c2c31e62>>\n * @relayHash 831b62c6f7adf910fb7a952c06d34686\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\n// @relayRequestID 831b62c6f7adf910fb7a952c06d34686\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type PullRequestState = \"CLOSED\" | \"MERGED\" | \"OPEN\" | \"%future added value\";\nexport type deletePullRequestHeadRefMutation$variables = {\n  id: string;\n};\nexport type deletePullRequestHeadRefMutation$data = {\n  readonly deletePullRequestHeadRef: {\n    readonly pullRequest: {\n      readonly headRefName: string;\n      readonly headRepository: {\n        readonly name: string;\n        readonly owner: {\n          readonly login: string;\n        };\n      } | null | undefined;\n      readonly id: string;\n      readonly state: PullRequestState;\n      readonly viewerCanDeleteHeadRef: boolean;\n      readonly viewerCanReopen: boolean;\n      readonly viewerCanRestoreHeadRef: boolean;\n    } | null | undefined;\n  } | null | undefined;\n};\nexport type deletePullRequestHeadRefMutation$rawResponse = {\n  readonly deletePullRequestHeadRef: {\n    readonly pullRequest: {\n      readonly headRefName: string;\n      readonly headRepository: {\n        readonly id: string;\n        readonly name: string;\n        readonly owner: {\n          readonly __typename: string;\n          readonly id: string;\n          readonly login: string;\n        };\n      } | null | undefined;\n      readonly id: string;\n      readonly state: PullRequestState;\n      readonly viewerCanDeleteHeadRef: boolean;\n      readonly viewerCanReopen: boolean;\n      readonly viewerCanRestoreHeadRef: boolean;\n    } | null | undefined;\n  } | null | undefined;\n};\nexport type deletePullRequestHeadRefMutation = {\n  rawResponse: deletePullRequestHeadRefMutation$rawResponse;\n  response: deletePullRequestHeadRefMutation$data;\n  variables: deletePullRequestHeadRefMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\"\n  }\n],\nv1 = [\n  {\n    \"fields\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"pullRequestId\",\n        \"variableName\": \"id\"\n      }\n    ],\n    \"kind\": \"ObjectValue\",\n    \"name\": \"input\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"state\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"headRefName\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"login\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanDeleteHeadRef\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanRestoreHeadRef\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanReopen\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"deletePullRequestHeadRefMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"DeletePullRequestHeadRefPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"deletePullRequestHeadRef\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"PullRequest\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"pullRequest\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v4/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Repository\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"headRepository\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": null,\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"owner\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v5/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  (v6/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutation\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"deletePullRequestHeadRefMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"DeletePullRequestHeadRefPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"deletePullRequestHeadRef\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"PullRequest\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"pullRequest\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v4/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Repository\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"headRepository\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": null,\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"owner\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"__typename\",\n                        \"storageKey\": null\n                      },\n                      (v5/*: any*/),\n                      (v2/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  (v6/*: any*/),\n                  (v2/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": \"831b62c6f7adf910fb7a952c06d34686\",\n    \"metadata\": {},\n    \"name\": \"deletePullRequestHeadRefMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": null\n  }\n};\n})();\n\n(node as any).hash = \"2de3ea20505338de53eaaed2eb2a2109\";\n\nexport default node;\n","/**\n * @generated SignedSource<<ea2bc4f5629bb224694a39fcdaaded75>>\n * @relayHash 7ce70b8a70027411f1b9ed4eb2abaf04\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\n// @relayRequestID 7ce70b8a70027411f1b9ed4eb2abaf04\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type PullRequestMergeMethod = \"MERGE\" | \"REBASE\" | \"SQUASH\" | \"%future added value\";\nexport type DequeuePullRequestInput = {\n  clientMutationId?: string | null | undefined;\n  id: string;\n};\nexport type dequeuePullRequestMutation$variables = {\n  input: DequeuePullRequestInput;\n  mergeMethod?: PullRequestMergeMethod | null | undefined;\n};\nexport type dequeuePullRequestMutation$data = {\n  readonly dequeuePullRequest: {\n    readonly mergeQueueEntry: {\n      readonly pullRequest: {\n        readonly \" $fragmentSpreads\": FragmentRefs<\"HeaderMetadata_pullRequest\" | \"useLoadMergeBoxQuery_pullRequest\">;\n      } | null | undefined;\n    } | null | undefined;\n  } | null | undefined;\n};\nexport type dequeuePullRequestMutation = {\n  response: dequeuePullRequestMutation$data;\n  variables: dequeuePullRequestMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"input\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"mergeMethod\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"input\",\n    \"variableName\": \"input\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"AutoMergeRequest\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"autoMergeRequest\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"mergeMethod\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"baseRefName\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"PullRequestCommitConnection\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"commits\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"totalCount\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"headRefOid\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"headRefName\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"login\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"isDraft\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"isInMergeQueue\",\n  \"storageKey\": null\n},\nv12 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"first\",\n    \"value\": 100\n  }\n],\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"authorCanPushToRepository\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"avatarUrl\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n},\nv16 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"first\",\n    \"value\": 10\n  }\n],\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"state\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"position\",\n  \"storageKey\": null\n},\nv19 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"mergeMethod\",\n    \"variableName\": \"mergeMethod\"\n  }\n],\nv20 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"commitAuthor\",\n  \"storageKey\": null\n},\nv21 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"commitMessageBody\",\n  \"storageKey\": null\n},\nv22 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"commitMessageHeadline\",\n  \"storageKey\": null\n},\nv23 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"__typename\",\n  \"storageKey\": null\n},\nv24 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"message\",\n  \"storageKey\": null\n},\nv25 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"result\",\n  \"storageKey\": null\n},\nv26 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"ruleType\",\n  \"storageKey\": null\n},\nv27 = {\n  \"kind\": \"InlineFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"failureReasons\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"requiredReviewers\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"requiresCodeowners\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"PullRequestRuleRollup\",\n  \"abstractKey\": null\n},\nv28 = {\n  \"kind\": \"InlineFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"conflicts\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"isConflictResolvableInWeb\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"PullRequestMergeConflictStateCondition\",\n  \"abstractKey\": null\n},\nv29 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"mergeStateStatus\",\n  \"storageKey\": null\n},\nv30 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resourcePath\",\n  \"storageKey\": null\n},\nv31 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanAddAndRemoveFromMergeQueue\",\n  \"storageKey\": null\n},\nv32 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanDeleteHeadRef\",\n  \"storageKey\": null\n},\nv33 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanDisableAutoMerge\",\n  \"storageKey\": null\n},\nv34 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanEnableAutoMerge\",\n  \"storageKey\": null\n},\nv35 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanRestoreHeadRef\",\n  \"storageKey\": null\n},\nv36 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanUpdate\",\n  \"storageKey\": null\n},\nv37 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanUpdateBranch\",\n  \"storageKey\": null\n},\nv38 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerDidAuthor\",\n  \"storageKey\": null\n},\nv39 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"isAllowable\",\n  \"storageKey\": null\n},\nv40 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"AllowablePullRequestMergeAction\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"viewerMergeActions\",\n  \"plural\": true,\n  \"selections\": [\n    (v8/*: any*/),\n    (v39/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"AllowablePullRequestMergeMethod\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"mergeMethods\",\n      \"plural\": true,\n      \"selections\": [\n        (v8/*: any*/),\n        (v39/*: any*/),\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"isAllowableWithBypass\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv41 = {\n  \"alias\": \"stateChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"STATE\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"STATE\\\")\"\n},\nv42 = {\n  \"alias\": \"deployedChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"DEPLOYED\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"DEPLOYED\\\")\"\n},\nv43 = {\n  \"alias\": \"reviewStateChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"REVIEW_STATE\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"REVIEW_STATE\\\")\"\n},\nv44 = {\n  \"alias\": \"workflowsChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"WORKFLOWS\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"WORKFLOWS\\\")\"\n},\nv45 = {\n  \"alias\": \"mergeQueueChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"MERGE_QUEUE\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"MERGE_QUEUE\\\")\"\n},\nv46 = {\n  \"alias\": \"headRefChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"HEAD_REF\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"HEAD_REF\\\")\"\n},\nv47 = {\n  \"alias\": \"baseRefChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"BASE_REF\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"BASE_REF\\\")\"\n},\nv48 = {\n  \"alias\": \"commitHeadShaChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"COMMIT_HEAD_SHA\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"COMMIT_HEAD_SHA\\\")\"\n},\nv49 = {\n  \"alias\": \"gitMergeStateChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"GIT_MERGE_STATE\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"GIT_MERGE_STATE\\\")\"\n},\nv50 = [\n  (v23/*: any*/),\n  (v7/*: any*/),\n  (v9/*: any*/)\n],\nv51 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": null,\n  \"kind\": \"LinkedField\",\n  \"name\": \"owner\",\n  \"plural\": false,\n  \"selections\": (v50/*: any*/),\n  \"storageKey\": null\n},\nv52 = [\n  (v8/*: any*/),\n  (v9/*: any*/)\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"dequeuePullRequestMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"DequeuePullRequestPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"dequeuePullRequest\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"MergeQueueEntry\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"mergeQueueEntry\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"PullRequest\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"pullRequest\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"kind\": \"InlineDataFragmentSpread\",\n                    \"name\": \"useLoadMergeBoxQuery_pullRequest\",\n                    \"selections\": [\n                      (v2/*: any*/),\n                      (v3/*: any*/),\n                      (v4/*: any*/),\n                      (v5/*: any*/),\n                      (v6/*: any*/),\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": \"Repository\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"headRepository\",\n                        \"plural\": false,\n                        \"selections\": [\n                          {\n                            \"alias\": null,\n                            \"args\": null,\n                            \"concreteType\": null,\n                            \"kind\": \"LinkedField\",\n                            \"name\": \"owner\",\n                            \"plural\": false,\n                            \"selections\": [\n                              (v7/*: any*/)\n                            ],\n                            \"storageKey\": null\n                          },\n                          (v8/*: any*/)\n                        ],\n                        \"storageKey\": null\n                      },\n                      (v9/*: any*/),\n                      (v10/*: any*/),\n                      (v11/*: any*/),\n                      {\n                        \"alias\": null,\n                        \"args\": (v12/*: any*/),\n                        \"concreteType\": \"PullRequestReviewConnection\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"latestOpinionatedReviews\",\n                        \"plural\": false,\n                        \"selections\": [\n                          {\n                            \"alias\": null,\n                            \"args\": null,\n                            \"concreteType\": \"PullRequestReviewEdge\",\n                            \"kind\": \"LinkedField\",\n                            \"name\": \"edges\",\n                            \"plural\": true,\n                            \"selections\": [\n                              {\n                                \"alias\": null,\n                                \"args\": null,\n                                \"concreteType\": \"PullRequestReview\",\n                                \"kind\": \"LinkedField\",\n                                \"name\": \"node\",\n                                \"plural\": false,\n                                \"selections\": [\n                                  (v13/*: any*/),\n                                  {\n                                    \"alias\": null,\n                                    \"args\": null,\n                                    \"concreteType\": null,\n                                    \"kind\": \"LinkedField\",\n                                    \"name\": \"author\",\n                                    \"plural\": false,\n                                    \"selections\": [\n                                      (v7/*: any*/),\n                                      (v14/*: any*/),\n                                      (v8/*: any*/),\n                                      (v15/*: any*/)\n                                    ],\n                                    \"storageKey\": null\n                                  },\n                                  {\n                                    \"alias\": null,\n                                    \"args\": (v16/*: any*/),\n                                    \"concreteType\": \"TeamConnection\",\n                                    \"kind\": \"LinkedField\",\n                                    \"name\": \"onBehalfOf\",\n                                    \"plural\": false,\n                                    \"selections\": [\n                                      {\n                                        \"alias\": null,\n                                        \"args\": null,\n                                        \"concreteType\": \"TeamEdge\",\n                                        \"kind\": \"LinkedField\",\n                                        \"name\": \"edges\",\n                                        \"plural\": true,\n                                        \"selections\": [\n                                          {\n                                            \"alias\": null,\n                                            \"args\": null,\n                                            \"concreteType\": \"Team\",\n                                            \"kind\": \"LinkedField\",\n                                            \"name\": \"node\",\n                                            \"plural\": false,\n                                            \"selections\": [\n                                              (v8/*: any*/)\n                                            ],\n                                            \"storageKey\": null\n                                          }\n                                        ],\n                                        \"storageKey\": null\n                                      }\n                                    ],\n                                    \"storageKey\": \"onBehalfOf(first:10)\"\n                                  },\n                                  (v17/*: any*/)\n                                ],\n                                \"storageKey\": null\n                              }\n                            ],\n                            \"storageKey\": null\n                          }\n                        ],\n                        \"storageKey\": \"latestOpinionatedReviews(first:100)\"\n                      },\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": \"MergeQueueEntry\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"mergeQueueEntry\",\n                        \"plural\": false,\n                        \"selections\": [\n                          (v18/*: any*/),\n                          (v17/*: any*/)\n                        ],\n                        \"storageKey\": null\n                      },\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": \"MergeQueue\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"mergeQueue\",\n                        \"plural\": false,\n                        \"selections\": [\n                          (v15/*: any*/)\n                        ],\n                        \"storageKey\": null\n                      },\n                      {\n                        \"alias\": null,\n                        \"args\": (v19/*: any*/),\n                        \"concreteType\": \"PullRequestMergeRequirements\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"mergeRequirements\",\n                        \"plural\": false,\n                        \"selections\": [\n                          (v20/*: any*/),\n                          (v21/*: any*/),\n                          (v22/*: any*/),\n                          (v17/*: any*/),\n                          {\n                            \"alias\": null,\n                            \"args\": null,\n                            \"concreteType\": null,\n                            \"kind\": \"LinkedField\",\n                            \"name\": \"conditions\",\n                            \"plural\": true,\n                            \"selections\": [\n                              (v23/*: any*/),\n                              (v24/*: any*/),\n                              (v25/*: any*/),\n                              {\n                                \"kind\": \"InlineFragment\",\n                                \"selections\": [\n                                  {\n                                    \"alias\": null,\n                                    \"args\": null,\n                                    \"concreteType\": null,\n                                    \"kind\": \"LinkedField\",\n                                    \"name\": \"ruleRollups\",\n                                    \"plural\": true,\n                                    \"selections\": [\n                                      (v24/*: any*/),\n                                      (v26/*: any*/),\n                                      (v25/*: any*/),\n                                      (v27/*: any*/)\n                                    ],\n                                    \"storageKey\": null\n                                  }\n                                ],\n                                \"type\": \"PullRequestRulesCondition\",\n                                \"abstractKey\": null\n                              },\n                              (v28/*: any*/)\n                            ],\n                            \"storageKey\": null\n                          }\n                        ],\n                        \"storageKey\": null\n                      },\n                      (v29/*: any*/),\n                      (v30/*: any*/),\n                      (v17/*: any*/),\n                      (v31/*: any*/),\n                      (v32/*: any*/),\n                      (v33/*: any*/),\n                      (v34/*: any*/),\n                      (v35/*: any*/),\n                      (v36/*: any*/),\n                      (v37/*: any*/),\n                      (v38/*: any*/),\n                      (v40/*: any*/),\n                      (v41/*: any*/),\n                      (v42/*: any*/),\n                      (v43/*: any*/),\n                      (v44/*: any*/),\n                      (v45/*: any*/),\n                      (v46/*: any*/),\n                      (v47/*: any*/),\n                      (v48/*: any*/),\n                      (v49/*: any*/)\n                    ],\n                    \"args\": null,\n                    \"argumentDefinitions\": [\n                      {\n                        \"kind\": \"RootArgument\",\n                        \"name\": \"mergeMethod\"\n                      }\n                    ]\n                  },\n                  {\n                    \"args\": null,\n                    \"kind\": \"FragmentSpread\",\n                    \"name\": \"HeaderMetadata_pullRequest\"\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutation\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"dequeuePullRequestMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"DequeuePullRequestPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"dequeuePullRequest\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"MergeQueueEntry\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"mergeQueueEntry\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"PullRequest\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"pullRequest\",\n                \"plural\": false,\n                \"selections\": [\n                  (v2/*: any*/),\n                  (v3/*: any*/),\n                  (v4/*: any*/),\n                  (v5/*: any*/),\n                  (v6/*: any*/),\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Repository\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"headRepository\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v51/*: any*/),\n                      (v8/*: any*/),\n                      (v9/*: any*/),\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"isFork\",\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": null\n                  },\n                  (v9/*: any*/),\n                  (v10/*: any*/),\n                  (v11/*: any*/),\n                  {\n                    \"alias\": null,\n                    \"args\": (v12/*: any*/),\n                    \"concreteType\": \"PullRequestReviewConnection\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"latestOpinionatedReviews\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": \"PullRequestReviewEdge\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"edges\",\n                        \"plural\": true,\n                        \"selections\": [\n                          {\n                            \"alias\": null,\n                            \"args\": null,\n                            \"concreteType\": \"PullRequestReview\",\n                            \"kind\": \"LinkedField\",\n                            \"name\": \"node\",\n                            \"plural\": false,\n                            \"selections\": [\n                              (v13/*: any*/),\n                              {\n                                \"alias\": null,\n                                \"args\": null,\n                                \"concreteType\": null,\n                                \"kind\": \"LinkedField\",\n                                \"name\": \"author\",\n                                \"plural\": false,\n                                \"selections\": [\n                                  (v23/*: any*/),\n                                  (v7/*: any*/),\n                                  (v14/*: any*/),\n                                  (v8/*: any*/),\n                                  (v15/*: any*/),\n                                  (v9/*: any*/)\n                                ],\n                                \"storageKey\": null\n                              },\n                              {\n                                \"alias\": null,\n                                \"args\": (v16/*: any*/),\n                                \"concreteType\": \"TeamConnection\",\n                                \"kind\": \"LinkedField\",\n                                \"name\": \"onBehalfOf\",\n                                \"plural\": false,\n                                \"selections\": [\n                                  {\n                                    \"alias\": null,\n                                    \"args\": null,\n                                    \"concreteType\": \"TeamEdge\",\n                                    \"kind\": \"LinkedField\",\n                                    \"name\": \"edges\",\n                                    \"plural\": true,\n                                    \"selections\": [\n                                      {\n                                        \"alias\": null,\n                                        \"args\": null,\n                                        \"concreteType\": \"Team\",\n                                        \"kind\": \"LinkedField\",\n                                        \"name\": \"node\",\n                                        \"plural\": false,\n                                        \"selections\": (v52/*: any*/),\n                                        \"storageKey\": null\n                                      }\n                                    ],\n                                    \"storageKey\": null\n                                  }\n                                ],\n                                \"storageKey\": \"onBehalfOf(first:10)\"\n                              },\n                              (v17/*: any*/),\n                              (v9/*: any*/)\n                            ],\n                            \"storageKey\": null\n                          }\n                        ],\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": \"latestOpinionatedReviews(first:100)\"\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"MergeQueueEntry\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"mergeQueueEntry\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v18/*: any*/),\n                      (v17/*: any*/),\n                      (v9/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"MergeQueue\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"mergeQueue\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v15/*: any*/),\n                      (v9/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": (v19/*: any*/),\n                    \"concreteType\": \"PullRequestMergeRequirements\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"mergeRequirements\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v20/*: any*/),\n                      (v21/*: any*/),\n                      (v22/*: any*/),\n                      (v17/*: any*/),\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": null,\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"conditions\",\n                        \"plural\": true,\n                        \"selections\": [\n                          (v23/*: any*/),\n                          (v24/*: any*/),\n                          (v25/*: any*/),\n                          {\n                            \"kind\": \"InlineFragment\",\n                            \"selections\": [\n                              {\n                                \"alias\": null,\n                                \"args\": null,\n                                \"concreteType\": null,\n                                \"kind\": \"LinkedField\",\n                                \"name\": \"ruleRollups\",\n                                \"plural\": true,\n                                \"selections\": [\n                                  (v23/*: any*/),\n                                  (v24/*: any*/),\n                                  (v26/*: any*/),\n                                  (v25/*: any*/),\n                                  (v27/*: any*/)\n                                ],\n                                \"storageKey\": null\n                              }\n                            ],\n                            \"type\": \"PullRequestRulesCondition\",\n                            \"abstractKey\": null\n                          },\n                          (v28/*: any*/)\n                        ],\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": null\n                  },\n                  (v29/*: any*/),\n                  (v30/*: any*/),\n                  (v17/*: any*/),\n                  (v31/*: any*/),\n                  (v32/*: any*/),\n                  (v33/*: any*/),\n                  (v34/*: any*/),\n                  (v35/*: any*/),\n                  (v36/*: any*/),\n                  (v37/*: any*/),\n                  (v38/*: any*/),\n                  (v40/*: any*/),\n                  (v41/*: any*/),\n                  (v42/*: any*/),\n                  (v43/*: any*/),\n                  (v44/*: any*/),\n                  (v45/*: any*/),\n                  (v46/*: any*/),\n                  (v47/*: any*/),\n                  (v48/*: any*/),\n                  (v49/*: any*/),\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"mergedAt\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Ref\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"baseRef\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": \"Repository\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"repository\",\n                        \"plural\": false,\n                        \"selections\": [\n                          {\n                            \"alias\": null,\n                            \"args\": null,\n                            \"kind\": \"ScalarField\",\n                            \"name\": \"defaultBranch\",\n                            \"storageKey\": null\n                          },\n                          (v8/*: any*/),\n                          (v51/*: any*/),\n                          (v9/*: any*/)\n                        ],\n                        \"storageKey\": null\n                      },\n                      (v9/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Repository\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"baseRepository\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v8/*: any*/),\n                      (v51/*: any*/),\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": \"Ref\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"defaultBranchRef\",\n                        \"plural\": false,\n                        \"selections\": (v52/*: any*/),\n                        \"storageKey\": null\n                      },\n                      (v9/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": null,\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"author\",\n                    \"plural\": false,\n                    \"selections\": (v50/*: any*/),\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"viewerCanChangeBaseBranch\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"titleHTML\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"title\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"number\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Repository\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"repository\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"nameWithOwner\",\n                        \"storageKey\": null\n                      },\n                      (v9/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              },\n              (v9/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": \"7ce70b8a70027411f1b9ed4eb2abaf04\",\n    \"metadata\": {},\n    \"name\": \"dequeuePullRequestMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": null\n  }\n};\n})();\n\n(node as any).hash = \"5c783897623db45881c2f4e636c59528\";\n\nexport default node;\n","/**\n * @generated SignedSource<<5b06b1260bbcdbdcd1f4892a2f3b77d4>>\n * @relayHash 2438569a9ee2f29f44d2b4568d05d5ba\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\n// @relayRequestID 2438569a9ee2f29f44d2b4568d05d5ba\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type MarkPullRequestReadyForReviewInput = {\n  clientMutationId?: string | null | undefined;\n  pullRequestId: string;\n};\nexport type markPullRequestReadyForReviewMutation$variables = {\n  input: MarkPullRequestReadyForReviewInput;\n};\nexport type markPullRequestReadyForReviewMutation$data = {\n  readonly markPullRequestReadyForReview: {\n    readonly pullRequest: {\n      readonly id: string;\n      readonly isDraft: boolean;\n    } | null | undefined;\n  } | null | undefined;\n};\nexport type markPullRequestReadyForReviewMutation$rawResponse = {\n  readonly markPullRequestReadyForReview: {\n    readonly pullRequest: {\n      readonly id: string;\n      readonly isDraft: boolean;\n    } | null | undefined;\n  } | null | undefined;\n};\nexport type markPullRequestReadyForReviewMutation = {\n  rawResponse: markPullRequestReadyForReviewMutation$rawResponse;\n  response: markPullRequestReadyForReviewMutation$data;\n  variables: markPullRequestReadyForReviewMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"input\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"input\",\n        \"variableName\": \"input\"\n      }\n    ],\n    \"concreteType\": \"MarkPullRequestReadyForReviewPayload\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"markPullRequestReadyForReview\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"PullRequest\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"pullRequest\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"isDraft\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"markPullRequestReadyForReviewMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutation\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"markPullRequestReadyForReviewMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"id\": \"2438569a9ee2f29f44d2b4568d05d5ba\",\n    \"metadata\": {},\n    \"name\": \"markPullRequestReadyForReviewMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": null\n  }\n};\n})();\n\n(node as any).hash = \"303dd574e7d2f59c3d4c6c1ecec8cd8b\";\n\nexport default node;\n","/**\n * @generated SignedSource<<e04215628bbbbe69e06e39d3e8384ae0>>\n * @relayHash 8b4ec6bca00e5aaa27d4b1e8d308c636\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\n// @relayRequestID 8b4ec6bca00e5aaa27d4b1e8d308c636\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type PullRequestMergeMethod = \"MERGE\" | \"REBASE\" | \"SQUASH\" | \"%future added value\";\nexport type PullRequestState = \"CLOSED\" | \"MERGED\" | \"OPEN\" | \"%future added value\";\nexport type MergePullRequestInput = {\n  authorEmail?: string | null | undefined;\n  clientMutationId?: string | null | undefined;\n  commitBody?: string | null | undefined;\n  commitHeadline?: string | null | undefined;\n  expectedHeadOid?: any | null | undefined;\n  mergeMethod?: PullRequestMergeMethod | null | undefined;\n  pullRequestId: string;\n};\nexport type mergePullRequestMutation$variables = {\n  input: MergePullRequestInput;\n};\nexport type mergePullRequestMutation$data = {\n  readonly mergePullRequest: {\n    readonly pullRequest: {\n      readonly headRefName: string;\n      readonly headRepository: {\n        readonly name: string;\n        readonly owner: {\n          readonly login: string;\n        };\n      } | null | undefined;\n      readonly id: string;\n      readonly state: PullRequestState;\n      readonly viewerCanDeleteHeadRef: boolean;\n      readonly viewerCanRestoreHeadRef: boolean;\n    } | null | undefined;\n  } | null | undefined;\n};\nexport type mergePullRequestMutation = {\n  response: mergePullRequestMutation$data;\n  variables: mergePullRequestMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"input\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"input\",\n    \"variableName\": \"input\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"state\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"headRefName\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"login\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanDeleteHeadRef\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanRestoreHeadRef\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"mergePullRequestMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"MergePullRequestPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"mergePullRequest\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"PullRequest\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"pullRequest\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v4/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Repository\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"headRepository\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": null,\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"owner\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v5/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  (v6/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v7/*: any*/),\n              (v8/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutation\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"mergePullRequestMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"MergePullRequestPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"mergePullRequest\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"PullRequest\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"pullRequest\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v4/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Repository\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"headRepository\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": null,\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"owner\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"__typename\",\n                        \"storageKey\": null\n                      },\n                      (v5/*: any*/),\n                      (v2/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  (v6/*: any*/),\n                  (v2/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v7/*: any*/),\n              (v8/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": \"8b4ec6bca00e5aaa27d4b1e8d308c636\",\n    \"metadata\": {},\n    \"name\": \"mergePullRequestMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": null\n  }\n};\n})();\n\n(node as any).hash = \"38e7781e8183972dd0cf7ec7b8c71f7d\";\n\nexport default node;\n","/**\n * @generated SignedSource<<aaf527838192e74c2e77bbe161021abb>>\n * @relayHash b41422b226bba3d19bb8acbc53414315\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\n// @relayRequestID b41422b226bba3d19bb8acbc53414315\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type PullRequestState = \"CLOSED\" | \"MERGED\" | \"OPEN\" | \"%future added value\";\nexport type restorePullRequestHeadRefMutation$variables = {\n  id: string;\n};\nexport type restorePullRequestHeadRefMutation$data = {\n  readonly restorePullRequestHeadRef: {\n    readonly pullRequest: {\n      readonly headRefName: string;\n      readonly headRepository: {\n        readonly name: string;\n        readonly owner: {\n          readonly login: string;\n        };\n      } | null | undefined;\n      readonly id: string;\n      readonly state: PullRequestState;\n      readonly viewerCanDeleteHeadRef: boolean;\n      readonly viewerCanReopen: boolean;\n      readonly viewerCanRestoreHeadRef: boolean;\n    } | null | undefined;\n  } | null | undefined;\n};\nexport type restorePullRequestHeadRefMutation$rawResponse = {\n  readonly restorePullRequestHeadRef: {\n    readonly pullRequest: {\n      readonly headRefName: string;\n      readonly headRepository: {\n        readonly id: string;\n        readonly name: string;\n        readonly owner: {\n          readonly __typename: string;\n          readonly id: string;\n          readonly login: string;\n        };\n      } | null | undefined;\n      readonly id: string;\n      readonly state: PullRequestState;\n      readonly viewerCanDeleteHeadRef: boolean;\n      readonly viewerCanReopen: boolean;\n      readonly viewerCanRestoreHeadRef: boolean;\n    } | null | undefined;\n  } | null | undefined;\n};\nexport type restorePullRequestHeadRefMutation = {\n  rawResponse: restorePullRequestHeadRefMutation$rawResponse;\n  response: restorePullRequestHeadRefMutation$data;\n  variables: restorePullRequestHeadRefMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\"\n  }\n],\nv1 = [\n  {\n    \"fields\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"pullRequestId\",\n        \"variableName\": \"id\"\n      }\n    ],\n    \"kind\": \"ObjectValue\",\n    \"name\": \"input\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"state\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"headRefName\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"login\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanDeleteHeadRef\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanRestoreHeadRef\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanReopen\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"restorePullRequestHeadRefMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"RestorePullRequestHeadRefPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"restorePullRequestHeadRef\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"PullRequest\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"pullRequest\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v4/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Repository\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"headRepository\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": null,\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"owner\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v5/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  (v6/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutation\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"restorePullRequestHeadRefMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"RestorePullRequestHeadRefPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"restorePullRequestHeadRef\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"PullRequest\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"pullRequest\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v4/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Repository\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"headRepository\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": null,\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"owner\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"__typename\",\n                        \"storageKey\": null\n                      },\n                      (v5/*: any*/),\n                      (v2/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  (v6/*: any*/),\n                  (v2/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": \"b41422b226bba3d19bb8acbc53414315\",\n    \"metadata\": {},\n    \"name\": \"restorePullRequestHeadRefMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": null\n  }\n};\n})();\n\n(node as any).hash = \"c067d7b422f78d12ca0b2ee7222e6566\";\n\nexport default node;\n","/**\n * @generated SignedSource<<f50e183171651f9c63756c60a7f74963>>\n * @relayHash b104e6fdeae0d0d55a66898768241b2b\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\n// @relayRequestID b104e6fdeae0d0d55a66898768241b2b\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type PullRequestBranchUpdateMethod = \"MERGE\" | \"REBASE\" | \"%future added value\";\nexport type PullRequestMergeMethod = \"MERGE\" | \"REBASE\" | \"SQUASH\" | \"%future added value\";\nexport type UpdatePullRequestBranchInput = {\n  clientMutationId?: string | null | undefined;\n  expectedHeadOid?: any | null | undefined;\n  pullRequestId: string;\n  updateMethod?: PullRequestBranchUpdateMethod | null | undefined;\n};\nexport type updatePullRequestBranchMutation$variables = {\n  input: UpdatePullRequestBranchInput;\n  mergeMethod?: PullRequestMergeMethod | null | undefined;\n};\nexport type updatePullRequestBranchMutation$data = {\n  readonly updatePullRequestBranch: {\n    readonly pullRequest: {\n      readonly \" $fragmentSpreads\": FragmentRefs<\"useLoadMergeBoxQuery_pullRequest\">;\n    } | null | undefined;\n  } | null | undefined;\n};\nexport type updatePullRequestBranchMutation = {\n  response: updatePullRequestBranchMutation$data;\n  variables: updatePullRequestBranchMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"input\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"mergeMethod\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"input\",\n    \"variableName\": \"input\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"AutoMergeRequest\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"autoMergeRequest\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"mergeMethod\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"baseRefName\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"PullRequestCommitConnection\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"commits\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"totalCount\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"headRefOid\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"headRefName\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"login\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"isDraft\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"isInMergeQueue\",\n  \"storageKey\": null\n},\nv12 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"first\",\n    \"value\": 100\n  }\n],\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"authorCanPushToRepository\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"avatarUrl\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n},\nv16 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"first\",\n    \"value\": 10\n  }\n],\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"state\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"position\",\n  \"storageKey\": null\n},\nv19 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"mergeMethod\",\n    \"variableName\": \"mergeMethod\"\n  }\n],\nv20 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"commitAuthor\",\n  \"storageKey\": null\n},\nv21 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"commitMessageBody\",\n  \"storageKey\": null\n},\nv22 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"commitMessageHeadline\",\n  \"storageKey\": null\n},\nv23 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"__typename\",\n  \"storageKey\": null\n},\nv24 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"message\",\n  \"storageKey\": null\n},\nv25 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"result\",\n  \"storageKey\": null\n},\nv26 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"ruleType\",\n  \"storageKey\": null\n},\nv27 = {\n  \"kind\": \"InlineFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"failureReasons\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"requiredReviewers\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"requiresCodeowners\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"PullRequestRuleRollup\",\n  \"abstractKey\": null\n},\nv28 = {\n  \"kind\": \"InlineFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"conflicts\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"isConflictResolvableInWeb\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"PullRequestMergeConflictStateCondition\",\n  \"abstractKey\": null\n},\nv29 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"mergeStateStatus\",\n  \"storageKey\": null\n},\nv30 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resourcePath\",\n  \"storageKey\": null\n},\nv31 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanAddAndRemoveFromMergeQueue\",\n  \"storageKey\": null\n},\nv32 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanDeleteHeadRef\",\n  \"storageKey\": null\n},\nv33 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanDisableAutoMerge\",\n  \"storageKey\": null\n},\nv34 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanEnableAutoMerge\",\n  \"storageKey\": null\n},\nv35 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanRestoreHeadRef\",\n  \"storageKey\": null\n},\nv36 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanUpdate\",\n  \"storageKey\": null\n},\nv37 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerCanUpdateBranch\",\n  \"storageKey\": null\n},\nv38 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"viewerDidAuthor\",\n  \"storageKey\": null\n},\nv39 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"isAllowable\",\n  \"storageKey\": null\n},\nv40 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"AllowablePullRequestMergeAction\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"viewerMergeActions\",\n  \"plural\": true,\n  \"selections\": [\n    (v8/*: any*/),\n    (v39/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"AllowablePullRequestMergeMethod\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"mergeMethods\",\n      \"plural\": true,\n      \"selections\": [\n        (v8/*: any*/),\n        (v39/*: any*/),\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"isAllowableWithBypass\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv41 = {\n  \"alias\": \"stateChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"STATE\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"STATE\\\")\"\n},\nv42 = {\n  \"alias\": \"deployedChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"DEPLOYED\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"DEPLOYED\\\")\"\n},\nv43 = {\n  \"alias\": \"reviewStateChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"REVIEW_STATE\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"REVIEW_STATE\\\")\"\n},\nv44 = {\n  \"alias\": \"workflowsChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"WORKFLOWS\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"WORKFLOWS\\\")\"\n},\nv45 = {\n  \"alias\": \"mergeQueueChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"MERGE_QUEUE\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"MERGE_QUEUE\\\")\"\n},\nv46 = {\n  \"alias\": \"headRefChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"HEAD_REF\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"HEAD_REF\\\")\"\n},\nv47 = {\n  \"alias\": \"baseRefChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"BASE_REF\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"BASE_REF\\\")\"\n},\nv48 = {\n  \"alias\": \"commitHeadShaChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"COMMIT_HEAD_SHA\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"COMMIT_HEAD_SHA\\\")\"\n},\nv49 = {\n  \"alias\": \"gitMergeStateChannel\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"name\",\n      \"value\": \"GIT_MERGE_STATE\"\n    }\n  ],\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatesChannel\",\n  \"storageKey\": \"updatesChannel(name:\\\"GIT_MERGE_STATE\\\")\"\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"updatePullRequestBranchMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"UpdatePullRequestBranchPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"updatePullRequestBranch\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"PullRequest\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"pullRequest\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"InlineDataFragmentSpread\",\n                \"name\": \"useLoadMergeBoxQuery_pullRequest\",\n                \"selections\": [\n                  (v2/*: any*/),\n                  (v3/*: any*/),\n                  (v4/*: any*/),\n                  (v5/*: any*/),\n                  (v6/*: any*/),\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Repository\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"headRepository\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": null,\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"owner\",\n                        \"plural\": false,\n                        \"selections\": [\n                          (v7/*: any*/)\n                        ],\n                        \"storageKey\": null\n                      },\n                      (v8/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  (v9/*: any*/),\n                  (v10/*: any*/),\n                  (v11/*: any*/),\n                  {\n                    \"alias\": null,\n                    \"args\": (v12/*: any*/),\n                    \"concreteType\": \"PullRequestReviewConnection\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"latestOpinionatedReviews\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": \"PullRequestReviewEdge\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"edges\",\n                        \"plural\": true,\n                        \"selections\": [\n                          {\n                            \"alias\": null,\n                            \"args\": null,\n                            \"concreteType\": \"PullRequestReview\",\n                            \"kind\": \"LinkedField\",\n                            \"name\": \"node\",\n                            \"plural\": false,\n                            \"selections\": [\n                              (v13/*: any*/),\n                              {\n                                \"alias\": null,\n                                \"args\": null,\n                                \"concreteType\": null,\n                                \"kind\": \"LinkedField\",\n                                \"name\": \"author\",\n                                \"plural\": false,\n                                \"selections\": [\n                                  (v7/*: any*/),\n                                  (v14/*: any*/),\n                                  (v8/*: any*/),\n                                  (v15/*: any*/)\n                                ],\n                                \"storageKey\": null\n                              },\n                              {\n                                \"alias\": null,\n                                \"args\": (v16/*: any*/),\n                                \"concreteType\": \"TeamConnection\",\n                                \"kind\": \"LinkedField\",\n                                \"name\": \"onBehalfOf\",\n                                \"plural\": false,\n                                \"selections\": [\n                                  {\n                                    \"alias\": null,\n                                    \"args\": null,\n                                    \"concreteType\": \"TeamEdge\",\n                                    \"kind\": \"LinkedField\",\n                                    \"name\": \"edges\",\n                                    \"plural\": true,\n                                    \"selections\": [\n                                      {\n                                        \"alias\": null,\n                                        \"args\": null,\n                                        \"concreteType\": \"Team\",\n                                        \"kind\": \"LinkedField\",\n                                        \"name\": \"node\",\n                                        \"plural\": false,\n                                        \"selections\": [\n                                          (v8/*: any*/)\n                                        ],\n                                        \"storageKey\": null\n                                      }\n                                    ],\n                                    \"storageKey\": null\n                                  }\n                                ],\n                                \"storageKey\": \"onBehalfOf(first:10)\"\n                              },\n                              (v17/*: any*/)\n                            ],\n                            \"storageKey\": null\n                          }\n                        ],\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": \"latestOpinionatedReviews(first:100)\"\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"MergeQueueEntry\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"mergeQueueEntry\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v18/*: any*/),\n                      (v17/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"MergeQueue\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"mergeQueue\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v15/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": (v19/*: any*/),\n                    \"concreteType\": \"PullRequestMergeRequirements\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"mergeRequirements\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v20/*: any*/),\n                      (v21/*: any*/),\n                      (v22/*: any*/),\n                      (v17/*: any*/),\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": null,\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"conditions\",\n                        \"plural\": true,\n                        \"selections\": [\n                          (v23/*: any*/),\n                          (v24/*: any*/),\n                          (v25/*: any*/),\n                          {\n                            \"kind\": \"InlineFragment\",\n                            \"selections\": [\n                              {\n                                \"alias\": null,\n                                \"args\": null,\n                                \"concreteType\": null,\n                                \"kind\": \"LinkedField\",\n                                \"name\": \"ruleRollups\",\n                                \"plural\": true,\n                                \"selections\": [\n                                  (v24/*: any*/),\n                                  (v26/*: any*/),\n                                  (v25/*: any*/),\n                                  (v27/*: any*/)\n                                ],\n                                \"storageKey\": null\n                              }\n                            ],\n                            \"type\": \"PullRequestRulesCondition\",\n                            \"abstractKey\": null\n                          },\n                          (v28/*: any*/)\n                        ],\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": null\n                  },\n                  (v29/*: any*/),\n                  (v30/*: any*/),\n                  (v17/*: any*/),\n                  (v31/*: any*/),\n                  (v32/*: any*/),\n                  (v33/*: any*/),\n                  (v34/*: any*/),\n                  (v35/*: any*/),\n                  (v36/*: any*/),\n                  (v37/*: any*/),\n                  (v38/*: any*/),\n                  (v40/*: any*/),\n                  (v41/*: any*/),\n                  (v42/*: any*/),\n                  (v43/*: any*/),\n                  (v44/*: any*/),\n                  (v45/*: any*/),\n                  (v46/*: any*/),\n                  (v47/*: any*/),\n                  (v48/*: any*/),\n                  (v49/*: any*/)\n                ],\n                \"args\": null,\n                \"argumentDefinitions\": [\n                  {\n                    \"kind\": \"RootArgument\",\n                    \"name\": \"mergeMethod\"\n                  }\n                ]\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutation\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"updatePullRequestBranchMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"UpdatePullRequestBranchPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"updatePullRequestBranch\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"PullRequest\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"pullRequest\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v4/*: any*/),\n              (v5/*: any*/),\n              (v6/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Repository\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"headRepository\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": null,\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"owner\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v23/*: any*/),\n                      (v7/*: any*/),\n                      (v9/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  (v8/*: any*/),\n                  (v9/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": (v12/*: any*/),\n                \"concreteType\": \"PullRequestReviewConnection\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"latestOpinionatedReviews\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"PullRequestReviewEdge\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"edges\",\n                    \"plural\": true,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": \"PullRequestReview\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"node\",\n                        \"plural\": false,\n                        \"selections\": [\n                          (v13/*: any*/),\n                          {\n                            \"alias\": null,\n                            \"args\": null,\n                            \"concreteType\": null,\n                            \"kind\": \"LinkedField\",\n                            \"name\": \"author\",\n                            \"plural\": false,\n                            \"selections\": [\n                              (v23/*: any*/),\n                              (v7/*: any*/),\n                              (v14/*: any*/),\n                              (v8/*: any*/),\n                              (v15/*: any*/),\n                              (v9/*: any*/)\n                            ],\n                            \"storageKey\": null\n                          },\n                          {\n                            \"alias\": null,\n                            \"args\": (v16/*: any*/),\n                            \"concreteType\": \"TeamConnection\",\n                            \"kind\": \"LinkedField\",\n                            \"name\": \"onBehalfOf\",\n                            \"plural\": false,\n                            \"selections\": [\n                              {\n                                \"alias\": null,\n                                \"args\": null,\n                                \"concreteType\": \"TeamEdge\",\n                                \"kind\": \"LinkedField\",\n                                \"name\": \"edges\",\n                                \"plural\": true,\n                                \"selections\": [\n                                  {\n                                    \"alias\": null,\n                                    \"args\": null,\n                                    \"concreteType\": \"Team\",\n                                    \"kind\": \"LinkedField\",\n                                    \"name\": \"node\",\n                                    \"plural\": false,\n                                    \"selections\": [\n                                      (v8/*: any*/),\n                                      (v9/*: any*/)\n                                    ],\n                                    \"storageKey\": null\n                                  }\n                                ],\n                                \"storageKey\": null\n                              }\n                            ],\n                            \"storageKey\": \"onBehalfOf(first:10)\"\n                          },\n                          (v17/*: any*/),\n                          (v9/*: any*/)\n                        ],\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": \"latestOpinionatedReviews(first:100)\"\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"MergeQueueEntry\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"mergeQueueEntry\",\n                \"plural\": false,\n                \"selections\": [\n                  (v18/*: any*/),\n                  (v17/*: any*/),\n                  (v9/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"MergeQueue\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"mergeQueue\",\n                \"plural\": false,\n                \"selections\": [\n                  (v15/*: any*/),\n                  (v9/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": (v19/*: any*/),\n                \"concreteType\": \"PullRequestMergeRequirements\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"mergeRequirements\",\n                \"plural\": false,\n                \"selections\": [\n                  (v20/*: any*/),\n                  (v21/*: any*/),\n                  (v22/*: any*/),\n                  (v17/*: any*/),\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": null,\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"conditions\",\n                    \"plural\": true,\n                    \"selections\": [\n                      (v23/*: any*/),\n                      (v24/*: any*/),\n                      (v25/*: any*/),\n                      {\n                        \"kind\": \"InlineFragment\",\n                        \"selections\": [\n                          {\n                            \"alias\": null,\n                            \"args\": null,\n                            \"concreteType\": null,\n                            \"kind\": \"LinkedField\",\n                            \"name\": \"ruleRollups\",\n                            \"plural\": true,\n                            \"selections\": [\n                              (v23/*: any*/),\n                              (v24/*: any*/),\n                              (v26/*: any*/),\n                              (v25/*: any*/),\n                              (v27/*: any*/)\n                            ],\n                            \"storageKey\": null\n                          }\n                        ],\n                        \"type\": \"PullRequestRulesCondition\",\n                        \"abstractKey\": null\n                      },\n                      (v28/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              },\n              (v29/*: any*/),\n              (v30/*: any*/),\n              (v17/*: any*/),\n              (v31/*: any*/),\n              (v32/*: any*/),\n              (v33/*: any*/),\n              (v34/*: any*/),\n              (v35/*: any*/),\n              (v36/*: any*/),\n              (v37/*: any*/),\n              (v38/*: any*/),\n              (v40/*: any*/),\n              (v41/*: any*/),\n              (v42/*: any*/),\n              (v43/*: any*/),\n              (v44/*: any*/),\n              (v45/*: any*/),\n              (v46/*: any*/),\n              (v47/*: any*/),\n              (v48/*: any*/),\n              (v49/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": \"b104e6fdeae0d0d55a66898768241b2b\",\n    \"metadata\": {},\n    \"name\": \"updatePullRequestBranchMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": null\n  }\n};\n})();\n\n(node as any).hash = \"b5defa81b2f997f86b63cba9581d1656\";\n\nexport default node;\n","/**\n * TYPES GENERATED FROM RELAY\n *\n * In many cases, we reference these types in the Merge Box components to make the components more forgiving and defensive.\n * Once Relay is removed completely, we can consolidate these types with the merge box page data types and remove any mentions of '%other ' and '%future added value'.\n */\n\nexport enum MergeAction {\n  DIRECT_MERGE = 'DIRECT_MERGE',\n  AUTO_MERGE = 'AUTO_MERGE',\n  MERGE_QUEUE = 'MERGE_QUEUE',\n}\n\nexport enum MergeMethod {\n  MERGE = 'MERGE',\n  SQUASH = 'SQUASH',\n  REBASE = 'REBASE',\n}\n\nexport enum MergeQueueMethod {\n  GROUP = 'GROUP',\n  SOLO = 'SOLO',\n}\n\nexport type CheckRunState =\n  | 'ACTION_REQUIRED'\n  | 'CANCELLED'\n  | 'COMPLETED'\n  | 'FAILURE'\n  | 'IN_PROGRESS'\n  | 'NEUTRAL'\n  | 'PENDING'\n  | 'QUEUED'\n  | 'SKIPPED'\n  | 'STALE'\n  | 'STARTUP_FAILURE'\n  | 'SUCCESS'\n  | 'TIMED_OUT'\n  | 'WAITING'\n  // eslint-disable-next-line relay/no-future-added-value\n  | '%future added value'\n\n// eslint-disable-next-line relay/no-future-added-value\nexport type StatusState = 'ERROR' | 'EXPECTED' | 'FAILURE' | 'PENDING' | 'SUCCESS' | '%future added value'\n\nexport type CheckConclusionState =\n  | 'ACTION_REQUIRED'\n  | 'CANCELLED'\n  | 'FAILURE'\n  | 'NEUTRAL'\n  | 'SKIPPED'\n  | 'STALE'\n  | 'STARTUP_FAILURE'\n  | 'SUCCESS'\n  | 'TIMED_OUT'\n  // eslint-disable-next-line relay/no-future-added-value\n  | '%future added value'\n\nexport type CheckStatusState =\n  | 'COMPLETED'\n  | 'IN_PROGRESS'\n  | 'PENDING'\n  | 'QUEUED'\n  | 'REQUESTED'\n  | 'WAITING'\n  // eslint-disable-next-line relay/no-future-added-value\n  | '%future added value'\n\n// eslint-disable-next-line relay/no-future-added-value\nexport type PullRequestMergeConditionResult = 'FAILED' | 'PASSED' | 'UNKNOWN' | '%future added value'\n\n// eslint-disable-next-line relay/no-future-added-value\nexport type PullRequestMergeRequirementsState = 'MERGEABLE' | 'UNKNOWN' | 'UNMERGEABLE' | '%future added value'\n\n// eslint-disable-next-line relay/no-future-added-value\nexport type PullRequestMergeMethod = 'MERGE' | 'REBASE' | 'SQUASH' | '%future added value'\n\n// eslint-disable-next-line relay/no-future-added-value\nexport type PullRequestMergeAction = 'DIRECT_MERGE' | 'MERGE_QUEUE' | '%future added value'\n\n// eslint-disable-next-line relay/no-future-added-value\nexport type PullRequestState = 'CLOSED' | 'MERGED' | 'OPEN' | '%future added value'\n\nexport type MergeStateStatus =\n  | 'BEHIND'\n  | 'BLOCKED'\n  | 'CLEAN'\n  | 'DIRTY'\n  | 'DRAFT'\n  | 'HAS_HOOKS'\n  | 'UNKNOWN'\n  | 'UNSTABLE'\n  // eslint-disable-next-line relay/no-future-added-value\n  | '%future added value'\n\nexport type PullRequestRuleFailureReason =\n  | 'CHANGES_REQUESTED'\n  | 'CODE_OWNER_REVIEW_REQUIRED'\n  | 'MORE_REVIEWS_REQUIRED'\n  | 'SOC2_APPROVAL_PROCESS_REQUIRED'\n  | 'THREAD_RESOLUTION_REQUIRED'\n  // eslint-disable-next-line relay/no-future-added-value\n  | '%future added value'\n\n// eslint-disable-next-line relay/no-future-added-value\ntype RepositoryRuleEvaluationResult = 'FAILED' | 'PASSED' | '%future added value'\n\nexport type RepositoryRuleType =\n  | 'AUTHORIZATION'\n  | 'BRANCH_NAME_PATTERN'\n  | 'CODE_SCANNING'\n  | 'COMMITTER_EMAIL_PATTERN'\n  | 'COMMIT_AUTHOR_EMAIL_PATTERN'\n  | 'COMMIT_MESSAGE_PATTERN'\n  | 'COMMIT_OID'\n  | 'CREATION'\n  | 'DELETION'\n  | 'FILE_EXTENSION_RESTRICTION'\n  | 'FILE_PATH_RESTRICTION'\n  | 'LOCK_BRANCH'\n  | 'MAX_FILE_PATH_LENGTH'\n  | 'MAX_FILE_SIZE'\n  | 'MAX_REF_UPDATES'\n  | 'MERGE_QUEUE'\n  | 'MERGE_QUEUE_LOCKED_REF'\n  | 'NON_FAST_FORWARD'\n  | 'PULL_REQUEST'\n  | 'REQUIRED_DEPLOYMENTS'\n  | 'REQUIRED_LINEAR_HISTORY'\n  | 'REQUIRED_REVIEW_THREAD_RESOLUTION'\n  | 'REQUIRED_SIGNATURES'\n  | 'REQUIRED_STATUS_CHECKS'\n  | 'REQUIRED_WORKFLOW_STATUS_CHECKS'\n  | 'RESTRICT_REPO_DELETE'\n  | 'REPOSITORY_TRANSFER'\n  | 'SECRET_SCANNING'\n  | 'TAG'\n  | 'TAG_NAME_PATTERN'\n  | 'UPDATE'\n  | 'WORKFLOWS'\n  | 'WORKFLOW_UPDATES'\n  | 'RESTRICT_REPO_DELETE'\n  | 'RESTRICT_REPOSITORY_NAME'\n  | 'RESTRICT_REPO_VISIBILITY'\n  // eslint-disable-next-line relay/no-future-added-value\n  | '%future added value'\n\nexport type PullRequestReviewState =\n  | 'APPROVED'\n  | 'CHANGES_REQUESTED'\n  | 'COMMENTED'\n  | 'DISMISSED'\n  | 'PENDING'\n  // eslint-disable-next-line relay/no-future-added-value\n  | '%future added value'\n\nexport type PullRequestMergeRequirementConditions = ReadonlyArray<\n  | {\n      __typename: string\n      conflicts?: readonly string[]\n      isConflictResolvableInWeb?: boolean\n      message: string | null | undefined\n      result: PullRequestMergeConditionResult\n      ruleRollups?: ReadonlyArray<{\n        failureReasons?: readonly PullRequestRuleFailureReason[]\n        message: string | null | undefined\n        requiredReviewers?: number\n        requiresCodeowners?: boolean\n        result: RepositoryRuleEvaluationResult\n        ruleType: RepositoryRuleType\n      }>\n    }\n  | {__typename: '%other'}\n>\n\nexport type PullRequestMergeRequirements = {\n  conditions: PullRequestMergeRequirementConditions\n  state: PullRequestMergeRequirementsState\n  commitAuthor: string\n  commitMessageBody: string | null | undefined\n  commitMessageHeadline: string | null | undefined\n}\n\nexport type MergeStatusButtonData = {\n  isDraft: boolean\n  state: PullRequestState\n  isInMergeQueue: boolean\n  mergeRequirements: PullRequestMergeRequirements\n  viewerDidAuthor: boolean\n}\n\nexport type ViewerMergeMethods = ReadonlyArray<{\n  isAllowable: boolean\n  isAllowableWithBypass: boolean\n  name: PullRequestMergeMethod\n}>\n\nexport type ViewerMergeActions = ReadonlyArray<{\n  isAllowable: boolean\n  mergeMethods: ViewerMergeMethods\n  name: PullRequestMergeAction\n}>\n\nexport type AutoMergeRequest =\n  | {\n      mergeMethod: PullRequestMergeMethod\n    }\n  | null\n  | undefined\n\nexport type MergeQueue =\n  | {\n      url: string\n    }\n  | null\n  | undefined\n\nexport type CheckStateRollup = {\n  count: number\n  state: CheckRunState | StatusState\n}\n\nexport type MergeQueueEntryState =\n  | 'AWAITING_CHECKS'\n  | 'LOCKED'\n  | 'MERGEABLE'\n  | 'QUEUED'\n  | 'UNMERGEABLE'\n  // eslint-disable-next-line relay/no-future-added-value\n  | '%future added value'\n\nexport type Review = {\n  authorCanPushToRepository: boolean\n  author?: {\n    login: string\n    avatarUrl: string\n    name?: string | null\n    url: string\n  } | null\n  onBehalfOf: string[]\n  state: PullRequestReviewState\n}\n\nexport type ViewerPayload = {\n  login: string\n}\n\nexport type RelayPullRequest = {\n  autoMergeRequest: AutoMergeRequest | null | undefined\n  baseRefChannel: string | null | undefined\n  baseRefName: string\n  commitHeadShaChannel: string | null | undefined\n  commits: {\n    totalCount: number\n  }\n  deployedChannel: string | null | undefined\n  gitMergeStateChannel: string | null | undefined\n  headRefChannel: string | null | undefined\n  headRefName: string\n  headRefOid: string\n  headRepository:\n    | {\n        name: string\n        owner: {\n          login: string\n        }\n      }\n    | null\n    | undefined\n  id: string\n  isDraft: boolean\n  isInMergeQueue: boolean\n  latestOpinionatedReviews:\n    | {\n        edges:\n          | ReadonlyArray<\n              | {\n                  node:\n                    | {\n                        author:\n                          | {\n                              avatarUrl: string\n                              login: string\n                              name: string | null | undefined\n                              url: string\n                            }\n                          | null\n                          | undefined\n                        authorCanPushToRepository: boolean\n                        onBehalfOf: {\n                          edges:\n                            | ReadonlyArray<\n                                | {\n                                    node:\n                                      | {\n                                          name: string\n                                        }\n                                      | null\n                                      | undefined\n                                  }\n                                | null\n                                | undefined\n                              >\n                            | null\n                            | undefined\n                        }\n                        state: PullRequestReviewState\n                      }\n                    | null\n                    | undefined\n                }\n              | null\n              | undefined\n            >\n          | null\n          | undefined\n      }\n    | null\n    | undefined\n  mergeQueue: MergeQueue | null | undefined\n  mergeQueueChannel: string | null | undefined\n  mergeQueueEntry:\n    | {\n        position: number\n        state: MergeQueueEntryState\n      }\n    | null\n    | undefined\n  mergeRequirements: PullRequestMergeRequirements\n  mergeStateStatus: MergeStateStatus\n  resourcePath: string\n  reviewStateChannel: string | null | undefined\n  state: PullRequestState\n  stateChannel: string | null | undefined\n  viewerCanAddAndRemoveFromMergeQueue: boolean\n  viewerCanDeleteHeadRef: boolean\n  viewerCanDisableAutoMerge: boolean\n  viewerCanEnableAutoMerge: boolean\n  viewerCanRestoreHeadRef: boolean\n  viewerCanUpdate: boolean\n  viewerCanUpdateBranch: boolean\n  viewerDidAuthor: boolean\n  viewerMergeActions: ViewerMergeActions\n  workflowsChannel: string | null | undefined\n}\n","import {getInsightsUrl} from '@github-ui/internal-api-insights'\n\nimport {usePageDataContext} from '../contexts/PageDataContext'\nimport type {PageDataName} from '../payloads/page-data'\n\nexport function usePageDataUrl(pageDataName: PageDataName, params?: string) {\n  const {basePageDataUrl} = usePageDataContext()\n  let baseUrl = `${basePageDataUrl}/page_data/${pageDataName}`\n\n  if (params) baseUrl += `?${params}`\n\n  const url = getInsightsUrl(baseUrl)\n\n  return url\n}\n","export const PageData = {\n  changeBase: 'change_base',\n  commits: 'commits',\n  disableAutoMerge: 'disable_auto_merge',\n  enableAutoMerge: 'enable_auto_merge',\n  header: 'header',\n  statusChecks: 'status_checks',\n  tabCounts: 'tab_counts',\n  codeButton: 'code_button',\n  updateTitle: 'update_title',\n  mergeBox: 'merge_box',\n} as const\n\nexport type PageDataKey = keyof typeof PageData\nexport type PageDataName = (typeof PageData)[PageDataKey]\n","import {QueryClient} from '@tanstack/react-query'\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      // This will prevent additional re-fetches when\n      // 1. A similiar HTTP request is in flight\n      // 2. initialData field is set with data on page load or through SSR\n      staleTime: Infinity,\n      // Disable retries\n      retry: false,\n    },\n  },\n})\n\nexport default queryClient\n","import {CheckCircleFillIcon, DotFillIcon, FeedDiscussionIcon, XCircleFillIcon} from '@primer/octicons-react'\n\nexport const REVIEW_STATES = {\n  APPROVED: {\n    icon: CheckCircleFillIcon,\n    color: 'var(--fgColor-success, var(--color-success-fg))',\n    background: 'var(--fgColor-onEmphasis, var(--color-fg-on-emphasis))',\n    description: 'Approved',\n  },\n  CHANGES_REQUESTED: {\n    icon: XCircleFillIcon,\n    color: 'var(--fgColor-severe, var(--color-severe-fg))',\n    background: 'var(--fgColor-onEmphasis, var(--color-fg-on-emphasis))',\n    description: 'Requested changes',\n  },\n  COMMENTED: {\n    icon: FeedDiscussionIcon,\n    color: 'var(--fgColor-muted, var(--color-fg-muted))',\n    background: 'var(--fgColor-onEmphasis, var(--color-fg-on-emphasis))',\n    description: 'Commented',\n  },\n  DISMISSED: {\n    icon: FeedDiscussionIcon,\n    color: 'var(--fgColor-muted, var(--color-fg-muted))',\n    background: 'var(--fgColor-onEmphasis, var(--color-fg-on-emphasis))',\n    description: 'Dismissed',\n  },\n  PENDING: {\n    icon: DotFillIcon,\n    color: 'var(--fgColor-attention, var(--color-attention-fg))',\n    background: 'var(--bgColor-attention-muted, var(--color-attention-muted))',\n    description: 'Awaiting review',\n  },\n}\n","import {userHovercardPath} from '@github-ui/paths'\nimport {StatusAvatar} from '@github-ui/status-avatar/StatusAvatar'\n\nimport {REVIEW_STATES} from './review-states'\nimport {GitHubAvatar} from '@github-ui/github-avatar'\n\nexport type ReviewerAvatarProps = {\n  state: string\n  author: {\n    login: string\n    avatarUrl: string\n  }\n  position?: number\n  size?: 20 | 24\n}\n\n/**\n * Renders the Avatar for the reviewer and an icon indicating the state of their review\n */\nexport function ReviewerAvatar({state, author, position, size}: ReviewerAvatarProps) {\n  let currentReviewState\n  if (state !== 'SUGGESTED') {\n    currentReviewState = REVIEW_STATES[state as keyof typeof REVIEW_STATES]\n  }\n  const reviewerZIndex = position ? {zIndex: position + 1} : {}\n  return (\n    (currentReviewState && (\n      <StatusAvatar\n        key={author.login}\n        altText={`${author.login}'s reviewer avatar image`}\n        hovercardUrl={userHovercardPath({owner: author.login || ''})}\n        square={false}\n        src={author.avatarUrl}\n        zIndex={reviewerZIndex}\n        size={size}\n        backgroundColor={currentReviewState.background}\n        icon={currentReviewState.icon}\n        iconColor={currentReviewState.color}\n      />\n    )) || <GitHubAvatar src={author.avatarUrl} size={size} alt={`${author.login}'s suggested reviewer avatar image`} />\n  )\n}\n\ntry{ ReviewerAvatar.displayName ||= 'ReviewerAvatar' } catch {}","import {createContext, useContext, useEffect, type PropsWithChildren} from 'react'\nimport {SubscriptionSet, Topic} from '@github/alive-client'\n\ntype InitialMessages = Array<[string, unknown]>\n\nconst AliveTestContext = createContext<typeof testSubscribeToAlive | null>(null)\n\nlet subscriptions: SubscriptionSet<(data: unknown) => unknown> | null = null\n/**\n * Provides context required to dispatch mock alive messages via `dispatchAliveTestMessage`\n *\n *@example\n * ```ts\n * import {AliveTestProvider, dispatchAliveTestMessage, signChannel} from '@github-ui/use-alive/test-utils'\n *\n * render(<MyComponent aliveChannel={signChannel(\"channel-name\")} />, {\n *   wrapper: ({children}) => (\n *     <AliveTestProvider\n *       initialMessages={[[\"channel-name\", {data: 1}]]}\n *     >\n *       {children}\n *     </AliveTestProvider>\n * )})\n *\n * // later in the test, you can send another message:\n * dispatchAliveTestMessage(\"channel-name\", {data: 2})\n * ```\n */\nexport function AliveTestProvider({children, initialMessages}: PropsWithChildren<{initialMessages?: InitialMessages}>) {\n  useEffect(() => {\n    if (initialMessages) {\n      for (const [channel, users] of initialMessages) {\n        setTimeout(() => {\n          dispatchAliveTestMessage(channel, users)\n        }, 0)\n      }\n    }\n\n    return () => {\n      // delete subscriptions on unmount of provider to reset subs between tests\n      subscriptions = null\n    }\n  })\n  return <AliveTestContext.Provider value={testSubscribeToAlive}>{children}</AliveTestContext.Provider>\n}\n\n/**\n * Send mock Alive messages for tests or storybook etc.\n * Component under test **must** be wrapped in `AliveTestProvider` to enable Alive mocking.\n *\n * @see `AliveTestProvider`\n *\n * @param channel - an unsigned alive channel name: subscribers to this channel will be notified\n * @param data - data to send to subscribers\n */\nexport function dispatchAliveTestMessage(channel: string, data: unknown) {\n  if (subscriptions === null) {\n    throw new Error(\n      'Test helper `dispatchAliveTestMessage` called outside `AliveTestProvider`. Please wrap your component under test in `AliveTestProvider` from \"@github-ui/use-alive/test-utils\".',\n    )\n  }\n\n  const subscribers = Array.from(subscriptions.subscribers(channel))\n  for (const subscriber of subscribers) {\n    subscriber(data)\n  }\n}\n\n/**\n * Provides access to the `testSubscribeToAlive` mock if called from within a `AliveTestProvider` context\n */\nexport function useTestSubscribeToAlive() {\n  return useContext(AliveTestContext)\n}\n\n/**\n * This function is private and is intended only to be consumable via `AliveTestProvider` / `useTestSubscribeToAlive`\n * Furthermore it is only expected to be used in `use-alive.ts`\n * @param signedChannel - A signed alive channel. You can use `signChannel` to generate a signed channel from a channel name.\n * @param callback - this will be called with data provided via `dispatchAliveTestMessage` to simulate an alive message\n * @private\n */\nfunction testSubscribeToAlive(signedChannel: string, callback: (data: unknown) => unknown) {\n  const topic = Topic.parse(signedChannel)\n  if (!topic) {\n    throw new Error(`Invalid channel name. Did you forget to sign it with \\`signChannel(\"${signedChannel}\")\\`?`)\n  }\n  if (!subscriptions) {\n    subscriptions = new SubscriptionSet()\n  }\n  subscriptions.add({topic, subscriber: callback})\n  return {\n    unsubscribe: () => {\n      subscriptions?.delete({topic, subscriber: callback})\n    },\n  }\n}\n\nconst fakeTimestamp = 1234567890\nconst fakeSignature = 'SIGNATURE'\n\n/**\n * Simulate a server-signed alive channel. Useful for passing as the signed channel to `useAlive` in code under test.\n *\n * @param channel - Unsigned channel name. This is the channel you will dispatch messages to.\n * @param [timestamp=1234567890] - Unix Epoch Time the channel was signed on the server. Default is equal to\n *         \"2009-02-13T23:31:30.000Z\" (multiply by 1000 for JS time in milliseconds)\n * @param [signature='SIGNATURE'] - String used to verify the signature. Ignored in test mode.\n * @returns A signed channel of the form `${btoa({\"c\": \"CHANNEL\", \"t\": 1234567890}')}--SIGNATURE`\n */\nexport function signChannel(channel: string, timestamp = fakeTimestamp, signature = fakeSignature) {\n  return `${btoa(`{\"c\": \"${channel}\", \"t\": ${timestamp}}`)}--${signature}`\n}\n\ntry{ AliveTestContext.displayName ||= 'AliveTestContext' } catch {}\ntry{ AliveTestProvider.displayName ||= 'AliveTestProvider' } catch {}","import {useEffect} from 'react'\nimport useIsMounted from '@github-ui/use-is-mounted'\nimport {getSession} from '@github-ui/alive'\nimport {connectAliveSubscription} from '@github-ui/alive/connect-alive-subscription'\nimport {useTestSubscribeToAlive} from './TestAliveSubscription'\n\n/**\n * Subscribe to an alive channel with a signed channel name. Event data\n * will be passed to the callback.\n * @param signedChannel the signed channel name, provided from the server\n * @param callback a callback to receive events from the alive channel. This callback should be memoized to avoid unnecessary resubscribes when React re-renders.\n */\nexport function useAlive<T>(signedChannel: string, callback: (data: T) => unknown) {\n  const isMounted = useIsMounted()\n  const testSubscribeToAlive = useTestSubscribeToAlive()\n\n  useEffect(() => {\n    let unsubscribeFromAlive = () => {}\n    let closed = false\n\n    async function subscribeToAlive() {\n      if (typeof testSubscribeToAlive === 'function') {\n        const subs = await testSubscribeToAlive(signedChannel, callback as (data: unknown) => unknown)\n        if (subs) {\n          unsubscribeFromAlive = subs.unsubscribe\n        }\n        return\n      }\n\n      try {\n        const aliveSession = await getSession()\n        if (closed) {\n          // Possible we unsubscribed before the session returned\n          // this is fine, we just don't subscribe to the channel on the alive side\n          return\n        }\n        const resp = connectAliveSubscription(aliveSession, signedChannel, callback)\n        if (resp?.unsubscribe) {\n          if (isMounted()) {\n            unsubscribeFromAlive = resp.unsubscribe\n          } else {\n            resp.unsubscribe()\n          }\n        }\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e)\n      }\n    }\n\n    subscribeToAlive()\n\n    return () => {\n      closed = true\n      unsubscribeFromAlive()\n    }\n  }, [signedChannel, callback, isMounted, testSubscribeToAlive])\n}\n","import {useEffect, useRef} from 'react'\n\n/**\n * Tracks changes to a value across render cycles and returns the value that was used in the previous render cycle.\n * Note: This hook will return undefined on the first render cycle.\n */\nexport function usePreviousValue<T>(value: T): T | undefined {\n  const ref = useRef<T | undefined>(undefined)\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n","import type {PropsWithChildren} from 'react'\nimport {createContext, useContext, useMemo} from 'react'\n\ninterface Props {\n  basePageDataUrl: string\n}\n\nexport const PageDataContext = createContext<Props | null>(null)\n\nexport function PageDataContextProvider({children, basePageDataUrl}: PropsWithChildren & Props) {\n  const value = useMemo(() => ({basePageDataUrl}), [basePageDataUrl])\n  return <PageDataContext.Provider value={value}>{children}</PageDataContext.Provider>\n}\n\nexport function usePageDataContext(): Props {\n  const contextData = useContext(PageDataContext)\n  if (!contextData) {\n    throw new Error('usePageDataContext must be used within a PageDataContextProvider')\n  }\n  return contextData\n}\n\ntry{ PageDataContext.displayName ||= 'PageDataContext' } catch {}\ntry{ PageDataContextProvider.displayName ||= 'PageDataContextProvider' } catch {}","import {GitHubAvatar} from '@github-ui/github-avatar'\nimport type {SxProp} from '@primer/react'\nimport {Box} from '@primer/react'\nimport {StatusIcon} from './StatusIcon'\n\nexport type StatusAvatarProps = {\n  zIndex?: {zIndex?: number}\n  altText: string\n  hovercardUrl?: string\n  src: string\n  square: boolean\n  icon: React.ElementType\n  iconColor: string\n  backgroundColor?: string\n  backgroundSx?: SxProp['sx']\n  size?: 20 | 24\n}\n/**\n * This component renders an avatar (either square or round) with a related status emoji in the bottom right corner\n */\nexport function StatusAvatar({\n  zIndex,\n  altText,\n  hovercardUrl,\n  src,\n  square,\n  icon,\n  iconColor,\n  backgroundColor,\n  backgroundSx,\n  sx,\n  size = 20,\n}: StatusAvatarProps & SxProp) {\n  return (\n    <Box\n      sx={{\n        position: 'relative',\n        display: 'flex',\n        gap: 2,\n        alignItems: 'center',\n        ...zIndex,\n        ...sx,\n      }}\n    >\n      <GitHubAvatar alt={altText} data-hovercard-url={hovercardUrl} size={size} square={square} src={src} />\n      <StatusIcon\n        icon={icon}\n        iconColor={iconColor}\n        size={12}\n        backgroundColor={backgroundColor}\n        backgroundSx={backgroundSx}\n      />\n    </Box>\n  )\n}\n\ntry{ StatusAvatar.displayName ||= 'StatusAvatar' } catch {}","import {Box, Octicon} from '@primer/react'\nimport type {SxProp} from '@primer/react'\n\nexport type StatusIconProps = {\n  iconColor: string\n  backgroundColor?: string\n  icon: React.ElementType\n  size: 12 | 20 | 24\n  backgroundSx?: SxProp['sx']\n  absolute?: boolean\n}\n\nexport function StatusIcon({\n  iconColor,\n  icon,\n  size = 12,\n  backgroundColor = 'fg.onEmphasis',\n  absolute = true,\n  backgroundSx,\n}: StatusIconProps) {\n  let innerSize\n  let margin\n  if (size === 12) {\n    innerSize = '10px'\n    margin = '1px'\n  } else if (size === 20) {\n    innerSize = '16px'\n    margin = '2px'\n  } else {\n    innerSize = '16px'\n    margin = '4px'\n  }\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        borderRadius: '100px',\n        ...(absolute\n          ? {\n              position: 'absolute',\n              bottom: -1,\n              right: -1,\n              boxShadow: '0 0 0 2px var(--bgColor-default, var(--color-canvas-default))',\n              backgroundColor: 'var(--bgColor-default, var(--color-canvas-default))',\n            }\n          : {position: 'relative'}),\n        ...backgroundSx,\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          position: 'absolute',\n          borderRadius: '100px',\n          width: innerSize,\n          height: innerSize,\n          left: margin,\n          top: margin,\n          backgroundColor,\n        }}\n      />\n      <Octicon\n        icon={icon}\n        size={size}\n        sx={{\n          color: iconColor,\n          position: 'relative',\n        }}\n      />\n    </Box>\n  )\n}\n\ntry{ StatusIcon.displayName ||= 'StatusIcon' } catch {}"],"names":["assertDataPresent","data","node","v0","v1","v2","v3","v4","hash","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","v19","v20","v21","v22","v23","v24","v25","v26","v27","v28","v29","v30","v31","v32","v33","v34","v35","v36","v37","v38","v39","v40","v41","v42","v43","v44","v45","v46","v47","v48","v49","v50","MergeMethodContext","createContext","mergeMethod","MergeMethod","MERGE","setMergeMethod","MergeMethodContextProvider","children","defaultMergeMethod","useState","value","useMemo","Provider","useMergeMethodContext","useContext","displayName","ExpandableSectionIcon","isExpanded","div","style","transition","transform","ChevronUpIcon","MergeBoxSectionHeader","title","subtitle","icon","expandableProps","rightSideContent","ariaLabel","onToggle","className","clsx","styles","wrapper","wrapperCanExpand","Heading","as","sx","fontSize","p","button","aria-label","type","onClick","aria-expanded","Boolean","STATUS_CHECK_CONFIGS","ACTION_REQUIRED","XCircleFillIcon","iconColor","isPending","isSuccess","CANCELLED","StopIcon","COMPLETED","CheckIcon","ERROR","EXPECTED","DotFillIcon","FAILURE","IN_PROGRESS","NEUTRAL","SquareFillIcon","PENDING","QUEUED","REQUESTED","backgroundColor","SKIPPED","SkipIcon","STALE","MoonIcon","STARTUP_FAILURE","SUCCESS","TIMED_OUT","WAITING","ClockIcon","_UNKNOWN_VALUE","STATUS_CHECK_ACCESSIBLE_NAMES","compareChecks","a","b","localeCompare","groupChecks","checks","stateMapping","getState","initialValue","key","Object","keys","reduce","accumulator","currentCheck","state","stateGrouping","find","groupName","includes","checksForState","push","countChecksByGroup","groupedCheckCounts","check","countChecksForGroup","checksToCount","count","fromEntries","map","group","extractChecksAnalyticsMetadata","statusChecks","statusCheckCounts","obj","ExpandableGroupIcon","ChevronRightIcon","size","ChecksGroup","groupStatus","isOpenByDefault","isToggleVisible","analyticsMetadata","isOpen","setIsOpen","sendAnalyticsEvent","useAnalytics","groupStatusText","groupContentId","useId","showChecksList","showListToggle","Button","aria-controls","checksGroupHeadingButton","variant","trailingVisual","expandableWrapper","visibility","expandableContent","role","ActionList","id","checksGroupActionList","showDividers","StatusIcon","Octicon","color","CheckSpinner","Spinner","StatusCheckRow","memo","avatarUrl","description","targetUrl","isRequired","statusState","li","GitHubAvatar","alt","square","src","href","span","Label","tabIndex","ArrowRightIcon","CHECKS_LIST_GROUPINGS","ExpandedChecksList","statusRollupSummary","sortedChecksOrStatuses","sort","countsByGroup","checksByGroup","groupsWithItemsCount","entries","groupsWithItems","checksContainer","checkOrStatus","idx","MergeBoxExpandable","useStatusChecksPageData","pullRequestHeadSha","apiURL","usePageDataUrl","PageData","useSuspenseQuery","queryKey","queryFn","result","reactFetch","ok","status","json","reportTraceData","icons","PASSING","CircleOcticon","FAILING","XIcon","sectionNames","length","delay","sectionColorMapping","circumference","Math","PI","svgSettings","gapPercent","strokeWidth","circleSize","percentToDegree","percentToPx","sumOfPriorParts","percentage","previousStrokes","sum","i","stroke","StatusCheckStatesIcon","shouldAnimate","setAnimate","prevStatusRollupSummary","useRef","undefined","sections","buildSectionsData","percentageReduction","countsBySection","orderedSections","name","flatMap","section","filter","totalCount","acc","numOfSections","sectionsNotMeetingMinimumPercentage","index","sectionName","dashArray","max","additionalStrokeOffset","strokeOffset","allChecksPassing","allChecksFailing","shouldRenderSVG","current","iconWrapper","svg","xmlns","viewBox","shapeRendering","width","height","userSelect","fill","aria-hidden","circle","cx","cy","r","strokeLinecap","strokeLinejoin","strokeDashoffset","transformOrigin","strokeDasharray","CHECKS_SUMMARY_GROUPINGS","heading","PASSED","PENDING_APPROVAL","PENDING_FAILED","SOME_FAILED","FAILED","ChecksSection","pullRequestId","aliveChannels","statusRollup","isPassingChecksState","combinedState","checksExpanded","setChecksExpanded","useSessionStorage","useStatusChecksLiveUpdates","channel","refetch","isMounted","useIsMounted","fireOnPageVisible","useFireOnPageVisible","callbackRef","useCallback","document","hidden","cleanup","handler","func","window","removeEventListener","addEventListener","throttledRefetch","throttle","handleNotification","setTimeout","wait","useAlive","commitHeadShaChannel","summary","Box","borderBottom","borderColor","accessibleChecksSummary","totalCheckCounts","previous","summaryText","text","join","ChecksSectionFetchFailure","basePageDataUrl","usePageDataContext","Link","inline","AlertIcon","presentationForStatus","CheckCircleFillIcon","GitPullRequestDraftIcon","GitMergeQueueIcon","GitMergeIcon","GitPullRequestClosedIcon","borderColorClassForStatus","failingConditionsFromRelay","pull","failures","mergeRequirements","conditions","cond","__typename","failingRuleRollupTypesFromRelay","ruleCondition","ruleRollups","rollup","ruleType","hasConflictsFromRelay","hasFailingRequiredChecksFromRelay","requiredStatusCheckMessageFromRelay","reqChecksRollup","message","match","pullRequestRuleFailureReasonsFromRelay","pullRequestRollup","failureReasons","mergeabilityStatusFromRelay","reqs","hasNonactionableFailuresFromRelay","failing","isInMergeQueue","isDraft","failingConditions","failingRuleRollupTypes","hasFailingRequiredChecks","requiredStatusCheckMessage","pullRequestRuleFailureReasons","metadata","toUpperCase","hasConflicts","ClosedOrMergedStateMergeBox","headRefName","headRepository","viewerCanDeleteHeadRef","viewerCanRestoreHeadRef","onDeleteHeadRef","onRestoreHeadRef","error","setError","useSafeState","isSubmitting","setIsSubmitting","isDeletingBranch","setIsDeletingBranch","generateRepositoryURL","branchPath","owner","login","repo","branch","Status","Merged","Closed","disabled","leadingVisual","SyncIcon","BranchName","onCompleted","onError","aria-busy","mr","ClosedOrMergedStateMergeBoxWithRelay","props","environment","useRelayEnvironment","deletePullRequestHeadRefMutation","input","commitMutation","mutation","variables","restorePullRequestHeadRefMutation","CenteredLoadingSpinner","alignItems","display","flexDirection","justifyContent","mt","ButtonWithDropdown","actionList","ariaBusy","inactive","inactiveTooltipText","secondaryButtonActive","secondaryButtonAriaLabel","onPrimaryButtonClick","shouldFocusPrimaryButton","onFocusPrimaryButton","isPrimary","hideSecondaryButton","primaryButtonRef","useEffect","focus","buttonVariant","secondaryButtonInactive","buttonContent","ButtonGroup","ref","aria-disabled","noop","ActionMenu","open","onOpenChange","Anchor","IconButton","unsafeDisableTooltip","TriangleDownIcon","Overlay","align","Tooltip","direction","AlertFillIcon","bg","UpdateBranchOption","onSelect","selected","Item","Description","NO_CONFLICTS","OUT_OF_DATE","HAS_CONFLICTS","COMPLEX_CONFLICTS","ConflictsSectionWithRelay","ConflictsSection","onUpdateBranch","selectedUpdateMethod","updatePullRequestBranch","updateMethod","baseRefName","mergeStateStatus","resourcePath","viewerCanUpdateBranch","viewerLogin","conflictsCondition","addToast","useToastContext","setSelectedUpdateMethod","isUpdating","setIsUpdating","conflictsState","conflictsWebEditorPath","conflicts","isConflictResolvableInWeb","showUpdateBranchButton","underline","ml","selectionVariant","LinkButton","conflictPath","LeadingVisual","FileIcon","MergeBoxFragment","LoadMergeBoxQuery","useLoadMergeBoxQuery","previousMergeMethod","usePreviousValue","query","loadQuery","useQueryLoader","startTransition","fetchPolicy","MergeQueueSectionWithRelay","MergeQueueSection","onRemoveFromQueue","removePullRequestFromMergeQueue","mergeQueue","mergeQueueEntry","viewerCanAddAndRemoveFromMergeQueue","focusPrimaryMergeButton","isMergeEntryLocked","mergePosition","position","mergeQueueUrl","url","returnConfirmationRef","dequeueing","setDequeueing","isConfirmationDialogOpen","setIsConfirmationDialogOpen","errorMessage","setErrorMessage","Dialog","aria-labelledby","returnFocusRef","onDismiss","Header","announce","e","Flash","MergeQueuePositionText","pullsBeforeInQueue","Text","mergeButtonText","confirming","isBypassMerge","inProgress","isAutoMergeAllowed","mergedText","SQUASH","REBASE","mergeQueueButtonText","MergeQueueMethod","GROUP","SOLO","mergePullRequest","MergeErrorMessage","headingRef","gap","ConfirmMerge","commitAuthorEmail","commitMessageBody","commitMessageHeadline","defaultBranchName","onCancel","selectedMergeMethod","refetchMergeBoxQuery","commitHeaderRef","confirmMergeButtonRef","scrollIntoView","behavior","block","commitMessageHeadlineValue","setCommitMessageHeadlineValue","commitMessageBodyValue","setCommitMessageBodyValue","merging","setMerging","mergeErrorMessage","setMergeErrorMessage","mutate","useEnableAutoMergeMutation","onSuccess","enableAutoMerge","useMutation","mutationFn","verifiedFetch","method","headers","Accept","body","JSON","stringify","author_email","authorEmail","commit_message","commitMessage","commit_title","commitTitle","FormControl","TextInput","defaultValue","onChange","currentTarget","Textarea","aria-describedby","commitHeadline","commitBody","aria-live","MergeDropdownOption","primaryText","secondaryText","BypassMergeRequirementsToggle","checked","onToggleChecked","Checkbox","allowableMergeMethods","mergeMethods","bypassableOnly","allowedMergeMethods","isAllowable","isAllowableWithBypass","DirectMergeActionsSection","numberOfCommits","commitAuthor","mergeRequirementsState","mergeable","setShouldFocusPrimaryMergeButton","shouldFocusPrimaryMergeButton","viewerMergeActions","isMergeQueueBypassRulesActive","isConfirmingSelectedMerge","setIsConfirmingSelectedMerge","isBypassRulesChecked","setIsBypassRulesChecked","hasConflict","hasRebaseMergeConflict","areMergeRequirementsBypassable","directMergeAction","action","MergeAction","DIRECT_MERGE","bypassableMergeMethods","canCreateMergeCommit","canSquashMerge","canRebaseMerge","showBypassCheckbox","isBypassRulesActive","bypassableMethodsWithoutSelected","isDropdownButtonActiveOverride","updateMergeMethod","newMergeMethod","analyticsEvent","AddToMergeQueueSection","autoMergeRequest","selectedMergeQueueOption","setSelectedMergeQueueOption","showConfirmMergeWhenReady","setShowConfirmMergeWhenReady","isEnableInFlight","updateMergeQueueMethod","newMergeQueueMethod","mergeButtonRef","mergeQueueMethod","DisableAutoMerge","viewerCanDisableAutoMerge","isMergeQueueEnabled","isDisableInFlight","setIsDisableInFlight","disableAutoMerge","useDisableAutoMergeMutation","autoMergeVerb","toLowerCase","autoMergeMessage","MergeSectionWithRelay","MergeSection","viewerCanEnableAutoMerge","isReadingFromJSONAPI","mergeComponent","isAdminBypassToggleChecked","setIsAdminBypassToggleChecked","mergeQueueMergeAction","MERGE_QUEUE","isMergeable","isDirectMergeEnabled","RULE_ROLLUP_TYPES_EXCLUDED_FROM_DISPLAY","BlockedSection","failingMergeConditionsWithoutRulesCondition","failingRulesConditions","failingConditionsAndRules","c","rule","ul","condition","mb","markPullRequestReadyForReviewMutation","DraftStateSectionWithRelay","DraftStateSection","onMarkReadyForReview","viewerCanUpdate","markingReadyForReview","setMarkingReadyForReview","MergeabilityIcon","iconBackgroundColor","mergeabilityIcon","ConsolidatedReviewState","getReviewsState","reviewsRequired","isCodeownersRequired","reviews","reviewRequiredSummary","APPROVED","CHANGES_REQUESTED","REVIEW_REQUIRED","REVIEWED","FileDiffIcon","reviewedIcon","CodeReviewIcon","joinWithAnd","items","last","pop","reviewStatusText","onBehalfOf","statusText","isReviewRelatedFailureReason","ReviewerSection","reviewerRuleRollups","latestOpinionatedReviews","reviewersExpanded","setReviewersExpanded","requiredReviewCounts","reviewRules","requiredReviewers","numReviewsRequired","codeownersRequired","codeownersRequiredRules","requiresCodeowners","consolidatedFailureReasons","Set","reviewsState","accessibleReviewSummary","changeRequests","review","authorCanPushToRepository","approvals","onBehalfOfTeams","author","LinkItem","data-hovercard-url","userHovercardPath","reviewerRow","ReviewerAvatar","reviewAuthor","TrailingVisual","MergeBoxLoading","mergeboxLoading","MergeBoxWithRelaySuspense","hideIcon","Suspense","fallback","MergeBoxWithRelayWrapper","refetchQuery","MergeBoxWithSuspense","rest","QueryClientProvider","client","queryClient","MergeBoxWrapper","ReactQueryDevtools","initialIsOpen","usePreloadedQuery","pullRequest","pullRequestData","readInlineData","MergeBoxWithRelay","viewer","useMergeBoxPageData","bypassRequirements","searchParams","URLSearchParams","append","toString","mergeBox","mergeabilityStatus","hasNonactionableFailures","mergeBoxAliveChannels","getReviewRuleRollupMetadata","pullRequestCondition","rollupMetadata","rr","reason","getConflictsCondition","ownerLogin","MergeBox","_input","viewerData","edges","reviewEdge","reviewData","applicableRulesCondition","stateChannel","deployedChannel","reviewStateChannel","workflowsChannel","mergeQueueChannel","headRefChannel","baseRefChannel","gitMergeStateChannel","assign","commits","mergeStatusPresentation","mergeboxBorderColor","mergeBoxIcon","useMergeabilityLiveUpdates","channels","aliveMergabilityChannels","values","throttleRefetchingPullRequestData","handleMergabilityChannelNotification","ErrorBoundary","headRefOid","MergeabilitySidesheet","mergeabilitySidesheetIsOpen","toggleMergeabilitySidesheet","mergeStatusButtonRef","closeButtonRef","exitOverlay","anchorSide","initialFocusRef","right","top","maxHeight","onClickOutside","onEscape","MergeStatusButtonWithSuspense","setMergeabilitySidesheetIsOpen","sidesheet","MergeStatusButtonWrapper","MergeStatusButton","viewerDidAuthor","NonactionableFailure","presentation","Mergeable","testIdProps","fontWeight","validateMergeMethod","v51","v52","pageDataName","params","baseUrl","getInsightsUrl","changeBase","header","tabCounts","codeButton","updateTitle","QueryClient","defaultOptions","queries","staleTime","Infinity","retry","REVIEW_STATES","background","COMMENTED","FeedDiscussionIcon","DISMISSED","currentReviewState","StatusAvatar","altText","hovercardUrl","zIndex","AliveTestProvider","AliveTestContext","subscriptions","testSubscribeToAlive","signedChannel","callback","topic","Topic","parse","SubscriptionSet","add","subscriber","unsubscribe","delete","initialMessages","users","dispatchAliveTestMessage","Array","from","subscribers","unsubscribeFromAlive","closed","subscribeToAlive","subs","aliveSession","getSession","resp","connectAliveSubscription","console","PageDataContext","PageDataContextProvider","contextData","backgroundSx","absolute","innerSize","margin","borderRadius","bottom","boxShadow","left"],"sourceRoot":""}