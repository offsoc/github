---
summary: Get-or-create an authorization for a specific app
description: |-
  > [!WARNING]
  > **Deprecation notice:** ${apiName} will discontinue the [OAuth Authorizations API](${externalDocsUrl}/rest/oauth-authorizations/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](${externalDocsUrl}/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](${externalDocsUrl}/rest/oauth-authorizations/oauth-authorizations) will be removed on November 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).

  > [!WARNING]
  > Apps must use the [web application flow](${externalDocsUrl}/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with ${apiName} SAML organizations. OAuth tokens created using the Authorizations API will be unable to access ${apiName} SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).

  Creates a new authorization for the specified OAuth application, only if an authorization for that application doesn't already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.

  If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see "[Working with two-factor authentication](${externalDocsUrl}/rest/overview/other-authentication-methods#working-with-two-factor-authentication)."
tags:
  - oauth-authorizations
operationId: oauth-authorizations/get-or-create-authorization-for-app
externalDocs:
  description: API method documentation
  url: '${externalDocsUrl}/rest/oauth-authorizations/oauth-authorizations#get-or-create-an-authorization-for-a-specific-app'
parameters:
  - $ref: '../../components/parameters/oauth-client-id.yaml'
requestBody:
  required: true
  content:
    application/json:
      schema:
        properties:
          client_secret:
            description: The OAuth app client secret for which to create the token.
            maxLength: 40
            type: string
          scopes:
            description: A list of scopes that this authorization is in.
            type: array
            items:
              type: string
            example:
              - public_repo
              - user
            nullable: true
          note:
            description: A note to remind you what the OAuth token is for.
            type: string
            example: Update all gems
          note_url:
            description: A URL to remind you what app the OAuth token is for.
            type: string
          fingerprint:
            description: A unique string to distinguish an authorization from others
              created for the same client ID and user.
            type: string
        required:
          - client_secret
        type: object
      examples:
        default:
          summary: Create an authorization for an app
          value:
            client_secret: 3ef4ad510c59ad37bac6bb4f80047fb3aee3cc7f
            scopes: ['public_repo']
            note: optional note
            note_url: http://optional/note/url
responses:
  '200':
    description: if returning an existing token
    content:
      application/json:
        schema:
          $ref: '../../components/schemas/authorization.yaml'
        examples:
          response-if-returning-an-existing-token:
            $ref: '../../components/examples/authorization-response-if-returning-an-existing-token-2.yaml'
    headers:
      Location:
        example: https://api.github.com/authorizations/1
        schema:
          type: string
  '201':
    description: |-
      > [!WARNING]
      > **Deprecation notice:** ${apiName} will discontinue the [OAuth Authorizations API](${externalDocsUrl}/rest/oauth-authorizations/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](${externalDocsUrl}/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](${externalDocsUrl}/rest/oauth-authorizations/oauth-authorizations) will be removed on November 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).
    content:
      application/json:
        schema:
          $ref: '../../components/schemas/authorization.yaml'
        examples:
          default:
            $ref: '../../components/examples/authorization.yaml'
    headers:
      Location:
        example: https://api.github.com/authorizations/1
        schema:
          type: string
  '422':
    $ref: '../../components/responses/validation_failed.yaml'
  '304':
    $ref: '../../components/responses/not_modified.yaml'
  '403':
    $ref: '../../components/responses/forbidden.yaml'
  '401':
    $ref: '../../components/responses/requires_authentication.yaml'
x-github-releases:
  - ghes: '>= 2.18'
x-github:
  githubCloudOnly: false
  enabledForGitHubApps: false
  removalDate: '2020-11-13'
  deprecationDate: '2020-02-14'
  category: oauth-authorizations
  subcategory: oauth-authorizations
deprecated: true
x-deprecation-details:
  date: '2020-02-14'
  sunsetDate: '2020-11-13'
x-github-internal:
  path: '/authorizations/clients/{client_id}'
  http-method: put
  service-tier: 2
  owner: '@github/ecosystem-apps'
  published: true
