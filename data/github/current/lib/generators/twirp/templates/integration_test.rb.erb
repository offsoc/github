# typed: true
# frozen_string_literal: true

require_relative "../../../../helper"

class <%= @current_service.handler_name %>::<%= @current_rpc.name %>Test < Api::Internal::Twirp::RPCTestCase
  rpc <%= @current_service.handler_name %>, :<%= @current_rpc.handler_method %>

  test "disallowed client is not allowed access" do
    rpc_request("disallowed")
    assert_disallowed last_response
  end

  test "successful request from allowed client" do
    # TODO: Provide request arguments as defined by your <%= @current_rpc.input_class.to_s.demodulize %> message definition
    arguments = {}
    rpc_request("allowed", **arguments)

    assert_equal 200, last_response.status, last_response.body

    # TODO: Check response as defined by your <%= @current_rpc.output_class.to_s.demodulize %> message definition
    response_json = JSON.parse(last_response.body)
    assert response_json
  end
end
