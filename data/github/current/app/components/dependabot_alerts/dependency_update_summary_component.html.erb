<%# erblint:counter DeprecatedComponentsCounter 5 %>
<% if show_pull_request? %>
  <%= render Primer::Beta::BorderBox.new(mb: 3, test_selector: "dependency-update-summary") do |border_box| %>
    <% border_box.with_body(display: :flex, flex_wrap: :wrap, align_items: :flex_start) do %>
      <span>
        <%= render Primer::Beta::Octicon.new(icon: pull_request_icon.octicon_name, color: pull_request_icon.primer_color, size: :medium, aria: { label: pull_request_icon.label }, test_selector: "#{pull_request_icon.state}-pull-request-icon") %>
      </span>

      <%= render Primer::Box.new(flex: 1, mx: 2, mb: [2, 0]) do %>
        <%= render Primer::Beta::Heading.new(tag: :h2, font_size: 4, font_weight: :semibold, mb: 1) do %>
          <%= render Primer::Beta::Link.new(href: pull_request_path, scheme: :primary, underline: false, data: pull_request_link_data_attributes, test_selector: "pull-request-link") do %>
            <%= pull_request_title %>
          <% end %>
        <% end %>

        <p class="mb-0">Merging this pull request would fix <%= related_alerts_link %> on <%= package_name %> in <%= manifest_link %>.</p>
      <% end %>

      <%= render Primer::ButtonComponent.new(scheme: pull_request_button_scheme, tag: :a, href: pull_request_path) do |button| %>
        <% button.with_leading_visual_icon(icon: "dependabot") %>
        <span>Review security update</span>
      <% end %>
    <% end %>
  <% end %>
<% elsif show_dependency_update_error? %>
  <%= render Primer::Beta::BorderBox.new(mb: 3, test_selector: "dependency-update-summary") do |border_box| %>
    <% border_box.with_body(display: :flex, align_items: :flex_start) do %>
      <%= render Primer::Beta::Octicon.new(icon: "alert", color: :attention, size: :medium) %>

      <%= render Primer::Box.new(flex: 1, ml: 2, classes: "overflow-x-auto") do %>
        <%= render Primer::Beta::Heading.new(tag: :h2, font_size: 4, font_weight: :semibold, mb: 2, color: :attention, test_selector: "error-title") do %>
          <%= dependency_update_error_title %>
        <% end %>

        <% if dependency_update_error_body %>
          <div class="comment-body markdown-body p-0 mb-3" <%= test_selector "error-body" %>>
            <%= helpers.github_flavored_markdown(dependency_update_error_body) %>
          </div>
        <% end %>

        <%= render Primer::Box.new(mt: 2, display: :flex, align_items: :center) do %>
          <%= form_tag create_dependency_update_path, test_selector_data_hash("create-update-form").merge(method: :post, class: "d-inline") do %>
            <%= render Primer::ButtonComponent.new(type: :submit, mr: 2, test_selector: "create-update-button") do |button| %>
              Try again
            <% end %>
          <% end %>

          <% if dependency_update_logs_available? %>
            <%= render Primer::ButtonComponent.new(tag: :a, href: dependency_update_logs_path, mr: 3, test_selector: "update-logs-link") do |button| %>
              View logs
            <% end %>
          <% end %>

          <%= render Primer::ButtonComponent.new(scheme: :link, tag: :a, href: dependency_update_troubleshooting_path, target: :_blank, test_selector: "learn-more-link") do |button| %>
            Learn more <span class="hide-sm">about troubleshooting Dependabot errors</span>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% elsif show_pending_dependency_update? %>
  <poll-include-fragment src="<%= dependency_update_status_path %>">
    <%= render Primer::Beta::BorderBox.new(mb: 3, test_selector: "dependency-update-summary") do |border_box| %>
      <% border_box.with_body(display: :flex, align_items: :flex_start) do %>
        <span data-hide-on-error><%= render Primer::Beta::Spinner.new(size: :medium, mt: -1, ml: -1, test_selector: "spinner") %></span>

        <%= render Primer::Box.new(flex: 1, ml: 2) do %>
          <%= render Primer::Beta::Heading.new(tag: :h2, font_size: 4, font_weight: :semibold, mb: 2) do %>
            Creating a security update for <%= package_name %>
          <% end %>

          <p>Dependabot is creating a security update to fix <%= related_alerts_link %> on <%= package_name %> in <%= manifest_link %>.</p>
          <p>
            Or, manually upgrade <%= package_name %> to version <span class="text-mono"><%= suggested_version %></span> or later.
            <% if dependency_upgrade_examples.any? %>
              For example:
            <% end %>
          </p>

          <% dependency_upgrade_examples.each do |example| %>
            <div class="highlight color-bg-subtle rounded p-3 mt-2 overflow-auto">
              <pre><%= example %></pre>
            </div>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
  </poll-include-fragment>
<% else # Prompt the user to create a dependency update pull request %>
  <%= render Primer::Beta::BorderBox.new(mb: 3, test_selector: "dependency-update-summary") do |border_box| %>
    <% border_box.with_body(display: [:block, :flex], align_items: :flex_start) do %>
      <%= render Primer::Beta::Octicon.new(icon: "versions", color: :muted, size: :medium, hide: :sm) %>

      <%= render Primer::Box.new(flex: :auto, ml: [0, 2]) do %>
        <%= render Primer::Beta::Heading.new(tag: :h2, font_size: 4, font_weight: :semibold, mb: 2) do %>
          Upgrade <%= package_name %> to fix <%= related_alerts_link %> in <%= manifest_link %>
        <% end %>

        <p>
          Upgrade <%= package_name %> to version <span class="text-mono"><%= suggested_version %></span> or later.
          <% if dependency_upgrade_examples.any? %>
            For example:
          <% end %>
        </p>

        <% dependency_upgrade_examples.each do |example| %>
          <div class="highlight color-bg-subtle rounded p-3 mb-2 overflow-auto">
            <pre><%= example %></pre>
          </div>
        <% end %>

        <% if show_create_update_button? %>
          <%= form_tag create_dependency_update_path, test_selector_data_hash("create-update-form").merge(method: :post) do %>
            <%= render Primer::ButtonComponent.new(type: :submit, scheme: :primary, mt: 2, w: :fit, test_selector: "create-update-button") do |button| %>
              <% button.with_leading_visual_icon(icon: "dependabot") %>
              <span>Create <span class="hide-sm">Dependabot</span> security update</span>
            <% end %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% end %>
