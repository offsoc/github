# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PlatformTypes::RepositoryRule`.
# Please instead update this file by running `bin/tapioca dsl PlatformTypes::RepositoryRule`.

class PlatformTypes::RepositoryRule < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig do
    returns(T.nilable(T.any(PlatformTypes::UpdateParameters, PlatformTypes::MergeQueueParameters, PlatformTypes::RequiredDeploymentsParameters, PlatformTypes::PullRequestParameters, PlatformTypes::RequiredStatusChecksParameters, PlatformTypes::CommitMessagePatternParameters, PlatformTypes::CommitAuthorEmailPatternParameters, PlatformTypes::CommitterEmailPatternParameters, PlatformTypes::BranchNamePatternParameters, PlatformTypes::TagNamePatternParameters, PlatformTypes::FilePathRestrictionParameters, PlatformTypes::MaxFilePathLengthParameters, PlatformTypes::FileExtensionRestrictionParameters, PlatformTypes::MaxFileSizeParameters, PlatformTypes::CommitOidParameters, PlatformTypes::WorkflowsParameters, PlatformTypes::CodeScanningParameters, PlatformTypes::RestrictRepositoryNameParameters, PlatformTypes::RestrictRepoVisibilityParameters)))
  end
  def parameters; end

  sig { returns(T::Boolean) }
  def parameters?; end

  sig { returns(T.nilable(PlatformTypes::RepositoryRuleset)) }
  def repository_ruleset; end

  sig { returns(T::Boolean) }
  def repository_ruleset?; end

  sig { returns(String) }
  def type; end

  sig { returns(T::Boolean) }
  def type?; end
end
