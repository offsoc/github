# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: query/v2/query_api.proto

require 'google/protobuf'

require 'google/protobuf/timestamp_pb'
require 'google/protobuf/duration_pb'
require 'query/v2/facets_pb'
require 'query/v2/git_document_match_pb'
require 'query/v2/search_result_pb'
require 'query/v2/shard_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("query/v2/query_api.proto", :syntax => :proto3) do
    add_message "blackbird.query.v2.QueryRequest" do
      optional :query, :string, 1
      optional :query_parser, :enum, 2, "blackbird.query.v2.QueryParser"
      optional :document_limit, :uint32, 3
      optional :document_location_limit, :uint32, 4
      optional :scoping_query, :string, 5
      optional :actor, :message, 6, "blackbird.query.v2.Actor"
      repeated :custom_scopes, :message, 8, "blackbird.query.v2.CustomScope"
      optional :snippet_options, :message, 9, "blackbird.query.v2.SnippetOptions"
      optional :query_type, :enum, 10, "blackbird.query.v2.QueryType"
      optional :request_timeout, :message, 11, "google.protobuf.Duration"
      optional :query_source, :enum, 12, "blackbird.query.v2.QuerySource"
      optional :page_number, :uint32, 13
      optional :results_per_page, :uint32, 14
      repeated :experiment_ids, :uint32, 7
      map :experiments, :string, :string, 15
      optional :return_enclosing_symbols, :bool, 16
      optional :tenant, :message, 17, "blackbird.query.v2.Tenant"
    end
    add_message "blackbird.query.v2.Actor" do
      optional :actor_id, :uint32, 1
      optional :access_token, :string, 2
      optional :request_ip, :string, 3
      optional :access_token_expires, :int64, 4
      optional :session_id, :string, 5
      optional :access_token_kind, :string, 6
    end
    add_message "blackbird.query.v2.SnippetOptions" do
      optional :mode, :enum, 1, "blackbird.query.v2.SnippetMode"
      optional :desired_width, :uint32, 2
      optional :high_density_snippet_max_lines, :uint32, 3
      optional :format, :enum, 4, "blackbird.query.v2.SnippetFormat"
      optional :max_token_count, :uint32, 5
    end
    add_message "blackbird.query.v2.QueryResponse" do
      repeated :documents, :message, 1, "blackbird.query.v2.GitDocumentMatch"
      repeated :query_errors, :message, 2, "blackbird.query.v2.QueryError"
      repeated :protected_organization_ids, :int64, 3
      optional :metadata, :message, 4, "blackbird.query.v2.Metadata"
      optional :serving_offset_queried, :int64, 5
      optional :count_mode, :enum, 6, "blackbird.query.v2.CountMode"
      optional :result_count, :uint64, 7
    end
    add_message "blackbird.query.v2.CustomScope" do
      optional :name, :string, 1
      optional :query, :string, 2
    end
    add_message "blackbird.query.v2.FrontendQueryRequest" do
      optional :query, :string, 1
      optional :query_parser, :enum, 2, "blackbird.query.v2.QueryParser"
      optional :document_limit, :uint32, 3
      optional :document_location_limit, :uint32, 4
      optional :scoping_query, :string, 5
      optional :actor, :message, 6, "blackbird.query.v2.Actor"
      optional :page_token, :string, 7
      optional :page_number, :int32, 8
      optional :results_per_page, :int32, 9
      optional :sha_format, :enum, 10, "blackbird.query.v2.SHAFormat"
      repeated :custom_scopes, :message, 11, "blackbird.query.v2.CustomScope"
      optional :snippet_options, :message, 12, "blackbird.query.v2.SnippetOptions"
      optional :request_timeout, :message, 13, "google.protobuf.Duration"
      map :experiments, :string, :string, 14
      optional :return_enclosing_symbols, :bool, 15
      optional :query_type, :enum, 16, "blackbird.query.v2.QueryType"
      optional :query_source, :enum, 17, "blackbird.query.v2.QuerySource"
      optional :tenant, :message, 18, "blackbird.query.v2.Tenant"
    end
    add_message "blackbird.query.v2.FrontendQueryResponse" do
      repeated :results, :message, 1, "blackbird.query.v2.SearchResult"
      repeated :query_errors, :message, 2, "blackbird.query.v2.QueryError"
      optional :page, :uint32, 3
      optional :page_count, :uint32, 4
      optional :result_count, :uint32, 5
      repeated :facets, :message, 6, "blackbird.query.v2.Facet"
      repeated :protected_organization_ids, :int64, 7
      optional :metadata, :message, 8, "blackbird.query.v2.Metadata"
    end
    add_message "blackbird.query.v2.LegacyQueryRequest" do
      optional :query, :string, 1
      optional :document_limit, :uint32, 2
      optional :document_location_limit, :uint32, 3
      optional :actor, :message, 4, "blackbird.query.v2.Actor"
      optional :page_number, :int32, 5
      optional :results_per_page, :int32, 6
      optional :snippet_options, :message, 7, "blackbird.query.v2.SnippetOptions"
      optional :request_timeout, :message, 8, "google.protobuf.Duration"
      map :experiments, :string, :string, 9
      optional :tenant, :message, 10, "blackbird.query.v2.Tenant"
    end
    add_message "blackbird.query.v2.LegacyQueryResponse" do
      repeated :results, :message, 1, "blackbird.query.v2.SearchResult"
      repeated :query_errors, :message, 2, "blackbird.query.v2.QueryError"
      optional :page, :uint32, 3
      optional :page_count, :uint32, 4
      optional :result_count, :uint32, 5
      optional :metadata, :message, 6, "blackbird.query.v2.Metadata"
    end
    add_message "blackbird.query.v2.Metadata" do
      optional :cluster_name, :string, 1
      optional :corpus_name, :string, 2
      repeated :experiments_enabled, :uint32, 3
      optional :query_ast, :string, 4
      optional :total_cost, :float, 5
      optional :retries, :uint32, 6
      optional :num_filtered_documents, :uint32, 7
      optional :satisfied, :bool, 8
      optional :limit_reached, :bool, 9
      optional :had_shard_failure, :bool, 10
      optional :is_failure, :bool, 11
      optional :timing, :message, 12, "blackbird.query.v2.Timing"
      repeated :shards, :message, 13, "blackbird.query.v2.ShardMetadata"
      optional :docs_returned, :uint32, 14
      optional :query_id, :string, 15
    end
    add_message "blackbird.query.v2.Timing" do
      optional :overall, :message, 1, "google.protobuf.Duration"
      optional :pre_search, :message, 2, "google.protobuf.Duration"
      optional :context_preparation, :message, 6, "google.protobuf.Duration"
      optional :cluster_selection, :message, 7, "google.protobuf.Duration"
      optional :query_parsing, :message, 8, "google.protobuf.Duration"
      optional :query_rewriting, :message, 9, "google.protobuf.Duration"
      optional :query_linting, :message, 10, "google.protobuf.Duration"
      optional :search, :message, 3, "google.protobuf.Duration"
      optional :fetch_missing_content, :message, 5, "google.protobuf.Duration"
      optional :post_search, :message, 4, "google.protobuf.Duration"
    end
    add_message "blackbird.query.v2.QueryError" do
      optional :type, :enum, 1, "blackbird.query.v2.ErrorType"
      optional :message, :string, 2
      repeated :ranges, :message, 3, "blackbird.query.v2.ErrorRange"
      optional :suggestion, :string, 4
      optional :missing_or_inaccessible_repo_org_nwo, :string, 5
    end
    add_message "blackbird.query.v2.ErrorRange" do
      optional :start, :uint32, 1
      optional :end, :uint32, 2
    end
    add_message "blackbird.query.v2.RefreshAuthCachesRequest" do
      optional :actor, :message, 1, "blackbird.query.v2.Actor"
    end
    add_message "blackbird.query.v2.RefreshAuthCachesResponse" do
      optional :user_cache_expires_at, :message, 1, "google.protobuf.Timestamp"
    end
    add_message "blackbird.query.v2.WarmCachesRequest" do
      optional :actor, :message, 1, "blackbird.query.v2.Actor"
    end
    add_message "blackbird.query.v2.WarmCachesResponse" do
      optional :user_cache_expires_at, :message, 1, "google.protobuf.Timestamp"
    end
    add_message "blackbird.query.v2.Tenant" do
      optional :tenant_id, :int64, 1
      optional :slug, :string, 2
      optional :shortcode, :string, 3
    end
    add_enum "blackbird.query.v2.QueryType" do
      value :QUERY_TYPE_INVALID, 0
      value :QUERY_TYPE_USER_QUERY, 1
      value :QUERY_TYPE_FIND_REFERENCES, 2
      value :QUERY_TYPE_FIND_DEFINITIONS, 3
    end
    add_enum "blackbird.query.v2.QueryParser" do
      value :QUERY_PARSER_INVALID, 0
      value :QUERY_PARSER_BLACKBIRD_V0, 1
      value :QUERY_PARSER_GEYSER, 2
    end
    add_enum "blackbird.query.v2.QuerySource" do
      value :QUERY_SOURCE_INVALID, 0
      value :QUERY_SOURCE_FRONTEND, 1
      value :QUERY_SOURCE_LEGACY_API, 2
      value :QUERY_SOURCE_PROBER, 3
      value :QUERY_SOURCE_COPILOT_API, 4
      value :QUERY_SOURCE_GRAPHQL_API, 5
      value :QUERY_SOURCE_COPILOT_IDE, 6
    end
    add_enum "blackbird.query.v2.SnippetMode" do
      value :SNIPPET_MODE_INVALID, 0
      value :SNIPPET_MODE_CONTEXT, 1
      value :SNIPPET_MODE_HIGH_DENSITY, 2
      value :SNIPPET_MODE_AUTO, 3
      value :SNIPPET_MODE_UNIFIED, 4
      value :SNIPPET_MODE_RAW_MATCHES, 5
      value :SNIPPET_MODE_LLM, 6
    end
    add_enum "blackbird.query.v2.SHAFormat" do
      value :SHA_FORMAT_INVALID, 0
      value :SHA_FORMAT_SHA1, 1
    end
    add_enum "blackbird.query.v2.CountMode" do
      value :COUNT_MODE_INVALID, 0
      value :COUNT_MODE_APPROXIMATE, 1
      value :COUNT_MODE_LOWER_BOUND, 2
    end
    add_enum "blackbird.query.v2.ErrorType" do
      value :ERROR_TYPE_INVALID, 0
      value :ERROR_TYPE_QUERY_PARSING_FATAL, 1
      value :ERROR_TYPE_QUERY_PARSING_WARNING, 2
      value :ERROR_TYPE_TIMEOUT, 3
      value :ERROR_TYPE_SEARCH_RESULTS_INCONSISTENT_WARNING, 4
      value :ERROR_TYPE_ACTOR_NOT_AUTHORIZED, 5
      value :ERROR_TYPE_SCOPE_UNSATISFIABLE, 6
      value :ERROR_TYPE_RESULTS_INCOMPLETE, 7
      value :ERROR_TYPE_MISSING_INACCESSIBLE_REPO_ORG, 8
    end
  end
end

module Blackbird
  module Query
    module V2
      QueryRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.QueryRequest").msgclass
      Actor = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.Actor").msgclass
      SnippetOptions = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.SnippetOptions").msgclass
      QueryResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.QueryResponse").msgclass
      CustomScope = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.CustomScope").msgclass
      FrontendQueryRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.FrontendQueryRequest").msgclass
      FrontendQueryResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.FrontendQueryResponse").msgclass
      LegacyQueryRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.LegacyQueryRequest").msgclass
      LegacyQueryResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.LegacyQueryResponse").msgclass
      Metadata = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.Metadata").msgclass
      Timing = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.Timing").msgclass
      QueryError = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.QueryError").msgclass
      ErrorRange = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.ErrorRange").msgclass
      RefreshAuthCachesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.RefreshAuthCachesRequest").msgclass
      RefreshAuthCachesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.RefreshAuthCachesResponse").msgclass
      WarmCachesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.WarmCachesRequest").msgclass
      WarmCachesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.WarmCachesResponse").msgclass
      Tenant = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.Tenant").msgclass
      QueryType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.QueryType").enummodule
      QueryParser = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.QueryParser").enummodule
      QuerySource = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.QuerySource").enummodule
      SnippetMode = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.SnippetMode").enummodule
      SHAFormat = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.SHAFormat").enummodule
      CountMode = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.CountMode").enummodule
      ErrorType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("blackbird.query.v2.ErrorType").enummodule
    end
  end
end
