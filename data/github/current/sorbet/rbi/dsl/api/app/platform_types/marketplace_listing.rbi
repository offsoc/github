# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Api::App::PlatformTypes::MarketplaceListing`.
# Please instead update this file by running `bin/tapioca dsl Api::App::PlatformTypes::MarketplaceListing`.

class Api::App::PlatformTypes::MarketplaceListing < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(T.nilable(Api::App::PlatformTypes::MarketplaceListingAdminInfo)) }
  def admin_info; end

  sig { returns(T::Boolean) }
  def admin_info?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::App)) }
  def app; end

  sig { returns(T::Boolean) }
  def app?; end

  sig { returns(T.nilable(T::Boolean)) }
  def are_published_paid_plans_allowed; end

  sig { returns(T::Boolean) }
  def are_published_paid_plans_allowed?; end

  sig { returns(T.nilable(T::Boolean)) }
  def can_initiate_financial_onboarding; end

  sig { returns(T::Boolean) }
  def can_initiate_financial_onboarding?; end

  sig { returns(T::Boolean) }
  def can_move_to_verified; end

  sig { returns(T::Boolean) }
  def can_move_to_verified?; end

  sig { returns(T::Boolean) }
  def can_move_to_verified_creator; end

  sig { returns(T::Boolean) }
  def can_move_to_verified_creator?; end

  sig { returns(T::Boolean) }
  def can_publish_with_paid_plans; end

  sig { returns(T::Boolean) }
  def can_publish_with_paid_plans?; end

  sig { returns(T::Array[Api::App::PlatformTypes::MarketplaceCategory]) }
  def categories; end

  sig { returns(T::Boolean) }
  def categories?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def company_url; end

  sig { returns(T::Boolean) }
  def company_url?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def configuration_resource_path; end

  sig { returns(T::Boolean) }
  def configuration_resource_path?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def configuration_url; end

  sig { returns(T::Boolean) }
  def configuration_url?; end

  sig { returns(T::Boolean) }
  def contact_info_is_completed; end

  sig { returns(T::Boolean) }
  def contact_info_is_completed?; end

  sig { returns(T.nilable(Integer)) }
  def database_id; end

  sig { returns(T::Boolean) }
  def database_id?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::MarketplaceListingPlan)) }
  def default_plan; end

  sig { returns(T::Boolean) }
  def default_plan?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def documentation_url; end

  sig { returns(T::Boolean) }
  def documentation_url?; end

  sig { returns(T.nilable(String)) }
  def extended_description; end

  sig { returns(T::Boolean) }
  def extended_description?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def extended_description_html; end

  sig { returns(T::Boolean) }
  def extended_description_html?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def featured_at; end

  sig { returns(T::Boolean) }
  def featured_at?; end

  sig { returns(T.nilable(T::Array[Api::App::PlatformTypes::MarketplaceListingFeaturedOrganization])) }
  def featured_organizations; end

  sig { returns(T::Boolean) }
  def featured_organizations?; end

  sig { returns(T.nilable(String)) }
  def finance_email; end

  sig { returns(T::Boolean) }
  def finance_email?; end

  sig { returns(String) }
  def full_description; end

  sig { returns(T::Boolean) }
  def full_description?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def full_description_html; end

  sig { returns(T::Boolean) }
  def full_description_html?; end

  sig { returns(T::Boolean) }
  def has_direct_billing; end

  sig { returns(T::Boolean) }
  def has_direct_billing?; end

  sig { returns(T::Boolean) }
  def has_installation_requirements_met; end

  sig { returns(T::Boolean) }
  def has_installation_requirements_met?; end

  sig { returns(T::Boolean) }
  def has_published_free_plans; end

  sig { returns(T::Boolean) }
  def has_published_free_plans?; end

  sig { returns(T::Boolean) }
  def has_published_free_trial_plans; end

  sig { returns(T::Boolean) }
  def has_published_free_trial_plans?; end

  sig { returns(T::Boolean) }
  def has_published_paid_plans; end

  sig { returns(T::Boolean) }
  def has_published_paid_plans?; end

  sig { returns(T.nilable(T::Boolean)) }
  def has_reached_maximum_plan_count; end

  sig { returns(T::Boolean) }
  def has_reached_maximum_plan_count?; end

  sig { returns(T::Boolean) }
  def has_terms_of_service; end

  sig { returns(T::Boolean) }
  def has_terms_of_service?; end

  sig { returns(T::Boolean) }
  def has_verified_owner; end

  sig { returns(T::Boolean) }
  def has_verified_owner?; end

  sig { returns(T.nilable(Integer)) }
  def hero_card_background_image_database_id; end

  sig { returns(T::Boolean) }
  def hero_card_background_image_database_id?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def hero_card_background_url; end

  sig { returns(T::Boolean) }
  def hero_card_background_url?; end

  sig { returns(T.nilable(String)) }
  def how_it_works; end

  sig { returns(T::Boolean) }
  def how_it_works?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def how_it_works_html; end

  sig { returns(T::Boolean) }
  def how_it_works_html?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::MarketplaceListingInsightConnection)) }
  def insights; end

  sig { returns(T::Boolean) }
  def insights?; end

  sig { returns(Integer) }
  def installation_count; end

  sig { returns(T::Boolean) }
  def installation_count?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def installation_url; end

  sig { returns(T::Boolean) }
  def installation_url?; end

  sig { returns(T.nilable(T::Boolean)) }
  def installation_url_requirement_is_met; end

  sig { returns(T::Boolean) }
  def installation_url_requirement_is_met?; end

  sig { returns(T::Boolean) }
  def installed_for_viewer; end

  sig { returns(T::Boolean) }
  def installed_for_viewer?; end

  sig { returns(T::Boolean) }
  def integratable_is_integration; end

  sig { returns(T::Boolean) }
  def integratable_is_integration?; end

  sig { returns(T::Boolean) }
  def integratable_is_oauth_application; end

  sig { returns(T::Boolean) }
  def integratable_is_oauth_application?; end

  sig { returns(String) }
  def integration_type; end

  sig { returns(T::Boolean) }
  def integration_type?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::MarketplaceAgreementSignature)) }
  def integrator_agreement_signature; end

  sig { returns(T::Boolean) }
  def integrator_agreement_signature?; end

  sig { returns(T::Boolean) }
  def is_archived; end

  sig { returns(T::Boolean) }
  def is_archived?; end

  sig { returns(T::Boolean) }
  def is_by_github; end

  sig { returns(T::Boolean) }
  def is_by_github?; end

  sig { returns(T::Boolean) }
  def is_draft; end

  sig { returns(T::Boolean) }
  def is_draft?; end

  sig { returns(T::Boolean) }
  def is_featurable; end

  sig { returns(T::Boolean) }
  def is_featurable?; end

  sig { returns(T::Boolean) }
  def is_featured; end

  sig { returns(T::Boolean) }
  def is_featured?; end

  sig { returns(T::Boolean) }
  def is_light_text; end

  sig { returns(T::Boolean) }
  def is_light_text?; end

  sig { returns(T::Boolean) }
  def is_owner_verification_pending; end

  sig { returns(T::Boolean) }
  def is_owner_verification_pending?; end

  sig { returns(T::Boolean) }
  def is_paid; end

  sig { returns(T::Boolean) }
  def is_paid?; end

  sig { returns(T::Boolean) }
  def is_pending_approval; end

  sig { returns(T::Boolean) }
  def is_pending_approval?; end

  sig { returns(T::Boolean) }
  def is_public; end

  sig { returns(T::Boolean) }
  def is_public?; end

  sig { returns(T::Boolean) }
  def is_publish_pending; end

  sig { returns(T::Boolean) }
  def is_publish_pending?; end

  sig { returns(T::Boolean) }
  def is_ready_for_submission; end

  sig { returns(T::Boolean) }
  def is_ready_for_submission?; end

  sig { returns(T::Boolean) }
  def is_recommended; end

  sig { returns(T::Boolean) }
  def is_recommended?; end

  sig { returns(T::Boolean) }
  def is_rejected; end

  sig { returns(T::Boolean) }
  def is_rejected?; end

  sig { returns(T::Boolean) }
  def is_unverified; end

  sig { returns(T::Boolean) }
  def is_unverified?; end

  sig { returns(T::Boolean) }
  def is_unverified_pending; end

  sig { returns(T::Boolean) }
  def is_unverified_pending?; end

  sig { returns(T::Boolean) }
  def is_verification_pending_from_draft; end

  sig { returns(T::Boolean) }
  def is_verification_pending_from_draft?; end

  sig { returns(T::Boolean) }
  def is_verification_pending_from_unverified; end

  sig { returns(T::Boolean) }
  def is_verification_pending_from_unverified?; end

  sig { returns(T::Boolean) }
  def is_verified; end

  sig { returns(T::Boolean) }
  def is_verified?; end

  sig { returns(T::Boolean) }
  def is_verified_creator; end

  sig { returns(T::Boolean) }
  def is_verified_creator?; end

  sig { returns(T::Boolean) }
  def is_verified_listing; end

  sig { returns(T::Boolean) }
  def is_verified_listing?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::LanguageConnection)) }
  def languages; end

  sig { returns(T::Boolean) }
  def languages?; end

  sig { returns(T::Boolean) }
  def listing_description_is_completed; end

  sig { returns(T::Boolean) }
  def listing_description_is_completed?; end

  sig { returns(T::Boolean) }
  def listing_details_are_completed; end

  sig { returns(T::Boolean) }
  def listing_details_are_completed?; end

  sig { returns(T::Boolean) }
  def logo_and_feature_card_are_completed; end

  sig { returns(T::Boolean) }
  def logo_and_feature_card_are_completed?; end

  sig { returns(String) }
  def logo_background_color; end

  sig { returns(T::Boolean) }
  def logo_background_color?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def logo_url; end

  sig { returns(T::Boolean) }
  def logo_url?; end

  sig { returns(T.nilable(String)) }
  def marketing_email; end

  sig { returns(T::Boolean) }
  def marketing_email?; end

  sig { returns(String) }
  def name; end

  sig { returns(T::Boolean) }
  def name?; end

  sig { returns(T::Boolean) }
  def naming_and_links_are_completed; end

  sig { returns(T::Boolean) }
  def naming_and_links_are_completed?; end

  sig { returns(String) }
  def normalized_short_description; end

  sig { returns(T::Boolean) }
  def normalized_short_description?; end

  sig { returns(T.nilable(Integer)) }
  def oauth_application_database_id; end

  sig { returns(T::Boolean) }
  def oauth_application_database_id?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def og_image_url; end

  sig { returns(T::Boolean) }
  def og_image_url?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::InterfaceType)) }
  def owner; end

  sig { returns(T::Boolean) }
  def owner?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::MarketplaceListingPlanConnection)) }
  def plans; end

  sig { returns(T::Boolean) }
  def plans?; end

  sig { returns(T::Boolean) }
  def plans_and_pricing_are_completed; end

  sig { returns(T::Boolean) }
  def plans_and_pricing_are_completed?; end

  sig { returns(T.nilable(String)) }
  def previous_state; end

  sig { returns(T::Boolean) }
  def previous_state?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def pricing_url; end

  sig { returns(T::Boolean) }
  def pricing_url?; end

  sig { returns(Api::App::PlatformTypes::MarketplaceCategory) }
  def primary_category; end

  sig { returns(T::Boolean) }
  def primary_category?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def privacy_policy_url; end

  sig { returns(T::Boolean) }
  def privacy_policy_url?; end

  sig { returns(T::Boolean) }
  def product_screenshots_are_completed; end

  sig { returns(T::Boolean) }
  def product_screenshots_are_completed?; end

  sig { returns(Integer) }
  def remaining_plan_count; end

  sig { returns(T::Boolean) }
  def remaining_plan_count?; end

  sig { returns(Integer) }
  def remaining_screenshot_count; end

  sig { returns(T::Boolean) }
  def remaining_screenshot_count?; end

  sig { returns(Integer) }
  def required_installations_for_verification; end

  sig { returns(T::Boolean) }
  def required_installations_for_verification?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def resource_path; end

  sig { returns(T::Boolean) }
  def resource_path?; end

  sig { returns(T::Array[String]) }
  def screenshot_urls; end

  sig { returns(T::Boolean) }
  def screenshot_urls?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::MarketplaceListingScreenshotConnection)) }
  def screenshots; end

  sig { returns(T::Boolean) }
  def screenshots?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::MarketplaceCategory)) }
  def secondary_category; end

  sig { returns(T::Boolean) }
  def secondary_category?; end

  sig { returns(T.nilable(String)) }
  def security_email; end

  sig { returns(T::Boolean) }
  def security_email?; end

  sig { returns(String) }
  def short_description; end

  sig { returns(T::Boolean) }
  def short_description?; end

  sig { returns(T::Boolean) }
  def show_paid_plan_checks_on_draft_listing; end

  sig { returns(T::Boolean) }
  def show_paid_plan_checks_on_draft_listing?; end

  sig { returns(T::Boolean) }
  def show_social_proof; end

  sig { returns(T::Boolean) }
  def show_social_proof?; end

  sig { returns(String) }
  def slug; end

  sig { returns(T::Boolean) }
  def slug?; end

  sig { returns(String) }
  def status; end

  sig { returns(T::Boolean) }
  def status?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def status_url; end

  sig { returns(T::Boolean) }
  def status_url?; end

  sig { returns(Api::App::PlatformTypes::SubscriptionItemConnection) }
  def subscription_items; end

  sig { returns(T::Boolean) }
  def subscription_items?; end

  sig { returns(T.nilable(String)) }
  def support_email; end

  sig { returns(T::Boolean) }
  def support_email?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def support_url; end

  sig { returns(T::Boolean) }
  def support_url?; end

  sig { returns(T.nilable(String)) }
  def technical_email; end

  sig { returns(T::Boolean) }
  def technical_email?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def terms_of_service_url; end

  sig { returns(T::Boolean) }
  def terms_of_service_url?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def url; end

  sig { returns(T::Boolean) }
  def url?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::MarketplaceListingPlan)) }
  def viewer_active_plan; end

  sig { returns(T::Boolean) }
  def viewer_active_plan?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::OrganizationConnection)) }
  def viewer_billed_organizations; end

  sig { returns(T::Boolean) }
  def viewer_billed_organizations?; end

  sig { returns(T::Boolean) }
  def viewer_can_add_plans; end

  sig { returns(T::Boolean) }
  def viewer_can_add_plans?; end

  sig { returns(T::Boolean) }
  def viewer_can_approve; end

  sig { returns(T::Boolean) }
  def viewer_can_approve?; end

  sig { returns(T::Boolean) }
  def viewer_can_delist; end

  sig { returns(T::Boolean) }
  def viewer_can_delist?; end

  sig { returns(T::Boolean) }
  def viewer_can_edit; end

  sig { returns(T::Boolean) }
  def viewer_can_edit?; end

  sig { returns(T::Boolean) }
  def viewer_can_edit_categories; end

  sig { returns(T::Boolean) }
  def viewer_can_edit_categories?; end

  sig { returns(T::Boolean) }
  def viewer_can_edit_plans; end

  sig { returns(T::Boolean) }
  def viewer_can_edit_plans?; end

  sig { returns(T::Boolean) }
  def viewer_can_read_insights; end

  sig { returns(T::Boolean) }
  def viewer_can_read_insights?; end

  sig { returns(T::Boolean) }
  def viewer_can_redraft; end

  sig { returns(T::Boolean) }
  def viewer_can_redraft?; end

  sig { returns(T::Boolean) }
  def viewer_can_reject; end

  sig { returns(T::Boolean) }
  def viewer_can_reject?; end

  sig { returns(T::Boolean) }
  def viewer_can_request_approval; end

  sig { returns(T::Boolean) }
  def viewer_can_request_approval?; end

  sig { returns(T::Boolean) }
  def viewer_can_request_unverified_approval; end

  sig { returns(T::Boolean) }
  def viewer_can_request_unverified_approval?; end

  sig { returns(T::Boolean) }
  def viewer_can_sign_end_user_agreement; end

  sig { returns(T::Boolean) }
  def viewer_can_sign_end_user_agreement?; end

  sig { returns(T::Boolean) }
  def viewer_can_sign_integrator_agreement; end

  sig { returns(T::Boolean) }
  def viewer_can_sign_integrator_agreement?; end

  sig { returns(T::Boolean) }
  def viewer_has_purchased; end

  sig { returns(T::Boolean) }
  def viewer_has_purchased?; end

  sig { returns(T::Boolean) }
  def viewer_has_purchased_for_all_organizations; end

  sig { returns(T::Boolean) }
  def viewer_has_purchased_for_all_organizations?; end

  sig { returns(T::Boolean) }
  def viewer_has_signed_latest_end_user_agreement; end

  sig { returns(T::Boolean) }
  def viewer_has_signed_latest_end_user_agreement?; end

  sig { returns(T::Boolean) }
  def viewer_has_signed_latest_integrator_agreement; end

  sig { returns(T::Boolean) }
  def viewer_has_signed_latest_integrator_agreement?; end

  sig { returns(T::Boolean) }
  def viewer_is_listing_admin; end

  sig { returns(T::Boolean) }
  def viewer_is_listing_admin?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::SubscriptionItemConnection)) }
  def viewer_organization_subscription_items; end

  sig { returns(T::Boolean) }
  def viewer_organization_subscription_items?; end

  sig { returns(T::Boolean) }
  def webhook_is_completed; end

  sig { returns(T::Boolean) }
  def webhook_is_completed?; end
end
