# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Driftwood::Auditlog::V1::UserAuditEntriesRequest`.
# Please instead update this file by running `bin/tapioca dsl Driftwood::Auditlog::V1::UserAuditEntriesRequest`.

class Driftwood::Auditlog::V1::UserAuditEntriesRequest
  sig do
    params(
      after: T.nilable(String),
      allowlist: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      api_request: T.nilable(T::Boolean),
      before: T.nilable(String),
      export_request: T.nilable(T::Boolean),
      feature_flags: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      non_sso_org_ids: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer])),
      per_page: T.nilable(Integer),
      phrase: T.nilable(String),
      region: T.nilable(Driftwood::Auditlog::V1::Region),
      user_id: T.nilable(Integer)
    ).void
  end
  def initialize(after: nil, allowlist: T.unsafe(nil), api_request: nil, before: nil, export_request: nil, feature_flags: T.unsafe(nil), non_sso_org_ids: T.unsafe(nil), per_page: nil, phrase: nil, region: nil, user_id: nil); end

  sig { returns(String) }
  def after; end

  sig { params(value: String).void }
  def after=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def allowlist; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def allowlist=(value); end

  sig { returns(T::Boolean) }
  def api_request; end

  sig { params(value: T::Boolean).void }
  def api_request=(value); end

  sig { returns(String) }
  def before; end

  sig { params(value: String).void }
  def before=(value); end

  sig { void }
  def clear_after; end

  sig { void }
  def clear_allowlist; end

  sig { void }
  def clear_api_request; end

  sig { void }
  def clear_before; end

  sig { void }
  def clear_export_request; end

  sig { void }
  def clear_feature_flags; end

  sig { void }
  def clear_non_sso_org_ids; end

  sig { void }
  def clear_per_page; end

  sig { void }
  def clear_phrase; end

  sig { void }
  def clear_region; end

  sig { void }
  def clear_user_id; end

  sig { returns(T::Boolean) }
  def export_request; end

  sig { params(value: T::Boolean).void }
  def export_request=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def feature_flags; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def feature_flags=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def non_sso_org_ids; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def non_sso_org_ids=(value); end

  sig { returns(Integer) }
  def per_page; end

  sig { params(value: Integer).void }
  def per_page=(value); end

  sig { returns(String) }
  def phrase; end

  sig { params(value: String).void }
  def phrase=(value); end

  sig { returns(T.nilable(Driftwood::Auditlog::V1::Region)) }
  def region; end

  sig { params(value: T.nilable(Driftwood::Auditlog::V1::Region)).void }
  def region=(value); end

  sig { returns(Integer) }
  def user_id; end

  sig { params(value: Integer).void }
  def user_id=(value); end
end
