# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: services/largerrunners.proto

require 'google/protobuf'

require 'google/protobuf/timestamp_pb'
require 'google/protobuf/wrappers_pb'
require 'pbtypes/github_pb'
require 'services/selfhostedrunners_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("services/largerrunners.proto", :syntax => :proto3) do
    add_message "git_hub.launch.services.largerrunners.Pool" do
      optional :id, :int64, 1
      optional :name, :string, 2
      optional :state, :enum, 3, "git_hub.launch.services.largerrunners.PoolState"
      optional :platform, :string, 4
      optional :runner_group_id, :int64, 5
      repeated :labels, :string, 6
      optional :ephemeral, :bool, 7
      optional :runner_count, :int64, 8
      optional :is_dev, :bool, 9
      optional :image, :message, 10, "git_hub.launch.services.largerrunners.ImageKey"
      optional :group_name, :string, 15
      optional :inherited, :bool, 16
      optional :machine_spec, :message, 17, "git_hub.launch.services.largerrunners.MachineSpec"
      optional :last_active_on, :string, 18
      optional :maximum_runners, :int64, 19
      optional :machine_spec_id, :string, 20
      optional :unavailable_runner_count, :int64, 21
      repeated :public_ips, :message, 22, "git_hub.launch.services.largerrunners.PublicIP"
      optional :persistent_os_disk, :bool, 24
      optional :error_code, :string, 25
      optional :public_ip_enabled, :bool, 26
    end
    add_message "git_hub.launch.services.largerrunners.ImageKey" do
      optional :source, :enum, 1, "git_hub.launch.services.largerrunners.ImageKey.ImageSource"
      optional :id, :string, 2
      optional :version, :string, 3
    end
    add_enum "git_hub.launch.services.largerrunners.ImageKey.ImageSource" do
      value :Marketplace, 0
      value :Enterprise, 1
      value :Curated, 2
      value :Custom, 3
    end
    add_message "git_hub.launch.services.largerrunners.ImageDefinition" do
      optional :id, :int64, 1
      optional :name, :string, 2
      optional :osType, :enum, 3, "git_hub.launch.services.largerrunners.ImageDefinition.OsType"
      optional :state, :enum, 4, "git_hub.launch.services.largerrunners.ImageDefinition.ImageDefinitionState"
      optional :versionCount, :int64, 5
      optional :totalVersionsSize, :int64, 6
      optional :latestVersion, :message, 7, "google.protobuf.StringValue"
      optional :platform, :string, 9
    end
    add_enum "git_hub.launch.services.largerrunners.ImageDefinition.OsType" do
      value :Windows, 0
      value :Linux, 1
    end
    add_enum "git_hub.launch.services.largerrunners.ImageDefinition.ImageDefinitionState" do
      value :Provisioning, 0
      value :Ready, 1
      value :Deleting, 2
    end
    add_message "git_hub.launch.services.largerrunners.ImageVersion" do
      optional :version, :string, 1
      optional :state, :enum, 2, "git_hub.launch.services.largerrunners.ImageVersion.ImageState"
      optional :failure_reason, :enum, 3, "git_hub.launch.services.largerrunners.ImageVersion.FailureReason"
      optional :created_on, :message, 4, "google.protobuf.Timestamp"
      optional :size, :message, 5, "google.protobuf.Int32Value"
      optional :last_used_on, :message, 6, "google.protobuf.StringValue"
    end
    add_enum "git_hub.launch.services.largerrunners.ImageVersion.ImageState" do
      value :ImportingBlob, 0
      value :ImportFailed, 1
      value :ProvisioningImageVersion, 2
      value :Ready, 3
      value :Deleting, 4
      value :Generating, 5
    end
    add_enum "git_hub.launch.services.largerrunners.ImageVersion.FailureReason" do
      value :None, 0
      value :AuthenticationFailed, 1
      value :InvalidSasUri, 2
      value :ResourceNotFound, 3
      value :InvalidVirtualDisk, 4
    end
    add_message "git_hub.launch.services.largerrunners.ListPoolsRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :plan_owner_id, :message, 2, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :entity_id, :message, 3, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :entity_is_private, :bool, 4
      optional :is_public_ip_enabled, :message, 5, "google.protobuf.BoolValue"
    end
    add_message "git_hub.launch.services.largerrunners.ListPoolsResponse" do
      repeated :pools, :message, 1, "git_hub.launch.services.largerrunners.Pool"
    end
    add_message "git_hub.launch.services.largerrunners.GetPoolRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :pool_id, :int64, 2
    end
    add_message "git_hub.launch.services.largerrunners.GetPoolResponse" do
      optional :pool, :message, 1, "git_hub.launch.services.largerrunners.Pool"
    end
    add_message "git_hub.launch.services.largerrunners.CreatePoolRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :name, :string, 2
      optional :platform, :string, 3
      optional :runner_group_id, :int64, 4
      repeated :labels, :string, 5
      optional :image, :message, 7, "git_hub.launch.services.largerrunners.ImageKey"
      optional :is_public_ip_enabled, :bool, 9
      optional :image_sas_uri, :string, 10
      optional :maximum_runners, :int64, 12
      optional :machine_spec_id, :string, 13
      optional :persistent_os_disk, :bool, 14
    end
    add_message "git_hub.launch.services.largerrunners.CreatePoolResponse" do
      optional :pool, :message, 1, "git_hub.launch.services.largerrunners.Pool"
    end
    add_message "git_hub.launch.services.largerrunners.UpdatePoolRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :pool_id, :int64, 2
      optional :name, :string, 3
      optional :platform, :string, 4
      optional :runner_group_id, :int64, 5
      repeated :labels, :string, 6
      optional :is_public_ip_enabled, :bool, 10
      optional :maximum_runners, :int64, 13
      optional :machine_spec_id, :string, 14
      optional :image, :message, 15, "git_hub.launch.services.largerrunners.ImageKey"
    end
    add_message "git_hub.launch.services.largerrunners.UpdatePoolResponse" do
      optional :pool, :message, 1, "git_hub.launch.services.largerrunners.Pool"
    end
    add_message "git_hub.launch.services.largerrunners.DeletePoolRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :pool_id, :int64, 2
    end
    add_message "git_hub.launch.services.largerrunners.DeletePoolResponse" do
      optional :status, :string, 1
      optional :pool, :message, 2, "git_hub.launch.services.largerrunners.Pool"
    end
    add_message "git_hub.launch.services.largerrunners.ListImageDefinitionsRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
    end
    add_message "git_hub.launch.services.largerrunners.ListImageDefinitionsResponse" do
      repeated :image_definitions, :message, 1, "git_hub.launch.services.largerrunners.ImageDefinition"
    end
    add_message "git_hub.launch.services.largerrunners.GetImageDefinitionRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :image_definition_id, :int64, 2
    end
    add_message "git_hub.launch.services.largerrunners.GetImageDefinitionResponse" do
      optional :image_definition, :message, 1, "git_hub.launch.services.largerrunners.ImageDefinition"
    end
    add_message "git_hub.launch.services.largerrunners.DeleteImageDefinitionRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :image_definition_id, :int64, 2
    end
    add_message "git_hub.launch.services.largerrunners.DeleteImageDefinitionResponse" do
      optional :status, :string, 1
    end
    add_message "git_hub.launch.services.largerrunners.GetImageVersionRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :image_definition_id, :int64, 2
      optional :image_version, :string, 3
    end
    add_message "git_hub.launch.services.largerrunners.GetImageVersionResponse" do
      optional :image_version, :message, 1, "git_hub.launch.services.largerrunners.ImageVersion"
    end
    add_message "git_hub.launch.services.largerrunners.CreateImageVersionRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :image_definition_id, :int64, 2
      optional :image_sas_uri, :string, 3
    end
    add_message "git_hub.launch.services.largerrunners.CreateImageVersionResponse" do
      optional :image_version, :message, 1, "git_hub.launch.services.largerrunners.ImageVersion"
    end
    add_message "git_hub.launch.services.largerrunners.ListImageVersionsRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :image_definition_id, :int64, 2
    end
    add_message "git_hub.launch.services.largerrunners.ListImageVersionsResponse" do
      repeated :image_versions, :message, 1, "git_hub.launch.services.largerrunners.ImageVersion"
    end
    add_message "git_hub.launch.services.largerrunners.DeleteImageVersionRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :image_definition_id, :int64, 2
      optional :image_version, :string, 3
    end
    add_message "git_hub.launch.services.largerrunners.DeleteImageVersionResponse" do
      optional :status, :string, 1
    end
    add_message "git_hub.launch.services.largerrunners.ListPoolAgentsRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :pool_id, :int64, 2
    end
    add_message "git_hub.launch.services.largerrunners.ListPoolAgentsResponse" do
      repeated :agents, :message, 1, "git_hub.launch.services.selfhostedrunners.Runner"
    end
    add_message "git_hub.launch.services.largerrunners.PublicIP" do
      optional :enabled, :bool, 1
      optional :prefix, :string, 2
      optional :length, :int64, 3
    end
    add_message "git_hub.launch.services.largerrunners.MachineSpec" do
      optional :cpu_cores, :int64, 2
      optional :memory_gb, :int64, 3
      optional :storage_gb, :int64, 4
      optional :type, :string, 5
      optional :gpu, :message, 7, "git_hub.launch.services.largerrunners.MachineSpecGpu"
      optional :documentation_url, :string, 8
      optional :id, :string, 9
      optional :architecture, :string, 10
    end
    add_message "git_hub.launch.services.largerrunners.MachineSpecGpu" do
      optional :name, :string, 1
      optional :count, :uint32, 2
      optional :memory_gb, :uint64, 3
    end
    add_message "git_hub.launch.services.largerrunners.ListMachineSpecsRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
    end
    add_message "git_hub.launch.services.largerrunners.ListMachineSpecsResponse" do
      repeated :machineSpecs, :message, 1, "git_hub.launch.services.largerrunners.MachineSpec"
    end
    add_message "git_hub.launch.services.largerrunners.Image" do
      optional :id, :string, 1
      optional :display_name, :string, 2
      optional :size_gb, :int64, 3
      optional :platform, :string, 4
    end
    add_message "git_hub.launch.services.largerrunners.ListCuratedImagesRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
    end
    add_message "git_hub.launch.services.largerrunners.ListCuratedImagesResponse" do
      repeated :images, :message, 1, "git_hub.launch.services.largerrunners.Image"
    end
    add_message "git_hub.launch.services.largerrunners.ListMarketplaceImagesRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
    end
    add_message "git_hub.launch.services.largerrunners.ListMarketplaceImagesResponse" do
      repeated :images, :message, 1, "git_hub.launch.services.largerrunners.Image"
    end
    add_message "git_hub.launch.services.largerrunners.ListLabelsRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
    end
    add_message "git_hub.launch.services.largerrunners.ListLabelsResponse" do
      repeated :labels, :string, 1
    end
    add_message "git_hub.launch.services.largerrunners.GetTenantInfoRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
    end
    add_message "git_hub.launch.services.largerrunners.GetTenantInfoResponse" do
      optional :tenant_id, :string, 1
      optional :runner_scale_unit, :string, 2
    end
    add_message "git_hub.launch.services.largerrunners.BetaFeature" do
      optional :name, :string, 1
      optional :enabled_for_user, :bool, 2
      optional :enabled_globally, :bool, 3
    end
    add_message "git_hub.launch.services.largerrunners.ListBetaFeaturesRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
    end
    add_message "git_hub.launch.services.largerrunners.ListBetaFeaturesResponse" do
      repeated :features, :message, 1, "git_hub.launch.services.largerrunners.BetaFeature"
    end
    add_message "git_hub.launch.services.largerrunners.GetBetaFeatureRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :feature_name, :string, 2
    end
    add_message "git_hub.launch.services.largerrunners.GetBetaFeatureResponse" do
      optional :feature, :message, 1, "git_hub.launch.services.largerrunners.BetaFeature"
    end
    add_message "git_hub.launch.services.largerrunners.SetBetaFeatureRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :feature_name, :string, 2
      optional :enabled, :bool, 3
    end
    add_message "git_hub.launch.services.largerrunners.SetBetaFeatureResponse" do
      optional :feature, :message, 1, "git_hub.launch.services.largerrunners.BetaFeature"
    end
    add_enum "git_hub.launch.services.largerrunners.PoolState" do
      value :Provisioning, 0
      value :Ready, 1
      value :Deleting, 2
      value :Stuck, 3
      value :ShutdownBilling, 4
      value :ShutdownSpammy, 5
      value :ShutdownNetwork, 6
    end
  end
end

module GitHub
  module Launch
    module Services
      module Largerrunners
        Pool = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.Pool").msgclass
        ImageKey = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ImageKey").msgclass
        ImageKey::ImageSource = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ImageKey.ImageSource").enummodule
        ImageDefinition = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ImageDefinition").msgclass
        ImageDefinition::OsType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ImageDefinition.OsType").enummodule
        ImageDefinition::ImageDefinitionState = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ImageDefinition.ImageDefinitionState").enummodule
        ImageVersion = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ImageVersion").msgclass
        ImageVersion::ImageState = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ImageVersion.ImageState").enummodule
        ImageVersion::FailureReason = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ImageVersion.FailureReason").enummodule
        ListPoolsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ListPoolsRequest").msgclass
        ListPoolsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ListPoolsResponse").msgclass
        GetPoolRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.GetPoolRequest").msgclass
        GetPoolResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.GetPoolResponse").msgclass
        CreatePoolRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.CreatePoolRequest").msgclass
        CreatePoolResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.CreatePoolResponse").msgclass
        UpdatePoolRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.UpdatePoolRequest").msgclass
        UpdatePoolResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.UpdatePoolResponse").msgclass
        DeletePoolRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.DeletePoolRequest").msgclass
        DeletePoolResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.DeletePoolResponse").msgclass
        ListImageDefinitionsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ListImageDefinitionsRequest").msgclass
        ListImageDefinitionsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ListImageDefinitionsResponse").msgclass
        GetImageDefinitionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.GetImageDefinitionRequest").msgclass
        GetImageDefinitionResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.GetImageDefinitionResponse").msgclass
        DeleteImageDefinitionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.DeleteImageDefinitionRequest").msgclass
        DeleteImageDefinitionResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.DeleteImageDefinitionResponse").msgclass
        GetImageVersionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.GetImageVersionRequest").msgclass
        GetImageVersionResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.GetImageVersionResponse").msgclass
        CreateImageVersionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.CreateImageVersionRequest").msgclass
        CreateImageVersionResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.CreateImageVersionResponse").msgclass
        ListImageVersionsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ListImageVersionsRequest").msgclass
        ListImageVersionsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ListImageVersionsResponse").msgclass
        DeleteImageVersionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.DeleteImageVersionRequest").msgclass
        DeleteImageVersionResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.DeleteImageVersionResponse").msgclass
        ListPoolAgentsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ListPoolAgentsRequest").msgclass
        ListPoolAgentsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ListPoolAgentsResponse").msgclass
        PublicIP = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.PublicIP").msgclass
        MachineSpec = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.MachineSpec").msgclass
        MachineSpecGpu = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.MachineSpecGpu").msgclass
        ListMachineSpecsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ListMachineSpecsRequest").msgclass
        ListMachineSpecsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ListMachineSpecsResponse").msgclass
        Image = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.Image").msgclass
        ListCuratedImagesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ListCuratedImagesRequest").msgclass
        ListCuratedImagesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ListCuratedImagesResponse").msgclass
        ListMarketplaceImagesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ListMarketplaceImagesRequest").msgclass
        ListMarketplaceImagesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ListMarketplaceImagesResponse").msgclass
        ListLabelsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ListLabelsRequest").msgclass
        ListLabelsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ListLabelsResponse").msgclass
        GetTenantInfoRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.GetTenantInfoRequest").msgclass
        GetTenantInfoResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.GetTenantInfoResponse").msgclass
        BetaFeature = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.BetaFeature").msgclass
        ListBetaFeaturesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ListBetaFeaturesRequest").msgclass
        ListBetaFeaturesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.ListBetaFeaturesResponse").msgclass
        GetBetaFeatureRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.GetBetaFeatureRequest").msgclass
        GetBetaFeatureResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.GetBetaFeatureResponse").msgclass
        SetBetaFeatureRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.SetBetaFeatureRequest").msgclass
        SetBetaFeatureResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.SetBetaFeatureResponse").msgclass
        PoolState = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.largerrunners.PoolState").enummodule
      end
    end
  end
end
