# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: core/v1/repositories_api.proto

require 'google/protobuf'

require_relative '../../core/v1/actor_pb'
require_relative '../../core/v1/identity_pb'
require_relative '../../core/v1/repository_pb'
require_relative '../../core/v1/repository_visibility_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("core/v1/repositories_api.proto", :syntax => :proto3) do
    add_message "actions.core.v1.CheckRepositoryActionsStatusRequest" do
      optional :id, :int64, 1
    end
    add_message "actions.core.v1.CheckRepositoryActionsStatusResponse" do
      optional :can_use_actions, :bool, 1
      optional :reason, :string, 2
    end
    add_message "actions.core.v1.GetRepositoryOwnersRequest" do
      optional :id, :int64, 1
    end
    add_message "actions.core.v1.GetRepositoryOwnersResponse" do
      optional :repository, :message, 1, "actions.core.v1.Actor"
      optional :owner, :message, 2, "actions.core.v1.Actor"
      optional :business, :message, 3, "actions.core.v1.Actor"
      optional :owner_plan_name, :string, 4
    end
    add_message "actions.core.v1.GetRepositoryOwnerIdRequest" do
      optional :id, :int64, 1
    end
    add_message "actions.core.v1.GetRepositoryOwnerIdResponse" do
      optional :owner_id, :int64, 1
    end
    add_message "actions.core.v1.GetCommitMessageRequest" do
      optional :repository_id, :int64, 1
      optional :commit_sha, :string, 2
    end
    add_message "actions.core.v1.GetCommitMessageResponse" do
      optional :commit_message, :string, 1
    end
    add_message "actions.core.v1.RetireNamespaceRequest" do
      optional :nwo, :string, 1
    end
    add_message "actions.core.v1.RetireNamespaceResponse" do
    end
    add_message "actions.core.v1.FindRepositoriesByNameRequest" do
      repeated :nwos, :string, 1
    end
    add_message "actions.core.v1.FindRepositoriesByNameResponse" do
      repeated :repositories, :message, 1, "actions.core.v1.Repository"
      optional :repositories_not_found_error_message, :string, 2
    end
    add_message "actions.core.v1.GetAdditionalWorkflowsRequest" do
      optional :repository_id, :int64, 1
      optional :event_type, :string, 2
      optional :base_ref, :string, 3
      optional :before_oid, :string, 4
      optional :after_oid, :string, 5
    end
    add_message "actions.core.v1.GetAdditionalWorkflowsResponse" do
      repeated :ruleset_workflows, :message, 2, "actions.core.v1.RequiredWorkflow"
    end
    add_message "actions.core.v1.RequiredWorkflow" do
      optional :repository_id, :message, 1, "actions.core.v1.Identity"
      optional :owner_id, :message, 2, "actions.core.v1.Identity"
      optional :repository_nwo, :string, 3
      optional :path, :string, 4
      optional :ref, :string, 5
      optional :visibility, :enum, 6, "actions.core.v1.RepositoryVisibility"
      optional :repo_database_id, :int64, 7
      repeated :target_branches, :string, 8
      optional :workflow_file_sha, :string, 9
    end
    add_message "actions.core.v1.GetRepositoryEventDetailsRequest" do
      optional :repository_id, :int64, 1
    end
    add_message "actions.core.v1.GetRepositoryEventDetailsResponse" do
      optional :event_payload, :string, 1
    end
  end
end

module MonolithTwirp
  module Actions
    module Core
      module V1
        CheckRepositoryActionsStatusRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("actions.core.v1.CheckRepositoryActionsStatusRequest").msgclass
        CheckRepositoryActionsStatusResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("actions.core.v1.CheckRepositoryActionsStatusResponse").msgclass
        GetRepositoryOwnersRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("actions.core.v1.GetRepositoryOwnersRequest").msgclass
        GetRepositoryOwnersResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("actions.core.v1.GetRepositoryOwnersResponse").msgclass
        GetRepositoryOwnerIdRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("actions.core.v1.GetRepositoryOwnerIdRequest").msgclass
        GetRepositoryOwnerIdResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("actions.core.v1.GetRepositoryOwnerIdResponse").msgclass
        GetCommitMessageRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("actions.core.v1.GetCommitMessageRequest").msgclass
        GetCommitMessageResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("actions.core.v1.GetCommitMessageResponse").msgclass
        RetireNamespaceRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("actions.core.v1.RetireNamespaceRequest").msgclass
        RetireNamespaceResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("actions.core.v1.RetireNamespaceResponse").msgclass
        FindRepositoriesByNameRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("actions.core.v1.FindRepositoriesByNameRequest").msgclass
        FindRepositoriesByNameResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("actions.core.v1.FindRepositoriesByNameResponse").msgclass
        GetAdditionalWorkflowsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("actions.core.v1.GetAdditionalWorkflowsRequest").msgclass
        GetAdditionalWorkflowsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("actions.core.v1.GetAdditionalWorkflowsResponse").msgclass
        RequiredWorkflow = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("actions.core.v1.RequiredWorkflow").msgclass
        GetRepositoryEventDetailsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("actions.core.v1.GetRepositoryEventDetailsRequest").msgclass
        GetRepositoryEventDetailsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("actions.core.v1.GetRepositoryEventDetailsResponse").msgclass
      end
    end
  end
end
