# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::OrganizationModerators::V0::ModeratorUpdate`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::OrganizationModerators::V0::ModeratorUpdate`.

class Hydro::Schemas::Github::OrganizationModerators::V0::ModeratorUpdate
  sig do
    params(
      action: T.nilable(T.any(Symbol, Integer)),
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      moderator_id: T.nilable(Integer),
      moderator_type: T.nilable(T.any(Symbol, Integer)),
      organization: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)
    ).void
  end
  def initialize(action: nil, actor: nil, moderator_id: nil, moderator_type: nil, organization: nil); end

  sig { returns(T.any(Symbol, Integer)) }
  def action; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def action=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { void }
  def clear_action; end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_moderator_id; end

  sig { void }
  def clear_moderator_type; end

  sig { void }
  def clear_organization; end

  sig { returns(Integer) }
  def moderator_id; end

  sig { params(value: Integer).void }
  def moderator_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def moderator_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def moderator_type=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)) }
  def organization; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)).void }
  def organization=(value); end
end
