# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Blackbird::Admin::V1::ComputeMstResponse`.
# Please instead update this file by running `bin/tapioca dsl Blackbird::Admin::V1::ComputeMstResponse`.

class Blackbird::Admin::V1::ComputeMstResponse
  sig do
    params(
      flat_cost: T.nilable(Integer),
      host: T.nilable(String),
      max_depth: T.nilable(Integer),
      max_encoding_size: T.nilable(Integer),
      max_subtree_size: T.nilable(Integer),
      mst_cost: T.nilable(Integer),
      mst_time: T.nilable(Google::Protobuf::Duration),
      num_repos: T.nilable(Integer),
      query_time: T.nilable(Google::Protobuf::Duration),
      root_children: T.nilable(Integer),
      total_time: T.nilable(Google::Protobuf::Duration),
      traverse_time: T.nilable(Google::Protobuf::Duration)
    ).void
  end
  def initialize(flat_cost: nil, host: nil, max_depth: nil, max_encoding_size: nil, max_subtree_size: nil, mst_cost: nil, mst_time: nil, num_repos: nil, query_time: nil, root_children: nil, total_time: nil, traverse_time: nil); end

  sig { void }
  def clear_flat_cost; end

  sig { void }
  def clear_host; end

  sig { void }
  def clear_max_depth; end

  sig { void }
  def clear_max_encoding_size; end

  sig { void }
  def clear_max_subtree_size; end

  sig { void }
  def clear_mst_cost; end

  sig { void }
  def clear_mst_time; end

  sig { void }
  def clear_num_repos; end

  sig { void }
  def clear_query_time; end

  sig { void }
  def clear_root_children; end

  sig { void }
  def clear_total_time; end

  sig { void }
  def clear_traverse_time; end

  sig { returns(Integer) }
  def flat_cost; end

  sig { params(value: Integer).void }
  def flat_cost=(value); end

  sig { returns(String) }
  def host; end

  sig { params(value: String).void }
  def host=(value); end

  sig { returns(Integer) }
  def max_depth; end

  sig { params(value: Integer).void }
  def max_depth=(value); end

  sig { returns(Integer) }
  def max_encoding_size; end

  sig { params(value: Integer).void }
  def max_encoding_size=(value); end

  sig { returns(Integer) }
  def max_subtree_size; end

  sig { params(value: Integer).void }
  def max_subtree_size=(value); end

  sig { returns(Integer) }
  def mst_cost; end

  sig { params(value: Integer).void }
  def mst_cost=(value); end

  sig { returns(T.nilable(Google::Protobuf::Duration)) }
  def mst_time; end

  sig { params(value: T.nilable(Google::Protobuf::Duration)).void }
  def mst_time=(value); end

  sig { returns(Integer) }
  def num_repos; end

  sig { params(value: Integer).void }
  def num_repos=(value); end

  sig { returns(T.nilable(Google::Protobuf::Duration)) }
  def query_time; end

  sig { params(value: T.nilable(Google::Protobuf::Duration)).void }
  def query_time=(value); end

  sig { returns(Integer) }
  def root_children; end

  sig { params(value: Integer).void }
  def root_children=(value); end

  sig { returns(T.nilable(Google::Protobuf::Duration)) }
  def total_time; end

  sig { params(value: T.nilable(Google::Protobuf::Duration)).void }
  def total_time=(value); end

  sig { returns(T.nilable(Google::Protobuf::Duration)) }
  def traverse_time; end

  sig { params(value: T.nilable(Google::Protobuf::Duration)).void }
  def traverse_time=(value); end
end
