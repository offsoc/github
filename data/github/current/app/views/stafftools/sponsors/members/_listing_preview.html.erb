<%# erblint:counter ButtonComponentMigrationCounter 1 %>
<%# `view` is an instance of Stafftools::Sponsors::Members::ShowView %>
<div class="mb-2">
  <%= render Primer::Beta::Subhead.new do |component| %>
    <% component.with_heading(tag: :h2) do %>Sponsors listing<% end %>
    <% component.with_actions do %>
      <%= render Stafftools::Sponsors::Members::SponsorsListingStateComponent.new(listing: listing) %>
      <a href="<%= sponsorable_path(listing.sponsorable_login) %>" class="btn btn-sm" rel="nofollow">View</a>
    <% end %>
  <% end %>

  <div class="mb-2">
    <%= render Stafftools::Sponsors::Members::StripeTaxStatusComponent.new(listing: listing)%>

    <div class="d-flex flex-justify-start mb-2">
      <span class="d-block col-4 text-bold">Matching status</span>
      <span class="d-block col-8">
        <%= render Stafftools::Sponsors::Members::MatchingStatusComponent.new(listing: listing) %>
      </span>
    </div>

    <div class="d-flex flex-justify-start mb-2">
      <span class="d-block col-4 text-bold">Payout probation</span>
      <span class="d-block col-8">
        <%= render Stafftools::Sponsors::Members::PayoutProbationStatusComponent.new(listing: listing) %>
      </span>
    </div>

    <% if view.under_fraud_review? %>
      <div class="d-flex flex-justify-start mb-2">
        <span class="d-block col-4 text-bold">Fraud Review</span>
        <span class="d-block col-8">
          <%= emoji_tag(Emoji.find_by_alias("rotating_light")) %>
          <span>Flagged</span>
        </span>
      </div>
    <% end %>

    <% if listing.published_at.present? %>
      <div class="d-flex flex-justify-start mb-2">
        <span class="d-block col-4 text-bold">Published on</span>
        <span class="d-block col-8">
          <%= listing.published_at.strftime("%b %-d, %Y") %>
        </span>
      </div>
    <% end %>

    <div class="d-flex flex-justify-start mb-2">
      <span class="d-block col-4 text-bold">Published tiers</span>
      <span class="d-block col-8">
        Recurring: <%= listing.published_recurring_tier_count %><br>
        One-time: <%= listing.published_one_time_tier_count %>
      </span>
    </div>

    <div class="d-flex flex-justify-start mb-2">
      <span class="d-block col-4 text-bold">Webhooks</span>
      <span class="d-block col-8">
        <% if hooks.present? %>
          <% hooks.each do |hook| %>
            <%
              hook_view = Hooks::ShowView.new(hook: hook, current_user: current_user)
              status_message = hook_view.status_message
            %>
            <div class="hook-item <%= hook_view.status_class %> mb-1 ml-n1">
              <span class="item-status">
                <%= link_to stafftools_sponsors_member_listing_webhook_path(listing.sponsorable_login, hook.id) do %>
                  <span class="sr-only">Status for <%= hook.url %>: <%= status_message %></span>
                  <%= primer_octicon(:check, classes: "icon-for-success") %>
                  <%= primer_octicon(:alert, classes: "icon-for-failure") %>
                  <%= primer_octicon(:"dot-fill", classes: "icon-for-pending") %>
                  <%= primer_octicon(:"dot-fill", classes: "icon-for-inactive") %>
                <% end %>
              </span>
              <span class="hook-url css-truncate css-truncate-target ml-n1">
                <%= link_to stafftools_sponsors_member_listing_webhook_path(listing.sponsorable_login, hook.id) do %>
                  View <code><%= render Primer::Beta::Label.new.with_content(hook.url) %></code>
                <% end %>
              </span>
            </div>
            <div class="note mt-0" <%= test_selector("hook-status") %>>
              <%= status_message %>
            </div>
          <% end %>
        <% else %>
          <%= primer_octicon(:"dot-fill", color: :muted, mr: 1) %>
          <span <%= test_selector("no-hooks") %>>None created</span>
        <% end %>
      </span>
    </div>
  </div>

  <%= render Stafftools::Billing::SponsorsTrustLevelsComponent.new(user: sponsorable) %>

  <div class="Box my-4">
    <%= render Stafftools::Sponsors::Members::ZuoraSyncStatusComponent.new(listing: listing) %>

    <%= render Stafftools::Sponsors::RequiresAdditionalReviewListingComponent.new(listing: listing) %>
    <%= render Stafftools::Sponsors::ApproveListingComponent.new(listing: listing) %>
    <% if view.can_unpublish_listing? %>
      <%= render "stafftools/sponsors/members/repending_listing", listing: listing %>
    <% end %>
    <%= render Stafftools::Sponsors::DisableListingComponent.new(listing: listing) %>
    <%= render Stafftools::Sponsors::DeleteListingComponent.new(listing: listing) %>
    <%= render Stafftools::Sponsors::CancelApprovalRequestComponent.new(listing: listing) %>

    <%= render Stafftools::Sponsors::ToggleMatchComponent.new(
      sponsors_listing: listing,
    ) %>

    <%= render Stafftools::Sponsors::DisableMatchForSponsorsComponent.new(
      sponsors_listing: listing,
    ) %>

    <%= render Stafftools::Sponsors::ExportTransactionHistoryComponent.new(sponsors_listing: listing) %>

    <%= render Stafftools::Sponsors::ExportPayoutHistoryComponent.new(sponsors_listing: listing) %>
  </div>
</div>
