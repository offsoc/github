# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Authnd::Proto::Credentials`.
# Please instead update this file by running `bin/tapioca dsl Authnd::Proto::Credentials`.

class Authnd::Proto::Credentials
  sig do
    params(
      access_token: T.nilable(Authnd::Proto::AccessToken),
      login_password: T.nilable(Authnd::Proto::LoginPassword),
      signed_auth_token: T.nilable(Authnd::Proto::SignedAuthToken),
      ssh_public_key: T.nilable(Authnd::Proto::SSHPublicKey)
    ).void
  end
  def initialize(access_token: nil, login_password: nil, signed_auth_token: nil, ssh_public_key: nil); end

  sig { returns(T.nilable(Authnd::Proto::AccessToken)) }
  def access_token; end

  sig { params(value: T.nilable(Authnd::Proto::AccessToken)).void }
  def access_token=(value); end

  sig { void }
  def clear_access_token; end

  sig { void }
  def clear_login_password; end

  sig { void }
  def clear_signed_auth_token; end

  sig { void }
  def clear_ssh_public_key; end

  sig { returns(T.nilable(Symbol)) }
  def kind; end

  sig { returns(T.nilable(Authnd::Proto::LoginPassword)) }
  def login_password; end

  sig { params(value: T.nilable(Authnd::Proto::LoginPassword)).void }
  def login_password=(value); end

  sig { returns(T.nilable(Authnd::Proto::SignedAuthToken)) }
  def signed_auth_token; end

  sig { params(value: T.nilable(Authnd::Proto::SignedAuthToken)).void }
  def signed_auth_token=(value); end

  sig { returns(T.nilable(Authnd::Proto::SSHPublicKey)) }
  def ssh_public_key; end

  sig { params(value: T.nilable(Authnd::Proto::SSHPublicKey)).void }
  def ssh_public_key=(value); end
end
