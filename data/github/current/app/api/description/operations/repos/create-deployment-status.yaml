---
summary: Create a deployment status
description: |-
  Users with `push` access can create deployment statuses for a given deployment.

  OAuth app tokens and personal access tokens (classic) need the `repo_deployment` scope to use this endpoint.
tags:
  - repos
operationId: repos/create-deployment-status
externalDocs:
  description: API method documentation
  url: '${externalDocsUrl}/rest/deployments/statuses#create-a-deployment-status'
parameters:
  - $ref: '../../components/parameters/owner.yaml'
  - $ref: '../../components/parameters/repo.yaml'
  - $ref: '../../components/parameters/deployment-id.yaml'
requestBody:
  required: true
  content:
    application/json:
      schema:
        type: object
        properties:
          state:
            type: string
            description: The state of the status. When you set a transient deployment to `inactive`,
              the deployment will be shown as `destroyed` in GitHub.
            enum:
              - error
              - failure
              - inactive
              - in_progress
              - queued
              - pending
              - success
          target_url:
            type: string
            description: |-
              The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment.

              > [!NOTE]
              > It's recommended to use the `log_url` parameter, which replaces `target_url`.
            default: ''
          log_url:
            type: string
            description: |-
              The full URL of the deployment's output. This parameter replaces `target_url`. We will continue to accept `target_url` to support legacy uses, but we recommend replacing `target_url` with `log_url`. Setting `log_url` will automatically set `target_url` to the same value. Default: `""`
            default: ''
          description:
            type: string
            description: A short description of the status. The maximum description
              length is 140 characters.
            default: ''
          environment:
            type: string
            description: Name for the target deployment environment, which can be
              changed when setting a deploy status. For example, `production`, `staging`,
              or `qa`. If not defined, the environment of the previous status on the
              deployment will be used, if it exists. Otherwise, the environment of the
              deployment will be used.
          environment_url:
            type: string
            description: 'Sets the URL for accessing your environment. Default: `""`'
            default: ''
          auto_inactive:
            type: boolean
            description: "Adds a new `inactive` status to all prior non-transient,
              non-production environment deployments with the same repository and
              `environment` name as the created status's deployment. An `inactive`
              status is only added to deployments that had a `success` state. Default:
              `true`"
        required:
          - state
      examples:
        default:
          value:
            environment: production
            state: success
            log_url: https://example.com/deployment/42/output
            description: Deployment finished successfully.
responses:
  '201':
    description: Response
    content:
      application/json:
        schema:
          $ref: '../../components/schemas/deployment-status.yaml'
        examples:
          default:
            $ref: '../../components/examples/deployment-status.yaml'
    headers:
      Location:
        example: https://api.github.com/repos/octocat/example/deployments/42/statuses/1
        schema:
          type: string
  '422':
    $ref: '../../components/responses/validation_failed.yaml'
x-github-releases:
  - ghec
  - ghes: '>= 2.18'
  - api.github.com
x-github:
  githubCloudOnly: false
  enabledForGitHubApps: true
  category: deployments
  subcategory: statuses
x-github-internal:
  path: '/repos/{owner}/{repo}/deployments/{deployment_id}/statuses'
  http-method: post
  service-tier: 1
  owner: '@github/pages'
  published: true
x-githubEnterpriseOverlays:
  '<= 3.2':
    x-github:
      previews:
        - $ref: '../../components/x-previews/flash.yaml'
          required: false
        - $ref: '../../components/x-previews/ant-man.yaml'
          required: false
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              state:
                type: string
                description: The state of the status. **Note:**
                  When you set a transient deployment to `inactive`, the deployment will be shown as `destroyed` in GitHub.
                enum:
                  - error
                  - failure
                  - inactive
                  - in_progress
                  - queued
                  - pending
                  - success
              target_url:
                type: string
                description: |-
                  The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment.

                  > [!NOTE]
                  > It's recommended to use the `log_url` parameter, which replaces `target_url`.
                default: ''
              log_url:
                type: string
                description: |-
                  The full URL of the deployment's output. This parameter replaces `target_url`. We will continue to accept `target_url` to support legacy uses, but we recommend replacing `target_url` with `log_url`. Setting `log_url` will automatically set `target_url` to the same value. Default: `""`
                default: ''
              description:
                type: string
                description: A short description of the status. The maximum description
                  length is 140 characters.
                default: ''
              environment:
                type: string
                description: Name for the target deployment environment, which can be
                  changed when setting a deploy status. For example, `production`, `staging`,
                  or `qa`. If not defined, the environment of the previous status on the
                  deployment will be used, if it exists. Otherwise, the environment of the
                  deployment will be used.
              environment_url:
                type: string
                description: "Sets the URL for accessing your environment. Default: `\"\"`"
                default: ''
              auto_inactive:
                type: boolean
                description: "Adds a new `inactive` status to all prior non-transient,
                  non-production environment deployments with the same repository and
                  `environment` name as the created status's deployment. An `inactive`
                  status is only added to deployments that had a `success` state. Default:
                  `true`"
            required:
              - state
          examples:
            default:
              value:
                environment: production
                state: success
                log_url: https://example.com/deployment/42/output
                description: Deployment finished successfully.
