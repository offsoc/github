# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Sponsors::V0::Entities::Sponsorship`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Sponsors::V0::Entities::Sponsorship`.

class Hydro::Schemas::Github::Sponsors::V0::Entities::Sponsorship
  sig do
    params(
      id: T.nilable(Integer),
      is_sponsor_opted_in_to_email: T.nilable(T::Boolean),
      maintainer: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      privacy_level: T.nilable(T.any(Symbol, Integer)),
      skip_proration: T.nilable(T::Boolean),
      sponsor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      sponsorable_metadata: T.nilable(T.any(Google::Protobuf::Map[String, String], T::Hash[String, String]))
    ).void
  end
  def initialize(id: nil, is_sponsor_opted_in_to_email: nil, maintainer: nil, privacy_level: nil, skip_proration: nil, sponsor: nil, sponsorable_metadata: T.unsafe(nil)); end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_is_sponsor_opted_in_to_email; end

  sig { void }
  def clear_maintainer; end

  sig { void }
  def clear_privacy_level; end

  sig { void }
  def clear_skip_proration; end

  sig { void }
  def clear_sponsor; end

  sig { void }
  def clear_sponsorable_metadata; end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(T::Boolean) }
  def is_sponsor_opted_in_to_email; end

  sig { params(value: T::Boolean).void }
  def is_sponsor_opted_in_to_email=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def maintainer; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def maintainer=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def privacy_level; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def privacy_level=(value); end

  sig { returns(T::Boolean) }
  def skip_proration; end

  sig { params(value: T::Boolean).void }
  def skip_proration=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def sponsor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def sponsor=(value); end

  sig { returns(Google::Protobuf::Map[String, String]) }
  def sponsorable_metadata; end

  sig { params(value: Google::Protobuf::Map[String, String]).void }
  def sponsorable_metadata=(value); end
end
