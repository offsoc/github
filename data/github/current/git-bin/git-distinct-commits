#!/bin/sh
## Usage: git-distinct-commits [<options>] <ref>[@{<sha>}]
## Like git-rev-list(1) but shows only commits reachable from <ref> that are
## not reachable from any other branch in the repository. A specific point in
## <ref>s history may be specified with the @{<sha>} syntax. With no @{<sha>},
## assume <ref>s head commit.
##
## The --newsyntax option is ignored, as that is the only accepted syntax now.
set -e

# parse out <options> to pass to git-rev-list and grab <ref>
opts=
ref=
while [ $# -gt 0 ]; do
    case "$1" in
        -h|--help)
            grep '^##' < "$0" |
            cut -c 4-
            exit 2
            ;;
        --newsyntax)
            ;;
        *)
            opts="$opts $ref"
            ref="$1"
    esac
    shift
done

# make <ref> a qualified ref or bail out if no <ref> was given
if [ -n "$ref" ]; then
    ref="refs/heads/${ref#refs/heads/}"
    sha=$(echo "$ref" | sed -e 's/.*@{\(.*\)}/\1/')
    ref=${ref%@{*}
else
    echo "no <ref> given. see '$(basename $0) --help' for usage" 1>&2
    exit 1
fi

# determine existing branch list
git show-ref --heads |
grep -v " $ref\$"    |
sed 's/\([^ ]*\) .*/^\1/' |
git rev-list --stdin $opts "$sha" --
