.itemContainer {
  display: flex;
  display: grid;
  padding: var(--base-size-8) var(--base-size-16);
  column-gap: var(--base-size-12);
  align-items: center;
  justify-content: space-between;
  grid-template-columns: 160px 1fr auto auto;
  grid-template-areas: 'type description metadata actions';
}

.itemContainer:not(:last-child) {
  border-bottom: var(--borderWidth-thin) solid var(--borderColor-default, var(--color-border-default));
}

.itemTokenWrapper {
  display: flex;
  gap: var(--base-size-12);
  flex-grow: 1;
  grid-area: type;
  overflow: hidden;
}

.itemDescription {
  display: inline-flex;
  /* stylelint-disable-next-line primer/spacing */
  padding-top: 3px; /* this is for visual alignment with the type label */
  font-size: var(--font-size-small);
  color: var(--fgColor-muted);
  word-break: break-word;
  grid-area: description;
}

.itemMetadataWrapper {
  display: flex;
  flex: 1;
  gap: var(--base-size-8);
  align-items: center;
  justify-content: flex-end;
  grid-area: metadata;
  flex-wrap: nowrap;
}

.actionsWrapper {
  grid-area: actions;
}

@media screen and (max-width: 1012px) { /* --breakpoint-large */
  .itemTokenWrapper {
    flex-direction: column;
    column-gap: var(--base-size-8);
    row-gap: var(--base-size-6);
  }

  .itemContainer {
    padding: var(--base-size-16);
    grid-template-columns: minmax(0, max-content) 1fr auto;
    grid-template-rows: repeat(3, auto);
    grid-template-areas: 'type metadata actions' 'description description description';
  }
}

@media screen and (max-width: 400px) { /* this is about when the layout breaks if disabled/private badges are present */
  .itemContainer {
    grid-template-columns: 1fr auto;
    grid-template-rows: repeat(3, auto);
    grid-template-areas: 'type actions' 'description description' 'metadata metadata' ;
  }

  .itemDescription {
    margin-left: 0;
  }

  .itemDescription.spacer {
    margin-bottom: var(--base-size-6);
  }

  .itemMetadataWrapper {
    justify-content: start;
  }
}
