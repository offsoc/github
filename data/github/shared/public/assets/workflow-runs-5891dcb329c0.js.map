{"version":3,"file":"workflow-runs-xxxxxxxxxxxx.js","mappings":"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","sources":["app/assets/modules/github/workflow-runs/fetch.ts","app/assets/modules/github/workflow-runs/signalr-socket.ts","app/assets/modules/github/workflow-runs/parser-types.ts","app/assets/modules/github/workflow-runs/parser.ts","app/assets/modules/github/workflow-runs/log-parser.ts","app/assets/modules/github/workflow-runs/steps.ts","app/assets/modules/github/workflow-runs/check-runs.ts","app/assets/modules/github/workflow-runs/logs.ts","app/assets/modules/github/workflow-runs/search.ts","app/assets/modules/github/workflow-runs/rerequests.ts","app/assets/modules/github/workflow-runs/check-step.ts","app/assets/modules/github/workflow-runs/check-steps.ts","ui/packages/analytics-overrides/analytics-overrides.ts","ui/packages/client-env/client-env.ts","ui/packages/document-ready/document-ready.ts","ui/packages/failbot/failbot.ts","ui/packages/feature-flags/feature-flags.ts","ui/packages/hotkey/hotkey.ts","ui/packages/hotkey/keyboard-shortcuts-helper.ts","ui/packages/hydro-analytics/hydro-analytics.ts","ui/packages/trusted-types-policies/jtml.ts","ui/packages/jtml-shimmed/jtml-shimmed.ts","ui/packages/runtime-environment/runtime-environment.ts","ui/packages/safe-storage/safe-storage.ts","ui/packages/safe-storage/session-storage.ts","ui/packages/soft-nav/utils.ts","ui/packages/ssr-utils/ssr-globals.ts","ui/packages/ssr-utils/ssr.ts","ui/packages/stats/stats.ts","ui/packages/subscription/subscription.ts","ui/packages/trusted-types-policies/policy.ts","ui/packages/trusted-types/trusted-types.ts"],"sourcesContent":["export async function fetchJson<T>(url: string): Promise<T | null> {\n  try {\n    const response = await fetch(url, {\n      credentials: 'same-origin',\n      headers: {\n        Accept: 'application/json',\n        'X-Requested-With': 'XMLHttpRequest',\n      },\n    })\n    if (response.ok) {\n      return await response.json()\n    }\n  } catch {\n    // Network failure\n  }\n  return null\n}\n","import type {Socket} from '@github/stable-socket'\nimport {StableSocket} from '@github/stable-socket'\nimport {fetchJson} from './fetch'\n\ninterface AuthenticatedURLResponse {\n  data: {\n    authenticated_url: string\n  }\n}\n\ninterface WsUrlLookupData {\n  logStreamWebSocketUrl: string\n}\n\nexport enum MessageType {\n  Invocation = 1,\n  StreamItem = 2,\n  Completion = 3,\n  StreamInvocation = 4,\n  CancelInvocation = 5,\n  Ping = 6,\n  Close = 7,\n}\n\n// https://github.com/dotnet/aspnetcore/blob/main/src/SignalR/docs/specs/HubProtocol.md#overview\ntype Message = HandshakeRequest | Invocation\n\ninterface HandshakeRequest {\n  protocol: string\n  version: number\n}\n\ninterface Invocation {\n  type: number\n  target: string\n  arguments: unknown[]\n}\n\nexport interface SocketData<T> {\n  target: string\n  type: number\n  arguments: T\n}\n\nexport class SignalRSocket extends EventTarget {\n  public static readonly RECORD_SEPARATOR = String.fromCharCode(0x1e)\n  // https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n  public static readonly ABNORMAL_CLOSURE = 1006\n  public static readonly POLICY_VIOLATION = 1008\n  public static readonly JITTER_MIN_MILLISECONDS = 100\n  public static readonly JITTER_MAX_MILLISECONDS = 400\n  static #instances = new Map<string, SignalRSocket>()\n\n  private globalSocket: Socket | null\n  private socketUrl: string\n  private isStreaming = false\n  private xhrConnectionUrl: string\n  private shouldTryAgainWithNewSocket = false\n\n  public static getInstance(target: string): SignalRSocket {\n    if (!SignalRSocket.#instances.has(target)) {\n      SignalRSocket.#instances.set(target, new SignalRSocket(target))\n    }\n    return SignalRSocket.#instances.get(target)!\n  }\n\n  constructor(private target: string) {\n    super()\n  }\n\n  public socketDidReceiveMessage(socket: Socket, message: string): void {\n    const record = message.split(SignalRSocket.RECORD_SEPARATOR)[0]!\n    const data = JSON.parse(record) as SocketData<unknown>\n\n    this.dispatchEvent(new CustomEvent('socketDidReceiveMessage', {detail: data}))\n\n    if (data.type === MessageType.Close) socket.close()\n  }\n\n  // Public methods\n  public socketDidOpen() {\n    this.handshake()\n  }\n\n  public socketDidClose() {\n    // Do nothing\n  }\n\n  public socketDidFinish() {\n    this.globalSocket = null\n\n    if (this.shouldTryAgainWithNewSocket) {\n      this.shouldTryAgainWithNewSocket = false\n      // Wait for 100 to 500 milliseconds before reconnecting\n      const delay =\n        Math.floor(Math.random() * SignalRSocket.JITTER_MAX_MILLISECONDS) + SignalRSocket.JITTER_MIN_MILLISECONDS\n      setTimeout(() => this.startOrContinueStreaming(this.xhrConnectionUrl, true), delay)\n    }\n  }\n\n  public socketShouldRetry(socket: Socket, code: number): boolean {\n    if (code === SignalRSocket.ABNORMAL_CLOSURE) {\n      /**\n       * AFD (Azure Front Door) abnormally closed the socket. This can happen after the websocket max time limit\n       * has been reached which is configured to 10 minutes for Actions. An abnormal closure can also sometimes\n       * randomly happen before the max time limit has been reached which stops incoming logs.\n       *\n       * Retrying with the existing socket is futile, but it is safe to discard the existing socket and create a new one.\n       */\n      this.shouldTryAgainWithNewSocket = true\n      return false\n    }\n    return !this.isFatalStatusCode(code)\n  }\n\n  public async startOrContinueStreaming(xhrConnectionUrl: string, retryingAbnormalClosure = false) {\n    if (!this.xhrConnectionUrl) this.xhrConnectionUrl = xhrConnectionUrl\n\n    if (this.isStreaming && !retryingAbnormalClosure) return\n    this.isStreaming = true\n\n    await this.tryStartNewStream(this.xhrConnectionUrl)\n  }\n\n  public closeExistingSocket() {\n    if (this.globalSocket) {\n      this.globalSocket.close()\n      this.globalSocket = null\n    }\n    return\n  }\n\n  public onStreamFailure() {\n    this.dispatchEvent(new CustomEvent('onStreamFailure'))\n  }\n\n  get reconnectWindow() {\n    // Wait for 100 to 500 milliseconds before reconnecting\n    const delay =\n      Math.floor(Math.random() * SignalRSocket.JITTER_MAX_MILLISECONDS) + SignalRSocket.JITTER_MIN_MILLISECONDS\n    return delay\n  }\n\n  // Private methods\n  private async tryStartNewStream(xhrConnectionUrl: string) {\n    try {\n      const socketUrl = await this.retrieveSocketURL(xhrConnectionUrl)\n      if (!socketUrl) return\n      this.socketUrl = socketUrl\n\n      this.globalSocket = new StableSocket(this.socketUrl, this, {timeout: 4000, attempts: 10})\n      await this.globalSocket.open()\n    } catch (e) {\n      this.onStreamFailure()\n      throw e\n    }\n  }\n\n  private handshake() {\n    const {searchParams} = new URL(this.socketUrl, window.location.origin)\n    const tenantId = searchParams.get('tenantId')\n    const runId = searchParams.get('runId')\n    if (tenantId && runId) {\n      const protocolPayload: HandshakeRequest = {\n        protocol: 'json',\n        version: 1,\n      }\n      this.sendPayload(protocolPayload)\n\n      const targetPayload: Invocation = {\n        arguments: [tenantId, +runId],\n        target: this.target,\n        type: MessageType.Invocation,\n      }\n      this.sendPayload(targetPayload)\n    }\n  }\n\n  private retrieveSocketURL = async (xhrUrl: string): Promise<string | null> => {\n    const authResult = await fetchJson<AuthenticatedURLResponse>(xhrUrl)\n    const authenticatedUrl = authResult?.data['authenticated_url']\n    if (!authenticatedUrl) return null\n    const wsResult = await fetchJson<WsUrlLookupData>(authenticatedUrl)\n    return wsResult?.logStreamWebSocketUrl ?? null\n  }\n\n  private isFatalStatusCode(code: number): boolean {\n    return code === SignalRSocket.POLICY_VIOLATION\n  }\n\n  private sendPayload(payload: Message) {\n    if (this.globalSocket) {\n      this.globalSocket.send(JSON.stringify(payload) + SignalRSocket.RECORD_SEPARATOR)\n    }\n  }\n}\n","export const enum NodeType {\n  Plain = 0,\n  Command = 1,\n  Debug = 2,\n  Error = 3,\n  Info = 4,\n  Section = 5,\n  Verbose = 6,\n  Warning = 7,\n  Group = 8,\n  EndGroup = 9,\n  Icon = 10,\n  Notice = 11,\n}\n\ninterface IGroupInfo {\n  lineIndex: number\n  nodeIndex: number\n}\n\nexport interface ISectionFind {\n  line: number\n}\n\ninterface IFindResult {\n  lines: ISectionFind[]\n  text: string\n}\n\nexport interface IParsedFindResult extends IFindResult {\n  selectedLine: number\n}\n\nexport interface IParseNode {\n  type: NodeType\n  /**\n   * Index of the node inside ILine\n   */\n  index: number\n  /**\n   * Index of the ILine this node belongs to\n   */\n  lineIndex: number\n  /**\n   * Starting index of content\n   */\n  start: number\n  /**\n   * Ending index of content\n   */\n  end: number\n  /**\n   * If this is part of a group, this will refer to the node that's a group\n   */\n  group?: IGroupInfo\n  /**\n   * If this is a group, this would be set\n   */\n  isGroup?: boolean\n  /**\n   *  The number of groups before this node\n   */\n  groupCount: number\n}\n\nexport interface ILine {\n  nodes: IParseNode[]\n}\n","// From azure pipelines UI.\n//   Class names have been changed to work with Primer styles\n//   Source: https://github.com/microsoft/azure-devops-ui/blob/22b5ae5969d405f4459caf9b020019e95bbded38/packages/azure-pipelines-ui/src/Utilities/Parser.ts#L1\nimport type {ILine, IParseNode, IParsedFindResult} from './parser-types'\nimport {NodeType} from './parser-types'\nimport type {TemplateResult} from 'lit-html/lit-html'\nimport {html} from 'lit-html/lit-html'\n\n// #region ANSII section\n\nconst ESC = '\\u001b'\nconst TimestampLength = 29\nconst TimestampRegex = /^.{27}Z /gm\nconst BrightClassPostfix = '-br'\n\n// match characters that could be enclosing url to cleanly handle url formatting\nexport const URLRegex = /([{([]*https?:\\/\\/[a-z0-9]+(?:-[a-z0-9]+)*\\.[^\\s<>|'\"]{2,})/gi\n// URLs in logs can be wrapped in punctuation to assist with parsing\nconst URLPunctuation = {\n  '(': ')',\n  '[': ']',\n  '{': '}',\n}\ntype URLStartPunctuation = keyof typeof URLPunctuation\ntype URLEndPunctuation = (typeof URLPunctuation)[URLStartPunctuation]\nconst matchingURLPunctuation = (ch: string): URLEndPunctuation => URLPunctuation[ch as URLStartPunctuation]\nconst regexpEscape = (ch: string) => `\\\\${ch}`\n\n/**\n * Regex for matching ANSII escape codes\n * \\u001b - ESC character\n * ?: Non-capturing group\n * (?:\\u001b[) : Match ESC[\n * (?:[\\?|#])??: Match also ? and # formats that we don't supports but want to eat our special characters to get rid of ESC character\n * (?:[0-9]{1,3})?: Match one or more occurances of the simple format we want with out semicolon\n * (?:(?:;[0-9]{0,3})*)?: Match one or more occurances of the format we want with semicolon\n */\n// eslint-disable-next-line no-control-regex\nexport const _ansiEscapeCodeRegex = /(?:\\u001b\\[)(?:[?|#])?(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-Z|a-z])/\n\n/**\n * http://ascii-table.com/ansi-escape-sequences.php\n * https://en.wikipedia.org/wiki/ANSI_escape_code#3/4_bit\n * We support sequences of format:\n *  Esc[CONTENTHEREm\n *  Where CONTENTHERE can be of format: VALUE;VALUE;VALUE or VALUE\n *      Where VALUE is SGR parameter https://www.vt100.net/docs/vt510-rm/SGR\n *          We support: 0 (reset), 1 (bold), 3 (italic), 4 (underline), 22 (not bold), 23 (not italic), 24 (not underline), 38 (set fg), 39 (default fg), 48 (set bg), 49 (default bg),\n *                      fg colors - 30 (black), 31 (red), 32 (green), 33 (yellow), 34 (blue), 35 (magenta), 36 (cyan), 37 (white), 90 (grey)\n *                        with more brighness - 91 (red), 92 (green), 93 (yellow), 94 (blue), 95 (magenta), 96 (cyan), 97 (white)\n *                      bg colors - 40 (black), 41 (red), 42 (green), 43 (yellow), 44 (blue), 45 (magenta), 46 (cyan), 47 (white), 100 (grey)\n *                        with more brighness- 101 (red), 102 (green), 103 (yellow), 104 (blue), 105 (magenta), 106 (cyan), 107 (white)\n *  Where m refers to the \"Graphics mode\"\n *\n * 8-bit color is supported\n *  https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit\n *  Esc[38;5;<n> To set the foreground color\n *  Esc[48;5;<n> To set the background color\n *  n can be from 0-255\n *  0-7 are standard colors that match the 4_bit color palette\n *  8-15 are high intensity colors that match the 4_bit high intensity color palette\n *  16-231 are 216 colors that cover the entire spectrum\n *  232-255 are grayscale colors that go from black to white in 24 steps\n *\n * 24-bit color is also supported\n *  https://en.wikipedia.org/wiki/ANSI_escape_code#24-bit\n *  Esc[38;2;<r>;<g>;<b> To set the foreground color\n *  Esc[48;2;<r>;<g>;<b> To set the background color\n *  Where r,g and b must be between 0-255\n */\n// #endregion ANSII section\n\n// #region Pipelines commands\nenum Resets {\n  Reset = '0',\n  Bold = '22',\n  Italic = '23',\n  Underline = '24',\n  Set_Fg = '38',\n  Default_Fg = '39',\n  Set_Bg = '48',\n  Default_Bg = '49',\n}\n\nconst specials = {\n  '1': 'bold',\n  '3': 'italic',\n  '4': 'underline',\n} as {[key: string]: string}\n\nconst bgColors = {\n  // 40 (black), 41 (red), 42 (green), 43 (yellow), 44 (blue), 45 (magenta), 46 (cyan), 47 (white), 100 (grey)\n  '40': 'b',\n  '41': 'r',\n  '42': 'g',\n  '43': 'y',\n  '44': 'bl',\n  '45': 'm',\n  '46': 'c',\n  '47': 'w',\n  '100': 'gr',\n} as {[key: string]: string}\n\nconst fgColors = {\n  // 30 (black), 31 (red), 32 (green), 33 (yellow), 34 (blue), 35 (magenta), 36 (cyan), 37 (white), 90 (grey)\n  '30': 'b',\n  '31': 'r',\n  '32': 'g',\n  '33': 'y',\n  '34': 'bl',\n  '35': 'm',\n  '36': 'c',\n  '37': 'w',\n  '90': 'gr',\n} as {[key: string]: string}\n\nconst base8BitColors = {\n  // 0 (black), 1 (red), 2 (green), 3 (yellow), 4 (blue), 5 (magenta), 6 (cyan), 7 (white), 8 (grey)\n  '0': 'b',\n  '1': 'r',\n  '2': 'g',\n  '3': 'y',\n  '4': 'bl',\n  '5': 'm',\n  '6': 'c',\n  '7': 'w',\n} as Record<string, string>\n\n//0-255 in 6 increments, used to generate 216 equally incrementing colors\nconst colorIncrements216 = {\n  0: 0,\n  1: 51,\n  2: 102,\n  3: 153,\n  4: 204,\n  5: 255,\n} as Record<number, number>\n\nconst PLAIN = 'plain'\nconst COMMAND = 'command'\nconst DEBUG = 'debug'\nconst ERROR = 'error'\nconst INFO = 'info'\nconst SECTION = 'section'\nconst VERBOSE = 'verbose'\nconst WARNING = 'warning'\nconst GROUP = 'group'\nconst END_GROUP = 'endgroup'\nconst ICON = 'icon'\nconst NOTICE = 'notice'\n\nconst commandToType: {[command: string]: NodeType} = {\n  command: NodeType.Command,\n  debug: NodeType.Debug,\n  error: NodeType.Error,\n  info: NodeType.Info,\n  section: NodeType.Section,\n  verbose: NodeType.Verbose,\n  warning: NodeType.Warning,\n  notice: NodeType.Notice,\n  group: NodeType.Group,\n  endgroup: NodeType.EndGroup,\n  icon: NodeType.Icon,\n}\n\nconst typeToCommand: {[type: string]: string} = {\n  '0': PLAIN,\n  '1': COMMAND,\n  '2': DEBUG,\n  '3': ERROR,\n  '4': INFO,\n  '5': SECTION,\n  '6': VERBOSE,\n  '7': WARNING,\n  '8': GROUP,\n  '9': END_GROUP,\n  '10': ICON,\n  '11': NOTICE,\n}\n\n// Store the max command length we support, for example, we support \"section\", \"command\" which are of length 7, which highest of all others\nconst maxCommandLength = 8\nconst supportedCommands = [COMMAND, DEBUG, ERROR, INFO, SECTION, VERBOSE, WARNING, GROUP, END_GROUP, ICON, NOTICE]\n\nexport function getType(node: IParseNode) {\n  return typeToCommand[node.type]\n}\n// #endregion Pipelines commands\n\nexport function getText(text: string) {\n  return (text || '').toLocaleLowerCase()\n}\n// #endregion Common functions\n\ninterface IStyle {\n  fg: string\n  bg: string\n  isFgRGB: boolean\n  isBgRGB: boolean\n  bold: boolean\n  italic: boolean\n  underline: boolean\n  [key: string]: boolean | string\n}\n\ninterface IRGBColor {\n  r: number\n  g: number\n  b: number\n}\n\ninterface IAnsiEscapeCodeState {\n  output: string\n  style?: IStyle\n}\n\nenum CharacterType {\n  Standard,\n  Search,\n  EOL,\n}\n\n// Set max to prevent any perf degradations\nexport const maxLineMatchesToParse = 100\n\nconst maxMatches = 50\nconst unsetValue = -1\nconst newLineChar = '\\n'\nconst hashChar = '#'\nconst commandStart = '['\nconst commandEnd = ']'\n\nexport class Parser {\n  /**\n   * Converts the content to HTML with appropriate styles, escapes content to prevent XSS\n   * @param content\n   * @param lineNumber\n   * @param findResult\n   */\n  public parse(content: string, lineNumber: number, findResult?: IParsedFindResult): TemplateResult {\n    let result = html``\n    const states = this.getStates(content)\n    for (const x of states) {\n      const classNames: string[] = []\n      const styles: string[] = []\n      const currentText = x.output\n      if (x.style) {\n        const fg = x.style.fg\n        const bg = x.style.bg\n        const isFgRGB = x.style.isFgRGB\n        const isBgRGB = x.style.isBgRGB\n        if (fg && !isFgRGB) {\n          classNames.push(`ansifg-${fg}`)\n        }\n        if (bg && !isBgRGB) {\n          classNames.push(`ansibg-${bg}`)\n          classNames.push(`d-inline-flex`)\n        }\n        if (fg && isFgRGB) {\n          styles.push(`color:rgb(${fg})`)\n        }\n        if (bg && isBgRGB) {\n          styles.push(`background-color:rgb(${bg})`)\n          classNames.push(`d-inline-flex`)\n        }\n        if (x.style.bold) {\n          classNames.push('text-bold')\n        }\n        if (x.style.italic) {\n          classNames.push('text-italic')\n        }\n        if (x.style.underline) {\n          classNames.push('text-underline')\n        }\n      }\n\n      let output\n      let matchIndex = -1\n      let prevMatchIndex = 0\n      const parseResult = Array(currentText.length).fill(CharacterType.Standard)\n\n      if (findResult) {\n        const selectedLine = findResult.selectedLine\n        // slice to not degrade perf\n        const lines = findResult.lines.slice(0, maxLineMatchesToParse).map(l => l.line)\n\n        // always include selected line\n        if (lineNumber === selectedLine || lines.indexOf(lineNumber) !== -1) {\n          const textToFind = findResult.text\n          /* tslint:disable no-conditional-assignment*/\n          let matchCount = 1\n          const textContent = getText(currentText)\n          while ((matchIndex = textContent.indexOf(getText(textToFind), matchIndex + 1)) !== -1) {\n            if (matchCount >= maxMatches) {\n              break\n            }\n\n            prevMatchIndex = matchIndex + textToFind.length\n            // actual match\n            const markerText = currentText.substring(matchIndex, prevMatchIndex)\n            for (let i = 0; i < markerText.length; i++) {\n              // mark the index as found, will be styled later\n              parseResult[matchIndex + i] = CharacterType.Search\n            }\n            matchCount++\n          }\n          /* tslint:enable no-conditional-assignment*/\n        }\n      }\n\n      // The select class attribute must be added if the current line matches the selectedLine\n      const select = findResult && lineNumber === findResult.selectedLine ? 'select' : ''\n\n      const handleHighlight = (index: number, entry: string): TemplateResult | undefined => {\n        // There is a URL that needs to be properly styled. There are 2 scenarios that need to be taken care of,\n        // a standard URL substring and one that must include extra styling because of search\n        // For non-urls, the only extra styling that must be taken care would be because of search\n        let htmlSubstring\n        let substringStartIndex = index\n        let previousType = parseResult[index]\n        for (let i = index; i <= index + entry.length; i++) {\n          const currentType = i === index + entry.length ? CharacterType.EOL : parseResult[i]\n\n          if (previousType !== currentType) {\n            const substring = currentText.substring(substringStartIndex, i)\n            if (previousType === CharacterType.Search) {\n              // A portion of the URL substring is included in the search results\n              htmlSubstring = html`${htmlSubstring}<span\n                  class=\"dt-fm color-fg-on-emphasis color-bg-attention-emphasis ${select}\"\n                  >${substring}</span\n                >`\n            } else {\n              htmlSubstring = html`${htmlSubstring}${substring}`\n            }\n            previousType = currentType\n            substringStartIndex = i\n          }\n        }\n        return htmlSubstring\n      }\n\n      // Split the current text using the URL Regex pattern\n      const splitUrls = currentText.split(URLRegex)\n      let index = 0\n      for (const entry of splitUrls) {\n        if (entry === '') {\n          continue\n        }\n        if (entry.match(URLRegex)) {\n          const prefixMatch = entry.match(/^[([{]*/)\n          const entryPrefix = prefixMatch?.[0] || ''\n          let entrySuffix = ''\n          if (entryPrefix) {\n            const suffixChars = [...entryPrefix].map(matchingURLPunctuation).map(regexpEscape).reverse().join('')\n            const escapedEndPunctuation = Object.values(URLPunctuation).map(regexpEscape).join('')\n            const suffixRegex = new RegExp(`${suffixChars}[^${escapedEndPunctuation}}>]*(?=$)`)\n            const suffixMatch = entry.match(suffixRegex)\n            entrySuffix = suffixMatch?.[0] || ''\n          }\n          const entryUrl = entry.replace(entryPrefix, '').replace(entrySuffix, '')\n          const prefixHtmlSubstring = handleHighlight(index, entryPrefix)\n          const urlHtmlSubstring = handleHighlight(index + entryPrefix.length, entryUrl)\n          const suffixHtmlSubstring = handleHighlight(index + entryPrefix.length + entryUrl.length, entrySuffix)\n          output = html`${output}${prefixHtmlSubstring}<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"${entryUrl}\"\n              >${urlHtmlSubstring}</a\n            >${suffixHtmlSubstring}`\n        } else {\n          const htmlSubstring = handleHighlight(index, entry)\n          output = html`${output}${htmlSubstring}`\n        }\n        index += entry.length\n      }\n      result = html`${result}<span class=\"${classNames.join(' ')}\" style=\"${styles.join(';')}\">${output}</span>`\n    }\n\n    return result\n  }\n\n  /**\n   * Parses the content into lines with nodes\n   * @param content content to parse\n   */\n  public parseLines(content: string): ILine[] {\n    // lines we return\n    const lines: ILine[] = []\n    // accumulated nodes for a particular line\n    let nodes: IParseNode[] = []\n\n    // start of a particular line\n    let lineStartIndex = 0\n    // start of plain node content\n    let plainNodeStart = unsetValue\n\n    // tells to consider the default logic where we check for plain text etc.,\n    let considerDefaultLogic = true\n\n    // stores the command, to match one of the 'supportedCommands'\n    let currentCommand = ''\n    // helps in finding commands in our format \"##[command]\" or \"[command]\"\n    let commandSeeker = ''\n\n    // when line ends, this tells if there's any pending node\n    let pendingLastNode: number = unsetValue\n\n    const resetCommandVar = () => {\n      commandSeeker = ''\n      currentCommand = ''\n    }\n\n    const resetPlain = () => {\n      plainNodeStart = unsetValue\n    }\n\n    const resetPending = () => {\n      pendingLastNode = unsetValue\n    }\n\n    const parseCommandEnd = () => {\n      // possible continuation of our well-known commands\n      const commandIndex = supportedCommands.indexOf(currentCommand)\n      if (commandIndex !== -1) {\n        considerDefaultLogic = false\n        // we reached the end and found the command\n        resetPlain()\n        // command is for the whole line, so we are not pushing the node here but defering this to when we find the new line\n        pendingLastNode = commandToType[currentCommand]!\n\n        if (\n          currentCommand === SECTION ||\n          currentCommand === GROUP ||\n          currentCommand === END_GROUP ||\n          currentCommand === COMMAND ||\n          currentCommand === ERROR ||\n          currentCommand === WARNING ||\n          currentCommand === NOTICE\n        ) {\n          // strip off ##[$(currentCommand)] if there are no timestamps at start\n          const possibleTimestamp = content.substring(lineStartIndex, lineStartIndex + TimestampLength) || ''\n          if (!possibleTimestamp.match(TimestampRegex)) {\n            // Replace command only if it's found at the beginning of the line\n            if (possibleTimestamp.indexOf(currentCommand) < 4) {\n              // ## is optional, so pick the right offset\n              const offset = content.substring(lineStartIndex, lineStartIndex + 2) === '##' ? 4 : 2\n              lineStartIndex = lineStartIndex + offset + currentCommand.length\n            }\n          }\n        }\n\n        if (currentCommand === GROUP) {\n          groupStarted = true\n        }\n\n        // group logic- happyCase1: we found endGroup and there's already a group starting\n        if (currentCommand === END_GROUP && currentGroupNode) {\n          groupEnded = true\n        }\n      }\n\n      resetCommandVar()\n    }\n\n    let groupStarted = false\n    let groupEnded = false\n    let currentGroupNode: IParseNode | undefined\n    let nodeIndex = 0\n    let groupCount = 0\n\n    for (let index = 0; index < content.length; index++) {\n      const char = content.charAt(index)\n      // start with considering default logic, individual conditions are responsible to set it false\n      considerDefaultLogic = true\n      if (char === newLineChar || index === content.length - 1) {\n        if (char === commandEnd) {\n          parseCommandEnd()\n        }\n\n        const node = {\n          type: pendingLastNode,\n          start: lineStartIndex,\n          end: index,\n          lineIndex: lines.length,\n          groupCount,\n        } as IParseNode\n\n        let pushNode = false\n        // end of the line/text, push any final nodes\n        if (pendingLastNode !== NodeType.Plain) {\n          // there's pending special node to be pushed\n          pushNode = true\n          // a new group has just started\n          if (groupStarted) {\n            currentGroupNode = node\n            groupStarted = false\n          }\n\n          // a group has ended\n          if (groupEnded && currentGroupNode) {\n            // links to specifc lines in the UI need to match exactly what was provided by the runner for things like annotations so nodes can't be discarded\n            // lineIndexes are further adjusted based on the number of groups to ensure consistent and continuout numbering of lines in the UI\n            pushNode = true\n            node.group = {\n              lineIndex: currentGroupNode.lineIndex - 1,\n              nodeIndex: currentGroupNode.index,\n            }\n            node.groupCount = groupCount\n            currentGroupNode.isGroup = true\n\n            // since group has ended, clear all of our pointers\n            groupEnded = false\n            currentGroupNode = undefined\n            groupCount++\n          }\n        } else if (pendingLastNode === NodeType.Plain) {\n          // there's pending plain node to be pushed\n          pushNode = true\n        }\n\n        if (pushNode) {\n          node.index = nodeIndex++\n          nodes.push(node)\n        }\n\n        // A group is pending\n        if (currentGroupNode && node !== currentGroupNode) {\n          node.group = {\n            lineIndex: currentGroupNode.lineIndex,\n            nodeIndex: currentGroupNode.index,\n          }\n        }\n\n        // end of the line, push all nodes that are accumulated till now\n        if (nodes.length > 0) {\n          lines.push({nodes})\n        }\n\n        // clear node as we are done with the line\n        nodes = []\n        // increment lineStart for the next line\n        lineStartIndex = index + 1\n        // unset\n        resetPlain()\n        resetPending()\n        resetCommandVar()\n\n        considerDefaultLogic = false\n      } else if (char === hashChar) {\n        // possible start of our well-known commands\n        if (commandSeeker === '' || commandSeeker === '#') {\n          considerDefaultLogic = false\n          commandSeeker += hashChar\n        }\n      } else if (char === commandStart) {\n        // possible continuation of our well-known commands\n        if (commandSeeker === '##') {\n          considerDefaultLogic = false\n          commandSeeker += commandStart\n        } else if (commandSeeker.length === 0) {\n          // covers - \"\", for live logs, commands will be of [section], with out \"##\"\n          considerDefaultLogic = false\n          commandSeeker += commandStart\n        }\n      } else if (char === commandEnd) {\n        if (currentCommand === ICON) {\n          const startIndex = index + 1\n          let endIndex = startIndex\n          for (let i = startIndex; i < content.length; i++) {\n            const iconChar = content[i]\n            if (iconChar === ' ') {\n              endIndex = i\n              break\n            }\n          }\n          nodes.push({\n            type: NodeType.Icon,\n            lineIndex: lines.length,\n            start: startIndex,\n            end: endIndex,\n            index: nodeIndex++,\n            groupCount,\n          })\n          // jump to post Icon content\n          index = endIndex + 1\n          lineStartIndex = index\n          continue\n        } else {\n          parseCommandEnd()\n        }\n      }\n\n      if (considerDefaultLogic) {\n        if (commandSeeker === '##[' || commandSeeker === '[') {\n          // it's possible that we are parsing a command\n          currentCommand += char.toLowerCase()\n        }\n\n        if (currentCommand.length > maxCommandLength) {\n          // to avoid accumulating command unncessarily, let's check max length, if it exceeds, it's not a command\n          resetCommandVar()\n        }\n\n        // considering as plain text\n        if (plainNodeStart === unsetValue) {\n          // we didn't set this yet, set now\n          plainNodeStart = lineStartIndex\n          // set pending node if there isn't one pending\n          if (pendingLastNode === unsetValue) {\n            pendingLastNode = NodeType.Plain\n          }\n        }\n      }\n    }\n\n    return lines\n  }\n\n  /**\n   * Parses the content into ANSII states\n   * @param content content to parse\n   */\n  public getStates(content: string): IAnsiEscapeCodeState[] {\n    const result: IAnsiEscapeCodeState[] = []\n    // Eg: \"ESC[0KESC[33;1mWorker informationESC[0m\n    if (!_ansiEscapeCodeRegex.test(content)) {\n      // Not of interest, don't touch content\n      return [\n        {\n          output: content,\n        },\n      ]\n    }\n\n    let command = ''\n    let currentText = ''\n    let code = ''\n    let state = {} as IAnsiEscapeCodeState\n    let isCommandActive = false\n    let codes = []\n    for (let index = 0; index < content.length; index++) {\n      const character = content[index]\n      if (isCommandActive) {\n        if (character === ';') {\n          if (code) {\n            codes.push(code)\n            code = ''\n          }\n        } else if (character === 'm') {\n          if (code) {\n            isCommandActive = false\n            // done\n            codes.push(code)\n            state.style = state.style || ({} as IStyle)\n\n            let setForeground = false\n            let setBackground = false\n            let isSingleColorCode = false\n            let isRGBColorCode = false\n            const rgbColors: number[] = []\n\n            for (const currentCode of codes) {\n              const style = state.style\n              const codeNumber = parseInt(currentCode)\n              if (setForeground && isSingleColorCode) {\n                // set foreground color using 8-bit (256 color) palette - Esc[ 38:5:<n> m\n                if (codeNumber >= 0 && codeNumber < 16) {\n                  style.fg = this._get8BitColorClasses(codeNumber)\n                } else if (codeNumber >= 16 && codeNumber < 256) {\n                  style.fg = this._get8BitRGBColors(codeNumber)\n                  style.isFgRGB = true\n                }\n                setForeground = false\n                isSingleColorCode = false\n              } else if (setForeground && isRGBColorCode) {\n                // set foreground color using 24-bit (true color) palette - Esc[ 38:2:<r>:<g>:<b> m\n                if (codeNumber >= 0 && codeNumber < 256) {\n                  rgbColors.push(codeNumber)\n                  if (rgbColors.length === 3) {\n                    style.fg = `${rgbColors[0]},${rgbColors[1]},${rgbColors[2]}`\n                    style.isFgRGB = true\n                    rgbColors.length = 0 // clear array\n                    setForeground = false\n                    isRGBColorCode = false\n                  }\n                }\n              } else if (setBackground && isSingleColorCode) {\n                // set background color using 8-bit (256 color) palette - Esc[ 48:5:<n> m\n                if (codeNumber >= 0 && codeNumber < 16) {\n                  style.bg = this._get8BitColorClasses(codeNumber)\n                } else if (codeNumber >= 16 && codeNumber < 256) {\n                  style.bg = this._get8BitRGBColors(codeNumber)\n                  style.isBgRGB = true\n                }\n                setBackground = false\n                isSingleColorCode = false\n              } else if (setBackground && isRGBColorCode) {\n                // set background color using 24-bit (true color) palette - Esc[ 48:2:<r>:<g>:<b> m\n                if (codeNumber >= 0 && codeNumber < 256) {\n                  rgbColors.push(codeNumber)\n                  if (rgbColors.length === 3) {\n                    style.bg = `${rgbColors[0]},${rgbColors[1]},${rgbColors[2]}`\n                    style.isBgRGB = true\n                    rgbColors.length = 0 // clear array\n                    setBackground = false\n                    isRGBColorCode = false\n                  }\n                }\n              } else if (setForeground || setBackground) {\n                if (codeNumber === 5) {\n                  isSingleColorCode = true\n                } else if (codeNumber === 2) {\n                  isRGBColorCode = true\n                }\n              } else if (fgColors[currentCode]) {\n                style.fg = fgColors[currentCode]!\n              } else if (bgColors[currentCode]) {\n                style.bg = bgColors[currentCode]!\n              } else if (currentCode === Resets.Reset) {\n                // reset\n                state.style = {} as IStyle\n              } else if (currentCode === Resets.Set_Bg) {\n                setBackground = true\n              } else if (currentCode === Resets.Set_Fg) {\n                setForeground = true\n              } else if (currentCode === Resets.Default_Fg) {\n                style.fg = ''\n              } else if (currentCode === Resets.Default_Bg) {\n                style.bg = ''\n              } else if (codeNumber >= 91 && codeNumber <= 97) {\n                style.fg = fgColors[codeNumber - 60] + BrightClassPostfix\n              } else if (codeNumber >= 101 && codeNumber <= 107) {\n                style.bg = bgColors[codeNumber - 60] + BrightClassPostfix\n              } else if (specials[currentCode]) {\n                style[specials[currentCode]] = true\n              } else if (currentCode === Resets.Bold) {\n                style.bold = false\n              } else if (currentCode === Resets.Italic) {\n                style.italic = false\n              } else if (currentCode === Resets.Underline) {\n                style.underline = false\n              }\n            }\n\n            // clear\n            command = ''\n            currentText = ''\n            code = ''\n          } else {\n            // To handle ESC[m, we should just ignore them\n            isCommandActive = false\n            command = ''\n            state.style = {} as IStyle\n          }\n\n          codes = []\n        } else if (isNaN(parseInt(character!))) {\n          // if this is not a number, eg: 0K, this isn't something we support\n          code = ''\n          isCommandActive = false\n          command = ''\n        } else if (code.length === 4) {\n          // we probably got code that we don't support, ignore\n          code = ''\n          isCommandActive = false\n          if (character !== ESC) {\n            // if this is not an ESC, let's not consider command from now on\n            // eg: ESC[0Ksometexthere, at this point, code would be 0K, character would be 's'\n            command = ''\n            currentText += character\n          }\n        } else {\n          code += character\n        }\n\n        continue\n      } else if (command) {\n        if (command === ESC && character === '[') {\n          isCommandActive = true\n          // push state\n          if (currentText) {\n            state.output = currentText\n            result.push(state)\n            // deep copy exisiting style for the line to preserve different styles between commands\n            let previousStyle\n            if (state.style) {\n              previousStyle = Object.assign({}, state.style)\n            }\n            state = {} as IAnsiEscapeCodeState\n            if (previousStyle) {\n              state.style = previousStyle\n            }\n            currentText = ''\n          }\n        }\n\n        continue\n      }\n\n      if (character === ESC) {\n        command = character\n      } else {\n        currentText += character\n      }\n    }\n\n    // still pending text\n    if (currentText) {\n      state.output = currentText + (command ? command : '')\n      result.push(state)\n    }\n\n    return result\n  }\n\n  /**\n   * With 8 bit colors, from 16-256, rgb color combinations are used\n   * 16-231 (216 colors) is a 6 x 6 x 6 color cube\n   * 232 - 256 are grayscale colors\n   * @param codeNumber 16-256 number\n   */\n  private _get8BitRGBColors(codeNumber: number): string {\n    let rgbColor: IRGBColor\n    if (codeNumber < 232) {\n      rgbColor = this._get216Color(codeNumber - 16)\n    } else {\n      rgbColor = this._get8bitGrayscale(codeNumber - 232)\n    }\n    return `${rgbColor.r},${rgbColor.g},${rgbColor.b}`\n  }\n\n  /**\n   * With 8 bit color, from 0-15, css classes are used to represent customer colors\n   * @param codeNumber 0-15 number that indicates the standard or high intensity color code that should be used\n   */\n  private _get8BitColorClasses(codeNumber: number): string {\n    let colorClass = ''\n    if (codeNumber < 8) {\n      colorClass = `${base8BitColors[codeNumber]}`\n    } else {\n      colorClass = `${base8BitColors[codeNumber - 8] + BrightClassPostfix}`\n    }\n    return colorClass\n  }\n\n  /**\n   * 6 x 6 x 6 (216 colors) rgb color generator\n   * https://en.wikipedia.org/wiki/Web_colors#Web-safe_colors\n   * @param increment 0-215 value\n   */\n  private _get216Color(increment: number): IRGBColor {\n    return {\n      r: colorIncrements216[Math.floor(increment / 36)]!,\n      g: colorIncrements216[Math.floor(increment / 6) % 6]!,\n      b: colorIncrements216[increment % 6]!,\n    }\n  }\n\n  /**\n   * Grayscale from black to white in 24 steps. The first value of 0 represents rgb(8,8,8) while the last value represents rgb(238,238,238)\n   * @param increment 0-23 value\n   */\n  private _get8bitGrayscale(increment: number): IRGBColor {\n    const colorCode = increment * 10 + 8\n    return {\n      r: colorCode,\n      g: colorCode,\n      b: colorCode,\n    }\n  }\n}\n","import type {ILine, IParseNode, IParsedFindResult, ISectionFind} from './parser-types'\nimport {NodeType} from './parser-types'\nimport {Parser, getText, getType, _ansiEscapeCodeRegex} from './parser'\nimport type {TemplateResult} from 'lit-html'\nimport {html} from 'lit-html'\nimport {ifDefined} from 'lit-html/directives/if-defined'\n\nexport type LogLike = string | LogWithTimestamp\n\ninterface LogWithTimestamp {\n  text: string\n  ts: Date\n}\n\ninterface ILogLine extends IParseNode {\n  text?: string\n}\n\ninterface LogLineTemplateData {\n  className: string\n  lineNumber: number\n  lineContent: TemplateResult\n  timeStamp?: string\n  lineUrl: string\n  isGroup: boolean\n  inGroup: boolean\n  isError: boolean\n  isWarning: boolean\n  isNotice: boolean\n  groupExpanded: boolean\n}\n\nconst MAX_LINE_MATCHES_TO_PARSE = 100\n\nconst logLineContentTemplate = (data: LogLineTemplateData) => {\n  let content\n  if (data.isError) {\n    content = html`<span class=\"text-bold color-fg-danger\">Error: </span>${data.lineContent}`\n  } else if (data.isWarning) {\n    content = html`<span class=\"text-bold color-fg-attention\">Warning: </span>${data.lineContent}`\n  } else if (data.isNotice) {\n    content = html`<span class=\"text-bold\">Notice: </span>${data.lineContent}`\n  } else {\n    content = data.lineContent\n  }\n\n  if (data.isGroup) {\n    // prettier-ignore\n    return html`<details class=\"js-checks-log-group\" open=\"${ifDefined(data.groupExpanded ? 'open' : undefined)}\"\n      ><summary>${content}</summary></details\n    >`\n  }\n  if (data.inGroup) {\n    const spacer = '  '\n    return html`${spacer}${content}`\n  }\n  return content\n}\n\nconst stepLogLineTemplate = (data: LogLineTemplateData) => html`\n  <div class=\"js-check-step-line CheckStep-line d-flex ${data.className}\">\n    <a\n      class=\"CheckStep-line-number color-fg-muted d-inline-block text-mono text-normal flex-shrink-0\"\n      href=\"${data.lineUrl}\"\n      >${data.lineNumber}</a\n    >\n    ${data.timeStamp &&\n    html`<span class=\"CheckStep-line-timestamp color-fg-muted text-mono text-normal ml-3 flex-shrink-0\"\n      >${data.timeStamp}</span\n    >`}\n    <span class=\"CheckStep-line-content d-inline-block flex-auto ml-3 js-check-line-content\"\n      >${logLineContentTemplate(data)}</span\n    >\n  </div>\n`\n\nconst checkRunLogLineTemplate = (data: LogLineTemplateData) => html`\n  <div class=\"CheckRun-line d-flex ml-3 ${data.className}\">\n    ${data.timeStamp &&\n    html`<span class=\"CheckRun-line-timestamp text-mono text-normal ml-3 flex-shrink-0\">${data.timeStamp}</span>`}\n    <span class=\"d-inline-block flex-auto ml-3 js-check-line-content\">${logLineContentTemplate(data)}</span>\n  </div>\n`\n\nconst pipelinesLogParser = new Parser()\n\nexport class LogParser {\n  logContent: string\n  rawLogData: string\n  lineMetaData: ILine[]\n  findResult?: IParsedFindResult\n  logLines: ILogLine[]\n  logLineNumbers: number[]\n  timestamps: string[]\n  permalinkPrefix: string\n\n  constructor(rawLogData: string, permalinkPrefix: string) {\n    this.rawLogData = rawLogData\n    this.permalinkPrefix = permalinkPrefix\n    this.logContent = ''\n    this.lineMetaData = []\n    this.logLines = []\n    this.logLineNumbers = []\n    this.timestamps = []\n  }\n\n  updateLineMetaData() {\n    const lines = this.rawLogData.split(/\\r?\\n/)\n    // Example log line with timestamp:\n    // 2019-07-11T16:56:45.9315998Z #[debug]Evaluating condition for step: 'fourth step'\n    const timestampRegex = /^(.{27}Z) /\n\n    this.timestamps = []\n    this.logContent = lines\n      .map(line => {\n        const match = line.match(timestampRegex)\n        const timestamp = match && new Date(match[1]!)\n\n        let ts = ''\n        if (match && timestamp && !isNaN(Number(timestamp))) {\n          ts = timestamp.toUTCString()\n          line = line.substring(match[0].length)\n        }\n\n        this.timestamps.push(ts)\n\n        return line\n      })\n      .join('\\n')\n\n    this.lineMetaData = pipelinesLogParser.parseLines(this.logContent)\n  }\n\n  setData(data: string) {\n    this.rawLogData = data\n    this.updateLogLines()\n  }\n\n  appendData(data: string) {\n    // TODO: we should have incremental parsing here\n    this.rawLogData += data\n    this.updateLogLines()\n  }\n\n  appendLines(lines: LogLike[], startLine?: number | null) {\n    const offset = this.logLines.length\n    const currentTime = new Date().toISOString().replace('Z', '0000Z')\n\n    const data = lines\n      .map(line => {\n        const isStr = typeof line === 'string'\n        const timestamp = isStr ? currentTime : line.ts.toISOString().replace('Z', '0000Z')\n        const text = isStr ? line : line.text\n        return `${timestamp} ${text}`\n      })\n      .join('\\n')\n    this.appendData(`${offset ? '\\n' : ''}${data}`)\n\n    if (startLine == null) return\n\n    for (let i = 0; i < lines.length; i++) {\n      this.logLineNumbers[offset + i] = startLine + i\n    }\n  }\n\n  updateLogLines() {\n    this.updateLineMetaData()\n\n    this.logLines = []\n    for (const line of this.lineMetaData) {\n      this.logLines.push(...line.nodes)\n    }\n  }\n\n  setSelectedLine(selectedLine: number) {\n    if (this.findResult) this.findResult.selectedLine = selectedLine\n  }\n\n  search(text: string, selectFirstLine: boolean): number[] {\n    const lines = this.findLines(text)\n    const selectedLine = selectFirstLine && lines.length > 0 ? lines[0]!.line : -1\n    this.findResult = {text, lines, selectedLine}\n    return lines.map(line => line.line)\n  }\n\n  findLines(text: string): ISectionFind[] {\n    const normalizedText = getText(text)\n    const lines: ISectionFind[] = []\n    for (const node of this.logLines) {\n      const nodeText = this.getNodeTextForSearch(node)\n      if (getText(nodeText).indexOf(normalizedText) >= 0) {\n        lines.push({line: node.lineIndex})\n        if (lines.length >= MAX_LINE_MATCHES_TO_PARSE) {\n          return lines\n        }\n      }\n    }\n    return lines\n  }\n\n  cancelSearch() {\n    this.findResult = undefined\n    this.updateLogLines()\n  }\n\n  renderTemplate(node: ILogLine, groupExpanded: boolean, isCheckRun: boolean): TemplateResult {\n    const {lineIndex} = node\n    const logLineNumber = this.logLineNumbers[lineIndex]\n    const lineNumber = logLineNumber != null ? logLineNumber : lineIndex + 1\n    const text = this.getNodeText(node)\n\n    // parse() does the ANSI parsing and converts to HTML\n    const lineContent = pipelinesLogParser.parse(text, lineIndex, this.findResult)\n\n    // The parser assigns a type to each line. Such as \"debug\" or \"command\".\n    // These change the way the line looks. See checks.scss for the css.\n    const className = `log-line-${getType(node)}`\n\n    const data: LogLineTemplateData = {\n      className,\n      lineNumber,\n      lineContent,\n      timeStamp: this.timestamps[lineIndex],\n      lineUrl: `${this.permalinkPrefix}:${lineNumber}`,\n      isGroup: node.type === NodeType.Group,\n      inGroup: node.group?.lineIndex != null,\n      isError: node.type === NodeType.Error,\n      isWarning: node.type === NodeType.Warning,\n      isNotice: node.type === NodeType.Notice,\n      groupExpanded,\n    }\n\n    /**\n     * Adjust the line number that gets displayed on the left column depending on the number of groups\n     *\n     * Groups end using a special line that looks like: ##[endgroup] (you can see if if viewing raw logs) however in UI UI this is not visible and is intentionally hidden.\n     * The special line is not rendered because lineIndex from parser.ts subtracts 1 from the legnth of the node in this special case (see the parseLines function)\n     * An extra \"hidden\" line however results in each group causing a numeric mispatch and line numbers can go from something like 5 -> 7 if a group is expanded\n     *\n     * This final line numbers are adjusted here to account for any number of groups in the logs. The more groups there are (groupCount), the larger the compensation that needs to be maintained\n     * The primary purpose of this adjustment is because annotations have line numbers for links that originate from the runnner and they match up with the raw logs.\n     */\n    data.lineNumber = data.lineNumber - node.groupCount\n\n    if (isCheckRun) {\n      return checkRunLogLineTemplate(data)\n    } else {\n      return stepLogLineTemplate(data)\n    }\n  }\n\n  getNodeText(node: ILogLine) {\n    if (node.text == null) {\n      node.text = this.logContent.substring(node.start, node.end + 1)\n    }\n    return node.text\n  }\n\n  /**\n   * The raw node text can contain ANSI escape codes which are not visible to users in the logs.\n   * This function strips them out so that they do not cause search results to be missed\n   */\n  getNodeTextForSearch(node: ILogLine) {\n    node.text = this.getNodeText(node)\n\n    // Global regex pattern must be supplied if using String.replaceAll so `g` is being added to the end of the regex expression\n    const regexString = new RegExp(_ansiEscapeCodeRegex, 'g')\n    return node.text.replaceAll(regexString, '')\n  }\n\n  indexFromNumber(num: number) {\n    const index = this.logLineNumbers.indexOf(num)\n    if (index < 0) return num - 1\n    return index\n  }\n}\n\nexport {stepLogLineTemplate}\n","import {html, render as renderHTML} from 'lit-html'\nimport {install, uninstall} from '@github-ui/hotkey'\nimport type {CheckStepElement} from './check-step'\nimport {LogParser} from './log-parser'\nimport type {LogLike} from './log-parser'\nimport {areCharacterKeyShortcutsEnabled} from '@github-ui/hotkey/keyboard-shortcuts-helper'\n// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\n// eslint-disable-next-line no-restricted-imports\nimport {on} from 'delegated-events'\nimport {repeat} from 'lit-html/directives/repeat'\nimport {sendStats} from '@github-ui/stats'\n\nconst MAX_LOG_SIZE_IN_BYTES = 1024 * 1024 * 10 // 10Mb\nconst LINES_PER_CLUSTER = 50\nconst ESTIMATED_LINE_LENGTH = 20\nlet elementToScroll: HTMLElement | null = null\nlet shouldAutoScroll = true\nlet lastScrollTop: number | null = null\nlet scrolledUp = false\n\nexport const stepsMap: {[externalId: string]: Step} = {}\n\nexport function getUnorderedSteps(): Step[] {\n  return Object.keys(stepsMap).map(x => stepsMap[x]!)\n}\n\nconst scrollableContainer = () => document.querySelector('.js-full-logs-container') as HTMLElement\nobserve('.js-full-logs-container', {\n  constructor: HTMLElement,\n  add() {\n    calculateContainerHeights()\n    addScrollListener()\n  },\n})\n\nconst uxRefresh = () => {\n  const logsContainer = scrollableContainer()\n  const logsContainerHasUxRefreshAttribute = logsContainer?.hasAttribute('data-ux-refresh')\n  return logsContainer && logsContainerHasUxRefreshAttribute\n}\n\nfunction scrollListener() {\n  determineScrollDirection()\n  renderSteps()\n}\n\nfunction addScrollListener() {\n  const container = uxRefresh() ? document : scrollableContainer() || document\n  /* eslint-disable-next-line github/prefer-observers */\n  container.addEventListener('scroll', scrollListener)\n}\n\nfunction determineScrollDirection() {\n  const newScrollTop = calculateScrollTop()\n  if (lastScrollTop !== null) {\n    if (!scrolledUp && newScrollTop < lastScrollTop) {\n      scrolledUp = true\n    }\n  }\n  lastScrollTop = newScrollTop\n}\n\nfunction calculateScrollTop(): number {\n  return isFullscreen() ? fullLogsContainer().scrollTop : window.scrollY\n}\n\nfunction calculateContainerHeights() {\n  if (uxRefresh() && !isFullscreen()) {\n    scrollableContainer()?.style.removeProperty('height')\n  } else {\n    makeScrollable(scrollableContainer())\n  }\n}\n\nfunction makeScrollable(element: HTMLElement | null) {\n  if (!element) return\n  element.style.height = `${window.innerHeight - element.getBoundingClientRect().top}px`\n}\n\ncalculateContainerHeights()\naddScrollListener()\n\n/* eslint-disable-next-line github/prefer-observers */\nwindow.addEventListener('resize', calculateContainerHeights)\n\nexport const enum StepState {\n  INITIAL = 0,\n  COMPLETED_LOGS_LOADING = 1,\n  COMPLETED_LOGS_LOADED = 2,\n  STREAMING = 3,\n  ERROR = 4,\n}\n\ntype Cluster = {\n  startIndex: number\n  endIndex: number\n  wrapper: HTMLElement\n  visible: boolean\n  height?: number\n}\n\ntype Step = {\n  externalId: string\n  number: number\n  parser: LogParser\n  container: HTMLElement\n  searchLineIndexes: number[]\n  clusters: Cluster[]\n  state: StepState\n  permalinkLine?: number\n  expandedGroups: Set<number>\n}\n\nconst {href, hash} = window.location\nconst baseURL = href.substring(0, href.length - hash.length)\n\nconst buffer: Record<string, string[]> = {}\n\nexport function flushLogs(step: Step) {\n  const newLines = buffer[step.externalId]\n  if (!newLines) return\n  for (const stp of Object.values(stepsMap)) {\n    if (step !== stp && !stp.container.hasAttribute('manually-opened')) closeStep(stp)\n  }\n  updateStreamingLogs(step, newLines, null)\n  delete buffer[step.externalId]\n}\n\nexport function bufferLogs(externalId: string, lines: string[]) {\n  buffer[externalId] = (buffer[externalId] || []).concat(lines)\n}\n\nexport function bufferedStepIds() {\n  return Object.keys(buffer)\n}\n\nexport function configureStep(container: HTMLElement, permalinkLine?: number): Step {\n  const number = getStepNumber(container)\n  const externalId = container.getAttribute('data-external-id') || ''\n  const parser = new LogParser('', `${baseURL}#step:${number}`)\n\n  const step: Step = {\n    externalId,\n    number,\n    parser,\n    container,\n    searchLineIndexes: [],\n    state: StepState.INITIAL,\n    clusters: [],\n    permalinkLine,\n    expandedGroups: new Set<number>(),\n  }\n\n  moveStep(container)\n  stepsMap[externalId] = step\n  container.removeEventListener('toggle', handleToggle)\n  container.addEventListener('toggle', handleToggle)\n  container.removeEventListener('click', handleClick)\n  container.addEventListener('click', handleClick)\n\n  flushLogs(step)\n  return step\n}\n\nfunction stepFromContainer(container: HTMLElement): Step | null {\n  const externalId = container.getAttribute('data-external-id')\n  if (!externalId) {\n    return null\n  }\n\n  return stepsMap[externalId] || null\n}\n\nasync function handleToggle(event: Event) {\n  const container = event.currentTarget as HTMLElement\n  const step = stepFromContainer(container)\n  if (!step) {\n    return\n  }\n\n  // This shouldn't be necessary, but we are seeing that heights sometimes are not calculated correctly when the page loads\n  calculateContainerHeights()\n\n  if (isOpen(step) && step.state !== StepState.COMPLETED_LOGS_LOADED) await loadCompletedLogs(step)\n  renderSteps()\n}\n\nfunction handleClick(event: Event) {\n  const container = event.currentTarget as HTMLElement\n  const step = stepFromContainer(container)\n  if (!step) {\n    return\n  }\n\n  if (step.state !== StepState.STREAMING && !getCompletedLogURL(step)) {\n    event.preventDefault()\n    return\n  }\n\n  if (!step.container.hasAttribute('open')) {\n    step.container.setAttribute('manually-opened', '')\n  }\n}\n\nfunction isOpen(step: Step) {\n  return step.container.hasAttribute('open')\n}\n\nfunction openStep(step: Step) {\n  resetScrollToLogic()\n  step.container.setAttribute('open', 'open')\n}\n\nfunction closeStep(step: Step) {\n  step.container.removeAttribute('open')\n  const element = step.container.closest<CheckStepElement>('check-step')\n  if (element) {\n    element.removeAttribute('data-in-progress')\n    element.removeAttribute('manually-opened')\n    element.update()\n  }\n}\n\nfunction getCompletedLogURL(step: Step) {\n  return step.container.getAttribute('data-log-url')\n}\n\n// Order steps in the UI according to their step number\nfunction moveStep(stepContainer: Element) {\n  // if descendant of check-step element (new non-postback UI)\n  const isCheckStepChild = stepContainer.parentNode?.nodeName === 'CHECK-STEP'\n\n  // if the stepContainer is a child of a check-step, we want to move the check-step parent\n  const elementToMove = isCheckStepChild ? stepContainer.parentElement! : stepContainer\n  const stepNumber = getStepNumber(elementToMove)\n\n  const siblingElements = [...elementToMove.parentElement!.children]\n  for (const siblingElement of siblingElements) {\n    if (siblingElement === elementToMove) break\n    const siblingStepNumber = getStepNumber(siblingElement)\n    if (+stepNumber < +siblingStepNumber) {\n      elementToMove.parentElement!.insertBefore(elementToMove, siblingElement)\n    }\n  }\n}\n\nfunction showLoader(step: Step) {\n  const {loader, chevron} = queryElements(step)\n  loader.removeAttribute('hidden')\n  chevron.setAttribute('hidden', 'hidden')\n}\n\nfunction hideLoader(step: Step) {\n  const {loader, chevron} = queryElements(step)\n  loader.setAttribute('hidden', 'hidden')\n  chevron.removeAttribute('hidden')\n}\n\nfunction enableStep(step: Step) {\n  const {chevron} = queryElements(step)\n  chevron.style.removeProperty('visibility')\n  step.container.style.removeProperty('pointer-events')\n}\n\nexport async function loadCompletedLogs(\n  step: Step,\n  options?: {keepLoader?: boolean; scrollToBottom?: boolean; permaLink?: boolean},\n) {\n  options = options || {}\n\n  if (step.state === StepState.COMPLETED_LOGS_LOADING) return\n  if (step.state === StepState.COMPLETED_LOGS_LOADED) return\n\n  const url = getCompletedLogURL(step)\n  if (!url) return\n\n  resetScrollToLogic()\n  if (options.scrollToBottom || options.permaLink) openStep(step)\n\n  const {downloadErrorMessage, downloadErrorMessageText} = queryElements(step)\n  downloadErrorMessage.hidden = true\n  showLoader(step)\n  resetStep(step)\n  enableStep(step)\n\n  try {\n    step.state = StepState.COMPLETED_LOGS_LOADING\n\n    const response = await fetch(url)\n\n    // if the SSO token expires, we will get an HTML response instead of logs (with an non-error status code)\n    // so let's check that the response type is text not html\n    const isHTMLContent = response?.headers?.get('Content-Type')?.includes('text/html')\n\n    if (!response.ok || isHTMLContent) {\n      let text\n\n      if (response.status === 410) {\n        text = 'data-removed-text'\n      } else if (response.status === 404) {\n        text = 'data-not-found-text'\n      } else {\n        text = 'data-error-text'\n      }\n\n      const message = downloadErrorMessageText.getAttribute(text)!\n\n      downloadErrorMessageText.textContent = message\n      throw new Error('Response was not OK')\n    }\n\n    const reader = response.body && response.body.getReader && response.body.getReader()\n    if (reader) {\n      await streamCompletedLog(step, reader, options)\n    } else {\n      const data = await response.text()\n      await appendLogs(step, data, options)\n    }\n\n    step.state = StepState.COMPLETED_LOGS_LOADED\n    sendStats({incrementKey: 'ACTIONS_COMPLETED_LOG_VIEWS_SUCCEED'})\n\n    if (options.scrollToBottom) {\n      scrollToLine(step, step.parser.logLines.length - 1)\n    }\n  } catch (err) {\n    step.state = StepState.ERROR\n    downloadErrorMessage.hidden = false\n    sendStats({incrementKey: 'ACTIONS_COMPLETED_LOG_VIEWS_FAIL'})\n    throw err\n  } finally {\n    hideLoader(step)\n  }\n}\n\nexport async function updateStreamingLogs(step: Step, newLines: LogLike[], startLine: number | null) {\n  if (getCompletedLogURL(step)) return\n\n  if (step.state !== StepState.STREAMING) {\n    // change step to in progress while we wait for API update to finish\n    // avoids awkward state of logs coming in before status icon has been updated\n    const checkStepElement = step.container.closest<CheckStepElement>('check-step')\n    if (checkStepElement) {\n      checkStepElement.setAttribute('data-in-progress', '')\n      // TODO: we can hack started_at here too\n      checkStepElement.update()\n    }\n  }\n  step.state = StepState.STREAMING\n\n  if (newLines.length === 0) return\n\n  const firstLines = step.parser.rawLogData.length === 0\n  const container = fullLogsContainer()\n  const lastElement = findLineElement(step, step.parser.logLines.length - 1)\n  const lastElementBottom = lastElement\n    ? lastElement.getBoundingClientRect().bottom\n    : container.getBoundingClientRect().bottom\n  const lastElementInView = isFullscreen()\n    ? lastElementBottom < container.getBoundingClientRect().bottom\n    : lastElementBottom < fullLogsContainerHeight()\n\n  if (shouldAutoScroll) {\n    // Break out of auto scroll when a scroll up is detected\n    shouldAutoScroll = !scrolledUp\n  } else {\n    // Switch back to auto scroll when last element is in view\n    shouldAutoScroll = lastElementInView\n    if (shouldAutoScroll) {\n      scrolledUp = false\n    }\n  }\n\n  await appendLogs(step, newLines, {startLine})\n\n  const {loader, logsContainer, downloadErrorMessage, animation} = queryElements(step)\n  enableStep(step)\n\n  // Remove the loader and display the logs\n  if (step.parser.rawLogData.length > 0 && !loader.getAttribute('hidden')) {\n    loader.setAttribute('hidden', 'hidden')\n    logsContainer.hidden = false\n  }\n  // Hide any previous error message\n  downloadErrorMessage.hidden = true\n  // Improves the UX when we start receiving log lines but the partial\n  // for the step summary hasn't loaded yet\n  if (animation) animation.removeAttribute('hidden')\n\n  if (firstLines) {\n    openStep(step)\n    sendStats({incrementKey: 'ACTIONS_STREAMING_LOG_VIEWS_SUCCEED'})\n  }\n\n  if (isOpen(step) && shouldAutoScroll) {\n    lastScrollTop = calculateScrollTop()\n    scrollToLine(step, step.parser.logLines.length - 1)\n  }\n}\n\nasync function streamCompletedLog(\n  step: Step,\n  reader: ReadableStreamReader<unknown>,\n  options?: {keepLoader?: boolean; scrollToBottom?: boolean},\n) {\n  let bytes = 0\n  const utf8Decoder = new TextDecoder('utf-8')\n  for (;;) {\n    // @ts-expect-error not sure what the expected type here should be\n    const chunk = await reader.read()\n    if (chunk.done) break\n    // chunk.value is always an Uint8Array if done === true\n    const value = chunk.value == null ? new Uint8Array(0) : (chunk.value as Uint8Array)\n\n    bytes += value.length\n\n    if (bytes > MAX_LOG_SIZE_IN_BYTES) {\n      queryElements(step).truncatedMessage.hidden = false\n      break\n    }\n\n    const data = utf8Decoder.decode(value)\n    await appendLogs(step, data, options)\n  }\n}\n\nfunction getStepNumber(stepDetails: Element): number {\n  const attr = stepDetails.tagName === 'CHECK-STEP' ? 'data-number' : 'data-step-number'\n  const num = stepDetails.getAttribute(attr)\n  if (!num) return -1\n  return +num\n}\n\nfunction resetStep(step: Step) {\n  step.parser.setData('')\n  step.clusters = []\n  queryElements(step).logsContainer.textContent = ''\n}\n\n// We block virtualizing/materializing while scrolling. There are cases where we want to reset this logic.\nfunction resetScrollToLogic() {\n  elementToScroll = null\n}\n\nasync function appendLogs(\n  step: Step,\n  data: string | LogLike[],\n  options?: {startLine?: number | null; keepLoader?: boolean; scrollToBottom?: boolean},\n) {\n  options = options || {}\n  const {logsContainer} = queryElements(step)\n  const lastCluster = step.clusters[step.clusters.length - 1]\n  let startIndex = lastCluster ? lastCluster.startIndex : 0\n\n  const lastLine = step.parser.logLines.length - 1\n  if (typeof data === 'string') {\n    step.parser.appendData(data)\n  } else {\n    step.parser.appendLines(data, options.startLine)\n  }\n  renderLines(step, [lastLine]) // re-render previous last line, just in case it's changed\n\n  // Divide the log lines in clusters\n  while (startIndex < step.parser.logLines.length) {\n    const endIndex = Math.min(startIndex + LINES_PER_CLUSTER, step.parser.logLines.length) - 1\n\n    if (lastCluster && lastCluster.startIndex === startIndex) {\n      if (lastCluster.visible) {\n        appendLines(step, lastCluster, lastCluster.endIndex + 1, endIndex)\n      } else {\n        estimateClusterHeight(step, lastCluster)\n      }\n      lastCluster.endIndex = endIndex\n    } else {\n      const wrapper = document.createElement('div')\n      const cluster: Cluster = {\n        startIndex,\n        endIndex,\n        wrapper,\n        visible: false,\n      }\n      estimateClusterHeight(step, cluster)\n      step.clusters.push(cluster)\n    }\n\n    startIndex += LINES_PER_CLUSTER\n  }\n  logsContainer.hidden = false\n  if (!options.keepLoader) hideLoader(step)\n  await syncDOM(step, true)\n}\n\n// For a very big log just the fact of adding many empty wrappers at the same time may freeze the browser.\n// With this function we add wrappers one at a time.\nasync function syncDOM(step: Step, render: boolean) {\n  const {logsContainer} = queryElements(step)\n  const count = logsContainer.childElementCount\n  if (step.clusters.length === count) return\n\n  const cluster = step.clusters[count]!\n  logsContainer.append(cluster.wrapper)\n\n  // We just want to render the first clusters (the ones that are visible).\n  // As soon as there's some that is not visible, we stop calculating their visibility\n  // to speed up the process.\n  if (render) renderCluster(step, cluster)\n\n  return new Promise<void>(resolve => {\n    setTimeout(async () => {\n      await syncDOM(step, render && cluster.visible)\n      resolve()\n    }, 0)\n  })\n}\n\nfunction estimateClusterHeight(step: Step, cluster: Cluster) {\n  let i = cluster.startIndex\n  let total = 0\n  while (i <= cluster.endIndex) {\n    const line = step.parser.logLines[i++]!\n    const groupIndex = line.group?.lineIndex\n    if (groupIndex == null || step.expandedGroups.has(groupIndex)) total++\n  }\n\n  if (!cluster.visible) {\n    const estHeight = cluster.height ?? total * ESTIMATED_LINE_LENGTH\n    cluster.wrapper.style.height = `${estHeight}px`\n  }\n}\n\nfunction fullLogsContainer() {\n  return scrollableContainer() || document.documentElement\n}\n\nfunction fullLogsContainerHeight() {\n  // For UX refresh, use the entire window, unless in full screen mode\n  return scrollableContainer() && (!uxRefresh() || isFullscreen())\n    ? scrollableContainer().offsetHeight\n    : window.innerHeight\n}\n\nfunction renderCluster(step: Step, cluster: Cluster) {\n  const container = fullLogsContainer()\n  const {wrapper, visible} = cluster\n\n  const scrollTop = uxRefresh() && !isFullscreen() ? -container.getBoundingClientRect().top : container.scrollTop\n  const above = scrollTop > wrapper.offsetTop + wrapper.offsetHeight\n  const below = scrollTop + fullLogsContainerHeight() < wrapper.offsetTop\n\n  if (above || below) {\n    setClusterVisibility(step, cluster, false)\n  } else if (!visible) {\n    setClusterVisibility(step, cluster, true)\n  }\n}\n\nfunction setClusterVisibility(step: Step, cluster: Cluster, visible: boolean) {\n  const {wrapper} = cluster\n  const selection = window.getSelection()\n\n  if (selection && !selection.isCollapsed && selection.containsNode(wrapper, true)) visible = true\n  if (visible === cluster.visible) return\n\n  if (visible) {\n    appendLines(step, cluster, cluster.startIndex, cluster.endIndex)\n    wrapper.style.height = 'auto'\n  } else {\n    if (cluster.visible) cluster.height = wrapper.offsetHeight || cluster.height\n    wrapper.style.height = `${cluster.height}px`\n    wrapper.textContent = ''\n  }\n  cluster.visible = visible\n}\n\nfunction appendLines(step: Step, cluster: Cluster, startIndex: number, endIndex: number) {\n  const lineIndexes = []\n  for (let index = startIndex; index <= endIndex; index++) {\n    lineIndexes.push(index)\n  }\n  const template = html`\n    ${repeat(lineIndexes, lineIndex => {\n      const tmpl = lineTemplate(step, lineIndex)\n      if (!tmpl) return html`<div data-index=\"${lineIndex}\" hidden></div>`\n      return html`<div data-index=\"${lineIndex}\">${tmpl}</div>`\n    })}\n  `\n  const element = document.createElement('div')\n  renderHTML(template, element)\n  cluster.wrapper.appendChild(element)\n}\n\nfunction renderStep(step: Step) {\n  if (step.state >= StepState.COMPLETED_LOGS_LOADED) {\n    for (const cluster of step.clusters) {\n      renderCluster(step, cluster)\n    }\n  }\n}\n\nfunction renderSteps() {\n  // Don't attempt to re-render steps while we are actively scrolling towards an element. Once the element is within the view\n  // we can start processing renders again\n  if (elementToScroll) {\n    const container = fullLogsContainer()\n    const scrollTop = uxRefresh() ? -container.getBoundingClientRect().top : container.scrollTop\n    const elemAbove = scrollTop > elementToScroll.offsetTop + elementToScroll.offsetHeight\n    const elemBelow = scrollTop + fullLogsContainerHeight() < elementToScroll.offsetTop\n    if (!elemAbove && !elemBelow) {\n      elementToScroll = null\n    }\n  } else {\n    for (const step of getUnorderedSteps()) {\n      if (isOpen(step)) renderStep(step)\n    }\n  }\n}\n\nfunction queryElements(step: Step) {\n  const logDisplayElement = step.container.querySelector<HTMLElement>('.js-checks-log-display')!\n  return {\n    logsContainer: logDisplayElement.querySelector<HTMLElement>('.js-checks-log-display-container')!,\n    loader: step.container.querySelector<SVGElement>('.js-check-step-loader')!,\n    downloadErrorMessage: logDisplayElement.querySelector<HTMLElement>('.js-checks-log-display-error')!,\n    downloadErrorMessageText: logDisplayElement.querySelector<HTMLElement>('.js-checks-log-display-error-text')!,\n    animation: step.container.querySelector('.js-check-step-icon-animation'),\n    truncatedMessage: logDisplayElement.querySelector<HTMLElement>('.js-checks-log-display-truncated')!,\n    chevron: step.container.querySelector<SVGElement>('.js-check-step-chevron')!,\n  }\n}\n\nexport function isFullscreen() {\n  const checkSteps = document.querySelector<HTMLElement>('.js-check-steps')\n  return !!checkSteps?.style?.position\n}\n\nexport function searchStep(step: Step, text: string, selectFirstLine: boolean) {\n  cancelSearchStep(step)\n\n  const searchLineIndexes = step.parser.search(text, selectFirstLine)\n  step.searchLineIndexes = searchLineIndexes\n  if (selectFirstLine && searchLineIndexes.length > 0) {\n    renderLines(step, step.searchLineIndexes)\n    scrollToLine(step, searchLineIndexes[0]!, {select: true})\n  }\n  return searchLineIndexes\n}\n\nexport function cancelSearchStep(step: Step) {\n  step.parser.cancelSearch()\n  renderLines(step, step.searchLineIndexes)\n  step.searchLineIndexes = []\n}\n\nfunction renderLine(step: Step, index: number, element: HTMLElement) {\n  const template = lineTemplate(step, index)\n  if (template === null) {\n    element.hidden = true\n    return\n  }\n  element.hidden = false\n  renderHTML(template, element)\n}\n\nfunction lineTemplate(step: Step, index: number) {\n  const line = step.parser.logLines[index]!\n  const groupIndex = line.group?.lineIndex\n  if (groupIndex != null && !step.expandedGroups.has(groupIndex)) return null\n\n  const groupExpanded = line.isGroup && step.expandedGroups.has(index)\n  return step.parser.renderTemplate(line, !!groupExpanded, false)\n}\n\nfunction renderLines(step: Step, lineIndexes: number[]) {\n  for (const index of lineIndexes) {\n    const element = findLineElement(step, index)\n    if (element) renderLine(step, index, element)\n  }\n}\n\nfunction findLineElement(step: Step, lineIndex: number) {\n  return step.container.querySelector(`[data-index='${lineIndex}']`) as HTMLElement\n}\n\nexport function scrollToLine(step: Step, lineIndex: number, options?: {select?: boolean}) {\n  const {select} = options || {}\n  openStep(step)\n\n  // Before scrolling ensure that we have materialized at least +/- 50 lines on either side\n  // This ensures we do not materialize another cluster once we scroll to the index\n  // which would change the visible elements\n  const skipVirtualization = step.clusters.length < 100\n  for (const cluster of step.clusters) {\n    if (\n      skipVirtualization ||\n      (lineIndex - LINES_PER_CLUSTER <= cluster.endIndex && lineIndex + LINES_PER_CLUSTER >= cluster.startIndex)\n    ) {\n      setClusterVisibility(step, cluster, true)\n    }\n  }\n\n  // Additionally render neighboring clusters in case we step into a small cluster in betwen two other open clusters.\n  const orderedSteps = getUnorderedSteps().sort((a, b) => a.number - b.number)\n  const stepIndex = orderedSteps.findIndex(x => x.number === step.number)\n  ensureEnoughMaterializedLines(orderedSteps, stepIndex, LINES_PER_CLUSTER - (lineIndex + 1), true)\n  const linesAwayFromEnd = LINES_PER_CLUSTER - (step.clusters[step.clusters.length - 1]!.endIndex - lineIndex)\n  ensureEnoughMaterializedLines(orderedSteps, stepIndex, linesAwayFromEnd, false)\n\n  const element = findLineElement(step, lineIndex)\n  if (!element) return\n\n  const {hidden} = element\n  elementToScroll = element\n  // The only reason for a line to be hidden is that it's in a collapsed group\n  if (hidden) expandGroup(step, lineIndex)\n  if (hidden && select) renderLine(step, lineIndex, element)\n  if (select) selectLine(element)\n\n  // Ideally we don't do this but we only add expanded groups after the grouptoggle handler is triggered.\n  setTimeout(async () => {\n    elementToScroll?.scrollIntoView({behavior: skipVirtualization ? 'smooth' : 'auto', block: 'center'})\n  }, 0)\n}\n\nfunction ensureEnoughMaterializedLines(\n  orderedSteps: Step[],\n  currentStep: number,\n  linesToMaterialize: number,\n  above: boolean,\n) {\n  let linesLeft = linesToMaterialize\n\n  const increment = above ? -1 : 1\n  let i = currentStep + increment\n  while (linesLeft > 0 && ((above && i >= 0) || (!above && i < orderedSteps.length))) {\n    if (orderedSteps[i]!.clusters?.length > 0 && isOpen(orderedSteps[i]!)) {\n      const neighborStep: Step = orderedSteps[i]!\n      const clusterIndex = above ? neighborStep.clusters.length - 1 : 0\n      const nearestNeighborCluster = neighborStep.clusters[clusterIndex]!\n      setClusterVisibility(neighborStep, nearestNeighborCluster, true)\n      linesLeft -= nearestNeighborCluster.endIndex - nearestNeighborCluster.startIndex + 1\n    }\n    i += increment\n  }\n}\n\nfunction expandGroup(step: Step, lineIndex: number) {\n  const line = step.parser.logLines[lineIndex]!\n  const groupIndex = line.group?.lineIndex\n  if (groupIndex == null) return\n  step.expandedGroups.add(groupIndex)\n  const details = step.container.querySelector(`[data-index='${groupIndex}'] details`)\n  if (details) details.setAttribute('open', 'open')\n}\n\nfunction selectLine(element: HTMLElement) {\n  for (const prev of document.querySelectorAll('.js-check-step-line.selected')) {\n    prev.classList.remove('selected')\n  }\n  element.querySelector<HTMLElement>('.js-check-step-line')!.classList.add('selected')\n}\n\nexport function findStep(childElement: Element) {\n  const container = childElement.closest<HTMLElement>('.js-checks-log-details')!\n  return getUnorderedSteps().find(step => step.container === container)\n}\n\nexport function toggleGroup(step: Step, index: number, open: boolean) {\n  open ? step.expandedGroups.add(index) : step.expandedGroups.delete(index)\n\n  const lines = step.parser.logLines.filter(line => line.group?.lineIndex === index)\n  if (lines.length === 0) return\n\n  const lineIndexes = lines.map(line => line.lineIndex)\n  const minLine = lineIndexes[0]!\n  const maxLine = lineIndexes[lineIndexes.length - 1]!\n\n  for (const cluster of step.clusters) {\n    if (cluster.startIndex <= maxLine && cluster.endIndex >= minLine) {\n      estimateClusterHeight(step, cluster)\n      // This should already be visible if we are scrolling\n      if (!elementToScroll) {\n        renderCluster(step, cluster)\n      }\n      if (cluster.visible) {\n        const clusterLineIndexes = lineIndexes.filter(idx => idx >= cluster.startIndex && idx <= cluster.endIndex)\n        renderLines(step, clusterLineIndexes)\n      }\n    }\n  }\n\n  // clusters after the group may have change visibility\n  renderSteps()\n}\n\nexport function selectPermalinkLine(step: Step, permalinkLine: number, scroll: boolean) {\n  const lineIndex = step.parser.indexFromNumber(permalinkLine)\n  if (scroll) {\n    scrollToLine(step, lineIndex, {select: true})\n  } else {\n    const element = findLineElement(step, lineIndex)\n    if (element) selectLine(element)\n  }\n}\n\nfunction toggleFullScreen() {\n  const checkSteps = document.querySelector<HTMLElement>('.js-check-steps')!\n\n  setFullScreenKeyboardShortcuts()\n  lastScrollTop = null\n\n  if (isFullscreen()) {\n    // Turn the logs container back into what it was before becoming full screen\n    if (uxRefresh()) {\n      const container = fullLogsContainer()\n      const stepHeaders = container.querySelectorAll<HTMLElement>('.js-check-step-summary')\n      const logToolbar = document.querySelector<HTMLElement>('.js-checks-log-toolbar')!\n\n      scrollableContainer()?.removeEventListener('scroll', scrollListener)\n      /* eslint-disable-next-line github/prefer-observers */\n      document.addEventListener('scroll', scrollListener)\n\n      container.classList.remove('overflow-y-scroll')\n      logToolbar.classList.add('uxr_CheckRun-header')\n\n      for (const stepHeader of stepHeaders) {\n        stepHeader.classList.add('uxr_CheckStep-header')\n        stepHeader.classList.remove('top-0')\n        stepHeader.style.removeProperty('sticky')\n      }\n    }\n\n    for (const prop of ['position', 'top', 'left', 'right', 'bottom', 'zIndex']) {\n      checkSteps.style.removeProperty(prop)\n    }\n    checkSteps.classList.add('rounded-md-1')\n  } else {\n    // Turn the logs container into a full screen scrollable element\n    if (uxRefresh()) {\n      const container = fullLogsContainer()\n      const stepHeaders = container.querySelectorAll<HTMLElement>('.js-check-step-summary')\n      const logToolbar = document.querySelector<HTMLElement>('.js-checks-log-toolbar')!\n\n      /* eslint-disable-next-line github/prefer-observers */\n      scrollableContainer()?.addEventListener('scroll', scrollListener)\n      document.removeEventListener('scroll', scrollListener)\n\n      container.classList.add('overflow-y-scroll')\n      logToolbar.classList.remove('uxr_CheckRun-header')\n\n      for (const stepHeader of stepHeaders) {\n        stepHeader.classList.remove('uxr_CheckStep-header')\n        stepHeader.classList.add('top-0')\n        stepHeader.style.position = 'sticky'\n      }\n    }\n\n    checkSteps.style.position = 'fixed'\n    checkSteps.style.left = '0'\n    checkSteps.style.right = '0'\n    checkSteps.style.top = '0'\n    checkSteps.style.bottom = '0'\n    checkSteps.style.zIndex = '1000'\n    checkSteps.classList.remove('rounded-md-1')\n  }\n  calculateContainerHeights()\n  renderSteps()\n}\n\n// Set appropriate keyboard shortcuts, shift + f should always toggle while Esc should be available only to exit while in full-screen mode\n// https://github.com/github/hotkey\nfunction setFullScreenKeyboardShortcuts() {\n  const fullScreenToggle = document.querySelector<HTMLElement>('.js-checks-log-fullscreen')!\n  uninstall(fullScreenToggle)\n\n  if (areCharacterKeyShortcutsEnabled()) {\n    fullScreenToggle.setAttribute('data-hotkey', isFullscreen() ? 'Shift+F' : 'Shift+F,Escape')\n  } else {\n    fullScreenToggle.setAttribute('data-hotkey', isFullscreen() ? '' : 'Escape')\n  }\n  /* eslint-disable-next-line github/no-dataset */\n  install(fullScreenToggle, fullScreenToggle.dataset.shortcut)\n}\n\non('change', '.js-checks-log-fullscreen', toggleFullScreen)\n","import {html, render as renderHTML} from 'lit-html'\nimport {LogParser} from './log-parser'\nimport {repeat} from 'lit-html/directives/repeat'\n\nconst logParser = new LogParser('', '')\n\nexport async function loadCheckRunLogs(checkRunLogsDisplay: HTMLElement): Promise<void> {\n  const url = getCheckRunLogsUrl(checkRunLogsDisplay)\n  if (!url) return\n\n  const {blankSlate, logsContainer} = queryElements(checkRunLogsDisplay)\n\n  try {\n    const response = await fetch(url, {headers: {'X-Requested-With': 'XMLHttpRequest'}})\n    if (!response.ok) {\n      throw new Error('Response was not OK')\n    }\n    const data = await response.text()\n    hideBlankSlate(blankSlate)\n    await appendCheckRunLogs(logsContainer, data)\n  } catch (err) {\n    throw err\n  } finally {\n    hideBlankSlate(blankSlate)\n  }\n}\n\nfunction hideBlankSlate(blankSlate: HTMLElement) {\n  blankSlate.setAttribute('hidden', 'hidden')\n}\n\nfunction getCheckRunLogsUrl(checkRunLogsDisplay: HTMLElement) {\n  return checkRunLogsDisplay.getAttribute('check-run-log-url')\n}\n\nasync function appendCheckRunLogs(logsContainer: HTMLElement, data: string | string[]) {\n  if (typeof data === 'string') {\n    logParser.appendData(data)\n  } else {\n    logParser.appendLines(data, 0)\n  }\n\n  const lineIndexes = []\n  for (let index = 0; index < logParser.logLines.length; index++) {\n    lineIndexes.push(index)\n  }\n  const template = html`\n    ${repeat(lineIndexes, lineIndex => {\n      const tmpl = lineTemplate(lineIndex)\n      if (!tmpl) return html`<div data-index=\"${lineIndex}\" hidden></div>`\n      return html`<div data-index=\"${lineIndex}\">${tmpl}</div>`\n    })}\n  `\n  const element = document.createElement('div')\n  renderHTML(template, element)\n  logsContainer.appendChild(element)\n}\n\nfunction lineTemplate(index: number) {\n  const line = logParser.logLines[index]!\n  return logParser.renderTemplate(line, true, true)\n}\n\nfunction queryElements(checkRunLogsDisplay: HTMLElement) {\n  return {\n    blankSlate: document.querySelector<HTMLElement>('.js-steps-blankslate')!,\n    logsContainer: checkRunLogsDisplay.querySelector<HTMLElement>('.js-check-run-log-display-container')!,\n  }\n}\n","import {configureStep, findStep, getUnorderedSteps, loadCompletedLogs, selectPermalinkLine, toggleGroup} from './steps'\nimport {fromEvent} from '@github-ui/subscription'\nimport {loadCheckRunLogs} from './check-runs'\n// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\n// eslint-disable-next-line no-restricted-imports\nimport {on} from 'delegated-events'\n\nlet permalinkStepNumber: number | null = null\nlet permalinkLine: number | null = null\n\nfunction parseLocationHash() {\n  const permalinkInfo = window.location.hash.match(/^#step:(\\d+):(\\d+)$/) || []\n  permalinkStepNumber = +permalinkInfo[1]! || null\n  permalinkLine = +permalinkInfo[2]! || null\n}\n\nparseLocationHash()\n\non('change', '.js-checks-log-timestamps', event => {\n  const timestamps = event.currentTarget as HTMLInputElement\n  const logsContainer = timestamps.closest<HTMLElement>('.js-check-steps')!\n  logsContainer.classList.toggle('CheckRun-show-timestamps', timestamps.checked)\n})\n\nobserve('.js-checks-log-details', {\n  async add(container) {\n    const checkSteps = document.querySelector<HTMLElement>('.js-steps-blankslate')\n    if (checkSteps) checkSteps.hidden = true\n    const checkRunLogs = document.querySelector<HTMLElement>('.js-check-run-log-display')\n    if (checkRunLogs) checkRunLogs.hidden = true\n    const search = document.querySelector<HTMLElement>('.js-check-run-search')\n    if (search) search.hidden = false\n    const step = configureStep(container as HTMLElement)\n    const expand = container.getAttribute('data-expand') && permalinkStepNumber === null\n    const plink = step.number === permalinkStepNumber\n    if (plink || expand) {\n      await loadCompletedLogs(step, {keepLoader: true, scrollToBottom: !plink, permaLink: plink})\n      if (plink && permalinkLine !== null) {\n        selectPermalinkLine(step, permalinkLine, true)\n      }\n    }\n  },\n})\n\nobserve('.js-check-run-blankslate', {\n  subscribe: el =>\n    fromEvent(el, 'socket:message', function (event: Event) {\n      const target = event.target as Element\n      const {has_steps: hasSteps} = (event as CustomEvent).detail.data\n      if (hasSteps) target.remove()\n    }),\n})\n\nobserve('.js-steps-dropdown', {\n  subscribe: el =>\n    fromEvent(el, 'socket:message', function (event: Event) {\n      const target = event.target as Element\n      const {data} = (event as CustomEvent).detail\n      const {log_archive: logArchive, raw_logs: rawLogs} = data\n      if (logArchive) {\n        const item = target.querySelector<HTMLElement>('.js-steps-dropdown-log-archive')\n        if (item) item.hidden = false\n      }\n      if (rawLogs) {\n        const item = target.querySelector<HTMLElement>('.js-steps-dropdown-raw-logs')\n        if (item) item.hidden = false\n      }\n      if (logArchive || rawLogs) {\n        const divider = target.querySelector<HTMLElement>('.js-steps-dropdown-divider')\n        if (divider) divider.hidden = false\n      }\n    }),\n})\n\nobserve('.js-check-run-log-display', {\n  async add(container) {\n    await loadCheckRunLogs(container as HTMLElement)\n  },\n})\n\nif (ResizeObserver) {\n  const setLogTitleStickyValues = (checkRunHeaderElem: HTMLElement) => {\n    const style = window.getComputedStyle(checkRunHeaderElem)\n    const {borderBottomWidth, marginBottom} = style\n    const logTitles = document.getElementsByClassName('uxr_CheckStep-header') as HTMLCollectionOf<HTMLElement>\n    for (const logTitle of logTitles) {\n      const newTop = checkRunHeaderElem.clientHeight + parseInt(marginBottom, 10) + parseInt(borderBottomWidth, 10)\n      logTitle.style.top = `${newTop}px`\n    }\n  }\n\n  const observer = new ResizeObserver(entries => {\n    for (const entry of entries) {\n      setLogTitleStickyValues(entry.target as HTMLElement)\n    }\n  })\n\n  // observe the check run header for size changes\n  // and adjust the `top` attribute of the log title accordingly\n  observe('.js-checks-log-toolbar', {\n    constructor: HTMLElement,\n    add(el) {\n      setLogTitleStickyValues(el)\n      // start observing the check run header\n      observer.observe(el)\n    },\n    remove(el) {\n      // remove the observer\n      observer.unobserve(el)\n    },\n  })\n}\n\non('click', '.js-steps-dropdown-raw-logs', event => {\n  event.currentTarget.closest('details')?.removeAttribute('open')\n})\n\n// When a grouped log line is expanded we need to programmatically show or hide the lines\n// and remember the index for the next time the lines are rendered\non(\n  'toggle',\n  '.js-checks-log-group',\n  event => {\n    const details = event.target as Element\n    const step = findStep(details)\n    if (!step) return\n\n    const parentLine = details.closest<HTMLElement>('.CheckStep-line')!\n    const lineElement = parentLine.parentElement\n    if (!lineElement) return\n\n    const index = Number(lineElement.getAttribute('data-index') || '0')\n    toggleGroup(step, index, details.hasAttribute('open'))\n  },\n  {capture: true},\n)\n\nasync function locationHashChanged() {\n  parseLocationHash()\n  if (permalinkLine === null) return\n\n  const step = getUnorderedSteps().find(stp => stp.number === permalinkStepNumber)\n  if (step) {\n    await loadCompletedLogs(step, {keepLoader: true})\n    selectPermalinkLine(step, permalinkLine, false)\n  }\n}\n\nwindow.addEventListener('hashchange', locationHashChanged, false)\n","import {cancelSearchStep, getUnorderedSteps, scrollToLine, searchStep} from './steps'\n\nimport {debounce} from '@github/mini-throttle'\n// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\n// eslint-disable-next-line no-restricted-imports\nimport {on} from 'delegated-events'\n\ninterface Match {\n  stepIndex: number\n  lineIndex: number\n}\n\nlet matches: Match[] = []\nlet selectedMatchIndex = -1\n\nfunction hasMatches() {\n  return matches.length > 0\n}\n\nfunction totalMatches() {\n  return matches.length\n}\n\nfunction goNext() {\n  if (!hasMatches()) return\n  goToMatch(selectedMatchIndex + 1 >= matches.length ? 0 : selectedMatchIndex + 1)\n}\n\nfunction goPrevious() {\n  if (!hasMatches()) return\n  goToMatch(selectedMatchIndex - 1 < 0 ? matches.length - 1 : selectedMatchIndex - 1)\n}\n\nfunction goToMatch(matchIndex: number) {\n  const current = matches[selectedMatchIndex]!\n  const match = matches[matchIndex]!\n  const steps = getUnorderedSteps()\n  const currentStep = steps[current.stepIndex]!\n  const nextStep = steps[match.stepIndex]!\n\n  currentStep.parser.setSelectedLine(-1)\n  nextStep.parser.setSelectedLine(match.lineIndex)\n\n  scrollToLine(nextStep, match.lineIndex, {select: true})\n\n  selectedMatchIndex = matchIndex\n}\n\nfunction search(text: string) {\n  let selectFirstLine = true\n  matches = getUnorderedSteps().reduce((result: Match[], step, stepIndex) => {\n    const lineIndexes = searchStep(step, text, selectFirstLine)\n    if (lineIndexes.length > 0) selectFirstLine = false\n\n    result.push(...lineIndexes.map(lineIndex => ({lineIndex, stepIndex})))\n    return result\n  }, [])\n  selectedMatchIndex = 0\n}\n\nfunction cancelSearch() {\n  matches = []\n  selectedMatchIndex = -1\n  for (const step of getUnorderedSteps()) {\n    cancelSearchStep(step)\n  }\n}\n\nobserve('.js-check-steps-search', {\n  constructor: HTMLElement,\n  add(step) {\n    configureCheckSteps(step)\n  },\n})\n\nfunction configureCheckSteps(checkSteps: HTMLElement) {\n  const toolbar = checkSteps.querySelector<HTMLElement>('.js-checks-log-toolbar')!\n  const input = toolbar.querySelector<HTMLInputElement>('.js-checks-log-search-input')!\n\n  input.addEventListener(\n    'input',\n    debounce(() => {\n      if (!input.value) {\n        cancelSearch()\n      } else {\n        search(input.value)\n      }\n      updateSearchUI(checkSteps, false)\n    }, 150),\n  )\n\n  input.addEventListener('focus', () => updateSearchUI(checkSteps, false))\n  input.addEventListener('blur', () => updateSearchUI(checkSteps, true))\n}\n\nfunction updateSearchUI(checkSteps: HTMLElement, hidden: boolean) {\n  if (totalMatches() > 0) {\n    showSearchUI(checkSteps)\n  } else {\n    disableSearchUI(checkSteps, hidden)\n  }\n}\n\nfunction disableSearchUI(checkSteps: HTMLElement, hidden: boolean) {\n  const toolbar = checkSteps.querySelector<HTMLElement>('.js-checks-log-toolbar')!\n  const previous = toolbar.querySelector<HTMLButtonElement>('.js-checks-log-search-previous')!\n  const next = toolbar.querySelector<HTMLButtonElement>('.js-checks-log-search-next')!\n  const counter = toolbar.querySelector<HTMLSpanElement>('.js-checks-log-search-counter')!\n\n  counter.textContent = '0/0'\n  counter.hidden = hidden\n  previous.disabled = true\n  next.disabled = true\n  previous.hidden = hidden\n  next.hidden = hidden\n}\n\nfunction showSearchUI(checkSteps: HTMLElement) {\n  const toolbar = checkSteps.querySelector<HTMLElement>('.js-checks-log-toolbar')!\n  const previous = toolbar.querySelector<HTMLButtonElement>('.js-checks-log-search-previous')!\n  const next = toolbar.querySelector<HTMLButtonElement>('.js-checks-log-search-next')!\n  const counter = toolbar.querySelector<HTMLSpanElement>('.js-checks-log-search-counter')!\n  const input = toolbar.querySelector<HTMLInputElement>('.js-checks-log-search-input')!\n\n  counter.textContent = `${selectedMatchIndex + 1}/${totalMatches()}`\n  counter.hidden = false\n  previous.hidden = false\n  next.hidden = false\n  previous.disabled = !input.value\n  next.disabled = !input.value\n}\n\non('submit', '.js-check-steps-search form.js-checks-log-search', event => {\n  event.preventDefault()\n  goNext()\n  updateSearchUI((event.target as Element).closest<HTMLElement>('.js-check-steps-search')!, false)\n})\n\non('click', '.js-checks-log-search-previous', event => {\n  goPrevious()\n  showSearchUI((event.target as Element).closest<HTMLElement>('.js-check-steps-search')!)\n})\n\non('click', '.js-checks-log-search-next', event => {\n  goNext()\n  showSearchUI((event.target as Element).closest<HTMLElement>('.js-check-steps-search')!)\n})\n","// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\nimport {remoteForm} from '@github/remote-form'\n\nlet automaticallyLoadLatestRun = false\n\nfunction showFlashMessage(template: HTMLTemplateElement) {\n  const node = document.importNode(template.content, true)\n  const flashContainer = document.querySelector<HTMLElement>('#js-flash-container')!\n  for (const child of flashContainer.children) {\n    flashContainer.removeChild(child)\n  }\n  flashContainer.appendChild(node)\n}\n\nfunction cleanCheckAndWait() {\n  // Remove any check run specific info\n  for (const element of document.querySelectorAll('.js-selected-check-run')) {\n    element.remove()\n  }\n\n  // Show blankslate\n  const blankslate = document.querySelector<HTMLElement>('.js-zen-blankslate')!\n  blankslate.hidden = false\n\n  // \"Wait\" until a link to the new check run appears\n  automaticallyLoadLatestRun = true\n}\n\nremoteForm('.js-check-suite-rerequest-form', async function (form, wants) {\n  const details = form.closest('details')\n  if (!details) {\n    return\n  }\n\n  details.removeAttribute('open') // close the dropdown menu\n  const selectedCheckRun = document.querySelector('#js-selected-check-run')\n\n  if (selectedCheckRun !== null) {\n    const input = form.querySelector<HTMLInputElement>('input[name=only_failed_check_runs]')!\n    const onlyFailedCheckRuns = input.value === 'true'\n    const failed = selectedCheckRun.getAttribute('data-failed') === 'true'\n    if (!onlyFailedCheckRuns || failed) {\n      cleanCheckAndWait()\n    }\n  }\n\n  try {\n    await wants.text()\n    showFlashMessage(document.querySelector<HTMLTemplateElement>('#js-check-suite-rerequest-form-success')!)\n  } catch (err) {\n    showFlashMessage(document.querySelector<HTMLTemplateElement>('#js-check-suite-rerequest-form-error')!)\n    throw err\n  }\n})\n\nremoteForm('.js-check-run-rerequest-form', async function (form, wants) {\n  automaticallyLoadLatestRun = true\n\n  const selectedCheckRun = document.querySelector<HTMLElement>('#js-selected-check-run')!\n  if (selectedCheckRun.contains(form)) {\n    cleanCheckAndWait()\n  }\n\n  try {\n    await wants.text()\n    showFlashMessage(form.querySelector<HTMLTemplateElement>('.js-check-run-rerequest-form-success')!)\n  } catch (err) {\n    showFlashMessage(form.querySelector<HTMLTemplateElement>('.js-check-run-rerequest-form-error')!)\n    throw err\n  }\n})\n\nobserve('.js-latest-run-link', {\n  constructor: HTMLElement,\n  add(link) {\n    if (automaticallyLoadLatestRun) {\n      link.click()\n    }\n  },\n})\n","import {attr, target, controller} from '@github/catalyst'\nimport {html, render} from '@github-ui/jtml-shimmed'\nimport {isFullscreen} from './steps'\n\n@controller\nexport class CheckStepElement extends HTMLElement {\n  @attr name = ''\n  @attr number = 1\n  @attr conclusion = ''\n  @attr externalId = ''\n  @attr logUrl = ''\n  @attr expand = ''\n  @attr inProgress = false\n  @attr startedAt = ''\n  @attr completedAt = ''\n  @attr jobCompleted = false\n  @attr useActionsUx = false\n  @attr loggedIn = false\n  @target header: HTMLElement\n\n  get detailsDisabled(): boolean {\n    return !this.loggedIn || !this.logUrl\n  }\n\n  get iconTemplate() {\n    const id = this.inProgress ? 'step-icon-in-progress' : `step-icon-${this.conclusion}`\n    const template = document.getElementById(id) || document.getElementById('step-icon-other')\n\n    if (!template) return\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return html([template.innerHTML] as any)\n  }\n\n  get gearIcon() {\n    const template = document.getElementById('primer-octicon-gear')\n\n    if (!template) return\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return html([template.innerHTML] as any)\n  }\n\n  get time() {\n    if (this.startedAt && this.completedAt) {\n      return this.preciseDuration()\n    } else if (this.startedAt && !this.jobCompleted) {\n      return html`<relative-time format=\"elapsed\" datetime=\"${this.startedAt}\">\n        Started at ${new Date(this.startedAt).getTime()}\n      </relative-time>`\n    }\n  }\n\n  connectedCallback() {\n    this.update()\n  }\n\n  preciseDuration() {\n    const startedAt = new Date(this.startedAt)\n    const completedAt = new Date(this.completedAt)\n    const seconds = Math.round((completedAt.getTime() - startedAt.getTime()) / 1000)\n\n    const minutes = Math.floor(seconds / 60)\n    const remainderSeconds = seconds % 60\n\n    const hours = Math.floor(minutes / 60)\n    const remainderMinutes = minutes % 60\n\n    const days = Math.floor(hours / 24)\n    const remainderHours = hours % 24\n\n    if (seconds < 0) {\n      // don't display negative time\n      // visual fix for: https://github.com/github/c2c-actions-checks/issues/311\n      return '0s'\n    } else if (minutes < 1) {\n      return `${seconds}s`\n    } else if (hours < 1) {\n      return `${minutes}m ${remainderSeconds}s`\n    } else if (days < 1) {\n      return `${hours}h ${remainderMinutes}m ${remainderSeconds}s`\n    } else {\n      return `${days}d ${remainderHours}h`\n    }\n  }\n\n  update() {\n    const styles = []\n    if (!this.useActionsUx) styles.push('position: sticky')\n    if (this.conclusion === 'skipped') styles.push('cursor: default')\n\n    // needed to persist proper sticky header value that gets calculated by setLogTitleStickyValues in logs.ts\n    if (isFullscreen()) {\n      styles.push('top: 0px')\n    } else {\n      if (this.header?.style?.cssText) styles.push(this.header.style.cssText)\n    }\n\n    render(\n      html`<details\n        class=\"Details-element CheckStep rounded-2 details-reset js-checks-log-details ${this.useActionsUx\n          ? 'px-2'\n          : 'pl-2 pr-1'}\"\n        id=\"check-step-${this.number}\"\n        data-step-number=\"${this.number}\"\n        data-conclusion=\"${this.conclusion}\"\n        data-external-id=\"${this.externalId}\"\n        style=\"${this.detailsDisabled ? 'pointer-events:none;' : ''}\"\n        data-log-url=\"${this.detailsDisabled ? '' : this.logUrl}\"\n        data-expand=\"${this.expand ? 'true' : ''}\"\n      >\n        <summary\n          class=\"CheckStep-header p-2 mb-1 rounded-2 js-check-step-summary ${this.useActionsUx\n            ? 'uxr_CheckStep-header mx-2'\n            : 'ml-2 top-0'}\"\n          style=\"${styles.join(';')}\"\n          data-retain-focus\n          data-target=\"check-step.header\"\n          data-step-pending=\"${!this.conclusion}\"\n        >\n          <div class=\"d-flex flex-items-center\">\n            ${this.loggedIn\n              ? html`<svg\n                  class=\"octicon octicon-chevron-right js-check-step-chevron mr-2 flex-shrink-0 CheckStep-chevron\"\n                  viewBox=\"0 0 16 16\"\n                  version=\"1.1\"\n                  width=\"16\"\n                  height=\"16\"\n                  aria-hidden=\"${!this.logUrl}\"\n                  style=\"${this.logUrl ? '' : 'visibility:hidden'}\"\n                >\n                  <path\n                    fill-rule=\"evenodd\"\n                    d=\"M6.22 3.22a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06L9.94 8 6.22 4.28a.75.75 0 010-1.06z\"\n                  ></path>\n                </svg>`\n              : ''}\n\n            <svg\n              fill=\"none\"\n              height=\"16\"\n              viewBox=\"0 0 16 16\"\n              width=\"16\"\n              class=\"anim-rotate js-check-step-loader mr-2 flex-shrink-0\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              hidden\n            >\n              <g stroke-width=\"2\">\n                <circle cx=\"8\" cy=\"8\" r=\"7\" stroke=\"#959da5\"></circle>\n                <path\n                  d=\"m12.9497 3.05025c1.3128 1.31276 2.0503 3.09323 2.0503 4.94975 0 1.85651-.7375 3.637-2.0503 4.9497\"\n                  stroke=\"#fafbfc\"\n                ></path>\n              </g>\n            </svg>\n\n            ${this.iconTemplate}\n\n            <span class=\"flex-1 ml-n1 mr-1 css-truncate css-truncate-overflow user-select-none\"> ${this.name} </span>\n\n            <div class=\"text-mono text-normal text-small float-right\">${this.time}</div>\n          </div>\n        </summary>\n\n        <div class=\"js-checks-log-display\">\n          <div\n            class=\"text-mono text-small pl-2 py-1 my-2 overflow-auto js-checks-log-display-error color-fg-muted color-bg-danger ml-2\"\n            hidden\n          >\n            <span class=\"text-bold color-fg-danger\">Error: </span>\n            <span\n              class=\"js-checks-log-display-error-text\"\n              data-error-text=\"We are currently unable to download the log. Please try again later.\"\n              data-not-found-text=\"The log was not found. It may have been deleted based on retention settings.\"\n              data-removed-text=\"The logs for this run have expired and are no longer available. Logs may have been removed based on retention settings on the repo at the time the run was started.\"\n            ></span>\n          </div>\n          <div\n            class=\"text-mono text-small py-1 my-2 js-checks-log-display-container ${this.useActionsUx\n              ? 'mx-2'\n              : 'ml-2'}\"\n            hidden\n          ></div>\n          <div\n            class=\"d-flex flex-items-center pl-2 py-1 my-2 text-small text-mono color-text-white js-checks-log-display-truncated\"\n            hidden\n          >\n            <div class=\"ml-1 color-fg-attention\">\n              This step has been truncated due to its large size. Download the full logs from the ${this.gearIcon} menu\n              once the workflow run has completed.\n            </div>\n          </div>\n        </div>\n      </details>`,\n      this,\n    )\n  }\n}\n","import type {SocketData} from './signalr-socket'\nimport {SignalRSocket} from './signalr-socket'\nimport {StepState, bufferLogs, bufferedStepIds, stepsMap, updateStreamingLogs} from './steps'\nimport {attr, controller} from '@github/catalyst'\nimport type {CheckStepElement} from './check-step'\nimport {fetchJson} from './fetch'\nimport {sendStats} from '@github-ui/stats'\n\nconst MAX_RETRIES = 5\nconst RETRY_DELAY = 2000\n\ninterface StepData {\n  id: string\n  name: string\n  status: string\n  conclusion?: string\n  started_at?: string\n  completed_at?: string\n  change_id: number\n  completed_log_url?: string\n  number: number\n  log_url?: string\n}\n\ninterface StepBackscrollLogs {\n  lines: LogLine[]\n}\n\ninterface LogLine {\n  id: string\n  line: string\n}\n\ninterface AgentData {\n  stepRecordId: string // uuid like external id\n  lines: string[]\n  startLine: number | null\n}\n\n// Incoming data over alive socket, see CheckRun.notify_socket_subscribers\ninterface AliveSocketData {\n  timestamp: string\n  reason: string\n  wait: number\n  status: 'requested' | 'queued' | 'in_progress' | 'completed' | 'waiting' | 'pending'\n  has_steps: boolean\n  raw_logs: boolean\n  streaming_logs: boolean\n}\n\ninterface ResultsLogLine {\n  line: string\n  lineID: string\n}\n\ninterface StepUpdate {\n  workflowRunBackendId: string\n  workflowJobRunBackendId: string\n  stepId: string\n  stepNumber: number\n  changeOrder: number\n  status: number\n}\n\ninterface ResultsData {\n  lines: ResultsLogLine[]\n  count: number\n  startLine: number\n  stepId: string\n}\n\nenum AliveMessageKind {\n  StepLog = 0,\n  StepsUpdate = 1,\n}\n\nconst tsFromID = (id: string): Date => {\n  const unixMs = parseInt(id.split('-')[0] || '')\n  if (isNaN(unixMs)) return new Date()\n  return new Date(unixMs)\n}\n\n@controller\nclass CheckStepsElement extends HTMLElement {\n  @attr useActionsUx = false\n  @attr loggedIn = false\n  @attr jobStepsUrl = ''\n  @attr jobStatus = ''\n  @attr streamingUrl = ''\n  @attr canStream = false\n  @attr stepsFromResults = false\n  #latestChangeId = 0\n  #requestInProgressOrWaiting = false\n  #retries = 0\n  #abortController = new AbortController()\n  #streamingLogSocket = SignalRSocket.getInstance('WatchRunAsync')\n  #logIds = new Set<string>()\n  #backscrollFetched = false\n  #aliveBackscrollBuffer: Record<string, LogLine[]> = {}\n\n  connectedCallback() {\n    if (this.loggedIn) {\n      this.addEventListener('socket:message', this.handleAliveEvent.bind(this))\n      this.createOrCloseStreamingLogSocket()\n      if (!this.isJobCompleted()) {\n        this.requestJobSteps()\n      }\n    }\n  }\n\n  disconnectedCallback() {\n    this.#abortController.abort()\n    // cleanup alive listener\n    this.removeEventListener('socket:message', this.handleAliveEvent.bind(this))\n    // cleanup children\n    this.textContent = ''\n  }\n\n  static observedAttributes = ['data-can-stream', 'data-job-status']\n  attributeChangedCallback(name: string, oldValue: string | null, newValue: string | null): void {\n    if (oldValue === newValue) return\n\n    switch (name) {\n      case 'data-can-stream':\n      case 'data-job-status':\n        this.createOrCloseStreamingLogSocket()\n        if (this.isJobCompleted()) {\n          // there is a race condition on last step update via signalr socket vs. job complete over alive socket\n          this.requestJobSteps()\n        }\n        break\n      default:\n      // Do nothing\n    }\n  }\n\n  handleAliveEvent(event: Event) {\n    const aliveData = (event as CustomEvent)?.detail\n    if (!aliveData) return\n    const channel = aliveData.name?.split(':')?.[0]\n    switch (channel) {\n      case 'check_runs': {\n        const data = aliveData.data as AliveSocketData\n        this.jobStatus = data.status\n        this.canStream = data.streaming_logs\n        break\n      }\n      case 'actions_results': {\n        const messageKind = aliveData.data.kind\n        if (messageKind === AliveMessageKind.StepLog) {\n          const resultsData = aliveData.data.data as ResultsData\n          this.handleAliveStepLogEvent(resultsData)\n        } else if (messageKind === AliveMessageKind.StepsUpdate) {\n          const stepsUpdate = aliveData.data.data as StepUpdate[]\n          this.handleAliveStepUpdateEvent(stepsUpdate)\n        }\n        break\n      }\n      default:\n      // Do nothing if no other matches\n    }\n  }\n\n  handleAliveStepUpdateEvent(stepsUpdate: StepUpdate[]) {\n    if (this.stepsFromResults) {\n      const changeId = Math.min(...stepsUpdate.map(s => s.changeOrder))\n      this.#latestChangeId = changeId\n      this.requestJobSteps()\n    }\n  }\n\n  handleAliveStepLogEvent(resultsData: ResultsData) {\n    let updateJobSteps = false\n    const step = stepsMap[resultsData.stepId]\n    // dedup potential lines retrieved by backscrolls\n    const newLogs = resultsData.lines.filter(l => !this.#logIds.has(l.lineID))\n    const rawLines = newLogs.map(l => l.line)\n    if (!step || !this.#backscrollFetched) {\n      for (const l of newLogs) {\n        this.#logIds.add(l.lineID)\n      }\n      this.#aliveBackscrollBuffer[resultsData.stepId] ||= []\n      this.#aliveBackscrollBuffer[resultsData.stepId]?.push(...newLogs.map(({line, lineID: id}) => ({id, line})))\n      updateJobSteps = true\n    } else {\n      const oldStepState = step.state\n      updateStreamingLogs(step, rawLines, resultsData.startLine)\n      updateJobSteps = oldStepState !== step.state\n    }\n\n    if (updateJobSteps) {\n      this.requestJobSteps()\n    }\n  }\n\n  createOrCloseStreamingLogSocket() {\n    if (this.stepsFromResults) return\n    if (!this.streamingUrl || !this.canStream) return\n\n    const {signal} = this.#abortController\n\n    if (this.jobStatus === 'completed') {\n      // close socket (if exists) if the job is completed\n      this.#abortController.abort()\n      this.#streamingLogSocket.closeExistingSocket()\n      return\n    }\n\n    this.requestJobSteps()\n    this.#streamingLogSocket.startOrContinueStreaming(this.streamingUrl)\n\n    this.#streamingLogSocket.removeEventListener('onStreamFailure', this.handleStreamFailure)\n    this.#streamingLogSocket.addEventListener('onStreamFailure', this.handleStreamFailure, {signal})\n\n    this.#streamingLogSocket.removeEventListener('socketDidReceiveMessage', this.handleSocketDidReceiveMessage)\n    this.#streamingLogSocket.addEventListener('socketDidReceiveMessage', this.handleSocketDidReceiveMessage, {signal})\n  }\n\n  private handleStreamFailure = () => {\n    sendStats({incrementKey: 'ACTIONS_STREAMING_LOG_VIEWS_FAIL'})\n  }\n\n  private handleSocketDidReceiveMessage = (event: Event) => {\n    if (!(event instanceof CustomEvent)) return\n    this.processSocketMessage(event.detail)\n  }\n\n  processSocketMessage(data: SocketData<AgentData[]>) {\n    let updateJobSteps = false\n    const logUpdates = Array.isArray(data.arguments) ? data.arguments : []\n\n    for (const logUpdate of logUpdates) {\n      const {lines, stepRecordId, startLine} = logUpdate\n      const step = stepsMap[stepRecordId]\n      if (!step) {\n        bufferLogs(stepRecordId, lines)\n        updateJobSteps = true\n        continue\n      }\n\n      const oldStepState = step.state\n      updateStreamingLogs(step, lines, startLine)\n      updateJobSteps = oldStepState !== step.state\n    }\n\n    if (updateJobSteps) this.requestJobSteps()\n  }\n\n  async requestJobSteps() {\n    if (this.#requestInProgressOrWaiting) return\n    if (!this.jobStepsUrl) return\n    if (this.hasSteps() && this.areStepsCompleted()) return\n\n    const requestedChangeId = this.#latestChangeId\n\n    this.#requestInProgressOrWaiting = true\n    const data = await fetchJson<StepData[]>(`${this.jobStepsUrl}?change_id=${this.#latestChangeId}`)\n    this.#requestInProgressOrWaiting = false\n    if (!data) {\n      // req err, wait and retry\n      const canRetry = await this.waitAndIncrementRetries()\n      if (!canRetry) return\n      this.requestJobSteps()\n      return\n    }\n\n    // for refetching on missing data\n    let dataMismatch = false\n\n    // no data back for changeid\n    if (!data.length) {\n      dataMismatch = true\n    }\n\n    const ids = new Set(...bufferedStepIds())\n    for (const step of data) {\n      const existing = stepsMap[step.id]\n      if (!existing) {\n        this.addStep(step)\n      } else {\n        const checkStep = existing.container.closest<CheckStepElement>('check-step')!\n        this.updateStepAttributes(checkStep, step)\n        checkStep.update()\n        await this.fetchBackscrolls(checkStep, step)\n      }\n\n      // corner case: a step is streaming without a started_at\n      if (existing?.state === StepState.STREAMING && !step.started_at) {\n        dataMismatch = true\n      }\n\n      // corner case: a concluded step without log url\n      if (step.completed_at && !step.completed_log_url) {\n        dataMismatch = true\n      }\n\n      this.#latestChangeId = Math.max(this.#latestChangeId, step.change_id)\n      ids.delete(step.id)\n    }\n\n    // If there are buffered steps means we received additional logs from\n    // unknown steps during the request.\n    if (ids.size > 0 || dataMismatch) {\n      if (this.#latestChangeId === requestedChangeId) {\n        const canRetry = await this.waitAndIncrementRetries()\n        if (!canRetry) return\n      }\n      this.requestJobSteps()\n    } else {\n      // if all ok, reset retries\n      this.#retries = 0\n    }\n  }\n\n  addStep(data: StepData) {\n    const step = document.createElement('check-step')\n    step.setAttribute('data-external-id', data.id)\n    this.updateStepAttributes(step, data)\n    this.appendChild(step)\n  }\n\n  updateStepAttributes(step: Element, data: StepData) {\n    step.setAttribute('data-name', data.name)\n    step.setAttribute('data-number', String(data.number))\n    step.setAttribute('data-started-at', data.started_at || '')\n    step.setAttribute('data-completed-at', data.completed_at || '')\n    if (data.conclusion) {\n      step.setAttribute('data-conclusion', data.conclusion)\n      step.removeAttribute('data-in-progress')\n    } else if (data.started_at) {\n      step.setAttribute('data-in-progress', '')\n    }\n    if (data.log_url) {\n      step.setAttribute('data-log-url', data.log_url)\n    }\n    if (this.useActionsUx) {\n      step.setAttribute('data-use-actions-ux', '')\n    }\n    if (this.loggedIn) {\n      step.setAttribute('data-logged-in', '')\n    }\n    if (this.isJobCompleted()) {\n      step.setAttribute('data-job-completed', '')\n    }\n  }\n\n  async fetchBackscrolls(checkStep: Element, step: StepData) {\n    if (this.#backscrollFetched) {\n      // we'll only ever want this once on page load\n      return\n    }\n\n    // fetch backscroll if step is in progress if we haven't before\n    if (step.started_at && !step.conclusion) {\n      try {\n        const jobStepBackscrollURL = checkStep.getAttribute('data-job-step-backscroll-url')\n        if (!this.#backscrollFetched && jobStepBackscrollURL) {\n          const backscrolls = await fetchJson<StepBackscrollLogs>(jobStepBackscrollURL)\n          this.#aliveBackscrollBuffer[step.id] ||= []\n          for (const line of backscrolls?.lines || []) {\n            if (this.#logIds.has(line.id)) {\n              continue\n            }\n\n            this.#aliveBackscrollBuffer[step.id]?.push(line)\n          }\n        }\n      } finally {\n        this.#backscrollFetched = true\n        this.renderAliveBufferAndBackscrolls(step.id, this.#aliveBackscrollBuffer[step.id] || [])\n      }\n    }\n  }\n\n  renderAliveBufferAndBackscrolls(stepId: string, lines: LogLine[]) {\n    if (!lines || lines.length === 0) return\n\n    const step = stepsMap[stepId]\n    if (!step) return\n\n    // Sort lines by group and line number (if present). IDs are in the form of a string like \"1-1\". The first number is the group ID, the second is the line ID.\n    // Split the string and then parseInt to get the numbers. If the line ID is not present, default to 0.\n    const sortedLines = lines.sort((a, b) => {\n      const lineIDsA = a.id.split('-')\n      const lineIDsB = b.id.split('-')\n\n      const aGroupID = parseInt(lineIDsA[0] || '0')\n      const bGroupID = parseInt(lineIDsB[0] || '0')\n\n      if (aGroupID === bGroupID) {\n        const aLineID = parseInt(lineIDsA[1] || '0')\n        const bLineID = parseInt(lineIDsB[1] || '0')\n\n        return aLineID > bLineID ? 1 : -1\n      }\n\n      return aGroupID > bGroupID ? 1 : -1\n    })\n    const firstId = sortedLines[0]?.id?.split('-')\n    const start = parseInt(firstId?.[1] || '0')\n\n    updateStreamingLogs(\n      step,\n      sortedLines.map(l => ({\n        text: l.line,\n        ts: tsFromID(l.id),\n      })),\n      start,\n    )\n  }\n\n  isJobCompleted() {\n    return this.jobStatus === 'completed'\n  }\n\n  areStepsCompleted() {\n    return [...this.querySelectorAll('check-step')].filter(step => step.hasAttribute('data-in-progress')).length === 0\n  }\n\n  hasSteps() {\n    return [...this.querySelectorAll('check-step')].length > 0\n  }\n\n  async waitAndIncrementRetries(): Promise<boolean> {\n    this.#requestInProgressOrWaiting = true\n    // if the job is completed and all of the steps are finished, stop retrying to fetch\n    const allCompleted = this.isJobCompleted() && this.areStepsCompleted()\n    if (this.#retries === MAX_RETRIES || allCompleted) {\n      this.#retries = 0\n      this.#requestInProgressOrWaiting = false\n      return false\n    }\n    this.#retries++\n    await new Promise(res => setTimeout(res, RETRY_DELAY))\n    this.#requestInProgressOrWaiting = false\n    return true\n  }\n}\n","function queryLast<T extends Element>(selector: string): T | undefined {\n  const list = document.querySelectorAll<T>(selector)\n  if (list.length > 0) {\n    return list[list.length - 1]\n  }\n}\n\nfunction pagePathname() {\n  const locationOverride = queryLast<HTMLMetaElement>('meta[name=analytics-location]')\n  if (locationOverride) {\n    return locationOverride.content\n  } else {\n    return window.location.pathname\n  }\n}\n\nfunction pageQuery() {\n  const stripParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-query-strip]')\n  let search = ''\n\n  if (!stripParams) {\n    search = window.location.search\n  }\n\n  const extraParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-params]')\n  if (extraParams) {\n    search += (search ? '&' : '?') + extraParams.content\n  }\n\n  for (const meta of document.querySelectorAll<HTMLMetaElement>('meta[name=analytics-param-rename]')) {\n    const names = meta.content.split(':', 2)\n    search = search.replace(new RegExp(`(^|[?&])${names[0]}($|=)`, 'g'), `$1${names[1]}$2`)\n  }\n\n  return search\n}\n\nexport function requestUri() {\n  return `${window.location.protocol}//${window.location.host}${pagePathname() + pageQuery()}`\n}\n","export interface ClientEnvironment {\n  readonly locale: string\n  readonly featureFlags: string[]\n}\n\nlet env: ClientEnvironment | undefined\n\nexport function getEnv() {\n  if (!env) {\n    throw new Error(\n      'Client env was requested before it was loaded. This likely means you are attempting to use client env at the module level in SSR, which is not supported. Please move your client env usage into a function.',\n    )\n  }\n\n  return env\n}\n\nexport function getLocale() {\n  return env?.locale ?? 'en-US'\n}\n\nfunction loadEnv() {\n  if (typeof document !== 'undefined') {\n    const envTag = document.getElementById('client-env')\n    if (envTag) {\n      try {\n        env = JSON.parse(envTag.textContent || '')\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error('Error parsing client-env', error)\n      }\n    }\n  }\n}\n\n// Automatically load the env on initial page load\nloadEnv()\n\n// This is a special helper method for setting the env in the SSR environment only\nexport function setClientEnvForSsr(clientEnv: ClientEnvironment | undefined) {\n  env = clientEnv\n}\n\n// This env object is used as a default for tests only and is not included in production builds\nexport const clientEnvForTests: ClientEnvironment = {\n  locale: 'en',\n  featureFlags: ['test_flag'],\n}\n\nexport function _resetForTests({loadNewEnv, forceUndefined}: {loadNewEnv: boolean; forceUndefined?: boolean}) {\n  // forget the current env\n  env = forceUndefined ? undefined : clientEnvForTests\n\n  if (loadNewEnv) {\n    // load the latest env\n    loadEnv()\n  }\n}\n","import {ssrSafeDocument, ssrSafeWindow} from '@github-ui/ssr-utils'\n\n// Check if document has passed interactive state.\n//\n// The document has finished loading and the document has been parsed but\n// sub-resources such as images, stylesheets and frames are still loading.\n// The state indicates that the DOMContentLoaded event has been fired.\nexport const ready: Promise<void> = (function () {\n  if (ssrSafeDocument?.readyState === 'interactive' || ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise<void>(resolve => {\n      ssrSafeDocument?.addEventListener('DOMContentLoaded', () => {\n        resolve()\n      })\n    })\n  }\n})()\n\n// Check if document has passed loaded state.\n//\n// The document and all sub-resources have finished loading. The state\n// indicates that the load event has been fired.\nexport const loaded: Promise<unknown> = (function () {\n  if (ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise(resolve => {\n      ssrSafeWindow?.addEventListener('load', resolve)\n    })\n  }\n})()\n","// Report uncaught JS errors to Sentry\n//   https://sentry.io/github/github-js\n\nimport {getOrCreateClientId} from '@github/hydro-analytics-client'\nimport {isSupported} from '@github/browser-support'\nimport {parse} from 'stacktrace-parser'\nimport {requestUri} from '@github-ui/analytics-overrides'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {getSoftNavReferrer} from '@github-ui/soft-nav/utils'\n\nlet extensionErrors = false\nlet errorsReported = 0\nconst loadTime = Date.now()\n// network error messages are not consistent across browsers, this is a list of known messages for chrome and firefox\nexport const EXPECTED_NETWORK_ERROR_MESSAGES = new Set([\n  'Failed to fetch',\n  'NetworkError when attempting to fetch resource.',\n])\n\ntype ErrorContext = {\n  message?: string\n}\n\n// Check if an arbitrary object is an error, or at least an object that satisfies the interface of an error,\n// with the necessary information to be able to report it to Sentry.\nfunction isError(error: unknown): error is Error {\n  // Check if it's a definite instance of an error\n  if (error instanceof Error) return true\n  // Otherwise, check that it at least satisfies the interface of an error\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'name' in error &&\n    typeof error.name === 'string' &&\n    'message' in error &&\n    typeof error.message === 'string'\n  )\n}\n\n/** Tries to serialize an arbitrary error value that is not an Error object, and returns a default message otherwise */\nfunction serializeNonError(error: unknown): string {\n  try {\n    return JSON.stringify(error)\n  } catch {\n    return 'Unserializable'\n  }\n}\n\nfunction isExpectedError(error: Error): boolean {\n  // We use AbortController to control events and some workflows. When we call `abort()` on it, it will raise an\n  // `AbortError` which doesn't represent a real error, so we don't want to report it.\n  if (error.name === 'AbortError') return true\n  // Failed to fetch errors are usually related to the user's network connection. They also do not represent\n  // real errors related to our code, so we will also ignore them.\n  if (error.name === 'TypeError' && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n  // For memex we use an ApiError class to represent errors returned from the API\n  // Additional details in the format of ApiErrorOpts are affixed to the name as a stringified JSON object\n  // so we just need to ensure the error name starts with ApiError\n  // see ui/packages/memex/src/client/platform/api-error.ts for more details.\n  if (error.name.startsWith('ApiError') && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n\n  return false\n}\n\n// @deprecated Re-throw the caught exception instead.\nexport function reportError(error: unknown, context: ErrorContext = {}) {\n  if (isFeatureEnabled('FAILBOT_HANDLE_NON_ERRORS')) {\n    if (!isError(error)) {\n      if (isIgnoredNonError(error)) return\n\n      // Create an error instance so that we can get the stacktrace of how this was reported\n      const errorForStackTrace = new Error()\n      const serializedErrorValue = serializeNonError(error)\n      // Construct a custom error object so we can keep track of anywhere that we report an error that isn't an Error object\n      const newError: PlatformJavascriptError = {\n        type: 'UnknownError',\n        value: `Unable to report error, due to a thrown non-Error type: ${typeof error}, with value ${serializedErrorValue}`,\n        stacktrace: stacktrace(errorForStackTrace),\n        catalogService: undefined,\n      }\n      report(errorContext(newError, context))\n      return\n    }\n    if (!isExpectedError(error)) {\n      report(errorContext(formatError(error), context))\n    }\n  } else {\n    // Without feature flag, we will cast the `error` variable which was implicitly the old\n    // behavior of the non-feature flagged code.\n    if (!isExpectedError(error as Error)) {\n      report(errorContext(formatError(error as Error), context))\n    }\n  }\n}\n\n// Report context info to Sentry.\nasync function report(context: PlatformReportBrowserErrorInput) {\n  if (!reportable()) return\n\n  const url = document.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-errors-url\"]')?.content\n  if (!url) return\n\n  if (isExtensionError(context.error.stacktrace)) {\n    extensionErrors = true\n    return\n  }\n\n  errorsReported++\n\n  try {\n    await fetch(url, {method: 'post', body: JSON.stringify(context)})\n  } catch {\n    // Error reporting failed so do nothing.\n  }\n}\n\nfunction formatError(error: Error): PlatformJavascriptError {\n  return {\n    type: error.name,\n    value: error.message,\n    stacktrace: stacktrace(error),\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    catalogService: (error as any)['catalogService'],\n  }\n}\n\nfunction errorContext(error: PlatformJavascriptError, context: ErrorContext = {}): PlatformReportBrowserErrorInput {\n  return Object.assign(\n    {\n      error,\n      sanitizedUrl: requestUri() || window.location.href,\n      readyState: document.readyState,\n      referrer: getSoftNavReferrer(),\n      timeSinceLoad: Math.round(Date.now() - loadTime),\n      user: pageUser() || undefined,\n      bundler,\n      ui: Boolean(document.querySelector('meta[name=\"ui\"]')),\n    },\n    context,\n  )\n}\n\nexport function stacktrace(error: Error): PlatformStackframe[] {\n  return parse(error.stack || '').map(frame => ({\n    filename: frame.file || '',\n    function: String(frame.methodName),\n    lineno: (frame.lineNumber || 0).toString(),\n    colno: (frame.column || 0).toString(),\n  }))\n}\n\nconst extensions = /(chrome|moz|safari)-extension:\\/\\//\n\n// Does this stack trace contain frames from browser extensions?\nfunction isExtensionError(stack: PlatformStackframe[]): boolean {\n  return stack.some(frame => extensions.test(frame.filename) || extensions.test(frame.function))\n}\n\nexport function pageUser() {\n  const login = document.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n  if (login) return login\n\n  const clientId = getOrCreateClientId()\n  return `anonymous-${clientId}`\n}\n\nlet unloaded = false\nssrSafeWindow?.addEventListener('pageshow', () => (unloaded = false))\nssrSafeWindow?.addEventListener('pagehide', () => (unloaded = true))\n\nfunction reportable() {\n  return !unloaded && !extensionErrors && errorsReported < 10 && isSupported()\n}\n\nif (typeof BroadcastChannel === 'function') {\n  const sharedWorkerErrorChannel = new BroadcastChannel('shared-worker-error')\n  sharedWorkerErrorChannel.addEventListener('message', event => {\n    // SharedWorker will emit a formatted error\n    reportError(event.data.error)\n  })\n}\n\nconst ignoredErrorMessages = [\n  'Object Not Found Matching Id', // from Microsoft Outlook SafeLink crawler\n  'Not implemented on this platform', // LastPass Safari extension\n  `provider because it's not your default extension`, // MetaMask extension\n]\n\n/**\n * We see a fair number of \"errors\" which are not actually Error objects. This function will return true if the\n * error is one of these known non-Error types and has content which we know can safely be ignored.\n * Most of these errors come from specific browsers or extensions which we can't control, so we just ignore them.\n * @param error An error that is not an Error object\n * @returns boolean\n */\nfunction isIgnoredNonError(error: unknown) {\n  if (!error || typeof error === 'boolean' || typeof error === 'number') {\n    // Rejected with a type that is not useful to report. Just ignore it.\n    return true\n  } else if (typeof error === 'string') {\n    // rejected with a string. See if it's a known error that we can ignore\n    if (ignoredErrorMessages.some(message => error.includes(message))) {\n      return true\n    }\n  } else if (\n    typeof error === 'object' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).message === 'string' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).code === 'number'\n  ) {\n    // We see an object like {\"message\":\"Not connected\",\"code\":4900} from some extension, likely MetaMask. Ignore these\n    return true\n  }\n\n  return false\n}\n","import memoize from '@github/memoize'\nimport {getEnv} from '@github-ui/client-env'\nimport {IS_SERVER} from '@github-ui/ssr-utils'\n\nfunction getEnabledFeaturesSet(): Set<string> {\n  const features = getEnv().featureFlags\n  const featuresUpperCase = features.map(feature => feature.toLowerCase())\n  return new Set<string>(featuresUpperCase)\n}\n\nconst featuresSet =\n  IS_SERVER || process.env.NODE_ENV === 'test' ? getEnabledFeaturesSet : memoize(getEnabledFeaturesSet)\n\nexport function getEnabledFeatures(): string[] {\n  return Array.from(featuresSet())\n}\n\nexport function isFeatureEnabled(name: string): boolean {\n  return featuresSet().has(name.toLowerCase())\n}\n\n//exported to allow mocking in tests\nconst featureFlag = {isFeatureEnabled}\n\nexport {featureFlag}\n","// this file is a shim to allow importing @github/hotkey and is the only allowed import for @github/hotkey\n// eslint-disable-next-line no-restricted-imports\nexport * from '@github/hotkey'\n\n// - (?:^|,)    Starting with the beginning of the string or the comma delineating the previous item\n// - ((?:[^,]|,(?=\\+| |$))*(?:,(?=,))?)    The target capture group, consisting of:\n//   - (?:[^,]|,(?=\\+| |$))*    Any number of characters that are not commas, or are commas that are followed by a\n//     plus sign, space, or end of string (ie, the commas in `,+Control` or `Control+, g` or `Control+,`)\n//   - (?:,(?=,))?    Optionally ending with a comma followed by another comma, like the commas in `Control+,,n` or\n//     `Control+,,,`\n// - (?=,|$)    Ending with a comma or the end of the string\nconst chordOrKeyRegex = /(?:^|,)((?:[^,]|,(?=\\+| |$))*(?:,(?=,))?)/g\n\nexport function splitHotkeyString(hotkey: string) {\n  // \",\" is a valid key name, so we can't just use `String.split()`. Even with a regular expression we can't split, for\n  // example \"Control+,,,\" into [\"Control+,\", \",\"] without a lookbehind (not supported in Safari).\n\n  // Instead, we match against all valid substrings:\n  return Array.from(hotkey.matchAll(chordOrKeyRegex)).map(([, chord]) => chord!)\n}\n","import {eventToHotkeyString} from './hotkey'\n\n/** Returns false if a user has explicitly disabled character key shortcuts. */\nexport const areCharacterKeyShortcutsEnabled = () => {\n  const keyboardShortcutsPreference = document.querySelector<HTMLMetaElement>(\n    'meta[name=keyboard-shortcuts-preference]',\n  )\n  if (keyboardShortcutsPreference) {\n    return keyboardShortcutsPreference.content === 'all'\n  }\n  return true\n}\n\n/**\n * Character-key shortcuts are implemented only with lowercase characters (\"g\", \"g f\"), uppercase characters (\"Shift+A\", \"a\"),\n * symbols (\"Alt+g\"), and punctuation (\"?\", \"!\", \"/\").\n *\n * Returns true if string is NOT what we define as a character key shortcut.\n */\nexport const isNonCharacterKeyShortcut = (hotkey: string) => {\n  return /Enter|Arrow|Escape|Meta|Control|Mod|Esc/.test(hotkey) || (hotkey.includes('Alt') && hotkey.includes('Shift'))\n}\n\nconst nonEditableInputTypes = new Set([\n  'button',\n  'checkbox',\n  'color',\n  'file',\n  'hidden',\n  'image',\n  'radio',\n  'range',\n  'reset',\n  'submit',\n])\n\n/**\n * Returns true if `element` is editable - that is, if it can be focused and typed in like an input or textarea.\n */\nexport function isEditableElement(target: EventTarget | null): boolean {\n  if (!(target instanceof HTMLElement)) return false\n\n  const name = target.nodeName.toLowerCase()\n  const type = target.getAttribute('type')?.toLowerCase() ?? 'text'\n\n  const isReadonly =\n    target.ariaReadOnly === 'true' ||\n    target.getAttribute('aria-readonly') === 'true' ||\n    target.getAttribute('readonly') !== null\n\n  return (\n    (name === 'select' ||\n      name === 'textarea' ||\n      (name === 'input' && !nonEditableInputTypes.has(type)) ||\n      target.isContentEditable) &&\n    !isReadonly\n  )\n}\n\n/**\n * Returns false if a user settings has character key shortcut disabled and keyboard event corresponds to a character\n * key shortcut. Character key shortcuts are never enabled on editable form inputs.\n */\nexport const isShortcutAllowed = (event: KeyboardEvent) => {\n  const hotkey = eventToHotkeyString(event)\n\n  // Never allow character key shortcuts in inputs\n  const allowCharacterKeyShortcuts = areCharacterKeyShortcutsEnabled() && !isEditableElement(event.target)\n\n  return isNonCharacterKeyShortcut(hotkey) || allowCharacterKeyShortcuts\n}\n","import {AnalyticsClient, getOptionsFromMeta} from '@github/hydro-analytics-client'\nimport type {Context} from '@github/hydro-analytics-client'\nimport safeStorage from '@github-ui/safe-storage'\nimport {isStaff} from '@github-ui/stats'\nconst {getItem} = safeStorage('localStorage')\n\ndeclare const process: {\n  env: {\n    NODE_ENV: string\n  }\n}\n\nconst dimensionPrefix = 'dimension_'\nlet hydroAnalyticsClient: AnalyticsClient | undefined\n\nconst MARKETING_PARAMS = ['utm_source', 'utm_medium', 'utm_campaign', 'utm_term', 'utm_content', 'scid']\n\ntry {\n  const options = getOptionsFromMeta('octolytics')\n\n  // Remove the base context because meta tags can change as the user navigates with Turbo\n  // These will be folded in for each event & page view\n  delete options.baseContext\n\n  hydroAnalyticsClient = new AnalyticsClient(options)\n} catch (_) {\n  // Failed to get options from meta tags.  This most likely means analytics are disabled.\n}\n\nfunction extendBaseContext(context?: Context) {\n  const baseContext = getOptionsFromMeta('octolytics').baseContext || {}\n\n  if (baseContext) {\n    delete baseContext.app_id\n    delete baseContext.event_url\n    delete baseContext.host\n\n    for (const [key, value] of Object.entries(baseContext)) {\n      // some octolytics meta tags are prefixed with dimension-, which we don't need with the new hydro-analytics-client\n      if (key.startsWith(dimensionPrefix)) {\n        baseContext[key.replace(dimensionPrefix, '')] = value\n        delete baseContext[key]\n      }\n    }\n  }\n\n  const visitorMeta = document.querySelector<HTMLMetaElement>('meta[name=visitor-payload]')\n  if (visitorMeta) {\n    const visitorHash = JSON.parse(atob(visitorMeta.content))\n    Object.assign(baseContext, visitorHash)\n  }\n\n  const urlParams = new URLSearchParams(window.location.search)\n  for (const [key, value] of urlParams) {\n    if (MARKETING_PARAMS.includes(key.toLowerCase())) {\n      baseContext[key] = value\n    }\n  }\n\n  // Include additional context from the page\n  baseContext.staff = isStaff().toString()\n\n  return Object.assign(baseContext, context)\n}\n\nexport function sendPageView(context?: Context) {\n  hydroAnalyticsClient?.sendPageView(extendBaseContext(context))\n}\n\nexport function sendEvent(type: string, context: Record<string, string | number | boolean | undefined | null> = {}) {\n  const service = document.head?.querySelector<HTMLMetaElement>('meta[name=\"current-catalog-service\"]')?.content\n\n  const cleanContext: Context = service ? {service} : {}\n\n  for (const [key, value] of Object.entries(context)) {\n    if (value !== undefined && value !== null) {\n      cleanContext[key] = `${value}`\n    }\n  }\n\n  if (hydroAnalyticsClient) {\n    const typeWithFallback = type || 'unknown'\n    const fullContext = extendBaseContext(cleanContext)\n    hydroAnalyticsClient.sendEvent(typeWithFallback, extendBaseContext(cleanContext))\n\n    if (process.env.NODE_ENV === 'development') {\n      debugSendEvent(typeWithFallback, fullContext)\n    }\n  }\n}\n\nexport function stringifyObjectValues(obj: object) {\n  return Object.fromEntries(Object.entries(obj).map(([k, v]) => [k, JSON.stringify(v)]))\n}\n\nfunction debugSendEvent(type: string, context: Context) {\n  if (getItem('hydro-debug.send-event') === 'true') {\n    // eslint-disable-next-line no-console\n    console.group('[hydro-debug.send-event]')\n    // eslint-disable-next-line no-console\n    console.log({type, context})\n    // eslint-disable-next-line no-console\n    console.groupEnd()\n  }\n}\n","import {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {trustedTypesPolicy} from './policy'\n\nconst policyName = 'jtml-no-op'\n\n// This is a temporary policy to allow us to migrate to Trusted Types without breaking existing code.\nexport const temporaryPermissiveJtmlPolicy = ghTrustedTypes.createPolicy(policyName, {\n  createHTML: (s: string) => {\n    return trustedTypesPolicy.apply({\n      policy: () => s,\n      policyName,\n      fallback: s,\n      fallbackOnError: true,\n    })\n  },\n})\n","import {temporaryPermissiveJtmlPolicy} from '@github-ui/trusted-types-policies/jtml'\n// eslint-disable-next-line no-restricted-imports\nimport {TemplateResult} from '@github/jtml'\n\n// eslint-disable-next-line no-restricted-imports\nexport {html, unsafeHTML, render} from '@github/jtml'\n\nTemplateResult.setCSPTrustedTypesPolicy(temporaryPermissiveJtmlPolicy)\nexport {TemplateResult}\n","import memoize from '@github/memoize'\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\n\nconst runtimeEnvironment = memoize(githubEnvironment)\n\n// return the github instance environment\n// if dotcom, returns 'dotcom'\n// if enterprise, returns 'enterprise'\nfunction githubEnvironment(): string {\n  return ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"runtime-environment\"]')?.content || ''\n}\n\nexport const isEnterprise = memoize(isEnterpriseEnvironment)\nfunction isEnterpriseEnvironment(): boolean {\n  return runtimeEnvironment() === 'enterprise'\n}\n\n// This is the \"bundler\" that built the client-side assets, e.g. \"webpack\"\nexport const bundler = typeof BUNDLER !== 'undefined' ? BUNDLER : undefined\n","import {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\ntype StorageBackend = 'sessionStorage' | 'localStorage'\n\n/**\n * An implementation of the Storage API that throws away all data.  Used in\n * cases when the requested Storage backend is not available.\n */\nclass NoOpStorage {\n  getItem() {\n    return null\n  }\n\n  setItem() {\n    return undefined\n  }\n\n  removeItem() {\n    return undefined\n  }\n\n  clear() {\n    return undefined\n  }\n\n  key() {\n    return null\n  }\n\n  get length() {\n    return 0\n  }\n}\n\ntype SafeStorageOptions = {\n  /** Callers may opt not to suppress quota errors thrown on set in case they rely on recieving them. */\n  throwQuotaErrorsOnSet: boolean\n  /** The amount of time the value should remain in storage, in milliseconds */\n  ttl?: number\n  /** Don't send stats in CI */\n  sendCacheStats?: boolean\n}\n\n/**\n * Safely access Storage items by wrapping a Storage instance\n * (localStorage or sessionStorage) with safe versions of its API\n * methods.  Callers may opt not to suppress quota errors thrown on\n * set in case they rely on recieving them.\n */\nexport default function safeStorage<T = string>(\n  storageKey: StorageBackend,\n  options: SafeStorageOptions = {throwQuotaErrorsOnSet: false},\n  global = ssrSafeWindow,\n  deserialize: (value: string) => T = value => value as unknown as T,\n  serialize: (value: T) => string = (value: T) => value as unknown as string,\n) {\n  let storage: Storage\n  try {\n    if (!global) {\n      // in an SSR environment, use noop storage\n      throw new Error()\n    }\n\n    storage = global[storageKey] || new NoOpStorage()\n  } catch {\n    storage = new NoOpStorage()\n  }\n\n  const {throwQuotaErrorsOnSet} = options\n\n  function emitStats(key: PlatformBrowserIncrementKey) {\n    if (options.sendCacheStats) {\n      sendStats({incrementKey: key})\n    }\n  }\n\n  /**  Safely get storage item. Returns `null` if the item is older than the provided ttl */\n  function getItem(key: string, now: number = new Date().getTime()): T | null {\n    try {\n      const value = storage.getItem(key)\n      if (!value) {\n        return null\n      }\n      const expiryKey = `${key}:expiry`\n      const expiry = Number(storage.getItem(expiryKey))\n      if (expiry && now > expiry) {\n        removeItem(key)\n        removeItem(expiryKey)\n        emitStats('SAFE_STORAGE_VALUE_EXPIRED')\n        return null\n      } else {\n        emitStats('SAFE_STORAGE_VALUE_WITHIN_TTL')\n        return deserialize(value)\n      }\n    } catch (error) {\n      // Ignore browser private mode error.\n      return null\n    }\n  }\n\n  /**\n   * Safely set storage item.\n   * If `ttl` is provided, set an expiry time for the item under the key `${key}:expiry`\n   * This function will be called\n   */\n  function setItem(key: string, value: T, now: number = new Date().getTime()) {\n    try {\n      storage.setItem(key, serialize(value) as unknown as string)\n      if (options.ttl) {\n        const expiryKey = `${key}:expiry`\n        const expiry = now + options.ttl\n        storage.setItem(expiryKey, expiry.toString())\n      }\n    } catch (error) {\n      if (throwQuotaErrorsOnSet && error instanceof Error && error.message.toLowerCase().includes('quota')) throw error\n    }\n  }\n\n  // Safely remove storage item.\n  function removeItem(key: string) {\n    try {\n      storage.removeItem(key)\n      if (options.ttl) {\n        const expiryKey = `${key}:expiry`\n        storage.removeItem(expiryKey)\n      }\n    } catch (error) {\n      // Ignore browser private mode error.\n    }\n  }\n\n  return {\n    getItem,\n    setItem,\n    removeItem,\n    clear: storage.clear,\n    key: storage.key,\n    get length() {\n      return storage.length\n    },\n  }\n}\n\nexport function jsonSafeStorage<T>(storageBackend: StorageBackend) {\n  return safeStorage<T>(\n    storageBackend,\n    {throwQuotaErrorsOnSet: false},\n    ssrSafeWindow,\n    JSON.parse as (value: string) => T,\n    JSON.stringify as (obj: T) => string,\n  )\n}\n","import safeStorage from './safe-storage'\n\nexport const {getItem, setItem, removeItem} = safeStorage('sessionStorage')\n","import {getItem, removeItem, setItem} from '@github-ui/safe-storage/session-storage'\nimport type {SoftNavMechanism} from './events'\n\nexport const DEFAULT_SOFT_NAV_ERROR_REASON = 'reload'\n\nexport const SOFT_NAV_FAIL = 'soft-nav:fail'\nexport const SOFT_NAV_FAIL_REFERRER = 'soft-nav:fail-referrer'\nexport const SOFT_NAV_REFERRER = 'soft-nav:referrer'\nexport const SOFT_NAV_MARK = 'soft-nav:marker'\nexport const SOFT_NAV_REACT_APP_NAME = 'soft-nav:react-app-name'\nexport const SOFT_NAV_LATEST_MECHANISM = 'soft-nav:latest-mechanism'\n\nexport function clearSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n  removeItem(SOFT_NAV_REFERRER)\n  removeItem(SOFT_NAV_FAIL)\n  removeItem(SOFT_NAV_FAIL_REFERRER)\n  removeItem(SOFT_NAV_REACT_APP_NAME)\n  removeItem(SOFT_NAV_LATEST_MECHANISM)\n}\n\nexport function setSoftNavMechanism(mechanism: SoftNavMechanism) {\n  setItem(SOFT_NAV_MARK, mechanism)\n}\n\nexport function unsetSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n}\n\nexport function inSoftNav() {\n  const softNav = getItem(SOFT_NAV_MARK)\n  return softNav && softNav !== '0'\n}\n\nexport function getSoftNavMechanism(): SoftNavMechanism {\n  return getItem(SOFT_NAV_MARK) as SoftNavMechanism\n}\n\nexport function hasSoftNavFailure() {\n  return Boolean(getSoftNavFailReason())\n}\n\nexport function getSoftNavFailReason() {\n  return getItem(SOFT_NAV_FAIL)\n}\n\nexport function setSoftNavFailReason(reason: string) {\n  setItem(SOFT_NAV_FAIL, reason || DEFAULT_SOFT_NAV_ERROR_REASON)\n  setItem(SOFT_NAV_FAIL_REFERRER, window.location.href)\n}\n\nexport function setSoftNavReferrer() {\n  setItem(SOFT_NAV_REFERRER, window.location.href)\n}\n\nexport function getSoftNavReferrer() {\n  return getItem(SOFT_NAV_REFERRER) || document.referrer\n}\n\nexport function setSoftNavReactAppName() {\n  const appName = getCurrentReactAppName()\n\n  if (appName) {\n    setItem(SOFT_NAV_REACT_APP_NAME, appName)\n  } else {\n    removeItem(SOFT_NAV_REACT_APP_NAME)\n  }\n}\n\nexport function getSoftNavReactAppName() {\n  return getItem(SOFT_NAV_REACT_APP_NAME)\n}\n\nexport function getCurrentReactAppName() {\n  if (document.querySelector('meta[name=\"ui\"]')) return 'ui'\n\n  return document.querySelector('react-app')?.getAttribute('app-name')\n}\n\nexport function setLatestMechanism(mechanism: SoftNavMechanism) {\n  setItem(SOFT_NAV_LATEST_MECHANISM, mechanism)\n}\n\nexport function getLatestMechanism() {\n  return getItem(SOFT_NAV_LATEST_MECHANISM) as SoftNavMechanism\n}\n","// When using SSR, browser globals are not available. If you try to use them, Node.js will throw an error\ntype SSRSafeLocation = Pick<Location, 'pathname' | 'origin' | 'search' | 'hash' | 'href'>\n\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeDocument = typeof document === 'undefined' ? undefined : document\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeWindow = typeof window === 'undefined' ? undefined : window\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeHistory = typeof history === 'undefined' ? undefined : history\n\nexport const ssrSafeLocation: SSRSafeLocation =\n  // eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\n  typeof location === 'undefined' ? {pathname: '', origin: '', search: '', hash: '', href: ''} : location\n\nexport function setLocation(url: string) {\n  // eslint-disable-next-line no-restricted-syntax\n  const parsedURL: SSRSafeLocation = new URL(url)\n  const {pathname, origin, search, hash} = parsedURL\n\n  Object.assign(ssrSafeLocation, {pathname, origin, search, hash})\n}\n","import {ssrSafeDocument} from './ssr-globals'\n\n/***\n * Are we rendering on the server?\n */\nexport const IS_SERVER = typeof ssrSafeDocument === 'undefined'\n\n/***\n * Are we rendering on the client?\n */\nexport const IS_BROWSER = !IS_SERVER\n\n/***\n * This helper returns `true` if:\n * - we are rendering on the server\n * - we are on the client, and the app has been hydrated from a server-render\n */\nexport function wasServerRendered() {\n  if (IS_SERVER) {\n    return true\n  }\n\n  return Boolean(ssrSafeDocument!.querySelector('react-app[data-ssr=\"true\"]'))\n}\n","import {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {loaded} from '@github-ui/document-ready'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {throttle} from '@github/mini-throttle'\n\nlet stats: PlatformBrowserStat[] = []\nconst chunkSize = 64 * 1024\n\nexport function sendStats(stat: PlatformBrowserStat, flushImmediately = false, samplingProbability = 0.5): void {\n  if (isFeatureEnabled('BROWSER_STATS_DISABLED') === true) {\n    return\n  }\n  if (samplingProbability < 0 || samplingProbability > 1) {\n    throw new RangeError('Sampling probability must be between 0 and 1')\n  }\n\n  if (stat.timestamp === undefined) stat.timestamp = new Date().getTime()\n  stat.loggedIn = isLoggedIn()\n  stat.staff = isStaff()\n  stat.bundler = bundler\n  if (Math.random() < samplingProbability) {\n    stats.push(stat)\n  }\n\n  if (flushImmediately) {\n    flushStats()\n  } else {\n    throttledScheduleSendStats()\n  }\n}\n\nlet queued: number | null = null\n\nconst throttledScheduleSendStats = throttle(async function scheduleSendStats() {\n  await loaded\n  if (queued == null) {\n    queued = window.requestIdleCallback(flushStats)\n  }\n}, 5000)\n\nfunction flushStats() {\n  queued = null\n  if (!stats.length) {\n    return\n  }\n\n  const url = ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-stats-url\"]')?.content\n  if (!url) {\n    return\n  }\n\n  const batches = getBatches(stats)\n\n  for (const batch of batches) {\n    safeSend(url, `{\"stats\": [${batch.join(',')}] }`)\n  }\n\n  stats = []\n}\n\n// getBatches breaks up the list of stats into smaller batches\n// that are less than 64kb in size. This is to avoid hitting the\n// size limit of the beacon API.\nfunction getBatches(items: PlatformBrowserStat[]): string[][] {\n  const batches: string[][] = []\n  const itemStrings = items.map(item => JSON.stringify(item))\n\n  while (itemStrings.length > 0) {\n    batches.push(makeBatch(itemStrings))\n  }\n\n  return batches\n}\n\n// makeBatch walks the items and collects batches of items that are within\n// the 64kb limit. If an item is too big to fit in a batch, it is sent alone.\nfunction makeBatch(itemStrings: string[]): string[] {\n  const firstItem = itemStrings.shift()!\n  const batch: string[] = [firstItem]\n  let size = firstItem.length\n\n  while (itemStrings.length > 0 && size <= chunkSize) {\n    const nextItemSize = itemStrings[0]!.length\n\n    if (size + nextItemSize <= chunkSize) {\n      const itemString = itemStrings.shift()!\n      batch.push(itemString)\n      size += nextItemSize\n    } else {\n      break\n    }\n  }\n\n  return batch\n}\n\nfunction safeSend(url: string, data: string) {\n  try {\n    if (navigator.sendBeacon) {\n      navigator.sendBeacon(url, data)\n    }\n  } catch {\n    // Silently ignore errors: https://github.com/github/github/issues/178088#issuecomment-829936461\n  }\n}\n\nfunction isLoggedIn(): boolean {\n  return !!ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n}\n\nexport function isStaff(): boolean {\n  return !!ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"user-staff\"]')?.content\n}\n\n// Flush stats before users navigate away from the page\nssrSafeDocument?.addEventListener('pagehide', flushStats)\nssrSafeDocument?.addEventListener('visibilitychange', flushStats)\n","// TODO: Research replacing this module with a composable observable library.\n// The scope of this module simply returns a finalized subscription object.\n\n// Lightweight TC39 observable Subscription.\nexport class Subscription {\n  constructor(cleanup: () => void) {\n    this.closed = false\n    this.unsubscribe = () => {\n      cleanup()\n      this.closed = true\n    }\n  }\n\n  // A boolean value indicating whether the subscription is closed.\n  closed: boolean\n  // Cancels the subscription.\n  unsubscribe: () => void\n}\n\n// Create a Subscription from an event.\nexport function fromEvent(\n  target: EventTarget,\n  eventName: string,\n  onNext: EventListenerOrEventListenerObject,\n  options: AddEventListenerOptions = {capture: false},\n): Subscription {\n  target.addEventListener(eventName, onNext, options)\n  return new Subscription(() => {\n    target.removeEventListener(eventName, onNext, options)\n  })\n}\n\n// Combine several subscriptions into a single subscription.\n//\n// subscriptions - A list of subscriptions to combine.\n//\n// Returns a single, combined, subscription.\nexport function compose(...subscriptions: Subscription[]): Subscription {\n  return new Subscription(() => {\n    for (const subscription of subscriptions) {\n      subscription.unsubscribe()\n    }\n  })\n}\n","import {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {sendStats} from '@github-ui/stats'\n// eslint-disable-next-line no-restricted-imports\nimport {reportError} from '@github-ui/failbot'\nimport dompurify from 'dompurify'\nimport {sendEvent} from '@github-ui/hydro-analytics'\n\nexport class TrustedTypesPolicyError extends Error {}\n\ninterface PolicyParam {\n  policy: () => string\n  policyName: string\n  fallback: string\n  fallbackOnError?: boolean\n  sanitize?: boolean // report-only mode for now\n  silenceErrorReporting?: boolean\n}\n\nfunction apply({\n  policy,\n  policyName,\n  fallback,\n  fallbackOnError = false,\n  sanitize,\n  silenceErrorReporting = false,\n}: PolicyParam): string {\n  try {\n    if (isFeatureEnabled('BYPASS_TRUSTED_TYPES_POLICY_RULES')) return fallback\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_CALLED', trustedTypesPolicyName: policyName}, false, 0.1)\n    const policyOutput = policy()\n    if (sanitize) {\n      new Promise(resolve => {\n        const startTime = window.performance.now()\n        const sanitized = dompurify.sanitize(policyOutput, {FORBID_ATTR: []})\n        const endTime = window.performance.now()\n        const executionTime = endTime - startTime\n        if (policyOutput.length !== sanitized.length) {\n          const err = new Error('Trusted Types policy output sanitized')\n          const stack = err.stack?.slice(0, 1000)\n          const output = policyOutput.slice(0, 250)\n          sendEvent('trusted_types_policy.sanitize', {\n            policyName,\n            output,\n            stack,\n            outputLength: policyOutput.length,\n            sanitizedLength: sanitized.length,\n            executionTime,\n          })\n          resolve(policyOutput)\n        }\n      })\n    }\n    return policyOutput\n  } catch (e) {\n    if (e instanceof TrustedTypesPolicyError) throw e\n    if (!silenceErrorReporting) reportError(e)\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_ERROR', trustedTypesPolicyName: policyName})\n    if (!fallbackOnError) throw e\n  }\n\n  return fallback\n}\n\nexport const trustedTypesPolicy = {apply}\n","/* eslint no-restricted-globals: ['off', '__TRUSTED_TYPE_POLICIES__'] */\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\n/*\n * Tinyfill for trusted types\n */\n\ninterface GHTrustedTypePolicyOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createHTML: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScript: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScriptURL: (input: string, ...args: any[]) => string\n}\n\ninterface GHTrustedTypePolicyWithName extends GHTrustedTypePolicyOptions {\n  name: string\n}\n\nfunction unimplemented(functionName: string) {\n  return () => {\n    throw new TypeError(`The policy does not implement the function ${functionName}`)\n  }\n}\n\nconst fallbacks = {\n  createHTML: unimplemented('createHTML'),\n  createScript: unimplemented('createScript'),\n  createScriptURL: unimplemented('createScriptURL'),\n}\n\nconst tinyfill = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => ({\n    name,\n    ...fallbacks,\n    ...rules,\n  }),\n}\n\ntype TrustedTypesPolicies = Map<string, GHTrustedTypePolicyOptions>\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var trustedTypes: typeof tinyfill | undefined\n  // We need to store the policies in a global variable so that they accurately track the global policy store in the\n  // browser. This prevents false misses when there is more than one instance of this module loaded on the page.\n  // eslint-disable-next-line no-var\n  var __TRUSTED_TYPE_POLICIES__: TrustedTypesPolicies\n}\n\nconst registeredPolicies: TrustedTypesPolicies = (globalThis.__TRUSTED_TYPE_POLICIES__ ??= new Map())\n\n// eslint-disable-next-line compat/compat\nconst trustedTypes = globalThis.trustedTypes ?? tinyfill\n\nexport const ghTrustedTypes = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => {\n    if (registeredPolicies.has(name)) {\n      sendStats({\n        incrementKey: 'TRUSTED_TYPES_POLICY_INITIALIZED_TWICE',\n      })\n      return registeredPolicies.get(name) as GHTrustedTypePolicyWithName\n    } else {\n      const policy = Object.freeze(trustedTypes.createPolicy(name, rules))\n      registeredPolicies.set(name, policy)\n      return policy\n    }\n  },\n}\n\n// This export is only for testing. Do not import in production code.\nexport const registeredPoliciesForTesting = registeredPolicies\nexport const tinyfillForTesting = tinyfill\n\n/*\n *\n * This is a temporary warning to indicate to hubbers that the following errors are expected and safe to ignore.\n *\n */\nlet hasWarnedHubberAboutTrustedTypes = false\n\nssrSafeDocument?.addEventListener('securitypolicyviolation', (e: SecurityPolicyViolationEvent) => {\n  if (e.violatedDirective === 'require-trusted-types-for' && !hasWarnedHubberAboutTrustedTypes) {\n    // eslint-disable-next-line no-console\n    console.warn(`Hi fellow Hubber!\n    You're probably seeing a Report Only Trusted Types error near this message. This is intended behaviour, staff-only,\n    does not impact application control flow, and is used solely for statistic collection. Unfortunately we\n    can't gather these statistics without adding the above warnings to your console. Sorry about that!\n    Feel free to drop by #prodsec-engineering if you have any additional questions about Trusted Types or CSP.`)\n    hasWarnedHubberAboutTrustedTypes = true\n  }\n})\n"],"names":["fetchJson","url","response","fetch","credentials","headers","Accept","ok","json","MessageType","SignalRSocket","EventTarget","getInstance","target","instances","has","set","get","socketDidReceiveMessage","socket","message","data","JSON","parse","split","RECORD_SEPARATOR","dispatchEvent","CustomEvent","detail","type","close","socketDidOpen","handshake","socketDidClose","socketDidFinish","globalSocket","shouldTryAgainWithNewSocket","setTimeout","startOrContinueStreaming","xhrConnectionUrl","Math","floor","random","JITTER_MAX_MILLISECONDS","JITTER_MIN_MILLISECONDS","socketShouldRetry","code","ABNORMAL_CLOSURE","isFatalStatusCode","retryingAbnormalClosure","isStreaming","tryStartNewStream","closeExistingSocket","onStreamFailure","reconnectWindow","socketUrl","retrieveSocketURL","StableSocket","timeout","attempts","open","e","searchParams","URL","window","location","origin","tenantId","runId","sendPayload","protocol","version","targetPayload","arguments","POLICY_VIOLATION","payload","send","stringify","constructor","xhrUrl","authResult","authenticatedUrl","wsResult","logStreamWebSocketUrl","String","Map","NodeType","TimestampRegex","URLRegex","URLPunctuation","matchingURLPunctuation","ch","regexpEscape","_ansiEscapeCodeRegex","Resets","specials","bgColors","fgColors","base8BitColors","colorIncrements216","COMMAND","DEBUG","ERROR","INFO","SECTION","VERBOSE","WARNING","GROUP","END_GROUP","ICON","NOTICE","commandToType","command","Command","debug","Debug","error","Error","info","Info","section","Section","verbose","Verbose","warning","Warning","notice","Notice","group","Group","endgroup","EndGroup","icon","Icon","typeToCommand","supportedCommands","getText","text","toLocaleLowerCase","CharacterType","Parser","content","lineNumber","findResult","result","html","x","getStates","output","classNames","styles","currentText","style","fg","bg","isFgRGB","isBgRGB","push","bold","italic","underline","matchIndex","prevMatchIndex","parseResult","Array","length","fill","selectedLine","lines","slice","map","l","line","indexOf","textToFind","matchCount","textContent","markerText","substring","i","select","handleHighlight","index","entry","htmlSubstring","substringStartIndex","previousType","currentType","splitUrls","match","prefixMatch","entryPrefix","entrySuffix","suffixChars","reverse","join","escapedEndPunctuation","Object","values","suffixRegex","suffixMatch","entryUrl","replace","prefixHtmlSubstring","urlHtmlSubstring","suffixHtmlSubstring","currentGroupNode","nodes","lineStartIndex","plainNodeStart","considerDefaultLogic","currentCommand","commandSeeker","pendingLastNode","resetCommandVar","resetPlain","resetPending","parseCommandEnd","commandIndex","possibleTimestamp","offset","groupStarted","groupEnded","nodeIndex","groupCount","char","charAt","node","start","end","lineIndex","pushNode","Plain","isGroup","undefined","startIndex","endIndex","iconChar","toLowerCase","test","state","isCommandActive","codes","character","setForeground","setBackground","isSingleColorCode","isRGBColorCode","rgbColors","currentCode","codeNumber","parseInt","_get8BitColorClasses","_get8BitRGBColors","isNaN","previousStyle","assign","rgbColor","_get216Color","_get8bitGrayscale","r","g","b","increment","colorCode","logLineContentTemplate","isError","lineContent","isWarning","isNotice","ifDefined","groupExpanded","inGroup","stepLogLineTemplate","className","lineUrl","timeStamp","checkRunLogLineTemplate","pipelinesLogParser","LogParser","updateLineMetaData","rawLogData","timestampRegex","timestamps","logContent","timestamp","Date","ts","Number","toUTCString","lineMetaData","parseLines","setData","updateLogLines","appendData","appendLines","startLine","logLines","currentTime","toISOString","isStr","logLineNumbers","setSelectedLine","search","selectFirstLine","findLines","normalizedText","getNodeTextForSearch","cancelSearch","renderTemplate","isCheckRun","logLineNumber","getNodeText","permalinkPrefix","regexString","replaceAll","indexFromNumber","num","elementToScroll","shouldAutoScroll","lastScrollTop","scrolledUp","stepsMap","getUnorderedSteps","keys","scrollableContainer","document","querySelector","observe","HTMLElement","add","calculateContainerHeights","addScrollListener","uxRefresh","logsContainer","logsContainerHasUxRefreshAttribute","hasAttribute","scrollListener","determineScrollDirection","newScrollTop","calculateScrollTop","renderSteps","container","addEventListener","isFullscreen","fullLogsContainer","scrollTop","scrollY","element","removeProperty","height","innerHeight","getBoundingClientRect","top","StepState","href","hash","baseURL","buffer","stepFromContainer","externalId","getAttribute","handleToggle","event","step","currentTarget","isOpen","loadCompletedLogs","handleClick","getCompletedLogURL","preventDefault","setAttribute","openStep","hideLoader","loader","chevron","queryElements","removeAttribute","enableStep","options","scrollToBottom","permaLink","downloadErrorMessage","downloadErrorMessageText","hidden","showLoader","parser","clusters","isHTMLContent","includes","status","reader","body","getReader","streamCompletedLog","appendLogs","sendStats","incrementKey","scrollToLine","err","updateStreamingLogs","newLines","checkStepElement","closest","update","firstLines","lastElement","findLineElement","lastElementBottom","bottom","lastElementInView","fullLogsContainerHeight","animation","bytes","utf8Decoder","TextDecoder","chunk","read","done","value","Uint8Array","truncatedMessage","decode","getStepNumber","stepDetails","attr","tagName","lastCluster","lastLine","renderLines","min","visible","estimateClusterHeight","cluster","wrapper","createElement","keepLoader","syncDOM","render","count","childElementCount","append","renderCluster","Promise","resolve","total","groupIndex","expandedGroups","estHeight","documentElement","offsetHeight","above","offsetTop","below","setClusterVisibility","selection","getSelection","isCollapsed","containsNode","lineIndexes","template","repeat","tmpl","lineTemplate","renderHTML","appendChild","elemAbove","elemBelow","renderStep","logDisplayElement","checkSteps","position","cancelSearchStep","searchLineIndexes","renderLine","skipVirtualization","orderedSteps","sort","a","number","stepIndex","findIndex","ensureEnoughMaterializedLines","LINES_PER_CLUSTER","expandGroup","details","selectLine","scrollIntoView","behavior","block","currentStep","linesToMaterialize","linesLeft","neighborStep","clusterIndex","nearestNeighborCluster","prev","querySelectorAll","classList","remove","selectPermalinkLine","permalinkLine","scroll","on","setFullScreenKeyboardShortcuts","fullScreenToggle","uninstall","areCharacterKeyShortcutsEnabled","install","dataset","shortcut","stepHeaders","logToolbar","stepHeader","removeEventListener","prop","left","right","zIndex","logParser","loadCheckRunLogs","checkRunLogsDisplay","blankSlate","hideBlankSlate","appendCheckRunLogs","permalinkStepNumber","parseLocationHash","permalinkInfo","toggle","checked","checkRunLogs","configureStep","Set","moveStep","stepContainer","elementToMove","isCheckStepChild","parentNode","nodeName","parentElement","stepNumber","siblingElement","children","insertBefore","flushLogs","stp","closeStep","expand","plink","subscribe","el","fromEvent","has_steps","hasSteps","log_archive","logArchive","raw_logs","rawLogs","item","divider","ResizeObserver","setLogTitleStickyValues","borderBottomWidth","marginBottom","getComputedStyle","checkRunHeaderElem","logTitle","getElementsByClassName","newTop","clientHeight","observer","entries","unobserve","locationHashChanged","find","findStep","childElement","lineElement","parentLine","toggleGroup","delete","filter","minLine","maxLine","idx","capture","matches","selectedMatchIndex","hasMatches","goNext","goToMatch","current","steps","nextStep","updateSearchUI","totalMatches","showSearchUI","disableSearchUI","toolbar","previous","next","counter","disabled","input","configureCheckSteps","debounce","reduce","searchStep","automaticallyLoadLatestRun","showFlashMessage","importNode","flashContainer","child","removeChild","cleanCheckAndWait","blankslate","remoteForm","form","wants","selectedCheckRun","onlyFailedCheckRuns","failed","contains","link","click","CheckStepElement","detailsDisabled","loggedIn","logUrl","iconTemplate","id","inProgress","conclusion","getElementById","innerHTML","gearIcon","time","startedAt","completedAt","preciseDuration","jobCompleted","getTime","connectedCallback","seconds","round","minutes","remainderSeconds","hours","days","useActionsUx","header","cssText","name","controller","AliveMessageKind","tsFromID","unixMs","CheckStepsElement","handleAliveEvent","bind","createOrCloseStreamingLogSocket","isJobCompleted","requestJobSteps","disconnectedCallback","abortController","abort","attributeChangedCallback","oldValue","newValue","aliveData","jobStatus","canStream","streaming_logs","messageKind","kind","resultsData","handleAliveStepLogEvent","stepsUpdate","handleAliveStepUpdateEvent","stepsFromResults","latestChangeId","s","changeOrder","updateJobSteps","stepId","newLogs","logIds","lineID","rawLines","backscrollFetched","oldStepState","aliveBackscrollBuffer","streamingUrl","signal","streamingLogSocket","handleStreamFailure","handleSocketDidReceiveMessage","processSocketMessage","logUpdate","isArray","stepRecordId","concat","requestInProgressOrWaiting","jobStepsUrl","areStepsCompleted","requestedChangeId","waitAndIncrementRetries","dataMismatch","ids","existing","checkStep","updateStepAttributes","fetchBackscrolls","addStep","STREAMING","started_at","completed_at","completed_log_url","max","change_id","size","retries","log_url","jobStepBackscrollURL","backscrolls","renderAliveBufferAndBackscrolls","sortedLines","lineIDsA","lineIDsB","aGroupID","bGroupID","aLineID","firstId","allCompleted","res","AbortController","observedAttributes","queryLast","selector","list","requestUri","host","pagePathname","locationOverride","pathname","pageQuery","stripParams","extraParams","meta","names","env","getEnv","getLocale","locale","loadEnv","envTag","console","ready","ssrSafeDocument","readyState","loaded","ssrSafeWindow","extensionErrors","errorsReported","loadTime","now","EXPECTED_NETWORK_ERROR_MESSAGES","isExpectedError","startsWith","reportError","context","isFeatureEnabled","isIgnoredNonError","ignoredErrorMessages","some","errorForStackTrace","serializedErrorValue","serializeNonError","report","errorContext","stacktrace","catalogService","formatError","unloaded","isSupported","head","stack","frame","extensions","filename","function","method","sanitizedUrl","referrer","getSoftNavReferrer","timeSinceLoad","user","pageUser","login","clientId","getOrCreateClientId","bundler","ui","Boolean","file","methodName","lineno","toString","colno","column","BroadcastChannel","sharedWorkerErrorChannel","getEnabledFeaturesSet","features","featureFlags","feature","featuresSet","IS_SERVER","memoize","getEnabledFeatures","from","featureFlag","chordOrKeyRegex","splitHotkeyString","hotkey","matchAll","chord","keyboardShortcutsPreference","isNonCharacterKeyShortcut","nonEditableInputTypes","isShortcutAllowed","eventToHotkeyString","allowCharacterKeyShortcuts","isEditableElement","isReadonly","ariaReadOnly","isContentEditable","hydroAnalyticsClient","getItem","safeStorage","dimensionPrefix","MARKETING_PARAMS","getOptionsFromMeta","baseContext","AnalyticsClient","_","extendBaseContext","key","app_id","event_url","visitorMeta","atob","URLSearchParams","staff","isStaff","sendPageView","sendEvent","service","cleanContext","stringifyObjectValues","obj","fromEntries","k","v","policyName","temporaryPermissiveJtmlPolicy","ghTrustedTypes","createPolicy","createHTML","trustedTypesPolicy","apply","policy","fallback","fallbackOnError","TemplateResult","setCSPTrustedTypesPolicy","runtimeEnvironment","isEnterprise","BUNDLER","NoOpStorage","setItem","removeItem","clear","storageKey","throwQuotaErrorsOnSet","global","deserialize","serialize","storage","emitStats","sendCacheStats","ttl","expiryKey","expiry","jsonSafeStorage","storageBackend","DEFAULT_SOFT_NAV_ERROR_REASON","SOFT_NAV_FAIL","SOFT_NAV_FAIL_REFERRER","SOFT_NAV_REFERRER","SOFT_NAV_MARK","SOFT_NAV_REACT_APP_NAME","SOFT_NAV_LATEST_MECHANISM","clearSoftNav","setSoftNavMechanism","mechanism","unsetSoftNav","inSoftNav","softNav","getSoftNavMechanism","hasSoftNavFailure","getSoftNavFailReason","setSoftNavFailReason","reason","setSoftNavReferrer","setSoftNavReactAppName","appName","getCurrentReactAppName","getSoftNavReactAppName","setLatestMechanism","getLatestMechanism","ssrSafeHistory","history","ssrSafeLocation","IS_BROWSER","wasServerRendered","stats","stat","flushImmediately","samplingProbability","flushStats","throttledScheduleSendStats","queued","throttle","requestIdleCallback","batch","getBatches","items","batches","itemStrings","makeBatch","firstItem","shift","nextItemSize","itemString","safeSend","navigator","sendBeacon","Subscription","cleanup","closed","unsubscribe","eventName","onNext","compose","subscriptions","subscription","TrustedTypesPolicyError","sanitize","silenceErrorReporting","trustedTypesPolicyName","policyOutput","startTime","performance","sanitized","dompurify","FORBID_ATTR","endTime","outputLength","sanitizedLength","executionTime","globalThis","unimplemented","functionName","fallbacks","createScript","createScriptURL","registeredPolicies","__TRUSTED_TYPE_POLICIES__","trustedTypes","rules","freeze","hasWarnedHubberAboutTrustedTypes","violatedDirective","warn"],"sourceRoot":""}