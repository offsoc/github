# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::ChangeUserTheme`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::ChangeUserTheme`.

class Hydro::Schemas::Github::V1::ChangeUserTheme
  sig do
    params(
      source: T.nilable(T.any(Symbol, Integer)),
      theme_type: T.nilable(T.any(Symbol, Integer)),
      user_id: T.nilable(Integer),
      user_theme: T.nilable(Integer),
      user_theme_previous: T.nilable(Integer)
    ).void
  end
  def initialize(source: nil, theme_type: nil, user_id: nil, user_theme: nil, user_theme_previous: nil); end

  sig { void }
  def clear_source; end

  sig { void }
  def clear_theme_type; end

  sig { void }
  def clear_user_id; end

  sig { void }
  def clear_user_theme; end

  sig { void }
  def clear_user_theme_previous; end

  sig { returns(T.any(Symbol, Integer)) }
  def source; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def source=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def theme_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def theme_type=(value); end

  sig { returns(Integer) }
  def user_id; end

  sig { params(value: Integer).void }
  def user_id=(value); end

  sig { returns(Integer) }
  def user_theme; end

  sig { params(value: Integer).void }
  def user_theme=(value); end

  sig { returns(Integer) }
  def user_theme_previous; end

  sig { params(value: Integer).void }
  def user_theme_previous=(value); end
end
