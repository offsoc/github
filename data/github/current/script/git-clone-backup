#!/bin/sh
#/ Usage: git-clone-backup <path> [<dest>]
#/ Clones a GitHub repository from an offsite backup. This command works
#/ only from fileserver machines. <path> is the location of the live
#/ repository on disk. <dest> is the location where the new clone should
#/ live.
#/
#/ Example
#/   git clone-backup /data/repositories/b/nw/bd/1d/55/33/33.git backup.git
set -e

# parse args
path=
dest=
while [ $# -gt 0 ]
do
    case "$1" in
        --help)
            grep ^#/ <"$0" |cut -c4-
            exit
            ;;
        *)
            if [ -z "$path" ]
            then path="$1"
            else dest="$1"
            fi
            shift
            ;;
    esac
done

# bail out if path not specified
[ -z "$path" ] && {
    echo "$(basename $0): path not specified" 1>&2
    exit 1
}

# assume backup.git with no dest specified
: ${dest:=backup.git}

# make sure we have the absolute path to repo we want to clone
path=$(cd "$path" && pwd)
echo "$path" | grep -q ^/data/repositories/ || {
   echo "repo <path> must start with /data/repositories" 1>&2
   exit 1
}

# clone from remote backups. e.g., when repository is under
# fs1a:/data/repositories/f/.../1234.git then backup is at
# f.backup.github.com:/data/repositories/f/.../1234.git
shard=$(echo "${path##/data/repositories/}" |cut -c1-1)
git clone --bare "$shard.backup.github.com:$path" "$dest"
