<%# erblint:counter DeprecatedComponentsCounter 1 %>
<%# rubocop:disable Lint/InstanceVariable %>
<%
  component ||= "two-factor-setup-verification"
  full_setup = component == "two-factor-setup-verification"
  button_sudo_required ||= false
  show_captcha = !GitHub.enterprise? && Octocaptcha.new(session, page: :two_factor_sms_setup, user: current_user).show_captcha?
%>

<div hidden data-target="<%= component %>.smsElem">
  <%= form_with url: settings_user_2fa_verify_path, data: { target: "#{component}.smsForm", action: "submit:#{component}#formSubmit" }, class: show_captcha ? "js-octocaptcha-parent" : "" do |form| %>
    <%= csrf_hidden_input_for settings_user_2fa_verify_path, method: :post, class: "js-data-url-csrf" %>
    <%= hidden_field_tag :type, :sms %>

    <div>
      <p class="color-fg-muted">
        Get authentication codes by SMS on your mobile phone when signing into GitHub.
        Make sure that <a class="Link--secondary text-underline js-focus" href="<%= GitHub.help_url %>/articles/countries-where-sms-authentication-is-supported#supported-countries-for-sms-authentication" target="_blank" rel="noreferrer">your country or region is supported</a> for SMS delivery.
      </p>

      <% if show_captcha %>
        <%= render(Primer::Beta::Heading.new(tag: full_setup ? :h3 : :h5, classes: "h5", mt: 3)) { "Verify account" } %>
        <p class="color-fg-muted">
          Before setting up SMS, please verify that you're a human.
        </p>
        <%= render partial: "shared/octocaptcha", locals: { include_header: false, origin_page: "github_two_factor_sms_setup", octocaptcha_timeout: @octocaptcha_timeout } %>
      <% end %>

      <%= render(Primer::Alpha::Banner.new(
        hidden: true,
        scheme: :warning,
        data: {
          target: "#{component}.smsDefaultError"
        },
        p: 2,
        tabindex: -1
      )) do %>
        We were unable to send you a message via SMS. If the problem persists you
        might consider enabling two-factor authentication with
        <a class="Link--secondary text-underline" href="<%= settings_user_2fa_intro_path %>">with a password manager</a>.
      <% end %>

      <%= render(Primer::Alpha::Banner.new(
        hidden: true,
        scheme: :warning,
        data: {
          target: "#{component}.smsErrorContainer"
        },
        p: 2,
        tabindex: -1
      )) %>

      <div class="<%= show_captcha ? "js-octocaptcha-form-submit" : "" %>" <%= show_captcha ? "hidden" : "" %>>
        <dl class="form-group">
          <dt><label for="countrycode">Country or region code</label></dt>
          <dd class="pr-2">
            <select class="form-select" autocomplete="tel-country-code" name="countrycode" id="countrycode" data-target="<%= component %>.countryCodeSelect">
              <option value="+1">United States +1</option>
              <% sms_supported_countries.each do |code, name| %>
                <option value="<%= code %>"><%= name + " " + code.to_s %></option>
              <% end %>
            </select>
          </dd>
        </dl>

        <dl class="form-group">
          <dt><label for="number" id="label-phone-number">Your phone number</label></dt>
          <dd>
            <%= form.text_field :number,
              id: "number",
              required: true,
              class: "short",
              style: "background-color: transparent",
              autocomplete: "off",
              data: {
                action: "input:#{component}#smsPhoneInputChange",
                target: "#{component}.smsPhoneInput"
              },
              aria: {
                labelledby: "label-phone-number"
              }
            %>
          </dd>
        </dl>

        <%= csrf_hidden_input_for settings_user_2fa_sms_path, method: :post, class: "js-data-url-csrf-send" %>
        <div class="d-flex flex-items-center width-fit">
          <%= render Primer::ButtonComponent.new(
            mr: 2,
            disabled: true,
            w: :fit,
            "data-sudo-required": button_sudo_required,
            data: {
              action: "click:#{component}#buttonSendSmsClick",
              target: "#{component}.buttonSendSms",
              url: settings_user_2fa_sms_path
            }) do %>
            Send authentication code
          <% end %>

          <span class="color-fg-danger" data-target="<%= component %>.smsSendStatusError" hidden>
            <%= primer_octicon :x %>
          </span>
          <span data-target="<%= component %>.smsSendStatusInProgress" hidden>
            <%= render(Primer::Beta::Spinner.new(size: :small)) %>
          </span>
          <span class="color-fg-success d-flex" data-target="<%= component %>.smsSendStatusSuccess" hidden>
            <%= render(Primer::Beta::Octicon.new(icon: "check", color: :accent, mt: 1, mr: 1)) %>
            <p class="note">Sent. It may take a minute for the SMS to arrive.</p>
          </span>
        </div>

        <div data-target="<%= component %>.smsCodeForm" hidden>
          <dl class="form-group">
            <dt><label for="two-factor-code">Verify the code sent to your phone</label></dt>
            <dd class="mt-2 d-flex flex-items-center">
              <%= form.text_field :otp,
                disabled: true,
                required: true,
                class: "short input-hide-webkit-autofill",
                style: "background-color: transparent",
                placeholder: "XXXXXX",
                pattern: "[0-9]{6}",
                autocomplete: "off",
                data: {
                  action: "input:#{component}#otpChange",
                  target: "#{component}.smsOtpInput"
                }
              %>
              <span class="color-fg-success d-flex" data-target="<%= component %>.otpVerifySuccess" hidden>
                <%= render(Primer::Beta::Octicon.new(icon: "check", color: :success, ml: 1)) %>
              </span>
            </dd>
          </dl>
        </div>
      </div>
    </div>
  <% end %>
</div>
