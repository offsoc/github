<%# erblint:counter DeprecatedComponentsCounter 2 %>
<div class="SelectMenu-header d-flex flex-justify-between flex-items-center" <%= test_selector("alerts-#{filter_type}-filter-component") %>>
  <span class="select-menu-title">Filter by <%= filter_name %></span>
  <%= render Primer::Beta::CloseButton.new(
    classes: "SelectMenu-closeButton btn-link",
    "data-toggle-for": "alerts-#{filter_type}-filter",
    "aria-label": "Close menu") %>
</div>

<% if any_selected? %>
  <div>
    <a href="<%= dependabot_alerts_path(q: query_string_without(filter_type.to_sym)) %>"
      class="SelectMenu-item Link--muted"
      aria-checked="false"
      role="menuitemradio"
      <%= test_selector("alerts-#{filter_type}-clear-filter") %>
    >
      <span><%= "Clear #{filter_type}" %></span>
    </a>
  </div>
<% end %>

<% if @show_search_bar %>
  <div class="select-menu-filters" <%= test_selector("alerts-#{filter_type}-search-bar") %>>
    <filter-input class="select-menu-text-filter" aria-owns="<%= filter_type %>-list">
      <input
        type="text"
        class="form-control"
        autofocus
        autocomplete="off"
        aria-label="Filter <%= filter_type %>"
        placeholder="Filter <%= filter_type %>">
    </filter-input>
  </div>
<% end %>

<div class="select-menu-list" id="<%= filter_type %>-list" data-filter-list>
    <% item_list.each do |item| %>
      <a href="<%= dependabot_alerts_path(q: filter_query(item[:slug])) %>"
        class="SelectMenu-item"
        aria-checked="<%= selected(item[:slug]) %>"
        role="menuitemradio"
        <%= test_selector("alerts-#{filter_type}-filter") %>
      >
        <%= primer_octicon(:check, classes: "SelectMenu-icon SelectMenu-icon--check") %>
        <%= render(Primer::Box.new(display: :flex, justify_content: :space_between, w: :full, title: item[:label],)) do %>
          <%= render(Primer::Box.new(display: :flex, direction: :column)) do %>
            <%= render Primer::Truncate.new(max_width: truncation_length, test_selector: "alerts-#{filter_type}-item-description") do %>
              <%= item[:label] %>
              <%= render(GitHub::BetaFlagComponent.new) if item[:label_beta_tag] == true %>
            <% end %>
            <%= render(Primer::Truncate.new(max_width: truncation_length, color: :muted).with_content(item[:description])) if item[:description].present? %>
          <% end %>
          <%= render(Primer::Beta::Counter.new(count: item[:count], align_self: :center, test_selector: "alerts-#{filter_type}-item-count")) if item[:count].present? %>
        <% end %>
      </a>
    <% end %>
  <div class="p-2" data-filter-empty-state hidden>No <%= filter_type %> found</div>
</div>
