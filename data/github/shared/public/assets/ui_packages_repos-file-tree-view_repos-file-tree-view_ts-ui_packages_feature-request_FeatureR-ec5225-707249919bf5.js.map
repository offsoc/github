{"version":3,"file":"ui_packages_repos-file-tree-view_repos-file-tree-view_ts-ui_packages_feature-request_FeatureR-ec5225-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/append-and-focus-search-bar/append-and-focus-search-bar.ts","ui/packages/code-view-shared/utilities/web-worker.ts","ui/packages/cookies/cookies.ts","ui/packages/repos-file-tree-view/components/ExpandFileTreeButton.tsx","ui/packages/repos-file-tree-view/components/FindFilesShortcut.tsx","ui/packages/repos-file-tree-view/contexts/FileTreeContext.tsx","ui/packages/repos-file-tree-view/contexts/FileTreeControlContext.tsx","ui/packages/repos-file-tree-view/hooks/use-fetch-folder.ts","ui/packages/repos-file-tree-view/components/ReposFileTreeView.tsx","ui/packages/repos-file-tree-view/components/SearchButton.tsx","ui/packages/repos-file-tree-view/components/ReposFileTreePane.tsx","ui/packages/repos-file-tree-view/hooks/use-tree-pane.tsx","ui/packages/use-file-tree-tooltip/use-file-tree-tooltip.ts","ui/packages/code-view-shared/components/DuplicateOnKeydownButton.tsx","ui/packages/code-view-shared/components/ExpandButton.tsx","ui/packages/code-view-shared/worker-jobs/find-file.ts","ui/packages/code-view-shared/hooks/use-tree-list.ts","ui/packages/code-view-shared/components/files-search/FileResultsList.tsx","ui/packages/code-view-shared/components/files-search/FilesSearchBox.tsx","ui/packages/code-view-shared/contexts/OpenPanelContext.tsx","ui/packages/feature-request/services/api.ts","ui/packages/feature-request/hooks/use-feature-request.ts","ui/packages/feature-request/FeatureRequest.tsx","ui/packages/react-core/JsonRoute.tsx","ui/packages/use-code-view-options/CodeViewOptionsProvider.tsx"],"sourcesContent":["/*\n * An event to trigger the search bar to append a query to the current query and focus it\n * (used by faceting to suggest further facets)\n */\nconst appendAndFocusEvent = 'blackbird_monolith_append_and_focus_input'\n\n/*\n * Trigger the search bar to append a query to the current query and focus it\n * (used by faceting to suggest further facets)\n */\nexport function appendAndFocusSearchBar({\n  appendQuery,\n  retainScrollPosition,\n  returnTarget,\n}: {\n  appendQuery?: string\n  retainScrollPosition?: boolean\n  returnTarget?: HTMLElement\n}): void {\n  window.dispatchEvent(\n    new CustomEvent(appendAndFocusEvent, {\n      detail: {\n        appendQuery,\n        retainScrollPosition,\n        returnTarget,\n      },\n    }),\n  )\n}\n","type WorkerEventListener<Data> = (response: {data: Data}) => void\n\ninterface AbstractWorker<TRequest, TResponse> {\n  onmessage?: WorkerEventListener<TResponse>\n  postMessage(request: TRequest): void\n  terminate(): void\n}\n\n/**\n * WebWorker is an abstraction that exposes similar interface as a Service Worker.\n * However, besides the path it also requires a callback, same function as the one run in the worker thread.\n * This callback is used as a fallback if worker cannot be created.\n */\nexport class WebWorker<TRequest, TResponse> implements AbstractWorker<TRequest, TResponse> {\n  worker: Worker | MainThreadWorker<TRequest, TResponse>\n\n  set onmessage(listener: WorkerEventListener<TResponse>) {\n    this.worker.onmessage = listener\n  }\n\n  constructor(path: string, job: (request: {data: TRequest}) => TResponse) {\n    try {\n      this.worker = new Worker(path)\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Web workers are not available. Please enable web workers to benefit from the improved performance.')\n      this.worker = new MainThreadWorker(job)\n    }\n  }\n\n  postMessage(request: TRequest) {\n    this.worker.postMessage(request)\n  }\n\n  terminate() {\n    this.worker.terminate()\n  }\n}\n\nexport class MainThreadWorker<TRequest, TResponse> implements AbstractWorker<TRequest, TResponse> {\n  private terminated = false\n\n  onmessage: WorkerEventListener<TResponse> | undefined\n\n  constructor(private job: (request: {data: TRequest}) => TResponse) {}\n\n  async postMessage(request: TRequest) {\n    if (this.terminated) {\n      return\n    }\n    const response = {data: this.job({data: request})}\n    this.onmessage?.(response)\n  }\n\n  terminate() {\n    this.terminated = true\n  }\n}\n","interface Cookie {\n  key: string\n  value: string\n}\n\n/**\n * Get a cookie by name.\n * @param name\n * @returns a cookie object or undefined if not found.\n */\nexport function getCookie(name: string): Cookie | undefined {\n  return getCookies(name)[0]\n}\n\n/**\n * Get all cookies by name.\n * @param name\n * @returns\n */\nexport function getCookies(name: string): Cookie[] {\n  const cookies = []\n  for (const cookie of readCookies()) {\n    const [key, value] = cookie.trim().split('=')\n    if (name === key && typeof value !== 'undefined') {\n      cookies.push({key, value})\n    }\n  }\n  return cookies\n}\n\nfunction readCookies(): string[] {\n  try {\n    return document.cookie.split(';')\n  } catch {\n    // Cookie access disabled.\n    return []\n  }\n}\n\n/**\n * Set a new cookie with sensible defaults like secure.\n * @param name\n * @param value\n * @param expiration\n * @param strictDomain\n * @param samesite\n */\nexport function setCookie(\n  name: string,\n  value: string,\n  expiration: string | null = null,\n  strictDomain = false,\n  samesite = 'lax',\n) {\n  let domain = document.domain\n  if (domain == null) {\n    throw new Error('Unable to get document domain')\n  }\n\n  // Share cookies with test environments.\n  if (domain.endsWith('.github.com')) {\n    domain = 'github.com'\n  }\n\n  const secure = location.protocol === 'https:' ? '; secure' : ''\n  const expire = expiration ? `; expires=${expiration}` : ''\n  if (strictDomain === false) {\n    domain = `.${domain}`\n  }\n  try {\n    document.cookie = `${name}=${value}; path=/; domain=${domain}${expire}${secure}; samesite=${samesite}`\n  } catch {\n    // Cookie access disabled.\n  }\n}\n\n/**\n * Delete a given cookie with sensible defaults like secure.\n * This sets the expires value to a second ago to delete the cookie.\n * @param name\n * @param strictDomain\n */\nexport function deleteCookie(name: string, strictDomain = false) {\n  let domain = document.domain\n  if (domain == null) {\n    throw new Error('Unable to get document domain')\n  }\n\n  // Share cookies with test environments.\n  if (domain.endsWith('.github.com')) {\n    domain = 'github.com'\n  }\n\n  const time = new Date().getTime()\n  const expiration = new Date(time - 1).toUTCString()\n  const secure = location.protocol === 'https:' ? '; secure' : ''\n  const expire = `; expires=${expiration}`\n  if (strictDomain === false) {\n    domain = `.${domain}`\n  }\n  try {\n    document.cookie = `${name}=''; path=/; domain=${domain}${expire}${secure}`\n  } catch {\n    // Cookie access disabled.\n  }\n}\n","import {DuplicateOnKeydownButton} from '@github-ui/code-view-shared/components/DuplicateOnKeydownButton'\nimport {ExpandButton} from '@github-ui/code-view-shared/components/ExpandButton'\nimport {useShortcut} from '@github-ui/code-view-shared/hooks/shortcuts'\nimport {useClientValue} from '@github-ui/use-client-value'\nimport {ArrowLeftIcon} from '@primer/octicons-react'\nimport {Button, type ButtonProps, type TooltipProps} from '@primer/react'\nimport React from 'react'\n\nexport interface ExpandFileTreeButtonProps extends Pick<ButtonProps, 'variant'> {\n  expanded?: boolean\n  onToggleExpanded: React.MouseEventHandler<HTMLButtonElement>\n  className?: string\n  ariaControls: string\n  textAreaId: string\n  useFilesButtonBreakpoint?: boolean\n  getTooltipDirection?: (expanded?: boolean) => TooltipProps['direction']\n}\n\nexport const ExpandFileTreeButton = React.forwardRef(\n  (\n    {\n      expanded,\n      onToggleExpanded,\n      className,\n      ariaControls,\n      textAreaId,\n      useFilesButtonBreakpoint = true,\n      variant,\n      getTooltipDirection,\n    }: ExpandFileTreeButtonProps,\n    ref: React.ForwardedRef<HTMLButtonElement>,\n  ) => {\n    const {toggleTreeShortcut} = useShortcut()\n    const [isSSR] = useClientValue(() => false, true, [])\n    const tooltipDirection = getTooltipDirection?.(expanded) ?? 'se'\n\n    return (\n      <>\n        {/* on the server, the expanded value will purely be whatever their saved\n    setting is, which might be expanded. On mobile widths we don't ever default to\n    having the tree expanded, so on the server we need to just hard code it to\n    show the regular not expanded version of everything*/}\n        {useFilesButtonBreakpoint && (!expanded || isSSR) && (\n          <Button\n            aria-label=\"Expand file tree\"\n            leadingVisual={ArrowLeftIcon}\n            data-hotkey={toggleTreeShortcut.hotkey}\n            data-testid=\"expand-file-tree-button-mobile\"\n            ref={ref}\n            onClick={onToggleExpanded}\n            variant={variant ?? 'invisible'}\n            sx={{color: 'fg.muted', px: 2, display: 'none', '@media screen and (max-width: 768px)': {display: 'block'}}}\n          >\n            Files\n          </Button>\n        )}\n        <ExpandButton\n          dataHotkey={toggleTreeShortcut.hotkey}\n          className={className}\n          expanded={expanded}\n          alignment=\"left\"\n          ariaLabel={expanded ? 'Collapse file tree' : 'Expand file tree'}\n          tooltipDirection={tooltipDirection}\n          testid=\"file-tree-button\"\n          ariaControls={ariaControls}\n          ref={ref}\n          variant={variant}\n          onToggleExpanded={onToggleExpanded}\n          sx={{\n            height: '32px',\n            position: 'relative',\n            ...(useFilesButtonBreakpoint\n              ? {'@media screen and (max-width: 768px)': {display: !expanded || isSSR ? 'none' : 'flex'}}\n              : {display: 'flex'}),\n          }}\n        />\n        <DuplicateOnKeydownButton\n          buttonFocusId={textAreaId}\n          buttonHotkey={toggleTreeShortcut.hotkey}\n          onButtonClick={onToggleExpanded}\n          onlyAddHotkeyScopeButton={true}\n        />\n      </>\n    )\n  },\n)\n\nExpandFileTreeButton.displayName = 'ExpandFileTreeButton'\n","import {DuplicateOnKeydownButton} from '@github-ui/code-view-shared/components/DuplicateOnKeydownButton'\nimport {useShortcut} from '@github-ui/code-view-shared/hooks/shortcuts'\nimport {useReposAnalytics} from '@github-ui/code-view-shared/hooks/use-repos-analytics'\nimport type React from 'react'\n\nexport function FindFilesShortcut({\n  inputRef,\n  onFindFilesShortcut,\n  textAreaId,\n}: {\n  inputRef: React.RefObject<HTMLInputElement> | null\n  onFindFilesShortcut?: () => void\n  textAreaId: string\n}) {\n  const {sendRepoKeyDownEvent} = useReposAnalytics()\n  const {findFilesShortcut} = useShortcut()\n\n  return (\n    <DuplicateOnKeydownButton\n      buttonFocusId={textAreaId}\n      buttonHotkey={findFilesShortcut.hotkey}\n      onButtonClick={() => {\n        onFindFilesShortcut?.()\n        inputRef?.current?.focus()\n        sendRepoKeyDownEvent('GO_TO_FILE')\n      }}\n    />\n  )\n}\n\ntry{ FindFilesShortcut.displayName ||= 'FindFilesShortcut' } catch {}","import type {DirectoryItem} from '@github-ui/code-view-types'\nimport {createContext, useContext} from 'react'\n\nimport type {TreeItem} from '../types/tree-item'\n\ntype FileTreeContextType = {\n  knownFolders: Map<string, TreeItem<DirectoryItem>>\n  dispatchKnownFolders: dispatchKnownFoldersFunction\n}\n\nconst FileTreeContext = createContext<FileTreeContextType>({\n  knownFolders: new Map<string, TreeItem<DirectoryItem>>(),\n\n  dispatchKnownFolders: () => {},\n})\n\nexport default FileTreeContext\n\nexport function useFileTreeContext() {\n  return useContext(FileTreeContext)\n}\n\nexport type dispatchKnownFoldersFunction = React.Dispatch<{\n  type: string\n  folders: Map<string, TreeItem<DirectoryItem>>\n  processingTime: number\n}>\n\ntry{ FileTreeContext.displayName ||= 'FileTreeContext' } catch {}","import {\n  createContext,\n  type MutableRefObject,\n  type PropsWithChildren,\n  useCallback,\n  useContext,\n  useMemo,\n  useRef,\n} from 'react'\n\ntype FileTreeControlContextType = {\n  expandAllFolders?: MutableRefObject<boolean>\n  refreshTree?: MutableRefObject<boolean>\n  shouldFetchFolders?: MutableRefObject<boolean>\n  setExpandAllFolders?: (value: boolean) => void\n  setRefreshTree?: (value: boolean) => void\n  setShouldFetchFolders?: (value: boolean) => void\n}\n\nconst FileTreeControlContext = createContext<FileTreeControlContextType>({})\n\nexport function FileTreeControlProvider({children}: PropsWithChildren) {\n  const expandAllFolders = useRef(false)\n  const refreshTree = useRef(false)\n  const shouldFetchFolders = useRef(true)\n  const setExpandAllFolders = useCallback((value: boolean) => {\n    expandAllFolders.current = value\n  }, [])\n\n  const setRefreshTree = useCallback((value: boolean) => {\n    refreshTree.current = value\n  }, [])\n\n  const setShouldFetchFolders = useCallback((value: boolean) => {\n    shouldFetchFolders.current = value\n  }, [])\n\n  const value = useMemo(\n    () => ({\n      expandAllFolders,\n      refreshTree,\n      shouldFetchFolders,\n      setExpandAllFolders,\n      setRefreshTree,\n      setShouldFetchFolders,\n    }),\n    [setExpandAllFolders, setRefreshTree, setShouldFetchFolders],\n  )\n  return <FileTreeControlContext.Provider value={value}>{children}</FileTreeControlContext.Provider>\n}\n\nexport function useFileTreeControlContext() {\n  return useContext(FileTreeControlContext)\n}\n\ntry{ FileTreeControlContext.displayName ||= 'FileTreeControlContext' } catch {}\ntry{ FileTreeControlProvider.displayName ||= 'FileTreeControlProvider' } catch {}","import type {DirectoryItem} from '@github-ui/code-view-types'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {useSafeTimeout} from '@primer/react'\nimport React from 'react'\n\nimport type {dispatchKnownFoldersFunction} from '../contexts/FileTreeContext'\nimport type {TreeItem} from '../types/tree-item'\n\ntype FetchFolderResult = [\n  (clientOnlyFilePaths?: string[]) => Promise<void>,\n  (folderItems?: Array<TreeItem<DirectoryItem>>, newTotalCount?: number) => void,\n  Array<TreeItem<DirectoryItem>>,\n  boolean,\n  boolean,\n  () => void,\n  number,\n]\n\n/**\n * Given a list of file paths that only exist on the client, returns a list of TreeItem<DirectoryItem> objects that represent\n * the client-only files and directories.\n */\nfunction getClientItemsToInsert(\n  currentPath: string,\n  clientOnlyFilePaths: string[],\n  existingItems?: DirectoryItem[],\n): Array<TreeItem<DirectoryItem>> {\n  const clientOnlyItemsToInsert: Array<TreeItem<DirectoryItem>> = []\n  for (const filePath of clientOnlyFilePaths) {\n    if (filePath.startsWith(currentPath)) {\n      const relativePath = filePath.slice(currentPath.length + 1)\n      const nextDirectoryIndex = relativePath.indexOf('/')\n      const name = nextDirectoryIndex > 0 ? relativePath.slice(0, nextDirectoryIndex) : relativePath\n      const path = `${currentPath}/${name}`\n      if (existingItems && existingItems.some(item => item.path === path)) {\n        continue\n      }\n\n      const clientOnlyItem: TreeItem<DirectoryItem> = {\n        items: [],\n        data: {\n          contentType: path === filePath ? 'file' : 'directory',\n          name,\n          path,\n          isClientOnly: true,\n        },\n      }\n\n      clientOnlyItemsToInsert.push(clientOnlyItem)\n    }\n  }\n\n  return clientOnlyItemsToInsert\n}\n\nexport default function useFetchFolder(\n  directory: TreeItem<DirectoryItem>,\n  dispatchKnownFolders: dispatchKnownFoldersFunction,\n  getItemUrl: (item: DirectoryItem) => string,\n): FetchFolderResult {\n  const [items, setItems] = React.useState<Array<TreeItem<DirectoryItem>>>(directory.items)\n  const [totalCount, setTotalCount] = React.useState<number>(directory.data.totalCount || 0)\n  const [loading, setLoading] = React.useState<boolean>(false)\n  const [error, setError] = React.useState<boolean>(false)\n  const {safeSetTimeout} = useSafeTimeout()\n\n  React.useEffect(() => {\n    setItems(directory.items)\n  }, [directory.items])\n\n  React.useEffect(() => {\n    directory.data.totalCount !== undefined && setTotalCount(directory.data.totalCount)\n  }, [directory.data.totalCount])\n\n  const clearError = React.useCallback(() => {\n    setError(false)\n  }, [])\n\n  const incrementallyShowItems = React.useCallback(\n    (folderItems?: Array<TreeItem<DirectoryItem>>, newTotalCount?: number) => {\n      const newItems = folderItems || [...items]\n      setItems(newItems.slice(0, 100))\n      safeSetTimeout(() => {\n        setItems(newItems)\n        if (newTotalCount !== undefined) {\n          setTotalCount(newTotalCount)\n        }\n      }, 1)\n    },\n    [items, safeSetTimeout],\n  )\n\n  const fetchFolder = React.useCallback(\n    async (clientOnlyFilePaths?: string[]) => {\n      const newKnownFolders = new Map()\n      if (!directory.data.isClientOnly) {\n        const contentUrl = getItemUrl(directory.data)\n        setError(false)\n        setLoading(true)\n        const start = Date.now()\n        const response = await verifiedFetchJSON(`${contentUrl}?noancestors=1`)\n        try {\n          if (response.ok) {\n            const folderPayload = await response.json()\n            const folderItems = folderPayload.payload.tree.items.map((payloadItem: DirectoryItem) => {\n              const treeItem = {\n                items: [],\n                data: {...payloadItem},\n                autoExpand: payloadItem.contentType === 'directory' && folderPayload.payload.tree.items.length === 1,\n              }\n              newKnownFolders.set(payloadItem.path, treeItem)\n              if (payloadItem.hasSimplifiedPath) {\n                const topTreeItem = splitSimplifiedTreeItem(treeItem, payloadItem, newKnownFolders)\n                return topTreeItem\n              }\n              return treeItem\n            })\n\n            if (clientOnlyFilePaths) {\n              const currentPath = directory.data.path\n              const clientOnlyItemsToInsert = getClientItemsToInsert(\n                currentPath,\n                clientOnlyFilePaths,\n                folderPayload.payload.tree.items,\n              )\n\n              folderItems.push(...clientOnlyItemsToInsert)\n\n              for (const item of clientOnlyItemsToInsert) {\n                newKnownFolders.set(item.data.path, item)\n              }\n            }\n\n            dispatchKnownFolders({\n              type: 'add',\n              folders: newKnownFolders,\n              processingTime: Date.now() - start,\n            })\n            directory.items = folderItems\n            directory.data.totalCount = folderPayload.payload.tree.totalCount\n            if (folderItems.length > 100) {\n              incrementallyShowItems(folderItems, folderPayload.payload.tree.totalCount)\n            } else {\n              setItems(folderItems)\n              setTotalCount(folderPayload.payload.tree.totalCount)\n            }\n          } else {\n            setError(true)\n          }\n        } catch {\n          setError(true)\n        }\n      } else if (clientOnlyFilePaths) {\n        const currentPath = directory.data.path\n        const clientOnlyItemsToInsert = getClientItemsToInsert(currentPath, clientOnlyFilePaths)\n        for (const item of clientOnlyItemsToInsert) {\n          newKnownFolders.set(item.data.path, item)\n        }\n\n        dispatchKnownFolders({\n          type: 'add',\n          folders: newKnownFolders,\n          processingTime: 0,\n        })\n\n        if (clientOnlyItemsToInsert.length > 100) {\n          incrementallyShowItems(clientOnlyItemsToInsert, clientOnlyItemsToInsert.length)\n        } else {\n          setItems(clientOnlyItemsToInsert)\n          setTotalCount(clientOnlyItemsToInsert.length)\n        }\n      }\n\n      setLoading(false)\n    },\n    [getItemUrl, directory, dispatchKnownFolders, incrementallyShowItems],\n  )\n\n  return [fetchFolder, incrementallyShowItems, items, loading, error, clearError, totalCount]\n}\n\nexport function splitSimplifiedTreeItem(\n  treeItem: TreeItem<DirectoryItem>,\n  payloadItem: DirectoryItem,\n  knownFolders: Map<string, TreeItem<DirectoryItem>>,\n): TreeItem<DirectoryItem> {\n  treeItem.data.name = treeItem.data.name.slice(treeItem.data.name.lastIndexOf('/') + 1, treeItem.data.name.length)\n  const topItemName = payloadItem.name.slice(0, payloadItem.name.lastIndexOf('/'))\n  const hasSimplifiedPath = topItemName.indexOf('/') > -1\n  const topItem = {\n    path: payloadItem.path.slice(0, payloadItem.path.lastIndexOf('/')),\n    contentType: payloadItem.contentType,\n    name: topItemName,\n    hasSimplifiedPath,\n  }\n  const topTreeItem = {\n    items: [treeItem],\n    data: topItem,\n  }\n  knownFolders.set(topItem.path, topTreeItem)\n  if (hasSimplifiedPath) {\n    return splitSimplifiedTreeItem(topTreeItem, {...topItem}, knownFolders)\n  } else {\n    return topTreeItem\n  }\n}\n","import {useFilesPageInfo} from '@github-ui/code-view-shared/contexts/FilesPageInfoContext'\nimport {useReposAnalytics} from '@github-ui/code-view-shared/hooks/use-repos-analytics'\nimport {useUrlCreator} from '@github-ui/code-view-shared/hooks/use-url-creator'\nimport type {DirectoryItem, ReposFileTreeData} from '@github-ui/code-view-types'\nimport {PortalTooltip} from '@github-ui/portal-tooltip/portalled'\nimport {useFileTreeTooltip} from '@github-ui/use-file-tree-tooltip'\nimport {useNavigate} from '@github-ui/use-navigate'\nimport {AlertFillIcon, FileIcon, FileSubmoduleIcon} from '@primer/octicons-react'\nimport {Box, Octicon, Spinner, type SxProp, TreeView} from '@primer/react'\nimport React, {useEffect, useState} from 'react'\nimport type {NavigateOptions, To} from 'react-router-dom'\n\nimport {type dispatchKnownFoldersFunction, useFileTreeContext} from '../contexts/FileTreeContext'\nimport {useFileTreeControlContext} from '../contexts/FileTreeControlContext'\nimport useFetchFolder, {splitSimplifiedTreeItem} from '../hooks/use-fetch-folder'\nimport type {TreeItem} from '../types/tree-item'\n\nexport function buildReposFileTree(\n  folders: ReposFileTreeData,\n  knownFolders: Map<string, TreeItem<DirectoryItem>>,\n  rootItems: Array<TreeItem<DirectoryItem>>,\n  sortDirectoryItems?: (items: Array<TreeItem<DirectoryItem>>) => void,\n) {\n  if (!folders) return {newRootItems: rootItems, rootItemsUpdated: false}\n  const rootItemsUpdated = folders[''] ? addFolder('', knownFolders, rootItems, folders[''].items) : false\n  sortDirectoryItems?.(rootItems)\n  for (const path of Object.keys(folders).sort()) {\n    if (path) {\n      const parent = knownFolders.get(path)\n      if (parent) {\n        addFolder(path, knownFolders, parent.items, folders[path]!.items, sortDirectoryItems)\n        parent.data.totalCount = folders[path]!.totalCount\n      }\n    }\n  }\n  return {newRootItems: rootItems, rootItemsUpdated}\n}\n\nfunction addFolder(\n  path: string,\n  knownFolders: Map<string, TreeItem<DirectoryItem>>,\n  parentItems: Array<TreeItem<DirectoryItem>>,\n  items: DirectoryItem[],\n  sortDirectoryItems?: (items: Array<TreeItem<DirectoryItem>>) => void,\n) {\n  let parentItemsUpdated = false\n  for (const item of items) {\n    const fullPath = path ? `${path}/${item.name}` : item.name\n    if (!knownFolders.get(fullPath)) {\n      const treeItem: TreeItem<DirectoryItem> = {items: [], data: {...item}}\n      knownFolders.set(fullPath, treeItem)\n      if (item.hasSimplifiedPath) {\n        const topTreeItem = splitSimplifiedTreeItem(treeItem, item, knownFolders)\n        const existingItemIndex = parentItems.findIndex(parentItem => parentItem.data.path === topTreeItem.data.path)\n        if (existingItemIndex !== -1) {\n          if (topTreeItem.items.length > parentItems[existingItemIndex]!.items.length) {\n            parentItems[existingItemIndex] = topTreeItem\n            parentItemsUpdated = true\n          }\n        } else {\n          parentItems.push(topTreeItem)\n          sortDirectoryItems?.(parentItems)\n        }\n      } else {\n        parentItems.push(treeItem)\n        sortDirectoryItems?.(parentItems)\n      }\n    }\n  }\n  return parentItemsUpdated\n}\n\ninterface CommonProps {\n  clientOnlyFilePaths?: string[]\n  getItemUrl: (item: DirectoryItem) => string\n  onItemSelected?(): void\n  onRenderRow?(): void\n  selectedItemRef?: React.Ref<HTMLElement>\n  getFileTrailingVisual?: (item: DirectoryItem) =>\n    | {\n        trailingVisual: JSX.Element\n        screenReaderText?: string\n      }\n    | undefined\n  getFileIcon?: (item: DirectoryItem) => JSX.Element | null\n}\n\ninterface ReposFileTreeViewProps extends CommonProps, SxProp {\n  data: ReposFileTreeData\n  rootItems: Array<TreeItem<DirectoryItem>>\n  setRootItems: (rootItems: Array<TreeItem<DirectoryItem>>) => void\n  processingTime: number\n  loading: boolean\n  fetchError: boolean\n  directoryNavigateOnClick?: boolean\n  sortDirectoryItems?: (items: Array<TreeItem<DirectoryItem>>) => void\n}\n\ninterface FileTreeRowProps extends CommonProps {\n  isActive: boolean\n  file: TreeItem<DirectoryItem>\n  navigate: (to: To, options?: NavigateOptions) => void\n}\n\ninterface DirectoryTreeRowProps extends CommonProps {\n  directory: TreeItem<DirectoryItem>\n  depth?: number\n  isActive: boolean\n  isAncestorOfActive: boolean\n  leadingPath?: string\n  dispatchKnownFolders: dispatchKnownFoldersFunction\n  navigate: (to: To, options?: NavigateOptions) => void\n  navigateOnClick?: boolean\n  getFetchUrl: (item: DirectoryItem) => string\n}\n\ninterface DirectoryContentsProps extends CommonProps {\n  directoryItems: Array<TreeItem<DirectoryItem>>\n  leadingPath?: string\n  inheritsActive?: boolean\n  dispatchKnownFolders: dispatchKnownFoldersFunction\n  directoryNavigateOnClick?: boolean\n}\n\nfunction WrappedFileTreeRow({\n  isActive,\n  file,\n  onItemSelected,\n  getItemUrl,\n  selectedItemRef,\n  navigate,\n  onRenderRow,\n  getFileTrailingVisual,\n  getFileIcon,\n}: FileTreeRowProps) {\n  const {sendRepoClickEvent} = useReposAnalytics()\n  const rowRef = React.useRef<HTMLElement>(null)\n  const showTooltip = useFileTreeTooltip({focusRowRef: rowRef, mouseRowRef: rowRef})\n  const isSubModule = file.data.contentType === 'submodule'\n  const trailingVisualData = getFileTrailingVisual?.(file.data)\n\n  const onSelect = React.useCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLElement>) => {\n      if (isSubModule) {\n        e.preventDefault()\n        if (file.data.submoduleUrl) {\n          window.location.href = file.data.submoduleUrl\n        }\n      } else {\n        // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n        if (e.metaKey || e.ctrlKey || (e as React.MouseEvent<HTMLElement, MouseEvent>).button === 1) {\n          window.open(getItemUrl(file.data), '_blank')\n          e.preventDefault()\n        } else if (isActive) {\n          e.preventDefault()\n        } else {\n          onItemSelected?.()\n          sendRepoClickEvent('FILES_TREE.ITEM', {['item_path']: file.data.path})\n          navigate(getItemUrl(file.data))\n          e.stopPropagation()\n        }\n      }\n    },\n    [file.data, getItemUrl, isActive, isSubModule, navigate, onItemSelected, sendRepoClickEvent],\n  )\n\n  onRenderRow?.()\n\n  // TODO: ideally we would pass as={Link} to the LinkItem if Primer supported it.\n  return (\n    <TreeView.Item\n      ref={rowRef}\n      onSelect={onSelect}\n      current={isActive}\n      id={`${file.data.path}-item`}\n      containIntrinsicSize={!isActive ? 'auto 2rem' : undefined}\n    >\n      <TreeView.LeadingVisual>\n        {getFileIcon ? getFileIcon(file.data) : isSubModule ? <FileSubmoduleIcon /> : <FileIcon />}\n      </TreeView.LeadingVisual>\n      <>\n        <span\n          ref={selectedItemRef}\n          style={{color: isSubModule ? 'var(--fgColor-accent, var(--color-accent-fg))' : undefined}}\n        >\n          {file.data.name}\n        </span>\n        {showTooltip && (\n          <PortalTooltip\n            data-testid={`${file.data.name}-item-tooltip`}\n            id={`${file.data.name}-item-tooltip`}\n            contentRef={rowRef}\n            aria-label={file.data.name}\n            open={true}\n            direction=\"ne\"\n          />\n        )}\n      </>\n      {!!trailingVisualData?.screenReaderText && <span className=\"sr-only\">{trailingVisualData.screenReaderText}</span>}\n      {!!trailingVisualData?.trailingVisual && (\n        <TreeView.TrailingVisual>{trailingVisualData.trailingVisual}</TreeView.TrailingVisual>\n      )}\n    </TreeView.Item>\n  )\n}\n\nexport const FileTreeRow = React.memo(WrappedFileTreeRow)\n\nexport function WrappedDirectoryTreeRow({\n  clientOnlyFilePaths,\n  directory,\n  isActive,\n  isAncestorOfActive,\n  leadingPath = '',\n  onItemSelected,\n  dispatchKnownFolders,\n  getItemUrl,\n  getFetchUrl,\n  selectedItemRef,\n  navigate,\n  onRenderRow,\n  getFileTrailingVisual,\n  getFileIcon,\n  navigateOnClick = true,\n}: DirectoryTreeRowProps): JSX.Element {\n  const {expandAllFolders, shouldFetchFolders} = useFileTreeControlContext()\n  const [isExpanded, setExpanded] = useState(expandAllFolders?.current || isAncestorOfActive)\n  const {sendRepoClickEvent} = useReposAnalytics()\n  const rowRef = React.useRef<HTMLElement | null>(null)\n  const listItemRef = React.useRef<HTMLElement>(null)\n  const showTooltip = useFileTreeTooltip({focusRowRef: listItemRef, mouseRowRef: rowRef})\n\n  const [fetchFolder, incrementallyShowItems, items, loading, error, clearError, totalCount] = useFetchFolder(\n    directory,\n    dispatchKnownFolders,\n    getFetchUrl,\n  )\n  const truncatedRows = totalCount - items.length\n  const pathPrefix = leadingPath ? `${leadingPath}/` : ''\n\n  useEffect(() => {\n    if (expandAllFolders?.current && !isExpanded) {\n      setExpanded(true)\n    }\n  }, [directory, expandAllFolders, isExpanded])\n\n  const onToggleExpanded = React.useCallback(\n    (expanded: boolean) => {\n      if (expandAllFolders?.current) {\n        expandAllFolders.current = false\n      }\n      const willExpand = expanded && !isExpanded\n      if (willExpand && !loading && !error) {\n        if (directory.items.length > 100) {\n          incrementallyShowItems()\n        } else if (\n          directory.items.length === 0 &&\n          !isActive &&\n          !isAncestorOfActive &&\n          shouldFetchFolders?.current !== false\n        ) {\n          fetchFolder(clientOnlyFilePaths)\n        }\n      }\n      if (expanded !== isExpanded) {\n        setExpanded(expanded)\n      }\n    },\n    [\n      expandAllFolders,\n      isExpanded,\n      loading,\n      error,\n      directory.items.length,\n      isActive,\n      isAncestorOfActive,\n      shouldFetchFolders,\n      incrementallyShowItems,\n      fetchFolder,\n      clientOnlyFilePaths,\n    ],\n  )\n\n  const onClick = React.useCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLElement>) => {\n      if (\n        // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n        e.metaKey ||\n        // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n        e.ctrlKey ||\n        ((e as React.MouseEvent<HTMLElement, MouseEvent>).button === 1 && navigateOnClick)\n      ) {\n        window.open(getItemUrl(directory.data), '_blank')\n        e.preventDefault()\n      } else if (isActive) {\n        e.preventDefault()\n      } else {\n        onItemSelected?.()\n        sendRepoClickEvent('FILES_TREE.ITEM', {['item_path']: directory.data.path})\n        if (navigateOnClick) {\n          navigate(getItemUrl(directory.data))\n        } else {\n          onToggleExpanded?.(!isExpanded)\n        }\n        e.stopPropagation()\n      }\n    },\n    [\n      directory.data,\n      getItemUrl,\n      isActive,\n      isExpanded,\n      navigate,\n      navigateOnClick,\n      onItemSelected,\n      onToggleExpanded,\n      sendRepoClickEvent,\n    ],\n  )\n\n  // Expand when becoming active, or being an ancestor of the active path\n  React.useEffect(() => {\n    if (isAncestorOfActive && !isExpanded) {\n      onToggleExpanded?.(true)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- We don't want to reevaluate when isExpanded changes\n  }, [isAncestorOfActive])\n\n  // Collapse when all items have been removed.\n  React.useEffect(() => {\n    if (directory.items.length === 0 && isExpanded) {\n      onToggleExpanded?.(false)\n    } else if (!isExpanded && directory.autoExpand) {\n      onToggleExpanded?.(true)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- We don't want to reevaluate when isExpanded changes\n  }, [directory.items.length])\n\n  const setRowRef = React.useCallback(\n    (refElem: HTMLElement) => {\n      if (selectedItemRef && isActive) {\n        ;(selectedItemRef as (item: HTMLElement) => void)(refElem)\n      }\n      rowRef.current = refElem\n    },\n    [selectedItemRef, isActive],\n  )\n\n  // combine this directory with its child if it has no files and only one child directory\n  if (directory.items.length === 1 && directory.items[0]!.data.contentType === 'directory') {\n    return (\n      <DirectoryContents\n        clientOnlyFilePaths={clientOnlyFilePaths}\n        directoryItems={directory.items}\n        leadingPath={pathPrefix + directory.data.name}\n        inheritsActive={isActive}\n        dispatchKnownFolders={dispatchKnownFolders}\n        onItemSelected={onItemSelected}\n        selectedItemRef={selectedItemRef}\n        getItemUrl={getItemUrl}\n        directoryNavigateOnClick={navigateOnClick}\n        getFileTrailingVisual={getFileTrailingVisual}\n        getFileIcon={getFileIcon}\n      />\n    )\n  }\n\n  onRenderRow?.()\n\n  return (\n    <TreeView.Item\n      ref={listItemRef}\n      expanded={isExpanded}\n      onExpandedChange={onToggleExpanded}\n      current={isActive}\n      onSelect={onClick}\n      id={`${directory.data.path}-item`}\n      containIntrinsicSize={!isActive ? 'auto 2rem' : undefined}\n    >\n      <TreeView.LeadingVisual>\n        <TreeView.DirectoryIcon />\n      </TreeView.LeadingVisual>\n      <>\n        <span ref={setRowRef}>\n          {pathPrefix}\n          {directory.data.name}\n        </span>\n        {showTooltip && (\n          <PortalTooltip\n            data-testid={`${directory.data.name}-directory-item-tooltip`}\n            id={`${directory.data.name}-directory-item-tooltip`}\n            contentRef={listItemRef}\n            aria-label={`${pathPrefix}${directory.data.name}`}\n            open={true}\n            direction=\"ne\"\n          />\n        )}\n      </>\n\n      <TreeView.SubTree state={loading ? 'loading' : error ? 'error' : 'done'}>\n        {error ? (\n          <TreeView.ErrorDialog onRetry={fetchFolder} onDismiss={clearError}>\n            There was an error loading the folder contents.\n          </TreeView.ErrorDialog>\n        ) : (\n          <>\n            <DirectoryContents\n              clientOnlyFilePaths={clientOnlyFilePaths}\n              directoryItems={items}\n              dispatchKnownFolders={dispatchKnownFolders}\n              onItemSelected={onItemSelected}\n              selectedItemRef={selectedItemRef}\n              getItemUrl={getItemUrl}\n              directoryNavigateOnClick={navigateOnClick}\n              getFileTrailingVisual={getFileTrailingVisual}\n              getFileIcon={getFileIcon}\n            />\n            {truncatedRows > 0 && <ErrorTreeRow message={`${truncatedRows} entries not shown`} />}\n          </>\n        )}\n      </TreeView.SubTree>\n    </TreeView.Item>\n  )\n}\n\nconst DirectoryTreeRow = React.memo(WrappedDirectoryTreeRow)\n\nfunction WrappedDirectoryContents({\n  clientOnlyFilePaths,\n  directoryItems,\n  leadingPath,\n  inheritsActive,\n  onItemSelected,\n  dispatchKnownFolders,\n  selectedItemRef,\n  onRenderRow,\n  getItemUrl,\n  getFileTrailingVisual,\n  getFileIcon,\n  directoryNavigateOnClick = true,\n}: DirectoryContentsProps): JSX.Element {\n  const {path} = useFilesPageInfo()\n  const urlCreator = useUrlCreator()\n  const navigate = useNavigate()\n  // This prevents rerenders on soft navs, but may not be entirely safe. If the routes or history change\n  // from the app context then we will not recalculate the function.\n  const navigateRef = React.useRef(navigate)\n\n  return (\n    <>\n      {directoryItems.map(item => {\n        const isActive: boolean = path === item.data.path\n        const isAncestorOfActive = isActive || path.startsWith(`${item.data.path}/`)\n        return item.data.contentType === 'directory' ? (\n          <DirectoryTreeRow\n            clientOnlyFilePaths={clientOnlyFilePaths}\n            isActive={inheritsActive || isActive}\n            isAncestorOfActive={isAncestorOfActive}\n            key={item.data.name}\n            onItemSelected={onItemSelected}\n            leadingPath={leadingPath}\n            directory={item}\n            dispatchKnownFolders={dispatchKnownFolders}\n            getItemUrl={getItemUrl}\n            getFetchUrl={urlCreator.getItemUrl}\n            selectedItemRef={isAncestorOfActive ? selectedItemRef : undefined}\n            navigate={navigateRef.current}\n            onRenderRow={onRenderRow}\n            navigateOnClick={directoryNavigateOnClick}\n            getFileTrailingVisual={getFileTrailingVisual}\n            getFileIcon={getFileIcon}\n          />\n        ) : (\n          <FileTreeRow\n            key={item.data.name}\n            onItemSelected={onItemSelected}\n            file={item}\n            isActive={isActive}\n            getItemUrl={getItemUrl}\n            selectedItemRef={isActive ? selectedItemRef : undefined}\n            navigate={navigateRef.current}\n            onRenderRow={onRenderRow}\n            getFileTrailingVisual={getFileTrailingVisual}\n            getFileIcon={getFileIcon}\n          />\n        )\n      })}\n    </>\n  )\n}\n\nconst DirectoryContents = React.memo(WrappedDirectoryContents)\n\nexport function ReposFileTreeView(props: ReposFileTreeViewProps) {\n  const {\n    clientOnlyFilePaths,\n    data,\n    rootItems,\n    setRootItems,\n    fetchError,\n    processingTime,\n    loading,\n    onRenderRow,\n    getItemUrl,\n    getFileTrailingVisual,\n    getFileIcon,\n    sortDirectoryItems,\n  } = props\n  const {knownFolders, dispatchKnownFolders} = useFileTreeContext()\n  const {refreshTree} = useFileTreeControlContext()\n\n  React.useEffect(() => {\n    if (loading) {\n      return\n    }\n    let newKnownFolders = new Map()\n    let newKnownRootItems: Array<TreeItem<DirectoryItem>> = []\n\n    if (!refreshTree?.current) {\n      newKnownFolders = new Map(knownFolders)\n      newKnownRootItems = rootItems.slice()\n    }\n\n    const {newRootItems, rootItemsUpdated} = buildReposFileTree(\n      data,\n      newKnownFolders,\n      newKnownRootItems,\n      sortDirectoryItems,\n    )\n    if (newRootItems.length > rootItems.length || rootItemsUpdated || refreshTree?.current) {\n      setRootItems(newRootItems)\n    }\n    if (newKnownFolders.size > knownFolders.size || refreshTree?.current) {\n      dispatchKnownFolders({type: 'set', folders: newKnownFolders, processingTime})\n    }\n\n    if (refreshTree?.current) {\n      refreshTree.current = false\n    }\n    // Only run when the data or loading props change to bring the known folders up to date.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, loading])\n\n  const onMouseDown = React.useCallback((event: React.MouseEvent) => {\n    // Prevent middle click from performing a scroll so it can activate the link.\n    if (event.button === 1) {\n      event.preventDefault()\n    }\n  }, [])\n\n  return (\n    <Box\n      onMouseDown={onMouseDown}\n      sx={{\n        px: 3,\n        pb: 2,\n        ...props.sx,\n      }}\n      data-testid=\"repos-file-tree-container\"\n    >\n      {loading ? (\n        <Box sx={{display: 'flex', justifyContent: 'center', p: 2}}>\n          <Spinner aria-label=\"Loading file tree\" />\n        </Box>\n      ) : (\n        <nav aria-label=\"File Tree Navigation\">\n          <TreeView aria-label=\"Files\">\n            {fetchError && <ErrorTreeRow message=\"Some files could not be loaded.\" />}\n            <DirectoryContents\n              clientOnlyFilePaths={clientOnlyFilePaths}\n              directoryItems={rootItems}\n              onItemSelected={props.onItemSelected}\n              dispatchKnownFolders={dispatchKnownFolders}\n              selectedItemRef={props.selectedItemRef}\n              onRenderRow={onRenderRow}\n              directoryNavigateOnClick={props.directoryNavigateOnClick}\n              getItemUrl={getItemUrl}\n              getFileTrailingVisual={getFileTrailingVisual}\n              getFileIcon={getFileIcon}\n            />\n          </TreeView>\n        </nav>\n      )}\n    </Box>\n  )\n}\n\nfunction ErrorTreeRow({message}: {message?: string}) {\n  const errorMessage = message || \"Couldn't load.\"\n  return (\n    <TreeView.Item id=\"error-tree-row\">\n      <TreeView.LeadingVisual>\n        <Octicon icon={AlertFillIcon} sx={{color: 'attention.fg'}} />\n      </TreeView.LeadingVisual>\n      <Box sx={{color: 'fg.muted'}}>{errorMessage}</Box>\n    </TreeView.Item>\n  )\n}\n\ntry{ WrappedFileTreeRow.displayName ||= 'WrappedFileTreeRow' } catch {}\ntry{ FileTreeRow.displayName ||= 'FileTreeRow' } catch {}\ntry{ WrappedDirectoryTreeRow.displayName ||= 'WrappedDirectoryTreeRow' } catch {}\ntry{ DirectoryTreeRow.displayName ||= 'DirectoryTreeRow' } catch {}\ntry{ WrappedDirectoryContents.displayName ||= 'WrappedDirectoryContents' } catch {}\ntry{ DirectoryContents.displayName ||= 'DirectoryContents' } catch {}\ntry{ ReposFileTreeView.displayName ||= 'ReposFileTreeView' } catch {}\ntry{ ErrorTreeRow.displayName ||= 'ErrorTreeRow' } catch {}","import {appendAndFocusSearchBar} from '@github-ui/append-and-focus-search-bar'\nimport {DuplicateOnKeydownButton} from '@github-ui/code-view-shared/components/DuplicateOnKeydownButton'\nimport {useShortcut} from '@github-ui/code-view-shared/hooks/shortcuts'\nimport {SearchIcon} from '@primer/octicons-react'\nimport {IconButton} from '@primer/react'\nimport type {BetterSystemStyleObject} from '@primer/react/lib-esm/sx'\nimport type React from 'react'\n\nexport default function SearchButton({\n  sx,\n  onClick,\n  textAreaId,\n}: {\n  sx?: BetterSystemStyleObject\n  onClick?: () => void\n  textAreaId: string\n}) {\n  const {searchShortcut} = useShortcut()\n  return (\n    <>\n      {/* eslint-disable-next-line primer-react/a11y-remove-disable-tooltip */}\n      <IconButton\n        unsafeDisableTooltip={true}\n        aria-label=\"Search this repository\"\n        icon={SearchIcon}\n        data-hotkey={searchShortcut.hotkey}\n        sx={{color: 'fg.subtle', fontSize: 14, fontWeight: 'normal', flexShrink: 0, ...sx}}\n        size=\"medium\"\n        onClick={(e: React.MouseEvent) => {\n          onClick?.()\n          appendAndFocusSearchBar({\n            retainScrollPosition: true,\n            returnTarget: (e.target as HTMLElement).closest('button') as HTMLElement,\n          })\n        }}\n      />\n\n      <DuplicateOnKeydownButton\n        buttonFocusId={textAreaId}\n        buttonHotkey={searchShortcut.hotkey}\n        onButtonClick={() => {\n          const textArea = document.getElementById(textAreaId)\n          onClick?.()\n          appendAndFocusSearchBar({\n            retainScrollPosition: true,\n            returnTarget: textArea ?? undefined,\n          })\n        }}\n        onlyAddHotkeyScopeButton={true}\n      />\n    </>\n  )\n}\n\ntry{ SearchButton.displayName ||= 'SearchButton' } catch {}","import FileResultsList from '@github-ui/code-view-shared/components/files-search/FileResultsList'\nimport {ReposHeaderRefSelector} from '@github-ui/code-view-shared/components/ReposHeaderRefSelector'\nimport {useFileQueryContext} from '@github-ui/code-view-shared/contexts/FileQueryContext'\nimport {useOpenPanel} from '@github-ui/code-view-shared/contexts/OpenPanelContext'\nimport {useUrlCreator} from '@github-ui/code-view-shared/hooks/use-url-creator'\nimport type {CollapseTreeFunction, DirectoryItem, ReposFileTreeData} from '@github-ui/code-view-types'\nimport type {Repository} from '@github-ui/current-repository'\nimport {sendEvent} from '@github-ui/hydro-analytics'\nimport {repositoryTreePath} from '@github-ui/paths'\nimport {Link} from '@github-ui/react-core/link'\nimport type {RefInfo} from '@github-ui/repos-types'\nimport {ScreenSize, useScreenSize} from '@github-ui/screen-size'\nimport {useClientValue} from '@github-ui/use-client-value'\nimport {useCodeViewOptions} from '@github-ui/use-code-view-options'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {scrollIntoView} from '@primer/behaviors'\nimport {AlertFillIcon, PlusIcon} from '@primer/octicons-react'\nimport {Box, IconButton, Octicon, Overlay, SplitPageLayout, Tooltip} from '@primer/react'\nimport type {BetterSystemStyleObject} from '@primer/react/lib-esm/sx'\nimport React, {useMemo} from 'react'\nimport {createHtmlPortalNode, InPortal, OutPortal} from 'react-reverse-portal'\n\nimport FileTreeContext from '../contexts/FileTreeContext'\nimport type {TreeItem} from '../types/tree-item'\nimport {FindFilesShortcut} from './FindFilesShortcut'\nimport {buildReposFileTree, ReposFileTreeView} from './ReposFileTreeView'\nimport SearchButton from './SearchButton'\n\nexport const TreeOverlayBreakpoint = ScreenSize.xxxlarge\n\nexport function ReposFileTreePane({\n  clientOnlyFilePaths,\n  collapseTree,\n  showTree,\n  fileTree,\n  treeToggleElement,\n  treeToggleRef,\n  onItemSelected,\n  processingTime,\n  searchBoxRef,\n  repo,\n  path,\n  refInfo,\n  isFilePath,\n  foldersToFetch,\n  id,\n  onFindFilesShortcut,\n  textAreaId,\n  getItemUrlOverride,\n  headerSx,\n  paneSx,\n  paneContentsSx,\n  treeContainerSx,\n  findFileWorkerPath,\n  headerContent,\n  getFileTrailingVisual,\n  getFileIcon,\n  sortDirectoryItems,\n  showFindFile = true,\n  directoryNavigateOnClick = true,\n  showRefSelectorRow = true,\n}: {\n  clientOnlyFilePaths?: string[]\n  collapseTree: CollapseTreeFunction\n  showTree: boolean\n  fileTree: ReposFileTreeData\n  onItemSelected: () => void\n  processingTime: number\n  treeToggleElement?: JSX.Element\n  treeToggleRef: React.RefObject<HTMLButtonElement>\n  searchBoxRef: React.RefObject<HTMLInputElement>\n  repo: Repository\n  path: string\n  refInfo: RefInfo\n  isFilePath: boolean\n  foldersToFetch: string[]\n  id: string\n  onFindFilesShortcut: () => void\n  textAreaId: string\n  getItemUrlOverride?: (item: DirectoryItem) => string\n  sortDirectoryItems?: (items: Array<TreeItem<DirectoryItem>>) => void\n  headerSx?: BetterSystemStyleObject\n  paneSx?: BetterSystemStyleObject\n  paneContentsSx?: BetterSystemStyleObject\n  treeContainerSx?: BetterSystemStyleObject\n  findFileWorkerPath?: string\n  headerContent?: JSX.Element\n  getFileTrailingVisual?: (item: DirectoryItem) =>\n    | {\n        trailingVisual: JSX.Element\n        screenReaderText?: string\n      }\n    | undefined\n  getFileIcon?: (item: DirectoryItem) => JSX.Element | null\n  showFindFile?: boolean\n  directoryNavigateOnClick?: boolean\n  showRefSelectorRow?: boolean\n}) {\n  if (showFindFile && findFileWorkerPath === undefined) {\n    throw new Error('findFileWorkerPath must be provided when showFindFile is true')\n  }\n\n  const {openPanel} = useOpenPanel()\n  const [treeLoading, setTreeLoading] = React.useState(foldersToFetch.length > 0)\n  const [fetchError, setFetchError] = React.useState(false)\n  const fetchedFolders = React.useRef<string[]>([])\n  const scrollingRef = React.useRef<HTMLDivElement | null>(null)\n  const hasAttemptedToFetchFolders = React.useRef(false)\n  const ignoreNextScroll = React.useRef(false)\n  const selectedElement = React.useRef<HTMLElement | null>(null)\n  const {query} = useFileQueryContext()\n  const {codeCenterOption} = useCodeViewOptions()\n  const lastOpenPanel = React.useRef(openPanel)\n  const [isSSR] = useClientValue(() => false, true, [])\n  const {getItemUrl} = useUrlCreator()\n  const getTreeItemUrl = getItemUrlOverride || getItemUrl\n\n  let initialRenderRootItems: Array<TreeItem<DirectoryItem>> = []\n  const newKnownFolders = new Map<string, TreeItem<DirectoryItem>>()\n\n  const hasDoneInitialRender = React.useRef(treeLoading)\n  if (!hasDoneInitialRender.current && fileTree) {\n    const newKnownRootItems: Array<TreeItem<DirectoryItem>> = []\n    const resultingTree = buildReposFileTree(fileTree, newKnownFolders, newKnownRootItems, sortDirectoryItems)\n    initialRenderRootItems = resultingTree.newRootItems\n  }\n  hasDoneInitialRender.current = true\n  const [knownFolders, dispatchKnownFolders] = React.useReducer(knownFolderReducer, newKnownFolders)\n  const [rootItems, setRootItems] = React.useState<Array<TreeItem<DirectoryItem>>>(initialRenderRootItems)\n\n  React.useEffect(() => {\n    if (!showTree || !(!query || window.innerWidth >= ScreenSize.large)) {\n      selectedElement.current = null\n    }\n  }, [showTree, query])\n\n  React.useEffect(() => {\n    if (openPanel && lastOpenPanel.current !== openPanel && window.innerWidth < TreeOverlayBreakpoint) {\n      collapseTree({setCookie: false})\n    }\n    lastOpenPanel.current = openPanel\n  }, [collapseTree, openPanel])\n\n  const fetchFolder = React.useCallback(\n    async (folderPath: string) => {\n      const folder: DirectoryItem = {contentType: 'directory', path: folderPath, name: folderPath}\n      const contentUrl = getItemUrl(folder)\n      try {\n        const response = await verifiedFetchJSON(`${contentUrl}?noancestors=1`)\n        if (response.ok) {\n          const folderPayload = await response.json()\n          const folderData = {\n            items: folderPayload.payload.tree.items,\n            totalCount: folderPayload.payload.tree.totalCount,\n          }\n          fileTree[folderPath] = folderData\n        } else {\n          setFetchError(true)\n        }\n      } catch {\n        setFetchError(true)\n      }\n      fetchedFolders.current.push(folderPath)\n      if (fetchedFolders.current.length === foldersToFetch.length) {\n        setTreeLoading(false)\n      }\n    },\n    [fileTree, foldersToFetch.length, getItemUrl],\n  )\n\n  React.useEffect(() => {\n    if (foldersToFetch && !hasAttemptedToFetchFolders.current) {\n      for (const folder of foldersToFetch) {\n        fetchFolder(folder)\n      }\n    }\n    hasAttemptedToFetchFolders.current = true\n  }, [fetchFolder, foldersToFetch, knownFolders.size])\n\n  const focusActiveItem = React.useCallback(\n    (selectedItemElement: HTMLElement | null) => {\n      if (\n        showTree &&\n        (!query || window.innerWidth >= ScreenSize.large) &&\n        scrollingRef.current &&\n        selectedItemElement\n      ) {\n        // On becoming visible, the tree should scroll to the selected item\n        // Simulate \"block: center\" mode by adding an endMargin and startMargin of half the window height\n        scrollIntoView(selectedItemElement, scrollingRef.current, {\n          endMargin: window.innerHeight / 2,\n          startMargin: window.innerHeight / 2,\n          behavior: 'auto',\n        })\n      }\n    },\n    [query, showTree],\n  )\n\n  const setSelectedItemRef = React.useCallback(\n    (selectedItemElement: HTMLElement | null) => {\n      if (selectedItemElement && ignoreNextScroll.current) {\n        ignoreNextScroll.current = false\n      } else if (selectedElement.current !== selectedItemElement) {\n        focusActiveItem(selectedItemElement)\n      }\n      selectedElement.current = selectedItemElement\n    },\n    [focusActiveItem],\n  )\n\n  const setScrollingRef = React.useCallback(\n    (element: HTMLDivElement) => {\n      scrollingRef.current = element\n      const screenWidth = window.innerWidth\n      // When the tree is a pane, focus after the scrollable container renders.\n      if (screenWidth >= TreeOverlayBreakpoint) {\n        focusActiveItem(selectedElement.current)\n      }\n    },\n    [focusActiveItem],\n  )\n\n  const setOverlayRef = React.useCallback(\n    (element: HTMLDivElement) => {\n      // When the tree is in an overlay, we need to wait for the overlay container to mount\n      // before focusing the active element.\n      if (element) {\n        focusActiveItem(selectedElement.current)\n      }\n    },\n    [focusActiveItem],\n  )\n\n  const {screenSize} = useScreenSize()\n  const showTreeOverlay =\n    !isSSR &&\n    ((openPanel && screenSize < TreeOverlayBreakpoint) || screenSize < ScreenSize.xlarge) &&\n    screenSize >= ScreenSize.large\n\n  const onTreeItemSelected = React.useCallback(() => {\n    if (!showTreeOverlay) {\n      onItemSelected()\n    }\n    ignoreNextScroll.current = true\n  }, [onItemSelected, showTreeOverlay])\n\n  const displayNoneSx = !showTree ? {display: 'none'} : {}\n\n  const parentDirPath = isFilePath ? path.substring(0, path.lastIndexOf('/')) : path\n\n  const fileTreeContextValue = useMemo(() => {\n    return {knownFolders, dispatchKnownFolders}\n  }, [knownFolders])\n\n  // These are the widths where the distance to the first header element is less than the header tree toggle's padding\n  const marginToggleTreeDisplaySx = {\n    '@media screen and (min-width: 1360px)': {\n      display: 'block',\n    },\n  }\n\n  // Create a portal node: this holds your rendered content\n  const portalNode = React.useMemo(() => {\n    if (isSSR) {\n      return null\n    }\n    return createHtmlPortalNode()\n  }, [isSSR])\n\n  const exitOverlay = React.useCallback(() => {\n    if (window.innerWidth > ScreenSize.large && window.innerWidth < ScreenSize.xxxxlarge) {\n      collapseTree({setCookie: false})\n    }\n  }, [collapseTree])\n\n  /* on the server during SSR, the expanded value will purely be whatever their saved\n  setting is, which might be expanded. On mobile widths we don't ever default to\n  having the tree expanded, so on the server we need to just hard code it to\n  show the regular not expanded version of everything*/\n  const paneContents = (\n    <Box\n      id={id}\n      sx={{\n        maxHeight: '100%',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        '@media screen and (max-width: 768px)': isSSR ? {display: 'none'} : undefined,\n        '@media screen and (min-width: 768px)': {\n          maxHeight: '100vh',\n          height: '100vh',\n        },\n        ...paneContentsSx,\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          px: 3,\n          pb: 2,\n          pt: 3,\n          ...headerSx,\n        }}\n      >\n        {headerContent}\n        {showRefSelectorRow && (\n          <Box sx={{mx: 4, display: 'flex', width: '100%'}}>\n            <Box sx={{flexGrow: 1}}>\n              <ReposHeaderRefSelector\n                buttonClassName=\"react-repos-tree-pane-ref-selector width-full ref-selector-class\"\n                allowResizing={true}\n              />\n            </Box>\n            <Box\n              sx={{\n                ml: 2,\n                whiteSpace: 'nowrap',\n                '&:hover button:not(:hover)': {\n                  borderLeftColor: 'var(--button-default-borderColor-hover, var(--color-btn-hover-border))',\n                },\n              }}\n            >\n              {refInfo.canEdit && (\n                <Tooltip aria-label=\"Add file\" direction=\"s\">\n                  {/* eslint-disable-next-line primer-react/a11y-remove-disable-tooltip */}\n                  <IconButton\n                    unsafeDisableTooltip={true}\n                    aria-label=\"Add file\"\n                    as={Link}\n                    sx={{\n                      color: 'fg.subtle',\n                      borderTopRightRadius: 0,\n                      borderBottomRightRadius: 0,\n                      borderRight: 0,\n                    }}\n                    icon={PlusIcon}\n                    to={repositoryTreePath({repo, path: parentDirPath, commitish: refInfo.name, action: 'new'})}\n                    // This callback will close the tree if this is a narrow viewport\n                    onClick={onTreeItemSelected}\n                  />\n                </Tooltip>\n              )}\n              <SearchButton\n                sx={refInfo.canEdit ? {borderTopLeftRadius: 0, borderBottomLeftRadius: 0} : undefined}\n                onClick={exitOverlay}\n                textAreaId={textAreaId}\n              />\n            </Box>\n          </Box>\n        )}\n      </Box>\n\n      {refInfo.currentOid && showFindFile && findFileWorkerPath && (\n        <>\n          <FileResultsList\n            commitOid={refInfo.currentOid}\n            findFileWorkerPath={findFileWorkerPath}\n            onItemSelected={onItemSelected}\n            searchBoxRef={searchBoxRef}\n            sx={{\n              ml: 3,\n              mr: 3,\n              mb: '12px',\n              '@media screen and (max-width: 768px)': isSSR ? {display: 'none'} : undefined,\n            }}\n          />\n          <FindFilesShortcut\n            inputRef={searchBoxRef}\n            onFindFilesShortcut={onFindFilesShortcut}\n            textAreaId={textAreaId}\n          />\n        </>\n      )}\n      <TreeBorder scrollingRef={scrollingRef} />\n      <Box\n        ref={setScrollingRef}\n        sx={{\n          flexGrow: 1,\n          maxHeight: '100% !important',\n          overflowY: 'auto',\n          '@media screen and (max-width: 768px)': isSSR ? {display: 'none'} : undefined,\n          scrollbarGutter: 'stable',\n        }}\n      >\n        {isSSR\n          ? refInfo.currentOid && (\n              <div className={!query ? 'react-tree-show-tree-items' : 'react-tree-show-tree-items-on-large-screen'}>\n                <ReposFileTreeView\n                  clientOnlyFilePaths={clientOnlyFilePaths}\n                  data={fileTree}\n                  rootItems={rootItems}\n                  selectedItemRef={setSelectedItemRef}\n                  setRootItems={setRootItems}\n                  onItemSelected={onTreeItemSelected}\n                  processingTime={processingTime}\n                  loading={treeLoading}\n                  fetchError={fetchError}\n                  directoryNavigateOnClick={directoryNavigateOnClick}\n                  getItemUrl={getTreeItemUrl}\n                  sx={treeContainerSx}\n                  getFileTrailingVisual={getFileTrailingVisual}\n                  getFileIcon={getFileIcon}\n                  sortDirectoryItems={sortDirectoryItems}\n                />\n              </div>\n            )\n          : portalNode && <OutPortal node={portalNode} />}\n        {!refInfo.currentOid && !repo.isEmpty && (\n          <Box\n            sx={{\n              mt: 2,\n              mx: 4,\n              mb: '12px',\n              fontSize: 1,\n              alignItems: 'center',\n              color: 'danger.fg',\n            }}\n          >\n            <Octicon icon={AlertFillIcon} />\n            &nbsp;Ref is invalid\n          </Box>\n        )}\n      </Box>\n    </Box>\n  )\n\n  const hidePaneSx =\n    showTreeOverlay || openPanel\n      ? {\n          // 1349 is TreeOverlayBreakpoint - 1\n          '@media print, screen and (max-width: 1349px) and (min-width: 768px)': {\n            display: 'none',\n          },\n        }\n      : {\n          '@media print, screen and (max-width: 1011px) and (min-width: 768px)': {\n            display: 'none',\n          },\n        }\n\n  return (\n    <FileTreeContext.Provider value={fileTreeContextValue}>\n      {/* Render the TreeView in a portal that can be moved to different containers without rerendering */}\n      {portalNode && (\n        <InPortal node={portalNode}>\n          {refInfo.currentOid && (\n            <div className={!query ? 'react-tree-show-tree-items' : 'react-tree-show-tree-items-on-large-screen'}>\n              <ReposFileTreeView\n                clientOnlyFilePaths={clientOnlyFilePaths}\n                data={fileTree}\n                directoryNavigateOnClick={directoryNavigateOnClick}\n                rootItems={rootItems}\n                selectedItemRef={setSelectedItemRef}\n                setRootItems={setRootItems}\n                onItemSelected={onTreeItemSelected}\n                processingTime={processingTime}\n                loading={treeLoading}\n                fetchError={fetchError}\n                getItemUrl={getTreeItemUrl}\n                sx={treeContainerSx}\n                getFileTrailingVisual={getFileTrailingVisual}\n                getFileIcon={getFileIcon}\n                sortDirectoryItems={sortDirectoryItems}\n              />\n            </div>\n          )}\n        </InPortal>\n      )}\n      {!showTree && codeCenterOption.enabled && treeToggleElement && (\n        <Box\n          sx={{\n            position: 'absolute',\n            p: 3,\n            display: 'none',\n            ...marginToggleTreeDisplaySx,\n          }}\n        >\n          {treeToggleElement}\n        </Box>\n      )}\n      <SplitPageLayout.Pane\n        position=\"start\"\n        sticky\n        sx={{\n          minWidth: 0,\n          ...displayNoneSx,\n          flexDirection: ['column', 'column', 'inherit'],\n          '@media screen and (min-width: 768px)': {\n            height: '100vh',\n            maxHeight: '100vh !important',\n          },\n          ...hidePaneSx,\n          ...paneSx,\n        }}\n        padding=\"none\"\n        width=\"large\"\n        resizable={true}\n        widthStorageKey=\"codeView.tree-pane-width\"\n        divider={{regular: 'line', narrow: 'none'}}\n      >\n        {showTree && !showTreeOverlay && (\n          <div\n            className={\n              isSSR ? (openPanel ? 'react-tree-pane-contents-3-panel' : 'react-tree-pane-contents') : undefined\n            }\n          >\n            <>{paneContents}</>\n          </div>\n        )}\n      </SplitPageLayout.Pane>\n      {showTree && showTreeOverlay && lastOpenPanel.current === openPanel && (\n        <Overlay\n          className={isSSR ? (openPanel ? 'react-tree-pane-overlay-3-panel' : 'react-tree-pane-overlay') : undefined}\n          ref={setOverlayRef}\n          returnFocusRef={treeToggleRef}\n          onClickOutside={exitOverlay}\n          onEscape={exitOverlay}\n          top={0}\n          position=\"fixed\"\n          sx={{\n            ...displayNoneSx,\n            width: '440px',\n            height: '100vh',\n            maxHeight: '100vh',\n            borderTopLeftRadius: 0,\n            borderBottomLeftRadius: 0,\n          }}\n        >\n          <>{paneContents}</>\n        </Overlay>\n      )}\n    </FileTreeContext.Provider>\n  )\n}\n\nfunction knownFolderReducer(\n  state: Map<string, TreeItem<DirectoryItem>>,\n  action: {\n    type: string\n    folders: Map<string, TreeItem<DirectoryItem>>\n    processingTime: number\n  },\n) {\n  switch (action.type) {\n    case 'set': {\n      const stateInitialized = state?.size > 0\n      sendEvent('file-tree', {\n        'fetch-count': stateInitialized ? action.folders.size - state.size : action.folders.size,\n        'file-count': action.folders.size,\n        'nav-type': stateInitialized ? 'soft' : 'hard',\n        'processing-time': action.processingTime,\n      })\n      return action.folders\n    }\n    case 'add': {\n      const newState = new Map([...state, ...action.folders])\n      sendEvent('file-tree', {\n        'fetch-count': action.folders.size,\n        'file-count': newState.size,\n        'nav-type': 'fetch',\n        'processing-time': action.processingTime,\n      })\n      return newState\n    }\n    default:\n      throw new Error(`Unknown action type: ${action.type}`)\n  }\n}\n\nfunction TreeBorder({scrollingRef}: {scrollingRef: React.RefObject<HTMLDivElement>}) {\n  const [visible, setVisible] = React.useState(scrollingRef.current && scrollingRef.current.scrollTop > 0)\n\n  React.useEffect(() => {\n    if (scrollingRef.current) {\n      const scrollElement = scrollingRef.current\n      const scrollHandler = () => {\n        if (scrollElement && scrollElement.scrollTop > 0) {\n          setVisible(true)\n        } else {\n          setVisible(false)\n        }\n      }\n      // eslint-disable-next-line github/prefer-observers\n      scrollElement.addEventListener('scroll', scrollHandler)\n      return () => {\n        scrollElement.removeEventListener('scroll', scrollHandler)\n      }\n    }\n  }, [scrollingRef])\n\n  return visible ? (\n    <Box\n      sx={{\n        borderBottom: '1px solid',\n        borderColor: 'border.default',\n        boxShadow: '0 3px 8px rgba(0, 0, 0, 0.3)',\n      }}\n    />\n  ) : null\n}\n\ntry{ ReposFileTreePane.displayName ||= 'ReposFileTreePane' } catch {}\ntry{ TreeBorder.displayName ||= 'TreeBorder' } catch {}","import {isSearchUrl} from '@github-ui/code-view-shared/components/files-search/FilesSearchBox'\nimport {useReposAnalytics} from '@github-ui/code-view-shared/hooks/use-repos-analytics'\nimport type {CollapseTreeFunction, ExpandTreeFunction} from '@github-ui/code-view-types'\nimport {getCookie, setCookie} from '@github-ui/cookies'\nimport {useCurrentUser} from '@github-ui/current-user'\nimport {ScreenSize, useScreenSize} from '@github-ui/screen-size'\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {useLayoutEffect} from '@github-ui/use-layout-effect'\nimport {Heading} from '@primer/react'\nimport {useCallback, useMemo, useRef, useState} from 'react'\n\nimport {ExpandFileTreeButton, type ExpandFileTreeButtonProps} from '../components/ExpandFileTreeButton'\nimport {TreeOverlayBreakpoint} from '../components/ReposFileTreePane'\n\nexport interface TreePane {\n  isTreeExpanded: boolean\n  treeToggleElement: JSX.Element\n  treeToggleRef: React.RefObject<HTMLButtonElement>\n  searchBoxRef: React.RefObject<HTMLInputElement>\n  expandTree: ExpandTreeFunction\n  collapseTree: CollapseTreeFunction\n}\n\nexport function useTreePane(\n  reposFileTreeId: string,\n  openPanelRef: React.MutableRefObject<string | undefined>,\n  treeExpanded: boolean,\n  textAreaId: string,\n  updateExpandPreferences?: (expanded: boolean) => void,\n  cookieName = 'fileTreeExpanded',\n  expandFileTreeButtonProps?: Partial<ExpandFileTreeButtonProps>,\n): TreePane {\n  const {sendRepoClickEvent} = useReposAnalytics()\n  const currentUser = useCurrentUser()\n\n  const fileTreeExpandedCookie = getCookie(cookieName)\n  const isSSR = !!(typeof ssrSafeDocument === 'undefined')\n  // Only use the cookie if the user isn't logged in\n  let initiallyExpanded =\n    (!currentUser && fileTreeExpandedCookie && fileTreeExpandedCookie.value !== 'false') ||\n    (currentUser && treeExpanded)\n\n  if (initiallyExpanded === undefined) {\n    initiallyExpanded = false\n  }\n\n  const treeToggleRef = useRef<HTMLButtonElement>(null)\n  const searchBoxRef = useRef<HTMLInputElement>(null)\n  const {screenSize} = useScreenSize()\n\n  const [isTreeExpanded, setIsTreeExpanded] = useState(initiallyExpanded)\n  // Keep track of the last state that was specifically requested by the user\n  const lastStateIsExpanded = useRef(initiallyExpanded)\n  const expandTreeCookieExpiration = 30 * 24 * 60 * 60 * 1000 // 30 days\n  const expandedAsOverlay = useRef(false)\n  const hasManuallyCollapsed = useRef(false)\n\n  const showAsOverlay = useCallback(() => {\n    return !(\n      (openPanelRef.current && window.innerWidth >= TreeOverlayBreakpoint) ||\n      (!openPanelRef.current && window.innerWidth >= ScreenSize.xlarge)\n    )\n  }, [openPanelRef])\n\n  /**\n   * With SSR, we need to make sure we get the correct initial state for the tree\n   */\n  useLayoutEffect(() => {\n    const showingAsOverlay = showAsOverlay()\n    if (!showingAsOverlay) {\n      expandedAsOverlay.current = false\n    }\n    const shouldExpand =\n      (isSearchUrl() && screenSize < ScreenSize.large && !hasManuallyCollapsed.current) ||\n      ((!showingAsOverlay || expandedAsOverlay.current) &&\n        ((currentUser && isTreeExpanded) || (!currentUser && fileTreeExpandedCookie?.value !== 'false')))\n    setIsTreeExpanded(shouldExpand)\n    // Don't retrigger when the tree expanded state changes.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expandedAsOverlay, fileTreeExpandedCookie?.value, screenSize, openPanelRef, showAsOverlay, currentUser])\n\n  /**\n   * When the screen size shrinks below medium, collapse the tree if it is expanded.\n   * When the screen size grows beyond medium, return the tree to its last state.\n   */\n  useLayoutEffect(() => {\n    const shouldClose = !openPanelRef.current && window.innerWidth < ScreenSize.xlarge\n    const shouldOpen = !openPanelRef.current && window.innerWidth >= ScreenSize.xlarge\n    if (shouldClose && lastStateIsExpanded.current && !isSearchUrl() && isTreeExpanded) {\n      setIsTreeExpanded(false)\n    }\n\n    if (shouldOpen && lastStateIsExpanded.current && !isTreeExpanded) {\n      setIsTreeExpanded(true)\n    }\n    // Don't retrigger when the tree expanded state changes.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [openPanelRef, screenSize])\n\n  /**\n   * When the screen size shrinks below large, collapse the tree if it is expanded.\n   * When the screen size grows beyond large, return the tree to its last state.\n   */\n  useLayoutEffect(() => {\n    const shouldClose = openPanelRef.current && window.innerWidth < TreeOverlayBreakpoint\n    const shouldOpen = openPanelRef.current && window.innerWidth >= TreeOverlayBreakpoint\n    if (shouldClose && lastStateIsExpanded.current && !isSearchUrl() && isTreeExpanded) {\n      setIsTreeExpanded(false)\n    }\n    if (shouldOpen && lastStateIsExpanded.current && !isTreeExpanded) {\n      setIsTreeExpanded(true)\n    }\n    // Don't retrigger when the tree expanded state changes.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [openPanelRef])\n\n  const expandTree: ExpandTreeFunction = useCallback(\n    options => {\n      setIsTreeExpanded(true)\n      if (showAsOverlay()) {\n        expandedAsOverlay.current = true\n      }\n\n      if (options?.setCookie) {\n        updateExpandPreferences?.(true)\n        lastStateIsExpanded.current = true\n        const expireTime = new Date(new Date().getTime() + expandTreeCookieExpiration).toUTCString()\n        setCookie(cookieName, 'true', expireTime)\n      }\n\n      if (options?.focus === 'toggleButton') {\n        requestAnimationFrame(() => treeToggleRef.current?.focus())\n      } else if (options?.focus === 'search') {\n        requestAnimationFrame(() => searchBoxRef.current?.focus())\n      }\n    },\n    [cookieName, expandTreeCookieExpiration, showAsOverlay, updateExpandPreferences],\n  )\n\n  const collapseTree: CollapseTreeFunction = useCallback(\n    options => {\n      setIsTreeExpanded(false)\n      expandedAsOverlay.current = false\n      hasManuallyCollapsed.current = true\n      if (options?.setCookie) {\n        updateExpandPreferences?.(false)\n        lastStateIsExpanded.current = false\n        const expireTime = new Date(new Date().getTime() + expandTreeCookieExpiration).toUTCString()\n        setCookie(cookieName, 'false', expireTime)\n      }\n\n      if (options?.focus === 'toggleButton') {\n        requestAnimationFrame(() => treeToggleRef.current?.focus())\n      }\n    },\n    [cookieName, expandTreeCookieExpiration, updateExpandPreferences],\n  )\n\n  // This is SSR safe since it won't be called during SSR\n  const shouldSetCookie = useCallback(\n    (openPanel: string | undefined) => {\n      return (\n        (openPanel && window.innerWidth >= TreeOverlayBreakpoint) ||\n        (!openPanelRef.current && window.innerWidth >= ScreenSize.xlarge)\n      )\n    },\n    [openPanelRef],\n  )\n\n  const treeToggleElement = useMemo(\n    () => (\n      <Heading as=\"h2\" sx={{display: 'flex', fontSize: 1}}>\n        <ExpandFileTreeButton\n          expanded={isTreeExpanded}\n          ariaControls={reposFileTreeId}\n          onToggleExpanded={() => {\n            sendRepoClickEvent(isTreeExpanded ? 'FILES_TREE.HIDE' : 'FILES_TREE.SHOW')\n            // On the overview page, the toggle button isn't sticky, we don't want the user to lose the place\n            // on the page to focuss it if they click\n            isTreeExpanded\n              ? collapseTree({\n                  focus: 'toggleButton',\n                  setCookie: shouldSetCookie(openPanelRef.current),\n                })\n              : expandTree({focus: 'toggleButton', setCookie: shouldSetCookie(openPanelRef.current)})\n          }}\n          className={\n            fileTreeExpandedCookie === undefined && !isTreeExpanded && !isSSR\n              ? 'react-tree-toggle-button-with-indicator'\n              : undefined\n          }\n          ref={treeToggleRef}\n          textAreaId={textAreaId}\n          {...expandFileTreeButtonProps}\n        />\n      </Heading>\n    ),\n    [\n      isTreeExpanded,\n      reposFileTreeId,\n      fileTreeExpandedCookie,\n      isSSR,\n      textAreaId,\n      expandFileTreeButtonProps,\n      sendRepoClickEvent,\n      collapseTree,\n      shouldSetCookie,\n      openPanelRef,\n      expandTree,\n    ],\n  )\n\n  return {\n    isTreeExpanded,\n    expandTree,\n    collapseTree,\n    treeToggleElement,\n    treeToggleRef,\n    searchBoxRef,\n  }\n}\n","import React from 'react'\n\nexport function useFileTreeTooltip({\n  focusRowRef,\n  mouseRowRef,\n}: {\n  focusRowRef: React.RefObject<HTMLElement>\n  mouseRowRef: React.RefObject<HTMLElement>\n}) {\n  const [showTooltip, setShowTooltip] = React.useState(false)\n\n  React.useEffect(() => {\n    if (focusRowRef.current && mouseRowRef.current) {\n      const showIfOverflowing = () => {\n        const contentRef: HTMLElement | null | undefined = focusRowRef.current?.querySelector(\n          '.PRIVATE_TreeView-item-content-text',\n        )\n        if (contentRef?.scrollWidth !== contentRef?.offsetWidth) {\n          setShowTooltip(true)\n        }\n      }\n      focusRowRef.current.onfocus = () => {\n        showIfOverflowing()\n      }\n      focusRowRef.current.onblur = () => {\n        setShowTooltip(false)\n      }\n      mouseRowRef.current.onmouseenter = () => {\n        showIfOverflowing()\n      }\n      mouseRowRef.current.onmouseleave = () => {\n        setShowTooltip(false)\n      }\n    }\n  }, [focusRowRef, mouseRowRef])\n\n  return showTooltip\n}\n","/**\n *\n * This component is used to take hotkeys that are tied to hidden buttons and duplicate them to work\n * when the user has the hidden text area focused. This is done because the hotkeys library we use\n * does not support hotkeys that work both when a text area is focused and when it is not.\n */\n\nexport function DuplicateOnKeydownButton({\n  buttonFocusId,\n  buttonHotkey,\n  onButtonClick,\n  buttonTestLabel,\n  onlyAddHotkeyScopeButton,\n}: {\n  buttonFocusId: string\n  buttonHotkey: string | undefined\n  onButtonClick: (() => void) | ((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void)\n  buttonTestLabel?: string\n  onlyAddHotkeyScopeButton?: boolean\n}) {\n  return (\n    <>\n      <button\n        hidden={true}\n        data-testid={buttonTestLabel ? buttonTestLabel : ''}\n        data-hotkey={buttonHotkey}\n        onClick={onButtonClick}\n        data-hotkey-scope={buttonFocusId}\n      />\n      {!onlyAddHotkeyScopeButton && <button hidden={true} data-hotkey={buttonHotkey} onClick={onButtonClick} />}\n    </>\n  )\n}\n\ntry{ DuplicateOnKeydownButton.displayName ||= 'DuplicateOnKeydownButton' } catch {}","import {SidebarCollapseIcon, SidebarExpandIcon} from '@primer/octicons-react'\nimport {IconButton, Tooltip, type ButtonProps, type TooltipProps} from '@primer/react'\nimport React from 'react'\n\ninterface ExpandButtonProps extends Pick<ButtonProps, 'variant'> {\n  expanded?: boolean\n  onToggleExpanded: React.MouseEventHandler<HTMLButtonElement>\n  testid: string\n  alignment: 'left' | 'right'\n  ariaLabel: string\n  ariaControls: string\n  sx?: Record<string, unknown>\n  dataHotkey?: string\n  className?: string\n  tooltipDirection?: TooltipProps['direction']\n}\n\nexport const ExpandButton = React.forwardRef(\n  (\n    {\n      expanded,\n      testid,\n      ariaLabel,\n      ariaControls,\n      onToggleExpanded,\n      sx,\n      alignment,\n      dataHotkey,\n      className,\n      tooltipDirection,\n      variant,\n    }: ExpandButtonProps,\n    ref: React.ForwardedRef<HTMLButtonElement>,\n  ) => (\n    <Tooltip aria-label={ariaLabel} id={`expand-button-${testid}`} direction={tooltipDirection}>\n      {/* eslint-disable-next-line primer-react/a11y-remove-disable-tooltip */}\n      <IconButton\n        unsafeDisableTooltip={true}\n        ref={ref}\n        data-testid={expanded ? `collapse-${testid}` : `expand-${testid}`}\n        aria-labelledby={`expand-button-${testid}`}\n        aria-expanded={expanded}\n        aria-controls={ariaControls}\n        icon={\n          expanded\n            ? alignment === 'left'\n              ? SidebarExpandIcon\n              : SidebarCollapseIcon\n            : alignment === 'left'\n              ? SidebarCollapseIcon\n              : SidebarExpandIcon\n        }\n        sx={{color: 'fg.muted', ...sx}}\n        data-hotkey={dataHotkey}\n        onClick={e => {\n          onToggleExpanded(e)\n        }}\n        variant={variant ?? 'invisible'}\n        className={className}\n      />\n    </Tooltip>\n  ),\n)\n\nExpandButton.displayName = 'ExpandButton'\n","import memoize from '@github/memoize'\nimport {hasMatch, score} from 'fzy.js'\n\nexport interface FindFileRequest {\n  baseList: string[]\n  query: string\n  startTime: number\n}\n\nexport interface FindFileResponse {\n  query: string\n  list: string[]\n  baseCount: number\n  startTime: number\n}\n\nconst fuzzyScore = memoize(score)\n\nexport function findFileWorkerJob({data}: {data: FindFileRequest}): FindFileResponse {\n  const {query, baseList, startTime} = data\n  const queryWithoutBackslash = query.replaceAll('\\\\', '')\n  const list = baseList\n    .filter(item => filterItem(item, queryWithoutBackslash))\n    .sort((itemA, itemB) => fuzzyScore(queryWithoutBackslash, itemB) - fuzzyScore(queryWithoutBackslash, itemA))\n\n  return {query, list, baseCount: baseList.length, startTime}\n}\n\nfunction filterItem(item: string, query: string) {\n  return query === '' || (hasMatch(query, item) && fuzzyScore(query, item) > 0)\n}\n","import memoize from '@github/memoize'\nimport {useCurrentRepository} from '@github-ui/current-repository'\nimport {treeListPath} from '@github-ui/paths'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {useEffect, useState} from 'react'\n\nasync function fetchJSON(url: string): Promise<{paths: string[]; directories: string[]} | undefined> {\n  const response = await verifiedFetchJSON(url)\n  if (response.ok) {\n    return await response.json()\n  } else {\n    return undefined\n  }\n}\n\n// We need to memoize to prevent fetching it more than once when the component is unmounted\n// and mounted again because user filters, then get back to the tree and then filters again.\nconst memoizeCache = new Map()\nconst memoizedFetch = memoize<[string], Promise<{paths: string[]; directories: string[]} | undefined>, unknown>(\n  fetchJSON,\n  {cache: memoizeCache},\n)\n\nexport function resetTreeListMemoizeFetch() {\n  memoizeCache.clear()\n}\n\ninterface TreeListState {\n  list: string[]\n  directories: string[]\n  loading?: boolean\n  error?: boolean\n}\n\nexport function useTreeList(commitOid: string, load: boolean, excludeDirectories?: boolean) {\n  const repo = useCurrentRepository()\n  const [state, setState] = useState<TreeListState>({list: [], directories: [], loading: true})\n\n  const treeListUrl = treeListPath({repo, commitOid, includeDirectories: !excludeDirectories})\n\n  useEffect(() => {\n    let cancelled = false\n    const update = async () => {\n      setState({list: [], directories: [], loading: true})\n      const data = await memoizedFetch(treeListUrl)\n\n      if (cancelled) {\n        return\n      }\n\n      const files = data?.paths || []\n      const directories = data?.directories || []\n      const list = files.concat(directories).sort()\n\n      setState({list, directories, error: !data})\n    }\n\n    load && update()\n\n    return function cancel() {\n      cancelled = true\n    }\n  }, [treeListUrl, load, excludeDirectories])\n\n  return state\n}\n","import {useFileQueryContext} from '../../contexts/FileQueryContext'\nimport {useFilesPageInfo} from '../../contexts/FilesPageInfoContext'\nimport {useReposAnalytics} from '../../hooks/use-repos-analytics'\nimport {useUrlCreator} from '../../hooks/use-url-creator'\nimport {useCurrentRepository} from '@github-ui/current-repository'\nimport {getScrollableParent} from '@github-ui/get-scrollable-parent'\nimport {codeNavSearchPath} from '@github-ui/paths'\nimport {Link} from '@github-ui/react-core/link'\nimport {ScreenSize, useScreenSize} from '@github-ui/screen-size'\nimport {useNavigate} from '@github-ui/use-navigate'\nimport {FocusKeys, scrollIntoView} from '@primer/behaviors'\nimport {FileDirectoryFillIcon, FileIcon} from '@primer/octicons-react'\nimport {\n  ActionList,\n  AnchoredOverlay,\n  Box,\n  Flash,\n  Link as PrimerLink,\n  Octicon,\n  Spinner,\n  type SxProp,\n  useFocusZone,\n} from '@primer/react'\nimport {positions} from 'fzy.js'\nimport React, {useMemo} from 'react'\n\nimport {WebWorker} from '../../utilities/web-worker'\nimport {findFileWorkerJob, type FindFileRequest, type FindFileResponse} from '../../worker-jobs/find-file'\nimport {FilesSearchBox, isSearchUrl} from './FilesSearchBox'\nimport {useTreeList} from '../../hooks/use-tree-list'\nimport type {BetterSystemStyleObject} from '@primer/react/lib-esm/sx'\n\nconst LIST_SIZE = 40\n\nconst defaultConfig = {\n  excludeDirectories: false,\n  excludeSeeAllResults: false,\n}\n\ntype FileResultsConfig = {\n  excludeDirectories?: boolean\n  excludeSeeAllResults?: boolean\n  useOverlay?: boolean\n}\n\ntype FileResultsListProps = {\n  actionListSx?: BetterSystemStyleObject\n  additionalResults?: string[]\n  commitOid: string\n  config?: FileResultsConfig\n  findFileWorkerPath: string\n  getItemUrl?(path: string, isDirectory: boolean, hash: string): string\n  onRenderRow?(): void\n  onItemSelected?: () => void\n  searchBoxRef?: React.RefObject<HTMLInputElement>\n} & SxProp\n\nexport default function FileResultsList({\n  actionListSx = {},\n  additionalResults,\n  commitOid,\n  config = defaultConfig,\n  findFileWorkerPath,\n  getItemUrl,\n  onRenderRow,\n  onItemSelected,\n  searchBoxRef,\n  sx = {},\n}: FileResultsListProps) {\n  const {excludeDirectories, excludeSeeAllResults} = config\n  const {query, setQuery} = useFileQueryContext()\n  const repo = useCurrentRepository()\n  const internalInputRef = React.useRef<HTMLInputElement>(null)\n  const inputRef = searchBoxRef ?? internalInputRef\n  // Mount results component early to start fetching search paths before user starts typing\n  // for a more responsive experience.\n  const [preloadSearch, setPreloadSearch] = React.useState(false || query.length > 0)\n  const [overlayOpen, setOverlayOpen] = React.useState(!!query)\n  const {list, directories, loading, error} = useTreeList(commitOid, preloadSearch, !!excludeDirectories)\n  const {path} = useFilesPageInfo()\n  const {getUrl} = useUrlCreator()\n  const {queryText, queryLine} = parseQuery(query)\n  const combinedList = useMemo(() => [...list, ...(additionalResults ?? [])].sort(), [additionalResults, list])\n  const {matches, clearMatches} = useFilter(combinedList, queryText, findFileWorkerPath, preloadSearch)\n  const {sendRepoClickEvent} = useReposAnalytics()\n  const navigate = useNavigate()\n  const [focusedSearchIndex, setFocusedSearchIndex] = React.useState<number>(0)\n  const [listFocusVisible, setListFocusVisible] = React.useState(isSearchUrl())\n  const allResultsLink = React.useRef<HTMLAnchorElement>(null)\n  const textInputContainerRef = React.useRef<HTMLDivElement>(null)\n  const overlayId = 'file-results-list'\n  const {sendRepoKeyDownEvent} = useReposAnalytics()\n\n  // This is SSR safe because we will wrap calls to FileResultsList with `lazy`\n  const {screenSize} = useScreenSize()\n  const useOverlay = config.useOverlay ?? screenSize >= ScreenSize.large\n\n  const onRowClick = React.useCallback(() => {\n    sendRepoClickEvent('FILE_TREE.SEARCH_RESULT_CLICK')\n    onItemSelected?.()\n    setOverlayOpen(false)\n  }, [sendRepoClickEvent, onItemSelected])\n\n  const buildUrl = (itemPath: string, isDirectory: boolean, hash: string) => {\n    if (getItemUrl) return getItemUrl(itemPath, isDirectory, hash)\n\n    return getUrl({\n      path: itemPath,\n      action: isDirectory ? 'tree' : 'blob',\n      hash,\n    })\n  }\n\n  const {containerRef: listRef} = useFocusZone(\n    {\n      bindKeys: FocusKeys.ArrowVertical | FocusKeys.HomeAndEnd,\n      focusInStrategy: 'previous',\n    },\n    [loading, error],\n  )\n\n  React.useEffect(() => {\n    if (!query) {\n      setOverlayOpen(false)\n    }\n  }, [query])\n\n  React.useEffect(() => {\n    if (document.activeElement !== inputRef.current && useOverlay) {\n      setOverlayOpen(false)\n    }\n  }, [path, inputRef, useOverlay])\n\n  const displayMatches = matches?.slice(0, LIST_SIZE) || []\n\n  const matchesTruncated = matches && matches.length > displayMatches.length\n\n  const handleSearchBoxKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    const {key, shiftKey, metaKey, altKey, ctrlKey} = event\n    if (shiftKey || metaKey || altKey) return\n\n    if (key === 'Escape') {\n      if (query) {\n        sendRepoKeyDownEvent('FILE_TREE.CANCEL_SEARCH')\n        setQuery('')\n        clearMatches()\n      } else if (document.activeElement) {\n        // eslint-disable-next-line github/no-blur\n        ;(document.activeElement as HTMLInputElement).blur()\n      }\n    } else if (!query) {\n      return\n    } else if (key === 'Enter') {\n      if (!excludeSeeAllResults && matchesTruncated && focusedSearchIndex === displayMatches.length) {\n        navigate(\n          codeNavSearchPath({\n            owner: repo.ownerLogin,\n            repo: repo.name,\n            searchTerm: `path:${queryText}`,\n          }),\n        )\n        onItemSelected?.()\n      } else if (displayMatches[focusedSearchIndex]) {\n        const itemUrl = buildUrl(displayMatches[focusedSearchIndex], false, queryLine ? `L${queryLine}` : '')\n        navigate(itemUrl)\n        setOverlayOpen(false)\n        onItemSelected?.()\n      }\n    } else if (key === 'ArrowDown' || (ctrlKey && key === 'n')) {\n      // Move to the \"See all results\" link\n      if (!excludeSeeAllResults && matchesTruncated && focusedSearchIndex >= displayMatches.length - 1) {\n        setFocusedSearchIndex(displayMatches.length)\n        if (allResultsLink.current && listRef.current) {\n          const container = getScrollableParent(listRef.current)\n          scrollIntoView(allResultsLink.current, container as HTMLElement, {behavior: 'instant'})\n        }\n      } else {\n        setFocusedSearchIndex(Math.min(focusedSearchIndex + 1, displayMatches.length - 1))\n      }\n\n      event.preventDefault()\n      return\n    } else if (key === 'ArrowUp' || (ctrlKey && key === 'p')) {\n      setFocusedSearchIndex(Math.max(focusedSearchIndex - 1, 0))\n      event.preventDefault()\n      return\n    }\n  }\n\n  const listContents = (\n    <Box\n      sx={{\n        maxHeight: useOverlay ? '60vh' : '100% !important',\n        overflowY: 'auto',\n        scrollbarGutter: 'stable',\n        maxWidth: '100vw',\n        '@media (max-width: 768px)': {\n          ml: 3,\n          mr: 2,\n        },\n      }}\n    >\n      {error ? (\n        <Flash variant=\"danger\" className=\"m-3\">\n          Failed to search\n        </Flash>\n      ) : (\n        <ActionList\n          ref={listRef as React.RefObject<HTMLUListElement>}\n          sx={{\n            overflow: 'auto',\n            p: useOverlay ? 2 : 3,\n            width: '100%',\n            pr: useOverlay ? 3 : 0,\n            pt: useOverlay ? 3 : '2px !important',\n            ...actionListSx,\n          }}\n          role=\"listbox\"\n        >\n          {!loading &&\n            displayMatches.map((match, index) => {\n              const isDirectory = directories.includes(match)\n              const itemUrl = buildUrl(match, isDirectory, queryLine ? `L${queryLine}` : '')\n              return (\n                <MemoizedFileResultRow\n                  active={match === path}\n                  index={index}\n                  key={match}\n                  focused={listFocusVisible && focusedSearchIndex === index}\n                  match={match}\n                  onRender={onRenderRow}\n                  query={queryText}\n                  onClick={onRowClick}\n                  isDirectory={isDirectory}\n                  to={itemUrl}\n                  useOverlay={useOverlay}\n                  listRef={listRef}\n                />\n              )\n            })}\n\n          <div className=\"m-3 text-center\">\n            <FileResultsStatus\n              loading={loading || !matches}\n              visibleResultCount={displayMatches.length}\n              truncated={!!matchesTruncated}\n            />\n            {matchesTruncated && !excludeSeeAllResults && (\n              <>\n                &nbsp;\n                <PrimerLink\n                  id=\"see-all-results-link\"\n                  className=\"focus-visible\"\n                  ref={allResultsLink}\n                  href={codeNavSearchPath({\n                    owner: repo.ownerLogin,\n                    repo: repo.name,\n                    searchTerm: `path:${queryText}`,\n                  })}\n                  sx={\n                    listFocusVisible && focusedSearchIndex === displayMatches.length\n                      ? {\n                          outline: '2px solid var(--focus-outlineColor, var(--color-accent-fg))',\n                          outlineOffset: '-2px',\n                          boxShadow: 'none',\n                        }\n                      : {}\n                  }\n                >\n                  See all results\n                </PrimerLink>\n              </>\n            )}\n          </div>\n        </ActionList>\n      )}\n    </Box>\n  )\n\n  return (\n    <>\n      <Box ref={textInputContainerRef} sx={{mx: 2, ml: 3, ...sx}}>\n        <FilesSearchBox\n          ariaActiveDescendant={\n            (useOverlay || !query) && (!useOverlay || !overlayOpen)\n              ? undefined\n              : listFocusVisible && focusedSearchIndex > -1\n                ? matchesTruncated && focusedSearchIndex === displayMatches.length\n                  ? 'see-all-results-link'\n                  : `file-result-${focusedSearchIndex}`\n                : undefined\n          }\n          ariaExpanded={useOverlay ? overlayOpen : undefined}\n          ariaHasPopup={useOverlay}\n          ariaControls={useOverlay ? overlayId : undefined}\n          ref={inputRef}\n          query={query}\n          onKeyDown={handleSearchBoxKeyDown}\n          onPreload={() => setPreloadSearch(true)}\n          onSearch={newQuery => {\n            setQuery(newQuery)\n            if (newQuery) {\n              setOverlayOpen(true)\n            } else {\n              clearMatches()\n              setOverlayOpen(false)\n            }\n            setFocusedSearchIndex(0)\n          }}\n          onBlur={e => {\n            if (!listRef.current?.contains(e.relatedTarget)) {\n              setOverlayOpen(false)\n              setListFocusVisible(false)\n            }\n          }}\n          onFocus={() => {\n            if (query) {\n              setOverlayOpen(true)\n            }\n            setListFocusVisible(true)\n          }}\n          sx={{minWidth: '160px'}}\n        />\n      </Box>\n      {useOverlay && (\n        <AnchoredOverlay\n          anchorRef={textInputContainerRef}\n          open={useOverlay && overlayOpen}\n          renderAnchor={null}\n          onClose={() => {\n            setOverlayOpen(false)\n          }}\n          focusZoneSettings={{disabled: true}}\n          focusTrapSettings={{disabled: true}}\n          width=\"xlarge\"\n          align=\"end\"\n          overlayProps={{id: overlayId, role: 'dialog'}}\n        >\n          {listContents}\n        </AnchoredOverlay>\n      )}\n      {!useOverlay && query && listContents}\n    </>\n  )\n}\n\ninterface FileResultStatusProps {\n  visibleResultCount: number\n  truncated: boolean\n  loading: boolean\n}\n\nfunction FileResultsStatus({visibleResultCount, truncated, loading}: FileResultStatusProps) {\n  const screenReaderOnly = !loading && !truncated && visibleResultCount !== 0\n  return (\n    <span\n      key=\"results-count-status\"\n      role=\"status\"\n      className={screenReaderOnly ? 'sr-only' : undefined}\n      aria-label={loading ? 'Loading' : undefined}\n    >\n      {loading ? (\n        <Spinner size=\"large\" />\n      ) : visibleResultCount === 0 ? (\n        'No matches found'\n      ) : truncated ? (\n        `First ${visibleResultCount} files shown.`\n      ) : (\n        `Showing ${visibleResultCount} files.`\n      )}\n    </span>\n  )\n}\n\ninterface FileResultRowProps {\n  active: boolean\n  focused?: boolean\n  index: number\n  match: string\n  isDirectory: boolean\n  onClick?(): void\n  query: string\n  to: string\n  onRender?(): void\n  useOverlay: boolean\n  listRef?: React.RefObject<HTMLElement>\n}\n\nexport const FileResultRow = ({\n  active,\n  focused,\n  index,\n  match,\n  query,\n  to,\n  isDirectory,\n  onClick,\n  onRender,\n  useOverlay,\n  listRef,\n}: FileResultRowProps) => {\n  const positionsList = positions(query, match)\n  onRender?.()\n\n  const ref = React.useRef<HTMLAnchorElement>(null)\n  const leadingIcon = isDirectory ? DirectoryIcon : FileResultIcon\n\n  React.useEffect(() => {\n    if (focused && ref.current && listRef?.current) {\n      const container = getScrollableParent(listRef.current)\n      scrollIntoView(ref.current, container as HTMLElement, {behavior: 'instant'})\n    }\n  }, [focused, listRef])\n\n  let sx = {}\n  if (focused) {\n    sx = {\n      outline: 'none',\n      border: '2 solid',\n      boxShadow: '0 0 0 2px #0969da',\n    }\n  }\n\n  return (\n    <ActionList.Item\n      key={match}\n      id={`file-result-${index}`}\n      ref={ref}\n      as={Link}\n      onSelect={onClick}\n      to={to}\n      active={active}\n      sx={{\n        fontWeight: 'normal',\n        ':hover': {\n          textDecoration: 'none',\n        },\n        mx: '2px',\n        width: 'calc(100% - 4px)',\n        ...sx,\n      }}\n      role=\"option\"\n      data-focus-visible-added={focused || undefined}\n      tabIndex={useOverlay ? -1 : 0}\n    >\n      <div className=\"d-flex\">\n        <div className=\"d-flex flex-1 flex-column overflow-hidden\">\n          <HighlightMatch\n            text={match}\n            positionsList={positionsList}\n            sx={{color: 'fg.muted'}}\n            LeadingIcon={leadingIcon}\n          />\n        </div>\n        {focused && (\n          <Box sx={{pl: 1, whiteSpace: 'nowrap', color: 'fg.muted'}}>{`Go to ${isDirectory ? 'folder' : 'file'}`}</Box>\n        )}\n      </div>\n    </ActionList.Item>\n  )\n}\n\nconst DirectoryIcon = () => (\n  <Octicon\n    aria-label=\"Directory\"\n    icon={FileDirectoryFillIcon}\n    sx={{color: 'var(--treeViewItem-leadingVisual-iconColor-rest, var(--color-icon-directory))', mr: 2}}\n    size=\"small\"\n  />\n)\n\nconst FileResultIcon = () => <Octicon aria-label=\"File\" icon={FileIcon} className=\"fgColor-muted mr-2\" size=\"small\" />\n\nconst MemoizedFileResultRow = React.memo(FileResultRow)\n\ninterface HighlightMatchProps extends SxProp {\n  text: string\n  positionsList: number[]\n  offset?: number\n  LeadingIcon?: React.ComponentType\n}\n\nfunction HighlightMatch({text, positionsList, sx, LeadingIcon}: HighlightMatchProps) {\n  const parts = []\n  let lastPosition = 0\n  for (const i of positionsList) {\n    if (Number(i) !== i || i < lastPosition || i > text.length) {\n      continue\n    }\n    const slice = text.slice(lastPosition, i)\n    if (slice) {\n      parts.push(allowSlashWrapping(slice))\n    }\n\n    lastPosition = i + 1\n\n    parts.push(\n      <mark key={i} className=\"text-bold bgColor-transparent fgColor-default\">\n        {text[i]}\n      </mark>,\n    )\n  }\n\n  parts.push(allowSlashWrapping(text.slice(lastPosition)))\n\n  return (\n    <Box sx={sx}>\n      <>\n        {LeadingIcon && <LeadingIcon />}\n        {parts}\n      </>\n    </Box>\n  )\n}\n\nfunction allowSlashWrapping(text: string): string {\n  // Add a zero-width-space after each slash, so that the browser can wrap the text\n  return text.replaceAll('/', '/\\u200B')\n}\n\nfunction useFilter(list: string[], query: string, workerPath: string, startWorker: boolean) {\n  const [matches, setMatches] = React.useState<string[]>()\n  const lastQueryRef = React.useRef<string>('')\n  const workerRef = React.useRef<WebWorker<FindFileRequest, FindFileResponse>>()\n  const {sendStats} = useReposAnalytics()\n  const isWorkerWorking = React.useRef(false)\n\n  const createWorker = React.useCallback(() => {\n    const worker = new WebWorker(workerPath, findFileWorkerJob)\n\n    worker.onmessage = ({data}: {data: FindFileResponse}) => {\n      isWorkerWorking.current = false\n      setMatches(data.list)\n      lastQueryRef.current = data.query\n\n      if (data.startTime) {\n        sendStats('repository.find-file', {\n          'find-file-base-count': data.baseCount,\n          'find-file-results-count': data.list.length,\n          'find-file-duration-ms': performance.now() - data.startTime,\n        })\n      }\n    }\n\n    workerRef.current = worker\n  }, [sendStats, workerPath])\n\n  React.useEffect(() => {\n    if (!startWorker) return\n    createWorker()\n\n    return function destroy() {\n      workerRef.current?.terminate()\n    }\n  }, [createWorker, startWorker])\n\n  React.useEffect(() => {\n    if (list.length && query) {\n      // If a worker is currently filtering and we get a new query,\n      // don't wait for it to finish. Terminate the worker and start a new one.\n      if (isWorkerWorking.current) {\n        workerRef.current?.terminate()\n        createWorker()\n      }\n      const canFilterPreviousMatches = lastQueryRef.current && query.startsWith(lastQueryRef.current)\n      isWorkerWorking.current = true\n      workerRef.current?.postMessage({\n        baseList: (canFilterPreviousMatches && matches) || list,\n        query,\n        startTime: performance.now(),\n      })\n    }\n    // We don't want to re-run this when `matches` change because we never have to filter again in that case\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [list, query, createWorker])\n\n  return {matches, clearMatches: () => setMatches(undefined)}\n}\n\nfunction parseQuery(query: string) {\n  query = query.replaceAll(' ', '')\n  const colonIndex = query.indexOf(':')\n  if (colonIndex >= 0) {\n    return {\n      queryText: query.substring(0, colonIndex),\n      queryLine: parseInt(query.substring(colonIndex + 1), 10),\n    }\n  }\n  return {queryText: query, queryLine: undefined}\n}\n\ntry{ FileResultsList.displayName ||= 'FileResultsList' } catch {}\ntry{ FileResultsStatus.displayName ||= 'FileResultsStatus' } catch {}\ntry{ FileResultRow.displayName ||= 'FileResultRow' } catch {}\ntry{ DirectoryIcon.displayName ||= 'DirectoryIcon' } catch {}\ntry{ FileResultIcon.displayName ||= 'FileResultIcon' } catch {}\ntry{ MemoizedFileResultRow.displayName ||= 'MemoizedFileResultRow' } catch {}\ntry{ HighlightMatch.displayName ||= 'HighlightMatch' } catch {}","import {debounce} from '@github/mini-throttle'\nimport {AllShortcutsEnabled} from '../../components/AllShortcutsEnabled'\nimport {useReposAnalytics} from '../../hooks/use-repos-analytics'\nimport {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {SearchIcon, XCircleFillIcon} from '@primer/octicons-react'\nimport {Box, type SxProp, TextInput} from '@primer/react'\nimport React from 'react'\n\ntype Props = {\n  ariaActiveDescendant?: string\n  ariaControls?: string\n  ariaExpanded?: boolean\n  ariaHasPopup?: boolean\n  onKeyDown?: React.KeyboardEventHandler<HTMLInputElement>\n  onPreload(): void\n  onSearch(query: string): void\n  onBlur?: React.FocusEventHandler<HTMLInputElement>\n  onFocus?: React.FocusEventHandler<HTMLInputElement>\n  query: string\n} & SxProp\n\nexport const FilesSearchBox = React.forwardRef<HTMLInputElement, Props>(\n  (\n    {\n      ariaActiveDescendant,\n      ariaControls,\n      ariaExpanded,\n      ariaHasPopup,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onPreload,\n      onSearch,\n      query,\n      sx = {},\n    },\n    ref,\n  ) => {\n    const {sendRepoClickEvent} = useReposAnalytics()\n    const [textValue, setTextValue] = React.useState(query)\n    const debouncedOnSearch = React.useRef(debounce((newQuery: string) => onSearch(newQuery), 250))\n\n    React.useEffect(() => {\n      setTextValue(query)\n    }, [query])\n\n    const clearAction = query ? (\n      <TextInput.Action\n        onClick={() => {\n          sendRepoClickEvent('FILE_TREE.CANCEL_SEARCH')\n          onSearch('')\n        }}\n        icon={XCircleFillIcon}\n        aria-label=\"Clear\"\n        className=\"fgColor-muted\"\n      />\n    ) : undefined\n\n    return (\n      <>\n        <TextInput\n          // support for the search param can be removed once the tree is globally avaialble.\n          // We want to focus the search box only if user navigates with ?search=1\n          autoFocus={isSearchUrl()}\n          ref={ref}\n          value={textValue}\n          onKeyDown={onKeyDown}\n          onChange={e => {\n            setTextValue(e.target.value)\n            onPreload()\n            debouncedOnSearch.current(e.target.value)\n          }}\n          sx={{display: 'flex', ...sx}}\n          aria-label=\"Go to file\"\n          aria-activedescendant={ariaActiveDescendant}\n          role={ariaHasPopup ? 'combobox' : undefined}\n          aria-controls={ariaControls}\n          aria-expanded={ariaExpanded}\n          aria-haspopup={ariaHasPopup ? 'dialog' : undefined}\n          autoCorrect=\"off\"\n          spellCheck=\"false\"\n          placeholder=\"Go to file\"\n          leadingVisual={SearchIcon}\n          trailingAction={clearAction}\n          trailingVisual={\n            clearAction\n              ? undefined\n              : () => (\n                  <AllShortcutsEnabled>\n                    <Box sx={{mr: '-6px'}}>\n                      <kbd>t</kbd>\n                    </Box>\n                  </AllShortcutsEnabled>\n                )\n          }\n          onFocus={e => {\n            onPreload()\n            e.target.select()\n            onFocus?.(e)\n          }}\n          onBlur={onBlur}\n          onClick={() => sendRepoClickEvent('FILE_TREE.SEARCH_BOX')}\n        />\n      </>\n    )\n  },\n)\n\n/**\n * Whether the URL contains ?search=1 which indicates user is searching for a file\n */\nexport function isSearchUrl() {\n  const params = new URLSearchParams(ssrSafeLocation.search)\n  return params.get('search') === '1'\n}\n\nFilesSearchBox.displayName = 'FilesSearchBox'\n","import {type FilePagePayload, isTreePayload, type PanelType} from '@github-ui/code-view-types'\nimport {useCurrentUser} from '@github-ui/current-user'\nimport safeStorage from '@github-ui/safe-storage'\nimport {ScreenSize, useScreenSize} from '@github-ui/screen-size'\nimport React, {createContext, useCallback, useContext, useEffect, useMemo, useRef, useState} from 'react'\n\nconst safeLocalStorage = safeStorage('localStorage')\n\nexport type SetPanelOpenType = (panelType: PanelType | undefined, returnFocusTarget?: HTMLElement | null) => void\n\ntype OpenPanelContextType = {\n  openPanel: PanelType | undefined\n  setOpenPanel: SetPanelOpenType\n}\n\nconst OpenPanelContext = createContext<OpenPanelContextType>({openPanel: undefined, setOpenPanel: () => undefined})\n\n/**\n * This is equivalent to a simple setState, except we will not show the\n * state as 'codeNav' or allow it to be set to 'codeNav' when on the blame page.\n * This also adds a listener to hide the panel on smaller viewports\n */\nexport function OpenPanelProvider({\n  children,\n  payload,\n  openPanelRef,\n}: {\n  children: React.ReactNode\n  payload: FilePagePayload\n  openPanelRef: React.MutableRefObject<string | undefined>\n}) {\n  const hasBlame = 'blame' in payload\n  const isTreeView = isTreePayload(payload)\n  const currentUser = useCurrentUser()\n\n  const returnFocusTargetRef = useRef<HTMLElement | null | undefined>()\n  const [rawOpenPanel, setRawOpenPanel] = useState<PanelType | undefined>(() => {\n    const storedSetting = safeLocalStorage.getItem('codeNavOpen')\n    //only use the cookie if the user isn't logged in\n    if (!currentUser && storedSetting !== '' && storedSetting !== null) {\n      return 'codeNav'\n    }\n    if (currentUser && payload.symbolsExpanded) {\n      return 'codeNav'\n    }\n  })\n\n  const openPanel = (hasBlame || isTreeView) && rawOpenPanel === 'codeNav' ? undefined : rawOpenPanel\n\n  React.useEffect(() => {\n    openPanelRef.current = openPanel\n  }, [openPanel, openPanelRef])\n\n  const setOpenPanel = useCallback(\n    (panelType: PanelType | undefined, returnFocusTarget?: HTMLElement | null) => {\n      setRawOpenPanel(currentPanel => {\n        if (currentPanel && returnFocusTargetRef.current) {\n          returnFocusTargetRef.current.focus()\n        }\n        returnFocusTargetRef.current = returnFocusTarget\n        return hasBlame || (isTreeView && panelType === 'codeNav') ? undefined : panelType\n      })\n    },\n    [hasBlame, isTreeView],\n  )\n\n  useHandlePanelScreenResize(setOpenPanel)\n\n  const contextValue: OpenPanelContextType = useMemo(() => {\n    return {\n      openPanel,\n      setOpenPanel,\n    }\n  }, [openPanel, setOpenPanel])\n\n  return <OpenPanelContext.Provider value={contextValue}>{children}</OpenPanelContext.Provider>\n}\n\n// This should be SSR safe since it won't run on the server\nfunction useHandlePanelScreenResize(setOpenPanel: (panel: PanelType | undefined) => void) {\n  const {screenSize} = useScreenSize()\n  const previousScreenSize = useRef(screenSize)\n\n  useEffect(() => {\n    // hide the panel if our previous render was on large screen size and the current size is smaller\n    // (this prevents the panel from hiding when resizing between small/medium screen sizes)\n    // or if the screenSize is a small viewport on our initial load\n    const isChangingToSmallViewport = previousScreenSize.current >= ScreenSize.large\n    const isInitialLoad = previousScreenSize.current === screenSize\n\n    if (screenSize < ScreenSize.large && (isChangingToSmallViewport || isInitialLoad)) {\n      setOpenPanel(undefined)\n    }\n\n    previousScreenSize.current = screenSize\n  }, [screenSize, setOpenPanel])\n}\n\nexport function useOpenPanel() {\n  return useContext(OpenPanelContext)\n}\n\ntry{ OpenPanelContext.displayName ||= 'OpenPanelContext' } catch {}\ntry{ OpenPanelProvider.displayName ||= 'OpenPanelProvider' } catch {}","import {verifiedFetch} from '@github-ui/verified-fetch'\n\nexport const request = async (url: string, method: string, formData: FormData) => {\n  try {\n    const response = await verifiedFetch(url, {\n      method,\n      body: formData,\n    })\n    return response.ok\n  } catch (error) {\n    return false\n  }\n}\n\nexport const deleteRequest = (url: string, feature: string) => {\n  return request(url, 'DELETE', formData(feature))\n}\n\nexport const createRequest = (url: string, feature: string) => {\n  return request(url, 'POST', formData(feature))\n}\n\nconst formData = (feature: string) => {\n  const data = new FormData()\n  data.append('feature', feature)\n  return data\n}\n","import {useState} from 'react'\n// eslint-disable-next-line no-restricted-imports\nimport {useToastContext} from '@github-ui/toast/ToastContext'\nimport {createRequest, deleteRequest} from '../services/api'\n\nexport interface FeatureRequestState {\n  inProgress: boolean\n  requested: boolean\n  dismissed: boolean\n  dismissedAt: string\n  toggleFeatureRequest: () => void\n}\n\nexport interface FeatureRequestInfo {\n  alreadyRequested: boolean\n  featureName: string\n  requestPath: string\n  dismissed: boolean\n  dismissedAt?: string\n}\n\nexport function useFeatureRequest(featureRequestInfo?: FeatureRequestInfo): FeatureRequestState {\n  const {\n    alreadyRequested = false,\n    dismissed = false,\n    dismissedAt = '',\n    featureName = '',\n    requestPath = '',\n  } = featureRequestInfo ?? {}\n  const [inProgress, setInProgress] = useState(false)\n  const [requested, setRequested] = useState(alreadyRequested)\n  const {addToast} = useToastContext()\n\n  const toggleFeatureRequest = async () => {\n    setInProgress(true)\n    const request = requested ? deleteRequest : createRequest\n    const success = await request(requestPath, featureName)\n    if (success) {\n      setRequested(!requested)\n    } else {\n      // eslint-disable-next-line @github-ui/dotcom-primer/toast-migration\n      addToast({type: 'error', message: 'Something went wrong. Please try again later.'})\n    }\n    setInProgress(false)\n  }\n\n  return {\n    inProgress,\n    requested,\n    dismissed,\n    dismissedAt,\n    toggleFeatureRequest,\n  }\n}\n","import {Link, Button, Octicon} from '@primer/react'\nimport {CheckIcon} from '@primer/octicons-react'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {useClickAnalytics} from '@github-ui/use-analytics'\n\nimport type {FeatureRequestInfo} from './types'\nimport {useFeatureRequest} from './hooks/use-feature-request'\n\nexport {useFeatureRequest} from './hooks/use-feature-request'\n\ninterface FeatureRequestOptionalProps {\n  learnMorePath?: string\n  requestMessage?: string\n  requestedMessage?: string\n}\n\nexport interface FeatureRequestProps extends FeatureRequestOptionalProps {\n  featureRequestInfo: FeatureRequestInfo\n}\n\nexport function FeatureRequest({\n  featureRequestInfo,\n  learnMorePath,\n  requestMessage,\n  requestedMessage,\n}: FeatureRequestProps) {\n  const {inProgress, requested, toggleFeatureRequest} = useFeatureRequest(featureRequestInfo)\n\n  if (!featureRequestInfo.showFeatureRequest) {\n    return null\n  }\n\n  return requested ? (\n    <CancelFeatureRequest\n      inProgress={inProgress}\n      toggleFeatureRequest={toggleFeatureRequest}\n      requestedMessage={requestedMessage}\n    />\n  ) : (\n    <RequestFeature\n      inProgress={inProgress}\n      toggleFeatureRequest={toggleFeatureRequest}\n      isEnterpriseRequest={featureRequestInfo.isEnterpriseRequest}\n      featureName={featureRequestInfo.featureName}\n      billingEntityId={featureRequestInfo.billingEntityId}\n      learnMorePath={learnMorePath}\n      requestMessage={requestMessage}\n    />\n  )\n}\n\ninterface RequestCTAProps extends FeatureRequestOptionalProps {\n  inProgress: boolean\n  toggleFeatureRequest: () => void\n  isEnterpriseRequest?: boolean\n  billingEntityId?: string\n  featureName?: string\n}\n\nexport const RequestFeature = ({\n  inProgress,\n  toggleFeatureRequest: submit,\n  billingEntityId = '',\n  isEnterpriseRequest = false,\n  featureName,\n  learnMorePath,\n  requestMessage,\n}: RequestCTAProps) => {\n  const {sendClickAnalyticsEvent} = useClickAnalytics()\n\n  const submitAndSendAnalytics = () => {\n    submit()\n\n    const cta_analytics_label =\n      isEnterpriseRequest && billingEntityId\n        ? `ref_cta:ask_enterprise_owners_for_access;ref_loc:${featureName};enterprise_id:${billingEntityId};`\n        : `ref_cta:ask_admin_for_access;ref_loc:${featureName};`\n\n    sendClickAnalyticsEvent({\n      category: 'member_feature_request',\n      action: `action.${featureName}`,\n      label: cta_analytics_label,\n    })\n  }\n\n  const learnMoreAndSendAnalytics = () => {\n    sendClickAnalyticsEvent({\n      category: 'suggestion',\n      action: `click_to_read_docs`,\n      label: `ref_cta:learn_more;ref_loc:${featureName};`,\n    })\n  }\n\n  return (\n    <>\n      <RequestCTA onClick={submitAndSendAnalytics} inProgress={inProgress} isEnterpriseRequest={isEnterpriseRequest} />\n      {requestMessage && <RequestMessage message={requestMessage} />}\n      {learnMorePath && <LearnMore onClick={learnMoreAndSendAnalytics} path={learnMorePath} />}\n    </>\n  )\n}\n\nexport const CancelFeatureRequest = ({inProgress, toggleFeatureRequest: cancel, requestedMessage}: RequestCTAProps) => {\n  return (\n    <>\n      {requestedMessage && <RequestedMessage message={requestedMessage} />}\n      <RemoveRequestCTA onClick={cancel} inProgress={inProgress} />\n    </>\n  )\n}\n\nconst RequestCTA = ({\n  onClick,\n  inProgress,\n  isEnterpriseRequest,\n}: {\n  onClick: () => void\n  inProgress: boolean\n  isEnterpriseRequest: boolean\n}) => {\n  const buttonText = isEnterpriseRequest ? 'Ask enterprise owners for access' : 'Ask admin for access'\n\n  return (\n    <Button\n      onClick={onClick}\n      variant=\"primary\"\n      disabled={inProgress}\n      {...testIdProps('feature-request-request-button')}\n    >\n      {inProgress ? 'Requesting...' : buttonText}\n    </Button>\n  )\n}\n\nconst LearnMore = ({onClick, path}: {onClick: () => void; path: string}) => {\n  return (\n    <Link href={path} onClick={onClick} {...testIdProps('feature-request-learn-more-link')}>\n      Learn more\n    </Link>\n  )\n}\n\nconst RequestMessage = ({message}: {message: string}) => <span>{message}</span>\n\nconst RequestedMessage = ({message}: {message: string}) => {\n  return (\n    <span className=\"d-inline-block color-fg-subtle mr-1\">\n      <Octicon icon={CheckIcon} />\n      {message}\n    </span>\n  )\n}\n\nconst RemoveRequestCTA = ({onClick, inProgress}: {onClick: () => void; inProgress: boolean}) => {\n  return (\n    <Link\n      className=\"color-fg-danger text-semibold\"\n      as=\"button\"\n      onClick={onClick}\n      disabled={inProgress}\n      {...testIdProps('feature-request-cancel-link')}\n    >\n      {inProgress ? 'Cancelling...' : 'Remove request'}\n    </Link>\n  )\n}\n\ntry{ FeatureRequest.displayName ||= 'FeatureRequest' } catch {}\ntry{ RequestFeature.displayName ||= 'RequestFeature' } catch {}\ntry{ CancelFeatureRequest.displayName ||= 'CancelFeatureRequest' } catch {}\ntry{ RequestCTA.displayName ||= 'RequestCTA' } catch {}\ntry{ LearnMore.displayName ||= 'LearnMore' } catch {}\ntry{ RequestMessage.displayName ||= 'RequestMessage' } catch {}\ntry{ RequestedMessage.displayName ||= 'RequestedMessage' } catch {}\ntry{ RemoveRequestCTA.displayName ||= 'RemoveRequestCTA' } catch {}","import type {ChildRoute, LoaderResult, RouteRegistration, TransitionType} from './app-routing-types'\nimport type React from 'react'\nimport type {Location} from '@remix-run/router'\n\nexport interface JsonRouteProps {\n  path: string\n  Component: React.ComponentType\n  transitionType?: TransitionType\n  shouldNavigateOnError?: boolean\n  children?: ChildRoute[]\n}\n/**\n * A utility for building a route registration for a route that consumes a JSON object (either via embedding in a\n * script tag or via a JSON fetch on React soft navigations).\n */\nexport function jsonRoute<TRouteData, TEmbeddedData>({\n  path,\n  Component,\n  /**\n   * Some routes want to handle their own errors and not just show a generic error page. In this case,\n   * the error is just handled like any other payload for the route.\n   * NOTE: We might consider replacing the shouldNavigateOnError flag with a parallel implementation to jsonRoute.\n   */\n  shouldNavigateOnError,\n  transitionType,\n  children,\n}: JsonRouteProps): RouteRegistration<TRouteData, TEmbeddedData> {\n  async function coreLoader({location}: {location: Location}): Promise<LoaderResult<TRouteData>> {\n    let response: Response\n    try {\n      const fetchPath = `${location.pathname}${location.search}`\n      response = await window.fetch(fetchPath, {\n        headers: {\n          Accept: 'application/json',\n          'X-Requested-With': 'XMLHttpRequest',\n          'X-GitHub-Target': 'dotcom',\n          'X-React-Router': 'json',\n        },\n      })\n    } catch (error) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'fetchError'},\n      }\n    }\n    if (response.redirected) {\n      return {\n        type: 'redirect',\n        url: response.url,\n      }\n    } else if (!response.ok) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'httpError', httpStatus: response.status},\n      }\n    } else {\n      try {\n        const responseJson = await response.json()\n        return {\n          type: 'loaded',\n          data: responseJson,\n          title: responseJson.title,\n        }\n      } catch (error) {\n        return {\n          type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n          error: {type: 'badResponseError'},\n        }\n      }\n    }\n  }\n\n  function loadFromEmbeddedData({embeddedData}: {embeddedData: TEmbeddedData}): {data: TRouteData; title: string} {\n    const data = embeddedData as unknown as TRouteData & {title: string}\n    return {data, title: data.title}\n  }\n\n  return {\n    path,\n    // TODO: consider wrapping Component with a component that passes payload as a prop — ideally as part of migrating\n    // away from useRoutePayload.\n    Component,\n    coreLoader,\n    loadFromEmbeddedData,\n    transitionType,\n    children,\n  }\n}\n","import safeStorage from '@github-ui/safe-storage'\nimport type {FunctionComponent} from 'react'\nimport type React from 'react'\nimport {createContext, useContext, useMemo, useState} from 'react'\n\nconst safeLocalStorage = safeStorage('localStorage')\n\nconst codeFoldingName = 'codeView.codeFolding'\nexport const codeWrappingName = 'codeView.codeWrapping'\nconst codeCenteredOption = 'codeView.centerView'\nconst openSymbolsName = 'codeView.openSymbolsOnClick'\n\nexport interface CodeViewOption {\n  name: string\n  enabled: boolean\n  setEnabled: (enabled: boolean) => void\n  label: string\n}\n\nconst codeViewOptionLabels = new Map([\n  [codeFoldingName, 'Show code folding buttons'],\n  [codeWrappingName, 'Wrap lines'],\n  [codeCenteredOption, 'Center content'],\n  [openSymbolsName, 'Open symbols on click'],\n])\n\ntype CodeViewOptionsContextType = {\n  codeFoldingOption: CodeViewOption\n  codeWrappingOption: CodeViewOption\n  codeCenterOption: CodeViewOption\n  openSymbolsOption: CodeViewOption\n}\n\nconst CodeViewOptionsContext = createContext<CodeViewOptionsContextType>({\n  codeFoldingOption: {} as CodeViewOption,\n  codeWrappingOption: {} as CodeViewOption,\n  codeCenterOption: {} as CodeViewOption,\n  openSymbolsOption: {} as CodeViewOption,\n})\n\nexport const CodeViewOptionsProvider: FunctionComponent<{children: React.ReactNode}> = ({children}) => {\n  const codeFoldingOption = useCodeViewOption(codeFoldingName, true)\n  const codeWrappingOption = useCodeViewOption(codeWrappingName, false)\n  const codeCenterOption = useCodeViewOption(codeCenteredOption, false)\n  const openSymbolsOption = useCodeViewOption(openSymbolsName, true)\n\n  const providerValue = useMemo(() => {\n    return {codeFoldingOption, codeWrappingOption, codeCenterOption, openSymbolsOption}\n  }, [codeFoldingOption, codeWrappingOption, codeCenterOption, openSymbolsOption])\n  return <CodeViewOptionsContext.Provider value={providerValue}>{children}</CodeViewOptionsContext.Provider>\n}\n\nfunction useCodeViewOption(name: string, defaultValue: boolean): CodeViewOption {\n  const localStorageValue = safeLocalStorage.getItem(name)\n  const [enabled, setEnabled] = useState(() => {\n    return localStorageValue ? localStorageValue === 'true' : defaultValue\n  })\n  const label = codeViewOptionLabels.get(name) || ''\n  return {name, enabled, setEnabled, label}\n}\n\nexport function useCodeViewOptions() {\n  return useContext(CodeViewOptionsContext)\n}\n\ntry{ CodeViewOptionsContext.displayName ||= 'CodeViewOptionsContext' } catch {}\ntry{ CodeViewOptionsProvider.displayName ||= 'CodeViewOptionsProvider' } catch {}"],"names":["appendAndFocusSearchBar","appendQuery","retainScrollPosition","returnTarget","window","dispatchEvent","CustomEvent","detail","WebWorker","onmessage","listener","worker","postMessage","request","terminate","constructor","path","job","Worker","e","console","warn","MainThreadWorker","terminated","response","data","getCookie","name","getCookies","cookies","cookie","readCookies","document","split","key","value","trim","push","setCookie","expiration","strictDomain","samesite","domain","endsWith","secure","location","protocol","expire","deleteCookie","Date","time","getTime","toUTCString","ExpandFileTreeButton","React","expanded","onToggleExpanded","className","ariaControls","textAreaId","useFilesButtonBreakpoint","variant","getTooltipDirection","ref","toggleTreeShortcut","useShortcut","isSSR","useClientValue","tooltipDirection","Button","aria-label","leadingVisual","ArrowLeftIcon","data-hotkey","hotkey","data-testid","onClick","sx","color","px","display","ExpandButton","dataHotkey","alignment","ariaLabel","testid","height","position","DuplicateOnKeydownButton","buttonFocusId","buttonHotkey","onButtonClick","onlyAddHotkeyScopeButton","displayName","FindFilesShortcut","inputRef","onFindFilesShortcut","sendRepoKeyDownEvent","useReposAnalytics","findFilesShortcut","current","focus","FileTreeContext","createContext","knownFolders","Map","dispatchKnownFolders","FileTreeControlContext","FileTreeControlProvider","children","expandAllFolders","useRef","refreshTree","shouldFetchFolders","setExpandAllFolders","useCallback","setRefreshTree","setShouldFetchFolders","useMemo","Provider","useFileTreeControlContext","useContext","getClientItemsToInsert","currentPath","clientOnlyFilePaths","existingItems","clientOnlyItemsToInsert","filePath","startsWith","relativePath","slice","length","nextDirectoryIndex","indexOf","some","item","clientOnlyItem","items","contentType","isClientOnly","splitSimplifiedTreeItem","treeItem","payloadItem","lastIndexOf","topItemName","hasSimplifiedPath","topItem","topTreeItem","set","buildReposFileTree","folders","rootItems","sortDirectoryItems","newRootItems","rootItemsUpdated","addFolder","Object","keys","sort","parent","get","totalCount","parentItems","parentItemsUpdated","fullPath","existingItemIndex","findIndex","parentItem","WrappedFileTreeRow","isActive","file","onItemSelected","getItemUrl","selectedItemRef","navigate","onRenderRow","getFileTrailingVisual","getFileIcon","sendRepoClickEvent","rowRef","showTooltip","useFileTreeTooltip","focusRowRef","mouseRowRef","isSubModule","trailingVisualData","onSelect","preventDefault","submoduleUrl","href","metaKey","ctrlKey","button","open","stopPropagation","TreeView","Item","id","containIntrinsicSize","undefined","LeadingVisual","FileSubmoduleIcon","FileIcon","span","style","PortalTooltip","contentRef","direction","screenReaderText","trailingVisual","TrailingVisual","FileTreeRow","WrappedDirectoryTreeRow","directory","isAncestorOfActive","leadingPath","getFetchUrl","navigateOnClick","isExpanded","setExpanded","useState","listItemRef","fetchFolder","incrementallyShowItems","loading","error","clearError","useFetchFolder","setItems","setTotalCount","setLoading","setError","safeSetTimeout","useSafeTimeout","folderItems","newTotalCount","newItems","newKnownFolders","type","processingTime","contentUrl","start","now","verifiedFetchJSON","ok","folderPayload","json","payload","tree","map","autoExpand","truncatedRows","pathPrefix","useEffect","setRowRef","refElem","DirectoryContents","directoryItems","inheritsActive","directoryNavigateOnClick","onExpandedChange","DirectoryIcon","SubTree","state","ErrorDialog","onRetry","onDismiss","ErrorTreeRow","message","DirectoryTreeRow","WrappedDirectoryContents","useFilesPageInfo","urlCreator","useUrlCreator","useNavigate","navigateRef","ReposFileTreeView","props","setRootItems","fetchError","newKnownRootItems","size","onMouseDown","event","Box","pb","justifyContent","p","Spinner","nav","Octicon","icon","AlertFillIcon","SearchButton","searchShortcut","IconButton","unsafeDisableTooltip","SearchIcon","fontSize","fontWeight","flexShrink","target","closest","textArea","getElementById","TreeOverlayBreakpoint","ScreenSize","xxxlarge","ReposFileTreePane","collapseTree","showTree","fileTree","treeToggleElement","treeToggleRef","searchBoxRef","repo","refInfo","isFilePath","foldersToFetch","getItemUrlOverride","headerSx","paneSx","paneContentsSx","treeContainerSx","findFileWorkerPath","headerContent","showFindFile","showRefSelectorRow","openPanel","useOpenPanel","treeLoading","setTreeLoading","setFetchError","fetchedFolders","scrollingRef","hasAttemptedToFetchFolders","ignoreNextScroll","selectedElement","query","useFileQueryContext","codeCenterOption","useCodeViewOptions","lastOpenPanel","getTreeItemUrl","initialRenderRootItems","hasDoneInitialRender","resultingTree","knownFolderReducer","innerWidth","large","folderPath","folderData","folder","focusActiveItem","selectedItemElement","scrollIntoView","endMargin","innerHeight","startMargin","behavior","setSelectedItemRef","setScrollingRef","element","setOverlayRef","screenSize","useScreenSize","showTreeOverlay","xlarge","onTreeItemSelected","displayNoneSx","parentDirPath","substring","fileTreeContextValue","portalNode","createHtmlPortalNode","exitOverlay","xxxxlarge","paneContents","maxHeight","flexDirection","alignItems","pt","mx","width","flexGrow","ReposHeaderRefSelector","buttonClassName","allowResizing","ml","whiteSpace","borderLeftColor","canEdit","Tooltip","as","Link","borderTopRightRadius","borderBottomRightRadius","borderRight","PlusIcon","to","repositoryTreePath","commitish","action","borderTopLeftRadius","borderBottomLeftRadius","currentOid","FileResultsList","commitOid","mr","mb","TreeBorder","overflowY","scrollbarGutter","div","OutPortal","node","isEmpty","mt","hidePaneSx","InPortal","enabled","SplitPageLayout","Pane","sticky","minWidth","padding","resizable","widthStorageKey","divider","regular","narrow","Overlay","returnFocusRef","onClickOutside","onEscape","top","stateInitialized","sendEvent","newState","visible","setVisible","scrollTop","scrollElement","scrollHandler","addEventListener","removeEventListener","borderBottom","borderColor","boxShadow","useTreePane","reposFileTreeId","openPanelRef","treeExpanded","updateExpandPreferences","cookieName","expandFileTreeButtonProps","currentUser","useCurrentUser","fileTreeExpandedCookie","ssrSafeDocument","initiallyExpanded","isTreeExpanded","setIsTreeExpanded","lastStateIsExpanded","expandedAsOverlay","hasManuallyCollapsed","showAsOverlay","useLayoutEffect","showingAsOverlay","shouldClose","shouldOpen","isSearchUrl","expandTree","options","expireTime","requestAnimationFrame","shouldSetCookie","Heading","setShowTooltip","showIfOverflowing","querySelector","scrollWidth","offsetWidth","onfocus","onblur","onmouseenter","onmouseleave","buttonTestLabel","hidden","data-hotkey-scope","aria-labelledby","aria-expanded","aria-controls","SidebarExpandIcon","SidebarCollapseIcon","fuzzyScore","memoize","score","findFileWorkerJob","baseList","startTime","queryWithoutBackslash","replaceAll","list","filter","hasMatch","itemA","itemB","baseCount","fetchJSON","url","memoizeCache","memoizedFetch","cache","defaultConfig","excludeDirectories","excludeSeeAllResults","actionListSx","additionalResults","config","setQuery","useCurrentRepository","internalInputRef","preloadSearch","setPreloadSearch","overlayOpen","setOverlayOpen","directories","useTreeList","load","setState","treeListUrl","treeListPath","includeDirectories","cancelled","update","files","paths","concat","getUrl","queryText","queryLine","parseQuery","colonIndex","parseInt","matches","clearMatches","useFilter","workerPath","startWorker","setMatches","lastQueryRef","workerRef","sendStats","isWorkerWorking","createWorker","performance","canFilterPreviousMatches","focusedSearchIndex","setFocusedSearchIndex","listFocusVisible","setListFocusVisible","allResultsLink","textInputContainerRef","overlayId","useOverlay","onRowClick","buildUrl","itemPath","isDirectory","hash","containerRef","listRef","useFocusZone","bindKeys","FocusKeys","ArrowVertical","HomeAndEnd","focusInStrategy","activeElement","displayMatches","matchesTruncated","listContents","maxWidth","Flash","ActionList","overflow","pr","role","match","index","includes","itemUrl","MemoizedFileResultRow","active","focused","onRender","FileResultsStatus","visibleResultCount","truncated","PrimerLink","codeNavSearchPath","owner","ownerLogin","searchTerm","outline","outlineOffset","FilesSearchBox","ariaActiveDescendant","ariaExpanded","ariaHasPopup","onKeyDown","shiftKey","altKey","blur","container","getScrollableParent","Math","min","max","onPreload","onSearch","newQuery","onBlur","contains","relatedTarget","onFocus","AnchoredOverlay","anchorRef","renderAnchor","onClose","focusZoneSettings","disabled","focusTrapSettings","align","overlayProps","screenReaderOnly","FileResultRow","positionsList","positions","leadingIcon","FileResultIcon","border","textDecoration","data-focus-visible-added","tabIndex","HighlightMatch","text","LeadingIcon","pl","FileDirectoryFillIcon","parts","lastPosition","i","Number","allowSlashWrapping","mark","textValue","setTextValue","debouncedOnSearch","debounce","clearAction","TextInput","Action","XCircleFillIcon","autoFocus","onChange","aria-activedescendant","aria-haspopup","autoCorrect","spellCheck","placeholder","trailingAction","AllShortcutsEnabled","kbd","select","params","URLSearchParams","ssrSafeLocation","search","safeLocalStorage","safeStorage","OpenPanelContext","setOpenPanel","OpenPanelProvider","hasBlame","isTreeView","isTreePayload","returnFocusTargetRef","rawOpenPanel","setRawOpenPanel","storedSetting","getItem","symbolsExpanded","panelType","returnFocusTarget","currentPanel","useHandlePanelScreenResize","previousScreenSize","isChangingToSmallViewport","isInitialLoad","contextValue","method","formData","verifiedFetch","body","deleteRequest","feature","createRequest","FormData","append","useFeatureRequest","featureRequestInfo","alreadyRequested","dismissed","dismissedAt","featureName","requestPath","inProgress","setInProgress","requested","setRequested","addToast","useToastContext","toggleFeatureRequest","FeatureRequest","learnMorePath","requestMessage","requestedMessage","showFeatureRequest","CancelFeatureRequest","RequestFeature","isEnterpriseRequest","billingEntityId","submit","sendClickAnalyticsEvent","useClickAnalytics","RequestCTA","cta_analytics_label","category","label","RequestMessage","LearnMore","cancel","RequestedMessage","RemoveRequestCTA","testIdProps","CheckIcon","jsonRoute","Component","shouldNavigateOnError","transitionType","coreLoader","fetchPath","pathname","fetch","headers","Accept","redirected","httpStatus","status","responseJson","title","loadFromEmbeddedData","embeddedData","codeFoldingName","codeWrappingName","codeCenteredOption","openSymbolsName","codeViewOptionLabels","CodeViewOptionsContext","codeFoldingOption","codeWrappingOption","openSymbolsOption","CodeViewOptionsProvider","useCodeViewOption","providerValue","defaultValue","localStorageValue","setEnabled"],"sourceRoot":""}