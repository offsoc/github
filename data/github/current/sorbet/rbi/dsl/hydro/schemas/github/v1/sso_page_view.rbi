# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::SsoPageView`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::SsoPageView`.

class Hydro::Schemas::Github::V1::SsoPageView
  sig do
    params(
      business: T.nilable(Hydro::Schemas::Github::V1::Entities::Business),
      org: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext),
      user: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(business: nil, org: nil, request_context: nil, user: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Business)) }
  def business; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Business)).void }
  def business=(value); end

  sig { void }
  def clear_business; end

  sig { void }
  def clear_org; end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_user; end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)) }
  def org; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)).void }
  def org=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def user; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def user=(value); end
end
