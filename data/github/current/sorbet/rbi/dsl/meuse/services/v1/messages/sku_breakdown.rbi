# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Meuse::Services::V1::Messages::SkuBreakdown`.
# Please instead update this file by running `bin/tapioca dsl Meuse::Services::V1::Messages::SkuBreakdown`.

class Meuse::Services::V1::Messages::SkuBreakdown
  sig do
    params(
      budget_ids: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer])),
      entitlement_details: T.nilable(Meuse::Services::V1::Messages::SkuEntitlementDetails),
      estimated_overage_charge: T.nilable(Meuse::Services::Types::Money),
      name: T.nilable(String),
      raw_quantities: T.nilable(Meuse::Services::V1::Messages::RawUsageQuantity),
      unit_of_measure: T.nilable(Meuse::Services::V1::Messages::UnitOfMeasure),
      unit_price: T.nilable(Float)
    ).void
  end
  def initialize(budget_ids: T.unsafe(nil), entitlement_details: nil, estimated_overage_charge: nil, name: nil, raw_quantities: nil, unit_of_measure: nil, unit_price: nil); end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def budget_ids; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def budget_ids=(value); end

  sig { void }
  def clear_budget_ids; end

  sig { void }
  def clear_entitlement_details; end

  sig { void }
  def clear_estimated_overage_charge; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_raw_quantities; end

  sig { void }
  def clear_unit_of_measure; end

  sig { void }
  def clear_unit_price; end

  sig { returns(T.nilable(Meuse::Services::V1::Messages::SkuEntitlementDetails)) }
  def entitlement_details; end

  sig { params(value: T.nilable(Meuse::Services::V1::Messages::SkuEntitlementDetails)).void }
  def entitlement_details=(value); end

  sig { returns(T.nilable(Meuse::Services::Types::Money)) }
  def estimated_overage_charge; end

  sig { params(value: T.nilable(Meuse::Services::Types::Money)).void }
  def estimated_overage_charge=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(T.nilable(Meuse::Services::V1::Messages::RawUsageQuantity)) }
  def raw_quantities; end

  sig { params(value: T.nilable(Meuse::Services::V1::Messages::RawUsageQuantity)).void }
  def raw_quantities=(value); end

  sig { returns(T.nilable(Meuse::Services::V1::Messages::UnitOfMeasure)) }
  def unit_of_measure; end

  sig { params(value: T.nilable(Meuse::Services::V1::Messages::UnitOfMeasure)).void }
  def unit_of_measure=(value); end

  sig { returns(Float) }
  def unit_price; end

  sig { params(value: Float).void }
  def unit_price=(value); end
end
