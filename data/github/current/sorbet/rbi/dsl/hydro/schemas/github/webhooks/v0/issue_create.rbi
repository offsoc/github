# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Webhooks::V0::IssueCreate`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Webhooks::V0::IssueCreate`.

class Hydro::Schemas::Github::Webhooks::V0::IssueCreate
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      core_event_attributes: T.nilable(Hydro::Schemas::Github::Webhooks::V0::Entities::CoreEventAttributes),
      event_hydration_attributes: T.nilable(String),
      hydration_attributes: T.nilable(Hydro::Schemas::EventHydrator::V0::Entities::IssueCreateAttributes),
      issue: T.nilable(Hydro::Schemas::Github::V1::Entities::Issue),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)
    ).void
  end
  def initialize(actor: nil, core_event_attributes: nil, event_hydration_attributes: nil, hydration_attributes: nil, issue: nil, request_context: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_core_event_attributes; end

  sig { void }
  def clear_event_hydration_attributes; end

  sig { void }
  def clear_hydration_attributes; end

  sig { void }
  def clear_issue; end

  sig { void }
  def clear_request_context; end

  sig { returns(T.nilable(Hydro::Schemas::Github::Webhooks::V0::Entities::CoreEventAttributes)) }
  def core_event_attributes; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Webhooks::V0::Entities::CoreEventAttributes)).void }
  def core_event_attributes=(value); end

  sig { returns(String) }
  def event_hydration_attributes; end

  sig { params(value: String).void }
  def event_hydration_attributes=(value); end

  sig { returns(T.nilable(Hydro::Schemas::EventHydrator::V0::Entities::IssueCreateAttributes)) }
  def hydration_attributes; end

  sig { params(value: T.nilable(Hydro::Schemas::EventHydrator::V0::Entities::IssueCreateAttributes)).void }
  def hydration_attributes=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Issue)) }
  def issue; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Issue)).void }
  def issue=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end
end
