---
summary: Create a release
description: |-
  Users with push access to the repository can create a release.

  This endpoint triggers [notifications](${externalDocsUrl}/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "[Rate limits for the API](${externalDocsUrl}/rest/using-the-rest-api/rate-limits-for-the-rest-api#about-secondary-rate-limits)" and "[Best practices for using the REST API](${externalDocsUrl}/rest/guides/best-practices-for-using-the-rest-api)."
tags:
  - repos
operationId: repos/create-release
externalDocs:
  description: API method documentation
  url: '${externalDocsUrl}/rest/releases/releases#create-a-release'
parameters:
  - $ref: '../../components/parameters/owner.yaml'
  - $ref: '../../components/parameters/repo.yaml'
requestBody:
  required: true
  content:
    application/json:
      schema:
        type: object
        properties:
          tag_name:
            type: string
            description: The name of the tag.
          target_commitish:
            type: string
            description: "Specifies the commitish value that determines where the
              Git tag is created from. Can be any branch or commit SHA. Unused if
              the Git tag already exists. Default: the repository's default branch."
          name:
            type: string
            description: The name of the release.
          body:
            type: string
            description: Text describing the contents of the tag.
          draft:
            type: boolean
            description: '`true` to create a draft (unpublished) release, `false`
              to create a published one.'
            default: false
          prerelease:
            type: boolean
            description: '`true` to identify the release as a prerelease. `false`
              to identify the release as a full release.'
            default: false
          discussion_category_name:
            type: string
            description: If specified, a discussion of the specified category is created
              and linked to the release. The value must be a category that already
              exists in the repository. For more information, see "[Managing categories
              for discussions in your repository](${externalDocsUrl}/discussions/managing-discussions-for-your-community/managing-categories-for-discussions-in-your-repository)."
          generate_release_notes:
            type: boolean
            description: 'Whether to automatically generate the name and body for this release.
              If `name` is specified, the specified name will be used; otherwise, a name will be automatically
              generated. If `body` is specified, the body will be pre-pended to the automatically generated notes.'
            default: false
          make_latest:
            type: string
            description: 'Specifies whether this release should be set as the latest release for the repository. Drafts and prereleases cannot be set as latest. Defaults to `true` for newly published releases. `legacy` specifies that the latest release should be determined based on the release creation date and higher semantic version.'
            enum:
              - 'true'
              - 'false'
              - 'legacy'
            default: true
        required:
          - tag_name
      examples:
        default:
          value:
            tag_name: v1.0.0
            target_commitish: master
            name: v1.0.0
            body: Description of the release
            draft: false
            prerelease: false
            generate_release_notes: false
responses:
  '201':
    description: Response
    content:
      application/json:
        schema:
          $ref: '../../components/schemas/release.yaml'
        examples:
          default:
            $ref: '../../components/examples/release.yaml'
    headers:
      Location:
        example: https://api.github.com/repos/octocat/Hello-World/releases/1
        schema:
          type: string
  '404':
    description: Not Found if the discussion category name is invalid
    content:
      application/json:
        schema:
          $ref: '../../components/schemas/basic-error.yaml'
  '422':
    $ref: '../../components/responses/validation_failed.yaml'
x-github-releases:
  - ghec
  - ghes: '>= 2.18'
  - api.github.com
x-github:
  triggersNotification: true
  githubCloudOnly: false
  enabledForGitHubApps: true

  category: releases
  subcategory: releases
x-github-internal:
  path: '/repos/{owner}/{repo}/releases'
  http-method: post
  service-tier: 1
  owner: '@github/package-security'
  published: true
x-githubEnterpriseOverlays:
  '<= 3.2':
    requestBody:
      required: true
      content:
        application/json:
          schema:
            properties:
              discussion_category_name:
              generate_release_notes:
          examples:
            default:
              value:
                generate_release_notes:
    responses:
      '404':
  '>= 3.3':
    requestBody:
      required: true
      content:
        application/json:
          schema:
            properties:
              discussion_category_name:
    responses:
      '404':
  '<= 3.7':
    requestBody:
      content:
        application/json:
          schema:
            properties:
              make_latest:
