apiVersion: apps/v1
kind: Deployment
metadata:
    name: gpgverify
    annotations:
        moda.github.net/inject-otel-env-vars-into-containers: "gpgverify"
spec:
    replicas: 1
    strategy:
        rollingUpdate:
            maxSurge: 1
            maxUnavailable: 0
    template:
        metadata:
            labels:
                service: gpgverify
            annotations:
                fluentbit.io/parser: logfmt_sloppy
        spec:
            restartPolicy: Always
            volumes:
                - name: ca-certificates
                  hostPath:
                    path: /etc/ssl/certs
            containers:
                - name: gpgverify
                  image: octofactory.service.private-us-east-1.github.net/moda-artifacts-docker/gpgverify:master
                  command: ["bin/gpgverify"]
                  args: ["-metrics", "-listen", "0.0.0.0:8080"]
                  imagePullPolicy: IfNotPresent
                  volumeMounts:
                    - name: ca-certificates
                      mountPath: /etc/ssl/certs
                      readOnly: true
                  env:
                    - name: LIGHTSTEP_COLLECTOR_HOST
                      valueFrom:
                        secretKeyRef:
                            name: vault-secrets
                            key: LIGHTSTEP_COLLECTOR_HOST
                    - name: LIGHTSTEP_COLLECTOR_PORT
                      valueFrom:
                        secretKeyRef:
                            name: vault-secrets
                            key: LIGHTSTEP_COLLECTOR_PORT
                    - name: GPGVERIFY_WEB_SIGNING_KEY
                      valueFrom:
                        secretKeyRef:
                            key: GPGVERIFY_WEB_SIGNING_KEY
                            name: vault-secrets
                  ports:
                    - name: gpgverify
                      containerPort: 8080
                  resources:
                    limits:
                        cpu: 0.1
                        memory: "50Mi"
                    requests:
                        cpu: 0.001
                        memory: "50Mi"
                  lifecycle:
                    preStop:
                        exec:
                            command: ["sleep", "5"]
                  readinessProbe:
                    httpGet:
                        path: /_ping
                        port: 8080
    selector:
        matchLabels:
            service: gpgverify
