<%= render "site/autofill_pw_workaround" %>

<% if hook.cli_hook? %>
  <p>
  This webhook was created by the <code>gh</code> command line tool. We'll forward webhook requests to
  the command line client for development and testing purposes. This webhook will go away when the client disconnects.
  More information about GitHub webhooks can be found in
  <a class="Link--inTextBlock" href="<%= GitHub.developer_help_url %>/webhooks/" rel="noopener noreferrer">
  our developer documentation</a>.
  </p>
<% else %>
  <p>
    We'll send a <code>POST</code> request to the URL below with details of any subscribed events.
    You can also specify which data format you'd like to receive
    (JSON, <code>x-www-form-urlencoded</code>, <em>etc</em>). More information can be found in
    <a class="Link--inTextBlock" href="<%= GitHub.developer_help_url %>/webhooks/" rel="noopener noreferrer">
    our developer documentation</a>.
  </p>
<% end %>

<hr class="bleed-flush compact">

<div class="mb-3">
  <% unless hook.cli_hook? %>
    <%= render Primer::Alpha::TextField.new(
      name: "hook[url]",
      label: "Payload URL",
      placeholder: "https://example.com/postreceive",
      autocomplete: "off",
      required: true,
      value: hook.url,
      autofocus: hook.errors[:url].present?,
      validation_message: hook.errors[:url].to_sentence.presence,
    ) %>
  <% end %>
</div>

<div class="mb-3">
  <%= render Primer::Alpha::Select.new(
    name: "hook[content_type]",
    label: "Content type",
    required: true,
  ) do |list| %>
    <% Hooks::ShowView::CONTENT_TYPES.each do |content_type, value| %>
      <% list.option(label: content_type, value: value, selected: hook.content_type == value) %>
    <% end %>
  <% end %>
</div>

<%= render "hooks/secret_field", field_name: "hook[secret]", hook_persisted: hook.persisted?, current_value: hook.secret %>

<% unless hook.cli_hook? %>
  <%= render "hooks/webhook_ssl_fields", form: form, hook: hook %>
<% end %>

<fieldset class="form-group js-hook-events-field" data-hpc>
  <legend>
    <strong id="web_hook_event_triggers">Which events would you like to trigger this webhook?</strong>
  </legend>

  <% if view.include_push_option? %>
    <div class="form-checkbox">
      <input type="radio" name="subscription-choice" <%= "checked" if view.push_event_only %>
        class="js-hook-event-choice" value="push" id="hook-event-choice-push">
      <label class="hook-event-choice" for="hook-event-choice-push">
        Just the <code>push</code> event.
      </label>
    </div>
  <% end %>

  <div class="form-checkbox">
    <input type="radio" name="subscription-choice" <%= "checked" if view.wildcard_event %>
      class="js-hook-event-choice" value="all" id="hook-event-choice-everything">
    <label class="hook-event-choice" for="hook-event-choice-everything">
      Send me <strong>everything</strong>.
    </label>
  </div>

  <div class="form-checkbox">
    <input type="radio" name="subscription-choice" <%= "checked" if view.custom_events %>
      class="js-hook-event-choice" value="custom" id="hook-event-choice-individual">
    <label class="hook-event-choice" for="hook-event-choice-individual">
      Let me select individual events.
    </label>
  </div>

  <div class="ml-4 js-hook-event-selector" <%= "hidden" unless view.custom_events %>>
    <%= check_box_tag(
      "hook[events][]",
      Hook::WildcardEvent,
      hook.events.include?(Hook::WildcardEvent),
      class: "d-none js-hook-event-checkbox js-hook-wildcard-event"
    ) %>
    <% view.hook_events.each do |event| %>
      <% next if view.hide_checkbox?(event) %>
      <div class="form-checkbox d-inline-block col-md-5 pr-1">
        <label>
          <%= check_box_tag(
            "hook[events][]",
            event.event_type,
            hook.events.include?(event.event_type),
            class: "js-hook-event-checkbox",
            id: nil
          ) %>
          <%= view.human_name(event.display_name) %>

          <% if event.feature_flag_ui_note? %>
            <span>
              <%= render Primer::Beta::Octicon.new(:lock) %>
            </span>
          <% end %>

          <span class="note">
            <p>
              <%= event.description %>
            </p>

            <p>
              <% if event.feature_flag_ui_note?%>
                This event is not yet public. If you would like to receive payloads for this event, you will need
                to explicitly choose it here.
              <% end %>
            </p>

            <p>
              <% if event.event_type == "projects_v2_item" || event.event_type == "projects_v2" %>
                Feedback is welcome in
                <a class="Link--inTextBlock" href="https://github.com/github/feedback/discussions/17405">
                this discussion</a>.
              <% elsif event.event_type == "projects_v2_status_update" %>
                Feedback is welcome in
                <a class="Link--inTextBlock" href="https://gh.io/AAr1ias">
                this discussion</a>.
              <% end %>
            </p>
          </span>
        </label>
      </div>
    <% end %>
  </div>
</fieldset>

<hr class="bleed-flush compact">

<% unless hook.cli_hook? %>
  <%= render "hooks/webhook_active", field_name: "hook[active]", active: hook.active? %>
<% end %>
