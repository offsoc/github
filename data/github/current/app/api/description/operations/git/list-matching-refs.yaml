---
summary: List matching references
description: |-
  Returns an array of references from your Git database that match the supplied name. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't exist in the repository, but existing refs start with `:ref`, they will be returned as an array.

  When you use this endpoint without providing a `:ref`, it will return an array of all the references from your Git database, including notes and stashes if they exist on the server. Anything in the namespace is returned, not just `heads` and `tags`.

  > [!NOTE]
  > You need to explicitly [request a pull request](${externalDocsUrl}/rest/pulls/pulls#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see "[Checking mergeability of pull requests](${externalDocsUrl}/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)".

  If you request matching references for a branch named `feature` but the branch `feature` doesn't exist, the response can still include other matching head refs that start with the word `feature`, such as `featureA` and `featureB`.
tags:
  - git
operationId: git/list-matching-refs
externalDocs:
  description: API method documentation
  url: '${externalDocsUrl}/rest/git/refs#list-matching-references'
parameters:
  - $ref: '../../components/parameters/owner.yaml'
  - $ref: '../../components/parameters/repo.yaml'
  - $ref: '../../components/parameters/git-ref-only.yaml'
responses:
  '200':
    description: Response
    content:
      application/json:
        schema:
          type: array
          items:
            $ref: '../../components/schemas/git-ref.yaml'
        examples:
          default:
            $ref: '../../components/examples/git-ref-items.yaml'
    headers:
      Link:
        $ref: '../../components/headers/link.yaml'
  '409':
    $ref: '../../components/responses/conflict.yaml'
x-github-releases:
  - ghec
  - ghes:
      - '>= 2.19'
  - api.github.com
x-github:
  githubCloudOnly: false
  enabledForGitHubApps: true

  category: git
  subcategory: refs
x-github-internal:
  path: '/repos/{owner}/{repo}/git/matching-refs/{ref}'
  http-method: get
  service-tier: 1
  owner: '@github/repos'
  published: true
