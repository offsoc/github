# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `cvss-suite` gem.
# Please instead update this file by running `bin/tapioca gem cvss-suite`.

# Module of this gem.
#
# source://cvss-suite//lib/cvss_suite/cvss.rb#6
module CvssSuite
  class << self
    # Returns a CVSS class by a +vector+.
    #
    # source://cvss-suite//lib/cvss_suite.rb#27
    def new(vector); end

    # source://cvss-suite//lib/cvss_suite.rb#73
    def prepare_cvss2_vector(vector); end

    # source://cvss-suite//lib/cvss_suite.rb#58
    def prepare_vector(vector); end

    # source://cvss-suite//lib/cvss_suite.rb#52
    def version; end
  end
end

# source://cvss-suite//lib/cvss_suite.rb#17
CvssSuite::CVSS_VECTOR_BEGINNINGS = T.let(T.unsafe(nil), Array)

# This class represents any CVSS vector. Do not instantiate this class!
#
# source://cvss-suite//lib/cvss_suite/cvss.rb#9
class CvssSuite::Cvss
  # Creates a new CVSS vector by a +vector+.
  #
  # Raises an exception if it is called on Cvss class.
  #
  # @raise [CvssSuite::Errors::InvalidParentClass]
  # @return [Cvss] a new instance of Cvss
  #
  # source://cvss-suite//lib/cvss_suite/cvss.rb#18
  def initialize(vector); end

  # Metric of a CVSS vector.
  #
  # source://cvss-suite//lib/cvss_suite/cvss.rb#12
  def base; end

  # Returns the severity of the CVSS vector.
  #
  # source://cvss-suite//lib/cvss_suite/cvss.rb#29
  def severity; end

  # Returns the vector itself.
  #
  # source://cvss-suite//lib/cvss_suite/cvss.rb#51
  def vector; end

  private

  # @raise [CvssSuite::Errors::InvalidVector]
  #
  # source://cvss-suite//lib/cvss_suite/cvss.rb#67
  def check_validity; end

  # source://cvss-suite//lib/cvss_suite/cvss.rb#57
  def extract_metrics; end

  # source://cvss-suite//lib/cvss_suite/cvss.rb#71
  def required_amount_of_properties; end
end

# This class represents a CVSS vector in version 2.
#
# source://cvss-suite//lib/cvss_suite/cvss2/cvss2.rb#14
class CvssSuite::Cvss2 < ::CvssSuite::Cvss31AndBefore
  # Returns the Base Score of the CVSS vector.
  #
  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2.rb#42
  def base_score; end

  # Returns the Environmental Score of the CVSS vector.
  #
  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2.rb#55
  def environmental_score; end

  # Returns the severity of the CVSSv2 vector.
  # https://nvd.nist.gov/vuln-metrics/cvss
  #
  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2.rb#23
  def severity; end

  # Returns the Temporal Score of the CVSS vector.
  #
  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2.rb#49
  def temporal_score; end

  # Returns the Version of the CVSS vector.
  #
  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2.rb#17
  def version; end

  private

  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2.rb#63
  def init_metrics; end
end

# This class represents a CVSS Base metric in version 2.
#
# source://cvss-suite//lib/cvss_suite/cvss2/cvss2_base.rb#12
class CvssSuite::Cvss2Base < ::CvssSuite::CvssMetric
  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2_base.rb#15
  def access_complexity; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2_base.rb#15
  def access_vector; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2_base.rb#15
  def authentication; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2_base.rb#15
  def availability_impact; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2_base.rb#15
  def confidentiality_impact; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2_base.rb#15
  def integrity_impact; end

  # Returns the base score of the CVSS vector. The calculation is based on formula version 2.10 .
  # See CVSS documentation for further information https://www.first.org/cvss/v2/guide#i3.2.1 .
  #
  # Takes +Security+ +Requirement+ +Impacts+ for calculating environmental score.
  #
  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2_base.rb#23
  def score(sr_cr_score = T.unsafe(nil), sr_ir_score = T.unsafe(nil), sr_ar_score = T.unsafe(nil)); end

  private

  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2_base.rb#76
  def calc_exploitability; end

  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2_base.rb#68
  def calc_impact(sr_cr_score, sr_ir_score, sr_ar_score); end

  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2_base.rb#35
  def init_properties; end
end

# This class represents a CVSS Environmental metric in version 2.
#
# source://cvss-suite//lib/cvss_suite/cvss2/cvss2_environmental.rb#12
class CvssSuite::Cvss2Environmental < ::CvssSuite::CvssMetric
  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2_environmental.rb#15
  def collateral_damage_potential; end

  # Returns score of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2_environmental.rb#20
  def score(base, temporal_score); end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2_environmental.rb#15
  def security_requirements_ar; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2_environmental.rb#15
  def security_requirements_cr; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2_environmental.rb#15
  def security_requirements_ir; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2_environmental.rb#15
  def target_distribution; end

  private

  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2_environmental.rb#31
  def init_properties; end
end

# This class represents a CVSS Temporal metric in version 2.
#
# source://cvss-suite//lib/cvss_suite/cvss2/cvss2_temporal.rb#12
class CvssSuite::Cvss2Temporal < ::CvssSuite::CvssMetric
  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2_temporal.rb#15
  def exploitability; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2_temporal.rb#15
  def remediation_level; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2_temporal.rb#15
  def report_confidence; end

  # Returns score of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2_temporal.rb#19
  def score; end

  private

  # source://cvss-suite//lib/cvss_suite/cvss2/cvss2_temporal.rb#27
  def init_properties; end
end

# This class represents a CVSS vector in version 3.0.
#
# source://cvss-suite//lib/cvss_suite/cvss3/cvss3.rb#14
class CvssSuite::Cvss3 < ::CvssSuite::Cvss31AndBefore
  # Returns the Base Score of the CVSS vector.
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3.rb#23
  def base_score; end

  # Returns the Environmental Score of the CVSS vector.
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3.rb#36
  def environmental_score; end

  # Returns the Temporal Score of the CVSS vector.
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3.rb#30
  def temporal_score; end

  # Returns the vector itself.
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3.rb#44
  def vector; end

  # Returns the Version of the CVSS vector.
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3.rb#17
  def version; end

  private

  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3.rb#50
  def init_metrics; end
end

# This class represents a CVSS vector in version 3.1.
#
# source://cvss-suite//lib/cvss_suite/cvss31/cvss31.rb#15
class CvssSuite::Cvss31 < ::CvssSuite::Cvss31AndBefore
  # Returns the Base Score of the CVSS vector.
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31.rb#26
  def base_score; end

  # Returns the Environmental Score of the CVSS vector.
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31.rb#41
  def environmental_score; end

  # Returns the Temporal Score of the CVSS vector.
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31.rb#34
  def temporal_score; end

  # Returns the vector itself.
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31.rb#49
  def vector; end

  # Returns the Version of the CVSS vector.
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31.rb#19
  def version; end

  private

  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31.rb#55
  def init_metrics; end
end

# This class represents any CVSS vector. Do not instantiate this class!
#
# source://cvss-suite//lib/cvss_suite/cvss_31_and_before.rb#11
class CvssSuite::Cvss31AndBefore < ::CvssSuite::Cvss
  # Creates a new CVSS vector by a +vector+, for all CVSS versions through 3.1.
  #
  # Raises an exception if it is called on Cvss31AndBefore class.
  #
  # @raise [CvssSuite::Errors::InvalidParentClass]
  # @return [Cvss31AndBefore] a new instance of Cvss31AndBefore
  #
  # source://cvss-suite//lib/cvss_suite/cvss_31_and_before.rb#20
  def initialize(vector); end

  # Metric of a CVSS vector for CVSS 2, 3, 3.1.
  #
  # source://cvss-suite//lib/cvss_suite/cvss_31_and_before.rb#14
  def environmental; end

  # Returns the Overall Score of the CVSS vector.
  #
  # source://cvss-suite//lib/cvss_suite/cvss_31_and_before.rb#41
  def overall_score; end

  # Metric of a CVSS vector for CVSS 2, 3, 3.1.
  #
  # source://cvss-suite//lib/cvss_suite/cvss_31_and_before.rb#14
  def temporal; end

  # Returns if CVSS vector is valid.
  #
  # @return [Boolean]
  #
  # source://cvss-suite//lib/cvss_suite/cvss_31_and_before.rb#28
  def valid?; end

  private

  # source://cvss-suite//lib/cvss_suite/cvss_31_and_before.rb#51
  def allowed_abbreviations; end

  # source://cvss-suite//lib/cvss_suite/cvss_31_and_before.rb#57
  def check_metrics_validity; end
end

# This class represents a CVSS Base metric in version 3.1.
#
# source://cvss-suite//lib/cvss_suite/cvss31/cvss31_base.rb#13
class CvssSuite::Cvss31Base < ::CvssSuite::CvssMetric
  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_base.rb#17
  def attack_complexity; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_base.rb#17
  def attack_vector; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_base.rb#17
  def availability; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_base.rb#17
  def confidentiality; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_base.rb#17
  def integrity; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_base.rb#17
  def privileges_required; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_base.rb#17
  def scope; end

  # Returns score of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_base.rb#22
  def score; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_base.rb#17
  def user_interaction; end

  private

  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_base.rb#47
  def init_properties; end
end

# This class represents a CVSS Environmental metric in version 3.1.
#
# source://cvss-suite//lib/cvss_suite/cvss31/cvss31_environmental.rb#14
class CvssSuite::Cvss31Environmental < ::CvssSuite::CvssMetric
  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_environmental.rb#17
  def availability_requirement; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_environmental.rb#17
  def confidentiality_requirement; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_environmental.rb#17
  def integrity_requirement; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_environmental.rb#17
  def modified_attack_complexity; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_environmental.rb#17
  def modified_attack_vector; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_environmental.rb#17
  def modified_availability; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_environmental.rb#17
  def modified_confidentiality; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_environmental.rb#17
  def modified_integrity; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_environmental.rb#17
  def modified_privileges_required; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_environmental.rb#17
  def modified_scope; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_environmental.rb#17
  def modified_user_interaction; end

  # Returns score of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_environmental.rb#24
  def score(base, temporal); end

  private

  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_environmental.rb#177
  def calculate_score(modified_impact_sub_score, modified_exploitability_sub_score, temporal_score); end

  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_environmental.rb#50
  def init_properties; end

  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_environmental.rb#134
  def isc_modified; end

  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_environmental.rb#157
  def modified_exploitability_sub(privilege_score); end

  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_environmental.rb#118
  def modified_impact_sub(isc_modified); end
end

# This module includes methods which are used by the CVSS 3 classes.
#
# source://cvss-suite//lib/cvss_suite/helpers/cvss31_helper.rb#9
module CvssSuite::Cvss31Helper
  class << self
    # Since CVSS 3 all float values are rounded up, therefore this method is used
    # instead of the mathematically correct method round().
    #
    # source://cvss-suite//lib/cvss_suite/helpers/cvss31_helper.rb#13
    def round_up(float); end
  end
end

# This class represents a CVSS Temporal metric in version 3.1.
#
# source://cvss-suite//lib/cvss_suite/cvss31/cvss31_temporal.rb#12
class CvssSuite::Cvss31Temporal < ::CvssSuite::CvssMetric
  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_temporal.rb#15
  def exploit_code_maturity; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_temporal.rb#15
  def remediation_level; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_temporal.rb#15
  def report_confidence; end

  # Returns score of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_temporal.rb#19
  def score; end

  private

  # source://cvss-suite//lib/cvss_suite/cvss31/cvss31_temporal.rb#27
  def init_properties; end
end

# This class represents a CVSS Base metric in version 3.
#
# source://cvss-suite//lib/cvss_suite/cvss3/cvss3_base.rb#13
class CvssSuite::Cvss3Base < ::CvssSuite::CvssMetric
  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_base.rb#16
  def attack_complexity; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_base.rb#16
  def attack_vector; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_base.rb#16
  def availability; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_base.rb#16
  def confidentiality; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_base.rb#16
  def integrity; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_base.rb#16
  def privileges_required; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_base.rb#16
  def scope; end

  # Returns score of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_base.rb#21
  def score; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_base.rb#16
  def user_interaction; end

  private

  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_base.rb#46
  def init_properties; end
end

# This class represents a CVSS Environmental metric in version 3.
#
# source://cvss-suite//lib/cvss_suite/cvss3/cvss3_environmental.rb#13
class CvssSuite::Cvss3Environmental < ::CvssSuite::CvssMetric
  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_environmental.rb#16
  def availability_requirement; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_environmental.rb#16
  def confidentiality_requirement; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_environmental.rb#16
  def integrity_requirement; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_environmental.rb#16
  def modified_attack_complexity; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_environmental.rb#16
  def modified_attack_vector; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_environmental.rb#16
  def modified_availability; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_environmental.rb#16
  def modified_confidentiality; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_environmental.rb#16
  def modified_integrity; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_environmental.rb#16
  def modified_privileges_required; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_environmental.rb#16
  def modified_scope; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_environmental.rb#16
  def modified_user_interaction; end

  # Returns score of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_environmental.rb#24
  def score(base, temporal); end

  private

  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_environmental.rb#177
  def calculate_score(modified_impact_sub_score, modified_exploitability_sub_score, temporal_score); end

  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_environmental.rb#50
  def init_properties; end

  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_environmental.rb#134
  def isc_modified; end

  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_environmental.rb#157
  def modified_exploitability_sub(privilege_score); end

  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_environmental.rb#118
  def modified_impact_sub(isc_modified); end
end

# This module includes methods which are used by the CVSS 3 classes.
#
# source://cvss-suite//lib/cvss_suite/helpers/cvss3_helper.rb#9
module CvssSuite::Cvss3Helper
  class << self
    # Since CVSS 3 the Privilege Required score depends on the selected value of the Scope metric.
    # This method takes a +Privilege+ +Required+ and a +Scope+ metric and returns the newly calculated score.
    #
    # source://cvss-suite//lib/cvss_suite/helpers/cvss3_helper.rb#20
    def privileges_required_score(privileges_required, scope); end

    # Since CVSS 3 all float values are rounded up, therefore this method is used
    # instead of the mathematically correct method round().
    #
    # source://cvss-suite//lib/cvss_suite/helpers/cvss3_helper.rb#13
    def round_up(float); end
  end
end

# This class represents a CVSS Temporal metric in version 3.
#
# source://cvss-suite//lib/cvss_suite/cvss3/cvss3_temporal.rb#12
class CvssSuite::Cvss3Temporal < ::CvssSuite::CvssMetric
  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_temporal.rb#15
  def exploit_code_maturity; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_temporal.rb#15
  def remediation_level; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_temporal.rb#15
  def report_confidence; end

  # Returns score of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_temporal.rb#19
  def score; end

  private

  # source://cvss-suite//lib/cvss_suite/cvss3/cvss3_temporal.rb#27
  def init_properties; end
end

# This class represents a CVSS vector in version 4.0.
#
# source://cvss-suite//lib/cvss_suite/cvss40/cvss40.rb#17
class CvssSuite::Cvss40 < ::CvssSuite::Cvss40AndLater
  # Returns the vector itself.
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40.rb#27
  def vector; end

  # Returns the Version of the CVSS vector.
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40.rb#21
  def version; end

  private

  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40.rb#33
  def init_metrics; end
end

# This class represents a CVSS Threat metric in version 3.1.
#
# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_all_up.rb#14
class CvssSuite::Cvss40AllUp < ::CvssSuite::CvssMetric
  # @return [Cvss40AllUp] a new instance of Cvss40AllUp
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_all_up.rb#21
  def initialize(properties, base, threat, environmental, environmental_security, supplemental); end

  # Returns score of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_all_up.rb#17
  def score; end

  private

  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_all_up.rb#33
  def init_properties; end
end

# This class represents any CVSS vector. Do not instantiate this class!
#
# source://cvss-suite//lib/cvss_suite/cvss_40_and_later.rb#11
class CvssSuite::Cvss40AndLater < ::CvssSuite::Cvss
  # Creates a new CVSS vector by a +vector+, for all CVSS versions from 4.0.
  #
  # Raises an exception if it is called on Cvss40AndLater class.
  #
  # @raise [CvssSuite::Errors::InvalidParentClass]
  # @return [Cvss40AndLater] a new instance of Cvss40AndLater
  #
  # source://cvss-suite//lib/cvss_suite/cvss_40_and_later.rb#20
  def initialize(vector); end

  # Metric of a CVSS vector for CVSS 2, 3, 3.1.
  #
  # source://cvss-suite//lib/cvss_suite/cvss_40_and_later.rb#14
  def environmental; end

  # Returns the Overall Score of the CVSS vector.
  #
  # source://cvss-suite//lib/cvss_suite/cvss_40_and_later.rb#39
  def overall_score; end

  # Metric of a CVSS vector for CVSS 2, 3, 3.1.
  #
  # source://cvss-suite//lib/cvss_suite/cvss_40_and_later.rb#14
  def temporal; end

  # Returns if CVSS vector is valid.
  #
  # @return [Boolean]
  #
  # source://cvss-suite//lib/cvss_suite/cvss_40_and_later.rb#28
  def valid?; end
end

# This class represents a CVSS Base metric in version 4.0.
#
# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_base.rb#13
class CvssSuite::Cvss40Base < ::CvssSuite::CvssMetric
  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_base.rb#17
  def attack_complexity; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_base.rb#17
  def attack_requirements; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_base.rb#17
  def attack_vector; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_base.rb#17
  def privileges_required; end

  # Returns score of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_base.rb#23
  def score; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_base.rb#17
  def subsequent_system_availability; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_base.rb#17
  def subsequent_system_confidentiality; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_base.rb#17
  def subsequent_system_integrity; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_base.rb#17
  def user_interaction; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_base.rb#17
  def vulnerable_system_availability; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_base.rb#17
  def vulnerable_system_confidentiality; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_base.rb#17
  def vulnerable_system_integrity; end

  private

  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_base.rb#29
  def init_properties; end
end

# This class performs much of the score calculation logic for CVSS 4.0.
# It is heavily ported from the m and scoring methods in https://github.com/FIRSTdotorg/cvss-v4-calculator/blob/ac71416d935ad2ac87cd107ff87024561ea954a7/app.js#L121
# This class has a few rubocop exclusions but maintaining parity with the ported
#  code seems more valuable than trying to follow the cops in this case.
#
# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_calc_helper.rb#11
class CvssSuite::Cvss40CalcHelper
  include ::CvssSuite::Cvss40Constants

  # @return [Cvss40CalcHelper] a new instance of Cvss40CalcHelper
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_calc_helper.rb#14
  def initialize(cvss_property_bag); end

  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_calc_helper.rb#353
  def concat_and_stringify(first, second, third, fourth, fifth, sixth); end

  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_calc_helper.rb#373
  def extract_value_metric(metric, str); end

  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_calc_helper.rb#345
  def get_eq_maxes(lookup, eq_value); end

  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_calc_helper.rb#18
  def m(metric); end

  # @return [Boolean]
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_calc_helper.rb#349
  def nil?(value); end

  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_calc_helper.rb#369
  def parse_int(string_to_parse); end

  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_calc_helper.rb#40
  def retrieve_macro_vector; end

  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_calc_helper.rb#125
  def score; end

  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_calc_helper.rb#363
  def subtract_or_nil(left, right); end

  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_calc_helper.rb#357
  def sum_or_nil(values); end

  # rails defines this method on String, so we need to avoid polluting the
  #  String class to preserve Rails behavior.
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_calc_helper.rb#391
  def truncate(string_to_truncate, truncate_to); end
end

# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_constants_macro_vector_lookup.rb#2
module CvssSuite::Cvss40Constants; end

# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_constants_levels.rb#9
CvssSuite::Cvss40Constants::AC_LEVELS = T.let(T.unsafe(nil), Hash)

# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_constants_levels.rb#22
CvssSuite::Cvss40Constants::AR_LEVELS = T.let(T.unsafe(nil), Hash)

# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_constants_levels.rb#10
CvssSuite::Cvss40Constants::AT_LEVELS = T.let(T.unsafe(nil), Hash)

# These constants were almost directly ported from the CVSS 4.0 calculator code found at https://github.com/FIRSTdotorg/cvss-v4-calculator/blob/ac71416d935ad2ac87cd107ff87024561ea954a7/app.js#L278C17-L278C18
#
# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_constants_levels.rb#5
CvssSuite::Cvss40Constants::AV_LEVELS = T.let(T.unsafe(nil), Hash)

# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_constants_levels.rb#20
CvssSuite::Cvss40Constants::CR_LEVELS = T.let(T.unsafe(nil), Hash)

# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_constants_levels.rb#24
CvssSuite::Cvss40Constants::E_LEVELS = T.let(T.unsafe(nil), Hash)

# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_constants_levels.rb#21
CvssSuite::Cvss40Constants::IR_LEVELS = T.let(T.unsafe(nil), Hash)

# These constants were almost directly ported from the CVSS 4.0 calculator code found at https://github.com/FIRSTdotorg/cvss-v4-calculator/blob/ac71416d935ad2ac87cd107ff87024561ea954a7/cvss_lookup.js#L1
#
# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_constants_macro_vector_lookup.rb#5
CvssSuite::Cvss40Constants::LOOKUP = T.let(T.unsafe(nil), Hash)

# These constants were almost directly ported from the CVSS 4.0 calculator code found at https://github.com/FIRSTdotorg/cvss-v4-calculator/blob/ac71416d935ad2ac87cd107ff87024561ea954a7/max_composed.js#L4
#
# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_constants_max_composed.rb#5
CvssSuite::Cvss40Constants::MAX_COMPOSED = T.let(T.unsafe(nil), Hash)

# These constants were almost directly ported from the CVSS 4.0 calculator code found at https://github.com/FIRSTdotorg/cvss-v4-calculator/blob/ac71416d935ad2ac87cd107ff87024561ea954a7/max_severity.js#L1
#
# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_constants_max_severity.rb#4
CvssSuite::Cvss40Constants::MAX_SEVERITY = T.let(T.unsafe(nil), Hash)

# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_constants_levels.rb#6
CvssSuite::Cvss40Constants::PR_LEVELS = T.let(T.unsafe(nil), Hash)

# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_constants_levels.rb#18
CvssSuite::Cvss40Constants::SA_LEVELS = T.let(T.unsafe(nil), Hash)

# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_constants_levels.rb#16
CvssSuite::Cvss40Constants::SC_LEVELS = T.let(T.unsafe(nil), Hash)

# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_constants_levels.rb#17
CvssSuite::Cvss40Constants::SI_LEVELS = T.let(T.unsafe(nil), Hash)

# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_constants_levels.rb#7
CvssSuite::Cvss40Constants::UI_LEVELS = T.let(T.unsafe(nil), Hash)

# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_constants_levels.rb#14
CvssSuite::Cvss40Constants::VA_LEVELS = T.let(T.unsafe(nil), Hash)

# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_constants_levels.rb#12
CvssSuite::Cvss40Constants::VC_LEVELS = T.let(T.unsafe(nil), Hash)

# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_constants_levels.rb#13
CvssSuite::Cvss40Constants::VI_LEVELS = T.let(T.unsafe(nil), Hash)

# This class represents a CVSS Threat metric in version 4.0.
#
# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_environmental.rb#12
class CvssSuite::Cvss40Environmental < ::CvssSuite::CvssMetric
  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_environmental.rb#15
  def modified_attack_complexity; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_environmental.rb#15
  def modified_attack_requirements; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_environmental.rb#15
  def modified_attack_vector; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_environmental.rb#15
  def modified_privileges_required; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_environmental.rb#15
  def modified_subsequent_system_availability; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_environmental.rb#15
  def modified_subsequent_system_confidentiality; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_environmental.rb#15
  def modified_subsequent_system_integrity; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_environmental.rb#15
  def modified_user_interaction; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_environmental.rb#15
  def modified_vulnerable_system_availability; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_environmental.rb#15
  def modified_vulnerable_system_confidentiality; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_environmental.rb#15
  def modified_vulnerable_system_integrity; end

  # Returns score of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_environmental.rb#23
  def score; end

  private

  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_environmental.rb#29
  def init_properties; end
end

# This class represents a CVSS Environmental Security metric in version 4.0.
#
# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_environmental_security.rb#12
class CvssSuite::Cvss40EnvironmentalSecurity < ::CvssSuite::CvssMetric
  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_environmental_security.rb#15
  def availability_requirements; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_environmental_security.rb#15
  def confidentiality_requirements; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_environmental_security.rb#15
  def integrity_requirements; end

  # Returns score of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_environmental_security.rb#19
  def score; end

  private

  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_environmental_security.rb#25
  def init_properties; end
end

# This class represents a CVSS Temporal metric in version 3.1.
#
# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_supplemental.rb#12
class CvssSuite::Cvss40Supplemental < ::CvssSuite::CvssMetric
  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_supplemental.rb#15
  def automatable; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_supplemental.rb#15
  def provider_urgency; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_supplemental.rb#15
  def recovery; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_supplemental.rb#15
  def safety; end

  # Returns score of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_supplemental.rb#20
  def score; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_supplemental.rb#15
  def value_density; end

  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_supplemental.rb#15
  def vulnerability_response_effort; end

  private

  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_supplemental.rb#28
  def init_properties; end
end

# This class represents a CVSS Threat metric in version 3.1.
#
# source://cvss-suite//lib/cvss_suite/cvss40/cvss40_threat.rb#12
class CvssSuite::Cvss40Threat < ::CvssSuite::CvssMetric
  # Property of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_threat.rb#15
  def exploit_maturity; end

  # Returns score of this metric
  #
  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_threat.rb#19
  def score; end

  private

  # source://cvss-suite//lib/cvss_suite/cvss40/cvss40_threat.rb#25
  def init_properties; end
end

# This class represents any CVSS metric.
#
# source://cvss-suite//lib/cvss_suite/cvss_metric.rb#9
class CvssSuite::CvssMetric
  # Creates a new CVSS metric by +properties+
  #
  # @return [CvssMetric] a new instance of CvssMetric
  #
  # source://cvss-suite//lib/cvss_suite/cvss_metric.rb#12
  def initialize(selected_properties); end

  # Returns number of properties for this metric.
  #
  # source://cvss-suite//lib/cvss_suite/cvss_metric.rb#29
  def count; end

  # We aggregate these in some other classes
  #
  # source://cvss-suite//lib/cvss_suite/cvss_metric.rb#35
  def properties; end

  # Returns if the metric is valid.
  #
  # @return [Boolean]
  #
  # source://cvss-suite//lib/cvss_suite/cvss_metric.rb#20
  def valid?; end

  private

  # source://cvss-suite//lib/cvss_suite/cvss_metric.rb#39
  def extract_selected_values_from(selected_properties); end
end

# This class represents a CVSS property of a CVSS metric.
#
# source://cvss-suite//lib/cvss_suite/cvss_property.rb#9
class CvssSuite::CvssProperty
  # Creates a new CVSS property by a +property+.
  #
  # +Property+ needs to consist of a name, a abbreviation,
  # the possible positions in the CVSS vector, a weight, and the
  # available values for the property.
  #
  # @return [CvssProperty] a new instance of CvssProperty
  #
  # source://cvss-suite//lib/cvss_suite/cvss_property.rb#17
  def initialize(property); end

  # Returns the abbreviation of the property.
  #
  # source://cvss-suite//lib/cvss_suite/cvss_property.rb#32
  def abbreviation; end

  # Returns the full name of the property.
  #
  # source://cvss-suite//lib/cvss_suite/cvss_property.rb#25
  def name; end

  # Returns whether a selected_value is set
  #
  # @return [Boolean]
  #
  # source://cvss-suite//lib/cvss_suite/cvss_property.rb#98
  def non_selected?; end

  # Returns the possible positions in the CVSS vector of the property.
  #
  # source://cvss-suite//lib/cvss_suite/cvss_property.rb#46
  def position; end

  # Returns the score of the selected value.
  #
  # source://cvss-suite//lib/cvss_suite/cvss_property.rb#67
  def score; end

  # Returns the selected value of the property.
  #
  # source://cvss-suite//lib/cvss_suite/cvss_property.rb#53
  def selected_value; end

  # Sets the default value.
  #
  # source://cvss-suite//lib/cvss_suite/cvss_property.rb#87
  def set_default_value; end

  # Sets the selected value by a +value+.
  #
  # source://cvss-suite//lib/cvss_suite/cvss_property.rb#74
  def set_selected_value(selected_value); end

  # Returns true if the property is valid.
  #
  # @return [Boolean]
  #
  # source://cvss-suite//lib/cvss_suite/cvss_property.rb#60
  def valid?; end

  # Returns all available values of the property.
  #
  # source://cvss-suite//lib/cvss_suite/cvss_property.rb#39
  def values; end
end

# This will define classed errors to be expected
#
# source://cvss-suite//lib/cvss_suite/errors.rb#9
module CvssSuite::Errors; end

# The base error class to be inherited by more specific classes
#
# source://cvss-suite//lib/cvss_suite/errors.rb#12
class CvssSuite::Errors::CvssError < ::StandardError
  # @return [CvssError] a new instance of CvssError
  #
  # source://cvss-suite//lib/cvss_suite/errors.rb#15
  def initialize(message); end

  # Returns the value of attribute message.
  #
  # source://cvss-suite//lib/cvss_suite/errors.rb#13
  def message; end

  # Sets the attribute message
  #
  # @param value the value to set the attribute message to.
  #
  # source://cvss-suite//lib/cvss_suite/errors.rb#13
  def message=(_arg0); end
end

# source://cvss-suite//lib/cvss_suite/errors.rb#23
class CvssSuite::Errors::InvalidParentClass < ::ArgumentError; end

# source://cvss-suite//lib/cvss_suite/errors.rb#21
class CvssSuite::Errors::InvalidVector < ::RuntimeError; end

# This class represents a invalid CVSS vector.
#
# source://cvss-suite//lib/cvss_suite/invalid_cvss.rb#9
class CvssSuite::InvalidCvss < ::CvssSuite::Cvss
  #
  # Creates a new invalid CVSS vector.
  #
  # @return [InvalidCvss] a new instance of InvalidCvss
  #
  # source://cvss-suite//lib/cvss_suite/invalid_cvss.rb#13
  def initialize; end

  # Since this is an invalid CVSS vector, it always throws an exception.
  #
  # source://cvss-suite//lib/cvss_suite/invalid_cvss.rb#30
  def base_score; end

  # Since this is an invalid CVSS vector, it always throws an exception.
  #
  # source://cvss-suite//lib/cvss_suite/invalid_cvss.rb#42
  def environmental_score; end

  # Since this is an invalid CVSS vector, it always throws an exception.
  #
  # source://cvss-suite//lib/cvss_suite/invalid_cvss.rb#36
  def temporal_score; end

  # Since this is an invalid CVSS vector, it always returns false.
  #
  # @return [Boolean]
  #
  # source://cvss-suite//lib/cvss_suite/invalid_cvss.rb#18
  def valid?; end

  # Since this is an invalid CVSS vector, it always throws an exception.
  #
  # source://cvss-suite//lib/cvss_suite/invalid_cvss.rb#24
  def version; end
end

# source://cvss-suite//lib/cvss_suite/version.rb#7
CvssSuite::VERSION = T.let(T.unsafe(nil), String)
