# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::ProfilePinDestroy`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::ProfilePinDestroy`.

class Hydro::Schemas::Github::V1::ProfilePinDestroy
  sig do
    params(
      gist_id: T.nilable(Integer),
      internal_view: T.nilable(T::Boolean),
      organization: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization),
      position: T.nilable(Integer),
      repository_id: T.nilable(Integer),
      user: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(gist_id: nil, internal_view: nil, organization: nil, position: nil, repository_id: nil, user: nil); end

  sig { void }
  def clear_gist_id; end

  sig { void }
  def clear_internal_view; end

  sig { void }
  def clear_organization; end

  sig { void }
  def clear_position; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_user; end

  sig { returns(Integer) }
  def gist_id; end

  sig { params(value: Integer).void }
  def gist_id=(value); end

  sig { returns(T::Boolean) }
  def internal_view; end

  sig { params(value: T::Boolean).void }
  def internal_view=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)) }
  def organization; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)).void }
  def organization=(value); end

  sig { returns(Integer) }
  def position; end

  sig { params(value: Integer).void }
  def position=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def user; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def user=(value); end
end
