#!/usr/bin/env safe-ruby
# frozen_string_literal: true

require_relative "../config/environment"

unless Rails.env.development?
  raise "This is a dev-only script"
end

class SetupInsights

  APP_NAME = "insights-app"

  def app
    Integration.find_by(name: APP_NAME)
  end

  def create_app
    return app if app
    create_integration!
    app
  end

  def update_app
    return unless app

    app.update!(integration_attributes)
    update_installations
    app
  end

  def update_installations
    return unless app

    app.reload
    app.versions.each do |version|
      next if version.number == app.latest_version.number

      UpgradeIntegrationInstallationVersionJob.perform_now \
        app.id,
        version.number,
        app.latest_version.number
    end
  end

  def destroy_app
    IntegrationInstallTrigger.where(integration: app).delete_all
    apps = Integration.where(name: APP_NAME)
    apps.destroy_all
  end

  def get_private_key
    key = app.generate_key(creator: GitHub.trusted_oauth_apps_owner)
    key.private_key.to_pem
  end

  def enable_insights_feature_flags
    GitHub.flipper[:insights_enabled].enable
    GitHub.flipper[:insights_publish_enabled].enable
  end

  private

  def integration_attributes
    {
      owner: GitHub.trusted_oauth_apps_owner,
      name: APP_NAME,
      url: "http://localhost",
      key: "Iv1.31cfe872d768ac76",
      default_permissions: { "metadata" => :read,
                             "contents" => :read,
                             "issues" => :read,
                             "statuses" => :read,
                             "pull_requests" => :read,
                             "members" => :read,
                             "organization_projects" => :read, },
      default_events: %w(pull_request member push repository team),
      public: true,
      hook_attributes: { url: "http://localhost:7011/webhooks", active: true },
      setup_url: File.join("http://localhost:5000", "/public/setup"),
      slug: APP_NAME,
      skip_restrict_names_with_github_validation: true,
      skip_generate_slug: true,
      no_repo_permissions_allowed: false,
    }
  end

  def create_integration!
    app = Integration.create!(integration_attributes)
  end
end

if __FILE__ == $0
  setup = SetupInsights.new

  puts "Enabling Insights domain events feature flags..."
  setup.enable_insights_feature_flags

  exit 0 if  ARGV[0] == "-i" || ARGV[0] == "--ingestion-only"

  puts "Creating Insights App..."
  app = setup.create_app
  puts "Insights App setup done!"

  puts "Installation Id: #{app.id}"
  puts "Installation Client Id: #{app.key}"
  pem = setup.get_private_key
  puts "Private Key: #{pem}"
end
