# Welcome to your brand new OpenAPI operation!
# If you have any questions, make sure to read our OpenAPI documentation
# https://thehub.github.com/engineering/development-and-ops/public-apis/rest/openapi/
# *You can remove all these comments when you're done!*
---
summary: '<%= summary %>'
description: |-
  A longer summary of this operation. Please ask #docs-apis-and-events
  for a review and/or help, and check out https://thehub.github.com/epd/engineering/products-and-services/public-apis/rest/openapi/styleguide/#rest-api-style.
tags:
  - <%= tag %>
operationId: <%= operation_id %>

externalDocs:
  description: API method documentation
  # You must fill out the URL.
  # The format if the operation has a subcategory:
  # url: '${externalDocsUrl}/rest/<%= tag %>/SUBCATEGORY#<%= slug %>'
  # The format if the operation does not have a subcategory:
  # url: '${externalDocsUrl}/rest/<%= tag %>#<%= slug %>'
  url: ''

# Describe how this operation is accessible
# This is essential for us to generate the final OpenAPI description
x-github-internal:
  path: <%= path %>
  http-method: <%= method %>
  published: <%= published %>
  # Make sure you set your team as a resource owner
  owner: no-owner:unaudited

# Our OpenAPI description describes all versions of GitHub API
# Define in which versions your operation is available.
x-github-releases:
  - api.github.com
  # ghec
  # ghes accepts a semver range of versions
  # ghes: '>= 3.1'

# Describe any query and/or path parameters this operation
# might receive. Check out existing parameter definitions
# in `app/api/description/components/parameters`
# parameters:
#  - $ref: '../../components/parameters/owner.yaml'
#  - $ref: '../../components/parameters/repo.yaml'
<% if method != "get" -%>
# If your operation receives a requestBody (POST, PUT, PATCH requests)
# Describe it here using JSON Schema.
# requestBody:
#   content:
#     application/json:
#       schema:
#         type: object
#         properties:
#           octocat:
#             type: string
#             description: This is an example requestBody property
#       examples:
#         exampleKey1:
#           # This is the request example description used on docs.github.com
#           # More info about examples: https://thehub.github.com/epd/engineering/products-and-services/public-apis/rest/openapi/examples/
#           summary: Example with Mona the octocat
#           value:
#             octocat: Mona
#         # Optionally, you can create more than one example by matching
#         # the `examples` key between the response and request
#         exampleKey2:
#           summary: Example with Codertocat the octocat
#           value:
#             octocat: Codertocat
<% end -%>

# Now describe what this operation can respond with.
# There is no need in describing common error status codes
# unless they have a specific semantic meaning in your operation.
# responses:
#   '200':
#     description: My response description
#     content:
#       application/json:
#         # Describe the schema and examples for this response
#         # Look for existing schemas in `components/schemas` or create your own
#         # More info about examples: https://thehub.github.com/epd/engineering/products-and-services/public-apis/rest/openapi/examples/
#         schema:
#           $ref: '../../components/schemas/new-or-existing-schema.yaml'
#         examples:
#           exampleKey1:
#             $ref: '../../components/examples/new-or-existing-example.yaml'
#           exampleKey2:
#             # This is the example response description used on docs.github.com
#             summary: Response for Codertocat octocat
#             value:
#               created: '2011-01-26T19:14:43Z'
#               octocat: Codertocat


# Finally, we must tag our operations with some additional metadata
x-github:
  # If the operation is only in GitHub Enterprise Cloud, set this to true
  githubCloudOnly: false
  enabledForGitHubApps: true
  # category and subcategory affect where the operation appears in https://docs.github.com/rest
  category: <%= tag %>
  subcategory:

