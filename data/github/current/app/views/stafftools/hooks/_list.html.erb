<%= render(Primer::Beta::BorderBox.new) do |component| %>
  <% hooks.each do |hook| %>
    <% show_view = Hooks::ShowView.new(hook: hook) %>
    <% component.with_row do %>
      <div class="hook-item clearfix">
        <span class="item-status">
          <% case show_view.status_class %>
          <% when "inactive" %>
            <%= render Primer::Beta::Octicon.new(:"dot-fill") %>
          <% when "mute" %>
            <%= render Primer::Beta::Octicon.new(:blocked) %>
          <% when "pending" %>
            <%= render Primer::Beta::Octicon.new(:"dot-fill", color: :attention) %>
          <% when "success" %>
            <%= render Primer::Beta::Octicon.new(:check, color: :success) %>
          <% else %>
            <%= render Primer::Beta::Octicon.new(:alert, color: :danger) %>
          <% end %>
        </span>

        <%= link_to stafftools_hook_path(hook), class: "css-truncate", "data-pjax": true do %>
          <span class="hook-url css-truncate-target"><%= show_view.title %></span>
          <span class="color-fg-muted">(<span class="css-truncate-target"><%= hook.events.to_sentence %></span>)</span>
        <% end %>
      </div>
    <% end %>
  <% end %>
<% end %>

<div class="mt-2">
  <p class="note">
    <%= render Primer::Beta::Octicon.new(:"dot-fill") %>
    <%= Hooks::ShowView::INACTIVE_MESSAGE %>
  </p>
  <p class="note">
    <%= render Primer::Beta::Octicon.new(:blocked) %>
    <%= Hooks::ShowView::MUTED_MESSAGE %>
  </p>
  <p class="note">
    <%= render Primer::Beta::Octicon.new(:"dot-fill", color: :attention) %>
    <%= Hooks::ShowView::UNUSED_MESSAGE %>
  </p>
  <p class="note">
    <%= render Primer::Beta::Octicon.new(:check, color: :success) %>
    <%= Hooks::ShowView::ACTIVE_MESSAGE %>
  </p>
  <p class="note">
    <%= render Primer::Beta::Octicon.new(:alert, color: :danger) %>
    <%= Hooks::ShowView::ERROR_MESSAGE %>
  </p>
</div>
