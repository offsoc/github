<%
  selected_check_suite = local_assigns[:selected_check_suite]
  workflow_run = if selected_check_suite.present?
    selected_check_suite.workflow_run
  elsif selected_check_run&.check_suite&.workflow_run.present?
    selected_check_run.check_suite.workflow_run
  end

  check_suite_focus = selected_check_suite.present? || params[:check_suite_focus] == "true"
  show_spammy_warning = local_assigns[:show_spammy_warning]
  show_check_run_logs = local_assigns.fetch(:show_check_run_logs, false)
%>

<%
  title_prefix = workflow_run&.title || commit.short_message
  title = "#{title_prefix} Â· #{current_repository.name_with_display_owner}@#{commit.abbreviated_oid}"
  breadcrumb_object = if execution.present? && !execution.is_latest_execution?
    execution
  else
    workflow_run
  end
  stafftools_check_suite = selected_check_run&.check_suite || selected_check_suite

  page_info \
    title: title,
    breadcrumb_object: breadcrumb_object,
    container_xl: true,
    selected_link: :repo_actions,
    class: "full-width full-width-p-0",
    skip_pjax_container: true,
    full_height: false,
    full_height_scrollable: false,
    footer: false,
    stafftools: actions_workflow_execution_stafftools_repository_path(id: current_repository.name, check_suite_id: stafftools_check_suite.id)
%>

<% if show_spammy_warning %>
  <%= render partial: "actions/spammy_workflow_run_banner"%>
<% end %>

<% content_for :workflow_run_header do %>
  <%= render Actions::WorkflowRuns::HeaderComponent.new(
    check_suite: selected_check_run&.check_suite || selected_check_suite,
    commit: commit,
    current_repository: current_repository,
    selected_check_run: selected_check_run,
    selected_tab: :summary,
    execution: execution,
    retry_blankstate: retry_blankstate
  ) %>
<% end %>

<% content_for :workflow_run_sidebar do %>
  <%= render Actions::WorkflowRuns::NavigationComponent.new(
    check_suite: selected_check_suite,
    selected_check_run: selected_check_run,
    selected_tab: :summary,
    current_repository: current_repository,
    execution: execution,
    retry_blankstate: retry_blankstate,
    pull_request_number: params[:pr],
    can_view_workflow_file: can_view_workflow_file,
  ) %>
<% end %>

<% content_for :workflow_run_content do %>
  <% if selected_check_suite %>
    <%= render :partial => "actions/workflow_runs/workflow_overview", locals: {
      check_suite: selected_check_suite,
      commit: commit,
      current_repository: current_repository,
      current_user: current_user,
      gate_requests: gate_requests,
      gate_approval_logs: gate_approval_logs,
      all_annotations: all_annotations,
      execution: execution,
      workflow_job_runs: workflow_job_runs,
      retry_blankstate: retry_blankstate,
      green_trees_enabled: green_trees_enabled,
      pull_request_number: params[:pr]
    } %>
  <% elsif selected_check_run %>
    <%# Check run view %>
    <% checks_name = selected_check_run.check_suite.actions_app? ? "jobs" : "checks" %>
    <section aria-label="Check run summary" data-hpc
      class="actions-fullwidth-module js-selected-check-run d-flex flex-auto min-width-0 mb-3 rounded-md-1 <% if selected_check_run.is_actions_check_run? %>color-bg-subtle<% end %>">
      <div class="flex-auto min-width-0">
        <% if selected_check_run.is_actions_check_run? %>
          <%= render :partial => "checks/checks_steps_container", locals: {
            check_suite: selected_check_run.check_suite,
            check_run: selected_check_run,
            steps: selected_check_run.passthrough_steps? ? selected_check_run.steps_from_backend: selected_check_run.get_steps,
            ux_refresh: true,
            show_check_run_logs: show_check_run_logs,
            can_show_copilot_button: can_show_copilot_button
          } %>
        <% else %>
          <%# Use the original checks summary with UX refresh support for 3rd party custom check runs %>
          <%= render :partial => "checks/checks_summary", locals: {
            check_suite: selected_check_run.check_suite,
            check_run: selected_check_run,
            commit: commit,
            pull: nil,
            annotation_details: annotation_details,
            show_check_run_logs: show_check_run_logs
          } %>
        <% end %>
      </div>
    </section>
    <section aria-label="Check run summary" data-hpc class="js-zen-blankslate d-flex flex-auto CheckRunContainer" <%= color_mode_attributes_checks_logs %> hidden>
      <div class="d-flex flex-items-stretch flex-auto">
        <%= render partial: "actions/workflow_runs/job_blankslate", locals: {
          message: "Re-running #{checks_name}...",
          loading: true
        } %>
      </div>
    </section>
  <% end %>
<% end %>

<% content_for :workflow_run_dialogs do %>
  <%= render Actions::WorkflowRuns::JobRerunDialogsContainerComponent.new(current_repository: current_repository, workflow_run: workflow_run, defer_rendering: true, execution: execution) %>
<% end %>

<run-summary>
  <%= render template: "layouts/repository/actions_workflow_run", locals: {
    repository: current_repository,
  } %>
</run-summary>
