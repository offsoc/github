# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Registrymetadata::Core::V1::InstallationLogin`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Registrymetadata::Core::V1::InstallationLogin`.

class MonolithTwirp::Registrymetadata::Core::V1::InstallationLogin
  sig do
    params(
      installation_id: T.nilable(Integer),
      integration_id: T.nilable(Integer),
      owner_type: T.nilable(String),
      parent_installation_id: T.nilable(Integer),
      permissions: T.nilable(T.any(Google::Protobuf::Map[String, String], T::Hash[String, String])),
      repo_id: T.nilable(Integer),
      repo_visibility: T.nilable(T.any(Symbol, Integer)),
      repositories: T.nilable(T.any(Google::Protobuf::RepeatedField[MonolithTwirp::Registrymetadata::Core::V1::Repository], T::Array[MonolithTwirp::Registrymetadata::Core::V1::Repository])),
      user_name: T.nilable(String)
    ).void
  end
  def initialize(installation_id: nil, integration_id: nil, owner_type: nil, parent_installation_id: nil, permissions: T.unsafe(nil), repo_id: nil, repo_visibility: nil, repositories: T.unsafe(nil), user_name: nil); end

  sig { void }
  def clear_installation_id; end

  sig { void }
  def clear_integration_id; end

  sig { void }
  def clear_owner_type; end

  sig { void }
  def clear_parent_installation_id; end

  sig { void }
  def clear_permissions; end

  sig { void }
  def clear_repo_id; end

  sig { void }
  def clear_repo_visibility; end

  sig { void }
  def clear_repositories; end

  sig { void }
  def clear_user_name; end

  sig { returns(Integer) }
  def installation_id; end

  sig { params(value: Integer).void }
  def installation_id=(value); end

  sig { returns(Integer) }
  def integration_id; end

  sig { params(value: Integer).void }
  def integration_id=(value); end

  sig { returns(String) }
  def owner_type; end

  sig { params(value: String).void }
  def owner_type=(value); end

  sig { returns(Integer) }
  def parent_installation_id; end

  sig { params(value: Integer).void }
  def parent_installation_id=(value); end

  sig { returns(Google::Protobuf::Map[String, String]) }
  def permissions; end

  sig { params(value: Google::Protobuf::Map[String, String]).void }
  def permissions=(value); end

  sig { returns(Integer) }
  def repo_id; end

  sig { params(value: Integer).void }
  def repo_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def repo_visibility; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def repo_visibility=(value); end

  sig { returns(Google::Protobuf::RepeatedField[MonolithTwirp::Registrymetadata::Core::V1::Repository]) }
  def repositories; end

  sig { params(value: Google::Protobuf::RepeatedField[MonolithTwirp::Registrymetadata::Core::V1::Repository]).void }
  def repositories=(value); end

  sig { returns(String) }
  def user_name; end

  sig { params(value: String).void }
  def user_name=(value); end
end
