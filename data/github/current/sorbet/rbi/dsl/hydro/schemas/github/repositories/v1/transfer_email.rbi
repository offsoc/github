# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Repositories::V1::TransferEmail`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Repositories::V1::TransferEmail`.

class Hydro::Schemas::Github::Repositories::V1::TransferEmail
  sig do
    params(
      email_reason: T.nilable(T.any(Symbol, Integer)),
      repository: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository),
      target_id: T.nilable(Integer),
      user: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(email_reason: nil, repository: nil, target_id: nil, user: nil); end

  sig { void }
  def clear_email_reason; end

  sig { void }
  def clear_repository; end

  sig { void }
  def clear_target_id; end

  sig { void }
  def clear_user; end

  sig { returns(T.any(Symbol, Integer)) }
  def email_reason; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def email_reason=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)) }
  def repository; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)).void }
  def repository=(value); end

  sig { returns(Integer) }
  def target_id; end

  sig { params(value: Integer).void }
  def target_id=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def user; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def user=(value); end
end
