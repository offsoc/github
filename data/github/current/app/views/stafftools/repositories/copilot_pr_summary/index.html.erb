<% page_info title: "Copilot pull request summary" %>

<div class="site-admin-subhead">
  <h2 class="site-admin-subhead-heading">Copilot pull request summary tool</h2>
</div>

<div class="mb-3">
  This tool allows an admin to generate Copilot pull request summaries for all pull requests in this repository.
  The summaries are tracked in a series of background jobs and when they are completed the user can download the
  generated summaries in a combined JSON file. Note that the JSON file will only include completed summaries, not
  failed ones.
</div>

<% if job_statuses.any? %>
  <% if total_prs_to_summarize == (total_failed_prs + total_successful_prs) %>
    <%= render(Primer::Beta::Link.new(
      href: copilot_pr_summary_stafftools_repository_path(params[:user_id], params[:id], job_status_id: params[:job_status_id], format: "json"),
      underline: false,
      float: :right,
      mr: 1
    )) do %>
      <%= render(Primer::Beta::Octicon.new(:download, size: :small)) %> Export JSON
    <% end %>
  <% else %>
    <%= render(Primer::Beta::Link.new(
      href: copilot_pr_summary_stafftools_repository_path(params[:user_id], params[:id], job_status_id: params[:job_status_id]),
      underline: false,
      float: :right,
      mr: 1
    )) do %>
      <%= render(Primer::Beta::Octicon.new(:sync, size: :small)) %> Refresh
    <% end %>
  <% end %>

  <div class="mt-7">
    <%= render(Primer::Beta::BorderBox.new(padding: :condensed)) do |component| %>
      <% component.with_header(py: 2) do |header| %>
        <% header.with_title(tag: :h4) do %>
          Pull request summary progress
        <% end %>
      <% end %>
      <% component.with_row(color: :success) do %>
        <%= total_successful_prs %> successful PR <%= "summary".pluralize(total_successful_prs) %>
      <% end %>
      <% if !total_failed_prs.zero? %>
        <% component.with_row(color: :danger) do %>
          <%= total_failed_prs %> failed PR <%= "summary".pluralize(total_failed_prs) %>
        <% end %>
      <% end %>
      <% component.with_row do %>
        <% remaining_prs_to_summarize = total_prs_to_summarize - (total_failed_prs + total_successful_prs) %>
        <%= remaining_prs_to_summarize %> PR <%= "summary".pluralize(remaining_prs_to_summarize) %> in progress
      <% end %>
    <% end %>

    <% if failed_pr_details.any? %>
      <%= render(Primer::Beta::BorderBox.new(padding: :condensed, mt: 5)) do |outer_box| %>
        <% outer_box.with_header(py: 2) do |header| %>
          <% header.with_title(tag: :h4) do %>
            Failed pull request summaries
          <% end %>
        <% end %>
        <% outer_box.with_body do %>
          <%= render Primer::Beta::Details.new do |details_component| %>
            <% details_component.with_summary(classes: "Button--danger") do %>
              View / hide failed PR summaries
            <% end %>
            <% details_component.with_body(mt: 2) do %>
              <%= render(Primer::Beta::BorderBox.new(padding: :condensed)) do |inner_box| %>
                <% failed_pr_details.each do |details| %>
                  <% inner_box.with_row do %>
                    <%= details.inspect %>
                  <% end %>
                <% end %>
              <% end %>
            <% end %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
  </div>
<% else %>
  <div class="mt-3">
    <%= primer_form_with(url: copilot_pr_summary_stafftools_repository_path(params[:user_id], params[:id], pull_requests_per_job: params[:pull_requests_per_job]), method: :post) do |f| %>
      <%= render(Primer::Beta::Button.new(type: :submit, scheme: :danger)) { "Summarize all #{total_prs_to_summarize} PRs in this repo" } %>
    <% end %>
  </div>
<% end %>
