# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Proxima::EnterpriseManagement::V1::ValidateEnterpriseRequest`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Proxima::EnterpriseManagement::V1::ValidateEnterpriseRequest`.

class MonolithTwirp::Proxima::EnterpriseManagement::V1::ValidateEnterpriseRequest
  sig do
    params(
      advanced_security_seats_for_entity: T.nilable(Integer),
      billing_email: T.nilable(String),
      billing_end_date: T.nilable(Google::Protobuf::Timestamp),
      can_self_serve: T.nilable(Google::Protobuf::BoolValue),
      emu_short_code: T.nilable(String),
      enterprise_web_business_id: T.nilable(String),
      first_admin_user_email: T.nilable(String),
      is_advanced_security_purchased_for_entity: T.nilable(T::Boolean),
      is_part_of_startup_program: T.nilable(T::Boolean),
      is_staff_owned: T.nilable(T::Boolean),
      name: T.nilable(String),
      seats: T.nilable(Integer),
      slug: T.nilable(String),
      span_id: T.nilable(String),
      support_plan: T.nilable(T.any(Symbol, Integer)),
      terms_of_service_company_name: T.nilable(String),
      terms_of_service_notes: T.nilable(String),
      terms_of_service_type: T.nilable(T.any(Symbol, Integer)),
      trace_id: T.nilable(String),
      trace_timestamp: T.nilable(Google::Protobuf::Timestamp),
      trial_expires_at: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(advanced_security_seats_for_entity: nil, billing_email: nil, billing_end_date: nil, can_self_serve: nil, emu_short_code: nil, enterprise_web_business_id: nil, first_admin_user_email: nil, is_advanced_security_purchased_for_entity: nil, is_part_of_startup_program: nil, is_staff_owned: nil, name: nil, seats: nil, slug: nil, span_id: nil, support_plan: nil, terms_of_service_company_name: nil, terms_of_service_notes: nil, terms_of_service_type: nil, trace_id: nil, trace_timestamp: nil, trial_expires_at: nil); end

  sig { returns(Integer) }
  def advanced_security_seats_for_entity; end

  sig { params(value: Integer).void }
  def advanced_security_seats_for_entity=(value); end

  sig { returns(String) }
  def billing_email; end

  sig { params(value: String).void }
  def billing_email=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def billing_end_date; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def billing_end_date=(value); end

  sig { returns(T.nilable(Google::Protobuf::BoolValue)) }
  def can_self_serve; end

  sig { params(value: T.nilable(Google::Protobuf::BoolValue)).void }
  def can_self_serve=(value); end

  sig { void }
  def clear_advanced_security_seats_for_entity; end

  sig { void }
  def clear_billing_email; end

  sig { void }
  def clear_billing_end_date; end

  sig { void }
  def clear_can_self_serve; end

  sig { void }
  def clear_emu_short_code; end

  sig { void }
  def clear_enterprise_web_business_id; end

  sig { void }
  def clear_first_admin_user_email; end

  sig { void }
  def clear_is_advanced_security_purchased_for_entity; end

  sig { void }
  def clear_is_part_of_startup_program; end

  sig { void }
  def clear_is_staff_owned; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_seats; end

  sig { void }
  def clear_slug; end

  sig { void }
  def clear_span_id; end

  sig { void }
  def clear_support_plan; end

  sig { void }
  def clear_terms_of_service_company_name; end

  sig { void }
  def clear_terms_of_service_notes; end

  sig { void }
  def clear_terms_of_service_type; end

  sig { void }
  def clear_trace_id; end

  sig { void }
  def clear_trace_timestamp; end

  sig { void }
  def clear_trial_expires_at; end

  sig { returns(String) }
  def emu_short_code; end

  sig { params(value: String).void }
  def emu_short_code=(value); end

  sig { returns(String) }
  def enterprise_web_business_id; end

  sig { params(value: String).void }
  def enterprise_web_business_id=(value); end

  sig { returns(String) }
  def first_admin_user_email; end

  sig { params(value: String).void }
  def first_admin_user_email=(value); end

  sig { returns(T::Boolean) }
  def is_advanced_security_purchased_for_entity; end

  sig { params(value: T::Boolean).void }
  def is_advanced_security_purchased_for_entity=(value); end

  sig { returns(T::Boolean) }
  def is_part_of_startup_program; end

  sig { params(value: T::Boolean).void }
  def is_part_of_startup_program=(value); end

  sig { returns(T::Boolean) }
  def is_staff_owned; end

  sig { params(value: T::Boolean).void }
  def is_staff_owned=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(Integer) }
  def seats; end

  sig { params(value: Integer).void }
  def seats=(value); end

  sig { returns(String) }
  def slug; end

  sig { params(value: String).void }
  def slug=(value); end

  sig { returns(String) }
  def span_id; end

  sig { params(value: String).void }
  def span_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def support_plan; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def support_plan=(value); end

  sig { returns(String) }
  def terms_of_service_company_name; end

  sig { params(value: String).void }
  def terms_of_service_company_name=(value); end

  sig { returns(String) }
  def terms_of_service_notes; end

  sig { params(value: String).void }
  def terms_of_service_notes=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def terms_of_service_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def terms_of_service_type=(value); end

  sig { returns(String) }
  def trace_id; end

  sig { params(value: String).void }
  def trace_id=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def trace_timestamp; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def trace_timestamp=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def trial_expires_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def trial_expires_at=(value); end
end
