{"version":3,"file":"home-xxxxxxxxxxxx.js","mappings":"kHAOA,IAAMA,EAAgB,IAAIC,qBACxB,IACE,IAAK,IAAMC,KAASC,EAClB,GAAID,EAAME,cAAc,CAAE,CACxB,IAAMC,EAAcC,SAASC,aAAa,CAAC,yBAC3CF,GAAaG,cAAc,IAAIC,YAAY,uBAC3CT,EAAcU,UAAU,EAC1B,CAEJ,EACA,CACEC,WAAY,cACZC,UAAW,CACb,GAOF,SAASC,EAAqBC,CAAoB,EAChD,IAAMC,EAAqBD,EAAQE,OAAO,CAAC,kBAC3CD,GAAoBR,cAAc,WAAWC,cAAc,IAAIC,YAAY,uBAC3E,IAAMQ,EAASF,GAAoBG,iBAAiB,SAEpD,GAAKD,EACL,IAAK,IAAME,KAASF,EACbE,EAAMC,MAAM,EAAED,EAAME,KAAK,EAElC,CAbAC,CAAAA,EAAAA,EAAAA,EAAAA,EAAQ,0BAA2BR,IACjCd,EAAcsB,OAAO,CAACR,EACxB,GAaAR,SAASiB,gBAAgB,CAAC,cAAgB,IACxC,IAAMC,EAAiBC,EAAEC,MAAM,CAACF,cAAc,CAC9C,GAAI,CAACA,EAAgB,MACjBG,CAAAA,OAAOC,UAAU,CAAC,oCAAoCC,OAAO,EAAEhB,EAAqBW,GACxF,IAAMM,EAASN,EAAeR,OAAO,CAAC,mBAAmBT,cAAc,0BACvE,GAAI,CAACuB,EAAQ,OACb,IAAMzB,EAAcmB,EAAejB,aAAa,CAAC,UAC3CU,EAASO,EAAeN,gBAAgB,CAAC,SAC3CE,EAAS,GAEbU,EAAOP,gBAAgB,CAAC,QAAS,KAE/B,IAAMQ,EAAQX,CADdA,EAAS,CAACA,CAAK,EACQ,qBAAuB,uBAG9C,IAAK,IAAMD,KAFXd,EAAYG,aAAa,CAAC,IAAIC,YAAYsB,IAEtBd,GACdG,EACGD,EAAMC,MAAM,EAAED,EAAME,KAAK,GAE1BF,EAAMC,MAAM,EAAED,EAAMa,IAAI,EAGlC,EACF,GAEA1B,SAASiB,gBAAgB,CAAC,qBAAuB,IAC/C,IAAMC,EAAiBC,EAAEC,MAAM,CAACF,cAAc,CAC9C,GAAI,CAACA,EAAgB,OACrB,IAAMM,EAASN,EAAeR,OAAO,CAAC,mBAAmBT,cAAc,0BACnEuB,GAAQA,EAAOG,MAAM,EAC3B,GAEAX,CAAAA,EAAAA,EAAAA,EAAAA,EAAQ,yBAA0BR,IAC5Ba,OAAOC,UAAU,CAAC,oCAAoCC,OAAO,EAAEhB,EAAqBC,EAC1F,E","sources":["app/assets/modules/home.ts"],"sourcesContent":["// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\n\n/**\n * Used to trigger globe interaction recalculation when the globe appears in the viewport, thus eliminating the offset\n * that only occurs on homepage. This is probably due the tiny shift in the page layout when the globe is loaded.\n */\nconst globeObserver = new IntersectionObserver(\n  (entries: IntersectionObserverEntry[]) => {\n    for (const entry of entries) {\n      if (entry.isIntersecting) {\n        const globeCanvas = document.querySelector('.js-globe-root canvas') as HTMLCanvasElement\n        globeCanvas?.dispatchEvent(new CustomEvent('globeTriggerResize'))\n        globeObserver.disconnect()\n      }\n    }\n  },\n  {\n    rootMargin: `0% 0% 0% 0%`,\n    threshold: 0,\n  },\n)\n\nobserve('.js-webgl-globe-trigger', element => {\n  globeObserver.observe(element)\n})\n\nfunction reducedMotionHandler(element: HTMLElement) {\n  const globeRootContainer = element.closest('.js-globe-root')\n  globeRootContainer?.querySelector('canvas')?.dispatchEvent(new CustomEvent('globeTriggerFreeze'))\n  const videos = globeRootContainer?.querySelectorAll('video')\n\n  if (!videos) return\n  for (const video of videos) {\n    if (!video.paused) video.pause()\n  }\n}\n\ndocument.addEventListener('globeLoaded', ((e: CustomEvent) => {\n  const globeContainer = e.detail.globeContainer as HTMLElement\n  if (!globeContainer) return\n  if (window.matchMedia('(prefers-reduced-motion: reduce)').matches) reducedMotionHandler(globeContainer)\n  const button = globeContainer.closest('.js-globe-root')?.querySelector('.js-globe-pause-toggle')\n  if (!button) return\n  const globeCanvas = globeContainer.querySelector('canvas') as HTMLCanvasElement\n  const videos = globeContainer.querySelectorAll('video')\n  let paused = false\n\n  button.addEventListener('click', () => {\n    paused = !paused\n    const event = paused ? 'globeTriggerFreeze' : 'globeTriggerUnfreeze'\n    globeCanvas.dispatchEvent(new CustomEvent(event))\n\n    for (const video of videos) {\n      if (paused) {\n        if (!video.paused) video.pause()\n      } else {\n        if (video.paused) video.play()\n      }\n    }\n  })\n}) as EventListener)\n\ndocument.addEventListener('globeFallbackImage', ((e: CustomEvent) => {\n  const globeContainer = e.detail.globeContainer as HTMLElement\n  if (!globeContainer) return\n  const button = globeContainer.closest('.js-globe-root')?.querySelector('.js-globe-pause-toggle')\n  if (button) button.remove()\n}) as EventListener)\n\nobserve('.js-globe-pause-toggle', element => {\n  if (window.matchMedia('(prefers-reduced-motion: reduce)').matches) reducedMotionHandler(element as HTMLElement)\n})\n"],"names":["globeObserver","IntersectionObserver","entry","entries","isIntersecting","globeCanvas","document","querySelector","dispatchEvent","CustomEvent","disconnect","rootMargin","threshold","reducedMotionHandler","element","globeRootContainer","closest","videos","querySelectorAll","video","paused","pause","observe","addEventListener","globeContainer","e","detail","window","matchMedia","matches","button","event","play","remove"],"sourceRoot":""}