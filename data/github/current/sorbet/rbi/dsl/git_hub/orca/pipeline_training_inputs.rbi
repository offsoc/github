# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Orca::PipelineTrainingInputs`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Orca::PipelineTrainingInputs`.

class GitHub::Orca::PipelineTrainingInputs
  sig do
    params(
      language_filters: T.nilable(T.any(Google::Protobuf::RepeatedField[GitHub::Orca::LingustLanguage], T::Array[GitHub::Orca::LingustLanguage])),
      repositories: T.nilable(T.any(Google::Protobuf::RepeatedField[GitHub::Orca::Repository], T::Array[GitHub::Orca::Repository])),
      repository_count: T.nilable(Integer),
      use_private_telemetry: T.nilable(T::Boolean)
    ).void
  end
  def initialize(language_filters: T.unsafe(nil), repositories: T.unsafe(nil), repository_count: nil, use_private_telemetry: nil); end

  sig { void }
  def clear_language_filters; end

  sig { void }
  def clear_repositories; end

  sig { void }
  def clear_repository_count; end

  sig { void }
  def clear_use_private_telemetry; end

  sig { returns(Google::Protobuf::RepeatedField[GitHub::Orca::LingustLanguage]) }
  def language_filters; end

  sig { params(value: Google::Protobuf::RepeatedField[GitHub::Orca::LingustLanguage]).void }
  def language_filters=(value); end

  sig { returns(Google::Protobuf::RepeatedField[GitHub::Orca::Repository]) }
  def repositories; end

  sig { params(value: Google::Protobuf::RepeatedField[GitHub::Orca::Repository]).void }
  def repositories=(value); end

  sig { returns(Integer) }
  def repository_count; end

  sig { params(value: Integer).void }
  def repository_count=(value); end

  sig { returns(T::Boolean) }
  def use_private_telemetry; end

  sig { params(value: T::Boolean).void }
  def use_private_telemetry=(value); end
end
