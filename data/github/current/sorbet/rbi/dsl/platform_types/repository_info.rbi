# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PlatformTypes::RepositoryInfo`.
# Please instead update this file by running `bin/tapioca dsl PlatformTypes::RepositoryInfo`.

class PlatformTypes::RepositoryInfo < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def archived_at; end

  sig { returns(T::Boolean) }
  def archived_at?; end

  sig { returns(T::Boolean) }
  def collaborators_only; end

  sig { returns(T::Boolean) }
  def collaborators_only?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def commits_resource_path; end

  sig { returns(T::Boolean) }
  def commits_resource_path?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def created_at; end

  sig { returns(T::Boolean) }
  def created_at?; end

  sig { returns(String) }
  def default_branch; end

  sig { returns(T::Boolean) }
  def default_branch?; end

  sig { returns(T.nilable(String)) }
  def description; end

  sig { returns(T::Boolean) }
  def description?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def description_html; end

  sig { returns(T::Boolean) }
  def description_html?; end

  sig { returns(Integer) }
  def fork_count; end

  sig { returns(T::Boolean) }
  def fork_count?; end

  sig { returns(T::Boolean) }
  def has_anonymous_access_enabled; end

  sig { returns(T::Boolean) }
  def has_anonymous_access_enabled?; end

  sig { returns(T::Boolean) }
  def has_discussions_enabled; end

  sig { returns(T::Boolean) }
  def has_discussions_enabled?; end

  sig { returns(T::Boolean) }
  def has_downloads; end

  sig { returns(T::Boolean) }
  def has_downloads?; end

  sig { returns(T::Boolean) }
  def has_issues_enabled; end

  sig { returns(T::Boolean) }
  def has_issues_enabled?; end

  sig { returns(T::Boolean) }
  def has_pages; end

  sig { returns(T::Boolean) }
  def has_pages?; end

  sig { returns(T::Boolean) }
  def has_projects_enabled; end

  sig { returns(T::Boolean) }
  def has_projects_enabled?; end

  sig { returns(T::Boolean) }
  def has_report_to_maintainer_enabled; end

  sig { returns(T::Boolean) }
  def has_report_to_maintainer_enabled?; end

  sig { returns(T::Boolean) }
  def has_restricted_wiki_editing; end

  sig { returns(T::Boolean) }
  def has_restricted_wiki_editing?; end

  sig { returns(T::Boolean) }
  def has_sponsorships_enabled; end

  sig { returns(T::Boolean) }
  def has_sponsorships_enabled?; end

  sig { returns(T::Boolean) }
  def has_wiki_enabled; end

  sig { returns(T::Boolean) }
  def has_wiki_enabled?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def homepage_url; end

  sig { returns(T::Boolean) }
  def homepage_url?; end

  sig { returns(T::Boolean) }
  def is_anonymous_access_available; end

  sig { returns(T::Boolean) }
  def is_anonymous_access_available?; end

  sig { returns(T::Boolean) }
  def is_archived; end

  sig { returns(T::Boolean) }
  def is_archived?; end

  sig { returns(T::Boolean) }
  def is_fork; end

  sig { returns(T::Boolean) }
  def is_fork?; end

  sig { returns(T::Boolean) }
  def is_hidden_from_discovery; end

  sig { returns(T::Boolean) }
  def is_hidden_from_discovery?; end

  sig { returns(T::Boolean) }
  def is_in_organization; end

  sig { returns(T::Boolean) }
  def is_in_organization?; end

  sig { returns(T::Boolean) }
  def is_locked; end

  sig { returns(T::Boolean) }
  def is_locked?; end

  sig { returns(T::Boolean) }
  def is_mirror; end

  sig { returns(T::Boolean) }
  def is_mirror?; end

  sig { returns(T::Boolean) }
  def is_private; end

  sig { returns(T::Boolean) }
  def is_private?; end

  sig { returns(T::Boolean) }
  def is_template; end

  sig { returns(T::Boolean) }
  def is_template?; end

  sig { returns(T::Boolean) }
  def is_trade_controls_read_only; end

  sig { returns(T::Boolean) }
  def is_trade_controls_read_only?; end

  sig { returns(T.nilable(String)) }
  def license_contents; end

  sig { returns(T::Boolean) }
  def license_contents?; end

  sig { returns(T.nilable(PlatformTypes::License)) }
  def license_info; end

  sig { returns(T::Boolean) }
  def license_info?; end

  sig { returns(T.nilable(String)) }
  def lock_reason; end

  sig { returns(T::Boolean) }
  def lock_reason?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def mirror_url; end

  sig { returns(T::Boolean) }
  def mirror_url?; end

  sig { returns(String) }
  def name; end

  sig { returns(T::Boolean) }
  def name?; end

  sig { returns(String) }
  def name_with_owner; end

  sig { returns(T::Boolean) }
  def name_with_owner?; end

  sig { returns(Integer) }
  def network_count; end

  sig { returns(T::Boolean) }
  def network_count?; end

  sig { returns(T::Boolean) }
  def no_index; end

  sig { returns(T::Boolean) }
  def no_index?; end

  sig { returns(T.nilable(PlatformTypes::RepositoryImage)) }
  def open_graph_image; end

  sig { returns(T::Boolean) }
  def open_graph_image?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def open_graph_image_url; end

  sig { returns(T::Boolean) }
  def open_graph_image_url?; end

  sig { returns(GraphQL::Client::Schema::InterfaceType) }
  def owner; end

  sig { returns(T::Boolean) }
  def owner?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def permalink; end

  sig { returns(T::Boolean) }
  def permalink?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def pushed_at; end

  sig { returns(T::Boolean) }
  def pushed_at?; end

  sig { returns(T::Boolean) }
  def require_login; end

  sig { returns(T::Boolean) }
  def require_login?; end

  sig { returns(T::Boolean) }
  def require_opt_in; end

  sig { returns(T::Boolean) }
  def require_opt_in?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def resource_path; end

  sig { returns(T::Boolean) }
  def resource_path?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def short_description_html; end

  sig { returns(T::Boolean) }
  def short_description_html?; end

  sig { returns(T::Boolean) }
  def show_enhanced_og_image; end

  sig { returns(T::Boolean) }
  def show_enhanced_og_image?; end

  sig { returns(T::Boolean) }
  def two_factor_requirement_met_by; end

  sig { returns(T::Boolean) }
  def two_factor_requirement_met_by?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def updated_at; end

  sig { returns(T::Boolean) }
  def updated_at?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def url; end

  sig { returns(T::Boolean) }
  def url?; end

  sig { returns(T::Boolean) }
  def uses_custom_open_graph_image; end

  sig { returns(T::Boolean) }
  def uses_custom_open_graph_image?; end

  sig { returns(String) }
  def visibility; end

  sig { returns(T::Boolean) }
  def visibility?; end
end
