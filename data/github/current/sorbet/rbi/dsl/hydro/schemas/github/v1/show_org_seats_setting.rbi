# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::ShowOrgSeatsSetting`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::ShowOrgSeatsSetting`.

class Hydro::Schemas::Github::V1::ShowOrgSeatsSetting
  sig do
    params(
      current_org_id: T.nilable(Integer),
      current_org_plan: T.nilable(String),
      current_seats_count: T.nilable(Integer),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext),
      user: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(current_org_id: nil, current_org_plan: nil, current_seats_count: nil, request_context: nil, user: nil); end

  sig { void }
  def clear_current_org_id; end

  sig { void }
  def clear_current_org_plan; end

  sig { void }
  def clear_current_seats_count; end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_user; end

  sig { returns(Integer) }
  def current_org_id; end

  sig { params(value: Integer).void }
  def current_org_id=(value); end

  sig { returns(String) }
  def current_org_plan; end

  sig { params(value: String).void }
  def current_org_plan=(value); end

  sig { returns(Integer) }
  def current_seats_count; end

  sig { params(value: Integer).void }
  def current_seats_count=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def user; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def user=(value); end
end
