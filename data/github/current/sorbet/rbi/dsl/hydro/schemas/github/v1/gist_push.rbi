# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::GistPush`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::GistPush`.

class Hydro::Schemas::Github::V1::GistPush
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      feature_flags: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      gist: T.nilable(Hydro::Schemas::Github::V1::Entities::Gist),
      owner: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      pushed_at: T.nilable(Google::Protobuf::Timestamp),
      ref_updates: T.nilable(T.any(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V1::GistPush::RefUpdate], T::Array[Hydro::Schemas::Github::V1::GistPush::RefUpdate])),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)
    ).void
  end
  def initialize(actor: nil, feature_flags: T.unsafe(nil), gist: nil, owner: nil, pushed_at: nil, ref_updates: T.unsafe(nil), request_context: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_feature_flags; end

  sig { void }
  def clear_gist; end

  sig { void }
  def clear_owner; end

  sig { void }
  def clear_pushed_at; end

  sig { void }
  def clear_ref_updates; end

  sig { void }
  def clear_request_context; end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def feature_flags; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def feature_flags=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Gist)) }
  def gist; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Gist)).void }
  def gist=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def owner; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def owner=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def pushed_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def pushed_at=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V1::GistPush::RefUpdate]) }
  def ref_updates; end

  sig { params(value: Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V1::GistPush::RefUpdate]).void }
  def ref_updates=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end
end
