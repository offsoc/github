{"version":3,"file":"navigation-test-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@primer/react/lib-esm/FeatureFlags/FeatureFlags.js","node_modules/@primer/react/lib-esm/FeatureFlags/useFeatureFlag.js","node_modules/@primer/react/lib-esm/Heading/Heading.js","node_modules/@primer/react/lib-esm/Heading/Heading.module.css.js","node_modules/@primer/react/lib-esm/constants.js","node_modules/@primer/react/lib-esm/hooks/useRefObjectAsForwardedRef.js","node_modules/@styled-system/theme-get/dist/index.esm.js","node_modules/clsx/dist/clsx.m.js","ui/packages/navigation-test/App.tsx","ui/packages/navigation-test/routes/Page.tsx","ui/packages/navigation-test/index.ts","ui/packages/navigation-test/routes/__generated__/RelayPageQuery.graphql.ts","ui/packages/navigation-test-components/Nav.tsx","ui/packages/navigation-test/routes/RelayPage.tsx","ui/packages/react-core/JsonRoute.tsx","ui/packages/react-core/Link.tsx","ui/packages/relay-route/RelayRoute.tsx","ui/packages/js-resource/JSResource.tsx","ui/packages/relay-route/build-queries.ts"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { FeatureFlagContext } from './FeatureFlagContext.js';\nimport { FeatureFlagScope } from './FeatureFlagScope.js';\nimport { DefaultFeatureFlags } from './DefaultFeatureFlags.js';\n\nfunction FeatureFlags({\n  children,\n  flags\n}) {\n  const value = useMemo(() => {\n    const scope = FeatureFlagScope.merge(DefaultFeatureFlags, FeatureFlagScope.create(flags));\n    return scope;\n  }, [flags]);\n  return /*#__PURE__*/React.createElement(FeatureFlagContext.Provider, {\n    value: value\n  }, children);\n}\nFeatureFlags.displayName = \"FeatureFlags\";\n\nexport { FeatureFlags };\n","import { useContext } from 'react';\nimport { FeatureFlagContext } from './FeatureFlagContext.js';\n\n/**\n * Check if the given feature flag is enabled\n */\nfunction useFeatureFlag(flag) {\n  const context = useContext(FeatureFlagContext);\n  return context.enabled(flag);\n}\n\nexport { useFeatureFlag };\n","import clsx from 'clsx';\nimport React, { forwardRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { get } from '../constants.js';\nimport '@primer/behaviors/utils';\nimport '@primer/behaviors';\nimport { useRefObjectAsForwardedRef } from '../hooks/useRefObjectAsForwardedRef.js';\nimport sx from '../sx.js';\nimport classes from './Heading.module.css.js';\nimport '../FeatureFlags/FeatureFlags.js';\nimport { useFeatureFlag } from '../FeatureFlags/useFeatureFlag.js';\nimport Box from '../Box/Box.js';\n\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nconst StyledHeading = styled.h2.withConfig({\n  displayName: \"Heading__StyledHeading\",\n  componentId: \"sc-1c1dgg0-0\"\n})([\"font-weight:\", \";font-size:\", \";margin:0;&:where([data-variant='large']){font:var(--text-title-shorthand-large,600 32px / 1.5 \", \");}&:where([data-variant='medium']){font:var(--text-title-shorthand-medium,600 20px / 1.6 \", \");}&:where([data-variant='small']){font:var(--text-title-shorthand-small,600 16px / 1.5 \", \");}\", \";\"], get('fontWeights.bold'), get('fontSizes.5'), get('fonts.normal'), get('fonts.normal'), get('fonts.normal'), sx);\nconst Heading = /*#__PURE__*/forwardRef(({\n  as: Component = 'h2',\n  className,\n  variant,\n  ...props\n}, forwardedRef) => {\n  const enabled = useFeatureFlag('primer_react_css_modules_team');\n  const innerRef = React.useRef(null);\n  useRefObjectAsForwardedRef(forwardedRef, innerRef);\n  if (process.env.NODE_ENV !== \"production\") {\n    /**\n     * The Linter yells because it thinks this conditionally calls an effect,\n     * but since this is a compile-time flag and not a runtime conditional\n     * this is safe, and ensures the entire effect is kept out of prod builds\n     * shaving precious bytes from the output, and avoiding mounting a noop effect\n     */\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      if (innerRef.current && !(innerRef.current instanceof HTMLHeadingElement)) {\n        // eslint-disable-next-line no-console\n        console.warn('This Heading component should be an instanceof of h1-h6');\n      }\n    }, [innerRef]);\n  }\n  if (enabled) {\n    if (props.sx) {\n      return /*#__PURE__*/React.createElement(Box, _extends({\n        as: Component,\n        className: clsx(className, classes.Heading),\n        \"data-variant\": variant\n      }, props, {\n        // @ts-ignore shh\n        ref: innerRef\n      }));\n    }\n    return /*#__PURE__*/React.createElement(Component, _extends({\n      className: clsx(className, classes.Heading),\n      \"data-variant\": variant\n    }, props, {\n      ref: innerRef\n    }));\n  }\n  return /*#__PURE__*/React.createElement(StyledHeading, _extends({\n    as: Component,\n    className: className,\n    \"data-variant\": variant,\n    sx: sx\n  }, props, {\n    // @ts-ignore shh\n    ref: innerRef\n  }));\n});\nHeading.displayName = 'Heading';\n\nexport { Heading as default };\n","import './Heading-26b4879b.css';\n\nvar classes = {\"Heading\":\"prc-Heading-Heading-6CmGO\"};\n\nexport { classes as default };\n","import { themeGet } from '@styled-system/theme-get';\nimport * as styledSystem from 'styled-system';\nimport theme from './theme.js';\n\nconst {\n  get: getKey,\n  compose,\n  system\n} = styledSystem;\nconst get = key => themeGet(key, getKey(theme, key));\n\n// Common props\n\nconst COMMON = compose(styledSystem.space, styledSystem.color, styledSystem.display);\n// Typography props\n\nconst whiteSpace = system({\n  whiteSpace: {\n    property: 'whiteSpace'\n    // cssProperty: 'whiteSpace',\n  }\n});\nconst TYPOGRAPHY = compose(styledSystem.typography, whiteSpace);\n// Border props\n\nconst BORDER = compose(styledSystem.border, styledSystem.shadow);\n// Layout props\n\nconst LAYOUT = styledSystem.layout;\n\nexport { BORDER, COMMON, LAYOUT, TYPOGRAPHY, get };\n","import { useImperativeHandle } from 'react';\n\n/**\n * Use a ref object as the imperative handle for a forwarded ref. This can be used to\n * synchronize the ref object with the forwarded ref and allow local access the reference\n * instance with `.current`.\n *\n * **NOTE**: The `refObject` should be passed to the underlying element, NOT the `forwardedRef`.\n */\nfunction useRefObjectAsForwardedRef(forwardedRef, refObject) {\n  useImperativeHandle(forwardedRef, () => refObject.current);\n}\n\nexport { useRefObjectAsForwardedRef };\n","import { get } from '@styled-system/core';\nexport var themeGet = function themeGet(path, fallback) {\n  if (fallback === void 0) {\n    fallback = null;\n  }\n\n  return function (props) {\n    return get(props.theme, path, fallback);\n  };\n};\nexport default themeGet;\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import type React from 'react'\n\n/**\n * The App component is used to render content which should be present on _all_ routes within this app\n */\nexport function App(props: {children?: React.ReactNode}) {\n  return <>{props.children}</>\n}\n\ntry{ App.displayName ||= 'App' } catch {}","import {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {Nav} from '@github-ui/navigation-test-components'\n\nexport interface PagePayload {\n  // Update this type to reflect the data you place in payload in Rails\n  someField: string\n  ssr: boolean\n  title: string\n}\n\nexport function Page() {\n  const payload = useRoutePayload<PagePayload>()\n  const pageTitle = payload ? `NavigationTest#${payload.title}` : ''\n\n  return !payload ? (\n    <>Page Loading...</>\n  ) : (\n    <>\n      <h1 data-hpc>{pageTitle}</h1>\n      <label htmlFor=\"focus-element\">Focus element </label>\n      <input type=\"text\" id=\"focus-element\" defaultValue=\"focus element\" data-react-autofocus />\n      <pre data-testid=\"payload\">{JSON.stringify(payload)}</pre>\n      <Nav />\n    </>\n  )\n}\n\ntry{ Page.displayName ||= 'Page' } catch {}","import {App} from './App'\nimport {Page} from './routes/Page'\nimport {RelayPage} from './routes/RelayPage'\nimport RELAY_PAGE_QUERY from './routes/__generated__/RelayPageQuery.graphql'\nimport {registerReactAppFactory} from '@github-ui/react-core/register-app'\nimport {TransitionType} from '@github-ui/react-core/app-routing-types'\nimport {jsonRoute} from '@github-ui/react-core/json-route'\nimport {relayRoute} from '@github-ui/relay-route'\nimport {relayEnvironmentWithMissingFieldHandlerForNode} from '@github-ui/relay-environment'\n\nregisterReactAppFactory('navigation-test', () => {\n  const relayEnvironment = relayEnvironmentWithMissingFieldHandlerForNode()\n\n  const relayRouteConfig = {\n    relayEnvironment,\n    resourceName: 'NavigationTest',\n    componentLoader: async () => {\n      const module = await import('./routes/RelayPage')\n      return module.RelayPage\n    },\n    Component: RelayPage,\n    fallback: 'Loading Relay...',\n  }\n\n  return {\n    App,\n    routes: [\n      jsonRoute({\n        path: '/_navigation_test/react/json/transition_while_fetching',\n        Component: Page,\n        transitionType: TransitionType.TRANSITION_WHILE_FETCHING,\n      }),\n      jsonRoute({path: '/_navigation_test/react/json/:kind', Component: Page}),\n      relayRoute({\n        ...relayRouteConfig,\n        path: '/_navigation_test/react/relay/csr',\n        title: 'React-Relay CSR · Navigation Test',\n        queryConfigs: {\n          relayPageQuery: {\n            concreteRequest: RELAY_PAGE_QUERY,\n          },\n        },\n      }),\n      relayRoute({\n        ...relayRouteConfig,\n        path: '/_navigation_test/react/relay/ssr',\n        title: 'React-Relay SSR · Navigation Test',\n        queryConfigs: {\n          relayPageQuery: {\n            concreteRequest: RELAY_PAGE_QUERY,\n          },\n        },\n      }),\n    ],\n  }\n})\n","/**\n * @generated SignedSource<<0f0feadb871adf3c258eaaca940de02e>>\n * @relayHash 4b3c4dfc6307087259496d0075611ec2\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\n// @relayRequestID 4b3c4dfc6307087259496d0075611ec2\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type RelayPageQuery$variables = Record<PropertyKey, never>;\nexport type RelayPageQuery$data = {\n  readonly viewer: {\n    readonly login: string;\n  };\n};\nexport type RelayPageQuery = {\n  response: RelayPageQuery$data;\n  variables: RelayPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"login\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"RelayPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"viewer\",\n        \"plural\": false,\n        \"selections\": [\n          (v0/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"RelayPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"viewer\",\n        \"plural\": false,\n        \"selections\": [\n          (v0/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": \"4b3c4dfc6307087259496d0075611ec2\",\n    \"metadata\": {},\n    \"name\": \"RelayPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": null\n  }\n};\n})();\n\n(node as any).hash = \"680096acc5bf5e5220afb17ddd5c3852\";\n\nexport default node;\n","import {Box} from '@primer/react'\nimport {Link} from '@github-ui/react-core/link'\n\nexport function Nav() {\n  return (\n    <Box as=\"nav\" aria-label=\"Test links\" sx={{height: '150vh'}}>\n      <h2>Anchor links</h2>\n      <ul>\n        <li>\n          <a href=\"/_navigation_test/rails\">Rails (anchor)</a>\n        </li>\n        <li>\n          <a href=\"/_navigation_test/react/json/ssr\">React SSR (anchor)</a>\n        </li>\n        <li>\n          <a href=\"/_navigation_test/react/json/csr\">React CSR (anchor)</a>\n        </li>\n        <li>\n          <a href=\"/_navigation_test/react/json/transition_while_fetching\">\n            React React Transition While Fetching (anchor)\n          </a>\n        </li>\n        <li>\n          <a href=\"/_navigation_test/react/relay/ssr\">React-Relay SSR (anchor)</a>\n        </li>\n        <li>\n          <a href=\"/_navigation_test/react/relay/csr\">React-Relay CSR (anchor)</a>\n        </li>\n      </ul>\n      <h2>React Core Links</h2>\n      <ul>\n        <li>\n          <Link to=\"/_navigation_test/rails\">Rails (Link)</Link>\n        </li>\n        <li>\n          <Link to=\"/_navigation_test/react/json/ssr\">React SSR (Link)</Link>\n        </li>\n        <li>\n          <Link to=\"/_navigation_test/react/json/csr\">React CSR (Link)</Link>\n        </li>\n        <li>\n          <Link to=\"/_navigation_test/react/json/transition_while_fetching\">\n            React React Transition While Fetching (Link)\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/_navigation_test/react/relay/ssr\">React-Relay SSR (Link)</Link>\n        </li>\n        <li>\n          <Link to=\"/_navigation_test/react/relay/csr\">React-Relay CSR (Link)</Link>\n        </li>\n      </ul>\n    </Box>\n  )\n}\n\ntry{ Nav.displayName ||= 'Nav' } catch {}","/* eslint eslint-comments/no-use: off */\nimport {graphql, type EntryPointComponent, usePreloadedQuery} from 'react-relay'\nimport type {RelayPageQuery} from './__generated__/RelayPageQuery.graphql'\nimport {Nav} from '@github-ui/navigation-test-components'\nimport {useLocation} from 'react-router-dom'\n\nexport interface RelayPagePayload {\n  // Update this type to reflect the data you place in payload in Rails\n  someField: string\n  ssr: boolean\n  title: string\n}\n\nexport const RelayPage: EntryPointComponent<{relayPageQuery: RelayPageQuery}, Record<string, never>> = ({\n  queries: {relayPageQuery},\n}) => {\n  const data = usePreloadedQuery<RelayPageQuery>(\n    graphql`\n      query RelayPageQuery {\n        viewer {\n          login\n        }\n      }\n    `,\n    relayPageQuery,\n  )\n\n  const {pathname} = useLocation()\n  const kind = pathname.split('/').at(-1)\n  const pageTitle = `NavigationTest#React-Relay ${kind?.toUpperCase()}`\n\n  if (!data.viewer) {\n    return null\n  }\n\n  return (\n    <>\n      <h1 data-hpc>{pageTitle}</h1>\n      <label htmlFor=\"focus-element\">Focus element </label>\n      <input type=\"text\" id=\"focus-element\" defaultValue=\"focus element\" data-react-autofocus />\n      <pre data-testid=\"payload\">{JSON.stringify({viewer: {login: data.viewer.login}})}</pre>\n      <Nav />\n    </>\n  )\n}\n\ntry{ RelayPage.displayName ||= 'RelayPage' } catch {}","import type {ChildRoute, LoaderResult, RouteRegistration, TransitionType} from './app-routing-types'\nimport type React from 'react'\nimport type {Location} from '@remix-run/router'\n\nexport interface JsonRouteProps {\n  path: string\n  Component: React.ComponentType\n  transitionType?: TransitionType\n  shouldNavigateOnError?: boolean\n  children?: ChildRoute[]\n}\n/**\n * A utility for building a route registration for a route that consumes a JSON object (either via embedding in a\n * script tag or via a JSON fetch on React soft navigations).\n */\nexport function jsonRoute<TRouteData, TEmbeddedData>({\n  path,\n  Component,\n  /**\n   * Some routes want to handle their own errors and not just show a generic error page. In this case,\n   * the error is just handled like any other payload for the route.\n   * NOTE: We might consider replacing the shouldNavigateOnError flag with a parallel implementation to jsonRoute.\n   */\n  shouldNavigateOnError,\n  transitionType,\n  children,\n}: JsonRouteProps): RouteRegistration<TRouteData, TEmbeddedData> {\n  async function coreLoader({location}: {location: Location}): Promise<LoaderResult<TRouteData>> {\n    let response: Response\n    try {\n      const fetchPath = `${location.pathname}${location.search}`\n      response = await window.fetch(fetchPath, {\n        headers: {\n          Accept: 'application/json',\n          'X-Requested-With': 'XMLHttpRequest',\n          'X-GitHub-Target': 'dotcom',\n          'X-React-Router': 'json',\n        },\n      })\n    } catch (error) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'fetchError'},\n      }\n    }\n    if (response.redirected) {\n      return {\n        type: 'redirect',\n        url: response.url,\n      }\n    } else if (!response.ok) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'httpError', httpStatus: response.status},\n      }\n    } else {\n      try {\n        const responseJson = await response.json()\n        return {\n          type: 'loaded',\n          data: responseJson,\n          title: responseJson.title,\n        }\n      } catch (error) {\n        return {\n          type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n          error: {type: 'badResponseError'},\n        }\n      }\n    }\n  }\n\n  function loadFromEmbeddedData({embeddedData}: {embeddedData: TEmbeddedData}): {data: TRouteData; title: string} {\n    const data = embeddedData as unknown as TRouteData & {title: string}\n    return {data, title: data.title}\n  }\n\n  return {\n    path,\n    // TODO: consider wrapping Component with a component that passes payload as a prop — ideally as part of migrating\n    // away from useRoutePayload.\n    Component,\n    coreLoader,\n    loadFromEmbeddedData,\n    transitionType,\n    children,\n  }\n}\n","import {useContext, forwardRef, type ForwardedRef, type ReactElement} from 'react'\nimport {\n  Link as RouterLink,\n  NavLink as RouterNavLink,\n  type LinkProps,\n  type NavLinkProps,\n  resolvePath,\n  matchRoutes,\n} from 'react-router-dom'\nimport {AppContext} from './app-context'\nimport {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {PREVENT_AUTOFOCUS_KEY} from './prevent-autofocus'\n\ntype PreventAutofocusProp = {preventAutofocus?: boolean}\n\nexport const Link = forwardRef(\n  (\n    {to, reloadDocument, preventAutofocus, ...props}: LinkProps & PreventAutofocusProp,\n    ref: ForwardedRef<HTMLAnchorElement>,\n  ): ReactElement => {\n    const {routes} = useContext(AppContext)\n    const pathname = resolvePath(to, ssrSafeLocation.pathname).pathname\n    reloadDocument = reloadDocument ?? !matchRoutes(routes, pathname)\n    return (\n      <RouterLink\n        to={to}\n        {...props}\n        state={\n          preventAutofocus\n            ? {\n                [PREVENT_AUTOFOCUS_KEY]: true,\n                ...props.state,\n              }\n            : props.state\n        }\n        reloadDocument={reloadDocument}\n        ref={ref}\n      />\n    )\n  },\n)\n\nLink.displayName = 'Link'\n\nexport const NavLink = forwardRef(function NavLink(\n  {to, reloadDocument, preventAutofocus, ...props}: NavLinkProps & PreventAutofocusProp,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n): React.ReactElement {\n  const {routes} = useContext(AppContext)\n  const pathname = resolvePath(to, ssrSafeLocation.pathname).pathname\n  reloadDocument = reloadDocument ?? !matchRoutes(routes, pathname)\n  return (\n    <RouterNavLink\n      to={to}\n      {...props}\n      state={\n        preventAutofocus\n          ? {\n              [PREVENT_AUTOFOCUS_KEY]: true,\n              ...props.state,\n            }\n          : props.state\n      }\n      reloadDocument={reloadDocument}\n      ref={ref}\n    />\n  )\n})\n\ntry{ NavLink.displayName ||= 'NavLink' } catch {}","import JSResource from '@github-ui/js-resource'\nimport {TransitionType, type LoaderResultLoaded, type RouteRegistration} from '@github-ui/react-core/app-routing-types'\nimport {useCurrentRouteState} from '@github-ui/react-core/use-current-route-state'\nimport {SSRNetwork, type FeatureFlagMap, type ServerPreloadedSubscription} from '@github-ui/relay-environment'\nimport type React from 'react'\nimport {Suspense} from 'react'\nimport type {Location, Params} from 'react-router-dom'\nimport {RecordSource, type OperationType, type Variables} from 'relay-runtime'\n\nimport {\n  EntryPointContainer,\n  RelayEnvironmentProvider,\n  loadEntryPoint,\n  type EntryPoint,\n  type EntryPointComponent,\n  type PreloadedEntryPoint,\n} from 'react-relay'\n\nimport type {GraphQLResult, GraphQLSubscriptionResult} from '@github-ui/fetch-graphql'\nimport {buildQueries} from './build-queries'\nimport type {ExtractDynamicSegments, RelayRouteProps, RouteParams, VariableTransformer} from './types'\n\nconst defaultVariableTransformer: VariableTransformer<string> = variables => variables\n\ntype RelayPayloadType<TEntryPointComponent> = {\n  entryPointReference: PreloadedEntryPoint<TEntryPointComponent>\n}\ntype IslandPreloadedQuery = {queryId: string; variables: Variables; result: GraphQLResult; timestamp?: number}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype RecordMap = Record<string, any>\ntype EmbeddedDataType = {\n  payload: {\n    preloadedQueries?: IslandPreloadedQuery[]\n    preloaded_records?: RecordMap\n    preloadedSubscriptions?: Record<string, Record<string, GraphQLSubscriptionResult>>\n  }\n  enabled_features?: FeatureFlagMap\n}\n\ntype LoadSyncType = {\n  pathParams: Params<string>\n  searchParams: URLSearchParams\n  embeddedData?: EmbeddedDataType\n}\n\n/**\n * A utility for building a route registration for a route given a defined Relay entry point).\n * @experimental\n */\nexport function relayRoute<\n  Path extends string,\n  // The inferred queries passed to the EntryPointComponent as props\n  PreloadedQueryProps extends Record<string, OperationType>,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  PreloadedEntryPoints extends Record<string, EntryPoint<any, any> | undefined>,\n  RuntimeProps extends NonNullable<unknown>,\n  ExtraProps extends NonNullable<unknown>,\n>(\n  {\n    path,\n    resourceName,\n    componentLoader,\n    Component,\n    queryConfigs,\n    transformVariables = defaultVariableTransformer,\n    title,\n    relayEnvironment,\n    fallback,\n    maxAge,\n    errorCallbacks,\n  }: RelayRouteProps<Path, PreloadedQueryProps, PreloadedEntryPoints, RuntimeProps, ExtraProps>,\n  runtimeProps = {} as RuntimeProps,\n): RouteRegistration<unknown, unknown> {\n  type TEntryPointComponent = EntryPointComponent<PreloadedQueryProps, PreloadedEntryPoints, RuntimeProps, ExtraProps>\n\n  const internalResourceName = resourceName || Component?.displayName\n  if (internalResourceName === undefined) throw new Error('invalid internal resourceName')\n  // construct a Relay entry point:\n  const entryPoint: EntryPoint<TEntryPointComponent, RouteParams<ExtractDynamicSegments<Path>>> = {\n    root: JSResource(internalResourceName, componentLoader, Component),\n    getPreloadProps: rp => {\n      return {\n        queries: buildQueries(queryConfigs, rp, transformVariables, relayEnvironment),\n      }\n    },\n  }\n\n  // merge 2 maps of subscriptions, favoring the entries in the first map in case of key equality\n  function mergeSubscriptions(\n    a: Map<string, ServerPreloadedSubscription>,\n    b: Map<string, ServerPreloadedSubscription> | undefined,\n  ) {\n    if (!b || b.size === 0) {\n      return a\n    }\n\n    const mergedSubscriptions = new Map<string, ServerPreloadedSubscription>(a)\n\n    for (const [key, value] of b) {\n      if (!mergedSubscriptions.has(key)) {\n        mergedSubscriptions.set(key, value)\n      }\n    }\n\n    return mergedSubscriptions\n  }\n\n  function loadSync({\n    pathParams,\n    searchParams,\n    embeddedData,\n  }: LoadSyncType): LoaderResultLoaded<RelayPayloadType<TEntryPointComponent>> {\n    // parse the preloaded queries from the embebed data use the embedded data\n    const ssrPreloadedQueries = new Map<string, Map<string, GraphQLResult>>()\n    if (embeddedData?.payload?.preloadedQueries) {\n      for (const {queryId, variables, result, timestamp} of embeddedData.payload.preloadedQueries) {\n        let queryRecord = ssrPreloadedQueries.get(queryId)\n        if (!queryRecord) {\n          queryRecord = new Map<string, GraphQLResult>()\n        }\n        const key = JSON.stringify(variables)\n        result.timestamp = timestamp\n        queryRecord.set(key, result)\n        ssrPreloadedQueries.set(queryId, queryRecord)\n      }\n    }\n    const preloadedSubscriptions = new Map<string, ServerPreloadedSubscription>()\n    if (embeddedData?.payload?.preloadedSubscriptions) {\n      for (const [queryId, results] of Object.entries(embeddedData.payload.preloadedSubscriptions)) {\n        const subscriptionResults = new Map<string, GraphQLSubscriptionResult>()\n        for (const [args, result] of Object.entries(results)) {\n          subscriptionResults.set(args, result)\n        }\n        preloadedSubscriptions.set(queryId, subscriptionResults)\n      }\n    }\n\n    if (embeddedData?.payload?.preloaded_records) {\n      relayEnvironment.getStore().publish(new RecordSource(embeddedData?.payload?.preloaded_records))\n    }\n\n    const {baseUrl, getPreloadedSubscriptions} = relayEnvironment.options as {\n      baseUrl: string | undefined\n      getPreloadedSubscriptions: () => Map<string, ServerPreloadedSubscription> | undefined\n    }\n    const loadedSubscriptions = getPreloadedSubscriptions ? getPreloadedSubscriptions() : undefined\n    const newNetwork = new SSRNetwork(\n      ssrPreloadedQueries,\n      embeddedData?.enabled_features,\n      mergeSubscriptions(preloadedSubscriptions, loadedSubscriptions),\n      baseUrl,\n      maxAge,\n      errorCallbacks,\n    )\n    // @ts-expect-error `__setNet` is not exposed in types\n    relayEnvironment.__setNet(newNetwork)\n\n    relayEnvironment.options = {\n      baseUrl,\n      getPreloadedSubscriptions: () => newNetwork.getPreloadedSubscriptions(),\n    }\n\n    const entryPointReference = loadEntryPoint(\n      {\n        getEnvironment: () => {\n          return relayEnvironment\n        },\n      },\n      entryPoint,\n      {pathParams, searchParams},\n    )\n\n    return {\n      // NOTE: it could make sense to replace this with a \"loading\" result if we add support for those — but if we do\n      // that, we'll need to figure out how to determine that the entrypoint has loaded and update the state. Without\n      // updating the state, the framework wouldn't know when to remove the loading bar, update the title, and set the\n      // focus state.\n      type: 'loaded',\n      data: {entryPointReference},\n      title,\n    }\n  }\n\n  async function coreLoader({pathParams, location}: {pathParams: Params<string>; location: Location}) {\n    return Promise.resolve(\n      loadSync({\n        pathParams,\n        searchParams: new URLSearchParams(location.search),\n      }),\n    )\n  }\n\n  function loadFromEmbeddedData({\n    pathParams,\n    embeddedData,\n    location,\n  }: {\n    pathParams: Params<string>\n    embeddedData: unknown\n    location: Location\n  }) {\n    const castedEmbeddedData = embeddedData as EmbeddedDataType\n    const {data} = loadSync({\n      pathParams,\n      embeddedData: castedEmbeddedData,\n      searchParams: new URLSearchParams(location.search),\n    })\n    return {data, title}\n  }\n\n  const Wrapper: React.FC = () => {\n    const state = useCurrentRouteState<{type: 'loaded'; data: RelayPayloadType<TEntryPointComponent>}>()\n    const entryPointReference = state?.data?.entryPointReference\n\n    if (!entryPointReference) {\n      return null\n    }\n\n    return (\n      <RelayEnvironmentProvider environment={relayEnvironment}>\n        <Suspense fallback={fallback}>\n          <EntryPointContainer entryPointReference={entryPointReference} props={runtimeProps} />\n        </Suspense>\n      </RelayEnvironmentProvider>\n    )\n  }\n\n  return {\n    path,\n    Component: Wrapper,\n    coreLoader,\n    loadFromEmbeddedData,\n    transitionType: TransitionType.FETCH_THEN_TRANSITION,\n  }\n}\n\ntry{ Wrapper.displayName ||= 'Wrapper' } catch {}","/**\n * This is a basic JSResource implementation that satisfies the interface expected by Relay when defining an\n * entryPoint. Compared to a bare promise, this allows us to use an already-loaded resource synchronously (without\n * waiting for a callback to execute in the next tick).\n */\n\nconst resourceMap = new Map<string, Resource<unknown>>()\n\nclass Resource<T> {\n  _moduleId: string\n  _loader: () => Promise<T>\n  _error: Error | null\n  _promise: Promise<T> | null\n  _result: T | null\n\n  constructor(moduleId: string, loader: () => Promise<T>, result: T | null = null) {\n    this._moduleId = moduleId\n    this._loader = loader\n    this._error = null\n    this._promise = null\n    this._result = result\n  }\n\n  load() {\n    if (this._promise == null) {\n      this._promise = this._loader()\n      ;(async () => {\n        try {\n          this._result = await this._promise\n        } catch (error) {\n          // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n          this._error = error\n          throw error\n        }\n      })()\n    }\n    return this._promise\n  }\n\n  getModuleId() {\n    return this._moduleId\n  }\n\n  get() {\n    return this._result\n  }\n\n  getModuleIfRequired() {\n    return this.get()\n  }\n\n  read() {\n    if (this._result != null) {\n      return this._result\n    } else if (this._error != null) {\n      throw this._error\n    } else {\n      /**\n       * It's ok to throw a promise here, because we'll catch it and call `load` on the resource.\n       * This is the 'suspense' pattern.\n       */\n      // eslint-disable-next-line @typescript-eslint/no-throw-literal\n      throw this._promise\n    }\n  }\n}\n\nexport default function JSResource<T>(\n  moduleId: string,\n  loader: () => Promise<T>,\n  preloadedResult: T | null = null,\n): Resource<T> {\n  let resource = resourceMap.get(moduleId)\n  if (resource == null) {\n    resource = new Resource(moduleId, loader, preloadedResult)\n    resourceMap.set(moduleId, resource)\n  }\n  return resource as Resource<T>\n}\n\ntry{ JSResource.displayName ||= 'JSResource' } catch {}","import type {EntryPoint, Environment, PreloadProps} from 'react-relay'\nimport type {OperationType, Variables} from 'relay-runtime'\nimport type {ExtractDynamicSegments, QueryConfigs, RouteParams, VariableMappers, VariableTransformer} from './types'\n\n/**\n * Apply variable mappers and optionally transformers\n *\n * If any transformed variable is undefined, the entire set of variables will be undefined\n * `null` can be used though\n */\nexport function constructVariables<Path extends string, PreloadedQueryProps extends Record<string, OperationType>>(\n  variableMappers: VariableMappers<Path, PreloadedQueryProps>,\n  transformVariables: VariableTransformer<ExtractDynamicSegments<Path>>,\n  routeParams: RouteParams<ExtractDynamicSegments<Path>>,\n  relayEnvironment: Environment,\n): Variables | undefined {\n  const mappedVariables = variableMappers?.(routeParams, relayEnvironment) ?? {}\n  const transformed = transformVariables(mappedVariables, routeParams, relayEnvironment)\n\n  /**\n   * If we have any variables and any of them are undefined,\n   * the entire query will be invalid, so return `undefined` as an indicator\n   * that we should not run this query at all\n   *\n   * An empty object of variables will not be evaluated by this block, so will run\n   */\n  for (const key in transformed) {\n    if (transformed[key] === undefined) {\n      return undefined\n    }\n  }\n\n  return transformed\n}\n\n/**\n * Build the preloaded query parameters and variables\n */\nexport function buildQueries<\n  Path extends string,\n  PreloadedQueryProps extends Record<string, OperationType>,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  PreloadedEntryPoints extends Record<string, EntryPoint<any, any> | undefined>,\n  ExtraProps extends NonNullable<unknown>,\n>(\n  queryConfigs: QueryConfigs<Path, PreloadedQueryProps>,\n  routeParams: RouteParams<ExtractDynamicSegments<Path>>,\n  transformVariables: VariableTransformer<ExtractDynamicSegments<Path>>,\n  relayEnvironment: Environment,\n) {\n  const queries = {} as NonNullable<\n    PreloadProps<\n      RouteParams<ExtractDynamicSegments<Path>>,\n      PreloadedQueryProps,\n      PreloadedEntryPoints,\n      ExtraProps\n    >['queries']\n  >\n\n  for (const [key, {concreteRequest, variableMappers}] of typedObjectEntries(queryConfigs)) {\n    const variables = constructVariables(variableMappers, transformVariables, routeParams, relayEnvironment)\n    // Only keeping valid queries where required variables is defined\n    if (variables) {\n      queries[key] = {\n        variables: Object.fromEntries(\n          Object.entries(variables).sort(([keyA], [keyB]) => {\n            if (keyA < keyB) return -1\n            if (keyA > keyB) return 1\n            return 0\n          }),\n        ),\n        parameters: {\n          ...concreteRequest,\n          params: {\n            ...concreteRequest.params,\n            metadata: {\n              ...concreteRequest.params.metadata,\n              isRelayRouteRequest: true,\n            },\n          },\n        },\n      }\n    }\n  }\n\n  return queries\n}\n\n/**\n * For reasons `Object.entries` will always type the key as a string, even when given static\n * config objects.  This small helper casts to the expected typings which ties everything together nicely\n */\nfunction typedObjectEntries<T extends Record<string, unknown>>(obj: T) {\n  return Object.entries(obj) as Array<[keyof T, T[keyof T]]>\n}\n"],"names":["FeatureFlags","children","flags","value","useMemo","merge","create","Provider","displayName","useFeatureFlag","flag","context","useContext","enabled","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","StyledHeading","h2","withConfig","componentId","Heading","forwardRef","as","Component","className","variant","props","forwardedRef","u","innerRef","sx","ref","classes","getKey","compose","system","get","key","COMMON","whiteSpace","property","TYPOGRAPHY","useRefObjectAsForwardedRef","refObject","useImperativeHandle","current","themeGet","path","fallback","theme","clsx","f","Array","isArray","App","Page","payload","useRoutePayload","pageTitle","title","h1","data-hpc","label","htmlFor","input","type","id","defaultValue","data-react-autofocus","pre","data-testid","JSON","stringify","Nav","registerReactAppFactory","relayRouteConfig","relayEnvironment","relayEnvironmentWithMissingFieldHandlerForNode","resourceName","componentLoader","module","RelayPage","routes","jsonRoute","transitionType","TransitionType","TRANSITION_WHILE_FETCHING","relayRoute","queryConfigs","relayPageQuery","concreteRequest","RELAY_PAGE_QUERY","node","v0","hash","Box","aria-label","height","ul","li","a","href","Link","to","queries","data","usePreloadedQuery","pathname","useLocation","kind","split","at","toUpperCase","viewer","login","shouldNavigateOnError","coreLoader","location","response","fetchPath","search","window","fetch","headers","Accept","error","redirected","url","ok","httpStatus","status","responseJson","json","loadFromEmbeddedData","embeddedData","reloadDocument","preventAutofocus","AppContext","resolvePath","ssrSafeLocation","matchRoutes","RouterLink","state","PREVENT_AUTOFOCUS_KEY","NavLink","RouterNavLink","Wrapper","resourceMap","Map","Resource","load","_promise","_loader","_result","_error","getModuleId","_moduleId","getModuleIfRequired","read","constructor","moduleId","loader","result","JSResource","preloadedResult","resource","set","defaultVariableTransformer","variables","transformVariables","maxAge","errorCallbacks","runtimeProps","internalResourceName","undefined","entryPoint","root","getPreloadProps","rp","buildQueries","routeParams","variableMappers","entries","constructVariables","transformed","fromEntries","sort","keyA","keyB","parameters","params","metadata","isRelayRouteRequest","loadSync","pathParams","searchParams","ssrPreloadedQueries","preloadedQueries","queryId","timestamp","queryRecord","preloadedSubscriptions","results","subscriptionResults","args","preloaded_records","getStore","publish","RecordSource","baseUrl","getPreloadedSubscriptions","options","loadedSubscriptions","newNetwork","SSRNetwork","enabled_features","mergeSubscriptions","b","size","mergedSubscriptions","has","__setNet","entryPointReference","loadEntryPoint","getEnvironment","useCurrentRouteState","RelayEnvironmentProvider","environment","Suspense","EntryPointContainer","Promise","resolve","URLSearchParams","FETCH_THEN_TRANSITION"],"sourceRoot":""}