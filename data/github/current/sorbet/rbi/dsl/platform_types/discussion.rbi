# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PlatformTypes::Discussion`.
# Please instead update this file by running `bin/tapioca dsl PlatformTypes::Discussion`.

class PlatformTypes::Discussion < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(PlatformTypes::AbuseReportConnection) }
  def abuse_reports; end

  sig { returns(T::Boolean) }
  def abuse_reports?; end

  sig { returns(T.nilable(String)) }
  def active_lock_reason; end

  sig { returns(T::Boolean) }
  def active_lock_reason?; end

  sig { returns(T.nilable(PlatformTypes::DiscussionComment)) }
  def answer; end

  sig { returns(T::Boolean) }
  def answer?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def answer_chosen_at; end

  sig { returns(T::Boolean) }
  def answer_chosen_at?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::InterfaceType)) }
  def answer_chosen_by; end

  sig { returns(T::Boolean) }
  def answer_chosen_by?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::InterfaceType)) }
  def author; end

  sig { returns(T::Boolean) }
  def author?; end

  sig { returns(String) }
  def author_association; end

  sig { returns(T::Boolean) }
  def author_association?; end

  sig { returns(T.nilable(PlatformTypes::Sponsorship)) }
  def author_to_repo_owner_sponsorship; end

  sig { returns(T::Boolean) }
  def author_to_repo_owner_sponsorship?; end

  sig { returns(T::Boolean) }
  def authored_by_subject_author; end

  sig { returns(T::Boolean) }
  def authored_by_subject_author?; end

  sig { returns(String) }
  def body; end

  sig { returns(T::Boolean) }
  def body?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def body_html; end

  sig { returns(T::Boolean) }
  def body_html?; end

  sig { returns(String) }
  def body_text; end

  sig { returns(T::Boolean) }
  def body_text?; end

  sig { returns(String) }
  def body_version; end

  sig { returns(T::Boolean) }
  def body_version?; end

  sig { returns(PlatformTypes::DiscussionCategory) }
  def category; end

  sig { returns(T::Boolean) }
  def category?; end

  sig { returns(T::Boolean) }
  def closed; end

  sig { returns(T::Boolean) }
  def closed?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def closed_at; end

  sig { returns(T::Boolean) }
  def closed_at?; end

  sig { returns(T.nilable(PlatformTypes::DiscussionComment)) }
  def comment; end

  sig { returns(T::Boolean) }
  def comment?; end

  sig { returns(String) }
  def comment_type; end

  sig { returns(T::Boolean) }
  def comment_type?; end

  sig { returns(PlatformTypes::DiscussionCommentConnection) }
  def comments; end

  sig { returns(T::Boolean) }
  def comments?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def created_at; end

  sig { returns(T::Boolean) }
  def created_at?; end

  sig { returns(T::Boolean) }
  def created_via_email; end

  sig { returns(T::Boolean) }
  def created_via_email?; end

  sig { returns(T.nilable(Integer)) }
  def database_id; end

  sig { returns(T::Boolean) }
  def database_id?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::InterfaceType)) }
  def editor; end

  sig { returns(T::Boolean) }
  def editor?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(T::Boolean) }
  def includes_created_edit; end

  sig { returns(T::Boolean) }
  def includes_created_edit?; end

  sig { returns(T.nilable(T::Boolean)) }
  def is_answered; end

  sig { returns(T::Boolean) }
  def is_answered?; end

  sig { returns(T.nilable(PlatformTypes::LabelConnection)) }
  def labels; end

  sig { returns(T::Boolean) }
  def labels?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def last_edited_at; end

  sig { returns(T::Boolean) }
  def last_edited_at?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def last_reported_at; end

  sig { returns(T::Boolean) }
  def last_reported_at?; end

  sig { returns(T.nilable(PlatformTypes::UserContentEdit)) }
  def last_user_content_edit; end

  sig { returns(T::Boolean) }
  def last_user_content_edit?; end

  sig { returns(T::Boolean) }
  def locked; end

  sig { returns(T::Boolean) }
  def locked?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def markdown_preview; end

  sig { returns(T::Boolean) }
  def markdown_preview?; end

  sig { returns(T.nilable(PlatformTypes::MentionableItemConnection)) }
  def mentionable_items; end

  sig { returns(T::Boolean) }
  def mentionable_items?; end

  sig { returns(Integer) }
  def number; end

  sig { returns(T::Boolean) }
  def number?; end

  sig { returns(T.nilable(PlatformTypes::DiscussionPoll)) }
  def poll; end

  sig { returns(T::Boolean) }
  def poll?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def published_at; end

  sig { returns(T::Boolean) }
  def published_at?; end

  sig { returns(GraphQL::Client::Schema::InterfaceType) }
  def reaction_admin; end

  sig { returns(T::Boolean) }
  def reaction_admin?; end

  sig { returns(T.nilable(T::Array[PlatformTypes::ReactionGroup])) }
  def reaction_groups; end

  sig { returns(T::Boolean) }
  def reaction_groups?; end

  sig { returns(String) }
  def reaction_path; end

  sig { returns(T::Boolean) }
  def reaction_path?; end

  sig { returns(PlatformTypes::ReactionConnection) }
  def reactions; end

  sig { returns(T::Boolean) }
  def reactions?; end

  sig { returns(T.nilable(PlatformTypes::Release)) }
  def release; end

  sig { returns(T::Boolean) }
  def release?; end

  sig { returns(T.nilable(Integer)) }
  def report_count; end

  sig { returns(T::Boolean) }
  def report_count?; end

  sig { returns(PlatformTypes::Repository) }
  def repository; end

  sig { returns(T::Boolean) }
  def repository?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def resource_path; end

  sig { returns(T::Boolean) }
  def resource_path?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def short_body_html; end

  sig { returns(T::Boolean) }
  def short_body_html?; end

  sig { returns(T::Boolean) }
  def show_edit_history_onboarding; end

  sig { returns(T::Boolean) }
  def show_edit_history_onboarding?; end

  sig { returns(T::Boolean) }
  def show_first_contribution_prompt; end

  sig { returns(T::Boolean) }
  def show_first_contribution_prompt?; end

  sig { returns(T::Boolean) }
  def spammy; end

  sig { returns(T::Boolean) }
  def spammy?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def stafftools_url; end

  sig { returns(T::Boolean) }
  def stafftools_url?; end

  sig { returns(T.nilable(String)) }
  def state_reason; end

  sig { returns(T::Boolean) }
  def state_reason?; end

  sig { returns(T.nilable(T.any(String, Integer))) }
  def subject_id; end

  sig { returns(T::Boolean) }
  def subject_id?; end

  sig { returns(String) }
  def title; end

  sig { returns(T::Boolean) }
  def title?; end

  sig { returns(T.nilable(String)) }
  def top_report_reason; end

  sig { returns(T::Boolean) }
  def top_report_reason?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def updated_at; end

  sig { returns(T::Boolean) }
  def updated_at?; end

  sig { returns(T.nilable(String)) }
  def updates_channel; end

  sig { returns(T::Boolean) }
  def updates_channel?; end

  sig { returns(Integer) }
  def upvote_count; end

  sig { returns(T::Boolean) }
  def upvote_count?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def url; end

  sig { returns(T::Boolean) }
  def url?; end

  sig { returns(T.nilable(PlatformTypes::UserContentEditConnection)) }
  def user_content_edits; end

  sig { returns(T::Boolean) }
  def user_content_edits?; end

  sig { returns(T.nilable(PlatformTypes::App)) }
  def via_app; end

  sig { returns(T::Boolean) }
  def via_app?; end

  sig { returns(T::Boolean) }
  def viewer_can_block_from_org; end

  sig { returns(T::Boolean) }
  def viewer_can_block_from_org?; end

  sig { returns(T::Boolean) }
  def viewer_can_close; end

  sig { returns(T::Boolean) }
  def viewer_can_close?; end

  sig { returns(T::Boolean) }
  def viewer_can_delete; end

  sig { returns(T::Boolean) }
  def viewer_can_delete?; end

  sig { returns(T::Boolean) }
  def viewer_can_label; end

  sig { returns(T::Boolean) }
  def viewer_can_label?; end

  sig { returns(T::Boolean) }
  def viewer_can_react; end

  sig { returns(T::Boolean) }
  def viewer_can_react?; end

  sig { returns(T::Boolean) }
  def viewer_can_read_user_content_edits; end

  sig { returns(T::Boolean) }
  def viewer_can_read_user_content_edits?; end

  sig { returns(T::Boolean) }
  def viewer_can_reopen; end

  sig { returns(T::Boolean) }
  def viewer_can_reopen?; end

  sig { returns(T::Boolean) }
  def viewer_can_see_delete_button; end

  sig { returns(T::Boolean) }
  def viewer_can_see_delete_button?; end

  sig { returns(T::Boolean) }
  def viewer_can_subscribe; end

  sig { returns(T::Boolean) }
  def viewer_can_subscribe?; end

  sig { returns(T::Boolean) }
  def viewer_can_unblock_from_org; end

  sig { returns(T::Boolean) }
  def viewer_can_unblock_from_org?; end

  sig { returns(T::Boolean) }
  def viewer_can_unsubscribe; end

  sig { returns(T::Boolean) }
  def viewer_can_unsubscribe?; end

  sig { returns(T::Boolean) }
  def viewer_can_update; end

  sig { returns(T::Boolean) }
  def viewer_can_update?; end

  sig { returns(T::Boolean) }
  def viewer_can_upvote; end

  sig { returns(T::Boolean) }
  def viewer_can_upvote?; end

  sig { returns(T::Boolean) }
  def viewer_did_author; end

  sig { returns(T::Boolean) }
  def viewer_did_author?; end

  sig { returns(T::Boolean) }
  def viewer_has_upvoted; end

  sig { returns(T::Boolean) }
  def viewer_has_upvoted?; end

  sig { returns(T.nilable(String)) }
  def viewer_subscription; end

  sig { returns(T::Boolean) }
  def viewer_subscription?; end
end
