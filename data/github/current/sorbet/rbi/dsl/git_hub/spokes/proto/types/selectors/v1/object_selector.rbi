# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Spokes::Proto::Types::Selectors::V1::ObjectSelector`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Spokes::Proto::Types::Selectors::V1::ObjectSelector`.

class GitHub::Spokes::Proto::Types::Selectors::V1::ObjectSelector
  sig do
    params(
      by_id: T.nilable(GitHub::Spokes::Proto::Types::V1::ObjectID),
      by_name: T.nilable(GitHub::Spokes::Proto::Types::V1::Revision),
      by_treeish_and_path: T.nilable(GitHub::Spokes::Proto::Types::Selectors::V1::ObjectSelector::TreeishAndPath)
    ).void
  end
  def initialize(by_id: nil, by_name: nil, by_treeish_and_path: nil); end

  sig { returns(T.nilable(GitHub::Spokes::Proto::Types::V1::ObjectID)) }
  def by_id; end

  sig { params(value: T.nilable(GitHub::Spokes::Proto::Types::V1::ObjectID)).void }
  def by_id=(value); end

  sig { returns(T.nilable(GitHub::Spokes::Proto::Types::V1::Revision)) }
  def by_name; end

  sig { params(value: T.nilable(GitHub::Spokes::Proto::Types::V1::Revision)).void }
  def by_name=(value); end

  sig { returns(T.nilable(GitHub::Spokes::Proto::Types::Selectors::V1::ObjectSelector::TreeishAndPath)) }
  def by_treeish_and_path; end

  sig { params(value: T.nilable(GitHub::Spokes::Proto::Types::Selectors::V1::ObjectSelector::TreeishAndPath)).void }
  def by_treeish_and_path=(value); end

  sig { void }
  def clear_by_id; end

  sig { void }
  def clear_by_name; end

  sig { void }
  def clear_by_treeish_and_path; end

  sig { returns(T.nilable(Symbol)) }
  def object; end
end
