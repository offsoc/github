# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Api::App::PlatformTypes::Release`.
# Please instead update this file by running `bin/tapioca dsl Api::App::PlatformTypes::Release`.

class Api::App::PlatformTypes::Release < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(T.nilable(Api::App::PlatformTypes::User)) }
  def author; end

  sig { returns(T::Boolean) }
  def author?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def created_at; end

  sig { returns(T::Boolean) }
  def created_at?; end

  sig { returns(T.nilable(Integer)) }
  def database_id; end

  sig { returns(T::Boolean) }
  def database_id?; end

  sig { returns(T.nilable(String)) }
  def description; end

  sig { returns(T::Boolean) }
  def description?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def description_html; end

  sig { returns(T::Boolean) }
  def description_html?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::Discussion)) }
  def discussion; end

  sig { returns(T::Boolean) }
  def discussion?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(T::Boolean) }
  def is_draft; end

  sig { returns(T::Boolean) }
  def is_draft?; end

  sig { returns(T::Boolean) }
  def is_latest; end

  sig { returns(T::Boolean) }
  def is_latest?; end

  sig { returns(T::Boolean) }
  def is_prerelease; end

  sig { returns(T::Boolean) }
  def is_prerelease?; end

  sig { returns(T::Boolean) }
  def is_published_on_marketplace; end

  sig { returns(T::Boolean) }
  def is_published_on_marketplace?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::UserConnection)) }
  def mentions; end

  sig { returns(T::Boolean) }
  def mentions?; end

  sig { returns(T.nilable(String)) }
  def name; end

  sig { returns(T::Boolean) }
  def name?; end

  sig { returns(Api::App::PlatformTypes::PackageVersionConnection) }
  def package_versions; end

  sig { returns(T::Boolean) }
  def package_versions?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def published_at; end

  sig { returns(T::Boolean) }
  def published_at?; end

  sig { returns(GraphQL::Client::Schema::InterfaceType) }
  def reaction_admin; end

  sig { returns(T::Boolean) }
  def reaction_admin?; end

  sig { returns(T.nilable(T::Array[Api::App::PlatformTypes::ReactionGroup])) }
  def reaction_groups; end

  sig { returns(T::Boolean) }
  def reaction_groups?; end

  sig { returns(String) }
  def reaction_path; end

  sig { returns(T::Boolean) }
  def reaction_path?; end

  sig { returns(Api::App::PlatformTypes::ReactionConnection) }
  def reactions; end

  sig { returns(T::Boolean) }
  def reactions?; end

  sig { returns(Api::App::PlatformTypes::ReleaseAssetConnection) }
  def release_assets; end

  sig { returns(T::Boolean) }
  def release_assets?; end

  sig { returns(Api::App::PlatformTypes::Repository) }
  def repository; end

  sig { returns(T::Boolean) }
  def repository?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::RepositoryAction)) }
  def repository_action; end

  sig { returns(T::Boolean) }
  def repository_action?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def resource_path; end

  sig { returns(T::Boolean) }
  def resource_path?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def short_description_html; end

  sig { returns(T::Boolean) }
  def short_description_html?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::Ref)) }
  def tag; end

  sig { returns(T::Boolean) }
  def tag?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::Commit)) }
  def tag_commit; end

  sig { returns(T::Boolean) }
  def tag_commit?; end

  sig { returns(String) }
  def tag_name; end

  sig { returns(T::Boolean) }
  def tag_name?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def updated_at; end

  sig { returns(T::Boolean) }
  def updated_at?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def url; end

  sig { returns(T::Boolean) }
  def url?; end

  sig { returns(T::Boolean) }
  def viewer_can_react; end

  sig { returns(T::Boolean) }
  def viewer_can_react?; end
end
