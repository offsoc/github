<% content = capture do %>
  <div class="<%= class_names(
    "reactions-container",
    "d-flex",
    "flex-items-start",
    "flex-row-reverse",
    "flex-justify-end",
    "d-md-flex",
    "ml-2",
    "has-reactions" => !timeline_or_feed.fast_reactions_for(target).empty?,
    ) %>"
    <%= test_selector("reactions-container") %>
  >
    <div class="js-reactions-container">
      <div <%= test_selector("reactions-options") %> class=" js-comment-reactions-options d-flex flex-items-center flex-row flex-wrap">
        <% Emotion.all.each_with_index do |emotion, index| %>
          <% next if !timeline_or_feed.fast_reactions_for(target).has_key?(emotion.content) %>
          <%= render(
            Reactions::ReactionButtonComponent.new(
              emotion: emotion,
              disabled: true,
              index: index,
              test_selector: "discussion_reaction_#{emotion.content}_#{target.id}"
            )
          ) do %>
            <%= helpers.cached_emoji_tag(emotion.emoji_character, alias: emotion.content, class: "social-button-emoji") %>
            <span><%= reaction_count(emotion) %></span>
          <% end %>
        <% end %>
      </div>

      <details class="dropdown details-reset details-overlay d-inline-block js-all-reactions-popover" hidden>
        <%= render Primer::Beta::Button.new(tag: :summary, scheme: :link, "aria-haspopup": "true") do %>
          All reactions
        <% end %>

        <ul class="dropdown-menu dropdown-menu-se">
          <% Emotion.all.each_with_index do |emotion, idx| %>
            <% next if !timeline_or_feed.fast_reactions_for(target).has_key?(emotion.content) %>
            <li class="dropdown-item" aria-label="<%= emotion.content %>">
              <%= helpers.cached_emoji_tag(emotion.emoji_character, alias: emotion.content, class: "social-button-emoji") %>
              <span><%= reaction_count(emotion) %></span>
            </li>
          <% end %>
        </ul>
      </details>
    </div>

    <% if viewer_can_react %>
      <% if show_reaction_button %>
        <%= render Reactions::DropdownComponent.placeholder(
          inline_with_reactions: !comment_is_nested?
        ) %>
      <% end %>
    <% end %>
  </div>
<% end %>

<% if logged_in? %>
  <%= render GitHub::BatchDeferredContentComponent.new(url: deferred_content_path, inputs: deferred_content_inputs) do %>
    <%= content %>
  <% end %>
<% else %>
  <%= content %>
<% end %>
