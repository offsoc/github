{"version":3,"file":"copilot-immersive-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/copilot-immersive/App.tsx","ui/packages/use-scrollbar-width/use-scrollbar-width.ts","ui/packages/copilot-chat/components/SelectMenu.tsx","ui/packages/copilot-chat/components/PreviousThreadsHeaderMenu.tsx","ui/packages/copilot-immersive/components/RepoButton.tsx","ui/packages/copilot-immersive/components/ThreadHeaderMenu.tsx","ui/packages/copilot-immersive/components/Header.tsx","ui/packages/copilot-immersive/components/Layout.tsx","ui/packages/copilot-immersive/components/Unlicensed.module.css","ui/packages/copilot-immersive/components/Unlicensed.tsx","ui/packages/copilot-immersive/routes/CopilotImmersive.tsx","ui/packages/copilot-immersive/copilot-immersive.ts","ui/packages/react-core/JsonRoute.tsx"],"sourcesContent":["import type React from 'react'\n\n/**\n * The App component is used to render content which should be present on _all_ routes within this app\n */\nexport function App(props: {children?: React.ReactNode}) {\n  return <>{props.children}</>\n}\n\ntry{ App.displayName ||= 'App' } catch {}","import {useSyncExternalStore} from 'react'\n\nlet scrollbarWidth: number | null = null\n\nexport function useScrollbarWidth() {\n  return useSyncExternalStore(\n    () => () => {},\n    () => {\n      if (scrollbarWidth === null) {\n        scrollbarWidth = measureScrollbarWidth()\n      }\n      return scrollbarWidth\n    },\n    () => 0,\n  )\n}\n\nfunction measureScrollbarWidth(): number {\n  const el = document.createElement('div')\n  el.style.cssText = 'overflow:scroll; visibility:hidden; position:absolute;'\n  document.body.appendChild(el)\n  const width = el.offsetWidth - el.clientWidth\n  el.remove()\n  return width\n}\n","import {SearchIcon} from '@primer/octicons-react'\nimport {ActionList, Box, Heading, TextInput} from '@primer/react'\nimport {useState} from 'react'\n\nexport interface SelectMenuItem {\n  id: string\n  text: string\n  leadingVisual?: React.ReactNode\n  href?: string\n}\n\ninterface Props {\n  title: string\n  items: SelectMenuItem[]\n  selectedItemID?: string | null\n  onSelect?: (item: SelectMenuItem) => void\n  searchPlaceholder?: string\n  loading?: boolean\n  asLinks?: boolean\n}\n\nexport const SelectMenu = ({title, items, selectedItemID, onSelect, loading, searchPlaceholder, asLinks}: Props) => {\n  const [filter, setFilter] = useState('')\n  const filteredItems = items.filter(item => item.text.toLowerCase().includes(filter.toLowerCase()))\n\n  return (\n    <>\n      <Box sx={{px: 3, py: 2}}>\n        <Heading as=\"h1\" sx={{fontSize: 1}}>\n          {title}\n        </Heading>\n      </Box>\n      <Box sx={{px: 2}}>\n        <TextInput\n          block\n          contrast\n          leadingVisual={SearchIcon}\n          aria-label={searchPlaceholder || 'Search'}\n          placeholder={searchPlaceholder || 'Search'}\n          value={filter}\n          onChange={event => setFilter(event.target.value)}\n        />\n        <span className=\"sr-only\">Items will be filtered as you type</span>\n      </Box>\n      <ActionList sx={{py: 0}}>\n        <ActionList.Divider sx={{mb: 0}} />\n      </ActionList>\n      <ActionList sx={{maxHeight: '30dvh', overflowY: 'auto', overflowX: 'hidden'}}>\n        {loading ? (\n          <ActionList.Item sx={{p: 3, textAlign: 'center'}}>Loading...</ActionList.Item>\n        ) : !filteredItems.length ? (\n          <ActionList.Item sx={{p: 3, textAlign: 'center'}}>No items</ActionList.Item>\n        ) : (\n          filteredItems.map(item =>\n            asLinks ? (\n              <ActionList.LinkItem\n                key={item.id}\n                active={item.id === selectedItemID}\n                href={item.id !== selectedItemID ? item.href : undefined}\n              >\n                {item.leadingVisual && <ActionList.LeadingVisual>{item.leadingVisual}</ActionList.LeadingVisual>}\n                {item.text}\n              </ActionList.LinkItem>\n            ) : (\n              <ActionList.Item\n                key={item.id}\n                active={item.id === selectedItemID}\n                onSelect={() => (item.id !== selectedItemID ? onSelect?.(item) : undefined)}\n              >\n                {item.leadingVisual && <ActionList.LeadingVisual>{item.leadingVisual}</ActionList.LeadingVisual>}\n                {item.text}\n              </ActionList.Item>\n            ),\n          )\n        )}\n      </ActionList>\n    </>\n  )\n}\n\ntry{ SelectMenu.displayName ||= 'SelectMenu' } catch {}","import {IconButtonWithTooltip} from '@github-ui/icon-button-with-tooltip'\nimport {HistoryIcon} from '@primer/octicons-react'\nimport {ActionMenu} from '@primer/react'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\n\nimport {threadName} from '../utils/copilot-chat-helpers'\nimport {useChatState} from '../utils/CopilotChatContext'\nimport {useChatManager} from '../utils/CopilotChatManagerContext'\nimport {SelectMenu, type SelectMenuItem} from './SelectMenu'\n\nexport const PreviousThreadsHeaderMenu = () => {\n  const {threads, selectedThreadID, mode} = useChatState()\n  const manager = useChatManager()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const items = useMemo(\n    () =>\n      manager.sortThreads(threads).map(t => ({\n        id: t.id,\n        text: threadName(t),\n        // TODO: show avatar stack for agents\n        href: `/copilot/c/${t.id}`,\n      })),\n    [threads, manager],\n  )\n\n  const handleSelect = useCallback(\n    async (item: SelectMenuItem) => {\n      const t = threads.get(item.id)\n      if (!t) return\n\n      await manager.selectThread(t)\n    },\n    [threads, manager],\n  )\n\n  useEffect(() => {\n    const loadThreads = async () => {\n      setIsLoading(true)\n      await manager.fetchThreads()\n      setIsLoading(false)\n    }\n\n    void loadThreads()\n  }, [manager])\n\n  return (\n    <ActionMenu>\n      <ActionMenu.Anchor>\n        <IconButtonWithTooltip\n          icon={HistoryIcon}\n          label=\"Conversation history\"\n          tooltipDirection=\"s\"\n          variant=\"invisible\"\n          sx={{color: 'fg.muted'}}\n        />\n      </ActionMenu.Anchor>\n      <ActionMenu.Overlay width=\"medium\">\n        <SelectMenu\n          title=\"Previous conversations\"\n          searchPlaceholder=\"Search previous conversations\"\n          items={items}\n          selectedItemID={selectedThreadID}\n          onSelect={handleSelect}\n          loading={isLoading}\n          asLinks={mode === 'immersive'}\n        />\n      </ActionMenu.Overlay>\n    </ActionMenu>\n  )\n}\n\ntry{ PreviousThreadsHeaderMenu.displayName ||= 'PreviousThreadsHeaderMenu' } catch {}","import {RepoAvatar} from '@github-ui/copilot-chat/components/RepoAvatar'\nimport type {CopilotChatRepo} from '@github-ui/copilot-chat/utils/copilot-chat-types'\nimport {LinkExternalIcon} from '@primer/octicons-react'\nimport {ActionList, AnchoredOverlay, Box, Button, Text} from '@primer/react'\nimport {useCallback, useState} from 'react'\n\nexport function RepoButton({repo}: {repo: CopilotChatRepo}) {\n  const [isOpen, setIsOpen] = useState(false)\n  const openOverlay = useCallback(() => setIsOpen(true), [setIsOpen])\n  const closeOverlay = useCallback(() => setIsOpen(false), [setIsOpen])\n\n  return (\n    <AnchoredOverlay\n      renderAnchor={anchorProps => (\n        <Button\n          {...anchorProps}\n          leadingVisual={() => <RepoAvatar ownerLogin={repo.ownerLogin} ownerType={repo.ownerType} size={20} />}\n          sx={{color: 'fg.default', height: '28px'}}\n          variant=\"invisible\"\n        >\n          {repo.name}\n        </Button>\n      )}\n      open={isOpen}\n      onOpen={openOverlay}\n      onClose={closeOverlay}\n      overlayProps={{width: 'large'}}\n    >\n      <Box sx={{display: 'flex', flexDirection: 'column', maxWidth: '500px', padding: 2}}>\n        <Box sx={{display: 'flex', flexDirection: 'row', gap: 2, alignItems: 'center', p: 2, pb: 0}}>\n          <RepoAvatar ownerLogin={repo.ownerLogin} ownerType={repo.ownerType} size={32} />\n          <Box sx={{display: 'flex', flexDirection: 'column'}}>\n            <Text sx={{fontSize: 1, fontWeight: 600}}>{repo.name}</Text>\n            <Text sx={{color: 'fg.muted', fontSize: 0}}>\n              <span style={{textTransform: 'capitalize'}}>{repo.visibility}</span> repository\n            </Text>\n          </Box>\n        </Box>\n        {repo.description && <Text sx={{p: 2, pt: 3}}>{repo.description}</Text>}\n        <ActionList.Divider sx={{mx: '-8px'}} />\n        <ActionList.LinkItem href={`/${repo.ownerLogin}/${repo.name}?copilot=1`}>\n          <ActionList.LeadingVisual>\n            <LinkExternalIcon />\n          </ActionList.LeadingVisual>\n          Open this conversation in repository view\n        </ActionList.LinkItem>\n      </Box>\n    </AnchoredOverlay>\n  )\n}\n\ntry{ RepoButton.displayName ||= 'RepoButton' } catch {}","import {ThreadOptionButton} from '@github-ui/copilot-chat/components/Header'\nimport {useChatState} from '@github-ui/copilot-chat/CopilotChatContext'\nimport {useChatManager} from '@github-ui/copilot-chat/CopilotChatManagerContext'\nimport {COPILOT_PATH} from '@github-ui/copilot-chat/utils/copilot-chat-helpers'\nimport {useNavigate} from '@github-ui/use-navigate'\n\nexport interface ThreadHeaderMenuProps {\n  setShowExperimentsDialog: (value: boolean) => void\n}\n\nexport const ThreadHeaderMenu = (props: ThreadHeaderMenuProps) => {\n  const {selectedThreadID, threads, mode} = useChatState()\n  const manager = useChatManager()\n  const navigate = useNavigate()\n\n  const thread = selectedThreadID ? threads.get(selectedThreadID) : null\n\n  const handleDelete = () => {\n    if (thread) {\n      void manager.deleteThread(thread)\n    }\n\n    if (mode === 'immersive') {\n      navigate(COPILOT_PATH)\n    }\n  }\n\n  return (\n    <ThreadOptionButton\n      handleDelete={handleDelete}\n      setShowExperimentsDialog={props.setShowExperimentsDialog}\n      thread={thread}\n    />\n  )\n}\n\ntry{ ThreadHeaderMenu.displayName ||= 'ThreadHeaderMenu' } catch {}","import {ExperimentsDialog} from '@github-ui/copilot-chat/components/ExperimentsDialog'\nimport {PreviousThreadsHeaderMenu} from '@github-ui/copilot-chat/components/PreviousThreadsHeaderMenu'\nimport {useChatState} from '@github-ui/copilot-chat/CopilotChatContext'\nimport {useChatManager} from '@github-ui/copilot-chat/CopilotChatManagerContext'\nimport {isRepository, threadName as getThreadName} from '@github-ui/copilot-chat/utils/copilot-chat-helpers'\nimport {setTitle} from '@github-ui/document-metadata'\nimport {PlusIcon} from '@primer/octicons-react'\nimport {Box, Heading, LinkButton} from '@primer/react'\n\nimport {RepoButton} from './RepoButton'\nimport {ThreadHeaderMenu} from './ThreadHeaderMenu'\n\ninterface HeaderProps {\n  experimentsDialogRef: React.MutableRefObject<HTMLDivElement | null>\n  showExperimentsDialog: boolean\n  setShowExperimentsDialog: (value: boolean) => void\n}\n\nexport function Header(props: HeaderProps) {\n  const {experimentsDialogRef, showExperimentsDialog, setShowExperimentsDialog} = props\n  const state = useChatState()\n  const manager = useChatManager()\n  const {currentTopic, messages} = state\n  const threadName = getThreadName(manager.getSelectedThread(state))\n  setTitle(`${threadName} · GitHub Copilot`)\n\n  return messages.length > 0 || state.currentTopic ? (\n    <Box\n      sx={{\n        alignItems: 'center',\n        borderBottom: '1px solid',\n        borderBottomColor: 'border.default',\n        justifyContent: 'space-between',\n        display: 'flex',\n        px: 3,\n        py: '12px',\n      }}\n    >\n      <Heading as=\"h1\" sx={{fontSize: 2, mr: 1}}>\n        {threadName}\n      </Heading>\n      {messages.length > 0 && currentTopic && isRepository(currentTopic) && <RepoButton repo={currentTopic} />}\n      <Box sx={{marginInlineStart: 'auto'}}>\n        <Actions setShowExperimentsDialog={setShowExperimentsDialog} />\n      </Box>\n      {showExperimentsDialog && (\n        <ExperimentsDialog\n          onDismiss={() => {\n            setShowExperimentsDialog(false)\n          }}\n          experimentsDialogRef={experimentsDialogRef}\n        />\n      )}\n    </Box>\n  ) : null\n}\n\ninterface ActionsProps {\n  setShowExperimentsDialog: (value: boolean) => void\n}\n\nfunction Actions(props: ActionsProps) {\n  return (\n    <Box sx={{alignItems: 'center', display: 'flex', flexShrink: 0, gap: 1}}>\n      <LinkButton\n        href=\"/copilot\"\n        leadingVisual={PlusIcon}\n        sx={{\n          mr: 1,\n          '[data-component=text]': {display: ['none', 'block', 'block']}, // Hide the button text on the smallest screens\n        }}\n      >\n        New conversation\n      </LinkButton>\n      <PreviousThreadsHeaderMenu />\n      <ThreadHeaderMenu setShowExperimentsDialog={props.setShowExperimentsDialog} />\n    </Box>\n  )\n}\n\ntry{ Header.displayName ||= 'Header' } catch {}\ntry{ Actions.displayName ||= 'Actions' } catch {}","import {Header as AssistiveHeader} from '@github-ui/copilot-chat/components/Header'\nimport {useChatState} from '@github-ui/copilot-chat/CopilotChatContext'\nimport {isRepository} from '@github-ui/copilot-chat/utils/copilot-chat-helpers'\nimport {CopilotReferencePreviewDialog} from '@github-ui/copilot-reference-preview/CopilotReferencePreviewDialog'\nimport {useScrollbarWidth} from '@github-ui/use-scrollbar-width'\nimport {Box, PageLayout} from '@primer/react'\nimport {useEffect, useRef, useState} from 'react'\n\nimport {fullChatWidth} from '../utils/constants'\nimport {Header} from './Header'\n\nconst mobileInputHeight = 92 + 16\nconst mobileInputHeightNoAttach = 46 + 16\n\ninterface LayoutProps {\n  chat: JSX.Element\n}\n\nexport function Layout({chat}: LayoutProps) {\n  const state = useChatState()\n  const [showExperimentsDialog, setShowExperimentsDialog] = useState(false)\n  const experimentsDialogRef = useRef<HTMLDivElement>(null)\n  const workspaceHeight = state.messages.length ? '100dvh - 64px - 52px' : '100dvh - 64px' // 64px = header height, 52px = conversation header height if messages present\n\n  const scrollbarWidth = useScrollbarWidth()\n  const styleInitialized = useRef(false)\n\n  useEffect(() => {\n    if (!styleInitialized.current) {\n      const srCss = '#js-global-screen-reader-notice, #js-global-screen-reader-notice-assertive { margin: -1px; }'\n      const style = document.createElement('style')\n      document.head.appendChild(style)\n      style.appendChild(document.createTextNode(srCss))\n    }\n    styleInitialized.current = true\n  }, [])\n\n  const shouldShowReferences = state.currentTopic && isRepository(state.currentTopic)\n\n  return (\n    <PageLayout\n      columnGap=\"normal\"\n      containerWidth=\"full\"\n      padding=\"normal\"\n      rowGap=\"normal\"\n      sx={{\n        '> div': {flexDirection: 'column', height: 'inherit', flexWrap: 'nowrap'},\n        height: `calc(${workspaceHeight})`,\n        paddingLeft: '0 !important',\n        paddingRight: '0 !important',\n        paddingTop: '0 !important',\n      }}\n    >\n      <PageLayout.Header sx={{mb: '0 !important'}}>\n        <Box sx={{'@media screen and (max-width: 767px)': {display: 'none'}}}>\n          <Header\n            setShowExperimentsDialog={setShowExperimentsDialog}\n            experimentsDialogRef={experimentsDialogRef}\n            showExperimentsDialog={showExperimentsDialog}\n          />\n        </Box>\n        <Box sx={{'@media screen and (min-width: 768px)': {display: 'none'}}}>\n          <AssistiveHeader\n            view=\"thread\"\n            showExperimentsDialog={showExperimentsDialog}\n            setShowExperimentsDialog={setShowExperimentsDialog}\n            experimentsDialogRef={experimentsDialogRef}\n            isImmersive={true}\n          />\n        </Box>\n      </PageLayout.Header>\n      <CopilotReferencePreviewDialog />\n      <PageLayout.Content\n        as=\"div\"\n        sx={{\n          'div:has(> [role=\"separator\"])': {\n            left: [null, null, '9px', '10px'],\n            height: 0,\n            top: 'calc(50% - 5%)',\n            m: 0,\n          },\n          marginLeft: 'auto',\n          marginRight: 'auto !important',\n          '@media screen and (max-width: 767px)': {\n            px: 3,\n          },\n        }}\n        width={undefined}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            minHeight: '100%',\n            maxHeight: `calc(${workspaceHeight})`, // Account for the vertical padding on the PageLayout\n            pb: 3,\n            pt: 0,\n            pr: 0,\n            pl: 1,\n            overflow: ['visible', 'visible', 'hidden'],\n            '.copilot-messages-container': {\n              pb: [mobileInputHeight, mobileInputHeight, 0], // Make space for the fixed-position input\n            },\n            '.copilot-chat-messages, .copilot-chat-input': {\n              p: 0,\n              width: '100%',\n            },\n            '.copilot-chat-messages': {\n              height: state.messages.length ? '100vh' : undefined,\n              overflowY: ['visible', 'visible', 'auto'], // The messages container should not scroll separately on mobile\n              pt: 3,\n              pb: [\n                shouldShowReferences ? mobileInputHeight : mobileInputHeightNoAttach,\n                shouldShowReferences ? mobileInputHeight : mobileInputHeightNoAttach,\n                0,\n              ],\n              pl: [0, 0, `calc((100% - ${fullChatWidth}px) / 2)`],\n              pr: [0, 0, `calc((100% - ${fullChatWidth}px) / 2 - ${scrollbarWidth}px)`],\n              overscrollBehavior: 'auto',\n            },\n            '.copilot-chat-input': {\n              position: ['fixed', 'fixed', 'relative'], // The input needs fixed positioning on mobile\n              bottom: [3, 3, 0],\n              left: ['20px', '20px', '0'],\n              width: [`calc(100vw - 35px - ${scrollbarWidth}px)`, `calc(100vw - 35px - ${scrollbarWidth}px)`, '100%'],\n              px: [0, 0, `calc((100% - ${fullChatWidth}px) / 2)`],\n            },\n          }}\n          data-hpc\n        >\n          {chat}\n        </Box>\n      </PageLayout.Content>\n    </PageLayout>\n  )\n}\n\ntry{ Layout.displayName ||= 'Layout' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"Unlicensed-module__Container--I0TFf\",\"Top\":\"Unlicensed-module__Top--cWpnI\",\"Bottom\":\"Unlicensed-module__Bottom--OirW4\",\"Info\":\"Unlicensed-module__Info--OtZ1X\"};","import CopilotIconAnimation from '@github-ui/copilot-chat/CopilotIconAnimation'\nimport {CopilotIcon} from '@primer/octicons-react'\nimport {Link, LinkButton} from '@primer/react'\nimport {Banner} from '@primer/react/experimental'\n\nimport styles from './Unlicensed.module.css'\n\nexport function Unlicensed() {\n  return (\n    <div className={styles.Container}>\n      <div className={styles.Top}>\n        <CopilotIconAnimation />\n      </div>\n      <div className={styles.Bottom}>\n        <Banner\n          variant=\"upsell\"\n          title=\"Upgrade\"\n          hideTitle\n          icon={<CopilotIcon />}\n          description={<span>Accelerate your development speed with Copilot</span>}\n          primaryAction={\n            <LinkButton as=\"a\" href=\"https://github.com/features/copilot#pricing\">\n              Upgrade\n            </LinkButton>\n          }\n        />\n        <p className={styles.Info}>\n          Discover all the{' '}\n          <Link href=\"https://github.com/features/copilot\" inline>\n            benefits\n          </Link>{' '}\n          of the world’s leading AI developer tool.\n        </p>\n      </div>\n    </div>\n  )\n}\n\ntry{ Unlicensed.displayName ||= 'Unlicensed' } catch {}","import {Chat} from '@github-ui/copilot-chat/Chat'\nimport {CopilotChatProvider, useChatState} from '@github-ui/copilot-chat/CopilotChatContext'\nimport {useChatManager} from '@github-ui/copilot-chat/CopilotChatManagerContext'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {ScreenSizeProvider} from '@github-ui/screen-size'\nimport {QueryClient, QueryClientProvider} from '@tanstack/react-query'\nimport {useEffect} from 'react'\n\nimport {Layout} from '../components/Layout'\nimport {Unlicensed} from '../components/Unlicensed'\nimport type {CopilotImmersivePayload, CopilotImmersiveUnlicensedPayload} from './payloads'\n\nexport function CopilotImmersive() {\n  const payload = useRoutePayload<CopilotImmersivePayload | CopilotImmersiveUnlicensedPayload>()\n  if (payload.licensed) {\n    return (\n      <CopilotImmersiveProviders>\n        <Immersive />\n      </CopilotImmersiveProviders>\n    )\n  } else {\n    return <Unlicensed />\n  }\n}\n\nconst queryClient = new QueryClient()\n\nfunction CopilotImmersiveProviders({children}: React.PropsWithChildren<unknown>) {\n  const payload = useRoutePayload<CopilotImmersivePayload>()\n\n  return (\n    <ScreenSizeProvider>\n      <QueryClientProvider client={queryClient}>\n        <CopilotChatProvider\n          login={payload.currentUserLogin}\n          apiURL={payload.apiURL}\n          workerPath={payload.searchWorkerFilePath}\n          threadId={payload.threadID}\n          refs={[]}\n          mode=\"immersive\"\n          topic={payload.requestedTopic}\n          ssoOrganizations={payload.ssoOrganizations}\n          renderKnowledgeBases={payload.renderKnowledgeBases}\n          renderAttachKnowledgeBaseHerePopover={payload.renderAttachKnowledgeBaseHerePopover}\n          renderKnowledgeBaseAttachedToChatPopover={payload.renderKnowledgeBaseAttachedToChatPopover}\n          customInstructions={payload.customInstructions}\n          agentsPath={payload.agentsPath}\n          optedInToUserFeedback={payload.optedInToUserFeedback}\n          reviewLab={payload.reviewLab}\n        >\n          {children}\n        </CopilotChatProvider>\n      </QueryClientProvider>\n    </ScreenSizeProvider>\n  )\n}\n\nfunction Immersive() {\n  const state = useChatState()\n  const manager = useChatManager()\n  const {selectedThreadID} = state\n  useEffect(() => {\n    void manager.fetchMessages(selectedThreadID)\n    // NOTE: we only want to fetch messages on the initial page load\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    const onPopState = () => {\n      if (window.location.href.includes('/r/')) {\n        // the browser back/forward button was used to nav to a repo topic url\n        // hide the topic picker and clear the selected thread.\n        manager.showTopicPicker(false)\n        void manager.selectThread(null)\n      } else if (!window.location.href.includes('/c/')) {\n        // the browser back/forward button was used to nav to immersive landing page\n        // show the topic picker and clear the selected thread.\n        manager.showTopicPicker(true)\n        void manager.selectThread(null)\n      }\n    }\n    window.addEventListener('popstate', onPopState)\n    return () => {\n      window.removeEventListener('popstate', onPopState)\n    }\n  }, [manager])\n\n  return <Layout chat={<Chat key={state.selectedThreadID} />} />\n}\n\ntry{ CopilotImmersive.displayName ||= 'CopilotImmersive' } catch {}\ntry{ CopilotImmersiveProviders.displayName ||= 'CopilotImmersiveProviders' } catch {}\ntry{ Immersive.displayName ||= 'Immersive' } catch {}","import {jsonRoute} from '@github-ui/react-core/json-route'\nimport {registerReactAppFactory} from '@github-ui/react-core/register-app'\n\nimport {App} from './App'\nimport {CopilotImmersive} from './routes/CopilotImmersive'\n\nregisterReactAppFactory('copilot-immersive', () => ({\n  App,\n  routes: [\n    jsonRoute({path: '/copilot', Component: CopilotImmersive}),\n    jsonRoute({path: '/copilot/c/:threadID', Component: CopilotImmersive}),\n    jsonRoute({path: '/copilot/d/:docsetName', Component: CopilotImmersive}),\n    jsonRoute({path: '/copilot/r/:owner/:repository', Component: CopilotImmersive}),\n  ],\n}))\n","import type {ChildRoute, LoaderResult, RouteRegistration, TransitionType} from './app-routing-types'\nimport type React from 'react'\nimport type {Location} from '@remix-run/router'\n\nexport interface JsonRouteProps {\n  path: string\n  Component: React.ComponentType\n  transitionType?: TransitionType\n  shouldNavigateOnError?: boolean\n  children?: ChildRoute[]\n}\n/**\n * A utility for building a route registration for a route that consumes a JSON object (either via embedding in a\n * script tag or via a JSON fetch on React soft navigations).\n */\nexport function jsonRoute<TRouteData, TEmbeddedData>({\n  path,\n  Component,\n  /**\n   * Some routes want to handle their own errors and not just show a generic error page. In this case,\n   * the error is just handled like any other payload for the route.\n   * NOTE: We might consider replacing the shouldNavigateOnError flag with a parallel implementation to jsonRoute.\n   */\n  shouldNavigateOnError,\n  transitionType,\n  children,\n}: JsonRouteProps): RouteRegistration<TRouteData, TEmbeddedData> {\n  async function coreLoader({location}: {location: Location}): Promise<LoaderResult<TRouteData>> {\n    let response: Response\n    try {\n      const fetchPath = `${location.pathname}${location.search}`\n      response = await window.fetch(fetchPath, {\n        headers: {\n          Accept: 'application/json',\n          'X-Requested-With': 'XMLHttpRequest',\n          'X-GitHub-Target': 'dotcom',\n          'X-React-Router': 'json',\n        },\n      })\n    } catch (error) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'fetchError'},\n      }\n    }\n    if (response.redirected) {\n      return {\n        type: 'redirect',\n        url: response.url,\n      }\n    } else if (!response.ok) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'httpError', httpStatus: response.status},\n      }\n    } else {\n      try {\n        const responseJson = await response.json()\n        return {\n          type: 'loaded',\n          data: responseJson,\n          title: responseJson.title,\n        }\n      } catch (error) {\n        return {\n          type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n          error: {type: 'badResponseError'},\n        }\n      }\n    }\n  }\n\n  function loadFromEmbeddedData({embeddedData}: {embeddedData: TEmbeddedData}): {data: TRouteData; title: string} {\n    const data = embeddedData as unknown as TRouteData & {title: string}\n    return {data, title: data.title}\n  }\n\n  return {\n    path,\n    // TODO: consider wrapping Component with a component that passes payload as a prop — ideally as part of migrating\n    // away from useRoutePayload.\n    Component,\n    coreLoader,\n    loadFromEmbeddedData,\n    transitionType,\n    children,\n  }\n}\n"],"names":["App","props","children","displayName","scrollbarWidth","SelectMenu","title","items","selectedItemID","onSelect","loading","searchPlaceholder","asLinks","filter","setFilter","useState","filteredItems","item","text","toLowerCase","includes","Box","sx","px","py","Heading","as","fontSize","TextInput","block","contrast","leadingVisual","SearchIcon","aria-label","placeholder","value","onChange","event","target","span","className","ActionList","Divider","mb","maxHeight","overflowY","overflowX","Item","p","textAlign","length","map","LinkItem","active","id","href","undefined","LeadingVisual","PreviousThreadsHeaderMenu","threads","selectedThreadID","mode","useChatState","manager","useChatManager","isLoading","setIsLoading","useMemo","sortThreads","t","threadName","handleSelect","useCallback","get","selectThread","useEffect","loadThreads","fetchThreads","ActionMenu","Anchor","IconButtonWithTooltip","icon","HistoryIcon","label","tooltipDirection","variant","color","Overlay","width","RepoButton","repo","isOpen","setIsOpen","openOverlay","closeOverlay","AnchoredOverlay","renderAnchor","anchorProps","Button","RepoAvatar","ownerLogin","ownerType","size","height","name","open","onOpen","onClose","overlayProps","display","flexDirection","maxWidth","padding","gap","alignItems","pb","Text","fontWeight","style","textTransform","visibility","description","pt","mx","LinkExternalIcon","ThreadHeaderMenu","navigate","useNavigate","thread","ThreadOptionButton","handleDelete","deleteThread","COPILOT_PATH","setShowExperimentsDialog","Header","experimentsDialogRef","showExperimentsDialog","state","currentTopic","messages","getThreadName","getSelectedThread","setTitle","borderBottom","borderBottomColor","justifyContent","mr","isRepository","marginInlineStart","Actions","ExperimentsDialog","onDismiss","flexShrink","LinkButton","PlusIcon","Layout","chat","useRef","workspaceHeight","useSyncExternalStore","measureScrollbarWidth","el","document","createElement","cssText","body","appendChild","offsetWidth","clientWidth","remove","styleInitialized","current","head","createTextNode","shouldShowReferences","PageLayout","columnGap","containerWidth","rowGap","flexWrap","paddingLeft","paddingRight","paddingTop","AssistiveHeader","view","isImmersive","CopilotReferencePreviewDialog","Content","left","top","m","marginLeft","marginRight","minHeight","pr","pl","overflow","overscrollBehavior","position","bottom","data-hpc","Unlicensed","div","styles","Container","Top","CopilotIconAnimation","Bottom","Banner","hideTitle","CopilotIcon","primaryAction","Info","Link","inline","CopilotImmersive","useRoutePayload","licensed","CopilotImmersiveProviders","Immersive","queryClient","QueryClient","payload","ScreenSizeProvider","QueryClientProvider","client","CopilotChatProvider","login","currentUserLogin","apiURL","workerPath","searchWorkerFilePath","threadId","threadID","refs","topic","requestedTopic","ssoOrganizations","renderKnowledgeBases","renderAttachKnowledgeBaseHerePopover","renderKnowledgeBaseAttachedToChatPopover","customInstructions","agentsPath","optedInToUserFeedback","reviewLab","fetchMessages","onPopState","window","location","showTopicPicker","addEventListener","removeEventListener","Chat","registerReactAppFactory","routes","jsonRoute","path","Component","shouldNavigateOnError","transitionType","coreLoader","response","fetchPath","pathname","search","fetch","headers","Accept","error","type","redirected","url","ok","httpStatus","status","responseJson","json","data","loadFromEmbeddedData","embeddedData"],"sourceRoot":""}