# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::Entities::PublicKey`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::Entities::PublicKey`.

class Hydro::Schemas::Github::V1::Entities::PublicKey
  sig do
    params(
      accessed_at: T.nilable(Google::Protobuf::Timestamp),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      created_by: T.nilable(T.any(Symbol, Integer)),
      creator: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      id: T.nilable(Integer),
      read_only: T.nilable(T::Boolean),
      repository: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository),
      title: T.nilable(String),
      updated_at: T.nilable(Google::Protobuf::Timestamp),
      user: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      username: T.nilable(String),
      verified_at: T.nilable(Google::Protobuf::Timestamp),
      verifier: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(accessed_at: nil, created_at: nil, created_by: nil, creator: nil, id: nil, read_only: nil, repository: nil, title: nil, updated_at: nil, user: nil, username: nil, verified_at: nil, verifier: nil); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def accessed_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def accessed_at=(value); end

  sig { void }
  def clear_accessed_at; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_created_by; end

  sig { void }
  def clear_creator; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_read_only; end

  sig { void }
  def clear_repository; end

  sig { void }
  def clear_title; end

  sig { void }
  def clear_updated_at; end

  sig { void }
  def clear_user; end

  sig { void }
  def clear_username; end

  sig { void }
  def clear_verified_at; end

  sig { void }
  def clear_verifier; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def created_by; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def created_by=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def creator; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def creator=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(T::Boolean) }
  def read_only; end

  sig { params(value: T::Boolean).void }
  def read_only=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)) }
  def repository; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)).void }
  def repository=(value); end

  sig { returns(String) }
  def title; end

  sig { params(value: String).void }
  def title=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def user; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def user=(value); end

  sig { returns(String) }
  def username; end

  sig { params(value: String).void }
  def username=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def verified_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def verified_at=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def verifier; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def verifier=(value); end
end
