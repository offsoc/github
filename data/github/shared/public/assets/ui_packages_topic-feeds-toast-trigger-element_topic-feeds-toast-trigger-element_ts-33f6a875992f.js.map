{"version":3,"file":"chunk-ui_packages_topic-feeds-toast-trigger-element_topic-feeds-toast-trigger-element_ts-xxxxxxxxxxxx.js","mappings":"qLAAIA,EAEG,SAASC,EAAYC,CAAa,CAAEC,CAA8B,EAEvE,GADAC,IACI,CAACF,EAAM,OAEX,IAAMG,EAAUC,SAASC,aAAa,CAAC,MACvCF,CAAAA,EAAQG,SAAS,CAAGN,EAChBI,SAASG,IAAI,EAAEH,SAASG,IAAI,CAACC,MAAM,CAACL,GAExC,IAAMM,EAAQN,EAAQO,aAAa,CAAC,UAChCD,GACFA,EAAME,gBAAgB,CAAC,QAAST,EAAa,CAACU,KAAM,EAAI,GAG1DR,SAASO,gBAAgB,CAAC,UAAW,IAIjB,WAAdE,EAAMC,GAAG,EACPZ,KAAeW,EAAME,wBAAwB,EAGrD,GAEAjB,EAAiBK,EAEbF,GAASe,YACXC,WAAW,KACLnB,IAAmBK,GACrBD,GAEJ,EAAGD,EAAQe,UAAU,CAEzB,CAEA,SAASd,UACP,EAAKJ,IACLA,EAAeoB,MAAM,GACrBpB,EAAiB,KACV,GACT,C,idCrCO,wCAAMqB,sCAAsCC,YAIjDC,mBAAoB,CAClB,IAAI,CAACV,gBAAgB,CAAC,iBAAkB,IAAI,CAACW,mBAAmB,CAClE,CAEOA,oBAAoBC,CAAQ,CAAE,CAInC,GAAIC,EAHwCA,MAAM,CAGvCC,GAAG,CAACC,KAAK,CAAC,SAAU,CAC7B,IAAMC,EAAevB,SAASM,aAAa,CAAC,yBAC5C,GAAI,CAACiB,EAAc,OAEnB,IAAMC,EAAcxB,SAASC,aAAa,CAAC,IAC3CuB,CAAAA,EAAYC,WAAW,CAAG,IAAI,CAACC,gBAAgB,CAC/C,IAAMC,EAAcJ,EAAarB,SAAS,CACvC0B,OAAO,CAAC,uBAAwBJ,EAAYK,SAAS,EACrDD,OAAO,CAACE,mBAAmB,gBAAiB,IAAI,CAACC,SAAS,EAE7DpC,CAAAA,EAAAA,EAAAA,CAAAA,EAAYgC,EAAa,CAACf,WAAY,GAAI,EAC5C,CACF,CACF,E,GAxBGoB,EAAAA,EAAIA,C,CADMjB,8BAAAA,SAAAA,CAAAA,mBAAAA,KAAAA,G,GAEViB,EAAAA,EAAIA,C,CAFMjB,8BAAAA,SAAAA,CAAAA,YAAAA,KAAAA,GAAAA,8BAAAA,EAAAA,CADZkB,EAAAA,EAAUA,C,CACElB,8B","sources":["ui/packages/toggle-toast/toggle-toast.ts","ui/packages/topic-feeds-toast-trigger-element/topic-feeds-toast-trigger-element.ts"],"sourcesContent":["let toastReference: HTMLElement | null\n\nexport function toggleToast(html?: string, options?: {closeAfter: number}) {\n  removeToast()\n  if (!html) return\n\n  const element = document.createElement('div')\n  element.innerHTML = html\n  if (document.body) document.body.append(element)\n\n  const close = element.querySelector('button')\n  if (close) {\n    close.addEventListener('click', removeToast, {once: true})\n  }\n\n  document.addEventListener('keydown', (event: KeyboardEvent) => {\n    // TODO: Refactor to use data-hotkey\n    /* eslint eslint-comments/no-use: off */\n    /* eslint-disable @github-ui/ui-commands/no-manual-shortcut-logic */\n    if (event.key === 'Escape') {\n      if (removeToast()) event.stopImmediatePropagation()\n    }\n    /* eslint-enable @github-ui/ui-commands/no-manual-shortcut-logic */\n  })\n\n  toastReference = element\n\n  if (options?.closeAfter) {\n    setTimeout(() => {\n      if (toastReference === element) {\n        removeToast()\n      }\n    }, options.closeAfter)\n  }\n}\n\nfunction removeToast(): boolean {\n  if (!toastReference) return false\n  toastReference.remove()\n  toastReference = null\n  return true\n}\n","import {controller, attr} from '@github/catalyst'\nimport {toggleToast} from '@github-ui/toggle-toast'\n\n@controller\nexport class TopicFeedsToastTriggerElement extends HTMLElement {\n  @attr topicDisplayName: string\n  @attr topicName: string\n\n  connectedCallback() {\n    this.addEventListener('social:success', this.handleSocialSuccess)\n  }\n\n  public handleSocialSuccess(e: Event) {\n    const detail: Response = (e as CustomEvent).detail\n\n    // only display toast when starring a topic\n    if (detail.url.match('/star')) {\n      const toastWrapper = document.querySelector('.js-topic-feeds-toast')\n      if (!toastWrapper) return\n\n      const boldedTopic = document.createElement('b')\n      boldedTopic.textContent = this.topicDisplayName\n      const updatedHTML = toastWrapper.innerHTML\n        .replace('{topic_display_name}', boldedTopic.outerHTML)\n        .replace(encodeURIComponent('{topic_name}'), this.topicName)\n\n      toggleToast(updatedHTML, {closeAfter: 5000})\n    }\n  }\n}\n"],"names":["toastReference","toggleToast","html","options","removeToast","element","document","createElement","innerHTML","body","append","close","querySelector","addEventListener","once","event","key","stopImmediatePropagation","closeAfter","setTimeout","remove","TopicFeedsToastTriggerElement","HTMLElement","connectedCallback","handleSocialSuccess","e","detail","url","match","toastWrapper","boldedTopic","textContent","topicDisplayName","updatedHTML","replace","outerHTML","encodeURIComponent","topicName","attr","controller"],"sourceRoot":""}