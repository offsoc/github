{"version":3,"file":"chunk-ui_packages_billing-app_components_usage_UsageChart_tsx-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/billing-app/hooks/usage/use-usage-chart-data.ts","ui/packages/billing-app/components/usage/UsageChart.tsx"],"sourcesContent":["import {useState} from 'react'\nimport useRequest from '../use-request'\nimport {USAGE_CHART_DATA_ROUTE} from '../../routes'\n\nimport {DEFAULT_GROUP_TYPE, GROUP_BY_NONE_TYPE, GROUP_BY_SKU_TYPE} from '../../constants'\nimport {RequestState, UsagePeriod} from '../../enums'\n\nimport type {Filters, UsageChartData} from '../../types/usage'\n\ntype UseUsageChartDataParams = {\n  filters: Filters\n  useUsageChartDataEndpoint: boolean\n}\n\nfunction useUsageChartData({filters, useUsageChartDataEndpoint}: UseUsageChartDataParams) {\n  const [usageChartData, setUsageChartData] = useState<UsageChartData[]>([])\n  const [requestState, setRequestState] = useState<RequestState>(RequestState.INIT)\n\n  const getGroupType = () => {\n    // TODO: Make filters required\n    // If we can't find the currently selected group, we fall back to default.\n    const groupSelection = filters.group?.type ?? DEFAULT_GROUP_TYPE\n    const isCurrentHourSelected = filters.period?.type === UsagePeriod.THIS_HOUR\n    const isOrgorRepoQuery = filters.searchQuery.startsWith('org:') || filters.searchQuery.startsWith('repo:')\n    // In this case, we need to request the data by SKU for the expandable usage table.\n    if (isOrgorRepoQuery && groupSelection === GROUP_BY_NONE_TYPE && !isCurrentHourSelected) {\n      return GROUP_BY_SKU_TYPE\n    } else return groupSelection\n  }\n\n  useRequest({\n    route: USAGE_CHART_DATA_ROUTE,\n    reqParams: {\n      customer_id: filters.customer.id,\n      group: getGroupType().toString(),\n      period: (filters.period?.type ?? UsagePeriod.DEFAULT).toString(),\n      product: filters.product?.toString() ?? '',\n      query: filters.searchQuery,\n    },\n    noop: !useUsageChartDataEndpoint,\n    onStart: () => {\n      setUsageChartData([])\n      setRequestState(RequestState.LOADING)\n    },\n    onSuccess: response => {\n      setUsageChartData(response.data.usage)\n      setRequestState(RequestState.IDLE)\n    },\n    onError: () => {\n      setRequestState(RequestState.ERROR)\n      // addToast({\n      //   type: 'error',\n      //   message: ERRORS.QUERY_USAGE_ERROR,\n      // })\n    },\n  })\n\n  return {usageChartData, requestState}\n}\n\nexport default useUsageChartData\n","import {Box, Heading} from '@primer/react'\nimport capitalize from 'lodash-es/capitalize'\n\nimport {ChartCard} from '@github-ui/chart-card'\n\nimport {ErrorComponent, LoadingComponent, NoDataComponent} from '..'\n\nimport {RequestState, UsageGrouping, UsagePeriod} from '../../enums'\nimport {boxStyle} from '../../utils/style'\n\nimport type {Filters, OtherUsageLineItem, UsageLineItem} from '../../types/usage'\nimport type {ReactNode} from 'react'\nimport {useChartCardDetails} from '../../hooks/usage'\nimport useUsageChartData from '../../hooks/usage/use-usage-chart-data'\nconst containerStyle = {\n  ...boxStyle,\n  width: '100%',\n  height: '100%',\n  p: 0,\n  mb: 3,\n}\n\nconst chartHeaderContainerStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  pl: 3,\n  pr: 3,\n  pt: 3,\n}\n\nconst innerContainerStyle = {\n  height: '432px',\n  border: 0,\n}\n\nconst chartSubtitleStyle = (showTitle: boolean) => {\n  if (showTitle) {\n    return {\n      color: 'fg.muted',\n      fontSize: '14px',\n      fontWeight: 'normal',\n    }\n  } else {\n    return {\n      color: 'fg.muted',\n      fontSize: '16px',\n      fontWeight: 'bold',\n    }\n  }\n}\n\nfunction getChartTitle(filters: Filters) {\n  let title = 'Metered usage'\n  let groupByType = ''\n\n  switch (filters.group?.type) {\n    case UsageGrouping.ORG: {\n      groupByType = 'Organization'\n      break\n    }\n    case UsageGrouping.REPO: {\n      groupByType = 'Repository'\n      break\n    }\n    case UsageGrouping.SKU: {\n      groupByType = 'SKU'\n      break\n    }\n    case UsageGrouping.PRODUCT: {\n      groupByType = 'Product'\n      break\n    }\n  }\n\n  // Only attempt to add filter data to the title text if it exists and has a filter value\n  if (filters.searchQuery && filters.searchQuery.includes(':')) {\n    let queryPartsTitleText = ''\n    // Split by spaces, unless those spaces are in quotation marks, which is common for cost center names\n    const queryParts = filters.searchQuery.match(/(?:[^\\s\"]+|\"[^\"]*\")+/g) || []\n\n    for (const queryPart of queryParts) {\n      const [groupByField, groupByValue] = queryPart.split(':')\n\n      if (!groupByField || !groupByValue) continue\n\n      if (['repo', 'org'].includes(groupByField)) {\n        queryPartsTitleText += `${groupByValue} `\n      } else if (['product', 'sku'].includes(groupByField)) {\n        queryPartsTitleText += `${capitalize(groupByValue)} `\n      } else if (['cost_center'].includes(groupByField)) {\n        // Cost center names with spaces will be in quotation marks, remove those if present at beginning and end\n        if (groupByValue.startsWith('\"') && groupByValue.endsWith('\"')) {\n          queryPartsTitleText += `${groupByValue.split('').slice(1, -1).join('')} `\n        } else {\n          queryPartsTitleText += `${groupByValue} `\n        }\n      }\n    }\n\n    if (queryPartsTitleText) title = `${queryPartsTitleText} usage`\n  }\n\n  if (groupByType) title += ` grouped by ${groupByType}`\n\n  return title\n}\n\nfunction getChartSubtitle(filters: Filters) {\n  switch (filters.period?.type) {\n    case UsagePeriod.THIS_YEAR: {\n      const date = new Date()\n      return date.toLocaleDateString('en-US', {timeZone: 'UTC', year: 'numeric'})\n    }\n    case UsagePeriod.THIS_MONTH: {\n      const date = new Date()\n\n      const month = date.toLocaleDateString('en-US', {timeZone: 'UTC', month: 'short'})\n      const firstDay = new Date(date.getFullYear(), date.getMonth(), 1).getDate()\n      const lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()\n\n      return `${month} ${firstDay} - ${month} ${lastDay}, ${date.getFullYear()}`\n    }\n    case UsagePeriod.TODAY: {\n      const date = new Date()\n      const dateString = date.toLocaleDateString('en-US', {\n        timeZone: 'UTC',\n        month: 'long',\n        day: 'numeric',\n        year: 'numeric',\n      })\n      return `${dateString} (All times in UTC)`\n    }\n    case UsagePeriod.THIS_HOUR: {\n      const date = new Date()\n      const dateString = date.toLocaleDateString('en-US', {\n        timeZone: 'UTC',\n        month: 'long',\n        day: 'numeric',\n        year: 'numeric',\n        hour: 'numeric',\n      })\n      return `${dateString} UTC`\n    }\n    case UsagePeriod.LAST_MONTH: {\n      const date = new Date()\n      date.setMonth(date.getMonth() - 1)\n      const month = date.toLocaleDateString('en-US', {timeZone: 'UTC', month: 'short'})\n      const firstDay = new Date(date.getFullYear(), date.getMonth(), 1).getDate()\n      const lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()\n\n      return `${month} ${firstDay} - ${month} ${lastDay}, ${date.getFullYear()}`\n    }\n    case UsagePeriod.LAST_YEAR: {\n      const date = new Date()\n      const year = date.toLocaleDateString('en-US', {timeZone: 'UTC', year: 'numeric'})\n      return `${Number(year) - 1} (All times in UTC)`\n    }\n    default: {\n      return ''\n    }\n  }\n}\n\nfunction getChartPeriod(filters: Filters) {\n  switch (filters.period?.type) {\n    case UsagePeriod.THIS_YEAR:\n    case UsagePeriod.LAST_YEAR: {\n      return 30 * 24 * 3600 * 1000 // month\n    }\n    case UsagePeriod.THIS_MONTH:\n    case UsagePeriod.LAST_MONTH: {\n      return 24 * 3600 * 1000 // day\n    }\n    case UsagePeriod.TODAY: {\n      return 3600 * 1000 // hour\n    }\n    case UsagePeriod.THIS_HOUR: {\n      return 60 * 1000 // 1 minute\n    }\n    default: {\n      return 24 * 3600 * 1000 // day\n    }\n  }\n}\n\nfunction getTooltipLabel(filters: Filters) {\n  switch (filters.period?.type) {\n    case UsagePeriod.THIS_YEAR:\n    case UsagePeriod.LAST_YEAR: {\n      return 'in %b %Y' // month\n    }\n    case UsagePeriod.THIS_MONTH:\n    case UsagePeriod.LAST_MONTH: {\n      return 'on %b %e, %Y' // day\n    }\n    case UsagePeriod.TODAY: {\n      return 'at %l%p' // hour\n    }\n    case UsagePeriod.THIS_HOUR: {\n      return 'at %l:%M%p' // 1 minute\n    }\n    default: {\n      return '%b %e, %Y' // day\n    }\n  }\n}\n\nfunction getXAxisLabel(filters: Filters) {\n  switch (filters.period?.type) {\n    case UsagePeriod.THIS_YEAR:\n    case UsagePeriod.LAST_YEAR: {\n      return '{value:%b}' // month\n    }\n    case UsagePeriod.THIS_MONTH:\n    case UsagePeriod.LAST_MONTH: {\n      return '{value:%b %e}' // month day\n    }\n    case UsagePeriod.TODAY: {\n      return '{value:%l%p}' // hour AM/PM\n    }\n    case UsagePeriod.THIS_HOUR: {\n      return '{value:%l:%M%p}' // hour:minute AM/PM\n    }\n    default: {\n      return '{value:%b %e}' // month day\n    }\n  }\n}\n\ninterface UsageChartProps {\n  filters: Filters\n  requestState: RequestState\n  usage: UsageLineItem[]\n  otherUsage?: OtherUsageLineItem[]\n  // Used to add children alongside the usage actions component.\n  children?: ReactNode\n  // Whether or not to show the chart title. The subtitle is always shown. Defaults to true\n  showTitle?: boolean\n  useUsageChartDataEndpoint: boolean\n}\n\nexport function UsageChart({\n  filters,\n  requestState,\n  usage,\n  otherUsage,\n  children,\n  showTitle = true,\n  useUsageChartDataEndpoint,\n}: UsageChartProps) {\n  const {usageChartData, requestState: usageChartRequestState} = useUsageChartData({filters, useUsageChartDataEndpoint})\n  const chartRequestState = useUsageChartDataEndpoint ? usageChartRequestState : requestState\n  const chartCardDetails = useChartCardDetails({usage, otherUsage, filters})\n  const details = useUsageChartDataEndpoint ? usageChartData : chartCardDetails.data.datasets\n  const usageLength = useUsageChartDataEndpoint ? details.length : usage.length\n  const chartLoaded = chartRequestState === RequestState.IDLE && usageLength > 0\n  const usageChartStartDate = usageChartData[0]?.data[0]?.x ?? new Date()\n  const startDate = useUsageChartDataEndpoint ? usageChartStartDate : chartCardDetails.data.startDate\n  const pointFormatStr = useUsageChartDataEndpoint\n    ? // eslint-disable-next-line github/unescaped-html-literal\n      '<tr><td style=\"padding-top:var(--base-size-4)\"><span style=\"color:{point.color}\">●</span> Gross:</td><td style=\"text-align: right; padding-top:var(--base-size-4);\"><strong>{point.custom.grossAmount:,.2f}</strong></td></tr><tr><td style=\"padding-top:var(--base-size-4); padding-left:16px\"> Billed:</td><td style=\"text-align: right; padding-top:var(--base-size-4);\"><strong>{point.custom.totalAmount:,.2f}</strong></td></tr><tr><td style=\"padding-top:var(--base-size-4); padding-left:16px\"> Discount:</td><td style=\"text-align: right; padding-top:var(--base-size-4);\"><strong>{point.custom.discountAmount:,.2f}</strong></td></tr><table>'\n    : // eslint-disable-next-line github/unescaped-html-literal\n      '<tr><td style=\"padding-top:var(--base-size-4)\"><span style=\"color:{point.color}\">●</span> Gross:</td><td style=\"text-align: right; padding-top:var(--base-size-4);\"><strong>{point.custom.formattedGrossAmount:,.2f}</strong></td></tr><tr><td style=\"padding-top:var(--base-size-4); padding-left:16px\"> Billed:</td><td style=\"text-align: right; padding-top:var(--base-size-4);\"><strong>{point.custom.formattedTotalAmount:,.2f}</strong></td></tr><tr><td style=\"padding-top:var(--base-size-4); padding-left:16px\"> Discount:</td><td style=\"text-align: right; padding-top:var(--base-size-4);\"><strong>{point.custom.formattedDiscountAmount:,.2f}</strong></td></tr><table>'\n\n  return (\n    <div data-hpc>\n      <Box sx={{pb: 2, display: ['block', 'none'], maxWidth: '100%'}}>{children}</Box>\n      <Box sx={chartLoaded ? {} : containerStyle}>\n        {!chartLoaded && (\n          <Box sx={chartHeaderContainerStyle}>\n            <div>\n              {showTitle && (\n                <Heading as=\"h3\" sx={{fontSize: 2}} id=\"usage-chart-title\" data-testid=\"usage-chart-title\">\n                  {getChartTitle(filters)}\n                </Heading>\n              )}\n              <Heading\n                as={showTitle ? 'h4' : 'h3'}\n                sx={chartSubtitleStyle(showTitle)}\n                id=\"usage-chart-subtitle\"\n                data-testid=\"usage-chart-subtitle\"\n                className={showTitle ? '' : 'h4'}\n              >\n                {getChartSubtitle(filters)}\n              </Heading>\n            </div>\n            <Box sx={{pr: 2, display: ['none', 'block']}}>{children}</Box>\n          </Box>\n        )}\n\n        <Box sx={{mb: 3}}>\n          {[RequestState.INIT, RequestState.LOADING].includes(chartRequestState) && (\n            <LoadingComponent sx={innerContainerStyle} testid=\"usage-loading-spinner\" />\n          )}\n          {chartRequestState === RequestState.ERROR && (\n            <ErrorComponent sx={innerContainerStyle} testid=\"usage-loading-error\" text=\"Something went wrong\" />\n          )}\n          {chartRequestState === RequestState.IDLE && (\n            <>\n              {usageLength === 0 && (\n                <NoDataComponent sx={innerContainerStyle} testid=\"no-usage-data\" text=\"No usage found\" />\n              )}\n              {usageLength > 0 && (\n                <>\n                  <ChartCard size=\"xl\" border={true}>\n                    <ChartCard.Title sx={showTitle ? {} : chartSubtitleStyle(showTitle)}>\n                      {showTitle ? getChartTitle(filters) : getChartSubtitle(filters)}\n                    </ChartCard.Title>\n                    {showTitle && <ChartCard.Description>{getChartSubtitle(filters)}</ChartCard.Description>}\n                    <ChartCard.TrailingVisual>\n                      <Box sx={{pr: 2, display: ['none', 'block']}}>{children}</Box>\n                    </ChartCard.TrailingVisual>\n                    <ChartCard.Chart\n                      series={details.map(dataset => ({...dataset, type: 'areaspline'}))}\n                      xAxisTitle={'Time'}\n                      yAxisTitle={'Billing'}\n                      xAxisOptions={{\n                        type: 'datetime',\n                        labels: {\n                          format: getXAxisLabel(filters),\n                        },\n                        title: {\n                          text: null,\n                        },\n                        gridLineDashStyle: 'Solid',\n                      }}\n                      yAxisOptions={{\n                        labels: {\n                          format: '${value:,.0f}',\n                        },\n                        gridLineDashStyle: 'Solid',\n                        title: {\n                          text: null,\n                        },\n                      }}\n                      plotOptions={{\n                        series: {\n                          pointStart: startDate,\n                          pointInterval: getChartPeriod(filters),\n                          marker: {\n                            enabled: false,\n                          },\n                        },\n                      }}\n                      type={'areaspline'}\n                      overrideOptionsNotRecommended={{\n                        legend: {\n                          enabled: true,\n                          margin: 16,\n                          align: 'left',\n                          layout: 'horizontal',\n                          verticalAlign: 'top',\n                          floating: false,\n                          maxHeight: 64,\n                        },\n                        tooltip: {\n                          dateTimeLabelFormats: {\n                            millisecond: getTooltipLabel(filters),\n                          },\n                          // eslint-disable-next-line github/unescaped-html-literal\n                          headerFormat: '<table><tr><th colspan=\"2\">{series.name} {point.key}</th></tr>',\n                          pointFormat: pointFormatStr,\n                        },\n                        accessibility: {keyboardNavigation: {order: ['legend', 'series']}},\n                      }}\n                    />\n                  </ChartCard>\n                </>\n              )}\n            </>\n          )}\n        </Box>\n      </Box>\n    </div>\n  )\n}\n\nexport default UsageChart\n\ntry{ UsageChart.displayName ||= 'UsageChart' } catch {}"],"names":["filters","useUsageChartDataEndpoint","usageChartData","setUsageChartData","useState","requestState","setRequestState","RequestState","INIT","useRequest","route","USAGE_CHART_DATA_ROUTE","reqParams","customer_id","customer","id","group","getGroupType","groupSelection","type","DEFAULT_GROUP_TYPE","isCurrentHourSelected","period","UsagePeriod","THIS_HOUR","searchQuery","startsWith","GROUP_BY_NONE_TYPE","GROUP_BY_SKU_TYPE","toString","DEFAULT","product","query","noop","onStart","LOADING","onSuccess","response","data","usage","IDLE","onError","ERROR","containerStyle","boxStyle","width","height","p","mb","chartHeaderContainerStyle","display","alignItems","justifyContent","pl","pr","pt","innerContainerStyle","border","chartSubtitleStyle","color","fontSize","fontWeight","getChartTitle","title","groupByType","UsageGrouping","ORG","REPO","SKU","PRODUCT","includes","queryPartsTitleText","queryPart","match","groupByField","groupByValue","split","capitalize","endsWith","slice","join","getChartSubtitle","THIS_YEAR","date","Date","toLocaleDateString","timeZone","year","THIS_MONTH","month","firstDay","getFullYear","getMonth","getDate","lastDay","TODAY","dateString","day","hour","LAST_MONTH","setMonth","LAST_YEAR","Number","UsageChart","otherUsage","children","showTitle","usageChartRequestState","useUsageChartData","chartRequestState","chartCardDetails","useChartCardDetails","details","datasets","usageLength","length","chartLoaded","usageChartStartDate","x","startDate","div","data-hpc","Box","sx","pb","maxWidth","Heading","as","data-testid","className","LoadingComponent","testid","ErrorComponent","text","NoDataComponent","ChartCard","size","Title","Description","TrailingVisual","Chart","series","map","dataset","xAxisTitle","yAxisTitle","xAxisOptions","labels","format","getXAxisLabel","gridLineDashStyle","yAxisOptions","plotOptions","pointStart","pointInterval","getChartPeriod","marker","enabled","overrideOptionsNotRecommended","legend","margin","align","layout","verticalAlign","floating","maxHeight","tooltip","dateTimeLabelFormats","millisecond","getTooltipLabel","headerFormat","pointFormat","accessibility","keyboardNavigation","order","displayName"],"sourceRoot":""}