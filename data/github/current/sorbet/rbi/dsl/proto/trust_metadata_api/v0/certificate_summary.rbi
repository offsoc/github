# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Proto::TrustMetadataApi::V0::CertificateSummary`.
# Please instead update this file by running `bin/tapioca dsl Proto::TrustMetadataApi::V0::CertificateSummary`.

class Proto::TrustMetadataApi::V0::CertificateSummary
  sig do
    params(
      build_config_digest: T.nilable(String),
      build_config_uri: T.nilable(String),
      build_signer_digest: T.nilable(String),
      build_signer_uri: T.nilable(String),
      build_trigger: T.nilable(String),
      issuer: T.nilable(String),
      run_invocation_uri: T.nilable(String),
      runner_environment: T.nilable(String),
      source_repository_digest: T.nilable(String),
      source_repository_identifier: T.nilable(String),
      source_repository_owner_identifier: T.nilable(String),
      source_repository_owner_uri: T.nilable(String),
      source_repository_ref: T.nilable(String),
      source_repository_uri: T.nilable(String),
      source_repository_visibility_at_signing: T.nilable(String),
      subject_alternative_name: T.nilable(Proto::TrustMetadataApi::V0::SubjectAlternativeName)
    ).void
  end
  def initialize(build_config_digest: nil, build_config_uri: nil, build_signer_digest: nil, build_signer_uri: nil, build_trigger: nil, issuer: nil, run_invocation_uri: nil, runner_environment: nil, source_repository_digest: nil, source_repository_identifier: nil, source_repository_owner_identifier: nil, source_repository_owner_uri: nil, source_repository_ref: nil, source_repository_uri: nil, source_repository_visibility_at_signing: nil, subject_alternative_name: nil); end

  sig { returns(String) }
  def build_config_digest; end

  sig { params(value: String).void }
  def build_config_digest=(value); end

  sig { returns(String) }
  def build_config_uri; end

  sig { params(value: String).void }
  def build_config_uri=(value); end

  sig { returns(String) }
  def build_signer_digest; end

  sig { params(value: String).void }
  def build_signer_digest=(value); end

  sig { returns(String) }
  def build_signer_uri; end

  sig { params(value: String).void }
  def build_signer_uri=(value); end

  sig { returns(String) }
  def build_trigger; end

  sig { params(value: String).void }
  def build_trigger=(value); end

  sig { void }
  def clear_build_config_digest; end

  sig { void }
  def clear_build_config_uri; end

  sig { void }
  def clear_build_signer_digest; end

  sig { void }
  def clear_build_signer_uri; end

  sig { void }
  def clear_build_trigger; end

  sig { void }
  def clear_issuer; end

  sig { void }
  def clear_run_invocation_uri; end

  sig { void }
  def clear_runner_environment; end

  sig { void }
  def clear_source_repository_digest; end

  sig { void }
  def clear_source_repository_identifier; end

  sig { void }
  def clear_source_repository_owner_identifier; end

  sig { void }
  def clear_source_repository_owner_uri; end

  sig { void }
  def clear_source_repository_ref; end

  sig { void }
  def clear_source_repository_uri; end

  sig { void }
  def clear_source_repository_visibility_at_signing; end

  sig { void }
  def clear_subject_alternative_name; end

  sig { returns(String) }
  def issuer; end

  sig { params(value: String).void }
  def issuer=(value); end

  sig { returns(String) }
  def run_invocation_uri; end

  sig { params(value: String).void }
  def run_invocation_uri=(value); end

  sig { returns(String) }
  def runner_environment; end

  sig { params(value: String).void }
  def runner_environment=(value); end

  sig { returns(String) }
  def source_repository_digest; end

  sig { params(value: String).void }
  def source_repository_digest=(value); end

  sig { returns(String) }
  def source_repository_identifier; end

  sig { params(value: String).void }
  def source_repository_identifier=(value); end

  sig { returns(String) }
  def source_repository_owner_identifier; end

  sig { params(value: String).void }
  def source_repository_owner_identifier=(value); end

  sig { returns(String) }
  def source_repository_owner_uri; end

  sig { params(value: String).void }
  def source_repository_owner_uri=(value); end

  sig { returns(String) }
  def source_repository_ref; end

  sig { params(value: String).void }
  def source_repository_ref=(value); end

  sig { returns(String) }
  def source_repository_uri; end

  sig { params(value: String).void }
  def source_repository_uri=(value); end

  sig { returns(String) }
  def source_repository_visibility_at_signing; end

  sig { params(value: String).void }
  def source_repository_visibility_at_signing=(value); end

  sig { returns(T.nilable(Proto::TrustMetadataApi::V0::SubjectAlternativeName)) }
  def subject_alternative_name; end

  sig { params(value: T.nilable(Proto::TrustMetadataApi::V0::SubjectAlternativeName)).void }
  def subject_alternative_name=(value); end
end
