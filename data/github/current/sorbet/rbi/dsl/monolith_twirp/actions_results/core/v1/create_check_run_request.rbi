# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::ActionsResults::Core::V1::CreateCheckRunRequest`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::ActionsResults::Core::V1::CreateCheckRunRequest`.

class MonolithTwirp::ActionsResults::Core::V1::CreateCheckRunRequest
  sig do
    params(
      annotations: T.nilable(T.any(Google::Protobuf::RepeatedField[MonolithTwirp::ActionsResults::Core::V1::Annotation], T::Array[MonolithTwirp::ActionsResults::Core::V1::Annotation])),
      artifacts: T.nilable(T.any(Google::Protobuf::RepeatedField[MonolithTwirp::ActionsResults::Core::V1::Artifact], T::Array[MonolithTwirp::ActionsResults::Core::V1::Artifact])),
      check_suite_id: T.nilable(Integer),
      completed_at: T.nilable(Google::Protobuf::Timestamp),
      conclusion: T.nilable(T.any(Symbol, Integer)),
      concurrency: T.nilable(MonolithTwirp::ActionsResults::Core::V1::Concurrency),
      delayed: T.nilable(T::Boolean),
      display_name: T.nilable(String),
      environment: T.nilable(MonolithTwirp::ActionsResults::Core::V1::Environment),
      is_cloned_from_previous_run: T.nilable(T::Boolean),
      job_id: T.nilable(String),
      job_key: T.nilable(String),
      job_order_number: T.nilable(Integer),
      labels: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      parent_job_id: T.nilable(String),
      plan_id: T.nilable(String),
      product_sku: T.nilable(String),
      queued_at: T.nilable(Google::Protobuf::Timestamp),
      repository_id: T.nilable(Integer),
      runner_group_id: T.nilable(Integer),
      runner_group_name: T.nilable(String),
      runner_id: T.nilable(Integer),
      runner_name: T.nilable(String),
      started_at: T.nilable(Google::Protobuf::Timestamp),
      status: T.nilable(T.any(Symbol, Integer)),
      steps: T.nilable(T.any(Google::Protobuf::RepeatedField[MonolithTwirp::ActionsResults::Core::V1::Step], T::Array[MonolithTwirp::ActionsResults::Core::V1::Step]))
    ).void
  end
  def initialize(annotations: T.unsafe(nil), artifacts: T.unsafe(nil), check_suite_id: nil, completed_at: nil, conclusion: nil, concurrency: nil, delayed: nil, display_name: nil, environment: nil, is_cloned_from_previous_run: nil, job_id: nil, job_key: nil, job_order_number: nil, labels: T.unsafe(nil), parent_job_id: nil, plan_id: nil, product_sku: nil, queued_at: nil, repository_id: nil, runner_group_id: nil, runner_group_name: nil, runner_id: nil, runner_name: nil, started_at: nil, status: nil, steps: T.unsafe(nil)); end

  sig { returns(Google::Protobuf::RepeatedField[MonolithTwirp::ActionsResults::Core::V1::Annotation]) }
  def annotations; end

  sig { params(value: Google::Protobuf::RepeatedField[MonolithTwirp::ActionsResults::Core::V1::Annotation]).void }
  def annotations=(value); end

  sig { returns(Google::Protobuf::RepeatedField[MonolithTwirp::ActionsResults::Core::V1::Artifact]) }
  def artifacts; end

  sig { params(value: Google::Protobuf::RepeatedField[MonolithTwirp::ActionsResults::Core::V1::Artifact]).void }
  def artifacts=(value); end

  sig { returns(Integer) }
  def check_suite_id; end

  sig { params(value: Integer).void }
  def check_suite_id=(value); end

  sig { void }
  def clear_annotations; end

  sig { void }
  def clear_artifacts; end

  sig { void }
  def clear_check_suite_id; end

  sig { void }
  def clear_completed_at; end

  sig { void }
  def clear_conclusion; end

  sig { void }
  def clear_concurrency; end

  sig { void }
  def clear_delayed; end

  sig { void }
  def clear_display_name; end

  sig { void }
  def clear_environment; end

  sig { void }
  def clear_is_cloned_from_previous_run; end

  sig { void }
  def clear_job_id; end

  sig { void }
  def clear_job_key; end

  sig { void }
  def clear_job_order_number; end

  sig { void }
  def clear_labels; end

  sig { void }
  def clear_parent_job_id; end

  sig { void }
  def clear_plan_id; end

  sig { void }
  def clear_product_sku; end

  sig { void }
  def clear_queued_at; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_runner_group_id; end

  sig { void }
  def clear_runner_group_name; end

  sig { void }
  def clear_runner_id; end

  sig { void }
  def clear_runner_name; end

  sig { void }
  def clear_started_at; end

  sig { void }
  def clear_status; end

  sig { void }
  def clear_steps; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def completed_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def completed_at=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def conclusion; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def conclusion=(value); end

  sig { returns(T.nilable(MonolithTwirp::ActionsResults::Core::V1::Concurrency)) }
  def concurrency; end

  sig { params(value: T.nilable(MonolithTwirp::ActionsResults::Core::V1::Concurrency)).void }
  def concurrency=(value); end

  sig { returns(T::Boolean) }
  def delayed; end

  sig { params(value: T::Boolean).void }
  def delayed=(value); end

  sig { returns(String) }
  def display_name; end

  sig { params(value: String).void }
  def display_name=(value); end

  sig { returns(T.nilable(MonolithTwirp::ActionsResults::Core::V1::Environment)) }
  def environment; end

  sig { params(value: T.nilable(MonolithTwirp::ActionsResults::Core::V1::Environment)).void }
  def environment=(value); end

  sig { returns(T::Boolean) }
  def is_cloned_from_previous_run; end

  sig { params(value: T::Boolean).void }
  def is_cloned_from_previous_run=(value); end

  sig { returns(String) }
  def job_id; end

  sig { params(value: String).void }
  def job_id=(value); end

  sig { returns(String) }
  def job_key; end

  sig { params(value: String).void }
  def job_key=(value); end

  sig { returns(Integer) }
  def job_order_number; end

  sig { params(value: Integer).void }
  def job_order_number=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def labels; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def labels=(value); end

  sig { returns(String) }
  def parent_job_id; end

  sig { params(value: String).void }
  def parent_job_id=(value); end

  sig { returns(String) }
  def plan_id; end

  sig { params(value: String).void }
  def plan_id=(value); end

  sig { returns(String) }
  def product_sku; end

  sig { params(value: String).void }
  def product_sku=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def queued_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def queued_at=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end

  sig { returns(Integer) }
  def runner_group_id; end

  sig { params(value: Integer).void }
  def runner_group_id=(value); end

  sig { returns(String) }
  def runner_group_name; end

  sig { params(value: String).void }
  def runner_group_name=(value); end

  sig { returns(Integer) }
  def runner_id; end

  sig { params(value: Integer).void }
  def runner_id=(value); end

  sig { returns(String) }
  def runner_name; end

  sig { params(value: String).void }
  def runner_name=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def started_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def started_at=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def status; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def status=(value); end

  sig { returns(Google::Protobuf::RepeatedField[MonolithTwirp::ActionsResults::Core::V1::Step]) }
  def steps; end

  sig { params(value: Google::Protobuf::RepeatedField[MonolithTwirp::ActionsResults::Core::V1::Step]).void }
  def steps=(value); end
end
