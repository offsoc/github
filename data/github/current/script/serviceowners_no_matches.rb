# typed: true
# frozen_string_literal: true

require "pathname"
require "serviceowners"

if ARGV[0] == "--help"
  puts "\nUsage:\n"
  puts "  script/serviceowners_no_matches.rb [NO-MATCHES-PATH]]\n"
  puts "Example:\n"
  puts "  script/serviceowners_no_matches.rb serviceowners_no_matches.txt"
  exit 0
end

ROOT = Pathname.new(File.expand_path("../..", __FILE__)).realpath.to_s

if ARGV.length >= 1
  NO_MATCHES_PATH = Pathname.new(ROOT + "/" + ARGV[0])
else
  NO_MATCHES_PATH = Pathname.new(ROOT + "/" + "serviceowners_no_matches.txt")
end

class ServiceownersNoMatchesGenerator
  def generate_serviceowners_no_matches!
    no_matches = get_no_matches_data

    puts "==> Generating #{ROOT}/serviceowners_no_matches.txt..."
    no_matches_output = <<~EOS
      ### Generated by bin/generate-service-files.rb from SERVICEOWNERS.
      ### DO NOT MANUALLY EDIT THIS FILE!
      #{no_matches.join("\n")}
    EOS
    NO_MATCHES_PATH.write(no_matches_output)
  end

  def get_no_matches_data
    data = Hash.new
    Dir.chdir(ROOT) do
      serviceowners = Serviceowners::Main.new
      serviceowners.path_data.path_specs.select { |_path, spec| spec.nil? }
                   .map { |path, _| path }
    end
  end
end

generator = ServiceownersNoMatchesGenerator.new
generator.generate_serviceowners_no_matches!
