{
  "$schema": "http://json-schema.org/draft-04/hyper-schema",
  "id": "https://schema.github.com/v3/project.json",
  "title": "Project",
  "description": "Projects are a way to organize columns and cards of work.",
  "type": "object",
  "definitions": {
    "name": {
      "description": "Name of the project",
      "example": "Week One Sprint",
      "type": "string"
    },
    "project_id": {
      "description": "The ID of the project.",
      "type": "integer"
    },
    "body": {
      "description": "Body of the project",
      "example": "This project represents the sprint of the first week in January",
      "type": [
        "string",
        "null"
      ]
    },
    "number": {
      "description": "The project number",
      "example": 4,
      "type": "number"
    },
    "state": {
      "description": "State of the project; either 'open' or 'closed'",
      "example": "open",
      "type": "string"
    },
    "organization_permission": {
      "description": "The baseline permission that all organization members have on this project",
      "type": "string",
      "enum": [
        "read",
        "write",
        "admin",
        "none"
      ]
    },
    "private": {
      "description": "Whether or not this project can be seen by everyone.",
      "type": "boolean"
    },
    "legacy_body": {
      "description": "Body of the project",
      "example": "This project represents the sprint of the first week in January",
      "type": [
        "string",
        "null"
      ]
    },
    "repository_id": {
      "description": "The ID of the repository.",
      "example": 42,
      "type": "integer"
    },
    "organization_id": {
      "description": "The ID of the organization.",
      "type": "integer"
    },
    "id": {
      "type": "integer",
      "example": 1002604
    },
    "node_id": {
      "type": "string",
      "example": "MDc6UHJvamVjdDEwMDI2MDQ="
    },
    "project_number": {
      "type": "integer",
      "example": 1
    },
    "url": {
      "type": "string",
      "format": "uri",
      "example": "https://api.github.com/projects/1002604"
    },
    "html_url": {
      "type": "string",
      "format": "uri",
      "example": "https://github.com/api-playground/projects-test/projects/12"
    },
    "owner_url": {
      "type": "string",
      "format": "uri",
      "example": "https://api.github.com/repos/api-playground/projects-test"
    },
    "columns_url": {
      "type": "string",
      "format": "uri",
      "example": "https://api.github.com/projects/1002604/columns"
    },
    "cards_url": {
      "type": "string",
      "format": "uri"
    },
    "created_at": {
      "type": "string",
      "format": "date-time",
      "example": "2011-04-10T20:09:31Z"
    },
    "updated_at": {
      "type": "string",
      "format": "date-time",
      "example": "2014-03-03T18:58:10Z"
    }
  },
  "links": [
    {
      "href": "/repositories/{repository_id}/projects",
      "method": "POST",
      "rel": "create-for-repo-legacy",
      "schema": {
        "properties": {
          "name": {
            "$ref": "#/definitions/name"
          },
          "body": {
            "$ref": "#/definitions/legacy_body"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "title": "Create a new project in a repository"
    },
    {
      "href": "/projects/{project_id}",
      "method": "PATCH",
      "rel": "update-legacy",
      "schema": {
        "properties": {
          "name": {
            "$ref": "#/definitions/name"
          },
          "body": {
            "$ref": "#/definitions/legacy_body"
          },
          "state": {
            "$ref": "#/definitions/state"
          },
          "organization_permission": {
            "$ref": "#/definitions/organization_permission"
          },
          "private": {
            "$ref": "#/definitions/private"
          }
        },
        "type": [
          "object",
          "null"
        ]
      },
      "title": "Update an existing project"
    },
    {
      "href": "/organizations/{organization_id}/projects",
      "method": "POST",
      "rel": "create-for-org-legacy",
      "schema": {
        "properties": {
          "name": {
            "$ref": "#/definitions/name"
          },
          "body": {
            "$ref": "#/definitions/legacy_body"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "title": "Create"
    },
    {
      "title": "Create a new project in a repository",
      "method": "POST",
      "href": "/repositories/{repository_id}/projects",
      "rel": "create-for-repo",
      "schema": {
        "properties": {
          "name": {
            "$ref": "#/definitions/name"
          },
          "body": {
            "$ref": "#/definitions/body"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "additionalProperties": false
      }
    },
    {
      "title": "Create an organization project",
      "method": "POST",
      "href": "/organizations/{organization_id}/projects",
      "rel": "create-for-org",
      "schema": {
        "properties": {
          "name": {
            "$ref": "#/definitions/name"
          },
          "body": {
            "$ref": "#/definitions/body"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "additionalProperties": false
      }
    },
    {
      "title": "Create a user project",
      "method": "POST",
      "href": "/user/projects",
      "rel": "create-for-user",
      "schema": {
        "properties": {
          "name": {
            "$ref": "#/definitions/name"
          },
          "body": {
            "$ref": "#/definitions/body"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "additionalProperties": false
      }
    },
    {
      "title": "Update an existing project",
      "method": "PATCH",
      "href": "/projects/{project_id}",
      "rel": "update",
      "schema": {
        "properties": {
          "name": {
            "$ref": "#/definitions/name"
          },
          "body": {
            "$ref": "#/definitions/body"
          },
          "state": {
            "$ref": "#/definitions/state"
          },
          "organization_permission": {
            "$ref": "#/definitions/organization_permission"
          },
          "private": {
            "$ref": "#/definitions/private"
          }
        },
        "type": [
          "object",
          "null"
        ],
        "additionalProperties": false
      }
    },
    {
      "title": "Delete a project",
      "method": "DELETE",
      "rel": "delete",
      "href": "/projects/{project_id}",
      "schema": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ]
      }
    }
  ],
  "properties": {
    "id": {
      "$ref": "#/definitions/id"
    },
    "node_id": {
      "$ref": "#/definitions/node_id"
    },
    "number": {
      "$ref": "#/definitions/project_number"
    },
    "name": {
      "$ref": "#/definitions/name"
    },
    "body": {
      "$ref": "#/definitions/body"
    },
    "state": {
      "$ref": "#/definitions/state"
    },
    "url": {
      "$ref": "#/definitions/url"
    },
    "html_url": {
      "$ref": "#/definitions/html_url"
    },
    "owner_url": {
      "$ref": "#/definitions/owner_url"
    },
    "creator": {
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "https://schema.github.com/v3/simple-user.json#"
        }
      ]
    },
    "columns_url": {
      "$ref": "#/definitions/columns_url"
    },
    "cards_url": {
      "$ref": "#/definitions/cards_url"
    },
    "organization_permission": {
      "$ref": "#/definitions/organization_permission"
    },
    "private": {
      "$ref": "#/definitions/private"
    },
    "created_at": {
      "$ref": "#/definitions/created_at"
    },
    "updated_at": {
      "$ref": "#/definitions/updated_at"
    },
    "permissions": {
      "type": "object",
      "properties": {
        "read": {
          "type": "boolean"
        },
        "write": {
          "type": "boolean"
        },
        "admin": {
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "read",
        "write",
        "admin"
      ]
    }
  },
  "additionalProperties": false,
  "required": [
    "id",
    "node_id",
    "number",
    "name",
    "body",
    "state",
    "url",
    "html_url",
    "owner_url",
    "creator",
    "columns_url",
    "created_at",
    "updated_at"
  ]
}
