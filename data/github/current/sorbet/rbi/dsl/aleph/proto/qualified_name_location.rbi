# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Aleph::Proto::QualifiedNameLocation`.
# Please instead update this file by running `bin/tapioca dsl Aleph::Proto::QualifiedNameLocation`.

class Aleph::Proto::QualifiedNameLocation
  sig do
    params(
      locations: T.nilable(T.any(Google::Protobuf::RepeatedField[Aleph::Proto::Location], T::Array[Aleph::Proto::Location])),
      qualified_name: T.nilable(String),
      symbols: T.nilable(T.any(Google::Protobuf::RepeatedField[Aleph::Proto::SymbolInformation], T::Array[Aleph::Proto::SymbolInformation]))
    ).void
  end
  def initialize(locations: T.unsafe(nil), qualified_name: nil, symbols: T.unsafe(nil)); end

  sig { void }
  def clear_locations; end

  sig { void }
  def clear_qualified_name; end

  sig { void }
  def clear_symbols; end

  sig { returns(Google::Protobuf::RepeatedField[Aleph::Proto::Location]) }
  def locations; end

  sig { params(value: Google::Protobuf::RepeatedField[Aleph::Proto::Location]).void }
  def locations=(value); end

  sig { returns(String) }
  def qualified_name; end

  sig { params(value: String).void }
  def qualified_name=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Aleph::Proto::SymbolInformation]) }
  def symbols; end

  sig { params(value: Google::Protobuf::RepeatedField[Aleph::Proto::SymbolInformation]).void }
  def symbols=(value); end
end
