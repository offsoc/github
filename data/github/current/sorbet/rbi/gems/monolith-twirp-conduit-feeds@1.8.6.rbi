# typed: false

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `monolith-twirp-conduit-feeds` gem.
# Please instead update this file by running `bin/tapioca gem monolith-twirp-conduit-feeds`.

module Google::Protobuf::MessageExts::ClassMethods; end

# source://monolith-twirp-conduit-feeds//lib/monolith-twirp-conduit-feeds.rb#7
module Monolith; end

# source://monolith-twirp-conduit-feeds//lib/monolith-twirp-conduit-feeds.rb#8
module Monolith::Twirp; end

# source://monolith-twirp-conduit-feeds//lib/monolith-twirp-conduit-feeds.rb#9
module Monolith::Twirp::Conduit; end

# source://monolith-twirp-conduit-feeds//lib/monolith-twirp-conduit-feeds.rb#10
module Monolith::Twirp::Conduit::Feeds; end

# source://monolith-twirp-conduit-feeds//lib/monolith-twirp-conduit-feeds.rb#11
class Monolith::Twirp::Conduit::Feeds::Error < ::StandardError; end

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/version.rb#3
module MonolithTwirp; end

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/version.rb#4
module MonolithTwirp::Conduit; end

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/version.rb#5
module MonolithTwirp::Conduit::Feeds; end

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/user_pb.rb#28
module MonolithTwirp::Conduit::Feeds::V1; end

class MonolithTwirp::Conduit::Feeds::V1::CreateFeedPostEventRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::CreateFeedPostEventResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::DeleteFeedPostEventRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::DeleteFeedPostEventResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::Discussion
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module MonolithTwirp::Conduit::Feeds::V1::EventType
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_ADD_TO_LIST = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_DISCUSSION_CREATE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_FOLLOW_RECOMMENDATIONS = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_INVALID = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_ISSUE_CLOSE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_ISSUE_COMMENT_CREATE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_ISSUE_CREATE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_ISSUE_LABEL = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_ISSUE_REOPEN = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_MEMBER_ADD_TO_REPOSITORY = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_NEAR_SPONSORS_GOAL = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_NEW_SPONSORABLE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_ORGANIZATION_FOLLOW = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_PULL_REQUEST_CLOSE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_PULL_REQUEST_COMMENT_CREATE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_PULL_REQUEST_CREATE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_PULL_REQUEST_LABEL = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_PULL_REQUEST_MERGE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_PULL_REQUEST_REOPEN = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_RELEASE_PUBLISH = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_REPOSITORY_CREATE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_REPOSITORY_FORK = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_REPOSITORY_RECOMMENDATIONS = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_REPOSITORY_STAR = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_REPOSITORY_VISIBILITY_CHANGE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_TRENDING_REPOSITORIES = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_USER_FOLLOW = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_pb.rb#128
MonolithTwirp::Conduit::Feeds::V1::EventType::EVENT_TYPE_USER_SPONSOR = T.let(T.unsafe(nil), Integer)

class MonolithTwirp::Conduit::Feeds::V1::FeedItem
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module MonolithTwirp::Conduit::Feeds::V1::FeedItem::Action
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#92
MonolithTwirp::Conduit::Feeds::V1::FeedItem::Action::ACTION_ADDED_TO_LIST = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#92
MonolithTwirp::Conduit::Feeds::V1::FeedItem::Action::ACTION_CLOSED = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#92
MonolithTwirp::Conduit::Feeds::V1::FeedItem::Action::ACTION_CREATED = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#92
MonolithTwirp::Conduit::Feeds::V1::FeedItem::Action::ACTION_FOLLOWED = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#92
MonolithTwirp::Conduit::Feeds::V1::FeedItem::Action::ACTION_FORKED = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#92
MonolithTwirp::Conduit::Feeds::V1::FeedItem::Action::ACTION_INVALID = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#92
MonolithTwirp::Conduit::Feeds::V1::FeedItem::Action::ACTION_LABELED = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#92
MonolithTwirp::Conduit::Feeds::V1::FeedItem::Action::ACTION_MERGED = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#92
MonolithTwirp::Conduit::Feeds::V1::FeedItem::Action::ACTION_NEAR_SPONSORS_GOAL = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#92
MonolithTwirp::Conduit::Feeds::V1::FeedItem::Action::ACTION_PUBLISHED = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#92
MonolithTwirp::Conduit::Feeds::V1::FeedItem::Action::ACTION_RECOMMENDED = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#92
MonolithTwirp::Conduit::Feeds::V1::FeedItem::Action::ACTION_REOPENED = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#92
MonolithTwirp::Conduit::Feeds::V1::FeedItem::Action::ACTION_SPONSORABLE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#92
MonolithTwirp::Conduit::Feeds::V1::FeedItem::Action::ACTION_SPONSORED = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#92
MonolithTwirp::Conduit::Feeds::V1::FeedItem::Action::ACTION_STARRED = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#92
MonolithTwirp::Conduit::Feeds::V1::FeedItem::Action::ACTION_TRENDING_REPO = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#92
MonolithTwirp::Conduit::Feeds::V1::FeedItem::Action::ACTION_UPDATED = T.let(T.unsafe(nil), Integer)

module MonolithTwirp::Conduit::Feeds::V1::FeedItem::RelatedBy
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#94
MonolithTwirp::Conduit::Feeds::V1::FeedItem::RelatedBy::RELATED_BY_ACTOR = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#94
MonolithTwirp::Conduit::Feeds::V1::FeedItem::RelatedBy::RELATED_BY_INVALID = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#94
MonolithTwirp::Conduit::Feeds::V1::FeedItem::RelatedBy::RELATED_BY_NONE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#94
MonolithTwirp::Conduit::Feeds::V1::FeedItem::RelatedBy::RELATED_BY_SUBJECT = T.let(T.unsafe(nil), Integer)

module MonolithTwirp::Conduit::Feeds::V1::FeedItem::SubjectType
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#93
MonolithTwirp::Conduit::Feeds::V1::FeedItem::SubjectType::SUBJECT_TYPE_DISCUSSION = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#93
MonolithTwirp::Conduit::Feeds::V1::FeedItem::SubjectType::SUBJECT_TYPE_FEED_POST = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#93
MonolithTwirp::Conduit::Feeds::V1::FeedItem::SubjectType::SUBJECT_TYPE_INVALID = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#93
MonolithTwirp::Conduit::Feeds::V1::FeedItem::SubjectType::SUBJECT_TYPE_ISSUE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#93
MonolithTwirp::Conduit::Feeds::V1::FeedItem::SubjectType::SUBJECT_TYPE_ISSUE_COMMENT = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#93
MonolithTwirp::Conduit::Feeds::V1::FeedItem::SubjectType::SUBJECT_TYPE_PULL_REQUEST = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#93
MonolithTwirp::Conduit::Feeds::V1::FeedItem::SubjectType::SUBJECT_TYPE_PULL_REQUEST_COMMENT = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#93
MonolithTwirp::Conduit::Feeds::V1::FeedItem::SubjectType::SUBJECT_TYPE_RELEASE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#93
MonolithTwirp::Conduit::Feeds::V1::FeedItem::SubjectType::SUBJECT_TYPE_REPOSITORY = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#93
MonolithTwirp::Conduit::Feeds::V1::FeedItem::SubjectType::SUBJECT_TYPE_USER = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_item_pb.rb#93
MonolithTwirp::Conduit::Feeds::V1::FeedItem::SubjectType::SUBJECT_TYPE_USER_LIST_ITEM = T.let(T.unsafe(nil), Integer)

class MonolithTwirp::Conduit::Feeds::V1::FeedPost
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::FeedPostReference
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module MonolithTwirp::Conduit::Feeds::V1::FeedPostReference::ReferenceAction
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_post_reference_pb.rb#35
MonolithTwirp::Conduit::Feeds::V1::FeedPostReference::ReferenceAction::REFERENCE_ACTION_INVALID = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_post_reference_pb.rb#35
MonolithTwirp::Conduit::Feeds::V1::FeedPostReference::ReferenceAction::REFERENCE_ACTION_MENTION = T.let(T.unsafe(nil), Integer)

module MonolithTwirp::Conduit::Feeds::V1::FeedPostReference::ReferenceObjectType
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_post_reference_pb.rb#34
MonolithTwirp::Conduit::Feeds::V1::FeedPostReference::ReferenceObjectType::REFERENCE_OBJECT_TYPE_DISCUSSION = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_post_reference_pb.rb#34
MonolithTwirp::Conduit::Feeds::V1::FeedPostReference::ReferenceObjectType::REFERENCE_OBJECT_TYPE_INVALID = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_post_reference_pb.rb#34
MonolithTwirp::Conduit::Feeds::V1::FeedPostReference::ReferenceObjectType::REFERENCE_OBJECT_TYPE_ISSUE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_post_reference_pb.rb#34
MonolithTwirp::Conduit::Feeds::V1::FeedPostReference::ReferenceObjectType::REFERENCE_OBJECT_TYPE_ORG = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_post_reference_pb.rb#34
MonolithTwirp::Conduit::Feeds::V1::FeedPostReference::ReferenceObjectType::REFERENCE_OBJECT_TYPE_PULL_REQUEST = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_post_reference_pb.rb#34
MonolithTwirp::Conduit::Feeds::V1::FeedPostReference::ReferenceObjectType::REFERENCE_OBJECT_TYPE_REPOSITORY = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/feed_post_reference_pb.rb#34
MonolithTwirp::Conduit::Feeds::V1::FeedPostReference::ReferenceObjectType::REFERENCE_OBJECT_TYPE_USER = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_twirp.rb#22
class MonolithTwirp::Conduit::Feeds::V1::GetFeedAPIClient < ::Twirp::Client
  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def create_feed_post_event(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def delete_feed_post_event(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_feed(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_list_feed(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_org_feed(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_user_feed(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def hide_event(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def unhide_event(input, req_opts = T.unsafe(nil)); end
end

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/get_feed_api_twirp.rb#9
class MonolithTwirp::Conduit::Feeds::V1::GetFeedAPIService < ::Twirp::Service; end

class MonolithTwirp::Conduit::Feeds::V1::GetFeedRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::GetFeedResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::GetListFeedRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::GetListFeedResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::GetOrgFeedRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::GetOrgFeedResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::GetUserFeedRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::GetUserFeedResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::HideEventRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::HideEventResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::Issue
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::IssueComment
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::PullRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::PullRequestComment
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::Release
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::Repository
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::RepositorySubscription
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::UnhideEventRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::UnhideEventResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::User
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module MonolithTwirp::Conduit::Feeds::V1::User::Type
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/user_pb.rb#30
MonolithTwirp::Conduit::Feeds::V1::User::Type::TYPE_INVALID = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/user_pb.rb#30
MonolithTwirp::Conduit::Feeds::V1::User::Type::TYPE_ORGANIZATION = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/v1/user_pb.rb#30
MonolithTwirp::Conduit::Feeds::V1::User::Type::TYPE_USER = T.let(T.unsafe(nil), Integer)

class MonolithTwirp::Conduit::Feeds::V1::UserList
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Conduit::Feeds::V1::UserListItem
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

# source://monolith-twirp-conduit-feeds//lib/monolith_twirp/conduit/feeds/version.rb#6
MonolithTwirp::Conduit::Feeds::VERSION = T.let(T.unsafe(nil), String)
