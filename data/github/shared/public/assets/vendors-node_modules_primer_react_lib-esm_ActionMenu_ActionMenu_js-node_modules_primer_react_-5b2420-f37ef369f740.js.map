{"version":3,"file":"vendors-node_modules_primer_react_lib-esm_ActionMenu_ActionMenu_js-node_modules_primer_react_-5b2420-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@primer/react/lib-esm/ActionMenu/ActionMenu.js","node_modules/@primer/react/lib-esm/AnchoredOverlay/AnchoredOverlay.js","node_modules/@primer/react/lib-esm/hooks/useAnchoredPosition.js","node_modules/@primer/react/lib-esm/hooks/useFocusTrap.js","node_modules/@primer/react/lib-esm/hooks/useMenuInitialFocus.js","node_modules/@primer/react/lib-esm/hooks/useMenuKeyboardNavigation.js","node_modules/@primer/react/lib-esm/hooks/useMnemonics.js","node_modules/@primer/react/lib-esm/hooks/useOnOutsideClick.js","node_modules/@primer/react/lib-esm/hooks/useOpenAndCloseFocus.js","node_modules/@primer/react/lib-esm/hooks/useOverlay.js","node_modules/@primer/react/lib-esm/hooks/useProvidedStateOrCreate.js","node_modules/@primer/react/lib-esm/hooks/useRenderForcingRef.js","node_modules/@primer/react/lib-esm/hooks/useResizeObserver.js"],"sourcesContent":["import React, { useContext, useCallback, useMemo, useState, useEffect } from 'react';\nimport { ChevronRightIcon, TriangleDownIcon } from '@primer/octicons-react';\nimport { AnchoredOverlay } from '../AnchoredOverlay/AnchoredOverlay.js';\nimport { useProvidedRefOrCreate } from '../hooks/useProvidedRefOrCreate.js';\nimport '@primer/behaviors/utils';\nimport '@primer/behaviors';\nimport { useProvidedStateOrCreate } from '../hooks/useProvidedStateOrCreate.js';\nimport { useMenuKeyboardNavigation } from '../hooks/useMenuKeyboardNavigation.js';\nimport { useId } from '../hooks/useId.js';\nimport { Divider } from '../ActionList/Divider.js';\nimport { ActionListContainerContext } from '../ActionList/ActionListContainerContext.js';\nimport '../Button/ButtonBase.js';\nimport '../utils/defaultSxProp.js';\nimport { ButtonComponent } from '../Button/Button.js';\nimport { Tooltip } from '../TooltipV2/Tooltip.js';\nimport '../Tooltip/Tooltip.js';\n\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nconst MenuContext = /*#__PURE__*/React.createContext({\n  renderAnchor: null,\n  open: false\n});\nconst Menu = ({\n  anchorRef: externalAnchorRef,\n  open,\n  onOpenChange,\n  children\n}) => {\n  const parentMenuContext = useContext(MenuContext);\n  const [combinedOpenState, setCombinedOpenState] = useProvidedStateOrCreate(open, onOpenChange, false);\n  const onOpen = React.useCallback(() => setCombinedOpenState(true), [setCombinedOpenState]);\n  const onClose = React.useCallback(gesture => {\n    var _parentMenuContext$on;\n    setCombinedOpenState(false);\n\n    // Close the parent stack when an item is selected or the user tabs out of the menu entirely\n    switch (gesture) {\n      case 'tab':\n      case 'item-select':\n        (_parentMenuContext$on = parentMenuContext.onClose) === null || _parentMenuContext$on === void 0 ? void 0 : _parentMenuContext$on.call(parentMenuContext, gesture);\n    }\n  }, [setCombinedOpenState, parentMenuContext]);\n  const menuButtonChild = React.Children.toArray(children).find(child => /*#__PURE__*/React.isValidElement(child) && (child.type === MenuButton || child.type === Anchor));\n  const menuButtonChildId = /*#__PURE__*/React.isValidElement(menuButtonChild) ? menuButtonChild.props.id : undefined;\n  const anchorRef = useProvidedRefOrCreate(externalAnchorRef);\n  const anchorId = useId(menuButtonChildId);\n  let renderAnchor = null;\n  // 🚨 Hack for good API!\n  // we strip out Anchor from children and pass it to AnchoredOverlay to render\n  // with additional props for accessibility\n  // 🚨 Accounting for Tooltip wrapping ActionMenu.Button or being a direct child of ActionMenu.Anchor.\n  const contents = React.Children.map(children, child => {\n    // Is ActionMenu.Button wrapped with Tooltip? If this is the case, our anchor is the tooltip's trigger (ActionMenu.Button's grandchild)\n    if (child.type === Tooltip) {\n      // tooltip trigger\n      const anchorChildren = child.props.children;\n      if (anchorChildren.type === MenuButton) {\n        renderAnchor = anchorProps => {\n          // We need to attach the anchor props to the tooltip trigger (ActionMenu.Button's grandchild) not the tooltip itself.\n          const triggerButton = /*#__PURE__*/React.cloneElement(anchorChildren, {\n            ...anchorProps\n          });\n          return /*#__PURE__*/React.cloneElement(child, {\n            children: triggerButton,\n            ref: anchorRef\n          });\n        };\n      }\n      return null;\n    } else if (child.type === Anchor) {\n      const anchorChildren = child.props.children;\n      const isWrappedWithTooltip = anchorChildren !== undefined ? anchorChildren.type === Tooltip : false;\n      if (isWrappedWithTooltip) {\n        if (anchorChildren.props.children !== null) {\n          renderAnchor = anchorProps => {\n            // ActionMenu.Anchor's children can be wrapped with Tooltip. If this is the case, our anchor is the tooltip's trigger\n            const tooltipTrigger = anchorChildren.props.children;\n            // We need to attach the anchor props to the tooltip trigger not the tooltip itself.\n            const tooltipTriggerEl = /*#__PURE__*/React.cloneElement(tooltipTrigger, {\n              ...anchorProps\n            });\n            const tooltip = /*#__PURE__*/React.cloneElement(anchorChildren, {\n              children: tooltipTriggerEl\n            });\n            return /*#__PURE__*/React.cloneElement(child, {\n              children: tooltip,\n              ref: anchorRef\n            });\n          };\n        }\n      } else {\n        renderAnchor = anchorProps => /*#__PURE__*/React.cloneElement(child, anchorProps);\n      }\n      return null;\n    } else if (child.type === MenuButton) {\n      renderAnchor = anchorProps => /*#__PURE__*/React.cloneElement(child, anchorProps);\n      return null;\n    } else {\n      return child;\n    }\n  });\n  return /*#__PURE__*/React.createElement(MenuContext.Provider, {\n    value: {\n      anchorRef,\n      renderAnchor,\n      anchorId,\n      open: combinedOpenState,\n      onOpen,\n      onClose,\n      // will be undefined for the outermost level, then false for the top menu, then true inside that\n      isSubmenu: parentMenuContext.isSubmenu !== undefined\n    }\n  }, contents);\n};\nMenu.displayName = \"Menu\";\nconst Anchor = /*#__PURE__*/React.forwardRef(({\n  children,\n  ...anchorProps\n}, anchorRef) => {\n  const {\n    onOpen,\n    isSubmenu\n  } = React.useContext(MenuContext);\n  const openSubmenuOnRightArrow = useCallback(event => {\n    var _children$props$onKey, _children$props;\n    (_children$props$onKey = (_children$props = children.props).onKeyDown) === null || _children$props$onKey === void 0 ? void 0 : _children$props$onKey.call(_children$props, event);\n    if (isSubmenu && event.key === 'ArrowRight' && !event.defaultPrevented) onOpen === null || onOpen === void 0 ? void 0 : onOpen('anchor-key-press');\n  }, [children, isSubmenu, onOpen]);\n\n  // Add right chevron icon to submenu anchors rendered using `ActionList.Item`\n  const parentActionListContext = useContext(ActionListContainerContext);\n  const thisActionListContext = useMemo(() => isSubmenu ? {\n    ...parentActionListContext,\n    defaultTrailingVisual: /*#__PURE__*/React.createElement(ChevronRightIcon, null),\n    // Default behavior is to close after selecting; we want to open the submenu instead\n    afterSelect: () => onOpen === null || onOpen === void 0 ? void 0 : onOpen('anchor-click')\n  } : parentActionListContext, [isSubmenu, onOpen, parentActionListContext]);\n  return /*#__PURE__*/React.createElement(ActionListContainerContext.Provider, {\n    value: thisActionListContext\n  }, /*#__PURE__*/React.cloneElement(children, {\n    ...anchorProps,\n    ref: anchorRef,\n    onKeyDown: openSubmenuOnRightArrow\n  }));\n});\n\n/** this component is syntactical sugar 🍭 */\n\nconst MenuButton = /*#__PURE__*/React.forwardRef(({\n  ...props\n}, anchorRef) => {\n  return /*#__PURE__*/React.createElement(Anchor, {\n    ref: anchorRef\n  }, /*#__PURE__*/React.createElement(ButtonComponent, _extends({\n    type: \"button\",\n    trailingAction: TriangleDownIcon\n  }, props)));\n});\nconst Overlay = ({\n  children,\n  align = 'start',\n  side,\n  'aria-labelledby': ariaLabelledby,\n  ...overlayProps\n}) => {\n  // we typecast anchorRef as required instead of optional\n  // because we know that we're setting it in context in Menu\n  const {\n    anchorRef,\n    renderAnchor,\n    anchorId,\n    open,\n    onOpen,\n    onClose,\n    isSubmenu = false\n  } = React.useContext(MenuContext);\n  const containerRef = React.useRef(null);\n  useMenuKeyboardNavigation(open, onClose, containerRef, anchorRef, isSubmenu);\n\n  // If the menu anchor is an icon button, we need to label the menu by tooltip that also labelled the anchor.\n  const [anchorAriaLabelledby, setAnchorAriaLabelledby] = useState(null);\n  useEffect(() => {\n    if (anchorRef.current) {\n      const ariaLabelledby = anchorRef.current.getAttribute('aria-labelledby');\n      if (ariaLabelledby) {\n        setAnchorAriaLabelledby(ariaLabelledby);\n      }\n    }\n  }, [anchorRef]);\n  return /*#__PURE__*/React.createElement(AnchoredOverlay, {\n    anchorRef: anchorRef,\n    renderAnchor: renderAnchor,\n    anchorId: anchorId,\n    open: open,\n    onOpen: onOpen,\n    onClose: onClose,\n    align: align,\n    side: side !== null && side !== void 0 ? side : isSubmenu ? 'outside-right' : 'outside-bottom',\n    overlayProps: overlayProps,\n    focusZoneSettings: {\n      focusOutBehavior: 'wrap'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: containerRef\n  }, /*#__PURE__*/React.createElement(ActionListContainerContext.Provider, {\n    value: {\n      container: 'ActionMenu',\n      listRole: 'menu',\n      // If there is a custom aria-labelledby, use that. Otherwise, if exists, use the id that labels the anchor such as tooltip. If none of them exist, use anchor id.\n      listLabelledBy: ariaLabelledby || anchorAriaLabelledby || anchorId,\n      selectionAttribute: 'aria-checked',\n      // Should this be here?\n      afterSelect: () => onClose === null || onClose === void 0 ? void 0 : onClose('item-select'),\n      enableFocusZone: false // AnchoredOverlay takes care of focus zone\n    }\n  }, children)));\n};\nOverlay.displayName = \"Overlay\";\nMenu.displayName = 'ActionMenu';\nconst ActionMenu = Object.assign(Menu, {\n  Button: MenuButton,\n  Anchor,\n  Overlay,\n  Divider\n});\n\nexport { ActionMenu };\n","import React, { useCallback, useEffect } from 'react';\nimport Overlay from '../Overlay/Overlay.js';\nimport { useFocusTrap } from '../hooks/useFocusTrap.js';\nimport { useFocusZone } from '../hooks/useFocusZone.js';\nimport { useProvidedRefOrCreate } from '../hooks/useProvidedRefOrCreate.js';\nimport '@primer/behaviors/utils';\nimport { useAnchoredPosition } from '../hooks/useAnchoredPosition.js';\nimport { useRenderForcingRef } from '../hooks/useRenderForcingRef.js';\nimport { useId } from '../hooks/useId.js';\n\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\n/**\n * An `AnchoredOverlay` provides an anchor that will open a floating overlay positioned relative to the anchor.\n * The overlay can be opened and navigated using keyboard or mouse.\n */\nconst AnchoredOverlay = ({\n  renderAnchor,\n  anchorRef: externalAnchorRef,\n  anchorId: externalAnchorId,\n  children,\n  open,\n  onOpen,\n  onClose,\n  height,\n  width,\n  overlayProps,\n  focusTrapSettings,\n  focusZoneSettings,\n  side = 'outside-bottom',\n  align = 'start',\n  alignmentOffset,\n  anchorOffset,\n  className\n}) => {\n  const anchorRef = useProvidedRefOrCreate(externalAnchorRef);\n  const [overlayRef, updateOverlayRef] = useRenderForcingRef();\n  const anchorId = useId(externalAnchorId);\n  const onClickOutside = useCallback(() => onClose === null || onClose === void 0 ? void 0 : onClose('click-outside'), [onClose]);\n  const onEscape = useCallback(() => onClose === null || onClose === void 0 ? void 0 : onClose('escape'), [onClose]);\n  const onAnchorKeyDown = useCallback(event => {\n    if (!event.defaultPrevented) {\n      if (!open && ['ArrowDown', 'ArrowUp', ' ', 'Enter'].includes(event.key)) {\n        onOpen === null || onOpen === void 0 ? void 0 : onOpen('anchor-key-press', event);\n        event.preventDefault();\n      }\n    }\n  }, [open, onOpen]);\n  const onAnchorClick = useCallback(event => {\n    if (event.defaultPrevented || event.button !== 0) {\n      return;\n    }\n    if (!open) {\n      onOpen === null || onOpen === void 0 ? void 0 : onOpen('anchor-click');\n    } else {\n      onClose === null || onClose === void 0 ? void 0 : onClose('anchor-click');\n    }\n  }, [open, onOpen, onClose]);\n  const {\n    position\n  } = useAnchoredPosition({\n    anchorElementRef: anchorRef,\n    floatingElementRef: overlayRef,\n    side,\n    align,\n    alignmentOffset,\n    anchorOffset\n  }, [overlayRef.current]);\n  useEffect(() => {\n    // ensure overlay ref gets cleared when closed, so position can reset between closing/re-opening\n    if (!open && overlayRef.current) {\n      updateOverlayRef(null);\n    }\n  }, [open, overlayRef, updateOverlayRef]);\n  useFocusZone({\n    containerRef: overlayRef,\n    disabled: !open || !position,\n    ...focusZoneSettings\n  });\n  useFocusTrap({\n    containerRef: overlayRef,\n    disabled: !open || !position,\n    ...focusTrapSettings\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, renderAnchor && renderAnchor({\n    ref: anchorRef,\n    id: anchorId,\n    'aria-haspopup': 'true',\n    'aria-expanded': open,\n    tabIndex: 0,\n    onClick: onAnchorClick,\n    onKeyDown: onAnchorKeyDown\n  }), open ? /*#__PURE__*/React.createElement(Overlay, _extends({\n    returnFocusRef: anchorRef,\n    onClickOutside: onClickOutside,\n    ignoreClickRefs: [anchorRef],\n    onEscape: onEscape,\n    ref: updateOverlayRef,\n    role: \"none\",\n    visibility: position ? 'visible' : 'hidden',\n    height: height,\n    width: width,\n    top: (position === null || position === void 0 ? void 0 : position.top) || 0,\n    left: (position === null || position === void 0 ? void 0 : position.left) || 0,\n    anchorSide: position === null || position === void 0 ? void 0 : position.anchorSide,\n    className: className\n  }, overlayProps), children) : null);\n};\nAnchoredOverlay.displayName = 'AnchoredOverlay';\n\nexport { AnchoredOverlay };\n","import React from 'react';\nimport { getAnchoredPosition } from '@primer/behaviors';\nimport { useProvidedRefOrCreate } from './useProvidedRefOrCreate.js';\nimport { useResizeObserver } from './useResizeObserver.js';\nimport useIsomorphicLayoutEffect from '../utils/useIsomorphicLayoutEffect.js';\n\n/**\n * Calculates the top and left values for an absolutely-positioned floating element\n * to be anchored to some anchor element. Returns refs for the floating element\n * and the anchor element, along with the position.\n * @param settings Settings for calculating the anchored position.\n * @param dependencies Dependencies to determine when to re-calculate the position.\n * @returns An object of {top: number, left: number} to absolutely-position the\n * floating element.\n */\nfunction useAnchoredPosition(settings, dependencies = []) {\n  const floatingElementRef = useProvidedRefOrCreate(settings === null || settings === void 0 ? void 0 : settings.floatingElementRef);\n  const anchorElementRef = useProvidedRefOrCreate(settings === null || settings === void 0 ? void 0 : settings.anchorElementRef);\n  const [position, setPosition] = React.useState(undefined);\n  const updatePosition = React.useCallback(() => {\n    if (floatingElementRef.current instanceof Element && anchorElementRef.current instanceof Element) {\n      setPosition(getAnchoredPosition(floatingElementRef.current, anchorElementRef.current, settings));\n    } else {\n      setPosition(undefined);\n    }\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [floatingElementRef, anchorElementRef, ...dependencies]);\n  useIsomorphicLayoutEffect(updatePosition, [updatePosition]);\n  useResizeObserver(updatePosition);\n  return {\n    floatingElementRef,\n    anchorElementRef,\n    position\n  };\n}\n\nexport { useAnchoredPosition };\n","import React from 'react';\nimport { focusTrap } from '@primer/behaviors';\nimport { useProvidedRefOrCreate } from './useProvidedRefOrCreate.js';\n\n/**\n * Hook used to trap focus inside a container. Returns a ref that can be added to the container\n * that should trap focus.\n * @param settings {FocusTrapHookSettings}\n */\nfunction useFocusTrap(settings, dependencies = []) {\n  const containerRef = useProvidedRefOrCreate(settings === null || settings === void 0 ? void 0 : settings.containerRef);\n  const initialFocusRef = useProvidedRefOrCreate(settings === null || settings === void 0 ? void 0 : settings.initialFocusRef);\n  const disabled = settings === null || settings === void 0 ? void 0 : settings.disabled;\n  const abortController = React.useRef();\n  const previousFocusedElement = React.useRef(null);\n\n  // If we are enabling a focus trap and haven't already stored the previously focused element\n  // go ahead an do that so we can restore later when the trap is disabled.\n  if (!previousFocusedElement.current && !(settings !== null && settings !== void 0 && settings.disabled)) {\n    previousFocusedElement.current = document.activeElement;\n  }\n\n  // This function removes the event listeners that enable the focus trap and restores focus\n  // to the previously-focused element (if necessary).\n  function disableTrap() {\n    var _abortController$curr;\n    (_abortController$curr = abortController.current) === null || _abortController$curr === void 0 ? void 0 : _abortController$curr.abort();\n    if (settings !== null && settings !== void 0 && settings.returnFocusRef && settings.returnFocusRef.current instanceof HTMLElement) {\n      settings.returnFocusRef.current.focus();\n    } else if (settings !== null && settings !== void 0 && settings.restoreFocusOnCleanUp && previousFocusedElement.current instanceof HTMLElement) {\n      previousFocusedElement.current.focus();\n      previousFocusedElement.current = null;\n    }\n  }\n  React.useEffect(() => {\n    if (containerRef.current instanceof HTMLElement) {\n      if (!disabled) {\n        var _initialFocusRef$curr;\n        abortController.current = focusTrap(containerRef.current, (_initialFocusRef$curr = initialFocusRef.current) !== null && _initialFocusRef$curr !== void 0 ? _initialFocusRef$curr : undefined);\n        return () => {\n          disableTrap();\n        };\n      } else {\n        disableTrap();\n      }\n    }\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [containerRef, initialFocusRef, disabled, ...dependencies]);\n  return {\n    containerRef,\n    initialFocusRef\n  };\n}\n\nexport { useFocusTrap };\n","import React from 'react';\nimport { iterateFocusableElements } from '@primer/behaviors/utils';\n\nconst useMenuInitialFocus = (open, containerRef, anchorRef) => {\n  /**\n   * We need to pick the first element to focus based on how the menu was opened,\n   * however, we need to wait for the menu to be open to set focus.\n   * This is why we use set openingKey in state and have 2 effects\n   */\n  const [openingGesture, setOpeningGesture] = React.useState(undefined);\n  React.useEffect(function inferOpeningKey() {\n    const anchorElement = anchorRef.current;\n    const clickHandler = event => {\n      // event.detail === 0 means onClick was fired by Enter/Space key\n      // https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/detail\n      if (event.detail !== 0) setOpeningGesture('mouse-click');\n    };\n    const keydownHandler = event => {\n      if (['Space', 'Enter', 'ArrowDown', 'ArrowUp'].includes(event.code)) {\n        setOpeningGesture(event.code);\n      }\n    };\n    anchorElement === null || anchorElement === void 0 ? void 0 : anchorElement.addEventListener('click', clickHandler);\n    anchorElement === null || anchorElement === void 0 ? void 0 : anchorElement.addEventListener('keydown', keydownHandler);\n    return () => {\n      anchorElement === null || anchorElement === void 0 ? void 0 : anchorElement.removeEventListener('click', clickHandler);\n      anchorElement === null || anchorElement === void 0 ? void 0 : anchorElement.removeEventListener('keydown', keydownHandler);\n    };\n  }, [anchorRef]);\n\n  /**\n   * Pick the first element to focus based on the key used to open the Menu\n   * Click: anchor\n   * ArrowDown | Space | Enter: first element\n   * ArrowUp: last element\n   */\n  React.useEffect(function moveFocusOnOpen() {\n    if (!open || !containerRef.current) return; // wait till the menu is open\n\n    const iterable = iterateFocusableElements(containerRef.current);\n    if (openingGesture === 'mouse-click') {\n      if (anchorRef.current) anchorRef.current.focus();else throw new Error('For focus management, please attach anchorRef');\n    } else if (openingGesture && ['ArrowDown', 'Space', 'Enter'].includes(openingGesture)) {\n      const firstElement = iterable.next().value;\n      /** We push imperative focus to the next tick to prevent React's batching */\n      setTimeout(() => firstElement === null || firstElement === void 0 ? void 0 : firstElement.focus());\n    } else if ('ArrowUp' === openingGesture) {\n      const elements = [...iterable];\n      const lastElement = elements[elements.length - 1];\n      setTimeout(() => lastElement.focus());\n    } else {\n      /** if the menu was not opened with the anchor, we default to the first element\n       *  for example: with keyboard shortcut (see stories/fixtures)\n       */\n      const firstElement = iterable.next().value;\n      setTimeout(() => firstElement === null || firstElement === void 0 ? void 0 : firstElement.focus());\n    }\n  },\n  // we don't want containerRef in dependencies\n  // because re-renders to containerRef while it's open should not fire initialMenuFocus\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [open, openingGesture, anchorRef]);\n};\n\nexport { useMenuInitialFocus };\n","import React from 'react';\nimport { iterateFocusableElements } from '@primer/behaviors/utils';\nimport { useMenuInitialFocus } from './useMenuInitialFocus.js';\nimport { useMnemonics } from './useMnemonics.js';\n\n/**\n * Keyboard navigation is a mix of 4 hooks\n * 1. useMenuInitialFocus\n * 2. useTypeaheadFocus\n * 3. useCloseMenuOnTab\n * 4. useMoveFocusToMenuItem\n */\nconst useMenuKeyboardNavigation = (open, onClose, containerRef, anchorRef, isSubmenu) => {\n  useMenuInitialFocus(open, containerRef, anchorRef);\n  useMnemonics(open, containerRef);\n  useCloseMenuOnTab(open, onClose, containerRef, anchorRef);\n  useMoveFocusToMenuItem(open, containerRef, anchorRef);\n  useCloseSubmenuOnArrow(open, isSubmenu, onClose, containerRef);\n};\n\n/**\n * When Tab or Shift+Tab is pressed, the menu should close\n * and the focus should naturally move to the next item\n */\nconst useCloseMenuOnTab = (open, onClose, containerRef, anchorRef) => {\n  React.useEffect(() => {\n    const container = containerRef.current;\n    const anchor = anchorRef.current;\n    const handler = event => {\n      if (open && event.key === 'Tab') onClose === null || onClose === void 0 ? void 0 : onClose('tab');\n    };\n    container === null || container === void 0 ? void 0 : container.addEventListener('keydown', handler);\n    anchor === null || anchor === void 0 ? void 0 : anchor.addEventListener('keydown', handler);\n    return () => {\n      container === null || container === void 0 ? void 0 : container.removeEventListener('keydown', handler);\n      anchor === null || anchor === void 0 ? void 0 : anchor.removeEventListener('keydown', handler);\n    };\n  }, [open, onClose, containerRef, anchorRef]);\n};\n\n/**\n * Close submenu when left arrow key is pressed\n */\nconst useCloseSubmenuOnArrow = (open, isSubmenu, onClose, containerRef) => {\n  React.useEffect(() => {\n    const container = containerRef.current;\n    const handler = event => {\n      if (open && isSubmenu && event.key === 'ArrowLeft') onClose === null || onClose === void 0 ? void 0 : onClose('arrow-left');\n    };\n    container === null || container === void 0 ? void 0 : container.addEventListener('keydown', handler);\n    return () => {\n      container === null || container === void 0 ? void 0 : container.removeEventListener('keydown', handler);\n    };\n  }, [open, onClose, containerRef, isSubmenu]);\n};\n\n/**\n * When Arrow Keys are pressed and the focus is on the anchor,\n * focus should move to a menu item\n */\nconst useMoveFocusToMenuItem = (open, containerRef, anchorRef) => {\n  React.useEffect(() => {\n    const container = containerRef.current;\n    const anchor = anchorRef.current;\n    const handler = event => {\n      if (!open || !container) return;\n      const iterable = iterateFocusableElements(container);\n      if (event.key === 'ArrowDown') {\n        // TODO: does commenting this out break anything?\n        // event.preventDefault() // prevent scroll event\n        const firstElement = iterable.next().value;\n        /** We push imperative focus to the next tick to prevent React's batching */\n        setTimeout(() => firstElement === null || firstElement === void 0 ? void 0 : firstElement.focus());\n      } else if (event.key === 'ArrowUp') {\n        // TODO: does commenting this out break anything?\n        // event.preventDefault() // prevent scroll event\n        const elements = [...iterable];\n        const lastElement = elements[elements.length - 1];\n        setTimeout(() => lastElement.focus());\n      }\n    };\n    anchor === null || anchor === void 0 ? void 0 : anchor.addEventListener('keydown', handler);\n    return () => anchor === null || anchor === void 0 ? void 0 : anchor.addEventListener('keydown', handler);\n  }, [open, containerRef, anchorRef]);\n};\n\nexport { useMenuKeyboardNavigation };\n","import React from 'react';\nimport { iterateFocusableElements } from '@primer/behaviors/utils';\nimport { useProvidedRefOrCreate } from './useProvidedRefOrCreate.js';\n\n/*\n * A mnemonic indicates to the user which key to press (single)\n * to activate a command or navigate to a component\n * typically appearing in a menu title, menu item, or the text of a button.\n */\n\nconst useMnemonics = (open, providedRef) => {\n  const containerRef = useProvidedRefOrCreate(providedRef);\n  React.useEffect(function addAriaKeyshortcuts() {\n    if (!open || !containerRef.current) return;\n    const container = containerRef.current;\n    const focusableItems = [...iterateFocusableElements(container)];\n    focusableItems.map(item => {\n      var _item$textContent;\n      // if item already has aria-keyshortcuts defined by user, skip\n      if (item.getAttribute('aria-keyshortcuts')) return;\n      const firstLetter = (_item$textContent = item.textContent) === null || _item$textContent === void 0 ? void 0 : _item$textContent.toLowerCase()[0];\n      if (firstLetter) item.setAttribute('aria-keyshortcuts', firstLetter);\n    });\n  }, [open, containerRef]);\n  React.useEffect(function handleKeyDown() {\n    if (!open || !containerRef.current) return;\n    const container = containerRef.current;\n    const handler = event => {\n      var _elementToFocus;\n      // skip if a TextInput has focus\n      const activeElement = document.activeElement;\n      if (activeElement.tagName === 'INPUT' || activeElement.tagName === 'TEXTAREA') return;\n\n      // skip if used with modifier to preserve shortcuts like ⌘ + F\n      const hasModifier = event.ctrlKey || event.altKey || event.metaKey;\n      if (hasModifier) return;\n\n      // skip if it's not a alphabet key\n      if (!isAlphabetKey(event)) return;\n\n      // if this is a typeahead event, don't propagate outside of menu\n      event.stopPropagation();\n      const query = event.key.toLowerCase();\n      let elementToFocus;\n      const focusableItems = [...iterateFocusableElements(container)];\n      const itemsMatchingKey = focusableItems.filter(item => {\n        var _item$getAttribute;\n        const keyshortcuts = (_item$getAttribute = item.getAttribute('aria-keyshortcuts')) === null || _item$getAttribute === void 0 ? void 0 : _item$getAttribute.split(' ').map(shortcut => shortcut.toLowerCase());\n        return keyshortcuts && keyshortcuts.includes(query);\n      });\n      const currentActiveIndex = itemsMatchingKey.indexOf(activeElement);\n\n      // If the last element is already selected, cycle through the list\n      if (currentActiveIndex === itemsMatchingKey.length - 1) {\n        elementToFocus = itemsMatchingKey[0];\n      } else {\n        elementToFocus = itemsMatchingKey.find((item, index) => {\n          return index > currentActiveIndex;\n        });\n      }\n      (_elementToFocus = elementToFocus) === null || _elementToFocus === void 0 ? void 0 : _elementToFocus.focus();\n    };\n    container.addEventListener('keydown', handler);\n    return () => container.removeEventListener('keydown', handler);\n  }, [open, containerRef]);\n  const isAlphabetKey = event => {\n    return event.key.length === 1 && /[a-z\\d]/i.test(event.key);\n  };\n  return {\n    containerRef\n  };\n};\n\nexport { useMnemonics };\n","import { useMemo, useCallback, useEffect } from 'react';\n\n// Because events are handled at the document level, we provide a mechanism for early return.\nconst stopPropagation = true;\n\n/**\n * Calls all handlers in reverse order\n * @param event The MouseEvent generated by the click event.\n */\nfunction handleClick(event) {\n  if (!event.defaultPrevented) {\n    for (const handler of Object.values(registry).reverse()) {\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (handler(event) === stopPropagation || event.defaultPrevented) {\n        break;\n      }\n    }\n  }\n}\nconst registry = {};\nfunction register(id, handler) {\n  registry[id] = handler;\n}\nfunction deregister(id) {\n  delete registry[id];\n}\n\n// For auto-incrementing unique identifiers for registered handlers.\nlet handlerId = 0;\nconst useOnOutsideClick = ({\n  containerRef,\n  ignoreClickRefs,\n  onClickOutside\n}) => {\n  const id = useMemo(() => handlerId++, []);\n  const handler = useCallback(event => {\n    var _containerRef$current;\n    // don't call click handler if the mouse event was triggered by an auxiliary button (right click/wheel button/etc)\n    if (event instanceof MouseEvent && event.button > 0) {\n      return stopPropagation;\n    }\n\n    // don't call handler if the click happened inside of the container\n    if ((_containerRef$current = containerRef.current) !== null && _containerRef$current !== void 0 && _containerRef$current.contains(event.target)) {\n      return stopPropagation;\n    }\n\n    // don't call handler if click happened on an ignored ref\n    if (ignoreClickRefs && ignoreClickRefs.some(({\n      current\n    }) => current === null || current === void 0 ? void 0 : current.contains(event.target))) {\n      return stopPropagation;\n    }\n    onClickOutside(event);\n  }, [containerRef, ignoreClickRefs, onClickOutside]);\n  useEffect(() => {\n    if (Object.keys(registry).length === 0) {\n      // use capture to ensure we get all events\n      document.addEventListener('mousedown', handleClick, {\n        capture: true\n      });\n    }\n    register(id, handler);\n    return () => {\n      deregister(id);\n      if (Object.keys(registry).length === 0) {\n        document.removeEventListener('mousedown', handleClick, {\n          capture: true\n        });\n      }\n    };\n  }, [id, handler]);\n};\n\nexport { useOnOutsideClick };\n","import { useEffect } from 'react';\nimport { iterateFocusableElements } from '@primer/behaviors/utils';\n\nfunction useOpenAndCloseFocus({\n  initialFocusRef,\n  returnFocusRef,\n  containerRef,\n  preventFocusOnOpen\n}) {\n  useEffect(() => {\n    if (preventFocusOnOpen) {\n      return;\n    }\n    const returnRef = returnFocusRef.current;\n    if (initialFocusRef && initialFocusRef.current) {\n      initialFocusRef.current.focus();\n    } else if (containerRef.current) {\n      const firstItem = iterateFocusableElements(containerRef.current).next().value;\n      firstItem === null || firstItem === void 0 ? void 0 : firstItem.focus();\n    }\n    return function () {\n      returnRef === null || returnRef === void 0 ? void 0 : returnRef.focus();\n    };\n  }, [initialFocusRef, returnFocusRef, containerRef, preventFocusOnOpen]);\n}\n\nexport { useOpenAndCloseFocus };\n","import { useOnOutsideClick } from './useOnOutsideClick.js';\nimport { useOpenAndCloseFocus } from './useOpenAndCloseFocus.js';\nimport { useOnEscapePress } from './useOnEscapePress.js';\nimport { useProvidedRefOrCreate } from './useProvidedRefOrCreate.js';\n\nconst useOverlay = ({\n  overlayRef: _overlayRef,\n  returnFocusRef,\n  initialFocusRef,\n  onEscape,\n  ignoreClickRefs,\n  onClickOutside,\n  preventFocusOnOpen\n}) => {\n  const overlayRef = useProvidedRefOrCreate(_overlayRef);\n  useOpenAndCloseFocus({\n    containerRef: overlayRef,\n    returnFocusRef,\n    initialFocusRef,\n    preventFocusOnOpen\n  });\n  useOnOutsideClick({\n    containerRef: overlayRef,\n    ignoreClickRefs,\n    onClickOutside\n  });\n\n  // We only want one overlay to close at a time\n  const preventeddefaultCheckedEscape = event => {\n    onEscape(event);\n    event.preventDefault();\n  };\n  useOnEscapePress(preventeddefaultCheckedEscape);\n  return {\n    ref: overlayRef\n  };\n};\n\nexport { useOverlay };\n","import { useState, useCallback } from 'react';\n\n/**\n * There are some situations where we want to give users the option to control state externally with their own state handlers\n * or default to using internal state handlers. Because of the 'rules-of-hooks', we cannot conditionally make a call to `React.useState`\n * only in the situations where the state is not provided as a prop.\n * This hook aims to encapsulate that logic, so the consumer doesn't need to be concerned with violating `rules-of-hooks`.\n * @param externalState The state to use - if undefined, will use the state from a call to React.useState\n * @param setExternalState The setState to use - if undefined, will use the setState from a call to React.useState\n * @param defaultState The defaultState to use, if using internal state.\n */\nfunction useProvidedStateOrCreate(externalState, setExternalState, defaultState) {\n  const [internalState, setInternalState] = useState(defaultState);\n  const state = externalState !== null && externalState !== void 0 ? externalState : internalState;\n  const setState = useCallback(s => {\n    setInternalState(s);\n    if (setExternalState) setExternalState(s);\n  }, [setExternalState]);\n  return [state, setState];\n}\n\nexport { useProvidedStateOrCreate };\n","import { useState, useRef, useCallback } from 'react';\n\n/**\n * There are certain situations where a ref might be set after the current render cycle for a\n * component has finished.  e.g. a forward ref from a conditionally rendered child component.\n * In these situations, we need to force a re-render, which is done here by the useState hook.\n * @type TRef The type of the RefObject which should be created.\n */\nfunction useRenderForcingRef(value) {\n  const [refCurrent, setRefCurrent] = useState(value || null);\n  const ref = useRef(null);\n  ref.current = refCurrent;\n  const setRef = useCallback(newRef => {\n    ref.current = newRef;\n    setRefCurrent(newRef);\n  }, [ref]);\n  return [ref, setRef];\n}\n\nexport { useRenderForcingRef };\n","import { useRef } from 'react';\nimport useIsomorphicLayoutEffect from '../utils/useIsomorphicLayoutEffect.js';\n\n// https://gist.github.com/strothj/708afcf4f01dd04de8f49c92e88093c3\n\nfunction useResizeObserver(callback, target) {\n  const savedCallback = useRef(callback);\n  useIsomorphicLayoutEffect(() => {\n    savedCallback.current = callback;\n  });\n  useIsomorphicLayoutEffect(() => {\n    const targetEl = target && 'current' in target ? target.current : document.documentElement;\n    if (!targetEl) {\n      return;\n    }\n    const observer = new ResizeObserver(entries => {\n      savedCallback.current(entries);\n    });\n    observer.observe(targetEl);\n    return () => {\n      observer.disconnect();\n    };\n  }, [target]);\n}\n\nexport { useResizeObserver };\n"],"names":["_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","MenuContext","renderAnchor","open","Menu","anchorRef","externalAnchorRef","onOpenChange","children","parentMenuContext","useContext","combinedOpenState","setCombinedOpenState","onOpen","onClose","gesture","_parentMenuContext$on","menuButtonChild","toArray","find","child","type","MenuButton","Anchor","menuButtonChildId","props","id","undefined","anchorId","contents","map","anchorChildren","anchorProps","triggerButton","ref","tooltipTrigger","tooltipTriggerEl","tooltip","Provider","value","isSubmenu","displayName","openSubmenuOnRightArrow","useCallback","event","_children$props$onKey","_children$props","onKeyDown","key","defaultPrevented","parentActionListContext","thisActionListContext","useMemo","defaultTrailingVisual","afterSelect","trailingAction","Overlay","align","side","ariaLabelledby","overlayProps","containerRef","anchorAriaLabelledby","setAnchorAriaLabelledby","useState","useEffect","current","getAttribute","focusZoneSettings","focusOutBehavior","container","listRole","listLabelledBy","selectionAttribute","enableFocusZone","ActionMenu","Button","Divider","AnchoredOverlay","externalAnchorId","height","width","focusTrapSettings","alignmentOffset","anchorOffset","className","overlayRef","updateOverlayRef","onClickOutside","onEscape","onAnchorKeyDown","includes","preventDefault","onAnchorClick","button","position","anchorElementRef","floatingElementRef","disabled","tabIndex","onClick","returnFocusRef","ignoreClickRefs","role","visibility","top","left","anchorSide","useAnchoredPosition","settings","dependencies","setPosition","updatePosition","Element","useFocusTrap","initialFocusRef","abortController","previousFocusedElement","disableTrap","_abortController$curr","abort","HTMLElement","focus","restoreFocusOnCleanUp","document","activeElement","_initialFocusRef$curr","useMenuInitialFocus","openingGesture","setOpeningGesture","anchorElement","clickHandler","detail","keydownHandler","code","addEventListener","removeEventListener","iterable","firstElement","next","setTimeout","elements","lastElement","useMenuKeyboardNavigation","useCloseMenuOnTab","useMoveFocusToMenuItem","useCloseSubmenuOnArrow","anchor","handler","useMnemonics","providedRef","focusableItems","item","_item$textContent","firstLetter","textContent","toLowerCase","setAttribute","_elementToFocus","tagName","ctrlKey","altKey","metaKey","isAlphabetKey","stopPropagation","query","itemsMatchingKey","filter","_item$getAttribute","keyshortcuts","split","shortcut","currentActiveIndex","indexOf","index","test","handleClick","values","registry","reverse","handlerId","useOnOutsideClick","_containerRef$current","MouseEvent","contains","target","some","keys","capture","useOpenAndCloseFocus","preventFocusOnOpen","returnRef","firstItem","useOverlay","_overlayRef","useProvidedStateOrCreate","externalState","setExternalState","defaultState","internalState","setInternalState","s","useRenderForcingRef","refCurrent","setRefCurrent","useRef","setRef","newRef","useResizeObserver","callback","savedCallback","targetEl","documentElement","observer","ResizeObserver","entries","observe","disconnect"],"sourceRoot":""}