# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Billingplatform::V1::Entities::BudgetState`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Billingplatform::V1::Entities::BudgetState`.

class Hydro::Schemas::Billingplatform::V1::Entities::BudgetState
  sig do
    params(
      current_amount: T.nilable(Float),
      is_fully_funded: T.nilable(T::Boolean),
      quantity: T.nilable(Float),
      target_amount: T.nilable(Float),
      threshold_met: T.nilable(Hydro::Schemas::Billingplatform::V1::Entities::BudgetState::BudgetThreshold)
    ).void
  end
  def initialize(current_amount: nil, is_fully_funded: nil, quantity: nil, target_amount: nil, threshold_met: nil); end

  sig { void }
  def clear_current_amount; end

  sig { void }
  def clear_is_fully_funded; end

  sig { void }
  def clear_quantity; end

  sig { void }
  def clear_target_amount; end

  sig { void }
  def clear_threshold_met; end

  sig { returns(Float) }
  def current_amount; end

  sig { params(value: Float).void }
  def current_amount=(value); end

  sig { returns(T::Boolean) }
  def is_fully_funded; end

  sig { params(value: T::Boolean).void }
  def is_fully_funded=(value); end

  sig { returns(Float) }
  def quantity; end

  sig { params(value: Float).void }
  def quantity=(value); end

  sig { returns(Float) }
  def target_amount; end

  sig { params(value: Float).void }
  def target_amount=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Billingplatform::V1::Entities::BudgetState::BudgetThreshold)) }
  def threshold_met; end

  sig { params(value: T.nilable(Hydro::Schemas::Billingplatform::V1::Entities::BudgetState::BudgetThreshold)).void }
  def threshold_met=(value); end
end
