# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Api::App::PlatformTypes::Gist`.
# Please instead update this file by running `bin/tapioca dsl Api::App::PlatformTypes::Gist`.

class Api::App::PlatformTypes::Gist < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(Api::App::PlatformTypes::AbuseReportConnection) }
  def abuse_reports; end

  sig { returns(T::Boolean) }
  def abuse_reports?; end

  sig { returns(Api::App::PlatformTypes::GistCommentConnection) }
  def comments; end

  sig { returns(T::Boolean) }
  def comments?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def created_at; end

  sig { returns(T::Boolean) }
  def created_at?; end

  sig { returns(T.nilable(String)) }
  def description; end

  sig { returns(T::Boolean) }
  def description?; end

  sig { returns(T.nilable(T::Array[Api::App::PlatformTypes::GistFile])) }
  def files; end

  sig { returns(T::Boolean) }
  def files?; end

  sig { returns(Api::App::PlatformTypes::GistConnection) }
  def forks; end

  sig { returns(T::Boolean) }
  def forks?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(T::Boolean) }
  def is_fork; end

  sig { returns(T::Boolean) }
  def is_fork?; end

  sig { returns(T::Boolean) }
  def is_pinned; end

  sig { returns(T::Boolean) }
  def is_pinned?; end

  sig { returns(T::Boolean) }
  def is_public; end

  sig { returns(T::Boolean) }
  def is_public?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def last_reported_at; end

  sig { returns(T::Boolean) }
  def last_reported_at?; end

  sig { returns(String) }
  def name; end

  sig { returns(T::Boolean) }
  def name?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::InterfaceType)) }
  def owner; end

  sig { returns(T::Boolean) }
  def owner?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def pushed_at; end

  sig { returns(T::Boolean) }
  def pushed_at?; end

  sig { returns(T.nilable(Integer)) }
  def report_count; end

  sig { returns(T::Boolean) }
  def report_count?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def resource_path; end

  sig { returns(T::Boolean) }
  def resource_path?; end

  sig { returns(T.nilable(String)) }
  def sha; end

  sig { returns(T::Boolean) }
  def sha?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::GistStafftoolsInfo)) }
  def stafftools_info; end

  sig { returns(T::Boolean) }
  def stafftools_info?; end

  sig { returns(Integer) }
  def stargazer_count; end

  sig { returns(T::Boolean) }
  def stargazer_count?; end

  sig { returns(Api::App::PlatformTypes::StargazerConnection) }
  def stargazers; end

  sig { returns(T::Boolean) }
  def stargazers?; end

  sig { returns(T.nilable(String)) }
  def title; end

  sig { returns(T::Boolean) }
  def title?; end

  sig { returns(T.nilable(String)) }
  def top_report_reason; end

  sig { returns(T::Boolean) }
  def top_report_reason?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def updated_at; end

  sig { returns(T::Boolean) }
  def updated_at?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def url; end

  sig { returns(T::Boolean) }
  def url?; end

  sig { returns(T::Boolean) }
  def viewer_can_star; end

  sig { returns(T::Boolean) }
  def viewer_can_star?; end

  sig { returns(T::Boolean) }
  def viewer_has_starred; end

  sig { returns(T::Boolean) }
  def viewer_has_starred?; end
end
