# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PlatformTypes::TreeEntry`.
# Please instead update this file by running `bin/tapioca dsl PlatformTypes::TreeEntry`.

class PlatformTypes::TreeEntry < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def content_html; end

  sig { returns(T::Boolean) }
  def content_html?; end

  sig { returns(T.nilable(String)) }
  def extension; end

  sig { returns(T::Boolean) }
  def extension?; end

  sig { returns(T.nilable(T::Array[PlatformTypes::FileLine])) }
  def file_lines; end

  sig { returns(T::Boolean) }
  def file_lines?; end

  sig do
    returns(T.nilable(T.any(PlatformTypes::ImageFileType, PlatformTypes::MarkdownFileType, PlatformTypes::PdfFileType, PlatformTypes::TextFileType)))
  end
  def file_type; end

  sig { returns(T::Boolean) }
  def file_type?; end

  sig { returns(T::Boolean) }
  def is_generated; end

  sig { returns(T::Boolean) }
  def is_generated?; end

  sig { returns(T.nilable(PlatformTypes::Language)) }
  def language; end

  sig { returns(T::Boolean) }
  def language?; end

  sig { returns(T.nilable(Integer)) }
  def line_count; end

  sig { returns(T::Boolean) }
  def line_count?; end

  sig { returns(Integer) }
  def mode; end

  sig { returns(T::Boolean) }
  def mode?; end

  sig { returns(String) }
  def name; end

  sig { returns(T::Boolean) }
  def name?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def name_raw; end

  sig { returns(T::Boolean) }
  def name_raw?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::InterfaceType)) }
  def object; end

  sig { returns(T::Boolean) }
  def object?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def oid; end

  sig { returns(T::Boolean) }
  def oid?; end

  sig { returns(T.nilable(String)) }
  def path; end

  sig { returns(T::Boolean) }
  def path?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def path_raw; end

  sig { returns(T::Boolean) }
  def path_raw?; end

  sig { returns(PlatformTypes::Repository) }
  def repository; end

  sig { returns(T::Boolean) }
  def repository?; end

  sig { returns(Integer) }
  def size; end

  sig { returns(T::Boolean) }
  def size?; end

  sig { returns(T.nilable(PlatformTypes::Submodule)) }
  def submodule; end

  sig { returns(T::Boolean) }
  def submodule?; end

  sig { returns(String) }
  def type; end

  sig { returns(T::Boolean) }
  def type?; end

  sig { returns(T.nilable(PlatformTypes::Workflow)) }
  def workflow; end

  sig { returns(T::Boolean) }
  def workflow?; end
end
