{"version":3,"file":"chunk-app_assets_modules_github_webgl-warp_ts-xxxxxxxxxxxx.js","mappings":"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","sources":["app/assets/modules/github/webgl-warp.ts"],"sourcesContent":["import {\n  AdditiveBlending,\n  BackSide,\n  BufferAttribute,\n  BufferGeometry,\n  CircleGeometry,\n  Color,\n  CylinderGeometry,\n  LineBasicMaterial,\n  LineSegments,\n  MathUtils,\n  Mesh,\n  MeshBasicMaterial,\n  MeshLambertMaterial,\n  Object3D,\n  PerspectiveCamera,\n  PointLight,\n  Points,\n  PointsMaterial,\n  RepeatWrapping,\n  Scene,\n  SpotLight,\n  type Texture,\n  TextureLoader,\n  Vector3,\n  WebGLRenderer,\n  type WebGLRendererParameters,\n} from 'three'\n\nconst _w = window\nconst _b = document.body\nconst _d = document.documentElement\n\ntype HyperclassSignature =\n  | string\n  | number\n  | Object3D\n  | Record<string, number>\n  | null\n  | boolean\n  | WarpStage\n  | (() => void)\n  | BufferGeometry\n  | Texture\n\nclass Warplines {\n  [k: string]: HyperclassSignature\n  count: number\n  acceleration: number\n  accelerationTail: number\n  hyperDelay: number\n  warplinesPos: number\n\n  geometry: BufferGeometry | null\n  group: Object3D | null\n\n  ready: boolean\n  hyper: boolean\n  stage: WarpStage\n\n  constructor(stage: WarpStage) {\n    this.onInit = this.onInit.bind(this)\n    this.onFrame = this.onFrame.bind(this)\n    this.create = this.create.bind(this)\n    this.count = 8000\n    this.acceleration = 0.03\n    this.accelerationTail = 0.005\n    this.hyperDelay = 1000\n    this.warplinesPos = 100\n    this.geometry = null\n    this.group = null\n\n    this.ready = false\n    this.stage = stage\n  }\n\n  onInit() {\n    this.group = new Object3D()\n\n    this.create()\n    this.ready = true\n  }\n\n  onFrame() {\n    if (this.ready && this.hyper) {\n      for (let i = 0; i < this.count; i++) {\n        const positions = this.geometry!.getAttribute('position').array as number[]\n        const velocities = this.geometry!.getAttribute('velocity').array as number[]\n        const vStart = 2 * i\n        const vEnd = 2 * i + 1\n        const zStart = 6 * i + 2\n        const zEnd = 6 * i + 5\n\n        velocities[vStart]! += this.acceleration // bump up the velocity by the acceleration amount\n        velocities[vEnd]! += this.acceleration - this.accelerationTail\n\n        positions[zStart]! += velocities[vStart]! //z\n        positions[zEnd]! += velocities[vEnd]! //z end\n\n        if (positions[zEnd]! > this.warplinesPos) {\n          const z = MathUtils.randFloatSpread(500)\n          positions[zStart] = z\n          positions[zEnd] = z\n          velocities[vStart] = 0\n          velocities[vEnd] = 0\n        }\n      }\n\n      this.geometry!.getAttribute('position').needsUpdate = true\n    }\n  }\n\n  create() {\n    this.geometry = new BufferGeometry()\n    this.geometry.setAttribute('position', new BufferAttribute(new Float32Array(6 * this.count), 3))\n    this.geometry.setAttribute('velocity', new BufferAttribute(new Float32Array(2 * this.count), 1))\n\n    for (let i = 0; i < this.count; i++) {\n      const x = MathUtils.randFloatSpread(400)\n      const y = MathUtils.randFloatSpread(200)\n      const z = MathUtils.randFloatSpread(500)\n      const xx = x\n      const yy = y\n      const zz = z\n      const pa = this.geometry.getAttribute('position').array as number[]\n      const va = this.geometry.getAttribute('velocity').array as number[]\n      //line start\n      const idxOffset = i * 6\n      pa[idxOffset] = x\n      pa[idxOffset + 1] = y\n      pa[idxOffset + 2] = z\n      //line end\n      pa[idxOffset + 3] = xx\n      pa[idxOffset + 4] = yy\n      pa[idxOffset + 5] = zz\n\n      va[2 * i] = va[2 * i + 1] = 0\n    }\n\n    const mat = new LineBasicMaterial({color: 0xffffff})\n    const lines = new LineSegments(this.geometry, mat)\n    this.group!.add(lines)\n  }\n\n  hyperStart() {\n    this.hyper = true\n    this.stage.scene.add(this.group!)\n  }\n\n  hyperStop() {\n    setTimeout(() => {\n      this.hyper = false\n      this.stage.scene.remove(this.group!)\n    }, this.hyperDelay)\n  }\n}\n\nclass Wormhole {\n  [k: string]: HyperclassSignature\n  ease: number\n  hyperDelay: number\n  hype: {\n    normalize: number\n    scale: number\n    speed: number\n  }\n  texture: Texture | null\n  geometry: BufferGeometry | null\n  group: Object3D | null\n\n  ready: boolean\n  hyper: boolean\n  stage: WarpStage\n\n  constructor(stage: WarpStage) {\n    this.onInit = this.onInit.bind(this)\n    this.onFrame = this.onFrame.bind(this)\n    this.create = this.create.bind(this)\n    this.group = null\n    this.texture = null\n\n    this.ease = 10\n    this.hyperDelay = 1000\n    this.hype = {\n      normalize: 0.001,\n      scale: 0.15,\n      speed: 6.26,\n    }\n\n    this.ready = false\n    this.hyper = false\n    this.stage = stage\n  }\n\n  onFrame() {\n    if (!this.ready || !this.hyper || !this.texture) return\n    const {hype, stage} = this\n    this.texture.offset.y -= hype.normalize * hype.speed\n    this.texture.needsUpdate = true\n\n    this.group!.scale.set(hype.scale, hype.scale, 1)\n\n    const {rotation, position} = stage.camera\n    this.group!.rotation.set(rotation.x, rotation.y, rotation.z)\n    this.group!.position.set(position.x, position.y, position.z)\n\n    this.group!.rotation.z -= 0.008\n\n    return\n  }\n\n  onInit() {\n    this.create()\n    this.ready = true\n  }\n\n  create() {\n    this.group = new Object3D()\n    this.group.position.z = this.stage.camera.position.z\n    const loader = new TextureLoader()\n    this.texture = loader.load('/images/modules/signup/launch_codes/wormhole.jpg')\n    this.texture.wrapT = RepeatWrapping\n    this.texture.wrapS = RepeatWrapping\n\n    const geometry = new CylinderGeometry(100, 0, 300, 40, 40, true)\n    const material = new MeshLambertMaterial({\n      color: 0xffffff,\n      opacity: 1,\n      map: this.texture,\n      blending: AdditiveBlending,\n      side: BackSide,\n      transparent: true,\n      depthTest: true,\n    })\n\n    const color = new Color()\n    color.setHSL(Math.random(), 1, 0.8)\n\n    const light = new PointLight(color, 4, 100)\n    light.position.set(0, 0, 0)\n\n    const cylinder = new Mesh(geometry, material)\n    cylinder.position.set(0, 0, 0)\n    cylinder.rotation.x = Math.PI / 2\n\n    this.group.add(cylinder)\n    this.group.add(light)\n  }\n\n  hyperStart() {\n    this.hyper = true\n    setTimeout(() => {\n      this.stage.scene.add(this.group!)\n    }, this.hyperDelay)\n  }\n\n  hyperStop() {\n    setTimeout(() => {\n      this.hyper = false\n    }, this.hyperDelay)\n  }\n}\n\nclass Starfield {\n  [k: string]: HyperclassSignature\n  distance: number\n  destinationPos: number\n  destinationSize: number\n  hyperDistance: number\n  hyperEnd: number\n  size: number\n  spread: number\n  total: number\n\n  ease: number\n  move: {\n    x: number\n    y: number\n    z: number\n  }\n  look: {\n    x: number\n    y: number\n    z: number\n  }\n  group: Object3D | null\n\n  ready: boolean\n  hyper: boolean\n  stage: WarpStage\n\n  constructor(stage: WarpStage) {\n    this.onInit = this.onInit.bind(this)\n    this.onFrame = this.onFrame.bind(this)\n    this.create = this.create.bind(this)\n    this.total = 600\n    this.spread = 2000\n    this.size = 25\n    this.destinationSize = 75\n\n    this.distance = -3000\n    this.destinationPos = 200\n\n    this.hyperDistance = 5000\n    this.hyperEnd = this.hyperDistance - this.distance - this.destinationPos\n    this.ease = 15\n    this.move = {x: 0, y: 0, z: this.distance}\n    this.look = {x: 0, y: 0, z: 0}\n    this.group = null\n\n    this.ready = false\n    this.hyper = false\n    this.stage = stage\n  }\n\n  onInit() {\n    this.group = new Object3D()\n    this.group.position.set(this.move.x, this.move.y, this.move.z - this.hyperDistance)\n\n    this.group.rotation.set(this.look.x, this.look.y, this.look.z)\n\n    this.create()\n    this.ready = true\n  }\n\n  onFrame() {\n    if (this.ready && this.group) {\n      this.group.position.z += (this.move.z - this.group.position.z) / this.ease\n    }\n  }\n\n  // create new star field group\n  create() {\n    const geometry = new BufferGeometry()\n    const loader = new TextureLoader()\n    const texture = loader.load('/images/modules/signup/launch_codes/star.png')\n    const material = new PointsMaterial({\n      size: this.size,\n      color: 0xffffff,\n      opacity: 0.8,\n      blending: AdditiveBlending,\n      transparent: true,\n      map: texture,\n    })\n    const positions = new Float32Array((this.total + 1) * 3)\n\n    const vertex = new Vector3()\n    for (let i = 0; i < this.total; i++) {\n      vertex.x = MathUtils.randFloatSpread(this.spread)\n      vertex.y = MathUtils.randFloatSpread(this.spread) // this is the \"distance\" of the starfield\n      vertex.z = MathUtils.randFloatSpread(this.hyperEnd)\n      vertex.toArray(positions, i * 3)\n    }\n    geometry.setAttribute('position', new BufferAttribute(positions, 3))\n\n    const stars = new Points(geometry, material)\n    this.group!.add(stars)\n  }\n\n  createLandingStar() {\n    const loader = new TextureLoader()\n    const bgTexture = loader.load('/images/modules/signup/launch_codes/star.png')\n\n    const sphereGeo = new CircleGeometry(this.destinationSize, 32)\n    const sphereMat = new MeshBasicMaterial({\n      color: 0xffffff,\n      opacity: 1,\n      blending: AdditiveBlending,\n      transparent: false,\n      map: bgTexture,\n    })\n\n    const northStar = new Mesh(sphereGeo, sphereMat)\n    northStar.position.set(0, 0, this.destinationPos)\n\n    return northStar\n  }\n\n  hyperStart() {\n    this.stage.scene.add(this.group!)\n\n    this.move = {\n      x: 0,\n      y: 0,\n      z: this.distance,\n    }\n    this.group!.scale.set(0.75, 0.75, 1)\n    this.ease += 100\n    this.move.z -= this.hyperDistance\n    this.hyper = true\n\n    const northStar = this.createLandingStar()\n    this.group!.add(northStar)\n  }\n\n  // on hyper stop\n  hyperStop() {\n    this.group!.scale.set(1, 1, 1.99)\n    this.ease -= 100\n    this.move.z += this.hyperEnd\n    this.hyper = false\n  }\n}\nclass WarpStage {\n  id: string\n  width: number\n  height: number\n  ease: number\n  move: {\n    x: number\n    y: number\n    z: number\n  }\n  look: {\n    x: number\n    y: number\n    z: number\n  }\n\n  objects: Array<Starfield | Wormhole | Warplines>\n  camera: PerspectiveCamera\n  renderer: WebGLRenderer\n  light: SpotLight\n  scene: Scene\n\n  ready: boolean\n  hyper: boolean\n\n  constructor(id: string, opts: WebGLRendererParameters) {\n    this.triggerEvent = this.triggerEvent.bind(this)\n    this.drawFrame = this.drawFrame.bind(this)\n    this.onResize = this.onResize.bind(this)\n    this.init = this.init.bind(this)\n\n    this.objects = [new Starfield(this), new Wormhole(this), new Warplines(this)]\n\n    this.width = 0 // is set later onResize\n    this.height = 0 // is set later onResize\n    this.ease = 20\n    this.move = {x: 0, y: 0, z: 200}\n    this.look = {x: 0, y: 0, z: 0}\n\n    this.id = id\n\n    this.renderer = this.resolveRenderer(opts || {})\n    this.camera = new PerspectiveCamera(60, window.innerWidth / window.innerHeight, 0.1, 10000)\n    this.light = new SpotLight(0xffffff, 1, 3000, 0.4, 0.5, 1)\n\n    this.scene = new Scene()\n\n    this.renderer.setPixelRatio(window.devicePixelRatio)\n    this.renderer.setClearColor(0x000000, 0)\n    this.renderer.sortObjects = false // fixes starfield not rendering transparent\n\n    this.camera.position.set(this.move.x, this.move.y, this.move.z)\n    this.camera.rotation.set(this.look.x, this.look.y, this.look.z)\n    this.camera.lookAt(this.scene.position)\n    this.light.position.set(this.move.x, this.move.y, this.move.z)\n\n    this.scene.add(this.light)\n\n    this.ready = true\n  }\n\n  resolveRenderer(params: WebGLRendererParameters) {\n    params = params || {}\n    return new WebGLRenderer(params)\n  }\n\n  triggerEvent(name: string) {\n    if (this.ready) {\n      for (const o of this.objects) {\n        if (typeof o[name] === 'function') {\n          const fx = o[name] as () => void\n          fx.call(o)\n        }\n      }\n    }\n  }\n\n  drawFrame() {\n    if (this.ready) {\n      this.triggerEvent('onFrame')\n\n      this.renderer.render(this.scene, this.camera)\n    }\n    requestAnimationFrame(this.drawFrame)\n  }\n\n  screenInfo() {\n    const screenWidth = Math.max(0, _w.innerWidth || _d.clientWidth || _b.clientWidth || 0)\n    const screenHeight = Math.max(0, _w.innerHeight || _d.clientHeight || _b.clientHeight || 0)\n    return {\n      width: screenWidth,\n      height: screenHeight,\n      ratio: screenWidth / screenHeight,\n      centerX: screenWidth / 2,\n      centerY: screenHeight / 2,\n    }\n  }\n\n  onResize() {\n    const info = this.screenInfo()\n    this.width = info.width\n    this.height = info.height\n\n    if (this.ready) {\n      this.renderer.setSize(this.width, this.height)\n      this.camera.aspect = this.width / this.height\n      requestAnimationFrame(() => this.camera.updateProjectionMatrix())\n    }\n  }\n\n  // start hyper travel\n  hyperStart() {\n    this.triggerEvent('hyperStart')\n  }\n\n  hyperStop() {\n    this.triggerEvent('hyperStop')\n  }\n\n  init() {\n    if (this.renderer && this.renderer.domElement) {\n      this.renderer.domElement.setAttribute('id', this.id)\n      document.querySelector('.js-signup-warp-bg')?.appendChild(this.renderer.domElement)\n    }\n    this.onResize()\n    this.triggerEvent('onInit')\n    this.drawFrame()\n    /* eslint-disable-next-line github/prefer-observers */\n    window.addEventListener('resize', () => this.onResize())\n  }\n}\n\nconst webglSupport = () => {\n  try {\n    const canvas = document.createElement('canvas')\n    return !!(window.WebGLRenderingContext && (canvas.getContext('webgl') || canvas.getContext('experimental-webgl')))\n  } catch (e) {\n    return false\n  }\n}\n\nexport const stageSetup = () => {\n  // check WebGL support - https://github.com/adolfintel/warpspeed\n\n  if (webglSupport()) {\n    return new WarpStage('warp-stage', {\n      alpha: true,\n      antialias: true,\n      precision: 'mediump',\n    })\n  }\n}\n\nexport default stageSetup\n"],"names":["_w","window","_b","document","body","_d","documentElement","Warplines","onInit","group","Object3D","create","ready","onFrame","hyper","i","count","positions","geometry","getAttribute","array","velocities","vStart","vEnd","zStart","zEnd","acceleration","accelerationTail","warplinesPos","z","MathUtils","randFloatSpread","needsUpdate","BufferGeometry","setAttribute","BufferAttribute","Float32Array","x","y","pa","va","idxOffset","mat","LineBasicMaterial","color","lines","LineSegments","add","hyperStart","stage","scene","hyperStop","setTimeout","remove","hyperDelay","constructor","bind","Wormhole","texture","hype","offset","normalize","speed","scale","set","rotation","position","camera","loader","TextureLoader","load","wrapT","RepeatWrapping","wrapS","CylinderGeometry","material","MeshLambertMaterial","opacity","map","blending","AdditiveBlending","side","BackSide","transparent","depthTest","Color","setHSL","Math","random","light","PointLight","cylinder","Mesh","PI","ease","Starfield","move","hyperDistance","look","PointsMaterial","size","total","vertex","Vector3","spread","hyperEnd","toArray","stars","Points","createLandingStar","bgTexture","sphereGeo","CircleGeometry","destinationSize","sphereMat","MeshBasicMaterial","northStar","destinationPos","distance","WarpStage","resolveRenderer","params","WebGLRenderer","triggerEvent","name","o","objects","fx","call","drawFrame","renderer","render","requestAnimationFrame","screenInfo","screenWidth","max","innerWidth","clientWidth","screenHeight","innerHeight","clientHeight","width","height","ratio","centerX","centerY","onResize","info","setSize","aspect","updateProjectionMatrix","init","domElement","id","querySelector","appendChild","addEventListener","opts","PerspectiveCamera","SpotLight","Scene","setPixelRatio","devicePixelRatio","setClearColor","sortObjects","lookAt","webglSupport","canvas","createElement","WebGLRenderingContext","getContext","e","stageSetup","alpha","antialias","precision"],"sourceRoot":""}