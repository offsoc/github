syntax = "proto3";
package github.authentication.v0;

option go_package = "client/proto/authentication/v0";
option ruby_package = "Authnd::Proto";

// Credentials represents the credentials provided.
message Credentials {
  // Reserved Credential types that are no longer supported
  //  * 2 - SSHPublicKeyFingerprint - Was never used in production and *could* be repurposed if we need to, but should be avoided unless necessary.
  reserved 2;

  //  * 3 - OAuthAccessToken - Was being used in production for more than just OAuthAccess tokens. Deprecated in favor of AccessToken.
  reserved 3;

  oneof kind {
    LoginPassword login_password = 1;

    SSHPublicKey ssh_public_key = 4;

    SignedAuthToken signed_auth_token = 5;

    AccessToken access_token = 6;
  };
}

// LoginPassword represent a login password credential pair.
message LoginPassword {
  // Login is the username of the actor making the request.
  // The field is called login, not username, to match the Users model.
  string login = 1;

  // Password is the password provided by the actor.
  string password = 2;
}

// SSHPublicKey represents a SSH public key.
message SSHPublicKey {
  // Key is the public key in openSSH format.
  // It's structure is <algorithm> <key> <comment>, where the <key> part of the
  // format is encoded with Base64.
  string key = 1;
}

// SignedAuthToken represents a Signed Auth Token (SAT) and the associated "scope" value
// See https://thehub.github.com/engineering/development-and-ops/secure-coding/secure-coding-dotcom/authn/#signed-auth-tokens for more information on SATs and scopes.
message SignedAuthToken {
  // token is the SAT token itself.
  string token = 1;

  // scope is the scope value used to validate the token.
  // This should be the same as the scope value used to generate the token.
  string scope = 2;
}

// AccessToken represents an Access Token (PAT, Oauth Token, PATv2 etc.).
// We do not currently support GitHub App tokens.
message AccessToken {
  // Token is an access token in the form of a variable-length string.
  string token = 1;
}
