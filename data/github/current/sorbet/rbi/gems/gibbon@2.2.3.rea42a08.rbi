# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `gibbon` gem.
# Please instead update this file by running `bin/tapioca gem gibbon`.

# source://gibbon//lib/gibbon/gibbon_error.rb#1
module Gibbon; end

# source://gibbon//lib/gibbon/api_request.rb#2
class Gibbon::APIRequest
  # @return [APIRequest] a new instance of APIRequest
  #
  # source://gibbon//lib/gibbon/api_request.rb#3
  def initialize(builder: T.unsafe(nil)); end

  # source://gibbon//lib/gibbon/api_request.rb#59
  def delete(params: T.unsafe(nil), headers: T.unsafe(nil)); end

  # source://gibbon//lib/gibbon/api_request.rb#46
  def get(params: T.unsafe(nil), headers: T.unsafe(nil)); end

  # source://gibbon//lib/gibbon/api_request.rb#20
  def patch(params: T.unsafe(nil), headers: T.unsafe(nil), body: T.unsafe(nil)); end

  # source://gibbon//lib/gibbon/api_request.rb#7
  def post(params: T.unsafe(nil), headers: T.unsafe(nil), body: T.unsafe(nil)); end

  # source://gibbon//lib/gibbon/api_request.rb#33
  def put(params: T.unsafe(nil), headers: T.unsafe(nil), body: T.unsafe(nil)); end

  protected

  # source://gibbon//lib/gibbon/api_request.rb#92
  def adapter; end

  # source://gibbon//lib/gibbon/api_request.rb#80
  def api_endpoint; end

  # Convenience accessors
  #
  # source://gibbon//lib/gibbon/api_request.rb#76
  def api_key; end

  # source://gibbon//lib/gibbon/api_request.rb#166
  def api_url; end

  # source://gibbon//lib/gibbon/api_request.rb#170
  def base_api_url; end

  # source://gibbon//lib/gibbon/api_request.rb#123
  def configure_request(request: T.unsafe(nil), params: T.unsafe(nil), headers: T.unsafe(nil), body: T.unsafe(nil)); end

  # source://gibbon//lib/gibbon/api_request.rb#175
  def get_data_center_from_api_key; end

  # Helpers
  #
  # source://gibbon//lib/gibbon/api_request.rb#98
  def handle_error(error); end

  # source://gibbon//lib/gibbon/api_request.rb#142
  def parse_response(response_body); end

  # source://gibbon//lib/gibbon/api_request.rb#88
  def proxy; end

  # source://gibbon//lib/gibbon/api_request.rb#133
  def rest_client; end

  # source://gibbon//lib/gibbon/api_request.rb#84
  def timeout; end

  # source://gibbon//lib/gibbon/api_request.rb#159
  def validate_api_key; end
end

# source://gibbon//lib/gibbon/gibbon_error.rb#2
class Gibbon::GibbonError < ::StandardError; end

# source://gibbon//lib/gibbon/mailchimp_error.rb#2
class Gibbon::MailChimpError < ::StandardError
  # @return [MailChimpError] a new instance of MailChimpError
  #
  # source://gibbon//lib/gibbon/mailchimp_error.rb#5
  def initialize(message = T.unsafe(nil), params = T.unsafe(nil)); end

  # Returns the value of attribute body.
  #
  # source://gibbon//lib/gibbon/mailchimp_error.rb#3
  def body; end

  # Returns the value of attribute detail.
  #
  # source://gibbon//lib/gibbon/mailchimp_error.rb#3
  def detail; end

  # Returns the value of attribute raw_body.
  #
  # source://gibbon//lib/gibbon/mailchimp_error.rb#3
  def raw_body; end

  # Returns the value of attribute status_code.
  #
  # source://gibbon//lib/gibbon/mailchimp_error.rb#3
  def status_code; end

  # Returns the value of attribute title.
  #
  # source://gibbon//lib/gibbon/mailchimp_error.rb#3
  def title; end

  # source://gibbon//lib/gibbon/mailchimp_error.rb#15
  def to_s; end

  private

  # source://gibbon//lib/gibbon/mailchimp_error.rb#21
  def instance_variables_to_s; end
end

# source://gibbon//lib/gibbon/request.rb#2
class Gibbon::Request
  # @return [Request] a new instance of Request
  #
  # source://gibbon//lib/gibbon/request.rb#7
  def initialize(api_key: T.unsafe(nil), api_endpoint: T.unsafe(nil), timeout: T.unsafe(nil), proxy: T.unsafe(nil), faraday_adapter: T.unsafe(nil)); end

  # Returns the value of attribute api_endpoint.
  #
  # source://gibbon//lib/gibbon/request.rb#3
  def api_endpoint; end

  # Sets the attribute api_endpoint
  #
  # @param value the value to set the attribute api_endpoint to.
  #
  # source://gibbon//lib/gibbon/request.rb#3
  def api_endpoint=(_arg0); end

  # Returns the value of attribute api_key.
  #
  # source://gibbon//lib/gibbon/request.rb#3
  def api_key; end

  # Sets the attribute api_key
  #
  # @param value the value to set the attribute api_key to.
  #
  # source://gibbon//lib/gibbon/request.rb#3
  def api_key=(_arg0); end

  # source://gibbon//lib/gibbon/request.rb#37
  def create(params: T.unsafe(nil), headers: T.unsafe(nil), body: T.unsafe(nil)); end

  # source://gibbon//lib/gibbon/request.rb#61
  def delete(params: T.unsafe(nil), headers: T.unsafe(nil)); end

  # Returns the value of attribute faraday_adapter.
  #
  # source://gibbon//lib/gibbon/request.rb#3
  def faraday_adapter; end

  # Sets the attribute faraday_adapter
  #
  # @param value the value to set the attribute faraday_adapter to.
  #
  # source://gibbon//lib/gibbon/request.rb#3
  def faraday_adapter=(_arg0); end

  # source://gibbon//lib/gibbon/request.rb#17
  def method_missing(method, *args); end

  # source://gibbon//lib/gibbon/request.rb#33
  def path; end

  # Returns the value of attribute proxy.
  #
  # source://gibbon//lib/gibbon/request.rb#3
  def proxy; end

  # Sets the attribute proxy
  #
  # @param value the value to set the attribute proxy to.
  #
  # source://gibbon//lib/gibbon/request.rb#3
  def proxy=(_arg0); end

  # source://gibbon//lib/gibbon/request.rb#55
  def retrieve(params: T.unsafe(nil), headers: T.unsafe(nil)); end

  # source://gibbon//lib/gibbon/request.rb#25
  def send(*args); end

  # Returns the value of attribute timeout.
  #
  # source://gibbon//lib/gibbon/request.rb#3
  def timeout; end

  # Sets the attribute timeout
  #
  # @param value the value to set the attribute timeout to.
  #
  # source://gibbon//lib/gibbon/request.rb#3
  def timeout=(_arg0); end

  # source://gibbon//lib/gibbon/request.rb#43
  def update(params: T.unsafe(nil), headers: T.unsafe(nil), body: T.unsafe(nil)); end

  # source://gibbon//lib/gibbon/request.rb#49
  def upsert(params: T.unsafe(nil), headers: T.unsafe(nil), body: T.unsafe(nil)); end

  protected

  # source://gibbon//lib/gibbon/request.rb#69
  def reset; end

  class << self
    # Returns the value of attribute api_endpoint.
    #
    # source://gibbon//lib/gibbon/request.rb#74
    def api_endpoint; end

    # Sets the attribute api_endpoint
    #
    # @param value the value to set the attribute api_endpoint to.
    #
    # source://gibbon//lib/gibbon/request.rb#74
    def api_endpoint=(_arg0); end

    # Returns the value of attribute api_key.
    #
    # source://gibbon//lib/gibbon/request.rb#74
    def api_key; end

    # Sets the attribute api_key
    #
    # @param value the value to set the attribute api_key to.
    #
    # source://gibbon//lib/gibbon/request.rb#74
    def api_key=(_arg0); end

    # source://gibbon//lib/gibbon/request.rb#76
    def method_missing(sym, *args, &block); end

    # Returns the value of attribute proxy.
    #
    # source://gibbon//lib/gibbon/request.rb#74
    def proxy; end

    # Sets the attribute proxy
    #
    # @param value the value to set the attribute proxy to.
    #
    # source://gibbon//lib/gibbon/request.rb#74
    def proxy=(_arg0); end

    # Returns the value of attribute timeout.
    #
    # source://gibbon//lib/gibbon/request.rb#74
    def timeout; end

    # Sets the attribute timeout
    #
    # @param value the value to set the attribute timeout to.
    #
    # source://gibbon//lib/gibbon/request.rb#74
    def timeout=(_arg0); end
  end
end

# source://gibbon//lib/gibbon/request.rb#5
Gibbon::Request::DEFAULT_TIMEOUT = T.let(T.unsafe(nil), Integer)
