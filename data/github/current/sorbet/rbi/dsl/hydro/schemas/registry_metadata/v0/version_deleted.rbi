# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::RegistryMetadata::V0::VersionDeleted`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::RegistryMetadata::V0::VersionDeleted`.

class Hydro::Schemas::RegistryMetadata::V0::VersionDeleted
  sig do
    params(
      actor_id: T.nilable(Integer),
      actor_type: T.nilable(T.any(Symbol, Integer)),
      deleted_at: T.nilable(Google::Protobuf::Timestamp),
      installation_id: T.nilable(Integer),
      oauth_application_id: T.nilable(Integer),
      owner_id: T.nilable(Integer),
      package: T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::Package),
      pkg_subtype: T.nilable(Google::Protobuf::StringValue),
      request_context: T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::RequestContext),
      storage_bytes: T.nilable(Integer),
      user_agent: T.nilable(String),
      version: T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::Version)
    ).void
  end
  def initialize(actor_id: nil, actor_type: nil, deleted_at: nil, installation_id: nil, oauth_application_id: nil, owner_id: nil, package: nil, pkg_subtype: nil, request_context: nil, storage_bytes: nil, user_agent: nil, version: nil); end

  sig { returns(Integer) }
  def actor_id; end

  sig { params(value: Integer).void }
  def actor_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def actor_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def actor_type=(value); end

  sig { void }
  def clear_actor_id; end

  sig { void }
  def clear_actor_type; end

  sig { void }
  def clear_deleted_at; end

  sig { void }
  def clear_installation_id; end

  sig { void }
  def clear_oauth_application_id; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_package; end

  sig { void }
  def clear_pkg_subtype; end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_storage_bytes; end

  sig { void }
  def clear_user_agent; end

  sig { void }
  def clear_version; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def deleted_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def deleted_at=(value); end

  sig { returns(Integer) }
  def installation_id; end

  sig { params(value: Integer).void }
  def installation_id=(value); end

  sig { returns(Integer) }
  def oauth_application_id; end

  sig { params(value: Integer).void }
  def oauth_application_id=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::Package)) }
  def package; end

  sig { params(value: T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::Package)).void }
  def package=(value); end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def pkg_subtype; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def pkg_subtype=(value); end

  sig { returns(T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(Integer) }
  def storage_bytes; end

  sig { params(value: Integer).void }
  def storage_bytes=(value); end

  sig { returns(String) }
  def user_agent; end

  sig { params(value: String).void }
  def user_agent=(value); end

  sig { returns(T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::Version)) }
  def version; end

  sig { params(value: T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::Version)).void }
  def version=(value); end
end
