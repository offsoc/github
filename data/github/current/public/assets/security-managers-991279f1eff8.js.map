{"version":3,"file":"security-managers-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/security-managers/components/team-list/SecurityManagerTeamList.tsx","ui/packages/security-managers/App.tsx","ui/packages/security-managers/components/assignment-dialog/AssignmentDialog.tsx","ui/packages/security-managers/routes/EnterpriseSecurityManagers.tsx","ui/packages/security-managers/security-managers.ts","ui/packages/verified-fetch/verified-fetch.ts","ui/packages/react-core/JsonRoute.tsx"],"sourcesContent":["import {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {GlobeIcon, KebabHorizontalIcon} from '@primer/octicons-react'\nimport {ActionList, ActionMenu, IconButton, Link, Pagination, Spinner} from '@primer/react'\nimport {Blankslate, Dialog} from '@primer/react/drafts'\nimport {useQuery} from '@tanstack/react-query'\nimport {useEffect, useState} from 'react'\nimport {useParams} from 'react-router-dom'\n\nexport type SecurityManagerTeam = {\n  name: string\n  slug: string\n  path: string\n}\n\nexport type SecurityManagerTeamsResponse = {\n  teams: SecurityManagerTeam[]\n  totalPages: number\n}\n\nexport interface SecurityManagerTeamListProps {\n  search: string\n  hideRemoveAction?: boolean\n}\n\nexport function SecurityManagerTeamList({search, hideRemoveAction = false}: SecurityManagerTeamListProps): JSX.Element {\n  const {business} = useParams()\n  const [securityManagerTeams, setSecurityManagerTeams] = useState<SecurityManagerTeam[]>([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [totalPages, setTotalPages] = useState(0)\n  const [showRemoveDialogForTeam, setShowRemoveDialogForTeam] = useState<SecurityManagerTeam | null>(null)\n\n  const {\n    isSuccess,\n    isFetching,\n    isError,\n    refetch: refetchSecurityManagerTeams,\n    data: securityManagerTeamsResponse,\n  } = useQuery<SecurityManagerTeamsResponse>({\n    queryKey: ['security-manager-teams', business, currentPage, search],\n    queryFn: async () => {\n      const url = new URL(`/enterprises/${business}/security-managers/teams`, window.location.origin)\n      const params = new URLSearchParams({\n        page: currentPage.toString(),\n        search,\n      })\n      url.search = params.toString()\n      const resp = await verifiedFetchJSON(url.toString())\n      if (!resp.ok) {\n        throw new Error('Failed to fetch security manager teams')\n      }\n      return resp.json()\n    },\n  })\n\n  useEffect(() => {\n    if (securityManagerTeamsResponse) {\n      const {teams, totalPages: total} = securityManagerTeamsResponse\n      setSecurityManagerTeams(teams)\n      setTotalPages(total)\n      if (currentPage > total) {\n        setCurrentPage(total)\n      }\n    }\n  }, [currentPage, securityManagerTeamsResponse])\n\n  const handleDelete = (slug: string) => {\n    return async (): Promise<void> => {\n      const url = new URL(`/enterprises/${business}/security-managers/${slug}`, window.location.origin)\n      const resp = await verifiedFetchJSON(url.toString(), {method: 'DELETE'})\n      setShowRemoveDialogForTeam(null)\n\n      if (resp.ok) {\n        refetchSecurityManagerTeams()\n      }\n    }\n  }\n\n  function TeamList(): JSX.Element {\n    const list = securityManagerTeams.map(team => (\n      <div\n        key={team.slug}\n        data-testid={`esm-team-${team.slug}`}\n        className=\"d-flex flex-items-center flex-justify-between border-bottom p-3\"\n      >\n        <div className=\"d-flex flex-items-center\">\n          <GlobeIcon size={24} className=\"border rounded-1 p-1\" />\n          <Link href={team.path} muted className=\"pl-2\">\n            {team.name}\n          </Link>\n        </div>\n        {!hideRemoveAction && (\n          <ActionMenu>\n            <ActionMenu.Anchor>\n              <IconButton\n                icon={KebabHorizontalIcon}\n                size=\"small\"\n                aria-label=\"Open column options\"\n                variant=\"invisible\"\n                data-testid={`column-options-${team.slug}`}\n              />\n            </ActionMenu.Anchor>\n            <ActionMenu.Overlay align=\"end\">\n              <ActionList>\n                <ActionList.Item\n                  variant=\"danger\"\n                  onSelect={() => setShowRemoveDialogForTeam(team)}\n                  data-testid={`remove-team-${team.slug}`}\n                >\n                  Remove\n                </ActionList.Item>\n              </ActionList>\n            </ActionMenu.Overlay>\n          </ActionMenu>\n        )}\n      </div>\n    ))\n\n    if (list.length === 0) {\n      return (\n        <Blankslate>\n          <Blankslate.Visual>\n            <GlobeIcon size={24} />\n          </Blankslate.Visual>\n          <Blankslate.Heading>No security manager teams found</Blankslate.Heading>\n        </Blankslate>\n      )\n    }\n\n    return (\n      <>\n        {list}\n        <Pagination currentPage={currentPage} pageCount={totalPages} onPageChange={(_, page) => setCurrentPage(page)} />\n      </>\n    )\n  }\n\n  return (\n    <>\n      <div className=\"border rounded-2\">\n        {isFetching && (\n          <div className=\"d-flex flex-items-center flex-justify-center flex-auto p-3\">\n            <Spinner srText=\"Fetching Security manager teams\" />\n          </div>\n        )}\n        {isError && (\n          <div className=\"d-flex flex-items-center flex-justify-center flex-auto p-3\">\n            Error loading security manager teams, please try again.\n          </div>\n        )}\n        {isSuccess && <TeamList />}\n      </div>\n      {showRemoveDialogForTeam != null && (\n        <Dialog\n          onClose={() => setShowRemoveDialogForTeam(null)}\n          title=\"Remove security manager\"\n          footerButtons={[\n            {content: 'Cancel', onClick: (): void => setShowRemoveDialogForTeam(null)},\n            {\n              content: 'Remove security manager team permission',\n              onClick: handleDelete(showRemoveDialogForTeam.slug),\n              buttonType: 'danger' as const,\n            },\n          ]}\n        >\n          <div className=\"p-2\">\n            <p className=\"mx-2\">\n              This action will remove team members from all organizations within your enterprise unless they were\n              already members of those organizations. Existing organization members will retain their membership.\n            </p>\n            <p className=\"mx-2\">This change will notify the owners of each of these organizations.</p>\n            <p className=\"mx-2\">Please note that this change may take some time to propagate to all organizations.</p>\n            <p className=\"mx-2\">Are you sure you want to proceed?</p>\n          </div>\n        </Dialog>\n      )}\n    </>\n  )\n}\n\ntry{ SecurityManagerTeamList.displayName ||= 'SecurityManagerTeamList' } catch {}\ntry{ TeamList.displayName ||= 'TeamList' } catch {}","import {QueryClient, QueryClientProvider} from '@tanstack/react-query'\nimport type React from 'react'\n\n/**\n * The App component is used to render content which should be present on _all_ routes within this app\n */\nexport function App(props: {children?: React.ReactNode}): JSX.Element {\n  return <QueryClientProvider client={new QueryClient()}>{props.children}</QueryClientProvider>\n}\n\ntry{ App.displayName ||= 'App' } catch {}","import {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {SearchIcon} from '@primer/octicons-react'\nimport {Box, Button} from '@primer/react'\nimport {Blankslate, Dialog} from '@primer/react/drafts'\nimport {Banner, FilteredActionList} from '@primer/react/experimental'\nimport {useMutation, useQuery, useQueryClient} from '@tanstack/react-query'\nimport {useCallback, useEffect, useRef, useState} from 'react'\nimport {useParams} from 'react-router-dom'\n\ninterface EnterpriseTeam {\n  name: string\n  slug: string\n}\n\nexport function AssignmentDialog(): JSX.Element {\n  const [isOpen, setIsOpen] = useState(false)\n  const [activePanel, setPanel] = useState<1 | 2>(1)\n  const [search, setSearch] = useState('')\n  const [filteredTeams, setFilteredTeams] = useState<EnterpriseTeam[]>([])\n  const [selectedTeams, setSelectedTeams] = useState<EnterpriseTeam[]>([])\n  const [errorText, setErrorText] = useState('')\n\n  const {business} = useParams()\n  const {\n    isLoading,\n    isLoadingError,\n    data: teams,\n  } = useQuery<EnterpriseTeam[]>({\n    queryKey: ['assignment-suggestions', business],\n    queryFn: async () => {\n      const url = new URL(`/enterprises/${business}/security-managers/assignment-suggestions`, window.location.origin)\n      const resp = await verifiedFetchJSON(`${url.pathname}${url.search}`)\n\n      if (!resp.ok) {\n        throw new Error('Failed to load teams')\n      }\n\n      return resp.json()\n    },\n    enabled: isOpen, // Fetch the data when the dialog is opened\n  })\n  useEffect(() => {\n    if (isLoadingError) {\n      setErrorText(\n        'Failed to load teams. Please refresh the page and try again. If the issue persists, contact GitHub support.',\n      )\n    }\n  }, [isLoadingError])\n\n  useEffect(() => {\n    if (isLoadingError) {\n      return\n    }\n\n    if (search) {\n      setFilteredTeams((teams ?? []).filter(team => team.name.toLowerCase().includes(search)))\n    } else {\n      setFilteredTeams(teams ?? [])\n    }\n  }, [search, teams, isLoadingError])\n\n  const assignSecurityManagersMutation = useMutation({\n    mutationFn: async (teamsToAssign: EnterpriseTeam[]) => {\n      const url = new URL(`/enterprises/${business}/security-managers`, window.location.origin)\n\n      return Promise.allSettled(\n        teamsToAssign.map(team => {\n          const body = {teamSlugs: [team.slug]}\n          return verifiedFetchJSON(url.pathname, {method: 'POST', body})\n        }),\n      )\n    },\n  })\n\n  const onCancel = useCallback(() => {\n    setSearch('')\n    setFilteredTeams(teams ?? [])\n    setSelectedTeams([])\n    setPanel(1)\n    setIsOpen(false)\n    assignSecurityManagersMutation.reset()\n  }, [teams, assignSecurityManagersMutation])\n\n  const onSelect = useCallback(\n    (team: EnterpriseTeam) => {\n      if (selectedTeams.some(st => st.slug === team.slug)) {\n        setSelectedTeams(selectedTeams.filter(st => st.slug !== team.slug))\n      } else {\n        setSelectedTeams(selectedTeams.concat(team))\n      }\n    },\n    [selectedTeams],\n  )\n\n  const queryClient = useQueryClient()\n  const onSubmit = useCallback(async () => {\n    setErrorText('')\n    assignSecurityManagersMutation.mutate(selectedTeams, {\n      onSettled: () => queryClient.invalidateQueries({queryKey: ['assignment-suggestions', business]}),\n      onSuccess: results => {\n        // Remove teams that were successfully assigned the security manager role\n        setSelectedTeams(\n          selectedTeams.filter(\n            (_, i) => results[i] == null || results[i].status !== 'fulfilled' || !results[i].value.ok,\n          ),\n        )\n\n        if (results.every(result => result.status === 'fulfilled' && result.value.ok)) {\n          onCancel()\n          window.location.reload()\n        } else if (results.some(result => result.status === 'fulfilled' && result.value.ok)) {\n          setErrorText(\n            'Some teams could not be assigned the security manager role. Please try again. If the issue persists, contact GitHub support.',\n          )\n        } else {\n          setErrorText(\n            'Failed to assign the security manager role. Please try again. If the issue persists, contact GitHub support.',\n          )\n        }\n      },\n    })\n  }, [selectedTeams, assignSecurityManagersMutation, queryClient, business, onCancel])\n  const submitting = assignSecurityManagersMutation.isPending\n\n  const footerButtons =\n    activePanel === 1\n      ? [\n          {content: 'Cancel', onClick: onCancel},\n          {\n            content: 'Next',\n            onClick: (): boolean | void => {\n              if (selectedTeams.length > 0) {\n                setPanel(2)\n              } else {\n                setErrorText('Please select at least one team to assign to the security manager role.')\n              }\n            },\n            buttonType: 'primary' as const,\n            disabled: isLoading,\n          },\n        ]\n      : [\n          {content: 'Back', disabled: submitting, onClick: (): void => setPanel(1)},\n          {\n            content: 'Yes, assign the role',\n            onClick: onSubmit,\n            buttonType: 'primary' as const,\n            loading: submitting,\n            loadingAnnouncement: 'Saving',\n          },\n        ]\n\n  // Clear the error when the panel changes or the dialog is opened/closed\n  useEffect(() => setErrorText(''), [activePanel, isOpen])\n\n  // Focus error banner header when it appears\n  const bannerRef = useRef<HTMLElement>(null)\n  useEffect(() => {\n    errorText && bannerRef.current?.querySelector('h2')?.focus()\n  }, [errorText])\n\n  return (\n    <>\n      <Button\n        variant=\"primary\"\n        onClick={() => setIsOpen(true)}\n        aria-haspopup=\"dialog\"\n        data-testid=\"assignment-dialog-button\"\n      >\n        Assign new team\n      </Button>\n\n      {isOpen && (\n        <Dialog\n          title=\"Assign security manager role\"\n          onClose={onCancel}\n          height={activePanel === 1 ? 'small' : 'auto'}\n          width=\"large\"\n          renderBody={({children}) => {\n            // Setting the height to the space allotted by the dialog to make scrolling work properly for FilteredActionList.\n            return <Dialog.Body sx={{height: '100%', p: 0}}>{children}</Dialog.Body>\n          }}\n          footerButtons={footerButtons}\n        >\n          <Box\n            className=\"d-flex flex-column\"\n            sx={\n              // Adapted from https://github.com/primer/react/blob/41b75deba71d1cd741c6296e919d2a85d7e7f3fe/packages/react/src/SelectPanel/SelectPanel.tsx#L226-L228\n              // to make scrolling work properly.\n              {maxHeight: '100%'}\n            }\n          >\n            {errorText && (\n              <Banner variant=\"critical\" className=\"m-2\" ref={bannerRef}>\n                <Banner.Title as=\"h2\" tabIndex={-1}>\n                  Something went wrong\n                </Banner.Title>\n                {errorText}\n              </Banner>\n            )}\n            {activePanel === 1 && (\n              <>\n                <FilteredActionList\n                  placeholderText=\"Search for teams\"\n                  aria-label=\"Select teams\"\n                  selectionVariant=\"multiple\"\n                  aria-multiselectable\n                  onFilterChange={setSearch}\n                  loading={isLoading}\n                  items={filteredTeams.map(team => ({\n                    id: team.slug,\n                    text: team.name,\n                    selected: selectedTeams.some(st => st.slug === team.slug),\n                    onAction: () => onSelect(team),\n                    role: 'option',\n                  }))}\n                  textInputProps={\n                    // Copied from https://github.com/primer/react/blob/41b75deba71d1cd741c6296e919d2a85d7e7f3fe/packages/react/src/SelectPanel/SelectPanel.tsx#L167-L175\n                    // to make the search input look like the one in SelectPanel.\n                    {\n                      sx: {m: 2},\n                      contrast: true,\n                      leadingVisual: SearchIcon,\n                    }\n                  }\n                />\n\n                {!isLoading && filteredTeams.length === 0 && (\n                  <Blankslate spacious>\n                    <Blankslate.Heading>No teams found</Blankslate.Heading>\n                    <Blankslate.Description>\n                      {search\n                        ? 'No teams found for the search term.'\n                        : 'Create a team to assign the security manager role.'}\n                    </Blankslate.Description>\n                  </Blankslate>\n                )}\n              </>\n            )}\n\n            {activePanel === 2 && (\n              <div className=\"p-2\">\n                <p className=\"text-bold mx-2\">\n                  We will add the team members to all organizations within your enterprise.\n                </p>\n                <p className=\"mx-2\">This change will notify the owners of each of these organizations.</p>\n                <p className=\"mx-2\">\n                  Please note that this change may take some time to propagate to all organizations.\n                </p>\n                <p className=\"mx-2\">Are you sure you want to proceed?</p>\n              </div>\n            )}\n          </Box>\n        </Dialog>\n      )}\n    </>\n  )\n}\n\ntry{ AssignmentDialog.displayName ||= 'AssignmentDialog' } catch {}","import {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {SearchIcon} from '@primer/octicons-react'\nimport {Box, Heading, Pagehead, PageLayout, Text, TextInput} from '@primer/react'\nimport {useState} from 'react'\n\nimport {AssignmentDialog} from '../components/assignment-dialog/AssignmentDialog'\nimport {SecurityManagerTeamList} from '../components/team-list/SecurityManagerTeamList'\n\nexport interface EnterpriseSecurityManagersPayload {\n  readonly: boolean\n  canRemoveTeams: boolean\n}\n\nexport function EnterpriseSecurityManagers(): JSX.Element {\n  const payload = useRoutePayload<EnterpriseSecurityManagersPayload>()\n  const [search, setSearch] = useState<string>('')\n\n  const searchAndAddView = (\n    <Box sx={{mb: 3, display: 'flex', justifyContent: 'space-between'}}>\n      <TextInput\n        data-testid=\"search-input\"\n        leadingVisual={SearchIcon}\n        aria-label=\"Find a team search bar\"\n        name=\"search\"\n        value={search}\n        onChange={e => setSearch(e.target.value)}\n        placeholder=\"Find a team...\"\n        sx={{width: '30%', bg: 'canvas.subtle'}}\n      />\n      {!payload.readonly && <AssignmentDialog />}\n    </Box>\n  )\n\n  return (\n    <PageLayout sx={{padding: 'none'}}>\n      <PageLayout.Header sx={{marginBottom: 3}}>\n        <Pagehead className=\"pt-0 pb-2 mb-0\">\n          <Heading as=\"h2\" data-testid=\"page-heading\" className=\"f2\" sx={{fontWeight: 'normal'}}>\n            Security managers\n          </Heading>\n        </Pagehead>\n      </PageLayout.Header>\n      <PageLayout.Content as=\"div\">\n        <div className=\"mb-3\">\n          <Text\n            sx={{\n              color: 'fg.muted',\n              lineHeight: '20px',\n              fontSize: '14px',\n            }}\n          >\n            Grant a team permission to manage security alerts and settings across your organizations. The teams will\n            also be granted read access to all repositories.{' '}\n            {/* TODO: Uncomment this when the link is available\n                <Link href=\"\" inline>\n                  Learn more about these security privileges.\n                </Link>\n              */}\n          </Text>\n        </div>\n\n        {searchAndAddView}\n\n        <SecurityManagerTeamList search={search} hideRemoveAction={payload.readonly || !payload.canRemoveTeams} />\n      </PageLayout.Content>\n    </PageLayout>\n  )\n}\n\ntry{ EnterpriseSecurityManagers.displayName ||= 'EnterpriseSecurityManagers' } catch {}","import {jsonRoute} from '@github-ui/react-core/json-route'\nimport {registerReactAppFactory} from '@github-ui/react-core/register-app'\n\nimport {App} from './App'\nimport {EnterpriseSecurityManagers} from './routes/EnterpriseSecurityManagers'\n\nregisterReactAppFactory('security-managers', () => ({\n  App,\n  routes: [jsonRoute({path: '/enterprises/:business/security-managers', Component: EnterpriseSecurityManagers})],\n}))\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  assertRelativePathOrSameOrigin(path)\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\nfunction assertRelativePathOrSameOrigin(path: string) {\n  if (process.env.NODE_ENV === 'test' && !window.location.origin) return\n  const url = new URL(path, window.location.origin)\n  if (url.origin !== window.location.origin) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetch(path, {...init, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetchJSON(path, {...init, headers})\n}\n","import type {ChildRoute, LoaderResult, RouteRegistration, TransitionType} from './app-routing-types'\nimport type React from 'react'\nimport type {Location} from '@remix-run/router'\n\nexport interface JsonRouteProps {\n  path: string\n  Component: React.ComponentType\n  transitionType?: TransitionType\n  shouldNavigateOnError?: boolean\n  children?: ChildRoute[]\n}\n/**\n * A utility for building a route registration for a route that consumes a JSON object (either via embedding in a\n * script tag or via a JSON fetch on React soft navigations).\n */\nexport function jsonRoute<TRouteData, TEmbeddedData>({\n  path,\n  Component,\n  /**\n   * Some routes want to handle their own errors and not just show a generic error page. In this case,\n   * the error is just handled like any other payload for the route.\n   * NOTE: We might consider replacing the shouldNavigateOnError flag with a parallel implementation to jsonRoute.\n   */\n  shouldNavigateOnError,\n  transitionType,\n  children,\n}: JsonRouteProps): RouteRegistration<TRouteData, TEmbeddedData> {\n  async function coreLoader({location}: {location: Location}): Promise<LoaderResult<TRouteData>> {\n    let response: Response\n    try {\n      const fetchPath = `${location.pathname}${location.search}`\n      response = await window.fetch(fetchPath, {\n        headers: {\n          Accept: 'application/json',\n          'X-Requested-With': 'XMLHttpRequest',\n          'X-GitHub-Target': 'dotcom',\n          'X-React-Router': 'json',\n        },\n      })\n    } catch (error) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'fetchError'},\n      }\n    }\n    if (response.redirected) {\n      return {\n        type: 'redirect',\n        url: response.url,\n      }\n    } else if (!response.ok) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'httpError', httpStatus: response.status},\n      }\n    } else {\n      try {\n        const responseJson = await response.json()\n        return {\n          type: 'loaded',\n          data: responseJson,\n          title: responseJson.title,\n        }\n      } catch (error) {\n        return {\n          type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n          error: {type: 'badResponseError'},\n        }\n      }\n    }\n  }\n\n  function loadFromEmbeddedData({embeddedData}: {embeddedData: TEmbeddedData}): {data: TRouteData; title: string} {\n    const data = embeddedData as unknown as TRouteData & {title: string}\n    return {data, title: data.title}\n  }\n\n  return {\n    path,\n    // TODO: consider wrapping Component with a component that passes payload as a prop — ideally as part of migrating\n    // away from useRoutePayload.\n    Component,\n    coreLoader,\n    loadFromEmbeddedData,\n    transitionType,\n    children,\n  }\n}\n"],"names":["TeamList","App","props","QueryClientProvider","client","QueryClient","children","displayName","AssignmentDialog","isOpen","setIsOpen","useState","activePanel","setPanel","search","setSearch","filteredTeams","setFilteredTeams","selectedTeams","setSelectedTeams","errorText","setErrorText","business","useParams","isLoading","isLoadingError","data","teams","useQuery","queryKey","queryFn","url","URL","window","location","origin","resp","verifiedFetchJSON","pathname","ok","json","enabled","useEffect","filter","team","name","toLowerCase","includes","assignSecurityManagersMutation","useMutation","mutationFn","teamsToAssign","Promise","allSettled","map","body","teamSlugs","slug","method","onCancel","useCallback","reset","onSelect","some","st","concat","queryClient","useQueryClient","onSubmit","mutate","onSettled","invalidateQueries","onSuccess","results","_","i","status","value","every","result","reload","submitting","isPending","footerButtons","content","onClick","length","buttonType","disabled","loading","loadingAnnouncement","bannerRef","useRef","current","querySelector","focus","Button","variant","aria-haspopup","data-testid","Dialog","title","onClose","height","width","renderBody","Body","sx","p","Box","className","maxHeight","Banner","ref","Title","as","tabIndex","FilteredActionList","placeholderText","aria-label","selectionVariant","aria-multiselectable","onFilterChange","items","id","text","selected","onAction","role","textInputProps","m","contrast","leadingVisual","SearchIcon","Blankslate","spacious","Heading","Description","div","SecurityManagerTeamList","hideRemoveAction","securityManagerTeams","setSecurityManagerTeams","currentPage","setCurrentPage","totalPages","setTotalPages","showRemoveDialogForTeam","setShowRemoveDialogForTeam","isSuccess","isFetching","isError","refetch","refetchSecurityManagerTeams","securityManagerTeamsResponse","params","URLSearchParams","page","toString","total","Spinner","srText","list","GlobeIcon","size","Link","href","path","muted","ActionMenu","Anchor","IconButton","icon","KebabHorizontalIcon","Overlay","align","ActionList","Item","Visual","Pagination","pageCount","onPageChange","EnterpriseSecurityManagers","payload","useRoutePayload","searchAndAddView","mb","display","justifyContent","TextInput","onChange","e","target","placeholder","bg","readonly","PageLayout","padding","Header","marginBottom","Pagehead","fontWeight","Content","Text","color","lineHeight","fontSize","canRemoveTeams","registerReactAppFactory","routes","jsonRoute","Component","verifiedFetch","init","assertRelativePathOrSameOrigin","headers","fetch","Accept","JSON","stringify","undefined","reactFetch","reactFetchJSON","shouldNavigateOnError","transitionType","coreLoader","response","fetchPath","error","type","redirected","httpStatus","responseJson","loadFromEmbeddedData","embeddedData"],"sourceRoot":""}