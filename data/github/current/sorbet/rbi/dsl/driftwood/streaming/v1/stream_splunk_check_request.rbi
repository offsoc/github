# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Driftwood::Streaming::V1::StreamSplunkCheckRequest`.
# Please instead update this file by running `bin/tapioca dsl Driftwood::Streaming::V1::StreamSplunkCheckRequest`.

class Driftwood::Streaming::V1::StreamSplunkCheckRequest
  sig do
    params(
      domain: T.nilable(String),
      encrypted_token: T.nilable(String),
      key_id: T.nilable(String),
      port: T.nilable(Integer),
      ssl_verify: T.nilable(T::Boolean),
      subject_id: T.nilable(Integer),
      subject_type: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(domain: nil, encrypted_token: nil, key_id: nil, port: nil, ssl_verify: nil, subject_id: nil, subject_type: nil); end

  sig { void }
  def clear_domain; end

  sig { void }
  def clear_encrypted_token; end

  sig { void }
  def clear_key_id; end

  sig { void }
  def clear_port; end

  sig { void }
  def clear_ssl_verify; end

  sig { void }
  def clear_subject_id; end

  sig { void }
  def clear_subject_type; end

  sig { returns(String) }
  def domain; end

  sig { params(value: String).void }
  def domain=(value); end

  sig { returns(String) }
  def encrypted_token; end

  sig { params(value: String).void }
  def encrypted_token=(value); end

  sig { returns(String) }
  def key_id; end

  sig { params(value: String).void }
  def key_id=(value); end

  sig { returns(Integer) }
  def port; end

  sig { params(value: Integer).void }
  def port=(value); end

  sig { returns(T::Boolean) }
  def ssl_verify; end

  sig { params(value: T::Boolean).void }
  def ssl_verify=(value); end

  sig { returns(Integer) }
  def subject_id; end

  sig { params(value: Integer).void }
  def subject_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def subject_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def subject_type=(value); end
end
