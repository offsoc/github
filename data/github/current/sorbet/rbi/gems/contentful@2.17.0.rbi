# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `contentful` gem.
# Please instead update this file by running `bin/tapioca gem contentful`.

# Contentful Namespace
#
# source://contentful//lib/contentful/version.rb#2
module Contentful; end

# 403
#
# source://contentful//lib/contentful/error.rb#102
class Contentful::AccessDenied < ::Contentful::Error
  protected

  # source://contentful//lib/contentful/error.rb#105
  def default_error_message; end

  # source://contentful//lib/contentful/error.rb#109
  def handle_details(details); end
end

# Resource Class for Arrays (e.g. search results)
#
# @note It also provides an #each method and includes Ruby's Enumerable module (gives you methods like #min, #first, etc)
# @see _ https://www.contentful.com/developers/documentation/content-delivery-api/#arrays
#
# source://contentful//lib/contentful/array.rb#9
class Contentful::Array < ::Contentful::BaseResource
  include ::Prelude::Enumerator
  include ::Enumerable
  include ::Contentful::ArrayLike

  # @return [Array] a new instance of Array
  #
  # source://contentful//lib/contentful/array.rb#17
  def initialize(item = T.unsafe(nil), configuration = T.unsafe(nil), endpoint = T.unsafe(nil), query = T.unsafe(nil), *_arg4); end

  # Returns the value of attribute endpoint.
  #
  # source://contentful//lib/contentful/array.rb#15
  def endpoint; end

  # @private
  #
  # source://contentful//lib/contentful/array.rb#60
  def inspect; end

  # Returns the value of attribute items.
  #
  # source://contentful//lib/contentful/array.rb#15
  def items; end

  # Returns the value of attribute limit.
  #
  # source://contentful//lib/contentful/array.rb#15
  def limit; end

  # @private
  #
  # source://contentful//lib/contentful/array.rb#35
  def marshal_dump; end

  # @private
  #
  # source://contentful//lib/contentful/array.rb#40
  def marshal_load(raw_object); end

  # Simplifies pagination
  #
  # @return [Contentful::Array, false]
  #
  # source://contentful//lib/contentful/array.rb#67
  def next_page(client = T.unsafe(nil)); end

  # Returns the value of attribute query.
  #
  # source://contentful//lib/contentful/array.rb#15
  def query; end

  # Returns the value of attribute skip.
  #
  # source://contentful//lib/contentful/array.rb#15
  def skip; end

  # Returns the value of attribute total.
  #
  # source://contentful//lib/contentful/array.rb#15
  def total; end
end

# @private
#
# source://contentful//lib/contentful/array.rb#11
Contentful::Array::DEFAULT_LIMIT = T.let(T.unsafe(nil), Integer)

# Coercion for Array Types
#
# source://contentful//lib/contentful/coercions.rb#93
class Contentful::ArrayCoercion < ::Contentful::BaseCoercion
  # Coerces value for each element
  #
  # source://contentful//lib/contentful/coercions.rb#95
  def coerce(*_arg0); end
end

# Useful methods for array-like resources that can be included if an
# :items property exists
#
# source://contentful//lib/contentful/array_like.rb#6
module Contentful::ArrayLike
  include ::Prelude::Enumerator
  include ::Enumerable
  include ::ActiveSupport::ToJsonWithActiveSupportEncoder

  # Delegates to items#[]
  #
  # @return [Contentful::Entry, Contentful::Asset]
  #
  # source://contentful//lib/contentful/array_like.rb#42
  def [](*args); end

  # Returns true for array-like resources
  #
  # @return [true]
  #
  # source://contentful//lib/contentful/array_like.rb#12
  def array?; end

  # Delegates to items#each
  #
  # @yield [Contentful::Entry, Contentful::Asset]
  #
  # source://contentful//lib/contentful/array_like.rb#19
  def each(&block); end

  # Delegates to items#each
  #
  # @yield [Contentful::Entry, Contentful::Asset]
  #
  # source://contentful//lib/contentful/array_like.rb#19
  def each_item(&block); end

  # Delegates to items#empty?
  #
  # @return [Boolean]
  #
  # source://contentful//lib/contentful/array_like.rb#27
  def empty?; end

  # Delegates to items#last
  #
  # @return [Contentful::Entry, Contentful::Asset]
  #
  # source://contentful//lib/contentful/array_like.rb#49
  def last; end

  # Delegetes to items#size
  #
  # @return [Number]
  #
  # source://contentful//lib/contentful/array_like.rb#34
  def length; end

  # Delegetes to items#size
  #
  # @return [Number]
  #
  # source://contentful//lib/contentful/array_like.rb#34
  def size; end

  # Delegates to items#to_ary
  #
  # @return [Contentful::Entry, Contentful::Asset]
  #
  # source://contentful//lib/contentful/array_like.rb#56
  def to_ary; end
end

# Resource class for Asset.
# https://www.contentful.com/developers/documentation/content-delivery-api/#assets
#
# source://contentful//lib/contentful/asset.rb#8
class Contentful::Asset < ::Contentful::FieldsResource
  include ::Contentful::ResourceReferences

  # @return [Asset] a new instance of Asset
  #
  # source://contentful//lib/contentful/asset.rb#33
  def initialize(*_arg0); end

  # Generates a URL for the Contentful Image API
  #
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash]
  # @return [String] Image API URL
  # @see _ https://www.contentful.com/developers/documentation/content-delivery-api/#image-asset-resizing
  #
  # source://contentful//lib/contentful/asset.rb#53
  def image_url(options = T.unsafe(nil)); end

  # @private
  #
  # source://contentful//lib/contentful/asset.rb#29
  def inspect; end

  # @private
  # @return [Boolean]
  #
  # source://contentful//lib/contentful/asset.rb#24
  def known_link?(*_arg0); end

  # @private
  #
  # source://contentful//lib/contentful/asset.rb#12
  def marshal_dump; end

  # @private
  #
  # source://contentful//lib/contentful/asset.rb#17
  def marshal_load(raw_object); end

  # Generates a URL for the Contentful Image API
  #
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param options [Hash]
  # @return [String] Image API URL
  # @see _ https://www.contentful.com/developers/documentation/content-delivery-api/#image-asset-resizing
  #
  # source://contentful//lib/contentful/asset.rb#53
  def url(options = T.unsafe(nil)); end

  private

  # source://contentful//lib/contentful/asset.rb#67
  def build_query(options); end

  # source://contentful//lib/contentful/asset.rb#81
  def create_files!; end

  # source://contentful//lib/contentful/asset.rb#95
  def define_asset_methods!; end
end

# 502
#
# source://contentful//lib/contentful/error.rb#176
class Contentful::BadGateway < ::Contentful::Error
  protected

  # source://contentful//lib/contentful/error.rb#179
  def default_error_message; end
end

# 400
#
# source://contentful//lib/contentful/error.rb#72
class Contentful::BadRequest < ::Contentful::Error
  protected

  # source://contentful//lib/contentful/error.rb#75
  def default_error_message; end

  # source://contentful//lib/contentful/error.rb#79
  def handle_details(details); end
end

# Basic Coercion
#
# source://contentful//lib/contentful/coercions.rb#6
class Contentful::BaseCoercion
  # @return [BaseCoercion] a new instance of BaseCoercion
  #
  # source://contentful//lib/contentful/coercions.rb#8
  def initialize(value, options = T.unsafe(nil)); end

  # Coerces value
  #
  # source://contentful//lib/contentful/coercions.rb#14
  def coerce(*_arg0); end

  # Returns the value of attribute options.
  #
  # source://contentful//lib/contentful/coercions.rb#7
  def options; end

  # Returns the value of attribute value.
  #
  # source://contentful//lib/contentful/coercions.rb#7
  def value; end
end

# Base definition of a Contentful Resource containing Sys properties
#
# source://contentful//lib/contentful/base_resource.rb#7
class Contentful::BaseResource
  # @return [BaseResource] a new instance of BaseResource
  #
  # source://contentful//lib/contentful/base_resource.rb#11
  def initialize(item, configuration = T.unsafe(nil), _localized = T.unsafe(nil), _includes = T.unsafe(nil), entries = T.unsafe(nil), depth = T.unsafe(nil), _errors = T.unsafe(nil)); end

  # Definition of equality
  #
  # source://contentful//lib/contentful/base_resource.rb#29
  def ==(other); end

  # Returns the value of attribute _metadata.
  #
  # source://contentful//lib/contentful/base_resource.rb#8
  def _metadata; end

  # Returns the value of attribute default_locale.
  #
  # source://contentful//lib/contentful/base_resource.rb#8
  def default_locale; end

  # @private
  #
  # source://contentful//lib/contentful/base_resource.rb#24
  def inspect; end

  # @private
  #
  # source://contentful//lib/contentful/base_resource.rb#34
  def marshal_dump; end

  # @private
  #
  # source://contentful//lib/contentful/base_resource.rb#47
  def marshal_load(raw_object); end

  # Returns the value of attribute raw.
  #
  # source://contentful//lib/contentful/base_resource.rb#8
  def raw; end

  # Issues the request that was made to fetch this response again.
  # Only works for Entry, Asset, ContentType and Space
  #
  # source://contentful//lib/contentful/base_resource.rb#68
  def reload(client = T.unsafe(nil)); end

  # Returns the value of attribute sys.
  #
  # source://contentful//lib/contentful/base_resource.rb#8
  def sys; end

  protected

  # source://contentful//lib/contentful/base_resource.rb#117
  def build_link(item); end

  # source://contentful//lib/contentful/base_resource.rb#113
  def internal_resource_locale; end

  # source://contentful//lib/contentful/base_resource.rb#109
  def repr_name; end

  private

  # source://contentful//lib/contentful/base_resource.rb#76
  def define_sys_methods!; end

  # source://contentful//lib/contentful/base_resource.rb#98
  def hydrate_metadata; end

  # source://contentful//lib/contentful/base_resource.rb#85
  def hydrate_sys; end
end

# source://contentful//lib/contentful/base_resource.rb#82
Contentful::BaseResource::LINKS = T.let(T.unsafe(nil), Array)

# source://contentful//lib/contentful/base_resource.rb#83
Contentful::BaseResource::TIMESTAMPS = T.let(T.unsafe(nil), Array)

# Coercion for Boolean Types
#
# source://contentful//lib/contentful/coercions.rb#50
class Contentful::BooleanCoercion < ::Contentful::BaseCoercion
  # Coerces value to Boolean
  #
  # source://contentful//lib/contentful/coercions.rb#52
  def coerce(*_arg0); end
end

# The client object is initialized with a space and a key and then used
# for querying resources from this space.
# See README for details
#
# source://contentful//lib/contentful/client.rb#15
class Contentful::Client
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @option given_configuration
  # @param given_configuration [Hash]
  # @return [Client] a new instance of Client
  # @see _ https://github.com/contentful/contentful.rb#client-configuration-options
  #
  # source://contentful//lib/contentful/client.rb#95
  def initialize(given_configuration = T.unsafe(nil)); end

  # Returns the X-Contentful-User-Agent app data
  #
  # @private
  #
  # source://contentful//lib/contentful/client.rb#246
  def app_info; end

  # Gets a specific asset
  #
  # @param id [String]
  # @param query [Hash]
  # @return [Contentful::Asset]
  #
  # source://contentful//lib/contentful/client.rb#195
  def asset(id, query = T.unsafe(nil)); end

  # Gets a collection of assets
  #
  # @param query [Hash]
  # @return [Contentful::Array<Contentful::Asset>]
  #
  # source://contentful//lib/contentful/client.rb#204
  def assets(query = T.unsafe(nil)); end

  # Returns the base url for all of the client's requests
  #
  # @private
  #
  # source://contentful//lib/contentful/client.rb#220
  def base_url; end

  # Returns the value of attribute configuration.
  #
  # source://contentful//lib/contentful/client.rb#50
  def configuration; end

  # Gets a specific content type
  #
  # @param id [String]
  # @param query [Hash]
  # @return [Contentful::ContentType]
  #
  # source://contentful//lib/contentful/client.rb#150
  def content_type(id, query = T.unsafe(nil)); end

  # Gets a collection of content types
  #
  # @param query [Hash]
  # @return [Contentful::Array<Contentful::ContentType>]
  #
  # source://contentful//lib/contentful/client.rb#159
  def content_types(query = T.unsafe(nil)); end

  # Returns the X-Contentful-User-Agent
  #
  # @private
  #
  # source://contentful//lib/contentful/client.rb#275
  def contentful_user_agent; end

  # Returns the default configuration
  #
  # @private
  #
  # source://contentful//lib/contentful/client.rb#131
  def default_configuration; end

  # Runs Resource Builder
  #
  # @private
  #
  # source://contentful//lib/contentful/client.rb#382
  def do_build_resource(response); end

  # Gets a collection of entries
  #
  # @param query [Hash]
  # @return [Contentful::Array<Contentful::Entry>]
  #
  # source://contentful//lib/contentful/client.rb#184
  def entries(query = T.unsafe(nil)); end

  # Gets a specific entry
  #
  # @param id [String]
  # @param query [Hash]
  # @return [Contentful::Entry]
  #
  # source://contentful//lib/contentful/client.rb#169
  def entry(id, query = T.unsafe(nil)); end

  # Returns the url aware of the currently selected environment
  #
  # @private
  #
  # source://contentful//lib/contentful/client.rb#226
  def environment_url(path); end

  # @private
  #
  # source://contentful//lib/contentful/client.rb#354
  def fail_response(response); end

  # Returns the formatted part of the X-Contentful-User-Agent header
  #
  # @private
  #
  # source://contentful//lib/contentful/client.rb#232
  def format_user_agent_header(key, values); end

  # Get a Contentful::Request object
  # Set second parameter to false to deactivate Resource building and
  # return Response objects instead
  #
  # @private
  #
  # source://contentful//lib/contentful/client.rb#316
  def get(request, build_resource = T.unsafe(nil)); end

  # Returns the X-Contentful-User-Agent integration data
  #
  # @private
  #
  # source://contentful//lib/contentful/client.rb#252
  def integration_info; end

  # Gets a collection of locales for the current environment
  #
  # @param query [Hash]
  # @return [Contentful::Array<Contentful::Locale>]
  #
  # source://contentful//lib/contentful/client.rb#214
  def locales(query = T.unsafe(nil)); end

  # Returns the value of attribute logger.
  #
  # source://contentful//lib/contentful/client.rb#50
  def logger; end

  # Returns the X-Contentful-User-Agent os data
  #
  # @private
  #
  # source://contentful//lib/contentful/client.rb#264
  def os_info; end

  # Returns the X-Contentful-User-Agent platform data
  #
  # @private
  #
  # source://contentful//lib/contentful/client.rb#258
  def platform_info; end

  # Returns the value of attribute proxy.
  #
  # source://contentful//lib/contentful/client.rb#50
  def proxy; end

  # @private
  #
  # source://contentful//lib/contentful/client.rb#111
  def proxy_params; end

  # Use this method to manually register a dynamic entry
  # See examples/dynamic_entries.rb
  #
  # @private
  #
  # source://contentful//lib/contentful/client.rb#407
  def register_dynamic_entry(key, klass); end

  # Returns the headers used for the HTTP requests
  #
  # @private
  #
  # source://contentful//lib/contentful/client.rb#294
  def request_headers; end

  # Patches a query hash with the client configurations for queries
  #
  # @private
  #
  # source://contentful//lib/contentful/client.rb#304
  def request_query(query); end

  # @private
  #
  # source://contentful//lib/contentful/client.rb#346
  def retry_message(retries_left, reset_time); end

  # Runs request and parses Response
  #
  # @private
  #
  # source://contentful//lib/contentful/client.rb#366
  def run_request(request); end

  # Returns the X-Contentful-User-Agent sdk data
  #
  # @private
  #
  # source://contentful//lib/contentful/client.rb#240
  def sdk_info; end

  # @private
  #
  # source://contentful//lib/contentful/client.rb#105
  def setup_logger; end

  # @private
  #
  # source://contentful//lib/contentful/client.rb#360
  def should_retry(retries_left, reset_time, max_wait); end

  # Gets the client's space
  #
  # @param query [Hash]
  # @return [Contentful::Space]
  #
  # source://contentful//lib/contentful/client.rb#140
  def space(query = T.unsafe(nil)); end

  # Create a new synchronisation object
  #
  # @note You will need to call #each_page or #first_page on it
  # @param options [Hash, String] Options or Sync URL
  # @return [Contentful::Sync]
  #
  # source://contentful//lib/contentful/client.rb#418
  def sync(options = T.unsafe(nil)); end

  # @private
  #
  # source://contentful//lib/contentful/client.rb#121
  def timeout_params; end

  # Use this method together with the client's :dynamic_entries configuration.
  # See README for details.
  #
  # @private
  #
  # source://contentful//lib/contentful/client.rb#397
  def update_dynamic_entry_cache!; end

  private

  # source://contentful//lib/contentful/client.rb#436
  def normalize_configuration!; end

  # If the query contains the :select operator, we enforce :sys properties.
  # The SDK requires sys.type to function properly, but as other of our SDKs
  # require more parts of the :sys properties, we decided that every SDK should
  # include the complete :sys block to provide consistency accross our SDKs.
  #
  # source://contentful//lib/contentful/client.rb#428
  def normalize_select!(query); end

  # source://contentful//lib/contentful/client.rb#441
  def validate_configuration!; end

  class << self
    # Wraps the actual HTTP request via proxy
    #
    # @private
    #
    # source://contentful//lib/contentful/client.rb#54
    def get_http(url, query, headers = T.unsafe(nil), proxy = T.unsafe(nil), timeout = T.unsafe(nil)); end
  end
end

# Default configuration for Contentful::Client
#
# source://contentful//lib/contentful/client.rb#17
Contentful::Client::DEFAULT_CONFIGURATION = T.let(T.unsafe(nil), Hash)

# Resource Class for Content Types
# https://www.contentful.com/developers/documentation/content-delivery-api/#content-types
#
# source://contentful//lib/contentful/content_type.rb#8
class Contentful::ContentType < ::Contentful::BaseResource
  # @return [ContentType] a new instance of ContentType
  #
  # source://contentful//lib/contentful/content_type.rb#11
  def initialize(item, *_arg1); end

  # Returns the value of attribute description.
  #
  # source://contentful//lib/contentful/content_type.rb#9
  def description; end

  # Returns the value of attribute display_field.
  #
  # source://contentful//lib/contentful/content_type.rb#9
  def displayField; end

  # Returns the value of attribute display_field.
  #
  # source://contentful//lib/contentful/content_type.rb#9
  def display_field; end

  # Field definition for field
  #
  # source://contentful//lib/contentful/content_type.rb#21
  def field_for(field_id); end

  # Returns the value of attribute fields.
  #
  # source://contentful//lib/contentful/content_type.rb#9
  def fields; end

  # Returns the value of attribute name.
  #
  # source://contentful//lib/contentful/content_type.rb#9
  def name; end

  protected

  # source://contentful//lib/contentful/content_type.rb#29
  def repr_name; end
end

# Cache for Content Types
#
# source://contentful//lib/contentful/content_type_cache.rb#3
class Contentful::ContentTypeCache
  class << self
    # Returns the value of attribute cache.
    #
    # source://contentful//lib/contentful/content_type_cache.rb#7
    def cache; end

    # Gets a Content Type from the Cache
    #
    # source://contentful//lib/contentful/content_type_cache.rb#16
    def cache_get(space_id, content_type_id); end

    # Sets a Content Type in the Cache
    #
    # source://contentful//lib/contentful/content_type_cache.rb#21
    def cache_set(space_id, content_type_id, klass); end

    # Clears the Content Type Cache
    #
    # source://contentful//lib/contentful/content_type_cache.rb#11
    def clear!; end
  end
end

# Coercion for Date Types
#
# source://contentful//lib/contentful/coercions.rb#60
class Contentful::DateCoercion < ::Contentful::BaseCoercion
  # Coerces value to DateTime
  #
  # source://contentful//lib/contentful/coercions.rb#62
  def coerce(*_arg0); end
end

# Resource class for deleted entries
# https://www.contentful.com/developers/documentation/content-delivery-api/http/#sync-item-types
#
# source://contentful//lib/contentful/deleted_asset.rb#6
class Contentful::DeletedAsset < ::Contentful::BaseResource; end

# Resource class for deleted entries
# https://www.contentful.com/developers/documentation/content-delivery-api/http/#sync-item-types
#
# source://contentful//lib/contentful/deleted_entry.rb#6
class Contentful::DeletedEntry < ::Contentful::BaseResource; end

# Raised when an undefined field is requested
#
# source://contentful//lib/contentful/error.rb#206
class Contentful::EmptyFieldError < ::StandardError
  # @return [EmptyFieldError] a new instance of EmptyFieldError
  #
  # source://contentful//lib/contentful/error.rb#207
  def initialize(name); end
end

# Resource class for Entry.
#
# @see _ https://www.contentful.com/developers/documentation/content-delivery-api/#entries
#
# source://contentful//lib/contentful/entry.rb#10
class Contentful::Entry < ::Contentful::FieldsResource
  include ::Contentful::ResourceReferences

  # Returns true for resources that are entries
  #
  # @return [Boolean]
  #
  # source://contentful//lib/contentful/entry.rb#14
  def entry?; end

  protected

  # @return [Boolean]
  #
  # source://contentful//lib/contentful/entry.rb#107
  def content_type_field?(name); end

  # source://contentful//lib/contentful/entry.rb#120
  def empty_field_error(name); end

  # source://contentful//lib/contentful/entry.rb#125
  def repr_name; end

  private

  # Maximum include depth is 10 in the API, but we raise it to 20 (by default),
  # in case one of the included items has a reference in an upper level,
  # so we can keep the include chain for that object as well
  # Any included object after the maximum include resolution depth will be just a Link
  #
  # source://contentful//lib/contentful/entry.rb#60
  def build_nested_resource(value, includes, entries, errors); end

  # source://contentful//lib/contentful/entry.rb#20
  def coerce(field_id, value, includes, errors, entries = T.unsafe(nil)); end

  # source://contentful//lib/contentful/entry.rb#46
  def coerce_link_array(value, includes, errors, entries); end

  # @return [Boolean]
  #
  # source://contentful//lib/contentful/entry.rb#91
  def known_contentful_object?(object); end

  # @return [Boolean]
  #
  # source://contentful//lib/contentful/entry.rb#85
  def known_link?(name); end

  # source://contentful//lib/contentful/entry.rb#95
  def method_missing(name, *args, &block); end

  # source://contentful//lib/contentful/entry.rb#69
  def resolve_include(resource, includes, entries, errors); end

  # @return [Boolean]
  #
  # source://contentful//lib/contentful/entry.rb#101
  def respond_to_missing?(name, include_private = T.unsafe(nil)); end
end

# All errors raised by the contentful gem are either instances of Contentful::Error
# or inherit from Contentful::Error
#
# source://contentful//lib/contentful/error.rb#4
class Contentful::Error < ::StandardError
  # @return [Error] a new instance of Error
  #
  # source://contentful//lib/contentful/error.rb#7
  def initialize(response); end

  # Returns the value of attribute response.
  #
  # source://contentful//lib/contentful/error.rb#5
  def response; end

  protected

  # source://contentful//lib/contentful/error.rb#43
  def additional_info; end

  # @return [Boolean]
  #
  # source://contentful//lib/contentful/error.rb#39
  def additional_info?; end

  # source://contentful//lib/contentful/error.rb#47
  def best_available_message; end

  # source://contentful//lib/contentful/error.rb#31
  def default_error_message; end

  # source://contentful//lib/contentful/error.rb#35
  def handle_details(details); end

  class << self
    # Shortcut for creating specialized error classes
    # USAGE rescue Contentful::Error[404]
    #
    # source://contentful//lib/contentful/error.rb#14
    def [](error_status_code); end
  end
end

# A ContentType's field schema
# See https://www.contentful.com/developers/documentation/content-management-api/#resources-content-types-fields
#
# source://contentful//lib/contentful/field.rb#7
class Contentful::Field
  # @return [Field] a new instance of Field
  #
  # source://contentful//lib/contentful/field.rb#26
  def initialize(json); end

  # Coerces value to proper type
  #
  # source://contentful//lib/contentful/field.rb#38
  def coerce(value, configuration); end

  # Returns the value of attribute id.
  #
  # source://contentful//lib/contentful/field.rb#24
  def id; end

  # Returns the value of attribute items.
  #
  # source://contentful//lib/contentful/field.rb#24
  def items; end

  # Returns the value of attribute link_type.
  #
  # source://contentful//lib/contentful/field.rb#24
  def link_type; end

  # Returns the value of attribute localized.
  #
  # source://contentful//lib/contentful/field.rb#24
  def localized; end

  # Returns the value of attribute name.
  #
  # source://contentful//lib/contentful/field.rb#24
  def name; end

  # Returns the value of attribute raw.
  #
  # source://contentful//lib/contentful/field.rb#24
  def raw; end

  # Returns the value of attribute required.
  #
  # source://contentful//lib/contentful/field.rb#24
  def required; end

  # Returns the value of attribute type.
  #
  # source://contentful//lib/contentful/field.rb#24
  def type; end
end

# Coercions from Contentful Types to Ruby native types
#
# source://contentful//lib/contentful/field.rb#9
Contentful::Field::KNOWN_TYPES = T.let(T.unsafe(nil), Hash)

# Base definition of a Contentful Resource containing Field properties
#
# source://contentful//lib/contentful/fields_resource.rb#9
class Contentful::FieldsResource < ::Contentful::BaseResource
  # @return [FieldsResource] a new instance of FieldsResource
  #
  # source://contentful//lib/contentful/fields_resource.rb#13
  def initialize(item, _configuration, localized = T.unsafe(nil), includes = T.unsafe(nil), entries = T.unsafe(nil), depth = T.unsafe(nil), errors = T.unsafe(nil)); end

  # Returns all fields of the asset
  #
  # @return [Hash] fields for Resource on selected locale
  #
  # source://contentful//lib/contentful/fields_resource.rb#25
  def fields(wanted_locale = T.unsafe(nil)); end

  # Returns all fields of the asset with locales nested by field
  #
  # @return [Hash] fields for Resource grouped by field name
  #
  # source://contentful//lib/contentful/fields_resource.rb#33
  def fields_with_locales; end

  # Provides a list of the available locales for a Resource
  #
  # source://contentful//lib/contentful/fields_resource.rb#46
  def locales; end

  # Returns the value of attribute localized.
  #
  # source://contentful//lib/contentful/fields_resource.rb#10
  def localized; end

  # @private
  #
  # source://contentful//lib/contentful/fields_resource.rb#51
  def marshal_dump; end

  # @private
  #
  # source://contentful//lib/contentful/fields_resource.rb#56
  def marshal_load(raw_object); end

  # @private
  #
  # source://contentful//lib/contentful/fields_resource.rb#68
  def raw_with_links; end

  protected

  # source://contentful//lib/contentful/fields_resource.rb#137
  def coerce(_field_id, value, _includes, _errors, _entries); end

  private

  # source://contentful//lib/contentful/fields_resource.rb#82
  def define_fields_methods!; end

  # source://contentful//lib/contentful/fields_resource.rb#125
  def hydrate_fields(includes, entries, errors); end

  # source://contentful//lib/contentful/fields_resource.rb#88
  def hydrate_localized_fields(includes, errors, entries); end

  # source://contentful//lib/contentful/fields_resource.rb#108
  def hydrate_nonlocalized_fields(includes, errors, entries); end
end

# An Assets's file info
#
# source://contentful//lib/contentful/file.rb#3
class Contentful::File
  # @return [File] a new instance of File
  #
  # source://contentful//lib/contentful/file.rb#4
  def initialize(json, configuration); end

  private

  # source://contentful//lib/contentful/file.rb#12
  def define_fields!(json); end
end

# Coercion for Float Types
#
# source://contentful//lib/contentful/coercions.rb#42
class Contentful::FloatCoercion < ::Contentful::BaseCoercion
  # Coerces value to Float
  #
  # source://contentful//lib/contentful/coercions.rb#44
  def coerce(*_arg0); end
end

# The includes hashes returned when include_level is specified
#
# source://contentful//lib/contentful/includes.rb#5
class Contentful::Includes
  include ::Prelude::Enumerator
  include ::Enumerable
  include ::Contentful::ArrayLike

  # @return [Includes] a new instance of Includes
  #
  # source://contentful//lib/contentful/includes.rb#10
  def initialize(items = T.unsafe(nil), lookup = T.unsafe(nil)); end

  # source://contentful//lib/contentful/includes.rb#42
  def +(other); end

  # If the lookups are the same then these two objects are effectively the same
  #
  # source://contentful//lib/contentful/includes.rb#38
  def ==(other); end

  # source://contentful//lib/contentful/includes.rb#52
  def dup; end

  # source://contentful//lib/contentful/includes.rb#29
  def find_link(link); end

  # Returns the value of attribute items.
  #
  # source://contentful//lib/contentful/includes.rb#8
  def items; end

  # Sets the attribute items
  #
  # @param value the value to set the attribute items to.
  #
  # source://contentful//lib/contentful/includes.rb#8
  def items=(_arg0); end

  # Returns the value of attribute lookup.
  #
  # source://contentful//lib/contentful/includes.rb#8
  def lookup; end

  # Sets the attribute lookup
  #
  # @param value the value to set the attribute lookup to.
  #
  # source://contentful//lib/contentful/includes.rb#8
  def lookup=(_arg0); end

  # source://contentful//lib/contentful/includes.rb#56
  def marshal_dump; end

  # source://contentful//lib/contentful/includes.rb#60
  def marshal_load(array); end

  private

  # source://contentful//lib/contentful/includes.rb#67
  def build_lookup; end

  class << self
    # source://contentful//lib/contentful/includes.rb#15
    def from_response(json, raw = T.unsafe(nil)); end
  end
end

# Coercion for Integer Types
#
# source://contentful//lib/contentful/coercions.rb#34
class Contentful::IntegerCoercion < ::Contentful::BaseCoercion
  # Coerces value to Integer
  #
  # source://contentful//lib/contentful/coercions.rb#36
  def coerce(*_arg0); end
end

# Resource Class for Links
# https://www.contentful.com/developers/documentation/content-delivery-api/#links
#
# source://contentful//lib/contentful/link.rb#6
class Contentful::Link < ::Contentful::BaseResource
  # Queries contentful for the Resource the Link is refering to
  # Takes an optional query hash
  #
  # source://contentful//lib/contentful/link.rb#9
  def resolve(client, query = T.unsafe(nil)); end
end

# Coercion for Link Types
# Nothing should be done here as include resolution is handled within
# entries due to depth handling (explained within Entry).
# Only present as a placeholder for proper resolution within ContentType.
#
# source://contentful//lib/contentful/coercions.rb#90
class Contentful::LinkCoercion < ::Contentful::BaseCoercion; end

# A Locale definition as included in Space
# Read more about Localization at https://www.contentful.com/developers/documentation/content-delivery-api/#i18n
#
# source://contentful//lib/contentful/locale.rb#6
class Contentful::Locale < ::Contentful::BaseResource
  # @return [Locale] a new instance of Locale
  #
  # source://contentful//lib/contentful/locale.rb#9
  def initialize(item, *_arg1); end

  # Returns the value of attribute code.
  #
  # source://contentful//lib/contentful/locale.rb#7
  def code; end

  # Returns the value of attribute default.
  #
  # source://contentful//lib/contentful/locale.rb#7
  def default; end

  # Returns the value of attribute fallback_code.
  #
  # source://contentful//lib/contentful/locale.rb#7
  def fallback_code; end

  # Returns the value of attribute name.
  #
  # source://contentful//lib/contentful/locale.rb#7
  def name; end
end

# Location Field Type
# You can directly query for them: https://www.contentful.com/developers/documentation/content-delivery-api/#search-filter-geo
#
# source://contentful//lib/contentful/location.rb#4
class Contentful::Location
  # @return [Location] a new instance of Location
  #
  # source://contentful//lib/contentful/location.rb#9
  def initialize(json); end

  # Returns the value of attribute lat.
  #
  # source://contentful//lib/contentful/location.rb#5
  def lat; end

  # Returns the value of attribute lat.
  #
  # source://contentful//lib/contentful/location.rb#5
  def latitude; end

  # Returns the value of attribute lon.
  #
  # source://contentful//lib/contentful/location.rb#5
  def lon; end

  # Returns the value of attribute lon.
  #
  # source://contentful//lib/contentful/location.rb#5
  def longitude; end
end

# Coercion for Location Types
#
# source://contentful//lib/contentful/coercions.rb#71
class Contentful::LocationCoercion < ::Contentful::BaseCoercion
  # Coerces value to Location
  #
  # source://contentful//lib/contentful/coercions.rb#73
  def coerce(*_arg0); end
end

# 404
#
# source://contentful//lib/contentful/error.rb#115
class Contentful::NotFound < ::Contentful::Error
  protected

  # source://contentful//lib/contentful/error.rb#118
  def default_error_message; end

  # source://contentful//lib/contentful/error.rb#122
  def handle_details(details); end
end

# Coercion for Object Types
#
# source://contentful//lib/contentful/coercions.rb#79
class Contentful::ObjectCoercion < ::Contentful::BaseCoercion
  # Coerces value to hash, symbolizing each key
  #
  # source://contentful//lib/contentful/coercions.rb#81
  def coerce(*_arg0); end
end

# 429
#
# source://contentful//lib/contentful/error.rb#136
class Contentful::RateLimitExceeded < ::Contentful::Error
  # Time until next available request, in seconds.
  #
  # source://contentful//lib/contentful/error.rb#147
  def reset_time; end

  # @return [Boolean]
  #
  # source://contentful//lib/contentful/error.rb#140
  def reset_time?; end

  protected

  # source://contentful//lib/contentful/error.rb#157
  def additional_info; end

  # @return [Boolean]
  #
  # source://contentful//lib/contentful/error.rb#153
  def additional_info?; end

  # source://contentful//lib/contentful/error.rb#161
  def default_error_message; end
end

# Rate Limit Reset Header Key
#
# source://contentful//lib/contentful/error.rb#138
Contentful::RateLimitExceeded::RATE_LIMIT_RESET_HEADER_KEY = T.let(T.unsafe(nil), String)

# This object represents a request that is to be made. It gets initialized by the client
# with domain specific logic. The client later uses the Request's #url and #query methods
# to execute the HTTP request.
#
# source://contentful//lib/contentful/request.rb#5
class Contentful::Request
  # @return [Request] a new instance of Request
  #
  # source://contentful//lib/contentful/request.rb#8
  def initialize(client, endpoint, query = T.unsafe(nil), id = T.unsafe(nil)); end

  # Returns true if endpoint is an absolute url
  #
  # @return [Boolean]
  #
  # source://contentful//lib/contentful/request.rb#39
  def absolute?; end

  # Returns the value of attribute client.
  #
  # source://contentful//lib/contentful/request.rb#6
  def client; end

  # Returns a new Request object with the same data
  #
  # source://contentful//lib/contentful/request.rb#44
  def copy; end

  # Returns the value of attribute endpoint.
  #
  # source://contentful//lib/contentful/request.rb#6
  def endpoint; end

  # Delegates the actual HTTP work to the client
  #
  # source://contentful//lib/contentful/request.rb#34
  def get; end

  # Returns the value of attribute id.
  #
  # source://contentful//lib/contentful/request.rb#6
  def id; end

  # Returns the value of attribute query.
  #
  # source://contentful//lib/contentful/request.rb#6
  def query; end

  # Returns the value of attribute type.
  #
  # source://contentful//lib/contentful/request.rb#6
  def type; end

  # Returns the final URL, relative to a contentful space
  #
  # source://contentful//lib/contentful/request.rb#29
  def url; end

  private

  # source://contentful//lib/contentful/request.rb#50
  def normalize_query(query); end
end

# Transforms a Contentful::Response into a Contentful::Resource or a Contentful::Error
# See example/resource_mapping.rb for advanced usage
#
# source://contentful//lib/contentful/resource_builder.rb#16
class Contentful::ResourceBuilder
  # @return [ResourceBuilder] a new instance of ResourceBuilder
  #
  # source://contentful//lib/contentful/resource_builder.rb#38
  def initialize(json, configuration = T.unsafe(nil), localized = T.unsafe(nil), depth = T.unsafe(nil), errors = T.unsafe(nil), query = T.unsafe(nil)); end

  # Returns the value of attribute default_locale.
  #
  # source://contentful//lib/contentful/resource_builder.rb#36
  def default_locale; end

  # Returns the value of attribute depth.
  #
  # source://contentful//lib/contentful/resource_builder.rb#36
  def depth; end

  # Returns the value of attribute endpoint.
  #
  # source://contentful//lib/contentful/resource_builder.rb#36
  def endpoint; end

  # Returns the value of attribute entry_mapping.
  #
  # source://contentful//lib/contentful/resource_builder.rb#36
  def entry_mapping; end

  # Returns the value of attribute json.
  #
  # source://contentful//lib/contentful/resource_builder.rb#36
  def json; end

  # Returns the value of attribute localized.
  #
  # source://contentful//lib/contentful/resource_builder.rb#36
  def localized; end

  # Returns the value of attribute query.
  #
  # source://contentful//lib/contentful/resource_builder.rb#36
  def query; end

  # Returns the value of attribute resource.
  #
  # source://contentful//lib/contentful/resource_builder.rb#36
  def resource; end

  # Returns the value of attribute resource_mapping.
  #
  # source://contentful//lib/contentful/resource_builder.rb#36
  def resource_mapping; end

  # Starts the parsing process.
  #
  # @return [Contentful::Resource, Contentful::Error]
  #
  # source://contentful//lib/contentful/resource_builder.rb#56
  def run; end

  private

  # @return [Boolean]
  #
  # source://contentful//lib/contentful/resource_builder.rb#151
  def array?; end

  # source://contentful//lib/contentful/resource_builder.rb#65
  def build_array; end

  # source://contentful//lib/contentful/resource_builder.rb#83
  def build_item(item, includes = T.unsafe(nil), errors = T.unsafe(nil)); end

  # source://contentful//lib/contentful/resource_builder.rb#77
  def build_single; end

  # The default entry mapping
  #
  # source://contentful//lib/contentful/resource_builder.rb#165
  def default_entry_mapping; end

  # The default mapping for #detect_resource_class
  #
  # source://contentful//lib/contentful/resource_builder.rb#160
  def default_resource_mapping; end

  # source://contentful//lib/contentful/resource_builder.rb#140
  def fetch_array_class; end

  # source://contentful//lib/contentful/resource_builder.rb#114
  def fetch_custom_resource_class(item); end

  # source://contentful//lib/contentful/resource_builder.rb#130
  def fetch_custom_resource_mapping(item, type, default_class); end

  # source://contentful//lib/contentful/resource_builder.rb#105
  def fetch_errors; end

  # source://contentful//lib/contentful/resource_builder.rb#101
  def fetch_includes; end

  # @return [Boolean]
  #
  # source://contentful//lib/contentful/resource_builder.rb#145
  def localized?; end

  # source://contentful//lib/contentful/resource_builder.rb#109
  def resource_class(item); end

  # @return [Boolean]
  #
  # source://contentful//lib/contentful/resource_builder.rb#155
  def sync?; end
end

# Buildable Resources
#
# source://contentful//lib/contentful/resource_builder.rb#34
Contentful::ResourceBuilder::BUILDABLES = T.let(T.unsafe(nil), Array)

# Default Entry Mapping
#
# @see _ README for more information on Entry Mapping
#
# source://contentful//lib/contentful/resource_builder.rb#32
Contentful::ResourceBuilder::DEFAULT_ENTRY_MAPPING = T.let(T.unsafe(nil), Hash)

# Default Resource Mapping
#
# @see _ README for more information on Resource Mapping
#
# source://contentful//lib/contentful/resource_builder.rb#19
Contentful::ResourceBuilder::DEFAULT_RESOURCE_MAPPING = T.let(T.unsafe(nil), Hash)

# Method to retrieve references (incoming links) for a given entry or asset
#
# source://contentful//lib/contentful/resource_references.rb#3
module Contentful::ResourceReferences
  # Gets a collection of entries which links to current entry
  #
  # @param client [Contentful::Client]
  # @param query [Hash]
  # @return [Contentful::Array<Contentful::Entry>, false]
  #
  # source://contentful//lib/contentful/resource_references.rb#10
  def incoming_references(client = T.unsafe(nil), query = T.unsafe(nil)); end
end

# An object representing an answer by the contentful service. It is later used
# to build a Resource, which is done by the ResourceBuilder.
#
# The Response parses the http response (as returned by the underlying http library) to
# a JSON object. Responses can be asked the following methods:
# - #raw (raw HTTP response by the HTTP library)
# - #object (the parsed JSON object)
# - #request (the request the response is refering to)
#
# It also sets a #status which can be one of:
# - :ok (seems to be a valid resource object)
# - :contentful_error (valid error object)
# - :not_contentful (valid json, but missing the contentful's sys property)
# - :unparsable_json (invalid json)
#
# Error Repsonses also contain a:
# - :error_message
#
# source://contentful//lib/contentful/response.rb#23
class Contentful::Response
  # @return [Response] a new instance of Response
  #
  # source://contentful//lib/contentful/response.rb#26
  def initialize(raw, request = T.unsafe(nil)); end

  # Returns the value of attribute error_message.
  #
  # source://contentful//lib/contentful/response.rb#24
  def error_message; end

  # Returns the JSON body of the response
  #
  # source://contentful//lib/contentful/response.rb#45
  def load_json; end

  # Returns the value of attribute object.
  #
  # source://contentful//lib/contentful/response.rb#24
  def object; end

  # Returns the value of attribute raw.
  #
  # source://contentful//lib/contentful/response.rb#24
  def raw; end

  # Returns the value of attribute request.
  #
  # source://contentful//lib/contentful/response.rb#24
  def request; end

  # Returns the value of attribute status.
  #
  # source://contentful//lib/contentful/response.rb#24
  def status; end

  private

  # @return [Boolean]
  #
  # source://contentful//lib/contentful/response.rb#51
  def error_object?; end

  # @return [Boolean]
  #
  # source://contentful//lib/contentful/response.rb#80
  def invalid_response?; end

  # @return [Boolean]
  #
  # source://contentful//lib/contentful/response.rb#84
  def no_content_response?; end

  # source://contentful//lib/contentful/response.rb#55
  def parse_contentful_error; end

  # source://contentful//lib/contentful/response.rb#75
  def parse_http_error; end

  # source://contentful//lib/contentful/response.rb#88
  def parse_json!; end

  # source://contentful//lib/contentful/response.rb#69
  def service_unavailable_error; end

  # @return [Boolean]
  #
  # source://contentful//lib/contentful/response.rb#65
  def service_unavailable_response?; end

  # source://contentful//lib/contentful/response.rb#96
  def unzip_response(response); end

  # @return [Boolean]
  #
  # source://contentful//lib/contentful/response.rb#61
  def valid_http_response?; end
end

# Coercion for RichText Types
#
# source://contentful//lib/contentful/coercions.rb#103
class Contentful::RichTextCoercion < ::Contentful::BaseCoercion
  # Resolves includes and removes unresolvable nodes
  #
  # source://contentful//lib/contentful/coercions.rb#105
  def coerce(configuration); end

  private

  # source://contentful//lib/contentful/coercions.rb#121
  def coerce_block(block, configuration); end

  # source://contentful//lib/contentful/coercions.rb#151
  def coerce_link(node, configuration); end

  # @return [Boolean]
  #
  # source://contentful//lib/contentful/coercions.rb#117
  def content_block?(node); end

  # @return [Boolean]
  #
  # source://contentful//lib/contentful/coercions.rb#111
  def link?(node); end
end

# 500
#
# source://contentful//lib/contentful/error.rb#167
class Contentful::ServerError < ::Contentful::Error
  protected

  # source://contentful//lib/contentful/error.rb#170
  def default_error_message; end
end

# 503
#
# source://contentful//lib/contentful/error.rb#185
class Contentful::ServiceUnavailable < ::Contentful::Error
  protected

  # source://contentful//lib/contentful/error.rb#188
  def default_error_message; end
end

# Resource class for Space.
# https://www.contentful.com/developers/documentation/content-delivery-api/#spaces
#
# source://contentful//lib/contentful/space.rb#7
class Contentful::Space < ::Contentful::BaseResource
  # @return [Space] a new instance of Space
  #
  # source://contentful//lib/contentful/space.rb#10
  def initialize(item, *_arg1); end

  # Returns the value of attribute locales.
  #
  # source://contentful//lib/contentful/space.rb#8
  def locales; end

  # Returns the value of attribute name.
  #
  # source://contentful//lib/contentful/space.rb#8
  def name; end

  # @private
  #
  # source://contentful//lib/contentful/space.rb#18
  def reload(client = T.unsafe(nil)); end
end

# Coercion for String Types
#
# source://contentful//lib/contentful/coercions.rb#20
class Contentful::StringCoercion < ::Contentful::BaseCoercion
  # Coerces value to String
  #
  # source://contentful//lib/contentful/coercions.rb#22
  def coerce(*_arg0); end
end

# Utility methods used by the contentful gem
#
# source://contentful//lib/contentful/support.rb#5
module Contentful::Support
  class << self
    # Checks if value is a link
    #
    # @param value
    # @return [true, false]
    #
    # source://contentful//lib/contentful/support.rb#35
    def link?(value); end

    # Checks if value is an array of links
    #
    # @param value
    # @return [true, false]
    #
    # source://contentful//lib/contentful/support.rb#45
    def link_array?(value); end

    # Transforms CamelCase into snake_case (taken from zucker)
    #
    # @param object [String] camelCaseName
    # @param skip [Boolean] if true, skips returns original object
    # @return [String] snake_case_name
    #
    # source://contentful//lib/contentful/support.rb#13
    def snakify(object, skip = T.unsafe(nil)); end

    # @return [Boolean]
    #
    # source://contentful//lib/contentful/support.rb#24
    def unresolvable?(value, errors); end
  end
end

# Coercion for Symbol Types
#
# source://contentful//lib/contentful/coercions.rb#31
class Contentful::SymbolCoercion < ::Contentful::StringCoercion; end

# Resource class for Sync.
#
# @see _ https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/synchronization
#
# source://contentful//lib/contentful/sync.rb#9
class Contentful::Sync
  # @return [Sync] a new instance of Sync
  #
  # source://contentful//lib/contentful/sync.rb#12
  def initialize(client, options_or_url); end

  # Returns false as long as last sync page has not been reached
  #
  # @return [Boolean]
  #
  # source://contentful//lib/contentful/sync.rb#43
  def completed?; end

  # Directly iterates over all resources that have changed
  #
  # @yield [Contentful::Entry, Contentful::Asset]
  #
  # source://contentful//lib/contentful/sync.rb#52
  def each_item(&block); end

  # Iterates over all pages of the current sync
  #
  # @note Please Keep in Mind: Iterating fires a new request for each page
  # @yield [Contentful::SyncPage]
  #
  # source://contentful//lib/contentful/sync.rb#23
  def each_page; end

  # Returns the first sync result page
  #
  # @return [Contentful::SyncPage]
  #
  # source://contentful//lib/contentful/sync.rb#36
  def first_page; end

  # @private
  #
  # source://contentful//lib/contentful/sync.rb#59
  def get(options_or_url); end

  # Returns the value of attribute next_sync_url.
  #
  # source://contentful//lib/contentful/sync.rb#10
  def next_sync_url; end

  private

  # source://contentful//lib/contentful/sync.rb#72
  def fetch_page(options_or_url); end

  # source://contentful//lib/contentful/sync.rb#77
  def link_page_to_sync!(page); end

  # source://contentful//lib/contentful/sync.rb#81
  def update_sync_state_from!(page); end
end

# Wrapper Class for Sync results
#
# source://contentful//lib/contentful/sync_page.rb#6
class Contentful::SyncPage < ::Contentful::BaseResource
  include ::Prelude::Enumerator
  include ::Enumerable
  include ::Contentful::ArrayLike

  # @return [SyncPage] a new instance of SyncPage
  #
  # source://contentful//lib/contentful/sync_page.rb#11
  def initialize(item, configuration = T.unsafe(nil), *_arg2); end

  # @private
  #
  # source://contentful//lib/contentful/sync_page.rb#23
  def inspect; end

  # Returns the value of attribute items.
  #
  # source://contentful//lib/contentful/sync_page.rb#9
  def items; end

  # Returns wether it is the last sync page
  #
  # @return [Boolean]
  #
  # source://contentful//lib/contentful/sync_page.rb#46
  def last_page?; end

  # Requests next sync page from API
  #
  # @return [Contentful::SyncPage, void]
  #
  # source://contentful//lib/contentful/sync_page.rb#30
  def next_page; end

  # Returns wether there is a next sync page
  #
  # @return [Boolean]
  #
  # source://contentful//lib/contentful/sync_page.rb#37
  def next_page?; end

  # Returns the value of attribute next_page_url.
  #
  # source://contentful//lib/contentful/sync_page.rb#9
  def next_page_url; end

  # Returns the value of attribute next_sync_url.
  #
  # source://contentful//lib/contentful/sync_page.rb#9
  def next_sync_url; end

  # Returns the value of attribute sync.
  #
  # source://contentful//lib/contentful/sync_page.rb#9
  def sync; end
end

# Coercion for Text Types
#
# source://contentful//lib/contentful/coercions.rb#28
class Contentful::TextCoercion < ::Contentful::StringCoercion; end

# 401
#
# source://contentful//lib/contentful/error.rb#93
class Contentful::Unauthorized < ::Contentful::Error
  protected

  # source://contentful//lib/contentful/error.rb#96
  def default_error_message; end
end

# Raised when response is no valid json
#
# source://contentful//lib/contentful/error.rb#194
class Contentful::UnparsableJson < ::Contentful::Error
  protected

  # source://contentful//lib/contentful/error.rb#197
  def default_error_message; end
end

# Raised when response is not parsable as a Contentful::Resource
#
# source://contentful//lib/contentful/error.rb#203
class Contentful::UnparsableResource < ::StandardError; end

# Gem Version
#
# source://contentful//lib/contentful/version.rb#4
Contentful::VERSION = T.let(T.unsafe(nil), String)
