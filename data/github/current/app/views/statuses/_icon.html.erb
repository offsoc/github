<%
  status = local_assigns[:status]
  sha = status.sha
  repo_name = status.repository.name
  owner_display_login = status.repository.owner_display_login
  state = status.state
  is_final_check_status = StatusCheckConfig::FINAL_STATES.include?(state)
  short_text = status.short_text
  dropdown_direction = local_assigns[:dropdown_direction] || "e"

  options = {}
  websocket_channel = GitHub::WebSocket::Channels.commit(status.repository, sha)

%>

<% if mobile? %>
  <div class="commit-build-statuses">
    <span class="<%= status_state_text_class(state) %>">
      <%= primer_octicon(icon_symbol_for_state(state), **options.merge(vertical_align: :middle, "aria-label": short_text)) %>
    </span>
  </div>
<% else %>
  <details class="commit-build-statuses details-overlay details-reset js-dropdown-details hx_dropdown-fullscreen js-socket-channel js-updatable-content"
    <%# data-channel and data-url used by js-updatable-content %>
    <% if !is_final_check_status %>
      data-channel="<%= live_update_view_channel(websocket_channel) %>"
      data-url="<%= local_assigns[:updatable_url] %>"
      data-batched="<%= 10.seconds.in_milliseconds %>"
    <% end %>
    <%# next url is to preload the pop-over content %>
    data-deferred-details-content-url="<%= checks_statuses_details_path(user_id: owner_display_login, repository: repo_name, ref: sha, popover: true) %>">
    <summary class="<%= status_state_text_class(state) %>">
      <%= primer_octicon(icon_symbol_for_state(state), **options.merge("aria-label": short_text)) %>
    </summary>
    <div <%=test_selector("statuses_dropdown") %> class="dropdown-menu status-checks-dropdown <%= dropdown_menu_class(dropdown_direction) %> overflow-hidden">
      <include-fragment class="m-4 d-flex flex-column flex-items-center">
        <%= render(Primer::Beta::Spinner.new) %>
        <div class="color-fg-muted no-wrap">Loading status checks&hellip;</div>
      </include-fragment>
    </div>
  </details>
<% end %>
