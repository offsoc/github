# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: turboscan/proto/results.proto

require 'google/protobuf'

require 'google/protobuf/timestamp_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("turboscan/proto/results.proto", :syntax => :proto3) do
    add_message "github.turboscan.Analysis" do
      optional :id, :uint64, 1
      optional :analysis_key, :string, 3
      optional :environment, :string, 5
      optional :errors, :string, 6
      optional :created_at, :message, 7, "google.protobuf.Timestamp"
      optional :commit_oid, :string, 8
      optional :sarif_id, :string, 9
      optional :results_count, :uint32, 10
      optional :rules_count, :uint32, 11
      optional :tool_description, :message, 12, "github.turboscan.ToolDescription"
      optional :most_recent, :bool, 13
      optional :process_warning, :string, 14
      optional :category, :string, 15
      optional :build_started_at, :message, 16, "google.protobuf.Timestamp"
      optional :upload_started_at, :message, 17, "google.protobuf.Timestamp"
      optional :workflow_run_id, :uint64, 21
      optional :status, :enum, 24, "github.turboscan.AnalysisStatus"
      optional :ref_name_bytes, :bytes, 25
      optional :delivery_origin, :enum, 26, "github.turboscan.DeliveryOrigin"
      optional :workflow_path, :bytes, 27
      optional :is_outdated, :bool, 28
      optional :deletable, :bool, 29
    end
    add_message "github.turboscan.AnalysesRequest" do
      optional :repository_id, :uint64, 1
      optional :tool, :string, 3
      optional :limit, :uint32, 4
      optional :numeric_page, :uint32, 5
      optional :sarif_id, :string, 6
      optional :tool_guid, :string, 7
      optional :sort_order, :enum, 8, "github.turboscan.AnalysesSortOrder"
      repeated :ref_names_bytes, :bytes, 9
    end
    add_message "github.turboscan.AnalysesResponse" do
      repeated :analyses, :message, 1, "github.turboscan.Analysis"
      optional :total_count, :uint64, 2
      optional :complete_analysis_exists, :bool, 3
    end
    add_message "github.turboscan.AnalysisRequest" do
      optional :repository_id, :uint64, 1
      optional :analysis_id, :uint64, 2
    end
    add_message "github.turboscan.AnalysisResponse" do
      optional :analysis, :message, 1, "github.turboscan.Analysis"
    end
    add_message "github.turboscan.AnalysisSarifRequest" do
      optional :repository_id, :uint64, 1
      optional :analysis_id, :uint64, 2
      optional :repo_html_url, :string, 3
      optional :alerts_api_url, :string, 4
    end
    add_message "github.turboscan.AnalysisSarifResponse" do
      optional :sarif, :string, 1
    end
    add_message "github.turboscan.AlertsRequest" do
      optional :repository_id, :uint64, 1
      optional :limit, :uint32, 5
      optional :numeric_page, :uint32, 6
      optional :resolved_only, :bool, 7
      optional :sort_order, :enum, 8, "github.turboscan.AlertSortOrder"
      repeated :rule_tags, :string, 10
      optional :state, :enum, 14, "github.turboscan.AlertStateFilter"
      optional :classification, :enum, 15, "github.turboscan.AlertClassificationFilter"
      optional :search_query, :string, 17
      repeated :excluded_rule_tags, :string, 19
      repeated :severities, :enum, 20, "github.turboscan.Severity"
      repeated :tools, :string, 21
      repeated :tool_guids, :string, 22
      repeated :excluded_rule_ids, :string, 23
      repeated :excluded_tools, :string, 24
      repeated :excluded_resolutions, :enum, 25, "github.turboscan.ResultResolutionFilter"
      repeated :excluded_severities, :enum, 26, "github.turboscan.Severity"
      repeated :rule_sarif_identifiers, :string, 27
      repeated :resolutions, :enum, 28, "github.turboscan.ResultResolutionFilter"
      repeated :ref_names_bytes, :bytes, 29
      repeated :file_paths, :string, 30
      repeated :language_file_paths, :string, 31
      optional :cursor, :message, 33, "github.turboscan.Cursor"
      repeated :numbers, :uint32, 34
    end
    add_message "github.turboscan.Cursor" do
      optional :value, :string, 1
      optional :descending, :bool, 2
    end
    add_message "github.turboscan.AlertsResponse" do
      repeated :results, :message, 1, "github.turboscan.Result"
      optional :open_count, :uint64, 4
      optional :resolved_count, :uint64, 5
      optional :analysis_exists, :bool, 6
      optional :total_count, :uint64, 8
      optional :search_status, :enum, 9, "github.turboscan.SearchStatus"
      optional :next_cursor, :string, 10
      optional :prev_cursor, :string, 11
    end
    add_message "github.turboscan.AlertRequest" do
      optional :repository_id, :uint64, 1
      optional :number, :uint32, 3
      repeated :ref_names_bytes, :bytes, 7
    end
    add_message "github.turboscan.AlertResponse" do
      optional :result, :message, 1, "github.turboscan.Result"
      repeated :related_locations, :message, 3, "github.turboscan.RelatedLocation"
      repeated :rule_tags, :string, 4
      optional :has_code_paths, :bool, 6
      optional :rule_help, :string, 7
      optional :query_uri, :string, 9
      optional :ref_name_bytes, :bytes, 11
    end
    add_message "github.turboscan.AlertTitlesRequest" do
      repeated :repository_ids, :uint64, 1
      repeated :alert_numbers, :uint32, 2
    end
    add_message "github.turboscan.AlertTitlesResponse" do
      repeated :repository_ids, :uint64, 1
      repeated :alert_numbers, :uint32, 2
      repeated :titles, :string, 3
    end
    add_message "github.turboscan.CountsRequest" do
      optional :repository_id, :uint64, 1
      optional :tool_name, :string, 3
      repeated :ref_names_bytes, :bytes, 4
    end
    add_message "github.turboscan.CountsResponse" do
      optional :open_count, :uint64, 1
      optional :analysis_exists, :bool, 2
      optional :latest_analysis, :message, 3, "google.protobuf.Timestamp"
    end
    add_message "github.turboscan.CountsByToolRequest" do
      optional :repository_id, :uint64, 1
      repeated :ref_names_bytes, :bytes, 3
    end
    add_message "github.turboscan.CountsByToolResponse" do
      repeated :tool_counts, :message, 2, "github.turboscan.ToolAlertCount"
    end
    add_message "github.turboscan.ToolAlertCount" do
      optional :tool_name, :string, 1
      optional :open_count, :uint64, 2
    end
    add_message "github.turboscan.CodePath" do
      repeated :steps, :message, 2, "github.turboscan.CodePathStep"
    end
    add_message "github.turboscan.CodePathStep" do
      optional :location, :message, 1, "github.turboscan.Location"
      optional :message, :string, 2
    end
    add_message "github.turboscan.Location" do
      optional :file_path, :string, 1
      optional :start_line, :uint32, 2
      optional :end_line, :uint32, 3
      optional :start_column, :uint32, 4
      optional :end_column, :uint32, 5
    end
    add_message "github.turboscan.AlertInstance" do
      optional :commit_oid, :string, 1
      optional :location, :message, 3, "github.turboscan.Location"
      optional :is_fixed, :bool, 4
      optional :has_file_classification, :bool, 5
      optional :analysis_key, :message, 6, "github.turboscan.AnalysisKey"
      repeated :classification, :string, 7
      optional :message_text, :string, 8
      optional :created_at, :message, 9, "google.protobuf.Timestamp"
      optional :ref_name_bytes, :bytes, 10
      optional :is_outdated, :bool, 11
    end
    add_message "github.turboscan.CodePathsRequest" do
      optional :repository_id, :uint64, 1
      optional :number, :uint32, 2
      repeated :ref_names_bytes, :bytes, 5
    end
    add_message "github.turboscan.CodePathsResponse" do
      optional :result, :message, 1, "github.turboscan.Result"
      repeated :code_paths, :message, 2, "github.turboscan.CodePath"
      repeated :related_locations, :message, 3, "github.turboscan.RelatedLocation"
      optional :ref_name_bytes, :bytes, 5
    end
    add_message "github.turboscan.RelatedLocation" do
      optional :id, :uint64, 1
      optional :created_at, :message, 2, "google.protobuf.Timestamp"
      optional :updated_at, :message, 3, "google.protobuf.Timestamp"
      optional :message, :string, 9
      optional :replacement_index, :uint32, 10
      optional :physical_alert_id, :uint64, 11
      optional :location, :message, 12, "github.turboscan.Location"
    end
    add_message "github.turboscan.Result" do
      optional :message_text, :string, 8
      optional :rule_severity, :enum, 9, "github.turboscan.RuleSeverity"
      optional :created_at, :message, 10, "google.protobuf.Timestamp"
      optional :resolution, :enum, 14, "github.turboscan.ResultResolution"
      optional :resolver_id, :uint32, 15
      optional :resolved_at, :message, 16, "google.protobuf.Timestamp"
      optional :number, :uint32, 17
      optional :tool, :message, 21, "github.turboscan.ToolDescription"
      optional :message_markdown, :string, 22
      optional :guid, :string, 25
      optional :security_severity, :enum, 27, "github.turboscan.SecuritySeverity"
      optional :most_recent_instance, :message, 28, "github.turboscan.AlertInstance"
      optional :is_fixed, :bool, 29
      optional :rule, :message, 30, "github.turboscan.Rule"
      optional :fixed_at, :message, 31, "google.protobuf.Timestamp"
      optional :updated_at, :message, 32, "google.protobuf.Timestamp"
      optional :resolution_note, :string, 33
    end
    add_message "github.turboscan.TimelineEvent" do
      optional :id, :uint64, 1
      optional :logical_alert_id, :uint64, 2
      optional :type, :enum, 3, "github.turboscan.TimelineEventType"
      optional :message, :string, 4
      optional :timestamp, :message, 5, "google.protobuf.Timestamp"
      optional :commit_oid, :string, 6
      optional :user_id, :uint32, 8
      optional :resolution, :enum, 9, "github.turboscan.ResultResolution"
      optional :file_path, :string, 10
      optional :start_line, :uint32, 11
      optional :tool_version, :string, 12
      repeated :environment, :message, 13, "github.turboscan.EnvironmentData"
      optional :workflow_run_id, :uint64, 14
      optional :category, :string, 15
      optional :resolution_note, :string, 16
      optional :ref_name_bytes, :bytes, 17
    end
    add_message "github.turboscan.EnvironmentData" do
      optional :key, :string, 1
      optional :value, :string, 2
    end
    add_message "github.turboscan.RuleTagsRequest" do
      optional :repository_id, :uint64, 1
      repeated :tools, :string, 3
    end
    add_message "github.turboscan.RuleTagsResponse" do
      repeated :rule_tags, :string, 1
    end
    add_message "github.turboscan.RulesRequest" do
      optional :repository_id, :uint64, 1
      repeated :tools, :string, 3
      optional :search_query, :string, 4
    end
    add_message "github.turboscan.RulesResponse" do
      repeated :rules, :message, 1, "github.turboscan.Rule"
    end
    add_message "github.turboscan.Rule" do
      optional :sarif_identifier, :string, 1
      optional :short_description, :string, 2
      repeated :tags, :string, 3
      optional :name, :string, 4
      optional :severity, :enum, 5, "github.turboscan.RuleSeverity"
      optional :full_description, :string, 6
      optional :help, :string, 7
      optional :query_uri, :string, 8
      optional :help_uri, :string, 9
    end
    add_message "github.turboscan.TimelineEventsRequest" do
      optional :repository_id, :uint64, 1
      optional :number, :uint32, 2
      repeated :ref_names_bytes, :bytes, 4
    end
    add_message "github.turboscan.TimelineEventsResponse" do
      repeated :events, :message, 1, "github.turboscan.TimelineEvent"
    end
    add_message "github.turboscan.PullRequestAlertsRequest" do
      optional :repository_id, :uint64, 1
      optional :tool, :string, 2
      optional :base_ref_bytes, :bytes, 3
      optional :head_commit_oid, :string, 4
      optional :merge_commit_oid, :string, 5
      repeated :file_changes, :message, 6, "github.turboscan.FileChange"
    end
    add_message "github.turboscan.PullRequestAlertsResponse" do
      repeated :new_alerts, :message, 1, "github.turboscan.DiffedAlert"
      optional :new_count, :uint64, 2
      optional :security_critical_count, :uint64, 3
      optional :security_high_count, :uint64, 4
      optional :security_medium_count, :uint64, 5
      optional :security_low_count, :uint64, 6
      optional :error_count, :uint64, 7
      optional :warning_count, :uint64, 8
      optional :note_count, :uint64, 9
      map :new_categories, :string, :message, 11, "github.turboscan.NewCategorySummary"
      map :missing_categories, :string, :message, 12, "github.turboscan.MissingCategorySummary"
      repeated :fixed_alerts, :message, 13, "github.turboscan.DiffedAlert"
      optional :fixed_count, :uint64, 14
      optional :latest_upload_time, :message, 15, "google.protobuf.Timestamp"
    end
    add_message "github.turboscan.PullRequestIntroducedAlertsRequest" do
      optional :repository_id, :uint64, 1
      optional :tool, :string, 2
      optional :base_ref_bytes, :bytes, 3
      optional :head_commit_oid, :string, 4
      optional :merge_commit_oid, :string, 5
      optional :pr_number, :uint32, 6
      repeated :file_changes, :message, 7, "github.turboscan.FileChange"
    end
    add_message "github.turboscan.PullRequestIntroducedAlertsResponse" do
      repeated :alerts, :message, 1, "github.turboscan.AlertInPullRequest"
      optional :total_count, :uint64, 2
    end
    add_message "github.turboscan.AlertInPullRequest" do
      optional :alert_number, :uint32, 1
      optional :analysis_id, :uint64, 2
      optional :created_at, :message, 3, "google.protobuf.Timestamp"
      optional :updated_at, :message, 4, "google.protobuf.Timestamp"
      optional :resolution, :enum, 6, "github.turboscan.ResultResolution"
      optional :severity, :enum, 7, "github.turboscan.SecuritySeverity"
      optional :ref_name_bytes, :bytes, 8
      optional :tool, :string, 9
      optional :rule_sarif_identifier, :string, 10
      optional :has_autofix, :bool, 11
      optional :autofix_accepted, :bool, 12
      optional :fixed, :bool, 13
      optional :fixed_at, :message, 14, "google.protobuf.Timestamp"
      optional :resolved_at, :message, 15, "google.protobuf.Timestamp"
    end
    add_message "github.turboscan.NewCategorySummary" do
      optional :alert_count, :uint64, 2
    end
    add_message "github.turboscan.MissingCategorySummary" do
      optional :delivery_origin, :enum, 1, "github.turboscan.DeliveryOrigin"
      optional :workflow_path, :bytes, 2
    end
    add_message "github.turboscan.FileChange" do
      optional :file_path, :string, 1
      repeated :changes, :message, 2, "github.turboscan.Change"
    end
    add_message "github.turboscan.Change" do
      optional :added, :bool, 1
      optional :start_line, :uint32, 2
      optional :end_line, :uint32, 3
    end
    add_message "github.turboscan.DiffedAlert" do
      optional :number, :uint32, 1
      optional :rule_severity, :enum, 2, "github.turboscan.RuleSeverity"
      optional :message_text, :string, 3
      optional :rule_short_description, :string, 4
      optional :location, :message, 5, "github.turboscan.Location"
      optional :message_markdown, :string, 7
      optional :security_severity, :enum, 8, "github.turboscan.SecuritySeverity"
      optional :rule_sarif_identifier, :string, 9
    end
    add_message "github.turboscan.AnalysisKey" do
      optional :id, :uint64, 1
      optional :analysis_key, :string, 2
      optional :tool, :string, 3
      optional :environment, :string, 4
      optional :category, :string, 5
      optional :commit_oid, :string, 6
    end
    add_message "github.turboscan.FilesExtractedSummaryRequest" do
      optional :repository_id, :uint64, 1
      optional :ref, :bytes, 2
      optional :tool, :string, 3
    end
    add_message "github.turboscan.FilesExtractedSummaryResponse" do
      optional :total_extracted, :message, 1, "github.turboscan.ToolStatusExtracted"
      map :languages_extracted, :string, :message, 2, "github.turboscan.ToolStatusExtracted"
    end
    add_message "github.turboscan.FilesExtractedRequest" do
      optional :repository_id, :uint64, 1
      optional :ref, :bytes, 2
      optional :tool, :string, 3
      repeated :analysis_ids, :uint64, 4
    end
    add_message "github.turboscan.FilesExtractedResponse" do
      map :categories, :string, :message, 1, "github.turboscan.ExtractedCategoryFiles"
    end
    add_message "github.turboscan.ExtractedCategoryFiles" do
      map :languages, :string, :message, 1, "github.turboscan.ExtractedLanguageFiles"
    end
    add_message "github.turboscan.ExtractedLanguageFiles" do
      repeated :files, :message, 1, "github.turboscan.ExtractedFile"
    end
    add_message "github.turboscan.ExtractedFile" do
      optional :path, :bytes, 1
      optional :success, :bool, 2
      optional :message, :bytes, 3
    end
    add_message "github.turboscan.ToolStatusRulesRequest" do
      optional :repository_id, :uint64, 1
      optional :ref, :bytes, 2
      optional :tool, :string, 3
      repeated :analysis_ids, :uint64, 4
    end
    add_message "github.turboscan.ToolStatusRulesResponse" do
      map :categories, :string, :message, 1, "github.turboscan.ToolStatusRulesResponse.CategoryRules"
    end
    add_message "github.turboscan.ToolStatusRulesResponse.CategoryRules" do
      repeated :origins, :message, 1, "github.turboscan.ToolStatusRulesResponse.CategoryRules.RuleOrigins"
    end
    add_message "github.turboscan.ToolStatusRulesResponse.CategoryRules.Rule" do
      optional :sarif_identifier, :string, 1
      optional :results, :uint64, 2
    end
    add_message "github.turboscan.ToolStatusRulesResponse.CategoryRules.RuleOrigins" do
      optional :origin, :message, 1, "github.turboscan.RuleOrigin"
      repeated :rules, :message, 2, "github.turboscan.ToolStatusRulesResponse.CategoryRules.Rule"
    end
    add_message "github.turboscan.ToolStatusRequest" do
      optional :repository_id, :uint64, 1
      optional :ref, :bytes, 2
    end
    add_message "github.turboscan.ToolStatusResponse" do
      repeated :tools, :message, 1, "github.turboscan.ToolStatus"
    end
    add_message "github.turboscan.AnalysisMessage" do
      optional :title, :string, 1
      optional :message, :string, 2
      optional :level, :enum, 3, "github.turboscan.AnalysisMessageLevel"
      optional :key, :string, 4
      repeated :locations, :message, 5, "github.turboscan.Location"
      repeated :help_links, :string, 6
      optional :has_analysis, :bool, 7
    end
    add_message "github.turboscan.ToolStatus" do
      optional :name, :string, 1
      repeated :categories, :message, 2, "github.turboscan.CategoryStatus"
    end
    add_message "github.turboscan.ToolStatusExtracted" do
      optional :extracted, :uint64, 2
      optional :total, :uint64, 3
    end
    add_message "github.turboscan.ConfigurationGroup" do
      optional :delivery_origin, :enum, 1, "github.turboscan.DeliveryOrigin"
      optional :workflow_path, :bytes, 2
    end
    add_message "github.turboscan.CategoryStatus" do
      optional :workflow_run_id, :uint64, 1
      optional :analysis_status, :enum, 2, "github.turboscan.AnalysisStatus"
      optional :commit_oid, :string, 3
      optional :updated_at, :message, 5, "google.protobuf.Timestamp"
      optional :category, :string, 6
      optional :tool_version, :string, 7
      repeated :messages, :message, 8, "github.turboscan.AnalysisMessage"
      optional :created_at, :message, 9, "google.protobuf.Timestamp"
      repeated :extensions, :message, 11, "github.turboscan.RuleOrigin"
      optional :analysis_id, :uint64, 14
      optional :is_outdated, :bool, 15
      repeated :query_suites, :message, 16, "github.turboscan.CategoryStatus.QuerySuite"
      optional :default_queries_disabled, :bool, 17
      optional :has_most_recent, :bool, 18
      optional :configuration_hash, :bytes, 19
      optional :configuration_group, :message, 20, "github.turboscan.ConfigurationGroup"
    end
    add_message "github.turboscan.CategoryStatus.QuerySuite" do
      optional :type, :enum, 1, "github.turboscan.CategoryStatus.QuerySuite.Type"
      optional :uses, :string, 2
    end
    add_enum "github.turboscan.CategoryStatus.QuerySuite.Type" do
      value :QUERY_SUITE_UNKNOWN, 0
      value :QUERY_SUITE_BUILTIN_SUITE, 1
      value :QUERY_SUITE_LOCAL_QUERY, 2
      value :QUERY_SUITE_EXTERNAL_REPOSITORY, 3
    end
    add_message "github.turboscan.RuleOrigin" do
      optional :name, :string, 1
      optional :version, :string, 2
    end
    add_message "github.turboscan.ToolNamesRequest" do
      optional :repository_id, :uint64, 1
    end
    add_message "github.turboscan.ToolDescription" do
      optional :name, :string, 1
      optional :guid, :string, 3
      optional :version, :string, 4
      optional :alert_count, :uint64, 5
    end
    add_message "github.turboscan.ToolNamesResponse" do
      repeated :tools, :message, 2, "github.turboscan.ToolDescription"
    end
    add_message "github.turboscan.AnnotationsRequest" do
      optional :repository_id, :uint64, 1
      repeated :numbers, :uint32, 2
      optional :head_commit_oid, :string, 3
      optional :merge_commit_oid, :string, 4
    end
    add_message "github.turboscan.AnnotationResult" do
      optional :result, :message, 1, "github.turboscan.Result"
      repeated :related_locations, :message, 2, "github.turboscan.RelatedLocation"
      optional :has_code_paths, :bool, 3
    end
    add_message "github.turboscan.AnnotationsResponse" do
      repeated :results, :message, 1, "github.turboscan.AnnotationResult"
    end
    add_message "github.turboscan.SetAlertsStatusRequest" do
      optional :repository_id, :uint64, 1
      optional :resolution, :enum, 2, "github.turboscan.ResultResolution"
      optional :resolver_id, :uint32, 3
      repeated :numbers, :uint32, 4
      optional :resolution_note, :string, 6
      repeated :ref_names_bytes, :bytes, 7
    end
    add_message "github.turboscan.SetAlertsStatusResponse" do
      repeated :results, :message, 1, "github.turboscan.Result"
    end
    add_message "github.turboscan.DeleteAnalysisRequest" do
      optional :repository_id, :uint64, 1
      optional :analysis_id, :uint64, 2
      optional :confirm_config_delete, :bool, 3
    end
    add_message "github.turboscan.DeleteAnalysisResponse" do
      optional :new_most_recent_analysis_id, :uint64, 1
    end
    add_message "github.turboscan.AlertInstancesRequest" do
      optional :repository_id, :uint64, 1
      optional :alert_number, :uint32, 2
      optional :limit, :uint32, 4
      optional :numeric_page, :uint32, 5
      optional :skip_pagination, :bool, 6
      optional :branches_only, :bool, 7
      optional :no_count, :bool, 8
      repeated :ref_names_bytes, :bytes, 9
    end
    add_message "github.turboscan.AlertInstancesResponse" do
      repeated :instances, :message, 1, "github.turboscan.AlertInstance"
      optional :total_count, :uint64, 8
    end
    add_message "github.turboscan.AlertsByRepoRequest" do
      optional :limit, :uint32, 2
      optional :numeric_page, :uint32, 3
      optional :sort_order, :enum, 4, "github.turboscan.AlertSortOrder"
      optional :state, :enum, 5, "github.turboscan.AlertStateFilter"
      repeated :repository_ids, :uint64, 6
      optional :search_query, :string, 11
      optional :before_cursor, :string, 12
      optional :after_cursor, :string, 13
      repeated :excluded_repository_ids, :uint64, 14
      repeated :excluded_rule_sarif_identifiers, :string, 15
      repeated :excluded_tools, :string, 16
      repeated :excluded_severities, :enum, 17, "github.turboscan.Severity"
      repeated :excluded_resolutions, :enum, 19, "github.turboscan.ResultResolutionFilter"
      repeated :severities, :enum, 20, "github.turboscan.Severity"
      repeated :owner_ids, :uint64, 21
      repeated :tools, :string, 23
      repeated :tool_guids, :string, 24
      repeated :rule_sarif_identifiers, :string, 25
      repeated :repository_visibilities, :enum, 26, "github.turboscan.RepositoryVisibility"
      repeated :resolutions, :enum, 27, "github.turboscan.ResultResolutionFilter"
      repeated :repo_numbers, :message, 28, "github.turboscan.RepoNumber"
      optional :classification, :enum, 29, "github.turboscan.AlertClassificationFilter"
    end
    add_message "github.turboscan.RepoNumber" do
      optional :repository_id, :uint64, 1
      optional :number, :uint32, 2
    end
    add_message "github.turboscan.AlertsByRepoResponse" do
      repeated :results, :message, 1, "github.turboscan.RepoResult"
      optional :open_count, :uint64, 2
      optional :resolved_count, :uint64, 3
      optional :next_cursor, :string, 4
      optional :prev_cursor, :string, 5
    end
    add_message "github.turboscan.RepoResult" do
      optional :repository_id, :uint64, 1
      optional :result, :message, 2, "github.turboscan.Result"
    end
    add_message "github.turboscan.AlertsFilter" do
      optional :state, :enum, 1, "github.turboscan.AlertStateFilter"
      optional :search_query, :string, 6
      repeated :excluded_rule_sarif_identifiers, :string, 7
      repeated :excluded_tools, :string, 8
      repeated :excluded_severities, :enum, 9, "github.turboscan.Severity"
      repeated :excluded_resolutions, :enum, 11, "github.turboscan.ResultResolutionFilter"
      repeated :severities, :enum, 12, "github.turboscan.Severity"
      repeated :tools, :string, 13
      repeated :tool_guids, :string, 14
      repeated :rule_sarif_identifiers, :string, 15
      repeated :repository_visibilities, :enum, 16, "github.turboscan.RepositoryVisibility"
      repeated :resolutions, :enum, 17, "github.turboscan.ResultResolutionFilter"
      optional :classification, :enum, 18, "github.turboscan.AlertClassificationFilter"
    end
    add_message "github.turboscan.ToolNamesForOrgRequest" do
      repeated :repository_ids, :uint64, 2
      optional :filter, :message, 3, "github.turboscan.AlertsFilter"
      repeated :excluded_repository_ids, :uint64, 4
      repeated :owner_ids, :uint64, 5
    end
    add_message "github.turboscan.RulesForOrgRequest" do
      repeated :repository_ids, :uint64, 2
      optional :filter, :message, 3, "github.turboscan.AlertsFilter"
      repeated :excluded_repository_ids, :uint64, 4
      repeated :owner_ids, :uint64, 5
    end
    add_message "github.turboscan.RulesForOrgResponse" do
      repeated :rules, :message, 1, "github.turboscan.OrgRule"
    end
    add_message "github.turboscan.OrgRule" do
      optional :sarif_identifier, :string, 1
      optional :short_description, :string, 2
      optional :alert_count, :uint64, 3
      repeated :tags, :string, 4
    end
    add_message "github.turboscan.RepositoryIDsForOrgRequest" do
      optional :filter, :message, 2, "github.turboscan.AlertsFilter"
      repeated :owner_ids, :uint64, 3
      repeated :repository_ids, :uint64, 4
      repeated :excluded_repository_ids, :uint64, 5
    end
    add_message "github.turboscan.RepositoryIDsResponse" do
      repeated :repositories, :message, 2, "github.turboscan.RepositoryIDsResponse.Repository"
    end
    add_message "github.turboscan.RepositoryIDsResponse.Repository" do
      optional :repository_id, :uint64, 1
      optional :alert_count, :uint64, 2
    end
    add_message "github.turboscan.SeveritiesForOrgRequest" do
      repeated :repository_ids, :uint64, 2
      optional :filter, :message, 3, "github.turboscan.AlertsFilter"
      repeated :excluded_repository_ids, :uint64, 4
      repeated :owner_ids, :uint64, 5
    end
    add_message "github.turboscan.SeveritiesForOrgResponse" do
      repeated :severities, :message, 1, "github.turboscan.SeveritiesForOrgResponse.SeverityItem"
    end
    add_message "github.turboscan.SeveritiesForOrgResponse.SeverityItem" do
      optional :severity, :enum, 1, "github.turboscan.Severity"
      optional :alert_count, :uint64, 2
    end
    add_message "github.turboscan.CountsByRepoNumbersRequest" do
      repeated :owner_ids, :uint64, 1
      repeated :repo_numbers, :message, 2, "github.turboscan.RepoNumber"
      optional :filter, :message, 3, "github.turboscan.AlertsFilter"
    end
    add_message "github.turboscan.CountsByRepoNumbersResponse" do
      optional :open_count, :uint64, 1
      optional :closed_count, :uint64, 2
      repeated :repository_counts, :message, 3, "github.turboscan.CountsByRepoNumbersResponse.RepositoryCounts"
    end
    add_message "github.turboscan.CountsByRepoNumbersResponse.RepositoryCounts" do
      optional :repository_id, :uint64, 1
      optional :open_count, :uint64, 2
      optional :closed_count, :uint64, 3
    end
    add_message "github.turboscan.CreateDeliveryRequest" do
      optional :repository_id, :uint64, 1
      optional :repository_nwo, :string, 2
      optional :ref, :bytes, 3
      optional :commit_oid, :string, 4
      optional :sarif_id, :string, 5
      optional :request_id, :string, 6
      optional :analysis_name, :string, 7
      optional :analysis_key, :string, 8
      optional :environment, :string, 9
      optional :checkout_uri, :string, 10
      optional :build_started_at, :message, 11, "google.protobuf.Timestamp"
      optional :workflow_run_id, :uint64, 12
      optional :workflow_run_attempt, :int64, 25
      optional :upload_started_at, :message, 13, "google.protobuf.Timestamp"
      optional :upload_finished_at, :message, 14, "google.protobuf.Timestamp"
      optional :hydro_enqueued_at, :message, 15, "google.protobuf.Timestamp"
      optional :sarif_path, :string, 16
      optional :source_repository_id, :uint64, 17
      optional :outdated_configuration, :message, 19, "github.turboscan.OutdatedConfiguration"
      optional :rejected, :bool, 20
      oneof :error do
        optional :zip_too_big_error, :message, 21, "github.turboscan.CreateDeliveryRequest.ZipTooBig"
        optional :sarif_too_big_error, :message, 22, "github.turboscan.CreateDeliveryRequest.SarifTooBig"
        optional :invalid_sarif_error, :message, 23, "github.turboscan.CreateDeliveryRequest.InvalidSarif"
        optional :invalid_zip_error, :message, 24, "github.turboscan.CreateDeliveryRequest.InvalidZip"
      end
    end
    add_message "github.turboscan.CreateDeliveryRequest.ZipTooBig" do
      optional :max, :string, 1
    end
    add_message "github.turboscan.CreateDeliveryRequest.SarifTooBig" do
      optional :max, :string, 1
    end
    add_message "github.turboscan.CreateDeliveryRequest.InvalidSarif" do
      optional :message, :string, 1
    end
    add_message "github.turboscan.CreateDeliveryRequest.InvalidZip" do
      optional :empty, :bool, 1
    end
    add_message "github.turboscan.OutdatedConfiguration" do
      optional :tool_name, :string, 1
      optional :category, :string, 2
    end
    add_message "github.turboscan.CreateDeliveryResponse" do
      optional :id, :uint64, 1
    end
    add_message "github.turboscan.DeliveryRequest" do
      optional :repository_id, :uint64, 1
      optional :sarif_id, :string, 2
    end
    add_message "github.turboscan.DeliveryResponse" do
      optional :analysis_count, :uint64, 1
      repeated :errors, :message, 2, "github.turboscan.ProcessError"
      optional :ref, :bytes, 3
    end
    add_message "github.turboscan.ProcessError" do
      optional :error_type, :string, 1
      optional :message, :string, 2
    end
    add_message "github.turboscan.GetCodeScanningEnabledRequest" do
      optional :repository_id, :uint64, 1
      optional :default_ref_name_bytes, :bytes, 2
    end
    add_message "github.turboscan.GetCodeScanningEnabledResponse" do
      optional :is_enabled, :bool, 1
    end
    add_message "github.turboscan.EvalRefUpdateRulesRequest" do
      optional :repository_id, :uint64, 1
      optional :base_ref_bytes, :bytes, 2
      optional :head_commit_oid, :string, 3
      optional :merge_commit_oid, :string, 4
      repeated :file_changes, :message, 5, "github.turboscan.FileChange"
      repeated :rule_configs, :message, 6, "github.turboscan.EvalRefUpdateRulesRequest.RuleConfig"
      optional :is_dependabot, :bool, 7
    end
    add_message "github.turboscan.EvalRefUpdateRulesRequest.RuleConfig" do
      repeated :tool_configs, :message, 1, "github.turboscan.EvalRefUpdateRulesRequest.ToolConfig"
    end
    add_message "github.turboscan.EvalRefUpdateRulesRequest.ToolConfig" do
      optional :name, :string, 1
      optional :alerts_threshold, :enum, 2, "github.turboscan.EvalRefUpdateRulesRequest.SeverityChoice"
      optional :security_alerts_threshold, :enum, 3, "github.turboscan.EvalRefUpdateRulesRequest.SecuritySeverityChoice"
    end
    add_enum "github.turboscan.EvalRefUpdateRulesRequest.SeverityChoice" do
      value :SEVERITY_NONE, 0
      value :SEVERITY_ERRORS, 1
      value :SEVERITY_ERRORS_AND_WARNINGS, 2
      value :SEVERITY_ALL, 3
    end
    add_enum "github.turboscan.EvalRefUpdateRulesRequest.SecuritySeverityChoice" do
      value :SECURITY_SEVERITY_NONE, 0
      value :SECURITY_SEVERITY_CRITICAL, 1
      value :SECURITY_SEVERITY_HIGH_OR_HIGHER, 2
      value :SECURITY_SEVERITY_MEDIUM_OR_HIGHER, 3
      value :SECURITY_SEVERITY_ALL, 4
    end
    add_message "github.turboscan.EvalRefUpdateRulesResponse" do
      repeated :results, :message, 1, "github.turboscan.EvalRefUpdateRulesResponse.EvalResult"
    end
    add_message "github.turboscan.EvalRefUpdateRulesResponse.EvalResult" do
      optional :passed, :bool, 1
      optional :failure_message, :string, 2
    end
    add_message "github.turboscan.GetLinksForAlertsRequest" do
      repeated :repos_and_alerts, :message, 1, "github.turboscan.RepoNumber"
    end
    add_message "github.turboscan.GetLinksForAlertsResponse" do
      repeated :links, :message, 1, "github.turboscan.AlertLink"
    end
    add_message "github.turboscan.AlertLink" do
      optional :repository_id, :uint64, 1
      optional :alert_number, :uint32, 2
      optional :pull_request_id, :uint64, 3
      optional :ref_name_bytes, :bytes, 4
    end
    add_message "github.turboscan.CreateAlertLinksRequest" do
      optional :repository_id, :uint64, 1
      repeated :alert_numbers, :uint32, 2
      optional :pull_request_id, :uint64, 3
      optional :ref_name_bytes, :bytes, 4
    end
    add_message "github.turboscan.CreateAlertLinksResponse" do
    end
    add_enum "github.turboscan.Severity" do
      value :NO_SEVERITY, 0
      value :SEVERITY_NOTE, 1
      value :SEVERITY_WARNING, 2
      value :SEVERITY_ERROR, 3
      value :SEVERITY_LOW, 4
      value :SEVERITY_MEDIUM, 5
      value :SEVERITY_HIGH, 6
      value :SEVERITY_CRITICAL, 7
    end
    add_enum "github.turboscan.RuleSeverity" do
      value :NONE, 0
      value :NOTE, 1
      value :WARNING, 2
      value :ERROR, 3
    end
    add_enum "github.turboscan.SecuritySeverity" do
      value :NO_SECURITY_SEVERITY, 0
      value :LOW, 1
      value :MEDIUM, 2
      value :HIGH, 3
      value :CRITICAL, 4
    end
    add_enum "github.turboscan.ResultResolution" do
      value :NO_RESOLUTION, 0
      value :FALSE_POSITIVE, 1
      value :WONT_FIX, 2
      value :USED_IN_TESTS, 3
    end
    add_enum "github.turboscan.ResultResolutionFilter" do
      value :FILTER_NONE, 0
      value :FILTER_NO_RESOLUTION, 1
      value :FILTER_FALSE_POSITIVE, 2
      value :FILTER_WONT_FIX, 3
      value :FILTER_USED_IN_TESTS, 4
    end
    add_enum "github.turboscan.AlertSortOrder" do
      value :WEIGHT, 0
      value :CREATED_ASCENDING, 1
      value :CREATED_DESCENDING, 2
      value :UPDATED_ASCENDING, 3
      value :UPDATED_DESCENDING, 4
    end
    add_enum "github.turboscan.TimelineEventType" do
      value :TIMELINE_EVENT_TYPE_UNKNOWN, 0
      value :TIMELINE_EVENT_TYPE_ALERT_APPEARED_IN_BRANCH, 1
      value :TIMELINE_EVENT_TYPE_ALERT_CLOSED_BECAME_FIXED, 3
      value :TIMELINE_EVENT_TYPE_ALERT_CLOSED_BY_USER, 4
      value :TIMELINE_EVENT_TYPE_ALERT_CREATED, 6
      value :TIMELINE_EVENT_TYPE_ALERT_REAPPEARED, 7
      value :TIMELINE_EVENT_TYPE_ALERT_REOPENED_BY_USER, 9
      value :TIMELINE_EVENT_TYPE_ALERT_DELETED_BY_USER, 10
      value :TIMELINE_EVENT_TYPE_ALERT_CLOSED_BECAME_OUTDATED, 11
    end
    add_enum "github.turboscan.AlertStateFilter" do
      value :ALERT_STATE_FILTER_NONE, 0
      value :ALERT_STATE_FILTER_ALL, 1
      value :ALERT_STATE_FILTER_OPEN, 2
      value :ALERT_STATE_FILTER_CLOSED, 3
      value :ALERT_STATE_FILTER_CLOSED_RESOLVED, 4
      value :ALERT_STATE_FILTER_CLOSED_FIXED, 5
    end
    add_enum "github.turboscan.AlertClassificationFilter" do
      value :ALERT_CLASSIFICATION_FILTER_NO_FILTER, 0
      value :ALERT_CLASSIFICATION_FILTER_UNCLASSIFIED, 1
      value :ALERT_CLASSIFICATION_FILTER_ANY_CLASSIFICATION, 2
    end
    add_enum "github.turboscan.AnalysisStatus" do
      value :UNKNOWN, 0
      value :MISSING, 1
      value :PENDING, 2
      value :FAILED, 3
      value :COMPLETE, 4
    end
    add_enum "github.turboscan.RepositoryVisibility" do
      value :REPOSITORY_VISIBILITY_UNKNOWN, 0
      value :REPOSITORY_VISIBILITY_PUBLIC, 1
      value :REPOSITORY_VISIBILITY_PRIVATE, 2
      value :REPOSITORY_VISIBILITY_INTERNAL, 3
    end
    add_enum "github.turboscan.DeliveryOrigin" do
      value :DELIVERY_ORIGIN_UNKNOWN, 0
      value :DELIVERY_ORIGIN_YML, 1
      value :DELIVERY_ORIGIN_MANAGED, 2
      value :DELIVERY_ORIGIN_DYNAMIC, 3
      value :DELIVERY_ORIGIN_API, 4
    end
    add_enum "github.turboscan.AnalysesSortOrder" do
      value :ANALYSES_CREATED_DESCENDING, 0
      value :ANALYSES_CREATED_ASCENDING, 1
    end
    add_enum "github.turboscan.AnalysisMessageLevel" do
      value :SUCCESS, 0
      value :ATTENTION, 1
      value :DANGER, 2
    end
    add_enum "github.turboscan.SearchStatus" do
      value :STATUS_OK, 0
      value :STATUS_INTERNAL_ERROR, 1
      value :STATUS_NOT_CONFIGURED, 2
      value :STATUS_INVALID_QUERY, 3
    end
  end
end

module Turboscan
  module Proto
    Analysis = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.Analysis").msgclass
    AnalysesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AnalysesRequest").msgclass
    AnalysesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AnalysesResponse").msgclass
    AnalysisRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AnalysisRequest").msgclass
    AnalysisResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AnalysisResponse").msgclass
    AnalysisSarifRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AnalysisSarifRequest").msgclass
    AnalysisSarifResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AnalysisSarifResponse").msgclass
    AlertsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AlertsRequest").msgclass
    Cursor = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.Cursor").msgclass
    AlertsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AlertsResponse").msgclass
    AlertRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AlertRequest").msgclass
    AlertResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AlertResponse").msgclass
    AlertTitlesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AlertTitlesRequest").msgclass
    AlertTitlesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AlertTitlesResponse").msgclass
    CountsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.CountsRequest").msgclass
    CountsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.CountsResponse").msgclass
    CountsByToolRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.CountsByToolRequest").msgclass
    CountsByToolResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.CountsByToolResponse").msgclass
    ToolAlertCount = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.ToolAlertCount").msgclass
    CodePath = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.CodePath").msgclass
    CodePathStep = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.CodePathStep").msgclass
    Location = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.Location").msgclass
    AlertInstance = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AlertInstance").msgclass
    CodePathsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.CodePathsRequest").msgclass
    CodePathsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.CodePathsResponse").msgclass
    RelatedLocation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.RelatedLocation").msgclass
    Result = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.Result").msgclass
    TimelineEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.TimelineEvent").msgclass
    EnvironmentData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.EnvironmentData").msgclass
    RuleTagsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.RuleTagsRequest").msgclass
    RuleTagsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.RuleTagsResponse").msgclass
    RulesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.RulesRequest").msgclass
    RulesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.RulesResponse").msgclass
    Rule = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.Rule").msgclass
    TimelineEventsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.TimelineEventsRequest").msgclass
    TimelineEventsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.TimelineEventsResponse").msgclass
    PullRequestAlertsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.PullRequestAlertsRequest").msgclass
    PullRequestAlertsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.PullRequestAlertsResponse").msgclass
    PullRequestIntroducedAlertsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.PullRequestIntroducedAlertsRequest").msgclass
    PullRequestIntroducedAlertsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.PullRequestIntroducedAlertsResponse").msgclass
    AlertInPullRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AlertInPullRequest").msgclass
    NewCategorySummary = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.NewCategorySummary").msgclass
    MissingCategorySummary = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.MissingCategorySummary").msgclass
    FileChange = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.FileChange").msgclass
    Change = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.Change").msgclass
    DiffedAlert = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.DiffedAlert").msgclass
    AnalysisKey = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AnalysisKey").msgclass
    FilesExtractedSummaryRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.FilesExtractedSummaryRequest").msgclass
    FilesExtractedSummaryResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.FilesExtractedSummaryResponse").msgclass
    FilesExtractedRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.FilesExtractedRequest").msgclass
    FilesExtractedResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.FilesExtractedResponse").msgclass
    ExtractedCategoryFiles = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.ExtractedCategoryFiles").msgclass
    ExtractedLanguageFiles = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.ExtractedLanguageFiles").msgclass
    ExtractedFile = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.ExtractedFile").msgclass
    ToolStatusRulesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.ToolStatusRulesRequest").msgclass
    ToolStatusRulesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.ToolStatusRulesResponse").msgclass
    ToolStatusRulesResponse::CategoryRules = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.ToolStatusRulesResponse.CategoryRules").msgclass
    ToolStatusRulesResponse::CategoryRules::Rule = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.ToolStatusRulesResponse.CategoryRules.Rule").msgclass
    ToolStatusRulesResponse::CategoryRules::RuleOrigins = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.ToolStatusRulesResponse.CategoryRules.RuleOrigins").msgclass
    ToolStatusRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.ToolStatusRequest").msgclass
    ToolStatusResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.ToolStatusResponse").msgclass
    AnalysisMessage = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AnalysisMessage").msgclass
    ToolStatus = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.ToolStatus").msgclass
    ToolStatusExtracted = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.ToolStatusExtracted").msgclass
    ConfigurationGroup = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.ConfigurationGroup").msgclass
    CategoryStatus = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.CategoryStatus").msgclass
    CategoryStatus::QuerySuite = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.CategoryStatus.QuerySuite").msgclass
    CategoryStatus::QuerySuite::Type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.CategoryStatus.QuerySuite.Type").enummodule
    RuleOrigin = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.RuleOrigin").msgclass
    ToolNamesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.ToolNamesRequest").msgclass
    ToolDescription = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.ToolDescription").msgclass
    ToolNamesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.ToolNamesResponse").msgclass
    AnnotationsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AnnotationsRequest").msgclass
    AnnotationResult = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AnnotationResult").msgclass
    AnnotationsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AnnotationsResponse").msgclass
    SetAlertsStatusRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.SetAlertsStatusRequest").msgclass
    SetAlertsStatusResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.SetAlertsStatusResponse").msgclass
    DeleteAnalysisRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.DeleteAnalysisRequest").msgclass
    DeleteAnalysisResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.DeleteAnalysisResponse").msgclass
    AlertInstancesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AlertInstancesRequest").msgclass
    AlertInstancesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AlertInstancesResponse").msgclass
    AlertsByRepoRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AlertsByRepoRequest").msgclass
    RepoNumber = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.RepoNumber").msgclass
    AlertsByRepoResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AlertsByRepoResponse").msgclass
    RepoResult = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.RepoResult").msgclass
    AlertsFilter = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AlertsFilter").msgclass
    ToolNamesForOrgRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.ToolNamesForOrgRequest").msgclass
    RulesForOrgRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.RulesForOrgRequest").msgclass
    RulesForOrgResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.RulesForOrgResponse").msgclass
    OrgRule = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.OrgRule").msgclass
    RepositoryIDsForOrgRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.RepositoryIDsForOrgRequest").msgclass
    RepositoryIDsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.RepositoryIDsResponse").msgclass
    RepositoryIDsResponse::Repository = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.RepositoryIDsResponse.Repository").msgclass
    SeveritiesForOrgRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.SeveritiesForOrgRequest").msgclass
    SeveritiesForOrgResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.SeveritiesForOrgResponse").msgclass
    SeveritiesForOrgResponse::SeverityItem = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.SeveritiesForOrgResponse.SeverityItem").msgclass
    CountsByRepoNumbersRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.CountsByRepoNumbersRequest").msgclass
    CountsByRepoNumbersResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.CountsByRepoNumbersResponse").msgclass
    CountsByRepoNumbersResponse::RepositoryCounts = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.CountsByRepoNumbersResponse.RepositoryCounts").msgclass
    CreateDeliveryRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.CreateDeliveryRequest").msgclass
    CreateDeliveryRequest::ZipTooBig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.CreateDeliveryRequest.ZipTooBig").msgclass
    CreateDeliveryRequest::SarifTooBig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.CreateDeliveryRequest.SarifTooBig").msgclass
    CreateDeliveryRequest::InvalidSarif = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.CreateDeliveryRequest.InvalidSarif").msgclass
    CreateDeliveryRequest::InvalidZip = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.CreateDeliveryRequest.InvalidZip").msgclass
    OutdatedConfiguration = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.OutdatedConfiguration").msgclass
    CreateDeliveryResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.CreateDeliveryResponse").msgclass
    DeliveryRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.DeliveryRequest").msgclass
    DeliveryResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.DeliveryResponse").msgclass
    ProcessError = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.ProcessError").msgclass
    GetCodeScanningEnabledRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.GetCodeScanningEnabledRequest").msgclass
    GetCodeScanningEnabledResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.GetCodeScanningEnabledResponse").msgclass
    EvalRefUpdateRulesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.EvalRefUpdateRulesRequest").msgclass
    EvalRefUpdateRulesRequest::RuleConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.EvalRefUpdateRulesRequest.RuleConfig").msgclass
    EvalRefUpdateRulesRequest::ToolConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.EvalRefUpdateRulesRequest.ToolConfig").msgclass
    EvalRefUpdateRulesRequest::SeverityChoice = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.EvalRefUpdateRulesRequest.SeverityChoice").enummodule
    EvalRefUpdateRulesRequest::SecuritySeverityChoice = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.EvalRefUpdateRulesRequest.SecuritySeverityChoice").enummodule
    EvalRefUpdateRulesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.EvalRefUpdateRulesResponse").msgclass
    EvalRefUpdateRulesResponse::EvalResult = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.EvalRefUpdateRulesResponse.EvalResult").msgclass
    GetLinksForAlertsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.GetLinksForAlertsRequest").msgclass
    GetLinksForAlertsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.GetLinksForAlertsResponse").msgclass
    AlertLink = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AlertLink").msgclass
    CreateAlertLinksRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.CreateAlertLinksRequest").msgclass
    CreateAlertLinksResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.CreateAlertLinksResponse").msgclass
    Severity = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.Severity").enummodule
    RuleSeverity = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.RuleSeverity").enummodule
    SecuritySeverity = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.SecuritySeverity").enummodule
    ResultResolution = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.ResultResolution").enummodule
    ResultResolutionFilter = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.ResultResolutionFilter").enummodule
    AlertSortOrder = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AlertSortOrder").enummodule
    TimelineEventType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.TimelineEventType").enummodule
    AlertStateFilter = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AlertStateFilter").enummodule
    AlertClassificationFilter = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AlertClassificationFilter").enummodule
    AnalysisStatus = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AnalysisStatus").enummodule
    RepositoryVisibility = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.RepositoryVisibility").enummodule
    DeliveryOrigin = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.DeliveryOrigin").enummodule
    AnalysesSortOrder = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AnalysesSortOrder").enummodule
    AnalysisMessageLevel = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.AnalysisMessageLevel").enummodule
    SearchStatus = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboscan.SearchStatus").enummodule
  end
end
