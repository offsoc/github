<div class="boxed-group hooks-listing" data-hpc><%# erblint:disable DeprecatedCustomCss %>
  <%= render Primer::Beta::Subhead.new do |component| %>
    <% component.with_heading(tag: :h2) do %>Webhooks<% end %>
    <% component.with_actions do %>
      <%= render Primer::Beta::Button.new(
        href: new_hook_path(current_context),
        tag: :a,
        size: :small,
        "data-pjax": true,
      ).with_content("Add webhook") %>
    <% end %>
  <% end %>

  <p>
    Webhooks allow external services to be notified when certain events happen.
    When the specified events happen, we'll send a POST request to each of the URLs you provide.
    Learn more in our <a class="Link--inTextBlock" href="<%= GitHub.developer_help_url %>/webhooks/" rel="noopener noreferrer">Webhooks Guide</a>.
  </p>

  <% if hooks_view.repository_context_within_an_organization? %>
    <p>
      We will also send events from this repository to your <a class="Link--inTextBlock" href="<%= GitHub.developer_help_url  %>/v3/orgs/" rel="noopener noreferrer">organization webhooks</a>.
    </p>
  <% end %>

  <% unless hooks_view.webhooks.empty? %>
    <div>
      <ul class="listgroup">
        <% hooks_view.each_with_view(hooks_view.webhooks) do |hook, hook_view| %>
          <li class="listgroup-item hook-item clearfix <%= hook_view.status_class %> d-flex flex-md-row flex-column" <%= test_selector("hook-#{hook_view.status_class}-#{hook.id}") %>>
            <div class="mb-2 flex-auto">
              <span class="item-status">
                <%= link_to hook_path(hook, :anchor => :deliveries), "aria-label": "Deliveries" do %>
                  <%= primer_octicon(:check, classes: "icon-for-success") %>
                  <%= primer_octicon(:alert, classes: "icon-for-failure") %>
                  <%= primer_octicon(:"dot-fill", classes: "icon-for-pending") %>
                  <%= primer_octicon(:"dot-fill", classes: "icon-for-inactive") %>
                  <%= primer_octicon(:mute, classes: "icon-for-mute") %>
                <% end %>
              </span>

              <a href="<%= hook_path(hook) %>" class="css-truncate" data-pjax>
                <span class="hook-url css-truncate-target">
                  <%= hook_view.managed_by_oauth_app? ? hook_view.oauth_application_name : hook_view.title %>
                </span>
              </a>
              <% if hook.cli_hook? %>
                <%= render(Primer::Beta::Label.new(scheme: :info)) { "Development" } %>
              <% else %>
                <em class="description css-truncate">(<span class="css-truncate-target"><%= hook_view.events_sentence %></span>)</em>
              <% end %>
              <p class="mb-n1">
                <%= hook_view.status_message %>
              </p>
            </div>
            <%= render(Primer::Beta::ButtonGroup.new) do |button_group| %>
              <% button_group.with_button(tag: :a, href: hook_path(hook), data: { pjax: true }) do %>
                Edit
              <% end %>
              <% button_group.with_button(data: { "show-dialog-id" => "hook-delete-dialog-#{hook.id}" }) do %>
                Delete
              <% end %>
            <% end %>
            <%= render(Hooks::DestroyConfirmationComponent.new(hook: hook)) %>
          </li>
        <% end %>
      </ul>
    </div>
  <% end %>
</div>
