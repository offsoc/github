# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Sponsors::V0::SponsorFraudFlagged`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Sponsors::V0::SponsorFraudFlagged`.

class Hydro::Schemas::Github::Sponsors::V0::SponsorFraudFlagged
  sig do
    params(
      fraud_review: T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsFraudReview),
      listing: T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsListing),
      matched_current_client_id: T.nilable(String),
      matched_current_ip: T.nilable(String),
      matched_current_ip_region_and_user_agent: T.nilable(String),
      matched_historical_client_id: T.nilable(String),
      matched_historical_ip: T.nilable(String),
      sponsor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      sponsorable: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(fraud_review: nil, listing: nil, matched_current_client_id: nil, matched_current_ip: nil, matched_current_ip_region_and_user_agent: nil, matched_historical_client_id: nil, matched_historical_ip: nil, sponsor: nil, sponsorable: nil); end

  sig { void }
  def clear_fraud_review; end

  sig { void }
  def clear_listing; end

  sig { void }
  def clear_matched_current_client_id; end

  sig { void }
  def clear_matched_current_ip; end

  sig { void }
  def clear_matched_current_ip_region_and_user_agent; end

  sig { void }
  def clear_matched_historical_client_id; end

  sig { void }
  def clear_matched_historical_ip; end

  sig { void }
  def clear_sponsor; end

  sig { void }
  def clear_sponsorable; end

  sig { returns(T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsFraudReview)) }
  def fraud_review; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsFraudReview)).void }
  def fraud_review=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsListing)) }
  def listing; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsListing)).void }
  def listing=(value); end

  sig { returns(String) }
  def matched_current_client_id; end

  sig { params(value: String).void }
  def matched_current_client_id=(value); end

  sig { returns(String) }
  def matched_current_ip; end

  sig { params(value: String).void }
  def matched_current_ip=(value); end

  sig { returns(String) }
  def matched_current_ip_region_and_user_agent; end

  sig { params(value: String).void }
  def matched_current_ip_region_and_user_agent=(value); end

  sig { returns(String) }
  def matched_historical_client_id; end

  sig { params(value: String).void }
  def matched_historical_client_id=(value); end

  sig { returns(String) }
  def matched_historical_ip; end

  sig { params(value: String).void }
  def matched_historical_ip=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def sponsor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def sponsor=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def sponsorable; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def sponsorable=(value); end
end
