# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::AutomatedTwoFactorRecoveryRequestReview`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::AutomatedTwoFactorRecoveryRequestReview`.

class Hydro::Schemas::Github::V1::AutomatedTwoFactorRecoveryRequestReview
  sig do
    params(
      audit_log_event_type: T.nilable(String),
      email_status_type: T.nilable(T.any(Symbol, Integer)),
      org_membership_type: T.nilable(T.any(Symbol, Integer)),
      reason_type: T.nilable(T.any(Symbol, Integer)),
      review_required: T.nilable(T::Boolean),
      user: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(audit_log_event_type: nil, email_status_type: nil, org_membership_type: nil, reason_type: nil, review_required: nil, user: nil); end

  sig { returns(String) }
  def audit_log_event_type; end

  sig { params(value: String).void }
  def audit_log_event_type=(value); end

  sig { void }
  def clear_audit_log_event_type; end

  sig { void }
  def clear_email_status_type; end

  sig { void }
  def clear_org_membership_type; end

  sig { void }
  def clear_reason_type; end

  sig { void }
  def clear_review_required; end

  sig { void }
  def clear_user; end

  sig { returns(T.any(Symbol, Integer)) }
  def email_status_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def email_status_type=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def org_membership_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def org_membership_type=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def reason_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def reason_type=(value); end

  sig { returns(T::Boolean) }
  def review_required; end

  sig { params(value: T::Boolean).void }
  def review_required=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def user; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def user=(value); end
end
