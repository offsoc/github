.listItem {
  position: relative;
  display: grid;
  min-height: 2rem;
  font-size: var(--text-body-size-medium);
  gap: var(--base-size-4);
  color: var(--fgColor-default);
  grid-template-rows: repeat(3, auto);
  grid-template-areas: 'selection status primary actions' 'selection status metadata actions' 'selection status main-content actions';

  @media screen and (min-width: 544px) {
    /* xsmall: 3 rows, small+: 2 rows */
    grid-template-rows: repeat(2, auto);
    grid-template-areas: 'selection status primary metadata actions' 'selection status main-content metadata actions';
  }

  /* minmax(0, max-content) - '0' is required to fix overflow caused by the "metadata" on smaller screen sizes
     '1fr' is required to fill available space ('auto' will cause content to overflow) */
  --core-grid-template-columns: min-content min-content minmax(30%, 1fr) minmax(0, max-content);
  --last-grid-template-column: min-content;

  grid-template-columns: var(--core-grid-template-columns) var(--last-grid-template-column);

  &:where(.compact) {
    min-height: 1rem;
    grid-template-rows: repeat(2, auto);
    grid-template-areas: 'selection status primary main-content actions' 'selection status metadata metadata actions';

    @media screen and (min-width: 544px) {
      /* xsmall: 2 rows, small+: 1 row */
      grid-template-rows: auto;
      grid-template-areas: 'selection status primary main-content metadata actions';
    }

    /* 2em for short titles and description to be aligned next to title */
    --core-grid-template-columns: min-content min-content minmax(2em, max-content) minmax(0, auto)
      minmax(min-content, max-content);
  }

  /* This allows the actions to show in the action bar depending on the screen size. These actions
  will move into a dropdown menu when the screen isn't big enough to fit them side by side.
  Edge case: if some items have resizable actions and some don't have an actionbar,
  column alignment will be off. */
  &:where(.hasActionBar) {
    --last-grid-template-column: auto;

    &:where(.compact) {
      --last-grid-template-column: minmax(0, auto);
    }
  }

  &:hover {
    background-color: var(--bgColor-muted);
  }

  &:not(:last-child) {
    border-color: var(--borderColor-muted) !important;
    border-bottom: var(--borderWidth-thin) solid;
  }

  &:where(.selected) {
    z-index: 1px;
    background-color: var(--bgColor-accent-muted);
    box-shadow: 0 0 0 1px var(--borderColor-accent-emphasis);

    &:hover {
      background-color: var(--bgColor-accent-muted);
    }
  }

  &:focus-visible {
    outline: 2px solid var(--focus-outlineColor);
    outline-offset: -2px;
    box-shadow: none;
  }
}
