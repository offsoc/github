# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Api::App::PlatformTypes::PendingCycle`.
# Please instead update this file by running `bin/tapioca dsl Api::App::PlatformTypes::PendingCycle`.

class Api::App::PlatformTypes::PendingCycle < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def active_on; end

  sig { returns(T::Boolean) }
  def active_on?; end

  sig { returns(T.nilable(Integer)) }
  def data_packs; end

  sig { returns(T::Boolean) }
  def data_packs?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def data_packs_price; end

  sig { returns(T::Boolean) }
  def data_packs_price?; end

  sig { returns(T::Boolean) }
  def has_changes; end

  sig { returns(T::Boolean) }
  def has_changes?; end

  sig { returns(T::Boolean) }
  def is_changing_data_packs; end

  sig { returns(T::Boolean) }
  def is_changing_data_packs?; end

  sig { returns(T::Boolean) }
  def is_changing_duration; end

  sig { returns(T::Boolean) }
  def is_changing_duration?; end

  sig { returns(T::Boolean) }
  def is_changing_seats; end

  sig { returns(T::Boolean) }
  def is_changing_seats?; end

  sig { returns(T::Boolean) }
  def is_downgrading; end

  sig { returns(T::Boolean) }
  def is_downgrading?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def payment_amount; end

  sig { returns(T::Boolean) }
  def payment_amount?; end

  sig { returns(Api::App::PlatformTypes::PendingMarketplaceChangeConnection) }
  def pending_marketplace_changes; end

  sig { returns(T::Boolean) }
  def pending_marketplace_changes?; end

  sig { returns(Api::App::PlatformTypes::PendingSubscribableChangeConnection) }
  def pending_subscribable_changes; end

  sig { returns(T::Boolean) }
  def pending_subscribable_changes?; end

  sig { returns(Api::App::PlatformTypes::Plan) }
  def plan; end

  sig { returns(T::Boolean) }
  def plan?; end

  sig { returns(String) }
  def plan_duration; end

  sig { returns(T::Boolean) }
  def plan_duration?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def plan_price; end

  sig { returns(T::Boolean) }
  def plan_price?; end

  sig { returns(T.nilable(Integer)) }
  def seats; end

  sig { returns(T::Boolean) }
  def seats?; end
end
