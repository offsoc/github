{"version":3,"file":"mona-sans-xxxxxxxxxxxx.js","mappings":"uHAGA,IAAIA,EAAO,GACPC,EAAQ,IAsEZ,SAASC,EAAMC,CAAc,CAAEC,CAAW,CAAEC,CAAW,EACrD,OAAOC,KAAKD,GAAG,CAACD,EAAKE,KAAKF,GAAG,CAACD,EAAQE,GACxC,CAtEAE,CAAAA,EAAAA,EAAAA,EAAAA,EAAQ,sBAAuBC,IAE7B,IAAMC,EAASC,EAAWC,aAAa,CAAc,0BACrD,GAAI,CAAEF,CAAAA,aAAkBG,WAAU,EAAI,OAEtC,IAAMC,EAAeH,EAAWC,aAAa,CAAmB,0BAChEE,GAAcC,iBAAiB,QAAS,KACtCL,EAAOM,KAAK,CAACC,UAAU,CAAGH,EAAaI,KAAK,GAG9C,IAAMC,EAAcR,EAAWC,aAAa,CAAmB,yBAC/DO,GAAaJ,iBAAiB,QAAS,KACrCb,EAAQkB,SAASD,EAAYD,KAAK,EAClCR,EAAOM,KAAK,CAACK,qBAAqB,CAAG,CAAC,OAAO,EAAEpB,EAAK,SAAS,EAAEC,EAAM,CAAC,GAGxE,IAAMoB,EAAgBX,EAAWC,aAAa,CAAmB,2BACjEU,GAAeP,iBAAiB,QAAS,KACvCd,EAAOmB,SAASE,EAAcJ,KAAK,EACnCR,EAAOM,KAAK,CAACK,qBAAqB,CAAG,CAAC,OAAO,EAAEpB,EAAK,SAAS,EAAEC,EAAM,CAAC,EAE1E,GAOAM,CAAAA,EAAAA,EAAAA,EAAAA,EAAQ,eAAgBC,IAEtB,IAAMc,EAAgBC,EAASC,gBAAgB,CAAC,OAC5CC,EAAeF,EAASG,qBAAqB,GAC3CC,EAAoBC,MAAMC,IAAI,CAACP,GAAeQ,GAAG,CAACC,GAAQA,EAAKL,qBAAqB,IACtFM,EAAe,EAEnB,SAASC,IACPR,EAAeF,EAASG,qBAAqB,GAE7C,IAAK,IAAIQ,EAAI,EAAGA,EAAIZ,EAAca,MAAM,CAAED,IACxCP,CAAiB,CAACO,EAAE,CAAGZ,CAAa,CAACY,EAAE,CAAER,qBAAqB,GAEhEM,EAAeI,OAAOC,OAAO,CAG/Bd,EAAST,gBAAgB,CAAC,aAAcmB,GAGxCK,IAD2BC,eAAeN,GAC3B1B,OAAO,CAlBLC,GAqBjBe,EAAST,gBAAgB,CAAC,YAAa0B,IAErC,IAAK,IAAIN,EAAI,EAAGA,EAAIP,EAAkBQ,MAAM,CAAED,IAAK,CACjD,IAAMO,EAAWd,CAAiB,CAACO,EAAE,CAC/BQ,EAAqBpC,KAAKqC,GAAG,CAACH,EAAMI,OAAO,CAAIH,CAAAA,EAASI,IAAI,CAAGJ,EAASxC,KAAK,CAAG,IAChF6C,EAAqBxC,KAAKqC,GAAG,CAACH,EAAMO,KAAK,CAAIN,CAAAA,EAASO,GAAG,CAAGP,EAASQ,MAAM,CAAG,EAAIjB,CAAW,GAC7FkB,EAAmBR,EAAqBjB,EAAaxB,KAAK,CAC1DkD,EAAmBL,EAAqBrB,EAAawB,MAAM,CAC3DG,EACJC,GAAqB,GAA6C,GAAIH,CAAe,EAAM,GAAIA,CAAe,EAC1GI,EACJC,IAAoB,IAA2C,GAAIJ,CAAe,EAAM,GAAIA,CAAe,CAC7G7B,CAAAA,CAAa,CAACY,EAAE,CAAEnB,KAAK,CAACC,UAAU,CAAG,CAAC,EAAEV,KAAKkD,KAAK,CAACtD,EAAMoD,EApCrC,IADA,MAqCoF,CAAC,CACzGhC,CAAa,CAACY,EAAE,CAAEnB,KAAK,CAAC0C,WAAW,CAAG,CAAC,EAAEnD,KAAKkD,KAAK,CAACtD,EAAMkD,EAvCrC,GADA,MAwCuF,CAAC,CAAC,CAElH,EACF,E","sources":["app/assets/modules/mona-sans.ts"],"sourcesContent":["// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\n\nlet ital = 10\nlet width = 125\n\nobserve('.js-font-playground', observed => {\n  const playground = observed as HTMLElement\n  const target = playground.querySelector<HTMLElement>('.js-font-slider-target')\n  if (!(target instanceof HTMLElement)) return\n\n  const weightSlider = playground.querySelector<HTMLInputElement>('.js-font-slider-weight')\n  weightSlider?.addEventListener('input', () => {\n    target.style.fontWeight = weightSlider.value\n  })\n\n  const widthSlider = playground.querySelector<HTMLInputElement>('.js-font-slider-width')\n  widthSlider?.addEventListener('input', () => {\n    width = parseInt(widthSlider.value)\n    target.style.fontVariationSettings = `'ital' ${ital}, 'wdth' ${width}`\n  })\n\n  const italicsSlider = playground.querySelector<HTMLInputElement>('.js-font-slider-italics')\n  italicsSlider?.addEventListener('input', () => {\n    ital = parseInt(italicsSlider.value)\n    target.style.fontVariationSettings = `'ital' ${ital}, 'wdth' ${width}`\n  })\n})\n\nconst typeGridStretchMax = 125\nconst typeGridStretchMin = 75\nconst typeGridWeightMax = 900\nconst typeGridWeightMin = 200\n\nobserve('.js-typegrid', observed => {\n  const typegrid = observed as HTMLElement\n  const typeGridChars = typegrid.querySelectorAll('div')\n  let typeGridRect = typegrid.getBoundingClientRect()\n  const typeGridCharRects = Array.from(typeGridChars).map(char => char.getBoundingClientRect())\n  let scrollOffset = 0\n\n  function updateRects() {\n    typeGridRect = typegrid.getBoundingClientRect()\n    // Loop over type grid chars and get all their client rects\n    for (let i = 0; i < typeGridChars.length; i++) {\n      typeGridCharRects[i] = typeGridChars[i]!.getBoundingClientRect()\n    }\n    scrollOffset = window.scrollY\n  }\n\n  typegrid.addEventListener('mouseenter', updateRects)\n  // Use a resize observer to update the type grid rects\n  const resizeObserver = new ResizeObserver(updateRects)\n  resizeObserver.observe(typegrid)\n\n  // Add an event listener for mouse movements and get the local coordinates\n  typegrid.addEventListener('mousemove', event => {\n    // Calculate the stretch and weight values for all typeGridChars\n    for (let i = 0; i < typeGridCharRects.length; i++) {\n      const charRect = typeGridCharRects[i]!\n      const distanceFromMouseX = Math.abs(event.clientX - (charRect.left + charRect.width / 2))\n      const distanceFromMouseY = Math.abs(event.pageY - (charRect.top + charRect.height / 2 + scrollOffset))\n      const distancePercentX = distanceFromMouseX / typeGridRect.width\n      const distancePercentY = distanceFromMouseY / typeGridRect.height\n      const stretch =\n        typeGridStretchMin + (typeGridStretchMax - typeGridStretchMin) * (1 - distancePercentX) * (1 - distancePercentX)\n      const weight =\n        typeGridWeightMin + (typeGridWeightMax - typeGridWeightMin) * (1 - distancePercentY) * (1 - distancePercentY)\n      typeGridChars[i]!.style.fontWeight = `${Math.round(clamp(weight, typeGridWeightMin, typeGridWeightMax))}`\n      typeGridChars[i]!.style.fontStretch = `${Math.round(clamp(stretch, typeGridStretchMin, typeGridStretchMax))}%`\n    }\n  })\n})\n\nfunction clamp(number: number, min: number, max: number) {\n  return Math.max(min, Math.min(number, max))\n}\n"],"names":["ital","width","clamp","number","min","max","Math","observe","observed","target","playground","querySelector","HTMLElement","weightSlider","addEventListener","style","fontWeight","value","widthSlider","parseInt","fontVariationSettings","italicsSlider","typeGridChars","typegrid","querySelectorAll","typeGridRect","getBoundingClientRect","typeGridCharRects","Array","from","map","char","scrollOffset","updateRects","i","length","window","scrollY","resizeObserver","ResizeObserver","event","charRect","distanceFromMouseX","abs","clientX","left","distanceFromMouseY","pageY","top","height","distancePercentX","distancePercentY","stretch","typeGridStretchMin","weight","typeGridWeightMin","round","fontStretch"],"sourceRoot":""}