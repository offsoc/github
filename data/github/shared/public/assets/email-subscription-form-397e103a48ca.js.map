{"version":3,"file":"email-subscription-form-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/email-subscription-form/UncheckedValueCheckbox.tsx","ui/packages/email-subscription-form/EmailSubscriptionForm.tsx","ui/packages/email-subscription-form/hooks/use-topic-settings.ts","ui/packages/email-subscription-form/hooks/use-toggle-submit-disabled.ts","ui/packages/email-subscription-form/hooks/use-toggle-unsubscribe-all.ts","ui/packages/email-subscription-form/email-subscription-form.ts","ui/packages/react-core/deferred-registry.ts","ui/packages/react-core/react-partial-anchor.ts","ui/packages/react-core/react-partial-registry.ts","ui/packages/react-core/ReactPartialElement.tsx","ui/packages/react-core/register-partial.ts","ui/packages/react-profiling-mode/src/index.ts","ui/packages/verified-fetch/verified-fetch.ts","ui/packages/react-core/PartialRouter.tsx","ui/packages/react-core/PartialEntry.tsx","ui/packages/react-core/ReactBaseElement.tsx"],"sourcesContent":["import {useState} from 'react'\nimport {Checkbox, FormControl, type CheckboxProps} from '@primer/react'\n\ntype UncheckedValueCheckboxProps = CheckboxProps & {\n  uncheckedValue?: string\n  label?: string\n  caption?: string\n}\n\nexport default function UncheckedValueCheckbox(props: UncheckedValueCheckboxProps) {\n  const {checked, defaultChecked, name, label, onChange, value = '1', uncheckedValue = '0', caption} = props\n  const [localVal, setLocalVal] = useState(checked || defaultChecked ? value : uncheckedValue)\n\n  return (\n    <>\n      <input type=\"hidden\" name={name} value={localVal} data-testid=\"realInput\" />\n      <FormControl>\n        <Checkbox\n          name=\"\"\n          checked={checked || (localVal === value ? true : false)}\n          onChange={e => {\n            if (checked) {\n              setLocalVal(value)\n            } else {\n              setLocalVal(localVal === value ? uncheckedValue : value)\n            }\n            onChange && onChange(e)\n          }}\n        />\n        <FormControl.Label>{label}</FormControl.Label>\n        <FormControl.Caption>{caption}</FormControl.Caption>\n      </FormControl>\n    </>\n  )\n}\n\ntry{ UncheckedValueCheckbox.displayName ||= 'UncheckedValueCheckbox' } catch {}","import {useState, useMemo, useRef} from 'react'\nimport {emailSubscriptionNewLinkPath} from '@github-ui/paths'\nimport {Checkbox, Heading, FormControl} from '@primer/react'\nimport UncheckedValueCheckbox from './UncheckedValueCheckbox'\nimport {useTopicSettings} from './hooks/use-topic-settings'\nimport {useToggleSubmitDisabled} from './hooks/use-toggle-submit-disabled'\nimport {useToggleUnsubscribeAll} from './hooks/use-toggle-unsubscribe-all'\nimport type {EmailSubscriptionFormProps, CPMParamsState, TopicsRef} from './types'\n\nexport function EmailSubscriptionForm({\n  paramEmail,\n\n  paramCTID,\n  paramECID,\n  paramK,\n  paramD,\n  paramPID,\n  paramTID,\n  paramCMID,\n  paramMK,\n}: EmailSubscriptionFormProps) {\n  const topicsRef = useRef<TopicsRef>({})\n\n  const [email, setEmail] = useState(paramEmail)\n  const [cpmParams, setCPMParams] = useState<CPMParamsState>({\n    CTID: paramCTID,\n    ECID: paramECID,\n    K: paramK,\n    D: paramD,\n    PID: paramPID,\n    TID: paramTID,\n    CMID: paramCMID,\n    MK: paramMK,\n  })\n\n  const {done, topics, error} = useTopicSettings({\n    paramEmail,\n    paramCTID,\n    paramECID,\n    paramK,\n    paramD,\n    paramPID,\n    paramTID,\n    paramCMID,\n    paramMK,\n    setEmail,\n    setCPMParams,\n  })\n\n  const currentSubscribedIds = useMemo(() => topics.map(t => t.id), [topics])\n  const toggleSubmitDisabled = useToggleSubmitDisabled(topicsRef)\n  const toggleUnsubscribeAll = useToggleUnsubscribeAll(currentSubscribedIds, toggleSubmitDisabled, topicsRef)\n\n  if (!done) {\n    return <div data-testid=\"emailSubscriptionTopicsLoadingContainer\" />\n  } else if (error) {\n    if (error.retriable) {\n      return (\n        <div data-testid=\"emailSubscriptionTopicsContainer\">\n          <p>We had a problem finding your email subscriptions.</p>\n          <p>\n            Please refresh the page to try again. If the issue persists,{' '}\n            <a href={emailSubscriptionNewLinkPath()}>click here to request a new subscription management link</a>, or\n            reach out to <a href=\"https://support.github.com/\">our support</a> for help.\n          </p>\n        </div>\n      )\n    } else {\n      return (\n        <div data-testid=\"emailSubscriptionTopicsContainer\">\n          <p>We had a problem finding your email subscriptions.</p>\n          <p>\n            Please <a href={emailSubscriptionNewLinkPath()}>click here to request a new subscription management link</a>\n            . If the issue persists, reach out to <a href=\"https://support.github.com/\">our support</a> for help.\n          </p>\n        </div>\n      )\n    }\n  } else if (!topics.length) {\n    return (\n      <div data-testid=\"emailSubscriptionTopicsContainer\">\n        <Heading as=\"h1\" className=\"Subhead-heading\">\n          Subscription preferences for {email}\n        </Heading>\n        <hr />\n        <p>No subscriptions found</p>\n      </div>\n    )\n  } else {\n    return (\n      <div data-testid=\"emailSubscriptionTopicsContainer\">\n        <Heading as=\"h1\" className=\"Subhead-heading\">\n          Subscription preferences for {email}\n        </Heading>\n        <hr />\n\n        <p>\n          {\n            \"To stop receiving emails for the topics below, uncheck any topics you don't want to receive, then click Save subscription preferences\"\n          }\n        </p>\n\n        <div>\n          {topics.map(topic => (\n            <div key={topic.id} className=\"topicInputContainer\" ref={ref => (topicsRef.current[topic.id] = ref)}>\n              <UncheckedValueCheckbox\n                defaultChecked={true}\n                name={`topics[${topic.id}]`}\n                onChange={toggleSubmitDisabled}\n                value=\"true\"\n                uncheckedValue=\"false\"\n                label={topic.name}\n                caption={topic.description}\n                className=\"topicInputCheckbox\"\n              />\n            </div>\n          ))}\n        </div>\n\n        <div>\n          <input type=\"hidden\" name=\"CTID\" value={cpmParams.CTID} />\n          <input type=\"hidden\" name=\"ECID\" value={cpmParams.ECID} />\n          <input type=\"hidden\" name=\"K\" value={cpmParams.K} />\n          <input type=\"hidden\" name=\"D\" value={cpmParams.D} />\n          <input type=\"hidden\" name=\"PID\" value={cpmParams.PID} />\n          <input type=\"hidden\" name=\"TID\" value={cpmParams.TID} />\n          <input type=\"hidden\" name=\"CMID\" value={cpmParams.CMID} />\n          <input type=\"hidden\" name=\"MK\" value={cpmParams.MK} />\n        </div>\n\n        <hr />\n        <FormControl>\n          <Checkbox name=\"unsubscribeAll\" onChange={toggleUnsubscribeAll} />\n          <FormControl.Label>Unsubscribe from all topics</FormControl.Label>\n        </FormControl>\n      </div>\n    )\n  }\n}\n\ntry{ EmailSubscriptionForm.displayName ||= 'EmailSubscriptionForm' } catch {}","import {useEffect, useState} from 'react'\nimport {emailSubscriptionTopicsByEmailPath, emailSubscriptionTopicsByParamsPath} from '@github-ui/paths'\nimport type {TopicSetting, UseTopicSettingsParams, TopicSettingsResponse, EmailSubscriptionTopicsParams} from '../types'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\n\nexport function useTopicSettings({\n  paramEmail,\n  paramCTID,\n  paramECID,\n  paramK,\n  paramD,\n  paramPID,\n  paramTID,\n  paramCMID,\n  paramMK,\n\n  setCPMParams,\n  setEmail,\n}: UseTopicSettingsParams): TopicSettingsResponse {\n  const [isFetchPreferencesFinished, setIsFetchPreferencesFinished] = useState<boolean>(false)\n  const [hasErrorRetriable, setHasErrorRetriable] = useState<boolean>(false)\n  const [hasErrorNotRetriable, setHasErrorNotRetriable] = useState<boolean>(false)\n  const [topics, setTopics] = useState<TopicSetting[]>([])\n\n  let path = ''\n  if (paramEmail && paramEmail.length) {\n    path = emailSubscriptionTopicsByEmailPath(paramEmail)\n  } else if (paramCTID && paramECID && paramK) {\n    path = emailSubscriptionTopicsByParamsPath(<EmailSubscriptionTopicsParams>{\n      CTID: paramCTID,\n      ECID: paramECID,\n      K: paramK,\n      D: paramD,\n      PID: paramPID,\n      TID: paramTID,\n      CMID: paramCMID,\n      MK: paramMK,\n    })\n  }\n\n  useEffect(() => {\n    const fetchTopicSettings = async () => {\n      try {\n        const response = await verifiedFetchJSON(path, {\n          method: 'GET',\n          cache: 'no-store',\n        })\n\n        const resp = await response.json()\n\n        if (resp.has_error) {\n          if (resp.new_link_required) {\n            setHasErrorNotRetriable(true)\n          } else {\n            setHasErrorRetriable(true)\n          }\n        } else {\n          setTopics(resp.data.topics)\n\n          if (paramEmail && paramEmail.length) {\n            setCPMParams(resp.cpm_params)\n          } else {\n            setEmail(resp.email)\n          }\n        }\n        setIsFetchPreferencesFinished(true)\n      } catch {\n        setHasErrorRetriable(true)\n      }\n    }\n\n    fetchTopicSettings()\n  }, [paramEmail, path, setCPMParams, setEmail])\n\n  useEffect(() => {\n    const railsLoader = document.getElementById('js-rails-loading')\n    if (isFetchPreferencesFinished && !!railsLoader) {\n      railsLoader.style.display = 'none'\n    }\n\n    return () => {\n      if (railsLoader) {\n        railsLoader.style.display = ''\n      }\n    }\n  }, [isFetchPreferencesFinished])\n\n  const topicSettingsResp: TopicSettingsResponse = {\n    done: isFetchPreferencesFinished,\n    topics,\n  }\n\n  if (hasErrorNotRetriable || hasErrorRetriable) {\n    topicSettingsResp['error'] = {retriable: hasErrorRetriable}\n  }\n\n  return topicSettingsResp\n}\n","import {useCallback, type MutableRefObject} from 'react'\nimport type {TopicsRef} from '../types'\n\nexport function useToggleSubmitDisabled(topicsRef: MutableRefObject<TopicsRef>): () => void {\n  return useCallback(() => {\n    const submitButton = document.querySelector<HTMLButtonElement>('#js-submit')\n    if (!submitButton) {\n      return\n    }\n\n    let disabled = true\n\n    for (const topicInputGroup of Object.values(topicsRef.current)) {\n      if (topicInputGroup) {\n        // If any input checkbox is unchecked,\n        // we enable the submit cta\n        const topicCheckbox = topicInputGroup.querySelector<HTMLInputElement>('input[type=\"checkbox\"]')\n        if (topicCheckbox && !topicCheckbox.checked) {\n          disabled = false\n        }\n      }\n    }\n\n    submitButton.disabled = disabled\n  }, [topicsRef])\n}\n","import {useCallback, type ChangeEvent, type MutableRefObject} from 'react'\nimport type {TopicsRef} from '../types'\n\nexport function useToggleUnsubscribeAll(\n  currentSubscribedIds: string[],\n  toggleSubmitDisabled: () => void,\n  topicsRef: MutableRefObject<TopicsRef>,\n): (ev: ChangeEvent) => void {\n  return useCallback(\n    (ev: ChangeEvent) => {\n      const unsubAllInput = ev.target as HTMLInputElement\n\n      if (unsubAllInput.checked) {\n        // on unsub all checkbox is checked, click topicCheckbox that are checked\n        for (const topicInputGroup of Object.values(topicsRef.current)) {\n          if (topicInputGroup) {\n            const topicCheckbox = topicInputGroup.querySelector('input[type=\"checkbox\"]') as HTMLInputElement\n            if (topicCheckbox && topicCheckbox.checked) {\n              topicCheckbox.click()\n            }\n          }\n        }\n      } else {\n        // on unsub all checkbox is unchecked, click topicCheckbox that are unchecked and were previously subscribed\n        for (const [topicId, topicInputGroup] of Object.entries(topicsRef.current)) {\n          if (topicInputGroup) {\n            const topicCheckbox = topicInputGroup.querySelector('input[type=\"checkbox\"]') as HTMLInputElement\n            if (topicCheckbox && !topicCheckbox.checked && currentSubscribedIds.includes(topicId)) {\n              topicCheckbox.click()\n            }\n          }\n        }\n      }\n\n      toggleSubmitDisabled()\n    },\n    [currentSubscribedIds, toggleSubmitDisabled, topicsRef],\n  )\n}\n","import {registerReactPartial} from '@github-ui/react-core/register-partial'\nimport {EmailSubscriptionForm} from './EmailSubscriptionForm'\n\nregisterReactPartial('email-subscription-form', {\n  Component: EmailSubscriptionForm,\n})\n","export class DeferredRegistry<T> {\n  private registrationEntries: Record<\n    string,\n    {\n      promise: Promise<T>\n      resolve?: (r: T) => void\n    }\n  > = {}\n\n  public register(name: string, registration: T) {\n    const entry = this.registrationEntries[name]\n    if (entry) {\n      entry.resolve?.(registration)\n    } else {\n      this.registrationEntries[name] = {\n        promise: Promise.resolve(registration),\n      }\n    }\n  }\n\n  public getRegistration(name: string): Promise<T> {\n    this.registrationEntries[name] ||= new Deferred()\n    return this.registrationEntries[name].promise\n  }\n}\n\nclass Deferred<T> {\n  declare promise\n  declare resolve: (r: T) => void\n\n  constructor() {\n    this.promise = new Promise<T>(resolve => {\n      this.resolve = resolve\n    })\n  }\n}\n","import type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {useCallback, useEffect, useRef, useState} from 'react'\n\ninterface ReactPartialAnchor {\n  /**\n   * DO NOT USE THIS PROPERTY DIRECTLY. It is meant to be used with useExternalAnchor and useOnAnchorClick\n   */\n  __wrapperElement: ReactPartialAnchorElement\n}\n\nexport interface ReactPartialAnchorProps {\n  reactPartialAnchor?: ReactPartialAnchor\n}\n\nexport function usePartialAnchorProps(\n  anchorElement: ReactPartialAnchorElement | undefined | null,\n): ReactPartialAnchorProps {\n  useEffect(() => {\n    const anchor = anchorElement?.anchor\n\n    if (!anchor) {\n      return\n    }\n\n    if ('disabled' in anchor) {\n      anchor.disabled = false\n    }\n    anchor.classList.remove('cursor-wait')\n  }, [anchorElement])\n\n  if (!anchorElement) {\n    return {}\n  }\n\n  return {\n    reactPartialAnchor: {\n      __wrapperElement: anchorElement,\n    },\n  }\n}\n\nexport function useExternalAnchor(reactPartialAnchor: ReactPartialAnchor) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor || null)\n  const [open, setOpen] = useState(false)\n\n  const onClick = useCallback(() => {\n    // toggle the open state when clicked\n    setOpen(!open)\n  }, [open, setOpen])\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    ref.current.setAttribute('aria-expanded', open.toString())\n    ref.current.setAttribute('aria-haspopup', 'true')\n  }, [ref, open])\n\n  useOnAnchorClick(reactPartialAnchor, onClick)\n\n  return {\n    ref,\n    open,\n    setOpen,\n  }\n}\n\nexport function useOnAnchorClick(reactPartialAnchor: ReactPartialAnchor, onClick: (event: MouseEvent) => void) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor)\n\n  useEffect(() => {\n    const element = ref.current\n    if (!element) {\n      return\n    }\n\n    element.addEventListener('click', onClick)\n    return () => element.removeEventListener('click', onClick)\n  }, [ref, onClick])\n}\n\nexport type PropsWithPartialAnchor<T> = T & Required<ReactPartialAnchorProps>\n","import {DeferredRegistry} from './deferred-registry'\n\nexport interface PartialRegistration {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Component: React.ComponentType<any>\n}\n\nexport const partialRegistry = new DeferredRegistry<PartialRegistration>()\n\nexport function getReactPartial(appName: string) {\n  return partialRegistry.getRegistration(appName)\n}\n","import {controller} from '@github/catalyst'\nimport {getReactPartial} from './react-partial-registry'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {ReactBaseElement} from './ReactBaseElement'\nimport {PartialEntry} from './PartialEntry'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\n\n// What is this silliness? Is it react or a web component?!\n// It's a web component we use to bootstrap react partials within the monolith.\n@controller\nclass ReactPartialElement extends ReactBaseElement<EmbeddedPartialData> {\n  nameAttribute = 'partial-name'\n\n  async getReactNode(embeddedData: EmbeddedPartialData) {\n    const {Component} = await getReactPartial(this.name)\n\n    // Some React Partials will be wrapped in a react-partial-anchor, which is used to conditionally render the Partial\n    const anchorElement = this.closest<ReactPartialAnchorElement>('react-partial-anchor')\n\n    return (\n      <PartialEntry\n        partialName={this.name}\n        embeddedData={embeddedData}\n        Component={Component}\n        wasServerRendered={this.hasSSRContent}\n        ssrError={this.ssrError}\n        anchorElement={anchorElement}\n      />\n    )\n  }\n}\n","import {partialRegistry, type PartialRegistration} from './react-partial-registry'\n// Import the web component to get it registered on the window\nimport './ReactPartialElement'\n\n// NOTE: if the signature of this method changes, also update the react-partial-name ESLint rule\n// /workspaces/github/ui/packages/eslint-plugin-github-monorepo/rules/react-partial-name.js\nexport function registerReactPartial(name: string, registration: PartialRegistration) {\n  partialRegistry.register(name, registration)\n}\n","import safeStorage from '@github-ui/safe-storage'\n\nconst {getItem, setItem, removeItem} = safeStorage('localStorage')\nconst REACT_PROFILING_ENABLED = 'REACT_PROFILING_ENABLED'\n\ninterface ReactProfilingModeMethods {\n  enable: () => void\n  disable: () => void\n  isEnabled: () => boolean\n}\n\nconst ReactProfilingMode: ReactProfilingModeMethods = {\n  enable: () => setItem(REACT_PROFILING_ENABLED, 'true'),\n  disable: () => removeItem(REACT_PROFILING_ENABLED),\n  isEnabled: () => !!getItem(REACT_PROFILING_ENABLED),\n}\n\nexport default ReactProfilingMode\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  assertRelativePathOrSameOrigin(path)\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\nfunction assertRelativePathOrSameOrigin(path: string) {\n  if (process.env.NODE_ENV === 'test' && !window.location.origin) return\n  const url = new URL(path, window.location.origin)\n  if (url.origin !== window.location.origin) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetch(path, {...init, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetchJSON(path, {...init, headers})\n}\n","import {useState} from 'react'\nimport type {BrowserHistory, MemoryHistory} from '@remix-run/router'\nimport {Router} from 'react-router-dom'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\ntype Props = {\n  children: React.ReactNode\n  history: BrowserHistory | MemoryHistory\n}\n\nexport function PartialRouter({children, history}: Props) {\n  const [state, setState] = useState({\n    location: history.location,\n  })\n\n  useHydratedEffect(() => history.listen(setState), [history])\n\n  return (\n    <Router location={state.location} navigator={history}>\n      {children}\n    </Router>\n  )\n}\n\ntry{ PartialRouter.displayName ||= 'PartialRouter' } catch {}","// Think of this as the entry point into the framework\nimport React from 'react'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {BaseProviders} from './BaseProviders'\nimport type {BrowserHistory} from '@remix-run/router'\nimport {createMemoryHistory} from '@remix-run/router'\nimport {AppContextProvider} from './AppContextProvider'\nimport {PartialRouter} from './PartialRouter'\nimport {CommonElements} from './CommonElements'\nimport {createBrowserHistory} from './create-browser-history'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {usePartialAnchorProps} from './react-partial-anchor'\n\ninterface Props {\n  partialName: string\n  embeddedData: EmbeddedPartialData\n  Component: React.ComponentType\n  wasServerRendered: boolean\n  ssrError?: HTMLScriptElement\n  anchorElement?: ReactPartialAnchorElement | null\n}\n\nexport function PartialEntry({\n  partialName,\n  embeddedData,\n  Component,\n  wasServerRendered,\n  ssrError,\n  anchorElement,\n}: Props) {\n  // Create a ref to track the browser history:\n  const historyRef = React.useRef<BrowserHistory>()\n  const window = globalThis.window as Window | undefined\n\n  // For linking to work, we can just pass a dummy pathname here. We may consider plumbing the actual path in\n  if (!historyRef.current) {\n    historyRef.current = !window\n      ? createMemoryHistory({initialEntries: [{pathname: '/'}]})\n      : createBrowserHistory({window})\n  }\n  const history = historyRef.current\n  const partialAnchorProps = usePartialAnchorProps(anchorElement)\n\n  // Wrap the partial in an AppContextProvider and static Router so that react-core links\n  // will be functional.\n  return (\n    <BaseProviders appName={partialName} wasServerRendered={wasServerRendered}>\n      <AppContextProvider history={history} routes={[]}>\n        <PartialRouter history={history}>\n          <Component {...embeddedData.props} {...(partialAnchorProps as object)} />\n          <CommonElements ssrError={ssrError} />\n        </PartialRouter>\n      </AppContextProvider>\n    </BaseProviders>\n  )\n}\n\ntry{ PartialEntry.displayName ||= 'PartialEntry' } catch {}","import {target} from '@github/catalyst'\nimport {createRoot, hydrateRoot} from 'react-dom/client'\nimport type {createRoot as createRootType, hydrateRoot as hydrateRootType, Root} from 'react-dom/client'\nimport React from 'react'\nimport ReactProfilingMode from '@github-ui/react-profiling-mode'\nimport {EXPECTED_ERRORS} from './expected-errors'\nimport {sendStats} from '@github-ui/stats'\n\ntype ReactDOM = {\n  createRoot: typeof createRootType\n  hydrateRoot: typeof hydrateRootType\n}\n\nconst REACT_INVARIANT_ERROR_REGEX = /Minified React error #(?<invariant>\\d+)/\n\nexport abstract class ReactBaseElement<T> extends HTMLElement {\n  @target embeddedData: HTMLScriptElement | undefined\n  @target ssrError: HTMLScriptElement | undefined\n  @target reactRoot: HTMLElement | undefined\n  private root: Root | undefined\n\n  abstract nameAttribute: string\n  abstract getReactNode(embeddedData: T): Promise<React.ReactNode>\n\n  protected get name() {\n    return this.getAttribute(this.nameAttribute) as string\n  }\n\n  private get embeddedDataText() {\n    const text = this.embeddedData?.textContent\n\n    if (!text) {\n      throw new Error(`No embedded data provided for react element ${this.name}`)\n    }\n\n    return text\n  }\n\n  get hasSSRContent() {\n    return this.getAttribute('data-ssr') === 'true'\n  }\n\n  connectedCallback() {\n    this.renderReact()\n  }\n\n  disconnectedCallback() {\n    this.root?.unmount()\n    this.root = undefined\n  }\n\n  private async renderReact() {\n    if (!this.reactRoot) throw new Error('No react root provided')\n    let reactDom: ReactDOM = {\n      createRoot,\n      hydrateRoot,\n    }\n\n    // Override the react-dom import if we're in profiling mode\n    if (ReactProfilingMode.isEnabled()) {\n      reactDom = await this.getReactDomWithProfiling()\n    }\n\n    const embeddedData = JSON.parse(this.embeddedDataText) as T\n    const ssrErrorText = this.ssrError?.textContent\n    const node = await this.getReactNode(embeddedData)\n    const baseNode = <React.StrictMode>{node}</React.StrictMode>\n\n    if (ssrErrorText) {\n      this.logSSRError(ssrErrorText)\n    }\n\n    if (this.hasSSRContent) {\n      /**\n       * Styled-components automatically looks for style tags to hydrate on first page load, but will not detect them\n       * if they are added after the initial page load. This causes a hydration error because React isn't expecting\n       * a style tag within the app. To work around this, we need to manually move the style tags to the head before\n       * hydrating the app.\n       *\n       * During hydration, styled-components will create a new style tag which matches the one we moved to the head.\n       * This means that after hydration, we can safely remove the style tag we manually moved to the head.\n       */\n      const styles = this.querySelector('style[data-styled=\"true\"]')\n      if (styles) document.head.appendChild(styles)\n\n      // Hydrate the react app\n      // onRecoverableError is disabled until we have a react version with this fix in:\n      // https://github.com/facebook/react/pull/25692\n      this.root = reactDom.hydrateRoot(this.reactRoot, baseNode, {\n        onRecoverableError: error => {\n          if (!(error instanceof Error)) return\n\n          const match = REACT_INVARIANT_ERROR_REGEX.exec(error.message)\n          const invariant = String(match?.groups?.invariant)\n\n          sendStats({\n            incrementKey: 'REACT_HYDRATION_ERROR',\n            incrementTags: {\n              appName: this.name,\n              invariant,\n            },\n          })\n        },\n      })\n\n      // Remove the manually moved style tag after hydration\n      if (styles) {\n        // Wait until things are idle to remove the style tag. If we do it immediately, we can cause a flash of unstyled content.\n        requestIdleCallback(() => {\n          // styles could have already been removed by Turbo if a navigation happens quickly. Only remove it from the DOM if it's still there.\n          styles.parentElement?.removeChild(styles)\n        })\n      }\n    } else {\n      this.root = reactDom.createRoot(this.reactRoot)\n      this.root.render(baseNode)\n    }\n\n    this.classList.add('loaded')\n  }\n\n  private getReactDomWithProfiling() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return import('react-dom/profiling') as any as Promise<ReactDOM>\n  }\n\n  private logSSRError(ssrErrorText: string) {\n    if (EXPECTED_ERRORS[ssrErrorText]) {\n      // eslint-disable-next-line no-console\n      return console.error('SSR failed with an expected error:', EXPECTED_ERRORS[ssrErrorText])\n    }\n\n    try {\n      const error = JSON.parse(ssrErrorText) as PlatformJavascriptError\n      const stacktrace = parseFailbotStacktrace(error)\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', `${error.type}: ${error.value}\\n`, error, stacktrace)\n    } catch {\n      /**\n       * In the event we couldn't log the error, we should not break the application\n       */\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', ssrErrorText, 'unable to parse as json')\n    }\n  }\n}\n\nfunction parseFailbotStacktrace(error: PlatformJavascriptError) {\n  if (!error.stacktrace) return ''\n  let prefix = '\\n '\n  const stack = error.stacktrace.map((frame: PlatformStackframe) => {\n    const {function: func, filename, lineno, colno} = frame\n    const line = `${prefix} at ${func} (${filename}:${lineno}:${colno})`\n    prefix = ' '\n    return line\n  })\n  return stack.join('\\n')\n}\n\ntry{ REACT_INVARIANT_ERROR_REGEX.displayName ||= 'REACT_INVARIANT_ERROR_REGEX' } catch {}"],"names":["UncheckedValueCheckbox","props","checked","defaultChecked","name","label","onChange","value","uncheckedValue","caption","localVal","setLocalVal","useState","input","type","data-testid","FormControl","Checkbox","e","Label","Caption","displayName","EmailSubscriptionForm","paramEmail","paramCTID","paramECID","paramK","paramD","paramPID","paramTID","paramCMID","paramMK","topicsRef","useRef","email","setEmail","cpmParams","setCPMParams","CTID","ECID","K","D","PID","TID","CMID","MK","done","topics","error","useTopicSettings","isFetchPreferencesFinished","setIsFetchPreferencesFinished","hasErrorRetriable","setHasErrorRetriable","hasErrorNotRetriable","setHasErrorNotRetriable","setTopics","path","length","emailSubscriptionTopicsByEmailPath","emailSubscriptionTopicsByParamsPath","useEffect","fetchTopicSettings","response","verifiedFetchJSON","method","cache","resp","json","has_error","new_link_required","data","cpm_params","railsLoader","document","getElementById","style","display","topicSettingsResp","retriable","currentSubscribedIds","useMemo","map","t","id","toggleSubmitDisabled","useCallback","submitButton","querySelector","disabled","topicInputGroup","Object","values","current","topicCheckbox","toggleUnsubscribeAll","unsubAllInput","target","click","topicId","entries","includes","div","p","a","href","emailSubscriptionNewLinkPath","Heading","as","className","hr","topic","ref","description","registerReactPartial","Component","DeferredRegistry","register","registration","entry","registrationEntries","resolve","promise","Promise","getRegistration","Deferred","constructor","usePartialAnchorProps","anchorElement","anchor","classList","remove","reactPartialAnchor","__wrapperElement","useExternalAnchor","open","setOpen","onClick","setAttribute","toString","useOnAnchorClick","element","addEventListener","removeEventListener","partialRegistry","ReactPartialElement","ReactBaseElement","getReactNode","embeddedData","appName","closest","PartialEntry","partialName","wasServerRendered","hasSSRContent","ssrError","nameAttribute","controller","getItem","setItem","removeItem","safeStorage","REACT_PROFILING_ENABLED","enable","disable","isEnabled","verifiedFetch","init","assertRelativePathOrSameOrigin","url","URL","window","location","origin","headers","fetch","Accept","body","JSON","stringify","undefined","reactFetch","reactFetchJSON","PartialRouter","children","history","state","setState","useHydratedEffect","listen","Router","navigator","historyRef","React","globalThis","createBrowserHistory","createMemoryHistory","initialEntries","pathname","partialAnchorProps","BaseProviders","AppContextProvider","routes","CommonElements","REACT_INVARIANT_ERROR_REGEX","HTMLElement","getAttribute","embeddedDataText","text","textContent","connectedCallback","renderReact","disconnectedCallback","root","unmount","reactRoot","reactDom","createRoot","hydrateRoot","ReactProfilingMode","getReactDomWithProfiling","parse","ssrErrorText","node","baseNode","logSSRError","styles","head","appendChild","onRecoverableError","Error","match","exec","message","invariant","String","groups","sendStats","incrementKey","incrementTags","requestIdleCallback","parentElement","removeChild","render","add","EXPECTED_ERRORS","console","stacktrace","parseFailbotStacktrace","prefix","stack","function","func","filename","lineno","colno","frame","line","join"],"sourceRoot":""}