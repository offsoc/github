{"version":3,"file":"ui_packages_date-picker_date-picker_ts-ui_packages_github-avatar_GitHubAvatar_tsx-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/date-picker/components/Anchor.module.css","ui/packages/date-picker/components/ConfirmCloseDialog.module.css","ui/packages/date-picker/components/Day.module.css","ui/packages/date-picker/components/Input.module.css","ui/packages/date-picker/components/Month.module.css","ui/packages/date-picker/components/Panel.module.css","ui/packages/date-picker/hooks/use-on-anchor-action.ts","ui/packages/date-picker/hooks/use-shortcut-calculator.ts","ui/packages/date-picker/strings.en-us.ts","ui/packages/date-picker/types.ts","ui/packages/date-picker/utils/functions.ts","ui/packages/date-picker/utils/parser.ts","ui/packages/date-picker/utils/range.ts","ui/packages/use-select-all/use-select-all.ts","ui/packages/date-picker/components/Anchor.tsx","ui/packages/date-picker/components/ConfirmCloseDialog.tsx","ui/packages/date-picker/components/DatePicker.tsx","ui/packages/date-picker/components/Day.tsx","ui/packages/date-picker/components/HiddenDescription.tsx","ui/packages/date-picker/components/Input.tsx","ui/packages/date-picker/components/Month.tsx","ui/packages/date-picker/components/Overlay.tsx","ui/packages/date-picker/components/Panel.tsx","ui/packages/date-picker/components/Provider.tsx","ui/packages/github-avatar/GitHubAvatar.tsx","ui/packages/validation-error-popover/ValidationErrorPopover.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"calendarIcon\":\"Anchor-module__calendarIcon--JDKPq\"};","// extracted by mini-css-extract-plugin\nexport default {\"labelText\":\"ConfirmCloseDialog-module__labelText--cRyj3\"};","// extracted by mini-css-extract-plugin\nexport default {\"day\":\"Day-module__day--ZcbvX\",\"selected\":\"Day-module__selected--DfMaK\",\"today\":\"Day-module__today--I07sN\",\"date\":\"Day-module__date--tW2me\",\"rangeFrom\":\"Day-module__rangeFrom--MI4gW\",\"rangeTo\":\"Day-module__rangeTo--xgGLr\",\"activeRangeEnd\":\"Day-module__activeRangeEnd--pLMop\",\"rangeMiddle\":\"Day-module__rangeMiddle--gfg7k\",\"range\":\"Day-module__range--DT1d3\",\"header\":\"Day-module__header--oaLcI\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Input-module__container--JFa_Y\",\"rangeInputs\":\"Input-module__rangeInputs--ifTY0\",\"rangeInputsSeparator\":\"Input-module__rangeInputsSeparator--HK76e\",\"singleDateInputContainer\":\"Input-module__singleDateInputContainer--lW_jw\",\"hasCalendarButton\":\"Input-module__hasCalendarButton--ffX6N\",\"singleDateInput\":\"Input-module__singleDateInput--aaIxK\",\"activeRangeEnd\":\"Input-module__activeRangeEnd--bXJbK\",\"fullWidth\":\"Input-module__fullWidth--grFlR\",\"multiDateInputContainer\":\"Input-module__multiDateInputContainer--zA25i\",\"insideDatePicker\":\"Input-module__insideDatePicker--pZOjA\",\"multiDateInput\":\"Input-module__multiDateInput--U0cAp\",\"calendarIconButton\":\"Input-module__calendarIconButton--kjgFT\",\"successIcon\":\"Input-module__successIcon--BBq3C\",\"dangerIcon\":\"Input-module__dangerIcon--bgzfm\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Month-module__container--qgQq3\",\"row\":\"Month-module__row--jOq5L\",\"title\":\"Month-module__title--b0lmV\",\"compressedHeader\":\"Month-module__compressedHeader--NBkkR\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Panel-module__container--i4g9d\",\"topNav\":\"Panel-module__topNav--N99nC\",\"months\":\"Panel-module__months--MDjJE\",\"footer\":\"Panel-module__footer--fkpWR\",\"footerRow\":\"Panel-module__footerRow--zLYca\",\"footerButtons\":\"Panel-module__footerButtons--DQIKy\",\"arrowButton\":\"Panel-module__arrowButton--rKM4z\",\"icon\":\"Panel-module__icon--neXSP\",\"pickers\":\"Panel-module__pickers--_rdHH\",\"picker\":\"Panel-module__picker--gTDgA\",\"option\":\"Panel-module__option--TBGFQ\"};","import {useDatePickerContext} from '../components/Provider'\n\n/**\n * Handle actions on an anchor element that might open the datepicker.\n */\nexport const useOnAnchorAction = () => {\n  const {isOpen, open, close} = useDatePickerContext()\n  return (event: React.KeyboardEvent | React.MouseEvent) => {\n    if ('key' in event) {\n      // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n      if (![' ', 'Enter', 'ArrowDown'].includes(event.key)) return\n      event.preventDefault()\n      open('anchor-key-press')\n    } else if (isOpen) {\n      close('anchor-click')\n    } else {\n      open('anchor-click')\n    }\n  }\n}\n","import {\n  addDays,\n  addMonths,\n  addWeeks,\n  addYears,\n  isFriday,\n  isMonday,\n  isSaturday,\n  isSunday,\n  isWeekend,\n  nextFriday,\n  nextMonday,\n  nextSaturday,\n  previousFriday,\n  previousMonday,\n  previousSunday,\n  subDays,\n  subMonths,\n  subWeeks,\n  subYears,\n} from 'date-fns'\n\nimport {useDatePickerContext} from '../components/Provider'\nimport {clamp, sanitizeDate} from '../utils/index'\n\n/**\n * Returns a function that accepts a date and a keyboard event and returns the date that\n * should be the new value (if the keyboard event is a valid shortcut, otherwise returns\n * `null`).\n *\n * Requires `DatePickerContext` to be available.\n */\nexport const useShortcutCalculator = () => {\n  const {\n    configuration: {minDate, maxDate, disableWeekends},\n  } = useDatePickerContext()\n\n  return (fromDate: Date, event: React.KeyboardEvent | KeyboardEvent) => {\n    let newDate: Date | null = null\n\n    // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n    switch (event.key) {\n      case 'ArrowRight': {\n        // Increase selection by 1 day\n        newDate = addDays(fromDate, 1)\n        if (disableWeekends && isWeekend(newDate)) {\n          newDate = nextMonday(newDate)\n        }\n        break\n      }\n      case 'ArrowLeft': {\n        // Decrease selection by 1 day\n        newDate = subDays(fromDate, 1)\n        if (disableWeekends && isWeekend(newDate)) {\n          newDate = previousFriday(newDate)\n        }\n        break\n      }\n      case 'ArrowUp': {\n        // Decrease selection by 1 week\n        newDate = subWeeks(fromDate, 1)\n        break\n      }\n      case 'ArrowDown': {\n        // Increase selection by 1 week\n        newDate = addWeeks(fromDate, 1)\n        break\n      }\n      case 'Home': {\n        // Go to beginning of the week\n        if (disableWeekends) {\n          newDate = isMonday(fromDate) ? fromDate : previousMonday(fromDate)\n        } else {\n          newDate = isSunday(fromDate) ? fromDate : previousSunday(fromDate)\n        }\n        break\n      }\n      case 'End': {\n        // Go to end of the week\n        if (disableWeekends) {\n          newDate = isFriday(fromDate) ? fromDate : nextFriday(fromDate)\n        } else {\n          newDate = isSaturday(fromDate) ? fromDate : nextSaturday(fromDate)\n        }\n        break\n      }\n      case 'PageUp': {\n        // Decrease 1 Month, or with Shift, 1 year\n        newDate = event.shiftKey ? subYears(fromDate, 1) : subMonths(fromDate, 1)\n        break\n      }\n      case 'PageDown': {\n        // Increase 1 Month, or with Shift, 1 year\n        newDate = event.shiftKey ? addYears(fromDate, 1) : addMonths(fromDate, 1)\n        break\n      }\n    }\n\n    // The date should still be sanitized since we only add multiples of 1 day, but dates are never logical\n    return newDate && sanitizeDate(clamp(newDate, {minDate, maxDate}))\n  }\n}\n","import {format} from 'date-fns/format'\n\nexport const DateResources = {\n  invalidConfiguration: 'Invalid configuration',\n  invalidDate: 'Invalid date',\n  invalidSelection: 'Invalid selection',\n  weekend: 'Must not fall on a weekend',\n  beforeMinDate: (minDate: Date) => `Must be on or after ${format(minDate, 'PP')}`,\n  afterMaxDate: (maxDate: Date) => `Must be on or before ${format(maxDate, 'PP')}`,\n  shortcutInputDescription: 'Use arrow keys to select a date, or type a date like \"Dec 28, 2020\" or \"12/28/2020\".',\n  dateInputDescription: 'Type a date, like \"Dec 28, 2020\" or \"12/28/2020\".',\n  monthSingleDescription: 'Select a date from the grid.',\n  monthMultiDescription: (isMac: boolean) =>\n    `Select dates from the grid. Use ${\n      isMac ? 'command' : 'control'\n    } + enter to select multiple, and shift + enter to select ranges.`,\n  monthRangeDescription: {\n    from: 'Select a start date from the grid.',\n    to: 'Select an end date from the grid.',\n  },\n} as const\n","import type {Ref} from 'react'\n\nimport type {DatePickerTextInput} from './components/Input'\n\n// #region TYPES\nexport type AnchorVariant = 'input' | 'button' | 'icon-only'\nexport type DateFormat = string\n\nexport type SelectionVariant = 'single' | 'multi' | 'range'\nexport type InternalSelection = Date | Date[] | InternalRangeSelection | null\nexport type StringSelection = string | string[] | {to: string; from: string} | null\nexport type DayNumber = 0 | 1 | 2 | 3 | 4 | 5 | 6\nexport type IconPlacement = 'start' | 'end' | 'none'\nexport type RangeEnd = 'from' | 'to'\n\nexport type OpenGesture = 'anchor-click' | 'anchor-key-press'\nexport type CloseGesture = 'anchor-click' | 'click-outside' | 'escape'\nexport type SubmitGesture = 'submit-click' | 'submit-key-press'\n\nexport type ViewMode = '1-month' | '2-month'\n\nexport type DayOfWeek = 'Sunday' | 'Monday' | 'Tuesday' | 'Wednesday' | 'Thursday' | 'Friday' | 'Saturday'\nexport type Months = 'Jan' | 'Feb' | 'Mar' | 'Apr' | 'May' | 'Jun' | 'Jul' | 'Aug' | 'Sep' | 'Oct' | 'Nov' | 'Dec'\n\nexport type RenderAnchor = <P extends React.HTMLAttributes<HTMLElement>>(props: P) => JSX.Element\n\nexport type InternalRangeSelection = {\n  from: Date\n  to: Date | null\n}\n\nexport type RangeSelection = InternalRangeSelection & {to: Date}\nexport type Selection = Date | Date[] | RangeSelection | null\n\nexport type ConfirmCloseAction = 'confirm' | 'discard'\n\nexport interface SelectionModifiers {\n  multiple: boolean\n  range: boolean\n}\n\nexport type AnchorElement = HTMLInputElement & HTMLButtonElement & HTMLDivElement\n\nexport interface DatePickerContext {\n  /**\n   * All of the user provided settings mixed with defaults & overrides.\n   */\n  configuration: {\n    /** `null` if the user will render their own anchor. */\n    anchor: AnchorVariant | RenderAnchor | null\n    anchorClassName?: string\n    confirmation: boolean\n    confirmUnsavedClose: boolean\n    compressedHeader: boolean\n    dateFormat: DateFormat\n    disabled?: boolean\n    disableWeekends: boolean\n    iconPlacement: IconPlacement\n    maxDate?: Date\n    minDate?: Date\n    placeholder: string\n    showInputs: boolean\n    showTodayButton: boolean\n    showClearButton: boolean\n    view: ViewMode\n    weekStartsOn: DayOfWeek\n    variant: 'single' | 'multi' | 'range'\n  }\n\n  anchorRef: React.RefObject<AnchorElement>\n  activeRangeEnd: null | RangeEnd\n  setActiveRangeEnd: (end: null | RangeEnd) => void\n  close: (gesture: CloseGesture) => void\n  /** Is the user currently confirming a pending close? */\n  confirmingClose: boolean\n  currentViewingDate: Date\n  focusDate: Date\n  goToMonth: (date: Date) => void\n  hoverRange?: InternalRangeSelection | null\n  inputRef: Ref<DatePickerTextInput>\n  isDirty: boolean\n  isOpen: boolean\n  onClearSelection: () => void\n  onConfirmClose: (action: ConfirmCloseAction) => void\n  onDateHover: (date: Date) => void\n  onDateInput: (updatedSelection: InternalSelection) => void\n  onDateSelection: (\n    date: Date,\n    modifiers: SelectionModifiers,\n    preserveFocus?: boolean,\n    submitGesture?: SubmitGesture,\n  ) => void\n  open: (gesture: OpenGesture) => void\n  saveValue: () => void\n  selection: InternalSelection\n  selectionActive?: boolean\n  setFocusDate: (date: Date) => void\n  setHoverRange: React.Dispatch<React.SetStateAction<InternalRangeSelection | null>>\n  softSelection?: Partial<InternalRangeSelection> | null\n}\n\n// #endregion\n\n// #region TYPE GUARDS\nexport function isSingleSelection(selection: InternalSelection | null): selection is Date | null {\n  return selection === null || selection instanceof Date\n}\n\nexport function isMultiSelection(\n  selection: InternalSelection | StringSelection | null,\n): selection is Date[] | string[] | null {\n  return selection === null || Array.isArray(selection)\n}\n\nexport function isRangeSelection(\n  selection: InternalSelection | StringSelection | null,\n): selection is InternalRangeSelection | null {\n  return selection === null || !!(selection as InternalRangeSelection).from\n}\n\nexport function isCompleteRangeSelection(\n  selection: InternalSelection | StringSelection | null,\n): selection is RangeSelection | null {\n  return isRangeSelection(selection) && (selection === null || selection.to !== null)\n}\n// #endregion\n","import {isAfter, isBefore, isSunday, isWeekend, nextMonday, previousFriday} from 'date-fns'\n\nimport {type InternalSelection, isMultiSelection, isRangeSelection, type RangeEnd} from '../types'\n\nexport const sanitizeDate = (date: Date | string) => new Date(new Date(date).toDateString())\n\nexport const sanitizeSelection = (selection?: InternalSelection): InternalSelection => {\n  if (selection instanceof Date) {\n    return sanitizeDate(selection)\n  } else if (selection && isMultiSelection(selection)) {\n    return selection.map(sanitizeDate)\n  } else if (selection && isRangeSelection(selection)) {\n    return {from: sanitizeDate(selection.from), to: selection.to && sanitizeDate(selection.to)}\n  }\n  return null\n}\n\nexport const getFocusDate = (selection: InternalSelection, activeRangeEnd: RangeEnd | null = null): Date | null => {\n  if (!selection) return sanitizeDate(new Date())\n\n  if (selection instanceof Date) {\n    return sanitizeDate(selection)\n  } else if (isMultiSelection(selection)) {\n    const lastDate = selection.at(-1)\n    return lastDate ? sanitizeDate(lastDate) : null\n  } else if (isRangeSelection(selection)) {\n    return activeRangeEnd === 'to' && selection.to ? sanitizeDate(selection.to) : sanitizeDate(selection.from)\n  } else {\n    return null\n  }\n}\n\n/**\n * Clamp the date to the given range. Unlike date-fns `clamp`, this supports optional\n * start and end dates.\n */\nexport const clamp = (date: Date, {minDate: min, maxDate: max}: {minDate?: Date; maxDate?: Date}) =>\n  min && isBefore(date, min) ? min : max && isAfter(date, max) ? max : date\n\n/**\n * Returns `true` if the date falls in between the given dates. If start or end date are\n * `undefined`, they will not apply.\n */\nexport const isBetween = (date: Date, {minDate: min, maxDate: max}: {minDate?: Date; maxDate?: Date}) =>\n  (min ? isAfter(date, min) : true) && (max ? isBefore(date, max) : true)\n\nexport const closestWeekday = (date: Date, direction: 'forward' | 'backward' | 'auto' = 'auto'): Date => {\n  if (!isWeekend(date)) return date\n\n  switch (direction) {\n    case 'forward':\n      return nextMonday(date)\n    case 'backward':\n      return previousFriday(date)\n    case 'auto':\n      return isSunday(date) ? nextMonday(date) : previousFriday(date)\n  }\n}\n","import {format as dateFnsFormat, isValid, parse} from 'date-fns'\n\nimport {DateResources} from '../strings.en-us'\nimport {type DateFormat, type InternalSelection, isRangeSelection, type SelectionVariant} from '../types'\nimport {sanitizeDate} from './functions'\n\nconst SHORT_FORMAT = 'MMM d'\nconst LONG_FORMAT = 'MMM d, yyyy'\nconst INPUT_FORMAT = 'MM/dd/yyyy'\n\nexport const getDateFormat = (userFormat: DateFormat): string => {\n  return userFormat === 'short' ? SHORT_FORMAT : userFormat === 'long' ? LONG_FORMAT : userFormat\n}\n\nexport const parseDate = (dateString: string, additionalFormats: DateFormat[] = []): Date | null => {\n  const reference = sanitizeDate(new Date())\n  for (const format of ['PP', 'P', ...additionalFormats.map(getDateFormat)]) {\n    const date = parse(dateString, format, reference)\n    if (isValid(date)) return sanitizeDate(date)\n  }\n  return null\n}\ntype FormatDateOptions = {\n  selection?: InternalSelection\n  dateFormat?: string\n  placeholder?: string\n  rawFormat?: boolean\n  variant?: SelectionVariant\n}\n\nexport const formatDate = (date: Date, dateFormat: string) => {\n  const today = sanitizeDate(new Date())\n  if (dateFormat !== SHORT_FORMAT && dateFormat !== LONG_FORMAT) {\n    return dateFnsFormat(date, dateFormat)\n  }\n\n  if (dateFormat === SHORT_FORMAT && date.getUTCFullYear() !== today.getUTCFullYear()) {\n    return dateFnsFormat(date, LONG_FORMAT)\n  }\n  return dateFnsFormat(date, dateFormat)\n}\n\nexport const formatSelection = ({\n  selection,\n  dateFormat,\n  placeholder = 'Choose Date',\n  rawFormat = false,\n  variant = 'single',\n}: FormatDateOptions) => {\n  if (!selection) {\n    if (rawFormat) return ''\n    return placeholder\n  }\n\n  let template = 'MMM d'\n  if (!rawFormat && dateFormat) {\n    template = getDateFormat(dateFormat)\n  } else {\n    template = INPUT_FORMAT\n  }\n\n  switch (variant) {\n    case 'single': {\n      if (selection instanceof Date) {\n        return formatDate(selection, template)\n      } else if (Array.isArray(selection) && selection?.[0] instanceof Date) {\n        return formatDate(selection[0], template)\n      } else if (isRangeSelection(selection)) {\n        return formatDate(selection.from, template)\n      } else {\n        return DateResources.invalidSelection\n      }\n    }\n    case 'multi': {\n      if (Array.isArray(selection)) {\n        if (selection.length > 3 && !rawFormat) return `${selection.length} Selected`\n        if (selection.length === 0 && !rawFormat) return placeholder\n        const formatted = selection\n          .map(d => {\n            return formatDate(d, template)\n          })\n          .join(', ')\n        return formatted\n      } else if (selection instanceof Date) {\n        return [selection].map(d => formatDate(d, template)).join(', ')\n      } else if (isRangeSelection(selection)) {\n        return [selection.from, selection.to].map(d => (d ? formatDate(d, template) : '')).join(', ')\n      } else {\n        return DateResources.invalidSelection\n      }\n    }\n    case 'range': {\n      if (isRangeSelection(selection)) {\n        return Object.entries(selection)\n          .map(([, date]) => (date ? formatDate(date, template) : ''))\n          .join(' - ')\n      } else if (selection instanceof Date) {\n        return Object.entries({from: selection, to: null})\n          .map(([, date]) => (date ? formatDate(date, template) : ''))\n          .join(' - ')\n      } else if (Array.isArray(selection)) {\n        return (\n          Object.entries({from: selection.at(0), to: selection.at(1)})\n            // to date can still be null\n            .map(([, date]) => (date ? formatDate(date, template) : ''))\n            .join(' - ')\n        )\n      } else {\n        return DateResources.invalidSelection\n      }\n    }\n    default: {\n      return DateResources.invalidConfiguration\n    }\n  }\n}\n","import {\n  addBusinessDays,\n  addDays,\n  differenceInDays,\n  isAfter,\n  isBefore,\n  isEqual,\n  subBusinessDays,\n  subDays,\n} from 'date-fns'\n\nimport type {InternalRangeSelection, RangeEnd} from '../types'\nimport {clamp, closestWeekday} from './functions'\n\ninterface DateLimits {\n  minDate?: Date\n  maxDate?: Date\n}\n\ninterface RangeSizeLimits {\n  minRangeSize?: number\n  maxRangeSize?: number\n}\n\nconst nextValidDay = (date: Date, disableWeekends: boolean) =>\n  disableWeekends ? closestWeekday(date, 'forward') : date\nconst prevValidDay = (date: Date, disableWeekends: boolean) =>\n  disableWeekends ? closestWeekday(date, 'backward') : date\nconst closestValidDay = (date: Date, disableWeekends: boolean) =>\n  disableWeekends ? closestWeekday(date, 'auto') : date\n\nconst addValidDays = (date: Date, days: number, disableWeekends: boolean) =>\n  disableWeekends ? addBusinessDays(date, days) : addDays(date, days)\nconst subValidDays = (date: Date, days: number, disableWeekends: boolean) =>\n  disableWeekends ? subBusinessDays(date, days) : subDays(date, days)\n\n/** Clamp the day to the given range while also forcing the result to fall on a weekday if weekends are disabled. */\nconst clampValid = (date: Date, {minDate, maxDate}: DateLimits, disableWeekends: boolean) => {\n  // Even though we call closestValidDay on the result, we still need to adjust the limits. For example if the maxDate\n  // is a Sunday and we don't adjust the maxDate, we could clamp the result to a Sunday, which would result in returning\n  // the next Monday - a day after the maxDate. If we instead adjust the maxDate to the previous Friday, we would correctly\n  // return Friday.\n  const validMinDate = minDate && nextValidDay(minDate, disableWeekends)\n  const validMaxDate = maxDate && prevValidDay(maxDate, disableWeekends)\n  return closestValidDay(clamp(date, {minDate: validMinDate, maxDate: validMaxDate}), disableWeekends)\n}\n\n// When calculating with range sizes we always need to subtract one, because range sizes include both the start and end days\nconst maxTo = (validFrom: Date, {maxRangeSize}: RangeSizeLimits, disableWeekends: boolean) =>\n  maxRangeSize !== undefined ? addValidDays(validFrom, maxRangeSize - 1, disableWeekends) : undefined\nconst minFrom = (validTo: Date, {maxRangeSize}: RangeSizeLimits, disableWeekends: boolean) =>\n  maxRangeSize !== undefined ? subValidDays(validTo, maxRangeSize - 1, disableWeekends) : undefined\nconst minTo = (validFrom: Date, {minRangeSize}: RangeSizeLimits, disableWeekends: boolean) =>\n  minRangeSize !== undefined ? addValidDays(validFrom, minRangeSize - 1, disableWeekends) : undefined\nconst maxFrom = (validTo: Date, {minRangeSize}: RangeSizeLimits, disableWeekends: boolean) =>\n  minRangeSize !== undefined ? subValidDays(validTo, minRangeSize - 1, disableWeekends) : undefined\n\ninterface RangeSizeParams extends DateLimits, RangeSizeLimits {\n  disableWeekends?: boolean\n  adjustableRangeEnd?: RangeEnd\n}\n\n/**\n * Ensure that the range is 'forward' by making the 'to' date fall after the 'from' date. If the range is flipped, also\n * flips the active range end.\n */\nconst ensureForwardRange = <R extends InternalRangeSelection>(range: R, adjustableRangeEnd: RangeEnd): [R, RangeEnd] =>\n  range.to && isAfter(range.from, range.to)\n    ? [{...range, from: range.to, to: range.from}, adjustableRangeEnd === 'from' ? 'to' : 'from']\n    : [range, adjustableRangeEnd]\n\n/**\n * Adjust the active range end to fit the range to the allowed size.\n */\nconst adjustRangeToSize = <R extends InternalRangeSelection>(\n  range: R,\n  {disableWeekends = false, adjustableRangeEnd = 'to', ...rangeSizeLimits}: RangeSizeParams,\n): R => {\n  const validFrom = closestValidDay(range.from, disableWeekends)\n\n  // no 'to' date selected, so no length to calculate\n  if (!range.to) return {...range, from: validFrom}\n\n  const validTo = closestValidDay(range.to, disableWeekends)\n\n  switch (adjustableRangeEnd) {\n    case 'from':\n      return {\n        ...range,\n        from: clampValid(\n          range.from,\n          {\n            minDate: minFrom(validTo, rangeSizeLimits, disableWeekends),\n            maxDate: maxFrom(validTo, rangeSizeLimits, disableWeekends),\n          },\n          disableWeekends,\n        ),\n        to: validTo,\n      }\n    case 'to':\n      return {\n        ...range,\n        from: validFrom,\n        to: clampValid(\n          range.to,\n          {\n            minDate: minTo(validFrom, rangeSizeLimits, disableWeekends),\n            maxDate: maxTo(validFrom, rangeSizeLimits, disableWeekends),\n          },\n          disableWeekends,\n        ),\n      }\n  }\n}\n\n/**\n * Shift the range to fit within the allowed dates. If the allowed date range is too short to fit the range, the result\n * will overflow past the `maxDate`.\n */\nconst shiftRangeToFit = <R extends InternalRangeSelection>(\n  range: R,\n  {disableWeekends = false, ...limits}: RangeSizeParams,\n): R => {\n  if (!range.to) return {...range, from: clampValid(range.from, limits, disableWeekends)}\n\n  const size = differenceInDays(range.to, range.from)\n\n  const validTo = clampValid(range.to, limits, disableWeekends)\n  const newFrom = subDays(validTo, size)\n\n  const validFrom = clampValid(newFrom, limits, disableWeekends)\n  const newTo = addDays(validFrom, size)\n\n  return {...range, from: validFrom, to: newTo}\n}\n\nexport const fitRange = <R extends InternalRangeSelection>(range: R, params: RangeSizeParams): R => {\n  const [forwardRange, newadjustableRangeEnd] = ensureForwardRange(range, params.adjustableRangeEnd ?? 'to')\n  const newParams = {...params, adjustableRangeEnd: newadjustableRangeEnd}\n  const adjustedRange = adjustRangeToSize(forwardRange, newParams)\n  const shiftedRange = shiftRangeToFit(adjustedRange, newParams)\n  return shiftedRange\n}\n\nexport const rangeSide = (date: Date, range: InternalRangeSelection): RangeEnd | 'middle' | null => {\n  if (isEqual(date, range.from)) return 'from'\n  if (!range.to) return null\n  if (isEqual(date, range.to)) return 'to'\n  if (isAfter(date, range.from) && isBefore(date, range.to)) return 'middle'\n  return null\n}\n","import type {RefObject} from 'react'\n\n/**\n * Returns a function that can be called to select all text in the given input or textarea.\n */\nexport function useSelectAll(ref: RefObject<HTMLInputElement>): () => void {\n  return () => {\n    if (!ref.current) return\n    ref.current.setSelectionRange(0, ref.current.value.length, 'forward')\n  }\n}\n","import {testIdProps} from '@github-ui/test-id-props'\nimport {CalendarIcon} from '@primer/octicons-react'\nimport {Button, IconButton, Octicon} from '@primer/react'\nimport {forwardRef, useMemo} from 'react'\n\nimport {useOnAnchorAction} from '../hooks/index'\nimport type {AnchorElement, AnchorVariant, RenderAnchor} from '../types'\nimport {formatSelection} from '../utils/index'\nimport styles from './Anchor.module.css'\nimport {DatePickerTextInput} from './Input'\nimport {useDatePickerContext} from './Provider'\n\ninterface ExternalDatePickerAnchorProps {\n  render: RenderAnchor\n  children: React.ReactNode\n}\n\nexport const ExternalDatePickerAnchor = forwardRef<HTMLElement, ExternalDatePickerAnchorProps>(\n  ({render, children}, ref) => {\n    const onAction = useOnAnchorAction()\n    const {\n      configuration: {disabled},\n    } = useDatePickerContext()\n\n    return render({\n      ref,\n      'aria-haspopup': 'true',\n      tabIndex: 0,\n      onClick: onAction,\n      onKeyDown: onAction,\n      children,\n      disabled,\n      'aria-disabled': disabled,\n    })\n  },\n)\n\nExternalDatePickerAnchor.displayName = 'ExternalDatePickerAnchor'\n\nconst StyledCalendarIcon = () => <Octicon icon={CalendarIcon} className={styles.calendarIcon} />\n\nconst DefaultDatePickerAnchor = forwardRef<AnchorElement, {anchorVariant: AnchorVariant; children: string}>(\n  ({anchorVariant, children}, ref) => {\n    const {\n      configuration: {iconPlacement, anchorClassName, disabled},\n    } = useDatePickerContext()\n\n    const onAction = useOnAnchorAction()\n\n    return anchorVariant === 'input' ? (\n      <DatePickerTextInput anchorRef={ref} fullWidth className={anchorClassName} disabled={disabled} />\n    ) : anchorVariant === 'icon-only' ? (\n      <IconButton\n        onClick={onAction}\n        onKeyDown={onAction}\n        type=\"button\"\n        className={anchorClassName}\n        {...testIdProps('anchor-button')}\n        icon={CalendarIcon}\n        ref={ref}\n        disabled={disabled}\n        aria-label={`Open date picker (currently selected: ${children})`}\n      />\n    ) : (\n      <Button\n        aria-label={`Open date picker (currently selected: ${children})`}\n        onClick={onAction}\n        onKeyDown={onAction}\n        type=\"button\"\n        className={anchorClassName}\n        {...testIdProps('anchor-button')}\n        ref={ref}\n        disabled={disabled}\n        leadingVisual={iconPlacement === 'start' ? StyledCalendarIcon : undefined}\n        trailingVisual={iconPlacement === 'end' ? StyledCalendarIcon : undefined}\n      >\n        {children}\n      </Button>\n    )\n  },\n)\n\nDefaultDatePickerAnchor.displayName = 'DefaultDatePickerAnchor'\n\nexport const DatePickerAnchor = () => {\n  const {\n    configuration: {anchor, placeholder, variant, dateFormat},\n    anchorRef,\n    selection,\n  } = useDatePickerContext()\n\n  const formattedSelection = useMemo(\n    () =>\n      formatSelection({\n        selection,\n        dateFormat,\n        placeholder,\n        rawFormat: false,\n        variant,\n      }),\n    [placeholder, variant, dateFormat, selection],\n  )\n\n  if (anchor === null) return null\n\n  if (typeof anchor === 'function')\n    return (\n      <ExternalDatePickerAnchor render={anchor} ref={anchorRef}>\n        {formattedSelection}\n      </ExternalDatePickerAnchor>\n    )\n\n  return (\n    <DefaultDatePickerAnchor anchorVariant={anchor} ref={anchorRef}>\n      {formattedSelection}\n    </DefaultDatePickerAnchor>\n  )\n}\n\ntry{ StyledCalendarIcon.displayName ||= 'StyledCalendarIcon' } catch {}","import {CheckIcon, TrashIcon} from '@primer/octicons-react'\nimport {ConfirmationDialog} from '@primer/react'\nimport {useCallback} from 'react'\n\nimport styles from './ConfirmCloseDialog.module.css'\nimport {useDatePickerContext} from './Provider'\n\n/**\n * Shown to the user to confirm that they want to discard their changes.\n */\nexport const DatePickerConfirmCloseDialog = () => {\n  const {onConfirmClose, confirmingClose} = useDatePickerContext()\n\n  const onClose = useCallback(\n    (gesture: 'confirm' | 'cancel' | 'close-button' | 'escape') => {\n      const action = gesture === 'confirm' ? 'confirm' : 'discard'\n      onConfirmClose(action)\n    },\n    [onConfirmClose],\n  )\n\n  return confirmingClose ? (\n    <ConfirmationDialog\n      title=\"Save Changes?\"\n      confirmButtonContent={\n        <>\n          <CheckIcon />\n          <span className={styles.labelText}>Save</span>\n        </>\n      }\n      cancelButtonContent={\n        <>\n          <TrashIcon />\n          <span className={styles.labelText}>Discard</span>\n        </>\n      }\n      onClose={onClose}\n    >\n      You have unsaved changes, would you like to save them?\n    </ConfirmationDialog>\n  ) : null\n}\n\ntry{ DatePickerConfirmCloseDialog.displayName ||= 'DatePickerConfirmCloseDialog' } catch {}","import {forwardRef, type RefObject} from 'react'\n\nimport type {\n  AnchorElement,\n  AnchorVariant,\n  CloseGesture,\n  DateFormat,\n  DayOfWeek,\n  IconPlacement,\n  OpenGesture,\n  RangeSelection,\n  RenderAnchor,\n  Selection,\n  SubmitGesture,\n} from '../types'\nimport {DatePickerAnchor} from './Anchor'\nimport {DatePickerConfirmCloseDialog} from './ConfirmCloseDialog'\nimport {type DatePickerAnchoredOverlayProps, DatePickerOverlay} from './Overlay'\nimport {DatePickerProvider} from './Provider'\n\ninterface BaseDatePickerConfig {\n  /**\n   * The anchor is the inline element that the user will interact with to trigger the\n   * datepicker.\n   *\n   * Built-in anchors include:\n   *\n   * - `'button'`: A button that users can click to open the picker.\n   * - `'input'`: A text input box that users can type dates into if they prefer.\n   * - `'icon-only'`: A button that is styled as a calendar icon for integration into other\n   *   components.\n   *\n   * To use a custom anchor, either provide a render function here or provide a `ref` to an\n   * externally rendered anchor. If a render function is provided, the current selection string\n   * will be provided as the `children` prop.\n   * @default \"button\"\n   */\n  anchor?: AnchorVariant | RenderAnchor | RefObject<HTMLElement>\n  /**\n   * Optional style overrides for the anchor. Ignored if a custom anchor is used.\n   */\n  anchorClassName?: string\n  /**\n   * Control whether the datepicker is disabled or not.\n   * @default false\n   */\n  disabled?: boolean\n  /**\n   * Control whether the user needs to press a button to apply their changes. If `false`,\n   * the datepicker will apply changes and close as soon as a selection is made.\n   * @default false\n   */\n  confirmation?: boolean\n  /**\n   * Control whether the user should confirm their changes if they exit the picker without saving.\n   * If `true`, the picker will be put into `confirmation` mode, regardless of the value of the\n   * `confirmation` prop.\n   * @default false\n   */\n  confirmUnsavedClose?: boolean\n  /**\n   * Show a smaller header with month/year dropdowns.\n   * @default false\n   */\n  compressedHeader?: boolean\n  /**\n   * Control how the selection will be displayed in the anchor.\n   * @default short\n   */\n  dateFormat?: DateFormat\n  /**\n   * If `true`, users will not be able to select weekends (Saturday or Sunday).\n   * @default false\n   */\n  disableWeekends?: boolean\n  /**\n   * Control where the calendar icon will display on the anchor.\n   * @default start\n   */\n  iconPlacement?: IconPlacement\n  /**\n   * The maximum date the user can select. This is inclusive - the user can select the\n   * `maxDate` but not any date after.\n   */\n  maxDate?: Date | null\n  /**\n   * The minimum date the user can select. This is inclusive - the user can select the\n   * `minDate` but not any date before.\n   */\n  minDate?: Date | null\n  /**\n   * Control whether inputs are shown inside the picker. Inputs are not\n   * shown when `confirmation` mode is disabled or when `variant` is `'multi'`.\n   * @default true\n   */\n  showInputs?: boolean\n  /**\n   * Control whether to show a 'today' button in the picker. This button will cause today's\n   * date to appear and be focused. If today's date is outside the allowed range (defined by\n   * `minDate` and `maxDate`, the button will not be displayed.\n   * @default true\n   */\n  showTodayButton?: boolean\n\n  /**\n   * Control whether to show a 'clear' button in the picker. This button will set the\n   * date to `null`.\n   * @default false\n   */\n  showClearButton?: boolean\n\n  /**\n   * Control the size of the datepicker. Will always be `'1-month'`\n   * on screens too small to display 2 months side-by-side.\n   * @default 1-month\n   */\n  view?: '1-month' | '2-month'\n  /**\n   * Determine the day of the week that is shown in the first column when displaying a month.\n   * @default Sunday\n   */\n  weekStartsOn?: DayOfWeek\n  /**\n   * Placeholder string when there is no selection.\n   * @default Choose date...\n   */\n  placeholder?: string\n}\n\nexport type SingleDatePickerConfig = BaseDatePickerConfig\n\nexport interface MultiDatePickerConfig extends BaseDatePickerConfig {\n  /**\n   * The maximum number of dates that can be selected.\n   */\n  maxSelections?: number\n}\n\nexport interface RangeDatePickerConfig extends BaseDatePickerConfig {\n  /**\n   * The maximum number of days that the range can cover.\n   *\n   * If `disableWeekends` is `true`, the range size will not include weekends. That is, a range from Friday to Monday\n   * would be considered 2 days long.\n   */\n  maxRangeSize?: number\n  /**\n   * The minimum number of days that the range can cover.\n   *\n   * @see `maxRangeSize` for weekend details\n   */\n  minRangeSize?: number\n}\n\n// interface cannot `extend C` but type can have `C &`, so this has to be a type\ntype BaseDatePickerProps<S extends Selection, C extends BaseDatePickerConfig> = C & {\n  /**\n   * Called when the selection changes. For `confirmation` datepicker, `onChange` will only\n   * be called one time, when the user clicks to confirm.\n   */\n  onChange?: (selection: S) => void\n  /**\n   * Determines whether the overlay portion of the component should be shown or not. If\n   * not defined, the date picker will manage its own internal closed/open state.\n   */\n  open?: boolean\n  /**\n   * A callback which is called whenever the overlay is currently open and a \"close\" or \"submit\" gesture is detected.\n   */\n  onClose?: (gesture: CloseGesture | SubmitGesture) => void\n  /**\n   * A callback which is called whenever the overlay is currently closed and an \"open gesture\" is detected.\n   */\n  onOpen?: (gesture: OpenGesture) => void\n  /**\n   * Current value of the picker.\n   */\n  value: S\n  /**\n   * Props to be spread on the internal `AnchoredOverlay` component. `DatePicker` props will take\n   * precedence in the event of a conflict.\n   */\n  anchoredOverlayProps?: DatePickerAnchoredOverlayProps\n  /**\n   * Configuration object, if you'd like to reuse a single configuration object among multiple pickers.\n   * These can also be supplied as top-level props. If any top-level props conflict with the\n   * `configuration` object props, the top-level props will apply instead.\n   *\n   * @note Due to limitations in the type system, the `variant` prop is always required at the top-level\n   * if the variant is not `single`.\n   */\n  configuration?: Partial<C>\n}\n\nexport type SingleDatePickerProps = BaseDatePickerProps<Date | null, SingleDatePickerConfig> & {\n  variant?: 'single'\n}\n\nexport type MultiDatePickerProps = BaseDatePickerProps<Date[] | null, MultiDatePickerConfig> & {\n  variant: 'multi'\n}\n\nexport type RangeDatePickerProps = BaseDatePickerProps<RangeSelection | null, RangeDatePickerConfig> & {\n  variant: 'range'\n}\n\nexport type DatePickerProps = SingleDatePickerProps | MultiDatePickerProps | RangeDatePickerProps\n\n/**\n * A form input for accepting date values (including multiple dates and date ranges). Provides\n * a consistent and user-friendly experience across all browsers.\n */\nexport const DatePicker = forwardRef<AnchorElement, DatePickerProps>(\n  ({anchoredOverlayProps, configuration, ...topLevelConfiguration}, forwardedAnchorRef) => {\n    // Even though we KNOW that in the context of this function it's impossible for the types of configuration and\n    // topLevelConfiguration to mismatch because of the definition of DatePickerProps, the compiler is not smart enough to\n    // maintain that association once you start working with them because it thinks the variants can be different.\n    const contextProps = {...configuration, ...topLevelConfiguration}\n    return (\n      <DatePickerProvider {...contextProps} forwardedAnchorRef={forwardedAnchorRef}>\n        <DatePickerConfirmCloseDialog />\n        <DatePickerAnchor />\n        <DatePickerOverlay {...anchoredOverlayProps} />\n      </DatePickerProvider>\n    )\n  },\n)\nDatePicker.displayName = 'DatePicker'\n","import {isMacOS} from '@github-ui/get-os'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {clsx} from 'clsx'\nimport {format, isAfter, isBefore, isEqual, isToday, isWeekend} from 'date-fns'\nimport {useCallback, useMemo} from 'react'\n\nimport {isMultiSelection, isRangeSelection} from '../types'\nimport {rangeSide} from '../utils/range'\nimport styles from './Day.module.css'\nimport {useDatePickerContext} from './Provider'\n\nexport type DayProps = {\n  onAction?: (date: Date, event?: React.MouseEvent<HTMLDivElement> | React.KeyboardEvent<HTMLDivElement>) => void\n  date: Date\n}\n\nexport const Day = ({date, onAction}: DayProps) => {\n  const {\n    configuration: {disableWeekends, minDate, maxDate, variant, showInputs},\n    hoverRange,\n    selection,\n    onDateHover,\n    onDateSelection,\n    activeRangeEnd,\n  } = useDatePickerContext()\n\n  const today = isToday(date)\n\n  /** Actual selected state; determines accessible state + label regardless of range preview. */\n  const selected = useMemo(() => {\n    switch (true) {\n      case !selection:\n        return false\n      case isMultiSelection(selection):\n        return selection.some(d => isEqual(d, date))\n      case isRangeSelection(selection):\n        return rangeSide(date, selection) ?? false\n      default:\n        return isEqual(date, selection)\n    }\n  }, [date, selection])\n\n  /**\n   * Preview state; overrides selected styling to help users visualize the range they are selecting. Does not affect\n   * accessible state or label.\n   */\n  const previewSelected = useMemo(() => {\n    if (!hoverRange) return selected\n    return rangeSide(date, hoverRange) ?? false\n  }, [date, hoverRange, selected])\n\n  const disabled = useMemo(\n    () =>\n      (minDate ? isBefore(date, minDate) : false) ||\n      (maxDate ? isAfter(date, maxDate) : false) ||\n      (disableWeekends ? isWeekend(date) : false),\n    [date, minDate, maxDate, disableWeekends],\n  )\n\n  const mouseDownHandler = useCallback(\n    (event: React.MouseEvent<HTMLDivElement>) => {\n      // Prevent focus from leaving the inputs\n      if (showInputs) event.preventDefault()\n    },\n    [showInputs],\n  )\n\n  const actionHandler = useCallback(\n    (event: React.MouseEvent<HTMLDivElement> | React.KeyboardEvent<HTMLDivElement>) => {\n      if (disabled) {\n        return\n      }\n\n      // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n      const modifiers = {range: event.shiftKey, multiple: isMacOS() ? event.metaKey : event.ctrlKey}\n      if ('key' in event) {\n        // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n        if ([' ', 'Enter'].includes(event.key)) {\n          onDateSelection(date, modifiers, true, 'submit-key-press')\n          onAction?.(date, event)\n          event.preventDefault()\n        }\n      } else {\n        onDateSelection(date, modifiers)\n        onAction?.(date, event)\n      }\n    },\n    [disabled, onDateSelection, onAction, date],\n  )\n\n  const label = useMemo(() => {\n    const todayLabel = today ? ' (Today)' : ''\n    // No need for selected label if not range because aria-selected will already indicate boolean state\n    const selectedLabel =\n      selected === 'from'\n        ? ' (Start of selected range)'\n        : selected === 'to'\n          ? ' (End of selected range)'\n          : selected === 'middle'\n            ? ' (Inside selected range)'\n            : ''\n    const minMaxLabel =\n      minDate && isEqual(date, minDate)\n        ? ' (Minimum allowed date)'\n        : maxDate && isEqual(date, maxDate)\n          ? ' (Maximum allowed date)'\n          : ''\n    return `${format(date, 'EEEE, MMMM d')}${todayLabel}${minMaxLabel}${selectedLabel}`\n  }, [today, date, selected, minDate, maxDate])\n\n  return (\n    <div\n      aria-disabled={disabled}\n      aria-selected={selected !== false}\n      aria-label={label}\n      data-date={format(date, 'MM/dd/yyyy')}\n      data-disabled={disabled ? 'true' : undefined}\n      {...testIdProps(`day-${format(date, 'MM/dd/yyyy')}`)}\n      onClick={actionHandler}\n      onMouseDown={mouseDownHandler}\n      onKeyDown={actionHandler}\n      onMouseEnter={() => onDateHover(date)}\n      role=\"gridcell\"\n      tabIndex={-1}\n      className={clsx(styles.day, {\n        [styles.today]: today,\n        [styles.selected]: !!previewSelected,\n        [styles.range]: variant === 'range',\n        [styles.activeRangeEnd]: previewSelected === activeRangeEnd,\n        [styles.rangeFrom]: previewSelected === 'from',\n        [styles.rangeMiddle]: previewSelected === 'middle',\n        [styles.rangeTo]: previewSelected === 'to',\n      })}\n    >\n      <span className={styles.date}>{date.getDate()}</span>\n    </div>\n  )\n}\n\nexport const BlankDay = () => <div role=\"gridcell\" className={styles.day} />\n\nexport const WeekdayHeaderDay = ({date}: {date: Date}) => (\n  <div\n    role=\"columnheader\"\n    className={clsx(styles.day, styles.header)}\n    aria-label={format(date, 'EEEE')}\n    {...testIdProps('weekday-header')}\n  >\n    {format(date, 'EEEEEE')}\n  </div>\n)\n\ntry{ Day.displayName ||= 'Day' } catch {}\ntry{ BlankDay.displayName ||= 'BlankDay' } catch {}\ntry{ WeekdayHeaderDay.displayName ||= 'WeekdayHeaderDay' } catch {}","/** Visually hidden text that will still be read by a screen reader. Link with aria-describedby. */\nexport const HiddenDescription = ({children, id}: {children: React.ReactNode; id: string}) => (\n  <span className=\"sr-only\" id={id} aria-live=\"polite\">\n    {children}\n  </span>\n)\n\ntry{ HiddenDescription.displayName ||= 'HiddenDescription' } catch {}","import {KeyboardKey} from '@github-ui/keyboard-key'\nimport {useSelectAll} from '@github-ui/use-select-all'\nimport {ValidationErrorPopover} from '@github-ui/validation-error-popover'\nimport {CalendarIcon, CheckIcon, XIcon} from '@primer/octicons-react'\nimport {\n  FormControl,\n  IconButton,\n  Octicon,\n  TextInput,\n  type TextInputProps,\n  TextInputWithTokens,\n  type TokenProps,\n  useRefObjectAsForwardedRef,\n} from '@primer/react'\nimport {clsx} from 'clsx'\nimport {isAfter, isBefore, isEqual, isWeekend} from 'date-fns'\nimport {forwardRef, useCallback, useEffect, useId, useImperativeHandle, useMemo, useRef, useState} from 'react'\n\nimport {useOnAnchorAction, useShortcutCalculator} from '../hooks/index'\nimport {DateResources} from '../strings.en-us'\nimport {type AnchorElement, isMultiSelection, isRangeSelection, isSingleSelection} from '../types'\nimport {formatDate, getDateFormat, parseDate} from '../utils/parser'\nimport {HiddenDescription} from './HiddenDescription'\nimport styles from './Input.module.css'\nimport {useDatePickerContext} from './Provider'\n\ninterface CalendarButtonProps {\n  Component: React.ComponentType<unknown>\n  position: 'start' | 'end'\n}\n\ninterface UseFreeformDateInputProps {\n  value: Date | null\n  onChange: (value: Date | null) => void\n  calendarButton?: CalendarButtonProps\n}\n\ninterface ValidityProps {\n  status?: 'error' | 'success'\n  message?: string\n}\n\nconst ValidityIndicator = ({status}: ValidityProps) => {\n  if (status === 'success') {\n    return <Octicon icon={CheckIcon} className={styles.successIcon} />\n  } else if (status === 'error') {\n    return <Octicon icon={XIcon} className={styles.dangerIcon} />\n  } else {\n    return null\n  }\n}\n\n/**\n * Generate props for an input where the user can type anything, but `onChange` will only\n * be called when the user has typed a valid date.\n */\nconst useFreeformDateInput = (\n  {value, onChange, calendarButton}: UseFreeformDateInputProps,\n  forwardedRef: React.ForwardedRef<HTMLInputElement>,\n): {\n  inputProps: Partial<TextInputProps & React.RefAttributes<HTMLInputElement>>\n  format: (date: Date) => string\n  resetText: () => void\n  inputRef: React.RefObject<HTMLInputElement>\n  validity: ValidityProps\n  isFocused: () => boolean\n} => {\n  const inputRef = useRef<HTMLInputElement>(null)\n  useRefObjectAsForwardedRef(forwardedRef, inputRef)\n\n  const {\n    configuration: {dateFormat, minDate, maxDate, disableWeekends},\n  } = useDatePickerContext()\n\n  /** Either the user's custom format function or the default formatter. */\n  const format = useCallback(\n    (date: Date | null) => (date ? formatDate(date, getDateFormat(dateFormat)) : ''),\n    [dateFormat],\n  )\n\n  const [validity, setValidity] = useState<ValidityProps>({})\n  const clearValidity = () => setValidity({})\n\n  /** User-inputted raw (unparsed) input value. */\n  const [text, setText] = useState(format(value))\n  const resetText = () => {\n    setText(format(value))\n    clearValidity()\n  }\n\n  // activeElement will be null if nothing is focused\n  const isFocused = useCallback(\n    () => inputRef.current !== null && document.activeElement === inputRef.current,\n    [inputRef],\n  )\n\n  const parse = useCallback((s: string) => parseDate(s, [dateFormat]), [dateFormat])\n\n  /**\n   * We need to parse as the user types to show their results in realtime. But if we overwrite\n   * their input as they type (ie, change 2/22/22 => Feb 2, 2022) they will get frustrated, so\n   * we only update if not focused or if the incoming value is different from what's typed.\n   */\n  useEffect(() => {\n    setText(current => (!isFocused() || parse(current)?.valueOf() !== value?.valueOf() ? format(value) : current))\n  }, [value, format, isFocused, parse])\n\n  const changeHandler = ({target}: React.ChangeEvent<HTMLInputElement>) => {\n    setText(target.value)\n\n    if (!target.value) {\n      setValidity({})\n      onChange(null)\n      return\n    }\n\n    const parsed = parse(target.value)\n\n    if (!parsed) {\n      setValidity({status: 'error'})\n      onChange(null)\n    } else if (minDate && isBefore(parsed, minDate)) {\n      setValidity({status: 'error', message: DateResources.beforeMinDate(minDate)})\n      onChange(null)\n    } else if (maxDate && isAfter(parsed, maxDate)) {\n      setValidity({status: 'error', message: DateResources.afterMaxDate(maxDate)})\n      onChange(null)\n    } else if (disableWeekends && isWeekend(parsed)) {\n      setValidity({status: 'error', message: DateResources.weekend})\n      onChange(null)\n    } else {\n      setValidity({status: 'success'})\n      onChange(parsed)\n    }\n  }\n\n  const onFocus = useCallback(() => {\n    if (text) {\n      setValidity({status: 'success'})\n    } else {\n      setValidity({})\n    }\n  }, [text, setValidity])\n\n  const ValidIcon: React.ComponentType = () => <ValidityIndicator {...validity} />\n  const [leadingVisual, trailingVisual] =\n    calendarButton?.position === 'end' ? [ValidIcon, calendarButton.Component] : [calendarButton?.Component, ValidIcon]\n\n  return {\n    inputProps: {\n      value: text,\n      onChange: changeHandler,\n      onFocus,\n      onBlur: () => clearValidity(),\n      ref: inputRef,\n      leadingVisual,\n      trailingVisual,\n      validationStatus: validity.status === 'error' ? 'error' : undefined,\n      'aria-invalid': validity.status === 'error',\n    },\n    format,\n    resetText,\n    inputRef,\n    validity,\n    isFocused,\n  }\n}\n\ntype SingleDateInputProps = {\n  value: Date | null\n  onChange: (value: Date) => void\n  onFocus?: () => void\n  placeholder?: string\n  'aria-label'?: string\n  fullWidth?: boolean\n  disableShortcuts?: boolean\n  activeRangeEnd?: boolean\n  calendarButton?: {\n    Component: React.ComponentType<unknown>\n    position: 'start' | 'end'\n  }\n  disabled?: boolean\n  className?: string\n}\n\nconst SingleDateInput = forwardRef<HTMLInputElement, SingleDateInputProps>(\n  (\n    {\n      value,\n      onChange,\n      placeholder,\n      'aria-label': ariaLabel,\n      onFocus,\n      fullWidth,\n      disableShortcuts = false,\n      calendarButton,\n      activeRangeEnd = false,\n      className,\n      disabled,\n    },\n    forwardedRef,\n  ) => {\n    const {inputProps, resetText, inputRef, validity} = useFreeformDateInput(\n      {value, onChange: d => d && onChange(d), calendarButton},\n      forwardedRef,\n    )\n\n    /**\n     * In arrow key mode, all text is always selected and the arrow keys can be used to\n     * increment/decrement the value. Typing or clicking again exits arrow key mode.\n     */\n    const arrowKeyModeRef = useRef(false)\n    const selectAll = useSelectAll(inputRef)\n    // Needs to be in a timeout to select all after the value of the input is set, or the selection will clear when value changes\n    setTimeout(() => {\n      // Querying arrowKeyModeRef.current here inside the timeout allows cancelling the select all\n      // on blur to avoid refocusing the input(in Safari). This is why we use ref instead of state.\n      if (arrowKeyModeRef.current) selectAll()\n    })\n\n    const calculateShortcut = useShortcutCalculator()\n    const keyDownHandler = (e: React.KeyboardEvent) => {\n      if (e.defaultPrevented || !arrowKeyModeRef.current || !value) return\n\n      const newValue = calculateShortcut(value, e)\n      if (newValue) {\n        e.preventDefault()\n        onChange(newValue)\n        resetText()\n      }\n    }\n\n    const descriptionId = useId()\n    const errorId = useId()\n\n    return (\n      <div\n        className={clsx(\n          styles.singleDateInputContainer,\n          fullWidth && styles.fullWidth,\n          calendarButton && styles.hasCalendarButton,\n        )}\n      >\n        <TextInput\n          {...inputProps}\n          onFocus={e => {\n            inputProps.onFocus?.(e)\n            if (!disableShortcuts) arrowKeyModeRef.current = true\n            onFocus?.()\n          }}\n          onBlur={e => {\n            arrowKeyModeRef.current = false\n            inputProps.onBlur?.(e)\n            resetText()\n          }}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            inputProps.onChange?.(e)\n            arrowKeyModeRef.current = false\n          }}\n          onKeyDown={keyDownHandler}\n          // Order is onMouseDown -> onFocus -> onClick -> onMouseUp, so mouseDown will set false and then\n          // focus will set true, unless it was already focused in which case it will stay false.\n          // This lets the user click again inside the input to exit arrow key mode.\n          onMouseDown={() => (arrowKeyModeRef.current = false)}\n          onMouseUp={() => {\n            // Sometimes if the user moves their mouse slightly on the initial click, the browser will treat it\n            // as selecting text and then we won't have all text selected, so we have to re-trigger selectAll.\n            if (arrowKeyModeRef.current) selectAll()\n          }}\n          size=\"small\"\n          placeholder={placeholder}\n          aria-label={ariaLabel}\n          aria-describedby={descriptionId}\n          aria-errormessage={errorId}\n          ref={inputRef}\n          className={clsx(styles.singleDateInput, activeRangeEnd && styles.activeRangeEnd, className)}\n          disabled={disabled}\n        />\n        <ValidationErrorPopover id={errorId} message={validity.message} position=\"above\" />\n        <HiddenDescription id={descriptionId}>\n          {!disableShortcuts ? DateResources.shortcutInputDescription : DateResources.dateInputDescription}\n        </HiddenDescription>\n      </div>\n    )\n  },\n)\n\nSingleDateInput.displayName = 'SingleDateInput'\n\ntype MultiDateInputProps = {\n  value: Date[]\n  onChange: (value: Date[]) => void\n  onDateClick: (value: Date) => void\n  fullWidth?: boolean\n  calendarButton?: CalendarButtonProps\n  isAnchor?: boolean\n  disabled?: boolean\n  className?: string\n}\n\nconst MultiDateInput = forwardRef<HTMLInputElement, MultiDateInputProps>(\n  ({value, onChange, fullWidth, onDateClick, calendarButton, isAnchor, className, disabled}, forwardedRef) => {\n    const [typedDate, setTypedDate] = useState<Date | null>(null)\n\n    const clearInput = () => {\n      setTypedDate(null)\n      resetText()\n    }\n\n    const addTypedDate = () => {\n      if (!typedDate) return\n\n      onChange(value.filter(d => !isEqual(d, typedDate)).concat(typedDate))\n      clearInput()\n    }\n\n    const keyDownHandler = (event: React.KeyboardEvent) => {\n      // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n      if (event.key === 'Enter' && typedDate) {\n        event.preventDefault()\n        addTypedDate()\n      }\n    }\n\n    const {inputProps, format, resetText, validity} = useFreeformDateInput(\n      {\n        value: typedDate,\n        onChange: setTypedDate,\n        calendarButton,\n      },\n      forwardedRef,\n    )\n\n    const tokenRemoveHandler = (dateValue: string | number) => {\n      onChange(value.filter(d => d.valueOf() !== dateValue))\n    }\n\n    const tokens: TokenProps[] = useMemo(\n      () =>\n        value.map(date => ({\n          id: date.valueOf(),\n          text: format(date),\n          onClick: () => onDateClick(date),\n        })),\n      [value, format, onDateClick],\n    )\n\n    const descriptionId = useId()\n    const errorId = useId()\n\n    const input = (\n      <TextInputWithTokens\n        {...inputProps}\n        tokens={tokens}\n        onTokenRemove={tokenRemoveHandler}\n        onKeyDown={keyDownHandler}\n        onBlur={e => {\n          inputProps.onBlur?.(e)\n          clearInput()\n        }}\n        className={clsx(styles.multiDateInput, className)}\n        size=\"medium\"\n        aria-describedby={descriptionId}\n        aria-errormessage={isAnchor ? errorId : undefined}\n        disabled={disabled}\n      />\n    )\n\n    return isAnchor ? (\n      <div className={clsx(styles.multiDateInputContainer, styles.fullWidth)}>\n        {input}\n        <ValidationErrorPopover message={validity.message} id={errorId} />\n        <HiddenDescription id={descriptionId}>{DateResources.dateInputDescription}</HiddenDescription>\n      </div>\n    ) : (\n      <FormControl\n        // FormControl does not support className yet (https://github.com/primer/react/issues/4823)\n        // eslint-disable-next-line @github-ui/github-monorepo/no-sx\n        sx={{\n          width: '14ch',\n          maxWidth: '100%',\n          flexGrow: fullWidth ? 1 : 0,\n          position: 'relative',\n        }}\n      >\n        <FormControl.Label visuallyHidden>Selected Dates</FormControl.Label>\n        {typedDate && validity.status === 'success' ? (\n          <FormControl.Validation variant=\"success\" aria-live=\"polite\">\n            Press <KeyboardKey keys=\"enter\" format=\"condensed\" /> to add {format(typedDate)}.\n          </FormControl.Validation>\n        ) : validity.status === 'error' && validity.message ? (\n          <FormControl.Validation variant=\"error\" aria-live=\"polite\">\n            {validity.message}\n          </FormControl.Validation>\n        ) : (\n          <FormControl.Caption aria-live=\"polite\">\n            Hold <KeyboardKey keys=\"Mod\" format=\"condensed\" /> to click multiple dates.\n          </FormControl.Caption>\n        )}\n        {input}\n        <HiddenDescription id={descriptionId}>{DateResources.dateInputDescription}</HiddenDescription>\n      </FormControl>\n    )\n  },\n)\n\nMultiDateInput.displayName = 'MultiDateInput'\n\nconst CalendarIconButton = ({onAction}: {onAction: (event: React.KeyboardEvent | React.MouseEvent) => void}) => (\n  <IconButton\n    variant=\"invisible\"\n    icon={CalendarIcon}\n    aria-label=\"Open date picker\"\n    type=\"button\"\n    onClick={onAction}\n    onKeyDown={onAction}\n    size=\"small\"\n    className={styles.calendarIconButton}\n  />\n)\n\ntype DatePickerTextInputProps = {\n  fullWidth?: boolean\n  /** If this is used as the anchor, this ref is given to the `AnchoredOverlay` to position the overlay. */\n  anchorRef?: React.ForwardedRef<AnchorElement>\n  disabled?: boolean\n  className?: string\n}\n\nexport interface DatePickerTextInput {\n  focus(): void\n}\n\n/** Internal text box(es) to show inside the datepicker panel. */\nexport const DatePickerTextInput = forwardRef<DatePickerTextInput, DatePickerTextInputProps>(\n  ({fullWidth, anchorRef, className, disabled}, ref) => {\n    const {\n      selection,\n      onDateInput,\n      activeRangeEnd,\n      setActiveRangeEnd,\n      setFocusDate,\n      configuration: {variant, iconPlacement},\n    } = useDatePickerContext()\n\n    const isAnchor = anchorRef !== undefined\n\n    const firstRef = useRef<HTMLInputElement>(null)\n    const secondRef = useRef<HTMLInputElement>(null)\n\n    useImperativeHandle(ref, () => ({\n      focus: () => (activeRangeEnd === 'to' ? secondRef.current?.focus() : firstRef.current?.focus()),\n    }))\n\n    const onAction = useOnAnchorAction()\n\n    const calendarButtonProps = useMemo<CalendarButtonProps | undefined>(\n      () =>\n        isAnchor && iconPlacement !== 'none'\n          ? {\n              Component: () => <CalendarIconButton onAction={onAction} />,\n              position: iconPlacement,\n            }\n          : undefined,\n      [iconPlacement, isAnchor, onAction],\n    )\n\n    const rangeEndCalendarButtonProps = useMemo<CalendarButtonProps | undefined>(\n      () =>\n        isAnchor && iconPlacement !== 'none'\n          ? {\n              Component: () => (\n                <CalendarIconButton\n                  onAction={event => {\n                    setActiveRangeEnd('to')\n                    onAction(event)\n                  }}\n                />\n              ),\n              position: iconPlacement,\n            }\n          : undefined,\n      [iconPlacement, isAnchor, onAction, setActiveRangeEnd],\n    )\n\n    const input =\n      isRangeSelection(selection) && variant === 'range' ? (\n        <div ref={anchorRef} className={styles.rangeInputs}>\n          <SingleDateInput\n            aria-label=\"Start date\"\n            ref={firstRef}\n            value={selection?.from ?? null}\n            onChange={from => onDateInput({from, to: selection?.to ?? null})}\n            onFocus={() => setActiveRangeEnd('from')}\n            fullWidth={fullWidth}\n            disableShortcuts={isAnchor}\n            activeRangeEnd={!isAnchor && activeRangeEnd === 'from'}\n            calendarButton={calendarButtonProps}\n            className={className}\n            disabled={disabled}\n          />\n          <span className={styles.rangeInputsSeparator}>{' - '}</span>\n          <SingleDateInput\n            aria-label=\"End date\"\n            ref={secondRef}\n            value={selection?.to ?? null}\n            onChange={to => onDateInput({from: selection?.from ?? to, to})}\n            onFocus={() => setActiveRangeEnd('to')}\n            fullWidth={fullWidth}\n            disableShortcuts={isAnchor}\n            activeRangeEnd={!isAnchor && activeRangeEnd === 'to'}\n            calendarButton={rangeEndCalendarButtonProps}\n            className={className}\n            disabled={disabled}\n          />\n        </div>\n      ) : isSingleSelection(selection) && variant === 'single' ? (\n        <SingleDateInput\n          aria-label={isAnchor ? undefined : 'Selected date'}\n          ref={anchorRef ?? firstRef}\n          value={selection}\n          onChange={onDateInput}\n          fullWidth={fullWidth}\n          disableShortcuts={isAnchor}\n          calendarButton={calendarButtonProps}\n          className={className}\n          disabled={disabled}\n        />\n      ) : isMultiSelection(selection) && variant === 'multi' ? (\n        <MultiDateInput\n          aria-label={isAnchor ? undefined : 'Selected dates'}\n          ref={anchorRef ?? firstRef}\n          value={selection ?? []}\n          onChange={onDateInput}\n          onDateClick={setFocusDate}\n          fullWidth={fullWidth}\n          isAnchor={isAnchor}\n          calendarButton={calendarButtonProps}\n          className={className}\n          disabled={disabled}\n        />\n      ) : null\n\n    return isAnchor ? input : <div className={styles.container}>{input}</div>\n  },\n)\n\nDatePickerTextInput.displayName = 'DatePickerTextInput'\n\ntry{ ValidityIndicator.displayName ||= 'ValidityIndicator' } catch {}\ntry{ ValidIcon.displayName ||= 'ValidIcon' } catch {}\ntry{ CalendarIconButton.displayName ||= 'CalendarIconButton' } catch {}","import {testIdProps} from '@github-ui/test-id-props'\nimport {clsx} from 'clsx'\nimport {eachDayOfInterval, endOfWeek, format, getDaysInMonth, lastDayOfMonth, startOfWeek} from 'date-fns'\nimport chunk from 'lodash-es/chunk'\nimport {type ReactNode, useId, useMemo} from 'react'\n\nimport type {DayNumber, DayOfWeek} from '../types'\nimport {BlankDay, Day, WeekdayHeaderDay} from './Day'\nimport styles from './Month.module.css'\nimport {useDatePickerContext} from './Provider'\n\nconst weekdayEnum: Record<DayOfWeek, DayNumber> = {\n  Sunday: 0,\n  Monday: 1,\n  Tuesday: 2,\n  Wednesday: 3,\n  Thursday: 4,\n  Friday: 5,\n  Saturday: 6,\n}\n\nexport interface MonthProps {\n  date: Date\n  'aria-describedby': string\n}\n\nexport const Month = ({date, 'aria-describedby': descriptionId}: MonthProps) => {\n  const {\n    configuration: {weekStartsOn, compressedHeader, variant},\n  } = useDatePickerContext()\n  const title = useMemo(() => format(date, 'MMMM yyyy'), [date])\n\n  const weekdayHeaders = useMemo(() => {\n    const now = new Date(date)\n    const weekOptions: {weekStartsOn: DayNumber} = {\n      weekStartsOn: weekdayEnum[weekStartsOn],\n    }\n\n    return eachDayOfInterval({start: startOfWeek(now, weekOptions), end: endOfWeek(now, weekOptions)}).map(d => (\n      <WeekdayHeaderDay key={`weekday-${d.toISOString()}-header`} date={d} />\n    ))\n  }, [weekStartsOn, date])\n\n  const dayComponents = useMemo(() => {\n    const components: ReactNode[] = []\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1)\n\n    // Adding blank spots for previous month\n    const preBlanks = (firstDay.getDay() + (7 - weekdayEnum[weekStartsOn])) % 7\n    for (let i = 0; i < preBlanks; i++) {\n      components.push(<BlankDay key={`month-pre-blank-${i}`} />)\n    }\n\n    for (let i = 1; i <= getDaysInMonth(firstDay); i++) {\n      const day = new Date(date.getFullYear(), date.getMonth(), i)\n      components.push(<Day key={`day-component-${day.toString()}`} date={day} />)\n    }\n\n    const lastDay = lastDayOfMonth(firstDay)\n    // Adding blank spots for next month\n    const postBlanks = (lastDay.getDay() + (7 - weekdayEnum[weekStartsOn])) % 7\n    for (let i = 6; i > postBlanks; i--) {\n      components.push(<BlankDay key={`month-post-blank-${i}`} />)\n    }\n    const rows = chunk(components, 7).map((days, index) => (\n      <div className={styles.row} key={`month-week-${index}`} role=\"row\" aria-label={`Week ${index + 1}`}>\n        {days}\n      </div>\n    ))\n    return rows\n  }, [weekStartsOn, date])\n\n  const labelId = useId()\n\n  // Hide the label with clip-path so it remains in the document for screen readers\n  // Column headers are hidden because days are labeled with the week day name\n\n  return (\n    <div\n      className={styles.container}\n      aria-labelledby={labelId}\n      aria-describedby={descriptionId}\n      role=\"dialog\"\n      {...testIdProps('month')}\n    >\n      <span className={clsx(styles.title, compressedHeader && styles.compressedHeader)} aria-live=\"polite\" id={labelId}>\n        {title}\n      </span>\n      <div role=\"grid\" aria-multiselectable={variant === 'multi'}>\n        <div className={styles.row} role=\"row\" aria-hidden>\n          {weekdayHeaders}\n        </div>\n        {dayComponents}\n      </div>\n    </div>\n  )\n}\n\ntry{ Month.displayName ||= 'Month' } catch {}","import {AnchoredOverlay, type AnchoredOverlayProps} from '@primer/react'\n\nimport {DatePickerPanel} from './Panel'\nimport {useDatePickerContext} from './Provider'\n\nexport type DatePickerAnchoredOverlayProps = Partial<Omit<AnchoredOverlayProps, 'renderAnchor' | 'anchorRef'>>\n\nexport const DatePickerOverlay = (externalProps: DatePickerAnchoredOverlayProps) => {\n  const {isOpen, close, open, anchorRef} = useDatePickerContext()\n\n  return (\n    <AnchoredOverlay\n      focusTrapSettings={{restoreFocusOnCleanUp: true}}\n      focusZoneSettings={{disabled: true}}\n      open={isOpen}\n      onClose={close}\n      onOpen={open}\n      renderAnchor={null}\n      anchorRef={anchorRef}\n      overlayProps={{\n        'aria-label': 'Date Picker',\n        role: 'dialog',\n        'aria-modal': 'true',\n      }}\n      {...externalProps}\n    >\n      <DatePickerPanel />\n    </AnchoredOverlay>\n  )\n}\n\ntry{ DatePickerOverlay.displayName ||= 'DatePickerOverlay' } catch {}","import {isMacOS} from '@github-ui/get-os'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {type Direction, FocusKeys} from '@primer/behaviors'\nimport {ChevronLeftIcon, ChevronRightIcon} from '@primer/octicons-react'\nimport {Button, Octicon, useFocusZone} from '@primer/react'\nimport {addMonths, format, isAfter, isBefore, subMonths} from 'date-fns'\nimport {type ReactNode, useCallback, useId, useMemo, useRef} from 'react'\nimport {flushSync} from 'react-dom'\n\nimport {useShortcutCalculator} from '../hooks/index'\nimport {DateResources} from '../strings.en-us'\nimport type {Months} from '../types'\nimport {sanitizeDate} from '../utils/functions'\nimport {HiddenDescription} from './HiddenDescription'\nimport {DatePickerTextInput} from './Input'\nimport {Month} from './Month'\nimport styles from './Panel.module.css'\nimport {useDatePickerContext} from './Provider'\n\nconst months: Months[] = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n\nconst getDateElement = (panelRef: React.RefObject<HTMLDivElement>, date: Date) =>\n  panelRef.current?.querySelector<HTMLElement>(`[data-date=\"${format(date, 'MM/dd/yyyy')}\"]`) ?? undefined\n\nconst getFirstEnabledDate = (panelRef: React.RefObject<HTMLDivElement>) =>\n  panelRef.current?.querySelector<HTMLElement>('[data-date][aria-disabled=\"false\"]') ?? undefined\n\nexport const DatePickerPanel = () => {\n  const {\n    configuration: {\n      minDate,\n      maxDate,\n      confirmation,\n      view,\n      showTodayButton: configShowTodayButton,\n      showClearButton,\n      compressedHeader,\n      showInputs,\n      variant,\n    },\n    isDirty,\n    saveValue,\n    currentViewingDate,\n    goToMonth,\n    onClearSelection,\n    onDateHover,\n    setFocusDate,\n    inputRef,\n    focusDate,\n    activeRangeEnd,\n  } = useDatePickerContext()\n  const panelRef = useRef(null)\n  const datePanelRef = useRef<HTMLDivElement>(null)\n\n  const calculateShortcutDate = useShortcutCalculator()\n\n  const getNextFocusable = useCallback(\n    (_: Direction, from: Element | undefined, event: KeyboardEvent): HTMLElement | undefined => {\n      const rawFromDate = from?.getAttribute('data-date')\n      const fromDate = sanitizeDate(rawFromDate ? new Date(rawFromDate) : new Date())\n      const newDate = calculateShortcutDate(fromDate, event) ?? fromDate\n\n      onDateHover(newDate)\n\n      // setFocusDate updates the view to ensure the new date is visible. Thus we need flushSync to ensure that the\n      // new date element is visible and rendered before we can look for it and focus it.\n      flushSync(() => setFocusDate(newDate))\n\n      return getDateElement(panelRef, newDate)\n    },\n    [calculateShortcutDate, onDateHover, setFocusDate],\n  )\n\n  useFocusZone(\n    {\n      containerRef: datePanelRef,\n      bindKeys: FocusKeys.ArrowAll | FocusKeys.HomeAndEnd | FocusKeys.PageUpDown,\n      focusInStrategy: () => getDateElement(panelRef, focusDate) ?? getFirstEnabledDate(panelRef),\n      getNextFocusable,\n    },\n    [getNextFocusable, focusDate],\n  )\n\n  const previousDisabled = useMemo(() => {\n    if (!minDate) return false\n\n    const previous = subMonths(currentViewingDate, 1)\n    return minDate.getFullYear() >= previous.getFullYear() && minDate.getMonth() > previous.getMonth()\n  }, [minDate, currentViewingDate])\n\n  const nextDisabled = useMemo(() => {\n    if (!maxDate) return false\n\n    const next = addMonths(currentViewingDate, view === '2-month' ? 2 : 1)\n    return maxDate.getFullYear() <= next.getFullYear() && maxDate.getMonth() < next.getMonth()\n  }, [maxDate, view, currentViewingDate])\n\n  const showTodayButton = useMemo(() => {\n    if (!configShowTodayButton) return false\n    const today = sanitizeDate(new Date())\n    if (minDate && isAfter(minDate, today)) return false\n    if (maxDate && isBefore(maxDate, today)) return false\n    return true\n  }, [maxDate, minDate, configShowTodayButton])\n\n  const showApplyButton = confirmation\n\n  const currentMonth = useMemo(() => currentViewingDate.getMonth(), [currentViewingDate])\n  const currentYear = useMemo(() => currentViewingDate.getFullYear(), [currentViewingDate])\n\n  const headerSelectionHandler = useCallback(\n    (e: React.ChangeEvent<HTMLSelectElement>) => {\n      const int = parseInt(e.currentTarget.value, 10)\n      if (e.currentTarget.id === 'picker-header-year') {\n        goToMonth(new Date(int, currentMonth))\n      } else {\n        goToMonth(new Date(currentYear, int))\n      }\n    },\n    [currentMonth, currentYear, goToMonth],\n  )\n\n  const getMonthPicker = useMemo(() => {\n    let filteredMonths = months\n    const monthElements: ReactNode[] = []\n    if (minDate && currentYear === minDate.getFullYear()) {\n      filteredMonths = filteredMonths.filter(month => months.indexOf(month) >= minDate.getMonth())\n    }\n    if (maxDate && currentYear === maxDate.getFullYear()) {\n      filteredMonths = filteredMonths.filter(month => months.indexOf(month) <= maxDate.getMonth())\n    }\n    for (const month of filteredMonths) {\n      monthElements.push(\n        <option className={styles.option} key={month} value={months.indexOf(month)}>\n          {month}\n        </option>,\n      )\n    }\n\n    return (\n      <select\n        id=\"picker-header-month\"\n        onChange={headerSelectionHandler}\n        className={styles.picker}\n        value={currentMonth}\n        aria-label=\"Go to month\"\n      >\n        {monthElements}\n      </select>\n    )\n  }, [minDate, maxDate, currentMonth, currentYear, headerSelectionHandler])\n\n  const getYearPicker = useMemo(() => {\n    const years: ReactNode[] = []\n    const todaysYear = sanitizeDate(new Date()).getFullYear()\n    const minYear = minDate ? minDate.getFullYear() : todaysYear - 200\n    const maxYear = maxDate ? maxDate.getFullYear() : todaysYear + 200\n    for (let i = minYear; i <= maxYear; i++) {\n      years.push(\n        <option className={styles.option} key={i} value={i}>\n          {i}\n        </option>,\n      )\n    }\n\n    return (\n      <select\n        className={styles.picker}\n        id=\"picker-header-year\"\n        onChange={headerSelectionHandler}\n        value={currentYear}\n        aria-label=\"Go to year\"\n      >\n        {years}\n      </select>\n    )\n  }, [minDate, maxDate, currentYear, headerSelectionHandler])\n\n  // The date calculation is cheap, but memoizing it preserves the date object reference\n  // to avoid unnecessary re-rendering of the second month and its Day children.\n  const secondMonthDate = useMemo(\n    () => (view === '2-month' ? addMonths(currentViewingDate, 1) : null),\n    [view, currentViewingDate],\n  )\n\n  const showButtons = showClearButton || showTodayButton || showApplyButton\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    // Submit on ctrl/cmd+enter, but not when variant is multi because ctrl/cmd+enter is there used to add multiple dates\n    // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n    const modifierKey = isMacOS() ? event.metaKey : event.ctrlKey\n    // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n    if (isDirty && modifierKey && event.key === 'Enter' && variant !== 'multi') {\n      event.stopPropagation()\n      saveValue()\n    }\n  }\n\n  const goToToday = useCallback(() => {\n    setFocusDate(sanitizeDate(new Date()))\n  }, [setFocusDate])\n\n  const clearDate = useCallback(() => {\n    onClearSelection()\n  }, [onClearSelection])\n\n  const descriptionId = useId()\n\n  const description =\n    variant === 'single'\n      ? DateResources.monthSingleDescription\n      : variant === 'multi'\n        ? DateResources.monthMultiDescription(isMacOS())\n        : variant === 'range' && activeRangeEnd !== null\n          ? DateResources.monthRangeDescription[activeRangeEnd]\n          : ''\n\n  return (\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    <div className={styles.container} ref={panelRef} onKeyDown={handleKeyDown} {...testIdProps('datepicker-panel')}>\n      <header className={styles.topNav}>\n        {compressedHeader && (\n          <div {...testIdProps('datepicker-compressed-header')} className={styles.pickers}>\n            {getMonthPicker}\n            {getYearPicker}\n          </div>\n        )}\n        <Button\n          size=\"small\"\n          className={styles.arrowButton}\n          onClick={() => goToMonth(subMonths(currentViewingDate, 1))}\n          disabled={previousDisabled}\n          aria-label=\"Go to previous month\"\n          {...testIdProps('previous-button')}\n        >\n          <Octicon icon={ChevronLeftIcon} className={styles.icon} />\n        </Button>\n        <Button\n          size=\"small\"\n          className={styles.arrowButton}\n          onClick={() => goToMonth(addMonths(currentViewingDate, 1))}\n          disabled={nextDisabled}\n          aria-label=\"Go to next month\"\n          {...testIdProps('next-button')}\n        >\n          <Octicon icon={ChevronRightIcon} className={styles.icon} />\n        </Button>\n      </header>\n\n      <div className={styles.months} ref={datePanelRef}>\n        <HiddenDescription id={descriptionId}>{description}</HiddenDescription>\n\n        <Month date={currentViewingDate} aria-describedby={descriptionId} />\n        {secondMonthDate && <Month date={secondMonthDate} aria-describedby={descriptionId} />}\n      </div>\n\n      {(showButtons || showInputs) && (\n        <footer className={styles.footer}>\n          {(view === '1-month' || !showButtons || variant === 'multi') && showInputs && (\n            <div className={styles.footerRow}>\n              <DatePickerTextInput ref={inputRef} fullWidth />\n            </div>\n          )}\n          {showButtons && (\n            <div className={styles.footerRow}>\n              <div className={styles.footerButtons}>\n                {showClearButton && (\n                  <Button\n                    variant=\"invisible\"\n                    size=\"small\"\n                    onClick={clearDate}\n                    aria-label=\"Clear selected date\"\n                    disabled={!currentViewingDate}\n                  >\n                    Clear\n                  </Button>\n                )}\n                {showTodayButton && (\n                  <Button\n                    variant=\"invisible\"\n                    size=\"small\"\n                    onClick={goToToday}\n                    aria-label=\"Go to today's date\"\n                    disabled={\n                      currentViewingDate.getFullYear() === new Date().getFullYear() &&\n                      currentViewingDate.getMonth() === new Date().getMonth()\n                    }\n                  >\n                    Today\n                  </Button>\n                )}\n              </div>\n              {view === '2-month' && showInputs && variant !== 'multi' && <DatePickerTextInput ref={inputRef} />}\n              {showApplyButton && (\n                <Button\n                  variant=\"primary\"\n                  size=\"small\"\n                  disabled={!isDirty}\n                  onClick={() => saveValue()}\n                  aria-label=\"Apply selection and close\"\n                  type=\"submit\"\n                  {...testIdProps('datepicker-apply')}\n                >\n                  Apply\n                </Button>\n              )}\n            </div>\n          )}\n        </footer>\n      )}\n    </div>\n  )\n}\n\ntry{ DatePickerPanel.displayName ||= 'DatePickerPanel' } catch {}","import {useRefObjectAsForwardedRef, useResizeObserver} from '@primer/react'\nimport {addDays, addMonths, addYears, eachDayOfInterval, isAfter, isBefore, isEqual, setDate} from 'date-fns'\nimport {createContext, type RefObject, useCallback, useContext, useEffect, useMemo, useRef, useState} from 'react'\n\nimport {\n  type AnchorElement,\n  type CloseGesture,\n  type ConfirmCloseAction,\n  type DatePickerContext,\n  type InternalRangeSelection,\n  type InternalSelection,\n  isCompleteRangeSelection,\n  isMultiSelection,\n  isRangeSelection,\n  isSingleSelection,\n  type OpenGesture,\n  type RangeEnd,\n  type SelectionModifiers,\n  type SubmitGesture,\n} from '../types'\nimport {clamp, closestWeekday, getFocusDate, isBetween, sanitizeDate, sanitizeSelection} from '../utils/functions'\nimport {fitRange} from '../utils/range'\nimport type {DatePickerProps} from './DatePicker'\nimport type {DatePickerTextInput} from './Input'\n\nconst Context = createContext<DatePickerContext | null>(null)\n\nexport const useDatePickerContext = () => {\n  const context = useContext(Context)\n  if (!context) {\n    throw new Error('useDatePickerContext must be used inside a DatePickerProvider')\n  }\n  return context\n}\n\nexport type DatePickerProviderProps = DatePickerProps & {\n  children?: React.ReactNode\n  forwardedAnchorRef: React.ForwardedRef<AnchorElement>\n  // Using Omit<> to remove these from the type of DatePickerProps would also drop the variant-specific props like maxSelections\n  anchoredOverlayProps?: undefined\n  configuration?: undefined\n}\n\nexport const DatePickerProvider = ({\n  children,\n  anchor: externalAnchor = 'button',\n  anchorClassName,\n  forwardedAnchorRef,\n  confirmation: externalConfirmation = false,\n  confirmUnsavedClose = false,\n  compressedHeader = false,\n  dateFormat = 'short',\n  disabled,\n  disableWeekends = false,\n  iconPlacement = 'start',\n  maxDate: externalMaxDate,\n  minDate: externalMinDate,\n  showTodayButton = true,\n  showClearButton = false,\n  view: externalView = '1-month',\n  weekStartsOn = 'Sunday',\n  open: externalOpen,\n  onClose: externalOnClose,\n  onOpen: externalOnOpen,\n  placeholder = 'Choose Date...',\n  value: unsanitizedExternalValue,\n  showInputs: externalShowInputs = true,\n  ...variantSpecificProps // keep the props that depend on the discriminated union together so they can remain type-safe\n}: DatePickerProviderProps) => {\n  const externalValue = useMemo(() => sanitizeSelection(unsanitizedExternalValue), [unsanitizedExternalValue])\n\n  /**\n   * Send an onChange event to the outside world. If the `selection` type does not match\n   * the variant of this datepicker, the event will be ignored.\n   */\n  const onChange = useCallback(\n    (selection: InternalSelection) => {\n      if (!variantSpecificProps.onChange) return\n\n      if (!variantSpecificProps.variant && isSingleSelection(selection)) {\n        variantSpecificProps.onChange(selection)\n      } else if (variantSpecificProps.variant === 'single' && isSingleSelection(selection)) {\n        variantSpecificProps.onChange(selection)\n      } else if (variantSpecificProps.variant === 'multi' && isMultiSelection(selection)) {\n        variantSpecificProps.onChange(selection)\n      } else if (variantSpecificProps.variant === 'range' && isCompleteRangeSelection(selection)) {\n        variantSpecificProps.onChange(selection)\n      }\n    },\n    // eslint wants variantSpecificProps in the deps array, but that object is rebuilt on every render.\n    // It wants that because the 'this' context of the onChange call can get outdated otherwise (it's wierd),\n    // but the `this` context is already unusable in arrow function components anyway so it's not really a concern.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [variantSpecificProps.variant, variantSpecificProps.onChange],\n  )\n\n  // Previous Selections for reverting\n  const [previousSelection, setPreviousSelection] = useState<InternalSelection | undefined>(externalValue)\n\n  const [selection, _setSelection] = useState<InternalSelection>(externalValue)\n  const [isDirty, setIsDirty] = useState(false)\n  const setSelection = useCallback((s: InternalSelection) => {\n    _setSelection(s)\n    // do not consider half-complete range selection to be 'dirty'\n    setIsDirty(s === null || !isRangeSelection(s) || s.to !== null)\n  }, [])\n\n  const [hoverRange, setHoverRange] = useState<InternalRangeSelection | null>(null)\n  // Current viewing month(s)\n  const [currentViewingDate, setCurrentViewingDate] = useState(getFocusDate(externalValue) ?? sanitizeDate(new Date()))\n  // Whether the device supports multi-month viewing\n  const [multiMonthSupport, setMultiMonthSupport] = useState(true)\n  const [confirmingCloseGesture, setConfirmingCloseGesture] = useState<CloseGesture | undefined>(undefined)\n\n  const confirmation = externalConfirmation || confirmUnsavedClose\n\n  const maxDate = useMemo(() => {\n    if (!externalMaxDate) return\n    const sanitized = sanitizeDate(externalMaxDate)\n    return disableWeekends ? closestWeekday(sanitized, 'backward') : sanitized\n  }, [externalMaxDate, disableWeekends])\n\n  const minDate = useMemo(() => {\n    if (!externalMinDate) return\n    const sanitized = sanitizeDate(externalMinDate)\n    return disableWeekends ? closestWeekday(sanitized, 'forward') : sanitized\n  }, [externalMinDate, disableWeekends])\n\n  const view = multiMonthSupport ? externalView : '1-month'\n\n  // Control for focus for both keyboard and mouse\n  const [focusDate, _setFocusDate] = useState(currentViewingDate)\n  // Keep focused date in view\n  const setFocusDate = useCallback(\n    (newFocusDate: Date) => {\n      setCurrentViewingDate(prevViewingDate => {\n        if (view === '1-month') {\n          if (\n            prevViewingDate.getMonth() === newFocusDate.getMonth() &&\n            prevViewingDate.getFullYear() === newFocusDate.getFullYear()\n          ) {\n            return prevViewingDate\n          } else {\n            return setDate(newFocusDate, 1)\n          }\n        }\n\n        /**\n         * This logic is rough, so buckle up.\n         * We want to set the currently shown months based on what has focus. If the focus leaves what we're able to view,\n         * we want to be able to change the currently shown month. However, this gets complicated with the 2-month view.\n         * FIRST: If it's the same month/year: Easy\n         * SECOND: If it's the next month, but same year: Done\n         * THIRD: If it's the next month AND next year, but it's January (i.e. we're viewing Dec/Jan): Good to go\n         */\n        if (\n          (prevViewingDate.getMonth() === newFocusDate.getMonth() &&\n            prevViewingDate.getFullYear() === newFocusDate.getFullYear()) ||\n          (addMonths(prevViewingDate, 1).getMonth() === newFocusDate.getMonth() &&\n            prevViewingDate.getFullYear() === newFocusDate.getFullYear()) ||\n          (addMonths(prevViewingDate, 1).getMonth() === newFocusDate.getMonth() &&\n            newFocusDate.getMonth() === 0 &&\n            addYears(prevViewingDate, 1).getFullYear() === newFocusDate.getFullYear())\n        ) {\n          return prevViewingDate\n        } else {\n          return setDate(newFocusDate, 1)\n        }\n      })\n      _setFocusDate(newFocusDate)\n    },\n    [view],\n  )\n\n  // Extract variant specific props to static values type-safely\n  const variant = variantSpecificProps.variant ?? 'single'\n  const maxRangeSize = variantSpecificProps.variant === 'range' ? variantSpecificProps.maxRangeSize : undefined\n  const minRangeSize = variantSpecificProps.variant === 'range' ? variantSpecificProps.minRangeSize : undefined\n  const maxSelections = variantSpecificProps.variant === 'multi' ? variantSpecificProps.maxSelections : undefined\n\n  const showInputs = externalShowInputs && confirmation\n  const [activeRangeEnd, setActiveRangeEnd] = useState<RangeEnd | null>(variant === 'range' ? 'from' : null)\n\n  /**\n   * The end of the range that can be adjusted to make the range fit within the allowed size. When inputs are enabled,\n   * we adjust the other end of the range so that the user can still make changes to the current input. When inputs\n   * are disabled, we adjust the current end of the range so that we stop accepting changes to indicate invalidity.\n   */\n  const adjustableRangeEnd = showInputs ? (activeRangeEnd === 'to' ? 'from' : 'to') : activeRangeEnd ?? 'from'\n\n  const inputRef = useRef<DatePickerTextInput>(null)\n  const focusInput = () => setTimeout(() => inputRef.current?.focus())\n\n  // If the passed anchor is a ref object, use that instead of the internal one\n  const internalAnchorRef = useRef<AnchorElement>(null)\n  const [anchorRef, anchor] =\n    typeof externalAnchor === 'string' || typeof externalAnchor === 'function'\n      ? [internalAnchorRef, externalAnchor]\n      : [externalAnchor as RefObject<AnchorElement>, null]\n\n  useRefObjectAsForwardedRef(forwardedAnchorRef, anchorRef)\n\n  // For external open control\n  const [isOpen, setIsOpen] = useState(externalOpen ?? false)\n  useEffect(() => {\n    if (externalOpen !== undefined) setIsOpen(externalOpen)\n  }, [externalOpen])\n\n  const onOpen = useCallback(\n    (gesture: OpenGesture) => {\n      if (disabled) return\n      if (externalOpen === undefined) setIsOpen(true)\n      externalOnOpen?.(gesture)\n      focusInput()\n    },\n    [externalOpen, externalOnOpen, disabled],\n  )\n\n  const onClose = useCallback(\n    (gesture: CloseGesture | SubmitGesture) => {\n      if (externalOpen === undefined) setIsOpen(false)\n      externalOnClose?.(gesture)\n    },\n    [externalOpen, externalOnClose],\n  )\n\n  /**\n   * When the selection changes, set the focus to that date and fire the callback\n   */\n  useEffect(() => {\n    const newFocusDate = getFocusDate(selection, activeRangeEnd)\n    if (newFocusDate) setFocusDate(newFocusDate)\n  }, [selection, activeRangeEnd, setFocusDate])\n\n  useEffect(() => {\n    if (JSON.stringify(externalValue) !== JSON.stringify(selection)) {\n      setSelection(externalValue)\n      setPreviousSelection(externalValue)\n      setIsDirty(false) // do not consider external value to be 'dirty' since we're effectively reverting to it\n    }\n    // Only want to update when the external value changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [externalValue])\n\n  /**\n   * Jump to a specific month/year\n   */\n  const goToMonth = useCallback(\n    (date: Date) => {\n      let newDate = date\n      if (minDate && isBefore(date, minDate)) {\n        newDate = minDate\n      } else if (maxDate && isAfter(date, maxDate)) {\n        newDate = maxDate\n      }\n\n      setCurrentViewingDate(sanitizeDate(newDate))\n    },\n    [minDate, maxDate],\n  )\n\n  const saveValue = useCallback(\n    (updatedSelection: InternalSelection, submitGesture?: SubmitGesture) => {\n      if (updatedSelection) {\n        setSelection(updatedSelection)\n        setPreviousSelection(updatedSelection)\n      }\n      setIsDirty(false)\n      onChange(updatedSelection)\n      if (isOpen) onClose(submitGesture ?? 'submit-click')\n    },\n    [onClose, onChange, setSelection, isOpen],\n  )\n\n  const saveValueHandler = useCallback(\n    (updatedSelection?: InternalSelection) => {\n      saveValue(updatedSelection ?? selection)\n    },\n    [saveValue, selection],\n  )\n\n  const revertValue = useCallback(() => {\n    setSelection(previousSelection ?? null)\n    setIsDirty(false)\n    setActiveRangeEnd(variant === 'range' ? 'from' : null)\n    focusInput()\n  }, [previousSelection, variant, setSelection])\n\n  // #region EVENT HANDLERS\n  /**\n   * When the datepicker attempts to close, if confirmUnsavedChanges is enabled, this will fire the modal\n   */\n  const closeHandler = useCallback(\n    (gesture: CloseGesture) => {\n      // Already confirming another close. This happens when the user clicks the confirm dialog, which is outside the overlay\n      if (confirmingCloseGesture !== undefined) return\n\n      if (isDirty && confirmUnsavedClose) {\n        setConfirmingCloseGesture(gesture)\n      } else if (isDirty && !confirmation) {\n        saveValue(selection)\n      } else {\n        onClose(gesture)\n        revertValue()\n      }\n    },\n    [confirmingCloseGesture, isDirty, confirmUnsavedClose, confirmation, saveValue, selection, onClose, revertValue],\n  )\n\n  /**\n   * Handle the confirm dialog closing (either confirming or discarding).\n   */\n  const confirmCloseHandler = useCallback(\n    (action: ConfirmCloseAction) => {\n      if (confirmingCloseGesture === undefined) return\n\n      if (action === 'confirm') {\n        // Ignores the real close gesture and closes with 'submit' gesture instead\n        saveValue(selection)\n      } else {\n        onClose(confirmingCloseGesture)\n        revertValue()\n      }\n\n      setConfirmingCloseGesture(undefined)\n    },\n    [confirmingCloseGesture, saveValue, onClose, revertValue, selection],\n  )\n\n  /**\n   * This handles input when using a text input\n   */\n  const inputHandler = useCallback(\n    (updatedSelection: InternalSelection) => {\n      let newSelection: InternalSelection | undefined\n\n      switch (variant) {\n        case 'single': {\n          if (!(updatedSelection instanceof Date)) break\n\n          newSelection = clamp(updatedSelection, {minDate, maxDate})\n          break\n        }\n        case 'multi': {\n          if (!isMultiSelection(updatedSelection)) break\n\n          newSelection = (updatedSelection ?? [])\n            .filter(d => isBetween(d, {minDate, maxDate}))\n            .slice(-(maxSelections ?? 0))\n\n          break\n        }\n        case 'range': {\n          if (!isRangeSelection(updatedSelection) || updatedSelection === null) break\n\n          newSelection = fitRange(updatedSelection, {\n            maxDate,\n            minDate,\n            maxRangeSize,\n            minRangeSize,\n            adjustableRangeEnd,\n            disableWeekends,\n          })\n          break\n        }\n      }\n\n      if (newSelection) {\n        // Save if user is typing in input anchor without opening picker\n        if (isOpen) setSelection(newSelection)\n        else saveValue(newSelection)\n      }\n    },\n    [\n      maxDate,\n      minDate,\n      variant,\n      maxSelections,\n      maxRangeSize,\n      minRangeSize,\n      isOpen,\n      saveValue,\n      setSelection,\n      adjustableRangeEnd,\n      disableWeekends,\n    ],\n  )\n\n  const clearSelectionHandler = useCallback(() => {\n    setSelection(null)\n    saveValue(null)\n  }, [setSelection, saveValue])\n\n  /**\n   * Handles all selection events, both keyboard and mouse related\n   * @param preserveFocus If true, user focus will not be reset when selecting. This is useful\n   * for keyboard users, especially when range selection would auto-move focus to the end-date\n   * input box.\n   */\n  const selectionHandler = useCallback(\n    (date: Date, modifiers: SelectionModifiers, preserveFocus = false, submitGesture?: SubmitGesture) => {\n      if (variant === 'multi' && isMultiSelection(selection)) {\n        let targetDates = [date]\n\n        // We mimic the File Explorer selection behavior here. If the user is holding shift, we select all dates and\n        // if user is holding shift and ctrl/cmd, ctrl/cmd takes precedence and we add the selected date.\n        if (modifiers.range && !modifiers.multiple) {\n          const lastSelectedDate = selection?.[selection.length - 1] || focusDate\n          const isForward = isAfter(date, lastSelectedDate)\n          const shiftedFocusDate = addDays(lastSelectedDate, 0)\n          const interval = isForward ? {start: shiftedFocusDate, end: date} : {start: date, end: shiftedFocusDate}\n          targetDates = eachDayOfInterval(interval)\n          // Reverse the dates so the clicked date ends up focused. eachDayOfInterval does not support backward\n          // intervals so we couldn't just build the interval in reverse.\n          if (!isForward) targetDates.reverse()\n        }\n\n        const selections = modifiers.multiple && selection ? [...selection] : []\n\n        for (const d of targetDates) {\n          const existingIndex = selections.findIndex(s => isEqual(s, d))\n\n          if (existingIndex > -1) {\n            selections.splice(existingIndex, 1)\n          } else {\n            if (isBetween(date, {minDate, maxDate})) selections.push(d)\n          }\n        }\n        setSelection(selections.slice(-(maxSelections ?? 0)))\n      } else if (variant === 'range' && isRangeSelection(selection)) {\n        // If the user clicks on one of the range ends (and there is a complete range already selected),\n        // activate that range end instead of updating the selection\n        if (selection?.to && isEqual(selection.from, date)) {\n          setActiveRangeEnd('from')\n          focusInput()\n          return\n        } else if (selection?.to && isEqual(selection.to, date)) {\n          setActiveRangeEnd('to')\n          focusInput()\n          return\n        }\n\n        const attemptedSelection =\n          activeRangeEnd === 'to' && selection\n            ? {from: selection.from, to: date}\n            : {from: date, to: showInputs ? selection?.to ?? null : null}\n\n        const corrected = fitRange(attemptedSelection, {\n          minDate,\n          maxDate,\n          maxRangeSize,\n          minRangeSize,\n          disableWeekends,\n          adjustableRangeEnd,\n        })\n\n        const nextActiveRangeEnd = activeRangeEnd === 'to' && selection ? 'from' : 'to'\n\n        setHoverRange(corrected.to ? null : {from: corrected.from, to: null})\n        setSelection(corrected)\n        setActiveRangeEnd(nextActiveRangeEnd)\n\n        if (!confirmation && corrected.to) {\n          saveValue(corrected)\n        } else if (!preserveFocus) {\n          focusInput()\n        }\n      } else {\n        setSelection(date)\n\n        if (!confirmation) {\n          saveValue(date, submitGesture)\n        } else if (!preserveFocus) {\n          focusInput()\n        }\n      }\n    },\n    [\n      selection,\n      focusDate,\n      setSelection,\n      maxSelections,\n      minDate,\n      maxDate,\n      adjustableRangeEnd,\n      activeRangeEnd,\n      showInputs,\n      maxRangeSize,\n      minRangeSize,\n      disableWeekends,\n      confirmation,\n      saveValue,\n      variant,\n    ],\n  )\n\n  /**\n   * Handler for hover events\n   */\n  const hoverHandler = useCallback(\n    (date: Date) => {\n      if (!selection) return\n      if (variant === 'range' && isRangeSelection(selection) && hoverRange && !showInputs) {\n        setHoverRange(\n          fitRange(\n            {from: selection.from, to: date},\n            {minDate, maxDate, maxRangeSize, minRangeSize, adjustableRangeEnd, disableWeekends},\n          ),\n        )\n      }\n    },\n    [\n      disableWeekends,\n      hoverRange,\n      maxDate,\n      maxRangeSize,\n      minRangeSize,\n      minDate,\n      selection,\n      variant,\n      showInputs,\n      adjustableRangeEnd,\n    ],\n  )\n  // #endregion\n\n  /**\n   * Callback for when the window resizes\n   * @param windowEntry The window observer object\n   */\n  const onResize = ([windowEntry]: Array<{contentRect: DOMRect}>) => {\n    if (!windowEntry) return\n    // Only care about the first element, we expect one element ot be watched\n    const {width} = windowEntry.contentRect\n    // 610 is the panel width with 2 months\n    setMultiMonthSupport(width > 640)\n  }\n  useResizeObserver(onResize)\n\n  const providerValue = useMemo(\n    () => ({\n      configuration: {\n        anchor,\n        anchorClassName,\n        confirmation,\n        confirmUnsavedClose,\n        compressedHeader,\n        dateFormat,\n        disabled,\n        disableWeekends,\n        iconPlacement,\n        maxDate,\n        minDate,\n        placeholder,\n        showInputs,\n        showTodayButton,\n        showClearButton,\n        view,\n        weekStartsOn,\n        variant,\n      },\n      activeRangeEnd,\n      setActiveRangeEnd,\n      anchorRef,\n      close: closeHandler,\n      confirmingClose: confirmingCloseGesture !== undefined,\n      currentViewingDate,\n      focusDate,\n      goToMonth,\n      hoverRange,\n      inputRef,\n      isDirty,\n      isOpen,\n      onClearSelection: clearSelectionHandler,\n      onConfirmClose: confirmCloseHandler,\n      onDateHover: hoverHandler,\n      onDateInput: inputHandler,\n      onDateSelection: selectionHandler,\n      open: onOpen,\n      saveValue: saveValueHandler,\n      selection,\n      selectionActive: false,\n      setFocusDate,\n      setHoverRange,\n    }),\n    [\n      activeRangeEnd,\n      anchor,\n      anchorRef,\n      anchorClassName,\n      clearSelectionHandler,\n      closeHandler,\n      compressedHeader,\n      confirmCloseHandler,\n      confirmUnsavedClose,\n      confirmation,\n      confirmingCloseGesture,\n      currentViewingDate,\n      dateFormat,\n      disableWeekends,\n      disabled,\n      focusDate,\n      goToMonth,\n      hoverHandler,\n      hoverRange,\n      iconPlacement,\n      inputHandler,\n      isDirty,\n      isOpen,\n      maxDate,\n      minDate,\n      onOpen,\n      placeholder,\n      saveValueHandler,\n      selection,\n      selectionHandler,\n      setFocusDate,\n      showClearButton,\n      showInputs,\n      showTodayButton,\n      variant,\n      view,\n      weekStartsOn,\n    ],\n  )\n\n  return (\n    // We don't memoize the context object because it would change on almost every render\n    // anyway. Better would be for consuming components to unpack the values directly.\n    <Context.Provider value={providerValue}>{children}</Context.Provider>\n  )\n}\n\ntry{ Context.displayName ||= 'Context' } catch {}\ntry{ DatePickerProvider.displayName ||= 'DatePickerProvider' } catch {}","import {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {\n  // eslint-disable-next-line no-restricted-imports\n  Avatar,\n  type AvatarProps,\n} from '@primer/react'\nimport {forwardRef, useMemo} from 'react'\n\nexport type GitHubAvatarProps = AvatarProps\n\nexport const GitHubAvatar = forwardRef<HTMLImageElement, GitHubAvatarProps>(function GitHubAvatar(\n  {src, size = 20, ...otherProps}: GitHubAvatarProps,\n  ref,\n) {\n  const avatarUrl = useMemo(() => {\n    // src maybe be relative, e.g. `/mona.png`, in which case the instances main origin should be used,\n    // e.g. \"https://github.com\" for dotcom. If src is a fully quallified URL then the origin argument is ignored.\n    const url = new URL(src, ssrSafeLocation.origin)\n\n    // do not override size if it's already set as query parameter\n    if (!url.searchParams.has('size') && !url.searchParams.has('s')) {\n      // we double size for better rendering on high density pixel screens\n      url.searchParams.set('size', String(Number(size) * 2))\n    }\n\n    return url.toString()\n  }, [src, size])\n\n  return <Avatar ref={ref} src={avatarUrl} size={size} data-testid=\"github-avatar\" {...otherProps} />\n})\n\ntry{ GitHubAvatar.displayName ||= 'GitHubAvatar' } catch {}","import {useRef} from 'react'\nimport {Popover, useTheme} from '@primer/react'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {useLayoutEffect} from '@github-ui/use-layout-effect'\n\nexport interface ValidationErrorPopoverProps {\n  /**\n   * ID of the error message. Supply this to the relevant input's `aria-errormessage` prop.\n   * Be sure to also set the input's `aria-invalid` prop.\n   */\n  id: string\n  /**\n   * Message to display. If `undefined`, the popover will be hidden. This is preferred over\n   * not rendering the popover at all because it allows screen readers to watch for changes\n   * in the message through `aria-live`.\n   */\n  message?: string\n  /**\n   * Optional test ID override. The default test ID is `validation-error-popover`.\n   */\n  testId?: string\n  /**\n   * The minimum amount of space (pixels) between the popover and the clipping container\n   * boundaries.\n   */\n  margin?: number\n  /**\n   * Position of the popover relative to the container. Defaults to `'below'`.\n   */\n  position?: 'above' | 'below'\n}\n\n/**\n * Returns the closest parent that would clip the popover, or the page `body` if there is none.\n */\nconst getClippingParent = (popover: HTMLElement) => {\n  let parent: HTMLElement | null = popover.parentElement\n  while (parent) {\n    const computedStyles = getComputedStyle(parent)\n    if (computedStyles.overflow !== 'visible' && computedStyles.position !== 'static') {\n      return parent\n    }\n    parent = parent.parentElement\n  }\n  return document.body\n}\n\n/**\n * Shows a validation error without breaking the surrounding layout.\n * This component should be used inside a container with `position: relative` (along with\n * the annotated input element) to position it properly.\n *\n * For accessibility, it is better for this component to always be mounted in the\n * document even if the relevant input is valid, and for the ID of this component to remain\n * constant. Instead of conditionally rendering this component, hide it by setting the `message`\n * to `undefined`.\n *\n * It is not inserted at the document root like overlays, so it is more accessible to screen\n * readers by remaining in the right place in the document flow. However, it is more succeptible\n * to clipping issues. The popover will make a 'best effort' to position itself so that it won't\n * get clipped by a container, but it's not foolproof so try to set containing elements to\n * `overflow: visible` if they are not `position: static`.\n */\nexport const ValidationErrorPopover = ({\n  id,\n  message,\n  testId,\n  margin = 4,\n  position = 'below',\n}: ValidationErrorPopoverProps) => {\n  const containerRef = useRef<HTMLDivElement>(null)\n  const open = message !== undefined\n\n  const {theme} = useTheme()\n\n  // Reposition the popover to fit inside the nearest container that would clip it.\n  // Performing this only once per render could cause the popover to still get clipped (ie,\n  // on scroll), but the user could always just scroll back to return it to the view. Adding\n  // event listeners for scroll/resize could get very expensive.\n  // We only reposition side-to-side for now.\n  useLayoutEffect(() => {\n    if (!open) return\n\n    const popover = containerRef.current\n    if (!popover) return\n    const clippingParent = getClippingParent(popover)\n\n    popover.style.maxWidth = `${clippingParent.clientWidth - margin * 2}px`\n\n    // Rather than trying to 'predict' where the popover would end up before transforming it, just place\n    // it in the ideal location and then figure out the smallest distance we need to move it to make it visible.\n    popover.style.left = '50%'\n\n    const popoverRect = popover.getBoundingClientRect()\n    const clippingParentRect = clippingParent.getBoundingClientRect()\n\n    const leftDistance = popoverRect.left - clippingParentRect.left\n    const rightDistance = clippingParentRect.right - popoverRect.right\n\n    const xOffset = leftDistance < margin ? -leftDistance + margin : rightDistance < margin ? rightDistance - margin : 0\n    popover.style.left = `calc(50% + ${xOffset}px)`\n\n    // Offset the caret in the opposite direction so it remains at the middle of the default position\n    popover.style.setProperty('--caret-offset', `${-xOffset}px`)\n  })\n\n  const caretSx = {\n    // !important is needed to override the color when position is 'above'\n    [position === 'above' ? 'borderTopColor' : 'borderBottomColor']: `${theme?.colors.danger.fg ?? ''} !important`,\n    left: `50%`,\n    transform: `translateX(var(--caret-offset))`,\n  }\n\n  return (\n    <Popover\n      open={open}\n      caret={position === 'above' ? 'bottom' : 'top'}\n      sx={{\n        top: position === 'above' ? `-4px` : `calc(100% + 12px)`,\n        transform: `translateX(-50%)${position === 'above' ? ' translateY(-100%)' : ''}`,\n        // Must use CSS variables to control the caret location because psuedo-elements are not selectable by JS\n        '--caret-offset': '0',\n        width: 'max-content',\n        fontSize: 0,\n      }}\n      ref={containerRef}\n    >\n      <Popover.Content\n        as=\"p\"\n        aria-live=\"polite\"\n        id={id}\n        sx={{\n          pt: 1,\n          pb: 1,\n          pr: 2,\n          pl: 2,\n          // Delegate width control to parent so max-width works\n          width: 'auto',\n          color: 'fg.onEmphasis',\n          borderColor: 'danger.muted',\n          backgroundColor: 'danger.emphasis',\n          textAlign: 'center',\n          '&::before': caretSx,\n          '&::after': caretSx,\n        }}\n        {...testIdProps(testId ?? 'validation-error-popover')}\n      >\n        {message}\n      </Popover.Content>\n    </Popover>\n  )\n}\n\ntry{ ValidationErrorPopover.displayName ||= 'ValidationErrorPopover' } catch {}"],"names":["useOnAnchorAction","isOpen","open","close","useDatePickerContext","event","includes","key","preventDefault","useShortcutCalculator","configuration","minDate","maxDate","disableWeekends","fromDate","newDate","addDays","isWeekend","nextMonday","subDays","previousFriday","subWeeks","addWeeks","isMonday","previousMonday","isSunday","previousSunday","isFriday","nextFriday","isSaturday","nextSaturday","shiftKey","subYears","subMonths","addYears","addMonths","sanitizeDate","clamp","DateResources","invalidConfiguration","invalidDate","invalidSelection","weekend","beforeMinDate","format","afterMaxDate","shortcutInputDescription","dateInputDescription","monthSingleDescription","monthMultiDescription","isMac","monthRangeDescription","from","to","isSingleSelection","selection","Date","isMultiSelection","Array","isArray","isRangeSelection","isCompleteRangeSelection","date","toDateString","sanitizeSelection","map","getFocusDate","activeRangeEnd","lastDate","at","min","max","isBefore","isAfter","isBetween","closestWeekday","direction","SHORT_FORMAT","LONG_FORMAT","getDateFormat","userFormat","parseDate","dateString","additionalFormats","reference","parse","isValid","formatDate","dateFormat","today","dateFnsFormat","getUTCFullYear","formatSelection","placeholder","rawFormat","variant","template","length","d","join","Object","entries","nextValidDay","prevValidDay","closestValidDay","addValidDays","days","addBusinessDays","subValidDays","subBusinessDays","clampValid","validMinDate","validMaxDate","maxTo","validFrom","maxRangeSize","undefined","minFrom","validTo","minTo","minRangeSize","maxFrom","ensureForwardRange","range","adjustableRangeEnd","adjustRangeToSize","rangeSizeLimits","shiftRangeToFit","limits","size","differenceInDays","newTo","fitRange","params","forwardRange","newadjustableRangeEnd","newParams","rangeSide","isEqual","useSelectAll","ref","current","setSelectionRange","value","ExternalDatePickerAnchor","forwardRef","render","children","onAction","disabled","tabIndex","onClick","onKeyDown","displayName","StyledCalendarIcon","Octicon","icon","CalendarIcon","className","styles","calendarIcon","DefaultDatePickerAnchor","anchorVariant","iconPlacement","anchorClassName","DatePickerTextInput","anchorRef","fullWidth","IconButton","type","testIdProps","aria-label","Button","leadingVisual","trailingVisual","DatePickerAnchor","anchor","formattedSelection","useMemo","DatePickerConfirmCloseDialog","onConfirmClose","confirmingClose","onClose","useCallback","gesture","ConfirmationDialog","title","confirmButtonContent","CheckIcon","span","labelText","cancelButtonContent","TrashIcon","DatePicker","anchoredOverlayProps","topLevelConfiguration","forwardedAnchorRef","contextProps","DatePickerProvider","DatePickerOverlay","Day","showInputs","hoverRange","onDateHover","onDateSelection","isToday","selected","some","previewSelected","mouseDownHandler","actionHandler","modifiers","multiple","isMacOS","metaKey","ctrlKey","label","todayLabel","selectedLabel","minMaxLabel","div","aria-disabled","aria-selected","data-date","data-disabled","onMouseDown","onMouseEnter","role","clsx","day","rangeFrom","rangeMiddle","rangeTo","getDate","BlankDay","WeekdayHeaderDay","header","HiddenDescription","id","aria-live","ValidIcon","ValidityIndicator","status","successIcon","XIcon","dangerIcon","useFreeformDateInput","onChange","calendarButton","forwardedRef","inputRef","useRef","useRefObjectAsForwardedRef","validity","setValidity","useState","clearValidity","text","setText","isFocused","document","activeElement","s","useEffect","valueOf","onFocus","position","Component","inputProps","target","parsed","message","onBlur","validationStatus","resetText","SingleDateInput","ariaLabel","disableShortcuts","arrowKeyModeRef","selectAll","setTimeout","calculateShortcut","descriptionId","useId","errorId","singleDateInputContainer","hasCalendarButton","TextInput","e","defaultPrevented","newValue","onMouseUp","aria-describedby","aria-errormessage","singleDateInput","ValidationErrorPopover","MultiDateInput","onDateClick","isAnchor","typedDate","setTypedDate","clearInput","addTypedDate","filter","concat","tokens","input","TextInputWithTokens","onTokenRemove","dateValue","multiDateInput","multiDateInputContainer","FormControl","sx","width","maxWidth","flexGrow","Label","visuallyHidden","Validation","KeyboardKey","keys","Caption","CalendarIconButton","calendarIconButton","onDateInput","setActiveRangeEnd","setFocusDate","firstRef","secondRef","useImperativeHandle","focus","calendarButtonProps","rangeEndCalendarButtonProps","rangeInputs","rangeInputsSeparator","container","weekdayEnum","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Month","weekStartsOn","compressedHeader","weekdayHeaders","now","weekOptions","eachDayOfInterval","start","startOfWeek","end","endOfWeek","toISOString","dayComponents","components","firstDay","getFullYear","getMonth","preBlanks","getDay","i","push","getDaysInMonth","toString","postBlanks","lastDay","lastDayOfMonth","chunk","index","row","labelId","aria-labelledby","aria-multiselectable","aria-hidden","AnchoredOverlay","focusTrapSettings","restoreFocusOnCleanUp","focusZoneSettings","onOpen","renderAnchor","overlayProps","externalProps","DatePickerPanel","months","getDateElement","panelRef","querySelector","getFirstEnabledDate","confirmation","view","showTodayButton","configShowTodayButton","showClearButton","isDirty","saveValue","currentViewingDate","goToMonth","onClearSelection","focusDate","datePanelRef","calculateShortcutDate","getNextFocusable","_","rawFromDate","getAttribute","flushSync","useFocusZone","containerRef","bindKeys","FocusKeys","ArrowAll","HomeAndEnd","PageUpDown","focusInStrategy","previousDisabled","previous","nextDisabled","next","currentMonth","currentYear","headerSelectionHandler","int","parseInt","currentTarget","getMonthPicker","filteredMonths","monthElements","month","indexOf","option","select","picker","getYearPicker","years","todaysYear","minYear","maxYear","secondMonthDate","showButtons","goToToday","clearDate","description","modifierKey","stopPropagation","topNav","pickers","arrowButton","ChevronLeftIcon","ChevronRightIcon","footer","footerRow","footerButtons","showApplyButton","Context","createContext","context","useContext","externalAnchor","externalConfirmation","confirmUnsavedClose","externalMaxDate","externalMinDate","externalView","externalOpen","externalOnClose","externalOnOpen","unsanitizedExternalValue","externalShowInputs","variantSpecificProps","externalValue","previousSelection","setPreviousSelection","_setSelection","setIsDirty","setSelection","setHoverRange","setCurrentViewingDate","multiMonthSupport","setMultiMonthSupport","confirmingCloseGesture","setConfirmingCloseGesture","sanitized","_setFocusDate","prevViewingDate","newFocusDate","setDate","maxSelections","focusInput","internalAnchorRef","setIsOpen","JSON","stringify","updatedSelection","submitGesture","saveValueHandler","revertValue","closeHandler","confirmCloseHandler","action","inputHandler","newSelection","slice","clearSelectionHandler","selectionHandler","preserveFocus","targetDates","lastSelectedDate","isForward","shiftedFocusDate","interval","reverse","selections","existingIndex","findIndex","splice","attemptedSelection","corrected","nextActiveRangeEnd","hoverHandler","useResizeObserver","windowEntry","contentRect","providerValue","selectionActive","Provider","GitHubAvatar","src","otherProps","avatarUrl","url","URL","ssrSafeLocation","origin","searchParams","has","set","String","Number","Avatar","data-testid","getClippingParent","parent","popover","parentElement","computedStyles","getComputedStyle","overflow","body","testId","margin","theme","useTheme","useLayoutEffect","clippingParent","style","clientWidth","left","popoverRect","getBoundingClientRect","clippingParentRect","leftDistance","rightDistance","right","xOffset","setProperty","caretSx","colors","danger","fg","transform","Popover","caret","top","fontSize","Content","as","pt","pb","pr","pl","color","borderColor","backgroundColor","textAlign"],"sourceRoot":""}