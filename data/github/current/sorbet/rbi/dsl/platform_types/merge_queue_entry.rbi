# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PlatformTypes::MergeQueueEntry`.
# Please instead update this file by running `bin/tapioca dsl PlatformTypes::MergeQueueEntry`.

class PlatformTypes::MergeQueueEntry < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(T.nilable(PlatformTypes::Commit)) }
  def base_commit; end

  sig { returns(T::Boolean) }
  def base_commit?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def base_oid; end

  sig { returns(T::Boolean) }
  def base_oid?; end

  sig { returns(T::Boolean) }
  def blocked_by_merge_conflicts; end

  sig { returns(T::Boolean) }
  def blocked_by_merge_conflicts?; end

  sig { returns(String) }
  def check_status; end

  sig { returns(T::Boolean) }
  def check_status?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def enqueued_at; end

  sig { returns(T::Boolean) }
  def enqueued_at?; end

  sig { returns(GraphQL::Client::Schema::InterfaceType) }
  def enqueuer; end

  sig { returns(T::Boolean) }
  def enqueuer?; end

  sig { returns(T.nilable(Integer)) }
  def estimated_time_to_merge; end

  sig { returns(T::Boolean) }
  def estimated_time_to_merge?; end

  sig { returns(T::Boolean) }
  def has_jumped_queue; end

  sig { returns(T::Boolean) }
  def has_jumped_queue?; end

  sig { returns(T.nilable(PlatformTypes::Commit)) }
  def head_commit; end

  sig { returns(T::Boolean) }
  def head_commit?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def head_oid; end

  sig { returns(T::Boolean) }
  def head_oid?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(T::Boolean) }
  def is_solo; end

  sig { returns(T::Boolean) }
  def is_solo?; end

  sig { returns(T::Boolean) }
  def jump; end

  sig { returns(T::Boolean) }
  def jump?; end

  sig { returns(T::Boolean) }
  def locked; end

  sig { returns(T::Boolean) }
  def locked?; end

  sig { returns(T.nilable(PlatformTypes::MergeQueue)) }
  def merge_queue; end

  sig { returns(T::Boolean) }
  def merge_queue?; end

  sig { returns(Integer) }
  def position; end

  sig { returns(T::Boolean) }
  def position?; end

  sig { returns(T.nilable(PlatformTypes::PullRequest)) }
  def pull_request; end

  sig { returns(T::Boolean) }
  def pull_request?; end

  sig { returns(T::Boolean) }
  def solo; end

  sig { returns(T::Boolean) }
  def solo?; end

  sig { returns(String) }
  def state; end

  sig { returns(T::Boolean) }
  def state?; end
end
