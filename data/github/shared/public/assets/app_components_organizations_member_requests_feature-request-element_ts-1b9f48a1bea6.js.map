{"version":3,"file":"chunk-app_components_organizations_member_requests_feature-request-element_ts-xxxxxxxxxxxx.js","mappings":"igBAEA,YACMA,8BAA8BC,YAalC,MAAMC,QAAS,CACb,IAAIC,EACJ,GAAI,CACF,IAAI,CAACC,aAAa,CAAC,IAAI,CAACC,aAAa,CAAE,iBACvC,IAAMC,EAAO,IAAIC,SACjBD,EAAKE,MAAM,CAAC,UAAW,IAAI,CAACC,WAAW,EAEvCN,EAAW,MAAMO,MAAM,IAAI,CAACC,UAAU,CAAE,CACtCC,OAAQ,OACRC,KAAMP,EACNQ,QAAS,CACPC,OAAQ,mBACR,mBAAoB,iBACpB,oBAAqB,IAAI,CAACC,gBAAgB,CAACC,KAAK,CAEpD,EACF,CAAE,KAAM,CAEN,MACF,QAAU,CACR,IAAI,CAACC,YAAY,CAAC,IAAI,CAACb,aAAa,CACtC,CACIF,GAAY,CAACA,EAASgB,EAAE,GAG1B,IAAI,CAACC,MAAM,CAACC,MAAM,CAAG,GACrB,IAAI,CAACC,OAAO,CAACD,MAAM,CAAG,GAE1B,CAEA,MAAME,QAAS,CACb,IAAIpB,EACJ,GAAI,CACF,IAAI,CAACC,aAAa,CAAC,IAAI,CAACoB,YAAY,CAAE,iBACtC,IAAMlB,EAAO,IAAIC,SACjBD,EAAKE,MAAM,CAAC,UAAW,IAAI,CAACC,WAAW,EAEvCN,EAAW,MAAMO,MAAM,IAAI,CAACC,UAAU,CAAE,CACtCC,OAAQ,SACRC,KAAMP,EACNQ,QAAS,CACPC,OAAQ,mBACR,mBAAoB,iBACpB,oBAAqB,IAAI,CAACU,eAAe,CAACR,KAAK,CAEnD,EACF,CAAE,KAAM,CAEN,MACF,QAAU,CACR,IAAI,CAACC,YAAY,CAAC,IAAI,CAACM,YAAY,CACrC,CACIrB,GAAY,CAACA,EAASgB,EAAE,GAG1B,IAAI,CAACC,MAAM,CAACC,MAAM,CAAG,GACrB,IAAI,CAACC,OAAO,CAACD,MAAM,CAAG,GAE1B,CAEAjB,cAAcsB,CAAyB,CAAEC,CAAoB,CAAE,CAC7D,IAAI,CAACC,YAAY,CAACC,GAAG,CAACH,EAAQA,EAAOI,SAAS,EAG9CC,WAAW,KACTL,EAAOM,WAAW,CAAGL,CACvB,EAAG,GACHD,EAAOO,QAAQ,CAAG,EACpB,CAEAf,aAAaQ,CAAyB,CAAE,CACtC,IAAMQ,EAAO,IAAI,CAACN,YAAY,CAACO,GAAG,CAACT,EACvB,OAARQ,IACFR,EAAOI,SAAS,CAAGI,EACnBR,EAAOO,QAAQ,CAAG,GAClB,IAAI,CAACL,YAAY,CAACQ,MAAM,CAACV,GAE7B,C,mCA/EAE,YAAY,CAAG,IAAIS,O,CAgFrB,E,GA1FGC,EAAAA,EAAIA,C,CADDtC,EAAAA,SAAAA,CAAAA,aAAAA,KAAAA,G,GAEHsC,EAAAA,EAAIA,C,CAFDtC,EAAAA,SAAAA,CAAAA,cAAAA,KAAAA,G,GAIHuC,EAAAA,EAAMA,C,CAJHvC,EAAAA,SAAAA,CAAAA,mBAAAA,KAAAA,G,GAKHuC,EAAAA,EAAMA,C,CALHvC,EAAAA,SAAAA,CAAAA,kBAAAA,KAAAA,G,GAMHuC,EAAAA,EAAMA,C,CANHvC,EAAAA,SAAAA,CAAAA,SAAAA,KAAAA,G,GAOHuC,EAAAA,EAAMA,C,CAPHvC,EAAAA,SAAAA,CAAAA,gBAAAA,KAAAA,G,GAQHuC,EAAAA,EAAMA,C,CARHvC,EAAAA,SAAAA,CAAAA,eAAAA,KAAAA,G,GASHuC,EAAAA,EAAMA,C,CATHvC,EAAAA,SAAAA,CAAAA,UAAAA,KAAAA,GAAAA,EAAAA,EAAAA,CADLwC,EAAAA,EAAUA,C,CACLxC,E","sources":["app/components/organizations/member_requests/feature-request-element.ts"],"sourcesContent":["import {attr, controller, target} from '@github/catalyst'\n\n@controller\nclass FeatureRequestElement extends HTMLElement {\n  @attr actionPath: string\n  @attr featureName: string\n\n  @target csrfTokenRequest: HTMLFormElement\n  @target csrfTokenCancel: HTMLFormElement\n  @target prompt: HTMLElement\n  @target requestButton: HTMLButtonElement\n  @target cancelButton: HTMLButtonElement\n  @target success: HTMLElement\n\n  originalText = new WeakMap()\n\n  async submit() {\n    let response\n    try {\n      this.disableButton(this.requestButton, 'Requesting...')\n      const data = new FormData()\n      data.append('feature', this.featureName)\n\n      response = await fetch(this.actionPath, {\n        method: 'POST',\n        body: data,\n        headers: {\n          Accept: 'application/json',\n          'X-Requested-With': 'XMLHttpRequest',\n          'Scoped-CSRF-Token': this.csrfTokenRequest.value,\n        },\n      })\n    } catch {\n      // Show error\n      return\n    } finally {\n      this.revertButton(this.requestButton)\n    }\n    if (response && !response.ok) {\n      // Show error\n    } else {\n      this.prompt.hidden = true\n      this.success.hidden = false\n    }\n  }\n\n  async cancel() {\n    let response\n    try {\n      this.disableButton(this.cancelButton, 'Cancelling...')\n      const data = new FormData()\n      data.append('feature', this.featureName)\n\n      response = await fetch(this.actionPath, {\n        method: 'DELETE',\n        body: data,\n        headers: {\n          Accept: 'application/json',\n          'X-Requested-With': 'XMLHttpRequest',\n          'Scoped-CSRF-Token': this.csrfTokenCancel.value,\n        },\n      })\n    } catch {\n      // Show error\n      return\n    } finally {\n      this.revertButton(this.cancelButton)\n    }\n    if (response && !response.ok) {\n      // Show error\n    } else {\n      this.prompt.hidden = false\n      this.success.hidden = true\n    }\n  }\n\n  disableButton(button: HTMLButtonElement, disabledText: string) {\n    this.originalText.set(button, button.innerHTML)\n    // The first click event is not propagated if text content is changed.\n    // This was preventing hydro event from being fired properly.\n    setTimeout(() => {\n      button.textContent = disabledText\n    }, 0)\n    button.disabled = true\n  }\n\n  revertButton(button: HTMLButtonElement) {\n    const text = this.originalText.get(button)\n    if (text != null) {\n      button.innerHTML = text\n      button.disabled = false\n      this.originalText.delete(button)\n    }\n  }\n}\n"],"names":["FeatureRequestElement","HTMLElement","submit","response","disableButton","requestButton","data","FormData","append","featureName","fetch","actionPath","method","body","headers","Accept","csrfTokenRequest","value","revertButton","ok","prompt","hidden","success","cancel","cancelButton","csrfTokenCancel","button","disabledText","originalText","set","innerHTML","setTimeout","textContent","disabled","text","get","delete","WeakMap","attr","target","controller"],"sourceRoot":""}