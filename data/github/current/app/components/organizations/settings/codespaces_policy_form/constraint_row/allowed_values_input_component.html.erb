<%# erblint:counter DeprecatedComponentsCounter 1 %>
<allowed-values-input data-action="commit:codespaces-policy-form#saveAllowedValuesConstraintChange">
  <%= render Primer::Box.new(display: :flex, p: 3, align_items: :center, justify_content: :space_between) do %>
    <div class="d-flex flex-column flex-lg-row">
      <%= render Primer::Box.new(pr: 2) do %>
        <%= render Primer::Beta::Octicon.new(:"codespaces", color: :muted) %>
        <%= render Primer::Beta::Text.new(pl: 2, font_weight: :bold).with_content(constraint[:display_name]) %>
      <% end %>
      <%= render Primer::Box.new do %>
        <%= render Primer::Beta::Text.new(
          color: :muted,
          data: { target: "allowed-values-input.selectedAllowedValuesText" }
        ).with_content(existing_allowed_values_text&.truncate(140)) %>
      <% end %>
    </div>
    <%= render Primer::Box.new(display: :flex, justify_content: :space_between, align_items: :center) do %>
      <%= render Primer::Alpha::Dropdown.new(display: :inline) do |c| %>
        <% c.with_button(scheme: :invisible, p: 2, mr: 2, classes: "codespaces-policy-form-blue-hover") do %>
          <%= render(Primer::Beta::Octicon.new(icon: :pencil, "aria-label": "Edit policy", m: 0)) %>
        <% end %>
        <% c.with_menu(header: "Allowed values", direction: :sw, mt: 2, mr: 1, py: 3, px: 2, style: "width: 600px;") do |menu| %>
          <% menu.with_item(classes: "codespaces-policy-item-no-hover", px: 3, py: 2) do %>
            <div class="form-group m-0" data-target="allowed-values-input.allowedValuesFormGroup" data-value="<%= existing_allowed_values %>">
              <div class="form-group-body">
                <%= render Primer::Box.new(display: :flex) do %>
                  <%= render Primer::Box.new(display: :flex, flex: 1, direction: :column) do %>
                    <input
                      type="text"
                      class="form-control flex-1 width-auto"
                      name="allowed_values"
                      aria-label="<%= data_key_name.titleize %>"
                      placeholder="<%= input_placeholder %>"
                      data-target="<%= "
                        allowed-values-input.allowedValuesInput
                        codespaces-policy-form.allowedValuesInput
                      " %>"
                      data-constraint-name="<%= constraint[:name] %>"
                      data-action="change:allowed-values-input#handleInputChange"
                    >
                    <p
                      class="note error position-relative flex-1"
                      data-target="allowed-values-input.allowedValuesValidationErrorMsg"
                      style="white-space: normal;margin-right:5px;">
                      Value is not valid
                    </p>
                  <% end %>
                  <%= render Primer::ButtonComponent.new(
                    aria: { label: "Add button" },
                    classes: "flex-self-start",
                    scheme: :primary,
                    data: {
                      "action": "click:allowed-values-input#addAllowedValue",
                    },
                  ).with_content("+") %>
                <% end %>
                <%= render Primer::Box.new(classes: "overflow-y-auto", style: "max-height: 400px;", data: {target: "allowed-values-input.allowedValuesList"}) do %>
                  <%= render Organizations::Settings::CodespacesPolicyForm::ConstraintRow::AllowedValuesListItemComponent.new(data_target: "allowed-values-input.allowedValueTemplate", hidden: true) %>
                  <% existing_allowed_values.each do |allowed_value| %>
                    <%= render Organizations::Settings::CodespacesPolicyForm::ConstraintRow::AllowedValuesListItemComponent.new(data_target: "allowed-values-input.deleteButtonContainer", allowed_value: ) %>
                  <% end %>
                <% end %>
              </div>
            </div>
          <% end %>
        <% end %>
      <% end %>
      <%= render Organizations::Settings::CodespacesPolicyForm::ConstraintRow::DeleteButtonComponent.new(constraint_name: constraint[:name]) %>
    <% end %>
  <% end %>
</allowed-values-input>
