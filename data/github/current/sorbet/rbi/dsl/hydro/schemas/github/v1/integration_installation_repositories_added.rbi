# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::IntegrationInstallationRepositoriesAdded`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::IntegrationInstallationRepositoriesAdded`.

class Hydro::Schemas::Github::V1::IntegrationInstallationRepositoriesAdded
  sig do
    params(
      installation: T.nilable(Hydro::Schemas::Github::V1::Entities::IntegrationInstallation),
      repositories_added: T.nilable(T.any(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V1::Entities::Repository], T::Array[Hydro::Schemas::Github::V1::Entities::Repository])),
      sender: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(installation: nil, repositories_added: T.unsafe(nil), sender: nil); end

  sig { void }
  def clear_installation; end

  sig { void }
  def clear_repositories_added; end

  sig { void }
  def clear_sender; end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::IntegrationInstallation)) }
  def installation; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::IntegrationInstallation)).void }
  def installation=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V1::Entities::Repository]) }
  def repositories_added; end

  sig { params(value: Google::Protobuf::RepeatedField[Hydro::Schemas::Github::V1::Entities::Repository]).void }
  def repositories_added=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def sender; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def sender=(value); end
end
