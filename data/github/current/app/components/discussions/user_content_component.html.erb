<%# erblint:counter DeprecatedComponentsCounter 1 %>
<task-lists disabled sortable>
  <% if localization_config.ugc_inline_machine_translation_enabled? %>
    <inline-machine-translation
      detected-language="<%= discussion_or_comment.detected_language %>"
      detect-language-url="<%= discussion_or_comment_detect_language_path %>"
    >
      <p hidden class="mx-3 mt-3 mb-0 f6 color-fg-muted" data-target="inline-machine-translation.triggerContainer">
        <span data-target="inline-machine-translation.fromLanguageContainer"></span> -
        <%= render(Primer::ButtonComponent.new(
          scheme: :link, title: "Translate content",
          data: {
            action: "click:inline-machine-translation#click",
            target: "inline-machine-translation.button"
          })) do %>
          <span data-target="inline-machine-translation.targetLanguageContainer"></span>
        <% end %>
      </p>
    </inline-machine-translation>
  <% end %>
  <%# Fixing Markdown rendering problem with table hack; see https://github.com/github/github/pull/65253 %>
  <table class="d-block" role="presentation" data-paste-markdown-skip>
    <tbody
      class="<%= class_names(
        "d-block",
        "js-translation-source" => localization_config.ugc_inline_machine_translation_enabled?,
      ) %>"
      <%= test_selector("body-and-poll-content-component") %>
      <% if localization_config.ugc_inline_machine_translation_enabled? %>
        data-target-translation-id="<%= discussion_or_comment.id %>"
        data-target-translation-type="<%= translation_type %>"
      <% end %>
    >
      <%= render(Discussions::BodyAndPollComponent.new(
        discussion_or_comment: discussion_or_comment,
        repository: timeline.repository,
      )) do |c| c.with_body_html { body_html } end %>
    </tbody>
  </table>
  <% if localization_config.ugc_inline_machine_translation_enabled? %>
    <p class="mx-3 mb-3 f6 color-fg-muted js-translation-feedback" <%= test_selector("translation-feedback") %> hidden>
      <%= render Primer::Beta::Label.new(
        scheme: :success,
        variant: :inline,
        border_color: :open_emphasis,
      ).with_content("Beta") %>
      <%= render Primer::Beta::Text.new(
        classes: "js-was-this-translation-helpful",
        color: :muted,
        ml: 1,
      ).with_content("Was this translation helpful?") %>
      <%= render Primer::Beta::Link.new(
        classes: "js-give-feedback",
        href: "#",
      ).with_content("Give feedback.") %>
    </p>
  <% end %>
</task-lists>
