<div class="d-flex flex-column">
  <div
    class="d-flex flex-items-center flex-justify-center p-3 rounded-top-2 position-relative"
    style="background-image: url('<%= gradient_path %>'); background-size: cover;"
  >
    <% unless hovercard? %>
      <%= render Profiles::User::Achievements::VisibilityComponent.new(achievement: achievement) %>
      <button
        class="achievement-detail-close Box-btn-octicon btn-octicon color-bg-emphasis color-fg-on-emphasis rounded-3 position-absolute top-0 right-0 m-2 p-0"
        type="button"
        aria-label="Close dialog"
        data-close-dialog
      >
        <%= primer_octicon(icon: "x") %>
      </button>
    <% end %>

    <achievement-badge-flip
      class="m-1 achievement-badges achievement-badges-flip"
      tier-count="<%= achievements.size %>"
      data-action="mouseenter:achievement-badge-flip#flip"
    >
      <% achievements.each_with_index do |achievement, index| %>
        <%= render Primer::Alpha::Image.new(
          alt: "Achievement: #{achievable.display_name}",
          classes: class_names("tier-badge", "tier-badge--back": index.odd?),
          data: { targets: "achievement-badge-flip.tiers" },
          src: badge_asset_path(tier: achievement.tier),
          test_selector: "achievement-#{achievable.slug}-badge",
          width: 140,
        ) %>
      <% end %>
    </achievement-badge-flip>
  </div>
  <div class="p-3">
    <div>
      <% unless hovercard? %>
        <%= render Profiles::User::Achievements::ShareComponent.new(achievement: achievement) %>
      <% end %>

      <div class="d-flex flex-items-center">
        <h3><%= achievable.display_name %></h3>
        <%= render(Profiles::User::Achievements::TierLabelComponent.new(
          achievable: achievable,
          tier: highest_tier_achievement.tier,
          px: 2,
          ml: 2,
        )) %>
      </div>
      <div class="mt-1"><%= description %></div>
    </div>
    <div class="border-top mt-3 pt-3 text-small achievement-history">
      <h4 class="color-fg-muted mb-2 text-small text-bold">History</h4>
      <%= render(Primer::Beta::TimelineItem.new(
        condensed: true,
        classes: "achievement-history-unlocked-at",
      )) do |component| %>
        <% component.with_badge(icon: :trophy, color: :muted, mt: 1, mr: 0, bg: hovercard? ? :overlay : nil) %>
        <% component.with_body(font_size: :small, color: :muted, mt: 1) do %>
          <% if fully_unlocked? %>
            <span class="color-fg-success text-bold" <%= test_selector "tier-count" %>>
              100% unlocked
            </span> ·
          <% elsif unlocked_tier_names.any? %>
            <span <%= test_selector "tier-count" %>>
              <%= to_sentence(unlocked_tier_names) %> unlocked
            </span> ·
          <% end %>

          <% if first_tier? %>
            Unlocked
          <% else %>
            First unlocked
          <% end %>

          <relative-time
            datetime="<%= oldest_achievement.unlocked_at.utc.iso8601 %>"
            month="short"
            day="numeric"
            threshold="PT0S"
          >
            <%= oldest_achievement.unlocked_at %>
          </relative-time>
        <% end %>
      <% end %>
      <% achievements.each do |achievement| %>
        <%= render Profiles::User::Achievements::UnlockingEventComponent.new(
          achievement: achievement,
          visible_models: visible_models,
          is_hovercard: hovercard?,
          profile_user: profile_user,
        ) %>
      <% end %>
    </div>
  </div>
</div>
