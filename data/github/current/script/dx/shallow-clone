#!/bin/bash
#
# This script replaces the .git subfolder with that of a shallow clone, leaving everything else the same.
#
# Usage: shallow-clone <days>
# Arguments:
#  - days: The number of days for the history, defaults to 30.
#
# Note that this shallow clone contains "only the history leading to the tip of a single branch". Other branches
# will not be present.
#
#   ➜  github git:(master) ✗ git checkout other_branch
#   error: pathspec 'other_branch' did not match any file(s) known to git
#
# You can use `shallow-checkout <branch> [<depth>]` to check out a remote branch after the shallow clone.
# Alternatively, you can use the following commands:
#
#  $ git remote set-branches origin 'other_branch'
#  $ git fetch --depth 1 origin other_branch
#  $ git checkout other_branch

set -e

days="${1:-30}"

github_dir="/workspaces/github"
mkdir -p ${github_dir}/tmp
temp_dir=$(mktemp -d -p ${github_dir}/tmp)

cd ${github_dir}
head=$(git rev-parse HEAD)
branch=$(git rev-parse --abbrev-ref HEAD)

cd ${temp_dir}
git clone --branch=${branch} --shallow-since=$(date --date="${days} day ago" +%Y-%m-%d) https://github.com/github/github.git

cd github
git reset --hard ${head}
rm -rf ${github_dir}/.git
mv .git ${github_dir}/

cd ${github_dir}
rm -rf ${temp_dir}
