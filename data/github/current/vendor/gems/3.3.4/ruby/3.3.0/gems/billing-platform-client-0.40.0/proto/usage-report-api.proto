syntax = "proto3";

package billing_platform.api.v1;

option go_package = "lib/twirp/proto";
option ruby_package = "BillingPlatform::Api::V1";

import "proto/base.proto";

service UsageReportApi {
  rpc GetUsageReport(GetUsageReportRequest) returns (GetUsageReportResponse);
  rpc QueueUsageReportExport(QueueUsageReportExportRequest) returns (QueueUsageReportExportResponse);
}

message GetUsageReportRequest {
    string usageEntityId = 1;
    int64 year = 2;
    int64 month = 3;
    int64 day = 4;
    int64 hour = 5;
    base.BillingPeriod billingPeriod = 6;
    bool includeCostCenterUsage = 7;
}

message GetUsageReportResponse {
    repeated ReportItem reportItems = 1;
}

message QueueUsageReportExportRequest {
    string customerId = 1;
    int64 startDate = 2;
    int64 endDate = 3;
    int64 actorId = 4;
    repeated int64 organizationIds = 5;
}

message QueueUsageReportExportResponse {
}

message ReportItem {
    int64 usageDate = 1;
    string product = 2;
    string sku = 3;
    double quantity = 4;

    reserved 5;
    reserved "unitType";

    double pricePerUnit = 6;
    double grossAmount = 7;
    double discountAmount = 8;
    double netAmount = 9;
    int64 orgID = 10;
    int64 repoID = 11;

    string costCenterName = 12;

    reserved 13;
    reserved "selfReference";

    string unitTypeString = 14;
}
