# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PlatformTypes::CodeSearchConnection`.
# Please instead update this file by running `bin/tapioca dsl PlatformTypes::CodeSearchConnection`.

class PlatformTypes::CodeSearchConnection < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(T.nilable(Integer)) }
  def approximate_count; end

  sig { returns(T::Boolean) }
  def approximate_count?; end

  sig { returns(T.nilable(T::Array[PlatformTypes::CodeSearchResultEdge])) }
  def edges; end

  sig { returns(T::Boolean) }
  def edges?; end

  sig { returns(Integer) }
  def error_count; end

  sig { returns(T::Boolean) }
  def error_count?; end

  sig do
    returns(T::Array[T.any(PlatformTypes::CodeSearchActorNotAuthorizedError, PlatformTypes::CodeSearchInaccessibleRepoError, PlatformTypes::CodeSearchIncompleteResultsError, PlatformTypes::CodeSearchInconsistentResultsError, PlatformTypes::CodeSearchQueryParsingFatalError, PlatformTypes::CodeSearchQueryParsingWarningError, PlatformTypes::CodeSearchScopeUnsatisfiableError, PlatformTypes::CodeSearchTimeoutError, PlatformTypes::CodeSearchUnspecifiedError)])
  end
  def errors; end

  sig { returns(T::Boolean) }
  def errors?; end

  sig { returns(Integer) }
  def facet_count; end

  sig { returns(T::Boolean) }
  def facet_count?; end

  sig do
    returns(T::Array[T.any(PlatformTypes::CodeSearchInvalidFacet, PlatformTypes::CodeSearchLanguageFacet, PlatformTypes::CodeSearchPathFacet, PlatformTypes::CodeSearchRepoFacet)])
  end
  def facets; end

  sig { returns(T::Boolean) }
  def facets?; end

  sig { returns(T::Boolean) }
  def incomplete; end

  sig { returns(T::Boolean) }
  def incomplete?; end

  sig { returns(String) }
  def internal_count_response; end

  sig { returns(T::Boolean) }
  def internal_count_response?; end

  sig { returns(String) }
  def internal_response; end

  sig { returns(T::Boolean) }
  def internal_response?; end

  sig { returns(Integer) }
  def limit; end

  sig { returns(T::Boolean) }
  def limit?; end

  sig { returns(T.nilable(T::Array[PlatformTypes::CodeSearchResult])) }
  def nodes; end

  sig { returns(T::Boolean) }
  def nodes?; end

  sig { returns(Integer) }
  def offset; end

  sig { returns(T::Boolean) }
  def offset?; end

  sig { returns(Integer) }
  def page; end

  sig { returns(T::Boolean) }
  def page?; end

  sig { returns(PlatformTypes::PageInfo) }
  def page_info; end

  sig { returns(T::Boolean) }
  def page_info?; end

  sig { returns(Integer) }
  def total_count; end

  sig { returns(T::Boolean) }
  def total_count?; end
end
