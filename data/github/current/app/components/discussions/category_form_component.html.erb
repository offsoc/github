<%= form_tag(form_action,
    class: "js-discussion-category-form",
    method: form_method,
    'data-test-selector'=>'category-form-present') do %>
  <input type="hidden" class="js-discussion-category-emoji-field" name="category[emoji]" value="<%= category.emoji %>">
    <% if category.errors.any? %>
      <%= render(Primer::Alpha::Banner.new(scheme: :danger, full: false)) do %>
        There was an error creating your discussion category<%= ": " + category.errors.full_messages.join(", ").downcase if category.errors.any? %>.
      <% end %>
    <% end %>
  <label class="h5" id="category-name-label">Category name</label>
  <div class="input-group mt-2">
    <span class="input-group-button" style="vertical-align:top">
      <%= render(Primer::Alpha::Overlay.new(
        title: "Select an emoji",
        visually_hide_title: true,
        padding: :none,
        classes: "js-discussion-category-emoji-picker",
        role: :dialog,
        "aria-modal": true,
      )) do |overlay| %>
        <% overlay.with_show_button(
          classes: "rounded-right-0 border-right-0 color-border-emphasis",
        ) do %>
          <span class="sr-only">Category emoji: </span>
          <span hidden>
            <%= current_emoji_html %>
          </span>
          <span class="js-discussion-category-custom-emoji">
            <%= current_emoji_html %>
          </span>
        <% end %>

        <% overlay.with_body(
          style: "border-radius: inherit; overflow: hidden; width: 410px",
          classes: "emoji-picker-container",
        ) do %>
          <include-fragment src="<%= emoji_picker_path %>" loading="lazy">
            <span tabindex="0" aria-label="Loading emojis..." autofocus role="img">
              <%= render(Primer::Beta::Spinner.new(my: 3, mx: :auto, display: :block)) %>
            </span>
          </include-fragment>
        <% end %>
      <% end %>
    </span>

    <%= render(Primer::Alpha::TextField.new(
      name: "category[name]",
      value: category.name,
      label: "Category name",
      "aria-labelledby": "category-name-label",
      classes: "rounded-right-2 rounded-left-0",
      visually_hide_label: true,
      validation_message: category.errors[:name].first || category.errors[:slug].first
      )) %>
  </div>

  <div class="mt-2">
    <%= render(Primer::Alpha::TextField.new(
      name: "category[description]",
      value: category.description,
      label: "Description",
      placeholder: "Add a description (optional)",
      class: "rounded-right-2",
      validation_message: category.errors[:description].first
    ))%>
  </div>

  <div class="mt-3">
    <fieldset>
      <legend class="h5">Discussion Format</legend>

      <div class="Box Box--condensed mt-2 js-category-container"
        data-supports-announcements="<%= category.supports_announcements? %>"
        data-supports-mark-as-answer="<%= category.supports_mark_as_answer? %>"
        data-category-id="<%= category.id %>"
      >
        <div class="Box-body <%= "disabled-category-form" if category.supports_polls? %>">
          <div class="form-checkbox border-bottom pb-3">

            <%= radio_button_tag "supports", "", !category.supports_mark_as_answer? && !category.supports_announcements?,
              id: dom_id(category, :supports_mark_as_answer_false),
              disabled: category.supports_polls?,
              aria: { describedby: dom_id(category, :open_ended_discussion_note) },
              class: 'js-open-ended-radio-button'
            %>
            <%= label_tag dom_id(category, :supports_mark_as_answer_false), "Open-ended discussion" %>
            <div class="note" id="<%= dom_id(category, :open_ended_discussion_note) %>">
              <% if !new? && category.supports_mark_as_answer? %>
                <div class="pt-2" id="<%= category.id %>-mark-as-answer-warning" hidden>
                  <%= render(Primer::Beta::Text.new(color: :danger, font_weight: :bold)) { "Warning: " } %>
                  <%= render(Primer::Beta::Text.new(color: :muted)) { "Changing the Discussion format from Q&A will mean no previously marked answers will be retained." } %>
                  <br><br>
                </div>
              <% end %>
              Enable your community to have conversations that don't require a definitive answer to a question. Great for sharing tips and tricks or just chatting.
            </div>
          </div>
          <div class="form-checkbox border-bottom pb-3">
            <%= radio_button_tag "supports", "mark_as_answer", category.supports_mark_as_answer?,
              id: dom_id(category, :supports_mark_as_answer_true),
              disabled: category.supports_polls?,
              aria: { describedby: dom_id(category, :question_answer_note) },
              class: 'js-mark-as-answer-radio-button'
            %>
            <%= label_tag dom_id(category, :supports_mark_as_answer_true), "Question / Answer" %>
            <p class="note" id="<%= dom_id(category, :question_answer_note) %>">
              Enable your community to ask questions, suggest answers, and vote on the best suggested answer.
            </p>
          </div>
          <div class="form-checkbox border-bottom pb-3">
            <%= radio_button_tag "supports", "announcements", category.supports_announcements?,
              id: dom_id(category, :supports_announcements_true),
              disabled: category.supports_polls? || !viewer_can_create_announcements?,
              aria: { describedby: dom_id(category, :announcements_note) },
              class: 'js-announcement-radio-button'
            %>
            <label for="<%= dom_id(category, :supports_announcements_true) %>">
              <%= render(Primer::Beta::Octicon.new(icon: "lock", aria: { label: "Restricted" })) %> Announcement
            </label>
            <div class="note" id="<%= dom_id(category, :announcements_note) %>">
              <% if !new? && !category.supports_announcements? %>
                <div class="pt-2" id="<%= category.id %>-announcement-warning" hidden>
                  <%= render(Primer::Beta::Text.new(color: :danger, font_weight: :bold)) { "Warning: " } %>
                  <%= render(Primer::Beta::Text.new(color: :muted)) { "All previous discussions in this category will be considered an announcement, even if not posted by a maintainer or admin." } %>
                  <br><br>
                </div>
              <% end %>
              <% if viewer_can_create_announcements? %>
                Share updates and news with your community. Only maintainers and admins can post new discussions in these categories, but anyone can comment and reply.
              <% else %>
                Share updates and news with your community. Only maintainers and admins can create or update new categories to announcements.
              <% end %>
            </div>
          </div>
          <div class="form-checkbox">
            <%= radio_button_tag "supports", "polls", category.supports_polls?,
              id: dom_id(category, :supports_polls_true),
              aria: { describedby: dom_id(category, :polls_note) },
              disabled: !new? && !category.supports_polls?
            %>
            <%= label_tag dom_id(category, :supports_polls_true), "Poll" %>
            <p class="note" id="<%= dom_id(category, :polls_note) %>">
              <% if !new? && !category.supports_polls? %>
                Cannot be changed to polls. Please create a new category for polls.
              <% else %>
                Gauge interest, vote, and interact with other community members using polls.
              <% end %>
            </p>
          </div>
        </div>
      </div>
    </fieldset>
  </div>

  <%= render(Discussions::CategoryFormSectionsComponent.new(repository: repository, category: category))%>

  <div class="mt-3 d-flex flex-justify-end">
    <%= render(Primer::Beta::Button.new(
      tag: :a,
      aria: { label: "Cancel" },
      href: cancel_path,
      mr: 2,
    )) { "Cancel" } %>
    <%= render(Primer::Beta::Button.new(
      type: :submit,
      scheme: :primary,
      data: { "disable-invalid": "", disable_with: "Submitting" },
    )) { submit_text } %>
  </div>
<% end %>
