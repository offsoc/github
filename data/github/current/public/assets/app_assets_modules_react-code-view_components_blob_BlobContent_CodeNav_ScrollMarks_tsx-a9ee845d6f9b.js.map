{"version":3,"file":"chunk-app_assets_modules_react-code-view_components_blob_BlobContent_CodeNav_ScrollMarks_tsx-xxxxxxxxxxxx.js","mappings":"4TAae,SAASA,EAAY,CAACC,wBAAAA,CAAuB,CAAmB,EAC7E,IAAMC,EAAiBC,EAAAA,CAAAA,GAAiBC,QAAQ,EAAEC,QAAU,EACtD,CAACC,EAAwB,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,EAAe,IAAMC,SAASC,IAAI,CAACC,YAAY,CAAGC,OAAOC,WAAW,CAAE,GAAO,EAAE,EAC3G,CAACC,EAAU,CAAGN,CAAAA,EAAAA,EAAAA,CAAAA,EAAe,IAAMC,SAASM,cAAc,CAACC,EAAAA,CAAsBA,EAAG,KAAM,EAAE,SAElG,EAEOC,CAAAA,EAAAA,EAAAA,YAAAA,EACL,UAACC,EAAAA,CACCf,eAAgBA,EAChBI,wBAAyBA,EACzBL,wBAAyBA,C,GAE3BY,GARqB,IAUzB,CAQO,SAASI,EAAkB,CAChChB,wBAAAA,CAAuB,CACvBC,eAAAA,CAAc,CACdI,wBAAAA,CAAuB,CACA,EAEvB,GAAI,CAACA,GAGDL,IAAAA,EAAwBI,MAAM,CAHJ,OAAO,KAKrC,IAAMa,EAAQjB,EAAwBkB,GAAG,CAACC,GAAW,EAKnDC,SAAUD,EAAOE,UAAU,CAAGpB,EAC9BqB,IAAK,CAAC,kBAAkB,EAAEH,EAAOI,IAAI,CAAC,CAAC,EAAEJ,EAAOE,UAAU,CAAC,CAAC,EAAEF,EAAOK,KAAK,CAACC,KAAK,CAACC,MAAM,CAAC,CAAC,CACzFC,KAAMR,EAAOE,UAAU,CACzB,GAGMO,EAAgB,IAAIC,IACpBC,EAAeb,EAAMc,MAAM,CAACC,GAChC,CAAIJ,EAAcK,GAAG,CAACD,EAAKZ,QAAQ,IACnCQ,EAAcM,GAAG,CAACF,EAAKZ,QAAQ,EACxB,KAGT,MACE,UAACe,EAAAA,CAAGA,CAAAA,CAACC,cAAY,sBAAsBC,GAAI,CAACC,OAAQ,MAAM,EAAGC,UAAU,0B,SACpET,EAAaZ,GAAG,CAACc,GAChB,UAACQ,EAAAA,CAA0BC,QAAS,IAAMC,CAAAA,EAAAA,EAAAA,CAAAA,EAAmB,CAACf,KAAMK,EAAKL,IAAI,GAAIgB,aAAcX,EAAKZ,QAAQ,EAA3FY,EAAKV,GAAG,E,EAIjC,CAEA,IAAMsB,EAAS,CACbC,SAAU,WACVC,MAAO,OACPR,OAAQ,MACRS,WAAY,+DACZC,WAAY,kCACZC,OAAQ,UACR,UAAW,CACTF,WAAY,yDACZG,UAAW,cACXC,OAAQ,CACV,CACF,EAEA,SAASX,EAAW,CAACG,aAAAA,CAAY,CAAEF,QAAAA,CAAO,CAA8C,EAEtF,MACE,UAACN,EAAAA,CAAGA,CAAAA,CACFiB,KAAK,SACLhB,cAAY,cACZC,GAAIO,EACJH,QAASA,EACTY,MAAO,CAACC,IAAK,CAAC,EAAEX,IAAAA,EAAmB,CAAC,CAAC,C,EAG3C,CAEA,GAAG,CAAE5C,EAAYwD,WAAW,EAAvBxD,CAAAA,EAAYwD,WAAW,CAAK,aAAY,CAAE,CAAE,KAAM,CAAC,CACxD,GAAG,CAAEvC,EAAkBuC,WAAW,EAA7BvC,CAAAA,EAAkBuC,WAAW,CAAK,mBAAkB,CAAE,CAAE,KAAM,CAAC,CACpE,GAAG,CAAEf,EAAWe,WAAW,EAAtBf,CAAAA,EAAWe,WAAW,CAAK,YAAW,CAAE,CAAE,KAAM,CAAC,C","sources":["app/assets/modules/react-code-view/components/blob/BlobContent/CodeNav/ScrollMarks.tsx"],"sourcesContent":["import type {DefinitionOrReference} from '@github-ui/code-nav'\nimport {useClientValue} from '@github-ui/use-client-value'\nimport {Box} from '@primer/react'\nimport {createPortal} from 'react-dom'\n\nimport {useCurrentBlob} from '../../../../hooks/CurrentBlob'\nimport {scrollLineIntoView} from '../../../../hooks/use-scroll-line-into-view'\nimport {scrollMarksContainerID} from './ScrollMarksContainer'\n\ninterface ScrollMarksProps {\n  definitionsOrReferences: DefinitionOrReference[]\n}\n\nexport default function ScrollMarks({definitionsOrReferences}: ScrollMarksProps) {\n  const totalLineCount = useCurrentBlob().rawLines?.length ?? 0\n  const [windowHasVerticalScroll] = useClientValue(() => document.body.scrollHeight > window.innerHeight, false, [])\n  const [container] = useClientValue(() => document.getElementById(scrollMarksContainerID), null, [])\n\n  if (!container) return null\n\n  return createPortal(\n    <ScrollMarksDesign\n      totalLineCount={totalLineCount}\n      windowHasVerticalScroll={windowHasVerticalScroll}\n      definitionsOrReferences={definitionsOrReferences}\n    />,\n    container,\n  )\n}\n\ninterface ScrollMarksDesignProps {\n  definitionsOrReferences: DefinitionOrReference[]\n  totalLineCount: number\n  windowHasVerticalScroll: boolean\n}\n\nexport function ScrollMarksDesign({\n  definitionsOrReferences,\n  totalLineCount,\n  windowHasVerticalScroll,\n}: ScrollMarksDesignProps) {\n  // Do not show anything if the entire file contents are already visible\n  if (!windowHasVerticalScroll) return null\n\n  // Do not show anything if there are no results\n  if (definitionsOrReferences.length === 0) return null\n\n  const marks = definitionsOrReferences.map(result => ({\n    // Strictly speaking, this does not take into account the height of the area above the code\n    // lines, but what I've found is that even in extreme edge cases (a very short file with a\n    // window that's short enough to add vertical scroll), the location of the mark is still good\n    // enough to get you to the result if you scroll to it.\n    location: result.lineNumber / totalLineCount,\n    key: `find-in-file-mark:${result.path}:${result.lineNumber},${result.ident.start.column}`,\n    line: result.lineNumber,\n  }))\n\n  // De-duplicate the marks based on location\n  const seenLocations = new Set<number>()\n  const dedupedMarks = marks.filter(mark => {\n    if (seenLocations.has(mark.location)) return false\n    seenLocations.add(mark.location)\n    return true\n  })\n\n  return (\n    <Box data-testid=\"scroll-marks-parent\" sx={{height: '100%'}} className=\"react-blob-scroll-marks\">\n      {dedupedMarks.map(mark => (\n        <ScrollMark key={mark.key} onClick={() => scrollLineIntoView({line: mark.line})} markLocation={mark.location} />\n      ))}\n    </Box>\n  )\n}\n\nconst markSx = {\n  position: 'absolute',\n  width: '100%',\n  height: '2px',\n  background: 'var(--bgColor-attention-emphasis, var(--color-attention-fg))',\n  transition: 'transform 0.2s, background 0.2s',\n  cursor: 'pointer',\n  '&:hover': {\n    background: 'var(--bgColor-severe-emphasis, var(--color-severe-fg))',\n    transform: 'scaleY(1.5)',\n    zIndex: 1,\n  },\n}\n\nfunction ScrollMark({markLocation, onClick}: {markLocation: number; onClick: () => void}) {\n  // Separate the constant sx from the changeable inline styles so that we don't create too many css classes\n  return (\n    <Box\n      role=\"button\"\n      data-testid=\"scroll-mark\"\n      sx={markSx}\n      onClick={onClick}\n      style={{top: `${markLocation * 100}%`}}\n    />\n  )\n}\n\ntry{ ScrollMarks.displayName ||= 'ScrollMarks' } catch {}\ntry{ ScrollMarksDesign.displayName ||= 'ScrollMarksDesign' } catch {}\ntry{ ScrollMark.displayName ||= 'ScrollMark' } catch {}"],"names":["ScrollMarks","definitionsOrReferences","totalLineCount","useCurrentBlob","rawLines","length","windowHasVerticalScroll","useClientValue","document","body","scrollHeight","window","innerHeight","container","getElementById","scrollMarksContainerID","createPortal","ScrollMarksDesign","marks","map","result","location","lineNumber","key","path","ident","start","column","line","seenLocations","Set","dedupedMarks","filter","mark","has","add","Box","data-testid","sx","height","className","ScrollMark","onClick","scrollLineIntoView","markLocation","markSx","position","width","background","transition","cursor","transform","zIndex","role","style","top","displayName"],"sourceRoot":""}