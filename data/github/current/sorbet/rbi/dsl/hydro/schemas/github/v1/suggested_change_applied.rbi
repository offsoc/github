# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::SuggestedChangeApplied`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::SuggestedChangeApplied`.

class Hydro::Schemas::Github::V1::SuggestedChangeApplied
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      check_annotation: T.nilable(Hydro::Schemas::Github::V1::Entities::CheckAnnotation),
      comment: T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequestReviewComment),
      commit_sha: T.nilable(Google::Protobuf::StringValue),
      error: T.nilable(T.any(Symbol, Integer)),
      file_extension: T.nilable(String),
      issue: T.nilable(Hydro::Schemas::Github::V1::Entities::Issue),
      pull_request: T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequest),
      repository: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository),
      repository_owner: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)
    ).void
  end
  def initialize(actor: nil, check_annotation: nil, comment: nil, commit_sha: nil, error: nil, file_extension: nil, issue: nil, pull_request: nil, repository: nil, repository_owner: nil, request_context: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::CheckAnnotation)) }
  def check_annotation; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::CheckAnnotation)).void }
  def check_annotation=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_check_annotation; end

  sig { void }
  def clear_comment; end

  sig { void }
  def clear_commit_sha; end

  sig { void }
  def clear_error; end

  sig { void }
  def clear_file_extension; end

  sig { void }
  def clear_issue; end

  sig { void }
  def clear_pull_request; end

  sig { void }
  def clear_repository; end

  sig { void }
  def clear_repository_owner; end

  sig { void }
  def clear_request_context; end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequestReviewComment)) }
  def comment; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequestReviewComment)).void }
  def comment=(value); end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def commit_sha; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def commit_sha=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def error; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def error=(value); end

  sig { returns(String) }
  def file_extension; end

  sig { params(value: String).void }
  def file_extension=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Issue)) }
  def issue; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Issue)).void }
  def issue=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequest)) }
  def pull_request; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequest)).void }
  def pull_request=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)) }
  def repository; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)).void }
  def repository=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def repository_owner; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def repository_owner=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end
end
