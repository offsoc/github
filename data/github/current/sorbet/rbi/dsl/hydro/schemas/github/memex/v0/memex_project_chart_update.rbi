# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Memex::V0::MemexProjectChartUpdate`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Memex::V0::MemexProjectChartUpdate`.

class Hydro::Schemas::Github::Memex::V0::MemexProjectChartUpdate
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      project: T.nilable(Hydro::Schemas::Github::V2::Entities::MemexProject),
      project_chart: T.nilable(Hydro::Schemas::Github::V1::Entities::MemexProjectChart)
    ).void
  end
  def initialize(actor: nil, project: nil, project_chart: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_project; end

  sig { void }
  def clear_project_chart; end

  sig { returns(T.nilable(Hydro::Schemas::Github::V2::Entities::MemexProject)) }
  def project; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V2::Entities::MemexProject)).void }
  def project=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::MemexProjectChart)) }
  def project_chart; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::MemexProjectChart)).void }
  def project_chart=(value); end
end
