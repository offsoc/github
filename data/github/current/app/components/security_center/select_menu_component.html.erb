<%# erblint:counter DeprecatedComponentsCounter 1 %>
<%= render(
  Primer::Experimental::SelectMenuComponent.new(
    details: { overlay: :default },
    display: :inline_block,
    position: :relative,
    menu: {
      preload: true,
      src: @src,
      tag: "details-menu"
    },
    modal: {
      params: { font_size: 5 }
    },
    **@system_arguments
  )
) do |menu| %>
  <% menu.with_header(closeable: false, border_bottom: 0).with_content(@header) if @header.present? %>
  <% menu.with_summary(color: :muted, scheme: :link, underline: false, caret: false, classes: "select-menu-button").with_content(@button_text) %>

  <% if show_clear_button? %>
    <% menu.with_clear_item(
      href: clear_href,
      muted: true,
      selected: false,
      tag: :a,
      test_selector: "#{@button_text.downcase.gsub(" ", "-")}-clear-filter",
      underline: false
    ) do %>
      <%= render(Primer::Box.new(display: :flex, justify_content: :space_between, w: :full)) do %>
        <%= render(Primer::Box.new(direction: :column, display: :flex)) do %>
          <%= render(Primer::Truncate.new(max_width: 175).with_content(@clear_item_text)) %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>

  <% if @src.nil? %>
    <% @tabs.each do |tab| %>
      <% menu.with_list(title: tab.title) do |list| %>
        <% SecurityCenter::SelectMenuComponentHelper.fill_tab(
          default_selected_slug: @default_selected_slug,
          is_multiselect: @is_multiselect,
          items: tab.items,
          list: list,
          qualifier_to_valid_values_map: @qualifier_to_valid_values_map,
          query: @query,
          query_parser: @query_parser,
          use_default_selected_slug_on_invalid_values: @use_default_selected_slug_on_invalid_values
        ) do |item| %>
          <%= render(SecurityCenter::SelectMenu::ItemComponent.new(item: item)) %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% end %>
