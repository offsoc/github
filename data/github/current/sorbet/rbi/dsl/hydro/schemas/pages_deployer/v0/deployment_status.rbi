# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::PagesDeployer::V0::DeploymentStatus`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::PagesDeployer::V0::DeploymentStatus`.

class Hydro::Schemas::PagesDeployer::V0::DeploymentStatus
  sig do
    params(
      aqueduct_message: T.nilable(String),
      artifact_hash: T.nilable(String),
      artifact_url: T.nilable(String),
      deployment_id: T.nilable(String),
      environment: T.nilable(String),
      failed_hosts: T.nilable(T.any(Google::Protobuf::RepeatedField[Hydro::Schemas::PagesDeployer::V0::Entities::Host], T::Array[Hydro::Schemas::PagesDeployer::V0::Entities::Host])),
      github_deployment_id: T.nilable(Integer),
      global_id: T.nilable(String),
      nwo: T.nilable(String),
      pages_build_version: T.nilable(String),
      preview: T.nilable(T::Boolean),
      preview_token: T.nilable(String),
      ref: T.nilable(String),
      repository_id: T.nilable(Integer),
      retried_times: T.nilable(Integer),
      sub_dir: T.nilable(String),
      successful_hosts: T.nilable(T.any(Google::Protobuf::RepeatedField[Hydro::Schemas::PagesDeployer::V0::Entities::Host], T::Array[Hydro::Schemas::PagesDeployer::V0::Entities::Host])),
      type: T.nilable(Integer)
    ).void
  end
  def initialize(aqueduct_message: nil, artifact_hash: nil, artifact_url: nil, deployment_id: nil, environment: nil, failed_hosts: T.unsafe(nil), github_deployment_id: nil, global_id: nil, nwo: nil, pages_build_version: nil, preview: nil, preview_token: nil, ref: nil, repository_id: nil, retried_times: nil, sub_dir: nil, successful_hosts: T.unsafe(nil), type: nil); end

  sig { returns(String) }
  def aqueduct_message; end

  sig { params(value: String).void }
  def aqueduct_message=(value); end

  sig { returns(String) }
  def artifact_hash; end

  sig { params(value: String).void }
  def artifact_hash=(value); end

  sig { returns(String) }
  def artifact_url; end

  sig { params(value: String).void }
  def artifact_url=(value); end

  sig { void }
  def clear_aqueduct_message; end

  sig { void }
  def clear_artifact_hash; end

  sig { void }
  def clear_artifact_url; end

  sig { void }
  def clear_deployment_id; end

  sig { void }
  def clear_environment; end

  sig { void }
  def clear_failed_hosts; end

  sig { void }
  def clear_github_deployment_id; end

  sig { void }
  def clear_global_id; end

  sig { void }
  def clear_nwo; end

  sig { void }
  def clear_pages_build_version; end

  sig { void }
  def clear_preview; end

  sig { void }
  def clear_preview_token; end

  sig { void }
  def clear_ref; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_retried_times; end

  sig { void }
  def clear_sub_dir; end

  sig { void }
  def clear_successful_hosts; end

  sig { void }
  def clear_type; end

  sig { returns(String) }
  def deployment_id; end

  sig { params(value: String).void }
  def deployment_id=(value); end

  sig { returns(String) }
  def environment; end

  sig { params(value: String).void }
  def environment=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Hydro::Schemas::PagesDeployer::V0::Entities::Host]) }
  def failed_hosts; end

  sig { params(value: Google::Protobuf::RepeatedField[Hydro::Schemas::PagesDeployer::V0::Entities::Host]).void }
  def failed_hosts=(value); end

  sig { returns(Integer) }
  def github_deployment_id; end

  sig { params(value: Integer).void }
  def github_deployment_id=(value); end

  sig { returns(String) }
  def global_id; end

  sig { params(value: String).void }
  def global_id=(value); end

  sig { returns(String) }
  def nwo; end

  sig { params(value: String).void }
  def nwo=(value); end

  sig { returns(String) }
  def pages_build_version; end

  sig { params(value: String).void }
  def pages_build_version=(value); end

  sig { returns(T::Boolean) }
  def preview; end

  sig { params(value: T::Boolean).void }
  def preview=(value); end

  sig { returns(String) }
  def preview_token; end

  sig { params(value: String).void }
  def preview_token=(value); end

  sig { returns(String) }
  def ref; end

  sig { params(value: String).void }
  def ref=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end

  sig { returns(Integer) }
  def retried_times; end

  sig { params(value: Integer).void }
  def retried_times=(value); end

  sig { returns(String) }
  def sub_dir; end

  sig { params(value: String).void }
  def sub_dir=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Hydro::Schemas::PagesDeployer::V0::Entities::Host]) }
  def successful_hosts; end

  sig { params(value: Google::Protobuf::RepeatedField[Hydro::Schemas::PagesDeployer::V0::Entities::Host]).void }
  def successful_hosts=(value); end

  sig { returns(Integer) }
  def type; end

  sig { params(value: Integer).void }
  def type=(value); end
end
