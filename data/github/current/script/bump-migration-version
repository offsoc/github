#!/usr/bin/env ruby

unless (filename = ARGV.shift)
  abort "usage: #$0 <migration filename>"
end

unless File.exist?(filename)
  abort "migration file not found: #{filename}"
end

require "fileutils"

version     = %r(/(\d+)_).match(filename)[1]
new_version = Time.now.utc.strftime "%Y%m%d%H%M%S"
new_name    = filename.sub(version, new_version)

STDERR.puts "Old migration version: #{version}"
STDERR.puts "New migration version: #{new_version}"
STDERR.puts
STDERR.puts "Renaming #{filename} to #{new_name}..."

`git mv #{filename} #{new_name}`

STDERR.puts
STDERR.puts "Updating schema.rb to version #{new_version}..."

schema = File.read("db/schema.rb")
File.open("db/schema.rb", "w") do |file|
  file.write schema.sub(/:version => \d+/, ":version => #{new_version}")
end
%x(git add db/schema.rb)

STDERR.puts
STDERR.puts %x(git diff --cached --color db/schema.rb)
STDERR.puts %x(git status db)
STDERR.puts
STDERR.puts "Done."
