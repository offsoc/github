# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::TokenScanningService::V0::BackfillGroupRequest`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::TokenScanningService::V0::BackfillGroupRequest`.

class Hydro::Schemas::TokenScanningService::V0::BackfillGroupRequest
  sig do
    params(
      action: T.nilable(T.any(Symbol, Integer)),
      backfill_type: T.nilable(T.any(Symbol, Integer)),
      business: T.nilable(Hydro::Schemas::TokenScanningService::V0::BackfillGroupRequest::Business),
      feature_flags: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      owner_id: T.nilable(Integer),
      owner_scope: T.nilable(T.any(Symbol, Integer)),
      repository_ids: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer])),
      requested_at: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(action: nil, backfill_type: nil, business: nil, feature_flags: T.unsafe(nil), owner_id: nil, owner_scope: nil, repository_ids: T.unsafe(nil), requested_at: nil); end

  sig { returns(T.any(Symbol, Integer)) }
  def action; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def action=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def backfill_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def backfill_type=(value); end

  sig { returns(T.nilable(Hydro::Schemas::TokenScanningService::V0::BackfillGroupRequest::Business)) }
  def business; end

  sig { params(value: T.nilable(Hydro::Schemas::TokenScanningService::V0::BackfillGroupRequest::Business)).void }
  def business=(value); end

  sig { void }
  def clear_action; end

  sig { void }
  def clear_backfill_type; end

  sig { void }
  def clear_business; end

  sig { void }
  def clear_feature_flags; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_owner_scope; end

  sig { void }
  def clear_repository_ids; end

  sig { void }
  def clear_requested_at; end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def feature_flags; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def feature_flags=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def owner_scope; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def owner_scope=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def repository_ids; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def repository_ids=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def requested_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def requested_at=(value); end
end
