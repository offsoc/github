# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Copilotapi::Chat::V1::SecretScanningAlert`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Copilotapi::Chat::V1::SecretScanningAlert`.

class MonolithTwirp::Copilotapi::Chat::V1::SecretScanningAlert
  sig do
    params(
      created_at: T.nilable(Google::Protobuf::Timestamp),
      external_remediation_url: T.nilable(String),
      file_locations: T.nilable(T.any(Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::Chat::V1::AlertLocation], T::Array[MonolithTwirp::Copilotapi::Chat::V1::AlertLocation])),
      is_resolved: T.nilable(T::Boolean),
      number: T.nilable(Integer),
      other_locations: T.nilable(T.any(Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::Chat::V1::SecretScanningAlert::OtherLocation], T::Array[MonolithTwirp::Copilotapi::Chat::V1::SecretScanningAlert::OtherLocation])),
      raw_secret: T.nilable(String),
      related_files: T.nilable(T.any(Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::Chat::V1::AlertFile], T::Array[MonolithTwirp::Copilotapi::Chat::V1::AlertFile])),
      related_locations: T.nilable(T.any(Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::Chat::V1::AlertLocation], T::Array[MonolithTwirp::Copilotapi::Chat::V1::AlertLocation])),
      remediation_steps: T.nilable(String),
      repo_id: T.nilable(Integer),
      resolution: T.nilable(String),
      resolved_at: T.nilable(Google::Protobuf::Timestamp),
      resolved_by: T.nilable(MonolithTwirp::Copilotapi::Chat::V1::SecretScanningAlert::Resolver),
      secret_type: T.nilable(String),
      secret_type_label: T.nilable(String),
      url: T.nilable(String),
      validity: T.nilable(String)
    ).void
  end
  def initialize(created_at: nil, external_remediation_url: nil, file_locations: T.unsafe(nil), is_resolved: nil, number: nil, other_locations: T.unsafe(nil), raw_secret: nil, related_files: T.unsafe(nil), related_locations: T.unsafe(nil), remediation_steps: nil, repo_id: nil, resolution: nil, resolved_at: nil, resolved_by: nil, secret_type: nil, secret_type_label: nil, url: nil, validity: nil); end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_external_remediation_url; end

  sig { void }
  def clear_file_locations; end

  sig { void }
  def clear_is_resolved; end

  sig { void }
  def clear_number; end

  sig { void }
  def clear_other_locations; end

  sig { void }
  def clear_raw_secret; end

  sig { void }
  def clear_related_files; end

  sig { void }
  def clear_related_locations; end

  sig { void }
  def clear_remediation_steps; end

  sig { void }
  def clear_repo_id; end

  sig { void }
  def clear_resolution; end

  sig { void }
  def clear_resolved_at; end

  sig { void }
  def clear_resolved_by; end

  sig { void }
  def clear_secret_type; end

  sig { void }
  def clear_secret_type_label; end

  sig { void }
  def clear_url; end

  sig { void }
  def clear_validity; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(String) }
  def external_remediation_url; end

  sig { params(value: String).void }
  def external_remediation_url=(value); end

  sig { returns(Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::Chat::V1::AlertLocation]) }
  def file_locations; end

  sig { params(value: Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::Chat::V1::AlertLocation]).void }
  def file_locations=(value); end

  sig { returns(T::Boolean) }
  def is_resolved; end

  sig { params(value: T::Boolean).void }
  def is_resolved=(value); end

  sig { returns(Integer) }
  def number; end

  sig { params(value: Integer).void }
  def number=(value); end

  sig do
    returns(Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::Chat::V1::SecretScanningAlert::OtherLocation])
  end
  def other_locations; end

  sig do
    params(
      value: Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::Chat::V1::SecretScanningAlert::OtherLocation]
    ).void
  end
  def other_locations=(value); end

  sig { returns(String) }
  def raw_secret; end

  sig { params(value: String).void }
  def raw_secret=(value); end

  sig { returns(Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::Chat::V1::AlertFile]) }
  def related_files; end

  sig { params(value: Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::Chat::V1::AlertFile]).void }
  def related_files=(value); end

  sig { returns(Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::Chat::V1::AlertLocation]) }
  def related_locations; end

  sig { params(value: Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::Chat::V1::AlertLocation]).void }
  def related_locations=(value); end

  sig { returns(String) }
  def remediation_steps; end

  sig { params(value: String).void }
  def remediation_steps=(value); end

  sig { returns(Integer) }
  def repo_id; end

  sig { params(value: Integer).void }
  def repo_id=(value); end

  sig { returns(String) }
  def resolution; end

  sig { params(value: String).void }
  def resolution=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def resolved_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def resolved_at=(value); end

  sig { returns(T.nilable(MonolithTwirp::Copilotapi::Chat::V1::SecretScanningAlert::Resolver)) }
  def resolved_by; end

  sig { params(value: T.nilable(MonolithTwirp::Copilotapi::Chat::V1::SecretScanningAlert::Resolver)).void }
  def resolved_by=(value); end

  sig { returns(String) }
  def secret_type; end

  sig { params(value: String).void }
  def secret_type=(value); end

  sig { returns(String) }
  def secret_type_label; end

  sig { params(value: String).void }
  def secret_type_label=(value); end

  sig { returns(String) }
  def url; end

  sig { params(value: String).void }
  def url=(value); end

  sig { returns(String) }
  def validity; end

  sig { params(value: String).void }
  def validity=(value); end
end
