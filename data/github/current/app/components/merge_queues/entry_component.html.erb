<li class="Box-row d-flex flex-column pb-0">
  <div class="d-flex flex-row pb-3">
    <div class="d-flex width-full">
      <div class="d-flex flex-items-start mr-3">
        <div <%= test_selector("entry-status") %>>
          <%= render MergeQueues::EntryStatusComponent.new(
            entry: entry,
            queue: merge_queue,
            repository: repository,
          ) %>
        </div>
      </div>
      <div class="width-full">
        <div>
          <h4 class="d-inline-flex mt-n1 mr-1" style="overflow-wrap: anywhere;" <%= test_selector("pr-title") %>>
            <%= render(Primer::Beta::Link.new(
              href: gh_show_pull_request_path(pull_request),
              scheme: :primary,
              classes: "markdown-title")) do %>
              <%= helpers.title_markdown(pull_request.title) %>
            <% end %>
          </h4>

          <% if entry.solo? %>
            <%= render Primer::Beta::Label.new(
              title: "Solo merge",
              scheme: :orange,
              test_selector: "solo-merge",
            ).with_content("Solo merge") %>
          <% end %>

          <% if entry.jump_queue? %>
            <%= render Primer::Beta::Label.new(
              title: "Jumped",
              scheme: :orange,
              test_selector: "jump-queue",
            ).with_content("Jumped") %>
          <% end %>

          <% if entry.blocked_by_merge_conflicts? %>
            <%= render Primer::Beta::Label.new(
              title: "Merge conflicts",
              scheme: :danger,
              test_selector: "merge-conflicts",
            ).with_content("Merge conflicts") %>
          <% end %>

          <% if entry.required_status_failing? %>
            <%= render Primer::Beta::Label.new(
              title: "Checks failed",
              scheme: :danger,
              test_selector: "checks-failed",
            ).with_content("Checks failed") %>
          <% end %>
        </div>
        <div class="color-fg-muted text-small mt-1">
          <span class="opened-by">
            <a href="<%= gh_show_pull_request_path(pull_request) %>" class="text-bold Link--secondary no-underline" <%= test_selector("pr-number") %>>
              #<%= pull_request.number %>
            </a>
            <% if enqueued_by_author? %>
              opened and enqueued by <%= avatar_for(entry.enqueuer, 16, class: "mb-n1") %> <%= profile_link(entry.enqueuer, class: "user-mention text-bold Link--secondary no-underline", skip_hovercard: true) %>
            <% else %>
              opened by <%= avatar_for(pull_request.user, 16, class: "mb-n1") %> <%= profile_link(pull_request.user, class: "user-mention text-bold Link--secondary no-underline", skip_hovercard: true) %> and enqueued by <%= avatar_for(entry.enqueuer, 16, class: "mb-n1") %> <%= profile_link(entry.enqueuer, class: "user-mention text-bold Link--secondary no-underline Link--inTextBlock", skip_hovercard: true) %>
            <% end %>
            • enqueued <%= time_ago_in_words(entry.enqueued_at) %> ago
          </span>
          <% if !GitHub.flipper[:hide_merge_queue_time_estimate].enabled?(repository) && estimate = entry.time_to_merge_in_seconds %>
            <span>
            • Estimated merge in <%= precise_duration(estimate, simplified: true) %>
            </span>
          <% end %>
        </div>
      </div>

      <div class="d-flex flex-items-center flex-justify-end">
        <% if !locked? && viewer_can_admin_entry? %>
          <%= render MergeQueues::EntryEditComponent.new(
            entry: entry,
            repository: repository,
            merge_queue: merge_queue,
            pull_request: pull_request,
            repo_merge_queue_enabled: repo_merge_queue_enabled?,
          ) %>
        <% end %>

        <%= render Primer::Beta::IconButton.new(
          tag: :button,
          icon: :checklist,
          scheme: :invisible,
          data: { "show-dialog-id": "entry-status-dialog-#{pull_request.number}", target: "modal-dialog.show-button" },
          "aria-label": "Queue entry status details")
        %>

        <%= render(Primer::Alpha::Dialog.new(id: "entry-status-dialog-#{pull_request.number}", title: "Queue entry status details", size: :xlarge)) do |d| %>
          <%= render(Primer::Alpha::Dialog::Body.new) do %>
            <strong><% pull_request.title %></strong>
            <include-fragment class="width-full" loading="lazy" src="<%= merge_queue_entry_status_path(user_id: repository.owner_display_login, repository: repository, merge_queue_branch: merge_queue.branch, entry_id: entry.id) %>">
              <div>
                <%= render(Primer::Beta::Spinner.new(my: 3, mx: :auto, display: :block)) %>
              </div>
            </include-fragment>
          <% end %>
        <% end %>
      </div>
    </div>
  </div>
</li>
