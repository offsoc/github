# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: spokes-api/references/v1/references_api.proto

require 'google/protobuf'

require 'spokes-api/types/v1/cursor_pb'
require 'spokes-api/types/v1/reference_pb'
require 'spokes-api/types/v1/repository_pb'
require 'spokes-api/types/v1/request_context_pb'
require 'spokes-api/types/v1/sockstat_pb'
require 'spokes-api/types/v1/update_references_priority_pb'
require 'spokes-api/types/selectors/v1/universal_selector_pb'
require 'spokes-api/types/selectors/v1/prefix_selector_pb'
require 'spokes-api/types/selectors/v1/ref_glob_selector_pb'
require 'spokes-api/references/v1/reference_item_pb'
require 'spokes-api/references/v1/transaction_pb'
require 'spokes-api/references/v1/ref_status_pb'
require 'spokes-api/references/v1/ref_with_commit_time_pb'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("spokes-api/references/v1/references_api.proto", :syntax => :proto3) do
    add_message "github.spokes.references.v1.ListReferencesRequest" do
      optional :repository, :message, 1, "github.spokes.types.v1.Repository"
      optional :cursor, :message, 2, "github.spokes.types.v1.Cursor"
      optional :request_context, :message, 5, "github.spokes.types.v1.RequestContext"
      oneof :selector do
        optional :universal_selector, :message, 3, "github.spokes.types.selectors.v1.UniversalSelector"
        optional :prefix_selector, :message, 4, "github.spokes.types.selectors.v1.PrefixSelector"
      end
    end
    add_message "github.spokes.references.v1.ListReferencesResponse" do
      repeated :reference_items, :message, 1, "github.spokes.references.v1.ReferenceItem"
      optional :next_cursor, :message, 2, "github.spokes.types.v1.Cursor"
    end
    add_message "github.spokes.references.v1.GetDefaultBranchRequest" do
      optional :repository, :message, 1, "github.spokes.types.v1.Repository"
      optional :request_context, :message, 2, "github.spokes.types.v1.RequestContext"
    end
    add_message "github.spokes.references.v1.GetDefaultBranchResponse" do
      optional :reference, :message, 1, "github.spokes.types.v1.Reference"
    end
    add_message "github.spokes.references.v1.UpdateRequest" do
      optional :repository, :message, 1, "github.spokes.types.v1.Repository"
      optional :nwo, :string, 2
      optional :priority, :message, 3, "github.spokes.types.v1.UpdateReferencesPriority"
      optional :txn, :message, 4, "github.spokes.references.v1.Transaction"
      optional :sockstat, :message, 5, "github.spokes.types.v1.Sockstat"
      repeated :fileservers, :string, 6
    end
    add_message "github.spokes.references.v1.UpdateResponse" do
      optional :error_reason, :enum, 1, "github.spokes.references.v1.UpdateResponse.ErrorReason"
      optional :error_message, :string, 2
      optional :checksum, :string, 3
      optional :committed_at, :uint64, 4
      repeated :refs_status, :message, 5, "github.spokes.references.v1.RefStatus"
    end
    add_enum "github.spokes.references.v1.UpdateResponse.ErrorReason" do
      value :ERROR_REASON_INVALID, 0
      value :ERROR_REASON_FAILED_TO_LOCK, 1
      value :ERROR_REASON_THREEPC, 2
      value :ERROR_REASON_TOO_BUSY, 3
      value :ERROR_REASON_TIMEOUT, 4
      value :ERROR_REASON_DATABASE, 5
    end
    add_message "github.spokes.references.v1.UpdateDefaultBranchRequest" do
      optional :repository, :message, 1, "github.spokes.types.v1.Repository"
      optional :request_context, :message, 2, "github.spokes.types.v1.RequestContext"
      optional :nwo, :string, 3
      optional :priority, :message, 4, "github.spokes.types.v1.UpdateReferencesPriority"
      optional :new_value, :message, 5, "github.spokes.types.v1.Reference"
      optional :sockstat, :message, 6, "github.spokes.types.v1.Sockstat"
    end
    add_message "github.spokes.references.v1.UpdateDefaultBranchResponse" do
      optional :error_reason, :enum, 1, "github.spokes.references.v1.UpdateDefaultBranchResponse.ErrorReason"
      optional :error_message, :string, 2
      optional :checksum, :string, 3
      optional :committed_at, :uint64, 4
    end
    add_enum "github.spokes.references.v1.UpdateDefaultBranchResponse.ErrorReason" do
      value :ERROR_REASON_INVALID, 0
      value :ERROR_REASON_FAILED_TO_LOCK, 1
      value :ERROR_REASON_THREEPC, 2
      value :ERROR_REASON_TOO_BUSY, 3
      value :ERROR_REASON_TIMEOUT, 4
      value :ERROR_REASON_DATABASE, 5
    end
    add_message "github.spokes.references.v1.ListReferencesWithDetailsRequest" do
      optional :repository, :message, 1, "github.spokes.types.v1.Repository"
      optional :request_context, :message, 2, "github.spokes.types.v1.RequestContext"
      oneof :selector do
        optional :universal_selector, :message, 3, "github.spokes.types.selectors.v1.UniversalSelector"
        optional :ref_glob_selector, :message, 4, "github.spokes.types.selectors.v1.RefGlobSelector"
      end
    end
    add_message "github.spokes.references.v1.ListReferencesWithDetailsResponse" do
      repeated :refs, :message, 1, "github.spokes.references.v1.RefWithCommitTime"
    end
  end
end

module GitHub
  module Spokes
    module Proto
      module References
        module V1
          ListReferencesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.spokes.references.v1.ListReferencesRequest").msgclass
          ListReferencesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.spokes.references.v1.ListReferencesResponse").msgclass
          GetDefaultBranchRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.spokes.references.v1.GetDefaultBranchRequest").msgclass
          GetDefaultBranchResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.spokes.references.v1.GetDefaultBranchResponse").msgclass
          UpdateRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.spokes.references.v1.UpdateRequest").msgclass
          UpdateResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.spokes.references.v1.UpdateResponse").msgclass
          UpdateResponse::ErrorReason = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.spokes.references.v1.UpdateResponse.ErrorReason").enummodule
          UpdateDefaultBranchRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.spokes.references.v1.UpdateDefaultBranchRequest").msgclass
          UpdateDefaultBranchResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.spokes.references.v1.UpdateDefaultBranchResponse").msgclass
          UpdateDefaultBranchResponse::ErrorReason = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.spokes.references.v1.UpdateDefaultBranchResponse.ErrorReason").enummodule
          ListReferencesWithDetailsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.spokes.references.v1.ListReferencesWithDetailsRequest").msgclass
          ListReferencesWithDetailsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.spokes.references.v1.ListReferencesWithDetailsResponse").msgclass
        end
      end
    end
  end
end
