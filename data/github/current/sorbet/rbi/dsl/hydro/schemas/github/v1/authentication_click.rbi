# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::AuthenticationClick`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::AuthenticationClick`.

class Hydro::Schemas::Github::V1::AuthenticationClick
  sig do
    params(
      auth_type: T.nilable(T.any(Symbol, Integer)),
      location_in_page: T.nilable(Google::Protobuf::StringValue),
      owner: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      repository: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)
    ).void
  end
  def initialize(auth_type: nil, location_in_page: nil, owner: nil, repository: nil, request_context: nil); end

  sig { returns(T.any(Symbol, Integer)) }
  def auth_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def auth_type=(value); end

  sig { void }
  def clear_auth_type; end

  sig { void }
  def clear_location_in_page; end

  sig { void }
  def clear_owner; end

  sig { void }
  def clear_repository; end

  sig { void }
  def clear_request_context; end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def location_in_page; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def location_in_page=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def owner; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def owner=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)) }
  def repository; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)).void }
  def repository=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end
end
