# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Support::HelpHub::V1::UserTwoFactorDetailResultItem`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Support::HelpHub::V1::UserTwoFactorDetailResultItem`.

class MonolithTwirp::Support::HelpHub::V1::UserTwoFactorDetailResultItem
  sig do
    params(
      has_authenticator_active: T.nilable(T::Boolean),
      has_gh_mobile_auth: T.nilable(T::Boolean),
      has_organizations_with_requirement: T.nilable(T::Boolean),
      has_recovery_code_viewed: T.nilable(T::Boolean),
      has_recovery_gpg_keys: T.nilable(T::Boolean),
      has_recovery_pats: T.nilable(T::Boolean),
      has_recovery_ssh_keys: T.nilable(T::Boolean),
      has_security_keys: T.nilable(T::Boolean),
      has_sms_active: T.nilable(T::Boolean),
      has_sms_fallback: T.nilable(T::Boolean),
      has_trusted_devices: T.nilable(T::Boolean),
      requirement_date: T.nilable(String),
      requirement_state: T.nilable(String)
    ).void
  end
  def initialize(has_authenticator_active: nil, has_gh_mobile_auth: nil, has_organizations_with_requirement: nil, has_recovery_code_viewed: nil, has_recovery_gpg_keys: nil, has_recovery_pats: nil, has_recovery_ssh_keys: nil, has_security_keys: nil, has_sms_active: nil, has_sms_fallback: nil, has_trusted_devices: nil, requirement_date: nil, requirement_state: nil); end

  sig { void }
  def clear_has_authenticator_active; end

  sig { void }
  def clear_has_gh_mobile_auth; end

  sig { void }
  def clear_has_organizations_with_requirement; end

  sig { void }
  def clear_has_recovery_code_viewed; end

  sig { void }
  def clear_has_recovery_gpg_keys; end

  sig { void }
  def clear_has_recovery_pats; end

  sig { void }
  def clear_has_recovery_ssh_keys; end

  sig { void }
  def clear_has_security_keys; end

  sig { void }
  def clear_has_sms_active; end

  sig { void }
  def clear_has_sms_fallback; end

  sig { void }
  def clear_has_trusted_devices; end

  sig { void }
  def clear_requirement_date; end

  sig { void }
  def clear_requirement_state; end

  sig { returns(T::Boolean) }
  def has_authenticator_active; end

  sig { params(value: T::Boolean).void }
  def has_authenticator_active=(value); end

  sig { returns(T::Boolean) }
  def has_gh_mobile_auth; end

  sig { params(value: T::Boolean).void }
  def has_gh_mobile_auth=(value); end

  sig { returns(T::Boolean) }
  def has_organizations_with_requirement; end

  sig { params(value: T::Boolean).void }
  def has_organizations_with_requirement=(value); end

  sig { returns(T::Boolean) }
  def has_recovery_code_viewed; end

  sig { params(value: T::Boolean).void }
  def has_recovery_code_viewed=(value); end

  sig { returns(T::Boolean) }
  def has_recovery_gpg_keys; end

  sig { params(value: T::Boolean).void }
  def has_recovery_gpg_keys=(value); end

  sig { returns(T::Boolean) }
  def has_recovery_pats; end

  sig { params(value: T::Boolean).void }
  def has_recovery_pats=(value); end

  sig { returns(T::Boolean) }
  def has_recovery_ssh_keys; end

  sig { params(value: T::Boolean).void }
  def has_recovery_ssh_keys=(value); end

  sig { returns(T::Boolean) }
  def has_security_keys; end

  sig { params(value: T::Boolean).void }
  def has_security_keys=(value); end

  sig { returns(T::Boolean) }
  def has_sms_active; end

  sig { params(value: T::Boolean).void }
  def has_sms_active=(value); end

  sig { returns(T::Boolean) }
  def has_sms_fallback; end

  sig { params(value: T::Boolean).void }
  def has_sms_fallback=(value); end

  sig { returns(T::Boolean) }
  def has_trusted_devices; end

  sig { params(value: T::Boolean).void }
  def has_trusted_devices=(value); end

  sig { returns(String) }
  def requirement_date; end

  sig { params(value: String).void }
  def requirement_date=(value); end

  sig { returns(String) }
  def requirement_state; end

  sig { params(value: String).void }
  def requirement_state=(value); end
end
