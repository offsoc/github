# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Notifyd::V0::Notify`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Notifyd::V0::Notify`.

class Hydro::Schemas::Notifyd::V0::Notify
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Notifyd::V0::Notify::Actor),
      attributes: T.nilable(T.any(Google::Protobuf::RepeatedField[Hydro::Schemas::Notifyd::V0::Notify::Attribute], T::Array[Hydro::Schemas::Notifyd::V0::Notify::Attribute])),
      authorization: T.nilable(Hydro::Schemas::Notifyd::V0::Notify::Authorization),
      config: T.nilable(Hydro::Schemas::Notifyd::V0::Notify::Config),
      context: T.nilable(Hydro::Schemas::Notifyd::V0::Notify::Context),
      explicit_recipients: T.nilable(T.any(Google::Protobuf::RepeatedField[Hydro::Schemas::Notifyd::V0::Notify::RecipientGroup], T::Array[Hydro::Schemas::Notifyd::V0::Notify::RecipientGroup])),
      feature_swiches: T.nilable(T.any(Google::Protobuf::Map[String, T::Boolean], T::Hash[String, T::Boolean])),
      notification_id: T.nilable(String),
      related_topics: T.nilable(T.any(Google::Protobuf::RepeatedField[Hydro::Schemas::Notifyd::V0::Notify::Topic], T::Array[Hydro::Schemas::Notifyd::V0::Notify::Topic])),
      rendering: T.nilable(Hydro::Schemas::Notifyd::V0::Notify::Rendering),
      retries: T.nilable(Hydro::Schemas::Notifyd::V0::Entities::Retries),
      subject: T.nilable(Hydro::Schemas::Notifyd::V0::Notify::Subject),
      tracking: T.nilable(Hydro::Schemas::Notifyd::V0::Entities::Tracking)
    ).void
  end
  def initialize(actor: nil, attributes: T.unsafe(nil), authorization: nil, config: nil, context: nil, explicit_recipients: T.unsafe(nil), feature_swiches: T.unsafe(nil), notification_id: nil, related_topics: T.unsafe(nil), rendering: nil, retries: nil, subject: nil, tracking: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Notifyd::V0::Notify::Actor)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Notifyd::V0::Notify::Actor)).void }
  def actor=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Hydro::Schemas::Notifyd::V0::Notify::Attribute]) }
  def attributes; end

  sig { params(value: Google::Protobuf::RepeatedField[Hydro::Schemas::Notifyd::V0::Notify::Attribute]).void }
  def attributes=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Notifyd::V0::Notify::Authorization)) }
  def authorization; end

  sig { params(value: T.nilable(Hydro::Schemas::Notifyd::V0::Notify::Authorization)).void }
  def authorization=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_attributes; end

  sig { void }
  def clear_authorization; end

  sig { void }
  def clear_config; end

  sig { void }
  def clear_context; end

  sig { void }
  def clear_explicit_recipients; end

  sig { void }
  def clear_feature_swiches; end

  sig { void }
  def clear_notification_id; end

  sig { void }
  def clear_related_topics; end

  sig { void }
  def clear_rendering; end

  sig { void }
  def clear_retries; end

  sig { void }
  def clear_subject; end

  sig { void }
  def clear_tracking; end

  sig { returns(T.nilable(Hydro::Schemas::Notifyd::V0::Notify::Config)) }
  def config; end

  sig { params(value: T.nilable(Hydro::Schemas::Notifyd::V0::Notify::Config)).void }
  def config=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Notifyd::V0::Notify::Context)) }
  def context; end

  sig { params(value: T.nilable(Hydro::Schemas::Notifyd::V0::Notify::Context)).void }
  def context=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Hydro::Schemas::Notifyd::V0::Notify::RecipientGroup]) }
  def explicit_recipients; end

  sig { params(value: Google::Protobuf::RepeatedField[Hydro::Schemas::Notifyd::V0::Notify::RecipientGroup]).void }
  def explicit_recipients=(value); end

  sig { returns(Google::Protobuf::Map[String, T::Boolean]) }
  def feature_swiches; end

  sig { params(value: Google::Protobuf::Map[String, T::Boolean]).void }
  def feature_swiches=(value); end

  sig { returns(String) }
  def notification_id; end

  sig { params(value: String).void }
  def notification_id=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Hydro::Schemas::Notifyd::V0::Notify::Topic]) }
  def related_topics; end

  sig { params(value: Google::Protobuf::RepeatedField[Hydro::Schemas::Notifyd::V0::Notify::Topic]).void }
  def related_topics=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Notifyd::V0::Notify::Rendering)) }
  def rendering; end

  sig { params(value: T.nilable(Hydro::Schemas::Notifyd::V0::Notify::Rendering)).void }
  def rendering=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Notifyd::V0::Entities::Retries)) }
  def retries; end

  sig { params(value: T.nilable(Hydro::Schemas::Notifyd::V0::Entities::Retries)).void }
  def retries=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Notifyd::V0::Notify::Subject)) }
  def subject; end

  sig { params(value: T.nilable(Hydro::Schemas::Notifyd::V0::Notify::Subject)).void }
  def subject=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Notifyd::V0::Entities::Tracking)) }
  def tracking; end

  sig { params(value: T.nilable(Hydro::Schemas::Notifyd::V0::Entities::Tracking)).void }
  def tracking=(value); end
end
