# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `console_auth` gem.
# Please instead update this file by running `bin/tapioca gem console_auth`.

# source://console_auth//lib/console_auth/version.rb#3
class ConsoleAuth
  class << self
    # source://console_auth//lib/console_auth.rb#34
    def gatekeeper(alowed_password_attempts = T.unsafe(nil)); end

    # source://console_auth//lib/console_auth.rb#118
    def get_password; end

    # source://console_auth//lib/console_auth.rb#98
    def get_username(attempts_remaining); end

    # source://console_auth//lib/console_auth.rb#49
    def login(alowed_password_attempts = T.unsafe(nil)); end

    # source://console_auth//lib/console_auth.rb#80
    def password_login(attempts_remaining = T.unsafe(nil)); end

    # source://console_auth//lib/console_auth.rb#127
    def prompt(message); end

    # source://console_auth//lib/console_auth.rb#58
    def token_login(token); end

    # source://console_auth//lib/console_auth.rb#114
    def username_input; end

    # source://console_auth//lib/console_auth.rb#131
    def vault_fido_auth(username, password, challenge, attempts_remaining); end

    # source://console_auth//lib/console_auth.rb#123
    def warn(message); end

    private

    # source://console_auth//lib/console_auth.rb#161
    def access_control(policies); end

    # source://console_auth//lib/console_auth.rb#179
    def ca_file; end

    # source://console_auth//lib/console_auth.rb#157
    def valid_username(username); end

    # source://console_auth//lib/console_auth.rb#165
    def vault_client; end
  end
end

# source://console_auth//lib/console_auth.rb#10
class ConsoleAuth::ConsoleAuthorizationError < ::StandardError; end

# source://console_auth//lib/console_auth.rb#13
class ConsoleAuth::Session
  class << self
    # Returns the value of attribute console_user.
    #
    # source://console_auth//lib/console_auth.rb#15
    def console_user; end

    # Sets the attribute console_user
    #
    # @param value the value to set the attribute console_user to.
    #
    # source://console_auth//lib/console_auth.rb#15
    def console_user=(_arg0); end

    # source://console_auth//lib/console_auth.rb#27
    def hrt; end

    # Returns the value of attribute session_id.
    #
    # source://console_auth//lib/console_auth.rb#19
    def session_id; end

    # Sets the attribute session_id
    #
    # @param value the value to set the attribute session_id to.
    #
    # source://console_auth//lib/console_auth.rb#16
    def session_id=(_arg0); end

    # source://console_auth//lib/console_auth.rb#23
    def user(name); end
  end
end

# source://console_auth//lib/console_auth/version.rb#4
ConsoleAuth::VERSION = T.let(T.unsafe(nil), String)

# source://console_auth//lib/console_monitor.rb#4
module ConsoleMonitor
  extend ::ConsoleMonitor

  # source://console_auth//lib/console_monitor.rb#19
  def console_session; end

  # source://console_auth//lib/console_monitor.rb#9
  def install; end

  # source://console_auth//lib/console_monitor.rb#56
  def log(command); end

  # source://console_auth//lib/console_monitor.rb#27
  def logger; end

  # Sets the attribute logger
  #
  # @param value the value to set the attribute logger to.
  #
  # source://console_auth//lib/console_monitor.rb#7
  def logger=(_arg0); end

  # source://console_auth//lib/console_monitor.rb#35
  def moda_logger; end

  # source://console_auth//lib/console_monitor.rb#23
  def shell_user; end
end

# source://console_auth//lib/console_monitor.rb#71
module ConsoleMonitor::Irb; end

# source://console_auth//lib/console_monitor.rb#72
module ConsoleMonitor::Irb::Context
  # The method signature prior to irb v1.7.4 contained
  # an optional though unused `exception: nil` kwarg.
  # https://github.com/ruby/irb/pull/617
  #
  # source://console_auth//lib/console_monitor.rb#76
  def evaluate(line, line_no, **kwargs); end
end

# source://console_auth//lib/console_monitor.rb#83
module ConsoleMonitor::Pry
  # source://console_auth//lib/console_monitor.rb#84
  def eval(line, options = T.unsafe(nil)); end
end
