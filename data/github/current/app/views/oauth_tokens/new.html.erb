<%# erblint:counter DeprecatedComponentsCounter 1 %>
<%# rubocop:disable Lint/InstanceVariable %>
<% page_info :title => "New Personal Access Token#{" (Classic)" if current_user.patsv2_enabled?}", :selected_link => :oauth_tokens %>

<% content = capture do %>
  <%= render Primer::Beta::Subhead.new do |component| %>
    <% component.with_heading(tag: :h2) do %>New personal access token<%= " (classic)" if current_user.patsv2_enabled? %><% end %>
  <% end %>
  <p id="settings_user_tokens_note">
    Personal access tokens<%= " (classic)" if current_user.patsv2_enabled? %> function like ordinary OAuth access tokens. They
    can be used instead of a password for Git over HTTPS, or can be used to
    <a class="Link--inTextBlock" rel="noopener noreferrer" href="<%= GitHub.developer_help_url %>/v3/auth/#basic-authentication" target="_blank">authenticate to the API over Basic Authentication</a>.
  </p>

<% if current_user.is_first_emu_owner? %>
  <div <%= test_selector("scim_onboarding_tip") %>>
    <% gen_pat_task = OnboardingTasks::Businesses::GeneratePersonalAccessToken.new(taskable: current_user.enterprise_managed_business, user: current_user) %>
    <%= render(Businesses::TipComponent.new(
      business: current_user.enterprise_managed_business,
      show_tip: params[:show_onboarding_guide_tip].present?,
      task: gen_pat_task,
      container_class: "my-3"
      )) do %>
      <h3 class="mb-1">Generate token for SCIM configuration</h3>

        <div class="color-fg-muted">
          <p>
            <ol>
              <li>
                To configure provisioning for your enterprise, you need a personal access token with the "<strong>admin:enterprise</strong>" scope enabled.
              </li>
              <li>
                Make sure that the token expiration is set to "<strong>No expiration</strong>".
                If the token expires, SCIM provisioning may unexpectedly stop working.
              </li>
            </ol>
          </p>
          <p class="mb-0 ml-n4">
            <a
              href="<%= GitHub.help_url %>/admin/managing-iam/provisioning-user-accounts-with-scim/configuring-scim-provisioning-for-users#creating-a-personal-access-token"
              target="_blank"
              class="Link--inTextBlock"
            >
              <%= render(Primer::Beta::Octicon.new(:file, mr: 1)) %>
              Learn more about creating a personal access token
            </a>
          </p>
        </div>
      <% end %>
    </div>
<% end %>
  <%= form_for @access, :url => settings_user_tokens_path, :html => {:"aria-label" => "Personal access token", :"aria-describedby" => "settings_user_tokens_note"} do |f| %>

    <%= render :partial => "oauth_tokens/token_form", :object => f, locals: { :expiration_enabled => true } %>

    <p>
      <%= render Primer::ButtonComponent.new(type: :submit, scheme: :primary) do %>Generate token<% end %>
      <%= link_to "Cancel", settings_user_tokens_path, :class => "btn btn-invisible" %>
    </p>

  <% end %>
<% end %>

<%= render layout: "settings/developer_settings" do %>
  <%= content %>
<% end %>
