#!/bin/bash
set -e

# This script sets up the github/copilot-offline-eval repository for a github/github codespace.

RED='\033[0;31m'
GREEN='\033[0;32m'
ORANGE='\033[0;33m'
NC='\033[0m' # No Color
SCRIPT_DIR="$(dirname "$0")"

# Function to print help message
help() {
   echo "Sets up the github/copilot-offline-eval repository for a github/github codespace."
   echo ""
   echo "If Copilot API hasn't been set up in your codespace, or Copilot Chat hasn't been turned on,"
   echo "this will be done automatically."
   echo
   echo "Usage: setup-codespaces-copilot-offline-eval [-b branch] [-d|h] "
   echo "Options:"
   echo "-b     Specify the copilot-offline-eval branch to clone. Defaults to main if not provided."
   echo "-d     Before starting, delete the existing copilot-offline-eval directory in the codespace."
   echo "-w     Add the copilot-offline-eval repo as a workspace in VS Code."
   echo "-h     Print this help message."
   echo
}

# Set the branch as main. If a branch is provided as an argument, it will be set to that when we parse the provided options.
BRANCH=main

# Get the options
while getopts ":b:hdw" opt; do
   case $opt in
      h) # display help message
         help
         exit;;
      b) # If a branch was provided, re-set the variable
         BRANCH=$OPTARG;;
      d) # Delete the repository if it exists
         DELETE_REPO=true;;
      w) # Add the repository as a workspace in VS Code
         ADD_TO_WORKSPACE=true;;
     :)
      echo "Error: Option -$OPTARG requires an argument."
      exit 1;;
     \?) # Invalid option
         echo "Error: Invalid option -$OPTARG"
         exit 1;;
   esac
done

echo -e "\n${GREEN}➡️ Checking if copilot-api has been set up...\n${NC}"

# If the /workspaces/copilot-api directory doesn't exist, run the script to set up Copilot API
if [[ ! -d "/workspaces/copilot-api" ]]; then
  echo -e "${ORANGE}It appears that copilot-api has not been set up yet. Running script/setup-codespaces-copilot-api...${NC}"
  ./$SCRIPT_DIR/setup-codespaces-copilot-api
fi

# If the Copilot Chat internal app hasn't been created yet, run the script to enable Copilot Chat
echo -e "\n${GREEN}➡️ Checking if Copilot Chat has been enabled...\n${NC}"
set +e
bin/rails runner 'exit(1) unless Apps::Internal.integration(Apps::Internal::CopilotChat::APP_ALIAS).present?'
if [ $? -eq 1 ]; then
   echo -e "${ORANGE}It appears that Copilot Chat has not been enabled yet. Running script/enable-copilot-chat...${NC}"
   ./$SCRIPT_DIR/enable-copilot-chat
fi
set -e

# If the copilot-offline-eval repo already exists and the delete argument hasn't been specified, echo a warning and exit.
if [[ -d "/workspaces/copilot-offline-eval" && -z "$DELETE_REPO" ]]; then
  echo -e "${RED}The copilot-offline-eval directory already exists in this codespace.${NC} \nYou can rerun the setup script with the -d argument to force the deletion of the existing repository."
  exit 1
fi

if [ "$DELETE_REPO" = true ]; then
  echo -e "\n${GREEN}➡️ Deleting the existing copilot-offline-eval repo...\n${NC}"
  rm -rf /workspaces/copilot-offline-eval
fi

# Do a shallow clone of copilot-offline-eval to the same dir as the github/github repo.
# If a branch was supplied, use that branch for the clone.
echo -e "\n${GREEN}➡️ Cloning copilot-offline-eval repo branch $BRANCH...\n${NC}"
git clone https://github.com/github/copilot-offline-eval /workspaces/copilot-offline-eval --branch $BRANCH

echo -e "\n${GREEN}➡️ Installing Python 3.10...\n${NC}"
sudo apt --quiet update
sudo apt-get --quiet install software-properties-common -y
sudo add-apt-repository ppa:deadsnakes/ppa -y
sudo apt --quiet update
sudo apt-get --quiet install python3.10-dev python3.10-distutils -y
curl -sS https://bootstrap.pypa.io/get-pip.py | python3.10

# Bootstrap copilot-offline-eval
echo -e "\n${GREEN}➡️ Bootstrapping copilot-offline-eval...\n${NC}"
( cd /workspaces/copilot-offline-eval ; python3.10 -m pip install -e .[dev] ; )

# Add the copilot-offline-eval repo as a workspace in VS Code
if [ "$ADD_TO_WORKSPACE" = true ]; then
   echo -e "\n${GREEN}➡️ Adding copilot-offline-eval to VS Code workspace...\n${NC}"
   code --add /workspaces/copilot-offline-eval
fi

# Enable feature flag for PAT authentication
echo -e "\n${GREEN}➡️ Enabling copilot-api PAT authentication...\n${NC}"
./bin/toggle-feature-flag enable -F copilot_api_pat_auth copilot_api_platform_agent

# Restarting copilot-api
echo -e "\n${GREEN}➡️ Restarting copilot-api to ensure PATs are enabled...\n${NC}"
overmind restart copilot-api || true

echo -e ""
echo -e "${GREEN}🎉🎉 FINISHED! The copilot-offline-eval repo has been set up! 🎉🎉"
echo -e ""
echo -e "You can now run evaluations against copilot-api running in your codespace!"
echo -e ""
echo -e "1. Configure COPILOT_CHAT_AUTH_TOKEN with a personal access token for the monalisa user."
echo -e "  > export COPILOT_CHAT_AUTH_TOKEN=ghp_MonalisaTheOctoPatMonalisaTheOctoPat"
echo -e ""
echo -e "2. Configure GH_COPILOT_TOKEN with a personal access token from GitHub.com with repo and copilot permissions"
echo -e '   Visit https://github.com/settings/tokens/new if you need a new token'
echo -e ' > export GH_COPILOT_TOKEN=<YOUR_NEW_GITHUB_TOKEN>'
echo -e ""
echo -e "3. Make sure you're enabled relevant feature flags for any skills you're testing"
echo -e " > ./bin/toggle-feature-flag enable -F copilot_api_feature_flag_name_here"
echo -e ""
echo -e "4. Run tests as needed"
echo -e "  > cd /workspaces/copilot-offline-eval && python3.10 src/harness_orchestrator.py --test-type skill_test --integration dotcom --limit 1 --endpoint CAPI_LOCAL"
echo -e ""
echo -e ""
