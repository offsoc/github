# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PlatformTypes::AchievementTier`.
# Please instead update this file by running `bin/tapioca dsl PlatformTypes::AchievementTier`.

class PlatformTypes::AchievementTier < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(PlatformTypes::Achievement) }
  def achievement; end

  sig { returns(T::Boolean) }
  def achievement?; end

  sig { returns(String) }
  def background_color; end

  sig { returns(T::Boolean) }
  def background_color?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def badge_image_url; end

  sig { returns(T::Boolean) }
  def badge_image_url?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def gradient_image_url; end

  sig { returns(T::Boolean) }
  def gradient_image_url?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def high_resolution_badge_image_url; end

  sig { returns(T::Boolean) }
  def high_resolution_badge_image_url?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(String) }
  def localized_unlocking_explanation; end

  sig { returns(T::Boolean) }
  def localized_unlocking_explanation?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def social_image_url; end

  sig { returns(T::Boolean) }
  def social_image_url?; end

  sig { returns(String) }
  def tier_name; end

  sig { returns(T::Boolean) }
  def tier_name?; end

  sig { returns(Integer) }
  def tier_number; end

  sig { returns(T::Boolean) }
  def tier_number?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def unlocked_at; end

  sig { returns(T::Boolean) }
  def unlocked_at?; end

  sig { returns(String) }
  def unlocking_explanation_template; end

  sig { returns(T::Boolean) }
  def unlocking_explanation_template?; end

  sig do
    returns(T.nilable(T.any(PlatformTypes::AchievementRepositoryList, PlatformTypes::CommitComment, PlatformTypes::Discussion, PlatformTypes::DiscussionComment, PlatformTypes::TeamDiscussion, PlatformTypes::TeamDiscussionComment, PlatformTypes::Issue, PlatformTypes::IssueComment, PlatformTypes::PullRequest, PlatformTypes::PullRequestReview, PlatformTypes::PullRequestReviewComment, PlatformTypes::Release, PlatformTypes::Repository, PlatformTypes::RepositoryAdvisory, PlatformTypes::RepositoryAdvisoryComment, PlatformTypes::Sponsorship)))
  end
  def unlocking_model; end

  sig { returns(T::Boolean) }
  def unlocking_model?; end

  sig { returns(T.nilable(PlatformTypes::User)) }
  def user; end

  sig { returns(T::Boolean) }
  def user?; end
end
