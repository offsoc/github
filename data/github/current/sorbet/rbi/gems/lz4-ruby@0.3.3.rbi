# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `lz4-ruby` gem.
# Please instead update this file by running `bin/tapioca gem lz4-ruby`.

# source://lz4-ruby//lib/lz4-ruby.rb#11
class LZ4
  class << self
    # source://lz4-ruby//lib/lz4-ruby.rb#40
    def _compress(input, in_size, high_compression); end

    # source://lz4-ruby//lib/lz4-ruby.rb#12
    def compress(input, in_size = T.unsafe(nil)); end

    # source://lz4-ruby//lib/lz4-ruby.rb#16
    def compressHC(input, in_size = T.unsafe(nil)); end

    # source://lz4-ruby//lib/lz4-ruby.rb#71
    def decode_varbyte(text); end

    # source://lz4-ruby//lib/lz4-ruby.rb#20
    def decompress(input, in_size = T.unsafe(nil), encoding = T.unsafe(nil)); end

    # source://lz4-ruby//lib/lz4-ruby.rb#52
    def encode_varbyte(val); end

    # @deprecated Use {#decompress} and will be removed.
    #
    # source://lz4-ruby//lib/lz4-ruby.rb#35
    def uncompress(input, in_size = T.unsafe(nil)); end
  end
end

# Handles LZ4 native data stream (without any additional headers).
#
# source://lz4-ruby//lib/lz4-ruby.rb#87
class LZ4::Raw
  class << self
    # source://lz4-ruby//lib/lz4-ruby.rb#113
    def _compress(source, high_compression, options = T.unsafe(nil)); end

    # Compresses `source` string.
    #
    # @option options
    # @option options
    # @option options
    # @param source [String] string to be compressed
    # @param options [Hash]
    # @return [String, Fixnum] compressed string and its length.
    #
    # source://lz4-ruby//lib/lz4-ruby.rb#96
    def compress(source, options = T.unsafe(nil)); end

    # Compresses `source` string using High Compress Mode.
    #
    # @option options
    # @option options
    # @option options
    # @param source [String] string to be compressed
    # @param options [Hash]
    # @return [String, Fixnum] compressed string and its length.
    #
    # source://lz4-ruby//lib/lz4-ruby.rb#108
    def compressHC(source, options = T.unsafe(nil)); end

    # Decompresses `source` compressed string.
    #
    # @option options
    # @option options
    # @param source [String]
    # @param max_output_size [Fixnum]
    # @param options [Hash]
    # @return [String, Fixnum] decompressed string and its length.
    #
    # source://lz4-ruby//lib/lz4-ruby.rb#162
    def decompress(source, max_output_size, options = T.unsafe(nil)); end
  end
end

# source://lz4-ruby//lib/lz4-ruby.rb#191
class LZ4Error < ::StandardError; end
