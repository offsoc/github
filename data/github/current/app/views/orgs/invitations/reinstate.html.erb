<%# erblint:counter DeprecatedComponentsCounter 4 %>
<%# `view` is an Orgs::Invitations::ReinstateView %>

<div class="reinstate-org-member settings-next">
  <% if view.organization.saml_sso_present_enforced? && !view.organization.scim_managed_enterprise? %>
    <%= render Primer::Beta::Flash.new(mb: 3, classes: "flash-notice") do %>
      Membership in this organization is managed by your SAML Identity Provider.
      <strong><%= view.invitee_login %></strong>
      will not be able to accept the invitation, or will be removed from the organization, unless they are provisioned with the Identity Provider.
    <% end %>
  <% end %>

  <%= render Primer::Beta::Subhead.new do |component| %>
    <% component.with_heading(tag: :h2) do %>
      <% case view %>
      <% when Orgs::Invitations::ReinstateView::CreateInvitationView %>
        <% if view.enterprise_managed_user_enabled? %>
          Add
        <% else %>
          Invite
        <% end %>
        <strong><%= view.invitee_login %></strong>
        back to <%= view.organization_name %>
      <% when Orgs::Invitations::ReinstateView::UpdateReinstateInvitationView,
        Orgs::Invitations::ReinstateView::UpdateStartFreshInvitationView %>
        Update <strong><%= view.invitee_login %></strong>’s
        invitation back to <%= view.organization_name %>
      <% end %>
    <% end %>
  <% end %>

  <% previous_invitee_role = view.organization_direct_member? ? (view.organization_role.downcase) : outside_collaborators_verbiage(view.organization).singularize %>
  <%# previous_invitee_role can either be "outside collaborator", "collaborator", "owner", or "member" %>
  <p class="reinstate-lead">
    <strong><%= view.invitee_login %></strong> was previously <%= ["outside collaborator", "owner"].include?(previous_invitee_role) ? "an" : "a" %> <%= previous_invitee_role %> of the <%= view.organization_name %> organization.
    <%= view.copy_do_you_want_to_reinstate %>
  </p>

  <% reinstate_label = view.enterprise_managed_user_enabled? ? "Add and reinstate" : "Invite and reinstate" %>
  <div class="form-checkbox">
    <label>
      <%= radio_button_tag :reinstate,
        reinstate_label,
        view.radio_button_default_selection?(option: :reinstate),
        class: "js-org-reinstate-option",
        "data-form": "reinstate-form" %>
      Yes, reinstate their previous privileges.

      <p class="note">
        Reinstating a user will restore their previous privileges
        once the invitation is accepted. Privileges to be reinstated:
      </p>
    </label>

    <ul class="listgroup reinstate-detail-container">
      <% if view.organization_direct_member? %>
        <li class="listgroup-item">
          <span class="float-right"><%= view.organization_role %></span>
          <span class="reinstate-title"><%= primer_octicon(:person) %>Role</span>
        </li>

        <%= render :partial => "orgs/invitations/reinstate/restorable_type",
            :locals => { :view => view.teams,
            :invitee_login => view.invitee_login } %>
      <% else %>
        <%= render :partial => "orgs/invitations/reinstate/restorable_type",
            :locals => {:view => view.repositories,
            :invitee_login => view.invitee_login} %>
      <% end %>

      <%= render :partial => "orgs/invitations/reinstate/restorable_type",
        :locals => {:view => view.forks,
        :invitee_login => view.invitee_login} %>

      <%= render :partial => "orgs/invitations/reinstate/restorable_type",
        :locals => {:view => view.watching,
        :invitee_login => view.invitee_login} %>

      <%= render :partial => "orgs/invitations/reinstate/restorable_type",
        :locals => {:view => view.stars,
        :invitee_login => view.invitee_login} %>

      <%= render :partial => "orgs/invitations/reinstate/restorable_type",
        :locals => {:view => view.issue_assignments,
        :invitee_login => view.invitee_login} %>
    </ul>
  </div>

  <div class="form-checkbox">
    <label>
      <%= radio_button_tag :reinstate,
        "Start fresh",
        view.radio_button_default_selection?(option: :start_fresh),
        class: "js-org-reinstate-option",
        "data-form": "start-fresh-form" %>
      No, start fresh.

      <p class="note">
        Starting fresh will clear the user's previous privileges.
        You’ll be able to choose a new role and new team memberships
        for the user.
      </p>
    </label>
  </div>

  <hr>

  <div class="js-org-reinstate-forms clearfix">
    <%= form_tag(*view.form_tag_arguments_reinstate_form) do %>
      <%= render Primer::ButtonComponent.new(type: :submit, scheme: :primary, float: :left) do %>
        <%= view.form_submit_copy_reinstate_form %>
      <% end %>
    <% end %>

    <%= form_tag(*view.form_tag_arguments_start_fresh_form) do %>
      <input type="hidden" name="start_fresh" value="true">
      <input type="hidden" name="invitee_login" value="<%= params[:invitee_login] %>">
      <input type="hidden" name="org" value="<%= params[:org] %>">

      <%= render Primer::ButtonComponent.new(type: :submit, scheme: :primary, float: :left) do %>
        <%= view.form_submit_copy_start_fresh_form %>
      <% end %>
    <% end %>

    <% if view.editing_existing_invitation? %>
      <% org, invitation = view.organization, view.existing_invitation %>
      <%= form_tag cancel_org_invitation_path(org, invitation),
        :method => :put,
        :id => "cancel-invitation-form" do %>
        <%= render Primer::ButtonComponent.new(type: :submit, scheme: :danger, float: :right) do %>
          Cancel invitation
        <% end %>
      <% end %>
    <% end %>
  </div>
</div>
