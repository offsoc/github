---
summary: List commits
description: |-
  **Signature verification object**

  The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:

  | Name | Type | Description |
  | ---- | ---- | ----------- |
  | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |
  | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |
  | `signature` | `string` | The signature that was extracted from the commit. |
  | `payload` | `string` | The value that was signed. |

  These are the possible values for `reason` in the `verification` object:

  | Value | Description |
  | ----- | ----------- |
  | `expired_key` | The key that made the signature is expired. |
  | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |
  | `gpgverify_error` | There was an error communicating with the signature verification service. |
  | `gpgverify_unavailable` | The signature verification service is currently unavailable. |
  | `unsigned` | The object does not include a signature. |
  | `unknown_signature_type` | A non-PGP signature was found in the commit. |
  | `no_user` | No user was associated with the `committer` email address in the commit. |
  | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on their account. |
  | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |
  | `unknown_key` | The key that made the signature has not been registered with any user's account. |
  | `malformed_signature` | There was an error parsing the signature. |
  | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |
  | `valid` | None of the above errors applied, so the signature is considered to be verified. |
tags:
  - repos
operationId: repos/list-commits
externalDocs:
  description: API method documentation
  url: '${externalDocsUrl}/rest/commits/commits#list-commits'
parameters:
  - $ref: '../../components/parameters/owner.yaml'
  - $ref: '../../components/parameters/repo.yaml'
  - name: sha
    description: 'SHA or branch to start listing commits from. Default: the repositoryâ€™s
      default branch (usually `main`).'
    in: query
    required: false
    schema:
      type: string
  - name: path
    description: Only commits containing this file path will be returned.
    in: query
    required: false
    schema:
      type: string
  - name: author
    description: GitHub username or email address to use to filter by commit author.
    in: query
    required: false
    schema:
      type: string
  - name: committer
    description: GitHub username or email address to use to filter by commit committer.
    in: query
    required: false
    schema:
      type: string
  - name: since
    description: 'Only show results that were last updated after the given time. This is a timestamp
      in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Due to limitations of Git,
      timestamps must be between 1970-01-01 and 2099-12-31 (inclusive) or unexpected results may be returned.'
    in: query
    required: false
    schema:
      type: string
      format: date-time
  - name: until
    description: 'Only commits before this date will be returned. This is a timestamp
      in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Due to limitations of Git,
      timestamps must be between 1970-01-01 and 2099-12-31 (inclusive) or unexpected results may be returned.'
    in: query
    required: false
    schema:
      type: string
      format: date-time
  - $ref: '../../components/parameters/per-page.yaml'
  - $ref: '../../components/parameters/page.yaml'
  - name: top
    description: legacy parameter for pagination.
    in: query
    deprecated: true
    required: false
    schema:
      type: string
    x-unpublished: Deprecated parameter
  - name: last_sha
    description: legacy parameter for pagination.
    in: query
    deprecated: true
    required: false
    schema:
      type: string
    x-unpublished: Deprecated parameter
responses:
  '200':
    description: Response
    content:
      application/json:
        schema:
          type: array
          items:
            $ref: '../../components/schemas/commit.yaml'
        examples:
          default:
            $ref: '../../components/examples/commit-items.yaml'
    headers:
      Link:
        $ref: '../../components/headers/link.yaml'
  '500':
    $ref: '../../components/responses/internal_error.yaml'
  '400':
    $ref: '../../components/responses/bad_request.yaml'
  '404':
    $ref: '../../components/responses/not_found.yaml'
  '409':
    $ref: '../../components/responses/conflict.yaml'
x-github-releases:
  - ghec
  - ghes: '>= 2.18'
  - api.github.com
x-github:
  githubCloudOnly: false
  enabledForGitHubApps: true
  category: commits
  subcategory: commits
x-github-internal:
  path: '/repos/{owner}/{repo}/commits'
  http-method: get
  service-tier: 1
  owner: '@github/repos'
  published: true
