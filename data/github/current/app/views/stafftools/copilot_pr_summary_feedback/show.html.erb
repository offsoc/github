<% page_info title: "Copilot PR feedback details", selected_link: :copilot_pr_summary_feedback %>

<%= render layout: "stafftools/stafftools" do %>
  <div class="site-admin-subhead ruleless">
    <%= link_to stafftools_copilot_pr_summary_feedback_path, class: "float-right mt-1" do %>
      Back to all feedback
    <% end %>
    <h2 class="site-admin-subhead-heading">Copilot <%= feedback.feedback_type %> feedback details</h2>
  </div>

  <div class="mt-2">
    <%= render Primer::Beta::Link.new(href: repository_path(feedback.repository), classes: "h3 Link--primary") do %>
      <%= render(Primer::Beta::Octicon.new(feedback.repository.private? ? :"repo-locked" : :repo, size: :medium)) %>
      <%= feedback.repository.name_with_display_owner %>
    <% end %>
    <% if pull_request %>
      <%= render(Primer::Beta::Label.new(tag: :a, inline: true, scheme: :info, py: 1, px: 2, href: pull_request_path(pull_request))) do %>
        <%= render(Primer::Beta::Octicon.new(:"git-pull-request", size: :small)) %>
        #<%= pull_request.id %>
      <% end %>
    <% end %>
    <p class="color-fg-subtle mb-0">Submitted <%= date_with_time_tooltip feedback.updated_at %></p>

    <% if feedback.job_id? %>
      <%= render(Primer::Beta::BorderBox.new(mt: 3)) do |component| %>
        <% component.with_header(py: 2) do |header| %>
          <% header.with_title(tag: :h4) do %>
            Copilot generated summary
          <% end %>
        <% end %>
        <% padding_args = feedback.context[:completion] ? { pb: 2 } : {} %>
        <% component.with_body(**padding_args) do %>
          <%= feedback.context[:completion] ? simple_format(feedback.context[:completion]) : "Summary not saved" %>
        <% end %>
      <% end %>
    <% end %>

    <% if feedback.context[:job_timing_ms] || feedback.context[:overall_timing_ms] %>
      <%= render(Primer::Beta::BorderBox.new(mt: 3)) do |component| %>
        <% component.with_header(py: 2) do |header| %>
          <% header.with_title(tag: :h4) do %>
            Copilot <%= feedback.feedback_type %> timing
          <% end %>
        <% end %>
        <% if feedback.context[:job_timing_ms] %>
          <% component.with_row do %>
            Background job run time: <%= milliseconds_to_seconds(feedback.context[:job_timing_ms]) %> seconds
          <% end %>
        <% end %>
        <% if feedback.context[:overall_timing_ms] %>
          <% component.with_row do %>
            User perceived <%= feedback.feedback_type %> time: <%= milliseconds_to_seconds(feedback.context[:overall_timing_ms]) %> seconds
          <% end %>
        <% end %>
      <% end %>
    <% end %>

    <%= render(Primer::Beta::BorderBox.new(mt: 3)) do |component| %>
      <% component.with_header(py: 2) do |header| %>
        <% header.with_title(tag: :h4, display: :flex, justify_content: :space_between, flex_wrap: :wrap) do %>
          User feedback <% if feedback.classification? %> <%= render(Primer::Beta::Label.new) { feedback.classification }%> <% end %>
        <% end %>
      <% end %>

      <% component.with_row do %>
        <a href="<%= user_path(feedback.user.display_login) %>" class="Link--primary text-bold">
          <%= avatar_for(feedback.user, 20, class: "avatar mt-0") %>
          @<%= feedback.user.display_login %>
        </a> rated this <%= feedback.feedback_type %>
        <span class="text-bold <%= sentiment_color_class(feedback.sentiment) %>"><%= feedback.sentiment %></span>
        and is <%= feedback.contact? ? "open to contact" : "not open to contact" %>
      <% end %>
      <% if feedback.body.present? %>
        <% component.with_row(pb: 2) do %>
          <%= simple_format(feedback.body) %>
        <% end %>
      <% end %>
    <% end %>
  </div>
<% end %>
