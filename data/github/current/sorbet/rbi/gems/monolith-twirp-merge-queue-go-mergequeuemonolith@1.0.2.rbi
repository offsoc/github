# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `monolith-twirp-merge-queue-go-mergequeuemonolith` gem.
# Please instead update this file by running `bin/tapioca gem monolith-twirp-merge-queue-go-mergequeuemonolith`.

module Google::Protobuf::MessageExts::ClassMethods; end

# source://monolith-twirp-merge-queue-go-mergequeuemonolith//lib/monolith-twirp-merge-queue-go-mergequeuemonolith.rb#7
module Monolith; end

# source://monolith-twirp-merge-queue-go-mergequeuemonolith//lib/monolith-twirp-merge-queue-go-mergequeuemonolith.rb#8
module Monolith::Twirp; end

# source://monolith-twirp-merge-queue-go-mergequeuemonolith//lib/monolith-twirp-merge-queue-go-mergequeuemonolith.rb#9
module Monolith::Twirp::MergeQueueGo; end

# source://monolith-twirp-merge-queue-go-mergequeuemonolith//lib/monolith-twirp-merge-queue-go-mergequeuemonolith.rb#10
module Monolith::Twirp::MergeQueueGo::Mergequeuemonolith; end

# source://monolith-twirp-merge-queue-go-mergequeuemonolith//lib/monolith-twirp-merge-queue-go-mergequeuemonolith.rb#11
class Monolith::Twirp::MergeQueueGo::Mergequeuemonolith::Error < ::StandardError; end

# source://monolith-twirp-merge-queue-go-mergequeuemonolith//lib/monolith_twirp/merge-queue-go/mergequeuemonolith/version.rb#3
module MonolithTwirp; end

# source://monolith-twirp-merge-queue-go-mergequeuemonolith//lib/monolith_twirp/merge-queue-go/mergequeuemonolith/version.rb#4
module MonolithTwirp::MergeQueueGo; end

# source://monolith-twirp-merge-queue-go-mergequeuemonolith//lib/monolith_twirp/merge-queue-go/mergequeuemonolith/version.rb#5
module MonolithTwirp::MergeQueueGo::Mergequeuemonolith; end

# source://monolith-twirp-merge-queue-go-mergequeuemonolith//lib/monolith_twirp/merge-queue-go/mergequeuemonolith/version.rb#6
MonolithTwirp::MergeQueueGo::Mergequeuemonolith::VERSION = T.let(T.unsafe(nil), String)

# source://monolith-twirp-merge-queue-go-mergequeuemonolith//lib/monolith_twirp/merge-queue-go/mergequeuemonolith/v1/merge_queue_monolith_pb.rb#16
module MonolithTwirp::MergeQueueMonolith; end

# source://monolith-twirp-merge-queue-go-mergequeuemonolith//lib/monolith_twirp/merge-queue-go/mergequeuemonolith/v1/merge_queue_monolith_pb.rb#17
module MonolithTwirp::MergeQueueMonolith::V0; end

class MonolithTwirp::MergeQueueMonolith::V0::CheckHealthRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::MergeQueueMonolith::V0::CheckHealthResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

# source://monolith-twirp-merge-queue-go-mergequeuemonolith//lib/monolith_twirp/merge-queue-go/mergequeuemonolith/v1/merge_queue_monolith_twirp.rb#14
class MonolithTwirp::MergeQueueMonolith::V0::MergeQueueMonolithAPIClient < ::Twirp::Client
  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def check_health(input, req_opts = T.unsafe(nil)); end
end

# source://monolith-twirp-merge-queue-go-mergequeuemonolith//lib/monolith_twirp/merge-queue-go/mergequeuemonolith/v1/merge_queue_monolith_twirp.rb#8
class MonolithTwirp::MergeQueueMonolith::V0::MergeQueueMonolithAPIService < ::Twirp::Service; end
