<%= render(Primer::Box.new(display: :flex)) do %>
  <%= render(Primer::Box.new(col: 8)) do %>
    <%= render Primer::Beta::Octicon.new(**octicon_kargs) %>

    <% if dependency.repo_url.present? %>
      <%= link_to dependency.package_name,
          dependency.repo_url,
          class: "color-fg-default text-bold mr-1 no-underline Link--onHover",
          target: "_blank"
      %>
    <% else %>
      <%= content_tag :span, dependency.package_name, class: "text-bold mr-1" %>
    <% end %>
    <span class="color-fg-muted mr-1">
      <%= "updated to" if change_type == :updated %>
      <%= dependency.version %>
    </span>

    <% if dependency.published_at.present? %>
      <span class="text-small color-fg-muted">
        released
        <relative-time tense="past" datetime="<%= dependency.published_at %>" class="no-wrap">
        </relative-time>
      </span>
    <% end %>
  <% end %>

  <%= render(Primer::Box.new(col: 1,  mr: 4, color: :muted, text_align: :left)) do %>
    <% if dependency.dependents_count&.nonzero? %>
      <% dependents_octicon = render(Primer::Beta::Octicon.new(icon: "package-dependents")) %>
      <% dependents_count = number_to_human(dependency.dependents_count, units: { thousand: 'k', million: 'm', billion: 'b', trillion: 't' }, format: "%n%u") %>
      <% if dependency.repo_url.present? %>
        <%= link_to "#{dependency.repo_url}/network/dependents", class: "color-fg-muted no-underline Link--onHover", target: "_blank" do %>
          <%= dependents_octicon %>
          <%= dependents_count %>
        <% end %>
      <% else %>
        <%= dependents_octicon %>
        <%= dependents_count %>
      <% end %>
    <% end %>
  <% end %>

  <%= render(Primer::Box.new(col: 3, color: :muted, text_align: :right, display: :flex, justify_content: :flex_end)) do %>
    <% if dependency.license.present? %>
      <div class ="flex-order-1"> <%= render Primer::Beta::Octicon.new(icon: "law", mr: 1) %></div>
      <div class="text-left wb-break-all mb-1 flex-order-2"> <%= dependency.license %> </div>
    <% end %>
  <% end %>
<% end %>

<% if dependency.is_vulnerable? %>
  <%= render(Primer::Beta::BorderBox.new(mt: 2, ml: 4)) do |component| %>
    <% dependency.vulnerabilities.each do |vulnerability| %>
      <% component.with_row { render DependencyReview::VulnerabilityRowComponent.new(vulnerability) } %>
    <% end %>
  <% end %>
<% end %>
