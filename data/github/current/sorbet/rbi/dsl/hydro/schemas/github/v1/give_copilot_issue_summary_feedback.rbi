# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::GiveCopilotIssueSummaryFeedback`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::GiveCopilotIssueSummaryFeedback`.

class Hydro::Schemas::Github::V1::GiveCopilotIssueSummaryFeedback
  sig do
    params(
      analytics_tracking_id: T.nilable(String),
      feedback: T.nilable(Google::Protobuf::StringValue),
      feedback_choice: T.nilable(T.any(Google::Protobuf::RepeatedField[T.any(Symbol, Integer)], T::Array[T.any(Symbol, Integer)])),
      header_request_id: T.nilable(Google::Protobuf::StringValue),
      organization_id: T.nilable(Integer),
      prompt_version: T.nilable(String),
      repository_id: T.nilable(Integer)
    ).void
  end
  def initialize(analytics_tracking_id: nil, feedback: nil, feedback_choice: T.unsafe(nil), header_request_id: nil, organization_id: nil, prompt_version: nil, repository_id: nil); end

  sig { returns(String) }
  def analytics_tracking_id; end

  sig { params(value: String).void }
  def analytics_tracking_id=(value); end

  sig { void }
  def clear_analytics_tracking_id; end

  sig { void }
  def clear_feedback; end

  sig { void }
  def clear_feedback_choice; end

  sig { void }
  def clear_header_request_id; end

  sig { void }
  def clear_organization_id; end

  sig { void }
  def clear_prompt_version; end

  sig { void }
  def clear_repository_id; end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def feedback; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def feedback=(value); end

  sig { returns(Google::Protobuf::RepeatedField[T.any(Symbol, Integer)]) }
  def feedback_choice; end

  sig { params(value: Google::Protobuf::RepeatedField[T.any(Symbol, Integer)]).void }
  def feedback_choice=(value); end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def header_request_id; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def header_request_id=(value); end

  sig { returns(Integer) }
  def organization_id; end

  sig { params(value: Integer).void }
  def organization_id=(value); end

  sig { returns(String) }
  def prompt_version; end

  sig { params(value: String).void }
  def prompt_version=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end
end
