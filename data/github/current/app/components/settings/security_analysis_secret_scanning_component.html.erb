<%# erblint:counter DeprecatedComponentsCounter 1 %>
<%# erblint:counter ButtonComponentMigrationCounter 4 %>
<div <%= test_selector("secret-scanning-org-settings") %>>
  <div class="d-flex flex-justify-between pt-3 pb-2">
    <div style="white-space: normal;">
      <h3 class="h4">Secret scanning</h3>
      <% unless @owner.security_configurations_enabled? %>
        <p class="mb-0">Receive alerts on GitHub for detected secrets, keys, or other tokens.</p>
        <% if show_partner_notification_subtext? %>
            <p class="mb-0 color-fg-muted text-small" <%= test_selector("secret-scanning-user-settings-partner-subtext") %>>
                GitHub will always send alerts to partners for detected secrets in public repositories.
              <%= link_to "Learn more about partner patterns", helpers.docs_url("code-security/about-secret-scanning-for-partner-patterns"), class: "Link--inTextBlock" %>.
            </p>
        <% end %>
      <% end %>
    </div>
    <% unless @owner.security_configurations_enabled? %>
      <div style="white-space: normal;">
        <div class="BtnGroup d-flex flex-shrink-0">

          <% secret_scanning_disable_dialog_text = capture do %>
            <% if render_async_counts? %>
              <include-fragment
                src="<%= settings_org_security_analysis_disableable_repo_counts_path(@owner, feature_type: "secret_scanning") %>"
                loading="lazy"
                <%= test_selector("secret-scanning-disablement-count-async-placeholder") %>>
                <%= render(Primer::Beta::Spinner.new(size: :small, "aria-label": "Loading...")) %>
              </include-fragment>
            <% else %>
              <p><strong>
                This will disable secret scanning on all repositories where it is enabled.
              </strong></p>
            <% end %>
          <% end %>

          <%
            secret_scanning_new_repos_label = secret_scanning_new_repos_label_calculated(@owner)
          %>

          <% if secret_scanning_buttons_disabled? %>
            <button
              <%= test_selector("secret-scanning-disable-all-button-disabled-by-blocking-enablement") %>
              type="button"
              aria-disabled="true"
              aria-label="Disable all secret scanning"
              class="btn btn-danger mr-1">
              Disable all
            </button>
          <% else %>
            <%= form_tag security_analysis_update_path(@owner), method: :put do %>
              <%= render(SecurityAnalysis::SettingsDialogComponent.new(
                summary_button_text: "Disable all",
                confirm_button_text: "Disable secret scanning",
                warning_text: security_config_warning_banner_text(setting: :secret_scanning, value: "disabled"),
                disabled: button_disabled_no_repos,
                button_class: "btn btn-danger mr-1",
                title: button_disabled_no_repos_title("Disable secret scanning?"),
                button_aria_label: "Disable all secret scanning",
                dialog_text: secret_scanning_disable_dialog_text,
                input_name: "secret_scanning",
                input_value: "disable_all",
                test_selector: "secret-scanning-disable-all-button"
              )) %>
            <% end %>
          <% end %>

          <% secret_scanning_enable_dialog_text = capture do %>
            <p><strong>
              <%= secret_scanning_enable_dialog_main_text_calculated(@owner) %>.
            </strong></p>
            <% if render_async_counts? %>
              <include-fragment
                src="<%= settings_org_security_analysis_enableable_repo_counts_path(@owner, feature_type: "secret_scanning") %>"
                loading="lazy"
                <%= test_selector("secret-scanning-enablement-count-async-placeholder") %>>
                <%= render(Primer::Beta::Spinner.new(size: :small, "aria-label": "Loading...")) %>
              </include-fragment>
            <% end %>
          <% end %>

          <% if secret_scanning_buttons_disabled? %>
            <button
              <%= test_selector("secret-scanning-enable-all-button-disabled-by-blocking-enablement") %>
              type="button"
              aria-disabled="true"
              aria-label="Enable all secret scanning"
              class="btn">
              Enable all
            </button>
          <% else %>
            <%= form_tag security_analysis_update_path(@owner), method: :put do %>
              <%= render(SecurityAnalysis::SettingsDialogComponent.new(
                summary_button_text: "Enable all",
                confirm_button_text: "Enable for eligible repositories",
                warning_text: security_config_warning_banner_text(setting: :secret_scanning, value: "enabled"),
                disabled: button_disabled_no_repos,
                title: button_disabled_no_repos_title("Enable secret scanning for eligible repositories?"),
                button_aria_label: "Enable all secret scanning",
                dialog_text: secret_scanning_enable_dialog_text,
                input_name: "secret_scanning",
                input_value: "enable_all",
                test_selector: "secret-scanning-enable-all-button"
              )) %>
            <% end %>
          <% end %>
        </div>
      </div>
    <% end %>
  </div>
  <% unless @owner.security_configurations_enabled? %>
    <div class="pb-2 width-full">
      <div class="d-flex flex-justify-start">
        <% if secret_scanning_buttons_disabled? %>
          <div class="js-setting-toggle d-flex flex-items-center">
            <input type="checkbox"
              <%= test_selector("secret-scanning-new-repos-checkbox-disabled-blocking-enablement") %>
              name="secret_scanning_enabled_new_repos_disabled"
              id="secret-scanning-enabled-new-repos-disabled"
              class="mr-2"
              <%= checked_condition_enabled_for_new_repos(@owner) ? 'checked': '' %>
              disabled>
            <label for="secret-scanning-enabled-new-repos-disabled">
              <%= secret_scanning_new_repos_label %>
            </label>
          </div>
        <% elsif can_owner_enable_for_new_repos? %>
          <%= form_tag security_analysis_update_path(@owner), :class => "js-setting-toggle d-flex flex-items-center", "data-autosubmit" => true, method: :put do %>
            <%= render partial: "settings/organization/security_analysis_enable_checkbox", locals: {
              name: "secret_scanning_new_repos",
              id: "secret-scanning-enable-new-private-repos",
              checked_condition: checked_condition_enabled_for_new_repos(@owner),
              label_text: secret_scanning_new_repos_label,
              test_selector: "secret-scanning-enable-new-checkbox",
              classes: "mr-2"
            } %>
          <% end %>
        <% end %>
      </div>
    </div>
  <% end %>

  <%# Validity checks %>
  <% if validity_checks_feature_available? && !validity_checks_show_enable_all? %>
    <div class="pb-2 width-full" <%= test_selector("secret-scanning-validity-checks-settings")%>>
      <% if validity_checks_toggle_disabled? %>
        <div class="pb-2 width-full">
          <div class="d-flex flex-justify-start">
            <div>
              <input type="checkbox"
                <%= test_selector("secret-scanning-validity-checks-disabled-secret-scanning-toggling") %>
                name="secret_scaning_validity_checks_disabled_secret_scanning_toggling"
                id="secret-scanning-validity-checks-disabled-secret-scanning-toggling"
                class="mr-2"
                <%= validity_checks_enabled? ? "checked" : ""%>
                disabled
                >
              <label for="secret-scanning-push-protection-enabled-new-repos-disabled-secret-scanning-toggling">
                Automatically
                <%= render(Primer::Beta::Link.new(href: helpers.docs_url("code-security/supported-secret-scanning-patterns-supported-secrets", ghec: true), classes: "Link--inTextBlock")) { "verify if a secret is valid" } %>
                by sending it to the relevant partner
              </label>
            </div>
          </div>
        </div>
      <% else %>
        <%= form_tag security_analysis_update_path(@owner), :class => "js-setting-toggle d-flex flex-items-center", "data-autosubmit" => true, method: :put do %>
          <input type="hidden" name="secret_scanning_validity_checks" value="disabled">
          <input type="checkbox" name="secret_scanning_validity_checks"
            id="secret-scanning-validity-checks" value="enabled"
            <%= validity_checks_enabled? ? 'checked' : '' %>
            <%= validity_checks_enabled_by_owning_business? ? 'disabled' : '' %>
            class="mr-2"
          >
          <label for="secret-scanning-validity-checks" <%= test_selector("secret-scanning-validiy-checks-checkbox") %>>
            Automatically
            <%= render(Primer::Beta::Link.new(href: helpers.docs_url("code-security/supported-secret-scanning-patterns-supported-secrets", ghec: true), classes: "Link--inTextBlock")) { "verify if a secret is valid" } %>
            by sending it to the relevant partner
          </label>
          <span class="status-indicator js-status-indicator d-flex flex-items-start mb-1">
            <%= render(Primer::Beta::Octicon.new(icon: "check")) %>
            <%= render(Primer::Beta::Octicon.new(icon: "x")) %>
          </span>
        <% end %>
      <% end %>
      <% if validity_checks_enabled_by_owning_business? %>
        <div class="text-small color-fg-muted" <%= test_selector("validity-checks-owner-override-label")%>>
          <%= primer_octicon(:"shield-lock") %>
          This setting has been set by enterprise administrators.
        </div>
      <% end %>
    </div>
  <% end %> <%# End validity checks %>

  <%# Lower Confidence Patterns %>
  <% if lower_confidence_patterns_feature_available? && !lower_confidence_patterns_show_enable_all? %>
    <div class="pb-2 width-full" <%= test_selector("secret-scanning-lower-confidence-patterns-settings")%>>
      <%= form_tag security_analysis_update_path(@owner), :class => "js-setting-toggle d-flex flex-items-center", "data-autosubmit" => true, method: :put do %>
        <input type="hidden" name="secret_scanning_lower_confidence_patterns" value="disabled">
        <input type="checkbox" name="secret_scanning_lower_confidence_patterns"
          <%= test_selector("secret-scanning-lower-confidence-patterns-checkbox") %>
          id="secret-scanning-lower-confidence-patterns" value="enabled"
          <%= lower_confidence_patterns_enabled? ? 'checked' : '' %>
          <%= lower_confidence_patterns_enablement_blocked? ? "disabled" : ""%>
          class="mr-2"
        >
        <label for="secret-scanning-lower-confidence-patterns">
          Scan for non-provider patterns
        </label>
        <%= render GitHub::BetaFlagComponent.new(ml: 1, px: 2) %>
        <span class="status-indicator js-status-indicator d-flex flex-items-start mb-1">
          <%= render(Primer::Beta::Octicon.new(icon: "check")) %>
          <%= render(Primer::Beta::Octicon.new(icon: "x")) %>
        </span>
      <% end %>
      <div class="d-flex flex-items-start">
        <input type="checkbox" class="v-hidden mr-2"><%# for spacing %>
        <div class="text-small color-fg-muted my-0">
          <%= render(Primer::Beta::Link.new(href: helpers.docs_url("code-security/supported-secret-scanning-patterns-supported-secrets", ghec: true), classes: "Link--inTextBlock")) { "Learn more about non-provider patterns" } %>
        </div>
      </div>
      <% if lower_confidence_patterns_enabled_by_owning_business? %>
        <div class="text-small color-fg-muted">
          <%= primer_octicon(:"shield-lock") %>
          This setting has been set by enterprise administrators.
        </div>
      <% end %>
    </div>
  <% end %> <%# End lower confidence patterns %>

  <%# Generic Secrets %>
  <% if generic_secrets_feature_available? %>
    <div class="pb-2 width-full" <%= test_selector("secret-scanning-generic-secrets-settings")%>>
      <%= form_tag security_analysis_update_path(@owner), :class => "js-setting-toggle d-flex flex-items-center", "data-autosubmit" => true, method: :put do %>
        <input type="hidden" name="secret_scanning_generic_secrets" value="disabled">
        <input type="checkbox" name="secret_scanning_generic_secrets"
          <%= test_selector("secret-scanning-generic-secrets-checkbox") %>
          id="secret-scanning-generic-secrets" value="enabled"
          <%= generic_secrets_enabled? ? 'checked' : '' %>
          <%= generic_secrets_enablement_blocked? ? "disabled" : ""%>
          class="mr-2"
        >
        <label for="secret-scanning-generic-secrets">
          Use AI detection to find additional secrets
        </label>
        <%= render GitHub::BetaFlagComponent.new(ml: 1, px: 2) %>
        <span class="status-indicator js-status-indicator d-flex flex-items-start mb-1">
          <%= render(Primer::Beta::Octicon.new(icon: "check")) %>
          <%= render(Primer::Beta::Octicon.new(icon: "x")) %>
        </span>
      <% end %>
      <div class="d-flex flex-items-start">
        <input type="checkbox" class="v-hidden mr-2"><%# for spacing %>
        <div class="text-small color-fg-muted my-0">
          Use an AI model to detect additional secrets beyond the secrets detected with regular expressions.
        </div>
      </div>
      <% if generic_secrets_enabled_by_owning_business? %>
        <div class="text-small color-fg-muted">
          <%= primer_octicon(:"shield-lock") %>
          This setting has been set by enterprise administrators.
        </div>
      <% else %>
        <%= render(Settings::SecurityAnalysisInlineNotificationComponent.new(
          generic_secrets_enablement_blocked? ? :token_scanning_restricted_by_enablement_policy : "",
          owner: @owner,
          product: :generic_secrets,
          variant: :short,
          color: :muted,
        )) %>
      <% end %>
    </div>
  <% end %> <%# End Generic Secrets %>

  <% if validity_checks_feature_available? && validity_checks_show_enable_all? %>
    <%= render(Settings::AdvancedSecurityOnboarding::TipComponent.new(
      tip: params[:tip],
      organization: current_organization,
      visible_for_tip: "validity_checks",
      with_separator: true,
      mb: 1
    )) %>
    <div <%= test_selector("secret-scanning-validity-checks-org-settings") %>>
      <div class="d-flex flex-justify-between pt-3 pb-2">
        <div style="white-space: normal;">
          <h4>Validity checks</h4>
          <p class="mb-0">
            <%= render(Primer::Beta::Link.new(href: helpers.docs_url("code-security/supported-secret-scanning-patterns-supported-secrets", ghec: true), classes: "Link--inTextBlock")) { "Verify secret's validity" } %>
            by sending it to the relevant partner.
          </p>
        </div>
        <div style="white-space: normal;">
          <div class="BtnGroup d-flex flex-shrink-0">

            <% secret_scanning_validity_checks_disable_dialog_text = capture do %>
              <p><strong>
                This will disable validity checks on all repositories where it is enabled.
              </strong></p>
              <p>You can still enable validity checks at the repository level.</p>
            <% end %>

            <% if validity_checks_buttons_disabled? %>
              <%= render Primer::Beta::Button.new(test_selector: "secret-scanning-validity-checks-disable-all-button-disabled-by-blocking-enablement", "aria-disabled": "true", "aria-label": "Disable all validity checks", scheme: :danger, mr: 1) do %>
                Disable all
              <% end %>
            <% else %>
              <%= form_tag security_analysis_update_path(@owner), method: :put do %>
                <%= render(SecurityAnalysis::SettingsDialogComponent.new(
                  summary_button_text: "Disable all",
                  confirm_button_text: "Disable validity checks",
                  warning_text: security_config_warning_banner_text(setting: :secret_scanning_validity_checks, value: "disabled"),
                  disabled: button_disabled_no_repos,
                  button_class: "btn btn-danger mr-1",
                  title: button_disabled_no_repos_title("Disable validity checks?"),
                  button_aria_label: "Disable all validity checks",
                  dialog_text: secret_scanning_validity_checks_disable_dialog_text,
                  input_name: "secret_scanning_validity_checks",
                  input_value: "disable_all",
                  test_selector: "secret-scanning-validity-checks-disable-all-button"
                )) %>
              <% end %>
            <% end %>

            <% secret_scanning_validity_checks_enable_dialog_text = capture do %>
              <p><strong>
                This will turn on validity checks for all repositories that have secret scanning enabled.
              </strong></p>
              <% if @owner.organization? %>
                <include-fragment
                  src="<%= settings_org_security_analysis_enableable_repo_counts_path(@owner, feature_type: "validity_checks") %>"
                  loading="lazy"
                  <%= test_selector("validity-checks-enablement-count-async-placeholder") %>>
                  <%= render(Primer::Beta::Spinner.new(size: :small, "aria-label": "Loading...")) %>
                </include-fragment>
              <% end %>
            <% end %>

            <% if validity_checks_buttons_disabled? %>
              <%= render Primer::Beta::Button.new(test_selector: "secret-scanning-validity-checks-enable-all-button-disabled-by-blocking-enablement", "aria-disabled": "true", "aria-label": "Enable all validity checks") do %>
                Enable all
              <% end %>
            <% else %>
              <%= form_tag security_analysis_update_path(@owner), method: :put do %>
                <%= render(SecurityAnalysis::SettingsDialogComponent.new(
                  summary_button_text: "Enable all",
                  confirm_button_text: "Enable for eligible repositories",
                  warning_text: security_config_warning_banner_text(setting: :secret_scanning_validity_checks, value: "enabled"),
                  disabled: button_disabled_no_repos,
                  title: button_disabled_no_repos_title("Enable validity checks for eligible repositories?"),
                  button_aria_label: "Enable all validity checks",
                  dialog_text: secret_scanning_validity_checks_enable_dialog_text,
                  input_name: "secret_scanning_validity_checks",
                  input_value: "enable_all",
                  test_selector: "secret-scanning-validity-checks-enable-all-button"
                )) %>
              <% end %>
            <% end %>
          </div>
        </div>
      </div>
      <div class="pb-2 width-full">
        <div class="d-flex flex-justify-start">
          <% if validity_checks_buttons_disabled? %>
            <div class="js-setting-toggle d-flex flex-items-center">
              <input type="checkbox"
                <%= test_selector("secret-scanning-validity-checks-enabled-new-repos-disabled-blocking-enablement") %>
                name="secret_scanning_validity_checks_new_repos_disabled"
                id="secret-scanning-validity-checks-enabled-new-repos-disabled"
                class="mr-2"
                <%= secret_scanning_validity_checks_enabled_for_new_repos? ? 'checked' : '' %>
                disabled>
              <label for="secret-scanning-validity-checks-enabled-new-repos-disabled">
                Automatically enable for repositories added to secret scanning
              </label>
            </div>
          <% elsif can_owner_enable_for_new_repos? %>
            <%= form_tag security_analysis_update_path(@owner), :class => "js-setting-toggle d-flex flex-items-center", "data-autosubmit" => true, method: :put do %>
              <%= render partial: "settings/organization/security_analysis_enable_checkbox", locals: {
                name: "secret_scanning_validity_checks_new_repos",
                id: "secret-scanning-validity-checks-enable-new-private-repos",
                checked_condition: secret_scanning_validity_checks_enabled_for_new_repos?,
                label_text: "Automatically enable for repositories added to secret scanning",
                test_selector: "secret-scanning-validity-checks-enable-new-checkbox",
                classes: "mr-2"
              } %>
            <% end %>
          <% end %>
        </div>
      </div>
    </div>
  <% end %>
  <% if lower_confidence_patterns_feature_available? && lower_confidence_patterns_show_enable_all? %>
    <%= render(Settings::AdvancedSecurityOnboarding::TipComponent.new(
      tip: params[:tip],
      organization: current_organization,
      visible_for_tip: "lower_confidence_patterns",
      with_separator: true,
      mb: 1
    )) %>
    <div <%= test_selector("secret-scanning-lower-confidence-patterns-business-settings") %>>
      <div class="d-flex flex-justify-between pt-3 pb-2">
        <div style="white-space: normal;">
          <h4>Non-provider patterns</h4>
          <p class="mb-0">
            <%= render(Primer::Beta::Link.new(href: helpers.docs_url("code-security/supported-secret-scanning-patterns-non-provider-patterns", ghec: true), classes: "Link--inTextBlock")) { "Scan for non-provider patterns" } %>
          </p>
        </div>
        <div style="white-space: normal;">
          <div class="BtnGroup d-flex flex-shrink-0">

            <% secret_scanning_lower_confidence_patterns_disable_dialog_text = capture do %>
              <p><strong>
                This will disable scanning for non-provider patterns on all repositories where it is enabled.
              </strong></p>
              <p>You can still enable scanning for non-provider patterns at the repository level.</p>
            <% end %>

            <% if lower_confidence_patterns_buttons_disabled? %>
              <%= render Primer::Beta::Button.new(test_selector: "secret-scanning-lower-confidence-patterns-disable-all-button-disabled-by-blocking-enablement", "aria-disabled": "true", "aria-label": "Disable all non-provider patterns", scheme: :danger, mr: 1) do %>
                Disable all
              <% end %>
            <% else %>
              <%= form_tag security_analysis_update_path(@owner), method: :put do %>
                <%= render(SecurityAnalysis::SettingsDialogComponent.new(
                  summary_button_text: "Disable all",
                  confirm_button_text: "Disable scanning for non-provider patterns",
                  warning_text: security_config_warning_banner_text(setting: :secret_scanning_lower_confidence_patterns, value: "disabled"),
                  disabled: button_disabled_no_repos,
                  button_class: "btn btn-danger mr-1",
                  title: button_disabled_no_repos_title("Disable scanning for non-provider patterns?"),
                  button_aria_label: "Disable all scanning for non-provider patterns",
                  dialog_text: secret_scanning_lower_confidence_patterns_disable_dialog_text,
                  input_name: "secret_scanning_lower_confidence_patterns",
                  input_value: "disable_all",
                  test_selector: "secret-scanning-lower-confidence-patterns-disable-all-button"
                )) %>
              <% end %>
            <% end %>

            <% secret_scanning_lower_confidence_patterns_enable_dialog_text = capture do %>
              <p><strong>
                This will turn on scanning for non-provider patterns for all repositories that have secret scanning enabled.
              </strong></p>
              <% if @owner.organization? %>
                <include-fragment
                  src="<%= settings_org_security_analysis_enableable_repo_counts_path(@owner, feature_type: "lower_confidence_patterns") %>"
                  loading="lazy"
                  <%= test_selector("lower-confidence-patterns-enablement-count-async-placeholder") %>>
                  <%= render(Primer::Beta::Spinner.new(size: :small, "aria-label": "Loading...")) %>
                </include-fragment>
              <% end %>
            <% end %>

            <% if lower_confidence_patterns_buttons_disabled? %>
              <%= render Primer::Beta::Button.new(test_selector: "secret-scanning-lower-confidence-patterns-enable-all-button-disabled-by-blocking-enablement", "aria-disabled": "true", "aria-label": "Enable all scanniing for non-provider patterns") do %>
                Enable all
              <% end %>
            <% else %>
              <%= form_tag security_analysis_update_path(@owner), method: :put do %>
                <%= render(SecurityAnalysis::SettingsDialogComponent.new(
                  summary_button_text: "Enable all",
                  confirm_button_text: "Enable for eligible repositories",
                  warning_text: security_config_warning_banner_text(setting: :secret_scanning_lower_confidence_patterns, value: "enabled"),
                  disabled: button_disabled_no_repos,
                  title: button_disabled_no_repos_title("Enable scanning for non-provider patterns for eligible repositories?"),
                  button_aria_label: "Enable all scanning for non-provider patterns",
                  dialog_text: secret_scanning_lower_confidence_patterns_enable_dialog_text,
                  input_name: "secret_scanning_lower_confidence_patterns",
                  input_value: "enable_all",
                  test_selector: "secret-scanning-lower-confidence-patterns-enable-all-button"
                )) %>
              <% end %>
            <% end %>
          </div>
        </div>
      </div>
      <div class="pb-2 width-full">
        <div class="d-flex flex-justify-start">
          <% if lower_confidence_patterns_buttons_disabled? %>
            <div class="js-setting-toggle d-flex flex-items-center">
              <input type="checkbox"
                <%= test_selector("secret-scanning-lower-confidence-patterns-enabled-new-repos-disabled-blocking-enablement") %>
                name="secret_scanning_lower_confidence_patterns_new_repos_disabled"
                id="secret-scanning-lower-confidence-patterns-enabled-new-repos-disabled"
                class="mr-2"
                <%= secret_scanning_lower_confidence_patterns_enabled_for_new_repos? ? 'checked' : '' %>
                disabled>
              <label for="secret-scanning-lower-confidence-patterns-enabled-new-repos-disabled">
                Automatically enable for repositories added to secret scanning
              </label>
            </div>
          <% elsif can_owner_enable_for_new_repos? %>
            <%= form_tag security_analysis_update_path(@owner), :class => "js-setting-toggle d-flex flex-items-center", "data-autosubmit" => true, method: :put do %>
              <%= render partial: "settings/organization/security_analysis_enable_checkbox", locals: {
                name: "secret_scanning_lower_confidence_patterns_new_repos",
                id: "secret-scanning-lower-confidence-patterns-enable-new-private-repos",
                checked_condition: secret_scanning_lower_confidence_patterns_enabled_for_new_repos?,
                label_text: "Automatically enable for repositories added to secret scanning",
                test_selector: "secret-scanning-lower-confidence-patterns-enable-new-checkbox",
                classes: "mr-2"
              } %>
            <% end %>
          <% end %>
        </div>
      </div>
    </div>
  <% end %>


  <% if secret_scanning_push_protection_feature_available? %>
    <%= render(Settings::AdvancedSecurityOnboarding::TipComponent.new(
      tip: params[:tip],
      organization: current_organization,
      visible_for_tip: "push_protection",
      with_separator: true,
      mb: 1
    )) %>
    <div <%= test_selector("secret-scanning-push-protection-org-settings") %>>
      <div class="d-flex flex-justify-between pt-3 pb-2">
        <div style="white-space: normal;">
          <h4>Push protection</h4>
          <% unless @owner.security_configurations_enabled? %>
            <p class="mb-0">
              Block commits that contain
              <%= render(Primer::Beta::Link.new(href: "#{GitHub.help_url(ghec_exclusive: advanced_security_purchased?)}/code-security/secret-scanning/secret-scanning-patterns#supported-secrets", classes: "Link--inTextBlock")) { "supported secrets" } %>.
            </p>
          <% end %>
        </div>
      <% unless @owner.security_configurations_enabled? %>
          <div style="white-space: normal;">
            <div class="BtnGroup d-flex flex-shrink-0">

              <% secret_scanning_push_protection_disable_dialog_text = capture do %>
                <p><strong>
                  This will disable push protection on all repositories where it is enabled.
                </strong></p>
                <p>You can still enable push protection at the repository level.</p>
              <% end %>

              <% if push_protection_buttons_disabled? %>
                <button
                  <%= test_selector("secret-scanning-push-protection-disable-all-button-disabled-by-blocking-enablement") %>
                  type="button"
                  aria-disabled="true"
                  aria-label="Disable all push protection"
                  class="btn btn-danger mr-1">
                  Disable all
                </button>
              <% else %>
                <%= form_tag security_analysis_update_path(@owner), method: :put do %>
                  <%= render(SecurityAnalysis::SettingsDialogComponent.new(
                    summary_button_text: "Disable all",
                    confirm_button_text: "Disable push protection",
                    warning_text: security_config_warning_banner_text(setting: :secret_scanning_push_protection, value: "disabled"),
                    disabled: button_disabled_no_repos,
                    button_class: "btn btn-danger mr-1",
                    title: button_disabled_no_repos_title("Disable push protection?"),
                    button_aria_label: "Disable all push protection",
                    dialog_text: secret_scanning_push_protection_disable_dialog_text,
                    input_name: "secret_scanning_push_protection",
                    input_value: "disable_all",
                    test_selector: "secret-scanning-push-protection-disable-all-button"
                  )) %>
                <% end %>
              <% end %>

              <% secret_scanning_push_protection_enable_dialog_text = capture do %>
                <p><strong>
                  This will turn on push protection for all repositories that have secret scanning enabled.
                </strong></p>
              <% end %>

              <% if push_protection_buttons_disabled? %>
                <button
                  <%= test_selector("secret-scanning-push-protection-enable-all-button-disabled-by-blocking-enablement") %>
                  type="button"
                  aria-disabled="true"
                  aria-label="Enable all push protection"
                  class="btn">
                  Enable all
                </button>
              <% else %>
                <%= form_tag security_analysis_update_path(@owner), method: :put do %>
                  <%= render(SecurityAnalysis::SettingsDialogComponent.new(
                    summary_button_text: "Enable all",
                    confirm_button_text: "Enable for eligible repositories",
                    warning_text: security_config_warning_banner_text(setting: :secret_scanning_push_protection, value: "enabled"),
                    disabled: button_disabled_no_repos,
                    title: button_disabled_no_repos_title("Enable push protection for eligible repositories?"),
                    button_aria_label: "Enable all push protection",
                    dialog_text: secret_scanning_push_protection_enable_dialog_text,
                    input_name: "secret_scanning_push_protection",
                    input_value: "enable_all",
                    test_selector: "secret-scanning-push-protection-enable-all-button"
                  )) %>
                <% end %>
              <% end %>
            </div>
          </div>
        </div>
        <div class="pb-2 width-full">
          <div class="d-flex flex-justify-start">
            <% if push_protection_buttons_disabled? %>
              <div class="js-setting-toggle d-flex flex-items-center">
                <input type="checkbox"
                  <%= test_selector("secret-scanning-push-protection-enabled-new-repos-disabled-blocking-enablement") %>
                  name="secret_scanning_push_protection_new_repos_disabled"
                  id="secret-scanning-push-protection-enabled-new-repos-disabled"
                  class="mr-2"
                  <%= secret_scanning_push_protection_enabled_for_new_repos? ? 'checked' : '' %>
                  disabled>
                <label for="secret-scanning-push-protection-enabled-new-repos-disabled">
                  Automatically enable for repositories added to secret scanning
                </label>
              </div>
            <% elsif can_owner_enable_for_new_repos? %>
              <%= form_tag security_analysis_update_path(@owner), :class => "js-setting-toggle d-flex flex-items-center", "data-autosubmit" => true, method: :put do %>
                <%= render partial: "settings/organization/security_analysis_enable_checkbox", locals: {
                  name: "secret_scanning_push_protection_new_repos",
                  id: "secret-scanning-push-protection-enable-new-private-repos",
                  checked_condition: secret_scanning_push_protection_enabled_for_new_repos?,
                  label_text: "Automatically enable for repositories added to secret scanning",
                  test_selector: "secret-scanning-push-protection-enable-new-checkbox",
                  classes: "mr-2"
                } %>
              <% end %>
            <% end %>
          </div>
      <% end %>
      </div>
      <% if !@owner.user? %>
        <div class="pb-3 width-full">
            <% if push_protection_buttons_disabled? %>
              <%= form_tag security_analysis_update_path(@owner), class: "js-enable-custom-msg js-setting-toggle d-flex flex-items-center", "data-autosubmit" => true, method: :put do %>
                <div class="js-setting-toggle d-flex flex-items-center">
                  <input type="checkbox"
                    <%= test_selector("push-protection-custom-message-status-disabled-blocking-enablement") %>
                    name="push_protection_custom_message_status"
                    id="push-protection-custom-message-status-new-repos-disabled"
                    class="mr-2"
                    <%= push_protection_custom_message_enabled? ? 'checked' : '' %>
                    disabled>
                  <label for="push-protection-custom-message-status-new-repos-disabled">
                    Add a resource link in the CLI and web UI when a commit is blocked
                  </label>
                </div>
              <% end %>

              <%= form_tag security_analysis_update_path(@owner), hidden: !push_protection_custom_message_enabled?, style: "gap: 8px;", class: "ml-4 d-flex flex-column flex-items-start", method: :put do %>
                <label for="push-protection-custom-message" class="text-normal">Link will show in addition to <a class="Link--inTextBlock" href="<%= push_protection_custom_message_doc_link %>">the message GitHub displays</a></label>
                <%= render(Primer::Box.new(display: :flex, w: :full, disabled: true)) do %>
                  <input required type="url" maxlength="150" id="push-protection-custom-message" class="form-control input-sm col-6 mr-2" name="push_protection_custom_message" value="<%= push_protection_custom_message %>" disabled>
                  <%= render(Primer::Beta::Button.new type: :submit, disabled: true) { "Save link" } %>
                <% end %>
              <% end %>
            <% else %>
              <%= form_tag security_analysis_update_path(@owner), class: "js-enable-custom-msg js-setting-toggle d-flex flex-items-center", "data-autosubmit" => true, method: :put do %>
                <%= render partial: "settings/organization/security_analysis_enable_checkbox", locals: {
                  name: "push_protection_custom_message_status",
                  id: "push-protection-custom-message-status",
                  checked_condition: push_protection_custom_message_enabled?,
                  label_text: "Add a resource link in the CLI and web UI when a commit is blocked",
                  test_selector: "push-protection-custom-msg-enable-checkbox",
                  classes: "js-custom-msg-checkbox"
                } %>
              <% end %>

              <%= form_tag security_analysis_update_path(@owner), hidden: !push_protection_custom_message_enabled?, style: "gap: 8px;", class: "ml-4 d-flex flex-column flex-items-start", method: :put do %>
                <label for="push-protection-custom-message" class="text-normal">Link will show in addition to <a class="Link--inTextBlock" href="<%= push_protection_custom_message_doc_link %>">the message GitHub displays</a></label>
                <%= render(Primer::Box.new(display: :flex, w: :full)) do %>
                  <input required type="url" maxlength="150" id="push-protection-custom-message" class="form-control input-sm col-6 mr-2" name="push_protection_custom_message" value="<%= push_protection_custom_message %>">
                  <%= render(Primer::Beta::Button.new type: :submit) { "Save link" } %>
                <% end %>
              <% end %>
            <% end %>
        </div>
      <% end %>
    </div>
  <% end %>

  <% if delegated_bypass_feature_available? %>
    <%= render(SecretScanning::PushProtection::DelegatedBypassReviewersComponent.new(
      source: @owner,
      current_user: current_user,
      enabled: delegated_bypass_enabled?,
      org_enabled: false,
      update_path: security_analysis_update_path(@owner),
      add_reviewers_path: org_secret_scanning_add_bypass_reviewer_path(organization_id: @owner.display_login),
      remove_reviewers_path: org_secret_scanning_remove_bypass_reviewer_path(organization_id: @owner.display_login),
      suggested_reviewers_path: org_secret_scanning_bypass_reviewer_suggestions_path(@owner.display_login),
    )) %>
  <% end # end delegated bypass %>

  <% if @owner.organization? && SecretScanning::Features::Org::CustomPatterns.new(@owner).feature_available? %>
    <% if flash[:custom_pattern_error_message] %>
      <%= render(Primer::Beta::Flash.new(scheme: :danger)) do %>
        <%= flash[:custom_pattern_error_message] %>
      <% end %>
    <% end %>
    <div class="pt-2">
      <%= render(SecretScanning::CustomPatterns::ListComponent.new(
        pattern_model: SecretScanning::CustomPatterns::ListComponent::OrgSecretScanningCustomPatternsModel.new(org: @owner, user: current_user, cursor: @cursor, query: @query),
        )
      ) %>
    </div>
  <% end %>
</div>
