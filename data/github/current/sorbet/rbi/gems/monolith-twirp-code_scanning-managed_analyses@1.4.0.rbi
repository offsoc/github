# typed: false

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `monolith-twirp-code_scanning-managed_analyses` gem.
# Please instead update this file by running `bin/tapioca gem monolith-twirp-code_scanning-managed_analyses`.

module Google::Protobuf::MessageExts::ClassMethods; end

# source://monolith-twirp-code_scanning-managed_analyses//lib/monolith-twirp-code_scanning-managed_analyses.rb#7
module Monolith; end

# source://monolith-twirp-code_scanning-managed_analyses//lib/monolith-twirp-code_scanning-managed_analyses.rb#8
module Monolith::Twirp; end

# source://monolith-twirp-code_scanning-managed_analyses//lib/monolith-twirp-code_scanning-managed_analyses.rb#9
module Monolith::Twirp::CodeScanning; end

# source://monolith-twirp-code_scanning-managed_analyses//lib/monolith-twirp-code_scanning-managed_analyses.rb#10
module Monolith::Twirp::CodeScanning::ManagedAnalyses; end

# source://monolith-twirp-code_scanning-managed_analyses//lib/monolith-twirp-code_scanning-managed_analyses.rb#11
class Monolith::Twirp::CodeScanning::ManagedAnalyses::Error < ::StandardError; end

# source://monolith-twirp-code_scanning-managed_analyses//lib/monolith_twirp/code_scanning/managed_analyses/version.rb#3
module MonolithTwirp; end

# source://monolith-twirp-code_scanning-managed_analyses//lib/monolith_twirp/code_scanning/managed_analyses/version.rb#4
module MonolithTwirp::CodeScanning; end

# source://monolith-twirp-code_scanning-managed_analyses//lib/monolith_twirp/code_scanning/managed_analyses/version.rb#5
module MonolithTwirp::CodeScanning::ManagedAnalyses; end

# source://monolith-twirp-code_scanning-managed_analyses//lib/monolith_twirp/code_scanning/managed_analyses/v1/managed_analyses_pb.rb#56
module MonolithTwirp::CodeScanning::ManagedAnalyses::V1; end

class MonolithTwirp::CodeScanning::ManagedAnalyses::V1::AreRequiredServicesEnabledRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::CodeScanning::ManagedAnalyses::V1::AreRequiredServicesEnabledResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::CodeScanning::ManagedAnalyses::V1::CancelQueuedRunsRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::CodeScanning::ManagedAnalyses::V1::CancelQueuedRunsResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::CodeScanning::ManagedAnalyses::V1::CreateCheckForPRRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::CodeScanning::ManagedAnalyses::V1::CreateCheckForPRResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::CodeScanning::ManagedAnalyses::V1::GetCodeScanningBotInfoRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::CodeScanning::ManagedAnalyses::V1::GetCodeScanningBotInfoResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::CodeScanning::ManagedAnalyses::V1::IsCodeQLRequiredRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::CodeScanning::ManagedAnalyses::V1::IsCodeQLRequiredResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

# source://monolith-twirp-code_scanning-managed_analyses//lib/monolith_twirp/code_scanning/managed_analyses/v1/managed_analyses_twirp.rb#19
class MonolithTwirp::CodeScanning::ManagedAnalyses::V1::ManagedAnalysesAPIClient < ::Twirp::Client
  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def are_required_services_enabled(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def cancel_queued_runs(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def create_check_for_p_r(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_code_scanning_bot_info(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def is_code_q_l_required(input, req_opts = T.unsafe(nil)); end
end

# source://monolith-twirp-code_scanning-managed_analyses//lib/monolith_twirp/code_scanning/managed_analyses/v1/managed_analyses_twirp.rb#9
class MonolithTwirp::CodeScanning::ManagedAnalyses::V1::ManagedAnalysesAPIService < ::Twirp::Service; end

class MonolithTwirp::CodeScanning::ManagedAnalyses::V1::WorkflowRunStatus
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

# source://monolith-twirp-code_scanning-managed_analyses//lib/monolith_twirp/code_scanning/managed_analyses/version.rb#6
MonolithTwirp::CodeScanning::ManagedAnalyses::VERSION = T.let(T.unsafe(nil), String)
