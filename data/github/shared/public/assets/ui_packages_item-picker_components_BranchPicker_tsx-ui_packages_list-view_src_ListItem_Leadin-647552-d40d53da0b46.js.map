{"version":3,"file":"ui_packages_item-picker_components_BranchPicker_tsx-ui_packages_list-view_src_ListItem_Leadin-647552-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/item-picker/components/__generated__/BranchPickerRef.graphql.ts","ui/packages/item-picker/components/__generated__/BranchPickerRepositoryBranchRefs.graphql.ts","ui/packages/item-picker/components/__generated__/BranchPickerRepositoryBranches.graphql.ts","ui/packages/item-picker/components/__generated__/BranchPickerRepositoryBranchesQuery.graphql.ts","ui/packages/item-picker/components/__generated__/BranchPickerSearchBranchesFragment.graphql.ts","ui/packages/item-picker/components/__generated__/BranchPickerSearchBranchesQuery.graphql.ts","ui/packages/item-picker/components/BranchPicker.tsx","ui/packages/list-view/src/ListItem/LeadingVisual.module.css","ui/packages/list-view/src/ListItem/UnreadIndicator.module.css","ui/packages/list-view/src/ListItem/UnreadIndicator.tsx","ui/packages/list-view/src/ListItem/LeadingVisual.tsx","ui/packages/list-view/src/ListView/Metadata.tsx","ui/packages/list-view/src/density-gap.module.css","ui/packages/list-view/src/ListView/ActionBar.module.css","ui/packages/list-view/src/ListView/ActionBar.tsx","ui/packages/list-view/src/ListView/Metadata.module.css","ui/packages/list-view/src/ListView/SectionFilters.module.css","ui/packages/list-view/src/ListView/SectionFilters.tsx","ui/packages/list-view/src/ListView/SelectAllCheckbox.module.css","ui/packages/list-view/src/ListView/SelectAllCheckbox.tsx"],"sourcesContent":["/**\n * @generated SignedSource<<31df280b1c4415cc08addd395c7e4666>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { InlineFragment, ReaderInlineDataFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type BranchPickerRef$data = {\n  readonly __typename: \"Ref\";\n  readonly associatedPullRequests: {\n    readonly totalCount: number;\n  };\n  readonly id: string;\n  readonly name: string;\n  readonly repository: {\n    readonly defaultBranchRef: {\n      readonly associatedPullRequests: {\n        readonly totalCount: number;\n      };\n      readonly id: string;\n      readonly name: string;\n      readonly repository: {\n        readonly id: string;\n      };\n      readonly target: {\n        readonly __typename: string;\n        readonly id: string;\n        readonly oid: any;\n      } | null | undefined;\n    } | null | undefined;\n    readonly id: string;\n    readonly nameWithOwner: string;\n  };\n  readonly target: {\n    readonly __typename: string;\n    readonly id: string;\n    readonly oid: any;\n  } | null | undefined;\n  readonly \" $fragmentType\": \"BranchPickerRef\";\n};\nexport type BranchPickerRef$key = {\n  readonly \" $data\"?: BranchPickerRef$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"BranchPickerRef\">;\n};\n\nconst node: ReaderInlineDataFragment = {\n  \"kind\": \"InlineDataFragment\",\n  \"name\": \"BranchPickerRef\"\n};\n\n(node as any).hash = \"98ea8dab9ebd07b2e3330c4f789fa7b3\";\n\nexport default node;\n","/**\n * @generated SignedSource<<daf3c9069acefcd53de77cb500250541>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { InlineFragment, ReaderInlineDataFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type BranchPickerRepositoryBranchRefs$data = {\n  readonly defaultBranchRef: {\n    readonly \" $fragmentSpreads\": FragmentRefs<\"BranchPickerRef\">;\n  } | null | undefined;\n  readonly id: string;\n  readonly refs: {\n    readonly \" $fragmentSpreads\": FragmentRefs<\"BranchPickerRepositoryBranches\">;\n  } | null | undefined;\n  readonly \" $fragmentType\": \"BranchPickerRepositoryBranchRefs\";\n};\nexport type BranchPickerRepositoryBranchRefs$key = {\n  readonly \" $data\"?: BranchPickerRepositoryBranchRefs$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"BranchPickerRepositoryBranchRefs\">;\n};\n\nconst node: ReaderInlineDataFragment = {\n  \"kind\": \"InlineDataFragment\",\n  \"name\": \"BranchPickerRepositoryBranchRefs\"\n};\n\n(node as any).hash = \"3987830ca22f372a937fcef8c7dd5e8b\";\n\nexport default node;\n","/**\n * @generated SignedSource<<655e4a2d5b82aaf901aa1b0008e23e35>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { InlineFragment, ReaderInlineDataFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type BranchPickerRepositoryBranches$data = {\n  readonly edges: ReadonlyArray<{\n    readonly node: {\n      readonly \" $fragmentSpreads\": FragmentRefs<\"BranchPickerRef\">;\n    } | null | undefined;\n  } | null | undefined> | null | undefined;\n  readonly \" $fragmentType\": \"BranchPickerRepositoryBranches\";\n};\nexport type BranchPickerRepositoryBranches$key = {\n  readonly \" $data\"?: BranchPickerRepositoryBranches$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"BranchPickerRepositoryBranches\">;\n};\n\nconst node: ReaderInlineDataFragment = {\n  \"kind\": \"InlineDataFragment\",\n  \"name\": \"BranchPickerRepositoryBranches\"\n};\n\n(node as any).hash = \"fc20fd3ed00706559cd5314915dda570\";\n\nexport default node;\n","/**\n * @generated SignedSource<<ad9cdbd7d70e9481658ba5a48cdd0939>>\n * @relayHash 7319648851ece31f26cbd26dc431185a\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\n// @relayRequestID 7319648851ece31f26cbd26dc431185a\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type BranchPickerRepositoryBranchesQuery$variables = {\n  name: string;\n  owner: string;\n};\nexport type BranchPickerRepositoryBranchesQuery$data = {\n  readonly repository: {\n    readonly \" $fragmentSpreads\": FragmentRefs<\"BranchPickerRepositoryBranchRefs\">;\n  } | null | undefined;\n};\nexport type BranchPickerRepositoryBranchesQuery = {\n  response: BranchPickerRepositoryBranchesQuery$data;\n  variables: BranchPickerRepositoryBranchesQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"name\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"owner\"\n},\nv2 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"name\",\n    \"variableName\": \"name\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"owner\",\n    \"variableName\": \"owner\"\n  }\n],\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"__typename\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": null,\n  \"kind\": \"LinkedField\",\n  \"name\": \"target\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"oid\",\n      \"storageKey\": null\n    },\n    (v3/*: any*/),\n    (v5/*: any*/)\n  ],\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"PullRequestConnection\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"associatedPullRequests\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"totalCount\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv8 = [\n  (v4/*: any*/),\n  (v3/*: any*/),\n  (v5/*: any*/),\n  (v6/*: any*/),\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"concreteType\": \"Repository\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"repository\",\n    \"plural\": false,\n    \"selections\": [\n      (v3/*: any*/),\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"nameWithOwner\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"Ref\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"defaultBranchRef\",\n        \"plural\": false,\n        \"selections\": [\n          (v4/*: any*/),\n          (v3/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Repository\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"repository\",\n            \"plural\": false,\n            \"selections\": [\n              (v3/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  },\n  (v7/*: any*/)\n],\nv9 = [\n  {\n    \"kind\": \"InlineDataFragmentSpread\",\n    \"name\": \"BranchPickerRef\",\n    \"selections\": (v8/*: any*/),\n    \"args\": null,\n    \"argumentDefinitions\": ([]/*: any*/)\n  }\n],\nv10 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"first\",\n    \"value\": 25\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"refPrefix\",\n    \"value\": \"refs/heads/\"\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"BranchPickerRepositoryBranchesQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v2/*: any*/),\n        \"concreteType\": \"Repository\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"repository\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"InlineDataFragmentSpread\",\n            \"name\": \"BranchPickerRepositoryBranchRefs\",\n            \"selections\": [\n              (v3/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Ref\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"defaultBranchRef\",\n                \"plural\": false,\n                \"selections\": (v9/*: any*/),\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": (v10/*: any*/),\n                \"concreteType\": \"RefConnection\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"refs\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"kind\": \"InlineDataFragmentSpread\",\n                    \"name\": \"BranchPickerRepositoryBranches\",\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": \"RefEdge\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"edges\",\n                        \"plural\": true,\n                        \"selections\": [\n                          {\n                            \"alias\": null,\n                            \"args\": null,\n                            \"concreteType\": \"Ref\",\n                            \"kind\": \"LinkedField\",\n                            \"name\": \"node\",\n                            \"plural\": false,\n                            \"selections\": (v9/*: any*/),\n                            \"storageKey\": null\n                          }\n                        ],\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"args\": null,\n                    \"argumentDefinitions\": []\n                  }\n                ],\n                \"storageKey\": \"refs(first:25,refPrefix:\\\"refs/heads/\\\")\"\n              }\n            ],\n            \"args\": null,\n            \"argumentDefinitions\": []\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"BranchPickerRepositoryBranchesQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v2/*: any*/),\n        \"concreteType\": \"Repository\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"repository\",\n        \"plural\": false,\n        \"selections\": [\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Ref\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"defaultBranchRef\",\n            \"plural\": false,\n            \"selections\": (v8/*: any*/),\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": (v10/*: any*/),\n            \"concreteType\": \"RefConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"refs\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"RefEdge\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"edges\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Ref\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"node\",\n                    \"plural\": false,\n                    \"selections\": (v8/*: any*/),\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": \"refs(first:25,refPrefix:\\\"refs/heads/\\\")\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": \"7319648851ece31f26cbd26dc431185a\",\n    \"metadata\": {},\n    \"name\": \"BranchPickerRepositoryBranchesQuery\",\n    \"operationKind\": \"query\",\n    \"text\": null\n  }\n};\n})();\n\n(node as any).hash = \"379faafddfb7432c18055ea644544898\";\n\nexport default node;\n","/**\n * @generated SignedSource<<094877addeed457873815abf918c8d61>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type BranchPickerSearchBranchesFragment$data = {\n  readonly repository: {\n    readonly refs: {\n      readonly edges: ReadonlyArray<{\n        readonly node: {\n          readonly \" $fragmentSpreads\": FragmentRefs<\"BranchPickerRef\">;\n        } | null | undefined;\n      } | null | undefined> | null | undefined;\n    } | null | undefined;\n  } | null | undefined;\n  readonly \" $fragmentType\": \"BranchPickerSearchBranchesFragment\";\n};\nexport type BranchPickerSearchBranchesFragment$key = {\n  readonly \" $data\"?: BranchPickerSearchBranchesFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"BranchPickerSearchBranchesFragment\">;\n};\n\nconst node: ReaderFragment = (function(){\nvar v0 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"__typename\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": null,\n  \"kind\": \"LinkedField\",\n  \"name\": \"target\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"oid\",\n      \"storageKey\": null\n    },\n    (v1/*: any*/),\n    (v2/*: any*/)\n  ],\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"PullRequestConnection\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"associatedPullRequests\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"totalCount\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n};\nreturn {\n  \"argumentDefinitions\": [\n    {\n      \"kind\": \"RootArgument\",\n      \"name\": \"first\"\n    },\n    {\n      \"kind\": \"RootArgument\",\n      \"name\": \"name\"\n    },\n    {\n      \"kind\": \"RootArgument\",\n      \"name\": \"owner\"\n    },\n    {\n      \"kind\": \"RootArgument\",\n      \"name\": \"query\"\n    }\n  ],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"BranchPickerSearchBranchesFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": [\n        {\n          \"kind\": \"Variable\",\n          \"name\": \"name\",\n          \"variableName\": \"name\"\n        },\n        {\n          \"kind\": \"Variable\",\n          \"name\": \"owner\",\n          \"variableName\": \"owner\"\n        }\n      ],\n      \"concreteType\": \"Repository\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"repository\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": [\n            {\n              \"kind\": \"Variable\",\n              \"name\": \"first\",\n              \"variableName\": \"first\"\n            },\n            {\n              \"kind\": \"Variable\",\n              \"name\": \"query\",\n              \"variableName\": \"query\"\n            },\n            {\n              \"kind\": \"Literal\",\n              \"name\": \"refPrefix\",\n              \"value\": \"refs/heads/\"\n            }\n          ],\n          \"concreteType\": \"RefConnection\",\n          \"kind\": \"LinkedField\",\n          \"name\": \"refs\",\n          \"plural\": false,\n          \"selections\": [\n            {\n              \"alias\": null,\n              \"args\": null,\n              \"concreteType\": \"RefEdge\",\n              \"kind\": \"LinkedField\",\n              \"name\": \"edges\",\n              \"plural\": true,\n              \"selections\": [\n                {\n                  \"alias\": null,\n                  \"args\": null,\n                  \"concreteType\": \"Ref\",\n                  \"kind\": \"LinkedField\",\n                  \"name\": \"node\",\n                  \"plural\": false,\n                  \"selections\": [\n                    {\n                      \"kind\": \"InlineDataFragmentSpread\",\n                      \"name\": \"BranchPickerRef\",\n                      \"selections\": [\n                        (v0/*: any*/),\n                        (v1/*: any*/),\n                        (v2/*: any*/),\n                        (v3/*: any*/),\n                        {\n                          \"alias\": null,\n                          \"args\": null,\n                          \"concreteType\": \"Repository\",\n                          \"kind\": \"LinkedField\",\n                          \"name\": \"repository\",\n                          \"plural\": false,\n                          \"selections\": [\n                            (v1/*: any*/),\n                            {\n                              \"alias\": null,\n                              \"args\": null,\n                              \"kind\": \"ScalarField\",\n                              \"name\": \"nameWithOwner\",\n                              \"storageKey\": null\n                            },\n                            {\n                              \"alias\": null,\n                              \"args\": null,\n                              \"concreteType\": \"Ref\",\n                              \"kind\": \"LinkedField\",\n                              \"name\": \"defaultBranchRef\",\n                              \"plural\": false,\n                              \"selections\": [\n                                (v0/*: any*/),\n                                (v1/*: any*/),\n                                (v3/*: any*/),\n                                (v4/*: any*/),\n                                {\n                                  \"alias\": null,\n                                  \"args\": null,\n                                  \"concreteType\": \"Repository\",\n                                  \"kind\": \"LinkedField\",\n                                  \"name\": \"repository\",\n                                  \"plural\": false,\n                                  \"selections\": [\n                                    (v1/*: any*/)\n                                  ],\n                                  \"storageKey\": null\n                                }\n                              ],\n                              \"storageKey\": null\n                            }\n                          ],\n                          \"storageKey\": null\n                        },\n                        (v4/*: any*/)\n                      ],\n                      \"args\": null,\n                      \"argumentDefinitions\": []\n                    }\n                  ],\n                  \"storageKey\": null\n                }\n              ],\n              \"storageKey\": null\n            }\n          ],\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Query\",\n  \"abstractKey\": null\n};\n})();\n\n(node as any).hash = \"a9785b05fefd0c1ae7aea87d04f60956\";\n\nexport default node;\n","/**\n * @generated SignedSource<<683dbae9be561ad30c51dfa83b5de915>>\n * @relayHash 1a36b75f74be7de2d87b1a5de6d10511\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\n// @relayRequestID 1a36b75f74be7de2d87b1a5de6d10511\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type BranchPickerSearchBranchesQuery$variables = {\n  first: number;\n  name: string;\n  owner: string;\n  query?: string | null | undefined;\n};\nexport type BranchPickerSearchBranchesQuery$data = {\n  readonly \" $fragmentSpreads\": FragmentRefs<\"BranchPickerSearchBranchesFragment\">;\n};\nexport type BranchPickerSearchBranchesQuery = {\n  response: BranchPickerSearchBranchesQuery$data;\n  variables: BranchPickerSearchBranchesQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"first\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"name\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"owner\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"query\"\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"__typename\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": null,\n  \"kind\": \"LinkedField\",\n  \"name\": \"target\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"oid\",\n      \"storageKey\": null\n    },\n    (v5/*: any*/),\n    (v6/*: any*/)\n  ],\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"PullRequestConnection\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"associatedPullRequests\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"totalCount\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"BranchPickerSearchBranchesQuery\",\n    \"selections\": [\n      {\n        \"args\": null,\n        \"kind\": \"FragmentSpread\",\n        \"name\": \"BranchPickerSearchBranchesFragment\"\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v2/*: any*/),\n      (v1/*: any*/),\n      (v0/*: any*/),\n      (v3/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"BranchPickerSearchBranchesQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": [\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"name\",\n            \"variableName\": \"name\"\n          },\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"owner\",\n            \"variableName\": \"owner\"\n          }\n        ],\n        \"concreteType\": \"Repository\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"repository\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": [\n              {\n                \"kind\": \"Variable\",\n                \"name\": \"first\",\n                \"variableName\": \"first\"\n              },\n              {\n                \"kind\": \"Variable\",\n                \"name\": \"query\",\n                \"variableName\": \"query\"\n              },\n              {\n                \"kind\": \"Literal\",\n                \"name\": \"refPrefix\",\n                \"value\": \"refs/heads/\"\n              }\n            ],\n            \"concreteType\": \"RefConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"refs\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"RefEdge\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"edges\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Ref\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v4/*: any*/),\n                      (v5/*: any*/),\n                      (v6/*: any*/),\n                      (v7/*: any*/),\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": \"Repository\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"repository\",\n                        \"plural\": false,\n                        \"selections\": [\n                          (v5/*: any*/),\n                          {\n                            \"alias\": null,\n                            \"args\": null,\n                            \"kind\": \"ScalarField\",\n                            \"name\": \"nameWithOwner\",\n                            \"storageKey\": null\n                          },\n                          {\n                            \"alias\": null,\n                            \"args\": null,\n                            \"concreteType\": \"Ref\",\n                            \"kind\": \"LinkedField\",\n                            \"name\": \"defaultBranchRef\",\n                            \"plural\": false,\n                            \"selections\": [\n                              (v4/*: any*/),\n                              (v5/*: any*/),\n                              (v7/*: any*/),\n                              (v8/*: any*/),\n                              {\n                                \"alias\": null,\n                                \"args\": null,\n                                \"concreteType\": \"Repository\",\n                                \"kind\": \"LinkedField\",\n                                \"name\": \"repository\",\n                                \"plural\": false,\n                                \"selections\": [\n                                  (v5/*: any*/)\n                                ],\n                                \"storageKey\": null\n                              }\n                            ],\n                            \"storageKey\": null\n                          }\n                        ],\n                        \"storageKey\": null\n                      },\n                      (v8/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          (v5/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": \"1a36b75f74be7de2d87b1a5de6d10511\",\n    \"metadata\": {},\n    \"name\": \"BranchPickerSearchBranchesQuery\",\n    \"operationKind\": \"query\",\n    \"text\": null\n  }\n};\n})();\n\n(node as any).hash = \"88b11505f4054c53e3e0f6e9d965f58a\";\n\nexport default node;\n","/* eslint eslint-comments/no-use: off */\n/* eslint-disable relay/unused-fields */\nimport {GitBranchIcon, TriangleDownIcon} from '@primer/octicons-react'\nimport {Box, Button, Octicon} from '@primer/react'\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {ERRORS} from '../constants/errors'\nimport {LABELS} from '../constants/labels'\nimport {fetchQuery, graphql, readInlineData} from 'relay-runtime'\nimport type {BranchPickerRef$data, BranchPickerRef$key} from './__generated__/BranchPickerRef.graphql'\nimport {type ExtendedItemProps, ItemPicker} from '../components/ItemPicker'\nimport {useFragment, useRelayEnvironment} from 'react-relay'\nimport type {\n  BranchPickerSearchBranchesQuery,\n  BranchPickerSearchBranchesQuery$data,\n} from './__generated__/BranchPickerSearchBranchesQuery.graphql'\n// eslint-disable-next-line no-restricted-imports\nimport {useToastContext} from '@github-ui/toast/ToastContext'\nimport {useDebounce} from '@github-ui/use-debounce'\nimport type {BranchPickerRepositoryBranches$key} from './__generated__/BranchPickerRepositoryBranches.graphql'\nimport type {BranchPickerSearchBranchesFragment$key} from './__generated__/BranchPickerSearchBranchesFragment.graphql'\nimport {VALUES} from '../constants/values'\n\nexport type Branch = BranchPickerRef$data\n\nexport type BranchPickerInternalProps = {\n  initialBranch: Branch | null | undefined\n  defaultBranchId: string | undefined\n  branchesKey: BranchPickerRepositoryBranches$key | null\n  onSelect: (branch: Branch | undefined) => void\n  enforceAtleastOneSelected?: boolean\n  owner: string\n  repo: string\n  title?: string\n  'aria-labelledby'?: string\n  'aria-describedby'?: string\n}\n\ninterface BranchPickerBaseProps {\n  items: Branch[]\n  initialSelectedItem?: Branch | null\n  onFilter: (value: string) => void\n  defaultBranchId: string | undefined\n  onSelectionChange: (selected?: Branch) => void\n  loading?: boolean\n  title?: string\n  'aria-labelledby'?: string\n  'aria-describedby'?: string\n}\n\nexport const BranchPickerRepositoryBranchesGraphqlQuery = graphql`\n  query BranchPickerRepositoryBranchesQuery($owner: String!, $name: String!) {\n    repository(owner: $owner, name: $name) {\n      ...BranchPickerRepositoryBranchRefs\n    }\n  }\n`\n\nexport const BranchPickerRepositoryBranchRefsFragment = graphql`\n  fragment BranchPickerRepositoryBranchRefs on Repository @inline {\n    id\n    defaultBranchRef {\n      ...BranchPickerRef\n    }\n    refs(refPrefix: \"refs/heads/\", first: 25) {\n      ...BranchPickerRepositoryBranches\n    }\n  }\n`\n\nexport const BranchPickerRepositoryBranchesFragment = graphql`\n  fragment BranchPickerRepositoryBranches on RefConnection @inline {\n    edges {\n      node {\n        ...BranchPickerRef\n      }\n    }\n  }\n`\n\nexport const BranchPickerRefFragment = graphql`\n  fragment BranchPickerRef on Ref @inline {\n    name\n    id\n    __typename\n    target {\n      oid\n      id\n      __typename\n    }\n    repository {\n      id\n      nameWithOwner\n      defaultBranchRef {\n        name\n        id\n        target {\n          oid\n          id\n          __typename\n        }\n        associatedPullRequests {\n          totalCount\n        }\n        repository {\n          id\n        }\n      }\n    }\n    associatedPullRequests {\n      totalCount\n    }\n  }\n`\n\nexport const BranchPickerSearchBranches = graphql`\n  query BranchPickerSearchBranchesQuery($owner: String!, $name: String!, $first: Int!, $query: String) {\n    ...BranchPickerSearchBranchesFragment\n  }\n`\n\nexport const BranchPickerSearchBranchesFragment = graphql`\n  fragment BranchPickerSearchBranchesFragment on Query {\n    repository(owner: $owner, name: $name) {\n      refs(refPrefix: \"refs/heads/\", first: $first, query: $query) {\n        edges {\n          node {\n            ...BranchPickerRef\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const BranchPickerPlaceholder = ({currentBranch}: {currentBranch?: string | null}) => (\n  <Button leadingVisual={GitBranchIcon} trailingVisual={TriangleDownIcon} disabled>\n    {currentBranch ?? LABELS.selectBranch}\n  </Button>\n)\n\nexport function BranchPickerInternal({\n  initialBranch,\n  defaultBranchId,\n  branchesKey,\n  owner,\n  repo,\n  onSelect,\n  title,\n  'aria-labelledby': ariaLabelledBy,\n  'aria-describedby': ariaDescribedBy,\n}: BranchPickerInternalProps) {\n  const [searchResultsFragment, setSearchResultsFragment] = useState<BranchPickerSearchBranchesQuery$data | null>(null)\n  const [searchResults, setSearchResults] = useState<Branch[] | undefined>(undefined)\n  const [searchLoading, setSearchLoading] = useState<boolean>(false)\n  const [filter, setFilter] = useState('')\n  const {addToast} = useToastContext()\n\n  const searchedBranchesData = useFragment<BranchPickerSearchBranchesFragment$key>(\n    BranchPickerSearchBranchesFragment,\n    searchResultsFragment,\n  )\n\n  const suggestedBranches = useMemo(() => {\n    if (!searchedBranchesData) {\n      return undefined\n    }\n    return (searchedBranchesData?.repository?.refs?.edges || []).flatMap(edge =>\n      // eslint-disable-next-line no-restricted-syntax\n      edge?.node ? [readInlineData<BranchPickerRef$key>(BranchPickerRefFragment, edge.node)] : [],\n    )\n  }, [searchedBranchesData])\n\n  useEffect(() => {\n    setSearchResults(suggestedBranches)\n  }, [suggestedBranches])\n\n  // eslint-disable-next-line no-restricted-syntax\n  const branchesData = readInlineData<BranchPickerRepositoryBranches$key>(\n    BranchPickerRepositoryBranchesFragment,\n    branchesKey,\n  )\n\n  const branches = useMemo(() => {\n    const repoBranches =\n      branchesData?.edges\n        // eslint-disable-next-line no-restricted-syntax\n        ?.flatMap(edge => (edge?.node ? [readInlineData<BranchPickerRef$key>(BranchPickerRefFragment, edge.node)] : []))\n        .filter(branch => branch.id !== initialBranch?.id) ?? []\n    if (initialBranch) {\n      repoBranches.unshift(initialBranch)\n    }\n    return repoBranches\n  }, [branchesData?.edges, initialBranch])\n\n  const items = useMemo(() => {\n    if (searchResults) {\n      return searchResults\n    }\n    return branches\n  }, [branches, searchResults])\n\n  const environment = useRelayEnvironment()\n\n  const fetchSearchData = useCallback(\n    (query: string) => {\n      if (query === '') {\n        setSearchResults([])\n        return\n      }\n\n      setSearchLoading(true)\n\n      fetchQuery<BranchPickerSearchBranchesQuery>(environment, BranchPickerSearchBranches, {\n        owner,\n        name: repo,\n        query,\n        first: 25,\n      }).subscribe({\n        next: (data: BranchPickerSearchBranchesQuery$data) => {\n          if (data !== null) {\n            setSearchResultsFragment(data)\n          }\n          setSearchLoading(false)\n        },\n        error: () => {\n          // eslint-disable-next-line @github-ui/dotcom-primer/toast-migration\n          addToast({\n            type: 'error',\n            message: ERRORS.couldNotSearchAssignees,\n          })\n          setSearchLoading(false)\n        },\n      })\n    },\n    [addToast, environment, owner, repo],\n  )\n\n  const debounceFetchSearchData = useDebounce(\n    (nextValue: string) => fetchSearchData(nextValue),\n    VALUES.pickerDebounceTime,\n  )\n\n  const filterItems = useCallback(\n    (value: string) => {\n      const trimmedFilter = value.trim()\n      if (filter !== trimmedFilter) {\n        debounceFetchSearchData(trimmedFilter)\n      }\n      setFilter(value)\n    },\n    [debounceFetchSearchData, filter],\n  )\n\n  return (\n    <BranchPickerBase\n      items={items}\n      initialSelectedItem={initialBranch}\n      onFilter={filterItems}\n      defaultBranchId={defaultBranchId}\n      onSelectionChange={onSelect}\n      loading={searchLoading}\n      aria-labelledby={ariaLabelledBy}\n      aria-describedby={ariaDescribedBy}\n      title={title}\n    />\n  )\n}\n\nexport function BranchPickerBase({\n  items,\n  initialSelectedItem,\n  onFilter,\n  defaultBranchId,\n  onSelectionChange,\n  'aria-labelledby': ariaLabelledBy,\n  'aria-describedby': ariaDescribedBy,\n  title,\n  loading = false,\n}: BranchPickerBaseProps) {\n  const filterItems = useCallback(\n    (value: string) => {\n      onFilter(value)\n    },\n    [onFilter],\n  )\n\n  const getItemKey = useCallback((branch: Branch) => branch.id, [])\n\n  const convertToItemProps = useCallback(\n    (branch: Branch): ExtendedItemProps<Branch> => ({\n      // this is a hack to make sure that we are using the prop\n      id: `${branch.id}`,\n      children: <span>{branch.name}</span>,\n      source: branch,\n      leadingVisual: () => <Octicon icon={GitBranchIcon} size={16} />,\n      trailingVisual: () => (branch.id === defaultBranchId ? <span>Default</span> : null),\n    }),\n    [defaultBranchId],\n  )\n\n  const branchPickerRef = useRef<HTMLButtonElement>(null)\n\n  const renderAnchor = useCallback(\n    ({...anchorProps}: React.HTMLAttributes<HTMLElement>) => (\n      <Button\n        leadingVisual={GitBranchIcon}\n        trailingVisual={TriangleDownIcon}\n        aria-label={!ariaLabelledBy ? LABELS.selectBranch : undefined}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedBy}\n        {...anchorProps}\n        ref={branchPickerRef}\n      >\n        {initialSelectedItem ? <span>{initialSelectedItem.name}</span> : LABELS.selectBranch}\n      </Button>\n    ),\n    [ariaDescribedBy, ariaLabelledBy, initialSelectedItem],\n  )\n\n  return (\n    <Box sx={{display: 'flex', flexDirection: 'row', flexWrap: 'wrap', gap: 1}}>\n      <ItemPicker\n        items={items}\n        initialSelectedItems={initialSelectedItem ? [initialSelectedItem] : []}\n        filterItems={filterItems}\n        getItemKey={getItemKey}\n        convertToItemProps={convertToItemProps}\n        placeholderText={LABELS.selectBranch}\n        selectionVariant=\"single\"\n        onSelectionChange={([branch]) => onSelectionChange(branch)}\n        loading={loading}\n        renderAnchor={renderAnchor}\n        selectPanelRef={branchPickerRef}\n        enforceAtleastOneSelected={true}\n        resultListAriaLabel={'Branch results'}\n        title={title ?? 'Select a branch'}\n        width={'large'}\n      />\n    </Box>\n  )\n}\n\ntry{ BranchPickerPlaceholder.displayName ||= 'BranchPickerPlaceholder' } catch {}\ntry{ BranchPickerInternal.displayName ||= 'BranchPickerInternal' } catch {}\ntry{ BranchPickerBase.displayName ||= 'BranchPickerBase' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"outer\":\"LeadingVisual-module__outer--SJchr\",\"hasNewActivity\":\"LeadingVisual-module__hasNewActivity--soQyL\",\"defaultVariant\":\"LeadingVisual-module__defaultVariant--ITyiW\",\"inner\":\"LeadingVisual-module__inner--O92jr\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"UnreadIndicator-module__container--RzNLy\"};","import {testIdProps} from '@github-ui/test-id-props'\n\nimport styles from './UnreadIndicator.module.css'\n\nexport const ListItemUnreadIndicator = () => {\n  return (\n    <div className={styles.container}>\n      <span className=\"sr-only\" {...testIdProps('list-view-item-unread-indicator')}>\n        New activity.\n      </span>\n    </div>\n  )\n}\n\ntry{ ListItemUnreadIndicator.displayName ||= 'ListItemUnreadIndicator' } catch {}","import {testIdProps} from '@github-ui/test-id-props'\nimport {Octicon, type OcticonProps} from '@primer/react'\nimport {clsx} from 'clsx'\nimport {type PropsWithChildren, type ReactNode, useEffect} from 'react'\n\nimport {useListViewVariant} from '../ListView/VariantContext'\nimport styles from './LeadingVisual.module.css'\nimport {useListItemNewActivity} from './NewActivityContext'\nimport {useListItemStatus} from './StatusContext'\nimport {ListItemUnreadIndicator} from './UnreadIndicator'\n\nexport type ListItemLeadingVisualProps = {\n  /**\n   * The Octicon component representing the desired icon\n   */\n  icon?: OcticonProps['icon']\n  /**\n   * Render any child content as the leading visual\n   * NOTE: if both icon and children are passed, the icon will be rendered first, with the children appended after\n   */\n  children?: ReactNode\n  /**\n   * The name of the Primer variable that will be used for the icon's fill\n   * eg.: done.fg\n   */\n  color?: string\n  /**\n   * A text description of the item\n   * Used for visually hidden text to describe the item on focus for the screen readers\n   */\n  description?: string\n  /**\n   * Indicates whether the rendered item has new content since lastViewed\n   */\n  newActivity?: boolean\n}\n\nexport function ListItemLeadingVisual({\n  icon,\n  color,\n  description,\n  newActivity = false,\n  children,\n  ...props\n}: ListItemLeadingVisualProps & PropsWithChildren) {\n  const {variant} = useListViewVariant()\n  const {setStatus} = useListItemStatus()\n  const {setHasNewActivity} = useListItemNewActivity()\n  const trimmedDescription = description?.trim()\n\n  useEffect(() => {\n    setHasNewActivity(newActivity)\n  }, [newActivity, setHasNewActivity])\n\n  useEffect(() => {\n    if (trimmedDescription) setStatus(trimmedDescription)\n  }, [setStatus, trimmedDescription])\n\n  return (\n    <div\n      className={clsx(\n        styles.outer,\n        variant === 'default' && styles.defaultVariant,\n        newActivity && styles.hasNewActivity,\n      )}\n      {...props}\n    >\n      <div>\n        <div {...testIdProps('list-view-leading-visual')} className={styles.inner}>\n          {icon && <Octicon aria-label=\"\" icon={icon} color={color} />}\n          {children}\n          {trimmedDescription && (\n            <span className=\"sr-only\" {...testIdProps('leading-visual-text-description')}>\n              {trimmedDescription}\n            </span>\n          )}\n        </div>\n      </div>\n      {newActivity && <ListItemUnreadIndicator />}\n    </div>\n  )\n}\n\ntry{ ListItemLeadingVisual.displayName ||= 'ListItemLeadingVisual' } catch {}","import {announceFromElement} from '@github-ui/aria-live'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {Box} from '@primer/react'\nimport {clsx} from 'clsx'\nimport type {ReactElement, ReactNode, Suspense} from 'react'\nimport {isValidElement, useCallback, useEffect, useRef} from 'react'\n\nimport densityStyles from '../density-gap.module.css'\nimport {useNextHeaderTag} from '../hooks/use-next-header-tag'\nimport type {PrefixedStylableProps, StylableProps} from '../types'\nimport {ListViewActionBar, type ListViewActionBarProps} from './ActionBar'\nimport {useListViewId} from './IdContext'\nimport styles from './Metadata.module.css'\nimport type {ListViewSectionFilterLinks} from './SectionFilterLink'\nimport {ListViewSectionFilters} from './SectionFilters'\nimport {ListViewSelectAllCheckbox} from './SelectAllCheckbox'\nimport {useListViewSelection} from './SelectionContext'\nimport {useListViewTitle} from './TitleContext'\n\nexport type ListViewMetadataProps = {\n  /**\n   * The rendered title of the list or information regarding its contents.\n   */\n  title?: string | ReactNode\n  /**\n   * Links for applying any categorical, mutually exclusive section filters for the content of the ListView.\n   */\n  sectionFilters?: ListViewSectionFilterLinks | ReactElement<typeof Suspense>\n  /**\n   * Used for assistive announcements that are reflective of the visual updates to the list container a sighted user\n   * will experience when using the list. Defaults to no announcement. Visually hidden, for screenreaders only.\n   */\n  assistiveAnnouncement?: string\n  /**\n   * Callback for when the checkbox for selecting and deselecting all list items is toggled.\n   */\n  onToggleSelectAll?: (isSelectAllChecked: boolean) => void\n  /**\n   * Optional additional actions to show. Will not fall into an overflow dropdown menu to accommodate small screen\n   * widths.\n   */\n  children?: ReactNode\n} & StylableProps &\n  PrefixedStylableProps<'actions'> &\n  ListViewActionBarProps\n\nexport const ListViewMetadata = ({\n  title,\n  assistiveAnnouncement,\n  sectionFilters,\n  children,\n  style,\n  sx,\n  className,\n  actionsStyle,\n  actionsSx,\n  actionsClassName,\n  onToggleSelectAll,\n  ...actionBarProps\n}: ListViewMetadataProps) => {\n  const {idPrefix} = useListViewId()\n  const {anyItemsSelected} = useListViewSelection()\n  const {setHasMetadataTitle} = useListViewTitle()\n  const TitleTag = useNextHeaderTag('list-view-metadata')\n  const announceRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    setHasMetadataTitle(!!title)\n  })\n\n  useEffect(() => {\n    if (announceRef.current) announceFromElement(announceRef.current)\n  }, [assistiveAnnouncement])\n\n  const ListViewAnnouncements = () => {\n    return (\n      <div\n        id={`${idPrefix}-list-view-announcements`}\n        role=\"status\"\n        aria-live=\"polite\"\n        aria-atomic=\"true\"\n        className=\"sr-only\"\n        ref={announceRef}\n        {...testIdProps('list-view-announcement-container')}\n      >\n        {assistiveAnnouncement}\n      </div>\n    )\n  }\n\n  const ListFilters = useCallback(() => {\n    if (!sectionFilters) return null\n\n    if (Array.isArray(sectionFilters)) {\n      return <ListViewSectionFilters links={sectionFilters} />\n    } else if (isValidElement(sectionFilters)) {\n      return <>{sectionFilters}</>\n    }\n    return null\n  }, [sectionFilters])\n\n  return (\n    <Box\n      id={`${idPrefix}-list-view-metadata`}\n      className={clsx(styles.container, className, anyItemsSelected && densityStyles.spacious)}\n      style={style}\n      sx={sx}\n      {...testIdProps('list-view-metadata')}\n    >\n      <ListViewSelectAllCheckbox\n        onToggle={(isSelectAllChecked: boolean) => {\n          if (onToggleSelectAll) onToggleSelectAll(isSelectAllChecked)\n        }}\n      />\n\n      <ListFilters />\n\n      {title && !anyItemsSelected && (\n        <TitleTag className={styles.heading} {...testIdProps('list-view-header-title')}>\n          {title}\n        </TitleTag>\n      )}\n\n      <ListViewActionBar style={actionsStyle} sx={actionsSx} className={actionsClassName} {...actionBarProps}>\n        {children}\n      </ListViewActionBar>\n\n      {assistiveAnnouncement && <ListViewAnnouncements />}\n    </Box>\n  )\n}\n\ntry{ ListViewMetadata.displayName ||= 'ListViewMetadata' } catch {}\ntry{ TitleTag.displayName ||= 'TitleTag' } catch {}\ntry{ ListViewAnnouncements.displayName ||= 'ListViewAnnouncements' } catch {}\ntry{ ListFilters.displayName ||= 'ListFilters' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"normal\":\"density-gap-module__normal--WYrBD\",\"none\":\"density-gap-module__none--WMH6V\",\"condensed\":\"density-gap-module__condensed--seZl0\",\"spacious\":\"density-gap-module__spacious--Nnm9Z\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ActionBar-module__container--SjALR\"};","import {ActionBar as GitHubUiActionBar, type ActionBarProps as GitHubUiActionBarProps} from '@github-ui/action-bar'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {Box} from '@primer/react'\nimport {clsx} from 'clsx'\nimport type {ReactElement} from 'react'\n\nimport densityStyles from '../density-gap.module.css'\nimport type {StylableProps} from '../types'\nimport styles from './ActionBar.module.css'\nimport type {ListViewDensityToggle} from './DensityToggle'\n\n// Require actionsLabel if actions are provided, and vice versa.\ntype ListViewActionBar =\n  | {\n      /**\n       * Description of the controls found in the action bar, e.g., \"Issue actions\", \"Markdown formatting tools\".\n       * Will be used in a hidden label for accessibility purposes. Defaults to the title for the ListView.\n       */\n      actionsLabel: GitHubUiActionBarProps['label']\n      /**\n       * The controls to show in the action bar. These will move into a dropdown menu when the screen isn't big enough to\n       * fit them side by side.\n       */\n      actions: GitHubUiActionBarProps['actions']\n    }\n  | {actionsLabel?: undefined; actions?: undefined}\n\nexport type ListViewActionBarProps = ListViewActionBar & {\n  /**\n   * Include a toggle to switch between Comfortable and Condensed view modes.\n   */\n  densityToggle?: ReactElement<typeof ListViewDensityToggle>\n} & StylableProps &\n  Omit<GitHubUiActionBarProps, 'actions' | 'label'>\n\nexport const ListViewActionBar = ({\n  actions,\n  style,\n  sx,\n  className,\n  children,\n  density,\n  actionsLabel,\n  densityToggle,\n}: ListViewActionBarProps) => {\n  const nonCollapsibleActions = (\n    <>\n      {children}\n      {densityToggle}\n    </>\n  )\n\n  if (actions && actions.length > 0) {\n    return (\n      <GitHubUiActionBar\n        label={actionsLabel?.trim()}\n        actions={actions}\n        density={density}\n        {...testIdProps('list-view-actions')}\n        style={style}\n        sx={sx}\n        className={className}\n      >\n        {nonCollapsibleActions}\n      </GitHubUiActionBar>\n    )\n  }\n\n  return (\n    <Box\n      {...testIdProps('list-view-actions')}\n      style={style}\n      sx={sx}\n      className={clsx(styles.container, density && densityStyles[density], className)}\n    >\n      {nonCollapsibleActions}\n    </Box>\n  )\n}\n\ntry{ ListViewActionBar.displayName ||= 'ListViewActionBar' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Metadata-module__container--tL6Q3\",\"heading\":\"Metadata-module__heading--HAxII\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SectionFilters-module__container--MmIUF\"};","import {testIdProps} from '@github-ui/test-id-props'\nimport {clsx} from 'clsx'\n\nimport type {ListViewSectionFilterLinks} from './SectionFilterLink'\nimport styles from './SectionFilters.module.css'\n\ntype ListViewSectionFiltersProps = {\n  links: ListViewSectionFilterLinks\n}\n\nexport const ListViewSectionFilters = ({links}: ListViewSectionFiltersProps) => {\n  if (links.length < 1) return null\n\n  return (\n    <div {...testIdProps('list-view-section-filters')}>\n      <ul className={clsx('list-style-none', styles.container)}>\n        {links.map((sectionFilterLink, index) => (\n          <li key={`section-filter-${index}`} {...testIdProps(`list-view-section-filter-${index}`)}>\n            {sectionFilterLink}\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\ntry{ ListViewSectionFilters.displayName ||= 'ListViewSectionFilters' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SelectAllCheckbox-module__container--FJDtV\",\"formControlContainer\":\"SelectAllCheckbox-module__formControlContainer--JTzPI\",\"count\":\"SelectAllCheckbox-module__count--xEF8c\"};","import {announceFromElement} from '@github-ui/aria-live'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {Box, Checkbox, FormControl} from '@primer/react'\nimport {clsx} from 'clsx'\nimport type {KeyboardEvent} from 'react'\nimport {useCallback, useEffect, useId, useMemo, useRef} from 'react'\n\nimport type {StylableProps} from '../types'\nimport {useListViewMultiPageSelection} from './MultiPageSelectionContext'\nimport styles from './SelectAllCheckbox.module.css'\nimport {useListViewSelection} from './SelectionContext'\nimport {useListViewTitle} from './TitleContext'\n\ntype ListViewSelectAllCheckboxProps = {onToggle?: (value: boolean) => void; className?: string} & StylableProps\n\nexport const ListViewSelectAllCheckbox = ({onToggle, style, className, sx}: ListViewSelectAllCheckboxProps) => {\n  const {title} = useListViewTitle()\n  const {\n    isSelectable,\n    selectedCount,\n    totalCount,\n    countOnPage,\n    isSelectAllChecked,\n    anyItemsSelected,\n    singularUnits,\n    pluralUnits,\n  } = useListViewSelection()\n  const {multiPageSelectionAllowed} = useListViewMultiPageSelection()\n  const idPrefix = useId()\n  const checkboxRef = useRef<HTMLInputElement>(null)\n  const srRef = useRef<HTMLSpanElement>(null)\n  const notAllItemsSelected = useMemo(() => {\n    if (multiPageSelectionAllowed && typeof totalCount === 'number') {\n      return selectedCount < Math.max(totalCount, countOnPage)\n    }\n    return selectedCount < countOnPage\n  }, [countOnPage, multiPageSelectionAllowed, selectedCount, totalCount])\n  const isIndeterminate = anyItemsSelected && notAllItemsSelected\n  const units = selectedCount === 1 ? singularUnits : pluralUnits\n  const suffix = typeof totalCount === 'number' ? `of ${totalCount} selected` : 'selected'\n  const srString = `${selectedCount} ${units} ${suffix}`\n\n  const handleBulkSelectToggle = useCallback(() => {\n    if (!onToggle) return\n\n    if (isIndeterminate) {\n      onToggle(false)\n    } else {\n      onToggle(!isSelectAllChecked)\n    }\n  }, [isIndeterminate, isSelectAllChecked, onToggle])\n\n  useEffect(() => {\n    srRef.current && announceFromElement(srRef.current)\n  }, [srRef, srString])\n\n  if (!isSelectable) return null\n\n  const checkboxId = `${idPrefix}-list-view-select-all`\n\n  const onKeyDown = (event: KeyboardEvent<HTMLInputElement>) => {\n    // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault()\n      handleBulkSelectToggle()\n    }\n  }\n\n  return (\n    <Box\n      style={style}\n      sx={sx}\n      className={clsx(styles.container, className)}\n      {...testIdProps('list-view-select-all-container')}\n      id={`${idPrefix}-list-view-select-all-container`}\n    >\n      <div className={styles.formControlContainer}>\n        <FormControl id={checkboxId}>\n          <Checkbox\n            onChange={handleBulkSelectToggle}\n            value=\"default\"\n            checked={isSelectAllChecked}\n            indeterminate={isIndeterminate}\n            onKeyDown={onKeyDown}\n            tabIndex={0}\n            ref={checkboxRef}\n            {...testIdProps('select-all-checkbox')}\n          />\n          <FormControl.Label visuallyHidden {...testIdProps('select-all-label')}>\n            Select all {pluralUnits}: {title}\n          </FormControl.Label>\n        </FormControl>\n      </div>\n      <p\n        className={clsx(styles.count, anyItemsSelected ? undefined : 'sr-only')}\n        {...testIdProps('select-all-selected-count')}\n      >\n        <span\n          aria-hidden=\"true\"\n          className={anyItemsSelected ? undefined : 'sr-only'}\n          {...testIdProps('select-all-selected-count-without-units')}\n        >\n          {selectedCount} {suffix}{' '}\n        </span>\n        <span className=\"sr-only\" ref={srRef} {...testIdProps('sr-content')}>\n          {srString}\n        </span>\n      </p>\n    </Box>\n  )\n}\n\ntry{ ListViewSelectAllCheckbox.displayName ||= 'ListViewSelectAllCheckbox' } catch {}"],"names":["node","hash","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","BranchPickerRepositoryBranchesGraphqlQuery","BranchPickerRepositoryBranchRefsFragment","BranchPickerRepositoryBranchesFragment","BranchPickerRefFragment","BranchPickerSearchBranches","BranchPickerSearchBranchesFragment","BranchPickerPlaceholder","currentBranch","Button","leadingVisual","GitBranchIcon","trailingVisual","TriangleDownIcon","disabled","LABELS","selectBranch","BranchPickerInternal","initialBranch","defaultBranchId","branchesKey","owner","repo","onSelect","title","ariaLabelledBy","ariaDescribedBy","searchResultsFragment","setSearchResultsFragment","useState","searchResults","setSearchResults","undefined","searchLoading","setSearchLoading","filter","setFilter","addToast","useToastContext","searchedBranchesData","useFragment","suggestedBranches","useMemo","repository","refs","edges","flatMap","edge","readInlineData","useEffect","branchesData","branches","repoBranches","branch","id","unshift","items","environment","useRelayEnvironment","fetchSearchData","useCallback","query","fetchQuery","name","first","subscribe","next","data","error","type","message","ERRORS","couldNotSearchAssignees","debounceFetchSearchData","useDebounce","nextValue","VALUES","pickerDebounceTime","filterItems","trimmedFilter","value","trim","BranchPickerBase","initialSelectedItem","onFilter","onSelectionChange","loading","aria-labelledby","aria-describedby","getItemKey","convertToItemProps","children","span","source","Octicon","icon","size","branchPickerRef","useRef","renderAnchor","anchorProps","aria-label","ref","Box","sx","display","flexDirection","flexWrap","gap","ItemPicker","initialSelectedItems","placeholderText","selectionVariant","selectPanelRef","enforceAtleastOneSelected","resultListAriaLabel","width","displayName","ListItemUnreadIndicator","div","className","styles","container","testIdProps","ListItemLeadingVisual","color","description","newActivity","props","variant","useListViewVariant","setStatus","useListItemStatus","setHasNewActivity","useListItemNewActivity","trimmedDescription","clsx","outer","defaultVariant","hasNewActivity","inner","TitleTag","ListViewAnnouncements","ListFilters","ListViewActionBar","actions","style","density","actionsLabel","densityToggle","nonCollapsibleActions","length","GitHubUiActionBar","label","densityStyles","ListViewSectionFilters","links","ul","map","sectionFilterLink","index","li","ListViewSelectAllCheckbox","onToggle","useListViewTitle","isSelectable","selectedCount","totalCount","countOnPage","isSelectAllChecked","anyItemsSelected","singularUnits","pluralUnits","useListViewSelection","multiPageSelectionAllowed","useListViewMultiPageSelection","idPrefix","useId","checkboxRef","srRef","notAllItemsSelected","Math","max","isIndeterminate","units","suffix","srString","handleBulkSelectToggle","current","announceFromElement","checkboxId","formControlContainer","FormControl","Checkbox","onChange","checked","indeterminate","onKeyDown","event","key","preventDefault","tabIndex","Label","visuallyHidden","p","count","aria-hidden","ListViewMetadata","assistiveAnnouncement","sectionFilters","actionsStyle","actionsSx","actionsClassName","onToggleSelectAll","actionBarProps","useListViewId","setHasMetadataTitle","useNextHeaderTag","announceRef","Array","isArray","isValidElement","spacious","heading","role","aria-live","aria-atomic"],"sourceRoot":""}