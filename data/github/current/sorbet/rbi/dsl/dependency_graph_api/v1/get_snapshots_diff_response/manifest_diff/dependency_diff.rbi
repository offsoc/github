# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `DependencyGraphAPI::V1::GetSnapshotsDiffResponse::ManifestDiff::DependencyDiff`.
# Please instead update this file by running `bin/tapioca dsl DependencyGraphAPI::V1::GetSnapshotsDiffResponse::ManifestDiff::DependencyDiff`.

class DependencyGraphAPI::V1::GetSnapshotsDiffResponse::ManifestDiff::DependencyDiff
  sig do
    params(
      base_purl: T.nilable(String),
      base_version: T.nilable(String),
      change_type: T.nilable(T.any(Symbol, Integer)),
      dependent_count: T.nilable(Integer),
      github_repository_id: T.nilable(Integer),
      github_vulnerability_range_ids: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer])),
      license: T.nilable(String),
      name: T.nilable(String),
      published_at: T.nilable(Google::Protobuf::Timestamp),
      repo_nwo: T.nilable(String),
      scope: T.nilable(T.any(Symbol, Integer)),
      target_purl: T.nilable(String),
      target_version: T.nilable(String),
      unpublished_at: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(base_purl: nil, base_version: nil, change_type: nil, dependent_count: nil, github_repository_id: nil, github_vulnerability_range_ids: T.unsafe(nil), license: nil, name: nil, published_at: nil, repo_nwo: nil, scope: nil, target_purl: nil, target_version: nil, unpublished_at: nil); end

  sig { returns(String) }
  def base_purl; end

  sig { params(value: String).void }
  def base_purl=(value); end

  sig { returns(String) }
  def base_version; end

  sig { params(value: String).void }
  def base_version=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def change_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def change_type=(value); end

  sig { void }
  def clear_base_purl; end

  sig { void }
  def clear_base_version; end

  sig { void }
  def clear_change_type; end

  sig { void }
  def clear_dependent_count; end

  sig { void }
  def clear_github_repository_id; end

  sig { void }
  def clear_github_vulnerability_range_ids; end

  sig { void }
  def clear_license; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_published_at; end

  sig { void }
  def clear_repo_nwo; end

  sig { void }
  def clear_scope; end

  sig { void }
  def clear_target_purl; end

  sig { void }
  def clear_target_version; end

  sig { void }
  def clear_unpublished_at; end

  sig { returns(Integer) }
  def dependent_count; end

  sig { params(value: Integer).void }
  def dependent_count=(value); end

  sig { returns(Integer) }
  def github_repository_id; end

  sig { params(value: Integer).void }
  def github_repository_id=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def github_vulnerability_range_ids; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def github_vulnerability_range_ids=(value); end

  sig { returns(String) }
  def license; end

  sig { params(value: String).void }
  def license=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def published_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def published_at=(value); end

  sig { returns(String) }
  def repo_nwo; end

  sig { params(value: String).void }
  def repo_nwo=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def scope; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def scope=(value); end

  sig { returns(String) }
  def target_purl; end

  sig { params(value: String).void }
  def target_purl=(value); end

  sig { returns(String) }
  def target_version; end

  sig { params(value: String).void }
  def target_version=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def unpublished_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def unpublished_at=(value); end
end
