{"version":3,"file":"chunk-app_components_actions_variables_variables-input-element_ts-xxxxxxxxxxxx.js","mappings":"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","sources":["app/components/actions/variables/variables-input-element.ts"],"sourcesContent":["import {attr, controller, target} from '@github/catalyst'\n\n@controller\nclass VariablesInputElement extends HTMLElement {\n  static readonly NAME_REGEX = '^[A-Za-z_][A-Za-z0-9_]*$'\n  static readonly GITHUB_REGEX = '^[gG][iI][tT][hH][uU][bB]_'\n  static readonly FIRST_CHAR_REGEX = '^[A-Za-z_]'\n\n  static readonly FIRST_CHAR_RULES = 'Variable name can only start with a letter or underscore.'\n  static readonly GITHUB_PREFIX_RULE = 'Variable name cannot start with \"GITHUB_\" prefix.'\n  static readonly NAME_RULE =\n    'Variable name can only contain alphanumeric characters.\\n Special characters and spaces are not allowed.'\n  static readonly DEFAULT_CREATE_ERROR = 'Unable to add variable. Please try again.'\n  static readonly DEFAULT_UPDATE_ERROR = 'Unable to update variable. Please try again.'\n  static readonly ADD_BUTTON_TEXT = 'Add variable'\n  static readonly ADD_BUTTON_DISABLED_TEXT = 'Adding...'\n  static readonly UPDATE_BUTTON_TEXT = 'Save variable'\n  static readonly UPDATE_BUTTON_DISABLED_TEXT = 'Saving...'\n  static readonly ADD_OPERATION = 'add'\n  static readonly UPDATE_OPERATION = 'update'\n\n  @target name: HTMLInputElement\n  @target validationError: HTMLSpanElement\n  @target validationMessage: HTMLDivElement\n  @target submitButton: HTMLButtonElement\n  @target form: HTMLFormElement\n\n  @attr operation: string\n\n  nameInput() {\n    const value = this.name.value\n    if (value === '') {\n      this.hideValidationError()\n      return\n    }\n\n    const startsWithGithub = value.match(VariablesInputElement.GITHUB_REGEX)\n    if (startsWithGithub) {\n      this.setNameValidationError(VariablesInputElement.GITHUB_PREFIX_RULE)\n      return\n    } else {\n      this.hideValidationError()\n    }\n\n    const startsWithValidChar = value.match(VariablesInputElement.FIRST_CHAR_REGEX)\n    if (startsWithValidChar) {\n      this.hideValidationError()\n    } else {\n      this.setNameValidationError(VariablesInputElement.FIRST_CHAR_RULES)\n      return\n    }\n\n    const validName = value.match(VariablesInputElement.NAME_REGEX)\n    if (validName) {\n      this.hideValidationError()\n    } else {\n      this.setNameValidationError(VariablesInputElement.NAME_RULE)\n    }\n  }\n\n  setNameValidationError(error: string) {\n    this.name.setCustomValidity(error)\n    this.name.style.borderColor = 'var(--borderColor-danger-emphasis, var(--color-danger-emphasis))'\n    this.showValidationMessage(error)\n  }\n\n  showValidationMessage(error: string) {\n    this.validationError.textContent = error\n    this.validationMessage.hidden = false\n  }\n\n  hideValidationMessage() {\n    this.validationMessage.hidden = true\n  }\n\n  hideValidationError() {\n    this.name.setCustomValidity('')\n    this.name.style.borderColor = ''\n    this.hideValidationMessage()\n    this.submitDisabled = false\n  }\n\n  get submitDisabled(): boolean {\n    return this.submitButton.hasAttribute('aria-disabled')\n  }\n\n  set submitDisabled(value: boolean) {\n    if (value) {\n      this.submitButton.setAttribute('aria-disabled', 'true')\n    } else {\n      this.submitButton.removeAttribute('aria-disabled')\n    }\n    this.submitButton.classList.toggle('disabled', value)\n  }\n\n  set submitButtonText(value: string) {\n    this.submitButton.textContent = value\n  }\n\n  private async submit(event: Event) {\n    event.preventDefault()\n    if (this.submitDisabled) return\n    this.hideValidationMessage()\n\n    this.submitDisabled = true\n    if (this.operation === VariablesInputElement.ADD_OPERATION) {\n      this.submitButtonText = VariablesInputElement.ADD_BUTTON_DISABLED_TEXT\n    } else {\n      this.submitButtonText = VariablesInputElement.UPDATE_BUTTON_DISABLED_TEXT\n    }\n\n    try {\n      const response = await fetch(this.form.action, {\n        method: 'POST',\n        body: new FormData(this.form),\n      })\n\n      if (response.ok) {\n        window.location.replace(response.url)\n      } else {\n        const data = await response.json()\n        const status = data.status\n        if (status === 409) {\n          this.setNameValidationError(data.error)\n        } else {\n          this.showValidationMessage(data.error)\n        }\n\n        // Do not enable submit button incase variable already exists or the variable limit has been reached\n        if (status !== 429 && status !== 409) {\n          this.submitDisabled = false\n        }\n      }\n    } catch (error) {\n      this.showValidationMessage(VariablesInputElement.DEFAULT_CREATE_ERROR)\n      this.submitDisabled = false\n    }\n\n    if (this.operation === VariablesInputElement.ADD_OPERATION) {\n      this.submitButtonText = VariablesInputElement.ADD_BUTTON_TEXT\n    } else {\n      this.submitButtonText = VariablesInputElement.UPDATE_BUTTON_TEXT\n    }\n  }\n}\n"],"names":["VariablesInputElement","HTMLElement","nameInput","value","name","hideValidationError","match","GITHUB_REGEX","setNameValidationError","GITHUB_PREFIX_RULE","FIRST_CHAR_REGEX","FIRST_CHAR_RULES","NAME_REGEX","NAME_RULE","error","setCustomValidity","style","borderColor","showValidationMessage","validationError","textContent","validationMessage","hidden","hideValidationMessage","submitDisabled","submitButton","hasAttribute","setAttribute","removeAttribute","classList","toggle","submitButtonText","submit","event","preventDefault","operation","ADD_OPERATION","ADD_BUTTON_DISABLED_TEXT","UPDATE_BUTTON_DISABLED_TEXT","response","fetch","form","action","method","body","FormData","ok","window","location","replace","url","data","json","status","DEFAULT_CREATE_ERROR","ADD_BUTTON_TEXT","UPDATE_BUTTON_TEXT","DEFAULT_UPDATE_ERROR","UPDATE_OPERATION","target","attr","controller"],"sourceRoot":""}