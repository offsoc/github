<div class="org-repos repo-list">
  <% if filtering? %>
    <div class="TableObject pb-3">
      <div class="TableObject-item TableObject-item--primary v-align-top">
        <span data-autosearch-results>
          <strong><%= number_with_delimiter total_entries %></strong>
          <%= "result".pluralize(total_entries) %>
          for
          <% if type_filter.present? %>
            <strong><%= type_filter_description(type_filter) %></strong>
          <% end %>
          repositories
          <% if phrase.present? %>
            matching
            <strong><%= phrase %></strong>
          <% end %>
          <% if language.present? %>
            written in <strong><%= selected_language %></strong>
          <% end %>
          sorted by <strong><%= sort_order_description(sort_order: sort_order) %></strong>
        </span>
      </div>
      <div class="TableObject-item text-right v-align-top">
        <%= link_to user_path(organization, params: clear_filter_params),
                :class => "issues-reset-query text-normal text-right d-inline-block ml-3" do %>
          <%= primer_octicon(:x, mt: 1, classes: "issues-reset-query-icon") %>
          Clear filter
        <% end %>
      </div>
    </div>
  <% end %>
  <% if filtering? && results.count == 0 %>
    <%= render Primer::Beta::Blankslate.new do |c| %>
      <% c.with_visual_icon(icon: "repo") %>

      <% c.with_heading(tag: :h2) do %>
        No repositories matched your search.
      <% end %>
    <% end %>
  <% else %>
    <span class="sr-only" data-autosearch-results>Showing <%= results.count %> of <%= total_entries %> repositories</span>
    <%= render(Primer::Beta::BorderBox.new) do |component| %>
      <% results.each do |repository| %>
        <% component.with_row do %>
          <%= render(Profiles::Organization::Overview::RepositoryListItemComponent.new(
              repository: repository,
              organization: organization,
              responsive: true,
              is_registry_enabled: package_registry_enabled?,
              pull_request_count: pull_request_count_for(repository.id),
              issue_count: issue_count_for(repository.id),
              network_count: network_count_for(repository),
            )) %>
        <% end %>
      <% end %>
      <% if total_entries > REPOSITORY_MAX_RESULTS %>
        <% component.with_footer(bg: :subtle, text_align: :center) do %>
          <%= render(Primer::Beta::Link.new(
            href: org_repositories_path(organization, q: phrase, type: type_filter, language: language, sort: sort_order),
            muted: true,
            font_weight: :bold,
            data: list_analytics_attributes("view_all_repositories"),
          ).with_content("View all repositories")) %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
</div>
