{"version":3,"file":"chunk-ui_packages_aria-live_aria-live_ts-ui_packages_issue-create_dialog_IssueCreateDialogElement_t-686b34-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/aria-live/aria-live.ts","ui/packages/hydro-analytics/hydro-analytics.ts","ui/packages/issue-create/dialog/IssueCreateDialogWebComponent.tsx","ui/packages/issue-create/dialog/IssueCreateDialogElement.ts","ui/packages/react-core/react-partial-anchor.ts","ui/packages/react-core/use-app-payload.ts","ui/packages/safe-storage/session-storage.ts","ui/packages/soft-nav/utils.ts","ui/packages/test-id-props/test-id-props.ts","ui/packages/use-analytics/use-analytics.ts","ui/packages/use-layout-effect/use-layout-effect.ts","ui/packages/react-core/ErrorBoundary.tsx","ui/packages/react-core/ErrorPage.tsx","ui/packages/react-core/PartialRouter.tsx","ui/packages/react-core/PartialEntry.tsx","ui/packages/safe-html/SafeHTML.tsx"],"sourcesContent":["import {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {\n  announce as liveRegionAnnounce,\n  announceFromElement as liveRegionAnnounceFromElement,\n} from '@primer/live-region-element'\n\nexport interface ElementWithAriaNotify extends Element {\n  ariaNotify: (\n    message: string,\n    options?: {interrupt?: 'none' | 'pending' | 'all'; priority?: 'none' | 'important'},\n  ) => void\n}\n\n/**\n * Troubleshooting guide for aria-live regions available on the Hub\n * - https://thehub.github.com/epd/engineering/dev-practicals/frontend/accessibility/readiness-routine/screenreaders/live-regions-and-focus-management-techniques/#why-isnt-my-live-region-working-as-i-expect\n */\n\n// Announce an element's text to the screen reader.\nexport function announceFromElement(el: HTMLElement, options?: {assertive?: boolean; element?: HTMLElement}) {\n  if (isFeatureEnabled('arianotify_comprehensive_migration')) {\n    announce(getTextContent(el), {...options, element: options?.element ?? el})\n  } else if (isFeatureEnabled('primer_live_region_element') && options?.element === undefined) {\n    liveRegionAnnounceFromElement(el, {\n      politeness: options?.assertive ? 'assertive' : 'polite',\n    })\n  } else {\n    announce(getTextContent(el), options)\n  }\n}\n\n// Announce message update to screen reader.\n// Note: Use caution when using this function while a dialog is active.\n// If the message is updated while the dialog is open, the screen reader may not announce the live region.\n// For more information, view the document on dialog and live region support: https://github.com/github/accessibility/blob/main/docs/dialog-live-region-support.md\nexport function announce(message: string, options?: {assertive?: boolean; element?: HTMLElement}) {\n  const {assertive, element} = options ?? {}\n\n  if (isFeatureEnabled('arianotify_comprehensive_migration') && 'ariaNotify' in Element.prototype) {\n    ;((element || document.body) as Element as ElementWithAriaNotify).ariaNotify(message, {\n      interrupt: options?.assertive ? 'all' : 'none',\n    })\n  } else if (isFeatureEnabled('primer_live_region_element') && element === undefined) {\n    liveRegionAnnounce(message, {\n      politeness: assertive ? 'assertive' : 'polite',\n    })\n  } else {\n    setContainerContent(message, assertive, element)\n  }\n}\n\n// Set aria-live container to message.\nfunction setContainerContent(message: string, assertive?: boolean, element?: HTMLElement) {\n  const getQuerySelector = () => {\n    return assertive ? '#js-global-screen-reader-notice-assertive' : '#js-global-screen-reader-notice'\n  }\n  const container = element ?? ssrSafeDocument?.querySelector(getQuerySelector())\n  if (!container) return\n  if (container.textContent === message) {\n    /* This is a hack due to the way the aria live API works.\n    A screen reader will not read a live region again\n    if the text is the same. Adding a space character tells\n    the browser that the live region has updated,\n    which will cause it to read again, but with no audible difference. */\n    container.textContent = `${message}\\u00A0`\n  } else {\n    container.textContent = message\n  }\n}\n\n// Gets the trimmed text content of an element.\nfunction getTextContent(el: HTMLElement): string {\n  // innerText does not contain hidden text\n  /* eslint-disable-next-line github/no-innerText */\n  return (el.getAttribute('aria-label') || el.innerText || '').trim()\n}\n","import {AnalyticsClient, getOptionsFromMeta} from '@github/hydro-analytics-client'\nimport type {Context} from '@github/hydro-analytics-client'\nimport safeStorage from '@github-ui/safe-storage'\nimport {isStaff} from '@github-ui/stats'\nconst {getItem} = safeStorage('localStorage')\n\ndeclare const process: {\n  env: {\n    NODE_ENV: string\n  }\n}\n\nconst dimensionPrefix = 'dimension_'\nlet hydroAnalyticsClient: AnalyticsClient | undefined\n\nconst MARKETING_PARAMS = ['utm_source', 'utm_medium', 'utm_campaign', 'utm_term', 'utm_content', 'scid']\n\ntry {\n  const options = getOptionsFromMeta('octolytics')\n\n  // Remove the base context because meta tags can change as the user navigates with Turbo\n  // These will be folded in for each event & page view\n  delete options.baseContext\n\n  hydroAnalyticsClient = new AnalyticsClient(options)\n} catch (_) {\n  // Failed to get options from meta tags.  This most likely means analytics are disabled.\n}\n\nfunction extendBaseContext(context?: Context) {\n  const baseContext = getOptionsFromMeta('octolytics').baseContext || {}\n\n  if (baseContext) {\n    delete baseContext.app_id\n    delete baseContext.event_url\n    delete baseContext.host\n\n    for (const [key, value] of Object.entries(baseContext)) {\n      // some octolytics meta tags are prefixed with dimension-, which we don't need with the new hydro-analytics-client\n      if (key.startsWith(dimensionPrefix)) {\n        baseContext[key.replace(dimensionPrefix, '')] = value\n        delete baseContext[key]\n      }\n    }\n  }\n\n  const visitorMeta = document.querySelector<HTMLMetaElement>('meta[name=visitor-payload]')\n  if (visitorMeta) {\n    const visitorHash = JSON.parse(atob(visitorMeta.content))\n    Object.assign(baseContext, visitorHash)\n  }\n\n  const urlParams = new URLSearchParams(window.location.search)\n  for (const [key, value] of urlParams) {\n    if (MARKETING_PARAMS.includes(key.toLowerCase())) {\n      baseContext[key] = value\n    }\n  }\n\n  // Include additional context from the page\n  baseContext.staff = isStaff().toString()\n\n  return Object.assign(baseContext, context)\n}\n\nexport function sendPageView(context?: Context) {\n  hydroAnalyticsClient?.sendPageView(extendBaseContext(context))\n}\n\nexport function sendEvent(type: string, context: Record<string, string | number | boolean | undefined | null> = {}) {\n  const service = document.head?.querySelector<HTMLMetaElement>('meta[name=\"current-catalog-service\"]')?.content\n\n  const cleanContext: Context = service ? {service} : {}\n\n  for (const [key, value] of Object.entries(context)) {\n    if (value !== undefined && value !== null) {\n      cleanContext[key] = `${value}`\n    }\n  }\n\n  if (hydroAnalyticsClient) {\n    const typeWithFallback = type || 'unknown'\n    const fullContext = extendBaseContext(cleanContext)\n    hydroAnalyticsClient.sendEvent(typeWithFallback, extendBaseContext(cleanContext))\n\n    if (process.env.NODE_ENV === 'development') {\n      debugSendEvent(typeWithFallback, fullContext)\n    }\n  }\n}\n\nexport function stringifyObjectValues(obj: object) {\n  return Object.fromEntries(Object.entries(obj).map(([k, v]) => [k, JSON.stringify(v)]))\n}\n\nfunction debugSendEvent(type: string, context: Context) {\n  if (getItem('hydro-debug.send-event') === 'true') {\n    // eslint-disable-next-line no-console\n    console.group('[hydro-debug.send-event]')\n    // eslint-disable-next-line no-console\n    console.log({type, context})\n    // eslint-disable-next-line no-console\n    console.groupEnd()\n  }\n}\n","import {useEffect, useMemo, useState} from 'react'\nimport {PartialEntry} from '@github-ui/react-core/partial-entry'\nimport {CreateIssueDialogEntry} from './CreateIssueDialogEntry'\nimport {VALUES} from '../constants/values'\nimport {noop} from '@github-ui/noop'\nimport {RelayEnvironmentProvider} from 'react-relay'\nimport {relayEnvironmentWithMissingFieldHandlerForNode} from '@github-ui/relay-environment'\nimport {getSafeConfig} from '../utils/option-config'\nimport {AnalyticsProvider} from '@github-ui/analytics-provider'\n\nexport function GetElement(props: CreateIssueModalProps) {\n  return (\n    <PartialEntry\n      partialName=\"issue-create\"\n      embeddedData={{\n        props,\n      }}\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      Component={WrapperComponent as any}\n      wasServerRendered={false}\n    />\n  )\n}\n\nconst environment = relayEnvironmentWithMissingFieldHandlerForNode()\n\nfunction WrapperComponent(props: CreateIssueModalProps) {\n  return (\n    <RelayEnvironmentProvider environment={environment}>\n      <AnalyticsProvider\n        appName={props.analyticsAppName ?? 'UNKNOWN'}\n        category={props.analyticsNamespace ?? 'issue-create-web-component'}\n        metadata={{}}\n      >\n        <CreateIssueModal {...props} />\n      </AnalyticsProvider>\n    </RelayEnvironmentProvider>\n  )\n}\n\nexport type CreateIssueModalProps = {\n  owner?: string\n  repository?: string\n  analyticsAppName?: string\n  analyticsNamespace?: string\n}\n\nexport function CreateIssueModal({owner, repository}: CreateIssueModalProps) {\n  const [isVisible, setIsVisible] = useState(true)\n\n  useEffect(() => {\n    setIsVisible(true)\n  }, [])\n\n  const repo = useMemo(\n    () =>\n      owner && repository\n        ? {\n            repository: {\n              owner,\n              name: repository,\n            },\n          }\n        : undefined,\n    [owner, repository],\n  )\n\n  if (!isVisible) return null\n\n  // TODO: setup real value for the config below\n  return (\n    <CreateIssueDialogEntry\n      navigate={noop}\n      isCreateDialogOpen={isVisible}\n      setIsCreateDialogOpen={setIsVisible}\n      optionConfig={getSafeConfig({\n        storageKeyPrefix: VALUES.storageKeyPrefixes.globalAdd,\n        pasteUrlsAsPlainText: false,\n        singleKeyShortcutsEnabled: true,\n        useMonospaceFont: false,\n        issueCreateArguments: repo,\n        showFullScreenButton: false,\n      })}\n    />\n  )\n}\n\ntry{ GetElement.displayName ||= 'GetElement' } catch {}\ntry{ WrapperComponent.displayName ||= 'WrapperComponent' } catch {}\ntry{ CreateIssueModal.displayName ||= 'CreateIssueModal' } catch {}","// eslint-disable-next-line filenames/match-regex\nimport {type Root, createRoot} from 'react-dom/client'\nimport {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport type {CreateIssueModalProps} from './IssueCreateDialogWebComponent'\nimport {GetElement} from './IssueCreateDialogWebComponent'\n\nexport class IssueCreateDialogElement extends HTMLElement {\n  root: Root | undefined\n  connectedCallback() {\n    const container = document.createElement('div')\n    this.root = createRoot(container)\n    this.append(container)\n    this.render()\n  }\n\n  static get observedAttributes() {\n    return ['isenabled', 'key', 'owner', 'repository', 'analytics-app-name', 'analytics-namespace']\n  }\n\n  attributeChangedCallback() {\n    if (!this.isConnected) return\n    this.render()\n  }\n\n  render() {\n    const isEnabled = this.getAttribute('isenabled') === 'true'\n    const key = this.getAttribute('key')\n    const owner = this.getAttribute('owner')\n    const repository = this.getAttribute('repository')\n    const analyticsAppName = this.getAttribute('analytics-app-name')\n    const analyticsNamespace = this.getAttribute('analytics-namespace')\n    if (!this.root || !isEnabled || !key || key.length < 1) return\n\n    this.root.render(\n      GetElement({isEnabled, key, owner, repository, analyticsAppName, analyticsNamespace} as CreateIssueModalProps),\n    )\n  }\n}\n\nif (ssrSafeWindow && !ssrSafeWindow.customElements.get('issue-create-dialog')) {\n  ssrSafeWindow.customElements.define('issue-create-dialog', IssueCreateDialogElement)\n}\n","import type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {useCallback, useEffect, useRef, useState} from 'react'\n\ninterface ReactPartialAnchor {\n  /**\n   * DO NOT USE THIS PROPERTY DIRECTLY. It is meant to be used with useExternalAnchor and useOnAnchorClick\n   */\n  __wrapperElement: ReactPartialAnchorElement\n}\n\nexport interface ReactPartialAnchorProps {\n  reactPartialAnchor?: ReactPartialAnchor\n}\n\nexport function usePartialAnchorProps(\n  anchorElement: ReactPartialAnchorElement | undefined | null,\n): ReactPartialAnchorProps {\n  useEffect(() => {\n    const anchor = anchorElement?.anchor\n\n    if (!anchor) {\n      return\n    }\n\n    if ('disabled' in anchor) {\n      anchor.disabled = false\n    }\n    anchor.classList.remove('cursor-wait')\n  }, [anchorElement])\n\n  if (!anchorElement) {\n    return {}\n  }\n\n  return {\n    reactPartialAnchor: {\n      __wrapperElement: anchorElement,\n    },\n  }\n}\n\nexport function useExternalAnchor(reactPartialAnchor: ReactPartialAnchor) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor || null)\n  const [open, setOpen] = useState(false)\n\n  const onClick = useCallback(() => {\n    // toggle the open state when clicked\n    setOpen(!open)\n  }, [open, setOpen])\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    ref.current.setAttribute('aria-expanded', open.toString())\n    ref.current.setAttribute('aria-haspopup', 'true')\n  }, [ref, open])\n\n  useOnAnchorClick(reactPartialAnchor, onClick)\n\n  return {\n    ref,\n    open,\n    setOpen,\n  }\n}\n\nexport function useOnAnchorClick(reactPartialAnchor: ReactPartialAnchor, onClick: (event: MouseEvent) => void) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor)\n\n  useEffect(() => {\n    const element = ref.current\n    if (!element) {\n      return\n    }\n\n    element.addEventListener('click', onClick)\n    return () => element.removeEventListener('click', onClick)\n  }, [ref, onClick])\n}\n\nexport type PropsWithPartialAnchor<T> = T & Required<ReactPartialAnchorProps>\n","import {createContext, useContext} from 'react'\n\nexport const AppPayloadContext = createContext<unknown>(undefined)\n\nexport function useAppPayload<T>(): T {\n  const appPayload = useContext(AppPayloadContext)\n\n  return appPayload as T\n}\n","import safeStorage from './safe-storage'\n\nexport const {getItem, setItem, removeItem} = safeStorage('sessionStorage')\n","import {getItem, removeItem, setItem} from '@github-ui/safe-storage/session-storage'\nimport type {SoftNavMechanism} from './events'\n\nexport const DEFAULT_SOFT_NAV_ERROR_REASON = 'reload'\n\nexport const SOFT_NAV_FAIL = 'soft-nav:fail'\nexport const SOFT_NAV_FAIL_REFERRER = 'soft-nav:fail-referrer'\nexport const SOFT_NAV_REFERRER = 'soft-nav:referrer'\nexport const SOFT_NAV_MARK = 'soft-nav:marker'\nexport const SOFT_NAV_REACT_APP_NAME = 'soft-nav:react-app-name'\nexport const SOFT_NAV_LATEST_MECHANISM = 'soft-nav:latest-mechanism'\n\nexport function clearSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n  removeItem(SOFT_NAV_REFERRER)\n  removeItem(SOFT_NAV_FAIL)\n  removeItem(SOFT_NAV_FAIL_REFERRER)\n  removeItem(SOFT_NAV_REACT_APP_NAME)\n  removeItem(SOFT_NAV_LATEST_MECHANISM)\n}\n\nexport function setSoftNavMechanism(mechanism: SoftNavMechanism) {\n  setItem(SOFT_NAV_MARK, mechanism)\n}\n\nexport function unsetSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n}\n\nexport function inSoftNav() {\n  const softNav = getItem(SOFT_NAV_MARK)\n  return softNav && softNav !== '0'\n}\n\nexport function getSoftNavMechanism(): SoftNavMechanism {\n  return getItem(SOFT_NAV_MARK) as SoftNavMechanism\n}\n\nexport function hasSoftNavFailure() {\n  return Boolean(getSoftNavFailReason())\n}\n\nexport function getSoftNavFailReason() {\n  return getItem(SOFT_NAV_FAIL)\n}\n\nexport function setSoftNavFailReason(reason: string) {\n  setItem(SOFT_NAV_FAIL, reason || DEFAULT_SOFT_NAV_ERROR_REASON)\n  setItem(SOFT_NAV_FAIL_REFERRER, window.location.href)\n}\n\nexport function setSoftNavReferrer() {\n  setItem(SOFT_NAV_REFERRER, window.location.href)\n}\n\nexport function getSoftNavReferrer() {\n  return getItem(SOFT_NAV_REFERRER) || document.referrer\n}\n\nexport function setSoftNavReactAppName() {\n  const appName = getCurrentReactAppName()\n\n  if (appName) {\n    setItem(SOFT_NAV_REACT_APP_NAME, appName)\n  } else {\n    removeItem(SOFT_NAV_REACT_APP_NAME)\n  }\n}\n\nexport function getSoftNavReactAppName() {\n  return getItem(SOFT_NAV_REACT_APP_NAME)\n}\n\nexport function getCurrentReactAppName() {\n  if (document.querySelector('meta[name=\"ui\"]')) return 'ui'\n\n  return document.querySelector('react-app')?.getAttribute('app-name')\n}\n\nexport function setLatestMechanism(mechanism: SoftNavMechanism) {\n  setItem(SOFT_NAV_LATEST_MECHANISM, mechanism)\n}\n\nexport function getLatestMechanism() {\n  return getItem(SOFT_NAV_LATEST_MECHANISM) as SoftNavMechanism\n}\n","export interface TestIdProps {\n  /** Test ID to be queried by automated testing suites */\n  'data-testid'?: string\n}\n\nexport const testIdProps = (value: string): TestIdProps => {\n  return {'data-testid': value}\n}\n","import {useCallback, useContext} from 'react'\nimport {sendEvent} from '@github-ui/hydro-analytics'\nimport {AnalyticsContext} from '@github-ui/analytics-provider/context'\n\nexport interface AnalyticsEvent {\n  category: string\n  action: string\n  label: string\n  [key: string]: unknown\n}\n\ntype SendAnalyticsEventFunction = (\n  eventType: string,\n  target?: string,\n  payload?: {[key: string]: unknown} | AnalyticsEvent,\n) => void\n\n/**\n * Use this hook with the AnalyticsContext to send user analytics events to the data warehouse.\n * This hook will read values from the nearest AnalyticsContext.Provider, though you can override properties directly when sending an event.\n * It uses the `sendEvent` helper from `github/hydro-analytics`,\n * which enriches event context with additional information about the user, repository, and current page.\n * See: https://thehub.github.com/epd/engineering/products-and-services/internal/hydro/installation/browser-events/\n *\n * You can find a list of all included context properties in `app/helpers/octolytics_helper.rb`.\n *\n *\n * @example\n * ```tsx\n * function Component() {\n *   const { sendAnalyticsEvent } = useAnalytics()\n *   return <Button onClick={() => sendAnalyticsEvent('file_tree.close', 'FILE_TREE_TOGGLE')}>CLOSE TREE</Button>\n * }\n * ```\n *\n */\nexport function useAnalytics(): {\n  sendAnalyticsEvent: SendAnalyticsEventFunction\n} {\n  // WARNING: Do not add any hooks here that will cause rerenders on soft navs.\n  const contextData = useContext(AnalyticsContext)\n\n  if (!contextData) {\n    throw new Error('useAnalytics must be used within an AnalyticsContext')\n  }\n  const {appName, category, metadata} = contextData\n\n  return {\n    sendAnalyticsEvent: useCallback(\n      (eventType, target?, payload = {}) => {\n        const context = {\n          react: true,\n          ['app_name']: appName,\n          category,\n          ...metadata,\n        }\n        sendEvent(eventType, {...context, ...payload, target})\n      },\n      [appName, category, metadata],\n    ),\n  }\n}\n\n/**\n * Use this hook with the AnalyticsContext to send user analytics events to the data warehouse.\n * This hook will read values from the nearest AnalyticsContext.Provider, though you can override properties directly when sending an event.\n * It uses the `sendEvent` helper from `github/hydro-analytics`,\n * which enriches event context with additional information about the user, repository, and current page.\n * See: https://thehub.github.com/epd/engineering/products-and-services/internal/hydro/installation/browser-events/\n *\n * You can find a list of all included context properties in `app/helpers/octolytics_helper.rb`.\n *\n *\n * @example\n * ```tsx\n * function Component() {\n *   const { sendClickAnalyticsEvent } = useClickAnalytics()\n *   return <Button onClick={() => sendClickAnalyticsEvent({category: '...', action: '...', label: '...'})}>Submit</Button>\n * }\n * ```\n *\n */\nexport function useClickAnalytics(): {\n  sendClickAnalyticsEvent: (payload?: {[key: string]: unknown} | AnalyticsEvent) => void\n} {\n  const {sendAnalyticsEvent} = useAnalytics()\n  return {\n    sendClickAnalyticsEvent: useCallback(\n      (payload = {}) => {\n        sendAnalyticsEvent('analytics.click', undefined, payload)\n      },\n      [sendAnalyticsEvent],\n    ),\n  }\n}\n","import {ssrSafeWindow} from '@github-ui/ssr-utils'\n// eslint-disable-next-line no-restricted-imports\nimport {useEffect, useLayoutEffect as unsafe_useLayoutEffect} from 'react'\n\n/**\n * Provides a safe version of `useLayoutEffect` that calls to `useEffect` on the server.\n * This is useful for components that use `useLayoutEffect` but are rendered on the server,\n * since useLayoutEffect cannot run on the server and warns in that environment\n */\nexport const useLayoutEffect =\n  typeof ssrSafeWindow?.document?.createElement !== 'undefined' ? unsafe_useLayoutEffect : useEffect\n","import {ErrorPage} from './ErrorPage'\nimport React from 'react'\n\n// NOTE(jon, 2022-02-28): I copied 99% of this from memex's error-boundary\n\nexport interface ErrorBoundaryProps {\n  children: React.ReactNode\n  fallback?: React.ReactNode\n  /**\n   * Provide a callback to be invoked when an error is thrown (can be used for logging errors)\n   */\n  onError?: (error: Error) => void\n}\n\ninterface ErrorBoundaryState {\n  error: Error | null\n}\n\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props)\n\n    this.state = {\n      error: null,\n    }\n  }\n\n  /**\n   * Invoked when an error is thrown in the child component,\n   * and used to update state in a concurrent friendly manner\n   */\n  static getDerivedStateFromError(error: Error) {\n    return {error}\n  }\n\n  /**\n   * Called _after_ the re-render, used for performing side-effects such as logging\n   */\n  override componentDidCatch(error: Error) {\n    if (typeof this.props.onError === 'function') {\n      this.props.onError(error)\n    } else {\n      defaultOnError(error)\n    }\n  }\n\n  override render() {\n    if (!this.state.error) return this.props.children\n\n    return this.props.fallback === undefined ? <ErrorPage type=\"httpError\" /> : this.props.fallback\n  }\n}\n\n/**\n * Re-throws the error out of the rendering context to ensure that it propagates to failbot.\n * Also avoids react unmounting the entire tree from an uncaught error.\n */\nfunction defaultOnError(error: Error) {\n  setTimeout(() => {\n    throw error\n  })\n}\n","import {Box, Heading} from '@primer/react'\nimport type {PageError} from './app-routing-types'\n\nconst errorMessages: {[httpStatus: number]: string} = {\n  404: 'Didn’t find anything here!',\n  500: 'Looks like something went wrong!',\n}\n\nexport function ErrorPage({httpStatus, type}: PageError) {\n  const message = type === 'fetchError' ? 'Looks like network is down!' : errorMessages[httpStatus || 500]\n  return (\n    <Heading\n      as=\"h1\"\n      tabIndex={-1}\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: '100%',\n        minHeight: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      Error\n      {httpStatus ? <Box sx={{fontSize: '144px', fontWeight: 'bold', lineHeight: 1}}>{httpStatus}</Box> : null}\n      <Box sx={{fontSize: 4, pt: 2}}>{message}</Box>\n    </Heading>\n  )\n}\n\ntry{ ErrorPage.displayName ||= 'ErrorPage' } catch {}","import {useState} from 'react'\nimport type {BrowserHistory, MemoryHistory} from '@remix-run/router'\nimport {Router} from 'react-router-dom'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\ntype Props = {\n  children: React.ReactNode\n  history: BrowserHistory | MemoryHistory\n}\n\nexport function PartialRouter({children, history}: Props) {\n  const [state, setState] = useState({\n    location: history.location,\n  })\n\n  useHydratedEffect(() => history.listen(setState), [history])\n\n  return (\n    <Router location={state.location} navigator={history}>\n      {children}\n    </Router>\n  )\n}\n\ntry{ PartialRouter.displayName ||= 'PartialRouter' } catch {}","// Think of this as the entry point into the framework\nimport React from 'react'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {BaseProviders} from './BaseProviders'\nimport type {BrowserHistory} from '@remix-run/router'\nimport {createMemoryHistory} from '@remix-run/router'\nimport {AppContextProvider} from './AppContextProvider'\nimport {PartialRouter} from './PartialRouter'\nimport {CommonElements} from './CommonElements'\nimport {createBrowserHistory} from './create-browser-history'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {usePartialAnchorProps} from './react-partial-anchor'\n\ninterface Props {\n  partialName: string\n  embeddedData: EmbeddedPartialData\n  Component: React.ComponentType\n  wasServerRendered: boolean\n  ssrError?: HTMLScriptElement\n  anchorElement?: ReactPartialAnchorElement | null\n}\n\nexport function PartialEntry({\n  partialName,\n  embeddedData,\n  Component,\n  wasServerRendered,\n  ssrError,\n  anchorElement,\n}: Props) {\n  // Create a ref to track the browser history:\n  const historyRef = React.useRef<BrowserHistory>()\n  const window = globalThis.window as Window | undefined\n\n  // For linking to work, we can just pass a dummy pathname here. We may consider plumbing the actual path in\n  if (!historyRef.current) {\n    historyRef.current = !window\n      ? createMemoryHistory({initialEntries: [{pathname: '/'}]})\n      : createBrowserHistory({window})\n  }\n  const history = historyRef.current\n  const partialAnchorProps = usePartialAnchorProps(anchorElement)\n\n  // Wrap the partial in an AppContextProvider and static Router so that react-core links\n  // will be functional.\n  return (\n    <BaseProviders appName={partialName} wasServerRendered={wasServerRendered}>\n      <AppContextProvider history={history} routes={[]}>\n        <PartialRouter history={history}>\n          <Component {...embeddedData.props} {...(partialAnchorProps as object)} />\n          <CommonElements ssrError={ssrError} />\n        </PartialRouter>\n      </AppContextProvider>\n    </BaseProviders>\n  )\n}\n\ntry{ PartialEntry.displayName ||= 'PartialEntry' } catch {}","import {Box, type BoxProps, Text, type TextProps} from '@primer/react'\nimport type {ForwardRefComponent as PolymorphicForwardRefComponent} from '@radix-ui/react-polymorphic'\nimport DOMPurify, {type Config as DOMPurifyConfig} from 'dompurify'\nimport type React from 'react'\nimport {forwardRef} from 'react'\n\ntype Brand<TBase, TBrand extends string> = TBase & {__brand: TBrand}\n\n/**\n * A string that has specifically been marked as verified.\n *\n * WARNING: A string should only be branded as a `SafeHTMLString` if one of the following applies:\n * - it comes from a trusted source on the server\n * - has known static content, or\n * - has been sanitized by DOMPurify.\n */\nexport type SafeHTMLString = Brand<string, 'SafeHTMLString'>\n\ninterface BaseHTMLProps {\n  /**\n   * Set the rendered HTML of the component. Use this prop if the source is untrusted. If you know the string can be\n   * trusted, or has already been sanitized, use the `html` prop instead to avoid re-sanitizing.\n   */\n  unverifiedHTML?: string\n  /**\n   * Optional config passed to DOMPurify when sanitizing `unverifiedHTML`.\n   */\n  unverifiedHTMLConfig?: DOMPurifyConfig\n  /**\n   * Set the rendered HTML of the component. To prevent XSS, ensure that the source of this\n   * HTML is trusted! If the source is untrusted, use `unverifiedHTML` instead.\n   */\n  html?: SafeHTMLString\n}\n\ninterface VerifiedHTMLProps extends BaseHTMLProps {\n  unverifiedHTML?: undefined\n  html: SafeHTMLString\n}\n\ninterface UnverifiedHTMLProps extends BaseHTMLProps {\n  unverifiedHTML: string\n  html?: undefined\n}\n\nexport type SafeHTMLProps = VerifiedHTMLProps | UnverifiedHTMLProps\n\ntype PropsWithHTML<T> = T & SafeHTMLProps\n\nfunction getSafeHTMLAndProps<T>(propsWithHtml: PropsWithHTML<T>) {\n  /**\n   * Note we have to explicitly cast props to T because TypeScript\n   * is not properly converting Omit<T & VerifiedHTMLProps, 'html'> to T.\n   *\n   * We include the `as unknown` intermediate step to avoid warnings\n   * about insufficient type overlap\n   */\n\n  if ('html' in propsWithHtml && propsWithHtml.html !== undefined) {\n    const {html, ...props} = propsWithHtml\n    return {\n      // This is verified html, so we can use it directly\n      safeHTML: html,\n      props: props as unknown as T,\n    }\n  }\n\n  const {unverifiedHTML, unverifiedHTMLConfig, ...props} = propsWithHtml\n  const config = {\n    ...unverifiedHTMLConfig,\n    // we want to ensure we are returning a string not a dom node\n    RETURN_DOM: false,\n    RETURN_DOM_FRAGMENT: false,\n  } satisfies DOMPurifyConfig\n\n  return {\n    // Run the unverified HTML through DOMPurify to sanitize it\n    safeHTML: DOMPurify.sanitize(unverifiedHTML, config),\n    props: props as unknown as T,\n  }\n}\n\n/**\n * `SafeHTMLBox` extends `Box` from `@primer/react` with props for safely\n * rendering HTML strings. Exactly one `html` or `unverifiedHTML` must be\n * supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLBox = withSafeHTML<BoxProps>(Box) as PolymorphicForwardRefComponent<\n  'div' | 'span' | 'pre' | 'table' | 'tbody' | 'tr' | 'td' | 'ul' | 'ol' | 'li',\n  PropsWithHTML<BoxProps>\n>\nSafeHTMLBox.displayName = 'SafeHTMLBox'\n\n/**\n * `SafeHTMLText` extends `Text` from `@primer/react` with props for safely\n * rendering HTML strings. Exactly one `html` or `unverifiedHTML` must be\n * supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLText = withSafeHTML<TextProps>(Text) as PolymorphicForwardRefComponent<\n  'div' | 'span' | 'p' | 'strong' | 'em' | 'pre' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'a',\n  PropsWithHTML<TextProps>\n>\nSafeHTMLText.displayName = 'SafeHTMLText'\n\n/**\n * A higher-order component that extends a basic component by offering\n * `html` and `unverifiedHTML` props that are safe alternatives to `dangerouslySetInnerHTML`.\n */\nfunction withSafeHTML<T>(Component: React.ComponentType<T>) {\n  // We give these display names above\n  // eslint-disable-next-line react/display-name\n  const SafeHTMLComponent = forwardRef<HTMLSpanElement, PropsWithHTML<T>>((propsWithHtml, ref) => {\n    const {safeHTML, props} = getSafeHTMLAndProps(propsWithHtml)\n    // This is the only place in the codebase where `dangerouslySetInnerHTML` should be allowed\n    // eslint-disable-next-line react/forbid-component-props\n    return <Component ref={ref} {...props} dangerouslySetInnerHTML={safeHTML ? {__html: safeHTML} : undefined} />\n  })\n\n  return SafeHTMLComponent\n}\n\n/**\n * `SafeHTMLDiv` extends `div`with props for safely rendering HTML strings.\n * Exactly one `html` or `unverifiedHTML` must be supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLDiv = forwardRef<\n  HTMLDivElement,\n  PropsWithHTML<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>>\n>((propsWithHtml, ref) => {\n  const {safeHTML, props} = getSafeHTMLAndProps(propsWithHtml)\n  // eslint-disable-next-line react/no-danger\n  return <div ref={ref} {...props} dangerouslySetInnerHTML={safeHTML ? {__html: safeHTML} : undefined} />\n})\nSafeHTMLDiv.displayName = 'SafeHTMLDiv'\n\ntry{ SafeHTMLComponent.displayName ||= 'SafeHTMLComponent' } catch {}"],"names":["announceFromElement","el","options","isFeatureEnabled","announce","getTextContent","element","undefined","liveRegionAnnounceFromElement","politeness","assertive","message","Element","prototype","document","body","ariaNotify","interrupt","liveRegionAnnounce","setContainerContent","container","ssrSafeDocument","querySelector","textContent","getAttribute","innerText","trim","hydroAnalyticsClient","getItem","safeStorage","dimensionPrefix","MARKETING_PARAMS","getOptionsFromMeta","baseContext","AnalyticsClient","_","extendBaseContext","context","key","value","app_id","event_url","host","Object","entries","startsWith","replace","visitorMeta","assign","JSON","parse","atob","content","URLSearchParams","window","location","search","includes","toLowerCase","staff","isStaff","toString","sendPageView","sendEvent","type","service","head","cleanContext","stringifyObjectValues","obj","fromEntries","map","k","v","stringify","GetElement","props","PartialEntry","partialName","embeddedData","Component","WrapperComponent","wasServerRendered","environment","relayEnvironmentWithMissingFieldHandlerForNode","RelayEnvironmentProvider","AnalyticsProvider","appName","analyticsAppName","category","analyticsNamespace","metadata","CreateIssueModal","owner","repository","isVisible","setIsVisible","useState","useEffect","repo","useMemo","name","CreateIssueDialogEntry","navigate","noop","isCreateDialogOpen","setIsCreateDialogOpen","optionConfig","getSafeConfig","storageKeyPrefix","VALUES","storageKeyPrefixes","globalAdd","pasteUrlsAsPlainText","singleKeyShortcutsEnabled","useMonospaceFont","issueCreateArguments","showFullScreenButton","displayName","IssueCreateDialogElement","HTMLElement","connectedCallback","createElement","root","createRoot","append","render","observedAttributes","attributeChangedCallback","isConnected","isEnabled","length","ssrSafeWindow","customElements","get","define","usePartialAnchorProps","anchorElement","anchor","disabled","classList","remove","reactPartialAnchor","__wrapperElement","useExternalAnchor","ref","useRef","open","setOpen","onClick","useCallback","current","setAttribute","useOnAnchorClick","addEventListener","removeEventListener","AppPayloadContext","createContext","useAppPayload","useContext","setItem","removeItem","DEFAULT_SOFT_NAV_ERROR_REASON","SOFT_NAV_FAIL","SOFT_NAV_FAIL_REFERRER","SOFT_NAV_REFERRER","SOFT_NAV_MARK","SOFT_NAV_REACT_APP_NAME","SOFT_NAV_LATEST_MECHANISM","clearSoftNav","setSoftNavMechanism","mechanism","unsetSoftNav","inSoftNav","softNav","getSoftNavMechanism","hasSoftNavFailure","Boolean","getSoftNavFailReason","setSoftNavFailReason","reason","href","setSoftNavReferrer","getSoftNavReferrer","referrer","setSoftNavReactAppName","getCurrentReactAppName","getSoftNavReactAppName","setLatestMechanism","getLatestMechanism","testIdProps","useAnalytics","contextData","AnalyticsContext","sendAnalyticsEvent","eventType","target","payload","react","useClickAnalytics","sendClickAnalyticsEvent","useLayoutEffect","unsafe_useLayoutEffect","ErrorBoundary","React","getDerivedStateFromError","error","onError","setTimeout","state","fallback","ErrorPage","children","constructor","errorMessages","httpStatus","Heading","as","tabIndex","sx","display","flexDirection","minWidth","minHeight","alignItems","justifyContent","Box","fontSize","fontWeight","lineHeight","pt","PartialRouter","history","setState","useHydratedEffect","listen","Router","navigator","ssrError","historyRef","globalThis","createBrowserHistory","createMemoryHistory","initialEntries","pathname","partialAnchorProps","BaseProviders","AppContextProvider","routes","CommonElements","SafeHTMLComponent","getSafeHTMLAndProps","propsWithHtml","html","safeHTML","unverifiedHTML","unverifiedHTMLConfig","config","RETURN_DOM","RETURN_DOM_FRAGMENT","DOMPurify","SafeHTMLBox","withSafeHTML","SafeHTMLText","Text","forwardRef","dangerouslySetInnerHTML","__html","SafeHTMLDiv","div"],"sourceRoot":""}