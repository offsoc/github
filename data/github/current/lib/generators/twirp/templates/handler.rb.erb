# typed: true
# frozen_string_literal: true

require "<%= @options[:from_gem] %>"

module Api::Internal::Twirp::<%= @current_version.modules[:twirp_namespace] %>
  module <%= @current_version.modules[:twirp_module] %>
    module <%= @current_version.modules[:version] %>
      # Handler for the <%= @current_service.definition %>
      class <%= @current_service.handler_name.demodulize %> < Api::Internal::Twirp::Handler
        allow_access_for :client, allowed_clients: ["<%= @twirp_module.client %>"]
        handles_service <%= @current_service.definition %>

        <%- @current_service.rpcs.each do |rpc| -%>
        # Public: Implementation of the <%= rpc.name %> Twirp RPC.
        #
        # req - The Twirp request as a <%= rpc.input_class %>.
        # env - The Twirp environment as a Hash.
        #
        # Returns the Twirp response as a Hash suitable for use in a
        # <%= rpc.output_class %>, or a Twirp::Error.
        def <%= rpc.handler_method %>(req, env)
          {}
        end
        <%- end -%>
      end
    end
  end
end
