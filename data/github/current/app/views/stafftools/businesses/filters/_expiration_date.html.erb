<%= render Primer::Beta::Details.new(overlay: :default, reset: true, display: :inline_block, mb: 2, mr: 2) do |component| %>
  <% component.with_summary do %>
    <i>Expiration:</i>
    <% if filter.key?(:expires) %>
      <%= filter[:expires] == "desc" ? "Latest" : "Oldest" %>
    <% else %>
      None
    <% end %>
    <span class="dropdown-caret"></span>
  <% end %>

  <% component.with_body do %>
    <div class="SelectMenu SelectMenu--hasFilter position-relative">
      <details-menu role="menu" class="SelectMenu right-0"><%# erblint:disable Primer::Accessibility::DetailsMenuMigration %>
        <div class="SelectMenu-modal">
          <header class="SelectMenu-header">
            <span class="SelectMenu-title">Filter by expiration date</span>
          </header>
          <div class="select-menu-list">
            <% all_params = {  query: query, tab: tab, filter: filter.except(:expires) } %>
            <a href="?<%= all_params.to_query %>" aria-checked="<%= filter[:expires].blank? %>" class="select-menu-item <% if filter[:expires].blank? %>selected<% end %>"  role="menuitemcheckbox">
              <%= render Primer::Beta::Octicon.new(icon: "check", classes: "select-menu-item-icon") %>
              <span class="select-menu-item-text">None</span>
            </a>

            <% {"asc": "Oldest", "desc": "Latest"}.map do |expires_key, expires_value| %>
              <% expires_params = { query: query, tab: tab, filter: filter.merge(expires: expires_key) } %>
              <a href="?<%= expires_params.to_query %>" aria-checked="<%= filter[:expires] == expires_key.to_s %>" class="select-menu-item <% if filter[:expires] == expires_key.to_s %>selected<% end %>" role="menuitemcheckbox">
                <%= render Primer::Beta::Octicon.new(icon: "check", classes: "select-menu-item-icon") %>
                <span class="select-menu-item-text"><%= expires_value.titleize %></span>
              </a>
            <% end %>
          </div>
        </div>
      </details-menu>
    </div>
  <% end %>
<% end %>
