<div class="d-flex">
  <%= content_tag(container_tag, :class => "width-full", :aria => container_aria_attrs) do %>
    <div
      class="<%= class_names(
        "timeline-comment unminimized-comment comment previewable-edit js-task-list-container flex-auto box-shadow-none js-comment",
        "current-user" => viewer_did_author?,
        "#{helpers.unread_comment_class}" => !viewer_did_author?,
        "reorderable-task-lists" => logged_in?,
        "timeline-chosen-answer color-shadow-medium" => timeline.show_as_answer?(discussion_or_comment),
        "border-0 color-bg-inset nested-discussion-timeline-comment" => comment_is_nested?,
        "ml-n3" => comment_is_nested?,
      ) %>"
      data-body-version="<%= discussion_or_comment.body_version %>"
    >
      <% timeline.record_show_stats_render("discussion_or_comment_header") do %>
        <%= render Discussions::HeaderComponent.new(timeline: timeline, discussion_or_comment: discussion_or_comment) %>
      <% end %>

      <div class="<%= class_names(
        "color-bg-default border-bottom position-relative" => !comment_is_nested? && show_child_comments_container? &&
          timeline.child_comments(discussion_or_comment).any?,
        "color-bg-success" => comment_is_nested? && timeline.show_as_answer?(discussion_or_comment),
      ) %>">
        <div class="edit-comment-hide">
          <% timeline.record_show_stats_render("discussion_or_comment_body") do %>
            <%= render Discussions::UserContentComponent.new(
              discussion_or_comment: discussion_or_comment,
              timeline: timeline,
            ) %>
          <% end %>
          <div class="<%= class_names(
            "d-block d-sm-flex flex-items-center",
            "ml-1" => comment_is_nested?,
            "mb-3 ml-3" => !comment_is_nested?,
          ) %>">
            <% if timeline.show_discussion_mark_answer?(discussion_or_comment) %>
              <div class="mb-1 mb-sm-0">
                <%= render Discussions::MarkAnswerFooterComponent.new(
                  comment: discussion_or_comment,
                  timeline: timeline,
                  remote_form_id: discussion_or_comment.dom_id,
                ) %>
              </div>
            <% end %>

            <div class="d-flex flex-1 flex-justify-between flex-items-center">
              <div class="d-flex flex-items-center">
                <% unless comment_is_nested? %>
                  <div class="d-flex">
                    <% if timeline.render_voting_placeholders? %>
                      <%= render Discussions::VotesPlaceholderComponent.new(target: discussion_or_comment) %>
                    <% else %>
                      <%= render Discussions::VoteFormComponent.new(
                        subject: discussion_or_comment,
                        vote: timeline.vote_for(discussion_or_comment),
                        voting_enabled: timeline.can_react?(discussion_or_comment),
                      ) %>
                    <% end %>
                  </div>
                <% end %>

                <% timeline.record_show_stats_render("reactions") do %>
                  <% if timeline.render_reaction_placeholders? %>
                    <%= render Discussions::ReactionsPlaceholderComponent.new(
                      target: discussion_or_comment,
                      timeline_or_feed: timeline,
                    ) %>
                  <% else %>
                    <%= render Discussions::ReactionsComponent.new(target: discussion_or_comment) %>
                  <% end %>
                <% end %>
              </div>

              <% if !comment_is_nested? && discussion_or_comment.is_a?(DiscussionComment) %>
                <div class="f6 mr-3">
                  <span class="color-fg-muted no-wrap" <%= test_selector("reply-count") %>>
                    <%= pluralize(timeline.total_visible_child_comments_count(discussion_or_comment), "reply") %>
                  </span>
                  <% if timeline.last_read_at && discussion_or_comment.created_at < timeline.last_read_at %>
                    <% if (new_count = timeline.total_new_child_comments_count(discussion_or_comment, timeline.last_read_at)) > 0 %>
                      <%= render Primer::Beta::Label.new(
                        scheme: :info,
                        text: :small,
                        ml: 1, px: 2,
                        style: "padding: 1px; font-weight: 300",
                      ).with_content("#{new_count} new") %>
                    <% end %>
                  <% end %>
                </div>
              <% end %>
            </div>
          </div>

          <% if discussion_or_comment.is_a?(Discussion) && timeline.selected_answer.present? %>
            <%= render Discussions::AnswerPreviewComponent.new(timeline: timeline) %>
          <% end %>
        </div>

        <% if logged_in? %>
          <% timeline.record_show_stats_render("edit_form") do %>
            <%= form_tag form_path, method: :put, class: "js-comment-update", id: nil do %>
              <div
                class="js-edit-comment-form-container"
                data-body-version="<%= discussion_or_comment.body_version %>"
                data-outer-div-classes="<%= class_names(
                  "mx-2" => discussion_or_comment.nested?
                ) %>"
                <% if discussion_or_comment.is_a?(DiscussionComment) %>
                  data-permissions-url="<%= discussion_comment_permissions_path(
                    comment_id: discussion_or_comment.id,
                    discussion_number: timeline.discussion_number,
                    repository: timeline.repository,
                    user_id: timeline.repo_owner_login,
                  ) %>"
                <% else %>
                  data-permissions-url="<%= discussion_permissions_path(
                    discussion_number: timeline.discussion_number,
                    repository: timeline.repository,
                    user_id: timeline.repo_owner_login,
                  ) %>"
                <% end %>
                data-repository-id="<%= discussion_or_comment.repository_id %>"
                data-target-body="<%= discussion_or_comment.body %>"
                <% if discussion_or_comment.is_a?(DiscussionComment) %>
                  data-target-type="comment"
                <% else %>
                  data-target-type="discussion"
                <% end %>
                <% if show_poll_edit? %>
                  data-poll-edit-url="<%= edit_discussion_poll_path(
                    discussion_number: discussion_or_comment.number,
                    repository: timeline.repository,
                    user_id: timeline.repo_owner_login,
                  ) %>"
                <% end %>
                data-textarea-id="<%= "#{discussion_or_comment.dom_id}-body" %>"
                data-slash-command-url="<%= slash_apps_path(
                  user_id: timeline.repo_owner_login,
                  repository: timeline.repository,
                  subject_gid: timeline.discussion_graphql_id,
                  surface: SlashCommands::DISCUSSION_SURFACE,
                ) %>"
              >
              </div>
            <% end %>
          <% end %>
        <% end %>
      </div>
      <% if show_child_comments_container? %>
        <% timeline.record_show_stats_render("child_comments") do %>
          <%= render Discussions::ChildCommentsComponent.new(
            page: page,
            parent_comment: discussion_or_comment,
            timeline: timeline,
            back_page: back_page,
            forward_page: forward_page,
            anchor_id: anchor_id,
          ) %>
        <% end %>
      <% end %>

      <% timeline.record_show_stats_render("inline_reply_form") do %>
        <%= render Discussions::InlineReplyFormComponent.new(
          parent_comment: discussion_or_comment,
          timeline: timeline,
          anchor_id: anchor_id,
          back_page: back_page,
        ) %>
      <% end %>
    </div>
    <%= render Discussions::CommentMarkAnswerTitleComponent.new(comment: discussion_or_comment, timeline: timeline) %>
  <% end %>
</div>
