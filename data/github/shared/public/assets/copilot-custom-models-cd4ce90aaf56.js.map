{"version":3,"file":"copilot-custom-models-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/copilot-custom-models/routes/Show/features/TrainingSteps/StageIcon.tsx","ui/packages/copilot-custom-models/features/NavigateWithFlashBanner/FlashPortal.tsx","ui/packages/copilot-custom-models/features/NavigateWithFlashBanner/Provider.tsx","ui/packages/copilot-custom-models/features/NavigateWithFlashBanner/index.ts","ui/packages/copilot-custom-models/App.tsx","ui/packages/copilot-custom-models/components/Header.tsx","ui/packages/copilot-custom-models/utils.ts","ui/packages/copilot-custom-models/components/RadarCircle.tsx","ui/packages/copilot-custom-models/routes/Index/features/PipelineList/leading-visual-map.ts","ui/packages/copilot-custom-models/hooks/use-pipeline-polling.ts","ui/packages/copilot-custom-models/hooks/use-overlay-controls.ts","ui/packages/copilot-custom-models/components/CancelDialogProvider.tsx","ui/packages/copilot-custom-models/routes/Index/features/PipelineList/PipelineListItem.tsx","ui/packages/copilot-custom-models/components/DeleteDialogProvider.tsx","ui/packages/copilot-custom-models/features/PipelineDetails/PipelineDetailsProvider.tsx","ui/packages/copilot-custom-models/features/PipelineBanner/shared.ts","ui/packages/copilot-custom-models/features/PipelineBanner/BannerTitle.tsx","ui/packages/copilot-custom-models/features/PipelineBanner/CanceledBanner.tsx","ui/packages/copilot-custom-models/features/PipelineBanner/FailedBanner.tsx","ui/packages/copilot-custom-models/features/PipelineBanner/InProgressBanner.tsx","ui/packages/copilot-custom-models/components/BorderBox.tsx","ui/packages/copilot-custom-models/features/PipelineBanner/SuccessBanner.tsx","ui/packages/copilot-custom-models/features/PipelineBanner/PipelineBanner.tsx","ui/packages/copilot-custom-models/features/PipelineBanner/PipelineBannerListItem.tsx","ui/packages/copilot-custom-models/routes/Index/features/PipelineList/PipelineList.tsx","ui/packages/copilot-custom-models/features/PipelineCard/Datum.tsx","ui/packages/copilot-custom-models/features/PipelineCard/DatumText.tsx","ui/packages/copilot-custom-models/features/PipelineCard/StatusDatum.tsx","ui/packages/copilot-custom-models/features/PipelineCard/LanguagesWithColor.tsx","ui/packages/copilot-custom-models/features/PipelineCard/ReposListView.tsx","ui/packages/copilot-custom-models/features/PipelineCard/DeletedReposBanner.tsx","ui/packages/copilot-custom-models/hooks/use-debounced-query.ts","ui/packages/copilot-custom-models/features/PipelineCard/ReposDialog.tsx","ui/packages/copilot-custom-models/features/PipelineCard/ReposDialogButton.tsx","ui/packages/copilot-custom-models/features/PipelineCard/ReposDatum.tsx","ui/packages/copilot-custom-models/features/PipelineCard/TelemetryDatum.tsx","ui/packages/copilot-custom-models/features/PipelineCard/ActionsButton.tsx","ui/packages/copilot-custom-models/features/PipelineCard/CreatorDatum.tsx","ui/packages/copilot-custom-models/features/PipelineCard/use-created-ago.ts","ui/packages/copilot-custom-models/features/PipelineCard/PipelineCard.tsx","ui/packages/copilot-custom-models/routes/Index/components/BlankState.tsx","ui/packages/copilot-custom-models/routes/Index/Page.tsx","ui/packages/copilot-custom-models/features/RepoPicker/SelectedReposProvider.tsx","ui/packages/copilot-custom-models/features/RepoPicker/HiddenTextInput.tsx","ui/packages/copilot-custom-models/features/RepoPicker/utils.ts","ui/packages/copilot-custom-models/features/RepoPicker/ListRepoList.tsx","ui/packages/copilot-custom-models/features/RepoPicker/ListDialog.tsx","ui/packages/copilot-custom-models/features/RepoPicker/ListButton.tsx","ui/packages/copilot-custom-models/features/RepoPicker/PickerRepoList.tsx","ui/packages/copilot-custom-models/features/RepoPicker/PickerDialog.tsx","ui/packages/copilot-custom-models/features/RepoPicker/use-query-for-repos.ts","ui/packages/copilot-custom-models/features/RepoPicker/PickerButton.tsx","ui/packages/copilot-custom-models/features/RepoPicker/SingleButton.tsx","ui/packages/copilot-custom-models/features/RepoPicker/RepoPicker.tsx","ui/packages/copilot-custom-models/features/RepoPicker/use-org-only-repos.ts","ui/packages/copilot-custom-models/features/TrainingForm/Banner.tsx","ui/packages/copilot-custom-models/features/TrainingForm/PrivateTelemetryCheckbox.tsx","ui/packages/copilot-custom-models/features/TrainingForm/utils.ts","ui/packages/copilot-custom-models/features/TrainingForm/GeneralErrors.tsx","ui/packages/copilot-custom-models/features/TrainingForm/ValidationErrors.tsx","ui/packages/copilot-custom-models/features/TrainingForm/Explanation.tsx","ui/packages/copilot-custom-models/features/LanguagePicker/LanguageToken.tsx","ui/packages/copilot-custom-models/features/LanguagePicker/AutocompleteLanguages.tsx","ui/packages/copilot-custom-models/features/TrainingForm/TrainingForm.tsx","ui/packages/copilot-custom-models/features/TrainingForm/use-form.ts","ui/packages/copilot-custom-models/routes/New/Page.tsx","ui/packages/copilot-custom-models/routes/Edit/Page.tsx","ui/packages/copilot-custom-models/routes/Show/components/TrainingHeader.tsx","ui/packages/copilot-custom-models/routes/Show/features/TrainingSteps/use-theme-color.ts","ui/packages/copilot-custom-models/components/NoBreak.tsx","ui/packages/copilot-custom-models/routes/Show/features/TrainingSteps/Log.tsx","ui/packages/copilot-custom-models/routes/Show/features/TrainingSteps/LogGroup.tsx","ui/packages/copilot-custom-models/routes/Show/features/TrainingSteps/utils.ts","ui/packages/copilot-custom-models/routes/Show/features/TrainingSteps/Stage.tsx","ui/packages/copilot-custom-models/routes/Show/features/TrainingSteps/TrainingSteps.tsx","ui/packages/copilot-custom-models/routes/Show/Page.tsx","ui/packages/copilot-custom-models/copilot-custom-models.ts","ui/packages/is-hash-navigation/is-hash-navigation.ts","ui/packages/issue-viewer/utils/queries.ts","ui/packages/use-navigate/use-navigate.ts","ui/packages/github-avatar/GitHubAvatar.tsx","ui/packages/list-view/src/ListItem/Description.module.css","ui/packages/list-view/src/ListItem/Description.tsx","ui/packages/list-view/src/ListItem/DescriptionItem.module.css","ui/packages/list-view/src/ListItem/DescriptionItem.tsx","ui/packages/list-view/src/ListItem/LeadingContent.module.css","ui/packages/list-view/src/ListItem/LeadingContent.tsx","ui/packages/list-view/src/ListItem/LeadingVisual.module.css","ui/packages/list-view/src/ListItem/UnreadIndicator.module.css","ui/packages/list-view/src/ListItem/UnreadIndicator.tsx","ui/packages/list-view/src/ListItem/LeadingVisual.tsx","ui/packages/list-view/src/ListItem/MainContent.module.css","ui/packages/list-view/src/ListItem/MainContent.tsx","ui/packages/list-view/src/ListItem/Metadata.module.css","ui/packages/list-view/src/ListItem/Metadata.tsx","ui/packages/list-view/src/ListItem/TrailingBadge.module.css","ui/packages/list-view/src/ListItem/TrailingBadge.tsx","ui/packages/list-view/src/ListView/Metadata.tsx","ui/packages/list-view/src/density-gap.module.css","ui/packages/list-view/src/ListView/ActionBar.module.css","ui/packages/list-view/src/ListView/ActionBar.tsx","ui/packages/list-view/src/ListView/Metadata.module.css","ui/packages/list-view/src/ListView/SectionFilters.module.css","ui/packages/list-view/src/ListView/SectionFilters.tsx","ui/packages/list-view/src/ListView/SelectAllCheckbox.module.css","ui/packages/list-view/src/ListView/SelectAllCheckbox.tsx","ui/packages/react-core/FeatureFlagProvider.tsx","ui/packages/react-core/JsonRoute.tsx"],"sourcesContent":["import {CheckCircleFillIcon, DotFillIcon, SkipFillIcon, StopIcon, XIcon, type Icon} from '@primer/octicons-react'\nimport {Octicon} from '@primer/react'\nimport type {PipelineStageStatus} from '../../../../types'\nimport {RadarCircle} from '../../../../components/RadarCircle'\n\ninterface Props {\n  status: PipelineStageStatus\n}\n\nfunction renderSpinner(label: string) {\n  return function SpinnerWithLabel() {\n    return <RadarCircle aria-label={label} size={16} />\n  }\n}\n\ninterface LeadingVisual {\n  color: string\n  icon: Icon\n  label: string\n}\n\ntype LeadingVisualMap = Record<PipelineStageStatus, LeadingVisual>\n\nconst leadingVisualMap: LeadingVisualMap = {\n  PIPELINE_STAGE_STATUS_UNSPECIFIED: {\n    color: '#DBAB0A',\n    icon: DotFillIcon,\n    label: 'Unspecified',\n  },\n  PIPELINE_STAGE_STATUS_ENQUEUED: {\n    color: '#DBAB0A',\n    icon: renderSpinner('Enqueued'),\n    label: 'Enqueued',\n  },\n  PIPELINE_STAGE_STATUS_STARTED: {\n    color: 'inherit',\n    icon: renderSpinner('Started'),\n    label: 'Started',\n  },\n  PIPELINE_STAGE_STATUS_COMPLETED: {\n    color: 'var(--fgColor-success)',\n    icon: CheckCircleFillIcon,\n    label: 'Completed',\n  },\n  PIPELINE_STAGE_STATUS_FAILED: {\n    color: 'var(--fgColor-danger)',\n    icon: XIcon,\n    label: 'Failed',\n  },\n  PIPELINE_STAGE_STATUS_SKIPPED: {\n    color: 'inherit',\n    icon: SkipFillIcon,\n    label: 'Skipped',\n  },\n  PIPELINE_STAGE_STATUS_PENDING: {\n    color: '#DBAB0A',\n    icon: DotFillIcon,\n    label: 'Pending',\n  },\n  PIPELINE_STAGE_STATUS_CANCELED: {\n    color: 'inherit',\n    icon: StopIcon,\n    label: 'Canceled',\n  },\n}\n\nexport function StageIcon({status}: Props) {\n  const {color, icon, label} = leadingVisualMap[status]\n\n  return <Octicon aria-label={label} icon={icon} sx={{color, height: '16px', width: '16px'}} />\n}\n\ntry{ SpinnerWithLabel.displayName ||= 'SpinnerWithLabel' } catch {}\ntry{ StageIcon.displayName ||= 'StageIcon' } catch {}","import {Flash} from '@primer/react'\nimport {createPortal} from 'react-dom'\nimport type {FlashState} from './types'\n\nexport function FlashPortal({message, variant}: FlashState) {\n  if (!message) return null\n\n  const container = document.getElementById('js-flash-container')\n\n  if (!container) return null\n\n  return createPortal(\n    <Flash full variant={variant}>\n      {message}\n    </Flash>,\n    container,\n  )\n}\n\ntry{ FlashPortal.displayName ||= 'FlashPortal' } catch {}","import {useNavigate} from '@github-ui/use-navigate'\nimport {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n  type Dispatch,\n  type PropsWithChildren,\n  type SetStateAction,\n} from 'react'\nimport noop from 'lodash-es/noop'\nimport {FlashPortal} from './FlashPortal'\nimport type {FlashState, To} from './types'\n\nconst defaultFlashState: FlashState = {\n  message: '',\n  variant: undefined,\n}\n\ninterface IContext {\n  navigate: (to: To, flashState?: FlashState) => void\n  setFlashState: Dispatch<SetStateAction<FlashState>>\n}\n\nconst Context = createContext<IContext>({\n  navigate: noop,\n  setFlashState: noop,\n})\n\nexport function NavigateWithFlashBannerProvider({children}: PropsWithChildren) {\n  const baseNavigate = useNavigate()\n  const [flashState, setFlashState] = useState<FlashState>(defaultFlashState)\n\n  const navigate = useCallback(\n    (to: To, newFlashState: FlashState = defaultFlashState) => {\n      baseNavigate(to)\n      setFlashState(newFlashState)\n    },\n    [baseNavigate],\n  )\n\n  const value: IContext = useMemo(() => ({navigate, setFlashState}), [navigate])\n\n  return (\n    <Context.Provider value={value}>\n      {!!flashState.message.length && <FlashPortal {...flashState} />}\n      {children}\n    </Context.Provider>\n  )\n}\n\nexport function useNavigateWithFlashBanner(): IContext {\n  const context = useContext(Context)\n\n  if (!context) {\n    throw new Error('useFlashBanner must be used within <FlashBannerProvider />')\n  }\n\n  return context\n}\n\ntry{ Context.displayName ||= 'Context' } catch {}\ntry{ NavigateWithFlashBannerProvider.displayName ||= 'NavigateWithFlashBannerProvider' } catch {}","export {NavigateWithFlashBannerProvider, useNavigateWithFlashBanner} from './Provider'\nexport const defaultErrorMessage = 'Something went wrong. Try again later.'\n","import {FeatureFlagProvider} from '@github-ui/react-core/feature-flag-provider'\nimport type {AppPayloadWithFeatureFlags} from '@github-ui/react-core/use-feature-flag'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport type React from 'react'\nimport {NavigateWithFlashBannerProvider} from './features/NavigateWithFlashBanner'\n\n/**\n * The App component is used to render content which should be present on _all_ routes within this app\n */\nexport function App(props: {children?: React.ReactNode}) {\n  const {enabled_features} = useRoutePayload<AppPayloadWithFeatureFlags>()\n  return (\n    <FeatureFlagProvider features={enabled_features ?? {}}>\n      <NavigateWithFlashBannerProvider>{props.children}</NavigateWithFlashBannerProvider>\n    </FeatureFlagProvider>\n  )\n}\n\ntry{ App.displayName ||= 'App' } catch {}","import {Heading, Box, Label, Text} from '@primer/react'\nimport type {ReactNode} from 'react'\n\ninterface Props {\n  action?: ReactNode\n  subtext?: string\n  text: string\n}\n\nexport function Header({action, subtext, text}: Props) {\n  return (\n    <div>\n      <header className=\"Subhead\" style={{marginBottom: subtext ? '8px' : 0}}>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            width: '100%',\n          }}\n        >\n          <Heading as=\"h2\" sx={{font: 'var(--text-subtitle-shorthand)'}} className=\"Subhead-heading\">\n            {text}\n          </Heading>\n          <Box sx={{alignItems: 'center', display: 'flex', gap: '24px'}}>\n            <Label variant=\"success\">Beta</Label>\n\n            {action}\n          </Box>\n        </Box>\n      </header>\n\n      {subtext && (\n        <Text as=\"p\" sx={{color: 'var(--fgColor-muted, var(--color-muted-fg))', mb: 0}}>\n          {subtext}\n        </Text>\n      )}\n    </div>\n  )\n}\n\ntry{ Header.displayName ||= 'Header' } catch {}","import type {PipelineItem, PipelineStatus} from './types'\n\n// States where the ability to cancel the pipeline should show up\nconst cancelableStates: PipelineStatus[] = [\n  'PIPELINE_STATUS_UNSPECIFIED',\n  'PIPELINE_STATUS_ENQUEUED',\n  'PIPELINE_STATUS_STARTED',\n]\n\nexport function isPipelineCancelable({status}: PipelineItem): boolean {\n  return cancelableStates.includes(status)\n}\n\n// States where the UI should poll for updates\nconst pollableStates: PipelineStatus[] = [\n  'PIPELINE_STATUS_UNSPECIFIED',\n  'PIPELINE_STATUS_ENQUEUED',\n  'PIPELINE_STATUS_STARTED',\n  'PIPELINE_STATUS_CANCELING',\n  'PIPELINE_STATUS_DELETING',\n]\n\nexport function isPipelinePollable({status}: PipelineItem): boolean {\n  return pollableStates.includes(status)\n}\n\n// If this is appended, make sure `cancelableStates` and `pollableStates` above are modified as necessary\nexport const statusTextMap: Record<PipelineStatus, string> = {\n  PIPELINE_STATUS_UNSPECIFIED: 'Pending',\n  PIPELINE_STATUS_ENQUEUED: 'Pending',\n  PIPELINE_STATUS_STARTED: 'Training',\n  PIPELINE_STATUS_COMPLETED: 'Ready',\n  PIPELINE_STATUS_FAILED: 'Failed',\n  PIPELINE_STATUS_CANCELING: 'Canceling',\n  PIPELINE_STATUS_CANCELED: 'Canceled',\n  PIPELINE_STATUS_INACTIVE: 'Inactive',\n  PIPELINE_STATUS_DELETING: 'Deleting',\n  PIPELINE_STATUS_DELETED: 'Deleted',\n}\n\nexport const deployedText = 'Deployed'\n","import {Box} from '@primer/react'\n\ninterface Props {\n  'aria-label'?: string\n  size: number\n}\n\nexport function RadarCircle({'aria-label': ariaLabel, size}: Props) {\n  return (\n    <Box sx={{height: `${size}px`, width: `${size}px`}}>\n      <svg\n        aria-label={ariaLabel ?? 'Currently running'}\n        className=\"anim-rotate\"\n        fill=\"none\"\n        height=\"100%\"\n        viewBox=\"0 0 16 16\"\n        width=\"100%\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fill=\"none\"\n          stroke=\"#DBAB0A\"\n          strokeWidth=\"2\"\n          d=\"M3.05 3.05a7 7 0 1 1 9.9 9.9 7 7 0 0 1-9.9-9.9Z\"\n          opacity=\".5\"\n        />\n        <path fill=\"#DBAB0A\" fillRule=\"evenodd\" d=\"M8 4a4 4 0 1 0 0 8 4 4 0 0 0 0-8Z\" clipRule=\"evenodd\" />\n        <path fill=\"#DBAB0A\" d=\"M14 8a6 6 0 0 0-6-6V0a8 8 0 0 1 8 8h-2Z\" />\n      </svg>\n    </Box>\n  )\n}\n\ntry{ RadarCircle.displayName ||= 'RadarCircle' } catch {}","import type {PipelineStatus} from '../../../../types'\nimport {CheckCircleFillIcon, CheckCircleIcon, StopIcon, XCircleFillIcon} from '@primer/octicons-react'\nimport {RadarCircle} from '../../../../components/RadarCircle'\nimport type {OcticonProps} from '@primer/react'\n\ntype Icon = OcticonProps['icon']\n\ninterface LeadingVisual {\n  color?: string\n  icon: Icon\n  label: string\n}\ntype LeadingVisualMap = Record<PipelineStatus, LeadingVisual>\n\nexport const leadingVisualMap: LeadingVisualMap = {\n  PIPELINE_STATUS_UNSPECIFIED: {\n    icon: RadarCircle,\n    label: 'Unspecified',\n  },\n  PIPELINE_STATUS_ENQUEUED: {\n    icon: RadarCircle,\n    label: 'Enqueued',\n  },\n  PIPELINE_STATUS_STARTED: {\n    icon: RadarCircle,\n    label: 'Started',\n  },\n  PIPELINE_STATUS_COMPLETED: {\n    color: 'var(--fgColor-muted, var(--color-fg-muted))',\n    icon: CheckCircleIcon,\n    label: 'Completed',\n  },\n  PIPELINE_STATUS_FAILED: {\n    color: 'var(--fgColor-danger, var(--color-danger-fg))',\n    icon: XCircleFillIcon,\n    label: 'Failed',\n  },\n  PIPELINE_STATUS_CANCELING: {\n    icon: StopIcon,\n    label: 'Canceling',\n  },\n  PIPELINE_STATUS_CANCELED: {\n    icon: StopIcon,\n    label: 'Canceled',\n  },\n  PIPELINE_STATUS_INACTIVE: {\n    icon: StopIcon,\n    label: 'Inactive',\n  },\n  PIPELINE_STATUS_DELETING: {\n    icon: StopIcon,\n    label: 'Deleting',\n  },\n  PIPELINE_STATUS_DELETED: {\n    icon: StopIcon,\n    label: 'Deleted',\n  },\n}\n\nexport const deployedLeadingVisual: LeadingVisual = {\n  color: 'var(--fgColor-success, var(--color-success-fg))',\n  icon: CheckCircleFillIcon,\n  label: 'Deployed',\n}\n","import {useState} from 'react'\nimport {useQuery} from '@tanstack/react-query'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport {isPipelinePollable} from '../utils'\nimport type {PipelineDetails, PipelineItem} from '../types'\nimport type {ShowPathJsonResponse} from '../routes/Show/types'\n\ninterface PipelineItemProps {\n  pipeline: PipelineItem\n}\n\ninterface PipelineDetailsProps {\n  pipeline: PipelineDetails\n}\n\ntype Props = PipelineItemProps | PipelineDetailsProps\n\nconst INTERVAL_MS = 10000\n\n// If a PipelineDetails is provided, the response will always be a PipelineDetails because it was a PipelineDetails\n// before and after polling.\n// If a PipelineItem is provided, the response will be either a PipelineItem (before polling) or a PipelineDetails\n// (after polling).\nexport function usePipelinePolling(props: PipelineDetailsProps): PipelineDetails\nexport function usePipelinePolling(props: PipelineItemProps): PipelineItem | PipelineDetails\n\nexport function usePipelinePolling({pipeline: routePayloadPipeline}: Props) {\n  const [initialPipeline] = useState(routePayloadPipeline)\n\n  const isPollingEnabled = isPipelinePollable(initialPipeline)\n  const {showPath} = initialPipeline\n\n  const {data: updatedPipeline} = useQuery({\n    enabled: !!isPollingEnabled,\n    queryKey: ['pipeline-poll', showPath],\n    queryFn: async () => {\n      const response: Response = await verifiedFetch(showPath)\n      if (!response.ok) throw new Error(`HTTP ${response.status}${response.statusText}`)\n\n      const {payload} = (await response.json()) as ShowPathJsonResponse\n      return payload.pipelineDetails\n    },\n    refetchInterval: INTERVAL_MS,\n  })\n\n  if (!updatedPipeline) return initialPipeline\n\n  // If polling has stopped, we want to ensure all components are rendered correctly. The simplest way to do this\n  // is to reload the page.\n  if (!isPipelinePollable(updatedPipeline)) window.location.reload()\n\n  return updatedPipeline\n}\n","import {useCallback, useState} from 'react'\n\ninterface UseOverlayControls {\n  close: () => void\n  isOpen: boolean\n  open: () => void\n}\n\nexport function useOverlayControls(): UseOverlayControls {\n  const [isOpen, setIsOpen] = useState(false)\n  const close = useCallback(() => setIsOpen(false), [])\n  const open = useCallback(() => setIsOpen(true), [])\n\n  return {close, isOpen, open}\n}\n","import {createContext, useCallback, useContext, useMemo, useState, type PropsWithChildren} from 'react'\nimport {useOverlayControls} from '../hooks/use-overlay-controls'\nimport {Dialog} from '@primer/react/drafts'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {defaultErrorMessage, useNavigateWithFlashBanner} from '../features/NavigateWithFlashBanner'\n\ninterface IContext {\n  closeDialog: () => void\n  isSubmitting: boolean\n  onSubmit: () => Promise<void>\n  openDialogForCancelPath: (cancelPath: string) => void\n}\n\nconst Context = createContext<IContext | null>(null)\n\ninterface CancelResponse {\n  payload: {\n    message: string\n    redirect_url: string\n  }\n}\n\nexport function CancelDialogProvider({children}: PropsWithChildren) {\n  const {close: closeDialog, isOpen: isDialogOpen, open: openDialog} = useOverlayControls()\n  const [cancelPath, setCancelPath] = useState<string | null>(null)\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const {setFlashState} = useNavigateWithFlashBanner()\n\n  const openDialogForCancelPath = useCallback(\n    (newCancelPath: string) => {\n      setCancelPath(newCancelPath)\n      openDialog()\n    },\n    [openDialog],\n  )\n\n  const onSubmit = useCallback(async () => {\n    if (!cancelPath) return\n    if (isSubmitting) return\n\n    try {\n      setIsSubmitting(true)\n\n      const response = await verifiedFetchJSON(cancelPath, {method: 'DELETE'})\n\n      if (response.ok) {\n        const {\n          payload: {redirect_url},\n        } = (await response.json()) as CancelResponse\n        window.location.href = redirect_url\n      } else {\n        const errors = await response.json()\n        setFlashState({message: defaultErrorMessage, variant: 'danger'})\n        setIsSubmitting(false)\n        closeDialog()\n        throw new Error(errors)\n      }\n    } catch (err) {\n      setFlashState({message: defaultErrorMessage, variant: 'danger'})\n      setIsSubmitting(false)\n      closeDialog()\n      throw new Error(String(err))\n    }\n  }, [cancelPath, closeDialog, isSubmitting, setFlashState])\n\n  const value = useMemo(\n    () => ({closeDialog, isSubmitting, onSubmit, openDialogForCancelPath}),\n    [closeDialog, isSubmitting, onSubmit, openDialogForCancelPath],\n  )\n\n  return (\n    <Context.Provider value={value}>\n      {isDialogOpen && <CancelDialog />}\n      {children}\n    </Context.Provider>\n  )\n}\n\nexport function useCancelDialog(): IContext {\n  const context = useContext(Context)\n\n  if (!context) {\n    throw new Error('useCancelDialog must be used within <CancelDialogProvider />')\n  }\n\n  return context\n}\n\nfunction CancelDialog() {\n  const {closeDialog, isSubmitting, onSubmit} = useCancelDialog()\n\n  return (\n    <Dialog\n      footerButtons={[{buttonType: 'danger', content: 'Cancel training', inactive: isSubmitting, onClick: onSubmit}]}\n      onClose={closeDialog}\n      renderBody={() => (\n        <Dialog.Body>\n          <span>\n            Canceling your custom model training will stop all the current progress. Are you sure you want to proceed?\n          </span>\n        </Dialog.Body>\n      )}\n      renderFooter={({footerButtons}) => {\n        return (\n          <Dialog.Footer sx={{'@media screen and (max-height: 400px)': {p: 2}}}>\n            {footerButtons && <Dialog.Buttons buttons={footerButtons} />}\n          </Dialog.Footer>\n        )\n      }}\n      sx={{'@media screen and (max-height: 400px)': {maxHeight: 'calc(100vh - 8px)'}}}\n      title=\"Cancel custom model training\"\n      width=\"large\"\n    />\n  )\n}\n\ntry{ Context.displayName ||= 'Context' } catch {}\ntry{ CancelDialogProvider.displayName ||= 'CancelDialogProvider' } catch {}\ntry{ CancelDialog.displayName ||= 'CancelDialog' } catch {}","import type {PipelineItem} from '../../../../types'\nimport {ListItem} from '@github-ui/list-view/ListItem'\nimport {ListItemTitle} from '@github-ui/list-view/ListItemTitle'\nimport {ListItemMainContent} from '@github-ui/list-view/ListItemMainContent'\nimport {ListItemDescription} from '@github-ui/list-view/ListItemDescription'\nimport {ListItemActionBar} from '@github-ui/list-view/ListItemActionBar'\nimport {ActionList, Octicon} from '@primer/react'\nimport {ListItemLeadingContent} from '@github-ui/list-view/ListItemLeadingContent'\nimport {ListItemLeadingVisual} from '@github-ui/list-view/ListItemLeadingVisual'\nimport {RepoIcon} from '@primer/octicons-react'\nimport {ListItemDescriptionItem} from '@github-ui/list-view/ListItemDescriptionItem'\nimport {ListItemMetadata} from '@github-ui/list-view/ListItemMetadata'\nimport {useNavigateWithFlashBanner} from '../../../../features/NavigateWithFlashBanner'\nimport {isPipelineCancelable} from '../../../../utils'\nimport {format, formatDistance} from 'date-fns'\nimport {deployedLeadingVisual, leadingVisualMap} from './leading-visual-map'\nimport {usePipelinePolling} from '../../../../hooks/use-pipeline-polling'\nimport {useCancelDialog} from '../../../../components/CancelDialogProvider'\nimport {ListItemTrailingBadge} from '@github-ui/list-view/ListItemTrailingBadge'\n\ninterface Props {\n  isDeployedPipeline: boolean\n  org: string\n  pipeline: PipelineItem\n}\n\nconst deployedTrailingBadges = [<ListItemTrailingBadge key={0} title=\"Deployed\" variant=\"success\" />]\n\nexport function PipelineListItem({isDeployedPipeline, org, pipeline: initialPipeline}: Props) {\n  const {navigate} = useNavigateWithFlashBanner()\n  const pipeline = usePipelinePolling({pipeline: initialPipeline})\n  const {openDialogForCancelPath} = useCancelDialog()\n\n  const {actorLogin, cancelPath, createdAt, repositoryCount, status} = pipeline\n\n  const canCancel = isPipelineCancelable(pipeline)\n  const handleClickCancel = () => openDialogForCancelPath(cancelPath)\n  const handleClickViewDetails = () => navigate(pipeline.showPath)\n\n  const viewDetails = {\n    key: 'view-details',\n    render: () => <ActionList.Item onSelect={handleClickViewDetails}>View details</ActionList.Item>,\n  }\n  const cancel = {\n    key: 'cancel',\n    render: () => (\n      <ActionList.Item onSelect={handleClickCancel} variant=\"danger\">\n        Cancel training\n      </ActionList.Item>\n    ),\n  }\n  const staticMenuActions = canCancel ? [viewDetails, cancel] : [viewDetails]\n\n  const {color, icon, label} = isDeployedPipeline ? deployedLeadingVisual : leadingVisualMap[status]\n\n  const creator = actorLogin || 'System'\n  const timeAgoInWords = createdAt ? formatDistance(Date.parse(createdAt), Date.now(), {addSuffix: true}) : ''\n  const createdAtAriaLabel = createdAt ? format(Date.parse(createdAt), \"EEEE, MMMM do, yyyy 'at' h:mm aaaa\") : ''\n\n  return (\n    <ListItem\n      aria-label={createdAtAriaLabel ? `Pipeline created on ${createdAtAriaLabel}` : undefined}\n      metadata={\n        <ListItemMetadata>\n          <RepoIcon aria-label=\"Repository count\" size={16} /> {repositoryCount.toLocaleString()}\n        </ListItemMetadata>\n      }\n      secondaryActions={<ListItemActionBar label=\"pipeline actions\" staticMenuActions={staticMenuActions} />}\n      title={\n        <ListItemTitle\n          trailingBadges={isDeployedPipeline ? deployedTrailingBadges : undefined}\n          value={`${org} model`}\n        />\n      }\n    >\n      <ListItemLeadingContent>\n        <ListItemLeadingVisual>\n          <Octicon aria-label={label} icon={icon} sx={{color, height: '16px', width: '16px'}} />\n        </ListItemLeadingVisual>\n      </ListItemLeadingContent>\n      <ListItemMainContent>\n        <ListItemDescription>\n          <ListItemDescriptionItem>\n            {creator} created {timeAgoInWords}\n          </ListItemDescriptionItem>\n        </ListItemDescription>\n      </ListItemMainContent>\n    </ListItem>\n  )\n}\n\ntry{ PipelineListItem.displayName ||= 'PipelineListItem' } catch {}","import {createContext, useCallback, useContext, useMemo, useState, type PropsWithChildren} from 'react'\nimport {useOverlayControls} from '../hooks/use-overlay-controls'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {defaultErrorMessage, useNavigateWithFlashBanner} from '../features/NavigateWithFlashBanner'\nimport {Dialog} from '@primer/react/drafts'\nimport type {PipelineDetails} from '../types'\n\ninterface IContext {\n  closeDialog: () => void\n  isSubmitting: boolean\n  onSubmit: () => Promise<void>\n  openDialog: () => void\n}\n\nconst Context = createContext<IContext | null>(null)\n\ninterface Props extends PropsWithChildren {\n  pipelineDetails: PipelineDetails\n}\n\ninterface DestroyResponse {\n  payload: {\n    message: string\n    redirect_url: string\n  }\n}\n\ninterface DestroyErrorResponse {\n  errors: string\n}\n\nexport function DeleteDialogProvider({children, pipelineDetails}: Props) {\n  const {close: closeDialog, isOpen: isDialogOpen, open: openDialog} = useOverlayControls()\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const {setFlashState} = useNavigateWithFlashBanner()\n  const {destroyPath} = pipelineDetails\n\n  const onSubmit = useCallback(async () => {\n    if (isSubmitting) return\n\n    try {\n      setIsSubmitting(true)\n\n      const response = await verifiedFetchJSON(destroyPath, {method: 'DELETE'})\n\n      if (response.ok) {\n        const {\n          payload: {redirect_url},\n        } = (await response.json()) as DestroyResponse\n        window.location.href = redirect_url\n      } else {\n        const {errors} = (await response.json()) as DestroyErrorResponse\n        const message = errors ?? defaultErrorMessage\n        setFlashState({message, variant: 'danger'})\n        setIsSubmitting(false)\n        throw new Error(errors)\n      }\n    } catch (err) {\n      setFlashState({message: defaultErrorMessage, variant: 'danger'})\n      setIsSubmitting(false)\n      throw new Error(String(err))\n    }\n  }, [destroyPath, isSubmitting, setFlashState])\n\n  const value = useMemo(\n    () => ({closeDialog, isSubmitting, onSubmit, openDialog}),\n    [closeDialog, isSubmitting, onSubmit, openDialog],\n  )\n\n  return (\n    <Context.Provider value={value}>\n      {isDialogOpen && <DeleteModelDialog />}\n      {children}\n    </Context.Provider>\n  )\n}\n\nexport function useDeleteModel(): IContext {\n  const context = useContext(Context)\n\n  if (!context) {\n    throw new Error('useDeleteModel must be used within <DeleteModelProvider />')\n  }\n\n  return context\n}\n\nfunction DeleteModelDialog() {\n  const {closeDialog, isSubmitting, onSubmit} = useDeleteModel()\n\n  return (\n    <Dialog\n      footerButtons={[\n        {buttonType: 'danger', content: 'Delete custom model', inactive: isSubmitting, onClick: onSubmit},\n      ]}\n      onClose={closeDialog}\n      renderBody={() => (\n        <Dialog.Body>\n          <span>\n            Deleting your custom model will cancel the training in process. Training a new custom model will take hours.\n            Are you sure you want to proceed?\n          </span>\n        </Dialog.Body>\n      )}\n      renderFooter={({footerButtons}) => {\n        return (\n          <Dialog.Footer sx={{'@media screen and (max-height: 400px)': {p: 2}}}>\n            {footerButtons && <Dialog.Buttons buttons={footerButtons} />}\n          </Dialog.Footer>\n        )\n      }}\n      sx={{'@media screen and (max-height: 400px)': {maxHeight: 'calc(100vh - 8px)'}}}\n      title=\"Delete custom model\"\n      width=\"large\"\n    />\n  )\n}\n\ntry{ Context.displayName ||= 'Context' } catch {}\ntry{ DeleteDialogProvider.displayName ||= 'DeleteDialogProvider' } catch {}\ntry{ DeleteModelDialog.displayName ||= 'DeleteModelDialog' } catch {}","import {createContext, useContext, useMemo, type PropsWithChildren} from 'react'\nimport type {PipelineDetails} from '../../types'\nimport {CancelDialogProvider} from '../../components/CancelDialogProvider'\nimport {DeleteDialogProvider} from '../../components/DeleteDialogProvider'\nimport {usePipelinePolling} from '../../hooks/use-pipeline-polling'\nimport {isPipelineCancelable, isPipelinePollable} from '../../utils'\n\ninterface PipelineWithLogic extends PipelineDetails {\n  canCancel: boolean\n  canDelete: boolean\n  canRetrain: boolean\n}\n\ninterface IContext {\n  adminEmail: string\n  bannerPipeline: PipelineWithLogic\n  canViewDetails: boolean\n  cardPipeline: PipelineWithLogic\n  hasAnyDeployed: boolean\n  isStale: boolean\n  isViewingDetails: boolean\n  org: string\n}\n\ninterface Props extends PropsWithChildren {\n  adminEmail: string\n  hasAnyDeployed: boolean\n  isStale?: boolean\n  isViewingDetails?: boolean\n  org: string\n  pipelineForBanner: PipelineDetails\n  pipelineForCard: PipelineDetails\n  withinRateLimit: boolean\n}\n\nconst Context = createContext<IContext | null>(null)\n\nexport function PipelineDetailsProvider({\n  adminEmail,\n  children,\n  hasAnyDeployed,\n  isStale = false,\n  isViewingDetails = false,\n  org,\n  pipelineForBanner: initialPipelineForBanner,\n  pipelineForCard: initialPipelineDetails,\n  withinRateLimit,\n}: Props) {\n  const pipelineForBanner = usePipelinePolling({pipeline: initialPipelineForBanner})\n  const pipelineForCard = usePipelinePolling({pipeline: initialPipelineDetails})\n\n  const bannerPipeline = useMemo(() => {\n    const canCancel = isPipelineCancelable(pipelineForBanner)\n    const canDelete = withinRateLimit && pipelineForBanner.status === 'PIPELINE_STATUS_COMPLETED'\n    const canRetrain = withinRateLimit && !isPipelinePollable(pipelineForBanner)\n\n    return {...pipelineForBanner, canCancel, canDelete, canRetrain}\n  }, [pipelineForBanner, withinRateLimit])\n\n  const cardPipeline = useMemo(() => {\n    const canCancel = isPipelineCancelable(pipelineForCard)\n    const canDelete = withinRateLimit && pipelineForCard.status === 'PIPELINE_STATUS_COMPLETED'\n    const canRetrain = withinRateLimit && !isPipelinePollable(pipelineForCard)\n\n    return {...pipelineForCard, canCancel, canDelete, canRetrain}\n  }, [pipelineForCard, withinRateLimit])\n\n  const canViewDetails = !isViewingDetails\n\n  const value = useMemo(\n    () => ({\n      adminEmail,\n      bannerPipeline,\n      canViewDetails,\n      cardPipeline,\n      children,\n      hasAnyDeployed,\n      isStale,\n      isViewingDetails,\n      org,\n      pipelineForBanner,\n      pipelineForCard,\n    }),\n    [\n      adminEmail,\n      bannerPipeline,\n      canViewDetails,\n      cardPipeline,\n      children,\n      hasAnyDeployed,\n      isStale,\n      isViewingDetails,\n      org,\n      pipelineForBanner,\n      pipelineForCard,\n    ],\n  )\n\n  return (\n    <CancelDialogProvider>\n      <DeleteDialogProvider pipelineDetails={pipelineForCard}>\n        <Context.Provider value={value}>{children}</Context.Provider>\n      </DeleteDialogProvider>\n    </CancelDialogProvider>\n  )\n}\n\nexport function usePipelineDetails() {\n  const context = useContext(Context)\n\n  if (!context) {\n    throw new Error('usePipelineDetails must be used within <PipelineDetailsProvider />')\n  }\n\n  return context\n}\n\ntry{ Context.displayName ||= 'Context' } catch {}\ntry{ PipelineDetailsProvider.displayName ||= 'PipelineDetailsProvider' } catch {}","export const isListItemStyle = {borderLeft: 0, borderRadius: 0, borderRight: 0}\n","import {Banner} from '@primer/react/drafts'\nimport type {PropsWithChildren} from 'react'\n\ninterface Props extends PropsWithChildren {\n  isListItem: boolean\n}\n\nexport function BannerTitle({children, isListItem}: Props) {\n  // The default Title is a h2 which is normally fine since Banner's typically go under a h1,\n  // but when it's a ListView, the ListViewMetadata is already an h2, so we need to bump it up to an h3\n  // otherwise, we get an a11y error for skipping heading levels.\n  // Also, know that <Banner hideTitle /> does not actually prevent the title from rendering, it just hides it.\n  // So `hideTitle` will not work.\n  const as = isListItem ? 'h3' : 'h2'\n\n  return (\n    <Banner.Title as={as} style={{display: 'none'}}>\n      {children}\n    </Banner.Title>\n  )\n}\n\ntry{ BannerTitle.displayName ||= 'BannerTitle' } catch {}","import {Link, Text} from '@primer/react'\nimport {Banner} from '@primer/react/drafts'\nimport {useNavigateWithFlashBanner} from '../NavigateWithFlashBanner'\nimport {usePipelineDetails} from '../PipelineDetails'\nimport {isListItemStyle} from './shared'\nimport {BannerTitle} from './BannerTitle'\n\ninterface Props {\n  isListItem?: boolean\n}\n\nexport function CanceledBanner({isListItem = false}: Props) {\n  const {\n    hasAnyDeployed,\n    bannerPipeline: {canRetrain, editPath},\n  } = usePipelineDetails()\n  const {navigate} = useNavigateWithFlashBanner()\n\n  const secondSentence = canRetrain ? (\n    <>\n      Please contact support for help or{' '}\n      <Link href=\"#\" inline onClick={() => navigate(editPath)} sx={{cursor: 'pointer'}}>\n        start again\n      </Link>\n    </>\n  ) : (\n    <>Please contact support for help</>\n  )\n\n  return (\n    <Banner\n      description={\n        <>\n          <BannerTitle isListItem={isListItem}>Canceled</BannerTitle>\n          <Text sx={{wordBreak: 'break-word'}}>\n            Training run was canceled. {secondSentence}.{' '}\n            {hasAnyDeployed && <span>Your existing model is still deployed.</span>}\n          </Text>\n        </>\n      }\n      style={isListItem ? isListItemStyle : undefined}\n      variant=\"warning\"\n    />\n  )\n}\n\ntry{ CanceledBanner.displayName ||= 'CanceledBanner' } catch {}","import {Banner} from '@primer/react/drafts'\nimport {useNavigateWithFlashBanner} from '../NavigateWithFlashBanner'\nimport {usePipelineDetails} from '../PipelineDetails'\nimport {isListItemStyle} from './shared'\nimport {BannerTitle} from './BannerTitle'\nimport {Text} from '@primer/react'\n\ninterface Props {\n  isListItem?: boolean\n}\n\nexport function FailedBanner({isListItem = false}: Props) {\n  const {\n    canViewDetails,\n    bannerPipeline: {canRetrain, editPath, showPath},\n    hasAnyDeployed,\n    org,\n  } = usePipelineDetails()\n  const {navigate} = useNavigateWithFlashBanner()\n\n  const handleRetrainClick = () => navigate(editPath)\n\n  let nextSteps = ''\n  if (canViewDetails) nextSteps += 'review the recent training run'\n  if (canViewDetails && canRetrain) nextSteps += ' or '\n  if (canRetrain) nextSteps += 'try retraining the model'\n  if (nextSteps) nextSteps = `Please ${nextSteps}.`\n\n  return (\n    <Banner\n      description={\n        <>\n          <BannerTitle isListItem={isListItem}>Failed</BannerTitle>\n          <Text sx={{wordBreak: 'break-word'}}>\n            The {org} model training has failed.{' '}\n            {hasAnyDeployed ? (\n              <span>Your existing model is still deployed.</span>\n            ) : (\n              <span>There is currently no deployed model available.</span>\n            )}{' '}\n            {nextSteps} For more help please contact support.\n          </Text>\n        </>\n      }\n      primaryAction={\n        canRetrain ? <Banner.PrimaryAction onClick={handleRetrainClick}>Try again</Banner.PrimaryAction> : undefined\n      }\n      secondaryAction={\n        canViewDetails ? (\n          <Banner.SecondaryAction onClick={() => navigate(showPath)}>View training run</Banner.SecondaryAction>\n        ) : undefined\n      }\n      style={isListItem ? isListItemStyle : undefined}\n      variant=\"critical\"\n    />\n  )\n}\n\ntry{ FailedBanner.displayName ||= 'FailedBanner' } catch {}","import {Text} from '@primer/react'\nimport {Banner} from '@primer/react/drafts'\nimport {usePipelineDetails} from '../PipelineDetails'\nimport {isListItemStyle} from './shared'\nimport {BannerTitle} from './BannerTitle'\n\ninterface Props {\n  isListItem?: boolean\n}\n\nexport function InProgressBanner({isListItem = false}: Props) {\n  const {adminEmail, hasAnyDeployed} = usePipelineDetails()\n\n  return (\n    <Banner\n      description={\n        <>\n          <BannerTitle isListItem={isListItem}>Training</BannerTitle>\n          <Text sx={{wordBreak: 'break-word'}}>\n            This may take awhile.{' '}\n            {!!adminEmail && (\n              <span>\n                We&apos;ll notify you at <Text sx={{fontWeight: 'semibold'}}>{adminEmail}</Text> once training is\n                complete.\n              </span>\n            )}{' '}\n            {hasAnyDeployed && <span>Your existing model is still deployed.</span>}\n          </Text>\n        </>\n      }\n      style={isListItem ? isListItemStyle : undefined}\n      variant=\"info\"\n    />\n  )\n}\n\ntry{ InProgressBanner.displayName ||= 'InProgressBanner' } catch {}","import {Box} from '@primer/react'\nimport type {BoxProps} from '@primer/react'\n\nexport function BorderBox({sx, ...props}: BoxProps) {\n  return (\n    <Box\n      sx={{\n        border: '1px solid var(--borderColor-default, var(--color-border-default))',\n        borderRadius: '8px',\n        p: '16px',\n        ...sx,\n      }}\n      {...props}\n    />\n  )\n}\n\ntry{ BorderBox.displayName ||= 'BorderBox' } catch {}","import {RocketIcon} from '@primer/octicons-react'\nimport {Box, CircleBadge, Text} from '@primer/react'\nimport {BorderBox} from '../../components/BorderBox'\nimport {usePipelineDetails} from '../PipelineDetails'\n\nexport function SuccessBanner() {\n  const {org} = usePipelineDetails()\n\n  return (\n    <BorderBox\n      sx={{\n        backgroundColor: 'transparent',\n        columnGap: '16px',\n        display: 'grid',\n        gridTemplateAreas: `'visual message'`,\n        gridTemplateColumns: 'min-content 1fr',\n        gridTemplateRows: 'min-content',\n      }}\n    >\n      <Box\n        sx={{\n          alignSelf: 'start',\n          display: 'grid',\n          gridArea: 'visual',\n          paddingBlock: 'var(--base-size-8)',\n        }}\n      >\n        <CircleBadge size={32} sx={{backgroundColor: 'var(--bgColor-done-muted, var(--color-done-subtle))'}}>\n          <CircleBadge.Icon icon={RocketIcon} sx={{color: 'var(--fgColor-done, var(--color-done-fg))'}} />\n        </CircleBadge>\n      </Box>\n      <Box\n        sx={{\n          alignSelf: 'center',\n          display: 'flex',\n          flexDirection: 'column',\n          fontSize: 1,\n          gap: '4px',\n          gridArea: 'message',\n          lineHeight: '1.5',\n        }}\n      >\n        <Text sx={{fontSize: '16px', fontWeight: 'semibold', lineHeight: '24px'}}>\n          {org} model has been deployed to {org}\n        </Text>\n        <Text sx={{color: 'var(--fgColor-muted, var(--color-fg-muted))', wordBreak: 'break-word'}}>\n          Congratulations! Your first custom model has been successfully trained and deployed. Your team can now start\n          using it in your IDE. You can come back anytime to retrain your model.\n        </Text>\n      </Box>\n    </BorderBox>\n  )\n}\n\ntry{ SuccessBanner.displayName ||= 'SuccessBanner' } catch {}","import {isPipelineCancelable} from '../../utils'\nimport {usePipelineDetails} from '../PipelineDetails'\nimport {CanceledBanner} from './CanceledBanner'\nimport {FailedBanner} from './FailedBanner'\nimport {InProgressBanner} from './InProgressBanner'\nimport {SuccessBanner} from './SuccessBanner'\n\ninterface Props {\n  isListItem?: boolean\n}\n\nexport function PipelineBanner({isListItem = false}: Props) {\n  const {bannerPipeline: pipelineDetails, isStale, isViewingDetails} = usePipelineDetails()\n\n  const isInProgress = isPipelineCancelable(pipelineDetails)\n  const showFailed = pipelineDetails.status === 'PIPELINE_STATUS_FAILED' && !isStale\n  const wasCanceled = pipelineDetails.status === 'PIPELINE_STATUS_CANCELED'\n  const wasSuccessful = pipelineDetails.status === 'PIPELINE_STATUS_COMPLETED'\n  const showSuccessBanner = wasSuccessful && !isViewingDetails && !isListItem\n\n  if (isInProgress) return <InProgressBanner isListItem={isListItem} />\n  if (showFailed) return <FailedBanner isListItem={isListItem} />\n  if (wasCanceled) return <CanceledBanner isListItem={isListItem} />\n  if (showSuccessBanner) return <SuccessBanner />\n\n  return null\n}\n\ntry{ PipelineBanner.displayName ||= 'PipelineBanner' } catch {}","import {PipelineBanner} from './PipelineBanner'\n\nexport function PipelineBannerListItem() {\n  // Not wrapping this in a li will raise an a11y error since all children of a ul should be li elements\n  // The exception being if role=\"listitem\" is set, but it can't be set to that on a <section /> element.\n  return (\n    <li>\n      <PipelineBanner isListItem />\n    </li>\n  )\n}\n\ntry{ PipelineBannerListItem.displayName ||= 'PipelineBannerListItem' } catch {}","import {ListView} from '@github-ui/list-view'\nimport {ListViewMetadata} from '@github-ui/list-view/ListViewMetadata'\nimport type {PipelineDetails, PipelineItem} from '../../../../types'\nimport {PipelineListItem} from './PipelineListItem'\nimport {Box, Text} from '@primer/react'\nimport {CancelDialogProvider} from '../../../../components/CancelDialogProvider'\nimport {PipelineBannerListItem} from '../../../../features/PipelineBanner'\n\ninterface Props {\n  deployedPipeline?: PipelineDetails\n  org: string\n  pipelines: PipelineItem[]\n}\n\nexport function PipelineList({deployedPipeline, org, pipelines}: Props) {\n  const suffix = pipelines.length === 1 ? 'training run' : 'training runs'\n  const title = `${pipelines.length} ${suffix}`\n\n  return (\n    <CancelDialogProvider>\n      <Box sx={{borderStyle: 'solid', borderWidth: '1px', borderColor: 'border.default', borderRadius: '6px'}}>\n        <ListView metadata={<ListViewMetadata title={<Text sx={{fontWeight: 'normal'}}>{title}</Text>} />} title=\"\">\n          <PipelineBannerListItem />\n          {pipelines.map(pipeline => (\n            <PipelineListItem\n              key={`${pipeline.id}-${pipeline.status}`}\n              isDeployedPipeline={pipeline.id === deployedPipeline?.id}\n              org={org}\n              pipeline={pipeline}\n            />\n          ))}\n        </ListView>\n      </Box>\n    </CancelDialogProvider>\n  )\n}\n\ntry{ PipelineList.displayName ||= 'PipelineList' } catch {}","import {Box, Text} from '@primer/react'\nimport type {ReactNode} from 'react'\n\ninterface Props {\n  name: string\n  value: ReactNode\n}\n\nexport function Datum({name, value}: Props) {\n  return (\n    <Box sx={{display: 'flex', flexDirection: 'column', gap: '4px'}}>\n      <Text sx={{color: 'fg.muted', fontSize: '12px', minWidth: '128px'}}>{name}</Text>\n\n      {value}\n    </Box>\n  )\n}\n\ntry{ Datum.displayName ||= 'Datum' } catch {}","import {Text, type TextProps} from '@primer/react'\n\nexport function DatumText({children, sx, ...props}: TextProps) {\n  return (\n    <Text {...props} sx={{fontSize: '16px', fontWeight: 'semibold', lineHeight: '24px', ...sx}}>\n      {children}\n    </Text>\n  )\n}\n\ntry{ DatumText.displayName ||= 'DatumText' } catch {}","import {Box, Octicon} from '@primer/react'\nimport type {PipelineStatus} from '../../types'\nimport {Datum} from './Datum'\nimport {CheckCircleFillIcon, StopIcon, XCircleFillIcon} from '@primer/octicons-react'\nimport {deployedText, statusTextMap} from '../../utils'\nimport {DatumText} from './DatumText'\nimport {RadarCircle} from '../../components/RadarCircle'\nimport {usePipelineDetails} from '../PipelineDetails'\n\ntype IconMap = Record<PipelineStatus, JSX.Element>\n\nconst iconMap: IconMap = {\n  PIPELINE_STATUS_UNSPECIFIED: <RadarCircle aria-label=\"Unspecified\" size={16} />,\n  PIPELINE_STATUS_ENQUEUED: <RadarCircle aria-label=\"Enqueued\" size={16} />,\n  PIPELINE_STATUS_STARTED: <RadarCircle aria-label=\"Started\" size={16} />,\n  PIPELINE_STATUS_COMPLETED: (\n    <Octicon\n      aria-label=\"Completed\"\n      icon={CheckCircleFillIcon}\n      size={16}\n      sx={{color: 'var(--fgColor-success, var(--color-success-fg))'}}\n    />\n  ),\n  PIPELINE_STATUS_FAILED: (\n    <Octicon\n      aria-label=\"Failed\"\n      icon={XCircleFillIcon}\n      size={16}\n      sx={{color: 'var(--fgColor-danger, var(--color-danger-fg))'}}\n    />\n  ),\n  PIPELINE_STATUS_CANCELING: <Octicon aria-label=\"Canceling\" icon={StopIcon} size={16} />,\n  PIPELINE_STATUS_CANCELED: <Octicon aria-label=\"Canceled\" icon={StopIcon} size={16} />,\n  PIPELINE_STATUS_INACTIVE: <Octicon aria-label=\"Inactive\" icon={StopIcon} size={16} />,\n  PIPELINE_STATUS_DELETING: <Octicon aria-label=\"Deleting\" icon={StopIcon} size={16} />,\n  PIPELINE_STATUS_DELETED: <Octicon aria-label=\"Deleted\" icon={StopIcon} size={16} />,\n}\n\nexport function StatusDatum() {\n  const {\n    cardPipeline: {isDeployed, status},\n  } = usePipelineDetails()\n  const icon = iconMap[status]\n  const text = isDeployed ? deployedText : statusTextMap[status]\n\n  return (\n    <Datum\n      name=\"Status\"\n      value={\n        <Box sx={{alignItems: 'center', display: 'flex', gap: '4px'}}>\n          {icon}\n          <DatumText>{text}</DatumText>\n        </Box>\n      }\n    />\n  )\n}\n\ntry{ StatusDatum.displayName ||= 'StatusDatum' } catch {}","import {Box, Text} from '@primer/react'\nimport type {Language} from '../../types'\n\ninterface LanguageWithColorProps {\n  languages: Language[]\n}\n\nexport function LanguagesWithColor({languages}: LanguageWithColorProps) {\n  return (\n    <Box sx={{display: 'flex', gap: '10px', flexWrap: 'wrap', padding: '4px'}}>\n      {languages.map(language => (\n        <Box key={language.id} sx={{alignItems: 'center', display: 'flex', gap: '8px'}}>\n          <Box sx={{backgroundColor: language.color, borderRadius: '9999px', height: '10px', width: '10px'}} />\n          <Box sx={{alignItems: 'center', display: 'flex', gap: '4px'}}>\n            <Text sx={{fontSize: '12px', fontWeight: 600}}>{language.name}</Text>\n          </Box>\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\ntry{ LanguagesWithColor.displayName ||= 'LanguagesWithColor' } catch {}","import {Spinner} from '@primer/react'\nimport {ListView} from '@github-ui/list-view'\nimport {ListItemTitle} from '@github-ui/list-view/ListItemTitle'\nimport {ListItem} from '@github-ui/list-view/ListItem'\nimport {ListItemLeadingContent} from '@github-ui/list-view/ListItemLeadingContent'\nimport {RepoIcon} from '@primer/octicons-react'\nimport type {PipelineRepo} from '../../types'\nimport {ListItemLeadingVisual} from '@github-ui/list-view/ListItemLeadingVisual'\n\ninterface Props {\n  isLoading: boolean\n  repos: PipelineRepo[] | undefined\n}\n\nexport function RepoListView({isLoading, repos}: Props) {\n  if (isLoading) return <Spinner size=\"small\" sx={{m: '10px', mb: '11px'}} />\n\n  return (\n    <ListView title=\"Repositories\" variant=\"compact\">\n      {repos?.length ? (\n        repos.map(r => (\n          <ListItem key={r.id} sx={{'&:hover': {backgroundColor: 'inherit'}}} title={<ListItemTitle value={r.name} />}>\n            <ListItemLeadingContent>\n              <ListItemLeadingVisual aria-label=\"Repository\" color=\"fg.muted\" icon={RepoIcon} />\n            </ListItemLeadingContent>\n          </ListItem>\n        ))\n      ) : (\n        <ListItem title={<ListItemTitle value=\"No repositories matching filter\" />} />\n      )}\n    </ListView>\n  )\n}\n\ntry{ RepoListView.displayName ||= 'RepoListView' } catch {}","import {Banner} from '@primer/react/drafts'\n\ninterface Props {\n  numDeleted: number\n}\n\nexport function DeletedReposBanner({numDeleted}: Props) {\n  const numDeletedReposWord = numDeleted === 1 ? 'repository' : 'repositories'\n\n  const content = `${numDeleted} ${numDeletedReposWord} used in training has since been deleted.`\n\n  return (\n    <Banner\n      description={\n        <>\n          <Banner.Title style={{display: 'none'}}>{content}</Banner.Title>\n          <span>{content}</span>\n        </>\n      }\n      variant=\"info\"\n    />\n  )\n}\n\ntry{ DeletedReposBanner.displayName ||= 'DeletedReposBanner' } catch {}","import {debounce} from '@github/mini-throttle'\nimport {useState, useMemo, type ChangeEventHandler} from 'react'\n\ninterface UseDebouncedQuery {\n  onTextInputChange: ChangeEventHandler<HTMLInputElement>\n  query: string\n  textInputValue: string\n}\n\nexport function useDebouncedQuery(): UseDebouncedQuery {\n  const [textInputValue, setTextInputValue] = useState('')\n  const [query, setQuery] = useState('')\n  const debouncedSetQuery = useMemo(() => debounce((q: string) => setQuery(q), 250, {start: false}), [])\n\n  const onTextInputChange: ChangeEventHandler<HTMLInputElement> = e => {\n    const text = e.target.value\n    setTextInputValue(text)\n    debouncedSetQuery(text)\n  }\n\n  return {onTextInputChange, query, textInputValue}\n}\n","import {Box, Heading, IconButton, Text, TextInput} from '@primer/react'\nimport {useMemo, useState} from 'react'\nimport {ListView} from '@github-ui/list-view'\nimport {ListItemTitle} from '@github-ui/list-view/ListItemTitle'\nimport {ListItem} from '@github-ui/list-view/ListItem'\nimport {SearchIcon, XIcon} from '@primer/octicons-react'\nimport {Dialog} from '@primer/react/drafts'\nimport {useQuery} from '@tanstack/react-query'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport {LanguagesWithColor} from './LanguagesWithColor'\nimport type {PipelineRepo} from '../../types'\nimport {RepoListView} from './ReposListView'\nimport {usePipelineDetails} from '../PipelineDetails'\nimport {DeletedReposBanner} from './DeletedReposBanner'\nimport {useDebouncedQuery} from '../../hooks/use-debounced-query'\n\ninterface Props {\n  onClose: () => void\n}\n\nexport function ReposDialog({onClose}: Props) {\n  const {\n    cardPipeline: {languages: unsortedLanguages, repoSearchPath, repositoryCount},\n  } = usePipelineDetails()\n  const {onTextInputChange, query, textInputValue} = useDebouncedQuery()\n  const [numTotalRepos, setNumTotalRepos] = useState(0)\n\n  const languages = useMemo(() => unsortedLanguages.sort(), [unsortedLanguages])\n\n  const {data: repos, isLoading} = useQuery({\n    queryKey: ['repo-search', repoSearchPath, query],\n    queryFn: async () => {\n      const queryPath = `${repoSearchPath}?q=${query}`\n      const response: Response = await verifiedFetch(queryPath, {method: 'GET'})\n      if (!response.ok) throw new Error(`HTTP ${response.status}${response.statusText}`)\n\n      const payload = (await response.json()).data as PipelineRepo[]\n\n      // Need to get the total number of repos, which only happens when there's no query\n      if (!query) setNumTotalRepos(payload.length)\n\n      return payload\n    },\n    staleTime: Infinity,\n  })\n\n  const repoWord = numTotalRepos === 1 ? 'repository' : 'repositories'\n\n  const numDeletedRepos = repositoryCount - numTotalRepos\n\n  // If the user trains on X repos then deletes all X repos, we don't want to show\n  // the repo list, since it will say \"No repositories matching filter\" which doesn't\n  // make sense. Especially when they haven't typed in any filter.\n  const showRepoList = numDeletedRepos !== repositoryCount\n\n  return (\n    <Dialog\n      onClose={onClose}\n      renderBody={() => (\n        <Dialog.Body sx={{display: 'flex', flexDirection: 'column', gap: '20px'}}>\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '8px',\n            }}\n          >\n            <Heading as=\"h5\" sx={{fontSize: '14px'}}>\n              Languages\n            </Heading>\n\n            <Box\n              sx={{\n                border: '1px solid var(--borderColor-default, var(--color-border-default))',\n                borderRadius: '6px',\n                px: '8px',\n              }}\n            >\n              <ListView title=\"Languages\" variant=\"compact\">\n                {languages.length ? (\n                  <LanguagesWithColor languages={languages} />\n                ) : (\n                  <ListItem\n                    sx={{'&:hover': {backgroundColor: 'inherit'}, fontFamily: 'var(--fontStack-monospace)'}}\n                    title={<ListItemTitle value=\"All languages\" />}\n                  />\n                )}\n              </ListView>\n            </Box>\n          </Box>\n\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '8px',\n            }}\n          >\n            <Heading as=\"h5\" sx={{fontSize: '14px'}}>\n              Repositories\n            </Heading>\n\n            {numDeletedRepos > 0 && <DeletedReposBanner numDeleted={numDeletedRepos} />}\n\n            {showRepoList && (\n              <Box\n                sx={{border: '1px solid var(--borderColor-default, var(--color-border-default))', borderRadius: '6px'}}\n              >\n                <RepoListView isLoading={isLoading} repos={repos} />\n              </Box>\n            )}\n          </Box>\n        </Dialog.Body>\n      )}\n      renderHeader={() => (\n        <Dialog.Header>\n          <Box sx={{display: 'flex', flexDirection: 'column', gap: '6px', width: '100%'}}>\n            <Box sx={{alignItems: 'flex-start', display: 'flex', justifyContent: 'space-between'}}>\n              <Box sx={{display: 'flex', flexDirection: 'column', gap: '4px', pt: '6px', px: '8px'}}>\n                <Text sx={{fontSize: '14px', fontWeight: 'semibold'}}>Training data</Text>\n                <Text sx={{color: 'fg.muted', fontSize: '12px'}}>\n                  {repositoryCount} {repoWord} used in your custom model\n                </Text>\n              </Box>\n              <IconButton aria-label=\"Close dialog\" icon={XIcon} onClick={onClose} variant=\"invisible\" />\n            </Box>\n            <TextInput\n              leadingVisual={SearchIcon}\n              name=\"repo-search\"\n              onChange={onTextInputChange}\n              placeholder=\"Search repositories\"\n              sx={{width: '100%'}}\n              value={textInputValue}\n            />\n          </Box>\n        </Dialog.Header>\n      )}\n    />\n  )\n}\n\ntry{ ReposDialog.displayName ||= 'ReposDialog' } catch {}","import {Link} from '@primer/react'\nimport {ReposDialog} from './ReposDialog'\nimport {useOverlayControls} from '../../hooks/use-overlay-controls'\nimport {DatumText} from './DatumText'\nimport {usePipelineDetails} from '../PipelineDetails'\n\nexport function ReposDialogButton() {\n  const {cardPipeline: pipelineDetails} = usePipelineDetails()\n  const {close: closeDialog, isOpen: isDialogOpen, open: openDialog} = useOverlayControls()\n\n  const formattedCount = pipelineDetails.repositoryCount.toLocaleString()\n\n  return (\n    <div>\n      <Link as=\"button\" onClick={openDialog}>\n        <DatumText>{formattedCount}</DatumText>\n      </Link>\n      {isDialogOpen && <ReposDialog onClose={closeDialog} />}\n    </div>\n  )\n}\n\ntry{ ReposDialogButton.displayName ||= 'ReposDialogButton' } catch {}","import {Datum} from './Datum'\nimport {ReposDialogButton} from './ReposDialogButton'\n\nexport function ReposDatum() {\n  return <Datum name=\"Repositories\" value={<ReposDialogButton />} />\n}\n\ntry{ ReposDatum.displayName ||= 'ReposDatum' } catch {}","import {useFeatureFlag} from '@github-ui/react-core/use-feature-flag'\nimport {Datum} from './Datum'\nimport {DatumText} from './DatumText'\nimport {usePipelineDetails} from '../PipelineDetails'\n\nexport function TelemetryDatum() {\n  const {\n    cardPipeline: {wasPrivateTelemetryCollected},\n  } = usePipelineDetails()\n\n  const isPrivateTelemetryFlagEnabled = useFeatureFlag('copilot_private_telemetry_access')\n\n  if (!isPrivateTelemetryFlagEnabled) return null\n\n  const value = wasPrivateTelemetryCollected ? 'On' : 'Off'\n\n  return <Datum name=\"Telemetry\" value={<DatumText>{value}</DatumText>} />\n}\n\ntry{ TelemetryDatum.displayName ||= 'TelemetryDatum' } catch {}","import {ActionList, ActionMenu, IconButton} from '@primer/react'\nimport {KebabHorizontalIcon} from '@primer/octicons-react'\nimport {useCancelDialog} from '../../components/CancelDialogProvider'\nimport {usePipelineDetails} from '../PipelineDetails'\nimport {useNavigateWithFlashBanner} from '../NavigateWithFlashBanner'\nimport {useDeleteModel} from '../../components/DeleteDialogProvider'\n\nexport function ActionsButton() {\n  const {\n    canViewDetails,\n    cardPipeline: {canCancel, cancelPath, canDelete, canRetrain, editPath, showPath},\n  } = usePipelineDetails()\n  const {navigate} = useNavigateWithFlashBanner()\n  const {openDialogForCancelPath} = useCancelDialog()\n  const {openDialog: openDeleteModelDialog} = useDeleteModel()\n\n  const anyActions = [canViewDetails, canRetrain, canCancel, canDelete].some(Boolean)\n\n  if (!anyActions) return null\n\n  const handleViewDetailsClick = () => navigate(showPath)\n  const handleRetrainClick = () => navigate(editPath)\n  const handleCancelClick = () => openDialogForCancelPath(cancelPath)\n  const handleDeleteClick = () => openDeleteModelDialog()\n\n  return (\n    <ActionMenu>\n      <ActionMenu.Anchor>\n        <IconButton aria-label=\"More pipeline actions\" icon={KebabHorizontalIcon} variant=\"invisible\" />\n      </ActionMenu.Anchor>\n      <ActionMenu.Overlay>\n        <ActionList>\n          {canViewDetails && <ActionList.Item onSelect={handleViewDetailsClick}>Training details</ActionList.Item>}\n\n          {canRetrain && <ActionList.Item onSelect={handleRetrainClick}>Retrain model</ActionList.Item>}\n\n          {canCancel && (\n            <ActionList.Item onSelect={handleCancelClick} variant=\"danger\">\n              Cancel training\n            </ActionList.Item>\n          )}\n\n          {canDelete && (\n            <ActionList.Item onSelect={handleDeleteClick} variant=\"danger\">\n              Delete model\n            </ActionList.Item>\n          )}\n        </ActionList>\n      </ActionMenu.Overlay>\n    </ActionMenu>\n  )\n}\n\ntry{ ActionsButton.displayName ||= 'ActionsButton' } catch {}","import {Box} from '@primer/react'\nimport {Datum} from './Datum'\nimport {useCreatedAgo} from './use-created-ago'\nimport {DatumText} from './DatumText'\nimport {GitHubAvatar} from '@github-ui/github-avatar'\nimport {usePipelineDetails} from '../PipelineDetails'\n\nexport function CreatorDatum() {\n  const {\n    cardPipeline: {actorAvatarUrl, actorLogin, createdAt},\n  } = usePipelineDetails()\n  const createdAgo = useCreatedAgo(createdAt)\n\n  const creator = actorLogin || 'unknown'\n\n  const renderCreator = actorAvatarUrl ? (\n    <Box sx={{alignItems: 'center', display: 'flex', gap: '8px'}}>\n      <GitHubAvatar src={actorAvatarUrl} size={16} />\n      <DatumText sx={{fontSize: '14px'}}>{creator}</DatumText>\n    </Box>\n  ) : (\n    <DatumText>{creator}</DatumText>\n  )\n\n  return <Datum name={createdAgo} value={renderCreator} />\n}\n\ntry{ CreatorDatum.displayName ||= 'CreatorDatum' } catch {}","import {formatDistance} from 'date-fns'\nimport {useEffect, useState} from 'react'\n\nexport function useCreatedAgo(createdAt: string | null): string {\n  const [now, setNow] = useState(Date.now())\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setNow(Date.now())\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  if (!createdAt) return 'Created by'\n\n  const createdDate = Date.parse(createdAt)\n  const runTime = formatDistance(createdDate, now, {addSuffix: true, includeSeconds: true})\n\n  return `Created ${runTime} by`\n}\n","import {Box} from '@primer/react'\nimport {BorderBox} from '../../components/BorderBox'\nimport {StatusDatum} from './StatusDatum'\nimport {ReposDatum} from './ReposDatum'\nimport {TelemetryDatum} from './TelemetryDatum'\nimport {ActionsButton} from './ActionsButton'\nimport {CreatorDatum} from './CreatorDatum'\n\nexport function PipelineCard() {\n  return (\n    <BorderBox\n      sx={{\n        alignItems: 'start',\n        borderRadius: '6px',\n        display: 'flex',\n        gap: '16px',\n        justifyContent: 'space-between',\n        px: '24px',\n        py: '20px',\n      }}\n    >\n      <Box sx={{alignItems: 'center', columnGap: '32px', display: 'flex', flexWrap: 'wrap', rowGap: '16px'}}>\n        <CreatorDatum />\n        <StatusDatum />\n        <ReposDatum />\n        <TelemetryDatum />\n      </Box>\n\n      <ActionsButton />\n    </BorderBox>\n  )\n}\n\ntry{ PipelineCard.displayName ||= 'PipelineCard' } catch {}","import {Box, Text} from '@primer/react'\nimport {BookIcon} from '@primer/octicons-react'\nimport {Blankslate} from '@primer/react/drafts'\n\ninterface Props {\n  newPath: string\n}\n\nexport function BlankState({newPath}: Props) {\n  return (\n    <Blankslate border>\n      <Blankslate.Visual>\n        {' '}\n        <Box sx={{color: 'var(--fgColor-muted, var(--color-muted-fg))', mb: '16px', mx: '4px'}}>\n          <BookIcon size={24} />\n        </Box>\n      </Blankslate.Visual>\n\n      <Blankslate.Heading>Create your custom model</Blankslate.Heading>\n      <Blankslate.Description>\n        <Text sx={{display: 'inline-block', textAlign: 'center', width: '100%'}}>\n          Custom models are LLM&apos;s fine-tuned with your organization&apos;s unique code and usage patterns. They\n          make Copilot familiar with your codebase, including modules, functions and internal libraries.\n        </Text>\n      </Blankslate.Description>\n\n      <Blankslate.PrimaryAction href={newPath}>Train a new custom model</Blankslate.PrimaryAction>\n    </Blankslate>\n  )\n}\n\ntry{ BlankState.displayName ||= 'BlankState' } catch {}","import {Box} from '@primer/react'\nimport {Header} from '../../components/Header'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport type {RoutePayload} from './types'\nimport {PipelineList} from './features/PipelineList'\nimport {PipelineCard} from '../../features/PipelineCard'\nimport {BlankState} from './components/BlankState'\nimport {PipelineBanner} from '../../features/PipelineBanner'\nimport {PipelineDetailsProvider} from '../../features/PipelineDetails'\nimport {QueryClient, QueryClientProvider} from '@tanstack/react-query'\nimport type {PropsWithChildren} from 'react'\n\nconst queryClient = new QueryClient()\n\nexport function Index() {\n  const {deployedPipeline, latestPipeline, newPath, organization, pipelines} = useRoutePayload<RoutePayload>()\n\n  const focusedPipeline = deployedPipeline ?? latestPipeline\n\n  const showBanner = pipelines.length === 1\n  const showList = pipelines.length > 1\n  const headerText = focusedPipeline ? `${organization} model` : 'Custom models'\n  const headerSubtext = focusedPipeline\n    ? undefined\n    : \"Custom Copilot models personalized to your team's private coding practices, standards, security, and languages.\"\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Box sx={{display: 'flex', flexDirection: 'column', gap: '16px'}}>\n        <Header subtext={headerSubtext} text={headerText} />\n        <Provider>\n          {focusedPipeline ? (\n            <>\n              {showBanner && <PipelineBanner />}\n              <PipelineCard />\n            </>\n          ) : (\n            <BlankState newPath={newPath} />\n          )}\n\n          {showList && <PipelineList deployedPipeline={deployedPipeline} org={organization} pipelines={pipelines} />}\n        </Provider>\n      </Box>\n    </QueryClientProvider>\n  )\n}\n\nfunction Provider({children}: PropsWithChildren) {\n  const {adminEmail, deployedPipeline, hasAnyDeployed, latestPipeline, organization, withinRateLimit} =\n    useRoutePayload<RoutePayload>()\n\n  if (!latestPipeline) return <>{children}</>\n\n  return (\n    <PipelineDetailsProvider\n      adminEmail={adminEmail}\n      hasAnyDeployed={hasAnyDeployed}\n      org={organization}\n      pipelineForBanner={latestPipeline}\n      pipelineForCard={deployedPipeline ?? latestPipeline}\n      withinRateLimit={withinRateLimit}\n    >\n      {children}\n    </PipelineDetailsProvider>\n  )\n}\n\ntry{ Index.displayName ||= 'Index' } catch {}\ntry{ Provider.displayName ||= 'Provider' } catch {}","import {createContext, useContext, useMemo, useState, useCallback, type PropsWithChildren, useEffect} from 'react'\nimport type {BaseRepo} from './types'\nimport noop from 'lodash-es/noop'\nimport uniqBy from 'lodash-es/uniqBy'\n\ninterface ISelectedReposContext {\n  count: number\n  fetchSelected?: () => void\n  isLoadingSelected: boolean\n  remove: (repo: BaseRepo) => void\n  selected: BaseRepo[] | undefined\n  setAll: (newList: BaseRepo[]) => void\n}\n\nconst SelectedReposContext = createContext<ISelectedReposContext>({\n  count: 0,\n  isLoadingSelected: false,\n  remove: noop,\n  selected: [],\n  setAll: noop,\n})\n\ninterface Props extends PropsWithChildren {\n  fetchSelected?: () => void\n  initialRepoCount: number\n  initialSelected?: BaseRepo[]\n  isLoadingSelected?: boolean\n}\n\nexport function SelectedReposProvider({\n  children,\n  fetchSelected,\n  initialRepoCount,\n  initialSelected,\n  isLoadingSelected = false,\n}: Props) {\n  const [selected, setSelected] = useState<BaseRepo[] | undefined>(initialSelected)\n  const count = useMemo(() => selected?.length ?? initialRepoCount, [initialRepoCount, selected])\n\n  // `initialSelected` will load in async, so this will set the initial value for `selected`\n  // unless it has already been picked by the user\n  useEffect(() => {\n    if (selected) return\n    setSelected(initialSelected)\n  }, [selected, initialSelected])\n\n  const setAll = useCallback((newList: BaseRepo[]) => {\n    const uniq = uniqBy(newList, 'nameWithOwner')\n    setSelected(uniq)\n  }, [])\n  const remove = useCallback(\n    (repo: BaseRepo) => {\n      const updatedList = selected?.filter(r => r.nameWithOwner !== repo.nameWithOwner)\n      setSelected(updatedList)\n    },\n    [selected],\n  )\n\n  const value: ISelectedReposContext = useMemo(\n    () => ({\n      count,\n      fetchSelected,\n      isLoadingSelected,\n      remove,\n      selected,\n      setAll,\n    }),\n    [count, fetchSelected, isLoadingSelected, remove, selected, setAll],\n  )\n\n  return <SelectedReposContext.Provider value={value}>{children}</SelectedReposContext.Provider>\n}\n\nexport function useSelectedRepos(): ISelectedReposContext {\n  const context = useContext(SelectedReposContext)\n\n  if (!context) {\n    throw new Error('useSelectedRepos must be used within <SelectedReposProvider />.')\n  }\n\n  return context\n}\n\ntry{ SelectedReposContext.displayName ||= 'SelectedReposContext' } catch {}\ntry{ SelectedReposProvider.displayName ||= 'SelectedReposProvider' } catch {}","import {TextInput, type TextInputProps} from '@primer/react'\nimport {useMemo} from 'react'\nimport {useSelectedRepos} from './SelectedReposProvider'\n\nexport function HiddenTextInput(props: TextInputProps) {\n  const {selected} = useSelectedRepos()\n\n  const value = useMemo(() => [...new Set((selected ?? []).map(r => r.nameWithOwner))], [selected])\n\n  // The backend differentiates between an empty array and null, and since inputs cannot have a null value,\n  // the only way to provide null when running `new FormData` is to have the input not exist.\n  if (!selected) return null\n  return <TextInput name=\"repository_nwos\" readOnly sx={{display: 'none', ...props.sx}} value={value} {...props} />\n}\n\ntry{ HiddenTextInput.displayName ||= 'HiddenTextInput' } catch {}","import type {BaseRepo} from './types'\n\nconst orgPattern = /org:[^\\s]+ /i\nconst isPublicPattern = /is:public/i\n\ninterface Props {\n  org: string\n  query: string\n}\nexport function formatQueryWithOrg({org, query}: Props): string {\n  const prefix = `org:${org}`\n  const qTrimmed = query.trim()\n\n  if (!qTrimmed.length) return prefix\n\n  const sanitized = qTrimmed.replace(orgPattern, '').replace(isPublicPattern, '')\n\n  const withOrg = `${prefix} ${sanitized}`\n\n  const trimmed = withOrg.replace(/ {2,}/g, ' ').trim()\n\n  return trimmed\n}\n\ntype SortFn = (a: BaseRepo, b: BaseRepo) => number\n\nexport const sortFn: SortFn = (a, b) => {\n  const lowerA = a.nameWithOwner.toLowerCase()\n  const lowerB = b.nameWithOwner.toLowerCase()\n\n  if (lowerA < lowerB) return -1\n  if (lowerA > lowerB) return 1\n  return 0\n}\n","import {ListView} from '@github-ui/list-view'\nimport {ListItemLeadingContent} from '@github-ui/list-view/ListItemLeadingContent'\nimport {ListItemTitle} from '@github-ui/list-view/ListItemTitle'\nimport {ListItemMetadata} from '@github-ui/list-view/ListItemMetadata'\nimport {ListItem} from '@github-ui/list-view/ListItem'\nimport {GitHubAvatar} from '@github-ui/github-avatar'\nimport type {BaseRepo} from './types'\nimport {IconButton} from '@primer/react'\nimport {TrashIcon} from '@primer/octicons-react'\n\ninterface Props {\n  onRemove: (repo: BaseRepo) => void\n  repos: BaseRepo[]\n}\n\nexport function ListRepoList({onRemove, repos}: Props) {\n  return (\n    <ListView title=\"Repositories\" variant=\"compact\">\n      {repos.map(repo => (\n        <ListItem\n          key={repo.nameWithOwner}\n          metadata={\n            <ListItemMetadata alignment=\"right\">\n              <IconButton\n                aria-label=\"Remove from training set\"\n                icon={TrashIcon}\n                tooltipDirection=\"s\"\n                variant=\"invisible\"\n                onClick={() => onRemove(repo)}\n              />\n            </ListItemMetadata>\n          }\n          sx={{'&:hover': {backgroundColor: 'inherit'}, border: 'none !important'}}\n          title={<ListItemTitle value={repo.name} />}\n        >\n          <ListItemLeadingContent sx={{alignItems: 'center', display: 'flex'}}>\n            <GitHubAvatar src={repo.owner.avatarUrl} square={repo.isInOrganization} size={16} />\n          </ListItemLeadingContent>\n        </ListItem>\n      ))}\n    </ListView>\n  )\n}\n\ntry{ ListRepoList.displayName ||= 'ListRepoList' } catch {}","import {Box, Spinner} from '@primer/react'\nimport {useSelectedRepos} from './SelectedReposProvider'\nimport type {BaseRepo} from './types'\nimport {Dialog} from '@primer/react/drafts'\nimport {useMemo} from 'react'\nimport {sortFn} from './utils'\nimport {ListRepoList} from './ListRepoList'\n\ninterface Props {\n  closeDialog: () => void\n}\n\nexport function ListDialog({closeDialog}: Props) {\n  const {isLoadingSelected, remove, selected} = useSelectedRepos()\n\n  const handleRemove = (repo: BaseRepo) => {\n    const isLast = (selected ?? []).length === 1\n\n    remove(repo)\n    if (isLast) closeDialog()\n  }\n\n  const repos = useMemo(() => (selected ?? []).sort(sortFn), [selected])\n\n  return (\n    <Dialog\n      onClose={closeDialog}\n      renderBody={() => (\n        <Box sx={{px: '8px', py: '16px'}}>\n          {isLoadingSelected ? (\n            <Box sx={{alignItems: 'center', display: 'flex', justifyContent: 'center'}}>\n              <Spinner />\n            </Box>\n          ) : (\n            <ListRepoList onRemove={handleRemove} repos={repos} />\n          )}\n        </Box>\n      )}\n      title=\"Selected repositories\"\n    />\n  )\n}\n\ntry{ ListDialog.displayName ||= 'ListDialog' } catch {}","import {Button} from '@primer/react'\nimport {TriangleDownIcon} from '@primer/octicons-react'\nimport {useSelectedRepos} from './SelectedReposProvider'\nimport {ListDialog} from './ListDialog'\nimport {useOverlayControls} from '../../hooks/use-overlay-controls'\n\nexport function ListButton() {\n  const {count, fetchSelected} = useSelectedRepos()\n  const {close: closeDialog, isOpen: isDialogOpen, open: openDialog} = useOverlayControls()\n\n  if (!count) return null\n\n  const handleOpen = (): void => {\n    fetchSelected?.()\n    openDialog()\n  }\n\n  return (\n    <>\n      <Button onClick={handleOpen} trailingVisual={TriangleDownIcon}>\n        Repositories: {count} selected\n      </Button>\n      {isDialogOpen && <ListDialog closeDialog={closeDialog} />}\n    </>\n  )\n}\n\ntry{ ListButton.displayName ||= 'ListButton' } catch {}","import {ListView} from '@github-ui/list-view'\nimport {ListItemLeadingContent} from '@github-ui/list-view/ListItemLeadingContent'\nimport {ListItemTitle} from '@github-ui/list-view/ListItemTitle'\nimport {ListItem} from '@github-ui/list-view/ListItem'\nimport {GitHubAvatar} from '@github-ui/github-avatar'\nimport type {RepositoryPickerRepository$data} from '@github-ui/item-picker/RepositoryPickerRepository.graphql'\nimport type {BaseRepo, OnSelect} from './types'\nimport {ListItemLeadingVisual} from '@github-ui/list-view/ListItemLeadingVisual'\n\ninterface Props {\n  onSelect: OnSelect\n  repos: RepositoryPickerRepository$data[]\n  selected: BaseRepo[] | undefined\n}\n\nexport function PickerRepoList({onSelect, selected, repos}: Props) {\n  return (\n    <ListView isSelectable title=\"Repositories\" variant=\"compact\">\n      {repos.map(repo => (\n        <ListItem\n          key={repo.nameWithOwner}\n          isSelected={selected?.some(i => i.nameWithOwner === repo.nameWithOwner)}\n          onSelect={isNowSelected => onSelect(repo, isNowSelected)}\n          sx={{border: 'none !important'}}\n          title={<ListItemTitle value={repo.nameWithOwner} />}\n        >\n          <ListItemLeadingContent>\n            <ListItemLeadingVisual>\n              <GitHubAvatar src={repo.owner.avatarUrl} square={repo.isInOrganization} size={16} />\n            </ListItemLeadingVisual>\n          </ListItemLeadingContent>\n        </ListItem>\n      ))}\n    </ListView>\n  )\n}\n\ntry{ PickerRepoList.displayName ||= 'PickerRepoList' } catch {}","import {Dialog} from '@primer/react/drafts'\nimport {useState, useMemo, useEffect} from 'react'\nimport type {QueryFn, OnSelect} from './types'\nimport {useQueryForRepos} from './use-query-for-repos'\nimport {useSelectedRepos} from './SelectedReposProvider'\nimport {useDebouncedQuery} from '../../hooks/use-debounced-query'\nimport {sortFn} from './utils'\nimport {PickerRepoList} from './PickerRepoList'\nimport {SearchIcon} from '@primer/octicons-react'\nimport {Box, Spinner, TextInput} from '@primer/react'\n\ninterface Props {\n  closeDialog: () => void\n  queryFn: QueryFn\n}\n\nexport function PickerDialog({closeDialog, queryFn}: Props) {\n  const {isLoadingSelected, selected: initialSelected, setAll} = useSelectedRepos()\n  const {onTextInputChange, query, textInputValue} = useDebouncedQuery()\n  const {repos: rawRepos, isQuerying} = useQueryForRepos({query, queryFn})\n  const repos = useMemo(() => rawRepos.sort(sortFn), [rawRepos])\n  const [selected, setSelected] = useState(initialSelected)\n\n  // Covers the use-case of\n  // 1. Select a repo and apply\n  // 2. In ListDialog, remove that repo\n  // 3. Open PickerDialog again, expect to see it not selected\n  useEffect(() => {\n    setSelected(initialSelected)\n  }, [initialSelected])\n\n  const handleApply = () => {\n    setAll(selected ?? [])\n    closeDialog()\n  }\n\n  const handleCancel = () => {\n    setAll(initialSelected ?? [])\n    closeDialog()\n  }\n\n  const handleSelect: OnSelect = (repo, isSelected) => {\n    if (isSelected) {\n      setSelected(existing => [...(existing ?? []), repo])\n    } else {\n      setSelected(existing => existing?.filter(r => r.nameWithOwner !== repo.nameWithOwner))\n    }\n  }\n\n  return (\n    <Dialog\n      footerButtons={[\n        {buttonType: 'normal', content: 'Cancel', onClick: handleCancel},\n        {buttonType: 'primary', content: 'Apply', onClick: handleApply},\n      ]}\n      onClose={handleCancel}\n      renderBody={() => (\n        <Dialog.Body sx={{padding: 0, display: 'flex', flexDirection: 'column'}}>\n          <TextInput\n            leadingVisual={SearchIcon}\n            sx={{flex: 1, m: 2}}\n            placeholder=\"Search repositories\"\n            onChange={onTextInputChange}\n            value={textInputValue}\n            loading={isQuerying}\n            loaderPosition=\"trailing\"\n          />\n          <div>\n            {isLoadingSelected ? (\n              <Box sx={{alignItems: 'center', display: 'flex', justifyContent: 'center', pb: '8px'}}>\n                <Spinner />\n              </Box>\n            ) : (\n              <PickerRepoList onSelect={handleSelect} repos={repos} selected={selected} />\n            )}\n          </div>\n          <span role=\"status\" className=\"sr-only\">\n            {repos.length} {repos.length === 1 ? 'result' : 'results'} returned.\n          </span>\n        </Dialog.Body>\n      )}\n      renderFooter={({footerButtons}) => {\n        return (\n          <Dialog.Footer sx={{'@media screen and (max-height: 400px)': {p: 2}}}>\n            {footerButtons && <Dialog.Buttons buttons={footerButtons} />}\n          </Dialog.Footer>\n        )\n      }}\n      sx={{'@media screen and (max-height: 400px)': {maxHeight: 'calc(100vh - 8px)'}}}\n      title=\"Select repositories\"\n    />\n  )\n}\n\ntry{ PickerDialog.displayName ||= 'PickerDialog' } catch {}","import {useEffect, useState} from 'react'\nimport type {QueryFn, RepoQueryDatum} from './types'\n\ninterface Props {\n  query: string\n  queryFn: QueryFn\n}\n\ninterface UseRepos {\n  isQuerying: boolean\n  repos: RepoQueryDatum[]\n}\n\nexport function useQueryForRepos({query, queryFn}: Props): UseRepos {\n  const [isQuerying, setIsQuerying] = useState(false)\n  const [repos, setRepos] = useState<RepoQueryDatum[]>([])\n\n  useEffect(() => {\n    const call = async () => {\n      setIsQuerying(true)\n\n      const fetchedRepos = await queryFn(query)\n      setRepos(fetchedRepos)\n\n      setIsQuerying(false)\n    }\n\n    call()\n  }, [query, queryFn])\n\n  return {isQuerying, repos}\n}\n","import {ActionList, AnchoredOverlay, Button} from '@primer/react'\nimport {TriangleDownIcon} from '@primer/octicons-react'\nimport {PickerDialog} from './PickerDialog'\nimport type {QueryFn} from './types'\nimport {useSelectedRepos} from './SelectedReposProvider'\nimport {useOverlayControls} from '../../hooks/use-overlay-controls'\n\ninterface Props {\n  queryFn: QueryFn\n}\n\nexport function PickerButton({queryFn}: Props) {\n  const {close: closeOverlay, isOpen: isOverlayOpen, open: openOverlay} = useOverlayControls()\n  const {close: closeDialog, isOpen: isDialogOpen, open: openDialog} = useOverlayControls()\n  const {count, fetchSelected, setAll} = useSelectedRepos()\n\n  const isChoosingAllRepos = !count\n\n  const label = isChoosingAllRepos ? 'All repositories' : 'Select repositories'\n\n  const handleSelectedReposClick = () => {\n    closeOverlay()\n    fetchSelected?.()\n    openDialog()\n  }\n\n  const handleAllReposClick = () => {\n    setAll([])\n    closeOverlay()\n  }\n\n  return (\n    <AnchoredOverlay\n      open={isOverlayOpen}\n      onOpen={openOverlay}\n      onClose={closeOverlay}\n      renderAnchor={props => (\n        <>\n          <Button data-testid=\"picker-button\" trailingVisual={TriangleDownIcon} sx={{width: 'fit-content'}} {...props}>\n            {label}\n          </Button>\n          {isDialogOpen && <PickerDialog closeDialog={closeDialog} queryFn={queryFn} />}\n        </>\n      )}\n    >\n      <ActionList role=\"menu\" selectionVariant=\"single\" showDividers sx={{width: '325px'}}>\n        <ActionList.Item onSelect={handleSelectedReposClick} role=\"menuitemradio\" selected={!isChoosingAllRepos}>\n          Selected repositories\n          <ActionList.Description variant=\"block\">\n            The custom model will be trained based on specifically selected repositories\n          </ActionList.Description>\n        </ActionList.Item>\n        <ActionList.Item onSelect={handleAllReposClick} role=\"menuitemradio\" selected={isChoosingAllRepos}>\n          All repositories\n          <ActionList.Description variant=\"block\">\n            The custom model will be trained based on all private and public repositories of this organization\n          </ActionList.Description>\n        </ActionList.Item>\n      </ActionList>\n    </AnchoredOverlay>\n  )\n}\n\ntry{ PickerButton.displayName ||= 'PickerButton' } catch {}","import {ActionList, AnchoredOverlay, Box, Button, Octicon} from '@primer/react'\nimport {RepoIcon} from '@primer/octicons-react'\nimport {PickerDialog} from './PickerDialog'\nimport type {QueryFn} from './types'\nimport {useSelectedRepos} from './SelectedReposProvider'\nimport {useOverlayControls} from '../../hooks/use-overlay-controls'\n\ninterface Props {\n  queryFn: QueryFn\n}\n\nexport function SingleButton({queryFn}: Props) {\n  const {close: closeOverlay, isOpen: isOverlayOpen, open: openOverlay} = useOverlayControls()\n  const {close: closeDialog, isOpen: isDialogOpen, open: openDialog} = useOverlayControls()\n  const {count, setAll} = useSelectedRepos()\n\n  const isChoosingAllRepos = !count\n\n  const repositoryWord = count === 1 ? 'repository' : 'repositories'\n  const label = isChoosingAllRepos ? 'All repositories' : `${count} ${repositoryWord}`\n\n  const handleSelectedReposClick = () => {\n    closeOverlay()\n    openDialog()\n  }\n\n  const handleAllReposClick = () => {\n    setAll([])\n    closeOverlay()\n  }\n\n  return (\n    <AnchoredOverlay\n      open={isOverlayOpen}\n      onOpen={openOverlay}\n      onClose={closeOverlay}\n      renderAnchor={props => (\n        <>\n          <Button data-testid=\"picker-button\" {...props}>\n            <Box sx={{alignItems: 'center', display: 'flex', gap: '8px'}}>\n              <Octicon icon={RepoIcon} size={16} />\n              <span>{label}</span>\n            </Box>\n          </Button>\n          {isDialogOpen && <PickerDialog closeDialog={closeDialog} queryFn={queryFn} />}\n        </>\n      )}\n    >\n      <ActionList role=\"menu\" selectionVariant=\"single\" showDividers sx={{width: '325px'}}>\n        <ActionList.Item onSelect={handleAllReposClick} role=\"menuitemradio\" selected={isChoosingAllRepos}>\n          All repositories\n          <ActionList.Description variant=\"block\">\n            Select all repositories within the organization\n          </ActionList.Description>\n        </ActionList.Item>\n\n        <ActionList.Item onSelect={handleSelectedReposClick} role=\"menuitemradio\" selected={!isChoosingAllRepos}>\n          Selected repositories\n          <ActionList.Description variant=\"block\">\n            Select a specific list of selected repositories\n          </ActionList.Description>\n        </ActionList.Item>\n      </ActionList>\n    </AnchoredOverlay>\n  )\n}\n\ntry{ SingleButton.displayName ||= 'SingleButton' } catch {}","import type {PropsWithChildren} from 'react'\nimport {HiddenTextInput} from './HiddenTextInput'\nimport {ListButton} from './ListButton'\nimport {PickerButton} from './PickerButton'\nimport {SingleButton} from './SingleButton'\nimport type {BaseRepo} from './types'\nimport {SelectedReposProvider} from './SelectedReposProvider'\n\ninterface Props extends PropsWithChildren {\n  fetchSelected?: () => void\n  initialRepoCount?: number\n  initialSelected?: BaseRepo[]\n  isLoadingSelected?: boolean\n}\n\nexport function RepoPicker({children, fetchSelected, initialRepoCount = 0, initialSelected, isLoadingSelected}: Props) {\n  return (\n    <SelectedReposProvider\n      fetchSelected={fetchSelected}\n      initialRepoCount={initialRepoCount}\n      initialSelected={initialSelected}\n      isLoadingSelected={isLoadingSelected}\n    >\n      {children}\n    </SelectedReposProvider>\n  )\n}\n\nRepoPicker.HiddenTextInput = HiddenTextInput\nRepoPicker.ListButton = ListButton\nRepoPicker.PickerButton = PickerButton\nRepoPicker.SingleButton = SingleButton\n\ntry{ RepoPicker.displayName ||= 'RepoPicker' } catch {}","import {useCallback, useRef} from 'react'\nimport type {QueryFn, RelayEnv} from './types'\nimport identity from 'lodash-es/identity'\nimport {fetchQuery, readInlineData} from 'react-relay'\nimport {RepositoryFragment, SearchRepositories} from '@github-ui/item-picker/RepositoryPicker'\nimport type {\n  RepositoryPickerRepository$data,\n  RepositoryPickerRepository$key,\n} from '@github-ui/item-picker/RepositoryPickerRepository.graphql'\nimport type {Subscription} from 'relay-runtime'\nimport type {\n  RepositoryPickerSearchRepositoriesQuery$data,\n  RepositoryPickerSearchRepositoriesQuery,\n} from '@github-ui/item-picker/RepositoryPickerSearchRepositoriesQuery.graphql'\nimport {getRepositorySearchQuery} from '@github-ui/issue-viewer/Queries'\nimport {formatQueryWithOrg} from './utils'\n\ninterface Props {\n  org: string\n  relayEnv: RelayEnv\n}\n\nexport function useOrgOnlyRepos({org, relayEnv}: Props): QueryFn {\n  const searchedReposSubscription = useRef<Subscription | undefined>(undefined)\n\n  const queryFn = useCallback(\n    async (query: string) => {\n      const formattedQuery = formatQueryWithOrg({org, query})\n\n      const searchedRepos: RepositoryPickerSearchRepositoriesQuery$data = await new Promise((resolve, reject) => {\n        fetchQuery<RepositoryPickerSearchRepositoriesQuery>(relayEnv, SearchRepositories, {\n          searchQuery: getRepositorySearchQuery(formattedQuery),\n        }).subscribe({\n          start: newSubscription => {\n            searchedReposSubscription.current?.unsubscribe()\n            searchedReposSubscription.current = newSubscription\n          },\n          next: data => {\n            resolve(data)\n          },\n          error: (e: Error) => {\n            reject(e)\n          },\n        })\n      })\n\n      const nodes = searchedRepos.search.nodes ?? []\n\n      const fetchedRepos = nodes\n        .map(node => (node ? readInlineData<RepositoryPickerRepository$key>(RepositoryFragment, node) : undefined))\n        .filter(identity) as RepositoryPickerRepository$data[]\n\n      return fetchedRepos\n    },\n    [org, relayEnv],\n  )\n\n  return queryFn\n}\n","import type {PropsWithChildren} from 'react'\nimport {InfoIcon} from '@primer/octicons-react'\nimport {Box, Flash, Octicon} from '@primer/react'\n\nexport function Banner({children}: PropsWithChildren) {\n  return (\n    <Flash\n      sx={{\n        display: 'grid',\n        gridTemplateColumns: 'min-content 1fr',\n        gridTemplateRows: 'min-content',\n        gridTemplateAreas: `'visual message'`,\n      }}\n    >\n      <Box\n        sx={{\n          display: 'grid',\n          paddingBlock: 'var(--base-size-8)',\n          alignSelf: 'start',\n          gridArea: 'visual',\n        }}\n      >\n        <Octicon icon={InfoIcon} />\n      </Box>\n      <Box\n        sx={{\n          fontSize: 1,\n          lineHeight: '1.5',\n          padding: '0.375rem var(--base-size-8)',\n          alignSelf: 'center',\n          gridArea: 'message',\n        }}\n      >\n        {children}\n      </Box>\n    </Flash>\n  )\n}\n\ntry{ Banner.displayName ||= 'Banner' } catch {}","import {useState} from 'react'\nimport {Box, Checkbox, FormControl} from '@primer/react'\n\ninterface Props {\n  canCollectPrivateTelemetry: boolean\n  defaultValue: boolean\n}\n\nexport function PrivateTelemetryCheckbox({canCollectPrivateTelemetry, defaultValue}: Props) {\n  const [collectPrivateTelemetry, setCollectPrivateTelemetry] = useState(defaultValue)\n\n  return (\n    <Box sx={{borderTop: '1px solid var(--borderColor-default, var(--color-border-default))', p: '16px'}}>\n      <FormControl disabled={!canCollectPrivateTelemetry} id=\"private_telemetry\">\n        <Checkbox\n          aria-label=\"Include data from prompts and suggestions\"\n          checked={collectPrivateTelemetry}\n          name=\"private_telemetry\"\n          onChange={() => setCollectPrivateTelemetry(!collectPrivateTelemetry)}\n          value={collectPrivateTelemetry ? 'on' : 'off'}\n        />\n        <FormControl.Label>Include data from prompts and suggestions</FormControl.Label>\n        <FormControl.Caption>\n          Train the model on data collected from developer&apos;s prompts and suggestions for fine-tuning your model. It\n          is strongly recommended to include this data to improve model performance.\n        </FormControl.Caption>\n      </FormControl>\n    </Box>\n  )\n}\n\ntry{ PrivateTelemetryCheckbox.displayName ||= 'PrivateTelemetryCheckbox' } catch {}","import type {FormEvent} from 'react'\nimport type {FormValues} from './types'\n\nfunction stringArrayToArray(str: string): string[] {\n  // The filter covers this case:\n  // str is '', so splitting returns [''], but we just want []\n  return str.split(',').filter(v => !!v)\n}\n\n// Exported for testing purposes only\nexport function toRepoNwos(formValue: string | null): string[] | null {\n  if (formValue === null) return null\n  return stringArrayToArray(formValue)\n}\n\nexport function parseValues(e: FormEvent<EventTarget>, showPrivateTelemetryToggle: boolean): FormValues {\n  const formData = new FormData(e.target as HTMLFormElement)\n  const languages = stringArrayToArray((formData.get('languages') as string) ?? '')\n  const repository_nwos = toRepoNwos(formData.get('repository_nwos') as string)\n\n  const values: FormValues = {languages, repository_nwos}\n\n  if (showPrivateTelemetryToggle) {\n    values.private_telemetry = formData.get('private_telemetry') === 'on'\n  }\n\n  return values\n}\n","import {Box, Flash, Octicon, Text} from '@primer/react'\nimport {StopIcon} from '@primer/octicons-react'\nimport type {ErrorContent} from './types'\n\ninterface Props {\n  errors: ErrorContent[] | undefined\n}\n\nexport function GeneralErrors({errors}: Props) {\n  if (!errors?.length) return null\n\n  return (\n    <>\n      {errors.map(error => (\n        <Flash key={error.heading} sx={{alignItems: 'flex-start', display: 'flex', p: '8px'}} variant=\"danger\">\n          <Box sx={{alignItems: 'center', display: 'flex', justifyContent: 'center', m: '8px'}}>\n            <Octicon\n              icon={StopIcon}\n              size={16}\n              sx={{color: 'var(--fgColor-danger, var(--color-danger-fg))', mr: '0px !important'}}\n            />\n          </Box>\n          <Box sx={{display: 'flex', flexDirection: 'column', px: '8px', py: '6px'}}>\n            <Text sx={{fontWeight: 'semibold'}}>{error.heading}</Text>\n            <span>{error.message}</span>\n          </Box>\n        </Flash>\n      ))}\n    </>\n  )\n}\n\ntry{ GeneralErrors.displayName ||= 'GeneralErrors' } catch {}","import {FormControl} from '@primer/react'\n\nexport function ValidationErrors(props: {errors: string[] | undefined; type: string}) {\n  if (!props.errors?.length) return null\n\n  return (\n    <>\n      {props.errors.map((error: string, index: number) => (\n        <FormControl.Validation key={`${props.type}-${index}`} variant=\"error\">\n          {error}\n        </FormControl.Validation>\n      ))}\n    </>\n  )\n}\n\ntry{ ValidationErrors.displayName ||= 'ValidationErrors' } catch {}","import {Text, type TextProps} from '@primer/react'\n\nexport function Explanation({sx, ...props}: TextProps) {\n  return <Text {...props} sx={{...sx, color: 'fg.muted', fontSize: '14px', mb: '4px'}} />\n}\n\ntry{ Explanation.displayName ||= 'Explanation' } catch {}","import {Box, Token, type TokenProps} from '@primer/react'\nimport {useCallback} from 'react'\n\ninterface Props extends TokenProps {\n  color: string\n}\n\nexport function LanguageToken({color, ...props}: Props) {\n  const leadingVisual = useCallback(() => <Circle color={color} />, [color])\n\n  return <Token leadingVisual={leadingVisual} {...props} size=\"large\" />\n}\n\ninterface CircleProps {\n  color: string\n}\nfunction Circle({color}: CircleProps) {\n  return <Box sx={{backgroundColor: color, borderRadius: '9999px', height: '8px', width: '8px'}} />\n}\n\ntry{ LanguageToken.displayName ||= 'LanguageToken' } catch {}\ntry{ Circle.displayName ||= 'Circle' } catch {}","import {Autocomplete, TextInput, TextInputWithTokens} from '@primer/react'\nimport {useMemo, useState, type ChangeEventHandler} from 'react'\nimport type {Language} from '../../types'\nimport {LanguageToken} from './LanguageToken'\n\ninterface AutocompleteItem {\n  id: string\n  color: string\n  selected?: boolean\n  text: string\n}\n\ninterface Props {\n  initialLanguages?: string[]\n  availableLanguages: Language[]\n}\n\nconst languagesToAutocompleteItems: (languages: Language[]) => AutocompleteItem[] = (languages: Language[]) => {\n  return languages.map(({color: color, id: id, name: text}) => ({color, id: id.toString(), text}))\n}\n\nexport function AutocompleteLanguages({availableLanguages, initialLanguages}: Props) {\n  const allItems = useMemo(() => languagesToAutocompleteItems(availableLanguages), [availableLanguages])\n\n  const tokenizedInitialLanguages = languagesToAutocompleteItems(\n    availableLanguages.filter(e => initialLanguages?.includes(e.name)),\n  )\n\n  const [filterVal, setFilterVal] = useState<string>('')\n  const [selectedItems, setSelectedItems] = useState(tokenizedInitialLanguages)\n  const selectedItemIds = useMemo(() => selectedItems.map(t => t.id), [selectedItems])\n\n  const onTokenRemove = (itemId: string | number): void => {\n    setSelectedItems(selectedItems.filter(item => item.id !== itemId))\n  }\n\n  const handleChange: ChangeEventHandler<HTMLInputElement> = e => {\n    setFilterVal(e.currentTarget.value)\n  }\n\n  const onSelectedChange = (newSelectedItems: AutocompleteItem | AutocompleteItem[]) => {\n    if (!Array.isArray(newSelectedItems)) return\n    setSelectedItems(newSelectedItems.map(({color, id, text}) => ({color, id, text})))\n    setFilterVal('')\n  }\n\n  const customFilterFn = (item: AutocompleteItem) => {\n    if (!filterVal.trim()) return false\n    return item.text.toLowerCase().includes(filterVal.trim().toLowerCase())\n  }\n\n  return (\n    <Autocomplete>\n      <Autocomplete.Input\n        aria-label=\"Language input\"\n        as={TextInputWithTokens}\n        tokenComponent={LanguageToken}\n        tokens={selectedItems}\n        onTokenRemove={onTokenRemove}\n        onChange={handleChange}\n        sx={{width: '100%'}}\n      />\n      <Autocomplete.Overlay sx={{maxHeight: 'min(50vh, 280px)', overflowY: 'auto'}}>\n        <Autocomplete.Menu\n          aria-labelledby=\"autocompleteLabel\"\n          emptyStateText={filterVal.trim() ? 'No languages found' : 'Type to search'}\n          filterFn={customFilterFn}\n          items={allItems}\n          onSelectedChange={onSelectedChange}\n          selectedItemIds={selectedItemIds}\n          selectionVariant=\"multiple\"\n        />\n      </Autocomplete.Overlay>\n      <TextInput\n        readOnly\n        id=\"languages\"\n        name=\"languages\"\n        value={selectedItems.map(item => item.text).join(',')}\n        sx={{display: 'none'}}\n      />\n    </Autocomplete>\n  )\n}\n\ntry{ AutocompleteLanguages.displayName ||= 'AutocompleteLanguages' } catch {}","import {Box, Button, FormControl} from '@primer/react'\nimport {Banner} from './Banner'\nimport type {FormErrors, FormValues} from './types'\nimport type {FormEventHandler} from 'react'\nimport {BorderBox} from '../../components/BorderBox'\nimport {PrivateTelemetryCheckbox} from './PrivateTelemetryCheckbox'\nimport {parseValues} from './utils'\nimport {GeneralErrors} from './GeneralErrors'\nimport {ValidationErrors} from './ValidationErrors'\nimport type {Language} from '../../types'\nimport {Explanation} from './Explanation'\nimport {AutocompleteLanguages} from '../LanguagePicker'\nimport {RepoPicker} from '../RepoPicker'\nimport type {BaseRepo, QueryFn} from '../RepoPicker/types'\n\ninterface Props {\n  adminEmail?: string\n  availableLanguages: Language[]\n  canCollectPrivateTelemetry?: boolean\n  fetchSelected?: () => void\n  formErrors?: FormErrors\n  initialLanguages?: string[]\n  initialRepoCount?: number\n  initialSelectedRepos?: BaseRepo[]\n  isEditing?: boolean\n  isLoadingSelected?: boolean\n  isSubmitting: boolean\n  onCancel?: () => void\n  onSubmit: (formValues: FormValues) => void\n  repoPickerQueryFn: QueryFn\n  showPrivateTelemetryToggle?: boolean\n  wasPrivateTelemetryCollected?: boolean\n}\n\nexport function TrainingForm({\n  adminEmail,\n  availableLanguages,\n  canCollectPrivateTelemetry = false,\n  fetchSelected,\n  formErrors = {},\n  initialLanguages,\n  initialRepoCount,\n  initialSelectedRepos,\n  isEditing = false,\n  isLoadingSelected = false,\n  isSubmitting,\n  onCancel,\n  onSubmit,\n  repoPickerQueryFn,\n  showPrivateTelemetryToggle = false,\n  wasPrivateTelemetryCollected = true,\n}: Props) {\n  const handleSubmit: FormEventHandler = e => {\n    e.preventDefault()\n\n    if (isLoadingSelected) return\n    if (isSubmitting) return\n\n    const values = parseValues(e, showPrivateTelemetryToggle)\n\n    onSubmit(values)\n  }\n\n  const telemetryDefaultValue = isEditing\n    ? canCollectPrivateTelemetry && wasPrivateTelemetryCollected\n    : canCollectPrivateTelemetry\n\n  const isSubmitInactive = isLoadingSelected || isSubmitting\n  const submitLabel = isEditing ? 'Retrain model' : 'Create new custom model'\n\n  return (\n    <Box as=\"form\" onSubmit={handleSubmit} sx={{display: 'flex', flexDirection: 'column', gap: '16px'}}>\n      <GeneralErrors errors={formErrors.general_errors} />\n\n      <BorderBox sx={{display: 'flex', flexDirection: 'column', p: '0px'}}>\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '16px',\n            p: '16px',\n          }}\n        >\n          <FormControl>\n            <FormControl.Label>Select repositories</FormControl.Label>\n            <Explanation>Choose which repositories you want to train your model on</Explanation>\n            <RepoPicker\n              fetchSelected={fetchSelected}\n              initialRepoCount={initialRepoCount}\n              initialSelected={initialSelectedRepos}\n              isLoadingSelected={isLoadingSelected}\n            >\n              <Box sx={{display: 'flex', flexWrap: 'wrap', gap: '8px'}}>\n                <RepoPicker.PickerButton queryFn={repoPickerQueryFn} />\n\n                <RepoPicker.ListButton />\n              </Box>\n\n              <RepoPicker.HiddenTextInput />\n            </RepoPicker>\n\n            <ValidationErrors errors={formErrors.repository_nwos} type={'repository_nwos'} />\n          </FormControl>\n\n          <FormControl>\n            <FormControl.Label htmlFor=\"languages\">Specify languages</FormControl.Label>\n            <Explanation>\n              Targeting languages filters the training data to those languages. This can help reduce data size and make\n              a more targeted custom model.\n            </Explanation>\n            <AutocompleteLanguages availableLanguages={availableLanguages} initialLanguages={initialLanguages} />\n            <FormControl.Caption>\n              If this is left empty, we will use all files in your repositories to train your model.\n            </FormControl.Caption>\n            <ValidationErrors errors={formErrors.languages} type={'languages'} />\n          </FormControl>\n        </Box>\n\n        {showPrivateTelemetryToggle && (\n          <PrivateTelemetryCheckbox\n            canCollectPrivateTelemetry={canCollectPrivateTelemetry}\n            defaultValue={telemetryDefaultValue}\n          />\n        )}\n      </BorderBox>\n\n      <Banner>\n        Training time is based on the amount of data selected and can take a couple of days for large data sets.\n        {!!adminEmail && ` We'll notify you at ${adminEmail} when training is complete.`}\n      </Banner>\n\n      <Box sx={{display: 'flex', gap: '8px'}}>\n        <Button inactive={isSubmitInactive} type=\"submit\" variant=\"primary\">\n          {submitLabel}\n        </Button>\n\n        {onCancel && (\n          <Button onClick={onCancel} variant=\"default\">\n            Cancel\n          </Button>\n        )}\n      </Box>\n    </Box>\n  )\n}\n\ntry{ TrainingForm.displayName ||= 'TrainingForm' } catch {}","import {useState} from 'react'\nimport {useNavigateWithFlashBanner} from '../NavigateWithFlashBanner'\nimport type {FormErrorResponse, FormErrors, FormSuccessResponse, FormValues} from './types'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\n\ninterface Props {\n  createPath: string\n  pipelineId?: string\n}\n\ninterface UseForm {\n  formErrors: FormErrors\n  handleSubmit: (values: FormValues) => Promise<void>\n  isSubmitting: boolean\n}\n\nexport function useForm({createPath, pipelineId}: Props): UseForm {\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [formErrors, setFormErrors] = useState<FormErrors>({})\n  const {navigate} = useNavigateWithFlashBanner()\n\n  // There are three ways this form is submitted\n  // 1. Training on all repos. repository_nwos is an empty array\n  // 2. Training on selected repos. repository_nwos is an array of name-with-orgs (nwos)\n  // 3. Special case when Editing an existing Pipeline Request, if the user wants to train on the previously selected\n  // list of nwos, then repository_nwos is null\n  async function handleSubmit(values: FormValues) {\n    if (isSubmitting) return\n\n    setIsSubmitting(true)\n\n    const body = {...values, pipeline_id: pipelineId}\n    const response = await verifiedFetchJSON(createPath, {method: 'POST', body})\n\n    if (response.ok) {\n      const {payload} = (await response.json()) as FormSuccessResponse\n      const message = pipelineId\n        ? 'Custom model was edited. Started update of custom model.'\n        : 'Created new custom model for this organization.'\n      navigate(payload.redirect_url, {message, variant: 'default'})\n    } else if (response.status === 422) {\n      const {errors} = (await response.json()) as FormErrorResponse\n      setFormErrors(errors)\n      setIsSubmitting(false)\n    } else {\n      setFormErrors({\n        general_errors: [\n          {\n            heading: 'Something went wrong',\n            message: 'Please try again later or contact support if the problem persists.',\n          },\n        ],\n      })\n      setIsSubmitting(false)\n    }\n  }\n\n  return {formErrors, handleSubmit, isSubmitting}\n}\n","import {Box, Flash} from '@primer/react'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport type {RoutePayload} from './types'\nimport {Header} from '../../components/Header'\nimport {useOrgOnlyRepos} from '../../features/RepoPicker'\nimport {TrainingForm, useForm} from '../../features/TrainingForm'\nimport {RelayEnvironmentProvider} from 'react-relay'\nimport {relayEnvironmentWithMissingFieldHandlerForNode} from '@github-ui/relay-environment'\nimport {useFeatureFlag} from '@github-ui/react-core/use-feature-flag'\n\nconst relayEnv = relayEnvironmentWithMissingFieldHandlerForNode()\n\nexport function New() {\n  return (\n    <RelayEnvironmentProvider environment={relayEnv}>\n      <Component />\n    </RelayEnvironmentProvider>\n  )\n}\n\nfunction Component() {\n  const {\n    adminEmail,\n    availableLanguages,\n    canCollectPrivateTelemetry,\n    createPath,\n    enoughDataToTrain,\n    organization: org,\n  } = useRoutePayload<RoutePayload>()\n  const {formErrors, handleSubmit, isSubmitting} = useForm({createPath})\n  const repoPickerQueryFn = useOrgOnlyRepos({org, relayEnv})\n  const showPrivateTelemetryToggle = useFeatureFlag('copilot_private_telemetry_access')\n\n  return (\n    <Box sx={{display: 'flex', flexDirection: 'column', gap: '16px'}}>\n      <Header\n        subtext={\n          enoughDataToTrain\n            ? 'Train your custom model by including repositories and data that is reflective of your commonly used programming languages, internal frameworks, and libraries.'\n            : undefined\n        }\n        text=\"New custom model\"\n      />\n\n      {enoughDataToTrain ? (\n        <TrainingForm\n          adminEmail={adminEmail}\n          availableLanguages={availableLanguages}\n          canCollectPrivateTelemetry={canCollectPrivateTelemetry}\n          formErrors={formErrors}\n          isSubmitting={isSubmitting}\n          onSubmit={handleSubmit}\n          repoPickerQueryFn={repoPickerQueryFn}\n          showPrivateTelemetryToggle={showPrivateTelemetryToggle}\n        />\n      ) : (\n        <Flash>Sorry, you do not have enough repository data in your org to train a model.</Flash>\n      )}\n    </Box>\n  )\n}\n\ntry{ New.displayName ||= 'New' } catch {}\ntry{ Component.displayName ||= 'Component' } catch {}","import {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport type {RoutePayload} from './types'\nimport {Box} from '@primer/react'\nimport {Header} from '../../components/Header'\nimport {QueryClient, QueryClientProvider, useQuery} from '@tanstack/react-query'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport {useNavigateWithFlashBanner} from '../../features/NavigateWithFlashBanner'\nimport {TrainingForm, useForm} from '../../features/TrainingForm'\nimport {RelayEnvironmentProvider} from 'react-relay'\nimport {relayEnvironmentWithMissingFieldHandlerForNode} from '@github-ui/relay-environment'\nimport {useOrgOnlyRepos} from '../../features/RepoPicker'\nimport {useFeatureFlag} from '@github-ui/react-core/use-feature-flag'\nimport type {PipelineRepo} from '../../types'\n\nconst queryClient = new QueryClient()\nconst relayEnv = relayEnvironmentWithMissingFieldHandlerForNode()\n\nexport function Edit() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <RelayEnvironmentProvider environment={relayEnv}>\n        <Component />\n      </RelayEnvironmentProvider>\n    </QueryClientProvider>\n  )\n}\n\nfunction Component() {\n  const {\n    availableLanguages,\n    canCollectPrivateTelemetry,\n    createPath,\n    languages: initialLanguages,\n    organization: org,\n    pipelineId,\n    repoCount: initialRepoCount,\n    repoListPath,\n    showPath,\n    wasPrivateTelemetryCollected,\n  } = useRoutePayload<RoutePayload>()\n  const {navigate} = useNavigateWithFlashBanner()\n  const showPrivateTelemetryToggle = useFeatureFlag('copilot_private_telemetry_access')\n\n  const {formErrors, handleSubmit, isSubmitting} = useForm({createPath, pipelineId})\n  const repoPickerQueryFn = useOrgOnlyRepos({org, relayEnv})\n\n  const handleCancel = () => navigate(showPath)\n\n  const {\n    data: initialSelectedRepos,\n    isLoading: isLoadingSelected,\n    refetch: fetchSelected,\n  } = useQuery({\n    enabled: false,\n    queryKey: ['initial-selected-repos', repoListPath],\n    queryFn: async () => {\n      const path = `${repoListPath}?limit_by=0`\n      const response: Response = await verifiedFetch(path, {method: 'GET'})\n      if (!response.ok) throw new Error(`HTTP ${response.status} ${response.statusText}`)\n\n      const selectedRepos = (await response.json()).data as PipelineRepo[]\n\n      return selectedRepos\n    },\n  })\n\n  const handleFetchSelected = (): void => {\n    if (initialSelectedRepos) return\n    fetchSelected()\n  }\n\n  return (\n    <Box sx={{display: 'flex', flexDirection: 'column', gap: '16px'}}>\n      <Header\n        subtext=\"Update your custom model by including repositories and data that is reflective of your commonly used\n          programming languages, internal frameworks, and libraries. Settings shown reflect the previous model settings.\"\n        text=\"Retrain custom model\"\n      />\n\n      <TrainingForm\n        availableLanguages={availableLanguages}\n        canCollectPrivateTelemetry={canCollectPrivateTelemetry}\n        fetchSelected={handleFetchSelected}\n        formErrors={formErrors}\n        initialLanguages={initialLanguages}\n        initialRepoCount={initialRepoCount}\n        initialSelectedRepos={initialSelectedRepos}\n        isEditing\n        isLoadingSelected={isLoadingSelected}\n        isSubmitting={isSubmitting}\n        onCancel={handleCancel}\n        onSubmit={handleSubmit}\n        repoPickerQueryFn={repoPickerQueryFn}\n        showPrivateTelemetryToggle={showPrivateTelemetryToggle}\n        wasPrivateTelemetryCollected={wasPrivateTelemetryCollected}\n      />\n    </Box>\n  )\n}\n\ntry{ Edit.displayName ||= 'Edit' } catch {}\ntry{ Component.displayName ||= 'Component' } catch {}","import {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport type {RoutePayload} from '../types'\nimport {isPipelineCancelable} from '../../../utils'\nimport {Header} from '../../../components/Header'\nimport {Breadcrumbs, Button} from '@primer/react'\nimport {useCancelDialog} from '../../../components/CancelDialogProvider'\nimport {usePipelineDetails} from '../../../features/PipelineDetails'\n\nexport function TrainingHeader() {\n  const {\n    indexPath,\n    organization: {slug},\n  } = useRoutePayload<RoutePayload>()\n  const {cardPipeline: pipelineDetails} = usePipelineDetails()\n  const {cancelPath} = pipelineDetails\n  const {openDialogForCancelPath} = useCancelDialog()\n\n  const canCancel = isPipelineCancelable(pipelineDetails)\n\n  return (\n    <div>\n      <Breadcrumbs>\n        <Breadcrumbs.Item href={indexPath}>Custom model</Breadcrumbs.Item>\n        <Breadcrumbs.Item selected>Training details</Breadcrumbs.Item>\n      </Breadcrumbs>\n\n      <Header\n        action={\n          canCancel ? (\n            <Button onClick={() => openDialogForCancelPath(cancelPath)} variant=\"danger\">\n              Cancel training\n            </Button>\n          ) : undefined\n        }\n        text={`Training run for ${slug} model`}\n      />\n    </div>\n  )\n}\n\ntry{ TrainingHeader.displayName ||= 'TrainingHeader' } catch {}","import {themeGet, useTheme} from '@primer/react'\nimport {useCallback} from 'react'\n\ntype UseThemeColor = (key: string) => string\n\n// <ThemeProvider colorMode=\"dark\" /> does not overwrite the CSS variables which is why we need\n// to use the themeGet function to get the correct value. An example of `color` below is:\n// \"var(--bgColor-default, var(--color-canvas-default, #0d1117))\"\n// So because ThemeProvider does not overwrite the CSS variables, we need to use the themeGet\n// then parse the color to get the correct color.\nexport function useThemeColor(): UseThemeColor {\n  const {theme} = useTheme()\n\n  const fn = useCallback(\n    (key: string) => {\n      const color = themeGet(key)({theme})\n      return getFallbackColor(color)\n    },\n    [theme],\n  )\n\n  return fn\n}\n\n// example input: \"var(--bgColor-default, var(--color-canvas-default, #0d1117))\"\n// example output: \"#0d1117\"\n// example input: \"var(--control-transparent-bgColor-active, var(--color-action-list-item-default-active-bg, rgba(177,186,196,0.2)))\"\n// example output: \"rgba(177,186,196,0.2)\"\nfunction getFallbackColor(color?: string, fallback?: string): string {\n  if (!color) return fallback ?? ''\n\n  const match = color.match(/#\\w{6}/)\n  if (match?.[0]) return match[0]\n\n  const rgbMatch = color.match(/rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+),?\\s*(\\d*\\.?\\d*)?\\)/)\n  if (rgbMatch) {\n    const [, r, g, b, a] = rgbMatch\n    return `rgba(${r}, ${g}, ${b}, ${a ?? 1})`\n  }\n\n  return fallback ?? color\n}\n","import {Text, type TextProps} from '@primer/react'\n\nexport function NoBreak({sx, ...props}: TextProps) {\n  return <Text sx={{whiteSpace: 'nowrap', ...sx}} {...props} />\n}\n\ntry{ NoBreak.displayName ||= 'NoBreak' } catch {}","import {Box, Text} from '@primer/react'\nimport {format} from 'date-fns'\nimport type {Log, LogLevel} from '../../../../types'\nimport {useThemeColor} from './use-theme-color'\nimport {NoBreak} from '../../../../components/NoBreak'\n\ninterface Props {\n  isGrouped?: boolean\n  log: Log\n}\n\nconst loggedAtColorMap: Record<LogLevel, string> = {\n  LOG_STATE_UNSPECIFIED: 'colors.fg.muted',\n  LOG_STATE_INFO: 'colors.fg.muted',\n  LOG_STATE_WARNING: 'colors.attention.fg',\n  LOG_STATE_ERROR: 'colors.danger.fg',\n}\n\nconst messagePrefixMap: Record<LogLevel, string> = {\n  LOG_STATE_UNSPECIFIED: '',\n  LOG_STATE_INFO: '',\n  LOG_STATE_WARNING: 'Warning: ',\n  LOG_STATE_ERROR: 'Error: ',\n}\n\nexport function Log({isGrouped = false, log}: Props) {\n  const getThemeColor = useThemeColor()\n\n  const loggedAtDate = format(new Date(log.logged_at), 'yyyy-MM-dd')\n  const loggedAtTime = format(new Date(log.logged_at), 'HH:mm:ss')\n  const loggedAtColor = loggedAtColorMap[log.log_level]\n  const messagePrefix = messagePrefixMap[log.log_level]\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        fontFamily: 'var(--fontStack-monospace)',\n        fontSize: '12px',\n        gap: '8px',\n        lineHeight: '20px',\n        pl: isGrouped ? '16px' : undefined,\n        width: '100%',\n      }}\n    >\n      <Text sx={{color: getThemeColor(loggedAtColor), flexShrink: 0, width: ['10ch', '19ch']}}>\n        <NoBreak>{loggedAtDate}</NoBreak> <NoBreak>{loggedAtTime}</NoBreak>\n      </Text>\n      <Text sx={{color: getThemeColor('colors.fg.default'), wordBreak: 'break-word'}}>\n        <Text sx={{color: getThemeColor(loggedAtColor), fontWeight: 'bold'}}>{messagePrefix}</Text>\n        {log.message}\n      </Text>\n    </Box>\n  )\n}\n\ntry{ Log.displayName ||= 'Log' } catch {}","import {useMemo, type SyntheticEvent} from 'react'\nimport type {Log as ILog, LogGroup} from '../../../../types'\nimport {Log} from './Log'\nimport {Box} from '@primer/react'\n\ninterface Props {\n  logGroup: LogGroup\n}\n\nexport function LogGroup({logGroup}: Props) {\n  const {logs, name, ui_group_logs: isGrouped} = logGroup\n  const sortedLogs = useMemo(() => logs.sort(sortFn), [logs])\n\n  if (!isGrouped) return <>{renderLogs(sortedLogs)}</>\n\n  const summary = name || 'View details'\n\n  return (\n    <details onToggle={onToggle}>\n      <Box\n        as=\"summary\"\n        sx={{\n          fontFamily: 'var(--fontStack-monospace)',\n          fontSize: '12px',\n          lineHeight: '20px',\n          width: '100%',\n        }}\n      >\n        {summary}\n      </Box>\n      <div>{renderLogs(sortedLogs, isGrouped)}</div>\n    </details>\n  )\n}\n\nfunction onToggle(e: SyntheticEvent<HTMLDetailsElement, Event>) {\n  e.stopPropagation()\n}\n\nfunction renderLogs(logs: LogGroup['logs'], isGrouped = false) {\n  return logs.map(log => <Log key={`${log.logged_at}-${log.message}`} isGrouped={isGrouped} log={log} />)\n}\n\nfunction sortFn(a: ILog, b: ILog): -1 | 0 | 1 {\n  return a.logged_at < b.logged_at ? -1 : a.logged_at > b.logged_at ? 1 : 0\n}\n\ntry{ LogGroup.displayName ||= 'LogGroup' } catch {}","import type {PipelineStageStatus, Stage} from '../../../../types'\n\nexport const allStatuses: PipelineStageStatus[] = [\n  'PIPELINE_STAGE_STATUS_UNSPECIFIED',\n  'PIPELINE_STAGE_STATUS_PENDING',\n  'PIPELINE_STAGE_STATUS_ENQUEUED',\n  'PIPELINE_STAGE_STATUS_STARTED',\n  'PIPELINE_STAGE_STATUS_COMPLETED',\n  'PIPELINE_STAGE_STATUS_FAILED',\n  'PIPELINE_STAGE_STATUS_SKIPPED',\n  'PIPELINE_STAGE_STATUS_CANCELED',\n]\n\nconst waiting: PipelineStageStatus[] = ['PIPELINE_STAGE_STATUS_UNSPECIFIED', 'PIPELINE_STAGE_STATUS_PENDING']\nconst inProgress: PipelineStageStatus[] = ['PIPELINE_STAGE_STATUS_ENQUEUED', 'PIPELINE_STAGE_STATUS_STARTED']\nconst finished: PipelineStageStatus[] = [\n  'PIPELINE_STAGE_STATUS_COMPLETED',\n  'PIPELINE_STAGE_STATUS_FAILED',\n  'PIPELINE_STAGE_STATUS_SKIPPED',\n  'PIPELINE_STAGE_STATUS_CANCELED',\n]\n\nexport function isInProgress(curr: PipelineStageStatus): boolean {\n  return inProgress.includes(curr)\n}\n\nexport function shouldAutoOpen(prev: PipelineStageStatus | undefined, curr: PipelineStageStatus): boolean {\n  const wasWaiting = !prev || waiting.includes(prev)\n  return wasWaiting && isInProgress(curr)\n}\n\nexport function shouldAutoClose(prev: PipelineStageStatus | undefined, curr: PipelineStageStatus): boolean {\n  const wasStarted = prev === 'PIPELINE_STAGE_STATUS_STARTED'\n  const isFinished = finished.includes(curr)\n  return wasStarted && isFinished\n}\n\nexport function wentBackwards(prev: PipelineStageStatus | undefined, curr: PipelineStageStatus): boolean {\n  if (!prev) return false\n\n  return allStatuses.indexOf(curr) < allStatuses.indexOf(prev)\n}\n\nfunction stageToSortStr(stage: Stage): string {\n  // left-pads the number, so '2' does not come after '10'\n  const order = String(stage.order).padStart(3, '0')\n\n  // Use the name if order not unique, alphabetical, case insensitive\n  const withName = `${order}-${stage.name.toLowerCase()}`\n\n  return withName\n}\n\nexport function stageSortFn(a: Stage, b: Stage): number {\n  return stageToSortStr(a).localeCompare(stageToSortStr(b))\n}\n","import {Box, Button, Details, Octicon, useDetails} from '@primer/react'\nimport type {PipelineStageStatus, Stage} from '../../../../types'\nimport {ChevronDownIcon, ChevronRightIcon} from '@primer/octicons-react'\nimport {LogGroup} from './LogGroup'\nimport {useEffect, useRef, type MouseEventHandler} from 'react'\nimport {StageIcon} from './StageIcon'\nimport {isInProgress, shouldAutoClose, shouldAutoOpen, wentBackwards} from './utils'\nimport {useThemeColor} from './use-theme-color'\n\ninterface Props {\n  stage: Stage\n}\n\n// Actions has the background color of: var(--control-bgColor-active, var(--color-action-list-item-default-active-bg))\n// var(--control-bgColor-active) is #31363e in dark mode, as seen in `dark.css`\n// `theme` does not have a `colors.control.bg.active` or anything similar. So hardcoding this is the simplest and\n// most accurate way to get the color.\nconst controlBgColorActive = '#31363e'\n\nexport function Stage({stage}: Props) {\n  const {name, status, log_groups: logGroups} = stage\n  const {getDetailsProps, open: isOpen, setOpen} = useDetails({defaultOpen: isInProgress(status)})\n  const hasBeenClickedRef = useRef(false)\n  const prevStageRef = useRef<PipelineStageStatus | undefined>()\n  const getThemeColor = useThemeColor()\n\n  const isEmpty = !logGroups.length\n\n  useEffect(() => {\n    // We do not want to auto open/close an accordion if the user has already interacted with it. Only auto\n    // open/close when the user has not taken action.\n    if (hasBeenClickedRef.current) return\n\n    const prev = prevStageRef.current\n    const curr = status\n\n    // This hook is always called twice, with the second time having the order\n    // _reversed_, so we always want to enforce it going forward. It is most likely\n    // called twice due to the needed dependency on `setOpen`.\n    if (wentBackwards(prev, curr)) return\n    if (prev === curr) return\n\n    if (shouldAutoOpen(prev, curr)) setOpen(true)\n    if (shouldAutoClose(prev, curr)) setOpen(false)\n\n    prevStageRef.current = curr\n  }, [status, setOpen, isOpen])\n\n  const handleClick: MouseEventHandler = e => {\n    if (isEmpty) {\n      e.preventDefault()\n      return\n    } else {\n      // Do not track expansion when it's empty\n      hasBeenClickedRef.current = true\n    }\n  }\n\n  return (\n    <Details {...getDetailsProps()}>\n      <Button\n        alignContent=\"start\"\n        as=\"summary\"\n        onClick={handleClick}\n        sx={{\n          backgroundColor: isOpen ? `${controlBgColorActive} !important` : 'transparent',\n          '&:active': {\n            backgroundColor: isEmpty ? 'transparent !important' : `${controlBgColorActive} !important`,\n          },\n          '&:hover': {\n            backgroundColor: isEmpty\n              ? 'transparent !important'\n              : isOpen\n                ? `${controlBgColorActive} !important`\n                : `${getThemeColor('colors.actionListItem.default.hoverBg')} !important`,\n          },\n          border: 'solid 1px transparent !important',\n          boxShadow: 'none',\n          color: isOpen ? getThemeColor('colors.fg.default') : getThemeColor('colors.fg.muted'),\n          cursor: isEmpty ? 'default' : 'pointer',\n          fontWeight: 'normal',\n          p: '8px',\n        }}\n      >\n        <Box sx={{alignItems: 'center', display: 'flex', gap: '8px'}}>\n          <Octicon\n            icon={isOpen ? ChevronDownIcon : ChevronRightIcon}\n            sx={{visibility: isEmpty ? 'hidden' : 'inherit'}}\n          />\n          <StageIcon status={status} />\n          <span>{name}</span>\n        </Box>\n      </Button>\n\n      <Box sx={{my: '8px', px: '16px'}}>\n        {logGroups.map(logGroup => (\n          <LogGroup key={logGroup.name} logGroup={logGroup} />\n        ))}\n      </Box>\n    </Details>\n  )\n}\n\ntry{ Stage.displayName ||= 'Stage' } catch {}","import {Box} from '@primer/react'\nimport {useMemo} from 'react'\nimport {Stage} from './Stage'\nimport {stageSortFn} from './utils'\nimport {usePipelineDetails} from '../../../../features/PipelineDetails'\nimport {useThemeColor} from './use-theme-color'\n\nexport function TrainingSteps() {\n  const {\n    cardPipeline: {stages: unsortedStages},\n  } = usePipelineDetails()\n  const stages = useMemo(() => unsortedStages.sort(stageSortFn), [unsortedStages])\n  const getThemeColor = useThemeColor()\n\n  if (!stages.length) return null\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: getThemeColor('colors.canvas.inset'),\n        borderRadius: '6px',\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '4px',\n        p: ['0px', '16px'],\n      }}\n    >\n      {stages.map(stage => (\n        <Stage key={`${stage.order}-${stage.name}`} stage={stage} />\n      ))}\n    </Box>\n  )\n}\n\ntry{ TrainingSteps.displayName ||= 'TrainingSteps' } catch {}","import {Box, ThemeProvider} from '@primer/react'\nimport {QueryClient, QueryClientProvider} from '@tanstack/react-query'\nimport {TrainingHeader} from './components/TrainingHeader'\nimport {TrainingSteps} from './features/TrainingSteps'\nimport {PipelineCard} from '../../features/PipelineCard'\nimport {CancelDialogProvider} from '../../components/CancelDialogProvider'\nimport {PipelineBanner} from '../../features/PipelineBanner'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport type {RoutePayload} from './types'\nimport {PipelineDetailsProvider} from '../../features/PipelineDetails'\n\nconst queryClient = new QueryClient()\n\nexport function Show() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <CancelDialogProvider>\n        <Component />\n      </CancelDialogProvider>\n    </QueryClientProvider>\n  )\n}\n\nfunction Component() {\n  const {adminEmail, hasAnyDeployed, isStale, organization, pipelineDetails, withinRateLimit} =\n    useRoutePayload<RoutePayload>()\n\n  return (\n    <Box sx={{display: 'flex', flexDirection: 'column', gap: '16px'}}>\n      <PipelineDetailsProvider\n        adminEmail={adminEmail}\n        hasAnyDeployed={hasAnyDeployed}\n        isStale={isStale}\n        isViewingDetails\n        org={organization.slug}\n        pipelineForBanner={pipelineDetails}\n        pipelineForCard={pipelineDetails}\n        withinRateLimit={withinRateLimit}\n      >\n        <TrainingHeader />\n        <PipelineBanner />\n        <PipelineCard />\n        <ThemeProvider colorMode=\"dark\">\n          <TrainingSteps />\n        </ThemeProvider>\n      </PipelineDetailsProvider>\n    </Box>\n  )\n}\n\ntry{ Show.displayName ||= 'Show' } catch {}\ntry{ Component.displayName ||= 'Component' } catch {}","import {App} from './App'\nimport {TransitionType} from '@github-ui/react-core/app-routing-types'\nimport {registerReactAppFactory} from '@github-ui/react-core/register-app'\nimport {jsonRoute} from '@github-ui/react-core/json-route'\nimport {Index} from './routes/Index/Page'\nimport {New} from './routes/New/Page'\nimport {Edit} from './routes/Edit/Page'\nimport {Show} from './routes/Show/Page'\n\nregisterReactAppFactory('copilot-custom-models', () => ({\n  App,\n  routes: [\n    jsonRoute({\n      path: '/organizations/:org/settings/copilot/custom_models',\n      Component: Index,\n      transitionType: TransitionType.FETCH_THEN_TRANSITION,\n    }),\n    jsonRoute({\n      path: '/organizations/:org/settings/copilot/custom_model/new',\n      Component: New,\n      transitionType: TransitionType.FETCH_THEN_TRANSITION,\n    }),\n    jsonRoute({\n      path: '/organizations/:org/settings/copilot/custom_model/training/:custom_model_id',\n      Component: Show,\n      transitionType: TransitionType.FETCH_THEN_TRANSITION,\n    }),\n    jsonRoute({\n      path: '/organizations/:org/settings/copilot/custom_model/:custom_model_id/edit',\n      Component: Edit,\n      transitionType: TransitionType.FETCH_THEN_TRANSITION,\n    }),\n  ],\n}))\n","// Check if the navigation is only a hash change.\nconst isHashNavigation = (currentUrl: string, targetUrl: string): boolean => {\n  const current = new URL(currentUrl, window.location.origin)\n  const target = new URL(targetUrl, window.location.origin)\n  const hasHash = target.href.includes('#')\n\n  return (\n    hasHash && current.host === target.host && current.pathname === target.pathname && current.search === target.search\n  )\n}\n\nexport default isHashNavigation\n","// Attempt to use the `org` parameter to filter the results if we have a `/` present in the query\n// This is to be used with the `search` graphQL endpoint for type `Repository` only.\nexport function getRepositorySearchQuery(queryString: string): string {\n  const orgIndexSplit = queryString.indexOf('/')\n\n  // If there is no / in the query, or the org name is empty, just search for the repo name\n  if (orgIndexSplit === -1 || orgIndexSplit === 0) {\n    return `${queryString} in:name archived:false`\n  }\n\n  // Naively extract the org name and repo name from the query by assuming anything before the / is the org name\n  const orgSearchName = queryString.slice(0, orgIndexSplit)\n  const repoSearchName = queryString.slice(orgIndexSplit + 1)\n\n  if (repoSearchName.length === 0) {\n    return `org:${orgSearchName} in:name archived:false`\n  }\n\n  return `org:${orgSearchName} ${repoSearchName} in:name archived:false`\n}\n","import React, {startTransition} from 'react'\nimport {\n  createSearchParams,\n  matchRoutes,\n  resolvePath,\n  useLocation,\n  useNavigate as useReactRouterNavigate,\n  useSearchParams as useReactRouterSearchParams,\n  type NavigateOptions,\n  type To,\n  type URLSearchParamsInit,\n} from 'react-router-dom'\n\nimport isHashNavigation from '@github-ui/is-hash-navigation'\nimport {AppContext} from '@github-ui/react-core/app-context'\nimport {startSoftNav} from '@github-ui/soft-nav/state'\nimport {PREVENT_AUTOFOCUS_KEY} from '@github-ui/react-core/prevent-autofocus'\n\nexport interface NavigateOptionsWithPreventAutofocus extends NavigateOptions {\n  preventAutofocus?: boolean\n}\n\nexport const useNavigate = (): ((to: To, options?: NavigateOptionsWithPreventAutofocus) => void) => {\n  const {routes, history} = React.useContext(AppContext)\n  const reactRouterNavigate = useReactRouterNavigate()\n  return React.useCallback(\n    (to, navigateOptions = {}) => {\n      const pathname = resolvePath(to).pathname\n      const isExternalToApp = !matchRoutes(routes, pathname)\n\n      if (isExternalToApp) {\n        const href = history.createHref(to)\n        ;(async () => {\n          const {softNavigate: turboSoftNavigate} = await import('@github-ui/soft-navigate')\n          turboSoftNavigate(href)\n        })()\n      } else {\n        if (!isHashNavigation(location.href, to.toString())) {\n          startSoftNav('react')\n        }\n        const {preventAutofocus, ...options} = navigateOptions\n        startTransition(() => {\n          reactRouterNavigate(\n            to,\n            preventAutofocus\n              ? {\n                  ...options,\n                  state: {\n                    [PREVENT_AUTOFOCUS_KEY]: true,\n                    ...options.state,\n                  },\n                }\n              : options,\n          )\n          const {turbo, ...state} = window.history.state\n          window.history.replaceState({...state, skipTurbo: true}, '', location.href)\n        })\n      }\n    },\n    [history, reactRouterNavigate, routes],\n  )\n}\n\n/**\n * An implementation of `useSearchParams` that mirrors `react-router-dom`'s `useSearchParams` hook\n * but utilizes `@github-ui/useNavigate` instead of `react-router` `useNavigate` to handle updates.\n */\nexport const useSearchParams = () => {\n  const [searchParams] = useReactRouterSearchParams()\n  const navigate = useNavigate()\n  const {pathname} = useLocation()\n\n  const setSearchParams = React.useCallback<\n    (\n      nextInit?: URLSearchParamsInit | ((prev: URLSearchParams) => URLSearchParamsInit),\n      navigateOpts?: NavigateOptionsWithPreventAutofocus,\n    ) => void\n  >(\n    (nextInit, navigateOptions = {}) => {\n      const newSearchParams = createSearchParams(typeof nextInit === 'function' ? nextInit(searchParams) : nextInit)\n      navigate(\n        {\n          pathname,\n          search: newSearchParams.toString(),\n        },\n        navigateOptions,\n      )\n    },\n    [searchParams, navigate, pathname],\n  )\n\n  return [searchParams, setSearchParams] as const\n}\n","import {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {\n  // eslint-disable-next-line no-restricted-imports\n  Avatar,\n  type AvatarProps,\n} from '@primer/react'\nimport {forwardRef, useMemo} from 'react'\n\nexport type GitHubAvatarProps = AvatarProps\n\nexport const GitHubAvatar = forwardRef<HTMLImageElement, GitHubAvatarProps>(function GitHubAvatar(\n  {src, size = 20, ...otherProps}: GitHubAvatarProps,\n  ref,\n) {\n  const avatarUrl = useMemo(() => {\n    // src maybe be relative, e.g. `/mona.png`, in which case the instances main origin should be used,\n    // e.g. \"https://github.com\" for dotcom. If src is a fully quallified URL then the origin argument is ignored.\n    const url = new URL(src, ssrSafeLocation.origin)\n\n    // do not override size if it's already set as query parameter\n    if (!url.searchParams.has('size') && !url.searchParams.has('s')) {\n      // we double size for better rendering on high density pixel screens\n      url.searchParams.set('size', String(Number(size) * 2))\n    }\n\n    return url.toString()\n  }, [src, size])\n\n  return <Avatar ref={ref} src={avatarUrl} size={size} data-testid=\"github-avatar\" {...otherProps} />\n})\n\ntry{ GitHubAvatar.displayName ||= 'GitHubAvatar' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Description-module__container--b3n6F\"};","import {testIdProps} from '@github-ui/test-id-props'\nimport {Box} from '@primer/react'\nimport {clsx} from 'clsx'\n\nimport type {StylableProps} from '../types'\nimport styles from './Description.module.css'\n\ninterface ListItemDescriptionProps extends StylableProps {\n  children?: React.ReactNode\n}\n\nexport function ListItemDescription({children, style, className, sx}: ListItemDescriptionProps) {\n  return (\n    <Box\n      {...testIdProps('list-view-item-description')}\n      className={clsx(styles.container, className)}\n      style={style}\n      sx={sx}\n    >\n      {children}\n    </Box>\n  )\n}\n\ntry{ ListItemDescription.displayName ||= 'ListItemDescription' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"default\":\"DescriptionItem-module__default--HJ0Qf\",\"compact\":\"DescriptionItem-module__compact--_BAuz\"};","import {testIdProps} from '@github-ui/test-id-props'\nimport {Box, type BoxProps} from '@primer/react'\nimport {clsx} from 'clsx'\nimport {useEffect, useRef} from 'react'\n\nimport {useListViewVariant} from '../ListView/VariantContext'\nimport type {StylableProps} from '../types'\nimport {useListItemDescription} from './DescriptionContext'\nimport styles from './DescriptionItem.module.css'\n\nexport function ListItemDescriptionItem({children, className, ...props}: Omit<BoxProps, 'sx'> & StylableProps) {\n  const {variant} = useListViewVariant()\n  const {setDescription} = useListItemDescription()\n  const ref = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (ref.current) {\n      // Compose the ListItem description from the aria-label property of the DescriptionItem children\n      const childrenAriaLabels = ref.current?.querySelectorAll('[aria-label]')\n      let description = Array.from(childrenAriaLabels).reduce((metadataLabel: string, element: Element) => {\n        return metadataLabel + element.getAttribute('aria-label')?.trim()\n      }, '')\n      if (!description && ref.current.textContent) description = ref.current.textContent.trim()\n      setDescription(description)\n    }\n  }, [setDescription])\n\n  return (\n    <Box\n      ref={ref}\n      {...testIdProps('list-view-item-descriptionitem')}\n      {...props}\n      className={clsx(styles.default, variant === 'compact' && styles.compact, className)}\n    >\n      {children}\n    </Box>\n  )\n}\n\ntry{ ListItemDescriptionItem.displayName ||= 'ListItemDescriptionItem' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LeadingContent-module__container--NoK8W\",\"isSelectable\":\"LeadingContent-module__isSelectable--J9kYS\"};","import {testIdProps} from '@github-ui/test-id-props'\nimport {Box} from '@primer/react'\nimport {clsx} from 'clsx'\nimport type {PropsWithChildren} from 'react'\n\nimport {useListViewSelection} from '../ListView/SelectionContext'\nimport type {StylableProps} from '../types'\nimport styles from './LeadingContent.module.css'\n\nexport const ListItemLeadingContent = ({style, className, sx, children}: PropsWithChildren<StylableProps>) => {\n  const {isSelectable} = useListViewSelection()\n\n  return (\n    <Box\n      className={clsx(styles.container, isSelectable && styles.isSelectable, className)}\n      {...testIdProps('list-view-item-leading-content')}\n      style={style}\n      sx={sx}\n    >\n      {children}\n    </Box>\n  )\n}\n\ntry{ ListItemLeadingContent.displayName ||= 'ListItemLeadingContent' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"outer\":\"LeadingVisual-module__outer--SJchr\",\"hasNewActivity\":\"LeadingVisual-module__hasNewActivity--soQyL\",\"defaultVariant\":\"LeadingVisual-module__defaultVariant--ITyiW\",\"inner\":\"LeadingVisual-module__inner--O92jr\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"UnreadIndicator-module__container--RzNLy\"};","import {testIdProps} from '@github-ui/test-id-props'\n\nimport styles from './UnreadIndicator.module.css'\n\nexport const ListItemUnreadIndicator = () => {\n  return (\n    <div className={styles.container}>\n      <span className=\"sr-only\" {...testIdProps('list-view-item-unread-indicator')}>\n        New activity.\n      </span>\n    </div>\n  )\n}\n\ntry{ ListItemUnreadIndicator.displayName ||= 'ListItemUnreadIndicator' } catch {}","import {testIdProps} from '@github-ui/test-id-props'\nimport {Octicon, type OcticonProps} from '@primer/react'\nimport {clsx} from 'clsx'\nimport {type PropsWithChildren, type ReactNode, useEffect} from 'react'\n\nimport {useListViewVariant} from '../ListView/VariantContext'\nimport styles from './LeadingVisual.module.css'\nimport {useListItemNewActivity} from './NewActivityContext'\nimport {useListItemStatus} from './StatusContext'\nimport {ListItemUnreadIndicator} from './UnreadIndicator'\n\nexport type ListItemLeadingVisualProps = {\n  /**\n   * The Octicon component representing the desired icon\n   */\n  icon?: OcticonProps['icon']\n  /**\n   * Render any child content as the leading visual\n   * NOTE: if both icon and children are passed, the icon will be rendered first, with the children appended after\n   */\n  children?: ReactNode\n  /**\n   * The name of the Primer variable that will be used for the icon's fill\n   * eg.: done.fg\n   */\n  color?: string\n  /**\n   * A text description of the item\n   * Used for visually hidden text to describe the item on focus for the screen readers\n   */\n  description?: string\n  /**\n   * Indicates whether the rendered item has new content since lastViewed\n   */\n  newActivity?: boolean\n}\n\nexport function ListItemLeadingVisual({\n  icon,\n  color,\n  description,\n  newActivity = false,\n  children,\n  ...props\n}: ListItemLeadingVisualProps & PropsWithChildren) {\n  const {variant} = useListViewVariant()\n  const {setStatus} = useListItemStatus()\n  const {setHasNewActivity} = useListItemNewActivity()\n  const trimmedDescription = description?.trim()\n\n  useEffect(() => {\n    setHasNewActivity(newActivity)\n  }, [newActivity, setHasNewActivity])\n\n  useEffect(() => {\n    if (trimmedDescription) setStatus(trimmedDescription)\n  }, [setStatus, trimmedDescription])\n\n  return (\n    <div\n      className={clsx(\n        styles.outer,\n        variant === 'default' && styles.defaultVariant,\n        newActivity && styles.hasNewActivity,\n      )}\n      {...props}\n    >\n      <div>\n        <div {...testIdProps('list-view-leading-visual')} className={styles.inner}>\n          {icon && <Octicon aria-label=\"\" icon={icon} color={color} />}\n          {children}\n          {trimmedDescription && (\n            <span className=\"sr-only\" {...testIdProps('leading-visual-text-description')}>\n              {trimmedDescription}\n            </span>\n          )}\n        </div>\n      </div>\n      {newActivity && <ListItemUnreadIndicator />}\n    </div>\n  )\n}\n\ntry{ ListItemLeadingVisual.displayName ||= 'ListItemLeadingVisual' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MainContent-module__container--ry4iL\",\"inner\":\"MainContent-module__inner--bU_tk\",\"compact\":\"MainContent-module__compact--mM626\"};","import {testIdProps} from '@github-ui/test-id-props'\nimport {clsx} from 'clsx'\nimport {Children, isValidElement, type ReactNode} from 'react'\n\nimport {useListViewVariant} from '../ListView/VariantContext'\nimport styles from './MainContent.module.css'\nimport {ListItemTitle} from './Title'\n\nexport function ListItemMainContent({children}: {children?: ReactNode}) {\n  const {variant} = useListViewVariant()\n  const childrenArray = Children.toArray(children)\n  const titleIndex = childrenArray.findIndex(\n    child => isValidElement(child) && typeof child !== 'string' && child.type === ListItemTitle,\n  )\n  const title = childrenArray[titleIndex]\n  const nonTitleChildren =\n    titleIndex < 0 ? childrenArray : childrenArray.slice(0, titleIndex).concat(childrenArray.slice(titleIndex + 1))\n  return (\n    <>\n      {title}\n      <div {...testIdProps('list-view-item-main-content')} className={styles.container}>\n        <div className={clsx(styles.inner, variant === 'compact' && styles.compact)}>{nonTitleChildren}</div>\n      </div>\n    </>\n  )\n}\n\ntry{ ListItemMainContent.displayName ||= 'ListItemMainContent' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"metadata\":\"Metadata-module__metadata--yvrod\",\"secondary\":\"Metadata-module__secondary--zMgLx\",\"primary\":\"Metadata-module__primary--cJgJU\",\"alignRight\":\"Metadata-module__alignRight--rp0_Z\"};","import {testIdProps} from '@github-ui/test-id-props'\nimport {Box, type BoxProps} from '@primer/react'\nimport {clsx} from 'clsx'\nimport type {PropsWithChildren} from 'react'\n\nimport type {StylableProps} from '../types'\nimport styles from './Metadata.module.css'\n\nexport type ListItemMetadataProps = PropsWithChildren<{\n  /**\n   * Controls how the metadata will be aligned inside the trailing content. Defaults to 'left'.\n   */\n  alignment?: 'left' | 'right'\n  /**\n   * Alter the appearance of the metadata to appear more subtle than other ListItem content ('secondary', default) or\n   * comparable to other ListItem content ('primary'). Affects text color, font size, width, and distance from other\n   * metadata items.\n   */\n  variant?: 'primary' | 'secondary'\n}> &\n  Omit<BoxProps, 'sx'> &\n  StylableProps\n\nexport function ListItemMetadata({children, alignment, variant, ...props}: ListItemMetadataProps) {\n  return (\n    <Box\n      {...testIdProps('list-view-item-metadata-item')}\n      {...props}\n      className={clsx(\n        styles.metadata,\n        variant === 'primary' ? styles.primary : styles.secondary,\n        alignment === 'right' && styles.alignRight,\n        props.className,\n      )}\n    >\n      {children}\n    </Box>\n  )\n}\n\ntry{ ListItemMetadata.displayName ||= 'ListItemMetadata' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TrailingBadge-module__container--gg6pc\",\"label\":\"TrailingBadge-module__label--F7ho5\",\"title\":\"TrailingBadge-module__title--FDayi\"};","import {testIdProps} from '@github-ui/test-id-props'\nimport {Box, Label, type LabelProps} from '@primer/react'\nimport {clsx} from 'clsx'\nimport type {PropsWithChildren} from 'react'\n\nimport type {PrefixedStylableProps} from '../types'\nimport styles from './TrailingBadge.module.css'\n\nexport type ListItemTrailingBadgeProps = PropsWithChildren<Pick<LabelProps, 'variant' | 'size'>> &\n  PrefixedStylableProps<'container'> & {\n    /**\n     * Text that is shown as a visible Primer Label and as visually hidden text for screen readers.\n     */\n    title: string\n  }\n\nexport const ListItemTrailingBadge = ({\n  title,\n  containerStyle,\n  containerSx,\n  containerClassName,\n  children,\n  ...props\n}: ListItemTrailingBadgeProps) => {\n  return (\n    <Box\n      {...testIdProps('list-view-item-trailing-badge')}\n      className={clsx(styles.container, containerClassName)}\n      style={containerStyle}\n      sx={containerSx}\n      data-listview-component=\"trailing-badge\"\n    >\n      {children ? (\n        children\n      ) : (\n        <Label className={styles.label} {...props}>\n          <span className={styles.title}>{title}</span>\n        </Label>\n      )}\n    </Box>\n  )\n}\n\ntry{ ListItemTrailingBadge.displayName ||= 'ListItemTrailingBadge' } catch {}","import {announceFromElement} from '@github-ui/aria-live'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {Box} from '@primer/react'\nimport {clsx} from 'clsx'\nimport type {ReactElement, ReactNode, Suspense} from 'react'\nimport {isValidElement, useCallback, useEffect, useRef} from 'react'\n\nimport densityStyles from '../density-gap.module.css'\nimport {useNextHeaderTag} from '../hooks/use-next-header-tag'\nimport type {PrefixedStylableProps, StylableProps} from '../types'\nimport {ListViewActionBar, type ListViewActionBarProps} from './ActionBar'\nimport {useListViewId} from './IdContext'\nimport styles from './Metadata.module.css'\nimport type {ListViewSectionFilterLinks} from './SectionFilterLink'\nimport {ListViewSectionFilters} from './SectionFilters'\nimport {ListViewSelectAllCheckbox} from './SelectAllCheckbox'\nimport {useListViewSelection} from './SelectionContext'\nimport {useListViewTitle} from './TitleContext'\n\nexport type ListViewMetadataProps = {\n  /**\n   * The rendered title of the list or information regarding its contents.\n   */\n  title?: string | ReactNode\n  /**\n   * Links for applying any categorical, mutually exclusive section filters for the content of the ListView.\n   */\n  sectionFilters?: ListViewSectionFilterLinks | ReactElement<typeof Suspense>\n  /**\n   * Used for assistive announcements that are reflective of the visual updates to the list container a sighted user\n   * will experience when using the list. Defaults to no announcement. Visually hidden, for screenreaders only.\n   */\n  assistiveAnnouncement?: string\n  /**\n   * Callback for when the checkbox for selecting and deselecting all list items is toggled.\n   */\n  onToggleSelectAll?: (isSelectAllChecked: boolean) => void\n  /**\n   * Optional additional actions to show. Will not fall into an overflow dropdown menu to accommodate small screen\n   * widths.\n   */\n  children?: ReactNode\n} & StylableProps &\n  PrefixedStylableProps<'actions'> &\n  ListViewActionBarProps\n\nexport const ListViewMetadata = ({\n  title,\n  assistiveAnnouncement,\n  sectionFilters,\n  children,\n  style,\n  sx,\n  className,\n  actionsStyle,\n  actionsSx,\n  actionsClassName,\n  onToggleSelectAll,\n  ...actionBarProps\n}: ListViewMetadataProps) => {\n  const {idPrefix} = useListViewId()\n  const {anyItemsSelected} = useListViewSelection()\n  const {setHasMetadataTitle} = useListViewTitle()\n  const TitleTag = useNextHeaderTag('list-view-metadata')\n  const announceRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    setHasMetadataTitle(!!title)\n  })\n\n  useEffect(() => {\n    if (announceRef.current) announceFromElement(announceRef.current)\n  }, [assistiveAnnouncement])\n\n  const ListViewAnnouncements = () => {\n    return (\n      <div\n        id={`${idPrefix}-list-view-announcements`}\n        role=\"status\"\n        aria-live=\"polite\"\n        aria-atomic=\"true\"\n        className=\"sr-only\"\n        ref={announceRef}\n        {...testIdProps('list-view-announcement-container')}\n      >\n        {assistiveAnnouncement}\n      </div>\n    )\n  }\n\n  const ListFilters = useCallback(() => {\n    if (!sectionFilters) return null\n\n    if (Array.isArray(sectionFilters)) {\n      return <ListViewSectionFilters links={sectionFilters} />\n    } else if (isValidElement(sectionFilters)) {\n      return <>{sectionFilters}</>\n    }\n    return null\n  }, [sectionFilters])\n\n  return (\n    <Box\n      id={`${idPrefix}-list-view-metadata`}\n      className={clsx(styles.container, className, anyItemsSelected && densityStyles.spacious)}\n      style={style}\n      sx={sx}\n      {...testIdProps('list-view-metadata')}\n    >\n      <ListViewSelectAllCheckbox\n        onToggle={(isSelectAllChecked: boolean) => {\n          if (onToggleSelectAll) onToggleSelectAll(isSelectAllChecked)\n        }}\n      />\n\n      <ListFilters />\n\n      {title && !anyItemsSelected && (\n        <TitleTag className={styles.heading} {...testIdProps('list-view-header-title')}>\n          {title}\n        </TitleTag>\n      )}\n\n      <ListViewActionBar style={actionsStyle} sx={actionsSx} className={actionsClassName} {...actionBarProps}>\n        {children}\n      </ListViewActionBar>\n\n      {assistiveAnnouncement && <ListViewAnnouncements />}\n    </Box>\n  )\n}\n\ntry{ ListViewMetadata.displayName ||= 'ListViewMetadata' } catch {}\ntry{ TitleTag.displayName ||= 'TitleTag' } catch {}\ntry{ ListViewAnnouncements.displayName ||= 'ListViewAnnouncements' } catch {}\ntry{ ListFilters.displayName ||= 'ListFilters' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"normal\":\"density-gap-module__normal--WYrBD\",\"none\":\"density-gap-module__none--WMH6V\",\"condensed\":\"density-gap-module__condensed--seZl0\",\"spacious\":\"density-gap-module__spacious--Nnm9Z\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ActionBar-module__container--SjALR\"};","import {ActionBar as GitHubUiActionBar, type ActionBarProps as GitHubUiActionBarProps} from '@github-ui/action-bar'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {Box} from '@primer/react'\nimport {clsx} from 'clsx'\nimport type {ReactElement} from 'react'\n\nimport densityStyles from '../density-gap.module.css'\nimport type {StylableProps} from '../types'\nimport styles from './ActionBar.module.css'\nimport type {ListViewDensityToggle} from './DensityToggle'\n\n// Require actionsLabel if actions are provided, and vice versa.\ntype ListViewActionBar =\n  | {\n      /**\n       * Description of the controls found in the action bar, e.g., \"Issue actions\", \"Markdown formatting tools\".\n       * Will be used in a hidden label for accessibility purposes. Defaults to the title for the ListView.\n       */\n      actionsLabel: GitHubUiActionBarProps['label']\n      /**\n       * The controls to show in the action bar. These will move into a dropdown menu when the screen isn't big enough to\n       * fit them side by side.\n       */\n      actions: GitHubUiActionBarProps['actions']\n    }\n  | {actionsLabel?: undefined; actions?: undefined}\n\nexport type ListViewActionBarProps = ListViewActionBar & {\n  /**\n   * Include a toggle to switch between Comfortable and Condensed view modes.\n   */\n  densityToggle?: ReactElement<typeof ListViewDensityToggle>\n} & StylableProps &\n  Omit<GitHubUiActionBarProps, 'actions' | 'label'>\n\nexport const ListViewActionBar = ({\n  actions,\n  style,\n  sx,\n  className,\n  children,\n  density,\n  actionsLabel,\n  densityToggle,\n}: ListViewActionBarProps) => {\n  const nonCollapsibleActions = (\n    <>\n      {children}\n      {densityToggle}\n    </>\n  )\n\n  if (actions && actions.length > 0) {\n    return (\n      <GitHubUiActionBar\n        label={actionsLabel?.trim()}\n        actions={actions}\n        density={density}\n        {...testIdProps('list-view-actions')}\n        style={style}\n        sx={sx}\n        className={className}\n      >\n        {nonCollapsibleActions}\n      </GitHubUiActionBar>\n    )\n  }\n\n  return (\n    <Box\n      {...testIdProps('list-view-actions')}\n      style={style}\n      sx={sx}\n      className={clsx(styles.container, density && densityStyles[density], className)}\n    >\n      {nonCollapsibleActions}\n    </Box>\n  )\n}\n\ntry{ ListViewActionBar.displayName ||= 'ListViewActionBar' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Metadata-module__container--tL6Q3\",\"heading\":\"Metadata-module__heading--HAxII\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SectionFilters-module__container--MmIUF\"};","import {testIdProps} from '@github-ui/test-id-props'\nimport {clsx} from 'clsx'\n\nimport type {ListViewSectionFilterLinks} from './SectionFilterLink'\nimport styles from './SectionFilters.module.css'\n\ntype ListViewSectionFiltersProps = {\n  links: ListViewSectionFilterLinks\n}\n\nexport const ListViewSectionFilters = ({links}: ListViewSectionFiltersProps) => {\n  if (links.length < 1) return null\n\n  return (\n    <div {...testIdProps('list-view-section-filters')}>\n      <ul className={clsx('list-style-none', styles.container)}>\n        {links.map((sectionFilterLink, index) => (\n          <li key={`section-filter-${index}`} {...testIdProps(`list-view-section-filter-${index}`)}>\n            {sectionFilterLink}\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\ntry{ ListViewSectionFilters.displayName ||= 'ListViewSectionFilters' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SelectAllCheckbox-module__container--FJDtV\",\"formControlContainer\":\"SelectAllCheckbox-module__formControlContainer--JTzPI\",\"count\":\"SelectAllCheckbox-module__count--xEF8c\"};","import {announceFromElement} from '@github-ui/aria-live'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {Box, Checkbox, FormControl} from '@primer/react'\nimport {clsx} from 'clsx'\nimport type {KeyboardEvent} from 'react'\nimport {useCallback, useEffect, useId, useMemo, useRef} from 'react'\n\nimport type {StylableProps} from '../types'\nimport {useListViewMultiPageSelection} from './MultiPageSelectionContext'\nimport styles from './SelectAllCheckbox.module.css'\nimport {useListViewSelection} from './SelectionContext'\nimport {useListViewTitle} from './TitleContext'\n\ntype ListViewSelectAllCheckboxProps = {onToggle?: (value: boolean) => void; className?: string} & StylableProps\n\nexport const ListViewSelectAllCheckbox = ({onToggle, style, className, sx}: ListViewSelectAllCheckboxProps) => {\n  const {title} = useListViewTitle()\n  const {\n    isSelectable,\n    selectedCount,\n    totalCount,\n    countOnPage,\n    isSelectAllChecked,\n    anyItemsSelected,\n    singularUnits,\n    pluralUnits,\n  } = useListViewSelection()\n  const {multiPageSelectionAllowed} = useListViewMultiPageSelection()\n  const idPrefix = useId()\n  const checkboxRef = useRef<HTMLInputElement>(null)\n  const srRef = useRef<HTMLSpanElement>(null)\n  const notAllItemsSelected = useMemo(() => {\n    if (multiPageSelectionAllowed && typeof totalCount === 'number') {\n      return selectedCount < Math.max(totalCount, countOnPage)\n    }\n    return selectedCount < countOnPage\n  }, [countOnPage, multiPageSelectionAllowed, selectedCount, totalCount])\n  const isIndeterminate = anyItemsSelected && notAllItemsSelected\n  const units = selectedCount === 1 ? singularUnits : pluralUnits\n  const suffix = typeof totalCount === 'number' ? `of ${totalCount} selected` : 'selected'\n  const srString = `${selectedCount} ${units} ${suffix}`\n\n  const handleBulkSelectToggle = useCallback(() => {\n    if (!onToggle) return\n\n    if (isIndeterminate) {\n      onToggle(false)\n    } else {\n      onToggle(!isSelectAllChecked)\n    }\n  }, [isIndeterminate, isSelectAllChecked, onToggle])\n\n  useEffect(() => {\n    srRef.current && announceFromElement(srRef.current)\n  }, [srRef, srString])\n\n  if (!isSelectable) return null\n\n  const checkboxId = `${idPrefix}-list-view-select-all`\n\n  const onKeyDown = (event: KeyboardEvent<HTMLInputElement>) => {\n    // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault()\n      handleBulkSelectToggle()\n    }\n  }\n\n  return (\n    <Box\n      style={style}\n      sx={sx}\n      className={clsx(styles.container, className)}\n      {...testIdProps('list-view-select-all-container')}\n      id={`${idPrefix}-list-view-select-all-container`}\n    >\n      <div className={styles.formControlContainer}>\n        <FormControl id={checkboxId}>\n          <Checkbox\n            onChange={handleBulkSelectToggle}\n            value=\"default\"\n            checked={isSelectAllChecked}\n            indeterminate={isIndeterminate}\n            onKeyDown={onKeyDown}\n            tabIndex={0}\n            ref={checkboxRef}\n            {...testIdProps('select-all-checkbox')}\n          />\n          <FormControl.Label visuallyHidden {...testIdProps('select-all-label')}>\n            Select all {pluralUnits}: {title}\n          </FormControl.Label>\n        </FormControl>\n      </div>\n      <p\n        className={clsx(styles.count, anyItemsSelected ? undefined : 'sr-only')}\n        {...testIdProps('select-all-selected-count')}\n      >\n        <span\n          aria-hidden=\"true\"\n          className={anyItemsSelected ? undefined : 'sr-only'}\n          {...testIdProps('select-all-selected-count-without-units')}\n        >\n          {selectedCount} {suffix}{' '}\n        </span>\n        <span className=\"sr-only\" ref={srRef} {...testIdProps('sr-content')}>\n          {srString}\n        </span>\n      </p>\n    </Box>\n  )\n}\n\ntry{ ListViewSelectAllCheckbox.displayName ||= 'ListViewSelectAllCheckbox' } catch {}","import {type ReactNode, useMemo} from 'react'\nimport {AppPayloadContext} from './use-app-payload'\nimport type {AppPayloadWithFeatureFlags, EnabledFeatures} from './use-feature-flag'\n\ntype FeatureFlagProviderProps = {\n  children: ReactNode\n  features: EnabledFeatures\n}\n\n/**\n * This is a context provider for products in the monolith that are not fully integrated via the established\n * mechanisms set by the web-systems for rendering React applications.\n *\n * This wraps the {@link AppPayloadContext} to replicate the server-side behavior of setting client side feature flags\n * to enable the usage of the useFeatureFlag() hook.\n */\nexport const FeatureFlagProvider = ({children, features}: FeatureFlagProviderProps) => {\n  const contextValue: AppPayloadWithFeatureFlags = useMemo(\n    () => ({\n      enabled_features: features,\n    }),\n    [features],\n  )\n\n  return <AppPayloadContext.Provider value={contextValue}>{children}</AppPayloadContext.Provider>\n}\n\ntry{ FeatureFlagProvider.displayName ||= 'FeatureFlagProvider' } catch {}","import type {ChildRoute, LoaderResult, RouteRegistration, TransitionType} from './app-routing-types'\nimport type React from 'react'\nimport type {Location} from '@remix-run/router'\n\nexport interface JsonRouteProps {\n  path: string\n  Component: React.ComponentType\n  transitionType?: TransitionType\n  shouldNavigateOnError?: boolean\n  children?: ChildRoute[]\n}\n/**\n * A utility for building a route registration for a route that consumes a JSON object (either via embedding in a\n * script tag or via a JSON fetch on React soft navigations).\n */\nexport function jsonRoute<TRouteData, TEmbeddedData>({\n  path,\n  Component,\n  /**\n   * Some routes want to handle their own errors and not just show a generic error page. In this case,\n   * the error is just handled like any other payload for the route.\n   * NOTE: We might consider replacing the shouldNavigateOnError flag with a parallel implementation to jsonRoute.\n   */\n  shouldNavigateOnError,\n  transitionType,\n  children,\n}: JsonRouteProps): RouteRegistration<TRouteData, TEmbeddedData> {\n  async function coreLoader({location}: {location: Location}): Promise<LoaderResult<TRouteData>> {\n    let response: Response\n    try {\n      const fetchPath = `${location.pathname}${location.search}`\n      response = await window.fetch(fetchPath, {\n        headers: {\n          Accept: 'application/json',\n          'X-Requested-With': 'XMLHttpRequest',\n          'X-GitHub-Target': 'dotcom',\n          'X-React-Router': 'json',\n        },\n      })\n    } catch (error) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'fetchError'},\n      }\n    }\n    if (response.redirected) {\n      return {\n        type: 'redirect',\n        url: response.url,\n      }\n    } else if (!response.ok) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'httpError', httpStatus: response.status},\n      }\n    } else {\n      try {\n        const responseJson = await response.json()\n        return {\n          type: 'loaded',\n          data: responseJson,\n          title: responseJson.title,\n        }\n      } catch (error) {\n        return {\n          type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n          error: {type: 'badResponseError'},\n        }\n      }\n    }\n  }\n\n  function loadFromEmbeddedData({embeddedData}: {embeddedData: TEmbeddedData}): {data: TRouteData; title: string} {\n    const data = embeddedData as unknown as TRouteData & {title: string}\n    return {data, title: data.title}\n  }\n\n  return {\n    path,\n    // TODO: consider wrapping Component with a component that passes payload as a prop — ideally as part of migrating\n    // away from useRoutePayload.\n    Component,\n    coreLoader,\n    loadFromEmbeddedData,\n    transitionType,\n    children,\n  }\n}\n"],"names":["SpinnerWithLabel","FlashPortal","message","variant","container","document","getElementById","createPortal","Flash","full","displayName","defaultFlashState","undefined","Context","createContext","navigate","noop","setFlashState","NavigateWithFlashBannerProvider","children","baseNavigate","useNavigate","flashState","useState","useCallback","to","newFlashState","value","useMemo","Provider","length","useNavigateWithFlashBanner","context","useContext","defaultErrorMessage","App","props","enabled_features","useRoutePayload","FeatureFlagProvider","features","Header","action","subtext","text","div","header","className","style","marginBottom","Box","sx","display","justifyContent","alignItems","width","Heading","as","font","gap","Label","Text","color","mb","cancelableStates","isPipelineCancelable","status","includes","pollableStates","isPipelinePollable","statusTextMap","PIPELINE_STATUS_UNSPECIFIED","PIPELINE_STATUS_ENQUEUED","PIPELINE_STATUS_STARTED","PIPELINE_STATUS_COMPLETED","PIPELINE_STATUS_FAILED","PIPELINE_STATUS_CANCELING","PIPELINE_STATUS_CANCELED","PIPELINE_STATUS_INACTIVE","PIPELINE_STATUS_DELETING","PIPELINE_STATUS_DELETED","RadarCircle","ariaLabel","size","height","svg","aria-label","fill","viewBox","xmlns","path","stroke","strokeWidth","d","opacity","fillRule","clipRule","leadingVisualMap","icon","label","CheckCircleIcon","XCircleFillIcon","StopIcon","deployedLeadingVisual","CheckCircleFillIcon","usePipelinePolling","pipeline","routePayloadPipeline","initialPipeline","isPollingEnabled","showPath","data","updatedPipeline","useQuery","enabled","queryKey","queryFn","response","verifiedFetch","ok","statusText","payload","json","pipelineDetails","refetchInterval","window","location","reload","useOverlayControls","isOpen","setIsOpen","close","open","CancelDialogProvider","closeDialog","isDialogOpen","openDialog","cancelPath","setCancelPath","isSubmitting","setIsSubmitting","openDialogForCancelPath","newCancelPath","onSubmit","verifiedFetchJSON","method","redirect_url","href","errors","err","String","CancelDialog","useCancelDialog","Dialog","footerButtons","buttonType","content","inactive","onClick","onClose","renderBody","Body","span","renderFooter","Footer","p","Buttons","buttons","maxHeight","title","deployedTrailingBadges","ListItemTrailingBadge","PipelineListItem","isDeployedPipeline","org","actorLogin","createdAt","repositoryCount","canCancel","handleClickCancel","handleClickViewDetails","viewDetails","key","render","ActionList","Item","onSelect","staticMenuActions","timeAgoInWords","formatDistance","Date","parse","now","addSuffix","createdAtAriaLabel","format","ListItem","metadata","ListItemMetadata","RepoIcon","toLocaleString","secondaryActions","ListItemActionBar","ListItemTitle","trailingBadges","ListItemLeadingContent","ListItemLeadingVisual","Octicon","ListItemMainContent","ListItemDescription","ListItemDescriptionItem","DeleteDialogProvider","destroyPath","DeleteModelDialog","useDeleteModel","PipelineDetailsProvider","adminEmail","hasAnyDeployed","isStale","isViewingDetails","pipelineForBanner","initialPipelineForBanner","pipelineForCard","initialPipelineDetails","withinRateLimit","bannerPipeline","canDelete","canRetrain","cardPipeline","canViewDetails","usePipelineDetails","isListItemStyle","borderLeft","borderRadius","borderRight","BannerTitle","isListItem","Banner","Title","CanceledBanner","editPath","secondSentence","Link","inline","cursor","description","wordBreak","FailedBanner","nextSteps","primaryAction","PrimaryAction","secondaryAction","SecondaryAction","InProgressBanner","fontWeight","BorderBox","border","SuccessBanner","backgroundColor","columnGap","gridTemplateAreas","gridTemplateColumns","gridTemplateRows","alignSelf","gridArea","paddingBlock","CircleBadge","Icon","RocketIcon","flexDirection","fontSize","lineHeight","PipelineBanner","isInProgress","showFailed","wasCanceled","showSuccessBanner","wasSuccessful","PipelineBannerListItem","li","PipelineList","deployedPipeline","pipelines","suffix","borderStyle","borderWidth","borderColor","ListView","ListViewMetadata","map","id","Datum","name","minWidth","DatumText","iconMap","StatusDatum","isDeployed","LanguagesWithColor","languages","flexWrap","padding","language","RepoListView","isLoading","repos","Spinner","m","r","DeletedReposBanner","numDeleted","useDebouncedQuery","textInputValue","setTextInputValue","query","setQuery","debouncedSetQuery","debounce","q","start","onTextInputChange","e","target","ReposDialog","unsortedLanguages","repoSearchPath","numTotalRepos","setNumTotalRepos","sort","queryPath","staleTime","Infinity","repoWord","numDeletedRepos","showRepoList","px","fontFamily","renderHeader","pt","IconButton","XIcon","TextInput","leadingVisual","SearchIcon","onChange","placeholder","ReposDialogButton","formattedCount","ReposDatum","TelemetryDatum","wasPrivateTelemetryCollected","useFeatureFlag","ActionsButton","openDeleteModelDialog","some","Boolean","ActionMenu","Anchor","KebabHorizontalIcon","Overlay","CreatorDatum","actorAvatarUrl","createdAgo","useCreatedAgo","setNow","useEffect","interval","setInterval","clearInterval","createdDate","runTime","includeSeconds","creator","renderCreator","GitHubAvatar","src","PipelineCard","py","rowGap","BlankState","newPath","Blankslate","Visual","mx","BookIcon","Description","textAlign","queryClient","QueryClient","Index","latestPipeline","organization","focusedPipeline","showBanner","showList","headerText","QueryClientProvider","client","SelectedReposContext","count","isLoadingSelected","remove","selected","setAll","SelectedReposProvider","fetchSelected","initialRepoCount","initialSelected","setSelected","uniqBy","newList","filter","nameWithOwner","repo","useSelectedRepos","HiddenTextInput","Set","readOnly","orgPattern","isPublicPattern","sortFn","a","b","lowerA","toLowerCase","lowerB","ListRepoList","onRemove","alignment","TrashIcon","tooltipDirection","owner","avatarUrl","square","isInOrganization","ListDialog","handleRemove","isLast","ListButton","Button","trailingVisual","TriangleDownIcon","PickerRepoList","isSelectable","isSelected","i","isNowSelected","PickerDialog","rawRepos","isQuerying","useQueryForRepos","setIsQuerying","setRepos","call","handleCancel","handleSelect","existing","flex","loading","loaderPosition","pb","role","PickerButton","closeOverlay","isOverlayOpen","openOverlay","isChoosingAllRepos","AnchoredOverlay","onOpen","renderAnchor","data-testid","selectionVariant","showDividers","SingleButton","RepoPicker","useOrgOnlyRepos","relayEnv","searchedReposSubscription","useRef","formattedQuery","formatQueryWithOrg","prefix","qTrimmed","trim","sanitized","replace","withOrg","nodes","searchedRepos","Promise","resolve","reject","fetchQuery","SearchRepositories","searchQuery","getRepositorySearchQuery","subscribe","newSubscription","current","unsubscribe","next","error","search","node","readInlineData","RepositoryFragment","identity","InfoIcon","PrivateTelemetryCheckbox","canCollectPrivateTelemetry","defaultValue","collectPrivateTelemetry","setCollectPrivateTelemetry","borderTop","FormControl","disabled","Checkbox","checked","Caption","stringArrayToArray","str","split","v","GeneralErrors","mr","heading","ValidationErrors","index","Validation","type","Explanation","LanguageToken","Circle","Token","languagesToAutocompleteItems","toString","AutocompleteLanguages","availableLanguages","initialLanguages","allItems","tokenizedInitialLanguages","filterVal","setFilterVal","selectedItems","setSelectedItems","selectedItemIds","t","Autocomplete","Input","TextInputWithTokens","tokenComponent","tokens","onTokenRemove","item","itemId","currentTarget","overflowY","Menu","aria-labelledby","emptyStateText","filterFn","items","onSelectedChange","Array","isArray","newSelectedItems","join","TrainingForm","formErrors","initialSelectedRepos","isEditing","onCancel","repoPickerQueryFn","showPrivateTelemetryToggle","telemetryDefaultValue","isSubmitInactive","preventDefault","parseValues","formValue","formData","FormData","values","get","repository_nwos","private_telemetry","general_errors","htmlFor","useForm","createPath","pipelineId","setFormErrors","handleSubmit","body","pipeline_id","relayEnvironmentWithMissingFieldHandlerForNode","New","RelayEnvironmentProvider","environment","Component","enoughDataToTrain","Edit","repoCount","repoListPath","refetch","TrainingHeader","indexPath","slug","Breadcrumbs","useThemeColor","theme","useTheme","getFallbackColor","fallback","match","rgbMatch","g","themeGet","NoBreak","whiteSpace","loggedAtColorMap","LOG_STATE_UNSPECIFIED","LOG_STATE_INFO","LOG_STATE_WARNING","LOG_STATE_ERROR","messagePrefixMap","Log","isGrouped","log","getThemeColor","loggedAtDate","logged_at","loggedAtTime","loggedAtColor","log_level","messagePrefix","pl","flexShrink","LogGroup","logGroup","logs","ui_group_logs","sortedLogs","details","onToggle","renderLogs","stopPropagation","renderSpinner","PIPELINE_STAGE_STATUS_UNSPECIFIED","DotFillIcon","PIPELINE_STAGE_STATUS_ENQUEUED","PIPELINE_STAGE_STATUS_STARTED","PIPELINE_STAGE_STATUS_COMPLETED","PIPELINE_STAGE_STATUS_FAILED","PIPELINE_STAGE_STATUS_SKIPPED","SkipFillIcon","PIPELINE_STAGE_STATUS_PENDING","PIPELINE_STAGE_STATUS_CANCELED","StageIcon","allStatuses","waiting","inProgress","finished","curr","stageToSortStr","stage","order","padStart","stageSortFn","localeCompare","controlBgColorActive","Stage","log_groups","logGroups","getDetailsProps","setOpen","useDetails","defaultOpen","hasBeenClickedRef","prevStageRef","isEmpty","prev","indexOf","shouldAutoClose","isFinished","wasStarted","Details","alignContent","boxShadow","ChevronDownIcon","ChevronRightIcon","visibility","my","TrainingSteps","stages","unsortedStages","Show","ThemeProvider","colorMode","registerReactAppFactory","routes","jsonRoute","transitionType","TransitionType","FETCH_THEN_TRANSITION","currentUrl","targetUrl","URL","origin","hasHash","host","pathname","queryString","orgIndexSplit","orgSearchName","slice","repoSearchName","history","React","AppContext","reactRouterNavigate","useReactRouterNavigate","navigateOptions","resolvePath","matchRoutes","isHashNavigation","startSoftNav","preventAutofocus","options","startTransition","state","PREVENT_AUTOFOCUS_KEY","turbo","replaceState","skipTurbo","createHref","softNavigate","turboSoftNavigate","useSearchParams","searchParams","useReactRouterSearchParams","useLocation","setSearchParams","nextInit","newSearchParams","createSearchParams","forwardRef","otherProps","ref","url","ssrSafeLocation","has","set","Number","Avatar","testIdProps","clsx","styles","useListViewVariant","setDescription","useListItemDescription","from","querySelectorAll","reduce","metadataLabel","element","getAttribute","textContent","compact","useListViewSelection","ListItemUnreadIndicator","newActivity","setStatus","useListItemStatus","setHasNewActivity","useListItemNewActivity","trimmedDescription","outer","defaultVariant","hasNewActivity","inner","childrenArray","Children","toArray","titleIndex","findIndex","child","isValidElement","nonTitleChildren","concat","primary","secondary","alignRight","containerStyle","containerSx","containerClassName","data-listview-component","TitleTag","ListViewAnnouncements","ListFilters","ListViewActionBar","actions","density","actionsLabel","densityToggle","nonCollapsibleActions","GitHubUiActionBar","densityStyles","ListViewSectionFilters","links","ul","sectionFilterLink","ListViewSelectAllCheckbox","useListViewTitle","selectedCount","totalCount","countOnPage","isSelectAllChecked","anyItemsSelected","singularUnits","pluralUnits","multiPageSelectionAllowed","useListViewMultiPageSelection","idPrefix","useId","checkboxRef","srRef","notAllItemsSelected","Math","max","isIndeterminate","units","srString","handleBulkSelectToggle","announceFromElement","checkboxId","formControlContainer","indeterminate","onKeyDown","event","tabIndex","visuallyHidden","aria-hidden","assistiveAnnouncement","sectionFilters","actionsStyle","actionsSx","actionsClassName","onToggleSelectAll","actionBarProps","useListViewId","setHasMetadataTitle","useNextHeaderTag","announceRef","spacious","aria-live","aria-atomic","contextValue","AppPayloadContext","shouldNavigateOnError","coreLoader","fetchPath","fetch","headers","Accept","redirected","httpStatus","responseJson","loadFromEmbeddedData","embeddedData"],"sourceRoot":""}