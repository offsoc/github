<%
   is_current_execution = execution.nil? || execution.is_latest_execution?
%>

<div class="flex-auto pb-5">
  <div class="d-block d-md-none">
    <%= render Actions::Environments::ApprovalsBannerComponent.new(
      pending_gate_requests: gate_requests,
      approval_path: approve_or_reject_gate_requests_url,
      workflow_run: check_suite.workflow_run,
      execution: execution
    ) %>
  </div>

  <div class="d-block d-md-none">
    <%= render Actions::WorkflowRuns::ActionRequiredComponent.new(check_suite: check_suite, current_repository: current_repository) %>
  </div>

  <div class="d-block">
    <%= render Actions::WorkflowRuns::OldAttemptBannerComponent.new(workflow_run: check_suite.workflow_run, current_repository: current_repository, execution: execution, retry_blankstate: retry_blankstate) %>
  </div>

  <%= render Actions::WorkflowRuns::SummaryBarComponent.new(
    check_suite: check_suite,
    commit: commit,
    current_repository: current_repository,
    execution: execution,
    retry_blankstate: retry_blankstate
  ) %>

  <div class="d-none d-md-block">
    <%= render Actions::Environments::ApprovalsBannerComponent.new(
      pending_gate_requests: gate_requests,
      approval_path: approve_or_reject_gate_requests_url,
      workflow_run: check_suite.workflow_run,
      execution: execution
    ) %>
  </div>

  <div class="d-none d-md-block">
    <%= render Actions::WorkflowRuns::CloneBannerComponent.new(green_trees_enabled: green_trees_enabled, workflow_run: check_suite.workflow_run, current_repository: current_repository) %>
  </div>

  <div class="d-none d-md-block">
    <%= render Actions::WorkflowRuns::ActionRequiredComponent.new(check_suite: check_suite, current_repository: current_repository) %>
  </div>

  <%= render Actions::WorkflowRuns::ConcurrencyBannerComponent.new(check_suite: check_suite, should_update: is_current_execution) %>

  <div class="d-block">
    <%= render Checks::RetentionComponent.new(check_suite: check_suite, is_actions: true) %>
  </div>

  <%= render Actions::Graph::GraphComponent.new(
    graph: check_suite.workflow_run.graph(execution: execution, blankstate: retry_blankstate, include_deployments: true),
    workflow_run: check_suite.workflow_run,
    execution: execution,
    retry_blankstate: retry_blankstate,
    pull_request_number: params[:pr]) %>

  <%= render Actions::WorkflowRuns::JobSummariesComponent.new(
    current_repository: current_repository,
    current_user: current_user,
    check_suite: check_suite,
    workflow_job_runs: workflow_job_runs.includes(:check_run),
    execution: execution,
  ) %>

  <%=
    approval_logs = gate_approval_logs.includes(:user, gate_approvals: [{gate_request: [{gate: :integration}]}, :environment]).to_a

    render Actions::Environments::DeploymentProtectionLogComponent.new(
      check_suite: check_suite,
      gate_approval_logs: retry_blankstate ? [] : approval_logs,
      should_update: is_current_execution,
      execution: execution
    )
  %>

  <%= render Actions::WorkflowRuns::AnnotationsComponent.new(
    workflow_run: check_suite.workflow_run,
    current_repository: current_repository,
    commit: commit,
    annotations: retry_blankstate ? [] : all_annotations,
    should_update: is_current_execution,
  ) %>

  <%= render Actions::WorkflowRuns::ArtifactsComponent.new(
    check_suite: check_suite,
    current_repository: current_repository,
    execution: execution
  ) %>
</div>
