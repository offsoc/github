<%# `view` is an instance of EditRepositories::AdminScreen::MemberSuggestionsView %>

 <%= render(Primer::Alpha::ActionList.new(
    role: "listbox",
    mb: 2,
    aria: { label: "new member suggestions list"},
  )) do |list| %>
  <% if view.suggested_members.any? %>
    <%= view.suggested_members.each do |suggestion| %>
      <% case suggestion %>
      <% when User %>
        <%
          disabled = view.repo_member?(suggestion) || view.invited?(suggestion)
          org_admin = view.admin_ids.include?(suggestion.id)
        %>
        <% list.with_item(
          role: "option",
          p: 2,
          classes: "js-autocomplete-item #{ "disabled" if disabled }",
          aria: { disabled: disabled },
          content_arguments: {
            tag: :div,
            data: {
              autocomplete_value: "user/#{suggestion.id}",
              autocomplete_label: suggestion.display_login,
              type: view.org_member?(suggestion) ? "org-member" : "outside-collab",
              admin: org_admin
            }
          },
          disabled: disabled,
          **(disabled ? { color: :muted, bg: :subtle } : {})
        ) do |item| %>
          <div class="d-flex flex-items-center">
            <div class="col-1 mr-1 text-center">
              <%= avatar_for(suggestion, 28, class: "avatar") %>
            </div>
            <div class="f6">
              <strong><%= suggestion.safe_profile_name %></strong>
              <span class="d-block text-normal color-fg-muted">
                <%= suggestion.display_login if suggestion.profile_name.present? %>
                <%= view.invitation_label(suggestion) %>
              </span>
            </div>
          </div>

          <div class="js-selection-badge" hidden>
            <div class="d-flex flex-items-center p-2 rounded-2 color-fg-accent color-bg-accent border color-border-accent">
              <div class="col-2 col-sm-1 mr-2 text-center">
                <%= avatar_for(suggestion, 28, class: "avatar") %>
              </div>
              <div class="col-10 mr-2">
                <%= render(Primer::Beta::Text.new(font_weight: :bold, classes: "css-truncate css-truncate-overflow")) { suggestion.safe_profile_name } %>
                <span class="d-block f6">
                  <%= suggestion.display_login if suggestion.profile_name.present? %>
                </span>
              </div>
              <%= render Primer::Beta::Button.new(scheme: :link, mr: 2, classes: "js-cancel-selection", "aria-label": "Cancel selection") do %>
                <%= primer_octicon(:x) %>
              <% end %>
            </div>
          </div>
        <% end %>
      <% when Team %>
        <% disabled = repo_team = view.repo_team_ids.include?(suggestion.id) %>
        <% list.with_item(
          role: "option",
          p: 2,
          classes: "js-autocomplete-item #{ "disabled" if disabled }",
          aria: { disabled: disabled },
          content_arguments: {
            tag: :div,
            data: {
              autocomplete_value: "team/#{suggestion.id}",
              autocomplete_label: suggestion.combined_slug,
            }
          },
          **(disabled ? { color: :muted, bg: :subtle } : {})
        ) do |item| %>
          <div class="d-flex flex-items-center">
            <div class="d-flex flex-items-center flex-justify-center col-1 mr-1 text-center" style="height:28px">
              <%= primer_octicon(:people, color: :muted) %>
            </div>
            <div class="f6">
              <strong><%= suggestion.combined_slug %></strong>
              <% if repo_team %>
                <span class="d-block text-normal color-fg-muted">Already has access to this repository</span>
              <% end %>
            </div>
          </div>
          <div class="js-selection-badge" hidden>
            <div class="d-flex flex-items-center p-2 rounded-2 color-fg-accent color-bg-accent border color-border-accent">
              <div class="col-2 col-sm-1 mr-2 text-center">
                <%= primer_octicon(:people) %>
              </div>
              <div class="col-10 mr-2">
                <%= render(Primer::Beta::Text.new(font_weight: :bold, classes: "css-truncate css-truncate-overflow")) { suggestion.name } %>
                <span class="d-block f6">
                  <%= suggestion.combined_slug %>
                </span>
              </div>
              <%= render Primer::Beta::Button.new(scheme: :link, mr: 2, classes: "js-cancel-selection", "aria-label": "Cancel selection") do %>
                <%= primer_octicon(:x) %>
              <% end %>
            </div>
          </div>
        <% end %>
      <% end %>
    <% end %>
  <% elsif view.email_invitation? %>
    <% if view.can_send_email_invitation? %>
      <% list.with_item(
        role: "option",
        p: 2,
        classes: "js-autocomplete-item",
        content_arguments: {
          tag: :div,
          data: {
            autocomplete_value: "user/#{view.query}",
            autocomplete_label: view.query,
            type: "email",
          }
        },
      ) do |item| %>
        <div class="d-flex flex-items-center">
          <div class="col-1 mr-1 text-center">
            <%= primer_octicon(:mail, height: 18, mt: -3) %>
          </div>
          <div class="f6">
            <strong><%= view.query %></strong>
            <span class="d-block text-normal color-fg-muted">
              Invite to <%= view.repository.name %>
            </span>
          </div>
        </div>

        <div class="js-selection-badge" hidden>
          <div class="d-flex flex-items-center p-2 rounded-2 color-fg-accent color-bg-accent border color-border-accent">
            <div class="col-2 col-sm-1 text-center">
              <%= primer_octicon(:mail) %>
            </div>
            <div class="flex-auto">
              <%= render(Primer::Beta::Text.new(font_weight: :bold, classes: "css-truncate css-truncate-overflow")) { view.query } %>
            </div>
            <%= render Primer::Beta::Button.new(scheme: :link, mr: 2, classes: "js-cancel-selection", "aria-label": "Cancel selection") do %>
              <%= primer_octicon(:x) %>
            <% end %>
          </div>
        </div>
      <% end %>
    <% else %>
      <% list.with_item(
          role: "option",
          p: 2,
          classes: "Box-row disabled",
          aria: { disabled: true },
          content_arguments: {
            tag: :div,
            data: {
              autocomplete_value: view.query,
            }
          },
        ) do |item| %>
          No GitHub account with public email matching <%= view.query %>
        <% end %>
    <% end %>
  <% else %>
    <% list.with_item(
      role: "option",
      p: 2,
      classes: "Box-row disabled",
      aria: { disabled: true },
      content_arguments: {
        tag: :div,
        data: {
          autocomplete_value: view.query,
        }
      },
    ) do |item| %>
      <% if view.cannot_invite_outside_collaborators? %>
        Could not find <%= view.query %> in your organization <%= view.organization&.display_login %>
      <% elsif view.repository.is_enterprise_managed? && view.repository.organization&.business&.emu_repository_collaborators_enabled? %>
        Could not find <%= view.query %> in your enterprise <%= view.repository.business&.display_login %>
      <% else %>
        <%= view.no_search_results_text %>
      <% end %>
    <% end %>
  <% end %>
<% end %>

