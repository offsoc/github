# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::UserAssetScan`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::UserAssetScan`.

class Hydro::Schemas::Github::V1::UserAssetScan
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext),
      upload_ip: T.nilable(Hydro::Schemas::Github::V1::Entities::IPAddress),
      user_asset: T.nilable(Hydro::Schemas::Github::V1::Entities::UserAsset)
    ).void
  end
  def initialize(actor: nil, request_context: nil, upload_ip: nil, user_asset: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_upload_ip; end

  sig { void }
  def clear_user_asset; end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::IPAddress)) }
  def upload_ip; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::IPAddress)).void }
  def upload_ip=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::UserAsset)) }
  def user_asset; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::UserAsset)).void }
  def user_asset=(value); end
end
