<%
  deferred_content = local_assigns.fetch(:deferred_content, true) && local_assigns[:deferred_content_path].present?
  readonly = local_assigns.key?(:readonly) ? local_assigns[:readonly] : true
  inline = local_assigns.key?(:inline) ? local_assigns[:inline] : false
%>
<% if readonly %>
  <div class="discussion-sidebar-heading text-bold">
    <%= title %>
  </div>
<% else %>
  <details class="details-reset details-overlay select-menu hx_rsm <%= local_assigns[:menu_class] %>"
    <% if inline %>open<% end %>
    id="<%= local_assigns[:menu_id] %>">

    <% if !inline %>
      <summary class="text-bold discussion-sidebar-heading discussion-sidebar-toggle hx_rsm-trigger"
              aria-haspopup="menu"
              data-hotkey="<%= hotkey %>"<%# erblint:disable DataHotkey %>
              data-menu-trigger="<%= local_assigns[:menu_id] %>">
        <%= primer_octicon(:gear) %>
        <%= title %>
      </summary>
    <% else %>
      <summary hidden></summary>
    <% end %>

    <details-menu
      <% if deferred_content %>
        src="<%= local_assigns[:deferred_content_path] %>"
        preload
      <% end %>
      class="js-discussion-sidebar-menu <% if !inline %>select-menu-modal position-absolute right-0 hx_rsm-modal<% end %>"
      style="z-index: 99; overflow: visible;"
      <%= local_assigns[:menu_attributes] %>><%# erblint:disable Primer::Accessibility::DetailsMenuMigration %>
      <div class="select-menu-header rounded-top-2">
        <span class="select-menu-title"><%= menu_title %></span>
        <%= render Primer::Beta::CloseButton.new(classes: "hx_rsm-close-button btn-link", "data-toggle-for": local_assigns[:menu_id], "aria-label": "Close menu") %>
      </div>
      <%= local_assigns[:menu_filter_content] %>

      <div class="hx_rsm-content" role="menu">
        <% if deferred_content %>
          <!-- when data is loaded as HTML via details-menu[src] -->
          <include-fragment>
            <%= render(Primer::Beta::Spinner.new(my: 6, mx: :auto, display: :block)) %>
            <%= local_assigns[:deferred_menu_initial_content].presence %>
          </include-fragment>
        <% else %>
          <!-- when content is passed via block (ex: reviewers/assignees loads content via substring-memory in the block) -->
          <%= yield %>
        <% end %>
      </div>

    </details-menu>
  </details>
<% end %>
