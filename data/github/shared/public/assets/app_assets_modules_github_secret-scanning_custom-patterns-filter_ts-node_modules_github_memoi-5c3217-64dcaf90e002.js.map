{"version":3,"file":"chunk-app_assets_modules_github_secret-scanning_custom-patterns-filter_ts-node_modules_github_memoi-5c3217-xxxxxxxxxxxx.js","mappings":"yiBAGA,YACMA,oCAAoCC,EAAAA,CAAiBA,C,mCAIhDC,4BAA4B,CAAG,G,KAC/BC,oBAAoB,CAAG,G,KACvBC,wCAAwC,CAAG,G,KAC3CC,gBAAgB,CAAG,qB,KAKnBC,+BAA+B,CAAG,E,CAC7C,E,GAZGC,EAAAA,EAAMA,C,CADHP,EAAAA,SAAAA,CAAAA,gCAAAA,KAAAA,G,GAEHO,EAAAA,EAAMA,C,CAFHP,EAAAA,SAAAA,CAAAA,8BAAAA,KAAAA,GAAAA,EAAAA,EAAAA,CADLQ,EAAAA,EAAUA,C,CACLR,E,iBCJC,SAASS,EAAY,GAAGC,CAAI,EAE/B,OAAOC,KAAKC,SAAS,CAACF,EAAM,CAACG,EAAGC,IAAO,iBAAOA,EAAiBA,EAAIC,OAAOD,GAC9E,CACe,SAASE,EAAQC,CAAE,CAAEC,EAAO,CAAC,CAAC,EACzC,GAAM,CAAEC,KAAAA,EAAOV,CAAW,CAAEW,MAAAA,EAAQ,IAAIC,GAAK,CAAE,CAAGH,EAClD,OAAO,SAAU,GAAGR,CAAI,EACpB,IAAMY,EAAKH,EAAKI,KAAK,CAAC,IAAI,CAAEb,GAC5B,GAAIU,EAAMI,GAAG,CAACF,GACV,OAAOF,EAAMK,GAAG,CAACH,GACrB,IAAII,EAAST,EAAGM,KAAK,CAAC,IAAI,CAAEb,GAS5B,OARIgB,aAAkBC,SAElBD,CAAAA,EAASA,EAAOE,KAAK,CAACC,IAElB,MADAT,EAAMU,MAAM,CAACR,GACPO,CACV,EAAC,EAELT,EAAMW,GAAG,CAACT,EAAII,GACPA,CACX,CACJ,C","sources":["app/assets/modules/github/secret-scanning/custom-patterns-filter.ts","node_modules/@github/memoize/dist/esm/index.js"],"sourcesContent":["import {controller, target} from '@github/catalyst'\nimport {BaseFilterElement} from '../filter-input'\n\n@controller\nclass CustomPatternsFilterElement extends BaseFilterElement {\n  @target filterKeywordWarningContainer: HTMLElement\n  @target filterKeywordWarningMessage: HTMLElement\n\n  override showAllQualifiersIfNoneMatch = false\n  override fuzzyMatchQualifiers = true\n  override showSubmissionOptionIfInvalidSearchTerms = true\n  override suggestionsTitle = 'Narrow your search'\n\n  // No space between the value and description because they are\n  // a qualifier:value pair, and qualifiers and values don't have\n  // a space between them.\n  override spaceBetweenValueAndDescription = false\n}\n","export function defaultHash(...args) {\n    // JSON.stringify ellides `undefined` and function values by default. We do not want that.\n    return JSON.stringify(args, (_, v) => (typeof v === 'object' ? v : String(v)));\n}\nexport default function memoize(fn, opts = {}) {\n    const { hash = defaultHash, cache = new Map() } = opts;\n    return function (...args) {\n        const id = hash.apply(this, args);\n        if (cache.has(id))\n            return cache.get(id);\n        let result = fn.apply(this, args);\n        if (result instanceof Promise) {\n            // eslint-disable-next-line github/no-then\n            result = result.catch(error => {\n                cache.delete(id);\n                throw error;\n            });\n        }\n        cache.set(id, result);\n        return result;\n    };\n}\n"],"names":["CustomPatternsFilterElement","BaseFilterElement","showAllQualifiersIfNoneMatch","fuzzyMatchQualifiers","showSubmissionOptionIfInvalidSearchTerms","suggestionsTitle","spaceBetweenValueAndDescription","target","controller","defaultHash","args","JSON","stringify","_","v","String","memoize","fn","opts","hash","cache","Map","id","apply","has","get","result","Promise","catch","error","delete","set"],"sourceRoot":""}