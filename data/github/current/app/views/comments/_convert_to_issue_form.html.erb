<%
  title = text.split(/\n/, 2).first&.strip || ""

  reference_text = if original_reference.present?
    "_Originally posted by @#{author} in #{original_reference}_"
  end

  body = [text.strip, reference_text].map(&:presence).compact.join("\n\n")
%>

<%= form_tag new_issue_from_comment_path do %>
  <dl class="form-group" <%= test_selector("comment-menu-convert-to-issue") %>>
    <dt><label for="convert-to-issue-repository-<%= id %>">Repository</label></dt>
    <dd>
      <details class="details-reset details-overlay select-menu">
        <%= render Primer::Beta::Button.new(tag: :summary, classes: "select-menu-button", "data-menu-button": "") do %>
          <input type="text" name="issue[repository_id]"  class="d-none" value="<%= repository_id %>" required>
          <%= repository_name %>
        <% end %>
        <details-menu class="select-menu-modal position-absolute" style="z-index: 99;" src="<%= related_repositories_path(user_id: user_id, repository: repository) %>" preload><%# erblint:disable Primer::Accessibility::DetailsMenuMigration %>
          <div class="select-menu-header">
            <span class="select-menu-title">Repositories</span>
          </div>
          <div class="select-menu-filters">
            <div class="select-menu-text-filter">
              <remote-input src="<%= related_repositories_path(user_id: user_id, repository: repository) %>" aria-owns="related-repositories-menu">
                <input type="text" class="form-control" aria-label="Type to filter" placeholder="Find a repository" autofocus>
              </remote-input>
            </div>
          </div>
          <include-fragment class="my-6" aria-label="Loading..."><%= render(Primer::Beta::Spinner.new(size: :large, mx: :auto, display: :block)) %></include-fragment>
        </details-menu>
      </details>
    </dd>
  </dl>
  <dl class="form-group">
    <dt><label for="convert-to-issue-title-<%= id %>">Title</label></dt>
    <dd><input id="convert-to-issue-title-<%= id %>" class="form-control" type="text" name="issue[title]" value="<%= title %>" aria-label="Issue title" autofocus required></dd>
  </dl>
  <dl class="form-group">
    <dt><label for="convert-to-issue-body-<%= id %>">Body</label></dt>
    <dd>
      <%= file_attachment_tag(model: :assets, class: "js-upload-markdown-image is-default", input: "fc-#{id}") do |upload_enabled| %>
        <div class="write-content js-write-bucket <%= "upload-enabled" if upload_enabled %>">
          <input type="hidden" name="convert_to_issue_id" id="<%= id %>_convert_to_issue_id" class="js-resettable-field" value="" data-reset-value="">
          <text-expander keys=": @" data-mention-url="<%= suggestions_path(global_id: id, mention_suggester: 1) %>" data-emoji-url="<%= emoji_suggestions_path %>">
            <textarea
              id="convert-to-issue-body-<%= id %>"
              name="issue[body]"
              <% if current_user&.paste_url_link_as_plain_text? %>data-paste-url-links-as-plain-text<% end %>
              class="form-control input-contrast comment-form-textarea js-comment-field js-paste-markdown js-task-list-field js-quick-submit js-size-to-fit js-session-resumable"
              aria-label="Issue body">
              <%= body %>
            </textarea>
          </text-expander>
          <%= render :partial => "comments/drag_and_drop", :locals => { :asset_types => :assets, file_chooser_id: "fc-#{id}" } %>
        </div>
      <% end %>
    </dd>
  </dl>


  <div class="d-flex d-sm-block">
    <%= render Primer::Beta::Button.new(type: :submit, scheme: :primary, "data-disable-with": "Creating issue...", "data-disable-invalid": "", "data-ga-click": "Issues, create new issue, location:comment_menu logged_in:true") do %>
      Create issue
    <% end %>
  </div>
<% end %>
