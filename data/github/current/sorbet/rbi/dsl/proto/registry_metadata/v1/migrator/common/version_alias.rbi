# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Proto::RegistryMetadata::V1::Migrator::Common::VersionAlias`.
# Please instead update this file by running `bin/tapioca dsl Proto::RegistryMetadata::V1::Migrator::Common::VersionAlias`.

class Proto::RegistryMetadata::V1::Migrator::Common::VersionAlias
  sig do
    params(
      alias: T.nilable(String),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      ecosystem: T.nilable(T.any(Symbol, Integer)),
      package_name: T.nilable(String),
      package_namespace: T.nilable(String),
      updated_at: T.nilable(Google::Protobuf::Timestamp),
      version: T.nilable(String)
    ).void
  end
  def initialize(alias: nil, created_at: nil, ecosystem: nil, package_name: nil, package_namespace: nil, updated_at: nil, version: nil); end

  sig { returns(String) }
  def alias; end

  sig { params(value: String).void }
  def alias=(value); end

  sig { void }
  def clear_alias; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_ecosystem; end

  sig { void }
  def clear_package_name; end

  sig { void }
  def clear_package_namespace; end

  sig { void }
  def clear_updated_at; end

  sig { void }
  def clear_version; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def ecosystem; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def ecosystem=(value); end

  sig { returns(String) }
  def package_name; end

  sig { params(value: String).void }
  def package_name=(value); end

  sig { returns(String) }
  def package_namespace; end

  sig { params(value: String).void }
  def package_namespace=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end

  sig { returns(String) }
  def version; end

  sig { params(value: String).void }
  def version=(value); end
end
