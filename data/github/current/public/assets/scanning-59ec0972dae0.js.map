{"version":3,"file":"scanning-xxxxxxxxxxxx.js","mappings":"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","sources":["app/assets/modules/github/secret-scanning/secret-scanning-alerts-a11y.ts","app/assets/modules/github/secret-scanning/custom-patterns.ts","ui/packages/analytics-overrides/analytics-overrides.ts","ui/packages/client-env/client-env.ts","ui/packages/document-ready/document-ready.ts","ui/packages/failbot/failbot.ts","ui/packages/feature-flags/feature-flags.ts","ui/packages/hydro-analytics/hydro-analytics.ts","ui/packages/onfocus/onfocus.ts","ui/packages/trusted-types-policies/parse-html.ts","ui/packages/parse-html/parse-html.ts","ui/packages/runtime-environment/runtime-environment.ts","ui/packages/safe-storage/safe-storage.ts","ui/packages/safe-storage/session-storage.ts","ui/packages/soft-nav/utils.ts","ui/packages/ssr-utils/ssr-globals.ts","ui/packages/ssr-utils/ssr.ts","ui/packages/stats/stats.ts","ui/packages/text/text.ts","ui/packages/trusted-types-policies/policy.ts","ui/packages/trusted-types/trusted-types.ts"],"sourcesContent":["// eslint-disable-next-line no-restricted-imports\nimport {on} from 'delegated-events'\n\nfunction setFocusOnClearFilters() {\n  document.removeEventListener('turbo:load', setFocusOnClearFilters)\n  const clearButton = document.querySelector<HTMLElement>('[data-target=\"secret-scanning-filter.clearButton\"]')\n  if (clearButton === null) {\n    return\n  }\n  const clearButtonHidden = clearButton?.hidden\n  if (clearButtonHidden) {\n    const openCloseButtons = document.querySelectorAll<HTMLElement>('.js-change-open-close-state')\n    const openButton = openCloseButtons[openCloseButtons.length - 2]\n    openButton?.focus()\n    return\n  }\n  document.title = document.title.concat(' (filters applied)')\n  clearButton.focus()\n}\n\non('click', '.js-change-open-close-state', function () {\n  /**\n   * The 'turbo:load' event listener handles the case when turbo is enabled- this event is fired\n   * \"once after the initial page load, and again after every Turbo visit\" (https://turbo.hotwired.dev/reference/events)\n   */\n  document.addEventListener('turbo:load', setFocusOnClearFilters)\n})\n","// eslint-disable-next-line no-restricted-imports\nimport {fire, on} from 'delegated-events'\nimport {onInput, onKey} from '@github-ui/onfocus'\nimport type AutocompleteElement from '@github/auto-complete-element'\nimport type {EditorFromTextArea} from 'codemirror'\nimport {TemplateInstance} from '@github/template-parts'\nimport {debounce} from '@github/mini-throttle'\n// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\nimport {parseHTML} from '@github-ui/parse-html'\nimport {GetCharIndexFromBytePosition} from '@github-ui/text'\nimport {ensureExpanded} from '../behaviors/details'\n\nobserve('.js-add-secret-format-button', {\n  add() {\n    window.postProcessingExpressionCount = 0\n\n    const postProcessingExpressionCountElement = document.querySelector<HTMLElement>(\n      '.js-post-processing-expression-count',\n    )\n\n    if (postProcessingExpressionCountElement && postProcessingExpressionCountElement.textContent) {\n      window.postProcessingExpressionCount = parseInt(postProcessingExpressionCountElement.textContent)\n    }\n  },\n})\n\non('click', '.js-add-secret-format-button', (event: Event) => {\n  const addSecretFormatButton = <HTMLElement>event.currentTarget\n  if (!addSecretFormatButton) {\n    return\n  }\n\n  if (window.postProcessingExpressionCount < getMaxPostProcessingExpressions()) {\n    const additionalSecretFormatElements = document.querySelectorAll<HTMLElement>('.js-additional-secret-format')\n    if (!additionalSecretFormatElements) {\n      return\n    }\n\n    // Elements with has-removed-contents are hidden. Find the first available such\n    // element and display it.\n    for (const element of additionalSecretFormatElements) {\n      if (element.classList.contains('has-removed-contents')) {\n        element.classList.toggle('has-removed-contents', false)\n        window.postProcessingExpressionCount++\n\n        // Hide the 'Add requirements' button if the maximum allowed number of expressions are displayed.\n        if (window.postProcessingExpressionCount === getMaxPostProcessingExpressions()) {\n          addSecretFormatButton.hidden = true\n        }\n\n        break\n      }\n    }\n  }\n})\n\non('click', '.js-remove-secret-format-button', (event: Event) => {\n  const addSecretFormatButton = document.querySelector<HTMLElement>('.js-add-secret-format-button')\n  if (!addSecretFormatButton) {\n    return\n  }\n\n  const removeSecretFormatButton = <HTMLElement>event.currentTarget\n  if (!removeSecretFormatButton) {\n    return\n  }\n\n  const additionalSecretFormatElement = removeSecretFormatButton.closest<HTMLElement>('.js-additional-secret-format')!\n  if (!additionalSecretFormatElement) {\n    return\n  }\n\n  // Clear out the expression's input before hiding it, so it shows up as\n  // a new input element the next time it is unhidden.\n  additionalSecretFormatElement.classList.toggle('has-removed-contents', true)\n  const inputElement = additionalSecretFormatElement.getElementsByClassName(\n    'js-post-processing-input',\n  )[0] as HTMLInputElement\n  if (!inputElement) {\n    return\n  }\n\n  inputElement.value = ''\n  const inputElementRules = Array.from(\n    additionalSecretFormatElement.getElementsByClassName('js-post-processing-input-rule'),\n  )\n\n  // Clear out the error state for the input element.\n  const erroredElement = additionalSecretFormatElement.getElementsByClassName('errored')[0] as HTMLElement\n  if (erroredElement) {\n    erroredElement.classList.toggle('errored', false)\n  }\n  // Remove temporary post-processing elements from form\n  for (const element of inputElementRules) {\n    document.getElementById(`${element.id}_hidden`)?.remove()\n  }\n  document.getElementById(`${inputElement.id}_hidden`)?.remove()\n\n  debouncedTestPatternMatches(window.codeEditor.getValue())\n  window.postProcessingExpressionCount--\n\n  // Re-display 'Add requirement' button if the number of displayed inputs is under the limit.\n  if (window.postProcessingExpressionCount < getMaxPostProcessingExpressions()) {\n    addSecretFormatButton.hidden = false\n  }\n})\n\nobserve('.js-test-code', {\n  async add() {\n    const testCodeTextArea = document.querySelector('.js-test-code') as HTMLTextAreaElement\n    if (!testCodeTextArea) {\n      return\n    }\n\n    const editorHeight = testCodeTextArea.clientHeight\n\n    const CodeMirror = await import('codemirror')\n    if (!CodeMirror) {\n      return\n    }\n\n    window.codeEditor = CodeMirror.default.fromTextArea(testCodeTextArea, {\n      lineNumbers: false,\n      lineWrapping: true,\n      mode: 'text/x-yaml',\n      inputStyle: 'contenteditable',\n      value: testCodeTextArea.value,\n      lineSeparator: '\\r\\n',\n      theme: 'github-light',\n    })\n\n    if (editorHeight !== 0) {\n      const element = document.querySelector('.CodeMirror') as HTMLElement\n\n      if (element) {\n        element.style.height = `${editorHeight}px`\n        element.style.border = '1px solid #e1e4e8'\n        element.style.borderRadius = '6px'\n      }\n    }\n\n    window.codeEditor.save()\n\n    const testCustomPatternForm = document.querySelector<HTMLFormElement>('.js-test-custom-secret-scanning-pattern')!\n    if (!testCustomPatternForm) {\n      return\n    }\n\n    let debouncedApiCall = debouncedTestPatternMatches\n    if (testCustomPatternForm.hasAttribute('data-source-is-readonly')) {\n      debouncedApiCall = debouncedTestPatternMatchesReadOnly\n    }\n\n    window.codeEditor.on('change', () => {\n      debouncedApiCall(window.codeEditor.getValue())\n    })\n  },\n})\n\non('change', '.js-post-processing-input-rule', async function () {\n  if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n    return\n  }\n  if (!window.codeEditor) {\n    return\n  }\n  debouncedTestPatternMatches(window.codeEditor.getValue())\n})\n\nonInput('.js-custom-secret-scanning-pattern-form *', async function () {\n  if (!window.codeEditor) {\n    return\n  }\n  debouncedTestPatternMatches(window.codeEditor.getValue())\n})\n\non('click', '.js-repo-selector-dialog-summary-button.disabled', (event: Event) => {\n  // Summary buttons cannot be disabled directly. We add a `disabled` class to the button, but\n  // the button is still clickable, so we need to short-circuit that and prevent default action.\n  event.preventDefault()\n})\n\n// Clear out error state when user starts typing in the input.\nonInput('.js-description-input', async function () {\n  const descriptionInput = document.querySelector<HTMLInputElement>('.js-description-input')\n  if (!descriptionInput) {\n    return\n  }\n\n  removeErrorStylingFromInput(descriptionInput.parentElement!)\n  const errorMessageId = descriptionInput.getAttribute('aria-describedby')\n  if (!errorMessageId) {\n    return\n  }\n\n  document.querySelector<HTMLElement>(`#${errorMessageId}`)?.remove()\n})\n\n// Click handler for copy buttons on AI-generated expressions.\non('click', '.js-generated-expression-use', async (event: Event) => {\n  const secretFormatInputField = document.querySelector<HTMLInputElement>('.js-secret-format')\n  if (!secretFormatInputField) {\n    return\n  }\n\n  const examplesTextArea = document.querySelector<HTMLTextAreaElement>('.js-generate-expression-examples')\n  if (!examplesTextArea) {\n    return\n  }\n\n  const copiedExpression = event.currentTarget as HTMLElement\n  if (!copiedExpression) {\n    return\n  }\n\n  const copiedExpressionTextElementId = copiedExpression.attributes.getNamedItem('for')?.value\n  const copiedExpressionTextElement = document.getElementById(copiedExpressionTextElementId!)\n  if (!copiedExpressionTextElement) {\n    return\n  }\n\n  secretFormatInputField.value = copiedExpressionTextElement.textContent!\n\n  // Populate `Test strings` form with examples\n  window.codeEditor.setValue(examplesTextArea.value.replaceAll(`\\n`, ` `))\n\n  secretFormatInputField.focus()\n})\n\non('click', '.js-generate-expressions-form-submit-button', async (event: Event) => {\n  event.preventDefault()\n\n  // Error handling for description input\n  const descriptionInput = document.querySelector<HTMLInputElement>('.js-description-input')\n  if (!descriptionInput) {\n    return\n  }\n\n  if (descriptionInput.value === '') {\n    addErrorStylingToInput(descriptionInput.parentElement!)\n\n    // eslint-disable-next-line i18n-text/no-en\n    setErrorMessageForInput(descriptionInput, 'description_empty', 'Field cannot be blank')\n\n    return\n  }\n\n  const generatedExpressionsSection = document.querySelector('.js-generated-expressions-section') as HTMLElement\n  if (!generatedExpressionsSection) {\n    return\n  }\n\n  const errorSection = document.querySelector('.js-generated-expressions-error-section') as HTMLElement\n  if (!errorSection) return\n\n  const warningSection = document.querySelector('.js-generated-expressions-warning-section') as HTMLElement\n  if (!warningSection) return\n\n  generatedExpressionsSection.hidden = true\n  errorSection.hidden = true\n  warningSection.hidden = true\n\n  const generatedExpressionBoxElements = document.querySelectorAll('.js-generated-expression-box')\n  if (!generatedExpressionBoxElements) {\n    return\n  }\n\n  // Hide all generated expression boxes\n  for (let i = 0; i < generatedExpressionBoxElements.length; i++) {\n    generatedExpressionBoxElements[i]!.toggleAttribute('hidden', true)\n  }\n\n  const submitButton = getSubmitButton(event)\n  if (!submitButton) {\n    return\n  }\n\n  // Manually set `disable-with`, or loading behavior for buttons once clicked. This prevents users from clicking a button rapidly multiple times.\n  setSubmitButtonDisableWith(submitButton)\n\n  const form = getGenerateExpressionsForm()\n  if (!form) return\n\n  let data\n  try {\n    const response = await fetch(form.action, {\n      method: form.method,\n      body: new FormData(form),\n      headers: {Accept: 'application/json'},\n    })\n\n    data = await response.json()\n\n    if (data.error_msg) {\n      data = await response.json()\n\n      errorSection.textContent = data.error_msg\n      errorSection.hidden = false\n      resetSubmitButton(submitButton)\n\n      return\n    }\n  } catch (e) {\n    // network and unhandled client errors\n\n    // eslint-disable-next-line i18n-text/no-en\n    errorSection.textContent = 'Something went wrong. Please try again later.'\n    errorSection.hidden = false\n    resetSubmitButton(submitButton)\n\n    return\n  }\n\n  // Populate the generated expressions in the results section.\n  if (data && data.generated_expressions) {\n    if (data.generated_expressions.length === 0) {\n      // eslint-disable-next-line i18n-text/no-en\n      warningSection.textContent = 'No expressions were generated. Please retry with a different description.'\n      warningSection.ariaLabel = warningSection.textContent\n      warningSection.role = 'alert'\n      warningSection.hidden = false\n    } else {\n      const generatedExpressionElements = document.querySelectorAll('.js-generated-expression')\n      if (!generatedExpressionElements) {\n        return\n      }\n\n      const generatedExpressionExplanationElements = document.querySelectorAll('.js-generated-expression-explanation')\n      if (!generatedExpressionExplanationElements) {\n        return\n      }\n\n      // Set generated expressions and explanations\n      for (let i = 0; i < data.generated_expressions.length; i++) {\n        generatedExpressionElements[i]!.textContent = data.generated_expressions[i].regex\n        generatedExpressionExplanationElements[i]!.textContent = data.generated_expressions[i].explanation\n      }\n\n      // Clear out the remaining elements that don't have an expression mapped to them.\n      for (let i = data.generated_expressions.length; i < generatedExpressionElements.length; i++) {\n        generatedExpressionElements[i]!.textContent = ''\n        generatedExpressionExplanationElements[i]!.textContent = ''\n      }\n\n      // Display elements that have expressions\n      for (let i = 0; i < data.generated_expressions.length; i++) {\n        generatedExpressionBoxElements[i]!.removeAttribute('hidden')\n      }\n\n      errorSection.hidden = true\n      warningSection.hidden = true\n      generatedExpressionsSection.hidden = false\n    }\n  }\n\n  resetSubmitButton(submitButton)\n})\n\non(\n  'click',\n  '.js-save-and-dry-run-button, .js-custom-pattern-submit-button, .js-org-repo-selector-dialog-dry-run-button',\n  (event: Event) => {\n    event.preventDefault()\n\n    const submitButton = getSubmitButton(event)\n    if (!submitButton) {\n      return\n    }\n\n    // Manually set `disable-with`, or loading behavior for buttons once clicked. This prevents users from clicking a button rapidly multiple times.\n    setSubmitButtonDisableWith(submitButton)\n\n    const customPatternForm = getCustomPatternForm()\n    if (!customPatternForm) return\n\n    // Ensure we are accounting for users queueing dry runs after edit.\n    if (\n      submitButton.className.includes('js-save-and-dry-run-button') ||\n      submitButton.className.includes('js-org-repo-selector-dialog-dry-run-button')\n    ) {\n      createHiddenInputField(customPatternForm, 'submit_type', 'save_and_dry_run')\n    }\n\n    // Ensure form submit events are triggered. form.submit() does not work here since it directly submits the form without handling custom behavior.\n    fire(customPatternForm, 'submit')\n  },\n)\n\nfunction getSubmitButton(event: Event): HTMLButtonElement {\n  return <HTMLButtonElement>event.currentTarget\n}\n\nfunction setSubmitButtonDisableWith(submitButton: HTMLButtonElement) {\n  submitButton.textContent = submitButton.getAttribute('data-disable-with') || ''\n  submitButton.disabled = true\n}\n\nfunction resetSubmitButton(submitButton: HTMLButtonElement) {\n  submitButton.textContent = submitButton.getAttribute('data-original-text') || ''\n  submitButton.disabled = false\n}\n\nfunction getCustomPatternForm(): HTMLFormElement | null {\n  return document.querySelector<HTMLFormElement>('.js-custom-secret-scanning-pattern-form')\n}\n\nfunction getGenerateExpressionsForm(): HTMLFormElement | null {\n  return document.querySelector<HTMLFormElement>('.js-generate-expressions-form')\n}\n\nconst createHiddenInputField = (form: HTMLFormElement, name: string, value: string) => {\n  const hiddenInput = document.createElement('input')\n  hiddenInput.type = 'hidden'\n  hiddenInput.name = name\n  hiddenInput.id = `${name}_hidden`\n  hiddenInput.value = value\n\n  form.appendChild(hiddenInput)\n  hiddenInput.required = true\n}\n\n// Debounce reaction to form changes by 300ms to avoid overload on service, and updates causing the highlighted matches to flash.\nconst debouncedTestPatternMatches = debounce(function (testCode: string) {\n  const customPatternSubmitButton = document.querySelector<HTMLElement>('.js-custom-pattern-submit-button')\n  const saveAndDryRunButton = document.querySelector<HTMLElement>('.js-save-and-dry-run-button')\n  const repoSelectorDialogSummaryButton = document.querySelector<HTMLElement>('.js-repo-selector-dialog-summary-button')\n\n  const editPatternMessageElement = document.querySelector<HTMLElement>('.js-update-pattern-info')\n\n  const patternMatchesCountElement = document.querySelector<HTMLElement>('.js-test-pattern-matches')!\n  if (!patternMatchesCountElement) return\n\n  if (testCode.length === 0) {\n    const dryRunStatusElement = document.querySelector<HTMLElement>('.js-dry-run-status')!\n    if (!dryRunStatusElement) return\n\n    // Don't disable if form is in a state where we can cancel dry run\n    if (!allowDryRunCancellation(dryRunStatusElement)) {\n      customPatternSubmitButton?.setAttribute('disabled', 'true')\n    }\n\n    // Do not query when the test string is empty.\n    saveAndDryRunButton?.setAttribute('disabled', 'true')\n    repoSelectorDialogSummaryButton?.classList.add('disabled')\n    patternMatchesCountElement.textContent = ''\n  } else {\n    // Persist changes in test string back to the rails form version.\n    window.codeEditor.save()\n\n    const testCustomPatternForm = document.querySelector<HTMLFormElement>('.js-test-custom-secret-scanning-pattern')!\n    if (!(testCustomPatternForm instanceof HTMLFormElement)) return\n\n    const customPatternForm = getCustomPatternForm()\n    if (!customPatternForm) return\n\n    // Duplicate the form into an invisible hidden-input \"test\" form, for validating matches and clear old test form if exists.\n    for (const element of customPatternForm.elements) {\n      if (element instanceof HTMLInputElement && element.name) {\n        if (element.type === 'text' || (element.type === 'radio' && element.checked)) {\n          const hiddenElement = document.getElementById(`${element.name}_hidden`) as HTMLInputElement\n          if (hiddenElement !== null) {\n            hiddenElement.remove()\n          }\n          createHiddenInputField(testCustomPatternForm, element.name, element.value)\n        }\n      }\n    }\n\n    patternMatchesCountElement.textContent = ' - Finding matches..'\n\n    updatePatternMatches(\n      testCustomPatternForm,\n      getTestErrorHandler(\n        customPatternForm,\n        customPatternSubmitButton,\n        saveAndDryRunButton,\n        repoSelectorDialogSummaryButton,\n        editPatternMessageElement,\n      ),\n      getTestLabelUpdater(patternMatchesCountElement),\n    )\n  }\n}, 300)\n\nconst getTestLabelUpdater = (patternMatchesCountElement: HTMLElement) => (matchesJson: string[]) => {\n  if (matchesJson.length === 0) {\n    patternMatchesCountElement.textContent = ' - No matches'\n  } else if (matchesJson.length === 1) {\n    patternMatchesCountElement.textContent = ' - 1 match'\n  } else {\n    // Remove duplicate matches from the list.\n    const serializedArray = []\n    for (const m of matchesJson) {\n      serializedArray.push(JSON.stringify(m))\n    }\n    const serializedArrayAsSet = new Set(serializedArray)\n    const uniqueSerializedArray = [...serializedArrayAsSet]\n    patternMatchesCountElement.textContent = ` - ${uniqueSerializedArray.length} matches`\n  }\n}\n\n/**\n * Creates a handler that receives an error or null and updates ui elements based on error content.\n * @param customPatternSubmitButton Button to enable/disable based on error received.\n * @returns true if no error received.\n */\nconst getTestErrorHandler =\n  (\n    form: HTMLFormElement,\n    customPatternSubmitButton: HTMLElement | null,\n    saveAndDryRunButton: HTMLElement | null,\n    repoSelectorDialogSummaryButton: HTMLElement | null,\n    editPatternMessageElement: HTMLElement | null,\n  ) =>\n  (error?: ErrorWithMessage) => {\n    clearInputErrorState(form)\n\n    if (error?.message) {\n      customPatternSubmitButton?.setAttribute('disabled', 'true')\n      saveAndDryRunButton?.setAttribute('disabled', 'true')\n      repoSelectorDialogSummaryButton?.classList.add('disabled')\n      if (editPatternMessageElement) {\n        // Also an indirect check for whether we are in Edit mode on the form.\n        editPatternMessageElement.hidden = true\n      } else {\n        // In Create mode, Expand the \"More options\" section if there are errors relating to form elements within it.\n        // In Edit mode, the section is expanded by default.\n        if (\n          error?.error_type === 'START_DELIMITER' ||\n          error?.error_type === 'END_DELIMITER' ||\n          error?.error_type === 'MUST_MATCH' ||\n          error?.error_type === 'MUST_NOT_MATCH'\n        ) {\n          const detailsToggle = document.querySelector<HTMLElement>('.js-more-options.js-details-container')!\n          if (detailsToggle) {\n            ensureExpanded(detailsToggle)\n          }\n        }\n      }\n\n      showInputErrorState(form, error)\n\n      return false\n    } else {\n      const modeElement = document.querySelector<HTMLElement>('.js-mode')!\n      if (!modeElement) {\n        return false\n      }\n\n      const dryRunStatusElement = document.querySelector<HTMLElement>('.js-dry-run-status')!\n      if (!dryRunStatusElement) {\n        return false\n      }\n\n      /**\n       * There are 2 situations in which the submit button needs to be enabled.\n       * 1) When the pattern has unpublished changes, and the dry run is cancelled or skipped. In this case,\n       *    the button displays `Save and dry run`.\n       * 2) When the pattern is being created or updated after publishing. In this case,\n       *    the button displays `Save and dry run` and `Publish changes`\n       */\n      if (\n        dryRunStatusElement.textContent?.toLowerCase() === 'cancelled' ||\n        dryRunStatusElement.textContent?.toLowerCase() === 'skipped' ||\n        !(\n          modeElement.textContent?.toLowerCase() === 'unpublished' ||\n          modeElement.textContent?.toLowerCase() === 'published'\n        )\n      ) {\n        customPatternSubmitButton?.removeAttribute('disabled')\n      }\n\n      repoSelectorDialogSummaryButton?.classList.remove('disabled')\n      saveAndDryRunButton?.removeAttribute('disabled')\n      if (editPatternMessageElement) {\n        editPatternMessageElement.hidden = false\n      }\n      return true\n    }\n  }\n\nfunction showInputErrorState(form: HTMLFormElement, error: ErrorWithMessage) {\n  if (error.error_type === 'MUST_MATCH' || error.error_type === 'MUST_NOT_MATCH') {\n    let idx = 0\n    // Get PPE input groups\n    const postProcessingExpressions = form.getElementsByClassName('js-additional-secret-format')\n    for (const expressionContainer of postProcessingExpressions) {\n      if (idx > (error.error_index || 0)) {\n        // Something weird happened. dont mark errors\n        return\n      }\n      const radioButtons = expressionContainer.getElementsByTagName('input')\n      const checkedButton = [...radioButtons].filter(x => x.checked)\n      const type = checkedButton && checkedButton[0]?.value.toUpperCase()\n      // Error_index is based on the group of same type of ppe fields (must vs must_not)\n      const isErrorField = type === error.error_type && idx === error.error_index\n      const inputs = expressionContainer.getElementsByTagName('input')\n      const expressionInput = [...inputs].filter(x => x.type === 'text')\n      if (!expressionInput || expressionInput.length === 0) {\n        // Something weird happened, we dont have a text input\n        continue\n      }\n      const input = expressionInput[0]!\n      if (input.value === '') {\n        // empty inputs are not included in the test verification request so input indexes will be off\n        continue\n      }\n      if (isErrorField) {\n        const errorInputID = input.id\n        if (input && input.parentElement) {\n          addErrorStylingToInput(input.parentElement)\n          setErrorMessageForInput(input, errorInputID, error.message, true, 'mt-6')\n        }\n        return\n      } else if (type === error.error_type) {\n        idx++\n      }\n    }\n  } else {\n    const errorInputID = errorTypeToInputId[error.error_type]\n    const input = document.querySelector<HTMLElement>(`#${errorInputID}`)\n    if (input && input.parentElement) {\n      addErrorStylingToInput(input.parentElement)\n      setErrorMessageForInput(input, errorInputID!, error.message, true)\n    }\n  }\n}\n\nfunction clearInputErrorState(form: HTMLFormElement) {\n  const errorBanner = document.querySelector<HTMLElement>('.js-error-banner')!\n  errorBanner.hidden = true\n  for (const input of form.getElementsByTagName('input')) {\n    if (input.parentElement?.classList.contains('errored')) {\n      removeErrorStylingFromInput(input.parentElement)\n      const errorMessageId = input.getAttribute('aria-describedby')\n      document.querySelector<HTMLElement>(`#${errorMessageId}`)?.remove()\n    }\n  }\n}\n\nfunction getMaxPostProcessingExpressions() {\n  const defaultMaxPostProcessingExpressions = 10\n\n  const maxPostProcessingExpressionsElement = document.querySelector<HTMLElement>(\n    '.js-post-processing-expression-max-count',\n  )!\n\n  if (!maxPostProcessingExpressionsElement) {\n    return defaultMaxPostProcessingExpressions\n  }\n\n  const maxExpressionsAsString = maxPostProcessingExpressionsElement.textContent\n\n  if (!maxExpressionsAsString) {\n    return defaultMaxPostProcessingExpressions\n  }\n\n  return parseInt(maxExpressionsAsString)\n}\n\nfunction addErrorStylingToInput(inputElement: HTMLElement) {\n  // Adds a red border and an error popup to the element. Since `form-group` adds\n  // a vertical margin, we manually offset it using my-0 (margin-y: 0)\n  inputElement?.classList.add('form-group', 'errored', 'my-0')\n}\n\nfunction removeErrorStylingFromInput(inputElement: HTMLElement) {\n  inputElement?.classList.remove('form-group', 'errored', 'my-0')\n}\n\nfunction setErrorMessageForInput(\n  inputElement: HTMLElement,\n  errorID: string,\n  errorMessage: string,\n  setErrorMargin: boolean = false,\n  errorMargin: string = 'mt-4',\n) {\n  const message = document.createElement('p')\n  const messageID = `${errorID}_error_message`\n  message.classList.add('note', 'error')\n  if (setErrorMargin) {\n    message.classList.add(errorMargin)\n  }\n  message.id = messageID\n  message.textContent = errorMessage\n  inputElement.setAttribute('aria-describedby', messageID)\n  inputElement.insertAdjacentElement('afterend', message)\n\n  // Set focus on the input element for screen reader users\n  inputElement.focus()\n}\n\n// Removes code highlights if any.\nfunction clearCodeHighlights() {\n  if (!window.codeEditor) return\n\n  const from = window.codeEditor.posFromIndex(0)\n  const to = window.codeEditor.posFromIndex(window.codeEditor.getValue().length)\n\n  for (const mark of window.codeEditor.findMarks(from, to)) {\n    mark.clear()\n  }\n}\n\nfunction allowDryRunCancellation(dryRunStatusElement: HTMLElement) {\n  return (\n    dryRunStatusElement.textContent?.toLowerCase() === 'queued' ||\n    dryRunStatusElement.textContent?.toLowerCase() === 'inprogress'\n  )\n}\n\nconst errorTypeToInputId: {[key: string]: string} = {\n  NONE: '',\n  CONFIG_LOAD: 'secret_format',\n  COMPILE_DB: 'secret_format',\n  START_DELIMITER: 'before_secret',\n  END_DELIMITER: 'after_secret',\n  DISPLAY_NAME: 'display_name',\n  DB_SIZE: 'secret_format',\n  DB_SIZE_CALCULATION: 'secret_format',\n}\ninterface ErrorWithMessage {\n  message: string\n  error_type: string\n  error_index?: number\n}\n\n// Queries the token scanning service to determine if the current test string matches the pattern\nasync function updatePatternMatches(\n  form: HTMLFormElement,\n  responseCallback: (error: ErrorWithMessage) => boolean,\n  updateLabelCallback: (matchesJson: string[]) => void,\n) {\n  // Query service for matches.\n  let data\n  try {\n    const response = await fetch(form.action, {\n      method: form.method,\n      body: new FormData(form),\n      headers: {Accept: 'application/json'},\n    })\n    if (response.ok) {\n      data = await response.json()\n    }\n  } catch (e) {\n    // ignore network errors\n  }\n\n  if (data) {\n    if (responseCallback(data.error)) {\n      if (data.has_matches) {\n        const matchesJson = JSON.parse(data.matches)\n        clearCodeHighlights()\n        updateLabelCallback(matchesJson)\n        // Highlight matches\n        for (const match of matchesJson) {\n          MarkMatch(window.codeEditor, match.start, match.end)\n        }\n      } else {\n        updateLabelCallback([])\n        clearCodeHighlights()\n      }\n    }\n\n    toggleWildcardsWarning(data.has_wildcard_warning)\n  }\n}\n\nconst debouncedTestPatternMatchesReadOnly = debounce(function (testCode: string) {\n  const testCustomPatternForm = document.querySelector<HTMLFormElement>('.js-test-custom-secret-scanning-pattern')!\n  if (!(testCustomPatternForm instanceof HTMLFormElement)) return\n\n  const patternMatchesCountElement = document.querySelector<HTMLElement>('.js-test-pattern-matches')!\n  if (!patternMatchesCountElement) return\n\n  if (testCode.length === 0) {\n    // Do not query when the test string is empty.\n    patternMatchesCountElement.textContent = ''\n  } else {\n    if (!window.codeEditor) return\n\n    window.codeEditor.save()\n    updatePatternMatches(testCustomPatternForm, () => true, getTestLabelUpdater(patternMatchesCountElement))\n  }\n}, 300)\n\n// MarkMatch highlights the matches coming back from Hypercredscan in the code editor,\n// taking into account converting UTF16 compatibility\nexport function MarkMatch(codeEditor: EditorFromTextArea, start: number, end: number) {\n  const contents = codeEditor.getValue()\n  start = GetCharIndexFromBytePosition(contents, start)\n  end = GetCharIndexFromBytePosition(contents, end)\n\n  if (start === -1 || end === -1) return\n\n  const from = codeEditor.posFromIndex(start)\n  const to = codeEditor.posFromIndex(end)\n  codeEditor.markText(from, to, {className: 'text-bold hx_keyword-hl rounded-2 d-inline-block'})\n}\n\ndeclare global {\n  interface Window {\n    codeEditor: EditorFromTextArea\n    postProcessingExpressionCount: number\n  }\n}\n\n// Handles repo selection in the save and dry run dialog for org dry runs\n\nasync function removeDryRunRepo(event: CustomEvent) {\n  const form = event.currentTarget as HTMLFormElement\n  event.preventDefault()\n  updateDryRunSelectedRepos(form, parseInt(form.remove_repo_id.value), false)\n}\n\nasync function removeAllDryRunSelectedRepos(form: HTMLFormElement, allowDryRun = false) {\n  const selectedReposElement = <HTMLInputElement>document.getElementById('selected_repo_ids')\n  if (!selectedReposElement) {\n    return\n  }\n\n  const selectedReposArray = JSON.parse(selectedReposElement.value)\n  const selectedReposSet = new Set(selectedReposArray)\n  selectedReposSet.clear()\n\n  selectedReposElement.value = JSON.stringify(Array.from(selectedReposSet))\n\n  const dryRunButton = document.querySelector<HTMLElement>('.js-org-repo-selector-dialog-dry-run-button')\n  if (!dryRunButton) {\n    return\n  }\n\n  if (allowDryRun) {\n    dryRunButton.removeAttribute('disabled')\n  } else {\n    dryRunButton.setAttribute('disabled', 'true')\n  }\n\n  const formData = new FormData(form)\n  formData.append('selected_repo_ids', selectedReposElement.value)\n\n  const response = await fetch(form.action, {\n    method: form.method,\n    body: formData,\n    headers: {Accept: 'text/fragment+html'},\n  })\n\n  if (response.status >= 400) {\n    // eslint-disable-next-line i18n-text/no-en\n    const message = 'An unknown error occurred.'\n    const template = document.querySelector<HTMLTemplateElement>('template.js-flash-template')!\n    template.after(new TemplateInstance(template, {className: 'flash-error', message}))\n  } else if (!allowDryRun) {\n    const target = <HTMLElement>document.querySelector('.js-dry-run-selected-repos')\n    const partial = parseHTML(document, await response.text())\n    target.replaceWith(partial)\n  }\n}\n\nasync function updateDryRunSelectedRepos(form: HTMLFormElement, repoId: number, addRepo: boolean) {\n  const selectedReposElement = <HTMLInputElement>document.getElementById('selected_repo_ids')\n  if (!selectedReposElement) {\n    return\n  }\n\n  const dryRunButton = document.querySelector<HTMLElement>('.js-org-repo-selector-dialog-dry-run-button')\n  if (!dryRunButton) {\n    return\n  }\n\n  const selectedReposArray = JSON.parse(selectedReposElement.value)\n  const selectedReposSet = new Set(selectedReposArray)\n\n  if (addRepo) {\n    if (selectedReposSet.size < getMaxDryRunSelectedRepos()) {\n      selectedReposSet.add(repoId)\n    }\n  } else {\n    selectedReposSet.delete(repoId)\n  }\n\n  selectedReposElement.value = JSON.stringify(Array.from(selectedReposSet))\n\n  if (selectedReposSet.size > 0) {\n    dryRunButton.removeAttribute('disabled')\n  } else {\n    dryRunButton.setAttribute('disabled', 'true')\n  }\n\n  const formData = new FormData(form)\n  formData.append('selected_repo_ids', selectedReposElement.value)\n\n  const response = await fetch(form.action, {\n    method: form.method,\n    body: formData,\n    headers: {Accept: 'text/fragment+html'},\n  })\n\n  // Show an error message (if request fails)\n  if (response.status >= 400) {\n    // eslint-disable-next-line i18n-text/no-en\n    const message = 'An unknown error occurred.'\n    const template = document.querySelector<HTMLTemplateElement>('template.js-flash-template')!\n    template.after(new TemplateInstance(template, {className: 'flash-error', message}))\n  } else {\n    const target = <HTMLElement>document.querySelector('.js-dry-run-selected-repos')\n    const partial = parseHTML(document, await response.text())\n    target.replaceWith(partial)\n  }\n}\n\n// Only click works for now, seems there is no event listener for a submit from the details dialog class, but there is one for a click\non('click', '.js-remove-dry-run-repo-form', removeDryRunRepo)\n\n// Add a selected repo to the list and clear the search box\non('auto-complete-change', '.js-dry-run-repo-autocomplete', function (event) {\n  const autoComplete = event.target as AutocompleteElement\n  if (!autoComplete.value) {\n    return\n  }\n\n  // eslint-disable-next-line i18n-text/no-en\n  if (autoComplete.value.includes('No repositories found.')) {\n    autoComplete.value = ''\n    return\n  }\n\n  const addForm = <HTMLFormElement>autoComplete.closest('form')\n  if (!addForm) {\n    return\n  }\n\n  updateDryRunSelectedRepos(addForm, parseInt(addForm.repo_id.value), true)\n\n  autoComplete.value = ''\n})\n\non('click', '.js-clear-selected-repositories-button', function () {\n  const selectedReposForm = document.querySelector<HTMLFormElement>('.js-add-dry-run-repo-form')\n  if (selectedReposForm) {\n    removeAllDryRunSelectedRepos(selectedReposForm)\n  }\n})\n\nobserve('input[type=\"radio\"][name=\"dry_run_repo_selection\"]', element => {\n  const radioButtonElement = element as HTMLInputElement\n  const repoSelectionComponent = document.querySelector<HTMLElement>('.js-dry-run-repo-selection-component')\n\n  if (!repoSelectionComponent || !radioButtonElement) {\n    return\n  }\n\n  if (radioButtonElement.checked === true) {\n    if (radioButtonElement.value === 'all_repos') {\n      repoSelectionComponent.hidden = true\n    } else if (radioButtonElement.value === 'selected_repos') {\n      repoSelectionComponent.hidden = false\n    }\n  }\n})\n\non('click', 'input[type=\"radio\"][name=\"dry_run_repo_selection\"]', function (event) {\n  const target = event.currentTarget as HTMLInputElement\n  const repoSelectionComponent = document.querySelector<HTMLElement>('.js-dry-run-repo-selection-component')\n\n  if (!repoSelectionComponent) {\n    return\n  }\n\n  if (target.value === 'all_repos') {\n    repoSelectionComponent.hidden = true\n\n    const selectedReposForm = <HTMLFormElement>repoSelectionComponent.querySelector('form')\n    if (!selectedReposForm) {\n      return\n    }\n\n    removeAllDryRunSelectedRepos(selectedReposForm, true)\n  } else if (target.value === 'selected_repos') {\n    repoSelectionComponent.hidden = false\n    const dryRunButton = document.querySelector<HTMLElement>('.js-org-repo-selector-dialog-dry-run-button')\n    if (!dryRunButton) {\n      return\n    }\n\n    const selectedReposElement = <HTMLInputElement>document.getElementById('selected_repo_ids')\n    if (!selectedReposElement) {\n      return\n    }\n\n    repoSelectionComponent.children[1]!.childElementCount <= 1\n      ? dryRunButton.setAttribute('disabled', 'true')\n      : dryRunButton.removeAttribute('disabled')\n  }\n})\n\n// Don't let users accidentally submit the form when you hit enter\nonKey('keydown', '.js-dry-run-repo-autocomplete-input', function (event: KeyboardEvent) {\n  // TODO: Refactor to use data-hotkey\n  /* eslint eslint-comments/no-use: off */\n  /* eslint-disable @github-ui/ui-commands/no-manual-shortcut-logic */\n  if (event.key === 'Enter') {\n    event.preventDefault()\n  }\n  /* eslint-enable @github-ui/ui-commands/no-manual-shortcut-logic */\n})\n\nfunction getMaxDryRunSelectedRepos() {\n  const maxDryRunSelectedReposElement = document.querySelector<HTMLElement>('.js-dry-run-selected-repos-max-count')!\n\n  if (!maxDryRunSelectedReposElement) {\n    return 10\n  }\n\n  const maxRepos = maxDryRunSelectedReposElement.textContent\n\n  if (!maxRepos) {\n    return 10\n  }\n\n  return parseInt(maxRepos)\n}\n\nfunction toggleWildcardsWarning(visible: boolean) {\n  const warningElement = document.querySelector<HTMLElement>('.js-wildcards-warning')!\n  if (!warningElement) return\n\n  warningElement.hidden = !visible\n}\n","function queryLast<T extends Element>(selector: string): T | undefined {\n  const list = document.querySelectorAll<T>(selector)\n  if (list.length > 0) {\n    return list[list.length - 1]\n  }\n}\n\nfunction pagePathname() {\n  const locationOverride = queryLast<HTMLMetaElement>('meta[name=analytics-location]')\n  if (locationOverride) {\n    return locationOverride.content\n  } else {\n    return window.location.pathname\n  }\n}\n\nfunction pageQuery() {\n  const stripParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-query-strip]')\n  let search = ''\n\n  if (!stripParams) {\n    search = window.location.search\n  }\n\n  const extraParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-params]')\n  if (extraParams) {\n    search += (search ? '&' : '?') + extraParams.content\n  }\n\n  for (const meta of document.querySelectorAll<HTMLMetaElement>('meta[name=analytics-param-rename]')) {\n    const names = meta.content.split(':', 2)\n    search = search.replace(new RegExp(`(^|[?&])${names[0]}($|=)`, 'g'), `$1${names[1]}$2`)\n  }\n\n  return search\n}\n\nexport function requestUri() {\n  return `${window.location.protocol}//${window.location.host}${pagePathname() + pageQuery()}`\n}\n","export interface ClientEnvironment {\n  readonly locale: string\n  readonly featureFlags: string[]\n}\n\nlet env: ClientEnvironment | undefined\n\nexport function getEnv() {\n  if (!env) {\n    throw new Error(\n      'Client env was requested before it was loaded. This likely means you are attempting to use client env at the module level in SSR, which is not supported. Please move your client env usage into a function.',\n    )\n  }\n\n  return env\n}\n\nexport function getLocale() {\n  return env?.locale ?? 'en-US'\n}\n\nfunction loadEnv() {\n  if (typeof document !== 'undefined') {\n    const envTag = document.getElementById('client-env')\n    if (envTag) {\n      try {\n        env = JSON.parse(envTag.textContent || '')\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error('Error parsing client-env', error)\n      }\n    }\n  }\n}\n\n// Automatically load the env on initial page load\nloadEnv()\n\n// This is a special helper method for setting the env in the SSR environment only\nexport function setClientEnvForSsr(clientEnv: ClientEnvironment | undefined) {\n  env = clientEnv\n}\n\n// This env object is used as a default for tests only and is not included in production builds\nexport const clientEnvForTests: ClientEnvironment = {\n  locale: 'en',\n  featureFlags: ['test_flag'],\n}\n\nexport function _resetForTests({loadNewEnv, forceUndefined}: {loadNewEnv: boolean; forceUndefined?: boolean}) {\n  // forget the current env\n  env = forceUndefined ? undefined : clientEnvForTests\n\n  if (loadNewEnv) {\n    // load the latest env\n    loadEnv()\n  }\n}\n","import {ssrSafeDocument, ssrSafeWindow} from '@github-ui/ssr-utils'\n\n// Check if document has passed interactive state.\n//\n// The document has finished loading and the document has been parsed but\n// sub-resources such as images, stylesheets and frames are still loading.\n// The state indicates that the DOMContentLoaded event has been fired.\nexport const ready: Promise<void> = (function () {\n  if (ssrSafeDocument?.readyState === 'interactive' || ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise<void>(resolve => {\n      ssrSafeDocument?.addEventListener('DOMContentLoaded', () => {\n        resolve()\n      })\n    })\n  }\n})()\n\n// Check if document has passed loaded state.\n//\n// The document and all sub-resources have finished loading. The state\n// indicates that the load event has been fired.\nexport const loaded: Promise<unknown> = (function () {\n  if (ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise(resolve => {\n      ssrSafeWindow?.addEventListener('load', resolve)\n    })\n  }\n})()\n","// Report uncaught JS errors to Sentry\n//   https://sentry.io/github/github-js\n\nimport {getOrCreateClientId} from '@github/hydro-analytics-client'\nimport {isSupported} from '@github/browser-support'\nimport {parse} from 'stacktrace-parser'\nimport {requestUri} from '@github-ui/analytics-overrides'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {getSoftNavReferrer} from '@github-ui/soft-nav/utils'\n\nlet extensionErrors = false\nlet errorsReported = 0\nconst loadTime = Date.now()\n// network error messages are not consistent across browsers, this is a list of known messages for chrome and firefox\nexport const EXPECTED_NETWORK_ERROR_MESSAGES = new Set([\n  'Failed to fetch',\n  'NetworkError when attempting to fetch resource.',\n])\n\ntype ErrorContext = {\n  message?: string\n}\n\n// Check if an arbitrary object is an error, or at least an object that satisfies the interface of an error,\n// with the necessary information to be able to report it to Sentry.\nfunction isError(error: unknown): error is Error {\n  // Check if it's a definite instance of an error\n  if (error instanceof Error) return true\n  // Otherwise, check that it at least satisfies the interface of an error\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'name' in error &&\n    typeof error.name === 'string' &&\n    'message' in error &&\n    typeof error.message === 'string'\n  )\n}\n\n/** Tries to serialize an arbitrary error value that is not an Error object, and returns a default message otherwise */\nfunction serializeNonError(error: unknown): string {\n  try {\n    return JSON.stringify(error)\n  } catch {\n    return 'Unserializable'\n  }\n}\n\nfunction isExpectedError(error: Error): boolean {\n  // We use AbortController to control events and some workflows. When we call `abort()` on it, it will raise an\n  // `AbortError` which doesn't represent a real error, so we don't want to report it.\n  if (error.name === 'AbortError') return true\n  // Failed to fetch errors are usually related to the user's network connection. They also do not represent\n  // real errors related to our code, so we will also ignore them.\n  if (error.name === 'TypeError' && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n  // For memex we use an ApiError class to represent errors returned from the API\n  // Additional details in the format of ApiErrorOpts are affixed to the name as a stringified JSON object\n  // so we just need to ensure the error name starts with ApiError\n  // see ui/packages/memex/src/client/platform/api-error.ts for more details.\n  if (error.name.startsWith('ApiError') && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n\n  return false\n}\n\n// @deprecated Re-throw the caught exception instead.\nexport function reportError(error: unknown, context: ErrorContext = {}) {\n  if (isFeatureEnabled('FAILBOT_HANDLE_NON_ERRORS')) {\n    if (!isError(error)) {\n      if (isIgnoredNonError(error)) return\n\n      // Create an error instance so that we can get the stacktrace of how this was reported\n      const errorForStackTrace = new Error()\n      const serializedErrorValue = serializeNonError(error)\n      // Construct a custom error object so we can keep track of anywhere that we report an error that isn't an Error object\n      const newError: PlatformJavascriptError = {\n        type: 'UnknownError',\n        value: `Unable to report error, due to a thrown non-Error type: ${typeof error}, with value ${serializedErrorValue}`,\n        stacktrace: stacktrace(errorForStackTrace),\n        catalogService: undefined,\n      }\n      report(errorContext(newError, context))\n      return\n    }\n    if (!isExpectedError(error)) {\n      report(errorContext(formatError(error), context))\n    }\n  } else {\n    // Without feature flag, we will cast the `error` variable which was implicitly the old\n    // behavior of the non-feature flagged code.\n    if (!isExpectedError(error as Error)) {\n      report(errorContext(formatError(error as Error), context))\n    }\n  }\n}\n\n// Report context info to Sentry.\nasync function report(context: PlatformReportBrowserErrorInput) {\n  if (!reportable()) return\n\n  const url = document.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-errors-url\"]')?.content\n  if (!url) return\n\n  if (isExtensionError(context.error.stacktrace)) {\n    extensionErrors = true\n    return\n  }\n\n  errorsReported++\n\n  try {\n    await fetch(url, {method: 'post', body: JSON.stringify(context)})\n  } catch {\n    // Error reporting failed so do nothing.\n  }\n}\n\nfunction formatError(error: Error): PlatformJavascriptError {\n  return {\n    type: error.name,\n    value: error.message,\n    stacktrace: stacktrace(error),\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    catalogService: (error as any)['catalogService'],\n  }\n}\n\nfunction errorContext(error: PlatformJavascriptError, context: ErrorContext = {}): PlatformReportBrowserErrorInput {\n  return Object.assign(\n    {\n      error,\n      sanitizedUrl: requestUri() || window.location.href,\n      readyState: document.readyState,\n      referrer: getSoftNavReferrer(),\n      timeSinceLoad: Math.round(Date.now() - loadTime),\n      user: pageUser() || undefined,\n      bundler,\n      ui: Boolean(document.querySelector('meta[name=\"ui\"]')),\n    },\n    context,\n  )\n}\n\nexport function stacktrace(error: Error): PlatformStackframe[] {\n  return parse(error.stack || '').map(frame => ({\n    filename: frame.file || '',\n    function: String(frame.methodName),\n    lineno: (frame.lineNumber || 0).toString(),\n    colno: (frame.column || 0).toString(),\n  }))\n}\n\nconst extensions = /(chrome|moz|safari)-extension:\\/\\//\n\n// Does this stack trace contain frames from browser extensions?\nfunction isExtensionError(stack: PlatformStackframe[]): boolean {\n  return stack.some(frame => extensions.test(frame.filename) || extensions.test(frame.function))\n}\n\nexport function pageUser() {\n  const login = document.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n  if (login) return login\n\n  const clientId = getOrCreateClientId()\n  return `anonymous-${clientId}`\n}\n\nlet unloaded = false\nssrSafeWindow?.addEventListener('pageshow', () => (unloaded = false))\nssrSafeWindow?.addEventListener('pagehide', () => (unloaded = true))\n\nfunction reportable() {\n  return !unloaded && !extensionErrors && errorsReported < 10 && isSupported()\n}\n\nif (typeof BroadcastChannel === 'function') {\n  const sharedWorkerErrorChannel = new BroadcastChannel('shared-worker-error')\n  sharedWorkerErrorChannel.addEventListener('message', event => {\n    // SharedWorker will emit a formatted error\n    reportError(event.data.error)\n  })\n}\n\nconst ignoredErrorMessages = [\n  'Object Not Found Matching Id', // from Microsoft Outlook SafeLink crawler\n  'Not implemented on this platform', // LastPass Safari extension\n  `provider because it's not your default extension`, // MetaMask extension\n]\n\n/**\n * We see a fair number of \"errors\" which are not actually Error objects. This function will return true if the\n * error is one of these known non-Error types and has content which we know can safely be ignored.\n * Most of these errors come from specific browsers or extensions which we can't control, so we just ignore them.\n * @param error An error that is not an Error object\n * @returns boolean\n */\nfunction isIgnoredNonError(error: unknown) {\n  if (!error || typeof error === 'boolean' || typeof error === 'number') {\n    // Rejected with a type that is not useful to report. Just ignore it.\n    return true\n  } else if (typeof error === 'string') {\n    // rejected with a string. See if it's a known error that we can ignore\n    if (ignoredErrorMessages.some(message => error.includes(message))) {\n      return true\n    }\n  } else if (\n    typeof error === 'object' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).message === 'string' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).code === 'number'\n  ) {\n    // We see an object like {\"message\":\"Not connected\",\"code\":4900} from some extension, likely MetaMask. Ignore these\n    return true\n  }\n\n  return false\n}\n","import memoize from '@github/memoize'\nimport {getEnv} from '@github-ui/client-env'\nimport {IS_SERVER} from '@github-ui/ssr-utils'\n\nfunction getEnabledFeaturesSet(): Set<string> {\n  const features = getEnv().featureFlags\n  const featuresUpperCase = features.map(feature => feature.toLowerCase())\n  return new Set<string>(featuresUpperCase)\n}\n\nconst featuresSet =\n  IS_SERVER || process.env.NODE_ENV === 'test' ? getEnabledFeaturesSet : memoize(getEnabledFeaturesSet)\n\nexport function getEnabledFeatures(): string[] {\n  return Array.from(featuresSet())\n}\n\nexport function isFeatureEnabled(name: string): boolean {\n  return featuresSet().has(name.toLowerCase())\n}\n\n//exported to allow mocking in tests\nconst featureFlag = {isFeatureEnabled}\n\nexport {featureFlag}\n","import {AnalyticsClient, getOptionsFromMeta} from '@github/hydro-analytics-client'\nimport type {Context} from '@github/hydro-analytics-client'\nimport safeStorage from '@github-ui/safe-storage'\nimport {isStaff} from '@github-ui/stats'\nconst {getItem} = safeStorage('localStorage')\n\ndeclare const process: {\n  env: {\n    NODE_ENV: string\n  }\n}\n\nconst dimensionPrefix = 'dimension_'\nlet hydroAnalyticsClient: AnalyticsClient | undefined\n\nconst MARKETING_PARAMS = ['utm_source', 'utm_medium', 'utm_campaign', 'utm_term', 'utm_content', 'scid']\n\ntry {\n  const options = getOptionsFromMeta('octolytics')\n\n  // Remove the base context because meta tags can change as the user navigates with Turbo\n  // These will be folded in for each event & page view\n  delete options.baseContext\n\n  hydroAnalyticsClient = new AnalyticsClient(options)\n} catch (_) {\n  // Failed to get options from meta tags.  This most likely means analytics are disabled.\n}\n\nfunction extendBaseContext(context?: Context) {\n  const baseContext = getOptionsFromMeta('octolytics').baseContext || {}\n\n  if (baseContext) {\n    delete baseContext.app_id\n    delete baseContext.event_url\n    delete baseContext.host\n\n    for (const [key, value] of Object.entries(baseContext)) {\n      // some octolytics meta tags are prefixed with dimension-, which we don't need with the new hydro-analytics-client\n      if (key.startsWith(dimensionPrefix)) {\n        baseContext[key.replace(dimensionPrefix, '')] = value\n        delete baseContext[key]\n      }\n    }\n  }\n\n  const visitorMeta = document.querySelector<HTMLMetaElement>('meta[name=visitor-payload]')\n  if (visitorMeta) {\n    const visitorHash = JSON.parse(atob(visitorMeta.content))\n    Object.assign(baseContext, visitorHash)\n  }\n\n  const urlParams = new URLSearchParams(window.location.search)\n  for (const [key, value] of urlParams) {\n    if (MARKETING_PARAMS.includes(key.toLowerCase())) {\n      baseContext[key] = value\n    }\n  }\n\n  // Include additional context from the page\n  baseContext.staff = isStaff().toString()\n\n  return Object.assign(baseContext, context)\n}\n\nexport function sendPageView(context?: Context) {\n  hydroAnalyticsClient?.sendPageView(extendBaseContext(context))\n}\n\nexport function sendEvent(type: string, context: Record<string, string | number | boolean | undefined | null> = {}) {\n  const service = document.head?.querySelector<HTMLMetaElement>('meta[name=\"current-catalog-service\"]')?.content\n\n  const cleanContext: Context = service ? {service} : {}\n\n  for (const [key, value] of Object.entries(context)) {\n    if (value !== undefined && value !== null) {\n      cleanContext[key] = `${value}`\n    }\n  }\n\n  if (hydroAnalyticsClient) {\n    const typeWithFallback = type || 'unknown'\n    const fullContext = extendBaseContext(cleanContext)\n    hydroAnalyticsClient.sendEvent(typeWithFallback, extendBaseContext(cleanContext))\n\n    if (process.env.NODE_ENV === 'development') {\n      debugSendEvent(typeWithFallback, fullContext)\n    }\n  }\n}\n\nexport function stringifyObjectValues(obj: object) {\n  return Object.fromEntries(Object.entries(obj).map(([k, v]) => [k, JSON.stringify(v)]))\n}\n\nfunction debugSendEvent(type: string, context: Context) {\n  if (getItem('hydro-debug.send-event') === 'true') {\n    // eslint-disable-next-line no-console\n    console.group('[hydro-debug.send-event]')\n    // eslint-disable-next-line no-console\n    console.log({type, context})\n    // eslint-disable-next-line no-console\n    console.groupEnd()\n  }\n}\n","// React to elements receiving focus\n//\n// Often we need to apply some behavior to form elements when they start getting\n// interacted with. We could use `observe`, but that can be expensive if there\n// are many such elements on the page, and when we aren't actually interested in\n// those elements until they receive focus.\n//\n// This is a lightweight and preferred alternative to the family of methods\n// from `github/focused` module.\n//\n// Examples\n//\n//   onFocus('.js-widget', element => {\n//     // ...\n//   })\n\nimport SelectorSet from 'selector-set'\n\nlet initialized = false\nconst selectorSet: SelectorSet<(el: HTMLElement) => void> = new SelectorSet()\n\nfunction handleFocus(event: FocusEvent) {\n  const focused = event.target\n  if (focused instanceof HTMLElement && focused.nodeType !== Node.DOCUMENT_NODE) {\n    for (const match of selectorSet.matches(focused)) {\n      match.data.call(null, focused)\n    }\n  }\n}\n\nexport function onFocus(selector: string, fn: (el: HTMLElement) => unknown) {\n  if (!initialized) {\n    initialized = true\n    // We use the \"focus\" event in the capture phase because Firefox\n    // historically had a limitation with \"focusin\" not bubbling.\n    document.addEventListener('focus', handleFocus, true)\n  }\n  selectorSet.add(selector, fn)\n\n  if (document.activeElement instanceof HTMLElement && document.activeElement.matches(selector)) {\n    fn(document.activeElement)\n  }\n}\n\nexport function onKey(\n  eventType: 'keydown' | 'keypress' | 'keyup',\n  selector: string,\n  inputHandler: (event: KeyboardEvent) => unknown,\n) {\n  function blurHandler(event: Event) {\n    const currentTarget = event.currentTarget as HTMLElement\n    if (!currentTarget) return\n    currentTarget.removeEventListener(eventType, inputHandler)\n    currentTarget.removeEventListener('blur', blurHandler)\n  }\n\n  onFocus(selector, function (field) {\n    field.addEventListener(eventType, inputHandler)\n    field.addEventListener('blur', blurHandler)\n  })\n}\n\nexport function onInput(selector: string, inputHandler: EventListener) {\n  function blurHandler(event: Event) {\n    const {currentTarget} = event\n    if (!currentTarget) return\n\n    currentTarget.removeEventListener('input', inputHandler)\n    currentTarget.removeEventListener('blur', blurHandler)\n  }\n\n  onFocus(selector, function (field) {\n    field.addEventListener('input', inputHandler)\n    field.addEventListener('blur', blurHandler)\n  })\n}\n","import {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {trustedTypesPolicy} from './policy'\n\nconst policyName = 'parse-html-no-op'\n// This is a temporary policy to allow us to migrate to Trusted Types without breaking existing code.\nexport const temporaryPermissiveParseHTMLPolicy = ghTrustedTypes.createPolicy(policyName, {\n  createHTML: (s: string) => {\n    return trustedTypesPolicy.apply({\n      policy: () => s,\n      policyName,\n      fallback: s,\n      sanitize: false,\n      fallbackOnError: true,\n    })\n  },\n})\n","import {temporaryPermissiveParseHTMLPolicy} from '@github-ui/trusted-types-policies/parse-html'\n\nexport function parseHTML(document: Document, html: string): DocumentFragment {\n  const template = document.createElement('template')\n  template.innerHTML = temporaryPermissiveParseHTMLPolicy.createHTML(html)\n  return document.importNode(template.content, true)\n}\n","import memoize from '@github/memoize'\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\n\nconst runtimeEnvironment = memoize(githubEnvironment)\n\n// return the github instance environment\n// if dotcom, returns 'dotcom'\n// if enterprise, returns 'enterprise'\nfunction githubEnvironment(): string {\n  return ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"runtime-environment\"]')?.content || ''\n}\n\nexport const isEnterprise = memoize(isEnterpriseEnvironment)\nfunction isEnterpriseEnvironment(): boolean {\n  return runtimeEnvironment() === 'enterprise'\n}\n\n// This is the \"bundler\" that built the client-side assets, e.g. \"webpack\"\nexport const bundler = typeof BUNDLER !== 'undefined' ? BUNDLER : undefined\n","import {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\ntype StorageBackend = 'sessionStorage' | 'localStorage'\n\n/**\n * An implementation of the Storage API that throws away all data.  Used in\n * cases when the requested Storage backend is not available.\n */\nclass NoOpStorage {\n  getItem() {\n    return null\n  }\n\n  setItem() {\n    return undefined\n  }\n\n  removeItem() {\n    return undefined\n  }\n\n  clear() {\n    return undefined\n  }\n\n  key() {\n    return null\n  }\n\n  get length() {\n    return 0\n  }\n}\n\ntype SafeStorageOptions = {\n  /** Callers may opt not to suppress quota errors thrown on set in case they rely on recieving them. */\n  throwQuotaErrorsOnSet: boolean\n  /** The amount of time the value should remain in storage, in milliseconds */\n  ttl?: number\n  /** Don't send stats in CI */\n  sendCacheStats?: boolean\n}\n\n/**\n * Safely access Storage items by wrapping a Storage instance\n * (localStorage or sessionStorage) with safe versions of its API\n * methods.  Callers may opt not to suppress quota errors thrown on\n * set in case they rely on recieving them.\n */\nexport default function safeStorage<T = string>(\n  storageKey: StorageBackend,\n  options: SafeStorageOptions = {throwQuotaErrorsOnSet: false},\n  global = ssrSafeWindow,\n  deserialize: (value: string) => T = value => value as unknown as T,\n  serialize: (value: T) => string = (value: T) => value as unknown as string,\n) {\n  let storage: Storage\n  try {\n    if (!global) {\n      // in an SSR environment, use noop storage\n      throw new Error()\n    }\n\n    storage = global[storageKey] || new NoOpStorage()\n  } catch {\n    storage = new NoOpStorage()\n  }\n\n  const {throwQuotaErrorsOnSet} = options\n\n  function emitStats(key: PlatformBrowserIncrementKey) {\n    if (options.sendCacheStats) {\n      sendStats({incrementKey: key})\n    }\n  }\n\n  /**  Safely get storage item. Returns `null` if the item is older than the provided ttl */\n  function getItem(key: string, now: number = new Date().getTime()): T | null {\n    try {\n      const value = storage.getItem(key)\n      if (!value) {\n        return null\n      }\n      const expiryKey = `${key}:expiry`\n      const expiry = Number(storage.getItem(expiryKey))\n      if (expiry && now > expiry) {\n        removeItem(key)\n        removeItem(expiryKey)\n        emitStats('SAFE_STORAGE_VALUE_EXPIRED')\n        return null\n      } else {\n        emitStats('SAFE_STORAGE_VALUE_WITHIN_TTL')\n        return deserialize(value)\n      }\n    } catch (error) {\n      // Ignore browser private mode error.\n      return null\n    }\n  }\n\n  /**\n   * Safely set storage item.\n   * If `ttl` is provided, set an expiry time for the item under the key `${key}:expiry`\n   * This function will be called\n   */\n  function setItem(key: string, value: T, now: number = new Date().getTime()) {\n    try {\n      storage.setItem(key, serialize(value) as unknown as string)\n      if (options.ttl) {\n        const expiryKey = `${key}:expiry`\n        const expiry = now + options.ttl\n        storage.setItem(expiryKey, expiry.toString())\n      }\n    } catch (error) {\n      if (throwQuotaErrorsOnSet && error instanceof Error && error.message.toLowerCase().includes('quota')) throw error\n    }\n  }\n\n  // Safely remove storage item.\n  function removeItem(key: string) {\n    try {\n      storage.removeItem(key)\n      if (options.ttl) {\n        const expiryKey = `${key}:expiry`\n        storage.removeItem(expiryKey)\n      }\n    } catch (error) {\n      // Ignore browser private mode error.\n    }\n  }\n\n  return {\n    getItem,\n    setItem,\n    removeItem,\n    clear: storage.clear,\n    key: storage.key,\n    get length() {\n      return storage.length\n    },\n  }\n}\n\nexport function jsonSafeStorage<T>(storageBackend: StorageBackend) {\n  return safeStorage<T>(\n    storageBackend,\n    {throwQuotaErrorsOnSet: false},\n    ssrSafeWindow,\n    JSON.parse as (value: string) => T,\n    JSON.stringify as (obj: T) => string,\n  )\n}\n","import safeStorage from './safe-storage'\n\nexport const {getItem, setItem, removeItem} = safeStorage('sessionStorage')\n","import {getItem, removeItem, setItem} from '@github-ui/safe-storage/session-storage'\nimport type {SoftNavMechanism} from './events'\n\nexport const DEFAULT_SOFT_NAV_ERROR_REASON = 'reload'\n\nexport const SOFT_NAV_FAIL = 'soft-nav:fail'\nexport const SOFT_NAV_FAIL_REFERRER = 'soft-nav:fail-referrer'\nexport const SOFT_NAV_REFERRER = 'soft-nav:referrer'\nexport const SOFT_NAV_MARK = 'soft-nav:marker'\nexport const SOFT_NAV_REACT_APP_NAME = 'soft-nav:react-app-name'\nexport const SOFT_NAV_LATEST_MECHANISM = 'soft-nav:latest-mechanism'\n\nexport function clearSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n  removeItem(SOFT_NAV_REFERRER)\n  removeItem(SOFT_NAV_FAIL)\n  removeItem(SOFT_NAV_FAIL_REFERRER)\n  removeItem(SOFT_NAV_REACT_APP_NAME)\n  removeItem(SOFT_NAV_LATEST_MECHANISM)\n}\n\nexport function setSoftNavMechanism(mechanism: SoftNavMechanism) {\n  setItem(SOFT_NAV_MARK, mechanism)\n}\n\nexport function unsetSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n}\n\nexport function inSoftNav() {\n  const softNav = getItem(SOFT_NAV_MARK)\n  return softNav && softNav !== '0'\n}\n\nexport function getSoftNavMechanism(): SoftNavMechanism {\n  return getItem(SOFT_NAV_MARK) as SoftNavMechanism\n}\n\nexport function hasSoftNavFailure() {\n  return Boolean(getSoftNavFailReason())\n}\n\nexport function getSoftNavFailReason() {\n  return getItem(SOFT_NAV_FAIL)\n}\n\nexport function setSoftNavFailReason(reason: string) {\n  setItem(SOFT_NAV_FAIL, reason || DEFAULT_SOFT_NAV_ERROR_REASON)\n  setItem(SOFT_NAV_FAIL_REFERRER, window.location.href)\n}\n\nexport function setSoftNavReferrer() {\n  setItem(SOFT_NAV_REFERRER, window.location.href)\n}\n\nexport function getSoftNavReferrer() {\n  return getItem(SOFT_NAV_REFERRER) || document.referrer\n}\n\nexport function setSoftNavReactAppName() {\n  const appName = getCurrentReactAppName()\n\n  if (appName) {\n    setItem(SOFT_NAV_REACT_APP_NAME, appName)\n  } else {\n    removeItem(SOFT_NAV_REACT_APP_NAME)\n  }\n}\n\nexport function getSoftNavReactAppName() {\n  return getItem(SOFT_NAV_REACT_APP_NAME)\n}\n\nexport function getCurrentReactAppName() {\n  if (document.querySelector('meta[name=\"ui\"]')) return 'ui'\n\n  return document.querySelector('react-app')?.getAttribute('app-name')\n}\n\nexport function setLatestMechanism(mechanism: SoftNavMechanism) {\n  setItem(SOFT_NAV_LATEST_MECHANISM, mechanism)\n}\n\nexport function getLatestMechanism() {\n  return getItem(SOFT_NAV_LATEST_MECHANISM) as SoftNavMechanism\n}\n","// When using SSR, browser globals are not available. If you try to use them, Node.js will throw an error\ntype SSRSafeLocation = Pick<Location, 'pathname' | 'origin' | 'search' | 'hash' | 'href'>\n\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeDocument = typeof document === 'undefined' ? undefined : document\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeWindow = typeof window === 'undefined' ? undefined : window\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeHistory = typeof history === 'undefined' ? undefined : history\n\nexport const ssrSafeLocation: SSRSafeLocation =\n  // eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\n  typeof location === 'undefined' ? {pathname: '', origin: '', search: '', hash: '', href: ''} : location\n\nexport function setLocation(url: string) {\n  // eslint-disable-next-line no-restricted-syntax\n  const parsedURL: SSRSafeLocation = new URL(url)\n  const {pathname, origin, search, hash} = parsedURL\n\n  Object.assign(ssrSafeLocation, {pathname, origin, search, hash})\n}\n","import {ssrSafeDocument} from './ssr-globals'\n\n/***\n * Are we rendering on the server?\n */\nexport const IS_SERVER = typeof ssrSafeDocument === 'undefined'\n\n/***\n * Are we rendering on the client?\n */\nexport const IS_BROWSER = !IS_SERVER\n\n/***\n * This helper returns `true` if:\n * - we are rendering on the server\n * - we are on the client, and the app has been hydrated from a server-render\n */\nexport function wasServerRendered() {\n  if (IS_SERVER) {\n    return true\n  }\n\n  return Boolean(ssrSafeDocument!.querySelector('react-app[data-ssr=\"true\"]'))\n}\n","import {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {loaded} from '@github-ui/document-ready'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {throttle} from '@github/mini-throttle'\n\nlet stats: PlatformBrowserStat[] = []\nconst chunkSize = 64 * 1024\n\nexport function sendStats(stat: PlatformBrowserStat, flushImmediately = false, samplingProbability = 0.5): void {\n  if (isFeatureEnabled('BROWSER_STATS_DISABLED') === true) {\n    return\n  }\n  if (samplingProbability < 0 || samplingProbability > 1) {\n    throw new RangeError('Sampling probability must be between 0 and 1')\n  }\n\n  if (stat.timestamp === undefined) stat.timestamp = new Date().getTime()\n  stat.loggedIn = isLoggedIn()\n  stat.staff = isStaff()\n  stat.bundler = bundler\n  if (Math.random() < samplingProbability) {\n    stats.push(stat)\n  }\n\n  if (flushImmediately) {\n    flushStats()\n  } else {\n    throttledScheduleSendStats()\n  }\n}\n\nlet queued: number | null = null\n\nconst throttledScheduleSendStats = throttle(async function scheduleSendStats() {\n  await loaded\n  if (queued == null) {\n    queued = window.requestIdleCallback(flushStats)\n  }\n}, 5000)\n\nfunction flushStats() {\n  queued = null\n  if (!stats.length) {\n    return\n  }\n\n  const url = ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-stats-url\"]')?.content\n  if (!url) {\n    return\n  }\n\n  const batches = getBatches(stats)\n\n  for (const batch of batches) {\n    safeSend(url, `{\"stats\": [${batch.join(',')}] }`)\n  }\n\n  stats = []\n}\n\n// getBatches breaks up the list of stats into smaller batches\n// that are less than 64kb in size. This is to avoid hitting the\n// size limit of the beacon API.\nfunction getBatches(items: PlatformBrowserStat[]): string[][] {\n  const batches: string[][] = []\n  const itemStrings = items.map(item => JSON.stringify(item))\n\n  while (itemStrings.length > 0) {\n    batches.push(makeBatch(itemStrings))\n  }\n\n  return batches\n}\n\n// makeBatch walks the items and collects batches of items that are within\n// the 64kb limit. If an item is too big to fit in a batch, it is sent alone.\nfunction makeBatch(itemStrings: string[]): string[] {\n  const firstItem = itemStrings.shift()!\n  const batch: string[] = [firstItem]\n  let size = firstItem.length\n\n  while (itemStrings.length > 0 && size <= chunkSize) {\n    const nextItemSize = itemStrings[0]!.length\n\n    if (size + nextItemSize <= chunkSize) {\n      const itemString = itemStrings.shift()!\n      batch.push(itemString)\n      size += nextItemSize\n    } else {\n      break\n    }\n  }\n\n  return batch\n}\n\nfunction safeSend(url: string, data: string) {\n  try {\n    if (navigator.sendBeacon) {\n      navigator.sendBeacon(url, data)\n    }\n  } catch {\n    // Silently ignore errors: https://github.com/github/github/issues/178088#issuecomment-829936461\n  }\n}\n\nfunction isLoggedIn(): boolean {\n  return !!ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n}\n\nexport function isStaff(): boolean {\n  return !!ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"user-staff\"]')?.content\n}\n\n// Flush stats before users navigate away from the page\nssrSafeDocument?.addEventListener('pagehide', flushStats)\nssrSafeDocument?.addEventListener('visibilitychange', flushStats)\n","// Gets the length of code-points from a String.\n//\n// This is different to `string.length` which returns the amount of utf-8\n// bytes, which is a different metric as - for example - the poo emoji is 2\n// utf-8 bytes, but 1 unicode code point.\n//\n// See http://blog.jonnew.com/posts/poo-dot-length-equals-two for more.\nexport function getUtf8StringLength(str: string): number {\n  const joiner = '\\u200D'\n  const split = str.split(joiner)\n  let count = 0\n\n  for (const s of split) {\n    // removing the variation selectors\n    const num = Array.from(s.split(/[\\ufe00-\\ufe0f]/).join('')).length\n    count += num\n  }\n\n  // assuming the joiners are used appropriately\n  return count / split.length\n}\n/**\n * Replace text in a textarea with a new string and\n * place the cursor at the selectionEnd position.\n * @param textarea an `<input>` or `<textarea>` element\n * @param oldText The text to replace\n * @param newText The new text to replace with\n * @param isFocused whether the textarea is currently in focus\n * @returns The new text\n */\nexport function replaceText(\n  textarea: HTMLInputElement | HTMLTextAreaElement,\n  oldText: string,\n  newText: string,\n  isFocused = true,\n): string {\n  let beginning = textarea.value.substring(0, textarea.selectionEnd || 0)\n  let remaining = textarea.value.substring(textarea.selectionEnd || 0)\n  beginning = beginning.replace(oldText, newText)\n  remaining = remaining.replace(oldText, newText)\n\n  setTextareaValueAndCursor(textarea, beginning + remaining, beginning.length, isFocused)\n\n  return newText\n}\n\n/**\n * Replace selected text in a textarea with a new string.\n * If the selection is empty, the old text is replaced by the\n * new text in the whole textarea.\n * @param textarea an `<input>` or `<textarea>` element\n * @param oldText The text to replace\n * @param newText The new text to replace with\n * @returns The new text\n */\nexport function replaceSelection(\n  textarea: HTMLInputElement | HTMLTextAreaElement,\n  oldText: string,\n  newText: string,\n): string {\n  if (textarea.selectionStart === null || textarea.selectionEnd === null) {\n    return replaceText(textarea, oldText, newText)\n  }\n  const beginning = textarea.value.substring(0, textarea.selectionStart)\n  const remaining = textarea.value.substring(textarea.selectionEnd)\n\n  setTextareaValueAndCursor(textarea, beginning + newText + remaining, beginning.length)\n\n  return newText\n}\n\ntype InsertOptions = {\n  appendNewline?: boolean\n}\n/**\n * Inserts text into a text input and moves the cursor appropriately.\n * If the cursor happens to be in the middle of a line, or the textarea isn't empty,\n * we add a newline character before the inserted text. We also advance the cursor\n * appropriately\n * @param textarea an `<input>` or `<textarea>` element\n * @param text The text to add\n * @param appendNewline optionally adds a `\\n` character after `text`\n */\nexport function insertText(\n  textarea: HTMLInputElement | HTMLTextAreaElement,\n  text: string,\n  options: InsertOptions = {},\n): string {\n  const point = textarea.selectionEnd || 0\n  const beginning = textarea.value.substring(0, point)\n  const remaining = textarea.value.substring(point)\n  const newline = textarea.value === '' || beginning.match(/\\n$/) ? '' : '\\n'\n  const trailingNewline = options.appendNewline ? '\\n' : ''\n  const insertedText = newline + text + trailingNewline\n\n  textarea.value = beginning + insertedText + remaining\n  const newPoint = point + insertedText.length\n  textarea.selectionStart = newPoint\n  textarea.selectionEnd = newPoint\n  textarea.dispatchEvent(new CustomEvent('change', {bubbles: true, cancelable: false}))\n  textarea.focus()\n  return insertedText\n}\n\n/**\n * Helper function to set the value of a textarea and move the cursor to a given position.\n * Emits a `change` event.\n * @param textarea an `<input>` or `<textarea>` element\n * @param value The new value\n * @param cursor The position to move the cursor to\n * @param isFocused whether the textarea is currently in focus\n */\nfunction setTextareaValueAndCursor(\n  textarea: HTMLInputElement | HTMLTextAreaElement,\n  value: string,\n  cursor: number,\n  isFocused = true,\n) {\n  textarea.value = value\n\n  if (isFocused) {\n    textarea.selectionStart = cursor\n    textarea.selectionEnd = cursor\n  }\n\n  textarea.dispatchEvent(new CustomEvent('change', {bubbles: true, cancelable: false}))\n}\n\n// Returns the character index for a given byte position, taking character encoding into account\n// Example usage for this method: highlighing text in a textarea that may contain non-UTF8 characters\n//\n// For context, in Javascript, strings are UTF16. However, Codemirror uses simple Javascript\n// indexing, that isn't Unicode aware. This leads to incorrect highlighting.\n//\n// For example, '💩' is represented as 4 bytes. In Javascript, it has length 2\n// and is composed of a surrogate pair (2 code points). '💩'.length is 2.\n// Given text string such as 'hello 💩 world', this would be represented in hex as:\n// ┌────────┬─────────────────────────┬─────────────────────────┬────────┬────────┐\n// │00000000│ 68 65 6c 6c 6f 20 f0 9f ┊ 92 a9 20 77 6f 72 6c 64 │hello ××┊×× world│\n// └────────┴─────────────────────────┴─────────────────────────┴────────┴────────┘\n// The string 'world' appears at byte positions (11, 16), but in Javascript `str.slice(11, 16)` returns 'rld'.\n// The correct position in Javascript, and codemirror, would be: (9, 14).\n//\n// When encoded using `TextEncoder#encodeInto` with '💩', we'd get an object with\n// the following properties: {written: 4, read: 2}. This discrepancy informs us\n// that we need to offset the start and end positions by 2.\nexport function GetCharIndexFromBytePosition(str: string, pos: number): number {\n  // The string iterator [...str] is unicode aware, and allows us to correctly\n  // iterate over each grapheme in the string. Iterating over `str[i]` would\n  // not work, as it separates the astral symbol into each of its surrogates.\n  const contents = [...str]\n  const encoder = new TextEncoder()\n\n  // Astral code points in Javascript are a surrogate pair of 2 UTF16 code units, or 4 bytes\n  const u8array = new Uint8Array(4)\n\n  for (let i = 0; i < contents.length; i++) {\n    const char = contents[i]!\n    const {written, read} = encoder.encodeInto(char, u8array)\n    if (!written || !read) {\n      return -1\n    }\n    const diff = written - read\n    if (diff === 0) {\n      continue\n    }\n\n    if (i < pos) {\n      pos -= diff\n    }\n\n    if (i >= pos) {\n      break\n    }\n  }\n\n  return pos\n}\n","import {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {sendStats} from '@github-ui/stats'\n// eslint-disable-next-line no-restricted-imports\nimport {reportError} from '@github-ui/failbot'\nimport dompurify from 'dompurify'\nimport {sendEvent} from '@github-ui/hydro-analytics'\n\nexport class TrustedTypesPolicyError extends Error {}\n\ninterface PolicyParam {\n  policy: () => string\n  policyName: string\n  fallback: string\n  fallbackOnError?: boolean\n  sanitize?: boolean // report-only mode for now\n  silenceErrorReporting?: boolean\n}\n\nfunction apply({\n  policy,\n  policyName,\n  fallback,\n  fallbackOnError = false,\n  sanitize,\n  silenceErrorReporting = false,\n}: PolicyParam): string {\n  try {\n    if (isFeatureEnabled('BYPASS_TRUSTED_TYPES_POLICY_RULES')) return fallback\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_CALLED', trustedTypesPolicyName: policyName}, false, 0.1)\n    const policyOutput = policy()\n    if (sanitize) {\n      new Promise(resolve => {\n        const startTime = window.performance.now()\n        const sanitized = dompurify.sanitize(policyOutput, {FORBID_ATTR: []})\n        const endTime = window.performance.now()\n        const executionTime = endTime - startTime\n        if (policyOutput.length !== sanitized.length) {\n          const err = new Error('Trusted Types policy output sanitized')\n          const stack = err.stack?.slice(0, 1000)\n          const output = policyOutput.slice(0, 250)\n          sendEvent('trusted_types_policy.sanitize', {\n            policyName,\n            output,\n            stack,\n            outputLength: policyOutput.length,\n            sanitizedLength: sanitized.length,\n            executionTime,\n          })\n          resolve(policyOutput)\n        }\n      })\n    }\n    return policyOutput\n  } catch (e) {\n    if (e instanceof TrustedTypesPolicyError) throw e\n    if (!silenceErrorReporting) reportError(e)\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_ERROR', trustedTypesPolicyName: policyName})\n    if (!fallbackOnError) throw e\n  }\n\n  return fallback\n}\n\nexport const trustedTypesPolicy = {apply}\n","/* eslint no-restricted-globals: ['off', '__TRUSTED_TYPE_POLICIES__'] */\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\n/*\n * Tinyfill for trusted types\n */\n\ninterface GHTrustedTypePolicyOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createHTML: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScript: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScriptURL: (input: string, ...args: any[]) => string\n}\n\ninterface GHTrustedTypePolicyWithName extends GHTrustedTypePolicyOptions {\n  name: string\n}\n\nfunction unimplemented(functionName: string) {\n  return () => {\n    throw new TypeError(`The policy does not implement the function ${functionName}`)\n  }\n}\n\nconst fallbacks = {\n  createHTML: unimplemented('createHTML'),\n  createScript: unimplemented('createScript'),\n  createScriptURL: unimplemented('createScriptURL'),\n}\n\nconst tinyfill = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => ({\n    name,\n    ...fallbacks,\n    ...rules,\n  }),\n}\n\ntype TrustedTypesPolicies = Map<string, GHTrustedTypePolicyOptions>\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var trustedTypes: typeof tinyfill | undefined\n  // We need to store the policies in a global variable so that they accurately track the global policy store in the\n  // browser. This prevents false misses when there is more than one instance of this module loaded on the page.\n  // eslint-disable-next-line no-var\n  var __TRUSTED_TYPE_POLICIES__: TrustedTypesPolicies\n}\n\nconst registeredPolicies: TrustedTypesPolicies = (globalThis.__TRUSTED_TYPE_POLICIES__ ??= new Map())\n\n// eslint-disable-next-line compat/compat\nconst trustedTypes = globalThis.trustedTypes ?? tinyfill\n\nexport const ghTrustedTypes = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => {\n    if (registeredPolicies.has(name)) {\n      sendStats({\n        incrementKey: 'TRUSTED_TYPES_POLICY_INITIALIZED_TWICE',\n      })\n      return registeredPolicies.get(name) as GHTrustedTypePolicyWithName\n    } else {\n      const policy = Object.freeze(trustedTypes.createPolicy(name, rules))\n      registeredPolicies.set(name, policy)\n      return policy\n    }\n  },\n}\n\n// This export is only for testing. Do not import in production code.\nexport const registeredPoliciesForTesting = registeredPolicies\nexport const tinyfillForTesting = tinyfill\n\n/*\n *\n * This is a temporary warning to indicate to hubbers that the following errors are expected and safe to ignore.\n *\n */\nlet hasWarnedHubberAboutTrustedTypes = false\n\nssrSafeDocument?.addEventListener('securitypolicyviolation', (e: SecurityPolicyViolationEvent) => {\n  if (e.violatedDirective === 'require-trusted-types-for' && !hasWarnedHubberAboutTrustedTypes) {\n    // eslint-disable-next-line no-console\n    console.warn(`Hi fellow Hubber!\n    You're probably seeing a Report Only Trusted Types error near this message. This is intended behaviour, staff-only,\n    does not impact application control flow, and is used solely for statistic collection. Unfortunately we\n    can't gather these statistics without adding the above warnings to your console. Sorry about that!\n    Feel free to drop by #prodsec-engineering if you have any additional questions about Trusted Types or CSP.`)\n    hasWarnedHubberAboutTrustedTypes = true\n  }\n})\n"],"names":["setFocusOnClearFilters","document","removeEventListener","clearButton","querySelector","hidden","openCloseButtons","querySelectorAll","openButton","length","focus","title","concat","on","addEventListener","getSubmitButton","event","currentTarget","setSubmitButtonDisableWith","submitButton","textContent","getAttribute","disabled","resetSubmitButton","getCustomPatternForm","observe","add","window","postProcessingExpressionCount","postProcessingExpressionCountElement","parseInt","addSecretFormatButton","getMaxPostProcessingExpressions","additionalSecretFormatElements","element","classList","contains","toggle","removeSecretFormatButton","additionalSecretFormatElement","closest","inputElement","getElementsByClassName","value","inputElementRules","Array","from","erroredElement","getElementById","id","remove","debouncedTestPatternMatches","codeEditor","getValue","testCodeTextArea","editorHeight","clientHeight","CodeMirror","default","fromTextArea","lineNumbers","lineWrapping","mode","inputStyle","lineSeparator","theme","style","height","border","borderRadius","save","testCustomPatternForm","debouncedApiCall","hasAttribute","debouncedTestPatternMatchesReadOnly","test","navigator","userAgent","onInput","preventDefault","descriptionInput","removeErrorStylingFromInput","parentElement","errorMessageId","secretFormatInputField","examplesTextArea","copiedExpression","copiedExpressionTextElementId","attributes","getNamedItem","copiedExpressionTextElement","setValue","replaceAll","data","addErrorStylingToInput","setErrorMessageForInput","generatedExpressionsSection","errorSection","warningSection","generatedExpressionBoxElements","i","toggleAttribute","form","response","fetch","action","method","body","FormData","headers","Accept","json","error_msg","e","generated_expressions","ariaLabel","role","generatedExpressionElements","generatedExpressionExplanationElements","regex","explanation","removeAttribute","customPatternForm","className","includes","createHiddenInputField","fire","name","hiddenInput","createElement","type","appendChild","required","debounce","testCode","customPatternSubmitButton","saveAndDryRunButton","repoSelectorDialogSummaryButton","editPatternMessageElement","patternMatchesCountElement","dryRunStatusElement","toLowerCase","setAttribute","HTMLFormElement","elements","HTMLInputElement","checked","hiddenElement","updatePatternMatches","getTestErrorHandler","getTestLabelUpdater","matchesJson","serializedArray","m","push","JSON","stringify","uniqueSerializedArray","Set","clearInputErrorState","input","errorBanner","getElementsByTagName","error","message","error_type","detailsToggle","ensureExpanded","showInputErrorState","idx","expressionContainer","error_index","checkedButton","filter","x","toUpperCase","isErrorField","expressionInput","errorInputID","errorTypeToInputId","modeElement","maxPostProcessingExpressionsElement","maxExpressionsAsString","errorID","errorMessage","setErrorMargin","errorMargin","messageID","insertAdjacentElement","clearCodeHighlights","posFromIndex","to","mark","findMarks","clear","NONE","CONFIG_LOAD","COMPILE_DB","START_DELIMITER","END_DELIMITER","DISPLAY_NAME","DB_SIZE","DB_SIZE_CALCULATION","responseCallback","updateLabelCallback","ok","has_matches","parse","matches","match","MarkMatch","start","end","contents","GetCharIndexFromBytePosition","markText","toggleWildcardsWarning","visible","warningElement","has_wildcard_warning","removeDryRunRepo","updateDryRunSelectedRepos","remove_repo_id","removeAllDryRunSelectedRepos","allowDryRun","selectedReposElement","selectedReposSet","dryRunButton","formData","append","status","template","after","TemplateInstance","target","partial","parseHTML","text","replaceWith","repoId","addRepo","size","getMaxDryRunSelectedRepos","maxDryRunSelectedReposElement","maxRepos","delete","autoComplete","addForm","repo_id","selectedReposForm","repoSelectionComponent","radioButtonElement","children","childElementCount","onKey","key","queryLast","selector","list","requestUri","location","protocol","host","pagePathname","locationOverride","content","pathname","pageQuery","stripParams","search","extraParams","meta","names","split","replace","env","getEnv","getLocale","locale","loadEnv","envTag","console","ready","ssrSafeDocument","readyState","Promise","resolve","loaded","ssrSafeWindow","extensionErrors","errorsReported","loadTime","Date","now","EXPECTED_NETWORK_ERROR_MESSAGES","isExpectedError","has","startsWith","reportError","context","isFeatureEnabled","Error","isIgnoredNonError","ignoredErrorMessages","some","code","errorForStackTrace","serializedErrorValue","serializeNonError","report","errorContext","stacktrace","catalogService","undefined","formatError","unloaded","isSupported","url","head","stack","frame","extensions","filename","function","Object","assign","sanitizedUrl","href","referrer","getSoftNavReferrer","timeSinceLoad","Math","round","user","pageUser","login","clientId","getOrCreateClientId","bundler","ui","Boolean","map","file","String","methodName","lineno","lineNumber","toString","colno","column","BroadcastChannel","sharedWorkerErrorChannel","getEnabledFeaturesSet","features","featureFlags","feature","featuresSet","IS_SERVER","memoize","getEnabledFeatures","featureFlag","hydroAnalyticsClient","getItem","safeStorage","dimensionPrefix","MARKETING_PARAMS","options","getOptionsFromMeta","baseContext","AnalyticsClient","_","extendBaseContext","app_id","event_url","entries","visitorMeta","atob","URLSearchParams","staff","isStaff","sendPageView","sendEvent","service","cleanContext","stringifyObjectValues","obj","fromEntries","k","v","initialized","selectorSet","SelectorSet","handleFocus","focused","HTMLElement","nodeType","Node","DOCUMENT_NODE","call","onFocus","fn","activeElement","eventType","inputHandler","blurHandler","field","policyName","temporaryPermissiveParseHTMLPolicy","ghTrustedTypes","createPolicy","createHTML","trustedTypesPolicy","apply","policy","s","fallback","sanitize","fallbackOnError","html","innerHTML","importNode","runtimeEnvironment","isEnterprise","BUNDLER","NoOpStorage","setItem","removeItem","storageKey","throwQuotaErrorsOnSet","global","deserialize","serialize","storage","emitStats","sendCacheStats","sendStats","incrementKey","ttl","expiryKey","getTime","expiry","Number","jsonSafeStorage","storageBackend","DEFAULT_SOFT_NAV_ERROR_REASON","SOFT_NAV_FAIL","SOFT_NAV_FAIL_REFERRER","SOFT_NAV_REFERRER","SOFT_NAV_MARK","SOFT_NAV_REACT_APP_NAME","SOFT_NAV_LATEST_MECHANISM","clearSoftNav","setSoftNavMechanism","mechanism","unsetSoftNav","inSoftNav","softNav","getSoftNavMechanism","hasSoftNavFailure","getSoftNavFailReason","setSoftNavFailReason","reason","setSoftNavReferrer","setSoftNavReactAppName","appName","getCurrentReactAppName","getSoftNavReactAppName","setLatestMechanism","getLatestMechanism","ssrSafeHistory","history","ssrSafeLocation","origin","hash","IS_BROWSER","wasServerRendered","stats","stat","flushImmediately","samplingProbability","timestamp","loggedIn","random","flushStats","throttledScheduleSendStats","queued","throttle","requestIdleCallback","batch","getBatches","items","batches","itemStrings","item","makeBatch","firstItem","shift","nextItemSize","itemString","safeSend","sendBeacon","join","getUtf8StringLength","str","count","replaceText","textarea","oldText","newText","isFocused","beginning","substring","selectionEnd","remaining","setTextareaValueAndCursor","replaceSelection","selectionStart","insertText","point","insertedText","newline","appendNewline","newPoint","dispatchEvent","CustomEvent","bubbles","cancelable","cursor","pos","encoder","TextEncoder","u8array","Uint8Array","char","written","read","encodeInto","diff","TrustedTypesPolicyError","silenceErrorReporting","trustedTypesPolicyName","policyOutput","startTime","performance","sanitized","dompurify","FORBID_ATTR","endTime","err","slice","output","outputLength","sanitizedLength","executionTime","globalThis","unimplemented","functionName","fallbacks","createScript","createScriptURL","registeredPolicies","__TRUSTED_TYPE_POLICIES__","Map","trustedTypes","rules","get","freeze","set","hasWarnedHubberAboutTrustedTypes","violatedDirective","warn"],"sourceRoot":""}