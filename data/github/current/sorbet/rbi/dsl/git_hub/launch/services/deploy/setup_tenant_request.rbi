# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Launch::Services::Deploy::SetupTenantRequest`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Launch::Services::Deploy::SetupTenantRequest`.

class GitHub::Launch::Services::Deploy::SetupTenantRequest
  sig do
    params(
      global_relay_id: T.nilable(GitHub::Launch::Pbtypes::GitHub::Identity),
      owner_global_relay_id: T.nilable(GitHub::Launch::Pbtypes::GitHub::Identity),
      timeout_ms: T.nilable(Integer)
    ).void
  end
  def initialize(global_relay_id: nil, owner_global_relay_id: nil, timeout_ms: nil); end

  sig { void }
  def clear_global_relay_id; end

  sig { void }
  def clear_owner_global_relay_id; end

  sig { void }
  def clear_timeout_ms; end

  sig { returns(T.nilable(GitHub::Launch::Pbtypes::GitHub::Identity)) }
  def global_relay_id; end

  sig { params(value: T.nilable(GitHub::Launch::Pbtypes::GitHub::Identity)).void }
  def global_relay_id=(value); end

  sig { returns(T.nilable(GitHub::Launch::Pbtypes::GitHub::Identity)) }
  def owner_global_relay_id; end

  sig { params(value: T.nilable(GitHub::Launch::Pbtypes::GitHub::Identity)).void }
  def owner_global_relay_id=(value); end

  sig { returns(Integer) }
  def timeout_ms; end

  sig { params(value: Integer).void }
  def timeout_ms=(value); end
end
