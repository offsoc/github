{
  "26410ed4b8cfe2b17fdf2ed9ff0d19c8": "query ActiveDeploymentsTestQuery {\n  repository: node(id: \"test-id\") {\n    __typename\n    ...ActivePinnedEnvironments\n    ...ActiveStickyDeployments\n    id\n  }\n}\n\nfragment ActivePinnedEnvironments on Repository {\n  pinnedEnvironments(first: 10) {\n    edges {\n      node {\n        databaseId\n        position\n        environment {\n          id\n          name\n          isPinned\n          latestCompletedDeployment {\n            databaseId\n            createdAt\n            latestStatus {\n              logUrl\n              environmentUrl\n              state\n              id\n            }\n            commit {\n              messageHeadlineHTML\n              id\n            }\n            id\n          }\n        }\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n}\n\nfragment ActiveStickyDeployments on Repository {\n  stickyEnvironments: environments(names: [\"github-pages\", \"production\"], first: 2) {\n    edges {\n      node {\n        databaseId\n        id\n        name\n        latestCompletedDeployment {\n          databaseId\n          createdAt\n          latestStatus {\n            logUrl\n            environmentUrl\n            state\n            id\n          }\n          commit {\n            messageHeadlineHTML\n            id\n          }\n          id\n        }\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n}\n",
  "3bdd2ccbc784aa64e09ebc6156c9fed7": "mutation pinEnvironmentMutation(\n  $input: PinEnvironmentInput!\n) {\n  pinEnvironment(input: $input) {\n    environment {\n      id\n      isPinned\n    }\n    pinnedEnvironment {\n      id\n      databaseId\n      position\n      environment {\n        id\n        name\n        isPinned\n        latestCompletedDeployment {\n          databaseId\n          createdAt\n          latestStatus {\n            logUrl\n            environmentUrl\n            state\n            id\n          }\n          commit {\n            messageHeadlineHTML\n            id\n          }\n          id\n        }\n      }\n    }\n  }\n}\n",
  "577932ce38e56cac07d4626e5fb6d4c4": "query DeploymentsTableTestQuery {\n  repository: node(id: \"test-id\") {\n    __typename\n    ... on Repository {\n      ...DeploymentsTablePagination\n    }\n    id\n  }\n}\n\nfragment DeploymentsTablePagination on Repository {\n  deployments(first: 25, environments: [], orderBy: {field: CREATED_AT, direction: DESC}) {\n    edges {\n      node {\n        databaseId\n        commitOid\n        createdAt\n        environment\n        latestStatus {\n          logUrl\n          environmentUrl\n          state\n          id\n        }\n        refName\n        repository {\n          name\n          owner {\n            __typename\n            login\n            id\n          }\n          id\n        }\n        creator {\n          __typename\n          login\n          avatarUrl\n          url\n          ... on Bot {\n            id\n            login\n          }\n          id\n        }\n        checkRun {\n          checkSuite {\n            workflowRun {\n              url\n              runNumber\n              workflow {\n                name\n                id\n              }\n              id\n            }\n            id\n          }\n          id\n        }\n        commit {\n          messageHeadlineHTML\n          id\n        }\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      startCursor\n      hasPreviousPage\n      hasNextPage\n    }\n    totalCount\n  }\n  id\n}\n",
  "7082649b31a5af5356b6c3606fc1d6ea": "query PinnedEnvironmentListRefetch(\n  $cursor: String\n  $first: Int = 10\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ...ActivePinnedEnvironments_19XkED\n    id\n  }\n}\n\nfragment ActivePinnedEnvironments_19XkED on Repository {\n  pinnedEnvironments(first: $first, after: $cursor) {\n    edges {\n      node {\n        databaseId\n        position\n        environment {\n          id\n          name\n          isPinned\n          latestCompletedDeployment {\n            databaseId\n            createdAt\n            latestStatus {\n              logUrl\n              environmentUrl\n              state\n              id\n            }\n            commit {\n              messageHeadlineHTML\n              id\n            }\n            id\n          }\n        }\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n}\n",
  "785909721891693b9f1475f8d4d4fd5f": "query EnvironmentListTestQuery {\n  repository: node(id: \"test-id\") {\n    __typename\n    ... on Repository {\n      ...EnvironmentListListings\n      ...EnvironmentListingsPinned\n    }\n    id\n  }\n}\n\nfragment EnvironmentListListings on Repository {\n  environments(first: 50, pinnedEnvironmentFilter: NONE) {\n    edges {\n      node {\n        id\n        name\n        isPinned\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n}\n\nfragment EnvironmentListingsPinned on Repository {\n  listPinnedEnvironments: environments(first: 10, pinnedEnvironmentFilter: ONLY) {\n    edges {\n      node {\n        id\n        name\n        isPinned\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n",
  "86046c91f7fcb6a42ab7e45eafbe1dac": "query DeploymentsPageQuery(\n  $owner: String!\n  $repo: String!\n) {\n  repository(owner: $owner, name: $repo) {\n    name\n    viewerCanAdminister\n    canUseEnvironments\n    owner {\n      __typename\n      login\n      id\n    }\n    ...EnvironmentListListings\n    ...EnvironmentListingsPinned\n    ...DeploymentsTablePagination\n    ...ActivePinnedEnvironments\n    ...ActiveStickyDeployments\n    id\n  }\n}\n\nfragment ActivePinnedEnvironments on Repository {\n  pinnedEnvironments(first: 10) {\n    edges {\n      node {\n        databaseId\n        position\n        environment {\n          id\n          name\n          isPinned\n          latestCompletedDeployment {\n            databaseId\n            createdAt\n            latestStatus {\n              logUrl\n              environmentUrl\n              state\n              id\n            }\n            commit {\n              messageHeadlineHTML\n              id\n            }\n            id\n          }\n        }\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n}\n\nfragment ActiveStickyDeployments on Repository {\n  stickyEnvironments: environments(names: [\"github-pages\", \"production\"], first: 2) {\n    edges {\n      node {\n        databaseId\n        id\n        name\n        latestCompletedDeployment {\n          databaseId\n          createdAt\n          latestStatus {\n            logUrl\n            environmentUrl\n            state\n            id\n          }\n          commit {\n            messageHeadlineHTML\n            id\n          }\n          id\n        }\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n}\n\nfragment DeploymentsTablePagination on Repository {\n  deployments(first: 25, environments: [], orderBy: {field: CREATED_AT, direction: DESC}) {\n    edges {\n      node {\n        databaseId\n        commitOid\n        createdAt\n        environment\n        latestStatus {\n          logUrl\n          environmentUrl\n          state\n          id\n        }\n        refName\n        repository {\n          name\n          owner {\n            __typename\n            login\n            id\n          }\n          id\n        }\n        creator {\n          __typename\n          login\n          avatarUrl\n          url\n          ... on Bot {\n            id\n            login\n          }\n          id\n        }\n        checkRun {\n          checkSuite {\n            workflowRun {\n              url\n              runNumber\n              workflow {\n                name\n                id\n              }\n              id\n            }\n            id\n          }\n          id\n        }\n        commit {\n          messageHeadlineHTML\n          id\n        }\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      startCursor\n      hasPreviousPage\n      hasNextPage\n    }\n    totalCount\n  }\n  id\n}\n\nfragment EnvironmentListListings on Repository {\n  environments(first: 50, pinnedEnvironmentFilter: NONE) {\n    edges {\n      node {\n        id\n        name\n        isPinned\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n}\n\nfragment EnvironmentListingsPinned on Repository {\n  listPinnedEnvironments: environments(first: 10, pinnedEnvironmentFilter: ONLY) {\n    edges {\n      node {\n        id\n        name\n        isPinned\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n",
  "93a08ae236a833b2622a36843027a752": "query EnvironmentListRefetch(\n  $cursor: String\n  $first: Int = 50\n  $pinnedEnvironmentFilter: EnvironmentPinnedFilterField = NONE\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ...EnvironmentListListings_Xb6fK\n    id\n  }\n}\n\nfragment EnvironmentListListings_Xb6fK on Repository {\n  environments(first: $first, after: $cursor, pinnedEnvironmentFilter: $pinnedEnvironmentFilter) {\n    edges {\n      node {\n        id\n        name\n        isPinned\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n}\n",
  "c980ae5b537e2ae1b73885780207e95b": "query StickyDeploymentListRefetch(\n  $cursor: String\n  $first: Int = 2\n  $names: [String!] = [\"github-pages\", \"production\"]\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ...ActiveStickyDeployments_45x0Zf\n    id\n  }\n}\n\nfragment ActiveStickyDeployments_45x0Zf on Repository {\n  stickyEnvironments: environments(names: $names, first: $first, after: $cursor) {\n    edges {\n      node {\n        databaseId\n        id\n        name\n        latestCompletedDeployment {\n          databaseId\n          createdAt\n          latestStatus {\n            logUrl\n            environmentUrl\n            state\n            id\n          }\n          commit {\n            messageHeadlineHTML\n            id\n          }\n          id\n        }\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n}\n",
  "d45bd737b9def0ac5e4349cece64bf93": "query DeploymentListItemQuery(\n  $deploymentNodeId: ID!\n) {\n  node(id: $deploymentNodeId) {\n    __typename\n    ... on Deployment {\n      ref {\n        name\n        prefix\n        id\n      }\n      commit {\n        associatedPullRequests(last: 1) {\n          nodes {\n            number\n            permalink\n            id\n          }\n        }\n        id\n      }\n    }\n    id\n  }\n}\n",
  "f6391648c3ca4600bdcb73b1f0e446c7": "query DeploymentsPaginatedQuery(\n  $cursor: String\n  $env: [String!] = []\n  $filterBy: DeploymentFilters = null\n  $first: Int = 25\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ...DeploymentsTablePagination_DsxxL\n    id\n  }\n}\n\nfragment DeploymentsTablePagination_DsxxL on Repository {\n  deployments(first: $first, after: $cursor, environments: $env, orderBy: {field: CREATED_AT, direction: DESC}, filterBy: $filterBy) {\n    edges {\n      node {\n        databaseId\n        commitOid\n        createdAt\n        environment\n        latestStatus {\n          logUrl\n          environmentUrl\n          state\n          id\n        }\n        refName\n        repository {\n          name\n          owner {\n            __typename\n            login\n            id\n          }\n          id\n        }\n        creator {\n          __typename\n          login\n          avatarUrl\n          url\n          ... on Bot {\n            id\n            login\n          }\n          id\n        }\n        checkRun {\n          checkSuite {\n            workflowRun {\n              url\n              runNumber\n              workflow {\n                name\n                id\n              }\n              id\n            }\n            id\n          }\n          id\n        }\n        commit {\n          messageHeadlineHTML\n          id\n        }\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      startCursor\n      hasPreviousPage\n      hasNextPage\n    }\n    totalCount\n  }\n  id\n}\n"
}