{"version":3,"file":"chunk-node_modules_codemirror_legacy-modes_mode_vhdl_js-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@codemirror/legacy-modes/mode/vhdl.js"],"sourcesContent":["function words(str) {\n  var obj = {}, words = str.split(\",\");\n  for (var i = 0; i < words.length; ++i) {\n    var allCaps = words[i].toUpperCase();\n    var firstCap = words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    obj[words[i]] = true;\n    obj[allCaps] = true;\n    obj[firstCap] = true;\n  }\n  return obj;\n}\n\nfunction metaHook(stream) {\n  stream.eatWhile(/[\\w\\$_]/);\n  return \"meta\";\n}\n\nvar atoms = words(\"null\"),\n    hooks = {\"`\": metaHook, \"$\": metaHook},\n    multiLineStrings = false;\n\nvar keywords = words(\"abs,access,after,alias,all,and,architecture,array,assert,attribute,begin,block,\" +\n                     \"body,buffer,bus,case,component,configuration,constant,disconnect,downto,else,elsif,end,end block,end case,\" +\n                     \"end component,end for,end generate,end if,end loop,end process,end record,end units,entity,exit,file,for,\" +\n                     \"function,generate,generic,generic map,group,guarded,if,impure,in,inertial,inout,is,label,library,linkage,\" +\n                     \"literal,loop,map,mod,nand,new,next,nor,null,of,on,open,or,others,out,package,package body,port,port map,\" +\n                     \"postponed,procedure,process,pure,range,record,register,reject,rem,report,return,rol,ror,select,severity,signal,\" +\n                     \"sla,sll,sra,srl,subtype,then,to,transport,type,unaffected,units,until,use,variable,wait,when,while,with,xnor,xor\");\n\nvar blockKeywords = words(\"architecture,entity,begin,case,port,else,elsif,end,for,function,if\");\n\nvar isOperatorChar = /[&|~><!\\)\\(*#%@+\\/=?\\:;}{,\\.\\^\\-\\[\\]]/;\nvar curPunc;\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n  if (hooks[ch]) {\n    var result = hooks[ch](stream, state);\n    if (result !== false) return result;\n  }\n  if (ch == '\"') {\n    state.tokenize = tokenString2(ch);\n    return state.tokenize(stream, state);\n  }\n  if (ch == \"'\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n  if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n    curPunc = ch;\n    return null;\n  }\n  if (/[\\d']/.test(ch)) {\n    stream.eatWhile(/[\\w\\.']/);\n    return \"number\";\n  }\n  if (ch == \"-\") {\n    if (stream.eat(\"-\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n  }\n  if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n  stream.eatWhile(/[\\w\\$_]/);\n  var cur = stream.current();\n  if (keywords.propertyIsEnumerable(cur.toLowerCase())) {\n    if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n    return \"keyword\";\n  }\n  if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n  return \"variable\";\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {end = true; break;}\n      escaped = !escaped && next == \"--\";\n    }\n    if (end || !(escaped || multiLineStrings))\n      state.tokenize = tokenBase;\n    return \"string\";\n  };\n}\nfunction tokenString2(quote) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {end = true; break;}\n      escaped = !escaped && next == \"--\";\n    }\n    if (end || !(escaped || multiLineStrings))\n      state.tokenize = tokenBase;\n    return \"string.special\";\n  };\n}\n\nfunction Context(indented, column, type, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.align = align;\n  this.prev = prev;\n}\nfunction pushContext(state, col, type) {\n  return state.context = new Context(state.indented, col, type, null, state.context);\n}\nfunction popContext(state) {\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\n// Interface\nexport const vhdl = {\n  name: \"vhdl\",\n  startState: function(indentUnit) {\n    return {\n      tokenize: null,\n      context: new Context(-indentUnit, 0, \"top\", false),\n      indented: 0,\n      startOfLine: true\n    };\n  },\n\n  token: function(stream, state) {\n    var ctx = state.context;\n    if (stream.sol()) {\n      if (ctx.align == null) ctx.align = false;\n      state.indented = stream.indentation();\n      state.startOfLine = true;\n    }\n    if (stream.eatSpace()) return null;\n    curPunc = null;\n    var style = (state.tokenize || tokenBase)(stream, state);\n    if (style == \"comment\" || style == \"meta\") return style;\n    if (ctx.align == null) ctx.align = true;\n\n    if ((curPunc == \";\" || curPunc == \":\") && ctx.type == \"statement\") popContext(state);\n    else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n    else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n    else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n    else if (curPunc == \"}\") {\n      while (ctx.type == \"statement\") ctx = popContext(state);\n      if (ctx.type == \"}\") ctx = popContext(state);\n      while (ctx.type == \"statement\") ctx = popContext(state);\n    }\n    else if (curPunc == ctx.type) popContext(state);\n    else if (ctx.type == \"}\" || ctx.type == \"top\" || (ctx.type == \"statement\" && curPunc == \"newstatement\"))\n      pushContext(state, stream.column(), \"statement\");\n    state.startOfLine = false;\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    if (state.tokenize != tokenBase && state.tokenize != null) return 0;\n    var firstChar = textAfter && textAfter.charAt(0), ctx = state.context, closing = firstChar == ctx.type;\n    if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : cx.unit);\n    else if (ctx.align) return ctx.column + (closing ? 0 : 1);\n    else return ctx.indented + (closing ? 0 : cx.unit);\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*[{}]$/,\n    commentTokens: {line: \"--\"}\n  }\n}\n"],"names":["words","str","obj","split","i","length","allCaps","toUpperCase","firstCap","charAt","slice","metaHook","stream","eatWhile","curPunc","atoms","hooks","keywords","blockKeywords","isOperatorChar","tokenBase","state","ch","next","result","tokenize","escaped","end","test","eat","skipToEnd","cur","current","propertyIsEnumerable","toLowerCase","Context","indented","column","type","align","prev","pushContext","col","context","popContext","t","vhdl","name","startState","indentUnit","startOfLine","token","ctx","sol","indentation","eatSpace","style","indent","textAfter","cx","firstChar","closing","unit","languageData","indentOnInput","commentTokens","line"],"sourceRoot":""}