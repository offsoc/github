# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `ActionsUsageMetrics::Api::V1::GetRunnerTypeUsageResponse`.
# Please instead update this file by running `bin/tapioca dsl ActionsUsageMetrics::Api::V1::GetRunnerTypeUsageResponse`.

class ActionsUsageMetrics::Api::V1::GetRunnerTypeUsageResponse
  sig do
    params(
      date_range: T.nilable(T.any(Symbol, Integer)),
      end_time: T.nilable(Google::Protobuf::Timestamp),
      items: T.nilable(T.any(Google::Protobuf::RepeatedField[ActionsUsageMetrics::Api::V1::RunnerTypeUsageItem], T::Array[ActionsUsageMetrics::Api::V1::RunnerTypeUsageItem])),
      offset: T.nilable(Integer),
      start_time: T.nilable(Google::Protobuf::Timestamp),
      total_items: T.nilable(Integer)
    ).void
  end
  def initialize(date_range: nil, end_time: nil, items: T.unsafe(nil), offset: nil, start_time: nil, total_items: nil); end

  sig { void }
  def clear_date_range; end

  sig { void }
  def clear_end_time; end

  sig { void }
  def clear_items; end

  sig { void }
  def clear_offset; end

  sig { void }
  def clear_start_time; end

  sig { void }
  def clear_total_items; end

  sig { returns(T.any(Symbol, Integer)) }
  def date_range; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def date_range=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def end_time; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def end_time=(value); end

  sig { returns(Google::Protobuf::RepeatedField[ActionsUsageMetrics::Api::V1::RunnerTypeUsageItem]) }
  def items; end

  sig { params(value: Google::Protobuf::RepeatedField[ActionsUsageMetrics::Api::V1::RunnerTypeUsageItem]).void }
  def items=(value); end

  sig { returns(Integer) }
  def offset; end

  sig { params(value: Integer).void }
  def offset=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def start_time; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def start_time=(value); end

  sig { returns(Integer) }
  def total_items; end

  sig { params(value: Integer).void }
  def total_items=(value); end
end
