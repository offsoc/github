<% if show_multi_repo_enablement %>
  <multi-repo-enablement-coordinator>
    <table-item-selection
      data-all-for-filter-count="0" <%# populated async after page load %>
      data-action="selection-change:multi-repo-enablement-coordinator#handleRepoSelectionChange"
      data-target="multi-repo-enablement-coordinator.tableItemSelection"
    >
<% end %>

<%= render Primer::Beta::BorderBox.new(test_selector: TEST_SELECTOR) do |c| %>
  <% c.with_header(display: :flex, justify_content: :space_between, style: "height: 55px;") do %>

    <%= render(Primer::Box.new(display: :flex)) do %>
      <% if show_multi_repo_enablement %>
        <input
          aria-label="Select all visible repositories"
          class="mr-3 v-align-middle"
          data-action="click:table-item-selection#toggleSelectAllVisible"
          data-target="table-item-selection.selectAllVisibleCheckbox"
          type="checkbox"
          <%= test_selector(SELECT_ALL_CHECKBOX_TEST_SELECTOR) %>
        >
      <% end %>

      <%= render(Primer::Box.new(data: { target: "table-item-selection.noItemsSelectedOptions" })) do %>
        <%= render(Primer::Box.new(display: :flex, justify_content: :space_between, style: "gap:1em")) do %>
          <%= render(SecurityCenter::TableHeaderLinkComponent.new(
            icon: :repo,
            href: active_href,
            text: "Active",
            is_highlighted: active_highlighted?,
            js_slot_class: "js-table-active-count",
            test_selector: ACTIVE_LINK_SELECTOR,
          )) %>
          <%= render(SecurityCenter::TableHeaderLinkComponent.new(
            icon: :archive,
            href: archived_href,
            text: "Archived",
            is_highlighted: archived_highlighted?,
            js_slot_class: "js-table-archived-count",
            test_selector: ARCHIVED_LINK_SELECTOR,
          )) %>
        <% end %>
      <% end %>

      <%= render(Primer::Box.new(align_items: :center, data: { target: "table-item-selection.itemsSelectedOptions" }, display: :flex, hidden: true)) do %>
        <%= render(Primer::Beta::Text.new(mr: 3)) do %>
          <%= render(Primer::Beta::Text.new(data: { target: "table-item-selection.selectedCount" })) %> selected
        <% end %>

        <% if show_multi_repo_enablement %>
          <%= render(SecurityCenter::Coverage::Enablement::MultiRepoEnablementComponent.new(multi_repo_enablement_data)) %>
        <% end %>

        <%= render(
          Primer::Beta::Button.new(
            data: {
              action: "click:table-item-selection#selectAllForFilter",
              target: "table-item-selection.selectAllForFilterButton"
            },
            font_size: :small,
            hidden: true,
            scheme: :link
          )
        ) do %>
          <%= render(Primer::Beta::Text.new(classes: "js-table-total-count")) do %>
            Select all repositories
          <% end %>
        <% end %>

        <%= render(
          Primer::Beta::Button.new(
            data: {
              action: "click:table-item-selection#reset",
              target: "table-item-selection.resetButton"
            },
            font_size: :small,
            hidden: true,
            scheme: :link
          )
        ) { "Clear selection" }
        %>
      <% end %>
    <% end %>

    <%= render Primer::Box.new(test_selector: "coverage-action-menus") do %>
      <% action_menus.each do |action_menu| %>
        <%= action_menu %>
      <% end %>
      <% menus.each do |menu| %>
        <%= menu %>
      <% end %>
    <% end%>
  <% end %>

  <% if render_blankslate? %>

    <% c.with_body do %>
      <%= blankslate %>
    <% end %>

  <% else %>
    <% list_data.each do |list_item_data| %>
      <% c.with_row(
        display: :flex,
        style: "gap: 1em;",
        test_selector: ROW_TEST_SELECTOR,
      ) do %>
        <% if show_multi_repo_enablement %>
          <%= render(Primer::Box.new) do %>
            <input
              aria-label="<%= list_item_data.repo_metadata.name %>"
              class="v-align-middle"
              data-action="click:table-item-selection#toggleVisibleItem"
              data-targets="table-item-selection.visibleItemCheckboxes"
              type="checkbox"
              value="<%= list_item_data.repo_metadata.id %>"
              <%= test_selector(ROW_CHECKBOX_TEST_SELECTOR) %>
            >
          <% end %>
        <% end %>

        <%= render Primer::Box.new(flex: 1, display: :flex, flex_wrap: :wrap, style: "gap: 1em;") do %>
          <% col = [5, 12 - (list_item_data.repo_coverages_list.size * 3)].max %>
          <%= render Primer::Box.new(style: "flex: #{col} 1;") do %>
            <%= render SecurityCenter::Coverage::RepositoryMetadataComponent.new(list_item_data.repo_metadata) %>
          <% end %>

          <% col = [7, list_item_data.repo_coverages_list.size * 3].min %>
          <%= render Primer::Box.new(
            style: "flex: #{col} 1; gap: 1em;",
            display: :flex,
            flex_wrap: :wrap,
            justify_content: :space_between
          ) do %>
            <% list_item_data.repo_coverages_list.each do |repo_coverages| %>
              <%= render Primer::Box.new(flex: 1) do %>
                <%= render SecurityCenter::Coverage::RepositoryCoveragesComponent.new(list_item_data.repo_metadata.id, repo_coverages, list_item_data.owner) %>
              <% end %>
            <% end %>
          <% end %>
        <% end %>

        <% if show_enablement %>
          <%= render Primer::Box.new(style: "min-width: min-content;") do %>
            <%= render SecurityCenter::Coverage::EnablementDialogComponent.new(
              SecurityCenter::Coverage::EnablementDialogComponent::Data.new(
                repo_id: list_item_data.repo_metadata.id,
                repo_name: list_item_data.repo_metadata.name,
                repo_visibility: list_item_data.repo_metadata.visibility,
                risk_url: list_item_data.risk_url,
                turbo_frame_src: list_item_data.turbo_frame_src,
                is_advisory_workspace: list_item_data.repo_metadata.is_advisory_workspace,
              )
            ) %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>

  <% end %>
<% end %>

<% if show_multi_repo_enablement %>
    </table-item-selection>
  </multi-repo-enablement-coordinator>
<% end %>

<%= render Primer::Box.new(classes: "paginate-container") do %>
  <%= render_react_partial(
    name: "security-center-pagination",
    props: {
      currentPage: current_page,
      pageCountsUrl: async_counts_href,
    },
    ssr: false
  ) %>
<% end %>
