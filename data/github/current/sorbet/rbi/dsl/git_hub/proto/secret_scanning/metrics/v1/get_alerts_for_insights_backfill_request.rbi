# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Proto::SecretScanning::Metrics::V1::GetAlertsForInsightsBackfillRequest`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Proto::SecretScanning::Metrics::V1::GetAlertsForInsightsBackfillRequest`.

class GitHub::Proto::SecretScanning::Metrics::V1::GetAlertsForInsightsBackfillRequest
  sig do
    params(
      include_low_confidence: T.nilable(T::Boolean),
      next_cursor: T.nilable(String),
      repo_selector: T.nilable(GitHub::Proto::SecretScanning::Metrics::V1::RepoSelector),
      updated_after: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(include_low_confidence: nil, next_cursor: nil, repo_selector: nil, updated_after: nil); end

  sig { void }
  def clear_include_low_confidence; end

  sig { void }
  def clear_next_cursor; end

  sig { void }
  def clear_repo_selector; end

  sig { void }
  def clear_updated_after; end

  sig { returns(T::Boolean) }
  def include_low_confidence; end

  sig { params(value: T::Boolean).void }
  def include_low_confidence=(value); end

  sig { returns(String) }
  def next_cursor; end

  sig { params(value: String).void }
  def next_cursor=(value); end

  sig { returns(T.nilable(GitHub::Proto::SecretScanning::Metrics::V1::RepoSelector)) }
  def repo_selector; end

  sig { params(value: T.nilable(GitHub::Proto::SecretScanning::Metrics::V1::RepoSelector)).void }
  def repo_selector=(value); end

  sig { returns(T.nilable(Symbol)) }
  def selector; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_after; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_after=(value); end
end
