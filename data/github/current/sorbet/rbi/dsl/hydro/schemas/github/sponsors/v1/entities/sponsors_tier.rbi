# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsTier`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsTier`.

class Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsTier
  sig do
    params(
      current_state: T.nilable(T.any(Symbol, Integer)),
      frequency: T.nilable(T.any(Symbol, Integer)),
      has_welcome_message: T.nilable(T::Boolean),
      id: T.nilable(Integer),
      monthly_price_in_cents: T.nilable(Integer),
      repository_id: T.nilable(Integer)
    ).void
  end
  def initialize(current_state: nil, frequency: nil, has_welcome_message: nil, id: nil, monthly_price_in_cents: nil, repository_id: nil); end

  sig { void }
  def clear_current_state; end

  sig { void }
  def clear_frequency; end

  sig { void }
  def clear_has_welcome_message; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_monthly_price_in_cents; end

  sig { void }
  def clear_repository_id; end

  sig { returns(T.any(Symbol, Integer)) }
  def current_state; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def current_state=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def frequency; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def frequency=(value); end

  sig { returns(T::Boolean) }
  def has_welcome_message; end

  sig { params(value: T::Boolean).void }
  def has_welcome_message=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(Integer) }
  def monthly_price_in_cents; end

  sig { params(value: Integer).void }
  def monthly_price_in_cents=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end
end
