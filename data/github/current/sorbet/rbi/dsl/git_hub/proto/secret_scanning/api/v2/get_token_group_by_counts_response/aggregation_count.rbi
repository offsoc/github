# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Proto::SecretScanning::Api::V2::GetTokenGroupByCountsResponse::AggregationCount`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Proto::SecretScanning::Api::V2::GetTokenGroupByCountsResponse::AggregationCount`.

class GitHub::Proto::SecretScanning::Api::V2::GetTokenGroupByCountsResponse::AggregationCount
  sig do
    params(
      provider_aggregation: T.nilable(GitHub::Proto::SecretScanning::Api::V2::GetTokenGroupByCountsResponse::AggregationCount::ProviderTokenCountAggregation),
      repo_aggregation: T.nilable(GitHub::Proto::SecretScanning::Api::V2::GetTokenGroupByCountsResponse::AggregationCount::RepoTokenCountAggregation),
      type_aggregation: T.nilable(GitHub::Proto::SecretScanning::Api::V2::GetTokenGroupByCountsResponse::AggregationCount::SecretTypeTokenCountAggregation)
    ).void
  end
  def initialize(provider_aggregation: nil, repo_aggregation: nil, type_aggregation: nil); end

  sig { returns(T.nilable(Symbol)) }
  def aggregation; end

  sig { void }
  def clear_provider_aggregation; end

  sig { void }
  def clear_repo_aggregation; end

  sig { void }
  def clear_type_aggregation; end

  sig do
    returns(T.nilable(GitHub::Proto::SecretScanning::Api::V2::GetTokenGroupByCountsResponse::AggregationCount::ProviderTokenCountAggregation))
  end
  def provider_aggregation; end

  sig do
    params(
      value: T.nilable(GitHub::Proto::SecretScanning::Api::V2::GetTokenGroupByCountsResponse::AggregationCount::ProviderTokenCountAggregation)
    ).void
  end
  def provider_aggregation=(value); end

  sig do
    returns(T.nilable(GitHub::Proto::SecretScanning::Api::V2::GetTokenGroupByCountsResponse::AggregationCount::RepoTokenCountAggregation))
  end
  def repo_aggregation; end

  sig do
    params(
      value: T.nilable(GitHub::Proto::SecretScanning::Api::V2::GetTokenGroupByCountsResponse::AggregationCount::RepoTokenCountAggregation)
    ).void
  end
  def repo_aggregation=(value); end

  sig do
    returns(T.nilable(GitHub::Proto::SecretScanning::Api::V2::GetTokenGroupByCountsResponse::AggregationCount::SecretTypeTokenCountAggregation))
  end
  def type_aggregation; end

  sig do
    params(
      value: T.nilable(GitHub::Proto::SecretScanning::Api::V2::GetTokenGroupByCountsResponse::AggregationCount::SecretTypeTokenCountAggregation)
    ).void
  end
  def type_aggregation=(value); end
end
