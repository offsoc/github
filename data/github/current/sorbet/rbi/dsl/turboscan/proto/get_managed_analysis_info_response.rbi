# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Turboscan::Proto::GetManagedAnalysisInfoResponse`.
# Please instead update this file by running `bin/tapioca dsl Turboscan::Proto::GetManagedAnalysisInfoResponse`.

class Turboscan::Proto::GetManagedAnalysisInfoResponse
  sig do
    params(
      active_repo: T.nilable(T::Boolean),
      current_config: T.nilable(Turboscan::Proto::CodeQLConfig),
      debuggable_config: T.nilable(Turboscan::Proto::CodeQLConfig),
      debuggable_workflow_run_id: T.nilable(Integer),
      error: T.nilable(String),
      has_failed_update: T.nilable(T::Boolean),
      next_scheduled_run_at: T.nilable(Google::Protobuf::Timestamp),
      query_suite: T.nilable(T.any(Symbol, Integer)),
      status_v2: T.nilable(T.any(Symbol, Integer)),
      threat_model: T.nilable(T.any(Symbol, Integer)),
      workflow: T.nilable(String)
    ).void
  end
  def initialize(active_repo: nil, current_config: nil, debuggable_config: nil, debuggable_workflow_run_id: nil, error: nil, has_failed_update: nil, next_scheduled_run_at: nil, query_suite: nil, status_v2: nil, threat_model: nil, workflow: nil); end

  sig { returns(T::Boolean) }
  def active_repo; end

  sig { params(value: T::Boolean).void }
  def active_repo=(value); end

  sig { void }
  def clear_active_repo; end

  sig { void }
  def clear_current_config; end

  sig { void }
  def clear_debuggable_config; end

  sig { void }
  def clear_debuggable_workflow_run_id; end

  sig { void }
  def clear_error; end

  sig { void }
  def clear_has_failed_update; end

  sig { void }
  def clear_next_scheduled_run_at; end

  sig { void }
  def clear_query_suite; end

  sig { void }
  def clear_status_v2; end

  sig { void }
  def clear_threat_model; end

  sig { void }
  def clear_workflow; end

  sig { returns(T.nilable(Turboscan::Proto::CodeQLConfig)) }
  def current_config; end

  sig { params(value: T.nilable(Turboscan::Proto::CodeQLConfig)).void }
  def current_config=(value); end

  sig { returns(T.nilable(Turboscan::Proto::CodeQLConfig)) }
  def debuggable_config; end

  sig { params(value: T.nilable(Turboscan::Proto::CodeQLConfig)).void }
  def debuggable_config=(value); end

  sig { returns(Integer) }
  def debuggable_workflow_run_id; end

  sig { params(value: Integer).void }
  def debuggable_workflow_run_id=(value); end

  sig { returns(String) }
  def error; end

  sig { params(value: String).void }
  def error=(value); end

  sig { returns(T::Boolean) }
  def has_failed_update; end

  sig { params(value: T::Boolean).void }
  def has_failed_update=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def next_scheduled_run_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def next_scheduled_run_at=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def query_suite; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def query_suite=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def status_v2; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def status_v2=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def threat_model; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def threat_model=(value); end

  sig { returns(String) }
  def workflow; end

  sig { params(value: String).void }
  def workflow=(value); end
end
