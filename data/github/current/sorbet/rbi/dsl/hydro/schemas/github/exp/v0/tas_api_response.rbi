# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Exp::V0::TasApiResponse`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Exp::V0::TasApiResponse`.

class Hydro::Schemas::Github::Exp::V0::TasApiResponse
  sig do
    params(
      assignment_context: T.nilable(String),
      assignment_surface: T.nilable(String),
      called: T.nilable(Google::Protobuf::Timestamp),
      current_experiments: T.nilable(String),
      namespace: T.nilable(String),
      randomization_id: T.nilable(String),
      randomization_unit: T.nilable(T.any(Symbol, Integer)),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)
    ).void
  end
  def initialize(assignment_context: nil, assignment_surface: nil, called: nil, current_experiments: nil, namespace: nil, randomization_id: nil, randomization_unit: nil, request_context: nil); end

  sig { returns(String) }
  def assignment_context; end

  sig { params(value: String).void }
  def assignment_context=(value); end

  sig { returns(String) }
  def assignment_surface; end

  sig { params(value: String).void }
  def assignment_surface=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def called; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def called=(value); end

  sig { void }
  def clear_assignment_context; end

  sig { void }
  def clear_assignment_surface; end

  sig { void }
  def clear_called; end

  sig { void }
  def clear_current_experiments; end

  sig { void }
  def clear_namespace; end

  sig { void }
  def clear_randomization_id; end

  sig { void }
  def clear_randomization_unit; end

  sig { void }
  def clear_request_context; end

  sig { returns(String) }
  def current_experiments; end

  sig { params(value: String).void }
  def current_experiments=(value); end

  sig { returns(String) }
  def namespace; end

  sig { params(value: String).void }
  def namespace=(value); end

  sig { returns(String) }
  def randomization_id; end

  sig { params(value: String).void }
  def randomization_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def randomization_unit; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def randomization_unit=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end
end
