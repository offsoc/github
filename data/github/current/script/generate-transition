#!/usr/bin/env ruby
# frozen_string_literal: true
#
#/ Usage: generate-transition <name>
#/
#/ This generates a transition file with some content
#/ as well as a test file.

require "optparse"

parser = OptionParser.new do |opts|
  opts.banner = "Usage: #{$0} name [options]"
end

parser.parse!

unless (name = ARGV.shift)
  abort parser.help
end

require_relative "../config/boot"
require "active_support/all"
require "erb"
require "fileutils"

now = Time.now.utc.strftime "%Y%m%d%H%M%S"
transition_file = "lib/github/transitions/#{now}_#{name.underscore}.rb"
test_file = "test/lib/github/transitions/#{now}_#{name.underscore}_test.rb"
file_without_lib_or_extension = transition_file.gsub(/(^lib\/|\.rb$)/, "")
class_name = name.underscore.camelize

FileUtils.mkdir_p File.dirname transition_file
FileUtils.mkdir_p File.dirname test_file

def render_template(template_filename, output_filename, binding)
  if File.exist? output_filename
    abort "#$0: exists: #{output_filename}"
  end

  template = File.read(template_filename)
  File.open(output_filename, "wb") do |f|
    erb = ERB.new(template, trim_mode: "-")
    erb.filename = output_filename
    f.write erb.result binding
  end
  puts output_filename
end

render_template "lib/github/transitions/templates/transition_template.rb.erb", transition_file, binding
render_template "lib/github/transitions/templates/transition_test_template.rb.erb", test_file, binding
