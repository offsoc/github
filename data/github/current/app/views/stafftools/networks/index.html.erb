<%# erblint:counter DeprecatedComponentsCounter 6 %>
<%# rubocop:disable Lint/InstanceVariable %>

<% page_info title: "Repository networks" %>

<%= render layout: "stafftools/stafftools" do %>
  <%= render(Primer::Beta::Subhead.new(hide_border: true)) do |component| %>
    <% component.with_heading(tag: :h2) do %>
      Repository networks
    <% end %>
    <% component.with_actions do %>
      <details class="details-reset details-overlay position-relative d-inline-block">
        <%= render(Primer::ButtonComponent.new(tag: :summary, classes: "select-menu-button")) do |_| %>
          <span data-menu-button><%= @show_status.tr('_', ' ').titleize %></span>
        <% end %>
        <details-menu class="select-menu-modal position-absolute right-0" style="z-index: 99"><%# erblint:disable Primer::Accessibility::DetailsMenuMigration %>
          <div class="select-menu-header">
            <span class="select-menu-title">Maintenance status</span>
          </div>

          <div class="select-menu-list">
            <% @status_names.each do |label| %>
              <a href="<%= stafftools_networks_path(:maintenance_status => label) %>" class="select-menu-item" role="menuitemradio" aria-checked="<%= @show_status == label %>" data-pjax>
                <%= primer_octicon(:check, classes: "select-menu-item-icon") %>
                <div class="select-menu-item-text" data-menu-button-text><%= label.tr('_', ' ').titleize %></div>
              </a>
            <% end %>
          </div>
        </details-menu>
      </details>

      <% if @show_status == "failed" && @networks.any? %>
        <%= render GitHub::DialogComponent.new(
          title: "Schedule maintenance for failed networks",
          details_classes: "position-relative d-inline-block") do |dialog| %><%# erblint:disable A11yDetailsDialogMigration %>
          <% dialog.with_summary do %>
            <%= render(Primer::ButtonComponent.new(tag: :summary)) do |_| %>
              Schedule maintenance for all
            <% end %>
          <% end %>
          <% dialog.with_body do %>
            <p>
              Are you sure that you want to schedule maintenance for
              <%= pluralize(@networks.size, "failed network") %>?
            </p>
          <% end %>
          <% dialog.with_footer do %>
            <%= form_tag schedule_maintenance_for_failed_stafftools_networks_path do %>
              <%= render(Primer::ButtonComponent.new(type: :submit, block: :true)) do |_| %>
                Schedule maintenance for <%= pluralize(@networks.size, "network") %>
              <% end %>
            <% end %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>

  <% if @networks.any? %>
    <%= render(Primer::Beta::BorderBox.new) do |component| %>
      <% @networks.each do |network| %>
        <% root = network.root %>

        <% component.with_row do %>
          <% if root&.owner %>
            <div class="float-right">
              <%= form_tag schedule_maintenance_stafftools_repository_network_path(root.owner, root), class: "inline-form" do %>
                <%= render(Primer::ButtonComponent.new(type: :submit, ml: 1)) do |_| %>
                  Schedule maintenance
                <% end %>
              <% end %>

              <% if stafftools_action_authorized?(controller: Stafftools::NetworksController, action: :mark_as_broken) %>
                <%= form_tag mark_as_broken_stafftools_repository_network_path(root.owner, root), class: "inline-form" do %>
                  <%= render(Primer::ButtonComponent.new(
                    type: :submit, scheme: :danger, ml: 1,
                    data: { confirm: "Are you sure? The repository will be disabled for end users." }
                  )) do |_| %>
                    Mark as broken
                  <% end %>
                <% end %>
              <% end %>
            </div>
          <% end %>

          <p>
            <%= primer_octicon(:"repo-forked") %>
            <strong>
              <% if root %>
                <%= link_to network.name, gh_stafftools_repository_path(root), "data-pjax" => true %>
              <% else %>
                <%= render(Primer::Beta::Octicon.new(icon: "alert")) %> No root repository for network (<%= network.id.to_s %>)
              <% end %>
            </strong>
          </p>

          <p>
            Last maintenance: <%= network.last_maintenance_at || 'never' %>
          </p>
        <% end %>

      <% end %>
    <% end %>
  <% else %>
    <%= render Primer::BlankslateComponent.new(title: "No networks found") do %>
      No repository networks found with maintenance status <strong><%= @show_status.tr("_", " ").titleize %></strong>.
    <% end %>
  <% end %>

  <div class="paginate-container">
	 <%= will_paginate(@networks, 'data-pjax' => true) %>
  </div>
<% end %>
