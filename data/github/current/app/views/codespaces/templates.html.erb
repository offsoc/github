<% page_info title: "Codespace templates", stafftools: stafftools_user_codespaces_path(current_user) %>

<%= render(Primer::Alpha::Layout.new(p: 4)) do |component| %>
  <%= component.with_main do %>
    <% if query.at_limit? %>
      <%= render(Primer::Alpha::Banner.new) { "Limit of #{Codespaces::Policy.codespaces_limit(current_user)} codespaces reached. Remove an existing codespace to create a new one." } %>
    <% end %>

    <% if at_concurrency_limit %>
      <concurrency-limit>
        <template id="concurrency-error">
          <%= render Codespaces::CreateConcurrencyErrorComponent.new(link_to_index: false) %>
        </template>
      </concurrency-limit>
    <% end %>

    <% if templates.present? %>
        <h1 class="mb-1" >Choose a template</h1>
        <p class="text-light color-fg-subtle mb-4">Start a codespace from a template and get to developing with the power of a virtual machine in the cloud.</p>
        <codespace-zero-config data-hpc>
            <% if user_feature_enabled?(:codespaces_developer) %>
              <div class="my-5 Box Box--condensed">
                <div class="Box-header d-flex flex-justify-between flex-items-center">
                  <h5>Codespaces developer settings</h5>
                </div>
                <%= render Primer::Box.new(bg: :subtle, px: 3, py: 3, border: :bottom, border_color: :subtle) do %>
                  <%= render Primer::Box.new(bg: :subtle, display: :flex, justify_content: :space_between) do %>
                    <%= render Primer::Box.new(bg: :subtle) do %>
                      <%= render Primer::Beta::Text.new(tag: :div, font_weight: :bold).with_content("VSCS target") %>
                      <%= render Primer::Beta::Text.new(tag: :div, color: :muted, font_size: :small).with_content("Employee only") %>
                    <% end %>

                    <select class="form-select mt-1 color-bg-subtle"
                      aria-label="VSCS target"
                      data-target="codespace-zero-config.vscsTarget"
                      data-action="change:codespace-zero-config#updateVscsTargets">
                      <% vscs_target_configs.each do |config| %>
                        <option value="<%= config[:name] %>"><%= config[:display_name] %></option>
                      <% end %>
                    </select>
                  <% end %>
                <% end %>
                <%= render Primer::Box.new(bg: :subtle, px: 3, py: 3, border: :bottom, border_color: :subtle) do %>
                  <%= render Primer::Box.new(bg: :subtle, display: :flex, justify_content: :space_between) do %>
                    <%= render Primer::Box.new(bg: :subtle) do %>
                      <%= render Primer::Beta::Text.new(tag: :div, font_weight: :bold).with_content("VSCS devstamp URL") %>
                      <%= render Primer::Beta::Text.new(tag: :div, color: :muted, font_size: :small).with_content("Employee only") %>
                    <% end %>
                    <%= render Primer::Box.new do %>
                      <input type="url"
                        data-target="codespace-zero-config.vscsTargetUrl"
                        data-action="change:codespace-zero-config#updateVscsTargetUrls"
                        class="form-control mt-1"
                        placeholder="Optional, for local target"
                        disabled>
                    <% end %>
                  <% end %>
                <% end %>
                <%= render Primer::Box.new(bg: :subtle, px: 3, py: 3, border: :bottom, border_color: :subtle, border_radius: 1) do %>
                  <%= render Primer::Box.new(bg: :subtle, display: :flex, justify_content: :space_between) do %>
                    <%= render Primer::Box.new(bg: :subtle) do %>
                      <%= render Primer::Beta::Text.new(tag: :div, font_weight: :bold).with_content("Region") %>
                      <%= render Primer::Beta::Text.new(
                        tag: :div,
                        color: :muted,
                        font_size: :small
                      ).with_content("Your codespace will run in the selected region") %>
                    <% end %>
                    <% region_config.each do |vscs_target, regions| %>
                      <select class="form-select mt-1 color-bg-subtle"
                        aria-label="Location"
                        data-targets="codespace-zero-config.locationConfigs"
                        data-action="change:codespace-zero-config#updateLocations"
                        data-vscs-target="<%= vscs_target %>"
                        <%= vscs_target != "production" ? "hidden" : "" %>>
                        <% regions.each do |region| %>
                          <option value="<%= region[:name] %>"><%= region[:display_name] %></option>
                        <% end %>
                      </select>
                    <% end %>
                  <% end %>
                <% end %>
              </div>
            <% end %>
            <ol class="d-flex flex-wrap list-style-none gutter-condensed">
              <% templates.each do |template_key, template| %>
                <li
                  class="<%= class_names(
                    "mb-3 d-flex flex-content-stretch",
                    "col-12 col-lg-3" => responsive?,
                    "col-4" => !responsive?,
                  ) %>"
                >
                  <%= render(Codespaces::UseTemplateComponent.new(template:)) do |c| %>
                    <% c.with_form_content do %>
                      <% if user_feature_enabled?(:codespaces_developer) %>
                        <input type="hidden" name="codespace[vscs_target]" data-targets="codespace-zero-config.vscsTargets" value="production">
                        <input type="hidden" name="codespace[vscs_target_url]" data-targets="codespace-zero-config.vscsTargetUrls">
                        <input type="hidden" name="codespace[location]" data-targets="codespace-zero-config.locations">
                      <% end %>
                    <% end %>
                  <% end %>
                </li>
              <% end %>
            </ol>
        </codespace-zero-config>
    <% end %>
  <% end %>

  <% component.with_sidebar(p: 2) do %>
    <%= render Codespaces::NavListComponent.new(query: query, selected_item_id: :templates) %>
  <% end %>
<% end %>
