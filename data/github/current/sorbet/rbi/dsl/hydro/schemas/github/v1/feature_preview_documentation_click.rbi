# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::FeaturePreviewDocumentationClick`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::FeaturePreviewDocumentationClick`.

class Hydro::Schemas::Github::V1::FeaturePreviewDocumentationClick
  sig do
    params(
      documentation_link: T.nilable(String),
      feature: T.nilable(Hydro::Schemas::Github::V1::Entities::Feature),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext),
      user: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(documentation_link: nil, feature: nil, request_context: nil, user: nil); end

  sig { void }
  def clear_documentation_link; end

  sig { void }
  def clear_feature; end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_user; end

  sig { returns(String) }
  def documentation_link; end

  sig { params(value: String).void }
  def documentation_link=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Feature)) }
  def feature; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Feature)).void }
  def feature=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def user; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def user=(value); end
end
