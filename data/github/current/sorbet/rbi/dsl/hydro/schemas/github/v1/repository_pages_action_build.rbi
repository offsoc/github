# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::RepositoryPagesActionBuild`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::RepositoryPagesActionBuild`.

class Hydro::Schemas::Github::V1::RepositoryPagesActionBuild
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      aqueduct_message: T.nilable(String),
      artifact_hash: T.nilable(String),
      page: T.nilable(Hydro::Schemas::Github::V1::Entities::RepositoryPage),
      repository_owner: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(actor: nil, aqueduct_message: nil, artifact_hash: nil, page: nil, repository_owner: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { returns(String) }
  def aqueduct_message; end

  sig { params(value: String).void }
  def aqueduct_message=(value); end

  sig { returns(String) }
  def artifact_hash; end

  sig { params(value: String).void }
  def artifact_hash=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_aqueduct_message; end

  sig { void }
  def clear_artifact_hash; end

  sig { void }
  def clear_page; end

  sig { void }
  def clear_repository_owner; end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RepositoryPage)) }
  def page; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RepositoryPage)).void }
  def page=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def repository_owner; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def repository_owner=(value); end
end
