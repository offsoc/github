# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::CheckRunStatusChange`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::CheckRunStatusChange`.

class Hydro::Schemas::Github::V1::CheckRunStatusChange
  sig do
    params(
      check_run_id: T.nilable(Integer),
      current_conclusion: T.nilable(T.any(Symbol, Integer)),
      current_status: T.nilable(T.any(Symbol, Integer)),
      previous_conclusion: T.nilable(T.any(Symbol, Integer)),
      previous_status: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(check_run_id: nil, current_conclusion: nil, current_status: nil, previous_conclusion: nil, previous_status: nil); end

  sig { returns(Integer) }
  def check_run_id; end

  sig { params(value: Integer).void }
  def check_run_id=(value); end

  sig { void }
  def clear_check_run_id; end

  sig { void }
  def clear_current_conclusion; end

  sig { void }
  def clear_current_status; end

  sig { void }
  def clear_previous_conclusion; end

  sig { void }
  def clear_previous_status; end

  sig { returns(T.any(Symbol, Integer)) }
  def current_conclusion; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def current_conclusion=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def current_status; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def current_status=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def previous_conclusion; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def previous_conclusion=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def previous_status; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def previous_status=(value); end
end
