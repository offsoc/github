{"version":3,"file":"chunk-node_modules_codemirror_legacy-modes_mode_brainfuck_js-xxxxxxxxxxxx.js","mappings":"oLAAA,IAAIA,EAAU,WAAWC,KAAK,CAAC,IAcxB,IAAMC,EAAY,CACvBC,KAAM,YACNC,WAAY,WACV,MAAO,CACLC,YAAa,GACbC,KAAM,EACNC,MAAO,EACPC,YAAa,EACf,CACF,EACAC,MAAO,SAASC,CAAM,CAAEC,CAAK,EAC3B,GAAID,EAAOE,QAAQ,GAAI,OAAO,KAC3BF,EAAOG,GAAG,IACXF,CAAAA,EAAMN,WAAW,CAAG,EAAI,EAE1B,IAAIS,EAAKJ,EAAOK,IAAI,GAAGC,QAAQ,UAC/B,KAAGhB,EAAQiB,OAAO,CAACH,IA2BjBH,EAAMN,WAAW,CAAG,GACjBK,EAAOQ,GAAG,IACXP,CAAAA,EAAMN,WAAW,CAAG,EAAI,EAEnB,WA9BJM,CAAsB,IAAtBA,EAAMN,WAAW,EACfK,EAAOQ,GAAG,IACXP,CAAAA,EAAMN,WAAW,CAAG,EAAI,EAEnB,WAENS,MAAAA,GAAcA,MAAAA,GACZA,MAAAA,EACDH,EAAML,IAAI,GAGVK,EAAMJ,KAAK,GAEN,WAEDO,MAAAA,GAAcA,MAAAA,EACb,UAEDA,MAAAA,GAAcA,MAAAA,EACb,OAEDA,MAAAA,GAAcA,MAAAA,EACb,WAURJ,EAAOQ,GAAG,IACXP,CAAAA,EAAMN,WAAW,CAAG,EAAI,EAE5B,CACF,C","sources":["node_modules/@codemirror/legacy-modes/mode/brainfuck.js"],"sourcesContent":["var reserve = \"><+-.,[]\".split(\"\");\n/*\n  comments can be either:\n  placed behind lines\n\n  +++    this is a comment\n\n  where reserved characters cannot be used\n  or in a loop\n  [\n  this is ok to use [ ] and stuff\n  ]\n  or preceded by #\n*/\nexport const brainfuck = {\n  name: \"brainfuck\",\n  startState: function() {\n    return {\n      commentLine: false,\n      left: 0,\n      right: 0,\n      commentLoop: false\n    }\n  },\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null\n    if(stream.sol()){\n      state.commentLine = false;\n    }\n    var ch = stream.next().toString();\n    if(reserve.indexOf(ch) !== -1){\n      if(state.commentLine === true){\n        if(stream.eol()){\n          state.commentLine = false;\n        }\n        return \"comment\";\n      }\n      if(ch === \"]\" || ch === \"[\"){\n        if(ch === \"[\"){\n          state.left++;\n        }\n        else{\n          state.right++;\n        }\n        return \"bracket\";\n      }\n      else if(ch === \"+\" || ch === \"-\"){\n        return \"keyword\";\n      }\n      else if(ch === \"<\" || ch === \">\"){\n        return \"atom\";\n      }\n      else if(ch === \".\" || ch === \",\"){\n        return \"def\";\n      }\n    }\n    else{\n      state.commentLine = true;\n      if(stream.eol()){\n        state.commentLine = false;\n      }\n      return \"comment\";\n    }\n    if(stream.eol()){\n      state.commentLine = false;\n    }\n  }\n};\n"],"names":["reserve","split","brainfuck","name","startState","commentLine","left","right","commentLoop","token","stream","state","eatSpace","sol","ch","next","toString","indexOf","eol"],"sourceRoot":""}