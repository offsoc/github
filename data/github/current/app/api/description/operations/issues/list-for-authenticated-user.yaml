---
summary: List user account issues assigned to the authenticated user
description: |-
  List issues across owned and member repositories assigned to the authenticated user.

  > [!NOTE]
  > GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull request id, use the "[List pull requests](${externalDocsUrl}/rest/pulls/pulls#list-pull-requests)" endpoint.

  This endpoint supports the following custom media types. For more information, see "[Media types](${externalDocsUrl}/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."

  - **`application/vnd.github.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.
  - **`application/vnd.github.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.
  - **`application/vnd.github.html+json`**: Returns HTML rendered from the body's markdown. Response will include `body_html`.
  - **`application/vnd.github.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.
tags:
  - issues
operationId: issues/list-for-authenticated-user
externalDocs:
  description: API method documentation
  url: '${externalDocsUrl}/rest/issues/issues#list-user-account-issues-assigned-to-the-authenticated-user'
parameters:
  - name: filter
    description: "Indicates which sorts of issues to return. `assigned` means
      issues assigned to you. `created` means issues created by you. `mentioned` means
      issues mentioning you. `subscribed` means issues you're subscribed to updates
      for. `all` or `repos` means all issues you can see, regardless of participation
      or creation."
    in: query
    required: false
    schema:
      type: string
      enum:
        - assigned
        - created
        - mentioned
        - subscribed
        - repos
        - all
      default: assigned
  - name: state
    description: Indicates the state of the issues to return.
    in: query
    required: false
    schema:
      type: string
      enum:
        - open
        - closed
        - all
      default: open
  - $ref: '../../components/parameters/labels.yaml'
  - name: sort
    description: What to sort results by.
    in: query
    required: false
    schema:
      type: string
      enum:
        - created
        - updated
        - comments
      default: created
  - $ref: '../../components/parameters/direction.yaml'
  - $ref: '../../components/parameters/since.yaml'
  - $ref: '../../components/parameters/per-page.yaml'
  - $ref: '../../components/parameters/page.yaml'
responses:
  '200':
    description: Response
    content:
      application/json:
        schema:
          type: array
          items:
            $ref: '../../components/schemas/issue.yaml'
        examples:
          default:
            $ref: '../../components/examples/issue-with-repo-items.yaml'
    headers:
      Link:
        $ref: '../../components/headers/link.yaml'
  '404':
    $ref: '../../components/responses/not_found.yaml'
  '304':
    $ref: '../../components/responses/not_modified.yaml'
x-github-releases:
  - ghec
  - ghes: '>= 2.18'
  - api.github.com
x-github:
  githubCloudOnly: false
  enabledForGitHubApps: false
  category: issues
  subcategory: issues
x-github-internal:
  path: '/user/issues'
  http-method: get
  service-tier: 1
  owner: '@github/issues'
  published: true
x-githubEnterpriseOverlays:
  '<= 3.2':
    x-github:
      previews:
        - $ref: '../../components/x-previews/machine-man-app.yaml'
          required: false
        - $ref: '../../components/x-previews/squirrel-girl.yaml'
          required: false
