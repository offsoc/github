# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Octoshift::Imports::V1::CreateAssetStoragePolicyRequest`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Octoshift::Imports::V1::CreateAssetStoragePolicyRequest`.

class MonolithTwirp::Octoshift::Imports::V1::CreateAssetStoragePolicyRequest
  sig do
    params(
      actor_id: T.nilable(Integer),
      asset_type: T.nilable(T.any(Symbol, Integer)),
      content_type: T.nilable(String),
      label: T.nilable(String),
      name: T.nilable(String),
      release_id: T.nilable(Integer),
      repository_id: T.nilable(Integer),
      size: T.nilable(Integer)
    ).void
  end
  def initialize(actor_id: nil, asset_type: nil, content_type: nil, label: nil, name: nil, release_id: nil, repository_id: nil, size: nil); end

  sig { returns(Integer) }
  def actor_id; end

  sig { params(value: Integer).void }
  def actor_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def asset_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def asset_type=(value); end

  sig { void }
  def clear_actor_id; end

  sig { void }
  def clear_asset_type; end

  sig { void }
  def clear_content_type; end

  sig { void }
  def clear_label; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_release_id; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_size; end

  sig { returns(String) }
  def content_type; end

  sig { params(value: String).void }
  def content_type=(value); end

  sig { returns(String) }
  def label; end

  sig { params(value: String).void }
  def label=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(Integer) }
  def release_id; end

  sig { params(value: Integer).void }
  def release_id=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end

  sig { returns(Integer) }
  def size; end

  sig { params(value: Integer).void }
  def size=(value); end
end
