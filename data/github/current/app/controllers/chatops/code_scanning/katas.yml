# These are ops katas for Code scanning team, you can run them with `.code_scanning kata` Hubot command.
# Do you have one in mind? Feel free to add it here!
task_repo_turboscan:
  name: Repo id of turboscan
  description: Get the id of `github/turboscan` repo
  solution: 228446948
  hint: Use hubot command `.repos id github/turboscan`
task_repo_github:
  name: Repo id of github
  description: Get the id of `github/github` repo
  solution: 3
  hint: Use hubot command `.repos id github/github`
stale_checkruns:
  name: Stale checkruns
  description: Check if there are stale checkruns
  solution: >
    SHH to a shell, enter the console with `gh console`, and run the command
    from https://ops.githubapp.com/docs/playbooks/github/code-scanning/playbooks/dotcom/stale-checkruns.md
  hint: Check out the Stale checkruns playbook at https://ops.githubapp.com/docs/playbooks/github/code-scanning/playbooks/dotcom/stale-checkruns.md
ping_turboscan:
  name: Ping Turboscan
  description: Ping Turboscan
  solution: Run Hubot command `.ts ping`
  hint: Use Hubot command `.ts help`
get_turboscan_hmac:
  name: HMAC token for Turboscan
  description: Get a HMAC token for Turboscan
  solution: Run Hubot command `.ts hmac`
  hint: Use Hubot command `.ts help`
get_turboscan_deployments:
  name: Turboscan deployments
  description: Get a list of the last Turboscan deployments
  solution: Run Hubot command `.deployed turboscan`
  hint: Use Hubot command `.deployed`
proxima_stamps:
  name: Proxima stamps
  description: Find out all current proxima stamps
  solution: https://github.com/github/sites-api/blob/master/config/stamps.yml
  hint: Check out the Proxima runbook https://ops.githubapp.com/docs/playbooks/github/code-scanning//runbooks/proxima/runbook.md
update_turboscan_ops_scripts:
  name: Update Turboscan ops scripts
  description: Update the Turboscan ops scripts
  solution: SSH to a shell, run `. vault-login` and `update-turboscan-ops-scripts`
  hint: Check the on-call readiness checklist at https://ops.githubapp.com/docs/playbooks/github/code-scanning/runbooks/dotcom/on-call-readiness-checklist.md
update_turboscan_kubernetes_config:
  name: Update Kubernetes config
  description: Update the Turboscan Kubernetes config
  solution: SSH to a shell, run `. vault-login` and `kubelogin config`
  hint: Check the on-call readiness checklist at https://ops.githubapp.com/docs/playbooks/github/code-scanning/runbooks/dotcom/on-call-readiness-checklist.md

# Vault
dotcom_vault_secrets:
  name: Vault secrets for dotcom stamp
  description: List the secrets for dotcom stamp from vault
  solution: SSH to a shell, run `. vault-login` and run `vault-secret --application turboscan -environment dotcom --list-keys`
  hint: Check the on-call readiness checklist at https://ops.githubapp.com/docs/playbooks/github/code-scanning/runbooks/dotcom/on-call-readiness-checklist.md
prod-weu-01_vault_secrets:
  name: Vault secrets for prod-weu-01 stamp
  description: List the secrets for prod-weu-01 stamp from vault
  solution: SSH to shell, run `. vault-login` and run `vault-secret --application turboscan -environment prod-weu-01 --list-keys`
  hint: Check the on-call readiness checklist at https://ops.githubapp.com/docs/playbooks/github/code-scanning/runbooks/dotcom/on-call-readiness-checklist.md

# Aqueduct
aqueduct_queues:
  name: List aqueduct queues
  description: List Turboscan aqueduct queues
  solution: Run Hubot command `.aqueduct list app=turboscan`
  hint: Use Hubot command `.aqueduct help`
paused_aqueduct_queues:
  name: Paused aqueduct queues
  description: Get the number of paused aqueduct queues
  solution: Run Hubot command `.aqueduct paused app=turboscan`
  hint: Use Hubot command `.aqueduct help`
