<%= render Primer::Beta::Subhead.new do |component| %>
  <% component.with_heading(tag: :h2) do %>
    Merge Commit Requests for <%= repository.name_with_owner %>
  <% end %>
  <% component.with_actions do %>
  <% end %>
<% end %>

<div class="d-flex">

<%= render Primer::Beta::Subhead.new do |component| %>
  <% component.with_heading(tag: :h2) do %>
    <%= request_count %>
  <% end %>
  <% component.with_description do %>
    merge commit
    <%= "request".pluralize(request_count) %>
    outstanding
  <% end %>
<% end %>

<%= render Primer::Beta::Subhead.new do |component| %>
    <% component.with_heading(tag: :h2) do %>
      <% if oldest_request_time %>
        <%= render Primer::Beta::RelativeTime.new(datetime: oldest_request_time) %>
      <% else %>
        N/A
      <% end %>
    <% end %>
    <% component.with_description do %>
      oldest request in queue
    <% end %>
<% end %>

<%= render Primer::Beta::Subhead.new do |component| %>
  <% component.with_heading(tag: :h2) do %>
    Dashboards
  <% end %>
  <% component.with_description do %>
      <%= link_to "Splunk Dashboard (Dotcom Only)", splunk_dashboard_url %>
      <br>
      <%= link_to "Datadog Dashboard", datadog_dashboard_url %>
  <% end %>
<% end %>

</div>

<%= render(Primer::Beta::BorderBox.new(mb: 4, padding: :condensed)) do |component| %>
  <% component.with_header(tag: :h3) { "Queue contents" } %>

  <% if merge_commit_requests.empty? %>
    <% component.with_row do %>
      <p>The queue is empty.</p>
    <% end %>
  <% else %>
    <% merge_commit_requests.each do |request| %>
      <% component.with_row do %>
        <div <%= test_selector("merge-commit-requests") %>>
          <details>
            <summary>
                <span>
                  <b>#<%= request.pull_request.number %></b>
                  <%= request.pull_request.title %>
                </span>
                <%= status_for(request) %>
            </summary>

            <table class="site-admin-table my-2">
              <tbody>
                <tr>
                  <th>PR #</th>
                  <td><%= link_to "##{request.pull_request.number}", "/stafftools/repositories/#{repository.nwo}/pull_requests/#{request.pull_request.number}" %></td>
                </tr>
                <tr>
                  <th>DB ID</th>
                  <td><code><%= request.pull_request.id %></code></td>
                </tr>
                <tr>
                  <th>Base SHA</th>
                  <td>
                    <% if request.pull_request.base_sha.present? %>
                      <%= link_to(commit_path(request.pull_request.base_sha)) do %>
                        <code><%= request.pull_request.base_sha %></code>
                      <% end %>
                    <% end %>
                  </td>
                </tr>
                <tr>
                  <th>Base ref</th>
                  <td><code><%= request.pull_request.base_ref %></code></td>
                </tr>
                <tr>
                  <th>Head SHA</th>
                  <td>
                    <% if request.pull_request.head_sha.present? %>
                      <%= link_to(commit_path(request.pull_request.head_sha)) do %>
                        <code><%= request.pull_request.head_sha %></code>
                      <% end %>
                    <% end %>
                  </td>
                </tr>
                <tr>
                  <th>Head ref</th>
                  <td><code><%= request.pull_request.head_ref %></code></td>
                </tr>
                <tr>
                  <th>Enqueued at</th>
                  <td><%= render(Primer::Beta::RelativeTime.new(datetime: request.created_at)) %></td>
                </tr>
              </tbody>
            </table>

          </details>
        </div>
      <% end %>
    <% end %>
    <div class="paginate-container">
      <%= will_paginate(merge_commit_requests) %>
    </div>
  <% end %>
<% end %>

<%= render(Primer::Beta::BorderBox.new(mb: 4, padding: :condensed)) do |component| %>
  <% component.with_header(tag: :h3, border_color: :attention, bg: :attention) do %>
    Merge Commit Request controls
  <% end %>
  <% component.with_row do %>
    <%= form_tag pause_stafftools_merge_commit_requests_path(repository.owner_display_login, repository), class: "mb-2" do %>
      <%= render(Primer::Beta::Button.new(type: :submit, disabled: merge_commit_request_generation_paused?)) do %>
        Pause merge commit request processing
      <% end %>
    <% end %>
  <% end %>
  <% component.with_row do %>
    <%= form_tag unpause_stafftools_merge_commit_requests_path(repository.owner_display_login, repository), class: "mb-2" do %>
      <%= render(Primer::Beta::Button.new(type: :submit, disabled: !merge_commit_request_generation_paused?)) do %>
        Enable merge commit request processing
      <% end %>
    <% end %>
  <% end %>
<% end %>

<%= render(Primer::Beta::BorderBox.new(color: :danger, border_color: :danger_emphasis)) do |component| %>
  <% component.with_header(tag: :h3, border_color: :danger_emphasis, bg: :danger) { "Danger Zone" } %>
  <% component.with_row do %>
    <%= form_tag clear_stafftools_merge_commit_requests_path(repository.owner_display_login, repository), class: "mb-2" do %>
      <%= render(Primer::Beta::Button.new(type: :submit, scheme: :danger, "data-confirm": "Are you sure you want to clear merge commit requests in the queue for #{repository.name_with_owner}?")) do %>
        Clear all merge commit requests
      <% end %>
    <% end %>
  <% end %>
<% end %>
