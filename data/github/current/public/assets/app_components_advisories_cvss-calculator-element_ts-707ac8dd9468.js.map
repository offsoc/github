{"version":3,"file":"chunk-app_components_advisories_cvss-calculator-element_ts-xxxxxxxxxxxx.js","mappings":"qgBAIe,YAAMA,8BAA8BC,YAIjD,IAAWC,cAAuB,CAChC,IAAIA,EAAe,WAEnB,IAAK,IAAMC,KAA8B,IAAI,CAACC,sBAAsB,CAAE,CACpE,IAAMC,EAAaF,EAA2BE,UAAU,CAClDC,EAAgBH,EAA2BG,aAAa,EAAI,IAElEJ,GAAgB,CAAC,CAAC,EAAEG,EAAW,CAAC,EAAEC,EAAc,CAAC,CAGnD,OAAOJ,CACT,CAEA,IAAWA,aAAaA,CAAoB,CAAE,CAE5C,IAAMK,EAA8CC,EADPC,KAAK,CAAC,KAAKC,KAAK,CAAC,GACIC,MAAM,CAAC,CAACC,EAAeC,KACvF,GAAM,CAACR,EAAYS,EAAM,CAAGD,EAAaJ,KAAK,CAAC,KAE/C,MAAO,CACL,GAAGG,CAAa,CAChB,CAACP,EAAY,CAAES,CACjB,CACF,EAAG,CAAC,GAEJ,IAAK,IAAMX,KAA8B,IAAI,CAACC,sBAAsB,CAAE,CAEpE,IAAMW,EAAgBR,CAAgB,CADXJ,EAA2BE,UAAU,CACd,CAElDF,EAA2Ba,cAAc,CAACD,EAC5C,CACF,CAEA,MAAME,4BAA4BC,CAAkD,CAAE,CACpF,IAAMC,EAAgBD,EAAYE,MAAM,CAACD,aAAa,CACtD,IAAI,CAACE,aAAa,CAChB,IAAIC,YAAsC,8BAA+B,CAACF,OAAQ,CAACD,cAAAA,CAAa,CAAC,GAErG,CACF,E,GAxCGI,EAAAA,EAAOA,C,CAFWvB,EAAAA,SAAAA,CAAAA,yBAAAA,KAAAA,GAAAA,EAAAA,EAAAA,CADpBwB,EAAAA,EAAUA,C,CACUxB,E","sources":["app/components/advisories/cvss-calculator-element.ts"],"sourcesContent":["import {controller, targets} from '@github/catalyst'\nimport type CvssV4SingleMetricSelectionElement from './cvss-calculator-metric-element'\n\n@controller\nexport default class CvssCalculatorElement extends HTMLElement {\n  // Each individual metric tracked in here\n  @targets singleMetricSelections: CvssV4SingleMetricSelectionElement[]\n\n  public get vectorString(): string {\n    let vectorString = 'CVSS:4.0'\n\n    for (const metricSelectionNextElement of this.singleMetricSelections) {\n      const metricCode = metricSelectionNextElement.metricCode\n      const selectedValue = metricSelectionNextElement.selectedValue || '_'\n\n      vectorString += `/${metricCode}:${selectedValue}`\n    }\n\n    return vectorString\n  }\n\n  public set vectorString(vectorString: string) {\n    const keyValuePairs: string[] = vectorString.split('/').slice(1)\n    const metricSelections: {[index: string]: string} = keyValuePairs.reduce((selectionHash, keyValuePair) => {\n      const [metricCode, value] = keyValuePair.split(':')\n\n      return {\n        ...selectionHash,\n        [metricCode!]: value,\n      }\n    }, {})\n\n    for (const metricSelectionNextElement of this.singleMetricSelections) {\n      const metricCode: string = metricSelectionNextElement.metricCode!\n      const selectionCode = metricSelections[metricCode]!\n\n      metricSelectionNextElement.selectFromCode(selectionCode)\n    }\n  }\n\n  async handleMetricSelectionChange(customEvent: CustomEvent<{userInitiated: boolean}>) {\n    const userInitiated = customEvent.detail.userInitiated\n    this.dispatchEvent(\n      new CustomEvent<{userInitiated: boolean}>('vectorStringSelectionChange', {detail: {userInitiated}}),\n    )\n  }\n}\n"],"names":["CvssCalculatorElement","HTMLElement","vectorString","metricSelectionNextElement","singleMetricSelections","metricCode","selectedValue","metricSelections","keyValuePairs","split","slice","reduce","selectionHash","keyValuePair","value","selectionCode","selectFromCode","handleMetricSelectionChange","customEvent","userInitiated","detail","dispatchEvent","CustomEvent","targets","controller"],"sourceRoot":""}