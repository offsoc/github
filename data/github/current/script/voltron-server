#!/bin/bash
#/ Usage: script/voltron-server
#/
#/ Runs the voltron server.

# Don't run voltron when current runtime is enterprise for now
RAILS_ROOT_PATH=$([[ "$RAILS_ROOT" != "" ]] && echo "$RAILS_ROOT" || pwd)
if [[ "$(cat "${RAILS_ROOT_PATH}/tmp/runtime/current" 2>/dev/null)" == "enterprise" || -n "${FASTDEV}" || -n "${PRELOAD}" ]]; then
  echo "Skipping voltron server because either current runtime is enterprise or either FASTDEV or PRELOAD are set"
  export NO_VOLTRON=1
fi

if [[ $NO_VOLTRON == "1" ]]; then
  echo "voltron has been disabled"
  while true; do sleep 10000; done
  exit 0
fi

if [[ "$DX_EDGE" = true ]] && [[ "$DX_FEATURE_SUBPROJECT_CONTAINERS" = true ]]; then
  export VOLTRON_USE_HTTP_ROUTES="1"

  SCRIPT_DIR=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")
  # shellcheck source=dx/lib/subproject-containers
  source "$SCRIPT_DIR/dx/lib/subproject-containers"

  SUBPROJECT_VERSION=$(subproject_version "voltron")
  echo "voltron version $SUBPROJECT_VERSION"

  # Ensure we clean up any existing containers, and remove after shutdown.
  cleanup_docker() {
    echo "Stopping voltron..."
    docker stop voltron || true
    exit 0
  }

  trap cleanup_docker EXIT INT QUIT TERM HUP

  docker stop voltron &> /dev/null || true
  docker rm voltron &> /dev/null || true

  # Run the service.
  docker run -d --rm --name voltron --network host --entrypoint "/app/bin/voltron" \
    -e OTEL_SERVICE_NAME=voltron \
    -e VOLTRON_USE_HTTP_ROUTES=1 \
    -e SERVER_ADDR=localhost:3007 \
    "ghcr.io/github/shared-dev/voltron:$SUBPROJECT_VERSION"

  docker logs --follow voltron &
  wait
else
  script/build-subproject voltron || exit 1
  VOLTRON_BIN="vendor/voltron/bin/voltron"

  if [[ -x "$VOLTRON_BIN" ]]; then
    export VOLTRON_USE_HTTP_ROUTES="1"
    exec env OTEL_SERVICE_NAME="voltron" $VOLTRON_BIN
  else
    echo "voltron binary is not available and voltron has been disabled"
    while true; do sleep 10000; done
  fi
fi
