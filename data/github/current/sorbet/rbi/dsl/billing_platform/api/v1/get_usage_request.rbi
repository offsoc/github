# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `BillingPlatform::Api::V1::GetUsageRequest`.
# Please instead update this file by running `bin/tapioca dsl BillingPlatform::Api::V1::GetUsageRequest`.

class BillingPlatform::Api::V1::GetUsageRequest
  sig do
    params(
      billingPeriod: T.nilable(T.any(Symbol, Integer)),
      day: T.nilable(Integer),
      groupBy: T.nilable(T.any(Symbol, Integer)),
      hour: T.nilable(Integer),
      includeQuantityGetUsageTotal: T.nilable(T::Boolean),
      month: T.nilable(Integer),
      orgId: T.nilable(Integer),
      product: T.nilable(String),
      repoId: T.nilable(Integer),
      sku: T.nilable(String),
      usageEntityId: T.nilable(String),
      year: T.nilable(Integer)
    ).void
  end
  def initialize(billingPeriod: nil, day: nil, groupBy: nil, hour: nil, includeQuantityGetUsageTotal: nil, month: nil, orgId: nil, product: nil, repoId: nil, sku: nil, usageEntityId: nil, year: nil); end

  sig { returns(T.any(Symbol, Integer)) }
  def billingPeriod; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def billingPeriod=(value); end

  sig { void }
  def clear_billingPeriod; end

  sig { void }
  def clear_day; end

  sig { void }
  def clear_groupBy; end

  sig { void }
  def clear_hour; end

  sig { void }
  def clear_includeQuantityGetUsageTotal; end

  sig { void }
  def clear_month; end

  sig { void }
  def clear_orgId; end

  sig { void }
  def clear_product; end

  sig { void }
  def clear_repoId; end

  sig { void }
  def clear_sku; end

  sig { void }
  def clear_usageEntityId; end

  sig { void }
  def clear_year; end

  sig { returns(Integer) }
  def day; end

  sig { params(value: Integer).void }
  def day=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def groupBy; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def groupBy=(value); end

  sig { returns(Integer) }
  def hour; end

  sig { params(value: Integer).void }
  def hour=(value); end

  sig { returns(T::Boolean) }
  def includeQuantityGetUsageTotal; end

  sig { params(value: T::Boolean).void }
  def includeQuantityGetUsageTotal=(value); end

  sig { returns(Integer) }
  def month; end

  sig { params(value: Integer).void }
  def month=(value); end

  sig { returns(Integer) }
  def orgId; end

  sig { params(value: Integer).void }
  def orgId=(value); end

  sig { returns(String) }
  def product; end

  sig { params(value: String).void }
  def product=(value); end

  sig { returns(Integer) }
  def repoId; end

  sig { params(value: Integer).void }
  def repoId=(value); end

  sig { returns(String) }
  def sku; end

  sig { params(value: String).void }
  def sku=(value); end

  sig { returns(String) }
  def usageEntityId; end

  sig { params(value: String).void }
  def usageEntityId=(value); end

  sig { returns(Integer) }
  def year; end

  sig { params(value: Integer).void }
  def year=(value); end
end
