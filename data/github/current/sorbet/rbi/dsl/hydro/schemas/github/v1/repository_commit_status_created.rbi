# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::RepositoryCommitStatusCreated`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::RepositoryCommitStatusCreated`.

class Hydro::Schemas::Github::V1::RepositoryCommitStatusCreated
  sig do
    params(
      branch_names: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      commit_sha: T.nilable(String),
      context: T.nilable(String),
      database_id: T.nilable(Integer),
      repository_id: T.nilable(Integer),
      state: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(branch_names: T.unsafe(nil), commit_sha: nil, context: nil, database_id: nil, repository_id: nil, state: nil); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def branch_names; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def branch_names=(value); end

  sig { void }
  def clear_branch_names; end

  sig { void }
  def clear_commit_sha; end

  sig { void }
  def clear_context; end

  sig { void }
  def clear_database_id; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_state; end

  sig { returns(String) }
  def commit_sha; end

  sig { params(value: String).void }
  def commit_sha=(value); end

  sig { returns(String) }
  def context; end

  sig { params(value: String).void }
  def context=(value); end

  sig { returns(Integer) }
  def database_id; end

  sig { params(value: Integer).void }
  def database_id=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def state; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def state=(value); end
end
