<%
  should_do_live_update = current_repository.feature_enabled?(:reviewers_event_updates)
  container_classes = ["discussion-sidebar-item", "sidebar-assignee", "js-discussion-sidebar-item", "position-relative"]
  container_classes += ["js-socket-channel", "js-updatable-content"] if should_do_live_update
%>
<div
  class="<%= container_classes.join(" ") %>"
  data-team-hovercards-enabled
  <% if should_do_live_update %>
    data-channel="<%= live_update_view_channel(GitHub::WebSocket::Channels.pull_request(pull_request)) %>"
    data-gid="<%= pull_request.global_relay_id %>"
    data-url="<%= show_partial_issue_path(:id => pull_request.issue, :partial => "pull_requests/sidebar/show/reviewers") %>"
    data-channel-event-name="<%= ReviewRequest::LIVE_UPDATE_EVENT_NAME %>"
  <% end %>
>
  <%= form_tag create_review_request_path(current_repository.owner, current_repository, pull_request),
      :method => :post, :class => "js-issue-sidebar-form", "aria-label": "Select reviewers",
      "data-reviewers-team-size-check-url" => review_request_team_size_check_path(current_repository.owner, current_repository, pull_request) do %>
    <div class="js-large-teams-check-warning-container"></div>
    <%= render partial: "issues/sidebar/reviewers_menu", locals: {
          pull_request: pull_request,
          data_source: reviewers_menu_content_path(current_repository.owner, current_repository, pull_request)
        } %>
    <%= render partial: "issues/sidebar/reviewers", locals: {
          pull_request: pull_request,
          suggested_reviewers: local_assigns[:suggested_reviewers]
        } %>
    <% if logged_in? && !(pull_request.draft_or_in_progress? || pull_request.closed?) %>
      <%= render partial: "issues/sidebar/convert_to_draft", locals: {
        pull_request: pull_request
      } %>
    <% end %>
  <% end %>
</div>
