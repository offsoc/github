# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Sponsors::V0::CheckoutViewed`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Sponsors::V0::CheckoutViewed`.

class Hydro::Schemas::Github::Sponsors::V0::CheckoutViewed
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      checkout_type: T.nilable(T.any(Symbol, Integer)),
      is_data_collection_needed: T.nilable(T::Boolean),
      is_first_time_sponsor: T.nilable(T::Boolean),
      is_sponsor_payment_method_valid: T.nilable(T::Boolean),
      listing: T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsListing),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext),
      sponsor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      sponsor_plan_duration: T.nilable(T.any(Symbol, Integer)),
      sponsorable: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      tier: T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsTier)
    ).void
  end
  def initialize(actor: nil, checkout_type: nil, is_data_collection_needed: nil, is_first_time_sponsor: nil, is_sponsor_payment_method_valid: nil, listing: nil, request_context: nil, sponsor: nil, sponsor_plan_duration: nil, sponsorable: nil, tier: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def checkout_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def checkout_type=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_checkout_type; end

  sig { void }
  def clear_is_data_collection_needed; end

  sig { void }
  def clear_is_first_time_sponsor; end

  sig { void }
  def clear_is_sponsor_payment_method_valid; end

  sig { void }
  def clear_listing; end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_sponsor; end

  sig { void }
  def clear_sponsor_plan_duration; end

  sig { void }
  def clear_sponsorable; end

  sig { void }
  def clear_tier; end

  sig { returns(T::Boolean) }
  def is_data_collection_needed; end

  sig { params(value: T::Boolean).void }
  def is_data_collection_needed=(value); end

  sig { returns(T::Boolean) }
  def is_first_time_sponsor; end

  sig { params(value: T::Boolean).void }
  def is_first_time_sponsor=(value); end

  sig { returns(T::Boolean) }
  def is_sponsor_payment_method_valid; end

  sig { params(value: T::Boolean).void }
  def is_sponsor_payment_method_valid=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsListing)) }
  def listing; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsListing)).void }
  def listing=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def sponsor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def sponsor=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def sponsor_plan_duration; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def sponsor_plan_duration=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def sponsorable; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def sponsorable=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsTier)) }
  def tier; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsTier)).void }
  def tier=(value); end
end
