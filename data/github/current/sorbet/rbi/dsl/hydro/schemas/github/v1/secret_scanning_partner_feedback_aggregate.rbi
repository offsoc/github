# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::SecretScanningPartnerFeedbackAggregate`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::SecretScanningPartnerFeedbackAggregate`.

class Hydro::Schemas::Github::V1::SecretScanningPartnerFeedbackAggregate
  sig do
    params(
      feedback_from_date: T.nilable(Google::Protobuf::Timestamp),
      feedback_to_date: T.nilable(Google::Protobuf::Timestamp),
      token_type: T.nilable(String),
      total_count: T.nilable(Integer),
      true_positive_count: T.nilable(Integer)
    ).void
  end
  def initialize(feedback_from_date: nil, feedback_to_date: nil, token_type: nil, total_count: nil, true_positive_count: nil); end

  sig { void }
  def clear_feedback_from_date; end

  sig { void }
  def clear_feedback_to_date; end

  sig { void }
  def clear_token_type; end

  sig { void }
  def clear_total_count; end

  sig { void }
  def clear_true_positive_count; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def feedback_from_date; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def feedback_from_date=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def feedback_to_date; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def feedback_to_date=(value); end

  sig { returns(String) }
  def token_type; end

  sig { params(value: String).void }
  def token_type=(value); end

  sig { returns(Integer) }
  def total_count; end

  sig { params(value: Integer).void }
  def total_count=(value); end

  sig { returns(Integer) }
  def true_positive_count; end

  sig { params(value: Integer).void }
  def true_positive_count=(value); end
end
