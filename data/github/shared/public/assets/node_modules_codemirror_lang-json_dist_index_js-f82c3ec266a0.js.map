{"version":3,"file":"chunk-node_modules_codemirror_lang-json_dist_index_js-xxxxxxxxxxxx.js","mappings":"2OAGA,IAAMA,EAAmB,SAAU,CACjCC,OAAQ,IAAI,CAACC,MAAM,CACnBC,OAAQ,IAAI,CAACC,MAAM,CACnB,aAAc,IAAI,CAACC,IAAI,CACvBC,aAAc,IAAI,CAACC,YAAY,CAC/BC,KAAM,IAAI,CAACC,IAAI,CACf,IAAK,IAAI,CAACC,SAAS,CACnB,MAAO,IAAI,CAACC,aAAa,CACzB,MAAO,IAAI,CAACC,KAAK,GAIbC,EAAS,IAAQ,CAACC,WAAW,CAAC,CAClCC,QAAS,GACTC,OAAQ,mRACRC,UAAW,iGACXC,KAAM,kFACNC,UAAW,2FACXC,QAAS,GACTC,UAAW,CACT,CAAC,WAAY,EAAE,IAAI,GAAG,IAAI,CAC1B,CAAC,WAAY,EAAE,IAAI,GAAG,IAAI,CAC3B,CACDC,YAAa,CAACtB,EAAiB,CAC/BuB,aAAc,CAAC,EAAE,CACjBC,gBAAiB,EACjBC,UAAW,wkBACXC,WAAY,CAAC,EAAE,CACfC,SAAU,CAAC,SAAW,CAAC,EAAE,EAAE,EAC3BC,UAAW,CACb,G,eCxBA,IAAMC,EAAkB,IAAM,IAC1B,GAAI,CACAC,KAAKC,KAAK,CAACC,EAAKC,KAAK,CAACC,GAAG,CAACC,QAAQ,GACtC,CACA,MAAOC,EAAG,CACN,GAAI,CAAEA,CAAAA,aAAaC,WAAU,EACzB,MAAMD,EACV,IAAME,EAAMC,SAUMC,CAAK,CAAEN,CAAG,EAChC,IAAIO,QACJ,CAAIA,EAAID,EAAME,OAAO,CAACC,KAAK,CAAC,oBAAmB,EACpCC,KAAKC,GAAG,CAAC,CAACJ,CAAC,CAAC,EAAE,CAAEP,EAAIY,MAAM,EACjCL,CAAAA,EAAID,EAAME,OAAO,CAACC,KAAK,CAAC,6BAA4B,EAC7CC,KAAKC,GAAG,CAACX,EAAIa,IAAI,CAAC,CAACN,CAAC,CAAC,EAAE,EAAEO,IAAI,EAAI,CAACP,CAAC,CAAC,EAAE,CAAI,EAAGP,EAAIY,MAAM,EAC3D,CACX,EAjBqCV,EAAGJ,EAAKC,KAAK,CAACC,GAAG,EAC9C,MAAO,CAAC,CACAc,KAAMV,EACNI,QAASN,EAAEM,OAAO,CAClBO,SAAU,QACVC,GAAIZ,CACR,EAAE,CAEV,MAAO,EAAE,EAcPa,EAA4B,IAAU,CAACC,MAAM,CAAC,CAChDC,KAAM,OACNxC,OAAqBA,EAAOyC,SAAS,CAAC,CAClCC,MAAO,CACU,IAAc,CAACC,GAAG,CAAC,CAC5BC,OAAqB,SAAgB,CAAEC,OAAQ,QAAS,GACxDC,MAAoB,SAAgB,CAAED,OAAQ,QAAS,EAC3D,GACa,IAAY,CAACF,GAAG,CAAC,CAC1B,eAAgB,IAAU,GAEjC,GAELI,aAAc,CACVC,cAAe,CAAEC,SAAU,CAAC,IAAK,IAAK,IAAI,EAC1CC,cAAe,aACnB,CACJ,GAIA,SAASC,IACL,OAAO,IAAI,IAAe,CAACb,EAC/B,C","sources":["node_modules/@lezer/json/dist/index.es.js","node_modules/@codemirror/lang-json/dist/index.js"],"sourcesContent":["import { LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\nconst jsonHighlighting = styleTags({\n  String: tags.string,\n  Number: tags.number,\n  \"True False\": tags.bool,\n  PropertyName: tags.propertyName,\n  Null: tags.null,\n  \",\": tags.separator,\n  \"[ ]\": tags.squareBracket,\n  \"{ }\": tags.brace\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#CjOOQO'#Cp'#CpQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CrOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59U,59UO!iQPO,59UOVQPO,59QOqQPO'#CkO!nQPO,59^OOQO1G.k1G.kOVQPO'#ClO!vQPO,59aOOQO1G.p1G.pOOQO1G.l1G.lOOQO,59V,59VOOQO-E6i-E6iOOQO,59W,59WOOQO-E6j-E6j\",\n  stateData: \"#O~OcOS~OQSORSOSSOTSOWQO]ROePO~OVXOeUO~O[[O~PVOg^O~Oh_OVfX~OVaO~OhbO[iX~O[dO~Oh_OVfa~OhbO[ia~O\",\n  goto: \"!kjPPPPPPkPPkqwPPk{!RPPP!XP!ePP!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R\",\n  nodeNames: \"âš  JsonText True False Null Number String } { Object Property PropertyName ] [ Array\",\n  maxTerm: 25,\n  nodeProps: [\n    [\"openedBy\", 7,\"{\",12,\"[\"],\n    [\"closedBy\", 8,\"}\",13,\"]\"]\n  ],\n  propSources: [jsonHighlighting],\n  skippedNodes: [0],\n  repeatNodeCount: 2,\n  tokenData: \"(p~RaXY!WYZ!W]^!Wpq!Wrs!]|}$i}!O$n!Q!R$w!R![&V![!]&h!}#O&m#P#Q&r#Y#Z&w#b#c'f#h#i'}#o#p(f#q#r(k~!]Oc~~!`Upq!]qr!]rs!rs#O!]#O#P!w#P~!]~!wOe~~!zXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#g~#jR!Q![#s!c!i#s#T#Z#s~#vR!Q![$P!c!i$P#T#Z$P~$SR!Q![$]!c!i$]#T#Z$]~$`R!Q![!]!c!i!]#T#Z!]~$nOh~~$qQ!Q!R$w!R![&V~$|RT~!O!P%V!g!h%k#X#Y%k~%YP!Q![%]~%bRT~!Q![%]!g!h%k#X#Y%k~%nR{|%w}!O%w!Q![%}~%zP!Q![%}~&SPT~!Q![%}~&[ST~!O!P%V!Q![&V!g!h%k#X#Y%k~&mOg~~&rO]~~&wO[~~&zP#T#U&}~'QP#`#a'T~'WP#g#h'Z~'^P#X#Y'a~'fOR~~'iP#i#j'l~'oP#`#a'r~'uP#`#a'x~'}OS~~(QP#f#g(T~(WP#i#j(Z~(^P#X#Y(a~(fOQ~~(kOW~~(pOV~\",\n  tokenizers: [0],\n  topRules: {\"JsonText\":[0,1]},\n  tokenPrec: 0\n});\n\nexport { parser };\n","import { parser } from '@lezer/json';\nimport { LRLanguage, indentNodeProp, continuedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\n\n/**\nCalls\n[`JSON.parse`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse)\non the document and, if that throws an error, reports it as a\nsingle diagnostic.\n*/\nconst jsonParseLinter = () => (view) => {\n    try {\n        JSON.parse(view.state.doc.toString());\n    }\n    catch (e) {\n        if (!(e instanceof SyntaxError))\n            throw e;\n        const pos = getErrorPosition(e, view.state.doc);\n        return [{\n                from: pos,\n                message: e.message,\n                severity: 'error',\n                to: pos\n            }];\n    }\n    return [];\n};\nfunction getErrorPosition(error, doc) {\n    let m;\n    if (m = error.message.match(/at position (\\d+)/))\n        return Math.min(+m[1], doc.length);\n    if (m = error.message.match(/at line (\\d+) column (\\d+)/))\n        return Math.min(doc.line(+m[1]).from + (+m[2]) - 1, doc.length);\n    return 0;\n}\n\n/**\nA language provider that provides JSON parsing.\n*/\nconst jsonLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"json\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Object: /*@__PURE__*/continuedIndent({ except: /^\\s*\\}/ }),\n                Array: /*@__PURE__*/continuedIndent({ except: /^\\s*\\]/ })\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                \"Object Array\": foldInside\n            })\n        ]\n    }),\n    languageData: {\n        closeBrackets: { brackets: [\"[\", \"{\", '\"'] },\n        indentOnInput: /^\\s*[\\}\\]]$/\n    }\n});\n/**\nJSON language support.\n*/\nfunction json() {\n    return new LanguageSupport(jsonLanguage);\n}\n\nexport { json, jsonLanguage, jsonParseLinter };\n"],"names":["jsonHighlighting","String","string","Number","number","bool","PropertyName","propertyName","Null","null","separator","squareBracket","brace","parser","deserialize","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","propSources","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","tokenPrec","jsonParseLinter","JSON","parse","view","state","doc","toString","e","SyntaxError","pos","getErrorPosition","error","m","message","match","Math","min","length","line","from","severity","to","jsonLanguage","define","name","configure","props","add","Object","except","Array","languageData","closeBrackets","brackets","indentOnInput","json"],"sourceRoot":""}