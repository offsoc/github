.QueryBuilder-StyledInput {
  display: inline-flex;
  width: 100%;
  min-height: var(--control-medium-size, 32px);
  color: var(--fgColor-default, var(--color-fg-default));
  vertical-align: middle;
  cursor: text;
  background-color: var(--bgColor-default, var(--color-canvas-default));
  border: solid var(--borderWidth-thin) var(--borderColor-default);
  border-color: var(--control-borderColor-rest, var(--color-border-default));
  border-radius: var(--borderRadius-medium);
  outline: none;
  align-items: center;
  gap: var(--base-size-4);
}

.QueryBuilder-focus {
  border-color: transparent;
  outline: 2px solid var(--focus-outlineColor, var(--color-accent-fg));
  // stylelint-disable-next-line primer/box-shadow
  box-shadow: inset 0 0 1px transparent;
}

.QueryBuilder-StyledInputContainer {
  position: relative;
  display: flex;
  overflow-x: auto;
  overflow-y: hidden;
  font-size: inherit;
  align-items: center;
  -ms-overflow-style: none;
  scrollbar-width: none;
  flex: 1;
  align-self: stretch;

  &::-webkit-scrollbar {
    display: none;
  }
}

.QueryBuilder-StyledInputContent {
  position: absolute;
  display: inline-flex;
  padding: 0;
  word-break: break-word;
  white-space: pre;
  user-select: none;
  flex: 1;
}

.QueryBuilder-leadingVisualWrap {
  margin: var(--base-size-4) var(--base-size-4) var(--base-size-4) var(--base-size-8);
  color: var(--fgColor-muted, var(--color-fg-muted));
}

.QueryBuilder-spacer {
  width: var(--base-size-8);
  height: 100%;
}

.QueryBuilder-InputWrapper {
  width: 100%;
  align-self: stretch;
}

.QueryBuilder-Sizer {
  position: absolute;
  top: 0;
  left: 0;
  height: 0;
  overflow: scroll;
  white-space: pre;
  visibility: hidden;
}

.QueryBuilder-Input {
  position: relative;
  display: flex;
  min-width: 100%;
  padding: 0;
  overflow-x: auto;
  overflow-y: hidden;
  // stylelint-disable-next-line primer/colors
  color: transparent;
  resize: none;
  background: transparent;
  border: 0;
  outline: none;
  caret-color: var(--fgColor-default, var(--color-fg-default));

  &:focus {
    border: 0 !important;
    box-shadow: none !important;
  }
}

// Fallback when JS is disabled
// stylelint-disable-next-line selector-max-type
query-builder:not(:defined) .QueryBuilder-Input {
  color: var(--fgColor-default, var(--color-fg-default));
}

.QueryBuilder-ListItem {
  display: grid;
  grid-template-columns: max-content minmax(0, auto) max-content;
  grid-template-areas: 'leadingVisual label trailingLabel';

  // The `user-select: none;` on the .ActionList-content
  // was causing the cursor to move to the beginning
  // of the input when a user clicked on a list item.
  // This allows the cursor to move to the end of the
  // input when a value is chosen from the list
  user-select: unset;
}

.QueryBuilder-ListItem-link {
  /* blue colors for links too */
  color: inherit;

  /* no underline */
  text-decoration: none !important;
}

.QueryBuilder-ListItem-trailing {
  grid-area: trailingLabel;
}

.QueryBuilder-ListWrap {
  max-height: 20em;
  padding: var(--base-size-8);
  overflow-x: hidden;
  overflow-y: auto !important;
}

.QueryBuilder {
  [data-type='filter-value'] {
    color: var(--fgColor-accent, var(--color-accent-fg));
    background-color: var(--bgColor-accent-muted, var(--color-accent-subtle));
    // NOTE: the linter is broken, since we ARE using a variable, but it
    // still complains...
    border-radius: var(--borderRadius-small);
  }

  .qb-filter-value {
    color: var(--fgColor-accent, var(--color-accent-fg));
    background-color: var(--bgColor-accent-muted, var(--color-accent-subtle));
    border-radius: var(--borderRadius-small);
  }

  .qb-entity {
    color: var(--color-prettylights-syntax-entity);
  }

  .qb-constant {
    color: var(--color-prettylights-syntax-constant);
  }
}

.QueryBuilder .ActionList-sectionDivider:not(:empty) {
  padding: 0;
}
