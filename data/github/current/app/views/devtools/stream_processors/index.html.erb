<%# erblint:counter DeprecatedComponentsCounter 3 %>
<% page_info title: "Hydro Stream Processors", selected_link: :stream_processors %>

<% content_for :pagehead_path do %>
  / <a href="<%= devtools_stream_processors_path %>">Hydro Stream Processors</a>
<% end %>

<%= render(Primer::Beta::Flash.new(scheme: :warning, mb: 3)) do %>
  <p>
    <strong>Warning:</strong> the default retention policy for a hydro partitions is 14 days or 50GB.
    <br>
    Any consumer group that is paused for longer than 14 days or 50GB worth of data in a partition will begin to drop messages!
  </p>
<% end %>

<% if paused_processors.empty? && running_processors.empty? && unknown_group_id_processors.empty? %>
  <%= render(Primer::Beta::BorderBox.new) do |c| %>
    <% c.with_header(font_weight: :bold) { "No Hydro stream processors found" } %>
    <% c.with_row do %>
      Make sure classes inheriting from <code><%= stream_processors_class %></code> are loaded.
    <% end %>
  <% end %>
<% end %>

<% if paused_processors.any? %>
  <%= render(Primer::Beta::BorderBox.new(mb: 3)) do |c| %>
    <% c.with_header do %>
      <%= render(Primer::Beta::Heading.new(tag: :h2)) { "Paused Processors" } %>
    <% end %>
    <% paused_processors.each do |processor| %>
      <% c.with_row(test_selector: "paused-processor") do %>
        <%= render(Primer::Box.new(display: :flex, justify_content: :space_between)) do %>
          <%= render(Primer::Box.new) do %>
            <%= processor.class.name %>
            <br>
            <small>
              Paused <%= render(Primer::Beta::RelativeTime.new(datetime: processor.paused_at, tense: :past)) %> (reason: <%= processor.pause_reason %>),
              <% if resumes_at = processor.resumes_at %>
                automatically resumes <%= render(Primer::Beta::RelativeTime.new(datetime: resumes_at, prefix: "", threshold: "PT0S")) %>.
              <% else %>
                will not automatically resume
              <% end %>
            </small>
          <% end %>
          <%= render(Primer::Box.new) do %>
            <%= form_tag devtools_stream_processor_resume_path(processor.group_id), class: "inline-form", method: :put do %>
              <%= render Primer::ButtonComponent.new(type: :submit, variant: :small, scheme: :danger, "aria-label": "Resume", "data-confirm": "This will resume all processors with with the same group ID. Are you sure you want to resume this group?") do %>
                <%= primer_octicon(:play) %>
                Resume
              <% end %>
            <% end %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% end %>

<% if running_processors.any? %>
  <%= render(Primer::Beta::BorderBox.new(mb: 3)) do |c| %>
    <% c.with_header do %>
      <%= render(Primer::Beta::Heading.new(tag: :h2)) { "Running Processors (Unpaused)" } %>
      <% running_processors.each do |processor| %>
        <% c.with_row(test_selector: "running-processor") do %>
          <%= render(Primer::Box.new(display: :flex, justify_content: :space_between)) do %>
            <%= render(Primer::Box.new) do %>
              <%= processor.class.name %>
            <% end %>
            <%= render(Primer::Box.new) do %>
              <%= form_tag devtools_stream_processor_pause_path(processor.group_id), class: "inline-form", method: :put do %>
                <%= render Primer::ButtonComponent.new(type: :submit, variant: :small, scheme: :danger, "aria-label": "Pause", "data-confirm": "This will pause all processors with with the same group ID. Are you sure you want to pause this group?") do %>
                  <%= primer_octicon(:columns) %>
                  Pause
                <% end %>
              <% end %>
            <% end %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% end %>

<% if unknown_group_id_processors.any? %>
  <%= render(Primer::Beta::BorderBox.new(mb: 1)) do |c| %>
    <% c.with_header do %>
      <%= render(Primer::Beta::Heading.new(tag: :h2)) { "Processors with Unknown Group IDs" } %>
    <% end %>
    <% unknown_group_id_processors.each do |processor| %>
      <% c.with_row(test_selector: "unknown-group-id-processor") do %>
        <%= processor.class.name %>
      <% end %>
    <% end %>
  <% end %>
<% end %>
