# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::DashboardPageView`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::DashboardPageView`.

class Hydro::Schemas::Github::V1::DashboardPageView
  sig do
    params(
      banner_dismissable: T.nilable(T::Boolean),
      banner_shown: T.nilable(T::Boolean),
      currently_following_users_count: T.nilable(Integer),
      currently_starred_repos_count: T.nilable(Integer),
      dashboard_version: T.nilable(Integer),
      events_shown: T.nilable(T::Boolean),
      page_type: T.nilable(T.any(Symbol, Integer)),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext),
      user: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(banner_dismissable: nil, banner_shown: nil, currently_following_users_count: nil, currently_starred_repos_count: nil, dashboard_version: nil, events_shown: nil, page_type: nil, request_context: nil, user: nil); end

  sig { returns(T::Boolean) }
  def banner_dismissable; end

  sig { params(value: T::Boolean).void }
  def banner_dismissable=(value); end

  sig { returns(T::Boolean) }
  def banner_shown; end

  sig { params(value: T::Boolean).void }
  def banner_shown=(value); end

  sig { void }
  def clear_banner_dismissable; end

  sig { void }
  def clear_banner_shown; end

  sig { void }
  def clear_currently_following_users_count; end

  sig { void }
  def clear_currently_starred_repos_count; end

  sig { void }
  def clear_dashboard_version; end

  sig { void }
  def clear_events_shown; end

  sig { void }
  def clear_page_type; end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_user; end

  sig { returns(Integer) }
  def currently_following_users_count; end

  sig { params(value: Integer).void }
  def currently_following_users_count=(value); end

  sig { returns(Integer) }
  def currently_starred_repos_count; end

  sig { params(value: Integer).void }
  def currently_starred_repos_count=(value); end

  sig { returns(Integer) }
  def dashboard_version; end

  sig { params(value: Integer).void }
  def dashboard_version=(value); end

  sig { returns(T::Boolean) }
  def events_shown; end

  sig { params(value: T::Boolean).void }
  def events_shown=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def page_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def page_type=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def user; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def user=(value); end
end
