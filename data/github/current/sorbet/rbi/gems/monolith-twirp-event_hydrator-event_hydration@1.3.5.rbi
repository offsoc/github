# typed: false

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `monolith-twirp-event_hydrator-event_hydration` gem.
# Please instead update this file by running `bin/tapioca gem monolith-twirp-event_hydrator-event_hydration`.

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/messages_pb.rb#28
module EventsPlatform; end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/messages_pb.rb#29
module EventsPlatform::V1; end

class EventsPlatform::V1::HydrateRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class EventsPlatform::V1::HydrateResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/services_twirp.rb#43
class EventsPlatform::V1::IssueCommentAPIClient < ::Twirp::Client
  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def hydrate(input, req_opts = T.unsafe(nil)); end
end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/services_twirp.rb#37
class EventsPlatform::V1::IssueCommentAPIService < ::Twirp::Service; end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/services_twirp.rb#13
class EventsPlatform::V1::IssuesAPIClient < ::Twirp::Client
  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def hydrate(input, req_opts = T.unsafe(nil)); end
end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/services_twirp.rb#7
class EventsPlatform::V1::IssuesAPIService < ::Twirp::Service; end

class EventsPlatform::V1::PayloadVersionResult
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module EventsPlatform::V1::PayloadVersionResult::ResultCode
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/messages_pb.rb#33
EventsPlatform::V1::PayloadVersionResult::ResultCode::RESULT_CODE_RESOURCE_NOT_FOUND = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/messages_pb.rb#33
EventsPlatform::V1::PayloadVersionResult::ResultCode::RESULT_CODE_SUCCESS = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/messages_pb.rb#33
EventsPlatform::V1::PayloadVersionResult::ResultCode::RESULT_CODE_UNKNOWN = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/services_twirp.rb#23
class EventsPlatform::V1::PullRequestAPIClient < ::Twirp::Client
  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def hydrate(input, req_opts = T.unsafe(nil)); end
end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/services_twirp.rb#17
class EventsPlatform::V1::PullRequestAPIService < ::Twirp::Service; end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/services_twirp.rb#33
class EventsPlatform::V1::PullRequestReviewAPIClient < ::Twirp::Client
  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def hydrate(input, req_opts = T.unsafe(nil)); end
end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/services_twirp.rb#27
class EventsPlatform::V1::PullRequestReviewAPIService < ::Twirp::Service; end

module Google::Protobuf::MessageExts::ClassMethods; end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_event_type_pb.rb#20
module Hydro
  class << self
    # source://hydro-client/5.1.0/lib/hydro.rb#43
    def consumer_logger; end

    # source://hydro-client/5.1.0/lib/hydro.rb#47
    def consumer_logger=(logger); end

    # source://hydro-client/5.1.0/lib/hydro/instrumenter.rb#38
    def instrumenter; end

    # source://hydro-client/5.1.0/lib/hydro/instrumenter.rb#48
    def instrumenter=(instrumenter); end

    # source://hydro-client/5.1.0/lib/hydro.rb#64
    def load_schemas(directory); end

    # source://hydro-client/5.1.0/lib/hydro.rb#35
    def logger; end

    # source://hydro-client/5.1.0/lib/hydro.rb#39
    def logger=(logger); end

    # source://hydro-client/5.1.0/lib/hydro.rb#51
    def publisher_logger; end

    # source://hydro-client/5.1.0/lib/hydro.rb#55
    def publisher_logger=(logger); end

    # source://hydro-client/5.1.0/lib/hydro/generated.rb#4
    def with_generated_files(&block); end
  end
end

class Hydro::DirtyExit < ::RuntimeError; end
class Hydro::EncodingError < ::Hydro::Error; end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_event_type_pb.rb#21
module Hydro::Schemas; end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_event_type_pb.rb#22
module Hydro::Schemas::EventsPlatform; end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_event_type_pb.rb#23
module Hydro::Schemas::EventsPlatform::V0; end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_event_type_pb.rb#24
module Hydro::Schemas::EventsPlatform::V0::Entities; end

class Hydro::Schemas::EventsPlatform::V0::Entities::Delivery
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module Hydro::Schemas::EventsPlatform::V0::Entities::Delivery::Queue
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_delivery_pb.rb#28
Hydro::Schemas::EventsPlatform::V0::Entities::Delivery::Queue::ACTION = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_delivery_pb.rb#28
Hydro::Schemas::EventsPlatform::V0::Entities::Delivery::Queue::CHATOPS = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_delivery_pb.rb#28
Hydro::Schemas::EventsPlatform::V0::Entities::Delivery::Queue::HOOKSHOT_GO = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_delivery_pb.rb#28
Hydro::Schemas::EventsPlatform::V0::Entities::Delivery::Queue::UNKNOWN = T.let(T.unsafe(nil), Integer)

class Hydro::Schemas::EventsPlatform::V0::Entities::EntityReference
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module Hydro::Schemas::EventsPlatform::V0::Entities::EntityType
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_entity_type_pb.rb#29
Hydro::Schemas::EventsPlatform::V0::Entities::EntityType::ENTITY_TYPE_ENTERPRISE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_entity_type_pb.rb#29
Hydro::Schemas::EventsPlatform::V0::Entities::EntityType::ENTITY_TYPE_ISSUE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_entity_type_pb.rb#29
Hydro::Schemas::EventsPlatform::V0::Entities::EntityType::ENTITY_TYPE_ISSUE_COMMENT = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_entity_type_pb.rb#29
Hydro::Schemas::EventsPlatform::V0::Entities::EntityType::ENTITY_TYPE_MARKETPLACE_LISTING = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_entity_type_pb.rb#29
Hydro::Schemas::EventsPlatform::V0::Entities::EntityType::ENTITY_TYPE_ORGANIZATION = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_entity_type_pb.rb#29
Hydro::Schemas::EventsPlatform::V0::Entities::EntityType::ENTITY_TYPE_PULL_REQUEST = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_entity_type_pb.rb#29
Hydro::Schemas::EventsPlatform::V0::Entities::EntityType::ENTITY_TYPE_PULL_REQUEST_REVIEW = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_entity_type_pb.rb#29
Hydro::Schemas::EventsPlatform::V0::Entities::EntityType::ENTITY_TYPE_REPOSITORY = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_entity_type_pb.rb#29
Hydro::Schemas::EventsPlatform::V0::Entities::EntityType::ENTITY_TYPE_SPONSORS_LISTING = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_entity_type_pb.rb#29
Hydro::Schemas::EventsPlatform::V0::Entities::EntityType::ENTITY_TYPE_UNKNOWN = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_entity_type_pb.rb#29
Hydro::Schemas::EventsPlatform::V0::Entities::EntityType::ENTITY_TYPE_USER = T.let(T.unsafe(nil), Integer)

module Hydro::Schemas::EventsPlatform::V0::Entities::EventAction
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_event_action_pb.rb#26
Hydro::Schemas::EventsPlatform::V0::Entities::EventAction::EVENT_ACTION_CREATED = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_event_action_pb.rb#26
Hydro::Schemas::EventsPlatform::V0::Entities::EventAction::EVENT_ACTION_DELETED = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_event_action_pb.rb#26
Hydro::Schemas::EventsPlatform::V0::Entities::EventAction::EVENT_ACTION_NONE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_event_action_pb.rb#26
Hydro::Schemas::EventsPlatform::V0::Entities::EventAction::EVENT_ACTION_OPENED = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_event_action_pb.rb#26
Hydro::Schemas::EventsPlatform::V0::Entities::EventAction::EVENT_ACTION_SUBMITTED = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_event_action_pb.rb#26
Hydro::Schemas::EventsPlatform::V0::Entities::EventAction::EVENT_ACTION_UNKNOWN = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_event_action_pb.rb#26
Hydro::Schemas::EventsPlatform::V0::Entities::EventAction::EVENT_ACTION_UPDATED = T.let(T.unsafe(nil), Integer)

class Hydro::Schemas::EventsPlatform::V0::Entities::EventAttachment
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module Hydro::Schemas::EventsPlatform::V0::Entities::EventType
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_event_type_pb.rb#25
Hydro::Schemas::EventsPlatform::V0::Entities::EventType::EVENT_TYPE_ISSUES = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_event_type_pb.rb#25
Hydro::Schemas::EventsPlatform::V0::Entities::EventType::EVENT_TYPE_ISSUE_COMMENT = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_event_type_pb.rb#25
Hydro::Schemas::EventsPlatform::V0::Entities::EventType::EVENT_TYPE_PULL_REQUEST = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_event_type_pb.rb#25
Hydro::Schemas::EventsPlatform::V0::Entities::EventType::EVENT_TYPE_PULL_REQUEST_REVIEW = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_event_type_pb.rb#25
Hydro::Schemas::EventsPlatform::V0::Entities::EventType::EVENT_TYPE_STAR = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_event_type_pb.rb#25
Hydro::Schemas::EventsPlatform::V0::Entities::EventType::EVENT_TYPE_UNKNOWN = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_event_type_pb.rb#25
Hydro::Schemas::EventsPlatform::V0::Entities::EventType::EVENT_TYPE_WATCH = T.let(T.unsafe(nil), Integer)

class Hydro::Schemas::EventsPlatform::V0::Entities::Metadata
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Hydro::Schemas::EventsPlatform::V0::Entities::Target
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Hydro::Schemas::EventsPlatform::V0::Entities::TrackedWrite
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Hydro::Schemas::EventsPlatform::V0::HydrationRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Hydro::Schemas::EventsPlatform::V0::Tier1Event
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Hydro::Schemas::EventsPlatform::V0::Tier2Event
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module Hydro::Schemas::EventsPlatform::V0::Tier2Event::HydrationStatus
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_tier2_event_pb.rb#29
Hydro::Schemas::EventsPlatform::V0::Tier2Event::HydrationStatus::HYDRATION_STATUS_RESOURCE_NOT_FOUND = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_tier2_event_pb.rb#29
Hydro::Schemas::EventsPlatform::V0::Tier2Event::HydrationStatus::HYDRATION_STATUS_SUCCESS = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/v1/vendored_tier2_event_pb.rb#29
Hydro::Schemas::EventsPlatform::V0::Tier2Event::HydrationStatus::HYDRATION_STATUS_UNKNOWN = T.let(T.unsafe(nil), Integer)

module Hydro::Schemas::Hydro; end
module Hydro::Schemas::Hydro::V1; end

class Hydro::Schemas::Hydro::V1::Envelope
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module Hydro::Schemas::Hydro::V1::Envelope::Site
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith-twirp-event_hydrator-event_hydration.rb#7
module Monolith; end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith-twirp-event_hydrator-event_hydration.rb#8
module Monolith::Twirp; end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith-twirp-event_hydrator-event_hydration.rb#9
module Monolith::Twirp::EventHydrator; end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith-twirp-event_hydrator-event_hydration.rb#10
module Monolith::Twirp::EventHydrator::EventHydration; end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith-twirp-event_hydrator-event_hydration.rb#11
class Monolith::Twirp::EventHydrator::EventHydration::Error < ::StandardError; end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/version.rb#3
module MonolithTwirp; end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/version.rb#4
module MonolithTwirp::EventHydrator; end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/version.rb#5
module MonolithTwirp::EventHydrator::EventHydration; end

# source://monolith-twirp-event_hydrator-event_hydration//lib/monolith_twirp/event_hydrator/event_hydration/version.rb#6
MonolithTwirp::EventHydrator::EventHydration::VERSION = T.let(T.unsafe(nil), String)
