<copilot-text-completion
  <%# copilot-text-completion class used to target for debug panel styling. Lint dislikes tag targeting. %>
  class="copilot-text-completion pl-2"
  <% if !enabled? %>
    data-disabled=""
  <% end %>
  <% if allow_cors? %>
    data-allow-cors=""
  <% end %>
  data-source-element-id="<%= source_element_id %>"
  data-context-element-ids="<%= context_element_ids.join(',') %>"
  data-element-description="<%= element_description %>"
  data-version="<%= version %>">
    <% if current_user&.feature_enabled?(:ghost_pilot_debug_panel) %>
      <%# This will always be feature-flagged as a staff-only view %>
      <%= render Primer::Beta::Details.new(reset: true) do |component| %>
        <% component.with_summary(button: false, mb: 2) do %>
          <%= render(Primer::Beta::Label.new(
            tag: :span,
            scheme: :secondary,
            size: :medium,
            inline: true)) { "Text Completion v#{version}" } %>
        <% end %>
        <% component.with_body do %>
          <%= render(Primer::Beta::Text.new(font_weight: :bold).with_content("Text Completion v" + version_with_description)) %>
          <%= render(Primer::Box.new(
            classes: "copilot-octicon",
            ml: 2,
            display: :inline,
            hidden: true,
            )) do %>
            <%= render Primer::Beta::Octicon.new(icon: "copilot") %>
          <% end %>
          <%# This will get transplanted but hides here for now.
              Wrapped in Box because the svg didn't respond properly to JS hidden :/ %>
          <%= render(Primer::Alpha::TabPanels.new(label: "label", pt: 2)) do |component| %>
            <% component.with_tab(id: "tab-override") do |tab| %>
              <% tab.with_text { "Overrides" } %>
              <% tab.with_panel do %>
                <small>When enabled, these fields override what we send to copilot-proxy. While disabled, these fields will auto-populate with the most recently assembled prompt. If a &lt;!--PREFIX--> slug is used, it will be dynamically replaced with content from the PR description above. Note the separate suffix section below for content following the completion location.</small>
                <dl class="form-group">
                  <input id="ghost_pilot_override_enabled-<%= source_element_id %>" type="checkbox" class="mb-3">
                  <label for="ghost_pilot_override_enabled-<%= source_element_id %>">Enabled</label>
                  <dt><label for="ghost_pilot_override_prompt-<%= source_element_id %>">Prompt</label></dt>
                  <dd>
                    <textarea
                      id="ghost_pilot_override_prompt-<%= source_element_id %>"
                      placeholder="Content here overrides the prompt. Include dynamic content from the PR description above using a &lt;!--PREFIX--> slug."
                      rows="10"
                      style="width:100%;"></textarea>
                  </dd>
                  <dt><label for="ghost_pilot_override_suffix-<%= source_element_id %>">Suffix</label></dt>
                  <dd>
                    <textarea
                      id="ghost_pilot_override_suffix-<%= source_element_id %>"
                      placeholder="Content here overrides the suffix (text following the point at which we're making completion suggestions)."
                      rows="10"
                      style="width:100%;"></textarea>
                  </dd>
                </dl>
                <dl class="form-group">
                  <dt><label for="ghost_pilot_override_tokens-<%= source_element_id %>">Maximum number of response tokens</label></dt>
                  <dd><input id="ghost_pilot_override_tokens-<%= source_element_id %>" type="number" value=40 min=0 max=100></dd>
                </dl>
              <% end %>
            <% end %>
            <% component.with_tab(selected: true, id: "tab-joined") do |tab| %>
              <% tab.with_text { "Latest Suggestion" } %>
              <% tab.with_panel do %>
                <h3>Suggested completion</h3>
                <p>Confidence Score: <span data-id="ghost_pilot_last_suggested_confidence_score"></span></p>
                <pre data-id="ghost_pilot_last_suggestion" class="p-2 mb-4" style="width: 100%; border: 1px solid lightgray; white-space: pre-wrap;">No requests yet...</pre>
                <h3>Full completion</h3>
                <p>Confidence Score: <span data-id="ghost_pilot_last_completed_confidence_score"></span></p>
                <pre data-id="ghost_pilot_last_joined_response" class="p-2 mb-2" style="width: 100%; border: 1px solid lightgray; white-space: pre-wrap;">No requests yet...</pre>
              <% end %>
            <% end %>
            <% component.with_tab(id: "tab-payload") do |tab| %>
              <% tab.with_text { "Request Payload" } %>
              <% tab.with_panel do %>
                <small>This is the latest request body sent to copilot-proxy.</small>
                <pre data-id="ghost_pilot_last_payload" class="p-2" style="width: 100%; border: 1px solid lightgray; white-space: pre-wrap;">No requests yet...</pre>
              <% end %>
            <% end %>
            <% component.with_tab(id: "tab-response") do |tab| %>
              <% tab.with_text { "Raw Response" } %>
              <% tab.with_panel do %>
                <small>This is the raw stream from the body of the copilot-proxy response.</small>
                <pre data-id="ghost_pilot_last_response" class="p-2" style="width: 100%; border: 1px solid lightgray; white-space: pre-wrap;">No requests yet...</pre>
              <% end %>
            <% end %>
          <% end %>
          <input id="use_cors_checkbox" type="checkbox" data-target="copilot-text-completion.useCorsCheckbox" class="ml-2 mr-1" <%= "checked" if allow_cors? %>>
          <label for="use_cors_checkbox">Use copilot-proxy directly</label>
        <% end %>
      <% end %>
    <% end %>


  <% if current_user&.feature_enabled?(:ghost_pilot_screen_reader) %>
    <%= render(Primer::Alpha::Dialog.new(title: "Suggestion Inspector", "data-target": "copilot-text-completion.accessibleDialog", id: accessible_dialog_id)) do |d| %>
      <% d.with_body do %>
        <%= render Primer::Beta::BorderBox.new(my: 3, font_style: :italic, color: :muted) do |box| %>
          <% box.with_body("data-target": "copilot-text-completion.accessibleDialogText") %>
        <% end %>

        <%= render Primer::Beta::Details.new(my: 3, "data-target": "copilot-text-completion.accessibleDialogFullTextToggle") do |component| %>
          <% component.with_summary(button: false) do %>
            <% "Show full text with suggestion" %>
          <% end %>
          <% component.with_body do %>
            <%= render Primer::Beta::BorderBox.new(mt: 3, color: :muted) do |box| %>
              <% box.with_body("data-target": "copilot-text-completion.accessibleDialogFullText") %>
            <% end %>
          <% end %>
        <% end %>
        <div>
          <%= render(Primer::Beta::Button.new(scheme: :primary, "data-close-dialog-id": accessible_dialog_id, "data-target": "copilot-text-completion.accessibleDialogAccept")) { "Accept" } %>
          <%= render(Primer::Beta::Button.new(float: :right, "data-close-dialog-id": accessible_dialog_id, "data-target": "copilot-text-completion.accessibleDialogReject")) { "Reject" } %>
        </div>
      <% end %>
    <% end %>
  <% end %>
</copilot-text-completion>

<% context.each do |c| %>
  <%= render c %>
<% end %>
