# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Turboscan::Proto::PullRequestAlertsResponse`.
# Please instead update this file by running `bin/tapioca dsl Turboscan::Proto::PullRequestAlertsResponse`.

class Turboscan::Proto::PullRequestAlertsResponse
  sig do
    params(
      error_count: T.nilable(Integer),
      fixed_alerts: T.nilable(T.any(Google::Protobuf::RepeatedField[Turboscan::Proto::DiffedAlert], T::Array[Turboscan::Proto::DiffedAlert])),
      fixed_count: T.nilable(Integer),
      latest_upload_time: T.nilable(Google::Protobuf::Timestamp),
      missing_categories: T.nilable(T.any(Google::Protobuf::Map[String, Turboscan::Proto::MissingCategorySummary], T::Hash[String, Turboscan::Proto::MissingCategorySummary])),
      new_alerts: T.nilable(T.any(Google::Protobuf::RepeatedField[Turboscan::Proto::DiffedAlert], T::Array[Turboscan::Proto::DiffedAlert])),
      new_categories: T.nilable(T.any(Google::Protobuf::Map[String, Turboscan::Proto::NewCategorySummary], T::Hash[String, Turboscan::Proto::NewCategorySummary])),
      new_count: T.nilable(Integer),
      note_count: T.nilable(Integer),
      security_critical_count: T.nilable(Integer),
      security_high_count: T.nilable(Integer),
      security_low_count: T.nilable(Integer),
      security_medium_count: T.nilable(Integer),
      warning_count: T.nilable(Integer)
    ).void
  end
  def initialize(error_count: nil, fixed_alerts: T.unsafe(nil), fixed_count: nil, latest_upload_time: nil, missing_categories: T.unsafe(nil), new_alerts: T.unsafe(nil), new_categories: T.unsafe(nil), new_count: nil, note_count: nil, security_critical_count: nil, security_high_count: nil, security_low_count: nil, security_medium_count: nil, warning_count: nil); end

  sig { void }
  def clear_error_count; end

  sig { void }
  def clear_fixed_alerts; end

  sig { void }
  def clear_fixed_count; end

  sig { void }
  def clear_latest_upload_time; end

  sig { void }
  def clear_missing_categories; end

  sig { void }
  def clear_new_alerts; end

  sig { void }
  def clear_new_categories; end

  sig { void }
  def clear_new_count; end

  sig { void }
  def clear_note_count; end

  sig { void }
  def clear_security_critical_count; end

  sig { void }
  def clear_security_high_count; end

  sig { void }
  def clear_security_low_count; end

  sig { void }
  def clear_security_medium_count; end

  sig { void }
  def clear_warning_count; end

  sig { returns(Integer) }
  def error_count; end

  sig { params(value: Integer).void }
  def error_count=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Turboscan::Proto::DiffedAlert]) }
  def fixed_alerts; end

  sig { params(value: Google::Protobuf::RepeatedField[Turboscan::Proto::DiffedAlert]).void }
  def fixed_alerts=(value); end

  sig { returns(Integer) }
  def fixed_count; end

  sig { params(value: Integer).void }
  def fixed_count=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def latest_upload_time; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def latest_upload_time=(value); end

  sig { returns(Google::Protobuf::Map[String, Turboscan::Proto::MissingCategorySummary]) }
  def missing_categories; end

  sig { params(value: Google::Protobuf::Map[String, Turboscan::Proto::MissingCategorySummary]).void }
  def missing_categories=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Turboscan::Proto::DiffedAlert]) }
  def new_alerts; end

  sig { params(value: Google::Protobuf::RepeatedField[Turboscan::Proto::DiffedAlert]).void }
  def new_alerts=(value); end

  sig { returns(Google::Protobuf::Map[String, Turboscan::Proto::NewCategorySummary]) }
  def new_categories; end

  sig { params(value: Google::Protobuf::Map[String, Turboscan::Proto::NewCategorySummary]).void }
  def new_categories=(value); end

  sig { returns(Integer) }
  def new_count; end

  sig { params(value: Integer).void }
  def new_count=(value); end

  sig { returns(Integer) }
  def note_count; end

  sig { params(value: Integer).void }
  def note_count=(value); end

  sig { returns(Integer) }
  def security_critical_count; end

  sig { params(value: Integer).void }
  def security_critical_count=(value); end

  sig { returns(Integer) }
  def security_high_count; end

  sig { params(value: Integer).void }
  def security_high_count=(value); end

  sig { returns(Integer) }
  def security_low_count; end

  sig { params(value: Integer).void }
  def security_low_count=(value); end

  sig { returns(Integer) }
  def security_medium_count; end

  sig { params(value: Integer).void }
  def security_medium_count=(value); end

  sig { returns(Integer) }
  def warning_count; end

  sig { params(value: Integer).void }
  def warning_count=(value); end
end
