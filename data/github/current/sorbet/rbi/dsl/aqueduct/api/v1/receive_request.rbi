# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Aqueduct::Api::V1::ReceiveRequest`.
# Please instead update this file by running `bin/tapioca dsl Aqueduct::Api::V1::ReceiveRequest`.

class Aqueduct::Api::V1::ReceiveRequest
  sig do
    params(
      app: T.nilable(String),
      bypass_pausing: T.nilable(T::Boolean),
      client_id: T.nilable(String),
      drop_job: T.nilable(T::Boolean),
      fanout: T.nilable(T::Boolean),
      queues: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      timeout_ms: T.nilable(Integer),
      worker: T.nilable(Aqueduct::Api::V1::Worker)
    ).void
  end
  def initialize(app: nil, bypass_pausing: nil, client_id: nil, drop_job: nil, fanout: nil, queues: T.unsafe(nil), timeout_ms: nil, worker: nil); end

  sig { returns(String) }
  def app; end

  sig { params(value: String).void }
  def app=(value); end

  sig { returns(T::Boolean) }
  def bypass_pausing; end

  sig { params(value: T::Boolean).void }
  def bypass_pausing=(value); end

  sig { void }
  def clear_app; end

  sig { void }
  def clear_bypass_pausing; end

  sig { void }
  def clear_client_id; end

  sig { void }
  def clear_drop_job; end

  sig { void }
  def clear_fanout; end

  sig { void }
  def clear_queues; end

  sig { void }
  def clear_timeout_ms; end

  sig { void }
  def clear_worker; end

  sig { returns(String) }
  def client_id; end

  sig { params(value: String).void }
  def client_id=(value); end

  sig { returns(T::Boolean) }
  def drop_job; end

  sig { params(value: T::Boolean).void }
  def drop_job=(value); end

  sig { returns(T::Boolean) }
  def fanout; end

  sig { params(value: T::Boolean).void }
  def fanout=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def queues; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def queues=(value); end

  sig { returns(Integer) }
  def timeout_ms; end

  sig { params(value: Integer).void }
  def timeout_ms=(value); end

  sig { returns(T.nilable(Aqueduct::Api::V1::Worker)) }
  def worker; end

  sig { params(value: T.nilable(Aqueduct::Api::V1::Worker)).void }
  def worker=(value); end
end
