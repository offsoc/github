<%# erblint:counter DeprecatedComponentsCounter 1 %>
<details class="details-reset details-overlay d-inline-block mb-2 mr-2">
  <%= render Primer::ButtonComponent.new(variant: :medium, tag: :summary, "aria-haspopup": "true", classes: "btn") do %>
    <i>Billing country:</i> <%= filter.key?(:billing_country) ? filter[:billing_country].join(", ").titleize : "All" %>
    <span class="dropdown-caret"></span>
  <% end %>

  <div class="SelectMenu SelectMenu--hasFilter">
    <details-menu role="menu" class="SelectMenu" style="z-index: 99;" preload><%# erblint:disable Primer::Accessibility::DetailsMenuMigration %>
      <div class="SelectMenu-modal">
        <header class="SelectMenu-header">
          <span class="SelectMenu-title">Filter by billing country or region</span>
        </header>

        <%= form_with class: "SelectMenu-filter" do %>
          <input
            class="SelectMenu-input form-control js-filterable-field"
            id="billing-country-filter-field"
            type="text"
            autocomplete="off"
            spellcheck="false"
            autofocus
            placeholder="Enter country/region name"
            aria-label="Filter billing country">
        <% end %>

        <div class="SelectMenu-list" data-filterable-for="billing-country-filter-field" data-filterable-type="substring">
          <%
            current_filter = filter.fetch(:billing_country, [])
            all_params = { query: query, order: order, filter: filter.except(:billing_country) }
          %>

          <a href="?<%= all_params.to_query %>" class="SelectMenu-item" <% if filter[:billing_country].blank? %>aria-checked="true"<% end%> role="menuitemcheckbox">
            <%= render Primer::Beta::Octicon.new(icon: "check", classes: "SelectMenu-icon SelectMenu-icon--check") %>
            <span class="select-menu-item-text">All countries/regions</span>
          </a>

          <%
            supported_selected = current_filter.include?("supported")
            supported_filter = supported_selected ? current_filter - ["supported"] : current_filter + ["supported"]
            supported_params = { query: query, order: order, filter: filter.merge(billing_country: supported_filter) }
          %>
          <a href="?<%= supported_params.to_query %>" class="SelectMenu-item" <% if supported_selected %>aria-checked="true"<% end%> role="menuitemcheckbox">
            <%= render Primer::Beta::Octicon.new(icon: "check", classes: "SelectMenu-icon SelectMenu-icon--check") %>
            <span class="select-menu-item-text">All supported</span>
          </a>

          <%
            unsupported_selected = current_filter.include?("unsupported")
            unsupported_filter = unsupported_selected ? current_filter - ["unsupported"] : current_filter + ["unsupported"]
            unsupported_params = { query: query, order: order, filter: filter.merge(billing_country: unsupported_filter) }
          %>
          <a href="?<%= unsupported_params.to_query %>" class="SelectMenu-item" <% if unsupported_selected %>aria-checked="true"<% end%> role="menuitemcheckbox">
            <%= render Primer::Beta::Octicon.new(icon: "check", classes: "SelectMenu-icon SelectMenu-icon--check") %>
            <span class="select-menu-item-text">All unsupported</span>
          </a>

          <div class="SelectMenu-divider">By Country</div>

          <% Braintree::Address::CountryNames.map do |country_name, alpha2, _, _| %>
            <%
              country_value = alpha2.upcase
              current_filter = filter.fetch(:billing_country, [])
              currently_selected = current_filter.include?(country_value)

              new_filter = if currently_selected
                current_filter - [country_value]
              else
                current_filter + [country_value]
              end

              country_params = { query: query, order: order, filter: filter.merge(billing_country: new_filter) }
            %>
            <a href="?<%= country_params.to_query %>" class="SelectMenu-item" <% if currently_selected %>aria-checked="true"<% end%> role="menuitemcheckbox">
              <%= render Primer::Beta::Octicon.new(icon: "check", classes: "SelectMenu-icon SelectMenu-icon--check") %>
              <span class="select-menu-item-text"><%= country_name.titleize %></span>
            </a>
          <% end %>
        </div>
      </div>
    </details-menu>
  </div>
</details>
