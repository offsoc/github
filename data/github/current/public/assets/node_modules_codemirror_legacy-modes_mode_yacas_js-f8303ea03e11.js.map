{"version":3,"file":"chunk-node_modules_codemirror_legacy-modes_mode_yacas_js-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@codemirror/legacy-modes/mode/yacas.js"],"sourcesContent":["function words(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\n\nvar bodiedOps = words(\"Assert BackQuote D Defun Deriv For ForEach FromFile \" +\n                      \"FromString Function Integrate InverseTaylor Limit \" +\n                      \"LocalSymbols Macro MacroRule MacroRulePattern \" +\n                      \"NIntegrate Rule RulePattern Subst TD TExplicitSum \" +\n                      \"TSum Taylor Taylor1 Taylor2 Taylor3 ToFile \" +\n                      \"ToStdout ToString TraceRule Until While\");\n\n// patterns\nvar pFloatForm  = \"(?:(?:\\\\.\\\\d+|\\\\d+\\\\.\\\\d*|\\\\d+)(?:[eE][+-]?\\\\d+)?)\";\nvar pIdentifier = \"(?:[a-zA-Z\\\\$'][a-zA-Z0-9\\\\$']*)\";\n\n// regular expressions\nvar reFloatForm    = new RegExp(pFloatForm);\nvar reIdentifier   = new RegExp(pIdentifier);\nvar rePattern      = new RegExp(pIdentifier + \"?_\" + pIdentifier);\nvar reFunctionLike = new RegExp(pIdentifier + \"\\\\s*\\\\(\");\n\nfunction tokenBase(stream, state) {\n  var ch;\n\n  // get next character\n  ch = stream.next();\n\n  // string\n  if (ch === '\"') {\n    state.tokenize = tokenString;\n    return state.tokenize(stream, state);\n  }\n\n  // comment\n  if (ch === '/') {\n    if (stream.eat('*')) {\n      state.tokenize = tokenComment;\n      return state.tokenize(stream, state);\n    }\n    if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n  }\n\n  // go back one character\n  stream.backUp(1);\n\n  // update scope info\n  var m = stream.match(/^(\\w+)\\s*\\(/, false);\n  if (m !== null && bodiedOps.hasOwnProperty(m[1]))\n    state.scopes.push('bodied');\n\n  var scope = currentScope(state);\n\n  if (scope === 'bodied' && ch === '[')\n    state.scopes.pop();\n\n  if (ch === '[' || ch === '{' || ch === '(')\n    state.scopes.push(ch);\n\n  scope = currentScope(state);\n\n  if (scope === '[' && ch === ']' ||\n      scope === '{' && ch === '}' ||\n      scope === '(' && ch === ')')\n    state.scopes.pop();\n\n  if (ch === ';') {\n    while (scope === 'bodied') {\n      state.scopes.pop();\n      scope = currentScope(state);\n    }\n  }\n\n  // look for ordered rules\n  if (stream.match(/\\d+ *#/, true, false)) {\n    return 'qualifier';\n  }\n\n  // look for numbers\n  if (stream.match(reFloatForm, true, false)) {\n    return 'number';\n  }\n\n  // look for placeholders\n  if (stream.match(rePattern, true, false)) {\n    return 'variableName.special';\n  }\n\n  // match all braces separately\n  if (stream.match(/(?:\\[|\\]|{|}|\\(|\\))/, true, false)) {\n    return 'bracket';\n  }\n\n  // literals looking like function calls\n  if (stream.match(reFunctionLike, true, false)) {\n    stream.backUp(1);\n    return 'variableName.function';\n  }\n\n  // all other identifiers\n  if (stream.match(reIdentifier, true, false)) {\n    return 'variable';\n  }\n\n  // operators; note that operators like @@ or /; are matched separately for each symbol.\n  if (stream.match(/(?:\\\\|\\+|\\-|\\*|\\/|,|;|\\.|:|@|~|=|>|<|&|\\||_|`|'|\\^|\\?|!|%|#)/, true, false)) {\n    return 'operator';\n  }\n\n  // everything else is an error\n  return 'error';\n}\n\nfunction tokenString(stream, state) {\n  var next, end = false, escaped = false;\n  while ((next = stream.next()) != null) {\n    if (next === '\"' && !escaped) {\n      end = true;\n      break;\n    }\n    escaped = !escaped && next === '\\\\';\n  }\n  if (end && !escaped) {\n    state.tokenize = tokenBase;\n  }\n  return 'string';\n};\n\nfunction tokenComment(stream, state) {\n  var prev, next;\n  while((next = stream.next()) != null) {\n    if (prev === '*' && next === '/') {\n      state.tokenize = tokenBase;\n      break;\n    }\n    prev = next;\n  }\n  return 'comment';\n}\n\nfunction currentScope(state) {\n  var scope = null;\n  if (state.scopes.length > 0)\n    scope = state.scopes[state.scopes.length - 1];\n  return scope;\n}\n\nexport const yacas = {\n  name: \"yacas\",\n  startState: function() {\n    return {\n      tokenize: tokenBase,\n      scopes: []\n    };\n  },\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null;\n    return state.tokenize(stream, state);\n  },\n  indent: function(state, textAfter, cx) {\n    if (state.tokenize !== tokenBase && state.tokenize !== null)\n      return null;\n\n    var delta = 0;\n    if (textAfter === ']' || textAfter === '];' ||\n        textAfter === '}' || textAfter === '};' ||\n        textAfter === ');')\n      delta = -1;\n\n    return (state.scopes.length + delta) * cx.unit;\n  },\n\n  languageData: {\n    electricInput: /[{}\\[\\]()\\;]/,\n    commentTokens: {line: \"//\", block: {open: \"/*\", close: \"*/\"}}\n  }\n};\n"],"names":["bodiedOps","words","str","obj","split","i","length","pIdentifier","reFloatForm","reIdentifier","RegExp","rePattern","reFunctionLike","tokenBase","stream","state","ch","next","tokenize","tokenString","eat","tokenComment","skipToEnd","backUp","m","match","hasOwnProperty","scopes","push","scope","currentScope","pop","end","escaped","prev","yacas","name","startState","token","eatSpace","indent","textAfter","cx","delta","unit","languageData","electricInput","commentTokens","line","block","open","close"],"sourceRoot":""}