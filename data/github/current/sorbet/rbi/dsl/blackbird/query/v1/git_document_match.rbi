# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Blackbird::Query::V1::GitDocumentMatch`.
# Please instead update this file by running `bin/tapioca dsl Blackbird::Query::V1::GitDocumentMatch`.

class Blackbird::Query::V1::GitDocumentMatch
  sig do
    params(
      blob_sha: T.nilable(String),
      content: T.nilable(String),
      language_id: T.nilable(Integer),
      locations: T.nilable(T.any(Google::Protobuf::RepeatedField[Blackbird::Query::V1::Location], T::Array[Blackbird::Query::V1::Location])),
      retrieval_position: T.nilable(Integer),
      scoring_info: T.nilable(Blackbird::Query::V1::ScoringInfo),
      term_matches: T.nilable(T.any(Google::Protobuf::RepeatedField[Blackbird::Query::V1::Range], T::Array[Blackbird::Query::V1::Range])),
      total_locations: T.nilable(Integer)
    ).void
  end
  def initialize(blob_sha: nil, content: nil, language_id: nil, locations: T.unsafe(nil), retrieval_position: nil, scoring_info: nil, term_matches: T.unsafe(nil), total_locations: nil); end

  sig { returns(String) }
  def blob_sha; end

  sig { params(value: String).void }
  def blob_sha=(value); end

  sig { void }
  def clear_blob_sha; end

  sig { void }
  def clear_content; end

  sig { void }
  def clear_language_id; end

  sig { void }
  def clear_locations; end

  sig { void }
  def clear_retrieval_position; end

  sig { void }
  def clear_scoring_info; end

  sig { void }
  def clear_term_matches; end

  sig { void }
  def clear_total_locations; end

  sig { returns(String) }
  def content; end

  sig { params(value: String).void }
  def content=(value); end

  sig { returns(Integer) }
  def language_id; end

  sig { params(value: Integer).void }
  def language_id=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Blackbird::Query::V1::Location]) }
  def locations; end

  sig { params(value: Google::Protobuf::RepeatedField[Blackbird::Query::V1::Location]).void }
  def locations=(value); end

  sig { returns(Integer) }
  def retrieval_position; end

  sig { params(value: Integer).void }
  def retrieval_position=(value); end

  sig { returns(T.nilable(Blackbird::Query::V1::ScoringInfo)) }
  def scoring_info; end

  sig { params(value: T.nilable(Blackbird::Query::V1::ScoringInfo)).void }
  def scoring_info=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Blackbird::Query::V1::Range]) }
  def term_matches; end

  sig { params(value: Google::Protobuf::RepeatedField[Blackbird::Query::V1::Range]).void }
  def term_matches=(value); end

  sig { returns(Integer) }
  def total_locations; end

  sig { params(value: Integer).void }
  def total_locations=(value); end
end
