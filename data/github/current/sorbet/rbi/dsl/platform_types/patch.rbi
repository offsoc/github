# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PlatformTypes::Patch`.
# Please instead update this file by running `bin/tapioca dsl PlatformTypes::Patch`.

class PlatformTypes::Patch < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def blob_url; end

  sig { returns(T::Boolean) }
  def blob_url?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def contents_url; end

  sig { returns(T::Boolean) }
  def contents_url?; end

  sig { returns(T.nilable(T::Array[PlatformTypes::DiffLine])) }
  def diff_lines; end

  sig { returns(T::Boolean) }
  def diff_lines?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(T::Boolean) }
  def is_binary; end

  sig { returns(T::Boolean) }
  def is_binary?; end

  sig { returns(T::Boolean) }
  def is_large_diff; end

  sig { returns(T::Boolean) }
  def is_large_diff?; end

  sig { returns(T::Boolean) }
  def is_lfs_pointer; end

  sig { returns(T::Boolean) }
  def is_lfs_pointer?; end

  sig { returns(T::Boolean) }
  def is_submodule; end

  sig { returns(T::Boolean) }
  def is_submodule?; end

  sig { returns(T::Boolean) }
  def is_too_big; end

  sig { returns(T::Boolean) }
  def is_too_big?; end

  sig { returns(Integer) }
  def lines_added; end

  sig { returns(T::Boolean) }
  def lines_added?; end

  sig { returns(Integer) }
  def lines_changed; end

  sig { returns(T::Boolean) }
  def lines_changed?; end

  sig { returns(Integer) }
  def lines_deleted; end

  sig { returns(T::Boolean) }
  def lines_deleted?; end

  sig { returns(T.nilable(PlatformTypes::TreeEntry)) }
  def new_tree_entry; end

  sig { returns(T::Boolean) }
  def new_tree_entry?; end

  sig { returns(String) }
  def oid; end

  sig { returns(T::Boolean) }
  def oid?; end

  sig { returns(T.nilable(PlatformTypes::TreeEntry)) }
  def old_tree_entry; end

  sig { returns(T::Boolean) }
  def old_tree_entry?; end

  sig { returns(String) }
  def path; end

  sig { returns(T::Boolean) }
  def path?; end

  sig { returns(String) }
  def path_digest; end

  sig { returns(T::Boolean) }
  def path_digest?; end

  sig { returns(PlatformTypes::PathOwnership) }
  def path_ownership; end

  sig { returns(T::Boolean) }
  def path_ownership?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def raw_url; end

  sig { returns(T::Boolean) }
  def raw_url?; end

  sig { returns(T.nilable(Integer)) }
  def similarity; end

  sig { returns(T::Boolean) }
  def similarity?; end

  sig { returns(String) }
  def status; end

  sig { returns(T::Boolean) }
  def status?; end

  sig { returns(T.nilable(String)) }
  def text; end

  sig { returns(T::Boolean) }
  def text?; end

  sig { returns(T.nilable(String)) }
  def truncated_reason; end

  sig { returns(T::Boolean) }
  def truncated_reason?; end

  sig { returns(T.nilable(String)) }
  def unicode_text; end

  sig { returns(T::Boolean) }
  def unicode_text?; end

  sig { returns(T.nilable(String)) }
  def viewer_viewed_state; end

  sig { returns(T::Boolean) }
  def viewer_viewed_state?; end
end
