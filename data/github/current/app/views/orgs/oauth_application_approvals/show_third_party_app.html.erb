<%# erblint:counter DeprecatedComponentsCounter 3 %>
<%# rubocop:disable Lint/InstanceVariable %>
<% page_info responsive: false, :title => "Application access policy", :selected_link => :organization_oauth_application_policy %>

<%= render layout: "orgs/settings/layout" do %>
  <div class="settings-next">
    <% if GitHub.flipper[:alert_on_spammy_apps].enabled? && view.application.spammy? %>
      <div class="flash-messages" <%= test_selector("spammy_flash_alert") %>>
        <%= render(Primer::Alpha::Banner.new(scheme: :danger)) do %>
          The owner of this application has been marked as spammy.
        <% end %>
      </div>
    <% end %>

    <div class="oauth-application-allowlist js-oauth-application-allowlist">

      <%= render :partial => "oauth_applications/application_header", :locals => { :view => view }  %>

      <%= render Primer::Beta::Subhead.new(spacious: true, hide_border: true) do |component| %>
        <% component.with_heading(tag: :h2) do %>Access<% end %>
      <% end %>

      <div class="listgroup">

        <% if current_organization %>
          <% org_display_login = current_organization.display_login %>
          <div class="listgroup-item">
            <strong class="color-fg-default">Currently:</strong>
            <% if current_organization.approval_denied_for_oauth_application?(view.application) || current_organization.approval_pending_for_oauth_application?(view.application) %>
              <span class="app-denied color-fg-muted ml-2"><%= primer_octicon(:x, color: :danger, mr: 1) %>No <% unless current_organization.first_party_oauth_app_controls_feature_enabled? %>private<% end %> access</span>
            <% end %>
            <% if current_organization.allows_oauth_application?(view.application) %>
              <span class="app-approved color-fg-muted ml-2"><%= primer_octicon(:check, mr: 1) %>Approved</span>
            <% end %>
          </div>
        <% end %>

        <div class="listgroup-item lh-default">
          <%= form_tag org_set_application_approval_state_path(current_organization, @application.id, :flash => true), "method" => :put, "class" => "js-org-application-access-form float-right" do %>
            <% if current_organization.approval_pending_for_oauth_application?(@application) %>
              <%= render Primer::ButtonComponent.new(mr: 2, classes: "js-deny-this-request") do %>Deny this request<% end %>
            <% end %>
            <% if current_organization.allows_oauth_application?(@application) %>
              <%= hidden_field_tag "state", "denied" %>
              <%= render Primer::ButtonComponent.new(type: :submit, scheme: :danger) do %>Deny access<% end %>
            <% end %>
            <% if view.show_grant_access_button? %>
              <%= hidden_field_tag "state", "approved" %>
              <%= render Primer::ButtonComponent.new(type: :submit, scheme: :danger) do %>Grant access<% end %>
            <% end %>
          <% end %>
          <strong class="color-fg-default">
            Review third-party application access request
          </strong>
          <% if current_organization.allows_oauth_application?(@application) %>
            <div class="color-fg-muted">
              Denying access will remove this applicationâ€™s ability to request access to <% unless current_organization.first_party_oauth_app_controls_feature_enabled? %>private<% end %> data in the <strong><%= org_display_login %></strong> organization.
            </div>
          <% else %>
            <div class="color-fg-muted">
              Granting access will give this application the ability to request access to <% unless current_organization.first_party_oauth_app_controls_feature_enabled? %>private<% end %> data in the <strong><%= org_display_login %></strong> organization.
            </div>
          <% end %>
        </div>

      </div>

      <%= render partial: "orgs/oauth_application_policy/note", locals: { current_organization: current_organization } %>
    </div>
  </div>
<% end %>
