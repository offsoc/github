# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Aleph::Proto::RequestIndexRequest`.
# Please instead update this file by running `bin/tapioca dsl Aleph::Proto::RequestIndexRequest`.

class Aleph::Proto::RequestIndexRequest
  sig do
    params(
      reason: T.nilable(T.any(Symbol, Integer)),
      ref: T.nilable(String),
      repo_commit: T.nilable(Aleph::Proto::RepoCommit),
      search_key: T.nilable(String),
      should_index_future_pushes: T.nilable(T::Boolean)
    ).void
  end
  def initialize(reason: nil, ref: nil, repo_commit: nil, search_key: nil, should_index_future_pushes: nil); end

  sig { void }
  def clear_reason; end

  sig { void }
  def clear_ref; end

  sig { void }
  def clear_repo_commit; end

  sig { void }
  def clear_search_key; end

  sig { void }
  def clear_should_index_future_pushes; end

  sig { returns(T.nilable(Symbol)) }
  def indexing_scope; end

  sig { returns(T.any(Symbol, Integer)) }
  def reason; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def reason=(value); end

  sig { returns(String) }
  def ref; end

  sig { params(value: String).void }
  def ref=(value); end

  sig { returns(T.nilable(Aleph::Proto::RepoCommit)) }
  def repo_commit; end

  sig { params(value: T.nilable(Aleph::Proto::RepoCommit)).void }
  def repo_commit=(value); end

  sig { returns(String) }
  def search_key; end

  sig { params(value: String).void }
  def search_key=(value); end

  sig { returns(T::Boolean) }
  def should_index_future_pushes; end

  sig { params(value: T::Boolean).void }
  def should_index_future_pushes=(value); end
end
