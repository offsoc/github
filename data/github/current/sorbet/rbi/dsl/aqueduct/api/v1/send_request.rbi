# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Aqueduct::Api::V1::SendRequest`.
# Please instead update this file by running `bin/tapioca dsl Aqueduct::Api::V1::SendRequest`.

class Aqueduct::Api::V1::SendRequest
  sig do
    params(
      app: T.nilable(String),
      client_id: T.nilable(String),
      deliver_at: T.nilable(Google::Protobuf::Timestamp),
      drop_job: T.nilable(T::Boolean),
      external_id: T.nilable(String),
      headers: T.nilable(T.any(Google::Protobuf::Map[String, String], T::Hash[String, String])),
      job_id: T.nilable(String),
      max_redelivery_attempts: T.nilable(Google::Protobuf::UInt32Value),
      payload: T.nilable(String),
      producer_id: T.nilable(String),
      producer_sequence: T.nilable(Integer),
      queue: T.nilable(String),
      redelivery_timeout_secs: T.nilable(Google::Protobuf::UInt32Value),
      ttl_seconds: T.nilable(Google::Protobuf::UInt32Value)
    ).void
  end
  def initialize(app: nil, client_id: nil, deliver_at: nil, drop_job: nil, external_id: nil, headers: T.unsafe(nil), job_id: nil, max_redelivery_attempts: nil, payload: nil, producer_id: nil, producer_sequence: nil, queue: nil, redelivery_timeout_secs: nil, ttl_seconds: nil); end

  sig { returns(String) }
  def app; end

  sig { params(value: String).void }
  def app=(value); end

  sig { void }
  def clear_app; end

  sig { void }
  def clear_client_id; end

  sig { void }
  def clear_deliver_at; end

  sig { void }
  def clear_drop_job; end

  sig { void }
  def clear_external_id; end

  sig { void }
  def clear_headers; end

  sig { void }
  def clear_job_id; end

  sig { void }
  def clear_max_redelivery_attempts; end

  sig { void }
  def clear_payload; end

  sig { void }
  def clear_producer_id; end

  sig { void }
  def clear_producer_sequence; end

  sig { void }
  def clear_queue; end

  sig { void }
  def clear_redelivery_timeout_secs; end

  sig { void }
  def clear_ttl_seconds; end

  sig { returns(String) }
  def client_id; end

  sig { params(value: String).void }
  def client_id=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def deliver_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def deliver_at=(value); end

  sig { returns(T::Boolean) }
  def drop_job; end

  sig { params(value: T::Boolean).void }
  def drop_job=(value); end

  sig { returns(String) }
  def external_id; end

  sig { params(value: String).void }
  def external_id=(value); end

  sig { returns(Google::Protobuf::Map[String, String]) }
  def headers; end

  sig { params(value: Google::Protobuf::Map[String, String]).void }
  def headers=(value); end

  sig { returns(String) }
  def job_id; end

  sig { params(value: String).void }
  def job_id=(value); end

  sig { returns(T.nilable(Google::Protobuf::UInt32Value)) }
  def max_redelivery_attempts; end

  sig { params(value: T.nilable(Google::Protobuf::UInt32Value)).void }
  def max_redelivery_attempts=(value); end

  sig { returns(String) }
  def payload; end

  sig { params(value: String).void }
  def payload=(value); end

  sig { returns(String) }
  def producer_id; end

  sig { params(value: String).void }
  def producer_id=(value); end

  sig { returns(Integer) }
  def producer_sequence; end

  sig { params(value: Integer).void }
  def producer_sequence=(value); end

  sig { returns(String) }
  def queue; end

  sig { params(value: String).void }
  def queue=(value); end

  sig { returns(T.nilable(Google::Protobuf::UInt32Value)) }
  def redelivery_timeout_secs; end

  sig { params(value: T.nilable(Google::Protobuf::UInt32Value)).void }
  def redelivery_timeout_secs=(value); end

  sig { returns(T.nilable(Google::Protobuf::UInt32Value)) }
  def ttl_seconds; end

  sig { params(value: T.nilable(Google::Protobuf::UInt32Value)).void }
  def ttl_seconds=(value); end
end
