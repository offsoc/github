{"version":3,"file":"chunk-node_modules_codemirror_legacy-modes_mode_livescript_js-xxxxxxxxxxxx.js","mappings":"uLAAA,IAAIA,EAAY,SAASC,CAAM,CAAEC,CAAK,EACpC,IAAIC,EAAYD,EAAME,IAAI,EAAI,QAC9B,GAAID,EAAW,CACbD,EAAME,IAAI,CAAGF,EAAME,IAAI,CACvB,IAAIC,EAAKC,CAAK,CAACH,EAAU,CACzB,GAAIE,EAAGE,MAAM,CAAE,CACb,IAAK,IAAIC,EAAK,EAAGA,EAAKH,EAAGI,MAAM,CAAE,EAAED,EAAI,CACrC,IAAIE,EAAIL,CAAE,CAACG,EAAG,CACd,GAAIE,EAAEC,KAAK,EAAIV,EAAOW,KAAK,CAACF,EAAEC,KAAK,EAEjC,OADAT,EAAME,IAAI,CAAGM,EAAEN,IAAI,EAAIF,EAAME,IAAI,CAC1BM,EAAEG,KAAK,CAIlB,OADAZ,EAAOG,IAAI,GACJ,OACT,CACA,GAAIH,EAAOW,KAAK,CAACF,EAAIJ,CAAK,CAACH,EAAU,SACnC,EAAMQ,KAAK,EAAIV,EAAOW,KAAK,CAACF,EAAEC,KAAK,GACjCT,EAAME,IAAI,CAAGM,EAAEN,IAAI,CACZM,EAAEG,KAAK,GAEdZ,EAAOG,IAAI,GACJ,QAGb,CAEA,OADAH,EAAOG,IAAI,GACJ,OACT,EAEIU,EAAa,2EACbC,EAAWC,OAAO,4HAA8HF,EAAa,aAC7JG,EAAa,qCACbC,EAAa,CACfL,MAAO,SACPF,MAAO,IACT,EACIL,EAAQ,CACVa,MAAO,CACL,CACEN,MAAO,aACPF,MAAO,OACPP,KAAM,SACR,EAAG,CACDS,MAAO,UACPF,MAAO,KACT,EAAG,CACDE,MAAO,UACPF,MAAO,wUAA0UM,CACnV,EAAG,CACDJ,MAAO,OACPF,MAAO,mDAAqDM,CAC9D,EAAG,CACDJ,MAAO,UACPF,MAAO,qFAAuFM,CAChG,EAAG,CACDJ,MAAO,qBACPF,MAAO,kJAAoJM,CAC7J,EAAG,CACDJ,MAAO,iCACPF,MAAO,mFAAqFM,CAC9F,EAAG,CACDJ,MAAO,wBACPF,MAAO,gDAAkDM,CAC3D,EAAG,CACDJ,MAAO,eACPF,MAAOG,EAAa,eACtB,EAAG,CACDD,MAAO,eACPF,MAAOG,CACT,EAAG,CACDD,MAAO,kBACPF,MAAO,oBACT,EAAG,CACDE,MAAO,UACPF,MAAO,mBACPP,KAAM,KACR,EAAG,CACDS,MAAO,kBACPF,MAAO,UACPP,KAAM,KACR,EAAG,CACDS,MAAO,SACPF,MAAO,uBACT,EAAG,CACDE,MAAO,YACPF,MAAO,MACPP,KAAM,MACR,EAAG,CACDS,MAAO,YACPF,MAAO,MACPP,KAAM,OACR,EAAG,CACDS,MAAO,SACPF,MAAO,IACPP,KAAM,SACR,EAAG,CACDS,MAAO,SACPF,MAAO,IACPP,KAAM,UACR,EAAG,CACDS,MAAO,SACPF,MAAO,IACPP,KAAM,IACR,EAAG,CACDS,MAAO,SACPF,MAAO,OACPP,KAAM,OACR,EAAG,CACDS,MAAO,SACPF,MAAO,KACPP,KAAM,SACR,EAAG,CACDS,MAAO,SACPF,MAAO,kHACPP,KAAM,KACR,EAAG,CACDS,MAAO,SACPF,MAAO,6JACT,EAAG,CACDE,MAAO,QACPF,MAAO,OACT,EAAG,CACDE,MAAO,QACPF,MAAO,UACPP,KAAM,KACR,EAAG,CACDS,MAAO,kBACPF,MAAO,MACT,EAAG,CACDE,MAAO,UACPF,MAAO,MACT,EACD,CACDS,QAAS,CACP,CACEP,MAAO,SACPF,MAAO,qBACPP,KAAM,OACR,EAAG,CACDS,MAAO,SACPF,MAAO,QACT,EAAG,CACDE,MAAO,UACPF,MAAO,cACT,EAAG,CACDE,MAAO,SACPF,MAAO,MACT,EACD,CACDU,IAAK,CACH,CACER,MAAO,kBACPF,MAAO,SACT,EAAG,CACDE,MAAO,eACPF,MAAOG,EACPV,KAAM,OACR,EAAG,CACDS,MAAO,UACPF,MAAO,GACPP,KAAM,OACR,EACD,CACDkB,QAAS,CACP,CACET,MAAO,aACPF,MAAO,UACPP,KAAM,OACR,EAAG,CACDS,MAAO,aACPF,MAAO,IACT,EACD,CACDY,KAAM,CACJ,CACEV,MAAO,SACPF,MAAO,SACPP,KAAM,KACR,EAAGc,EACJ,CACDM,MAAO,CACL,CACEX,MAAO,SACPF,MAAO,SACPP,KAAM,KACR,EAAGc,EACJ,CACDO,QAAS,CACP,CACEZ,MAAO,SACPF,MAAO,gCACPP,KAAM,KACR,EAAGc,EACJ,CACDQ,SAAU,CACR,CACEb,MAAO,SACPF,MAAO,gCACPP,KAAM,KACR,EAAGc,EACJ,CACDS,GAAI,CACF,CACEd,MAAO,SACPF,MAAO,gCACPP,KAAM,KACR,EAAGc,EACJ,CACDU,MAAO,CACL,CACEf,MAAO,SACPF,MAAO,UACPP,KAAM,KACR,EAAGc,EACJ,EAEH,IAAK,IAAIW,KAAOvB,EAAO,CACrB,IAAII,EAAIJ,CAAK,CAACuB,EAAI,CAClB,GAAInB,EAAEH,MAAM,CACV,IAAK,IAAIuB,EAAI,EAAGC,EAAMrB,EAAED,MAAM,CAAEqB,EAAIC,EAAK,EAAED,EAAG,CAC5C,IAAIE,EAAKtB,CAAC,CAACoB,EAAE,CACW,UAApB,OAAOE,EAAGrB,KAAK,EACjBL,CAAAA,CAAK,CAACuB,EAAI,CAACC,EAAE,CAACnB,KAAK,CAAG,OAAW,IAAMqB,EAAGrB,KAAK,EAEnD,KAC6B,UAApB,OAAOqB,EAAGrB,KAAK,EACxBL,CAAAA,CAAK,CAACuB,EAAI,CAAClB,KAAK,CAAG,OAAW,IAAMD,EAAEC,KAAK,EAE/C,CAEO,IAAMsB,EAAa,CACxBC,KAAM,aACNC,WAAY,WACV,MAAO,CACL/B,KAAM,QACNgC,UAAW,CAACC,MAAO,KAAMC,OAAQ,EAAGC,QAAS,EAAE,CACjD,CACF,EACA1B,MAAO,SAASZ,CAAM,CAAEC,CAAK,EAC3B,KAAOD,EAAOuC,GAAG,EAAIvC,EAAOkB,KAAK,EAC/B,IAAIkB,EAAQrC,EAAUC,EAAQC,GAMhC,OALAA,EAAMkC,SAAS,CAAG,CAChBC,MAAOA,EACPC,OAAQrC,EAAOwC,WAAW,GAC1BF,QAAStC,EAAOyC,OAAO,EACzB,EACOL,EAAMM,OAAO,CAAC,MAAO,IAC9B,EACAL,OAAQ,SAASpC,CAAK,EACpB,IAAIuC,EAAcvC,EAAMkC,SAAS,CAACE,MAAM,CAIxC,OAHIpC,EAAMkC,SAAS,CAACG,OAAO,CAAC3B,KAAK,CAACG,IAChC0B,CAAAA,GAAe,GAEVA,CACT,CACF,C","sources":["node_modules/@codemirror/legacy-modes/mode/livescript.js"],"sourcesContent":["var tokenBase = function(stream, state) {\n  var next_rule = state.next || \"start\";\n  if (next_rule) {\n    state.next = state.next;\n    var nr = Rules[next_rule];\n    if (nr.splice) {\n      for (var i$ = 0; i$ < nr.length; ++i$) {\n        var r = nr[i$];\n        if (r.regex && stream.match(r.regex)) {\n          state.next = r.next || state.next;\n          return r.token;\n        }\n      }\n      stream.next();\n      return 'error';\n    }\n    if (stream.match(r = Rules[next_rule])) {\n      if (r.regex && stream.match(r.regex)) {\n        state.next = r.next;\n        return r.token;\n      } else {\n        stream.next();\n        return 'error';\n      }\n    }\n  }\n  stream.next();\n  return 'error';\n};\n\nvar identifier = '(?![\\\\d\\\\s])[$\\\\w\\\\xAA-\\\\uFFDC](?:(?!\\\\s)[$\\\\w\\\\xAA-\\\\uFFDC]|-[A-Za-z])*';\nvar indenter = RegExp('(?:[({[=:]|[-~]>|\\\\b(?:e(?:lse|xport)|d(?:o|efault)|t(?:ry|hen)|finally|import(?:\\\\s*all)?|const|var|let|new|catch(?:\\\\s*' + identifier + ')?))\\\\s*$');\nvar keywordend = '(?![$\\\\w]|-[A-Za-z]|\\\\s*:(?![:=]))';\nvar stringfill = {\n  token: 'string',\n  regex: '.+'\n};\nvar Rules = {\n  start: [\n    {\n      token: 'docComment',\n      regex: '/\\\\*',\n      next: 'comment'\n    }, {\n      token: 'comment',\n      regex: '#.*'\n    }, {\n      token: 'keyword',\n      regex: '(?:t(?:h(?:is|row|en)|ry|ypeof!?)|c(?:on(?:tinue|st)|a(?:se|tch)|lass)|i(?:n(?:stanceof)?|mp(?:ort(?:\\\\s+all)?|lements)|[fs])|d(?:e(?:fault|lete|bugger)|o)|f(?:or(?:\\\\s+own)?|inally|unction)|s(?:uper|witch)|e(?:lse|x(?:tends|port)|val)|a(?:nd|rguments)|n(?:ew|ot)|un(?:less|til)|w(?:hile|ith)|o[fr]|return|break|let|var|loop)' + keywordend\n    }, {\n      token: 'atom',\n      regex: '(?:true|false|yes|no|on|off|null|void|undefined)' + keywordend\n    }, {\n      token: 'invalid',\n      regex: '(?:p(?:ackage|r(?:ivate|otected)|ublic)|i(?:mplements|nterface)|enum|static|yield)' + keywordend\n    }, {\n      token: 'className.standard',\n      regex: '(?:R(?:e(?:gExp|ferenceError)|angeError)|S(?:tring|yntaxError)|E(?:rror|valError)|Array|Boolean|Date|Function|Number|Object|TypeError|URIError)' + keywordend\n    }, {\n      token: 'variableName.function.standard',\n      regex: '(?:is(?:NaN|Finite)|parse(?:Int|Float)|Math|JSON|(?:en|de)codeURI(?:Component)?)' + keywordend\n    }, {\n      token: 'variableName.standard',\n      regex: '(?:t(?:hat|il|o)|f(?:rom|allthrough)|it|by|e)' + keywordend\n    }, {\n      token: 'variableName',\n      regex: identifier + '\\\\s*:(?![:=])'\n    }, {\n      token: 'variableName',\n      regex: identifier\n    }, {\n      token: 'operatorKeyword',\n      regex: '(?:\\\\.{3}|\\\\s+\\\\?)'\n    }, {\n      token: 'keyword',\n      regex: '(?:@+|::|\\\\.\\\\.)',\n      next: 'key'\n    }, {\n      token: 'operatorKeyword',\n      regex: '\\\\.\\\\s*',\n      next: 'key'\n    }, {\n      token: 'string',\n      regex: '\\\\\\\\\\\\S[^\\\\s,;)}\\\\]]*'\n    }, {\n      token: 'docString',\n      regex: '\\'\\'\\'',\n      next: 'qdoc'\n    }, {\n      token: 'docString',\n      regex: '\"\"\"',\n      next: 'qqdoc'\n    }, {\n      token: 'string',\n      regex: '\\'',\n      next: 'qstring'\n    }, {\n      token: 'string',\n      regex: '\"',\n      next: 'qqstring'\n    }, {\n      token: 'string',\n      regex: '`',\n      next: 'js'\n    }, {\n      token: 'string',\n      regex: '<\\\\[',\n      next: 'words'\n    }, {\n      token: 'regexp',\n      regex: '//',\n      next: 'heregex'\n    }, {\n      token: 'regexp',\n      regex: '\\\\/(?:[^[\\\\/\\\\n\\\\\\\\]*(?:(?:\\\\\\\\.|\\\\[[^\\\\]\\\\n\\\\\\\\]*(?:\\\\\\\\.[^\\\\]\\\\n\\\\\\\\]*)*\\\\])[^[\\\\/\\\\n\\\\\\\\]*)*)\\\\/[gimy$]{0,4}',\n      next: 'key'\n    }, {\n      token: 'number',\n      regex: '(?:0x[\\\\da-fA-F][\\\\da-fA-F_]*|(?:[2-9]|[12]\\\\d|3[0-6])r[\\\\da-zA-Z][\\\\da-zA-Z_]*|(?:\\\\d[\\\\d_]*(?:\\\\.\\\\d[\\\\d_]*)?|\\\\.\\\\d[\\\\d_]*)(?:e[+-]?\\\\d[\\\\d_]*)?[\\\\w$]*)'\n    }, {\n      token: 'paren',\n      regex: '[({[]'\n    }, {\n      token: 'paren',\n      regex: '[)}\\\\]]',\n      next: 'key'\n    }, {\n      token: 'operatorKeyword',\n      regex: '\\\\S+'\n    }, {\n      token: 'content',\n      regex: '\\\\s+'\n    }\n  ],\n  heregex: [\n    {\n      token: 'regexp',\n      regex: '.*?//[gimy$?]{0,4}',\n      next: 'start'\n    }, {\n      token: 'regexp',\n      regex: '\\\\s*#{'\n    }, {\n      token: 'comment',\n      regex: '\\\\s+(?:#.*)?'\n    }, {\n      token: 'regexp',\n      regex: '\\\\S+'\n    }\n  ],\n  key: [\n    {\n      token: 'operatorKeyword',\n      regex: '[.?@!]+'\n    }, {\n      token: 'variableName',\n      regex: identifier,\n      next: 'start'\n    }, {\n      token: 'content',\n      regex: '',\n      next: 'start'\n    }\n  ],\n  comment: [\n    {\n      token: 'docComment',\n      regex: '.*?\\\\*/',\n      next: 'start'\n    }, {\n      token: 'docComment',\n      regex: '.+'\n    }\n  ],\n  qdoc: [\n    {\n      token: 'string',\n      regex: \".*?'''\",\n      next: 'key'\n    }, stringfill\n  ],\n  qqdoc: [\n    {\n      token: 'string',\n      regex: '.*?\"\"\"',\n      next: 'key'\n    }, stringfill\n  ],\n  qstring: [\n    {\n      token: 'string',\n      regex: '[^\\\\\\\\\\']*(?:\\\\\\\\.[^\\\\\\\\\\']*)*\\'',\n      next: 'key'\n    }, stringfill\n  ],\n  qqstring: [\n    {\n      token: 'string',\n      regex: '[^\\\\\\\\\"]*(?:\\\\\\\\.[^\\\\\\\\\"]*)*\"',\n      next: 'key'\n    }, stringfill\n  ],\n  js: [\n    {\n      token: 'string',\n      regex: '[^\\\\\\\\`]*(?:\\\\\\\\.[^\\\\\\\\`]*)*`',\n      next: 'key'\n    }, stringfill\n  ],\n  words: [\n    {\n      token: 'string',\n      regex: '.*?\\\\]>',\n      next: 'key'\n    }, stringfill\n  ]\n};\nfor (var idx in Rules) {\n  var r = Rules[idx];\n  if (r.splice) {\n    for (var i = 0, len = r.length; i < len; ++i) {\n      var rr = r[i];\n      if (typeof rr.regex === 'string') {\n        Rules[idx][i].regex = new RegExp('^' + rr.regex);\n      }\n    }\n  } else if (typeof rr.regex === 'string') {\n    Rules[idx].regex = new RegExp('^' + r.regex);\n  }\n}\n\nexport const liveScript = {\n  name: \"livescript\",\n  startState: function(){\n    return {\n      next: 'start',\n      lastToken: {style: null, indent: 0, content: \"\"}\n    };\n  },\n  token: function(stream, state){\n    while (stream.pos == stream.start)\n      var style = tokenBase(stream, state);\n    state.lastToken = {\n      style: style,\n      indent: stream.indentation(),\n      content: stream.current()\n    };\n    return style.replace(/\\./g, ' ');\n  },\n  indent: function(state){\n    var indentation = state.lastToken.indent;\n    if (state.lastToken.content.match(indenter)) {\n      indentation += 2;\n    }\n    return indentation;\n  }\n};\n"],"names":["tokenBase","stream","state","next_rule","next","nr","Rules","splice","i$","length","r","regex","match","token","identifier","indenter","RegExp","keywordend","stringfill","start","heregex","key","comment","qdoc","qqdoc","qstring","qqstring","js","words","idx","i","len","rr","liveScript","name","startState","lastToken","style","indent","content","pos","indentation","current","replace"],"sourceRoot":""}