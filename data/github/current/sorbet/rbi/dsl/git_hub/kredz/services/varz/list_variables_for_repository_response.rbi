# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Kredz::Services::Varz::ListVariablesForRepositoryResponse`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Kredz::Services::Varz::ListVariablesForRepositoryResponse`.

class GitHub::Kredz::Services::Varz::ListVariablesForRepositoryResponse
  sig do
    params(
      environment_variables: T.nilable(T.any(Google::Protobuf::RepeatedField[GitHub::Kredz::Services::Varz::Variable], T::Array[GitHub::Kredz::Services::Varz::Variable])),
      error: T.nilable(GitHub::Kredz::Services::Varz::Error),
      organization_variables: T.nilable(T.any(Google::Protobuf::RepeatedField[GitHub::Kredz::Services::Varz::Variable], T::Array[GitHub::Kredz::Services::Varz::Variable])),
      remaining_org_var_names: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      remaining_repo_var_names: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      repository_variables: T.nilable(T.any(Google::Protobuf::RepeatedField[GitHub::Kredz::Services::Varz::Variable], T::Array[GitHub::Kredz::Services::Varz::Variable]))
    ).void
  end
  def initialize(environment_variables: T.unsafe(nil), error: nil, organization_variables: T.unsafe(nil), remaining_org_var_names: T.unsafe(nil), remaining_repo_var_names: T.unsafe(nil), repository_variables: T.unsafe(nil)); end

  sig { void }
  def clear_environment_variables; end

  sig { void }
  def clear_error; end

  sig { void }
  def clear_organization_variables; end

  sig { void }
  def clear_remaining_org_var_names; end

  sig { void }
  def clear_remaining_repo_var_names; end

  sig { void }
  def clear_repository_variables; end

  sig { returns(Google::Protobuf::RepeatedField[GitHub::Kredz::Services::Varz::Variable]) }
  def environment_variables; end

  sig { params(value: Google::Protobuf::RepeatedField[GitHub::Kredz::Services::Varz::Variable]).void }
  def environment_variables=(value); end

  sig { returns(T.nilable(GitHub::Kredz::Services::Varz::Error)) }
  def error; end

  sig { params(value: T.nilable(GitHub::Kredz::Services::Varz::Error)).void }
  def error=(value); end

  sig { returns(Google::Protobuf::RepeatedField[GitHub::Kredz::Services::Varz::Variable]) }
  def organization_variables; end

  sig { params(value: Google::Protobuf::RepeatedField[GitHub::Kredz::Services::Varz::Variable]).void }
  def organization_variables=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def remaining_org_var_names; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def remaining_org_var_names=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def remaining_repo_var_names; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def remaining_repo_var_names=(value); end

  sig { returns(Google::Protobuf::RepeatedField[GitHub::Kredz::Services::Varz::Variable]) }
  def repository_variables; end

  sig { params(value: Google::Protobuf::RepeatedField[GitHub::Kredz::Services::Varz::Variable]).void }
  def repository_variables=(value); end
end
