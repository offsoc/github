syntax = "proto3";
package git_hub.launch.services.largerrunners;

option go_package = "github.com/github/launch/services/deploy/largerrunners";

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "pbtypes/github.proto";
import "services/selfhostedrunners.proto";

service LargerRunners {
  rpc ListPools(ListPoolsRequest) returns (ListPoolsResponse);
  rpc GetPool(GetPoolRequest) returns (GetPoolResponse);
  rpc CreatePool(CreatePoolRequest) returns (CreatePoolResponse);
  rpc UpdatePool(UpdatePoolRequest) returns (UpdatePoolResponse);
  rpc DeletePool(DeletePoolRequest) returns (DeletePoolResponse);
  rpc ListPoolAgents(ListPoolAgentsRequest) returns (ListPoolAgentsResponse);
  rpc ListMachineSpecs(ListMachineSpecsRequest) returns (ListMachineSpecsResponse);
  rpc ListCuratedImages(ListCuratedImagesRequest) returns (ListCuratedImagesResponse);
  rpc ListMarketplaceImages(ListMarketplaceImagesRequest) returns (ListMarketplaceImagesResponse);
  rpc ListImageVersions(ListImageVersionsRequest) returns (ListImageVersionsResponse);
  rpc ListImageDefinitions(ListImageDefinitionsRequest) returns (ListImageDefinitionsResponse);
  rpc GetImageDefinition(GetImageDefinitionRequest) returns (GetImageDefinitionResponse);
  rpc DeleteImageDefinition(DeleteImageDefinitionRequest) returns (DeleteImageDefinitionResponse);
  rpc GetImageVersion(GetImageVersionRequest) returns (GetImageVersionResponse);
  rpc DeleteImageVersion(DeleteImageVersionRequest) returns (DeleteImageVersionResponse);
  rpc CreateImageVersion(CreateImageVersionRequest) returns (CreateImageVersionResponse);
  rpc ListLabels(ListLabelsRequest) returns (ListLabelsResponse);
  rpc GetTenantInfo(GetTenantInfoRequest) returns (GetTenantInfoResponse);
  rpc ListBetaFeatures(ListBetaFeaturesRequest) returns (ListBetaFeaturesResponse);
  rpc GetBetaFeature(GetBetaFeatureRequest) returns (GetBetaFeatureResponse);
  rpc SetBetaFeature(SetBetaFeatureRequest) returns (SetBetaFeatureResponse);
}

message Pool {
  int64 id = 1;
  string name = 2;
  PoolState state = 3;
  string platform = 4;
  int64 runner_group_id = 5;
  repeated string labels = 6;
  bool ephemeral = 7;
  int64 runner_count = 8;
  bool is_dev = 9;
  ImageKey image = 10;
  string group_name = 15;
  bool inherited = 16;
  MachineSpec machine_spec = 17;
  string last_active_on = 18;
  int64 maximum_runners = 19;
  string machine_spec_id = 20;
  int64 unavailable_runner_count = 21;
  repeated PublicIP public_ips = 22;
  bool persistent_os_disk = 24;
  string error_code = 25;
  bool public_ip_enabled = 26;

  reserved 11; // Deprecated vm_sku
  reserved 12;
  reserved 13; // Deprecated auto_scaling_settings
  reserved 14; // Deprecated public_ip
  reserved 23; // Deprecated has_migrated_network
}

enum PoolState {
  Provisioning = 0;
  Ready = 1;
  Deleting = 2;
  // missing Resetting
  Stuck = 3;
  ShutdownBilling = 4;
  ShutdownSpammy = 5;
  ShutdownNetwork = 6;
}

message ImageKey {
  ImageSource source = 1;
  string id = 2;
  string version = 3;

  enum ImageSource {
    Marketplace = 0;
    Enterprise = 1;
    Curated = 2;
    Custom = 3;
  }
}

message ImageDefinition {
  int64 id = 1;
  string name = 2;
  OsType osType = 3;
  ImageDefinitionState state = 4;
  int64 versionCount = 5;
  int64 totalVersionsSize = 6;
  google.protobuf.StringValue latestVersion = 7;
  
  reserved 8; // Deprecated latestVersionCount

  string platform = 9;

  enum OsType {
    Windows = 0;
    Linux = 1;
  }

  enum ImageDefinitionState {
    Provisioning = 0;
    Ready = 1;
    Deleting = 2;
  }
}

message ImageVersion {
  string version = 1;
  ImageState state = 2;
  FailureReason failure_reason = 3;
  google.protobuf.Timestamp created_on = 4;
  google.protobuf.Int32Value size = 5;
  google.protobuf.StringValue last_used_on = 6;

  enum ImageState {
    ImportingBlob = 0;
    ImportFailed = 1;
    ProvisioningImageVersion = 2;
    Ready = 3;
    Deleting = 4;
    Generating = 5;
  }

  enum FailureReason {
    None = 0;
    AuthenticationFailed = 1;
    InvalidSasUri = 2;
    ResourceNotFound = 3;
    InvalidVirtualDisk = 4;
  }
}

message ListPoolsRequest {
    pbtypes.git_hub.Identity owner_id = 1;
    pbtypes.git_hub.Identity plan_owner_id = 2;
    pbtypes.git_hub.Identity entity_id = 3;
    bool entity_is_private = 4;

    // nullable bool, that will have 3 states:
    // - true - only pools with the Public IPs will be returned,
    // - false - only pools without Public IPs will be returned,
    // - nil - all pools will be returned
    google.protobuf.BoolValue is_public_ip_enabled = 5;
}

message ListPoolsResponse {
  repeated Pool pools = 1;
}

message GetPoolRequest {
    pbtypes.git_hub.Identity owner_id = 1;
    int64 pool_id = 2;
}

message GetPoolResponse {
    Pool pool = 1;
}

message CreatePoolRequest {
    pbtypes.git_hub.Identity owner_id = 1;
    string name = 2;
    string platform = 3;
    int64 runner_group_id = 4;
    repeated string labels = 5;
    ImageKey image = 7;
    bool is_public_ip_enabled = 9;
    string image_sas_uri = 10;
    int64 maximum_runners = 12;
    string machine_spec_id = 13;
    bool persistent_os_disk = 14;

    reserved 6; // Deprecated runner_count
    reserved 8; // Deprecated vm_sku
    reserved 11; // Deprecated auto_scaling_settings
}

message CreatePoolResponse {
    Pool pool = 1;
}

message UpdatePoolRequest {
    pbtypes.git_hub.Identity owner_id = 1;
    int64 pool_id = 2;
    string name = 3;
    string platform = 4;
    int64 runner_group_id = 5;
    repeated string labels = 6;
    bool is_public_ip_enabled = 10;
    int64 maximum_runners = 13;
    string machine_spec_id = 14;
    ImageKey image = 15;
    
    reserved 7; // Deprecated runner_count
    reserved 8; // Deprecated image property
    reserved 9; // Deprecated vm_sku
    reserved 11; // Deprecated auto_scaling_settings
    reserved 12; // Deprecated image_sas_uri property
}

message UpdatePoolResponse {
    Pool pool = 1;
}

message DeletePoolRequest {
    pbtypes.git_hub.Identity owner_id = 1;
    int64 pool_id = 2;
}

message DeletePoolResponse {
    string status = 1;
    Pool pool = 2;
}

message ListImageDefinitionsRequest {
    pbtypes.git_hub.Identity owner_id = 1;
}

message ListImageDefinitionsResponse {
    repeated ImageDefinition image_definitions = 1;
}

message GetImageDefinitionRequest {
    pbtypes.git_hub.Identity owner_id = 1;
    int64 image_definition_id = 2;
}

message GetImageDefinitionResponse {
    ImageDefinition image_definition = 1;
}

message DeleteImageDefinitionRequest {
    pbtypes.git_hub.Identity owner_id = 1;
    int64 image_definition_id = 2;
}

message DeleteImageDefinitionResponse {
    string status = 1;
}

message GetImageVersionRequest {
    pbtypes.git_hub.Identity owner_id = 1;
    int64 image_definition_id = 2;
    string image_version = 3;
}

message GetImageVersionResponse {
    ImageVersion image_version = 1;
}

message CreateImageVersionRequest {
    pbtypes.git_hub.Identity owner_id = 1;
    int64 image_definition_id = 2;
    string image_sas_uri = 3;
}

message CreateImageVersionResponse {
    ImageVersion image_version = 1;
}

message ListImageVersionsRequest {
    pbtypes.git_hub.Identity owner_id = 1;
    int64 image_definition_id = 2;
}

message ListImageVersionsResponse {
    repeated ImageVersion image_versions = 1;
}

message DeleteImageVersionRequest {
    pbtypes.git_hub.Identity owner_id = 1;
    int64 image_definition_id = 2;
    string image_version = 3;
}

message DeleteImageVersionResponse {
    string status = 1;
}

message ListPoolAgentsRequest {
  pbtypes.git_hub.Identity owner_id = 1;
  int64 pool_id = 2;
}

message ListPoolAgentsResponse {
  repeated services.selfhostedrunners.Runner agents = 1;
}

message PublicIP {
  bool enabled = 1;
  string prefix = 2;
  int64 length = 3;
}

message MachineSpec {
  int64 cpu_cores = 2;
  int64 memory_gb = 3;
  int64 storage_gb = 4;
  string type = 5;
  MachineSpecGpu gpu = 7;
  string documentation_url = 8;
  string id = 9;
  string architecture = 10;

  reserved 1; // Deprecated vm_sku
  reserved 6;
}

message MachineSpecGpu {
  string name = 1;
  uint32 count = 2;
  uint64 memory_gb = 3;
}

message ListMachineSpecsRequest {
    pbtypes.git_hub.Identity owner_id = 1;
}

message ListMachineSpecsResponse {
  repeated MachineSpec machineSpecs = 1;
}

message Image {
  string id = 1;
  string display_name = 2;
  int64 size_gb = 3;
  string platform = 4;
}

message ListCuratedImagesRequest {
    pbtypes.git_hub.Identity owner_id = 1;
}

message ListCuratedImagesResponse {
  repeated Image images = 1;
}

message ListMarketplaceImagesRequest {
    pbtypes.git_hub.Identity owner_id = 1;
}

message ListMarketplaceImagesResponse {
  repeated Image images = 1;
}

message ListLabelsRequest {
    pbtypes.git_hub.Identity owner_id = 1;
}

message ListLabelsResponse {
  repeated string labels = 1;
}

message GetTenantInfoRequest {
    pbtypes.git_hub.Identity owner_id = 1;
}

message GetTenantInfoResponse {
    string tenant_id = 1;
    string runner_scale_unit = 2;
}

message BetaFeature {
    string name = 1;
    bool enabled_for_user = 2;
    bool enabled_globally = 3;
}

message ListBetaFeaturesRequest {
    pbtypes.git_hub.Identity owner_id = 1;
}

message ListBetaFeaturesResponse {
   repeated BetaFeature features = 1;
}

message GetBetaFeatureRequest {
    pbtypes.git_hub.Identity owner_id = 1;
    string feature_name = 2;
}

message GetBetaFeatureResponse {
  BetaFeature feature = 1;
}

message SetBetaFeatureRequest {
    pbtypes.git_hub.Identity owner_id = 1;
    string feature_name = 2;
    bool enabled = 3;
}

message SetBetaFeatureResponse {
  BetaFeature feature = 1;
}