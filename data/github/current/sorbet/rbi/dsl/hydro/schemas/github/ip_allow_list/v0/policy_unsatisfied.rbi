# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::IpAllowList::V0::PolicyUnsatisfied`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::IpAllowList::V0::PolicyUnsatisfied`.

class Hydro::Schemas::Github::IpAllowList::V0::PolicyUnsatisfied
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      actor_ip: T.nilable(String),
      integration_actor: T.nilable(Hydro::Schemas::Github::V1::Entities::Integration),
      owner_id: T.nilable(Integer),
      owner_type: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(actor: nil, actor_ip: nil, integration_actor: nil, owner_id: nil, owner_type: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { returns(String) }
  def actor_ip; end

  sig { params(value: String).void }
  def actor_ip=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_actor_ip; end

  sig { void }
  def clear_integration_actor; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_owner_type; end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Integration)) }
  def integration_actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Integration)).void }
  def integration_actor=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def owner_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def owner_type=(value); end
end
