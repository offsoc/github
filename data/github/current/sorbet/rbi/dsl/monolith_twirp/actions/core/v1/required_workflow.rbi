# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Actions::Core::V1::RequiredWorkflow`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Actions::Core::V1::RequiredWorkflow`.

class MonolithTwirp::Actions::Core::V1::RequiredWorkflow
  sig do
    params(
      owner_id: T.nilable(MonolithTwirp::Actions::Core::V1::Identity),
      path: T.nilable(String),
      ref: T.nilable(String),
      repo_database_id: T.nilable(Integer),
      repository_id: T.nilable(MonolithTwirp::Actions::Core::V1::Identity),
      repository_nwo: T.nilable(String),
      target_branches: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      visibility: T.nilable(T.any(Symbol, Integer)),
      workflow_file_sha: T.nilable(String)
    ).void
  end
  def initialize(owner_id: nil, path: nil, ref: nil, repo_database_id: nil, repository_id: nil, repository_nwo: nil, target_branches: T.unsafe(nil), visibility: nil, workflow_file_sha: nil); end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_path; end

  sig { void }
  def clear_ref; end

  sig { void }
  def clear_repo_database_id; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_repository_nwo; end

  sig { void }
  def clear_target_branches; end

  sig { void }
  def clear_visibility; end

  sig { void }
  def clear_workflow_file_sha; end

  sig { returns(T.nilable(MonolithTwirp::Actions::Core::V1::Identity)) }
  def owner_id; end

  sig { params(value: T.nilable(MonolithTwirp::Actions::Core::V1::Identity)).void }
  def owner_id=(value); end

  sig { returns(String) }
  def path; end

  sig { params(value: String).void }
  def path=(value); end

  sig { returns(String) }
  def ref; end

  sig { params(value: String).void }
  def ref=(value); end

  sig { returns(Integer) }
  def repo_database_id; end

  sig { params(value: Integer).void }
  def repo_database_id=(value); end

  sig { returns(T.nilable(MonolithTwirp::Actions::Core::V1::Identity)) }
  def repository_id; end

  sig { params(value: T.nilable(MonolithTwirp::Actions::Core::V1::Identity)).void }
  def repository_id=(value); end

  sig { returns(String) }
  def repository_nwo; end

  sig { params(value: String).void }
  def repository_nwo=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def target_branches; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def target_branches=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def visibility; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def visibility=(value); end

  sig { returns(String) }
  def workflow_file_sha; end

  sig { params(value: String).void }
  def workflow_file_sha=(value); end
end
