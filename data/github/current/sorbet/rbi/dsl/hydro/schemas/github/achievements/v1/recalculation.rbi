# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Achievements::V1::Recalculation`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Achievements::V1::Recalculation`.

class Hydro::Schemas::Github::Achievements::V1::Recalculation
  sig do
    params(
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext),
      target_stream_processor: T.nilable(T.any(Symbol, Integer)),
      target_user: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(request_context: nil, target_stream_processor: nil, target_user: nil); end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_target_stream_processor; end

  sig { void }
  def clear_target_user; end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def target_stream_processor; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def target_stream_processor=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def target_user; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def target_user=(value); end
end
