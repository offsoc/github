# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PlatformTypes::ProjectColumn`.
# Please instead update this file by running `bin/tapioca dsl PlatformTypes::ProjectColumn`.

class PlatformTypes::ProjectColumn < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def archive_resource_path; end

  sig { returns(T::Boolean) }
  def archive_resource_path?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def archive_url; end

  sig { returns(T::Boolean) }
  def archive_url?; end

  sig { returns(PlatformTypes::ProjectCardConnection) }
  def cards; end

  sig { returns(T::Boolean) }
  def cards?; end

  sig { returns(Integer) }
  def cards_count_project_column_view; end

  sig { returns(T::Boolean) }
  def cards_count_project_column_view?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def cards_resource_path; end

  sig { returns(T::Boolean) }
  def cards_resource_path?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def cards_url; end

  sig { returns(T::Boolean) }
  def cards_url?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def created_at; end

  sig { returns(T::Boolean) }
  def created_at?; end

  sig { returns(T.nilable(Integer)) }
  def database_id; end

  sig { returns(T::Boolean) }
  def database_id?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(String) }
  def name; end

  sig { returns(T::Boolean) }
  def name?; end

  sig { returns(PlatformTypes::Project) }
  def project; end

  sig { returns(T::Boolean) }
  def project?; end

  sig { returns(T.nilable(String)) }
  def purpose; end

  sig { returns(T::Boolean) }
  def purpose?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def resource_path; end

  sig { returns(T::Boolean) }
  def resource_path?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def updated_at; end

  sig { returns(T::Boolean) }
  def updated_at?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def url; end

  sig { returns(T::Boolean) }
  def url?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def workflow_resource_path; end

  sig { returns(T::Boolean) }
  def workflow_resource_path?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def workflow_url; end

  sig { returns(T::Boolean) }
  def workflow_url?; end

  sig { returns(PlatformTypes::ProjectWorkflowConnection) }
  def workflows; end

  sig { returns(T::Boolean) }
  def workflows?; end
end
