# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::SecurityAlerts::V1::RepositoryVulnerabilityAlertsAnalyticsEvent`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::SecurityAlerts::V1::RepositoryVulnerabilityAlertsAnalyticsEvent`.

class Hydro::Schemas::Github::SecurityAlerts::V1::RepositoryVulnerabilityAlertsAnalyticsEvent
  sig do
    params(
      accounts: T.nilable(T.any(Google::Protobuf::RepeatedField[Google::Protobuf::StringValue], T::Array[Google::Protobuf::StringValue])),
      action: T.nilable(String),
      authorized_actor_logins: T.nilable(T.any(Google::Protobuf::RepeatedField[Google::Protobuf::StringValue], T::Array[Google::Protobuf::StringValue])),
      end_date: T.nilable(Google::Protobuf::StringValue),
      owner_id: T.nilable(Google::Protobuf::Int64Value),
      period: T.nilable(Google::Protobuf::StringValue),
      repository_count: T.nilable(Google::Protobuf::Int32Value),
      repository_id: T.nilable(Google::Protobuf::Int64Value),
      start_date: T.nilable(Google::Protobuf::StringValue),
      user_id: T.nilable(Google::Protobuf::Int64Value)
    ).void
  end
  def initialize(accounts: T.unsafe(nil), action: nil, authorized_actor_logins: T.unsafe(nil), end_date: nil, owner_id: nil, period: nil, repository_count: nil, repository_id: nil, start_date: nil, user_id: nil); end

  sig { returns(Google::Protobuf::RepeatedField[Google::Protobuf::StringValue]) }
  def accounts; end

  sig { params(value: Google::Protobuf::RepeatedField[Google::Protobuf::StringValue]).void }
  def accounts=(value); end

  sig { returns(String) }
  def action; end

  sig { params(value: String).void }
  def action=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Google::Protobuf::StringValue]) }
  def authorized_actor_logins; end

  sig { params(value: Google::Protobuf::RepeatedField[Google::Protobuf::StringValue]).void }
  def authorized_actor_logins=(value); end

  sig { void }
  def clear_accounts; end

  sig { void }
  def clear_action; end

  sig { void }
  def clear_authorized_actor_logins; end

  sig { void }
  def clear_end_date; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_period; end

  sig { void }
  def clear_repository_count; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_start_date; end

  sig { void }
  def clear_user_id; end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def end_date; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def end_date=(value); end

  sig { returns(T.nilable(Google::Protobuf::Int64Value)) }
  def owner_id; end

  sig { params(value: T.nilable(Google::Protobuf::Int64Value)).void }
  def owner_id=(value); end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def period; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def period=(value); end

  sig { returns(T.nilable(Google::Protobuf::Int32Value)) }
  def repository_count; end

  sig { params(value: T.nilable(Google::Protobuf::Int32Value)).void }
  def repository_count=(value); end

  sig { returns(T.nilable(Google::Protobuf::Int64Value)) }
  def repository_id; end

  sig { params(value: T.nilable(Google::Protobuf::Int64Value)).void }
  def repository_id=(value); end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def start_date; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def start_date=(value); end

  sig { returns(T.nilable(Google::Protobuf::Int64Value)) }
  def user_id; end

  sig { params(value: T.nilable(Google::Protobuf::Int64Value)).void }
  def user_id=(value); end
end
