# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::GistCommentUpdate`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::GistCommentUpdate`.

class Hydro::Schemas::Github::V1::GistCommentUpdate
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      all_comments_by_gist_author: T.nilable(T::Boolean),
      current_specimen_body: T.nilable(Hydro::Schemas::Github::V1::Entities::SpecimenData),
      gist: T.nilable(Hydro::Schemas::Github::V1::Entities::Gist),
      gist_comment: T.nilable(Hydro::Schemas::Github::V1::Entities::GistComment),
      previous_specimen_body: T.nilable(Hydro::Schemas::Github::V1::Entities::SpecimenData),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext),
      spamurai_form_signals: T.nilable(Hydro::Schemas::Github::V1::Entities::SpamuraiFormSignals),
      specimen_gist_content: T.nilable(Hydro::Schemas::Github::V1::Entities::SpecimenData),
      specimen_gist_description: T.nilable(Hydro::Schemas::Github::V1::Entities::SpecimenData),
      specimen_gist_first_path: T.nilable(Hydro::Schemas::Github::V1::Entities::SpecimenData)
    ).void
  end
  def initialize(actor: nil, all_comments_by_gist_author: nil, current_specimen_body: nil, gist: nil, gist_comment: nil, previous_specimen_body: nil, request_context: nil, spamurai_form_signals: nil, specimen_gist_content: nil, specimen_gist_description: nil, specimen_gist_first_path: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { returns(T::Boolean) }
  def all_comments_by_gist_author; end

  sig { params(value: T::Boolean).void }
  def all_comments_by_gist_author=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_all_comments_by_gist_author; end

  sig { void }
  def clear_current_specimen_body; end

  sig { void }
  def clear_gist; end

  sig { void }
  def clear_gist_comment; end

  sig { void }
  def clear_previous_specimen_body; end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_spamurai_form_signals; end

  sig { void }
  def clear_specimen_gist_content; end

  sig { void }
  def clear_specimen_gist_description; end

  sig { void }
  def clear_specimen_gist_first_path; end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::SpecimenData)) }
  def current_specimen_body; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::SpecimenData)).void }
  def current_specimen_body=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Gist)) }
  def gist; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Gist)).void }
  def gist=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::GistComment)) }
  def gist_comment; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::GistComment)).void }
  def gist_comment=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::SpecimenData)) }
  def previous_specimen_body; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::SpecimenData)).void }
  def previous_specimen_body=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::SpamuraiFormSignals)) }
  def spamurai_form_signals; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::SpamuraiFormSignals)).void }
  def spamurai_form_signals=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::SpecimenData)) }
  def specimen_gist_content; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::SpecimenData)).void }
  def specimen_gist_content=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::SpecimenData)) }
  def specimen_gist_description; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::SpecimenData)).void }
  def specimen_gist_description=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::SpecimenData)) }
  def specimen_gist_first_path; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::SpecimenData)).void }
  def specimen_gist_first_path=(value); end
end
