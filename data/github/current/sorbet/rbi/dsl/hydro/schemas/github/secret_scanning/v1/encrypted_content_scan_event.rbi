# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::SecretScanning::V1::EncryptedContentScanEvent`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::SecretScanning::V1::EncryptedContentScanEvent`.

class Hydro::Schemas::Github::SecretScanning::V1::EncryptedContentScanEvent
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      content_created_at: T.nilable(Google::Protobuf::Timestamp),
      content_id: T.nilable(Integer),
      content_number: T.nilable(Integer),
      contents: T.nilable(T.any(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::SecretScanning::V1::EncryptedContentScanEvent::ContentScanContent], T::Array[Hydro::Schemas::Github::SecretScanning::V1::EncryptedContentScanEvent::ContentScanContent])),
      feature_flags: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      owner: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      repository: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)
    ).void
  end
  def initialize(actor: nil, content_created_at: nil, content_id: nil, content_number: nil, contents: T.unsafe(nil), feature_flags: T.unsafe(nil), owner: nil, repository: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_content_created_at; end

  sig { void }
  def clear_content_id; end

  sig { void }
  def clear_content_number; end

  sig { void }
  def clear_contents; end

  sig { void }
  def clear_feature_flags; end

  sig { void }
  def clear_owner; end

  sig { void }
  def clear_repository; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def content_created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def content_created_at=(value); end

  sig { returns(Integer) }
  def content_id; end

  sig { params(value: Integer).void }
  def content_id=(value); end

  sig { returns(Integer) }
  def content_number; end

  sig { params(value: Integer).void }
  def content_number=(value); end

  sig do
    returns(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::SecretScanning::V1::EncryptedContentScanEvent::ContentScanContent])
  end
  def contents; end

  sig do
    params(
      value: Google::Protobuf::RepeatedField[Hydro::Schemas::Github::SecretScanning::V1::EncryptedContentScanEvent::ContentScanContent]
    ).void
  end
  def contents=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def feature_flags; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def feature_flags=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def owner; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def owner=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)) }
  def repository; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)).void }
  def repository=(value); end
end
