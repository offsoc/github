syntax = "proto3";

package kredz.core.v1;

option go_package = "core/v1";
option ruby_package = "MonolithTwirp::Kredz::Core::V1";

import "core/v1/global_id.proto";

// ActorsAPI provides information about actors.
service ActorsAPI {
  // CanActorWriteSecrets checks if the actor has admin permissions over the passed owners
  // so that secrets can be written over those scopes. In case of environments, the 
  // admin check is performed over the repository containing the environment.
  rpc CanActorWriteSecrets(CanActorWriteSecretsRequest) returns (CanActorWriteSecretsResponse);
}

message CanActorWriteSecretsRequest {
  // GlobalId of the actor storing secrets
  GlobalID actor_global_id = 1;

  // GlobalIds of the credential owners(repo/environment/organisation) 
  // upon which the permission check will be done
  repeated GlobalID owner_global_ids = 2;
}

message CanActorWriteSecretsResponse {
  // Indicates whether secrets can be written over the scope of the owners(repo/environment/organisation) 
  bool can_write_secrets = 1;
}