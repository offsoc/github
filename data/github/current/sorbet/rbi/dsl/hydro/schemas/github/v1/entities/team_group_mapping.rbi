# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::Entities::TeamGroupMapping`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::Entities::TeamGroupMapping`.

class Hydro::Schemas::Github::V1::Entities::TeamGroupMapping
  sig do
    params(
      created_at: T.nilable(Google::Protobuf::Timestamp),
      global_relay_id: T.nilable(String),
      group_description: T.nilable(Google::Protobuf::StringValue),
      group_id: T.nilable(String),
      group_name: T.nilable(String),
      id: T.nilable(Integer),
      organization_id: T.nilable(Integer),
      status: T.nilable(T.any(Symbol, Integer)),
      synced_at: T.nilable(Google::Protobuf::Timestamp),
      team_id: T.nilable(Integer),
      team_sync_tenant_id: T.nilable(Integer),
      updated_at: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(created_at: nil, global_relay_id: nil, group_description: nil, group_id: nil, group_name: nil, id: nil, organization_id: nil, status: nil, synced_at: nil, team_id: nil, team_sync_tenant_id: nil, updated_at: nil); end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_global_relay_id; end

  sig { void }
  def clear_group_description; end

  sig { void }
  def clear_group_id; end

  sig { void }
  def clear_group_name; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_organization_id; end

  sig { void }
  def clear_status; end

  sig { void }
  def clear_synced_at; end

  sig { void }
  def clear_team_id; end

  sig { void }
  def clear_team_sync_tenant_id; end

  sig { void }
  def clear_updated_at; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(String) }
  def global_relay_id; end

  sig { params(value: String).void }
  def global_relay_id=(value); end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def group_description; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def group_description=(value); end

  sig { returns(String) }
  def group_id; end

  sig { params(value: String).void }
  def group_id=(value); end

  sig { returns(String) }
  def group_name; end

  sig { params(value: String).void }
  def group_name=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(Integer) }
  def organization_id; end

  sig { params(value: Integer).void }
  def organization_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def status; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def status=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def synced_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def synced_at=(value); end

  sig { returns(Integer) }
  def team_id; end

  sig { params(value: Integer).void }
  def team_id=(value); end

  sig { returns(Integer) }
  def team_sync_tenant_id; end

  sig { params(value: Integer).void }
  def team_sync_tenant_id=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end
end
