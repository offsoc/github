# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Blackbird::Admin::V1::GetRepoStatusResponse`.
# Please instead update this file by running `bin/tapioca dsl Blackbird::Admin::V1::GetRepoStatusResponse`.

class Blackbird::Admin::V1::GetRepoStatusResponse
  sig do
    params(
      database_repository: T.nilable(Blackbird::Admin::V1::DatabaseRepository),
      deleted_at: T.nilable(Google::Protobuf::Timestamp),
      github_details: T.nilable(Blackbird::Admin::V1::GitHubRepositoryAPIResponse),
      indexer_ingests: T.nilable(T.any(Google::Protobuf::RepeatedField[Blackbird::Admin::V1::RepoIngest], T::Array[Blackbird::Admin::V1::RepoIngest])),
      is_public: T.nilable(T::Boolean),
      repo_id: T.nilable(Integer),
      repo_nwo: T.nilable(String),
      serving_ingests: T.nilable(T.any(Google::Protobuf::RepeatedField[Blackbird::Admin::V1::RepoIngest], T::Array[Blackbird::Admin::V1::RepoIngest]))
    ).void
  end
  def initialize(database_repository: nil, deleted_at: nil, github_details: nil, indexer_ingests: T.unsafe(nil), is_public: nil, repo_id: nil, repo_nwo: nil, serving_ingests: T.unsafe(nil)); end

  sig { void }
  def clear_database_repository; end

  sig { void }
  def clear_deleted_at; end

  sig { void }
  def clear_github_details; end

  sig { void }
  def clear_indexer_ingests; end

  sig { void }
  def clear_is_public; end

  sig { void }
  def clear_repo_id; end

  sig { void }
  def clear_repo_nwo; end

  sig { void }
  def clear_serving_ingests; end

  sig { returns(T.nilable(Blackbird::Admin::V1::DatabaseRepository)) }
  def database_repository; end

  sig { params(value: T.nilable(Blackbird::Admin::V1::DatabaseRepository)).void }
  def database_repository=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def deleted_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def deleted_at=(value); end

  sig { returns(T.nilable(Blackbird::Admin::V1::GitHubRepositoryAPIResponse)) }
  def github_details; end

  sig { params(value: T.nilable(Blackbird::Admin::V1::GitHubRepositoryAPIResponse)).void }
  def github_details=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Blackbird::Admin::V1::RepoIngest]) }
  def indexer_ingests; end

  sig { params(value: Google::Protobuf::RepeatedField[Blackbird::Admin::V1::RepoIngest]).void }
  def indexer_ingests=(value); end

  sig { returns(T::Boolean) }
  def is_public; end

  sig { params(value: T::Boolean).void }
  def is_public=(value); end

  sig { returns(Integer) }
  def repo_id; end

  sig { params(value: Integer).void }
  def repo_id=(value); end

  sig { returns(String) }
  def repo_nwo; end

  sig { params(value: String).void }
  def repo_nwo=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Blackbird::Admin::V1::RepoIngest]) }
  def serving_ingests; end

  sig { params(value: Google::Protobuf::RepeatedField[Blackbird::Admin::V1::RepoIngest]).void }
  def serving_ingests=(value); end
end
