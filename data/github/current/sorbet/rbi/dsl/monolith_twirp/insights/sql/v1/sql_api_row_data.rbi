# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Insights::Sql::V1::SqlAPIRowData`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Insights::Sql::V1::SqlAPIRowData`.

class MonolithTwirp::Insights::Sql::V1::SqlAPIRowData
  sig do
    params(
      bytes_value: T.nilable(String),
      double_value: T.nilable(Float),
      float_value: T.nilable(Float),
      has_bool_value: T.nilable(T::Boolean),
      int32_value: T.nilable(Integer),
      int64_value: T.nilable(Integer),
      string_value: T.nilable(String),
      type: T.nilable(String),
      uint32_value: T.nilable(Integer),
      uint64_value: T.nilable(Integer)
    ).void
  end
  def initialize(bytes_value: nil, double_value: nil, float_value: nil, has_bool_value: nil, int32_value: nil, int64_value: nil, string_value: nil, type: nil, uint32_value: nil, uint64_value: nil); end

  sig { returns(String) }
  def bytes_value; end

  sig { params(value: String).void }
  def bytes_value=(value); end

  sig { void }
  def clear_bytes_value; end

  sig { void }
  def clear_double_value; end

  sig { void }
  def clear_float_value; end

  sig { void }
  def clear_has_bool_value; end

  sig { void }
  def clear_int32_value; end

  sig { void }
  def clear_int64_value; end

  sig { void }
  def clear_string_value; end

  sig { void }
  def clear_type; end

  sig { void }
  def clear_uint32_value; end

  sig { void }
  def clear_uint64_value; end

  sig { returns(Float) }
  def double_value; end

  sig { params(value: Float).void }
  def double_value=(value); end

  sig { returns(Float) }
  def float_value; end

  sig { params(value: Float).void }
  def float_value=(value); end

  sig { returns(T::Boolean) }
  def has_bool_value; end

  sig { params(value: T::Boolean).void }
  def has_bool_value=(value); end

  sig { returns(Integer) }
  def int32_value; end

  sig { params(value: Integer).void }
  def int32_value=(value); end

  sig { returns(Integer) }
  def int64_value; end

  sig { params(value: Integer).void }
  def int64_value=(value); end

  sig { returns(String) }
  def string_value; end

  sig { params(value: String).void }
  def string_value=(value); end

  sig { returns(String) }
  def type; end

  sig { params(value: String).void }
  def type=(value); end

  sig { returns(Integer) }
  def uint32_value; end

  sig { params(value: Integer).void }
  def uint32_value=(value); end

  sig { returns(Integer) }
  def uint64_value; end

  sig { params(value: Integer).void }
  def uint64_value=(value); end

  sig { returns(T.nilable(Symbol)) }
  def value; end
end
