# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Proto::SecretScanning::Types::V1::JobGroup`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Proto::SecretScanning::Types::V1::JobGroup`.

class GitHub::Proto::SecretScanning::Types::V1::JobGroup
  sig do
    params(
      completed_at: T.nilable(Google::Protobuf::Timestamp),
      job_group_id: T.nilable(Integer),
      owner_id: T.nilable(Integer),
      owner_scope: T.nilable(T.any(Symbol, Integer)),
      started_at: T.nilable(Google::Protobuf::Timestamp),
      status: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(completed_at: nil, job_group_id: nil, owner_id: nil, owner_scope: nil, started_at: nil, status: nil); end

  sig { void }
  def clear_completed_at; end

  sig { void }
  def clear_job_group_id; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_owner_scope; end

  sig { void }
  def clear_started_at; end

  sig { void }
  def clear_status; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def completed_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def completed_at=(value); end

  sig { returns(Integer) }
  def job_group_id; end

  sig { params(value: Integer).void }
  def job_group_id=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def owner_scope; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def owner_scope=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def started_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def started_at=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def status; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def status=(value); end
end
