# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `ActionsUsageMetrics::Api::V1::JobUsageItem`.
# Please instead update this file by running `bin/tapioca dsl ActionsUsageMetrics::Api::V1::JobUsageItem`.

class ActionsUsageMetrics::Api::V1::JobUsageItem
  sig do
    params(
      average_queue_time: T.nilable(Integer),
      average_run_time: T.nilable(Integer),
      failure_rate: T.nilable(Float),
      job_executions: T.nilable(Integer),
      job_name: T.nilable(String),
      job_user_identifier: T.nilable(String),
      repository_id: T.nilable(Integer),
      runner_runtime: T.nilable(T.any(Symbol, Integer)),
      runner_type: T.nilable(T.any(Symbol, Integer)),
      total_minutes: T.nilable(Integer),
      workflow_file_path: T.nilable(String)
    ).void
  end
  def initialize(average_queue_time: nil, average_run_time: nil, failure_rate: nil, job_executions: nil, job_name: nil, job_user_identifier: nil, repository_id: nil, runner_runtime: nil, runner_type: nil, total_minutes: nil, workflow_file_path: nil); end

  sig { returns(Integer) }
  def average_queue_time; end

  sig { params(value: Integer).void }
  def average_queue_time=(value); end

  sig { returns(Integer) }
  def average_run_time; end

  sig { params(value: Integer).void }
  def average_run_time=(value); end

  sig { void }
  def clear_average_queue_time; end

  sig { void }
  def clear_average_run_time; end

  sig { void }
  def clear_failure_rate; end

  sig { void }
  def clear_job_executions; end

  sig { void }
  def clear_job_name; end

  sig { void }
  def clear_job_user_identifier; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_runner_runtime; end

  sig { void }
  def clear_runner_type; end

  sig { void }
  def clear_total_minutes; end

  sig { void }
  def clear_workflow_file_path; end

  sig { returns(Float) }
  def failure_rate; end

  sig { params(value: Float).void }
  def failure_rate=(value); end

  sig { returns(Integer) }
  def job_executions; end

  sig { params(value: Integer).void }
  def job_executions=(value); end

  sig { returns(String) }
  def job_name; end

  sig { params(value: String).void }
  def job_name=(value); end

  sig { returns(String) }
  def job_user_identifier; end

  sig { params(value: String).void }
  def job_user_identifier=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def runner_runtime; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def runner_runtime=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def runner_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def runner_type=(value); end

  sig { returns(Integer) }
  def total_minutes; end

  sig { params(value: Integer).void }
  def total_minutes=(value); end

  sig { returns(String) }
  def workflow_file_path; end

  sig { params(value: String).void }
  def workflow_file_path=(value); end
end
