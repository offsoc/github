<%# erblint:counter DeprecatedComponentsCounter 1 %>
<%= render Primer::Beta::Subhead.new do |component| %>
  <% component.with_heading(tag: :h2) do %>
    <a href="<%= gh_actions_latest_runs_stafftools_repository_path(current_repository) %>">Runs</a>
     / Workflow run <%= workflow_run.id %>
  <% end %>
  <% if workflow_run.present? %>
    <% component.with_actions(display: :flex) do %>
      <% if workflow_run.check_suite.cancelable? %>
        <%= form_tag force_cancel_suite_stafftools_repository_path(check_suite_id: workflow_run.check_suite_id), method: :post do %>
          <%= render Primer::Beta::Button.new(type: :submit, scheme: :danger, float: :right, ml: 2) do %>Force cancel<% end %>
        <% end %>
      <% end %>

      <%= render Primer::Alpha::ActionMenu.new(ml: 2) do |menu| %>
        <% menu.with_show_button { |button|
            button.with_trailing_action_icon(icon: :"gear", ml: 1); "More Information"
        } %>

        <% menu.with_item(tag: :a, href: actions_workflow_execution_stafftools_repository_path(check_suite_id: workflow_run.check_suite_id) + "?show_annotations=#{show_annotations ? "false" : "true"}" ) do |item| %>
          <% item.with_leading_visual_icon(icon: :"note") %>
          <%= show_annotations ? "Hide" : "Show" %> annotations
        <% end %>
        <% if GitHub.billing_enabled? %>
          <% menu.with_item(tag: :a, href: actions_workflow_run_usage_stafftools_repository_path(workflow_run_id: workflow_run.id)) do |item| %>
            <% item.with_leading_visual_icon(icon: :"clock") %>
            Usage
          <% end %>
        <% end %>
        <% menu.with_item(tag: :a, href: actions_workflow_run_artifacts_stafftools_repository_path(workflow_run_id: workflow_run.id)) do |item| %>
          <% item.with_leading_visual_icon(icon: :"package") %>
          Artifacts
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% end %>
<% if workflow_run.nil? %>
  <%= render Primer::Beta::Blankslate.new do |c| %>
    <% c.with_heading(tag: :h2) do %>
      No workflow run found for the given id.
    <% end %>
  <% end %>
<% else %>
  <%= render(Primer::Beta::BorderBox.new(padding: :condensed, classes: "summary")) do |component| %>
    <% component.with_header(font_weight: :bold) do %>
        Workflow Run
    <% end %>
    <% component.with_body do %>
      <dl>
        <dt>Repository</dt>
        <dd><%= link_to current_repository.name_with_owner, gh_actions_stafftools_repository_path(current_repository) %></dd>
      </dl>
      <dl>
        <dt>URL</dt>
        <dd><%= link_to nil, workflow_run_url(host: GitHub.url, workflow_run_id: workflow_run.id, repository: current_repository), target: :_blank, rel: "noopener noreferrer" %></dd>
      </dl>
      <dl>
        <dt>Workflow run ID</dt>
        <dd><%= workflow_run.id %></dd>
      </dl>
      <dl>
        <dt>Execution ID</dt>
        <dd><%= workflow_run.external_id %></dd>
      </dl>
      <dl>
        <dt>Executing Actor</dt>
        <dd><%= link_to workflow_run.actor.login, stafftools_user_path(workflow_run.actor) %></dd>
      </dl>
      <dl>
        <dt>Event</dt>
        <dd><%= workflow_run.event %></dd>
      </dl>
      <dl>
        <dt>Identifier (name)</dt>
        <dd><%= workflow_run.name %></dd>
      </dl>
      <dl>
        <dt>Status</dt>
        <dd><%= workflow_run.status %></dd>
      </dl>

      <% if workflow_run.workflow_run_executions.present? %>
        <dl>
          <dt>Attempts</dt>
          <dd><%= workflow_run.workflow_run_executions.size %></dd>
        </dl>
      <% end %>
      <% unless GitHub.enterprise? %>
        <div class="text-small mb-1">
          <%= link_to "Splunk logs", Stafftools::RepositoriesHelper.get_splunk_link(workflow_run.check_suite), target: :_blank, rel: "noopener noreferrer" %>
        </div>
        <% if download_log_url %>
          <div class="text-small mb-1">
            <%= link_to "Download run logs", download_log_url, target: :_blank, rel: "noopener noreferrer" %>
          </div>
        <% end %>
        <div class="text-small mb-1">
          <%= link_to "Splunk logs for all postbacks", Stafftools::RepositoriesHelper.get_splunk_link_for_actions_workflow_run_postback_updates(workflow_run.check_suite), target: :_blank, rel: "noopener noreferrer" %>
        </div>
        <div class="text-small mb-1">
          <%= link_to "Kusto logs for workflow execution trace", Stafftools::RepositoriesHelper.get_kusto_link_for_workflow_trace(workflow_run.check_suite.external_id), target: :_blank, rel: "noopener noreferrer" %>
        </div>
        <div class="text-small mb-1">
          <%= link_to "Job prep audit logs", Stafftools::RepositoriesHelper.get_audit_log_link_for_workflow_job_prep(workflow_run.id, current_repository.id) %> <%# erblint:disable A11yUnderlineLinksInTextBlock %>
          (Includes the list of secrets passed to each job)
        </div>
        <div class="text-small">
          <% chatops_actions_check_plan_command = ".actions check plan #{workflow_run.permalink}" %>
          Get plan details with slack command
          <%= render Primer::Beta::ClipboardCopy.new(display: :block, position: :relative, py: 1, classes: "CopyBlock", "data-copy-feedback": "Copied!", role: "button", "aria-label": "Copy kusto chatops", value: chatops_actions_check_plan_command) do %>
            <code><%= chatops_actions_check_plan_command %></code>
            <%= primer_octicon(:copy, color: :accent, right: 0, mr: 1, position: :absolute, classes: "js-clipboard-copy-icon", style: "top: 5px;") %>
            <%= primer_octicon(:check, color: :success, position: :absolute, display: :none, classes: "js-clipboard-check-icon", style: "top: 6px; right: 5px;") %>
          <% end %>
        </div>
      <% end %>
    <% end%>
  <% end %>
  <% check_suite = workflow_run.check_suite %>
  <%= render(Primer::Beta::BorderBox.new(padding: :condensed, classes: "summary")) do |component| %>
    <% component.with_header(font_weight: :bold) do %>
      Check Suite
    <% end %>
    <% component.with_row do %>
      <dl>
        <dt>Workflow File Path</dt>
        <dd><%= check_suite.workflow_file_path %></dd>
      </dl>
      <dl>
        <dt>Workflow Name</dt>
        <dd><%= check_suite.name %></dd>
      </dl>
      <dl>
        <dt>ID</dt>
        <dd><%= check_suite.id %></dd>
      </dl>
      <dl>
        <dt>Status</dt>
        <dd><%= check_suite.status %></dd>
      </dl>
      <dl>
        <dt>Conclusion</dt>
        <dd><%= check_suite.conclusion %></dd>
      </dl>
      <dl>
        <dt>Re-requestable</dt>
        <dd><%= check_suite.rerequestable %></dd>
      </dl>
      <dl>
        <dt>Created At</dt>
        <dd><%= check_suite.created_at&.utc&.iso8601 %></dd>
      </dl>
      <dl>
        <dt>Updated At</dt>
        <dd><%= check_suite.updated_at&.utc&.iso8601 %></dd>
      </dl>
    <% end %>
    <% if check_suite.healable_for_actions? %>
      <% component.with_row do %>
        <%= form_tag heal_check_suite_stafftools_repository_path(check_suite_id: workflow_run.check_suite_id), method: :post do %>
          <%= render Primer::ButtonComponent.new(type: :submit, scheme: :danger, float: :right, mt: 5, ml: 2) do %>Mark as complete<% end %>
        <% end %>
        <h4 class="mt-1">Fix Stuck Check Suite</h4>
        <p class="mt-2 pr-2">
          This check suite appears stuck, all runs are marked complete but it is not itself.
          This will mark it completed with the appropriate conclusion and status.
          If you believe there is a broader underlying problem, please file an issue in github/c2c-actions.
        </p>
      <% end %>
    <% end %>
  <% end %>
  <% if workflow_run.workflow_run_executions.present? %>
    <%
      workflow_run.workflow_run_executions.order(attempt: :desc).each do |execution|
    %>
      <% check_runs = workflow_run.latest_check_runs(execution: execution).includes(:workflow_job_run) %>
      <%= render(Primer::Beta::BorderBox.new(padding: :condensed, classes: "summary", test_selector: "attempt-#{execution.attempt}")) do |component| %>
        <% component.with_header(font_weight: :bold) do %>
          Attempt #<%= execution.attempt %>
        <% end %>
        <% component.with_row do %>
          <dl>
            <dt>Workflow run execution ID</dt>
            <dd><%= execution.id %></dd>
          </dl>
          <dl>
            <dt>Execution ID</dt>
            <dd><%= execution.external_id %></dd>
          </dl>
          <dl>
            <dt>Status</dt>
            <dd><%= execution.status %></dd>
          </dl>
          <dl>
            <dt>Conclusion</dt>
            <dd><%= execution.conclusion %></dd>
          </dl>
          <dl>
            <dt>Started At</dt>
            <dd><%= execution.started_at&.utc&.iso8601 %></dd>
          </dl>
          <dl>
            <dt>Completed At</dt>
            <dd><%= execution.completed_at&.utc&.iso8601 %></dd>
          </dl>
          <dl>
            <dt>Partial Rerun</dt>
            <dd><%= check_runs.map(&:workflow_job_run).any? { |wfr| wfr.original_workflow_run_execution_id != execution.id } %></dd>
          </dl>
          <dl>
            <dt>URL</dt>
            <dd><%= link_to nil, workflow_run_attempt_url(host: GitHub.url, workflow_run_id: workflow_run.id, repository: current_repository, user_id: current_repository.owner.login, attempt: execution.attempt), target: :_blank, rel: "noopener noreferrer" %></dd>
          </dl>
          <% unless GitHub.enterprise? %>
            <div class="text-small mb-1">
              <%= link_to "Splunk logs", Stafftools::RepositoriesHelper.get_splunk_link(execution), target: :_blank, rel: "noopener noreferrer" %>
            </div>
            <div class="text-small mb-1">
              <%= link_to "Kusto logs", Stafftools::RepositoriesHelper.get_kusto_link_for_workflow_trace(execution.external_id), target: :_blank, rel: "noopener noreferrer" %>
            </div>
          <% end %>
        <% end %>
        <% component.with_row do %>
          <h4>Check Runs</h4>
        <% end %>
        <% check_runs.each do |check_run| %>
          <% component.with_row do %>
            <%= render partial: "stafftools/repositories/actions/check_run", locals: { check_run: check_run, execution: execution } %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
  <% else %>
    <%= render(Primer::Beta::BorderBox.new(padding: :condensed, classes: "summary")) do |component| %>
      <% component.with_header(font_weight: :bold) do %>
        Check Runs
      <% end %>
      <%
        check_suite.check_runs.where(repository_id: current_repository.id).each do |check_run|
      %>
        <% component.with_row do %>
          <h4>Check run ID: <%= check_run.id %></h4>
          <%= render partial: "stafftools/repositories/actions/check_run", locals: { check_run: check_run }%>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
  <% if show_annotations %>
    <div class="Box">
      <div class="Box-header">
        <h3 class="Box-title">Annotations</h3>
      </div>
      <ul>
        <% annotations.each do |annotation| %>
          <%
            is_error = annotation.warning_level == "failure"
            icon = is_error ? "x-circle-fill" : "alert"
            color = is_error ? :danger : :attention
            name = annotation.check_run.present? ? annotation.check_run.display_name : annotation.check_suite.name
          %>
          <li class="Box-row">
            <strong>
              <%= render Primer::Beta::Octicon.new(icon: icon, color: color, mr: 1) %>
              <%= check_suite.name %>
            </strong>
            <br>
            <%= annotation.message %>
          </li>
        <% end %>
      </ul>
    </div>
  <% end %>
<% end %>
