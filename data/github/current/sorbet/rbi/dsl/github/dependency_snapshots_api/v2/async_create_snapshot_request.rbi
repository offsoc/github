# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Github::DependencySnapshotsApi::V2::AsyncCreateSnapshotRequest`.
# Please instead update this file by running `bin/tapioca dsl Github::DependencySnapshotsApi::V2::AsyncCreateSnapshotRequest`.

class Github::DependencySnapshotsApi::V2::AsyncCreateSnapshotRequest
  sig do
    params(
      pull_request: T.nilable(Github::DependencySnapshotsApi::Entities::PullRequest),
      push: T.nilable(Github::DependencySnapshotsApi::Entities::Push),
      received_at: T.nilable(Google::Protobuf::Timestamp),
      ref: T.nilable(String),
      repository: T.nilable(Github::DependencySnapshotsApi::Entities::Repository),
      repository_owner: T.nilable(Github::DependencySnapshotsApi::Entities::User),
      scanned_at: T.nilable(Google::Protobuf::Timestamp),
      sha: T.nilable(String),
      snapshot_payload: T.nilable(String)
    ).void
  end
  def initialize(pull_request: nil, push: nil, received_at: nil, ref: nil, repository: nil, repository_owner: nil, scanned_at: nil, sha: nil, snapshot_payload: nil); end

  sig { void }
  def clear_pull_request; end

  sig { void }
  def clear_push; end

  sig { void }
  def clear_received_at; end

  sig { void }
  def clear_ref; end

  sig { void }
  def clear_repository; end

  sig { void }
  def clear_repository_owner; end

  sig { void }
  def clear_scanned_at; end

  sig { void }
  def clear_sha; end

  sig { void }
  def clear_snapshot_payload; end

  sig { returns(T.nilable(Github::DependencySnapshotsApi::Entities::PullRequest)) }
  def pull_request; end

  sig { params(value: T.nilable(Github::DependencySnapshotsApi::Entities::PullRequest)).void }
  def pull_request=(value); end

  sig { returns(T.nilable(Github::DependencySnapshotsApi::Entities::Push)) }
  def push; end

  sig { params(value: T.nilable(Github::DependencySnapshotsApi::Entities::Push)).void }
  def push=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def received_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def received_at=(value); end

  sig { returns(String) }
  def ref; end

  sig { params(value: String).void }
  def ref=(value); end

  sig { returns(T.nilable(Github::DependencySnapshotsApi::Entities::Repository)) }
  def repository; end

  sig { params(value: T.nilable(Github::DependencySnapshotsApi::Entities::Repository)).void }
  def repository=(value); end

  sig { returns(T.nilable(Github::DependencySnapshotsApi::Entities::User)) }
  def repository_owner; end

  sig { params(value: T.nilable(Github::DependencySnapshotsApi::Entities::User)).void }
  def repository_owner=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def scanned_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def scanned_at=(value); end

  sig { returns(String) }
  def sha; end

  sig { params(value: String).void }
  def sha=(value); end

  sig { returns(String) }
  def snapshot_payload; end

  sig { params(value: String).void }
  def snapshot_payload=(value); end
end
