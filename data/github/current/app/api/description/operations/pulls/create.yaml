---
summary: Create a pull request
description: |-
  Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](${externalDocsUrl}/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

  To open or update a pull request in a public repository, you must have write access to the head or the source branch. For organization-owned repositories, you must be a member of the organization that owns the repository to open or update a pull request.

  This endpoint triggers [notifications](${externalDocsUrl}/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "[Rate limits for the API](${externalDocsUrl}/rest/using-the-rest-api/rate-limits-for-the-rest-api#about-secondary-rate-limits)" and "[Best practices for using the REST API](${externalDocsUrl}/rest/guides/best-practices-for-using-the-rest-api)."

  This endpoint supports the following custom media types. For more information, see "[Media types](${externalDocsUrl}/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."

  - **`application/vnd.github.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.
  - **`application/vnd.github.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.
  - **`application/vnd.github.html+json`**: Returns HTML rendered from the body's markdown. Response will include `body_html`.
  - **`application/vnd.github.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.
tags:
  - pulls
operationId: pulls/create
externalDocs:
  description: API method documentation
  url: '${externalDocsUrl}/rest/pulls/pulls#create-a-pull-request'
parameters:
  - $ref: '../../components/parameters/owner.yaml'
  - $ref: '../../components/parameters/repo.yaml'
requestBody:
  required: true
  content:
    application/json:
      schema:
        type: object
        properties:
          title:
            type: string
            description: The title of the new pull request. Required unless `issue` is specified.
          head:
            type: string
            description: 'The name of the branch where your changes are implemented.
              For cross-repository pull requests in the same network, namespace `head`
              with a user like this: `username:branch`.'
          head_repo:
            type: string
            description: The name of the repository where the changes in the pull request were made.
              This field is required for cross-repository pull requests if both repositories are
              owned by the same organization.
            format: repo.nwo
            example: octo-org/octo-repo
          base:
            type: string
            description: The name of the branch you want the changes pulled into.
              This should be an existing branch on the current repository. You cannot
              submit a pull request to one repository that requests a merge to a base
              of another repository.
          body:
            type: string
            description: The contents of the pull request.
          maintainer_can_modify:
            type: boolean
            description:
              Indicates whether [maintainers can modify](${externalDocsUrl}/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/)
              the pull request.
          draft:
            type: boolean
            description: Indicates whether the pull request is a draft. See "[Draft
              Pull Requests](${externalDocsUrl}/articles/about-pull-requests#draft-pull-requests)"
              in the GitHub Help documentation to learn more.
          issue:
            type: integer
            format: int64
            example: 1
            description: An issue in the repository to convert to a pull request. The issue title, body, and comments will become the title, body, and comments on the new pull request. Required unless `title` is specified.
        # This is the "correct" description of what parameters are required - you must always provide `head` and
        # `base`, and then either `title` or `issue` (not both!). We aren't able to render this properly in our docs,
        # so we go with a simpler representation of the required parameters.
        #
        # TODO: Switch to this `required` declaration once https://github.com/github/docs-engineering/issues/2020 is fixed
        # oneOf:
        #   - required:
        #     - head
        #     - base
        #     - title
        #   - required:
        #     - head
        #     - base
        #     - issue
        required:
          - head
          - base
      examples:
        default:
          value:
            title: Amazing new feature
            body: Please pull these awesome changes in!
            head: octocat:new-feature
            base: master
responses:
  '201':
    description: Response
    content:
      application/json:
        schema:
          $ref: '../../components/schemas/pull-request.yaml'
        examples:
          default:
            $ref: '../../components/examples/pull-request.yaml'
    headers:
      Location:
        example: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        schema:
          type: string
  '403':
    $ref: '../../components/responses/forbidden.yaml'
  '422':
    $ref: '../../components/responses/validation_failed.yaml'
x-github-releases:
  - ghec
  - ghes: '>= 2.18'
  - api.github.com
x-github:
  triggersNotification: true
  githubCloudOnly: false
  enabledForGitHubApps: true

  category: pulls
  subcategory: pulls
x-github-internal:
  path: '/repos/{owner}/{repo}/pulls'
  http-method: post
  service-tier: 1
  owner: '@github/pull-requests'
  published: true
x-githubEnterpriseOverlays:
  '<3.8':
    requestBody:
      content:
        application/json:
          schema:
            properties:
              head_repo:
