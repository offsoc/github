<% if error_getting_usage? %>
  <div <%= test_selector "packages-usage-component" %>>
    <%= render(Primer::Box.new( color: :muted, text_align: :center)) do %>
      <%= render(Primer::Beta::Text.new(tag: :p, my: 3)) do %>
        <%= render(Primer::Beta::Octicon.new(icon: :stop, color: :muted, mr: 2)) %>
        Error: Unable to load the data at this time. <%= link_to "Refresh", "", class: "Link--inTextBlock" %> the page or try again later.
      <% end %>
    <% end %>
  </div>
<% else %>
  <div <%= test_selector "packages-usage-component" %>>
    <details class="Box-row billing-box-accordion details-reset p-0 d-flex flex-items-center color-fg-muted">
      <summary class="Details-element">
        <div class="py-2 pr-3 d-flex user-select-none flex-items-center">
            <div class="billing-box-accordion-state col-1 text-center color-fg-muted text-small">
              <%= render(Primer::Beta::Octicon.new(icon: "chevron-right")) %>
            </div>
          <div class="d-flex flex-auto flex-justify-between flex-items-center">
            <div class="my-1 col-md-6 col-8 pr-3">
              <div class="d-flex flex-md-row flex-column flex-items-baseline mb-1">
                <%= render(Primer::Beta::Text.new(tag: :p, font_weight: :bold, flex: :auto, display: :inline_block, mb: 1 )) do %>
                  Data transfer out
                <% end %>
                <%= render(Primer::Beta::Text.new(tag: :p, font_size: :small, display: :inline_block, mb: 1 )) do %>
                  <% if enterprise_org? %>
                    <strong>
                      <%= number_with_precision(account_total_quantity_consumed, precision: 2, delimiter: ",") %>
                    </strong> included GB used
                  <% elsif !exhausted_entitlements? %>
                    <strong>
                      <%= number_with_precision(entitlements&.consumed_quantity || 0, precision: 2, delimiter: ",") %>
                    </strong> GB of <%= number_with_precision(entitlements&.allocated_quantity || 0, precision: 1, delimiter: ",") %> GB included
                  <% else %>
                    <strong><%= number_with_precision(entitlements&.consumed_quantity || 0, precision: 2, delimiter: ",") %></strong> included GB used
                  <% end %>
                <% end %>
              </div>
              <div class="billing-box-progress">
                <%= render(Primer::Beta::ProgressBar.new(size: :small)) do |component| %>
                  <% component.with_item(bg: progress_bar_color, percentage: entitlements_used_percentage) %>
                <% end %>
              </div>
            </div>
            <% unless enterprise_org? %>
              <div class="text-right color-fg-default" <%= test_selector "packages-total-spent" %>>
                <%= total_charges.format(:no_cents_if_whole => false) %>
              </div>
            <% end %>
          </div>
        </div>
      </summary>
      <% if enterprise_org? %>
        <div class="d-flex pb-4">
          <div class="flex-shrink-0 col-1"></div>
          <div class="flex-auto mb-n2 pr-3 text-small">
            <%= render(Primer::Beta::Text.new(tag: :p, font_size: :small, mb: 1 )) do %>
              <%= enterprise_org_entitlement_text %>
            <% end %>
          </div>
        </div>
      <% else %>
        <div class="d-flex pb-4">
          <div class="flex-shrink-0 col-1"></div>
          <div class="flex-auto mb-n2 pr-3 text-small">
            <table class="width-full text-left">
              <thead>
                <tr class="color-fg-muted lh-condensed">
                  <th class="col-5"></th>
                  <th class="text-bold col-2 pt-1 pb-2">Included</th>
                  <th class="text-bold col-2 pt-1 pb-2">Paid</th>
                  <th class="text-bold col-3 pt-1 pb-2">Price estimate / GB</th>
                  <th></th>
                </tr>
              </thead>
              <tbody class="lh-condensed">
                <% usage_for_skus.each do |line| %>
                  <tr>
                    <td class="py-2">Data transfer out (rounded)</td>
                    <td class="py-2">
                      <span <%= test_selector "packages-entitlement-quantity" %>>
                        <%= number_with_precision(line.entitlement_raw_quantity_consumed, precision: 2, delimiter: ",") %>
                      </span>
                    </td>
                    <td <%= test_selector "packages-overage-quantity" %>>
                      <%= number_with_precision(line.overage_consumed_quantity, precision: 2, delimiter: ",") %>
                    </td>
                    <td
                      <%= test_selector "standard-line-unit-price" %>><%= "$#{number_with_precision(line.unit_price, precision: 2)}"  %>
                    </td>
                    <td
                      <%= test_selector "standard-sku-total-cost" %> align="right"><%= Billing::Money.new(line.estimated_cost).format %>
                    </td>
                  </tr>
                <% end %>
              </tbody>
            </table>
          </div>
        </div>
      <% end %>
    </details>
  </div>

  <% unless enterprise_org? %>
    <%= render "billing_settings/spending_limit_footer",
      spending_limit_enabled: spending_limit_enabled,
      spending_limit_path: spending_limit_path,
      amount: total_charges,
      budget: budget
    %>
  <% end %>
<% end %>
