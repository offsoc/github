# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::Entities::Avatar`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::Entities::Avatar`.

class Hydro::Schemas::Github::V1::Entities::Avatar
  sig do
    params(
      asset_id: T.nilable(Google::Protobuf::UInt32Value),
      content_type: T.nilable(String),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      cropped_height: T.nilable(Integer),
      cropped_width: T.nilable(Integer),
      cropped_x: T.nilable(Integer),
      cropped_y: T.nilable(Integer),
      height: T.nilable(Integer),
      id: T.nilable(Integer),
      oid: T.nilable(String),
      owner_id: T.nilable(Integer),
      owner_type: T.nilable(String),
      size: T.nilable(Integer),
      storage_blob_id: T.nilable(Google::Protobuf::UInt32Value),
      storage_provider: T.nilable(String),
      updated_at: T.nilable(Google::Protobuf::Timestamp),
      uploader_id: T.nilable(Integer),
      width: T.nilable(Integer)
    ).void
  end
  def initialize(asset_id: nil, content_type: nil, created_at: nil, cropped_height: nil, cropped_width: nil, cropped_x: nil, cropped_y: nil, height: nil, id: nil, oid: nil, owner_id: nil, owner_type: nil, size: nil, storage_blob_id: nil, storage_provider: nil, updated_at: nil, uploader_id: nil, width: nil); end

  sig { returns(T.nilable(Google::Protobuf::UInt32Value)) }
  def asset_id; end

  sig { params(value: T.nilable(Google::Protobuf::UInt32Value)).void }
  def asset_id=(value); end

  sig { void }
  def clear_asset_id; end

  sig { void }
  def clear_content_type; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_cropped_height; end

  sig { void }
  def clear_cropped_width; end

  sig { void }
  def clear_cropped_x; end

  sig { void }
  def clear_cropped_y; end

  sig { void }
  def clear_height; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_oid; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_owner_type; end

  sig { void }
  def clear_size; end

  sig { void }
  def clear_storage_blob_id; end

  sig { void }
  def clear_storage_provider; end

  sig { void }
  def clear_updated_at; end

  sig { void }
  def clear_uploader_id; end

  sig { void }
  def clear_width; end

  sig { returns(String) }
  def content_type; end

  sig { params(value: String).void }
  def content_type=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(Integer) }
  def cropped_height; end

  sig { params(value: Integer).void }
  def cropped_height=(value); end

  sig { returns(Integer) }
  def cropped_width; end

  sig { params(value: Integer).void }
  def cropped_width=(value); end

  sig { returns(Integer) }
  def cropped_x; end

  sig { params(value: Integer).void }
  def cropped_x=(value); end

  sig { returns(Integer) }
  def cropped_y; end

  sig { params(value: Integer).void }
  def cropped_y=(value); end

  sig { returns(Integer) }
  def height; end

  sig { params(value: Integer).void }
  def height=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(String) }
  def oid; end

  sig { params(value: String).void }
  def oid=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(String) }
  def owner_type; end

  sig { params(value: String).void }
  def owner_type=(value); end

  sig { returns(Integer) }
  def size; end

  sig { params(value: Integer).void }
  def size=(value); end

  sig { returns(T.nilable(Google::Protobuf::UInt32Value)) }
  def storage_blob_id; end

  sig { params(value: T.nilable(Google::Protobuf::UInt32Value)).void }
  def storage_blob_id=(value); end

  sig { returns(String) }
  def storage_provider; end

  sig { params(value: String).void }
  def storage_provider=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end

  sig { returns(Integer) }
  def uploader_id; end

  sig { params(value: Integer).void }
  def uploader_id=(value); end

  sig { returns(Integer) }
  def width; end

  sig { params(value: Integer).void }
  def width=(value); end
end
