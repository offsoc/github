# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Sponsors::V1::EarlyFraudWarning`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Sponsors::V1::EarlyFraudWarning`.

class Hydro::Schemas::Github::Sponsors::V1::EarlyFraudWarning
  sig do
    params(
      actionable: T.nilable(T::Boolean),
      fraud_type: T.nilable(T.any(Symbol, Integer)),
      sponsor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      sponsorable: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      sponsors_listing: T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsListing),
      sponsors_listing_stafftools_metadata: T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsListingStafftoolsMetadata),
      stripe_account_id: T.nilable(String),
      stripe_charge_id: T.nilable(String),
      stripe_connect_account: T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::StripeConnectAccount),
      stripe_fraud_id: T.nilable(String),
      stripe_timestamp: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(actionable: nil, fraud_type: nil, sponsor: nil, sponsorable: nil, sponsors_listing: nil, sponsors_listing_stafftools_metadata: nil, stripe_account_id: nil, stripe_charge_id: nil, stripe_connect_account: nil, stripe_fraud_id: nil, stripe_timestamp: nil); end

  sig { returns(T::Boolean) }
  def actionable; end

  sig { params(value: T::Boolean).void }
  def actionable=(value); end

  sig { void }
  def clear_actionable; end

  sig { void }
  def clear_fraud_type; end

  sig { void }
  def clear_sponsor; end

  sig { void }
  def clear_sponsorable; end

  sig { void }
  def clear_sponsors_listing; end

  sig { void }
  def clear_sponsors_listing_stafftools_metadata; end

  sig { void }
  def clear_stripe_account_id; end

  sig { void }
  def clear_stripe_charge_id; end

  sig { void }
  def clear_stripe_connect_account; end

  sig { void }
  def clear_stripe_fraud_id; end

  sig { void }
  def clear_stripe_timestamp; end

  sig { returns(T.any(Symbol, Integer)) }
  def fraud_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def fraud_type=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def sponsor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def sponsor=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def sponsorable; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def sponsorable=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsListing)) }
  def sponsors_listing; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsListing)).void }
  def sponsors_listing=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsListingStafftoolsMetadata)) }
  def sponsors_listing_stafftools_metadata; end

  sig do
    params(
      value: T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsListingStafftoolsMetadata)
    ).void
  end
  def sponsors_listing_stafftools_metadata=(value); end

  sig { returns(String) }
  def stripe_account_id; end

  sig { params(value: String).void }
  def stripe_account_id=(value); end

  sig { returns(String) }
  def stripe_charge_id; end

  sig { params(value: String).void }
  def stripe_charge_id=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::StripeConnectAccount)) }
  def stripe_connect_account; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::StripeConnectAccount)).void }
  def stripe_connect_account=(value); end

  sig { returns(String) }
  def stripe_fraud_id; end

  sig { params(value: String).void }
  def stripe_fraud_id=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def stripe_timestamp; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def stripe_timestamp=(value); end
end
