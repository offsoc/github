{"version":3,"file":"vendors-node_modules_primer_react_lib-esm_PageLayout_PageLayout_js-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/react-intersection-observer/react-intersection-observer.modern.mjs","node_modules/@primer/react/lib-esm/PageLayout/useStickyPaneHeight.js","node_modules/@primer/react/lib-esm/PageLayout/PageLayout.js"],"sourcesContent":["import * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst observerMap = new Map();\nconst RootIds = new WeakMap();\nlet rootId = 0;\nlet unsupportedValue = undefined;\n/**\r\n * What should be the default behavior if the IntersectionObserver is unsupported?\r\n * Ideally the polyfill has been loaded, you can have the following happen:\r\n * - `undefined`: Throw an error\r\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\r\n * **/\n\nfunction defaultFallbackInView(inView) {\n  unsupportedValue = inView;\n}\n/**\r\n * Generate a unique ID for the root element\r\n * @param root\r\n */\n\nfunction getRootId(root) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n/**\r\n * Convert the options to a string Id, based on the values.\r\n * Ensures we can reuse the same observer when observing elements with the same options.\r\n * @param options\r\n */\n\n\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(key => options[key] !== undefined).map(key => {\n    return `${key}_${key === 'root' ? getRootId(options.root) : options[key]}`;\n  }).toString();\n}\n\nfunction createObserver(options) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map();\n    let thresholds;\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        var _elements$get;\n\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView = entry.isIntersecting && thresholds.some(threshold => entry.intersectionRatio >= threshold); // @ts-ignore support IntersectionObserver v2\n\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        (_elements$get = elements.get(entry.target)) == null ? void 0 : _elements$get.forEach(callback => {\n          callback(inView, entry);\n        });\n      });\n    }, options); // Ensure we have a valid thresholds array. If not, use the threshold from the options\n\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id,\n      observer,\n      elements\n    };\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n/**\r\n * @param element - DOM Element to observe\r\n * @param callback - Callback function to trigger when intersection status changes\r\n * @param options - Intersection Observer options\r\n * @param fallbackInView - Fallback inView value.\r\n * @return Function - Cleanup function that should be triggered to unregister the observer\r\n */\n\n\nfunction observe(element, callback, options = {}, fallbackInView = unsupportedValue) {\n  if (typeof window.IntersectionObserver === 'undefined' && fallbackInView !== undefined) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio: typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds\n    });\n    return () => {// Nothing to cleanup\n    };\n  } // An observer with the same options can be reused, so lets use this fact\n\n\n  const {\n    id,\n    observer,\n    elements\n  } = createObserver(options); // Register the callback listener for this element\n\n  let callbacks = elements.get(element) || [];\n\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n\nconst _excluded = [\"children\", \"as\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\", \"skip\", \"trackVisibility\", \"delay\", \"initialInView\", \"fallbackInView\"];\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\r\n ## Render props\r\n\n To use the `<InView>` component, you pass it a function. It will be called\r\n whenever the state changes, with the new value of `inView`. In addition to the\r\n `inView` prop, children also receive a `ref` that should be set on the\r\n containing DOM element. This is the element that the IntersectionObserver will\r\n monitor.\r\n\n If you need it, you can also access the\r\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\r\n on `entry`, giving you access to all the details about the current intersection\r\n state.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView>\r\n {({ inView, ref, entry }) => (\r\n      <div ref={ref}>\r\n        <h2>{`Header inside viewport ${inView}.`}</h2>\r\n      </div>\r\n    )}\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n\n ## Plain children\r\n\n You can pass any element to the `<InView />`, and it will handle creating the\r\n wrapping DOM element. Add a handler to the `onChange` method, and control the\r\n state in your own component. Any extra props you add to `<InView>` will be\r\n passed to the HTML element, allowing you set the `className`, `style`, etc.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\r\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n */\n\n\nclass InView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.node = null;\n    this._unobserveCb = null;\n\n    this.handleNode = node => {\n      if (this.node) {\n        // Clear the old observer, before we start observing a new element\n        this.unobserve();\n\n        if (!node && !this.props.triggerOnce && !this.props.skip) {\n          // Reset the state if we get a new node, and we aren't ignoring updates\n          this.setState({\n            inView: !!this.props.initialInView,\n            entry: undefined\n          });\n        }\n      }\n\n      this.node = node ? node : null;\n      this.observeNode();\n    };\n\n    this.handleChange = (inView, entry) => {\n      if (inView && this.props.triggerOnce) {\n        // If `triggerOnce` is true, we should stop observing the element.\n        this.unobserve();\n      }\n\n      if (!isPlainChildren(this.props)) {\n        // Store the current State, so we can pass it to the children in the next render update\n        // There's no reason to update the state for plain children, since it's not used in the rendering.\n        this.setState({\n          inView,\n          entry\n        });\n      }\n\n      if (this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        this.props.onChange(inView, entry);\n      }\n    };\n\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView\n    } = this.props;\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold,\n      root,\n      rootMargin,\n      // @ts-ignore\n      trackVisibility,\n      // @ts-ignore\n      delay\n    }, fallbackInView);\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n\n      this._unobserveCb = null;\n    }\n  }\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const {\n        inView,\n        entry\n      } = this.state;\n      return this.props.children({\n        inView,\n        entry,\n        ref: this.handleNode\n      });\n    }\n\n    const _this$props = this.props,\n          {\n      children,\n      as\n    } = _this$props,\n          props = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return React.createElement(as || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  }\n\n}\n\n/**\r\n * React Hooks make it easy to monitor the `inView` state of your components. Call\r\n * the `useInView` hook with the (optional) [options](#options) you need. It will\r\n * return an array containing a `ref`, the `inView` status and the current\r\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\r\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\r\n * report the status.\r\n *\r\n * @example\r\n * ```jsx\r\n * import React from 'react';\r\n * import { useInView } from 'react-intersection-observer';\r\n *\r\n * const Component = () => {\r\n *   const { ref, inView, entry } = useInView({\r\n *       threshold: 0,\r\n *   });\r\n *\r\n *   return (\r\n *     <div ref={ref}>\r\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\r\n *     </div>\r\n *   );\r\n * };\r\n * ```\r\n */\n\nfunction useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange\n} = {}) {\n  var _state$entry;\n\n  const [ref, setRef] = React.useState(null);\n  const callback = React.useRef();\n  const [state, setState] = React.useState({\n    inView: !!initialInView,\n    entry: undefined\n  }); // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n\n  callback.current = onChange;\n  React.useEffect(() => {\n    // Ensure we have node ref, and that we shouldn't skip observing\n    if (skip || !ref) return;\n    let unobserve;\n    unobserve = observe(ref, (inView, entry) => {\n      setState({\n        inView,\n        entry\n      });\n      if (callback.current) callback.current(inView, entry);\n\n      if (entry.isIntersecting && triggerOnce && unobserve) {\n        // If it should only trigger once, unobserve the element after it's inView\n        unobserve();\n        unobserve = undefined;\n      }\n    }, {\n      root,\n      rootMargin,\n      threshold,\n      // @ts-ignore\n      trackVisibility,\n      // @ts-ignore\n      delay\n    }, fallbackInView);\n    return () => {\n      if (unobserve) {\n        unobserve();\n      }\n    };\n  }, // We break the rule here, because we aren't including the actual `threshold` variable\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [// If the threshold is an array, convert it to a string, so it won't change between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  Array.isArray(threshold) ? threshold.toString() : threshold, ref, root, rootMargin, triggerOnce, skip, trackVisibility, fallbackInView, delay]);\n  const entryTarget = (_state$entry = state.entry) == null ? void 0 : _state$entry.target;\n  const previousEntryTarget = React.useRef();\n\n  if (!ref && entryTarget && !triggerOnce && !skip && previousEntryTarget.current !== entryTarget) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry]; // Support object destructuring, by adding the specific values.\n\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\n\nexport { InView, defaultFallbackInView, observe, useInView };\n//# sourceMappingURL=react-intersection-observer.modern.mjs.map\n","import React from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport { canUseDOM } from '../utils/environment.js';\nimport useIsomorphicLayoutEffect from '../utils/useIsomorphicLayoutEffect.js';\nimport { getScrollContainer } from '../utils/scroll.js';\n\n/**\n * Calculates the height of the sticky pane such that it always\n * fits into the viewport even when the header or footer are visible.\n */\nfunction useStickyPaneHeight() {\n  const rootRef = React.useRef(null);\n\n  // Default the height to the viewport height\n  const [height, setHeight] = React.useState(dvh(100));\n  const [offsetHeader, setOffsetHeader] = React.useState(0);\n\n  // Create intersection observers to track the top and bottom of the content region\n  const [contentTopRef, contentTopInView, contentTopEntry] = useInView();\n  const [contentBottomRef, contentBottomInView] = useInView();\n\n  // Calculate the height of the sticky pane based on the position of the\n  // top and bottom of the content region\n  const calculateHeight = React.useCallback(() => {\n    // Uncomment to debug\n    // console.log('Recalculating pane height...')\n\n    let calculatedHeight = '';\n    const scrollContainer = getScrollContainer(rootRef.current);\n    const topRect = contentTopEntry === null || contentTopEntry === void 0 ? void 0 : contentTopEntry.target.getBoundingClientRect();\n\n    // Custom sticky header's height with units\n    const offsetHeaderWithUnits = typeof offsetHeader === 'number' ? `${offsetHeader}px` : offsetHeader;\n    if (scrollContainer) {\n      const scrollRect = scrollContainer.getBoundingClientRect();\n      const topOffset = topRect ? Math.max(topRect.top - scrollRect.top, 0) : 0;\n      calculatedHeight = `calc(${scrollRect.height}px - (max(${topOffset}px, ${offsetHeaderWithUnits})))`;\n    } else {\n      const topOffset = topRect ? Math.max(topRect.top, 0) : 0;\n      calculatedHeight = `calc(${dvh(100)} - (max(${topOffset}px, ${offsetHeaderWithUnits})))`;\n    }\n    setHeight(calculatedHeight);\n  }, [contentTopEntry, offsetHeader]);\n\n  // We only want to add scroll and resize listeners if the pane is sticky.\n  // Since hooks can't be called conditionally, we need to use state to track\n  // if the pane is sticky.\n  const [isEnabled, setIsEnabled] = React.useState(false);\n  useIsomorphicLayoutEffect(() => {\n    const scrollContainer = getScrollContainer(rootRef.current);\n    if (isEnabled && (contentTopInView || contentBottomInView)) {\n      calculateHeight();\n\n      // Start listeners if the top or the bottom edge of the content region is visible\n\n      if (scrollContainer) {\n        // eslint-disable-next-line github/prefer-observers\n        scrollContainer.addEventListener('scroll', calculateHeight);\n      } else {\n        // eslint-disable-next-line github/prefer-observers\n        window.addEventListener('scroll', calculateHeight);\n      }\n\n      // eslint-disable-next-line github/prefer-observers\n      window.addEventListener('resize', calculateHeight);\n    }\n    return () => {\n      // Stop listeners if neither the top nor the bottom edge of the content region is visible\n\n      if (scrollContainer) {\n        scrollContainer.removeEventListener('scroll', calculateHeight);\n      } else {\n        window.removeEventListener('scroll', calculateHeight);\n      }\n      window.removeEventListener('resize', calculateHeight);\n    };\n  }, [isEnabled, contentTopInView, contentBottomInView, calculateHeight]);\n  function enableStickyPane(top) {\n    setIsEnabled(true);\n    setOffsetHeader(top);\n  }\n  function disableStickyPane() {\n    setIsEnabled(false);\n  }\n  return {\n    rootRef,\n    enableStickyPane,\n    disableStickyPane,\n    contentTopRef,\n    contentBottomRef,\n    stickyPaneHeight: height\n  };\n}\n\n// TODO: there is currently an issue with dvh on Desktop Safari 15.6, 16.0. To\n// work around it, we check to see if the device supports touch along with the\n// dvh unit in order to target iPad. When the bug is addressed this check will\n// no longer be needed\n//\n// @see https://bugs.webkit.org/show_bug.cgi?id=242758\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nconst supportsTouchCallout = canUseDOM ? CSS.supports('-webkit-touch-callout', 'none') : false;\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nconst supportsDVH = canUseDOM ? CSS.supports('max-height', '100dvh') && supportsTouchCallout : false;\n\n/**\n * Convert the given value to a dvh value, if supported, otherwise it falls back\n * to vh\n */\nfunction dvh(value) {\n  if (supportsDVH) {\n    return `${value}dvh`;\n  }\n  return `${value}vh`;\n}\n\nexport { useStickyPaneHeight };\n","import React, { useRef } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport Box from '../Box/Box.js';\nimport { useId } from '../hooks/useId.js';\nimport { useRefObjectAsForwardedRef } from '../hooks/useRefObjectAsForwardedRef.js';\nimport { isResponsiveValue, useResponsiveValue } from '../hooks/useResponsiveValue.js';\nimport { useSlots } from '../hooks/useSlots.js';\nimport '@styled-system/css';\nimport merge from 'deepmerge';\nimport { canUseDOM } from '../utils/environment.js';\nimport { useOverflow } from '../hooks/useOverflow.js';\nimport { warning } from '../utils/warning.js';\nimport { useStickyPaneHeight } from './useStickyPaneHeight.js';\n\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nconst REGION_ORDER = {\n  header: 0,\n  paneStart: 1,\n  content: 2,\n  paneEnd: 3,\n  footer: 4\n};\nconst SPACING_MAP = {\n  none: 0,\n  condensed: 3,\n  normal: [3, null, null, 4]\n};\nconst PageLayoutContext = /*#__PURE__*/React.createContext({\n  padding: 'normal',\n  rowGap: 'normal',\n  columnGap: 'normal',\n  paneRef: {\n    current: null\n  }\n});\n\n// ----------------------------------------------------------------------------\n// PageLayout\n\nconst containerWidths = {\n  full: '100%',\n  medium: '768px',\n  large: '1012px',\n  xlarge: '1280px'\n};\n\n// TODO: refs\nconst Root = ({\n  containerWidth = 'xlarge',\n  padding = 'normal',\n  rowGap = 'normal',\n  columnGap = 'normal',\n  children,\n  sx = {},\n  _slotsConfig: slotsConfig\n}) => {\n  const {\n    rootRef,\n    enableStickyPane,\n    disableStickyPane,\n    contentTopRef,\n    contentBottomRef,\n    stickyPaneHeight\n  } = useStickyPaneHeight();\n  const paneRef = useRef(null);\n  const [slots, rest] = useSlots(children, slotsConfig !== null && slotsConfig !== void 0 ? slotsConfig : {\n    header: Header,\n    footer: Footer\n  });\n  return /*#__PURE__*/React.createElement(PageLayoutContext.Provider, {\n    value: {\n      padding,\n      rowGap,\n      columnGap,\n      enableStickyPane,\n      disableStickyPane,\n      contentTopRef,\n      contentBottomRef,\n      paneRef\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    ref: rootRef,\n    style: {\n      // @ts-ignore TypeScript doesn't know about CSS custom properties\n      '--sticky-pane-height': stickyPaneHeight\n    },\n    sx: merge({\n      padding: SPACING_MAP[padding]\n    }, sx)\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      maxWidth: containerWidths[containerWidth],\n      marginX: 'auto',\n      display: 'flex',\n      flexWrap: 'wrap'\n    }\n  }, slots.header, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: 'flex',\n      flex: '1 1 100%',\n      flexWrap: 'wrap',\n      maxWidth: '100%'\n    }\n  }, rest), slots.footer)));\n};\nRoot.displayName = \"Root\";\nRoot.displayName = 'PageLayout';\n\n// ----------------------------------------------------------------------------\n// Divider (internal)\n\nconst horizontalDividerVariants = {\n  none: {\n    display: 'none'\n  },\n  line: {\n    display: 'block',\n    height: 1,\n    backgroundColor: 'border.default'\n  },\n  filled: {\n    display: 'block',\n    height: 8,\n    backgroundColor: 'canvas.inset',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    boxShadow: theme => `inset 0 -1px 0 0 ${theme.colors.border.default}, inset 0 1px 0 0 ${theme.colors.border.default}`\n  }\n};\nfunction negateSpacingValue(value) {\n  if (Array.isArray(value)) {\n    // Not using recursion to avoid deeply nested arrays\n    return value.map(v => v === null ? null : -v);\n  }\n  return value === null ? null : -value;\n}\nconst HorizontalDivider = ({\n  variant = 'none',\n  sx = {}\n}) => {\n  const {\n    padding\n  } = React.useContext(PageLayoutContext);\n  const responsiveVariant = useResponsiveValue(variant, 'none');\n  return /*#__PURE__*/React.createElement(Box\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  , {\n    sx: theme => merge({\n      // Stretch divider to viewport edges on narrow screens\n      marginX: negateSpacingValue(SPACING_MAP[padding]),\n      ...horizontalDividerVariants[responsiveVariant],\n      [`@media screen and (min-width: ${theme.breakpoints[1]})`]: {\n        marginX: '0 !important'\n      }\n    }, sx)\n  });\n};\nHorizontalDivider.displayName = \"HorizontalDivider\";\nconst verticalDividerVariants = {\n  none: {\n    display: 'none'\n  },\n  line: {\n    display: 'block',\n    width: 1,\n    backgroundColor: 'border.default'\n  },\n  filled: {\n    display: 'block',\n    width: 8,\n    backgroundColor: 'canvas.inset',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    boxShadow: theme => `inset -1px 0 0 0 ${theme.colors.border.default}, inset 1px 0 0 0 ${theme.colors.border.default}`\n  }\n};\nconst DraggingGlobalStyles = createGlobalStyle([\"body[data-page-layout-dragging=\\\"true\\\"]{cursor:col-resize;}body[data-page-layout-dragging=\\\"true\\\"] *{user-select:none;}\"]);\nconst VerticalDivider = ({\n  variant = 'none',\n  draggable = false,\n  onDragStart,\n  onDrag,\n  onDragEnd,\n  onDoubleClick,\n  sx = {}\n}) => {\n  const [isDragging, setIsDragging] = React.useState(false);\n  const [isKeyboardDrag, setIsKeyboardDrag] = React.useState(false);\n  const responsiveVariant = useResponsiveValue(variant, 'none');\n  const stableOnDrag = React.useRef(onDrag);\n  const stableOnDragEnd = React.useRef(onDragEnd);\n  const {\n    paneRef\n  } = React.useContext(PageLayoutContext);\n  const [minWidth, setMinWidth] = React.useState(0);\n  const [maxWidth, setMaxWidth] = React.useState(0);\n  const [currentWidth, setCurrentWidth] = React.useState(0);\n  React.useEffect(() => {\n    if (paneRef.current !== null) {\n      const paneStyles = getComputedStyle(paneRef.current);\n      const maxPaneWidthDiffPixels = paneStyles.getPropertyValue('--pane-max-width-diff');\n      const minWidthPixels = paneStyles.getPropertyValue('--pane-min-width');\n      const paneWidth = paneRef.current.getBoundingClientRect().width;\n      const maxPaneWidthDiff = Number(maxPaneWidthDiffPixels.split('px')[0]);\n      const minPaneWidth = Number(minWidthPixels.split('px')[0]);\n      const viewportWidth = window.innerWidth;\n      const maxPaneWidth = viewportWidth > maxPaneWidthDiff ? viewportWidth - maxPaneWidthDiff : viewportWidth;\n      setMinWidth(minPaneWidth);\n      setMaxWidth(maxPaneWidth);\n      setCurrentWidth(paneWidth || 0);\n    }\n  }, [paneRef, isKeyboardDrag, isDragging]);\n  React.useEffect(() => {\n    stableOnDrag.current = onDrag;\n  }, [onDrag]);\n  React.useEffect(() => {\n    stableOnDragEnd.current = onDragEnd;\n  }, [onDragEnd]);\n  React.useEffect(() => {\n    function handleDrag(event) {\n      var _stableOnDrag$current;\n      (_stableOnDrag$current = stableOnDrag.current) === null || _stableOnDrag$current === void 0 ? void 0 : _stableOnDrag$current.call(stableOnDrag, event.movementX, false);\n      event.preventDefault();\n    }\n    function handleDragEnd(event) {\n      var _stableOnDragEnd$curr;\n      setIsDragging(false);\n      (_stableOnDragEnd$curr = stableOnDragEnd.current) === null || _stableOnDragEnd$curr === void 0 ? void 0 : _stableOnDragEnd$curr.call(stableOnDragEnd);\n      event.preventDefault();\n    }\n    function handleKeyDrag(event) {\n      var _stableOnDrag$current2;\n      let delta = 0;\n      // https://github.com/github/accessibility/issues/5101#issuecomment-1822870655\n      if ((event.key === 'ArrowLeft' || event.key === 'ArrowDown') && currentWidth > minWidth) {\n        delta = -3;\n      } else if ((event.key === 'ArrowRight' || event.key === 'ArrowUp') && currentWidth < maxWidth) {\n        delta = 3;\n      } else {\n        return;\n      }\n      setCurrentWidth(currentWidth + delta);\n      (_stableOnDrag$current2 = stableOnDrag.current) === null || _stableOnDrag$current2 === void 0 ? void 0 : _stableOnDrag$current2.call(stableOnDrag, delta, true);\n      event.preventDefault();\n    }\n    function handleKeyDragEnd(event) {\n      var _stableOnDragEnd$curr2;\n      setIsKeyboardDrag(false);\n      (_stableOnDragEnd$curr2 = stableOnDragEnd.current) === null || _stableOnDragEnd$curr2 === void 0 ? void 0 : _stableOnDragEnd$curr2.call(stableOnDragEnd);\n      event.preventDefault();\n    }\n    // TODO: Support touch events\n    if (isDragging || isKeyboardDrag) {\n      window.addEventListener('mousemove', handleDrag);\n      window.addEventListener('keydown', handleKeyDrag);\n      window.addEventListener('mouseup', handleDragEnd);\n      window.addEventListener('keyup', handleKeyDragEnd);\n      document.body.setAttribute('data-page-layout-dragging', 'true');\n    } else {\n      window.removeEventListener('mousemove', handleDrag);\n      window.removeEventListener('mouseup', handleDragEnd);\n      window.removeEventListener('keydown', handleKeyDrag);\n      window.removeEventListener('keyup', handleKeyDragEnd);\n      document.body.removeAttribute('data-page-layout-dragging');\n    }\n    return () => {\n      window.removeEventListener('mousemove', handleDrag);\n      window.removeEventListener('mouseup', handleDragEnd);\n      window.removeEventListener('keydown', handleKeyDrag);\n      window.removeEventListener('keyup', handleKeyDragEnd);\n      document.body.removeAttribute('data-page-layout-dragging');\n    };\n  }, [isDragging, isKeyboardDrag, currentWidth, minWidth, maxWidth]);\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: merge({\n      height: '100%',\n      position: 'relative',\n      ...verticalDividerVariants[responsiveVariant]\n    }, sx)\n  }, draggable ?\n  /*#__PURE__*/\n  // Drag handle\n  React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      position: 'absolute',\n      inset: '0 -2px',\n      cursor: 'col-resize',\n      bg: isDragging || isKeyboardDrag ? 'accent.fg' : 'transparent',\n      transitionDelay: '0.1s',\n      '&:hover': {\n        bg: isDragging || isKeyboardDrag ? 'accent.fg' : 'neutral.muted'\n      }\n    },\n    role: \"slider\",\n    \"aria-label\": \"Draggable pane splitter\",\n    \"aria-valuemin\": minWidth,\n    \"aria-valuemax\": maxWidth,\n    \"aria-valuenow\": currentWidth,\n    \"aria-valuetext\": `Pane width ${currentWidth} pixels`,\n    tabIndex: 0,\n    onMouseDown: event => {\n      if (event.button === 0) {\n        setIsDragging(true);\n        onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart();\n      }\n    },\n    onKeyDown: event => {\n      if (event.key === 'ArrowLeft' || event.key === 'ArrowRight' || event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n        setIsKeyboardDrag(true);\n        onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart();\n      }\n    },\n    onDoubleClick: onDoubleClick\n  }), /*#__PURE__*/React.createElement(DraggingGlobalStyles, null)) : null);\n};\nVerticalDivider.displayName = \"VerticalDivider\"; // ----------------------------------------------------------------------------\n// PageLayout.Header\nconst Header = ({\n  'aria-label': label,\n  'aria-labelledby': labelledBy,\n  padding = 'none',\n  divider = 'none',\n  dividerWhenNarrow = 'inherit',\n  hidden = false,\n  children,\n  sx = {}\n}) => {\n  // Combine divider and dividerWhenNarrow for backwards compatibility\n  const dividerProp = !isResponsiveValue(divider) && dividerWhenNarrow !== 'inherit' ? {\n    regular: divider,\n    narrow: dividerWhenNarrow\n  } : divider;\n  const dividerVariant = useResponsiveValue(dividerProp, 'none');\n  const isHidden = useResponsiveValue(hidden, false);\n  const {\n    rowGap\n  } = React.useContext(PageLayoutContext);\n  return /*#__PURE__*/React.createElement(Box, {\n    as: \"header\",\n    \"aria-label\": label,\n    \"aria-labelledby\": labelledBy,\n    hidden: isHidden,\n    sx: merge({\n      width: '100%',\n      marginBottom: SPACING_MAP[rowGap]\n    }, sx)\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      padding: SPACING_MAP[padding]\n    }\n  }, children), /*#__PURE__*/React.createElement(HorizontalDivider, {\n    variant: dividerVariant,\n    sx: {\n      marginTop: SPACING_MAP[rowGap]\n    }\n  }));\n};\nHeader.displayName = \"Header\";\nHeader.displayName = 'PageLayout.Header';\n\n// ----------------------------------------------------------------------------\n// PageLayout.Content\n\n// TODO: Account for pane width when centering content\nconst contentWidths = {\n  full: '100%',\n  medium: '768px',\n  large: '1012px',\n  xlarge: '1280px'\n};\nconst Content = ({\n  as = 'main',\n  'aria-label': label,\n  'aria-labelledby': labelledBy,\n  width = 'full',\n  padding = 'none',\n  hidden = false,\n  children,\n  sx = {}\n}) => {\n  const isHidden = useResponsiveValue(hidden, false);\n  const {\n    contentTopRef,\n    contentBottomRef\n  } = React.useContext(PageLayoutContext);\n  return /*#__PURE__*/React.createElement(Box, {\n    as: as,\n    \"aria-label\": label,\n    \"aria-labelledby\": labelledBy,\n    sx: merge({\n      display: isHidden ? 'none' : 'flex',\n      flexDirection: 'column',\n      order: REGION_ORDER.content,\n      // Set flex-basis to 0% to allow flex-grow to control the width of the content region.\n      // Without this, the content region could wrap onto a different line\n      // than the pane region on wide viewports if its contents are too wide.\n      flexBasis: 0,\n      flexGrow: 1,\n      flexShrink: 1,\n      minWidth: 1 // Hack to prevent overflowing content from pushing the pane region to the next line\n    }, sx)\n  }, /*#__PURE__*/React.createElement(Box, {\n    ref: contentTopRef\n  }), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      width: '100%',\n      maxWidth: contentWidths[width],\n      marginX: 'auto',\n      flexGrow: 1,\n      padding: SPACING_MAP[padding]\n    }\n  }, children), /*#__PURE__*/React.createElement(Box, {\n    ref: contentBottomRef\n  }));\n};\nContent.displayName = \"Content\";\nContent.displayName = 'PageLayout.Content';\n\n// ----------------------------------------------------------------------------\n// PageLayout.Pane\n\nconst isCustomWidthOptions = width => {\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  return width.default !== undefined;\n};\nconst isPaneWidth = width => {\n  return ['small', 'medium', 'large'].includes(width);\n};\nconst panePositions = {\n  start: REGION_ORDER.paneStart,\n  end: REGION_ORDER.paneEnd\n};\nconst paneWidths = {\n  small: ['100%', null, '240px', '256px'],\n  medium: ['100%', null, '256px', '296px'],\n  large: ['100%', null, '256px', '320px', '336px']\n};\nconst defaultPaneWidth = {\n  small: 256,\n  medium: 296,\n  large: 320\n};\nconst Pane = /*#__PURE__*/React.forwardRef(({\n  'aria-label': label,\n  'aria-labelledby': labelledBy,\n  position: responsivePosition = 'end',\n  positionWhenNarrow = 'inherit',\n  width = 'medium',\n  minWidth = 256,\n  padding = 'none',\n  resizable = false,\n  widthStorageKey = 'paneWidth',\n  divider: responsiveDivider = 'none',\n  dividerWhenNarrow = 'inherit',\n  sticky = false,\n  offsetHeader = 0,\n  hidden: responsiveHidden = false,\n  children,\n  id,\n  sx = {}\n}, forwardRef) => {\n  // Combine position and positionWhenNarrow for backwards compatibility\n  const positionProp = !isResponsiveValue(responsivePosition) && positionWhenNarrow !== 'inherit' ? {\n    regular: responsivePosition,\n    narrow: positionWhenNarrow\n  } : responsivePosition;\n  const position = useResponsiveValue(positionProp, 'end');\n\n  // Combine divider and dividerWhenNarrow for backwards compatibility\n  const dividerProp = !isResponsiveValue(responsiveDivider) && dividerWhenNarrow !== 'inherit' ? {\n    regular: responsiveDivider,\n    narrow: dividerWhenNarrow\n  } : responsiveDivider;\n  const dividerVariant = useResponsiveValue(dividerProp, 'none');\n  const isHidden = useResponsiveValue(responsiveHidden, false);\n  const {\n    rowGap,\n    columnGap,\n    enableStickyPane,\n    disableStickyPane,\n    paneRef\n  } = React.useContext(PageLayoutContext);\n  React.useEffect(() => {\n    if (sticky) {\n      enableStickyPane === null || enableStickyPane === void 0 ? void 0 : enableStickyPane(offsetHeader);\n    } else {\n      disableStickyPane === null || disableStickyPane === void 0 ? void 0 : disableStickyPane();\n    }\n  }, [sticky, enableStickyPane, disableStickyPane, offsetHeader]);\n  const getDefaultPaneWidth = width => {\n    if (isPaneWidth(width)) {\n      return defaultPaneWidth[width];\n    } else if (isCustomWidthOptions(width)) {\n      return Number(width.default.split('px')[0]);\n    }\n    return 0;\n  };\n  const [paneWidth, setPaneWidth] = React.useState(() => {\n    if (!canUseDOM) {\n      return getDefaultPaneWidth(width);\n    }\n    let storedWidth;\n    try {\n      storedWidth = localStorage.getItem(widthStorageKey);\n    } catch (error) {\n      storedWidth = null;\n    }\n    return storedWidth && !isNaN(Number(storedWidth)) ? Number(storedWidth) : getDefaultPaneWidth(width);\n  });\n  const updatePaneWidth = width => {\n    setPaneWidth(width);\n    try {\n      localStorage.setItem(widthStorageKey, width.toString());\n    } catch (error) {\n      // Ignore errors\n    }\n  };\n  useRefObjectAsForwardedRef(forwardRef, paneRef);\n  const hasOverflow = useOverflow(paneRef);\n  const paneId = useId(id);\n  const labelProp = {};\n  if (hasOverflow) {\n    process.env.NODE_ENV !== \"production\" ? warning(label === undefined && labelledBy === undefined, 'The <PageLayout.Pane> has overflow and `aria-label` or `aria-labelledby` has not been set. ' + 'Please provide `aria-label` or `aria-labelledby` to <PageLayout.Pane> in order to label this ' + 'region.') : void 0;\n    if (labelledBy) {\n      labelProp['aria-labelledby'] = labelledBy;\n    } else if (label) {\n      labelProp['aria-label'] = label;\n    }\n  }\n  return /*#__PURE__*/React.createElement(Box\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  , {\n    sx: theme => merge({\n      // Narrow viewports\n      display: isHidden ? 'none' : 'flex',\n      order: panePositions[position],\n      width: '100%',\n      marginX: 0,\n      ...(position === 'end' ? {\n        flexDirection: 'column',\n        marginTop: SPACING_MAP[rowGap]\n      } : {\n        flexDirection: 'column-reverse',\n        marginBottom: SPACING_MAP[rowGap]\n      }),\n      // Regular and wide viewports\n      [`@media screen and (min-width: ${theme.breakpoints[1]})`]: {\n        width: 'auto',\n        marginY: '0 !important',\n        ...(sticky ? {\n          position: 'sticky',\n          // If offsetHeader has value, it will stick the pane to the position where the sticky top ends\n          // else top will be 0 as the default value of offsetHeader\n          top: typeof offsetHeader === 'number' ? `${offsetHeader}px` : offsetHeader,\n          maxHeight: 'var(--sticky-pane-height)'\n        } : {}),\n        ...(position === 'end' ? {\n          flexDirection: 'row-reverse',\n          marginLeft: SPACING_MAP[columnGap]\n        } : {\n          flexDirection: 'row',\n          marginRight: SPACING_MAP[columnGap]\n        })\n      }\n    }, sx)\n  }, /*#__PURE__*/React.createElement(HorizontalDivider, {\n    variant: {\n      narrow: dividerVariant,\n      regular: 'none'\n    },\n    sx: {\n      [position === 'end' ? 'marginBottom' : 'marginTop']: SPACING_MAP[rowGap]\n    }\n  }), /*#__PURE__*/React.createElement(Box, _extends({\n    ref: paneRef,\n    style: {\n      // @ts-ignore CSS custom properties are not supported by TypeScript\n      '--pane-width': `${paneWidth}px`\n    },\n    sx: theme => ({\n      '--pane-min-width': isCustomWidthOptions(width) ? width.min : `${minWidth}px`,\n      '--pane-max-width-diff': '511px',\n      '--pane-max-width': isCustomWidthOptions(width) ? width.max : `calc(100vw - var(--pane-max-width-diff))`,\n      width: resizable ? ['100%', null, 'clamp(var(--pane-min-width), var(--pane-width), var(--pane-max-width))'] : isPaneWidth(width) ? paneWidths[width] : width.default,\n      padding: SPACING_MAP[padding],\n      overflow: [null, null, 'auto'],\n      [`@media screen and (min-width: ${theme.breakpoints[3]})`]: {\n        '--pane-max-width-diff': '959px'\n      }\n    })\n  }, hasOverflow && {\n    tabIndex: 0,\n    role: 'region'\n  }, labelProp, id && {\n    id: paneId\n  }), children), /*#__PURE__*/React.createElement(VerticalDivider, {\n    variant: {\n      narrow: 'none',\n      // If pane is resizable, always show a vertical divider on regular viewports\n      regular: resizable ? 'line' : dividerVariant\n    }\n    // If pane is resizable, the divider should be draggable\n    ,\n    draggable: resizable,\n    sx: {\n      [position === 'end' ? 'marginRight' : 'marginLeft']: SPACING_MAP[columnGap]\n    },\n    onDrag: (delta, isKeyboard = false) => {\n      // Get the number of pixels the divider was dragged\n      let deltaWithDirection;\n      if (isKeyboard) {\n        deltaWithDirection = delta;\n      } else {\n        deltaWithDirection = position === 'end' ? -delta : delta;\n      }\n      updatePaneWidth(paneWidth + deltaWithDirection);\n    }\n    // Ensure `paneWidth` state and actual pane width are in sync when the drag ends\n    ,\n    onDragEnd: () => {\n      var _paneRef$current;\n      const paneRect = (_paneRef$current = paneRef.current) === null || _paneRef$current === void 0 ? void 0 : _paneRef$current.getBoundingClientRect();\n      if (!paneRect) return;\n      updatePaneWidth(paneRect.width);\n    }\n    // Reset pane width on double click\n    ,\n    onDoubleClick: () => updatePaneWidth(getDefaultPaneWidth(width))\n  }));\n});\nPane.displayName = 'PageLayout.Pane';\n\n// ----------------------------------------------------------------------------\n// PageLayout.Footer\n\nconst Footer = ({\n  'aria-label': label,\n  'aria-labelledby': labelledBy,\n  padding = 'none',\n  divider = 'none',\n  dividerWhenNarrow = 'inherit',\n  hidden = false,\n  children,\n  sx = {}\n}) => {\n  // Combine divider and dividerWhenNarrow for backwards compatibility\n  const dividerProp = !isResponsiveValue(divider) && dividerWhenNarrow !== 'inherit' ? {\n    regular: divider,\n    narrow: dividerWhenNarrow\n  } : divider;\n  const dividerVariant = useResponsiveValue(dividerProp, 'none');\n  const isHidden = useResponsiveValue(hidden, false);\n  const {\n    rowGap\n  } = React.useContext(PageLayoutContext);\n  return /*#__PURE__*/React.createElement(Box, {\n    as: \"footer\",\n    \"aria-label\": label,\n    \"aria-labelledby\": labelledBy,\n    hidden: isHidden,\n    sx: merge({\n      order: REGION_ORDER.footer,\n      width: '100%',\n      marginTop: SPACING_MAP[rowGap]\n    }, sx)\n  }, /*#__PURE__*/React.createElement(HorizontalDivider, {\n    variant: dividerVariant,\n    sx: {\n      marginBottom: SPACING_MAP[rowGap]\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      padding: SPACING_MAP[padding]\n    }\n  }, children));\n};\nFooter.displayName = \"Footer\";\nFooter.displayName = 'PageLayout.Footer';\n\n// ----------------------------------------------------------------------------\n// Export\n\nconst PageLayout = Object.assign(Root, {\n  Header,\n  Content,\n  Pane,\n  Footer\n});\n\nexport { PageLayout };\n"],"names":["unsupportedValue","observerMap","Map","RootIds","WeakMap","rootId","useInView","threshold","delay","trackVisibility","rootMargin","root","triggerOnce","skip","initialInView","fallbackInView","onChange","_state$entry","ref","setRef","callback","state","setState","inView","entry","undefined","current","unobserve","observe","element","options","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","target","intersectionRatio","time","boundingClientRect","intersectionRect","rootBounds","id","observer","elements","createObserver","Object","keys","sort","filter","key","map","has","set","toString","get","instance","thresholds","entries","forEach","_elements$get","some","isVisible","Array","isArray","callbacks","push","splice","indexOf","length","delete","size","disconnect","entryTarget","previousEntryTarget","result","supportsTouchCallout","CSS","supports","supportsDVH","dvh","value","assign","bind","n","e","arguments","t","r","hasOwnProperty","call","apply","REGION_ORDER","paneStart","content","paneEnd","footer","SPACING_MAP","none","condensed","normal","PageLayoutContext","padding","rowGap","columnGap","paneRef","containerWidths","full","medium","large","xlarge","Root","containerWidth","children","sx","_slotsConfig","slotsConfig","rootRef","enableStickyPane","disableStickyPane","contentTopRef","contentBottomRef","stickyPaneHeight","useStickyPaneHeight","height","setHeight","offsetHeader","setOffsetHeader","contentTopInView","contentTopEntry","contentBottomInView","calculateHeight","calculatedHeight","scrollContainer","topRect","offsetHeaderWithUnits","scrollRect","topOffset","Math","max","top","isEnabled","setIsEnabled","useIsomorphicLayoutEffect","addEventListener","removeEventListener","useRef","slots","rest","useSlots","header","Header","Footer","Provider","Box","style","maxWidth","marginX","display","flexWrap","flex","displayName","horizontalDividerVariants","line","backgroundColor","filled","boxShadow","theme","colors","border","default","HorizontalDivider","variant","responsiveVariant","useResponsiveValue","negateSpacingValue","v","breakpoints","verticalDividerVariants","width","DraggingGlobalStyles","VerticalDivider","draggable","onDragStart","onDrag","onDragEnd","onDoubleClick","isDragging","setIsDragging","isKeyboardDrag","setIsKeyboardDrag","stableOnDrag","stableOnDragEnd","minWidth","setMinWidth","setMaxWidth","currentWidth","setCurrentWidth","paneStyles","getComputedStyle","maxPaneWidthDiffPixels","getPropertyValue","minWidthPixels","paneWidth","maxPaneWidthDiff","Number","split","minPaneWidth","viewportWidth","innerWidth","handleDrag","event","_stableOnDrag$current","movementX","preventDefault","handleDragEnd","_stableOnDragEnd$curr","handleKeyDrag","_stableOnDrag$current2","delta","handleKeyDragEnd","_stableOnDragEnd$curr2","document","body","setAttribute","removeAttribute","position","inset","cursor","bg","transitionDelay","role","tabIndex","onMouseDown","button","onKeyDown","label","labelledBy","divider","dividerWhenNarrow","hidden","dividerProp","regular","narrow","dividerVariant","isHidden","as","marginBottom","marginTop","contentWidths","Content","flexDirection","order","flexBasis","flexGrow","flexShrink","isCustomWidthOptions","isPaneWidth","includes","panePositions","start","end","paneWidths","small","defaultPaneWidth","Pane","responsivePosition","positionWhenNarrow","resizable","widthStorageKey","responsiveDivider","sticky","responsiveHidden","forwardRef","positionProp","getDefaultPaneWidth","setPaneWidth","storedWidth","localStorage","getItem","error","isNaN","updatePaneWidth","setItem","useRefObjectAsForwardedRef","hasOverflow","useOverflow","paneId","useId","labelProp","marginY","maxHeight","marginLeft","marginRight","min","overflow","isKeyboard","_paneRef$current","paneRect","PageLayout"],"sourceRoot":""}