# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Webhooks::V0::DroppedEventMetadata`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Webhooks::V0::DroppedEventMetadata`.

class Hydro::Schemas::Github::Webhooks::V0::DroppedEventMetadata
  sig do
    params(
      event_action: T.nilable(String),
      event_type: T.nilable(String),
      filtered_reason: T.nilable(String),
      guid: T.nilable(String),
      request_id: T.nilable(String),
      target_organization_id: T.nilable(Integer),
      target_repository_id: T.nilable(Integer),
      triggered_at: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(event_action: nil, event_type: nil, filtered_reason: nil, guid: nil, request_id: nil, target_organization_id: nil, target_repository_id: nil, triggered_at: nil); end

  sig { void }
  def clear_event_action; end

  sig { void }
  def clear_event_type; end

  sig { void }
  def clear_filtered_reason; end

  sig { void }
  def clear_guid; end

  sig { void }
  def clear_request_id; end

  sig { void }
  def clear_target_organization_id; end

  sig { void }
  def clear_target_repository_id; end

  sig { void }
  def clear_triggered_at; end

  sig { returns(String) }
  def event_action; end

  sig { params(value: String).void }
  def event_action=(value); end

  sig { returns(String) }
  def event_type; end

  sig { params(value: String).void }
  def event_type=(value); end

  sig { returns(String) }
  def filtered_reason; end

  sig { params(value: String).void }
  def filtered_reason=(value); end

  sig { returns(String) }
  def guid; end

  sig { params(value: String).void }
  def guid=(value); end

  sig { returns(String) }
  def request_id; end

  sig { params(value: String).void }
  def request_id=(value); end

  sig { returns(Integer) }
  def target_organization_id; end

  sig { params(value: Integer).void }
  def target_organization_id=(value); end

  sig { returns(Integer) }
  def target_repository_id; end

  sig { params(value: Integer).void }
  def target_repository_id=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def triggered_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def triggered_at=(value); end
end
