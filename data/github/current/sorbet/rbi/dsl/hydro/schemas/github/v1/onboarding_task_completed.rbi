# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::OnboardingTaskCompleted`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::OnboardingTaskCompleted`.

class Hydro::Schemas::Github::V1::OnboardingTaskCompleted
  sig do
    params(
      completed_tasks: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      remaining_tasks: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      task: T.nilable(String),
      taskable_id: T.nilable(Integer),
      taskable_type: T.nilable(String),
      type: T.nilable(String),
      user: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(completed_tasks: T.unsafe(nil), remaining_tasks: T.unsafe(nil), task: nil, taskable_id: nil, taskable_type: nil, type: nil, user: nil); end

  sig { void }
  def clear_completed_tasks; end

  sig { void }
  def clear_remaining_tasks; end

  sig { void }
  def clear_task; end

  sig { void }
  def clear_taskable_id; end

  sig { void }
  def clear_taskable_type; end

  sig { void }
  def clear_type; end

  sig { void }
  def clear_user; end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def completed_tasks; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def completed_tasks=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def remaining_tasks; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def remaining_tasks=(value); end

  sig { returns(String) }
  def task; end

  sig { params(value: String).void }
  def task=(value); end

  sig { returns(Integer) }
  def taskable_id; end

  sig { params(value: Integer).void }
  def taskable_id=(value); end

  sig { returns(String) }
  def taskable_type; end

  sig { params(value: String).void }
  def taskable_type=(value); end

  sig { returns(String) }
  def type; end

  sig { params(value: String).void }
  def type=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def user; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def user=(value); end
end
