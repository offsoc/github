#!/usr/bin/env ruby
#/ Usage: timer-job-list
#/ List scheduled jobs and their intervals for the current environment.
require "github"
require_relative "../config/environment"
Zeitwerk::Loader.eager_load_all

format = "%-40s %10s %8s %10s\n"
printf format, "JOB", "INTERVAL", "ENABLED", "SCOPE"
printf format, "-" * 40, "-" * 10, "-" * 8, "-" * 10

GitHub::Jobs.constants.each do |const_name|
  job = GitHub::Jobs.const_get(const_name)
  if job.respond_to?(:schedule_options) && schedule = job.schedule_options
    begin
      job_name = job.name.split("::").last
      printf format, job_name, schedule[:interval], job.enabled? ? "YES" : "NO", schedule[:scope]
    rescue => boom # rubocop:todo Lint/GenericRescue
      warn "warn: #{job.name} #{boom}"
    end
  end
end

ApplicationJob.descendants.each do |job|
  if job.respond_to?(:schedule_options) && schedule = job.schedule_options
    begin
      printf format, job.name, schedule[:interval], job.enabled? ? "YES" : "NO", schedule[:scope]
    rescue => boom # rubocop:todo Lint/GenericRescue
      warn "warn: #{job.name} #{boom}"
    end
  end
end
