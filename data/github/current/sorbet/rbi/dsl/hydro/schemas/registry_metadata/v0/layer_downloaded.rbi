# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::RegistryMetadata::V0::LayerDownloaded`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::RegistryMetadata::V0::LayerDownloaded`.

class Hydro::Schemas::RegistryMetadata::V0::LayerDownloaded
  sig do
    params(
      actor_id: T.nilable(Integer),
      actor_type: T.nilable(T.any(Symbol, Integer)),
      downloaded_at: T.nilable(Google::Protobuf::Timestamp),
      event_id: T.nilable(String),
      layer: T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::ContainerLayer),
      owner_id: T.nilable(Integer),
      request_context: T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::RequestContext)
    ).void
  end
  def initialize(actor_id: nil, actor_type: nil, downloaded_at: nil, event_id: nil, layer: nil, owner_id: nil, request_context: nil); end

  sig { returns(Integer) }
  def actor_id; end

  sig { params(value: Integer).void }
  def actor_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def actor_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def actor_type=(value); end

  sig { void }
  def clear_actor_id; end

  sig { void }
  def clear_actor_type; end

  sig { void }
  def clear_downloaded_at; end

  sig { void }
  def clear_event_id; end

  sig { void }
  def clear_layer; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_request_context; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def downloaded_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def downloaded_at=(value); end

  sig { returns(String) }
  def event_id; end

  sig { params(value: String).void }
  def event_id=(value); end

  sig { returns(T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::ContainerLayer)) }
  def layer; end

  sig { params(value: T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::ContainerLayer)).void }
  def layer=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::RequestContext)).void }
  def request_context=(value); end
end
