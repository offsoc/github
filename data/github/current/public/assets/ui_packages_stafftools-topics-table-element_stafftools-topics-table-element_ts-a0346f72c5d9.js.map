{"version":3,"file":"chunk-ui_packages_stafftools-topics-table-element_stafftools-topics-table-element_ts-xxxxxxxxxxxx.js","mappings":"+kBAGO,uCAAMA,qCAAqCC,YAKhDC,cAAe,CACb,GAAI,CAAC,IAAI,CAACC,cAAc,EAAI,CAAC,IAAI,CAACC,aAAa,CAC7C,OAGF,IAAIC,EAAc,GAKlB,IAAK,IAAMC,KAJyB,KAAhC,IAAI,CAACH,cAAc,CAACI,OAAO,EAC7BF,CAAAA,EAAc,EAAI,EAGA,IAAI,CAACD,aAAa,EACpCE,EAAMC,OAAO,CAAGF,CAEpB,CAEAG,WAAY,CACV,GAAI,CAAC,IAAI,CAACL,cAAc,EAAI,CAAC,IAAI,CAACC,aAAa,CAC7C,OAMF,IAAIK,EAAe,EACnB,IAAK,IAAMH,KAAS,IAAI,CAACF,aAAa,CACpC,GAAIE,EAAMC,OAAO,CACfE,SACK,GAAIA,EAAe,EACxB,MAIJ,OAAQA,GACN,KAAK,IAAI,CAACL,aAAa,CAACM,MAAM,CAC5B,IAAI,CAACP,cAAc,CAACI,OAAO,CAAG,GAC9B,IAAI,CAACJ,cAAc,CAACQ,aAAa,CAAG,GACpC,KAEF,MAAK,EACH,IAAI,CAACR,cAAc,CAACI,OAAO,CAAG,GAC9B,IAAI,CAACJ,cAAc,CAACQ,aAAa,CAAG,GACpC,KAEF,SACE,IAAI,CAACR,cAAc,CAACI,OAAO,CAAG,GAC9B,IAAI,CAACJ,cAAc,CAACQ,aAAa,CAAG,EAExC,CACF,CACF,E,GArDGC,EAAAA,EAAMA,C,CADIZ,6BAAAA,SAAAA,CAAAA,iBAAAA,KAAAA,G,GAEVa,EAAAA,EAAOA,C,CAFGb,6BAAAA,SAAAA,CAAAA,gBAAAA,KAAAA,G,GAGVY,EAAAA,EAAMA,C,CAHIZ,6BAAAA,SAAAA,CAAAA,SAAAA,KAAAA,GAAAA,6BAAAA,EAAAA,CADZc,EAAAA,EAAUA,C,CACEd,6B","sources":["ui/packages/stafftools-topics-table-element/stafftools-topics-table-element.ts"],"sourcesContent":["import {controller, target, targets} from '@github/catalyst'\n\n@controller\nexport class StafftoolsTopicsTableElement extends HTMLElement {\n  @target headerCheckbox: HTMLInputElement | undefined\n  @targets rowCheckboxes: HTMLInputElement[] | undefined\n  @target submit: HTMLButtonElement | undefined\n\n  toggleHeader() {\n    if (!this.headerCheckbox || !this.rowCheckboxes) {\n      return\n    }\n\n    let shouldCheck = true\n    if (this.headerCheckbox.checked === false) {\n      shouldCheck = false\n    }\n\n    for (const check of this.rowCheckboxes) {\n      check.checked = shouldCheck\n    }\n  }\n\n  toggleRow() {\n    if (!this.headerCheckbox || !this.rowCheckboxes) {\n      return\n    }\n\n    // get the count of checked rows. if every row is checked, the header box should be checked.\n    // break early if any are unchecked and at least one other was checked, because it'll be indeterminate\n    // at that point.\n    let checkedCount = 0\n    for (const check of this.rowCheckboxes) {\n      if (check.checked) {\n        checkedCount++\n      } else if (checkedCount > 0) {\n        break\n      }\n    }\n\n    switch (checkedCount) {\n      case this.rowCheckboxes.length:\n        this.headerCheckbox.checked = true\n        this.headerCheckbox.indeterminate = false\n        break\n\n      case 0:\n        this.headerCheckbox.checked = false\n        this.headerCheckbox.indeterminate = false\n        break\n\n      default:\n        this.headerCheckbox.checked = false\n        this.headerCheckbox.indeterminate = true\n        break\n    }\n  }\n}\n"],"names":["StafftoolsTopicsTableElement","HTMLElement","toggleHeader","headerCheckbox","rowCheckboxes","shouldCheck","check","checked","toggleRow","checkedCount","length","indeterminate","target","targets","controller"],"sourceRoot":""}