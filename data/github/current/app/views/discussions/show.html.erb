<%
  org_param = is_org_level? ? this_organization&.to_param : nil
  page_info title: discussion_page_title(discussion, remove_separator: robot?),
    container_xl: true,
    breadcrumb_object: discussion.present? ? discussion : nil,
    selected_link: is_org_level? ? :discussions : :repo_discussions,
    canonical_url: discussion.permalink,
    richweb: {
      title: discussion_page_title(discussion, remove_separator: robot?),
      url: discussion.permalink,
      description: issue_page_description(discussion),
      image: repository_open_graph_image_url(current_repository, resource: discussion),
      card: repository_twitter_image_card(current_repository),
    },
    description: discussion.present? ? discussion.title : nil,
    stafftools: gh_stafftools_repository_discussion_path(discussion)
%>

<%= render Discussions::AnsweredQuestionStructuredDataComponent.new(timeline, org_param: org_param) %>

<% if timeline.render_with_voltron? %>
  <% content_for :head do %>
    <meta name="voltron-timing" value="<view-proxy-timing></view-proxy-timing>">
  <% end %>
<% end %>

<% contents = timeline.record_show_stats_distribution(:render_content) do %>
  <% capture do %>
    <div id="discussion_bucket" class="gutter-condensed gutter-lg flex-column flex-md-row d-flex flex-wrap">
      <% if flash[:first_discussion] %>
        <span class="js-confetti-party"></span>
      <% end %>

      <%
      if timeline.try(:render_with_voltron?) %>
        <viewproxy-fragment id="content_1"></viewproxy-fragment>
        <viewproxy-fragment id="sidebar"></viewproxy-fragment>
      <% else %>
        <%= render Discussions::ContentComponent.new(
          timeline: timeline,
          parsed_discussions_query: parsed_discussions_query,
          org_param: org_param,
        ) %>
        <% timeline.record_show_stats_render("sidebar") do %>
          <%= render Discussions::SidebarContainerComponent.new(
            discussion: discussion,
            timeline: timeline,
            participants: participants,
            current_repository: current_repository,
            events: timeline.events,
            deferred_content: GitHub.flipper[:notifications_async_discussions_subscription_button].enabled?(current_user),
            org_param: org_param,
          ) %>
        <% end %>
      <% end %>
    </div>
  <% end %>
<% end %>

<% timeline.record_show_stats_distribution(:render_repo_layout) do %>
  <%= render layout: "discussions/conditional_discussions_layout" do %>
    <%= contents %>
  <% end %>
<% end %>
