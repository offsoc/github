<%# erblint:counter DeprecatedComponentsCounter 1 %>
<%# view is instance of Stafftools::RepositoryViews::PagesHTTPSStatueView %>

<% if GitHub.pages_https_redirect_enabled? %>
  <dl>
    <dt>HTTPS redirects</dt>
    <% if view.https_redirect? %>
      <dd>Enabled</dd>
    <% elsif view.https_available? %>
      <dd>Disabled</dd>
    <% elsif view.certificates_enabled? && view.cname? %>
      <dd>Unavailable because a CNAME is configured &amp; no HTTPS certificate has been issued and approved</dd>
    <% else %>
      <dd>Unavailable</dd>
    <% end %>
  </dl>
<% end %>

<% if view.cname? && view.certificates_enabled? %>
  <dl>
    <dt>HTTPS certificate</dt>
    <% if view.certificate.present? %>
      <dd>
        <% if view.certificate.usable? %>
          <%= primer_octicon(:check, classes: "success") %>
        <% else %>
          <%= primer_octicon(:alert, classes: "error") %>
        <% end %>
        Current state: <code><%= view.certificate.state_description %></code>
      </dd>
    <% elsif view.eligible_for_certificate? %>
      <dd>This custom domain is eligible for HTTPS, but a certificate has not yet been issued.</dd>
    <% else %>
      <dd>This custom domain or user is not eligible for HTTPS.</dd>
    <% end %>
  </dl>
<% end %>

<% if view.certificates_enabled? && view.cname? && view.eligible_for_certificate? %>
  <hr>
  <%= form_tag gh_request_https_certificate_stafftools_repository_pages_path(current_repository), :method => "put" do %>
    <%= render Primer::ButtonComponent.new(type: :submit, classes: "boxed-action") do %>Request HTTPS certificate<% end %>
  <% end %>
  <h4>Request HTTPS certificate</h4>
  <p>
    Request or renew an HTTPS certificate for the <strong><%= view.cname %></strong> custom domain,
    or nudge the current one along.
  </p>
<% end %>
