# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::VerifiableDomains::V0::DomainVerifyAttempt`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::VerifiableDomains::V0::DomainVerifyAttempt`.

class Hydro::Schemas::Github::VerifiableDomains::V0::DomainVerifyAttempt
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      domain: T.nilable(Hydro::Schemas::Github::VerifiableDomains::V0::Entities::VerifiableDomain),
      error: T.nilable(T.any(Symbol, Integer)),
      staff_action: T.nilable(T::Boolean),
      success: T.nilable(T::Boolean)
    ).void
  end
  def initialize(actor: nil, domain: nil, error: nil, staff_action: nil, success: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_domain; end

  sig { void }
  def clear_error; end

  sig { void }
  def clear_staff_action; end

  sig { void }
  def clear_success; end

  sig { returns(T.nilable(Hydro::Schemas::Github::VerifiableDomains::V0::Entities::VerifiableDomain)) }
  def domain; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::VerifiableDomains::V0::Entities::VerifiableDomain)).void }
  def domain=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def error; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def error=(value); end

  sig { returns(T::Boolean) }
  def staff_action; end

  sig { params(value: T::Boolean).void }
  def staff_action=(value); end

  sig { returns(T::Boolean) }
  def success; end

  sig { params(value: T::Boolean).void }
  def success=(value); end
end
