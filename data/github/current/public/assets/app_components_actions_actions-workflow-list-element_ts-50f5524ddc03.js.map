{"version":3,"file":"chunk-app_components_actions_actions-workflow-list-element_ts-xxxxxxxxxxxx.js","mappings":"ifAEA,YACMA,mCAAmCC,YAIvCC,mBAA0B,CAAC,CAE3BC,eAAeC,CAAY,CAAE,CAC3B,IAAMC,EAAYD,EAAME,MAAM,CACxBC,EAAgBF,EAAUG,oBAAoB,CAAC,MAAM,CAAC,EAAE,CACxDC,EAAe,IAAI,CAACC,oBAAoB,CAACC,OAAO,CAACC,iBAAiB,CAAEC,SAAS,CAAC,IAGpF,IAAK,IAAMC,KAAaP,EAAcQ,SAAS,CAC3B,gBAAdD,GACFL,EAAaM,SAAS,CAACC,GAAG,CAACF,GAG/BT,EAAUY,YAAY,CAACR,EAAcF,EACvC,CAEAW,eAAed,CAAY,CAAE,CAC3B,IAAMe,EAAiBf,EAAME,MAAM,CAC7Bc,EAAqBD,EAAeX,oBAAoB,CAAC,MAAM,CAAC,EAAE,CAClEa,EAAU,IAAI,CAACC,eAAe,CAACX,OAAO,CAACC,iBAAiB,CAAEC,SAAS,CAAC,IAG1E,IAAK,IAAMC,KAAaM,EAAmBL,SAAS,CAChC,sBAAdD,GACFO,EAAQN,SAAS,CAACC,GAAG,CAACF,GAG1BK,EAAeF,YAAY,CAACI,EAASD,EACvC,CACF,E,GAhCGd,EAAAA,EAAMA,C,CADHN,EAAAA,SAAAA,CAAAA,kBAAAA,KAAAA,G,GAEHM,EAAAA,EAAMA,C,CAFHN,EAAAA,SAAAA,CAAAA,uBAAAA,KAAAA,GAAAA,EAAAA,EAAAA,CADLuB,EAAAA,EAAUA,C,CACLvB,E","sources":["app/components/actions/actions-workflow-list-element.ts"],"sourcesContent":["import {controller, target} from '@github/catalyst'\n\n@controller\nclass ActionsWorkflowListElement extends HTMLElement {\n  @target pinIconTemplate: HTMLTemplateElement\n  @target pinSlashIconTemplate: HTMLTemplateElement\n\n  connectedCallback(): void {}\n\n  pinButtonEnter(event: Event) {\n    const pinButton = event.target as HTMLElement\n    const pinButtonIcon = pinButton.getElementsByTagName('svg')[0]!\n    const pinSlashIcon = this.pinSlashIconTemplate.content.firstElementChild!.cloneNode(true) as HTMLTemplateElement\n\n    // Copy over all the classes from the original pin icon\n    for (const className of pinButtonIcon.classList) {\n      if (className !== 'octicon-pin') {\n        pinSlashIcon.classList.add(className)\n      }\n    }\n    pinButton.replaceChild(pinSlashIcon, pinButtonIcon)\n  }\n\n  pinButtonLeave(event: Event) {\n    const pinSlashButton = event.target as HTMLElement\n    const pinSlashButtonIcon = pinSlashButton.getElementsByTagName('svg')[0]!\n    const pinIcon = this.pinIconTemplate.content.firstElementChild!.cloneNode(true) as HTMLTemplateElement\n\n    // Copy over all the classes from the pin slash icon\n    for (const className of pinSlashButtonIcon.classList) {\n      if (className !== 'octicon-pin-slash') {\n        pinIcon.classList.add(className)\n      }\n    }\n    pinSlashButton.replaceChild(pinIcon, pinSlashButtonIcon)\n  }\n}\n"],"names":["ActionsWorkflowListElement","HTMLElement","connectedCallback","pinButtonEnter","event","pinButton","target","pinButtonIcon","getElementsByTagName","pinSlashIcon","pinSlashIconTemplate","content","firstElementChild","cloneNode","className","classList","add","replaceChild","pinButtonLeave","pinSlashButton","pinSlashButtonIcon","pinIcon","pinIconTemplate","controller"],"sourceRoot":""}