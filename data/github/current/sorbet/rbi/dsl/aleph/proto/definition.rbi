# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Aleph::Proto::Definition`.
# Please instead update this file by running `bin/tapioca dsl Aleph::Proto::Definition`.

class Aleph::Proto::Definition
  sig do
    params(
      column: T.nilable(Integer),
      kind: T.nilable(String),
      line: T.nilable(String),
      path: T.nilable(String),
      row: T.nilable(Integer),
      symbol: T.nilable(String)
    ).void
  end
  def initialize(column: nil, kind: nil, line: nil, path: nil, row: nil, symbol: nil); end

  sig { void }
  def clear_column; end

  sig { void }
  def clear_kind; end

  sig { void }
  def clear_line; end

  sig { void }
  def clear_path; end

  sig { void }
  def clear_row; end

  sig { void }
  def clear_symbol; end

  sig { returns(Integer) }
  def column; end

  sig { params(value: Integer).void }
  def column=(value); end

  sig { returns(String) }
  def kind; end

  sig { params(value: String).void }
  def kind=(value); end

  sig { returns(String) }
  def line; end

  sig { params(value: String).void }
  def line=(value); end

  sig { returns(String) }
  def path; end

  sig { params(value: String).void }
  def path=(value); end

  sig { returns(Integer) }
  def row; end

  sig { params(value: Integer).void }
  def row=(value); end

  sig { returns(String) }
  def symbol; end

  sig { params(value: String).void }
  def symbol=(value); end
end
