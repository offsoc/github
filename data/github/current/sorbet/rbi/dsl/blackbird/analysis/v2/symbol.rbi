# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Blackbird::Analysis::V2::Symbol`.
# Please instead update this file by running `bin/tapioca dsl Blackbird::Analysis::V2::Symbol`.

class Blackbird::Analysis::V2::Symbol
  sig do
    params(
      extent_end: T.nilable(Integer),
      extent_start: T.nilable(Integer),
      extent_utf16: T.nilable(Blackbird::Analysis::V2::UTF16Range),
      fully_qualified_name: T.nilable(String),
      ident_end: T.nilable(Integer),
      ident_start: T.nilable(Integer),
      ident_utf16: T.nilable(Blackbird::Analysis::V2::UTF16Range),
      kind: T.nilable(T.any(Symbol, Integer)),
      name: T.nilable(String)
    ).void
  end
  def initialize(extent_end: nil, extent_start: nil, extent_utf16: nil, fully_qualified_name: nil, ident_end: nil, ident_start: nil, ident_utf16: nil, kind: nil, name: nil); end

  sig { void }
  def clear_extent_end; end

  sig { void }
  def clear_extent_start; end

  sig { void }
  def clear_extent_utf16; end

  sig { void }
  def clear_fully_qualified_name; end

  sig { void }
  def clear_ident_end; end

  sig { void }
  def clear_ident_start; end

  sig { void }
  def clear_ident_utf16; end

  sig { void }
  def clear_kind; end

  sig { void }
  def clear_name; end

  sig { returns(Integer) }
  def extent_end; end

  sig { params(value: Integer).void }
  def extent_end=(value); end

  sig { returns(Integer) }
  def extent_start; end

  sig { params(value: Integer).void }
  def extent_start=(value); end

  sig { returns(T.nilable(Blackbird::Analysis::V2::UTF16Range)) }
  def extent_utf16; end

  sig { params(value: T.nilable(Blackbird::Analysis::V2::UTF16Range)).void }
  def extent_utf16=(value); end

  sig { returns(String) }
  def fully_qualified_name; end

  sig { params(value: String).void }
  def fully_qualified_name=(value); end

  sig { returns(Integer) }
  def ident_end; end

  sig { params(value: Integer).void }
  def ident_end=(value); end

  sig { returns(Integer) }
  def ident_start; end

  sig { params(value: Integer).void }
  def ident_start=(value); end

  sig { returns(T.nilable(Blackbird::Analysis::V2::UTF16Range)) }
  def ident_utf16; end

  sig { params(value: T.nilable(Blackbird::Analysis::V2::UTF16Range)).void }
  def ident_utf16=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def kind; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def kind=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end
end
