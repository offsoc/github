{"version":3,"file":"chunk-node_modules_codemirror_legacy-modes_mode_tiki_js-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@codemirror/legacy-modes/mode/tiki.js"],"sourcesContent":["function inBlock(style, terminator, returnTokenizer) {\n  return function(stream, state) {\n    while (!stream.eol()) {\n      if (stream.match(terminator)) {\n        state.tokenize = inText;\n        break;\n      }\n      stream.next();\n    }\n\n    if (returnTokenizer) state.tokenize = returnTokenizer;\n\n    return style;\n  };\n}\n\nfunction inLine(style) {\n  return function(stream, state) {\n    while(!stream.eol()) {\n      stream.next();\n    }\n    state.tokenize = inText;\n    return style;\n  };\n}\n\nfunction inText(stream, state) {\n  function chain(parser) {\n    state.tokenize = parser;\n    return parser(stream, state);\n  }\n\n  var sol = stream.sol();\n  var ch = stream.next();\n\n  //non start of line\n  switch (ch) { //switch is generally much faster than if, so it is used here\n  case \"{\": //plugin\n    stream.eat(\"/\");\n    stream.eatSpace();\n    stream.eatWhile(/[^\\s\\u00a0=\\\"\\'\\/?(}]/);\n    state.tokenize = inPlugin;\n    return \"tag\";\n  case \"_\": //bold\n    if (stream.eat(\"_\"))\n      return chain(inBlock(\"strong\", \"__\", inText));\n    break;\n  case \"'\": //italics\n    if (stream.eat(\"'\"))\n      return chain(inBlock(\"em\", \"''\", inText));\n    break;\n  case \"(\":// Wiki Link\n    if (stream.eat(\"(\"))\n      return chain(inBlock(\"link\", \"))\", inText));\n    break;\n  case \"[\":// Weblink\n    return chain(inBlock(\"url\", \"]\", inText));\n    break;\n  case \"|\": //table\n    if (stream.eat(\"|\"))\n      return chain(inBlock(\"comment\", \"||\"));\n    break;\n  case \"-\":\n    if (stream.eat(\"=\")) {//titleBar\n      return chain(inBlock(\"header string\", \"=-\", inText));\n    } else if (stream.eat(\"-\")) {//deleted\n      return chain(inBlock(\"error tw-deleted\", \"--\", inText));\n    }\n    break;\n  case \"=\": //underline\n    if (stream.match(\"==\"))\n      return chain(inBlock(\"tw-underline\", \"===\", inText));\n    break;\n  case \":\":\n    if (stream.eat(\":\"))\n      return chain(inBlock(\"comment\", \"::\"));\n    break;\n  case \"^\": //box\n    return chain(inBlock(\"tw-box\", \"^\"));\n    break;\n  case \"~\": //np\n    if (stream.match(\"np~\"))\n      return chain(inBlock(\"meta\", \"~/np~\"));\n    break;\n  }\n\n  //start of line types\n  if (sol) {\n    switch (ch) {\n    case \"!\": //header at start of line\n      if (stream.match('!!!!!')) {\n        return chain(inLine(\"header string\"));\n      } else if (stream.match('!!!!')) {\n        return chain(inLine(\"header string\"));\n      } else if (stream.match('!!!')) {\n        return chain(inLine(\"header string\"));\n      } else if (stream.match('!!')) {\n        return chain(inLine(\"header string\"));\n      } else {\n        return chain(inLine(\"header string\"));\n      }\n      break;\n    case \"*\": //unordered list line item, or <li /> at start of line\n    case \"#\": //ordered list line item, or <li /> at start of line\n    case \"+\": //ordered list line item, or <li /> at start of line\n      return chain(inLine(\"tw-listitem bracket\"));\n      break;\n    }\n  }\n\n  //stream.eatWhile(/[&{]/); was eating up plugins, turned off to act less like html and more like tiki\n  return null;\n}\n\n// Return variables for tokenizers\nvar pluginName, type;\nfunction inPlugin(stream, state) {\n  var ch = stream.next();\n  var peek = stream.peek();\n\n  if (ch == \"}\") {\n    state.tokenize = inText;\n    //type = ch == \")\" ? \"endPlugin\" : \"selfclosePlugin\"; inPlugin\n    return \"tag\";\n  } else if (ch == \"(\" || ch == \")\") {\n    return \"bracket\";\n  } else if (ch == \"=\") {\n    type = \"equals\";\n\n    if (peek == \">\") {\n      stream.next();\n      peek = stream.peek();\n    }\n\n    //here we detect values directly after equal character with no quotes\n    if (!/[\\'\\\"]/.test(peek)) {\n      state.tokenize = inAttributeNoQuote();\n    }\n    //end detect values\n\n    return \"operator\";\n  } else if (/[\\'\\\"]/.test(ch)) {\n    state.tokenize = inAttribute(ch);\n    return state.tokenize(stream, state);\n  } else {\n    stream.eatWhile(/[^\\s\\u00a0=\\\"\\'\\/?]/);\n    return \"keyword\";\n  }\n}\n\nfunction inAttribute(quote) {\n  return function(stream, state) {\n    while (!stream.eol()) {\n      if (stream.next() == quote) {\n        state.tokenize = inPlugin;\n        break;\n      }\n    }\n    return \"string\";\n  };\n}\n\nfunction inAttributeNoQuote() {\n  return function(stream, state) {\n    while (!stream.eol()) {\n      var ch = stream.next();\n      var peek = stream.peek();\n      if (ch == \" \" || ch == \",\" || /[ )}]/.test(peek)) {\n        state.tokenize = inPlugin;\n        break;\n      }\n    }\n    return \"string\";\n  };\n}\n\nvar curState, setStyle;\nfunction pass() {\n  for (var i = arguments.length - 1; i >= 0; i--) curState.cc.push(arguments[i]);\n}\n\nfunction cont() {\n  pass.apply(null, arguments);\n  return true;\n}\n\nfunction pushContext(pluginName, startOfLine) {\n  var noIndent = curState.context && curState.context.noIndent;\n  curState.context = {\n    prev: curState.context,\n    pluginName: pluginName,\n    indent: curState.indented,\n    startOfLine: startOfLine,\n    noIndent: noIndent\n  };\n}\n\nfunction popContext() {\n  if (curState.context) curState.context = curState.context.prev;\n}\n\nfunction element(type) {\n  if (type == \"openPlugin\") {curState.pluginName = pluginName; return cont(attributes, endplugin(curState.startOfLine));}\n  else if (type == \"closePlugin\") {\n    var err = false;\n    if (curState.context) {\n      err = curState.context.pluginName != pluginName;\n      popContext();\n    } else {\n      err = true;\n    }\n    if (err) setStyle = \"error\";\n    return cont(endcloseplugin(err));\n  }\n  else if (type == \"string\") {\n    if (!curState.context || curState.context.name != \"!cdata\") pushContext(\"!cdata\");\n    if (curState.tokenize == inText) popContext();\n    return cont();\n  }\n  else return cont();\n}\n\nfunction endplugin(startOfLine) {\n  return function(type) {\n    if (\n      type == \"selfclosePlugin\" ||\n        type == \"endPlugin\"\n    )\n      return cont();\n    if (type == \"endPlugin\") {pushContext(curState.pluginName, startOfLine); return cont();}\n    return cont();\n  };\n}\n\nfunction endcloseplugin(err) {\n  return function(type) {\n    if (err) setStyle = \"error\";\n    if (type == \"endPlugin\") return cont();\n    return pass();\n  };\n}\n\nfunction attributes(type) {\n  if (type == \"keyword\") {setStyle = \"attribute\"; return cont(attributes);}\n  if (type == \"equals\") return cont(attvalue, attributes);\n  return pass();\n}\nfunction attvalue(type) {\n  if (type == \"keyword\") {setStyle = \"string\"; return cont();}\n  if (type == \"string\") return cont(attvaluemaybe);\n  return pass();\n}\nfunction attvaluemaybe(type) {\n  if (type == \"string\") return cont(attvaluemaybe);\n  else return pass();\n}\nexport const tiki = {\n  name: \"tiki\",\n  startState: function() {\n    return {tokenize: inText, cc: [], indented: 0, startOfLine: true, pluginName: null, context: null};\n  },\n  token: function(stream, state) {\n    if (stream.sol()) {\n      state.startOfLine = true;\n      state.indented = stream.indentation();\n    }\n    if (stream.eatSpace()) return null;\n\n    setStyle = type = pluginName = null;\n    var style = state.tokenize(stream, state);\n    if ((style || type) && style != \"comment\") {\n      curState = state;\n      while (true) {\n        var comb = state.cc.pop() || element;\n        if (comb(type || style)) break;\n      }\n    }\n    state.startOfLine = false;\n    return setStyle || style;\n  },\n  indent: function(state, textAfter, cx) {\n    var context = state.context;\n    if (context && context.noIndent) return 0;\n    if (context && /^{\\//.test(textAfter))\n      context = context.prev;\n    while (context && !context.startOfLine)\n      context = context.prev;\n    if (context) return context.indent + cx.unit;\n    else return 0;\n  }\n};\n"],"names":["type","curState","setStyle","inBlock","style","terminator","returnTokenizer","stream","state","eol","match","tokenize","inText","next","inLine","chain","parser","sol","ch","eat","eatSpace","eatWhile","inPlugin","peek","test","pass","i","arguments","length","cc","push","cont","apply","pushContext","pluginName","startOfLine","noIndent","context","prev","indent","indented","popContext","attributes","attvalue","attvaluemaybe","tiki","name","startState","token","indentation","comb","pop","err","textAfter","cx","unit"],"sourceRoot":""}