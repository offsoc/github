#!/bin/bash
#/ Usage: ghe-config-archive-cleanup [options]
#/ 
#/ Cleans up configuration history.
#/ Defaults to keeping the most recent 20 configurations if a specific number to keep isn't specified.
#/ If run on a configuration with multiple nodes, it will clean up all nodes to make sure they're in sync.
#/
#/ OPTIONS:
#/   -n num             The number of recent configurations to keep.
#/   -p                 Preview configurations to cleanup.
#/   -h                 Show this message
#/   -?                 Show this message
#/   -v                 Run with verbose output

set -e

usage() {
  grep '^#/' <"$0" | cut -c 4-
}

preview_only=false

while getopts "n:phv?" OPTION; do
  case $OPTION in
    n)
      n_recent_directories_to_keep="$OPTARG"
      ;;
    p)
      preview_only=true
      ;;
    h)
      usage
      exit 2
      ;;
    v)
      set -x
      ;;
    ?)
      usage
      exit
      ;;
  esac
done

# shellcheck source=vm_files/usr/local/share/enterprise/ghe-repl-lib
source /usr/local/share/enterprise/ghe-repl-lib

n_recent_directories_to_keep=${n_recent_directories_to_keep:-20}

if [ "$n_recent_directories_to_keep" -lt 0 ]; then
  echo "Error: Please specify a non-negative number of directories to keep"
  usage
  exit 2
fi

# Get all of the directories
all_config_directories=$(ls /data/user/common/ghe-config-apply/config-file-history/)

# Get n most recent directories
# comm requires items in ascending order
n_most_recent_directories=$(sort -r <<<"${all_config_directories[*]}" | head -n $n_recent_directories_to_keep | sort)

# Identify directories to remove
directories_to_remove=$(comm -3 <(echo "${all_config_directories[@]}") <(echo "${n_most_recent_directories[@]}"))
directories_to_remove_count=$(echo "${directories_to_remove[@]}" | wc -w)

# Correct output strings
directories_to_remove_output=$directories_to_remove_count
directories_to_remove_plurality="directories"
if [ "$directories_to_remove_count" = 1 ]; then
  directories_to_remove_plurality="directory"
fi
directories_to_keep_plurality="directories"
if [ "$n_recent_directories_to_keep" = 1 ]; then
  directories_to_keep_plurality="directory"
fi

delete_or_not=$( [ $preview_only = true ] && echo "would delete" || echo "and deleting" )
output_string="Keeping $n_recent_directories_to_keep most recent $directories_to_keep_plurality $delete_or_not the following $directories_to_remove_count $directories_to_remove_plurality:"

echo $output_string
if [ "$directories_to_remove_count" = 0 ]; then
  echo "(none)"
else
  for dir in ${directories_to_remove[@]}; do
    echo "/data/user/common/ghe-config-apply/config-file-history/$dir"
    if [ $preview_only = false ]; then
      rm -rf /data/user/common/ghe-config-apply/config-file-history/$dir
    fi
  done
fi

stat=$(ps -o stat= -p $PPID)
# If running from a cluster, an HA cluster, or standalone HA (current node must be a primary or a replica with replication running), sync the configuration history
# We call the cluster-sync here as this script may be run directly by operators
# A ps stat of "Ss" means this script has been called from the command line (it's the session leader)
if is_cluster || is_cluster_ha || is_ha_primary || is_replication_running_on_current_node && \
   [ "$directories_to_remove_count" -ne 0 ] && \
   [ "$preview_only" = false ] && \
   [ "$stat" == "Ss" ]
then
  sudo ghe-config-archive-cluster-sync
fi
