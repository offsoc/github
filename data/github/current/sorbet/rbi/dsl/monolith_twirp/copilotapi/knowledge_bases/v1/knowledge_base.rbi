# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Copilotapi::KnowledgeBases::V1::KnowledgeBase`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Copilotapi::KnowledgeBases::V1::KnowledgeBase`.

class MonolithTwirp::Copilotapi::KnowledgeBases::V1::KnowledgeBase
  sig do
    params(
      created_at: T.nilable(Google::Protobuf::Timestamp),
      created_by_id: T.nilable(Integer),
      description: T.nilable(String),
      id: T.nilable(String),
      name: T.nilable(String),
      owner_id: T.nilable(Integer),
      owner_type: T.nilable(T.any(Symbol, Integer)),
      repos: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      scoping_query: T.nilable(String),
      source_repos: T.nilable(T.any(Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::KnowledgeBases::V1::Repo], T::Array[MonolithTwirp::Copilotapi::KnowledgeBases::V1::Repo])),
      updated_at: T.nilable(Google::Protobuf::Timestamp),
      visibility: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(created_at: nil, created_by_id: nil, description: nil, id: nil, name: nil, owner_id: nil, owner_type: nil, repos: T.unsafe(nil), scoping_query: nil, source_repos: T.unsafe(nil), updated_at: nil, visibility: nil); end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_created_by_id; end

  sig { void }
  def clear_description; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_owner_type; end

  sig { void }
  def clear_repos; end

  sig { void }
  def clear_scoping_query; end

  sig { void }
  def clear_source_repos; end

  sig { void }
  def clear_updated_at; end

  sig { void }
  def clear_visibility; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(Integer) }
  def created_by_id; end

  sig { params(value: Integer).void }
  def created_by_id=(value); end

  sig { returns(String) }
  def description; end

  sig { params(value: String).void }
  def description=(value); end

  sig { returns(String) }
  def id; end

  sig { params(value: String).void }
  def id=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def owner_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def owner_type=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def repos; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def repos=(value); end

  sig { returns(String) }
  def scoping_query; end

  sig { params(value: String).void }
  def scoping_query=(value); end

  sig { returns(Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::KnowledgeBases::V1::Repo]) }
  def source_repos; end

  sig { params(value: Google::Protobuf::RepeatedField[MonolithTwirp::Copilotapi::KnowledgeBases::V1::Repo]).void }
  def source_repos=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def visibility; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def visibility=(value); end
end
