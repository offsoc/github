# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Github::DependencyGraphPlatform::Types::V1::Dependency`.
# Please instead update this file by running `bin/tapioca dsl Github::DependencyGraphPlatform::Types::V1::Dependency`.

class Github::DependencyGraphPlatform::Types::V1::Dependency
  sig do
    params(
      id: T.nilable(String),
      malformed: T.nilable(T::Boolean),
      manifest_path: T.nilable(String),
      name: T.nilable(String),
      registry_url: T.nilable(String),
      relationship: T.nilable(T.any(Symbol, Integer)),
      scope: T.nilable(T.any(Symbol, Integer)),
      transitive_dependencies: T.nilable(T.any(Google::Protobuf::RepeatedField[Github::DependencyGraphPlatform::Types::V1::TransitiveDependency], T::Array[Github::DependencyGraphPlatform::Types::V1::TransitiveDependency])),
      version: T.nilable(String)
    ).void
  end
  def initialize(id: nil, malformed: nil, manifest_path: nil, name: nil, registry_url: nil, relationship: nil, scope: nil, transitive_dependencies: T.unsafe(nil), version: nil); end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_malformed; end

  sig { void }
  def clear_manifest_path; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_registry_url; end

  sig { void }
  def clear_relationship; end

  sig { void }
  def clear_scope; end

  sig { void }
  def clear_transitive_dependencies; end

  sig { void }
  def clear_version; end

  sig { returns(String) }
  def id; end

  sig { params(value: String).void }
  def id=(value); end

  sig { returns(T::Boolean) }
  def malformed; end

  sig { params(value: T::Boolean).void }
  def malformed=(value); end

  sig { returns(String) }
  def manifest_path; end

  sig { params(value: String).void }
  def manifest_path=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(String) }
  def registry_url; end

  sig { params(value: String).void }
  def registry_url=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def relationship; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def relationship=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def scope; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def scope=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Github::DependencyGraphPlatform::Types::V1::TransitiveDependency]) }
  def transitive_dependencies; end

  sig do
    params(
      value: Google::Protobuf::RepeatedField[Github::DependencyGraphPlatform::Types::V1::TransitiveDependency]
    ).void
  end
  def transitive_dependencies=(value); end

  sig { returns(String) }
  def version; end

  sig { params(value: String).void }
  def version=(value); end
end
