# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rubocop-rails-accessibility` gem.
# Please instead update this file by running `bin/tapioca gem rubocop-rails-accessibility`.

# source://rubocop-rails-accessibility//lib/rubocop/rails_accessibility.rb#5
module RuboCop; end

# source://rubocop-rails-accessibility//lib/rubocop/cop/rails_accessibility/image_has_alt.rb#6
module RuboCop::Cop; end

# source://rubocop-rails-accessibility//lib/rubocop/cop/rails_accessibility/image_has_alt.rb#7
module RuboCop::Cop::RailsAccessibility; end

# source://rubocop-rails-accessibility//lib/rubocop/cop/rails_accessibility/image_has_alt.rb#8
class RuboCop::Cop::RailsAccessibility::ImageHasAlt < ::RuboCop::Cop::Base
  # source://rubocop-rails-accessibility//lib/rubocop/cop/rails_accessibility/image_has_alt.rb#11
  def has_alt_attribute?(param0); end

  # source://rubocop-rails-accessibility//lib/rubocop/cop/rails_accessibility/image_has_alt.rb#13
  def on_send(node); end
end

# source://rubocop-rails-accessibility//lib/rubocop/cop/rails_accessibility/image_has_alt.rb#9
RuboCop::Cop::RailsAccessibility::ImageHasAlt::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails-accessibility//lib/rubocop/cop/rails_accessibility/no_positive_tabindex.rb#8
class RuboCop::Cop::RailsAccessibility::NoPositiveTabindex < ::RuboCop::Cop::Base
  # source://rubocop-rails-accessibility//lib/rubocop/cop/rails_accessibility/no_positive_tabindex.rb#11
  def on_send(node); end
end

# source://rubocop-rails-accessibility//lib/rubocop/cop/rails_accessibility/no_positive_tabindex.rb#9
RuboCop::Cop::RailsAccessibility::NoPositiveTabindex::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails-accessibility//lib/rubocop/cop/rails_accessibility/no_redundant_image_alt.rb#8
class RuboCop::Cop::RailsAccessibility::NoRedundantImageAlt < ::RuboCop::Cop::Base
  # source://rubocop-rails-accessibility//lib/rubocop/cop/rails_accessibility/no_redundant_image_alt.rb#14
  def on_send(node); end

  # source://rubocop-rails-accessibility//lib/rubocop/cop/rails_accessibility/no_redundant_image_alt.rb#12
  def redundant_alt?(param0); end

  private

  # @return [Boolean]
  #
  # source://rubocop-rails-accessibility//lib/rubocop/cop/rails_accessibility/no_redundant_image_alt.rb#26
  def contains_redundant_alt_text?(string); end
end

# source://rubocop-rails-accessibility//lib/rubocop/cop/rails_accessibility/no_redundant_image_alt.rb#9
RuboCop::Cop::RailsAccessibility::NoRedundantImageAlt::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails-accessibility//lib/rubocop/cop/rails_accessibility/no_redundant_image_alt.rb#10
RuboCop::Cop::RailsAccessibility::NoRedundantImageAlt::REDUNDANT_ALT_WORDS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails-accessibility//lib/rubocop/rails_accessibility.rb#6
module RuboCop::RailsAccessibility; end

# source://rubocop-rails-accessibility//lib/rubocop/rails_accessibility.rb#8
RuboCop::RailsAccessibility::CONFIG_DEFAULT = T.let(T.unsafe(nil), Pathname)

# source://rubocop-rails-accessibility//lib/rubocop/rails_accessibility/inject.rb#9
module RuboCop::RailsAccessibility::Inject
  class << self
    # source://rubocop-rails-accessibility//lib/rubocop/rails_accessibility/inject.rb#10
    def defaults!; end
  end
end

# source://rubocop-rails-accessibility//lib/rubocop/rails_accessibility.rb#7
RuboCop::RailsAccessibility::PROJECT_ROOT = T.let(T.unsafe(nil), Pathname)

# source://rubocop-rails-accessibility//lib/rubocop/rails_accessibility/version.rb#5
RuboCop::RailsAccessibility::VERSION = T.let(T.unsafe(nil), String)
