# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::MemexBulkAddItems`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::MemexBulkAddItems`.

class Hydro::Schemas::Github::V1::MemexBulkAddItems
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      added_from: T.nilable(T.any(Symbol, Integer)),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      issue_ids: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer])),
      number_of_issues: T.nilable(Integer),
      number_of_projects: T.nilable(Integer),
      number_of_prs: T.nilable(Integer),
      pr_ids: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer])),
      projects_ids: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer]))
    ).void
  end
  def initialize(actor: nil, added_from: nil, created_at: nil, issue_ids: T.unsafe(nil), number_of_issues: nil, number_of_projects: nil, number_of_prs: nil, pr_ids: T.unsafe(nil), projects_ids: T.unsafe(nil)); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def added_from; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def added_from=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_added_from; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_issue_ids; end

  sig { void }
  def clear_number_of_issues; end

  sig { void }
  def clear_number_of_projects; end

  sig { void }
  def clear_number_of_prs; end

  sig { void }
  def clear_pr_ids; end

  sig { void }
  def clear_projects_ids; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def issue_ids; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def issue_ids=(value); end

  sig { returns(Integer) }
  def number_of_issues; end

  sig { params(value: Integer).void }
  def number_of_issues=(value); end

  sig { returns(Integer) }
  def number_of_projects; end

  sig { params(value: Integer).void }
  def number_of_projects=(value); end

  sig { returns(Integer) }
  def number_of_prs; end

  sig { params(value: Integer).void }
  def number_of_prs=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def pr_ids; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def pr_ids=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def projects_ids; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def projects_ids=(value); end
end
