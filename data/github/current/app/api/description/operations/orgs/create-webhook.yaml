---
summary: Create an organization webhook
description: |-
  Create a hook that posts payloads in JSON format.

  You must be an organization owner to use this endpoint.

  OAuth app tokens and personal access tokens (classic) need `admin:org_hook` scope. OAuth apps cannot list, view, or
  edit webhooks that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.
tags:
  - orgs
operationId: orgs/create-webhook
externalDocs:
  description: API method documentation
  url: '${externalDocsUrl}/rest/orgs/webhooks#create-an-organization-webhook'
parameters:
  - $ref: '../../components/parameters/org.yaml'
requestBody:
  required: true
  content:
    application/json:
      schema:
        type: object
        properties:
          name:
            type: string
            description: Must be passed as "web".
          config:
            type: object
            description: Key/value pairs to provide settings for this webhook.
            properties:
              url:
                $ref: '../../components/schemas/webhook-config-url.yaml'
              content_type:
                $ref: '../../components/schemas/webhook-config-content-type.yaml'
              secret:
                $ref: '../../components/schemas/webhook-config-secret.yaml'
              insecure_ssl:
                $ref: '../../components/schemas/webhook-config-insecure-ssl.yaml'
              username:
                type: string
                example: '"kdaigle"'
              password:
                type: string
                example: '"password"'
            required:
              - url
          events:
            type: array
            description: Determines what [events](${externalDocsUrl}/webhooks/event-payloads)
              the hook is triggered for. Set to `["*"]` to receive all possible events.
            default:
              - push
            items:
              type: string
          active:
            type: boolean
            description: Determines if notifications are sent when the webhook is
              triggered. Set to `true` to send notifications.
            default: true
        required:
          - name
          - config
      examples:
        default:
          value:
            name: web
            active: true
            events:
              - push
              - pull_request
            config:
              url: http://example.com/webhook
              content_type: json
responses:
  '201':
    description: Response
    content:
      application/json:
        schema:
          $ref: '../../components/schemas/org-hook.yaml'
        examples:
          default:
            $ref: '../../components/examples/org-hook.yaml'
    headers:
      Location:
        example: https://api.github.com/orgs/octocat/hooks/1
        schema:
          type: string
  '422':
    $ref: '../../components/responses/validation_failed.yaml'
  '404':
    $ref: '../../components/responses/not_found.yaml'
x-github-releases:
  - ghec
  - ghes: '>= 2.18'
  - api.github.com
x-github:
  githubCloudOnly: false
  enabledForGitHubApps: true

  category: orgs
  subcategory: webhooks
x-github-internal:
  path: '/orgs/{org}/hooks'
  http-method: post
  service-tier: 2
  owner: '@github/ecosystem-events'
  published: true
x-github-modify:
  ghec:
    description: |-
      You must be an organization owner or have the "Manage organization webhooks" permission to use this endpoint.

      OAuth app tokens and personal access tokens (classic) need `admin:org_hook` scope. OAuth apps cannot list, view, or edit webhooks
      that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.
