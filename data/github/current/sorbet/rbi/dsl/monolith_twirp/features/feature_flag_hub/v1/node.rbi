# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Features::FeatureFlagHub::V1::Node`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Features::FeatureFlagHub::V1::Node`.

class MonolithTwirp::Features::FeatureFlagHub::V1::Node
  sig do
    params(
      custom_gates: T.nilable(MonolithTwirp::Features::FeatureFlagHub::V1::CustomGates),
      name: T.nilable(String),
      parent: T.nilable(String),
      percentage_of_actors: T.nilable(MonolithTwirp::Features::FeatureFlagHub::V1::PercentageOfActors),
      percentage_of_calls: T.nilable(MonolithTwirp::Features::FeatureFlagHub::V1::PercentageOfCalls),
      state: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(custom_gates: nil, name: nil, parent: nil, percentage_of_actors: nil, percentage_of_calls: nil, state: nil); end

  sig { void }
  def clear_custom_gates; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_parent; end

  sig { void }
  def clear_percentage_of_actors; end

  sig { void }
  def clear_percentage_of_calls; end

  sig { void }
  def clear_state; end

  sig { returns(T.nilable(MonolithTwirp::Features::FeatureFlagHub::V1::CustomGates)) }
  def custom_gates; end

  sig { params(value: T.nilable(MonolithTwirp::Features::FeatureFlagHub::V1::CustomGates)).void }
  def custom_gates=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(String) }
  def parent; end

  sig { params(value: String).void }
  def parent=(value); end

  sig { returns(T.nilable(MonolithTwirp::Features::FeatureFlagHub::V1::PercentageOfActors)) }
  def percentage_of_actors; end

  sig { params(value: T.nilable(MonolithTwirp::Features::FeatureFlagHub::V1::PercentageOfActors)).void }
  def percentage_of_actors=(value); end

  sig { returns(T.nilable(MonolithTwirp::Features::FeatureFlagHub::V1::PercentageOfCalls)) }
  def percentage_of_calls; end

  sig { params(value: T.nilable(MonolithTwirp::Features::FeatureFlagHub::V1::PercentageOfCalls)).void }
  def percentage_of_calls=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def state; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def state=(value); end
end
