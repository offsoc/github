{"version":3,"file":"ui_packages_paths_index_ts-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/paths/path.ts","ui/packages/paths/utils.ts"],"sourcesContent":["import {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport type {PathFunction} from './types'\nimport {encodePart} from './utils'\n\ntype Repository = {\n  name: string\n  ownerLogin: string\n}\n\ntype ActivityFilter = {\n  actor?: {\n    login: string\n  }\n  activityType: string\n  timePeriod: string\n  sort: string\n}\n\nexport type RepositoryTreePathAction =\n  | 'tree'\n  | 'blob'\n  | 'blame'\n  | 'raw'\n  | 'new'\n  | 'edit'\n  | 'delete'\n  | 'upload'\n  | 'tree/delete'\n  | 'latest-commit'\n  | 'tree-commit-info'\n  | 'branch-infobar'\n  | 'file-contributors'\n  | 'overview-files'\n\nexport type RepositoryPathAction =\n  | 'hovercard'\n  | 'refs'\n  | 'actions'\n  | 'pulls'\n  | 'issues'\n  | 'issues/new'\n  | 'branches'\n  | 'tags'\n  | 'settings'\n\nexport const fullUrl: PathFunction<{path: string}> = ({path}) => new URL(path, ssrSafeLocation.origin).toString()\n\nexport const codeNavGeneralSearchPath: PathFunction<{searchTerm: string}> = ({searchTerm}) =>\n  `/search?q=${encodePart(`${searchTerm}`)}&type=code`\n\nexport const codeNavSearchPath: PathFunction<{owner: string; repo: string; searchTerm: string}> = ({\n  owner,\n  repo,\n  searchTerm,\n}) => `/search?q=${encodePart(`repo:${owner}/${repo} ${searchTerm}`)}&type=code`\n\nexport const searchPath: PathFunction = () => `/search`\n\nexport const advancedSearchPath = () => `/search/advanced`\n\nexport const searchStatsPath: PathFunction = () => `/search/stats`\n\nexport const ownerPath: PathFunction<{owner: string}> = ({owner}) => `/${encodePart(owner)}`\n\nexport const ownerAvatarPath: PathFunction<{owner: string}> = ({owner}) => `/${encodePart(owner)}.png`\n\nexport const userHovercardPath: PathFunction<{owner: string}> = ({owner}) => `/users/${encodePart(owner)}/hovercard`\n\nexport const teamHovercardPath: PathFunction<{owner: string; team: string}> = ({owner, team}) =>\n  `/orgs/${encodePart(owner)}/teams/${encodePart(team)}/hovercard`\n\nexport const orgHovercardPath: PathFunction<{owner: string}> = ({owner}) => `/orgs/${encodePart(owner)}/hovercard`\n\nexport const userIdHovercardPath: PathFunction<{userId: number}> = ({userId}) => `/hovercards?user_id=${userId}`\n\nexport function repositoryPath({owner, repo, action}: {owner: string; repo: string; action?: RepositoryPathAction}) {\n  return action ? `/${encodePart(owner)}/${encodePart(repo)}/${action}` : `/${encodePart(owner)}/${encodePart(repo)}`\n}\n\nexport const repositoryStatsPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/stats`\n\nexport const repositoryParticipationPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/graphs/participation`\n\nexport const repoCommitActivityInsightsPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/graphs/commit-activity`\n\nexport const refNameCheckPath: PathFunction<{owner: string; repo: string; refName: string}> = ({\n  owner,\n  repo,\n  refName,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/branches/${encodePart(refName)}/rename_ref_check`\n\nexport const renameBranchEffectsPath: PathFunction<{owner: string; repo: string; branchName: string}> = ({\n  owner,\n  repo,\n  branchName,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/branches/rename_form/${encodePart(branchName)}`\n\nexport const renameRefPath: PathFunction<{owner: string; repo: string; refName: string}> = ({owner, repo, refName}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/branches/${encodePart(refName)}`\n\nexport const checkTagNameExistsPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/branches/check_tag_name_exists`\n\nexport const branchPath: PathFunction<{owner: string; repo: string; branch: string}> = ({owner, repo, branch}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/tree/${encodePart(branch)}`\n\nexport const tagPath: PathFunction<{owner: string; repo: string; tag: string}> = ({owner, repo, tag}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/releases/tag/${encodePart(tag)}`\n\nexport const invitationsPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/invitations`\n\nexport const migrateImmutableActionsPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/actions/immutable_actions/migrate`\n\nexport const migrationWorkflowsPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/actions/workflows/immutable-actions-migration/migrate_release`\n\nexport const newBranchProtectionPath: PathFunction<{owner: string; repo: string; branchName: string}> = ({\n  owner,\n  repo,\n  branchName,\n}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/settings/branch_protection_rules/new?branch_name=${encodePart(branchName)}`\n\nexport const rulesetsPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/settings/rules`\n\nexport const newRulesetPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/settings/rules/new?target=branch&enforcement=disabled`\n\nexport const orgRulesetsTargetCountPath: PathFunction<{owner: string}> = ({owner}) =>\n  `/organizations/${encodePart(owner)}/settings/rules/deferred_target_counts`\n\nexport const stafftoolsOrgRulesetsTargetCountPath: PathFunction<{owner: string}> = ({owner}) =>\n  `/stafftools/users/${encodePart(owner)}/organization_rules/deferred_target_counts`\n\nexport const repoRulesetsTargetCountPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/settings/rules/deferred_target_counts`\n\nexport const stafftoolsRepoRulesetsTargetCountPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/stafftools/repositories/${encodePart(owner)}/${encodePart(repo)}/repository_rules/deferred_target_counts`\n\nexport const validateRegexPath = () => '/repos/validate_regex'\nexport const validateRegexValuePath = () => '/repos/validate_regex/value'\n\nexport const blobPath: PathFunction<{\n  owner: string\n  repo: string\n  commitish: string\n  filePath: string\n  lineNumber?: number\n  plain?: number\n}> = ({owner, repo, commitish, filePath, lineNumber, plain}) => {\n  const params = plain ? `?plain=${plain}` : ''\n  const suffix = lineNumber ? `#L${lineNumber}` : ''\n  return `/${encodePart(owner)}/${encodePart(repo)}/blob/${encodePart(commitish)}/${encodePart(\n    filePath,\n  )}${params}${suffix}`\n}\n\nexport const editBlobPath: PathFunction<{\n  owner: string\n  repo: string\n  commitish: string\n  filePath: string\n  hash?: string\n  lineNumber?: number\n  plain?: number\n}> = ({owner, repo, commitish, filePath, hash, lineNumber}) => {\n  const suffix = hash ? hash : lineNumber ? `#L${lineNumber}` : ''\n  return `/${encodePart(owner)}/${encodePart(repo)}/edit/${encodePart(commitish)}/${encodePart(filePath)}${suffix}`\n}\n\nexport const blamePath: PathFunction<{\n  owner: string\n  repo: string\n  commitish: string\n  filePath: string\n  lineNumber?: number\n}> = ({owner, repo, commitish, filePath, lineNumber}) => {\n  const suffix = lineNumber ? `#L${lineNumber}` : ''\n  return `/${encodePart(owner)}/${encodePart(repo)}/blame/${encodePart(commitish)}/${encodePart(filePath)}${suffix}`\n}\n\nexport function dismissRepositoryNoticePathPath({login}: {login: string}) {\n  return `/users/${encodePart(login)}/dismiss_repository_notice`\n}\n\nexport function deferredMetadataPath({repo, commitish, path}: {repo: Repository; commitish: string; path: string}) {\n  const parts = ['', repo.ownerLogin, repo.name, 'deferred-metadata', commitish, path]\n  return parts.map(encodePart).join('/')\n}\n\nexport function deferredASTPath({repo, commitish, path}: {repo: Repository; commitish: string; path: string}) {\n  const parts = ['', repo.ownerLogin, repo.name, 'deferred-ast', commitish, path]\n  return parts.map(encodePart).join('/')\n}\n\nexport function repoOverviewUrl(repo: Pick<Repository, 'name' | 'ownerLogin'>) {\n  return `/${encodePart(repo.ownerLogin)}/${encodePart(repo.name)}`\n}\n\nexport function repoDefaultBrachUrl(repo: Repository) {\n  return `/${encodePart(repo.ownerLogin)}/${encodePart(repo.name)}?files=1`\n}\n\nexport function repositoryTreePath({\n  repo,\n  commitish,\n  action,\n  path,\n}: {\n  repo: Pick<Repository, 'name' | 'ownerLogin'>\n  commitish: string\n  action: RepositoryTreePathAction\n  path?: string\n}) {\n  const parts = ['', repo.ownerLogin, repo.name, action, commitish]\n\n  if (path && path !== '/') {\n    parts.push(path)\n  }\n\n  return parts.map(encodePart).join('/')\n}\n\nexport const blobSidePanelMetadataPath: PathFunction<{\n  owner: string\n  repo: string\n}> = ({owner, repo}) => `/${owner}/${repo}/sidepanel-metadata`\n\nexport function blobDetectLanguage(repo: Repository, encodedFileName: string, fullDetails?: boolean) {\n  return `/${repo.ownerLogin}/${repo.name}/detect_language?filename=${encodedFileName}${\n    fullDetails ? '&full_details=true' : ''\n  }`\n}\n\nexport const wikiBlobBasePath: PathFunction<{owner: string; repo: string; filePath: string}> = ({\n  owner,\n  repo,\n  filePath,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/wiki/${filePath.substring(0, filePath.lastIndexOf('.'))}`\n\nexport const wikiBlobPath: PathFunction<{owner: string; repo: string; filePath: string; commitish: string}> = ({\n  owner,\n  repo,\n  filePath,\n  commitish,\n}) => `${wikiBlobBasePath({owner, repo, filePath})}/${commitish}`\n\nexport const wikiComparePath: PathFunction<{owner: string; repo: string; commitish: string}> = ({\n  owner,\n  repo,\n  commitish,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/wiki/_compare/${commitish}`\n\nexport const commitPath: PathFunction<{owner: string; repo: string; commitish: string}> = ({owner, repo, commitish}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/commit/${commitish}`\n\nexport const diffLinesPath: PathFunction<{owner: string; repo: string; sha1: string; sha2: string; entry: string}> = ({\n  owner,\n  repo,\n  entry,\n  sha1,\n  sha2,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/diffs/${entry}/diff-lines?sha1=${sha1}&sha2=${sha2}`\n\nexport const commitDiffEntriesPath: PathFunction<{owner: string; repo: string; commitish: string}> = ({\n  owner,\n  repo,\n  commitish,\n}) => `${commitPath({owner, repo, commitish})}/remaining_diff_entries`\n\nexport const commitContextLinesPath: PathFunction<{owner: string; repo: string; commitish: string}> = ({\n  owner,\n  repo,\n  commitish,\n}) => `${commitPath({owner, repo, commitish})}/context_lines`\n\nexport const commitDiscussionsPath: PathFunction<{\n  owner: string\n  repo: string\n  commitOid: string\n  beforeCommentId?: string\n}> = ({owner, repo, commitOid, beforeCommentId}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/commit/${commitOid}/discussion_comments${\n    beforeCommentId ? `?before_comment_id=${beforeCommentId}` : ''\n  }`\n\nexport const commitInlineCommentsPath: PathFunction<{\n  owner: string\n  repo: string\n  commitOid: string\n  path: string\n  position: string\n}> = ({owner, repo, commitOid, path, position}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/commit/${commitOid}/inline_comments/?path=${encodePart(\n    path,\n  )}&position=${encodePart(position)}`\n\nexport const commitCommentDeferredCommentDataPath: PathFunction<{\n  owner: string\n  repo: string\n  commitOid: string\n}> = ({owner, repo, commitOid}) => `/${encodePart(owner)}/${encodePart(repo)}/commit/${commitOid}/deferred_comment_data`\n\nexport const commitsPath: PathFunction<{owner: string; repo: string; ref?: string; path?: string}> = ({\n  owner,\n  repo,\n  ref,\n  path,\n}) => {\n  const base = `/${encodePart(owner)}/${encodePart(repo)}/commits`\n  if (!ref) return base\n  if (!path) return `${base}/${encodePart(ref)}`\n  return `${base}/${encodePart(ref)}/${encodePart(stripLeadingSlash(path))}`\n}\n\nexport function commitsPathByAuthor({\n  repo,\n  branch,\n  path,\n  author,\n}: {\n  repo: Repository\n  branch: string\n  path: string\n  author: string\n}) {\n  const url = [repo.ownerLogin, repo.name, 'commits', branch, path].map(encodePart).join('/')\n  return `/${url}?author=${encodePart(author)}`\n}\n\nexport function commitStatusDetailsPath(repo: Repository, oid: string) {\n  return `/${repo.ownerLogin}/${repo.name}/commit/${oid}/status-details`\n}\n\nexport function commitsByAuthor({repo, author}: {repo: Repository; author: string}) {\n  const parts = [repo.ownerLogin, repo.name]\n\n  return `/${parts.map(encodePart).join('/')}/commits?author=${encodePart(author)}`\n}\n\nexport const commitHovercardPath: PathFunction<{owner: string; repo: string; commitish: string}> = ({\n  owner,\n  repo,\n  commitish,\n}) => `/${encodePart(`${owner}/${repo}/commit/${commitish}/hovercard`)}`\n\nexport const branchCommmitsPath: PathFunction<{owner: string; repo: string; commitish: string}> = ({\n  owner,\n  repo,\n  commitish,\n}) => `/${encodePart(`${owner}/${repo}/branch_commits/${commitish}`)}`\n\nexport const topicPath: PathFunction<{topicName: string}> = ({topicName}) => `/topics/${topicName}`\n\nexport const marketplaceCategoryPath: PathFunction<{categoryName: string}> = ({categoryName}) =>\n  `/marketplace/category/${parametrize(categoryName)}`\n\nexport const marketplaceActionPath: PathFunction<{slug: string}> = ({slug}) =>\n  `/marketplace/actions/${encodePart(slug)}`\n\nexport const actionsWorkflowRunPath: PathFunction<{owner: string; repo: string; runId?: string; attempt?: string}> = ({\n  owner,\n  repo,\n  runId,\n  attempt,\n}) => {\n  const parts = [owner, repo, 'actions']\n  if (runId) {\n    parts.push('runs', runId)\n  }\n  // Attempt defaults to '1' when not set\n  if (runId && attempt) {\n    parts.push('attempts', attempt)\n  }\n\n  return `/${parts.map(encodePart).join('/')}`\n}\n\nexport const actionsWorkflowFilePath: PathFunction<{owner: string; repo: string; runId?: string}> = ({\n  owner,\n  repo,\n  runId,\n}) => {\n  const parts = [owner, repo, 'actions']\n  if (runId) {\n    parts.push('runs', runId, 'workflow')\n  }\n  return `/${parts.map(encodePart).join('/')}`\n}\n\nexport const codeownersErrorPath: PathFunction<{owner: string; repo: string; commitish: string; filePath: string}> = ({\n  owner,\n  repo,\n  commitish,\n  filePath,\n}) => `/${owner}/${repo}/codeowners-validity/${commitish}/${filePath}`\n\nfunction stripLeadingSlash(path: string) {\n  return path.startsWith('/') ? path.slice(1) : path\n}\n\n/**\n * Replaces all non-alphanumeric characters with dashes, just like string.parametrize in ruby.\n */\nfunction parametrize(value: string) {\n  return value.replace(/[^a-zA-Z0-9]/g, '-').toLowerCase()\n}\n\nexport function parentPath(path: string) {\n  return path.split('/').slice(0, -1).join('/')\n}\n\n/**\n * Returns the path to the activity index page for a repository.\n *\n * To reuse this path in apps rendered in different places (e.g. GitHub.com vs Stafftools) - pass in the `baseUrl` param.\n */\nexport function activityIndexPath({\n  repo,\n  baseUrl = '',\n  branch,\n  filter,\n  pagination,\n  perPage = 30,\n}: {\n  repo: Repository\n  baseUrl?: string\n  branch?: string\n  filter?: ActivityFilter\n  pagination?: {before?: string | null; after?: string | null}\n  perPage?: number\n}) {\n  const parts = [repo.ownerLogin, repo.name, 'activity']\n  const params = []\n\n  if (branch) params.push(`ref=${encodePart(branch)}`)\n  if (filter) {\n    // Don't add default values to the path/query-string\n    if (filter.activityType && filter.activityType.toLocaleLowerCase() !== 'all') {\n      params.push(`activity_type=${encodePart(filter.activityType)}`)\n    }\n\n    if (filter.actor?.login) {\n      params.push(`actor=${encodePart(filter.actor.login)}`)\n    }\n\n    // Don't add default values to the path/query-string\n    if (filter.timePeriod && filter.timePeriod.toLocaleLowerCase() !== 'all') {\n      params.push(`time_period=${encodePart(filter.timePeriod)}`)\n    }\n\n    // Don't add default values to the path/query-string\n    if (filter.sort && filter.sort.toLocaleLowerCase() !== 'desc') {\n      params.push(`sort=${encodePart(filter.sort)}`)\n    }\n  }\n\n  if (pagination) {\n    if (pagination.after) {\n      params.push(`after=${encodePart(pagination.after)}`)\n    } else if (pagination.before) {\n      params.push(`before=${pagination.before}`)\n    }\n  }\n\n  // Don't add default values to the path/query-string\n  if (perPage && perPage !== 30) {\n    params.push(`per_page=${perPage}`)\n  }\n\n  return `${baseUrl}/${parts.map(encodePart).join('/')}${params.length > 0 ? `?${params.join('&')}` : ''}`\n}\n\n/**\n * Returns the path to the activity actors endpoing for a repository.\n *\n * To reuse this path in apps rendered in different places (e.g. GitHub.com vs Stafftools) - pass in the `baseUrl` param.\n */\nexport function activityActorsPath({\n  repo,\n  baseUrl = '',\n  branch,\n  timePeriod,\n}: {\n  repo: Repository\n  baseUrl?: string\n  branch?: string\n  timePeriod?: string\n}) {\n  const parts = [repo.ownerLogin, repo.name, 'activity', 'actors']\n  const params = []\n\n  if (branch) params.push(`ref=${encodePart(branch)}`)\n  if (timePeriod) params.push(`time_period=${encodePart(timePeriod)}`)\n\n  return `${baseUrl}/${parts.map(encodePart).join('/')}${params.length > 0 ? `?${params.join('&')}` : ''}`\n}\n\nexport function ruleInsightsActorsPath() {\n  return `insights/actors`\n}\n\nexport function bypassRequestersActorsPath() {\n  return `bypass_requests/requesters`\n}\n\nexport function bypassApproversActorsPath() {\n  return `bypass_requests/approvers`\n}\n\nexport function comparePath({repo, base = undefined, head}: {repo: Repository; base?: string; head: string}) {\n  const baseSegment = [repo.ownerLogin, repo.name, 'compare'].map(encodePart).join('/')\n  const compareSegment = base ? `${encodePart(base)}...${encodePart(head)}` : encodePart(head)\n  return `/${baseSegment}/${compareSegment}`\n}\n\nexport function mergeabilityCheckPath({repo, base, head}: {repo: Repository; base: string; head: string}) {\n  const baseSegment = [repo.ownerLogin, repo.name, 'branches', 'pre_mergeable'].map(encodePart).join('/')\n  const compareSegment = `${encodePart(base)}...${encodePart(head)}`\n  return `/${baseSegment}/${compareSegment}`\n}\n\nexport function repoPullRequestsPath(owner: string, repo: string) {\n  return `/${encodePart(owner)}/${encodePart(repo)}/pulls`\n}\n\nexport function repoStargazersPath(owner: string, repo: string) {\n  return `/${encodePart(owner)}/${encodePart(repo)}/stargazers`\n}\n\nexport function newPullRequestPath({repo, refName}: {repo: Repository; refName: string}) {\n  return `/${[repo.ownerLogin, repo.name, 'pull', 'new', refName].map(encodePart).join('/')}`\n}\n\nexport function pullRequestPath({repo, number}: {repo: Repository; number: number}) {\n  return `/${[repo.ownerLogin, repo.name, 'pull', number.toString()].map(encodePart).join('/')}`\n}\n\nexport const pullRequestTitlePath: PathFunction<{\n  owner: string\n  repo: string\n  number: number\n}> = ({owner, repo, number}) => `/${encodePart(owner)}/${encodePart(repo)}/pull/${number}`\n\nexport const pullRequestBodyPath: PathFunction<{\n  owner: string\n  repo: string\n  number: number\n  contentId: number\n}> = ({owner, repo, number, contentId}) => `/${encodePart(owner)}/${encodePart(repo)}/pull/${number}#issue-${contentId}`\n\nexport const pullRequestCommentPath: PathFunction<{\n  owner: string\n  repo: string\n  number: number\n  contentId: number\n}> = ({owner, repo, number, contentId}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/pull/${number}#issuecomment-${contentId}`\n\nexport const pullRequestReviewPath: PathFunction<{\n  owner: string\n  repo: string\n  number: number\n  contentId: number\n}> = ({owner, repo, number, contentId}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/pull/${number}#pullrequestreview-${contentId}`\n\nexport const pullRequestReviewCommentPath: PathFunction<{\n  owner: string\n  repo: string\n  number: number\n  contentId: number\n}> = ({owner, repo, number, contentId}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/pull/${number}#discussion_r${contentId}`\n\nexport function fetchAndMergePath({repo, refName, discard}: {repo: Repository; refName: string; discard?: boolean}) {\n  return `/${[repo.ownerLogin, repo.name, 'branches', 'fetch_and_merge', refName].map(encodePart).join('/')}${\n    discard ? '?discard_changes=true' : ''\n  }`\n}\n\nexport function reposSurveyPath(repo: Repository, action?: 'dismiss' | 'answer') {\n  const parts = [repo.ownerLogin, repo.name, 'repos', 'survey']\n  if (action) parts.push(action)\n  return `/${parts.map(encodePart).join('/')}`\n}\n\nexport function codeNavSurveyPath(ownerLogin: string, repoName: string, action?: 'answer') {\n  const parts = [ownerLogin, repoName, 'repos', 'code_nav_survey']\n  if (action) parts.push(action)\n  return `/${parts.map(encodePart).join('/')}`\n}\n\nexport function treeListPath({\n  repo,\n  commitOid,\n  includeDirectories = false,\n}: {\n  repo: Repository\n  commitOid: string\n  includeDirectories?: boolean\n}) {\n  const path = `/${[repo.ownerLogin, repo.name, 'tree-list', commitOid].map(encodePart).join('/')}`\n\n  return includeDirectories ? `${path}?include_directories=${includeDirectories}` : path\n}\n\nexport function branchCountPath(repo: Repository) {\n  const parts = [repo.ownerLogin, repo.name, 'branch-count']\n  return `/${parts.map(encodePart).join('/')}`\n}\n\nexport function tagCountPath(repo: Repository) {\n  const parts = [repo.ownerLogin, repo.name, 'tag-count']\n  return `/${parts.map(encodePart).join('/')}`\n}\n\nexport function codeNavigationPath({\n  repo,\n  type,\n  q,\n  language,\n  row,\n  column,\n  ref,\n  path,\n  codeNavContext,\n  symbolKind,\n}: {\n  repo: Repository\n  type: string\n  q: string\n  language: string\n  row: number\n  column: number\n  ref: string\n  path: string\n  codeNavContext: string\n  symbolKind: string | null\n}) {\n  const repoSegment = [repo.ownerLogin, repo.name].map(encodePart).join('/')\n  const params = new URLSearchParams()\n  params.append('q', q)\n  params.append('language', language)\n  params.append('row', String(row))\n  params.append('col', String(column))\n  params.append('ref', ref)\n  params.append('blob_path', path)\n  params.append('code_nav_context', codeNavContext)\n  if (symbolKind) {\n    params.append('symbol_kind', symbolKind)\n  }\n  return `/${repoSegment}/find-react-${type}?${params.toString()}`\n}\n\nexport const discussionPath: PathFunction<{owner: string; repo: string; discussionNumber: number}> = ({\n  owner,\n  repo,\n  discussionNumber,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/discussions/${discussionNumber}`\n\nexport const discussionCommentPath: PathFunction<{\n  owner: string\n  repo: string\n  discussionNumber: number\n  contentId: number\n}> = ({owner, repo, discussionNumber, contentId}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/discussions/${discussionNumber}#discussioncomment-${contentId}`\n\nexport const discussionBodyPath: PathFunction<{\n  owner: string\n  repo: string\n  discussionNumber: number\n  contentId: number\n}> = ({owner, repo, discussionNumber, contentId}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/discussions/${discussionNumber}#discussion-${contentId}`\n\nexport function repoIssuesPath(owner: string, repo: string) {\n  return `/${encodePart(owner)}/${encodePart(repo)}/issues`\n}\n\nexport const issuePath: PathFunction<{owner: string; repo: string; issueNumber: number}> = ({\n  owner,\n  repo,\n  issueNumber,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/issues/${issueNumber}`\n\nexport const issueCommentPath: PathFunction<{owner: string; repo: string; issueNumber: number; contentId: number}> = ({\n  owner,\n  repo,\n  issueNumber,\n  contentId,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/issues/${issueNumber}#issuecomment-${contentId}`\n\nexport const issueBodyPath: PathFunction<{owner: string; repo: string; issueNumber: number; contentId: number}> = ({\n  owner,\n  repo,\n  issueNumber,\n  contentId,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/issues/${issueNumber}#issue-${contentId}`\n\nexport const issueHovercardPath: PathFunction<{owner: string; repo: string; issueNumber: number}> = ({\n  owner,\n  repo,\n  issueNumber,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/issues/${issueNumber}/hovercard`\n\nexport const issueLinkedPullRequestHovercardPath: PathFunction<{\n  owner: string\n  repo: string\n  pullRequestNumber: number\n}> = ({owner, repo, pullRequestNumber}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/pull/${pullRequestNumber}/hovercard`\n\nexport const featurePreviews: PathFunction<{login: string}> = ({login}) =>\n  `/users/${encodePart(login)}/feature_previews`\n\nexport function extractPathFromPathname(pathname: string, refName: string, defaultPath: string) {\n  // We expect the pathname to be in the form of /owner/repo/action/branch/path\n  // That's why we split the pathname by '/' and take the 4th element (after the action)\n  const indexOfBranchAndPath = getIndexOfNth(pathname, '/', 4)\n  const branchAndPath = pathname.substring(indexOfBranchAndPath)\n\n  if (branchAndPath === `/${refName}`) {\n    // there is no path so there is no trailing slash\n    return ''\n  } else if (branchAndPath.startsWith(`/${refName}/`)) {\n    return branchAndPath.substring(refName.length + 2)\n  } else {\n    return defaultPath\n  }\n}\n\nexport function codeOfConductPath(owner: string, repo: string) {\n  return `/${encodePart(owner)}/${encodePart(repo)}/community/code-of-conduct/new`\n}\n\nexport function licenseSelectorPath(owner: string, repo: string) {\n  return `/${encodePart(owner)}/${encodePart(repo)}/community/license/new`\n}\n\nexport function securityPolicyPath(owner: string, repo: string) {\n  return `/${encodePart(owner)}/${encodePart(repo)}/security/policy`\n}\n\nfunction getIndexOfNth(text: string, subString: string, index: number) {\n  return text.split(subString, index).join(subString).length\n}\n\nexport const repoTransferPath = (repo: Repository) =>\n  `/${encodePart(`${repo.ownerLogin}/${repo.name}`)}/settings/transfer`\n\nexport const repositoryCheckNamePath = () => '/repositories/check-name'\n\nexport const repositoriesPath = () => '/repositories'\n\nexport const repoTransferTeamSuggestionsPath = (repo: Repository) =>\n  `/${encodePart(`${repo.ownerLogin}/${repo.name}`)}/settings/transfer`\n\nexport const repoAbortTransferPath = (repo: Repository) =>\n  `/${encodePart(`${repo.ownerLogin}/${repo.name}`)}/settings/abort_transfer`\n\nexport const repositoryImportsPath = () => '/new/import'\n\nexport const templateReposPath = () => `/repositories/new/templates`\n\nexport const repoOwnerItemsPath = () => '/repositories/forms/owner_items'\n\nexport const repoForkOwnerItemsPath = (repoId: number) => `/repositories/forms/fork_owner_items?repo_id=${repoId}`\n\nexport function repoOwnerDetailPath(owner: string): string\nexport function repoOwnerDetailPath(owner: string, action: 'transfer', repoId: number): string\nexport function repoOwnerDetailPath(owner: string, action?: 'transfer', repoId?: number): string {\n  const base = `/repositories/forms/owner_detail`\n  const params = new URLSearchParams({owner})\n\n  if (action && repoId) {\n    params.set('form', action)\n    params.set('repo_id', repoId.toString())\n  }\n\n  return `${base}?${params.toString()}`\n}\n\nexport const getContributorsPath = (repo: Repository) => `/repositories/${encodePart(repo.name)}/contributors/`\n\nexport const repoContributorsPath = (repo: Repository) =>\n  `/${encodePart(repo.ownerLogin)}/${encodePart(repo.name)}/graphs/contributors`\n\nexport const repoAccessSettingsPath = (repo: Repository) =>\n  `/${encodePart(repo.ownerLogin)}/${encodePart(repo.name)}/settings/access`\n\ntype PropertiesPathPrefix = 'organizations' | 'enterprises'\n\nexport function propertyDefinitionSettingsPath({\n  pathPrefix,\n  sourceName,\n  propertyName,\n}: {\n  pathPrefix: PropertiesPathPrefix\n  sourceName: string\n  propertyName?: string\n}) {\n  const parts = ['', pathPrefix, encodePart(sourceName), 'settings']\n  if (propertyName) {\n    parts.push('custom-property')\n    parts.push(encodePart(propertyName))\n  } else {\n    parts.push('custom-properties')\n  }\n  return parts.join('/')\n}\n\nexport function customPropertyDetailsPath({\n  pathPrefix,\n  sourceName,\n  propertyName,\n}: {\n  pathPrefix: PropertiesPathPrefix\n  sourceName: string\n  propertyName?: string\n}) {\n  const base = `/${pathPrefix}/${encodePart(sourceName)}/settings/custom-property`\n  if (propertyName) {\n    return `${base}/${encodePart(propertyName)}`\n  } else {\n    return base\n  }\n}\n\nexport function updateOrgPropertyValuesPath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/custom-properties/values`\n}\n\nexport function listOrgReposPropertyValuesPath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/custom-properties/list-repos-values`\n}\n\nexport const checkPropertyUsagePath = ({\n  pathPrefix,\n  sourceName,\n  propertyName,\n}: {\n  pathPrefix: PropertiesPathPrefix\n  sourceName: string\n  propertyName: string\n}) =>\n  ['', pathPrefix, encodePart(sourceName), 'settings', 'custom-properties-usage', encodePart(propertyName)].join('/')\n\nexport const checkPropertyNamePath = ({sourceName, propertyName}: {sourceName: string; propertyName: string}) =>\n  `/enterprises/${encodePart(sourceName)}/settings/property_definition_name_check/${encodePart(propertyName)}`\n\nexport function repositoryPropertiesSettingsPath({org, repo}: {org: string; repo: string}) {\n  return `/${encodePart(`${org}/${repo}`)}/settings/custom-properties`\n}\n\nexport function forkPath({owner, repo}: {owner: string; repo: string}) {\n  return `/${encodePart(`${owner}/${repo}`)}/fork`\n}\n\nexport function forksListPath({owner, repo}: {owner: string; repo: string}) {\n  return `/${encodePart(`${owner}/${repo}`)}/forks`\n}\n\nexport function newRepoPath({org}: {org?: string}) {\n  if (org) {\n    return `/organizations/${encodePart(org)}/repositories/new`\n  }\n\n  return `/new`\n}\n\nexport function orgReposIndexPath({org}: {org: string}) {\n  return `/orgs/${encodePart(org)}/repositories`\n}\n\nexport function orgReposListPath({org}: {org: string}) {\n  return `/orgs/${encodePart(org)}/repos_list`\n}\n\nexport function orgTopicReposPath({topic, org}: {topic: string; org: string}) {\n  return `/search?q=topic%3A${encodePart(topic)}+org%3A${encodePart(org)}&type=Repositories`\n}\n\nexport function repoAttestationsIndexPath({\n  repo,\n  pagination = {before: null, after: null},\n  perPage = 30,\n}: {\n  repo: Repository\n  pagination?: {before?: string | null; after?: string | null}\n  perPage?: number\n}) {\n  const parts = [repo.ownerLogin, repo.name, 'attestations']\n  const params = []\n\n  if (pagination) {\n    if (pagination.after) {\n      params.push(`after=${encodePart(pagination.after)}`)\n    } else if (pagination.before) {\n      params.push(`before=${encodePart(pagination.before)}`)\n    }\n  }\n\n  // Don't add default values to the path/query-string\n  if (perPage && perPage !== 30) {\n    params.push(`per_page=${perPage}`)\n  }\n\n  return `/${parts.map(encodePart).join('/')}${params.length > 0 ? `?${params.join('&')}` : ''}`\n}\n\nexport function repoAttestationShowPath({repo, attestationId}: {repo: Repository; attestationId: number | string}) {\n  // Coerce attestationId to string as it's sometimes a number (SSR vs client-side hydration)\n  return `/${[repo.ownerLogin, repo.name, 'attestations', attestationId.toString()].map(encodePart).join('/')}`\n}\n\nexport function repoAttestationDownloadPath({repo, attestationId}: {repo: Repository; attestationId: number | string}) {\n  // Coerce attestationId to string as it's sometimes a number (SSR vs client-side hydration)\n  return `/${[repo.ownerLogin, repo.name, 'attestations', attestationId.toString(), 'download']\n    .map(encodePart)\n    .join('/')}`\n}\n\nexport function branchesPath({repo}: {repo: Repository}) {\n  return `/${[repo.ownerLogin, repo.name, 'branches'].map(encodePart).join('/')}`\n}\n\nexport function tagsPath({repo}: {repo: Repository}) {\n  return `/${[repo.ownerLogin, repo.name, 'tags'].map(encodePart).join('/')}`\n}\n\nexport function orgOnboardingAdvancedSecurityPath({org}: {org: string}) {\n  return `/orgs/${encodePart(org)}/organization_onboarding/advanced_security`\n}\n\nexport function settingsOrgSecurityProductsPath({org, tip}: {org: string; tip?: string | null}) {\n  let path = `/organizations/${encodePart(org)}/settings/security_products`\n  if (tip) {\n    path += `?tip=${tip}`\n  }\n  return path\n}\n\nexport function settingsOrgSecurityConfigurationsNewPath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/configurations/new`\n}\n\nexport function settingsOrgSecurityConfigurationsCreatePath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/configurations`\n}\n\nexport function settingsOrgSecurityConfigurationsEditPath({org, id}: {org: string; id: number}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/configurations/edit/${id}`\n}\n\nexport function settingsOrgSecurityConfigurationsUpdatePath({org, id}: {org: string; id: number}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/configurations/${id}`\n}\n\nexport function settingsOrgSecurityProductsRepositories({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/repositories`\n}\n\nexport function settingsOrgSecurityProductsRepositoriesConfigurationSummaryPath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/repositories/apply_confirmation_summary`\n}\n\nexport function settingsOrgSecurityProductsRepositoriesApplyPath({org, id}: {org: string; id: number}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/configuration/${id}/repositories`\n}\n\nexport function settingsOrgSecurityProductsRepositoriesDeletePath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/configuration/repositories`\n}\n\nexport function settingsOrgSecurityProductsRepositoriesCount({org, id}: {org: string; id: number}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/configuration/${id}/repositories_count`\n}\n\nexport function settingsOrgSecurityConfigurationsViewPath({org, tip}: {org: string; tip?: string | null}) {\n  let path = `/organizations/${encodePart(org)}/settings/security_products/configurations/view`\n  if (tip) {\n    path += `?tip=${tip}`\n  }\n  return path\n}\n\nexport function settingsOrgSecurityProductsRepositoriesGhasLicenseSummaryPath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/repositories/advanced_security_license_summary`\n}\n\nexport function settingsOrgSecurityProductsOptOutPath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/opt_out`\n}\n\nexport function settingsOrgSecurityProductsEnablementInProgressPath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/in_progress`\n}\n\nexport function settingsOrgSecurityProductsRefreshPath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/refresh`\n}\n\nexport function editDocsetPath({docsetId}: {docsetId: string}) {\n  return `/copilot/docsets/${docsetId}/edit`\n}\n\nexport function contactSalesRequest() {\n  return '/contact-sales'\n}\n\nexport const contactPath = () => '/contact'\n\nexport function repoSettingsSecurityAnalysisPath({repo}: {repo: Repository}) {\n  return `/${encodePart(`${repo.ownerLogin}/${repo.name}`)}/settings/security_analysis`\n}\n\nexport function dismissOrganizationNoticePath({org}: {org: string}) {\n  return `/orgs/${encodePart(org)}/dismiss_notice`\n}\n\nexport const enterprisePath: PathFunction<{slug: string}> = ({slug}) => `/enterprises/${slug}`\n\nexport function emailSubscriptionTopicsByEmailPath(email: string) {\n  const emailParamString = new URLSearchParams({email})\n  return `/settings/emails/subscriptions/topics_by_email?${emailParamString}`\n}\n\nexport function emailSubscriptionTopicsByParamsPath<TopicsParams extends Record<string, string>>(\n  topicSettingParams: TopicsParams,\n) {\n  const topicSettingParamString = new URLSearchParams(topicSettingParams)\n  return `/settings/emails/subscriptions/topics_by_params?${topicSettingParamString}`\n}\n\nexport function emailSubscriptionNewLinkPath() {\n  return '/settings/emails/subscriptions/link-request/new'\n}\n\nexport const userPRFileTreeVisibilitySettingPath: PathFunction<{login: string}> = ({login}) =>\n  `/users/${encodePart(login)}/pulls/settings/file_tree_visibility`\n\nexport const codeScanningAlertPath: PathFunction<{owner: string; repo: string; alertNumber: number}> = ({\n  owner,\n  repo,\n  alertNumber,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/security/code-scanning/${alertNumber}`\n\nexport function orgRepositoriesPath({owner, query}: {owner: string; query: string}) {\n  return `/orgs/${encodePart(owner)}/repositories?q=${encodePart(query)}`\n}\n","import type {PathFunction, PathParams, Query} from './types'\nimport {ssrSafeLocation} from '@github-ui/ssr-utils'\n\n/**\n * Given a path function, a set of parameters for that function, and a query, returns a URL.\n */\nexport function getUrl<T extends PathParams | void>(path: PathFunction<T>, args: T, query?: Query): URL {\n  const pathname = path(args)\n  const target = new URL(pathname, ssrSafeLocation.origin || 'https://github.com')\n\n  if (pathname === ssrSafeLocation.pathname) {\n    target.search = new URLSearchParams(ssrSafeLocation.search).toString()\n  }\n\n  for (const [key, value] of Object.entries(query || {})) {\n    if (value === null || value === undefined) {\n      target.searchParams.delete(key)\n    } else {\n      target.searchParams.set(key, value.toString())\n    }\n  }\n\n  return target\n}\n\n/**\n * Get an href for use in links. This will be a relative URL, and will work properly in SSR.\n */\nexport function getRelativeHref<T extends PathParams>(path: PathFunction<T>, args: T, query?: Query): string {\n  const url = getUrl(path, args, query)\n  return url.href.replace(url.origin, '') // strip origin, but keep the rest to make it relative\n}\n\n/**\n * Encodes special characters in a URL part, except `/`\n */\nexport function encodePart(part: string): string {\n  return part.split('/').map(encodeURIComponent).join('/')\n}\n"],"names":["fullUrl","path","URL","ssrSafeLocation","origin","toString","codeNavGeneralSearchPath","searchTerm","encodePart","codeNavSearchPath","owner","repo","searchPath","advancedSearchPath","searchStatsPath","ownerPath","ownerAvatarPath","userHovercardPath","teamHovercardPath","team","orgHovercardPath","repositoryPath","action","repositoryStatsPath","repositoryParticipationPath","repoCommitActivityInsightsPath","refNameCheckPath","refName","renameBranchEffectsPath","branchName","renameRefPath","checkTagNameExistsPath","branchPath","branch","tagPath","tag","invitationsPath","migrateImmutableActionsPath","migrationWorkflowsPath","newRulesetPath","orgRulesetsTargetCountPath","stafftoolsOrgRulesetsTargetCountPath","repoRulesetsTargetCountPath","stafftoolsRepoRulesetsTargetCountPath","validateRegexPath","validateRegexValuePath","blobPath","commitish","filePath","lineNumber","plain","params","suffix","editBlobPath","hash","blamePath","dismissRepositoryNoticePathPath","login","deferredMetadataPath","parts","ownerLogin","name","map","join","deferredASTPath","repoOverviewUrl","repoDefaultBrachUrl","repositoryTreePath","push","blobSidePanelMetadataPath","blobDetectLanguage","encodedFileName","fullDetails","wikiBlobBasePath","substring","lastIndexOf","wikiBlobPath","wikiComparePath","commitPath","diffLinesPath","entry","sha1","sha2","commitDiffEntriesPath","commitContextLinesPath","commitDiscussionsPath","commitOid","beforeCommentId","commitInlineCommentsPath","position","commitCommentDeferredCommentDataPath","commitsPath","ref","base","stripLeadingSlash","startsWith","slice","commitsPathByAuthor","author","url","commitStatusDetailsPath","oid","commitsByAuthor","commitHovercardPath","branchCommmitsPath","topicPath","topicName","marketplaceCategoryPath","categoryName","value","replace","toLowerCase","marketplaceActionPath","slug","actionsWorkflowRunPath","runId","attempt","actionsWorkflowFilePath","codeownersErrorPath","parentPath","split","activityIndexPath","baseUrl","filter","pagination","perPage","activityType","toLocaleLowerCase","actor","timePeriod","sort","after","before","length","activityActorsPath","ruleInsightsActorsPath","bypassRequestersActorsPath","bypassApproversActorsPath","comparePath","head","baseSegment","compareSegment","mergeabilityCheckPath","repoPullRequestsPath","repoStargazersPath","newPullRequestPath","pullRequestPath","number","pullRequestTitlePath","pullRequestBodyPath","contentId","pullRequestCommentPath","pullRequestReviewPath","pullRequestReviewCommentPath","fetchAndMergePath","discard","treeListPath","includeDirectories","branchCountPath","tagCountPath","codeNavigationPath","type","q","language","row","column","codeNavContext","symbolKind","repoSegment","URLSearchParams","append","String","discussionPath","discussionNumber","discussionCommentPath","discussionBodyPath","repoIssuesPath","issuePath","issueNumber","issueCommentPath","issueBodyPath","issueHovercardPath","issueLinkedPullRequestHovercardPath","pullRequestNumber","extractPathFromPathname","pathname","defaultPath","indexOfBranchAndPath","text","branchAndPath","repoTransferPath","repositoryCheckNamePath","repositoriesPath","repoTransferTeamSuggestionsPath","repoAbortTransferPath","repositoryImportsPath","templateReposPath","repoOwnerItemsPath","repoForkOwnerItemsPath","repoId","repoOwnerDetailPath","set","repoContributorsPath","repoAccessSettingsPath","propertyDefinitionSettingsPath","pathPrefix","sourceName","propertyName","customPropertyDetailsPath","updateOrgPropertyValuesPath","org","listOrgReposPropertyValuesPath","checkPropertyUsagePath","checkPropertyNamePath","repositoryPropertiesSettingsPath","forkPath","forksListPath","newRepoPath","orgReposListPath","orgTopicReposPath","topic","repoAttestationsIndexPath","repoAttestationShowPath","attestationId","repoAttestationDownloadPath","branchesPath","tagsPath","orgOnboardingAdvancedSecurityPath","settingsOrgSecurityProductsPath","tip","settingsOrgSecurityConfigurationsNewPath","settingsOrgSecurityConfigurationsCreatePath","settingsOrgSecurityConfigurationsEditPath","id","settingsOrgSecurityConfigurationsUpdatePath","settingsOrgSecurityProductsRepositories","settingsOrgSecurityProductsRepositoriesConfigurationSummaryPath","settingsOrgSecurityProductsRepositoriesApplyPath","settingsOrgSecurityProductsRepositoriesDeletePath","settingsOrgSecurityProductsRepositoriesCount","settingsOrgSecurityConfigurationsViewPath","settingsOrgSecurityProductsRepositoriesGhasLicenseSummaryPath","settingsOrgSecurityProductsEnablementInProgressPath","settingsOrgSecurityProductsRefreshPath","contactSalesRequest","contactPath","repoSettingsSecurityAnalysisPath","dismissOrganizationNoticePath","enterprisePath","emailSubscriptionTopicsByEmailPath","email","emailParamString","emailSubscriptionTopicsByParamsPath","topicSettingParams","topicSettingParamString","emailSubscriptionNewLinkPath","userPRFileTreeVisibilitySettingPath","codeScanningAlertPath","alertNumber","orgRepositoriesPath","query","getUrl","args","target","key","search","Object","entries","searchParams","delete","getRelativeHref","href","part","encodeURIComponent"],"sourceRoot":""}