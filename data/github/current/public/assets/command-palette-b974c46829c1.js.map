{"version":3,"file":"command-palette-xxxxxxxxxxxx.js","mappings":"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","sources":["app/assets/modules/github/command-palette/command-palette-mode-element.ts","app/assets/modules/github/command-palette/command-palette-tip-element.ts","app/assets/modules/github/command-palette/command-palette-token-element.ts","app/assets/modules/github/command-palette/providers/remote-provider.ts","app/assets/modules/github/command-palette/providers/prefetched-provider.ts","app/assets/modules/github/command-palette/providers/commands-provider.ts","app/assets/modules/github/command-palette/providers/files-provider.ts","app/assets/modules/github/command-palette/providers/help-provider.ts","app/assets/modules/github/command-palette/providers/search-links-provider.ts","app/assets/modules/github/command-palette/providers/server-defined-provider-factory.ts","app/assets/modules/github/command-palette/server-defined-provider-element.ts","app/assets/modules/github/command-palette/command-palette-help-element.ts","app/assets/modules/github/command-palette/main-window-command.ts","app/assets/modules/github/command-palette/main-window-commands/discussion.ts","app/assets/modules/github/command-palette/main-window-commands/everywhere/switch-tab-size.ts","app/assets/modules/github/command-palette/main-window-commands/everywhere.ts","app/assets/modules/github/command-palette/main-window-commands/issue.ts","app/assets/modules/github/command-palette/main-window-commands/codespaces.ts","app/assets/modules/github/command-palette/main-window-commands/pull-request.ts","app/assets/modules/github/command-palette/main-window-commands/repository.ts","app/assets/modules/github/command-palette/providers/main-window-commands-provider.ts","app/assets/modules/github/command-palette/command-palette-input-element.ts","app/assets/modules/command-palette.ts","app/assets/modules/github/code-editor.ts","app/assets/modules/github/color-modes.ts","ui/packages/cookies/cookies.ts","ui/packages/hotkey/hotkey.ts","ui/packages/subscription/subscription.ts"],"sourcesContent":["import {attr, controller} from '@github/catalyst'\nimport type {Scope} from './command-palette-scope-element'\n\n/**\n * <command-palette-mode> represent a mode which the command palette can operate within.\n *\n * == Attributes\n * - char: the mode character\n * - placeholder: the placeholder text to display when the command palette is in this mode\n * - scopeTypes: the scope types for when this mode is active\n */\n\nconst matchAll = '*'\n\n@controller\nexport class CommandPaletteModeElement extends HTMLElement {\n  @attr char: string\n  @attr placeholder: string\n  @attr scopeTypes = ''\n\n  /**\n   * Returns whether this mode is active for the given scope and first character.\n   *\n   * @param scope the scope to check\n   * @param firstChar the first character from the command palette input\n   */\n  active(scope: Scope, firstChar: string): boolean {\n    return this.scopeTypeMatch(scope.type) && this.modeMatch(firstChar)\n  }\n\n  scopeTypeMatch(scopeType: string) {\n    if (!this.scopeTypes) {\n      return true\n    }\n\n    return this.scopeTypes && JSON.parse(this.scopeTypes).includes(scopeType)\n  }\n\n  modeMatch(mode: string) {\n    return this.char === matchAll || this.char === mode\n  }\n\n  /**\n   * Returns the character to display for this mode.\n   */\n  character(): string {\n    return this.char === matchAll ? '' : this.char\n  }\n}\n","import {attr, controller} from '@github/catalyst'\nimport type {ModeObserver} from './mode-observer'\nimport type {Query} from './query'\n/**\n * <command-palette-tip> represent the hint text displayed in various empty states.\n *\n * Tips can be configured to appear when the mode, type, or value match a certain string.\n *\n * @example\n * <command-palette-tip data-value=\"say hi\">Hi there!</command-palette-tip>\n * <command-palette-tip data-mode=\">\">You are using command mode.</command-palette-tip>\n * <command-palette-tip data-match-mode=\"[^?]|^$\">You are using any mode except for the help mode.</command-palette-tip>\n * <command-palette-tip data-scope-types=\"[\\\"owner\\\",\\\"repository\\\"]\">You are scoped to an owner or a repository.</command-palette-tip>\n * <command-palette-tip data-on-empty>There are no results!</command-palette-tip>\n */\nconst matchAll = '*'\nconst undefinedRegex = ''\n\n@controller\nexport class CommandPaletteTipElement extends HTMLElement implements ModeObserver {\n  // By default, anything will match.\n  @attr scopeTypes = undefinedRegex\n  @attr mode = matchAll\n  @attr matchMode = undefinedRegex\n  @attr value = matchAll\n  @attr onEmpty = false\n  @attr onError = false\n\n  connectedCallback() {\n    this.hidden = true\n  }\n\n  available(query: Query, isEmpty = false, error = false) {\n    const available =\n      this.valueMatch(query.text) &&\n      this.scopeTypeMatch(query.scope.type) &&\n      this.modeMatch(query.mode) &&\n      this.showOnEmpty(isEmpty) &&\n      this.showOnError(error)\n\n    return available\n  }\n\n  toggle(query: Query, isEmpty = false, error = false) {\n    this.hidden = !this.available(query, isEmpty, error)\n  }\n\n  valueMatch(value: string) {\n    return this.value === matchAll || this.value === value\n  }\n\n  scopeTypeMatch(scopeType: string) {\n    return (\n      this.scopeTypes !== undefinedRegex &&\n      (this.scopeTypes === matchAll || JSON.parse(this.scopeTypes).includes(scopeType))\n    )\n  }\n\n  modeMatch(mode: string) {\n    if (this.matchMode === undefinedRegex) {\n      return this.mode === matchAll || this.mode === mode\n    } else {\n      const regex = new RegExp(this.matchMode)\n      return mode.match(regex) !== null\n    }\n  }\n\n  showOnEmpty(isEmpty: boolean) {\n    if (this.onEmpty) {\n      return isEmpty\n    } else {\n      return true\n    }\n  }\n\n  showOnError(error: boolean) {\n    if (this.onError) {\n      return error\n    } else {\n      return true\n    }\n  }\n}\n","import {attr, controller} from '@github/catalyst'\n\nexport interface Token {\n  text: string\n  type: string\n  id: string\n  value: string\n}\n\n/**\n * <command-palette-token> represent a token used to build the scope UI. Each token holds attributes that can be used for querying.\n *\n * == Attributes\n * - text: The text to be shown for the token\n * - type: The type of token it is: owner or repository\n * - id: The global relay id for the token\n * - value: The value for query on descope\n */\n\n@controller\nexport class CommandPaletteTokenElement extends HTMLElement {\n  @attr type = ''\n  @attr override id = ''\n  @attr text = ''\n  @attr value = ''\n}\n","import type {Octicon, ProviderResponse} from '@github-ui/command-palette'\nimport {ServerDefinedItem, type ServerDefinedItemData} from '../items/server-defined-item'\nimport type {Query} from '../query'\nimport {ServerDefinedProvider} from './server-defined-provider'\n\nexport class RemoteProvider extends ServerDefinedProvider {\n  override fetch(query: Query, _isEmpty: boolean): Promise<ProviderResponse> {\n    return this.fetchSrc(query)\n  }\n\n  override enabledFor(query: Query): boolean {\n    return this.modeMatch(query) && this.scopeMatch(query)\n  }\n\n  override clearCache(): void {\n    // nothing to clear\n  }\n\n  scopeMatch(query: Query) {\n    return this.scopeTypes.length === 0 || this.scopeTypes.includes(query.scope.type)\n  }\n\n  modeMatch(query: Query) {\n    return this.modes.includes(query.mode) || this.hasWildCard\n  }\n\n  // Mark: - Protected methods\n\n  protected async fetchSrc(query: Query, overrideMode = ''): Promise<ProviderResponse> {\n    if (!this.src) throw new Error('No src defined')\n\n    const url = new URL(this.src, window.location.origin)\n    const params = query.params()\n\n    if (overrideMode) {\n      params.set('mode', overrideMode)\n    }\n\n    url.search = params.toString()\n    const response = await fetch(url.toString(), {\n      headers: {\n        Accept: 'application/json',\n        'X-Requested-With': 'XMLHttpRequest',\n      },\n    })\n\n    if (response.ok) {\n      const responseData: {results?: []; octicons?: Octicon[]} = await response.json()\n      return {\n        results:\n          responseData.results?.map((itemData: ServerDefinedItemData) => ServerDefinedItem.build(itemData)) || [],\n        octicons: responseData.octicons,\n      }\n    } else {\n      return {error: true, results: []}\n    }\n  }\n}\n","import type {Item, Octicon, ProviderResponse} from '@github-ui/command-palette'\nimport {Query} from '../query'\nimport {RemoteProvider} from './remote-provider'\n\n/**\n * This provides results to the command palette.\n *\n * It prefetches results from the server and filters them on the client-side as\n * the user types. Results are prefetched when the command palette is activated\n * or when the scope changes.\n *\n * Because the results are already loaded, this provider has near-zero latency.\n *\n * If your data source has a bounded size that is 1,000 or less, a prefetched\n * provider will offer a better user experience with less server load.\n */\nexport class PrefetchedProvider extends RemoteProvider {\n  octicons: Octicon[]\n  maxItems = 1000\n  scopedItems: {\n    [scopeId: string]: Item[]\n  } = {}\n  cachedOcticons: {\n    [scopeId: string]: Octicon[]\n  } = {}\n\n  override clearCache() {\n    super.clearCache()\n    this.scopedItems = {}\n    this.cachedOcticons = {}\n  }\n\n  override get debounce() {\n    return 0\n  }\n\n  async prefetch(query: Query) {\n    if (!this.scopeMatch(query)) return\n    // No need to fetch from server if we already have the results.\n    if (this.scopedItems[query.scope.id]) return\n\n    // When pre-fetching we want results from a query with no query text.\n    // A query with no text should generally return a complete set of results\n    // that the fuzzy filter can then filter based on the query text.\n    const blankQuery = new Query('', query.mode, {\n      subjectId: query.subjectId,\n      subjectType: query.subjectType,\n      returnTo: query.returnTo,\n      scope: query.scope,\n    })\n    const responseData = await this.fetchSrc(blankQuery, query.mode)\n    this.octicons = responseData.octicons || []\n    const items = responseData.results || []\n\n    // Cache these results for this scope. fetch can then return them immediately.\n    this.scopedItems[query.scope.id] = items\n    this.cachedOcticons[query.scope.id] = this.octicons\n  }\n\n  override async fetch(query: Query, _isEmpty: boolean): Promise<ProviderResponse> {\n    const items = this.scopedItems[query.scope.id] || []\n    const octicons = this.cachedOcticons[query.scope.id] || []\n\n    const matchingItems = this.fuzzyFilter(items, query)\n    return {results: matchingItems.slice(0, this.maxItems), octicons}\n  }\n}\n","import {PrefetchedProvider} from './prefetched-provider'\nimport type {Query} from '../query'\n\nexport class CommandsProvider extends PrefetchedProvider {\n  override enabledFor(query: Query): boolean {\n    const modelessCommandScopeTypes = ['discussion', 'issue', 'pull_request']\n\n    if (query.mode === '>') {\n      return true\n    } else if (modelessCommandScopeTypes.includes(query.scope.type)) {\n      return true\n    } else {\n      return false\n    }\n  }\n}\n","import {AccessPolicyItem} from '../items/access-policy-item'\nimport {JumpToItem} from '../items/jump-to-item'\nimport {PrefetchedProvider} from './prefetched-provider'\nimport {Query} from '../query'\nimport type {ServerDefinedItem} from '../items/server-defined-item'\n\n/**\n * This is a special prefetched provider that supports linking to file line\n * numbers using the `:123` syntax. This happens in the browser.\n *\n */\n\nexport class FilesProvider extends PrefetchedProvider {\n  /**\n   * Fetch results from server and serialize into JumpToItems using file paths.\n   */\n  override async fetchSrc(query: Query) {\n    if (!this.src) throw new Error('No src provided')\n\n    const url = new URL(this.src, window.location.origin)\n    url.search = query.params().toString()\n    const response = await fetch(url.toString(), {\n      headers: {\n        Accept: 'application/json',\n        'X-Requested-With': 'XMLHttpRequest',\n      },\n    })\n\n    const data = await response.json()\n    if (!data.results) return\n\n    const results = data.results[0]\n\n    if (results['base_file_path']) {\n      const baseFilePath = results['base_file_path'] as string\n      const filePaths = results.paths as string[]\n      data.results = filePaths.map(file => {\n        return JumpToItem.from({\n          title: file,\n          path: `${baseFilePath}/${file}`,\n          icon: 'file-color-fg-muted',\n          group: 'files',\n        })\n      })\n    } else if (results['action'] && results.action.type === 'access_policy') {\n      data.results = [new AccessPolicyItem(results)]\n    } else {\n      data.results = []\n    }\n\n    return data\n  }\n\n  override async fetch(query: Query, isEmpty = false) {\n    const endsWithLineNumberMatch = query.text.match(/(.+):(\\d*)\\s*$/)\n\n    if (endsWithLineNumberMatch) {\n      return this.fetchWithLineNumbers(query, endsWithLineNumberMatch)\n    } else {\n      return super.fetch(query, isEmpty)\n    }\n  }\n\n  /**\n   * Build and return a list of items that link to a line number in a file. This\n   * relies on super.fetch to return items matching the query without the line\n   * number and then appends the line number afterwards.\n   *\n   * @param query\n   * @param endsWithLineNumberMatch\n   * @returns list of file jump to items linking to a line number\n   */\n  async fetchWithLineNumbers(query: Query, endsWithLineNumberMatch: RegExpMatchArray) {\n    const newQueryText = endsWithLineNumberMatch[1]!\n    const lineNumber = endsWithLineNumberMatch[2]!\n    const queryWithoutLineNumber = new Query(newQueryText, query.mode, {scope: query.scope})\n\n    const items = [] as ServerDefinedItem[]\n    const superItems = (await super.fetch(queryWithoutLineNumber, false)).results\n    for (const item of superItems) {\n      if (item instanceof JumpToItem) {\n        items.push(this.convert(item, lineNumber))\n      }\n    }\n\n    return {results: items}\n  }\n\n  /**\n   * This takes an item and returns a new one with a line number attached. This\n   * builds a new item, it doesn't mutate the original.\n   *\n   * If the line number is empty or the item isn't a JumpToItem, the same item is\n   * returned.\n   *\n   * @param item to be converted\n   * @param lineNumber to append to item\n   * @returns item with line number append, if appropriate\n   */\n  convert(item: ServerDefinedItem, lineNumber: string) {\n    if (lineNumber === '') return item\n    if (!(item instanceof JumpToItem)) return item\n\n    item.title = `${item.title}:${lineNumber}`\n    item.action.path = `${item.action.path}#L${lineNumber}`\n\n    return item\n  }\n}\n","import type {CommandPaletteHelpElement} from '../command-palette-help-element'\nimport type {Query} from '../query'\nimport type {ServerDefinedItem} from '../items/server-defined-item'\nimport {ServerDefinedProvider} from './server-defined-provider'\n\n/**\n * Provides links to search a repository, an organization/user, or all of GitHub.\n */\nexport class HelpProvider extends ServerDefinedProvider {\n  override enabledFor(_query: Query): boolean {\n    return true\n  }\n\n  override clearCache(): void {\n    // nothing\n  }\n\n  override get hasCommands(): boolean {\n    return false\n  }\n\n  override get debounce() {\n    return 0\n  }\n\n  override async fetch(query: Query, isEmpty = false) {\n    if (query.mode !== '?' && !isEmpty) {\n      return {results: []} as {results: ServerDefinedItem[]}\n    }\n\n    const helpElements = Array.from(this.element.querySelectorAll<CommandPaletteHelpElement>('command-palette-help'))\n    const helpItems = helpElements\n      .filter(helpElement => helpElement.show(query))\n      .map((helpElement, index) => helpElement.toItem(index))\n\n    return {results: helpItems} as {results: ServerDefinedItem[]}\n  }\n}\n","import type {Query} from '../query'\nimport {SearchLinkItem} from '../items/search-link-item'\nimport type {ServerDefinedItem} from '../items/server-defined-item'\nimport {ServerDefinedProvider} from './server-defined-provider'\n\n/**\n * Provides links to search a repository, an organization/user, or all of GitHub.\n */\nexport class SearchLinksProvider extends ServerDefinedProvider {\n  override enabledFor(query: Query): boolean {\n    if (query.isBlank() || query.mode === '?' || query.mode === '>') {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  override clearCache(): void {\n    // nothing\n  }\n\n  override get hasCommands(): boolean {\n    return false\n  }\n\n  override async fetch(query: Query, _isEmpty = false) {\n    return {results: [SearchLinkItem.create(query)]} as {results: ServerDefinedItem[]}\n  }\n}\n","import {CommandsProvider} from './commands-provider'\nimport {FilesProvider} from './files-provider'\nimport {HelpProvider} from './help-provider'\nimport {PrefetchedProvider} from './prefetched-provider'\nimport {RemoteProvider} from './remote-provider'\nimport {SearchLinksProvider} from './search-links-provider'\nimport type {ServerDefinedProvider} from './server-defined-provider'\nimport type {ServerDefinedProviderElement} from '../server-defined-provider-element'\n\n/**\n * A factory for creating server defined providers.\n */\nexport class ServerDefinedProviderFactory {\n  /**\n   * A map of provider server provided types to their provider class.\n   */\n  static providers: {[key: string]: typeof ServerDefinedProvider} = {\n    remote: RemoteProvider,\n    prefetched: PrefetchedProvider,\n    commands: CommandsProvider,\n    files: FilesProvider,\n    help: HelpProvider,\n    'search-links': SearchLinksProvider,\n  }\n\n  /**\n   * Creates a `ServerDefinedProvider` subclass based on the properties in a `ServerDefinedProviderElement`.\n   * Uses `type` to map to a provider class using `ServerDefinedProviderFactory.providers`.\n   * @param properties: A `ServerDefinedProviderElement`\n   * @returns a `ServerDefinedProvider` created from the properties.\n   */\n  static create(properties: ServerDefinedProviderElement): ServerDefinedProvider {\n    const providerClass = this.providers[properties.type]\n    if (!providerClass) {\n      throw new Error(`Unknown provider type: ${properties.type}`)\n    }\n    return new providerClass(properties)\n  }\n}\n","import type {ServerDefinedProvider, ServerDefinedProviderProperties} from './providers/server-defined-provider'\nimport {attr, controller} from '@github/catalyst'\nimport {ProviderElement} from './provider-element'\nimport {ServerDefinedProviderFactory} from './providers/server-defined-provider-factory'\n\n/**\n * This is a custom element that can be used to hold a the configuration for a server defined provider. This is useful for\n * when we want to define proprties of a provider on the server to be used on the client.\n * @example:\n * <server-defined-provider\n *  type=\"remote\"\n *  src=\"/command_palette/providers/page_navigation\"\n *  data-supported-modes=\"[\"\"]\"\n *  scope-types=\"[\"\", \"owner\", \"repo\"]\"\n * ></server-defined-provider>\n */\n@controller\nexport class ServerDefinedProviderElement extends ProviderElement implements ServerDefinedProviderProperties {\n  // REQUIRED: Expects the provider ID.\n  // See the possible provider IDs in `ServerDefinedProviderFactory.providers`\n  @attr type: string\n\n  // REQUIRED: Expects a JSON string of supported modes.\n  @attr supportedModes: string\n\n  // REQUIRED: Expects a Number string representing the fetch debounce in milliseconds.\n  @attr fetchDebounce: string\n\n  // OPTIONAL: Expects a JSON string of scope types.\n  @attr supportedScopeTypes: string\n\n  // OPTIONAL: Expects a string path to make fetches to.\n  @attr src: string\n\n  // OPTIONAL: Whether the provider supports command items.\n  @attr supportsCommands: boolean\n\n  private _wildcard = '*'\n  private _modes: string[]\n  private _scopeTypes: string[]\n\n  override provider: ServerDefinedProvider\n\n  // Mark: - Getters\n\n  get debounce(): number {\n    return parseInt(this.fetchDebounce, 10)\n  }\n\n  get hasCommands(): boolean {\n    return this.supportsCommands\n  }\n\n  get hasWildCard(): boolean {\n    return this.modes.includes(this._wildcard)\n  }\n\n  get modes(): string[] {\n    if (this.supportedModes === '') {\n      this._modes = ['']\n    }\n\n    if (!this._modes) {\n      this._modes = JSON.parse(this.supportedModes)\n    }\n\n    return this._modes\n  }\n\n  get scopeTypes(): string[] {\n    if (this.supportedScopeTypes === '') {\n      return []\n    }\n\n    if (!this._scopeTypes) {\n      this._scopeTypes = JSON.parse(this.supportedScopeTypes)\n    }\n\n    return this._scopeTypes\n  }\n\n  // Mark: - Setup\n\n  connectedCallback(): void {\n    this.provider = ServerDefinedProviderFactory.create(this)\n  }\n}\n","import {attr, controller, target} from '@github/catalyst'\nimport {HelpItem} from './items/help-item'\nimport type {Query} from './query'\n/**\n * <command-palette-help> elements represent a help item's content. When added inside the help provider,\n * they will be displayed in the help mode.\n *\n * Help items can be configured to appear when their scopeType arrays match a certain scope.\n *\n * @example\n * <command-palette-provider data-type=\"help\" data-mode=\"*\">\n *   <command-palette-help data-prefix=\"#\" data-scope-types=\"[\\\"owner\\\",\\\"repository\\\"]\">\n *     <span data-target=\"command-palette-help.titleElement\">Search for issues</span>\n *     <span data-target=\"command-palette-help.hintElement\"><code>#</code></span>\n *   </command-palette-help>\n * </command-palette-provider>\n */\n\n@controller\nexport class CommandPaletteHelpElement extends HTMLElement {\n  @attr group: string\n  @attr override prefix: string\n  @attr scopeTypes: string\n\n  @target titleElement: HTMLElement\n  @target hintElement: HTMLElement\n\n  connectedCallback() {\n    this.hidden = true\n  }\n\n  show(query: Query): boolean {\n    return this.isEnabledScopeType(query)\n  }\n\n  isEnabledScopeType(query: Query): boolean {\n    if (!this.scopeTypes) {\n      return true\n    }\n\n    return this.scopeTypes && JSON.parse(this.scopeTypes).includes(query.scope.type)\n  }\n\n  toItem(index: number) {\n    const args: {title: string; group: string; prefix?: string; index: number; persistentHint?: string} = {\n      group: this.group,\n      title: this.titleElement.innerHTML,\n      index,\n    }\n    if (this.prefix) {\n      args.prefix = this.prefix\n    }\n    if (this.hintElement.textContent) {\n      args.persistentHint = this.hintElement.innerHTML\n    }\n    return HelpItem.from(args)\n  }\n}\n","import type CommandPalette from './command-palette-element'\nimport {MainWindowCommandItem} from './items/main-window-command-item'\nimport type {Query} from '@github-ui/command-palette'\n\n/* Set to a CommandPalette::Icons::Octicon#id */\ntype CommandPaletteOcticonId = string\n\n/**\n * Inherit from this class to create a new main window command.\n */\nexport class MainWindowCommand {\n  static item(overrides = {}) {\n    return new MainWindowCommandItem(new this(), overrides)\n  }\n\n  title: string\n  subtitle: string\n  icon: CommandPaletteOcticonId\n  iconType = 'octicon'\n  group = 'commands'\n  priority = 0\n  dismissAfterRun = true\n  select?(commandPalette: CommandPalette): void\n\n  /**\n   * Called when the command is executed.\n   * @param _commandPalette\n   */\n  run(_commandPalette: CommandPalette) {\n    new Error('Not implemented')\n  }\n\n  /**\n   * Called before showing the command in the command palette.\n   *\n   * This can be used to check if this command can be run against the subject.\n   * For example, if you're writing a command that presses a button, you can\n   * check if that button is present on the page. If it isn't, return false to\n   * hide this command. You can also check against the query, which is provided.\n   *\n   * @returns true if command applies to the current page\n   */\n  isApplicable(_query: Query) {\n    return true\n  }\n}\n\nexport class MainWindowGlobalCommand extends MainWindowCommand {\n  override group = 'global_commands'\n}\n","/**\n * This file contains main window commands for issues.\n *\n * To add another command, define a new subclass and append the\n * class to the default export at the bottom of the file.\n */\nimport {MainWindowCommand} from '../main-window-command'\n\nclass DeleteDiscussion extends MainWindowCommand {\n  override title = 'Delete discussion…'\n  override icon = 'trash-color-fg-muted'\n\n  get deleteButton() {\n    return document.querySelector<HTMLButtonElement>('button#dialog-show-delete-discussion')\n  }\n\n  get dialogElement() {\n    return document.querySelector<HTMLElement>('#delete-discussion')\n  }\n\n  override isApplicable() {\n    return this.deleteButton != null\n  }\n\n  override run() {\n    const deleteDiscussionsButton = this.deleteButton\n    if (deleteDiscussionsButton) {\n      deleteDiscussionsButton.click()\n      setTimeout(() => {\n        this.dialogElement?.querySelector<HTMLButtonElement>('button[type=\"submit\"]')?.focus()\n      }, 0)\n      return\n    }\n  }\n}\n\nclass EditDiscussion extends MainWindowCommand {\n  override title = 'Edit discussion body'\n  override icon = 'pencil-color-fg-muted'\n\n  get editButton() {\n    return document.querySelector<HTMLDetailsElement>('.js-discussions-comment-edit-button')\n  }\n\n  override isApplicable() {\n    return this.editButton != null\n  }\n\n  override run() {\n    this.editButton?.click()\n  }\n}\n\nclass TransferDiscussion extends MainWindowCommand {\n  override title = 'Transfer discussion…'\n  override icon = 'arrow-right-color-fg-muted'\n\n  get transferButton() {\n    return document.querySelector<HTMLButtonElement>('button#dialog-show-discussion-transfer-conversation')\n  }\n\n  get dialogElement() {\n    return document.querySelector<HTMLElement>('#discussion-transfer-conversation')\n  }\n\n  override isApplicable() {\n    return this.transferButton != null\n  }\n\n  override run() {\n    const transferDiscussionButton = this.transferButton\n    const transferDiscussionDialog = this.dialogElement\n\n    if (transferDiscussionButton && transferDiscussionDialog) {\n      transferDiscussionButton.click()\n      const focusMenu = () => {\n        setTimeout(() => {\n          transferDiscussionDialog?.querySelector<HTMLElement>('[data-menu-button]')?.focus()\n        }, 0)\n      }\n\n      transferDiscussionDialog.querySelector<HTMLElement>('include-fragment')?.addEventListener('load', focusMenu)\n      focusMenu()\n    }\n  }\n}\n\nexport default [DeleteDiscussion, TransferDiscussion, EditDiscussion]\n","import {MainWindowCommand, MainWindowGlobalCommand} from '../../main-window-command'\nimport type CommandPalette from '../../command-palette-element'\nimport type {MainWindowCommandItem} from '../../items/main-window-command-item'\nimport {StaticItemsPage} from '@github-ui/command-palette'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\n\n/**\n * Allow users to configure their tab size rendering preference.\n * Valid values are 2, 3, 4, 6, 8, 10, and 12\n *\n */\nclass TabSizeTwo extends MainWindowCommand {\n  /** overrides MainWindowCommand */\n  override title = '2 spaces'\n  override iconType = 'none'\n\n  /** used when persisting the new setting and when updating the DOM.\n   * override this for each value.*/\n  tabSize = '2'\n  override group = ''\n\n  override async run(commandPalette: CommandPalette) {\n    this.updateTabSize()\n    this.saveSettings(commandPalette)\n  }\n\n  /**\n   * Updates all the `[data-tab-size]` attributes we can find in the DOM to reflect\n   * tabSize\n   */\n  updateTabSize() {\n    const targets = document.querySelectorAll('[data-tab-size]')\n    for (const target of targets) {\n      target.setAttribute('data-tab-size', this.tabSize)\n    }\n  }\n\n  async saveSettings(commandPalette: CommandPalette) {\n    const formData = new FormData()\n\n    formData.set('tab_size_rendering_preference', this.tabSize)\n\n    // eslint-disable-next-line i18n-text/no-en\n    const errorMessage = 'Failed to save tab size preference'\n\n    try {\n      const response = await verifiedFetch('/settings/appearance/tab_size', {\n        method: 'PUT',\n        body: formData,\n      })\n      if (response.ok) {\n        // eslint-disable-next-line i18n-text/no-en\n        commandPalette.displayFlash('success', 'Tab size rendering updated')\n      } else {\n        commandPalette.displayFlash('error', errorMessage)\n      }\n    } catch {\n      commandPalette.displayFlash('error', errorMessage)\n    }\n  }\n}\nclass TabSizeThree extends TabSizeTwo {\n  override title = '3 spaces'\n  override tabSize = '3'\n}\nclass TabSizeFour extends TabSizeTwo {\n  override title = '4 spaces'\n  override tabSize = '4'\n}\nclass TabSizeSix extends TabSizeTwo {\n  override title = '6 spaces'\n  override tabSize = '6'\n}\nclass TabSizeEight extends TabSizeTwo {\n  override title = '8 spaces'\n  override tabSize = '8'\n}\nclass TabSizeTen extends TabSizeTwo {\n  override title = '10 spaces'\n  override tabSize = '10'\n}\nclass TabSizeTwelve extends TabSizeTwo {\n  override title = '12 spaces'\n  override tabSize = '12'\n}\n\nexport class SwitchTabSize extends MainWindowGlobalCommand {\n  override title = 'Change tab size rendering'\n  override icon = 'gear-color-fg-muted'\n  override priority = 10\n  override dismissAfterRun = false\n\n  override run(commandPalette: CommandPalette) {\n    commandPalette.pushPage(new StaticItemsPage(this.title, 'tab-sizes', this.pageItems), true)\n  }\n\n  get pageItems(): MainWindowCommandItem[] {\n    return [TabSizeTwo, TabSizeThree, TabSizeFour, TabSizeSix, TabSizeEight, TabSizeTen, TabSizeTwelve].map(command =>\n      command.item(),\n    )\n  }\n\n  override select(commandPalette: CommandPalette) {\n    this.run(commandPalette)\n  }\n}\n","/**\n * This file contains main window commands that should appear everywhere. This\n * is useful when a command applies in many contexts. You can control when the\n * command is available to run by implementing `isApplicable`.\n *\n * To add another command, define a new subclass and append the\n * class to the default export at the bottom of the file.\n */\nimport {type ColorModeWithAuto, getClientTheme, setClientMode, setClientTheme} from '../../color-modes'\nimport {type CommandPalette, StaticItemsPage} from '@github-ui/command-palette'\nimport {MainWindowCommand, MainWindowGlobalCommand} from '../main-window-command'\nimport type {MainWindowCommandItem} from '../items/main-window-command-item'\nimport {SwitchTabSize} from './everywhere/switch-tab-size'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\n\nclass OpenInDotDev extends MainWindowCommand {\n  override title = 'Open in github.dev editor'\n  override icon = 'codespaces-color-fg-muted'\n  override priority = 10\n\n  override isApplicable() {\n    return this.fetchLink() instanceof HTMLAnchorElement\n  }\n\n  fetchLink() {\n    return document.querySelector<HTMLAnchorElement>('.js-github-dev-shortcut')\n  }\n\n  override run() {\n    this.fetchLink()?.click()\n  }\n}\n\nexport class SwitchTheme extends MainWindowGlobalCommand {\n  override title = 'Switch theme'\n  override icon = 'paintbrush-color-fg-muted'\n  override priority = 9\n  override dismissAfterRun = false\n\n  override run(commandPalette: CommandPalette) {\n    commandPalette.pushPage(new StaticItemsPage(this.title, 'switch-theme-page-1', this.pageItems), true)\n  }\n\n  get pageItems(): MainWindowCommandItem[] {\n    return [SwitchToDark, SwitchToLight, SwitchToDarkDimmed, SwitchToDarkHighContrast, SwitchToAuto].map(command =>\n      command.item(),\n    )\n  }\n\n  override select(commandPalette: CommandPalette) {\n    this.run(commandPalette)\n  }\n}\n\nclass SwitchToDark extends MainWindowCommand {\n  override title = 'Default dark'\n  override icon = 'moon-color-fg-muted'\n  mode: ColorModeWithAuto = 'dark'\n  theme = 'dark'\n  override group = ''\n\n  applyTheme() {\n    this.loadStyles(this.theme)\n\n    if (this.mode !== 'auto') {\n      setClientTheme(this.theme, this.mode)\n    }\n    setClientMode(this.mode)\n  }\n\n  override async run() {\n    // Set color theme in browser immediately to provide instantaneous response.\n    this.applyTheme()\n    this.saveSettings(this.mode, this.lightTheme, this.darkTheme)\n  }\n\n  /**\n   * Save color mode settings to server. If successful, the server settings are\n   * applied to the browser to ensure what the user sees is matches the server.\n   */\n  async saveSettings(colorMode: ColorModeWithAuto = this.mode, lightTheme?: string, darkTheme?: string) {\n    const formData = new FormData()\n\n    formData.set('color_mode', colorMode)\n    if (lightTheme) formData.set('light_theme', lightTheme)\n    if (darkTheme) formData.set('dark_theme', darkTheme)\n\n    const response = await verifiedFetch('/settings/appearance/color_mode', {\n      method: 'PUT',\n      body: formData,\n    })\n\n    const settings = (await response.json()) as {\n      color_mode: ColorModeWithAuto\n      light_theme: string\n      dark_theme: string\n    }\n\n    // Load theme CSS\n    this.loadStyles(settings.light_theme)\n    this.loadStyles(settings.dark_theme)\n\n    // Set theme CSS classes\n    setClientTheme(settings.light_theme, 'light')\n    setClientTheme(settings.dark_theme, 'dark')\n\n    // Set color mode classes\n    setClientMode(settings.color_mode)\n  }\n\n  loadStyles(theme: string) {\n    const linkTag = document.querySelector<HTMLLinkElement>(`link[data-color-theme='${theme}']`)\n\n    if (linkTag && !linkTag.hasAttribute('href') && linkTag.hasAttribute('data-href')) {\n      linkTag.setAttribute('href', linkTag.getAttribute('data-href')!)\n    }\n  }\n\n  get darkTheme(): string | undefined {\n    if (this.mode === 'dark') {\n      return this.theme\n    } else {\n      return getClientTheme('dark')!\n    }\n  }\n\n  get lightTheme(): string | undefined {\n    if (this.mode === 'light') {\n      return this.theme\n    } else {\n      return getClientTheme('light')!\n    }\n  }\n}\n\nclass SwitchToDarkHighContrast extends SwitchToDark {\n  override title = 'Switch theme to dark high contrast'\n  override theme = 'dark_high_contrast'\n}\n\nclass SwitchToDarkDimmed extends SwitchToDark {\n  override title = 'Dark dimmed'\n  override theme = 'dark_dimmed'\n}\n\nclass SwitchToLight extends SwitchToDark {\n  override title = 'Default light'\n  override icon = 'sun-color-fg-muted'\n  override mode: ColorModeWithAuto = 'light'\n  override theme = 'light'\n}\n\nclass SwitchToAuto extends SwitchToDark {\n  override title = 'Sync with system settings'\n  override icon = 'sun-color-fg-muted'\n  override mode: ColorModeWithAuto = 'auto'\n\n  override get darkTheme() {\n    return undefined\n  }\n\n  override get lightTheme() {\n    return undefined\n  }\n}\n\nclass UpdateSubscription extends MainWindowCommand {\n  constructor() {\n    super()\n    const isSubscribeCommand = this.isSubscribe()\n    this.title = `${isSubscribeCommand ? 'Subscribe' : 'Unsubscribe'}`\n    this.icon = `${isSubscribeCommand ? 'bell' : 'bell-slash'}-color-fg-muted`\n  }\n\n  override isApplicable() {\n    return this.fetchButton() instanceof HTMLButtonElement && this.fetchButton()?.disabled === false\n  }\n\n  isSubscribe() {\n    return this.fetchButton()?.textContent?.trim() === 'Subscribe'\n  }\n\n  fetchButton() {\n    return document.querySelector<HTMLButtonElement>('[data-thread-subscribe-button]')\n  }\n\n  override run() {\n    this.fetchButton()?.click()\n  }\n}\n\nexport default [OpenInDotDev, SwitchTabSize, SwitchTheme, UpdateSubscription]\n","/**\n * This file contains main window commands for issues.\n *\n * To add another command, define a new subclass and append the\n * class to the default export at the bottom of the file.\n */\nimport {MainWindowCommand} from '../main-window-command'\nimport type {ModalDialogElement} from '@primer/view-components/app/components/primer/alpha/modal_dialog'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\n\nfunction moveCursorToEnd(input: HTMLTextAreaElement | HTMLInputElement) {\n  input.focus()\n  input.selectionStart = input.selectionEnd = input.value.length\n}\n\nexport class EditIssueBody extends MainWindowCommand {\n  override title = 'Edit issue body'\n  override icon = 'pencil-color-fg-muted'\n\n  issueBody() {\n    return document.querySelector('.js-command-palette-issue-body')\n  }\n\n  isIssue() {\n    return !!this.issueBody()\n  }\n\n  override isApplicable() {\n    return this.isIssue()\n  }\n\n  override run() {\n    // Build an edit button (the normal one isn't always loaded)\n    const editButton = document.createElement('button')\n    editButton.hidden = true\n    editButton.classList.add('js-comment-edit-button')\n\n    const issueBody = document.querySelector('div.js-comment')\n    issueBody?.appendChild(editButton)\n\n    editButton.click()\n    editButton.remove()\n\n    setTimeout(() => {\n      const textArea = issueBody?.parentElement?.querySelector<HTMLTextAreaElement>('textarea.js-comment-field')\n\n      if (textArea) {\n        moveCursorToEnd(textArea)\n      }\n    }, 0)\n  }\n}\n\nexport class EditIssueTitle extends MainWindowCommand {\n  override title = 'Edit issue title'\n  override icon = 'pencil-color-fg-muted'\n\n  issueBody() {\n    return document.querySelector('.js-command-palette-issue-body')\n  }\n\n  isIssue() {\n    return !!this.issueBody()\n  }\n\n  override isApplicable() {\n    return this.fetchButton() instanceof HTMLButtonElement && this.isIssue()\n  }\n\n  fetchButton() {\n    return document.querySelector<HTMLButtonElement>('.js-title-edit-button')\n  }\n\n  override run() {\n    this.fetchButton()?.click()\n\n    // Even though the input has an autofocus, it isn't focused when it is unhidden.\n    setTimeout(() => {\n      const input = document.querySelector<HTMLInputElement>('input#issue_title[autofocus]')\n\n      if (input) {\n        moveCursorToEnd(input)\n      }\n    }, 0)\n  }\n}\n\nexport class AddTasklist extends MainWindowCommand {\n  override title = 'Add tasklist to issue'\n  override icon = 'plus-circle-color-fg-muted'\n\n  issueBody() {\n    return document.querySelector('.js-command-palette-issue-body')\n  }\n\n  isIssue() {\n    return !!this.issueBody()\n  }\n\n  override isApplicable() {\n    return isFeatureEnabled('TASKLIST_BLOCK') && this.isIssue()\n  }\n\n  override run() {\n    // Build an edit button (the normal one isn't always loaded)\n    const editButton = document.createElement('button')\n    editButton.hidden = true\n    editButton.classList.add('js-comment-edit-button')\n\n    const issueBody = document.querySelector('div.js-comment')\n    issueBody?.appendChild(editButton)\n\n    editButton.click()\n    editButton.remove()\n\n    setTimeout(() => {\n      const textArea = issueBody?.parentElement?.querySelector<HTMLTextAreaElement>('textarea.js-comment-field')\n\n      if (textArea) {\n        let tasklistMarkup = document.createTextNode(\n          '```[tasklist]\\n- [ ] Create a draft issue or type # to select an issue\\n```',\n        )\n        if (textArea.value !== '') {\n          tasklistMarkup = document.createTextNode(\n            '\\n\\n```[tasklist]\\n- [ ] Create a draft issue or type # to select an issue\\n```',\n          )\n        }\n        moveCursorToEnd(textArea)\n        textArea?.appendChild(tasklistMarkup)\n      }\n    }, 0)\n  }\n}\n\nclass TransferIssue extends MainWindowCommand {\n  override title = 'Transfer issue…'\n  override icon = 'arrow-right-color-fg-muted'\n\n  override isApplicable() {\n    return this.fetchDetails() instanceof HTMLDetailsElement\n  }\n\n  fetchDetails() {\n    return document.querySelector<HTMLDetailsElement>('details.js-transfer-issue')\n  }\n\n  override run() {\n    const transferIssueDetails = this.fetchDetails()\n\n    if (transferIssueDetails) {\n      const focusMenu = () => {\n        setTimeout(() => {\n          transferIssueDetails.querySelector<HTMLElement>('[data-menu-button]')?.focus()\n        }, 0)\n      }\n\n      transferIssueDetails.querySelector<HTMLElement>('include-fragment')?.addEventListener('load', focusMenu)\n\n      transferIssueDetails.open = true\n      focusMenu()\n    }\n  }\n}\n\nclass LockIssue extends MainWindowCommand {\n  constructor() {\n    super()\n    const isLockCommand = this.isLock()\n    this.title = `${isLockCommand ? 'Lock' : 'Unlock'} conversation`\n    this.icon = `${isLockCommand ? 'lock' : 'key'}-color-fg-muted`\n  }\n\n  override isApplicable() {\n    return this.fetchDetails() instanceof HTMLDetailsElement\n  }\n\n  isLock() {\n    return document.querySelector('summary.lock-toggle-link')?.textContent?.trim() === 'Lock conversation'\n  }\n\n  fetchDetails() {\n    return document.querySelector<HTMLDetailsElement>('details.js-lock-issue')\n  }\n\n  override run() {\n    const lockIssueDetails = this.fetchDetails()\n    if (lockIssueDetails) {\n      lockIssueDetails.open = true\n\n      setTimeout(() => {\n        document.querySelector<HTMLSelectElement>('#unlock-reason')?.focus()\n      }, 0)\n    }\n  }\n}\n\nclass DeleteIssue extends MainWindowCommand {\n  override title = 'Delete issue…'\n  override icon = 'trash-color-fg-muted'\n\n  override isApplicable() {\n    return this.fetchDetails() instanceof HTMLDetailsElement\n  }\n\n  fetchDetails() {\n    return document.querySelector<HTMLDetailsElement>('details.js-delete-issue')\n  }\n\n  override run() {\n    const deleteIssueDetails = this.fetchDetails()\n    if (deleteIssueDetails) {\n      deleteIssueDetails.open = true\n\n      setTimeout(() => {\n        deleteIssueDetails.querySelector<HTMLButtonElement>('button[type=\"submit\"]')?.focus()\n      }, 0)\n    }\n  }\n}\n\nexport class ConvertToDiscussion extends MainWindowCommand {\n  override title = 'Convert issue to discussion…'\n  override icon = 'comment-discussion-color-fg-muted'\n\n  override isApplicable() {\n    return this.fetchConvertButton() instanceof HTMLButtonElement\n  }\n\n  fetchConvertButton() {\n    return document.querySelector<HTMLButtonElement>('button#dialog-show-convert-to-discussion')\n  }\n\n  fetchDialog() {\n    return document.querySelector<ModalDialogElement | HTMLDialogElement>('#convert-to-discussion')\n  }\n\n  override run() {\n    const convertToDiscussionButton = this.fetchConvertButton()\n    const convertToDiscussionDialog = this.fetchDialog()\n    if (convertToDiscussionButton && convertToDiscussionDialog) {\n      const focusMenu = () => {\n        setTimeout(() => {\n          convertToDiscussionDialog?.querySelector<HTMLElement>('#convert-to-discussion-category')?.focus()\n        }, 0)\n      }\n\n      convertToDiscussionDialog.querySelector<HTMLElement>('include-fragment')?.addEventListener('load', focusMenu)\n      if (convertToDiscussionDialog instanceof HTMLDialogElement) {\n        convertToDiscussionDialog.showModal()\n      } else {\n        convertToDiscussionDialog.open = true\n      }\n      focusMenu()\n    }\n  }\n}\n\nexport default [EditIssueTitle, EditIssueBody, AddTasklist, LockIssue, TransferIssue, DeleteIssue, ConvertToDiscussion]\n","/**\n * This file contains codespace realted main window commands.\n *\n * To add another command, define a new subclass\n * These commands can be exported to other main-wiondow-commands files to be executed on different pages\n */\nimport {MainWindowCommand} from '../main-window-command'\n\ntype Elements = {\n  codespacesForm: HTMLFormElement | null\n  codespacesTab: HTMLButtonElement | null\n  codeModal: HTMLDetailsElement | null\n  newCodespacesButton: HTMLElement | null\n}\n\nexport class OpenCodespace extends MainWindowCommand {\n  override title = 'Open in new codespace'\n  override icon = 'codespaces-color-fg-muted'\n  override priority = 11\n\n  override isApplicable() {\n    const elements = this.fetchElements()\n    return !!(elements.codeModal && elements.codespacesForm && elements.newCodespacesButton && elements.codespacesTab)\n  }\n\n  override run() {\n    const {codeModal, codespacesTab, newCodespacesButton} = this.fetchElements()\n    if (!(codeModal && codespacesTab && newCodespacesButton)) return\n\n    codeModal.open = true\n    codespacesTab.click()\n\n    if (newCodespacesButton instanceof HTMLButtonElement) {\n      newCodespacesButton.click()\n    }\n  }\n\n  fetchElements(): Elements {\n    const codespacesForm = document.querySelector<HTMLFormElement>('.js-create-codespaces-form-command')\n    const codeModal = codespacesForm?.closest<HTMLDetailsElement>('details') || null\n    const codespacesTab = codeModal?.querySelector<HTMLButtonElement>('[data-tab=\"cloud\"]') || null\n    const newCodespacesButton =\n      codespacesForm?.querySelector<HTMLElement>('summary[role=\"button\"], button[type=\"submit\"]') || null\n\n    return {\n      codespacesForm,\n      codeModal,\n      codespacesTab,\n      newCodespacesButton,\n    }\n  }\n}\n","/**\n * This file contains main window commands for pull requests.\n *\n * To add another command, define a new subclass and append the\n * class to the default export at the bottom of the file.\n */\nimport {EditIssueBody, EditIssueTitle} from './issue'\nimport {ClipboardCopyElement} from '@github/clipboard-copy-element'\nimport type CommandPalette from '../command-palette-element'\nimport {MainWindowCommand} from '../main-window-command'\nimport {OpenCodespace} from './codespaces'\nimport {copyText} from '../copy'\n\nclass EditPullRequestBody extends EditIssueBody {\n  override title = 'Edit pull request body'\n\n  pullRequestBody() {\n    return document.querySelector('.js-command-palette-pull-body')\n  }\n\n  isPullRequest() {\n    return !!this.pullRequestBody()\n  }\n\n  override isApplicable() {\n    return this.isPullRequest()\n  }\n}\n\nclass EditPullRequestTitle extends EditIssueTitle {\n  override title = 'Edit pull request title'\n\n  pullRequestBody() {\n    return document.querySelector('.js-command-palette-pull-body')\n  }\n\n  isPullRequest() {\n    return !!this.pullRequestBody()\n  }\n\n  override isApplicable() {\n    return this.fetchButton() instanceof HTMLButtonElement && this.isPullRequest()\n  }\n}\n\nclass UpdateBranch extends MainWindowCommand {\n  override title = 'Update current branch'\n  override icon = 'sync-color-fg-muted'\n\n  override isApplicable() {\n    return this.fetchButton() instanceof HTMLButtonElement\n  }\n\n  fetchButton() {\n    return document.querySelector<HTMLButtonElement>('.js-update-branch-form button')\n  }\n\n  override run() {\n    const button = this.fetchButton()\n\n    if (button) {\n      button.scrollIntoView({behavior: 'smooth', block: 'center'})\n      button.click()\n    }\n  }\n}\n\nclass ConvertToDraft extends MainWindowCommand {\n  override title = 'Convert to draft'\n  override icon = 'git-pull-request-draft-color-fg-muted'\n\n  override isApplicable() {\n    return this.fetchButton() instanceof HTMLButtonElement\n  }\n\n  fetchButton() {\n    return document.querySelector<HTMLButtonElement>('.js-convert-to-draft')\n  }\n\n  override run() {\n    const details = this.fetchButton()?.closest<HTMLDetailsElement>('details')\n\n    if (details) {\n      details.open = true\n\n      setTimeout(() => {\n        details.querySelector<HTMLButtonElement>('.js-convert-to-draft')?.focus()\n      }, 0)\n    }\n  }\n}\n\nclass CopyBranchName extends MainWindowCommand {\n  override title = 'Copy current branch name'\n  override icon = 'copy-color-fg-muted'\n\n  override isApplicable() {\n    return this.fetchClipboardCopy() instanceof ClipboardCopyElement\n  }\n\n  fetchClipboardCopy() {\n    return document.querySelector('.js-copy-branch')\n  }\n\n  override async run(commandPalette: CommandPalette) {\n    const cloneContainer = this.fetchClipboardCopy()\n    if (cloneContainer instanceof ClipboardCopyElement) {\n      const url = cloneContainer.value\n      try {\n        await copyText(url)\n\n        // eslint-disable-next-line i18n-text/no-en\n        commandPalette.displayFlash('success', 'Branch name copied to clipboard!')\n      } catch {\n        // eslint-disable-next-line i18n-text/no-en\n        commandPalette.displayFlash('error', 'Unable to copy branch name to clipboard!')\n      }\n    }\n  }\n}\n\nexport default [CopyBranchName, EditPullRequestTitle, EditPullRequestBody, UpdateBranch, ConvertToDraft, OpenCodespace]\n","/**\n * This file contains main window commands for repositories.\n *\n * To add another command, define a new subclass and append the\n * class to the default export at the bottom of the file.\n */\nimport {ClipboardCopyElement} from '@github/clipboard-copy-element'\nimport type CommandPalette from '../command-palette-element'\nimport {MainWindowCommand} from '../main-window-command'\nimport {OpenCodespace} from './codespaces'\nimport {copyText} from '../copy'\n\nclass CopyPermalink extends MainWindowCommand {\n  override title = 'Copy file permalink'\n  override icon = 'copy-color-fg-muted'\n\n  override isApplicable() {\n    return this.fetchPermalinkContainer() instanceof HTMLAnchorElement\n  }\n\n  fetchPermalinkContainer() {\n    return document.querySelector<HTMLAnchorElement>('.js-permalink-shortcut')\n  }\n\n  override async run(commandPalette: CommandPalette) {\n    const permalinkContainer = this.fetchPermalinkContainer()\n    if (permalinkContainer) {\n      const url = `${permalinkContainer.href}${window.location.hash}`\n      try {\n        await copyText(url)\n\n        // eslint-disable-next-line i18n-text/no-en\n        commandPalette.displayFlash('success', 'Copied permalink!')\n      } catch {\n        // eslint-disable-next-line i18n-text/no-en\n        commandPalette.displayFlash('error', 'Failed to copy permalink!')\n      }\n    }\n  }\n}\n\nclass CloneCopyHttps extends MainWindowCommand {\n  override title = 'Clone repository: Copy HTTPS'\n  override icon = 'copy-color-fg-muted'\n  override priority = 4\n\n  override isApplicable() {\n    return this.backendCommandsDisabled() && this.fetchClipboardCopy() instanceof ClipboardCopyElement\n  }\n\n  fetchClipboardCopy() {\n    return document.querySelector('.js-clone-url-http')\n  }\n\n  backendCommandsDisabled() {\n    return !!window.commandPalette && !(window.commandPalette as CommandPalette).hasAttribute('commands-path')\n  }\n\n  override async run(commandPalette: CommandPalette) {\n    const cloneContainer = this.fetchClipboardCopy()\n    if (cloneContainer instanceof ClipboardCopyElement) {\n      const url = cloneContainer.value\n      try {\n        await copyText(url)\n\n        // eslint-disable-next-line i18n-text/no-en\n        commandPalette.displayFlash('success', 'Clone URL copied!')\n      } catch {\n        // eslint-disable-next-line i18n-text/no-en\n        commandPalette.displayFlash('error', `Clone URL couldn't be copied`)\n      }\n    }\n  }\n}\n\nclass CloneCopySsh extends MainWindowCommand {\n  override title = 'Clone repository: Copy SSH'\n  override icon = 'copy-color-fg-muted'\n  override priority = 3\n\n  override isApplicable() {\n    return this.backendCommandsDisabled() && this.fetchClipboardCopy() instanceof ClipboardCopyElement\n  }\n\n  fetchClipboardCopy() {\n    return document.querySelector('.js-clone-url-ssh')\n  }\n\n  backendCommandsDisabled() {\n    return !!window.commandPalette && !(window.commandPalette as CommandPalette).hasAttribute('commands-path')\n  }\n\n  override async run(commandPalette: CommandPalette) {\n    const cloneContainer = this.fetchClipboardCopy()\n    if (cloneContainer instanceof ClipboardCopyElement) {\n      const url = cloneContainer.value\n      try {\n        await copyText(url)\n\n        // eslint-disable-next-line i18n-text/no-en\n        commandPalette.displayFlash('success', 'Clone URL copied!')\n      } catch {\n        // eslint-disable-next-line i18n-text/no-en\n        commandPalette.displayFlash('error', `Clone URL couldn't be copied`)\n      }\n    }\n  }\n}\n\nclass CloneCopyCli extends MainWindowCommand {\n  override title = 'Clone repository: Copy GitHub CLI'\n  override icon = 'copy-color-fg-muted'\n  override priority = 2\n\n  override isApplicable() {\n    return this.backendCommandsDisabled() && this.fetchClipboardCopy() instanceof ClipboardCopyElement\n  }\n\n  fetchClipboardCopy() {\n    return document.querySelector('.js-clone-url-gh-cli')\n  }\n\n  backendCommandsDisabled() {\n    return !!window.commandPalette && !(window.commandPalette as CommandPalette).hasAttribute('commands-path')\n  }\n\n  override async run(commandPalette: CommandPalette) {\n    const cloneContainer = this.fetchClipboardCopy()\n    if (cloneContainer instanceof ClipboardCopyElement) {\n      const url = cloneContainer.value\n      try {\n        await copyText(url)\n\n        // eslint-disable-next-line i18n-text/no-en\n        commandPalette.displayFlash('success', 'Clone URL copied!')\n      } catch {\n        // eslint-disable-next-line i18n-text/no-en\n        commandPalette.displayFlash('error', `Clone URL couldn't be copied`)\n      }\n    }\n  }\n}\n\nexport default [CloneCopyHttps, CloneCopySsh, CloneCopyCli, CopyPermalink, OpenCodespace]\n","import DiscussionCommands from '../main-window-commands/discussion'\nimport EverywhereCommands from '../main-window-commands/everywhere'\nimport IssueCommands from '../main-window-commands/issue'\nimport type {MainWindowCommandItem} from '../items/main-window-command-item'\nimport {ProviderBase} from '../provider'\nimport PullRequestCommands from '../main-window-commands/pull-request'\nimport type {Query} from '../query'\nimport RepositoryCommands from '../main-window-commands/repository'\n\n/**\n * Provides commands that run in the main window. Unlike normal commands, these have full access to the user's session.\n * They should only be used for actions that can't be accomplished using a normal command—like pressing a button in the UI.\n */\nclass MainWindowCommandsProvider extends ProviderBase {\n  enabledFor(query: Query): boolean {\n    const modelessCommandScopeTypes = ['discussion', 'issue', 'pull_request']\n\n    if (query.mode === '>') {\n      return true\n    } else if (modelessCommandScopeTypes.includes(query.scope.type)) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  get hasCommands(): boolean {\n    return true\n  }\n\n  itemsByType: {[id: string]: MainWindowCommandItem[]} = {}\n  items: MainWindowCommandItem[] = []\n  needsFetch = true\n\n  async fetch(query: Query) {\n    this.items = [\n      ...IssueCommands.map(command => command.item()),\n      ...PullRequestCommands.map(command => command.item()),\n      ...RepositoryCommands.map(command => command.item()),\n      ...DiscussionCommands.map(command => command.item()),\n      ...EverywhereCommands.map(command => command.item()),\n    ].filter(item => item.isApplicable(query))\n\n    const filteredItems = this.fuzzyFilter<MainWindowCommandItem>(this.items, query)\n    return {results: filteredItems}\n  }\n\n  get debounce() {\n    return 0\n  }\n\n  clearCache() {\n    // no-op\n  }\n}\n\nif (window.commandPalette) {\n  window.commandPalette.registerProvider('main-window-commands-provider', new MainWindowCommandsProvider())\n}\n\nwindow.addEventListener('command-palette-ready', () => {\n  window.commandPalette?.registerProvider('main-window-commands-provider', new MainWindowCommandsProvider())\n})\n","import type {CommandPaletteScopeElement, Scope} from './command-palette-scope-element'\nimport {controller, target} from '@github/catalyst'\nimport {isPlatformMetaKey} from './command-palette-element'\n\n/**\n * <command-palette-input> manages top bar of the command palette, including the\n * search scope tokens, text field, typeahead, and clear button.\n *\n * == Attributes\n * - value: Sets the text field value\n * - placeholder: Sets the placeholder for the text field\n * - typeahead: Sets the typeahead value. If typeahead value starts with the text\n *              fields input (case insensitive match), it is displayed as an autocomplete.\n *              Otherwise, it is displayed after the text fields input, preceded by an en dash.\n * - scope: Sets the text in the scope UI element.\n *\n * == Events\n * - command-palette-input: Fires when the user enters text\n * - command-palette-descope: Fires when the user hits [Backspace] on an empty text field\n * - command-palette-cleared: Fires when the user clicks the clear button\n */\n\n@controller\nexport class CommandPaletteInputElement extends HTMLElement {\n  @target typeaheadPlaceholder: HTMLElement\n  @target typeaheadText: HTMLElement\n  @target mirror: HTMLElement\n  @target clearButton: HTMLElement\n\n  static tagName = 'command-palette-input'\n\n  static get observedAttributes() {\n    return ['input-value', 'typeahead', 'scope']\n  }\n\n  scopeElement: CommandPaletteScopeElement\n  defaultScope: Scope\n  input: HTMLInputElement\n  overlayInput: HTMLInputElement\n  searchIcon: HTMLElement\n  spinner: HTMLElement\n  typeaheadValue: string\n  setupComplete = false\n  connected = false\n\n  setup() {\n    this.classList.add('d-flex', 'flex-items-center', 'flex-nowrap', 'py-1', 'pl-3', 'pr-2', 'border-bottom')\n\n    this.input = this.querySelector('input.js-input')!\n    this.overlayInput = this.querySelector('input.js-overlay-input')!\n    this.scopeElement = this.querySelector<CommandPaletteScopeElement>('command-palette-scope')!\n    this.searchIcon = this.querySelector('.js-search-icon')!\n    this.spinner = this.querySelector('.js-spinner')!\n\n    this.defaultScope = this.scope\n\n    if (this.hasAttribute('autofocus')) {\n      this.input.focus()\n    }\n\n    // Do we need to emit events at the start?\n    if (this.inputValue.length !== 0) {\n      this._dispatchEvent('command-palette-input')\n    }\n\n    this.setupComplete = true\n\n    const event = new CustomEvent('command-palette-input-ready', {\n      bubbles: true,\n      cancelable: true,\n    })\n\n    this.dispatchEvent(event)\n  }\n\n  connectedCallback() {\n    if (!this.setupComplete) {\n      this.setup()\n    }\n\n    this.inputValue = this.getAttribute('input-value') || ''\n    this.typeahead = this.getAttribute('typeahead') || ''\n    this.placeholder = this.getAttribute('placeholder') || ''\n\n    this.connected = true\n  }\n\n  attributeChangedCallback(attributeName: string, _oldValue: string, newValue: string) {\n    if (!this.input) return\n\n    if (attributeName === 'typeahead') {\n      this.typeahead = newValue\n    } else if (attributeName === 'input-value') {\n      this.inputValue = newValue\n      this._dispatchEvent('command-palette-input')\n    }\n  }\n\n  override focus() {\n    this.input.focus()\n  }\n\n  setRemovedTokenAndSelect(text: string) {\n    if (text) {\n      this.inputValue = text\n    }\n\n    this.focus()\n    this.input.select()\n  }\n\n  get scope() {\n    return this.scopeElement.scope\n  }\n\n  set scope(newScope: Scope) {\n    this.scopeElement.scope = newScope\n    this.clearButton.hidden = !this.hasSomethingToClear()\n  }\n\n  hasScope() {\n    return this.scopeElement.hasScope()\n  }\n\n  clearScope() {\n    return this.scopeElement.clearScope()\n  }\n\n  removeToken() {\n    return this.scopeElement.removeToken()\n  }\n\n  get placeholder() {\n    return this.input.getAttribute('placeholder') || ''\n  }\n\n  set placeholder(value: string) {\n    this.input.setAttribute('placeholder', value)\n  }\n\n  get typeaheadPlaceholderText(): string {\n    return this.typeaheadPlaceholder.textContent || ''\n  }\n\n  set typeaheadPlaceholderText(value: string) {\n    this.typeaheadPlaceholder.textContent = value\n  }\n\n  get inputValue() {\n    return this.input?.value || ''\n  }\n\n  set inputValue(value) {\n    this.input.value = value\n    this.typeahead = value\n    this.resetPlaceholder()\n    this.onInput()\n  }\n\n  get overlay() {\n    return this.overlayInput.value\n  }\n\n  set overlay(value: string) {\n    this.overlayInput.value = value\n  }\n\n  get typeahead() {\n    return this.typeaheadValue\n  }\n\n  set typeahead(value) {\n    this.typeaheadValue = this.overlay + value\n    this.mirror.textContent = this.inputValue\n\n    if (value === '') {\n      this.typeaheadText.textContent = ''\n    } else {\n      // when the typeahead is set, the placholder needs to be hidden\n      // so that the typeahead can be seen even when there's no query value\n      this.placeholder = ''\n      this.typeaheadPlaceholderText = ''\n\n      if (this.valueStartsWithTypeahead) {\n        const offset = this.inputValue.length - (this.overlay ? 1 : 0)\n        this.typeaheadText.textContent = value.substring(offset)\n      } else {\n        this.typeaheadText.textContent = ` \\u2013 ${value}`\n      }\n    }\n  }\n\n  showModePlaceholder(placeholderText = '') {\n    this.typeaheadPlaceholderText = placeholderText\n  }\n\n  get valueStartsWithTypeahead() {\n    return this.typeaheadValue.toLowerCase().startsWith(this.inputValue.toLowerCase())\n  }\n\n  get isCursorAtEnd() {\n    return this.inputValue.length === this.input.selectionStart\n  }\n\n  set loading(isLoading: boolean) {\n    this.spinner.hidden = !isLoading\n    this.searchIcon.hidden = isLoading\n  }\n\n  resetPlaceholder() {\n    const valueWithoutPlaceholder = this.inputValue.replace(this.overlay, '')\n\n    if (valueWithoutPlaceholder && this.overlay) {\n      this.typeaheadPlaceholderText = ''\n    }\n\n    this.placeholder = this.getAttribute('placeholder') || ''\n  }\n\n  /* eslint-disable-next-line custom-elements/no-method-prefixed-with-on */\n  onInput() {\n    this.resetPlaceholder()\n\n    // Don't send a input event unless setup/connection is complete.\n    // This way we can modify the input during the `this.connectedCallback()` without consequence.\n    if (!this.connected) return\n    this.clearButton.hidden = !this.hasSomethingToClear()\n    this._dispatchEvent('command-palette-input')\n  }\n\n  /* eslint-disable-next-line custom-elements/no-method-prefixed-with-on */\n  onClear(event?: Event) {\n    // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n    if (event instanceof KeyboardEvent && event.key !== 'Enter') return\n\n    this.inputValue = ''\n    this.input.focus()\n    this._dispatchEvent('command-palette-cleared')\n  }\n\n  /* eslint-disable-next-line custom-elements/no-method-prefixed-with-on */\n  onKeydown(event: KeyboardEvent) {\n    /* eslint eslint-comments/no-use: off */\n    /* eslint-disable @github-ui/ui-commands/no-manual-shortcut-logic */\n    // There was something to \"select\" and user hit proper key\n    if (this.isSelectKeystroke(event.key)) {\n      this._dispatchEvent('command-palette-select')\n\n      event.stopImmediatePropagation()\n      event.preventDefault()\n    }\n\n    if (this.hasSomethingToClear() && isPlatformMetaKey(event) && event.key === 'Backspace') {\n      this.onClear()\n      return\n    }\n\n    // User hit backspace on empty input\n    if (this.input.selectionStart === 0 && this.input.selectionEnd === 0 && event.key === 'Backspace') {\n      this._dispatchEvent('command-palette-descope')\n\n      event.stopImmediatePropagation()\n      event.preventDefault()\n      return\n    }\n    /* eslint-enable @github-ui/ui-commands/no-manual-shortcut-logic */\n  }\n\n  hasSomethingToClear() {\n    return this.scopeElement.hasScope() || this.inputValue.length > 0\n  }\n\n  isSelectKeystroke(key: string) {\n    return key === 'Tab' || (key === 'ArrowRight' && this.isCursorAtEnd)\n  }\n\n  textSelected() {\n    return this.input.selectionStart !== this.input.selectionEnd\n  }\n\n  /**\n   * Emit CustomEvent of given event name with detail containing input and typeahead value.\n   *\n   * @param eventName\n   * @returns void\n   */\n  _dispatchEvent(eventName: string) {\n    const event = new CustomEvent(eventName, {\n      cancelable: true,\n      detail: {\n        typeahead: this.typeahead,\n        value: this.inputValue,\n      },\n    })\n\n    return this.dispatchEvent(event)\n  }\n}\n","import './github/command-palette/mode-observer'\nimport './github/command-palette/command-palette-mode-element'\nimport './github/command-palette/command-palette-tip-element'\nimport './github/command-palette/command-palette-scope-element'\nimport './github/command-palette/command-palette-token-element'\nimport './github/command-palette/command-palette-item-group-element'\nimport './github/command-palette/provider-element'\nimport './github/command-palette/client-defined-provider-element'\nimport './github/command-palette/server-defined-provider-element'\nimport './github/command-palette/command-palette-help-element'\nimport './github/command-palette/items/server-defined-item'\nimport './github/command-palette/items/command-item'\nimport './github/command-palette/items/copyable-item'\nimport './github/command-palette/items/jump-to-item'\nimport './github/command-palette/items/jump-to-org-item'\nimport './github/command-palette/items/jump-to-team-item'\nimport './github/command-palette/items/search-link-item'\nimport './github/command-palette/items/access-policy-item'\nimport './github/command-palette/items/help-item'\nimport './github/command-palette/providers/server-defined-provider'\nimport './github/command-palette/providers/server-defined-provider-factory'\nimport './github/command-palette/providers/files-provider'\nimport './github/command-palette/providers/prefetched-provider'\nimport './github/command-palette/providers/search-links-provider'\nimport './github/command-palette/providers/main-window-commands-provider'\nimport './github/command-palette/providers/remote-provider'\nimport './github/command-palette/providers/help-provider'\n\nimport CommandPalette from './github/command-palette/command-palette-element'\nimport {CommandPaletteInputElement} from './github/command-palette/command-palette-input-element'\nimport {eventToHotkeyString} from '@github-ui/hotkey'\nimport {fromEvent} from '@github-ui/subscription'\nimport {getCodeEditor} from './github/code-editor'\n// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\nimport {sendStats} from '@github-ui/stats'\n\nif (!window.customElements.get(CommandPalette.tagName)) {\n  // eslint-disable-next-line custom-elements/valid-tag-name, custom-elements/tag-name-matches-class\n  window.customElements.define(CommandPalette.tagName, CommandPalette)\n}\n\n/**\n * Determines if the command palette exists. If so, attaches event listeners.\n * Otherwise, does nothing.\n *\n * Event listeners attached:\n * - 'toggle' on the command palette <details>\n * - 'keydown' on the document\n * - 'socket:message' on all '.js-socket-channel.js-updatable-content'\n */\nfunction observeCommandPalette() {\n  document.addEventListener('keydown', handleKeyDown)\n\n  observe('.js-activate-command-palette', button => {\n    button.addEventListener('click', () => {\n      document.querySelector('.js-command-palette-dialog')?.setAttribute('open', 'true')\n    })\n  })\n\n  observe('.js-command-palette-dialog', details => {\n    if (!details) return\n\n    const timerStart = window.performance.now()\n\n    const commandPalette = findCommandPalette()\n    if (!commandPalette) return\n\n    details.addEventListener('toggle', () => {\n      if ((details as HTMLDetailsElement).open) {\n        commandPalette.activate()\n      } else {\n        commandPalette.deactivate()\n      }\n    })\n\n    commandPalette.addEventListener('command-palette-activated', event => {\n      if (!(event instanceof CustomEvent)) return\n      if (event.detail.previouslyActivated) return\n\n      sendStats({\n        distributionKey: 'COMMAND_PALETTE_FIRST_OPEN',\n        distributionValue: window.performance.now() - timerStart,\n      })\n    })\n  })\n\n  // Listen to live events, so that we can clear command caches.\n  observe('.js-socket-channel.js-updatable-content', {\n    subscribe: el =>\n      fromEvent(el, 'socket:message', () => {\n        const commandPalette = findCommandPalette()\n        if (!commandPalette) return\n\n        commandPalette.clearCommands(false)\n      }),\n  })\n}\n\n/**\n * Finds the command palette on the page.\n * @returns the command palette if it's present, or null when it's not.\n *\n */\nfunction findCommandPalette(): CommandPalette | null {\n  return document.querySelector<CommandPalette>(CommandPalette.tagName)\n}\n\n/**\n * Handles site-wide keyboard shortcuts for the command palette.\n * Expects either of the following keydown events:\n * - `platform-meta` + `k`: Opens the command palette.\n * - `platform-meta` + `shift` + `k`: Opens the command palette in command mode.\n * - `platform-meta` + `alt/opt` + `k`:\n *   - When triggered from inside a markdown form, opens the command palette.\n *   - When triggered from outside a markdown form, no ops.\n *\n * @param event\n * @returns void\n */\nfunction handleKeyDown(event: KeyboardEvent): void {\n  if (!event.code) return\n\n  const commandPalette = findCommandPalette()\n  if (!commandPalette) return\n\n  const onMemexPage = triggeredInsideMemex()\n  const isPrimaryActivation = hotkeyMatchesEvent(commandPalette.platformActivationHotkey, event)\n  const isSecondaryActivation = hotkeyMatchesEvent(commandPalette.platformSecondaryActivationHotkey, event)\n  const isCommandMode = hotkeyMatchesEvent(commandPalette.platformCommandModeHotkey, event)\n\n  // Activate the command palette if:\n  // - The user is not in a textarea or Markdown code editor and pressed an activation hotkey OR\n  // - The user is not on a Memex page (Memex has its own command palette right now) OR\n  // - The user pressed the secondary activation hotkey (which works everywhere) OR\n  const validPrimaryActivation =\n    !shouldIgnoreActivation(event) && !onMemexPage && (isPrimaryActivation || isCommandMode)\n\n  const validSecondaryActivation = !onMemexPage && (isSecondaryActivation || isCommandMode)\n\n  const validMemexActivation =\n    commandPalette.hasAttribute('memex-hotkey-enabled') &&\n    onMemexPage &&\n    (isPrimaryActivation || isSecondaryActivation || isCommandMode)\n\n  if (validPrimaryActivation || validSecondaryActivation || validMemexActivation) {\n    toggleCommandPalette(isCommandMode)\n    event.preventDefault()\n    event.stopPropagation()\n  }\n}\n\n/**\n * Compares a known hotkey to a KeyboardEvent\n * @param hotkey\n * @param event\n * @returns boolean - whether any parts of the known hotkey string match the KeyboardEvent's hotkey string\n */\nfunction hotkeyMatchesEvent(hotkey: string, event: KeyboardEvent): boolean {\n  const hotkeyString: string = eventToHotkeyString(event)\n\n  // There are cases where a browser can fire a keydown event that looks like\n  // a control event but has ctrlKey set to false. This causes hotkeyString to\n  // be an empty string. If both values are empty we'll toggle improperly.\n  if (!hotkeyString || !hotkey) return false\n\n  // multiple hotkeys can be declared with a comma separating them\n  // consider it a match if any of the segments matches the event hotkey string.\n  return hotkey.split(',').some(h => hotkeyString === h)\n}\n\n/**\n * Returns true when we should ignore activation because it is being used by a markdown form.\n * TODO: Update this to only apply to non-default (cmd+k) hotkeys.\n */\nfunction shouldIgnoreActivation(event: KeyboardEvent) {\n  return triggeredInsideAPreviewableCommentForm(event) || triggeredInsideAMarkdownCodeEditor(event)\n}\n\n/**\n * Checks if an event occurred within a previewable-comment-form.\n *\n * @param event\n * @returns boolean - whether the event was triggered from within a previewable-comment-form.\n */\nfunction triggeredInsideAPreviewableCommentForm(event: KeyboardEvent): boolean {\n  const inputTarget = event.target as HTMLInputElement\n\n  if (!inputTarget) return false\n\n  if (inputTarget.closest('.js-previewable-comment-form') !== null) return true\n\n  return false\n}\n\n/**\n * Checks if an event occurred within a codeEditor in markdown editing mode.\n *\n * @param event\n * @returns boolean - whether the event was triggered from within a codeEditor in markdown editing mode.\n */\nfunction triggeredInsideAMarkdownCodeEditor(event: KeyboardEvent): boolean {\n  const inputTarget = event.target as HTMLInputElement\n  if (!inputTarget) return false\n\n  const codeEditorElement = inputTarget.closest<HTMLTextAreaElement>('.js-code-editor')\n  if (!codeEditorElement) return false\n\n  const codeEditor = getCodeEditor(codeEditorElement)\n  if (!codeEditor) return false\n\n  const editor = codeEditor.editor\n  if (!editor) return false\n\n  const mode = editor.getMode().name\n  return mode === 'gfm' || mode === 'markdown'\n}\n\n/**\n * Checks if an event occurred within a memex.\n *\n * @param event\n * @returns boolean - whether the event was triggered from within a memex.\n */\nfunction triggeredInsideMemex(): boolean {\n  const memexRoot = document.querySelector<HTMLElement>('#memex-root')\n\n  if (!memexRoot) return false\n\n  return true\n}\n\n/**\n * Toggles the command palette. The command palette can be toggled on when closed, and off when open.\n * You can also toggle bewteen the modeless command palette and the command mode.\n *\n * @param enableCommandMode – set to true to open in command mode\n * @returns void\n */\nfunction toggleCommandPalette(enableCommandMode: boolean): void {\n  for (const details of document.querySelectorAll<HTMLDetailsElement>('.js-command-palette-dialog')) {\n    const commandPaletteInput = details.querySelector<CommandPaletteInputElement>(CommandPaletteInputElement.tagName)\n\n    if (!commandPaletteInput) return\n\n    if (details.open) {\n      details.open = false\n    } else {\n      toggleCommandMode(commandPaletteInput, enableCommandMode)\n\n      const commandPalette = details.querySelector<CommandPalette>(CommandPalette.tagName)\n\n      if (commandPalette) {\n        commandPalette.previouslyActiveElement = document.activeElement as HTMLElement\n      }\n\n      details.open = true\n    }\n  }\n}\n\n/**\n * Toggles the command palette bewteen the modeless command palette and the command mode\n *\n * @param commandPaletteInput – the command palette input element\n * @param enableCommandMode – set to true to open in command mode\n * @returns boolean - whether the mode command mode was toggled on or off\n */\nfunction toggleCommandMode(commandPaletteInput: CommandPaletteInputElement, enableCommandMode: boolean): boolean {\n  const commandModeActive = commandPaletteInput.inputValue.startsWith('>')\n\n  if (enableCommandMode && !commandModeActive) {\n    commandPaletteInput.inputValue = `>${commandPaletteInput.inputValue}`\n    return true\n  } else if (!enableCommandMode && commandModeActive) {\n    commandPaletteInput.inputValue = commandPaletteInput.inputValue.substring(1)\n    return true\n  } else {\n    return false\n  }\n}\n\n// register on initial page load\nobserveCommandPalette()\n","import type {CodeEditor} from './editor/code-editor'\n// eslint-disable-next-line no-restricted-imports\nimport {on} from 'delegated-events'\n\nconst codeEditors: WeakMap<HTMLElement, CodeEditor> = new WeakMap()\n\nexport function getCodeEditor(el: HTMLElement): CodeEditor | undefined {\n  return codeEditors.get(el)\n}\n\nexport async function getAsyncCodeEditor(el: HTMLElement): Promise<CodeEditor> {\n  return codeEditors.get(el) || onEditorFromEvent(await nextEvent(el, 'codeEditor:ready'))\n}\n\nfunction onEditorFromEvent(event: Event): CodeEditor {\n  if (!(event instanceof CustomEvent)) throw new Error('assert: event is not a CustomEvent')\n  const editor: CodeEditor = event.detail.editor\n  if (!event.target) throw new Error('assert: event.target is null')\n  codeEditors.set(event.target as HTMLElement, editor)\n  return editor\n}\n\non('codeEditor:ready', '.js-code-editor', onEditorFromEvent)\n\nfunction nextEvent(target: EventTarget, event: string): Promise<Event> {\n  return new Promise(resolve => {\n    target.addEventListener(event, resolve, {once: true})\n  })\n}\n","import {ready} from '@github-ui/document-ready'\nimport {setCookie} from '@github-ui/cookies'\n\nexport type ColorMode = 'light' | 'dark'\nexport type ColorModeWithAuto = ColorMode | 'auto'\n\n/**\n * Set the OS preferred color mode on page load\n */\n;(async () => {\n  await ready\n  setPreferredColorModeCookie()\n\n  // update the cookie when OS preferred color mode changes\n  if (window.matchMedia) {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)')\n\n    if (mediaQuery?.addEventListener) {\n      mediaQuery.addEventListener('change', setPreferredColorModeCookie)\n    } else {\n      mediaQuery.addListener(setPreferredColorModeCookie)\n    }\n  }\n})()\n\nfunction setPreferredColorModeCookie() {\n  setCookie('preferred_color_mode', getPreferredColorMode() as string)\n}\n\nexport function getPreferredColorMode(): ColorMode | undefined {\n  if (prefersColorScheme('dark')) {\n    return 'dark'\n  } else if (prefersColorScheme('light')) {\n    return 'light'\n  }\n\n  return undefined\n}\n\nfunction prefersColorScheme(scheme: ColorMode): boolean {\n  return window.matchMedia && window.matchMedia(`(prefers-color-scheme: ${scheme})`).matches\n}\n\nfunction getColorModeAttribute() {\n  const rootEl = document.querySelector('html[data-color-mode]')\n  if (!rootEl) return undefined\n  return rootEl.getAttribute('data-color-mode')\n}\n\n/**\n * Set the `data-color-mode` attribute on the html element of the page.\n */\nexport function setClientMode(mode: ColorModeWithAuto) {\n  const rootEl = document.querySelector('html[data-color-mode]')\n  if (!rootEl) {\n    // Color modes are not active on this page\n    return\n  }\n  rootEl.setAttribute('data-color-mode', mode)\n}\n\nexport function setClientTheme(theme: string, type: ColorMode) {\n  const rootEl = document.querySelector('html[data-color-mode]')\n  if (!rootEl) {\n    // Color modes are not active on this page\n    return\n  }\n  rootEl.setAttribute(`data-${type}-theme`, theme)\n}\n\n/**\n * Returns the user theme as defined by the `data-light-theme` or\n * `data-dark-theme` attribute.\n */\nexport function getClientTheme(type: ColorMode) {\n  const rootEl = document.querySelector('html[data-color-mode]')\n  if (!rootEl) {\n    // Color modes are not active on this page\n    return\n  }\n  return rootEl.getAttribute(`data-${type}-theme`)\n}\n\n/**\n * Provides a stable color mode. This does not delineate the theme, but rather the light vs dark modes.\n *\n * If you're after the theme, please use {@link getClientTheme}\n */\nexport function getColorMode(fallback: ColorMode = 'light') {\n  const mode = getColorModeAttribute()\n  return (mode === 'auto' ? getPreferredColorMode() : mode) ?? fallback\n}\n","interface Cookie {\n  key: string\n  value: string\n}\n\n/**\n * Get a cookie by name.\n * @param name\n * @returns a cookie object or undefined if not found.\n */\nexport function getCookie(name: string): Cookie | undefined {\n  return getCookies(name)[0]\n}\n\n/**\n * Get all cookies by name.\n * @param name\n * @returns\n */\nexport function getCookies(name: string): Cookie[] {\n  const cookies = []\n  for (const cookie of readCookies()) {\n    const [key, value] = cookie.trim().split('=')\n    if (name === key && typeof value !== 'undefined') {\n      cookies.push({key, value})\n    }\n  }\n  return cookies\n}\n\nfunction readCookies(): string[] {\n  try {\n    return document.cookie.split(';')\n  } catch {\n    // Cookie access disabled.\n    return []\n  }\n}\n\n/**\n * Set a new cookie with sensible defaults like secure.\n * @param name\n * @param value\n * @param expiration\n * @param strictDomain\n * @param samesite\n */\nexport function setCookie(\n  name: string,\n  value: string,\n  expiration: string | null = null,\n  strictDomain = false,\n  samesite = 'lax',\n) {\n  let domain = document.domain\n  if (domain == null) {\n    throw new Error('Unable to get document domain')\n  }\n\n  // Share cookies with test environments.\n  if (domain.endsWith('.github.com')) {\n    domain = 'github.com'\n  }\n\n  const secure = location.protocol === 'https:' ? '; secure' : ''\n  const expire = expiration ? `; expires=${expiration}` : ''\n  if (strictDomain === false) {\n    domain = `.${domain}`\n  }\n  try {\n    document.cookie = `${name}=${value}; path=/; domain=${domain}${expire}${secure}; samesite=${samesite}`\n  } catch {\n    // Cookie access disabled.\n  }\n}\n\n/**\n * Delete a given cookie with sensible defaults like secure.\n * This sets the expires value to a second ago to delete the cookie.\n * @param name\n * @param strictDomain\n */\nexport function deleteCookie(name: string, strictDomain = false) {\n  let domain = document.domain\n  if (domain == null) {\n    throw new Error('Unable to get document domain')\n  }\n\n  // Share cookies with test environments.\n  if (domain.endsWith('.github.com')) {\n    domain = 'github.com'\n  }\n\n  const time = new Date().getTime()\n  const expiration = new Date(time - 1).toUTCString()\n  const secure = location.protocol === 'https:' ? '; secure' : ''\n  const expire = `; expires=${expiration}`\n  if (strictDomain === false) {\n    domain = `.${domain}`\n  }\n  try {\n    document.cookie = `${name}=''; path=/; domain=${domain}${expire}${secure}`\n  } catch {\n    // Cookie access disabled.\n  }\n}\n","// this file is a shim to allow importing @github/hotkey and is the only allowed import for @github/hotkey\n// eslint-disable-next-line no-restricted-imports\nexport * from '@github/hotkey'\n\n// - (?:^|,)    Starting with the beginning of the string or the comma delineating the previous item\n// - ((?:[^,]|,(?=\\+| |$))*(?:,(?=,))?)    The target capture group, consisting of:\n//   - (?:[^,]|,(?=\\+| |$))*    Any number of characters that are not commas, or are commas that are followed by a\n//     plus sign, space, or end of string (ie, the commas in `,+Control` or `Control+, g` or `Control+,`)\n//   - (?:,(?=,))?    Optionally ending with a comma followed by another comma, like the commas in `Control+,,n` or\n//     `Control+,,,`\n// - (?=,|$)    Ending with a comma or the end of the string\nconst chordOrKeyRegex = /(?:^|,)((?:[^,]|,(?=\\+| |$))*(?:,(?=,))?)/g\n\nexport function splitHotkeyString(hotkey: string) {\n  // \",\" is a valid key name, so we can't just use `String.split()`. Even with a regular expression we can't split, for\n  // example \"Control+,,,\" into [\"Control+,\", \",\"] without a lookbehind (not supported in Safari).\n\n  // Instead, we match against all valid substrings:\n  return Array.from(hotkey.matchAll(chordOrKeyRegex)).map(([, chord]) => chord!)\n}\n","// TODO: Research replacing this module with a composable observable library.\n// The scope of this module simply returns a finalized subscription object.\n\n// Lightweight TC39 observable Subscription.\nexport class Subscription {\n  constructor(cleanup: () => void) {\n    this.closed = false\n    this.unsubscribe = () => {\n      cleanup()\n      this.closed = true\n    }\n  }\n\n  // A boolean value indicating whether the subscription is closed.\n  closed: boolean\n  // Cancels the subscription.\n  unsubscribe: () => void\n}\n\n// Create a Subscription from an event.\nexport function fromEvent(\n  target: EventTarget,\n  eventName: string,\n  onNext: EventListenerOrEventListenerObject,\n  options: AddEventListenerOptions = {capture: false},\n): Subscription {\n  target.addEventListener(eventName, onNext, options)\n  return new Subscription(() => {\n    target.removeEventListener(eventName, onNext, options)\n  })\n}\n\n// Combine several subscriptions into a single subscription.\n//\n// subscriptions - A list of subscriptions to combine.\n//\n// Returns a single, combined, subscription.\nexport function compose(...subscriptions: Subscription[]): Subscription {\n  return new Subscription(() => {\n    for (const subscription of subscriptions) {\n      subscription.unsubscribe()\n    }\n  })\n}\n"],"names":["CommandPaletteModeElement","HTMLElement","active","scope","firstChar","scopeTypeMatch","type","modeMatch","scopeType","scopeTypes","JSON","parse","includes","mode","char","character","attr","controller","CommandPaletteTipElement","connectedCallback","hidden","available","query","isEmpty","error","valueMatch","text","showOnEmpty","showOnError","toggle","value","matchMode","regex","RegExp","match","onEmpty","onError","CommandPaletteTokenElement","id","RemoteProvider","ServerDefinedProvider","fetch","_isEmpty","fetchSrc","enabledFor","scopeMatch","clearCache","length","modes","hasWildCard","overrideMode","src","url","URL","window","location","origin","params","set","search","toString","response","headers","Accept","ok","results","responseData","json","map","ServerDefinedItem","build","itemData","octicons","PrefetchedProvider","scopedItems","cachedOcticons","debounce","prefetch","blankQuery","Query","subjectId","subjectType","returnTo","items","matchingItems","fuzzyFilter","slice","maxItems","CommandsProvider","modelessCommandScopeTypes","FilesProvider","data","baseFilePath","filePaths","paths","file","JumpToItem","from","title","path","icon","group","action","AccessPolicyItem","endsWithLineNumberMatch","fetchWithLineNumbers","newQueryText","lineNumber","queryWithoutLineNumber","item","push","convert","HelpProvider","_query","hasCommands","helpElements","element","querySelectorAll","filter","helpElement","show","index","toItem","SearchLinksProvider","isBlank","SearchLinkItem","create","ServerDefinedProviderFactory","properties","providerClass","providers","remote","prefetched","commands","files","help","ServerDefinedProviderElement","ProviderElement","parseInt","fetchDebounce","supportsCommands","_wildcard","supportedModes","_modes","supportedScopeTypes","_scopeTypes","provider","CommandPaletteHelpElement","isEnabledScopeType","args","titleElement","innerHTML","prefix","hintElement","textContent","persistentHint","HelpItem","target","MainWindowCommand","overrides","MainWindowCommandItem","run","_commandPalette","isApplicable","iconType","priority","dismissAfterRun","MainWindowGlobalCommand","DeleteDiscussion","deleteButton","document","querySelector","dialogElement","deleteDiscussionsButton","click","setTimeout","focus","EditDiscussion","editButton","TransferDiscussion","transferButton","transferDiscussionButton","transferDiscussionDialog","focusMenu","addEventListener","TabSizeTwo","commandPalette","updateTabSize","saveSettings","setAttribute","tabSize","formData","FormData","errorMessage","verifiedFetch","method","body","displayFlash","TabSizeThree","TabSizeFour","TabSizeSix","TabSizeEight","TabSizeTen","TabSizeTwelve","SwitchTabSize","pushPage","StaticItemsPage","pageItems","command","select","OpenInDotDev","fetchLink","HTMLAnchorElement","SwitchTheme","SwitchToDark","SwitchToLight","SwitchToDarkDimmed","SwitchToDarkHighContrast","SwitchToAuto","applyTheme","loadStyles","theme","setClientTheme","setClientMode","lightTheme","darkTheme","colorMode","settings","light_theme","dark_theme","color_mode","linkTag","hasAttribute","getAttribute","getClientTheme","UpdateSubscription","fetchButton","HTMLButtonElement","disabled","isSubscribe","trim","constructor","isSubscribeCommand","moveCursorToEnd","input","selectionStart","selectionEnd","EditIssueBody","issueBody","isIssue","createElement","classList","add","appendChild","remove","textArea","parentElement","EditIssueTitle","AddTasklist","isFeatureEnabled","tasklistMarkup","createTextNode","TransferIssue","fetchDetails","HTMLDetailsElement","transferIssueDetails","open","LockIssue","isLock","lockIssueDetails","isLockCommand","DeleteIssue","deleteIssueDetails","ConvertToDiscussion","fetchConvertButton","fetchDialog","convertToDiscussionButton","convertToDiscussionDialog","HTMLDialogElement","showModal","OpenCodespace","elements","fetchElements","codeModal","codespacesForm","newCodespacesButton","codespacesTab","closest","EditPullRequestBody","pullRequestBody","isPullRequest","EditPullRequestTitle","UpdateBranch","button","scrollIntoView","behavior","block","ConvertToDraft","details","CopyBranchName","fetchClipboardCopy","ClipboardCopyElement","cloneContainer","copyText","CopyPermalink","fetchPermalinkContainer","permalinkContainer","href","hash","CloneCopyHttps","backendCommandsDisabled","CloneCopySsh","CloneCopyCli","MainWindowCommandsProvider","ProviderBase","IssueCommands","PullRequestCommands","RepositoryCommands","DiscussionCommands","EverywhereCommands","itemsByType","needsFetch","registerProvider","CommandPaletteInputElement","observedAttributes","setup","overlayInput","scopeElement","searchIcon","spinner","defaultScope","inputValue","_dispatchEvent","setupComplete","event","CustomEvent","bubbles","cancelable","dispatchEvent","typeahead","placeholder","connected","attributeChangedCallback","attributeName","_oldValue","newValue","setRemovedTokenAndSelect","newScope","clearButton","hasSomethingToClear","hasScope","clearScope","removeToken","typeaheadPlaceholderText","typeaheadPlaceholder","resetPlaceholder","onInput","overlay","typeaheadValue","mirror","typeaheadText","valueStartsWithTypeahead","offset","substring","showModePlaceholder","placeholderText","toLowerCase","startsWith","isCursorAtEnd","loading","isLoading","replace","onClear","KeyboardEvent","key","onKeydown","isSelectKeystroke","stopImmediatePropagation","preventDefault","isPlatformMetaKey","textSelected","eventName","detail","tagName","findCommandPalette","CommandPalette","hotkeyMatchesEvent","hotkey","hotkeyString","eventToHotkeyString","split","some","h","customElements","get","define","code","onMemexPage","isPrimaryActivation","platformActivationHotkey","isSecondaryActivation","platformSecondaryActivationHotkey","isCommandMode","platformCommandModeHotkey","validPrimaryActivation","triggeredInsideAPreviewableCommentForm","inputTarget","triggeredInsideAMarkdownCodeEditor","codeEditorElement","codeEditor","getCodeEditor","editor","getMode","name","validSecondaryActivation","validMemexActivation","toggleCommandPalette","enableCommandMode","commandPaletteInput","toggleCommandMode","commandModeActive","previouslyActiveElement","activeElement","stopPropagation","observe","timerStart","performance","now","activate","deactivate","previouslyActivated","sendStats","distributionKey","distributionValue","subscribe","el","fromEvent","clearCommands","codeEditors","WeakMap","getAsyncCodeEditor","onEditorFromEvent","Promise","resolve","once","on","setPreferredColorModeCookie","setCookie","getPreferredColorMode","prefersColorScheme","scheme","matchMedia","matches","rootEl","getColorMode","fallback","getColorModeAttribute","ready","mediaQuery","addListener","getCookie","getCookies","cookies","cookie","readCookies","expiration","strictDomain","samesite","domain","endsWith","secure","protocol","expire","deleteCookie","Date","time","getTime","toUTCString","chordOrKeyRegex","splitHotkeyString","Array","matchAll","chord","Subscription","cleanup","closed","unsubscribe","onNext","options","capture","removeEventListener","compose","subscriptions","subscription"],"sourceRoot":""}