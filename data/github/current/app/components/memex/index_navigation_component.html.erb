<%# erblint:counter DeprecatedComponentsCounter 1 %>
<% if display_mode == :list %>
  <%
    recent_views   = views.select { |_, (path, _, category)| category == :recent   && path }
    beta_views     = views.select { |_, (path, _, category)| category == :new      && path }
    template_views = views.select { |_, (path, _, category)| category == :template && path }
    classic_views  = views.select { |_, (path, _, category)| category == :classic  && path }
  %>
  <div <%= test_selector("projects-link") %>>
    <%= render(Primer::Experimental::NavigationList.new(aria: { label: "Projects views" }, selected_item_id: selected_item_id, py: 0)) do |component| %>
      <% if !recent_views.empty? %>
        <%  recent_views.each do |id, (path, label, _, icon)| %>
          <% component.with_item(href: path, selected_by_ids: [id]) do |item| %>
            <% item.with_leading_visual_icon(icon: icon) %>
            <%= label %>
          <% end %>
        <% end %>
      <% end %>

      <% if !beta_views.empty? %>
        <% beta_views.each do |id, (path, label, _, icon)| %>
          <% component.with_item(href: path, selected_by_ids: [id]) do |item| %>
            <% item.with_leading_visual_icon(icon: icon) %>
            <%= label %>
          <% end %>
        <% end %>
      <% end %>

      <% if !template_views.empty? %>
        <% template_views.each do |id, (path, label, _, icon, trailing_label)| %>
          <% component.with_item(href: path, selected_by_ids: [id]) do |item| %>
            <% item.with_leading_visual_icon(icon: icon) %>
            <%= label %>
            <% if trailing_label %>
              <% item.with_trailing_visual_label(scheme: :success, test_selector: "projects-link-trailing-label") do %>
                <%= trailing_label %>
              <% end %>
            <% end %>
          <% end %>
        <% end %>
      <% end %>

      <% if ProjectsClassicSunset.projects_classic_ui_enabled?(current_user, org: context_organization) %>
        <% if !classic_views.empty? %>
          <% if owner_type == :repo || owner_type == :team %>
            <% classic_views.each do |id, (path, label, _, icon)| %>
              <% component.with_item(href: path, selected_by_ids: [id]) do |item| %>
                <% item.with_leading_visual_icon(icon: icon) %>
                <%= label %>
              <% end %>
            <% end %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>

    <% if ProjectsClassicSunset.projects_classic_ui_enabled?(current_user, org: context_organization) %>
      <% if (owner_type != :repo && owner_type != :team) && !classic_views.empty? %>
        <%= render(Primer::Beta::Text.new(tag: :p, color: :muted, mt: 6, mb: 1, pl: 2, font_size: :small, font_weight: :bold, test_selector: "projects-classic-text")) { "Looking for projects (classic)?" } %>
      <% end %>

      <% if (owner_type != :repo && owner_type != :team) && !classic_views.empty? %>
        <%= render(Primer::Experimental::NavigationList.new(aria: { label: "Classic projects view" }, selected_item_id: selected_item_id, py: 0)) do |component| %>
          <% classic_views.each do |id, (path, label, _, icon)| %>
            <% component.with_item(href: path, selected_by_ids: [id]) do |item| %>
              <% item.with_leading_visual_icon(icon: icon, color: :muted) %>
              <span class="color-fg-muted"> <%= label %></span>
            <% end %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
  </div>

<% elsif display_mode == :dropdown %>

  <details class="details-reset details-overlay">
    <%= render Primer::ButtonComponent.new(tag: :summary, "aria-haspopup": "true") do %>
      <div class="d-flex">
        <div class="flex-auto mr-2">
          <%= render(Primer::Beta::Octicon.new(icon: views[selected_item_id][3], mr: 1)) %>
          <span>
            <%= views[selected_item_id][1] %>
          </span>
        </div>
        <div class="flex-self-center dropdown-caret"></div>
      </div>
    <% end %>

    <details-menu class="SelectMenu" role="menu"><%# erblint:disable Primer::Accessibility::DetailsMenuMigration %>
      <div class="SelectMenu-modal">
        <div class="SelectMenu-list">
          <% views.select { |_, (path, _, _)| path } .each do |id, (path, label, _, icon, trailing_label)| %>
            <a class="SelectMenu-item flex-justify-start" aria-checked="<%= id == selected_item_id %>" role="menuitemradio" href="<%= path %>">
              <%= render(Primer::Beta::Octicon.new("check", classes: "SelectMenu-icon SelectMenu-icon--check")) %>
              <%= render(Primer::Beta::Octicon.new(icon: icon, mr: 1)) %>
              <span><%= label %></span>
              <% if trailing_label %>
                <%= render(Primer::Beta::Label.new(scheme: :success, ml: 2, test_selector: "projects-link-trailing-label")) do %>
                  <%= trailing_label %>
                <% end %>
              <% end %>
            </a>
          <% end %>
        </div>
      </div>
    </details-menu>
  </details>

<% end %>
