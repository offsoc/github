# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Repositories::V1::VisibilityChanged`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Repositories::V1::VisibilityChanged`.

class Hydro::Schemas::Github::Repositories::V1::VisibilityChanged
  sig do
    params(
      actor_id: T.nilable(Integer),
      new_visibility: T.nilable(T.any(Symbol, Integer)),
      old_visibility: T.nilable(T.any(Symbol, Integer)),
      repository_id: T.nilable(Integer),
      request_id: T.nilable(String)
    ).void
  end
  def initialize(actor_id: nil, new_visibility: nil, old_visibility: nil, repository_id: nil, request_id: nil); end

  sig { returns(Integer) }
  def actor_id; end

  sig { params(value: Integer).void }
  def actor_id=(value); end

  sig { void }
  def clear_actor_id; end

  sig { void }
  def clear_new_visibility; end

  sig { void }
  def clear_old_visibility; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_request_id; end

  sig { returns(T.any(Symbol, Integer)) }
  def new_visibility; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def new_visibility=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def old_visibility; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def old_visibility=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end

  sig { returns(String) }
  def request_id; end

  sig { params(value: String).void }
  def request_id=(value); end
end
