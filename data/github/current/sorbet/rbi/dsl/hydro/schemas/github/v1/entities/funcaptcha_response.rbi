# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::Entities::FuncaptchaResponse`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::Entities::FuncaptchaResponse`.

class Hydro::Schemas::Github::V1::Entities::FuncaptchaResponse
  sig do
    params(
      attempted: T.nilable(T::Boolean),
      check_answer: T.nilable(Google::Protobuf::Timestamp),
      error: T.nilable(String),
      previously_verified: T.nilable(T::Boolean),
      score: T.nilable(Float),
      session: T.nilable(String),
      session_created: T.nilable(Google::Protobuf::Timestamp),
      session_timed_out: T.nilable(T::Boolean),
      solved: T.nilable(T::Boolean),
      suppress_limited: T.nilable(T::Boolean),
      suppressed: T.nilable(T::Boolean),
      time_verified: T.nilable(Integer),
      user_ip: T.nilable(String),
      verified: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(attempted: nil, check_answer: nil, error: nil, previously_verified: nil, score: nil, session: nil, session_created: nil, session_timed_out: nil, solved: nil, suppress_limited: nil, suppressed: nil, time_verified: nil, user_ip: nil, verified: nil); end

  sig { returns(T::Boolean) }
  def attempted; end

  sig { params(value: T::Boolean).void }
  def attempted=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def check_answer; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def check_answer=(value); end

  sig { void }
  def clear_attempted; end

  sig { void }
  def clear_check_answer; end

  sig { void }
  def clear_error; end

  sig { void }
  def clear_previously_verified; end

  sig { void }
  def clear_score; end

  sig { void }
  def clear_session; end

  sig { void }
  def clear_session_created; end

  sig { void }
  def clear_session_timed_out; end

  sig { void }
  def clear_solved; end

  sig { void }
  def clear_suppress_limited; end

  sig { void }
  def clear_suppressed; end

  sig { void }
  def clear_time_verified; end

  sig { void }
  def clear_user_ip; end

  sig { void }
  def clear_verified; end

  sig { returns(String) }
  def error; end

  sig { params(value: String).void }
  def error=(value); end

  sig { returns(T::Boolean) }
  def previously_verified; end

  sig { params(value: T::Boolean).void }
  def previously_verified=(value); end

  sig { returns(Float) }
  def score; end

  sig { params(value: Float).void }
  def score=(value); end

  sig { returns(String) }
  def session; end

  sig { params(value: String).void }
  def session=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def session_created; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def session_created=(value); end

  sig { returns(T::Boolean) }
  def session_timed_out; end

  sig { params(value: T::Boolean).void }
  def session_timed_out=(value); end

  sig { returns(T::Boolean) }
  def solved; end

  sig { params(value: T::Boolean).void }
  def solved=(value); end

  sig { returns(T::Boolean) }
  def suppress_limited; end

  sig { params(value: T::Boolean).void }
  def suppress_limited=(value); end

  sig { returns(T::Boolean) }
  def suppressed; end

  sig { params(value: T::Boolean).void }
  def suppressed=(value); end

  sig { returns(Integer) }
  def time_verified; end

  sig { params(value: Integer).void }
  def time_verified=(value); end

  sig { returns(String) }
  def user_ip; end

  sig { params(value: String).void }
  def user_ip=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def verified; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def verified=(value); end
end
