# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Webhooks::V0::DeliveryMetadata`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Webhooks::V0::DeliveryMetadata`.

class Hydro::Schemas::Github::Webhooks::V0::DeliveryMetadata
  sig do
    params(
      delivery_guid: T.nilable(String),
      delivery_type: T.nilable(T.any(Symbol, Integer)),
      github_request_id: T.nilable(String),
      hook_action: T.nilable(String),
      hook_actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      hook_creator: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      hook_event: T.nilable(String),
      hook_id: T.nilable(Integer),
      hook_installation_target_id: T.nilable(Integer),
      hook_installation_target_type: T.nilable(T.any(Symbol, Integer)),
      hook_integration_installation_id: T.nilable(Google::Protobuf::UInt64Value),
      hook_oauth_application: T.nilable(Hydro::Schemas::Github::V1::Entities::App),
      hook_payload_bytes: T.nilable(Integer),
      hook_target_organization: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization),
      hook_target_repository: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository),
      hook_url: T.nilable(String)
    ).void
  end
  def initialize(delivery_guid: nil, delivery_type: nil, github_request_id: nil, hook_action: nil, hook_actor: nil, hook_creator: nil, hook_event: nil, hook_id: nil, hook_installation_target_id: nil, hook_installation_target_type: nil, hook_integration_installation_id: nil, hook_oauth_application: nil, hook_payload_bytes: nil, hook_target_organization: nil, hook_target_repository: nil, hook_url: nil); end

  sig { void }
  def clear_delivery_guid; end

  sig { void }
  def clear_delivery_type; end

  sig { void }
  def clear_github_request_id; end

  sig { void }
  def clear_hook_action; end

  sig { void }
  def clear_hook_actor; end

  sig { void }
  def clear_hook_creator; end

  sig { void }
  def clear_hook_event; end

  sig { void }
  def clear_hook_id; end

  sig { void }
  def clear_hook_installation_target_id; end

  sig { void }
  def clear_hook_installation_target_type; end

  sig { void }
  def clear_hook_integration_installation_id; end

  sig { void }
  def clear_hook_oauth_application; end

  sig { void }
  def clear_hook_payload_bytes; end

  sig { void }
  def clear_hook_target_organization; end

  sig { void }
  def clear_hook_target_repository; end

  sig { void }
  def clear_hook_url; end

  sig { returns(String) }
  def delivery_guid; end

  sig { params(value: String).void }
  def delivery_guid=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def delivery_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def delivery_type=(value); end

  sig { returns(String) }
  def github_request_id; end

  sig { params(value: String).void }
  def github_request_id=(value); end

  sig { returns(String) }
  def hook_action; end

  sig { params(value: String).void }
  def hook_action=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def hook_actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def hook_actor=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def hook_creator; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def hook_creator=(value); end

  sig { returns(String) }
  def hook_event; end

  sig { params(value: String).void }
  def hook_event=(value); end

  sig { returns(Integer) }
  def hook_id; end

  sig { params(value: Integer).void }
  def hook_id=(value); end

  sig { returns(Integer) }
  def hook_installation_target_id; end

  sig { params(value: Integer).void }
  def hook_installation_target_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def hook_installation_target_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def hook_installation_target_type=(value); end

  sig { returns(T.nilable(Google::Protobuf::UInt64Value)) }
  def hook_integration_installation_id; end

  sig { params(value: T.nilable(Google::Protobuf::UInt64Value)).void }
  def hook_integration_installation_id=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::App)) }
  def hook_oauth_application; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::App)).void }
  def hook_oauth_application=(value); end

  sig { returns(Integer) }
  def hook_payload_bytes; end

  sig { params(value: Integer).void }
  def hook_payload_bytes=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)) }
  def hook_target_organization; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)).void }
  def hook_target_organization=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)) }
  def hook_target_repository; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)).void }
  def hook_target_repository=(value); end

  sig { returns(String) }
  def hook_url; end

  sig { params(value: String).void }
  def hook_url=(value); end
end
