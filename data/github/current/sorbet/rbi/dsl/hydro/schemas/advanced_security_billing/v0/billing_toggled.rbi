# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::AdvancedSecurityBilling::V0::BillingToggled`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::AdvancedSecurityBilling::V0::BillingToggled`.

class Hydro::Schemas::AdvancedSecurityBilling::V0::BillingToggled
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      business: T.nilable(Hydro::Schemas::Github::V1::Entities::Business),
      organization: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization),
      toggle_state: T.nilable(T::Boolean)
    ).void
  end
  def initialize(actor: nil, business: nil, organization: nil, toggle_state: nil); end

  sig { returns(T.nilable(Symbol)) }
  def BillableEntity; end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Business)) }
  def business; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Business)).void }
  def business=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_business; end

  sig { void }
  def clear_organization; end

  sig { void }
  def clear_toggle_state; end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)) }
  def organization; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)).void }
  def organization=(value); end

  sig { returns(T::Boolean) }
  def toggle_state; end

  sig { params(value: T::Boolean).void }
  def toggle_state=(value); end
end
