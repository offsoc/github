<% page_info title: "#{current_repository.name_with_display_owner} - Security products" %>

<%= render Primer::Beta::BorderBox.new(padding: :condensed, mb: 3) do |component| %>
  <% component.with_header(font_weight: :bold) { "Security Configuration" } %>
  <% if security_configuration.present? %>
    <% component.with_row(test_selector: "config_name") do %>
      <%= content_tag :b, "Name:" %>
      <%= link_to security_configuration.name,
        security_configuration_stafftools_user_path(owner, security_configuration) %>
    <% end %>
    <% component.with_row(test_selector: "config_state") do %>
      <%= content_tag :b, "State:" %>
      <%= repository_security_configuration.state.titleize %>
    <% end %>
    <% component.with_row(test_selector: "config_enforcement") do %>
      <%= content_tag :b, "Enforced?" %>
      <%= security_configuration.enforced?(owner) ? "Yes" : "No" %>
    <% end %>
    <% if repository_security_configuration.failure_reason.present? %>
      <% component.with_row(test_selector: "config_failure_reason") do %>
        <%= content_tag :b, "Failure Reason:" %>
        <%= repository_security_configuration.failure_reason %>
      <% end %>
    <% end %>
    <% component.with_row(test_selector: "config_audit_log") do %>
      <%= content_tag :b, "Audit logs:" %>
      <%= link_to "View",
        stafftools_audit_log_path(query: "webevents | where repo == '#{current_repository.name_with_display_owner}'and data.security_configuration_id == '#{security_configuration.id}'") %>
    <% end %>
  <% else %>
    <% component.with_row(test_selector: "no_config").with_content("No security configuration applied!") %>
  <% end %>
<% end %>
