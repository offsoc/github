{"version":3,"file":"chunk-node_modules_monaco-editor_esm_vs_basic-languages_css_css_js-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/monaco-editor/esm/vs/basic-languages/css/css.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.49.0(383fdf3fc0e1e1a024068b8d0fd4f3dcbae74d04)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/css/css.ts\nvar conf = {\n  wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|((::|[@#.!:])?[\\w-?]+%?)|::|[@#.!:]/g,\n  comments: {\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\", notIn: [\"string\", \"comment\"] },\n    { open: \"[\", close: \"]\", notIn: [\"string\", \"comment\"] },\n    { open: \"(\", close: \")\", notIn: [\"string\", \"comment\"] },\n    { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] },\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\n      end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".css\",\n  ws: \"[ \t\\n\\r\\f]*\",\n  // whitespaces (referenced in several rules)\n  identifier: \"-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*\",\n  brackets: [\n    { open: \"{\", close: \"}\", token: \"delimiter.bracket\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.bracket\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"<\", close: \">\", token: \"delimiter.angle\" }\n  ],\n  tokenizer: {\n    root: [{ include: \"@selector\" }],\n    selector: [\n      { include: \"@comments\" },\n      { include: \"@import\" },\n      { include: \"@strings\" },\n      [\n        \"[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)\",\n        { token: \"keyword\", next: \"@keyframedeclaration\" }\n      ],\n      [\"[@](page|content|font-face|-moz-document)\", { token: \"keyword\" }],\n      [\"[@](charset|namespace)\", { token: \"keyword\", next: \"@declarationbody\" }],\n      [\n        \"(url-prefix)(\\\\()\",\n        [\"attribute.value\", { token: \"delimiter.parenthesis\", next: \"@urldeclaration\" }]\n      ],\n      [\n        \"(url)(\\\\()\",\n        [\"attribute.value\", { token: \"delimiter.parenthesis\", next: \"@urldeclaration\" }]\n      ],\n      { include: \"@selectorname\" },\n      [\"[\\\\*]\", \"tag\"],\n      // selector symbols\n      [\"[>\\\\+,]\", \"delimiter\"],\n      // selector operators\n      [\"\\\\[\", { token: \"delimiter.bracket\", next: \"@selectorattribute\" }],\n      [\"{\", { token: \"delimiter.bracket\", next: \"@selectorbody\" }]\n    ],\n    selectorbody: [\n      { include: \"@comments\" },\n      [\"[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))\", \"attribute.name\", \"@rulevalue\"],\n      // rule definition: to distinguish from a nested selector check for whitespace, number or a semicolon\n      [\"}\", { token: \"delimiter.bracket\", next: \"@pop\" }]\n    ],\n    selectorname: [\n      [\"(\\\\.|#(?=[^{])|%|(@identifier)|:)+\", \"tag\"]\n      // selector (.foo, div, ...)\n    ],\n    selectorattribute: [{ include: \"@term\" }, [\"]\", { token: \"delimiter.bracket\", next: \"@pop\" }]],\n    term: [\n      { include: \"@comments\" },\n      [\n        \"(url-prefix)(\\\\()\",\n        [\"attribute.value\", { token: \"delimiter.parenthesis\", next: \"@urldeclaration\" }]\n      ],\n      [\n        \"(url)(\\\\()\",\n        [\"attribute.value\", { token: \"delimiter.parenthesis\", next: \"@urldeclaration\" }]\n      ],\n      { include: \"@functioninvocation\" },\n      { include: \"@numbers\" },\n      { include: \"@name\" },\n      { include: \"@strings\" },\n      [\"([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])\", \"delimiter\"],\n      [\",\", \"delimiter\"]\n    ],\n    rulevalue: [\n      { include: \"@comments\" },\n      { include: \"@strings\" },\n      { include: \"@term\" },\n      [\"!important\", \"keyword\"],\n      [\";\", \"delimiter\", \"@pop\"],\n      [\"(?=})\", { token: \"\", next: \"@pop\" }]\n      // missing semicolon\n    ],\n    warndebug: [[\"[@](warn|debug)\", { token: \"keyword\", next: \"@declarationbody\" }]],\n    import: [[\"[@](import)\", { token: \"keyword\", next: \"@declarationbody\" }]],\n    urldeclaration: [\n      { include: \"@strings\" },\n      [\"[^)\\r\\n]+\", \"string\"],\n      [\"\\\\)\", { token: \"delimiter.parenthesis\", next: \"@pop\" }]\n    ],\n    parenthizedterm: [\n      { include: \"@term\" },\n      [\"\\\\)\", { token: \"delimiter.parenthesis\", next: \"@pop\" }]\n    ],\n    declarationbody: [\n      { include: \"@term\" },\n      [\";\", \"delimiter\", \"@pop\"],\n      [\"(?=})\", { token: \"\", next: \"@pop\" }]\n      // missing semicolon\n    ],\n    comments: [\n      [\"\\\\/\\\\*\", \"comment\", \"@comment\"],\n      [\"\\\\/\\\\/+.*\", \"comment\"]\n    ],\n    comment: [\n      [\"\\\\*\\\\/\", \"comment\", \"@pop\"],\n      [/[^*/]+/, \"comment\"],\n      [/./, \"comment\"]\n    ],\n    name: [[\"@identifier\", \"attribute.value\"]],\n    numbers: [\n      [\"-?(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?\", { token: \"attribute.value.number\", next: \"@units\" }],\n      [\"#[0-9a-fA-F_]+(?!\\\\w)\", \"attribute.value.hex\"]\n    ],\n    units: [\n      [\n        \"(em|ex|ch|rem|fr|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?\",\n        \"attribute.value.unit\",\n        \"@pop\"\n      ]\n    ],\n    keyframedeclaration: [\n      [\"@identifier\", \"attribute.value\"],\n      [\"{\", { token: \"delimiter.bracket\", switchTo: \"@keyframebody\" }]\n    ],\n    keyframebody: [\n      { include: \"@term\" },\n      [\"{\", { token: \"delimiter.bracket\", next: \"@selectorbody\" }],\n      [\"}\", { token: \"delimiter.bracket\", next: \"@pop\" }]\n    ],\n    functioninvocation: [\n      [\"@identifier\\\\(\", { token: \"attribute.value\", next: \"@functionarguments\" }]\n    ],\n    functionarguments: [\n      [\"\\\\$@identifier@ws:\", \"attribute.name\"],\n      [\"[,]\", \"delimiter\"],\n      { include: \"@term\" },\n      [\"\\\\)\", { token: \"attribute.value\", next: \"@pop\" }]\n    ],\n    strings: [\n      ['~?\"', { token: \"string\", next: \"@stringenddoublequote\" }],\n      [\"~?'\", { token: \"string\", next: \"@stringendquote\" }]\n    ],\n    stringenddoublequote: [\n      [\"\\\\\\\\.\", \"string\"],\n      ['\"', { token: \"string\", next: \"@pop\" }],\n      [/[^\\\\\"]+/, \"string\"],\n      [\".\", \"string\"]\n    ],\n    stringendquote: [\n      [\"\\\\\\\\.\", \"string\"],\n      [\"'\", { token: \"string\", next: \"@pop\" }],\n      [/[^\\\\']+/, \"string\"],\n      [\".\", \"string\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["conf","wordPattern","comments","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","end","language","defaultToken","tokenPostfix","ws","identifier","token","tokenizer","root","include","selector","next","selectorbody","selectorname","selectorattribute","term","rulevalue","warndebug","import","urldeclaration","parenthizedterm","declarationbody","comment","name","numbers","units","keyframedeclaration","switchTo","keyframebody","functioninvocation","functionarguments","strings","stringenddoublequote","stringendquote"],"sourceRoot":""}