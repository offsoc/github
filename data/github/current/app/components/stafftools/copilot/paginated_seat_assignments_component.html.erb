<% if copilot_seat_assignments.total_entries > 0 %>
  <table class="site-admin-table" style="white-space:nowrap; overflow:hidden;">
    <tr>
      <th>Type</th>
      <th>Assignable</th>
      <th>Sync Status</th>
      <th>Created</th>
      <th>Cancellation Date</th>
      <th>Actions</th>
    </tr>
    <% copilot_seat_assignments.each do |assignment| %>
      <tr>
        <td>
          <% if assignment.symbolized_assignable_type == :ORGANIZATION_INVITATION %>
            Invitation
          <% else %>
            <%= assignment.assignable_type %>
          <% end %>
        </td>
        <td>
          <% if assignment.symbolized_assignable_type == :ORGANIZATION_INVITATION %>
            <%= assignment.assignable.email_or_invitee_name %>
          <% elsif assignment.symbolized_assignable_type == :TEAM %>
            <%= assignment.assignable.name %>
          <% else %>
            <%= assignment.assignable %>
          <% end %>
        </td>
        <td align="center">
          <% if assignment.symbolized_assignable_type == :ORGANIZATION_INVITATION %>
            <span class="color-fg-muted">
              <%= render(Primer::Beta::Octicon.new(icon: "check-circle-fill")) %>
            </span>
          <% else %>
            <% if assignment.requires_conversion? %>
              <%= render Primer::Beta::Label.new(scheme: :severe, title: "Out Of Sync", "aria-label": "Out Of Sync") do %>
                <%= assignment.assignable_member_seat_count %> of <%= assignment.assignable_count %>
              <% end %>
            <% else %>
              <%= render(Primer::Beta::Octicon.new(icon: "check-circle-fill", color: :success, "aria-label": "All Users Have Seat")) %>
            <% end %>
          <% end %>
        </td>
        <td>
          <span id="created_at_<%= assignment.id %>"> <%= assignment.created_at %></span>
          <%= render(Primer::Alpha::Tooltip.new(for_id: "created_at_#{assignment.id}", type: :description, text: "Created by #{assignment.assigning_user&.display_login}", direction: :ne)) %>
        </td>
        <td>
          <%= assignment.pending_cancellation_date %>
        </td>
        <td>
          <% if assignment.symbolized_assignable_type == :USER && assignment.assignable&.display_login %>
            <%= render(Primer::Beta::Link.new(href: stafftools_user_copilot_settings_path(assignment.assignable.display_login), target: "_blank", title: "View User", muted: true, id: "user-link-#{assignment.assignable_id}")) do |component| %>
              <% component.with_tooltip(text: "Copilot page for #{assignment.assignable.display_login}") %>
              <%= render(Primer::Beta::Octicon.new(:"link-external")) %>
            <% end %>
          <% elsif assignment.symbolized_assignable_type == :TEAM %>
            <%= render(Primer::Beta::Link.new(href: gh_stafftools_team_path(assignment.assignable), target: "_blank", title: "View Team", muted: true, id: "team-link-#{assignment.assignable_id}")) do |component| %>
              <% component.with_tooltip(text: "Team page for #{assignment.assignable.name}") %>
              <%= render(Primer::Beta::Octicon.new(:"link-external")) %>
            <% end %>
          <% elsif assignment.symbolized_assignable_type == :ORGANIZATION_INVITATION %>
            <%
              invitation = assignment.assignable
              link = if invitation.email?
                stafftools_search_path(query: invitation.email)
              else
                stafftools_user_copilot_settings_path(invitation.invitee)
              end
            %>
            <%= render(Primer::Beta::Link.new(href: link, target: "_blank", title: "View User", muted: true, id: "user-link-#{assignment.assignable_id}")) do |component| %>
              <% component.with_tooltip(text: "Page for #{assignment.assignable.email_or_invitee_name}") %>
              <%= render(Primer::Beta::Octicon.new(:"link-external")) %>
            <% end %>
          <% else %>
            <%= render(Primer::Beta::Octicon.new(:"link-external")) %>
          <% end %>
          &nbsp;
          <%= render Stafftools::Copilot::ResyncSeatAssignmentComponent.new(assignment) %>
          &nbsp;
          <%= render Stafftools::Copilot::CancelSeatAssignmentComponent.new(assignment) %>
        </td>
      </tr>
    <% end %>
  </table>
  <div class="paginate-container">
    <%= will_paginate copilot_seat_assignments %>
  </div>
<% else %>
    This organization has no assigned seats.
<% end %>
