<%= render Primer::Box.new(display: :flex, p: 3, align_items: :center, justify_content: :space_between) do %>
  <div class="d-flex flex-column flex-lg-row">
    <%= render Primer::Box.new(pr: 2) do %>
      <%= render Primer::Beta::Octicon.new(:"codespaces", color: :muted) %>
      <%= render Primer::Beta::Text.new(pl: 2, font_weight: :bold).with_content(constraint[:display_name]) %>
    <% end %>
    <%= render Primer::Box.new do %>
      <%= render Primer::Beta::Text.new(
        color: :muted,
        hidden: existing_policy_has_selection?,
        data: { target: "codespaces-policy-form.noSelectedNetworkConfigurationText" }
      ).with_content("None") %>
      <%= render Primer::Beta::Text.new(
        color: :muted,
        data: { target: "codespaces-policy-form.selectedNetworkConfigurationText" }
      ).with_content(selected_network_text) %>
    <% end %>
  </div>
  <%= render Primer::Box.new(display: :flex, justify_content: :space_between, align_items: :center) do %>
    <%= render Primer::Alpha::ActionMenu.new(
      select_variant: :single,
      anchor_align: :end,
      anchor_side: :outside_bottom,
      data: {
        catalyst: true,
        target: "codespaces-policy-form.networkConfigurationMenu",
      }
    ) do |menu| %>
      <% menu.with_show_button(
        icon: :pencil,
        scheme: :invisible,
        "aria-label": "Edit policy",
      ) %>
      <% available_network_configurations.each_with_index do |config, index| %>
        <% menu.with_item(
          label: config.name,
          active: existing_policy_has_network_selected?(config.id),
          classes: "network-config-menu-item",
          data: {
            catalyst: true,
            action: "click:codespaces-policy-form#selectNetworkConfigForConstraint",
            targets: "codespaces-policy-form.networkConfigurationMenuItems",
            config_id: config.id,
            config_name: config.name,
            constraint_name: constraint[:name],
          }
        ) %>
      <% end %>
    <% end %>
    <%= render Organizations::Settings::CodespacesPolicyForm::ConstraintRow::DeleteButtonComponent.new(constraint_name: constraint[:name]) %>
  <% end %>
<% end %>
