# Code generated by protoc-gen-twirp_ruby 1.8.0, DO NOT EDIT.
require 'twirp'
require_relative 'deploy_pb.rb'

module GitHub
  module Launch
    module Services
      module Deploy
        class LaunchDeploymentServiceService < Twirp::Service
          package 'git_hub.launch.services.deploy'
          service 'LaunchDeploymentService'
          rpc :SetupRepository, SetupRepositoryRequest, SetupRepositoryResponse, :ruby_method => :setup_repository
          rpc :SetupTenant, SetupTenantRequest, SetupTenantResponse, :ruby_method => :setup_tenant
          rpc :NotifyRepository, GitHub::Launch::Pbtypes::Deploy::NotifyRepositoryEvent, Google::Protobuf::Empty, :ruby_method => :notify_repository
          rpc :GetWorkflowBillingDetails, GetWorkflowBillingDetailsRequest, WorkflowBillingDetailsResponse, :ruby_method => :get_workflow_billing_details
          rpc :GetWorkflowSecurityDetails, GetWorkflowSecurityDetailsRequest, GetWorkflowSecurityDetailsResponse, :ruby_method => :get_workflow_security_details
          rpc :WorkflowCancel, WorkflowCancelRequest, Google::Protobuf::Empty, :ruby_method => :workflow_cancel
          rpc :WorkflowCancelAll, WorkflowCancelAllRequest, WorkflowCancelAllResponse, :ruby_method => :workflow_cancel_all
          rpc :WorkflowCancelAllForNonOwnerRepos, WorkflowCancelAllForNonOwnerReposRequest, WorkflowCancelAllForNonOwnerReposResponse, :ruby_method => :workflow_cancel_all_for_non_owner_repos
          rpc :GetAZForGlobalIDChatops, GetAZForGlobalIDChatopsRequest, GetAZForGlobalIDChatopsResponse, :ruby_method => :get_a_z_for_global_i_d_chatops
          rpc :RepoByAZPTenant, RepoByAZPTenantRequest, RepoByAZPTenantResponse, :ruby_method => :repo_by_a_z_p_tenant
          rpc :DeleteSchedules, GitHub::Launch::Pbtypes::Deploy::DeleteSchedulesRequest, GitHub::Launch::Pbtypes::Deploy::DeleteSchedulesResponse, :ruby_method => :delete_schedules
          rpc :ListSchedules, GitHub::Launch::Pbtypes::Deploy::ListSchedulesRequest, GitHub::Launch::Pbtypes::Deploy::ListSchedulesResponse, :ruby_method => :list_schedules
          rpc :SynchronizeScheduledWorkflows, GitHub::Launch::Pbtypes::Deploy::SynchronizeScheduledWorkflowsRequest, Google::Protobuf::Empty, :ruby_method => :synchronize_scheduled_workflows
          rpc :DisableScheduledWorkflow, GitHub::Launch::Pbtypes::Deploy::DisableScheduledWorkflowRequest, Google::Protobuf::Empty, :ruby_method => :disable_scheduled_workflow
          rpc :AbuseStatus, AbuseStatusRequest, AbuseStatusResponse, :ruby_method => :abuse_status
          rpc :AbuseDetectionStatus, AbuseStatusRequest, AbuseStatusResponse, :ruby_method => :abuse_detection_status
          rpc :ResolveActions, ResolveActionsRequest, ResolveActionsResponse, :ruby_method => :resolve_actions
          rpc :ReportAdminEventForOwnerRepos, ReportAdminEventForOwnerReposRequest, Google::Protobuf::Empty, :ruby_method => :report_admin_event_for_owner_repos
          rpc :GetTenantIds, GetTenantIDsRequest, GetTenantIDsResponse, :ruby_method => :get_tenant_ids
          rpc :ReportAdminEventForBillingOwner, ReportAdminEventForBillingOwnerRequest, Google::Protobuf::Empty, :ruby_method => :report_admin_event_for_billing_owner
          rpc :RunDynamicWorkflow, RunDynamicWorkflowRequest, RunDynamicWorkflowResponse, :ruby_method => :run_dynamic_workflow
        end

        class LaunchDeploymentServiceClient < Twirp::Client
          client_for LaunchDeploymentServiceService
        end
      end
    end
  end
end
