# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Sponsors::V1::SponsorsInvoicedAgreementSign`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Sponsors::V1::SponsorsInvoicedAgreementSign`.

class Hydro::Schemas::Github::Sponsors::V1::SponsorsInvoicedAgreementSign
  sig do
    params(
      agreement_version: T.nilable(String),
      expires_on: T.nilable(String),
      organization: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext),
      signatory: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(agreement_version: nil, expires_on: nil, organization: nil, request_context: nil, signatory: nil); end

  sig { returns(String) }
  def agreement_version; end

  sig { params(value: String).void }
  def agreement_version=(value); end

  sig { void }
  def clear_agreement_version; end

  sig { void }
  def clear_expires_on; end

  sig { void }
  def clear_organization; end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_signatory; end

  sig { returns(String) }
  def expires_on; end

  sig { params(value: String).void }
  def expires_on=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)) }
  def organization; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)).void }
  def organization=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def signatory; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def signatory=(value); end
end
