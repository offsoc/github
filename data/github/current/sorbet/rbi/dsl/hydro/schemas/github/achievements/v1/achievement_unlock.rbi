# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Achievements::V1::AchievementUnlock`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Achievements::V1::AchievementUnlock`.

class Hydro::Schemas::Github::Achievements::V1::AchievementUnlock
  sig do
    params(
      achievable: T.nilable(T.any(Symbol, Integer)),
      tier: T.nilable(Integer),
      user: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      visibility: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(achievable: nil, tier: nil, user: nil, visibility: nil); end

  sig { returns(T.any(Symbol, Integer)) }
  def achievable; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def achievable=(value); end

  sig { void }
  def clear_achievable; end

  sig { void }
  def clear_tier; end

  sig { void }
  def clear_user; end

  sig { void }
  def clear_visibility; end

  sig { returns(Integer) }
  def tier; end

  sig { params(value: Integer).void }
  def tier=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def user; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def user=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def visibility; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def visibility=(value); end
end
