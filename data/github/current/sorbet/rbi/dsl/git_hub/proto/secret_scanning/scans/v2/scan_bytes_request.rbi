# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Proto::SecretScanning::Scans::V2::ScanBytesRequest`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Proto::SecretScanning::Scans::V2::ScanBytesRequest`.

class GitHub::Proto::SecretScanning::Scans::V2::ScanBytesRequest
  sig do
    params(
      actor_id: T.nilable(Integer),
      business_id: T.nilable(Integer),
      content: T.nilable(String),
      dark_ship_only: T.nilable(T::Boolean),
      delegated_bypass_requests: T.nilable(T.any(Google::Protobuf::RepeatedField[GitHub::Proto::SecretScanning::Types::V1::DelegatedBypassRequest], T::Array[GitHub::Proto::SecretScanning::Types::V1::DelegatedBypassRequest])),
      feature_flags: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      limit: T.nilable(Integer),
      path: T.nilable(String),
      repository: T.nilable(GitHub::Proto::SecretScanning::Repositories::V1::Repository),
      scan_duration: T.nilable(Google::Protobuf::Duration)
    ).void
  end
  def initialize(actor_id: nil, business_id: nil, content: nil, dark_ship_only: nil, delegated_bypass_requests: T.unsafe(nil), feature_flags: T.unsafe(nil), limit: nil, path: nil, repository: nil, scan_duration: nil); end

  sig { returns(Integer) }
  def actor_id; end

  sig { params(value: Integer).void }
  def actor_id=(value); end

  sig { returns(Integer) }
  def business_id; end

  sig { params(value: Integer).void }
  def business_id=(value); end

  sig { void }
  def clear_actor_id; end

  sig { void }
  def clear_business_id; end

  sig { void }
  def clear_content; end

  sig { void }
  def clear_dark_ship_only; end

  sig { void }
  def clear_delegated_bypass_requests; end

  sig { void }
  def clear_feature_flags; end

  sig { void }
  def clear_limit; end

  sig { void }
  def clear_path; end

  sig { void }
  def clear_repository; end

  sig { void }
  def clear_scan_duration; end

  sig { returns(String) }
  def content; end

  sig { params(value: String).void }
  def content=(value); end

  sig { returns(T::Boolean) }
  def dark_ship_only; end

  sig { params(value: T::Boolean).void }
  def dark_ship_only=(value); end

  sig { returns(Google::Protobuf::RepeatedField[GitHub::Proto::SecretScanning::Types::V1::DelegatedBypassRequest]) }
  def delegated_bypass_requests; end

  sig do
    params(
      value: Google::Protobuf::RepeatedField[GitHub::Proto::SecretScanning::Types::V1::DelegatedBypassRequest]
    ).void
  end
  def delegated_bypass_requests=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def feature_flags; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def feature_flags=(value); end

  sig { returns(Integer) }
  def limit; end

  sig { params(value: Integer).void }
  def limit=(value); end

  sig { returns(String) }
  def path; end

  sig { params(value: String).void }
  def path=(value); end

  sig { returns(T.nilable(GitHub::Proto::SecretScanning::Repositories::V1::Repository)) }
  def repository; end

  sig { params(value: T.nilable(GitHub::Proto::SecretScanning::Repositories::V1::Repository)).void }
  def repository=(value); end

  sig { returns(T.nilable(Google::Protobuf::Duration)) }
  def scan_duration; end

  sig { params(value: T.nilable(Google::Protobuf::Duration)).void }
  def scan_duration=(value); end
end
