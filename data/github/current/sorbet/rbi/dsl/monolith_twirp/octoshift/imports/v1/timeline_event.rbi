# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Octoshift::Imports::V1::TimelineEvent`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Octoshift::Imports::V1::TimelineEvent`.

class MonolithTwirp::Octoshift::Imports::V1::TimelineEvent
  sig do
    params(
      actor: T.nilable(String),
      after_commit_oid: T.nilable(String),
      assignee_login: T.nilable(String),
      before_commit_oid: T.nilable(String),
      block_duration_days: T.nilable(Integer),
      card_id: T.nilable(Integer),
      column_name: T.nilable(String),
      commit_id: T.nilable(String),
      commit_repository_id: T.nilable(Integer),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      deployment_id: T.nilable(Integer),
      deployment_status_id: T.nilable(Integer),
      event: T.nilable(String),
      issue_number: T.nilable(Integer),
      label_name: T.nilable(String),
      lock_reason: T.nilable(String),
      message: T.nilable(String),
      milestone_id: T.nilable(Integer),
      milestone_title: T.nilable(String),
      performed_by_integration_id: T.nilable(Integer),
      performed_by_project_workflow_action_id: T.nilable(Integer),
      previous_column_name: T.nilable(String),
      pull_request_review_id: T.nilable(Integer),
      pull_request_review_state_was: T.nilable(T.any(Symbol, Integer)),
      ref: T.nilable(String),
      referencing_issue_number: T.nilable(Integer),
      repository_id: T.nilable(Integer),
      requested_reviewer_login: T.nilable(String),
      review_request_id: T.nilable(Integer),
      review_requester_login: T.nilable(String),
      subject: T.nilable(String),
      subject_number: T.nilable(Integer),
      title_is: T.nilable(String),
      title_was: T.nilable(String),
      user_login: T.nilable(String)
    ).void
  end
  def initialize(actor: nil, after_commit_oid: nil, assignee_login: nil, before_commit_oid: nil, block_duration_days: nil, card_id: nil, column_name: nil, commit_id: nil, commit_repository_id: nil, created_at: nil, deployment_id: nil, deployment_status_id: nil, event: nil, issue_number: nil, label_name: nil, lock_reason: nil, message: nil, milestone_id: nil, milestone_title: nil, performed_by_integration_id: nil, performed_by_project_workflow_action_id: nil, previous_column_name: nil, pull_request_review_id: nil, pull_request_review_state_was: nil, ref: nil, referencing_issue_number: nil, repository_id: nil, requested_reviewer_login: nil, review_request_id: nil, review_requester_login: nil, subject: nil, subject_number: nil, title_is: nil, title_was: nil, user_login: nil); end

  sig { returns(String) }
  def actor; end

  sig { params(value: String).void }
  def actor=(value); end

  sig { returns(String) }
  def after_commit_oid; end

  sig { params(value: String).void }
  def after_commit_oid=(value); end

  sig { returns(String) }
  def assignee_login; end

  sig { params(value: String).void }
  def assignee_login=(value); end

  sig { returns(String) }
  def before_commit_oid; end

  sig { params(value: String).void }
  def before_commit_oid=(value); end

  sig { returns(Integer) }
  def block_duration_days; end

  sig { params(value: Integer).void }
  def block_duration_days=(value); end

  sig { returns(Integer) }
  def card_id; end

  sig { params(value: Integer).void }
  def card_id=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_after_commit_oid; end

  sig { void }
  def clear_assignee_login; end

  sig { void }
  def clear_before_commit_oid; end

  sig { void }
  def clear_block_duration_days; end

  sig { void }
  def clear_card_id; end

  sig { void }
  def clear_column_name; end

  sig { void }
  def clear_commit_id; end

  sig { void }
  def clear_commit_repository_id; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_deployment_id; end

  sig { void }
  def clear_deployment_status_id; end

  sig { void }
  def clear_event; end

  sig { void }
  def clear_issue_number; end

  sig { void }
  def clear_label_name; end

  sig { void }
  def clear_lock_reason; end

  sig { void }
  def clear_message; end

  sig { void }
  def clear_milestone_id; end

  sig { void }
  def clear_milestone_title; end

  sig { void }
  def clear_performed_by_integration_id; end

  sig { void }
  def clear_performed_by_project_workflow_action_id; end

  sig { void }
  def clear_previous_column_name; end

  sig { void }
  def clear_pull_request_review_id; end

  sig { void }
  def clear_pull_request_review_state_was; end

  sig { void }
  def clear_ref; end

  sig { void }
  def clear_referencing_issue_number; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_requested_reviewer_login; end

  sig { void }
  def clear_review_request_id; end

  sig { void }
  def clear_review_requester_login; end

  sig { void }
  def clear_subject; end

  sig { void }
  def clear_subject_number; end

  sig { void }
  def clear_title_is; end

  sig { void }
  def clear_title_was; end

  sig { void }
  def clear_user_login; end

  sig { returns(String) }
  def column_name; end

  sig { params(value: String).void }
  def column_name=(value); end

  sig { returns(String) }
  def commit_id; end

  sig { params(value: String).void }
  def commit_id=(value); end

  sig { returns(Integer) }
  def commit_repository_id; end

  sig { params(value: Integer).void }
  def commit_repository_id=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(Integer) }
  def deployment_id; end

  sig { params(value: Integer).void }
  def deployment_id=(value); end

  sig { returns(Integer) }
  def deployment_status_id; end

  sig { params(value: Integer).void }
  def deployment_status_id=(value); end

  sig { returns(String) }
  def event; end

  sig { params(value: String).void }
  def event=(value); end

  sig { returns(Integer) }
  def issue_number; end

  sig { params(value: Integer).void }
  def issue_number=(value); end

  sig { returns(String) }
  def label_name; end

  sig { params(value: String).void }
  def label_name=(value); end

  sig { returns(String) }
  def lock_reason; end

  sig { params(value: String).void }
  def lock_reason=(value); end

  sig { returns(String) }
  def message; end

  sig { params(value: String).void }
  def message=(value); end

  sig { returns(Integer) }
  def milestone_id; end

  sig { params(value: Integer).void }
  def milestone_id=(value); end

  sig { returns(String) }
  def milestone_title; end

  sig { params(value: String).void }
  def milestone_title=(value); end

  sig { returns(Integer) }
  def performed_by_integration_id; end

  sig { params(value: Integer).void }
  def performed_by_integration_id=(value); end

  sig { returns(Integer) }
  def performed_by_project_workflow_action_id; end

  sig { params(value: Integer).void }
  def performed_by_project_workflow_action_id=(value); end

  sig { returns(String) }
  def previous_column_name; end

  sig { params(value: String).void }
  def previous_column_name=(value); end

  sig { returns(Integer) }
  def pull_request_review_id; end

  sig { params(value: Integer).void }
  def pull_request_review_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def pull_request_review_state_was; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def pull_request_review_state_was=(value); end

  sig { returns(String) }
  def ref; end

  sig { params(value: String).void }
  def ref=(value); end

  sig { returns(Integer) }
  def referencing_issue_number; end

  sig { params(value: Integer).void }
  def referencing_issue_number=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end

  sig { returns(String) }
  def requested_reviewer_login; end

  sig { params(value: String).void }
  def requested_reviewer_login=(value); end

  sig { returns(Integer) }
  def review_request_id; end

  sig { params(value: Integer).void }
  def review_request_id=(value); end

  sig { returns(String) }
  def review_requester_login; end

  sig { params(value: String).void }
  def review_requester_login=(value); end

  sig { returns(String) }
  def subject; end

  sig { params(value: String).void }
  def subject=(value); end

  sig { returns(Integer) }
  def subject_number; end

  sig { params(value: Integer).void }
  def subject_number=(value); end

  sig { returns(String) }
  def title_is; end

  sig { params(value: String).void }
  def title_is=(value); end

  sig { returns(String) }
  def title_was; end

  sig { params(value: String).void }
  def title_was=(value); end

  sig { returns(String) }
  def user_login; end

  sig { params(value: String).void }
  def user_login=(value); end
end
