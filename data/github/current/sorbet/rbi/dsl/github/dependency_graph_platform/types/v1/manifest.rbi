# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Github::DependencyGraphPlatform::Types::V1::Manifest`.
# Please instead update this file by running `bin/tapioca dsl Github::DependencyGraphPlatform::Types::V1::Manifest`.

class Github::DependencyGraphPlatform::Types::V1::Manifest
  sig do
    params(
      dependencies: T.nilable(T.any(Google::Protobuf::RepeatedField[Github::DependencyGraphPlatform::Types::V1::Dependency], T::Array[Github::DependencyGraphPlatform::Types::V1::Dependency])),
      ecosystem: T.nilable(T.any(Symbol, Integer)),
      filename: T.nilable(String),
      id: T.nilable(String),
      path: T.nilable(String)
    ).void
  end
  def initialize(dependencies: T.unsafe(nil), ecosystem: nil, filename: nil, id: nil, path: nil); end

  sig { void }
  def clear_dependencies; end

  sig { void }
  def clear_ecosystem; end

  sig { void }
  def clear_filename; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_path; end

  sig { returns(Google::Protobuf::RepeatedField[Github::DependencyGraphPlatform::Types::V1::Dependency]) }
  def dependencies; end

  sig { params(value: Google::Protobuf::RepeatedField[Github::DependencyGraphPlatform::Types::V1::Dependency]).void }
  def dependencies=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def ecosystem; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def ecosystem=(value); end

  sig { returns(String) }
  def filename; end

  sig { params(value: String).void }
  def filename=(value); end

  sig { returns(String) }
  def id; end

  sig { params(value: String).void }
  def id=(value); end

  sig { returns(String) }
  def path; end

  sig { params(value: String).void }
  def path=(value); end
end
