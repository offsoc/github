syntax = "proto3";

package actions.core.v1;

option go_package = "core/v1";
option ruby_package = "MonolithTwirp::Actions::Core::V1";

import "core/v1/dynamic_workflow.proto";

service IntegrationsAPI {
  rpc GetIntegrationJobSecrets(GetIntegrationJobSecretsRequest) returns (GetIntegrationJobSecretsResponse);
}

message GetIntegrationJobSecretsRequest {
  // The integration that should optionally provide just-in-time job secrets.
  // Currently extracted from the dynamic workflow.
  string integration_name = 1;
  int64 repository_id = 2;
  int64 workflow_run_id = 3;
  // The job name used in the workflow, without any matrix strategy suffix
  string bare_job_name = 4;
  // The environment targeted by the job, if any.
  string environment_name = 5;
  // Indicates if the runner is managed by GitHub. There may be some secrets we don't want to send to self-hosted runners.
  bool is_hosted_runner = 6;
  DynamicWorkflow dynamic_workflow = 8;
}

message GetIntegrationJobSecretsResponse {
  // Secrets to pass to the workflow job.
  // Encrypted using the "custom-tasks-key" diet earthsmoke key in hosted. Only base64 encoded in GHES.
  map<string, string> encrypted_secrets = 1;
}
