syntax = "proto3";

package billing_platform.api.v1;

option go_package = "lib/twirp/proto";
option ruby_package = "BillingPlatform::Api::V1";

import "proto/base.proto";

service PricingApi {
    rpc GetPricing(GetPricingRequest) returns (GetPricingResponse);
    rpc GetAllPricing(GetAllPricingRequest) returns (GetAllPricingResponse);
    rpc GetPricingsByProduct(GetPricingsByProductRequest) returns (GetPricingsByProductResponse);
    rpc UpsertPricing(UpsertPricingRequest) returns (UpsertPricingResponse);
}

message GetPricingRequest {
    string sku = 1;
}

message GetPricingResponse {
    Pricing pricing = 1;
}

message GetAllPricingRequest {
}

message GetAllPricingResponse {
    repeated Pricing pricings = 1;
}

message GetPricingsByProductRequest {
    string productName = 1;
}

message GetPricingsByProductResponse {
    repeated Pricing pricings = 1;
}

message UpsertPricingRequest {
    Pricing pricing = 1;
}

message UpsertPricingResponse {
}

enum PricingMeterType {
    Default = 0; // aks DirectSummation, aka actions minutes. defaulting ot zero instead of unknown so that will back fill any existing data by default
    PerHourUnitCharge = 1; // watermark
    DailyUnitCharge = 2; // high watermark
}

message Pricing {
    string sku = 1;
    string product = 2;
    double price = 3;
    PricingMeterType meterType = 4;
    string friendlyName = 5;
    string azureMeterId = 6;
    repeated HistoricalPrice effectiveDatePrices = 7;
    bool freeForPublicRepos = 8;
    int64 effectiveAt = 9;
    base.UnitType unitType = 10;
}

message HistoricalPrice {
    int64 startDate = 1;
    int64 endDate = 2;
    double price = 3;
}
