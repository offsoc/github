# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Api::App::PlatformTypes::CheckRun`.
# Please instead update this file by running `bin/tapioca dsl Api::App::PlatformTypes::CheckRun`.

class Api::App::PlatformTypes::CheckRun < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(T.nilable(Api::App::PlatformTypes::CheckAnnotationConnection)) }
  def annotations; end

  sig { returns(T::Boolean) }
  def annotations?; end

  sig { returns(Api::App::PlatformTypes::CheckSuite) }
  def check_suite; end

  sig { returns(T::Boolean) }
  def check_suite?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def completed_at; end

  sig { returns(T::Boolean) }
  def completed_at?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::CompletedLog)) }
  def completed_log; end

  sig { returns(T::Boolean) }
  def completed_log?; end

  sig { returns(T.nilable(String)) }
  def conclusion; end

  sig { returns(T::Boolean) }
  def conclusion?; end

  sig { returns(String) }
  def contextual_name; end

  sig { returns(T::Boolean) }
  def contextual_name?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::Bot)) }
  def creator; end

  sig { returns(T::Boolean) }
  def creator?; end

  sig { returns(T.nilable(Integer)) }
  def database_id; end

  sig { returns(T::Boolean) }
  def database_id?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::Deployment)) }
  def deployment; end

  sig { returns(T::Boolean) }
  def deployment?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def details_url; end

  sig { returns(T::Boolean) }
  def details_url?; end

  sig { returns(T.nilable(String)) }
  def display_name; end

  sig { returns(T::Boolean) }
  def display_name?; end

  sig { returns(Integer) }
  def duration; end

  sig { returns(T::Boolean) }
  def duration?; end

  sig { returns(T.nilable(String)) }
  def external_id; end

  sig { returns(T::Boolean) }
  def external_id?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def full_database_id; end

  sig { returns(T::Boolean) }
  def full_database_id?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(T::Boolean) }
  def is_required; end

  sig { returns(T::Boolean) }
  def is_required?; end

  sig { returns(String) }
  def name; end

  sig { returns(T::Boolean) }
  def name?; end

  sig { returns(T.nilable(Integer)) }
  def number; end

  sig { returns(T::Boolean) }
  def number?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::DeploymentRequest)) }
  def pending_deployment_request; end

  sig { returns(T::Boolean) }
  def pending_deployment_request?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def permalink; end

  sig { returns(T::Boolean) }
  def permalink?; end

  sig { returns(Api::App::PlatformTypes::Repository) }
  def repository; end

  sig { returns(T::Boolean) }
  def repository?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def resource_path; end

  sig { returns(T::Boolean) }
  def resource_path?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def started_at; end

  sig { returns(T::Boolean) }
  def started_at?; end

  sig { returns(String) }
  def status; end

  sig { returns(T::Boolean) }
  def status?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::CheckStepConnection)) }
  def steps; end

  sig { returns(T::Boolean) }
  def steps?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::StreamingLog)) }
  def streaming_log; end

  sig { returns(T::Boolean) }
  def streaming_log?; end

  sig { returns(T.nilable(String)) }
  def summary; end

  sig { returns(T::Boolean) }
  def summary?; end

  sig { returns(T.nilable(String)) }
  def text; end

  sig { returns(T::Boolean) }
  def text?; end

  sig { returns(T.nilable(String)) }
  def title; end

  sig { returns(T::Boolean) }
  def title?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def url; end

  sig { returns(T::Boolean) }
  def url?; end
end
