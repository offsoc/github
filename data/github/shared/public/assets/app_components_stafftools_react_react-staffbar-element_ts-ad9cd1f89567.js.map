{"version":3,"file":"chunk-app_components_stafftools_react_react-staffbar-element_ts-xxxxxxxxxxxx.js","mappings":"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","sources":["app/assets/modules/github/format-bytes.ts","app/components/stafftools/react/react-staffbar-element.ts"],"sourcesContent":["export function formatBytes(bytes: number, decimals = 2) {\n  return new Intl.NumberFormat('en', {\n    notation: 'compact',\n    style: 'unit',\n    unit: 'byte',\n    unitDisplay: 'narrow',\n    minimumFractionDigits: decimals,\n    maximumFractionDigits: decimals,\n  }).format(bytes)\n}\n","import {controller, target} from '@github/catalyst'\nimport {formatBytes} from '../../../assets/modules/github/format-bytes'\nimport type {ReactAppElement} from '@github-ui/react-core/ReactAppElement'\n\ntype PayloadBase = {\n  size: number\n  name: string\n  hasSSRContent: boolean\n  ssrError: boolean\n}\n\ntype PartialPayload = {\n  type: 'partial'\n  embeddedData: unknown\n} & PayloadBase\n\ntype AppPayload = {\n  type: 'app'\n  payload: unknown\n  appPayload: unknown\n} & PayloadBase\n\n@controller\nclass ReactStaffbarElement extends HTMLElement {\n  @target payloadSize: HTMLSpanElement\n  @target logPayloadButton: HTMLButtonElement\n  @target speedscopeLink: HTMLAnchorElement\n  @target payloadText: HTMLSpanElement\n  @target ssrLink: HTMLSpanElement\n  @target ssrError: HTMLSpanElement\n  @target viewPayloadButton: HTMLButtonElement\n\n  payloads: Array<PartialPayload | AppPayload> = []\n\n  connectedCallback() {\n    document.addEventListener('soft-nav:payload', this.onSoftNavPayload)\n    document.addEventListener('turbo:load', this.onTurboLoad)\n\n    this.updateReactVersion()\n  }\n\n  disconnectedCallback() {\n    document.removeEventListener('soft-nav:payload', this.onSoftNavPayload)\n    document.removeEventListener('turbo:load', this.onTurboLoad)\n  }\n\n  updateReactVersion() {\n    const reactStaffbar = document.querySelector('#staffbar-react-version')\n    if (!reactStaffbar) return\n    // Trim the date off the end of React's version string to make it fit in the staffbar a little better.\n    const trimmedReactVersion = REACT_VERSION.replace(/^(.*)-\\d+$/, '$1')\n    reactStaffbar.textContent = `| React ${trimmedReactVersion}`\n  }\n\n  onSoftNavPayload = (event: Event) => {\n    const customEvent = event as CustomEvent<{payload: unknown; appPayload: unknown}>\n    const {payload, appPayload} = customEvent.detail\n    this.checkReactApp(payload, appPayload)\n    this.updatePayload()\n  }\n\n  onTurboLoad = () => {\n    this.extractPartialPayloads()\n    this.updatePayload()\n  }\n\n  checkReactApp(payload: unknown, appPayload: unknown) {\n    const reactApp = (document.querySelector('react-app') as ReactAppElement) || document.querySelector('projects-v2')\n\n    if (reactApp) {\n      const appName = reactApp.getAttribute('app-name') || ''\n\n      // filter out any previous entries for this app\n      this.payloads = this.payloads.filter(reactPayload => reactPayload.type !== 'app')\n\n      const tempPayload: AppPayload = {\n        name: appName,\n        payload,\n        appPayload,\n        type: 'app',\n        size: this.getPayloadChars(payload, appPayload),\n        ssrError: !!reactApp.ssrError,\n        hasSSRContent: reactApp.hasSSRContent,\n      }\n\n      this.payloads.push(tempPayload)\n    }\n  }\n\n  updatePayload() {\n    let hasSSRErrorRollup = false\n    let hasSSRContentRollup = false\n    let amountOfChars = 0\n    const onClickConsoleLogs: Array<() => void> = []\n\n    for (const payload of this.payloads) {\n      if (payload.ssrError) hasSSRErrorRollup = true\n      if (payload.hasSSRContent) hasSSRContentRollup = true\n      amountOfChars += payload.size\n\n      if (payload.type === 'app') {\n        onClickConsoleLogs.push(() => {\n          // eslint-disable-next-line no-console\n          console.group(`React App - ${payload.name}`)\n          // eslint-disable-next-line no-console\n          console.log({payload: payload.payload, appPayload: payload.appPayload})\n          // eslint-disable-next-line no-console\n          console.groupEnd()\n        })\n      } else if (payload.type === 'partial') {\n        onClickConsoleLogs.push(() => {\n          // eslint-disable-next-line no-console\n          console.group(`React Partial - ${payload.name}`)\n          // eslint-disable-next-line no-console\n          console.log(payload.embeddedData)\n          // eslint-disable-next-line no-console\n          console.groupEnd()\n        })\n      }\n    }\n\n    // Update payload size\n    const payloadSize = formatBytes(amountOfChars, 2)\n    this.payloadSize.textContent = payloadSize\n    this.viewPayloadButton.ariaLabel = `${payloadSize}, React payload size`\n    // eslint-disable-next-line i18n-text/no-en\n    this.payloadText.textContent = `The payload size is ${payloadSize}.`\n\n    // Update SSR info\n    const showSSRError = hasSSRErrorRollup\n    const showSSRSuccess = hasSSRContentRollup && !showSSRError\n\n    this.ssrLink.hidden = !showSSRSuccess\n    this.ssrError.hidden = !showSSRError\n\n    // Misc element updates\n    this.updateSpeedscopeLink()\n    this.updateVisibility()\n\n    // Update click events\n    if (this.payloads.length > 0) {\n      const payloadButton = this.logPayloadButton\n      if (payloadButton) {\n        payloadButton.onclick = () => {\n          // eslint-disable-next-line no-console\n          console.group('React Payloads')\n          for (const onClickConsoleLog of onClickConsoleLogs) {\n            onClickConsoleLog()\n          }\n          // eslint-disable-next-line no-console\n          console.groupEnd()\n        }\n      }\n    }\n  }\n\n  extractPartialPayloads() {\n    const reactPartials: NodeListOf<ReactAppElement> = document.querySelectorAll('react-partial')\n\n    for (const reactPartial of reactPartials) {\n      const partialName = reactPartial.getAttribute('partial-name')!\n      const embeddedDataElement = reactPartial.querySelector(\n        `react-partial[partial-name=\"${partialName}\"] > script[type=\"application/json\"][data-target=\"react-partial.embeddedData\"]`,\n      )\n\n      const embeddedDataText = embeddedDataElement?.textContent || '{}'\n      const embeddedData = JSON.parse(embeddedDataText)\n      const tempPayload: PartialPayload = {\n        name: partialName,\n        embeddedData,\n        size: embeddedDataText.length,\n        type: 'partial',\n        ssrError: !!reactPartial.ssrError,\n        hasSSRContent: reactPartial.hasSSRContent,\n      }\n\n      this.payloads.push(tempPayload)\n    }\n  }\n\n  getPayloadChars(payload: unknown, appPayload: unknown) {\n    return (payload ? JSON.stringify(payload).length : 0) + (appPayload ? JSON.stringify(appPayload).length : 0)\n  }\n\n  updateVisibility() {\n    this.hidden = this.payloads.length === 0\n  }\n\n  updateSpeedscopeLink() {\n    const title = `${document.location.pathname.replaceAll('/', '_')}_${new Date().toISOString()}.stackprof.json`\n    const speedscopeUrl = `${document.location.origin}${document.location.pathname}?flamegraph=1&flamegraph_interval=500&flamegraph_output=json&flamegraph_json`\n    this.speedscopeLink.href = `/_speedscope/index.html#profileURL=${encodeURIComponent(\n      speedscopeUrl,\n    )}&title=${encodeURIComponent(title)}`\n  }\n}\n"],"names":["formatBytes","bytes","decimals","Intl","NumberFormat","notation","style","unit","unitDisplay","minimumFractionDigits","maximumFractionDigits","format","ReactStaffbarElement","HTMLElement","connectedCallback","document","addEventListener","onSoftNavPayload","onTurboLoad","updateReactVersion","disconnectedCallback","removeEventListener","reactStaffbar","querySelector","trimmedReactVersion","REACT_VERSION","replace","textContent","checkReactApp","payload","appPayload","reactApp","appName","getAttribute","payloads","filter","reactPayload","type","tempPayload","name","size","getPayloadChars","ssrError","hasSSRContent","push","updatePayload","hasSSRErrorRollup","hasSSRContentRollup","amountOfChars","onClickConsoleLogs","console","group","log","groupEnd","embeddedData","payloadSize","viewPayloadButton","ariaLabel","payloadText","showSSRError","showSSRSuccess","ssrLink","hidden","updateSpeedscopeLink","updateVisibility","length","payloadButton","logPayloadButton","onclick","onClickConsoleLog","extractPartialPayloads","reactPartial","querySelectorAll","partialName","embeddedDataElement","embeddedDataText","JSON","parse","stringify","title","location","pathname","replaceAll","Date","toISOString","speedscopeUrl","origin","speedscopeLink","href","encodeURIComponent","customEvent","detail","target","controller"],"sourceRoot":""}