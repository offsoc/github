# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PlatformTypes::FundingPlatform`.
# Please instead update this file by running `bin/tapioca dsl PlatformTypes::FundingPlatform`.

module PlatformTypes::FundingPlatform
  sig { returns(T::Boolean) }
  def buy_me_a_coffee?; end

  sig { returns(T::Boolean) }
  def community_bridge?; end

  sig { returns(T::Boolean) }
  def custom?; end

  sig { returns(T::Boolean) }
  def github?; end

  sig { returns(T::Boolean) }
  def issuehunt?; end

  sig { returns(T::Boolean) }
  def ko_fi?; end

  sig { returns(T::Boolean) }
  def lfx_crowdfunding?; end

  sig { returns(T::Boolean) }
  def liberapay?; end

  sig { returns(T::Boolean) }
  def open_collective?; end

  sig { returns(T::Boolean) }
  def patreon?; end

  sig { returns(T::Boolean) }
  def polar?; end

  sig { returns(T::Boolean) }
  def thanks_dev?; end

  sig { returns(T::Boolean) }
  def tidelift?; end

  BUY_ME_A_COFFEE = T.let("BUY_ME_A_COFFEE", String)
  COMMUNITY_BRIDGE = T.let("COMMUNITY_BRIDGE", String)
  CUSTOM = T.let("CUSTOM", String)
  GITHUB = T.let("GITHUB", String)
  ISSUEHUNT = T.let("ISSUEHUNT", String)
  KO_FI = T.let("KO_FI", String)
  LFX_CROWDFUNDING = T.let("LFX_CROWDFUNDING", String)
  LIBERAPAY = T.let("LIBERAPAY", String)
  OPEN_COLLECTIVE = T.let("OPEN_COLLECTIVE", String)
  PATREON = T.let("PATREON", String)
  POLAR = T.let("POLAR", String)
  THANKS_DEV = T.let("THANKS_DEV", String)
  TIDELIFT = T.let("TIDELIFT", String)
end
