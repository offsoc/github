{"version":3,"file":"chunk-app_components_dependabot_alerts_dependabot-alert-table-header-element_ts-xxxxxxxxxxxx.js","mappings":"gsBAIE,cAFF,YACMA,0CAA0CC,YAU9CC,mBAAoB,K,IAIM,IAAIC,gB,iJAAtBC,E,UACN,GAAM,CAACC,OAAAA,CAAM,CAAC,CAAG,MAAI,CAAED,GAEvBE,OAAOC,gBAAgB,CAAC,sBAAuB,IAAI,CAAE,CAACF,OAAAA,CAAM,EAC9D,CAEAG,sBAAuB,CACrB,MAAI,CAAEJ,GAAgBK,KAAK,EAC7B,CAEAC,YAAYC,CAAkB,CAAE,CAGX,wBAAfA,EAAMC,IAAI,EAId,IAAI,CAACC,oBAAoB,CAACF,EAC5B,CAEAE,qBAAqBF,CAAkB,CAAE,CACnCA,EAAMG,MAAM,CAACC,OAAO,CACtB,IAAI,CAACC,kBAAkB,GAEvB,IAAI,CAACA,kBAAkB,GAGzB,IAAMC,EAAe,IAAI,CAACD,kBAAkB,CAAG,CAC/C,KAAI,CAACE,uBAAuB,CAACC,MAAM,CAAG,CAACF,EACvC,IAAI,CAACG,yBAAyB,CAACD,MAAM,CAAG,CAACF,EACzC,IAAI,CAACI,eAAe,CAACF,MAAM,CAAGF,EAE9B,IAAI,CAACK,mCAAmC,CAACX,EAC3C,CAEAW,oCAAoCX,CAAkB,CAAE,CACtD,IAAK,IAAMY,KAAa,IAAI,CAACC,yBAAyB,CACpD,GAAIb,EAAMG,MAAM,CAACC,OAAO,CAAE,CACxB,IAAMU,EAAQC,SAASC,aAAa,CAAC,SACrCF,EAAMG,YAAY,CAAC,OAAQ,UAC3BH,EAAMG,YAAY,CAAC,OAAQ,SAC3BH,EAAMG,YAAY,CAAC,QAASjB,EAAMG,MAAM,CAACe,KAAK,EAC9CN,EAAUO,WAAW,CAACL,EACxB,KAAO,CACL,IAAMM,EAAeR,EAAUS,aAAa,CAAC,CAAC;qCACjB,EAAErB,EAAMG,MAAM,CAACe,KAAK,CAAC;QAClD,CAAC,EACGE,GACFR,EAAUU,WAAW,CAACF,EAE1B,CAEJ,C,8BAjEA,S,uIAAA,Q,kBAAA,M,QAEAf,kBAAkB,CAAG,C,CAgEvB,E,GA9DGkB,EAAAA,EAAMA,C,CALHlC,EAAAA,SAAAA,CAAAA,4BAAAA,KAAAA,G,GAMHkC,EAAAA,EAAMA,C,CANHlC,EAAAA,SAAAA,CAAAA,0BAAAA,KAAAA,G,GAOHmC,EAAAA,EAAOA,C,CAPJnC,EAAAA,SAAAA,CAAAA,4BAAAA,KAAAA,G,GAQHkC,EAAAA,EAAMA,C,CARHlC,EAAAA,SAAAA,CAAAA,kBAAAA,KAAAA,GAAAA,EAAAA,EAAAA,CADLoC,EAAAA,EAAUA,C,CACLpC,E","sources":["app/components/dependabot_alerts/dependabot-alert-table-header-element.ts"],"sourcesContent":["import {controller, target, targets} from '@github/catalyst'\n\n@controller\nclass DependabotAlertTableHeaderElement extends HTMLElement {\n  #abortController: AbortController\n\n  alertSelectedCount = 0\n\n  @target alertsBulkActionContainer: HTMLElement\n  @target alertsSelectedCountText: HTMLElement\n  @targets bulkActionItemsContainers: HTMLElement[]\n  @target filterContainer: HTMLElement\n\n  connectedCallback() {\n    // The abortController and its signal will be used for aborting\n    // the event handlers registered with `addEventListener` when\n    // the element is disconnected.\n    this.#abortController = new AbortController()\n    const {signal} = this.#abortController\n\n    window.addEventListener('alertCheckboxChange', this, {signal})\n  }\n\n  disconnectedCallback() {\n    this.#abortController.abort()\n  }\n\n  handleEvent(event: CustomEvent) {\n    // `handleEvent` will be called when each one of the event listeners\n    // defined in `connectedCallback` is dispatched.\n    if (event.type !== 'alertCheckboxChange') {\n      return\n    }\n\n    this.handleCheckboxChange(event)\n  }\n\n  handleCheckboxChange(event: CustomEvent) {\n    if (event.detail.checked) {\n      this.alertSelectedCount++\n    } else {\n      this.alertSelectedCount--\n    }\n\n    const showBulkEdit = this.alertSelectedCount > 0\n    this.alertsSelectedCountText.hidden = !showBulkEdit\n    this.alertsBulkActionContainer.hidden = !showBulkEdit\n    this.filterContainer.hidden = showBulkEdit\n\n    this.addOrRemoveAlertFromBulkActionForms(event)\n  }\n\n  addOrRemoveAlertFromBulkActionForms(event: CustomEvent) {\n    for (const container of this.bulkActionItemsContainers) {\n      if (event.detail.checked) {\n        const input = document.createElement('input')\n        input.setAttribute('type', 'hidden')\n        input.setAttribute('name', 'ids[]')\n        input.setAttribute('value', event.detail.value)\n        container.appendChild(input)\n      } else {\n        const inputElement = container.querySelector(`\n          input[name=\"ids[]\"][value=\"${event.detail.value}\"]\n        `)\n        if (inputElement) {\n          container.removeChild(inputElement)\n        }\n      }\n    }\n  }\n}\n"],"names":["DependabotAlertTableHeaderElement","HTMLElement","connectedCallback","AbortController","abortController","signal","window","addEventListener","disconnectedCallback","abort","handleEvent","event","type","handleCheckboxChange","detail","checked","alertSelectedCount","showBulkEdit","alertsSelectedCountText","hidden","alertsBulkActionContainer","filterContainer","addOrRemoveAlertFromBulkActionForms","container","bulkActionItemsContainers","input","document","createElement","setAttribute","value","appendChild","inputElement","querySelector","removeChild","target","targets","controller"],"sourceRoot":""}