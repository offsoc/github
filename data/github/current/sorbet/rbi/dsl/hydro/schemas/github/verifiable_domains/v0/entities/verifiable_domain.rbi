# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::VerifiableDomains::V0::Entities::VerifiableDomain`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::VerifiableDomains::V0::Entities::VerifiableDomain`.

class Hydro::Schemas::Github::VerifiableDomains::V0::Entities::VerifiableDomain
  sig do
    params(
      approved: T.nilable(T::Boolean),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      domain: T.nilable(String),
      id: T.nilable(Integer),
      owner_id: T.nilable(Integer),
      owner_type: T.nilable(T.any(Symbol, Integer)),
      updated_at: T.nilable(Google::Protobuf::Timestamp),
      verified: T.nilable(T::Boolean)
    ).void
  end
  def initialize(approved: nil, created_at: nil, domain: nil, id: nil, owner_id: nil, owner_type: nil, updated_at: nil, verified: nil); end

  sig { returns(T::Boolean) }
  def approved; end

  sig { params(value: T::Boolean).void }
  def approved=(value); end

  sig { void }
  def clear_approved; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_domain; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_owner_type; end

  sig { void }
  def clear_updated_at; end

  sig { void }
  def clear_verified; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(String) }
  def domain; end

  sig { params(value: String).void }
  def domain=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def owner_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def owner_type=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end

  sig { returns(T::Boolean) }
  def verified; end

  sig { params(value: T::Boolean).void }
  def verified=(value); end
end
