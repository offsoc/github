{"version":3,"file":"enterprise-onboarding-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/analytics-overrides/analytics-overrides.ts","ui/packages/details-dialog/details-dialog.ts","ui/packages/enterprise-onboarding/App.tsx","ui/packages/enterprise-onboarding/components/BorderBox.tsx","ui/packages/enterprise-onboarding/components/HierarchicalOrgCard.tsx","ui/packages/enterprise-onboarding/components/OrganizationNameMessage.tsx","ui/packages/enterprise-onboarding/routes/OnboardingOrganizations.tsx","ui/packages/enterprise-onboarding/enterprise-onboarding.ts","ui/packages/failbot/failbot.ts","ui/packages/html-safe-nonce/html-safe-nonce.ts","ui/packages/trusted-types-policies/server-x-safe-html.ts","ui/packages/fetch-utils/fetch-utils.ts","ui/packages/is-hash-navigation/is-hash-navigation.ts","ui/packages/trusted-types-policies/parse-html.ts","ui/packages/parse-html/parse-html.ts","ui/packages/sudo/sudo.ts","ui/packages/test-id-props/test-id-props.ts","ui/packages/trusted-types-policies/policy.ts","ui/packages/trusted-types/trusted-types.ts","ui/packages/use-analytics/use-analytics.ts","ui/packages/use-debounce/use-debounce.ts","ui/packages/use-navigate/use-navigate.ts","ui/packages/use-tracking-ref/use-tracking-ref.ts","ui/packages/verified-fetch/verified-fetch.ts","ui/packages/webauthn-support-level/webauthn-support-level.ts","ui/packages/github-avatar/GitHubAvatar.tsx","ui/packages/react-core/JsonRoute.tsx","ui/packages/react-core/Link.tsx"],"sourcesContent":["function queryLast<T extends Element>(selector: string): T | undefined {\n  const list = document.querySelectorAll<T>(selector)\n  if (list.length > 0) {\n    return list[list.length - 1]\n  }\n}\n\nfunction pagePathname() {\n  const locationOverride = queryLast<HTMLMetaElement>('meta[name=analytics-location]')\n  if (locationOverride) {\n    return locationOverride.content\n  } else {\n    return window.location.pathname\n  }\n}\n\nfunction pageQuery() {\n  const stripParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-query-strip]')\n  let search = ''\n\n  if (!stripParams) {\n    search = window.location.search\n  }\n\n  const extraParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-params]')\n  if (extraParams) {\n    search += (search ? '&' : '?') + extraParams.content\n  }\n\n  for (const meta of document.querySelectorAll<HTMLMetaElement>('meta[name=analytics-param-rename]')) {\n    const names = meta.content.split(':', 2)\n    search = search.replace(new RegExp(`(^|[?&])${names[0]}($|=)`, 'g'), `$1${names[1]}$2`)\n  }\n\n  return search\n}\n\nexport function requestUri() {\n  return `${window.location.protocol}//${window.location.host}${pagePathname() + pageQuery()}`\n}\n","import {fire} from 'delegated-events'\n\ntype Options = {\n  content: DocumentFragment | Promise<DocumentFragment> | Node\n  dialogClass?: string\n  detailsClass?: string\n  labelledBy?: string | null\n  label?: string | null\n  errorMessage?: string | null\n}\n\n// Open the site-wide Details Dialog element.\nexport async function dialog(options: Options): Promise<HTMLElement> {\n  const dialogTemplate = document.querySelector<HTMLTemplateElement>('#site-details-dialog')!\n  const clonedDetails = dialogTemplate.content.cloneNode(true) as Element\n  const details = clonedDetails.querySelector<HTMLElement>('details')!\n  const detailsDialog = details.querySelector<HTMLElement>('details-dialog')!\n  const spinner = details.querySelector<HTMLElement>('.js-details-dialog-spinner')!\n  if (options.detailsClass) details.classList.add(...options.detailsClass.split(' '))\n  if (options.dialogClass) detailsDialog.classList.add(...options.dialogClass.split(' '))\n\n  if (options.label) {\n    detailsDialog.setAttribute('aria-label', options.label)\n  } else if (options.labelledBy) {\n    detailsDialog.setAttribute('aria-labelledby', options.labelledBy)\n  }\n\n  document.body.append(clonedDetails)\n  try {\n    const content = await options.content\n    spinner.remove()\n    detailsDialog.prepend(content)\n  } catch (error) {\n    spinner.remove()\n    // create a span with the error message\n    const errorSpan = document.createElement('span')\n    errorSpan.textContent = options.errorMessage || \"Couldn't load the content\"\n    errorSpan.classList.add('my-6')\n    errorSpan.classList.add('mx-4')\n    detailsDialog.prepend(errorSpan)\n  }\n\n  details.addEventListener('toggle', () => {\n    if (details.hasAttribute('open')) return\n    fire(detailsDialog, 'dialog:remove')\n    details.remove()\n  })\n\n  return detailsDialog\n}\n","import type React from 'react'\n\n/**\n * The App component is used to render content which should be present on _all_ routes within this app\n */\nexport function App(props: {children?: React.ReactNode}) {\n  return <>{props.children}</>\n}\n\ntry{ App.displayName ||= 'App' } catch {}","import {Box} from '@primer/react'\nimport type {BetterSystemStyleObject} from '@primer/react/lib-esm/sx'\n\ninterface BorderBoxProps {\n  children: React.ReactNode\n  sx?: BetterSystemStyleObject\n}\n\nexport function BorderBox({children, sx, ...rest}: BorderBoxProps) {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        border: 1,\n        borderStyle: 'solid',\n        borderColor: 'border.muted',\n        borderRadius: 2,\n        ...sx,\n      }}\n      {...rest}\n    >\n      {children}\n    </Box>\n  )\n}\n\ntry{ BorderBox.displayName ||= 'BorderBox' } catch {}","import {Box, Octicon, Text} from '@primer/react'\nimport {OrganizationIcon, type Icon} from '@primer/octicons-react'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {BorderBox} from './BorderBox'\n\ninterface HierarchicalOrgCardProps {\n  title: string\n  description?: string\n  icon?: Icon\n  borderStyle?: 'solid' | 'dashed'\n}\n\nexport function HierarchicalOrgCard({title, description, icon, borderStyle = 'solid'}: HierarchicalOrgCardProps) {\n  const titleOnly = description ? false : true\n  return (\n    <Box\n      sx={{\n        paddingY: 3,\n        display: 'flex',\n        position: 'relative',\n        paddingLeft: '23px',\n        marginLeft: '23px',\n        '&::after, &::before': {\n          position: 'absolute',\n          left: 0,\n          display: 'block',\n          content: '\"\"',\n          backgroundColor: 'border.default',\n        },\n        '&::after': {\n          top: '50%',\n          width: '23px',\n          height: '1px',\n        },\n        '&::before': {\n          top: 0,\n          height: '100%',\n          width: '1px',\n        },\n        '&:last-child::before': {\n          height: '50%',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          position: 'absolute',\n          top: 'calc(50% - 4px)',\n          left: '-4px',\n          zIndex: 1,\n          width: '9px',\n          height: '9px',\n          backgroundColor: 'canvas.default',\n          border: '1px solid',\n          borderColor: 'border.default',\n          borderRadius: '50%',\n        }}\n      />\n      <BorderBox sx={{alignItems: 'center', gap: 2, p: 3, width: '100%', borderStyle}}>\n        <BorderBox\n          {...testIdProps('org-card-icon')}\n          sx={{\n            justifyContent: 'center',\n            alignItems: 'center',\n            p: 2,\n            color: 'fg.muted',\n            width: '40px',\n            height: '40px',\n          }}\n        >\n          <Octicon icon={icon || OrganizationIcon} size={16} />\n        </BorderBox>\n        <div>\n          <Text\n            {...testIdProps('org-card-title')}\n            sx={{display: 'block', fontWeight: 'bold', fontSize: '14px', color: titleOnly ? 'fg.muted' : 'fg.default'}}\n          >\n            {title}\n          </Text>\n          <Text {...testIdProps('org-card-description')} sx={{display: 'block', fontSize: '12px', color: 'fg.muted'}}>\n            {description}\n          </Text>\n        </div>\n      </BorderBox>\n    </Box>\n  )\n}\n\ntry{ HierarchicalOrgCard.displayName ||= 'HierarchicalOrgCard' } catch {}","import {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport type {OrgNameStatus} from '../types'\n\ntype OrganizationNameMessageProps = OrgNameStatus | Record<string, never>\n\nexport function OrganizationNameMessage(props: OrganizationNameMessageProps) {\n  const {\n    exists = false,\n    is_name_modified = false,\n    name = '',\n    not_alphanumeric = false,\n    over_max_length = false,\n    unavailable = false,\n  } = props || {}\n  if (unavailable) {\n    return <UnavailableNameMessage name={name} />\n  } else if (exists) {\n    return <ExistsNameMessage name={name} />\n  } else if (not_alphanumeric) {\n    return <NotAlphanumericNameMessage name={name} />\n  } else if (over_max_length) {\n    return <OverMaxLengthNameMessage />\n  }\n\n  return (\n    <span {...testIdProps('org-name-message')}>\n      <span className=\"d-block\">This will be the name of your organization on GitHub.</span>\n      <span>\n        Your URL will be: {ssrSafeLocation.origin}/<strong>{name}</strong>\n        {is_name_modified && ', which has been adjusted to comply with our naming rules'}\n        {name && '.'}\n      </span>\n    </span>\n  )\n}\n\nfunction UnavailableNameMessage({name}: {name: string}) {\n  return (\n    <span {...testIdProps('org-name-message-unavailable')}>Organization name &lsquo;{name}&rsquo; is unavailable.</span>\n  )\n}\n\nfunction ExistsNameMessage({name}: {name: string}) {\n  return <span {...testIdProps('org-name-message-exists')}>The name &lsquo;{name}&rsquo; is already taken.</span>\n}\n\nfunction NotAlphanumericNameMessage({name}: {name: string}) {\n  const loginValidationMessage =\n    'may only contain alphanumeric characters or single hyphens, and cannot begin or end with a hyphen'\n  return (\n    <span {...testIdProps('org-name-message-non-alphanumeric')}>\n      The name {name.length > 0 && '&lsquo;{name}&rsquo;'} {loginValidationMessage}.\n    </span>\n  )\n}\n\nfunction OverMaxLengthNameMessage() {\n  const loginMaxLength = 39\n  return (\n    <span {...testIdProps('org-name-message-over-max')}>\n      Username is too long (maximum is {loginMaxLength} characters).\n    </span>\n  )\n}\n\ntry{ OrganizationNameMessage.displayName ||= 'OrganizationNameMessage' } catch {}\ntry{ UnavailableNameMessage.displayName ||= 'UnavailableNameMessage' } catch {}\ntry{ ExistsNameMessage.displayName ||= 'ExistsNameMessage' } catch {}\ntry{ NotAlphanumericNameMessage.displayName ||= 'NotAlphanumericNameMessage' } catch {}\ntry{ OverMaxLengthNameMessage.displayName ||= 'OverMaxLengthNameMessage' } catch {}","import {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {Box, Button, Flash, FormControl, Heading, Text, TextInput} from '@primer/react'\nimport {OrganizationIcon, StopIcon, XIcon} from '@primer/octicons-react'\nimport {GitHubAvatar} from '@github-ui/github-avatar'\nimport {enterprisePath, fullUrl} from '@github-ui/paths'\nimport {useState, useCallback, useMemo} from 'react'\nimport {Link} from '@github-ui/react-core/link'\nimport sudo from '@github-ui/sudo'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {useDebounce} from '@github-ui/use-debounce'\nimport {useNavigate} from '@github-ui/use-navigate'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {BorderBox} from '../components/BorderBox'\nimport {HierarchicalOrgCard} from '../components/HierarchicalOrgCard'\nimport {OrganizationNameMessage} from '../components/OrganizationNameMessage'\nimport type {OrgNameStatus} from '../types'\nimport {useClickAnalytics} from '@github-ui/use-analytics'\n\nexport interface OnboardingOrganizationsPayload {\n  business: {\n    name: string\n    slug: string\n    avatar_url: string\n  }\n}\n\nexport function OnboardingOrganizations() {\n  const navigate = useNavigate()\n  const [orgName, setOrgName] = useState('')\n  const payload = useRoutePayload<OnboardingOrganizationsPayload>()\n  const {business} = payload\n  const [orgNameStatus, setOrgNameStatus] = useState<OrgNameStatus | Record<string, never>>({})\n  const [errorMessage, setErrorMessage] = useState('')\n  const enterpriseBasePath = enterprisePath({slug: business.slug})\n  const gettingStartedPath = `${enterpriseBasePath}/getting-started`\n  const {sendClickAnalyticsEvent} = useClickAnalytics()\n\n  const checkOrgName = useCallback(async () => {\n    if (!orgName.trim()) {\n      setOrgNameStatus({})\n      return\n    }\n\n    try {\n      const response = await verifiedFetchJSON(`/organizations/check_name`, {\n        method: 'POST',\n        body: {value: orgName},\n      })\n\n      if (response.status === 406) {\n        setOrgNameStatus({})\n        setErrorMessage(\n          'You have exceeded a rate limit. Please wait a few minutes before you try again; in some cases this may take up to an hour.',\n        )\n      } else {\n        const data = (await response.json()) || {}\n        setOrgNameStatus(data)\n        setErrorMessage('')\n      }\n    } catch (error) {\n      setOrgNameStatus({})\n      setErrorMessage('Unknown error occurred. Please try again later.')\n      throw error\n    }\n  }, [orgName])\n\n  const debouncedCheckOrgName = useDebounce(checkOrgName, 200)\n\n  const validationStatus = useMemo(() => {\n    if (!orgNameStatus || Object.keys(orgNameStatus).length === 0) {\n      return undefined\n    } else if (\n      orgNameStatus.exists ||\n      orgNameStatus.not_alphanumeric ||\n      orgNameStatus.over_max_length ||\n      orgNameStatus.unavailable ||\n      errorMessage\n    ) {\n      return 'error'\n    }\n\n    return 'success'\n  }, [orgNameStatus, errorMessage])\n\n  const handleSubmit = useCallback(\n    async (e?: React.FormEvent) => {\n      e?.preventDefault()\n\n      sendClickAnalyticsEvent({\n        category: 'enterprise_trial_account',\n        action: 'enterprise_onboarding_create_organization',\n        label: 'ref_cta:create_organization_and_continue',\n      })\n\n      if (!(await sudo())) {\n        setErrorMessage('Unauthorized')\n        return\n      }\n\n      try {\n        const result = await verifiedFetchJSON(`${enterpriseBasePath}/organizations`, {\n          method: 'POST',\n          body: {organization: {profile_name: orgName, login: orgNameStatus.name}},\n        })\n\n        if (result.ok) {\n          navigate(gettingStartedPath)\n        } else {\n          const {message} = await result.json()\n          setErrorMessage(message)\n        }\n      } catch (error) {\n        setErrorMessage('Error creating organization')\n      }\n    },\n    [orgName, orgNameStatus, enterpriseBasePath, gettingStartedPath, navigate, sendClickAnalyticsEvent],\n  )\n\n  const handleSkip = async () => {\n    sendClickAnalyticsEvent({\n      category: 'enterprise_trial_account',\n      action: 'enterprise_onboarding_skip_create_organization',\n      label: 'ref_cta:skip_this_step',\n    })\n  }\n\n  return (\n    <>\n      {errorMessage && (\n        <Flash {...testIdProps('flash-error-text')} variant=\"danger\" sx={{mt: 3}}>\n          <StopIcon />\n          <span>{errorMessage}</span>\n          <Box sx={{float: 'right', cursor: 'pointer'}} onClick={() => setErrorMessage('')}>\n            <XIcon />\n          </Box>\n        </Flash>\n      )}\n      <div className=\"container-md p-1 mt-5\" data-hpc>\n        <Box sx={{display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 2, mb: 1}}>\n          <Heading as=\"h1\">Create an organization for your enterprise</Heading>\n          <Text sx={{color: 'fg.muted', textAlign: 'center'}}>\n            A key part of enterprise is that you can manage all of your organizations together under one roof. It is\n            highly recommended that you add at least 1 organization to get the most out of your trial.\n          </Text>\n\n          <Box sx={{width: '100%', py: 3}}>\n            <Box as=\"form\" sx={{mb: 3}} onSubmit={handleSubmit} data-turbo={true}>\n              <FormControl required={true}>\n                <FormControl.Label>Organization account name</FormControl.Label>\n                <TextInput\n                  {...testIdProps('org-name-input')}\n                  value={orgName}\n                  autoFocus\n                  onChange={e => {\n                    const name = e.target.value\n                    setOrgName(name)\n                    debouncedCheckOrgName()\n                  }}\n                  validationStatus={validationStatus}\n                  sx={{width: '100%'}}\n                />\n                {validationStatus === undefined && (\n                  <FormControl.Caption>\n                    <OrganizationNameMessage {...orgNameStatus} />\n                  </FormControl.Caption>\n                )}\n                {validationStatus !== undefined && (\n                  <FormControl.Validation variant={validationStatus}>\n                    <OrganizationNameMessage {...orgNameStatus} />\n                  </FormControl.Validation>\n                )}\n              </FormControl>\n            </Box>\n\n            <BorderBox sx={{flexDirection: 'column', p: 4}}>\n              <Box sx={{display: 'flex', gap: 3}}>\n                <GitHubAvatar square={true} size={48} src={business.avatar_url} />\n                <div>\n                  <Text\n                    {...testIdProps('enterprise-name')}\n                    sx={{display: 'block', fontSize: '20px', fontWeight: 'bold'}}\n                  >\n                    {business.name}\n                  </Text>\n                  <Text\n                    {...testIdProps('enterprise-url')}\n                    sx={{display: 'block', fontSize: '12px', color: 'fg.subtle'}}\n                  >\n                    {fullUrl({path: enterpriseBasePath})}\n                  </Text>\n                </div>\n              </Box>\n              <HierarchicalOrgCard\n                title={orgName || 'Your new organization'}\n                description={fullUrl({path: orgNameStatus?.name || 'YourOrganization'})}\n                icon={OrganizationIcon}\n              />\n              <HierarchicalOrgCard\n                title=\"You will be able to add more organizations during your trial\"\n                borderStyle=\"dashed\"\n              />\n            </BorderBox>\n          </Box>\n        </Box>\n        <Box sx={{width: '100%', display: 'flex', gap: 2, justifyContent: 'end'}}>\n          <Button {...testIdProps('skip-button')} onClick={handleSkip} as={Link} to={gettingStartedPath}>\n            Skip this step\n          </Button>\n          <Button {...testIdProps('continue-button')} variant=\"primary\" onClick={handleSubmit}>\n            Create organization and continue\n          </Button>\n        </Box>\n      </div>\n    </>\n  )\n}\n\ntry{ OnboardingOrganizations.displayName ||= 'OnboardingOrganizations' } catch {}","import {App} from './App'\nimport {OnboardingOrganizations} from './routes/OnboardingOrganizations'\nimport {registerReactAppFactory} from '@github-ui/react-core/register-app'\nimport {jsonRoute} from '@github-ui/react-core/json-route'\n\nregisterReactAppFactory('enterprise-onboarding', () => ({\n  App,\n  routes: [jsonRoute({path: '/enterprises/:slug/onboarding/organizations/new', Component: OnboardingOrganizations})],\n}))\n","// Report uncaught JS errors to Sentry\n//   https://sentry.io/github/github-js\n\nimport {getOrCreateClientId} from '@github/hydro-analytics-client'\nimport {isSupported} from '@github/browser-support'\nimport {parse} from 'stacktrace-parser'\nimport {requestUri} from '@github-ui/analytics-overrides'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {getSoftNavReferrer} from '@github-ui/soft-nav/utils'\n\nlet extensionErrors = false\nlet errorsReported = 0\nconst loadTime = Date.now()\n// network error messages are not consistent across browsers, this is a list of known messages for chrome and firefox\nexport const EXPECTED_NETWORK_ERROR_MESSAGES = new Set([\n  'Failed to fetch',\n  'NetworkError when attempting to fetch resource.',\n])\n\ntype ErrorContext = {\n  message?: string\n}\n\n// Check if an arbitrary object is an error, or at least an object that satisfies the interface of an error,\n// with the necessary information to be able to report it to Sentry.\nfunction isError(error: unknown): error is Error {\n  // Check if it's a definite instance of an error\n  if (error instanceof Error) return true\n  // Otherwise, check that it at least satisfies the interface of an error\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'name' in error &&\n    typeof error.name === 'string' &&\n    'message' in error &&\n    typeof error.message === 'string'\n  )\n}\n\n/** Tries to serialize an arbitrary error value that is not an Error object, and returns a default message otherwise */\nfunction serializeNonError(error: unknown): string {\n  try {\n    return JSON.stringify(error)\n  } catch {\n    return 'Unserializable'\n  }\n}\n\nfunction isExpectedError(error: Error): boolean {\n  // We use AbortController to control events and some workflows. When we call `abort()` on it, it will raise an\n  // `AbortError` which doesn't represent a real error, so we don't want to report it.\n  if (error.name === 'AbortError') return true\n  // Failed to fetch errors are usually related to the user's network connection. They also do not represent\n  // real errors related to our code, so we will also ignore them.\n  if (error.name === 'TypeError' && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n  // For memex we use an ApiError class to represent errors returned from the API\n  // Additional details in the format of ApiErrorOpts are affixed to the name as a stringified JSON object\n  // so we just need to ensure the error name starts with ApiError\n  // see ui/packages/memex/src/client/platform/api-error.ts for more details.\n  if (error.name.startsWith('ApiError') && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n\n  return false\n}\n\n// @deprecated Re-throw the caught exception instead.\nexport function reportError(error: unknown, context: ErrorContext = {}) {\n  if (isFeatureEnabled('FAILBOT_HANDLE_NON_ERRORS')) {\n    if (!isError(error)) {\n      if (isIgnoredNonError(error)) return\n\n      // Create an error instance so that we can get the stacktrace of how this was reported\n      const errorForStackTrace = new Error()\n      const serializedErrorValue = serializeNonError(error)\n      // Construct a custom error object so we can keep track of anywhere that we report an error that isn't an Error object\n      const newError: PlatformJavascriptError = {\n        type: 'UnknownError',\n        value: `Unable to report error, due to a thrown non-Error type: ${typeof error}, with value ${serializedErrorValue}`,\n        stacktrace: stacktrace(errorForStackTrace),\n        catalogService: undefined,\n      }\n      report(errorContext(newError, context))\n      return\n    }\n    if (!isExpectedError(error)) {\n      report(errorContext(formatError(error), context))\n    }\n  } else {\n    // Without feature flag, we will cast the `error` variable which was implicitly the old\n    // behavior of the non-feature flagged code.\n    if (!isExpectedError(error as Error)) {\n      report(errorContext(formatError(error as Error), context))\n    }\n  }\n}\n\n// Report context info to Sentry.\nasync function report(context: PlatformReportBrowserErrorInput) {\n  if (!reportable()) return\n\n  const url = document.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-errors-url\"]')?.content\n  if (!url) return\n\n  if (isExtensionError(context.error.stacktrace)) {\n    extensionErrors = true\n    return\n  }\n\n  errorsReported++\n\n  try {\n    await fetch(url, {method: 'post', body: JSON.stringify(context)})\n  } catch {\n    // Error reporting failed so do nothing.\n  }\n}\n\nfunction formatError(error: Error): PlatformJavascriptError {\n  return {\n    type: error.name,\n    value: error.message,\n    stacktrace: stacktrace(error),\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    catalogService: (error as any)['catalogService'],\n  }\n}\n\nfunction errorContext(error: PlatformJavascriptError, context: ErrorContext = {}): PlatformReportBrowserErrorInput {\n  return Object.assign(\n    {\n      error,\n      sanitizedUrl: requestUri() || window.location.href,\n      readyState: document.readyState,\n      referrer: getSoftNavReferrer(),\n      timeSinceLoad: Math.round(Date.now() - loadTime),\n      user: pageUser() || undefined,\n      bundler,\n      ui: Boolean(document.querySelector('meta[name=\"ui\"]')),\n    },\n    context,\n  )\n}\n\nexport function stacktrace(error: Error): PlatformStackframe[] {\n  return parse(error.stack || '').map(frame => ({\n    filename: frame.file || '',\n    function: String(frame.methodName),\n    lineno: (frame.lineNumber || 0).toString(),\n    colno: (frame.column || 0).toString(),\n  }))\n}\n\nconst extensions = /(chrome|moz|safari)-extension:\\/\\//\n\n// Does this stack trace contain frames from browser extensions?\nfunction isExtensionError(stack: PlatformStackframe[]): boolean {\n  return stack.some(frame => extensions.test(frame.filename) || extensions.test(frame.function))\n}\n\nexport function pageUser() {\n  const login = document.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n  if (login) return login\n\n  const clientId = getOrCreateClientId()\n  return `anonymous-${clientId}`\n}\n\nlet unloaded = false\nssrSafeWindow?.addEventListener('pageshow', () => (unloaded = false))\nssrSafeWindow?.addEventListener('pagehide', () => (unloaded = true))\n\nfunction reportable() {\n  return !unloaded && !extensionErrors && errorsReported < 10 && isSupported()\n}\n\nif (typeof BroadcastChannel === 'function') {\n  const sharedWorkerErrorChannel = new BroadcastChannel('shared-worker-error')\n  sharedWorkerErrorChannel.addEventListener('message', event => {\n    // SharedWorker will emit a formatted error\n    reportError(event.data.error)\n  })\n}\n\nconst ignoredErrorMessages = [\n  'Object Not Found Matching Id', // from Microsoft Outlook SafeLink crawler\n  'Not implemented on this platform', // LastPass Safari extension\n  `provider because it's not your default extension`, // MetaMask extension\n]\n\n/**\n * We see a fair number of \"errors\" which are not actually Error objects. This function will return true if the\n * error is one of these known non-Error types and has content which we know can safely be ignored.\n * Most of these errors come from specific browsers or extensions which we can't control, so we just ignore them.\n * @param error An error that is not an Error object\n * @returns boolean\n */\nfunction isIgnoredNonError(error: unknown) {\n  if (!error || typeof error === 'boolean' || typeof error === 'number') {\n    // Rejected with a type that is not useful to report. Just ignore it.\n    return true\n  } else if (typeof error === 'string') {\n    // rejected with a string. See if it's a known error that we can ignore\n    if (ignoredErrorMessages.some(message => error.includes(message))) {\n      return true\n    }\n  } else if (\n    typeof error === 'object' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).message === 'string' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).code === 'number'\n  ) {\n    // We see an object like {\"message\":\"Not connected\",\"code\":4900} from some extension, likely MetaMask. Ignore these\n    return true\n  }\n\n  return false\n}\n","//  Get document's HTML Safe nonce.\n//\n// Example:\n//\n//   <meta name=\"html-safe-nonce\" content=\"de43a1f355c711f7f705e4f971964391ac0c8e13\">\nexport function getDocumentHtmlSafeNonces(document: Document): string[] {\n  const nonces = [...document.querySelectorAll<HTMLMetaElement>('meta[name=html-safe-nonce]')].map(meta => meta.content)\n\n  if (nonces.length < 1) {\n    throw new Error('could not find html-safe-nonce on document')\n  }\n  return nonces\n}\n\ninterface Response {\n  headers: Headers\n  status: number\n}\n\nclass ResponseError extends Error {\n  response: Response\n\n  constructor(message: string, response: Response) {\n    super(`${message} for HTTP ${response.status}`)\n    this.response = response\n  }\n}\n\nexport function verifyResponseHtmlSafeNonce(nonces: string[], response: Response, allowJson = false) {\n  const contentType = response.headers.get('content-type') || ''\n  if (!allowJson && !contentType.startsWith('text/html')) {\n    throw new ResponseError(`expected response with text/html, but was ${contentType}`, response)\n  }\n\n  if (allowJson && !(contentType.startsWith('text/html') || contentType.startsWith('application/json'))) {\n    throw new ResponseError(`expected response with text/html or application/json, but was ${contentType}`, response)\n  }\n\n  const responseNonce = response.headers.get('x-html-safe')\n  if (!responseNonce) {\n    throw new ResponseError(`missing X-HTML-Safe nonce`, response)\n  } else if (!nonces.includes(responseNonce)) {\n    throw new ResponseError(`response X-HTML-Safe nonce did not match`, response)\n  }\n}\n","import {getDocumentHtmlSafeNonces, verifyResponseHtmlSafeNonce} from '@github-ui/html-safe-nonce'\nimport {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {trustedTypesPolicy} from './policy'\n\nconst policyName = 'server-x-safe-html'\n\n// This is a no-op policy to be used with server-side rendered HTML.\nexport const serverXSafeHTMLPolicy = ghTrustedTypes.createPolicy(policyName, {\n  createHTML: (s: string, response: Response) => {\n    return trustedTypesPolicy.apply({\n      policy: () => {\n        verifyResponseHtmlSafeNonce(getDocumentHtmlSafeNonces(document), response)\n        return s\n      },\n      policyName,\n      fallback: s,\n      silenceErrorReporting: true,\n    })\n  },\n})\n","import {parseHTML} from '@github-ui/parse-html'\nimport {serverXSafeHTMLPolicy} from '@github-ui/trusted-types-policies/server-x-safe-html'\n\nexport async function fetchSafeDocumentFragment(\n  document: Document,\n  url: RequestInfo,\n  options?: RequestInit,\n): Promise<DocumentFragment> {\n  const request = new Request(url, options)\n  request.headers.append('X-Requested-With', 'XMLHttpRequest')\n  const response = await self.fetch(request)\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error(`HTTP ${response.status}${response.statusText || ''}`)\n  }\n  const trustedHTML = serverXSafeHTMLPolicy.createHTML(await response.text(), response)\n  return parseHTML(document, trustedHTML)\n}\n\nexport function fetchPoll(\n  url: RequestInfo,\n  options?: RequestInit,\n  timeBetweenRequests = 1000,\n  acceptedStatusCodes = [200],\n  pollStatusCodes = [202],\n): Promise<Response> {\n  return (async function poll(wait: number): Promise<Response> {\n    const request = new Request(url, options)\n    request.headers.append('X-Requested-With', 'XMLHttpRequest')\n    const response = await self.fetch(request)\n\n    if (pollStatusCodes.includes(response.status)) {\n      await new Promise(resolve => setTimeout(resolve, wait))\n      return poll(wait * 1.5)\n    }\n    if (acceptedStatusCodes.includes(response.status)) {\n      return response\n    }\n    if (response.status < 200 || response.status >= 300) {\n      throw new Error(`HTTP ${response.status}${response.statusText || ''}`)\n    }\n    throw new Error(`Unexpected ${response.status} response status from poll endpoint`)\n  })(timeBetweenRequests)\n}\n\ntype RetryResult = Response | 'retry'\ntype FetchRetryOptions = {\n  // Base wait time between retries\n  // this will be multiplied with the current attempt to perform a backoff strategy\n  // Defaults to 500ms\n  wait?: number\n  // List of accepted status codes that should not be retried. Defaults to [200]\n  acceptedStatusCodes?: number[]\n  // Max number of attempts. Defaults to 3\n  max?: number\n  // Current retry attempt. Starts at 0\n  attempt?: number\n}\n\n// Execute a fetch call in a callback and retry it up to `options.max` times\n// Each retry will be delayed `options.wait` * `options.attempt`\nexport async function fetchRetry(\n  url: RequestInfo,\n  fetchOptions?: RequestInit,\n  options?: FetchRetryOptions,\n): Promise<Response> {\n  const {wait = 500, acceptedStatusCodes = [200], max = 3, attempt = 0} = options || {}\n\n  const retry: () => Promise<RetryResult> = async () => {\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          const request = new Request(url, fetchOptions)\n          request.headers.append('X-Requested-With', 'XMLHttpRequest')\n          const response = await self.fetch(request)\n          if (acceptedStatusCodes.includes(response.status) || attempt + 1 === max) {\n            return resolve(response)\n          }\n\n          // The response failed, we indicate that it must be retried\n          resolve('retry')\n        } catch (err) {\n          // Only non successful HTTP status codes are controlled by this retry mechanism\n          // Any other error is propagated\n          reject(err)\n        }\n      }, wait * attempt)\n    })\n  }\n\n  const result = await retry()\n  if (result !== 'retry') {\n    return result\n  }\n\n  return fetchRetry(url, fetchOptions, {wait, acceptedStatusCodes, max, attempt: attempt + 1})\n}\n","// Check if the navigation is only a hash change.\nconst isHashNavigation = (currentUrl: string, targetUrl: string): boolean => {\n  const current = new URL(currentUrl, window.location.origin)\n  const target = new URL(targetUrl, window.location.origin)\n  const hasHash = target.href.includes('#')\n\n  return (\n    hasHash && current.host === target.host && current.pathname === target.pathname && current.search === target.search\n  )\n}\n\nexport default isHashNavigation\n","import {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {trustedTypesPolicy} from './policy'\n\nconst policyName = 'parse-html-no-op'\n// This is a temporary policy to allow us to migrate to Trusted Types without breaking existing code.\nexport const temporaryPermissiveParseHTMLPolicy = ghTrustedTypes.createPolicy(policyName, {\n  createHTML: (s: string) => {\n    return trustedTypesPolicy.apply({\n      policy: () => s,\n      policyName,\n      fallback: s,\n      sanitize: false,\n      fallbackOnError: true,\n    })\n  },\n})\n","import {temporaryPermissiveParseHTMLPolicy} from '@github-ui/trusted-types-policies/parse-html'\n\nexport function parseHTML(document: Document, html: string): DocumentFragment {\n  const template = document.createElement('template')\n  template.innerHTML = temporaryPermissiveParseHTMLPolicy.createHTML(html)\n  return document.importNode(template.content, true)\n}\n","import {dialog} from '@github-ui/details-dialog'\nimport {fetchSafeDocumentFragment} from '@github-ui/fetch-utils'\nimport type {Kicker} from '@github/remote-form'\nimport {remoteForm} from '@github/remote-form'\nimport {webauthnSupportLevel} from '@github-ui/webauthn-support-level'\n\nlet sudoPromptExist = false\n\n/**\n * Take a URL and add webauthn params to it.\n *\n * @param {string} oldURL - The old URL.\n * @returns {string} - The new URL with added params.\n */\nfunction urlWithParams(oldURL: string): string {\n  const newURL = new URL(oldURL, window.location.origin)\n  const params = new URLSearchParams(newURL.search.slice(1))\n  params.set('webauthn-support', webauthnSupportLevel())\n  newURL.search = params.toString()\n  return newURL.toString()\n}\n\nasync function loadPromptTemplate(): Promise<HTMLTemplateElement> {\n  const link = document.querySelector<HTMLLinkElement>('link[rel=sudo-modal]')!\n  const template = document.querySelector('.js-sudo-prompt')\n  if (template instanceof HTMLTemplateElement) {\n    return template\n  } else if (link) {\n    const fragment = await fetchSafeDocumentFragment(document, urlWithParams(link.href))\n    document.body.appendChild(fragment)\n    return document.querySelector<HTMLTemplateElement>('.js-sudo-prompt')!\n  } else {\n    throw new Error(\"couldn't load sudo prompt\")\n  }\n}\n\nlet succeeded = false\n\n/**\n * Provide a sudo prompt, and return when it has been filled in or dismissed.\n *\n * @returns {Promise<boolean>} - Resolves to `true` if the user successfully authed with sudo.\n */\nexport async function sudoPrompt(currentTarget?: HTMLElement): Promise<boolean> {\n  if (sudoPromptExist) return false\n  sudoPromptExist = true\n  succeeded = false\n  const template = await loadPromptTemplate()\n  const content = template.content.cloneNode(true)\n  const prompt = await dialog({content})\n\n  // open/expanded HTML5 <details> can potentially steal focus from the dialog (https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details)\n  // Example bug: https://github.com/github/authentication/issues/2208\n  // close the open details element that triggered this sudo challenge\n  const details = currentTarget?.closest('details[open]') as HTMLElement\n  if (details) {\n    details.removeAttribute('open')\n  }\n\n  await new Promise<void>(resolve => {\n    prompt.addEventListener(\n      'dialog:remove',\n      function () {\n        // re-add the open attribute to the details that we closed above\n        if (details) {\n          details.setAttribute('open', 'open')\n        }\n        sudoPromptExist = false\n        resolve()\n      },\n      {once: true},\n    )\n  })\n  return succeeded\n}\n\nasync function sudoModalErrorOrClose(\n  form: HTMLFormElement,\n  wants: Kicker,\n  unauthorizedError = 'Sudo authentication failed.',\n  tooManyError = 'Too many authentication attempts. Please try again later.',\n  errorSelector = '.js-sudo-error',\n  inputElementSelector?: string,\n) {\n  try {\n    await wants.text()\n  } catch (error) {\n    // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n    if (!error.response) throw error\n    let errorMessage\n    // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n    switch (error.response.status) {\n      case 401:\n        errorMessage = unauthorizedError\n        break\n      case 429:\n        errorMessage = tooManyError\n        break\n      default:\n        errorMessage = 'An unknown error occurred. Please try again later.'\n    }\n\n    form.querySelector<HTMLElement>(errorSelector)!.textContent = errorMessage\n    form.querySelector<HTMLElement>(errorSelector)!.hidden = false\n    if (inputElementSelector) {\n      form.querySelector<HTMLInputElement>(inputElementSelector)!.value = ''\n    }\n\n    // rethrow error if not expected, only after surfacing it in flash\n    // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n    if (error.response.status !== 401 && error.response.status !== 429) {\n      throw error\n    }\n\n    return\n  }\n  succeeded = true\n  form.closest<HTMLElement>('details')!.removeAttribute('open')\n}\n\nremoteForm('.js-sudo-webauthn-form', async function (form, wants) {\n  await sudoModalErrorOrClose(form, wants)\n})\n\nremoteForm('.js-sudo-github-mobile-form', async function (form, wants) {\n  await sudoModalErrorOrClose(form, wants)\n})\n\nremoteForm('.js-sudo-totp-form', async function (form, wants) {\n  await sudoModalErrorOrClose(form, wants, undefined, undefined, '.flash-error', '#totp')\n})\n\nremoteForm('.js-sudo-password-form', async function (form, wants) {\n  await sudoModalErrorOrClose(\n    form,\n    wants,\n    'Incorrect password.',\n    'Too many password attempts. Please wait and try again.',\n    undefined,\n    '.js-sudo-password',\n  )\n})\n\n/**\n * Check if user is in sudo mode. If not, show a sudo prompt.\n *\n * @returns {Promise<boolean>} - Will be `true` if user is in or got in sudo mode after prompt.\n */\nexport default async function triggerSudoPrompt(currentTarget?: HTMLElement): Promise<boolean> {\n  const response = await fetch('/sessions/in_sudo', {\n    headers: {accept: 'application/json', 'X-Requested-With': 'XMLHttpRequest'},\n  })\n  if (response.ok) {\n    const sudoResponse = await response.text()\n    if (sudoResponse === 'true') {\n      return true\n    }\n  }\n  return sudoPrompt(currentTarget)\n}\n\nexport async function fetchSessionInSudo(): Promise<boolean> {\n  const response = await fetch('/sessions/in_sudo', {\n    headers: {accept: 'application/json', 'X-Requested-With': 'XMLHttpRequest'},\n  })\n  if (response.ok) {\n    const sudoResponse = await response.text()\n    if (sudoResponse === 'true') {\n      return true\n    }\n  }\n  return false\n}\n","export interface TestIdProps {\n  /** Test ID to be queried by automated testing suites */\n  'data-testid'?: string\n}\n\nexport const testIdProps = (value: string): TestIdProps => {\n  return {'data-testid': value}\n}\n","import {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {sendStats} from '@github-ui/stats'\n// eslint-disable-next-line no-restricted-imports\nimport {reportError} from '@github-ui/failbot'\nimport dompurify from 'dompurify'\nimport {sendEvent} from '@github-ui/hydro-analytics'\n\nexport class TrustedTypesPolicyError extends Error {}\n\ninterface PolicyParam {\n  policy: () => string\n  policyName: string\n  fallback: string\n  fallbackOnError?: boolean\n  sanitize?: boolean // report-only mode for now\n  silenceErrorReporting?: boolean\n}\n\nfunction apply({\n  policy,\n  policyName,\n  fallback,\n  fallbackOnError = false,\n  sanitize,\n  silenceErrorReporting = false,\n}: PolicyParam): string {\n  try {\n    if (isFeatureEnabled('BYPASS_TRUSTED_TYPES_POLICY_RULES')) return fallback\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_CALLED', trustedTypesPolicyName: policyName}, false, 0.1)\n    const policyOutput = policy()\n    if (sanitize) {\n      new Promise(resolve => {\n        const startTime = window.performance.now()\n        const sanitized = dompurify.sanitize(policyOutput, {FORBID_ATTR: []})\n        const endTime = window.performance.now()\n        const executionTime = endTime - startTime\n        if (policyOutput.length !== sanitized.length) {\n          const err = new Error('Trusted Types policy output sanitized')\n          const stack = err.stack?.slice(0, 1000)\n          const output = policyOutput.slice(0, 250)\n          sendEvent('trusted_types_policy.sanitize', {\n            policyName,\n            output,\n            stack,\n            outputLength: policyOutput.length,\n            sanitizedLength: sanitized.length,\n            executionTime,\n          })\n          resolve(policyOutput)\n        }\n      })\n    }\n    return policyOutput\n  } catch (e) {\n    if (e instanceof TrustedTypesPolicyError) throw e\n    if (!silenceErrorReporting) reportError(e)\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_ERROR', trustedTypesPolicyName: policyName})\n    if (!fallbackOnError) throw e\n  }\n\n  return fallback\n}\n\nexport const trustedTypesPolicy = {apply}\n","/* eslint no-restricted-globals: ['off', '__TRUSTED_TYPE_POLICIES__'] */\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\n/*\n * Tinyfill for trusted types\n */\n\ninterface GHTrustedTypePolicyOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createHTML: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScript: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScriptURL: (input: string, ...args: any[]) => string\n}\n\ninterface GHTrustedTypePolicyWithName extends GHTrustedTypePolicyOptions {\n  name: string\n}\n\nfunction unimplemented(functionName: string) {\n  return () => {\n    throw new TypeError(`The policy does not implement the function ${functionName}`)\n  }\n}\n\nconst fallbacks = {\n  createHTML: unimplemented('createHTML'),\n  createScript: unimplemented('createScript'),\n  createScriptURL: unimplemented('createScriptURL'),\n}\n\nconst tinyfill = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => ({\n    name,\n    ...fallbacks,\n    ...rules,\n  }),\n}\n\ntype TrustedTypesPolicies = Map<string, GHTrustedTypePolicyOptions>\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var trustedTypes: typeof tinyfill | undefined\n  // We need to store the policies in a global variable so that they accurately track the global policy store in the\n  // browser. This prevents false misses when there is more than one instance of this module loaded on the page.\n  // eslint-disable-next-line no-var\n  var __TRUSTED_TYPE_POLICIES__: TrustedTypesPolicies\n}\n\nconst registeredPolicies: TrustedTypesPolicies = (globalThis.__TRUSTED_TYPE_POLICIES__ ??= new Map())\n\n// eslint-disable-next-line compat/compat\nconst trustedTypes = globalThis.trustedTypes ?? tinyfill\n\nexport const ghTrustedTypes = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => {\n    if (registeredPolicies.has(name)) {\n      sendStats({\n        incrementKey: 'TRUSTED_TYPES_POLICY_INITIALIZED_TWICE',\n      })\n      return registeredPolicies.get(name) as GHTrustedTypePolicyWithName\n    } else {\n      const policy = Object.freeze(trustedTypes.createPolicy(name, rules))\n      registeredPolicies.set(name, policy)\n      return policy\n    }\n  },\n}\n\n// This export is only for testing. Do not import in production code.\nexport const registeredPoliciesForTesting = registeredPolicies\nexport const tinyfillForTesting = tinyfill\n\n/*\n *\n * This is a temporary warning to indicate to hubbers that the following errors are expected and safe to ignore.\n *\n */\nlet hasWarnedHubberAboutTrustedTypes = false\n\nssrSafeDocument?.addEventListener('securitypolicyviolation', (e: SecurityPolicyViolationEvent) => {\n  if (e.violatedDirective === 'require-trusted-types-for' && !hasWarnedHubberAboutTrustedTypes) {\n    // eslint-disable-next-line no-console\n    console.warn(`Hi fellow Hubber!\n    You're probably seeing a Report Only Trusted Types error near this message. This is intended behaviour, staff-only,\n    does not impact application control flow, and is used solely for statistic collection. Unfortunately we\n    can't gather these statistics without adding the above warnings to your console. Sorry about that!\n    Feel free to drop by #prodsec-engineering if you have any additional questions about Trusted Types or CSP.`)\n    hasWarnedHubberAboutTrustedTypes = true\n  }\n})\n","import {useCallback, useContext} from 'react'\nimport {sendEvent} from '@github-ui/hydro-analytics'\nimport {AnalyticsContext} from '@github-ui/analytics-provider/context'\n\nexport interface AnalyticsEvent {\n  category: string\n  action: string\n  label: string\n  [key: string]: unknown\n}\n\ntype SendAnalyticsEventFunction = (\n  eventType: string,\n  target?: string,\n  payload?: {[key: string]: unknown} | AnalyticsEvent,\n) => void\n\n/**\n * Use this hook with the AnalyticsContext to send user analytics events to the data warehouse.\n * This hook will read values from the nearest AnalyticsContext.Provider, though you can override properties directly when sending an event.\n * It uses the `sendEvent` helper from `github/hydro-analytics`,\n * which enriches event context with additional information about the user, repository, and current page.\n * See: https://thehub.github.com/epd/engineering/products-and-services/internal/hydro/installation/browser-events/\n *\n * You can find a list of all included context properties in `app/helpers/octolytics_helper.rb`.\n *\n *\n * @example\n * ```tsx\n * function Component() {\n *   const { sendAnalyticsEvent } = useAnalytics()\n *   return <Button onClick={() => sendAnalyticsEvent('file_tree.close', 'FILE_TREE_TOGGLE')}>CLOSE TREE</Button>\n * }\n * ```\n *\n */\nexport function useAnalytics(): {\n  sendAnalyticsEvent: SendAnalyticsEventFunction\n} {\n  // WARNING: Do not add any hooks here that will cause rerenders on soft navs.\n  const contextData = useContext(AnalyticsContext)\n\n  if (!contextData) {\n    throw new Error('useAnalytics must be used within an AnalyticsContext')\n  }\n  const {appName, category, metadata} = contextData\n\n  return {\n    sendAnalyticsEvent: useCallback(\n      (eventType, target?, payload = {}) => {\n        const context = {\n          react: true,\n          ['app_name']: appName,\n          category,\n          ...metadata,\n        }\n        sendEvent(eventType, {...context, ...payload, target})\n      },\n      [appName, category, metadata],\n    ),\n  }\n}\n\n/**\n * Use this hook with the AnalyticsContext to send user analytics events to the data warehouse.\n * This hook will read values from the nearest AnalyticsContext.Provider, though you can override properties directly when sending an event.\n * It uses the `sendEvent` helper from `github/hydro-analytics`,\n * which enriches event context with additional information about the user, repository, and current page.\n * See: https://thehub.github.com/epd/engineering/products-and-services/internal/hydro/installation/browser-events/\n *\n * You can find a list of all included context properties in `app/helpers/octolytics_helper.rb`.\n *\n *\n * @example\n * ```tsx\n * function Component() {\n *   const { sendClickAnalyticsEvent } = useClickAnalytics()\n *   return <Button onClick={() => sendClickAnalyticsEvent({category: '...', action: '...', label: '...'})}>Submit</Button>\n * }\n * ```\n *\n */\nexport function useClickAnalytics(): {\n  sendClickAnalyticsEvent: (payload?: {[key: string]: unknown} | AnalyticsEvent) => void\n} {\n  const {sendAnalyticsEvent} = useAnalytics()\n  return {\n    sendClickAnalyticsEvent: useCallback(\n      (payload = {}) => {\n        sendAnalyticsEvent('analytics.click', undefined, payload)\n      },\n      [sendAnalyticsEvent],\n    ),\n  }\n}\n","import {useTrackingRef} from '@github-ui/use-tracking-ref'\nimport debounce, {type DebouncedFunc, type DebounceSettings} from 'lodash-es/debounce'\nimport {useEffect, useMemo} from 'react'\n\nexport interface DebounceHookChangeSettings {\n  /**\n   * When the parameters (ie, the wait duration or any settings) are changed or the hook\n   * is unmounted, any pending trailing calls must be handled to avoid potential memory\n   * leaks. This parameter controls the handling strategy. This only has effect if\n   * `trailing` is `true`.\n   *\n   * Options are:\n   *\n   * - `flush` (default): Call pending calls immediately. May result in occasionally calling\n   *   more often than expected. This is the safest way to avoid losing data. If the callback\n   *   is async, care must be taken not to set state or perform other actions if not mounted\n   *   after awaiting.\n   * - `cancel`: Cancel pending calls. May result in dropping calls.\n   */\n  onChangeBehavior?: 'flush' | 'cancel'\n}\n\nexport type UseDebounceSettings = DebounceSettings & DebounceHookChangeSettings\n\n/**\n * Get a debounced version of the provided function. A debounced function will wait to be\n * called until `waitMs` milliseconds have passed since the last invocation. The result of\n * this hook is referentially stable with respect to `fn`, but will change if the other\n * parameters change.\n *\n * @see {@link debounce Lodash's debounce docs} for more details on available options.\n */\nexport const useDebounce = <Fn extends (...args: never[]) => unknown>(\n  fn: Fn,\n  waitMs: number,\n  {leading = false, maxWait, trailing = true, onChangeBehavior = 'flush'}: UseDebounceSettings = {},\n): DebouncedFunc<Fn> => {\n  const fnRef = useTrackingRef(fn)\n\n  const debouncedFn = useMemo(() => {\n    // It's not enough to set `maxWait` to `undefined` in the options object - it needs to not be `in`\n    // the object at all. See: https://github.com/lodash/lodash/issues/5495\n    // For `leading` and `trailing` we default to the default boolean values so they are fine.\n    const options = maxWait === undefined ? {leading, trailing} : {leading, trailing, maxWait}\n\n    return debounce((...args: Parameters<typeof fnRef.current>) => fnRef.current(...args), waitMs, options)\n  }, [fnRef, waitMs, leading, maxWait, trailing])\n\n  useEffect(\n    () => () => {\n      debouncedFn?.[onChangeBehavior]()\n    },\n    [debouncedFn, onChangeBehavior],\n  )\n\n  return debouncedFn\n}\n","import React, {startTransition} from 'react'\nimport {\n  createSearchParams,\n  matchRoutes,\n  resolvePath,\n  useLocation,\n  useNavigate as useReactRouterNavigate,\n  useSearchParams as useReactRouterSearchParams,\n  type NavigateOptions,\n  type To,\n  type URLSearchParamsInit,\n} from 'react-router-dom'\n\nimport isHashNavigation from '@github-ui/is-hash-navigation'\nimport {AppContext} from '@github-ui/react-core/app-context'\nimport {startSoftNav} from '@github-ui/soft-nav/state'\nimport {PREVENT_AUTOFOCUS_KEY} from '@github-ui/react-core/prevent-autofocus'\n\nexport interface NavigateOptionsWithPreventAutofocus extends NavigateOptions {\n  preventAutofocus?: boolean\n}\n\nexport const useNavigate = (): ((to: To, options?: NavigateOptionsWithPreventAutofocus) => void) => {\n  const {routes, history} = React.useContext(AppContext)\n  const reactRouterNavigate = useReactRouterNavigate()\n  return React.useCallback(\n    (to, navigateOptions = {}) => {\n      const pathname = resolvePath(to).pathname\n      const isExternalToApp = !matchRoutes(routes, pathname)\n\n      if (isExternalToApp) {\n        const href = history.createHref(to)\n        ;(async () => {\n          const {softNavigate: turboSoftNavigate} = await import('@github-ui/soft-navigate')\n          turboSoftNavigate(href)\n        })()\n      } else {\n        if (!isHashNavigation(location.href, to.toString())) {\n          startSoftNav('react')\n        }\n        const {preventAutofocus, ...options} = navigateOptions\n        startTransition(() => {\n          reactRouterNavigate(\n            to,\n            preventAutofocus\n              ? {\n                  ...options,\n                  state: {\n                    [PREVENT_AUTOFOCUS_KEY]: true,\n                    ...options.state,\n                  },\n                }\n              : options,\n          )\n          const {turbo, ...state} = window.history.state\n          window.history.replaceState({...state, skipTurbo: true}, '', location.href)\n        })\n      }\n    },\n    [history, reactRouterNavigate, routes],\n  )\n}\n\n/**\n * An implementation of `useSearchParams` that mirrors `react-router-dom`'s `useSearchParams` hook\n * but utilizes `@github-ui/useNavigate` instead of `react-router` `useNavigate` to handle updates.\n */\nexport const useSearchParams = () => {\n  const [searchParams] = useReactRouterSearchParams()\n  const navigate = useNavigate()\n  const {pathname} = useLocation()\n\n  const setSearchParams = React.useCallback<\n    (\n      nextInit?: URLSearchParamsInit | ((prev: URLSearchParams) => URLSearchParamsInit),\n      navigateOpts?: NavigateOptionsWithPreventAutofocus,\n    ) => void\n  >(\n    (nextInit, navigateOptions = {}) => {\n      const newSearchParams = createSearchParams(typeof nextInit === 'function' ? nextInit(searchParams) : nextInit)\n      navigate(\n        {\n          pathname,\n          search: newSearchParams.toString(),\n        },\n        navigateOptions,\n      )\n    },\n    [searchParams, navigate, pathname],\n  )\n\n  return [searchParams, setSearchParams] as const\n}\n","import {useLayoutEffect} from '@github-ui/use-layout-effect'\nimport {useRef} from 'react'\n\nexport function useTrackingRef<T>(value: T): React.MutableRefObject<T> {\n  const ref = useRef(value)\n\n  useLayoutEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref\n}\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  assertRelativePathOrSameOrigin(path)\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\nfunction assertRelativePathOrSameOrigin(path: string) {\n  if (process.env.NODE_ENV === 'test' && !window.location.origin) return\n  const url = new URL(path, window.location.origin)\n  if (url.origin !== window.location.origin) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetch(path, {...init, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetchJSON(path, {...init, headers})\n}\n","import {supported as webauthnSupported} from '@github/webauthn-json/browser-ponyfill'\n\n// Note: the default feedback value stored in the form is 'unknown', but that\n// should not be used unless the JS fails to run.\ntype WebauthnSupportLevel = 'supported' | 'unsupported'\n\n// Calculates a string value to send to the server.\nexport function webauthnSupportLevel(): WebauthnSupportLevel {\n  return webauthnSupported() ? 'supported' : 'unsupported'\n}\n\n// Calculates a string value to send to the server.\nexport async function iuvpaaSupportLevel(): Promise<WebauthnSupportLevel> {\n  if (await window.PublicKeyCredential?.isUserVerifyingPlatformAuthenticatorAvailable()) {\n    return 'supported'\n  }\n  return 'unsupported'\n}\n","import {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {\n  // eslint-disable-next-line no-restricted-imports\n  Avatar,\n  type AvatarProps,\n} from '@primer/react'\nimport {forwardRef, useMemo} from 'react'\n\nexport type GitHubAvatarProps = AvatarProps\n\nexport const GitHubAvatar = forwardRef<HTMLImageElement, GitHubAvatarProps>(function GitHubAvatar(\n  {src, size = 20, ...otherProps}: GitHubAvatarProps,\n  ref,\n) {\n  const avatarUrl = useMemo(() => {\n    // src maybe be relative, e.g. `/mona.png`, in which case the instances main origin should be used,\n    // e.g. \"https://github.com\" for dotcom. If src is a fully quallified URL then the origin argument is ignored.\n    const url = new URL(src, ssrSafeLocation.origin)\n\n    // do not override size if it's already set as query parameter\n    if (!url.searchParams.has('size') && !url.searchParams.has('s')) {\n      // we double size for better rendering on high density pixel screens\n      url.searchParams.set('size', String(Number(size) * 2))\n    }\n\n    return url.toString()\n  }, [src, size])\n\n  return <Avatar ref={ref} src={avatarUrl} size={size} data-testid=\"github-avatar\" {...otherProps} />\n})\n\ntry{ GitHubAvatar.displayName ||= 'GitHubAvatar' } catch {}","import type {ChildRoute, LoaderResult, RouteRegistration, TransitionType} from './app-routing-types'\nimport type React from 'react'\nimport type {Location} from '@remix-run/router'\n\nexport interface JsonRouteProps {\n  path: string\n  Component: React.ComponentType\n  transitionType?: TransitionType\n  shouldNavigateOnError?: boolean\n  children?: ChildRoute[]\n}\n/**\n * A utility for building a route registration for a route that consumes a JSON object (either via embedding in a\n * script tag or via a JSON fetch on React soft navigations).\n */\nexport function jsonRoute<TRouteData, TEmbeddedData>({\n  path,\n  Component,\n  /**\n   * Some routes want to handle their own errors and not just show a generic error page. In this case,\n   * the error is just handled like any other payload for the route.\n   * NOTE: We might consider replacing the shouldNavigateOnError flag with a parallel implementation to jsonRoute.\n   */\n  shouldNavigateOnError,\n  transitionType,\n  children,\n}: JsonRouteProps): RouteRegistration<TRouteData, TEmbeddedData> {\n  async function coreLoader({location}: {location: Location}): Promise<LoaderResult<TRouteData>> {\n    let response: Response\n    try {\n      const fetchPath = `${location.pathname}${location.search}`\n      response = await window.fetch(fetchPath, {\n        headers: {\n          Accept: 'application/json',\n          'X-Requested-With': 'XMLHttpRequest',\n          'X-GitHub-Target': 'dotcom',\n          'X-React-Router': 'json',\n        },\n      })\n    } catch (error) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'fetchError'},\n      }\n    }\n    if (response.redirected) {\n      return {\n        type: 'redirect',\n        url: response.url,\n      }\n    } else if (!response.ok) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'httpError', httpStatus: response.status},\n      }\n    } else {\n      try {\n        const responseJson = await response.json()\n        return {\n          type: 'loaded',\n          data: responseJson,\n          title: responseJson.title,\n        }\n      } catch (error) {\n        return {\n          type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n          error: {type: 'badResponseError'},\n        }\n      }\n    }\n  }\n\n  function loadFromEmbeddedData({embeddedData}: {embeddedData: TEmbeddedData}): {data: TRouteData; title: string} {\n    const data = embeddedData as unknown as TRouteData & {title: string}\n    return {data, title: data.title}\n  }\n\n  return {\n    path,\n    // TODO: consider wrapping Component with a component that passes payload as a prop — ideally as part of migrating\n    // away from useRoutePayload.\n    Component,\n    coreLoader,\n    loadFromEmbeddedData,\n    transitionType,\n    children,\n  }\n}\n","import {useContext, forwardRef, type ForwardedRef, type ReactElement} from 'react'\nimport {\n  Link as RouterLink,\n  NavLink as RouterNavLink,\n  type LinkProps,\n  type NavLinkProps,\n  resolvePath,\n  matchRoutes,\n} from 'react-router-dom'\nimport {AppContext} from './app-context'\nimport {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {PREVENT_AUTOFOCUS_KEY} from './prevent-autofocus'\n\ntype PreventAutofocusProp = {preventAutofocus?: boolean}\n\nexport const Link = forwardRef(\n  (\n    {to, reloadDocument, preventAutofocus, ...props}: LinkProps & PreventAutofocusProp,\n    ref: ForwardedRef<HTMLAnchorElement>,\n  ): ReactElement => {\n    const {routes} = useContext(AppContext)\n    const pathname = resolvePath(to, ssrSafeLocation.pathname).pathname\n    reloadDocument = reloadDocument ?? !matchRoutes(routes, pathname)\n    return (\n      <RouterLink\n        to={to}\n        {...props}\n        state={\n          preventAutofocus\n            ? {\n                [PREVENT_AUTOFOCUS_KEY]: true,\n                ...props.state,\n              }\n            : props.state\n        }\n        reloadDocument={reloadDocument}\n        ref={ref}\n      />\n    )\n  },\n)\n\nLink.displayName = 'Link'\n\nexport const NavLink = forwardRef(function NavLink(\n  {to, reloadDocument, preventAutofocus, ...props}: NavLinkProps & PreventAutofocusProp,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n): React.ReactElement {\n  const {routes} = useContext(AppContext)\n  const pathname = resolvePath(to, ssrSafeLocation.pathname).pathname\n  reloadDocument = reloadDocument ?? !matchRoutes(routes, pathname)\n  return (\n    <RouterNavLink\n      to={to}\n      {...props}\n      state={\n        preventAutofocus\n          ? {\n              [PREVENT_AUTOFOCUS_KEY]: true,\n              ...props.state,\n            }\n          : props.state\n      }\n      reloadDocument={reloadDocument}\n      ref={ref}\n    />\n  )\n})\n\ntry{ NavLink.displayName ||= 'NavLink' } catch {}"],"names":["queryLast","selector","list","document","querySelectorAll","length","requestUri","window","location","protocol","host","pagePathname","locationOverride","content","pathname","pageQuery","stripParams","search","extraParams","meta","names","split","replace","dialog","options","clonedDetails","dialogTemplate","querySelector","cloneNode","details","detailsDialog","spinner","detailsClass","classList","add","dialogClass","label","setAttribute","labelledBy","body","append","remove","prepend","error","errorSpan","createElement","textContent","errorMessage","addEventListener","hasAttribute","fire","App","props","children","displayName","BorderBox","sx","rest","Box","display","border","borderStyle","borderColor","borderRadius","HierarchicalOrgCard","title","description","icon","titleOnly","paddingY","position","paddingLeft","marginLeft","left","backgroundColor","top","width","height","zIndex","alignItems","gap","p","testIdProps","justifyContent","color","Octicon","OrganizationIcon","size","div","Text","fontWeight","fontSize","OrganizationNameMessage","exists","is_name_modified","name","not_alphanumeric","over_max_length","unavailable","UnavailableNameMessage","ExistsNameMessage","NotAlphanumericNameMessage","OverMaxLengthNameMessage","span","className","ssrSafeLocation","origin","strong","OnboardingOrganizations","navigate","useNavigate","orgName","setOrgName","useState","business","useRoutePayload","orgNameStatus","setOrgNameStatus","setErrorMessage","enterpriseBasePath","enterprisePath","slug","gettingStartedPath","sendClickAnalyticsEvent","useClickAnalytics","checkOrgName","useCallback","trim","response","verifiedFetchJSON","method","value","status","data","json","debouncedCheckOrgName","useDebounce","validationStatus","useMemo","Object","keys","handleSubmit","e","preventDefault","category","action","sudo","result","organization","profile_name","login","ok","message","handleSkip","Flash","variant","mt","StopIcon","float","cursor","onClick","XIcon","data-hpc","flexDirection","mb","Heading","as","textAlign","py","onSubmit","data-turbo","FormControl","required","Label","TextInput","autoFocus","onChange","target","undefined","Caption","Validation","GitHubAvatar","square","src","avatar_url","fullUrl","path","Button","Link","to","registerReactAppFactory","routes","jsonRoute","Component","extensionErrors","errorsReported","loadTime","Date","now","EXPECTED_NETWORK_ERROR_MESSAGES","Set","isExpectedError","has","startsWith","reportError","context","isFeatureEnabled","Error","isIgnoredNonError","ignoredErrorMessages","some","includes","code","errorForStackTrace","serializedErrorValue","serializeNonError","JSON","stringify","report","errorContext","type","stacktrace","catalogService","formatError","unloaded","isSupported","url","head","stack","frame","extensions","test","filename","function","fetch","assign","sanitizedUrl","href","readyState","referrer","getSoftNavReferrer","timeSinceLoad","Math","round","user","pageUser","clientId","getOrCreateClientId","bundler","ui","Boolean","parse","map","file","String","methodName","lineno","lineNumber","toString","colno","column","ssrSafeWindow","BroadcastChannel","sharedWorkerErrorChannel","event","ResponseError","constructor","policyName","serverXSafeHTMLPolicy","ghTrustedTypes","createPolicy","createHTML","s","trustedTypesPolicy","apply","policy","verifyResponseHtmlSafeNonce","nonces","allowJson","contentType","headers","get","responseNonce","getDocumentHtmlSafeNonces","fallback","silenceErrorReporting","fetchSafeDocumentFragment","request","Request","self","statusText","trustedHTML","text","parseHTML","fetchPoll","timeBetweenRequests","acceptedStatusCodes","pollStatusCodes","poll","wait","Promise","resolve","setTimeout","fetchRetry","fetchOptions","max","attempt","retry","reject","err","currentUrl","targetUrl","current","URL","hasHash","temporaryPermissiveParseHTMLPolicy","sanitize","fallbackOnError","html","template","innerHTML","importNode","sudoPromptExist","loadPromptTemplate","link","HTMLTemplateElement","fragment","urlWithParams","oldURL","newURL","params","URLSearchParams","slice","set","webauthnSupportLevel","appendChild","succeeded","sudoPrompt","currentTarget","prompt","closest","removeAttribute","once","sudoModalErrorOrClose","form","wants","unauthorizedError","tooManyError","errorSelector","inputElementSelector","hidden","triggerSudoPrompt","accept","sudoResponse","fetchSessionInSudo","remoteForm","TrustedTypesPolicyError","sendStats","incrementKey","trustedTypesPolicyName","policyOutput","startTime","performance","sanitized","dompurify","FORBID_ATTR","endTime","output","sendEvent","outputLength","sanitizedLength","executionTime","globalThis","unimplemented","functionName","fallbacks","createScript","createScriptURL","registeredPolicies","__TRUSTED_TYPE_POLICIES__","Map","trustedTypes","rules","freeze","hasWarnedHubberAboutTrustedTypes","ssrSafeDocument","violatedDirective","console","warn","useAnalytics","contextData","useContext","AnalyticsContext","appName","metadata","sendAnalyticsEvent","eventType","payload","react","fn","waitMs","leading","maxWait","trailing","onChangeBehavior","fnRef","useTrackingRef","debouncedFn","debounce","args","useEffect","history","React","AppContext","reactRouterNavigate","useReactRouterNavigate","navigateOptions","resolvePath","matchRoutes","isHashNavigation","startSoftNav","preventAutofocus","startTransition","state","PREVENT_AUTOFOCUS_KEY","turbo","replaceState","skipTurbo","createHref","softNavigate","turboSoftNavigate","useSearchParams","searchParams","useReactRouterSearchParams","useLocation","setSearchParams","nextInit","newSearchParams","createSearchParams","ref","useRef","useLayoutEffect","verifiedFetch","init","assertRelativePathOrSameOrigin","Accept","reactFetch","reactFetchJSON","webauthnSupported","iuvpaaSupportLevel","PublicKeyCredential","isUserVerifyingPlatformAuthenticatorAvailable","forwardRef","otherProps","avatarUrl","Number","Avatar","data-testid","shouldNavigateOnError","transitionType","coreLoader","fetchPath","redirected","httpStatus","responseJson","loadFromEmbeddedData","embeddedData","reloadDocument","RouterLink","NavLink","RouterNavLink"],"sourceRoot":""}