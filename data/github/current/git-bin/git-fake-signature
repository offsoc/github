#!/bin/sh
#
#/ git-fake-signature [options]
#/
#/ Mocks the output of gpg by printing the value of the environment variable
#/ GPG_SIGNATURE to standard output and some suitable GnuPG-like output to
#/ standard error.
#/
#/ GPG_SIGNATURE should contain a valid OpenPGP signature produced by gpgverify.
#/
#/ Except for --help, the options are ignored.

if [ "$1" = "--help" ]
then
  grep '^#/' "$0" | cut -b4-
  exit 0
fi

echo "$GPG_SIGNATURE"

# This is the output of GnuPG signing with an all-zero fingerprint and SHA-512
# (algorithm 10) over normal binary data (type 00, a commit) at the Epoch.
cat >&2 <<-EOF
[GNUPG:] KEY_CONSIDERED 0000000000000000000000000000000000000000 0
[GNUPG:] BEGIN_SIGNING H10
[GNUPG:] SIG_CREATED D 1 10 00 0 00000000000000000000000000000000000000000
EOF
