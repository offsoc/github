# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Proto::SecretScanning::Api::V2::BusinessSelector`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Proto::SecretScanning::Api::V2::BusinessSelector`.

class GitHub::Proto::SecretScanning::Api::V2::BusinessSelector
  sig do
    params(
      excluded_owner_types: T.nilable(T.any(Google::Protobuf::RepeatedField[T.any(Symbol, Integer)], T::Array[T.any(Symbol, Integer)])),
      id: T.nilable(Integer),
      organization_ids: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer])),
      owner_types: T.nilable(T.any(Google::Protobuf::RepeatedField[T.any(Symbol, Integer)], T::Array[T.any(Symbol, Integer)])),
      repos_are_excluded: T.nilable(T::Boolean),
      repository_ids: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer])),
      repository_visibilities: T.nilable(T.any(Google::Protobuf::RepeatedField[T.any(Symbol, Integer)], T::Array[T.any(Symbol, Integer)])),
      user_filter: T.nilable(T.any(Symbol, Integer)),
      user_ids: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer]))
    ).void
  end
  def initialize(excluded_owner_types: T.unsafe(nil), id: nil, organization_ids: T.unsafe(nil), owner_types: T.unsafe(nil), repos_are_excluded: nil, repository_ids: T.unsafe(nil), repository_visibilities: T.unsafe(nil), user_filter: nil, user_ids: T.unsafe(nil)); end

  sig { void }
  def clear_excluded_owner_types; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_organization_ids; end

  sig { void }
  def clear_owner_types; end

  sig { void }
  def clear_repos_are_excluded; end

  sig { void }
  def clear_repository_ids; end

  sig { void }
  def clear_repository_visibilities; end

  sig { void }
  def clear_user_filter; end

  sig { void }
  def clear_user_ids; end

  sig { returns(Google::Protobuf::RepeatedField[T.any(Symbol, Integer)]) }
  def excluded_owner_types; end

  sig { params(value: Google::Protobuf::RepeatedField[T.any(Symbol, Integer)]).void }
  def excluded_owner_types=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def organization_ids; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def organization_ids=(value); end

  sig { returns(Google::Protobuf::RepeatedField[T.any(Symbol, Integer)]) }
  def owner_types; end

  sig { params(value: Google::Protobuf::RepeatedField[T.any(Symbol, Integer)]).void }
  def owner_types=(value); end

  sig { returns(T::Boolean) }
  def repos_are_excluded; end

  sig { params(value: T::Boolean).void }
  def repos_are_excluded=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def repository_ids; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def repository_ids=(value); end

  sig { returns(Google::Protobuf::RepeatedField[T.any(Symbol, Integer)]) }
  def repository_visibilities; end

  sig { params(value: Google::Protobuf::RepeatedField[T.any(Symbol, Integer)]).void }
  def repository_visibilities=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def user_filter; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def user_filter=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def user_ids; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def user_ids=(value); end
end
