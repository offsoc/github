{"version":3,"file":"chunk-node_modules_codemirror_legacy-modes_mode_eiffel_js-xxxxxxxxxxxx.js","mappings":"kJAAA,SAASA,EAAQC,CAAK,EAEpB,IAAK,IADDC,EAAI,CAAC,EACAC,EAAI,EAAGC,EAAIH,EAAMI,MAAM,CAAEF,EAAIC,EAAG,EAAED,EAAGD,CAAC,CAACD,CAAK,CAACE,EAAE,CAAC,CAAG,GAC5D,OAAOD,CACT,C,6BACA,IAAII,EAAWN,EAAQ,CACrB,OACA,SACA,OACA,UACA,QACA,SACA,WACA,OACA,QACA,SACA,QACA,SACA,UACA,SACA,YACA,WACA,SACA,OACA,MACA,WACA,OACA,QACA,OACA,KACA,UACA,QACA,UACA,KACA,SACA,OACA,WACA,SACA,SACA,MACA,SACA,OACA,KACA,WACA,SACA,QACA,QACA,QACA,WACA,YACA,UACA,WACA,UACA,WACA,WACA,QACA,OACA,OACA,SACA,YACA,QACA,UACA,SACA,WACA,aACA,KACA,MACA,UACA,MACA,KACD,EACGO,EAAYP,EAAQ,CAAC,KAAM,WAAW,MAAO,KAAK,KAAK,KAAK,EAOhE,SAASQ,EAAUC,CAAM,CAAEC,CAAK,EAC9B,GAAID,EAAOE,QAAQ,GAAI,OAAO,KAC9B,IAPaC,EAOTC,EAAKJ,EAAOK,IAAI,SACpB,KAAID,GAAWA,KAAAA,GARFD,EAgCN,SAASH,CAAM,CAAEC,CAAK,EAE3B,IADA,IAAqBG,EAAjBE,EAAU,GACP,MAACF,CAAAA,EAAKJ,EAAOK,IAAI,EAAC,GAAY,CACnC,GAAID,GA1BkBA,GA0BW,CAACE,EAAU,CAC1CL,EAAMM,QAAQ,CAACC,GAAG,GAClB,KACF,CACAF,EAAU,CAACA,GAAWF,KAAAA,CACxB,CACA,MAhC4B,QAiC9B,EAzCAH,EAAMM,QAAQ,CAACE,IAAI,CAACN,GACbA,EAOkCH,EAAQC,IACtCG,KAAAA,GAAWJ,EAAOU,GAAG,CAAC,MAC/BV,EAAOW,SAAS,GACT,WACEP,KAAAA,GAAWJ,EAAOU,GAAG,CAAC,KACxB,WACE,QAAQE,IAAI,CAACR,IACtBJ,EAAOa,QAAQ,CAAC,iBAChBb,EAAOU,GAAG,CAAC,UACJ,YACE,eAAeE,IAAI,CAACR,IAC7BJ,EAAOa,QAAQ,CAAC,gBAChBb,EAAOU,GAAG,CAAC,UACJ,YACE,iBAAiBE,IAAI,CAACR,IAC/BJ,EAAOa,QAAQ,CAAC,kBACT,YAEA,IAEX,CAgBO,IAAMC,EAAS,CACpBC,KAAM,SACNC,WAAY,WACV,MAAO,CAACT,SAAU,CAACR,EAAU,CAC/B,EAEAkB,MAAO,SAASjB,CAAM,CAAEC,CAAK,EAC3B,IAAIiB,EAAQjB,EAAMM,QAAQ,CAACN,EAAMM,QAAQ,CAACX,MAAM,CAAC,EAAE,CAACI,EAAQC,GAC5D,GAAIiB,YAAAA,EAAqB,CACvB,IAAIC,EAAOnB,EAAOoB,OAAO,GACzBF,EAAQrB,EAASwB,oBAAoB,CAACrB,EAAOoB,OAAO,IAAM,UACtDtB,EAAUuB,oBAAoB,CAACrB,EAAOoB,OAAO,IAAM,WACnD,qBAAqBR,IAAI,CAACO,GAAQ,MAClC,iBAAiBP,IAAI,CAACO,GAAQ,SAC9B,iBAAiBP,IAAI,CAACO,GAAQ,SAC9B,uBAAuBP,IAAI,CAACO,GAAQ,SACpC,uCAAuCP,IAAI,CAACO,GAAQ,SACpD,YAAYP,IAAI,CAACO,GAAQ,SACzB,UACN,CACA,OAAOD,CACT,EACAI,aAAc,CACZC,cAAe,CAACC,KAAM,IAAI,CAC5B,CACF,C","sources":["node_modules/@codemirror/legacy-modes/mode/eiffel.js"],"sourcesContent":["function wordObj(words) {\n  var o = {};\n  for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n  return o;\n}\nvar keywords = wordObj([\n  'note',\n  'across',\n  'when',\n  'variant',\n  'until',\n  'unique',\n  'undefine',\n  'then',\n  'strip',\n  'select',\n  'retry',\n  'rescue',\n  'require',\n  'rename',\n  'reference',\n  'redefine',\n  'prefix',\n  'once',\n  'old',\n  'obsolete',\n  'loop',\n  'local',\n  'like',\n  'is',\n  'inspect',\n  'infix',\n  'include',\n  'if',\n  'frozen',\n  'from',\n  'external',\n  'export',\n  'ensure',\n  'end',\n  'elseif',\n  'else',\n  'do',\n  'creation',\n  'create',\n  'check',\n  'alias',\n  'agent',\n  'separate',\n  'invariant',\n  'inherit',\n  'indexing',\n  'feature',\n  'expanded',\n  'deferred',\n  'class',\n  'Void',\n  'True',\n  'Result',\n  'Precursor',\n  'False',\n  'Current',\n  'create',\n  'attached',\n  'detachable',\n  'as',\n  'and',\n  'implies',\n  'not',\n  'or'\n]);\nvar operators = wordObj([\":=\", \"and then\",\"and\", \"or\",\"<<\",\">>\"]);\n\nfunction chain(newtok, stream, state) {\n  state.tokenize.push(newtok);\n  return newtok(stream, state);\n}\n\nfunction tokenBase(stream, state) {\n  if (stream.eatSpace()) return null;\n  var ch = stream.next();\n  if (ch == '\"'||ch == \"'\") {\n    return chain(readQuoted(ch, \"string\"), stream, state);\n  } else if (ch == \"-\"&&stream.eat(\"-\")) {\n    stream.skipToEnd();\n    return \"comment\";\n  } else if (ch == \":\"&&stream.eat(\"=\")) {\n    return \"operator\";\n  } else if (/[0-9]/.test(ch)) {\n    stream.eatWhile(/[xXbBCc0-9\\.]/);\n    stream.eat(/[\\?\\!]/);\n    return \"variable\";\n  } else if (/[a-zA-Z_0-9]/.test(ch)) {\n    stream.eatWhile(/[a-zA-Z_0-9]/);\n    stream.eat(/[\\?\\!]/);\n    return \"variable\";\n  } else if (/[=+\\-\\/*^%<>~]/.test(ch)) {\n    stream.eatWhile(/[=+\\-\\/*^%<>~]/);\n    return \"operator\";\n  } else {\n    return null;\n  }\n}\n\nfunction readQuoted(quote, style,  unescaped) {\n  return function(stream, state) {\n    var escaped = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (ch == quote && (unescaped || !escaped)) {\n        state.tokenize.pop();\n        break;\n      }\n      escaped = !escaped && ch == \"%\";\n    }\n    return style;\n  };\n}\n\nexport const eiffel = {\n  name: \"eiffel\",\n  startState: function() {\n    return {tokenize: [tokenBase]};\n  },\n\n  token: function(stream, state) {\n    var style = state.tokenize[state.tokenize.length-1](stream, state);\n    if (style == \"variable\") {\n      var word = stream.current();\n      style = keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n        : operators.propertyIsEnumerable(stream.current()) ? \"operator\"\n        : /^[A-Z][A-Z_0-9]*$/g.test(word) ? \"tag\"\n        : /^0[bB][0-1]+$/g.test(word) ? \"number\"\n        : /^0[cC][0-7]+$/g.test(word) ? \"number\"\n        : /^0[xX][a-fA-F0-9]+$/g.test(word) ? \"number\"\n        : /^([0-9]+\\.[0-9]*)|([0-9]*\\.[0-9]+)$/g.test(word) ? \"number\"\n        : /^[0-9]+$/g.test(word) ? \"number\"\n        : \"variable\";\n    }\n    return style;\n  },\n  languageData: {\n    commentTokens: {line: \"--\"}\n  }\n};\n\n"],"names":["wordObj","words","o","i","e","length","keywords","operators","tokenBase","stream","state","eatSpace","newtok","ch","next","escaped","tokenize","pop","push","eat","skipToEnd","test","eatWhile","eiffel","name","startState","token","style","word","current","propertyIsEnumerable","languageData","commentTokens","line"],"sourceRoot":""}