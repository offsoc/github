{"version":3,"file":"chunk-node_modules_monaco-editor_esm_vs_basic-languages_pug_pug_js-xxxxxxxxxxxx.js","mappings":"oMAAA;;;;;+EAK+E,EAI/E,IAAIA,EAAO,CACTC,SAAU,CACRC,YAAa,IACf,EACAC,SAAU,CACR,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACX,CACDC,iBAAkB,CAChB,CAAEC,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,SAAU,UAAU,EACrD,CAAEF,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,SAAU,UAAU,EACrD,CAAEF,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,SAAU,UAAU,EACrD,CAAEF,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,SAAU,UAAU,EACrD,CAAEF,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,SAAU,UAAU,EACtD,CACDC,QAAS,CACPC,QAAS,EACX,CACF,EACIC,EAAW,CACbC,aAAc,GACdC,aAAc,OACdC,WAAY,GACZV,SAAU,CACR,CAAEW,MAAO,kBAAmBT,KAAM,IAAKC,MAAO,GAAI,EAClD,CAAEQ,MAAO,kBAAmBT,KAAM,IAAKC,MAAO,GAAI,EAClD,CAAEQ,MAAO,wBAAyBT,KAAM,IAAKC,MAAO,GAAI,EACzD,CACDS,SAAU,CACR,SACA,QACA,OACA,UACA,UACA,OACA,OACA,UACA,MACA,KACA,KACA,UACA,QACA,SACA,SACA,MACA,OACD,CACDC,KAAM,CACJ,IACA,OACA,UACA,UACA,OACA,UACA,QACA,QACA,IACA,OACA,WACA,MACA,MACA,aACA,OACA,KACA,SACA,SACA,UACA,SACA,OACA,OACA,MACA,WACA,UACA,WACA,KACA,MACA,UACA,MACA,MACA,KACA,KACA,KACA,QACA,WACA,aACA,SACA,OACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,SACA,MACA,QACA,MACA,SACA,MACA,QACA,KACA,OACA,MACA,OACA,OACA,OACA,QACA,MACA,WACA,WACA,SACA,KACA,WACA,SACA,SACA,IACA,QACA,MACA,WACA,IACA,KACA,KACA,OACA,IA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","sources":["node_modules/monaco-editor/esm/vs/basic-languages/pug/pug.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.49.0(383fdf3fc0e1e1a024068b8d0fd4f3dcbae74d04)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/pug/pug.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\"\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] },\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] },\n    { open: \"{\", close: \"}\", notIn: [\"string\", \"comment\"] },\n    { open: \"[\", close: \"]\", notIn: [\"string\", \"comment\"] },\n    { open: \"(\", close: \")\", notIn: [\"string\", \"comment\"] }\n  ],\n  folding: {\n    offSide: true\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".pug\",\n  ignoreCase: true,\n  brackets: [\n    { token: \"delimiter.curly\", open: \"{\", close: \"}\" },\n    { token: \"delimiter.array\", open: \"[\", close: \"]\" },\n    { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" }\n  ],\n  keywords: [\n    \"append\",\n    \"block\",\n    \"case\",\n    \"default\",\n    \"doctype\",\n    \"each\",\n    \"else\",\n    \"extends\",\n    \"for\",\n    \"if\",\n    \"in\",\n    \"include\",\n    \"mixin\",\n    \"typeof\",\n    \"unless\",\n    \"var\",\n    \"when\"\n  ],\n  tags: [\n    \"a\",\n    \"abbr\",\n    \"acronym\",\n    \"address\",\n    \"area\",\n    \"article\",\n    \"aside\",\n    \"audio\",\n    \"b\",\n    \"base\",\n    \"basefont\",\n    \"bdi\",\n    \"bdo\",\n    \"blockquote\",\n    \"body\",\n    \"br\",\n    \"button\",\n    \"canvas\",\n    \"caption\",\n    \"center\",\n    \"cite\",\n    \"code\",\n    \"col\",\n    \"colgroup\",\n    \"command\",\n    \"datalist\",\n    \"dd\",\n    \"del\",\n    \"details\",\n    \"dfn\",\n    \"div\",\n    \"dl\",\n    \"dt\",\n    \"em\",\n    \"embed\",\n    \"fieldset\",\n    \"figcaption\",\n    \"figure\",\n    \"font\",\n    \"footer\",\n    \"form\",\n    \"frame\",\n    \"frameset\",\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\",\n    \"head\",\n    \"header\",\n    \"hgroup\",\n    \"hr\",\n    \"html\",\n    \"i\",\n    \"iframe\",\n    \"img\",\n    \"input\",\n    \"ins\",\n    \"keygen\",\n    \"kbd\",\n    \"label\",\n    \"li\",\n    \"link\",\n    \"map\",\n    \"mark\",\n    \"menu\",\n    \"meta\",\n    \"meter\",\n    \"nav\",\n    \"noframes\",\n    \"noscript\",\n    \"object\",\n    \"ol\",\n    \"optgroup\",\n    \"option\",\n    \"output\",\n    \"p\",\n    \"param\",\n    \"pre\",\n    \"progress\",\n    \"q\",\n    \"rp\",\n    \"rt\",\n    \"ruby\",\n    \"s\",\n    \"samp\",\n    \"script\",\n    \"section\",\n    \"select\",\n    \"small\",\n    \"source\",\n    \"span\",\n    \"strike\",\n    \"strong\",\n    \"style\",\n    \"sub\",\n    \"summary\",\n    \"sup\",\n    \"table\",\n    \"tbody\",\n    \"td\",\n    \"textarea\",\n    \"tfoot\",\n    \"th\",\n    \"thead\",\n    \"time\",\n    \"title\",\n    \"tr\",\n    \"tracks\",\n    \"tt\",\n    \"u\",\n    \"ul\",\n    \"video\",\n    \"wbr\"\n  ],\n  // we include these common regular expressions\n  symbols: /[\\+\\-\\*\\%\\&\\|\\!\\=\\/\\.\\,\\:]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [\n      // Tag or a keyword at start\n      [\n        /^(\\s*)([a-zA-Z_-][\\w-]*)/,\n        {\n          cases: {\n            \"$2@tags\": {\n              cases: {\n                \"@eos\": [\"\", \"tag\"],\n                \"@default\": [\"\", { token: \"tag\", next: \"@tag.$1\" }]\n              }\n            },\n            \"$2@keywords\": [\"\", { token: \"keyword.$2\" }],\n            \"@default\": [\"\", \"\"]\n          }\n        }\n      ],\n      // id\n      [\n        /^(\\s*)(#[a-zA-Z_-][\\w-]*)/,\n        {\n          cases: {\n            \"@eos\": [\"\", \"tag.id\"],\n            \"@default\": [\"\", { token: \"tag.id\", next: \"@tag.$1\" }]\n          }\n        }\n      ],\n      // class\n      [\n        /^(\\s*)(\\.[a-zA-Z_-][\\w-]*)/,\n        {\n          cases: {\n            \"@eos\": [\"\", \"tag.class\"],\n            \"@default\": [\"\", { token: \"tag.class\", next: \"@tag.$1\" }]\n          }\n        }\n      ],\n      // plain text with pipe\n      [/^(\\s*)(\\|.*)$/, \"\"],\n      { include: \"@whitespace\" },\n      // keywords\n      [\n        /[a-zA-Z_$][\\w$]*/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword.$0\" },\n            \"@default\": \"\"\n          }\n        }\n      ],\n      // delimiters and operators\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/@symbols/, \"delimiter\"],\n      // numbers\n      [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\n      [/\\d+/, \"number\"],\n      // strings:\n      [/\"/, \"string\", '@string.\"'],\n      [/'/, \"string\", \"@string.'\"]\n    ],\n    tag: [\n      [/(\\.)(\\s*$)/, [{ token: \"delimiter\", next: \"@blockText.$S2.\" }, \"\"]],\n      [/\\s+/, { token: \"\", next: \"@simpleText\" }],\n      // id\n      [\n        /#[a-zA-Z_-][\\w-]*/,\n        {\n          cases: {\n            \"@eos\": { token: \"tag.id\", next: \"@pop\" },\n            \"@default\": \"tag.id\"\n          }\n        }\n      ],\n      // class\n      [\n        /\\.[a-zA-Z_-][\\w-]*/,\n        {\n          cases: {\n            \"@eos\": { token: \"tag.class\", next: \"@pop\" },\n            \"@default\": \"tag.class\"\n          }\n        }\n      ],\n      // attributes\n      [/\\(/, { token: \"delimiter.parenthesis\", next: \"@attributeList\" }]\n    ],\n    simpleText: [\n      [/[^#]+$/, { token: \"\", next: \"@popall\" }],\n      [/[^#]+/, { token: \"\" }],\n      // interpolation\n      [\n        /(#{)([^}]*)(})/,\n        {\n          cases: {\n            \"@eos\": [\n              \"interpolation.delimiter\",\n              \"interpolation\",\n              {\n                token: \"interpolation.delimiter\",\n                next: \"@popall\"\n              }\n            ],\n            \"@default\": [\"interpolation.delimiter\", \"interpolation\", \"interpolation.delimiter\"]\n          }\n        }\n      ],\n      [/#$/, { token: \"\", next: \"@popall\" }],\n      [/#/, \"\"]\n    ],\n    attributeList: [\n      [/\\s+/, \"\"],\n      [\n        /(\\w+)(\\s*=\\s*)(\"|')/,\n        [\"attribute.name\", \"delimiter\", { token: \"attribute.value\", next: \"@value.$3\" }]\n      ],\n      [/\\w+/, \"attribute.name\"],\n      [\n        /,/,\n        {\n          cases: {\n            \"@eos\": {\n              token: \"attribute.delimiter\",\n              next: \"@popall\"\n            },\n            \"@default\": \"attribute.delimiter\"\n          }\n        }\n      ],\n      [/\\)$/, { token: \"delimiter.parenthesis\", next: \"@popall\" }],\n      [/\\)/, { token: \"delimiter.parenthesis\", next: \"@pop\" }]\n    ],\n    whitespace: [\n      [/^(\\s*)(\\/\\/.*)$/, { token: \"comment\", next: \"@blockText.$1.comment\" }],\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/<!--/, { token: \"comment\", next: \"@comment\" }]\n    ],\n    blockText: [\n      [\n        /^\\s+.*$/,\n        {\n          cases: {\n            \"($S2\\\\s+.*$)\": { token: \"$S3\" },\n            \"@default\": { token: \"@rematch\", next: \"@popall\" }\n          }\n        }\n      ],\n      [/./, { token: \"@rematch\", next: \"@popall\" }]\n    ],\n    comment: [\n      [/[^<\\-]+/, \"comment.content\"],\n      [/-->/, { token: \"comment\", next: \"@pop\" }],\n      [/<!--/, \"comment.content.invalid\"],\n      [/[<\\-]/, \"comment.content\"]\n    ],\n    string: [\n      [\n        /[^\\\\\"'#]+/,\n        {\n          cases: {\n            \"@eos\": { token: \"string\", next: \"@popall\" },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      [\n        /@escapes/,\n        {\n          cases: {\n            \"@eos\": { token: \"string.escape\", next: \"@popall\" },\n            \"@default\": \"string.escape\"\n          }\n        }\n      ],\n      [\n        /\\\\./,\n        {\n          cases: {\n            \"@eos\": {\n              token: \"string.escape.invalid\",\n              next: \"@popall\"\n            },\n            \"@default\": \"string.escape.invalid\"\n          }\n        }\n      ],\n      // interpolation\n      [/(#{)([^}]*)(})/, [\"interpolation.delimiter\", \"interpolation\", \"interpolation.delimiter\"]],\n      [/#/, \"string\"],\n      [\n        /[\"']/,\n        {\n          cases: {\n            \"$#==$S2\": { token: \"string\", next: \"@pop\" },\n            \"@default\": { token: \"string\" }\n          }\n        }\n      ]\n    ],\n    // Almost identical to above, except for escapes and the output token\n    value: [\n      [\n        /[^\\\\\"']+/,\n        {\n          cases: {\n            \"@eos\": { token: \"attribute.value\", next: \"@popall\" },\n            \"@default\": \"attribute.value\"\n          }\n        }\n      ],\n      [\n        /\\\\./,\n        {\n          cases: {\n            \"@eos\": { token: \"attribute.value\", next: \"@popall\" },\n            \"@default\": \"attribute.value\"\n          }\n        }\n      ],\n      [\n        /[\"']/,\n        {\n          cases: {\n            \"$#==$S2\": { token: \"attribute.value\", next: \"@pop\" },\n            \"@default\": { token: \"attribute.value\" }\n          }\n        }\n      ]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","notIn","folding","offSide","language","defaultToken","tokenPostfix","ignoreCase","token","keywords","tags","symbols","escapes","tokenizer","root","cases","next","include","tag","simpleText","attributeList","whitespace","blockText","comment","string","value"],"sourceRoot":""}