# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Proto::RegistryMetadata::V1::Migrator::Package::PackageFileSummary`.
# Please instead update this file by running `bin/tapioca dsl Proto::RegistryMetadata::V1::Migrator::Package::PackageFileSummary`.

class Proto::RegistryMetadata::V1::Migrator::Package::PackageFileSummary
  sig do
    params(
      ecosystem: T.nilable(T.any(Symbol, Integer)),
      namespace: T.nilable(String),
      package_file: T.nilable(Proto::RegistryMetadata::V1::Migrator::Package::PackageFile),
      package_name: T.nilable(String),
      package_original_name: T.nilable(String),
      version_name: T.nilable(String),
      version_original_name: T.nilable(String)
    ).void
  end
  def initialize(ecosystem: nil, namespace: nil, package_file: nil, package_name: nil, package_original_name: nil, version_name: nil, version_original_name: nil); end

  sig { void }
  def clear_ecosystem; end

  sig { void }
  def clear_namespace; end

  sig { void }
  def clear_package_file; end

  sig { void }
  def clear_package_name; end

  sig { void }
  def clear_package_original_name; end

  sig { void }
  def clear_version_name; end

  sig { void }
  def clear_version_original_name; end

  sig { returns(T.any(Symbol, Integer)) }
  def ecosystem; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def ecosystem=(value); end

  sig { returns(String) }
  def namespace; end

  sig { params(value: String).void }
  def namespace=(value); end

  sig { returns(T.nilable(Proto::RegistryMetadata::V1::Migrator::Package::PackageFile)) }
  def package_file; end

  sig { params(value: T.nilable(Proto::RegistryMetadata::V1::Migrator::Package::PackageFile)).void }
  def package_file=(value); end

  sig { returns(String) }
  def package_name; end

  sig { params(value: String).void }
  def package_name=(value); end

  sig { returns(String) }
  def package_original_name; end

  sig { params(value: String).void }
  def package_original_name=(value); end

  sig { returns(String) }
  def version_name; end

  sig { params(value: String).void }
  def version_name=(value); end

  sig { returns(String) }
  def version_original_name; end

  sig { params(value: String).void }
  def version_original_name=(value); end
end
