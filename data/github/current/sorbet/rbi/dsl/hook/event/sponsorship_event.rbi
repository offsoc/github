# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hook::Event::SponsorshipEvent`.
# Please instead update this file by running `bin/tapioca dsl Hook::Event::SponsorshipEvent`.

class Hook::Event::SponsorshipEvent
  sig do
    params(
      action: T.untyped,
      actor_id: T.untyped,
      current_tier_id: T.untyped,
      sponsorship_id: T.untyped,
      business_id: T.untyped,
      changes: T.untyped,
      delivered_hook_ids: T.untyped,
      event_guid: T.untyped,
      organization_id: T.untyped,
      pending_change_on: T.untyped,
      pending_change_tier_id: T.untyped,
      previous_tier_id: T.untyped,
      primary_resource: T.untyped,
      primary_resource_data: T.untyped,
      repository_id: T.untyped,
      triggered_at: T.untyped
    ).void
  end
  def initialize(action:, actor_id:, current_tier_id:, sponsorship_id:, business_id: nil, changes: nil, delivered_hook_ids: nil, event_guid: nil, organization_id: nil, pending_change_on: nil, pending_change_tier_id: nil, previous_tier_id: nil, primary_resource: nil, primary_resource_data: nil, repository_id: nil, triggered_at: nil); end

  sig { returns(T.untyped) }
  def action; end

  sig { params(value: T.untyped).void }
  def action=(value); end

  sig { returns(T.untyped) }
  def actor_id; end

  sig { params(value: T.untyped).void }
  def actor_id=(value); end

  sig { returns(T.untyped) }
  def business_id; end

  sig { returns(T.untyped) }
  def current_tier_id; end

  sig { params(value: T.untyped).void }
  def business_id=(value); end

  sig { params(value: T.untyped).void }
  def current_tier_id=(value); end

  sig { returns(T.untyped) }
  def changes; end

  sig { returns(T.untyped) }
  def organization_id; end

  sig { returns(T.untyped) }
  def sponsorship_id; end

  sig { params(value: T.untyped).void }
  def changes=(value); end

  sig { params(value: T.untyped).void }
  def organization_id=(value); end

  sig { params(value: T.untyped).void }
  def sponsorship_id=(value); end

  sig { returns(T.untyped) }
  def delivered_hook_ids; end

  sig { params(value: T.untyped).void }
  def delivered_hook_ids=(value); end

  sig { returns(T.untyped) }
  def event_guid; end

  sig { params(value: T.untyped).void }
  def event_guid=(value); end

  sig { returns(T.untyped) }
  def pending_change_on; end

  sig { params(value: T.untyped).void }
  def pending_change_on=(value); end

  sig { returns(T.untyped) }
  def pending_change_tier_id; end

  sig { params(value: T.untyped).void }
  def pending_change_tier_id=(value); end

  sig { returns(T.untyped) }
  def previous_tier_id; end

  sig { params(value: T.untyped).void }
  def previous_tier_id=(value); end

  sig { returns(T.untyped) }
  def primary_resource; end

  sig { params(value: T.untyped).void }
  def primary_resource=(value); end

  sig { returns(T.untyped) }
  def primary_resource_data; end

  sig { params(value: T.untyped).void }
  def primary_resource_data=(value); end

  sig { returns(T.untyped) }
  def repository_id; end

  sig { params(value: T.untyped).void }
  def repository_id=(value); end

  sig { returns(T.untyped) }
  def triggered_at; end

  sig { params(value: T.untyped).void }
  def triggered_at=(value); end

  class << self
    sig do
      params(
        action: T.untyped,
        actor_id: T.untyped,
        current_tier_id: T.untyped,
        sponsorship_id: T.untyped,
        business_id: T.untyped,
        changes: T.untyped,
        delivered_hook_ids: T.untyped,
        event_guid: T.untyped,
        organization_id: T.untyped,
        pending_change_on: T.untyped,
        pending_change_tier_id: T.untyped,
        previous_tier_id: T.untyped,
        primary_resource: T.untyped,
        primary_resource_data: T.untyped,
        repository_id: T.untyped,
        triggered_at: T.untyped
      ).returns(T::Boolean)
    end
    def queue(action:, actor_id:, current_tier_id:, sponsorship_id:, business_id: nil, changes: nil, delivered_hook_ids: nil, event_guid: nil, organization_id: nil, pending_change_on: nil, pending_change_tier_id: nil, previous_tier_id: nil, primary_resource: nil, primary_resource_data: nil, repository_id: nil, triggered_at: nil); end
  end
end
