# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Octoshift::Imports::V1::ImportReleaseRequest`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Octoshift::Imports::V1::ImportReleaseRequest`.

class MonolithTwirp::Octoshift::Imports::V1::ImportReleaseRequest
  sig do
    params(
      author_login: T.nilable(String),
      body: T.nilable(String),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      is_pre_release: T.nilable(T::Boolean),
      name: T.nilable(String),
      pending_tag: T.nilable(String),
      published_at: T.nilable(Google::Protobuf::Timestamp),
      repository_id: T.nilable(Integer),
      state: T.nilable(T.any(Symbol, Integer)),
      tag_name: T.nilable(String),
      target_commitish: T.nilable(String)
    ).void
  end
  def initialize(author_login: nil, body: nil, created_at: nil, is_pre_release: nil, name: nil, pending_tag: nil, published_at: nil, repository_id: nil, state: nil, tag_name: nil, target_commitish: nil); end

  sig { returns(String) }
  def author_login; end

  sig { params(value: String).void }
  def author_login=(value); end

  sig { returns(String) }
  def body; end

  sig { params(value: String).void }
  def body=(value); end

  sig { void }
  def clear_author_login; end

  sig { void }
  def clear_body; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_is_pre_release; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_pending_tag; end

  sig { void }
  def clear_published_at; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_state; end

  sig { void }
  def clear_tag_name; end

  sig { void }
  def clear_target_commitish; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(T::Boolean) }
  def is_pre_release; end

  sig { params(value: T::Boolean).void }
  def is_pre_release=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(String) }
  def pending_tag; end

  sig { params(value: String).void }
  def pending_tag=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def published_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def published_at=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def state; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def state=(value); end

  sig { returns(String) }
  def tag_name; end

  sig { params(value: String).void }
  def tag_name=(value); end

  sig { returns(String) }
  def target_commitish; end

  sig { params(value: String).void }
  def target_commitish=(value); end
end
