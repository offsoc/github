<%# erblint:counter DeprecatedComponentsCounter 3 %>
<% if business.plan_subscription %>
  <% subscription_type = (business.external_subscription_type || "zuora").titleize %>
  <%= render(
    Primer::Beta::BorderBox.new(mb: 4, test_selector: "sync-business-with-plan-subscription")
  ) do |component| %>
    <% component.with_header do %>
      Synchronize <%= subscription_type %> Subscriptions
    <% end %>
    <% component.with_body do %>
      <p>
        Adds/Removes subscriptions in <%= subscription_type %> based on GitHub's view of which subscriptions should
        be active. This can be run to ensure that the subscriptions in <%= subscription_type %> reflect GitHub's
        desired state.
      </p>
      <%= form_tag stafftools_enterprise_billing_sync_subscription_path(this_business), method: :put do %>
        <%= render Primer::ButtonComponent.new(type: :submit, scheme: :danger) do %>
          Sync subscription
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% else %>
  <%= render(
    Primer::Beta::BorderBox.new(mb: 4, test_selector: "sync-business-without-plan-subscription")
  ) do |component| %>
    <% component.with_header do %>
      Synchronize Subscription
    <% end %>
    <% component.with_body do %>
      <p>This account does not have a plan subscription.</p>
      <% if business.has_commercial_interaction_restriction? %>
        <p>
          <%= primer_octicon(:shield, classes: "highlight") %>
          SDN screening status: <%= business.trade_screening_status %> - Blocked from commercial interactions
        </p>
      <% end %>
      <%= form_tag stafftools_enterprise_billing_sync_subscription_path(this_business), method: :put do %>
        <% if business.has_commercial_interaction_restriction? %>
          <% warning_msg = "Are you sure you want to sync subscription? This business is blocked from performing
            commercial interactions." %>
          <%= render Primer::ButtonComponent.new(
            type: :submit, scheme: :danger, "data-confirm": warning_msg, disabled: true
          ) do %>
            Sync subscription
          <% end %>
        <% else %>
          <%= render Primer::ButtonComponent.new(type: :submit, scheme: :danger, disabled: true) do %>
            Sync subscription
          <% end %>
        <% end%>
      <% end %>
    <% end %>
  <% end %>
<% end %>
