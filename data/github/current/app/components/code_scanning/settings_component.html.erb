<div class="d-flex flex-md-row flex-column flex-md-items-center py-3" <%= test_selector("code-scanning-settings") %>>
  <div class="mb-md-0 mb-2 flex-auto" <%= test_selector("code-scanning-settings-component") %>>
    <h3 id="code_scanning_settings">Code scanning</h3>
    <p class="mb-3 pb-2 color-fg-muted border-bottom">Automatically detect common vulnerabilities and coding errors.</p>
    <include-fragment src="<%= repository_code_scanning_tool_status_banner_path(repository: repository, user_id: repository.owner_display_login) %>">
    </include-fragment>

    <% if show_tools_section? %>
      <%= render CodeScanning::Settings::StatusComponent.new(repository: repository) %>
    <% end %>
    <% if prerequisite_setup_error.present? %>
      <%= render(Primer::Beta::BorderBox.new(padding: :condensed, my: 3, test_selector: "prerequisite-setup-error")) do |component| %>
        <% component.with_row do %>
          <div class="text-center py-3">
            <h4 class="mb-2 mt-2">Code scanning with GitHub Actions is not available for this repository.</h4>
            <p class="text-small color-fg-muted m-0 mb-0">
              <%= prerequisite_setup_error %>
            </p>
          </div>
        <% end %>
      <% end %>
    <% end %>

    <% if autofix_settings_configurable? %>
      <div class="border rounded mb-3">
        <div class="p-3">
          <div class="d-flex flex-md-row flex-column gap-2">
            <div class="mb-md-0 mb-2 flex-auto">
              <h5>
                Copilot Autofix
              </h5>

              <p class="text-small color-fg-muted m-0">
                Suggest fixes for CodeQL alerts using AI. CodeQL default or advanced setup must be enabled for this feature to work.
                Learn more about the <%= render(Primer::Beta::Link.new(href: autofix_limitations_documentation_url, target: "_blank", classes: "Link--inTextBlock")) { "limitations of autofix code suggestions" } %>.
              </p>
            </div>

            <div>
              <%= render(Primer::Alpha::ToggleSwitch.new(
                size: :small,
                checked: CodeScanningRepositoryConfig.new(repository).code_scanning_autofix_settings_enabled?,
                "aria-label": "Copilot Autofix enablement",
                src: autofix_toggle_form_src,
                csrf_token: autofix_toggle_form_csrf_token,
              )) %>
            </div>
          </div>
        </div>
      </div>
    <% end %>

    <% if show_protection_rules? %>
      <h4 class="mt-4 mb-2">Protection rules</h4>
      <div class="mb-2" <%= test_selector("code-scanning-alert-severity") %>>
        <div class="border rounded">
          <div class="p-3">
            <div>
              <div class="mb-2">
                <h5>Check runs failure threshold</h5>
                <p class="text-small color-fg-muted m-0">
                  Select the alert severity level for code scanning check runs to fail.
                  <%= render(Primer::Beta::Link.new(href: new_repository_ruleset_path(target: "branch", enforcement: "disabled"), classes: "Link--inTextBlock")) { "Create a branch ruleset" } %>
                  to prevent a branch from merging when these checks fail.
                </p>
              </div>
              <div class="BtnGroup d-flex">
                <%= render Primer::Alpha::ActionMenu.new(select_variant: :single, pr: 2) do |menu| %>
                  <% menu.with_show_button(
                    size: :medium,
                    test_selector: "code-scanning-alert-security-severity-btn"
                  ) do |button| %>
                    <% button.with_trailing_action_icon(icon: :"triangle-down") %>
                    <span class="color-fg-muted">Security alert severity level:</span> <%= security_severities[security_severity] %>
                  <% end %>

                  <% security_severities.each do |key, description| %>
                    <% menu.with_item(
                      label: description,
                      active: security_severity == key,
                      href: repository_code_scanning_severity_path(repository.owner, repository),
                      form_arguments: { method: :put, name: "security_severity", value: key },
                    ) %>
                  <% end %>
                <% end %>

                <%= render Primer::Alpha::ActionMenu.new(select_variant: :single) do |menu| %>
                  <% menu.with_show_button(
                    size: :medium,
                    test_selector: "code-scanning-alert-rule-severity-btn"
                  ) do |button| %>
                    <% button.with_trailing_action_icon(icon: :"triangle-down") %>
                    <span class="color-fg-muted">Standard alert severity level:</span> <%= rule_severities[severity] %>
                  <% end %>

                  <% rule_severities.each do |key, description| %>
                    <% menu.with_item(
                      label: description,
                      active: severity == key,
                      href: repository_code_scanning_severity_path(repository.owner, repository),
                      form_arguments: { method: :put, name: "severity", value: key },
                    ) %>
                  <% end %>
                <% end %>
              </div>
            </div>
          </div>
        </div>
      </div>
    <% end %>
  </div>
</div>
