# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PlatformTypes::GistComment`.
# Please instead update this file by running `bin/tapioca dsl PlatformTypes::GistComment`.

class PlatformTypes::GistComment < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(T.nilable(GraphQL::Client::Schema::InterfaceType)) }
  def author; end

  sig { returns(T::Boolean) }
  def author?; end

  sig { returns(String) }
  def author_association; end

  sig { returns(T::Boolean) }
  def author_association?; end

  sig { returns(T.nilable(PlatformTypes::Sponsorship)) }
  def author_to_repo_owner_sponsorship; end

  sig { returns(T::Boolean) }
  def author_to_repo_owner_sponsorship?; end

  sig { returns(T::Boolean) }
  def authored_by_subject_author; end

  sig { returns(T::Boolean) }
  def authored_by_subject_author?; end

  sig { returns(String) }
  def body; end

  sig { returns(T::Boolean) }
  def body?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def body_html; end

  sig { returns(T::Boolean) }
  def body_html?; end

  sig { returns(String) }
  def body_text; end

  sig { returns(T::Boolean) }
  def body_text?; end

  sig { returns(String) }
  def body_version; end

  sig { returns(T::Boolean) }
  def body_version?; end

  sig { returns(String) }
  def comment_type; end

  sig { returns(T::Boolean) }
  def comment_type?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def created_at; end

  sig { returns(T::Boolean) }
  def created_at?; end

  sig { returns(T::Boolean) }
  def created_via_email; end

  sig { returns(T::Boolean) }
  def created_via_email?; end

  sig { returns(T.nilable(Integer)) }
  def database_id; end

  sig { returns(T::Boolean) }
  def database_id?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::InterfaceType)) }
  def editor; end

  sig { returns(T::Boolean) }
  def editor?; end

  sig { returns(PlatformTypes::Gist) }
  def gist; end

  sig { returns(T::Boolean) }
  def gist?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(T::Boolean) }
  def includes_created_edit; end

  sig { returns(T::Boolean) }
  def includes_created_edit?; end

  sig { returns(T::Boolean) }
  def is_minimized; end

  sig { returns(T::Boolean) }
  def is_minimized?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def last_edited_at; end

  sig { returns(T::Boolean) }
  def last_edited_at?; end

  sig { returns(T.nilable(PlatformTypes::UserContentEdit)) }
  def last_user_content_edit; end

  sig { returns(T::Boolean) }
  def last_user_content_edit?; end

  sig { returns(T.nilable(String)) }
  def minimized_reason; end

  sig { returns(T::Boolean) }
  def minimized_reason?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def published_at; end

  sig { returns(T::Boolean) }
  def published_at?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def resource_path; end

  sig { returns(T::Boolean) }
  def resource_path?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def short_body_html; end

  sig { returns(T::Boolean) }
  def short_body_html?; end

  sig { returns(T::Boolean) }
  def show_edit_history_onboarding; end

  sig { returns(T::Boolean) }
  def show_edit_history_onboarding?; end

  sig { returns(T::Boolean) }
  def show_first_contribution_prompt; end

  sig { returns(T::Boolean) }
  def show_first_contribution_prompt?; end

  sig { returns(T::Boolean) }
  def spammy; end

  sig { returns(T::Boolean) }
  def spammy?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def stafftools_url; end

  sig { returns(T::Boolean) }
  def stafftools_url?; end

  sig { returns(T.nilable(T.any(String, Integer))) }
  def subject_id; end

  sig { returns(T::Boolean) }
  def subject_id?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def updated_at; end

  sig { returns(T::Boolean) }
  def updated_at?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def url; end

  sig { returns(T::Boolean) }
  def url?; end

  sig { returns(T.nilable(PlatformTypes::UserContentEditConnection)) }
  def user_content_edits; end

  sig { returns(T::Boolean) }
  def user_content_edits?; end

  sig { returns(T::Boolean) }
  def viewer_can_delete; end

  sig { returns(T::Boolean) }
  def viewer_can_delete?; end

  sig { returns(T::Boolean) }
  def viewer_can_minimize; end

  sig { returns(T::Boolean) }
  def viewer_can_minimize?; end

  sig { returns(T::Boolean) }
  def viewer_can_read_user_content_edits; end

  sig { returns(T::Boolean) }
  def viewer_can_read_user_content_edits?; end

  sig { returns(T::Boolean) }
  def viewer_can_report; end

  sig { returns(T::Boolean) }
  def viewer_can_report?; end

  sig { returns(T::Boolean) }
  def viewer_can_report_to_maintainer; end

  sig { returns(T::Boolean) }
  def viewer_can_report_to_maintainer?; end

  sig { returns(T::Boolean) }
  def viewer_can_see_delete_button; end

  sig { returns(T::Boolean) }
  def viewer_can_see_delete_button?; end

  sig { returns(T::Boolean) }
  def viewer_can_see_minimize_button; end

  sig { returns(T::Boolean) }
  def viewer_can_see_minimize_button?; end

  sig { returns(T::Boolean) }
  def viewer_can_see_unminimize_button; end

  sig { returns(T::Boolean) }
  def viewer_can_see_unminimize_button?; end

  sig { returns(T::Boolean) }
  def viewer_can_update; end

  sig { returns(T::Boolean) }
  def viewer_can_update?; end

  sig { returns(T::Array[String]) }
  def viewer_cannot_update_reasons; end

  sig { returns(T::Boolean) }
  def viewer_cannot_update_reasons?; end

  sig { returns(T::Boolean) }
  def viewer_did_author; end

  sig { returns(T::Boolean) }
  def viewer_did_author?; end

  sig { returns(String) }
  def viewer_relationship; end

  sig { returns(T::Boolean) }
  def viewer_relationship?; end
end
