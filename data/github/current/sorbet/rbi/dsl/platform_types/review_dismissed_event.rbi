# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PlatformTypes::ReviewDismissedEvent`.
# Please instead update this file by running `bin/tapioca dsl PlatformTypes::ReviewDismissedEvent`.

class PlatformTypes::ReviewDismissedEvent < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(T.nilable(GraphQL::Client::Schema::InterfaceType)) }
  def actor; end

  sig { returns(T::Boolean) }
  def actor?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def created_at; end

  sig { returns(T::Boolean) }
  def created_at?; end

  sig { returns(T.nilable(Integer)) }
  def database_id; end

  sig { returns(T::Boolean) }
  def database_id?; end

  sig { returns(T.nilable(String)) }
  def dismissal_message; end

  sig { returns(T::Boolean) }
  def dismissal_message?; end

  sig { returns(T.nilable(String)) }
  def dismissal_message_html; end

  sig { returns(T::Boolean) }
  def dismissal_message_html?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def full_database_id; end

  sig { returns(T::Boolean) }
  def full_database_id?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(String) }
  def previous_review_state; end

  sig { returns(T::Boolean) }
  def previous_review_state?; end

  sig { returns(PlatformTypes::PullRequest) }
  def pull_request; end

  sig { returns(T::Boolean) }
  def pull_request?; end

  sig { returns(T.nilable(PlatformTypes::PullRequestCommit)) }
  def pull_request_commit; end

  sig { returns(T::Boolean) }
  def pull_request_commit?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def resource_path; end

  sig { returns(T::Boolean) }
  def resource_path?; end

  sig { returns(T.nilable(PlatformTypes::PullRequestReview)) }
  def review; end

  sig { returns(T::Boolean) }
  def review?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::InterfaceType)) }
  def safe_actor; end

  sig { returns(T::Boolean) }
  def safe_actor?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def url; end

  sig { returns(T::Boolean) }
  def url?; end

  sig { returns(T.nilable(PlatformTypes::App)) }
  def via_app; end

  sig { returns(T::Boolean) }
  def via_app?; end
end
