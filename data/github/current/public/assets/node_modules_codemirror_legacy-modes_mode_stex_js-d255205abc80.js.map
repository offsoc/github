{"version":3,"file":"chunk-node_modules_codemirror_legacy-modes_mode_stex_js-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@codemirror/legacy-modes/mode/stex.js"],"sourcesContent":["function mkStex(mathMode) {\n  function pushCommand(state, command) {\n    state.cmdState.push(command);\n  }\n\n  function peekCommand(state) {\n    if (state.cmdState.length > 0) {\n      return state.cmdState[state.cmdState.length - 1];\n    } else {\n      return null;\n    }\n  }\n\n  function popCommand(state) {\n    var plug = state.cmdState.pop();\n    if (plug) {\n      plug.closeBracket();\n    }\n  }\n\n  // returns the non-default plugin closest to the end of the list\n  function getMostPowerful(state) {\n    var context = state.cmdState;\n    for (var i = context.length - 1; i >= 0; i--) {\n      var plug = context[i];\n      if (plug.name == \"DEFAULT\") {\n        continue;\n      }\n      return plug;\n    }\n    return { styleIdentifier: function() { return null; } };\n  }\n\n  function addPluginPattern(pluginName, cmdStyle, styles) {\n    return function () {\n      this.name = pluginName;\n      this.bracketNo = 0;\n      this.style = cmdStyle;\n      this.styles = styles;\n      this.argument = null;   // \\begin and \\end have arguments that follow. These are stored in the plugin\n\n      this.styleIdentifier = function() {\n        return this.styles[this.bracketNo - 1] || null;\n      };\n      this.openBracket = function() {\n        this.bracketNo++;\n        return \"bracket\";\n      };\n      this.closeBracket = function() {};\n    };\n  }\n\n  var plugins = {};\n\n  plugins[\"importmodule\"] = addPluginPattern(\"importmodule\", \"tag\", [\"string\", \"builtin\"]);\n  plugins[\"documentclass\"] = addPluginPattern(\"documentclass\", \"tag\", [\"\", \"atom\"]);\n  plugins[\"usepackage\"] = addPluginPattern(\"usepackage\", \"tag\", [\"atom\"]);\n  plugins[\"begin\"] = addPluginPattern(\"begin\", \"tag\", [\"atom\"]);\n  plugins[\"end\"] = addPluginPattern(\"end\", \"tag\", [\"atom\"]);\n\n  plugins[\"label\"    ] = addPluginPattern(\"label\"    , \"tag\", [\"atom\"]);\n  plugins[\"ref\"      ] = addPluginPattern(\"ref\"      , \"tag\", [\"atom\"]);\n  plugins[\"eqref\"    ] = addPluginPattern(\"eqref\"    , \"tag\", [\"atom\"]);\n  plugins[\"cite\"     ] = addPluginPattern(\"cite\"     , \"tag\", [\"atom\"]);\n  plugins[\"bibitem\"  ] = addPluginPattern(\"bibitem\"  , \"tag\", [\"atom\"]);\n  plugins[\"Bibitem\"  ] = addPluginPattern(\"Bibitem\"  , \"tag\", [\"atom\"]);\n  plugins[\"RBibitem\" ] = addPluginPattern(\"RBibitem\" , \"tag\", [\"atom\"]);\n\n  plugins[\"DEFAULT\"] = function () {\n    this.name = \"DEFAULT\";\n    this.style = \"tag\";\n\n    this.styleIdentifier = this.openBracket = this.closeBracket = function() {};\n  };\n\n  function setState(state, f) {\n    state.f = f;\n  }\n\n  // called when in a normal (no environment) context\n  function normal(source, state) {\n    var plug;\n    // Do we look like '\\command' ?  If so, attempt to apply the plugin 'command'\n    if (source.match(/^\\\\[a-zA-Z@\\xc0-\\u1fff\\u2060-\\uffff]+/)) {\n      var cmdName = source.current().slice(1);\n      plug = plugins.hasOwnProperty(cmdName) ? plugins[cmdName] : plugins[\"DEFAULT\"];\n      plug = new plug();\n      pushCommand(state, plug);\n      setState(state, beginParams);\n      return plug.style;\n    }\n\n    // escape characters\n    if (source.match(/^\\\\[$&%#{}_]/)) {\n      return \"tag\";\n    }\n\n    // white space control characters\n    if (source.match(/^\\\\[,;!\\/\\\\]/)) {\n      return \"tag\";\n    }\n\n    // find if we're starting various math modes\n    if (source.match(\"\\\\[\")) {\n      setState(state, function(source, state){ return inMathMode(source, state, \"\\\\]\"); });\n      return \"keyword\";\n    }\n    if (source.match(\"\\\\(\")) {\n      setState(state, function(source, state){ return inMathMode(source, state, \"\\\\)\"); });\n      return \"keyword\";\n    }\n    if (source.match(\"$$\")) {\n      setState(state, function(source, state){ return inMathMode(source, state, \"$$\"); });\n      return \"keyword\";\n    }\n    if (source.match(\"$\")) {\n      setState(state, function(source, state){ return inMathMode(source, state, \"$\"); });\n      return \"keyword\";\n    }\n\n    var ch = source.next();\n    if (ch == \"%\") {\n      source.skipToEnd();\n      return \"comment\";\n    } else if (ch == '}' || ch == ']') {\n      plug = peekCommand(state);\n      if (plug) {\n        plug.closeBracket(ch);\n        setState(state, beginParams);\n      } else {\n        return \"error\";\n      }\n      return \"bracket\";\n    } else if (ch == '{' || ch == '[') {\n      plug = plugins[\"DEFAULT\"];\n      plug = new plug();\n      pushCommand(state, plug);\n      return \"bracket\";\n    } else if (/\\d/.test(ch)) {\n      source.eatWhile(/[\\w.%]/);\n      return \"atom\";\n    } else {\n      source.eatWhile(/[\\w\\-_]/);\n      plug = getMostPowerful(state);\n      if (plug.name == 'begin') {\n        plug.argument = source.current();\n      }\n      return plug.styleIdentifier();\n    }\n  }\n\n  function inMathMode(source, state, endModeSeq) {\n    if (source.eatSpace()) {\n      return null;\n    }\n    if (endModeSeq && source.match(endModeSeq)) {\n      setState(state, normal);\n      return \"keyword\";\n    }\n    if (source.match(/^\\\\[a-zA-Z@]+/)) {\n      return \"tag\";\n    }\n    if (source.match(/^[a-zA-Z]+/)) {\n      return \"variableName.special\";\n    }\n    // escape characters\n    if (source.match(/^\\\\[$&%#{}_]/)) {\n      return \"tag\";\n    }\n    // white space control characters\n    if (source.match(/^\\\\[,;!\\/]/)) {\n      return \"tag\";\n    }\n    // special math-mode characters\n    if (source.match(/^[\\^_&]/)) {\n      return \"tag\";\n    }\n    // non-special characters\n    if (source.match(/^[+\\-<>|=,\\/@!*:;'\"`~#?]/)) {\n      return null;\n    }\n    if (source.match(/^(\\d+\\.\\d*|\\d*\\.\\d+|\\d+)/)) {\n      return \"number\";\n    }\n    var ch = source.next();\n    if (ch == \"{\" || ch == \"}\" || ch == \"[\" || ch == \"]\" || ch == \"(\" || ch == \")\") {\n      return \"bracket\";\n    }\n\n    if (ch == \"%\") {\n      source.skipToEnd();\n      return \"comment\";\n    }\n    return \"error\";\n  }\n\n  function beginParams(source, state) {\n    var ch = source.peek(), lastPlug;\n    if (ch == '{' || ch == '[') {\n      lastPlug = peekCommand(state);\n      lastPlug.openBracket(ch);\n      source.eat(ch);\n      setState(state, normal);\n      return \"bracket\";\n    }\n    if (/[ \\t\\r]/.test(ch)) {\n      source.eat(ch);\n      return null;\n    }\n    setState(state, normal);\n    popCommand(state);\n\n    return normal(source, state);\n  }\n\n  return {\n    name: \"stex\",\n    startState: function() {\n      var f = mathMode ? function(source, state){ return inMathMode(source, state); } : normal;\n      return {\n        cmdState: [],\n        f: f\n      };\n    },\n    copyState: function(s) {\n      return {\n        cmdState: s.cmdState.slice(),\n        f: s.f\n      };\n    },\n    token: function(stream, state) {\n      return state.f(stream, state);\n    },\n    blankLine: function(state) {\n      state.f = normal;\n      state.cmdState.length = 0;\n    },\n    languageData: {\n      commentTokens: {line: \"%\"}\n    }\n  };\n};\n\nexport const stex = mkStex(false)\nexport const stexMath = mkStex(true)\n"],"names":["mkStex","mathMode","pushCommand","state","command","cmdState","push","peekCommand","length","addPluginPattern","pluginName","cmdStyle","styles","name","bracketNo","style","argument","styleIdentifier","openBracket","closeBracket","plugins","normal","source","match","f","plug","cmdName","current","slice","hasOwnProperty","beginParams","inMathMode","ch","next","skipToEnd","test","eatWhile","getMostPowerful","context","i","endModeSeq","eatSpace","peek","lastPlug","eat","pop","startState","copyState","s","token","stream","blankLine","languageData","commentTokens","line","stex","stexMath"],"sourceRoot":""}