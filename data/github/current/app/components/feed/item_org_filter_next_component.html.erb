<%= render Primer::BaseComponent.new(
  tag: "feed-filter-next",
  test_selector: "item-org-filter-next-component",
  display: :flex,
  direction: :column,
  classes: "overflow-hidden",
  data: {
    "target": "feed-container.filter",
    "value": values.to_json,
    "default": default_values.to_json,
    "org": org,
  }
) do %>
  <div class="SelectMenu-header js-navigation-enable d-flex flex-justify-between" tabindex="-1">
    <span class="SelectMenu-title" <%= test_selector("filter-title") %>><%= filter_title %></span>
    <button class="SelectMenu-closeButton" type="button" aria-label="Close menu" data-toggle-for="feed-filter-menu">
      <%= render Primer::Beta::Octicon.new(icon: "x") %>
    </button>
  </div>

  <div class="pb-3 pt-2 overflow-auto">
    <div class="SelectMenu-list SelectMenu-list--borderless" role="menu">
      <% item_filter_groups.each do |group_name| %>
        <% selected = feed_filter.includes_group?(group_name) %>
        <label
          data-action="click:feed-filter-next#handleToggle"
          class="d-flex pl-0 my-2 px-3 flex-column flex-items-start text-normal SelectMenu-item js-navigation-item"
          data-selected="<%= selected %>"
          <%= test_selector("filter-option-#{group_name}") %>
          data-name="<%= group_name %>">
          <div class="d-flex flex-items-center">
            <input
              type="checkbox"
              data-targets="feed-filter-next.inputs"
              name="<%= group_name %>"
              <%= "checked" if selected %>
            >
            <%= primer_octicon(GROUP_ICON[group_name][:name], classes: "feed-filter-item-icon", color: :muted, mx: 2) %>

            <h5 class="d-flex flex-items-center">
              <%= group_name.underscore.humanize %>
            </h5>
          </div>
          <div class="d-flex flex-column">
            <span class="small color-fg-muted mt-1" style="margin-left: 21px"><%= get_group_details(group_name: group_name) %></span>
          </div>
        </label>
      <% end %>
    </div>

  </div>

  <hr class="m-0 color-fg-muted">
  <div class="p-2 d-flex flex-justify-end">
    <%= csrf_hidden_input_for conduit_filter_path,
      method: :put,
      data: { "target": "feed-filter-next.csrfToken" } %>

    <%= render(Primer::Beta::Button.new(
      mr: 2,
      py: 2,
      type: :button,
      scheme: :invisible,
      data: {
        "action": "click:feed-filter-next#resetFilterToDefault",
      }.merge!(button_hydro_data)
    )) { "Reset to default" } %>

    <%= render(Primer::Beta::Button.new(
      type: :button,
      py: 2,
      scheme: :primary,
      data: {
        "action": "click:feed-filter-next#handleApply",
        "toggle-for": "feed-filter-menu",
        "target": "feed-filter-next.applyButton"
      }.merge!(button_hydro_data)
    )) { "Save" } %>
  </div>
<% end %>
