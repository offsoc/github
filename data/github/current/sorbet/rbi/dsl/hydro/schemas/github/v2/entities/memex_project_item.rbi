# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V2::Entities::MemexProjectItem`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V2::Entities::MemexProjectItem`.

class Hydro::Schemas::Github::V2::Entities::MemexProjectItem
  sig do
    params(
      created_at: T.nilable(Google::Protobuf::Timestamp),
      draft_issue: T.nilable(Hydro::Schemas::Github::V2::Entities::DraftIssue),
      id: T.nilable(Integer),
      issue: T.nilable(Hydro::Schemas::Github::V1::Entities::Issue),
      memex_project_id: T.nilable(Integer),
      pull_request: T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequest),
      updated_at: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(created_at: nil, draft_issue: nil, id: nil, issue: nil, memex_project_id: nil, pull_request: nil, updated_at: nil); end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_draft_issue; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_issue; end

  sig { void }
  def clear_memex_project_id; end

  sig { void }
  def clear_pull_request; end

  sig { void }
  def clear_updated_at; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V2::Entities::DraftIssue)) }
  def draft_issue; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V2::Entities::DraftIssue)).void }
  def draft_issue=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Issue)) }
  def issue; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Issue)).void }
  def issue=(value); end

  sig { returns(Integer) }
  def memex_project_id; end

  sig { params(value: Integer).void }
  def memex_project_id=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequest)) }
  def pull_request; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::PullRequest)).void }
  def pull_request=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end
end
