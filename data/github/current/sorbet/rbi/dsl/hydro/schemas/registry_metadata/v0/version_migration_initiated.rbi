# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::RegistryMetadata::V0::VersionMigrationInitiated`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::RegistryMetadata::V0::VersionMigrationInitiated`.

class Hydro::Schemas::RegistryMetadata::V0::VersionMigrationInitiated
  sig do
    params(
      aliases: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      blob_store_paths: T.nilable(T.any(Google::Protobuf::Map[String, String], T::Hash[String, String])),
      file: T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::PackageFile),
      files: T.nilable(T.any(Google::Protobuf::RepeatedField[Hydro::Schemas::RegistryMetadata::V0::Entities::PackageFile], T::Array[Hydro::Schemas::RegistryMetadata::V0::Entities::PackageFile])),
      initiated_at: T.nilable(Google::Protobuf::Timestamp),
      is_forced: T.nilable(T::Boolean),
      is_repo_migration: T.nilable(T::Boolean),
      last_migrated_package_id: T.nilable(Integer),
      last_migrated_version_id: T.nilable(Integer),
      owner_id: T.nilable(Integer),
      package: T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::Package),
      version: T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::Version)
    ).void
  end
  def initialize(aliases: T.unsafe(nil), blob_store_paths: T.unsafe(nil), file: nil, files: T.unsafe(nil), initiated_at: nil, is_forced: nil, is_repo_migration: nil, last_migrated_package_id: nil, last_migrated_version_id: nil, owner_id: nil, package: nil, version: nil); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def aliases; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def aliases=(value); end

  sig { returns(Google::Protobuf::Map[String, String]) }
  def blob_store_paths; end

  sig { params(value: Google::Protobuf::Map[String, String]).void }
  def blob_store_paths=(value); end

  sig { void }
  def clear_aliases; end

  sig { void }
  def clear_blob_store_paths; end

  sig { void }
  def clear_file; end

  sig { void }
  def clear_files; end

  sig { void }
  def clear_initiated_at; end

  sig { void }
  def clear_is_forced; end

  sig { void }
  def clear_is_repo_migration; end

  sig { void }
  def clear_last_migrated_package_id; end

  sig { void }
  def clear_last_migrated_version_id; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_package; end

  sig { void }
  def clear_version; end

  sig { returns(T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::PackageFile)) }
  def file; end

  sig { params(value: T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::PackageFile)).void }
  def file=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Hydro::Schemas::RegistryMetadata::V0::Entities::PackageFile]) }
  def files; end

  sig do
    params(
      value: Google::Protobuf::RepeatedField[Hydro::Schemas::RegistryMetadata::V0::Entities::PackageFile]
    ).void
  end
  def files=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def initiated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def initiated_at=(value); end

  sig { returns(T::Boolean) }
  def is_forced; end

  sig { params(value: T::Boolean).void }
  def is_forced=(value); end

  sig { returns(T::Boolean) }
  def is_repo_migration; end

  sig { params(value: T::Boolean).void }
  def is_repo_migration=(value); end

  sig { returns(Integer) }
  def last_migrated_package_id; end

  sig { params(value: Integer).void }
  def last_migrated_package_id=(value); end

  sig { returns(Integer) }
  def last_migrated_version_id; end

  sig { params(value: Integer).void }
  def last_migrated_version_id=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::Package)) }
  def package; end

  sig { params(value: T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::Package)).void }
  def package=(value); end

  sig { returns(T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::Version)) }
  def version; end

  sig { params(value: T.nilable(Hydro::Schemas::RegistryMetadata::V0::Entities::Version)).void }
  def version=(value); end
end
