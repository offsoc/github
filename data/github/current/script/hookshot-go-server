#!/bin/bash
#/ Usage: script/hookshot-go-server
#/
#/ Runs hookshot-go service.

SCRIPT_DIR=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")
source $SCRIPT_DIR/dx/lib/subproject-containers

echo "running hookshot migrations"
script/create-hookshot-cluster --verbose --migrate || exit 1

if [ -n "$SKIP_HOOKSHOT" ] ; then
  echo "skipping hookshot-go"
else
  SUBPROJECT_VERSION=$(subproject_version "hookshot-go")
  echo "hookshot-go version $SUBPROJECT_VERSION"

  # Ensure we clean up any existing containers, and remove after shutdown.
  cleanup_docker() {
    echo "Stopping hookshot-go..."
    docker stop hookshot-go || true
  }

  trap cleanup_docker EXIT INT QUIT TERM HUP

  docker stop hookshot-go &> /dev/null || true
  docker rm hookshot-go &> /dev/null || true

  # Run the hookshot go service.
  docker run -d --rm --name hookshot-go --env-file $SCRIPT_DIR/../tmp/.server.env \
    --network host "ghcr.io/github/shared-dev/hookshot-go-dev:$SUBPROJECT_VERSION"

  docker logs --follow hookshot-go
fi
