# typed: false

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `monolith-twirp-git_src_migrator-migrations` gem.
# Please instead update this file by running `bin/tapioca gem monolith-twirp-git_src_migrator-migrations`.

module Google::Protobuf::MessageExts::ClassMethods; end

# source://monolith-twirp-git_src_migrator-migrations//lib/monolith-twirp-git_src_migrator-migrations.rb#7
module Monolith; end

# source://monolith-twirp-git_src_migrator-migrations//lib/monolith-twirp-git_src_migrator-migrations.rb#8
module Monolith::Twirp; end

# source://monolith-twirp-git_src_migrator-migrations//lib/monolith-twirp-git_src_migrator-migrations.rb#9
module Monolith::Twirp::GitSrcMigrator; end

# source://monolith-twirp-git_src_migrator-migrations//lib/monolith-twirp-git_src_migrator-migrations.rb#10
module Monolith::Twirp::GitSrcMigrator::Migrations; end

# source://monolith-twirp-git_src_migrator-migrations//lib/monolith-twirp-git_src_migrator-migrations.rb#11
class Monolith::Twirp::GitSrcMigrator::Migrations::Error < ::StandardError; end

# source://monolith-twirp-git_src_migrator-migrations//lib/monolith_twirp/git_src_migrator/migrations/version.rb#3
module MonolithTwirp; end

# source://monolith-twirp-git_src_migrator-migrations//lib/monolith_twirp/git_src_migrator/migrations/version.rb#4
module MonolithTwirp::GitSrcMigrator; end

# source://monolith-twirp-git_src_migrator-migrations//lib/monolith_twirp/git_src_migrator/migrations/version.rb#5
module MonolithTwirp::GitSrcMigrator::Migrations; end

# source://monolith-twirp-git_src_migrator-migrations//lib/monolith_twirp/git_src_migrator/migrations/v1/gsm_migration_api_pb.rb#60
module MonolithTwirp::GitSrcMigrator::Migrations::V1; end

class MonolithTwirp::GitSrcMigrator::Migrations::V1::GetMigrationRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::GitSrcMigrator::Migrations::V1::GetMigrationResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::GitSrcMigrator::Migrations::V1::Migration
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

# source://monolith-twirp-git_src_migrator-migrations//lib/monolith_twirp/git_src_migrator/migrations/v1/gsm_migration_api_twirp.rb#16
class MonolithTwirp::GitSrcMigrator::Migrations::V1::MigrationAPIClient < ::Twirp::Client
  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_migration(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def start_migration(input, req_opts = T.unsafe(nil)); end
end

# source://monolith-twirp-git_src_migrator-migrations//lib/monolith_twirp/git_src_migrator/migrations/v1/gsm_migration_api_twirp.rb#9
class MonolithTwirp::GitSrcMigrator::Migrations::V1::MigrationAPIService < ::Twirp::Service; end

module MonolithTwirp::GitSrcMigrator::Migrations::V1::MigrationState
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-git_src_migrator-migrations//lib/monolith_twirp/git_src_migrator/migrations/v1/gsm_migration_api_pb.rb#67
MonolithTwirp::GitSrcMigrator::Migrations::V1::MigrationState::MIGRATION_STATE_FAILED = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-git_src_migrator-migrations//lib/monolith_twirp/git_src_migrator/migrations/v1/gsm_migration_api_pb.rb#67
MonolithTwirp::GitSrcMigrator::Migrations::V1::MigrationState::MIGRATION_STATE_FAILED_VALIDATION = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-git_src_migrator-migrations//lib/monolith_twirp/git_src_migrator/migrations/v1/gsm_migration_api_pb.rb#67
MonolithTwirp::GitSrcMigrator::Migrations::V1::MigrationState::MIGRATION_STATE_INVALID = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-git_src_migrator-migrations//lib/monolith_twirp/git_src_migrator/migrations/v1/gsm_migration_api_pb.rb#67
MonolithTwirp::GitSrcMigrator::Migrations::V1::MigrationState::MIGRATION_STATE_IN_PROGRESS = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-git_src_migrator-migrations//lib/monolith_twirp/git_src_migrator/migrations/v1/gsm_migration_api_pb.rb#67
MonolithTwirp::GitSrcMigrator::Migrations::V1::MigrationState::MIGRATION_STATE_PENDING = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-git_src_migrator-migrations//lib/monolith_twirp/git_src_migrator/migrations/v1/gsm_migration_api_pb.rb#67
MonolithTwirp::GitSrcMigrator::Migrations::V1::MigrationState::MIGRATION_STATE_SUCCEEDED = T.let(T.unsafe(nil), Integer)

module MonolithTwirp::GitSrcMigrator::Migrations::V1::SourceType
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-git_src_migrator-migrations//lib/monolith_twirp/git_src_migrator/migrations/v1/gsm_migration_api_pb.rb#66
MonolithTwirp::GitSrcMigrator::Migrations::V1::SourceType::SOURCE_TYPE_AZURE_DEVOPS = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-git_src_migrator-migrations//lib/monolith_twirp/git_src_migrator/migrations/v1/gsm_migration_api_pb.rb#66
MonolithTwirp::GitSrcMigrator::Migrations::V1::SourceType::SOURCE_TYPE_BITBUCKET_SERVER = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-git_src_migrator-migrations//lib/monolith_twirp/git_src_migrator/migrations/v1/gsm_migration_api_pb.rb#66
MonolithTwirp::GitSrcMigrator::Migrations::V1::SourceType::SOURCE_TYPE_GITHUB = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-git_src_migrator-migrations//lib/monolith_twirp/git_src_migrator/migrations/v1/gsm_migration_api_pb.rb#66
MonolithTwirp::GitSrcMigrator::Migrations::V1::SourceType::SOURCE_TYPE_INVALID = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-git_src_migrator-migrations//lib/monolith_twirp/git_src_migrator/migrations/v1/gsm_migration_api_pb.rb#66
MonolithTwirp::GitSrcMigrator::Migrations::V1::SourceType::SOURCE_TYPE_SOURCE_IMPORT = T.let(T.unsafe(nil), Integer)

class MonolithTwirp::GitSrcMigrator::Migrations::V1::StartMigrationRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::GitSrcMigrator::Migrations::V1::StartMigrationResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

# source://monolith-twirp-git_src_migrator-migrations//lib/monolith_twirp/git_src_migrator/migrations/version.rb#6
MonolithTwirp::GitSrcMigrator::Migrations::VERSION = T.let(T.unsafe(nil), String)
