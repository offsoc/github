{"version":3,"file":"oauth-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@github/remote-form/dist/index.js","app/assets/modules/oauth.ts","app/assets/modules/github/page-focused.ts"],"sourcesContent":["// Parse HTML text into document fragment.\nfunction parseHTML(document, html) {\n    const template = document.createElement('template');\n    // eslint-disable-next-line github/no-inner-html\n    template.innerHTML = html;\n    return document.importNode(template.content, true);\n}\nfunction serialize(form) {\n    const params = new URLSearchParams();\n    const entries = new FormData(form).entries();\n    for (const [name, value] of [...entries]) {\n        params.append(name, value.toString());\n    }\n    return params.toString();\n}\nexport class ErrorWithResponse extends Error {\n    constructor(message, response) {\n        super(message);\n        this.response = response;\n    }\n}\nfunction makeDeferred() {\n    let resolve;\n    let reject;\n    const promise = new Promise(function (_resolve, _reject) {\n        resolve = _resolve;\n        reject = _reject;\n    });\n    return [promise, resolve, reject];\n}\nlet formHandlers;\nconst afterHandlers = [];\nconst beforeHandlers = [];\nexport function afterRemote(fn) {\n    afterHandlers.push(fn);\n}\nexport function beforeRemote(fn) {\n    beforeHandlers.push(fn);\n}\nexport function remoteForm(selector, fn) {\n    if (!formHandlers) {\n        formHandlers = new Map();\n        if (typeof document !== 'undefined') {\n            document.addEventListener('submit', handleSubmit);\n        }\n    }\n    const handlers = formHandlers.get(selector) || [];\n    formHandlers.set(selector, [...handlers, fn]);\n}\nexport function remoteUninstall(selector, fn) {\n    if (formHandlers) {\n        const handlers = formHandlers.get(selector) || [];\n        formHandlers.set(selector, handlers.filter(x => x !== fn));\n    }\n}\nfunction getMatches(el) {\n    const results = [];\n    for (const selector of formHandlers.keys()) {\n        if (el.matches(selector)) {\n            const handlers = formHandlers.get(selector) || [];\n            results.push(...handlers);\n        }\n    }\n    return results;\n}\nfunction handleSubmit(event) {\n    if (!(event.target instanceof HTMLFormElement) || event.defaultPrevented) {\n        return;\n    }\n    const form = event.target;\n    const matches = getMatches(form);\n    if (matches.length === 0) {\n        return;\n    }\n    const req = buildRequest(form);\n    const [kickerPromise, ultimateResolve, ultimateReject] = makeDeferred();\n    event.preventDefault();\n    processHandlers(matches, form, req, kickerPromise).then(async (performAsyncSubmit) => {\n        if (performAsyncSubmit) {\n            for (const handler of beforeHandlers) {\n                await handler(form);\n            }\n            // TODO: ensure that these exceptions are processed by our global error handler\n            remoteSubmit(req)\n                .then(ultimateResolve, ultimateReject)\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                .catch(() => { })\n                .then(() => {\n                for (const handler of afterHandlers) {\n                    handler(form);\n                }\n            });\n        }\n        else {\n            // No handler called the kicker function\n            form.submit();\n        }\n    }, (err) => {\n        // TODO: special \"cancel\" error object to halt processing and avoid\n        // submitting the form\n        form.submit();\n        setTimeout(() => {\n            throw err;\n        });\n    });\n}\n// Process each handler sequentially until it either completes or calls the\n// kicker function.\nasync function processHandlers(matches, form, req, kickerPromise) {\n    let kickerWasCalled = false;\n    for (const match of matches) {\n        const [kickerCalled, kickerCalledResolve] = makeDeferred();\n        const kick = () => {\n            kickerWasCalled = true;\n            kickerCalledResolve();\n            return kickerPromise;\n        };\n        const kicker = {\n            text: kick,\n            json: () => {\n                req.headers.set('Accept', 'application/json');\n                return kick();\n            },\n            html: () => {\n                req.headers.set('Accept', 'text/html');\n                return kick();\n            }\n        };\n        await Promise.race([kickerCalled, match(form, kicker, req)]);\n    }\n    return kickerWasCalled;\n}\nfunction buildRequest(form) {\n    const req = {\n        method: form.method || 'GET',\n        url: form.action,\n        headers: new Headers({ 'X-Requested-With': 'XMLHttpRequest' }),\n        body: null\n    };\n    if (req.method.toUpperCase() === 'GET') {\n        const data = serialize(form);\n        if (data) {\n            req.url += (~req.url.indexOf('?') ? '&' : '?') + data;\n        }\n    }\n    else {\n        req.body = new FormData(form);\n    }\n    return req;\n}\nasync function remoteSubmit(req) {\n    const response = await window.fetch(req.url, {\n        method: req.method,\n        body: req.body !== null ? req.body : undefined,\n        headers: req.headers,\n        credentials: 'same-origin'\n    });\n    const res = {\n        url: response.url,\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers,\n        text: '',\n        get json() {\n            // eslint-disable-next-line @typescript-eslint/no-shadow, @typescript-eslint/no-this-alias\n            const response = this;\n            const data = JSON.parse(response.text);\n            delete response.json;\n            response.json = data;\n            return response.json;\n        },\n        get html() {\n            // eslint-disable-next-line @typescript-eslint/no-shadow, @typescript-eslint/no-this-alias\n            const response = this;\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            delete response.html;\n            response.html = parseHTML(document, response.text);\n            return response.html;\n        }\n    };\n    const body = await response.text();\n    res.text = body;\n    if (response.ok) {\n        return res;\n    }\n    else {\n        throw new ErrorWithResponse('request failed', res);\n    }\n}\n//# sourceMappingURL=index.js.map","// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\nimport pageFocused from './github/page-focused'\nimport {remoteForm} from '@github/remote-form'\n\n// By default the oauth button remains disabled until the visitor focusses the\n// window. This event handler enables the button once the window has been focussed.\nasync function updateButtonOnPageFocused(button: Element) {\n  await pageFocused(document)\n  await new Promise(resolve => setTimeout(resolve, 1000))\n  if (button instanceof HTMLButtonElement) button.disabled = false\n}\n\nfunction unclickableEvent(event: Event) {\n  event.preventDefault()\n}\n\nasync function enableManualRedirect(link: Element) {\n  link.addEventListener('click', unclickableEvent)\n  link.classList.add('color-fg-muted')\n\n  await new Promise(resolve => setTimeout(resolve, 3000))\n\n  link.classList.remove('color-fg-muted')\n  link.removeEventListener('click', unclickableEvent)\n}\n\nobserve('.js-authorization-buttons .js-oauth-authorize-btn', authorizeButton => {\n  updateButtonOnPageFocused(authorizeButton)\n})\n\nobserve('#js-manual-authorize-redirect', manualAuthorizeLink => {\n  enableManualRedirect(manualAuthorizeLink)\n})\n\nremoteForm('.js-toggler-container .js-set-approval-state', async function (form, wants) {\n  const container = form.closest('.js-toggler-container')!\n  container.classList.add('loading')!\n  const response = await wants.json()\n  if (response.json.approval_state === 'approved') {\n    container.classList.add('on')\n  } else if (response.json.approval_state === 'denied') {\n    container.classList.add('revoked')\n    container.classList.remove('on')\n  }\n  container.classList.remove('loading')\n})\n\n// Settings -> Applications -> Organization access -> \"Request access\" button\nremoteForm('.js-request-access-approval-form', async function (form, wants) {\n  await wants.text()\n  const id = form.getAttribute('data-container-id')!\n  document.querySelector(`#${id}`)!.classList.add('on')\n})\n","// If the user has focus on the current page, the promise is resolved immediately.\n//\n// If the page is in the background, the promise is resolved once the user interacts\n// with the page.\nexport default function pageFocused(document: Document): Promise<void> {\n  return new Promise(function (resolve) {\n    function check() {\n      if (document.hasFocus()) {\n        resolve()\n        document.removeEventListener('visibilitychange', check)\n        window.removeEventListener('focus', check)\n        window.removeEventListener('blur', check)\n      }\n    }\n    document.addEventListener('visibilitychange', check)\n    window.addEventListener('focus', check)\n    window.addEventListener('blur', check)\n    check()\n  })\n}\n"],"names":["formHandlers","ErrorWithResponse","Error","constructor","message","response","makeDeferred","resolve","reject","Promise","_resolve","_reject","afterHandlers","beforeHandlers","afterRemote","fn","push","beforeRemote","remoteForm","selector","Map","document","addEventListener","handleSubmit","handlers","get","set","event","target","HTMLFormElement","defaultPrevented","form","matches","getMatches","el","results","keys","length","req","buildRequest","method","url","action","headers","Headers","body","toUpperCase","data","serialize","params","URLSearchParams","name","value","FormData","entries","append","toString","indexOf","kickerPromise","ultimateResolve","ultimateReject","preventDefault","processHandlers","then","performAsyncSubmit","handler","remoteSubmit","catch","submit","setTimeout","err","kickerWasCalled","match","kickerCalled","kickerCalledResolve","kick","kicker","text","json","html","race","window","fetch","undefined","credentials","res","status","statusText","JSON","parse","parseHTML","template","createElement","innerHTML","importNode","content","ok","updateButtonOnPageFocused","button","check","hasFocus","removeEventListener","HTMLButtonElement","disabled","unclickableEvent","enableManualRedirect","link","classList","add","remove","observe","authorizeButton","manualAuthorizeLink","wants","container","closest","approval_state","id","getAttribute","querySelector"],"sourceRoot":""}