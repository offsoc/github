# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: monolith/v1/git_src_migrator_workflow_api.proto

require 'google/protobuf'

require 'google/protobuf/timestamp_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("monolith/v1/git_src_migrator_workflow_api.proto", :syntax => :proto3) do
    add_message "git_src_migrator.monolith.v1.RunDynamicWorkflowRequest" do
      optional :workflow, :string, 1
      repeated :inputs, :message, 2, "git_src_migrator.monolith.v1.WorkflowInput"
      repeated :secrets, :message, 3, "git_src_migrator.monolith.v1.WorkflowSecret"
      optional :workflow_name, :string, 4
      optional :workflow_slug, :string, 5
      optional :repository_name, :string, 6
      optional :owner_id, :int64, 7
      optional :user_id, :int64, 8
    end
    add_message "git_src_migrator.monolith.v1.WorkflowInput" do
      optional :name, :string, 1
      optional :value, :string, 2
    end
    add_message "git_src_migrator.monolith.v1.WorkflowSecret" do
      optional :name, :string, 1
      optional :secret, :string, 2
    end
    add_message "git_src_migrator.monolith.v1.RunDynamicWorkflowResponse" do
      optional :workflow_run_id, :int64, 1
      optional :workflow_repository_id, :int64, 2
      optional :workflow_repository_url, :string, 3
    end
    add_message "git_src_migrator.monolith.v1.GetWorkflowStatusRequest" do
      optional :workflow_run_id, :int64, 1
      optional :actions_repository_id, :int64, 2
    end
    add_message "git_src_migrator.monolith.v1.GetWorkflowStatusResponse" do
      optional :workflow_execution_id, :int64, 1
      optional :status, :enum, 2, "git_src_migrator.monolith.v1.Status"
      optional :conclusion, :enum, 3, "git_src_migrator.monolith.v1.Conclusion"
      optional :workflow_completed_at, :message, 4, "google.protobuf.Timestamp"
      repeated :jobs, :message, 5, "git_src_migrator.monolith.v1.Job"
      repeated :annotations, :message, 6, "git_src_migrator.monolith.v1.Annotation"
    end
    add_message "git_src_migrator.monolith.v1.Job" do
      optional :job_id, :int64, 1
      optional :job_name, :string, 2
      optional :status, :enum, 3, "git_src_migrator.monolith.v1.Status"
      optional :conclusion, :enum, 4, "git_src_migrator.monolith.v1.Conclusion"
      optional :job_completed_at, :message, 5, "google.protobuf.Timestamp"
      optional :job_started_at, :message, 6, "google.protobuf.Timestamp"
    end
    add_message "git_src_migrator.monolith.v1.Annotation" do
      optional :message, :string, 1
      optional :warning_level, :enum, 2, "git_src_migrator.monolith.v1.WarningLevel"
      optional :job_name, :string, 3
    end
    add_message "git_src_migrator.monolith.v1.ReRunJobRequest" do
      optional :job_id, :int64, 1
    end
    add_message "git_src_migrator.monolith.v1.ReRunJobResponse" do
    end
    add_enum "git_src_migrator.monolith.v1.Status" do
      value :STATUS_INVALID, 0
      value :STATUS_COMPLETED, 1
      value :STATUS_IN_PROGRESS, 2
      value :STATUS_PENDING, 3
      value :STATUS_QUEUED, 4
      value :STATUS_REQUESTED, 5
      value :STATUS_WAITING, 6
    end
    add_enum "git_src_migrator.monolith.v1.Conclusion" do
      value :CONCLUSION_INVALID, 0
      value :CONCLUSION_NIL, 1
      value :CONCLUSION_NEUTRAL, 2
      value :CONCLUSION_SUCCESS, 3
      value :CONCLUSION_FAILURE, 4
      value :CONCLUSION_CANCELLED, 5
      value :CONCLUSION_ACTION_REQUIRED, 6
      value :CONCLUSION_TIMED_OUT, 7
      value :CONCLUSION_SKIPPED, 8
      value :CONCLUSION_STALE, 9
      value :CONCLUSION_STARTUP_FAILURE, 10
    end
    add_enum "git_src_migrator.monolith.v1.SourceType" do
      value :SOURCE_TYPE_INVALID, 0
      value :SOURCE_TYPE_GITHUB, 1
      value :SOURCE_TYPE_AZURE_DEVOPS, 2
      value :SOURCE_TYPE_BITBUCKET_SERVER, 3
      value :SOURCE_TYPE_SOURCE_IMPORT, 4
    end
    add_enum "git_src_migrator.monolith.v1.WarningLevel" do
      value :WARNING_LEVEL_INVALID, 0
      value :WARNING_LEVEL_WARNING, 1
      value :WARNING_LEVEL_FAILURE, 2
      value :WARNING_LEVEL_NOTICE, 3
    end
  end
end

module MonolithTwirp
  module GitSrcMigrator
    module Monolith
      module V1
        RunDynamicWorkflowRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_src_migrator.monolith.v1.RunDynamicWorkflowRequest").msgclass
        WorkflowInput = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_src_migrator.monolith.v1.WorkflowInput").msgclass
        WorkflowSecret = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_src_migrator.monolith.v1.WorkflowSecret").msgclass
        RunDynamicWorkflowResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_src_migrator.monolith.v1.RunDynamicWorkflowResponse").msgclass
        GetWorkflowStatusRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_src_migrator.monolith.v1.GetWorkflowStatusRequest").msgclass
        GetWorkflowStatusResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_src_migrator.monolith.v1.GetWorkflowStatusResponse").msgclass
        Job = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_src_migrator.monolith.v1.Job").msgclass
        Annotation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_src_migrator.monolith.v1.Annotation").msgclass
        ReRunJobRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_src_migrator.monolith.v1.ReRunJobRequest").msgclass
        ReRunJobResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_src_migrator.monolith.v1.ReRunJobResponse").msgclass
        Status = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_src_migrator.monolith.v1.Status").enummodule
        Conclusion = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_src_migrator.monolith.v1.Conclusion").enummodule
        SourceType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_src_migrator.monolith.v1.SourceType").enummodule
        WarningLevel = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_src_migrator.monolith.v1.WarningLevel").enummodule
      end
    end
  end
end
