{
  "$schema": "http://json-schema.org/draft-04/hyper-schema",
  "id": "https://schema.github.com/v3/deployment-status.json",
  "title": "Deployment Status",
  "description": "The status of a deployment.",
  "type": "object",
  "definitions": {
    "state": {
      "description": "The state of the status.",
      "enum": [
        "error",
        "failure",
        "inactive",
        "pending",
        "success",
        "queued",
        "in_progress"
      ],
      "example": "success",
      "type": "string"
    },
    "target_url": {
      "description": "Deprecated: the URL to associate with this status.",
      "default": "",
      "type": "string",
      "format": "uri",
      "example": "https://example.com/deployment/42/output"
    },
    "log_url": {
      "description": "The URL to associate with this status.",
      "default": "",
      "type": "string",
      "format": "uri",
      "example": "https://example.com/deployment/42/output"
    },
    "environment": {
      "description": "The environment of the deployment that the status is for.",
      "default": "",
      "type": "string",
      "example": "production"
    },
    "description": {
      "description": "A short description of the status.",
      "default": "",
      "type": "string",
      "maxLength": 140,
      "example": "Deployment finished successfully."
    },
    "environment_url": {
      "description": "The URL for accessing your environment.",
      "default": "",
      "type": "string",
      "format": "uri",
      "example": ""
    },
    "auto_inactive": {
      "description": "Whether or not to make the previous equivalent deployment status.",
      "default": true,
      "type": "boolean"
    },
    "owner": {
      "description": "The owner of the repository.",
      "type": "string"
    },
    "repo": {
      "description": "The name of the repository.",
      "type": "string"
    },
    "deployment_id": {
      "description": "The ID of the deployment.",
      "type": "integer"
    },
    "repository_id": {
      "description": "The ID of the repository.",
      "type": "integer",
      "example": 42
    },
    "id": {
      "type": "integer",
      "example": 1
    },
    "node_id": {
      "type": "string",
      "example": "MDE2OkRlcGxveW1lbnRTdGF0dXMx"
    },
    "deployment_url": {
      "type": "string",
      "format": "uri",
      "example": "https://api.github.com/repos/octocat/example/deployments/42"
    },
    "repository_url": {
      "type": "string",
      "format": "uri",
      "example": "https://api.github.com/repos/octocat/example"
    },
    "url": {
      "type": "string",
      "format": "uri",
      "example": "https://api.github.com/repos/octocat/example/deployments/42/statuses/1"
    },
    "created_at": {
      "type": "string",
      "format": "date-time",
      "example": "2012-07-20T01:19:13Z"
    },
    "updated_at": {
      "type": "string",
      "format": "date-time",
      "example": "2012-07-20T01:19:13Z"
    }
  },
  "links": [
    {
      "title": "Create a deployment status",
      "method": "POST",
      "rel": "create",
      "href": "/repositories/{repository_id}/deployments/{deployment_id}/statuses",
      "schema": {
        "properties": {
          "environment": {
            "$ref": "#/definitions/environment"
          },
          "state": {
            "$ref": "#/definitions/state"
          },
          "target_url": {
            "$ref": "#/definitions/target_url"
          },
          "log_url": {
            "$ref": "#/definitions/log_url"
          },
          "description": {
            "$ref": "#/definitions/description"
          },
          "environment_url": {
            "$ref": "#/definitions/environment_url"
          },
          "auto_inactive": {
            "$ref": "#/definitions/auto_inactive"
          }
        },
        "additionalProperties": false,
        "required": [
          "state"
        ],
        "type": "object"
      }
    }
  ],
  "properties": {
    "id": {
      "$ref": "#/definitions/id"
    },
    "node_id": {
      "$ref": "#/definitions/node_id"
    },
    "state": {
      "$ref": "#/definitions/state"
    },
    "creator": {
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "https://schema.github.com/v3/simple-user.json#"
        }
      ]
    },
    "performed_via_github_app": {
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "https://schema.github.com/v3/integration.json#"
        }
      ]
    },
    "description": {
      "$ref": "#/definitions/description"
    },
    "environment": {
      "$ref": "#/definitions/environment"
    },
    "deployment_url": {
      "$ref": "#/definitions/deployment_url"
    },
    "environment_url": {
      "$ref": "#/definitions/environment_url"
    },
    "log_url": {
      "$ref": "#/definitions/log_url"
    },
    "target_url": {
      "$ref": "#/definitions/target_url"
    },
    "repository_url": {
      "$ref": "#/definitions/repository_url"
    },
    "url": {
      "$ref": "#/definitions/url"
    },
    "created_at": {
      "$ref": "#/definitions/created_at"
    },
    "updated_at": {
      "$ref": "#/definitions/updated_at"
    }
  },
  "additionalProperties": false,
  "required": [
    "id",
    "node_id",
    "state",
    "creator",
    "description",
    "deployment_url",
    "target_url",
    "repository_url",
    "url",
    "created_at",
    "updated_at"
  ]
}
