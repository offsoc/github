# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: migrator_service.proto

require 'google/protobuf'

require_relative 'pkg_entities_pb'
require_relative 'common_entities_pb'
require_relative 'container_entities_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("migrator_service.proto", :syntax => :proto3) do
    add_message "github.registry.metadata.v1.migrator.CreateVersionRequest" do
      optional :package, :message, 2, "github.registry.metadata.v1.migrator.pkg.Package"
      optional :version, :message, 3, "github.registry.metadata.v1.migrator.pkg.Version"
      repeated :aliases, :message, 4, "github.registry.metadata.v1.migrator.common.VersionAlias"
      optional :file, :message, 5, "github.registry.metadata.v1.migrator.pkg.PackageFile"
    end
    add_message "github.registry.metadata.v1.migrator.CreateVersionResponse" do
      optional :migrated_package_id, :int64, 1
      optional :migrated_version_id, :int64, 2
    end
    add_message "github.registry.metadata.v1.migrator.EmitDownloadEventRequest" do
      optional :namespace, :string, 1
      optional :package_name, :string, 2
      optional :version_name, :string, 3
      optional :ecosystem, :enum, 4, "github.registry.metadata.v1.migrator.pkg.Ecosystem"
    end
    add_message "github.registry.metadata.v1.migrator.EmitDownloadEventResponse" do
    end
    add_message "github.registry.metadata.v1.migrator.GetVersionRequest" do
      optional :namespace, :string, 1
      optional :package_name, :string, 2
      optional :version_name, :string, 3
      optional :ecosystem, :enum, 4, "github.registry.metadata.v1.migrator.pkg.Ecosystem"
    end
    add_message "github.registry.metadata.v1.migrator.GetVersionResponse" do
      optional :package_id, :int64, 1
      optional :version_id, :int64, 2
    end
    add_message "github.registry.metadata.v1.migrator.DoesBlobExistRequest" do
      optional :namespace, :string, 1
      optional :package_name, :string, 2
      oneof :blob do
        optional :layer, :message, 3, "github.registry.metadata.v1.migrator.container.Layer"
      end
    end
    add_message "github.registry.metadata.v1.migrator.DoesBlobExistResponse" do
    end
    add_message "github.registry.metadata.v1.migrator.DoesManifestExistRequest" do
      optional :namespace, :string, 1
      optional :package_name, :string, 2
      optional :tag, :message, 3, "github.registry.metadata.v1.migrator.container.Tag"
    end
    add_message "github.registry.metadata.v1.migrator.DoesManifestExistResponse" do
    end
    add_message "github.registry.metadata.v1.migrator.DoesNameConflictRequest" do
      optional :namespace, :string, 1
      optional :package_name, :string, 2
      optional :ecosystem, :enum, 3, "github.registry.metadata.v1.migrator.pkg.Ecosystem"
    end
    add_message "github.registry.metadata.v1.migrator.DoesNameConflictResponse" do
    end
    add_message "github.registry.metadata.v1.migrator.SyncDownloadCountRequest" do
      optional :namespace, :string, 1
      optional :package_name, :string, 2
      optional :version_name, :string, 3
      optional :ecosystem, :enum, 4, "github.registry.metadata.v1.migrator.pkg.Ecosystem"
    end
    add_message "github.registry.metadata.v1.migrator.SyncDownloadCountResponse" do
    end
  end
end

module Proto
  module RegistryMetadata
    module V1
      module Migrator
        CreateVersionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.migrator.CreateVersionRequest").msgclass
        CreateVersionResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.migrator.CreateVersionResponse").msgclass
        EmitDownloadEventRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.migrator.EmitDownloadEventRequest").msgclass
        EmitDownloadEventResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.migrator.EmitDownloadEventResponse").msgclass
        GetVersionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.migrator.GetVersionRequest").msgclass
        GetVersionResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.migrator.GetVersionResponse").msgclass
        DoesBlobExistRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.migrator.DoesBlobExistRequest").msgclass
        DoesBlobExistResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.migrator.DoesBlobExistResponse").msgclass
        DoesManifestExistRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.migrator.DoesManifestExistRequest").msgclass
        DoesManifestExistResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.migrator.DoesManifestExistResponse").msgclass
        DoesNameConflictRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.migrator.DoesNameConflictRequest").msgclass
        DoesNameConflictResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.migrator.DoesNameConflictResponse").msgclass
        SyncDownloadCountRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.migrator.SyncDownloadCountRequest").msgclass
        SyncDownloadCountResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.migrator.SyncDownloadCountResponse").msgclass
      end
    end
  end
end
