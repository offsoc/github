# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Turboscan::Proto::Result`.
# Please instead update this file by running `bin/tapioca dsl Turboscan::Proto::Result`.

class Turboscan::Proto::Result
  sig do
    params(
      created_at: T.nilable(Google::Protobuf::Timestamp),
      fixed_at: T.nilable(Google::Protobuf::Timestamp),
      guid: T.nilable(String),
      is_fixed: T.nilable(T::Boolean),
      message_markdown: T.nilable(String),
      message_text: T.nilable(String),
      most_recent_instance: T.nilable(Turboscan::Proto::AlertInstance),
      number: T.nilable(Integer),
      resolution: T.nilable(T.any(Symbol, Integer)),
      resolution_note: T.nilable(String),
      resolved_at: T.nilable(Google::Protobuf::Timestamp),
      resolver_id: T.nilable(Integer),
      rule: T.nilable(Turboscan::Proto::Rule),
      rule_severity: T.nilable(T.any(Symbol, Integer)),
      security_severity: T.nilable(T.any(Symbol, Integer)),
      tool: T.nilable(Turboscan::Proto::ToolDescription),
      updated_at: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(created_at: nil, fixed_at: nil, guid: nil, is_fixed: nil, message_markdown: nil, message_text: nil, most_recent_instance: nil, number: nil, resolution: nil, resolution_note: nil, resolved_at: nil, resolver_id: nil, rule: nil, rule_severity: nil, security_severity: nil, tool: nil, updated_at: nil); end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_fixed_at; end

  sig { void }
  def clear_guid; end

  sig { void }
  def clear_is_fixed; end

  sig { void }
  def clear_message_markdown; end

  sig { void }
  def clear_message_text; end

  sig { void }
  def clear_most_recent_instance; end

  sig { void }
  def clear_number; end

  sig { void }
  def clear_resolution; end

  sig { void }
  def clear_resolution_note; end

  sig { void }
  def clear_resolved_at; end

  sig { void }
  def clear_resolver_id; end

  sig { void }
  def clear_rule; end

  sig { void }
  def clear_rule_severity; end

  sig { void }
  def clear_security_severity; end

  sig { void }
  def clear_tool; end

  sig { void }
  def clear_updated_at; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def fixed_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def fixed_at=(value); end

  sig { returns(String) }
  def guid; end

  sig { params(value: String).void }
  def guid=(value); end

  sig { returns(T::Boolean) }
  def is_fixed; end

  sig { params(value: T::Boolean).void }
  def is_fixed=(value); end

  sig { returns(String) }
  def message_markdown; end

  sig { params(value: String).void }
  def message_markdown=(value); end

  sig { returns(String) }
  def message_text; end

  sig { params(value: String).void }
  def message_text=(value); end

  sig { returns(T.nilable(Turboscan::Proto::AlertInstance)) }
  def most_recent_instance; end

  sig { params(value: T.nilable(Turboscan::Proto::AlertInstance)).void }
  def most_recent_instance=(value); end

  sig { returns(Integer) }
  def number; end

  sig { params(value: Integer).void }
  def number=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def resolution; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def resolution=(value); end

  sig { returns(String) }
  def resolution_note; end

  sig { params(value: String).void }
  def resolution_note=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def resolved_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def resolved_at=(value); end

  sig { returns(Integer) }
  def resolver_id; end

  sig { params(value: Integer).void }
  def resolver_id=(value); end

  sig { returns(T.nilable(Turboscan::Proto::Rule)) }
  def rule; end

  sig { params(value: T.nilable(Turboscan::Proto::Rule)).void }
  def rule=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def rule_severity; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def rule_severity=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def security_severity; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def security_severity=(value); end

  sig { returns(T.nilable(Turboscan::Proto::ToolDescription)) }
  def tool; end

  sig { params(value: T.nilable(Turboscan::Proto::ToolDescription)).void }
  def tool=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end
end
