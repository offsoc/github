<%# erblint:counter DeprecatedComponentsCounter 1 %>
<% slack_channel_link = "https://github.slack.com/archives/C017CT2GN30" %>
<% page_info title: "#{current_repository.name_with_display_owner} - Security center" %>

<%= render(Primer::Beta::BorderBox.new(padding: :condensed, mb: 3, test_selector: "update-job")) do |component| %>
  <% component.with_header(p: 2, bg: :accent) do |h| %>
    <% h.with_title(tag: :h3) { "Resync data" } %>
  <% end %>

  <% component.with_body(p: 2, display: :flex, justify_content: :space_between) do %>
    <%= render(Primer::Box.new) do %>
      <%= render(Primer::Beta::Heading.new(tag: :h4)) { "Trigger update job" } %>
      <p>Triggers SecurityCenter::RepositorySyncJob for all security features of this repository.</p>
    <% end %>

    <%= render(Primer::Box.new) do %>
      <%= form_tag security_center_update_job_stafftools_repository_path(current_repository.owner, current_repository), method: :post do %>
        <%= render Primer::ButtonComponent.new(type: :submit) do %>Run update job<% end %>
      <% end %>
    <% end %>
  <% end %>

  <% component.with_footer(bg: :attention) do %>
    <p>Please let <%= safe_link_to "#security-overview", slack_channel_link, target: "_blank" %> know why you're resync'ing so we can work to fix any underlying issues.</p>
    <p>These buttons are safe to trigger, and the jobs should only take a few minutes to complete.</p>
  <% end %>
<% end %>

<%= render(Primer::Beta::BorderBox.new(padding: :condensed, mb: 3, test_selector: "conflicting-data")) do |component| %>
  <% header_bg = conflicts.blank? ? :success : :danger %>
  <% component.with_header(p: 2, bg: header_bg) do |h| %>
    <% h.with_title(tag: :h3) { "Conflicting data detections" } %>
  <% end %>

  <% if conflicts.blank? %>
    <% component.with_body(p: 2, display: :flex, justify_content: :space_between) do %>
      <p>No detections!</p>
    <% end %>
  <% else %>
    <% conflicts.each do |conflict| %>
      <% component.with_row do %>
        <%= conflict %>
      <% end %>
    <% end %>
  <% end %>
<% end %>

<%= render(Primer::Beta::BorderBox.new(padding: :condensed, mb: 3, test_selector: "repository-security-center-config-data")) do |component| %>
  <% component.with_header(p: 2) do |h| %>
    <% h.with_title(tag: :h3) { "RepositorySecurityCenterConfig" } %>
  <% end %>

  <% if config.nil? %>
    <% component.with_body(p: 2) { "This repository has no config." } %>
  <% else %>
    <% component.with_body(p: 0) do %>
      <table class="site-admin-table mb-0 border-0">
        <thead>
          <tr>
            <th>Advanced security enabled</th>
            <th>Visibility</th>
            <th>Archived</th>
            <th>Latest code push at</th>
            <th>Created at</th>
            <th>Updated at</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td><%= config.ghas_enabled %></td>
            <td><%= config.visibility %></td>
            <td><%= config.archived %></td>
            <td><%= config.last_push %></td>
            <td><%= config.created_at %></td>
            <td><%= config.updated_at %></td>
          </tr>
        </tbody>
      </table>
    <% end %>
  <% end %>
<% end %>

<%= render(Primer::Beta::BorderBox.new(padding: :condensed, mb: 3, test_selector: "repository-security-center-status-data")) do |component| %>
  <% component.with_header(p: 2) do |h| %>
    <% h.with_title(tag: :h3) { "RepositorySecurityCenterStatus" } %>
  <% end %>

  <% if statuses.any? %>
    <% component.with_body(p: 0) do %>
      <table class="site-admin-table mb-0 border-0">
        <thead>
          <tr>
            <th>Feature</th>
            <th>Enrollment</th>
            <th>Alert count</th>
            <th>Created at</th>
            <th>Updated at</th>
          </tr>
        </thead>
        <tbody>
          <% statuses.each do |status| %>
            <tr>
              <td><%= status.feature_type %></td>
              <td><%= status.scanning_status %></td>
              <td><%= status.scanning_count %></td>
              <td><%= status.created_at %></td>
              <td><%= status.updated_at %></td>
            </tr>
          <% end %>
        </tbody>
      </table>
    <% end %>
  <% else %>
    <% component.with_body(p: 2) { "This repository has no statuses." } %>
  <% end %>
<% end %>

<%= render(Primer::Beta::BorderBox.new(padding: :condensed, mb: 3, test_selector: "repository-security-center-severity-data")) do |component| %>
  <% component.with_header(p: 2) do |h| %>
    <% h.with_title(tag: :h3) { "SecurityCenterAlertSeverity" } %>
  <% end %>

  <% if severities.any? %>
    <% component.with_body(p: 0) do %>
      <table class="site-admin-table mb-0 border-0">
        <thead>
          <tr>
            <th>Feature</th>
            <th>Severity</th>
            <th>Alert count</th>
            <th>Created at</th>
            <th>Updated at</th>
          </tr>
        </thead>
        <tbody>
          <% severities.each do |severity| %>
            <tr>
              <td><%= severity.feature_type %></td>
              <td><%= severity.severity %></td>
              <td><%= severity.alert_count %></td>
              <td><%= severity.created_at %></td>
              <td><%= severity.updated_at %></td>
            </tr>
          <% end %>
        </tbody>
      </table>
    <% end %>
  <% else %>
    <% component.with_body(p: 2) { "This repository has no severities." } %>
  <% end %>
<% end %>

<%= render(Primer::Beta::BorderBox.new(padding: :condensed, mb: 3, test_selector: "code-scanning-data")) do |component| %>
  <% component.with_header(p: 2) do |h| %>
    <% h.with_title(tag: :h3) { "Code scanning service alert counts" } %>
  <% end %>

  <% component.with_body(p: 0) do %>
    <table class="site-admin-table mb-0 border-0">
      <thead>
        <tr>
          <th>Total</th>
          <th>Open</th>
          <th>Closed</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td><%= alert_counts[:code_scanning][:total] %></td>
          <td><%= alert_counts[:code_scanning][:open] %></td>
          <td><%= alert_counts[:code_scanning][:closed] %></td>
        </tr>
      </tbody>
    </table>
  <% end %>
<% end %>

<%= render(Primer::Beta::BorderBox.new(padding: :condensed, mb: 3, test_selector: "dependabot-data")) do |component| %>
  <% component.with_header(p: 2) do |h| %>
    <% h.with_title(tag: :h3) { "Dependabot alert counts" } %>
  <% end %>

  <% component.with_body(p: 0) do %>
    <table class="site-admin-table mb-0 border-0">
      <thead>
        <tr>
          <th>Total</th>
          <th>Open</th>
          <th>Closed</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td><%= alert_counts[:dependabot][:total] %></td>
          <td><%= alert_counts[:dependabot][:open] %></td>
          <td><%= alert_counts[:dependabot][:closed] %></td>
        </tr>
      </tbody>
    </table>
  <% end %>
<% end %>

<%= render(Primer::Beta::BorderBox.new(padding: :condensed, mb: 3, test_selector: "secret-scanning-data")) do |component| %>
  <% component.with_header(p: 2) do |h| %>
    <% h.with_title(tag: :h3) { "Token scanning service alert counts" } %>
  <% end %>

  <% component.with_body(p: 0) do %>
    <table class="site-admin-table mb-0 border-0">
      <thead>
        <tr>
          <th>Total</th>
          <th>Open</th>
          <th>Closed</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td><%= alert_counts[:secret_scanning][:total] %></td>
          <td><%= alert_counts[:secret_scanning][:open] %></td>
          <td><%= alert_counts[:secret_scanning][:closed] %></td>
        </tr>
      </tbody>
    </table>
  <% end %>
<% end %>

<%= render(Primer::Beta::Subhead.new(hide_border: true, spacious: true)) do |component| %>
  <% component.with_heading(tag: :h2) do %>
    Analytics
    <span class="Subhead-actions f6">
      <% if analytics_data[:eligible?] %>
        <%= primer_octicon(:check, classes: "success") %>
        Belongs to eligible
        <%= safe_link_to "organization", stafftools_user_security_center_url, target: "_blank" %>
      <% else %>
        <%= primer_octicon(:x, classes: "error") %>
        Belongs to ineligible
        <%= safe_link_to "organization", stafftools_user_security_center_url, target: "_blank" %>
      <% end %>
    </span>
  <% end %>
  <% component.with_description do %>
    Master controls for the purge and initialization of analytics metric data. Please be careful.
  <% end %>
<% end %>

<%= render(Primer::Box.new(display: :flex, flex_wrap: :wrap, style: "gap: 1em")) do %>
  <% analytics_data[:metric_types].each do |detail| %>
    <%= render(Primer::Beta::BorderBox.new(padding: :condensed)) do |component| %>
      <% component.with_header do |h| %>
        <% h.with_title(tag: :h3) { detail[:metric_type].humanize } %>
      <% end %>
      <% component.with_body(border: 0, p: 2) do %>
        <table class="stafftools-table mb-0 border-0">
          <tr>
            <th>Initialized?</th>
            <td>
              <%= detail[:initialized?] %>
            </td>
          </tr>
          <% if detail.key?(:revision_count) %>
            <tr>
              <th>Total revisions</th>
              <td><%= number_with_delimiter(detail[:revision_count]) %></td>
            </tr>
          <% end %>
          <% if detail.key?(:current_count) %>
            <tr>
            <th>Current count</th>
              <td><%= number_with_delimiter(detail[:current_count]) %></td>
            </tr>
          <% end %>
          <% if detail.key?(:current_open_count) %>
            <tr>
              <th>&nbsp; Open</th>
              <td><%= number_with_delimiter(detail[:current_open_count]) %></td>
            </tr>
          <% end %>
          <% if detail.key?(:current_closed_count) %>
            <tr>
              <th>&nbsp; Closed</th>
              <td><%= number_with_delimiter(detail[:current_closed_count]) %></td>
            </tr>
          <% end %>
          <tr>
            <th>Last reconciled</th>
            <td>
              <%= detail[:last_reconciled] %>
            </td>
          </tr>
          <tr>
            <th>&nbsp; Locked?</th>
            <td><%= detail[:reconciliation_locked?] %></td>
          </tr>
          <tr>
            <th>&nbsp; Expires</th>
            <td><%= detail[:reconciliation_lock_expiry] %></td>
          </tr>
        </table>
      <% end %>
    <% end %>
  <% end %>
<% end %>
