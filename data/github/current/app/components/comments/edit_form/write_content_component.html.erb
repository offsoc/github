<%= file_attachment_tag(model: "assets", class: "js-upload-markdown-image is-default", input: "fc-#{textarea_id}", **attachment_opts) do |upload_enabled| %>
  <div class="write-content js-write-bucket position-relative m-0">
    <input type="hidden" name="context" value="<%= comment_context %>">
    <%= spamurai_form_signals %>

    <%# TODO: Migrate to `input[id]` name %>
    <input type="hidden" name="<%= input_name %>[id]" value="<%= comment.id %>">
    <%# TODO: Migrate to `input[bodyVersion]` name %>
    <input type="hidden" name="<%= input_name %>[bodyVersion]" class="js-body-version" value="<%= comment.body_version %>">

    <text-expander keys="<%= expander_keys %>"
      data-emoji-url="<%= emoji_suggestions %>"
      <% if has_repository? %>
        data-issue-url="<%= suggestions_path(issue_suggestions_params(comment.repository, subject)) %>"
        data-mention-url="<%= suggestions_path(mention_suggestions_params(comment.repository, subject)) %>"
        multiword="#"
      <% elsif comment_for_gist? %>
          data-mention-url="<%= suggestions_user_gist_path(comment.gist.user_param, comment.gist, target: "user") %>"
      <% end %>
    >
      <%= render(
          SlashCommands::SlashCommandExpanderWrapperComponent.new(
            repository: has_repository? ? comment.repository : nil,
            user: current_user,
            subject_gid: subject_gid,
            surface: slash_commands_surface,
          )
        ) do %>
          <div class="CommentBox-container">
            <%# TODO: Migrate to `input[body]` name %>
            <textarea name="<%= input_name %>[body]"
                      id="<%= textarea_id %>"
                      placeholder="Leave a comment"
                      aria-label="Comment body"
                      <% if current_user&.paste_url_link_as_plain_text? %>data-paste-url-links-as-plain-text<% end %>
                      class="<%= class_names(
                        "js-comment-field js-paste-markdown js-task-list-field js-quick-submit js-size-to-fit js-session-resumable CommentBox-input FormControl-textarea",
                        "js-saved-reply-shortcut-comment-field": !comment.is_a?(PlatformTypes::GistComment),
                        "input-monospace": current_user.use_fixed_width_font?
                      ) %>"
                      ><%= body %></textarea>
          </div>
      <% end %>
    </text-expander>
    <input <%= upload_policy_accept_extensions_attribute([:assets, :"repository-files"]) %> type="file" multiple hidden id="<%= "fc-#{textarea_id}" %>">
    <div class="file-attachment-errors">
      <%= render(Primer::Alpha::Banner.new(border_bottom: 0, scheme: :danger, classes: "rounded-bottom-2 bad-file repository-required", full: true, description: "Try again with #{upload_policy_friendly_extensions([:assets, :"repository-files"])}")) { "We don’t support that file type." } %>
      <%= render(Primer::Alpha::Banner.new(border_bottom: 0, scheme: :danger, classes: "rounded-bottom-2 bad-permissions", full: true, description: "Try again with #{upload_policy_friendly_extensions([:assets, :"repository-files"])}")) { "Attaching documents requires write permission to this repository." } %>
      <%# This HTML has been moved off the render thread. The error message will come from the server response and be inserted in the DOM by JavaScript %>
      <%= render(Primer::Alpha::Banner.new(border_bottom: 0, scheme: :danger, classes: "rounded-bottom-2 too-big js-upload-too-big", full: true)) { "" } %>
      <%= render(Primer::Alpha::Banner.new(border_bottom: 0, scheme: :danger, classes: "rounded-bottom-2 empty", full: true, description: "Try again with a file that’s not empty.")) { "This file is empty." } %>
      <%= render(Primer::Alpha::Banner.new(border_bottom: 0, scheme: :danger, classes: "rounded-bottom-2 hidden-file", full: true, description: "Try again with another file.")) { "This file is hidden." } %>
      <%= render(Primer::Alpha::Banner.new(border_bottom: 0, scheme: :danger, classes: "rounded-bottom-2 failed-request", full: true, description: "Try again.")) { "Something went really wrong, and we can’t process that file." } %>
    </div>
  </div>
<% end %>
