# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: turboghas.proto

require 'google/protobuf'

require 'entity_type_pb'
require 'google/protobuf/timestamp_pb'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("turboghas.proto", :syntax => :proto3) do
    add_message "github.turboghas.GetMeterEmissionsRequest" do
      optional :entity_id, :uint64, 1
      optional :entity_type, :enum, 2, "code_scanning.turboghas.v1.EntityType"
      optional :customer_id, :uint64, 3
    end
    add_message "github.turboghas.GetMeterEmissionsResponse" do
      repeated :added, :uint64, 1
      repeated :removed, :uint64, 2
    end
    add_message "github.turboghas.Owner" do
      optional :id, :uint64, 1
      optional :login, :string, 2
    end
    add_message "github.turboghas.GetActiveCommittersRequest" do
      optional :entity_id, :uint64, 1
      optional :entity_type, :enum, 2, "code_scanning.turboghas.v1.EntityType"
    end
    add_message "github.turboghas.GetActiveCommittersResponse" do
      repeated :users, :message, 1, "github.turboghas.GetActiveCommittersResponse.User"
    end
    add_message "github.turboghas.GetActiveCommittersResponse.User" do
      optional :id, :uint64, 1
    end
    add_message "github.turboghas.GetSummaryRequest" do
      optional :entity_id, :uint64, 1
      optional :entity_type, :enum, 2, "code_scanning.turboghas.v1.EntityType"
      repeated :repository_ids, :uint64, 3
    end
    add_message "github.turboghas.GetSummaryResponse" do
      optional :active_committers, :uint64, 1
      optional :maximum_committers, :uint64, 2
      optional :additional_committers, :uint64, 3
      optional :unique_committers, :uint64, 4
    end
    add_message "github.turboghas.Cursor" do
      optional :offset, :uint64, 1
    end
    add_message "github.turboghas.GetRepositoriesRequest" do
      optional :owner_id, :uint64, 1
      optional :cursor, :message, 2, "github.turboghas.Cursor"
      repeated :column_order, :message, 3, "github.turboghas.GetRepositoriesRequest.ColumnOrder"
      optional :limit, :uint32, 4
    end
    add_message "github.turboghas.GetRepositoriesRequest.ColumnOrder" do
      optional :column, :enum, 1, "github.turboghas.GetRepositoriesRequest.Column"
      optional :order, :enum, 2, "github.turboghas.Order"
    end
    add_enum "github.turboghas.GetRepositoriesRequest.Column" do
      value :REPOSITORIES_ORDER_INVALID, 0
      value :REPOSITORIES_ORDER_NAME, 1
      value :REPOSITORIES_ORDER_COMMITTERS, 2
      value :REPOSITORIES_ORDER_UNIQUE_COMMITTERS, 3
    end
    add_message "github.turboghas.GetRepositoriesResponse" do
      repeated :repositories, :message, 1, "github.turboghas.GetRepositoriesResponse.Repository"
      optional :count, :uint64, 2
      optional :next_cursor, :message, 3, "github.turboghas.Cursor"
    end
    add_message "github.turboghas.GetRepositoriesResponse.Repository" do
      optional :id, :uint64, 1
      optional :active_committers, :uint64, 2
      optional :unique_committers, :uint64, 3
      optional :name, :string, 4
    end
    add_message "github.turboghas.GetOrganizationsRequest" do
      optional :business_id, :uint64, 1
      repeated :column_order, :message, 2, "github.turboghas.GetOrganizationsRequest.ColumnOrder"
      optional :cursor, :message, 3, "github.turboghas.Cursor"
      optional :limit, :uint32, 4
    end
    add_message "github.turboghas.GetOrganizationsRequest.ColumnOrder" do
      optional :column, :enum, 1, "github.turboghas.GetOrganizationsRequest.Column"
      optional :order, :enum, 2, "github.turboghas.Order"
    end
    add_enum "github.turboghas.GetOrganizationsRequest.Column" do
      value :ORGANIZATIONS_ORDER_INVALID, 0
      value :ORGANIZATIONS_ORDER_LOGIN, 1
      value :ORGANIZATIONS_ORDER_COMMITTERS, 2
      value :ORGANIZATIONS_ORDER_UNIQUE_COMMITTERS, 3
    end
    add_message "github.turboghas.GetOrganizationsResponse" do
      repeated :organizations, :message, 1, "github.turboghas.GetOrganizationsResponse.Organization"
      optional :count, :uint64, 2
      optional :next_cursor, :message, 3, "github.turboghas.Cursor"
    end
    add_message "github.turboghas.GetOrganizationsResponse.Organization" do
      optional :id, :uint64, 1
      optional :active_committers, :uint64, 2
      optional :unique_committers, :uint64, 3
      optional :login, :string, 4
    end
    add_message "github.turboghas.GetEnterpriseUsersRequest" do
      optional :business_id, :uint64, 1
      repeated :column_order, :message, 2, "github.turboghas.GetEnterpriseUsersRequest.ColumnOrder"
      optional :cursor, :message, 3, "github.turboghas.Cursor"
      optional :limit, :uint32, 4
    end
    add_message "github.turboghas.GetEnterpriseUsersRequest.ColumnOrder" do
      optional :column, :enum, 1, "github.turboghas.GetEnterpriseUsersRequest.Column"
      optional :order, :enum, 2, "github.turboghas.Order"
    end
    add_enum "github.turboghas.GetEnterpriseUsersRequest.Column" do
      value :ENTERPRISE_USERS_ORDER_INVALID, 0
      value :ENTERPRISE_USERS_ORDER_LOGIN, 1
      value :ENTERPRISE_USERS_ORDER_COMMITTERS, 2
      value :ENTERPRISE_USERS_ORDER_UNIQUE_COMMITTERS, 3
    end
    add_message "github.turboghas.GetEnterpriseUsersResponse" do
      repeated :users, :message, 1, "github.turboghas.GetEnterpriseUsersResponse.User"
      optional :count, :uint64, 2
      optional :next_cursor, :message, 3, "github.turboghas.Cursor"
    end
    add_message "github.turboghas.GetEnterpriseUsersResponse.User" do
      optional :id, :uint64, 1
      optional :active_committers, :uint64, 2
      optional :unique_committers, :uint64, 3
      optional :login, :string, 4
    end
    add_message "github.turboghas.GetCommittersForBusinessRequest" do
      optional :business_id, :uint64, 1
      optional :cursor, :message, 2, "github.turboghas.Cursor"
      optional :limit, :uint32, 3
      optional :committer_type, :enum, 4, "github.turboghas.CommitterType"
      repeated :repository_ids, :uint64, 5
    end
    add_message "github.turboghas.GetCommittersForOwnerRequest" do
      optional :owner_id, :uint64, 1
      optional :cursor, :message, 2, "github.turboghas.Cursor"
      optional :limit, :uint32, 3
      optional :committer_type, :enum, 4, "github.turboghas.CommitterType"
      repeated :repository_ids, :uint64, 5
    end
    add_message "github.turboghas.GetCommittersResponse" do
      repeated :committers, :message, 1, "github.turboghas.GetCommittersResponse.Committer"
      optional :count, :uint64, 2
      optional :next_cursor, :message, 3, "github.turboghas.Cursor"
    end
    add_message "github.turboghas.GetCommittersResponse.Committer" do
      optional :id, :uint64, 1
      optional :login, :string, 2
      optional :repository_id, :uint64, 3
      optional :repository_nwo, :string, 4
      optional :pushed_at, :message, 5, "google.protobuf.Timestamp"
      optional :email, :bytes, 6
    end
    add_message "github.turboghas.GetAdditionalCommittersPerRepositoryRequest" do
      optional :entity_id, :uint64, 1
      optional :entity_type, :enum, 2, "code_scanning.turboghas.v1.EntityType"
      repeated :repository_ids, :uint64, 3
    end
    add_message "github.turboghas.GetAdditionalCommittersPerRepositoryResponse" do
      repeated :repositories, :message, 1, "github.turboghas.GetAdditionalCommittersPerRepositoryResponse.Repository"
    end
    add_message "github.turboghas.GetAdditionalCommittersPerRepositoryResponse.Repository" do
      optional :id, :uint64, 1
      optional :additional_committers, :uint64, 2
    end
    add_enum "github.turboghas.Order" do
      value :ORDER_INVALID, 0
      value :ORDER_ASC, 1
      value :ORDER_DESC, 2
    end
    add_enum "github.turboghas.CommitterType" do
      value :ACTIVE_COMMITTERS, 0
      value :MAXIMUM_COMMITTERS, 1
      value :ADDITIONAL_COMMITTERS, 2
    end
  end
end

module Turboghas
  module Proto
    GetMeterEmissionsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetMeterEmissionsRequest").msgclass
    GetMeterEmissionsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetMeterEmissionsResponse").msgclass
    Owner = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.Owner").msgclass
    GetActiveCommittersRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetActiveCommittersRequest").msgclass
    GetActiveCommittersResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetActiveCommittersResponse").msgclass
    GetActiveCommittersResponse::User = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetActiveCommittersResponse.User").msgclass
    GetSummaryRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetSummaryRequest").msgclass
    GetSummaryResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetSummaryResponse").msgclass
    Cursor = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.Cursor").msgclass
    GetRepositoriesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetRepositoriesRequest").msgclass
    GetRepositoriesRequest::ColumnOrder = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetRepositoriesRequest.ColumnOrder").msgclass
    GetRepositoriesRequest::Column = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetRepositoriesRequest.Column").enummodule
    GetRepositoriesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetRepositoriesResponse").msgclass
    GetRepositoriesResponse::Repository = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetRepositoriesResponse.Repository").msgclass
    GetOrganizationsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetOrganizationsRequest").msgclass
    GetOrganizationsRequest::ColumnOrder = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetOrganizationsRequest.ColumnOrder").msgclass
    GetOrganizationsRequest::Column = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetOrganizationsRequest.Column").enummodule
    GetOrganizationsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetOrganizationsResponse").msgclass
    GetOrganizationsResponse::Organization = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetOrganizationsResponse.Organization").msgclass
    GetEnterpriseUsersRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetEnterpriseUsersRequest").msgclass
    GetEnterpriseUsersRequest::ColumnOrder = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetEnterpriseUsersRequest.ColumnOrder").msgclass
    GetEnterpriseUsersRequest::Column = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetEnterpriseUsersRequest.Column").enummodule
    GetEnterpriseUsersResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetEnterpriseUsersResponse").msgclass
    GetEnterpriseUsersResponse::User = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetEnterpriseUsersResponse.User").msgclass
    GetCommittersForBusinessRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetCommittersForBusinessRequest").msgclass
    GetCommittersForOwnerRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetCommittersForOwnerRequest").msgclass
    GetCommittersResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetCommittersResponse").msgclass
    GetCommittersResponse::Committer = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetCommittersResponse.Committer").msgclass
    GetAdditionalCommittersPerRepositoryRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetAdditionalCommittersPerRepositoryRequest").msgclass
    GetAdditionalCommittersPerRepositoryResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetAdditionalCommittersPerRepositoryResponse").msgclass
    GetAdditionalCommittersPerRepositoryResponse::Repository = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.GetAdditionalCommittersPerRepositoryResponse.Repository").msgclass
    Order = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.Order").enummodule
    CommitterType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.turboghas.CommitterType").enummodule
  end
end
