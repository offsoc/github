"use strict";(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([["app_components_copilot_seat_management_copilot-business-signup-seat-management-element_ts"],{30837:(e,t,n)=>{n.r(t);var i=n(39595),o=n(28784);function s(e,t,n){if(!t.has(e))throw TypeError("attempted to get private field on non-instance");return n}function a(e,t){!function(e,t){if(t.has(e))throw TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.add(e)}function r(e,t,n,i){var o,s=arguments.length,a=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(o=e[r])&&(a=(s<3?o(a):s>3?o(t,n,a):o(t,n))||a);return s>3&&a&&Object.defineProperty(t,n,a),a}var l=new WeakSet,d=new WeakSet;let p=class CopilotBusinessSignupSeatManagementElement extends HTMLElement{connectedCallback(){this.enableForSelectedOption.disabled=!1,this.enableForAllOption.disabled=!1,this.permissionsSubmitButton.disabled=!1}async showSeatManagement(){this.permissionsSubmitButton.disabled=!0,this.enableForAllOption.disabled=!0,s(this,l,c).call(this);let e=new URLSearchParams(window.location.search),t=e.get("org"),n=e.get("enterprise");if(t){if(!(await this.setSeatManagementConfig(t)).ok)return this.permissionsSubmitButton.disabled=!1,Error("Failed to update the seat management permission.");this.seatManagement.hidden=!1,this.permissionsSubmitButton.hidden=!0}else if(n){if(!(await this.setChatEnabledConfig(n)).ok)return this.permissionsSubmitButton.disabled=!1,Error("Failed to update the chat enabled permission.");this.seatManagement.hidden=!1,this.permissionsSubmitButton.hidden=!0}s(this,d,h).call(this)}hideSeatManagement(){this.seatManagement.hidden=!0,this.permissionsSubmitButton.hidden=!1,this.permissionsSubmitButton.disabled=!1}async setSeatManagementConfig(e){let t=new FormData;return t.append("copilot_permissions","enabled_for_selected"),await (0,o.DI)(`/organizations/${e}/settings/copilot/seat_management_permissions`,{method:"POST",body:t})}async setChatEnabledConfig(e){let t=new FormData;return t.append("copilot_enabled","selected_organizations"),await (0,o.DI)(`/enterprises/${e}/settings/update_copilot_enablement`,{method:"PUT",body:t})}constructor(...e){super(...e),a(this,l),a(this,d)}};function c(){this.seatsForSelectedSpinner.style.cssText="display:inline !important"}function h(){this.seatsForSelectedSpinner.style.cssText="none !important",this.enableForAllOption.disabled=!1}r([i.aC],p.prototype,"seatManagement",void 0),r([i.aC],p.prototype,"seatsForSelectedSpinner",void 0),r([i.aC],p.prototype,"permissionsSubmitButton",void 0),r([i.aC],p.prototype,"enableForAllOption",void 0),r([i.aC],p.prototype,"enableForSelectedOption",void 0),p=r([i.p_],p)},28784:(e,t,n)=>{function i(e,t={}){!function(e){if(new URL(e,window.location.origin).origin!==window.location.origin)throw Error("Can not make cross-origin requests from verifiedFetch")}(e);let n={...t.headers,"GitHub-Verified-Fetch":"true","X-Requested-With":"XMLHttpRequest"};return fetch(e,{...t,headers:n})}function o(e,t){let n={...t?.headers??{},Accept:"application/json","Content-Type":"application/json"},o=t?.body?JSON.stringify(t.body):void 0;return i(e,{...t,body:o,headers:n})}function s(e,t={}){let n={...t.headers,"GitHub-Is-React":"true"};return i(e,{...t,headers:n})}function a(e,t){let n={...t?.headers??{},"GitHub-Is-React":"true"};return o(e,{...t,headers:n})}n.d(t,{DI:()=>i,QJ:()=>s,Sr:()=>a,lS:()=>o})}}]);
//# sourceMappingURL=app_components_copilot_seat_management_copilot-business-signup-seat-management-element_ts-00616138dfba.js.map