<%# erblint:counter DeprecatedComponentsCounter 6 %>
<new-codespace data-allow-update-url="true" data-replace-remote-form-target data-no-submit-on-create=true>
  <% page_info title: "Create new codespace", stafftools: stafftools_user_codespaces_path(current_user) %>

  <%= render(Primer::Beta::Flash.new(
    scheme: :warning,
    hidden: true,
    id: "js-codespaces-unable-load-repositories-warning",
    mb: [2])) { "Unable to load repositories, please reload the page." }  %>

  <div data-src="<%= close_window_prompt_codespaces_path %>" class="js-codespaces-completable">
      <h1 class="h2 text-center mb-5 mt-5 text-normal">
        <% if view.hide_repo_select %>
          Create codespace for <br><span class="text-bold"><%= view.repository.name_with_display_owner %></span>
        <% else %>
          Create a new codespace
        <% end %>
      </h1>

    <%= render(Primer::Box.new(container: :md)) do %>
      <%= render Codespaces::UnauthorizedOrganizationsComponent.new(
          classes: "Box mb-2",
          cap_filter: cap_filter,
          current_repository: view.repository,
          billable_owner: view.billable_owner,
        ) %>

      <%= render Codespaces::CreateNoticeFlashErrorComponent.new(
        billable_owner: view.billable_owner,
        user: current_user,
        repository: view.repository,
        at_codespace_limit: view.at_limit?(view.billable_owner),
        codespace: view.codespace,
        user_codespace_limit: view.codespace_limit,
        machine_type_unavailable: view.creation_disabled_due_to_machine_type? && view.repository.present?,
        unexpected_error: view.show_response_error,
        base_image_unavailable: view.creation_disabled_due_to_base_image? && view.repository.present?,
        show_repo_errors: view.hide_repo_select,
        show_billable_owner: false,
        system_arguments: { mb: 4 },
      ) %>
    <% end %>

    <%= render(Primer::Beta::BorderBox.new(position: :relative, container: :md, "data-hpc": "")) do |component| %>
      <% component.with_body(p: 0) do %>
        <%= form_with url: new_codespace_path, method: :get, class: "js-new-codespace-form", data: { target: "new-codespace.advancedOptionsForm" } do |f| %>
          <%= f.hidden_field(:skip_quickstart, value: true)  %>
          <%= render Primer::Box.new(hidden: true) do %>
            <% if view.hide_repo_select %>
              <%= f.hidden_field(:hide_repo_select, value: true) %>
              <%= f.hidden_field(:repo, value: view.repository.id) %>
            <% end %>
            <%= f.hidden_field(:machine, data: { target: "new-codespace.skuNameInput" }, value: view.sku.name) if view.sku %>
          <% end %>
          <% if !view.hide_repo_select %>
            <%= render Primer::Box.new(px: 3, py: 3, border: :bottom, border_color: :subtle) do %>
              <%= render Primer::Box.new(display: :flex, justify_content: :space_between) do %>
                <%= render Primer::Box.new do %>
                  <%= render Primer::Beta::Text.new(tag: :div, font_weight: :bold).with_content("Repository") %>
                  <%= render Primer::Beta::Text.new(tag: :div, color: :muted, font_size: :small).with_content("To be cloned into your codespace") %>
                <% end %>

                <% if user_feature_enabled?(:primer_experimental_selectpanel_codespaces_advanced_options) %>
                  <%= f.hidden_field(:repo, value: view.repository&.id, data: { target: "new-codespace.repoInput" }) %>
                  <%= render(Primer::Alpha::SelectPanel.new(
                    title: "Select repository",
                    dynamic_label: true,
                    src: repository_select_codespaces_path(repo: view.repository&.id),
                    no_results_label: "No matching repositories.",
                    data: { target: "new-codespace.repositorySelectPanel" },
                  )) do |panel| %>
                    <% panel.with_show_button(data: { menu_button: true }) do |button| %>
                      <% button.with_trailing_action_icon(icon: :"triangle-down") %>
                      <%= view.repository&.name_with_display_owner || "Select a repository" %>
                    <% end %>
                  <% end %>
                <% else %>
                  <details class="details-reset details-overlay position-relative">
                    <%= render Primer::ButtonComponent.new(tag: :summary, display: :block, classes: "css-truncate", mt: 1, aria: {describedby: "codespaces-create-notice-text"}) do %>
                      <span data-menu-button class="text-normal css-truncate-target">
                        <%= view.repository&.name_with_display_owner || "Select a repository" %>
                      </span>
                      <span class="dropdown-caret float-right mt-2"></span>
                    <% end %>

                    <details-menu class="select-menu-modal width-full position-absolute right-0" style="z-index: 99; min-width: 220px;"><%# erblint:disable Primer::Accessibility::DetailsMenuMigration %>
                      <div class="select-menu-filters">
                        <div class="select-menu-text-filter">
                          <remote-input
                            aria-owns="repository-menu-list"
                            src="<%= repository_select_codespaces_path(repo: view.repository&.id) %>"
                            id="js-codespaces-repository-select">
                            <input
                              type="text"
                              class="form-control"
                              placeholder="Search for a repository"
                              aria-label="Search for a repository"
                              autocomplete="off"
                              autofocus>
                          </remote-input>
                        </div>
                      </div>
                      <div class="select-menu-list" id="repository-menu-list">
                        <% if view.repository %>
                          <%= render Codespaces::RepositoryListItemComponent.new(repository: view.repository, selected: true) %>
                        <% end %>
                      </div>
                    </details-menu>
                  </details>
                <% end %>
              <% end %>
            <%= render Codespaces::CreateNoticeFlashErrorComponent.new(
                billable_owner: view.billable_owner,
                user: current_user,
                repository: view.repository,
                at_codespace_limit: view.at_limit?(view.billable_owner),
                codespace: view.codespace,
                user_codespace_limit: view.codespace_limit,
                machine_type_unavailable: view.creation_disabled_due_to_machine_type? && view.repository.present?,
                unexpected_error: view.show_response_error,
                base_image_unavailable: view.creation_disabled_due_to_base_image? && view.repository.present?,
                show_user_errors: false,
                system_arguments: { mt: 3 }
              ) %>
            <% end %>
          <% end %>

          <%= render Primer::Box.new(px: 3, py: 3, border: :bottom, border_color: :subtle) do %>
            <%= render Primer::Box.new(display: :flex, justify_content: :space_between, col: 12) do %>
              <%= render Primer::Box.new do %>
                <%= render Primer::Beta::Text.new(tag: :div, font_weight: :bold).with_content("Branch") %>
                <%= render Primer::Beta::Text.new(tag: :div, color: :muted, font_size: :small).with_content("This branch will be checked out on creation") %>
              <% end %>
              <div>
                <% if view.repository %>
                    <%= render Codespaces::Forms::BranchSelectComponent.new(
                      repository: view.repository,
                      initial_branch_ref: view.ref,
                      cache_key: view.branch_ref_selector_cache_key,
                      default_branch: view.repository.default_branch,
                      form: f,
                      form_field: :ref,
                      autosubmit: true,
                      button_option_overrides: { variant: :medium, mt: 1, display: :block, classes: "css-truncate" },
                      right_aligned: true
                    )
                    %>
                <% else %>
                  <%= render Primer::ButtonComponent.new(type: :button, display: :flex, text_align: :left, font_weight: :normal, disabled: :true, mt: 1) do %>
                    <span>Default branch</span>
                    <span class="dropdown-caret float-right mt-2"></span>
                  <% end %>
                <% end %>
              </div>
            <% end %>
          <% end %>

          <% if view.repository %>
            <% if view.pickable_devcontainers.none? %>
              <input type="radio" name="devcontainer_path" value="<%= view.devcontainer_path %>" checked hidden data-autosubmit>
            <% else %>
              <%= render Primer::Box.new(px: 3, py: 3, border: :bottom, border_color: :subtle) do %>
                <%= render Primer::Box.new(position: :relative, display: :flex, justify_content: :space_between, align_items: :center) do %>
                  <%= render Primer::Box.new(flex_shrink: 0, mr: 3) do %>
                    <%= render Primer::Beta::Text.new(tag: :div, font_weight: :bold).with_content("Dev container configuration") %>
                    <%= render Primer::Beta::Text.new(
                      tag: :div,
                      color: :muted,
                      font_size: :small,
                    ).with_content("Your codespace will use this configuration") %>
                  <% end %>

                  <details class="details-reset details-overlay">
                    <%= render Primer::ButtonComponent.new(tag: :summary, display: :flex, align_items: :center) do %>
                      <div class="select-menu-item-text d-flex flex-column" data-menu-button style="max-width: 220px">
                        <h6 class="Truncate"><span class="Truncate-text"><%= view.active_devcontainer&.display_name.presence || "Default project configuration" %></span></h6>
                        <% if view.active_devcontainer.present? && view.disambiguate_devcontainer_names_with_paths? %>
                          <div class="Truncate">
                            <span class="description Truncate-text">
                              <%= view.active_devcontainer.path %>
                            </span>
                          </div>
                        <% end %>
                      </div>
                      <span class="dropdown-caret"></span>
                    <% end %>

                    <% if view.pickable_devcontainers.one? && Codespaces::DevContainer.is_default_path?(view.pickable_devcontainers.first.path) %>
                      <details-menu class="select-menu-modal position-absolute right-0" style="z-index: 99; min-width: 220px;"><%# erblint:disable Primer::Accessibility::DetailsMenuMigration %>
                        <div class="select-menu-list" id="devcontainer-path-menu-list">
                          <label class="select-menu-item selected" aria-checked="true" tabindex="0" role="menuitemradio">
                            <%= render Primer::Beta::Octicon.new(icon: "check", classes: "select-menu-item-icon") %>
                            <div class="select-menu-item-text">
                              <input type="radio" name="devcontainer_path" value="<%= view.devcontainer_path %>" checked hidden data-autosubmit>
                              <div data-menu-button-contents class="d-flex flex-column">
                                <h6 class="Truncate"><span class="Truncate-text"><%= view.active_devcontainer&.display_name %></span></h6>
                                <% if view.disambiguate_devcontainer_names_with_paths? %>
                                <div class="Truncate">
                                  <span class="description Truncate-text"><%= view.active_devcontainer&.path %></span>
                                </div>
                                <% end %>
                              </div>
                            </div>
                          </label>
                        </div>
                      </details-menu>
                    <% else %>
                      <details-menu class="select-menu-modal position-absolute right-0" style="z-index: 99; min-width: 220px;"><%# erblint:disable Primer::Accessibility::DetailsMenuMigration %>
                        <div class="select-menu-list" id="devcontainer-path-menu-list">
                          <% if view.pickable_devcontainers.none? { |dc| Codespaces::DevContainer.is_default_path?(dc.path) } %>
                            <%# Always allow folks to eject out of a non-standard devcontainer.json back to the kitchen sink if there are no default devcontainers in the repo?? %>
                            <label class="select-menu-item <%= "selected" if view.active_devcontainer.blank? %>" aria-checked="<%= view.active_devcontainer.blank? %>" tabindex="0" role="menuitemradio">
                              <%= render Primer::Beta::Octicon.new(icon: "check", classes: "select-menu-item-icon") %>
                              <div class="select-menu-item-text">
                                <input type="radio" name="devcontainer_path" value="" <% if view.active_devcontainer.blank? %>checked<% end %> hidden data-autosubmit>
                                <div data-menu-button-contents>
                                  <h6>Default project configuration</h6>
                                </div>
                              </div>
                            </label>
                          <% end %>
                          <% view.pickable_devcontainers.each do |devcontainer| %>
                            <label class="select-menu-item <%= "selected" if view.active_devcontainer&.path == devcontainer.path %>" aria-checked="<%= view.active_devcontainer&.path == devcontainer.path %>" tabindex="0" role="menuitemradio">
                              <%= render Primer::Beta::Octicon.new(icon: "check", classes: "select-menu-item-icon") %>
                              <div class="select-menu-item-text">
                                <input type="radio" name="devcontainer_path" value="<%= devcontainer.path %>" <% if view.active_devcontainer&.path == devcontainer.path %>checked<% end %> hidden data-autosubmit>
                                <div data-menu-button-contents class="d-flex flex-column">
                                  <h6 class="Truncate"><span class="Truncate-text"><%= devcontainer.display_name %></span></h6>
                                  <% if view.disambiguate_devcontainer_names_with_paths? %>
                                  <div class="Truncate">
                                    <span class="description Truncate-text"><%= devcontainer.path %></span>
                                  </div>
                                  <% end %>
                                </div>
                              </div>
                            </label>
                          <% end %>
                        </div>
                      </details-menu>
                    <% end %>
                  </details>
                <% end %>
              <% end %>
            <% end %>
          <% end %>

          <% if view.pickable_vscs_target_configs.many? %>
            <%= render Primer::Box.new(px: 3, py: 3, border: :bottom, border_color: :subtle) do %>
              <%= render Primer::Box.new(display: :flex, justify_content: :space_between) do %>
                <%= render Primer::Box.new do %>
                  <%= render Primer::Beta::Text.new(tag: :div, font_weight: :bold).with_content("VSCS target") %>
                  <%= render Primer::Beta::Text.new(tag: :div, color: :muted, font_size: :small).with_content("Employee only") %>
                <% end %>

                <details class="details-reset details-overlay position-relative">
                  <%= render Primer::ButtonComponent.new(tag: :summary, display: :block, classes: "css-truncate", mt: 1) do %>
                    <span data-menu-button class="text-normal css-truncate-target">
                      <%= view.vscs_target_display_name %>
                    </span>
                    <span class="dropdown-caret float-right mt-2"></span>
                  <% end %>

                  <details-menu class="select-menu-modal width-full position-absolute right-0" style="z-index: 99; min-width: 220px;"><%# erblint:disable Primer::Accessibility::DetailsMenuMigration %>
                    <div class="select-menu-list" id="vscs-target-menu-list">
                      <% view.pickable_vscs_target_configs.each do |target| %>
                        <label class="select-menu-item <%= "selected" if view.vscs_target_config?(target) %>" aria-checked="<%= view.vscs_target_config?(target) %>" tabindex="0" role="menuitemradio">
                          <%= render Primer::Beta::Octicon.new(icon: "check", classes: "select-menu-item-icon") %>
                          <div class="select-menu-item-text">
                            <input type="radio" name="vscs_target" value="<%= target&.dig(:name) %>" <% if view.vscs_target_config?(target) %>checked<% end %> hidden data-autosubmit>
                            <span class="select-menu-item-text text-normal" data-menu-button-contents><%= target&.dig(:display_name) %></span>
                          </div>
                        </label>
                      <% end %>
                    </div>
                  </details-menu>
                </details>
              <% end %>
            <% end %>
            <%= render Primer::Box.new(px: 3, py: 3, border: :bottom, border_color: :subtle) do %>
              <%= render Primer::Box.new(display: :flex, justify_content: :space_between) do %>
                <%= render Primer::Box.new do %>
                  <%= render Primer::Beta::Text.new(tag: :div, font_weight: :bold).with_content("VSCS devstamp URL") %>
                  <%= render Primer::Beta::Text.new(tag: :div, color: :muted, font_size: :small).with_content("Employee only") %>
                <% end %>
                <%= render Primer::Box.new do %>
                  <%= f.url_field(
                    :vscs_target_url,
                    value: view.vscs_target_url,
                    disabled: (:local != view.vscs_target_config&.dig(:name)),
                    class: "form-control mt-1",
                    placeholder: "Optional for local target",
                    id: "vscs_target_url",
                    style: "text-align: right;",
                    data: { action: "blur:new-codespace#vscsTargetUrlUpdated" }
                  ) %>
                <% end %>
              <% end %>
            <% end %>
          <% end %>

          <%= render Primer::Box.new(px: 3, py: 3, border: :bottom, border_color: :subtle) do %>
            <%= render Codespaces::AdvancedOptions::GeoSelectListComponent.new(geos: view.geos, selected_location: view.geo) %>
          <% end %>

          <%= render Primer::Box.new(px: 3, py: 3) do %>
            <%= render Codespaces::AdvancedOptions::SKUSelectListComponent.new(
                availability_contexts: view.sku_availability_contexts,
                show_prebuild_availability: view.show_prebuild_availability,
                location: view.region_for_skus,
                vscs_target: view.vscs_target_config&.dig(:name),
                ref_name: view.ref&.name_for_display,
                repository: view.repository,
                devcontainer_path: view.devcontainer_path,
              ) %>
          <% end %>

          <% if view.repository && (secrets_component = render(Codespaces::AdvancedOptions::DeclarativeSecretsTextComponent.new(codespace: view.codespace))) && secrets_component.present? %>
            <%= render Primer::Box.new(px: 3, py: 3, border: :top, border_color: :subtle) do %>
              <%= secrets_component %>
            <% end %>
          <% end %>
        <% end %>
      <% end %>

      <% component.with_footer(px: 3, py: 3) do %>

        <%= render Primer::Box.new(display: :flex, justify_content: :space_between) do %>

          <%= render(Primer::Beta::Text.new) { " " } %>
          <% if view.usage_allowed? && view.form_ready? %>
            <%= render Codespaces::CreateButtonComponent.new(
              codespace: view.codespace,
              geo: view.geo,
              vscs_target: view.vscs_target_config&.dig(:name),
              sku: view.sku,
              vscs_target_url: view.vscs_target_url,
              text: "Create codespace",
              btn_class: "btn btn-primary js-new-codespace-submit-button",
              open_in_deeplink: view.open_directly_in_a_non_web_editor?,
              data: { action: "click:new-codespace#startSession" }.merge(view.click_tracking_attributes),
              open_in_new_tab: false
            )  do |component| %>
              <% disabled_component = Codespaces::DisabledButtonComponent.new(
                btn_class: component.btn_class,
                cap_filter: cap_filter,
                current_user: current_user,
                at_limit: view.at_limit?(view.billable_owner),
                text: component.text,
                tooltip_class: nil,
                codespace: view.codespace,
                force_render: !component.hide_advanced_options_button,
              ) %>
              <% if disabled_component.render? %>
                <% component.with_disabled_button do %>
                  <%= render disabled_component %> <%# rubocop:disable GitHub/RailsViewRenderLiteral %>
                <% end %>
              <% end %>
              <% component.with_loading_button do %>
                <%= render Codespaces::LoadingButtonComponent.new(action: :create, btn_class: component.btn_class) %>
              <% end %>
            <% end %>
          <% else %>
            <%= render Primer::ButtonComponent.new(scheme: :primary, disabled: true, "aria-label": 'Codespace creation is disabled') do %>Create codespace<% end %>
          <% end %>

          <%= render partial: "codespaces/loading_vscode", locals: { classes: "ml-n1 mr-n1" } %>

        <% end %>
      <% end %>
    <% end %>
  </div>
</new-codespace>
