# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::PackageRegistry::V0::PackageTransferred`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::PackageRegistry::V0::PackageTransferred`.

class Hydro::Schemas::PackageRegistry::V0::PackageTransferred
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      event_id: T.nilable(String),
      package: T.nilable(Hydro::Schemas::PackageRegistry::V0::Entities::Package),
      previous_owner_global_id: T.nilable(Google::Protobuf::StringValue),
      previous_owner_id: T.nilable(Integer),
      previous_owner_org: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization),
      previous_owner_user: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      previous_repository: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository),
      repository: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext),
      storage_service: T.nilable(Hydro::Schemas::PackageRegistry::V0::Entities::StorageService),
      transferred_at: T.nilable(Google::Protobuf::Timestamp),
      user_agent: T.nilable(String)
    ).void
  end
  def initialize(actor: nil, event_id: nil, package: nil, previous_owner_global_id: nil, previous_owner_id: nil, previous_owner_org: nil, previous_owner_user: nil, previous_repository: nil, repository: nil, request_context: nil, storage_service: nil, transferred_at: nil, user_agent: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_event_id; end

  sig { void }
  def clear_package; end

  sig { void }
  def clear_previous_owner_global_id; end

  sig { void }
  def clear_previous_owner_id; end

  sig { void }
  def clear_previous_owner_org; end

  sig { void }
  def clear_previous_owner_user; end

  sig { void }
  def clear_previous_repository; end

  sig { void }
  def clear_repository; end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_storage_service; end

  sig { void }
  def clear_transferred_at; end

  sig { void }
  def clear_user_agent; end

  sig { returns(String) }
  def event_id; end

  sig { params(value: String).void }
  def event_id=(value); end

  sig { returns(T.nilable(Hydro::Schemas::PackageRegistry::V0::Entities::Package)) }
  def package; end

  sig { params(value: T.nilable(Hydro::Schemas::PackageRegistry::V0::Entities::Package)).void }
  def package=(value); end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def previous_owner_global_id; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def previous_owner_global_id=(value); end

  sig { returns(Integer) }
  def previous_owner_id; end

  sig { params(value: Integer).void }
  def previous_owner_id=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)) }
  def previous_owner_org; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)).void }
  def previous_owner_org=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def previous_owner_user; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def previous_owner_user=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)) }
  def previous_repository; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)).void }
  def previous_repository=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)) }
  def repository; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)).void }
  def repository=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(T.nilable(Hydro::Schemas::PackageRegistry::V0::Entities::StorageService)) }
  def storage_service; end

  sig { params(value: T.nilable(Hydro::Schemas::PackageRegistry::V0::Entities::StorageService)).void }
  def storage_service=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def transferred_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def transferred_at=(value); end

  sig { returns(String) }
  def user_agent; end

  sig { params(value: String).void }
  def user_agent=(value); end
end
