{"version":3,"file":"sponsors-signup-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/react-core/deferred-registry.ts","ui/packages/react-core/react-partial-anchor.ts","ui/packages/react-core/react-partial-registry.ts","ui/packages/react-core/ReactPartialElement.tsx","ui/packages/react-core/register-partial.ts","ui/packages/react-profiling-mode/src/index.ts","ui/packages/sponsors-signup/UserContactEmail.tsx","ui/packages/sponsors-signup/BankPayout.tsx","ui/packages/sponsors-signup/FiscalHostPayout.tsx","ui/packages/sponsors-signup/PayoutDestination.tsx","ui/packages/sponsors-signup/UserResidenceCountry.tsx","ui/packages/sponsors-signup/OrgContactEmail.tsx","ui/packages/sponsors-signup/BillingCountry.tsx","ui/packages/sponsors-signup/SignupForm.tsx","ui/packages/sponsors-signup/SponsorsSignup.tsx","ui/packages/sponsors-signup/sponsors-signup.ts","ui/packages/test-id-props/test-id-props.ts","ui/packages/verified-fetch/verified-fetch.ts","ui/packages/react-core/PartialRouter.tsx","ui/packages/react-core/PartialEntry.tsx","ui/packages/react-core/ReactBaseElement.tsx"],"sourcesContent":["export class DeferredRegistry<T> {\n  private registrationEntries: Record<\n    string,\n    {\n      promise: Promise<T>\n      resolve?: (r: T) => void\n    }\n  > = {}\n\n  public register(name: string, registration: T) {\n    const entry = this.registrationEntries[name]\n    if (entry) {\n      entry.resolve?.(registration)\n    } else {\n      this.registrationEntries[name] = {\n        promise: Promise.resolve(registration),\n      }\n    }\n  }\n\n  public getRegistration(name: string): Promise<T> {\n    this.registrationEntries[name] ||= new Deferred()\n    return this.registrationEntries[name].promise\n  }\n}\n\nclass Deferred<T> {\n  declare promise\n  declare resolve: (r: T) => void\n\n  constructor() {\n    this.promise = new Promise<T>(resolve => {\n      this.resolve = resolve\n    })\n  }\n}\n","import type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {useCallback, useEffect, useRef, useState} from 'react'\n\ninterface ReactPartialAnchor {\n  /**\n   * DO NOT USE THIS PROPERTY DIRECTLY. It is meant to be used with useExternalAnchor and useOnAnchorClick\n   */\n  __wrapperElement: ReactPartialAnchorElement\n}\n\nexport interface ReactPartialAnchorProps {\n  reactPartialAnchor?: ReactPartialAnchor\n}\n\nexport function usePartialAnchorProps(\n  anchorElement: ReactPartialAnchorElement | undefined | null,\n): ReactPartialAnchorProps {\n  useEffect(() => {\n    const anchor = anchorElement?.anchor\n\n    if (!anchor) {\n      return\n    }\n\n    if ('disabled' in anchor) {\n      anchor.disabled = false\n    }\n    anchor.classList.remove('cursor-wait')\n  }, [anchorElement])\n\n  if (!anchorElement) {\n    return {}\n  }\n\n  return {\n    reactPartialAnchor: {\n      __wrapperElement: anchorElement,\n    },\n  }\n}\n\nexport function useExternalAnchor(reactPartialAnchor: ReactPartialAnchor) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor || null)\n  const [open, setOpen] = useState(false)\n\n  const onClick = useCallback(() => {\n    // toggle the open state when clicked\n    setOpen(!open)\n  }, [open, setOpen])\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    ref.current.setAttribute('aria-expanded', open.toString())\n    ref.current.setAttribute('aria-haspopup', 'true')\n  }, [ref, open])\n\n  useOnAnchorClick(reactPartialAnchor, onClick)\n\n  return {\n    ref,\n    open,\n    setOpen,\n  }\n}\n\nexport function useOnAnchorClick(reactPartialAnchor: ReactPartialAnchor, onClick: (event: MouseEvent) => void) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor)\n\n  useEffect(() => {\n    const element = ref.current\n    if (!element) {\n      return\n    }\n\n    element.addEventListener('click', onClick)\n    return () => element.removeEventListener('click', onClick)\n  }, [ref, onClick])\n}\n\nexport type PropsWithPartialAnchor<T> = T & Required<ReactPartialAnchorProps>\n","import {DeferredRegistry} from './deferred-registry'\n\nexport interface PartialRegistration {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Component: React.ComponentType<any>\n}\n\nexport const partialRegistry = new DeferredRegistry<PartialRegistration>()\n\nexport function getReactPartial(appName: string) {\n  return partialRegistry.getRegistration(appName)\n}\n","import {controller} from '@github/catalyst'\nimport {getReactPartial} from './react-partial-registry'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {ReactBaseElement} from './ReactBaseElement'\nimport {PartialEntry} from './PartialEntry'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\n\n// What is this silliness? Is it react or a web component?!\n// It's a web component we use to bootstrap react partials within the monolith.\n@controller\nclass ReactPartialElement extends ReactBaseElement<EmbeddedPartialData> {\n  nameAttribute = 'partial-name'\n\n  async getReactNode(embeddedData: EmbeddedPartialData) {\n    const {Component} = await getReactPartial(this.name)\n\n    // Some React Partials will be wrapped in a react-partial-anchor, which is used to conditionally render the Partial\n    const anchorElement = this.closest<ReactPartialAnchorElement>('react-partial-anchor')\n\n    return (\n      <PartialEntry\n        partialName={this.name}\n        embeddedData={embeddedData}\n        Component={Component}\n        wasServerRendered={this.hasSSRContent}\n        ssrError={this.ssrError}\n        anchorElement={anchorElement}\n      />\n    )\n  }\n}\n","import {partialRegistry, type PartialRegistration} from './react-partial-registry'\n// Import the web component to get it registered on the window\nimport './ReactPartialElement'\n\n// NOTE: if the signature of this method changes, also update the react-partial-name ESLint rule\n// /workspaces/github/ui/packages/eslint-plugin-github-monorepo/rules/react-partial-name.js\nexport function registerReactPartial(name: string, registration: PartialRegistration) {\n  partialRegistry.register(name, registration)\n}\n","import safeStorage from '@github-ui/safe-storage'\n\nconst {getItem, setItem, removeItem} = safeStorage('localStorage')\nconst REACT_PROFILING_ENABLED = 'REACT_PROFILING_ENABLED'\n\ninterface ReactProfilingModeMethods {\n  enable: () => void\n  disable: () => void\n  isEnabled: () => boolean\n}\n\nconst ReactProfilingMode: ReactProfilingModeMethods = {\n  enable: () => setItem(REACT_PROFILING_ENABLED, 'true'),\n  disable: () => removeItem(REACT_PROFILING_ENABLED),\n  isEnabled: () => !!getItem(REACT_PROFILING_ENABLED),\n}\n\nexport default ReactProfilingMode\n","import {testIdProps} from '@github-ui/test-id-props'\nimport {FormControl, Link, Select} from '@primer/react'\n\nexport interface ContactEmails {\n  [email: string]: UserEmail | BillingEmail\n}\n\ninterface UserEmail {\n  email: string\n  type: 'user'\n  id: number\n}\n\nexport interface BillingEmail {\n  email: string\n  type: 'billing'\n}\n\nexport interface UserContactEmailProps {\n  possibleContactEmails: ContactEmails\n  contactEmailUpdatePath: string\n  currentContactEmail?: string\n}\n\nexport function UserContactEmail({\n  possibleContactEmails,\n  contactEmailUpdatePath,\n  currentContactEmail,\n}: UserContactEmailProps) {\n  const getEmailOptions = (contactEmails: ContactEmails): UserEmail[] => {\n    return Object.values(contactEmails).filter((email): email is UserEmail => email.type === 'user')\n  }\n  const emailOptions = getEmailOptions(possibleContactEmails)\n\n  return (\n    <>\n      <FormControl>\n        <FormControl.Label>Contact email</FormControl.Label>\n        <Select\n          name=\"sponsors_listing[contact_email_id]\"\n          defaultValue={currentContactEmail || ''}\n          sx={{width: '100%'}}\n          aria-describedby=\"contact-email-description\"\n          {...testIdProps('user-contact-email')}\n        >\n          {emailOptions.map(email => (\n            <Select.Option key={email.email} value={email.id.toString()}>\n              {email.email}\n            </Select.Option>\n          ))}\n        </Select>\n        <span id=\"contact-email-description\" className=\"note\">\n          Select a verified email address for us to contact you about your GitHub Sponsors profile. This will not be\n          shared publicly. You can manage verified email addresses in your{' '}\n          <Link href={contactEmailUpdatePath} inline={true}>\n            email settings\n          </Link>\n          .\n        </span>\n      </FormControl>\n    </>\n  )\n}\n\ntry{ UserContactEmail.displayName ||= 'UserContactEmail' } catch {}","import {useState} from 'react'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {InfoIcon} from '@primer/octicons-react'\nimport {Box, Flash, FormControl, Link, Octicon, Radio, Select} from '@primer/react'\n\nexport interface BankPayoutProps {\n  bankPayout: boolean\n  currentBillingCountry: string\n  countries: Countries\n  fiscalHostDocsURL: string\n}\n\nexport interface Countries {\n  [countryCode: string]: {\n    countryCode: string\n    stripeSupported: boolean\n    name: string\n  }\n}\n\nexport function BankPayout({bankPayout, currentBillingCountry, countries, fiscalHostDocsURL}: BankPayoutProps) {\n  const [bankCountryCode, setBankCountryCode] = useState(currentBillingCountry)\n\n  const validStripeCountryCode = (countryCode: string) =>\n    countryCode === '' || !!countries[countryCode]?.stripeSupported\n\n  return (\n    <>\n      <Box sx={{my: 3}}>\n        <FormControl>\n          <Radio value=\"bank\" aria-describedby=\"bank-description\" />\n          <FormControl.Label sx={{ml: 1}}>Bank account</FormControl.Label>\n        </FormControl>\n        <span id=\"bank-description\" className=\"note\">\n          Use a bank account to receive your sponsorships. Note: If you use a personal bank account, your country may\n          tax your GitHub Sponsors payouts as personal income.\n        </span>\n      </Box>\n      {bankPayout && (\n        <>\n          <FormControl sx={{my: 3}}>\n            <FormControl.Label>Country or region where your bank account is located</FormControl.Label>\n            <Select\n              name=\"sponsors_listing[billing_country]\"\n              sx={{width: '100%'}}\n              onChange={event => {\n                setBankCountryCode(event.target.value)\n              }}\n              {...testIdProps('residence-country')}\n            >\n              <Select.Option value=\"\">Select a country or region</Select.Option>\n              {Object.entries(countries).map(([key, country]) => (\n                <Select.Option key={key} value={country.countryCode}>\n                  {country.name}\n                </Select.Option>\n              ))}\n            </Select>\n          </FormControl>\n          {validStripeCountryCode(bankCountryCode) || (\n            <Flash sx={{mb: 2}} {...testIdProps('payout-invalid-bank-country')}>\n              <Octicon icon={InfoIcon} />\n              Your region is not supported. You can use an account with a{' '}\n              <Link href={fiscalHostDocsURL} inline>\n                fiscal host\n              </Link>{' '}\n              or sign up to be notified when Sponsors supports your region.\n            </Flash>\n          )}\n        </>\n      )}\n    </>\n  )\n}\n\ntry{ BankPayout.displayName ||= 'BankPayout' } catch {}","import {useState} from 'react'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {Box, FormControl, Radio, Select, TextInput} from '@primer/react'\n\nexport interface FiscalHostPayoutProps {\n  fiscalHostPayout: boolean\n  fiscalHosts: FiscalHosts\n}\n\nexport interface FiscalHosts {\n  [sponsorable_login: string]: {\n    name: string\n    sponsorsListingId: number\n  }\n}\n\nexport function FiscalHostPayout({fiscalHostPayout, fiscalHosts}: FiscalHostPayoutProps) {\n  const [fiscalHostLogin, setFiscalHostLogin] = useState('')\n\n  return (\n    <>\n      <Box sx={{my: 3}}>\n        <FormControl>\n          <Radio value=\"host\" aria-describedby=\"host-description\" />\n          <FormControl.Label sx={{ml: 1}}>Fiscal Host</FormControl.Label>\n        </FormControl>\n        <span id=\"host-description\" className=\"note\">\n          Members of supported fiscal hosts can use their fiscal host to join GitHub Sponsors instead of using a bank\n          account.\n        </span>\n      </Box>\n      {fiscalHostPayout && (\n        <FormControl sx={{my: 3}}>\n          <FormControl.Label>Choose a fiscal host</FormControl.Label>\n          <Select\n            name=\"sponsors_listing[parent_listing_id]\"\n            sx={{width: '100%'}}\n            onChange={event => {\n              setFiscalHostLogin(event.target.value)\n            }}\n            {...testIdProps('residence-country')}\n          >\n            <Select.Option value=\"\">Select a fiscal host</Select.Option>\n            {Object.entries(fiscalHosts).map(([key, fiscalHost]) => (\n              <Select.Option key={key} value={fiscalHost.sponsorsListingId.toString() || ''}>\n                {fiscalHost.name}\n              </Select.Option>\n            ))}\n          </Select>\n        </FormControl>\n      )}\n      {fiscalHostPayout && fiscalHostLogin !== '' && (\n        <FormControl sx={{my: 3}}>\n          <FormControl.Label>Fiscal host project profile URL</FormControl.Label>\n          <TextInput\n            name=\"sponsors_listing[fiscally_hosted_project_profile_url]\"\n            block={true}\n            aria-describedby=\"fiscal-profile-url-description\"\n          />\n          <span className=\"note\" id=\"fiscal-profile-url-description\">\n            Please include a link to your profile on your fiscal host’s site, if available. <br />\n            e.g., <code>https://opencollective.com/babel</code>\n          </span>\n        </FormControl>\n      )}\n    </>\n  )\n}\n\ntry{ FiscalHostPayout.displayName ||= 'FiscalHostPayout' } catch {}","import {useState} from 'react'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {Box, RadioGroup} from '@primer/react'\nimport {BankPayout} from './BankPayout'\nimport {FiscalHostPayout, type FiscalHosts} from './FiscalHostPayout'\nimport type {Countries} from './BankPayout'\n\nexport interface PayoutDestinationProps {\n  countries: Countries\n  fiscalHosts: FiscalHosts\n  currentBillingCountry?: string\n  fiscalHostDocsURL: string\n}\n\nexport function PayoutDestination({\n  countries,\n  fiscalHosts,\n  currentBillingCountry,\n  fiscalHostDocsURL,\n}: PayoutDestinationProps) {\n  const [payoutSelection, setPayoutSelection] = useState('')\n\n  const bankPayout = payoutSelection === 'bank'\n  const fiscalHostPayout = payoutSelection === 'host'\n\n  return (\n    <Box sx={{mt: 4}}>\n      <RadioGroup\n        name=\"fiscal_option\"\n        {...testIdProps('payout-destination')}\n        onChange={selected => setPayoutSelection(selected || '')}\n      >\n        <RadioGroup.Label sx={{fontWeight: 'bold', fontSize: 2}}>How you receive payments</RadioGroup.Label>\n        <BankPayout\n          bankPayout={bankPayout}\n          currentBillingCountry={currentBillingCountry || ''}\n          countries={countries}\n          fiscalHostDocsURL={fiscalHostDocsURL}\n        />\n        <FiscalHostPayout fiscalHostPayout={fiscalHostPayout} fiscalHosts={fiscalHosts} />\n      </RadioGroup>\n    </Box>\n  )\n}\n\ntry{ PayoutDestination.displayName ||= 'PayoutDestination' } catch {}","import {testIdProps} from '@github-ui/test-id-props'\nimport {FormControl, Select} from '@primer/react'\nimport type {Countries} from './BankPayout'\n\nexport interface UserResidenceCountryProps {\n  countries: Countries\n  currentCountryOfResidence?: string\n}\n\nexport function UserResidenceCountry({countries, currentCountryOfResidence}: UserResidenceCountryProps) {\n  return (\n    <FormControl sx={{mt: 4}}>\n      <FormControl.Label>Country or region of residence</FormControl.Label>\n      <Select\n        name=\"sponsors_listing[country_of_residence]\"\n        defaultValue={currentCountryOfResidence || ''}\n        sx={{width: '100%'}}\n        {...testIdProps('residence-country')}\n      >\n        <Select.Option value=\"\">Select a country or region</Select.Option>\n        {Object.entries(countries).map(([key, country]) => (\n          <Select.Option key={key} value={country.countryCode}>\n            {country.name}\n          </Select.Option>\n        ))}\n      </Select>\n    </FormControl>\n  )\n}\n\ntry{ UserResidenceCountry.displayName ||= 'UserResidenceCountry' } catch {}","import {testIdProps} from '@github-ui/test-id-props'\nimport {FormControl, Link, TextInput} from '@primer/react'\nimport type {ContactEmails, BillingEmail} from './UserContactEmail'\n\nexport interface OrgContactEmailProps {\n  possibleContactEmails: ContactEmails\n  contactEmailUpdatePath: string\n}\n\nexport function OrgContactEmail({possibleContactEmails, contactEmailUpdatePath}: OrgContactEmailProps) {\n  const getEmailOptions = (contactEmails: ContactEmails): BillingEmail[] => {\n    return Object.values(contactEmails).filter((email): email is BillingEmail => email.type === 'billing')\n  }\n  const billingEmail = getEmailOptions(possibleContactEmails)[0]\n\n  return (\n    <FormControl disabled={true}>\n      <FormControl.Label>Contact email</FormControl.Label>\n      <TextInput\n        name=\"billing_email\"\n        sx={{width: '100%'}}\n        {...testIdProps('org-contact-email')}\n        defaultValue={billingEmail?.email || ''}\n        readOnly\n      />\n      <span className=\"note\">\n        The organization billing email where we will contact you about your GitHub Sponsors profile. This will not be\n        shared publicly. Change it in the{' '}\n        <Link href={contactEmailUpdatePath} inline={true}>\n          organization profile page\n        </Link>\n        .\n      </span>\n    </FormControl>\n  )\n}\n\ntry{ OrgContactEmail.displayName ||= 'OrgContactEmail' } catch {}","import {testIdProps} from '@github-ui/test-id-props'\nimport {FormControl, Select} from '@primer/react'\nimport type {Countries} from './BankPayout'\n\nexport interface BillingCountryProps {\n  countries: Countries\n  currentBillingCountry: string | null\n}\n\nexport function BillingCountry({countries, currentBillingCountry}: BillingCountryProps) {\n  return (\n    <FormControl sx={{mt: 4}}>\n      <FormControl.Label>Bank account country or region</FormControl.Label>\n      <Select\n        name=\"sponsors_listing[billing_country]\"\n        defaultValue={currentBillingCountry || ''}\n        sx={{width: '100%'}}\n        {...testIdProps('banking-country')}\n      >\n        {Object.entries(countries).map(([key, country]) => (\n          <Select.Option key={key} value={country.countryCode} readOnly>\n            {country.name}\n          </Select.Option>\n        ))}\n      </Select>\n    </FormControl>\n  )\n}\n\ntry{ BillingCountry.displayName ||= 'BillingCountry' } catch {}","import {useState} from 'react'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport {UserContactEmail, type ContactEmails} from './UserContactEmail'\nimport {PayoutDestination} from './PayoutDestination'\nimport type {Countries} from './BankPayout'\nimport type {FiscalHosts} from './FiscalHostPayout'\nimport {UserResidenceCountry} from './UserResidenceCountry'\nimport {OrgContactEmail} from './OrgContactEmail'\nimport {BillingCountry} from './BillingCountry'\nimport {Button, Flash} from '@primer/react'\nimport type {FormEvent} from 'react'\n\nexport interface SignupFormProps {\n  formData: FormData\n  sponsorableData: SponsorableData\n  sponsorsListingData?: SponsorsListingData\n  docsLinks: DocsLinks\n  setSponsorsListingData: (data: SponsorsListingData) => void\n}\n\nexport interface FormData {\n  formAction: string\n  countries: Countries\n  fiscalHosts: FiscalHosts\n}\n\nexport interface SponsorableData {\n  isUser: boolean\n  possibleContactEmails: ContactEmails\n  contactEmailUpdatePath: string\n}\n\nexport interface SponsorsListingData {\n  isWaitlisted: boolean\n  contactEmail: string\n  countryOfResidence: string\n  billingCountry: string\n  usesFiscalHost: boolean\n  signupStatusPartialPath: string\n}\n\nexport interface DocsLinks {\n  about: string\n  fiscalHosts: string\n}\n\nexport function SignupForm({\n  formData,\n  sponsorableData,\n  sponsorsListingData,\n  docsLinks,\n  setSponsorsListingData,\n}: SignupFormProps) {\n  const [error, setError] = useState<string | null>(null)\n  const [success, setSuccess] = useState<string | null>(null)\n  const isUpdate = !!sponsorsListingData\n\n  const submitForm = async (event: FormEvent) => {\n    event.preventDefault()\n    const form = event.target as HTMLFormElement\n    const method = isUpdate ? 'PUT' : 'POST'\n    const body = new FormData(form)\n    const result = await verifiedFetch(formData.formAction, {method, body})\n    const resultText = await result.text()\n    const resultJSON = JSON.parse(resultText)\n    if (result.ok) {\n      const listingData = resultJSON.sponsorsListingData\n      setSponsorsListingData(listingData)\n      setError(null)\n      setSuccess('Your information has been saved.')\n    } else {\n      setSuccess(null)\n      setError(resultJSON.error)\n    }\n  }\n\n  return (\n    <form\n      method=\"post\"\n      action={formData.formAction}\n      onSubmit={submitForm}\n      data-turbo=\"false\"\n      {...testIdProps('sponsors-signup-form')}\n    >\n      {error && (\n        <Flash variant=\"danger\" role=\"alert\" sx={{mb: 3}}>\n          {error}\n        </Flash>\n      )}\n      {success && (\n        <Flash variant=\"success\" role=\"alert\" sx={{mb: 3}}>\n          {success}\n        </Flash>\n      )}\n      {sponsorableData.isUser ? (\n        <>\n          <UserContactEmail\n            possibleContactEmails={sponsorableData.possibleContactEmails}\n            contactEmailUpdatePath={sponsorableData.contactEmailUpdatePath}\n            currentContactEmail={sponsorsListingData?.contactEmail}\n          />\n          <UserResidenceCountry\n            countries={formData.countries}\n            currentCountryOfResidence={sponsorsListingData?.countryOfResidence}\n          />\n        </>\n      ) : (\n        <OrgContactEmail\n          possibleContactEmails={sponsorableData.possibleContactEmails}\n          contactEmailUpdatePath={sponsorableData.contactEmailUpdatePath}\n        />\n      )}\n      {isUpdate && !sponsorsListingData?.usesFiscalHost ? (\n        <BillingCountry countries={formData.countries} currentBillingCountry={sponsorsListingData.billingCountry} />\n      ) : (\n        <PayoutDestination\n          countries={formData.countries}\n          fiscalHosts={formData.fiscalHosts}\n          fiscalHostDocsURL={docsLinks.fiscalHosts}\n          currentBillingCountry={sponsorsListingData?.billingCountry}\n        />\n      )}\n      <Button type=\"submit\" variant={isUpdate ? 'default' : 'primary'} sx={{mt: 4}}>\n        {isUpdate ? 'Update' : 'Submit'}\n      </Button>\n    </form>\n  )\n}\n\ntry{ SignupForm.displayName ||= 'SignupForm' } catch {}","import {useState} from 'react'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {Heading, Link, Spinner, Text} from '@primer/react'\nimport type {DocsLinks, FormData, SponsorableData, SponsorsListingData} from './SignupForm'\nimport {SignupForm} from './SignupForm'\n\nexport interface SponsorsSignupProps {\n  formData: FormData\n  sponsorableData: SponsorableData\n  sponsorsListingData?: SponsorsListingData\n  docsLinks: DocsLinks\n}\n\nexport function SponsorsSignup({formData, sponsorableData, sponsorsListingData, docsLinks}: SponsorsSignupProps) {\n  const [sponsorsListingDataState, setSponsorsListingDataState] = useState<SponsorsListingData | undefined>(\n    sponsorsListingData,\n  )\n\n  return (\n    <div className=\"container-sm p-responsive mt-7\">\n      <div className=\"d-flex flex-column flex-items-center mb-3\">\n        <Heading as=\"h1\" sx={{mb: 3}}>\n          Get Sponsored\n        </Heading>\n        <Text sx={{color: 'fg.muted'}}>\n          Launch a{' '}\n          <Link href={docsLinks.about} inline={true} {...testIdProps('sponsors-help-docs')}>\n            GitHub Sponsors profile\n          </Link>{' '}\n          and start receiving funding.\n        </Text>\n      </div>\n      {sponsorsListingDataState === undefined || sponsorsListingDataState?.isWaitlisted ? (\n        <SignupForm\n          formData={formData}\n          sponsorableData={sponsorableData}\n          sponsorsListingData={sponsorsListingDataState}\n          docsLinks={docsLinks}\n          setSponsorsListingData={setSponsorsListingDataState}\n        />\n      ) : (\n        <include-fragment src={sponsorsListingDataState.signupStatusPartialPath}>\n          <div className=\"d-flex flex-column flex-items-center\">\n            <Spinner size=\"medium\" aria-label=\"Loading sign-up status\" />\n          </div>\n        </include-fragment>\n      )}\n    </div>\n  )\n}\n\ntry{ SponsorsSignup.displayName ||= 'SponsorsSignup' } catch {}","import {registerReactPartial} from '@github-ui/react-core/register-partial'\nimport {SponsorsSignup} from './SponsorsSignup'\n\nregisterReactPartial('sponsors-signup', {\n  Component: SponsorsSignup,\n})\n","export interface TestIdProps {\n  /** Test ID to be queried by automated testing suites */\n  'data-testid'?: string\n}\n\nexport const testIdProps = (value: string): TestIdProps => {\n  return {'data-testid': value}\n}\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  assertRelativePathOrSameOrigin(path)\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\nfunction assertRelativePathOrSameOrigin(path: string) {\n  if (process.env.NODE_ENV === 'test' && !window.location.origin) return\n  const url = new URL(path, window.location.origin)\n  if (url.origin !== window.location.origin) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetch(path, {...init, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetchJSON(path, {...init, headers})\n}\n","import {useState} from 'react'\nimport type {BrowserHistory, MemoryHistory} from '@remix-run/router'\nimport {Router} from 'react-router-dom'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\ntype Props = {\n  children: React.ReactNode\n  history: BrowserHistory | MemoryHistory\n}\n\nexport function PartialRouter({children, history}: Props) {\n  const [state, setState] = useState({\n    location: history.location,\n  })\n\n  useHydratedEffect(() => history.listen(setState), [history])\n\n  return (\n    <Router location={state.location} navigator={history}>\n      {children}\n    </Router>\n  )\n}\n\ntry{ PartialRouter.displayName ||= 'PartialRouter' } catch {}","// Think of this as the entry point into the framework\nimport React from 'react'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {BaseProviders} from './BaseProviders'\nimport type {BrowserHistory} from '@remix-run/router'\nimport {createMemoryHistory} from '@remix-run/router'\nimport {AppContextProvider} from './AppContextProvider'\nimport {PartialRouter} from './PartialRouter'\nimport {CommonElements} from './CommonElements'\nimport {createBrowserHistory} from './create-browser-history'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {usePartialAnchorProps} from './react-partial-anchor'\n\ninterface Props {\n  partialName: string\n  embeddedData: EmbeddedPartialData\n  Component: React.ComponentType\n  wasServerRendered: boolean\n  ssrError?: HTMLScriptElement\n  anchorElement?: ReactPartialAnchorElement | null\n}\n\nexport function PartialEntry({\n  partialName,\n  embeddedData,\n  Component,\n  wasServerRendered,\n  ssrError,\n  anchorElement,\n}: Props) {\n  // Create a ref to track the browser history:\n  const historyRef = React.useRef<BrowserHistory>()\n  const window = globalThis.window as Window | undefined\n\n  // For linking to work, we can just pass a dummy pathname here. We may consider plumbing the actual path in\n  if (!historyRef.current) {\n    historyRef.current = !window\n      ? createMemoryHistory({initialEntries: [{pathname: '/'}]})\n      : createBrowserHistory({window})\n  }\n  const history = historyRef.current\n  const partialAnchorProps = usePartialAnchorProps(anchorElement)\n\n  // Wrap the partial in an AppContextProvider and static Router so that react-core links\n  // will be functional.\n  return (\n    <BaseProviders appName={partialName} wasServerRendered={wasServerRendered}>\n      <AppContextProvider history={history} routes={[]}>\n        <PartialRouter history={history}>\n          <Component {...embeddedData.props} {...(partialAnchorProps as object)} />\n          <CommonElements ssrError={ssrError} />\n        </PartialRouter>\n      </AppContextProvider>\n    </BaseProviders>\n  )\n}\n\ntry{ PartialEntry.displayName ||= 'PartialEntry' } catch {}","import {target} from '@github/catalyst'\nimport {createRoot, hydrateRoot} from 'react-dom/client'\nimport type {createRoot as createRootType, hydrateRoot as hydrateRootType, Root} from 'react-dom/client'\nimport React from 'react'\nimport ReactProfilingMode from '@github-ui/react-profiling-mode'\nimport {EXPECTED_ERRORS} from './expected-errors'\nimport {sendStats} from '@github-ui/stats'\n\ntype ReactDOM = {\n  createRoot: typeof createRootType\n  hydrateRoot: typeof hydrateRootType\n}\n\nconst REACT_INVARIANT_ERROR_REGEX = /Minified React error #(?<invariant>\\d+)/\n\nexport abstract class ReactBaseElement<T> extends HTMLElement {\n  @target embeddedData: HTMLScriptElement | undefined\n  @target ssrError: HTMLScriptElement | undefined\n  @target reactRoot: HTMLElement | undefined\n  private root: Root | undefined\n\n  abstract nameAttribute: string\n  abstract getReactNode(embeddedData: T): Promise<React.ReactNode>\n\n  protected get name() {\n    return this.getAttribute(this.nameAttribute) as string\n  }\n\n  private get embeddedDataText() {\n    const text = this.embeddedData?.textContent\n\n    if (!text) {\n      throw new Error(`No embedded data provided for react element ${this.name}`)\n    }\n\n    return text\n  }\n\n  get hasSSRContent() {\n    return this.getAttribute('data-ssr') === 'true'\n  }\n\n  connectedCallback() {\n    this.renderReact()\n  }\n\n  disconnectedCallback() {\n    this.root?.unmount()\n    this.root = undefined\n  }\n\n  private async renderReact() {\n    if (!this.reactRoot) throw new Error('No react root provided')\n    let reactDom: ReactDOM = {\n      createRoot,\n      hydrateRoot,\n    }\n\n    // Override the react-dom import if we're in profiling mode\n    if (ReactProfilingMode.isEnabled()) {\n      reactDom = await this.getReactDomWithProfiling()\n    }\n\n    const embeddedData = JSON.parse(this.embeddedDataText) as T\n    const ssrErrorText = this.ssrError?.textContent\n    const node = await this.getReactNode(embeddedData)\n    const baseNode = <React.StrictMode>{node}</React.StrictMode>\n\n    if (ssrErrorText) {\n      this.logSSRError(ssrErrorText)\n    }\n\n    if (this.hasSSRContent) {\n      /**\n       * Styled-components automatically looks for style tags to hydrate on first page load, but will not detect them\n       * if they are added after the initial page load. This causes a hydration error because React isn't expecting\n       * a style tag within the app. To work around this, we need to manually move the style tags to the head before\n       * hydrating the app.\n       *\n       * During hydration, styled-components will create a new style tag which matches the one we moved to the head.\n       * This means that after hydration, we can safely remove the style tag we manually moved to the head.\n       */\n      const styles = this.querySelector('style[data-styled=\"true\"]')\n      if (styles) document.head.appendChild(styles)\n\n      // Hydrate the react app\n      // onRecoverableError is disabled until we have a react version with this fix in:\n      // https://github.com/facebook/react/pull/25692\n      this.root = reactDom.hydrateRoot(this.reactRoot, baseNode, {\n        onRecoverableError: error => {\n          if (!(error instanceof Error)) return\n\n          const match = REACT_INVARIANT_ERROR_REGEX.exec(error.message)\n          const invariant = String(match?.groups?.invariant)\n\n          sendStats({\n            incrementKey: 'REACT_HYDRATION_ERROR',\n            incrementTags: {\n              appName: this.name,\n              invariant,\n            },\n          })\n        },\n      })\n\n      // Remove the manually moved style tag after hydration\n      if (styles) {\n        // Wait until things are idle to remove the style tag. If we do it immediately, we can cause a flash of unstyled content.\n        requestIdleCallback(() => {\n          // styles could have already been removed by Turbo if a navigation happens quickly. Only remove it from the DOM if it's still there.\n          styles.parentElement?.removeChild(styles)\n        })\n      }\n    } else {\n      this.root = reactDom.createRoot(this.reactRoot)\n      this.root.render(baseNode)\n    }\n\n    this.classList.add('loaded')\n  }\n\n  private getReactDomWithProfiling() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return import('react-dom/profiling') as any as Promise<ReactDOM>\n  }\n\n  private logSSRError(ssrErrorText: string) {\n    if (EXPECTED_ERRORS[ssrErrorText]) {\n      // eslint-disable-next-line no-console\n      return console.error('SSR failed with an expected error:', EXPECTED_ERRORS[ssrErrorText])\n    }\n\n    try {\n      const error = JSON.parse(ssrErrorText) as PlatformJavascriptError\n      const stacktrace = parseFailbotStacktrace(error)\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', `${error.type}: ${error.value}\\n`, error, stacktrace)\n    } catch {\n      /**\n       * In the event we couldn't log the error, we should not break the application\n       */\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', ssrErrorText, 'unable to parse as json')\n    }\n  }\n}\n\nfunction parseFailbotStacktrace(error: PlatformJavascriptError) {\n  if (!error.stacktrace) return ''\n  let prefix = '\\n '\n  const stack = error.stacktrace.map((frame: PlatformStackframe) => {\n    const {function: func, filename, lineno, colno} = frame\n    const line = `${prefix} at ${func} (${filename}:${lineno}:${colno})`\n    prefix = ' '\n    return line\n  })\n  return stack.join('\\n')\n}\n\ntry{ REACT_INVARIANT_ERROR_REGEX.displayName ||= 'REACT_INVARIANT_ERROR_REGEX' } catch {}"],"names":["DeferredRegistry","register","name","registration","entry","registrationEntries","resolve","promise","Promise","getRegistration","Deferred","constructor","usePartialAnchorProps","anchorElement","useEffect","anchor","disabled","classList","remove","reactPartialAnchor","__wrapperElement","useExternalAnchor","ref","useRef","open","setOpen","useState","onClick","useCallback","current","setAttribute","toString","useOnAnchorClick","element","addEventListener","removeEventListener","partialRegistry","ReactPartialElement","ReactBaseElement","getReactNode","embeddedData","appName","Component","closest","PartialEntry","partialName","wasServerRendered","hasSSRContent","ssrError","nameAttribute","registerReactPartial","controller","getItem","setItem","removeItem","safeStorage","REACT_PROFILING_ENABLED","enable","disable","isEnabled","UserContactEmail","possibleContactEmails","contactEmailUpdatePath","currentContactEmail","emailOptions","Object","values","filter","email","type","FormControl","Label","Select","defaultValue","sx","width","aria-describedby","testIdProps","map","Option","value","id","span","className","Link","href","inline","displayName","BankPayout","bankPayout","currentBillingCountry","countries","fiscalHostDocsURL","bankCountryCode","setBankCountryCode","Box","my","Radio","ml","onChange","event","target","entries","key","country","countryCode","validStripeCountryCode","stripeSupported","Flash","mb","Octicon","icon","InfoIcon","FiscalHostPayout","fiscalHostPayout","fiscalHosts","fiscalHostLogin","setFiscalHostLogin","fiscalHost","sponsorsListingId","TextInput","block","br","code","PayoutDestination","payoutSelection","setPayoutSelection","mt","RadioGroup","selected","fontWeight","fontSize","UserResidenceCountry","currentCountryOfResidence","OrgContactEmail","billingEmail","getEmailOptions","readOnly","BillingCountry","SignupForm","formData","sponsorableData","sponsorsListingData","docsLinks","setSponsorsListingData","error","setError","success","setSuccess","isUpdate","submitForm","preventDefault","body","FormData","result","verifiedFetch","formAction","method","resultJSON","JSON","parse","text","ok","form","action","onSubmit","data-turbo","variant","role","isUser","contactEmail","countryOfResidence","usesFiscalHost","billingCountry","Button","SponsorsSignup","sponsorsListingDataState","setSponsorsListingDataState","div","Heading","as","Text","color","about","undefined","isWaitlisted","include-fragment","src","signupStatusPartialPath","Spinner","size","aria-label","path","init","assertRelativePathOrSameOrigin","url","URL","window","location","origin","headers","fetch","verifiedFetchJSON","Accept","stringify","reactFetch","reactFetchJSON","PartialRouter","children","history","state","setState","useHydratedEffect","listen","Router","navigator","historyRef","React","globalThis","createBrowserHistory","createMemoryHistory","initialEntries","pathname","partialAnchorProps","BaseProviders","AppContextProvider","routes","props","CommonElements","REACT_INVARIANT_ERROR_REGEX","HTMLElement","getAttribute","embeddedDataText","textContent","connectedCallback","renderReact","disconnectedCallback","root","unmount","reactRoot","reactDom","createRoot","hydrateRoot","ReactProfilingMode","getReactDomWithProfiling","ssrErrorText","node","baseNode","logSSRError","styles","querySelector","document","head","appendChild","onRecoverableError","Error","match","exec","message","invariant","String","groups","sendStats","incrementKey","incrementTags","requestIdleCallback","parentElement","removeChild","render","add","EXPECTED_ERRORS","console","stacktrace","parseFailbotStacktrace","prefix","stack","function","func","filename","lineno","colno","frame","line","join"],"sourceRoot":""}