# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Api::App::PlatformTypes::PullRequestTimelineItemsConnection`.
# Please instead update this file by running `bin/tapioca dsl Api::App::PlatformTypes::PullRequestTimelineItemsConnection`.

class Api::App::PlatformTypes::PullRequestTimelineItemsConnection < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(Integer) }
  def after_focus_count; end

  sig { returns(T::Boolean) }
  def after_focus_count?; end

  sig { returns(Integer) }
  def before_focus_count; end

  sig { returns(T::Boolean) }
  def before_focus_count?; end

  sig { returns(T.nilable(T::Array[Api::App::PlatformTypes::PullRequestTimelineItemsEdge])) }
  def edges; end

  sig { returns(T::Boolean) }
  def edges?; end

  sig { returns(Integer) }
  def filtered_count; end

  sig { returns(T::Boolean) }
  def filtered_count?; end

  sig do
    returns(T.nilable(T::Array[T.any(Api::App::PlatformTypes::PullRequestCommit, Api::App::PlatformTypes::PullRequestCommitCommentThread, Api::App::PlatformTypes::PullRequestReview, Api::App::PlatformTypes::PullRequestReviewThread, Api::App::PlatformTypes::PullRequestRevisionMarker, Api::App::PlatformTypes::AutomaticBaseChangeFailedEvent, Api::App::PlatformTypes::AutomaticBaseChangeSucceededEvent, Api::App::PlatformTypes::AutoMergeDisabledEvent, Api::App::PlatformTypes::AutoMergeEnabledEvent, Api::App::PlatformTypes::AutoRebaseEnabledEvent, Api::App::PlatformTypes::AutoSquashEnabledEvent, Api::App::PlatformTypes::BaseRefChangedEvent, Api::App::PlatformTypes::BaseRefForcePushedEvent, Api::App::PlatformTypes::BaseRefDeletedEvent, Api::App::PlatformTypes::DeployedEvent, Api::App::PlatformTypes::DeploymentEnvironmentChangedEvent, Api::App::PlatformTypes::HeadRefDeletedEvent, Api::App::PlatformTypes::HeadRefForcePushedEvent, Api::App::PlatformTypes::HeadRefRestoredEvent, Api::App::PlatformTypes::MergedEvent, Api::App::PlatformTypes::ReviewDismissedEvent, Api::App::PlatformTypes::ReviewRequestedEvent, Api::App::PlatformTypes::ReviewRequestRemovedEvent, Api::App::PlatformTypes::ReadyForReviewEvent, Api::App::PlatformTypes::ConvertToDraftEvent, Api::App::PlatformTypes::AddedToMergeQueueEvent, Api::App::PlatformTypes::RemovedFromMergeQueueEvent, Api::App::PlatformTypes::IssueComment, Api::App::PlatformTypes::CrossReferencedEvent, Api::App::PlatformTypes::AddedToProjectEvent, Api::App::PlatformTypes::AddedToProjectV2Event, Api::App::PlatformTypes::AssignedEvent, Api::App::PlatformTypes::ClosedEvent, Api::App::PlatformTypes::CommentDeletedEvent, Api::App::PlatformTypes::ConnectedEvent, Api::App::PlatformTypes::ConvertedFromDraftEvent, Api::App::PlatformTypes::ConvertedNoteToIssueEvent, Api::App::PlatformTypes::ConvertedToDiscussionEvent, Api::App::PlatformTypes::DemilestonedEvent, Api::App::PlatformTypes::DisconnectedEvent, Api::App::PlatformTypes::LabeledEvent, Api::App::PlatformTypes::LockedEvent, Api::App::PlatformTypes::MarkedAsDuplicateEvent, Api::App::PlatformTypes::MentionedEvent, Api::App::PlatformTypes::MilestonedEvent, Api::App::PlatformTypes::MovedColumnsInProjectEvent, Api::App::PlatformTypes::PinnedEvent, Api::App::PlatformTypes::ProjectV2ItemStatusChangedEvent, Api::App::PlatformTypes::ReferencedEvent, Api::App::PlatformTypes::RemovedFromProjectEvent, Api::App::PlatformTypes::RemovedFromProjectV2Event, Api::App::PlatformTypes::RenamedTitleEvent, Api::App::PlatformTypes::ReopenedEvent, Api::App::PlatformTypes::SubscribedEvent, Api::App::PlatformTypes::TransferredEvent, Api::App::PlatformTypes::UnassignedEvent, Api::App::PlatformTypes::UnlabeledEvent, Api::App::PlatformTypes::UnlockedEvent, Api::App::PlatformTypes::UserBlockedEvent, Api::App::PlatformTypes::UnmarkedAsDuplicateEvent, Api::App::PlatformTypes::UnpinnedEvent, Api::App::PlatformTypes::UnsubscribedEvent)]))
  end
  def nodes; end

  sig { returns(T::Boolean) }
  def nodes?; end

  sig { returns(Integer) }
  def page_count; end

  sig { returns(T::Boolean) }
  def page_count?; end

  sig { returns(Api::App::PlatformTypes::PageInfo) }
  def page_info; end

  sig { returns(T::Boolean) }
  def page_info?; end

  sig { returns(Integer) }
  def total_count; end

  sig { returns(T::Boolean) }
  def total_count?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def updated_at; end

  sig { returns(T::Boolean) }
  def updated_at?; end
end
