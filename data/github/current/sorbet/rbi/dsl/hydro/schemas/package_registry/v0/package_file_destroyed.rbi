# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::PackageRegistry::V0::PackageFileDestroyed`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::PackageRegistry::V0::PackageFileDestroyed`.

class Hydro::Schemas::PackageRegistry::V0::PackageFileDestroyed
  sig do
    params(
      artifact_id: T.nilable(String),
      event_id: T.nilable(String),
      repository: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository),
      storage_service: T.nilable(Hydro::Schemas::PackageRegistry::V0::Entities::StorageService)
    ).void
  end
  def initialize(artifact_id: nil, event_id: nil, repository: nil, storage_service: nil); end

  sig { returns(String) }
  def artifact_id; end

  sig { params(value: String).void }
  def artifact_id=(value); end

  sig { void }
  def clear_artifact_id; end

  sig { void }
  def clear_event_id; end

  sig { void }
  def clear_repository; end

  sig { void }
  def clear_storage_service; end

  sig { returns(String) }
  def event_id; end

  sig { params(value: String).void }
  def event_id=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)) }
  def repository; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)).void }
  def repository=(value); end

  sig { returns(T.nilable(Hydro::Schemas::PackageRegistry::V0::Entities::StorageService)) }
  def storage_service; end

  sig { params(value: T.nilable(Hydro::Schemas::PackageRegistry::V0::Entities::StorageService)).void }
  def storage_service=(value); end
end
