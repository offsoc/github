# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `minitest-stub-const` gem.
# Please instead update this file by running `bin/tapioca gem minitest-stub-const`.

module ERB::Escape
  private

  def html_escape(_arg0); end

  class << self
    def html_escape(_arg0); end
  end
end

# source://minitest-stub-const//lib/minitest/stub_const.rb#1
class Object < ::BasicObject
  include ::Kernel
  include ::JSON::Ext::Generator::GeneratorMethods::Object
  include ::PP::ObjectMixin
  include ::ActiveSupport::Tryable
  include ::ERB::Escape
  include ::ActiveSupport::CoreExt::ERBUtil
  include ::ActiveSupport::CoreExt::ERBUtilPrivate

  # source://minitest-stub-const//lib/minitest/stub_const.rb#90
  def silence_warnings; end

  # Replace the +value+ of constant +name+ for the duration of a
  # +block+. This is especially useful when testing that the expected
  # class methods are being called on a Module or Class instance.
  #
  # Example:
  #
  #   module Foo
  #     BAR = :original
  #   end
  #
  #   Foo.stub_const(:BAR, :stubbed) do
  #     Foo::BAR
  #   end
  #   # => :stubbed
  #
  #   Foo::BAR
  #   # => :original
  #
  # source://minitest-stub-const//lib/minitest/stub_const.rb#19
  def stub_const(name, val = T.unsafe(nil), &block); end

  # Same as stub_const except it supports a Hash of +name+ to +value+ pairs
  # of the constants that will be stubbed for the duration of the +block+.
  #
  # Example:
  #
  #   module Foo
  #     BAR = :original1
  #     BAZ = :original2
  #   end
  #
  #   Foo.stub_consts(BAR: :stubble, BAZ: :stubby) do
  #     [Foo::BAR, Foo::BAZ]
  #   end
  #   # => [:stubble, :stubby]
  #
  #   [Foo::BAR, Foo::BAZ]
  #   # => [:original1, :original2]
  #
  # source://minitest-stub-const//lib/minitest/stub_const.rb#40
  def stub_consts(consts, &block); end

  # Remove the constant +name+ for the duration of a block. This is
  # useful when testing code that checks whether a constant is defined
  # or not. Simply yields to the passed block if the constant is not
  # currently defined.
  #
  # Example:
  #
  #   Object.stub_remove_const(:File) do
  #     "Look ma, no File!" unless defined?(File)
  #   end
  #   # => "Look ma, no File!"
  #
  # source://minitest-stub-const//lib/minitest/stub_const.rb#73
  def stub_remove_const(name); end
end
