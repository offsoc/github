# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessSeatAssignment`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessSeatAssignment`.

class Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessSeatAssignment
  sig do
    params(
      assignable_id: T.nilable(Integer),
      assignable_type: T.nilable(String),
      business: T.nilable(Hydro::Schemas::Github::V1::Entities::Business),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      id: T.nilable(Integer),
      organization: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization),
      pending_cancellation_date: T.nilable(Google::Protobuf::Timestamp),
      updated_at: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(assignable_id: nil, assignable_type: nil, business: nil, created_at: nil, id: nil, organization: nil, pending_cancellation_date: nil, updated_at: nil); end

  sig { returns(Integer) }
  def assignable_id; end

  sig { params(value: Integer).void }
  def assignable_id=(value); end

  sig { returns(String) }
  def assignable_type; end

  sig { params(value: String).void }
  def assignable_type=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Business)) }
  def business; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Business)).void }
  def business=(value); end

  sig { void }
  def clear_assignable_id; end

  sig { void }
  def clear_assignable_type; end

  sig { void }
  def clear_business; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_organization; end

  sig { void }
  def clear_pending_cancellation_date; end

  sig { void }
  def clear_updated_at; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)) }
  def organization; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)).void }
  def organization=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def pending_cancellation_date; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def pending_cancellation_date=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end
end
