# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Authnd::V0::ProgrammaticAccessEvent`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Authnd::V0::ProgrammaticAccessEvent`.

class Hydro::Schemas::Authnd::V0::ProgrammaticAccessEvent
  sig do
    params(
      access_id: T.nilable(Integer),
      actor_id: T.nilable(Integer),
      catalog_service: T.nilable(String),
      credential_expires_at_utc: T.nilable(Google::Protobuf::Timestamp),
      credential_id: T.nilable(Integer),
      credential_issued_at_utc: T.nilable(Google::Protobuf::Timestamp),
      credential_suffix: T.nilable(String),
      event_reason: T.nilable(String),
      event_type: T.nilable(T.any(Symbol, Integer)),
      request_id: T.nilable(String),
      send_notification: T.nilable(T::Boolean),
      tenant_id: T.nilable(Integer)
    ).void
  end
  def initialize(access_id: nil, actor_id: nil, catalog_service: nil, credential_expires_at_utc: nil, credential_id: nil, credential_issued_at_utc: nil, credential_suffix: nil, event_reason: nil, event_type: nil, request_id: nil, send_notification: nil, tenant_id: nil); end

  sig { returns(Integer) }
  def access_id; end

  sig { params(value: Integer).void }
  def access_id=(value); end

  sig { returns(Integer) }
  def actor_id; end

  sig { params(value: Integer).void }
  def actor_id=(value); end

  sig { returns(String) }
  def catalog_service; end

  sig { params(value: String).void }
  def catalog_service=(value); end

  sig { void }
  def clear_access_id; end

  sig { void }
  def clear_actor_id; end

  sig { void }
  def clear_catalog_service; end

  sig { void }
  def clear_credential_expires_at_utc; end

  sig { void }
  def clear_credential_id; end

  sig { void }
  def clear_credential_issued_at_utc; end

  sig { void }
  def clear_credential_suffix; end

  sig { void }
  def clear_event_reason; end

  sig { void }
  def clear_event_type; end

  sig { void }
  def clear_request_id; end

  sig { void }
  def clear_send_notification; end

  sig { void }
  def clear_tenant_id; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def credential_expires_at_utc; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def credential_expires_at_utc=(value); end

  sig { returns(Integer) }
  def credential_id; end

  sig { params(value: Integer).void }
  def credential_id=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def credential_issued_at_utc; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def credential_issued_at_utc=(value); end

  sig { returns(String) }
  def credential_suffix; end

  sig { params(value: String).void }
  def credential_suffix=(value); end

  sig { returns(String) }
  def event_reason; end

  sig { params(value: String).void }
  def event_reason=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def event_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def event_type=(value); end

  sig { returns(String) }
  def request_id; end

  sig { params(value: String).void }
  def request_id=(value); end

  sig { returns(T::Boolean) }
  def send_notification; end

  sig { params(value: T::Boolean).void }
  def send_notification=(value); end

  sig { returns(Integer) }
  def tenant_id; end

  sig { params(value: Integer).void }
  def tenant_id=(value); end
end
