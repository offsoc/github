{"version":3,"file":"repos-rules-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@primer/react/lib-esm/BranchName/BranchName.js","node_modules/@primer/react/lib-esm/Button/LinkButton.js","node_modules/@primer/react/lib-esm/ButtonGroup/ButtonGroup.js","node_modules/@primer/react/lib-esm/CheckboxGroup/CheckboxGroup.js","node_modules/@primer/react/lib-esm/Pagehead/Pagehead.js","node_modules/@primer/react/lib-esm/Timeline/Timeline.js","ui/packages/bypass-actors/bypass-actors-types.ts","ui/packages/bypass-actors/components/bypassDialog/alreadyAdded.ts","ui/packages/bypass-actors/services/api.ts","ui/packages/item-picker/constants/errors.ts","ui/packages/item-picker/constants/ids.ts","ui/packages/item-picker/constants/selectors.ts","ui/packages/item-picker/shared.ts","ui/packages/ref-utils/ref-utils.ts","ui/packages/repos-rules/hooks/use-is-stafftools.ts","ui/packages/repos-rules/App.tsx","ui/packages/repos-rules/components/Blankslate.tsx","ui/packages/repos-rules/types/rules-types.ts","ui/packages/repos-rules/components/BorderBox.tsx","ui/packages/repos-rules/hooks/use-relative-navigation.ts","ui/packages/repos-rules/components/BranchSelector.tsx","ui/packages/repos-rules/components/Subhead.tsx","ui/packages/repos-rules/helpers/constants.ts","ui/packages/repos-rules/helpers/string.ts","ui/packages/repos-rules/helpers/enforcement-label.ts","ui/packages/repos-rules/components/EnforcementIcon.tsx","ui/packages/repos-rules/helpers/export-ruleset.ts","ui/packages/repos-rules/components/ruleset/DangerConfirmationDialog.tsx","ui/packages/repos-rules/components/RulesetActionMenu.tsx","ui/packages/repos-rules/hooks/use-target-count.ts","ui/packages/repos-rules/components/RulesetList.tsx","ui/packages/repos-rules/components/ComboButton.tsx","ui/packages/repos-rules/components/NewRulesetButton.tsx","ui/packages/repos-rules/hooks/use-json-upload.ts","ui/packages/repos-rules/components/UpsellBanner.tsx","ui/packages/repos-rules/helpers/utils.ts","ui/packages/repos-rules/routes/OverviewPage.tsx","ui/packages/repos-rules/state/rules.ts","ui/packages/repos-rules/state/bypass-actors.ts","ui/packages/repos-rules/state/conditions.ts","ui/packages/repos-rules/hooks/use-validate-ruleset-name-unique.ts","ui/packages/repos-rules/hooks/use-ruleset.ts","ui/packages/repos-rules/services/api.ts","ui/packages/repos-rules/components/ruleset/GeneralPanel.tsx","ui/packages/repos-rules/helpers/conditions.ts","ui/packages/repos-rules/components/RefPill.tsx","ui/packages/repos-rules/components/ruleset/TargetsTable.tsx","ui/packages/repos-rules/hooks/use-validate-condition-target.ts","ui/packages/repos-rules/components/ruleset/conditions/AddTargetDialog.tsx","ui/packages/repos-rules/components/ruleset/conditions/IncludeExcludeTarget.tsx","ui/packages/repos-rules/components/ruleset/conditions/PanelHeader.tsx","ui/packages/repos-rules/components/ruleset/conditions/RepositoryIdTarget.tsx","ui/packages/repos-rules/components/ruleset/conditions/AddPropertyDialog.tsx","ui/packages/repos-rules/components/ruleset/conditions/RepositoryPropertyTarget.tsx","ui/packages/repos-rules/components/ruleset/conditions/RepositoryTarget.tsx","ui/packages/repos-rules/components/RulesetFormErrorFlash.tsx","ui/packages/repos-rules/hooks/use-register-errors.ts","ui/packages/repos-rules/components/rule-schema/errors/RepositoryConditionsError.tsx","ui/packages/repos-rules/components/ruleset/PushRulePublicTargetingBanner.tsx","ui/packages/repos-rules/helpers/custom-properties-query.ts","ui/packages/org-selector/OrgSelector.tsx","ui/packages/repos-rules/components/ruleset/conditions/OrganizationIdTarget.tsx","ui/packages/repos-rules/components/ruleset/conditions/OrganizationTarget.tsx","ui/packages/repos-rules/components/ruleset/TargetTypeSelector.tsx","ui/packages/repos-rules/components/ruleset/TargetsPanel.tsx","ui/packages/repos-rules/components/rule-schema/MergeQueueGroupingStrategy.tsx","ui/packages/repos-rules/components/rule-schema/MergeQueueMergeMethod.tsx","ui/packages/repos-rules/components/rule-schema/RequiredStatusCheckSelectList.tsx","ui/packages/repos-rules/components/rule-schema/RestrictedCommitsList.tsx","ui/packages/repos-rules/components/rule-schema/RequiredDeployments.tsx","ui/packages/repos-rules/components/rule-schema/Workflows.tsx","ui/packages/repos-rules/components/rule-schema/errors/MergeQueueError.tsx","ui/packages/repos-rules/components/rule-schema/RestrictHelper.tsx","ui/packages/repos-rules/components/rule-schema/FileExtensionRestrictions.tsx","ui/packages/repos-rules/components/rule-schema/FilePathRestrictions.tsx","ui/packages/repos-rules/helpers/range.ts","ui/packages/repos-rules/components/rule-schema/MaxHelper.tsx","ui/packages/repos-rules/components/rule-schema/MaxFilePathLength.tsx","ui/packages/repos-rules/components/rule-schema/MaxFileSize.tsx","ui/packages/repos-rules/components/rule-schema/CodeScanningTools.tsx","ui/packages/repos-rules/components/rule-schema/errors/RequiredStatusChecksError.tsx","ui/packages/repos-rules/components/rule-schema/errors/RequiredDeploymentsError.tsx","ui/packages/repos-rules/components/rule-schema/errors/MaxFileSizeError.tsx","ui/packages/repos-rules/components/rule-schema/errors/MaxFilePathError.tsx","ui/packages/repos-rules/components/rule-schema/errors/FilePathRestrictionsError.tsx","ui/packages/repos-rules/components/rule-schema/errors/FileExtensionRestrictionsError.tsx","ui/packages/repos-rules/components/rule-schema/errors/CodeScanningToolsError.tsx","ui/packages/repos-rules/components/rule-schema/errors/WorkflowsError.tsx","ui/packages/repos-rules/components/rule-schema/index.tsx","ui/packages/repos-rules/components/rule-schema/errors/RulesetError.tsx","ui/packages/repos-rules/components/ruleset/RuleRow.tsx","ui/packages/repos-rules/helpers/rule-schema.ts","ui/packages/repos-rules/helpers/dirty-state.ts","ui/packages/repos-rules/components/ruleset/AddMetadataPatternRuleDialog.tsx","ui/packages/repos-rules/components/ruleset/MetadataPatternRuleRow.tsx","ui/packages/repos-rules/components/ruleset/RulesList.tsx","ui/packages/repos-rules/components/ruleset/RestrictionsPanel.tsx","ui/packages/repos-rules/components/ruleset/RulesPanel.tsx","ui/packages/bypass-actors/helpers/constants.ts","ui/packages/bypass-actors/components/bypassList/BypassListRow.tsx","ui/packages/bypass-actors/components/bypassList/BypassList.tsx","ui/packages/bypass-actors/components/bypassSelectPanel/BypassSelectPanel.tsx","ui/packages/repos-rules/components/ruleset/BypassListPanel.tsx","ui/packages/repos-rules/routes/RulesetPage.tsx","ui/packages/repos-rules/components/insights/InsightsBlank.tsx","ui/packages/repos-rules/components/insights/RuleStatusFilter.tsx","ui/packages/repos-rules/components/insights/RulesetFilter.tsx","ui/packages/repos-rules/helpers/insights-filter.ts","ui/packages/repos-rules/hooks/use-insights-actors.ts","ui/packages/repos-rules/components/insights/EvaluateStatusFilter.tsx","ui/packages/repos-rules/components/insights/InsightsFilterBar.tsx","ui/packages/repos-rules/components/insights/User.tsx","ui/packages/repos-rules/components/insights/rule-run-metadata-list/ListItem.tsx","ui/packages/repos-rules/components/insights/rule-run-metadata-list/rule-types/PullRequestList.tsx","ui/packages/repos-rules/components/insights/rule-run-metadata-list/rule-types/StatusChecksList.tsx","ui/packages/repos-rules/components/insights/rule-run-metadata-list/rule-types/DeploymentsList.tsx","ui/packages/repos-rules/components/insights/rule-run-metadata-list/rule-types/ViolationsList.tsx","ui/packages/repos-rules/components/insights/rule-run-metadata-list/index.tsx","ui/packages/repos-rules/components/insights/RuleSuiteDetailsDialog.tsx","ui/packages/repos-rules/components/insights/RuleSuiteRow.tsx","ui/packages/repos-rules/routes/InsightsPage.tsx","ui/packages/repos-rules/routes/HistoryComparisonPage.tsx","ui/packages/repos-rules/routes/HistorySummaryPage.tsx","ui/packages/repos-rules/repos-rules.ts","ui/packages/use-analytics/use-analytics.ts","ui/packages/use-key-press/use-key-press.ts","ui/packages/user-selector/UserItem.tsx","ui/packages/user-selector/UsersList.tsx","ui/packages/user-selector/UserSelector.tsx","ui/packages/action-menu-selector/ActionMenuSelector.tsx","ui/packages/action-menu-selector/TimeFilter.tsx","ui/packages/bypass-actors/components/ActorType.tsx","ui/packages/bypass-actors/components/BypassAvatar.tsx","ui/packages/bypass-actors/components/bypassDialog/BypassDialog.tsx","ui/packages/bypass-actors/components/bypassDialog/BypassDialogRow.tsx","ui/packages/bypass-actors/components/bypassDialog/BypassDialogBody.tsx","ui/packages/bypass-actors/components/bypassDialog/BypassDialogHeader.tsx","ui/packages/current-repository/CurrentRepository.tsx","ui/packages/item-picker/components/ItemPicker.tsx","ui/packages/item-picker/contexts/ItemPickersContext.tsx","ui/packages/repos-selector/ReposSelector.tsx","ui/packages/screen-size/ScreenSize.tsx","node_modules/react-virtual/dist/react-virtual.mjs"],"sourcesContent":["import styled from 'styled-components';\nimport { get } from '../constants.js';\nimport sx from '../sx.js';\n\nconst BranchName = styled.a.withConfig({\n  displayName: \"BranchName\",\n  componentId: \"sc-sg8jsy-0\"\n})([\"display:inline-block;padding:2px 6px;font-size:var(--text-body-size-small,\", \");font-family:var(--fontStack-monospace,\", \");color:var(--fgColor-link,\", \");background-color:var(--bgColor-accent-muted,\", \");border-radius:var(--borderRadius-medium,\", \");text-decoration:none;&:is(:not(a)){color:var(--fgColor-muted);}\", \";\"], get('fontSizes.0'), get('fonts.mono'), get('colors.accent.fg'), get('colors.accent.subtle'), get('radii.2'), sx);\n\nexport { BranchName as default };\n","import React, { forwardRef } from 'react';\nimport { ButtonBase } from './ButtonBase.js';\nimport { defaultSxProp } from '../utils/defaultSxProp.js';\n\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nconst LinkButton = /*#__PURE__*/forwardRef(({\n  children,\n  as: Component = 'a',\n  sx = defaultSxProp,\n  ...props\n}, forwardedRef) => {\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    as: Component\n    // @ts-expect-error ButtonBase wants both Anchor and Button refs\n    ,\n    ref: forwardedRef,\n    sx: sx\n  }, props), children);\n});\n\nexport { LinkButton };\n","import styled from 'styled-components';\nimport { get } from '../constants.js';\nimport sx from '../sx.js';\n\nconst ButtonGroup = styled.div.withConfig({\n  displayName: \"ButtonGroup\",\n  componentId: \"sc-1gxhls1-0\"\n})([\"display:inline-flex;vertical-align:middle;isolation:isolate;&& > *:not([data-loading-wrapper]){margin-inline-end:-1px;position:relative;border-radius:0;:first-child{border-top-left-radius:\", \";border-bottom-left-radius:\", \";}:last-child{border-top-right-radius:\", \";border-bottom-right-radius:\", \";}:focus,:active,:hover{z-index:1;}}[data-loading-wrapper]{:first-child{button,a{border-top-left-radius:\", \";border-bottom-left-radius:\", \";}}:last-child{button,a{border-top-right-radius:\", \";border-bottom-right-radius:\", \";}}}[data-loading-wrapper] > *{margin-inline-end:-1px;position:relative;border-radius:0;:focus,:active,:hover{z-index:1;}}\", \";\"], get('radii.2'), get('radii.2'), get('radii.2'), get('radii.2'), get('radii.2'), get('radii.2'), get('radii.2'), get('radii.2'), sx);\n\nexport { ButtonGroup as default };\n","import React from 'react';\nimport CheckboxOrRadioGroup from '../internal/components/CheckboxOrRadioGroup/CheckboxOrRadioGroup.js';\nimport CheckboxOrRadioGroupCaption from '../internal/components/CheckboxOrRadioGroup/CheckboxOrRadioGroupCaption.js';\nimport CheckboxOrRadioGroupLabel from '../internal/components/CheckboxOrRadioGroup/CheckboxOrRadioGroupLabel.js';\nimport CheckboxOrRadioGroupValidation from '../internal/components/CheckboxOrRadioGroup/CheckboxOrRadioGroupValidation.js';\nimport '@primer/behaviors/utils';\nimport '@primer/behaviors';\nimport { useRenderForcingRef } from '../hooks/useRenderForcingRef.js';\nimport '../FormControl/_FormControlContext.js';\nimport FormControl from '../FormControl/FormControl.js';\nimport Checkbox from '../Checkbox/Checkbox.js';\nimport { CheckboxGroupContext } from './CheckboxGroupContext.js';\n\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nconst CheckboxGroup = ({\n  children,\n  disabled,\n  onChange,\n  ...rest\n}) => {\n  const formControlComponentChildren = React.Children.toArray(children).filter(child => /*#__PURE__*/React.isValidElement(child) && child.type === FormControl).map(formControlComponent => /*#__PURE__*/React.isValidElement(formControlComponent) ? formControlComponent.props.children : []).flat();\n  const checkedCheckboxes = React.Children.toArray(formControlComponentChildren).filter(child => /*#__PURE__*/React.isValidElement(child) && child.type === Checkbox).map(checkbox => /*#__PURE__*/React.isValidElement(checkbox) && (checkbox.props.checked || checkbox.props.defaultChecked) && checkbox.props.value).filter(Boolean);\n  const [selectedCheckboxValues, setSelectedCheckboxValues] = useRenderForcingRef(checkedCheckboxes);\n  const updateSelectedCheckboxes = e => {\n    const {\n      value,\n      checked\n    } = e.currentTarget;\n    if (checked) {\n      setSelectedCheckboxValues([...(selectedCheckboxValues.current || []), value]);\n      return;\n    }\n    setSelectedCheckboxValues((selectedCheckboxValues.current || []).filter(selectedValue => selectedValue !== value));\n  };\n  return /*#__PURE__*/React.createElement(CheckboxGroupContext.Provider, {\n    value: {\n      disabled,\n      onChange: e => {\n        if (onChange) {\n          updateSelectedCheckboxes(e);\n          onChange(selectedCheckboxValues.current || [], e);\n        }\n      }\n    }\n  }, /*#__PURE__*/React.createElement(CheckboxOrRadioGroup, _extends({\n    disabled: disabled\n  }, rest), children));\n};\nCheckboxGroup.displayName = \"CheckboxGroup\";\nvar CheckboxGroup$1 = Object.assign(CheckboxGroup, {\n  Caption: CheckboxOrRadioGroupCaption,\n  Label: CheckboxOrRadioGroupLabel,\n  Validation: CheckboxOrRadioGroupValidation\n});\n\nexport { CheckboxGroupContext, CheckboxGroup$1 as default };\n","import styled from 'styled-components';\nimport { get } from '../constants.js';\nimport sx from '../sx.js';\n\nconst Pagehead = styled.div.withConfig({\n  displayName: \"Pagehead\",\n  componentId: \"sc-diawfz-0\"\n})([\"position:relative;padding-top:\", \";padding-bottom:\", \";margin-bottom:\", \";border-bottom:1px solid \", \";\", \";\"], get('space.4'), get('space.4'), get('space.4'), get('colors.border.default'), sx);\n\nexport { Pagehead as default };\n","import clsx from 'clsx';\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport Box from '../Box/Box.js';\nimport { get } from '../constants.js';\nimport sx from '../sx.js';\n\nconst Timeline = styled.div.withConfig({\n  displayName: \"Timeline\",\n  componentId: \"sc-1nkzbnu-0\"\n})([\"display:flex;flex-direction:column;\", \" \", \";\"], props => props.clipSidebar && css([\".Timeline-Item:first-child{padding-top:0;}.Timeline-Item:last-child{padding-bottom:0;}\"]), sx);\nconst TimelineItem = styled.div.attrs(props => ({\n  className: clsx('Timeline-Item', props.className)\n})).withConfig({\n  displayName: \"Timeline__TimelineItem\",\n  componentId: \"sc-1nkzbnu-1\"\n})([\"display:flex;position:relative;padding:\", \" 0;margin-left:\", \";&::before{position:absolute;top:0;bottom:0;left:0;display:block;width:2px;content:'';background-color:\", \";}\", \" \", \";\"], get('space.3'), get('space.3'), get('colors.border.muted'), props => props.condensed && css([\"padding-top:\", \";padding-bottom:0;&:last-child{padding-bottom:\", \";}.TimelineItem-Badge{height:16px;margin-top:\", \";margin-bottom:\", \";color:\", \";background-color:\", \";border:0;}\"], get('space.1'), get('space.3'), get('space.2'), get('space.2'), get('colors.fg.muted'), get('colors.canvas.default')), sx);\nconst TimelineBadge = props => {\n  return /*#__PURE__*/React.createElement(Box, {\n    position: \"relative\",\n    zIndex: 1\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    className: \"TimelineItem-Badge\",\n    flexShrink: 0,\n    borderRadius: \"50%\",\n    borderWidth: \"2px\",\n    borderStyle: \"solid\",\n    borderColor: \"canvas.default\",\n    overflow: \"hidden\",\n    color: \"fg.muted\",\n    bg: \"timeline.badgeBg\",\n    width: \"32px\",\n    height: \"32px\",\n    mr: 2,\n    ml: \"-15px\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    sx: props.sx\n  }, props.children));\n};\nTimelineBadge.displayName = \"TimelineBadge\";\nconst TimelineBody = styled.div.withConfig({\n  displayName: \"Timeline__TimelineBody\",\n  componentId: \"sc-1nkzbnu-2\"\n})([\"min-width:0;max-width:100%;margin-top:\", \";color:\", \";flex:auto;font-size:\", \";\", \";\"], get('space.1'), get('colors.fg.muted'), get('fontSizes.1'), sx);\nconst TimelineBreak = styled.div.withConfig({\n  displayName: \"Timeline__TimelineBreak\",\n  componentId: \"sc-1nkzbnu-3\"\n})([\"position:relative;z-index:1;height:24px;margin:0;margin-bottom:-\", \";margin-left:0;background-color:\", \";border:0;border-top:\", \" solid \", \";\", \";\"], get('space.3'), get('colors.canvas.default'), get('space.1'), get('colors.border.default'), sx);\nTimelineItem.displayName = 'Timeline.Item';\nTimelineBadge.displayName = 'Timeline.Badge';\nTimelineBody.displayName = 'Timeline.Body';\nTimelineBreak.displayName = 'Timeline.Break';\nvar Timeline$1 = Object.assign(Timeline, {\n  Item: TimelineItem,\n  Badge: TimelineBadge,\n  Body: TimelineBody,\n  Break: TimelineBreak\n});\n\nexport { Timeline$1 as default };\n","export type BypassActor = {\n  id?: number\n  _id?: number\n  actorId: number | string | null\n  actorType: BypassActorType\n  name: string\n  _enabled: boolean\n  _dirty: boolean\n  bypassMode: ActorBypassMode\n  owner?: string\n}\n\nexport type BypassActorType =\n  | 'RepositoryRole'\n  | 'Team'\n  | 'Integration'\n  | 'OrganizationAdmin'\n  | 'DeployKey'\n  | 'EnterpriseTeam'\n  | 'EnterpriseOwner'\n\nexport enum ActorBypassMode {\n  ALWAYS = 0,\n  PRS_ONLY = 1,\n}\n\nexport const enum OrgAdminBypassMode {\n  NoOrgBypass = 'no_org_bypass',\n  OrgBypassPRsOnly = 'org_bypass_prs_only',\n  OrgBypassAny = 'org_bypass_any',\n}\n","import type {BypassActor} from '../../bypass-actors-types'\n\nexport function alreadyAdded(actorId: number | string | null, actorType: string, enabledBypassActors: BypassActor[]) {\n  return enabledBypassActors.some(\n    ({actorId: matchingActorId, actorType: matchingActorType}) =>\n      matchingActorId === actorId && matchingActorType === actorType,\n  )\n}\n\nexport function getEnabledBypassActor(\n  actorId: number | string | null,\n  actorType: string,\n  enabledBypassActors: BypassActor[],\n) {\n  return enabledBypassActors.find(\n    ({actorId: matchingActorId, actorType: matchingActorType}) =>\n      matchingActorId === actorId && matchingActorType === actorType,\n  )\n}\n","import {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport type {BypassActor} from '../bypass-actors-types'\n\nconst request = (url: string, method: string, error = 'Unexpected error') => {\n  return async (body?: object) => {\n    const response = await verifiedFetchJSON(url, {\n      body,\n      method,\n    })\n    if (response.ok) {\n      try {\n        return await response.json()\n      } catch (e) {\n        throw new Error('Failed to read response')\n      }\n    } else {\n      throw new Error(error)\n    }\n  }\n}\n\nexport const getBypassSuggestions = (url: string, query: string): Promise<BypassActor[]> => {\n  return request(`${url}?q=${encodeURIComponent(query)}`, 'GET')()\n}\n","export const ERRORS = {\n  couldNotUpdateAssignees: 'Could not update assignees',\n  couldNotSearchAssignees: 'Could not search assignees',\n  couldNotUpdateLabels: 'Could not update labels',\n  couldNotSearchLabels: 'Could not search labels',\n  couldNotUpdateMilestone: 'Could not update milestone',\n  couldNotSearchMilestones: 'Could not search milestones',\n  couldNotUpdateIssueType: 'Could not update issue type',\n  couldNotSearchRepositories: 'Could not search repositories',\n  couldNotSearchPullRequests: 'Could not search pull requests',\n  couldNotSearchProjects: 'Could not search projects',\n  couldNotSearchBranches: 'Could not search branches',\n  noMatches: 'No matches',\n  noResults: 'No results',\n  couldNotCreateBranch: 'Could not create branch',\n  couldNotCreateLabel: 'Could not create label',\n}\n","export const IDS = {\n  itemPickerRootId: 'item-picker-root-id',\n  itemPickerTestId: 'item-picker-root',\n}\n","export const SELECTORS = {\n  // This matches the attribute assigned to the active item within primers `SelectPanel`\n  activePickerOption: (rootId: string) => `[data-id=\"${rootId}\"] [data-is-active-descendant=\"activated-directly\"]`,\n}\n","import {CircleSlashIcon} from '@primer/octicons-react'\n\nimport {ERRORS} from './constants/errors'\n\ntype ItemGroupVariant = 'subtle' | 'filled'\n\nexport type ItemGroup = {\n  groupId: string\n  header?: {\n    title: string\n    variant?: ItemGroupVariant\n  }\n}\n\nexport const noMatchesItem = {\n  leadingVisual: CircleSlashIcon,\n  text: ERRORS.noMatches,\n  disabled: true,\n  selected: undefined, // hide checkbox\n  key: 'no-matches',\n  id: 'no-matches',\n}\n\nexport const noResultsItem = {\n  leadingVisual: CircleSlashIcon,\n  text: ERRORS.noResults,\n  disabled: true,\n  selected: undefined, // hide checkbox\n  key: 'no-results',\n  id: 'no-results',\n}\n\nexport const maybeIssueUrl = (url: string): boolean => {\n  try {\n    // eslint-disable-next-line no-restricted-syntax\n    new URL(url)\n  } catch (_urlError) {\n    return false\n  }\n\n  return new RegExp(/^.+\\/issues\\/\\d+$/).test(url)\n}\n\n// Attempt to use the `org` parameter to filter the results if we have a `/` present in the query\n// This is to be used with the `search` graphQL endpoint for type `Repository` only.\nexport function getRepositorySearchQuery(queryString: string, organization?: string, excludeRepo?: string): string {\n  const orgIndexSplit = queryString.indexOf('/')\n\n  let query = 'in:name archived:false'\n  if (excludeRepo) {\n    query = `${query} -repo:${excludeRepo}`\n  }\n\n  // if there is <owner>/<repo> in the query, use that to filter the results\n  if (orgIndexSplit > 0 && queryString.split('/').length === 2) {\n    // Naively extract the org name and repo name from the query by assuming anything before the / is the org name\n    const orgSearchName = queryString.split('/')[0]!\n    const repoSearchName = queryString.split('/')[1]!\n    return `${query} org:${orgSearchName} ${repoSearchName}`\n  }\n\n  // If there is an org name, use that to filter the results\n  if (organization) {\n    return `${query} org:${organization} ${queryString}`\n  }\n\n  // If there is no / in the query, or the org name is empty, just search for the repo name\n  return `${query} ${queryString}`\n}\n\n// Generates a set of queries which scope to an owner, and prioritizes issues based on interaction\n// The IssuePickerInternal orders the queried issues and is the source for this order of this priority\nexport const getIssueSearchQueries = (owner = '', query = '', repoNameWithOwner = '') => {\n  const ownerPart = owner && `owner:${owner.trim()} `\n  const repoPart = repoNameWithOwner && `repo:${repoNameWithOwner.trim()} `\n  const queryPart = query && ` ${query.trim()}`\n\n  // Although these queries are using the `... on Issue` type condition,\n  // PR results are still inlcuded in the response in an empty object.\n  // `is:issue` ensures that only issue nodes are returned.\n  const issuePart = 'is:issue '\n  const queryIsUrl = maybeIssueUrl(query)\n\n  // By default, search within the issue title as it's the most relevant option.\n  let inPart = 'in:title'\n\n  // If the query is a number, then we should search for the issue by number as well.\n  if (queryPart && !isNaN(Number(queryPart))) {\n    inPart += ' in:number'\n  }\n\n  const sharedQuery = `${ownerPart}${repoPart}${issuePart}${inPart} `\n\n  return {\n    commenters: `${sharedQuery}commenter:@me${queryPart}`,\n    mentions: `${sharedQuery}mentions:@me${queryPart}`,\n    assignee: `${sharedQuery}assignee:@me${queryPart}`,\n    author: `${sharedQuery}author:@me${queryPart}`,\n    open: `${sharedQuery}state:open${queryPart}`,\n    resource: queryIsUrl ? encodeURI(query) : '',\n    queryIsUrl,\n  }\n}\n\nexport type Unpacked<T> = T extends Array<infer U> ? U : T\n","export type RefType = 'branch' | 'tag'\n\nexport const mapRefType = (ref?: string): RefType | undefined => {\n  if (!ref) return undefined\n  if (ref.startsWith('refs/tags/')) return 'tag'\n  if (ref.startsWith('refs/heads/')) return 'branch'\n  return undefined\n}\nexport const qualifyRef = (ref: string, refType: RefType) => {\n  if (refType === 'branch') return `refs/heads/${ref}`\n  if (refType === 'tag') return `refs/tags/${ref}`\n  return ref\n}\nexport const unqualifyRef = (ref?: string) => {\n  if (!ref) return undefined\n  const refType = mapRefType(ref)\n  if (!refType) return ref\n  const [, , ...unqualifiedRef] = ref.split('/')\n  return unqualifiedRef.join('/')\n}\n","import {useAppPayload} from '@github-ui/react-core/use-app-payload'\n\nexport type AppPayloadWithStafftoolsFlag = {is_stafftools?: boolean}\n\nexport const useIsStafftools = () => useAppPayload<AppPayloadWithStafftoolsFlag>()?.is_stafftools ?? false\n","import {ThemeProvider} from '@primer/react'\nimport {AnalyticsProvider} from '@github-ui/analytics-provider'\nimport {ScreenSizeProvider} from '@github-ui/screen-size'\nimport type React from 'react'\nimport {useIsStafftools} from './hooks/use-is-stafftools'\n\nconst appName = 'repository-rulesets'\nconst category = 'repository-rulesets'\nconst metadata = {}\n\ntype AppProps = {\n  children?: React.ReactNode\n}\n\nexport function App({children}: AppProps) {\n  const isStafftools = useIsStafftools()\n\n  if (!isStafftools) {\n    return <InnerApp>{children}</InnerApp>\n  }\n  return (\n    <StafftoolsThemeWrapper>\n      <InnerApp>{children}</InnerApp>\n    </StafftoolsThemeWrapper>\n  )\n}\n\nfunction InnerApp({children}: AppProps) {\n  return (\n    <AnalyticsProvider appName={appName} category={category} metadata={metadata}>\n      <ScreenSizeProvider>{children}</ScreenSizeProvider>\n    </AnalyticsProvider>\n  )\n}\n\nfunction StafftoolsThemeWrapper({children}: AppProps) {\n  return <ThemeProvider colorMode=\"day\">{children}</ThemeProvider>\n}\n\ntry{ App.displayName ||= 'App' } catch {}\ntry{ InnerApp.displayName ||= 'InnerApp' } catch {}\ntry{ StafftoolsThemeWrapper.displayName ||= 'StafftoolsThemeWrapper' } catch {}","import type {FC} from 'react'\nimport {Box} from '@primer/react'\nimport {Blankslate as PrimerBlankslate} from '@primer/react/drafts'\n\ntype BlankslateProps = {\n  heading: string\n  children?: React.ReactNode\n}\n\nexport const Blankslate: FC<BlankslateProps> = ({heading, children}) => {\n  return (\n    <Box sx={{textAlign: 'center'}}>\n      <PrimerBlankslate>\n        <PrimerBlankslate.Heading as=\"h3\">{heading}</PrimerBlankslate.Heading>\n        {children && <PrimerBlankslate.Description>{children}</PrimerBlankslate.Description>}\n      </PrimerBlankslate>\n    </Box>\n  )\n}\n\ntry{ Blankslate.displayName ||= 'Blankslate' } catch {}","import type {Repository} from '@github-ui/current-repository'\nimport type {ValueType} from '@github-ui/custom-properties-types'\nimport type {Enterprise, Organization} from '@github-ui/repos-types'\nimport type {SafeHTMLString} from '@github-ui/safe-html'\nimport type {User} from '@github-ui/user-selector'\nimport type {BypassActor, OrgAdminBypassMode} from '@github-ui/bypass-actors/types'\nimport type {RefObject} from 'react'\n\nexport const DEFAULT_BRANCH_PATTERN = '~DEFAULT_BRANCH'\nexport const INCLUDE_ALL_PATTERN = '~ALL'\n\nexport type ParameterValue = string | number | boolean | object | Array<number | string | object> | undefined\n\nexport type RuleStatus = 'all' | 'pass' | 'fail' | 'bypass'\nexport type TimePeriod = 'hour' | 'day' | 'week' | 'month'\nexport type EvaluateStatus = 'all' | 'active' | 'evaluate'\n\nexport type TargetType =\n  | 'repository_name'\n  | 'repository_id'\n  | 'ref_name'\n  | 'repository_property'\n  | 'organization_name'\n  | 'organization_id'\nexport type ExpandedRepoTargetType = TargetType | 'all_repos'\nexport type ExpandedOrgTargetType = TargetType | 'all_orgs'\nexport type ExpandedTargetType = ExpandedRepoTargetType | ExpandedOrgTargetType\n\nexport type TargetObjectType = 'organization' | 'repository' | 'ref'\n\nexport interface PropertyDescriptor {\n  name: string\n  description: string\n  valueType: ValueType\n  allowedValues: string[] | undefined\n  source: PropertySource\n  icon: string\n  displayName: string\n}\n\nexport type PropertySource = 'custom' | 'system'\n\nexport type RulesetTarget = 'branch' | 'tag' | 'push' | 'member_privilege'\n\nexport interface DetailedValidationErrors {\n  message?: string\n  general: Record<string, ValidationError[]>\n  rules: Record<string, ValidationError[]>\n  conditions: Record<string, ValidationError[]>\n  bypass_actors: Record<string, ValidationError[]>\n}\n\nexport interface ValidationError {\n  error_code: string\n  message: string\n  index?: number\n  field?: string\n  value?: string\n  sub_errors?: ValidationError[]\n  registered_suberrors?: ValidationError[]\n  unregistered_suberrors?: ValidationError[]\n}\n\nexport interface WorkflowError extends ValidationError {\n  repo_and_path?: string\n}\n\nexport interface Ruleset {\n  id: number\n  target: RulesetTarget\n  name: string\n  matches: string[] | string\n  source: {\n    id: number\n    type: string\n    name: string\n    url?: string\n  }\n  conditions: Condition[]\n  orgAdminBypassMode: OrgAdminBypassMode\n  deployKeyBypass: boolean\n  enforcement: RulesetEnforcement\n  rules: Rule[]\n  formData?: string\n  bypassActors?: BypassActor[]\n  histories?: History[]\n  missingConditionTargets: TargetObjectType[]\n}\n\nexport const enum RulesetEnforcement {\n  Enabled = 'enabled',\n  Disabled = 'disabled',\n  Evaluate = 'evaluate',\n}\n\nexport interface Condition {\n  parameters: ConditionParameters\n  target: TargetType\n  _dirty: boolean\n  metadata?: ConditionMetadata\n}\n\nexport interface IncludeExcludeCondition extends Condition {\n  parameters: IncludeExcludeParameters\n}\n\nexport interface RepositoryIdCondition extends Condition {\n  parameters: RepositoryIdParameters\n  metadata?: RepositoryIdConditionMetadata\n}\n\nexport interface ConditionMetadata {}\n\nexport interface RepositoryIdConditionMetadata extends ConditionMetadata {\n  repositories: SimpleRepository[]\n}\n\nexport interface SimpleRepository {\n  id: number\n  nodeId: string\n  name: string\n  ownerLogin: string\n  public: boolean\n  private: boolean\n  isOrgOwned: boolean\n}\n\nexport interface OrganizationIdConditionMetadata extends ConditionMetadata {\n  organizations: SimpleOrganization[]\n}\n\nexport interface SimpleOrganization {\n  id: number\n  nodeId: string\n  name: string\n}\n\nexport type ConditionParameters =\n  | IncludeExcludeParameters\n  | RepositoryIdParameters\n  | RepositoryPropertyParameters\n  | OrganizationIdParameters\n\nexport interface IncludeExcludeParameters {\n  protected?: boolean\n  include_emu_accounts?: boolean\n  include: string[]\n  exclude: string[]\n}\n\nexport interface RepositoryPropertyParameters {\n  include: PropertyConfiguration[]\n  exclude: PropertyConfiguration[]\n}\n\nexport interface PropertyConfiguration {\n  name: string\n  property_values: string[]\n  source: PropertySource | undefined\n}\n\nexport interface RepositoryIdParameters {\n  protected?: boolean\n  repository_ids: string[]\n}\n\nexport interface OrganizationIdParameters {\n  include_emu_accounts?: boolean\n  organization_ids: string[]\n}\n\nexport type Parameter = Record<string, ParameterValue>\n\nexport type RuleSuiteResult =\n  | 'allowed'\n  | 'failed'\n  | 'git_error'\n  | 'bypassed'\n  | 'push_rejected'\n  // NOTE: ('entered_queue' should never be visible in UI)\n  | 'enter_queue_failed'\nexport interface RuleSuite {\n  id: number\n  ruleRuns: RuleRun[]\n  repository: Repository\n  result: RuleSuiteResult\n  actor?: User | null\n  actorIsPublicKey?: boolean\n  beforeOid?: string | null\n  afterOid?: string | null\n  refName: string\n  commit?: Commit | null\n  createdAt: Date\n  usedExemptionRequests?: ExemptionRequestMetadata[] | null\n  evaluationMetadata: RuleSuiteMetadata\n}\n\nexport interface RuleSuiteMetadata {\n  preReceiveFailure?: boolean\n  pullRequest?: PullRequestSummary\n  pullRequestHeadSha?: string\n  pullRequestPolicySha?: string\n  pullRequestMergeBaseSha?: string\n  mergeGroupPullRequests?: PullRequestSummary[]\n  mergeQueueMergeMethod?: 'merge' | 'squash' | 'rebase'\n  mergeQueueRemovalReason?: MergeQueueRemovalReason\n  mergeQueueCheckResults?: MergeQueueCheckResult[]\n  blobEvaluation?: boolean\n}\n\nexport interface ExemptionRequestMetadata {\n  id: number\n  number: number\n  status: 'pending' | 'completed' | 'rejected' | 'cancelled'\n  requester: User\n  url?: string | null\n}\n\nexport type MergeQueueRemovalReason =\n  | 'unknown'\n  | 'manual'\n  | 'merged'\n  | 'merge_conflict'\n  | 'failed_checks'\n  | 'checks_timed_out'\n  | 'already_merged'\n  | 'queue_cleared'\n  | 'branch_protection_failure'\n  | 'git_tree_invalid'\n  | 'invalid_merge_commit'\n  | 'roll_back'\n\nexport interface MergeQueueCheckResult {\n  context: string | null\n  state?: 'error' | 'failure' | 'pending' | 'success' | null\n  integration_id?: number | null\n}\n\nexport interface PullRequestSummary {\n  id: number\n  number: number\n  link: string\n}\n\nexport interface Commit {\n  message: string\n  shortMessageHtmlLink?: SafeHTMLString | null\n}\n\nexport interface RuleRun {\n  ruleType: string\n  ruleDisplayName: string\n  insightsCategory: {\n    name: string\n    id: number | null\n    link?: string\n    viewLink?: string\n  }\n  insightsSourceOutOfDate: boolean\n  id: number\n  rulesetId?: number\n  message: string | null\n  result: RuleRunResult\n  violations?: RunViolationsData\n  exemptionResponses?: ExemptionResponseMetadata[] | null\n  metadata: RunMetadata | null\n}\n\nexport interface ExemptionResponseMetadata {\n  id: number\n  exemptionRequestId: number\n  exemptionRequestUrl?: string | null\n  status: 'approved' | 'rejected'\n  message: string | null\n  reviewer: User\n}\n\nexport type RunMetadata =\n  | PullRequestMetadata\n  | ChecksMetadata\n  | DeploymentsMetadata\n  | SecretsMetadata\n  | ContentScanSecretsMetadata\n\nexport type PullRequestMetadata = {\n  prNumber: number\n  prLink: string\n  prReviewers: Array<{\n    state: 'approved' | 'commented' | 'changes_requested'\n    stateSummary: string\n    user: {\n      login: string\n      primaryAvatarUrl: string\n    }\n  }>\n}\n\nexport type ChecksMetadata = {\n  checks: Array<{\n    integrationName: string\n    integrationAvatarUrl: string\n    checkRunName: string\n    id: string\n    state: string\n    sha: number\n    description: string\n    warning: string\n  }>\n}\n\nexport type DeploymentsMetadata = {\n  deploymentResults: Array<{\n    status: string\n    name: string\n    sha: string\n    id: string\n  }>\n}\n\nexport type SecretsMetadata = {\n  completed: boolean\n  num_secrets_found_over_limit: number\n  secrets: Array<{\n    type: string\n    locations: Array<{\n      path: string\n      blob_oid: string\n      end_line: number\n      commit_oid: string\n      start_line: number\n      end_line_byte_position: number\n      start_line_byte_position: number\n    }>\n    fingerprint: string\n    token_metadata: {\n      slug: string\n      label: string\n      provider: string\n      token_type: string\n    }\n    bypass_placeholder_ksuid: string\n  }>\n}\n\nexport type ContentScanSecretsMetadata = object\n\ntype RuleRunResult = 'allowed' | 'failed' | 'evaluate_allowed' | 'evaluate_failed'\n\nexport type RunViolationsData = {\n  items: RunViolationItem[]\n  total: number\n}\n\nexport type RunViolationItem = {\n  candidate: string\n  commit_oid?: string\n}\n\n/*\n * Split out rules by what the server returns/expects and\n * what is used locally in context/components, where unless\n * overwritten, Metadata and Dynamic Rules are serverside\n */\nexport interface ServerRule {\n  id?: number\n  ruleType: string\n  parameters: Parameter\n  metadata?: RuleConfigMetadata\n}\n\nexport interface LocalRule {\n  _id?: number\n  _enabled: boolean\n  _dirty: boolean\n  _modalState?: RuleModalState\n}\n\ninterface RuleInterface extends ServerRule, LocalRule {}\n\n/*\n * Each rule type uses its own parameter schema, and assumes the react-y base rule unless\n * set explicitly otherwise. Only Rule and ServerRule are allowed as generic types\n */\nexport type Rule<T extends Rule | ServerRule = RuleInterface> = T & {\n  parameters: unknown\n}\n\nexport type ParameterSchema = {\n  name: string\n  ui_options?: {\n    hide_settings_container: boolean\n  }\n  fields: Array<\n    {\n      name: string\n      display_name: string\n      description: string\n      required: boolean\n      ui_control?: string\n    } & (\n      | {\n          type: 'boolean' | 'string' | 'integer'\n          default_value?: boolean | string | number\n          allowed_options?: Array<{display_name: string; value: string}>\n          allowed_range?: string\n          allowed_values?: string[]\n          ui_prefer_dropdown?: boolean\n        }\n      | {type: 'object'; default_value?: object}\n      | {\n          type: 'array'\n          default_value?: Array<number | string | object>\n          content_type: 'object'\n          content_object: ParameterSchema\n        }\n    )\n  >\n}\n\ntype MetadataPatternSchema = {\n  supportedOperators: Array<{type: string; displayName: string}>\n  propertyDescription: string\n}\n\nexport type RuleSchema = {\n  type: string\n  displayName: string\n  description: string\n  beta: boolean\n  parameterSchema: ParameterSchema\n  metadataPatternSchema?: MetadataPatternSchema\n}\n\nexport type ErrorRef = {\n  [type: string]: {\n    errorRef: RefObject<HTMLDivElement>\n    fields: FieldRef\n  }\n}\n\nexport type FieldRef = Record<string, RefObject<HTMLElement | HTMLInputElement | HTMLButtonElement>>\n\nexport type SourceType = 'repository' | 'organization' | 'enterprise'\n\nexport type InheritedSourceType = 'Upstream' | 'Enterprise' | 'Organization' | 'Repository'\n\nexport type UpsellCtaInfo = {\n  featureEnabled: boolean\n  cta: {\n    visible: boolean\n    path?: string\n  }\n}\n\nexport type UpsellInfo = {\n  rulesets: UpsellCtaInfo\n  enterpriseRulesets: UpsellCtaInfo\n  organization: boolean\n  askAdmin: boolean\n}\n\nexport type HelpUrls = {\n  fnmatch: string\n  statusChecks: string\n  deploymentEnvironments: string\n  commitMetadataRules?: string\n  codeScanning?: string\n}\n\nexport type HomeRoutePayload = {\n  source: Repository | Organization | Enterprise\n  sourceType: SourceType\n  upsellInfo: UpsellInfo\n  rulesets: Ruleset[]\n  matchingRulesets: number[]\n  editableRulesets: number[]\n  branch?: string\n  readOnly?: boolean\n  branchListCacheKey: string\n  supportedTargets: RulesetTarget[]\n}\n\nexport type RulesetRoutePayload = {\n  source: Repository | Organization | Enterprise\n  sourceType: SourceType\n  upsellInfo: UpsellInfo\n  currentName?: string\n  ruleset: Ruleset\n  ruleSchemas: RuleSchema[]\n  readOnly?: boolean\n  isHistoryView?: boolean\n  baseAvatarUrl: string\n  supportedConditionTargetObjects: TargetObjectType[]\n  helpUrls?: HelpUrls\n  isImportedRuleset?: boolean\n  isRestoredRuleset?: boolean\n  noRulesets?: boolean\n  initialErrors?: DetailedValidationErrors\n}\n\nexport type InsightsRoutePayload = {\n  source: Repository | Organization | Enterprise\n  sourceType: SourceType\n  upsellInfo?: UpsellInfo\n  rulesets: Ruleset[]\n  repositories?: string[]\n  ruleSuiteRuns: RuleSuite[]\n  visibleResults: Record<number, RuleSuiteResult>\n  branchListCacheKey?: string\n  filter: InsightsFilter\n  hasMoreSuites: boolean\n  readOnly?: boolean\n  learnMoreUrl: string\n  supportedTargets: RulesetTarget[]\n}\n\nexport type HistoryComparisonRoutePayload = {\n  ruleset: Ruleset\n  history: History\n  diffHtml: string\n}\n\nexport type HistorySummaryRoutePayload = {\n  source: Repository | Organization | Enterprise\n  sourceType: SourceType\n  ruleset: Ruleset\n  hasMore: boolean\n  page: number\n  readOnly?: boolean\n}\n\nexport type InsightsFilter = {\n  branch?: string\n  repository?: string\n  actor?: User\n  ruleset?: Ruleset\n  timePeriod?: TimePeriod\n  ruleStatus?: RuleStatus\n  evaluateStatus?: EvaluateStatus\n  page?: number\n}\n\nexport type BypassFilter = {\n  branch?: string\n  repository?: string\n  actor?: User\n  ruleset?: Ruleset\n  timePeriod?: TimePeriod\n  ruleStatus?: RuleStatus\n  page?: number\n}\n\nexport type SetRoutePayload = RulesetRoutePayload & {\n  message: string\n}\n\nexport enum RuleModalState {\n  CREATING = 'creating',\n  EDITING = 'editing',\n  CLOSED = 'closed',\n}\n\nexport type RegisteredRuleSchemaComponent = {\n  rulesetId?: number\n  sourceType: SourceType\n  field: RuleSchema['parameterSchema']['fields'][0]\n  // Once fieldRef is added to all existing registered components, we can make this required\n  fieldRef?: RefObject<HTMLElement | HTMLButtonElement>\n  value: ParameterValue\n  onValueChange?: (value: ParameterValue) => void\n  readOnly?: boolean\n  helpUrls?: HelpUrls\n  metadata?: RuleConfigMetadata\n  errors: ValidationError[]\n}\n\nexport type RegisteredRuleErrorComponent = {\n  // errorId is a unique identifier used to   reference the rule input/target that caused the error,\n  // it should be the same value as the aria-describedby attribute in the input/target element\n  errorId: string\n  // This is used to focus on the rule error\n  errorRef?: RefObject<HTMLDivElement>\n  sourceType: SourceType\n  fields: RuleSchema['parameterSchema']['fields']\n  errors: ValidationError[]\n  rulesetId?: number\n  // Certain errors should link to an element that should be changed in order to fix the error\n  // Use this ref to target that element\n  targetRef?: RefObject<HTMLElement>\n}\n\nexport type RuleConfigMetadata = WorkflowsRuleMetadata | RequiredStatusChecksMetadata | object\n\nexport type WorkflowsRuleMetadata = {\n  workflows: Array<{name: string; path: string; repository?: WorkflowRepository}>\n}\n\nexport type RequiredStatusChecksMetadata = {\n  integrations: Array<{id: number; name: string; preferred_avatar_url?: string}>\n}\n\nexport interface WorkflowRepository extends Repository {\n  refCacheKey: string\n  actionsSharing: boolean\n}\n\nexport type RefType = 'branch' | 'tag'\n\nexport type History = {\n  id: number\n  created_at: string\n  state: string\n  is_current?: boolean\n  updated_by: {\n    id: number\n    display_login: string\n    static_avatar_url: string\n  }\n}\n\nexport type RuleWithSchema = Rule & {schema: RuleSchema}\n","import type {FC} from 'react'\nimport type React from 'react'\nimport type {Rule} from '../types/rules-types'\nimport {RuleModalState} from '../types/rules-types'\nimport {Blankslate} from './Blankslate'\nimport {Box} from '@primer/react'\n\ntype BorderBoxProps = {\n  name?: React.ReactNode\n  rows?: Rule[]\n  condensed?: boolean\n  showHeader?: boolean\n  groupByPattern?: boolean\n  renderCreateButton?(): void\n  renderRow?(row: Rule): JSX.Element\n  renderBlankslate?(): JSX.Element\n  children?: React.ReactNode\n  className?: string\n  headerClassName?: string\n}\n\nexport const BorderBox: FC<BorderBoxProps> = ({\n  name,\n  rows,\n  condensed,\n  showHeader,\n  renderCreateButton,\n  renderRow,\n  renderBlankslate,\n  children,\n  className,\n  headerClassName,\n  ...rest\n}) => {\n  const condensedSx = {\n    py: 2,\n    px: 3,\n  }\n  const creatingModalSx = {\n    padding: 0,\n    border: 0,\n    height: 0,\n  }\n\n  const showBlankslate =\n    rows && (rows?.length === 0 || rows.every(({_modalState}) => _modalState === RuleModalState.CREATING))\n\n  return (\n    <div className={`Box ${className || ''}`} {...rest}>\n      {!showBlankslate && showHeader ? (\n        <Box\n          className={`Box-header d-flex flex-justify-between flex-items-center ${headerClassName || ''}`}\n          sx={{\n            ...(condensed ? condensedSx : {}),\n          }}\n        >\n          <h2 className=\"Box-title\">{name}</h2>\n          {renderCreateButton?.() || null}\n        </Box>\n      ) : null}\n      {rows && renderRow ? (\n        <>\n          <ul>\n            {rows.map(row => (\n              <Box\n                as=\"li\"\n                className=\"Box-row d-flex position-relative\"\n                sx={{\n                  ...(condensed ? condensedSx : {}),\n                  ...(row._modalState === RuleModalState.CREATING ? creatingModalSx : {}),\n                }}\n                key={row.id || row._id}\n              >\n                <div className=\"d-flex flex-1 width-fit\">{renderRow(row)}</div>\n              </Box>\n            ))}\n          </ul>\n          {showBlankslate ? (\n            <Blankslate heading={`No rules have been added yet`}>{renderBlankslate?.()}</Blankslate>\n          ) : null}\n        </>\n      ) : (\n        children\n      )}\n    </div>\n  )\n}\n\ntry{ BorderBox.displayName ||= 'BorderBox' } catch {}","import {useCallback, useRef} from 'react'\nimport {useLocation, resolvePath as reactRouterResolvePath} from 'react-router-dom'\nimport {useNavigate} from '@github-ui/use-navigate'\n\nexport const useRelativeNavigation = () => {\n  const {pathname, search} = useLocation()\n  const params = useRef(new URLSearchParams(search))\n  const reactRouterNavigate = useNavigate()\n\n  const navigate = useCallback(\n    (pathPartial: string, _search?: string, clearExistingParams = true, replace = false) => {\n      if (clearExistingParams) {\n        params.current = new URLSearchParams()\n      }\n      if (_search) {\n        const additionalParams = new URLSearchParams(_search)\n        for (const [key, value] of additionalParams) {\n          if (value === '') {\n            params.current.delete(key)\n          } else {\n            params.current.set(key, value)\n          }\n        }\n      }\n      return reactRouterNavigate(\n        reactRouterResolvePath({pathname: pathPartial, search: params.current.toString()}, pathname),\n        {\n          replace,\n        },\n      )\n    },\n    [reactRouterNavigate, pathname, params],\n  )\n\n  const resolvePath = useCallback(\n    (pathPartial: string) => reactRouterResolvePath({pathname: pathPartial}, pathname).pathname,\n    [pathname],\n  )\n\n  return {\n    pathname,\n    search,\n    params: params.current,\n    navigate,\n    resolvePath,\n  }\n}\n","import type {FC} from 'react'\nimport {useState} from 'react'\nimport type {Repository} from '@github-ui/current-repository'\nimport {RefSelector} from '@github-ui/ref-selector'\nimport {mapRefType, qualifyRef, unqualifyRef} from '@github-ui/ref-utils'\nimport type {RefType} from '@github-ui/ref-utils'\nimport {useRelativeNavigation} from '../hooks/use-relative-navigation'\n\nexport const BranchSelector: FC<{gitRef?: string; repo: Repository; branchListCacheKey: string}> = ({\n  gitRef,\n  repo,\n  branchListCacheKey,\n}) => {\n  const {pathname, navigate} = useRelativeNavigation()\n  const [refType, setRefType] = useState<RefType>(() => 'branch')\n\n  return (\n    <RefSelector\n      currentCommitish={unqualifyRef(gitRef) ?? `All`}\n      defaultBranch={repo.defaultBranch}\n      owner={repo.ownerLogin}\n      repo={repo.name}\n      canCreate={false}\n      cacheKey={branchListCacheKey}\n      selectedRefType={mapRefType(gitRef)}\n      onSelectItem={newRef => navigate(pathname, `ref=${qualifyRef(newRef, refType)}`)}\n      onRefTypeChanged={newRefType => {\n        setRefType(newRefType)\n      }}\n      types={['branch', 'tag']}\n      hideShowAll\n      customFooterItemProps={{\n        text: 'View all rules',\n        onClick: () => {\n          navigate(pathname, 'ref=')\n        },\n        sx: {alignItems: 'center', display: 'flex', justifyContent: 'center'},\n      }}\n    />\n  )\n}\n\ntry{ BranchSelector.displayName ||= 'BranchSelector' } catch {}","import type {FC} from 'react'\nimport {Label} from '@primer/react'\n\ntype SubheadProps = {\n  heading: string\n  description?: string\n  className?: string\n  alphaOrBeta?: string\n  renderAction?: () => JSX.Element | null\n}\n\nexport const Subhead: FC<SubheadProps> = ({heading, description, className, alphaOrBeta, renderAction}) => {\n  return (\n    <div className={`Subhead d-flex flex-justify-between flex-items-center ${className || ''}`}>\n      <div className={'d-flex flex-items-center gap-2'}>\n        <h1 className=\"Subhead-heading f2-light\">{heading}</h1>\n        {alphaOrBeta && (\n          <Label variant=\"success\" sx={{mr: 2}}>\n            {alphaOrBeta}\n          </Label>\n        )}\n        {description ? <p className=\"Subhead-description mb-2\">{description}</p> : null}\n      </div>\n\n      {renderAction && renderAction()}\n    </div>\n  )\n}\n\ntry{ Subhead.displayName ||= 'Subhead' } catch {}","import type {RulesetTarget, TargetObjectType} from '../types/rules-types'\n\nexport const PLURAL_RULESET_TARGETS: {[key in RulesetTarget]: string} = {\n  branch: 'branches',\n  tag: 'tags',\n  push: 'pushes',\n  member_privilege: 'member privileges',\n}\n\nexport const PLURAL_TARGET_OBJECT_TYPES: {[key in TargetObjectType]: string} = {\n  ref: 'refs',\n  repository: 'repositories',\n  organization: 'organizations',\n}\n\nexport const EXAMPLE_CONDITION_TARGET_PATTERNS: {\n  [targetType: string]:\n    | {\n        [rulesetTarget: string]: string[]\n      }\n    | undefined\n} = {\n  ref_name: {\n    branch: ['main', 'releases/**/*', 'users/**/*'],\n    tag: ['*-beta', 'releases/**/*', 'v*'],\n  },\n  repository_name: {\n    branch: ['prod-*', 'test-*'],\n    tag: ['prod-*', 'test-*'],\n  },\n}\n\nexport const TEST_IDS = {\n  metadataRulePanelSpan: 'metadata-span',\n}\n\nexport const TARGET_OBJECT_BY_TYPE = {\n  repository_name: 'repository',\n  repository_id: 'repository',\n  repository_property: 'repository',\n  ref_name: 'ref',\n  organization_name: 'organization',\n  organization_id: 'organization',\n}\nexport const TARGET_OBJECT_TYPES: TargetObjectType[] = ['organization', 'repository', 'ref']\n\nexport const UNKNOWN_REF_NAME = 'refs/__gh__/UNKNOWN'\nexport const PENDING_OID = 'PENDING'\n\nexport const INHERITED_SOURCE_TYPE_ORDER_MAP = {\n  Enterprise: 0,\n  Organization: 1,\n  Upstream: 2,\n  Repository: 3,\n}\n","export function pluralize(\n  count: number,\n  singular: string,\n  pluralStringOrLookup: string | {[singular: string]: string},\n  showCount = true,\n) {\n  let plural: string\n\n  if (typeof pluralStringOrLookup === 'object') {\n    plural = pluralStringOrLookup[singular]!\n  } else {\n    plural = pluralStringOrLookup\n  }\n\n  const text = count === 1 ? singular : plural\n\n  if (!showCount) {\n    return text\n  }\n\n  return count > 100 ? `100+ ${text}` : `${count} ${text}`\n}\n\nexport function capitalize(text: string) {\n  return text[0]!.toUpperCase() + text.slice(1)\n}\n\nexport function humanize(text: string) {\n  return text.replaceAll('_', ' ')\n}\n","import {RulesetEnforcement} from '../types/rules-types'\n\nexport function enforcementLabelText(enforcementLabel: RulesetEnforcement) {\n  switch (enforcementLabel) {\n    case RulesetEnforcement.Enabled:\n      return 'Active'\n    case RulesetEnforcement.Evaluate:\n      return 'Evaluate'\n    case RulesetEnforcement.Disabled:\n      return 'Disabled'\n  }\n}\n","import {Box, Octicon, Text} from '@primer/react'\nimport {MeterIcon, SkipIcon, PlayIcon, NoEntryIcon} from '@primer/octicons-react'\nimport type {UpsellInfo} from '../types/rules-types'\nimport {RulesetEnforcement} from '../types/rules-types'\nimport {enforcementLabelText} from '../helpers/enforcement-label'\n\nexport function EnforcementIcon({\n  upsellInfo,\n  hideText,\n  enforcement,\n}: {\n  upsellInfo?: UpsellInfo\n  hideText?: boolean\n  enforcement: RulesetEnforcement\n}) {\n  let text = ''\n  let icon: JSX.Element | null = null\n\n  if (\n    upsellInfo &&\n    ((!upsellInfo.rulesets.featureEnabled && enforcement !== RulesetEnforcement.Disabled) ||\n      (!upsellInfo.enterpriseRulesets.featureEnabled && enforcement === RulesetEnforcement.Evaluate))\n  ) {\n    text = 'Not enforced'\n    icon = <Octicon icon={NoEntryIcon} sx={{marginRight: 1, color: 'attention.fg'}} aria-label=\"Not enforced\" />\n  } else {\n    switch (enforcement) {\n      case RulesetEnforcement.Enabled:\n        text = enforcementLabelText(enforcement)\n        icon = (\n          <Octicon\n            icon={PlayIcon}\n            sx={{marginRight: 1, color: 'success.fg'}}\n            aria-label={enforcementLabelText(enforcement)}\n          />\n        )\n        break\n      case RulesetEnforcement.Evaluate:\n        text = enforcementLabelText(enforcement)\n        icon = (\n          <Octicon\n            icon={MeterIcon}\n            sx={{marginRight: 1, color: 'severe.fg'}}\n            aria-label={enforcementLabelText(enforcement)}\n          />\n        )\n        break\n      default:\n        text = enforcementLabelText(enforcement)\n        icon = (\n          <Octicon\n            icon={SkipIcon}\n            sx={{marginRight: 1, color: 'fg.muted'}}\n            aria-label={enforcementLabelText(enforcement)}\n          />\n        )\n        break\n    }\n  }\n\n  return hideText ? (\n    icon\n  ) : (\n    <Box\n      as=\"span\"\n      sx={{\n        alignItems: 'center',\n        display: 'inline-flex',\n        backgroundColor: 'neutral.subtle',\n        borderRadius: 2,\n        paddingLeft: 1,\n        paddingRight: 2,\n        paddingY: 1,\n      }}\n    >\n      {icon}\n      <Text sx={{fontSize: 0, fontWeight: 'bold'}}>{text}</Text>\n    </Box>\n  )\n}\n\ntry{ EnforcementIcon.displayName ||= 'EnforcementIcon' } catch {}","import {verifiedFetchJSON} from '@github-ui/verified-fetch'\n\nexport async function downloadRuleset(url: string, rulesetName: string) {\n  try {\n    const fetchedJson = await verifiedFetchJSON(url, {method: 'GET'})\n    const json = await fetchedJson.json()\n    if (Object.keys(json).length === 0) return\n    const jsonString = JSON.stringify(json, null, 2)\n\n    const blob = new Blob([jsonString], {type: 'text/json'})\n    const fileName = `${rulesetName}.json`\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const nav = window.navigator as any\n    if (nav.msSaveOrOpenBlob) {\n      // Manage IE11+ & Edge\n      nav.msSaveOrOpenBlob(blob, fileName)\n    } else {\n      const downloadLink = document.createElement('a')\n      downloadLink.href = URL.createObjectURL(blob)\n      downloadLink.download = fileName\n      downloadLink.click()\n      URL.revokeObjectURL(downloadLink.href)\n    }\n  } catch {\n    throw new Error('Error exporting ruleset')\n  }\n}\n","import {Box, Button, Dialog} from '@primer/react'\n\nexport function DangerConfirmationDialog({\n  isOpen,\n  title,\n  text,\n  buttonText,\n  onDismiss,\n  onConfirm,\n}: {\n  isOpen: boolean\n  title: string\n  text: string\n  buttonText: string\n  onDismiss: () => void\n  onConfirm: () => void\n}) {\n  return (\n    <Dialog isOpen={isOpen} onDismiss={onDismiss}>\n      <Dialog.Header>{title}</Dialog.Header>\n      <Box sx={{p: 3}}>\n        <span>{text}</span>\n        <Box sx={{display: 'flex', justifyContent: 'flex-end', mt: 3}}>\n          <Button type=\"button\" onClick={onDismiss}>\n            Cancel\n          </Button>\n          <Button type=\"button\" variant=\"danger\" onClick={onConfirm} sx={{ml: 2}}>\n            {buttonText}\n          </Button>\n        </Box>\n      </Box>\n    </Dialog>\n  )\n}\n\ntry{ DangerConfirmationDialog.displayName ||= 'DangerConfirmationDialog' } catch {}","import type {FC} from 'react'\nimport {useState} from 'react'\nimport {ActionList, IconButton, Label} from '@primer/react'\nimport {DownloadIcon, GraphIcon, HistoryIcon, PulseIcon, TrashIcon} from '@primer/octicons-react'\nimport {Link} from '@github-ui/react-core/link'\nimport {downloadRuleset} from '../helpers/export-ruleset'\nimport type {Ruleset} from '../types/rules-types'\nimport {RulesetEnforcement} from '../types/rules-types'\nimport {useRelativeNavigation} from '../hooks/use-relative-navigation'\nimport {useIsStafftools} from '../hooks/use-is-stafftools'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport {DangerConfirmationDialog} from './ruleset/DangerConfirmationDialog'\nimport sudo from '@github-ui/sudo'\nimport type {FlashAlert} from '@github-ui/dismissible-flash'\n\nexport const RulesetActionMenu: FC<{\n  ruleset: Ruleset\n  rulesetsUrl: string\n  isRestored?: boolean\n  insightsEnabled: boolean\n  showDeleteAction: boolean\n  readOnly?: boolean\n  rulesHistory: boolean\n  rulesImportExport: boolean\n  enterpriseEnabled: boolean\n  setFlashAlert: (flashAlert: FlashAlert) => void\n  setMenuOpen: (menuOpen: boolean) => void\n}> = ({\n  ruleset,\n  rulesetsUrl,\n  isRestored,\n  insightsEnabled,\n  showDeleteAction,\n  readOnly,\n  rulesHistory,\n  rulesImportExport,\n  enterpriseEnabled,\n  setFlashAlert,\n  setMenuOpen,\n}) => {\n  const isStafftools = useIsStafftools()\n  const viewHistory = rulesHistory && (isStafftools || (!isStafftools && !readOnly && enterpriseEnabled))\n\n  return (\n    <ActionList>\n      {viewHistory && (\n        <ActionList.LinkItem\n          as={Link}\n          aria-label={`View history for the ruleset named ${ruleset.name}`}\n          to={`${rulesetsUrl}/${ruleset.id}/history`}\n          className=\"text-decoration-skip\"\n        >\n          <ActionList.LeadingVisual>\n            <HistoryIcon size={16} />\n          </ActionList.LeadingVisual>\n          History\n          <ActionList.TrailingVisual>\n            <Label variant=\"success\">Beta</Label>\n          </ActionList.TrailingVisual>\n        </ActionList.LinkItem>\n      )}\n      <InsightsLink\n        ruleset={ruleset}\n        rulesetsUrl={rulesetsUrl}\n        insightsEnabled={insightsEnabled}\n        readOnly={readOnly}\n        rulesHistory={rulesHistory}\n        rulesImportExport={rulesImportExport}\n      />\n      {rulesImportExport && (!readOnly || isStafftools) && (\n        <ActionList.LinkItem\n          download={`${ruleset.name}.json`}\n          target=\"_self\"\n          onClick={async () => {\n            if (isRestored) {\n              setMenuOpen(false)\n              // To reduce confusion on what is being exported during restoration,\n              // don't allow exporting a ruleset while restoring.\n              setFlashAlert({\n                variant: 'danger',\n                message: 'Cannot export a ruleset while restoring. Save or cancel and try again.',\n              })\n            } else {\n              try {\n                await downloadRuleset(`${rulesetsUrl}/${ruleset.id}/export_ruleset`, ruleset.name)\n              } catch {\n                setMenuOpen(false)\n                setFlashAlert({\n                  variant: 'danger',\n                  message: 'Error exporting ruleset',\n                })\n              }\n            }\n          }}\n          sx={{textDecoration: 'none', whiteSpace: 'nowrap'}}\n        >\n          <ActionList.LeadingVisual>\n            <DownloadIcon size={16} />\n          </ActionList.LeadingVisual>\n          Export ruleset\n          <ActionList.TrailingVisual>\n            <Label variant=\"success\">Beta</Label>\n          </ActionList.TrailingVisual>\n        </ActionList.LinkItem>\n      )}\n      {!readOnly && !isStafftools && (\n        <DeleteAction\n          deletePath={`${rulesetsUrl}/${ruleset.id}`}\n          redirectPath={rulesetsUrl}\n          isRestored={isRestored}\n          showDeleteAction={showDeleteAction}\n          setFlashAlert={setFlashAlert}\n          setMenuOpen={setMenuOpen}\n        />\n      )}\n    </ActionList>\n  )\n}\n\nexport const InsightsLink: FC<{\n  ruleset: Ruleset\n  rulesetsUrl: string\n  insightsEnabled: boolean\n  readOnly?: boolean\n  rulesHistory: boolean\n  rulesImportExport: boolean\n}> = ({ruleset, rulesetsUrl, insightsEnabled, readOnly, rulesHistory, rulesImportExport}) => {\n  const key = ruleset.source.type\n  const isStafftools = useIsStafftools()\n\n  if (\n    (!readOnly || isStafftools) &&\n    ruleset.enforcement !== RulesetEnforcement.Disabled &&\n    key === 'Repository' &&\n    insightsEnabled\n  ) {\n    return rulesHistory || rulesImportExport ? (\n      <ActionList.LinkItem\n        as={Link}\n        aria-label={`View insights for the ruleset named ${ruleset.name}`}\n        to={`${rulesetsUrl}/insights?ruleset=${ruleset.name}`}\n        className=\"text-decoration-skip\"\n      >\n        <ActionList.LeadingVisual>\n          <GraphIcon size={16} />\n        </ActionList.LeadingVisual>\n        Insights\n      </ActionList.LinkItem>\n    ) : (\n      <IconButton\n        as={Link}\n        aria-label={`View insights for the ruleset named ${ruleset.name}`}\n        variant=\"invisible\"\n        icon={PulseIcon}\n        to={`insights?ruleset=${ruleset.name}`}\n        reloadDocument\n      />\n    )\n  }\n\n  return null\n}\n\nconst DeleteAction: FC<{\n  deletePath: string\n  redirectPath?: string\n  isRestored?: boolean\n  showDeleteAction: boolean\n  setFlashAlert: (flashAlert: FlashAlert) => void\n  setMenuOpen: (menuOpen: boolean) => void\n}> = ({deletePath, redirectPath, isRestored, showDeleteAction, setFlashAlert, setMenuOpen}) => {\n  const {navigate} = useRelativeNavigation()\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false)\n\n  const deleteRuleset = async () => {\n    if (!(await sudo())) {\n      setMenuOpen(false)\n      setFlashAlert({\n        variant: 'danger',\n        message: 'Unauthorized',\n      })\n      return\n    }\n\n    try {\n      const res = await verifiedFetch(deletePath, {\n        method: 'delete',\n      })\n      if (res.ok) {\n        setShowDeleteDialog(false)\n        if (redirectPath) navigate(redirectPath, undefined, true, true)\n      } else {\n        setMenuOpen(false)\n        setFlashAlert({\n          variant: 'danger',\n          message: 'Error deleting ruleset',\n        })\n      }\n    } catch (e) {\n      setMenuOpen(false)\n      setFlashAlert({\n        variant: 'danger',\n        message: 'Error deleting ruleset',\n      })\n    }\n  }\n\n  return showDeleteAction ? (\n    <>\n      <ActionList.Item\n        variant=\"danger\"\n        onSelect={e => {\n          if (isRestored) {\n            setMenuOpen(false)\n            // To reduce confusion on what is being deleted during restoration,\n            // don't allow deleting a ruleset while restoring.\n            setFlashAlert({\n              variant: 'danger',\n              message: 'Cannot delete a ruleset while restoring. Save or cancel and try again.',\n            })\n          } else if (setShowDeleteDialog) setShowDeleteDialog(true)\n          e.preventDefault()\n        }}\n      >\n        <ActionList.LeadingVisual>\n          <TrashIcon size={16} />\n        </ActionList.LeadingVisual>\n        Delete ruleset\n      </ActionList.Item>\n      <DangerConfirmationDialog\n        isOpen={showDeleteDialog}\n        title=\"Delete ruleset?\"\n        text=\"Are you sure you want to delete this ruleset? This action cannot be undone.\"\n        buttonText=\"Delete\"\n        onDismiss={() => {\n          setShowDeleteDialog(false)\n        }}\n        onConfirm={deleteRuleset}\n      />\n    </>\n  ) : null\n}\n","import {\n  orgRulesetsTargetCountPath,\n  stafftoolsOrgRulesetsTargetCountPath,\n  repoRulesetsTargetCountPath,\n  stafftoolsRepoRulesetsTargetCountPath,\n} from '@github-ui/paths'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {useState, useEffect} from 'react'\nimport type {Ruleset, SourceType} from '../types/rules-types'\nimport {useFeatureFlag} from '@github-ui/react-core/use-feature-flag'\nimport type {Repository} from '@github-ui/current-repository'\nimport type {Organization} from '@github-ui/repos-types'\nimport {useIsStafftools} from './use-is-stafftools'\n\ntype RulesetPreviewCount = Record<string, number>\ntype RulesetPreviewSamples = Record<string, string[]>\ntype RulesetPreviewErrors = Record<string, string>\n\ninterface RulesetsTargetPreviewDataRow {\n  rulesetId: number\n  count: number\n  sampleTargetNames?: string[]\n  errorMessage?: string\n}\n\ninterface RulesetsTargetPreviewData {\n  preview: RulesetsTargetPreviewDataRow[]\n}\n\nconst BATCHSIZE = 10\n\nfunction dataProcessor<T extends keyof RulesetsTargetPreviewDataRow>(\n  data: RulesetsTargetPreviewData,\n  propertyName: T,\n): Record<string, Required<RulesetsTargetPreviewDataRow>[T]> {\n  if (!data?.preview) return {}\n\n  const entries = data.preview\n    .filter(item => item[propertyName] !== undefined)\n    .map(item => [item.rulesetId, item[propertyName]])\n\n  return Object.fromEntries(entries)\n}\n\nfunction processRulesets<T>(\n  rulesets: Ruleset[],\n  isCorrectType: (matches: Ruleset['matches']) => boolean,\n  processFn: (matches: Ruleset['matches']) => T,\n): Record<string, T> {\n  return rulesets\n    .filter(ruleset => {\n      return isCorrectType(ruleset.matches)\n    })\n    .reduce(\n      (acc, ruleset) => {\n        return {...acc, [ruleset.id]: processFn(ruleset.matches)}\n      },\n      {} as Record<string, T>,\n    )\n}\n\nexport function useTargetCount(\n  source: Repository | Organization,\n  sourceType: SourceType,\n  rulesets: Ruleset[],\n  batchSize = BATCHSIZE,\n): {\n  rulesetPreviewCounts: RulesetPreviewCount\n  rulesetPreviewSamples: RulesetPreviewSamples\n  rulesetPreviewErrors: RulesetPreviewErrors\n} {\n  const rulesAsyncPreview = useFeatureFlag('property_ruleset_async_preview')\n\n  const [rulesetPreviewCounts, setRulesetPreviewCount] = useState(() =>\n    processRulesets(\n      rulesets,\n      matches => Array.isArray(matches),\n      matches => (matches as string[]).length,\n    ),\n  )\n  const [rulesetPreviewSamples, setRulesetPreviewSamples] = useState(() =>\n    processRulesets(\n      rulesets,\n      matches => Array.isArray(matches),\n      matches => (matches as string[]).slice(0, 10),\n    ),\n  )\n  const [rulesetPreviewErrors, setRulesetPreviewErrors] = useState(() =>\n    processRulesets(\n      rulesets,\n      matches => typeof matches === 'string' && matches !== '',\n      matches => matches as string,\n    ),\n  )\n\n  const isStafftools = useIsStafftools()\n\n  useEffect(() => {\n    async function fetchAllInBatches(\n      items: Ruleset[],\n      url: string,\n      {itemsPerGroup = batchSize}: {itemsPerGroup?: number} = {},\n    ) {\n      for (let i = 0; i < items.length; i += itemsPerGroup) {\n        const batchIds = items.slice(i, i + itemsPerGroup).map(r => r.id)\n        try {\n          if (cancelled) {\n            return\n          }\n          const result = await verifiedFetchJSON(url, {body: {ruleset_ids: batchIds}, method: 'POST'})\n          const data = (await result.json()) as RulesetsTargetPreviewData\n          setRulesetPreviewCount(prev => ({...prev, ...dataProcessor(data, 'count')}))\n          setRulesetPreviewSamples(prev => ({\n            ...prev,\n            ...dataProcessor(data, 'sampleTargetNames'),\n          }))\n          setRulesetPreviewErrors(prev => ({\n            ...prev,\n            ...dataProcessor(data, 'errorMessage'),\n          }))\n        } catch (error) {\n          return {}\n        }\n      }\n    }\n\n    async function fetchAllSingleBatch(items: Ruleset[], url: string) {\n      fetchAllInBatches(items, url, {itemsPerGroup: items.length})\n    }\n\n    let cancelled = false\n    const rulesetsToFetch = rulesets.filter(ruleset => !ruleset.matches)\n\n    async function fetchOrgLevelPreviews(organization: Organization) {\n      const url = isStafftools\n        ? stafftoolsOrgRulesetsTargetCountPath({owner: organization.name})\n        : orgRulesetsTargetCountPath({owner: organization.name})\n      const [propertyRulesets, nonPropertyRulesets] = partition(rulesetsToFetch, ruleset =>\n        ruleset.conditions.some(condition => condition.target === 'repository_property'),\n      )\n\n      if (nonPropertyRulesets.length > 0) {\n        await fetchAllSingleBatch(nonPropertyRulesets, url)\n      }\n      if (propertyRulesets.length > 0) {\n        await fetchAllInBatches(propertyRulesets, url)\n      }\n    }\n\n    async function fetchRepoLevelPreviews(repository: Repository) {\n      const url = isStafftools\n        ? stafftoolsRepoRulesetsTargetCountPath({owner: repository.ownerLogin, repo: repository.name})\n        : repoRulesetsTargetCountPath({owner: repository.ownerLogin, repo: repository.name})\n      await fetchAllSingleBatch(rulesetsToFetch, url)\n    }\n\n    if (rulesAsyncPreview) {\n      switch (sourceType) {\n        case 'organization':\n          fetchOrgLevelPreviews(source as Organization)\n          break\n        case 'repository':\n          fetchRepoLevelPreviews(source as Repository)\n          break\n      }\n    }\n\n    return function cancel() {\n      cancelled = true\n    }\n  }, [rulesAsyncPreview, sourceType, source, batchSize, rulesets, isStafftools])\n\n  return {rulesetPreviewCounts, rulesetPreviewSamples, rulesetPreviewErrors}\n}\n\ntype Predicate<T> = (item: T) => boolean\n\nfunction partition<T>(items: T[], condition: Predicate<T>): [T[], T[]] {\n  const positive: T[] = []\n  const negative: T[] = []\n\n  for (const item of items) {\n    if (condition(item)) {\n      positive.push(item)\n    } else {\n      negative.push(item)\n    }\n  }\n\n  return [positive, negative]\n}\n","import {useState, type FC} from 'react'\nimport type {Ruleset, SourceType, UpsellInfo} from '../types/rules-types'\nimport {RulesetEnforcement} from '../types/rules-types'\nimport {AlertIcon, KebabHorizontalIcon} from '@primer/octicons-react'\nimport {ActionMenu, IconButton} from '@primer/react'\nimport {useFeatureFlag} from '@github-ui/react-core/use-feature-flag'\n\nimport {PLURAL_RULESET_TARGETS} from '../helpers/constants'\nimport {capitalize, humanize, pluralize} from '../helpers/string'\nimport {Link} from '@github-ui/react-core/link'\nimport {useRelativeNavigation} from '../hooks/use-relative-navigation'\nimport {EnforcementIcon} from './EnforcementIcon'\nimport {InsightsLink, RulesetActionMenu} from './RulesetActionMenu'\nimport {useIsStafftools} from '../hooks/use-is-stafftools'\nimport type {FlashAlert} from '@github-ui/dismissible-flash'\n\nimport {useTargetCount} from '../hooks/use-target-count'\nimport type {Repository} from '@github-ui/current-repository'\nimport type {Organization} from '@github-ui/repos-types'\n\nconst RulesetListHelper: FC<{\n  ruleset: Ruleset\n  upsellInfo: UpsellInfo\n  sourceType: SourceType\n  readOnly?: boolean\n  setFlashAlert: (flashAlert: FlashAlert) => void\n  rulesetTargetCount: number | undefined\n}> = ({ruleset, upsellInfo, sourceType, readOnly, setFlashAlert, rulesetTargetCount}) => {\n  const rulesHistory = useFeatureFlag('rules_history')\n  const rulesImportExport = useFeatureFlag('rules_import_export')\n  const {search, resolvePath} = useRelativeNavigation()\n  const key = ruleset.source.type\n  const isStafftools = useIsStafftools()\n  const [menuOpen, setMenuOpen] = useState(false)\n\n  return (\n    <>\n      {(rulesHistory || rulesImportExport) && (\n        <div className=\"align-center\">\n          <EnforcementIcon upsellInfo={upsellInfo} hideText={true} enforcement={ruleset.enforcement} />\n        </div>\n      )}\n      <div className=\"d-flex flex-column\">\n        <div className=\"f5 text-bold\">\n          <Link className=\"color-fg-default\" to={{pathname: resolvePath(`${ruleset.id}`), search}}>\n            {ruleset.name}\n          </Link>\n        </div>\n        {rulesHistory || rulesImportExport ? (\n          <div className=\"d-flex flex-row my-1\">\n            <span className=\"text-small color-fg-muted mr-1\">\n              <Subtext ruleset={ruleset} sourceType={sourceType} targetCount={rulesetTargetCount} />\n            </span>\n          </div>\n        ) : (\n          <div className=\"d-flex flex-row my-1 text-small color-fg-muted flex-items-center gap-1\">\n            <EnforcementIcon upsellInfo={upsellInfo} enforcement={ruleset.enforcement} />\n            <Subtext ruleset={ruleset} sourceType={sourceType} targetCount={rulesetTargetCount} />\n          </div>\n        )}\n        <MissingConditionAlert ruleset={ruleset} />\n      </div>\n      {(rulesHistory || rulesImportExport) && (isStafftools || !readOnly) && key === 'Repository' ? (\n        <div className=\"ml-auto d-flex flex-items-center\">\n          <ActionMenu open={menuOpen} onOpenChange={() => setMenuOpen(!menuOpen)}>\n            <ActionMenu.Anchor>\n              <IconButton\n                icon={KebabHorizontalIcon}\n                size=\"small\"\n                variant=\"invisible\"\n                className=\"color-fg-muted align-center\"\n                aria-label=\"Ruleset menu\"\n              />\n            </ActionMenu.Anchor>\n            <ActionMenu.Overlay>\n              <RulesetActionMenu\n                ruleset={ruleset}\n                rulesetsUrl={resolvePath('')}\n                insightsEnabled={upsellInfo.enterpriseRulesets.featureEnabled}\n                showDeleteAction={rulesHistory || rulesImportExport}\n                readOnly={readOnly}\n                rulesHistory={rulesHistory}\n                rulesImportExport={rulesImportExport}\n                enterpriseEnabled={upsellInfo.enterpriseRulesets.featureEnabled}\n                setFlashAlert={setFlashAlert}\n                setMenuOpen={setMenuOpen}\n              />\n            </ActionMenu.Overlay>\n          </ActionMenu>\n        </div>\n      ) : (\n        <div className=\"d-flex flex-items-center gap-2\">\n          <InsightsLink\n            ruleset={ruleset}\n            rulesetsUrl={resolvePath('')}\n            insightsEnabled={upsellInfo.enterpriseRulesets.featureEnabled}\n            readOnly={readOnly}\n            rulesHistory={rulesHistory}\n            rulesImportExport={rulesImportExport}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n\nexport const RulesetList: FC<{\n  rulesets: Ruleset[]\n  upsellInfo: UpsellInfo\n  sourceType: SourceType\n  source: Repository | Organization\n  readOnly?: boolean\n  setFlashAlert: (flashAlert: FlashAlert) => void\n}> = ({rulesets, upsellInfo, sourceType, source, readOnly, setFlashAlert}) => {\n  const rulesHistory = useFeatureFlag('rules_history')\n  const rulesImportExport = useFeatureFlag('rules_import_export')\n\n  const {rulesetPreviewCounts} = useTargetCount(source, sourceType, rulesets)\n\n  const rulesetListHelper = (ruleset: Ruleset) => (\n    <RulesetListHelper\n      ruleset={ruleset}\n      upsellInfo={upsellInfo}\n      sourceType={sourceType}\n      readOnly={readOnly}\n      setFlashAlert={setFlashAlert}\n      rulesetTargetCount={rulesetPreviewCounts[ruleset.id]}\n    />\n  )\n\n  return (\n    <ul>\n      {rulesets.map((ruleset: Ruleset) => (\n        <li key={ruleset.id} className=\"Box-row d-flex px-3 py-2 flex-justify-between flex-items-center\">\n          {rulesHistory || rulesImportExport ? (\n            <div className={`d-flex flex-row width-full`}>{rulesetListHelper(ruleset)}</div>\n          ) : (\n            rulesetListHelper(ruleset)\n          )}\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nconst Subtext: FC<{ruleset: Ruleset; sourceType: SourceType; targetCount: number | undefined}> = ({\n  ruleset,\n  sourceType,\n  targetCount,\n}) => {\n  const ruleString = pluralize(\n    ruleset.rules.length,\n    `${humanize(ruleset.target)} rule`,\n    `${humanize(ruleset.target)} rules`,\n  )\n\n  let targetString\n  if (targetCount === undefined) {\n    targetString = undefined\n  } else if (sourceType === 'enterprise') {\n    targetString = pluralize(targetCount, 'organization', 'organizations')\n  } else if (sourceType === 'organization') {\n    targetString = pluralize(targetCount, 'repository', 'repositories')\n  } else if (sourceType === 'repository') {\n    targetString =\n      ruleset.target !== 'push'\n        ? pluralize(targetCount, humanize(ruleset.target), PLURAL_RULESET_TARGETS)\n        : 'all pushes'\n  }\n\n  return <span>{`${ruleString}${targetString ? ' • targeting ' : ''}${targetString || ''}`}</span>\n}\n\nconst MissingConditionAlert: FC<{\n  ruleset: Ruleset\n}> = ({ruleset}) => {\n  if (ruleset.target === 'push') {\n    return null\n  }\n\n  if (ruleset.missingConditionTargets.length > 0 && ruleset.enforcement === RulesetEnforcement.Enabled) {\n    let message = ''\n    const firstMissing = ruleset.missingConditionTargets[0]!\n    if (firstMissing === 'ref') {\n      message = `${capitalize(ruleset.target)} conditions missing`\n    } else {\n      message = `${capitalize(firstMissing)} conditions missing`\n    }\n    return (\n      <div className=\"text-small color-fg-danger mt-1\">\n        <AlertIcon size=\"small\" />\n        <span> </span>\n        <em>{message}</em>\n      </div>\n    )\n  }\n\n  return null\n}\n\ntry{ Subtext.displayName ||= 'Subtext' } catch {}","import type {FC} from 'react'\nimport {useRef, useState} from 'react'\nimport type {ButtonProps} from '@primer/react'\nimport {Button, ButtonGroup, IconButton, ActionMenu, ActionList, Label, Box} from '@primer/react'\nimport {TriangleDownIcon} from '@primer/octicons-react'\nimport {Link} from '@github-ui/react-core/link'\n\nexport type ComboButtonAction =\n  | {\n      text: string\n      onClick: () => void\n      href?: never\n      reloadDocument?: never\n    }\n  | {\n      text: string\n      onClick?: () => void\n      href: string\n      reloadDocument?: boolean\n    }\n\ntype ComboButtonProps = {\n  actions?: ComboButtonAction[]\n  ariaLabel: string\n}\n\nconst ButtonOrLinkButton: FC<ComboButtonAction & Pick<ButtonProps, 'variant'>> = ({text, href, ...props}) => {\n  if (href) {\n    return (\n      <Button type=\"button\" as={Link} to={href} {...props}>\n        {text}\n      </Button>\n    )\n  }\n\n  return (\n    <Button type=\"button\" {...props}>\n      {text}\n    </Button>\n  )\n}\n\nexport const ComboButton: FC<ComboButtonProps> = ({actions, ariaLabel}) => {\n  const buttonGroupRef = useRef<HTMLDivElement>(null)\n  const [isButtonGroupMenuOpen, setButtonGroupMenuOpen] = useState(false)\n\n  if (actions?.length === 1) {\n    return <ButtonOrLinkButton {...actions[0]!} />\n  }\n\n  if ((actions?.length || 0) > 1) {\n    return (\n      <>\n        <ButtonGroup ref={buttonGroupRef} className=\"my-2\">\n          <ButtonOrLinkButton {...actions![0]!} variant=\"primary\" />\n          <IconButton\n            aria-expanded={isButtonGroupMenuOpen}\n            variant=\"primary\"\n            icon={TriangleDownIcon}\n            onClick={() => setButtonGroupMenuOpen(prev => !prev)}\n            aria-label={ariaLabel}\n          />\n        </ButtonGroup>\n\n        <ActionMenu anchorRef={buttonGroupRef} open={isButtonGroupMenuOpen} onOpenChange={setButtonGroupMenuOpen}>\n          <ActionMenu.Overlay>\n            <ActionList>\n              {actions!.slice(1).map(action => {\n                if (action.href) {\n                  return (\n                    <ActionList.LinkItem {...action} as={Link} key={action.text} to={action.href}>\n                      <Box sx={{whiteSpace: 'nowrap', overflow: 'hidden'}}>{action.text}</Box>\n                      {action.text === 'New push ruleset' && (\n                        <ActionList.TrailingVisual>\n                          <Label variant=\"success\">Beta</Label>\n                        </ActionList.TrailingVisual>\n                      )}\n                    </ActionList.LinkItem>\n                  )\n                }\n\n                return (\n                  <ActionList.Item key={action.text} onSelect={action.onClick}>\n                    {action.text}\n                  </ActionList.Item>\n                )\n              })}\n            </ActionList>\n          </ActionMenu.Overlay>\n        </ActionMenu>\n      </>\n    )\n  }\n\n  return null\n}\n\ntry{ ButtonOrLinkButton.displayName ||= 'ButtonOrLinkButton' } catch {}\ntry{ ComboButton.displayName ||= 'ComboButton' } catch {}","import {useState, type FC} from 'react'\nimport {RulesetEnforcement, type RulesetTarget} from '../types/rules-types'\nimport type {ComboButtonAction} from './ComboButton'\nimport {ComboButton} from './ComboButton'\nimport {useFeatureFlag} from '@github-ui/react-core/use-feature-flag'\nimport {ActionList, ActionMenu, Button, Box, Label} from '@primer/react'\nimport {Link} from '@github-ui/react-core/link'\nimport {useJsonUpload} from '../hooks/use-json-upload'\nimport {useRelativeNavigation} from '../hooks/use-relative-navigation'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport type {BetterSystemStyleObject} from '@primer/react/lib-esm/sx'\nimport {TriangleDownIcon} from '@primer/octicons-react'\nimport type {FlashAlert} from '@github-ui/dismissible-flash'\n\ntype NewRulesetButtonProps = {\n  rulesetsUrl: string\n  reloadDocument?: boolean\n  defaultEnforcement?: RulesetEnforcement\n  sx?: BetterSystemStyleObject\n  setFlashAlert: (flashAlert: FlashAlert) => void\n  supportedTargets: RulesetTarget[]\n}\n\nexport const NewRulesetButton: FC<NewRulesetButtonProps> = ({\n  rulesetsUrl,\n  reloadDocument,\n  sx,\n  defaultEnforcement = RulesetEnforcement.Disabled,\n  setFlashAlert = () => {},\n  supportedTargets,\n}) => {\n  const pushRulesetsEnabled = useFeatureFlag('push_rulesets')\n  const rulesImportExport = useFeatureFlag('rules_import_export')\n  const memberPrivilegeRulesetsEnabled = useFeatureFlag('member_privilege_rulesets')\n  const {navigate} = useRelativeNavigation()\n  const [menuOpen, setMenuOpen] = useState(false)\n\n  const actions: ComboButtonAction[] = []\n\n  if (supportedTargets.includes('branch')) {\n    actions.push({\n      text: 'New branch ruleset',\n      href: `${rulesetsUrl}new?target=branch&enforcement=${defaultEnforcement}`,\n      reloadDocument,\n    })\n  }\n\n  if (supportedTargets.includes('tag')) {\n    actions.push({\n      text: 'New tag ruleset',\n      href: `${rulesetsUrl}new?target=tag&enforcement=${defaultEnforcement}`,\n      reloadDocument,\n    })\n  }\n\n  if (supportedTargets.includes('member_privilege')) {\n    actions.push({\n      text: 'New policy',\n      href: `${rulesetsUrl}new?target=member_privilege&enforcement=${defaultEnforcement}`,\n      reloadDocument,\n    })\n  }\n\n  if (supportedTargets.includes('push') && pushRulesetsEnabled) {\n    actions.push({\n      text: 'New push ruleset',\n      href: `${rulesetsUrl}new?target=push&enforcement=${defaultEnforcement}`,\n      reloadDocument,\n    })\n  }\n\n  const jsonUploadUtil = useJsonUpload()\n\n  return rulesImportExport ? (\n    <Box sx={{...sx, display: 'flex'}}>\n      <ActionMenu open={menuOpen} onOpenChange={() => setMenuOpen(!menuOpen)}>\n        <ActionMenu.Anchor>\n          <Button variant=\"primary\" trailingAction={TriangleDownIcon}>\n            {memberPrivilegeRulesetsEnabled && supportedTargets.includes('member_privilege')\n              ? 'New policy'\n              : 'New ruleset'}\n          </Button>\n        </ActionMenu.Anchor>\n        <ActionMenu.Overlay>\n          <ActionList>\n            {supportedTargets.includes('branch') && (\n              <ActionList.LinkItem\n                as={Link}\n                to={`${rulesetsUrl}new?target=branch&enforcement=${encodeURI(defaultEnforcement)}`}\n                className=\"text-decoration-skip\"\n              >\n                New branch ruleset\n              </ActionList.LinkItem>\n            )}\n            {supportedTargets.includes('tag') && (\n              <ActionList.LinkItem\n                as={Link}\n                to={`${rulesetsUrl}new?target=tag&enforcement=${defaultEnforcement}`}\n                className=\"text-decoration-skip\"\n              >\n                New tag ruleset\n              </ActionList.LinkItem>\n            )}\n            {pushRulesetsEnabled && supportedTargets.includes('push') && (\n              <ActionList.LinkItem\n                as={Link}\n                className=\"text-decoration-skip\"\n                to={`${rulesetsUrl}new?target=push&enforcement=${defaultEnforcement}`}\n              >\n                <Box sx={{whiteSpace: 'nowrap', overflow: 'hidden'}}>New push ruleset</Box>\n                <ActionList.TrailingVisual>\n                  <Label variant=\"success\">Beta</Label>\n                </ActionList.TrailingVisual>\n              </ActionList.LinkItem>\n            )}\n            {memberPrivilegeRulesetsEnabled && supportedTargets.includes('member_privilege') && (\n              <ActionList.LinkItem\n                as={Link}\n                className=\"text-decoration-skip\"\n                to={`${rulesetsUrl}new?target=member_privilege&enforcement=${defaultEnforcement}`}\n              >\n                <Box sx={{whiteSpace: 'nowrap', overflow: 'hidden'}}>New policy</Box>\n                <ActionList.TrailingVisual>\n                  <Label variant=\"success\">Beta</Label>\n                </ActionList.TrailingVisual>\n              </ActionList.LinkItem>\n            )}\n            <ActionList.Divider />\n            <ActionList.Item\n              as=\"button\"\n              onSelect={jsonUploadUtil.handleUploadIntent}\n              disabled={jsonUploadUtil.isUploading}\n            >\n              Import a ruleset\n              <ActionList.TrailingVisual>\n                <Label variant=\"success\">Beta</Label>\n              </ActionList.TrailingVisual>\n            </ActionList.Item>\n            <input\n              hidden\n              ref={jsonUploadUtil.inputRef}\n              type=\"file\"\n              accept=\".json\"\n              onChange={async event => {\n                try {\n                  const importedRuleset = await jsonUploadUtil.handleUpload(event.target.files)\n                  if (!importedRuleset) {\n                    throw new Error('Cannot import an empty ruleset')\n                  }\n                  const navigationResult = await verifiedFetchJSON(\n                    `${rulesetsUrl}new?imported_ruleset=${encodeURIComponent(importedRuleset)}`,\n                    {method: 'GET'},\n                  )\n                  const result = await navigationResult.json()\n                  if (result.errors) {\n                    throw new Error(`Error importing ruleset: ${result.errors}`)\n                  }\n                  navigate(`${rulesetsUrl}new`, `imported_ruleset=${encodeURIComponent(importedRuleset)}`)\n                } catch (error) {\n                  setMenuOpen(false)\n                  setFlashAlert({message: (error as Error).message || 'Error importing ruleset', variant: 'danger'})\n                }\n              }}\n            />\n          </ActionList>\n        </ActionMenu.Overlay>\n      </ActionMenu>\n    </Box>\n  ) : (\n    <ComboButton actions={actions} ariaLabel=\"Open ruleset creation menu\" />\n  )\n}\n\ntry{ NewRulesetButton.displayName ||= 'NewRulesetButton' } catch {}","import type React from 'react'\nimport {useCallback, useRef, useState} from 'react'\n\nexport function useJsonUpload() {\n  const [isUploading, setIsUploading] = useState(false)\n  const inputRef = useRef<HTMLInputElement>(null)\n\n  const handleUploadIntent = useCallback((event: React.MouseEvent | React.KeyboardEvent) => {\n    event.preventDefault()\n\n    if (!inputRef.current) return\n\n    inputRef.current.click()\n  }, [])\n\n  const handleUpload = useCallback(\n    async (files: FileList | null) => {\n      const file = files?.[0]\n\n      if (isUploading) {\n        return\n      }\n      if (!file) {\n        throw new Error('No file specified')\n      }\n      if (file.type !== 'text/json' && file.type !== 'application/json') {\n        throw new Error('Invalid file type')\n      }\n\n      setIsUploading(true)\n      let text\n      try {\n        text = await file.text()\n      } catch {\n        setIsUploading(false)\n        throw new Error('Error importing ruleset')\n      }\n      try {\n        JSON.parse(text)\n      } catch {\n        setIsUploading(false)\n        throw new Error('Invalid ruleset specified')\n      }\n      setIsUploading(false)\n      return text\n    },\n    [isUploading],\n  )\n\n  return {\n    inputRef,\n    handleUploadIntent,\n    handleUpload,\n    isUploading,\n  }\n}\n","import type {FC} from 'react'\nimport {Flash, Heading, Octicon, Link, LinkButton} from '@primer/react'\nimport {AlertIcon, GitBranchIcon} from '@primer/octicons-react'\nimport type {RulesetTarget, SourceType} from '../types/rules-types'\nimport {useClickAnalytics} from '@github-ui/use-analytics'\nimport {NewRulesetButton} from '../components/NewRulesetButton'\nimport {useRelativeNavigation} from '../hooks/use-relative-navigation'\nimport type {FlashAlert} from '@github-ui/dismissible-flash'\n\ntype UpsellBannerProps = {\n  organization: boolean\n  askAdmin: boolean\n  ctaPath?: string\n  sourceType: SourceType\n}\n\nexport const FlashUpsellBanner: FC<UpsellBannerProps> = ({organization, askAdmin, ctaPath, sourceType}) => {\n  const button = true\n  const bannerProps = {organization, askAdmin, ctaPath, button, sourceType}\n  const {sendClickAnalyticsEvent} = useClickAnalytics()\n  const category = 'rulesets.upsell'\n  const action = 'RULESETS_UPSELL_BUTTON_CLICKED'\n  return (\n    <Flash variant=\"warning\" className=\"d-flex flex-items-center flex-justify-between\">\n      <UpsellBannerText {...bannerProps} />\n      {!askAdmin && (\n        <LinkButton\n          className=\"ml-5\"\n          href={ctaPath}\n          onClick={() =>\n            sendClickAnalyticsEvent({\n              category,\n              action,\n              label: 'RULESET_LEARN_MORE_LINK',\n            })\n          }\n        >\n          Upgrade\n        </LinkButton>\n      )}\n    </Flash>\n  )\n}\n\nconst UpsellBannerText = ({\n  organization,\n  askAdmin,\n  ctaPath,\n  button,\n  sourceType,\n}: {\n  organization: boolean\n  askAdmin: boolean\n  ctaPath?: string\n  button?: boolean\n  sourceType: SourceType\n}) => {\n  const {sendClickAnalyticsEvent} = useClickAnalytics()\n  const category = 'rulesets.upsell'\n  const action = 'RULESETS_UPGRADE_LINK_CLICKED'\n  let message = ''\n  let linkText = ''\n  if (sourceType === 'organization') {\n    message = \"Organization rulesets won't be enforced \"\n    linkText = 'until you upgrade this organization account to GitHub Enterprise.'\n  } else {\n    message = \"Your rulesets won't be enforced on this private repository until\"\n    if (!askAdmin) {\n      message = message.concat(' you ')\n      linkText = organization\n        ? 'upgrade this organization account to GitHub Team.'\n        : 'move to GitHub Team organization account.'\n    } else {\n      message = message.concat(' your ')\n      linkText = 'organization account admins upgrade this organization account to GitHub Team.'\n    }\n  }\n\n  return (\n    <div className=\"d-flex my-2\">\n      <div>\n        <Octicon icon={AlertIcon} sx={{color: 'attention.fg', mr: 2}} />\n      </div>\n      {button ? (\n        <>\n          {message}\n          {linkText}\n        </>\n      ) : (\n        <div className={'color-fg-muted'}>\n          {askAdmin ? (\n            <>\n              {message}\n              {linkText}\n            </>\n          ) : (\n            <>\n              {message}\n              <Link\n                href={ctaPath}\n                onClick={() =>\n                  sendClickAnalyticsEvent({\n                    category,\n                    action,\n                    label: 'RULESETS_UPSELL_TEXT_LINK',\n                  })\n                }\n              >\n                {linkText}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport const UpsellBanner: FC<{\n  headingText: string\n  withBorder: boolean\n  showNewRulesetButton: boolean\n  askAdmin: boolean\n  cta: {\n    visible: boolean\n    path?: string\n  }\n  infoVariant: 'one' | 'two'\n  sourceType: SourceType\n  organization: boolean\n  setFlashAlert: (flashAlert: FlashAlert) => void\n  supportedRulesetTargets: RulesetTarget[]\n}> = ({\n  headingText,\n  withBorder,\n  showNewRulesetButton,\n  askAdmin,\n  cta,\n  infoVariant,\n  sourceType,\n  organization,\n  setFlashAlert,\n  supportedRulesetTargets,\n}) => {\n  const borderProps = 'd-md-flex border rounded-2 color-border-default p-3 mb-3'\n  const noBorderProps = 'd-flex'\n  const upsellBannerProps = {askAdmin, ctaPath: cta.path, organization, sourceType}\n  const {resolvePath} = useRelativeNavigation()\n\n  return (\n    <div className={withBorder ? borderProps : noBorderProps}>\n      <div className=\"mr-3\">\n        <span className=\"branch-action-item-icon completeness-indicator completeness-indicator-problem float-none ml-0\">\n          <Octicon icon={GitBranchIcon} />\n        </span>\n      </div>\n      <div>\n        <Heading as=\"h2\" sx={{fontSize: 2, mb: 2}}>\n          {headingText}\n        </Heading>\n        <InfoVariants infoVariant={infoVariant} supportedRulesetTargets={supportedRulesetTargets} />\n        {cta.visible && <UpsellBannerText {...upsellBannerProps} />}\n        {showNewRulesetButton && (\n          <NewRulesetButton\n            rulesetsUrl={resolvePath('./')}\n            setFlashAlert={setFlashAlert}\n            supportedTargets={supportedRulesetTargets}\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n\nfunction InfoVariants({\n  infoVariant,\n  supportedRulesetTargets,\n}: {\n  infoVariant: 'one' | 'two'\n  supportedRulesetTargets: RulesetTarget[]\n}) {\n  const documentationHref = `https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-rulesets/about-rulesets`\n  const {sendClickAnalyticsEvent} = useClickAnalytics()\n  const category = 'rulesets.learn_more'\n  const action = 'RULESETS_INFO_LINK_CLICKED'\n\n  let message\n  if (supportedRulesetTargets.includes('member_privilege')) {\n    message =\n      infoVariant === 'one'\n        ? ' define whether members can perform operations on repositories such as delete and transfer. '\n        : 'Define whether members can perform operations on repositories such as delete and transfer. '\n  } else {\n    message =\n      infoVariant === 'one'\n        ? ' define whether collaborators can delete or force push and set requirements for any pushes, such as passing status checks or a linear commit history.'\n        : 'Define whether collaborators can delete or force push and set requirements for any pushes, such as passing status checks or a linear commit history. '\n  }\n\n  return (\n    <p className={'color-fg-muted'}>\n      {infoVariant === 'one' ? (\n        <>\n          <Link\n            href={documentationHref}\n            onClick={() =>\n              sendClickAnalyticsEvent({\n                category,\n                action,\n                label: 'RULESETS_DOC_LINK',\n              })\n            }\n            inline\n          >\n            Rulesets\n          </Link>\n          {message}\n        </>\n      ) : (\n        <>\n          {message}\n          <Link\n            href={documentationHref}\n            onClick={() =>\n              sendClickAnalyticsEvent({\n                category,\n                action,\n                label: 'RULESET_LEARN_MORE_LINK',\n              })\n            }\n            inline\n          >\n            Learn more about rulesets.\n          </Link>\n        </>\n      )}\n    </p>\n  )\n}\n\ntry{ FlashUpsellBanner.displayName ||= 'FlashUpsellBanner' } catch {}\ntry{ UpsellBannerText.displayName ||= 'UpsellBannerText' } catch {}\ntry{ InfoVariants.displayName ||= 'InfoVariants' } catch {}","import {INHERITED_SOURCE_TYPE_ORDER_MAP} from './constants'\nimport type {InheritedSourceType, Ruleset} from '../types/rules-types'\n\n/*\n  Split an array into two parts by a predicate\n*/\nexport function partition<T>(list: T[], predicate: (item: T) => boolean): [T[], T[]] {\n  const matches: T[] = []\n  const notMatches: T[] = []\n\n  for (const item of list) {\n    if (predicate(item)) {\n      matches.push(item)\n    } else {\n      notMatches.push(item)\n    }\n  }\n\n  return [matches, notMatches]\n}\n\n/*\n  Split an map into two parts by a predicate\n*/\nexport function partitionMap<K, V>(\n  map: Map<K, V>,\n  predicate: (key: K, value: V) => boolean,\n): [Array<[K, V]>, Array<[K, V]>] {\n  const matches: Array<[K, V]> = []\n  const notMatches: Array<[K, V]> = []\n\n  for (const item of map.entries()) {\n    if (predicate(item[0], item[1])) {\n      matches.push([item[0], item[1]])\n    } else {\n      notMatches.push([item[0], item[1]])\n    }\n  }\n\n  return [matches, notMatches]\n}\n\n/*\n * a function to pass to Array.sort that orders the given array against\n * INHERITED_SOURCE_TYPE_ORDER_MAP, where unknown keys are arbitrarily\n * ordered last\n */\nexport function sortSourceTypes(a: string, b: string) {\n  return (\n    (INHERITED_SOURCE_TYPE_ORDER_MAP[a as InheritedSourceType] ?? Infinity) -\n    (INHERITED_SOURCE_TYPE_ORDER_MAP[b as InheritedSourceType] ?? Infinity)\n  )\n}\n\nexport function isRulesetInherited(source: {id: number; type: string}, ruleset: Ruleset) {\n  return source.id !== ruleset.source.id || source.type.toLowerCase() !== ruleset.source.type.toLowerCase()\n}\n","import {Fragment, useEffect, useRef, useState} from 'react'\nimport type {Repository} from '@github-ui/current-repository'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport type {HomeRoutePayload, Ruleset} from '../types/rules-types'\nimport {Blankslate} from '../components/Blankslate'\nimport {BorderBox} from '../components/BorderBox'\nimport {BranchSelector} from '../components/BranchSelector'\nimport {Subhead} from '../components/Subhead'\nimport {RulesetList} from '../components/RulesetList'\nimport {FlashUpsellBanner, UpsellBanner} from '../components/UpsellBanner'\nimport {useRelativeNavigation} from '../hooks/use-relative-navigation'\nimport {NewRulesetButton} from '../components/NewRulesetButton'\nimport {capitalize} from '../helpers/string'\nimport {sortSourceTypes} from '../helpers/utils'\nimport {DismissibleFlashOrToast, type FlashAlert} from '@github-ui/dismissible-flash'\n\nexport function OverviewPage() {\n  const {\n    source,\n    sourceType,\n    upsellInfo,\n    rulesets,\n    matchingRulesets,\n    editableRulesets,\n    branch,\n    branchListCacheKey,\n    readOnly,\n    supportedTargets,\n  } = useRoutePayload<HomeRoutePayload>()\n  const {resolvePath} = useRelativeNavigation()\n  const [flashAlert, setFlashAlert] = useState<FlashAlert>({message: '', variant: 'default'})\n  const flashRef = useRef<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    flashRef.current?.focus()\n  }, [flashAlert, flashRef])\n\n  const rulesetsBySource = rulesets.reduce<Record<string, Ruleset[]>>((map, item) => {\n    // if a branch/ref is specified, filter based on whether each ruleset is applied\n    if (branch && !matchingRulesets.includes(item.id)) {\n      return map\n    }\n\n    const key = item.source.type\n    if (!map[key]) {\n      map[key] = []\n    }\n\n    map[key].push(item)\n    return map\n  }, {})\n\n  const inheritedSourceTypes = Object.keys(rulesetsBySource).sort(sortSourceTypes)\n\n  const hasFilteredRulesets = rulesets.length > 0 && inheritedSourceTypes.length === 0\n\n  const headingText = \"You haven't created any rulesets\"\n\n  let heading = 'Rulesets'\n  let alphaOrBeta = ''\n  if (supportedTargets.includes('member_privilege')) {\n    heading = 'Repository policies'\n    alphaOrBeta = 'Beta'\n  }\n\n  return (\n    <div className=\"settings-next position-relative\">\n      <DismissibleFlashOrToast flashAlert={flashAlert} setFlashAlert={setFlashAlert} ref={flashRef} />\n      <Subhead\n        heading={heading}\n        alphaOrBeta={alphaOrBeta}\n        renderAction={() => {\n          return readOnly ? null : rulesets.length > 0 ? (\n            <NewRulesetButton\n              rulesetsUrl={resolvePath('./')}\n              sx={{my: 2}}\n              setFlashAlert={setFlashAlert}\n              supportedTargets={supportedTargets}\n            />\n          ) : null\n        }}\n      />\n\n      <div className=\"d-flex flex-column gap-3\">\n        {upsellInfo.rulesets.cta.visible && inheritedSourceTypes.length > 0 && (\n          <FlashUpsellBanner\n            askAdmin={upsellInfo.askAdmin}\n            ctaPath={upsellInfo.rulesets.cta.path}\n            organization={upsellInfo.organization}\n            sourceType={sourceType}\n          />\n        )}\n        {sourceType === 'repository' && rulesets.length > 0 ? (\n          <div>\n            <BranchSelector gitRef={branch} repo={source as Repository} branchListCacheKey={branchListCacheKey} />\n          </div>\n        ) : null}\n        {inheritedSourceTypes.length > 0 ? (\n          inheritedSourceTypes.map(key => (\n            <Fragment key={key}>\n              <BorderBox\n                name={`${capitalize(key)} rulesets`}\n                showHeader={\n                  inheritedSourceTypes.length > 1 ||\n                  (sourceType === 'repository' && !inheritedSourceTypes.includes('Repository'))\n                }\n                renderCreateButton={() => {\n                  // Don't show managed by if the source type is the same as the group's type\n                  if (sourceType === key.toLowerCase()) {\n                    return null\n                  }\n\n                  const ownedByName = rulesetsBySource[key]![0]!.source.name\n                  return <div className=\"text-small color-fg-muted mt-1\">Managed by {ownedByName}</div>\n                }}\n              >\n                <RulesetList\n                  rulesets={rulesetsBySource[key]!}\n                  upsellInfo={upsellInfo}\n                  sourceType={sourceType}\n                  source={source}\n                  readOnly={readOnly}\n                  setFlashAlert={setFlashAlert}\n                />\n              </BorderBox>\n\n              {!readOnly &&\n                key.toLowerCase() !== sourceType &&\n                editableRulesets.includes(rulesetsBySource[key]![0]!.id) && (\n                  <div className=\"text-small\">\n                    <span className=\"text-bold\">Tip:</span>{' '}\n                    <span className=\"color-fg-muted\">\n                      As a {rulesetsBySource[key]![0]?.source.name} admin, you can\n                      <a href={rulesetsBySource[key]![0]?.source.url}>\n                        {' '}\n                        manage {source.name} rulesets in {key.toLocaleLowerCase()} settings.\n                      </a>\n                    </span>\n                  </div>\n                )}\n            </Fragment>\n          ))\n        ) : (\n          <>\n            {hasFilteredRulesets ? (\n              <Blankslate heading={`No rulesets matched your search`}>\n                {'Try expanding your search or creating a new ruleset'}\n              </Blankslate>\n            ) : (\n              <UpsellBanner\n                headingText={headingText}\n                withBorder={false}\n                showNewRulesetButton={!readOnly}\n                askAdmin={upsellInfo.askAdmin}\n                infoVariant=\"two\"\n                sourceType={sourceType}\n                cta={upsellInfo.rulesets.cta}\n                organization={upsellInfo.organization}\n                setFlashAlert={setFlashAlert}\n                supportedRulesetTargets={supportedTargets}\n              />\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\ntry{ OverviewPage.displayName ||= 'OverviewPage' } catch {}","import type {MutableRefObject} from 'react'\nimport type {Rule, ServerRule, LocalRule, RulesetRoutePayload, Parameter, RuleSchema} from '../types/rules-types'\nimport {RuleModalState} from '../types/rules-types'\n\ntype MappedRoutePayload = {\n  rules: Rule[]\n}\n\nexport const mapRules = (rules: ServerRule[] | undefined, localRuleId: MutableRefObject<number>): Rule[] =>\n  rules?.map(rule => ({\n    ...rule,\n    _id: localRuleId.current--,\n    _enabled: true,\n    _dirty: false,\n    _modalState: RuleModalState.CLOSED,\n  })) || []\n\nexport const mapRoutePayload = (\n  payload: RulesetRoutePayload,\n  localRuleId: MutableRefObject<number>,\n): MappedRoutePayload => {\n  const rules = mapRules(payload.ruleset.rules, localRuleId)\n\n  return {\n    rules,\n  }\n}\n\nexport type RuleId = Pick<Rule, 'id' | '_id'>\nexport const findRuleIndex = (rules: RuleId[], rule: RuleId) =>\n  rules.findIndex(({id, _id}) => (Number.isFinite(id) ? id === rule.id : Number.isFinite(_id) && _id === rule._id))\n\nexport const addRuleFactory =\n  (ruleSchema: RuleSchema, type: string, _id: number) =>\n  (state: Rule[]): Rule[] => {\n    const defaultParameters = ruleSchema.parameterSchema.fields.reduce<\n      Record<string, number | string | boolean | object | Array<number | string | object>>\n    >((map, field) => {\n      if (typeof field.default_value === 'undefined') {\n        return map\n      }\n\n      map[field.name] = field.default_value\n      return map\n    }, {})\n\n    const newRule = {\n      ruleType: type,\n      parameters: defaultParameters,\n      _id,\n      _enabled: true,\n      _dirty: true,\n      _modalState: RuleModalState.CREATING,\n    }\n\n    if (ruleSchema.metadataPatternSchema && !newRule.parameters.operator) {\n      newRule.parameters.operator = ruleSchema.metadataPatternSchema.supportedOperators[0]!.type\n    }\n\n    return [\n      ...state,\n      {\n        ruleType: type,\n        // TODO: Fix typing\n        parameters: defaultParameters as never,\n        _id,\n        _enabled: true,\n        _dirty: true,\n        _modalState: ruleSchema.metadataPatternSchema ? RuleModalState.CREATING : undefined,\n      },\n    ]\n  }\n\nexport const updateRuleParametersFactory =\n  (rule: Rule, parameters: Parameter) =>\n  (state: Rule[]): Rule[] => {\n    const index = findRuleIndex(state, rule)\n\n    if (index === -1) {\n      return state\n    }\n\n    const updatedRule = {\n      ...state[index]!,\n      ruleType: rule.ruleType,\n      _dirty: true,\n      parameters: {\n        ...state[index]!.parameters,\n        ...parameters,\n      },\n    }\n\n    return [\n      ...(index > 0 ? state.slice(0, index) : []),\n      updatedRule,\n      ...(index < state.length ? state.slice(index + 1) : []),\n    ]\n  }\n\nexport const updateRuleModalStateFactory =\n  <T extends LocalRule>(rule: T, newModalState: RuleModalState) =>\n  (state: T[]): T[] => {\n    const index = findRuleIndex(state, rule)\n\n    if (index === -1) {\n      return state\n    }\n\n    const updatedRule = {\n      ...state[index]!,\n      _modalState: newModalState,\n    }\n\n    return [\n      ...(index > 0 ? state.slice(0, index) : []),\n      updatedRule,\n      ...(index < state.length ? state.slice(index + 1) : []),\n    ]\n  }\n\nexport const toggleRuleFactory =\n  (rule: Rule, ruleEnabled: boolean) =>\n  (state: Rule[]): Rule[] => {\n    const index = findRuleIndex(state, rule)\n\n    if (index === -1) {\n      return state\n    }\n\n    const toggledRule = {\n      ...rule,\n      _dirty: true,\n      _enabled: ruleEnabled,\n    }\n\n    if (rule.parameters.max_ref_updates !== undefined) {\n      const stateModified: Rule[] = state\n      for (let i = 0; i < stateModified.length; i++) {\n        if (stateModified[i]!.parameters.max_ref_updates) {\n          stateModified[index] = toggledRule\n        }\n      }\n\n      return [...stateModified]\n    } else if (rule.id) {\n      // this is a db record, update the record to be _enabled: false so it's removed server side\n      return [\n        ...(index > 0 ? state.slice(0, index) : []),\n        toggledRule,\n        ...(index < state.length ? state.slice(index + 1) : []),\n      ]\n    } else {\n      // else, this is a local record, just remove it entirely\n      return [...(index > 0 ? state.slice(0, index) : []), ...(index < state.length ? state.slice(index + 1) : [])]\n    }\n  }\n","import type {MutableRefObject} from 'react'\nimport type {BypassActor} from '@github-ui/bypass-actors/types'\n\nexport const mapBypassActors = (\n  bypassActors: BypassActor[] | undefined,\n  localConditionId: MutableRefObject<number>,\n): BypassActor[] =>\n  bypassActors?.map(bypassActor => ({\n    ...bypassActor,\n    _id: localConditionId.current--,\n    _enabled: true,\n    _dirty: false,\n  })) || []\n\nexport type BypassActorId = Pick<BypassActor, 'id' | '_id'>\nexport const findBypassActorIndex = (bypassActors: BypassActorId[], bypassActor: BypassActorId) =>\n  bypassActors.findIndex(({id, _id}) =>\n    Number.isFinite(id) ? id === bypassActor.id : Number.isFinite(_id) && _id === bypassActor._id,\n  )\n\nexport const addBypassActorFactory =\n  (\n    actorId: BypassActor['actorId'],\n    actorType: BypassActor['actorType'],\n    name: BypassActor['name'],\n    bypassMode: BypassActor['bypassMode'],\n    owner: BypassActor['owner'],\n    _id: number,\n  ) =>\n  (state: BypassActor[]): BypassActor[] => {\n    const index = state.findIndex(bypassActor => bypassActor.actorId === actorId && bypassActor.actorType === actorType)\n    if (index !== -1) {\n      if (state[index]!._enabled) {\n        return state\n      }\n      const updatedBypassActor = {\n        ...state[index]!,\n        _enabled: true,\n        _dirty: true,\n      }\n      return [\n        ...(index > 0 ? state.slice(0, index) : []),\n        updatedBypassActor,\n        ...(index < state.length ? state.slice(index + 1) : []),\n      ]\n    }\n    const newBypassActor = {\n      _id,\n      actorId,\n      actorType,\n      name,\n      _enabled: true,\n      _dirty: true,\n      bypassMode,\n      owner,\n    }\n    return [...state, newBypassActor]\n  }\n\nexport const removeBypassActorFactory =\n  (bypassActor: BypassActor) =>\n  (state: BypassActor[]): BypassActor[] => {\n    const index = findBypassActorIndex(state, bypassActor)\n    if (index === -1) {\n      return state\n    }\n    // if the bypass actor is not persisted, we can just remove it from the list\n    if (!bypassActor.id) {\n      return [...state.slice(0, index), ...state.slice(index + 1)]\n    }\n    return [\n      ...(index > 0 ? state.slice(0, index) : []),\n      {\n        ...bypassActor,\n        _dirty: true,\n        _enabled: false,\n      },\n      ...(index < state.length ? state.slice(index + 1) : []),\n    ]\n  }\n\nexport const updateBypassActorFactory =\n  (bypassActor: BypassActor) =>\n  (state: BypassActor[]): BypassActor[] => {\n    const index = findBypassActorIndex(state, bypassActor)\n    if (index === -1) return state\n\n    if (state[index]) return [...state.slice(0, index), bypassActor, ...state.slice(index + 1)]\n\n    return state\n  }\n","import type {Condition, ConditionParameters, TargetType} from '../types/rules-types'\n\nexport const mapConditions = (conditions: Condition[] | undefined): Condition[] =>\n  conditions?.map(condition => ({\n    ...condition,\n    _dirty: false,\n  })) || []\n\nexport const addOrUpdateConditionFactory =\n  (target: TargetType, parameters: ConditionParameters) =>\n  (state: Condition[]): Condition[] => {\n    const index = state.findIndex(condition => condition.target === target)\n    if (index !== -1) {\n      const updatedCondition = {\n        ...state[index]!,\n        parameters,\n        _dirty: true,\n      }\n      return [\n        ...(index > 0 ? state.slice(0, index) : []),\n        updatedCondition,\n        ...(index < state.length ? state.slice(index + 1) : []),\n      ]\n    }\n\n    const newConditions: Condition = {\n      parameters,\n      target,\n      _dirty: true,\n    }\n\n    return [...state, newConditions]\n  }\n\nexport const removeConditionFactory =\n  (condition: Condition) =>\n  (state: Condition[]): Condition[] => {\n    return state.filter(existing => existing.target !== condition.target)\n  }\n","import {useAsyncValidation} from '@github-ui/repos-async-validation/use-async-validation'\nimport type {JSONRequestInit} from '@github-ui/verified-fetch'\n\nexport const useValidateRulesetNameUnique = (baseValidationUrl: string) => {\n  const {validate: baseValidation, ...baseHookResult} = useAsyncValidation(baseValidationUrl, 'ruleset_name')\n\n  const validate = async (name: string, id?: number, header: JSONRequestInit = {}): Promise<boolean> => {\n    if (!name.length) {\n      baseHookResult.reset()\n      return true\n    }\n\n    return baseValidation({name, id}, header)\n  }\n\n  return {\n    ...baseHookResult,\n    validate,\n  }\n}\n","import type {Repository} from '@github-ui/current-repository'\nimport {useCurrentRepository} from '@github-ui/current-repository'\nimport {useCallback, useRef, useMemo, useState} from 'react'\nimport type {\n  Condition,\n  ConditionParameters,\n  Parameter,\n  Rule,\n  RuleSchema,\n  Ruleset,\n  RulesetEnforcement,\n  RulesetTarget,\n  RulesetRoutePayload,\n  TargetType,\n} from '../types/rules-types'\nimport {OrgAdminBypassMode, type BypassActor, ActorBypassMode} from '@github-ui/bypass-actors/types'\nimport {RuleModalState} from '../types/rules-types'\nimport {\n  mapRules,\n  addRuleFactory,\n  updateRuleParametersFactory,\n  updateRuleModalStateFactory,\n  toggleRuleFactory,\n} from '../state/rules'\nimport {\n  addBypassActorFactory,\n  removeBypassActorFactory,\n  mapBypassActors,\n  updateBypassActorFactory,\n} from '../state/bypass-actors'\nimport {mapConditions, addOrUpdateConditionFactory, removeConditionFactory} from '../state/conditions'\nimport {useValidateRulesetNameUnique} from './use-validate-ruleset-name-unique'\nimport {useRelativeNavigation} from '../hooks/use-relative-navigation'\nimport {debounce} from '@github/mini-throttle'\n\n// Track client-side errors for each ruleset property, when possible\ntype FormErrors = Partial<Record<keyof Ruleset, string | undefined>>\ntype DebouncedFunction = (() => void) & {cancel: () => void}\n\ntype UseRuleset = {\n  repo: Repository\n  rulesetId?: number\n  rulesetTarget: RulesetTarget\n  rulesetName: string\n  rulesetNameError?: string\n  rulesetMatches: string | string[]\n  dirtyRulesetName: string\n  orgAdminBypassMode: OrgAdminBypassMode\n  bypassActors: BypassActor[]\n  setBypassActors: (bypassActors: BypassActor[]) => void\n  dirtyOrgAdminBypassMode: OrgAdminBypassMode\n  deployKeyBypass: boolean\n  dirtyDeployKeyBypass: boolean\n  enforcement: RulesetEnforcement\n  dirtyEnforcement: RulesetEnforcement\n  rules: Rule[]\n  ruleSchemas: RuleSchema[]\n  dirtyRules: Rule[]\n  conditions: Condition[]\n  dirtyConditions: Condition[]\n  dirtyBypassActors: BypassActor[]\n\n  initializeRuleset: (rulePayload: RulesetRoutePayload) => void\n  addRule: (type: string) => void\n  updateRuleParameters: (rule: Rule, parameters: Parameter) => void\n  setRuleModalState: (rule: Rule, newModalState: RuleModalState) => void\n  removeRule: (rule: Rule) => void\n  restoreRule: (rule: Rule) => void\n\n  addOrUpdateCondition: (target: TargetType, parameters: ConditionParameters) => void\n  removeCondition: (condition: Condition) => void\n\n  renameRuleset: (name: string) => void\n  validateForm: () => Promise<FormErrors>\n  setRulesetEnforcement: (enforcement: RulesetEnforcement) => void\n\n  addBypassActor: (\n    actorId: BypassActor['actorId'],\n    actorType: BypassActor['actorType'],\n    name: BypassActor['name'],\n    bypassMode: BypassActor['bypassMode'],\n    owner: BypassActor['owner'],\n  ) => void\n  removeBypassActor: (bypassActor: BypassActor) => void\n  updateBypassActor: (bypassActor: BypassActor) => void\n}\n\nexport const useRuleset = (initialRuleset: Ruleset, initialRuleSchemas: RuleSchema[]): UseRuleset => {\n  const localRuleId = useRef(-1)\n  const [ruleset, setRuleset] = useState(initialRuleset)\n  const [conditions, setConditions] = useState<Condition[]>(mapConditions(ruleset.conditions))\n  const [orgAdminBypassMode, setOrgAdminBypassMode] = useState(ruleset.orgAdminBypassMode)\n  const [deployKeyBypass, setDeployKeyBypass] = useState(ruleset.deployKeyBypass)\n  const [bypassActors, setBypassActors] = useState(mapBypassActors(ruleset.bypassActors, localRuleId))\n  const [rulesetName, setRulesetName] = useState(ruleset.name ?? '')\n  const [rulesetNameError, setRulesetNameError] = useState<string | undefined>(undefined)\n  const [rulesetEnforcement, setRulesetEnforcement] = useState(ruleset.enforcement)\n  const [ruleSchemas, setRuleSchemas] = useState<RuleSchema[]>(initialRuleSchemas)\n  const [rules, setRules] = useState<Rule[]>(mapRules(ruleset.rules, localRuleId))\n  const debounceValidateRulesetNameRef = useRef<DebouncedFunction | undefined>(undefined)\n  const abortValidateRulesetNameRef = useRef<AbortController | undefined>(undefined)\n  const {resolvePath} = useRelativeNavigation()\n\n  const nameValidationPath = resolvePath('../validate_value')\n  const rulesetNameUniqueValidator = useValidateRulesetNameUnique(nameValidationPath)\n\n  const repo = useCurrentRepository()\n\n  const dirtyRules = useMemo(\n    () => rules.filter(rule => rule._dirty && rule._modalState !== RuleModalState.CREATING),\n    [rules],\n  )\n  const dirtyConditions = useMemo(() => conditions.filter(condition => condition._dirty), [conditions])\n  const dirtyBypassActors = useMemo(() => bypassActors.filter(bypassActor => bypassActor._dirty), [bypassActors])\n\n  // Cancel previous requests because we are only interested in the latest value\n  const validateRulesetNameReset = () => {\n    debounceValidateRulesetNameRef.current?.cancel()\n    abortValidateRulesetNameRef.current?.abort()\n  }\n\n  const validateRulesetName = useCallback(\n    async (value: string, skipDebounce: boolean = false): Promise<string | undefined> => {\n      const name = value.trim()\n      validateRulesetNameReset()\n\n      if (!name) {\n        const message = 'Name cannot be empty'\n        setRulesetNameError(message)\n        return message\n      }\n\n      abortValidateRulesetNameRef.current = new AbortController()\n\n      if (skipDebounce) {\n        const valid = await rulesetNameUniqueValidator.validate(name, ruleset.id, {\n          signal: abortValidateRulesetNameRef.current.signal,\n        })\n        const message = valid ? undefined : 'Name must be unique'\n        setRulesetNameError(message)\n        return message\n      }\n\n      debounceValidateRulesetNameRef.current = debounce(async () => {\n        const valid = await rulesetNameUniqueValidator.validate(name, ruleset.id, {\n          signal: abortValidateRulesetNameRef.current?.signal,\n        })\n        setRulesetNameError(valid ? undefined : 'Name must be unique')\n      }, 500)\n      debounceValidateRulesetNameRef?.current()\n    },\n    [ruleset.id, rulesetNameUniqueValidator],\n  )\n\n  const validateForm = useCallback(async () => {\n    // Cancel any existing async validation\n    validateRulesetNameReset()\n    // call validator immediately rather than debouncing\n    const nameError = await validateRulesetName(rulesetName, true)\n\n    const errors: FormErrors = {\n      name: nameError,\n    }\n\n    return errors\n  }, [validateRulesetName, rulesetName])\n\n  return {\n    repo,\n    rulesetId: ruleset.id ?? undefined,\n    rulesetTarget: ruleset.target,\n    rulesetName: ruleset.name,\n    rulesetMatches: ruleset.matches,\n    dirtyRulesetName: rulesetName,\n    orgAdminBypassMode: ruleset.orgAdminBypassMode,\n    dirtyOrgAdminBypassMode: orgAdminBypassMode,\n    deployKeyBypass: ruleset.deployKeyBypass,\n    dirtyDeployKeyBypass: deployKeyBypass,\n    enforcement: ruleset.enforcement,\n    dirtyEnforcement: rulesetEnforcement,\n    bypassActors,\n    setBypassActors,\n    rules,\n    ruleSchemas,\n    dirtyRules,\n    conditions,\n    dirtyConditions,\n    dirtyBypassActors,\n    rulesetNameError,\n\n    initializeRuleset: useCallback(payload => {\n      localRuleId.current = -1\n      setRules(mapRules(payload.ruleset.rules, localRuleId))\n      setConditions(mapConditions(payload.ruleset.conditions))\n      setBypassActors(mapBypassActors(payload.ruleset.bypassActors, localRuleId))\n      setOrgAdminBypassMode(payload.ruleset.orgAdminBypassMode)\n      setDeployKeyBypass(payload.ruleset.deployKeyBypass)\n      setRulesetName(payload.ruleset.name)\n      setRulesetNameError(undefined)\n      setRulesetEnforcement(payload.ruleset.enforcement)\n      setRuleset(payload.ruleset)\n      setRuleSchemas(payload.ruleSchemas)\n    }, []),\n    addRule: useCallback(\n      (type: string) => {\n        setRules(prev => {\n          const ruleSchema = ruleSchemas.find(schema => schema.type === type)\n          if (!ruleSchema) {\n            throw new Error('Rule schema not found')\n          }\n\n          if (!ruleSchema.metadataPatternSchema) {\n            const existingRule = prev.find(rule => rule.ruleType === type)\n            if (existingRule) {\n              return toggleRuleFactory(existingRule, true)(prev)\n            }\n          }\n\n          return addRuleFactory(ruleSchema, type, localRuleId.current--)(prev)\n        })\n      },\n      [ruleSchemas],\n    ),\n    updateRuleParameters: useCallback((rule, parameters) => {\n      setRules(updateRuleParametersFactory(rule, parameters))\n    }, []),\n    setRuleModalState: useCallback((rule, newModalState) => {\n      setRules(updateRuleModalStateFactory(rule, newModalState))\n    }, []),\n    removeRule: useCallback(rule => {\n      setRules(toggleRuleFactory(rule, false))\n    }, []),\n    restoreRule: useCallback(rule => {\n      setRules(toggleRuleFactory(rule, true))\n    }, []),\n    addOrUpdateCondition: useCallback((target, parameters) => {\n      setConditions(addOrUpdateConditionFactory(target, parameters))\n    }, []),\n    removeCondition: useCallback(condition => {\n      setConditions(removeConditionFactory(condition))\n    }, []),\n    renameRuleset: useCallback(\n      name => {\n        setRulesetName(name)\n        setRulesetNameError(undefined)\n        validateRulesetName(name)\n      },\n      [validateRulesetName],\n    ),\n    validateForm,\n    setRulesetEnforcement,\n    addBypassActor: useCallback((actorId, actorType, name, bypassMode, owner) => {\n      if (actorType === 'OrganizationAdmin') {\n        setOrgAdminBypassMode(\n          bypassMode === ActorBypassMode.ALWAYS ? OrgAdminBypassMode.OrgBypassAny : OrgAdminBypassMode.OrgBypassPRsOnly,\n        )\n      } else if (actorType === 'DeployKey') {\n        setDeployKeyBypass(true)\n      } else {\n        setBypassActors(addBypassActorFactory(actorId, actorType, name, bypassMode, owner, localRuleId.current--))\n      }\n    }, []),\n    removeBypassActor: useCallback(bypassActor => {\n      if (bypassActor.actorType === 'OrganizationAdmin') {\n        setOrgAdminBypassMode(OrgAdminBypassMode.NoOrgBypass)\n      } else if (bypassActor.actorType === 'DeployKey') {\n        setDeployKeyBypass(false)\n      } else {\n        setBypassActors(removeBypassActorFactory(bypassActor))\n      }\n    }, []),\n    updateBypassActor: useCallback(bypassActor => {\n      if (bypassActor.actorType === 'OrganizationAdmin') {\n        setOrgAdminBypassMode(\n          bypassActor.bypassMode === ActorBypassMode.ALWAYS\n            ? OrgAdminBypassMode.OrgBypassAny\n            : OrgAdminBypassMode.OrgBypassPRsOnly,\n        )\n      } else if (bypassActor.actorType === 'DeployKey') {\n        setDeployKeyBypass(false)\n      } else {\n        setBypassActors(updateBypassActorFactory(bypassActor))\n      }\n    }, []),\n  }\n}\n","import {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport type {\n  DetailedValidationErrors,\n  Ruleset,\n  RulesetRoutePayload,\n  RulesetTarget,\n  SetRoutePayload,\n  WorkflowRepository,\n  PropertyDescriptor,\n  SimpleRepository,\n  SimpleOrganization,\n} from '../types/rules-types'\nimport type {BypassActor} from '@github-ui/bypass-actors/types'\n\nexport class ValidationError extends Error {\n  details: DetailedValidationErrors\n\n  constructor(error: unknown) {\n    // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n    super(error.message)\n    // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n    if (error.detailed_errors) {\n      // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n      this.details = error.detailed_errors\n    }\n  }\n}\n\nconst request = (url: string, method: string, error = 'Unexpected error') => {\n  return async (body?: object) => {\n    const response = await verifiedFetchJSON(url, {\n      body,\n      method,\n    })\n    if (response.ok) {\n      try {\n        return await response.json()\n      } catch (e) {\n        throw new Error('Failed to read response')\n      }\n    } else if (response.status === 422) {\n      throw new ValidationError(await response.json())\n    } else {\n      throw new Error(error)\n    }\n  }\n}\n\nexport const setRuleset = (url: string, ruleset: Ruleset): Promise<SetRoutePayload> => {\n  return request(url, 'POST', 'Failed to update')({ruleset})\n}\n\nexport const getRuleset = (url: string): Promise<{payload: RulesetRoutePayload}> => request(url, 'GET')()\n\nexport const validatePattern = (url: string, pattern: string): Promise<{valid: boolean}> =>\n  request(url, 'POST')({pattern})\n\nexport const getBypassSuggestions = (url: string, query: string): Promise<BypassActor[]> => {\n  return request(`${url}?q=${encodeURIComponent(query)}`, 'GET')()\n}\n\nexport const getRepoSuggestionsForOrg = (\n  url: string,\n  {query, excludePublicRepos}: {query: string; excludePublicRepos: boolean},\n): Promise<SimpleRepository[]> => {\n  return request(\n    `${url}?q=${encodeURIComponent(query)}&excludePublicRepos=${excludePublicRepos ? 'true' : 'false'}`,\n    'GET',\n  )()\n}\n\nexport const getOrgSuggestionsForEnterprise = (\n  url: string,\n  {query}: {query: string},\n): Promise<SimpleOrganization[]> => {\n  return request(`${url}?q=${encodeURIComponent(query)}`, 'GET')()\n}\n\nexport const getAvailableProperties = (\n  url: string,\n  rulesetTarget: RulesetTarget,\n): Promise<{properties: PropertyDescriptor[]}> => {\n  return request(`${url}?ruleset_target=${rulesetTarget}`, 'GET')()\n}\n\n// === Workflows ===\n\nexport const getWorkflowSuggestions = (url: string, repoName: string): Promise<Array<{name: string; path: string}>> => {\n  return request(`${url}?type=workflows&repoName=${encodeURIComponent(repoName)}`, 'GET')()\n}\n\nexport const getWorkflowRepoSuggestions = (url: string, repoQuery = ''): Promise<WorkflowRepository[]> => {\n  return request(`${url}?type=repos&q=${encodeURIComponent(repoQuery)}`, 'GET')()\n}\n\nexport const getShaForRef = (url: string, repoName: string, ref: string): Promise<{sha: string | undefined}> => {\n  return request(`${url}?type=sha&ref=${encodeURIComponent(ref)}&repoName=${encodeURIComponent(repoName)}`, 'GET')()\n}\n\nexport const validateWorkflowSha = (\n  url: string,\n  shaAndRepo: {sha: string; repo_id: number},\n): Promise<{valid: boolean}> => {\n  return request(url, 'POST')(shaAndRepo)\n}\n","import type {FC} from 'react'\nimport {useState, useEffect} from 'react'\nimport {Link} from '@github-ui/react-core/link'\nimport {FormControl, TextInput, Box, ActionMenu, ActionList, Octicon, Label} from '@primer/react'\nimport {MeterIcon, SkipIcon, PlayIcon} from '@primer/octicons-react'\nimport {DangerConfirmationDialog} from './DangerConfirmationDialog'\nimport type {SourceType, UpsellInfo, DetailedValidationErrors, RulesetTarget} from '../../types/rules-types'\nimport {RulesetEnforcement} from '../../types/rules-types'\n\ntype GeneralPanelProps = {\n  readOnly: boolean\n  upsellInfo: UpsellInfo\n  sourceType: SourceType\n  name: string\n  enforcement: RulesetEnforcement\n  rulesetId?: number\n  nameRef?: React.RefObject<HTMLInputElement>\n  generalErrors?: DetailedValidationErrors['general']\n  rulesetNameError?: string\n  renameRuleset: (name: string) => void\n  setRulesetEnforcement: (status: RulesetEnforcement) => void\n  rulesetTarget: RulesetTarget\n}\n\nconst enforcementOptions: Array<{\n  type: RulesetEnforcement\n  text: string\n  description: string\n  icon: JSX.Element\n}> = [\n  {\n    type: RulesetEnforcement.Enabled,\n    text: 'Active',\n    description: 'Rules will be enforced',\n    icon: <Octicon icon={PlayIcon} sx={{color: 'success.fg'}} />,\n  },\n  {\n    type: RulesetEnforcement.Evaluate,\n    text: 'Evaluate',\n    description: 'Evaluate Rulesets to trial rules and view insights',\n    icon: <Octicon icon={MeterIcon} sx={{color: 'severe.fg'}} />,\n  },\n  {\n    type: RulesetEnforcement.Disabled,\n    text: 'Disabled',\n    description: 'Do not evaluate or enforce rules',\n    icon: <Octicon icon={SkipIcon} sx={{color: 'fg.muted'}} />,\n  },\n]\n\nconst enforcementStatusLabel = 'Enforcement status'\n\nexport const GeneralPanel: FC<GeneralPanelProps> = ({\n  readOnly,\n  upsellInfo,\n  name,\n  sourceType,\n  enforcement,\n  generalErrors,\n  nameRef,\n  renameRuleset,\n  setRulesetEnforcement,\n  rulesetNameError,\n  rulesetTarget,\n}: GeneralPanelProps) => {\n  const [showOrganizationDialog, setShowOrganizationDialog] = useState(false)\n  const [showEnforcementMenu, setShowEnforcementMenu] = useState(false)\n  const [nameError, setNameError] = useState('')\n  const evaluateUpsellVisible = upsellInfo.enterpriseRulesets.cta.visible && upsellInfo.organization\n  const [previousEnforcement, setPreviousEnforcement] = useState(enforcement)\n\n  const supportedEnforcementOptions = enforcementOptions.filter(\n    option =>\n      !(option.type === RulesetEnforcement.Evaluate && rulesetTarget === 'member_privilege') &&\n      (upsellInfo.enterpriseRulesets.featureEnabled ||\n        evaluateUpsellVisible ||\n        option.type !== RulesetEnforcement.Evaluate),\n  )\n\n  const selectedEnforcement =\n    supportedEnforcementOptions.find(option => option.type === enforcement) ||\n    supportedEnforcementOptions[supportedEnforcementOptions.length - 1]!\n\n  useEffect(() => {\n    // Set name error if present\n    if (generalErrors?.name && generalErrors.name.length) {\n      setNameError(generalErrors.name.map(e => e.message).join(','))\n      return\n    }\n  }, [generalErrors])\n\n  return (\n    <>\n      {!readOnly ? (\n        <div className=\"d-flex flex-column gap-3 mb-4 mt-2\" data-testid=\"general-panel\">\n          <FormControl>\n            <FormControl.Label>Ruleset Name</FormControl.Label>\n            <TextInput\n              sx={{width: '35%'}}\n              placeholder={name}\n              ref={nameRef}\n              value={name}\n              aria-invalid={!!rulesetNameError}\n              onChange={e => {\n                renameRuleset(e.target.value)\n              }}\n            />\n            {rulesetNameError && <FormControl.Validation variant=\"error\">{rulesetNameError}</FormControl.Validation>}\n            {nameError && (\n              <FormControl.Validation variant=\"error\" aria-live=\"polite\">\n                {nameError}\n              </FormControl.Validation>\n            )}\n          </FormControl>\n\n          <FormControl>\n            <FormControl.Label>{enforcementStatusLabel}</FormControl.Label>\n\n            {selectedEnforcement.type === RulesetEnforcement.Evaluate && evaluateUpsellVisible && (\n              <FormControl.Caption>\n                <span>\n                  Evaluate mode is only available to Enterprise organizations.{' '}\n                  {upsellInfo.enterpriseRulesets.cta.path && (\n                    <Link to={upsellInfo.enterpriseRulesets.cta.path}>Upgrade to Enterprise to use this mode.</Link>\n                  )}\n                </span>\n              </FormControl.Caption>\n            )}\n\n            <ActionMenu open={showEnforcementMenu} onOpenChange={() => setShowEnforcementMenu(!showEnforcementMenu)}>\n              <ActionMenu.Button aria-label={`${selectedEnforcement.text}, ${enforcementStatusLabel}`}>\n                <div className=\"d-inline pr-2\">{selectedEnforcement.icon}</div>\n                {selectedEnforcement.text}\n              </ActionMenu.Button>\n\n              <ActionMenu.Overlay width=\"medium\">\n                <ActionList selectionVariant=\"single\">\n                  <ActionList.Group>\n                    <ActionList.GroupHeading>{enforcementStatusLabel}</ActionList.GroupHeading>\n                    {supportedEnforcementOptions.map(option => (\n                      <ActionList.Item\n                        key={option.type}\n                        selected={option.type === selectedEnforcement.type}\n                        onSelect={e => {\n                          if (sourceType === 'organization' && option.type === RulesetEnforcement.Enabled) {\n                            e.preventDefault()\n                            setRulesetEnforcement(option.type)\n                            setPreviousEnforcement(enforcement)\n                            setShowEnforcementMenu(false)\n                            setShowOrganizationDialog(true)\n                          } else {\n                            setRulesetEnforcement(option.type)\n                          }\n                        }}\n                      >\n                        <ActionList.LeadingVisual>{option.icon}</ActionList.LeadingVisual>\n                        {option.text}\n                        {option.type === RulesetEnforcement.Evaluate && evaluateUpsellVisible && (\n                          <Label className=\"ml-1\" variant=\"accent\">\n                            Enterprise\n                          </Label>\n                        )}\n                        <ActionList.Description variant=\"block\">{option.description}</ActionList.Description>\n                      </ActionList.Item>\n                    ))}\n                  </ActionList.Group>\n                </ActionList>\n              </ActionMenu.Overlay>\n            </ActionMenu>\n          </FormControl>\n        </div>\n      ) : (\n        <div data-testid=\"general-panel-readOnly\">\n          <ReadOnlyRow title=\"Name\">{name}</ReadOnlyRow>\n          <ReadOnlyRow title={enforcementStatusLabel}>\n            <span className=\"text-bold\">{selectedEnforcement.text}</span>\n            <span> - {selectedEnforcement.description}</span>\n          </ReadOnlyRow>\n        </div>\n      )}\n\n      <DangerConfirmationDialog\n        isOpen={showOrganizationDialog}\n        title=\"Enable Organization Ruleset\"\n        text=\"I want rules enforced on targeted repositories in this ruleset.\"\n        buttonText=\"Confirm\"\n        onDismiss={() => {\n          setShowOrganizationDialog(false)\n          setRulesetEnforcement(previousEnforcement)\n        }}\n        onConfirm={() => {\n          setShowOrganizationDialog(false)\n          setRulesetEnforcement(RulesetEnforcement.Enabled)\n        }}\n      />\n    </>\n  )\n}\n\nfunction ReadOnlyRow({title, children}: {title: string; children: React.ReactNode}) {\n  return (\n    <Box\n      className=\"Box-row\"\n      sx={{\n        display: 'grid',\n        gridTemplateColumns: '1fr 3fr;',\n      }}\n    >\n      <span className=\"text-bold\">{title}</span>\n      <span className=\"flex-1\">{children}</span>\n    </Box>\n  )\n}\n\ntry{ GeneralPanel.displayName ||= 'GeneralPanel' } catch {}\ntry{ ReadOnlyRow.displayName ||= 'ReadOnlyRow' } catch {}","import {INCLUDE_ALL_PATTERN} from '../types/rules-types'\nimport type {\n  ConditionParameters,\n  ExpandedRepoTargetType,\n  IncludeExcludeParameters,\n  TargetObjectType,\n  TargetType,\n} from '../types/rules-types'\n\nexport function isAllCondition(targetType: TargetType, parameters: ConditionParameters) {\n  const params = parameters as IncludeExcludeParameters\n  return (\n    (targetType === 'repository_name' || targetType === 'organization_name') &&\n    params.include.length === 1 &&\n    params.include[0] === INCLUDE_ALL_PATTERN &&\n    params.exclude.length === 0\n  )\n}\n\nexport function getDefaultTargetByObject(\n  objectType: TargetObjectType,\n  options?: {\n    supportedConditionTargetObjects?: TargetObjectType[]\n  },\n): ExpandedRepoTargetType {\n  if (objectType === 'organization') {\n    return 'organization_name'\n  }\n  if (objectType === 'repository') {\n    if (options?.supportedConditionTargetObjects?.includes('organization')) {\n      return 'all_repos'\n    } else {\n      return 'repository_name'\n    }\n  }\n  if (objectType === 'ref') {\n    return 'ref_name'\n  }\n  throw new Error(`Unknown target object type: ${objectType}`)\n}\n","import type {FC} from 'react'\nimport {BranchName, Label, Octicon, Truncate, Text} from '@primer/react'\nimport {GitBranchIcon, TagIcon} from '@primer/octicons-react'\nimport {unqualifyRef, mapRefType} from '@github-ui/ref-utils'\n\nconst RefIcon: FC<{target: string}> = ({target}) => {\n  const refType = mapRefType(target)\n  if (refType === 'tag') {\n    return <Octicon icon={TagIcon} sx={{mr: 1}} />\n  }\n  if (refType === 'branch') {\n    return <Octicon icon={GitBranchIcon} sx={{mr: 1}} />\n  }\n  return null\n}\n\ntype RefPillProps = {\n  param: string\n  displayAsLabel?: boolean\n  showIcon?: boolean\n  showQualifiedRef?: boolean\n  maxWidth?: number\n}\n\nexport const RefPill: FC<RefPillProps> = ({\n  param,\n  displayAsLabel = false,\n  showIcon,\n  showQualifiedRef,\n  maxWidth = 100,\n}) => {\n  if (displayAsLabel) {\n    return <Label variant=\"secondary\">{param}</Label>\n  }\n  if (showQualifiedRef) {\n    return (\n      <BranchName as=\"span\">\n        <Truncate title={param} maxWidth={maxWidth} sx={{display: 'flex'}}>\n          <Text sx={{overflowX: 'hidden', textOverflow: 'ellipsis'}}>\n            {showIcon ? <RefIcon target={param} /> : null}\n            {param}\n          </Text>\n        </Truncate>\n      </BranchName>\n    )\n  }\n  return (\n    <BranchName as=\"span\">\n      <Truncate title={unqualifyRef(param) || ''} maxWidth={maxWidth} sx={{display: 'flex'}}>\n        <Text sx={{overflowX: 'hidden', textOverflow: 'ellipsis'}}>\n          {showIcon ? <RefIcon target={param} /> : null}\n          {unqualifyRef(param)}\n        </Text>\n      </Truncate>\n    </BranchName>\n  )\n}\n\ntry{ RefIcon.displayName ||= 'RefIcon' } catch {}\ntry{ RefPill.displayName ||= 'RefPill' } catch {}","import type React from 'react'\nimport {Box, IconButton, Text, Truncate} from '@primer/react'\nimport {InfoIcon, PlusCircleIcon, TrashIcon, XCircleIcon} from '@primer/octicons-react'\nimport {ScreenSize, useScreenSize} from '@github-ui/screen-size'\nimport {Blankslate} from '../../components/Blankslate'\nimport {BorderBox} from '../../components/BorderBox'\nimport {RefPill} from '../RefPill'\nimport {partition} from '../../helpers/utils'\n\nexport type IncludeExcludeType = 'include' | 'exclude'\n\ntype Target<T> = {\n  type: IncludeExcludeType\n  prefix?: string\n  value: T\n  display?: string | string[]\n  displayAsLabel?: boolean\n  onRemove?(): void\n}\n\ninterface TargetsTableProps<T> {\n  renderTitle: () => JSX.Element\n  renderAction?: () => JSX.Element\n  onRemove?: (type: IncludeExcludeType, value: T, prefix?: string) => void\n  targets: Array<Target<T>>\n  headerRowText?: string\n  blankslate: {\n    heading: string\n    description?: React.ReactNode\n  }\n  readOnly?: boolean\n}\n\nexport function TargetsTable<T>({\n  renderTitle,\n  renderAction,\n  onRemove,\n  targets,\n  headerRowText,\n  blankslate,\n  readOnly,\n}: TargetsTableProps<T>) {\n  // Group by include / exclude\n  const [include, exclude] = partition(targets, item => item.type === 'include')\n\n  return (\n    <Box className=\"settings-next\" sx={{position: 'relative'}}>\n      <BorderBox>\n        <div className=\"Box-header d-flex flex-row flex-justify-between flex-items-center\">\n          {renderTitle()}\n\n          {readOnly || !renderAction ? null : renderAction()}\n        </div>\n\n        {targets.length === 0 ? (\n          <Blankslate heading={blankslate.heading}>{blankslate.description}</Blankslate>\n        ) : (\n          <ul>\n            {headerRowText && (\n              <Box\n                as=\"li\"\n                className=\"Box-row\"\n                sx={{display: 'flex', flexDirection: 'row', px: 3, py: 2, alignItems: 'center'}}\n              >\n                <InfoIcon className=\"mr-2\" />\n                <Text sx={{color: 'fg.muted'}}>{headerRowText}</Text>\n              </Box>\n            )}\n            {include.length > 0 && <TargetList readOnly={readOnly} targets={include} onRemove={onRemove} />}\n            {exclude.length > 0 && <TargetList readOnly={readOnly} targets={exclude} onRemove={onRemove} />}\n          </ul>\n        )}\n      </BorderBox>\n    </Box>\n  )\n}\n\ninterface TargetListProps<T> {\n  targets: Array<Target<T>>\n  readOnly?: boolean\n  onRemove?: (type: IncludeExcludeType, value: T, prefix?: string) => void\n}\n\nfunction TargetList<T>({targets, readOnly, onRemove}: TargetListProps<T>) {\n  return (\n    <>\n      {targets?.map(target => (\n        <li key={`${target.prefix}/${target.value}`} className=\"Box-row d-flex flex-row flex-items-center px-3 py-2\">\n          <div className=\"flex-1\">\n            <Condition target={target} />\n          </div>\n          {readOnly ? null : (\n            <div>\n              <IconButton\n                type=\"button\"\n                aria-label={`Delete ${target.type} of ${target.display || target.value}`}\n                size=\"small\"\n                variant=\"invisible\"\n                onClick={() => {\n                  if (target.onRemove) {\n                    target.onRemove()\n                  }\n                  onRemove?.(target.type, target.value, target.prefix)\n                }}\n                className=\"ml-2\"\n                icon={TrashIcon}\n              />\n            </div>\n          )}\n        </li>\n      ))}\n    </>\n  )\n}\n\nconst TRUNCATION_SIZE_MAP = {\n  [ScreenSize.small]: 100,\n  [ScreenSize.medium]: 150,\n  [ScreenSize.large]: 150,\n  [ScreenSize.xlarge]: 270,\n  [ScreenSize.xxlarge]: 460,\n  [ScreenSize.xxxlarge]: 460,\n  [ScreenSize.xxxxlarge]: 460,\n}\n\nconst getMaxWidth = (screenSize: ScreenSize) => {\n  return TRUNCATION_SIZE_MAP[screenSize] ?? TRUNCATION_SIZE_MAP[ScreenSize.small]\n}\n\nfunction Condition<T>({target}: {target: Target<T>}) {\n  const {screenSize} = useScreenSize()\n  const maxWidth = getMaxWidth(screenSize)\n\n  return (\n    <div className=\"d-flex flex-direction-row flex-items-start\">\n      <div className=\"d-flex flex-items-center flex-direction-row\">\n        {target.type === 'include' ? (\n          <PlusCircleIcon className=\"color-fg-success mr-2\" />\n        ) : (\n          <XCircleIcon className=\"color-fg-danger mr-2\" />\n        )}\n\n        {target.prefix && (\n          <>\n            <Truncate title={target.prefix} maxWidth={maxWidth - 2}>\n              <Text sx={{overflowX: 'hidden', textOverflow: 'ellipsis'}}>{target.prefix}</Text>\n            </Truncate>\n            :&nbsp;\n          </>\n        )}\n      </div>\n      <div className=\"flex-wrap d-flex gap-1\">\n        {Array.isArray(target.display) ? (\n          target.display.map(d => (\n            <Box key={d} sx={{mr: 1, display: 'inline'}}>\n              <RefPill param={d} displayAsLabel={target.displayAsLabel} />\n            </Box>\n          ))\n        ) : (\n          <RefPill\n            param={target.display || `${target.value}`}\n            displayAsLabel={target.displayAsLabel}\n            maxWidth={maxWidth}\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n\ntry{ TargetsTable.displayName ||= 'TargetsTable' } catch {}\ntry{ TargetList.displayName ||= 'TargetList' } catch {}\ntry{ Condition.displayName ||= 'Condition' } catch {}","import {useAsyncValidation} from '@github-ui/repos-async-validation/use-async-validation'\n\nexport const useValidateConditionTarget = (baseValidationUrl: string) => {\n  const {validate: baseValidation, ...baseHookResult} = useAsyncValidation(baseValidationUrl, 'condition_target')\n\n  const validate = async (conditionTarget: string, target: string, id?: number): Promise<boolean> => {\n    if (!conditionTarget.length) {\n      baseHookResult.reset()\n      return true\n    }\n\n    return baseValidation({conditionTarget, target, id})\n  }\n\n  return {\n    ...baseHookResult,\n    validate,\n  }\n}\n","import type {FC} from 'react'\nimport type React from 'react'\nimport {useRef, useState, useEffect} from 'react'\nimport {FormControl, Octicon, Link, TextInput} from '@primer/react'\nimport {PlusCircleIcon, XCircleIcon} from '@primer/octicons-react'\nimport {Dialog} from '@primer/react/experimental'\nimport {EXAMPLE_CONDITION_TARGET_PATTERNS, PLURAL_RULESET_TARGETS} from '../../../helpers/constants'\nimport type {RulesetTarget, TargetType} from '../../../types/rules-types'\nimport {capitalize} from '../../../helpers/string'\nimport {useRelativeNavigation} from '../../../hooks/use-relative-navigation'\nimport {useValidateConditionTarget} from '../../../hooks/use-validate-condition-target'\n\ntype AddTargetDialogProps = {\n  rulesetId?: number\n  onAdd: (target: string) => void\n  onClose: () => void\n  target: TargetType\n  includeOrExclude: 'include' | 'exclude'\n  rulesetTarget: RulesetTarget\n  fnmatchHelpUrl?: string\n}\n\nexport const AddTargetDialog: FC<AddTargetDialogProps> = ({\n  rulesetId,\n  onAdd,\n  onClose,\n  target,\n  includeOrExclude,\n  rulesetTarget,\n  fnmatchHelpUrl,\n}) => {\n  const inputRef = useRef<HTMLInputElement>(null)\n\n  const examplePatterns = EXAMPLE_CONDITION_TARGET_PATTERNS[target]?.[rulesetTarget]\n\n  const title = `${capitalize(includeOrExclude)} by pattern`\n  const subtitleObject = capitalize(\n    target === 'repository_name'\n      ? 'Repositories'\n      : target === 'organization_name'\n        ? 'Organizations'\n        : PLURAL_RULESET_TARGETS[rulesetTarget],\n  )\n  const subtitle = `${subtitleObject} that ${\n    includeOrExclude === 'include' ? 'match' : 'do not match'\n  } the matching pattern will be targeted by this ruleset.`\n  const subject =\n    target === 'repository_name'\n      ? 'Repository'\n      : target === 'organization_name'\n        ? 'Organization'\n        : capitalize(rulesetTarget)\n  const createText = `Add ${includeOrExclude === 'include' ? 'Inclusion' : 'Exclusion'} pattern`\n\n  const [conditionTargetError, setConditionTargetError] = useState('')\n  const {resolvePath} = useRelativeNavigation()\n  const conditionTargetValidator = useValidateConditionTarget(resolvePath('../validate_value'))\n\n  const onSave = async () => {\n    const trimmedParam = inputRef.current!.value.trim()\n\n    if (!trimmedParam || trimmedParam === '') {\n      setConditionTargetError('Pattern cannot be empty')\n      inputRef.current?.focus()\n      return\n    }\n    if (!conditionTargetValidator.isValid) {\n      return\n    }\n\n    onAdd(trimmedParam)\n    inputRef.current!.value = ''\n  }\n\n  const onKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n    if (event.key !== 'Enter') {\n      return\n    }\n\n    event.preventDefault()\n    onSave()\n  }\n\n  // For reasons unknown, calling .focus() causes us to focus, then blur, then focus the text input. The spurious call\n  // to onBlur() causes us to display an unwarranted error messsage. Waiting until the next event loop avoids this.\n  useEffect(() => {\n    setTimeout(() => {\n      inputRef.current?.focus()\n    })\n  }, [])\n\n  return (\n    <Dialog\n      aria-label={title}\n      title={title}\n      subtitle={<span className=\"text-normal text-small color-fg-muted\">{subtitle}</span>}\n      footerButtons={[\n        {content: 'Cancel', buttonType: 'normal', onClick: onClose},\n        {content: createText, onClick: onSave, buttonType: 'primary'},\n      ]}\n      onClose={onClose}\n      width=\"medium\"\n    >\n      <FormControl sx={{flex: 1, mr: 2}}>\n        <FormControl.Label>\n          <span className=\"text-bold\">{subject} naming pattern</span>\n        </FormControl.Label>\n        <TextInput\n          leadingVisual={() =>\n            includeOrExclude === 'include' ? (\n              <Octicon icon={PlusCircleIcon} sx={{color: 'success.fg'}} />\n            ) : (\n              <Octicon icon={XCircleIcon} sx={{color: 'danger.fg'}} />\n            )\n          }\n          ref={inputRef}\n          aria-label=\"Enter new target\"\n          className=\"width-full\"\n          onKeyPress={onKeyPress}\n          onBlur={e => {\n            if (!e.target.value || e.target.value.trim() === '') {\n              setConditionTargetError('Pattern cannot be empty')\n              inputRef.current?.focus()\n              return\n            }\n\n            setConditionTargetError('')\n          }}\n          onChange={e => {\n            {\n              conditionTargetError && setConditionTargetError('')\n            }\n            conditionTargetValidator.validate(e.target.value.trim(), target, rulesetId)\n          }}\n        />\n        {(examplePatterns?.length || 0) > 0 && (\n          <FormControl.Caption>\n            Example patterns: &quot;{examplePatterns!.join('\", \"')}&quot;.\n            {fnmatchHelpUrl && (\n              <>\n                &nbsp;\n                <Link inline target=\"_blank\" href={fnmatchHelpUrl}>\n                  Learn more about fnmatch\n                </Link>\n                .\n              </>\n            )}\n          </FormControl.Caption>\n        )}\n        {conditionTargetValidator.showError && (\n          <FormControl.Validation variant=\"error\" aria-live=\"polite\">\n            Invalid pattern\n          </FormControl.Validation>\n        )}\n        {conditionTargetError && (\n          <FormControl.Validation variant=\"error\">{conditionTargetError}</FormControl.Validation>\n        )}\n      </FormControl>\n    </Dialog>\n  )\n}\n\ntry{ AddTargetDialog.displayName ||= 'AddTargetDialog' } catch {}","import type {FC} from 'react'\nimport type React from 'react'\nimport {useMemo, useState, Fragment, useCallback} from 'react'\nimport type {ConditionParameters, RulesetTarget, TargetType, IncludeExcludeParameters} from '../../../types/rules-types'\nimport {INCLUDE_ALL_PATTERN, DEFAULT_BRANCH_PATTERN} from '../../../types/rules-types'\nimport {TargetsTable, type IncludeExcludeType} from '../TargetsTable'\nimport {ActionList, ActionMenu, FormControl, Octicon, Checkbox} from '@primer/react'\nimport {PlusCircleIcon, XCircleIcon} from '@primer/octicons-react'\nimport {pluralize} from '../../../helpers/string'\nimport {PLURAL_RULESET_TARGETS} from '../../../helpers/constants'\nimport {AddTargetDialog} from './AddTargetDialog'\n\nfunction excludeTargetPrefix(targetType: TargetType, pattern: string) {\n  return targetType === 'ref_name' || pattern === INCLUDE_ALL_PATTERN\n}\n\ninterface IncludeExcludeTargetProps {\n  rulesetId?: number\n  rulesetTarget: RulesetTarget\n  fnmatchHelpUrl?: string\n  parameters: IncludeExcludeParameters\n  panelTitle: string\n  targetType: TargetType\n  readOnly: boolean\n  updateParameters: (parameters: ConditionParameters) => void\n  headerRowText?: string\n  blankslate: {\n    heading: string\n    description?: React.ReactNode\n  }\n}\n\nexport const IncludeExcludeTarget: FC<IncludeExcludeTargetProps> = ({\n  rulesetId,\n  readOnly,\n  rulesetTarget,\n  fnmatchHelpUrl,\n  parameters,\n  panelTitle,\n  targetType,\n  updateParameters,\n  headerRowText,\n  blankslate,\n}) => {\n  const [selectedActionType, setSelectedActionType] = useState('include_target')\n  const [addTargetVisible, setAddTargetVisible] = useState(false)\n\n  const actions = actionOptions(rulesetTarget, targetType)\n  const currentAction = actions.find(option => option.type === selectedActionType) || actions[0]!\n\n  let allLabel: string | undefined\n\n  switch (targetType) {\n    case 'ref_name':\n      allLabel = `All ${pluralize(2, rulesetTarget, PLURAL_RULESET_TARGETS, false)}`\n      break\n    case 'repository_name':\n      allLabel = `All repositories`\n      break\n    case 'organization_name':\n      allLabel = `All organizations`\n      break\n  }\n\n  const toggleProtectedTarget = () => {\n    updateParameters({\n      ...parameters,\n      protected: !parameters.protected,\n    })\n  }\n\n  const onActionSelect = (actionType: string) => {\n    setSelectedActionType(actionType)\n    const action = actions.find(option => option.type === actionType) || actions[0]!\n\n    if (action.openDialog) {\n      setAddTargetVisible(true)\n    } else {\n      addParameter('', actionType)\n    }\n  }\n\n  const addParameter = (param: string, actionType = selectedActionType) => {\n    if (readOnly) {\n      return\n    }\n\n    let trimmedParam = param.trim()\n\n    if (!trimmedParam && actionType !== 'include_default_branch' && actionType !== 'include_all') {\n      return\n    }\n\n    if (targetType === 'ref_name') {\n      switch (rulesetTarget) {\n        case 'branch':\n          trimmedParam = `refs/heads/${trimmedParam}`\n          break\n        case 'tag':\n          trimmedParam = `refs/tags/${trimmedParam}`\n          break\n      }\n    }\n\n    const allPatterns = parameters.include.concat(parameters.exclude)\n\n    if (!allPatterns.includes(trimmedParam)) {\n      if (actionType === 'include_default_branch') {\n        if (!parameters.include.includes(DEFAULT_BRANCH_PATTERN)) {\n          updateParameters({\n            ...parameters,\n            include: [...parameters.include, DEFAULT_BRANCH_PATTERN],\n          })\n        }\n      } else if (actionType === 'include_target') {\n        updateParameters({\n          ...parameters,\n          include: [...parameters.include, trimmedParam],\n        })\n      } else if (actionType === 'include_all') {\n        if (!parameters.include.includes(INCLUDE_ALL_PATTERN)) {\n          updateParameters({\n            ...parameters,\n            include: [...parameters.include, INCLUDE_ALL_PATTERN],\n          })\n        }\n      } else if (actionType === 'exclude_target') {\n        updateParameters({\n          ...parameters,\n          exclude: [...parameters.exclude, trimmedParam],\n        })\n      }\n    }\n  }\n\n  const removeParameter = (pattern_type: 'include' | 'exclude', target: string) => {\n    if (readOnly) {\n      return\n    }\n    const list = (pattern_type === 'include' ? parameters.include : parameters.exclude).filter(p => p !== target)\n\n    const newParameters =\n      pattern_type === 'include'\n        ? {\n            ...parameters,\n            include: list,\n          }\n        : {\n            ...parameters,\n            exclude: list,\n          }\n\n    updateParameters(newParameters)\n  }\n\n  const mapAliasToDisplay = useCallback(\n    (value: string) => {\n      if (value === INCLUDE_ALL_PATTERN) {\n        return allLabel\n      } else if (value === DEFAULT_BRANCH_PATTERN) {\n        return 'Default'\n      } else {\n        return undefined\n      }\n    },\n    [allLabel],\n  )\n\n  const targets = useMemo(() => {\n    return [parameters.include.map(e => ({t: 'include', v: e})), parameters.exclude.map(e => ({t: 'exclude', v: e}))]\n      .flat(1)\n      .map(param => ({\n        type: param.t as IncludeExcludeType,\n        prefix: excludeTargetPrefix(targetType, param.v) ? undefined : 'name',\n        value: param.v,\n        display: mapAliasToDisplay(param.v),\n        displayAsLabel: mapAliasToDisplay(param.v) !== undefined,\n      }))\n  }, [parameters, targetType, mapAliasToDisplay])\n\n  const noGroupActions = actions.filter(a => !a.actionGroup)\n  const actionsByGroup = actions\n    .filter(a => a.actionGroup)\n    .reduce((acc, item) => {\n      const actionList = acc.get(item.actionGroup!) || []\n      actionList.push(item)\n      acc.set(item.actionGroup!, actionList)\n      return acc\n    }, new Map<string, Action[]>())\n\n  return (\n    <>\n      <TargetsTable\n        renderTitle={() => <h3 className=\"Box-title\">{panelTitle}</h3>}\n        renderAction={() => (\n          <ActionMenu>\n            <ActionMenu.Button>Add target</ActionMenu.Button>\n\n            <ActionMenu.Overlay width=\"medium\">\n              <ActionList>\n                {noGroupActions.length > 0 &&\n                  noGroupActions.map(action => (\n                    <ActionList.Item\n                      key={action.type}\n                      onSelect={() => onActionSelect(action.type)}\n                      disabled={action.target ? parameters.include.includes(action.target) : false}\n                    >\n                      <ActionList.LeadingVisual>\n                        {action.includeOrExclude === 'include' ? (\n                          <Octicon icon={PlusCircleIcon} sx={{color: 'success.fg'}} />\n                        ) : (\n                          <Octicon icon={XCircleIcon} sx={{color: 'danger.fg'}} />\n                        )}\n                      </ActionList.LeadingVisual>\n                      {action.text}\n                    </ActionList.Item>\n                  ))}\n                {Array.from(actionsByGroup).map(([group, actionList], index) => (\n                  <Fragment key={group}>\n                    {(noGroupActions.length > 0 || index > 0) && <ActionList.Divider />}\n                    <ActionList.Group variant=\"subtle\">\n                      <ActionList.GroupHeading>{group}</ActionList.GroupHeading>\n                      {actionList.map(action => (\n                        <ActionList.Item key={action.type} onSelect={() => onActionSelect(action.type)}>\n                          <ActionList.LeadingVisual>\n                            {action.includeOrExclude === 'include' ? (\n                              <Octicon icon={PlusCircleIcon} sx={{color: 'success.fg'}} />\n                            ) : (\n                              <Octicon icon={XCircleIcon} sx={{color: 'danger.fg'}} />\n                            )}\n                          </ActionList.LeadingVisual>\n                          {action.text}\n                        </ActionList.Item>\n                      ))}\n                    </ActionList.Group>\n                  </Fragment>\n                ))}\n              </ActionList>\n            </ActionMenu.Overlay>\n          </ActionMenu>\n        )}\n        headerRowText={headerRowText}\n        blankslate={blankslate}\n        targets={targets}\n        onRemove={removeParameter}\n        readOnly={readOnly}\n      />\n\n      {!readOnly && (targetType === 'repository_name' || targetType === 'repository_id') && (\n        <div className=\"py-3\">\n          <FormControl>\n            <Checkbox checked={parameters.protected || false} onChange={toggleProtectedTarget} />\n            <FormControl.Label>Prevent renaming of target repositories</FormControl.Label>\n            <FormControl.Caption>\n              When checked, target repositories can only be renamed by those with bypass permission.\n            </FormControl.Caption>\n          </FormControl>\n        </div>\n      )}\n\n      {readOnly || !addTargetVisible ? null : (\n        <AddTargetDialog\n          rulesetId={rulesetId}\n          onAdd={target => {\n            addParameter(target)\n            setAddTargetVisible(false)\n          }}\n          onClose={() => setAddTargetVisible(false)}\n          target={targetType}\n          includeOrExclude={currentAction.includeOrExclude}\n          rulesetTarget={rulesetTarget}\n          fnmatchHelpUrl={fnmatchHelpUrl}\n        />\n      )}\n    </>\n  )\n}\n\ntype Action = {\n  type: string\n  text: string\n  actionGroup?: string\n  openDialog?: boolean\n  target?: string\n  includeOrExclude: 'include' | 'exclude'\n}\n\nfunction actionOptions(rulesetTarget: RulesetTarget, targetType: TargetType) {\n  const actions: Action[] = []\n\n  if (targetType === 'ref_name') {\n    if (rulesetTarget === 'branch') {\n      actions.push({\n        type: 'include_default_branch',\n        text: 'Include default branch',\n        includeOrExclude: 'include',\n        target: DEFAULT_BRANCH_PATTERN,\n      })\n    }\n\n    actions.push({\n      type: 'include_all',\n      text: `Include all ${pluralize(2, rulesetTarget, PLURAL_RULESET_TARGETS, false)}`,\n      includeOrExclude: 'include',\n      target: INCLUDE_ALL_PATTERN,\n    })\n  }\n\n  actions.push({\n    type: 'include_target',\n    text: `Include by pattern`,\n    actionGroup: 'Target by inclusion or exclusion pattern',\n    openDialog: true,\n    includeOrExclude: 'include',\n  })\n\n  actions.push({\n    type: 'exclude_target',\n    text: `Exclude by pattern`,\n    actionGroup: 'Target by inclusion or exclusion pattern',\n    openDialog: true,\n    includeOrExclude: 'exclude',\n  })\n\n  return actions\n}\n\ntry{ IncludeExcludeTarget.displayName ||= 'IncludeExcludeTarget' } catch {}","import {Pagehead, Text} from '@primer/react'\nimport type {FC} from 'react'\n\ninterface PanelHeaderProps {\n  title: string\n  subtitle: string\n}\n\nexport const PanelHeader: FC<PanelHeaderProps> = ({title, subtitle}) => {\n  return (\n    <>\n      <Pagehead sx={{pb: 2, mb: 2, fontSize: 4, fontWeight: 'normal'}}>{title}</Pagehead>\n      <Text sx={{color: 'fg.muted'}}>{subtitle}</Text>\n    </>\n  )\n}\n\ntry{ PanelHeader.displayName ||= 'PanelHeader' } catch {}","import type {FC} from 'react'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {ReposSelector} from '@github-ui/repos-selector'\nimport type {SimpleRepository, RepositoryIdConditionMetadata, RepositoryIdParameters} from '../../../types/rules-types'\nimport {getRepoSuggestionsForOrg} from '../../../services/api'\nimport {useRelativeNavigation} from '../../../hooks/use-relative-navigation'\nimport {TargetsTable, type IncludeExcludeType} from '../TargetsTable'\n\ninterface RepositoryIdTargetProps {\n  readOnly: boolean\n  parameters: RepositoryIdParameters\n  metadata?: RepositoryIdConditionMetadata\n  updateParameters: (parameters: RepositoryIdParameters) => void\n  headerRowText?: string\n  excludePublicRepos?: boolean\n  blankslate: {\n    heading: string\n    description?: React.ReactNode\n  }\n}\n\nexport const RepositoryIdTarget: FC<RepositoryIdTargetProps> = ({\n  readOnly,\n  parameters,\n  metadata,\n  updateParameters,\n  headerRowText,\n  excludePublicRepos = false,\n  blankslate,\n}) => {\n  const [fetchedMetadata, setFetchedMetadata] = useState<SimpleRepository[]>([])\n\n  const selectedRepos = useMemo(() => {\n    const reposById = (metadata?.repositories || []).concat(fetchedMetadata).reduce(\n      (acc, repo) => {\n        acc[repo.nodeId] = repo\n        return acc\n      },\n      {} as Record<string, SimpleRepository>,\n    )\n\n    return parameters.repository_ids.reduce((acc, id) => {\n      if (reposById[id]) {\n        acc.push(reposById[id])\n      }\n      return acc\n    }, [] as SimpleRepository[])\n  }, [metadata, parameters, fetchedMetadata])\n\n  const {resolvePath} = useRelativeNavigation()\n\n  const queryForRepos = async (query: string) => {\n    return await getRepoSuggestionsForOrg(resolvePath('repo_suggestions'), {\n      query,\n      excludePublicRepos,\n    })\n  }\n\n  const changeRepositories = useCallback(\n    async (newRepos: SimpleRepository[]) => {\n      if (readOnly) {\n        return\n      }\n\n      updateParameters({\n        repository_ids: newRepos.map(r => r.nodeId),\n      })\n      setFetchedMetadata(newRepos)\n    },\n    [readOnly, updateParameters],\n  )\n\n  const removeRepository = (repoNodeId: string) => {\n    if (readOnly) {\n      return\n    }\n    const newRepoIds = parameters.repository_ids.filter(r => r !== repoNodeId)\n\n    updateParameters({\n      repository_ids: newRepoIds,\n    })\n  }\n\n  // If the server does not return the full set of repos that are currently configured, this most likely\n  // means that a repo has been deleted or moved outside of the Organization. In this case, remove it from the\n  // condition so we do not fail ruleset save\n  useEffect(() => {\n    if (selectedRepos.length !== parameters.repository_ids.length) {\n      changeRepositories(selectedRepos)\n    }\n  }, [selectedRepos, parameters, changeRepositories])\n\n  const targets = useMemo(\n    () =>\n      selectedRepos.map(repo => ({\n        type: 'include' as IncludeExcludeType,\n        prefix: 'repo',\n        value: repo.nodeId,\n        display: repo.name,\n      })),\n    [selectedRepos],\n  )\n\n  return (\n    <TargetsTable\n      renderTitle={() => <h3 className=\"Box-title\">Repositories</h3>}\n      renderAction={() => (\n        <ReposSelector\n          currentSelection={selectedRepos}\n          repositoryLoader={queryForRepos}\n          selectionVariant=\"multiple\"\n          selectAllOption={false}\n          onSelect={newSelection => changeRepositories(newSelection as SimpleRepository[])}\n        />\n      )}\n      headerRowText={headerRowText}\n      blankslate={blankslate}\n      targets={targets}\n      onRemove={(_, v) => removeRepository(v)}\n      readOnly={readOnly}\n    />\n  )\n}\n\ntry{ RepositoryIdTarget.displayName ||= 'RepositoryIdTarget' } catch {}","import type {FC, HTMLAttributes, RefObject} from 'react'\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {Button, FormControl, TextInputWithTokens, Truncate} from '@primer/react'\nimport {Dialog} from '@primer/react/experimental'\nimport {CodeIcon, EyeIcon, NoteIcon, RepoForkedIcon, TriangleDownIcon, type Icon} from '@primer/octicons-react'\nimport type {ExtendedItemProps} from '@github-ui/item-picker/ItemPicker'\nimport {ItemPicker} from '@github-ui/item-picker/ItemPicker'\nimport type {PropertyDescriptor, PropertySource} from '../../../types/rules-types'\nimport type {ValueType} from '@github-ui/custom-properties-types'\nimport {LANGUAGES} from '@github-ui/repos-filter/providers'\n\nexport type AddPropertyDialogProps = {\n  properties: PropertyDescriptor[]\n  onAdd: (name: string, source: PropertySource, values: string[]) => void\n  onClose: () => void\n  includeOrExclude: 'include' | 'exclude'\n}\n\ntype TextValueInputProps = {\n  valueInputRef: RefObject<HTMLInputElement>\n  valueBoxKeyHandler: (event: React.KeyboardEvent) => void\n  selectedValueTokens: ValueToken[]\n  removeValue: (tokenId: string | number) => void\n}\n\ntype SelectValueInputProps = {\n  selectedValues: string[]\n  setSelectedValues: (values: string[]) => void\n  setFilterValueText: (filter: string) => void\n}\n\ntype ValueToken = {\n  text: string\n  id: string\n}\n\nconst LANGUAGE_NAMES = LANGUAGES.map(({name}) => name)\n\nexport const AddPropertyDialog: FC<AddPropertyDialogProps> = ({properties, onAdd, onClose, includeOrExclude}) => {\n  const [filterText, setFilterText] = useState('')\n  const [filteredProperties, setFilteredProperties] = useState<PropertyDescriptor[]>([])\n  const [selectedProperty, setSelectedProperty] = useState<PropertyDescriptor | undefined>(undefined)\n  const [showMissing, setShowMissing] = useState<boolean>(false)\n  const [selectedValues, setSelectedValues] = useState<string[]>([])\n  const [filterValueText, setFilterValueText] = useState<string>('')\n\n  const selectedValueTokens: ValueToken[] = useMemo(() => {\n    return selectedValues.map(v => ({\n      text: v,\n      id: v,\n    }))\n  }, [selectedValues])\n\n  const updateSelectedProperty = useCallback((newProperty?: PropertyDescriptor) => {\n    setSelectedValues([])\n    setSelectedProperty(newProperty)\n  }, [])\n\n  const filterProperties = useCallback(\n    async (newFilter: string) => {\n      try {\n        setFilteredProperties(properties.filter(p => p.name.toLowerCase().includes(newFilter.toLowerCase())))\n      } catch (e) {\n        // suppress loading errors\n      }\n    },\n    [properties],\n  )\n\n  useEffect(() => {\n    filterProperties(filterText)\n  }, [filterText, filterProperties])\n\n  const removeValue = useCallback(\n    (tokenId: string | number) => {\n      setSelectedValues(selectedValues.filter(value => value !== tokenId))\n    },\n    [selectedValues],\n  )\n\n  const saveProperty = useCallback(() => {\n    let propertyValues = selectedValues\n    if (selectedProperty?.valueType === 'string' && (valueInputRef.current?.value.length || 0 > 0)) {\n      propertyValues = propertyValues.concat(valueInputRef.current?.value || '')\n    }\n\n    if (!selectedProperty || propertyValues.length === 0) {\n      setShowMissing(true)\n      return\n    }\n\n    onAdd(selectedProperty?.name || '', selectedProperty?.source, propertyValues)\n  }, [selectedValues, selectedProperty, onAdd])\n\n  const selectedPropertyAllowedValues = useMemo(() => {\n    if (!selectedProperty) {\n      return []\n    }\n\n    if (selectedProperty.name === 'language' && selectedProperty.source === 'system') {\n      return LANGUAGE_NAMES\n    }\n\n    switch (selectedProperty.valueType) {\n      case 'true_false':\n        return ['true', 'false']\n      case 'single_select':\n      case 'multi_select':\n        return selectedProperty.allowedValues || []\n      default:\n        return []\n    }\n  }, [selectedProperty])\n\n  const filterValues = selectedPropertyAllowedValues.filter(v =>\n    v.toLowerCase().includes(filterValueText.toLowerCase()),\n  )\n\n  const propertyToItemPickerItem = useCallback(\n    (property: PropertyDescriptor): ExtendedItemProps<PropertyDescriptor> => {\n      const truncationCharLimit = 24\n      let truncatedPropertyName = property.displayName\n\n      if (truncatedPropertyName.length > truncationCharLimit) {\n        truncatedPropertyName = `${truncatedPropertyName.substring(0, truncationCharLimit)}...`\n      }\n\n      return {\n        id: property.displayName,\n        text: truncatedPropertyName,\n        descriptionVariant: 'block',\n        source: property,\n        showDivider: true,\n        leadingVisual: propertyIcons[property.icon],\n      }\n    },\n    [],\n  )\n\n  const valueInputRef = useRef<HTMLInputElement>(null)\n  const valueBoxKeyHandler = useCallback(\n    (event: React.KeyboardEvent) => {\n      // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n      if (event.key === 'Enter' && valueInputRef) {\n        event.preventDefault()\n        setSelectedValues(selectedValues.concat(valueInputRef.current?.value || ''))\n        valueInputRef.current!.value = ''\n      }\n    },\n    [selectedValues],\n  )\n\n  const buttonText = selectedProperty?.displayName\n\n  return (\n    <Dialog\n      title={`${capitalize(includeOrExclude)} repositories by property`}\n      footerButtons={[\n        {content: 'Cancel', buttonType: 'normal', onClick: onClose},\n        {content: 'Add target', onClick: saveProperty, buttonType: 'primary'},\n      ]}\n      onClose={onClose}\n      sx={{width: '500px'}}\n    >\n      <FormControl>\n        <FormControl.Label>\n          <span className=\"text-bold\">Property</span>\n        </FormControl.Label>\n        <ItemPicker\n          renderAnchor={anchorProps => (\n            <Button trailingAction={TriangleDownIcon} alignContent=\"start\" {...anchorProps}>\n              <Truncate title={buttonText || 'Select property'} maxWidth={195}>\n                {buttonText || 'Select property'}\n              </Truncate>\n            </Button>\n          )}\n          placeholderText=\"Search for properties\"\n          items={filteredProperties}\n          enforceAtleastOneSelected={true}\n          selectionVariant=\"single\"\n          initialSelectedItems={selectedProperty ? [selectedProperty] : []}\n          maxVisibleItems={5}\n          height=\"medium\"\n          width={'medium'}\n          onSelectionChange={items => {\n            if (items.length > 0) {\n              updateSelectedProperty(items[0])\n            }\n          }}\n          filterItems={setFilterText}\n          getItemKey={p => `${p.name}-${p.source}`}\n          convertToItemProps={propertyToItemPickerItem}\n        />\n        {showMissing && !selectedProperty && (\n          <FormControl.Validation variant=\"error\" aria-live=\"polite\">\n            Please select a property\n          </FormControl.Validation>\n        )}\n      </FormControl>\n      {selectedProperty && (\n        <FormControl sx={{mt: 2}}>\n          <FormControl.Label>Value</FormControl.Label>\n          <PropertyValueControl\n            valueType={selectedProperty.valueType}\n            items={filterValues}\n            valueInputRef={valueInputRef}\n            valueBoxKeyHandler={valueBoxKeyHandler}\n            selectedValueTokens={selectedValueTokens}\n            removeValue={removeValue}\n            selectedValues={selectedValues}\n            setSelectedValues={setSelectedValues}\n            setFilterValueText={setFilterValueText}\n          />\n          {showMissing && selectedValues.length === 0 && (\n            <FormControl.Validation variant=\"error\" aria-live=\"polite\">\n              Please select at least one value\n            </FormControl.Validation>\n          )}\n        </FormControl>\n      )}\n    </Dialog>\n  )\n}\n\nconst capitalize = (value: string) => value.charAt(0).toUpperCase() + value.slice(1)\n\nconst propertyIcons: Record<string, Icon> = {\n  note: NoteIcon,\n  eye: EyeIcon,\n  'repo-forked': RepoForkedIcon,\n  code: CodeIcon,\n}\n\nfunction PropertyValueControl({\n  valueType,\n  items,\n  valueInputRef,\n  valueBoxKeyHandler,\n  selectedValueTokens,\n  removeValue,\n  selectedValues,\n  setSelectedValues,\n  setFilterValueText,\n}: {\n  valueType: ValueType\n  items: string[]\n} & TextValueInputProps &\n  SelectValueInputProps) {\n  const dropdownProps = {setSelectedValues, selectedValues, setFilterValueText, items}\n\n  switch (valueType) {\n    case 'string':\n      return (\n        <TextInputWithTokens\n          sx={{width: '100%'}}\n          size=\"large\"\n          ref={valueInputRef}\n          onKeyDown={valueBoxKeyHandler}\n          tokens={selectedValueTokens}\n          onTokenRemove={removeValue}\n        />\n      )\n    case 'single_select':\n    case 'multi_select':\n      return (\n        <ValueItemPicker\n          renderAnchor={anchorProps => (\n            <Button alignContent=\"start\" trailingAction={TriangleDownIcon} {...anchorProps}>\n              {selectedValues.length > 0\n                ? selectedValues.length > 1\n                  ? `${selectedValues.length} values selected`\n                  : selectedValues[0]\n                : 'Select a value'}\n            </Button>\n          )}\n          selectionVariant=\"multiple\"\n          {...dropdownProps}\n        />\n      )\n    case 'true_false':\n      return (\n        <ValueItemPicker\n          {...dropdownProps}\n          selectionVariant=\"single\"\n          renderAnchor={anchorProps => (\n            <Button alignContent=\"start\" trailingAction={TriangleDownIcon} {...anchorProps}>\n              {selectedValues.length > 0 ? selectedValues[0] : 'Select a value'}\n            </Button>\n          )}\n        />\n      )\n    default:\n      return null\n  }\n}\n\nfunction ValueItemPicker({\n  renderAnchor,\n  items,\n  selectedValues,\n  selectionVariant,\n  setSelectedValues,\n  setFilterValueText,\n}: SelectValueInputProps & {\n  selectionVariant: 'single' | 'multiple'\n  renderAnchor: (props: HTMLAttributes<HTMLElement>) => JSX.Element\n  items: string[]\n}) {\n  const valueToItemPickerItem = (item: string) => {\n    const truncationCharLimit = 24\n    let truncatedValue = item\n\n    if (truncatedValue.length > truncationCharLimit) {\n      truncatedValue = `${truncatedValue.substring(0, truncationCharLimit)}...`\n    }\n\n    return {\n      id: item,\n      text: truncatedValue,\n      source: item,\n    }\n  }\n\n  return (\n    <ItemPicker\n      renderAnchor={renderAnchor}\n      placeholderText=\"Search for values\"\n      items={items}\n      loading={false}\n      selectionVariant={selectionVariant}\n      initialSelectedItems={selectedValues}\n      onSelectionChange={setSelectedValues}\n      getItemKey={v => v}\n      convertToItemProps={valueToItemPickerItem}\n      filterItems={setFilterValueText}\n    />\n  )\n}\n\ntry{ LANGUAGE_NAMES.displayName ||= 'LANGUAGE_NAMES' } catch {}\ntry{ AddPropertyDialog.displayName ||= 'AddPropertyDialog' } catch {}\ntry{ PropertyValueControl.displayName ||= 'PropertyValueControl' } catch {}\ntry{ ValueItemPicker.displayName ||= 'ValueItemPicker' } catch {}","import type {FC} from 'react'\nimport type React from 'react'\nimport {useCallback, useMemo, useState} from 'react'\nimport type {\n  ConditionParameters,\n  PropertyConfiguration,\n  PropertyDescriptor,\n  PropertySource,\n  RepositoryPropertyParameters,\n  RulesetTarget,\n} from '../../../types/rules-types'\nimport {TargetsTable, type IncludeExcludeType} from '../TargetsTable'\nimport {ActionList, ActionMenu, Flash, Octicon} from '@primer/react'\nimport {PlusCircleIcon, XCircleIcon} from '@primer/octicons-react'\nimport {AddPropertyDialog} from './AddPropertyDialog'\nimport {useRelativeNavigation} from '../../../hooks/use-relative-navigation'\nimport {getAvailableProperties} from '../../../services/api'\n\nexport interface RepositoryPropertyTargetProps {\n  parameters: RepositoryPropertyParameters\n  readOnly: boolean\n  updateParameters: (parameters: ConditionParameters) => void\n  headerRowText?: string\n  rulesetTarget: RulesetTarget\n  blankslate: {\n    heading: string\n    description?: React.ReactNode\n  }\n}\n\nconst INCLUDE_EXCLUDE_VALUES: IncludeExcludeType[] = ['include', 'exclude']\n\nexport const RepositoryPropertyTarget: FC<RepositoryPropertyTargetProps> = ({\n  readOnly,\n  parameters,\n  updateParameters,\n  headerRowText,\n  rulesetTarget,\n  blankslate,\n}) => {\n  const [selectedActionType, setSelectedActionType] = useState<IncludeExcludeType>('include')\n  const [addPropertyVisible, setAddPropertyVisible] = useState(false)\n  const [properties, setProperties] = useState<PropertyDescriptor[]>([])\n  const [arePropertiesFetched, setPropertiesFetched] = useState(false)\n\n  const {resolvePath} = useRelativeNavigation()\n\n  const onActionSelect = async (actionType: IncludeExcludeType) => {\n    setSelectedActionType(actionType)\n    setAddPropertyVisible(true)\n    if (!arePropertiesFetched) {\n      const result = await getAvailableProperties(resolvePath('../available_properties'), rulesetTarget)\n      setProperties(result.properties)\n      setPropertiesFetched(true)\n    }\n  }\n\n  const showLanguageWarning = useMemo(\n    () =>\n      parameters.include.some(p => p.name === 'language' && p.source === 'system') ||\n      parameters.exclude.some(p => p.name === 'language' && p.source === 'system'),\n    [parameters],\n  )\n\n  const addProperty = (name: string, source: PropertySource, values: string[]) => {\n    if (readOnly || name.length === 0 || values.length === 0) {\n      return\n    }\n\n    switch (selectedActionType) {\n      case 'include':\n        if (!parameters.include.some(p => isSameProperty(name, source, p))) {\n          updateParameters({\n            ...parameters,\n            include: [...parameters.include, {name, source, property_values: values}],\n          })\n        }\n        break\n      case 'exclude':\n        if (!parameters.exclude.some(p => isSameProperty(name, source, p))) {\n          updateParameters({\n            ...parameters,\n            exclude: [...parameters.exclude, {name, source, property_values: values}],\n          })\n        }\n        break\n    }\n  }\n\n  const removeProperty = useCallback(\n    (type: IncludeExcludeType, name: string, source: PropertySource | undefined) => {\n      if (readOnly || !name) {\n        return\n      }\n\n      switch (type) {\n        case 'include':\n          updateParameters({\n            ...parameters,\n            include: parameters.include.filter(p => !isSameProperty(name, source, p)),\n          })\n          break\n        case 'exclude':\n          updateParameters({\n            ...parameters,\n            exclude: parameters.exclude.filter(p => !isSameProperty(name, source, p)),\n          })\n          break\n      }\n    },\n    [parameters, readOnly, updateParameters],\n  )\n\n  const targets = useMemo(() => {\n    function toTargetItem(property: PropertyConfiguration, type: IncludeExcludeType) {\n      const value = property.property_values.join(', ')\n\n      const prefix = property.source === 'system' ? property.name : `props.${property.name}`\n\n      return {\n        type,\n        prefix,\n        value,\n        display: property.property_values,\n        onRemove: () => removeProperty(type, property.name, property.source),\n      }\n    }\n\n    return [\n      ...parameters.include.map(p => toTargetItem(p, 'include')),\n      ...parameters.exclude.map(p => toTargetItem(p, 'exclude')),\n    ]\n  }, [parameters, removeProperty])\n\n  const filteredProperties: PropertyDescriptor[] = properties.filter(p => {\n    const existingProperties = selectedActionType === 'include' ? parameters.include : parameters.exclude\n    return !existingProperties.some(ep => ep.name === p.name && (ep.source || 'custom') === p.source)\n  })\n\n  return (\n    <>\n      <TargetsTable\n        renderTitle={() => <h3 className=\"Box-title\">Target by repository properties</h3>}\n        renderAction={() => (\n          <ActionMenu>\n            <ActionMenu.Button>Add a target</ActionMenu.Button>\n\n            <ActionMenu.Overlay width=\"medium\">\n              <ActionList>\n                {INCLUDE_EXCLUDE_VALUES.map(includeOrExclude => (\n                  <ActionList.Item key={includeOrExclude} onSelect={() => onActionSelect(includeOrExclude)}>\n                    <ActionList.LeadingVisual>\n                      {includeOrExclude === 'include' ? (\n                        <Octicon icon={PlusCircleIcon} sx={{color: 'success.fg'}} />\n                      ) : (\n                        <Octicon icon={XCircleIcon} sx={{color: 'danger.fg'}} />\n                      )}\n                    </ActionList.LeadingVisual>\n                    {includeOrExclude === 'include' ? 'Include by property' : 'Exclude by property'}\n                  </ActionList.Item>\n                ))}\n              </ActionList>\n            </ActionMenu.Overlay>\n          </ActionMenu>\n        )}\n        blankslate={blankslate}\n        headerRowText={headerRowText}\n        targets={targets}\n        readOnly={readOnly}\n      />\n\n      {readOnly || !addPropertyVisible ? null : (\n        <AddPropertyDialog\n          properties={filteredProperties}\n          onAdd={(name, source, values) => {\n            addProperty(name, source, values)\n            setAddPropertyVisible(false)\n          }}\n          onClose={() => setAddPropertyVisible(false)}\n          includeOrExclude={selectedActionType}\n        />\n      )}\n\n      {showLanguageWarning && (\n        <Flash\n          sx={{\n            fontSize: 0,\n            p: 2,\n            my: 2,\n            borderRadius: 2,\n            borderWidth: 1,\n            borderStyle: 'solid',\n            borderColor: 'warning.muted',\n          }}\n        >\n          Please note that the &apos;language&apos; property is determined by the current contents of the repository. As\n          new commits are made the language may change, which could affect the evaluation of this property.\n        </Flash>\n      )}\n    </>\n  )\n}\n\nfunction isSameProperty(name: string, source: PropertySource = 'custom', property: PropertyConfiguration) {\n  return property.name === name && (property.source || 'custom') === source\n}\n\ntry{ RepositoryPropertyTarget.displayName ||= 'RepositoryPropertyTarget' } catch {}","import type {FC} from 'react'\nimport type {\n  ConditionParameters,\n  RulesetTarget,\n  RepositoryIdParameters,\n  RepositoryIdConditionMetadata,\n  IncludeExcludeParameters,\n  RepositoryPropertyParameters,\n  TargetType,\n} from '../../../types/rules-types'\nimport {INCLUDE_ALL_PATTERN} from '../../../types/rules-types'\nimport {IncludeExcludeTarget} from './IncludeExcludeTarget'\nimport {RepositoryIdTarget} from './RepositoryIdTarget'\nimport {TargetsTable} from '../TargetsTable'\nimport {RepositoryPropertyTarget} from './RepositoryPropertyTarget'\nimport {isAllCondition} from '../../../helpers/conditions'\n\nconst PUSH_RULESET_TARGET_INFO = 'Push rulesets only apply to private repositories and their forks'\n\nexport type RepositoryTargetProps = {\n  rulesetId?: number\n  readOnly: boolean\n  fnmatchHelpUrl?: string\n  rulesetTarget: RulesetTarget\n  targetType: TargetType\n  parameters: ConditionParameters\n  metadata?: object\n  updateParameters: (parameters: ConditionParameters) => void\n}\n\nexport const RepositoryTarget: FC<RepositoryTargetProps> = ({\n  rulesetId,\n  readOnly,\n  fnmatchHelpUrl,\n  rulesetTarget,\n  targetType,\n  parameters,\n  metadata,\n  updateParameters,\n}) => {\n  const target = isAllCondition(targetType, parameters) ? 'all_repos' : targetType\n  return target === 'all_repos' && !readOnly ? null : (\n    <div>\n      {target === 'repository_name' ? (\n        <IncludeExcludeTarget\n          rulesetId={rulesetId}\n          readOnly={readOnly}\n          rulesetTarget={rulesetTarget}\n          fnmatchHelpUrl={fnmatchHelpUrl}\n          parameters={parameters as IncludeExcludeParameters}\n          panelTitle=\"Targeting criteria\"\n          targetType=\"repository_name\"\n          updateParameters={updateParameters}\n          headerRowText={rulesetTarget === 'push' ? PUSH_RULESET_TARGET_INFO : undefined}\n          blankslate={{\n            heading: 'No repository targets have been added yet',\n          }}\n        />\n      ) : target === 'repository_id' ? (\n        <RepositoryIdTarget\n          readOnly={readOnly}\n          parameters={parameters as RepositoryIdParameters}\n          metadata={metadata as RepositoryIdConditionMetadata | undefined}\n          updateParameters={updateParameters}\n          headerRowText={rulesetTarget === 'push' ? PUSH_RULESET_TARGET_INFO : undefined}\n          excludePublicRepos={rulesetTarget === 'push'}\n          blankslate={{\n            heading: 'No repository targets have been added yet',\n            description: !readOnly ? (\n              <>Repository targeting determines which repositories will be protected by this ruleset.</>\n            ) : undefined,\n          }}\n        />\n      ) : target === 'repository_property' ? (\n        <RepositoryPropertyTarget\n          readOnly={readOnly}\n          parameters={parameters as RepositoryPropertyParameters}\n          updateParameters={updateParameters}\n          headerRowText={rulesetTarget === 'push' ? PUSH_RULESET_TARGET_INFO : undefined}\n          rulesetTarget={rulesetTarget}\n          blankslate={{\n            heading: 'No repository targets have been added yet',\n            description: !readOnly ? (\n              <>Repository targeting determines which repositories will be protected by this ruleset.</>\n            ) : undefined,\n          }}\n        />\n      ) : (\n        <TargetsTable\n          renderTitle={() => <h3 className=\"Box-title\">Repositories</h3>}\n          blankslate={{\n            heading: 'No repository targets have been added yet',\n            description: !readOnly ? (\n              <>Repository targeting determines which repositories will be protected by this ruleset.</>\n            ) : undefined,\n          }}\n          headerRowText={rulesetTarget === 'push' ? PUSH_RULESET_TARGET_INFO : undefined}\n          targets={[{type: 'include', value: INCLUDE_ALL_PATTERN}]}\n          readOnly\n        />\n      )}\n    </div>\n  )\n}\n\ntry{ RepositoryTarget.displayName ||= 'RepositoryTarget' } catch {}","import {Box, Flash} from '@primer/react'\nimport type {BetterSystemStyleObject} from '@primer/react/lib-esm/sx'\nimport type {RefObject, ReactNode} from 'react'\n\n/**\n * Props for a generic error flash component in the ruleset form\n * @param {ReactNode} props.children\n * @param {RefObject<HTMLDivElement>} [props.errorRef] Use this ref to focus on the error\n * @param {string} props.errorId\n *   errorId is a unique identifier used to reference the rule input/target,\n *   it should be the same value as the aria-describedby attribute in the input/target element\n * @param {BetterSystemStyleObject} [props.sx] Styles for flash container\n * @returns {JSX.Element}\n */\nexport function RulesetFormErrorFlash({\n  errorId,\n  children,\n  errorRef,\n  sx,\n}: {\n  children: ReactNode\n  errorRef?: RefObject<HTMLDivElement>\n  errorId: string\n  sx?: BetterSystemStyleObject\n}): JSX.Element {\n  return (\n    <Box sx={{display: 'flex', gap: 2, flexDirection: 'column', my: 2, ...sx}}>\n      <Flash ref={errorRef} variant=\"danger\" sx={{display: 'flex', alignItems: 'center'}} id={errorId} tabIndex={0}>\n        {children}\n      </Flash>\n    </Box>\n  )\n}\n\ntry{ RulesetFormErrorFlash.displayName ||= 'RulesetFormErrorFlash' } catch {}","import {useMemo} from 'react'\nimport type {RuleSchema, ValidationError} from '../types/rules-types'\n\ntype FilterByError = {\n  args: 'error'\n  /**\n   * A function that returns whether or not an error is applicable\n   * @param {ValidationError} error The error to check\n   * @returns {boolean} Whether or not the error is applicable\n   */\n  func: (error: ValidationError) => boolean\n}\n\ntype FilterByErrorAndField = {\n  args: 'errorAndField'\n  /**\n   * A function that returns whether or not an error is applicable\n   * @param {ValidationError} error The error to check\n   * @param {RuleSchema['parameterSchema']['fields'][0]} [field] The field that the error may be associated with\n   * @returns {boolean} Whether or not the error is applicable\n   */\n  func: (error: ValidationError, field?: RuleSchema['parameterSchema']['fields'][0]) => boolean\n}\n\n// Specify whether or not the filter function requires a field argumenmt in addition to the error argument\nexport type ErrorFilterFunction = FilterByError | FilterByErrorAndField\n\n// This default filter is used to ensure that non-custom ui control errors are passed down to the rule row inline form control validation\nfunction removeNonUIControlErrors(error: ValidationError, field?: RuleSchema['parameterSchema']['fields'][0]): boolean {\n  if (!field) {\n    return false\n  }\n  if (!field.ui_control && (field.type === 'string' || field.type === 'integer')) {\n    return true\n  }\n  return false\n}\n\n/**\n * This hook is used to register expected validation errors\n * Registering errors allows for custom error handling\n * The caller can decide what to do with the errors, whether that's nothing or displaying them in a custom way.\n * @param {ValidationError[]} props.errors The errors to register\n * @param {RuleSchema['parameterSchema']['fields']} props.fields The fields of the rule, as defined by the parameter schema\n * @param {Record<string, ErrorFilterFunction>} props.filters\n *   An object with unique keys, each mapping to a function that returns whether or not a provided is applicable to that filter function.\n *   This registration is necessary to handle errors in custom UI form controls.\n *   Errors that are not registered (not applicable to any filters) will be shown in the error component for the rule (which shows below the rule checkbox).\n *   Filters are executed in the order they are provided, registering the error with the first filter that returns true.\n * @param {boolean} [props.useDefaultFilters=true]\n *   Whether or not to use the default filters that are always run after the custom filters.\n *   The default filters will register any error associated with a standard UI control (string or integer) that is not associated with a custom UI control.\n * @returns {Object} An object containing the registered errors mapped to the key they are associated with as well as the remaining unregistered errors\n * @property {ValidationError[]} [key] - An array of ValidationError for a specific key.\n * @property {ValidationError[]} unregistered - An array of ValidationError that are unregistered.\n */\nexport const useRegisterErrors = ({\n  errors,\n  fields,\n  filters,\n  useDefaultFilters = true,\n}: {\n  errors: ValidationError[]\n  fields: RuleSchema['parameterSchema']['fields']\n  // Filters to register known errors\n  filters?: Record<string, ErrorFilterFunction>\n  // Default filters that are run after the custom filters\n  useDefaultFilters?: boolean\n}): {\n  [key: string]: ValidationError[]\n  unregistered: ValidationError[]\n} => {\n  return useMemo(() => {\n    if (useDefaultFilters) {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      filters = {\n        ...filters,\n        removeNonUIControlErrors: {\n          args: 'errorAndField',\n          func: removeNonUIControlErrors,\n        },\n      }\n    }\n\n    // If there are no filters than all errors are unregistered\n    if (typeof filters === 'undefined') {\n      return {\n        unregistered: errors,\n      }\n    }\n\n    const [registered, unregistered] = Object.keys(filters).reduce(\n      ([reg, unreg], filterType) => {\n        // There are no more unregistered errors, so we can return the registered errors\n        if (unreg.length === 0) {\n          return [reg, unreg]\n        }\n        const [passing, failing] = unreg.reduce(\n          ([pass, fail], error) => {\n            const field = fields.find(f => f.name === error.field)\n            return filters && typeof filters[filterType] !== 'undefined'\n              ? (\n                  filters[filterType]['args'] === 'errorAndField' // the previous condition checks to ensure the function is not undefined\n                    ? filters[filterType]['func'](error, field)\n                    : filters[filterType]['func'](error)\n                )\n                ? [[...pass, error], fail]\n                : [pass, [...fail, error]]\n              : ([pass, fail] as [ValidationError[], ValidationError[]]) // if we don't have a filter (although we should), return original pass and fail args\n          },\n          [[], []] as [ValidationError[], ValidationError[]],\n        )\n        // Passing errors are registered, so add them to the registered object based on their filtered type\n        // failing errors are the remaining errors that haven't passed any filters\n        return [{...reg, [`${filterType}`]: passing}, [...failing]]\n      },\n      [{}, errors] as [Record<string, ValidationError[]>, ValidationError[]],\n    )\n    return {\n      ...registered,\n      unregistered,\n    }\n  }, [errors, fields, filters])\n}\n","import {useRegisterErrors, type ErrorFilterFunction} from '../../../hooks/use-register-errors'\nimport type {RegisteredRuleErrorComponent, ValidationError} from '../../../types/rules-types'\nimport {RulesetFormErrorFlash} from '../../RulesetFormErrorFlash'\n\nconst repositoryConditionsFilter: Record<string, ErrorFilterFunction> = {\n  unexpectedType: {\n    args: 'error',\n    func: (error: ValidationError) => {\n      if (\n        error.field === 'repository_id' &&\n        error.message === 'Invalid parameter repository_ids: repository ids cannot be empty'\n      ) {\n        return true\n      }\n      return false\n    },\n  },\n}\nexport const RepositoryConditionsError = ({\n  errors,\n  errorId,\n  errorRef,\n}: Omit<RegisteredRuleErrorComponent, 'sourceType' | 'fields'>) => {\n  const parsedErrors = useRegisterErrors({errors, fields: [], filters: repositoryConditionsFilter})\n  let message: string | undefined = undefined\n  if (parsedErrors.unexpectedType && parsedErrors.unexpectedType.length > 0) {\n    message = 'Repository conditions cannot be empty'\n  } else if (parsedErrors.unregistered && parsedErrors.unregistered.length > 0) {\n    message = parsedErrors.unregistered[0]?.message || 'An error occurred'\n  }\n  return (\n    (message && (\n      <RulesetFormErrorFlash errorId={errorId} errorRef={errorRef}>\n        {message}\n      </RulesetFormErrorFlash>\n    )) ||\n    null\n  )\n}\n\ntry{ RepositoryConditionsError.displayName ||= 'RepositoryConditionsError' } catch {}","import {Flash, Octicon} from '@primer/react'\nimport {InfoIcon} from '@primer/octicons-react'\nimport {useFeatureFlag} from '@github-ui/react-core/use-feature-flag'\n\nexport const PushRulePublicTargetingBanner = () => {\n  const excludePublicReposFromTargeting = useFeatureFlag('rules_exclude_public_repositories_from_targeting')\n  if (!excludePublicReposFromTargeting) {\n    return null\n  }\n  return (\n    <Flash>\n      <div className=\"d-flex flex-row flex-items-center\">\n        <Octicon icon={InfoIcon} />\n        <span>Push rulesets only apply to private or internal repositories and their forks.</span>\n      </div>\n    </Flash>\n  )\n}\n\ntry{ PushRulePublicTargetingBanner.displayName ||= 'PushRulePublicTargetingBanner' } catch {}","import type {PropertyConfiguration, RepositoryPropertyParameters} from '../types/rules-types'\n\nexport function buildQueryForProperty(property: PropertyConfiguration, negationPrefix: string): string {\n  const valueString = property.property_values.map(quoteIfNeeded).join(',')\n  const propPrefix = property.source === 'system' ? '' : 'props.'\n  return `${negationPrefix}${propPrefix}${property.name}:${valueString}`\n}\n\nfunction quoteIfNeeded(value: string) {\n  return value.includes(' ') ? `\"${value}\"` : value\n}\n\nexport function buildQueryForAllProperties(properties: RepositoryPropertyParameters): string {\n  const includeParts = properties.include.map(property => buildQueryForProperty(property, ''))\n  const excludeParts = properties.exclude.map(property => buildQueryForProperty(property, '-'))\n\n  return [...includeParts, ...excludeParts].join(' ')\n}\n","import {useCallback, useMemo, useState} from 'react'\nimport {Button, SelectPanel} from '@primer/react'\nimport {OrganizationIcon, TriangleDownIcon} from '@primer/octicons-react'\nimport {debounce} from '@github/mini-throttle'\nimport {GitHubAvatar} from '@github-ui/github-avatar'\n\ntype Organization = {\n  id: number\n  nodeId: string\n  name: string\n}\n\nfunction alreadySelected(nodeId: string, selectedOrgs: Organization[]) {\n  return selectedOrgs.some(({nodeId: matchingNodeId}) => matchingNodeId === nodeId)\n}\n\nfunction getSelectedOrg(nodeId: string, selectedOrgs: Organization[]) {\n  return selectedOrgs.find(({nodeId: matchingNodeId}) => matchingNodeId === nodeId)\n}\n\nexport type OrgSelectorProps = {\n  baseAvatarUrl: string\n  selectedOrgs: Organization[]\n  selectOrg: (id: Organization['id'], nodeId: Organization['nodeId'], name: Organization['name']) => void\n  removeOrg: (nodeId: Organization['nodeId']) => void\n  orgLoader: (q: string) => Promise<Organization[]>\n}\n\nexport const OrgSelector = ({baseAvatarUrl, selectedOrgs, selectOrg, removeOrg, orgLoader}: OrgSelectorProps) => {\n  const [suggestions, setSuggestions] = useState<Organization[]>([])\n  const suggestionItems = useMemo(() => {\n    const mappedSuggestions = suggestions.map(s => ({\n      text: s.name,\n      id: JSON.stringify(s),\n      leadingVisual: () => <GitHubAvatar alt={s.name} src={`${baseAvatarUrl}/u/${s.id}`} />,\n      onAction: () => {\n        const orgToRemove = getSelectedOrg(s.nodeId, selectedOrgs)\n        if (orgToRemove) {\n          removeOrg(orgToRemove.nodeId)\n        } else {\n          selectOrg(s.id, s.nodeId, s.name)\n        }\n      },\n    }))\n    return mappedSuggestions\n  }, [suggestions, selectedOrgs, selectOrg, removeOrg, baseAvatarUrl])\n  const [isLoading, setIsLoading] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [filter, setFilter] = useState('')\n\n  const onOpen = async () => {\n    if (!open) {\n      setOpen(true)\n      setIsLoading(true)\n      setSuggestions(await orgLoader(''))\n      setIsLoading(false)\n    } else {\n      setOpen(false)\n    }\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounceOrgSuggestions = useCallback(\n    debounce(async (newFilter: string) => {\n      if (newFilter === '') {\n        setSuggestions(await orgLoader(''))\n      } else {\n        setSuggestions(await orgLoader(newFilter))\n      }\n    }, 200),\n    [orgLoader, setSuggestions],\n  )\n\n  return (\n    <SelectPanel\n      loading={isLoading}\n      title=\"Select organizations\"\n      renderAnchor={({'aria-labelledby': ariaLabelledBy, ...anchorProps}) => (\n        <Button\n          leadingVisual={OrganizationIcon}\n          trailingVisual={TriangleDownIcon}\n          aria-labelledby={` ${ariaLabelledBy}`}\n          {...anchorProps}\n          aria-haspopup=\"dialog\"\n        >\n          Select organizations\n        </Button>\n      )}\n      open={open}\n      onOpenChange={onOpen}\n      items={suggestionItems}\n      selected={suggestionItems.filter(item => {\n        if (typeof item.id === 'string') {\n          const s = JSON.parse(item.id)\n          return alreadySelected(s.nodeId, selectedOrgs)\n        }\n      })}\n      /* This is a no-op because we fetch org suggestions from the server as the user types.\n       We instead handle this with each item's onAction prop. */\n      onSelectedChange={() => {}}\n      placeholderText=\"Filter organizations\"\n      filterValue={filter}\n      onFilterChange={f => {\n        setFilter(f)\n        debounceOrgSuggestions(f)\n      }}\n      overlayProps={{\n        width: 'medium',\n        height: 'medium',\n      }}\n    />\n  )\n}\n\ntry{ OrgSelector.displayName ||= 'OrgSelector' } catch {}","import type {FC} from 'react'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {OrgSelector} from '@github-ui/org-selector'\nimport type {\n  OrganizationIdParameters,\n  OrganizationIdConditionMetadata,\n  SimpleOrganization,\n  RulesetRoutePayload,\n} from '../../../types/rules-types'\nimport {useRelativeNavigation} from '../../../hooks/use-relative-navigation'\nimport {TargetsTable, type IncludeExcludeType} from '../TargetsTable'\nimport {getOrgSuggestionsForEnterprise} from '../../../services/api'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\n\ninterface OrganizationIdTargetProps {\n  readOnly: boolean\n  parameters: OrganizationIdParameters\n  metadata?: OrganizationIdConditionMetadata\n  updateParameters: (parameters: OrganizationIdParameters) => void\n  headerRowText?: string\n  excludePublicRepos?: boolean\n  blankslate: {\n    heading: string\n    description?: React.ReactNode\n  }\n}\n\nexport const OrganizationIdTarget: FC<OrganizationIdTargetProps> = ({\n  readOnly,\n  parameters,\n  metadata,\n  updateParameters,\n  headerRowText,\n  blankslate,\n}) => {\n  const {baseAvatarUrl} = useRoutePayload<RulesetRoutePayload>()\n  const [fetchedMetadata, setFetchedMetadata] = useState<SimpleOrganization[]>([])\n\n  const selectedOrgs = useMemo(() => {\n    const orgsById = (metadata?.organizations || []).concat(fetchedMetadata).reduce(\n      (acc, org) => {\n        acc[org.nodeId] = org\n        return acc\n      },\n      {} as Record<string, SimpleOrganization>,\n    )\n\n    return parameters.organization_ids.reduce((acc, id) => {\n      if (orgsById[id]) {\n        acc.push(orgsById[id])\n      }\n      return acc\n    }, [] as SimpleOrganization[])\n  }, [metadata, parameters, fetchedMetadata])\n\n  const {resolvePath} = useRelativeNavigation()\n\n  const queryForOrgs = async (query: string) => {\n    return await getOrgSuggestionsForEnterprise(resolvePath('org_suggestions'), {query})\n  }\n\n  const changeOrgs = useCallback(\n    async (newOrgs: SimpleOrganization[]) => {\n      if (readOnly) {\n        return\n      }\n\n      updateParameters({\n        organization_ids: newOrgs.map(o => o.nodeId),\n      })\n      setFetchedMetadata(newOrgs)\n    },\n    [readOnly, updateParameters],\n  )\n\n  // If the server does not return the full set of repos that are currently configured, this most likely\n  // means that an org has been deleted or moved outside of the Enterprise. In this case, remove it from the\n  // condition so we do not fail ruleset save\n  useEffect(() => {\n    if (selectedOrgs.length !== parameters.organization_ids.length) {\n      changeOrgs(selectedOrgs)\n    }\n  }, [selectedOrgs, parameters, changeOrgs])\n\n  const selectOrg = (id: number, nodeId: string, name: string) => {\n    if (!readOnly) {\n      updateParameters({organization_ids: [...parameters.organization_ids, nodeId]})\n      setFetchedMetadata([...fetchedMetadata, {id, nodeId, name}])\n    }\n  }\n\n  const removeOrg = (orgNodeId: string) => {\n    if (!readOnly) {\n      updateParameters({organization_ids: parameters.organization_ids.filter(o => o !== orgNodeId)})\n      setFetchedMetadata(fetchedMetadata.filter(f => f.nodeId !== orgNodeId))\n    }\n  }\n\n  const targets = useMemo(\n    () =>\n      selectedOrgs.map(org => ({\n        type: 'include' as IncludeExcludeType,\n        prefix: 'org',\n        value: org.nodeId,\n        display: org.name,\n      })),\n    [selectedOrgs],\n  )\n\n  return (\n    <TargetsTable\n      renderTitle={() => <h3 className=\"Box-title\">Organizations</h3>}\n      renderAction={() => (\n        <OrgSelector\n          baseAvatarUrl={baseAvatarUrl}\n          selectedOrgs={selectedOrgs}\n          selectOrg={selectOrg}\n          removeOrg={removeOrg}\n          orgLoader={queryForOrgs}\n        />\n      )}\n      headerRowText={headerRowText}\n      blankslate={blankslate}\n      targets={targets}\n      onRemove={(_, v) => removeOrg(v)}\n      readOnly={readOnly}\n    />\n  )\n}\n\ntry{ OrganizationIdTarget.displayName ||= 'OrganizationIdTarget' } catch {}","import {useCallback, type FC} from 'react'\nimport type {\n  ConditionParameters,\n  RulesetTarget,\n  IncludeExcludeParameters,\n  TargetType,\n  OrganizationIdConditionMetadata,\n  OrganizationIdParameters,\n} from '../../../types/rules-types'\nimport {IncludeExcludeTarget} from './IncludeExcludeTarget'\nimport {isAllCondition} from '../../../helpers/conditions'\nimport {OrganizationIdTarget} from './OrganizationIdTarget'\nimport {Checkbox, FormControl} from '@primer/react'\n\nconst PUSH_RULESET_TARGET_INFO = 'Push rulesets only apply to private repositories and their forks'\n\nexport type OrganizationTargetProps = {\n  rulesetId?: number\n  readOnly: boolean\n  fnmatchHelpUrl?: string\n  rulesetTarget: RulesetTarget\n  targetType: TargetType\n  parameters: ConditionParameters\n  metadata?: object\n  updateParameters: (parameters: ConditionParameters) => void\n  supportsEmuTargeting: boolean\n}\n\nexport const OrganizationTarget: FC<OrganizationTargetProps> = ({\n  rulesetId,\n  readOnly,\n  fnmatchHelpUrl,\n  rulesetTarget,\n  targetType,\n  parameters,\n  metadata,\n  updateParameters,\n  supportsEmuTargeting,\n}) => {\n  const includeEmuAccounts = (parameters as IncludeExcludeParameters | OrganizationIdParameters).include_emu_accounts\n  const toggleIncludeEmuAccounts = useCallback(() => {\n    updateParameters({\n      ...parameters,\n      include_emu_accounts: !includeEmuAccounts,\n    })\n  }, [includeEmuAccounts, parameters, updateParameters])\n\n  const target = isAllCondition(targetType, parameters) ? 'all_orgs' : targetType\n  return (\n    <div>\n      {target === 'organization_name' ? (\n        <IncludeExcludeTarget\n          rulesetId={rulesetId}\n          readOnly={readOnly}\n          rulesetTarget={rulesetTarget}\n          fnmatchHelpUrl={fnmatchHelpUrl}\n          parameters={parameters as IncludeExcludeParameters}\n          panelTitle=\"Targeting criteria\"\n          targetType=\"organization_name\"\n          updateParameters={updateParameters}\n          headerRowText={rulesetTarget === 'push' ? PUSH_RULESET_TARGET_INFO : undefined}\n          blankslate={{\n            heading: 'No organization targets have been added yet',\n          }}\n        />\n      ) : target === 'organization_id' ? (\n        <OrganizationIdTarget\n          readOnly={readOnly}\n          parameters={parameters as OrganizationIdParameters}\n          metadata={metadata as OrganizationIdConditionMetadata | undefined}\n          updateParameters={updateParameters}\n          headerRowText={rulesetTarget === 'push' ? PUSH_RULESET_TARGET_INFO : undefined}\n          blankslate={{\n            heading: 'No organization targets have been added yet',\n            description: !readOnly ? (\n              <>Organization targeting determines which repositories will be protected by this ruleset.</>\n            ) : undefined,\n          }}\n        />\n      ) : null}\n\n      {!readOnly && supportsEmuTargeting && (\n        <div className={target === 'all_orgs' ? 'pb-3' : 'py-3'}>\n          <FormControl>\n            <Checkbox checked={includeEmuAccounts || false} onChange={toggleIncludeEmuAccounts} />\n            <FormControl.Label>Target all enterprise managed user accounts</FormControl.Label>\n            <FormControl.Caption>\n              If enabled, this ruleset will also apply to all repositories owned by enterprise managed users.\n            </FormControl.Caption>\n          </FormControl>\n        </div>\n      )}\n    </div>\n  )\n}\n\ntry{ OrganizationTarget.displayName ||= 'OrganizationTarget' } catch {}","import {ActionList, ActionMenu, Label} from '@primer/react'\nimport {isAllCondition} from '../../helpers/conditions'\nimport {INCLUDE_ALL_PATTERN} from '../../types/rules-types'\nimport type {\n  Condition,\n  ConditionParameters,\n  ExpandedTargetType,\n  ExpandedOrgTargetType,\n  ExpandedRepoTargetType,\n} from '../../types/rules-types'\n\nconst REPO_TARGET_OPTIONS: Option[] = [\n  {\n    condition: 'all_repos',\n    name: 'All repositories',\n    description: 'Target all repositories within the organization',\n    beta: false,\n  },\n  {\n    condition: 'repository_name',\n    name: 'Dynamic list by name',\n    description: 'Target repositories based on name',\n    beta: false,\n  },\n  {\n    condition: 'repository_property',\n    name: 'Dynamic list by property',\n    description: 'Target repositories based on properties',\n    beta: false,\n  },\n  {\n    condition: 'repository_id',\n    name: 'Select repositories',\n    description: `Target a specific list of selected repositories`,\n    beta: false,\n  },\n]\n\nexport function RepositoryTargetTypeSelector({\n  excludeConditions = [],\n  currentRepoCondition,\n  setRepoCondition,\n}: {\n  excludeConditions?: ExpandedTargetType[]\n  currentRepoCondition: Condition\n  setRepoCondition: (val: ExpandedRepoTargetType) => void\n}) {\n  const selectedTargetType = isAllCondition(currentRepoCondition.target, currentRepoCondition.parameters)\n    ? 'all_repos'\n    : currentRepoCondition.target\n\n  const options = REPO_TARGET_OPTIONS.filter(({condition}) => !excludeConditions.includes(condition))\n\n  return (\n    <TargetTypeSelector\n      selectedTargetType={selectedTargetType}\n      selectOption={(val: Option) => setRepoCondition(val.condition as ExpandedRepoTargetType)}\n      options={options}\n    />\n  )\n}\n\nconst ORG_TARGET_OPTIONS: Option[] = [\n  {\n    condition: 'all_orgs',\n    name: 'All organizations',\n    description: 'Target all organizations within the enterprise',\n    beta: false,\n  },\n  {\n    condition: 'organization_name',\n    name: 'Dynamic list by name',\n    description: 'Target organizations based on name',\n    beta: false,\n  },\n  {\n    condition: 'organization_id',\n    name: 'Select organizations',\n    description: `Target a specific list of selected organizations`,\n    beta: false,\n  },\n]\n\nexport function OrganizationTargetTypeSelector({\n  currentOrgCondition,\n  setOrgCondition,\n}: {\n  currentOrgCondition: Condition\n  setOrgCondition: (val: ExpandedOrgTargetType) => void\n}) {\n  const selectedTargetType = isAllCondition(currentOrgCondition.target, currentOrgCondition.parameters)\n    ? 'all_orgs'\n    : currentOrgCondition.target\n\n  return (\n    <TargetTypeSelector\n      selectedTargetType={selectedTargetType}\n      selectOption={(val: Option) => setOrgCondition(val.condition as ExpandedOrgTargetType)}\n      options={ORG_TARGET_OPTIONS}\n    />\n  )\n}\n\ntype Option = {\n  condition: ExpandedTargetType\n  name: string\n  description: string\n  beta: boolean\n}\n\nfunction TargetTypeSelector({\n  selectedTargetType,\n  selectOption,\n  options,\n}: {\n  selectedTargetType: ExpandedTargetType\n  selectOption: (val: Option) => void\n  options: Option[]\n}) {\n  const selectedOption = options.find(o => o.condition === selectedTargetType) || options[0]!\n\n  return (\n    <ActionMenu>\n      <ActionMenu.Button>\n        <div className=\"d-flex gap-1\">\n          <span className=\"text-normal\">Target:</span>\n          <span className=\"text-bold\">{selectedOption.name}</span>\n        </div>\n      </ActionMenu.Button>\n      <ActionMenu.Overlay width=\"medium\">\n        <ActionList selectionVariant=\"single\">\n          {options.map(option => (\n            <ActionList.Item\n              selected={option === selectedOption}\n              key={option.name}\n              onSelect={() => option !== selectedOption && selectOption(option)}\n            >\n              {option.name}\n              <ActionList.Description variant=\"block\">{option.description}</ActionList.Description>\n              {option.beta && (\n                <ActionList.TrailingVisual>\n                  <Label variant=\"success\">Beta</Label>\n                </ActionList.TrailingVisual>\n              )}\n            </ActionList.Item>\n          ))}\n        </ActionList>\n      </ActionMenu.Overlay>\n    </ActionMenu>\n  )\n}\n\nexport function emptyParametersByType(targetType: ExpandedTargetType): ConditionParameters {\n  switch (targetType) {\n    case 'repository_name':\n    case 'ref_name':\n    case 'repository_property':\n    case 'organization_name':\n      return {include: [], exclude: []}\n    case 'repository_id':\n      return {repository_ids: []}\n    case 'organization_id':\n      return {organization_ids: []}\n    case 'all_repos':\n    case 'all_orgs':\n      return {include: [INCLUDE_ALL_PATTERN], exclude: []}\n    default:\n      return {include: [], exclude: []}\n  }\n}\n\ntry{ RepositoryTargetTypeSelector.displayName ||= 'RepositoryTargetTypeSelector' } catch {}\ntry{ OrganizationTargetTypeSelector.displayName ||= 'OrganizationTargetTypeSelector' } catch {}\ntry{ TargetTypeSelector.displayName ||= 'TargetTypeSelector' } catch {}","import {AlertIcon} from '@primer/octicons-react'\nimport {Box, Heading, Link, Text} from '@primer/react'\nimport type {FC, RefObject} from 'react'\nimport {useCallback, useEffect, useMemo} from 'react'\nimport {isAllCondition, getDefaultTargetByObject} from '../../helpers/conditions'\nimport {\n  PLURAL_RULESET_TARGETS,\n  PLURAL_TARGET_OBJECT_TYPES,\n  TARGET_OBJECT_BY_TYPE,\n  TARGET_OBJECT_TYPES,\n} from '../../helpers/constants'\nimport {capitalize, pluralize} from '../../helpers/string'\nimport type {\n  Condition,\n  ConditionParameters,\n  DetailedValidationErrors,\n  IncludeExcludeParameters,\n  RepositoryPropertyParameters,\n  RulesetTarget,\n  TargetObjectType,\n  ExpandedTargetType,\n  TargetType,\n} from '../../types/rules-types'\nimport {RefPill} from '../RefPill'\nimport {IncludeExcludeTarget} from './conditions/IncludeExcludeTarget'\nimport {PanelHeader} from './conditions/PanelHeader'\nimport {RepositoryTarget} from './conditions/RepositoryTarget'\nimport {RulesetFormErrorFlash} from '../RulesetFormErrorFlash'\nimport {RepositoryConditionsError} from '../rule-schema/errors/RepositoryConditionsError'\nimport {PushRulePublicTargetingBanner} from './PushRulePublicTargetingBanner'\nimport {orgRepositoriesPath} from '@github-ui/paths'\nimport {buildQueryForAllProperties} from '../../helpers/custom-properties-query'\nimport {OrganizationTarget} from './conditions/OrganizationTarget'\nimport type {Repository} from '@github-ui/current-repository'\nimport type {Enterprise, Organization} from '@github-ui/repos-types'\nimport {useFeatureFlag} from '@github-ui/react-core/use-feature-flag'\nimport {emptyParametersByType, OrganizationTargetTypeSelector, RepositoryTargetTypeSelector} from './TargetTypeSelector'\n\ntype AffectedTargetsSummaryProps = {\n  rulesetPreviewCount: number | undefined\n  rulesetPreviewSamples: string[] | undefined\n  rulesetError: string | undefined\n  conditions: Condition[]\n  sourceName: string\n  targetObjectType: TargetObjectType\n}\n\nconst AffectedTargetsSummary: FC<AffectedTargetsSummaryProps> = ({\n  rulesetPreviewCount,\n  rulesetPreviewSamples,\n  rulesetError,\n  conditions,\n  sourceName,\n  targetObjectType,\n}) => {\n  if (rulesetError) {\n    return (\n      <Box sx={{mt: 1}}>\n        <Text className=\"text-small color-fg-muted\" as=\"span\" sx={{mr: 1}}>\n          {rulesetError}\n        </Text>\n      </Box>\n    )\n  }\n\n  if (typeof rulesetPreviewCount !== 'number') {\n    return null\n  }\n\n  const propertyConditions = conditions?.find(c => c.target === 'repository_property')\n\n  if (propertyConditions) {\n    const parameters = propertyConditions.parameters as RepositoryPropertyParameters\n\n    const repoQueryLink = buildRepoQueryUrl({\n      orgName: sourceName,\n      parameters,\n    })\n    return (\n      <Box sx={{mt: 1}}>\n        <Text className=\"text-small color-fg-muted\" as=\"span\" sx={{mr: 1}}>\n          Applies to{' '}\n          <Link inline={true} href={repoQueryLink}>\n            {pluralize(rulesetPreviewCount, targetObjectType, PLURAL_TARGET_OBJECT_TYPES)}\n          </Link>\n          .\n        </Text>\n      </Box>\n    )\n  }\n\n  return (\n    <Box sx={{mt: 1}}>\n      <span className=\"text-small color-fg-muted\">\n        Applies to {pluralize(rulesetPreviewCount, 'target', 'targets')}\n        {rulesetPreviewCount === 1 ? ':' : ''}\n        {rulesetPreviewSamples && rulesetPreviewSamples.length > 1 ? ' including ' : ''}\n      </span>\n      {rulesetPreviewSamples &&\n        rulesetPreviewSamples.map((target: string, index: number) => (\n          <span key={target}>\n            {index === rulesetPreviewSamples.length - 1 && rulesetPreviewCount <= 10 && index > 0 && (\n              <Text className=\"text-small color-fg-muted mt-1\" as=\"span\" sx={{mr: 1}}>\n                and\n              </Text>\n            )}\n            <RefPill param={target} />\n            <span className=\"text-small color-fg-muted mt-1\">\n              {index < rulesetPreviewSamples.length - 1 ? ', ' : rulesetPreviewCount > 10 ? ' and others' : ''}\n            </span>\n          </span>\n        ))}\n      <span className=\"text-small color-fg-muted\">.</span>\n    </Box>\n  )\n}\n\nfunction buildRepoQueryUrl({orgName, parameters}: {orgName: string; parameters: RepositoryPropertyParameters}): string {\n  const query = buildQueryForAllProperties(parameters)\n\n  return orgRepositoriesPath({owner: orgName, query})\n}\n\nexport type TargetsPanelProps = {\n  rulesetId?: number\n  readOnly: boolean\n  rulesetTarget: RulesetTarget\n  rulesetPreviewCount: number | undefined\n  rulesetPreviewSamples: string[] | undefined\n  rulesetError: string | undefined\n  fnmatchHelpUrl?: string\n  dirtyConditions: Condition[]\n  conditions: Condition[]\n  conditionErrors?: DetailedValidationErrors['conditions']\n  supportedConditionTargetObjects: TargetObjectType[]\n  repositoryConditionRef: RefObject<HTMLButtonElement | HTMLDivElement>\n  refConditionRef: RefObject<HTMLButtonElement | HTMLDivElement>\n  addOrUpdateCondition: (target: TargetType, parameters: ConditionParameters) => void\n  removeCondition: (condition: Condition) => void\n  source: Repository | Organization | Enterprise\n}\n\nexport const TargetsPanel: FC<TargetsPanelProps> = ({\n  rulesetId,\n  readOnly,\n  rulesetTarget,\n  rulesetPreviewCount,\n  rulesetPreviewSamples,\n  rulesetError,\n  fnmatchHelpUrl,\n  dirtyConditions,\n  conditions,\n  conditionErrors,\n  supportedConditionTargetObjects,\n  repositoryConditionRef,\n  refConditionRef,\n  addOrUpdateCondition,\n  removeCondition,\n  source,\n}) => {\n  const isEditing = typeof rulesetId !== 'undefined'\n  const emuTargetingEnabled =\n    useFeatureFlag('emu_inherit_rulesets_from_business') && (source as Enterprise).enterpriseManaged\n\n  const conditionsByObject = useMemo(() => {\n    return TARGET_OBJECT_TYPES.reduce((map, objectType) => {\n      let condition = conditions.find(c => TARGET_OBJECT_BY_TYPE[c.target] === objectType)\n      if (!condition) {\n        const targetForParameters = getDefaultTargetByObject(objectType, {\n          supportedConditionTargetObjects,\n        })\n        condition = {\n          target: getDefaultTargetByObject(objectType) as TargetType,\n          parameters: emptyParametersByType(targetForParameters),\n          _dirty: true,\n        }\n      }\n      map.set(objectType, condition)\n      return map\n    }, new Map<TargetObjectType, Condition>())\n  }, [conditions, supportedConditionTargetObjects])\n\n  const selectedTypeByObject = useMemo(() => {\n    return TARGET_OBJECT_TYPES.reduce((map, objectType) => {\n      const condition = conditionsByObject.get(objectType)!\n      map.set(objectType, condition.target)\n      return map\n    }, new Map<TargetObjectType, TargetType>())\n  }, [conditionsByObject])\n\n  const changeConditionType = useCallback(\n    (newType: ExpandedTargetType) => {\n      let normalizedType = newType\n      if (newType === 'all_orgs') {\n        normalizedType = 'organization_name'\n      }\n      if (newType === 'all_repos') {\n        normalizedType = 'repository_name'\n      }\n      // Remove any existing condition for this object type\n      const condition = conditions.find(\n        c => TARGET_OBJECT_BY_TYPE[c.target] === TARGET_OBJECT_BY_TYPE[normalizedType as TargetType],\n      )\n      if (condition) {\n        removeCondition(condition)\n      }\n\n      addOrUpdateCondition(normalizedType as TargetType, emptyParametersByType(newType))\n    },\n    [conditions, removeCondition, addOrUpdateCondition],\n  )\n\n  useEffect(() => {\n    for (const targetObjectType of supportedConditionTargetObjects) {\n      const condition = conditionsByObject.get(targetObjectType)\n      if (!condition) {\n        continue\n      }\n      const persistedCondition = conditions.find(({target}) => target === condition.target)\n      if (!persistedCondition) {\n        addOrUpdateCondition(condition.target, condition.parameters)\n      }\n    }\n  }, [conditions, conditionsByObject, supportedConditionTargetObjects, addOrUpdateCondition])\n\n  const targetsRefs = supportedConditionTargetObjects.includes('ref')\n  const targetsRepos = supportedConditionTargetObjects.includes('repository')\n  const targetsOrgs = supportedConditionTargetObjects.includes('organization')\n\n  const excludedRepoConditions: TargetType[] = targetsOrgs ? ['repository_id', 'repository_name'] : []\n  const panelSubtitle =\n    targetsRefs && targetsRepos\n      ? `repositories and ${pluralize(2, rulesetTarget, PLURAL_RULESET_TARGETS, false)}`\n      : targetsRefs\n        ? `${pluralize(2, rulesetTarget, PLURAL_RULESET_TARGETS, false)}`\n        : targetsRepos\n          ? 'repositories'\n          : ''\n\n  function targetingSubtitle(target: string, pluralTarget: string) {\n    return `${capitalize(\n      target,\n    )} targeting determines which ${pluralTarget} will be protected by this ruleset. Use inclusion patterns to expand the list of ${pluralTarget} under this ruleset. Use exclusion patterns to exclude ${pluralTarget}.`\n  }\n\n  return (\n    <>\n      <PanelHeader title=\"Targets\" subtitle={`Which ${panelSubtitle} do you want to make a ruleset for?`} />\n      <div className={`d-flex flex-column`}>\n        {targetsOrgs && (\n          <>\n            <div className={`mb-${!readOnly ? 3 : 0}`}>\n              <Heading as=\"h3\" sx={{mb: 1, mt: 4, fontSize: 3, fontWeight: 'normal'}}>\n                Target organizations\n              </Heading>\n              <span className=\"color-fg-muted\">{targetingSubtitle('organization', 'organizations')}</span>\n            </div>\n            {!readOnly && (\n              <div className=\"pb-3\">\n                <OrganizationTargetTypeSelector\n                  currentOrgCondition={conditionsByObject.get('organization')!}\n                  setOrgCondition={changeConditionType}\n                />\n              </div>\n            )}\n            <OrganizationTarget\n              rulesetId={rulesetId}\n              readOnly={readOnly}\n              fnmatchHelpUrl={fnmatchHelpUrl}\n              rulesetTarget={rulesetTarget}\n              targetType={selectedTypeByObject.get('organization')!}\n              parameters={conditionsByObject.get('organization')!.parameters}\n              metadata={conditionsByObject.get('organization')!.metadata}\n              updateParameters={parameters =>\n                addOrUpdateCondition(selectedTypeByObject.get('organization')!, parameters)\n              }\n              supportsEmuTargeting={emuTargetingEnabled}\n            />\n\n            {!isAllCondition(\n              selectedTypeByObject.get('organization')!,\n              conditionsByObject.get('organization')!.parameters,\n            ) && (\n              <>\n                <AffectedTargetsSummary\n                  rulesetPreviewCount={rulesetPreviewCount}\n                  rulesetPreviewSamples={rulesetPreviewSamples}\n                  rulesetError={rulesetError}\n                  conditions={conditions}\n                  sourceName={source.name}\n                  targetObjectType=\"organization\"\n                />\n                <div className=\"d-flex flex-column\">\n                  {isEditing && dirtyConditions.some(x => TARGET_OBJECT_BY_TYPE[x.target] === 'organization') && (\n                    <div className=\"text-small mt-1 d-flex color-fg-attention\">\n                      <AlertIcon />\n                      <span className=\"ml-1\" aria-live=\"polite\">\n                        Targets have changed and organization match list will update on save.\n                      </span>\n                    </div>\n                  )}\n                </div>\n              </>\n            )}\n          </>\n        )}\n        {targetsRepos && (\n          <div>\n            <div className={`mb-${!readOnly ? 3 : 0}`}>\n              <Heading as=\"h3\" sx={{mb: 1, mt: 4, fontSize: 3, fontWeight: 'normal'}}>\n                Target repositories\n              </Heading>\n              <span className=\"color-fg-muted\">{targetingSubtitle('repository', 'repositories')}</span>\n              {conditionErrors?.repository?.[0]?.message && (\n                <RepositoryConditionsError\n                  errors={conditionErrors?.repository}\n                  errorId=\"repo-target-error\"\n                  errorRef={repositoryConditionRef as RefObject<HTMLDivElement>}\n                />\n              )}\n            </div>\n            {rulesetTarget === 'push' && (\n              <div className=\"mb-3\">\n                <PushRulePublicTargetingBanner />\n              </div>\n            )}\n            <div data-testid=\"targets-repository-name-conditions\">\n              {!readOnly && (\n                <div className=\"pb-3\">\n                  <RepositoryTargetTypeSelector\n                    excludeConditions={excludedRepoConditions}\n                    currentRepoCondition={conditionsByObject.get('repository')!}\n                    setRepoCondition={changeConditionType}\n                  />\n                </div>\n              )}\n              <RepositoryTarget\n                rulesetId={rulesetId}\n                readOnly={readOnly}\n                fnmatchHelpUrl={fnmatchHelpUrl}\n                rulesetTarget={rulesetTarget}\n                targetType={selectedTypeByObject.get('repository')!}\n                parameters={conditionsByObject.get('repository')!.parameters}\n                metadata={conditionsByObject.get('repository')!.metadata}\n                updateParameters={parameters =>\n                  addOrUpdateCondition(selectedTypeByObject.get('repository')!, parameters)\n                }\n              />\n\n              {!targetsOrgs &&\n                !isAllCondition(\n                  selectedTypeByObject.get('repository')!,\n                  conditionsByObject.get('repository')!.parameters,\n                ) && (\n                  <>\n                    <AffectedTargetsSummary\n                      rulesetPreviewCount={rulesetPreviewCount}\n                      rulesetPreviewSamples={rulesetPreviewSamples}\n                      rulesetError={rulesetError}\n                      conditions={conditions}\n                      sourceName={source.name}\n                      targetObjectType=\"repository\"\n                    />\n                    <div className=\"d-flex flex-column\">\n                      {isEditing && dirtyConditions.some(x => TARGET_OBJECT_BY_TYPE[x.target] === 'repository') && (\n                        <div className=\"text-small mt-1 d-flex color-fg-attention\">\n                          <AlertIcon />\n                          <span className=\"ml-1\" aria-live=\"polite\">\n                            Targets have changed and repository match list will update on save.\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  </>\n                )}\n            </div>\n          </div>\n        )}\n\n        {targetsRefs && (\n          <>\n            <div className={`mb-${!readOnly ? 3 : 0}`}>\n              <Heading as=\"h3\" sx={{mb: 1, mt: 4, fontSize: 3, fontWeight: 'normal'}}>\n                Target {pluralize(2, rulesetTarget, PLURAL_RULESET_TARGETS, false)}\n              </Heading>\n              {!readOnly && (\n                <span className=\"fg-color-muted\">\n                  {targetingSubtitle(rulesetTarget, pluralize(2, rulesetTarget, PLURAL_RULESET_TARGETS, false))}\n                </span>\n              )}\n              {conditionErrors?.ref?.[0]?.message && (\n                <RulesetFormErrorFlash\n                  errorId=\"ref-target-error\"\n                  sx={{mt: 1}}\n                  errorRef={refConditionRef as RefObject<HTMLDivElement>}\n                >\n                  {conditionErrors.ref[0].message}\n                </RulesetFormErrorFlash>\n              )}\n            </div>\n            <div data-testid=\"targets-ref-name-conditions\">\n              <IncludeExcludeTarget\n                rulesetId={rulesetId}\n                readOnly={readOnly}\n                rulesetTarget={rulesetTarget}\n                fnmatchHelpUrl={fnmatchHelpUrl}\n                parameters={conditionsByObject.get('ref')!.parameters as IncludeExcludeParameters}\n                panelTitle={`${capitalize(rulesetTarget)} targeting criteria`}\n                targetType=\"ref_name\"\n                updateParameters={parameters => addOrUpdateCondition(selectedTypeByObject.get('ref')!, parameters)}\n                blankslate={{\n                  heading: `${capitalize(rulesetTarget)} targeting has not been configured`,\n                }}\n              />\n\n              {!targetsRepos && (\n                <AffectedTargetsSummary\n                  rulesetPreviewCount={rulesetPreviewCount}\n                  rulesetPreviewSamples={rulesetPreviewSamples}\n                  rulesetError={rulesetError}\n                  conditions={conditions}\n                  sourceName={source.name}\n                  targetObjectType=\"ref\"\n                />\n              )}\n\n              <div className=\"d-flex flex-column\">\n                {isEditing && dirtyConditions.findIndex(x => TARGET_OBJECT_BY_TYPE[x.target] === 'ref') >= 0 && (\n                  <div className=\"text-small mt-1 d-flex color-fg-attention\">\n                    <AlertIcon />\n                    <span className=\"ml-1\" aria-live=\"polite\">\n                      Targets have changed and {rulesetTarget} match list will update on save.\n                    </span>\n                  </div>\n                )}\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  )\n}\n\ntry{ AffectedTargetsSummary.displayName ||= 'AffectedTargetsSummary' } catch {}\ntry{ TargetsPanel.displayName ||= 'TargetsPanel' } catch {}","import {Checkbox, FormControl} from '@primer/react'\nimport type {RegisteredRuleSchemaComponent} from '../../types/rules-types'\n\n// Whether or not the component should be rendered\nexport function renderMergeQueueGroupingStrategy({value, readonly}: {value: string; readonly: boolean}): boolean {\n  return !readonly || value === 'ALLGREEN'\n}\n\nexport function MergeQueueGroupingStrategy({\n  field,\n  value,\n  onValueChange,\n  readOnly,\n  errors,\n}: RegisteredRuleSchemaComponent) {\n  value = value ?? field.default_value\n\n  const fieldLabel = `${field.name}Label`\n\n  if (readOnly) {\n    return (\n      <div>\n        <span className=\"text-bold\">{field.display_name}</span>\n        <span className=\"d-block text-small color-fg-muted\">{field.description}</span>\n      </div>\n    )\n  }\n\n  return (\n    <FormControl>\n      <Checkbox\n        aria-labelledby={fieldLabel}\n        checked={value === 'ALLGREEN'}\n        onChange={e => {\n          onValueChange?.(e.target.checked ? 'ALLGREEN' : 'HEADGREEN')\n        }}\n      />\n      <FormControl.Label id={fieldLabel}>{field.display_name}</FormControl.Label>\n      <FormControl.Caption>{field.description}</FormControl.Caption>\n      {errors.length > 0 && <FormControl.Validation variant=\"error\">{errors[0]?.message}</FormControl.Validation>}\n    </FormControl>\n  )\n}\n\ntry{ MergeQueueGroupingStrategy.displayName ||= 'MergeQueueGroupingStrategy' } catch {}","import {verifiedFetch} from '@github-ui/verified-fetch'\nimport {useEffect, useState} from 'react'\nimport type {RegisteredRuleSchemaComponent} from '../../types/rules-types'\nimport {AlertIcon} from '@primer/octicons-react'\nimport {ActionList, ActionMenu, FormControl, Spinner} from '@primer/react'\nimport {useRelativeNavigation} from '../../hooks/use-relative-navigation'\n\ntype MergeMethod = {\n  label: string\n  value: string\n  enabled: boolean\n  disabled_reason?: string\n}\n\nasync function fetchMergeMethods(\n  url: string,\n  abortController: AbortController,\n  attempt: number = 1,\n  maxAttempts: number = 3,\n): Promise<{values?: MergeMethod[]; error?: string}> {\n  try {\n    const response = await verifiedFetch(url, {signal: abortController.signal})\n    if (!response.ok) {\n      throw new Error(`Error ${response.status}`)\n    }\n    const values = await response.json()\n    return {values}\n  } catch (error) {\n    if (error instanceof DOMException && error.name === 'AbortError') {\n      return {error: 'Repository settings load was cancelled'}\n    } else if (attempt <= maxAttempts) {\n      await new Promise(resolve => {\n        setTimeout(resolve, 100)\n        abortController.signal.addEventListener('abort', resolve)\n      })\n      return fetchMergeMethods(url, abortController, attempt + 1, maxAttempts)\n    } else {\n      return {error: 'Failed to load repository settings'}\n    }\n  }\n}\n\nexport function MergeQueueMergeMethod({field, value, onValueChange, readOnly}: RegisteredRuleSchemaComponent) {\n  const [loadingValidMergeMethods, setLoadingValidMergeMethods] = useState(true)\n  const [validMergeMethods, setValidMergeMethods] = useState<MergeMethod[]>([])\n  const [loadError, setLoadError] = useState<string | undefined>(undefined)\n  const {resolvePath} = useRelativeNavigation()\n\n  const displayValue =\n    'allowed_options' in field\n      ? field.allowed_options?.find(method => method.value === value)?.display_name ?? (value as string)\n      : (value as string)\n\n  useEffect(() => {\n    if (readOnly) {\n      return\n    }\n\n    setLoadingValidMergeMethods(true)\n    setLoadError(undefined)\n\n    const abortController = new AbortController()\n    const fetchData = async () => {\n      const url = resolvePath('../merge_queue_merge_methods.json')\n      const {values, error} = await fetchMergeMethods(url, abortController)\n\n      if (values) {\n        setLoadError(undefined)\n        setValidMergeMethods(values)\n      } else {\n        setLoadError(error)\n        setValidMergeMethods([])\n      }\n\n      setLoadingValidMergeMethods(false)\n    }\n\n    fetchData()\n    return () => abortController.abort()\n  }, [readOnly, resolvePath])\n\n  const displayName = 'Merge method'\n  const description = 'Method to use when merging changes from queued pull requests.'\n\n  if (readOnly) {\n    return (\n      <div>\n        <span className=\"text-bold\">{displayName}</span>\n        <span> {displayValue}</span>\n        <span className=\"d-block text-small color-fg-muted\">{description}</span>\n      </div>\n    )\n  }\n\n  return (\n    <FormControl>\n      <FormControl.Label>{displayName}</FormControl.Label>\n      <FormControl.Caption>{description}</FormControl.Caption>\n      <ActionMenu>\n        <ActionMenu.Button aria-label=\"Select merge method\">{displayValue}</ActionMenu.Button>\n        <ActionMenu.Overlay width=\"medium\">\n          {loadingValidMergeMethods ? (\n            <div className=\"p-3\">\n              <Spinner size=\"medium\" />\n            </div>\n          ) : loadError ? (\n            <div className=\"p-3 color-fg-danger\">\n              <AlertIcon className=\"mr-1\" />\n              <span>{loadError}</span>\n            </div>\n          ) : (\n            <ActionList selectionVariant=\"single\" showDividers>\n              {validMergeMethods.map(mergeMethod => {\n                return (\n                  <ActionList.Item\n                    key={mergeMethod.label}\n                    selected={mergeMethod.value === value}\n                    onSelect={() => {\n                      onValueChange?.(mergeMethod.value)\n                    }}\n                    disabled={!mergeMethod.enabled}\n                  >\n                    {mergeMethod.label}\n                    {!mergeMethod.enabled && !!mergeMethod.disabled_reason && (\n                      <ActionList.Description variant=\"block\">{mergeMethod.disabled_reason}</ActionList.Description>\n                    )}\n                  </ActionList.Item>\n                )\n              })}\n            </ActionList>\n          )}\n        </ActionMenu.Overlay>\n      </ActionMenu>\n    </FormControl>\n  )\n}\n\ntry{ MergeQueueMergeMethod.displayName ||= 'MergeQueueMergeMethod' } catch {}","import {GitHubAvatar} from '@github-ui/github-avatar'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport {useState, useMemo, useEffect, useRef, useCallback} from 'react'\nimport {Link, Box, Button, IconButton, Spinner, useSafeTimeout, Octicon} from '@primer/react'\nimport {PlusIcon, TrashIcon, TriangleDownIcon} from '@primer/octicons-react'\nimport {Blankslate} from '../Blankslate'\nimport type {RegisteredRuleSchemaComponent, RequiredStatusChecksMetadata} from '../../types/rules-types'\nimport {useRelativeNavigation} from '../../hooks/use-relative-navigation'\nimport {type ExtendedItemProps, ItemPicker} from '@github-ui/item-picker/ItemPicker'\nimport type {ItemGroup} from '@github-ui/item-picker/shared'\n\ntype RequiredStatusCheck = {context: string; integration_id?: number}\nexport type StatusCheckSuggestion = {context: string; latest_integration_id?: number}\nexport type Integration = {\n  id: number | undefined\n  name: string\n  preferred_avatar_url?: string\n}\n\nconst DEFAULT_VALUE: RequiredStatusCheck[] = []\nconst DEFAULT_INTEGRATION: Integration = {id: undefined, name: 'Any source'}\n\nfunction requiredStatusChecksAreEqual(a: RequiredStatusCheck, b: RequiredStatusCheck) {\n  return a.context === b.context && a.integration_id === b.integration_id\n}\n\nexport function RequiredStatusCheckSelectList({\n  sourceType,\n  value,\n  onValueChange,\n  readOnly,\n  metadata,\n  helpUrls,\n}: RegisteredRuleSchemaComponent) {\n  const selectedRequiredStatusChecks = (value as RequiredStatusCheck[]) || DEFAULT_VALUE\n  const {resolvePath} = useRelativeNavigation()\n  const {safeSetTimeout} = useSafeTimeout()\n  const userAddedStatusCheckContextsRef = useRef<{[context: string]: boolean}>({})\n  const abortControllerRef = useRef<AbortController | undefined>(undefined)\n  const initializedIntegrationsRef = useRef(false)\n\n  const [statusCheckFilter, setStatusCheckFilter] = useState('')\n  const [statusCheckSuggestions, setStatusCheckSuggestions] = useState<StatusCheckSuggestion[]>([])\n  const [fetchingStatusCheckSuggestions, setFetchingStatusCheckSuggestions] = useState(false)\n  const [integrations, setIntegrations] = useState<Integration[] | undefined>(undefined)\n  const [fetchingIntegrations, setFetchingIntegrations] = useState(!readOnly)\n\n  const title = selectedRequiredStatusChecks.length ? 'Status checks that are required' : 'No required checks'\n\n  useEffect(() => {\n    async function fetchSuggestions() {\n      if (initializedIntegrationsRef.current) {\n        return\n      }\n\n      initializedIntegrationsRef.current = true\n\n      const fetchedSuggestions = [\n        DEFAULT_INTEGRATION,\n        ...((metadata as RequiredStatusChecksMetadata)?.integrations || []),\n      ]\n\n      if (!readOnly) {\n        try {\n          const path = '../integration_suggestions.json'\n          const suggestionsResponse = await verifiedFetch(resolvePath(path))\n\n          if (suggestionsResponse.ok) {\n            for (const suggestion of (await suggestionsResponse.json()) as Integration[]) {\n              if (fetchedSuggestions.find(existing => existing.id === suggestion.id)) {\n                continue\n              }\n\n              fetchedSuggestions.push(suggestion)\n            }\n          }\n        } finally {\n          setFetchingIntegrations(false)\n        }\n      }\n\n      setIntegrations(Array.from(fetchedSuggestions).sort((a, b) => a.name.localeCompare(b.name)))\n    }\n\n    fetchSuggestions()\n  }, [resolvePath, metadata, readOnly])\n\n  useEffect(() => {\n    async function fetchSuggestions(abortController: AbortController) {\n      setStatusCheckSuggestions([])\n\n      try {\n        if (!statusCheckFilter) {\n          setFetchingStatusCheckSuggestions(false)\n          return\n        }\n\n        setStatusCheckFilter(statusCheckFilter.trim())\n        setFetchingStatusCheckSuggestions(true)\n\n        const statusChecksResponse = await verifiedFetch(\n          resolvePath(`../status_check_suggestions.json?query=${encodeURIComponent(statusCheckFilter)}`),\n          {signal: abortController.signal},\n        )\n\n        if (abortController.signal.aborted) {\n          return\n        }\n\n        if (!statusChecksResponse.ok) {\n          return\n        }\n\n        setStatusCheckSuggestions(await statusChecksResponse.json())\n      } finally {\n        setFetchingStatusCheckSuggestions(false)\n      }\n    }\n\n    if (sourceType === 'organization') {\n      return\n    }\n\n    abortControllerRef.current?.abort()\n\n    const newAbortController = new AbortController()\n    abortControllerRef.current = newAbortController\n\n    setFetchingStatusCheckSuggestions(true)\n\n    const timeout = safeSetTimeout(() => {\n      fetchSuggestions(newAbortController)\n    }, 1000)\n\n    return () => clearTimeout(timeout)\n  }, [resolvePath, safeSetTimeout, sourceType, statusCheckFilter])\n\n  return (\n    <>\n      {!readOnly ? (\n        <div className=\"Box\">\n          <Box className=\"Box-header d-flex flex-justify-between\" sx={{alignItems: 'center'}}>\n            <div className=\"Box-title\">{title}</div>\n            <StatusCheckPicker\n              value={selectedRequiredStatusChecks}\n              onValueChange={onValueChange}\n              setFilter={setStatusCheckFilter}\n              suggestions={statusCheckSuggestions}\n              integrations={integrations}\n              loading={fetchingStatusCheckSuggestions}\n              statusCheckFilter={statusCheckFilter}\n            />\n          </Box>\n          <StatusCheckRows\n            selectedRequiredStatusChecks={selectedRequiredStatusChecks}\n            readOnly={readOnly}\n            helpUrls={helpUrls}\n            fetchingIntegrations={fetchingIntegrations}\n            integrations={integrations}\n            onValueChange={onValueChange}\n            userAddedStatusCheckContextsRef={userAddedStatusCheckContextsRef}\n          />\n        </div>\n      ) : (\n        <StatusCheckRows\n          selectedRequiredStatusChecks={selectedRequiredStatusChecks}\n          readOnly={readOnly}\n          helpUrls={helpUrls}\n          fetchingIntegrations={false}\n          integrations={integrations}\n          onValueChange={onValueChange}\n          userAddedStatusCheckContextsRef={userAddedStatusCheckContextsRef}\n        />\n      )}\n    </>\n  )\n}\n\nfunction StatusCheckRows({\n  selectedRequiredStatusChecks,\n  readOnly,\n  helpUrls,\n  fetchingIntegrations,\n  integrations,\n  onValueChange,\n  userAddedStatusCheckContextsRef,\n}: {\n  selectedRequiredStatusChecks: RequiredStatusCheck[]\n  readOnly?: boolean\n  helpUrls?: {statusChecks: string}\n  fetchingIntegrations: boolean\n  integrations: Integration[] | undefined\n  onValueChange?: (value: RequiredStatusCheck[]) => void\n  userAddedStatusCheckContextsRef: React.MutableRefObject<{[context: string]: boolean}>\n}) {\n  return (\n    <>\n      {selectedRequiredStatusChecks.length ? (\n        <ul>\n          {selectedRequiredStatusChecks\n            .filter(\n              (selected, index, array) =>\n                array.findIndex(element => requiredStatusChecksAreEqual(element, selected)) === index,\n            )\n            .map((requiredStatusCheck, index) => (\n              <li\n                key={`${requiredStatusCheck.context}_${requiredStatusCheck.integration_id?.toString() || 'any'}`}\n                className=\"Box-row d-flex flex-justify-between flex-items-center\"\n              >\n                <span>{requiredStatusCheck.context}</span>\n                <div className=\"d-flex flex-items-center\">\n                  {fetchingIntegrations ? (\n                    <Spinner size=\"small\" />\n                  ) : (\n                    <IntegrationPicker\n                      requiredStatusCheck={requiredStatusCheck}\n                      readOnly={readOnly}\n                      integrations={integrations}\n                      onChange={integrationId => {\n                        const newSelectedRequiredStatusChecks = selectedRequiredStatusChecks.concat()\n                        newSelectedRequiredStatusChecks[index] = {\n                          ...newSelectedRequiredStatusChecks[index]!,\n                          integration_id: integrationId,\n                        }\n\n                        onValueChange?.(newSelectedRequiredStatusChecks)\n                      }}\n                    />\n                  )}\n\n                  {!readOnly && (\n                    <IconButton\n                      className=\"ml-2\"\n                      icon={TrashIcon}\n                      type=\"button\"\n                      aria-label={`Delete ${requiredStatusCheck.context}}`}\n                      size=\"small\"\n                      variant=\"invisible\"\n                      onClick={() => {\n                        delete userAddedStatusCheckContextsRef.current[requiredStatusCheck.context]\n                        onValueChange?.(\n                          selectedRequiredStatusChecks.filter(\n                            selectedToDelete => !requiredStatusChecksAreEqual(selectedToDelete, requiredStatusCheck),\n                          ),\n                        )\n                      }}\n                    />\n                  )}\n                </div>\n              </li>\n            ))}\n        </ul>\n      ) : (\n        <Blankslate heading=\"No checks have been added\">\n          {!readOnly && helpUrls && (\n            <Link target=\"_blank\" href={helpUrls.statusChecks}>\n              Learn more about status checks\n            </Link>\n          )}\n        </Blankslate>\n      )}\n    </>\n  )\n}\n\nconst newEntryGroup: ItemGroup = {groupId: 'newEntries'}\nconst suggestionsGroup: ItemGroup = {groupId: 'suggestions', header: {title: 'Suggestions', variant: 'filled'}}\nconst alreadyAdded: ItemGroup = {groupId: 'alreadyAdded'}\n\nfunction StatusCheckPicker({\n  value,\n  suggestions,\n  integrations,\n  loading,\n  statusCheckFilter,\n  onValueChange,\n  setFilter,\n}: {\n  value: RequiredStatusCheck[]\n  suggestions: StatusCheckSuggestion[]\n  integrations?: Integration[]\n  loading: boolean\n  statusCheckFilter: string\n  onValueChange?: (value: RequiredStatusCheck[]) => void\n  setFilter: (filter: string) => void\n}) {\n  const changedSelection = useRef<boolean>(false)\n  const tempSelections = useRef<RequiredStatusCheck[]>([])\n\n  const newSuggestions = useMemo(() => {\n    return suggestions.filter(suggestion => !value.find(status => status.context === suggestion.context))\n  }, [suggestions, value])\n\n  const onSelectionChange = (selectionItems: RequiredStatusCheck[]) => {\n    // triggered on close with or without a selection\n\n    tempSelections.current = [] // clear the visual of selected checks list on close\n    if (changedSelection.current && selectionItems.length > 0) {\n      const newSel = new Set([...value, ...selectionItems])\n      onValueChange?.([...newSel])\n    }\n\n    changedSelection.current = false\n  }\n\n  const groupItemId = useCallback(\n    (check: RequiredStatusCheck) => {\n      if (newSuggestions.length > 0 && newSuggestions.find(suggestion => suggestion.context === check.context)) {\n        return suggestionsGroup.groupId\n      }\n      // if statusCheckFilter is not in new suggestions and not in requiredStatusChecks then put in the newEntryGroup\n      if (check.context === statusCheckFilter && !value.find(status => status.context === statusCheckFilter))\n        return newEntryGroup.groupId\n      return alreadyAdded.groupId // if statusCheckFilter is in requiredStatusChecks then put in the alreadyAdded group\n    },\n    [newSuggestions, statusCheckFilter, value],\n  )\n\n  const findInCheckList = useCallback(\n    (item: string, checkList: RequiredStatusCheck[]): RequiredStatusCheck | undefined => {\n      return checkList.find(check => check.context === item)\n    },\n    [],\n  )\n\n  // converts user added status checks into item props for the underlying SelectPanel of ItemPicker\n  const setCustomItemProp = useCallback(\n    (variant: string, check: RequiredStatusCheck): ExtendedItemProps<RequiredStatusCheck> => {\n      const itemProp: ExtendedItemProps<RequiredStatusCheck> = {\n        id: '',\n        source: {context: '', integration_id: undefined},\n        text: '',\n        groupId: '',\n        leadingVisual: undefined,\n        selectionVariant: undefined,\n      }\n      switch (variant) {\n        case 'standard':\n          itemProp.id = check.context\n          itemProp.source = check\n          itemProp.text = `Already added ${check.context}`\n          itemProp.groupId = groupItemId(check)\n          itemProp.disabled = true\n          break\n        case 'newEntry':\n          itemProp.id = check.context\n          itemProp.source = check\n          itemProp.groupId = groupItemId(check)\n\n          if (itemProp.groupId === suggestionsGroup.groupId) {\n            itemProp.text = check.context\n            itemProp.description =\n              integrations?.find(integration => integration.id === check.integration_id)?.name ||\n              DEFAULT_INTEGRATION.name\n          } else {\n            itemProp.text = `Add ${check.context}`\n            itemProp.description = 'Any source'\n            itemProp.leadingVisual = () => <Octicon icon={PlusIcon} />\n          }\n\n          itemProp.selectionVariant = 'multiple' // takes priority\n          itemProp.onAction = (_, event) => {\n            if (event.type === 'click') {\n              // keeps on selection change from acting on 0 selections\n              changedSelection.current = true\n              // useState objects are not updated immediately (effectively frozen in time here between selections - always empty)\n              // so we need to use a ref\n              const selection = findInCheckList(check.context, tempSelections.current)\n              if (itemProp.selected) {\n                // if recordedCheck is undefined then it is being added in for the first time\n                if (!selection) {\n                  tempSelections.current = [...tempSelections.current, check]\n                }\n              } else {\n                // it was selected previously and now unselected so it should be removed\n                if (selection) {\n                  tempSelections.current = tempSelections.current.filter(\n                    tempSel => tempSel.context !== selection.context,\n                  )\n                }\n              }\n            }\n          }\n          break\n        default:\n          return itemProp\n      }\n      return itemProp\n    },\n    [groupItemId, integrations, findInCheckList],\n  )\n\n  const customConvertToItemProps = useCallback(\n    (item: RequiredStatusCheck): ExtendedItemProps<RequiredStatusCheck> => {\n      const check = findInCheckList(item.context, value)\n      const itemProp = check ? setCustomItemProp('standard', item) : setCustomItemProp('newEntry', item)\n      return itemProp\n    },\n    [setCustomItemProp, findInCheckList, value],\n  )\n\n  const convertFilterItem = (filterVal: string): RequiredStatusCheck[] => {\n    // converts filter item into a status check to be used elsewhere\n    const check: RequiredStatusCheck = {context: filterVal, integration_id: undefined}\n    return [check]\n  }\n\n  const convertSuggestionItem = (suggestion: StatusCheckSuggestion): RequiredStatusCheck => {\n    // converts a suggestion into a status check to be used elsewhere\n    const check: RequiredStatusCheck = {context: suggestion.context, integration_id: suggestion.latest_integration_id}\n    return check\n  }\n\n  const groups = useMemo((): ItemGroup[] => {\n    const itemGroups = []\n\n    const existingCheck = value.some(check => check.context === statusCheckFilter)\n\n    // new entry if not in status checks and not in new suggestions list\n    const newEntry = !existingCheck && !newSuggestions.some(suggestion => suggestion.context === statusCheckFilter)\n    if (statusCheckFilter) {\n      if (existingCheck) {\n        itemGroups.push(alreadyAdded)\n      }\n\n      if (newEntry) {\n        itemGroups.push(newEntryGroup)\n      }\n\n      if (newSuggestions.length > 0) {\n        itemGroups.push(suggestionsGroup)\n      }\n    }\n    return itemGroups\n  }, [value, newSuggestions, statusCheckFilter])\n\n  const items = useMemo((): RequiredStatusCheck[] => {\n    const check = findInCheckList(statusCheckFilter, value)\n    const filterInNewSuggestions = newSuggestions?.some(suggestion => suggestion.context === statusCheckFilter)\n    const maxSuggestions = 10\n\n    if (statusCheckFilter) {\n      if (newSuggestions) {\n        const convertedSuggestions = newSuggestions.map(convertSuggestionItem).slice(0, maxSuggestions)\n        if (filterInNewSuggestions) {\n          return convertedSuggestions\n        } else {\n          return check\n            ? [check, ...convertedSuggestions] // return filter item already in the list (disabled) + new suggestions\n            : [...convertedSuggestions, ...convertFilterItem(statusCheckFilter)] // or return new suggestions + filter item\n        }\n      } else {\n        // either return the filter item already in the list or add it alongside the list\n        return check ? [check] : convertFilterItem(statusCheckFilter)\n      }\n    } else {\n      // not searching for anything so return only list of current selections, if any\n      return [...tempSelections.current]\n    }\n  }, [findInCheckList, statusCheckFilter, value, newSuggestions])\n\n  const renderStatusChecksAnchor = (anchorProps: React.HTMLAttributes<HTMLElement>) => {\n    return (\n      <Button\n        trailingAction={TriangleDownIcon}\n        leadingVisual={PlusIcon}\n        aria-label={`Click to change required status check(s)`}\n        {...anchorProps}\n      >\n        Add checks\n      </Button>\n    )\n  }\n\n  return (\n    <ItemPicker\n      title=\"Add Checks\"\n      items={items}\n      groups={groups}\n      initialSelectedItems={value}\n      getItemKey={item => {\n        if (findInCheckList(item.context, value)) {\n          return `${item.context}:${item.integration_id || 'any'}`\n        }\n\n        if (findInCheckList(item.context, newSuggestions)) {\n          return `${item.context}:${item.integration_id || 'any'}:suggestion`\n        }\n\n        return item.context\n      }}\n      convertToItemProps={customConvertToItemProps}\n      selectionVariant={'multiple'} // fallback\n      placeholderText=\"Search for checks\"\n      filterItems={setFilter}\n      renderAnchor={renderStatusChecksAnchor}\n      loading={loading}\n      onSelectionChange={onSelectionChange}\n    />\n  )\n}\n\nfunction IntegrationPicker({\n  requiredStatusCheck,\n  readOnly,\n  integrations,\n  onChange,\n}: {\n  requiredStatusCheck: RequiredStatusCheck\n  integrations?: Integration[]\n  readOnly: RegisteredRuleSchemaComponent['readOnly']\n  onChange: (id: Integration['id']) => void\n}) {\n  const [filter, setFilter] = useState('')\n  const selectedIntegration = useMemo(() => {\n    if (!requiredStatusCheck.integration_id) {\n      return DEFAULT_INTEGRATION\n    }\n\n    if (!integrations) {\n      return {id: requiredStatusCheck.integration_id, name: 'Unknown'}\n    }\n\n    const existingIntegration = integrations.find(integration => integration.id === requiredStatusCheck.integration_id)\n\n    if (!existingIntegration) {\n      return DEFAULT_INTEGRATION\n    }\n\n    return existingIntegration\n  }, [integrations, requiredStatusCheck.integration_id])\n\n  const filteredIntegrations = useMemo(() => {\n    if (!filter) return integrations || []\n\n    return integrations?.filter(integration => integration.name.toLowerCase().indexOf(filter.toLowerCase()) >= 0) || []\n  }, [filter, integrations])\n\n  const renderIntegrationPickerAnchor = (anchorProps: React.HTMLAttributes<HTMLElement>) => {\n    const integrationEl = (\n      <>\n        {selectedIntegration.preferred_avatar_url && (\n          <GitHubAvatar\n            className=\"mr-2\"\n            alt={selectedIntegration.name}\n            src={selectedIntegration.preferred_avatar_url}\n          />\n        )}\n        {selectedIntegration.name}\n      </>\n    )\n\n    if (readOnly) {\n      return <span className=\"d-inline-flex flex-items-center\">{integrationEl}</span>\n    }\n\n    return (\n      <Button\n        {...anchorProps}\n        className=\"d-inline-flex flex-items-center\"\n        variant=\"invisible\"\n        aria-label=\"Click to change source\"\n      >\n        {integrationEl}\n      </Button>\n    )\n  }\n\n  return (\n    <ItemPicker\n      getItemKey={item => item.id?.toString() || 'any'}\n      items={filteredIntegrations}\n      placeholderText=\"Select source\"\n      initialSelectedItems={[selectedIntegration]}\n      selectionVariant=\"single\"\n      filterItems={setFilter}\n      convertToItemProps={item => ({\n        id: item.id,\n        source: item,\n        text: item.name,\n        leadingVisual: item.preferred_avatar_url\n          ? () => <GitHubAvatar alt={item.name} src={item.preferred_avatar_url!} />\n          : undefined,\n      })}\n      renderAnchor={renderIntegrationPickerAnchor}\n      onSelectionChange={selection => onChange(selection[0]?.id)}\n    />\n  )\n}\n\ntry{ RequiredStatusCheckSelectList.displayName ||= 'RequiredStatusCheckSelectList' } catch {}\ntry{ StatusCheckRows.displayName ||= 'StatusCheckRows' } catch {}\ntry{ StatusCheckPicker.displayName ||= 'StatusCheckPicker' } catch {}\ntry{ IntegrationPicker.displayName ||= 'IntegrationPicker' } catch {}","import {useState} from 'react'\nimport {Box, Text, TextInput, Select, IconButton, BranchName} from '@primer/react'\nimport {PlusIcon, TrashIcon} from '@primer/octicons-react'\nimport type {RegisteredRuleSchemaComponent} from '../../types/rules-types'\nimport {Blankslate} from '../Blankslate'\nimport {BorderBox} from '../BorderBox'\n\nconst DEFAULT_VALUE: RestrictedCommit[] = []\ntype RestrictedCommit = {oid: string; reason?: string}\nconst basicReasons = ['Contains secret(s)', 'Contains sensitive information', 'Company IP']\nconst reasons = [...basicReasons, 'Other']\n\nexport function RestrictedCommitsList({value, onValueChange, readOnly}: RegisteredRuleSchemaComponent) {\n  const [oid, setOid] = useState('')\n  const [reason, setReason] = useState('')\n  const [otherReason, setOtherReason] = useState('')\n  const restrictedCommits = (value as RestrictedCommit[]) || DEFAULT_VALUE\n\n  const addRestrictedCommitToList = (commit: RestrictedCommit) => {\n    if (restrictedCommits.find(existing => existing.oid === commit.oid)) return restrictedCommits\n    if (commit.oid === '') return restrictedCommits\n    onValueChange?.([...restrictedCommits, commit])\n  }\n\n  const removeRestrictedCommitFromList = (restrictedCommitToRemove: RestrictedCommit) => {\n    onValueChange?.(restrictedCommits.filter(existing => existing.oid !== restrictedCommitToRemove.oid))\n  }\n\n  return (\n    <BorderBox>\n      {readOnly ? null : (\n        <Box className=\"Box-header\" sx={{display: 'grid', gridTemplateColumns: '2fr 1fr', alignItems: 'end'}}>\n          <Box sx={{p: 1}}>\n            <Text as=\"h5\" sx={{mb: 1}}>\n              Add full or abbreviated commit hash\n            </Text>\n            <TextInput placeholder=\"Commit ID\" block sx={{mt: 1}} value={oid} onChange={e => setOid(e.target.value)} />\n          </Box>\n          <Box sx={{p: 1}}>\n            <Text as=\"h5\" sx={{mb: 1}}>\n              Reason\n            </Text>\n            <Box\n              sx={{\n                display: 'grid',\n                gridTemplateColumns: '4fr 1fr',\n                gap: 2,\n                alignItems: 'center',\n              }}\n            >\n              <div>\n                <Select placeholder=\"Select reason\" value={reason} onChange={e => setReason(e.target.value)}>\n                  {reasons.map(restrictReason => (\n                    <Select.Option key={restrictReason} value={restrictReason}>\n                      {restrictReason}\n                    </Select.Option>\n                  ))}\n                </Select>\n              </div>\n              <div>\n                <IconButton\n                  type=\"button\"\n                  aria-label=\"Add\"\n                  size=\"medium\"\n                  icon={PlusIcon}\n                  onClick={() => {\n                    setOid('')\n                    setOtherReason('')\n                    setReason('')\n                    addRestrictedCommitToList({oid, reason: reason === 'Other' ? otherReason : reason})\n                  }}\n                />\n              </div>\n            </Box>\n          </Box>\n          {reason === 'Other' ? (\n            <Box sx={{gridColumn: '1 / span-2', p: 1}}>\n              <TextInput\n                className=\"width-full\"\n                placeholder=\"Other reason\"\n                value={otherReason}\n                onChange={e => setOtherReason(e.target.value)}\n              />\n            </Box>\n          ) : null}\n        </Box>\n      )}\n\n      {restrictedCommits.length === 0 ? (\n        <Blankslate heading=\"No commit IDs have been added yet\">\n          {readOnly\n            ? undefined\n            : 'Add a commit ID restriction to prevent specific commits from ever being accepted into target branches'}\n        </Blankslate>\n      ) : (\n        <ul>\n          {restrictedCommits.map(restrictedCommit => (\n            <li className=\"Box-row\" key={restrictedCommit.oid}>\n              <Box className=\"flex-direction-row flex-justify-between\" sx={{display: 'flex'}}>\n                <div>\n                  <BranchName>{restrictedCommit.oid}</BranchName>\n                </div>\n                {!readOnly ? (\n                  <IconButton\n                    type=\"button\"\n                    aria-label=\"Remove\"\n                    variant=\"invisible\"\n                    size=\"small\"\n                    icon={TrashIcon}\n                    onClick={() => {\n                      removeRestrictedCommitFromList(restrictedCommit)\n                    }}\n                  />\n                ) : null}\n              </Box>\n              {restrictedCommit.reason && (\n                <div>\n                  <p>{restrictedCommit.reason}</p>\n                </div>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </BorderBox>\n  )\n}\n\ntry{ RestrictedCommitsList.displayName ||= 'RestrictedCommitsList' } catch {}","import {verifiedFetch} from '@github-ui/verified-fetch'\nimport {useState, useEffect, useRef} from 'react'\nimport {Autocomplete, FormControl, IconButton, Link, useSafeTimeout} from '@primer/react'\nimport {TrashIcon} from '@primer/octicons-react'\nimport {Blankslate} from '../Blankslate'\nimport type {RegisteredRuleSchemaComponent} from '../../types/rules-types'\nimport {useRelativeNavigation} from '../../hooks/use-relative-navigation'\n\nconst DEFAULT_VALUE: string[] = []\n\nexport function RequiredDeployments({\n  sourceType,\n  value,\n  onValueChange,\n  readOnly,\n  helpUrls,\n}: RegisteredRuleSchemaComponent) {\n  const selectedDeploymentEnvironments = (value as string[]) || DEFAULT_VALUE\n  const {resolvePath} = useRelativeNavigation()\n  const {safeSetTimeout} = useSafeTimeout()\n  const abortControllerRef = useRef<AbortController | undefined>(undefined)\n\n  // Required to workaround https://github.com/primer/react/issues/1971.\n  const [isOverlayVisible, setOverlayVisible] = useState(false)\n  const [deploymentEnvironmentFilter, setDeploymentEnvironmentFilter] = useState('')\n  const [deploymentEnvironments, setDeploymentEnvironments] = useState<string[]>([])\n  const [fetchingDeploymentEnvironments, setFetchingDeploymentEnvironments] = useState(false)\n\n  const selectedDeploymentEnvironmentsById = selectedDeploymentEnvironments.reduce<Record<string, string>>(\n    (map, deploymentEnvironment) => {\n      map[deploymentEnvironment] = deploymentEnvironment\n      return map\n    },\n    {},\n  )\n\n  const autocompleteItems = deploymentEnvironments\n    .map(deploymentEnvironment => ({\n      id: deploymentEnvironment,\n      text: deploymentEnvironment,\n    }))\n    .filter(autocompleteItem => !selectedDeploymentEnvironmentsById[autocompleteItem.id])\n\n  // TODO: Component typing of onSelectedChange doesn't seem to allow array values\n  const onSelectedChange = (selection: unknown) => {\n    if (!Array.isArray(selection)) {\n      return\n    }\n\n    setDeploymentEnvironmentFilter('')\n\n    onValueChange?.(\n      selection\n        .map<string>(item => {\n          return item.text\n        })\n        .concat(selectedDeploymentEnvironments),\n    )\n  }\n\n  useEffect(() => {\n    async function fetchSuggestions(abortController: AbortController) {\n      setDeploymentEnvironments([])\n\n      try {\n        if (!deploymentEnvironmentFilter) {\n          setFetchingDeploymentEnvironments(false)\n          return\n        }\n\n        setFetchingDeploymentEnvironments(true)\n\n        const response = await verifiedFetch(\n          resolvePath(\n            `../deployment_environment_suggestions.json?query=${encodeURIComponent(deploymentEnvironmentFilter)}`,\n          ),\n          {signal: abortController.signal},\n        )\n\n        if (abortController.signal.aborted) {\n          return\n        }\n\n        if (!response.ok) {\n          return\n        }\n\n        setDeploymentEnvironments(await response.json())\n      } finally {\n        setFetchingDeploymentEnvironments(false)\n      }\n    }\n\n    if (sourceType === 'organization') {\n      return\n    }\n\n    abortControllerRef.current?.abort()\n\n    const newAbortController = new AbortController()\n    abortControllerRef.current = newAbortController\n\n    setFetchingDeploymentEnvironments(true)\n\n    const timeout = safeSetTimeout(() => {\n      fetchSuggestions(newAbortController)\n    }, 1000)\n\n    return () => clearTimeout(timeout)\n  }, [deploymentEnvironmentFilter, resolvePath, safeSetTimeout, sourceType])\n\n  return (\n    <>\n      {!readOnly && (\n        <FormControl>\n          <FormControl.Label id=\"deploymentEnvironmentsLabel\" visuallyHidden>\n            Select deployment environments\n          </FormControl.Label>\n          <Autocomplete>\n            <Autocomplete.Input\n              className=\"width-full\"\n              placeholder=\"Search for deployment environments\"\n              onChange={e => setDeploymentEnvironmentFilter(e.target.value)}\n              onFocus={() => setOverlayVisible(true)}\n            />\n            {isOverlayVisible && deploymentEnvironmentFilter && (\n              <Autocomplete.Overlay>\n                <Autocomplete.Menu\n                  aria-labelledby=\"deploymentEnvironmentsLabel\"\n                  emptyStateText=\"No deployment environments found\"\n                  items={autocompleteItems}\n                  selectedItemIds={[]}\n                  loading={fetchingDeploymentEnvironments}\n                  onSelectedChange={onSelectedChange}\n                />\n              </Autocomplete.Overlay>\n            )}\n          </Autocomplete>\n        </FormControl>\n      )}\n\n      {selectedDeploymentEnvironments.length ? (\n        <div className=\"Box mt-2\">\n          <div className=\"Box-header\">\n            <div className=\"Box-title\">Deployment environments that are required.</div>\n          </div>\n          <ul>\n            {[...new Set(selectedDeploymentEnvironments)].map(deploymentEnvironment => (\n              <li key={deploymentEnvironment} className=\"Box-row d-flex flex-justify-between flex-items-center\">\n                <span>{deploymentEnvironment}</span>\n                <div className=\"d-flex flex-items-center\">\n                  {!readOnly && (\n                    <IconButton\n                      className=\"ml-2\"\n                      type=\"button\"\n                      icon={TrashIcon}\n                      aria-label={`Delete ${deploymentEnvironment}}`}\n                      size=\"small\"\n                      variant=\"invisible\"\n                      onClick={() =>\n                        onValueChange?.(\n                          selectedDeploymentEnvironments.filter(\n                            selectedToDelete => selectedToDelete !== deploymentEnvironment,\n                          ),\n                        )\n                      }\n                    />\n                  )}\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <Blankslate heading=\"No deployment environments have been added\">\n          {!readOnly && helpUrls && (\n            <Link target=\"_blank\" href={helpUrls.deploymentEnvironments}>\n              Learn more about deployment environments\n            </Link>\n          )}\n        </Blankslate>\n      )}\n    </>\n  )\n}\n\ntry{ RequiredDeployments.displayName ||= 'RequiredDeployments' } catch {}","import {useCallback, useEffect, useMemo, useRef, useState, type RefObject} from 'react'\nimport {\n  ActionList,\n  ActionMenu,\n  Autocomplete,\n  Button,\n  Checkbox,\n  FormControl,\n  IconButton,\n  Octicon,\n  Text,\n  TextInput,\n} from '@primer/react'\nimport {AlertFillIcon, KebabHorizontalIcon, PencilIcon, TrashIcon} from '@primer/octicons-react'\nimport type {DialogButtonProps} from '@primer/react/drafts'\nimport {Dialog} from '@primer/react/drafts'\nimport {RefSelector} from '@github-ui/ref-selector'\nimport {mapRefType, qualifyRef, unqualifyRef} from '@github-ui/ref-utils'\nimport {ReposSelector} from '@github-ui/repos-selector'\nimport {Blankslate} from '../Blankslate'\nimport {getShaForRef, getWorkflowRepoSuggestions, getWorkflowSuggestions, validateWorkflowSha} from '../../services/api'\nimport {useRelativeNavigation} from '../../hooks/use-relative-navigation'\nimport type {\n  WorkflowRepository,\n  WorkflowsRuleMetadata,\n  RegisteredRuleSchemaComponent,\n  ValidationError,\n  WorkflowError,\n} from '../../types/rules-types'\nimport {RefPill} from '../RefPill'\n\ntype WorkflowConfig = {\n  path: string\n  repository_id: number\n  ref?: string\n  sha?: string\n}\n\ntype WorkflowMetadataEntry = {\n  workflowName?: string\n  repository: WorkflowRepository\n}\n\ntype WorkflowFile = {\n  name: string\n  path: string\n}\n\nexport function Workflows({value, onValueChange, readOnly, metadata, errors, fieldRef}: RegisteredRuleSchemaComponent) {\n  const [dialogVisible, setDialogVisible] = useState(false)\n  const [editingWorkflow, setEditingWorkflow] = useState<WorkflowConfig | undefined>(undefined)\n  const firstErrorRef = useRef<string | undefined>(undefined)\n\n  const workflows = useMemo(() => (value || []) as WorkflowConfig[], [value])\n\n  const workflowErrors = useMemo(() => {\n    const errorsByRepoAndPath = {} as Record<string, ValidationError>\n    for (const error of (errors[0]?.sub_errors || []) as WorkflowError[]) {\n      if (error.repo_and_path !== undefined) {\n        firstErrorRef.current = firstErrorRef.current || error.repo_and_path\n        errorsByRepoAndPath[error.repo_and_path] = error\n      }\n    }\n    return errorsByRepoAndPath\n  }, [errors])\n\n  // Workflow metadata with key: `<repo_id>/<workflow_path>`\n  const [workflowMeta, setWorkflowMeta] = useState<Record<string, WorkflowMetadataEntry>>(() => {\n    const initialMetadata = {} as Record<string, WorkflowMetadataEntry>\n    const workflowMetadata = metadata as WorkflowsRuleMetadata\n    if (workflowMetadata && workflowMetadata.workflows) {\n      for (const workflow of workflowMetadata.workflows) {\n        if (workflow.repository) {\n          initialMetadata[`${workflow.repository.id}/${workflow.path}`] = {\n            workflowName: workflow.name,\n            repository: workflow.repository,\n          }\n        }\n      }\n    }\n    return initialMetadata\n  })\n\n  const addOrUpdateWorkflow = useCallback(\n    (newWorkflow: WorkflowConfig, newMetadata?: WorkflowMetadataEntry) => {\n      // Don't add a workflow if it already exists\n      if (!editingWorkflow && workflows.some(w => workflowsEqual(w, newWorkflow))) {\n        return false\n      }\n\n      let newWorkflows: WorkflowConfig[]\n      // Remove the old workflow if we're editing it\n      if (editingWorkflow) {\n        const index = workflows.findIndex(w => workflowsEqual(w, editingWorkflow))\n        newWorkflows = [...workflows.slice(0, index), newWorkflow, ...workflows.slice(index + 1)]\n      } else {\n        newWorkflows = [...workflows, newWorkflow]\n      }\n\n      if (newMetadata) {\n        setWorkflowMeta(prev => ({\n          ...prev,\n          [`${newWorkflow.repository_id}/${newWorkflow.path}`]: newMetadata,\n        }))\n      }\n\n      onValueChange?.(newWorkflows)\n      return true\n    },\n    [editingWorkflow, onValueChange, workflows],\n  )\n\n  const onEditWorkflow = (workflow: WorkflowConfig) => {\n    setEditingWorkflow(workflow)\n    setDialogVisible(true)\n  }\n\n  const onDeleteWorkflow = (workflow: WorkflowConfig) => {\n    const newWorkflows = workflows.filter(w => w !== workflow)\n    onValueChange?.(newWorkflows)\n  }\n\n  return (\n    <div className=\"d-flex flex-column gap-2\">\n      {!readOnly && dialogVisible ? (\n        <WorkflowDialog\n          existingWorkflow={\n            editingWorkflow\n              ? {\n                  workflow: editingWorkflow,\n                  metadata: workflowMeta[`${editingWorkflow?.repository_id}/${editingWorkflow?.path}`],\n                }\n              : undefined\n          }\n          onSave={addOrUpdateWorkflow}\n          onClose={() => {\n            setDialogVisible(false)\n            setEditingWorkflow(undefined)\n          }}\n        />\n      ) : null}\n      <div className=\"Box\">\n        <div className=\"Box-header d-flex flex-items-center\">\n          <div className=\"Box-title flex-1\">Workflow configurations</div>\n          {!readOnly && (\n            <Button\n              className=\"ml-2\"\n              type=\"button\"\n              aria-label=\"Add workflow\"\n              size=\"small\"\n              onClick={() => setDialogVisible(true)}\n            >\n              Add workflow\n            </Button>\n          )}\n        </div>\n        {workflows.length ? (\n          <div>\n            {workflows.map(workflow => (\n              <div className=\"Box-row d-flex flex-justify-between flex-items-center\" key={workflow.path}>\n                <div className=\"d-flex flex-column\">\n                  <span className=\"text-bold\">\n                    {workflowMeta[`${workflow.repository_id}/${workflow.path}`]?.workflowName}\n                  </span>\n                  <div>\n                    <span className=\"color-fg-muted text-small pr-1\">{`${\n                      workflowMeta[`${workflow.repository_id}/${workflow.path}`]?.repository.name ||\n                      'Unknown repository'\n                    }/${workflow.path}`}</span>\n                    {workflow.sha ? (\n                      <RefPill param={workflow.sha.slice(0, 7)} />\n                    ) : workflow.ref ? (\n                      <RefPill param={workflow.ref} showIcon />\n                    ) : null}\n                  </div>\n                  {workflowErrors[`${workflow.repository_id}/${workflow.path}`] && (\n                    <Text\n                      sx={{display: 'flex', alignItems: 'center', fontSize: 0, color: 'danger.fg'}}\n                      id={`${workflow.repository_id}/${workflow.path}-error`}\n                    >\n                      <Octicon icon={AlertFillIcon} size={12} />\n                      &nbsp;{workflowErrors[`${workflow.repository_id}/${workflow.path}`]?.message}\n                    </Text>\n                  )}\n                </div>\n\n                {!readOnly && (\n                  <div>\n                    <IconButton\n                      className=\"ml-2\"\n                      icon={PencilIcon}\n                      type=\"button\"\n                      ref={\n                        `${workflow.repository_id}/${workflow.path}` === firstErrorRef.current\n                          ? (fieldRef as RefObject<HTMLButtonElement>)\n                          : undefined\n                      }\n                      aria-describedby={`${workflow.repository_id}/${workflow.path}-error`}\n                      aria-label={`Edit ${workflow.repository_id}/${workflow.path} workflow`}\n                      aria-invalid={!!workflowErrors[`${workflow.repository_id}/${workflow.path}`]}\n                      size=\"small\"\n                      variant=\"invisible\"\n                      onClick={() => onEditWorkflow(workflow)}\n                    />\n                    <IconButton\n                      className=\"ml-2\"\n                      icon={TrashIcon}\n                      type=\"button\"\n                      aria-label={`Delete ${workflow}}`}\n                      size=\"small\"\n                      variant=\"invisible\"\n                      onClick={() => onDeleteWorkflow(workflow)}\n                    />\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        ) : (\n          <Blankslate heading=\"No workflow configurations found\" />\n        )}\n      </div>\n    </div>\n  )\n}\n\nfunction WorkflowDialog({\n  onSave,\n  onClose,\n  existingWorkflow,\n}: {\n  onSave: (workflow: WorkflowConfig, newMetadata?: WorkflowMetadataEntry) => boolean\n  onClose: () => void\n  existingWorkflow?: {workflow: WorkflowConfig; metadata?: WorkflowMetadataEntry}\n}) {\n  const {resolvePath} = useRelativeNavigation()\n\n  const [refOrSha, setRefOrSha] = useState<'ref' | 'sha'>(() => {\n    return existingWorkflow ? (existingWorkflow.workflow.sha && !existingWorkflow.workflow.ref ? 'sha' : 'ref') : 'ref'\n  })\n\n  // New or existing workflow\n  const [workflow, setWorkflow] = useState<Partial<WorkflowConfig>>({...existingWorkflow?.workflow} || {})\n\n  // Loaded data\n  const [repo, setRepo] = useState<WorkflowRepository | undefined>(existingWorkflow?.metadata?.repository)\n  const [shaForRef] = useShaForRef(repo, workflow.ref)\n  const workflowOptions = useWorkflowSuggestions(repo)\n\n  // Validation\n  const [showMissing, setShowMissing] = useState<boolean>(false)\n  const [workflowAlreadyExists, setWorkflowAlreadyExists] = useState<boolean>(false)\n  const {shaValid, validateSha} = useShaValidation(repo, workflow.sha)\n\n  const onRepoChange = useCallback(\n    (newRepo?: WorkflowRepository) => {\n      if (newRepo) {\n        setRepo(newRepo)\n        setWorkflow({...workflow, repository_id: newRepo.id, ref: qualifyRef(newRepo.defaultBranch, 'branch')})\n        setShowMissing(false)\n      }\n    },\n    [workflow],\n  )\n\n  const queryForRepos = useCallback(\n    async (q: string) => {\n      const repos = await getWorkflowRepoSuggestions(resolvePath('../workflows'), q)\n      return repos?.map(r => ({...r, enabled: r.actionsSharing})) || []\n    },\n    [resolvePath],\n  )\n\n  const saveChanges = useCallback(() => {\n    if (!workflow.path || !repo || (!workflow.sha && !workflow.ref)) {\n      setShowMissing(true)\n      return\n    }\n    if (\n      !onSave(workflow as WorkflowConfig, {\n        repository: repo,\n        workflowName: workflowOptions?.find(w => w.path === workflow.path)?.name,\n      })\n    ) {\n      setWorkflowAlreadyExists(true)\n      return\n    }\n    onClose()\n  }, [onClose, onSave, repo, workflow, workflowOptions])\n\n  const footerButtons: DialogButtonProps[] = useMemo(\n    () => [\n      {content: 'Cancel', onClick: onClose, buttonType: 'normal'},\n      {content: 'Add workflow', onClick: saveChanges, buttonType: 'primary'},\n    ],\n    [onClose, saveChanges],\n  )\n\n  return (\n    <Dialog title=\"Add required workflow\" footerButtons={footerButtons} height=\"auto\" width=\"medium\" onClose={onClose}>\n      <FormControl sx={{paddingBottom: 3}} required>\n        <FormControl.Label>Repository</FormControl.Label>\n        <ReposSelector\n          currentSelection={repo}\n          repositoryLoader={queryForRepos}\n          onSelect={onRepoChange}\n          selectionVariant=\"single\"\n          selectAllOption={false}\n          additionalButtonProps={{alignContent: 'start', className: 'width-full'}}\n        />\n        {showMissing && !repo && (\n          <FormControl.Validation variant=\"error\" aria-live=\"polite\">\n            Please select a repository\n          </FormControl.Validation>\n        )}\n      </FormControl>\n      {repo && (\n        <>\n          <FormControl required>\n            <FormControl.Label>{refOrSha === 'ref' ? 'Select branch or tag' : 'Enter a SHA'}</FormControl.Label>\n            <div className=\"d-flex flex-row width-full\">\n              {refOrSha === 'ref' ? (\n                <RefSelector\n                  currentCommitish={unqualifyRef(workflow.ref) ?? 'Select ref'}\n                  defaultBranch={repo.defaultBranch}\n                  owner={repo.ownerLogin}\n                  repo={repo.name}\n                  canCreate={false}\n                  cacheKey={repo.refCacheKey}\n                  selectedRefType={mapRefType(workflow.ref)}\n                  onSelectItem={(ref, refType) => setWorkflow({...workflow, ref: qualifyRef(ref, refType)})}\n                  types={['branch', 'tag']}\n                  buttonClassName=\"width-full workflows-wide-selector\"\n                  hideShowAll\n                />\n              ) : (\n                <TextInput\n                  className=\"width-full\"\n                  placeholder=\"Enter a valid SHA\"\n                  value={workflow.sha || ''}\n                  onBlur={validateSha}\n                  onChange={e => setWorkflow({...workflow, sha: e.target.value})}\n                />\n              )}\n              <div className=\"pl-2\">\n                <RefOrShaSelector\n                  selected={refOrSha}\n                  onSelect={newValue => {\n                    if (newValue !== refOrSha) {\n                      if (newValue === 'sha') {\n                        setWorkflow({...workflow, ref: undefined, sha: undefined})\n                      } else if (newValue === 'ref') {\n                        setWorkflow({...workflow, ref: qualifyRef(repo.defaultBranch, 'branch'), sha: undefined})\n                      }\n                      setRefOrSha(newValue)\n                    }\n                  }}\n                />\n              </div>\n            </div>\n            {refOrSha === 'sha' && (\n              <>\n                <FormControl.Caption>Enter the SHA for the commit you want to reference</FormControl.Caption>\n                {shaValid !== undefined && shaValid === 'valid' ? (\n                  <FormControl.Validation variant=\"success\" aria-live=\"polite\">\n                    Valid SHA\n                  </FormControl.Validation>\n                ) : (shaValid !== undefined && shaValid === 'invalid') ||\n                  (showMissing && (!workflow.sha || workflow.sha.length === 0)) ? (\n                  <FormControl.Validation variant=\"error\" aria-live=\"polite\">\n                    Invalid SHA\n                  </FormControl.Validation>\n                ) : shaValid !== undefined && shaValid === 'validating' ? (\n                  <FormControl.Caption aria-live=\"polite\">Validating...</FormControl.Caption>\n                ) : null}\n              </>\n            )}\n          </FormControl>\n          {refOrSha === 'ref' && (\n            <FormControl sx={{paddingTop: 2}}>\n              <Checkbox\n                tabIndex={0}\n                checked={refOrSha === 'ref' && shaForRef !== undefined && workflow.sha === shaForRef}\n                onChange={e => {\n                  if (e.target.checked) {\n                    setWorkflow({...workflow, sha: shaForRef})\n                  } else {\n                    setWorkflow({...workflow, sha: undefined})\n                  }\n                }}\n              />\n              <FormControl.Label>Pin to commit</FormControl.Label>\n              <FormControl.Caption>\n                <span>Always reference the current commit </span>\n                {shaForRef && <RefPill param={shaForRef.slice(0, 7)} />}\n              </FormControl.Caption>\n            </FormControl>\n          )}\n          <FormControl sx={{width: '100%', paddingTop: 3}} required>\n            <FormControl.Label>Pick a workflow file</FormControl.Label>\n            <Autocomplete>\n              <Autocomplete.Input\n                value={workflow.path}\n                onChange={e => setWorkflow({...workflow, path: e.target.value})}\n                placeholder=\"path/workflow.yml\"\n                className=\"width-full\"\n              />\n              <Autocomplete.Overlay>\n                <Autocomplete.Menu\n                  items={\n                    workflowOptions?.map(w => {\n                      return {\n                        id: w.path,\n                        text: w.path,\n                      }\n                    }) || []\n                  }\n                  selectionVariant=\"single\"\n                  onSelectedChange={item =>\n                    setWorkflow({...workflow, path: Array.isArray(item) ? item[0]?.text : item.text})\n                  }\n                  loading={workflowOptions === undefined}\n                  selectedItemIds={[]}\n                  aria-labelledby=\"autocompleteLabel-basic\"\n                />\n              </Autocomplete.Overlay>\n            </Autocomplete>\n            {showMissing && !workflow.path ? (\n              <FormControl.Validation variant=\"error\" aria-live=\"polite\">\n                Please select a workflow path\n              </FormControl.Validation>\n            ) : workflowAlreadyExists ? (\n              <FormControl.Validation variant=\"error\" aria-live=\"polite\">\n                Workflow already exists\n              </FormControl.Validation>\n            ) : null}\n          </FormControl>\n        </>\n      )}\n    </Dialog>\n  )\n}\n\nfunction RefOrShaSelector({\n  selected,\n  onSelect,\n}: {\n  selected: 'ref' | 'sha'\n  onSelect: (refOrSha: 'ref' | 'sha') => void\n}) {\n  return (\n    <ActionMenu>\n      <ActionMenu.Anchor>\n        <IconButton icon={KebabHorizontalIcon} aria-label=\"Open additional options\" />\n      </ActionMenu.Anchor>\n      <ActionMenu.Overlay width=\"medium\" position=\"relative\">\n        <ActionList selectionVariant=\"single\">\n          <ActionList.Item selected={selected === 'ref'} onSelect={() => onSelect('ref')}>\n            Branch or tag\n          </ActionList.Item>\n          <ActionList.Item selected={selected === 'sha'} onSelect={() => onSelect('sha')}>\n            SHA\n          </ActionList.Item>\n        </ActionList>\n      </ActionMenu.Overlay>\n    </ActionMenu>\n  )\n}\n\nfunction useShaValidation(repo?: WorkflowRepository, sha?: string) {\n  const {resolvePath} = useRelativeNavigation()\n  const [shaValid, setShaValid] = useState<'valid' | 'invalid' | 'validating' | undefined>(undefined)\n\n  const validateSha = async () => {\n    if (sha && sha.length > 0 && repo) {\n      if (sha.length !== 40) {\n        setShaValid('invalid')\n        return\n      }\n      try {\n        setShaValid('validating')\n        const result = await validateWorkflowSha(resolvePath('../validate_value/reachable_sha'), {\n          sha,\n          repo_id: repo.id,\n        })\n        setShaValid(result.valid ? 'valid' : 'invalid')\n      } catch {\n        setShaValid('invalid')\n      }\n    } else {\n      setShaValid(undefined)\n    }\n  }\n\n  return {shaValid, validateSha}\n}\n\nfunction useWorkflowSuggestions(repo?: WorkflowRepository) {\n  const {resolvePath} = useRelativeNavigation()\n  const [workflowOptions, setWorkflowOptions] = useState<WorkflowFile[] | undefined>(undefined)\n\n  const fetchWorkflowSuggestions = useCallback(\n    async (newRepo: string) => {\n      try {\n        const suggestedWorkflows = await getWorkflowSuggestions(resolvePath('../workflows'), newRepo)\n        setWorkflowOptions(suggestedWorkflows)\n      } catch {\n        setWorkflowOptions([])\n      }\n    },\n    [resolvePath, setWorkflowOptions],\n  )\n\n  useEffect(() => {\n    if (repo) {\n      fetchWorkflowSuggestions(repo.name)\n    }\n  }, [fetchWorkflowSuggestions, repo])\n\n  return workflowOptions\n}\n\nfunction useShaForRef(repo?: WorkflowRepository, ref?: string) {\n  const {resolvePath} = useRelativeNavigation()\n\n  const [shaForRef, setShaForRef] = useState<string | undefined>(undefined)\n\n  const fetchShaForRef = useCallback(async () => {\n    if (ref && repo) {\n      const foundSha = await getShaForRef(resolvePath('../workflows'), repo.name, ref)\n      setShaForRef(foundSha.sha)\n    }\n  }, [resolvePath, setShaForRef, ref, repo])\n\n  useEffect(() => {\n    fetchShaForRef()\n  }, [fetchShaForRef, ref, repo])\n\n  return [shaForRef]\n}\n\nfunction workflowsEqual(a: WorkflowConfig, b: WorkflowConfig) {\n  return a.path === b.path && a.repository_id === b.repository_id\n}\n\ntry{ Workflows.displayName ||= 'Workflows' } catch {}\ntry{ WorkflowDialog.displayName ||= 'WorkflowDialog' } catch {}\ntry{ RefOrShaSelector.displayName ||= 'RefOrShaSelector' } catch {}","import type {RegisteredRuleErrorComponent, ValidationError} from '../../../types/rules-types'\nimport {GitMergeQueueIcon} from '@primer/octicons-react'\nimport {RulesetFormErrorFlash} from '../../RulesetFormErrorFlash'\nimport {useRegisterErrors, type ErrorFilterFunction} from '../../../hooks/use-register-errors'\n\nconst mergeQueueErrorFilters: Record<string, ErrorFilterFunction> = {\n  wildcardPresent: {\n    args: 'error',\n    func: (error: ValidationError) => {\n      return error.error_code === 'ref_name_wildcard_present'\n    },\n  },\n}\n\nexport function MergeQueueError({errors, errorId, errorRef, fields}: RegisteredRuleErrorComponent) {\n  const parsedErrors = useRegisterErrors({errors, fields, filters: mergeQueueErrorFilters})\n\n  if (parsedErrors.wildcardPresent && parsedErrors.wildcardPresent.length > 0) {\n    return (\n      <RulesetFormErrorFlash errorId={errorId} errorRef={errorRef}>\n        <GitMergeQueueIcon />\n        Merge queue rules are only supported for named branches or the default branch. Please adjust your branch\n        targets.\n      </RulesetFormErrorFlash>\n    )\n  }\n\n  if (parsedErrors.unregistered && parsedErrors.unregistered.length > 0) {\n    return (\n      <RulesetFormErrorFlash errorId={errorId} errorRef={errorRef}>\n        {parsedErrors.unregistered[0]?.message || 'An error occurred'}\n      </RulesetFormErrorFlash>\n    )\n  }\n\n  return null\n}\n\ntry{ MergeQueueError.displayName ||= 'MergeQueueError' } catch {}","import {useState, type FC, useRef} from 'react'\nimport {Box, Button, FormControl, IconButton, Text, TextInput} from '@primer/react'\nimport {Dialog} from '@primer/react/experimental'\nimport {PlusIcon, TrashIcon} from '@primer/octicons-react'\nimport {Blankslate} from '../Blankslate'\nimport {BorderBox} from '../BorderBox'\n\ntype RestrictHelperProps = {\n  value: string[]\n  onValueChange?: (value: string[]) => void\n  readOnly?: boolean\n  boxName: string\n  buttonName: string\n  subtitle: string\n  label: string\n  examples: string\n  blankslate: string\n  validationError?: (input: string) => string\n  prefix?: string\n}\n\nexport function RestrictHelper({\n  value,\n  onValueChange,\n  readOnly,\n  boxName,\n  buttonName,\n  subtitle,\n  label,\n  examples,\n  blankslate,\n  validationError = () => '',\n  prefix,\n}: RestrictHelperProps) {\n  const [showDialog, setShowDialog] = useState(false)\n  const restrictedList = value || []\n\n  return (\n    <>\n      <BorderBox\n        name={boxName}\n        showHeader\n        data-testid=\"bypass-panel\"\n        renderCreateButton={() => {\n          if (!readOnly) {\n            return (\n              <div className=\"d-flex flex-items-center\">\n                <Button\n                  aria-label={buttonName}\n                  onClick={async () => {\n                    setShowDialog(!showDialog)\n                  }}\n                >\n                  <PlusIcon /> {buttonName}\n                </Button>\n              </div>\n            )\n          } else {\n            return null\n          }\n        }}\n      >\n        {restrictedList.length > 0 ? (\n          <ul>\n            {[...new Set(restrictedList)].map(restricted => (\n              <li key={restricted} className=\"Box-row d-flex flex-row flex-items-center px-3 py-2\">\n                <div className=\"flex-1\">\n                  <Box sx={{mr: 1, display: 'inline'}}>\n                    <Box\n                      as=\"span\"\n                      sx={{\n                        alignItems: 'center',\n                        display: 'inline-flex',\n                        backgroundColor: 'neutral.subtle',\n                        borderRadius: 2,\n                        paddingX: 2,\n                      }}\n                    >\n                      <Text sx={{fontWeight: 'light', fontFamily: 'mono'}}>{restricted}</Text>\n                    </Box>\n                  </Box>\n                </div>\n                {readOnly ? null : (\n                  <div>\n                    <IconButton\n                      type=\"button\"\n                      aria-label={`Delete ${restricted}`}\n                      size=\"small\"\n                      variant=\"invisible\"\n                      onClick={() =>\n                        !readOnly &&\n                        onValueChange?.(restrictedList.filter(restrictedToDelete => restrictedToDelete !== restricted))\n                      }\n                      className=\"ml-2\"\n                      icon={TrashIcon}\n                    />\n                  </div>\n                )}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <Blankslate heading={blankslate} />\n        )}\n      </BorderBox>\n      {!readOnly && showDialog && (\n        <RestrictHelperDialog\n          onAdd={fileExtension => {\n            onValueChange?.(restrictedList.concat(fileExtension))\n            setShowDialog(false)\n          }}\n          onClose={() => setShowDialog(false)}\n          buttonName={buttonName}\n          subtitle={subtitle}\n          label={label}\n          examples={examples}\n          validationError={validationError}\n          prefix={prefix}\n          restrictedList={restrictedList}\n        />\n      )}\n    </>\n  )\n}\n\ntype RestrictHelperDialogProps = {\n  onAdd: (target: string) => void\n  onClose: () => void\n  buttonName: string\n  subtitle: string\n  label: string\n  examples: string\n  validationError: (input: string) => string\n  prefix?: string\n  restrictedList: string[]\n}\n\nconst RestrictHelperDialog: FC<RestrictHelperDialogProps> = ({\n  onAdd,\n  onClose,\n  buttonName,\n  subtitle,\n  label,\n  examples,\n  validationError,\n  prefix,\n  restrictedList,\n}) => {\n  const inputRef = useRef<HTMLInputElement>(null)\n\n  const [error, setError] = useState('')\n\n  const validateInput = (input: string) => {\n    const trimmedParam = input.trim()\n    if (trimmedParam === '') {\n      const cannotBeEmpty = `${label} cannot be empty`\n      setError(cannotBeEmpty)\n      return cannotBeEmpty\n    } else if (validationError(input)) {\n      setError(validationError(input))\n      return validationError(input)\n    } else if (restrictedList.includes(`${prefix ? prefix : ''}${trimmedParam}`)) {\n      const cannotBeDuplicates = `${label} has already been added`\n      setError(cannotBeDuplicates)\n      return cannotBeDuplicates\n    }\n\n    setError('')\n    return ''\n  }\n\n  const onSave = async () => {\n    const trimmedParam = inputRef.current!.value.trim()\n    const errorOnSave = validateInput(trimmedParam)\n    if (errorOnSave) {\n      return\n    }\n\n    onAdd(`${prefix ? prefix : ''}${trimmedParam}`)\n    inputRef.current!.value = ''\n  }\n\n  const onKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n    if (event.key !== 'Enter') {\n      return\n    }\n\n    event.preventDefault()\n    onSave()\n  }\n\n  return (\n    <Dialog\n      aria-label={buttonName}\n      title={buttonName}\n      subtitle={<span className=\"text-normal text-small color-fg-muted\">{subtitle}</span>}\n      footerButtons={[\n        {content: 'Cancel', buttonType: 'normal', onClick: onClose},\n        {content: buttonName, onClick: onSave, buttonType: 'primary'},\n      ]}\n      onClose={onClose}\n      width=\"medium\"\n    >\n      <FormControl sx={{flex: 1, mr: 2}}>\n        <FormControl.Label>\n          <span className=\"text-bold\">{label}</span>\n        </FormControl.Label>\n        <TextInput\n          ref={inputRef}\n          className=\"width-full\"\n          onKeyPress={onKeyPress}\n          onBlur={e => validateInput(e.target.value)}\n          onChange={() => {\n            {\n              error && setError('')\n            }\n          }}\n          leadingVisual={prefix}\n        />\n        <FormControl.Caption>{examples}</FormControl.Caption>\n        {error && <FormControl.Validation variant=\"error\">{error}</FormControl.Validation>}\n      </FormControl>\n    </Dialog>\n  )\n}\n\ntry{ RestrictHelper.displayName ||= 'RestrictHelper' } catch {}\ntry{ RestrictHelperDialog.displayName ||= 'RestrictHelperDialog' } catch {}","import type {RegisteredRuleSchemaComponent} from '../../types/rules-types'\nimport {RestrictHelper} from './RestrictHelper'\n\nexport function FileExtensionRestrictions({value, onValueChange, readOnly}: RegisteredRuleSchemaComponent) {\n  return (\n    <RestrictHelper\n      value={value as string[]}\n      onValueChange={onValueChange}\n      readOnly={readOnly}\n      boxName=\"Restricted file extensions\"\n      buttonName=\"Add file extension\"\n      subtitle=\"Commits that include files with the specified file extension will be rejected.\"\n      label=\"File extension\"\n      examples=\"Examples: `bin`, `exe`\"\n      blankslate=\"No file extensions\"\n      validationError={(extension: string) => {\n        if (extension.includes('\\\\') || extension.includes('/') || extension.includes('*')) {\n          return 'File extension cannot contain \\\\, /, or *'\n        }\n        return ''\n      }}\n      prefix=\"*.\"\n    />\n  )\n}\n\ntry{ FileExtensionRestrictions.displayName ||= 'FileExtensionRestrictions' } catch {}","import type {RegisteredRuleSchemaComponent} from '../../types/rules-types'\nimport {RestrictHelper} from './RestrictHelper'\n\nexport function FilePathRestrictions({value, onValueChange, readOnly}: RegisteredRuleSchemaComponent) {\n  return (\n    <RestrictHelper\n      value={value as string[]}\n      onValueChange={onValueChange}\n      readOnly={readOnly}\n      boxName=\"Restricted file paths\"\n      buttonName=\"Add file path\"\n      subtitle=\"Commits that include changes to files in the specified file path will be rejected.\"\n      label=\"File path\"\n      examples=\"Example: `.github/**/*`\"\n      blankslate=\"No file paths\"\n    />\n  )\n}\n\ntry{ FilePathRestrictions.displayName ||= 'FilePathRestrictions' } catch {}","export function rangeBounds(range: string | undefined): {min: number | undefined; max: number | undefined} | undefined {\n  if (typeof range === 'undefined') {\n    return undefined\n  }\n\n  let [min, max] = range.split('..').map(num => parseInt(num))\n\n  if (min === undefined || isNaN(min)) {\n    min = undefined\n  }\n\n  if (max === undefined || isNaN(max)) {\n    max = undefined\n  }\n\n  return {min, max}\n}\n\nexport function rangeToArray(range: string) {\n  const bounds = rangeBounds(range)\n  if (!bounds) throw new Error('Invalid range')\n\n  const {min, max} = bounds\n\n  if (min === undefined || max === undefined) {\n    throw new Error('Invalid range')\n  }\n\n  return Array.from({length: max - min + 1}, (_, i) => min + i)\n}\n","import {useCallback, useEffect, useMemo, useState, type RefObject} from 'react'\nimport {FormControl, TextInput} from '@primer/react'\nimport {BorderBox} from '../BorderBox'\nimport type {RuleSchema, ValidationError} from '../../types/rules-types'\nimport {rangeBounds} from '../../helpers/range'\n\ntype MaxHelper = {\n  field: RuleSchema['parameterSchema']['fields'][0]\n  value: number\n  onValueChange?: (value: number) => void\n  readOnly?: boolean\n  label: string\n  errors: ValidationError[]\n  description?: string\n  fieldRef?: RefObject<HTMLInputElement>\n}\n\nexport function MaxHelper({field, value, onValueChange, readOnly, label, description, fieldRef, errors}: MaxHelper) {\n  if (field.type !== 'integer') {\n    throw new Error('Field type must be integer')\n  }\n\n  const errorMessages: {empty: string; notInteger: string} = useMemo(\n    () => ({\n      empty: `${label} cannot be empty`,\n      notInteger: `${label} must be a whole number`,\n    }),\n    [label],\n  )\n\n  const [maxError, setMaxError] = useState('')\n\n  useEffect(() => {\n    const message = errors[0]?.message\n    if (message?.includes('to be present')) {\n      setMaxError(errorMessages['empty'])\n      return\n    }\n    if (message?.includes('Expected integer')) {\n      setMaxError(errorMessages['notInteger'])\n      return\n    }\n    setMaxError(errors[0]?.message || '')\n    // We only care about the first message changing\n    // Otherwise, useEffect attempts to compare the whole errorObject, which is different each render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [errors[0]?.message])\n\n  const validate = useCallback(\n    (targetValue?: string) => {\n      setMaxError('')\n      if (!targetValue || targetValue.trim() === '') {\n        setMaxError(errorMessages['empty'])\n        return\n      }\n      const parsedValue = parseFloat(targetValue)\n      if (isNaN(parsedValue) || !Number.isInteger(parsedValue)) {\n        setMaxError(errorMessages['notInteger'])\n        return\n      }\n    },\n    [errorMessages],\n  )\n\n  return (\n    <BorderBox className={`p-3`}>\n      {!readOnly ? (\n        <FormControl>\n          <FormControl.Label>{label}</FormControl.Label>\n          {description && <FormControl.Caption>{description}</FormControl.Caption>}\n          <TextInput\n            className=\"width-full\"\n            type=\"number\"\n            ref={fieldRef}\n            min={rangeBounds(field.allowed_range)?.min}\n            max={rangeBounds(field.allowed_range)?.max}\n            value={value}\n            onBlur={e => {\n              validate(e.target.value)\n            }}\n            onChange={e => {\n              validate(e.target.value)\n              onValueChange?.(parseFloat(e.target.value))\n            }}\n          />\n          {maxError && <FormControl.Validation variant=\"error\">{maxError}</FormControl.Validation>}\n        </FormControl>\n      ) : (\n        <div>\n          <span className=\"text-bold\">{label}: </span>\n          <span>{value}</span>\n        </div>\n      )}\n    </BorderBox>\n  )\n}\n\ntry{ MaxHelper.displayName ||= 'MaxHelper' } catch {}","import type {RefObject} from 'react'\nimport type {RegisteredRuleSchemaComponent} from '../../types/rules-types'\nimport {MaxHelper} from './MaxHelper'\n\nexport function MaxFilePathLength({\n  field,\n  value,\n  onValueChange,\n  readOnly,\n  fieldRef,\n  errors,\n}: RegisteredRuleSchemaComponent) {\n  return (\n    <MaxHelper\n      field={field}\n      value={value as number}\n      onValueChange={onValueChange}\n      label=\"Maximum file path length\"\n      readOnly={readOnly}\n      errors={errors}\n      fieldRef={fieldRef as RefObject<HTMLInputElement>}\n    />\n  )\n}\n\ntry{ MaxFilePathLength.displayName ||= 'MaxFilePathLength' } catch {}","import type {RefObject} from 'react'\nimport type {RegisteredRuleSchemaComponent} from '../../types/rules-types'\nimport {MaxHelper} from './MaxHelper'\n\nexport function MaxFileSize({field, value, onValueChange, readOnly, fieldRef, errors}: RegisteredRuleSchemaComponent) {\n  return (\n    <MaxHelper\n      field={field}\n      value={value as number}\n      onValueChange={onValueChange}\n      label=\"Maximum file size (MB)\"\n      description=\"This limit does not apply to Git Large File Storage (Git LFS).\"\n      readOnly={readOnly}\n      errors={errors}\n      fieldRef={fieldRef as RefObject<HTMLInputElement>}\n    />\n  )\n}\n\ntry{ MaxFileSize.displayName ||= 'MaxFileSize' } catch {}","import type {RegisteredRuleSchemaComponent, RuleSchema, SourceType, ParameterValue} from '../../types/rules-types'\nimport type {ItemInput} from '@primer/react/lib-esm/deprecated/ActionList/List'\nimport {TrashIcon, PlusIcon, TriangleDownIcon} from '@primer/octicons-react'\nimport {Blankslate} from '@primer/react/drafts'\nimport {\n  Button,\n  IconButton,\n  ActionList,\n  ActionMenu,\n  Box,\n  FormControl,\n  Link,\n  Label,\n  useSafeTimeout,\n  SelectPanel,\n} from '@primer/react'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {useRelativeNavigation} from '../../hooks/use-relative-navigation'\nimport {useState, useEffect, useRef} from 'react'\n\ntype Value = {\n  [KEY in 'tool' | ThresholdField['name']]: string\n}\n\nexport function CodeScanningTools(\n  props: Omit<RegisteredRuleSchemaComponent, 'onValueChange'> & {onValueChange?: (value: Value[]) => void},\n) {\n  const {field, value, sourceType, onValueChange, helpUrls, readOnly} = props\n\n  if (field.type !== 'array') {\n    return <></>\n  }\n\n  const object = (value || field.default_value) as Value[]\n\n  const thresholdFields = field.content_object.fields.filter(\n    objectField => objectField.type === 'string' && objectField.name !== 'tool',\n  ) as ThresholdField[]\n\n  if (thresholdFields.length === 0) {\n    return <></>\n  }\n\n  const grouped = object.reduce(\n    (acc, item) => {\n      acc[item.tool] = item\n      return acc\n    },\n    {} as {[key: string]: Value},\n  )\n\n  const defaultValue = thresholdFields.reduce((acc, thresholdField) => {\n    acc[thresholdField.name] = thresholdField.default_value\n    return acc\n  }, {} as Value)\n\n  return (\n    <FormControl>\n      <FormControl.Label visuallyHidden={true}>{field.display_name}</FormControl.Label>\n      <FormControl.Caption>\n        {field.description}{' '}\n        {helpUrls && (\n          <Link target=\"_blank\" href={helpUrls.codeScanning} sx={{textDecoration: 'underline'}}>\n            Learn more about enabling code scanning.\n          </Link>\n        )}\n      </FormControl.Caption>\n\n      <div className=\"Box width-full\">\n        <div className=\"Box-header\">\n          <div className=\"Box-title d-flex flex-justify-between flex-items-center\">\n            <span className=\"flex-1\">Required tools and alert thresholds</span>{' '}\n            {!readOnly && (\n              <ToolPicker\n                sourceType={sourceType}\n                value={object.map(item => item.tool)}\n                onValueChange={newValue =>\n                  onValueChange?.(\n                    newValue.map(tool => ({\n                      ...defaultValue,\n                      ...grouped[tool],\n                      tool,\n                    })),\n                  )\n                }\n              />\n            )}\n          </div>\n        </div>\n        {object.length === 0 ? (\n          <Blankslate>\n            <Blankslate.Heading as=\"h3\">No code scanning tools specified</Blankslate.Heading>\n            {!readOnly && helpUrls && (\n              <Blankslate.Description>\n                <Link target=\"_blank\" href={helpUrls.statusChecks}>\n                  Learn more about code scanning thresholds\n                </Link>\n              </Blankslate.Description>\n            )}\n          </Blankslate>\n        ) : (\n          <ul>\n            {object.map((item, n) => (\n              <Box\n                as=\"li\"\n                key={n}\n                data-testid={`li-${item.tool}`}\n                sx={{columnGap: 1}}\n                className=\"Box-row d-flex flex-justify-between flex-items-baseline width-full flex-wrap\"\n              >\n                <span className=\"flex-1\">{item.tool}</span>\n                <Box sx={{columnGap: 1}} className=\"d-inline-flex flex-justify-between flex-items-baseline flex-wrap\">\n                  {thresholdFields.map(thresholdField => (\n                    <ThresholdDropDown\n                      key={thresholdField.name}\n                      role={thresholdField.name}\n                      readOnly={readOnly}\n                      value={item[thresholdField.name] || thresholdField.default_value}\n                      allowedOptions={thresholdField.allowed_options}\n                      onValueChange={newValue => {\n                        onValueChange?.(\n                          object.map(threshold => {\n                            return {\n                              ...threshold,\n                              [thresholdField.name]:\n                                threshold.tool === item.tool ? newValue : threshold[thresholdField.name],\n                            }\n                          }),\n                        )\n                      }}\n                      ariaLabel={thresholdField.description}\n                      label={thresholdField.display_name}\n                    />\n                  ))}\n                </Box>\n                {!readOnly && (\n                  <IconButton\n                    className=\"d-inline-block\"\n                    data-testid=\"delete-tool-button\"\n                    icon={TrashIcon}\n                    type=\"button\"\n                    aria-label={`Delete Tool`}\n                    size=\"small\"\n                    variant=\"invisible\"\n                    onClick={() => onValueChange?.(object.filter(({tool}) => tool !== item.tool))}\n                  />\n                )}\n              </Box>\n            ))}\n          </ul>\n        )}\n      </div>\n    </FormControl>\n  )\n}\n\ntype Option = {\n  display_name: string\n  value: string\n}\n\ntype ThresholdField = Omit<RuleSchema['parameterSchema']['fields'][0], 'allowed_options' | 'name'> & {\n  allowed_options: Option[]\n  name: 'alerts' | 'security_alerts'\n  default_value: string\n}\n\nfunction decodeValue(value: string) {\n  if (value.startsWith('\"') && value.endsWith('\"')) {\n    return value.slice(1, value.length - 1).replaceAll('\\\\\"', '\"')\n  }\n  return value\n}\n\nfunction useSuggestions(sourceType: SourceType) {\n  const {resolvePath} = useRelativeNavigation()\n  const {safeSetTimeout} = useSafeTimeout()\n  const abortControllerRef = useRef<AbortController | undefined>(undefined)\n\n  const [suggestions, setSuggestions] = useState<string[]>([])\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    async function fetchSuggestions(abortController: AbortController) {\n      setSuggestions([])\n\n      try {\n        setLoading(true)\n\n        const resolvedPath =\n          sourceType === 'repository'\n            ? resolvePath('../../../security/code-scanning/tools.json')\n            : resolvePath('../../../security/alerts/code-scanning/tool-list.json').replace(\n                new RegExp('^/organizations/'),\n                '/orgs/',\n              )\n\n        const statusChecksResponse = await verifiedFetchJSON(resolvedPath, {signal: abortController.signal})\n\n        if (abortController.signal.aborted) {\n          return\n        }\n\n        if (!statusChecksResponse.ok) {\n          return\n        }\n\n        const data = await statusChecksResponse.json()\n\n        setSuggestions(data.map(({value}: {value: string}) => decodeValue(value)))\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    abortControllerRef.current?.abort()\n\n    const newAbortController = new AbortController()\n    abortControllerRef.current = newAbortController\n\n    setLoading(true)\n\n    const timeout = safeSetTimeout(() => {\n      fetchSuggestions(newAbortController)\n    }, 1000)\n\n    return () => clearTimeout(timeout)\n  }, [resolvePath, safeSetTimeout, sourceType])\n\n  return {suggestions, loading}\n}\n\nfunction ThresholdDropDown({\n  label,\n  allowedOptions,\n  readOnly,\n  value,\n  onValueChange,\n  ariaLabel,\n  role,\n}: {\n  label: string\n  allowedOptions: Option[]\n  ariaLabel: string\n  readOnly: boolean | undefined\n  value: string\n  onValueChange: ((value: ParameterValue) => void) | undefined\n  role?: string\n}) {\n  const selectedValue = allowedOptions.reduce(\n    (acc, option) => (option.value === value ? option.display_name : acc),\n    undefined as string | undefined,\n  )\n\n  return !readOnly ? (\n    <ActionMenu>\n      <ActionMenu.Button variant=\"invisible\" aria-label={ariaLabel} data-testid={`${role}-button`}>\n        <Box sx={{color: 'fg.muted', display: 'inline-block'}}>{label.replace(/ threshold$/, '')}:</Box>{' '}\n        <span data-testid={`${role}-value`}>{selectedValue}</span>\n      </ActionMenu.Button>\n      <ActionMenu.Overlay align=\"end\" width=\"small\">\n        <ActionList selectionVariant=\"single\">\n          {allowedOptions.map(option => {\n            return (\n              <ActionList.Item\n                key={option.value}\n                selected={option.value === value}\n                onSelect={() => onValueChange?.(option.value)}\n              >\n                {option.display_name}\n              </ActionList.Item>\n            )\n          })}\n        </ActionList>\n      </ActionMenu.Overlay>\n    </ActionMenu>\n  ) : (\n    <Label>\n      <Box sx={{mr: 1, color: 'fg.muted', display: 'inline-block'}}>{label}:</Box>\n      <span data-testid={`${role}-value`}>{selectedValue}</span>\n    </Label>\n  )\n}\n\nfunction ToolPicker({\n  value,\n  sourceType,\n  onValueChange,\n}: {\n  value: string[]\n  sourceType: SourceType\n  onValueChange?: (value: string[]) => void\n}) {\n  const [text, setText] = useState('')\n  const {suggestions, loading} = useSuggestions(sourceType)\n\n  const items = [...new Set(['CodeQL', ...suggestions, ...value])].filter(item =>\n    item.toLowerCase().startsWith(text.toLowerCase()),\n  )\n\n  const itemInputs: ItemInput[] = items.map(item => {\n    return {text: item, id: item}\n  })\n\n  const omittedButSelected: ItemInput[] = value\n    .filter(item => !items.includes(item))\n    .map(item => {\n      return {text: item, id: item}\n    })\n\n  if (text.length > 0 && !items.includes(text)) {\n    itemInputs.push({\n      text,\n      id: text,\n      leadingVisual: PlusIcon,\n    })\n  }\n\n  const selected = itemInputs.filter(item => value.includes(item.id as string))\n  const [isOpen, setIsOpen] = useState(false)\n\n  return (\n    <SelectPanel\n      loading={loading}\n      title=\"Tool name\"\n      renderAnchor={({'aria-labelledby': ariaLabelledBy, ...props}) => (\n        <Button\n          leadingVisual={PlusIcon}\n          trailingVisual={TriangleDownIcon}\n          aria-haspopup=\"dialog\"\n          aria-labelledby={` ${ariaLabelledBy}`}\n          {...props}\n        >\n          Add tool\n        </Button>\n      )}\n      placeholderText=\"Enter the name of a code scanning tool\"\n      open={isOpen}\n      onOpenChange={state => {\n        setIsOpen(state)\n        !state && setText('')\n      }}\n      items={itemInputs}\n      selected={selected}\n      onSelectedChange={(item: ItemInput[]) => {\n        if (Array.isArray(item)) {\n          const all = [...item, ...omittedButSelected]\n          onValueChange?.(all.map(v => v.text).sort() as string[])\n        }\n      }}\n      filterValue={text}\n      onFilterChange={setText}\n      overlayProps={{\n        width: 'medium',\n        height: 'xsmall',\n      }}\n    />\n  )\n}\n\ntry{ CodeScanningTools.displayName ||= 'CodeScanningTools' } catch {}\ntry{ ThresholdDropDown.displayName ||= 'ThresholdDropDown' } catch {}\ntry{ ToolPicker.displayName ||= 'ToolPicker' } catch {}","import {useRegisterErrors, type ErrorFilterFunction} from '../../../hooks/use-register-errors'\nimport type {RegisteredRuleErrorComponent, ValidationError} from '../../../types/rules-types'\nimport {RulesetFormErrorFlash} from '../../RulesetFormErrorFlash'\n\nconst requiredStatusCheckFilters: Record<string, ErrorFilterFunction> = {\n  unexpectedType: {\n    args: 'error',\n    func: (error: ValidationError) => {\n      for (const subError of error.sub_errors as ValidationError[]) {\n        if (\n          error.field === 'required_status_checks' &&\n          subError.error_code === 'unexpected_type' &&\n          subError.message === 'Expected array, got NilClass'\n        ) {\n          return true\n        }\n      }\n      return false\n    },\n  },\n}\n\nexport function RequiredStatusChecksError({errors, errorId, errorRef, fields}: RegisteredRuleErrorComponent) {\n  const parsedErrors = useRegisterErrors({errors, fields, filters: requiredStatusCheckFilters})\n  let message: string | undefined = undefined\n\n  if (parsedErrors.unexpectedType && parsedErrors.unexpectedType.length > 0) {\n    message = 'Required status checks cannot be empty. Please add at least one status check or disable the rule.'\n  } else if (parsedErrors.unregistered && parsedErrors.unregistered.length > 0) {\n    message = parsedErrors.unregistered[0]?.message || 'An error occurred'\n  }\n\n  if (message) {\n    return (\n      <RulesetFormErrorFlash errorId={errorId} errorRef={errorRef}>\n        {message}\n      </RulesetFormErrorFlash>\n    )\n  }\n  return null\n}\n\ntry{ RequiredStatusChecksError.displayName ||= 'RequiredStatusChecksError' } catch {}","import {useRegisterErrors, type ErrorFilterFunction} from '../../../hooks/use-register-errors'\nimport type {RegisteredRuleErrorComponent, ValidationError} from '../../../types/rules-types'\nimport {RulesetFormErrorFlash} from '../../RulesetFormErrorFlash'\n\nconst requiredDeploymentsErrorFilters: Record<string, ErrorFilterFunction> = {\n  unexpectedType: {\n    args: 'error',\n    func: (error: ValidationError) => {\n      for (const subError of error.sub_errors as ValidationError[]) {\n        if (\n          error.field === 'required_deployment_environments' &&\n          subError.error_code === 'unexpected_type' &&\n          subError.message === 'Expected array, got NilClass'\n        ) {\n          return true\n        }\n      }\n      return false\n    },\n  },\n}\n\nexport function RequiredDeploymentsError({errors, errorId, errorRef, fields}: RegisteredRuleErrorComponent) {\n  const parsedErrors = useRegisterErrors({errors, fields, filters: requiredDeploymentsErrorFilters})\n  let message: string | undefined = undefined\n\n  if (parsedErrors.unexpectedType && parsedErrors.unexpectedType.length > 0) {\n    message = 'Required deployments cannot be empty. Please add at least one deployment or disable the rule.'\n  } else if (parsedErrors.unregistered && parsedErrors.unregistered.length > 0) {\n    message = parsedErrors.unregistered[0]?.message || 'An error occurred'\n  }\n\n  return (\n    (message && (\n      <RulesetFormErrorFlash errorId={errorId} errorRef={errorRef}>\n        {message}\n      </RulesetFormErrorFlash>\n    )) ||\n    null\n  )\n}\n\ntry{ RequiredDeploymentsError.displayName ||= 'RequiredDeploymentsError' } catch {}","import {useRegisterErrors, type ErrorFilterFunction} from '../../../hooks/use-register-errors'\nimport type {RegisteredRuleErrorComponent, ValidationError} from '../../../types/rules-types'\nimport {RulesetFormErrorFlash} from '../../RulesetFormErrorFlash'\n\nconst maxFileSizeFilters: Record<string, ErrorFilterFunction> = {\n  maxFileSize: {\n    args: 'error',\n    // max file size errors are handled inline by the ui control\n    func: (error: ValidationError) => {\n      return error.field === 'max_file_size'\n    },\n  },\n}\n\nexport const MaxFileSizeError = ({errors, errorId, errorRef, fields}: RegisteredRuleErrorComponent) => {\n  const parsedErrors = useRegisterErrors({errors, fields, filters: maxFileSizeFilters})\n  if (parsedErrors.unregistered && parsedErrors.unregistered.length > 0) {\n    return (\n      <RulesetFormErrorFlash errorId={errorId} errorRef={errorRef}>\n        {parsedErrors.unregistered[0]?.message || 'An error occurred'}\n      </RulesetFormErrorFlash>\n    )\n  }\n  return null\n}\n\ntry{ MaxFileSizeError.displayName ||= 'MaxFileSizeError' } catch {}","import {useRegisterErrors, type ErrorFilterFunction} from '../../../hooks/use-register-errors'\nimport type {RegisteredRuleErrorComponent, ValidationError} from '../../../types/rules-types'\nimport {RulesetFormErrorFlash} from '../../RulesetFormErrorFlash'\n\nconst maxFilePathFilters: Record<string, ErrorFilterFunction> = {\n  maxFilePath: {\n    args: 'error',\n    // max file path errors are handled inline by the ui control\n    func: (error: ValidationError) => {\n      return error.field === 'max_file_path_length'\n    },\n  },\n}\n\nexport const MaxFilePathError = ({errors, errorId, errorRef, fields}: RegisteredRuleErrorComponent) => {\n  const parsedErrors = useRegisterErrors({errors, fields, filters: maxFilePathFilters})\n  if (parsedErrors.unregistered && parsedErrors.unregistered.length > 0) {\n    return (\n      <RulesetFormErrorFlash errorId={errorId} errorRef={errorRef}>\n        {parsedErrors.unregistered[0]?.message || 'An error occurred'}\n      </RulesetFormErrorFlash>\n    )\n  }\n  return null\n}\n\ntry{ MaxFilePathError.displayName ||= 'MaxFilePathError' } catch {}","import {useRegisterErrors, type ErrorFilterFunction} from '../../../hooks/use-register-errors'\nimport type {RegisteredRuleErrorComponent, ValidationError} from '../../../types/rules-types'\nimport {RulesetFormErrorFlash} from '../../RulesetFormErrorFlash'\n\nconst filePathRestrictionsFilter: Record<string, ErrorFilterFunction> = {\n  unexpectedType: {\n    args: 'error',\n    func: (error: ValidationError) => {\n      for (const subError of error.sub_errors as ValidationError[]) {\n        if (\n          error.field === 'restricted_file_paths' &&\n          subError.error_code === 'unexpected_type' &&\n          subError.message === 'Expected array, got NilClass'\n        ) {\n          return true\n        }\n      }\n      return false\n    },\n  },\n}\n\nexport const FilePathRestrictionsError = ({errors, errorId, errorRef, fields}: RegisteredRuleErrorComponent) => {\n  const parsedErrors = useRegisterErrors({errors, fields, filters: filePathRestrictionsFilter})\n  let message: string | undefined = undefined\n  if (parsedErrors.unexpectedType && parsedErrors.unexpectedType.length > 0) {\n    message = 'Restricted file paths cannot be empty. Please add at least one restricted file path or disable the rule.'\n  } else if (parsedErrors.unregistered && parsedErrors.unregistered.length > 0) {\n    message = parsedErrors.unregistered[0]?.message || 'An error occurred'\n  }\n  return (\n    (message && (\n      <RulesetFormErrorFlash errorId={errorId} errorRef={errorRef}>\n        {message}\n      </RulesetFormErrorFlash>\n    )) ||\n    null\n  )\n}\n\ntry{ FilePathRestrictionsError.displayName ||= 'FilePathRestrictionsError' } catch {}","import {useRegisterErrors, type ErrorFilterFunction} from '../../../hooks/use-register-errors'\nimport type {RegisteredRuleErrorComponent, ValidationError} from '../../../types/rules-types'\nimport {RulesetFormErrorFlash} from '../../RulesetFormErrorFlash'\n\nconst fileExtensionRestrictionsFilter: Record<string, ErrorFilterFunction> = {\n  unexpectedType: {\n    args: 'error',\n    func: (error: ValidationError) => {\n      for (const subError of error.sub_errors as ValidationError[]) {\n        if (\n          error.field === 'restricted_file_extensions' &&\n          subError.error_code === 'unexpected_type' &&\n          subError.message === 'Expected array, got NilClass'\n        ) {\n          return true\n        }\n      }\n      return false\n    },\n  },\n}\nexport const FileExtensionRestrictionsError = ({errors, errorId, errorRef, fields}: RegisteredRuleErrorComponent) => {\n  const parsedErrors = useRegisterErrors({errors, fields, filters: fileExtensionRestrictionsFilter})\n  let message: string | undefined = undefined\n  if (parsedErrors.unexpectedType && parsedErrors.unexpectedType.length > 0) {\n    message =\n      'Restricted file extensions cannot be empty. Please add at least one restricted file extension or disable the rule.'\n  } else if (parsedErrors.unregistered && parsedErrors.unregistered.length > 0) {\n    message = parsedErrors.unregistered[0]?.message || 'An error occurred'\n  }\n  return message ? (\n    <RulesetFormErrorFlash errorId={errorId} errorRef={errorRef}>\n      {message}\n    </RulesetFormErrorFlash>\n  ) : null\n}\n\ntry{ FileExtensionRestrictionsError.displayName ||= 'FileExtensionRestrictionsError' } catch {}","import {useRegisterErrors, type ErrorFilterFunction} from '../../../hooks/use-register-errors'\nimport type {RegisteredRuleErrorComponent, ValidationError} from '../../../types/rules-types'\nimport {RulesetFormErrorFlash} from '../../RulesetFormErrorFlash'\n\nconst CodeScanningToolsFilter: Record<string, ErrorFilterFunction> = {\n  missing: {\n    args: 'error',\n    func: (error: ValidationError) => {\n      for (const subError of error.sub_errors as ValidationError[]) {\n        if (error.field === 'code_scanning_tools' && subError.error_code === 'missing') {\n          return true\n        }\n      }\n      return false\n    },\n  },\n}\nexport const CodeScanningToolsError = ({errors, errorId, errorRef, fields}: RegisteredRuleErrorComponent) => {\n  const parsedErrors = useRegisterErrors({errors, fields, filters: CodeScanningToolsFilter})\n  let message: string | undefined = undefined\n  if (parsedErrors.missing && parsedErrors.missing.length > 0) {\n    message = parsedErrors.missing[0]?.sub_errors?.[0]?.message || 'Please select at least one code scanning tool'\n  } else if (parsedErrors.unregistered && parsedErrors.unregistered.length > 0) {\n    message = parsedErrors.unregistered[0]?.message || 'An error occurred'\n  }\n  return message ? (\n    <RulesetFormErrorFlash errorId={errorId} errorRef={errorRef}>\n      {message}\n    </RulesetFormErrorFlash>\n  ) : null\n}\n\ntry{ CodeScanningToolsError.displayName ||= 'CodeScanningToolsError' } catch {}","import type {RegisteredRuleErrorComponent, ValidationError, WorkflowError} from '../../../types/rules-types'\nimport {RulesetFormErrorFlash} from '../../RulesetFormErrorFlash'\nimport {useRegisterErrors, type ErrorFilterFunction} from '../../../hooks/use-register-errors'\n\nconst workflowErrorFilters: Record<string, ErrorFilterFunction> = {\n  unexpectedType: {\n    args: 'error',\n    func: (error: ValidationError) => {\n      for (const subError of error.sub_errors as WorkflowError[]) {\n        if (\n          error.field === 'workflows' &&\n          subError.error_code === 'unexpected_type' &&\n          subError.message === 'Expected array, got NilClass'\n        ) {\n          return true\n        }\n      }\n      return false\n    },\n  },\n  // This function is used to indicate that the error is handled by the form control\n  // We must register these so they don't show in the error component\n  handledByFormControl: {\n    args: 'error',\n    func: (error: ValidationError) => {\n      for (const subError of error.sub_errors as WorkflowError[]) {\n        if (error.field === 'workflows' && subError.repo_and_path !== undefined) {\n          return true\n        }\n      }\n      return false\n    },\n  },\n}\n\nexport function WorkflowsError({errors, errorId, errorRef, fields}: RegisteredRuleErrorComponent) {\n  const parsedErrors = useRegisterErrors({errors, fields, filters: workflowErrorFilters})\n  let message: string | undefined = undefined\n\n  if (parsedErrors.unexpectedType && parsedErrors.unexpectedType.length > 0) {\n    message = 'Workflows cannot be empty. Please add at least one workflow or disable the rule.'\n  } else if (parsedErrors.unregistered && parsedErrors.unregistered.length > 0) {\n    message = parsedErrors.unregistered[0]?.message || 'An error occurred'\n  }\n\n  if (message) {\n    return (\n      <RulesetFormErrorFlash errorId={errorId} errorRef={errorRef}>\n        {message}\n      </RulesetFormErrorFlash>\n    )\n  }\n  return null\n}\n\ntry{ WorkflowsError.displayName ||= 'WorkflowsError' } catch {}","/* eslint eslint-comments/no-use: off */\n/* eslint-disable filenames/match-regex */\nimport type React from 'react'\nimport {Suspense} from 'react'\nimport {MergeQueueGroupingStrategy, renderMergeQueueGroupingStrategy} from './MergeQueueGroupingStrategy'\nimport {MergeQueueMergeMethod} from './MergeQueueMergeMethod'\nimport {RequiredStatusCheckSelectList} from './RequiredStatusCheckSelectList'\nimport type {ParameterValue, RegisteredRuleErrorComponent, RegisteredRuleSchemaComponent} from '../../types/rules-types'\nimport {RestrictedCommitsList} from './RestrictedCommitsList'\nimport {RequiredDeployments} from './RequiredDeployments'\nimport {Workflows} from './Workflows'\nimport {MergeQueueError} from './errors/MergeQueueError'\nimport {FileExtensionRestrictions} from './FileExtensionRestrictions'\nimport {FilePathRestrictions} from './FilePathRestrictions'\nimport {MaxFilePathLength} from './MaxFilePathLength'\nimport {MaxFileSize} from './MaxFileSize'\nimport {CodeScanningTools} from './CodeScanningTools'\nimport {RequiredStatusChecksError} from './errors/RequiredStatusChecksError'\nimport {RequiredDeploymentsError} from './errors/RequiredDeploymentsError'\nimport {MaxFileSizeError} from './errors/MaxFileSizeError'\nimport {MaxFilePathError} from './errors/MaxFilePathError'\nimport {FilePathRestrictionsError} from './errors/FilePathRestrictionsError'\nimport {FileExtensionRestrictionsError} from './errors/FileExtensionRestrictionsError'\nimport {CodeScanningToolsError} from './errors/CodeScanningToolsError'\nimport {WorkflowsError} from './errors/WorkflowsError'\n\nexport const componentRegistry: Record<string, React.FC<RegisteredRuleSchemaComponent>> = {\n  restricted_commits: props => <RestrictedCommitsList {...props} />,\n  required_status_checks: props => <RequiredStatusCheckSelectList {...props} />,\n  required_deployments: props => <RequiredDeployments {...props} />,\n  workflows: props => <Workflows {...props} />,\n  merge_queue_grouping_strategy: props => <MergeQueueGroupingStrategy {...props} />,\n  merge_queue_merge_method: props => <MergeQueueMergeMethod {...props} />,\n  file_path_restriction: props => <FilePathRestrictions {...props} />,\n  file_extension_restriction: props => <FileExtensionRestrictions {...props} />,\n  max_file_path_length: props => <MaxFilePathLength {...props} />,\n  max_file_size: props => <MaxFileSize {...props} />,\n  code_scanning_tools: props => <CodeScanningTools {...props} />,\n}\n\nexport const errorRegistry: Record<string, React.FC<RegisteredRuleErrorComponent>> = {\n  merge_queue: props => (\n    <Suspense>\n      <MergeQueueError {...props} />\n    </Suspense>\n  ),\n  code_scanning: props => (\n    <Suspense>\n      <CodeScanningToolsError {...props} />\n    </Suspense>\n  ),\n  workflows: props => (\n    <Suspense>\n      <WorkflowsError {...props} />\n    </Suspense>\n  ),\n  required_status_checks: props => (\n    <Suspense>\n      <RequiredStatusChecksError {...props} />\n    </Suspense>\n  ),\n  required_deployments: props => (\n    <Suspense>\n      <RequiredDeploymentsError {...props} />\n    </Suspense>\n  ),\n  max_file_size: props => (\n    <Suspense>\n      <MaxFileSizeError {...props} />\n    </Suspense>\n  ),\n  max_file_path_length: props => (\n    <Suspense>\n      <MaxFilePathError {...props} />\n    </Suspense>\n  ),\n  file_path_restriction: props => (\n    <Suspense>\n      <FilePathRestrictionsError {...props} />\n    </Suspense>\n  ),\n  file_extension_restriction: props => (\n    <Suspense>\n      <FileExtensionRestrictionsError {...props} />\n    </Suspense>\n  ),\n  required_depoyments: props => (\n    <Suspense>\n      <RequiredDeploymentsError {...props} />\n    </Suspense>\n  ),\n}\n\n// Whether or not the component should be rendered\nexport const visibilityRegistry: Record<string, (value: ParameterValue, readonly: boolean) => boolean> = {\n  merge_queue_grouping_strategy: (value: ParameterValue, readonly: boolean) =>\n    renderMergeQueueGroupingStrategy({value: value as string, readonly}),\n}\n","import {useRegisterErrors} from '../../../hooks/use-register-errors'\nimport type {RegisteredRuleErrorComponent} from '../../../types/rules-types'\nimport {RulesetFormErrorFlash} from '../../RulesetFormErrorFlash'\n\nexport const RulesetError = ({errors, errorId, errorRef, fields}: RegisteredRuleErrorComponent) => {\n  const parsedErrors = useRegisterErrors({errors, fields})\n  if (parsedErrors.unregistered && parsedErrors.unregistered.length > 0) {\n    return (\n      <RulesetFormErrorFlash errorId={errorId} errorRef={errorRef}>\n        {parsedErrors.unregistered[0]?.message || 'An error occurred'}\n      </RulesetFormErrorFlash>\n    )\n  }\n  return null\n}\n\ntry{ RulesetError.displayName ||= 'RulesetError' } catch {}","import type {FC, RefObject} from 'react'\nimport {useMemo, useState} from 'react'\nimport {ActionList, ActionMenu, FormControl, Checkbox, TextInput, Label, Box, Button, Text} from '@primer/react'\nimport {ChevronDownIcon, ChevronUpIcon} from '@primer/octicons-react'\nimport type {\n  Rule,\n  RuleSchema,\n  ValidationError,\n  HelpUrls,\n  Parameter,\n  RuleConfigMetadata,\n  SourceType,\n  RegisteredRuleErrorComponent,\n  FieldRef,\n} from '../../types/rules-types'\nimport {componentRegistry, errorRegistry, visibilityRegistry} from '../rule-schema'\nimport {rangeBounds, rangeToArray} from '../../helpers/range'\nimport {RulesetError} from '../rule-schema/errors/RulesetError'\n\ntype RuleRowProps = {\n  readOnly: boolean\n  rulesetId?: number\n  sourceType: SourceType\n  rule?: Rule\n  ruleSchema: RuleSchema\n  errors: ValidationError[]\n  errorRef?: RefObject<HTMLDivElement>\n  fieldRefs?: FieldRef\n  helpUrls?: HelpUrls\n  onAdd: () => void\n  onRemove: () => void\n  onUpdateParameters: (parameters: Parameter) => void\n}\n\nfunction dropdownForNumberField(field: RuleSchema['parameterSchema']['fields'][0]): boolean {\n  if (field.type !== 'integer') {\n    return false\n  }\n\n  const bounds = rangeBounds(field.allowed_range)\n  if (typeof bounds === 'undefined') {\n    return false\n  }\n\n  // Temporarily support no `ui_prefer_dropdown` setting for deploy safety.\n  if (typeof field.ui_prefer_dropdown === 'undefined') {\n    return true\n  }\n\n  return field.ui_prefer_dropdown\n}\n\nexport const RuleRow: FC<RuleRowProps> = ({\n  readOnly,\n  rulesetId,\n  sourceType,\n  rule,\n  ruleSchema,\n  errors,\n  errorRef,\n  fieldRefs,\n  helpUrls,\n  onAdd,\n  onUpdateParameters,\n  onRemove,\n}) => {\n  const [additionalOptionsExpanded, setAdditionalOptionsExpanded] = useState(false)\n\n  const ErrorComponent: React.FC<RegisteredRuleErrorComponent> | undefined =\n    rule?.ruleType && errors.length > 0\n      ? errorRegistry[rule.ruleType] || ((props: RegisteredRuleErrorComponent) => <RulesetError {...props} />)\n      : undefined\n\n  const fields = !readOnly\n    ? ruleSchema.parameterSchema.fields\n    : ruleSchema.parameterSchema.fields.filter(\n        field =>\n          // defer to visibility registery if defined\n          (field.ui_control && visibilityRegistry[field.ui_control]?.(rule?.parameters[field.name], readOnly)) ??\n          (field.type !== 'boolean' || (rule?.parameters[field.name] as boolean) === true),\n      )\n  const hideContainer = ruleSchema.parameterSchema.ui_options?.hide_settings_container || false\n\n  const renderErrorComponent = useMemo(() => {\n    // No errors, no component to render\n    if (errors.length === 0) {\n      return false\n    }\n    // Rule is disabled don't show the error\n    if (rule === undefined) {\n      return false\n    }\n\n    return true\n  }, [errors.length, rule])\n\n  return (\n    <div className={`d-flex flex-1 flex-column`}>\n      {!readOnly ? (\n        <FormControl>\n          <Checkbox\n            checked={typeof rule !== 'undefined'}\n            aria-errormessage={`${rule?.ruleType}-error`}\n            aria-invalid={renderErrorComponent && !!ErrorComponent}\n            onChange={e => {\n              if (e.target.checked) {\n                setAdditionalOptionsExpanded(true)\n                onAdd()\n              } else {\n                onRemove()\n              }\n            }}\n          />\n          {ruleSchema.beta ? (\n            <FormControl.Label sx={{display: 'flex', justifyContent: 'center'}}>\n              {ruleSchema.displayName}\n              <Label variant=\"success\" sx={{marginLeft: 2}}>\n                Beta\n              </Label>\n            </FormControl.Label>\n          ) : (\n            <FormControl.Label>{ruleSchema.displayName}</FormControl.Label>\n          )}\n          <FormControl.Caption>{ruleSchema.description}</FormControl.Caption>\n        </FormControl>\n      ) : (\n        <div>\n          {ruleSchema.beta ? (\n            <span className=\"d-flex flex-items-center text-bold\">\n              {ruleSchema.displayName}\n              <Label variant=\"success\" sx={{marginLeft: 2}}>\n                Beta\n              </Label>\n            </span>\n          ) : (\n            <span className=\"text-bold\">{ruleSchema.displayName}</span>\n          )}\n          <span className=\"d-block text-small color-fg-muted\">{ruleSchema.description}</span>\n        </div>\n      )}\n\n      {renderErrorComponent && ErrorComponent ? (\n        <div className=\"flex-1\">\n          <Box sx={{pl: 2}}>\n            <Box sx={{px: 3}}>\n              <ErrorComponent\n                errorId={`${rule?.ruleType}-error`}\n                rulesetId={rulesetId}\n                errors={errors}\n                sourceType={sourceType}\n                errorRef={errorRef}\n                fields={fields}\n              />\n            </Box>\n          </Box>\n        </div>\n      ) : null}\n\n      {rule && fields.length > 0 && (\n        <>\n          {hideContainer ? (\n            <div className=\"flex-1 mt-2\">\n              <Box sx={{pl: `${readOnly ? '-2px' : '2'}`}}>\n                <AdditionalSettings\n                  readOnly={readOnly}\n                  rulesetId={rulesetId}\n                  sourceType={sourceType}\n                  helpUrls={helpUrls}\n                  fields={fields}\n                  fieldRefs={fieldRefs}\n                  errors={errors || []}\n                  parameters={rule.parameters}\n                  metadata={rule.metadata}\n                  onParametersChange={onUpdateParameters}\n                />\n              </Box>\n            </div>\n          ) : (\n            <div className=\"flex-1 mt-2\">\n              <Box sx={{pl: `${readOnly ? '0' : '12px'}`}}>\n                <Button\n                  variant=\"invisible\"\n                  sx={{color: 'fg.subtle'}}\n                  onClick={() => setAdditionalOptionsExpanded(prev => !prev)}\n                >\n                  <Text sx={{mr: 1}}>\n                    {additionalOptionsExpanded ? 'Hide additional settings' : 'Show additional settings'}\n                  </Text>\n                  {additionalOptionsExpanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n                </Button>\n              </Box>\n              {additionalOptionsExpanded && (\n                <Box sx={{pl: `${readOnly ? '-2px' : '10px'}`}}>\n                  <AdditionalSettings\n                    readOnly={readOnly}\n                    rulesetId={rulesetId}\n                    sourceType={sourceType}\n                    helpUrls={helpUrls}\n                    fields={fields}\n                    errors={errors || []}\n                    fieldRefs={fieldRefs}\n                    parameters={rule.parameters}\n                    metadata={rule.metadata}\n                    onParametersChange={onUpdateParameters}\n                  />\n                </Box>\n              )}\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  )\n}\n\nfunction AdditionalSettingsDropdownMenu<Value extends string | number>({\n  ariaLabel,\n  selectedValue,\n  options,\n  onSelect,\n}: {\n  ariaLabel: string\n  selectedValue: Value\n  options: Array<{label: string; value: Value}>\n  onSelect: (value: Value) => void\n}) {\n  return (\n    <ActionMenu>\n      <ActionMenu.Button aria-label={ariaLabel}>\n        {options.find(option => option.value === selectedValue)?.label || ''}\n      </ActionMenu.Button>\n      <ActionMenu.Overlay width=\"small\">\n        <ActionList selectionVariant=\"single\">\n          {options.map(option => {\n            return (\n              <ActionList.Item\n                key={option.value}\n                selected={option.value === selectedValue}\n                onSelect={() => {\n                  onSelect(option.value)\n                }}\n              >\n                {option.label}\n              </ActionList.Item>\n            )\n          })}\n        </ActionList>\n      </ActionMenu.Overlay>\n    </ActionMenu>\n  )\n}\n\nconst AdditionalSettings = ({\n  readOnly,\n  rulesetId,\n  sourceType,\n  fields,\n  errors,\n  fieldRefs,\n  parameters,\n  metadata,\n  helpUrls,\n  onParametersChange,\n}: Pick<RuleRowProps, 'readOnly' | 'rulesetId' | 'sourceType' | 'helpUrls'> & {\n  fields: RuleSchema['parameterSchema']['fields']\n  fieldRefs?: FieldRef\n  errors: ValidationError[]\n  parameters: Parameter\n  metadata?: RuleConfigMetadata\n  onParametersChange: (paramters: Parameter) => void\n}) => (\n  <ul>\n    {fields.map(field => {\n      let control: React.ReactNode = null\n\n      const fieldErrors = errors.filter(error => error.field === field.name)\n      if (field.ui_control) {\n        const RegisteredComponent = componentRegistry[field.ui_control]\n        if (!RegisteredComponent) {\n          throw new Error(`Unsupported control: ${field.ui_control}`)\n        }\n\n        control = (\n          <RegisteredComponent\n            readOnly={readOnly}\n            rulesetId={rulesetId}\n            sourceType={sourceType}\n            helpUrls={helpUrls}\n            field={field}\n            fieldRef={fieldRefs?.[field.name]}\n            value={parameters[field.name]}\n            metadata={metadata}\n            errors={fieldErrors}\n            onValueChange={newValue =>\n              onParametersChange({\n                ...parameters,\n                [field.name]: newValue,\n              })\n            }\n          />\n        )\n      } else {\n        switch (field.type) {\n          case 'array':\n          case 'object':\n            throw new Error(`Field type requires custom control: ${JSON.stringify(field)}`)\n          case 'boolean': {\n            const fieldLabel = `${field.name}Label`\n            control = !readOnly ? (\n              <FormControl>\n                <Checkbox\n                  checked={(parameters[field.name] as boolean) || false}\n                  onChange={e => {\n                    onParametersChange({\n                      ...parameters,\n                      [field.name]: e.target.checked,\n                    })\n                  }}\n                />\n                <FormControl.Label id={fieldLabel}>{field.display_name}</FormControl.Label>\n                <FormControl.Caption>{field.description}</FormControl.Caption>\n              </FormControl>\n            ) : (\n              <div>\n                <span className=\"text-bold\">{field.display_name}</span>\n                <span className=\"d-block text-small color-fg-muted\">{field.description}</span>\n              </div>\n            )\n            break\n          }\n          default:\n            control = !readOnly ? (\n              <FormControl>\n                <FormControl.Label>{field.display_name}</FormControl.Label>\n                <FormControl.Caption>{field.description}</FormControl.Caption>\n                {field.type === 'integer' ? (\n                  field.allowed_range && dropdownForNumberField(field) ? (\n                    <AdditionalSettingsDropdownMenu\n                      ariaLabel=\"Select number\"\n                      selectedValue={(parameters[field.name] || 0) as number}\n                      options={rangeToArray(field.allowed_range).map(value => ({\n                        label: value.toString(),\n                        value,\n                      }))}\n                      onSelect={selectedValue => {\n                        onParametersChange({\n                          ...parameters,\n                          [field.name]: selectedValue,\n                        })\n                      }}\n                    />\n                  ) : (\n                    <TextInput\n                      className=\"width-full\"\n                      type={'number'}\n                      ref={fieldRefs?.[field.name] as RefObject<HTMLInputElement>}\n                      min={rangeBounds(field.allowed_range)?.min}\n                      max={rangeBounds(field.allowed_range)?.max}\n                      aria-invalid={fieldErrors.length > 0}\n                      value={(parameters[field.name] || 0) as number}\n                      onChange={e => {\n                        onParametersChange({\n                          ...parameters,\n                          [field.name]: parseInt(e.target.value),\n                        })\n                      }}\n                    />\n                  )\n                ) : field.allowed_options ? (\n                  <AdditionalSettingsDropdownMenu\n                    ariaLabel={`Select ${field.display_name}`}\n                    selectedValue={\n                      (parameters[field.name] || field.default_value || field.allowed_options[0]?.value) as string\n                    }\n                    options={field.allowed_options.map(option => ({label: option.display_name, value: option.value}))}\n                    onSelect={selectedValue => {\n                      onParametersChange({\n                        ...parameters,\n                        [field.name]: selectedValue,\n                      })\n                    }}\n                  />\n                ) : field.allowed_values ? (\n                  <AdditionalSettingsDropdownMenu\n                    ariaLabel={`Select ${field.display_name}`}\n                    selectedValue={(parameters[field.name] || field.default_value || field.allowed_values[0]) as string}\n                    options={field.allowed_values.map(value => ({label: value, value}))}\n                    onSelect={selectedValue => {\n                      onParametersChange({\n                        ...parameters,\n                        [field.name]: selectedValue,\n                      })\n                    }}\n                  />\n                ) : (\n                  <TextInput\n                    className=\"width-full\"\n                    type={'text'}\n                    aria-invalid={fieldErrors.length > 0}\n                    ref={fieldRefs?.[field.name] as RefObject<HTMLInputElement>}\n                    value={(parameters[field.name] || '') as string}\n                    onChange={e => {\n                      onParametersChange({\n                        ...parameters,\n                        [field.name]: e.target.value,\n                      })\n                    }}\n                  />\n                )}\n                {fieldErrors.length > 0 && (\n                  <FormControl.Validation variant=\"error\">{fieldErrors[0]?.message}</FormControl.Validation>\n                )}\n              </FormControl>\n            ) : (\n              <div>\n                <span className=\"text-bold\">{field.display_name}: </span>\n                <span>{parameters[field.name] as string | number}</span>\n                <span className=\"d-block text-small color-fg-muted\">{field.description}</span>\n              </div>\n            )\n            break\n        }\n      }\n\n      return (\n        <li key={field.name} className=\"px-3 py-2 d-flex flex-column\">\n          {control}\n        </li>\n      )\n    })}\n  </ul>\n)\n\ntry{ RuleRow.displayName ||= 'RuleRow' } catch {}\ntry{ AdditionalSettingsDropdownMenu.displayName ||= 'AdditionalSettingsDropdownMenu' } catch {}\ntry{ AdditionalSettings.displayName ||= 'AdditionalSettings' } catch {}","import type {Rule, RuleSchema} from '../types/rules-types'\n\nexport function getRuleSchemasByType(ruleSchemas: RuleSchema[]) {\n  return ruleSchemas.reduce<Record<string, RuleSchema>>((record, ruleSchema) => {\n    record[ruleSchema.type] = ruleSchema\n    return record\n  }, {})\n}\n\nexport function generateMetadataDescription(rule: Rule, ruleSchema: RuleSchema, includePattern = false) {\n  if (!ruleSchema.metadataPatternSchema?.propertyDescription) {\n    return undefined\n  }\n\n  const operatorDescription = ruleSchema.metadataPatternSchema?.supportedOperators?.find(\n    supportedOperator => supportedOperator.type === rule.parameters.operator,\n  )?.displayName\n\n  if (!operatorDescription) {\n    return undefined\n  }\n\n  return `${ruleSchema.metadataPatternSchema.propertyDescription} must${\n    rule.parameters.negate ? ' not ' : ' '\n  }${operatorDescription}${includePattern ? ` ${rule.parameters.pattern || ''}` : ''}`\n}\n","import type {Rule} from '../types/rules-types'\n\nexport enum DirtyState {\n  ADDED = 'New',\n  MODIFIED = 'Edited',\n  REMOVED = 'Removed',\n}\n\nexport const getRuleDirtyState = (rule: Rule) =>\n  rule.id || rule['parameters']['max_ref_updates'] !== undefined\n    ? rule._enabled\n      ? DirtyState.MODIFIED\n      : DirtyState.REMOVED\n    : DirtyState.ADDED\n","import type {FC} from 'react'\nimport {useState} from 'react'\nimport {Box, FormControl, Select, TextInput} from '@primer/react'\nimport type {DialogButtonProps} from '@primer/react/experimental'\nimport {Dialog} from '@primer/react/experimental'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport type {Rule, RuleSchema, Parameter, RulesetRoutePayload} from '../../types/rules-types'\nimport {RuleModalState} from '../../types/rules-types'\nimport {generateMetadataDescription} from '../../helpers/rule-schema'\nimport {useValidateRegex} from '@github-ui/repos-async-validation/use-validate-regex'\n\ntype AddMetadataPatternRuleDialogProps = {\n  rule: Rule\n  ruleSchema: RuleSchema\n  availableMetadataRuleSchemas: RuleSchema[]\n  removeRule: (rule: Rule) => void\n  updateRuleParameters: (rule: Rule, parameters: Parameter) => void\n  setRuleModalState: (rule: Rule, modalState: RuleModalState) => void\n  returnFocusRef?: React.RefObject<HTMLButtonElement>\n}\n\nexport const AddMetadataPatternRuleDialog: FC<AddMetadataPatternRuleDialogProps> = ({\n  rule,\n  ruleSchema,\n  availableMetadataRuleSchemas,\n  removeRule,\n  updateRuleParameters,\n  setRuleModalState,\n  returnFocusRef,\n}) => {\n  const [parameters, setParameters] = useState(rule.parameters)\n  const regexValidator = useValidateRegex()\n  const [metadataPatternValidation, setMetadataPatternValidation] = useState({\n    isValid: false,\n    touched: false,\n  })\n  const showMetadataPatternError = !metadataPatternValidation.isValid && metadataPatternValidation.touched\n  const {source, sourceType} = useRoutePayload<RulesetRoutePayload>()\n\n  const isOpen = rule._modalState === RuleModalState.CREATING || rule._modalState === RuleModalState.EDITING\n  const metadataRuleSchemaOptions =\n    rule._modalState === RuleModalState.EDITING\n      ? availableMetadataRuleSchemas.concat(ruleSchema) // when editing, include the current rule schema in the list\n      : availableMetadataRuleSchemas\n\n  const onClose = () => {\n    if (rule._modalState === RuleModalState.CREATING) {\n      removeRule(rule)\n    }\n\n    setRuleModalState(rule, RuleModalState.CLOSED)\n    setParameters(rule.parameters)\n  }\n\n  const onSave = async () => {\n    if (!regexValidator.isValid || !metadataPatternValidation.isValid) {\n      const pattern = (parameters.pattern as string) ?? ''\n      let invalid = false\n      if (pattern.trim() === '') {\n        setMetadataPatternValidation({isValid: false, touched: true})\n        invalid = true\n      }\n      if (!(await regexValidator.validate(pattern))) {\n        invalid = true\n      }\n      if (invalid) {\n        return\n      }\n    }\n\n    updateRuleParameters(rule, parameters)\n    setRuleModalState(rule, RuleModalState.CLOSED)\n  }\n\n  if (!isOpen) {\n    return null\n  }\n\n  let title = `${rule._modalState === RuleModalState.CREATING ? 'Add' : 'Edit'} a metadata restriction`\n  let subtitle: string | null =\n    'Restrict commit author email addresses, committer email addresses, commit message content, and other metadata'\n  if (rule._modalState === RuleModalState.CREATING && availableMetadataRuleSchemas.length === 0) {\n    title = 'All metadata restrictions have been used'\n    subtitle = null\n  }\n\n  const footerButtons: DialogButtonProps[] =\n    rule._modalState === RuleModalState.CREATING && availableMetadataRuleSchemas.length === 0\n      ? [{content: 'Ok', onClick: onClose, buttonType: 'normal'}]\n      : [\n          {content: 'Cancel', onClick: onClose, buttonType: 'normal'},\n          {\n            content: `${rule._modalState === RuleModalState.CREATING ? 'Add' : 'Update'}`,\n            onClick: onSave,\n            buttonType: 'primary',\n          },\n        ]\n\n  return (\n    <Box\n      sx={{\n        display: 'absolute',\n      }}\n    >\n      <Dialog\n        title={title}\n        subtitle={subtitle}\n        footerButtons={footerButtons}\n        height=\"auto\"\n        width=\"xlarge\"\n        onClose={onClose}\n        returnFocusRef={returnFocusRef}\n      >\n        {metadataRuleSchemaOptions.length ? (\n          <div className=\"d-flex flex-column gap-3\">\n            <FormControl>\n              <FormControl.Label>Applies to</FormControl.Label>\n              <Select\n                block\n                value={rule.ruleType}\n                aria-label=\"Property\"\n                onChange={e => {\n                  updateRuleParameters(\n                    {\n                      ...rule,\n                      ruleType: e.target.value,\n                    },\n                    parameters,\n                  )\n                }}\n              >\n                {metadataRuleSchemaOptions.map(schema => (\n                  <Select.Option key={schema.type} value={schema.type}>\n                    {schema.metadataPatternSchema?.propertyDescription}\n                  </Select.Option>\n                ))}\n              </Select>\n            </FormControl>\n\n            <FormControl>\n              <FormControl.Label>Requirement</FormControl.Label>\n              <Select\n                block\n                value={parameters.operator + (parameters.negate ? ':negate' : '')}\n                aria-label=\"Operator\"\n                onChange={e => {\n                  const [newOperator, strNegate] = e.target.value.split(':')\n                  const pattern = (parameters.pattern as string) ?? ''\n\n                  if (newOperator === 'regex') {\n                    regexValidator.validate(pattern)\n                  } else if (parameters.operator) {\n                    regexValidator.reset(true)\n                  }\n                  if (showMetadataPatternError) {\n                    setMetadataPatternValidation({isValid: pattern.trim() !== '', touched: true})\n                  }\n\n                  setParameters(prevParameters => ({\n                    ...prevParameters,\n                    operator: newOperator,\n                    negate: strNegate === 'negate',\n                  }))\n                }}\n              >\n                {ruleSchema.metadataPatternSchema?.supportedOperators?.map(supportedOperator => (\n                  <Select.Option key={supportedOperator.type} value={supportedOperator.type}>\n                    Must {supportedOperator.displayName}\n                  </Select.Option>\n                ))}\n\n                {ruleSchema.metadataPatternSchema?.supportedOperators?.map(supportedOperator => (\n                  <Select.Option key={`${supportedOperator.type}:true`} value={`${supportedOperator.type}:negate`}>\n                    Must not {supportedOperator.displayName}\n                  </Select.Option>\n                ))}\n              </Select>\n            </FormControl>\n\n            <FormControl required>\n              {regexValidator.showError ? (\n                <FormControl.Validation variant=\"error\" aria-live=\"polite\">\n                  Invalid pattern\n                </FormControl.Validation>\n              ) : null}\n              {showMetadataPatternError ? (\n                <FormControl.Validation variant=\"error\" aria-live=\"polite\">\n                  Pattern cannot be empty\n                </FormControl.Validation>\n              ) : null}\n              <FormControl.Label>Matching pattern</FormControl.Label>\n              <TextInput\n                block\n                value={parameters.pattern as string | undefined}\n                onChange={e => {\n                  setParameters({\n                    ...parameters,\n                    pattern: e.target.value,\n                  })\n\n                  regexValidator.reset()\n                  setMetadataPatternValidation({isValid: false, touched: false})\n                }}\n                onBlur={() => {\n                  const pattern = (parameters.pattern as string) ?? ''\n                  if (parameters.operator === 'regex') {\n                    regexValidator.validate(pattern)\n                  } else if (parameters.operator) {\n                    regexValidator.reset(true)\n                  }\n                  setMetadataPatternValidation({isValid: pattern.trim() !== '', touched: true})\n                }}\n              />\n            </FormControl>\n\n            <FormControl>\n              <FormControl.Label>Description</FormControl.Label>\n              <TextInput\n                block\n                value={parameters.name as string | undefined}\n                onChange={e =>\n                  setParameters({\n                    ...parameters,\n                    name: e.target.value,\n                  })\n                }\n                placeholder={generateMetadataDescription(\n                  {\n                    ...rule,\n                    parameters,\n                  },\n                  ruleSchema,\n                  true,\n                )}\n              />\n              <FormControl.Caption>\n                How this rule will appear to your {sourceType}&#39;s users throughout {source.name}.\n              </FormControl.Caption>\n            </FormControl>\n          </div>\n        ) : (\n          'This ruleset uses all metadata restriction types. You can edit the existing restrictions or remove them to add new ones.'\n        )}\n      </Dialog>\n    </Box>\n  )\n}\n\ntry{ AddMetadataPatternRuleDialog.displayName ||= 'AddMetadataPatternRuleDialog' } catch {}","import type {FC} from 'react'\nimport {Box, Text, IconButton, Truncate} from '@primer/react'\nimport {PencilIcon, ReplyIcon, TrashIcon} from '@primer/octicons-react'\nimport {RuleModalState, type Rule, type RuleSchema} from '../../types/rules-types'\nimport {generateMetadataDescription} from '../../helpers/rule-schema'\n\ninterface MetadataPatternRuleRowProps {\n  rule: Rule\n  ruleSchema: RuleSchema\n  readOnly: boolean\n  removeRule: (rule: Rule) => void\n  restoreRule: (rule: Rule) => void\n  setRuleModalState: (rule: Rule, modalState: RuleModalState) => void\n}\n\nexport const MetadataPatternRuleRow: FC<MetadataPatternRuleRowProps> = ({\n  rule,\n  ruleSchema,\n  readOnly,\n  removeRule,\n  restoreRule,\n  setRuleModalState,\n}) => {\n  const {pattern} = rule.parameters\n\n  let description = rule.parameters.name as string | undefined\n\n  if (!description) {\n    description = generateMetadataDescription(rule, ruleSchema)\n  }\n\n  return (\n    <>\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          flex: 1,\n          maxWidth: 'calc(100% - 120px)',\n          overflowX: 'hidden',\n          mr: 2,\n        }}\n      >\n        <Box sx={{maxWidth: '100%'}}>\n          <Text as=\"label\" sx={{display: 'flex', flexDirection: 'row', flexWrap: 'wrap'}}>\n            <Box as=\"span\" sx={{mr: 1}}>\n              {description}\n            </Box>\n            <Truncate\n              title={pattern as string}\n              sx={{\n                maxWidth: 200,\n                color: 'accent.fg',\n                px: 1,\n                whiteSpace: 'nowrap',\n                backgroundColor: 'accent.subtle',\n                borderRadius: 2,\n              }}\n            >\n              <Text\n                sx={{\n                  overflowX: 'hidden',\n                  textOverflow: 'ellipsis',\n                }}\n              >\n                {pattern as string | undefined}\n              </Text>\n            </Truncate>\n          </Text>\n        </Box>\n      </Box>\n      {readOnly ? null : (\n        <Box sx={{display: 'flex', alignItems: 'center'}}>\n          {rule._enabled ? (\n            <>\n              <IconButton\n                type=\"button\"\n                icon={PencilIcon}\n                aria-label=\"Edit this metadata rule\"\n                size=\"small\"\n                variant=\"invisible\"\n                onClick={() => {\n                  setRuleModalState(rule, RuleModalState.EDITING)\n                }}\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                }}\n              />\n              <IconButton\n                sx={{\n                  ml: 1,\n                  display: 'flex',\n                  alignItems: 'center',\n                }}\n                icon={TrashIcon}\n                type=\"button\"\n                size=\"small\"\n                variant=\"invisible\"\n                onClick={() => removeRule(rule)}\n                aria-label=\"Delete this metadata rule\"\n              />\n            </>\n          ) : (\n            <IconButton\n              type=\"button\"\n              icon={ReplyIcon}\n              aria-label=\"Restore this metadata rule\"\n              size=\"small\"\n              variant=\"invisible\"\n              onClick={() => restoreRule(rule)}\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            />\n          )}\n        </Box>\n      )}\n    </>\n  )\n}\n\ntry{ MetadataPatternRuleRow.displayName ||= 'MetadataPatternRuleRow' } catch {}","import {RepoLockedIcon} from '@primer/octicons-react'\nimport {Octicon, LinkButton, Link} from '@primer/react'\nimport type {FC} from 'react'\nimport type {UpsellInfo, Rule, RuleModalState, RuleWithSchema, ValidationError, FieldRef} from '../../types/rules-types'\nimport {Blankslate} from '../Blankslate'\nimport {MetadataPatternRuleRow} from './MetadataPatternRuleRow'\n\ntype RulesListProps = {\n  readOnly: boolean\n  upsellInfo: UpsellInfo\n  helpUrl?: string\n  title: string\n  rules: RuleWithSchema[]\n  removeRule: (rule: Rule) => void\n  restoreRule: (rule: Rule) => void\n  setRuleModalState: (rule: Rule, modalState: RuleModalState) => void\n  errors: ValidationError[]\n  fieldRefs?: FieldRef\n}\n\nexport const RulesList: FC<RulesListProps> = ({\n  readOnly,\n  upsellInfo,\n  helpUrl,\n  title,\n  rules,\n  removeRule,\n  restoreRule,\n  setRuleModalState,\n}) => {\n  return rules.length ? (\n    <ul>\n      {upsellInfo.enterpriseRulesets.cta.visible && (\n        <li className=\"Box-row d-flex flex-items-center\">\n          <Octicon className=\"color-fg-accent\" icon={RepoLockedIcon} size={54} />\n          <div className=\"ml-3\">\n            <h2 className=\"f4\">{title} restrictions are available to Enterprise organizations</h2>\n            <p className=\"color-fg-muted\">\n              {title} restrictions can ensure that commit messages contain a GitHub issue number, or enforce the format\n              of new branch and tag names.\n            </p>\n            {upsellInfo?.enterpriseRulesets.cta.path && (\n              <LinkButton href={upsellInfo?.enterpriseRulesets.cta.path} variant=\"primary\">\n                Upgrade\n              </LinkButton>\n            )}\n          </div>\n        </li>\n      )}\n\n      {rules.map(rule => (\n        <li key={rule.id || rule._id} className=\"Box-row d-flex flex-row flex-justify-between\">\n          <MetadataPatternRuleRow\n            readOnly={readOnly}\n            rule={rule}\n            ruleSchema={rule.schema}\n            removeRule={removeRule}\n            restoreRule={restoreRule}\n            setRuleModalState={setRuleModalState}\n          />\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <Blankslate heading={`No ${title.toLocaleLowerCase()} restrictions have been added`}>\n      {!readOnly && helpUrl && (\n        <Link target=\"_blank\" href={helpUrl}>\n          Learn more about {title.toLocaleLowerCase()} restrictions\n        </Link>\n      )}\n    </Blankslate>\n  )\n}\n\ntry{ RulesList.displayName ||= 'RulesList' } catch {}","import {useMemo, useState, type FC, type RefObject} from 'react'\nimport {Button, FormControl, Checkbox, Pagehead, Box, Heading, Label} from '@primer/react'\nimport {Blankslate} from '../Blankslate'\nimport type {\n  Rule,\n  ErrorRef,\n  RuleModalState,\n  RuleSchema,\n  RuleWithSchema,\n  RulesetTarget,\n  SourceType,\n  UpsellInfo,\n  ValidationError,\n} from '../../types/rules-types'\nimport {ListView} from '@github-ui/list-view'\nimport {RulesList} from './RulesList'\nimport {RulesetError} from '../rule-schema/errors/RulesetError'\n\ntype MetadataPatternRulesPanelProps = {\n  readOnly: boolean\n  upsellInfo: UpsellInfo\n  helpUrl?: string\n  title: string\n  rules: RuleWithSchema[]\n  availableRuleSchemas: RuleSchema[]\n  removeRule: (rule: Rule) => void\n  restoreRule: (rule: Rule) => void\n  setRuleModalState: (rule: Rule, modalState: RuleModalState) => void\n  addRule: (type: string) => void\n  metadataPatternRuleSchemas: RuleSchema[]\n  setMetadataRestrictionTypes: (metadataRestrictionTypes: string[]) => void\n  sourceType: SourceType\n  rulesetTarget: RulesetTarget\n  ruleErrors: Record<string, ValidationError[]>\n  errorRefs: ErrorRef\n  addRestrictionButtonRef?: React.RefObject<HTMLButtonElement>\n}\n\nexport const RestrictionsPanel: FC<MetadataPatternRulesPanelProps> = ({\n  readOnly,\n  upsellInfo,\n  helpUrl,\n  title,\n  rules,\n  availableRuleSchemas,\n  removeRule,\n  restoreRule,\n  setRuleModalState,\n  addRule,\n  metadataPatternRuleSchemas,\n  setMetadataRestrictionTypes,\n  rulesetTarget,\n  sourceType,\n  ruleErrors,\n  errorRefs,\n  addRestrictionButtonRef,\n}) => {\n  const protectionsHeader = (\n    <Pagehead\n      sx={{\n        mb: 0,\n        pb: 2,\n        fontSize: 3,\n        fontWeight: 'normal',\n        display: 'flex',\n        alignItems: 'center',\n      }}\n    >\n      Restrictions\n      {upsellInfo.enterpriseRulesets.cta.visible && (\n        <Label variant=\"attention\" size=\"large\" sx={{ml: 1}}>\n          Enterprise\n        </Label>\n      )}\n    </Pagehead>\n  )\n  const restrictions = [\n    {\n      metadataRestrictionTypes: ['commit_message_pattern', 'commit_author_email_pattern', 'committer_email_pattern'],\n      label: 'Restrict commit metadata',\n      caption:\n        'Restrict commit author email addresses, committer email addresses, commit message content, and other metadata',\n    },\n    {\n      metadataRestrictionTypes: ['branch_name_pattern', 'tag_name_pattern'],\n      label: `Restrict ${rulesetTarget} names`,\n      caption: `Restrict ${rulesetTarget} names`,\n    },\n  ]\n\n  return rules.length > 0 || !readOnly ? (\n    <Box className=\"Box\" sx={{borderTop: 0, borderLeft: 0, borderRight: 0, borderRadius: 0}}>\n      <ListView title=\"Restrictions\" metadata={protectionsHeader}>\n        {restrictions.map(restriction => (\n          <RestrictionsBox\n            key={restriction.label}\n            readOnly={readOnly}\n            upsellInfo={upsellInfo}\n            helpUrl={helpUrl}\n            title={title}\n            rules={rules.filter(rule => restriction.metadataRestrictionTypes.includes(rule.ruleType))}\n            removeRule={removeRule}\n            restoreRule={restoreRule}\n            setRuleModalState={setRuleModalState}\n            metadataRestrictionTypes={restriction.metadataRestrictionTypes}\n            label={restriction.label}\n            caption={restriction.caption}\n            availableRuleSchemas={availableRuleSchemas}\n            addRule={addRule}\n            metadataPatternRuleSchemas={metadataPatternRuleSchemas}\n            setMetadataRestrictionTypes={setMetadataRestrictionTypes}\n            sourceType={sourceType}\n            errors={Object.fromEntries(\n              Object.entries(ruleErrors).filter(([errorType, _]) =>\n                restriction.metadataRestrictionTypes.includes(errorType),\n              ),\n            )}\n            errorRef={\n              // Find the errors associated with metadataRestrictionTypes\n              // Then find the first error and get it's errorRef\n              errorRefs[\n                Object.keys(ruleErrors).find(errorType => restriction.metadataRestrictionTypes.includes(errorType)) ??\n                  ''\n              ]?.errorRef\n            }\n            addRestrictionButtonRef={addRestrictionButtonRef}\n          />\n        ))}\n      </ListView>\n    </Box>\n  ) : (\n    <Box sx={{mb: 4}}>\n      <Heading as=\"h3\" sx={{mb: 1, mt: 3, fontSize: 3, fontWeight: 'normal'}}>\n        Restrictions\n      </Heading>\n      <div className=\"Box mt-0\">\n        <Blankslate heading={'No restrictions have been added'} />\n      </div>\n    </Box>\n  )\n}\n\ntype RestrictionsBoxProps = {\n  readOnly: boolean\n  upsellInfo: UpsellInfo\n  helpUrl?: string\n  title: string\n  rules: RuleWithSchema[]\n  removeRule: (rule: Rule) => void\n  restoreRule: (rule: Rule) => void\n  setRuleModalState: (rule: Rule, modalState: RuleModalState) => void\n  metadataRestrictionTypes: string[]\n  label: string\n  caption: string\n  availableRuleSchemas: RuleSchema[]\n  addRule: (type: string) => void\n  metadataPatternRuleSchemas: RuleSchema[]\n  setMetadataRestrictionTypes: (metadataRestrictionTypes: string[]) => void\n  sourceType: SourceType\n  errors: Record<string, ValidationError[]>\n  errorRef?: RefObject<HTMLDivElement>\n  addRestrictionButtonRef?: React.RefObject<HTMLButtonElement>\n}\n\nexport const RestrictionsBox: FC<RestrictionsBoxProps> = ({\n  readOnly,\n  upsellInfo,\n  helpUrl,\n  title,\n  rules,\n  removeRule,\n  restoreRule,\n  setRuleModalState,\n  metadataRestrictionTypes,\n  label,\n  caption,\n  availableRuleSchemas,\n  addRule,\n  metadataPatternRuleSchemas,\n  setMetadataRestrictionTypes,\n  sourceType,\n  errors,\n  errorRef,\n  addRestrictionButtonRef,\n}) => {\n  const [boxChecked, setBoxChecked] = useState(rules.length > 0)\n\n  const hasErrors = useMemo(() => {\n    return Object.values(errors).flat().length > 0\n  }, [errors])\n\n  return (\n    <li className={`Box-row d-flex flex-justify-between flex-items-center gap-2 pl-0`}>\n      <div className={`d-flex flex-1 flex-column`}>\n        {!readOnly ? (\n          <>\n            <FormControl>\n              <Checkbox\n                checked={boxChecked}\n                onChange={() => {\n                  if (boxChecked) {\n                    for (const rule of rules) {\n                      removeRule(rule)\n                    }\n                  }\n                  setBoxChecked(!boxChecked)\n                }}\n              />\n              <FormControl.Label>{label}</FormControl.Label>\n              <FormControl.Caption>{caption}</FormControl.Caption>\n            </FormControl>\n            {boxChecked && hasErrors && (\n              <div className=\"pl-2\">\n                <div className=\"px-3\">\n                  <RulesetError\n                    errorRef={errorRef}\n                    errorId={`${label}-error`}\n                    sourceType={sourceType}\n                    fields={[]}\n                    errors={Object.values(errors).flat()}\n                  />\n                </div>\n              </div>\n            )}\n          </>\n        ) : (\n          <div>\n            <span className=\"text-bold\">{label}</span>\n            <span className=\"d-block text-small color-fg-muted\">{caption}</span>\n          </div>\n        )}\n        {boxChecked && (\n          <div className=\"pl-2 mt-2\">\n            <div className=\"px-3 py-2 d-flex flex-column\">\n              <div className=\"d-flex flex-column gap-2\">\n                <div className={`Box`}>\n                  <div className=\"Box-header d-flex flex-items-center p-2\">\n                    <div className=\"Box-title flex-1\">Metadata restrictions</div>\n                    {!readOnly && (\n                      <Button\n                        ref={addRestrictionButtonRef}\n                        className=\"ml-2\"\n                        type=\"button\"\n                        aria-label=\"Add workflow\"\n                        size=\"small\"\n                        onClick={() => {\n                          setMetadataRestrictionTypes(metadataRestrictionTypes)\n                          addRule(\n                            availableRuleSchemas.find(option => metadataRestrictionTypes.includes(option.type))?.type ||\n                              metadataPatternRuleSchemas.find(option => metadataRestrictionTypes.includes(option.type))!\n                                .type,\n                          )\n                        }}\n                      >\n                        Add restriction\n                      </Button>\n                    )}\n                  </div>\n                  <RulesList\n                    readOnly={readOnly}\n                    upsellInfo={upsellInfo}\n                    helpUrl={helpUrl}\n                    title={title}\n                    rules={rules}\n                    removeRule={removeRule}\n                    restoreRule={restoreRule}\n                    setRuleModalState={setRuleModalState}\n                    errors={Object.values(errors).flat() || []}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </li>\n  )\n}\n\ntry{ RestrictionsPanel.displayName ||= 'RestrictionsPanel' } catch {}\ntry{ RestrictionsBox.displayName ||= 'RestrictionsBox' } catch {}","import type {FC} from 'react'\nimport {useMemo, useState, useRef} from 'react'\nimport type {\n  HelpUrls,\n  Parameter,\n  Rule,\n  RuleSchema,\n  RuleWithSchema,\n  RulesetTarget,\n  ErrorRef,\n  SourceType,\n  UpsellInfo,\n  ValidationError,\n} from '../../types/rules-types'\nimport {RuleModalState} from '../../types/rules-types'\nimport {Blankslate} from '../Blankslate'\nimport {BorderBox} from '../BorderBox'\nimport {RuleRow} from './RuleRow'\nimport {getRuleSchemasByType} from '../../helpers/rule-schema'\nimport {DirtyState, getRuleDirtyState} from '../../helpers/dirty-state'\nimport {AddMetadataPatternRuleDialog} from './AddMetadataPatternRuleDialog'\nimport {capitalize, humanize} from '../../helpers/string'\nimport {Box, Pagehead} from '@primer/react'\nimport {ListView} from '@github-ui/list-view'\nimport {PanelHeader} from './conditions/PanelHeader'\nimport {RestrictionsPanel} from './RestrictionsPanel'\n\ntype RulesPanelProps = {\n  readOnly: boolean\n  upsellInfo: UpsellInfo\n  helpUrls?: HelpUrls\n  rulesetId?: number\n  rulesetTarget: RulesetTarget\n  sourceType: SourceType\n  rules: Rule[]\n  ruleSchemas: RuleSchema[]\n  ruleErrors: Record<string, ValidationError[]>\n  errorRefs: ErrorRef\n  addRule: (type: string) => void\n  removeRule: (rule: Rule) => void\n  restoreRule: (rule: Rule) => void\n  setRuleModalState: (rule: Rule, modalState: RuleModalState) => void\n  updateRuleParameters: (rule: Rule, parameters: Parameter) => void\n}\n\nexport const RulesPanel: FC<RulesPanelProps> = ({\n  readOnly,\n  upsellInfo,\n  helpUrls,\n  rulesetId,\n  rulesetTarget,\n  sourceType,\n  rules,\n  ruleSchemas,\n  ruleErrors,\n  errorRefs,\n  addRule,\n  removeRule,\n  restoreRule,\n  setRuleModalState,\n  updateRuleParameters,\n}: RulesPanelProps) => {\n  const [metadataRestrictionTypes, setMetadataRestrictionTypes] = useState<string[]>([])\n\n  const visibleRules = useMemo(\n    () =>\n      rules.filter(\n        rule => rule._modalState !== RuleModalState.CREATING && getRuleDirtyState(rule) !== DirtyState.REMOVED,\n      ),\n    [rules],\n  )\n\n  const ruleSchemaByType = useMemo(() => getRuleSchemasByType(ruleSchemas), [ruleSchemas])\n\n  const {refRules, commitMetadataRules: metadataRules} = useMemo(() => {\n    return visibleRules.reduce<{refRules: RuleWithSchema[]; commitMetadataRules: RuleWithSchema[]}>(\n      (map, rule) => {\n        const ruleWithSchema = {\n          ...rule,\n          schema: ruleSchemaByType[rule.ruleType]!,\n        }\n\n        if (ruleWithSchema.schema.metadataPatternSchema) {\n          map.commitMetadataRules.push(ruleWithSchema)\n        } else {\n          map.refRules.push(ruleWithSchema)\n        }\n\n        return map\n      },\n      {\n        refRules: [],\n        commitMetadataRules: [],\n      },\n    )\n  }, [ruleSchemaByType, visibleRules])\n\n  const {branchRuleSchemas, metadataPatternRuleSchemas} = useMemo(() => {\n    return ruleSchemas.reduce<{branchRuleSchemas: RuleSchema[]; metadataPatternRuleSchemas: RuleSchema[]}>(\n      (map, ruleSchema) => {\n        if (ruleSchema.metadataPatternSchema) {\n          map.metadataPatternRuleSchemas.push(ruleSchema)\n        } else {\n          map.branchRuleSchemas.push(ruleSchema)\n        }\n\n        return map\n      },\n      {\n        branchRuleSchemas: [],\n        metadataPatternRuleSchemas: [],\n      },\n    )\n  }, [ruleSchemas])\n\n  const availableMetadataRuleSchemas = useMemo(() => {\n    return metadataPatternRuleSchemas.filter(\n      ruleSchema => !metadataRules.find(rule => rule.ruleType === ruleSchema.type),\n    )\n  }, [metadataPatternRuleSchemas, metadataRules])\n\n  const pendingMetadataRule = useMemo(() => {\n    const existing = rules.find(\n      rule => rule._modalState && [RuleModalState.CREATING, RuleModalState.EDITING].includes(rule._modalState),\n    )\n\n    if (!existing) {\n      return undefined\n    }\n\n    const ruleSchema = ruleSchemaByType[existing.ruleType]!\n\n    if (!ruleSchema.metadataPatternSchema) {\n      return undefined\n    }\n\n    return {\n      ...existing,\n      schema: ruleSchema,\n    }\n  }, [ruleSchemaByType, rules])\n\n  const addRestrictionButtonRef = useRef<HTMLButtonElement>(null)\n\n  return (\n    <>\n      <PanelHeader title=\"Rules\" subtitle=\"Which rules should be applied?\" />\n      <div className={`d-flex flex-column gap-4`} data-testid=\"rules-panel\">\n        {(!readOnly || refRules.length) && branchRuleSchemas.length ? (\n          <Box className=\"Box\" sx={{borderTop: 0, borderLeft: 0, borderRight: 0, borderRadius: 0, mb: 0}}>\n            <ListView\n              title={`${capitalize(humanize(rulesetTarget))} rules`}\n              metadata={<ProtectionsHeader rulesetTarget={rulesetTarget} />}\n            >\n              <ProtectionsList\n                readOnly={readOnly}\n                helpUrls={helpUrls}\n                rulesetId={rulesetId}\n                sourceType={sourceType}\n                ruleErrors={ruleErrors}\n                errorRefs={errorRefs}\n                addRule={addRule}\n                removeRule={removeRule}\n                updateRuleParameters={updateRuleParameters}\n                branchRuleSchemas={branchRuleSchemas}\n                refRules={refRules}\n              />\n            </ListView>\n          </Box>\n        ) : (\n          <BorderBox name={`${capitalize(humanize(rulesetTarget))} protections`} showHeader>\n            {(!readOnly || refRules.length) && branchRuleSchemas.length ? (\n              <ul>\n                <ProtectionsList\n                  readOnly={readOnly}\n                  helpUrls={helpUrls}\n                  rulesetId={rulesetId}\n                  sourceType={sourceType}\n                  ruleErrors={ruleErrors}\n                  addRule={addRule}\n                  removeRule={removeRule}\n                  updateRuleParameters={updateRuleParameters}\n                  branchRuleSchemas={branchRuleSchemas}\n                  refRules={refRules}\n                  errorRefs={errorRefs}\n                />\n              </ul>\n            ) : (\n              <Blankslate heading={`No ${humanize(rulesetTarget)} protections have been added`} />\n            )}\n          </BorderBox>\n        )}\n\n        {pendingMetadataRule && (\n          <AddMetadataPatternRuleDialog\n            rule={pendingMetadataRule}\n            ruleSchema={pendingMetadataRule.schema}\n            availableMetadataRuleSchemas={availableMetadataRuleSchemas.filter(option =>\n              metadataRestrictionTypes.includes(option.type),\n            )}\n            removeRule={removeRule}\n            setRuleModalState={setRuleModalState}\n            updateRuleParameters={updateRuleParameters}\n            returnFocusRef={addRestrictionButtonRef}\n          />\n        )}\n      </div>\n      {metadataPatternRuleSchemas.length > 0 && (\n        <RestrictionsPanel\n          readOnly={readOnly}\n          upsellInfo={upsellInfo}\n          helpUrl={helpUrls?.commitMetadataRules}\n          title=\"Metadata\"\n          rules={metadataRules}\n          availableRuleSchemas={availableMetadataRuleSchemas}\n          removeRule={removeRule}\n          restoreRule={restoreRule}\n          setRuleModalState={setRuleModalState}\n          addRule={addRule}\n          metadataPatternRuleSchemas={metadataPatternRuleSchemas}\n          setMetadataRestrictionTypes={setMetadataRestrictionTypes}\n          sourceType={sourceType}\n          rulesetTarget={rulesetTarget}\n          ruleErrors={ruleErrors}\n          errorRefs={errorRefs}\n          addRestrictionButtonRef={addRestrictionButtonRef}\n        />\n      )}\n    </>\n  )\n}\n\nfunction ProtectionsHeader({rulesetTarget}: {rulesetTarget: RulesetTarget}) {\n  return (\n    <Pagehead sx={{mb: 0, pb: 2, fontSize: 3, fontWeight: 'normal'}}>\n      {capitalize(humanize(rulesetTarget))} rules\n    </Pagehead>\n  )\n}\n\ntype ProtectionsListProps = {\n  readOnly: boolean\n  helpUrls?: HelpUrls\n  rulesetId?: number\n  sourceType: SourceType\n  ruleErrors: Record<string, ValidationError[]>\n  errorRefs: ErrorRef\n  addRule: (type: string) => void\n  removeRule: (rule: Rule) => void\n  updateRuleParameters: (rule: Rule, parameters: Parameter) => void\n  branchRuleSchemas: RuleSchema[]\n  refRules: RuleWithSchema[]\n}\n\nexport const ProtectionsList: FC<ProtectionsListProps> = ({\n  readOnly,\n  helpUrls,\n  rulesetId,\n  sourceType,\n  ruleErrors,\n  errorRefs,\n  addRule,\n  removeRule,\n  updateRuleParameters,\n  branchRuleSchemas,\n  refRules,\n}: ProtectionsListProps) => {\n  return (\n    <>\n      {branchRuleSchemas.map(ruleSchema => {\n        const existing = refRules.find(rule => rule.ruleType === ruleSchema.type)\n\n        if (readOnly && !existing) {\n          return null\n        }\n\n        return (\n          <li key={ruleSchema.type} className={`Box-row d-flex flex-justify-between flex-items-center gap-2 pl-0`}>\n            <RuleRow\n              rulesetId={rulesetId}\n              sourceType={sourceType}\n              helpUrls={helpUrls}\n              readOnly={readOnly}\n              rule={existing}\n              ruleSchema={ruleSchema}\n              errors={ruleErrors[ruleSchema.type] || []}\n              errorRef={errorRefs[ruleSchema.type]?.errorRef}\n              fieldRefs={errorRefs[ruleSchema.type]?.fields}\n              onAdd={() => addRule(ruleSchema.type)}\n              onRemove={() => removeRule(refRules.find(rule => rule.ruleType === ruleSchema.type)!)}\n              onUpdateParameters={parameters => updateRuleParameters(existing!, parameters)}\n            />\n          </li>\n        )\n      })}\n    </>\n  )\n}\n\ntry{ RulesPanel.displayName ||= 'RulesPanel' } catch {}\ntry{ ProtectionsHeader.displayName ||= 'ProtectionsHeader' } catch {}\ntry{ ProtectionsList.displayName ||= 'ProtectionsList' } catch {}","import {ActorBypassMode, type BypassActor} from '../bypass-actors-types'\n\nexport const ORGANIZATION_ADMIN_ROLE: BypassActor = {\n  actorId: 1,\n  actorType: 'OrganizationAdmin',\n  name: 'Organization admin',\n  _dirty: true,\n  _enabled: true,\n  bypassMode: ActorBypassMode.ALWAYS,\n}\n\nexport const DEPLOY_KEY_BYPASS_ACTOR: BypassActor = {\n  actorId: null,\n  actorType: 'DeployKey',\n  name: 'Deploy keys',\n  _dirty: true,\n  _enabled: true,\n  bypassMode: ActorBypassMode.ALWAYS,\n}\n\nexport const LOCKED_BYPASS_MODE_ACTOR_TYPES = ['DeployKey']\n","import {ActionList, ActionMenu, FormControl, IconButton, Text, Box} from '@primer/react'\nimport {TrashIcon, KebabHorizontalIcon} from '@primer/octicons-react'\nimport {BypassAvatar} from '../BypassAvatar'\nimport {ActorType} from '../ActorType'\nimport {ActorBypassMode, type BypassActor} from '../../bypass-actors-types'\nimport {LOCKED_BYPASS_MODE_ACTOR_TYPES} from '../../helpers/constants'\n\ntype BypassActorMode = {\n  type: ActorBypassMode\n  text: string\n  description: string\n  shortName: string\n}\n\nconst bypassActorModeArray: BypassActorMode[] = [\n  {\n    type: ActorBypassMode.ALWAYS,\n    text: 'Always',\n    description: 'Always allow rules to be bypassed',\n    shortName: 'Always allow',\n  },\n  {\n    type: ActorBypassMode.PRS_ONLY,\n    text: 'For pull requests only',\n    description: 'Only allow rules to be bypassed on pull requests',\n    shortName: 'Allow for pull requests only',\n  },\n]\n\nexport function BypassListRow({\n  actor,\n  baseAvatarUrl,\n  readOnly,\n  removeBypassActor,\n  updateBypassActor,\n  isBypassModeEnabled,\n}: {\n  actor: BypassActor\n  baseAvatarUrl: string\n  readOnly?: boolean\n  removeBypassActor: (bypassActor: BypassActor) => void\n  updateBypassActor: (bypassActor: BypassActor) => void\n  isBypassModeEnabled: boolean\n}) {\n  function getSelectedMode(currentActor: BypassActor, getType: boolean) {\n    const selectedMode = bypassActorModeArray.find(mode => mode.type === currentActor.bypassMode)\n    if (getType) {\n      return selectedMode?.type\n    } else {\n      return selectedMode?.shortName\n    }\n  }\n\n  function modeIsSelected(currentActor: BypassActor, option: BypassActorMode) {\n    const comparisonValue = getSelectedMode(currentActor, true)\n    return comparisonValue === option.type\n  }\n\n  function humanizeRoleName(currentActor: BypassActor) {\n    if (currentActor.actorType === 'RepositoryRole') {\n      switch (currentActor.name) {\n        case 'admin':\n          return 'Repository admin'\n        case 'maintain':\n          return 'Maintain'\n        case 'write':\n          return 'Write'\n        default:\n          return currentActor.name\n      }\n    }\n    return currentActor.name\n  }\n\n  function actorMetadata({actorType, name, owner}: BypassActor) {\n    if (actorType === 'Team') {\n      return <span className=\"note\"> &bull; {`@${name}`} </span>\n    }\n    if (actorType === 'Integration' && owner) {\n      return <span className=\"note\"> &bull; {owner} </span>\n    }\n    return null\n  }\n\n  return (\n    <li key={actor._id} className=\"Box-row d-flex flex-justify-between flex-items-center py-2\">\n      <div className=\"d-flex flex-items-center gap-3\">\n        <BypassAvatar\n          baseUrl={baseAvatarUrl}\n          id={actor.actorId}\n          name={humanizeRoleName(actor)}\n          type={actor.actorType}\n        />\n        <div>\n          {humanizeRoleName(actor)}\n          <ActorType actorType={actor.actorType} />\n          {actorMetadata(actor)}\n        </div>\n      </div>\n      <div className={`d-flex pl-3 flex-items-center`}>\n        {getSelectedMode(actor, false) &&\n          (!readOnly ? (\n            <RowRightHalfUnboxed\n              actor={actor}\n              updateBypassActor={updateBypassActor}\n              isBypassModeEnabled={isBypassModeEnabled}\n              getSelectedMode={getSelectedMode}\n              modeIsSelected={modeIsSelected}\n              removeBypassActor={removeBypassActor}\n            />\n          ) : (\n            <>{getSelectedMode(actor, false)}</>\n          ))}\n      </div>\n    </li>\n  )\n}\n\nexport function BypassActorMenu({\n  actor,\n  updateBypassActor,\n  unboxRules,\n  modeIsSelected,\n}: {\n  actor: BypassActor\n  updateBypassActor: (bypassActor: BypassActor) => void\n  unboxRules: boolean\n  modeIsSelected: (currentActor: BypassActor, option: BypassActorMode) => boolean\n}) {\n  return (\n    <>\n      {bypassActorModeArray.map(option => (\n        <ActionList.Item\n          key={option.type}\n          selected={modeIsSelected(actor, option)}\n          onSelect={() => {\n            updateBypassActor({...actor, bypassMode: option.type, _dirty: true})\n          }}\n        >\n          <Box sx={{...(unboxRules && {whiteSpace: 'nowrap', overflow: 'hidden'})}}>{option.text}</Box>\n          {!unboxRules && <ActionList.Description variant=\"block\">{option.description}</ActionList.Description>}\n        </ActionList.Item>\n      ))}\n    </>\n  )\n}\n\nfunction RowRightHalfUnboxed({\n  actor,\n  updateBypassActor,\n  isBypassModeEnabled,\n  getSelectedMode,\n  modeIsSelected,\n  removeBypassActor,\n}: {\n  actor: BypassActor\n  updateBypassActor: (bypassActor: BypassActor) => void\n  isBypassModeEnabled: boolean\n  getSelectedMode: (currentActor: BypassActor, getType: boolean) => string | ActorBypassMode | undefined\n  modeIsSelected: (currentActor: BypassActor, option: BypassActorMode) => boolean\n  removeBypassActor: (bypassActor: BypassActor) => void\n}) {\n  return (\n    <>\n      {isBypassModeEnabled && <Text sx={{color: 'fg.muted', mr: 2}}>{getSelectedMode(actor, false)}</Text>}\n      <FormControl>\n        {isBypassModeEnabled && <FormControl.Label visuallyHidden>Select bypass mode</FormControl.Label>}\n        <ActionMenu>\n          <ActionMenu.Anchor>\n            <IconButton\n              sx={{color: 'fg.muted'}}\n              icon={KebabHorizontalIcon}\n              variant=\"invisible\"\n              aria-label=\"Bypass actor actions\"\n              title=\"Bypass actor actions\"\n            />\n          </ActionMenu.Anchor>\n\n          <ActionMenu.Overlay width=\"auto\">\n            <ActionList>\n              <>\n                {isBypassModeEnabled && !LOCKED_BYPASS_MODE_ACTOR_TYPES.includes(actor.actorType) && (\n                  <>\n                    <ActionList.Group selectionVariant=\"single\">\n                      <ActionList.GroupHeading>Allow</ActionList.GroupHeading>\n                      <BypassActorMenu\n                        actor={actor}\n                        updateBypassActor={updateBypassActor}\n                        unboxRules\n                        modeIsSelected={modeIsSelected}\n                      />\n                    </ActionList.Group>\n                    <ActionList.Divider />\n                  </>\n                )}\n                <ActionList.Item variant=\"danger\" onSelect={() => removeBypassActor(actor)}>\n                  <ActionList.LeadingVisual>\n                    <TrashIcon />\n                  </ActionList.LeadingVisual>\n                  Delete bypass\n                </ActionList.Item>\n              </>\n            </ActionList>\n          </ActionMenu.Overlay>\n        </ActionMenu>\n      </FormControl>\n    </>\n  )\n}\n\ntry{ BypassListRow.displayName ||= 'BypassListRow' } catch {}\ntry{ BypassActorMenu.displayName ||= 'BypassActorMenu' } catch {}\ntry{ RowRightHalfUnboxed.displayName ||= 'RowRightHalfUnboxed' } catch {}","import type {FC} from 'react'\nimport type {BypassActor, OrgAdminBypassMode} from '../../bypass-actors-types'\nimport {BypassListRow} from './BypassListRow'\n\nexport type BypassListProps = {\n  readOnly?: boolean\n  isBypassModeEnabled: boolean\n  removeBypassActor: (bypassActor: BypassActor) => void\n  updateBypassActor: (bypassActor: BypassActor) => void\n  orgAdminBypassMode: OrgAdminBypassMode\n  enabledBypassActors: BypassActor[]\n  baseAvatarUrl: string\n}\n\nexport const BypassList: FC<BypassListProps> = ({\n  readOnly,\n  isBypassModeEnabled,\n  removeBypassActor,\n  updateBypassActor,\n  enabledBypassActors,\n  baseAvatarUrl,\n}: BypassListProps) => {\n  return (\n    <>\n      {enabledBypassActors.map(actor => (\n        <BypassListRow\n          key={`${actor.actorType}-${actor.id || actor._id}`}\n          actor={actor}\n          baseAvatarUrl={baseAvatarUrl}\n          readOnly={readOnly}\n          removeBypassActor={removeBypassActor}\n          updateBypassActor={updateBypassActor}\n          isBypassModeEnabled={isBypassModeEnabled}\n        />\n      ))}\n    </>\n  )\n}\n\ntry{ BypassList.displayName ||= 'BypassList' } catch {}","import {useCallback, useMemo, useState} from 'react'\nimport {Button, SelectPanel} from '@primer/react'\nimport {PlusIcon, TriangleDownIcon} from '@primer/octicons-react'\nimport {debounce} from '@github/mini-throttle'\nimport {BypassAvatar} from '../BypassAvatar'\nimport {getBypassSuggestions} from '../../services/api'\nimport {alreadyAdded, getEnabledBypassActor} from '../bypassDialog/alreadyAdded'\nimport {actorTypeString} from '../ActorType'\nimport type {BypassActor} from '../../bypass-actors-types'\nimport {ActorBypassMode} from '../../bypass-actors-types'\n\nconst calculateDescription = (b: BypassActor) => {\n  let description = `${actorTypeString(b.actorType)}`\n  if (b.actorType === 'Team') {\n    description = `${description} • @${b.name}`\n  } else if (b.actorType === 'Integration' && b.owner) {\n    description = `${description} • ${b.owner}`\n  }\n  return description\n}\n\nexport type BypassSelectPanelProps = {\n  baseAvatarUrl: string\n  enabledBypassActors: BypassActor[]\n  addBypassActor: (\n    actorId: BypassActor['actorId'],\n    actorType: BypassActor['actorType'],\n    name: BypassActor['name'],\n    bypassMode: BypassActor['bypassMode'],\n    owner: BypassActor['owner'],\n  ) => void\n  removeBypassActor: (bypassActor: BypassActor) => void\n  suggestionsUrl: string\n  addReviewerSubtitle: string\n}\n\nexport const BypassSelectPanel = ({\n  baseAvatarUrl,\n  enabledBypassActors,\n  addBypassActor,\n  removeBypassActor,\n  suggestionsUrl,\n  addReviewerSubtitle,\n}: BypassSelectPanelProps) => {\n  const [suggestions, setSuggestions] = useState<BypassActor[]>([])\n  const suggestionItems = useMemo(() => {\n    const mappedSuggestions = suggestions.map(s => ({\n      text: s.name,\n      description: calculateDescription(s),\n      id: JSON.stringify(s),\n      leadingVisual: () => <BypassAvatar baseUrl={baseAvatarUrl} id={s.actorId} name={s.name} type={s.actorType} />,\n      onAction: () => {\n        const bypassActorToRemove = getEnabledBypassActor(s.actorId, s.actorType, enabledBypassActors)\n        if (bypassActorToRemove) {\n          removeBypassActor(bypassActorToRemove)\n        } else {\n          addBypassActor(s.actorId, s.actorType, s.name, ActorBypassMode.ALWAYS, s.owner)\n        }\n      },\n    }))\n    return mappedSuggestions\n  }, [suggestions, baseAvatarUrl, enabledBypassActors, addBypassActor, removeBypassActor])\n  const [isLoading, setIsLoading] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [filter, setFilter] = useState('')\n\n  const onOpen = async () => {\n    if (!open) {\n      setOpen(true)\n      setIsLoading(true)\n      setSuggestions(await getBypassSuggestions(suggestionsUrl, ''))\n      setIsLoading(false)\n    } else {\n      setOpen(false)\n    }\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounceBypassSuggestions = useCallback(\n    debounce(async (newFilter: string) => {\n      if (newFilter === '') {\n        setSuggestions(await getBypassSuggestions(suggestionsUrl, ''))\n      } else {\n        setSuggestions(await getBypassSuggestions(suggestionsUrl, newFilter))\n      }\n    }, 200),\n    [suggestionsUrl, setSuggestions],\n  )\n\n  return (\n    <SelectPanel\n      loading={isLoading}\n      title=\"Add bypass\"\n      subtitle={addReviewerSubtitle}\n      renderAnchor={({'aria-labelledby': ariaLabelledBy, ...anchorProps}) => (\n        <Button\n          leadingVisual={PlusIcon}\n          trailingVisual={TriangleDownIcon}\n          aria-labelledby={` ${ariaLabelledBy}`}\n          {...anchorProps}\n          aria-haspopup=\"dialog\"\n        >\n          Add bypass\n        </Button>\n      )}\n      open={open}\n      onOpenChange={onOpen}\n      items={suggestionItems}\n      selected={suggestionItems.filter(item => {\n        if (typeof item.id === 'string') {\n          const s = JSON.parse(item.id)\n          return alreadyAdded(s.actorId, s.actorType, enabledBypassActors)\n        }\n      })}\n      /* This is a no-op because we fetch bypass suggestions from the server as the user types.\n      We instead handle this with each item's onAction prop. */\n      onSelectedChange={() => {}}\n      placeholderText=\"Filter bypass actors\"\n      filterValue={filter}\n      onFilterChange={f => {\n        setFilter(f)\n        debounceBypassSuggestions(f)\n      }}\n      overlayProps={{\n        width: 'medium',\n        height: 'medium',\n      }}\n    />\n  )\n}\n\ntry{ BypassSelectPanel.displayName ||= 'BypassSelectPanel' } catch {}","import type {FC, RefObject} from 'react'\nimport {useRef, useMemo, useState} from 'react'\nimport {Box, Button, Heading, Text} from '@primer/react'\nimport {PlusIcon} from '@primer/octicons-react'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {Blankslate} from '../Blankslate'\nimport {type BypassActor, ActorBypassMode, OrgAdminBypassMode} from '@github-ui/bypass-actors/types'\nimport {BypassDialog} from '@github-ui/bypass-actors/BypassDialog'\nimport {BypassList} from '@github-ui/bypass-actors/BypassList'\nimport {BypassSelectPanel} from '@github-ui/bypass-actors/BypassSelectPanel'\nimport type {RulesetRoutePayload, RulesetTarget} from '../../types/rules-types'\nimport {getBypassSuggestions} from '../../services/api'\nimport {useRelativeNavigation} from '../../hooks/use-relative-navigation'\nimport {ListView} from '@github-ui/list-view'\nimport type {FlashAlert} from '@github-ui/dismissible-flash'\nimport {useFeatureFlag} from '@github-ui/react-core/use-feature-flag'\n\nimport {DEPLOY_KEY_BYPASS_ACTOR, ORGANIZATION_ADMIN_ROLE} from '@github-ui/bypass-actors/constants'\nimport {capitalize} from '../../helpers/string'\n\nexport type BypassListPanelProps = {\n  readOnly?: boolean\n  bypassActors: BypassActor[]\n  setBypassActors: (bypassActors: BypassActor[]) => void\n  addBypassActor: (\n    actorId: BypassActor['actorId'],\n    actorType: BypassActor['actorType'],\n    name: BypassActor['name'],\n    bypassMode: BypassActor['bypassMode'],\n    owner: BypassActor['owner'],\n  ) => void\n  rulesetTarget: RulesetTarget\n  removeBypassActor: (bypassActor: BypassActor) => void\n  updateBypassActor: (bypassActor: BypassActor) => void\n  orgAdminBypassMode: OrgAdminBypassMode\n  setFlashAlert: (flashAlert: FlashAlert) => void\n  deployKeyBypass: boolean\n}\n\nexport const BypassListPanel: FC<BypassListPanelProps> = ({\n  readOnly,\n  bypassActors,\n  addBypassActor,\n  removeBypassActor,\n  rulesetTarget,\n  orgAdminBypassMode,\n  deployKeyBypass,\n  updateBypassActor,\n  setFlashAlert,\n}: BypassListPanelProps) => {\n  const {baseAvatarUrl, sourceType} = useRoutePayload<RulesetRoutePayload>()\n  const {resolvePath} = useRelativeNavigation()\n  const [isLoadingSuggestions, setIsLoadingSuggestions] = useState<boolean>(false)\n\n  const [showBypassDialog, setShowBypassDialog] = useState(false)\n  const [initialSuggestions, setInitialSuggestions] = useState<BypassActor[]>([])\n\n  const isBypassModeEnabled = rulesetTarget === 'branch'\n  const bypassSuggestionsUrl = resolvePath('bypass_suggestions')\n\n  const enabledBypassActors = useMemo(() => {\n    let actors: BypassActor[] = []\n    if (\n      orgAdminBypassMode === OrgAdminBypassMode.OrgBypassAny ||\n      orgAdminBypassMode === OrgAdminBypassMode.OrgBypassPRsOnly\n    ) {\n      actors = [\n        ...actors,\n        {\n          ...ORGANIZATION_ADMIN_ROLE,\n          bypassMode:\n            orgAdminBypassMode === OrgAdminBypassMode.OrgBypassAny ? ActorBypassMode.ALWAYS : ActorBypassMode.PRS_ONLY,\n        },\n      ]\n    }\n    if (deployKeyBypass) {\n      actors = [...actors, DEPLOY_KEY_BYPASS_ACTOR]\n    }\n    return [\n      ...actors,\n      ...bypassActors\n        .filter(({_enabled}) => _enabled)\n        .sort(a => (a.name === 'admin' && a.actorType === 'RepositoryRole' ? -1 : 0)),\n    ]\n  }, [bypassActors, deployKeyBypass, orgAdminBypassMode])\n\n  async function prepopulateSuggestions() {\n    try {\n      setIsLoadingSuggestions(true)\n      const bypassSuggestions = await getBypassSuggestions(bypassSuggestionsUrl, '')\n      setIsLoadingSuggestions(false)\n      setInitialSuggestions(bypassSuggestions)\n    } catch (e) {\n      setFlashAlert({\n        variant: 'danger',\n        message: 'Failed to fetch suggestions',\n      })\n    }\n  }\n\n  function orgAdminInBypassList() {\n    return (\n      orgAdminBypassMode === OrgAdminBypassMode.OrgBypassAny ||\n      orgAdminBypassMode === OrgAdminBypassMode.OrgBypassPRsOnly\n    )\n  }\n\n  const focusReturnRef = useRef<HTMLButtonElement>(null)\n\n  function onClose() {\n    setShowBypassDialog(false)\n\n    setTimeout(() => {\n      focusReturnRef.current?.focus()\n    })\n  }\n\n  const listName = rulesetTarget === 'member_privilege' ? 'allow list' : 'bypass list'\n\n  let subtext = `Exempt roles${\n    sourceType === 'repository' ? ', teams, or apps' : ' or teams'\n  } from this ruleset by adding\n    them to the ${listName}.`\n\n  const pushRulesetDelegatedBypass = useFeatureFlag('push_ruleset_delegated_bypass')\n  if (rulesetTarget === 'push' && pushRulesetDelegatedBypass) {\n    subtext = `Select the roles and teams that can bypass and also approve bypass requests. Add the bots that can bypass this ruleset.`\n  }\n\n  const primerBypassSelectPanel = useFeatureFlag('add_bypass_dialog_select_panel_v1')\n  return (\n    <>\n      <Box\n        className=\"Box\"\n        sx={{\n          borderTop: 0,\n          borderLeft: 0,\n          borderRight: 0,\n          borderRadius: 0,\n          pb: 2,\n          display: 'flex',\n          justifyContent: 'space-between',\n        }}\n      >\n        <Heading as=\"h2\" sx={{fontSize: 4, fontWeight: 'normal'}}>\n          {capitalize(listName)}\n        </Heading>\n        {primerBypassSelectPanel ? (\n          !readOnly && (\n            <BypassSelectPanel\n              baseAvatarUrl={baseAvatarUrl}\n              enabledBypassActors={enabledBypassActors}\n              addBypassActor={addBypassActor}\n              removeBypassActor={removeBypassActor}\n              suggestionsUrl={bypassSuggestionsUrl}\n              addReviewerSubtitle={'Choose which roles, teams, and apps can bypass this ruleset'}\n            />\n          )\n        ) : (\n          <>\n            <AddBypassButton\n              readOnly={readOnly}\n              prepopulateSuggestions={prepopulateSuggestions}\n              setShowBypassDialog={setShowBypassDialog}\n              isLoadingSuggestions={isLoadingSuggestions}\n              focusReturnRef={focusReturnRef}\n            />\n            {!readOnly && showBypassDialog && (\n              <BypassDialog\n                onClose={onClose}\n                baseAvatarUrl={baseAvatarUrl}\n                enabledBypassActors={enabledBypassActors}\n                addBypassActor={addBypassActor}\n                initialSuggestions={initialSuggestions}\n                suggestionsUrl={bypassSuggestionsUrl}\n                addReviewerSubtitle={'Choose which roles, teams, and apps can bypass this ruleset'}\n              />\n            )}\n          </>\n        )}\n      </Box>\n      <Text sx={{mt: 2, mb: 3, color: 'fg.muted'}}>{subtext}</Text>\n      <div className=\"Box\">\n        {enabledBypassActors.length > 0 || orgAdminInBypassList() ? (\n          <ListView title={capitalize(listName)}>\n            <BypassList\n              readOnly={readOnly}\n              removeBypassActor={removeBypassActor}\n              isBypassModeEnabled={isBypassModeEnabled}\n              orgAdminBypassMode={orgAdminBypassMode}\n              updateBypassActor={updateBypassActor}\n              enabledBypassActors={enabledBypassActors}\n              baseAvatarUrl={baseAvatarUrl}\n            />\n          </ListView>\n        ) : (\n          <Blankslate heading={`${capitalize(listName)} is empty`} />\n        )}\n      </div>\n    </>\n  )\n}\n\ntype AddBypassButtonProps = {\n  readOnly?: boolean\n  prepopulateSuggestions: () => void\n  setShowBypassDialog: (bypassDialog: boolean) => void\n  isLoadingSuggestions: boolean\n  focusReturnRef: RefObject<HTMLButtonElement>\n}\n\nconst AddBypassButton: FC<AddBypassButtonProps> = ({\n  readOnly,\n  prepopulateSuggestions,\n  setShowBypassDialog,\n  isLoadingSuggestions,\n  focusReturnRef,\n}: AddBypassButtonProps) => {\n  return (\n    <>\n      {!readOnly ? (\n        <div className=\"d-flex flex-items-center\">\n          <Button\n            ref={focusReturnRef}\n            aria-label=\"Add bypass\"\n            onClick={async () => {\n              await prepopulateSuggestions()\n              setShowBypassDialog(true)\n            }}\n            disabled={isLoadingSuggestions}\n          >\n            <PlusIcon /> Add bypass\n          </Button>\n        </div>\n      ) : null}\n    </>\n  )\n}\n\ntry{ BypassListPanel.displayName ||= 'BypassListPanel' } catch {}\ntry{ AddBypassButton.displayName ||= 'AddBypassButton' } catch {}","import {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {useRef, useEffect, useState, useCallback, createRef, type RefObject} from 'react'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport {Link} from '@github-ui/react-core/link'\nimport {useFeatureFlag} from '@github-ui/react-core/use-feature-flag'\nimport {Flash, IconButton, ActionMenu, Button, Label, Box} from '@primer/react'\nimport {KebabHorizontalIcon, NoEntryIcon} from '@primer/octicons-react'\nimport {FlashUpsellBanner, UpsellBanner} from '../components/UpsellBanner'\nimport {useRelativeNavigation} from '../hooks/use-relative-navigation'\nimport {useIsStafftools} from '../hooks/use-is-stafftools'\nimport {useRuleset} from '../hooks/use-ruleset'\nimport {\n  type IncludeExcludeParameters,\n  type RepositoryIdParameters,\n  type OrganizationIdParameters,\n  RulesetEnforcement,\n  type RulesetRoutePayload,\n  type ValidationError,\n  type RulesetTarget,\n  type Ruleset,\n  type UpsellInfo,\n  type ParameterSchema,\n  type ErrorRef,\n} from '../types/rules-types'\nimport {getRuleset, setRuleset} from '../services/api'\nimport {GeneralPanel} from '../components/ruleset/GeneralPanel'\nimport {TargetsPanel} from '../components/ruleset/TargetsPanel'\nimport {RulesPanel} from '../components/ruleset/RulesPanel'\nimport {BypassListPanel} from '../components/ruleset/BypassListPanel'\nimport {DangerConfirmationDialog} from '../components/ruleset/DangerConfirmationDialog'\nimport sudo from '@github-ui/sudo'\nimport {RulesetActionMenu} from '../components/RulesetActionMenu'\nimport {TARGET_OBJECT_BY_TYPE} from '../helpers/constants'\nimport type {Repository} from '@github-ui/current-repository'\nimport {isRulesetInherited} from '../helpers/utils'\nimport {PageHeader} from '@primer/react/drafts'\nimport {enforcementLabelText} from '../helpers/enforcement-label'\nimport {DismissibleFlashOrToast, type FlashAlert} from '@github-ui/dismissible-flash'\nimport {useTargetCount} from '../hooks/use-target-count'\nimport {humanize} from '../helpers/string'\n\nexport function RulesetPage() {\n  const rulesHistory = useFeatureFlag('rules_history')\n  const rulesImportExport = useFeatureFlag('rules_import_export')\n  const isStafftools = useIsStafftools()\n  const {\n    source,\n    sourceType,\n    upsellInfo,\n    currentName,\n    ruleset: initialRuleset,\n    ruleSchemas: initialRuleSchemas,\n    readOnly = false,\n    isHistoryView = false,\n    supportedConditionTargetObjects,\n    helpUrls,\n    isImportedRuleset,\n    isRestoredRuleset,\n    noRulesets,\n    initialErrors,\n  } = useRoutePayload<RulesetRoutePayload>()\n\n  const {\n    rulesetId,\n    rulesetTarget,\n    rulesetName,\n    rulesetNameError,\n    dirtyRulesetName,\n    orgAdminBypassMode,\n    dirtyOrgAdminBypassMode,\n    deployKeyBypass,\n    dirtyDeployKeyBypass,\n    enforcement,\n    dirtyEnforcement,\n    rules,\n    ruleSchemas,\n    dirtyRules,\n    conditions,\n    dirtyConditions,\n    bypassActors,\n    setBypassActors,\n    dirtyBypassActors,\n    initializeRuleset,\n    addRule,\n    removeRule,\n    restoreRule,\n    setRuleModalState,\n    updateRuleParameters,\n    addOrUpdateCondition,\n    removeCondition,\n    renameRuleset,\n    setRulesetEnforcement,\n    addBypassActor,\n    removeBypassActor,\n    updateBypassActor,\n    validateForm,\n  } = useRuleset(initialRuleset, initialRuleSchemas)\n\n  const [serverRulesets, setServerRulesets] = useState([initialRuleset])\n\n  const {rulesetPreviewCounts, rulesetPreviewSamples, rulesetPreviewErrors} = useTargetCount(\n    source,\n    sourceType,\n    serverRulesets,\n  )\n\n  const {navigate, resolvePath} = useRelativeNavigation()\n\n  const form = useRef<HTMLFormElement>(null)\n  const rulesetNameRef = useRef<HTMLInputElement>(null)\n\n  const [isSaving, setIsSaving] = useState(false)\n  const [isReverting, setIsReverting] = useState(false)\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false)\n  const [rulesetToExport, setRulesetToExport] = useState(initialRuleset)\n  const [flashAlert, setFlashAlert] = useState<FlashAlert>({message: '', variant: 'default'})\n  const [errorMessage, setErrorMessage] = useState<string | null>(null)\n  const [ruleErrors, setRuleErrors] = useState<Record<string, ValidationError[]>>(initialErrors?.rules || {})\n  const [generalErrors, setGeneralErrors] = useState<Record<string, ValidationError[]>>(initialErrors?.general || {})\n  const [conditionErrors, setConditionErrors] = useState<Record<string, ValidationError[]>>(\n    initialErrors?.conditions || {},\n  )\n  const [errorRefs, setErrorRefs] = useState<ErrorRef>({})\n  const repositoryConditionRef = useRef<HTMLButtonElement | null>(null)\n  const refConditionRef = useRef<HTMLButtonElement | null>(null)\n  const flashRef = useRef<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    // Any time the errors change, focus on the first error\n    focusOnFirstError()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ruleErrors, generalErrors, conditionErrors, errorMessage])\n\n  // Focus on the first field on initial render\n  useEffect(() => {\n    rulesetNameRef?.current?.focus()\n  }, [])\n\n  useEffect(() => {\n    flashRef.current?.focus()\n  }, [flashAlert, flashRef])\n\n  const createRefsForRuleSchema = useCallback((parameterSchema: ParameterSchema) => {\n    const refs: Record<string, RefObject<HTMLElement>> = {}\n    for (const field of parameterSchema.fields) {\n      refs[field.name] = createRef<HTMLElement>()\n    }\n    return refs\n  }, [])\n\n  // Set the refs for all the possible rule error fields\n  useEffect(() => {\n    const refs: ErrorRef = {}\n    for (const ruleSchema of ruleSchemas) {\n      refs[ruleSchema.type] = {\n        // Ref for the base rule\n        errorRef: createRef<HTMLDivElement>(),\n        // Refs for each rule field\n        fields: createRefsForRuleSchema(ruleSchema.parameterSchema),\n      }\n    }\n    setErrorRefs(refs)\n  }, [ruleSchemas, createRefsForRuleSchema])\n\n  function resetErrors() {\n    setRuleErrors({})\n    setConditionErrors({})\n    setGeneralErrors({})\n    setErrorMessage(null)\n  }\n\n  const isFormDirty =\n    dirtyRules.length > 0 ||\n    dirtyConditions.length > 0 ||\n    dirtyBypassActors.length > 0 ||\n    dirtyOrgAdminBypassMode !== orgAdminBypassMode ||\n    dirtyDeployKeyBypass !== deployKeyBypass ||\n    dirtyRulesetName !== rulesetName ||\n    dirtyEnforcement !== enforcement\n\n  const isInherited = isRulesetInherited({type: sourceType, id: source.id}, initialRuleset)\n\n  const dirtyMessage = 'You have unsaved changes. Are you sure you want to leave this page?'\n\n  // Parse the errors to determine the first to focus on\n  // If there is no best field, we fallback to the form flash banner\n  // error is the error from the catch block when attempting to save the ruleset\n  function focusOnFirstError() {\n    if (\n      errorMessage ||\n      Object.keys(generalErrors).length ||\n      Object.keys(ruleErrors).length ||\n      Object.keys(conditionErrors).length\n    ) {\n      // General errors\n      // The only general field that can have an error is the name field\n      if (generalErrors.name && generalErrors.name?.length > 0) {\n        rulesetNameRef.current?.focus()\n        return\n      }\n\n      if (Object.keys(conditionErrors).length > 0) {\n        // Repository is first\n        if (conditionErrors.repository && repositoryConditionRef.current) {\n          repositoryConditionRef.current.focus()\n          return\n        }\n        // Refs are after\n        if (conditionErrors.ref && refConditionRef.current) {\n          refConditionRef.current.focus()\n          return\n        }\n      }\n\n      // Rule errors\n      if (ruleErrors) {\n        // find the first rule error where we have a rule ref\n        const firstRuleErrorType = Object.keys(ruleErrors).find(ruleType => errorRefs[ruleType])\n        if (firstRuleErrorType) {\n          // Focus on the rule-level error if present\n          if (errorRefs[firstRuleErrorType]?.errorRef.current) {\n            errorRefs[firstRuleErrorType]?.errorRef?.current?.focus()\n            return\n          }\n          // Check if we can focus on a specific fie  ld\n          const fields = firstRuleErrorType ? errorRefs[firstRuleErrorType]?.fields : null\n          if (fields) {\n            // We know the key exists because it's how we got `firstRuleErrorType`, so we can safely use `!`\n            for (const ruleError of ruleErrors[firstRuleErrorType]!) {\n              if (ruleError.field && fields[ruleError.field]?.current) {\n                fields[ruleError.field]?.current?.focus()\n                return\n              }\n            }\n          }\n        }\n      }\n\n      // If we get here, then we couldn't find someting to focus on, so use the flash banner\n      setFlashAlert({message: errorMessage || 'Failed to save ruleset', variant: 'danger'})\n    }\n  }\n\n  const noTargetsHelper = (conditionTargetObject: string) => {\n    const targetedCondition = conditions.find(\n      condition => TARGET_OBJECT_BY_TYPE[condition.target] === conditionTargetObject,\n    )\n    if (targetedCondition) {\n      if (targetedCondition.target === 'repository_id') {\n        return (targetedCondition.parameters as RepositoryIdParameters).repository_ids.length === 0\n      } else if (targetedCondition.target === 'organization_id') {\n        return (targetedCondition.parameters as OrganizationIdParameters).organization_ids.length === 0\n      } else {\n        const includeExcludeParams = targetedCondition.parameters as IncludeExcludeParameters\n        return includeExcludeParams.include.length === 0 && includeExcludeParams.exclude.length === 0\n      }\n    } else return true\n  }\n\n  const noTargets = () => {\n    return (\n      supportedConditionTargetObjects.length > 0 &&\n      supportedConditionTargetObjects.every(targetObject => noTargetsHelper(targetObject))\n    )\n  }\n\n  useEffect(() => {\n    document.body.setAttribute('data-turbo', 'false')\n    window.onbeforeunload = isFormDirty\n      ? e => {\n          e.returnValue = dirtyMessage\n        }\n      : null\n\n    return () => {\n      document.body.removeAttribute('data-turbo')\n      window.onbeforeunload = null\n    }\n  }, [dirtyMessage, isFormDirty])\n\n  const onGoBack = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    e.preventDefault()\n\n    if (isFormDirty && !window.confirm(dirtyMessage)) {\n      return\n    }\n\n    navigate('..')\n    window.onbeforeunload = null\n  }\n\n  const onRevertForm = async () => {\n    if (isReverting || isSaving) {\n      return\n    }\n\n    if (!isFormDirty) {\n      setFlashAlert({message: 'No changes have been made', variant: 'default'})\n      return\n    }\n\n    setIsReverting(true)\n\n    try {\n      const response = await getRuleset(resolvePath(''))\n      const ruleset = response.payload.ruleset\n      const updatedRuleSchemas = response.payload.ruleSchemas\n\n      initializeRuleset({\n        ruleset,\n        source,\n        sourceType,\n        upsellInfo,\n        ruleSchemas: updatedRuleSchemas,\n        baseAvatarUrl: response.payload.baseAvatarUrl,\n        supportedConditionTargetObjects: response.payload.supportedConditionTargetObjects,\n        helpUrls: response.payload.helpUrls,\n      })\n\n      resetErrors()\n\n      setFlashAlert({message: 'Changes reverted', variant: 'success'})\n    } catch (e) {\n      // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n      setFlashAlert({message: e.message || 'Failed to get saved ruleset', variant: 'danger'})\n    }\n    setIsReverting(false)\n  }\n\n  async function canFormBeSaved() {\n    const validationErrors = await validateForm()\n    if (Object.values(validationErrors).some(x => x)) {\n      // We currently only have client-side validation on the ruleset name\n      // So we know if there are any errors, it must be from that field\n      if (rulesetNameRef.current && !!validationErrors.name) {\n        rulesetNameRef.current.focus()\n      }\n      return false\n    }\n    return true\n  }\n\n  const saveRuleset = async () => {\n    if (isSaving || isReverting || !form.current) {\n      return\n    }\n\n    setIsSaving(true)\n\n    resetErrors()\n\n    // We should reset the flash alert on save to not confuse subsequent requests with the previous one\n    // since we may not always show a flash alert after save\n    setFlashAlert({message: '', variant: 'default'})\n\n    if (!(await sudo())) {\n      setFlashAlert({message: 'Unauthorized', variant: 'danger'})\n      setIsSaving(false)\n      return\n    }\n\n    if (!(await canFormBeSaved())) {\n      setIsSaving(false)\n      return\n    }\n\n    try {\n      const updatedRuleset = {\n        ...initialRuleset,\n        orgAdminBypassMode: dirtyOrgAdminBypassMode,\n        deployKeyBypass: dirtyDeployKeyBypass,\n        name: dirtyRulesetName,\n        enforcement: dirtyEnforcement,\n        rules,\n        conditions,\n        bypassActors,\n      }\n\n      const response = await setRuleset(resolvePath(''), updatedRuleset)\n      setRulesetToExport(response.ruleset)\n      initializeRuleset(response)\n      setServerRulesets([response.ruleset])\n\n      if (!updatedRuleset.id) {\n        navigate(`../${response.ruleset.id}`, undefined, true, true)\n        setFlashAlert({message: isImportedRuleset ? 'Ruleset imported' : 'Ruleset created', variant: 'success'})\n      } else if (isRestoredRuleset) {\n        navigate('', undefined, true, true)\n        setFlashAlert({message: 'Ruleset restored', variant: 'success'})\n      } else {\n        setFlashAlert({message: 'Ruleset updated', variant: 'success'})\n      }\n    } catch (e) {\n      // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n      if (e.message === 'No changes have been made') {\n        // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n        setFlashAlert({message: e.message, variant: 'default'})\n      } else {\n        // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n        if (e.details) {\n          // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n          setRuleErrors(e.details.rules as Record<string, ValidationError[]>)\n          // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n          setConditionErrors(e.details.conditions as Record<string, ValidationError[]>)\n          // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n          setGeneralErrors(e.details.general as Record<string, ValidationError[]>)\n          // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n          setErrorMessage(e.message)\n        }\n      }\n    } finally {\n      setIsSaving(false)\n    }\n  }\n\n  const deleteRuleset = async () => {\n    if (!(await sudo())) {\n      setShowDeleteDialog(false)\n      setFlashAlert({\n        variant: 'danger',\n        message: 'Unauthorized',\n      })\n      return\n    }\n\n    try {\n      const res = await verifiedFetch(resolvePath(''), {\n        method: 'delete',\n      })\n      if (res.ok) {\n        navigate('..', undefined, true, true)\n      } else {\n        setShowDeleteDialog(false)\n        setFlashAlert({\n          variant: 'danger',\n          message: 'Error deleting ruleset',\n        })\n      }\n    } catch (e) {\n      setShowDeleteDialog(false)\n      setFlashAlert({\n        variant: 'danger',\n        message: 'Error deleting ruleset',\n      })\n    }\n  }\n\n  const upsellHeaderText =\n    rulesetTarget === 'member_privilege'\n      ? 'Protect your most important repositories'\n      : 'Protect your most important branches'\n\n  return (\n    <div className=\"settings-next position-relative\">\n      <DismissibleFlashOrToast flashAlert={flashAlert} setFlashAlert={setFlashAlert} ref={flashRef} />\n\n      <PageHeader\n        sx={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n        }}\n      >\n        <RulesHeader\n          rulesetTarget={rulesetTarget}\n          resolvePath={resolvePath}\n          onGoBack={onGoBack}\n          isHistoryView={isHistoryView}\n          currentName={currentName}\n          rulesetId={rulesetId}\n          rulesetName={rulesetName}\n          readOnly={readOnly}\n          isStafftools={isStafftools}\n          isInherited={isInherited}\n          rulesetToExport={rulesetToExport}\n          upsellInfo={upsellInfo}\n          isRestoredRuleset={isRestoredRuleset}\n          enforcement={enforcement}\n          setFlashAlert={setFlashAlert}\n        />\n      </PageHeader>\n      <hr />\n\n      <form\n        method=\"post\"\n        action={resolvePath('')}\n        ref={form}\n        noValidate\n        onSubmit={async e => {\n          e.preventDefault()\n          saveRuleset()\n        }}\n      >\n        {noRulesets ? (\n          <UpsellBanner\n            headingText={upsellHeaderText}\n            withBorder={true}\n            showNewRulesetButton={false}\n            supportedRulesetTargets={[]}\n            askAdmin={upsellInfo.askAdmin}\n            infoVariant=\"one\"\n            sourceType={sourceType}\n            cta={upsellInfo.rulesets.cta}\n            organization={upsellInfo.organization}\n            setFlashAlert={setFlashAlert}\n          />\n        ) : (\n          upsellInfo?.rulesets.cta.visible && (\n            <FlashUpsellBanner\n              organization={upsellInfo.organization}\n              askAdmin={upsellInfo.askAdmin}\n              ctaPath={upsellInfo.rulesets.cta.path}\n              sourceType={sourceType}\n            />\n          )\n        )}\n\n        {isRestoredRuleset && upsellInfo?.enterpriseRulesets.featureEnabled && (\n          <div className=\"mb-2\">\n            <Flash variant=\"default\" className=\"d-flex flex-items-center\">\n              <Label variant=\"success\" sx={{mr: 2}}>\n                Beta\n              </Label>\n              <span>\n                <span className=\"d-inline\">\n                  This ruleset has been restored to a previous version but the changes have not been saved. Review and\n                  save the changes below.{' '}\n                </span>\n                <Link to=\"https://github.com/orgs/community/discussions/69918\">Give feedback</Link>.\n              </span>\n            </Flash>\n          </div>\n        )}\n\n        {isHistoryView && (\n          <div className=\"mb-2\">\n            <Flash variant=\"warning\" className=\"d-flex flex-items-center\">\n              <span>\n                <span className=\"d-inline\">\n                  You are viewing a previous version of this ruleset. This ruleset has been modified since this version.\n                  See the{' '}\n                </span>\n                <Link reloadDocument to={resolvePath('../../..')}>\n                  latest version\n                </Link>\n                <span>.</span>\n              </span>\n            </Flash>\n          </div>\n        )}\n\n        {rulesetTarget === 'push' && !rulesetId && sourceType === 'repository' && (source as Repository).private && (\n          <div className=\"mb-2\">\n            <Flash variant=\"default\" className=\"d-flex flex-items-center\">\n              <span>\n                <span className=\"d-inline\">\n                  Push rulesets are applied to a repository and its downstream repositories. To review the downstream\n                  repositories that will inherit this ruleset,{' '}\n                  <Link to={resolvePath('../../../forks')}>visit the forks page</Link>.\n                </span>\n              </span>\n            </Flash>\n          </div>\n        )}\n\n        {isImportedRuleset && (\n          <div className=\"mb-2\">\n            <Flash variant=\"default\" className=\"d-flex flex-items-center\">\n              <Label variant=\"success\" sx={{mr: 2}}>\n                Beta\n              </Label>\n              <span>\n                <span className=\"d-inline\">This ruleset has been imported but the changes have not been saved.</span>\n                <span className=\"text-bold d-inline\"> Review and save the changes below. </span>\n                <Link to=\"https://github.com/orgs/community/discussions/69918\">Give feedback</Link>.\n              </span>\n            </Flash>\n          </div>\n        )}\n\n        {!upsellInfo.rulesets.cta.visible && noTargets() && rulesetId && (\n          <div className=\"mb-2\">\n            <Flash variant=\"warning\" className=\"d-flex flex-items-center\">\n              <NoEntryIcon />\n              This ruleset does not target any resources and will not be applied.\n            </Flash>\n          </div>\n        )}\n\n        <div className=\"d-flex flex-column\">\n          <GeneralPanel\n            readOnly={readOnly}\n            upsellInfo={upsellInfo}\n            sourceType={sourceType}\n            name={dirtyRulesetName}\n            enforcement={dirtyEnforcement}\n            rulesetId={rulesetId}\n            renameRuleset={renameRuleset}\n            rulesetNameError={rulesetNameError}\n            setRulesetEnforcement={setRulesetEnforcement}\n            generalErrors={generalErrors}\n            nameRef={rulesetNameRef}\n            rulesetTarget={rulesetTarget}\n          />\n\n          {(!readOnly || isStafftools || isHistoryView) && (\n            <BypassListPanel\n              readOnly={readOnly}\n              bypassActors={bypassActors}\n              setBypassActors={setBypassActors}\n              addBypassActor={addBypassActor}\n              removeBypassActor={removeBypassActor}\n              updateBypassActor={updateBypassActor}\n              rulesetTarget={rulesetTarget}\n              orgAdminBypassMode={dirtyOrgAdminBypassMode}\n              setFlashAlert={setFlashAlert}\n              deployKeyBypass={dirtyDeployKeyBypass}\n            />\n          )}\n\n          {supportedConditionTargetObjects.length > 0 && (\n            <TargetsPanel\n              rulesetId={rulesetId}\n              readOnly={readOnly}\n              rulesetTarget={rulesetTarget}\n              fnmatchHelpUrl={helpUrls?.fnmatch}\n              rulesetPreviewCount={rulesetPreviewCounts[initialRuleset.id]}\n              rulesetPreviewSamples={rulesetPreviewSamples[initialRuleset.id]}\n              rulesetError={rulesetPreviewErrors[initialRuleset.id]}\n              dirtyConditions={dirtyConditions}\n              supportedConditionTargetObjects={supportedConditionTargetObjects}\n              conditions={conditions}\n              conditionErrors={conditionErrors}\n              repositoryConditionRef={repositoryConditionRef}\n              refConditionRef={refConditionRef}\n              source={source}\n              {...{addOrUpdateCondition, removeCondition}}\n            />\n          )}\n\n          <RulesPanel\n            readOnly={readOnly}\n            upsellInfo={upsellInfo}\n            helpUrls={helpUrls}\n            rulesetId={rulesetId}\n            rulesetTarget={rulesetTarget}\n            sourceType={sourceType}\n            rules={rules}\n            ruleSchemas={ruleSchemas}\n            ruleErrors={ruleErrors}\n            errorRefs={errorRefs}\n            {...{addRule, removeRule, restoreRule, setRuleModalState, updateRuleParameters}}\n          />\n        </div>\n\n        {!readOnly && (\n          <div className={`d-flex gap-2 mt-4`} data-testid=\"ruleset-buttons\">\n            <Button variant=\"primary\" type=\"submit\" disabled={isSaving || isReverting}>\n              {rulesetId ? (\n                isSaving ? (\n                  <>Saving...</>\n                ) : (\n                  <>\n                    Save<span className=\"hide-md\">&nbsp;changes</span>\n                  </>\n                )\n              ) : (\n                'Create'\n              )}\n            </Button>\n            {rulesetId && (\n              <Button variant=\"default\" type=\"button\" onClick={onRevertForm} disabled={isReverting || isSaving}>\n                {isReverting ? (\n                  <>Reverting...</>\n                ) : (\n                  <>\n                    Revert<span className=\"hide-md hide-sm\">&nbsp;changes</span>\n                  </>\n                )}\n              </Button>\n            )}\n          </div>\n        )}\n      </form>\n\n      {!(rulesHistory || rulesImportExport) && (\n        <DangerConfirmationDialog\n          isOpen={showDeleteDialog}\n          title=\"Delete ruleset?\"\n          text=\"Are you sure you want to delete this ruleset? This action cannot be undone.\"\n          buttonText=\"Delete\"\n          onDismiss={() => {\n            setShowDeleteDialog(false)\n          }}\n          onConfirm={deleteRuleset}\n        />\n      )}\n    </div>\n  )\n}\n\nfunction RulesHeader({\n  rulesetTarget,\n  resolvePath,\n  onGoBack,\n  isHistoryView,\n  currentName,\n  rulesetId,\n  rulesetName,\n  readOnly,\n  isStafftools,\n  isInherited,\n  rulesetToExport,\n  upsellInfo,\n  isRestoredRuleset,\n  enforcement,\n  setFlashAlert,\n}: {\n  rulesetTarget: RulesetTarget\n  resolvePath: (pathToResolve: string) => string\n  onGoBack: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void\n  isHistoryView: boolean\n  currentName?: string\n  rulesetId?: number\n  rulesetName: string\n  readOnly: boolean\n  isStafftools: boolean\n  isInherited: boolean\n  rulesetToExport: Ruleset\n  upsellInfo: UpsellInfo\n  isRestoredRuleset?: boolean\n  enforcement: RulesetEnforcement\n  setFlashAlert: (flashAlert: FlashAlert) => void\n}) {\n  const rulesHistory = useFeatureFlag('rules_history')\n  const rulesImportExport = useFeatureFlag('rules_import_export')\n  function enforcementLabelVariant(enforcementLabel: RulesetEnforcement) {\n    switch (enforcementLabel) {\n      case RulesetEnforcement.Enabled:\n        return 'success'\n      case RulesetEnforcement.Evaluate:\n        return 'severe'\n      case RulesetEnforcement.Disabled:\n        return 'secondary'\n    }\n  }\n  const [menuOpen, setMenuOpen] = useState(false)\n\n  return (\n    <>\n      <div className=\"d-flex gap-1 flex-items-center f3\">\n        <Link to={resolvePath('..')} onClick={onGoBack}>\n          Rulesets\n        </Link>\n        <span>/</span>\n        {isHistoryView ? (\n          <Link reloadDocument to={resolvePath('../../..')}>\n            {currentName}\n          </Link>\n        ) : (\n          <>\n            <span>{rulesetId ? currentName || rulesetName : `New ${humanize(rulesetTarget)} ruleset`}</span>\n          </>\n        )}\n        {isHistoryView && (\n          <>\n            <span>/</span>\n            <span>History</span>\n          </>\n        )}\n        {!upsellInfo.rulesets.cta.visible && !isHistoryView && rulesetId && (\n          <Label sx={{ml: 2}} variant={enforcementLabelVariant(enforcement)}>\n            {enforcementLabelText(enforcement)}\n          </Label>\n        )}\n      </div>\n\n      <Box sx={{display: 'flex', alignItems: 'center', columnGap: 2}}>\n        {rulesetTarget === 'push' && (\n          <>\n            <Label variant=\"success\">Beta</Label>\n            <Link to=\"https://github.com/orgs/community/discussions/118843\" className=\"f6\">\n              Give feedback\n            </Link>\n          </>\n        )}\n        {rulesetId && (!readOnly || (isStafftools && !isInherited)) ? (\n          <>\n            <ActionMenu open={menuOpen} onOpenChange={() => setMenuOpen(!menuOpen)}>\n              <ActionMenu.Anchor>\n                <IconButton icon={KebabHorizontalIcon} aria-label=\"Open additional options\" />\n              </ActionMenu.Anchor>\n\n              <ActionMenu.Overlay>\n                <RulesetActionMenu\n                  ruleset={rulesetToExport}\n                  rulesetsUrl={resolvePath('..')}\n                  insightsEnabled={(rulesHistory || rulesImportExport) && upsellInfo.enterpriseRulesets.featureEnabled}\n                  showDeleteAction\n                  readOnly={readOnly}\n                  rulesHistory={rulesHistory}\n                  isRestored={isRestoredRuleset}\n                  rulesImportExport={rulesImportExport}\n                  enterpriseEnabled={upsellInfo.enterpriseRulesets.featureEnabled}\n                  setFlashAlert={setFlashAlert}\n                  setMenuOpen={setMenuOpen}\n                />\n              </ActionMenu.Overlay>\n            </ActionMenu>\n          </>\n        ) : null}\n      </Box>\n    </>\n  )\n}\n\ntry{ RulesetPage.displayName ||= 'RulesetPage' } catch {}\ntry{ RulesHeader.displayName ||= 'RulesHeader' } catch {}","import {PulseIcon} from '@primer/octicons-react'\nimport {Octicon} from '@primer/react'\nimport {useRelativeNavigation} from '../../hooks/use-relative-navigation'\nimport {RulesetEnforcement, type RulesetTarget} from '../../types/rules-types'\nimport {NewRulesetButton} from '../NewRulesetButton'\nimport type {FlashAlert} from '@github-ui/dismissible-flash'\n\nexport function InsightsBlank({\n  showCreateButton,\n  setFlashAlert,\n  supportedRulesetTargets,\n}: {\n  showCreateButton: boolean\n  setFlashAlert: (flashAlert: FlashAlert) => void\n  supportedRulesetTargets: RulesetTarget[]\n}) {\n  const {resolvePath} = useRelativeNavigation()\n\n  return (\n    <div className=\"blankslate\">\n      <Octicon icon={PulseIcon} size={24} />\n      <h3 className=\"blankslate-heading\">No rule evaluations matched your search</h3>\n      {showCreateButton && (\n        <>\n          <p>Try expanding your search or creating a new ruleset in evaluate mode</p>\n          <NewRulesetButton\n            rulesetsUrl={resolvePath('../')}\n            reloadDocument\n            defaultEnforcement={RulesetEnforcement.Evaluate}\n            sx={{mt: 4, justifyContent: 'center'}}\n            setFlashAlert={setFlashAlert}\n            supportedTargets={supportedRulesetTargets}\n          />\n        </>\n      )}\n    </div>\n  )\n}\n\ntry{ InsightsBlank.displayName ||= 'InsightsBlank' } catch {}","import {ActionMenuSelector} from '@github-ui/action-menu-selector'\nimport type {RuleStatus} from '../../types/rules-types'\n\nconst orderedStatuses: RuleStatus[] = ['all', 'pass', 'fail', 'bypass']\n\nconst ruleStatuses: Record<RuleStatus, string> = {\n  all: 'All statuses',\n  pass: 'Pass',\n  fail: 'Fail',\n  bypass: 'Bypass',\n}\n\nexport function RuleStatusFilter({\n  currentRuleStatus,\n  onSelect,\n}: {\n  currentRuleStatus: RuleStatus\n  onSelect: (selectedRuleStatus: RuleStatus) => void\n}) {\n  return (\n    <ActionMenuSelector\n      currentSelection={currentRuleStatus}\n      orderedValues={orderedStatuses}\n      displayValues={ruleStatuses}\n      onSelect={onSelect}\n    />\n  )\n}\n\ntry{ RuleStatusFilter.displayName ||= 'RuleStatusFilter' } catch {}","import {RepoPushIcon} from '@primer/octicons-react'\nimport {ActionList, ActionMenu, Box} from '@primer/react'\nimport type {Ruleset} from '../../types/rules-types'\n\nexport function RulesetFilter({\n  currentRuleset,\n  allRulesets,\n  onSelect,\n}: {\n  currentRuleset: Ruleset | undefined\n  allRulesets: Ruleset[]\n  onSelect: (ruleset: Ruleset | undefined) => void\n}) {\n  return (\n    <ActionMenu>\n      <ActionMenu.Button leadingVisual={RepoPushIcon} size=\"medium\">\n        <Box sx={{maxWidth: 125, overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap'}}>\n          {currentRuleset ? <span>{currentRuleset.name}</span> : <span>{'All rulesets'}</span>}\n        </Box>\n      </ActionMenu.Button>\n      <ActionMenu.Overlay width=\"medium\">\n        <ActionList selectionVariant=\"single\">\n          <ActionList.Item selected={currentRuleset === null} onSelect={() => onSelect(undefined)}>\n            <div className=\"d-flex\">All rulesets</div>\n          </ActionList.Item>\n          {allRulesets.map(ruleset => (\n            <ActionList.Item\n              key={ruleset.id}\n              selected={currentRuleset?.name === ruleset.name}\n              onSelect={() => onSelect(ruleset)}\n            >\n              <span>{ruleset.name}</span>\n            </ActionList.Item>\n          ))}\n        </ActionList>\n      </ActionMenu.Overlay>\n    </ActionMenu>\n  )\n}\n\ntry{ RulesetFilter.displayName ||= 'RulesetFilter' } catch {}","import {encodePart} from '@github-ui/paths'\nimport type {InsightsFilter} from '../types/rules-types'\n\nexport function insightsIndexPath({filter}: {filter?: InsightsFilter}) {\n  const params: string[] = []\n  if (filter) {\n    if (filter.branch) params.push(`ref=${encodePart(filter.branch)}`)\n    if (filter.repository) params.push(`repository=${encodePart(filter.repository)}`)\n    if (filter.actor) params.push(`actor=${encodePart(filter.actor.login)}`)\n    if (filter.timePeriod) params.push(`time_period=${encodePart(filter.timePeriod)}`)\n    if (filter.ruleset) params.push(`ruleset=${encodePart(filter.ruleset.name)}`)\n    if (filter.ruleStatus) params.push(`rule_status=${encodePart(filter.ruleStatus)}`)\n    if (filter.evaluateStatus) params.push(`evaluate_status=${encodePart(filter.evaluateStatus)}`)\n    if (filter.page) params.push(`page=${encodePart(String(filter.page))}`)\n  }\n\n  return params.length > 0 ? `${params.join('&')}` : ''\n}\n","import memoize from '@github/memoize'\nimport {useEffect, useState} from 'react'\n\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport type {User, UsersState} from '@github-ui/user-selector'\nimport {ruleInsightsActorsPath} from '@github-ui/paths'\n\ninterface ActorsResponse {\n  actors: User[]\n}\n\nasync function fetchJSON(url: string): Promise<ActorsResponse | undefined> {\n  const response = await verifiedFetchJSON(url)\n  if (response.ok) {\n    return await response.json()\n  } else {\n    return undefined\n  }\n}\n\nconst memoizeCache = new Map()\nconst memoizeFetchJSON = memoize(fetchJSON, {cache: memoizeCache})\n\n/**\n * Retrieve a list of actors for a given repository\n *\n * returns an array of users, loading state and error\n * if cannot retrieve users, returns empty array\n */\nexport function useInsightsActors(): UsersState {\n  const actorsPath = ruleInsightsActorsPath()\n  const [usersState, setUsersState] = useState<UsersState>({\n    users: [],\n    error: false,\n    loading: true,\n  })\n\n  useEffect(() => {\n    let cancelled = false\n    const update = async () => {\n      setUsersState({\n        users: [],\n        error: false,\n        loading: true,\n      })\n\n      const actorsResponse = await memoizeFetchJSON(actorsPath)\n\n      if (cancelled) {\n        return\n      }\n\n      let users: User[] = []\n      let error = false\n\n      try {\n        if (actorsResponse) {\n          users = actorsResponse.actors\n        } else {\n          error = true\n        }\n      } catch (e) {\n        error = true\n      }\n\n      setUsersState({\n        users,\n        error,\n        loading: false,\n      })\n    }\n\n    update()\n\n    return function cancel() {\n      cancelled = true\n    }\n  }, [actorsPath])\n\n  return usersState\n}\n","import {ActionMenuSelector} from '@github-ui/action-menu-selector'\nimport type {EvaluateStatus} from '../../types/rules-types'\n\nconst orderedStatuses: EvaluateStatus[] = ['active', 'evaluate', 'all']\n\nconst evaluateStatuses: Record<EvaluateStatus, string> = {\n  active: 'Active rules',\n  evaluate: 'Evaluate rules',\n  all: 'All rules',\n}\n\nexport function EvaluateStatusFilter({\n  currentEvaluateStatus,\n  onSelect,\n}: {\n  currentEvaluateStatus: EvaluateStatus\n  onSelect: (selectedEvaluateStatus: EvaluateStatus) => void\n}) {\n  return (\n    <ActionMenuSelector\n      currentSelection={currentEvaluateStatus}\n      orderedValues={orderedStatuses}\n      displayValues={evaluateStatuses}\n      onSelect={onSelect}\n    />\n  )\n}\n\ntry{ EvaluateStatusFilter.displayName ||= 'EvaluateStatusFilter' } catch {}","import type {FC} from 'react'\nimport {useMemo} from 'react'\nimport {ActionList, Box} from '@primer/react'\nimport type {Repository} from '@github-ui/current-repository'\nimport {RefSelector} from '@github-ui/ref-selector'\nimport {ReposSelector, simpleRepoLoader} from '@github-ui/repos-selector'\nimport {TimeFilter} from '@github-ui/action-menu-selector/TimeFilter'\nimport type {InsightsFilter, Ruleset, SourceType} from '../../types/rules-types'\nimport type {Organization} from '@github-ui/repos-types'\nimport {RuleStatusFilter} from './RuleStatusFilter'\nimport {UserSelector} from '@github-ui/user-selector'\nimport {RulesetFilter} from './RulesetFilter'\nimport {insightsIndexPath} from '../../helpers/insights-filter'\nimport {useInsightsActors} from '../../hooks/use-insights-actors'\nimport {useRelativeNavigation} from '../../hooks/use-relative-navigation'\nimport {EvaluateStatusFilter} from './EvaluateStatusFilter'\n\ntype InsightsFilterProps = {\n  filter: InsightsFilter\n  source: Repository | Organization\n  sourceType: SourceType\n  branchListCacheKey?: string\n  rulesets: Ruleset[]\n  repositories?: string[]\n}\n\nexport const InsightsFilterBar: FC<InsightsFilterProps> = ({\n  filter,\n  source,\n  sourceType,\n  branchListCacheKey,\n  rulesets,\n  repositories,\n}) => {\n  const {actor, timePeriod, ruleset, branch, ruleStatus, evaluateStatus, repository} = filter\n  const {navigate} = useRelativeNavigation()\n  const insightsActorsState = useInsightsActors()\n\n  const updateFilter = (newFilter: InsightsFilter) => {\n    newFilter.page = undefined // Reset to first page when filter changes\n    navigate('.', insightsIndexPath({filter: newFilter}), true)\n  }\n\n  const namedRepos = useMemo(() => repositories?.map(r => ({name: r})) || [], [repositories])\n\n  return (\n    <Box sx={{display: 'flex', flexDirection: 'row', flexWrap: 'wrap'}} className=\"mb-3\">\n      <div className=\"d-flex p-1\">\n        <EvaluateStatusFilter\n          currentEvaluateStatus={evaluateStatus || 'active'}\n          onSelect={selectedEvaluateStatus => {\n            if (selectedEvaluateStatus !== evaluateStatus) {\n              updateFilter({...filter, evaluateStatus: selectedEvaluateStatus})\n            }\n          }}\n        />\n      </div>\n      <div className=\"d-flex p-1\">\n        <RulesetFilter\n          currentRuleset={ruleset}\n          allRulesets={rulesets}\n          onSelect={selectedRuleset => {\n            if (selectedRuleset !== ruleset) {\n              updateFilter({...filter, ruleset: selectedRuleset})\n            }\n          }}\n        />\n      </div>\n      {sourceType === 'repository' && (\n        <div className=\"d-flex p-1\">\n          <RefSelector\n            currentCommitish={branch || 'All branches'}\n            defaultBranch={(source as Repository).defaultBranch}\n            owner={(source as Repository).ownerLogin}\n            repo={source.name}\n            canCreate={false}\n            cacheKey={branchListCacheKey as string}\n            onSelectItem={ref => {\n              if (ref !== branch) {\n                updateFilter({...filter, branch: ref})\n              }\n            }}\n            hotKey=\"w\"\n            types={['branch']}\n            hideShowAll\n            customFooterItemProps={{\n              text: 'View for all branches',\n              onClick: () => {\n                if (branch !== undefined) {\n                  updateFilter({...filter, branch: undefined})\n                }\n              },\n              sx: {alignItems: 'center', display: 'flex', justifyContent: 'center'},\n            }}\n          />\n        </div>\n      )}\n      {sourceType === 'organization' && (\n        <div className=\"d-flex p-1\">\n          <ReposSelector\n            currentSelection={repository ? {name: repository} : undefined}\n            repositoryLoader={simpleRepoLoader(namedRepos)}\n            selectAllOption={true}\n            selectionVariant=\"single\"\n            onSelect={selectedRepository => {\n              if (selectedRepository?.name !== repository) {\n                updateFilter({...filter, repository: selectedRepository?.name})\n              }\n            }}\n          />\n        </div>\n      )}\n      <div className=\"d-flex p-1\">\n        <UserSelector\n          defaultText=\"All users\"\n          usersState={insightsActorsState}\n          currentUser={actor}\n          onSelect={selectedUser => {\n            if (selectedUser !== actor) {\n              updateFilter({...filter, actor: selectedUser})\n            }\n          }}\n          renderCustomFooter={() => (\n            <ActionList.Item\n              onSelect={() => {\n                updateFilter({...filter, actor: undefined})\n              }}\n            >\n              View for all users\n            </ActionList.Item>\n          )}\n        />\n      </div>\n      <div className=\"d-flex p-1\">\n        <TimeFilter\n          currentTimePeriod={timePeriod || 'day'}\n          onSelect={selectedTimePeriod => {\n            if (selectedTimePeriod !== timePeriod) {\n              updateFilter({...filter, timePeriod: selectedTimePeriod})\n            }\n          }}\n        />\n      </div>\n      <div className=\"d-flex p-1\">\n        <RuleStatusFilter\n          currentRuleStatus={ruleStatus || 'all'}\n          onSelect={selectedRuleStatus => {\n            if (selectedRuleStatus !== ruleStatus) {\n              updateFilter({...filter, ruleStatus: selectedRuleStatus})\n            }\n          }}\n        />\n      </div>\n    </Box>\n  )\n}\n\ntry{ InsightsFilterBar.displayName ||= 'InsightsFilterBar' } catch {}","import {GitHubAvatar} from '@github-ui/github-avatar'\nimport {Link} from '@primer/react'\nimport {userHovercardPath} from '@github-ui/paths'\nimport type {User} from '@github-ui/user-selector'\n\nexport function User({user}: {user: User}) {\n  return (\n    <>\n      <Link aria-label={`View ${user.login} profile`} href={user.path}>\n        <GitHubAvatar\n          sx={{mr: 2, cursor: 'pointer'}}\n          src={user.primaryAvatarUrl}\n          data-hovercard-url={userHovercardPath({owner: user.login})}\n          square={user.path.startsWith('/apps/')}\n        />\n      </Link>\n      <Link\n        muted\n        href={user.path}\n        data-hovercard-url={userHovercardPath({owner: user.login})}\n        sx={{\n          fontWeight: 600,\n          color: 'fg.default',\n          '&:hover': {color: 'fg.default', textDecoration: 'underline'},\n        }}\n      >\n        {user.login}\n      </Link>\n    </>\n  )\n}\n\ntry{ User.displayName ||= 'User' } catch {}","import {Box, Octicon, Text, Tooltip} from '@primer/react'\nimport {AlertIcon, CheckIcon, XIcon} from '@primer/octicons-react'\nimport {GitHubAvatar} from '@github-ui/github-avatar'\n\ntype ListItemProps = {\n  state: string\n  avatarLabel?: string\n  avatarUrl?: string\n  hovercardUrl?: string\n  title: string\n  description?: string\n  warning?: string\n  titleClass?: string\n  paddingY?: number\n  paddingLeft?: number\n}\nexport function ListItem({\n  state,\n  avatarLabel,\n  avatarUrl,\n  hovercardUrl,\n  title,\n  description,\n  warning,\n  titleClass,\n  paddingY,\n  paddingLeft,\n}: ListItemProps) {\n  return (\n    <Box\n      as=\"li\"\n      sx={{\n        paddingY: paddingY ?? 2,\n        marginX: 3,\n        paddingLeft: paddingLeft ?? 2,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        gap: 2,\n      }}\n    >\n      <Octicon\n        icon={state === 'success' ? CheckIcon : XIcon}\n        sx={{\n          color: state === 'success' ? 'success.fg' : 'danger.fg',\n        }}\n      />\n      {avatarUrl && <GitHubAvatar aria-label={avatarLabel} src={avatarUrl} data-hovercard-url={hovercardUrl} />}\n      <Text className={titleClass} sx={{fontWeight: titleClass ? undefined : 'bold'}}>\n        {title}\n      </Text>\n      {description ? (\n        <Text sx={{color: 'fg.muted', whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflowX: 'clip'}}>\n          {description}\n        </Text>\n      ) : null}\n      {warning && (\n        <Tooltip aria-label={warning} wrap={true}>\n          <AlertIcon size={16} />\n        </Tooltip>\n      )}\n    </Box>\n  )\n}\n\ntry{ ListItem.displayName ||= 'ListItem' } catch {}","import {ListItem} from '../ListItem'\nimport type {PullRequestMetadata, RunMetadata} from '../../../../types/rules-types'\nimport {userHovercardPath} from '@github-ui/paths'\n\nexport function PullRequestList({metadata}: {metadata: RunMetadata}) {\n  return (\n    <ul>\n      {(metadata as PullRequestMetadata).prReviewers.map(({state, stateSummary, user}) => (\n        <ListItem\n          key={user.login}\n          state={state === 'approved' ? 'success' : state}\n          avatarLabel={user.login}\n          avatarUrl={user.primaryAvatarUrl}\n          hovercardUrl={userHovercardPath({owner: user.login})}\n          title={user.login}\n          description={stateSummary}\n        />\n      ))}\n    </ul>\n  )\n}\n\ntry{ PullRequestList.displayName ||= 'PullRequestList' } catch {}","import {ListItem} from '../ListItem'\nimport type {ChecksMetadata, RunMetadata} from '../../../../types/rules-types'\n\nexport function StatusChecksList({metadata}: {metadata: RunMetadata}) {\n  return (\n    <ul>\n      {(metadata as ChecksMetadata).checks.map(\n        ({integrationName, integrationAvatarUrl, checkRunName, state, id, sha, description, warning}) => (\n          <ListItem\n            key={id}\n            state={state}\n            avatarUrl={integrationAvatarUrl}\n            avatarLabel={integrationName}\n            title={`${integrationName} / ${checkRunName}`}\n            description={`${description} ${sha ? `• ${sha.toString().slice(0, 6)}` : ''}`}\n            warning={warning}\n          />\n        ),\n      )}\n    </ul>\n  )\n}\n\ntry{ StatusChecksList.displayName ||= 'StatusChecksList' } catch {}","import {ListItem} from '../ListItem'\nimport type {DeploymentsMetadata, RunMetadata} from '../../../../types/rules-types'\n\nexport function DeploymentsList({metadata}: {metadata: RunMetadata}) {\n  return (\n    <ul>\n      {(metadata as DeploymentsMetadata).deploymentResults.map(({status, name, sha, id}) => (\n        <ListItem\n          key={id}\n          state={status === 'active' ? 'success' : status}\n          title={name}\n          description={sha ? `${sha.toString().slice(0, 6)}` : ''}\n        />\n      ))}\n    </ul>\n  )\n}\n\ntry{ DeploymentsList.displayName ||= 'DeploymentsList' } catch {}","import {Box} from '@primer/react'\nimport {ListItem} from '../ListItem'\nimport type {RunViolationItem, RunViolationsData} from '../../../../types/rules-types'\n\nexport function ViolationsList({violations, format}: {violations: RunViolationsData; format: 'path' | 'commit'}) {\n  const itemCount = violations.items.length\n  const totalCount = violations.total\n\n  return (\n    <ul>\n      {itemCount < totalCount && (\n        <Box sx={{paddingLeft: 4, paddingTop: 0, color: 'danger.fg'}}>\n          Found {totalCount} violations (showing first {itemCount})\n        </Box>\n      )}\n\n      {violations.items.map((item: RunViolationItem, index: number) => (\n        <ListItem\n          key={index}\n          state={'failure'}\n          title={\n            format === 'path'\n              ? item.candidate?.substring(item.candidate.lastIndexOf('/') + 1) || 'Unknown'\n              : item.candidate\n          }\n          titleClass={format === 'commit' ? 'text-mono' : undefined}\n          description={format === 'path' ? item.candidate || 'N/A' : undefined}\n          paddingY={1}\n        />\n      ))}\n    </ul>\n  )\n}\n\ntry{ ViolationsList.displayName ||= 'ViolationsList' } catch {}","/* eslint eslint-comments/no-use: off */\n/* eslint-disable filenames/match-regex */\nimport type {RuleRun, PullRequestMetadata, ChecksMetadata, DeploymentsMetadata} from '../../../types/rules-types'\nimport {PullRequestList} from './rule-types/PullRequestList'\nimport {StatusChecksList} from './rule-types/StatusChecksList'\nimport {DeploymentsList} from './rule-types/DeploymentsList'\nimport {ViolationsList} from './rule-types/ViolationsList'\n\nexport function RuleRunMetadataList({ruleRun}: {ruleRun: RuleRun}) {\n  switch (ruleRun.ruleType) {\n    case 'pull_request':\n      return <PullRequestList metadata={ruleRun.metadata!} />\n\n    case 'required_status_checks':\n      return <StatusChecksList metadata={ruleRun.metadata!} />\n\n    case 'required_deployments':\n      return <DeploymentsList metadata={ruleRun.metadata!} />\n\n    case 'file_extension_restriction':\n    case 'file_path_restriction':\n    case 'max_file_path_length':\n    case 'max_file_size':\n      return <ViolationsList violations={ruleRun.violations!} format=\"path\" />\n\n    case 'commit_author_email_pattern':\n    case 'commit_message_pattern':\n    case 'commit_oid':\n    case 'committer_email_pattern':\n    case 'required_linear_history':\n    case 'required_signatures':\n    case 'ruleset_required_signatures':\n      return <ViolationsList violations={ruleRun.violations!} format=\"commit\" />\n  }\n\n  return null\n}\n\nexport function hasAdditionalMetadata(ruleRun: RuleRun) {\n  switch (ruleRun.ruleType) {\n    case 'pull_request':\n      return (ruleRun.metadata as PullRequestMetadata)?.prReviewers.length\n\n    case 'required_status_checks':\n      return (ruleRun.metadata as ChecksMetadata)?.checks.length\n\n    case 'required_deployments':\n      return (ruleRun.metadata as DeploymentsMetadata)?.deploymentResults.length\n\n    case 'commit_author_email_pattern':\n    case 'commit_message_pattern':\n    case 'commit_oid':\n    case 'committer_email_pattern':\n    case 'file_extension_restriction':\n    case 'file_path_restriction':\n    case 'max_file_path_length':\n    case 'max_file_size':\n    case 'required_linear_history':\n    case 'required_signatures':\n    case 'ruleset_required_signatures':\n      return ruleRun.violations?.total\n  }\n\n  return false\n}\n\ntry{ RuleRunMetadataList.displayName ||= 'RuleRunMetadataList' } catch {}","import type {FC} from 'react'\nimport {useMemo, useState} from 'react'\nimport {Box, Octicon, IconButton, Label, Link, Text, Tooltip, Flash} from '@primer/react'\nimport {Dialog} from '@primer/react/experimental'\nimport {\n  CheckCircleFillIcon,\n  ChevronDownIcon,\n  ChevronRightIcon,\n  GitMergeQueueIcon,\n  XCircleFillIcon,\n} from '@primer/octicons-react'\nimport type {\n  ExemptionResponseMetadata,\n  MergeQueueCheckResult,\n  PullRequestMetadata,\n  PullRequestSummary,\n  RuleRun,\n  RuleSuite,\n  RuleSuiteResult,\n} from '../../types/rules-types'\nimport {RulesetEnforcement} from '../../types/rules-types'\nimport {partition, partitionMap} from '../../helpers/utils'\nimport {pluralize} from '../../helpers/string'\nimport {EnforcementIcon} from '../EnforcementIcon'\nimport {RuleRunMetadataList, hasAdditionalMetadata} from './rule-run-metadata-list/index'\nimport {ListItem} from './rule-run-metadata-list/ListItem'\nimport {User} from './User'\n\ntype RuleSuiteDetailsDialogProps = {\n  ruleSuite: RuleSuite\n  visibleResult: RuleSuiteResult\n  onClose: () => void\n}\n\nexport const RuleSuiteDetailsDialog: FC<RuleSuiteDetailsDialogProps> = ({ruleSuite, visibleResult, onClose}) => {\n  const {orderedCategories, passedRulesetCount, failedRulesetCount, bypassedRulesetCount} = useRulesetRunMap(\n    ruleSuite,\n    visibleResult,\n  )\n\n  const rejectedInPushPhase = ruleSuite.evaluationMetadata.preReceiveFailure || false\n\n  // All PRs in merge queue group:\n  const mergeGroupPrs = ruleSuite.evaluationMetadata.mergeGroupPullRequests\n  // This ref update failure was an entire merge queue group:\n  const isQueueFailure = ruleSuite.result === 'failed' && ruleSuite.evaluationMetadata.mergeQueueRemovalReason\n  // Checks run while in the merge queue:\n  const mergeQueueChecks = ruleSuite.evaluationMetadata.mergeQueueCheckResults\n\n  return (\n    <Dialog\n      width=\"xlarge\"\n      onClose={onClose}\n      sx={{overflowY: 'auto'}}\n      renderHeader={() => (\n        <Box sx={{display: 'flex', flexDirection: 'row', padding: 2}}>\n          <Box sx={{display: 'flex', flexDirection: 'column', flex: 1, gap: 1, padding: 2}}>\n            {isQueueFailure ? (\n              <Text as=\"h4\" sx={{fontWeight: 'bold', color: 'danger.fg'}}>\n                Merge queue push failed\n              </Text>\n            ) : failedRulesetCount > 0 ? (\n              <Text as=\"h4\" sx={{fontWeight: 'bold', color: 'danger.fg'}}>\n                Some rules did not pass\n              </Text>\n            ) : bypassedRulesetCount > 0 ? (\n              <Text as=\"h4\" sx={{fontWeight: 'bold', color: 'fg.default'}}>\n                Some rules were bypassed\n              </Text>\n            ) : ruleSuite.result === 'push_rejected' ? (\n              // If this update was rejected due to another push rules failure, don't show \"all rules passed\"\n              <Text as=\"h4\" sx={{fontWeight: 'bold', color: 'success.fg'}}>\n                Push rules passed\n              </Text>\n            ) : (\n              <Text as=\"h4\" sx={{fontWeight: 'bold', color: 'success.fg'}}>\n                All rules passed\n              </Text>\n            )}\n            <Text sx={{color: 'fg.muted'}}>\n              {resultMessage(passedRulesetCount, failedRulesetCount, bypassedRulesetCount)}\n            </Text>\n          </Box>\n          <Dialog.CloseButton onClose={() => onClose()} />\n        </Box>\n      )}\n      renderBody={() => (\n        <>\n          {rejectedInPushPhase && (\n            <Flash variant=\"warning\" sx={{mx: 3, mb: 3, display: 'flex', flexDirection: 'column'}}>\n              <span>Push rules blocked this update, preventing other rulesets from applying.</span>\n              {ruleSuite.result === 'push_rejected' && (\n                <span>Other updates in this push were blocked impacting this change.</span>\n              )}\n            </Flash>\n          )}\n          <ul>\n            {orderedCategories.map(([category, runs]) => {\n              const evaluateMode = runs.some(run => run.result === 'evaluate_failed')\n              const bypassed =\n                (evaluateMode && visibleResult === 'bypassed') || (!evaluateMode && ruleSuite.result === 'bypassed')\n              return (\n                <Box\n                  as=\"li\"\n                  sx={{\n                    display: 'flex',\n                    border: 0,\n                    borderTop: 1,\n                    borderTopStyle: 'solid',\n                    borderTopColor: 'border.default',\n                  }}\n                  key={`${category.name}/${category.id}`}\n                >\n                  <RulesetRow ruleRuns={runs} category={category} categoryBypassed={bypassed} />\n                </Box>\n              )\n            })}\n\n            {(mergeGroupPrs?.length || mergeQueueChecks?.length) && (\n              <Box\n                as=\"li\"\n                key=\"mqdetails\"\n                sx={{\n                  display: 'flex',\n                  border: 0,\n                  borderTop: 1,\n                  borderTopStyle: 'solid',\n                  borderTopColor: 'border.default',\n                }}\n              >\n                <MergeQueueDetailsRow\n                  afterOid={ruleSuite.afterOid}\n                  mergeGroupPrs={mergeGroupPrs}\n                  mergeQueueChecks={mergeQueueChecks}\n                />\n              </Box>\n            )}\n          </ul>\n        </>\n      )}\n    />\n  )\n}\n\nfunction resultMessage(passed: number, failed: number, bypassed: number) {\n  const counts = new Map<string, number>(Object.entries({passed, failed, bypassed}))\n  const entries = Array.from(counts.entries()).filter(x => x[1] > 0)\n  if (entries.length > 2) {\n    return entries.map(x => `${pluralize(x[1], 'ruleset', 'rulesets')} ${x[0]}`).join(', ')\n  } else if (entries.length === 2) {\n    return entries.map(x => `${pluralize(x[1], 'ruleset', 'rulesets')} ${x[0]}`).join(' and ')\n  } else if (entries.length === 1) {\n    return `${pluralize(entries[0]![1], 'ruleset', 'rulesets')} ${entries[0]![0]}`\n  } else {\n    return 'No rulesets ran'\n  }\n}\n\nfunction MergeQueueDetailsRow({\n  afterOid,\n  mergeGroupPrs,\n  mergeQueueChecks,\n}: {\n  afterOid?: string | null\n  mergeGroupPrs?: PullRequestSummary[]\n  mergeQueueChecks?: MergeQueueCheckResult[]\n}) {\n  const [showExpanded, setShowExpanded] = useState<boolean>(false)\n\n  return (\n    <Box sx={{display: 'flex', flexDirection: 'column', flexGrow: 1}}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'row',\n          flexGrow: 1,\n          paddingY: 3,\n          paddingLeft: 2,\n          paddingRight: 4,\n          alignItems: 'center',\n        }}\n      >\n        <Box sx={{display: 'flex'}}>\n          <IconButton\n            sx={{color: 'fg.muted', marginRight: 1, flexShrink: 0}}\n            icon={showExpanded ? ChevronDownIcon : ChevronRightIcon}\n            size=\"small\"\n            variant=\"invisible\"\n            aria-label=\"View rule runs\"\n            title=\"View rule runs\"\n            type=\"button\"\n            onClick={() => setShowExpanded(!showExpanded)}\n          />\n        </Box>\n        <Box sx={{display: 'flex', alignItems: 'baseline'}}>\n          <Octicon icon={GitMergeQueueIcon} sx={{marginRight: 2, color: 'attention.fg'}} />\n        </Box>\n        <Box sx={{display: 'flex', alignItems: 'baseline', flexGrow: 1}}>\n          <Text sx={{fontWeight: 'bold'}}>Merge queue details</Text>\n        </Box>\n      </Box>\n      {showExpanded ? (\n        <Box as=\"ul\" sx={{backgroundColor: 'canvas.subtle'}}>\n          {mergeGroupPrs?.length && <MergeGroupRow mergeGroupPrs={mergeGroupPrs} key=\"grp\" />}\n\n          {mergeQueueChecks?.length && (\n            <MergeCheckList afterOid={afterOid} mergeQueueChecks={mergeQueueChecks} key=\"chk\" />\n          )}\n        </Box>\n      ) : null}\n    </Box>\n  )\n}\n\nfunction MergeGroupRow({mergeGroupPrs}: {mergeGroupPrs: PullRequestSummary[]}) {\n  return (\n    <Box\n      as=\"li\"\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        paddingTop: 2,\n        paddingRight: 3,\n        paddingBottom: 2,\n        paddingLeft: 6,\n        borderTopColor: 'border.default',\n        borderTopStyle: 'solid',\n        borderTopWidth: 1,\n      }}\n    >\n      <Text sx={{flexShrink: 0, flexBasis: 'auto', paddingRight: 2, paddingBottom: 1, fontWeight: 'bold'}}>\n        Pull requests in this merge group\n      </Text>\n      <Box sx={{display: 'flex', flexFlow: 'row wrap', columnGap: 2, flexGrow: 1}}>\n        {mergeGroupPrs.map(pr => (\n          <Link href={pr?.link} key={pr.id}>\n            #{pr?.number}\n          </Link>\n        ))}\n      </Box>\n    </Box>\n  )\n}\n\nfunction MergeCheckList({\n  afterOid,\n  mergeQueueChecks,\n}: {\n  afterOid?: string | null\n  mergeQueueChecks: MergeQueueCheckResult[]\n}) {\n  return (\n    <Box\n      as=\"li\"\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        paddingTop: 2,\n        paddingRight: 3,\n        paddingBottom: 2,\n        paddingLeft: 6,\n        borderTopColor: 'border.default',\n        borderTopStyle: 'solid',\n        borderTopWidth: 1,\n      }}\n    >\n      <Box sx={{display: 'flex', flexDirection: 'row', flexGrow: 0}}>\n        <Text sx={{flexGrow: 0, fontWeight: 'bold'}}>Required checks run by the merge queue</Text>\n      </Box>\n\n      <Box\n        as=\"ul\"\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          marginTop: 1,\n          marginBottom: 1,\n          paddingLeft: 2,\n          columnGap: 1,\n          borderTopStyle: 'none',\n        }}\n      >\n        {mergeQueueChecks.map(check => (\n          <MergeCheckRow afterOid={afterOid} mergeCheck={check} key={check.context} />\n        ))}\n      </Box>\n    </Box>\n  )\n}\n\nfunction MergeCheckRow({afterOid, mergeCheck}: {afterOid?: string | null; mergeCheck: MergeQueueCheckResult}) {\n  return (\n    <Box\n      as=\"li\"\n      sx={{\n        display: 'flex',\n        flexGrow: 1,\n        borderTopStyle: 'none',\n      }}\n    >\n      <ListItem\n        paddingY={0}\n        key={mergeCheck.context}\n        state={mergeCheck.state || 'pending'}\n        title={` / ${mergeCheck.context}`}\n        description={` ${afterOid ? `• ${afterOid.toString().slice(0, 6)}` : ''}`}\n      />\n    </Box>\n  )\n}\n\nfunction RulesetRow({\n  ruleRuns,\n  category,\n  categoryBypassed,\n}: {\n  ruleRuns: RuleRun[]\n  category: Category\n  categoryBypassed: boolean\n}) {\n  const [showExpanded, setShowExpanded] = useState<boolean>(false)\n  const allowed = ruleRuns.every(run => run.result === 'allowed' || run.result === 'evaluate_allowed')\n  const failureCount = ruleRuns.filter(run => run.result === 'evaluate_failed' || run.result === 'failed').length\n  const outOfDate = ruleRuns.some(run => run.insightsSourceOutOfDate)\n\n  const validResponses = [\n    ...new Map<number, ExemptionResponseMetadata>(\n      ruleRuns.flatMap(run => (run.exemptionResponses || []).map(resp => [resp.id, resp])),\n    ).values(),\n  ]\n\n  let bypassNote = null\n  let verb = null\n  let responders = validResponses.filter(response => response.status === 'rejected')\n  if (responders.length > 0) {\n    verb = 'rejected'\n  } else {\n    responders = validResponses.filter(response => response.status === 'approved')\n    if (responders.length > 0) {\n      verb = 'approved'\n    }\n  }\n\n  if (responders.length > 0 && verb) {\n    const firstResponder = responders[0]!\n\n    bypassNote = (\n      <>\n        <Text sx={{mr: 1}}>\n          {firstResponder.exemptionRequestUrl ? (\n            <Link href={firstResponder.exemptionRequestUrl}>Bypass request</Link>\n          ) : (\n            'Bypass request'\n          )}{' '}\n          {verb} by\n        </Text>\n        <User user={firstResponder.reviewer} />\n        {responders.length > 1 ? `and ${responders.length - 1} others` : ''}.\n      </>\n    )\n  }\n\n  const orderedRuns = partition(ruleRuns, run => run.result === 'failed' || run.result === 'evaluate_failed').flat()\n\n  return (\n    <Box sx={{display: 'flex', flexDirection: 'column', flexGrow: 1, overflowX: 'clip'}}>\n      <Box sx={{display: 'flex', flexDirection: 'column', paddingY: 3}}>\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'row',\n            flexGrow: 1,\n            paddingLeft: 2,\n            paddingRight: 4,\n            alignItems: 'center',\n          }}\n        >\n          <Box sx={{display: 'flex'}}>\n            <IconButton\n              sx={{color: 'fg.muted', marginRight: 1, flexShrink: 0}}\n              icon={showExpanded ? ChevronDownIcon : ChevronRightIcon}\n              size=\"small\"\n              variant=\"invisible\"\n              aria-label=\"View rule runs\"\n              title=\"View rule runs\"\n              type=\"button\"\n              onClick={() => setShowExpanded(!showExpanded)}\n            />\n          </Box>\n          <Box sx={{display: 'flex', alignItems: 'baseline'}}>\n            {allowed ? (\n              <Octicon icon={CheckCircleFillIcon} sx={{marginRight: 2, color: 'success.fg'}} />\n            ) : (\n              <Octicon icon={XCircleFillIcon} sx={{marginRight: 2, color: 'danger.fg'}} />\n            )}\n          </Box>\n          <Box sx={{display: 'flex', alignItems: 'baseline', flexGrow: 1}}>\n            {category.link ? (\n              <Link hoverColor=\"accent.fg\" sx={{color: 'fg.default'}} href={category.link}>\n                <Text sx={{fontWeight: 'bold'}}>{category.name}</Text>\n              </Link>\n            ) : (\n              <Text sx={{fontWeight: 'bold'}}>{category.name}</Text>\n            )}\n            {outOfDate && (\n              <Tooltip wrap aria-label=\"The ruleset that ran for this push has changed\">\n                <Label sx={{marginLeft: 2}} variant=\"secondary\">\n                  Outdated\n                </Label>\n              </Tooltip>\n            )}\n            {!allowed && (\n              <Text sx={{marginLeft: 2, color: 'danger.fg', fontSize: 0}}>\n                {pluralize(failureCount, 'rule', 'rules')} {categoryBypassed ? 'bypassed' : 'failed'}\n              </Text>\n            )}\n          </Box>\n          <Box sx={{display: 'flex', alignItems: 'baseline', marginLeft: 1}}>\n            <EnforcementIcon enforcement={calcuateEnforcement(ruleRuns)} />\n          </Box>\n        </Box>\n        {bypassNote && (\n          <Box sx={{marginLeft: 8}}>{<Text sx={{color: 'fg.muted', fontSize: 0}}>{bypassNote}</Text>}</Box>\n        )}\n      </Box>\n      {showExpanded ? (\n        <ul>\n          {orderedRuns.map(ruleRun => (\n            <RunListItem key={ruleRun.id} ruleRun={ruleRun} bypassed={categoryBypassed} />\n          ))}\n        </ul>\n      ) : null}\n    </Box>\n  )\n}\n\nfunction RunListItem({ruleRun, bypassed}: {ruleRun: RuleRun; bypassed: boolean}) {\n  const [showExpanded, setShowExpanded] = useState<boolean>(false)\n  const {result, message} = ruleRun\n  const isAllowed = result === 'allowed' || result === 'evaluate_allowed'\n  return (\n    <Box\n      as=\"li\"\n      sx={{\n        display: 'flex',\n        paddingBottom: 2,\n        paddingLeft: 4,\n        paddingRight: 3,\n        backgroundColor: 'canvas.subtle',\n        borderTopColor: 'border.default',\n        borderTopStyle: 'solid',\n        borderTopWidth: 1,\n      }}\n    >\n      {hasAdditionalMetadata(ruleRun) ? (\n        <IconButton\n          sx={{color: 'fg.muted', marginRight: 1, marginTop: 1, flexShrink: 0}}\n          icon={showExpanded ? ChevronDownIcon : ChevronRightIcon}\n          size=\"small\"\n          variant=\"invisible\"\n          aria-label=\"View rule run\"\n          title=\"View rule run\"\n          type=\"button\"\n          onClick={() => setShowExpanded(!showExpanded)}\n        />\n      ) : (\n        <Box sx={{paddingLeft: 3, paddingRight: 2, marginRight: 2}} />\n      )}\n      <Box\n        sx={{display: 'flex', flexDirection: 'column', flexGrow: 1, paddingTop: 2, marginLeft: 1, overflowX: 'clip'}}\n      >\n        <Box sx={{display: 'flex', flexDirection: 'row', flexGrow: 1}}>\n          {isAllowed ? (\n            <Octicon icon={CheckCircleFillIcon} sx={{marginTop: 0.9, marginRight: 2, color: 'success.fg'}} />\n          ) : (\n            <Octicon icon={XCircleFillIcon} sx={{marginTop: 0.9, marginRight: 2, color: 'danger.fg'}} />\n          )}\n          <Text sx={{flexGrow: 1, fontWeight: 'bold'}}>{ruleDisplayName(ruleRun)}</Text>\n          {result === 'failed' && !bypassed && (\n            <Text sx={{marginRight: 3, color: 'danger.fg', fontSize: 0}}>Push blocked</Text>\n          )}\n        </Box>\n        <Box sx={{marginLeft: 4}}>{message && <Text sx={{color: 'fg.muted', fontSize: 0}}>{message}</Text>}</Box>\n        {showExpanded ? <RuleRunMetadataList ruleRun={ruleRun} /> : null}\n      </Box>\n    </Box>\n  )\n}\n\nfunction calcuateEnforcement(ruleRuns: RuleRun[]) {\n  if (ruleRuns.some(run => run.result === 'evaluate_allowed' || run.result === 'evaluate_failed')) {\n    return RulesetEnforcement.Evaluate\n  } else {\n    return RulesetEnforcement.Enabled\n  }\n}\n\nfunction ruleDisplayName(ruleRun: RuleRun) {\n  const name = ruleRun.ruleDisplayName || ruleRun.ruleType\n\n  // Custom render for PR rule to show the passing PR link if present\n  if (ruleRun.ruleType === 'pull_request' && ruleRun.metadata) {\n    return (\n      <>\n        {`${name} (`}\n        <Link href={(ruleRun.metadata as PullRequestMetadata).prLink}>\n          #{(ruleRun.metadata as PullRequestMetadata).prNumber}\n        </Link>\n        {')'}\n      </>\n    )\n  }\n\n  return name\n}\n\ntype Category = {\n  name: string\n  id: number | null\n  link?: string\n}\n\ntype OrderedCategory = Array<[Category, RuleRun[]]>\n\nfunction useRulesetRunMap(\n  ruleSuite: RuleSuite,\n  visibleResult?: RuleSuiteResult,\n): {\n  orderedCategories: Array<[Category, RuleRun[]]>\n  failedRulesetCount: number\n  passedRulesetCount: number\n  bypassedRulesetCount: number\n} {\n  const [failedCategories, passedCategories, bypassedCategories] = useMemo<\n    [OrderedCategory, OrderedCategory, OrderedCategory]\n  >(() => {\n    const categoriesById = new Map<string | number, Category>()\n    const runsByCategoryId = new Map<string | number, RuleRun[]>()\n    for (const run of ruleSuite.ruleRuns) {\n      const categoryId = run.insightsCategory.id || run.insightsCategory.name\n      categoriesById.set(categoryId, run.insightsCategory)\n\n      const runs = runsByCategoryId.get(categoryId) || []\n      runs.push(run)\n      runsByCategoryId.set(categoryId, runs)\n    }\n\n    const categoryMap = new Map<Category, RuleRun[]>()\n    for (const [categoryId, runs] of runsByCategoryId.entries()) {\n      categoryMap.set(categoriesById.get(categoryId)!, runs)\n    }\n\n    const [failedOrBypassed, passed] = partitionMap(categoryMap, (_k, v) => {\n      return v.some(run => run.result === 'evaluate_failed' || run.result === 'failed')\n    })\n    const [bypassed, failed] = partitionMap(new Map(failedOrBypassed), (_k, v) => {\n      const evaluateMode = v.some(run => run.result === 'evaluate_failed')\n      return (evaluateMode && visibleResult === 'bypassed') || (!evaluateMode && ruleSuite.result === 'bypassed')\n    })\n    return [failed, passed, bypassed]\n  }, [ruleSuite, visibleResult])\n\n  return {\n    orderedCategories: failedCategories.concat(bypassedCategories).concat(passedCategories),\n    failedRulesetCount: failedCategories.length,\n    passedRulesetCount: passedCategories.length,\n    bypassedRulesetCount: bypassedCategories.length,\n  }\n}\n\ntry{ RuleSuiteDetailsDialog.displayName ||= 'RuleSuiteDetailsDialog' } catch {}\ntry{ MergeQueueDetailsRow.displayName ||= 'MergeQueueDetailsRow' } catch {}\ntry{ MergeGroupRow.displayName ||= 'MergeGroupRow' } catch {}\ntry{ MergeCheckList.displayName ||= 'MergeCheckList' } catch {}\ntry{ MergeCheckRow.displayName ||= 'MergeCheckRow' } catch {}\ntry{ RulesetRow.displayName ||= 'RulesetRow' } catch {}\ntry{ RunListItem.displayName ||= 'RunListItem' } catch {}","import type {FC} from 'react'\nimport {useState} from 'react'\nimport {Box, BranchName, IconButton, Label, Link, Octicon, RelativeTime, Text, Truncate} from '@primer/react'\nimport {KebabHorizontalIcon, KeyIcon} from '@primer/octicons-react'\nimport {comparePath, activityIndexPath, repositoryPath} from '@github-ui/paths'\nimport {SafeHTMLBox} from '@github-ui/safe-html'\nimport type {Commit, RuleSuite, RuleSuiteResult, SourceType} from '../../types/rules-types'\nimport {User} from './User'\nimport {RuleSuiteDetailsDialog} from './RuleSuiteDetailsDialog'\nimport {PENDING_OID, UNKNOWN_REF_NAME} from '../../helpers/constants'\n\nconst refPrefix = 'refs/heads/'\n\ntype RuleSuiteRowProps = {\n  ruleSuite: RuleSuite\n  visibleResult: RuleSuiteResult\n  sourceType: SourceType\n  sourceName: string\n}\n\nexport const RuleSuiteRow: FC<RuleSuiteRowProps> = ({ruleSuite, visibleResult, sourceType, sourceName}) => {\n  const [detailsExpanded, setDetailsExpanded] = useState<boolean>(false)\n\n  return (\n    <>\n      <Box\n        as=\"li\"\n        sx={{\n          borderTopColor: 'border.default',\n          borderTopStyle: 'solid',\n          borderTopWidth: 1,\n          '&:first-child': {borderTopWidth: 0},\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'space-between',\n        }}\n      >\n        <Box sx={{display: 'flex', justifyContent: 'space-between', padding: 2, paddingX: 3}}>\n          <Box sx={{display: 'flex', flexDirection: 'column', overflow: 'hidden', justifyContent: 'center'}}>\n            {!createOrDeleteRef(ruleSuite) && (\n              <Box sx={{display: 'flex', alignItems: 'center', gap: 2, mb: 1}}>\n                <Text sx={{fontWeight: 'bold'}}>{commitMessageOrAction(ruleSuite)}</Text>\n              </Box>\n            )}\n            <Box\n              sx={{\n                color: 'fg.muted',\n                fontSize: 0,\n                display: 'flex',\n                flexDirection: 'row',\n                flexWrap: 'wrap',\n                alignItems: 'baseline',\n              }}\n            >\n              {ruleSuite.actor && (\n                <Text sx={{mr: 1}}>\n                  <User user={ruleSuite.actor} />\n                  {ruleSuite.actorIsPublicKey ? (\n                    <Octicon aria-label=\"Pushed with a deploy key\" icon={KeyIcon} sx={{ml: 1}} />\n                  ) : null}\n                </Text>\n              )}\n              <Text sx={{whiteSpace: 'nowrap'}}>\n                <ActionText sourceType={sourceType} ruleSuite={ruleSuite} sourceName={sourceName} />\n              </Text>\n              <span>&nbsp;</span>\n              <RelativeTime date={new Date(ruleSuite.createdAt)} tense=\"past\" />\n            </Box>\n          </Box>\n          <Box sx={{display: ['flex'], alignItems: 'center', marginLeft: 2}}>\n            <RuleEvaluationLabel ruleSuite={ruleSuite} visibleResult={visibleResult} />\n            <IconButton\n              sx={{color: 'fg.muted'}}\n              icon={KebabHorizontalIcon}\n              variant=\"invisible\"\n              aria-label=\"View rule runs\"\n              title=\"View rule runs\"\n              type=\"button\"\n              onClick={() => setDetailsExpanded(!detailsExpanded)}\n            />\n          </Box>\n        </Box>\n      </Box>\n      {detailsExpanded ? (\n        <RuleSuiteDetailsDialog\n          ruleSuite={ruleSuite}\n          visibleResult={visibleResult}\n          onClose={() => setDetailsExpanded(false)}\n        />\n      ) : null}\n    </>\n  )\n}\n\nfunction RuleEvaluationLabel({ruleSuite, visibleResult}: {ruleSuite: RuleSuite; visibleResult: RuleSuiteResult}) {\n  if (visibleResult === 'allowed') {\n    return <Label variant=\"success\">Pass</Label>\n  } else if (visibleResult === 'bypassed') {\n    return <Label variant=\"secondary\">Bypass</Label>\n  } else if (visibleResult === 'failed' && ruleSuite.evaluationMetadata.mergeQueueRemovalReason) {\n    return <Label variant=\"danger\">Merge queue failed</Label>\n  } else {\n    return <Label variant=\"danger\">Fail</Label>\n  }\n}\n\nfunction missingRefName(ruleSuite: RuleSuite) {\n  return ruleSuite.refName === UNKNOWN_REF_NAME\n}\n\nfunction createOrDeleteRef(ruleSuite: RuleSuite) {\n  return !missingRefName(ruleSuite) && (!ruleSuite.beforeOid || !ruleSuite.afterOid)\n}\n\nfunction commitMessageOrAction(ruleSuite: RuleSuite) {\n  if (ruleSuite.result === 'failed' && ruleSuite.evaluationMetadata.mergeQueueRemovalReason) {\n    return <>Merge group of {ruleSuite.evaluationMetadata.mergeGroupPullRequests?.length} pull requests blocked</>\n  } else if (!ruleSuite.afterOid) {\n    return 'Deleted branch'\n  } else if (ruleSuite.commit?.message) {\n    return pushCommitMessage({commit: ruleSuite.commit})\n  } else if (ruleSuite.evaluationMetadata.blobEvaluation) {\n    return 'Added blobs'\n  } else if (missingRefName(ruleSuite)) {\n    return 'Added commits'\n  } else if (!ruleSuite.beforeOid) {\n    return 'Created branch'\n  } else {\n    return 'Updated branch'\n  }\n}\n\nfunction ActionText({\n  sourceType,\n  ruleSuite,\n  sourceName,\n}: {\n  sourceType: string\n  ruleSuite: RuleSuite\n  sourceName: string\n}) {\n  const refName = ruleSuite.refName.startsWith(refPrefix)\n    ? ruleSuite.refName.substring(refPrefix.length)\n    : ruleSuite.refName\n\n  const beforeSha = ruleSuite.beforeOid?.slice(0, 7)\n  const afterSha = ruleSuite.afterOid?.slice(0, 7)\n\n  const pushPhaseFailure = ruleSuite.evaluationMetadata.preReceiveFailure || false\n  const commitPending = ruleSuite.beforeOid === PENDING_OID || ruleSuite.afterOid === PENDING_OID\n  const queueEntryFailure = ruleSuite.result === 'enter_queue_failed'\n\n  let action = ''\n  let compareLink = null\n\n  if (!ruleSuite.afterOid) {\n    action = 'deleted'\n  } else if (!ruleSuite.beforeOid) {\n    action = 'created'\n\n    if (!pushPhaseFailure && missingRefName(ruleSuite) && !commitPending) {\n      compareLink = <Link href={comparePath({repo: ruleSuite.repository, head: ruleSuite.afterOid})}>{afterSha}</Link>\n    }\n  } else {\n    action = queueEntryFailure ? 'blocked' : 'pushed'\n\n    if (!pushPhaseFailure && !commitPending) {\n      compareLink = (\n        <Link href={comparePath({repo: ruleSuite.repository, base: ruleSuite.beforeOid, head: ruleSuite.afterOid})}>\n          {`${beforeSha}..${afterSha}`}\n        </Link>\n      )\n    }\n  }\n\n  return (\n    <>\n      <span>{`${action} `}</span>\n      {compareLink && (\n        <>\n          {compareLink}\n          <span> </span>\n        </>\n      )}\n      {queueEntryFailure && <span>from merge queue </span>}\n      {(compareLink || action === 'pushed') && !missingRefName(ruleSuite) && <span>to </span>}\n\n      {!missingRefName(ruleSuite) && (\n        <BranchName href={activityIndexPath({repo: ruleSuite.repository, branch: refName})}>{refName}</BranchName>\n      )}\n      {sourceType === 'organization' && (\n        <>\n          <span> in repo </span>\n          <BranchName href={repositoryPath({owner: ruleSuite.repository.ownerLogin, repo: ruleSuite.repository.name})}>\n            {ruleSuite.repository.ownerLogin !== sourceName && `${ruleSuite.repository.ownerLogin}/`}\n            {ruleSuite.repository.name}\n          </BranchName>\n        </>\n      )}\n    </>\n  )\n}\n\nfunction pushCommitMessage({commit}: {commit: Commit}) {\n  return commit.shortMessageHtmlLink ? (\n    <Truncate title={commit.message} sx={{maxWidth: '100%'}}>\n      <SafeHTMLBox\n        sx={{\n          maxWidth: '100%',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'normal',\n          wordBreak: 'break-word',\n        }}\n        html={commit.shortMessageHtmlLink}\n      />\n    </Truncate>\n  ) : (\n    // Edge case, should never happen (in theory)\n    // But if it happens we should at least show something\n    commit.message\n  )\n}\n\ntry{ RuleSuiteRow.displayName ||= 'RuleSuiteRow' } catch {}\ntry{ RuleEvaluationLabel.displayName ||= 'RuleEvaluationLabel' } catch {}\ntry{ ActionText.displayName ||= 'ActionText' } catch {}","import {useMemo, useRef, useState} from 'react'\nimport {Box, Pagination, RelativeTime, Octicon, Text, Timeline, LinkButton, Link, Heading} from '@primer/react'\nimport {PulseIcon, RocketIcon} from '@primer/octicons-react'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {Subhead} from '../components/Subhead'\nimport {InsightsBlank} from '../components/insights/InsightsBlank'\nimport {InsightsFilterBar} from '../components/insights/InsightsFilterBar'\nimport {RuleSuiteRow} from '../components/insights/RuleSuiteRow'\nimport type {InsightsRoutePayload, RuleSuite, UpsellInfo} from '../types/rules-types'\nimport type {Repository} from '@github-ui/current-repository'\nimport {insightsIndexPath} from '../helpers/insights-filter'\nimport {useRelativeNavigation} from '../hooks/use-relative-navigation'\nimport {useClickAnalytics} from '@github-ui/use-analytics'\nimport {isRulesetInherited} from '../helpers/utils'\nimport {DismissibleFlashOrToast, type FlashAlert} from '@github-ui/dismissible-flash'\n\nexport function InsightsPage() {\n  const {upsellInfo, learnMoreUrl, source} = useRoutePayload<InsightsRoutePayload>()\n\n  if (upsellInfo?.enterpriseRulesets.cta.visible) {\n    return (\n      <div>\n        <Subhead heading=\"Rule insights\" />\n        <UpsellInsightsBanner upsellInfo={upsellInfo} learnMoreUrl={learnMoreUrl} sourceName={source.ownerLogin} />\n      </div>\n    )\n  }\n\n  return <InsightsPageComponent />\n}\n\nconst UpsellInsightsBanner = ({\n  upsellInfo,\n  learnMoreUrl,\n  sourceName,\n}: {\n  upsellInfo: UpsellInfo\n  learnMoreUrl: string\n  sourceName: string\n}) => {\n  const {sendClickAnalyticsEvent} = useClickAnalytics()\n  let upsellPath = ''\n  if (upsellInfo?.organization) {\n    upsellPath = `/account/enterprises/new/${sourceName}`\n  } else {\n    upsellPath = '/account/enterprises/new'\n  }\n\n  return (\n    <div className=\"border rounded-2 color-bg-premium\">\n      <div className=\"ml-3 d-flex flex-items-center flex-column flex-justify-center my-5\">\n        <Octicon className=\"color-fg-muted\" icon={PulseIcon} size={24} />\n        <Heading as=\"h1\" sx={{fontSize: 4, mt: 3, mx: 5, textAlign: 'center'}}>\n          See how rulesets are affecting this repository\n        </Heading>\n        <Text className=\"color-fg-muted mt-3 mx-5\" sx={{textAlign: 'center'}}>\n          Enterprise accounts enable you to review commits against rulesets to track pass, fail, or bypass status for\n          greater oversight and understanding.\n        </Text>\n        {upsellInfo?.enterpriseRulesets.cta.path && (\n          <div className=\"mt-3\">\n            <LinkButton\n              className=\"btn-premium\"\n              href={upsellPath}\n              leadingVisual={() => <Octicon icon={RocketIcon} className=\"color-fg-sponsors\" />}\n              onClick={() => {\n                sendClickAnalyticsEvent({\n                  category: 'repository-rule-insights',\n                  action: 'click_rule_insights_upsell',\n                  label: 'RULE_INSIGHTS_UPSELL_BUTTON',\n                })\n              }}\n            >\n              Try GitHub Enterprise\n            </LinkButton>\n          </div>\n        )}\n        <Link className=\"mt-3\" href={learnMoreUrl}>\n          Learn more\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nfunction InsightsPageComponent() {\n  const {\n    source,\n    sourceType,\n    branchListCacheKey,\n    filter,\n    rulesets,\n    repositories,\n    ruleSuiteRuns,\n    visibleResults,\n    hasMoreSuites,\n    readOnly,\n    supportedTargets,\n  } = useRoutePayload<InsightsRoutePayload>()\n  const {navigate} = useRelativeNavigation()\n  const [flashAlert, setFlashAlert] = useState<FlashAlert>({message: '', variant: 'default'})\n  const flashRef = useRef<HTMLDivElement | null>(null)\n\n  let {page} = filter\n  page = page || 1\n  const pageCount = hasMoreSuites ? page + 1 : page\n\n  const isFork = sourceType === 'repository' && (source as Repository).isFork\n\n  // Group rule suites by day\n  const ruleSuitsByDay = useMemo(() => {\n    return ruleSuiteRuns.reduce(\n      (acc, ruleSuite) => {\n        const date = new Date(ruleSuite.createdAt).toDateString()\n        if (!acc[date]) {\n          acc[date] = []\n        }\n        acc[date]?.push(ruleSuite)\n        return acc\n      },\n      {} as {[key: string]: RuleSuite[]},\n    )\n  }, [ruleSuiteRuns])\n\n  // We can only filter on rulesets defined at this level\n  const filterableRulesets = useMemo(() => {\n    return rulesets.filter(r => !isRulesetInherited({type: sourceType, id: source.id}, r))\n  }, [rulesets, sourceType, source])\n\n  return (\n    <div>\n      <DismissibleFlashOrToast flashAlert={flashAlert} setFlashAlert={setFlashAlert} ref={flashRef} />\n      <Subhead heading=\"Rule insights\" />\n      <InsightsFilterBar\n        filter={filter}\n        source={source}\n        sourceType={sourceType}\n        branchListCacheKey={branchListCacheKey}\n        rulesets={filterableRulesets}\n        repositories={repositories}\n      />\n      {ruleSuiteRuns.length > 0 ? (\n        <Timeline>\n          {Object.keys(ruleSuitsByDay).map(day => (\n            <Timeline.Item key={day} condensed>\n              <Timeline.Badge>\n                <Octicon icon={PulseIcon} />\n              </Timeline.Badge>\n              <Timeline.Body>\n                <span>Activity on </span>\n                <RelativeTime datetime={day} precision=\"day\" threshold=\"P0D\" prefix=\"\" year=\"numeric\" />\n                <Box\n                  className=\"ml-n6 ml-sm-0\"\n                  as=\"ol\"\n                  sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    borderRadius: 2,\n                    overflow: 'hidden',\n                    backgroundColor: 'canvas.default',\n                    borderColor: 'border.default',\n                    borderStyle: 'solid',\n                    borderWidth: 1,\n                    marginTop: 3,\n                    color: 'fg.default',\n                    position: 'relative',\n                  }}\n                >\n                  {ruleSuitsByDay[day]?.map(ruleSuite => (\n                    <RuleSuiteRow\n                      key={ruleSuite.id}\n                      ruleSuite={ruleSuite}\n                      visibleResult={visibleResults[ruleSuite.id]!}\n                      sourceType={sourceType}\n                      sourceName={source.name}\n                    />\n                  ))}\n                </Box>\n              </Timeline.Body>\n            </Timeline.Item>\n          ))}\n        </Timeline>\n      ) : (\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            borderRadius: 2,\n            overflow: 'hidden',\n            borderColor: 'border.default',\n            borderStyle: 'solid',\n            borderWidth: 1,\n            marginTop: 2,\n          }}\n        >\n          <InsightsBlank\n            showCreateButton={!readOnly && !isFork}\n            setFlashAlert={setFlashAlert}\n            supportedRulesetTargets={supportedTargets}\n          />\n        </Box>\n      )}\n      {(page !== 1 || pageCount !== 1) && (\n        <Pagination\n          pageCount={pageCount}\n          currentPage={page}\n          onPageChange={(e, newPage) => {\n            e.preventDefault()\n            if (page !== newPage) {\n              navigate('.', insightsIndexPath({filter: {...filter, page: newPage}}), true)\n            }\n          }}\n          showPages={false}\n        />\n      )}\n    </div>\n  )\n}\n\ntry{ InsightsPage.displayName ||= 'InsightsPage' } catch {}\ntry{ UpsellInsightsBanner.displayName ||= 'UpsellInsightsBanner' } catch {}\ntry{ InsightsPageComponent.displayName ||= 'InsightsPageComponent' } catch {}","import {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {ReplyIcon} from '@primer/octicons-react'\nimport {useRelativeNavigation} from '../hooks/use-relative-navigation'\nimport type {HistoryComparisonRoutePayload} from '../types/rules-types'\nimport {Box, Text, Label, LinkButton} from '@primer/react'\nimport {Link} from '@github-ui/react-core/link'\nimport {GitHubAvatar} from '@github-ui/github-avatar'\nimport type {SafeHTMLString} from '@github-ui/safe-html'\nimport {SafeHTMLBox} from '@github-ui/safe-html'\n\nexport const HistoryComparisonPage = () => {\n  const {navigate, resolvePath} = useRelativeNavigation()\n  const {ruleset, diffHtml, history} = useRoutePayload<HistoryComparisonRoutePayload>()\n\n  return (\n    <>\n      <Box sx={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 3}}>\n        <Box sx={{display: 'flex', gap: 1, alignItems: 'center', fontSize: 3}}>\n          <Link to={resolvePath('../../../..')}>Rulesets</Link>\n          <span>/</span>\n          <Link to={resolvePath('../../..')}>\n            <Text\n              sx={{\n                display: 'block',\n                maxWidth: 200,\n                textOverflow: 'ellipsis',\n                overflowX: 'hidden',\n                whiteSpace: 'nowrap',\n              }}\n            >\n              {ruleset.name}\n            </Text>\n          </Link>\n          <span>/</span>\n          <Link to={resolvePath('../..')}>\n            <Text\n              sx={{\n                display: 'block',\n                maxWidth: 200,\n                textOverflow: 'ellipsis',\n                overflowX: 'hidden',\n                whiteSpace: 'nowrap',\n              }}\n            >\n              History\n            </Text>\n          </Link>\n          <span>/</span>\n          <span>Compare</span>\n        </Box>\n        <Box sx={{display: 'flex'}}>\n          <Label variant=\"success\">Beta</Label>\n          <Box sx={{ml: 2}}>\n            <Link to=\"https://github.com/orgs/community/discussions/69918\">Give feedback</Link>\n          </Box>\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          border: '1px solid',\n          borderColor: 'border.default',\n          borderRadius: 6,\n          mb: 3,\n        }}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            gap: 2,\n            px: 3,\n            py: 2,\n          }}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              minWidth: 0,\n              fontSize: 1,\n              alignItems: 'center',\n              width: 'max-content',\n              gap: 2,\n              flexBasis: 0,\n              flexGrow: 1,\n            }}\n          >\n            <GitHubAvatar sx={{marginRight: 2}} src={history.updated_by.static_avatar_url} />\n            <span>{history.updated_by.display_login}</span>\n            <Box sx={{display: 'flex', gap: 1, color: 'fg.muted'}}>\n              <span>edited</span>\n              <relative-time datetime={history.created_at} />\n            </Box>\n          </Box>\n          {!history.is_current ? (\n            <LinkButton\n              aria-label=\"Restore ruleset\"\n              sx={{\n                alignItems: 'center',\n                color: 'fg.default',\n                ...linkButtonSx,\n              }}\n              onClick={async () => {\n                navigate('../../..', `history_id_to_restore=${history.id}`)\n              }}\n              href={''}\n              variant=\"invisible\"\n              size={'small'}\n              leadingVisual={ReplyIcon}\n            >\n              <Text sx={{color: 'fg.default'}}>Restore</Text>\n            </LinkButton>\n          ) : null}\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          border: '1px solid',\n          borderColor: 'border.default',\n          borderRadius: 6,\n        }}\n      >\n        <div className=\"prose-diff no-level-zero-box-shadow\">\n          <SafeHTMLBox\n            className=\"markdown-body\"\n            // Extract certain pre styles from typical markdown body class\n            style={{\n              overflow: 'auto',\n              fontSize: '85%',\n              lineHeight: 1.45,\n              fontFamily: 'ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace',\n            }}\n            html={diffHtml as SafeHTMLString}\n          />\n        </div>\n      </Box>\n    </>\n  )\n}\n\nconst linkButtonSx = {\n  '&:hover:not([disabled])': {\n    textDecoration: 'none',\n  },\n  '&:focus:not([disabled])': {\n    textDecoration: 'none',\n  },\n  '&:active:not([disabled])': {\n    textDecoration: 'none',\n  },\n}\n\ntry{ HistoryComparisonPage.displayName ||= 'HistoryComparisonPage' } catch {}","import {DismissibleFlashOrToast, type FlashAlert} from '@github-ui/dismissible-flash'\nimport {GitHubAvatar} from '@github-ui/github-avatar'\nimport {ListView} from '@github-ui/list-view'\nimport {ListItemActionBar} from '@github-ui/list-view/ListItemActionBar'\nimport {ListItemDescription} from '@github-ui/list-view/ListItemDescription'\nimport {ListItemLeadingContent} from '@github-ui/list-view/ListItemLeadingContent'\nimport {ListItemMainContent} from '@github-ui/list-view/ListItemMainContent'\nimport {ListItemTitle} from '@github-ui/list-view/ListItemTitle'\nimport {ListItem} from '@github-ui/list-view/ListItem'\nimport {Link} from '@github-ui/react-core/link'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {DownloadIcon, FileDiffIcon, ReplyIcon} from '@primer/octicons-react'\nimport {ActionList, Box, Label, Pagination, Text} from '@primer/react'\nimport {useRef, useState} from 'react'\nimport {Blankslate} from '../components/Blankslate'\nimport {BorderBox} from '../components/BorderBox'\nimport {downloadRuleset} from '../helpers/export-ruleset'\nimport {useRelativeNavigation} from '../hooks/use-relative-navigation'\nimport type {HistorySummaryRoutePayload} from '../types/rules-types'\n\n/**\n * See ListView stories for a representation of this component.\n * ui/packages/list-view/src/stories/RepositoryRulesetHistory.stories.tsx\n * https://ui.githubapp.com/storybook/?path=/story/recipes-list-view-dotcom-pages--repository-ruleset-history\n */\nexport const HistorySummaryPage = () => {\n  const {navigate, resolvePath} = useRelativeNavigation()\n  const {readOnly, ruleset, hasMore, page} = useRoutePayload<HistorySummaryRoutePayload>()\n  const [flashAlert, setFlashAlert] = useState<FlashAlert>({message: '', variant: 'default'})\n  const flashRef = useRef<HTMLDivElement | null>(null)\n\n  const pageCount = hasMore ? page + 1 : page\n  const showPagination = hasMore || page > 1\n\n  return (\n    <>\n      <DismissibleFlashOrToast flashAlert={flashAlert} setFlashAlert={setFlashAlert} ref={flashRef} />\n      <Box sx={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 3}}>\n        <Box sx={{display: 'flex', gap: 1, alignItems: 'center', fontSize: 3}}>\n          <Link to={resolvePath('../..')}>Rulesets</Link>\n          <span>/</span>\n          <Link to={resolvePath('..')}>\n            <Text\n              sx={{\n                display: 'block',\n                maxWidth: 200,\n                textOverflow: 'ellipsis',\n                overflowX: 'hidden',\n                whiteSpace: 'nowrap',\n              }}\n            >\n              {ruleset.name}\n            </Text>\n          </Link>\n          <span>/</span>\n          <span>History</span>\n        </Box>\n        <Box sx={{display: 'flex'}}>\n          <Label variant=\"success\">Beta</Label>\n          <Box sx={{ml: 2}}>\n            <Link to=\"https://github.com/orgs/community/discussions/69918\">Give feedback</Link>\n          </Box>\n        </Box>\n      </Box>\n      <BorderBox>\n        {(ruleset.histories?.length || 0) > 0 ? (\n          <ListView title=\"Ruleset history\" variant=\"compact\">\n            {ruleset.histories?.map(({id, created_at, updated_by, is_current}, index) => (\n              <ListItem\n                key={id}\n                title={<ListItemTitle containerSx={{display: 'flex', gap: 1}} value={updated_by.display_login} />}\n                secondaryActions={\n                  <ListItemActionBar\n                    staticMenuActions={[\n                      {\n                        key: 'history',\n                        render: () => (\n                          <HistoryActionMenu\n                            rulesetName={ruleset.name}\n                            historyId={id}\n                            readOnly={readOnly}\n                            prevHistoryId={ruleset.histories?.[index + 1]?.id || null}\n                            canRestore={!is_current}\n                            setFlashAlert={setFlashAlert}\n                          />\n                        ),\n                      },\n                    ]}\n                  />\n                }\n              >\n                <ListItemLeadingContent>\n                  <GitHubAvatar sx={{marginRight: 2, alignSelf: 'center'}} src={updated_by.static_avatar_url} />\n                </ListItemLeadingContent>\n                <ListItemMainContent>\n                  <ListItemDescription>\n                    <span>edited</span>\n                    <relative-time datetime={created_at} />\n                  </ListItemDescription>\n                </ListItemMainContent>\n              </ListItem>\n            ))}\n          </ListView>\n        ) : (\n          <Blankslate heading=\"No ruleset history available\" />\n        )}\n      </BorderBox>\n      {showPagination ? (\n        <Pagination\n          pageCount={pageCount}\n          currentPage={page}\n          onPageChange={(e, newPage) => {\n            e.preventDefault()\n            navigate('.', `page=${newPage}`, false)\n          }}\n          showPages={false}\n        />\n      ) : null}\n    </>\n  )\n}\n\ntype HistoryActionMenuProps = {\n  rulesetName: string\n  historyId: number\n  prevHistoryId: number | null\n  readOnly?: boolean\n  canRestore?: boolean\n  setFlashAlert: (flashAlert: FlashAlert) => void\n}\n\nconst HistoryActionMenu = ({\n  rulesetName,\n  historyId,\n  prevHistoryId,\n  readOnly = false,\n  canRestore = true,\n  setFlashAlert,\n}: HistoryActionMenuProps) => {\n  const {navigate, resolvePath} = useRelativeNavigation()\n\n  return (\n    <ActionList>\n      <ActionList.Item\n        onSelect={() =>\n          prevHistoryId\n            ? navigate(`./${historyId}/compare`, `compare_history_id=${prevHistoryId}`, false)\n            : navigate(`./${historyId}/compare`, undefined, false)\n        }\n      >\n        <ActionList.LeadingVisual>\n          <FileDiffIcon size={16} />\n        </ActionList.LeadingVisual>\n        Compare changes\n        <ActionList.Description variant=\"block\">View a diff of these changes</ActionList.Description>\n      </ActionList.Item>\n      {!readOnly ? (\n        <ActionList.Item\n          disabled={!canRestore}\n          onSelect={async () => {\n            navigate('..', `history_id_to_restore=${historyId}`)\n          }}\n        >\n          <ActionList.LeadingVisual>\n            <ReplyIcon size={16} />\n          </ActionList.LeadingVisual>\n          Restore\n          <ActionList.Description variant=\"block\">Restore the ruleset to this version</ActionList.Description>\n        </ActionList.Item>\n      ) : null}\n      <ActionList.LinkItem\n        download={`${rulesetName}.json`}\n        target=\"_self\"\n        onClick={async () => {\n          try {\n            await downloadRuleset(resolvePath(`../export_ruleset/${historyId}`), rulesetName)\n          } catch {\n            setFlashAlert({\n              variant: 'danger',\n              message: 'Error exporting ruleset',\n            })\n          }\n        }}\n        className=\"text-decoration-skip\"\n      >\n        <ActionList.LeadingVisual>\n          <DownloadIcon size={16} />\n        </ActionList.LeadingVisual>\n        Download\n        <ActionList.Description variant=\"block\">Download raw file</ActionList.Description>\n      </ActionList.LinkItem>\n    </ActionList>\n  )\n}\n\ntry{ HistorySummaryPage.displayName ||= 'HistorySummaryPage' } catch {}\ntry{ HistoryActionMenu.displayName ||= 'HistoryActionMenu' } catch {}","import {App} from './App'\nimport {OverviewPage} from './routes/OverviewPage'\nimport {RulesetPage} from './routes/RulesetPage'\nimport {InsightsPage} from './routes/InsightsPage'\nimport {HistoryComparisonPage} from './routes/HistoryComparisonPage'\nimport {HistorySummaryPage} from './routes/HistorySummaryPage'\nimport {registerReactAppFactory} from '@github-ui/react-core/register-app'\nimport {jsonRoute} from '@github-ui/react-core/json-route'\n\nconst STANDARD_ROUTES = [\n  jsonRoute({path: '/:owner/:repo/settings/rules', Component: OverviewPage}),\n  jsonRoute({path: '/:owner/:repo/settings/rules/insights', Component: InsightsPage}),\n  jsonRoute({path: '/:owner/:repo/settings/rules/:rulesetId', Component: RulesetPage}),\n  jsonRoute({\n    path: '/:owner/:repo/settings/rules/:rulesetId/history/:historyId/compare/*',\n    Component: HistoryComparisonPage,\n  }),\n  jsonRoute({path: '/:owner/:repo/settings/rules/:rulesetId/history', Component: HistorySummaryPage}),\n  /* Read only pages */\n  jsonRoute({path: '/:owner/:repo/settings/rules/:rulesetId/history/:historyId/view', Component: RulesetPage}),\n  jsonRoute({path: '/:owner/:repo/rules', Component: OverviewPage}),\n  jsonRoute({path: '/:owner/:repo/rules/:rulesetId', Component: RulesetPage}),\n  jsonRoute({path: '/:owner/:repo/rules/:rulesetId/history', Component: HistorySummaryPage}),\n]\n\nconst STAFFTOOLS_ROUTES = [\n  /* Stafftools */\n  jsonRoute({path: '/stafftools/repositories/:owner/:repo/repository_rules', Component: OverviewPage}),\n  jsonRoute({path: '/stafftools/repositories/:owner/:repo/repository_rules/insights', Component: InsightsPage}),\n  jsonRoute({path: '/stafftools/repositories/:owner/:repo/repository_rules/:rulesetId', Component: RulesetPage}),\n  jsonRoute({\n    path: '/stafftools/repositories/:owner/:repo/repository_rules/:rulesetId/history/:historyId/compare/*',\n    Component: HistoryComparisonPage,\n  }),\n  jsonRoute({\n    path: '/stafftools/repositories/:owner/:repo/repository_rules/:rulesetId/history',\n    Component: HistorySummaryPage,\n  }),\n  jsonRoute({path: '/stafftools/users/:organizationId/organization_rules', Component: OverviewPage}),\n  jsonRoute({path: '/stafftools/users/:organizationId/organization_rules/insights', Component: InsightsPage}),\n  jsonRoute({path: '/stafftools/users/:organizationId/organization_rules/:rulesetId', Component: RulesetPage}),\n  jsonRoute({\n    path: '/stafftools/users/:organizationId/organization_rules/:rulesetId/history/:historyId/compare/*',\n    Component: HistoryComparisonPage,\n  }),\n  jsonRoute({\n    path: '/stafftools/users/:organizationId/organization_rules/:rulesetId/history',\n    Component: HistorySummaryPage,\n  }),\n]\n\nconst MEMBER_PRIVILEGE_ROUTES = [\n  jsonRoute({path: '/organizations/:org/settings/member_privilege_rules', Component: OverviewPage}),\n  jsonRoute({path: '/organizations/:org/settings/member_privilege_rules/:rulesetId', Component: RulesetPage}),\n\n  jsonRoute({path: '/enterprises/:enterprise/settings/policies/repositories', Component: OverviewPage}),\n  jsonRoute({path: '/enterprises/:enterprise/settings/policies/repositories/:rulesetId', Component: RulesetPage}),\n]\n\nregisterReactAppFactory('repos-rules', () => ({\n  App,\n  routes: [...STANDARD_ROUTES, ...STAFFTOOLS_ROUTES, ...MEMBER_PRIVILEGE_ROUTES],\n}))\n","import {useCallback, useContext} from 'react'\nimport {sendEvent} from '@github-ui/hydro-analytics'\nimport {AnalyticsContext} from '@github-ui/analytics-provider/context'\n\nexport interface AnalyticsEvent {\n  category: string\n  action: string\n  label: string\n  [key: string]: unknown\n}\n\ntype SendAnalyticsEventFunction = (\n  eventType: string,\n  target?: string,\n  payload?: {[key: string]: unknown} | AnalyticsEvent,\n) => void\n\n/**\n * Use this hook with the AnalyticsContext to send user analytics events to the data warehouse.\n * This hook will read values from the nearest AnalyticsContext.Provider, though you can override properties directly when sending an event.\n * It uses the `sendEvent` helper from `github/hydro-analytics`,\n * which enriches event context with additional information about the user, repository, and current page.\n * See: https://thehub.github.com/epd/engineering/products-and-services/internal/hydro/installation/browser-events/\n *\n * You can find a list of all included context properties in `app/helpers/octolytics_helper.rb`.\n *\n *\n * @example\n * ```tsx\n * function Component() {\n *   const { sendAnalyticsEvent } = useAnalytics()\n *   return <Button onClick={() => sendAnalyticsEvent('file_tree.close', 'FILE_TREE_TOGGLE')}>CLOSE TREE</Button>\n * }\n * ```\n *\n */\nexport function useAnalytics(): {\n  sendAnalyticsEvent: SendAnalyticsEventFunction\n} {\n  // WARNING: Do not add any hooks here that will cause rerenders on soft navs.\n  const contextData = useContext(AnalyticsContext)\n\n  if (!contextData) {\n    throw new Error('useAnalytics must be used within an AnalyticsContext')\n  }\n  const {appName, category, metadata} = contextData\n\n  return {\n    sendAnalyticsEvent: useCallback(\n      (eventType, target?, payload = {}) => {\n        const context = {\n          react: true,\n          ['app_name']: appName,\n          category,\n          ...metadata,\n        }\n        sendEvent(eventType, {...context, ...payload, target})\n      },\n      [appName, category, metadata],\n    ),\n  }\n}\n\n/**\n * Use this hook with the AnalyticsContext to send user analytics events to the data warehouse.\n * This hook will read values from the nearest AnalyticsContext.Provider, though you can override properties directly when sending an event.\n * It uses the `sendEvent` helper from `github/hydro-analytics`,\n * which enriches event context with additional information about the user, repository, and current page.\n * See: https://thehub.github.com/epd/engineering/products-and-services/internal/hydro/installation/browser-events/\n *\n * You can find a list of all included context properties in `app/helpers/octolytics_helper.rb`.\n *\n *\n * @example\n * ```tsx\n * function Component() {\n *   const { sendClickAnalyticsEvent } = useClickAnalytics()\n *   return <Button onClick={() => sendClickAnalyticsEvent({category: '...', action: '...', label: '...'})}>Submit</Button>\n * }\n * ```\n *\n */\nexport function useClickAnalytics(): {\n  sendClickAnalyticsEvent: (payload?: {[key: string]: unknown} | AnalyticsEvent) => void\n} {\n  const {sendAnalyticsEvent} = useAnalytics()\n  return {\n    sendClickAnalyticsEvent: useCallback(\n      (payload = {}) => {\n        sendAnalyticsEvent('analytics.click', undefined, payload)\n      },\n      [sendAnalyticsEvent],\n    ),\n  }\n}\n","import {useLayoutEffect} from '@github-ui/use-layout-effect'\nimport type {RefObject} from 'react'\nimport {useCallback, useEffect, useRef} from 'react'\n\ntype OnKeyPressCallBack = (event: KeyboardEvent) => void\n\nexport enum ModifierKeys {\n  ctrlKey = 'ctrlKey',\n  altKey = 'altKey',\n  shiftKey = 'shiftKey',\n  metaKey = 'metaKey',\n}\n\nexport type OnKeyPressOptions = {[key in ModifierKeys]?: boolean} & {\n  triggerWhenInputElementHasFocus?: boolean\n  triggerWhenPortalIsActive?: boolean\n  scopeRef?: RefObject<HTMLElement>\n  ignoreModifierKeys?: boolean\n}\n\nexport const useKeyPress = (keys: string[], callback: OnKeyPressCallBack, options?: OnKeyPressOptions) => {\n  // implement the callback ref pattern\n  const callbackRef = useRef(callback)\n  useLayoutEffect(() => {\n    callbackRef.current = callback\n  })\n\n  // handle what happens on key press\n  const handleKeyPress: EventListener = useCallback(\n    (event: Event) => {\n      const keyboardEvent = event as KeyboardEvent\n\n      if (isPortalActive() && !options?.triggerWhenPortalIsActive) {\n        return\n      }\n\n      if (!checkModifierKeys(keyboardEvent, options) && !options?.ignoreModifierKeys) {\n        return\n      }\n\n      if (!options?.triggerWhenInputElementHasFocus && eventTargetIsInputElement(keyboardEvent)) {\n        return\n      }\n\n      // check if the key is part of the ones we want to listen to\n      if (\n        keys.some(key => {\n          // In these cases we look at event.code since event.key will depend on whether a modifier key is pressed\n          if (/^\\d$/.test(key)) {\n            return keyboardEvent.code === `Digit${key}`\n          } else if (key === '/') {\n            return keyboardEvent.code === 'Slash'\n          }\n\n          return keyboardEvent.key === key\n        })\n      ) {\n        callbackRef.current(keyboardEvent)\n      }\n    },\n    [keys, options],\n  )\n\n  useEffect(() => {\n    const targetElement = options?.scopeRef?.current || document\n    targetElement.addEventListener('keydown', handleKeyPress)\n    return () => targetElement.removeEventListener('keydown', handleKeyPress)\n  }, [handleKeyPress, options?.scopeRef])\n}\n\nconst portalSelectors = '#__primerPortalRoot__, [id$=\"-portal-root\"]'\n\nfunction isPortalActive() {\n  const portals = [...document.querySelectorAll(portalSelectors)]\n  return portals.some(elementHasNonZeroHeight)\n}\n\nfunction elementHasNonZeroHeight(element: Element): boolean {\n  if (element.clientHeight > 0) return true\n\n  for (const child of element.children) {\n    if (elementHasNonZeroHeight(child)) return true\n  }\n\n  return false\n}\n\nfunction checkModifierKeys(keyboardEvent: KeyboardEvent, options: OnKeyPressOptions | undefined) {\n  for (const key of Object.values(ModifierKeys)) {\n    if (options && options[key] && !keyboardEvent[key]) {\n      // modifier key is required but not pressed\n      return false\n    }\n\n    if (keyboardEvent[key] && (!options || !options[key])) {\n      // modifier key is pressed but not required\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function eventTargetIsInputElement(event: KeyboardEvent) {\n  return event.target instanceof HTMLTextAreaElement || event.target instanceof HTMLInputElement\n}\n","import {GitHubAvatar} from '@github-ui/github-avatar'\nimport {ActionList} from '@primer/react'\nimport React from 'react'\n\nimport type {User} from './user-types'\n\ninterface UserItemProps {\n  user: User\n  isCurrent: boolean\n  onSelect?: (user: User) => void\n}\n\nexport const UserItem = React.memo(function UserItemInner({user, isCurrent, onSelect}: UserItemProps) {\n  return (\n    <ActionList.Item\n      selected={isCurrent}\n      onSelect={() => {\n        if (onSelect) onSelect(user)\n      }}\n    >\n      <ActionList.LeadingVisual>\n        <GitHubAvatar src={user.primaryAvatarUrl} square={user.path.startsWith('/apps/')} />\n      </ActionList.LeadingVisual>\n      {user.login}\n      <ActionList.Description>{user.name}</ActionList.Description>\n    </ActionList.Item>\n  )\n})\n\ntry{ UserItem.displayName ||= 'UserItem' } catch {}","import {FixedSizeVirtualList} from '@github-ui/ref-selector/fixed-size-virtual-list'\nimport {Box, type BoxProps} from '@primer/react'\n\nimport type {User} from './user-types'\nimport {UserItem} from './UserItem'\n\ninterface UsersListProps {\n  users: User[]\n  currentUser?: User\n  onSelect?: (user: User) => void\n  sx?: BoxProps['sx']\n}\n\n/**\n * The virtualized list has a fixed height. If we don't have very many users,\n * don't virtualize the list so that the container can shrink.\n */\nconst virtualizationThreshold = 20\nconst maxHeight = 330\n\nexport function UsersList(props: UsersListProps) {\n  return props.users.length > virtualizationThreshold ? <VirtualUsersList {...props} /> : <FullUsersList {...props} />\n}\n\n/**\n * Non-virtual implementation\n */\nfunction FullUsersList({users, currentUser, onSelect, sx = {}}: UsersListProps) {\n  return (\n    <Box sx={{maxHeight, overflowY: 'auto', ...sx}}>\n      {users.map(user => (\n        <UserItem key={user.login} user={user} isCurrent={user.login === currentUser?.login} onSelect={onSelect} />\n      ))}\n    </Box>\n  )\n}\n\nfunction VirtualUsersList({users, currentUser, onSelect, sx = {}}: UsersListProps) {\n  return (\n    <FixedSizeVirtualList\n      items={users}\n      itemHeight={33}\n      sx={{maxHeight, overflowY: 'auto', ...sx}}\n      makeKey={user => user.login}\n      renderItem={user => (\n        <UserItem key={user.login} user={user} isCurrent={user.login === currentUser?.login} onSelect={onSelect} />\n      )}\n    />\n  )\n}\n\ntry{ UsersList.displayName ||= 'UsersList' } catch {}\ntry{ FullUsersList.displayName ||= 'FullUsersList' } catch {}\ntry{ VirtualUsersList.displayName ||= 'VirtualUsersList' } catch {}","import {GitHubAvatar} from '@github-ui/github-avatar'\nimport {PeopleIcon, SearchIcon} from '@primer/octicons-react'\nimport {\n  ActionList,\n  ActionMenu,\n  Box,\n  type ButtonProps,\n  Flash,\n  type OverlayProps,\n  Spinner,\n  TextInput,\n  Octicon,\n} from '@primer/react'\nimport type React from 'react'\nimport {useState} from 'react'\n\nimport type {User, UsersState} from './user-types'\nimport {UsersList} from './UsersList'\n\nexport interface UserSelectorProps {\n  /**\n   * Default text to display when no user is selected\n   */\n  defaultText: string\n  /**\n   * The current selected user.\n   */\n  usersState: UsersState\n  /**\n   * The current selected user.\n   */\n  currentUser?: User\n  /**\n   * Callback when a user is selected.\n   */\n  onSelect?: (user: User) => void\n  /**\n   * The name of the data-hotkey\n   */\n  hotKey?: string\n  /**\n   * A callback that is invoked on user selector menu state change.\n   */\n  onOpenChange?: (open: boolean) => void\n  /**\n   * Custom content to append to the bottom of the ref selector\n   */\n  renderCustomFooter?: () => React.ReactNode\n  /**\n   * Size of the button to render\n   * @default 'medium' if not provided\n   * Option of 'small', 'medium', or 'large'\n   */\n  size?: ButtonProps['size']\n  /**\n   * Whether or not the user selector should provide a filter on whatever the user typed in\n   * that didn't have any results in the user list provided.\n   */\n  showTypedInUser?: boolean\n  /**\n   * The width of the `ActionMenu.Overlay`.\n   * @default 'large' if not provided.\n   * Option of 'small', 'medium', 'large', 'xlarge', 'xxlarge', or 'auto'.\n   * See Primer React Overlay documentation for more information.\n   */\n  width?: OverlayProps['width']\n  /**\n   * Search bar placeholder\n   */\n  placeholder?: string\n  /**\n   * Words prepending filter\n   */\n  label?: string\n}\n\nexport function UserSelector(props: UserSelectorProps) {\n  const {\n    defaultText,\n    usersState,\n    currentUser,\n    onSelect,\n    hotKey,\n    onOpenChange,\n    renderCustomFooter,\n    size,\n    showTypedInUser = false,\n    width = 'large',\n    label = '',\n  } = props\n  const [filterText, setFilterText] = useState('')\n  const filteredUsers = filterUsersHelper(usersState.users, filterText)\n\n  return (\n    <div>\n      <ActionMenu onOpenChange={onOpenChange}>\n        <ActionMenu.Button data-hotkey={hotKey} size={size} data-testid=\"user-selector-button\">\n          <Box sx={{display: 'flex'}}>\n            <Box sx={{mr: 2}}>\n              {currentUser ? (\n                <GitHubAvatar\n                  size={16}\n                  src={currentUser.primaryAvatarUrl}\n                  square={currentUser.path.startsWith('/apps/')}\n                />\n              ) : (\n                <Octicon icon={PeopleIcon} size=\"small\" sx={{color: 'fg.muted'}} />\n              )}\n            </Box>\n            <Box sx={{maxWidth: 125, overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap'}}>\n              {currentUser ? (\n                <span>\n                  {label}\n                  {currentUser.login}\n                </span>\n              ) : (\n                <span>{defaultText}</span>\n              )}\n            </Box>\n          </Box>\n        </ActionMenu.Button>\n        <ActionMenu.Overlay width={width}>\n          <ActionList showDividers selectionVariant=\"single\">\n            <UserFilter defaultText={filterText} onFilterChange={setFilterText} />\n            <ActionList.Divider />\n            {usersState.loading ? (\n              <Loading />\n            ) : usersState.error ? (\n              <LoadingFailed />\n            ) : filteredUsers.length === 0 ? (\n              <UsersZeroState showTypedInUser={showTypedInUser} filterText={filterText} onSelect={onSelect} />\n            ) : (\n              <UsersList\n                users={filteredUsers}\n                currentUser={currentUser}\n                onSelect={onSelect}\n                sx={renderCustomFooter ? {pb: '10px', pt: 1} : {pt: 1}}\n              />\n            )}\n            {renderCustomFooter && <ActionList.Divider sx={{marginTop: 0}} />}\n            {renderCustomFooter?.()}\n          </ActionList>\n        </ActionMenu.Overlay>\n      </ActionMenu>\n    </div>\n  )\n}\n\nfunction filterUsersHelper(users: User[], filterText: string): User[] {\n  if (!users) return []\n\n  const trimmedFilterText = filterText.trim().toLowerCase()\n  if (!trimmedFilterText) {\n    // Use the full list of users if there is no filterText\n    return users\n  }\n\n  return users.filter(\n    user =>\n      user.login.toLowerCase().includes(trimmedFilterText) || user.name?.toLowerCase().includes(trimmedFilterText),\n  )\n}\n\ninterface UserFilterProps {\n  onFilterChange: (filterText: string) => void\n  defaultText: string\n}\n\nfunction UserFilter({onFilterChange, defaultText}: UserFilterProps) {\n  const placeholder = 'Find a user...'\n  return (\n    <ActionList.Group sx={{px: 2}}>\n      <TextInput\n        leadingVisual={SearchIcon}\n        value={defaultText}\n        sx={{width: '100%'}}\n        placeholder={placeholder}\n        onChange={e => onFilterChange(e.target.value)}\n      />\n    </ActionList.Group>\n  )\n}\n\nfunction Loading() {\n  return (\n    <Box sx={{display: 'flex', justifyContent: 'center', p: 2}}>\n      <Spinner size=\"medium\" aria-label=\"Loading users...\" />\n    </Box>\n  )\n}\n\nfunction LoadingFailed() {\n  return <Flash variant=\"danger\">Could not load users</Flash>\n}\n\nfunction UsersZeroState({\n  showTypedInUser,\n  filterText,\n  onSelect,\n}: {\n  showTypedInUser: boolean\n  filterText: string\n  onSelect?: (user: User) => void\n}) {\n  if (showTypedInUser) {\n    return (\n      <ActionList.Item\n        sx={{display: 'flex', justifyContent: 'center', mb: 2}}\n        onSelect={() => {\n          //for this onSelect to work, you need to only care about the login property of a given User.\n          if (onSelect) {\n            onSelect({\n              login: filterText,\n              name: filterText,\n              path: '',\n              primaryAvatarUrl: '',\n            })\n          }\n        }}\n      >\n        <>\n          Filter on author&nbsp;\n          <Box as=\"span\" sx={{fontWeight: 600}}>\n            {filterText}\n          </Box>\n        </>\n      </ActionList.Item>\n    )\n  }\n\n  return <Box sx={{p: 3, display: 'flex', justifyContent: 'center'}}>Nothing to show</Box>\n}\n\ntry{ UserSelector.displayName ||= 'UserSelector' } catch {}\ntry{ UserFilter.displayName ||= 'UserFilter' } catch {}\ntry{ Loading.displayName ||= 'Loading' } catch {}\ntry{ LoadingFailed.displayName ||= 'LoadingFailed' } catch {}\ntry{ UsersZeroState.displayName ||= 'UsersZeroState' } catch {}","import {ActionList, ActionMenu} from '@primer/react'\nimport type {ActionListProps, ActionMenuButtonProps, OverlayProps} from '@primer/react'\n\nexport type ActionMenuSelectorProps<ActionMenuSelectorType extends string | number> = {\n  actionListProps?: ActionListProps\n  buttonProps?: Omit<ActionMenuButtonProps, 'children'>\n  overlayProps?: Partial<OverlayProps>\n  currentSelection: ActionMenuSelectorType\n  orderedValues: ActionMenuSelectorType[]\n  displayValues: Record<ActionMenuSelectorType, string>\n  onSelect: (selected: ActionMenuSelectorType) => void\n}\n\nexport function ActionMenuSelector<ActionMenuSelectorType extends string | number>({\n  buttonProps,\n  overlayProps,\n  actionListProps,\n  currentSelection,\n  orderedValues,\n  displayValues,\n  onSelect,\n}: ActionMenuSelectorProps<ActionMenuSelectorType>) {\n  return (\n    <ActionMenu>\n      <ActionMenu.Button size=\"medium\" {...buttonProps}>\n        {displayValues[currentSelection]}\n      </ActionMenu.Button>\n      <ActionMenu.Overlay width=\"medium\" {...overlayProps}>\n        <ActionList selectionVariant=\"single\" {...actionListProps}>\n          {orderedValues.map(option => (\n            <ActionList.Item\n              key={option}\n              selected={option === currentSelection}\n              onSelect={() => {\n                onSelect(option)\n              }}\n            >\n              {displayValues[option]}\n            </ActionList.Item>\n          ))}\n        </ActionList>\n      </ActionMenu.Overlay>\n    </ActionMenu>\n  )\n}\n\ntry{ ActionMenuSelector.displayName ||= 'ActionMenuSelector' } catch {}","import {ClockIcon} from '@primer/octicons-react'\nimport {ActionMenuSelector} from './ActionMenuSelector'\nimport type {TimePeriod} from './action-menu-types'\n\nconst orderedPeriods: TimePeriod[] = ['hour', 'day', 'week', 'month']\n\nconst timePeriods: Record<TimePeriod, string> = {\n  hour: 'Last hour',\n  day: 'Last 24 hours',\n  week: 'Last week',\n  month: 'Last month',\n}\n\nexport type TimeFilterProps = {\n  currentTimePeriod: TimePeriod\n  onSelect: (selectedTimePeriod: TimePeriod) => void\n}\n\nexport function TimeFilter({currentTimePeriod, onSelect}: TimeFilterProps) {\n  return (\n    <ActionMenuSelector\n      buttonProps={{leadingVisual: ClockIcon}}\n      currentSelection={currentTimePeriod}\n      orderedValues={orderedPeriods}\n      displayValues={timePeriods}\n      onSelect={onSelect}\n    />\n  )\n}\n\ntry{ TimeFilter.displayName ||= 'TimeFilter' } catch {}","import type {FC} from 'react'\n\nexport const ActorType: FC<{\n  actorType: string\n}> = ({actorType}) => {\n  if (actorType === 'RepositoryRole' || actorType === 'OrganizationAdmin') {\n    return <span className=\"note ml-2\">Role</span>\n  }\n  if (actorType === 'Integration') {\n    return <span className=\"note ml-2\">App</span>\n  }\n  if (actorType === 'DeployKey') {\n    return null\n  }\n  if (actorType === 'EnterpriseTeam') {\n    return <span className=\"note ml-2\">Enterprise team</span>\n  }\n  if (actorType === 'EnterpriseOwner') {\n    return <span className=\"note ml-2\">Role</span>\n  }\n  return <span className=\"note ml-2\">{actorType}</span>\n}\n\nexport function actorTypeString(actorType: string) {\n  switch (actorType) {\n    case 'RepositoryRole':\n    case 'OrganizationAdmin':\n      return 'Role'\n    case 'Integration':\n      return 'App'\n    case 'DeployKey':\n      return ''\n    case 'EnterpriseTeam':\n      return 'Enterprise team'\n    case 'EnterpriseOwner':\n      return 'Role'\n    default:\n      return actorType\n  }\n}\n","import {GitHubAvatar} from '@github-ui/github-avatar'\nimport type {FC} from 'react'\nimport {Octicon} from '@primer/react'\nimport {EyeIcon, PencilIcon, PersonIcon, PeopleIcon, ToolsIcon, type Icon, KeyIcon} from '@primer/octicons-react'\nimport type {BypassActorType} from '../bypass-actors-types'\n\nconst roleIconMap: {[key: string]: Icon} = {\n  Write: PencilIcon,\n  Maintain: ToolsIcon,\n  'Repository admin': EyeIcon,\n  'Organization admin': EyeIcon,\n}\n\nexport const BypassAvatar: FC<{\n  baseUrl: string\n  id: string | number | null\n  name: string\n  type: BypassActorType\n  size?: number\n}> = ({baseUrl, id, type, name, size = 16}) => {\n  if (type === 'Team') {\n    return <GitHubAvatar alt={name} src={`${baseUrl}/t/${id}`} size={size} />\n  }\n  if (type === 'Integration') {\n    return <GitHubAvatar alt={name} src={`${baseUrl}/in/${id}`} size={size} />\n  }\n  if (type === 'RepositoryRole' || type === 'OrganizationAdmin') {\n    return <Octicon icon={roleIconMap[name] || PersonIcon} sx={{color: 'fg.muted'}} />\n  }\n  if (type === 'DeployKey') {\n    return <Octicon icon={KeyIcon} sx={{color: 'fg.muted'}} />\n  }\n  if (type === 'EnterpriseTeam') {\n    return <Octicon icon={PeopleIcon} sx={{color: 'fg.muted'}} />\n  }\n  if (type === 'EnterpriseOwner') {\n    return <Octicon icon={PeopleIcon} sx={{color: 'fg.muted'}} />\n  }\n  return null\n}\n","import {useState, useEffect, useCallback, useRef} from 'react'\nimport {Blankslate, Dialog, type DialogButtonProps} from '@primer/react/experimental'\nimport {debounce} from '@github/mini-throttle'\nimport {getBypassSuggestions} from '../../services/api'\nimport type {BypassActor} from '../../bypass-actors-types'\nimport {ActorBypassMode} from '../../bypass-actors-types'\nimport {BypassDialogBody} from './BypassDialogBody'\nimport {BypassDialogHeader} from './BypassDialogHeader'\nimport {DismissibleFlashOrToast, type FlashAlert} from '@github-ui/dismissible-flash'\nimport {Box, FormControl, Text, TextInput, CheckboxGroup} from '@primer/react'\nimport {SearchIcon} from '@primer/octicons-react'\nimport {BypassDialogRow} from './BypassDialogRow'\nimport {alreadyAdded} from './alreadyAdded'\nimport {useFeatureFlag} from '@github-ui/react-core/use-feature-flag'\n\nconst inputPlaceholder = `Search`\n\nexport type BypassDialogProps = {\n  onClose: () => void\n  baseAvatarUrl: string\n  enabledBypassActors: BypassActor[]\n  addBypassActor: (\n    actorId: BypassActor['actorId'],\n    actorType: BypassActor['actorType'],\n    name: BypassActor['name'],\n    bypassMode: BypassActor['bypassMode'],\n    owner: BypassActor['owner'],\n  ) => void\n  initialSuggestions: BypassActor[]\n  suggestionsUrl: string\n  addReviewerSubtitle: string\n}\n\nexport const BypassDialog = ({\n  onClose,\n  baseAvatarUrl,\n  enabledBypassActors,\n  addBypassActor,\n  initialSuggestions,\n  suggestionsUrl,\n  addReviewerSubtitle,\n}: BypassDialogProps) => {\n  const [bypassListFilter, setBypassListFilter] = useState<string>('')\n  const [suggestions, setSuggestions] = useState<BypassActor[]>(initialSuggestions)\n  const [selected, setSelected] = useState<BypassActor[]>([])\n  const [flashAlert, setFlashAlert] = useState<FlashAlert>({message: '', variant: 'default'})\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounceBypassSuggestions = useCallback(\n    debounce(async (newFilter: string) => {\n      if (newFilter === '') {\n        setSuggestions(initialSuggestions)\n      } else {\n        try {\n          const response = await getBypassSuggestions(suggestionsUrl, newFilter)\n          setSuggestions(response)\n        } catch (e) {\n          setFlashAlert({\n            variant: 'danger',\n            message: 'Failed to fetch suggestions',\n          })\n        }\n      }\n    }, 200),\n    [suggestionsUrl, setSuggestions],\n  )\n\n  useEffect(() => {\n    debounceBypassSuggestions(bypassListFilter)\n  }, [bypassListFilter, debounceBypassSuggestions])\n\n  const onBypassListSelected = () => {\n    for (const item of selected) {\n      if (\n        enabledBypassActors.some(({actorId, actorType}) => actorId === item.actorId && actorType === item.actorType)\n      ) {\n        setFlashAlert({\n          variant: 'danger',\n          message: 'Actor is already added',\n        })\n        return\n      }\n      if (item.actorId !== 'Organization admin') {\n        addBypassActor(item.actorId, item.actorType, item.name, ActorBypassMode.ALWAYS, item.owner)\n      }\n    }\n    onClose()\n  }\n\n  const footerButtons: DialogButtonProps[] = [\n    {content: 'Cancel', onClick: onClose, buttonType: 'normal'},\n    {\n      content: 'Add selected',\n      onClick: onBypassListSelected,\n      buttonType: 'primary',\n    },\n  ]\n\n  function DialogHeader(dialogLabelId: string) {\n    return (\n      <BypassDialogHeader\n        onClose={onClose}\n        bypassListFilter={bypassListFilter}\n        setBypassListFilter={setBypassListFilter}\n        dialogLabelId={dialogLabelId}\n        flashAlert={flashAlert}\n        setFlashAlert={setFlashAlert}\n        addReviewerSubtitle={addReviewerSubtitle}\n      />\n    )\n  }\n\n  const flashRef = useRef<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    flashRef.current?.focus()\n  }, [flashAlert, flashRef])\n\n  const newSuggestions = suggestions.filter(s => !alreadyAdded(s.actorId, s.actorType, enabledBypassActors))\n\n  const a11yAddBypassDialog = useFeatureFlag('a11y_add_bypass_dialog')\n\n  if (a11yAddBypassDialog) {\n    return (\n      <Dialog title=\"Add bypass\" height=\"auto\" width=\"xlarge\" footerButtons={footerButtons} onClose={onClose}>\n        <Dialog.Body sx={{padding: 0}}>\n          <Box sx={{marginBottom: 3, display: 'flex', flexDirection: 'column'}}>\n            <DismissibleFlashOrToast flashAlert={flashAlert} setFlashAlert={setFlashAlert} ref={flashRef} />\n            <FormControl sx={{marginTop: 1}}>\n              <FormControl.Label sx={{fontWeight: 'normal'}}>{addReviewerSubtitle}</FormControl.Label>\n              <TextInput\n                block={false}\n                sx={{width: '100%', fontWeight: 'normal'}}\n                leadingVisual={SearchIcon}\n                placeholder={inputPlaceholder}\n                onChange={e => setBypassListFilter(e.target.value)}\n                value={bypassListFilter}\n              />\n            </FormControl>\n          </Box>\n          <Box sx={{display: 'flex', marginBottom: 1}}>\n            <Text id=\"suggestionsHeading\" sx={{fontWeight: 'semibold'}}>\n              Suggestions\n            </Text>\n          </Box>\n          <Box sx={{height: 175}}>\n            {newSuggestions.length > 0 ? (\n              <CheckboxGroup aria-labelledby=\"suggestionsHeading\" sx={{paddingBottom: 4}}>\n                {newSuggestions.map(s => {\n                  return (\n                    <BypassDialogRow\n                      key={`${s.actorId}-${s.actorType}`}\n                      actorId={s.actorId}\n                      actorType={s.actorType}\n                      name={s.name}\n                      owner={s.owner}\n                      selected={selected}\n                      setSelected={setSelected}\n                      baseAvatarUrl={baseAvatarUrl}\n                      enabledBypassActors={enabledBypassActors}\n                    />\n                  )\n                })}\n              </CheckboxGroup>\n            ) : (\n              <Blankslate>\n                <Blankslate.Heading>No suggestions</Blankslate.Heading>\n              </Blankslate>\n            )}\n          </Box>\n        </Dialog.Body>\n      </Dialog>\n    )\n  } else {\n    return (\n      <Dialog\n        renderHeader={({dialogLabelId}) => DialogHeader(dialogLabelId)}\n        height=\"auto\"\n        width=\"xlarge\"\n        footerButtons={footerButtons}\n        onClose={onClose}\n      >\n        <BypassDialogBody\n          suggestions={suggestions}\n          selected={selected}\n          setSelected={setSelected}\n          baseAvatarUrl={baseAvatarUrl}\n          enabledBypassActors={enabledBypassActors}\n        />\n      </Dialog>\n    )\n  }\n}\n\ntry{ BypassDialog.displayName ||= 'BypassDialog' } catch {}\ntry{ DialogHeader.displayName ||= 'DialogHeader' } catch {}","import {Fragment} from 'react'\nimport {Box, Checkbox, FormControl, Text, Truncate} from '@primer/react'\nimport type {BypassActor, BypassActorType} from '../../bypass-actors-types'\nimport {ActorBypassMode} from '../../bypass-actors-types'\nimport {BypassAvatar} from '../BypassAvatar'\nimport {ActorType} from '../ActorType'\nimport {alreadyAdded} from './alreadyAdded'\n\ntype BypassDialogRowProps = {\n  actorId: number | string | null\n  actorType: BypassActorType\n  name: string\n  owner?: string\n  selected: BypassActor[]\n  setSelected: (selected: BypassActor[]) => void\n  baseAvatarUrl: string\n  enabledBypassActors: BypassActor[]\n}\n\nexport function BypassDialogRow({\n  actorId,\n  actorType,\n  name,\n  owner,\n  selected,\n  setSelected,\n  baseAvatarUrl,\n  enabledBypassActors,\n}: BypassDialogRowProps) {\n  const isChecked = selected.some(item => item.actorId === actorId && item.actorType === actorType)\n  return (\n    <FormControl>\n      <Checkbox\n        data-testid=\"bypass-dialog-checkbox\"\n        value=\"actorId\"\n        checked={isChecked || alreadyAdded(actorId, actorType, enabledBypassActors)}\n        onChange={() => {\n          if (isChecked) {\n            const index = selected.findIndex(\n              bypassActor => bypassActor?.actorId === actorId && bypassActor?.actorType === actorType,\n            )\n            if (index > -1) setSelected([...selected.slice(0, index), ...selected.slice(index + 1)])\n          } else {\n            setSelected([\n              ...selected,\n              {actorId, actorType, name, _enabled: true, _dirty: true, bypassMode: ActorBypassMode.ALWAYS, owner},\n            ])\n          }\n        }}\n      />\n      <FormControl.LeadingVisual>\n        <BypassAvatar baseUrl={baseAvatarUrl} id={actorId} name={name} type={actorType} />\n      </FormControl.LeadingVisual>\n      <FormControl.Label>\n        <Box sx={{display: 'flex', alignItems: 'center', fontWeight: 'normal'}}>\n          <Truncate title={name} maxWidth={250}>\n            <Text sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis'}}>{name}</Text>\n          </Truncate>\n          <ActorType actorType={actorType} />\n          {actorType === 'Team' ? (\n            <Fragment>\n              <Text className=\"note\" sx={{marginLeft: 1, marginRight: 1}}>\n                &bull;\n              </Text>\n              <Truncate title={`@${name}`} maxWidth={250}>\n                <Text\n                  className=\"note\"\n                  sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis'}}\n                >{`@${name}`}</Text>\n              </Truncate>\n            </Fragment>\n          ) : null}\n          {actorType === 'Integration' && owner ? (\n            <Fragment>\n              <Text className=\"note\" sx={{marginLeft: 1, marginRight: 1}}>\n                &bull;\n              </Text>\n              <Truncate title={owner} maxWidth={250}>\n                <Text className=\"note\" sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis'}}>\n                  {owner}\n                </Text>\n              </Truncate>\n            </Fragment>\n          ) : null}\n        </Box>\n      </FormControl.Label>\n    </FormControl>\n  )\n}\n\ntry{ BypassDialogRow.displayName ||= 'BypassDialogRow' } catch {}","import {Box, CheckboxGroup} from '@primer/react'\nimport {Blankslate} from '@primer/react/experimental'\nimport type {BypassActor} from '../../bypass-actors-types'\nimport {BypassDialogRow} from './BypassDialogRow'\nimport {alreadyAdded} from './alreadyAdded'\n\ntype DialogBodyProps = {\n  suggestions: BypassActor[]\n  selected: BypassActor[]\n  setSelected: (selected: BypassActor[]) => void\n  baseAvatarUrl: string\n  enabledBypassActors: BypassActor[]\n}\n\nexport function BypassDialogBody({\n  suggestions,\n  selected,\n  setSelected,\n  baseAvatarUrl,\n  enabledBypassActors,\n}: DialogBodyProps) {\n  const newSuggestions = suggestions.filter(s => !alreadyAdded(s.actorId, s.actorType, enabledBypassActors))\n  return (\n    <Box sx={{height: 175}}>\n      {newSuggestions.length > 0 ? (\n        <CheckboxGroup aria-labelledby=\"suggestionsHeading\" sx={{paddingBottom: 4}}>\n          <ul className=\"list-style-none\">\n            {newSuggestions.map(s => {\n              return (\n                <li key={`${s.actorId}-${s.actorType}`}>\n                  <BypassDialogRow\n                    actorId={s.actorId}\n                    actorType={s.actorType}\n                    name={s.name}\n                    owner={s.owner}\n                    selected={selected}\n                    setSelected={setSelected}\n                    baseAvatarUrl={baseAvatarUrl}\n                    enabledBypassActors={enabledBypassActors}\n                  />\n                </li>\n              )\n            })}\n          </ul>\n        </CheckboxGroup>\n      ) : (\n        <Box sx={{py: '6%'}}>\n          <Box sx={{textAlign: 'center'}}>\n            <Blankslate>\n              <Blankslate.Heading as=\"h3\">No suggestions</Blankslate.Heading>\n            </Blankslate>\n          </Box>\n        </Box>\n      )}\n    </Box>\n  )\n}\n\ntry{ BypassDialogBody.displayName ||= 'BypassDialogBody' } catch {}","import {Fragment, useEffect, useRef} from 'react'\nimport {Box, FormControl, IconButton, Text, TextInput} from '@primer/react'\nimport {SearchIcon, XIcon} from '@primer/octicons-react'\nimport {Dialog} from '@primer/react/experimental'\nimport {type FlashAlert, DismissibleFlashOrToast} from '@github-ui/dismissible-flash'\n\nconst inputPlaceholder = `Search`\n\ntype BypassDialogHeaderProps = {\n  onClose: () => void\n  bypassListFilter: string\n  setBypassListFilter: (bypassListFilter: string) => void\n  dialogLabelId: string\n  flashAlert: FlashAlert\n  setFlashAlert: (flashAlert: FlashAlert) => void\n  addReviewerSubtitle: string\n}\n\nexport function BypassDialogHeader({\n  onClose,\n  bypassListFilter,\n  setBypassListFilter,\n  dialogLabelId,\n  flashAlert,\n  setFlashAlert,\n  addReviewerSubtitle,\n}: BypassDialogHeaderProps) {\n  const flashRef = useRef<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    flashRef.current?.focus()\n  }, [flashAlert, flashRef])\n\n  return (\n    <Fragment>\n      <Box sx={{padding: 3, display: 'flex', flexDirection: 'column'}}>\n        <DismissibleFlashOrToast flashAlert={flashAlert} setFlashAlert={setFlashAlert} ref={flashRef} />\n        <Box sx={{display: 'flex', alignItems: 'center'}}>\n          <Dialog.Title id={dialogLabelId} sx={{fontWeight: 'bold', flex: 1}}>\n            Add bypass\n          </Dialog.Title>\n          <IconButton variant=\"invisible\" aria-label=\"Close Dialog\" icon={XIcon} onClick={onClose} />\n        </Box>\n        <Text sx={{fontWeight: 'normal', color: 'fg.subtle'}}>{addReviewerSubtitle}</Text>\n        <FormControl sx={{marginTop: 1}}>\n          <FormControl.Label visuallyHidden>Search for bypass actors</FormControl.Label>\n          <TextInput\n            block={false}\n            sx={{width: '100%', fontWeight: 'normal'}}\n            leadingVisual={SearchIcon}\n            placeholder={inputPlaceholder}\n            onChange={e => setBypassListFilter(e.target.value)}\n            value={bypassListFilter}\n          />\n        </FormControl>\n      </Box>\n      <Box\n        className=\"color-bg-subtle color-border-default\"\n        sx={{\n          display: 'flex',\n          paddingLeft: 3,\n          paddingTop: 1,\n          paddingBottom: 1,\n          borderTopWidth: 1,\n          borderBottomWidth: 1,\n          borderLeftWidth: 0,\n          borderRightWidth: 0,\n          borderStyle: 'solid',\n        }}\n      >\n        <Text id=\"suggestionsHeading\" className=\"text-small\" sx={{fontWeight: 'bold', color: 'fg.muted'}}>\n          Suggestions\n        </Text>\n      </Box>\n    </Fragment>\n  )\n}\n\ntry{ BypassDialogHeader.displayName ||= 'BypassDialogHeader' } catch {}","import React from 'react'\n\nconst CurrentRepositoryContext = React.createContext({} as Repository)\n\nexport function CurrentRepositoryProvider({repository, children}: React.PropsWithChildren<{repository: Repository}>) {\n  return <CurrentRepositoryContext.Provider value={repository}> {children} </CurrentRepositoryContext.Provider>\n}\n\nexport function useCurrentRepository() {\n  return React.useContext(CurrentRepositoryContext)\n}\n\nexport interface Repository {\n  id: number\n  name: string\n  ownerLogin: string\n  defaultBranch: string\n  createdAt: string\n\n  /**\n   * Whether the user can push to this repository. It doesn't depend on the current ref.\n   */\n  currentUserCanPush: boolean\n  /**\n   * Indicates whether the repository is a fork.\n   */\n  isFork: boolean\n  /**\n   * Indicates whether the repository has files.\n   */\n  isEmpty: boolean\n  ownerAvatar: string\n  public: boolean\n  private: boolean\n  isOrgOwned: boolean\n}\n\nexport type RepositoryNWO = Pick<Repository, 'ownerLogin' | 'name'>\n\ntry{ CurrentRepositoryContext.displayName ||= 'CurrentRepositoryContext' } catch {}\ntry{ CurrentRepositoryProvider.displayName ||= 'CurrentRepositoryProvider' } catch {}","import {useKeyPress} from '@github-ui/use-key-press'\nimport {type OverlayProps, SelectPanel, type SelectPanelProps} from '@primer/react'\nimport type {ItemProps} from '@primer/react/lib-esm/deprecated/ActionList'\nimport type {ItemInput} from '@primer/react/lib-esm/deprecated/ActionList/List'\nimport type {RefObject} from 'react'\nimport type React from 'react'\nimport {useCallback, useEffect, useId, useMemo, useState} from 'react'\n\nimport {useItemPickersContext} from '../contexts/ItemPickersContext'\nimport {type ItemGroup, noMatchesItem, noResultsItem} from '../shared'\nimport {IDS} from '../constants/ids'\nimport {SELECTORS} from '../constants/selectors'\nimport {GlobalCommands, type CommandId} from '@github-ui/ui-commands'\nimport {useFeatureFlags} from '@github-ui/react-core/use-feature-flag'\n\nexport type SharedBulkActionsItemPickerProps = {\n  issuesToActOn: string[]\n  useQueryForAction: boolean\n  repositoryId?: string\n  query?: string\n  onCompleted?: (jobId?: string) => void\n  onError?: (error: Error) => void\n}\n\nexport type ItemPickerProps<T> = Pick<OverlayProps, 'height' | 'width'> & {\n  items: Array<T & {__isNew__?: boolean}>\n  initialSelectedItems: T[] | string[]\n  openHotkey?: string\n  placeholderText: string\n  selectionVariant: 'single' | 'multiple'\n  loading?: boolean\n  groups?: ItemGroup[]\n  filterItems: (filter: string) => void\n  renderAnchor: (props: React.HTMLAttributes<HTMLElement>) => JSX.Element\n  getItemKey: (item: T) => string\n  convertToItemProps: (item: T) => ExtendedItemProps<T>\n  onSelectionChange: (items: T[]) => void\n  onOpen?: () => void\n  onClose?: () => void\n  selectPanelRef?: RefObject<HTMLButtonElement>\n  enforceAtleastOneSelected?: boolean\n  insidePortal?: boolean\n  maxVisibleItems?: number\n  /**\n   * Whether to render the item picker as a nested select panel (true) versus a standalone select\n   * panel (false; default).\n   */\n  nested?: boolean\n  resultListAriaLabel?: string\n  title?: string | React.ReactElement\n  subtitle?: string | React.ReactElement\n  preventClose?: boolean\n  triggerOpen?: boolean\n  initialFilter?: string\n  customNoResultsItem?: ItemProps\n  customNoMatchItem?: T\n  footer?: string | React.ReactElement\n  keybindingCommandId?: CommandId\n}\n\nexport type ExtendedItemProps<T> = ItemProps & {source: T}\n\nexport function ItemPicker<T>({\n  items,\n  initialSelectedItems,\n  openHotkey,\n  placeholderText,\n  selectionVariant,\n  loading,\n  groups,\n  filterItems,\n  renderAnchor,\n  getItemKey,\n  convertToItemProps,\n  onSelectionChange,\n  onOpen,\n  onClose,\n  height = 'small',\n  width = 'small',\n  selectPanelRef,\n  enforceAtleastOneSelected,\n  insidePortal,\n  maxVisibleItems = 9,\n  nested = false,\n  resultListAriaLabel,\n  title,\n  subtitle,\n  preventClose,\n  triggerOpen,\n  initialFilter,\n  customNoResultsItem,\n  customNoMatchItem,\n  footer,\n  keybindingCommandId,\n}: ItemPickerProps<T>) {\n  const [open, setOpen] = useState(triggerOpen ?? false)\n  const [selected, setSelected] = useState<ItemInput[]>([])\n  const [filter, setFilter] = useState<string>(initialFilter ?? '')\n  const {updateOpenState, anyItemPickerOpen} = useItemPickersContext()\n  const id = useId()\n\n  // Update open state if controlled by consumer\n  useEffect(() => {\n    if (triggerOpen !== undefined) setOpen(triggerOpen)\n  }, [triggerOpen])\n  const {issues_react_ui_commands_migration} = useFeatureFlags()\n\n  const handleKeyDown = useCallback(() => {\n    if (anyItemPickerOpen() || open) {\n      return\n    }\n    setOpen(true)\n    if (onOpen) onOpen()\n  }, [anyItemPickerOpen, open, onOpen])\n\n  const onHotKeyPress = useCallback(\n    (e: KeyboardEvent) => {\n      if (anyItemPickerOpen() || open) {\n        return\n      }\n      // We don't want the filter to show the hotkey\n      e.preventDefault()\n      e.stopPropagation()\n      setOpen(true)\n      if (onOpen) onOpen()\n    },\n    [anyItemPickerOpen, open, onOpen],\n  )\n\n  useKeyPress(openHotkey ? [openHotkey] : [], onHotKeyPress, {\n    triggerWhenInputElementHasFocus: false,\n    triggerWhenPortalIsActive: insidePortal || false,\n  })\n\n  useEffect(() => {\n    updateOpenState(id, open)\n  }, [id, open, updateOpenState])\n\n  const map = useMemo(\n    () => new Map<string, ExtendedItemProps<T>>(),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [id, initialSelectedItems],\n  )\n\n  const toItemProps = useCallback(\n    (item: T, itemSelected: boolean): ExtendedItemProps<T> => {\n      const itemKey = getItemKey(item)\n      let itemProps = map.get(itemKey)\n      if (itemProps) {\n        return itemProps\n      }\n\n      itemProps = convertToItemProps(item)\n\n      itemProps.selected = itemSelected\n      const onAction = itemProps.onAction\n      itemProps.onAction = (props, event) => {\n        const i = map.get(itemKey)\n        if (!i) return\n        i.selected = !i.selected\n\n        // if using single select, clear selection of all other items\n        if (selectionVariant === 'single' && (item as ItemProps).id !== filter) {\n          for (const [, value] of map) {\n            if (value !== i) {\n              value.selected = false\n            }\n          }\n        }\n\n        if (onAction) {\n          onAction(props, event)\n        }\n      }\n\n      map.set(itemKey, itemProps)\n      return itemProps\n    },\n    [convertToItemProps, filter, getItemKey, map, selectionVariant],\n  )\n\n  const wrappedGetItemKey = useCallback(\n    (item: T | string) => (typeof item === 'string' ? item : getItemKey(item)),\n    [getItemKey],\n  )\n\n  const selectPanelItems = useMemo<ItemProps[]>(() => {\n    const itemProps = items.map(i => {\n      // If we have newly created items, we remove the __isNew__ flag from the item\n      // after selecting it, so that it can be deselected.\n      // We also remove the \"no match\" item since clicking on it adds it to the selected items,\n      // and we don't want to add that synthetic item to the mutation.\n      if (i.__isNew__) {\n        delete i.__isNew__\n        customNoMatchItem && map.delete(getItemKey(customNoMatchItem))\n        // We auto select newly created items\n        return toItemProps(i, true)\n      }\n      return toItemProps(\n        i,\n        initialSelectedItems.some(is => wrappedGetItemKey(is) === getItemKey(i)),\n      )\n    })\n\n    if (itemProps.length === 0) {\n      if (customNoMatchItem) return [toItemProps(customNoMatchItem, false)]\n\n      // Differentiate between no results and no matches\n      return filter ? [customNoMatchItem ?? noMatchesItem] : [customNoResultsItem ?? noResultsItem]\n    }\n\n    return itemProps\n  }, [\n    customNoMatchItem,\n    items,\n    map,\n    toItemProps,\n    initialSelectedItems,\n    wrappedGetItemKey,\n    getItemKey,\n    filter,\n    customNoResultsItem,\n  ])\n\n  useEffect(() => {\n    setSelected(selectPanelItems.filter(i => i.selected))\n  }, [selectPanelItems])\n\n  const selectPanelSelectedItems = useMemo<ItemInput | ItemInput[]>(() => {\n    if (selectionVariant === 'single') {\n      return selected[0]!\n    } else {\n      return selected\n    }\n  }, [selected, selectionVariant]) as ItemProps[]\n\n  const onSelectedChange = useCallback(\n    (param: ItemInput[] | ItemInput | undefined) => {\n      if (param === undefined) {\n        if (!enforceAtleastOneSelected) {\n          setSelected([])\n        }\n        return\n      }\n\n      const selectedItemInputs = Array.isArray(param) ? param : [param]\n      const newSelection = selectedItemInputs\n        .map(i => selectPanelItems.find(item => i.id === item.id))\n        .filter(i => i !== undefined) as Array<ExtendedItemProps<T>>\n\n      setSelected(newSelection)\n    },\n    [enforceAtleastOneSelected, selectPanelItems],\n  )\n\n  const onSpaceKeyPress = (event: KeyboardEvent) => {\n    if (open) {\n      const activeOption = document.querySelector(SELECTORS.activePickerOption(IDS.itemPickerRootId))\n\n      if (activeOption) {\n        const activeDataId = activeOption.getAttribute('data-id')\n        const item = [...map.values()].find(i => i.id === activeDataId)\n\n        if (item) {\n          event.preventDefault()\n          event.stopPropagation()\n          // Toggle the selected state of the item\n          item.selected = !item.selected\n          setSelected([...map.values()].filter(i => i.selected))\n        }\n      }\n    }\n  }\n\n  useKeyPress([' '], onSpaceKeyPress, {\n    triggerWhenInputElementHasFocus: true,\n    triggerWhenPortalIsActive: true,\n  })\n\n  const onOpenChange = useCallback(\n    (isOpen: boolean) => {\n      if (preventClose && !isOpen) {\n        return\n      }\n      setOpen(isOpen)\n\n      if (isOpen && onOpen) {\n        onOpen()\n        return\n      }\n\n      setFilter('')\n      if (onClose) onClose()\n      const selectedItems = [...map.values()].filter(i => i.selected).map(i => i.source)\n      const selectionChanged =\n        selectedItems.length !== initialSelectedItems.length ||\n        selectedItems.some(item => !initialSelectedItems.some(item2 => wrappedGetItemKey(item2) === getItemKey(item)))\n\n      if (selectionChanged) {\n        onSelectionChange(selectedItems)\n      }\n    },\n    [preventClose, onClose, map, initialSelectedItems, onOpen, wrappedGetItemKey, getItemKey, onSelectionChange],\n  )\n\n  useEffect(() => {\n    filterItems(filter)\n  }, [filter, filterItems])\n\n  let hasItems = selectPanelItems.length > 0\n  if (\n    selectPanelItems.length === 1 &&\n    (selectPanelItems[0]!.id === noMatchesItem.id || selectPanelItems[0]!.id === noResultsItem.id)\n  ) {\n    // Don't show groups if there are only placeholder items (which aren't grouped)\n    hasItems = false\n  }\n\n  // SelectPanel doesn't handle an empty groupMetadata prop properly\n  const groupMetadataProp = useMemo(\n    () => (groups && groups?.length > 1 && hasItems ? {groupMetadata: groups} : {}),\n    [groups, hasItems],\n  )\n\n  const overlayHeight = selectPanelItems.length <= maxVisibleItems ? 'auto' : height\n\n  const selectPanelProps = useMemo<SelectPanelProps>(\n    () => ({\n      renderAnchor,\n      placeholderText,\n      open,\n      onOpenChange,\n      loading,\n      items: selectPanelItems,\n      selected: selectPanelSelectedItems,\n      onSelectedChange,\n      filterValue: filter,\n      onFilterChange: setFilter,\n      showItemDividers: true,\n      overlayProps: {width, height: overlayHeight},\n      ...groupMetadataProp,\n      'aria-label': resultListAriaLabel,\n      'data-id': IDS.itemPickerRootId,\n      'data-testid': IDS.itemPickerTestId,\n      title,\n      subtitle,\n      footer,\n    }),\n    [\n      renderAnchor,\n      placeholderText,\n      open,\n      onOpenChange,\n      loading,\n      selectPanelItems,\n      selectPanelSelectedItems,\n      onSelectedChange,\n      filter,\n      width,\n      overlayHeight,\n      groupMetadataProp,\n      resultListAriaLabel,\n      title,\n      subtitle,\n      footer,\n    ],\n  )\n\n  return (\n    <>\n      {issues_react_ui_commands_migration && keybindingCommandId && (\n        <GlobalCommands commands={{[keybindingCommandId]: handleKeyDown}} />\n      )}\n      <SelectPanel anchorRef={nested ? undefined : selectPanelRef} {...selectPanelProps} />\n    </>\n  )\n}\n\ntry{ ItemPicker.displayName ||= 'ItemPicker' } catch {}","import {createContext, type ReactNode, useCallback, useContext, useMemo, useRef} from 'react'\n\ntype ItemPickerOpenStates = Readonly<Record<string, boolean>>\n\ntype ItemPickersContextType = {\n  // Method to update the open state of an itempicker\n  updateOpenState: (id: string, isOpen: boolean) => void\n  // Method to get the open state of an itempicker\n  anyItemPickerOpen: () => boolean\n}\n\ntype ItemPickersContextProviderType = {\n  children: ReactNode\n}\n\nconst ItemPickersContext = createContext<ItemPickersContextType>({\n  updateOpenState: () => undefined,\n  anyItemPickerOpen: () => false,\n})\n\nexport function ItemPickersContextProvider({children}: ItemPickersContextProviderType) {\n  const itemPickerOpenStates = useRef<ItemPickerOpenStates>({})\n\n  const updateOpenState = useCallback((id: string, isOpen: boolean) => {\n    const previousState = itemPickerOpenStates.current\n    if (previousState[id] === isOpen) return itemPickerOpenStates.current\n    itemPickerOpenStates.current = {...previousState, [id]: isOpen}\n    return itemPickerOpenStates.current\n  }, [])\n\n  const anyItemPickerOpen = useCallback(() => {\n    return Object.values(itemPickerOpenStates.current).some(s => s)\n  }, [itemPickerOpenStates])\n\n  const contextValue = useMemo(() => {\n    return {updateOpenState, anyItemPickerOpen}\n  }, [anyItemPickerOpen, updateOpenState])\n\n  return <ItemPickersContext.Provider value={contextValue}>{children}</ItemPickersContext.Provider>\n}\n\nexport function useItemPickersContext(): ItemPickersContextType {\n  const context = useContext(ItemPickersContext)\n\n  if (!context) {\n    throw new Error('useItemPickersContext must be used within a ItemPickersContextProvider.')\n  }\n\n  return context\n}\n\ntry{ ItemPickersContext.displayName ||= 'ItemPickersContext' } catch {}\ntry{ ItemPickersContextProvider.displayName ||= 'ItemPickersContextProvider' } catch {}","import {useCallback, useEffect, useMemo, useState} from 'react'\nimport {RepoIcon, RepoLockedIcon, TriangleDownIcon} from '@primer/octicons-react'\nimport {Truncate, type ButtonProps} from '@primer/react'\nimport {Button} from '@primer/react'\nimport {debounce} from '@github/mini-throttle'\nimport {ItemPicker} from '@github-ui/item-picker/ItemPicker'\n\n// A simple repository that only requires a `name` field but can contain additional\n// fields to enrich rendering\ninterface NamedRepository {\n  name: string\n  enabled?: boolean\n  private?: boolean\n}\n\n// Internal repo used to represent \"All repositories\"\ninterface AllRepo extends NamedRepository {\n  _all: true\n}\n\ninterface SharedProps {\n  selectAllOption: boolean\n  additionalButtonProps?: Partial<ButtonProps>\n  buttonText?: string\n}\n\nexport interface SingleSelectProps<T> extends SharedProps {\n  currentSelection: T | undefined\n  repositoryLoader: (q: string) => Promise<T[]>\n  onSelect: (repository: T | undefined) => void\n  selectionVariant: 'single'\n}\n\nexport interface MultiSelectProps<T> extends SharedProps {\n  currentSelection: T[] | undefined\n  repositoryLoader: (q: string) => Promise<T[]>\n  onSelect: (repository: T[] | undefined) => void\n  selectionVariant: 'multiple'\n  selectAllOption: false\n  additionalButtonProps?: Partial<ButtonProps>\n}\n\nexport function ReposSelector<T extends NamedRepository>({\n  currentSelection,\n  repositoryLoader,\n  onSelect,\n  selectionVariant,\n  selectAllOption,\n  additionalButtonProps,\n  buttonText: _buttonText = '',\n}: SingleSelectProps<T> | MultiSelectProps<T>) {\n  const [filterText, setFilterText] = useState('')\n  const [filteredRepos, setFilteredRepos] = useState<T[]>([])\n  const [isLoadingRepos, setIsLoadingRepos] = useState<boolean>(true)\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounceRepos = useCallback(\n    debounce(async (newFilter: string) => {\n      try {\n        const response = await repositoryLoader(newFilter)\n        setFilteredRepos(response)\n      } catch (e) {\n        // suppress repo loading errors\n      }\n      setIsLoadingRepos(false)\n    }, 200),\n    [repositoryLoader, setFilteredRepos, setIsLoadingRepos],\n  )\n\n  useEffect(() => {\n    setIsLoadingRepos(true)\n    debounceRepos(filterText)\n  }, [filterText, debounceRepos, setIsLoadingRepos])\n\n  const selectRepos = useCallback(\n    (repos: Array<T | AllRepo>) => {\n      if (selectionVariant === 'single') {\n        if (!repos[0] || (repos[0] as AllRepo)._all) {\n          onSelect(undefined)\n        } else {\n          onSelect(repos[0] as T)\n        }\n      } else {\n        onSelect(repos as T[])\n      }\n    },\n    [selectionVariant, onSelect],\n  )\n\n  const selected = useMemo(() => {\n    return selectionVariant === 'multiple' ? currentSelection || [] : currentSelection ? [currentSelection] : []\n  }, [selectionVariant, currentSelection])\n\n  const convertToItemProps = useCallback((repo: T | AllRepo) => {\n    const truncationCharLimit = 24\n    let truncatedRepoName = undefined\n\n    if (repo.name.length > truncationCharLimit) {\n      truncatedRepoName = `${repo.name.substring(0, truncationCharLimit)}...`\n    }\n\n    if ((repo as AllRepo)._all) {\n      return {\n        id: repo.name,\n        text: 'All repositories',\n        source: repo,\n        groupId: 'all',\n      }\n    }\n    return {\n      id: repo.name,\n      text: truncatedRepoName || repo.name,\n      source: repo,\n      appendOnly: false,\n      groupId: 'select',\n      disabled: repo.enabled === false,\n      leadingVisual: () => {\n        if (repo.private) {\n          return <RepoLockedIcon size={16} />\n        } else {\n          return <RepoIcon size={16} />\n        }\n      },\n    }\n  }, [])\n\n  const getItemKey = useCallback((repo: T | AllRepo) => repo.name, [])\n\n  const items = useMemo(() => {\n    const memoItems: Array<T | AllRepo> = []\n    memoItems.push(...filteredRepos)\n    const hiddenSelectedItems = selected.filter(item => memoItems.every(memoItem => memoItem.name !== item.name)) || []\n    memoItems.push(...hiddenSelectedItems)\n    if (selectAllOption) {\n      memoItems.push({name: '$all$', _all: true} as AllRepo)\n    }\n    return memoItems\n  }, [filteredRepos, selectAllOption, selected])\n\n  let buttonText = _buttonText\n  let buttonIcon = RepoIcon\n  if (!buttonText) {\n    if (selectionVariant === 'multiple') {\n      buttonText =\n        selected.length > 0 ? `${selected.length} repositor${selected.length > 1 ? 'ies' : 'y'}` : 'Select repositories'\n    } else {\n      if (selected.length > 0 && selected[0]) {\n        buttonText = selected[0].name\n        buttonIcon = selected[0].private ? RepoLockedIcon : RepoIcon\n      } else if (selectAllOption) {\n        buttonText = 'All repositories'\n      } else {\n        buttonText = 'Select a repository'\n      }\n    }\n  }\n\n  return (\n    <ItemPicker\n      renderAnchor={({'aria-labelledby': ariaLabelledBy, ...anchorProps}) => (\n        <Button\n          leadingVisual={buttonIcon}\n          trailingAction={TriangleDownIcon}\n          aria-labelledby={` ${ariaLabelledBy}`}\n          {...anchorProps}\n          {...additionalButtonProps}\n        >\n          <Truncate title={buttonText} maxWidth={195}>\n            {buttonText}\n          </Truncate>\n        </Button>\n      )}\n      placeholderText=\"Repos\"\n      items={items}\n      loading={isLoadingRepos}\n      groups={selectAllOption ? [{groupId: 'all'}, {groupId: 'select'}] : []}\n      selectionVariant={selectionVariant}\n      initialSelectedItems={selected}\n      onSelectionChange={selectRepos as (v: unknown[]) => void}\n      filterItems={setFilterText}\n      getItemKey={getItemKey}\n      convertToItemProps={convertToItemProps}\n    />\n  )\n}\n\nexport function simpleRepoLoader<T extends NamedRepository>(repos: T[]): (q: string) => Promise<T[]> {\n  return async (q: string) => {\n    const trimmedFilterText = q.trim().toLowerCase()\n\n    if (!trimmedFilterText) {\n      return repos\n    }\n\n    return repos.filter(\n      repo =>\n        repo.name.toLowerCase().includes(trimmedFilterText) || repo.name.toLowerCase().includes(trimmedFilterText),\n    )\n  }\n}\n\ntry{ ReposSelector.displayName ||= 'ReposSelector' } catch {}","import {debounce} from '@github/mini-throttle'\nimport React, {useCallback, useEffect, useMemo, useRef, useState, useSyncExternalStore} from 'react'\n\nexport const enum ScreenSize {\n  small = 1,\n  medium = 544,\n  large = 768,\n  xlarge = 1012,\n  xxlarge = 1280,\n  xxxlarge = 1350,\n  xxxxlarge = 1440,\n}\n\nconst screenBreakpoints = [\n  ScreenSize.xxxxlarge,\n  ScreenSize.xxxlarge,\n  ScreenSize.xxlarge,\n  ScreenSize.xlarge,\n  ScreenSize.large,\n  ScreenSize.medium,\n  ScreenSize.small,\n]\n\ninterface ScreenContextData {\n  /**\n   * Specifies the size of the current window\n   */\n  screenSize: ScreenSize\n}\n\nconst ScreenContext = React.createContext<ScreenContextData>({screenSize: ScreenSize.small})\n\nexport function useScreenSize() {\n  return React.useContext(ScreenContext)\n}\n\ninterface Props {\n  /**\n   * @property {ScreenSize} [initialValue=ScreenSize.small] Initial value is useful to test react components that rely on ScreenContext.\n   */\n  initialValue?: ScreenSize\n}\n\nexport function ScreenSizeProvider({children, initialValue}: React.PropsWithChildren<Props>) {\n  const initial = useSyncExternalStore(\n    () => () => {},\n    () => initialValue ?? getCurrentSize(window.innerWidth),\n    () => initialValue ?? ScreenSize.small,\n  )\n  const currentSizeRef = useRef(initial)\n  const [screenSize, setScreenSize] = useState(initial)\n\n  const onResize = useCallback(() => {\n    const updatedSize = getCurrentSize(window.innerWidth)\n    if (currentSizeRef.current !== updatedSize) {\n      currentSizeRef.current = updatedSize\n      setScreenSize(updatedSize)\n    }\n  }, [])\n\n  useEffect(() => {\n    const resizeObserver = new ResizeObserver(debounce(onResize))\n    resizeObserver.observe(document.documentElement)\n\n    return () => resizeObserver.disconnect()\n  }, [onResize])\n\n  const contextValue = useMemo(() => {\n    return {screenSize}\n  }, [screenSize])\n\n  return <ScreenContext.Provider value={contextValue}>{children}</ScreenContext.Provider>\n}\n\nexport function getCurrentSize(elementWidth: number) {\n  for (const breakpoint of screenBreakpoints) {\n    if (elementWidth >= breakpoint) {\n      return breakpoint\n    }\n  }\n  return ScreenSize.small\n}\n\ntry{ ScreenContext.displayName ||= 'ScreenContext' } catch {}\ntry{ ScreenSizeProvider.displayName ||= 'ScreenSizeProvider' } catch {}","import React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar props = ['bottom', 'height', 'left', 'right', 'top', 'width'];\n\nvar rectChanged = function rectChanged(a, b) {\n  if (a === void 0) {\n    a = {};\n  }\n\n  if (b === void 0) {\n    b = {};\n  }\n\n  return props.some(function (prop) {\n    return a[prop] !== b[prop];\n  });\n};\n\nvar observedNodes = /*#__PURE__*/new Map();\nvar rafId;\n\nvar run = function run() {\n  var changedStates = [];\n  observedNodes.forEach(function (state, node) {\n    var newRect = node.getBoundingClientRect();\n\n    if (rectChanged(newRect, state.rect)) {\n      state.rect = newRect;\n      changedStates.push(state);\n    }\n  });\n  changedStates.forEach(function (state) {\n    state.callbacks.forEach(function (cb) {\n      return cb(state.rect);\n    });\n  });\n  rafId = window.requestAnimationFrame(run);\n};\n\nfunction observeRect(node, cb) {\n  return {\n    observe: function observe() {\n      var wasEmpty = observedNodes.size === 0;\n\n      if (observedNodes.has(node)) {\n        observedNodes.get(node).callbacks.push(cb);\n      } else {\n        observedNodes.set(node, {\n          rect: undefined,\n          hasRectChanged: false,\n          callbacks: [cb]\n        });\n      }\n\n      if (wasEmpty) run();\n    },\n    unobserve: function unobserve() {\n      var state = observedNodes.get(node);\n\n      if (state) {\n        // Remove the callback\n        var index = state.callbacks.indexOf(cb);\n        if (index >= 0) state.callbacks.splice(index, 1); // Remove the node reference\n\n        if (!state.callbacks.length) observedNodes[\"delete\"](node); // Stop the loop\n\n        if (!observedNodes.size) cancelAnimationFrame(rafId);\n      }\n    }\n  };\n}\n\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\nfunction useRect(nodeRef, initialRect) {\n  if (initialRect === void 0) {\n    initialRect = {\n      width: 0,\n      height: 0\n    };\n  }\n\n  var _React$useState = React.useState(nodeRef.current),\n      element = _React$useState[0],\n      setElement = _React$useState[1];\n\n  var _React$useReducer = React.useReducer(rectReducer, initialRect),\n      rect = _React$useReducer[0],\n      dispatch = _React$useReducer[1];\n\n  var initialRectSet = React.useRef(false);\n  useIsomorphicLayoutEffect(function () {\n    if (nodeRef.current !== element) {\n      setElement(nodeRef.current);\n    }\n  });\n  useIsomorphicLayoutEffect(function () {\n    if (element && !initialRectSet.current) {\n      initialRectSet.current = true;\n\n      var _rect = element.getBoundingClientRect();\n\n      dispatch({\n        rect: _rect\n      });\n    }\n  }, [element]);\n  React.useEffect(function () {\n    if (!element) {\n      return;\n    }\n\n    var observer = observeRect(element, function (rect) {\n      dispatch({\n        rect: rect\n      });\n    });\n    observer.observe();\n    return function () {\n      observer.unobserve();\n    };\n  }, [element]);\n  return rect;\n}\n\nfunction rectReducer(state, action) {\n  var rect = action.rect;\n\n  if (state.height !== rect.height || state.width !== rect.width) {\n    return rect;\n  }\n\n  return state;\n}\n\nvar defaultEstimateSize = function defaultEstimateSize() {\n  return 50;\n};\n\nvar defaultKeyExtractor = function defaultKeyExtractor(index) {\n  return index;\n};\n\nvar defaultMeasureSize = function defaultMeasureSize(el, horizontal) {\n  var key = horizontal ? 'offsetWidth' : 'offsetHeight';\n  return el[key];\n};\n\nvar defaultRangeExtractor = function defaultRangeExtractor(range) {\n  var start = Math.max(range.start - range.overscan, 0);\n  var end = Math.min(range.end + range.overscan, range.size - 1);\n  var arr = [];\n\n  for (var i = start; i <= end; i++) {\n    arr.push(i);\n  }\n\n  return arr;\n};\nfunction useVirtual(_ref) {\n  var _measurements;\n\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 0 : _ref$size,\n      _ref$estimateSize = _ref.estimateSize,\n      estimateSize = _ref$estimateSize === void 0 ? defaultEstimateSize : _ref$estimateSize,\n      _ref$overscan = _ref.overscan,\n      overscan = _ref$overscan === void 0 ? 1 : _ref$overscan,\n      _ref$paddingStart = _ref.paddingStart,\n      paddingStart = _ref$paddingStart === void 0 ? 0 : _ref$paddingStart,\n      _ref$paddingEnd = _ref.paddingEnd,\n      paddingEnd = _ref$paddingEnd === void 0 ? 0 : _ref$paddingEnd,\n      parentRef = _ref.parentRef,\n      horizontal = _ref.horizontal,\n      scrollToFn = _ref.scrollToFn,\n      useObserver = _ref.useObserver,\n      initialRect = _ref.initialRect,\n      onScrollElement = _ref.onScrollElement,\n      scrollOffsetFn = _ref.scrollOffsetFn,\n      _ref$keyExtractor = _ref.keyExtractor,\n      keyExtractor = _ref$keyExtractor === void 0 ? defaultKeyExtractor : _ref$keyExtractor,\n      _ref$measureSize = _ref.measureSize,\n      measureSize = _ref$measureSize === void 0 ? defaultMeasureSize : _ref$measureSize,\n      _ref$rangeExtractor = _ref.rangeExtractor,\n      rangeExtractor = _ref$rangeExtractor === void 0 ? defaultRangeExtractor : _ref$rangeExtractor;\n  var sizeKey = horizontal ? 'width' : 'height';\n  var scrollKey = horizontal ? 'scrollLeft' : 'scrollTop';\n  var latestRef = React.useRef({\n    scrollOffset: 0,\n    measurements: []\n  });\n\n  var _React$useState = React.useState(0),\n      scrollOffset = _React$useState[0],\n      setScrollOffset = _React$useState[1];\n\n  latestRef.current.scrollOffset = scrollOffset;\n  var useMeasureParent = useObserver || useRect;\n\n  var _useMeasureParent = useMeasureParent(parentRef, initialRect),\n      outerSize = _useMeasureParent[sizeKey];\n\n  latestRef.current.outerSize = outerSize;\n  var defaultScrollToFn = React.useCallback(function (offset) {\n    if (parentRef.current) {\n      parentRef.current[scrollKey] = offset;\n    }\n  }, [parentRef, scrollKey]);\n  var resolvedScrollToFn = scrollToFn || defaultScrollToFn;\n  scrollToFn = React.useCallback(function (offset) {\n    resolvedScrollToFn(offset, defaultScrollToFn);\n  }, [defaultScrollToFn, resolvedScrollToFn]);\n\n  var _React$useState2 = React.useState({}),\n      measuredCache = _React$useState2[0],\n      setMeasuredCache = _React$useState2[1];\n\n  var measure = React.useCallback(function () {\n    return setMeasuredCache({});\n  }, []);\n  var pendingMeasuredCacheIndexesRef = React.useRef([]);\n  var measurements = React.useMemo(function () {\n    var min = pendingMeasuredCacheIndexesRef.current.length > 0 ? Math.min.apply(Math, pendingMeasuredCacheIndexesRef.current) : 0;\n    pendingMeasuredCacheIndexesRef.current = [];\n    var measurements = latestRef.current.measurements.slice(0, min);\n\n    for (var i = min; i < size; i++) {\n      var key = keyExtractor(i);\n      var measuredSize = measuredCache[key];\n\n      var _start = measurements[i - 1] ? measurements[i - 1].end : paddingStart;\n\n      var _size = typeof measuredSize === 'number' ? measuredSize : estimateSize(i);\n\n      var _end = _start + _size;\n\n      measurements[i] = {\n        index: i,\n        start: _start,\n        size: _size,\n        end: _end,\n        key: key\n      };\n    }\n\n    return measurements;\n  }, [estimateSize, measuredCache, paddingStart, size, keyExtractor]);\n  var totalSize = (((_measurements = measurements[size - 1]) == null ? void 0 : _measurements.end) || paddingStart) + paddingEnd;\n  latestRef.current.measurements = measurements;\n  latestRef.current.totalSize = totalSize;\n  var element = onScrollElement ? onScrollElement.current : parentRef.current;\n  var scrollOffsetFnRef = React.useRef(scrollOffsetFn);\n  scrollOffsetFnRef.current = scrollOffsetFn;\n  useIsomorphicLayoutEffect(function () {\n    if (!element) {\n      setScrollOffset(0);\n      return;\n    }\n\n    var onScroll = function onScroll(event) {\n      var offset = scrollOffsetFnRef.current ? scrollOffsetFnRef.current(event) : element[scrollKey];\n      setScrollOffset(offset);\n    };\n\n    onScroll();\n    element.addEventListener('scroll', onScroll, {\n      capture: false,\n      passive: true\n    });\n    return function () {\n      element.removeEventListener('scroll', onScroll);\n    };\n  }, [element, scrollKey]);\n\n  var _calculateRange = calculateRange(latestRef.current),\n      start = _calculateRange.start,\n      end = _calculateRange.end;\n\n  var indexes = React.useMemo(function () {\n    return rangeExtractor({\n      start: start,\n      end: end,\n      overscan: overscan,\n      size: measurements.length\n    });\n  }, [start, end, overscan, measurements.length, rangeExtractor]);\n  var measureSizeRef = React.useRef(measureSize);\n  measureSizeRef.current = measureSize;\n  var virtualItems = React.useMemo(function () {\n    var virtualItems = [];\n\n    var _loop = function _loop(k, len) {\n      var i = indexes[k];\n      var measurement = measurements[i];\n\n      var item = _extends(_extends({}, measurement), {}, {\n        measureRef: function measureRef(el) {\n          if (el) {\n            var measuredSize = measureSizeRef.current(el, horizontal);\n\n            if (measuredSize !== item.size) {\n              var _scrollOffset = latestRef.current.scrollOffset;\n\n              if (item.start < _scrollOffset) {\n                defaultScrollToFn(_scrollOffset + (measuredSize - item.size));\n              }\n\n              pendingMeasuredCacheIndexesRef.current.push(i);\n              setMeasuredCache(function (old) {\n                var _extends2;\n\n                return _extends(_extends({}, old), {}, (_extends2 = {}, _extends2[item.key] = measuredSize, _extends2));\n              });\n            }\n          }\n        }\n      });\n\n      virtualItems.push(item);\n    };\n\n    for (var k = 0, len = indexes.length; k < len; k++) {\n      _loop(k);\n    }\n\n    return virtualItems;\n  }, [indexes, defaultScrollToFn, horizontal, measurements]);\n  var mountedRef = React.useRef(false);\n  useIsomorphicLayoutEffect(function () {\n    if (mountedRef.current) {\n      setMeasuredCache({});\n    }\n\n    mountedRef.current = true;\n  }, [estimateSize]);\n  var scrollToOffset = React.useCallback(function (toOffset, _temp) {\n    var _ref2 = _temp === void 0 ? {} : _temp,\n        _ref2$align = _ref2.align,\n        align = _ref2$align === void 0 ? 'start' : _ref2$align;\n\n    var _latestRef$current = latestRef.current,\n        scrollOffset = _latestRef$current.scrollOffset,\n        outerSize = _latestRef$current.outerSize;\n\n    if (align === 'auto') {\n      if (toOffset <= scrollOffset) {\n        align = 'start';\n      } else if (toOffset >= scrollOffset + outerSize) {\n        align = 'end';\n      } else {\n        align = 'start';\n      }\n    }\n\n    if (align === 'start') {\n      scrollToFn(toOffset);\n    } else if (align === 'end') {\n      scrollToFn(toOffset - outerSize);\n    } else if (align === 'center') {\n      scrollToFn(toOffset - outerSize / 2);\n    }\n  }, [scrollToFn]);\n  var tryScrollToIndex = React.useCallback(function (index, _temp2) {\n    var _ref3 = _temp2 === void 0 ? {} : _temp2,\n        _ref3$align = _ref3.align,\n        align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n        rest = _objectWithoutPropertiesLoose(_ref3, [\"align\"]);\n\n    var _latestRef$current2 = latestRef.current,\n        measurements = _latestRef$current2.measurements,\n        scrollOffset = _latestRef$current2.scrollOffset,\n        outerSize = _latestRef$current2.outerSize;\n    var measurement = measurements[Math.max(0, Math.min(index, size - 1))];\n\n    if (!measurement) {\n      return;\n    }\n\n    if (align === 'auto') {\n      if (measurement.end >= scrollOffset + outerSize) {\n        align = 'end';\n      } else if (measurement.start <= scrollOffset) {\n        align = 'start';\n      } else {\n        return;\n      }\n    }\n\n    var toOffset = align === 'center' ? measurement.start + measurement.size / 2 : align === 'end' ? measurement.end : measurement.start;\n    scrollToOffset(toOffset, _extends({\n      align: align\n    }, rest));\n  }, [scrollToOffset, size]);\n  var scrollToIndex = React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // We do a double request here because of\n    // dynamic sizes which can cause offset shift\n    // and end up in the wrong spot. Unfortunately,\n    // we can't know about those dynamic sizes until\n    // we try and render them. So double down!\n    tryScrollToIndex.apply(void 0, args);\n    requestAnimationFrame(function () {\n      tryScrollToIndex.apply(void 0, args);\n    });\n  }, [tryScrollToIndex]);\n  return {\n    virtualItems: virtualItems,\n    totalSize: totalSize,\n    scrollToOffset: scrollToOffset,\n    scrollToIndex: scrollToIndex,\n    measure: measure\n  };\n}\n\nvar findNearestBinarySearch = function findNearestBinarySearch(low, high, getCurrentValue, value) {\n  while (low <= high) {\n    var middle = (low + high) / 2 | 0;\n    var currentValue = getCurrentValue(middle);\n\n    if (currentValue < value) {\n      low = middle + 1;\n    } else if (currentValue > value) {\n      high = middle - 1;\n    } else {\n      return middle;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nfunction calculateRange(_ref4) {\n  var measurements = _ref4.measurements,\n      outerSize = _ref4.outerSize,\n      scrollOffset = _ref4.scrollOffset;\n  var size = measurements.length - 1;\n\n  var getOffset = function getOffset(index) {\n    return measurements[index].start;\n  };\n\n  var start = findNearestBinarySearch(0, size, getOffset, scrollOffset);\n  var end = start;\n\n  while (end < size && measurements[end].end < scrollOffset + outerSize) {\n    end++;\n  }\n\n  return {\n    start: start,\n    end: end\n  };\n}\n\nexport { defaultRangeExtractor, useVirtual };\n//# sourceMappingURL=react-virtual.mjs.map\n"],"names":["BranchName","a","withConfig","displayName","componentId","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","LinkButton","forwardRef","children","as","Component","sx","props","forwardedRef","ref","ButtonGroup","div","CheckboxGroup","disabled","onChange","rest","formControlComponentChildren","toArray","filter","child","type","map","formControlComponent","flat","checkedCheckboxes","checkbox","checked","defaultChecked","value","Boolean","selectedCheckboxValues","setSelectedCheckboxValues","updateSelectedCheckboxes","currentTarget","current","selectedValue","Provider","CheckboxGroup$1","Caption","Label","Validation","Pagehead","Timeline","clipSidebar","TimelineItem","attrs","className","condensed","TimelineBadge","position","zIndex","display","flexShrink","borderRadius","borderWidth","borderStyle","borderColor","overflow","color","bg","width","height","mr","ml","alignItems","justifyContent","TimelineBody","TimelineBreak","Timeline$1","Item","Badge","Body","Break","ActorBypassMode","OrgAdminBypassMode","alreadyAdded","actorId","actorType","enabledBypassActors","some","matchingActorId","matchingActorType","getEnabledBypassActor","find","request","url","method","error","body","response","verifiedFetchJSON","ok","json","getBypassSuggestions","query","encodeURIComponent","ERRORS","couldNotUpdateAssignees","couldNotSearchAssignees","couldNotUpdateLabels","couldNotSearchLabels","couldNotUpdateMilestone","couldNotSearchMilestones","couldNotUpdateIssueType","couldNotSearchRepositories","couldNotSearchPullRequests","couldNotSearchProjects","couldNotSearchBranches","noMatches","noResults","couldNotCreateBranch","couldNotCreateLabel","IDS","itemPickerRootId","itemPickerTestId","SELECTORS","activePickerOption","rootId","noMatchesItem","leadingVisual","CircleSlashIcon","text","selected","undefined","key","id","noResultsItem","maybeIssueUrl","URL","_urlError","RegExp","test","getRepositorySearchQuery","queryString","organization","excludeRepo","orgIndexSplit","indexOf","split","orgSearchName","repoSearchName","getIssueSearchQueries","owner","repoNameWithOwner","ownerPart","trim","repoPart","queryPart","queryIsUrl","inPart","isNaN","Number","sharedQuery","commenters","mentions","assignee","author","open","resource","encodeURI","mapRefType","startsWith","qualifyRef","refType","unqualifyRef","unqualifiedRef","join","useIsStafftools","useAppPayload","is_stafftools","metadata","App","StafftoolsThemeWrapper","InnerApp","AnalyticsProvider","appName","category","ScreenSizeProvider","ThemeProvider","colorMode","Blankslate","heading","Box","textAlign","PrimerBlankslate","Heading","Description","DEFAULT_BRANCH_PATTERN","INCLUDE_ALL_PATTERN","RulesetEnforcement","RuleModalState","BorderBox","name","rows","showHeader","renderCreateButton","renderRow","renderBlankslate","headerClassName","condensedSx","py","px","creatingModalSx","padding","border","showBlankslate","every","_modalState","CREATING","h2","ul","row","_id","useRelativeNavigation","pathname","search","useLocation","params","useRef","URLSearchParams","reactRouterNavigate","useNavigate","navigate","useCallback","pathPartial","_search","clearExistingParams","replace","delete","set","reactRouterResolvePath","toString","resolvePath","BranchSelector","gitRef","repo","branchListCacheKey","setRefType","useState","RefSelector","currentCommitish","defaultBranch","ownerLogin","canCreate","cacheKey","selectedRefType","onSelectItem","newRef","onRefTypeChanged","newRefType","types","hideShowAll","customFooterItemProps","onClick","Subhead","description","alphaOrBeta","renderAction","h1","variant","p","PLURAL_RULESET_TARGETS","branch","tag","push","member_privilege","PLURAL_TARGET_OBJECT_TYPES","repository","EXAMPLE_CONDITION_TARGET_PATTERNS","ref_name","repository_name","TARGET_OBJECT_BY_TYPE","repository_id","repository_property","organization_name","organization_id","TARGET_OBJECT_TYPES","PENDING_OID","INHERITED_SOURCE_TYPE_ORDER_MAP","Enterprise","Organization","Upstream","Repository","pluralize","count","singular","pluralStringOrLookup","showCount","plural","capitalize","toUpperCase","slice","humanize","replaceAll","enforcementLabelText","enforcementLabel","Enabled","Evaluate","Disabled","EnforcementIcon","upsellInfo","hideText","enforcement","icon","rulesets","featureEnabled","enterpriseRulesets","Octicon","PlayIcon","marginRight","aria-label","MeterIcon","SkipIcon","NoEntryIcon","backgroundColor","paddingLeft","paddingRight","paddingY","Text","fontSize","fontWeight","downloadRuleset","rulesetName","fetchedJson","keys","jsonString","JSON","stringify","blob","Blob","fileName","nav","window","navigator","msSaveOrOpenBlob","downloadLink","document","createElement","href","createObjectURL","download","click","revokeObjectURL","DangerConfirmationDialog","isOpen","title","buttonText","onDismiss","onConfirm","Dialog","Header","span","mt","Button","RulesetActionMenu","ruleset","rulesetsUrl","isRestored","insightsEnabled","showDeleteAction","readOnly","rulesHistory","rulesImportExport","enterpriseEnabled","setFlashAlert","setMenuOpen","isStafftools","viewHistory","ActionList","LinkItem","Link","to","LeadingVisual","HistoryIcon","size","TrailingVisual","InsightsLink","target","message","textDecoration","whiteSpace","DownloadIcon","DeleteAction","deletePath","redirectPath","source","GraphIcon","IconButton","PulseIcon","reloadDocument","showDeleteDialog","setShowDeleteDialog","deleteRuleset","sudo","res","verifiedFetch","onSelect","preventDefault","TrashIcon","dataProcessor","data","propertyName","preview","fromEntries","item","rulesetId","processRulesets","isCorrectType","processFn","matches","reduce","acc","useTargetCount","sourceType","batchSize","rulesAsyncPreview","useFeatureFlag","rulesetPreviewCounts","setRulesetPreviewCount","Array","isArray","rulesetPreviewSamples","setRulesetPreviewSamples","rulesetPreviewErrors","setRulesetPreviewErrors","useEffect","fetchAllInBatches","items","itemsPerGroup","i","batchIds","cancelled","result","ruleset_ids","prev","fetchAllSingleBatch","rulesetsToFetch","fetchOrgLevelPreviews","stafftoolsOrgRulesetsTargetCountPath","orgRulesetsTargetCountPath","propertyRulesets","nonPropertyRulesets","partition","condition","positive","negative","conditions","fetchRepoLevelPreviews","stafftoolsRepoRulesetsTargetCountPath","repoRulesetsTargetCountPath","RulesetListHelper","rulesetTargetCount","menuOpen","Subtext","targetCount","MissingConditionAlert","ActionMenu","onOpenChange","Anchor","KebabHorizontalIcon","Overlay","RulesetList","rulesetListHelper","li","targetString","ruleString","rules","missingConditionTargets","firstMissing","AlertIcon","em","ButtonOrLinkButton","ComboButton","actions","ariaLabel","buttonGroupRef","isButtonGroupMenuOpen","setButtonGroupMenuOpen","aria-expanded","TriangleDownIcon","anchorRef","action","NewRulesetButton","defaultEnforcement","supportedTargets","pushRulesetsEnabled","memberPrivilegeRulesetsEnabled","includes","jsonUploadUtil","useJsonUpload","isUploading","setIsUploading","inputRef","handleUploadIntent","event","handleUpload","files","file","parse","trailingAction","Divider","input","hidden","accept","importedRuleset","navigationResult","errors","FlashUpsellBanner","askAdmin","ctaPath","sendClickAnalyticsEvent","useClickAnalytics","Flash","UpsellBannerText","button","label","linkText","concat","UpsellBanner","headingText","withBorder","showNewRulesetButton","cta","infoVariant","supportedRulesetTargets","upsellBannerProps","path","GitBranchIcon","mb","InfoVariants","visible","documentationHref","inline","list","predicate","notMatches","partitionMap","entries","sortSourceTypes","b","Infinity","isRulesetInherited","toLowerCase","OverviewPage","matchingRulesets","editableRulesets","useRoutePayload","flashAlert","flashRef","focus","rulesetsBySource","inheritedSourceTypes","sort","hasFilteredRulesets","DismissibleFlashOrToast","my","Fragment","ownedByName","toLocaleLowerCase","mapRules","localRuleId","rule","_enabled","_dirty","CLOSED","findRuleIndex","findIndex","isFinite","addRuleFactory","ruleSchema","defaultParameters","parameterSchema","fields","field","default_value","newRule","ruleType","parameters","metadataPatternSchema","operator","supportedOperators","state","updateRuleParametersFactory","index","updatedRule","updateRuleModalStateFactory","newModalState","toggleRuleFactory","ruleEnabled","toggledRule","max_ref_updates","stateModified","mapBypassActors","bypassActors","localConditionId","bypassActor","findBypassActorIndex","addBypassActorFactory","bypassMode","updatedBypassActor","removeBypassActorFactory","updateBypassActorFactory","mapConditions","addOrUpdateConditionFactory","updatedCondition","removeConditionFactory","existing","useValidateRulesetNameUnique","validate","baseValidation","baseHookResult","useAsyncValidation","baseValidationUrl","header","reset","useRuleset","initialRuleset","initialRuleSchemas","setRuleset","setConditions","orgAdminBypassMode","setOrgAdminBypassMode","deployKeyBypass","setDeployKeyBypass","setBypassActors","setRulesetName","rulesetNameError","setRulesetNameError","rulesetEnforcement","setRulesetEnforcement","ruleSchemas","setRuleSchemas","setRules","debounceValidateRulesetNameRef","abortValidateRulesetNameRef","rulesetNameUniqueValidator","useCurrentRepository","dirtyRules","useMemo","dirtyConditions","dirtyBypassActors","validateRulesetNameReset","cancel","abort","validateRulesetName","skipDebounce","AbortController","valid","signal","debounce","validateForm","rulesetTarget","rulesetMatches","dirtyRulesetName","dirtyOrgAdminBypassMode","dirtyDeployKeyBypass","dirtyEnforcement","initializeRuleset","payload","addRule","schema","existingRule","updateRuleParameters","setRuleModalState","removeRule","restoreRule","addOrUpdateCondition","removeCondition","renameRuleset","addBypassActor","ALWAYS","OrgBypassAny","OrgBypassPRsOnly","removeBypassActor","NoOrgBypass","updateBypassActor","ValidationError","Error","constructor","detailed_errors","details","status","getRuleset","getRepoSuggestionsForOrg","excludePublicRepos","getOrgSuggestionsForEnterprise","getAvailableProperties","getWorkflowSuggestions","repoName","getWorkflowRepoSuggestions","repoQuery","getShaForRef","validateWorkflowSha","shaAndRepo","enforcementOptions","enforcementStatusLabel","GeneralPanel","generalErrors","nameRef","showOrganizationDialog","setShowOrganizationDialog","showEnforcementMenu","setShowEnforcementMenu","nameError","setNameError","evaluateUpsellVisible","previousEnforcement","setPreviousEnforcement","supportedEnforcementOptions","option","selectedEnforcement","data-testid","ReadOnlyRow","FormControl","TextInput","placeholder","aria-invalid","aria-live","selectionVariant","Group","GroupHeading","gridTemplateColumns","isAllCondition","targetType","include","exclude","getDefaultTargetByObject","objectType","options","supportedConditionTargetObjects","RefIcon","TagIcon","RefPill","param","displayAsLabel","showIcon","showQualifiedRef","maxWidth","Truncate","overflowX","textOverflow","TargetsTable","renderTitle","onRemove","targets","headerRowText","blankslate","flexDirection","InfoIcon","TargetList","Condition","prefix","TRUNCATION_SIZE_MAP","ScreenSize","small","medium","large","xlarge","xxlarge","xxxlarge","xxxxlarge","getMaxWidth","screenSize","useScreenSize","PlusCircleIcon","XCircleIcon","d","useValidateConditionTarget","conditionTarget","AddTargetDialog","onAdd","onClose","includeOrExclude","fnmatchHelpUrl","examplePatterns","subtitleObject","subtitle","subject","createText","conditionTargetError","setConditionTargetError","conditionTargetValidator","onSave","trimmedParam","isValid","setTimeout","footerButtons","content","buttonType","flex","onKeyPress","onBlur","showError","IncludeExcludeTarget","panelTitle","updateParameters","allLabel","selectedActionType","setSelectedActionType","addTargetVisible","setAddTargetVisible","actionOptions","actionGroup","openDialog","currentAction","onActionSelect","actionType","addParameter","allPatterns","mapAliasToDisplay","v","pattern","excludeTargetPrefix","noGroupActions","actionsByGroup","actionList","get","Map","h3","from","group","pattern_type","Checkbox","protected","PanelHeader","pb","RepositoryIdTarget","fetchedMetadata","setFetchedMetadata","selectedRepos","reposById","repositories","nodeId","repository_ids","queryForRepos","changeRepositories","newRepos","removeRepository","repoNodeId","ReposSelector","currentSelection","repositoryLoader","selectAllOption","newSelection","_","LANGUAGE_NAMES","LANGUAGES","AddPropertyDialog","properties","filterText","setFilterText","filteredProperties","setFilteredProperties","selectedProperty","setSelectedProperty","showMissing","setShowMissing","selectedValues","setSelectedValues","filterValueText","setFilterValueText","selectedValueTokens","updateSelectedProperty","newProperty","filterProperties","newFilter","removeValue","tokenId","saveProperty","propertyValues","valueType","valueInputRef","filterValues","selectedPropertyAllowedValues","allowedValues","propertyToItemPickerItem","truncatedPropertyName","property","substring","descriptionVariant","showDivider","propertyIcons","valueBoxKeyHandler","ItemPicker","renderAnchor","anchorProps","alignContent","placeholderText","enforceAtleastOneSelected","initialSelectedItems","maxVisibleItems","onSelectionChange","filterItems","getItemKey","convertToItemProps","PropertyValueControl","charAt","note","NoteIcon","eye","EyeIcon","RepoForkedIcon","code","CodeIcon","dropdownProps","TextInputWithTokens","onKeyDown","tokens","onTokenRemove","ValueItemPicker","loading","truncatedValue","INCLUDE_EXCLUDE_VALUES","RepositoryPropertyTarget","addPropertyVisible","setAddPropertyVisible","setProperties","arePropertiesFetched","setPropertiesFetched","showLanguageWarning","addProperty","values","isSameProperty","property_values","removeProperty","toTargetItem","existingProperties","ep","PUSH_RULESET_TARGET_INFO","RepositoryTarget","RulesetFormErrorFlash","errorId","errorRef","gap","tabIndex","removeNonUIControlErrors","ui_control","useRegisterErrors","filters","useDefaultFilters","args","func","unregistered","registered","reg","unreg","filterType","passing","failing","pass","fail","f","repositoryConditionsFilter","unexpectedType","RepositoryConditionsError","parsedErrors","PushRulePublicTargetingBanner","buildQueryForProperty","negationPrefix","valueString","quoteIfNeeded","propPrefix","OrgSelector","baseAvatarUrl","selectedOrgs","selectOrg","removeOrg","orgLoader","suggestions","setSuggestions","suggestionItems","s","GitHubAvatar","alt","src","onAction","orgToRemove","matchingNodeId","isLoading","setIsLoading","setOpen","setFilter","onOpen","debounceOrgSuggestions","SelectPanel","ariaLabelledBy","OrganizationIcon","trailingVisual","aria-labelledby","aria-haspopup","onSelectedChange","filterValue","onFilterChange","overlayProps","OrganizationIdTarget","orgsById","organizations","org","organization_ids","queryForOrgs","changeOrgs","newOrgs","o","orgNodeId","OrganizationTarget","supportsEmuTargeting","includeEmuAccounts","include_emu_accounts","toggleIncludeEmuAccounts","REPO_TARGET_OPTIONS","beta","RepositoryTargetTypeSelector","excludeConditions","currentRepoCondition","setRepoCondition","selectedTargetType","TargetTypeSelector","selectOption","val","ORG_TARGET_OPTIONS","OrganizationTargetTypeSelector","currentOrgCondition","setOrgCondition","selectedOption","emptyParametersByType","AffectedTargetsSummary","rulesetPreviewCount","rulesetError","sourceName","targetObjectType","propertyConditions","c","repoQueryLink","buildRepoQueryUrl","orgName","orgRepositoriesPath","TargetsPanel","conditionErrors","repositoryConditionRef","refConditionRef","isEditing","emuTargetingEnabled","enterpriseManaged","conditionsByObject","targetForParameters","selectedTypeByObject","changeConditionType","normalizedType","newType","targetsRefs","targetsRepos","targetsOrgs","panelSubtitle","targetingSubtitle","pluralTarget","x","MergeQueueGroupingStrategy","onValueChange","fieldLabel","display_name","fetchMergeMethods","abortController","attempt","maxAttempts","DOMException","Promise","resolve","addEventListener","MergeQueueMergeMethod","loadingValidMergeMethods","setLoadingValidMergeMethods","validMergeMethods","setValidMergeMethods","loadError","setLoadError","displayValue","allowed_options","fetchData","Spinner","showDividers","mergeMethod","enabled","disabled_reason","DEFAULT_VALUE","DEFAULT_INTEGRATION","requiredStatusChecksAreEqual","context","integration_id","RequiredStatusCheckSelectList","helpUrls","selectedRequiredStatusChecks","safeSetTimeout","useSafeTimeout","userAddedStatusCheckContextsRef","abortControllerRef","initializedIntegrationsRef","statusCheckFilter","setStatusCheckFilter","statusCheckSuggestions","setStatusCheckSuggestions","fetchingStatusCheckSuggestions","setFetchingStatusCheckSuggestions","integrations","setIntegrations","fetchingIntegrations","setFetchingIntegrations","fetchSuggestions","fetchedSuggestions","suggestionsResponse","suggestion","localeCompare","statusChecksResponse","aborted","newAbortController","timeout","clearTimeout","StatusCheckRows","StatusCheckPicker","array","element","requiredStatusCheck","IntegrationPicker","integrationId","newSelectedRequiredStatusChecks","selectedToDelete","statusChecks","newEntryGroup","groupId","suggestionsGroup","changedSelection","tempSelections","newSuggestions","groupItemId","check","findInCheckList","checkList","setCustomItemProp","itemProp","integration","PlusIcon","selection","tempSel","customConvertToItemProps","convertFilterItem","filterVal","convertSuggestionItem","latest_integration_id","groups","itemGroups","existingCheck","newEntry","filterInNewSuggestions","convertedSuggestions","selectionItems","newSel","Set","selectedIntegration","filteredIntegrations","preferred_avatar_url","integrationEl","reasons","RestrictedCommitsList","oid","setOid","reason","setReason","otherReason","setOtherReason","restrictedCommits","addRestrictedCommitToList","commit","removeRestrictedCommitFromList","restrictedCommitToRemove","block","Select","restrictReason","Option","gridColumn","restrictedCommit","RequiredDeployments","selectedDeploymentEnvironments","isOverlayVisible","setOverlayVisible","deploymentEnvironmentFilter","setDeploymentEnvironmentFilter","deploymentEnvironments","setDeploymentEnvironments","fetchingDeploymentEnvironments","setFetchingDeploymentEnvironments","selectedDeploymentEnvironmentsById","deploymentEnvironment","autocompleteItems","autocompleteItem","visuallyHidden","Autocomplete","Input","onFocus","Menu","emptyStateText","selectedItemIds","Workflows","fieldRef","dialogVisible","setDialogVisible","editingWorkflow","setEditingWorkflow","firstErrorRef","workflows","workflowErrors","errorsByRepoAndPath","sub_errors","repo_and_path","workflowMeta","setWorkflowMeta","initialMetadata","workflowMetadata","workflow","workflowName","addOrUpdateWorkflow","newWorkflow","newMetadata","newWorkflows","w","workflowsEqual","onEditWorkflow","onDeleteWorkflow","WorkflowDialog","existingWorkflow","sha","AlertFillIcon","PencilIcon","aria-describedby","refOrSha","setRefOrSha","setWorkflow","setRepo","shaForRef","useShaForRef","setShaForRef","fetchShaForRef","foundSha","workflowOptions","useWorkflowSuggestions","setWorkflowOptions","fetchWorkflowSuggestions","newRepo","suggestedWorkflows","workflowAlreadyExists","setWorkflowAlreadyExists","shaValid","validateSha","useShaValidation","setShaValid","repo_id","onRepoChange","q","repos","actionsSharing","saveChanges","paddingBottom","required","additionalButtonProps","refCacheKey","buttonClassName","RefOrShaSelector","newValue","paddingTop","mergeQueueErrorFilters","wildcardPresent","error_code","MergeQueueError","GitMergeQueueIcon","RestrictHelper","boxName","buttonName","examples","validationError","showDialog","setShowDialog","restrictedList","restricted","paddingX","fontFamily","restrictedToDelete","RestrictHelperDialog","fileExtension","setError","validateInput","cannotBeEmpty","cannotBeDuplicates","FileExtensionRestrictions","extension","FilePathRestrictions","rangeBounds","range","min","max","num","parseInt","MaxHelper","errorMessages","empty","notInteger","maxError","setMaxError","targetValue","parsedValue","parseFloat","isInteger","allowed_range","MaxFilePathLength","MaxFileSize","CodeScanningTools","object","thresholdFields","content_object","objectField","grouped","tool","defaultValue","thresholdField","codeScanning","ToolPicker","columnGap","ThresholdDropDown","role","allowedOptions","threshold","align","setText","useSuggestions","setLoading","resolvedPath","endsWith","itemInputs","omittedButSelected","setIsOpen","all","requiredStatusCheckFilters","subError","RequiredStatusChecksError","requiredDeploymentsErrorFilters","RequiredDeploymentsError","maxFileSizeFilters","maxFileSize","MaxFileSizeError","maxFilePathFilters","maxFilePath","MaxFilePathError","filePathRestrictionsFilter","FilePathRestrictionsError","fileExtensionRestrictionsFilter","FileExtensionRestrictionsError","CodeScanningToolsFilter","missing","CodeScanningToolsError","workflowErrorFilters","handledByFormControl","WorkflowsError","componentRegistry","restricted_commits","required_status_checks","required_deployments","merge_queue_grouping_strategy","merge_queue_merge_method","file_path_restriction","file_extension_restriction","max_file_path_length","max_file_size","code_scanning_tools","errorRegistry","merge_queue","Suspense","code_scanning","required_depoyments","visibilityRegistry","readonly","renderMergeQueueGroupingStrategy","RulesetError","RuleRow","fieldRefs","onUpdateParameters","additionalOptionsExpanded","setAdditionalOptionsExpanded","ErrorComponent","hideContainer","ui_options","hide_settings_container","renderErrorComponent","marginLeft","aria-errormessage","pl","AdditionalSettings","onParametersChange","ChevronUpIcon","ChevronDownIcon","AdditionalSettingsDropdownMenu","control","fieldErrors","RegisteredComponent","dropdownForNumberField","ui_prefer_dropdown","rangeToArray","bounds","allowed_values","generateMetadataDescription","includePattern","propertyDescription","operatorDescription","supportedOperator","negate","DirtyState","getRuleDirtyState","AddMetadataPatternRuleDialog","availableMetadataRuleSchemas","returnFocusRef","setParameters","regexValidator","useValidateRegex","metadataPatternValidation","setMetadataPatternValidation","touched","showMetadataPatternError","EDITING","metadataRuleSchemaOptions","invalid","newOperator","strNegate","prevParameters","MetadataPatternRuleRow","flexWrap","ReplyIcon","RulesList","helpUrl","RepoLockedIcon","RestrictionsPanel","availableRuleSchemas","metadataPatternRuleSchemas","setMetadataRestrictionTypes","ruleErrors","errorRefs","addRestrictionButtonRef","protectionsHeader","restrictions","metadataRestrictionTypes","caption","borderTop","borderLeft","borderRight","ListView","restriction","RestrictionsBox","errorType","boxChecked","setBoxChecked","hasErrors","RulesPanel","visibleRules","REMOVED","ruleSchemaByType","record","refRules","commitMetadataRules","metadataRules","ruleWithSchema","branchRuleSchemas","pendingMetadataRule","ProtectionsHeader","ProtectionsList","ORGANIZATION_ADMIN_ROLE","DEPLOY_KEY_BYPASS_ACTOR","LOCKED_BYPASS_MODE_ACTOR_TYPES","bypassActorModeArray","shortName","PRS_ONLY","BypassListRow","actor","isBypassModeEnabled","getSelectedMode","currentActor","getType","selectedMode","mode","humanizeRoleName","BypassAvatar","baseUrl","ActorType","actorMetadata","RowRightHalfUnboxed","modeIsSelected","comparisonValue","BypassActorMenu","unboxRules","BypassList","calculateDescription","actorTypeString","BypassSelectPanel","suggestionsUrl","addReviewerSubtitle","bypassActorToRemove","debounceBypassSuggestions","BypassListPanel","isLoadingSuggestions","setIsLoadingSuggestions","showBypassDialog","setShowBypassDialog","initialSuggestions","setInitialSuggestions","bypassSuggestionsUrl","actors","prepopulateSuggestions","bypassSuggestions","focusReturnRef","listName","subtext","pushRulesetDelegatedBypass","primerBypassSelectPanel","AddBypassButton","BypassDialog","RulesetPage","currentName","isHistoryView","isImportedRuleset","isRestoredRuleset","noRulesets","initialErrors","serverRulesets","setServerRulesets","form","rulesetNameRef","isSaving","setIsSaving","isReverting","setIsReverting","rulesetToExport","setRulesetToExport","errorMessage","setErrorMessage","setRuleErrors","setGeneralErrors","general","setConditionErrors","setErrorRefs","focusOnFirstError","firstRuleErrorType","ruleError","createRefsForRuleSchema","refs","createRef","resetErrors","isFormDirty","isInherited","dirtyMessage","noTargetsHelper","targetedCondition","conditionTargetObject","includeExcludeParams","setAttribute","onbeforeunload","returnValue","removeAttribute","onRevertForm","updatedRuleSchemas","canFormBeSaved","validationErrors","saveRuleset","updatedRuleset","upsellHeaderText","PageHeader","RulesHeader","onGoBack","confirm","hr","noValidate","onSubmit","private","targetObject","fnmatch","enforcementLabelVariant","InsightsBlank","showCreateButton","orderedStatuses","ruleStatuses","bypass","RuleStatusFilter","currentRuleStatus","ActionMenuSelector","orderedValues","displayValues","RulesetFilter","currentRuleset","allRulesets","RepoPushIcon","insightsIndexPath","encodePart","login","timePeriod","ruleStatus","evaluateStatus","page","String","fetchJSON","memoizeCache","memoizeFetchJSON","memoize","cache","evaluateStatuses","active","evaluate","EvaluateStatusFilter","currentEvaluateStatus","InsightsFilterBar","insightsActorsState","useInsightsActors","actorsPath","ruleInsightsActorsPath","usersState","setUsersState","users","update","actorsResponse","updateFilter","namedRepos","selectedEvaluateStatus","selectedRuleset","hotKey","simpleRepoLoader","selectedRepository","UserSelector","defaultText","currentUser","selectedUser","renderCustomFooter","TimeFilter","currentTimePeriod","selectedTimePeriod","selectedRuleStatus","User","user","cursor","primaryAvatarUrl","data-hovercard-url","userHovercardPath","square","muted","ListItem","avatarLabel","avatarUrl","hovercardUrl","warning","titleClass","marginX","CheckIcon","XIcon","Tooltip","wrap","PullRequestList","prReviewers","stateSummary","StatusChecksList","checks","integrationName","integrationAvatarUrl","checkRunName","DeploymentsList","deploymentResults","ViolationsList","violations","format","itemCount","totalCount","total","candidate","lastIndexOf","RuleRunMetadataList","ruleRun","RuleSuiteDetailsDialog","ruleSuite","visibleResult","orderedCategories","passedRulesetCount","failedRulesetCount","bypassedRulesetCount","useRulesetRunMap","failedCategories","passedCategories","bypassedCategories","categoriesById","runsByCategoryId","run","ruleRuns","categoryId","insightsCategory","runs","categoryMap","failedOrBypassed","passed","_k","bypassed","failed","evaluateMode","rejectedInPushPhase","evaluationMetadata","preReceiveFailure","mergeGroupPrs","mergeGroupPullRequests","isQueueFailure","mergeQueueRemovalReason","mergeQueueChecks","mergeQueueCheckResults","overflowY","renderHeader","resultMessage","counts","CloseButton","renderBody","mx","borderTopStyle","borderTopColor","RulesetRow","categoryBypassed","MergeQueueDetailsRow","afterOid","showExpanded","setShowExpanded","flexGrow","ChevronRightIcon","MergeGroupRow","MergeCheckList","borderTopWidth","flexBasis","flexFlow","pr","link","number","marginTop","marginBottom","MergeCheckRow","mergeCheck","allowed","failureCount","outOfDate","insightsSourceOutOfDate","validResponses","flatMap","exemptionResponses","resp","bypassNote","verb","responders","firstResponder","exemptionRequestUrl","reviewer","orderedRuns","CheckCircleFillIcon","XCircleFillIcon","hoverColor","RunListItem","hasAdditionalMetadata","isAllowed","ruleDisplayName","prLink","prNumber","refPrefix","RuleSuiteRow","detailsExpanded","setDetailsExpanded","createOrDeleteRef","missingRefName","beforeOid","commitMessageOrAction","pushCommitMessage","shortMessageHtmlLink","SafeHTMLBox","wordBreak","html","blobEvaluation","actorIsPublicKey","KeyIcon","ActionText","RelativeTime","date","Date","createdAt","tense","RuleEvaluationLabel","refName","beforeSha","afterSha","pushPhaseFailure","commitPending","queueEntryFailure","compareLink","comparePath","base","head","activityIndexPath","repositoryPath","InsightsPage","learnMoreUrl","UpsellInsightsBanner","InsightsPageComponent","upsellPath","RocketIcon","ruleSuiteRuns","visibleResults","hasMoreSuites","pageCount","isFork","ruleSuitsByDay","toDateString","filterableRulesets","day","datetime","precision","year","Pagination","currentPage","onPageChange","newPage","showPages","HistoryComparisonPage","diffHtml","history","minWidth","updated_by","static_avatar_url","display_login","relative-time","created_at","is_current","linkButtonSx","style","lineHeight","HistorySummaryPage","hasMore","showPagination","histories","ListItemTitle","containerSx","secondaryActions","ListItemActionBar","staticMenuActions","render","HistoryActionMenu","historyId","prevHistoryId","canRestore","ListItemLeadingContent","alignSelf","ListItemMainContent","ListItemDescription","FileDiffIcon","STANDARD_ROUTES","jsonRoute","STAFFTOOLS_ROUTES","MEMBER_PRIVILEGE_ROUTES","registerReactAppFactory","routes","useAnalytics","contextData","useContext","AnalyticsContext","sendAnalyticsEvent","eventType","react","sendEvent","ModifierKeys","useKeyPress","callback","callbackRef","useLayoutEffect","handleKeyPress","portals","querySelectorAll","elementHasNonZeroHeight","clientHeight","triggerWhenPortalIsActive","checkModifierKeys","keyboardEvent","ignoreModifierKeys","triggerWhenInputElementHasFocus","eventTargetIsInputElement","HTMLTextAreaElement","HTMLInputElement","targetElement","scopeRef","removeEventListener","UserItem","React","isCurrent","UsersList","VirtualUsersList","FullUsersList","maxHeight","FixedSizeVirtualList","itemHeight","makeKey","renderItem","showTypedInUser","filteredUsers","filterUsersHelper","trimmedFilterText","data-hotkey","PeopleIcon","UserFilter","Loading","LoadingFailed","UsersZeroState","pt","SearchIcon","buttonProps","actionListProps","orderedPeriods","timePeriods","hour","week","month","ClockIcon","roleIconMap","Write","Maintain","ToolsIcon","PersonIcon","DialogHeader","BypassDialogRow","setSelected","isChecked","BypassDialogBody","BypassDialogHeader","bypassListFilter","setBypassListFilter","dialogLabelId","Title","borderBottomWidth","borderLeftWidth","borderRightWidth","CurrentRepositoryContext","CurrentRepositoryProvider","openHotkey","selectPanelRef","insidePortal","nested","resultListAriaLabel","preventClose","triggerOpen","initialFilter","customNoResultsItem","customNoMatchItem","footer","keybindingCommandId","updateOpenState","anyItemPickerOpen","useItemPickersContext","useId","issues_react_ui_commands_migration","useFeatureFlags","handleKeyDown","onHotKeyPress","stopPropagation","toItemProps","itemSelected","itemKey","itemProps","wrappedGetItemKey","selectPanelItems","__isNew__","is","selectPanelSelectedItems","selectedItemInputs","activeOption","querySelector","activeDataId","getAttribute","selectedItems","item2","hasItems","groupMetadataProp","groupMetadata","overlayHeight","selectPanelProps","showItemDividers","GlobalCommands","commands","ItemPickersContext","createContext","ItemPickersContextProvider","itemPickerOpenStates","previousState","contextValue","_buttonText","filteredRepos","setFilteredRepos","isLoadingRepos","setIsLoadingRepos","debounceRepos","selectRepos","_all","truncatedRepoName","appendOnly","RepoIcon","memoItems","hiddenSelectedItems","memoItem","buttonIcon","screenBreakpoints","ScreenContext","initialValue","initial","useSyncExternalStore","getCurrentSize","innerWidth","currentSizeRef","setScreenSize","onResize","updatedSize","resizeObserver","ResizeObserver","observe","documentElement","disconnect","elementWidth","breakpoint","rafId","prototype","observedNodes","changedStates","forEach","node","newRect","getBoundingClientRect","rect","prop","callbacks","cb","requestAnimationFrame","useIsomorphicLayoutEffect","rectReducer","defaultEstimateSize","defaultKeyExtractor","defaultMeasureSize","el","horizontal","defaultRangeExtractor","start","Math","overscan","end","arr","useVirtual","_ref","_measurements","_ref$size","_ref$estimateSize","estimateSize","_ref$overscan","_ref$paddingStart","paddingStart","_ref$paddingEnd","paddingEnd","parentRef","scrollToFn","useObserver","initialRect","onScrollElement","scrollOffsetFn","_ref$keyExtractor","keyExtractor","_ref$measureSize","measureSize","_ref$rangeExtractor","rangeExtractor","sizeKey","scrollKey","latestRef","scrollOffset","measurements","_React$useState","setScrollOffset","outerSize","_useMeasureParent","nodeRef","setElement","_React$useReducer","dispatch","initialRectSet","observer","wasEmpty","has","hasRectChanged","unobserve","splice","cancelAnimationFrame","defaultScrollToFn","offset","resolvedScrollToFn","_React$useState2","measuredCache","setMeasuredCache","measure","pendingMeasuredCacheIndexesRef","measuredSize","_start","_size","_end","totalSize","scrollOffsetFnRef","onScroll","capture","passive","_calculateRange","calculateRange","_ref4","findNearestBinarySearch","indexes","measureSizeRef","virtualItems","k","len","_loop","measurement","measureRef","_scrollOffset","old","_extends2","mountedRef","scrollToOffset","toOffset","_temp","_ref2$align","_ref2","_latestRef$current","tryScrollToIndex","_temp2","_ref3","_ref3$align","_objectWithoutPropertiesLoose","excluded","sourceKeys","_latestRef$current2","scrollToIndex","_len","_key","low","high","getCurrentValue","middle","currentValue"],"sourceRoot":""}