#!/bin/bash
#/ Usage: script/turboghas-server
#/
#/ Runs turboghas service.
set -euo pipefail

export BROKERS=127.0.0.1:9092
export MYSQL_ADDR=localhost:3306
export MYSQL_DB_NAME=github_development_turboghas

NAME="turboghas"
if [[ "$DX_EDGE" = true ]] && [[ "$DX_FEATURE_SUBPROJECT_CONTAINERS" = true ]]; then
  SCRIPT_DIR=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")
  source $SCRIPT_DIR/dx/lib/subproject-containers

  SUBPROJECT_VERSION=$(subproject_version ${NAME})
  echo "${NAME} version $SUBPROJECT_VERSION"

  # Ensure we clean up any existing containers, and remove after shutdown.
  cleanup_docker() {
    echo "Stopping ${NAME}..."
    docker stop ${NAME} || true
    exit 0
  }

  trap cleanup_docker EXIT INT QUIT TERM HUP

  docker stop ${NAME}-tools &> /dev/null || true
  docker rm ${NAME}-tools &> /dev/null || true

  # Run skeema commands in turboghas's tools container
  docker run --rm --name ${NAME}-tools --network host \
  -e BROKERS \
  -e MYSQL_ADDR \
  -e MYSQL_DB_NAME \
  ghcr.io/github/turboghas/turboghas:tools-${SUBPROJECT_VERSION} \
  /bin/bash -c "cd /work/schemas && skeema lint github && skeema push github --allow-unsafe && skeema push github_test --allow-unsafe"

  docker stop ${NAME} &> /dev/null || true
  docker rm ${NAME} &> /dev/null || true

  # Run the actual turboghas service in its container.
  docker run -d --rm --name ${NAME} --network host \
    -e BROKERS \
    -e MYSQL_ADDR \
    -e MYSQL_DB_NAME \
    ghcr.io/github/turboghas/turboghas:${SUBPROJECT_VERSION} \
    -processor

  docker logs --follow ${NAME} &
  wait
else
  if [ -f "config/turboghas-version" ]; then
    script/build-subproject --clone-only turboghas
  fi

  (cd vendor/turboghas/schemas && skeema lint github && skeema push github --allow-unsafe && skeema push github_test --allow-unsafe)
  (cd vendor/turboghas && go run ./cmd/turboghas -processor)
fi
