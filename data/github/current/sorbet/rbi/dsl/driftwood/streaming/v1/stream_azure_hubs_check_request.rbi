# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Driftwood::Streaming::V1::StreamAzureHubsCheckRequest`.
# Please instead update this file by running `bin/tapioca dsl Driftwood::Streaming::V1::StreamAzureHubsCheckRequest`.

class Driftwood::Streaming::V1::StreamAzureHubsCheckRequest
  sig do
    params(
      encrypted_connstring: T.nilable(String),
      key_id: T.nilable(String),
      name: T.nilable(String),
      subject_id: T.nilable(Integer),
      subject_type: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(encrypted_connstring: nil, key_id: nil, name: nil, subject_id: nil, subject_type: nil); end

  sig { void }
  def clear_encrypted_connstring; end

  sig { void }
  def clear_key_id; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_subject_id; end

  sig { void }
  def clear_subject_type; end

  sig { returns(String) }
  def encrypted_connstring; end

  sig { params(value: String).void }
  def encrypted_connstring=(value); end

  sig { returns(String) }
  def key_id; end

  sig { params(value: String).void }
  def key_id=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(Integer) }
  def subject_id; end

  sig { params(value: Integer).void }
  def subject_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def subject_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def subject_type=(value); end
end
