{"version":3,"file":"chunk-app_components_primer_navigation_list_lazy-load-section-element_ts-xxxxxxxxxxxx.js","mappings":"4fAEA,YACMA,+BAA+BC,YAKnC,IAAIC,UAAoB,CACtB,OAAO,IAAI,CAACC,YAAY,CAACC,YAAY,CAAC,gBACxC,CAEA,IAAIF,SAASG,CAAc,CAAE,CACvBA,EACF,IAAI,CAACF,YAAY,CAACG,YAAY,CAAC,gBAAiB,QAEhD,IAAI,CAACH,YAAY,CAACI,eAAe,CAAC,iBAEpC,IAAI,CAACJ,YAAY,CAACK,SAAS,CAACC,MAAM,CAAC,WAAYJ,EACjD,CAEA,IAAIK,aAAaL,CAAa,CAAE,CAC9B,IAAI,CAACF,YAAY,CAACG,YAAY,CAAC,oBAAqBD,EAAMM,QAAQ,GACpE,CAEA,IAAID,cAAuB,CACzB,OAAOE,SAAS,IAAI,CAACT,YAAY,CAACU,YAAY,CAAC,uBAAmC,CACpF,CAEA,IAAIC,aAAsB,CACxB,OAAOF,SAAS,IAAI,CAACT,YAAY,CAACU,YAAY,CAAC,WAAuB,CACxE,CAEA,IAAIE,gBAAyB,CAC3B,OAAO,IAAI,CAACZ,YAAY,CAACU,YAAY,CAAC,QAAU,EAClD,CAEAG,mBAAoB,CAClB,IAAI,CAACC,oBAAoB,EAC3B,CAEA,MAAcC,OAAOC,CAAQ,CAAE,KAIzBC,EAFJ,GADAD,EAAEE,cAAc,GACZ,IAAI,CAACnB,QAAQ,CAAE,MACnB,KAAI,CAACA,QAAQ,CAAG,GAEhB,GAAI,CACF,IAAMoB,EAAgB,IAAIC,IAAI,IAAI,CAACR,cAAc,CAAES,OAAOC,QAAQ,CAACC,MAAM,CACzE,KAAI,CAAChB,YAAY,GACjBY,EAAcK,YAAY,CAACC,MAAM,CAAC,OAAQ,IAAI,CAAClB,YAAY,CAACC,QAAQ,IACpE,IAAMkB,EAAW,MAAMC,MAAMR,GAC7B,GAAI,CAACO,EAASE,EAAE,CAAE,OAClBX,EAAO,MAAMS,EAASG,IAAI,GACtB,IAAI,CAACtB,YAAY,GAAK,IAAI,CAACI,WAAW,EACxC,KAAI,CAACX,YAAY,CAAC8B,MAAM,CAAG,EAAG,CAElC,CAAE,MAAOC,EAAK,CAEZ,IAAI,CAAChC,QAAQ,CAAG,GAChB,IAAI,CAACQ,YAAY,GACjB,MACF,CACA,IAAMyB,EAAW,IAAI,CAACC,SAAS,CAACC,SAAUjB,GAC1Ce,GAAUG,cAAc,WAAWhC,aAAa,eAAgB,kCAChE,IAAI,CAACiC,IAAI,CAACC,YAAY,CAACL,EAAU,IAAI,CAAChC,YAAY,EAClD,IAAI,CAACsC,YAAY,CAACC,GAAG,IAAIC,QACzB,IAAI,CAACzC,QAAQ,CAAG,EAClB,CAEQe,sBAAuB,CACzB,IAAI,CAACP,YAAY,CAAG,IAAI,CAACI,WAAW,CACtC,IAAI,CAACX,YAAY,CAAC8B,MAAM,CAAG,GAE3B,IAAI,CAAC9B,YAAY,CAAC8B,MAAM,CAAG,EAE/B,CAEQG,UAAUC,CAAkB,CAAEjB,CAAY,CAAoB,CACpE,IAAMwB,EAAWP,EAASQ,aAAa,CAAC,YAExC,OADAD,EAASE,SAAS,CAAG1B,EACdiB,EAASU,UAAU,CAACH,EAASI,OAAO,CAAE,GAC/C,CACF,E,GA9EGC,EAAAA,EAAMA,C,CADHjD,EAAAA,SAAAA,CAAAA,OAAAA,KAAAA,G,GAEHiD,EAAAA,EAAMA,C,CAFHjD,EAAAA,SAAAA,CAAAA,eAAAA,KAAAA,G,GAGHkD,EAAAA,EAAOA,C,CAHJlD,EAAAA,SAAAA,CAAAA,eAAAA,KAAAA,GAAAA,EAAAA,EAAAA,CADLmD,EAAAA,EAAUA,C,CACLnD,E","sources":["app/components/primer/navigation_list/lazy-load-section-element.ts"],"sourcesContent":["import {controller, target, targets} from '@github/catalyst'\n\n@controller\nclass LazyLoadSectionElement extends HTMLElement {\n  @target list: HTMLElement\n  @target showMoreItem: HTMLElement\n  @targets focusMarkers: HTMLElement[]\n\n  get disabled(): boolean {\n    return this.showMoreItem.hasAttribute('aria-disabled')\n  }\n\n  set disabled(value: boolean) {\n    if (value) {\n      this.showMoreItem.setAttribute('aria-disabled', 'true')\n    } else {\n      this.showMoreItem.removeAttribute('aria-disabled')\n    }\n    this.showMoreItem.classList.toggle('disabled', value)\n  }\n\n  set current_page(value: number) {\n    this.showMoreItem.setAttribute('data-current-page', value.toString())\n  }\n\n  get current_page(): number {\n    return parseInt(this.showMoreItem.getAttribute('data-current-page') as string) || 1\n  }\n\n  get total_pages(): number {\n    return parseInt(this.showMoreItem.getAttribute('pages') as string) || 1\n  }\n\n  get pagination_src(): string {\n    return this.showMoreItem.getAttribute('src') || ''\n  }\n\n  connectedCallback() {\n    this.setShowMoreItemState()\n  }\n\n  private async submit(e: Event) {\n    e.preventDefault()\n    if (this.disabled) return\n    this.disabled = true\n    let html\n    try {\n      const paginationURL = new URL(this.pagination_src, window.location.origin)\n      this.current_page++\n      paginationURL.searchParams.append('page', this.current_page.toString())\n      const response = await fetch(paginationURL)\n      if (!response.ok) return\n      html = await response.text()\n      if (this.current_page === this.total_pages) {\n        this.showMoreItem.hidden = true\n      }\n    } catch (err) {\n      // Ignore network errors\n      this.disabled = false\n      this.current_page--\n      return\n    }\n    const fragment = this.parseHTML(document, html)\n    fragment?.querySelector('li > a')?.setAttribute('data-targets', 'lazy-load-section.focusMarkers')\n    this.list.insertBefore(fragment, this.showMoreItem)\n    this.focusMarkers.pop()?.focus()\n    this.disabled = false\n  }\n\n  private setShowMoreItemState() {\n    if (this.current_page < this.total_pages) {\n      this.showMoreItem.hidden = false\n    } else {\n      this.showMoreItem.hidden = true\n    }\n  }\n\n  private parseHTML(document: Document, html: string): DocumentFragment {\n    const template = document.createElement('template')\n    template.innerHTML = html\n    return document.importNode(template.content, true)\n  }\n}\n"],"names":["LazyLoadSectionElement","HTMLElement","disabled","showMoreItem","hasAttribute","value","setAttribute","removeAttribute","classList","toggle","current_page","toString","parseInt","getAttribute","total_pages","pagination_src","connectedCallback","setShowMoreItemState","submit","e","html","preventDefault","paginationURL","URL","window","location","origin","searchParams","append","response","fetch","ok","text","hidden","err","fragment","parseHTML","document","querySelector","list","insertBefore","focusMarkers","pop","focus","template","createElement","innerHTML","importNode","content","target","targets","controller"],"sourceRoot":""}