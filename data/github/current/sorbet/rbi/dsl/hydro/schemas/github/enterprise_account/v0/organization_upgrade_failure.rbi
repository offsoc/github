# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::EnterpriseAccount::V0::OrganizationUpgradeFailure`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::EnterpriseAccount::V0::OrganizationUpgradeFailure`.

class Hydro::Schemas::Github::EnterpriseAccount::V0::OrganizationUpgradeFailure
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      billing_type: T.nilable(String),
      coupon_code: T.nilable(String),
      error_message: T.nilable(String),
      has_active_coupon: T.nilable(T::Boolean),
      organization: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization),
      organization_plan: T.nilable(String),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext),
      slug: T.nilable(String)
    ).void
  end
  def initialize(actor: nil, billing_type: nil, coupon_code: nil, error_message: nil, has_active_coupon: nil, organization: nil, organization_plan: nil, request_context: nil, slug: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { returns(String) }
  def billing_type; end

  sig { params(value: String).void }
  def billing_type=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_billing_type; end

  sig { void }
  def clear_coupon_code; end

  sig { void }
  def clear_error_message; end

  sig { void }
  def clear_has_active_coupon; end

  sig { void }
  def clear_organization; end

  sig { void }
  def clear_organization_plan; end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_slug; end

  sig { returns(String) }
  def coupon_code; end

  sig { params(value: String).void }
  def coupon_code=(value); end

  sig { returns(String) }
  def error_message; end

  sig { params(value: String).void }
  def error_message=(value); end

  sig { returns(T::Boolean) }
  def has_active_coupon; end

  sig { params(value: T::Boolean).void }
  def has_active_coupon=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)) }
  def organization; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)).void }
  def organization=(value); end

  sig { returns(String) }
  def organization_plan; end

  sig { params(value: String).void }
  def organization_plan=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(String) }
  def slug; end

  sig { params(value: String).void }
  def slug=(value); end
end
