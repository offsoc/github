<div class="boxed-group-inner"><%# erblint:disable DeprecatedCustomCss %>
  <div class="js-details-container Details">
    <div style="float: right;">
      <% if copilot_user.has_been_warned? %>
        <%= render(Primer::Beta::Button.new(id: "already_warned", inactive: true)) do |_c| %>Already Warned<%end %>
      <% else %>
        <%= form_tag stafftools_user_copilot_warn_via_sire_path(copilot_user.user_object.display_login), method: :put do %>
          <%= render(Primer::Alpha::Dialog.new(
            title: "Warn User via SIRE",
            size: :xlarge,
            dialog_id: "copilot-warn-user",
            align: :left,
          )) do |dialog| %>
            <% dialog.with_show_button(scheme: :danger, test_selector: "warn_user_button") do %>
              Warn User via SIRE
            <% end %>
            <% dialog.with_body do %>
              <%= render(Primer::Alpha::Banner.new(scheme: :warning)) do %>
                We will send this email to the user via GitHub's <a href="https://github.com/github/security-ir/blob/main/docs/playbooks/security-incident-notifications-playbook.md" target="_blank">Secure Incident Response Endpoint</a>.
              <% end %>

              <%= formatted_email %>
              <hr>
              <%= render(Primer::Alpha::TextField.new(name: "warn_reason", label: "Any additional information for log:", caption: "This will be included in the log")) %>
            <% end %>

            <% dialog.with_footer(show_divider: true) do %>
              <%= render(Primer::Beta::Button.new(id: "warn_btn", scheme: :danger, type: :submit)) do |c| %>
                Warn
              <% end %>
            <% end %>
          <% end %>
        <% end %>
      <% end %>
    </div>
    <h4>Warn User</h4>
    <p>
      Use SIRE to send email to user with warning about their behavior.
    </p>
  </div>
</div>
