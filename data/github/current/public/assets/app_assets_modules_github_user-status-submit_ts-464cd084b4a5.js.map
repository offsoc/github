{"version":3,"file":"chunk-app_assets_modules_github_user-status-submit_ts-xxxxxxxxxxxx.js","mappings":"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","sources":["app/assets/modules/github/user-status.ts","app/assets/modules/github/user-status-submit.ts"],"sourcesContent":["import {\n  hasExceededCharacterLimit,\n  resetCharactersRemainingCounts,\n  updateInputRemainingCharacters,\n} from './behaviors/characters-remaining'\nimport {onFocus, onInput, onKey} from '@github-ui/onfocus'\nimport type {EmojiPickerElement} from './emoji-picker-element'\nimport {eventToHotkeyString} from '@github-ui/hotkey'\n// eslint-disable-next-line no-restricted-imports\nimport {on} from 'delegated-events'\nimport {requestSubmit} from '@github-ui/form-utils'\n\nexport function isEditMode(container: Element): boolean {\n  const detailsEl = container.querySelector<HTMLElement>('.js-user-status-details')!\n  return detailsEl.hasAttribute('open')\n}\n\nfunction resetEmojiPicker(container: HTMLElement) {\n  const picker = container.querySelector<EmojiPickerElement>('.js-emoji-picker')\n  const selectedEmojiButton = container.querySelector('.js-toggle-user-status-emoji-picker')\n  if (picker) {\n    picker.reset()\n    picker.close()\n    selectedEmojiButton?.setAttribute('aria-expanded', 'false')\n  }\n}\n\nfunction resetSelectedEmoji(container: Element) {\n  const originalEmojiDisplay = container.querySelector<HTMLElement>('.js-user-status-original-emoji')!\n  const selectedEmojiDisplay = container.querySelector<HTMLElement>('.js-user-status-custom-emoji')!\n  const noEmojiIcon = container.querySelector<HTMLElement>('.js-user-status-no-emoji-icon')!\n  selectedEmojiDisplay.innerHTML = originalEmojiDisplay.innerHTML\n  noEmojiIcon.hidden = selectedEmojiDisplay.hasChildNodes()\n}\n\nfunction closeUserStatusEdit(container: HTMLElement) {\n  const messageField = container.querySelector<HTMLInputElement>('.js-user-status-message-field')!\n  resetSelectedEmoji(container)\n  resetEmojiPicker(container)\n  messageField.value = messageField.defaultValue\n  resetCharactersRemainingCounts(container)\n}\n\nfunction openUserStatusEdit(container: Element) {\n  resetSelectedEmoji(container)\n}\n\nfunction hideSuggestedUserStatusesIfNecessary(container: Element) {\n  const suggestionsContainer = container.querySelector<HTMLElement>('.js-user-status-suggestions')!\n  const messageField = container.querySelector<HTMLInputElement>('.js-user-status-message-field')!\n  const message = messageField.value.trim()\n  const messageExists = message.length > 0\n\n  suggestionsContainer.hidden = messageExists\n}\n\nfunction toggleUserStatusEdit(container: HTMLElement) {\n  if (isEditMode(container)) {\n    closeUserStatusEdit(container)\n  } else {\n    openUserStatusEdit(container)\n  }\n\n  disableUserStatusSubmitIfNecessary(container)\n}\n\nfunction displayEmoji(container: Element, emojiEl: Element) {\n  const emojiDisplay = container.querySelector<HTMLElement>('.js-user-status-custom-emoji')!\n  emojiDisplay.innerHTML = emojiEl.innerHTML\n\n  const noEmojiIcon = container.querySelector<HTMLElement>('.js-user-status-no-emoji-icon')!\n  noEmojiIcon.hidden = true\n}\n\nfunction setEmojiField(container: Element, emojiButton: HTMLButtonElement) {\n  const emojiField = container.querySelector<HTMLInputElement>('.js-user-status-emoji-field')!\n  emojiField.value = emojiButton.value\n}\n\nfunction selectEmoji(emojiButton: HTMLButtonElement) {\n  const container = emojiButton.closest<HTMLElement>('.js-user-status-container')!\n  const picker = container.querySelector<EmojiPickerElement>('.js-emoji-picker')!\n  const selectedEmojiButton = container.querySelector('.js-toggle-user-status-emoji-picker') as HTMLButtonElement\n\n  setEmojiField(container, emojiButton)\n  picker.querySelector('.selected-emoji')?.classList.remove('selected-emoji')\n  emojiButton.classList.add('selected-emoji')\n  displayEmoji(container, emojiButton)\n  disableUserStatusSubmitIfNecessary(container)\n  picker.close()\n  selectedEmojiButton?.setAttribute('aria-expanded', 'false')\n  selectedEmojiButton?.focus()\n}\n\nfunction handleUserStatusEscape(input: HTMLInputElement, event: KeyboardEvent) {\n  if (eventToHotkeyString(event) === 'Escape') {\n    const container = input.closest('.js-user-status-container')\n    if (!(container instanceof HTMLElement)) return\n\n    input.value = input.defaultValue\n    toggleUserStatusEdit(container)\n  }\n}\n\nfunction disableUserStatusSubmitIfNecessary(container: Element) {\n  const submitButton = container.querySelector<HTMLButtonElement>('.js-user-status-submit')\n  const clearButton = container.querySelector<HTMLButtonElement>('.js-clear-user-status-button')\n\n  if (!submitButton || !clearButton) {\n    return\n  }\n\n  const messageField = container.querySelector<HTMLInputElement>('.js-user-status-message-field')!\n  const emojiField = container.querySelector<HTMLInputElement>('.js-user-status-emoji-field')!\n  const message = messageField.value.trim()\n  const emoji = emojiField.value.trim()\n  let submitDisabled = false\n  let clearDisabled = false\n  if (hasExceededCharacterLimit(messageField)) {\n    submitDisabled = true\n  }\n\n  if (message.length < 1 && emoji.length < 1) {\n    submitDisabled = true\n\n    // Don't disable the clear button even when the message field is wiped if there's\n    // already a saved status the user wants to clear\n    if (!clearButton.classList.contains('js-user-status-exists')) {\n      clearDisabled = true\n    }\n  }\n\n  submitButton.disabled = submitDisabled\n  clearButton.disabled = clearDisabled\n}\n\nfunction clearUserStatus(container: HTMLElement) {\n  // Hide the container first so we don't see flickering state changes\n  container.hidden = true\n\n  const emojiField = container.querySelector<HTMLInputElement>('.js-user-status-emoji-field')!\n  emojiField.value = ''\n\n  const noEmojiIcon = container.querySelector<HTMLElement>('.js-user-status-no-emoji-icon')!\n  noEmojiIcon.hidden = false\n\n  const customEmojiDisplay = container.querySelector<HTMLElement>('.js-user-status-custom-emoji')!\n  customEmojiDisplay.textContent = ''\n\n  const messageField = container.querySelector<HTMLInputElement>('.js-user-status-message-field')!\n  messageField.value = ''\n  if (messageField.classList.contains('js-characters-remaining-field')) {\n    updateInputRemainingCharacters(messageField)\n  }\n\n  const selectedEmojiButton = container.querySelector('.selected-emoji.js-user-status-emoji-button')\n  if (selectedEmojiButton) {\n    selectedEmojiButton.classList.remove('selected-emoji')\n  }\n\n  const limitedAvailabilityCheckbox = container.querySelector<HTMLInputElement>(\n    '.js-user-status-limited-availability-checkbox',\n  )!\n  limitedAvailabilityCheckbox.checked = false\n\n  disableUserStatusSubmitIfNecessary(container)\n  hideSuggestedUserStatusesIfNecessary(container)\n\n  const form = container.querySelector<HTMLFormElement>('.js-user-status-form')!\n  requestSubmit(form)\n}\n\nfunction selectOrganization(selector: HTMLSelectElement) {\n  const container = selector.closest<HTMLElement>('.js-user-status-container')!\n  const orgID = selector.value\n  const anyOrgSelected = orgID.trim() !== ''\n  const messageField = container.querySelector<HTMLInputElement>('.js-user-status-message-field')!\n  let suggesterUrl = ''\n\n  if (anyOrgSelected) {\n    const suggesterUrlWithOrg = new URL(messageField.getAttribute('data-org-url') || '', window.location.origin)\n    const params = new URLSearchParams(suggesterUrlWithOrg.search.slice(1))\n    params.append('global_id', orgID)\n    suggesterUrlWithOrg.search = params.toString()\n    suggesterUrl = suggesterUrlWithOrg.toString()\n  } else {\n    suggesterUrl = messageField.getAttribute('data-no-org-url') || ''\n  }\n\n  messageField.closest<HTMLElement>('text-expander')!.setAttribute('data-mention-url', suggesterUrl)\n}\n\nfunction selectedSuggestedUserStatus(button: HTMLButtonElement) {\n  const container = button.closest<HTMLElement>('.js-user-status-container')!\n  const emojiEl = button.querySelector<HTMLElement>('.js-predefined-user-status-emoji')!\n  const messageEl = button.querySelector<HTMLElement>('.js-predefined-user-status-message')!\n  const messageField = container.querySelector<HTMLInputElement>('.js-user-status-message-field')!\n\n  messageField.value = (messageEl.textContent || '').trim()\n  displayEmoji(container, emojiEl)\n  setEmojiField(container, button)\n\n  disableUserStatusSubmitIfNecessary(container)\n  hideSuggestedUserStatusesIfNecessary(container)\n\n  if (messageField.classList.contains('js-characters-remaining-field')) {\n    updateInputRemainingCharacters(messageField)\n  }\n  messageField.focus()\n}\n\nfunction getUserStatusContainer(el: Element): HTMLElement {\n  return el.closest<HTMLElement>('.js-user-status-container')!\n}\n\non('click', '.js-toggle-user-status-edit', function (event) {\n  const target = event.currentTarget as Element\n  const container = getUserStatusContainer(target)\n  toggleUserStatusEdit(container)\n})\n\non(\n  'click',\n  '.js-toggle-user-status-emoji-picker',\n  function (event) {\n    const container = getUserStatusContainer(event.currentTarget as Element)\n    const picker = container.querySelector<EmojiPickerElement>('.js-emoji-picker')\n    const selectedEmojiButton = event.currentTarget as HTMLButtonElement\n    if (!picker) return\n    event.stopPropagation()\n    if (picker.hidden) {\n      picker.open()\n      selectedEmojiButton.setAttribute('aria-expanded', 'true')\n    } else {\n      picker.close()\n      selectedEmojiButton.setAttribute('aria-expanded', 'false')\n    }\n  },\n  {capture: true},\n)\n\non('click', '.js-user-status-emoji-button', function (event) {\n  const button = event.currentTarget\n  if (!(button instanceof HTMLButtonElement)) return\n\n  selectEmoji(button)\n})\n\nonFocus('.js-user-status-message-field', function (input) {\n  const container = getUserStatusContainer(input)\n  hideSuggestedUserStatusesIfNecessary(container)\n})\n\nonKey('keyup', '.js-user-status-message-field', (event: KeyboardEvent) => {\n  const input = event.target\n  if (!(input instanceof HTMLInputElement)) return\n  handleUserStatusEscape(input, event)\n})\n\nonKey('keyup', '.js-emoji-picker-filter', (event: KeyboardEvent) => {\n  const input = event.target\n  if (!(input instanceof HTMLInputElement)) return\n  handleUserStatusEscape(input, event)\n})\n\non('click', '.js-clear-user-status-button', function (event) {\n  const button = event.currentTarget\n  if (!(button instanceof HTMLButtonElement)) return\n  const container = button.closest<HTMLElement>('.js-user-status-container')!\n\n  clearUserStatus(container)\n})\n\non('click', '.js-predefined-user-status', function (event) {\n  const button = event.currentTarget\n  if (!(button instanceof HTMLButtonElement)) return\n\n  selectedSuggestedUserStatus(button)\n})\n\nonInput('.js-user-status-message-field', function (event) {\n  const input = event.target\n  if (!(input instanceof HTMLElement)) return\n  const container = input.closest<HTMLElement>('.js-user-status-container')!\n\n  disableUserStatusSubmitIfNecessary(container)\n  hideSuggestedUserStatusesIfNecessary(container)\n})\n\non('change', '.js-user-status-org-selection', function (event) {\n  const selection = event.currentTarget as HTMLSelectElement\n  selectOrganization(selection)\n})\n\non('change', '.js-user-status-limited-availability-checkbox', function (event) {\n  const busyCheckbox = event.target\n  if (!(busyCheckbox instanceof HTMLInputElement)) return\n\n  const container = busyCheckbox.closest<HTMLElement>('.js-user-status-container')!\n  const isBusy = busyCheckbox.checked\n  const defaultMessage = busyCheckbox.getAttribute('data-default-message') || ''\n  const messageField = container.querySelector<HTMLInputElement>('.js-user-status-message-field')!\n\n  if (isBusy && messageField.value.length < 1) {\n    messageField.value = defaultMessage\n  } else if (!isBusy && messageField.value === defaultMessage) {\n    messageField.value = ''\n  }\n\n  disableUserStatusSubmitIfNecessary(container)\n  hideSuggestedUserStatusesIfNecessary(container)\n})\n","import {fetchSafeDocumentFragment} from '@github-ui/fetch-utils'\nimport {isEditMode} from './user-status'\n// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\nimport {remoteForm, type Kicker} from '@github/remote-form'\n\nremoteForm('.js-user-status-form', async function (form, wants) {\n  if (form.getAttribute('data-format') === 'html') {\n    await updateUserStatusHtml(form, wants)\n  } else {\n    await broadcastUserStatusJson(form, wants)\n  }\n})\n\nasync function broadcastUserStatusJson(form: HTMLFormElement, wants: Kicker) {\n  const formGroup = form.querySelector<HTMLElement>('.js-user-status-form-group')!\n  formGroup.classList.remove('errored')\n\n  let response\n  try {\n    response = await wants.json()\n    showBanner(form)\n\n    const dialog = form.matches('.js-user-status-dialog-form')\n      ? (form.querySelector('modal-dialog, dialog') as HTMLDialogElement)\n      : (form.closest('modal-dialog, dialog') as HTMLDialogElement)\n\n    dialog.dispatchEvent(new CustomEvent('global-user-status-dialog:submit', {bubbles: true, detail: response.json}))\n  } catch (responseError) {\n    formGroup.classList.add('errored')\n    return\n  }\n}\n\nasync function updateUserStatusHtml(form: HTMLFormElement, wants: Kicker) {\n  const formGroup = form.querySelector<HTMLElement>('.js-user-status-form-group')!\n  formGroup.classList.remove('errored')\n\n  let response\n  try {\n    response = await wants.html()\n    showBanner(form)\n  } catch (responseError) {\n    formGroup.classList.add('errored')\n    return\n  }\n\n  const newContainer = response.html.querySelector('.js-user-status-container') as HTMLElement\n  // Update the status containers on the page for non-drawer / side panel status updates.\n  const otherContainers = document.querySelectorAll('.js-user-status-container')\n\n  for (const otherContainer of otherContainers) {\n    if (newContainer !== otherContainer) {\n      const context = otherContainer.closest('.js-user-status-context')\n\n      if (context) {\n        const url = context.getAttribute('data-url')\n        if (!url) throw new Error('could not get url')\n        const fragment = await fetchSafeDocumentFragment(document, url)\n\n        otherContainer.replaceWith(fragment)\n      }\n    }\n  }\n}\n\nfunction toggleUserStatusEditHoverEffects(container: Element, show: boolean) {\n  if (isEditMode(container)) {\n    // Don't show mouseover effects if we're already in edit mode\n    return\n  }\n\n  const elements = container.querySelectorAll('.js-toggle-user-status-edit.Details-content--closed')\n  for (const el of elements) {\n    el.classList.toggle('color-fg-accent', show)\n    el.classList.toggle('Link--primary', !show)\n  }\n}\n\nfunction showUserStatusEditHoverEffects(event: Event) {\n  if (!(event.target instanceof Element)) return\n\n  const container = event.target.closest<HTMLElement>('.js-user-status-container')!\n  toggleUserStatusEditHoverEffects(container, true)\n}\n\nfunction hideUserStatusEditHoverEffects(event: Event) {\n  if (!(event.target instanceof Element)) return\n\n  const container = event.target.closest<HTMLElement>('.js-user-status-container')!\n  toggleUserStatusEditHoverEffects(container, false)\n}\n\nfunction showBanner(form: HTMLFormElement) {\n  const statusBanner = document.querySelector('.js-user-status-banner') as HTMLElement\n  if (statusBanner) {\n    const userStatusEmoji = form.querySelector<HTMLInputElement>('.js-user-status-emoji-field')?.value\n    const userStatusMessage = form.querySelector<HTMLInputElement>('.js-user-status-message-field')?.value\n    const statusBannerMessage = statusBanner.querySelector<HTMLElement>('.js-user-status-banner-message')!\n    if (userStatusEmoji || userStatusMessage) {\n      // eslint-disable-next-line i18n-text/no-en\n      statusBannerMessage.textContent = 'Your status has been updated.'\n    } else {\n      // eslint-disable-next-line i18n-text/no-en\n      statusBannerMessage.textContent = 'Your status has been cleared.'\n    }\n    statusBanner.hidden = false\n  }\n}\n\nobserve('.js-toggle-user-status-edit', function (el) {\n  el.addEventListener('mouseenter', showUserStatusEditHoverEffects)\n  el.addEventListener('mouseleave', hideUserStatusEditHoverEffects)\n})\n"],"names":["isEditMode","container","detailsEl","querySelector","hasAttribute","resetSelectedEmoji","originalEmojiDisplay","selectedEmojiDisplay","noEmojiIcon","innerHTML","hidden","hasChildNodes","hideSuggestedUserStatusesIfNecessary","suggestionsContainer","messageExists","message","value","trim","length","toggleUserStatusEdit","closeUserStatusEdit","messageField","resetEmojiPicker","picker","selectedEmojiButton","reset","close","setAttribute","defaultValue","resetCharactersRemainingCounts","disableUserStatusSubmitIfNecessary","displayEmoji","emojiEl","emojiDisplay","setEmojiField","emojiButton","emojiField","handleUserStatusEscape","input","event","eventToHotkeyString","closest","HTMLElement","submitButton","clearButton","emoji","submitDisabled","clearDisabled","hasExceededCharacterLimit","classList","contains","disabled","getUserStatusContainer","el","on","currentTarget","stopPropagation","open","capture","button","HTMLButtonElement","selectEmoji","remove","add","focus","onFocus","onKey","target","HTMLInputElement","clearUserStatus","customEmojiDisplay","textContent","updateInputRemainingCharacters","limitedAvailabilityCheckbox","checked","form","requestSubmit","selectedSuggestedUserStatus","messageEl","onInput","selectOrganization","selector","orgID","anyOrgSelected","suggesterUrl","suggesterUrlWithOrg","URL","getAttribute","window","location","origin","params","URLSearchParams","search","slice","append","toString","busyCheckbox","isBusy","defaultMessage","broadcastUserStatusJson","wants","response","formGroup","json","showBanner","dialog","matches","dispatchEvent","CustomEvent","bubbles","detail","responseError","updateUserStatusHtml","html","newContainer","otherContainer","document","querySelectorAll","context","url","fragment","fetchSafeDocumentFragment","replaceWith","toggleUserStatusEditHoverEffects","show","toggle","showUserStatusEditHoverEffects","Element","hideUserStatusEditHoverEffects","statusBanner","userStatusEmoji","userStatusMessage","statusBannerMessage","remoteForm","observe","addEventListener"],"sourceRoot":""}