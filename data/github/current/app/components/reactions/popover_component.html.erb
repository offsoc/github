<%# erblint:counter DeprecatedComponentsCounter 1 %>
<% if new_style_reactions %>
  <%= form_tag reaction_path, method: :put, class: "js-pick-reaction" do %>
    <input type="hidden" name="input[subjectId]" value="<%= target_global_relay_id %>">
    <% form_context.each do |key, value| %>
      <input type="hidden" name="input[<%= key %>]" value="<%= value %>" <%= test_selector("reactions-input-#{key}") %>>
    <% end %>
    <ul class="dropdown-menu mt-2 d-flex mb-2 anim-scale-in dropdown-menu-reactions <%= popover_direction_class %>" role="menu">
      <% available_emotions.each do |emotion| %>
        <li role="presentation">
          <%= render(Reactions::ReactionButtonComponent.new(
            in_popover: true,
            emotion: emotion,
            user_has_reacted: reacted_to?(emotion.content),
            aria: { label: label_content(emotion) },
            data: { targets: "reactions-menu.menuItems" },
            button_role_checkbox: true,
            test_selector: "#{emotion.content}-reaction-popover-button-#{target_global_relay_id}"
          )) do %>
            <%= emoji_tag(
              emotion.emoji_character,
              alias: emotion.content,
              class: "d-flex"
            ) %>
          <% end %>
        </li>
      <% end %>
    </ul>
  <% end %>
<% else %>
  <%# Note that new_style_reactions is always true and this code is currently unused %>
  <details-menu class="js-add-reaction-popover anim-scale-in dropdown-menu <%= helpers.reaction_popover_class("sw") %>"
    aria-label="Pick your reaction"
    style="width: <%= width %>"><%# erblint:disable Primer::Accessibility::DetailsMenuMigration %>
    <%= form_tag reaction_path, method: :put, class: "js-pick-reaction" do %>
      <p class="color-fg-muted mx-2 my-1 js-reaction-description">Pick your reaction</p>

      <div role="none" class="dropdown-divider"></div>

      <div class="clearfix d-flex flex-wrap m-1 ml-2 mt-0">
        <input type="hidden" name="input[subjectId]" value="<%= target_global_relay_id %>">

        <% available_emotions.each do |emotion| %>
          <%= render Primer::ButtonComponent.new(**button_arguments(emotion)) do %>
            <%= emoji_tag(emotion.emoji_character, alias: emotion.content, class: "emoji") %>
          <% end %>
        <% end %>
      </div>
    <% end %>
  </details-menu>
<% end %>
