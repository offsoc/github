<p class="border-bottom pb-3">
  We’ll send a <span class="text-mono color-bg-subtle rounded-2 p-1">POST</span> request to the URL below
  with details of any Sponsors events. You can also specify which data format you’d like to receive
  (JSON, <span class="text-mono color-bg-subtle rounded-2 p-1">x-www-form-urlencoded</span>, etc).
</p>

<%= form_with(url: form_url, method: form_method) do %>
  <div class="mb-3">
    <%= render Primer::Alpha::TextField.new(
      name: "hook[url]",
      label: "Payload URL",
      placeholder: "Enter hook URL",
      autocomplete: "off",
      required: true,
      value: hook.url,
      caption: "We require SSL and verify SSL certificates when delivering payloads.",
      validation_message: hook.errors[:url].to_sentence.presence,
    ) %>
  </div>

  <div class="mb-3">
    <%= render Primer::Alpha::Select.new(
      name: "hook[content_type]",
      label: "Content type",
      required: true,
    ) do |list| %>
      <% Hooks::ShowView::CONTENT_TYPES.each do |content_type, value| %>
        <% list.option(label: content_type, value: value, selected: hook.content_type == value) %>
      <% end %>
    <% end %>
  </div>

  <div class="mb-3">
    <%= render Sponsors::Webhooks::SecretFieldComponent.new(hook: hook) %>
  </div>

  <div class="mb-3 py-3 border-top border-bottom">
    <%= render Primer::Alpha::CheckBox.new(
      name: "hook[active]",
      label: "Active",
      checked: hook.active?,
      caption: "We will deliver event details when this hook is triggered.",
      validation_message: hook.errors[:active].to_sentence.presence,
    ) %>
  </div>

  <div class="d-flex flex-items-start">
    <%= render Primer::Beta::Button.new(scheme: :primary, type: :submit).with_content(submit_label) %>
    <% if hook.persisted? %>
      <%= render Primer::Beta::Button.new(
        scheme: :danger,
        data: { show_dialog_id: Sponsors::Webhooks::DestroyConfirmationComponent.show_dialog_id_for(hook) },
        ml: 2,
        test_selector: "delete-webhook-#{hook.id}-button",
      ).with_content("Delete webhook") %>
    <% end %>
  </div>
<% end %>

<%= render Sponsors::Webhooks::DestroyConfirmationComponent.new(
  hook: hook,
  sponsors_listing: sponsors_listing,
) %>
