{"version":3,"file":"copilot-markdown-toolbar-button-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/copilot-markdown-toolbar-button/CopilotMarkdownToolbarButton.tsx","ui/packages/copilot-markdown-toolbar-button/copilot-markdown-toolbar-button.ts","ui/packages/copilot-summary-banner/constants.ts","ui/packages/react-core/deferred-registry.ts","ui/packages/react-core/react-partial-anchor.ts","ui/packages/react-core/react-partial-registry.ts","ui/packages/react-core/ReactPartialElement.tsx","ui/packages/react-core/register-partial.ts","ui/packages/react-profiling-mode/src/index.ts","ui/packages/test-id-props/test-id-props.ts","ui/packages/verified-fetch/verified-fetch.ts","ui/packages/react-core/PartialRouter.tsx","ui/packages/react-core/PartialEntry.tsx","ui/packages/react-core/ReactBaseElement.tsx"],"sourcesContent":["import {useCallback, useEffect, useRef, useState, useSyncExternalStore} from 'react'\n\nimport {ActionList, ActionMenu, Label} from '@primer/react'\n\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {INIT_EVENT, END_EVENT} from '@github-ui/copilot-summary-banner/constants'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\n\nexport interface CopilotMarkdownToolbarButtonProps {\n  anchorId: string\n  userLogin: string | undefined\n  ghostPilotAvailable: boolean\n  ghostPilotEnrolled: boolean\n  pullRequestSummaryEnabled: boolean\n}\n\nexport function CopilotMarkdownToolbarButton({\n  anchorId,\n  userLogin,\n  ghostPilotAvailable,\n  ghostPilotEnrolled,\n  pullRequestSummaryEnabled,\n}: CopilotMarkdownToolbarButtonProps) {\n  const [menuOpen, setMenuOpen] = useState<boolean>(false)\n  const [ghostPilotEnabled, setGhostPilotEnabled] = useState(ghostPilotEnrolled)\n  const [summaryDisabled, setSummaryDisabled] = useState<boolean>(false)\n  const boxRef = useRef<HTMLDivElement>(null)\n  const buttonRef = useRef<HTMLElement | null>(null)\n\n  const splitActionsEnabled = isFeatureEnabled('copilot_split_actions_enabled')\n\n  const ghostPilotFeature = 'ghost_pilot_pr_autocomplete'\n  const ghostPilotToggleEvent = 'copilot-ghost-pilot-toggle'\n\n  const subscribeGhostPilotChanges = (_callback: (enabled: boolean) => void) => {\n    const updateGhostPilotToggleState = (e: Event) => {\n      if ((e as CustomEvent).detail.enabled !== ghostPilotEnabled) {\n        setGhostPilotEnabled((e as CustomEvent).detail.enabled)\n      }\n    }\n    document.addEventListener(ghostPilotToggleEvent, updateGhostPilotToggleState)\n    return () => {\n      document.removeEventListener(ghostPilotToggleEvent, updateGhostPilotToggleState)\n    }\n  }\n\n  const getGhostPilotEnabledSnapshot = () => {\n    return ghostPilotEnabled\n  }\n\n  const ghostPilotToggleState = useSyncExternalStore(subscribeGhostPilotChanges, getGhostPilotEnabledSnapshot)\n\n  useEffect(() => {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    buttonRef.current = document.getElementById(anchorId)\n    if (buttonRef.current === null) {\n      return\n    }\n\n    const toggleMenu = () => {\n      setMenuOpen(open => !open)\n    }\n\n    const button = buttonRef.current\n    button.setAttribute('aria-expanded', menuOpen.toString())\n    button.addEventListener('click', toggleMenu)\n    return () => {\n      button.removeEventListener('click', toggleMenu)\n    }\n  }, [anchorId, menuOpen])\n\n  // Triggers behavior in CopilotSummaryBanner component\n  const triggerCopilotSummary = useCallback(\n    (event: React.UIEvent<HTMLElement>) => {\n      const form = boxRef.current!.closest('form')\n      if (!form) return\n\n      setSummaryDisabled(true)\n      setMenuOpen(false)\n\n      const action = event.currentTarget.getAttribute('data-copilot-action')\n      const summaryTrigger = new CustomEvent(INIT_EVENT, {bubbles: true, detail: {action}})\n      const reenableSummary = () => {\n        setSummaryDisabled(false)\n      }\n\n      form.dispatchEvent(summaryTrigger)\n      form.addEventListener(END_EVENT, reenableSummary, {once: true})\n    },\n    [boxRef],\n  )\n\n  const enableGhostPilot = async () => {\n    updateGhostPilotEnrollment(true)\n  }\n\n  const disableGhostPilot = async () => {\n    updateGhostPilotEnrollment(false)\n  }\n\n  const updateGhostPilotEnrollment = async (enrolled: boolean) => {\n    if (ghostPilotEnabled && enrolled) {\n      return\n    }\n    if (!ghostPilotEnabled && !enrolled) {\n      return\n    }\n    const updateResponse = await verifiedFetch(\n      `/users/${userLogin}/feature_preview/${ghostPilotFeature}/${enrolled ? 'enroll' : 'unenroll'}`,\n      {\n        method: 'PATCH',\n      },\n    )\n\n    if (updateResponse.ok) {\n      for (const el of document.getElementsByTagName('copilot-text-completion')) {\n        // Reversed logic since ghostPilotEnabled is still in the old state\n        enrolled ? el.removeAttribute('data-disabled') : el.setAttribute('data-disabled', '')\n      }\n      const event = new CustomEvent(ghostPilotToggleEvent, {detail: {enabled: !ghostPilotEnabled}})\n      setGhostPilotEnabled(enrolled)\n      document.dispatchEvent(event)\n    }\n  }\n\n  return (\n    <div ref={boxRef} {...testIdProps('copilot-md-actions')}>\n      <ActionMenu open={menuOpen} onOpenChange={setMenuOpen} anchorRef={buttonRef}>\n        <ActionMenu.Overlay width=\"medium\">\n          <ActionList>\n            {(pullRequestSummaryEnabled || splitActionsEnabled) && (\n              <>\n                <ActionList.Group>\n                  <ActionList.GroupHeading>Generate</ActionList.GroupHeading>\n                  {pullRequestSummaryEnabled && (\n                    <ActionList.Item\n                      onSelect={triggerCopilotSummary}\n                      disabled={summaryDisabled}\n                      data-copilot-action={splitActionsEnabled ? 'summary' : 'all'}\n                      {...testIdProps('copilot-pr-summary-btn')}\n                    >\n                      Summary\n                      <ActionList.Description\n                        variant=\"block\"\n                        data-copilot-action=\"toggle\"\n                        {...testIdProps('copilot-pr-toggle-btn')}\n                      >\n                        Generate a summary of the changes in this pull request.\n                      </ActionList.Description>\n                    </ActionList.Item>\n                  )}\n                  {splitActionsEnabled && (\n                    <ActionList.Item\n                      onSelect={triggerCopilotSummary}\n                      disabled={summaryDisabled}\n                      data-copilot-action=\"outline\"\n                      {...testIdProps('copilot-pr-outline-btn')}\n                    >\n                      Outline\n                      <ActionList.Description variant=\"block\">\n                        Generate a list of the most important changed files in this pull request.\n                      </ActionList.Description>\n                    </ActionList.Item>\n                  )}\n                </ActionList.Group>\n              </>\n            )}\n            {ghostPilotAvailable && (pullRequestSummaryEnabled || splitActionsEnabled) && <ActionList.Divider />}\n            {ghostPilotAvailable && (\n              <>\n                <ActionList.Group>\n                  <ActionList.GroupHeading>Settings</ActionList.GroupHeading>\n                  <ActionMenu>\n                    <ActionMenu.Anchor>\n                      <ActionList.Item\n                        id=\"ghostPilotFeaturePreview\"\n                        {...testIdProps('copilot-autocomplete-toggle-btn')}\n                      >\n                        Text complete <Label variant=\"success\">Beta</Label>\n                        <ActionList.Description variant=\"block\">Text completions while typing</ActionList.Description>\n                      </ActionList.Item>\n                    </ActionMenu.Anchor>\n                    <ActionMenu.Overlay>\n                      <ActionList selectionVariant=\"single\">\n                        <ActionList.Item\n                          onSelect={enableGhostPilot}\n                          role=\"menuitemcheckbox\"\n                          selected={ghostPilotToggleState}\n                        >\n                          Enabled\n                        </ActionList.Item>\n                        <ActionList.Item\n                          onSelect={disableGhostPilot}\n                          role=\"menuitemcheckbox\"\n                          selected={!ghostPilotToggleState}\n                          {...testIdProps('copilot-autocomplete-disable-btn')}\n                        >\n                          Disabled\n                        </ActionList.Item>\n                      </ActionList>\n                    </ActionMenu.Overlay>\n                  </ActionMenu>\n                </ActionList.Group>\n              </>\n            )}\n            <ActionList.Divider />\n            <ActionList.LinkItem\n              href=\"https://docs.github.com/copilot/github-copilot-enterprise/copilot-pull-request-summaries/about-copilot-pull-request-summaries\"\n              target=\"_blank\"\n              {...testIdProps('copilot-pr-summary-rai-ux')}\n            >\n              Documentation\n              <ActionList.Description variant=\"block\">\n                Learn more on how to use Copilot for pull requests.\n              </ActionList.Description>\n            </ActionList.LinkItem>\n          </ActionList>\n        </ActionMenu.Overlay>\n      </ActionMenu>\n    </div>\n  )\n}\n\ntry{ CopilotMarkdownToolbarButton.displayName ||= 'CopilotMarkdownToolbarButton' } catch {}","import {registerReactPartial} from '@github-ui/react-core/register-partial'\nimport {CopilotMarkdownToolbarButton} from './CopilotMarkdownToolbarButton'\n\nregisterReactPartial('copilot-markdown-toolbar-button', {\n  Component: CopilotMarkdownToolbarButton,\n})\n","export const INIT_EVENT = 'copilot-pr-summary:init'\nexport const END_EVENT = 'copilot-pr-summary:end'\nexport const TEXT_COMPLETION_SUGGESTION_EVENT = 'copilot-text-completion:suggestion'\n","export class DeferredRegistry<T> {\n  private registrationEntries: Record<\n    string,\n    {\n      promise: Promise<T>\n      resolve?: (r: T) => void\n    }\n  > = {}\n\n  public register(name: string, registration: T) {\n    const entry = this.registrationEntries[name]\n    if (entry) {\n      entry.resolve?.(registration)\n    } else {\n      this.registrationEntries[name] = {\n        promise: Promise.resolve(registration),\n      }\n    }\n  }\n\n  public getRegistration(name: string): Promise<T> {\n    this.registrationEntries[name] ||= new Deferred()\n    return this.registrationEntries[name].promise\n  }\n}\n\nclass Deferred<T> {\n  declare promise\n  declare resolve: (r: T) => void\n\n  constructor() {\n    this.promise = new Promise<T>(resolve => {\n      this.resolve = resolve\n    })\n  }\n}\n","import type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {useCallback, useEffect, useRef, useState} from 'react'\n\ninterface ReactPartialAnchor {\n  /**\n   * DO NOT USE THIS PROPERTY DIRECTLY. It is meant to be used with useExternalAnchor and useOnAnchorClick\n   */\n  __wrapperElement: ReactPartialAnchorElement\n}\n\nexport interface ReactPartialAnchorProps {\n  reactPartialAnchor?: ReactPartialAnchor\n}\n\nexport function usePartialAnchorProps(\n  anchorElement: ReactPartialAnchorElement | undefined | null,\n): ReactPartialAnchorProps {\n  useEffect(() => {\n    const anchor = anchorElement?.anchor\n\n    if (!anchor) {\n      return\n    }\n\n    if ('disabled' in anchor) {\n      anchor.disabled = false\n    }\n    anchor.classList.remove('cursor-wait')\n  }, [anchorElement])\n\n  if (!anchorElement) {\n    return {}\n  }\n\n  return {\n    reactPartialAnchor: {\n      __wrapperElement: anchorElement,\n    },\n  }\n}\n\nexport function useExternalAnchor(reactPartialAnchor: ReactPartialAnchor) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor || null)\n  const [open, setOpen] = useState(false)\n\n  const onClick = useCallback(() => {\n    // toggle the open state when clicked\n    setOpen(!open)\n  }, [open, setOpen])\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    ref.current.setAttribute('aria-expanded', open.toString())\n    ref.current.setAttribute('aria-haspopup', 'true')\n  }, [ref, open])\n\n  useOnAnchorClick(reactPartialAnchor, onClick)\n\n  return {\n    ref,\n    open,\n    setOpen,\n  }\n}\n\nexport function useOnAnchorClick(reactPartialAnchor: ReactPartialAnchor, onClick: (event: MouseEvent) => void) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor)\n\n  useEffect(() => {\n    const element = ref.current\n    if (!element) {\n      return\n    }\n\n    element.addEventListener('click', onClick)\n    return () => element.removeEventListener('click', onClick)\n  }, [ref, onClick])\n}\n\nexport type PropsWithPartialAnchor<T> = T & Required<ReactPartialAnchorProps>\n","import {DeferredRegistry} from './deferred-registry'\n\nexport interface PartialRegistration {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Component: React.ComponentType<any>\n}\n\nexport const partialRegistry = new DeferredRegistry<PartialRegistration>()\n\nexport function getReactPartial(appName: string) {\n  return partialRegistry.getRegistration(appName)\n}\n","import {controller} from '@github/catalyst'\nimport {getReactPartial} from './react-partial-registry'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {ReactBaseElement} from './ReactBaseElement'\nimport {PartialEntry} from './PartialEntry'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\n\n// What is this silliness? Is it react or a web component?!\n// It's a web component we use to bootstrap react partials within the monolith.\n@controller\nclass ReactPartialElement extends ReactBaseElement<EmbeddedPartialData> {\n  nameAttribute = 'partial-name'\n\n  async getReactNode(embeddedData: EmbeddedPartialData) {\n    const {Component} = await getReactPartial(this.name)\n\n    // Some React Partials will be wrapped in a react-partial-anchor, which is used to conditionally render the Partial\n    const anchorElement = this.closest<ReactPartialAnchorElement>('react-partial-anchor')\n\n    return (\n      <PartialEntry\n        partialName={this.name}\n        embeddedData={embeddedData}\n        Component={Component}\n        wasServerRendered={this.hasSSRContent}\n        ssrError={this.ssrError}\n        anchorElement={anchorElement}\n      />\n    )\n  }\n}\n","import {partialRegistry, type PartialRegistration} from './react-partial-registry'\n// Import the web component to get it registered on the window\nimport './ReactPartialElement'\n\n// NOTE: if the signature of this method changes, also update the react-partial-name ESLint rule\n// /workspaces/github/ui/packages/eslint-plugin-github-monorepo/rules/react-partial-name.js\nexport function registerReactPartial(name: string, registration: PartialRegistration) {\n  partialRegistry.register(name, registration)\n}\n","import safeStorage from '@github-ui/safe-storage'\n\nconst {getItem, setItem, removeItem} = safeStorage('localStorage')\nconst REACT_PROFILING_ENABLED = 'REACT_PROFILING_ENABLED'\n\ninterface ReactProfilingModeMethods {\n  enable: () => void\n  disable: () => void\n  isEnabled: () => boolean\n}\n\nconst ReactProfilingMode: ReactProfilingModeMethods = {\n  enable: () => setItem(REACT_PROFILING_ENABLED, 'true'),\n  disable: () => removeItem(REACT_PROFILING_ENABLED),\n  isEnabled: () => !!getItem(REACT_PROFILING_ENABLED),\n}\n\nexport default ReactProfilingMode\n","export interface TestIdProps {\n  /** Test ID to be queried by automated testing suites */\n  'data-testid'?: string\n}\n\nexport const testIdProps = (value: string): TestIdProps => {\n  return {'data-testid': value}\n}\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  assertRelativePathOrSameOrigin(path)\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\nfunction assertRelativePathOrSameOrigin(path: string) {\n  if (process.env.NODE_ENV === 'test' && !window.location.origin) return\n  const url = new URL(path, window.location.origin)\n  if (url.origin !== window.location.origin) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetch(path, {...init, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetchJSON(path, {...init, headers})\n}\n","import {useState} from 'react'\nimport type {BrowserHistory, MemoryHistory} from '@remix-run/router'\nimport {Router} from 'react-router-dom'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\ntype Props = {\n  children: React.ReactNode\n  history: BrowserHistory | MemoryHistory\n}\n\nexport function PartialRouter({children, history}: Props) {\n  const [state, setState] = useState({\n    location: history.location,\n  })\n\n  useHydratedEffect(() => history.listen(setState), [history])\n\n  return (\n    <Router location={state.location} navigator={history}>\n      {children}\n    </Router>\n  )\n}\n\ntry{ PartialRouter.displayName ||= 'PartialRouter' } catch {}","// Think of this as the entry point into the framework\nimport React from 'react'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {BaseProviders} from './BaseProviders'\nimport type {BrowserHistory} from '@remix-run/router'\nimport {createMemoryHistory} from '@remix-run/router'\nimport {AppContextProvider} from './AppContextProvider'\nimport {PartialRouter} from './PartialRouter'\nimport {CommonElements} from './CommonElements'\nimport {createBrowserHistory} from './create-browser-history'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {usePartialAnchorProps} from './react-partial-anchor'\n\ninterface Props {\n  partialName: string\n  embeddedData: EmbeddedPartialData\n  Component: React.ComponentType\n  wasServerRendered: boolean\n  ssrError?: HTMLScriptElement\n  anchorElement?: ReactPartialAnchorElement | null\n}\n\nexport function PartialEntry({\n  partialName,\n  embeddedData,\n  Component,\n  wasServerRendered,\n  ssrError,\n  anchorElement,\n}: Props) {\n  // Create a ref to track the browser history:\n  const historyRef = React.useRef<BrowserHistory>()\n  const window = globalThis.window as Window | undefined\n\n  // For linking to work, we can just pass a dummy pathname here. We may consider plumbing the actual path in\n  if (!historyRef.current) {\n    historyRef.current = !window\n      ? createMemoryHistory({initialEntries: [{pathname: '/'}]})\n      : createBrowserHistory({window})\n  }\n  const history = historyRef.current\n  const partialAnchorProps = usePartialAnchorProps(anchorElement)\n\n  // Wrap the partial in an AppContextProvider and static Router so that react-core links\n  // will be functional.\n  return (\n    <BaseProviders appName={partialName} wasServerRendered={wasServerRendered}>\n      <AppContextProvider history={history} routes={[]}>\n        <PartialRouter history={history}>\n          <Component {...embeddedData.props} {...(partialAnchorProps as object)} />\n          <CommonElements ssrError={ssrError} />\n        </PartialRouter>\n      </AppContextProvider>\n    </BaseProviders>\n  )\n}\n\ntry{ PartialEntry.displayName ||= 'PartialEntry' } catch {}","import {target} from '@github/catalyst'\nimport {createRoot, hydrateRoot} from 'react-dom/client'\nimport type {createRoot as createRootType, hydrateRoot as hydrateRootType, Root} from 'react-dom/client'\nimport React from 'react'\nimport ReactProfilingMode from '@github-ui/react-profiling-mode'\nimport {EXPECTED_ERRORS} from './expected-errors'\nimport {sendStats} from '@github-ui/stats'\n\ntype ReactDOM = {\n  createRoot: typeof createRootType\n  hydrateRoot: typeof hydrateRootType\n}\n\nconst REACT_INVARIANT_ERROR_REGEX = /Minified React error #(?<invariant>\\d+)/\n\nexport abstract class ReactBaseElement<T> extends HTMLElement {\n  @target embeddedData: HTMLScriptElement | undefined\n  @target ssrError: HTMLScriptElement | undefined\n  @target reactRoot: HTMLElement | undefined\n  private root: Root | undefined\n\n  abstract nameAttribute: string\n  abstract getReactNode(embeddedData: T): Promise<React.ReactNode>\n\n  protected get name() {\n    return this.getAttribute(this.nameAttribute) as string\n  }\n\n  private get embeddedDataText() {\n    const text = this.embeddedData?.textContent\n\n    if (!text) {\n      throw new Error(`No embedded data provided for react element ${this.name}`)\n    }\n\n    return text\n  }\n\n  get hasSSRContent() {\n    return this.getAttribute('data-ssr') === 'true'\n  }\n\n  connectedCallback() {\n    this.renderReact()\n  }\n\n  disconnectedCallback() {\n    this.root?.unmount()\n    this.root = undefined\n  }\n\n  private async renderReact() {\n    if (!this.reactRoot) throw new Error('No react root provided')\n    let reactDom: ReactDOM = {\n      createRoot,\n      hydrateRoot,\n    }\n\n    // Override the react-dom import if we're in profiling mode\n    if (ReactProfilingMode.isEnabled()) {\n      reactDom = await this.getReactDomWithProfiling()\n    }\n\n    const embeddedData = JSON.parse(this.embeddedDataText) as T\n    const ssrErrorText = this.ssrError?.textContent\n    const node = await this.getReactNode(embeddedData)\n    const baseNode = <React.StrictMode>{node}</React.StrictMode>\n\n    if (ssrErrorText) {\n      this.logSSRError(ssrErrorText)\n    }\n\n    if (this.hasSSRContent) {\n      /**\n       * Styled-components automatically looks for style tags to hydrate on first page load, but will not detect them\n       * if they are added after the initial page load. This causes a hydration error because React isn't expecting\n       * a style tag within the app. To work around this, we need to manually move the style tags to the head before\n       * hydrating the app.\n       *\n       * During hydration, styled-components will create a new style tag which matches the one we moved to the head.\n       * This means that after hydration, we can safely remove the style tag we manually moved to the head.\n       */\n      const styles = this.querySelector('style[data-styled=\"true\"]')\n      if (styles) document.head.appendChild(styles)\n\n      // Hydrate the react app\n      // onRecoverableError is disabled until we have a react version with this fix in:\n      // https://github.com/facebook/react/pull/25692\n      this.root = reactDom.hydrateRoot(this.reactRoot, baseNode, {\n        onRecoverableError: error => {\n          if (!(error instanceof Error)) return\n\n          const match = REACT_INVARIANT_ERROR_REGEX.exec(error.message)\n          const invariant = String(match?.groups?.invariant)\n\n          sendStats({\n            incrementKey: 'REACT_HYDRATION_ERROR',\n            incrementTags: {\n              appName: this.name,\n              invariant,\n            },\n          })\n        },\n      })\n\n      // Remove the manually moved style tag after hydration\n      if (styles) {\n        // Wait until things are idle to remove the style tag. If we do it immediately, we can cause a flash of unstyled content.\n        requestIdleCallback(() => {\n          // styles could have already been removed by Turbo if a navigation happens quickly. Only remove it from the DOM if it's still there.\n          styles.parentElement?.removeChild(styles)\n        })\n      }\n    } else {\n      this.root = reactDom.createRoot(this.reactRoot)\n      this.root.render(baseNode)\n    }\n\n    this.classList.add('loaded')\n  }\n\n  private getReactDomWithProfiling() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return import('react-dom/profiling') as any as Promise<ReactDOM>\n  }\n\n  private logSSRError(ssrErrorText: string) {\n    if (EXPECTED_ERRORS[ssrErrorText]) {\n      // eslint-disable-next-line no-console\n      return console.error('SSR failed with an expected error:', EXPECTED_ERRORS[ssrErrorText])\n    }\n\n    try {\n      const error = JSON.parse(ssrErrorText) as PlatformJavascriptError\n      const stacktrace = parseFailbotStacktrace(error)\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', `${error.type}: ${error.value}\\n`, error, stacktrace)\n    } catch {\n      /**\n       * In the event we couldn't log the error, we should not break the application\n       */\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', ssrErrorText, 'unable to parse as json')\n    }\n  }\n}\n\nfunction parseFailbotStacktrace(error: PlatformJavascriptError) {\n  if (!error.stacktrace) return ''\n  let prefix = '\\n '\n  const stack = error.stacktrace.map((frame: PlatformStackframe) => {\n    const {function: func, filename, lineno, colno} = frame\n    const line = `${prefix} at ${func} (${filename}:${lineno}:${colno})`\n    prefix = ' '\n    return line\n  })\n  return stack.join('\\n')\n}\n\ntry{ REACT_INVARIANT_ERROR_REGEX.displayName ||= 'REACT_INVARIANT_ERROR_REGEX' } catch {}"],"names":["CopilotMarkdownToolbarButton","anchorId","userLogin","ghostPilotAvailable","ghostPilotEnrolled","pullRequestSummaryEnabled","menuOpen","setMenuOpen","useState","ghostPilotEnabled","setGhostPilotEnabled","summaryDisabled","setSummaryDisabled","boxRef","useRef","buttonRef","splitActionsEnabled","isFeatureEnabled","ghostPilotToggleEvent","ghostPilotToggleState","useSyncExternalStore","updateGhostPilotToggleState","detail","enabled","document","addEventListener","removeEventListener","useEffect","current","getElementById","toggleMenu","open","button","setAttribute","toString","triggerCopilotSummary","useCallback","form","closest","action","event","currentTarget","getAttribute","summaryTrigger","CustomEvent","INIT_EVENT","bubbles","dispatchEvent","END_EVENT","once","enableGhostPilot","updateGhostPilotEnrollment","disableGhostPilot","enrolled","updateResponse","verifiedFetch","method","ok","el","getElementsByTagName","removeAttribute","div","ref","testIdProps","ActionMenu","onOpenChange","anchorRef","Overlay","width","ActionList","Group","GroupHeading","Item","onSelect","disabled","data-copilot-action","Description","variant","Divider","Anchor","id","Label","selectionVariant","role","selected","LinkItem","href","target","displayName","registerReactPartial","Component","TEXT_COMPLETION_SUGGESTION_EVENT","DeferredRegistry","register","name","registration","entry","registrationEntries","resolve","promise","Promise","getRegistration","Deferred","constructor","usePartialAnchorProps","anchorElement","anchor","classList","remove","reactPartialAnchor","__wrapperElement","useExternalAnchor","setOpen","onClick","useOnAnchorClick","element","partialRegistry","ReactPartialElement","ReactBaseElement","getReactNode","embeddedData","appName","PartialEntry","partialName","wasServerRendered","hasSSRContent","ssrError","nameAttribute","controller","getItem","setItem","removeItem","safeStorage","REACT_PROFILING_ENABLED","enable","disable","isEnabled","value","path","init","assertRelativePathOrSameOrigin","url","URL","window","location","origin","headers","fetch","verifiedFetchJSON","Accept","body","JSON","stringify","undefined","reactFetch","reactFetchJSON","PartialRouter","children","history","state","setState","useHydratedEffect","listen","Router","navigator","historyRef","React","globalThis","createBrowserHistory","createMemoryHistory","initialEntries","pathname","partialAnchorProps","BaseProviders","AppContextProvider","routes","props","CommonElements","REACT_INVARIANT_ERROR_REGEX","HTMLElement","embeddedDataText","text","textContent","connectedCallback","renderReact","disconnectedCallback","root","unmount","reactRoot","reactDom","createRoot","hydrateRoot","ReactProfilingMode","getReactDomWithProfiling","parse","ssrErrorText","node","baseNode","logSSRError","styles","querySelector","head","appendChild","onRecoverableError","error","Error","match","exec","message","invariant","String","groups","sendStats","incrementKey","incrementTags","requestIdleCallback","parentElement","removeChild","render","add","EXPECTED_ERRORS","console","stacktrace","parseFailbotStacktrace","prefix","stack","map","function","func","filename","lineno","colno","frame","line","join","type"],"sourceRoot":""}