# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PlatformTypes::Bot`.
# Please instead update this file by running `bin/tapioca dsl PlatformTypes::Bot`.

class PlatformTypes::Bot < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(PlatformTypes::App) }
  def app; end

  sig { returns(T::Boolean) }
  def app?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def avatar_url; end

  sig { returns(T::Boolean) }
  def avatar_url?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def created_at; end

  sig { returns(T::Boolean) }
  def created_at?; end

  sig { returns(T.nilable(Integer)) }
  def database_id; end

  sig { returns(T::Boolean) }
  def database_id?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(T::Boolean) }
  def is_dependabot; end

  sig { returns(T::Boolean) }
  def is_dependabot?; end

  sig { returns(String) }
  def login; end

  sig { returns(T::Boolean) }
  def login?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def marketplace_listing_url; end

  sig { returns(T::Boolean) }
  def marketplace_listing_url?; end

  sig { returns(T.nilable(String)) }
  def name; end

  sig { returns(T::Boolean) }
  def name?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def profile_resource_path; end

  sig { returns(T::Boolean) }
  def profile_resource_path?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def profile_url; end

  sig { returns(T::Boolean) }
  def profile_url?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def resource_path; end

  sig { returns(T::Boolean) }
  def resource_path?; end

  sig { returns(T.nilable(PlatformTypes::BotStafftoolsInfo)) }
  def stafftools_info; end

  sig { returns(T::Boolean) }
  def stafftools_info?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def updated_at; end

  sig { returns(T::Boolean) }
  def updated_at?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def url; end

  sig { returns(T::Boolean) }
  def url?; end
end
