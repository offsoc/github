# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Actions::V0::ReputationScoreChange`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Actions::V0::ReputationScoreChange`.

class Hydro::Schemas::Github::Actions::V0::ReputationScoreChange
  sig do
    params(
      altered_hosts_file_density: T.nilable(Integer),
      billing_plan_owner: T.nilable(Hydro::Schemas::Github::Actions::V0::BillingPlanOwner),
      evaluation_date: T.nilable(Google::Protobuf::Timestamp),
      first_date: T.nilable(Google::Protobuf::Timestamp),
      has_private_project: T.nilable(T::Boolean),
      is_constant: T.nilable(T::Boolean),
      malicious_process_density: T.nilable(Integer),
      max_parallelism: T.nilable(Integer),
      reputation_score: T.nilable(Integer),
      run_average: T.nilable(Integer),
      run_count: T.nilable(Integer),
      run_density: T.nilable(Integer),
      run_deviation: T.nilable(Integer),
      suspicious_source_density: T.nilable(Integer)
    ).void
  end
  def initialize(altered_hosts_file_density: nil, billing_plan_owner: nil, evaluation_date: nil, first_date: nil, has_private_project: nil, is_constant: nil, malicious_process_density: nil, max_parallelism: nil, reputation_score: nil, run_average: nil, run_count: nil, run_density: nil, run_deviation: nil, suspicious_source_density: nil); end

  sig { returns(Integer) }
  def altered_hosts_file_density; end

  sig { params(value: Integer).void }
  def altered_hosts_file_density=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Actions::V0::BillingPlanOwner)) }
  def billing_plan_owner; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Actions::V0::BillingPlanOwner)).void }
  def billing_plan_owner=(value); end

  sig { void }
  def clear_altered_hosts_file_density; end

  sig { void }
  def clear_billing_plan_owner; end

  sig { void }
  def clear_evaluation_date; end

  sig { void }
  def clear_first_date; end

  sig { void }
  def clear_has_private_project; end

  sig { void }
  def clear_is_constant; end

  sig { void }
  def clear_malicious_process_density; end

  sig { void }
  def clear_max_parallelism; end

  sig { void }
  def clear_reputation_score; end

  sig { void }
  def clear_run_average; end

  sig { void }
  def clear_run_count; end

  sig { void }
  def clear_run_density; end

  sig { void }
  def clear_run_deviation; end

  sig { void }
  def clear_suspicious_source_density; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def evaluation_date; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def evaluation_date=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def first_date; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def first_date=(value); end

  sig { returns(T::Boolean) }
  def has_private_project; end

  sig { params(value: T::Boolean).void }
  def has_private_project=(value); end

  sig { returns(T::Boolean) }
  def is_constant; end

  sig { params(value: T::Boolean).void }
  def is_constant=(value); end

  sig { returns(Integer) }
  def malicious_process_density; end

  sig { params(value: Integer).void }
  def malicious_process_density=(value); end

  sig { returns(Integer) }
  def max_parallelism; end

  sig { params(value: Integer).void }
  def max_parallelism=(value); end

  sig { returns(Integer) }
  def reputation_score; end

  sig { params(value: Integer).void }
  def reputation_score=(value); end

  sig { returns(Integer) }
  def run_average; end

  sig { params(value: Integer).void }
  def run_average=(value); end

  sig { returns(Integer) }
  def run_count; end

  sig { params(value: Integer).void }
  def run_count=(value); end

  sig { returns(Integer) }
  def run_density; end

  sig { params(value: Integer).void }
  def run_density=(value); end

  sig { returns(Integer) }
  def run_deviation; end

  sig { params(value: Integer).void }
  def run_deviation=(value); end

  sig { returns(Integer) }
  def suspicious_source_density; end

  sig { params(value: Integer).void }
  def suspicious_source_density=(value); end
end
