---
summary: Search users
description: |-
  Find users via various criteria. This method returns up to 100 results [per page](${externalDocsUrl}/rest/guides/using-pagination-in-the-rest-api).

  When searching for users, you can get text match metadata for the issue **login**, public **email**, and **name** fields when you pass the `text-match` media type. For more details about highlighting search results, see [Text match metadata](${externalDocsUrl}/rest/search/search#text-match-metadata). For more details about how to receive highlighted search results, see [Text match metadata](${externalDocsUrl}/rest/search/search#text-match-metadata).

  For example, if you're looking for a list of popular users, you might try this query:

  `q=tom+repos:%3E42+followers:%3E1000`

  This query searches for users with the name `tom`. The results are restricted to users with more than 42 repositories and over 1,000 followers.

  This endpoint does not accept authentication and will only include publicly visible users. As an alternative, you can use the GraphQL API. The GraphQL API requires authentication and will return private users, including Enterprise Managed Users (EMUs), that you are authorized to view. For more information, see "[GraphQL Queries](${externalDocsUrl}/graphql/reference/queries#search)."
tags:
  - search
operationId: search/users
externalDocs:
  description: API method documentation
  url: '${externalDocsUrl}/rest/search/search#search-users'
parameters:
  - name: q
    description: The query contains one or more search keywords and qualifiers. Qualifiers
      allow you to limit your search to specific areas of ${apiName}. The REST API supports
      the same qualifiers as the web interface for ${apiName}. To learn more about the format of the query,
      see [Constructing a search query](${externalDocsUrl}/rest/search/search#constructing-a-search-query).
      See "[Searching users](${externalDocsUrl}/search-github/searching-on-github/searching-users)" for
      a detailed list of qualifiers.
    in: query
    required: true
    schema:
      type: string
  - name: sort
    description: 'Sorts the results of your query by number of `followers` or `repositories`,
      or when the person `joined` ${apiName}. Default: [best match](${externalDocsUrl}/rest/search/search#ranking-search-results)'
    in: query
    required: false
    schema:
      type: string
      enum:
        - followers
        - repositories
        - joined
  - $ref: '../../components/parameters/order.yaml'
  - $ref: '../../components/parameters/per-page.yaml'
  - $ref: '../../components/parameters/page.yaml'
responses:
  '200':
    description: Response
    content:
      application/json:
        schema:
          type: object
          required:
            - total_count
            - incomplete_results
            - items
          properties:
            total_count:
              type: integer
            incomplete_results:
              type: boolean
            items:
              type: array
              items:
                $ref: '../../components/schemas/user-search-result-item.yaml'
        examples:
          default:
            $ref: '../../components/examples/user-search-result-item-paginated.yaml'
  '304':
    $ref: '../../components/responses/not_modified.yaml'
  '503':
    $ref: '../../components/responses/service_unavailable.yaml'
  '422':
    $ref: '../../components/responses/validation_failed.yaml'
x-github-releases:
  - ghec
  - ghes: '>= 2.18'
  - api.github.com
x-github:
  githubCloudOnly: false
  enabledForGitHubApps: true

  category: search
  subcategory: search
x-github-internal:
  owner: '@github/code-intelligence-ktlo-reviewers'
  path: '/search/users'
  http-method: get
  service-tier: 2
  published: true
