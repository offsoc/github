# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Support::HelpHub::V1::RepositoryFork`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Support::HelpHub::V1::RepositoryFork`.

class MonolithTwirp::Support::HelpHub::V1::RepositoryFork
  sig do
    params(
      has_child_networks: T.nilable(T::Boolean),
      has_parent_networks: T.nilable(T::Boolean),
      is_root: T.nilable(T::Boolean),
      root: T.nilable(MonolithTwirp::Support::HelpHub::V1::RepositoryForkRoot)
    ).void
  end
  def initialize(has_child_networks: nil, has_parent_networks: nil, is_root: nil, root: nil); end

  sig { void }
  def clear_has_child_networks; end

  sig { void }
  def clear_has_parent_networks; end

  sig { void }
  def clear_is_root; end

  sig { void }
  def clear_root; end

  sig { returns(T::Boolean) }
  def has_child_networks; end

  sig { params(value: T::Boolean).void }
  def has_child_networks=(value); end

  sig { returns(T::Boolean) }
  def has_parent_networks; end

  sig { params(value: T::Boolean).void }
  def has_parent_networks=(value); end

  sig { returns(T::Boolean) }
  def is_root; end

  sig { params(value: T::Boolean).void }
  def is_root=(value); end

  sig { returns(T.nilable(MonolithTwirp::Support::HelpHub::V1::RepositoryForkRoot)) }
  def root; end

  sig { params(value: T.nilable(MonolithTwirp::Support::HelpHub::V1::RepositoryForkRoot)).void }
  def root=(value); end
end
