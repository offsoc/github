# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Search::V0::IndexDocument`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Search::V0::IndexDocument`.

class Hydro::Schemas::Github::Search::V0::IndexDocument
  sig do
    params(
      document: T.nilable(String),
      document_updated_at: T.nilable(Google::Protobuf::Timestamp),
      hydrated_at: T.nilable(Google::Protobuf::Timestamp),
      kind: T.nilable(T.any(Symbol, Integer)),
      request_id: T.nilable(String),
      routing: T.nilable(T.any(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::Search::V0::Entities::Pair], T::Array[Hydro::Schemas::Github::Search::V0::Entities::Pair])),
      slicing: T.nilable(T.any(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::Search::V0::Entities::Pair], T::Array[Hydro::Schemas::Github::Search::V0::Entities::Pair])),
      tracing_carrier: T.nilable(T.any(Google::Protobuf::Map[String, String], T::Hash[String, String]))
    ).void
  end
  def initialize(document: nil, document_updated_at: nil, hydrated_at: nil, kind: nil, request_id: nil, routing: T.unsafe(nil), slicing: T.unsafe(nil), tracing_carrier: T.unsafe(nil)); end

  sig { void }
  def clear_document; end

  sig { void }
  def clear_document_updated_at; end

  sig { void }
  def clear_hydrated_at; end

  sig { void }
  def clear_kind; end

  sig { void }
  def clear_request_id; end

  sig { void }
  def clear_routing; end

  sig { void }
  def clear_slicing; end

  sig { void }
  def clear_tracing_carrier; end

  sig { returns(String) }
  def document; end

  sig { params(value: String).void }
  def document=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def document_updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def document_updated_at=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def hydrated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def hydrated_at=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def kind; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def kind=(value); end

  sig { returns(String) }
  def request_id; end

  sig { params(value: String).void }
  def request_id=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::Search::V0::Entities::Pair]) }
  def routing; end

  sig { params(value: Google::Protobuf::RepeatedField[Hydro::Schemas::Github::Search::V0::Entities::Pair]).void }
  def routing=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::Search::V0::Entities::Pair]) }
  def slicing; end

  sig { params(value: Google::Protobuf::RepeatedField[Hydro::Schemas::Github::Search::V0::Entities::Pair]).void }
  def slicing=(value); end

  sig { returns(Google::Protobuf::Map[String, String]) }
  def tracing_carrier; end

  sig { params(value: Google::Protobuf::Map[String, String]).void }
  def tracing_carrier=(value); end
end
