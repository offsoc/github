
syntax = "proto3";

import "pkg_entities.proto";
import "common_entities.proto";
import "container_entities.proto";

package github.registry.metadata.v1.migrator;

option go_package = "github.com/github/registry-metadata/rms/twirp/proto/rms/v1/migrator";
option ruby_package = "Proto::RegistryMetadata::V1::Migrator";

service Migrator {
    rpc CreateVersion(CreateVersionRequest) returns (CreateVersionResponse);
    rpc GetVersion(GetVersionRequest) returns (GetVersionResponse);
    rpc DoesBlobExist(DoesBlobExistRequest) returns (DoesBlobExistResponse);
    rpc DoesManifestExist(DoesManifestExistRequest) returns (DoesManifestExistResponse);
    rpc DoesNameConflict(DoesNameConflictRequest) returns (DoesNameConflictResponse);
    rpc EmitDownloadEvent(EmitDownloadEventRequest) returns (EmitDownloadEventResponse);
    rpc SyncDownloadCount(SyncDownloadCountRequest) returns (SyncDownloadCountResponse);
}

message CreateVersionRequest {
    pkg.Package package = 2;
    pkg.Version version = 3;
    repeated common.VersionAlias aliases = 4;
    pkg.PackageFile file = 5;
}

message CreateVersionResponse {
    int64 migrated_package_id = 1;
    int64 migrated_version_id = 2;
}

message EmitDownloadEventRequest {
    string namespace = 1;
    string package_name = 2;
    string version_name = 3;
    pkg.Ecosystem ecosystem = 4; 
}

message EmitDownloadEventResponse {}

message GetVersionRequest {
    string namespace = 1;
    string package_name = 2;
    string version_name = 3;
    pkg.Ecosystem ecosystem = 4; 
}

message GetVersionResponse {
    int64 package_id = 1;
    int64 version_id = 2;
}

message DoesBlobExistRequest {
    string namespace = 1;
    string package_name = 2;
    oneof blob {
        container.Layer layer = 3;
    }
}

message DoesBlobExistResponse {}

message DoesManifestExistRequest {
    string namespace = 1;
    string package_name = 2;
    container.Tag tag = 3;
}

message DoesManifestExistResponse {}

message DoesNameConflictRequest {
    string namespace = 1;
    string package_name = 2;
    pkg.Ecosystem ecosystem = 3;
}

message DoesNameConflictResponse {}

message SyncDownloadCountRequest {
    string namespace = 1;
    string package_name = 2;
    string version_name = 3;
    pkg.Ecosystem ecosystem = 4; 
}

message SyncDownloadCountResponse {}
