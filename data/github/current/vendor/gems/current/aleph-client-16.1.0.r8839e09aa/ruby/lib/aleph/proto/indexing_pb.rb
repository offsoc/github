# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: aleph/proto/indexing.proto

require 'google/protobuf'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("aleph/proto/indexing.proto", :syntax => :proto3) do
    add_message "github.aleph.BounceNetworkNonce" do
      optional :network_id, :uint32, 1
      optional :hydro_source, :message, 2, "github.aleph.HydroMessage"
    end
    add_message "github.aleph.ComputeDepset" do
      optional :repo_commit, :message, 1, "github.aleph.RepoCommit"
      optional :language_id, :uint32, 3
      optional :hydro_source, :message, 2, "github.aleph.HydroMessage"
    end
    add_message "github.aleph.DeleteRepository" do
      optional :repo, :message, 1, "github.aleph.Repo"
      optional :hydro_source, :message, 2, "github.aleph.HydroMessage"
    end
    add_message "github.aleph.ExpireDepset" do
      optional :repo_commit, :message, 1, "github.aleph.RepoCommit"
      optional :language_id, :uint32, 3
      optional :hydro_source, :message, 2, "github.aleph.HydroMessage"
    end
    add_message "github.aleph.IndexCommit" do
      optional :id, :string, 7
      optional :repo_commit, :message, 1, "github.aleph.RepoCommit"
      optional :repo_name, :message, 2, "github.aleph.RepoName"
      optional :language_id, :uint32, 6
      optional :ref, :message, 3, "github.aleph.Ref"
      optional :ignore_indexing_feature_flags, :bool, 5
      optional :hydro_source, :message, 4, "github.aleph.HydroMessage"
    end
    add_message "github.aleph.Repo" do
      optional :network_id, :uint32, 1
      optional :repo_id, :uint64, 2
      optional :root_id, :uint64, 3
    end
    add_message "github.aleph.RepoName" do
      optional :owner, :string, 1
      optional :name, :string, 2
    end
    add_message "github.aleph.RepoCommit" do
      optional :repo, :message, 1, "github.aleph.Repo"
      optional :commit_oid, :string, 2
    end
    add_message "github.aleph.Ref" do
      optional :qualified_name, :string, 1
      optional :is_default, :bool, 2
    end
    add_message "github.aleph.HydroMessage" do
      optional :partition, :int32, 1
      optional :offset, :int64, 2
      optional :topic, :string, 3
    end
  end
end

module Aleph::Proto
  BounceNetworkNonce = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.BounceNetworkNonce").msgclass
  ComputeDepset = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.ComputeDepset").msgclass
  DeleteRepository = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.DeleteRepository").msgclass
  ExpireDepset = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.ExpireDepset").msgclass
  IndexCommit = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.IndexCommit").msgclass
  Repo = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.Repo").msgclass
  RepoName = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.RepoName").msgclass
  RepoCommit = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.RepoCommit").msgclass
  Ref = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.Ref").msgclass
  HydroMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("github.aleph.HydroMessage").msgclass
end
