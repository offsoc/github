syntax = "proto3";
package git_hub.launch.pbtypes.git_hub;

option go_package = "github.com/github/launch/services/pbtypes";

// GitHub related entities.
message Identity {
    // The Global Relay ID used to identify the entity in GraphQL queries.
    string global_id = 1;
}

// A GitHub App entity.
message App {
    Identity id = 1;
    // The unique slug used to identify the GitHub App.
    string slug = 2;
}

// An event that leads to the invocation of a Launch flow.
enum EventType {
    // UNKNOWN should not be used.
    UNKNOWN = 0;
    // PUSH is a github "push" event.
    PUSH = 1;
    // PULL_REQUEST is a github "pull_request" event.
    PULL_REQUEST = 2;
}

// A GitHub User entity.
message User {
    Identity id = 1;
}

// A GitHub Repository entity.
message Repository {
    Identity id = 1;
    User owner = 2;
    string name = 3;
}

message NameWithOwner {
    string owner = 1;
    string name = 2;
}

// An IntegrationInstallation (App) with a numerical ID.
// CheckRunEvent sends this; ideally we'd get the node_id instead of numerical ID.
// If we get the node_id, we can use the 'App' type and delete this type.
message Installation {
    int64 database_id = 2;
}

// The metadata for a check run.
// https://developer.github.com/v3/activity/events/types/#checkrunevent
message CheckRun {
    Identity id = 1;
    int64 database_id = 2;

    // Possible values are "queued", "in_progress", and "completed".
    string status = 3;
    // Possible values are "success", "failure", "neutral", "cancelled", "timed_out", and "action_required".
    string conclusion = 4;

    string name = 5;
    CheckSuite check_suite = 6;
    App app = 7;
}

// A GitHub CheckSuite entity.
message CheckSuite {
    Identity id = 1;
    int64 database_id = 2;

    App app = 3;

    // Possible values are "queued", "in_progress", and "completed".
    string status = 4;
    // Possible values are "success", "failure", "neutral", "cancelled", "timed_out", and "action_required".
    string conclusion = 5;

    string head_sha = 6;
}

// The metadata for a git push.
message Push {
    string ref = 1;
    bool created = 2;
    bool deleted = 3;
    bool forced = 4;
    string after_sha = 5;
}

// Deployment is a GitHub Deployment. It has many DeploymentStatuses.
message Deployment {
    Identity id = 1;
}
