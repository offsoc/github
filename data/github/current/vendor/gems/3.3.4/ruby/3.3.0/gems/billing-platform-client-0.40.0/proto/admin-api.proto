syntax = "proto3";

package billing_platform.api.v1;

option go_package = "lib/twirp/proto";
option ruby_package = "BillingPlatform::Api::V1";

service AdminApi {
    rpc ProcessDeadLetterQueue(ProcessDeadLetterQueueRequest) returns (ProcessDeadLetterQueueResponse);
    rpc GetAzureEmission(GetAzureEmissionRequest) returns (GetAzureEmissionResponse);
    rpc TriggerAzureEmission(TriggerAzureEmissionRequest) returns (TriggerAzureEmissionResponse);
    rpc TriggerInvoiceGeneration(TriggerInvoiceGenerationRequest) returns (TriggerInvoiceGenerationResponse);
    rpc TriggerWatermarkWorkflow(TriggerWatermarkWorkflowRequest) returns (TriggerWatermarkWorkflowResponse);
    rpc GenerateUsage(GenerateUsageRequest) returns (GenerateUsageResponse);
    rpc TriggerHighWatermarkRolloverJob(TriggerHighWatermarkRolloverRequest) returns (TriggerHighWatermarkRolloverResponse);
}

message ProcessDeadLetterQueueRequest {
    int64 num = 1;
    string queueName = 2;
}

message ProcessDeadLetterQueueResponse {
    bool success = 1;
}

message GetAzureEmissionRequest {
    string customerId = 1;
    string sku = 2;
    int64 year = 3;
    int64 month = 4;
    int64 day = 5;
}

message GetAzureEmissionResponse {
    AzureEmission azureEmission = 1;
}

message AzureEmission {
    string azurePartitionKey = 1;
    string meterId = 2;
    string subscriptionId = 3;
    double quantity = 4;
    AzureEmissionStatus status = 5;
    string errorMessage = 6;
    double GrossQuantity = 7;
}

enum AzureEmissionStatus {
    New = 0;
    Recorded = 1;
    Completed = 2;
    Failed = 3;
    Ignored = 4;
}

message TriggerAzureEmissionRequest {
    string customerId = 1;
    int64 year = 2;
    int64 month = 3;
    int64 day = 4;
}

message TriggerAzureEmissionResponse {
    bool success = 1;
}

message TriggerInvoiceGenerationRequest {
    string customerId = 1;
    int64 year = 2;
    int64 month = 3;
}

message TriggerInvoiceGenerationResponse {
    bool success = 1;
}

message TriggerWatermarkWorkflowRequest {
    string customerId = 1;
    string sku = 2;
    int64 year = 3;
    int64 month = 4;
    int64 day = 5;
    int64 hour = 6;
}

message TriggerWatermarkWorkflowResponse {
    bool success = 1;
}

message GenerateUsageRequest {
    string customerId = 1;
    string sku = 2;
    int64 orgId = 3;
    int64 repoId = 4;
    float amount = 5;
    float quantity = 6;
}

message GenerateUsageResponse {
    bool success = 1;
}

message TriggerHighWatermarkRolloverRequest {
    string customerId = 1;
    string sku = 2;
    int64 year = 3;
    int64 month = 4;
    bool dryRun = 5;
}

message TriggerHighWatermarkRolloverResponse {
    bool success = 1;
}
