# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Packageregistry::AuditLog::V1::AuditLogRequest`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Packageregistry::AuditLog::V1::AuditLogRequest`.

class MonolithTwirp::Packageregistry::AuditLog::V1::AuditLogRequest
  sig do
    params(
      actor: T.nilable(String),
      actor_id: T.nilable(Integer),
      created_at: T.nilable(String),
      key: T.nilable(String),
      msg: T.nilable(String),
      org: T.nilable(String),
      org_id: T.nilable(Integer),
      package_type: T.nilable(T.any(Symbol, Integer)),
      pkg: T.nilable(String),
      pkg_id: T.nilable(Integer),
      repo: T.nilable(String),
      repo_id: T.nilable(Integer)
    ).void
  end
  def initialize(actor: nil, actor_id: nil, created_at: nil, key: nil, msg: nil, org: nil, org_id: nil, package_type: nil, pkg: nil, pkg_id: nil, repo: nil, repo_id: nil); end

  sig { returns(String) }
  def actor; end

  sig { params(value: String).void }
  def actor=(value); end

  sig { returns(Integer) }
  def actor_id; end

  sig { params(value: Integer).void }
  def actor_id=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_actor_id; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_key; end

  sig { void }
  def clear_msg; end

  sig { void }
  def clear_org; end

  sig { void }
  def clear_org_id; end

  sig { void }
  def clear_package_type; end

  sig { void }
  def clear_pkg; end

  sig { void }
  def clear_pkg_id; end

  sig { void }
  def clear_repo; end

  sig { void }
  def clear_repo_id; end

  sig { returns(String) }
  def created_at; end

  sig { params(value: String).void }
  def created_at=(value); end

  sig { returns(String) }
  def key; end

  sig { params(value: String).void }
  def key=(value); end

  sig { returns(String) }
  def msg; end

  sig { params(value: String).void }
  def msg=(value); end

  sig { returns(String) }
  def org; end

  sig { params(value: String).void }
  def org=(value); end

  sig { returns(Integer) }
  def org_id; end

  sig { params(value: Integer).void }
  def org_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def package_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def package_type=(value); end

  sig { returns(String) }
  def pkg; end

  sig { params(value: String).void }
  def pkg=(value); end

  sig { returns(Integer) }
  def pkg_id; end

  sig { params(value: Integer).void }
  def pkg_id=(value); end

  sig { returns(String) }
  def repo; end

  sig { params(value: String).void }
  def repo=(value); end

  sig { returns(Integer) }
  def repo_id; end

  sig { params(value: Integer).void }
  def repo_id=(value); end
end
