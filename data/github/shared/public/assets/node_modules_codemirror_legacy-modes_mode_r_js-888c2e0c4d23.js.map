{"version":3,"file":"chunk-node_modules_codemirror_legacy-modes_mode_r_js-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@codemirror/legacy-modes/mode/r.js"],"sourcesContent":["function wordObj(words) {\n  var res = {};\n  for (var i = 0; i < words.length; ++i) res[words[i]] = true;\n  return res;\n}\nvar commonAtoms = [\"NULL\", \"NA\", \"Inf\", \"NaN\", \"NA_integer_\", \"NA_real_\", \"NA_complex_\", \"NA_character_\", \"TRUE\", \"FALSE\"];\nvar commonBuiltins = [\"list\", \"quote\", \"bquote\", \"eval\", \"return\", \"call\", \"parse\", \"deparse\"];\nvar commonKeywords = [\"if\", \"else\", \"repeat\", \"while\", \"function\", \"for\", \"in\", \"next\", \"break\"];\nvar commonBlockKeywords = [\"if\", \"else\", \"repeat\", \"while\", \"function\", \"for\"];\n\nvar atoms = wordObj(commonAtoms);\nvar builtins = wordObj(commonBuiltins);\nvar keywords = wordObj(commonKeywords);\nvar blockkeywords = wordObj(commonBlockKeywords);\nvar opChars = /[+\\-*\\/^<>=!&|~$:]/;\nvar curPunc;\n\nfunction tokenBase(stream, state) {\n  curPunc = null;\n  var ch = stream.next();\n  if (ch == \"#\") {\n    stream.skipToEnd();\n    return \"comment\";\n  } else if (ch == \"0\" && stream.eat(\"x\")) {\n    stream.eatWhile(/[\\da-f]/i);\n    return \"number\";\n  } else if (ch == \".\" && stream.eat(/\\d/)) {\n    stream.match(/\\d*(?:e[+\\-]?\\d+)?/);\n    return \"number\";\n  } else if (/\\d/.test(ch)) {\n    stream.match(/\\d*(?:\\.\\d+)?(?:e[+\\-]\\d+)?L?/);\n    return \"number\";\n  } else if (ch == \"'\" || ch == '\"') {\n    state.tokenize = tokenString(ch);\n    return \"string\";\n  } else if (ch == \"`\") {\n    stream.match(/[^`]+`/);\n    return \"string.special\";\n  } else if (ch == \".\" && stream.match(/.(?:[.]|\\d+)/)) {\n    return \"keyword\";\n  } else if (/[a-zA-Z\\.]/.test(ch)) {\n    stream.eatWhile(/[\\w\\.]/);\n    var word = stream.current();\n    if (atoms.propertyIsEnumerable(word)) return \"atom\";\n    if (keywords.propertyIsEnumerable(word)) {\n      // Block keywords start new blocks, except 'else if', which only starts\n      // one new block for the 'if', no block for the 'else'.\n      if (blockkeywords.propertyIsEnumerable(word) &&\n          !stream.match(/\\s*if(\\s+|$)/, false))\n        curPunc = \"block\";\n      return \"keyword\";\n    }\n    if (builtins.propertyIsEnumerable(word)) return \"builtin\";\n    return \"variable\";\n  } else if (ch == \"%\") {\n    if (stream.skipTo(\"%\")) stream.next();\n    return \"variableName.special\";\n  } else if (\n    (ch == \"<\" && stream.eat(\"-\")) ||\n      (ch == \"<\" && stream.match(\"<-\")) ||\n      (ch == \"-\" && stream.match(/>>?/))\n  ) {\n    return \"operator\";\n  } else if (ch == \"=\" && state.ctx.argList) {\n    return \"operator\";\n  } else if (opChars.test(ch)) {\n    if (ch == \"$\") return \"operator\";\n    stream.eatWhile(opChars);\n    return \"operator\";\n  } else if (/[\\(\\){}\\[\\];]/.test(ch)) {\n    curPunc = ch;\n    if (ch == \";\") return \"punctuation\";\n    return null;\n  } else {\n    return null;\n  }\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    if (stream.eat(\"\\\\\")) {\n      var ch = stream.next();\n      if (ch == \"x\") stream.match(/^[a-f0-9]{2}/i);\n      else if ((ch == \"u\" || ch == \"U\") && stream.eat(\"{\") && stream.skipTo(\"}\")) stream.next();\n      else if (ch == \"u\") stream.match(/^[a-f0-9]{4}/i);\n      else if (ch == \"U\") stream.match(/^[a-f0-9]{8}/i);\n      else if (/[0-7]/.test(ch)) stream.match(/^[0-7]{1,2}/);\n      return \"string.special\";\n    } else {\n      var next;\n      while ((next = stream.next()) != null) {\n        if (next == quote) { state.tokenize = tokenBase; break; }\n        if (next == \"\\\\\") { stream.backUp(1); break; }\n      }\n      return \"string\";\n    }\n  };\n}\n\nvar ALIGN_YES = 1, ALIGN_NO = 2, BRACELESS = 4\n\nfunction push(state, type, stream) {\n  state.ctx = {type: type,\n               indent: state.indent,\n               flags: 0,\n               column: stream.column(),\n               prev: state.ctx};\n}\nfunction setFlag(state, flag) {\n  var ctx = state.ctx\n  state.ctx = {type: ctx.type,\n               indent: ctx.indent,\n               flags: ctx.flags | flag,\n               column: ctx.column,\n               prev: ctx.prev}\n}\nfunction pop(state) {\n  state.indent = state.ctx.indent;\n  state.ctx = state.ctx.prev;\n}\n\nexport const r = {\n  name: \"r\",\n  startState: function(indentUnit) {\n    return {tokenize: tokenBase,\n            ctx: {type: \"top\",\n                  indent: -indentUnit,\n                  flags: ALIGN_NO},\n            indent: 0,\n            afterIdent: false};\n  },\n\n  token: function(stream, state) {\n    if (stream.sol()) {\n      if ((state.ctx.flags & 3) == 0) state.ctx.flags |= ALIGN_NO\n      if (state.ctx.flags & BRACELESS) pop(state)\n      state.indent = stream.indentation();\n    }\n    if (stream.eatSpace()) return null;\n    var style = state.tokenize(stream, state);\n    if (style != \"comment\" && (state.ctx.flags & ALIGN_NO) == 0) setFlag(state, ALIGN_YES)\n\n    if ((curPunc == \";\" || curPunc == \"{\" || curPunc == \"}\") && state.ctx.type == \"block\") pop(state);\n    if (curPunc == \"{\") push(state, \"}\", stream);\n    else if (curPunc == \"(\") {\n      push(state, \")\", stream);\n      if (state.afterIdent) state.ctx.argList = true;\n    }\n    else if (curPunc == \"[\") push(state, \"]\", stream);\n    else if (curPunc == \"block\") push(state, \"block\", stream);\n    else if (curPunc == state.ctx.type) pop(state);\n    else if (state.ctx.type == \"block\" && style != \"comment\") setFlag(state, BRACELESS)\n    state.afterIdent = style == \"variable\" || style == \"keyword\";\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    if (state.tokenize != tokenBase) return 0;\n    var firstChar = textAfter && textAfter.charAt(0), ctx = state.ctx,\n        closing = firstChar == ctx.type;\n    if (ctx.flags & BRACELESS) ctx = ctx.prev\n    if (ctx.type == \"block\") return ctx.indent + (firstChar == \"{\" ? 0 : cx.unit);\n    else if (ctx.flags & ALIGN_YES) return ctx.column + (closing ? 0 : 1);\n    else return ctx.indent + (closing ? 0 : cx.unit);\n  },\n\n  languageData: {\n    wordChars: \".\",\n    commentTokens: {line: \"#\"},\n    autocomplete: commonAtoms.concat(commonBuiltins, commonKeywords)\n  }\n};\n"],"names":["wordObj","words","res","i","length","curPunc","commonAtoms","commonBuiltins","commonKeywords","atoms","builtins","keywords","blockkeywords","opChars","tokenBase","stream","state","ch","next","skipToEnd","eat","eatWhile","match","test","tokenize","skipTo","backUp","word","current","propertyIsEnumerable","ctx","argList","push","type","indent","flags","column","prev","setFlag","flag","pop","r","name","startState","indentUnit","afterIdent","token","sol","indentation","eatSpace","style","textAfter","cx","firstChar","charAt","closing","unit","languageData","wordChars","commentTokens","line","autocomplete","concat"],"sourceRoot":""}