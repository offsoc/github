# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::EducationWeb::Repos::V1::RepoInfo`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::EducationWeb::Repos::V1::RepoInfo`.

class MonolithTwirp::EducationWeb::Repos::V1::RepoInfo
  sig do
    params(
      active_issue_count: T.nilable(Integer),
      archived: T.nilable(T::Boolean),
      deleted: T.nilable(T::Boolean),
      description: T.nilable(String),
      discussion_count: T.nilable(Integer),
      fork_count: T.nilable(Integer),
      is_private: T.nilable(T::Boolean),
      last_commit_at: T.nilable(String),
      programming_language: T.nilable(String),
      repository_id: T.nilable(Integer),
      repository_url: T.nilable(String),
      star_count: T.nilable(Integer),
      title: T.nilable(String),
      topics: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String]))
    ).void
  end
  def initialize(active_issue_count: nil, archived: nil, deleted: nil, description: nil, discussion_count: nil, fork_count: nil, is_private: nil, last_commit_at: nil, programming_language: nil, repository_id: nil, repository_url: nil, star_count: nil, title: nil, topics: T.unsafe(nil)); end

  sig { returns(Integer) }
  def active_issue_count; end

  sig { params(value: Integer).void }
  def active_issue_count=(value); end

  sig { returns(T::Boolean) }
  def archived; end

  sig { params(value: T::Boolean).void }
  def archived=(value); end

  sig { void }
  def clear_active_issue_count; end

  sig { void }
  def clear_archived; end

  sig { void }
  def clear_deleted; end

  sig { void }
  def clear_description; end

  sig { void }
  def clear_discussion_count; end

  sig { void }
  def clear_fork_count; end

  sig { void }
  def clear_is_private; end

  sig { void }
  def clear_last_commit_at; end

  sig { void }
  def clear_programming_language; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_repository_url; end

  sig { void }
  def clear_star_count; end

  sig { void }
  def clear_title; end

  sig { void }
  def clear_topics; end

  sig { returns(T::Boolean) }
  def deleted; end

  sig { params(value: T::Boolean).void }
  def deleted=(value); end

  sig { returns(String) }
  def description; end

  sig { params(value: String).void }
  def description=(value); end

  sig { returns(Integer) }
  def discussion_count; end

  sig { params(value: Integer).void }
  def discussion_count=(value); end

  sig { returns(Integer) }
  def fork_count; end

  sig { params(value: Integer).void }
  def fork_count=(value); end

  sig { returns(T::Boolean) }
  def is_private; end

  sig { params(value: T::Boolean).void }
  def is_private=(value); end

  sig { returns(String) }
  def last_commit_at; end

  sig { params(value: String).void }
  def last_commit_at=(value); end

  sig { returns(String) }
  def programming_language; end

  sig { params(value: String).void }
  def programming_language=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end

  sig { returns(String) }
  def repository_url; end

  sig { params(value: String).void }
  def repository_url=(value); end

  sig { returns(Integer) }
  def star_count; end

  sig { params(value: Integer).void }
  def star_count=(value); end

  sig { returns(String) }
  def title; end

  sig { params(value: String).void }
  def title=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def topics; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def topics=(value); end
end
