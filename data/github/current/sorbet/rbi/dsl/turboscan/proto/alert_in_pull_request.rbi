# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Turboscan::Proto::AlertInPullRequest`.
# Please instead update this file by running `bin/tapioca dsl Turboscan::Proto::AlertInPullRequest`.

class Turboscan::Proto::AlertInPullRequest
  sig do
    params(
      alert_number: T.nilable(Integer),
      analysis_id: T.nilable(Integer),
      autofix_accepted: T.nilable(T::Boolean),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      fixed: T.nilable(T::Boolean),
      fixed_at: T.nilable(Google::Protobuf::Timestamp),
      has_autofix: T.nilable(T::Boolean),
      ref_name_bytes: T.nilable(String),
      resolution: T.nilable(T.any(Symbol, Integer)),
      resolved_at: T.nilable(Google::Protobuf::Timestamp),
      rule_sarif_identifier: T.nilable(String),
      severity: T.nilable(T.any(Symbol, Integer)),
      tool: T.nilable(String),
      updated_at: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(alert_number: nil, analysis_id: nil, autofix_accepted: nil, created_at: nil, fixed: nil, fixed_at: nil, has_autofix: nil, ref_name_bytes: nil, resolution: nil, resolved_at: nil, rule_sarif_identifier: nil, severity: nil, tool: nil, updated_at: nil); end

  sig { returns(Integer) }
  def alert_number; end

  sig { params(value: Integer).void }
  def alert_number=(value); end

  sig { returns(Integer) }
  def analysis_id; end

  sig { params(value: Integer).void }
  def analysis_id=(value); end

  sig { returns(T::Boolean) }
  def autofix_accepted; end

  sig { params(value: T::Boolean).void }
  def autofix_accepted=(value); end

  sig { void }
  def clear_alert_number; end

  sig { void }
  def clear_analysis_id; end

  sig { void }
  def clear_autofix_accepted; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_fixed; end

  sig { void }
  def clear_fixed_at; end

  sig { void }
  def clear_has_autofix; end

  sig { void }
  def clear_ref_name_bytes; end

  sig { void }
  def clear_resolution; end

  sig { void }
  def clear_resolved_at; end

  sig { void }
  def clear_rule_sarif_identifier; end

  sig { void }
  def clear_severity; end

  sig { void }
  def clear_tool; end

  sig { void }
  def clear_updated_at; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(T::Boolean) }
  def fixed; end

  sig { params(value: T::Boolean).void }
  def fixed=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def fixed_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def fixed_at=(value); end

  sig { returns(T::Boolean) }
  def has_autofix; end

  sig { params(value: T::Boolean).void }
  def has_autofix=(value); end

  sig { returns(String) }
  def ref_name_bytes; end

  sig { params(value: String).void }
  def ref_name_bytes=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def resolution; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def resolution=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def resolved_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def resolved_at=(value); end

  sig { returns(String) }
  def rule_sarif_identifier; end

  sig { params(value: String).void }
  def rule_sarif_identifier=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def severity; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def severity=(value); end

  sig { returns(String) }
  def tool; end

  sig { params(value: String).void }
  def tool=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end
end
