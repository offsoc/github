#!/bin/bash

if [ -z "$EMERGENCY_MODE" ]; then
  set +x
  failed=
  export AWS_ACCESS_KEY_ID=$BUILD_GITHUB_GITHUB_ECR_AWS_ACCESS_KEY_ID
  [ -n "$AWS_ACCESS_KEY_ID" ] || failed=$(echo "Set BUILD_GITHUB_GITHUB_ECR_AWS_ACCESS_KEY_ID" 1>&2 && echo ${failed}y)
  export AWS_SECRET_ACCESS_KEY=$BUILD_GITHUB_GITHUB_ECR_AWS_SECRET_ACCESS_KEY
  [ -n "$AWS_SECRET_ACCESS_KEY" ] || failed=$(echo "Set BUILD_GITHUB_GITHUB_ECR_AWS_SECRET_ACCESS_KEY" 1>&2 && echo ${failed}y)
  export AWS_DEFAULT_REGION=$BUILD_GITHUB_GITHUB_ECR_REGION
  [ -n "$AWS_DEFAULT_REGION" ] || failed=$(echo "Set BUILD_GITHUB_GITHUB_ECR_REGION" 1>&2 && echo ${failed}y)
  export AWS_ECR_HOST=$BUILD_GITHUB_GITHUB_ECR_HOST
  [ -n "$AWS_ECR_HOST" ] || failed=$(echo "Set BUILD_GITHUB_GITHUB_ECR_HOST" 1>&2 && echo ${failed}y)
  set -x

  if [ -n "$failed" ]
  then
    exit 1
  fi
fi

echo "%%%FOLD {Creating $REPOSITORY_NAME AWS ECR}%%%"
echo

aws ecr describe-repositories --repository-names $REPOSITORY_NAME 1>/dev/null 2>&1 ||
  aws ecr create-repository --repository-name $REPOSITORY_NAME

set +x
if aws ecr get-login help | grep -q no-include-email; then
  export EMAIL_FLAG="--no-include-email"
else
  export EMAIL_FLAG=""
fi
eval "$(aws ecr get-login $EMAIL_FLAG)"
trap "docker logout https://$AWS_ECR_HOST" EXIT
set -x

echo "%%%END FOLD%%%"

set -e

image_name=$REPOSITORY_NAME:latest

echo "%%%FOLD {Pushing $image_name to $REPOSITORY_NAME AWS ECR}%%%"
echo

function push-with-retries() {
  local remote="$1"
  local attempts=1
  local failed=1
  set +e
  while [ $attempts -lt 3 ] 
  do
    timeout 80 docker push $remote
    EXIT_STATUS=$?
    if [ $EXIT_STATUS -eq 124 ];
    then
      echo "Docker push timed out. Try $attempts of 2"
    elif [ $EXIT_STATUS -eq 0 ];
    then
      echo 'Docker push succeeded.'
      failed=0
      break
    fi
    attempts=$[$attempts+1]
  done
  if [ $failed -eq 1 ];
  then
    echo "There was a problem pushing the docker image to ECR, please try to rebuild."
    exit 1
  fi
  set -e
}

function tag-and-push() {
  local image="$1"
  local remote="$2"
  trap "docker rmi $remote" EXIT
  docker tag $image_name $remote
  push-with-retries $remote
  docker rmi $remote
  trap "" EXIT
}

SHA="${JANKY_SHA1:-$(git rev-parse HEAD)}"
tag-and-push $image_name $AWS_ECR_HOST/$REPOSITORY_NAME:${TAG_PREFIX}${SHA}

if [ "$BUILD_BRANCH" == "master" ]
then
  tag-and-push $image_name $AWS_ECR_HOST/$REPOSITORY_NAME:${TAG_PREFIX}master
fi

if [ "$BUILD_BRANCH" == "main" ]
then
  tag-and-push $image_name $AWS_ECR_HOST/$REPOSITORY_NAME:${TAG_PREFIX}main
fi

echo "%%%END FOLD%%%"
