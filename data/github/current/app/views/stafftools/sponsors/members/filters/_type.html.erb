<%# erblint:counter DeprecatedComponentsCounter 1 %>
<details class="details-reset details-overlay select-menu d-inline-block mb-2 mr-2">
  <%= render Primer::ButtonComponent.new(tag: :summary, classes: "select-menu-button") do %>
    <i>Maintainer type:</i> <%= filter.key?(:type) ? filter[:type].humanize : "All" %>
  <% end %>

  <details-menu role="menu" class="select-menu-modal position-absolute" style="z-index: 99;" preload><%# erblint:disable Primer::Accessibility::DetailsMenuMigration %>
    <div class="select-menu-header">
      <span class="select-menu-title">Filter by maintainer type</span>
    </div>

    <div class="select-menu-list">
      <% all_params = { query: query, order: order, filter: filter.except(:type) } %>
      <a href="?<%= all_params.to_query %>" class="select-menu-item <% if filter[:type].blank? %>selected<% end%>">
        <%= primer_octicon(:check, classes: "select-menu-item-icon") %>
        <span class="select-menu-item-text">Users and organizations</span>
      </a>

      <% user_params = { query: query, order: order, filter: filter.merge(type: "user") } %>
      <a href="?<%= user_params.to_query %>" class="select-menu-item <% if filter[:type] == "user" %>selected<% end%>">
        <%= primer_octicon(:check, classes: "select-menu-item-icon") %>
        <span class="select-menu-item-text">Users only</span>
      </a>

      <% org_params = { query: query, order: order, filter: filter.merge(type: "organization") } %>
      <a href="?<%= org_params.to_query %>" class="select-menu-item <% if filter[:type] == "organization" %>selected<% end%>">
        <%= primer_octicon(:check, classes: "select-menu-item-icon") %>
        <span class="select-menu-item-text">Organizations only</span>
      </a>
    </div>
  </details-menu>
</details>
