# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::IntegrationInstallationDelete`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::IntegrationInstallationDelete`.

class Hydro::Schemas::Github::V1::IntegrationInstallationDelete
  sig do
    params(
      installation: T.nilable(Hydro::Schemas::Github::V1::Entities::IntegrationInstallation),
      integration: T.nilable(Hydro::Schemas::Github::V1::Entities::Integration),
      sender: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(installation: nil, integration: nil, sender: nil); end

  sig { void }
  def clear_installation; end

  sig { void }
  def clear_integration; end

  sig { void }
  def clear_sender; end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::IntegrationInstallation)) }
  def installation; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::IntegrationInstallation)).void }
  def installation=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Integration)) }
  def integration; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Integration)).void }
  def integration=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def sender; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def sender=(value); end
end
