# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Notifyd::Proto::Subscriptions::CreateRequest`.
# Please instead update this file by running `bin/tapioca dsl Notifyd::Proto::Subscriptions::CreateRequest`.

class Notifyd::Proto::Subscriptions::CreateRequest
  sig do
    params(
      custom_fields: T.nilable(T.any(Google::Protobuf::RepeatedField[Notifyd::Proto::Subscriptions::CustomField], T::Array[Notifyd::Proto::Subscriptions::CustomField])),
      filters: T.nilable(T.any(Google::Protobuf::RepeatedField[Notifyd::Proto::Subscriptions::Filter], T::Array[Notifyd::Proto::Subscriptions::Filter])),
      reason: T.nilable(String),
      topics: T.nilable(T.any(Google::Protobuf::RepeatedField[Notifyd::Proto::Subscriptions::Topic], T::Array[Notifyd::Proto::Subscriptions::Topic])),
      user_id: T.nilable(Integer)
    ).void
  end
  def initialize(custom_fields: T.unsafe(nil), filters: T.unsafe(nil), reason: nil, topics: T.unsafe(nil), user_id: nil); end

  sig { void }
  def clear_custom_fields; end

  sig { void }
  def clear_filters; end

  sig { void }
  def clear_reason; end

  sig { void }
  def clear_topics; end

  sig { void }
  def clear_user_id; end

  sig { returns(Google::Protobuf::RepeatedField[Notifyd::Proto::Subscriptions::CustomField]) }
  def custom_fields; end

  sig { params(value: Google::Protobuf::RepeatedField[Notifyd::Proto::Subscriptions::CustomField]).void }
  def custom_fields=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Notifyd::Proto::Subscriptions::Filter]) }
  def filters; end

  sig { params(value: Google::Protobuf::RepeatedField[Notifyd::Proto::Subscriptions::Filter]).void }
  def filters=(value); end

  sig { returns(String) }
  def reason; end

  sig { params(value: String).void }
  def reason=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Notifyd::Proto::Subscriptions::Topic]) }
  def topics; end

  sig { params(value: Google::Protobuf::RepeatedField[Notifyd::Proto::Subscriptions::Topic]).void }
  def topics=(value); end

  sig { returns(Integer) }
  def user_id; end

  sig { params(value: Integer).void }
  def user_id=(value); end
end
