# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Spokes::Proto::Types::V1::ReferenceUpdate`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Spokes::Proto::Types::V1::ReferenceUpdate`.

class GitHub::Spokes::Proto::Types::V1::ReferenceUpdate
  sig do
    params(
      after: T.nilable(GitHub::Spokes::Proto::Types::V1::ObjectID),
      before: T.nilable(GitHub::Spokes::Proto::Types::V1::ObjectID),
      reference: T.nilable(GitHub::Spokes::Proto::Types::V1::Reference)
    ).void
  end
  def initialize(after: nil, before: nil, reference: nil); end

  sig { returns(T.nilable(GitHub::Spokes::Proto::Types::V1::ObjectID)) }
  def after; end

  sig { params(value: T.nilable(GitHub::Spokes::Proto::Types::V1::ObjectID)).void }
  def after=(value); end

  sig { returns(T.nilable(GitHub::Spokes::Proto::Types::V1::ObjectID)) }
  def before; end

  sig { params(value: T.nilable(GitHub::Spokes::Proto::Types::V1::ObjectID)).void }
  def before=(value); end

  sig { void }
  def clear_after; end

  sig { void }
  def clear_before; end

  sig { void }
  def clear_reference; end

  sig { returns(T.nilable(GitHub::Spokes::Proto::Types::V1::Reference)) }
  def reference; end

  sig { params(value: T.nilable(GitHub::Spokes::Proto::Types::V1::Reference)).void }
  def reference=(value); end
end
