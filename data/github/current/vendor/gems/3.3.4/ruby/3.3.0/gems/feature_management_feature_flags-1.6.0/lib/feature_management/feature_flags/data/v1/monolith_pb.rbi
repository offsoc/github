# Code generated by protoc-gen-rbi. DO NOT EDIT.
# source: feature_management/feature_flags/data/v1/monolith.proto
# typed: strict

class FeatureManagement::FeatureFlags::Data::V1::MonolithCustomGateRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(FeatureManagement::FeatureFlags::Data::V1::MonolithCustomGateRequest) }
  def self.decode(str)
  end

  sig { params(msg: FeatureManagement::FeatureFlags::Data::V1::MonolithCustomGateRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(FeatureManagement::FeatureFlags::Data::V1::MonolithCustomGateRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: FeatureManagement::FeatureFlags::Data::V1::MonolithCustomGateRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      custom_gate_names: T.nilable(T::Array[String]),
      actor_ids: T.nilable(T::Array[String])
    ).void
  end
  def initialize(
    custom_gate_names: [],
    actor_ids: []
  )
  end

  # custom_gate_names is a list of custom gates names used to evaluate enabled for actors on the monolith.
  sig { returns(T::Array[String]) }
  def custom_gate_names
  end

  # custom_gate_names is a list of custom gates names used to evaluate enabled for actors on the monolith.
  sig { params(value: ::Google::Protobuf::RepeatedField).void }
  def custom_gate_names=(value)
  end

  # custom_gate_names is a list of custom gates names used to evaluate enabled for actors on the monolith.
  sig { void }
  def clear_custom_gate_names
  end

  # actor_ids is a list of actor ids to fetch.
  sig { returns(T::Array[String]) }
  def actor_ids
  end

  # actor_ids is a list of actor ids to fetch.
  sig { params(value: ::Google::Protobuf::RepeatedField).void }
  def actor_ids=(value)
  end

  # actor_ids is a list of actor ids to fetch.
  sig { void }
  def clear_actor_ids
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class FeatureManagement::FeatureFlags::Data::V1::MonolithCustomGateResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(FeatureManagement::FeatureFlags::Data::V1::MonolithCustomGateResponse) }
  def self.decode(str)
  end

  sig { params(msg: FeatureManagement::FeatureFlags::Data::V1::MonolithCustomGateResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(FeatureManagement::FeatureFlags::Data::V1::MonolithCustomGateResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: FeatureManagement::FeatureFlags::Data::V1::MonolithCustomGateResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      actors: T.nilable(T::Array[T.nilable(FeatureManagement::FeatureFlags::Data::V1::Actor)])
    ).void
  end
  def initialize(
    actors: []
  )
  end

  # actors is a list of actors and its enabled value if actor is enabled for the feature flag.
  sig { returns(T::Array[T.nilable(FeatureManagement::FeatureFlags::Data::V1::Actor)]) }
  def actors
  end

  # actors is a list of actors and its enabled value if actor is enabled for the feature flag.
  sig { params(value: ::Google::Protobuf::RepeatedField).void }
  def actors=(value)
  end

  # actors is a list of actors and its enabled value if actor is enabled for the feature flag.
  sig { void }
  def clear_actors
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end
