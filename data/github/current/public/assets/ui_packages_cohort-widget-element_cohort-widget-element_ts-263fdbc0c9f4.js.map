{"version":3,"file":"chunk-ui_packages_cohort-widget-element_cohort-widget-element_ts-xxxxxxxxxxxx.js","mappings":"yiBAGO,8BAAMA,4BAA4BC,YAOvCC,mBAAoB,CACd,IAAI,CAACC,YAAY,EACnB,IAAI,CAACA,YAAY,CAACC,gBAAgB,CAAC,SAAU,IAAI,CAACC,gBAAgB,CAACC,IAAI,CAAC,IAAI,EAEhF,CAEAD,iBAAiBE,CAAY,CAAE,CAC7B,IAAMC,EAAiB,EAA0BC,MAAM,CAAEC,eAAe,CAAC,EAAE,CAE3E,GAAIF,EAAgB,CAClB,IAAMG,EAAiBH,EAAeI,YAAY,CAAC,wBAC7CC,EAAiBL,EAAeI,YAAY,CAAC,wBAC7CE,EAAiBN,EAAeI,YAAY,CAAC,wBAC7CG,EAAiBP,EAAeI,YAAY,CAAC,wBAEnD,KAAI,CAACI,oBAAoB,CAACC,WAAW,CAAG,CAAC,iBAAiB,EAAEN,EAAe,CAAC,EAAI,EAChF,IAAI,CAACO,wBAAwB,CAACD,WAAW,CAAG,CAAC,qBAAqB,EAAEJ,EAAe,CAAC,EAAI,EACxF,IAAI,CAACM,wBAAwB,CAACF,WAAW,CAAG,CAAC,qBAAqB,EAAEH,EAAe,CAAC,EAAI,EAExF,IAAMM,EAAsBC,SAASC,cAAc,CAAC,gBAChDF,GACFA,CAAAA,EAAoBG,KAAK,CAAGR,GAAkB,EAAC,EAGjD,IAAMS,EAAsBH,SAASC,cAAc,CAAC,mBAChDE,GACFA,CAAAA,EAAoBD,KAAK,CAAGT,GAAkB,EAAC,CAEnD,KAAO,CACL,IAAI,CAACE,oBAAoB,CAACC,WAAW,CAAG,sBACxC,IAAI,CAACC,wBAAwB,CAACD,WAAW,CAAG,GAC5C,IAAI,CAACE,wBAAwB,CAACF,WAAW,CAAG,GAE5C,IAAMG,EAAsBC,SAASC,cAAc,CAAC,gBAChDF,GACFA,CAAAA,EAAoBG,KAAK,CAAG,EAAC,EAG/B,IAAMC,EAAsBH,SAASC,cAAc,CAAC,mBAChDE,GACFA,CAAAA,EAAoBD,KAAK,CAAG,EAAC,CAEjC,CACF,CACF,E,GAlDGd,EAAAA,EAAMA,C,CADIT,oBAAAA,SAAAA,CAAAA,eAAAA,KAAAA,G,GAEVS,EAAAA,EAAMA,C,CAFIT,oBAAAA,SAAAA,CAAAA,uBAAAA,KAAAA,G,GAGVS,EAAAA,EAAMA,C,CAHIT,oBAAAA,SAAAA,CAAAA,2BAAAA,KAAAA,G,GAIVS,EAAAA,EAAMA,C,CAJIT,oBAAAA,SAAAA,CAAAA,2BAAAA,KAAAA,G,GAKVS,EAAAA,EAAMA,C,CALIT,oBAAAA,SAAAA,CAAAA,oBAAAA,KAAAA,GAAAA,oBAAAA,EAAAA,CADZyB,EAAAA,EAAUA,C,CACEzB,oB","sources":["ui/packages/cohort-widget-element/cohort-widget-element.ts"],"sourcesContent":["import {controller, target} from '@github/catalyst'\n\n@controller\nexport class CohortWidgetElement extends HTMLElement {\n  @target cohortSelect!: HTMLSelectElement\n  @target totalCustomersOutput!: HTMLElement\n  @target onboardedCustomersOutput!: HTMLElement\n  @target remainingCustomersOutput!: HTMLElement\n  @target customerIdsOutput!: HTMLElement\n\n  connectedCallback() {\n    if (this.cohortSelect) {\n      this.cohortSelect.addEventListener('change', this.updateCohortInfo.bind(this))\n    }\n  }\n\n  updateCohortInfo(event: Event) {\n    const selectedOption = (<HTMLSelectElement>event.target).selectedOptions[0]\n\n    if (selectedOption) {\n      const totalCustomers = selectedOption.getAttribute('data-total-customers')\n      const onboardedCount = selectedOption.getAttribute('data-onboarded-count')\n      const remainingCount = selectedOption.getAttribute('data-remaining-count')\n      const newCustomerIds = selectedOption.getAttribute('data-new-customer-ids')\n\n      this.totalCustomersOutput.textContent = `Total Customers: ${totalCustomers}` ?? ''\n      this.onboardedCustomersOutput.textContent = `Onboarded Customers: ${onboardedCount}` ?? ''\n      this.remainingCustomersOutput.textContent = `Remaining Customers: ${remainingCount}` ?? ''\n\n      const newCustomerIdsInput = document.getElementById('customer_ids') as HTMLInputElement\n      if (newCustomerIdsInput) {\n        newCustomerIdsInput.value = newCustomerIds ?? ''\n      }\n\n      const remainingCountInput = document.getElementById('remaining_count') as HTMLInputElement\n      if (remainingCountInput) {\n        remainingCountInput.value = remainingCount ?? ''\n      }\n    } else {\n      this.totalCustomersOutput.textContent = 'No cohort selected.'\n      this.onboardedCustomersOutput.textContent = ''\n      this.remainingCustomersOutput.textContent = ''\n\n      const newCustomerIdsInput = document.getElementById('customer_ids') as HTMLInputElement\n      if (newCustomerIdsInput) {\n        newCustomerIdsInput.value = ''\n      }\n\n      const remainingCountInput = document.getElementById('remaining_count') as HTMLInputElement\n      if (remainingCountInput) {\n        remainingCountInput.value = ''\n      }\n    }\n  }\n}\n"],"names":["CohortWidgetElement","HTMLElement","connectedCallback","cohortSelect","addEventListener","updateCohortInfo","bind","event","selectedOption","target","selectedOptions","totalCustomers","getAttribute","onboardedCount","remainingCount","newCustomerIds","totalCustomersOutput","textContent","onboardedCustomersOutput","remainingCustomersOutput","newCustomerIdsInput","document","getElementById","value","remainingCountInput","controller"],"sourceRoot":""}