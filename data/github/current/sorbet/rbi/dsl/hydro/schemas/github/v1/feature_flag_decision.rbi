# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::FeatureFlagDecision`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::FeatureFlagDecision`.

class Hydro::Schemas::Github::V1::FeatureFlagDecision
  sig do
    params(
      decision: T.nilable(T.any(Symbol, Integer)),
      feature_flag: T.nilable(String),
      user: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      visitor_id: T.nilable(String)
    ).void
  end
  def initialize(decision: nil, feature_flag: nil, user: nil, visitor_id: nil); end

  sig { void }
  def clear_decision; end

  sig { void }
  def clear_feature_flag; end

  sig { void }
  def clear_user; end

  sig { void }
  def clear_visitor_id; end

  sig { returns(T.any(Symbol, Integer)) }
  def decision; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def decision=(value); end

  sig { returns(String) }
  def feature_flag; end

  sig { params(value: String).void }
  def feature_flag=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def user; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def user=(value); end

  sig { returns(String) }
  def visitor_id; end

  sig { params(value: String).void }
  def visitor_id=(value); end
end
