# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V2::Entities::Repository`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V2::Entities::Repository`.

class Hydro::Schemas::Github::V2::Entities::Repository
  sig do
    params(
      business_id: T.nilable(Google::Protobuf::Int32Value),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      default_branch: T.nilable(String),
      description: T.nilable(Google::Protobuf::StringValue),
      disk_usage: T.nilable(Integer),
      global_relay_id: T.nilable(String),
      id: T.nilable(Integer),
      is_archived: T.nilable(T::Boolean),
      is_fork: T.nilable(T::Boolean),
      name: T.nilable(String),
      network_id: T.nilable(Integer),
      next_global_id: T.nilable(String),
      organization_id: T.nilable(Google::Protobuf::Int32Value),
      owner_id: T.nilable(Google::Protobuf::Int32Value),
      owner_type: T.nilable(String),
      parent_id: T.nilable(Google::Protobuf::Int32Value),
      parent_owner_id: T.nilable(Integer),
      primary_language_name: T.nilable(Google::Protobuf::StringValue),
      public_fork_count: T.nilable(Integer),
      pushed_at: T.nilable(Google::Protobuf::Timestamp),
      stargazer_count: T.nilable(Integer),
      template: T.nilable(T::Boolean),
      updated_at: T.nilable(Google::Protobuf::Timestamp),
      visibility: T.nilable(T.any(Symbol, Integer)),
      wiki_world_writable: T.nilable(T::Boolean)
    ).void
  end
  def initialize(business_id: nil, created_at: nil, default_branch: nil, description: nil, disk_usage: nil, global_relay_id: nil, id: nil, is_archived: nil, is_fork: nil, name: nil, network_id: nil, next_global_id: nil, organization_id: nil, owner_id: nil, owner_type: nil, parent_id: nil, parent_owner_id: nil, primary_language_name: nil, public_fork_count: nil, pushed_at: nil, stargazer_count: nil, template: nil, updated_at: nil, visibility: nil, wiki_world_writable: nil); end

  sig { returns(T.nilable(Google::Protobuf::Int32Value)) }
  def business_id; end

  sig { params(value: T.nilable(Google::Protobuf::Int32Value)).void }
  def business_id=(value); end

  sig { void }
  def clear_business_id; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_default_branch; end

  sig { void }
  def clear_description; end

  sig { void }
  def clear_disk_usage; end

  sig { void }
  def clear_global_relay_id; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_is_archived; end

  sig { void }
  def clear_is_fork; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_network_id; end

  sig { void }
  def clear_next_global_id; end

  sig { void }
  def clear_organization_id; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_owner_type; end

  sig { void }
  def clear_parent_id; end

  sig { void }
  def clear_parent_owner_id; end

  sig { void }
  def clear_primary_language_name; end

  sig { void }
  def clear_public_fork_count; end

  sig { void }
  def clear_pushed_at; end

  sig { void }
  def clear_stargazer_count; end

  sig { void }
  def clear_template; end

  sig { void }
  def clear_updated_at; end

  sig { void }
  def clear_visibility; end

  sig { void }
  def clear_wiki_world_writable; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(String) }
  def default_branch; end

  sig { params(value: String).void }
  def default_branch=(value); end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def description; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def description=(value); end

  sig { returns(Integer) }
  def disk_usage; end

  sig { params(value: Integer).void }
  def disk_usage=(value); end

  sig { returns(String) }
  def global_relay_id; end

  sig { params(value: String).void }
  def global_relay_id=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(T::Boolean) }
  def is_archived; end

  sig { params(value: T::Boolean).void }
  def is_archived=(value); end

  sig { returns(T::Boolean) }
  def is_fork; end

  sig { params(value: T::Boolean).void }
  def is_fork=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(Integer) }
  def network_id; end

  sig { params(value: Integer).void }
  def network_id=(value); end

  sig { returns(String) }
  def next_global_id; end

  sig { params(value: String).void }
  def next_global_id=(value); end

  sig { returns(T.nilable(Google::Protobuf::Int32Value)) }
  def organization_id; end

  sig { params(value: T.nilable(Google::Protobuf::Int32Value)).void }
  def organization_id=(value); end

  sig { returns(T.nilable(Google::Protobuf::Int32Value)) }
  def owner_id; end

  sig { params(value: T.nilable(Google::Protobuf::Int32Value)).void }
  def owner_id=(value); end

  sig { returns(String) }
  def owner_type; end

  sig { params(value: String).void }
  def owner_type=(value); end

  sig { returns(T.nilable(Google::Protobuf::Int32Value)) }
  def parent_id; end

  sig { params(value: T.nilable(Google::Protobuf::Int32Value)).void }
  def parent_id=(value); end

  sig { returns(Integer) }
  def parent_owner_id; end

  sig { params(value: Integer).void }
  def parent_owner_id=(value); end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def primary_language_name; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def primary_language_name=(value); end

  sig { returns(Integer) }
  def public_fork_count; end

  sig { params(value: Integer).void }
  def public_fork_count=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def pushed_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def pushed_at=(value); end

  sig { returns(Integer) }
  def stargazer_count; end

  sig { params(value: Integer).void }
  def stargazer_count=(value); end

  sig { returns(T::Boolean) }
  def template; end

  sig { params(value: T::Boolean).void }
  def template=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def visibility; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def visibility=(value); end

  sig { returns(T::Boolean) }
  def wiki_world_writable; end

  sig { params(value: T::Boolean).void }
  def wiki_world_writable=(value); end
end
