# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Proto::Users::V1::BusinessListItem`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Proto::Users::V1::BusinessListItem`.

class GitHub::Proto::Users::V1::BusinessListItem
  sig do
    params(
      id: T.nilable(Integer),
      installations: T.nilable(T.any(Google::Protobuf::RepeatedField[GitHub::Proto::Users::V1::EnterpriseInstallationsListItem], T::Array[GitHub::Proto::Users::V1::EnterpriseInstallationsListItem])),
      licenses: T.nilable(T.any(Google::Protobuf::RepeatedField[GitHub::Proto::Users::V1::EnterpriseServerLicensesListItem], T::Array[GitHub::Proto::Users::V1::EnterpriseServerLicensesListItem])),
      name: T.nilable(String),
      slug: T.nilable(String),
      support_plan: T.nilable(String)
    ).void
  end
  def initialize(id: nil, installations: T.unsafe(nil), licenses: T.unsafe(nil), name: nil, slug: nil, support_plan: nil); end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_installations; end

  sig { void }
  def clear_licenses; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_slug; end

  sig { void }
  def clear_support_plan; end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(Google::Protobuf::RepeatedField[GitHub::Proto::Users::V1::EnterpriseInstallationsListItem]) }
  def installations; end

  sig do
    params(
      value: Google::Protobuf::RepeatedField[GitHub::Proto::Users::V1::EnterpriseInstallationsListItem]
    ).void
  end
  def installations=(value); end

  sig { returns(Google::Protobuf::RepeatedField[GitHub::Proto::Users::V1::EnterpriseServerLicensesListItem]) }
  def licenses; end

  sig do
    params(
      value: Google::Protobuf::RepeatedField[GitHub::Proto::Users::V1::EnterpriseServerLicensesListItem]
    ).void
  end
  def licenses=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(String) }
  def slug; end

  sig { params(value: String).void }
  def slug=(value); end

  sig { returns(String) }
  def support_plan; end

  sig { params(value: String).void }
  def support_plan=(value); end
end
