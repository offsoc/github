{"version":3,"file":"sponsors-explore-filter-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/hydro-analytics/hydro-analytics.ts","ui/packages/is-hash-navigation/is-hash-navigation.ts","ui/packages/react-core/deferred-registry.ts","ui/packages/react-core/prevent-autofocus.ts","ui/packages/react-core/react-partial-anchor.ts","ui/packages/react-core/react-partial-registry.ts","ui/packages/react-core/ReactPartialElement.tsx","ui/packages/react-core/register-partial.ts","ui/packages/react-profiling-mode/src/index.ts","ui/packages/safe-storage/session-storage.ts","ui/packages/soft-nav/events.ts","ui/packages/soft-nav/state.ts","ui/packages/soft-nav/states.ts","ui/packages/soft-nav/stats.ts","ui/packages/soft-nav/utils.ts","ui/packages/sponsors-explore-filter/AccountFilter.tsx","ui/packages/sponsors-explore-filter/EcosystemsFilter.tsx","ui/packages/sponsors-explore-filter/OrderingFilter.tsx","ui/packages/sponsors-explore-filter/DirectOnlyFilter.tsx","ui/packages/sponsors-explore-filter/SponsorsExploreFilter.tsx","ui/packages/sponsors-explore-filter/sponsors-explore-filter.ts","ui/packages/test-id-props/test-id-props.ts","ui/packages/use-navigate/use-navigate.ts","ui/packages/github-avatar/GitHubAvatar.tsx","ui/packages/react-core/PartialRouter.tsx","ui/packages/react-core/PartialEntry.tsx","ui/packages/react-core/ReactBaseElement.tsx"],"sourcesContent":["import {AnalyticsClient, getOptionsFromMeta} from '@github/hydro-analytics-client'\nimport type {Context} from '@github/hydro-analytics-client'\nimport safeStorage from '@github-ui/safe-storage'\nimport {isStaff} from '@github-ui/stats'\nconst {getItem} = safeStorage('localStorage')\n\ndeclare const process: {\n  env: {\n    NODE_ENV: string\n  }\n}\n\nconst dimensionPrefix = 'dimension_'\nlet hydroAnalyticsClient: AnalyticsClient | undefined\n\nconst MARKETING_PARAMS = ['utm_source', 'utm_medium', 'utm_campaign', 'utm_term', 'utm_content', 'scid']\n\ntry {\n  const options = getOptionsFromMeta('octolytics')\n\n  // Remove the base context because meta tags can change as the user navigates with Turbo\n  // These will be folded in for each event & page view\n  delete options.baseContext\n\n  hydroAnalyticsClient = new AnalyticsClient(options)\n} catch (_) {\n  // Failed to get options from meta tags.  This most likely means analytics are disabled.\n}\n\nfunction extendBaseContext(context?: Context) {\n  const baseContext = getOptionsFromMeta('octolytics').baseContext || {}\n\n  if (baseContext) {\n    delete baseContext.app_id\n    delete baseContext.event_url\n    delete baseContext.host\n\n    for (const [key, value] of Object.entries(baseContext)) {\n      // some octolytics meta tags are prefixed with dimension-, which we don't need with the new hydro-analytics-client\n      if (key.startsWith(dimensionPrefix)) {\n        baseContext[key.replace(dimensionPrefix, '')] = value\n        delete baseContext[key]\n      }\n    }\n  }\n\n  const visitorMeta = document.querySelector<HTMLMetaElement>('meta[name=visitor-payload]')\n  if (visitorMeta) {\n    const visitorHash = JSON.parse(atob(visitorMeta.content))\n    Object.assign(baseContext, visitorHash)\n  }\n\n  const urlParams = new URLSearchParams(window.location.search)\n  for (const [key, value] of urlParams) {\n    if (MARKETING_PARAMS.includes(key.toLowerCase())) {\n      baseContext[key] = value\n    }\n  }\n\n  // Include additional context from the page\n  baseContext.staff = isStaff().toString()\n\n  return Object.assign(baseContext, context)\n}\n\nexport function sendPageView(context?: Context) {\n  hydroAnalyticsClient?.sendPageView(extendBaseContext(context))\n}\n\nexport function sendEvent(type: string, context: Record<string, string | number | boolean | undefined | null> = {}) {\n  const service = document.head?.querySelector<HTMLMetaElement>('meta[name=\"current-catalog-service\"]')?.content\n\n  const cleanContext: Context = service ? {service} : {}\n\n  for (const [key, value] of Object.entries(context)) {\n    if (value !== undefined && value !== null) {\n      cleanContext[key] = `${value}`\n    }\n  }\n\n  if (hydroAnalyticsClient) {\n    const typeWithFallback = type || 'unknown'\n    const fullContext = extendBaseContext(cleanContext)\n    hydroAnalyticsClient.sendEvent(typeWithFallback, extendBaseContext(cleanContext))\n\n    if (process.env.NODE_ENV === 'development') {\n      debugSendEvent(typeWithFallback, fullContext)\n    }\n  }\n}\n\nexport function stringifyObjectValues(obj: object) {\n  return Object.fromEntries(Object.entries(obj).map(([k, v]) => [k, JSON.stringify(v)]))\n}\n\nfunction debugSendEvent(type: string, context: Context) {\n  if (getItem('hydro-debug.send-event') === 'true') {\n    // eslint-disable-next-line no-console\n    console.group('[hydro-debug.send-event]')\n    // eslint-disable-next-line no-console\n    console.log({type, context})\n    // eslint-disable-next-line no-console\n    console.groupEnd()\n  }\n}\n","// Check if the navigation is only a hash change.\nconst isHashNavigation = (currentUrl: string, targetUrl: string): boolean => {\n  const current = new URL(currentUrl, window.location.origin)\n  const target = new URL(targetUrl, window.location.origin)\n  const hasHash = target.href.includes('#')\n\n  return (\n    hasHash && current.host === target.host && current.pathname === target.pathname && current.search === target.search\n  )\n}\n\nexport default isHashNavigation\n","export class DeferredRegistry<T> {\n  private registrationEntries: Record<\n    string,\n    {\n      promise: Promise<T>\n      resolve?: (r: T) => void\n    }\n  > = {}\n\n  public register(name: string, registration: T) {\n    const entry = this.registrationEntries[name]\n    if (entry) {\n      entry.resolve?.(registration)\n    } else {\n      this.registrationEntries[name] = {\n        promise: Promise.resolve(registration),\n      }\n    }\n  }\n\n  public getRegistration(name: string): Promise<T> {\n    this.registrationEntries[name] ||= new Deferred()\n    return this.registrationEntries[name].promise\n  }\n}\n\nclass Deferred<T> {\n  declare promise\n  declare resolve: (r: T) => void\n\n  constructor() {\n    this.promise = new Promise<T>(resolve => {\n      this.resolve = resolve\n    })\n  }\n}\n","export const PREVENT_AUTOFOCUS_KEY = '__gh__react-core-preventAutofocus'\n","import type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {useCallback, useEffect, useRef, useState} from 'react'\n\ninterface ReactPartialAnchor {\n  /**\n   * DO NOT USE THIS PROPERTY DIRECTLY. It is meant to be used with useExternalAnchor and useOnAnchorClick\n   */\n  __wrapperElement: ReactPartialAnchorElement\n}\n\nexport interface ReactPartialAnchorProps {\n  reactPartialAnchor?: ReactPartialAnchor\n}\n\nexport function usePartialAnchorProps(\n  anchorElement: ReactPartialAnchorElement | undefined | null,\n): ReactPartialAnchorProps {\n  useEffect(() => {\n    const anchor = anchorElement?.anchor\n\n    if (!anchor) {\n      return\n    }\n\n    if ('disabled' in anchor) {\n      anchor.disabled = false\n    }\n    anchor.classList.remove('cursor-wait')\n  }, [anchorElement])\n\n  if (!anchorElement) {\n    return {}\n  }\n\n  return {\n    reactPartialAnchor: {\n      __wrapperElement: anchorElement,\n    },\n  }\n}\n\nexport function useExternalAnchor(reactPartialAnchor: ReactPartialAnchor) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor || null)\n  const [open, setOpen] = useState(false)\n\n  const onClick = useCallback(() => {\n    // toggle the open state when clicked\n    setOpen(!open)\n  }, [open, setOpen])\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    ref.current.setAttribute('aria-expanded', open.toString())\n    ref.current.setAttribute('aria-haspopup', 'true')\n  }, [ref, open])\n\n  useOnAnchorClick(reactPartialAnchor, onClick)\n\n  return {\n    ref,\n    open,\n    setOpen,\n  }\n}\n\nexport function useOnAnchorClick(reactPartialAnchor: ReactPartialAnchor, onClick: (event: MouseEvent) => void) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor)\n\n  useEffect(() => {\n    const element = ref.current\n    if (!element) {\n      return\n    }\n\n    element.addEventListener('click', onClick)\n    return () => element.removeEventListener('click', onClick)\n  }, [ref, onClick])\n}\n\nexport type PropsWithPartialAnchor<T> = T & Required<ReactPartialAnchorProps>\n","import {DeferredRegistry} from './deferred-registry'\n\nexport interface PartialRegistration {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Component: React.ComponentType<any>\n}\n\nexport const partialRegistry = new DeferredRegistry<PartialRegistration>()\n\nexport function getReactPartial(appName: string) {\n  return partialRegistry.getRegistration(appName)\n}\n","import {controller} from '@github/catalyst'\nimport {getReactPartial} from './react-partial-registry'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {ReactBaseElement} from './ReactBaseElement'\nimport {PartialEntry} from './PartialEntry'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\n\n// What is this silliness? Is it react or a web component?!\n// It's a web component we use to bootstrap react partials within the monolith.\n@controller\nclass ReactPartialElement extends ReactBaseElement<EmbeddedPartialData> {\n  nameAttribute = 'partial-name'\n\n  async getReactNode(embeddedData: EmbeddedPartialData) {\n    const {Component} = await getReactPartial(this.name)\n\n    // Some React Partials will be wrapped in a react-partial-anchor, which is used to conditionally render the Partial\n    const anchorElement = this.closest<ReactPartialAnchorElement>('react-partial-anchor')\n\n    return (\n      <PartialEntry\n        partialName={this.name}\n        embeddedData={embeddedData}\n        Component={Component}\n        wasServerRendered={this.hasSSRContent}\n        ssrError={this.ssrError}\n        anchorElement={anchorElement}\n      />\n    )\n  }\n}\n","import {partialRegistry, type PartialRegistration} from './react-partial-registry'\n// Import the web component to get it registered on the window\nimport './ReactPartialElement'\n\n// NOTE: if the signature of this method changes, also update the react-partial-name ESLint rule\n// /workspaces/github/ui/packages/eslint-plugin-github-monorepo/rules/react-partial-name.js\nexport function registerReactPartial(name: string, registration: PartialRegistration) {\n  partialRegistry.register(name, registration)\n}\n","import safeStorage from '@github-ui/safe-storage'\n\nconst {getItem, setItem, removeItem} = safeStorage('localStorage')\nconst REACT_PROFILING_ENABLED = 'REACT_PROFILING_ENABLED'\n\ninterface ReactProfilingModeMethods {\n  enable: () => void\n  disable: () => void\n  isEnabled: () => boolean\n}\n\nconst ReactProfilingMode: ReactProfilingModeMethods = {\n  enable: () => setItem(REACT_PROFILING_ENABLED, 'true'),\n  disable: () => removeItem(REACT_PROFILING_ENABLED),\n  isEnabled: () => !!getItem(REACT_PROFILING_ENABLED),\n}\n\nexport default ReactProfilingMode\n","import safeStorage from './safe-storage'\n\nexport const {getItem, setItem, removeItem} = safeStorage('sessionStorage')\n","import {SOFT_NAV_STATE} from './states'\n\nexport type SoftNavMechanism = 'turbo' | 'react' | 'turbo.frame'\n\nclass SoftNavEvent extends Event {\n  mechanism: SoftNavMechanism\n\n  constructor(mechanism: SoftNavMechanism, type: string) {\n    super(type)\n    this.mechanism = mechanism\n  }\n}\n\nexport class SoftNavStartEvent extends SoftNavEvent {\n  constructor(mechanism: SoftNavMechanism) {\n    super(mechanism, SOFT_NAV_STATE.START)\n  }\n}\n\nexport class SoftNavSuccessEvent extends SoftNavEvent {\n  visitCount: number\n\n  constructor(mechanism: SoftNavMechanism, visitCount: number) {\n    super(mechanism, SOFT_NAV_STATE.SUCCESS)\n    this.visitCount = visitCount\n  }\n}\n\nexport class SoftNavErrorEvent extends SoftNavEvent {\n  error: string\n\n  constructor(mechanism: SoftNavMechanism, error: string) {\n    super(mechanism, SOFT_NAV_STATE.ERROR)\n    this.error = error\n  }\n}\n\nexport class SoftNavEndEvent extends SoftNavEvent {\n  constructor(mechanism: SoftNavMechanism) {\n    super(mechanism, SOFT_NAV_STATE.END)\n  }\n}\n","import {SOFT_NAV_STATE} from './states'\nimport {\n  SoftNavEndEvent,\n  SoftNavErrorEvent,\n  type SoftNavMechanism,\n  SoftNavStartEvent,\n  SoftNavSuccessEvent,\n} from './events'\nimport {markStart, sendFailureStats, sendRenderStats} from './stats'\nimport {\n  clearSoftNav,\n  getSoftNavFailReason,\n  getSoftNavMechanism,\n  setSoftNavMechanism,\n  unsetSoftNav,\n  setSoftNavReferrer,\n  setSoftNavReactAppName,\n  inSoftNav,\n  getCurrentReactAppName,\n  DEFAULT_SOFT_NAV_ERROR_REASON,\n  setLatestMechanism,\n} from './utils'\n\ninterface SoftNavOptions {\n  skipIfGoingToReactApp?: boolean\n  allowedMechanisms?: SoftNavMechanism[]\n}\n\nlet visitCount = 0\n\nexport function initSoftNav() {\n  visitCount = 0\n  document.dispatchEvent(new Event(SOFT_NAV_STATE.INITIAL))\n\n  clearSoftNav()\n}\n\nexport function startSoftNav(mechanism: SoftNavMechanism) {\n  if (inSoftNav()) return\n\n  startProgressBar()\n  document.dispatchEvent(new SoftNavStartEvent(mechanism))\n\n  setSoftNavMechanism(mechanism)\n  setSoftNavReactAppName()\n  setSoftNavReferrer()\n  markStart()\n}\n\nexport function succeedSoftNav(options: SoftNavOptions = {}) {\n  if (!canTriggerEvent(options)) return\n\n  visitCount += 1\n\n  document.dispatchEvent(new SoftNavSuccessEvent(getSoftNavMechanism(), visitCount))\n  endSoftNav(options)\n}\n\nexport function failSoftNav(options: SoftNavOptions = {}) {\n  if (!canTriggerEvent(options)) return\n\n  visitCount = 0\n  const reason = getSoftNavFailReason() || DEFAULT_SOFT_NAV_ERROR_REASON\n  document.dispatchEvent(new SoftNavErrorEvent(getSoftNavMechanism(), reason))\n\n  endProgressBar()\n  sendFailureStats(reason)\n  clearSoftNav()\n}\n\nexport function endSoftNav(options: SoftNavOptions = {}) {\n  if (!canTriggerEvent(options)) return\n\n  const mechanism = getSoftNavMechanism()\n  endProgressBar()\n  document.dispatchEvent(new SoftNavEndEvent(mechanism))\n\n  unsetSoftNav()\n  setLatestMechanism(mechanism)\n}\n\nexport function renderedSoftNav(options: SoftNavOptions = {}) {\n  if (!canTriggerEvent(options)) return\n\n  sendRenderStats()\n  document.dispatchEvent(new Event(SOFT_NAV_STATE.RENDER))\n}\n\nexport function updateFrame() {\n  document.dispatchEvent(new Event(SOFT_NAV_STATE.FRAME_UPDATE))\n}\n\nfunction startProgressBar() {\n  document.dispatchEvent(new Event(SOFT_NAV_STATE.PROGRESS_BAR.START))\n}\n\nfunction endProgressBar() {\n  document.dispatchEvent(new Event(SOFT_NAV_STATE.PROGRESS_BAR.END))\n}\n\nfunction canTriggerEvent({skipIfGoingToReactApp, allowedMechanisms = []}: SoftNavOptions = {}) {\n  return (\n    inSoftNav() &&\n    (allowedMechanisms.length === 0 || allowedMechanisms.includes(getSoftNavMechanism())) &&\n    (!skipIfGoingToReactApp || !getCurrentReactAppName())\n  )\n}\n","export const SOFT_NAV_STATE = Object.freeze({\n  INITIAL: 'soft-nav:initial',\n  START: 'soft-nav:start',\n  SUCCESS: 'soft-nav:success',\n  ERROR: 'soft-nav:error',\n  FRAME_UPDATE: 'soft-nav:frame-update',\n  END: 'soft-nav:end',\n  RENDER: 'soft-nav:render',\n  PROGRESS_BAR: {\n    START: 'soft-nav:progress-bar:start',\n    END: 'soft-nav:progress-bar:end',\n  },\n})\n","import {sendStats} from '@github-ui/stats'\nimport {getCurrentReactAppName, getSoftNavMechanism, getSoftNavReactAppName, getSoftNavReferrer} from './utils'\nimport type {SoftNavMechanism} from './events'\n\nexport const SOFT_NAV_DURATION_MARK = 'stats:soft-nav-duration'\nexport const MECHANISM_MAPPING: Record<SoftNavMechanism | 'ui' | 'hard', PlatformBrowserSoftNavigationMechanism> = {\n  turbo: 'TURBO',\n  react: 'REACT',\n  'turbo.frame': 'FRAME',\n  ui: 'UI',\n  hard: 'HARD',\n}\nexport function markStart() {\n  // browswers only record the first ~150 resources\n  // clearing it here provides room to track additional resources loaded during the soft-nav\n  performance.clearResourceTimings()\n  performance.mark(SOFT_NAV_DURATION_MARK)\n}\n\nfunction getDurationSinceLastSoftNav() {\n  if (performance.getEntriesByName(SOFT_NAV_DURATION_MARK).length === 0) {\n    return null\n  }\n\n  performance.measure(SOFT_NAV_DURATION_MARK, SOFT_NAV_DURATION_MARK)\n  const measures = performance.getEntriesByName(SOFT_NAV_DURATION_MARK)\n  const measure = measures.pop()\n  return measure ? measure.duration : null\n}\n\nexport function sendFailureStats(turboFailureReason: string) {\n  sendStats({\n    turboFailureReason,\n    turboStartUrl: getSoftNavReferrer(),\n    turboEndUrl: window.location.href,\n  })\n}\n\nexport function sendRenderStats() {\n  const duration = getDurationSinceLastSoftNav()\n\n  if (!duration) return\n\n  const mechanism = MECHANISM_MAPPING[getSoftNavMechanism()]\n  const roundedDuration = Math.round(duration)\n\n  if (mechanism === MECHANISM_MAPPING.react)\n    document.dispatchEvent(new CustomEvent('staffbar-update', {detail: {duration: roundedDuration}}))\n\n  sendStats({\n    requestUrl: window.location.href,\n    softNavigationTiming: {\n      mechanism,\n      destination: getCurrentReactAppName() || 'rails',\n      duration: roundedDuration,\n      initiator: getSoftNavReactAppName() || 'rails',\n    },\n  })\n}\n","import {getItem, removeItem, setItem} from '@github-ui/safe-storage/session-storage'\nimport type {SoftNavMechanism} from './events'\n\nexport const DEFAULT_SOFT_NAV_ERROR_REASON = 'reload'\n\nexport const SOFT_NAV_FAIL = 'soft-nav:fail'\nexport const SOFT_NAV_FAIL_REFERRER = 'soft-nav:fail-referrer'\nexport const SOFT_NAV_REFERRER = 'soft-nav:referrer'\nexport const SOFT_NAV_MARK = 'soft-nav:marker'\nexport const SOFT_NAV_REACT_APP_NAME = 'soft-nav:react-app-name'\nexport const SOFT_NAV_LATEST_MECHANISM = 'soft-nav:latest-mechanism'\n\nexport function clearSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n  removeItem(SOFT_NAV_REFERRER)\n  removeItem(SOFT_NAV_FAIL)\n  removeItem(SOFT_NAV_FAIL_REFERRER)\n  removeItem(SOFT_NAV_REACT_APP_NAME)\n  removeItem(SOFT_NAV_LATEST_MECHANISM)\n}\n\nexport function setSoftNavMechanism(mechanism: SoftNavMechanism) {\n  setItem(SOFT_NAV_MARK, mechanism)\n}\n\nexport function unsetSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n}\n\nexport function inSoftNav() {\n  const softNav = getItem(SOFT_NAV_MARK)\n  return softNav && softNav !== '0'\n}\n\nexport function getSoftNavMechanism(): SoftNavMechanism {\n  return getItem(SOFT_NAV_MARK) as SoftNavMechanism\n}\n\nexport function hasSoftNavFailure() {\n  return Boolean(getSoftNavFailReason())\n}\n\nexport function getSoftNavFailReason() {\n  return getItem(SOFT_NAV_FAIL)\n}\n\nexport function setSoftNavFailReason(reason: string) {\n  setItem(SOFT_NAV_FAIL, reason || DEFAULT_SOFT_NAV_ERROR_REASON)\n  setItem(SOFT_NAV_FAIL_REFERRER, window.location.href)\n}\n\nexport function setSoftNavReferrer() {\n  setItem(SOFT_NAV_REFERRER, window.location.href)\n}\n\nexport function getSoftNavReferrer() {\n  return getItem(SOFT_NAV_REFERRER) || document.referrer\n}\n\nexport function setSoftNavReactAppName() {\n  const appName = getCurrentReactAppName()\n\n  if (appName) {\n    setItem(SOFT_NAV_REACT_APP_NAME, appName)\n  } else {\n    removeItem(SOFT_NAV_REACT_APP_NAME)\n  }\n}\n\nexport function getSoftNavReactAppName() {\n  return getItem(SOFT_NAV_REACT_APP_NAME)\n}\n\nexport function getCurrentReactAppName() {\n  if (document.querySelector('meta[name=\"ui\"]')) return 'ui'\n\n  return document.querySelector('react-app')?.getAttribute('app-name')\n}\n\nexport function setLatestMechanism(mechanism: SoftNavMechanism) {\n  setItem(SOFT_NAV_LATEST_MECHANISM, mechanism)\n}\n\nexport function getLatestMechanism() {\n  return getItem(SOFT_NAV_LATEST_MECHANISM) as SoftNavMechanism\n}\n","import {GitHubAvatar} from '@github-ui/github-avatar'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {ActionMenu, ActionList} from '@primer/react'\n\nexport interface Accounts {\n  [login: string]: {\n    avatarUrl: string\n    isOrganization: boolean\n  }\n}\n\nexport interface AccountFilterProps {\n  accounts: Accounts\n  accountFilter: string\n  setAccountFilter: (account: string) => void\n}\n\nexport function AccountFilter({accounts, accountFilter, setAccountFilter}: AccountFilterProps) {\n  const onAccountChange = (event: React.UIEvent, account: string) => {\n    setAccountFilter(account)\n  }\n\n  return (\n    <ActionMenu>\n      <ActionMenu.Button aria-label={`Explore as: ${accountFilter}`} {...testIdProps('account-button')}>\n        <GitHubAvatar src={accounts[accountFilter]?.avatarUrl || ''} />\n        <span className=\"pl-2\">{accountFilter}</span>\n      </ActionMenu.Button>\n      <ActionMenu.Overlay width=\"medium\">\n        <ActionList selectionVariant=\"single\" role=\"listbox\">\n          {Object.entries(accounts).map(([k]) => (\n            <ActionList.Item\n              key={k}\n              role=\"option\"\n              selected={k === accountFilter}\n              aria-selected={k === accountFilter}\n              onSelect={event => {\n                onAccountChange(event, k)\n              }}\n              {...testIdProps(`account-${k}`)}\n            >\n              <GitHubAvatar src={accounts[k]?.avatarUrl || ''} />\n              <span className=\"pl-2\">{k}</span>\n            </ActionList.Item>\n          ))}\n        </ActionList>\n      </ActionMenu.Overlay>\n    </ActionMenu>\n  )\n}\n\ntry{ AccountFilter.displayName ||= 'AccountFilter' } catch {}","import {sendEvent} from '@github-ui/hydro-analytics'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {ActionMenu, ActionList} from '@primer/react'\n\nexport interface Ecosystems {\n  [key: string]: {label: string}\n}\n\nexport interface EcosystemsFilterProps {\n  ecosystems: Ecosystems\n  ecosystemsFilter: string[]\n  setEcosystemsFilter: (ecosystems: string[]) => void\n}\n\nexport function EcosystemsFilter({ecosystems, ecosystemsFilter, setEcosystemsFilter}: EcosystemsFilterProps) {\n  const allEcosystems = 'all-ecosystems'\n\n  const getLabel = () => {\n    const pluralized = ecosystemsFilter.length === 1 ? 'ecosystem' : 'ecosystems'\n    return ecosystemsFilter.length === 0 ? `All ${pluralized}` : `${ecosystemsFilter.length} ${pluralized}`\n  }\n\n  const updatedEcosystems = (selected: string) => {\n    if (selected === allEcosystems) {\n      return []\n    } else {\n      return ecosystemsFilter.includes(selected)\n        ? ecosystemsFilter.filter(v => v !== selected)\n        : [...ecosystemsFilter, selected]\n    }\n  }\n\n  const sendEcosystemClickEvent = (ecosystem: string, enabled: boolean) => {\n    sendEvent('sponsors.explore_filter_change', {enabled, filter_option: ecosystem})\n  }\n\n  const onEcosystemChange = (event: React.UIEvent, ecosystem: string) => {\n    event.preventDefault()\n    const selectedEcosystems = updatedEcosystems(ecosystem)\n    setEcosystemsFilter(selectedEcosystems)\n    sendEcosystemClickEvent(ecosystem, selectedEcosystems.includes(ecosystem))\n  }\n\n  return (\n    <ActionMenu>\n      <ActionMenu.Button aria-label={`Ecosystems: ${getLabel()}`} {...testIdProps('ecosystems-button')}>\n        {getLabel()}\n      </ActionMenu.Button>\n      <ActionMenu.Overlay width=\"medium\">\n        <ActionList selectionVariant=\"multiple\" role=\"listbox\">\n          <ActionList.Item\n            key={allEcosystems}\n            role=\"option\"\n            selected={ecosystemsFilter.length === 0}\n            aria-selected={ecosystemsFilter.length === 0}\n            onSelect={event => {\n              onEcosystemChange(event, allEcosystems)\n            }}\n            {...testIdProps(`ecosystem-${allEcosystems}`)}\n          >\n            All ecosystems\n          </ActionList.Item>\n          {Object.entries(ecosystems).map(([k, ecosystem]) => (\n            <ActionList.Item\n              key={k}\n              role=\"option\"\n              selected={ecosystemsFilter.includes(k)}\n              aria-selected={ecosystemsFilter.includes(k)}\n              onSelect={event => {\n                onEcosystemChange(event, k)\n              }}\n              {...testIdProps(`ecosystems-${k}`)}\n            >\n              {ecosystem.label}\n            </ActionList.Item>\n          ))}\n        </ActionList>\n      </ActionMenu.Overlay>\n    </ActionMenu>\n  )\n}\n\ntry{ EcosystemsFilter.displayName ||= 'EcosystemsFilter' } catch {}","import {testIdProps} from '@github-ui/test-id-props'\nimport {ActionMenu, ActionList} from '@primer/react'\n\nexport interface Orderings {\n  [key: string]: {label: string}\n}\n\nexport interface OrderingFilterProps {\n  orderings: Orderings\n  orderingFilter: string\n  setOrderingFilter: (ordering: string) => void\n}\n\nexport function OrderingFilter({orderings, orderingFilter, setOrderingFilter}: OrderingFilterProps) {\n  const onOrderingChange = (event: React.UIEvent, ordering: string) => {\n    setOrderingFilter(ordering)\n  }\n\n  const getLabel = (ordering: string) => {\n    return orderings[ordering]?.label || 'Unknown'\n  }\n\n  return (\n    <ActionMenu>\n      <ActionMenu.Button aria-label={`Order by: ${getLabel(orderingFilter)}`} {...testIdProps('ordering-button')}>\n        {getLabel(orderingFilter)}\n      </ActionMenu.Button>\n      <ActionMenu.Overlay width=\"medium\">\n        <ActionList selectionVariant=\"single\" role=\"listbox\">\n          {Object.entries(orderings).map(([k, ordering]) => (\n            <ActionList.Item\n              key={k}\n              role=\"option\"\n              selected={k === orderingFilter}\n              aria-selected={k === orderingFilter}\n              onSelect={event => {\n                onOrderingChange(event, k)\n              }}\n              {...testIdProps(`ordering-${k}`)}\n            >\n              {ordering.label}\n            </ActionList.Item>\n          ))}\n        </ActionList>\n      </ActionMenu.Overlay>\n    </ActionMenu>\n  )\n}\n\ntry{ OrderingFilter.displayName ||= 'OrderingFilter' } catch {}","import {testIdProps} from '@github-ui/test-id-props'\nimport {Checkbox, FormControl} from '@primer/react'\n\nexport interface DirectOnlyFilterProps {\n  directOnlyFilter: boolean\n  setDirectOnlyFilter: (directDependenciesOnly: boolean) => void\n}\n\nexport function DirectOnlyFilter({directOnlyFilter, setDirectOnlyFilter}: DirectOnlyFilterProps) {\n  const onDirectOnlyChange = (directOnly: boolean) => {\n    setDirectOnlyFilter(!directOnly)\n  }\n  const key = 'direct-only'\n\n  return (\n    <FormControl key={key}>\n      <Checkbox\n        onChange={() => onDirectOnlyChange(directOnlyFilter)}\n        checked={directOnlyFilter}\n        {...testIdProps(`${key}-checkbox`)}\n      />\n      <FormControl.Label>Direct dependencies only</FormControl.Label>\n    </FormControl>\n  )\n}\n\ntry{ DirectOnlyFilter.displayName ||= 'DirectOnlyFilter' } catch {}","import {useState} from 'react'\nimport {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {useNavigate} from '@github-ui/use-navigate'\nimport {Box, Button, Heading} from '@primer/react'\nimport type {SxProp} from '@primer/react'\nimport {AccountFilter} from './AccountFilter'\nimport type {Accounts} from './AccountFilter'\nimport {EcosystemsFilter} from './EcosystemsFilter'\nimport type {Ecosystems} from './EcosystemsFilter'\nimport {OrderingFilter} from './OrderingFilter'\nimport type {Orderings} from './OrderingFilter'\nimport {DirectOnlyFilter} from './DirectOnlyFilter'\n\nexport interface SponsorsExploreFilterProps {\n  accounts: Accounts\n  selectedAccount: string\n  ecosystems: Ecosystems\n  selectedEcosystems: string[]\n  orderings: Orderings\n  selectedOrdering: string\n  directDependenciesOnly: boolean\n}\n\nexport function SponsorsExploreFilter({\n  accounts,\n  selectedAccount,\n  ecosystems,\n  selectedEcosystems,\n  orderings,\n  selectedOrdering,\n  directDependenciesOnly,\n}: SponsorsExploreFilterProps) {\n  const [accountFilter, setAccountFilter] = useState<string>(selectedAccount)\n  const [ecosystemsFilter, setEcosystemsFilter] = useState<string[]>(selectedEcosystems)\n  const [orderingFilter, setOrderingFilter] = useState<string>(selectedOrdering)\n  const [directOnlyFilter, setDirectOnlyFilter] = useState<boolean>(directDependenciesOnly)\n\n  const navigate = useNavigate()\n\n  const onSubmit = (e: React.FormEvent<EventTarget>) => {\n    e.preventDefault()\n    const params = {\n      ...(accountFilter && {account: accountFilter}),\n      ...(ecosystemsFilter.length && {ecosystems: ecosystemsFilter.join(',')}),\n      ...(orderingFilter && {sort_by: orderingFilter}),\n      ...(!directOnlyFilter && {direct: '0'}),\n    }\n    const filterParams = new URLSearchParams(params).toString()\n\n    navigate(`${ssrSafeLocation.pathname}?${filterParams}`)\n  }\n\n  const leftPadding: SxProp['sx'] = {paddingLeft: 2}\n  const headerStyle: SxProp['sx'] = {fontSize: 3, color: 'default', paddingY: 3, ...leftPadding}\n\n  return (\n    <form onSubmit={onSubmit} {...testIdProps('sponsors-explore-filter')}>\n      <Heading as=\"h2\" sx={headerStyle}>\n        Explore as\n      </Heading>\n      <Box sx={{...leftPadding}}>\n        <AccountFilter accounts={accounts} accountFilter={accountFilter} setAccountFilter={setAccountFilter} />\n      </Box>\n      <Heading as=\"h2\" sx={headerStyle}>\n        Ecosystems\n      </Heading>\n      <Box sx={{...leftPadding}}>\n        <EcosystemsFilter\n          ecosystems={ecosystems}\n          ecosystemsFilter={ecosystemsFilter}\n          setEcosystemsFilter={setEcosystemsFilter}\n        />\n      </Box>\n      <Heading as=\"h2\" sx={headerStyle}>\n        Order by\n      </Heading>\n      <Box sx={{...leftPadding}}>\n        <OrderingFilter orderings={orderings} orderingFilter={orderingFilter} setOrderingFilter={setOrderingFilter} />\n      </Box>\n      <Box sx={{paddingTop: 4, ...leftPadding}}>\n        <DirectOnlyFilter directOnlyFilter={directOnlyFilter} setDirectOnlyFilter={setDirectOnlyFilter} />\n      </Box>\n\n      <Box sx={{paddingTop: 3, ...leftPadding}}>\n        <Button type=\"submit\" variant=\"primary\" {...testIdProps('sponsors-explore-filter-button')}>\n          Apply\n        </Button>\n      </Box>\n    </form>\n  )\n}\n\ntry{ SponsorsExploreFilter.displayName ||= 'SponsorsExploreFilter' } catch {}","import {registerReactPartial} from '@github-ui/react-core/register-partial'\nimport {SponsorsExploreFilter} from './SponsorsExploreFilter'\n\nregisterReactPartial('sponsors-explore-filter', {\n  Component: SponsorsExploreFilter,\n})\n","export interface TestIdProps {\n  /** Test ID to be queried by automated testing suites */\n  'data-testid'?: string\n}\n\nexport const testIdProps = (value: string): TestIdProps => {\n  return {'data-testid': value}\n}\n","import React, {startTransition} from 'react'\nimport {\n  createSearchParams,\n  matchRoutes,\n  resolvePath,\n  useLocation,\n  useNavigate as useReactRouterNavigate,\n  useSearchParams as useReactRouterSearchParams,\n  type NavigateOptions,\n  type To,\n  type URLSearchParamsInit,\n} from 'react-router-dom'\n\nimport isHashNavigation from '@github-ui/is-hash-navigation'\nimport {AppContext} from '@github-ui/react-core/app-context'\nimport {startSoftNav} from '@github-ui/soft-nav/state'\nimport {PREVENT_AUTOFOCUS_KEY} from '@github-ui/react-core/prevent-autofocus'\n\nexport interface NavigateOptionsWithPreventAutofocus extends NavigateOptions {\n  preventAutofocus?: boolean\n}\n\nexport const useNavigate = (): ((to: To, options?: NavigateOptionsWithPreventAutofocus) => void) => {\n  const {routes, history} = React.useContext(AppContext)\n  const reactRouterNavigate = useReactRouterNavigate()\n  return React.useCallback(\n    (to, navigateOptions = {}) => {\n      const pathname = resolvePath(to).pathname\n      const isExternalToApp = !matchRoutes(routes, pathname)\n\n      if (isExternalToApp) {\n        const href = history.createHref(to)\n        ;(async () => {\n          const {softNavigate: turboSoftNavigate} = await import('@github-ui/soft-navigate')\n          turboSoftNavigate(href)\n        })()\n      } else {\n        if (!isHashNavigation(location.href, to.toString())) {\n          startSoftNav('react')\n        }\n        const {preventAutofocus, ...options} = navigateOptions\n        startTransition(() => {\n          reactRouterNavigate(\n            to,\n            preventAutofocus\n              ? {\n                  ...options,\n                  state: {\n                    [PREVENT_AUTOFOCUS_KEY]: true,\n                    ...options.state,\n                  },\n                }\n              : options,\n          )\n          const {turbo, ...state} = window.history.state\n          window.history.replaceState({...state, skipTurbo: true}, '', location.href)\n        })\n      }\n    },\n    [history, reactRouterNavigate, routes],\n  )\n}\n\n/**\n * An implementation of `useSearchParams` that mirrors `react-router-dom`'s `useSearchParams` hook\n * but utilizes `@github-ui/useNavigate` instead of `react-router` `useNavigate` to handle updates.\n */\nexport const useSearchParams = () => {\n  const [searchParams] = useReactRouterSearchParams()\n  const navigate = useNavigate()\n  const {pathname} = useLocation()\n\n  const setSearchParams = React.useCallback<\n    (\n      nextInit?: URLSearchParamsInit | ((prev: URLSearchParams) => URLSearchParamsInit),\n      navigateOpts?: NavigateOptionsWithPreventAutofocus,\n    ) => void\n  >(\n    (nextInit, navigateOptions = {}) => {\n      const newSearchParams = createSearchParams(typeof nextInit === 'function' ? nextInit(searchParams) : nextInit)\n      navigate(\n        {\n          pathname,\n          search: newSearchParams.toString(),\n        },\n        navigateOptions,\n      )\n    },\n    [searchParams, navigate, pathname],\n  )\n\n  return [searchParams, setSearchParams] as const\n}\n","import {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {\n  // eslint-disable-next-line no-restricted-imports\n  Avatar,\n  type AvatarProps,\n} from '@primer/react'\nimport {forwardRef, useMemo} from 'react'\n\nexport type GitHubAvatarProps = AvatarProps\n\nexport const GitHubAvatar = forwardRef<HTMLImageElement, GitHubAvatarProps>(function GitHubAvatar(\n  {src, size = 20, ...otherProps}: GitHubAvatarProps,\n  ref,\n) {\n  const avatarUrl = useMemo(() => {\n    // src maybe be relative, e.g. `/mona.png`, in which case the instances main origin should be used,\n    // e.g. \"https://github.com\" for dotcom. If src is a fully quallified URL then the origin argument is ignored.\n    const url = new URL(src, ssrSafeLocation.origin)\n\n    // do not override size if it's already set as query parameter\n    if (!url.searchParams.has('size') && !url.searchParams.has('s')) {\n      // we double size for better rendering on high density pixel screens\n      url.searchParams.set('size', String(Number(size) * 2))\n    }\n\n    return url.toString()\n  }, [src, size])\n\n  return <Avatar ref={ref} src={avatarUrl} size={size} data-testid=\"github-avatar\" {...otherProps} />\n})\n\ntry{ GitHubAvatar.displayName ||= 'GitHubAvatar' } catch {}","import {useState} from 'react'\nimport type {BrowserHistory, MemoryHistory} from '@remix-run/router'\nimport {Router} from 'react-router-dom'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\ntype Props = {\n  children: React.ReactNode\n  history: BrowserHistory | MemoryHistory\n}\n\nexport function PartialRouter({children, history}: Props) {\n  const [state, setState] = useState({\n    location: history.location,\n  })\n\n  useHydratedEffect(() => history.listen(setState), [history])\n\n  return (\n    <Router location={state.location} navigator={history}>\n      {children}\n    </Router>\n  )\n}\n\ntry{ PartialRouter.displayName ||= 'PartialRouter' } catch {}","// Think of this as the entry point into the framework\nimport React from 'react'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {BaseProviders} from './BaseProviders'\nimport type {BrowserHistory} from '@remix-run/router'\nimport {createMemoryHistory} from '@remix-run/router'\nimport {AppContextProvider} from './AppContextProvider'\nimport {PartialRouter} from './PartialRouter'\nimport {CommonElements} from './CommonElements'\nimport {createBrowserHistory} from './create-browser-history'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {usePartialAnchorProps} from './react-partial-anchor'\n\ninterface Props {\n  partialName: string\n  embeddedData: EmbeddedPartialData\n  Component: React.ComponentType\n  wasServerRendered: boolean\n  ssrError?: HTMLScriptElement\n  anchorElement?: ReactPartialAnchorElement | null\n}\n\nexport function PartialEntry({\n  partialName,\n  embeddedData,\n  Component,\n  wasServerRendered,\n  ssrError,\n  anchorElement,\n}: Props) {\n  // Create a ref to track the browser history:\n  const historyRef = React.useRef<BrowserHistory>()\n  const window = globalThis.window as Window | undefined\n\n  // For linking to work, we can just pass a dummy pathname here. We may consider plumbing the actual path in\n  if (!historyRef.current) {\n    historyRef.current = !window\n      ? createMemoryHistory({initialEntries: [{pathname: '/'}]})\n      : createBrowserHistory({window})\n  }\n  const history = historyRef.current\n  const partialAnchorProps = usePartialAnchorProps(anchorElement)\n\n  // Wrap the partial in an AppContextProvider and static Router so that react-core links\n  // will be functional.\n  return (\n    <BaseProviders appName={partialName} wasServerRendered={wasServerRendered}>\n      <AppContextProvider history={history} routes={[]}>\n        <PartialRouter history={history}>\n          <Component {...embeddedData.props} {...(partialAnchorProps as object)} />\n          <CommonElements ssrError={ssrError} />\n        </PartialRouter>\n      </AppContextProvider>\n    </BaseProviders>\n  )\n}\n\ntry{ PartialEntry.displayName ||= 'PartialEntry' } catch {}","import {target} from '@github/catalyst'\nimport {createRoot, hydrateRoot} from 'react-dom/client'\nimport type {createRoot as createRootType, hydrateRoot as hydrateRootType, Root} from 'react-dom/client'\nimport React from 'react'\nimport ReactProfilingMode from '@github-ui/react-profiling-mode'\nimport {EXPECTED_ERRORS} from './expected-errors'\nimport {sendStats} from '@github-ui/stats'\n\ntype ReactDOM = {\n  createRoot: typeof createRootType\n  hydrateRoot: typeof hydrateRootType\n}\n\nconst REACT_INVARIANT_ERROR_REGEX = /Minified React error #(?<invariant>\\d+)/\n\nexport abstract class ReactBaseElement<T> extends HTMLElement {\n  @target embeddedData: HTMLScriptElement | undefined\n  @target ssrError: HTMLScriptElement | undefined\n  @target reactRoot: HTMLElement | undefined\n  private root: Root | undefined\n\n  abstract nameAttribute: string\n  abstract getReactNode(embeddedData: T): Promise<React.ReactNode>\n\n  protected get name() {\n    return this.getAttribute(this.nameAttribute) as string\n  }\n\n  private get embeddedDataText() {\n    const text = this.embeddedData?.textContent\n\n    if (!text) {\n      throw new Error(`No embedded data provided for react element ${this.name}`)\n    }\n\n    return text\n  }\n\n  get hasSSRContent() {\n    return this.getAttribute('data-ssr') === 'true'\n  }\n\n  connectedCallback() {\n    this.renderReact()\n  }\n\n  disconnectedCallback() {\n    this.root?.unmount()\n    this.root = undefined\n  }\n\n  private async renderReact() {\n    if (!this.reactRoot) throw new Error('No react root provided')\n    let reactDom: ReactDOM = {\n      createRoot,\n      hydrateRoot,\n    }\n\n    // Override the react-dom import if we're in profiling mode\n    if (ReactProfilingMode.isEnabled()) {\n      reactDom = await this.getReactDomWithProfiling()\n    }\n\n    const embeddedData = JSON.parse(this.embeddedDataText) as T\n    const ssrErrorText = this.ssrError?.textContent\n    const node = await this.getReactNode(embeddedData)\n    const baseNode = <React.StrictMode>{node}</React.StrictMode>\n\n    if (ssrErrorText) {\n      this.logSSRError(ssrErrorText)\n    }\n\n    if (this.hasSSRContent) {\n      /**\n       * Styled-components automatically looks for style tags to hydrate on first page load, but will not detect them\n       * if they are added after the initial page load. This causes a hydration error because React isn't expecting\n       * a style tag within the app. To work around this, we need to manually move the style tags to the head before\n       * hydrating the app.\n       *\n       * During hydration, styled-components will create a new style tag which matches the one we moved to the head.\n       * This means that after hydration, we can safely remove the style tag we manually moved to the head.\n       */\n      const styles = this.querySelector('style[data-styled=\"true\"]')\n      if (styles) document.head.appendChild(styles)\n\n      // Hydrate the react app\n      // onRecoverableError is disabled until we have a react version with this fix in:\n      // https://github.com/facebook/react/pull/25692\n      this.root = reactDom.hydrateRoot(this.reactRoot, baseNode, {\n        onRecoverableError: error => {\n          if (!(error instanceof Error)) return\n\n          const match = REACT_INVARIANT_ERROR_REGEX.exec(error.message)\n          const invariant = String(match?.groups?.invariant)\n\n          sendStats({\n            incrementKey: 'REACT_HYDRATION_ERROR',\n            incrementTags: {\n              appName: this.name,\n              invariant,\n            },\n          })\n        },\n      })\n\n      // Remove the manually moved style tag after hydration\n      if (styles) {\n        // Wait until things are idle to remove the style tag. If we do it immediately, we can cause a flash of unstyled content.\n        requestIdleCallback(() => {\n          // styles could have already been removed by Turbo if a navigation happens quickly. Only remove it from the DOM if it's still there.\n          styles.parentElement?.removeChild(styles)\n        })\n      }\n    } else {\n      this.root = reactDom.createRoot(this.reactRoot)\n      this.root.render(baseNode)\n    }\n\n    this.classList.add('loaded')\n  }\n\n  private getReactDomWithProfiling() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return import('react-dom/profiling') as any as Promise<ReactDOM>\n  }\n\n  private logSSRError(ssrErrorText: string) {\n    if (EXPECTED_ERRORS[ssrErrorText]) {\n      // eslint-disable-next-line no-console\n      return console.error('SSR failed with an expected error:', EXPECTED_ERRORS[ssrErrorText])\n    }\n\n    try {\n      const error = JSON.parse(ssrErrorText) as PlatformJavascriptError\n      const stacktrace = parseFailbotStacktrace(error)\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', `${error.type}: ${error.value}\\n`, error, stacktrace)\n    } catch {\n      /**\n       * In the event we couldn't log the error, we should not break the application\n       */\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', ssrErrorText, 'unable to parse as json')\n    }\n  }\n}\n\nfunction parseFailbotStacktrace(error: PlatformJavascriptError) {\n  if (!error.stacktrace) return ''\n  let prefix = '\\n '\n  const stack = error.stacktrace.map((frame: PlatformStackframe) => {\n    const {function: func, filename, lineno, colno} = frame\n    const line = `${prefix} at ${func} (${filename}:${lineno}:${colno})`\n    prefix = ' '\n    return line\n  })\n  return stack.join('\\n')\n}\n\ntry{ REACT_INVARIANT_ERROR_REGEX.displayName ||= 'REACT_INVARIANT_ERROR_REGEX' } catch {}"],"names":["hydroAnalyticsClient","getItem","safeStorage","dimensionPrefix","MARKETING_PARAMS","options","getOptionsFromMeta","baseContext","AnalyticsClient","_","extendBaseContext","context","key","value","app_id","event_url","host","Object","entries","startsWith","replace","visitorMeta","document","querySelector","assign","JSON","parse","atob","content","URLSearchParams","window","location","search","includes","toLowerCase","staff","isStaff","toString","sendPageView","sendEvent","type","service","head","cleanContext","stringifyObjectValues","obj","fromEntries","map","k","v","stringify","currentUrl","targetUrl","current","URL","origin","target","hasHash","href","pathname","DeferredRegistry","register","name","registration","entry","registrationEntries","resolve","promise","Promise","getRegistration","Deferred","constructor","PREVENT_AUTOFOCUS_KEY","usePartialAnchorProps","anchorElement","useEffect","anchor","disabled","classList","remove","reactPartialAnchor","__wrapperElement","useExternalAnchor","ref","useRef","open","setOpen","useState","onClick","useCallback","setAttribute","useOnAnchorClick","element","addEventListener","removeEventListener","partialRegistry","ReactPartialElement","ReactBaseElement","getReactNode","embeddedData","appName","Component","closest","PartialEntry","partialName","wasServerRendered","hasSSRContent","ssrError","nameAttribute","registerReactPartial","controller","setItem","removeItem","REACT_PROFILING_ENABLED","enable","disable","isEnabled","SoftNavEvent","Event","mechanism","SoftNavStartEvent","SOFT_NAV_STATE","START","SoftNavSuccessEvent","visitCount","SUCCESS","SoftNavErrorEvent","error","ERROR","SoftNavEndEvent","END","initSoftNav","dispatchEvent","INITIAL","clearSoftNav","startSoftNav","inSoftNav","PROGRESS_BAR","setSoftNavMechanism","setSoftNavReactAppName","setSoftNavReferrer","markStart","succeedSoftNav","canTriggerEvent","getSoftNavMechanism","endSoftNav","failSoftNav","reason","getSoftNavFailReason","DEFAULT_SOFT_NAV_ERROR_REASON","endProgressBar","sendFailureStats","unsetSoftNav","setLatestMechanism","renderedSoftNav","sendRenderStats","RENDER","updateFrame","FRAME_UPDATE","skipIfGoingToReactApp","allowedMechanisms","length","getCurrentReactAppName","freeze","SOFT_NAV_DURATION_MARK","MECHANISM_MAPPING","turbo","react","ui","hard","performance","clearResourceTimings","mark","turboFailureReason","sendStats","turboStartUrl","getSoftNavReferrer","turboEndUrl","duration","getDurationSinceLastSoftNav","getEntriesByName","measure","measures","pop","roundedDuration","Math","round","CustomEvent","detail","requestUrl","softNavigationTiming","destination","initiator","getSoftNavReactAppName","SOFT_NAV_FAIL","SOFT_NAV_FAIL_REFERRER","SOFT_NAV_REFERRER","SOFT_NAV_MARK","SOFT_NAV_REACT_APP_NAME","SOFT_NAV_LATEST_MECHANISM","softNav","hasSoftNavFailure","Boolean","setSoftNavFailReason","referrer","getAttribute","getLatestMechanism","AccountFilter","accounts","accountFilter","setAccountFilter","onAccountChange","event","account","ActionMenu","Button","aria-label","testIdProps","GitHubAvatar","src","avatarUrl","span","className","Overlay","width","ActionList","selectionVariant","role","Item","selected","aria-selected","onSelect","displayName","EcosystemsFilter","ecosystems","ecosystemsFilter","setEcosystemsFilter","allEcosystems","getLabel","pluralized","updatedEcosystems","filter","sendEcosystemClickEvent","ecosystem","enabled","filter_option","onEcosystemChange","preventDefault","selectedEcosystems","label","OrderingFilter","orderings","orderingFilter","setOrderingFilter","onOrderingChange","ordering","DirectOnlyFilter","directOnlyFilter","setDirectOnlyFilter","onDirectOnlyChange","directOnly","FormControl","Checkbox","onChange","checked","Label","SponsorsExploreFilter","selectedAccount","selectedOrdering","directDependenciesOnly","navigate","useNavigate","leftPadding","paddingLeft","headerStyle","fontSize","color","paddingY","form","onSubmit","e","filterParams","join","sort_by","direct","ssrSafeLocation","Heading","as","sx","Box","paddingTop","variant","routes","history","React","AppContext","reactRouterNavigate","useReactRouterNavigate","to","navigateOptions","resolvePath","matchRoutes","isHashNavigation","preventAutofocus","startTransition","state","replaceState","skipTurbo","createHref","softNavigate","turboSoftNavigate","useSearchParams","searchParams","useReactRouterSearchParams","useLocation","setSearchParams","nextInit","newSearchParams","createSearchParams","forwardRef","size","otherProps","useMemo","url","has","set","String","Number","Avatar","data-testid","PartialRouter","children","setState","useHydratedEffect","listen","Router","navigator","historyRef","globalThis","createBrowserHistory","createMemoryHistory","initialEntries","partialAnchorProps","BaseProviders","AppContextProvider","props","CommonElements","REACT_INVARIANT_ERROR_REGEX","HTMLElement","embeddedDataText","text","textContent","connectedCallback","renderReact","disconnectedCallback","root","unmount","undefined","reactRoot","reactDom","createRoot","hydrateRoot","ReactProfilingMode","getReactDomWithProfiling","ssrErrorText","node","baseNode","logSSRError","styles","appendChild","onRecoverableError","Error","match","exec","message","invariant","groups","incrementKey","incrementTags","requestIdleCallback","parentElement","removeChild","render","add","EXPECTED_ERRORS","console","stacktrace","parseFailbotStacktrace","prefix","stack","function","func","filename","lineno","colno","frame","line"],"sourceRoot":""}