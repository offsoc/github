# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Blackbird::Query::V1::Repository`.
# Please instead update this file by running `bin/tapioca dsl Blackbird::Query::V1::Repository`.

class Blackbird::Query::V1::Repository
  sig do
    params(
      id: T.nilable(Integer),
      is_public: T.nilable(T::Boolean),
      name: T.nilable(String),
      owner_id: T.nilable(Integer),
      owner_login: T.nilable(String),
      repo_score: T.nilable(Integer)
    ).void
  end
  def initialize(id: nil, is_public: nil, name: nil, owner_id: nil, owner_login: nil, repo_score: nil); end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_is_public; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_owner_login; end

  sig { void }
  def clear_repo_score; end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(T::Boolean) }
  def is_public; end

  sig { params(value: T::Boolean).void }
  def is_public=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(String) }
  def owner_login; end

  sig { params(value: String).void }
  def owner_login=(value); end

  sig { returns(Integer) }
  def repo_score; end

  sig { params(value: Integer).void }
  def repo_score=(value); end
end
