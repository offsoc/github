# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::ActionsRunnerAdmin::Api::V1::AddRunnerGroupRequest`.
# Please instead update this file by running `bin/tapioca dsl GitHub::ActionsRunnerAdmin::Api::V1::AddRunnerGroupRequest`.

class GitHub::ActionsRunnerAdmin::Api::V1::AddRunnerGroupRequest
  sig do
    params(
      allow_public: T.nilable(T::Boolean),
      entity: T.nilable(GitHub::ActionsRunnerAdmin::Entities::V1::GitHubEntity),
      is_default: T.nilable(T::Boolean),
      name: T.nilable(String),
      restricted_to_workflows: T.nilable(T::Boolean),
      runner_ids: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer])),
      selected_orgs: T.nilable(T.any(Google::Protobuf::RepeatedField[GitHub::ActionsRunnerAdmin::Entities::V1::Identity], T::Array[GitHub::ActionsRunnerAdmin::Entities::V1::Identity])),
      selected_targets: T.nilable(T.any(Google::Protobuf::RepeatedField[GitHub::ActionsRunnerAdmin::Entities::V1::Identity], T::Array[GitHub::ActionsRunnerAdmin::Entities::V1::Identity])),
      selected_workflow_refs: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      visibility: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(allow_public: nil, entity: nil, is_default: nil, name: nil, restricted_to_workflows: nil, runner_ids: T.unsafe(nil), selected_orgs: T.unsafe(nil), selected_targets: T.unsafe(nil), selected_workflow_refs: T.unsafe(nil), visibility: nil); end

  sig { returns(T::Boolean) }
  def allow_public; end

  sig { params(value: T::Boolean).void }
  def allow_public=(value); end

  sig { void }
  def clear_allow_public; end

  sig { void }
  def clear_entity; end

  sig { void }
  def clear_is_default; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_restricted_to_workflows; end

  sig { void }
  def clear_runner_ids; end

  sig { void }
  def clear_selected_orgs; end

  sig { void }
  def clear_selected_targets; end

  sig { void }
  def clear_selected_workflow_refs; end

  sig { void }
  def clear_visibility; end

  sig { returns(T.nilable(GitHub::ActionsRunnerAdmin::Entities::V1::GitHubEntity)) }
  def entity; end

  sig { params(value: T.nilable(GitHub::ActionsRunnerAdmin::Entities::V1::GitHubEntity)).void }
  def entity=(value); end

  sig { returns(T::Boolean) }
  def is_default; end

  sig { params(value: T::Boolean).void }
  def is_default=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(T::Boolean) }
  def restricted_to_workflows; end

  sig { params(value: T::Boolean).void }
  def restricted_to_workflows=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def runner_ids; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def runner_ids=(value); end

  sig { returns(Google::Protobuf::RepeatedField[GitHub::ActionsRunnerAdmin::Entities::V1::Identity]) }
  def selected_orgs; end

  sig { params(value: Google::Protobuf::RepeatedField[GitHub::ActionsRunnerAdmin::Entities::V1::Identity]).void }
  def selected_orgs=(value); end

  sig { returns(Google::Protobuf::RepeatedField[GitHub::ActionsRunnerAdmin::Entities::V1::Identity]) }
  def selected_targets; end

  sig { params(value: Google::Protobuf::RepeatedField[GitHub::ActionsRunnerAdmin::Entities::V1::Identity]).void }
  def selected_targets=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def selected_workflow_refs; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def selected_workflow_refs=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def visibility; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def visibility=(value); end
end
