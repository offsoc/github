{"version":3,"file":"enterprise-team-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/enterprise-team/AddMemberDialog.tsx","ui/packages/enterprise-team/EnterpriseTeamViewSearch.tsx","ui/packages/enterprise-team/EmptyList.tsx","ui/packages/enterprise-team/RemoveMemberDialog.tsx","ui/packages/enterprise-team/TeamMemberListItem.tsx","ui/packages/enterprise-team/TeamList.tsx","ui/packages/enterprise-team/EnterpriseTeam.tsx","ui/packages/enterprise-team/enterprise-team.ts","ui/packages/list-view/src/constants.ts","ui/packages/react-core/deferred-registry.ts","ui/packages/react-core/react-partial-anchor.ts","ui/packages/react-core/react-partial-registry.ts","ui/packages/react-core/ReactPartialElement.tsx","ui/packages/react-core/register-partial.ts","ui/packages/react-profiling-mode/src/index.ts","ui/packages/test-id-props/test-id-props.ts","ui/packages/verified-fetch/verified-fetch.ts","ui/packages/github-avatar/GitHubAvatar.tsx","ui/packages/list-view/src/ListView/IdContext.tsx","ui/packages/list-view/src/ListView/ItemsContext.tsx","ui/packages/list-view/src/hooks/use-roving-tab-index.ts","ui/packages/list-view/src/ListView/ListView.module.css","ui/packages/list-view/src/ListView/ListView.tsx","ui/packages/list-view/src/ListView/MultiPageSelectionContext.tsx","ui/packages/list-view/src/ListView/SelectionContext.tsx","ui/packages/list-view/src/ListView/TitleContext.tsx","ui/packages/list-view/src/ListView/VariantContext.tsx","ui/packages/react-core/PartialRouter.tsx","ui/packages/react-core/PartialEntry.tsx","ui/packages/react-core/ReactBaseElement.tsx","ui/packages/safe-html/SafeHTML.tsx"],"sourcesContent":["import {Box, Button, Dialog, Spinner, TextInput} from '@primer/react'\nimport {PersonIcon, XCircleFillIcon} from '@primer/octicons-react'\nimport {debounce} from '@github/mini-throttle'\nimport {useEffect, useRef, useState} from 'react'\nimport {GitHubAvatar} from '@github-ui/github-avatar'\nimport {ownerAvatarPath} from '@github-ui/paths'\nimport {verifiedFetch, verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport type {User} from './types'\n\ntype AddMemberDialogProps = {\n  teamName: string\n  isOpen: boolean\n  onDialogClose: () => void\n  searchInput: string\n  setSearchInput: (value: string) => void\n  addMember: () => void\n  addMemberPath: string\n  memberSuggestionsPath: string\n}\n\nconst AddMemberDialog = ({\n  teamName,\n  isOpen,\n  onDialogClose,\n  searchInput,\n  setSearchInput,\n  addMember,\n  addMemberPath,\n  memberSuggestionsPath,\n}: AddMemberDialogProps) => {\n  const [searchResults, setSearchResults] = useState<User[]>([])\n  const [selectedMember, setSelectedMember] = useState<User | null>(null)\n  const [showLoadingSpinner, setShowLoadingSpinner] = useState<boolean>(false)\n  const [visibleErrorMessage, setVisibleErrorMessage] = useState<string>('')\n  useEffect(() => {\n    // When the user selects a member from the dropdown, the textbox value will change and this effect will trigger\n    // If the user has fast network and an error is already displayed by the time we reach this logic, the error might end up hidden - so we ignore the event\n    if (searchInput !== selectedMember?.login) {\n      setVisibleErrorMessage('')\n    }\n  }, [searchInput, selectedMember])\n\n  const onAddToTeam = async () => {\n    setVisibleErrorMessage('')\n    setShowLoadingSpinner(true)\n    try {\n      let responseJson = await submitAddToTeam()\n      setShowLoadingSpinner(false)\n\n      if (responseJson.data === undefined) {\n        setSearchInput(selectedMember?.login ?? '')\n        setVisibleErrorMessage('An error occurred.')\n      } else {\n        responseJson = responseJson.data\n        if (responseJson.error === undefined) {\n          addMember()\n          handleClose()\n        } else {\n          setSearchInput(selectedMember?.login ?? '')\n          setVisibleErrorMessage(responseJson.error)\n        }\n      }\n    } catch (error) {\n      // Unexpected error like 422 or 500\n      setSearchInput(selectedMember?.login ?? '')\n      setVisibleErrorMessage('An error occurred.')\n      setShowLoadingSpinner(false)\n    }\n  }\n\n  const submitAddToTeam = async () => {\n    const formData = new FormData()\n    formData.append('user_login', selectedMember!.login)\n    const response = await verifiedFetch(addMemberPath, {\n      method: 'POST',\n      body: formData,\n      headers: {Accept: 'application/json'},\n    })\n    return await response.json()\n  }\n\n  const handleClose = () => {\n    setVisibleErrorMessage('')\n    setSearchInput('')\n    setSelectedMember(null)\n    onDialogClose()\n  }\n\n  const callSearch = async (input: string) => {\n    input = input.trim()\n    if (input.length > 0) {\n      try {\n        const result = await verifiedFetchJSON(`${memberSuggestionsPath}?query=${input.toString()}`, {\n          method: 'GET',\n          headers: {Accept: 'application/json'},\n        })\n        const results = await result.json()\n        setSearchResults(results.enterprise_members)\n      } catch (error) {\n        setVisibleErrorMessage('An error occurred while looking for members.')\n      }\n    }\n  }\n\n  const debounceSearch = useRef(debounce((input: string) => callSearch(input), 500))\n\n  const handleSearchChange = (input: string) => {\n    setSelectedMember(null)\n    setSearchInput(input)\n    setVisibleErrorMessage('')\n    setSearchResults([])\n    debounceSearch.current(input)\n  }\n\n  return (\n    <Dialog title=\"Add Member to team\" isOpen={isOpen} onDismiss={handleClose}>\n      <Box sx={{padding: '34px', display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n        <h3 className=\"blankslate\">Add member to {teamName}</h3>\n        <div style={{position: 'relative', width: '100%'}}>\n          <div style={{display: 'flex', alignItems: 'center', width: '100%'}}>\n            <TextInput\n              leadingVisual={PersonIcon}\n              aria-label=\"Search by username or full name\"\n              name=\"search\"\n              placeholder={'Search by username or full name'}\n              value={selectedMember?.login ?? searchInput}\n              onChange={e => handleSearchChange(e.target.value)}\n              sx={{\n                bg: 'canvas.subtle',\n                borderTopRightRadius: 0,\n                borderBottomRightRadius: 0,\n                width: '100%',\n              }}\n            />\n            <Button\n              onClick={onAddToTeam}\n              sx={{\n                borderTopLeftRadius: 0,\n                borderBottomLeftRadius: 0,\n                marginLeft: '-1px',\n              }}\n              variant=\"primary\"\n              disabled={!selectedMember || showLoadingSpinner}\n            >\n              {showLoadingSpinner ? <Spinner size=\"small\" sx={{mt: '5px'}} /> : 'Add'}\n            </Button>\n          </div>\n          {searchInput && !selectedMember && searchResults.length > 0 && (\n            <Box\n              className=\"autocomplete-results\"\n              sx={{\n                position: 'absolute',\n              }}\n            >\n              {searchResults.map(result => (\n                // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n                <div\n                  data-testid=\"member-suggestion-result\"\n                  className=\"member-suggestion typeahead-result\"\n                  onClick={() => {\n                    setSelectedMember(result)\n                    setSearchResults([])\n                  }}\n                  key={result.id}\n                >\n                  <GitHubAvatar square sx={{ml: '1px'}} size={24} src={ownerAvatarPath({owner: result.login})} />\n                  <Box sx={{display: 'inline', marginLeft: '5px'}}>\n                    {result.login} <Box sx={{color: 'grey'}}>{result.name}</Box>\n                  </Box>\n                </div>\n              ))}\n            </Box>\n          )}\n        </div>\n        {visibleErrorMessage && (\n          <Box sx={{color: 'red', mt: '2px', fontSize: '12px', alignSelf: 'flex-start', alignItems: 'flex-start'}}>\n            <XCircleFillIcon size={12} /> {visibleErrorMessage}\n          </Box>\n        )}\n      </Box>\n    </Dialog>\n  )\n}\n\nexport default AddMemberDialog\n\ntry{ AddMemberDialog.displayName ||= 'AddMemberDialog' } catch {}","import {Box, Button, TextInput, Spinner} from '@primer/react'\nimport {SearchIcon} from '@primer/octicons-react'\nimport {useState, useCallback} from 'react'\nimport AddMemberDialog from './AddMemberDialog'\n\nconst SearchAndAddView = ({\n  teamName,\n  editPath,\n  directMembershipsEnabled,\n  loading,\n  searchboxValue,\n  onSearchChange,\n  addMember,\n  addMemberPath,\n  memberSuggestionsPath,\n  hideAddMemberButton = false,\n  hideEditTeamButton = false,\n}: {\n  teamName: string\n  editPath: string\n  directMembershipsEnabled: boolean\n  loading: boolean\n  searchboxValue: string\n  onSearchChange: (value: string) => void\n  addMember: () => void\n  addMemberPath: string\n  memberSuggestionsPath: string\n  hideAddMemberButton?: boolean\n  hideEditTeamButton?: boolean\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [searchInput, setSearchInput] = useState('')\n  const onDialogClose = useCallback(() => {\n    setIsOpen(false)\n    setSearchInput('')\n  }, [])\n\n  return (\n    // eslint-disable-next-line github/a11y-role-supports-aria-props\n    <Box aria-labelledby=\"search-and-add-team-container\" sx={{mb: 3, display: 'flex', justifyContent: 'space-between'}}>\n      <TextInput\n        data-testid=\"search-input\"\n        leadingVisual={loading ? <Spinner size=\"small\" /> : SearchIcon}\n        aria-label=\"Find a member search bar\"\n        name=\"search\"\n        placeholder=\"Find a member...\"\n        sx={{\n          width: '30%',\n          bg: 'canvas.subtle',\n        }}\n        value={searchboxValue}\n        onChange={e => onSearchChange(e.target.value)}\n      />\n      <Box sx={{display: 'flex'}}>\n        {directMembershipsEnabled && !hideAddMemberButton && (\n          <>\n            <Button\n              sx={{marginRight: '5px'}}\n              aria-labelledby=\"Add a member\"\n              variant=\"primary\"\n              onClick={() => setIsOpen(!isOpen)}\n            >\n              Add a member\n            </Button>\n            <AddMemberDialog\n              teamName={teamName}\n              isOpen={isOpen}\n              onDialogClose={onDialogClose}\n              searchInput={searchInput}\n              setSearchInput={setSearchInput}\n              addMember={addMember}\n              addMemberPath={addMemberPath}\n              memberSuggestionsPath={memberSuggestionsPath}\n            />\n          </>\n        )}\n        {!hideEditTeamButton && (\n          <Button aria-labelledby=\"Edit Team\" variant=\"default\" onClick={() => (window.location.href = editPath)}>\n            Edit team\n          </Button>\n        )}\n      </Box>\n    </Box>\n  )\n}\n\nexport default SearchAndAddView\n\ntry{ SearchAndAddView.displayName ||= 'SearchAndAddView' } catch {}","import {Box, Octicon} from '@primer/react'\nimport {PersonIcon} from '@primer/octicons-react'\n\nconst EmptyList = () => (\n  <Box\n    sx={{\n      borderBottomColor: 'border.default',\n      borderBottomStyle: 'solid',\n      borderBottomWidth: 1,\n      display: 'flex',\n      alignItems: 'center',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      padding: '40px',\n    }}\n  >\n    <div>\n      <Octicon icon={PersonIcon} size={24} />\n    </div>\n    <h2>This team does not have any members.</h2>\n  </Box>\n)\n\nexport default EmptyList\n\ntry{ EmptyList.displayName ||= 'EmptyList' } catch {}","import {Button, Flash, Spinner} from '@primer/react'\nimport {Dialog} from '@primer/react/experimental'\nimport {useEffect, useRef, useState} from 'react'\nimport {SafeHTMLBox, type SafeHTMLString} from '@github-ui/safe-html'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport type {SaveResponse} from '@github-ui/code-view-types'\nimport type {User} from './types'\n\ntype RemoveMemberDialogProps = {\n  teamName: string\n  member: User\n  removeMemberPath: string\n  onMemberRemove: () => void\n  onDismiss: () => void\n}\n\nexport function RemoveMemberDialog({\n  teamName,\n  member,\n  removeMemberPath,\n  onMemberRemove,\n  onDismiss,\n}: RemoveMemberDialogProps) {\n  const [showLoadingSpinner, setShowLoadingSpinner] = useState<boolean>(false)\n  const [flash, setFlash] = useState<SafeHTMLString>('' as SafeHTMLString)\n\n  const flashRef = useRef<HTMLDivElement | null>(null)\n  useEffect(() => {\n    flashRef.current?.focus()\n  }, [flash, flashRef])\n\n  const handleDismiss = () => {\n    setFlash('' as SafeHTMLString)\n    onDismiss()\n  }\n\n  const removeMemberFromTeam = async () => {\n    setShowLoadingSpinner(true)\n    setFlash('' as SafeHTMLString)\n    try {\n      const result = await verifiedFetchJSON(`${removeMemberPath}/${member.login}`, {\n        method: 'DELETE',\n        headers: {Accept: 'application/json'},\n      })\n\n      const json: SaveResponse = await result.json()\n      if (json.data.error) {\n        setFlash(json.data.error as SafeHTMLString)\n      } else if (json.data) {\n        onMemberRemove()\n      } else {\n        // error uses a different format\n        setFlash('An error occurred.' as SafeHTMLString)\n      }\n    } catch (error) {\n      // Internal server error or other server errors\n      setFlash('An error occurred.' as SafeHTMLString)\n    }\n    setShowLoadingSpinner(false)\n  }\n\n  return (\n    <Dialog\n      onClose={handleDismiss}\n      title={`Removing member from ${teamName}`}\n      renderFooter={() => {\n        return (\n          <Dialog.Footer>\n            <Button type=\"button\" onClick={handleDismiss}>\n              Cancel\n            </Button>\n            <Button type=\"button\" variant=\"danger\" disabled={showLoadingSpinner} onClick={removeMemberFromTeam}>\n              {showLoadingSpinner ? <Spinner size=\"small\" sx={{mt: '5px'}} /> : 'Remove'}\n            </Button>\n          </Dialog.Footer>\n        )\n      }}\n    >\n      {flash && (\n        <Flash data-testid=\"flash-error\" tabIndex={0} ref={flashRef} variant=\"danger\" sx={{mb: 2}}>\n          <SafeHTMLBox html={flash} />\n        </Flash>\n      )}\n      {`Are you sure that you want to remove '${member.name || member.login}' from the enterprise team?`}\n    </Dialog>\n  )\n}\n\ntry{ RemoveMemberDialog.displayName ||= 'RemoveMemberDialog' } catch {}","import {ActionList, ActionMenu, Box, IconButton, Link} from '@primer/react'\nimport {ownerAvatarPath} from '@github-ui/paths'\nimport {KebabHorizontalIcon} from '@primer/octicons-react'\nimport {GitHubAvatar} from '@github-ui/github-avatar'\nimport type {User} from './types'\nimport {useState} from 'react'\nimport {RemoveMemberDialog} from './RemoveMemberDialog'\n\ntype TeamMemberListItemProps = {\n  teamName: string\n  member: User\n  businessSlug: string\n  directMembershipsEnabled: boolean\n  removeMember: () => void\n  removeMemberPath: string\n  hideRemoveMemberButton?: boolean\n  useMemberOrganizationsPathForUserLink?: boolean\n}\n\nconst TeamMemberListItem = ({\n  teamName,\n  member,\n  businessSlug,\n  directMembershipsEnabled,\n  removeMember,\n  removeMemberPath,\n  hideRemoveMemberButton = false,\n  useMemberOrganizationsPathForUserLink = true,\n}: TeamMemberListItemProps) => {\n  const [showRemoveMemberConfirmationDialog, setShowRemoveMemberConfirmationDialog] = useState(false)\n\n  const memberPath = useMemberOrganizationsPathForUserLink\n    ? `/enterprises/${businessSlug}/people/${member.login}/organizations`\n    : `/${member.login}`\n\n  return (\n    <Box\n      role=\"listitem\"\n      aria-labelledby={member.login}\n      data-testid={member.login}\n      sx={{\n        padding: '16px',\n        borderBottom: '1px solid',\n        borderBottomColor: 'border.muted',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n      }}\n    >\n      <div className=\"d-flex flex-items-center\">\n        {showRemoveMemberConfirmationDialog && (\n          <RemoveMemberDialog\n            teamName={teamName}\n            removeMemberPath={removeMemberPath}\n            member={member}\n            onMemberRemove={() => {\n              removeMember()\n              setShowRemoveMemberConfirmationDialog(false)\n            }}\n            onDismiss={() => {\n              setShowRemoveMemberConfirmationDialog(false)\n            }}\n          />\n        )}\n        <Link aria-labelledby={member.login} href={memberPath}>\n          <GitHubAvatar sx={{ml: '1px'}} size={48} src={ownerAvatarPath({owner: member.login})} alt={member.login} />\n        </Link>\n        <div className=\"d-flex flex-column ml-2\">\n          <Link data-testid={`user-link-${member.login}`} aria-labelledby={member.login} href={memberPath}>\n            <div className=\"d-flex f4\">{member.name || member.login}</div>\n          </Link>\n          {member.name && (\n            <div className=\"color-fg-muted\" data-testid={`user-name-second-line-${member.login}`}>\n              {member.login}\n            </div>\n          )}\n        </div>\n      </div>\n      {!hideRemoveMemberButton && directMembershipsEnabled && (\n        <ActionMenu>\n          <ActionMenu.Anchor>\n            {/* eslint-disable-next-line primer-react/a11y-remove-disable-tooltip */}\n            <IconButton\n              unsafeDisableTooltip={true}\n              icon={KebabHorizontalIcon}\n              aria-label={`View actions for ${member.login}`}\n            />\n          </ActionMenu.Anchor>\n          <ActionMenu.Overlay>\n            <ActionList>\n              <ActionList.Item\n                variant=\"danger\"\n                onSelect={() => {\n                  setShowRemoveMemberConfirmationDialog(true)\n                }}\n              >\n                Remove from team\n              </ActionList.Item>\n            </ActionList>\n          </ActionMenu.Overlay>\n        </ActionMenu>\n      )}\n    </Box>\n  )\n}\n\nexport default TeamMemberListItem\n\ntry{ TeamMemberListItem.displayName ||= 'TeamMemberListItem' } catch {}","import {ListView} from '@github-ui/list-view'\nimport type {EnterpriseTeam, User} from './types'\nimport TeamMemberListItem from './TeamMemberListItem'\n\ntype TeamListProps = {\n  enterpriseTeam: EnterpriseTeam\n  members: User[]\n  businessSlug: string\n  directMembershipsEnabled: boolean\n  removeMember: () => void\n  removeMemberPath: string\n  hideRemoveMemberButtons?: boolean\n  useMemberOrganizationsPathForUserLinks?: boolean\n}\n\nconst TeamList = ({\n  enterpriseTeam,\n  members,\n  businessSlug,\n  directMembershipsEnabled,\n  removeMember,\n  removeMemberPath,\n  hideRemoveMemberButtons = false,\n  useMemberOrganizationsPathForUserLinks = true,\n}: TeamListProps) => (\n  // eslint-disable-next-line github/a11y-role-supports-aria-props\n  <div aria-labelledby=\"enterprise-team-list-container\">\n    <ListView aria-labelledby=\"enterprise-team-list\" title={enterpriseTeam.name}>\n      {members.map((member: User) => (\n        <TeamMemberListItem\n          aria-labelledby={member.id}\n          key={member.id}\n          teamName={enterpriseTeam.name}\n          member={member}\n          businessSlug={businessSlug}\n          removeMemberPath={removeMemberPath}\n          directMembershipsEnabled={directMembershipsEnabled}\n          removeMember={removeMember}\n          hideRemoveMemberButton={hideRemoveMemberButtons}\n          useMemberOrganizationsPathForUserLink={useMemberOrganizationsPathForUserLinks}\n        />\n      ))}\n    </ListView>\n  </div>\n)\n\nexport default TeamList\n\ntry{ TeamList.displayName ||= 'TeamList' } catch {}","import {useEffect, useState} from 'react'\nimport {Box, Pagination} from '@primer/react'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport SearchAndAddView from './EnterpriseTeamViewSearch'\nimport EmptyList from './EmptyList'\nimport type {EnterpriseTeam, User} from './types'\nimport TeamList from './TeamList'\n\nexport interface EnterpriseTeamProps {\n  business_slug: string\n  enterprise_team: EnterpriseTeam\n  members: User[]\n  total_members: number\n  direct_memberships_enabled: boolean\n  page_size: number\n  member_suggestions_path: string\n  readonly: boolean\n  use_member_organizations_path_for_user_links: boolean\n}\n\nconst pluralize = (count: number, noun: string, suffix = 's') => `${count} ${noun}${count !== 1 ? suffix : ''}`\n\nconst TableHeader = ({numMembers, teamName}: {numMembers: number; teamName: string}) => (\n  // eslint-disable-next-line github/a11y-role-supports-aria-props\n  <Box\n    aria-labelledby=\"select-all-container\"\n    sx={{\n      bg: 'canvas.subtle',\n      borderBottom: '1px solid',\n      borderBottomColor: 'border.muted',\n    }}\n  >\n    <Box sx={{color: 'muted', display: 'flex', alignContent: 'center', padding: '13px'}}>\n      <div>\n        {pluralize(numMembers, 'member')} in {teamName}\n      </div>\n    </Box>\n  </Box>\n)\n\nexport function EnterpriseTeam({\n  business_slug: businessSlug,\n  enterprise_team: enterpriseTeam,\n  members,\n  total_members: initialTotalMembers,\n  direct_memberships_enabled: directMembershipsEnabled,\n  member_suggestions_path: memberSuggestionsPath,\n  page_size: pageSize,\n  readonly,\n  use_member_organizations_path_for_user_links: useMemberOrganizationsPathForUserLinks,\n}: EnterpriseTeamProps) {\n  const [urlSearchParams, setUrlSearchParams] = useState(new URLSearchParams(''))\n  const [currentPage, setCurrentPage] = useState(1)\n  const [searchboxValue, setSearchboxValue] = useState('')\n  const [membersToRender, setMembersToRender] = useState(members)\n  const [totalMembers, setTotalMembers] = useState(initialTotalMembers)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search)\n    setUrlSearchParams(params)\n    setSearchboxValue(params.get('query') || '')\n    setCurrentPage(parseInt(params.get('page') || '1'))\n  }, [setUrlSearchParams, setSearchboxValue, setCurrentPage])\n\n  const refreshData = () => {\n    paginate(currentPage)\n  }\n  const setSearchParam = (key: string, value: string) => {\n    urlSearchParams.set(key, value)\n    window.history.replaceState({...window.history.state}, '', `?${urlSearchParams.toString()}`)\n  }\n  const handleSearchChange = (value: string) => {\n    setSearchboxValue(value)\n    setSearchParam('query', value)\n    paginate(1)\n  }\n  const onPageChange: Parameters<typeof Pagination>['0']['onPageChange'] = (e, page) => {\n    e.preventDefault()\n    paginate(page)\n  }\n  const paginate = async (page: number): Promise<void> => {\n    setLoading(true)\n    setSearchParam('page', page.toString())\n\n    const result = await verifiedFetchJSON(\n      `/enterprises/${businessSlug}/teams/${enterpriseTeam.slug}/members?${urlSearchParams.toString()}`,\n      {\n        method: 'GET',\n        headers: {Accept: 'application/json'},\n      },\n    )\n    const data = await result.json()\n\n    setMembersToRender(data.members)\n    setTotalMembers(data.total_members)\n    setCurrentPage(page)\n    setLoading(false)\n  }\n\n  const addMember = () => {\n    refreshData()\n  }\n\n  const removeMember = () => {\n    paginate(currentPage)\n  }\n\n  return (\n    // eslint-disable-next-line github/a11y-role-supports-aria-props\n    <div aria-labelledby=\"enterprise-team-page-container\">\n      <SearchAndAddView\n        addMember={addMember}\n        addMemberPath={`/enterprises/${businessSlug}/teams/${enterpriseTeam.slug}/members`}\n        editPath={`/enterprises/${businessSlug}/teams/${enterpriseTeam.slug}/edit`}\n        directMembershipsEnabled={directMembershipsEnabled}\n        loading={loading}\n        searchboxValue={searchboxValue}\n        onSearchChange={handleSearchChange}\n        memberSuggestionsPath={memberSuggestionsPath}\n        teamName={enterpriseTeam.name}\n        hideAddMemberButton={readonly}\n        hideEditTeamButton={readonly}\n      />\n      {/* eslint-disable-next-line github/a11y-role-supports-aria-props */}\n      <Box\n        aria-labelledby=\"team-list-table-container\"\n        sx={{border: '1px solid', borderColor: 'border.muted', borderBottom: 'none', borderRadius: 2}}\n      >\n        {/* eslint-disable-next-line github/a11y-role-supports-aria-props */}\n        <Box\n          aria-labelledby=\"team-list-table-view\"\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <TableHeader numMembers={totalMembers} teamName={enterpriseTeam.name} />\n          {membersToRender.length > 0 ? (\n            <TeamList\n              enterpriseTeam={enterpriseTeam}\n              members={membersToRender}\n              businessSlug={businessSlug}\n              removeMemberPath={`/enterprises/${businessSlug}/teams/${enterpriseTeam.slug}/members`}\n              directMembershipsEnabled={directMembershipsEnabled}\n              removeMember={removeMember}\n              hideRemoveMemberButtons={readonly}\n              useMemberOrganizationsPathForUserLinks={useMemberOrganizationsPathForUserLinks}\n            />\n          ) : (\n            <EmptyList />\n          )}\n        </Box>\n      </Box>\n      {totalMembers > pageSize && (\n        <Pagination\n          showPages={totalMembers > pageSize}\n          pageCount={Math.ceil(totalMembers / pageSize)}\n          currentPage={currentPage}\n          onPageChange={onPageChange}\n          data-testid=\"pagination\"\n        />\n      )}\n    </div>\n  )\n}\n\ntry{ TableHeader.displayName ||= 'TableHeader' } catch {}\ntry{ EnterpriseTeam.displayName ||= 'EnterpriseTeam' } catch {}","import {registerReactPartial} from '@github-ui/react-core/register-partial'\nimport {EnterpriseTeam} from './EnterpriseTeam'\n\nregisterReactPartial('enterprise-team', {\n  Component: EnterpriseTeam,\n})\n","export const HeaderTags = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] as const\nexport type HeaderTag = (typeof HeaderTags)[number]\nexport const HeaderTagLevels = ['list-view', 'list-view-metadata', 'listitem'] as const\nexport type HeaderTagLevel = (typeof HeaderTagLevels)[number]\nexport const defaultTitleHeaderTag = 'h2' as HeaderTag\nexport const defaultHeaderTags = {\n  'list-view': defaultTitleHeaderTag,\n  'list-view-metadata': 'h3' as HeaderTag,\n  listitem: 'h3' as HeaderTag,\n}\n\nexport const Variants = ['default', 'compact'] as const\n\nexport const defaultVariant = 'default'\nexport const defaultIsSelectable = false\nexport const defaultTitle = 'List view'\nexport const defaultTotalCount = 3\nexport const defaultSelectedCount = 0\n","export class DeferredRegistry<T> {\n  private registrationEntries: Record<\n    string,\n    {\n      promise: Promise<T>\n      resolve?: (r: T) => void\n    }\n  > = {}\n\n  public register(name: string, registration: T) {\n    const entry = this.registrationEntries[name]\n    if (entry) {\n      entry.resolve?.(registration)\n    } else {\n      this.registrationEntries[name] = {\n        promise: Promise.resolve(registration),\n      }\n    }\n  }\n\n  public getRegistration(name: string): Promise<T> {\n    this.registrationEntries[name] ||= new Deferred()\n    return this.registrationEntries[name].promise\n  }\n}\n\nclass Deferred<T> {\n  declare promise\n  declare resolve: (r: T) => void\n\n  constructor() {\n    this.promise = new Promise<T>(resolve => {\n      this.resolve = resolve\n    })\n  }\n}\n","import type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {useCallback, useEffect, useRef, useState} from 'react'\n\ninterface ReactPartialAnchor {\n  /**\n   * DO NOT USE THIS PROPERTY DIRECTLY. It is meant to be used with useExternalAnchor and useOnAnchorClick\n   */\n  __wrapperElement: ReactPartialAnchorElement\n}\n\nexport interface ReactPartialAnchorProps {\n  reactPartialAnchor?: ReactPartialAnchor\n}\n\nexport function usePartialAnchorProps(\n  anchorElement: ReactPartialAnchorElement | undefined | null,\n): ReactPartialAnchorProps {\n  useEffect(() => {\n    const anchor = anchorElement?.anchor\n\n    if (!anchor) {\n      return\n    }\n\n    if ('disabled' in anchor) {\n      anchor.disabled = false\n    }\n    anchor.classList.remove('cursor-wait')\n  }, [anchorElement])\n\n  if (!anchorElement) {\n    return {}\n  }\n\n  return {\n    reactPartialAnchor: {\n      __wrapperElement: anchorElement,\n    },\n  }\n}\n\nexport function useExternalAnchor(reactPartialAnchor: ReactPartialAnchor) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor || null)\n  const [open, setOpen] = useState(false)\n\n  const onClick = useCallback(() => {\n    // toggle the open state when clicked\n    setOpen(!open)\n  }, [open, setOpen])\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    ref.current.setAttribute('aria-expanded', open.toString())\n    ref.current.setAttribute('aria-haspopup', 'true')\n  }, [ref, open])\n\n  useOnAnchorClick(reactPartialAnchor, onClick)\n\n  return {\n    ref,\n    open,\n    setOpen,\n  }\n}\n\nexport function useOnAnchorClick(reactPartialAnchor: ReactPartialAnchor, onClick: (event: MouseEvent) => void) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor)\n\n  useEffect(() => {\n    const element = ref.current\n    if (!element) {\n      return\n    }\n\n    element.addEventListener('click', onClick)\n    return () => element.removeEventListener('click', onClick)\n  }, [ref, onClick])\n}\n\nexport type PropsWithPartialAnchor<T> = T & Required<ReactPartialAnchorProps>\n","import {DeferredRegistry} from './deferred-registry'\n\nexport interface PartialRegistration {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Component: React.ComponentType<any>\n}\n\nexport const partialRegistry = new DeferredRegistry<PartialRegistration>()\n\nexport function getReactPartial(appName: string) {\n  return partialRegistry.getRegistration(appName)\n}\n","import {controller} from '@github/catalyst'\nimport {getReactPartial} from './react-partial-registry'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {ReactBaseElement} from './ReactBaseElement'\nimport {PartialEntry} from './PartialEntry'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\n\n// What is this silliness? Is it react or a web component?!\n// It's a web component we use to bootstrap react partials within the monolith.\n@controller\nclass ReactPartialElement extends ReactBaseElement<EmbeddedPartialData> {\n  nameAttribute = 'partial-name'\n\n  async getReactNode(embeddedData: EmbeddedPartialData) {\n    const {Component} = await getReactPartial(this.name)\n\n    // Some React Partials will be wrapped in a react-partial-anchor, which is used to conditionally render the Partial\n    const anchorElement = this.closest<ReactPartialAnchorElement>('react-partial-anchor')\n\n    return (\n      <PartialEntry\n        partialName={this.name}\n        embeddedData={embeddedData}\n        Component={Component}\n        wasServerRendered={this.hasSSRContent}\n        ssrError={this.ssrError}\n        anchorElement={anchorElement}\n      />\n    )\n  }\n}\n","import {partialRegistry, type PartialRegistration} from './react-partial-registry'\n// Import the web component to get it registered on the window\nimport './ReactPartialElement'\n\n// NOTE: if the signature of this method changes, also update the react-partial-name ESLint rule\n// /workspaces/github/ui/packages/eslint-plugin-github-monorepo/rules/react-partial-name.js\nexport function registerReactPartial(name: string, registration: PartialRegistration) {\n  partialRegistry.register(name, registration)\n}\n","import safeStorage from '@github-ui/safe-storage'\n\nconst {getItem, setItem, removeItem} = safeStorage('localStorage')\nconst REACT_PROFILING_ENABLED = 'REACT_PROFILING_ENABLED'\n\ninterface ReactProfilingModeMethods {\n  enable: () => void\n  disable: () => void\n  isEnabled: () => boolean\n}\n\nconst ReactProfilingMode: ReactProfilingModeMethods = {\n  enable: () => setItem(REACT_PROFILING_ENABLED, 'true'),\n  disable: () => removeItem(REACT_PROFILING_ENABLED),\n  isEnabled: () => !!getItem(REACT_PROFILING_ENABLED),\n}\n\nexport default ReactProfilingMode\n","export interface TestIdProps {\n  /** Test ID to be queried by automated testing suites */\n  'data-testid'?: string\n}\n\nexport const testIdProps = (value: string): TestIdProps => {\n  return {'data-testid': value}\n}\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  assertRelativePathOrSameOrigin(path)\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\nfunction assertRelativePathOrSameOrigin(path: string) {\n  if (process.env.NODE_ENV === 'test' && !window.location.origin) return\n  const url = new URL(path, window.location.origin)\n  if (url.origin !== window.location.origin) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetch(path, {...init, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetchJSON(path, {...init, headers})\n}\n","import {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {\n  // eslint-disable-next-line no-restricted-imports\n  Avatar,\n  type AvatarProps,\n} from '@primer/react'\nimport {forwardRef, useMemo} from 'react'\n\nexport type GitHubAvatarProps = AvatarProps\n\nexport const GitHubAvatar = forwardRef<HTMLImageElement, GitHubAvatarProps>(function GitHubAvatar(\n  {src, size = 20, ...otherProps}: GitHubAvatarProps,\n  ref,\n) {\n  const avatarUrl = useMemo(() => {\n    // src maybe be relative, e.g. `/mona.png`, in which case the instances main origin should be used,\n    // e.g. \"https://github.com\" for dotcom. If src is a fully quallified URL then the origin argument is ignored.\n    const url = new URL(src, ssrSafeLocation.origin)\n\n    // do not override size if it's already set as query parameter\n    if (!url.searchParams.has('size') && !url.searchParams.has('s')) {\n      // we double size for better rendering on high density pixel screens\n      url.searchParams.set('size', String(Number(size) * 2))\n    }\n\n    return url.toString()\n  }, [src, size])\n\n  return <Avatar ref={ref} src={avatarUrl} size={size} data-testid=\"github-avatar\" {...otherProps} />\n})\n\ntry{ GitHubAvatar.displayName ||= 'GitHubAvatar' } catch {}","import {createContext, type PropsWithChildren, useContext, useId, useMemo} from 'react'\n\nexport type IdContextProps = {\n  /**\n   * The prefix for use with unique `id` attributes for the list view and its subcomponents.\n   */\n  idPrefix: string\n}\n\nexport const IdContext = createContext<IdContextProps | undefined>(undefined)\n\nexport const IdProvider = ({children}: PropsWithChildren) => {\n  const idPrefix = useId()\n  const contextProps = useMemo(() => ({idPrefix}) satisfies IdContextProps, [idPrefix])\n\n  return <IdContext.Provider value={contextProps}>{children}</IdContext.Provider>\n}\n\nIdProvider.displayName = 'ListViewIdProvider'\n\nexport const useListViewId = () => {\n  const context = useContext(IdContext)\n  if (!context) throw new Error('useListViewId must be used with IdProvider.')\n  return context\n}\n\n/**\n * Determine if it's safe to use the `useListViewId` hook.\n * @returns true when called from within a ListView component\n */\nexport const useIsWithinListView = () => {\n  return useContext(IdContext) !== undefined\n}\n\ntry{ IdContext.displayName ||= 'IdContext' } catch {}","import {noop} from '@github-ui/noop'\nimport {createContext, type PropsWithChildren, useContext, useMemo, useState} from 'react'\n\nexport type ItemsContextProps = {\n  /**\n   * Whether any of the items in the ListView include an action bar. Will be used to ensure consistent\n   * alignment of the ListItem's trailing content.\n   */\n  anyItemsWithActionBar: boolean\n  /**\n   * Register whether any ListItem includes an action bar or not.\n   */\n  setAnyItemsWithActionBar: (hasActionBar: boolean) => void\n  /**\n   * Whether any of the items in the ListView includes actions that will move into a dropdown menu when the screen isn't big enough to\n   * fit them side by side.. Will be used to ensure consistent alignment of the ListItem's trailing content.\n   */\n  hasResizableActionsWithActionBar: boolean\n  setHasResizableActionsWithActionBar: (hasActionBar: boolean) => void\n}\n\nconst ItemsContext = createContext<ItemsContextProps>({\n  anyItemsWithActionBar: false,\n  setAnyItemsWithActionBar: noop,\n  hasResizableActionsWithActionBar: false,\n  setHasResizableActionsWithActionBar: noop,\n})\n\nexport const ItemsProvider = ({children}: PropsWithChildren) => {\n  const [anyItemsWithActionBar, setAnyItemsWithActionBar] = useState(false)\n  const [hasResizableActionsWithActionBar, setHasResizableActionsWithActionBar] = useState(false)\n  const contextProps = useMemo(\n    () =>\n      ({\n        anyItemsWithActionBar,\n        setAnyItemsWithActionBar,\n        hasResizableActionsWithActionBar,\n        setHasResizableActionsWithActionBar,\n      }) satisfies ItemsContextProps,\n    [anyItemsWithActionBar, hasResizableActionsWithActionBar],\n  )\n  return <ItemsContext.Provider value={contextProps}>{children}</ItemsContext.Provider>\n}\n\nItemsProvider.displayName = 'ListViewItemsProvider'\n\nexport const useListViewItems = () => {\n  return useContext(ItemsContext)\n}\n\ntry{ ItemsContext.displayName ||= 'ItemsContext' } catch {}","import {FocusKeys} from '@primer/behaviors'\n// eslint-disable-next-line no-restricted-imports\nimport {iterateFocusableElements} from '@primer/behaviors/utils'\nimport {useFocusZone} from '@primer/react'\n\nexport function useRovingTabIndex(): {containerRef: React.RefObject<HTMLElement>} {\n  const {containerRef} = useFocusZone({\n    strict: true,\n    bindKeys: FocusKeys.ArrowVertical | FocusKeys.HomeAndEnd | FocusKeys.PageUpDown | FocusKeys.Tab,\n    focusInStrategy: () => {\n      if (!containerRef.current) return\n      const lastFocused = containerRef.current.querySelector('[tabindex=\"0\"]') as HTMLElement\n      const listItemToFocus = lastFocused?.closest('[role=listitem]') as HTMLElement\n\n      return listItemToFocus ? listItemToFocus : lastFocused\n    },\n    focusableElementFilter: element => element.getAttribute('role') !== 'list',\n    getNextFocusable: (direction, from, event) => {\n      if (!(from instanceof HTMLElement)) return\n\n      // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n      if (event.key === 'Tab' || event.code === 'Tab') {\n        // Custom tab focus behavior:\n        // 1. Check if focus is on the list item\n        // 2. Find the previous focusable element before the list-view.\n        // 3. Move focus to that.\n        if (event.shiftKey && from.getAttribute('role') === 'listitem') {\n          return getFocusElementOutsideOfListView(from, 'previous')\n        }\n\n        const listItem = from.closest('[role=listitem]') as HTMLElement\n        if (!listItem) return\n\n        const focusableElements = [...iterateFocusableElements(listItem, {strict: true})]\n\n        // Custom tab behavior when a select input and a trailing badge are present in a list item:\n        // 1. Check if focusableElements contains a trailing badge.\n        // 2. If selectable element also exists then swap the trailing badge and selection focus order\n        const hasTrailingBadgeIndex = focusableElements.findIndex(\n          element => element.parentElement?.getAttribute('data-listview-component') === 'trailing-badge',\n        )\n        const hasSelectableElementIndex = focusableElements.findIndex(\n          element => element.getAttribute('data-listview-component') === 'selection-input',\n        )\n\n        if (hasTrailingBadgeIndex >= 0 && hasSelectableElementIndex >= 0) {\n          focusableElements.splice(hasTrailingBadgeIndex, 0, focusableElements[hasSelectableElementIndex]!)\n          focusableElements.splice(hasSelectableElementIndex + 1, 1)\n        }\n\n        const eventIndex = focusableElements.indexOf(event.target as HTMLElement)\n        if (eventIndex === focusableElements.length - 1 && !event.shiftKey) {\n          // Custom tab focus behavior:\n          // 1. Check if focus is on the last focusable item in a list item\n          // 2. Find the next focusable element after the list-view.\n          // 3. Move focus to that.\n          return getFocusElementOutsideOfListView(from, 'next')\n        } else if (eventIndex > 0) {\n          // If we are within the listitem, move focus to the next/previous focusable element\n          // This is to handle dynamic `visibility: hidden` on elements (e.g. label is hidden/visible based on viewport)\n          if (event.shiftKey) return focusableElements[eventIndex - 1]\n          return focusableElements[eventIndex + 1]\n        }\n\n        // If undefined is returned, the regular algorithm to select the next element to focus will be used.\n        // https://primer.style/react/focusZone#focuszonesettings-interface\n        return\n      }\n\n      if (direction === 'previous') {\n        // Focus previous visible element\n        return getListItemElement(from, direction) || getFirstElement(from)\n      }\n\n      if (direction === 'next') {\n        // Focus next visible element\n        return getListItemElement(from, direction) || getLastElement(from)\n      }\n\n      if (direction === 'start') {\n        return getFirstElement(from)\n      }\n\n      if (direction === 'end') {\n        return getLastElement(from)\n      }\n\n      return undefined\n    },\n  })\n  return {containerRef}\n}\n\nfunction getListItemElement(element: HTMLElement, direction: 'next' | 'previous'): HTMLElement | undefined {\n  let listItem = element\n\n  // In case the event is fired from a child element, find the parent listitem\n  const foundListItem: HTMLElement | null = element.closest('[role=listitem]')\n  if (foundListItem) listItem = foundListItem\n\n  const root = listItem.closest('[role=list]')\n  if (!root) return\n\n  const walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, node => {\n    if (!(node instanceof HTMLElement)) return NodeFilter.FILTER_SKIP\n    return node.getAttribute('role') === 'listitem' ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP\n  })\n\n  let current = walker.firstChild()\n\n  let i = 0\n  while (current !== listItem) {\n    current = walker.nextNode()\n    i++\n    if (i > 500) break // fail-safe to not cause an endless loop\n  }\n\n  let next = direction === 'next' ? walker.nextNode() : walker.previousNode()\n\n  // If next element is nested inside a collapsed sublist, continue iterating\n  while (next instanceof HTMLElement && next.parentElement?.closest('[role=listitem][aria-expanded=false]')) {\n    next = direction === 'next' ? walker.nextNode() : walker.previousNode()\n  }\n\n  return next instanceof HTMLElement ? next : undefined\n}\n\nfunction getFirstElement(element: HTMLElement): HTMLElement | undefined {\n  const root = element.closest('[role=list]')\n  const first = root?.querySelector('[role=listitem]')\n  return first instanceof HTMLElement ? first : undefined\n}\n\nfunction getLastElement(element: HTMLElement): HTMLElement | undefined {\n  const root = element.closest('[role=list]')\n  const items = root?.querySelectorAll('[role=listitem]')\n\n  if (!items || items.length < 1) return\n\n  const last = items[items.length - 1]\n  if (last instanceof HTMLElement) return last\n}\n\nfunction getFocusElementOutsideOfListView(\n  element: HTMLElement,\n  direction: 'previous' | 'next',\n): HTMLElement | undefined {\n  // Find all focusable elements in the document excluding elements in ListView.\n  // All focusable elements inside a list-view are programatically given a tabindex of -1 because of the focusZone hook\n  // so by setting onlyTabbable:true we disregard elements in ListView to find the next focusable element outside of list-view\n  const focusableElements = [...iterateFocusableElements(document.documentElement, {strict: true, onlyTabbable: true})]\n  const currentFocusedElementIndex = focusableElements.indexOf(element)\n\n  // Search for the nearest focusable element before/after the current focused element\n  // that is outside of a list view and is focusable.\n  return direction === 'next'\n    ? focusableElements[currentFocusedElementIndex + 1]\n    : focusableElements[currentFocusedElementIndex - 1]\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"ul\":\"ListView-module__ul--vMLEZ\",\"container\":\"ListView-module__container--zF6wW\"};","import {noop} from '@github-ui/noop'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {Box, Heading} from '@primer/react'\nimport {clsx} from 'clsx'\nimport {\n  Children,\n  type MutableRefObject,\n  type PropsWithChildren,\n  type ReactElement,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\n\nimport {defaultVariant} from '../constants'\nimport {useRovingTabIndex} from '../hooks/use-roving-tab-index'\nimport type {PrefixedStylableProps} from '../types'\nimport {IdProvider, useListViewId} from './IdContext'\nimport {ItemsProvider} from './ItemsContext'\nimport styles from './ListView.module.css'\nimport type {ListViewMetadata} from './Metadata'\nimport {MultiPageSelectionProvider} from './MultiPageSelectionContext'\nimport {type SelectionContextProps, SelectionProvider} from './SelectionContext'\nimport {TitleProvider, type TitleProviderProps, useListViewTitle} from './TitleContext'\nimport {VariantProvider, type VariantType} from './VariantContext'\n\nexport type ListViewProps = PropsWithChildren<{\n  /**\n   * An optional element to contain bulk actions, a 'Select all' checkbox, a density toggle for the view, etc.\n   */\n  metadata?: ReactElement<typeof ListViewMetadata>\n  /**\n   * Controls the width and height of the list and its contents\n   */\n  variant?: VariantType\n  /**\n   * Callback for when the variant changes\n   */\n  onVariantChange?: (variant: VariantType) => void\n  /**\n   * Controls item's selection mode; bulk actions are allowed if true. Defaults to not selectable.\n   */\n  isSelectable?: boolean\n  /**\n   * What a single list item should be called. Used to customize assistive text about how many list items are\n   * selected. Defaults to 'list item'.\n   */\n  singularUnits?: string\n  /**\n   * What many list items are called. Used to customize assistive text about how many list items are selected.\n   * Defaults to 'list items'.\n   */\n  pluralUnits?: string\n  /**\n   * Optional ID of an element that labels the list view. When provided, this takes the place of the default sr-only title.\n   */\n  ariaLabelledBy?: string\n\n  listRef?: MutableRefObject<HTMLUListElement | undefined>\n}> &\n  Omit<TitleProviderProps, 'children'> &\n  Pick<SelectionContextProps, 'totalCount'> &\n  Partial<Pick<SelectionContextProps, 'selectedCount'>> &\n  PrefixedStylableProps<'itemsList'>\n\nexport const ListView = ({\n  title,\n  titleHeaderTag,\n  children,\n  totalCount,\n  selectedCount = 0,\n  variant: externalVariant = defaultVariant,\n  singularUnits,\n  pluralUnits,\n  onVariantChange = noop,\n  isSelectable,\n  ...rest\n}: PropsWithChildren<ListViewProps>): JSX.Element => {\n  const [variant, setVariant] = useState(externalVariant)\n\n  useEffect(() => setVariant(externalVariant), [externalVariant])\n\n  useEffect(() => {\n    onVariantChange?.(variant)\n  }, [onVariantChange, variant])\n\n  const countOnPage = useMemo(() => Children.toArray(children).length, [children])\n\n  return (\n    <IdProvider>\n      <TitleProvider title={title} titleHeaderTag={titleHeaderTag}>\n        <VariantProvider variant={variant} setVariant={setVariant}>\n          <SelectionProvider\n            countOnPage={countOnPage}\n            selectedCount={selectedCount}\n            totalCount={totalCount}\n            singularUnits={singularUnits}\n            pluralUnits={pluralUnits}\n            isSelectable={isSelectable}\n          >\n            <MultiPageSelectionProvider>\n              <ItemsProvider>\n                <ListViewContainer {...rest}>{children}</ListViewContainer>\n              </ItemsProvider>\n            </MultiPageSelectionProvider>\n          </SelectionProvider>\n        </VariantProvider>\n      </TitleProvider>\n    </IdProvider>\n  )\n}\n\nconst ListViewContainer = ({\n  metadata,\n  children,\n  listRef,\n  ariaLabelledBy: externalAriaLabelledBy,\n  itemsListClassName: className,\n  itemsListStyle: style,\n  itemsListSx: sx,\n  ...rest\n}: Omit<ListViewProps, 'title' | 'titleHeaderTag'>): JSX.Element => {\n  const {idPrefix} = useListViewId()\n  const {title, titleHeaderTag} = useListViewTitle()\n  const {containerRef} = useRovingTabIndex() as {containerRef: MutableRefObject<HTMLUListElement>}\n\n  useEffect(() => {\n    if (listRef) {\n      listRef.current = containerRef.current\n    }\n  }, [containerRef, listRef])\n\n  const listViewContainerTitleId = externalAriaLabelledBy ?? `${idPrefix}-list-view-container-title`\n\n  return (\n    <div id={`${idPrefix}-list-view-container`} className={styles.container}>\n      {!externalAriaLabelledBy && (\n        <Heading\n          className=\"sr-only\"\n          as={titleHeaderTag}\n          id={listViewContainerTitleId}\n          {...testIdProps('list-view-title')}\n        >\n          {title}\n        </Heading>\n      )}\n      {/**\n       * The `metadata` component might have a title rendered in it as well, so there can be some\n       * duplication between it and the sr-only list-view-container-title Heading above. However, having that title\n       * is important for accessibility and it's better to slightly over-describe than not. The `metadata`\n       * section is optional while the title attribute and list-view-container-title that renders it are required.\n       */}\n      {metadata}\n      <Box\n        as=\"ul\"\n        className={clsx(styles.ul, className)}\n        style={style}\n        sx={sx}\n        ref={containerRef}\n        aria-labelledby={listViewContainerTitleId}\n        tabIndex={-1}\n        // TODO: update roving tabIndex to not depend on this unnecessary role\n        role=\"list\"\n        data-listview-component=\"items-list\"\n        {...testIdProps('list-view-items')}\n        {...rest}\n      >\n        {children}\n      </Box>\n    </div>\n  )\n}\n\ntry{ ListView.displayName ||= 'ListView' } catch {}\ntry{ ListViewContainer.displayName ||= 'ListViewContainer' } catch {}","import {\n  createContext,\n  type Dispatch,\n  type PropsWithChildren,\n  type SetStateAction,\n  useContext,\n  useMemo,\n  useState,\n} from 'react'\n\ntype MultiPageSelectionContextProps = {\n  /**\n   * Indicate whether list items from multiple pages of ListView items can be selected by the user at a time. Used to\n   * determine when the 'Select all' checkbox should be rendered in an indeterminate state, to indicate when some but\n   * not all selectable items are selected.\n   */\n  multiPageSelectionAllowed: boolean\n  setMultiPageSelectionAllowed?: Dispatch<SetStateAction<boolean>>\n}\n\nconst MultiPageSelectionContext = createContext<MultiPageSelectionContextProps>({\n  multiPageSelectionAllowed: false,\n})\n\nexport type MultiPageSelectionProviderProps = PropsWithChildren<{\n  /**\n   * Indicate whether list items from multiple pages of ListView items can be selected by the user at a time. Used to\n   * determine when the 'Select all' checkbox should be rendered in an indeterminate state, to indicate when some but\n   * not all selectable items are selected. Defaults to false.\n   */\n  multiPageSelectionAllowed?: MultiPageSelectionContextProps['multiPageSelectionAllowed']\n}>\n\nexport const MultiPageSelectionProvider = ({\n  children,\n  multiPageSelectionAllowed: externalMultiPageSelectionAllowed = false,\n}: MultiPageSelectionProviderProps) => {\n  const [multiPageSelectionAllowed, setMultiPageSelectionAllowed] = useState(externalMultiPageSelectionAllowed)\n  const contextProps = useMemo(() => {\n    return {\n      multiPageSelectionAllowed,\n      setMultiPageSelectionAllowed,\n    } satisfies MultiPageSelectionContextProps\n  }, [multiPageSelectionAllowed])\n\n  return <MultiPageSelectionContext.Provider value={contextProps}>{children}</MultiPageSelectionContext.Provider>\n}\n\nMultiPageSelectionProvider.displayName = 'ListViewMultiPageSelectionProvider'\n\nexport const useListViewMultiPageSelection = () => {\n  return useContext(MultiPageSelectionContext)\n}\n\ntry{ MultiPageSelectionContext.displayName ||= 'MultiPageSelectionContext' } catch {}","import {noop} from '@github-ui/noop'\nimport {\n  createContext,\n  type Dispatch,\n  type PropsWithChildren,\n  type SetStateAction,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\n\nimport {defaultIsSelectable} from '../constants'\n\nconst defaultSingularUnits = 'list item'\nconst defaultPluralUnits = 'list items'\n\nexport type SelectionContextProps = {\n  /**\n   * How many items are selected in the list. Only applicable when the ListView's isSelectable=true.\n   */\n  selectedCount: number\n\n  /**\n   * Update how many items are selected in the ListView.\n   */\n  setSelectedCount: Dispatch<SetStateAction<number>>\n\n  /**\n   * How many items are in the list. Should represent how many items are in all pages of results, if multiple lists\n   * are shown across many pages.\n   */\n  totalCount?: number\n\n  /**\n   * How many list items are shown on the current page. Reflects how many items can be toggled when the 'Select all'\n   * checkbox is checked or unchecked.\n   */\n  countOnPage: number\n\n  /**\n   * Determine if the 'Select all' checkbox is in a checked state. Will be true when all list items currently rendered\n   * in the ListView are selected.\n   */\n  isSelectAllChecked: boolean\n\n  /**\n   * Determine if any list items are currently selected.\n   */\n  anyItemsSelected: boolean\n\n  /**\n   * What a single list item should be called. Used to customize assistive text about how many list items are\n   * selected.\n   */\n  singularUnits: string\n\n  /**\n   * What many list items are called. Used to customize assistive text about how many list items are selected.\n   */\n  pluralUnits: string\n\n  /**\n   * Whether multiple items at a time or no items can be selected.\n   */\n  isSelectable: boolean\n}\n\nconst SelectionContext = createContext<SelectionContextProps>({\n  selectedCount: 0,\n  setSelectedCount: noop,\n  countOnPage: 0,\n  isSelectAllChecked: false,\n  anyItemsSelected: false,\n  singularUnits: defaultSingularUnits,\n  pluralUnits: defaultPluralUnits,\n  isSelectable: defaultIsSelectable,\n})\n\nexport type SelectionProviderProps = PropsWithChildren<\n  Pick<SelectionContextProps, 'totalCount'> & {\n    singularUnits?: SelectionContextProps['singularUnits']\n    pluralUnits?: SelectionContextProps['pluralUnits']\n    isSelectable?: SelectionContextProps['isSelectable']\n    selectedCount?: SelectionContextProps['selectedCount']\n    countOnPage?: SelectionContextProps['countOnPage']\n  }\n>\n\nexport const SelectionProvider = (\n  {\n    children,\n    countOnPage = 0,\n    singularUnits = defaultSingularUnits,\n    pluralUnits = defaultPluralUnits,\n    totalCount,\n    selectedCount: externalSelectedCount = 0,\n    isSelectable = defaultIsSelectable,\n  }: SelectionProviderProps = {\n    singularUnits: defaultSingularUnits,\n    pluralUnits: defaultPluralUnits,\n    selectedCount: 0,\n    countOnPage: 0,\n    isSelectable: defaultIsSelectable,\n  },\n) => {\n  const [selectedCount, setSelectedCount] = useState(externalSelectedCount)\n\n  useEffect(() => setSelectedCount(externalSelectedCount), [externalSelectedCount])\n\n  // Allow for more than shown on page since some ListViews allow selecting all pages of items, and we want to\n  // continue showing the 'Select all' checkbox as checked when more than the current page of items is selected.\n  const isSelectAllChecked = selectedCount > 0 && selectedCount >= countOnPage\n  const anyItemsSelected = selectedCount > 0\n  const contextProps = useMemo(() => {\n    return {\n      totalCount,\n      countOnPage,\n      selectedCount,\n      setSelectedCount,\n      isSelectAllChecked,\n      anyItemsSelected,\n      singularUnits,\n      pluralUnits,\n      isSelectable,\n    } satisfies SelectionContextProps\n  }, [\n    selectedCount,\n    isSelectAllChecked,\n    anyItemsSelected,\n    totalCount,\n    countOnPage,\n    singularUnits,\n    pluralUnits,\n    isSelectable,\n  ])\n\n  return <SelectionContext.Provider value={contextProps}>{children}</SelectionContext.Provider>\n}\nSelectionProvider.displayName = 'ListViewSelectionProvider'\n\nexport const useListViewSelection = () => {\n  return useContext(SelectionContext)\n}\n\ntry{ SelectionContext.displayName ||= 'SelectionContext' } catch {}","import {createContext, type PropsWithChildren, useContext, useMemo, useState} from 'react'\n\nimport {defaultTitle, defaultTitleHeaderTag, type HeaderTag} from '../constants'\n\nexport type TitleContextProps = {\n  /**\n   * A title provides the ListView with a concise, descriptive name that communicates what kind of content it\n   * contains. Will be visually hidden.\n   */\n  title: string\n\n  /**\n   * The HTML element used for the visually hidden title. Should change depending on the information hierarchy of the\n   * page where the ListView is used.\n   */\n  titleHeaderTag: HeaderTag\n\n  hasMetadataTitle: boolean\n  setHasMetadataTitle: (hasMetadataTitle: boolean) => void\n}\n\nconst TitleContext = createContext<TitleContextProps | undefined>(undefined)\n\nexport type TitleProviderProps = PropsWithChildren<{\n  /**\n   * The HTML element used for the visually hidden title. Should change depending on the information hierarchy of the\n   * page where the ListView is used. Defaults to an `<h2>` tag.\n   */\n  titleHeaderTag?: TitleContextProps['titleHeaderTag']\n}> &\n  Pick<TitleContextProps, 'title'>\n\nexport const TitleProvider = ({children, title, titleHeaderTag = defaultTitleHeaderTag}: TitleProviderProps) => {\n  const [hasMetadataTitle, setHasMetadataTitle] = useState(false)\n  const contextProps = useMemo(\n    () =>\n      ({\n        title: title.trim() || defaultTitle,\n        titleHeaderTag,\n        hasMetadataTitle,\n        setHasMetadataTitle,\n      }) satisfies TitleContextProps,\n    [hasMetadataTitle, title, titleHeaderTag],\n  )\n  return <TitleContext.Provider value={contextProps}>{children}</TitleContext.Provider>\n}\n\nTitleProvider.displayName = 'ListViewTitleProvider'\n\nexport const useListViewTitle = () => {\n  const context = useContext(TitleContext)\n  if (!context) throw new Error('useListViewTitle must be used with TitleProvider.')\n  return context\n}\n\ntry{ TitleContext.displayName ||= 'TitleContext' } catch {}","import {noop} from '@github-ui/noop'\nimport {createContext, type PropsWithChildren, useContext, useMemo} from 'react'\n\nimport {defaultVariant, type Variants} from '../constants'\n\nexport type VariantType = (typeof Variants)[number]\n\ntype VariantContextProps = {\n  /**\n   * How the list is being displayed. Controls the width and height of the list and its contents.\n   */\n  variant: VariantType\n  setVariant: (variant: VariantType) => void\n}\n\nconst VariantContext = createContext<VariantContextProps | undefined>(undefined)\n\nexport type VariantProviderProps = PropsWithChildren<{\n  variant?: VariantContextProps['variant']\n  setVariant?: VariantContextProps['setVariant']\n}>\n\nexport const VariantProvider = ({children, variant = defaultVariant, setVariant = noop}: VariantProviderProps) => {\n  const contextProps = useMemo(() => ({variant, setVariant}) satisfies VariantContextProps, [setVariant, variant])\n  return <VariantContext.Provider value={contextProps}>{children}</VariantContext.Provider>\n}\n\nVariantProvider.displayName = 'ListViewVariantProvider'\n\nexport const useListViewVariant = () => {\n  const context = useContext(VariantContext)\n  if (!context) throw new Error('useListViewVariant must be used with VariantProvider.')\n  return context\n}\n\ntry{ VariantContext.displayName ||= 'VariantContext' } catch {}","import {useState} from 'react'\nimport type {BrowserHistory, MemoryHistory} from '@remix-run/router'\nimport {Router} from 'react-router-dom'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\ntype Props = {\n  children: React.ReactNode\n  history: BrowserHistory | MemoryHistory\n}\n\nexport function PartialRouter({children, history}: Props) {\n  const [state, setState] = useState({\n    location: history.location,\n  })\n\n  useHydratedEffect(() => history.listen(setState), [history])\n\n  return (\n    <Router location={state.location} navigator={history}>\n      {children}\n    </Router>\n  )\n}\n\ntry{ PartialRouter.displayName ||= 'PartialRouter' } catch {}","// Think of this as the entry point into the framework\nimport React from 'react'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {BaseProviders} from './BaseProviders'\nimport type {BrowserHistory} from '@remix-run/router'\nimport {createMemoryHistory} from '@remix-run/router'\nimport {AppContextProvider} from './AppContextProvider'\nimport {PartialRouter} from './PartialRouter'\nimport {CommonElements} from './CommonElements'\nimport {createBrowserHistory} from './create-browser-history'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {usePartialAnchorProps} from './react-partial-anchor'\n\ninterface Props {\n  partialName: string\n  embeddedData: EmbeddedPartialData\n  Component: React.ComponentType\n  wasServerRendered: boolean\n  ssrError?: HTMLScriptElement\n  anchorElement?: ReactPartialAnchorElement | null\n}\n\nexport function PartialEntry({\n  partialName,\n  embeddedData,\n  Component,\n  wasServerRendered,\n  ssrError,\n  anchorElement,\n}: Props) {\n  // Create a ref to track the browser history:\n  const historyRef = React.useRef<BrowserHistory>()\n  const window = globalThis.window as Window | undefined\n\n  // For linking to work, we can just pass a dummy pathname here. We may consider plumbing the actual path in\n  if (!historyRef.current) {\n    historyRef.current = !window\n      ? createMemoryHistory({initialEntries: [{pathname: '/'}]})\n      : createBrowserHistory({window})\n  }\n  const history = historyRef.current\n  const partialAnchorProps = usePartialAnchorProps(anchorElement)\n\n  // Wrap the partial in an AppContextProvider and static Router so that react-core links\n  // will be functional.\n  return (\n    <BaseProviders appName={partialName} wasServerRendered={wasServerRendered}>\n      <AppContextProvider history={history} routes={[]}>\n        <PartialRouter history={history}>\n          <Component {...embeddedData.props} {...(partialAnchorProps as object)} />\n          <CommonElements ssrError={ssrError} />\n        </PartialRouter>\n      </AppContextProvider>\n    </BaseProviders>\n  )\n}\n\ntry{ PartialEntry.displayName ||= 'PartialEntry' } catch {}","import {target} from '@github/catalyst'\nimport {createRoot, hydrateRoot} from 'react-dom/client'\nimport type {createRoot as createRootType, hydrateRoot as hydrateRootType, Root} from 'react-dom/client'\nimport React from 'react'\nimport ReactProfilingMode from '@github-ui/react-profiling-mode'\nimport {EXPECTED_ERRORS} from './expected-errors'\nimport {sendStats} from '@github-ui/stats'\n\ntype ReactDOM = {\n  createRoot: typeof createRootType\n  hydrateRoot: typeof hydrateRootType\n}\n\nconst REACT_INVARIANT_ERROR_REGEX = /Minified React error #(?<invariant>\\d+)/\n\nexport abstract class ReactBaseElement<T> extends HTMLElement {\n  @target embeddedData: HTMLScriptElement | undefined\n  @target ssrError: HTMLScriptElement | undefined\n  @target reactRoot: HTMLElement | undefined\n  private root: Root | undefined\n\n  abstract nameAttribute: string\n  abstract getReactNode(embeddedData: T): Promise<React.ReactNode>\n\n  protected get name() {\n    return this.getAttribute(this.nameAttribute) as string\n  }\n\n  private get embeddedDataText() {\n    const text = this.embeddedData?.textContent\n\n    if (!text) {\n      throw new Error(`No embedded data provided for react element ${this.name}`)\n    }\n\n    return text\n  }\n\n  get hasSSRContent() {\n    return this.getAttribute('data-ssr') === 'true'\n  }\n\n  connectedCallback() {\n    this.renderReact()\n  }\n\n  disconnectedCallback() {\n    this.root?.unmount()\n    this.root = undefined\n  }\n\n  private async renderReact() {\n    if (!this.reactRoot) throw new Error('No react root provided')\n    let reactDom: ReactDOM = {\n      createRoot,\n      hydrateRoot,\n    }\n\n    // Override the react-dom import if we're in profiling mode\n    if (ReactProfilingMode.isEnabled()) {\n      reactDom = await this.getReactDomWithProfiling()\n    }\n\n    const embeddedData = JSON.parse(this.embeddedDataText) as T\n    const ssrErrorText = this.ssrError?.textContent\n    const node = await this.getReactNode(embeddedData)\n    const baseNode = <React.StrictMode>{node}</React.StrictMode>\n\n    if (ssrErrorText) {\n      this.logSSRError(ssrErrorText)\n    }\n\n    if (this.hasSSRContent) {\n      /**\n       * Styled-components automatically looks for style tags to hydrate on first page load, but will not detect them\n       * if they are added after the initial page load. This causes a hydration error because React isn't expecting\n       * a style tag within the app. To work around this, we need to manually move the style tags to the head before\n       * hydrating the app.\n       *\n       * During hydration, styled-components will create a new style tag which matches the one we moved to the head.\n       * This means that after hydration, we can safely remove the style tag we manually moved to the head.\n       */\n      const styles = this.querySelector('style[data-styled=\"true\"]')\n      if (styles) document.head.appendChild(styles)\n\n      // Hydrate the react app\n      // onRecoverableError is disabled until we have a react version with this fix in:\n      // https://github.com/facebook/react/pull/25692\n      this.root = reactDom.hydrateRoot(this.reactRoot, baseNode, {\n        onRecoverableError: error => {\n          if (!(error instanceof Error)) return\n\n          const match = REACT_INVARIANT_ERROR_REGEX.exec(error.message)\n          const invariant = String(match?.groups?.invariant)\n\n          sendStats({\n            incrementKey: 'REACT_HYDRATION_ERROR',\n            incrementTags: {\n              appName: this.name,\n              invariant,\n            },\n          })\n        },\n      })\n\n      // Remove the manually moved style tag after hydration\n      if (styles) {\n        // Wait until things are idle to remove the style tag. If we do it immediately, we can cause a flash of unstyled content.\n        requestIdleCallback(() => {\n          // styles could have already been removed by Turbo if a navigation happens quickly. Only remove it from the DOM if it's still there.\n          styles.parentElement?.removeChild(styles)\n        })\n      }\n    } else {\n      this.root = reactDom.createRoot(this.reactRoot)\n      this.root.render(baseNode)\n    }\n\n    this.classList.add('loaded')\n  }\n\n  private getReactDomWithProfiling() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return import('react-dom/profiling') as any as Promise<ReactDOM>\n  }\n\n  private logSSRError(ssrErrorText: string) {\n    if (EXPECTED_ERRORS[ssrErrorText]) {\n      // eslint-disable-next-line no-console\n      return console.error('SSR failed with an expected error:', EXPECTED_ERRORS[ssrErrorText])\n    }\n\n    try {\n      const error = JSON.parse(ssrErrorText) as PlatformJavascriptError\n      const stacktrace = parseFailbotStacktrace(error)\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', `${error.type}: ${error.value}\\n`, error, stacktrace)\n    } catch {\n      /**\n       * In the event we couldn't log the error, we should not break the application\n       */\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', ssrErrorText, 'unable to parse as json')\n    }\n  }\n}\n\nfunction parseFailbotStacktrace(error: PlatformJavascriptError) {\n  if (!error.stacktrace) return ''\n  let prefix = '\\n '\n  const stack = error.stacktrace.map((frame: PlatformStackframe) => {\n    const {function: func, filename, lineno, colno} = frame\n    const line = `${prefix} at ${func} (${filename}:${lineno}:${colno})`\n    prefix = ' '\n    return line\n  })\n  return stack.join('\\n')\n}\n\ntry{ REACT_INVARIANT_ERROR_REGEX.displayName ||= 'REACT_INVARIANT_ERROR_REGEX' } catch {}","import {Box, type BoxProps, Text, type TextProps} from '@primer/react'\nimport type {ForwardRefComponent as PolymorphicForwardRefComponent} from '@radix-ui/react-polymorphic'\nimport DOMPurify, {type Config as DOMPurifyConfig} from 'dompurify'\nimport type React from 'react'\nimport {forwardRef} from 'react'\n\ntype Brand<TBase, TBrand extends string> = TBase & {__brand: TBrand}\n\n/**\n * A string that has specifically been marked as verified.\n *\n * WARNING: A string should only be branded as a `SafeHTMLString` if one of the following applies:\n * - it comes from a trusted source on the server\n * - has known static content, or\n * - has been sanitized by DOMPurify.\n */\nexport type SafeHTMLString = Brand<string, 'SafeHTMLString'>\n\ninterface BaseHTMLProps {\n  /**\n   * Set the rendered HTML of the component. Use this prop if the source is untrusted. If you know the string can be\n   * trusted, or has already been sanitized, use the `html` prop instead to avoid re-sanitizing.\n   */\n  unverifiedHTML?: string\n  /**\n   * Optional config passed to DOMPurify when sanitizing `unverifiedHTML`.\n   */\n  unverifiedHTMLConfig?: DOMPurifyConfig\n  /**\n   * Set the rendered HTML of the component. To prevent XSS, ensure that the source of this\n   * HTML is trusted! If the source is untrusted, use `unverifiedHTML` instead.\n   */\n  html?: SafeHTMLString\n}\n\ninterface VerifiedHTMLProps extends BaseHTMLProps {\n  unverifiedHTML?: undefined\n  html: SafeHTMLString\n}\n\ninterface UnverifiedHTMLProps extends BaseHTMLProps {\n  unverifiedHTML: string\n  html?: undefined\n}\n\nexport type SafeHTMLProps = VerifiedHTMLProps | UnverifiedHTMLProps\n\ntype PropsWithHTML<T> = T & SafeHTMLProps\n\nfunction getSafeHTMLAndProps<T>(propsWithHtml: PropsWithHTML<T>) {\n  /**\n   * Note we have to explicitly cast props to T because TypeScript\n   * is not properly converting Omit<T & VerifiedHTMLProps, 'html'> to T.\n   *\n   * We include the `as unknown` intermediate step to avoid warnings\n   * about insufficient type overlap\n   */\n\n  if ('html' in propsWithHtml && propsWithHtml.html !== undefined) {\n    const {html, ...props} = propsWithHtml\n    return {\n      // This is verified html, so we can use it directly\n      safeHTML: html,\n      props: props as unknown as T,\n    }\n  }\n\n  const {unverifiedHTML, unverifiedHTMLConfig, ...props} = propsWithHtml\n  const config = {\n    ...unverifiedHTMLConfig,\n    // we want to ensure we are returning a string not a dom node\n    RETURN_DOM: false,\n    RETURN_DOM_FRAGMENT: false,\n  } satisfies DOMPurifyConfig\n\n  return {\n    // Run the unverified HTML through DOMPurify to sanitize it\n    safeHTML: DOMPurify.sanitize(unverifiedHTML, config),\n    props: props as unknown as T,\n  }\n}\n\n/**\n * `SafeHTMLBox` extends `Box` from `@primer/react` with props for safely\n * rendering HTML strings. Exactly one `html` or `unverifiedHTML` must be\n * supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLBox = withSafeHTML<BoxProps>(Box) as PolymorphicForwardRefComponent<\n  'div' | 'span' | 'pre' | 'table' | 'tbody' | 'tr' | 'td' | 'ul' | 'ol' | 'li',\n  PropsWithHTML<BoxProps>\n>\nSafeHTMLBox.displayName = 'SafeHTMLBox'\n\n/**\n * `SafeHTMLText` extends `Text` from `@primer/react` with props for safely\n * rendering HTML strings. Exactly one `html` or `unverifiedHTML` must be\n * supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLText = withSafeHTML<TextProps>(Text) as PolymorphicForwardRefComponent<\n  'div' | 'span' | 'p' | 'strong' | 'em' | 'pre' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'a',\n  PropsWithHTML<TextProps>\n>\nSafeHTMLText.displayName = 'SafeHTMLText'\n\n/**\n * A higher-order component that extends a basic component by offering\n * `html` and `unverifiedHTML` props that are safe alternatives to `dangerouslySetInnerHTML`.\n */\nfunction withSafeHTML<T>(Component: React.ComponentType<T>) {\n  // We give these display names above\n  // eslint-disable-next-line react/display-name\n  const SafeHTMLComponent = forwardRef<HTMLSpanElement, PropsWithHTML<T>>((propsWithHtml, ref) => {\n    const {safeHTML, props} = getSafeHTMLAndProps(propsWithHtml)\n    // This is the only place in the codebase where `dangerouslySetInnerHTML` should be allowed\n    // eslint-disable-next-line react/forbid-component-props\n    return <Component ref={ref} {...props} dangerouslySetInnerHTML={safeHTML ? {__html: safeHTML} : undefined} />\n  })\n\n  return SafeHTMLComponent\n}\n\n/**\n * `SafeHTMLDiv` extends `div`with props for safely rendering HTML strings.\n * Exactly one `html` or `unverifiedHTML` must be supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLDiv = forwardRef<\n  HTMLDivElement,\n  PropsWithHTML<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>>\n>((propsWithHtml, ref) => {\n  const {safeHTML, props} = getSafeHTMLAndProps(propsWithHtml)\n  // eslint-disable-next-line react/no-danger\n  return <div ref={ref} {...props} dangerouslySetInnerHTML={safeHTML ? {__html: safeHTML} : undefined} />\n})\nSafeHTMLDiv.displayName = 'SafeHTMLDiv'\n\ntry{ SafeHTMLComponent.displayName ||= 'SafeHTMLComponent' } catch {}"],"names":["AddMemberDialog","teamName","isOpen","onDialogClose","searchInput","setSearchInput","addMember","addMemberPath","memberSuggestionsPath","searchResults","setSearchResults","useState","selectedMember","setSelectedMember","showLoadingSpinner","setShowLoadingSpinner","visibleErrorMessage","setVisibleErrorMessage","useEffect","login","onAddToTeam","responseJson","submitAddToTeam","undefined","data","error","handleClose","formData","FormData","append","response","verifiedFetch","method","body","headers","Accept","json","callSearch","input","trim","length","result","verifiedFetchJSON","toString","results","enterprise_members","debounceSearch","useRef","debounce","handleSearchChange","current","Dialog","title","onDismiss","Box","sx","padding","display","flexDirection","alignItems","h3","className","div","style","position","width","TextInput","leadingVisual","PersonIcon","aria-label","name","placeholder","value","onChange","e","target","bg","borderTopRightRadius","borderBottomRightRadius","Button","onClick","borderTopLeftRadius","borderBottomLeftRadius","marginLeft","variant","disabled","Spinner","size","mt","map","data-testid","GitHubAvatar","square","ml","src","ownerAvatarPath","owner","color","id","fontSize","alignSelf","XCircleFillIcon","displayName","SearchAndAddView","editPath","directMembershipsEnabled","loading","searchboxValue","onSearchChange","hideAddMemberButton","hideEditTeamButton","setIsOpen","useCallback","aria-labelledby","mb","justifyContent","SearchIcon","marginRight","window","location","href","EmptyList","borderBottomColor","borderBottomStyle","borderBottomWidth","Octicon","icon","h2","RemoveMemberDialog","member","removeMemberPath","onMemberRemove","flash","setFlash","flashRef","focus","handleDismiss","removeMemberFromTeam","onClose","renderFooter","Footer","type","Flash","tabIndex","ref","SafeHTMLBox","html","TeamMemberListItem","businessSlug","removeMember","hideRemoveMemberButton","useMemberOrganizationsPathForUserLink","showRemoveMemberConfirmationDialog","setShowRemoveMemberConfirmationDialog","memberPath","role","borderBottom","Link","alt","ActionMenu","Anchor","IconButton","unsafeDisableTooltip","KebabHorizontalIcon","Overlay","ActionList","Item","onSelect","TeamList","enterpriseTeam","members","hideRemoveMemberButtons","useMemberOrganizationsPathForUserLinks","ListView","pluralize","count","noun","suffix","TableHeader","numMembers","alignContent","EnterpriseTeam","business_slug","enterprise_team","total_members","initialTotalMembers","direct_memberships_enabled","member_suggestions_path","page_size","pageSize","readonly","use_member_organizations_path_for_user_links","urlSearchParams","setUrlSearchParams","URLSearchParams","currentPage","setCurrentPage","setSearchboxValue","membersToRender","setMembersToRender","totalMembers","setTotalMembers","setLoading","params","search","get","parseInt","refreshData","paginate","setSearchParam","key","set","history","replaceState","state","page","slug","border","borderColor","borderRadius","Pagination","showPages","pageCount","Math","ceil","onPageChange","preventDefault","registerReactPartial","Component","HeaderTags","HeaderTagLevels","defaultTitleHeaderTag","defaultHeaderTags","listitem","defaultVariant","defaultIsSelectable","defaultTitle","DeferredRegistry","register","registration","entry","registrationEntries","resolve","promise","Promise","getRegistration","Deferred","constructor","usePartialAnchorProps","anchorElement","anchor","classList","remove","reactPartialAnchor","__wrapperElement","useExternalAnchor","open","setOpen","setAttribute","useOnAnchorClick","element","addEventListener","removeEventListener","partialRegistry","ReactPartialElement","ReactBaseElement","getReactNode","embeddedData","appName","closest","PartialEntry","partialName","wasServerRendered","hasSSRContent","ssrError","nameAttribute","controller","getItem","setItem","removeItem","safeStorage","REACT_PROFILING_ENABLED","enable","disable","isEnabled","testIdProps","path","init","assertRelativePathOrSameOrigin","url","URL","origin","fetch","JSON","stringify","reactFetch","reactFetchJSON","forwardRef","otherProps","avatarUrl","useMemo","ssrSafeLocation","searchParams","has","String","Number","Avatar","IdContext","createContext","IdProvider","children","idPrefix","useId","contextProps","Provider","useListViewId","context","useContext","useIsWithinListView","ItemsContext","anyItemsWithActionBar","setAnyItemsWithActionBar","noop","hasResizableActionsWithActionBar","setHasResizableActionsWithActionBar","ItemsProvider","useListViewItems","getListItemElement","direction","listItem","foundListItem","root","walker","document","createTreeWalker","NodeFilter","SHOW_ELEMENT","node","HTMLElement","getAttribute","FILTER_ACCEPT","FILTER_SKIP","firstChild","i","nextNode","next","previousNode","parentElement","getFirstElement","first","querySelector","getLastElement","items","querySelectorAll","last","getFocusElementOutsideOfListView","focusableElements","iterateFocusableElements","documentElement","strict","onlyTabbable","currentFocusedElementIndex","indexOf","titleHeaderTag","totalCount","selectedCount","externalVariant","singularUnits","pluralUnits","onVariantChange","isSelectable","rest","setVariant","countOnPage","Children","toArray","TitleProvider","VariantProvider","SelectionProvider","MultiPageSelectionProvider","ListViewContainer","metadata","listRef","ariaLabelledBy","externalAriaLabelledBy","itemsListClassName","itemsListStyle","itemsListSx","useListViewTitle","containerRef","useRovingTabIndex","useFocusZone","bindKeys","FocusKeys","ArrowVertical","HomeAndEnd","PageUpDown","Tab","focusInStrategy","lastFocused","listItemToFocus","focusableElementFilter","getNextFocusable","from","event","code","shiftKey","hasTrailingBadgeIndex","findIndex","hasSelectableElementIndex","splice","eventIndex","listViewContainerTitleId","styles","container","Heading","as","clsx","ul","data-listview-component","MultiPageSelectionContext","multiPageSelectionAllowed","externalMultiPageSelectionAllowed","setMultiPageSelectionAllowed","useListViewMultiPageSelection","defaultSingularUnits","defaultPluralUnits","SelectionContext","setSelectedCount","isSelectAllChecked","anyItemsSelected","externalSelectedCount","useListViewSelection","TitleContext","hasMetadataTitle","setHasMetadataTitle","VariantContext","useListViewVariant","PartialRouter","setState","useHydratedEffect","listen","Router","navigator","historyRef","React","globalThis","createBrowserHistory","createMemoryHistory","initialEntries","pathname","partialAnchorProps","BaseProviders","AppContextProvider","routes","props","CommonElements","REACT_INVARIANT_ERROR_REGEX","embeddedDataText","text","textContent","connectedCallback","renderReact","disconnectedCallback","unmount","reactRoot","reactDom","createRoot","hydrateRoot","ReactProfilingMode","getReactDomWithProfiling","parse","ssrErrorText","baseNode","logSSRError","head","appendChild","onRecoverableError","Error","match","exec","message","invariant","groups","sendStats","incrementKey","incrementTags","requestIdleCallback","removeChild","render","add","EXPECTED_ERRORS","console","stacktrace","parseFailbotStacktrace","prefix","stack","function","func","filename","lineno","colno","frame","line","join","SafeHTMLComponent","getSafeHTMLAndProps","propsWithHtml","safeHTML","unverifiedHTML","unverifiedHTMLConfig","config","RETURN_DOM","RETURN_DOM_FRAGMENT","DOMPurify","withSafeHTML","SafeHTMLText","Text","dangerouslySetInnerHTML","__html","SafeHTMLDiv"],"sourceRoot":""}