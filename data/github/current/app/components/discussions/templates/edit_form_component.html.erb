<%# erblint:counter DeprecatedComponentsCounter 1 %>
<template class="js-discussions-edit-form-template">
  <div
    class="js-previewable-comment-form previewable-comment-form write-selected
      {{ outerDivClasses }}"
    data-preview-url="<%= data_preview_url %>"
  >
    <div class="Box CommentBox m-2">
      <%= csrf_hidden_input_for data_preview_url, class: "js-data-preview-url-csrf" %>

      <%= render(Primer::Alpha::TabNav.new(
        label: "Write or Preview Discussion",
        p: 0, position: :static,
        classes: "CommentBox-header",
        body_arguments: {
          classes: "no-wrap",
          role: "tablist"
        }
      )) do |c| %>
        <% c.with_tab(id: "write-tab", panel_id: "write-panel", tag: :button, type: :button, role: :tab, selected: true, px: [3, 6, 3], flex: [1, nil, :auto], classes: "btn-link write-tab js-write-tab selected") { "Write" } %>
        <% c.with_tab(id: "preview-tab", panel_id: "preview-panel", tag: :button, type: :button, role: :tab, flex: [1, nil, :auto], classes: "btn-link preview-tab js-preview-tab") { "Preview" } %>

        <% c.with_extra(align: :right) do %>
          <div
            class="js-discussions-markdown-toolbar-placeholder d-flex flex-auto min-width-0"
            data-textarea-id="{{ textareaId }}"
          >
          </div>
        <% end %>
      <% end %>

      <div class="clearfix"></div>

      <%= render "comments/stale_content_error" %>

      <%= file_attachment_tag(
        model: "assets",
        class: "js-upload-markdown-image is-default",
        input: "fc-{{ textareaId }}",
        "data-upload-repository-id": "{{ repositoryId }}",
      ) do |upload_enabled| %>
        <div id="write-panel" role="tabpanel" class="write-content js-write-bucket position-relative m-0"
        >
          <%= spamurai_form_signals %>

          <%# TODO: Migrate to `input[bodyVersion]` name %>
          <input
            type="hidden"
            name="body_version"
            class="js-body-version"
            value="{{ bodyVersion }}"
          >

          <text-expander
            keys=": @ #"
            data-issue-url="<%= data_issue_url %>"
            data-mention-url="<%= data_mention_url %>"
            data-emoji-url="<%= emoji_suggestions_path %>"
            multiword="#"
          >
            <%= render(
              SlashCommands::SlashCommandExpanderWrapperComponent.with_url(
                repository: repository,
                user: user,
                url: "{{ slashCommandUrl }}"
              )
            ) do %>
              <%# TODO: Migrate to `input[body]` name %>
              <textarea
                class="<%= class_names(
                  "js-paste-markdown js-task-list-field js-quick-submit js-comment-field js-size-to-fit js-session-resumable js-saved-reply-shortcut-comment-field CommentBox-input FormControl-textarea",
                  "input-monospace": user.use_fixed_width_font?,
                ) %>"
                name="{{ targetType }}[body]"
                <% if user.paste_url_link_as_plain_text? %>data-paste-url-links-as-plain-text<% end %>
                id="{{ textareaId }}"
                placeholder="Leave a comment"
                aria-label="Comment body"
              >{{ targetBody }}</textarea>
            <% end %>
          </text-expander>

          <input <%= upload_policy_accept_extensions_attribute([:assets, :"repository-files"]) %> type="file" multiple hidden id="fc-{{ textareaId }}">
          <div class="file-attachment-errors">
            <%= render(Primer::Alpha::Banner.new(border_bottom: 0, scheme: :danger, classes: "rounded-bottom-2 bad-file repository-required", full: true, description: "Try again with #{upload_policy_friendly_extensions([:assets, :"repository-files"])}")) { "We don’t support that file type." } %>
            <%= render(Primer::Alpha::Banner.new(border_bottom: 0, scheme: :danger, classes: "rounded-bottom-2 bad-permissions", full: true, description: "Try again with #{upload_policy_friendly_extensions([:assets, :"repository-files"])}")) { "Attaching documents requires write permission to this repository." } %>
            <%# This HTML has been moved off the render thread. The error message will come from the server response and be inserted in the DOM by JavaScript %>
            <%= render(Primer::Alpha::Banner.new(border_bottom: 0, scheme: :danger, classes: "rounded-bottom-2 too-big js-upload-too-big", full: true)) { "" } %>
            <%= render(Primer::Alpha::Banner.new(border_bottom: 0, scheme: :danger, classes: "rounded-bottom-2 empty", full: true, description: "Try again with a file that’s not empty.")) { "This file is empty." } %>
            <%= render(Primer::Alpha::Banner.new(border_bottom: 0, scheme: :danger, classes: "rounded-bottom-2 hidden-file", full: true, description: "Try again with another file.")) { "This file is hidden." } %>
            <%= render(Primer::Alpha::Banner.new(border_bottom: 0, scheme: :danger, classes: "rounded-bottom-2 failed-request", full: true, description: "Try again.")) { "Something went really wrong, and we can’t process that file." } %>
          </div>
        </div>
      <% end %>

      <div class="preview-content">
        <%= render "comments/preview_comment", side: nil %>
      </div>

      <div class="js-discussions-poll-edit-placeholder" data-poll-edit-url="{{ pollEditUrl }}"></div>
    </div>
    <div class="clearfix">
      <div
        class="form-actions comment-form-actions js-discussions-edit-form-actions float-none float-md-right"
        style="margin-left: 10px"
        data-poll-confirmation="false"
      ></div>
    </div>
    <div class="comment-form-error mb-2 js-comment-update-error" hidden></div>
  </div>
</template>

<template class="js-discussions-poll-edit-template">
  <include-fragment src="{{ pollEditUrl }}" loading="lazy">
    <div class="text-center pt-4">
      <%= render(Primer::Beta::Spinner.new) %>
    </div>
  </include-fragment>
</template>

<template class="js-discussions-edit-actions-template">
  <%= render Primer::Beta::Button.new(
    scheme: :primary,
    float: [:none, nil, :right],
    ml: 2,
    type: :submit,
    "data-disable-with": ""
  ) do %>
    Update {{ targetType }}
  <% end %>
  <%= render Primer::Beta::Button.new(
    scheme: :danger,
    float: [:none, nil, :right],
    classes: "js-comment-cancel-button",
    "data-confirm-text": "Are you sure you want to discard your unsaved changes?",
  ) do %>
    Cancel
  <% end %>
</template>

<template class="js-discussions-poll-confirmation-template">
  <%= render(Primer::Alpha::Dialog.new(
    title: "Update poll",
    id: "discussion-poll-update-warning",
  )) do |dialog| %>
    <% dialog.with_show_button(scheme: :primary) do %>
      Update discussion
    <% end %>
    <% dialog.with_body(p: 0) do %>
      <%= render(Primer::Beta::Flash.new(scheme: :warning, full: true, icon: :alert, mt: 1)) do %>
        Warning: editing this poll is a destructive action.
      <% end %>

      <p class="p-3">Changing the poll question and/or options will reset the votes.
      Anyone who has already voted will need to submit their vote again.</p>
    <% end %>
    <% dialog.with_footer do %>
      <%= render(Primer::Beta::Button.new(data: { "close-dialog-id": "discussion-poll-update-warning" })) { "Cancel" } %>
      <%= render(Primer::Beta::Button.new(type: :submit, scheme: :danger)) { "I understand, update poll" } %>
    <% end %>
  <% end %>

  <%= render Primer::Beta::Button.new(
    scheme: :danger,
    float: [:none, nil, :right],
    # we have to use `5px` instead of a primer utility class because of custom css used with these buttons
    style: "margin-right: 5px;",
    classes: "js-comment-cancel-button",
    "data-confirm-text": "Are you sure you want to discard your unsaved changes?",
  ) do %>
    Cancel
  <% end %>
</template>
