# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Github::DependencySnapshotsApi::Entities::Push`.
# Please instead update this file by running `bin/tapioca dsl Github::DependencySnapshotsApi::Entities::Push`.

class Github::DependencySnapshotsApi::Entities::Push
  sig do
    params(
      after: T.nilable(String),
      before: T.nilable(String),
      committed_at: T.nilable(Google::Protobuf::Timestamp),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      push_type: T.nilable(T.any(Symbol, Integer)),
      pushed_at: T.nilable(Google::Protobuf::Timestamp),
      ref: T.nilable(String),
      updated_at: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(after: nil, before: nil, committed_at: nil, created_at: nil, push_type: nil, pushed_at: nil, ref: nil, updated_at: nil); end

  sig { returns(String) }
  def after; end

  sig { params(value: String).void }
  def after=(value); end

  sig { returns(String) }
  def before; end

  sig { params(value: String).void }
  def before=(value); end

  sig { void }
  def clear_after; end

  sig { void }
  def clear_before; end

  sig { void }
  def clear_committed_at; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_push_type; end

  sig { void }
  def clear_pushed_at; end

  sig { void }
  def clear_ref; end

  sig { void }
  def clear_updated_at; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def committed_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def committed_at=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def push_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def push_type=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def pushed_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def pushed_at=(value); end

  sig { returns(String) }
  def ref; end

  sig { params(value: String).void }
  def ref=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end
end
