<%# rubocop:disable Lint/InstanceVariable %>
<% view = Stafftools::RepositoryViews::ShowView.new(repository: current_repository, current_user: current_user) %>

<%
  page_info :title => "#{current_repository.name_with_owner} - Site admin"
  high_profile_repo, high_profile_reason = HighProfileSignals.high_profile_repo?(current_repository)
%>

<div class="site-admin-container">
  <div class="site-admin-box">
    <h4>
      <%= primer_octicon(:info) %>
      <%= link_to \
            "Repository info",
            gh_overview_stafftools_repository_path(current_repository) %>
    </h4>
    <ul class="site-admin-detail-list">
      <% if current_repository.internal? %>
        <li>
          <svg width="16" height="16" class="octicon octicon-graph" viewBox="0 0 13 16" aria-hidden="true"><path d="M10 2a1 1 0 0 0 1 1h1v13h1V3a1 1 0 0 0-1-1h-2zM7 3v1H6V3a1 1 0 0 1 1-1h2a1 1 0 0 1-1 1H7z"></path><path d="M10 4h1v2h-1V4zM10 7h1v2h-1V7zM10 10h1v2h-1v-2zM10 13h1v2h-1v-2zM9 0h1v1H9V0zM8 2a1 1 0 0 1 1-1h1a1 1 0 0 1 1 1H8zM3 11h1v-1H3v1zM3 6h1v1H3V6zM3 8h1v1H3V8z"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M0 12v2c0 .55.45 1 1 1h1v1l1-.5 1 .5v-1h4c.55 0 1-.45 1-1v-2H0zm1 1h7v1H4v-1H2v1H1v-1zM0 5c0-.55.45-1 1-1h7c.55 0 1 .45 1 1v7H8V5H2v7H0V5z"></path></svg>
          Internal
        </li>
      <% elsif current_repository.private? %>
        <li>
          <%= primer_octicon(:lock) %>
          Private
        </li>
        <% if @error_states[:billing] %>
          <li>
            <%= primer_octicon(:alert, classes: "alert") %>
            Billing locked
          </li>
        <% end %>
      <% else %>
        <li>
          <%= render(Primer::Beta::Octicon.new(icon: "repo")) %>
          Public
        </li>
      <% end %>
      <% if @error_states[:disabled] %>
        <li>
          <%= primer_octicon(:alert, classes: "alert") %>
          Disabled: <%= view.disabled_reason_human %>
        </li>
      <% end %>
      <% if @error_states[:deleted] %>
        <li>
          <%= primer_octicon(:alert, classes: "alert") %>
          Deleted <%= time_ago_in_words_js current_repository.deleted_at %>
        </li>
      <% end %>
      <% if current_repository.archived? %>
        <li>
          <%= primer_octicon(:alert, classes: "alert") %>
          Archived - read-only<br>
        </li>
      <% end %>
      <% if current_user.employee? && high_profile_repo %>
        <li>
          <%= primer_octicon(:alert, classes: "alert") %>
          <%= link_to "High Profile", "https://github.com/github/trust-safety/blob/main/docs/operations/escalation-procedures/high-profile-escalation.md" %>
          <small>
            <br>
            <%= high_profile_reason %>
          </small>
        </li>
      <% end %>
      <li>
        <%= render(Primer::Beta::Octicon.new(icon: "git-branch")) %>
        <%= current_repository.default_branch_for_display %>
      </li>
      <li>
        <% if @counts[:all_branches] > 0 %>
          <%= render(Primer::Beta::Octicon.new(icon: "git-branch")) %>
          <%= pluralize(number_with_delimiter(@counts[:all_branches]), "branch") %>
        <% else %>
          <%= render(Primer::Beta::Octicon.new(icon: "x")) %>
          No branches
        <% end %>
      </li>
      <li>
        <%= primer_octicon(:code) %>
        <%= link_to "View code", repository_url_to_main_site(current_repository) %>
      </li>
      <% if current_repository.mirror? %>
        <li>
          <%= primer_octicon(:mirror) %>
          Mirroring from
          <code><%= URI.parse(current_repository.mirror.url).host %></code>
        </li>
      <% end %>
      <li>
        <%= primer_octicon(:eye) %>
        <%= link_to \
              "View repository orchestrations",
              gh_stafftools_repository_repository_orchestrations_path(current_repository) %>
      </li>
      <li>
        <%= primer_octicon(:"repo-push") %>
        <%= link_to \
              "View rules",
              expand_nwo_from(:stafftools_repository_repository_rules_path, current_repository) %>
      </li>
      <li>
        <%= primer_octicon(:"repo-push") %>
        <%= link_to \
              "View rule insights",
              expand_nwo_from(:stafftools_repository_repository_rule_insights_path, current_repository) %>
      </li>
      <% if view.show_custom_properties? %>
        <li>
          <%= primer_octicon(:"multi-select") %>
          <%= link_to \
                "View properties",
                expand_nwo_from(:stafftools_repository_custom_properties_path, current_repository) %>
        </li>
      <% end %>
      <% unless GitHub.enterprise? %>
        <li>
          <%= primer_octicon(:graph) %>
          <a href="<%= view.sentry_link %>">Search Sentry</a>
        </li>
      <% end %>
    </ul>
  </div>

  <div class="site-admin-box">
    <h4>
      <%= primer_octicon(:server) %>
      <%= link_to \
            "Storage",
            gh_disk_stafftools_repository_path(current_repository) %>
    </h4>
    <ul class="site-admin-detail-list">
      <li>
        <%= primer_octicon(:server) %>
        Estimated disk use:
        <%= current_repository.human_disk_usage %>
      </li>
      <li>
        <% if @counts[:releases] > 0 %>
          <%= primer_octicon(:package) %>
          <%= link_to \
                pluralize(number_with_delimiter(@counts[:releases]), "release"),
                gh_releases_stafftools_repository_path(current_repository) %>
        <% else %>
          <%= render(Primer::Beta::Octicon.new(icon: "x")) %>
          No releases
        <% end %>
      </li>
        <li>
          <% if current_repository.git_lfs_enabled? %>
            <%= primer_octicon(:"file-zip") %>
            <%= link_to \
                  "LFS enabled",
                  gh_stafftools_repository_large_files_path(current_repository) %>
          <% else %>
            <%= render(Primer::Beta::Octicon.new(icon: "x")) %>
            <%= link_to \
                  "LFS disabled",
                  gh_stafftools_repository_large_files_path(current_repository) %>
          <% end %>
        </li>
      <% if GitHub.svnbridge_available? %>
        <li>
          <% case current_repository.svn_status %>
          <% when :disabled %>
            <%= render(Primer::Beta::Octicon.new(icon: "x")) %>
            <%= link_to \
                  "SVN disabled",
                  gh_stafftools_repository_svn_path(current_repository) %>
          <% when :enabled %>
            <%= primer_octicon(:cpu) %>
            <%= link_to \
                  "SVN enabled",
                  gh_stafftools_repository_svn_path(current_repository) %>
          <% else %>
            <%= render(Primer::Beta::Octicon.new(icon: "alert")) %>
            SVN status unknown
          <% end %>
        </li>
      <% end %>
      <% if @error_states[:fileserver] %>
        <li>
          <%= primer_octicon(:alert, classes: "alert") %>
          <%= @error_states[:fileserver] %>
        </li>
      <% end %>
      <% if @error_states[:disk] %>
        <li>
          <%= primer_octicon(:alert, classes: "alert") %>
          <%= @error_states[:disk] %>
        </li>
      <% end %>
    </ul>
  </div>

  <div class="site-admin-box">
    <h4>
      <%= primer_octicon(:"shield-lock") %>
      <%= link_to \
            "Security",
            gh_security_stafftools_repository_path(current_repository) %>
    </h4>
    <ul class="site-admin-detail-list">
      <li>
        <% if @counts[:deploy_keys] > 0 %>
          <%= primer_octicon(:key) %>
          <%= link_to \
                pluralize(number_with_delimiter(@counts[:deploy_keys]), "deploy key"),
                gh_deploy_keys_stafftools_repository_path(current_repository) %>
        <% else %>
          <%= render(Primer::Beta::Octicon.new(icon: "x")) %>
          No deploy keys
        <% end %>
      </li>
      <li>
        <% if @counts[:hooks] > 0 %>
          <%= primer_octicon(:plug) %>
          <%= link_to \
                pluralize(number_with_delimiter(@counts[:hooks]), "hook"),
                gh_stafftools_repo_hooks_path(current_repository) %>
        <% else %>
          <%= render(Primer::Beta::Octicon.new(icon: "x")) %>
          No hooks
        <% end %>
      </li>
      <li>
        <% if @counts[:protected_branches] > 0 %>
          <%= primer_octicon(:"git-branch") %>
          <%= link_to \
                pluralize(number_with_delimiter(@counts[:protected_branches]), "protected branch"),
                gh_stafftools_repository_protected_branches_path(current_repository) %>
        <% else %>
          <%= render(Primer::Beta::Octicon.new(icon: "x")) %>
          No protected branches
        <% end %>
      </li>
      <li>
        <% if current_repository.pushed_at.nil? %>
          <%= render(Primer::Beta::Octicon.new(icon: "x")) %>
          <%= link_to \
                "No pushes",
                gh_stafftools_repository_activity_path(current_repository, time_period: "week") %>
        <% elsif current_repository.pushed_at < current_repository.created_at %>
          <%= render(Primer::Beta::Octicon.new(icon: "x")) %>
          <%= link_to \
                "No pushes to fork",
                gh_stafftools_repository_activity_path(current_repository, time_period: "week") %>
        <% elsif current_repository.never_pushed_to? %>
          <%= primer_octicon(:"repo-push") %>
          <%= link_to \
                "Initialized on create",
                gh_stafftools_repository_activity_path(current_repository, time_period: "week") %>
        <% else %>
          <%= primer_octicon(:"repo-push") %>
          Last pushed
          <%= link_to \
                current_repository.pushed_at.to_date,
                gh_stafftools_repository_activity_path(current_repository, time_period: "week") %>
          <% end %>
      </li>
      <li>
        <%= primer_octicon(:history) %>
        <%= stafftools_selected_link_to \
            "Search audit logs",
            stafftools_audit_log_path(query: view.audit_log_query) %>
      </li>
    </ul>
  </div>

  <div class="site-admin-box">
    <h4>
      <%= primer_octicon(:globe) %>
      <%= link_to \
            "Network",
            gh_stafftools_repository_network_path(current_repository) %>
    </h4>
    <ul class="site-admin-detail-list">
      <% if @counts[:network_repos] == 1 %>
        <li>
          <%= render(Primer::Beta::Octicon.new(icon: "x")) %>
          No forks
        </li>
      <% else %>
        <% if current_repository.fork? %>
          <% if current_repository.parent.present? %>
            <li>
              <%= primer_octicon(:"repo-forked") %>
              Forked from
              <%= link_to \
                    current_repository.parent.name_with_owner,
                    gh_stafftools_repository_path(current_repository.parent) %>
            </li>
          <% end %>
          <% if current_repository.root.present? && current_repository.root != current_repository.parent %>
            <li>
              <%= render(Primer::Beta::Octicon.new(icon: "repo")) %>
              Rooted at
              <%= link_to \
                    current_repository.root.name_with_owner,
                    gh_stafftools_repository_path(current_repository.root) %>
            </li>
          <% end %>
        <% else %>
          <li>
            <%= primer_octicon(:"repo-forked") %>
            Network root
          </li>
        <% end %>
        <% unless current_repository.plan_owned_by_owner? %>
          <li>
            <%= primer_octicon(:"credit-card") %>
            Plan owned by
            <%= link_to \
                  current_repository.plan_owner,
                  stafftools_user_path(current_repository.plan_owner) %>
          </li>
        <% end %>
        <li>
          <%= render(Primer::Beta::Octicon.new(icon: "repo")) %>
          <%= link_to \
                pluralize(number_with_delimiter(@counts[:network_repos]), "repository"),
                gh_stafftools_repository_network_tree_path(current_repository) %>
          in network
        </li>
        <% if current_repository.fork? %>
          <li>
            <% if @counts[:siblings] > 0 %>
              <%= primer_octicon(:"repo-forked") %>
              <%= link_to \
                    pluralize(number_with_delimiter(@counts[:siblings]), "sibling"),
                    gh_siblings_stafftools_repository_network_path(current_repository) %>
            <% else %>
              <%= render(Primer::Beta::Octicon.new(icon: "x")) %>
              No siblings
            <% end %>
          </li>
        <% end %>
        <li>
          <% if @counts[:children] > 0 %>
            <%= primer_octicon(:"repo-forked") %>
            <%= link_to \
                  pluralize(number_with_delimiter(@counts[:children]), "child"),
                  gh_children_stafftools_repository_network_path(current_repository) %>
          <% else %>
            <%= render(Primer::Beta::Octicon.new(icon: "x")) %>
            No children
          <% end %>
        </li>
      <% end %>
      <% if GitHub.dependency_graph_enabled? %>
        <li>
          <%= primer_octicon(:versions) %>
          <%= link_to "Dependency graph",
                gh_dependency_graph_stafftools_repository_path(current_repository) %>
        </li>
      <% end %>
      <% if GitHub.dependabot_enabled? %>
        <li>
          <%= primer_octicon(:hubot) %>
          <%= link_to "Dependabot",
                gh_dependabot_stafftools_repository_path(current_repository) %>
        </li>
      <% end %>
    </ul>
  </div>

  <div class="site-admin-box">
    <h4>
      <%= primer_octicon(:comment) %>
      <%= link_to \
            "Collaboration",
            gh_stafftools_repository_pull_requests_path(current_repository) %>
    </h4>
    <ul class="site-admin-detail-list">
      <li>
        <% if current_repository.organization.present? %>
          <%= render(Primer::Beta::Octicon.new(icon: "pencil")) %>
          <%= link_to \
                "View permissions",
                gh_permissions_stafftools_repository_path(current_repository) %>
        <% elsif @counts[:collabs] > 0 %>
          <%= primer_octicon(:person) %>
          <%= link_to \
                gh_stafftools_repository_collaborators_path(current_repository) do %>
            <%= pluralize(number_with_delimiter(@counts[:collabs]), "collaborator") %>
            <% if @counts[:invites] > 0 %>
              and
              <%= pluralize(number_with_delimiter(@counts[:invites]), "pending invite") %>
            <% end %>
          <% end %>
        <% elsif @counts[:invites] > 0 %>
          <%= primer_octicon(:person) %>
          <%= link_to \
                pluralize(number_with_delimiter(@counts[:invites]), "pending invite"),
                gh_stafftools_repository_collaborators_path(current_repository) %>
        <% else %>
            <%= render(Primer::Beta::Octicon.new(icon: "x")) %>
            No collaborators
        <% end %>
      </li>
      <li>
        <%= primer_octicon(:eye) %>
        <%= link_to \
              "View watchers",
              gh_stafftools_repository_watchers_path(current_repository) %>
      </li>
      <li>
        <%= primer_octicon(:project) %>
        <%= link_to "View #{pluralize(@counts[:projects], "project")}",
              gh_stafftools_repository_projects_path(current_repository) %>
      </li>
      <li>
        <% if @counts[:issues] == 1 %>
          <%= primer_octicon(:"issue-opened") %>
          <%= link_to \
                "1 issue or pull request",
                gh_stafftools_repository_issues_path(current_repository) %>
        <% elsif @counts[:issues] > 1 %>
          <%= primer_octicon(:"issue-opened") %>
          <%= link_to \
                "#{number_with_delimiter(@counts[:issues])} issues and pull requests",
                gh_stafftools_repository_issues_path(current_repository) %>
        <% else %>
          <%= render(Primer::Beta::Octicon.new(icon: "x")) %>
          <%= link_to \
                "No issues or pull requests",
                gh_stafftools_repository_issues_path(current_repository) %>
        <% end %>
      </li>
      <li>
        <% if @counts[:repository_advisories] == 1 %>
          <%= primer_octicon(:shield) %>
          <%= link_to \
                "1 repository advisory",
                gh_stafftools_repository_advisories_path(current_repository) %>
        <% elsif @counts[:repository_advisories] > 1 %>
          <%= primer_octicon(:shield) %>
          <%= link_to \
                "#{number_with_delimiter(@counts[:repository_advisories])} repository advisories",
                gh_stafftools_repository_advisories_path(current_repository) %>
        <% else %>
          <%= primer_octicon(:"shield-x") %>
          <%= link_to \
                "No repository advisories",
                gh_stafftools_repository_advisories_path(current_repository) %>
        <% end %>
      </li>
      <% if current_repository.discussions_active? %>
        <li>
          <% if @counts[:discussions] > 0 %>
            <%= primer_octicon(:"comment-discussion") %>
            <%= link_to \
                  "#{pluralize(@counts[:discussions], "discussion")}",
                  gh_stafftools_repository_discussions_path(current_repository) %>
          <% else %>
            <%= render(Primer::Beta::Octicon.new(icon: "x")) %>
            <%= link_to \
                  "No discussions",
                  gh_stafftools_repository_discussions_path(current_repository) %>
          <% end %>
        </li>
      <% end %>
      <li>
        <%= primer_octicon(:eye) %>
        <%= link_to \
              "View pull request orchestrations",
              gh_stafftools_repository_pull_request_orchestrations_path(current_repository) %>
      </li>
      <% unless current_repository.has_issues? %>
        <li>
          <%= primer_octicon(:x, classes: "alert") %>
          Issues disabled
        </li>
      <% end %>
      <li>
        <%= primer_octicon(:file) %>
        <%= link_to \
              "Issue files",
              gh_stafftools_repository_repository_files_path(current_repository) %>
      </li>
      <li>
        <%= primer_octicon(:mail) %>
        <%= link_to \
              "Repository Notifications",
              gh_stafftools_repository_notification_settings_path(current_repository) %>
      </li>
      <li>
        <%= primer_octicon(:bell) %>
        <%= link_to \
              "Notifications",
              gh_notifications_stafftools_repository_path(current_repository) %>
      </li>
      <% if SecurityProduct::VulnerabilityAlerts.enabled_for_instance? %>
        <li>
          <%= primer_octicon(:megaphone) %>
          <%= link_to \
                "Dependabot alerts",
                gh_stafftools_repository_vulnerability_alerts_path(current_repository) %>
        </li>
      <% end %>
      <li>
        <%= primer_octicon(:rss) %>
        <%= link_to \
              "Dashboard events",
              gh_events_stafftools_repository_path(current_repository) %>
      </li>
      <li>
        <%= primer_octicon(:report) %>
        <%= link_to \
              view.tiered_reporting_status,
              gh_abuse_reports_stafftools_repository_path(current_repository) %>
      </li>
    </ul>
  </div>

  <% if GitHub.pages_enabled? %>
    <div class="site-admin-box">
      <h4>
        <%= primer_octicon(:file) %>
        <%= link_to \
              "Pages",
              stafftools_repository_pages_path(current_repository) %>
      </h4>
      <ul class="site-admin-detail-list">
        <% if current_repository.has_gh_pages? %>
          <li>
            <%= primer_octicon(:home) %>
            <% if current_repository.is_user_pages_repo? %>
              User site
            <% else %>
              Project site
            <% end %>
          </li>
          <li>
            <%= render(Primer::Beta::Octicon.new(icon: "link")) %>
            <%= link_to \
                  current_repository.gh_pages_url,
                  current_repository.gh_pages_url %>
          </li>
          <li>
            <% if @last_pages_build.nil? %>
              <%= primer_octicon(:thumbsdown, classes: "alert") %>
              Never built
            <% elsif @last_pages_build.building? %>
              <%= primer_octicon(:hourglass) %>
              Building now
            <% elsif @last_pages_build.error? %>
              <%= primer_octicon(:thumbsdown, classes: "alert") %>
              <% if GitHub.enterprise? %>
                Failed build
              <% else %>
                <%= link_to "Failed build", view.pages_build_failure_sentry_link %>
              <% end %>
              on
              <%= @last_pages_build.created_at.to_date %>
              <br>
              <small>
                <%= button_to \
                      "Rebuild",
                      stafftools_repository_pages_path(current_repository),
                      :class => "btn-link",
                      :form_class => "inline-form" %>
              </small>
            <% else %>
              <%= primer_octicon(:thumbsup) %>
              Successful build on <%= @last_pages_build.created_at.to_date %>
            <% end %>
          </li>
        <% elsif current_repository.page&.workflow_build_enabled? && !current_repository.page&.workflow_run.nil? %>
          <li>
            <%= primer_octicon(:home) %>
            <% if current_repository.is_user_pages_repo? %>
              User site
            <% else %>
              Project site
            <% end %>
          </li>
          <li>
              <%= render(Primer::Beta::Octicon.new(icon: "link")) %>
              <%= link_to \
                    current_repository.gh_pages_url,
                    current_repository.gh_pages_url %>
          </li>
        <% else %>
          <li>
            <%= render(Primer::Beta::Octicon.new(icon: "x")) %>
            No pages
          </li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <% if GitHub.actions_enabled? %>
    <%
      workflows_count = current_repository.workflows.length
    %>
    <div class="site-admin-box">
      <h4>
        <%= render Primer::Beta::Octicon.new(icon: "play") %>
        <a href="<%= gh_actions_stafftools_repository_path(current_repository) %>">Actions</a>
      </h4>
      <ul class="site-admin-detail-list">
        <li>
          <% if current_repository.actions_disabled? %>
            <%= render Primer::Beta::Octicon.new(icon: "x", color: :danger) %>
            Disabled
          <% else %>
            <%= render Primer::Beta::Octicon.new(icon: "check", color: :success) %>
            Enabled
          <% end %>
        </li>
        <li>
          <%= render Primer::Beta::Octicon.new(icon: "versions") %>
          <a href="<%= gh_actions_workflows_stafftools_repository_path(current_repository) %>">
            <%= pluralize(number_with_delimiter(workflows_count), "Workflow file") %>
          </a>
        </li>
        <li>
          <%= render Primer::Beta::Octicon.new(icon: "versions") %>
          <a href="<%= actions_workflow_schedules_stafftools_repository_path %>">
            Scheduled workflows
          </a>
        </li>
        <li>
          <%= render Primer::Beta::Octicon.new(icon: "server") %>
          <a href="<%= gh_actions_self_hosted_runners_stafftools_repository_path(current_repository) %>">
            Self-hosted runners
          </a>
        </li>
        <li>
          <%= render Primer::Beta::Octicon.new(icon: "hourglass") %>
          <a href="<%= gh_actions_latest_runs_stafftools_repository_path(current_repository) %>">Latest runs</a>
        </li>
      </ul>
    </div>
  <% end %>
</div>
