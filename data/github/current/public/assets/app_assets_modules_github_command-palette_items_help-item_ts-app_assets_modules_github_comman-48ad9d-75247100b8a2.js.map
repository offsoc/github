{"version":3,"file":"app_assets_modules_github_command-palette_items_help-item_ts-app_assets_modules_github_comman-48ad9d-xxxxxxxxxxxx.js","mappings":"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","sources":["app/assets/modules/github/command-palette/client-defined-provider-element.ts","app/assets/modules/github/command-palette/command-palette-element.ts","app/assets/modules/github/command-palette/command-palette-item-group-element.ts","app/assets/modules/github/command-palette/command-palette-scope-element.ts","app/assets/modules/github/command-palette/copy.ts","app/assets/modules/github/command-palette/items/access-policy-item.ts","app/assets/modules/github/command-palette/items/command-item.ts","app/assets/modules/github/command-palette/items/copyable-item.ts","app/assets/modules/github/command-palette/items/help-item.ts","app/assets/modules/github/command-palette/items/jump-to-item.ts","app/assets/modules/github/command-palette/items/jump-to-org-item.ts","app/assets/modules/github/command-palette/items/jump-to-team-item.ts","app/assets/modules/github/command-palette/items/main-window-command-item.ts","app/assets/modules/github/command-palette/items/search-link-item.ts","app/assets/modules/github/command-palette/items/server-defined-item.ts","app/assets/modules/github/command-palette/pages/global-providers-page.ts","app/assets/modules/github/command-palette/provider-element.ts","app/assets/modules/github/command-palette/provider.ts","app/assets/modules/github/command-palette/providers/server-defined-provider.ts","app/assets/modules/github/command-palette/query.ts","app/assets/modules/github/command-palette/tracking.ts","ui/packages/analytics-overrides/analytics-overrides.ts","ui/packages/client-env/client-env.ts","ui/packages/command-palette/command-palette.ts","ui/packages/document-ready/document-ready.ts","ui/packages/failbot/failbot.ts","ui/packages/feature-flags/feature-flags.ts","ui/packages/hydro-analytics/hydro-analytics.ts","ui/packages/trusted-types-policies/jtml.ts","ui/packages/jtml-shimmed/jtml-shimmed.ts","ui/packages/runtime-environment/runtime-environment.ts","ui/packages/safe-storage/safe-storage.ts","ui/packages/safe-storage/session-storage.ts","ui/packages/soft-nav/utils.ts","ui/packages/ssr-utils/ssr-globals.ts","ui/packages/ssr-utils/ssr.ts","ui/packages/stats/stats.ts","ui/packages/trusted-types-policies/policy.ts","ui/packages/trusted-types/trusted-types.ts","ui/packages/verified-fetch/verified-fetch.ts"],"sourcesContent":["import {attr, controller} from '@github/catalyst'\nimport type {Provider} from '@github-ui/command-palette'\nimport {ProviderElement} from './provider-element'\n\n/**\n * This is a custom element that can be used to hold a client defined provider. This is useful for\n * when we want to programmatically define a provider that we want to use in the command palette.\n */\n@controller\nexport class ClientDefinedProviderElement extends ProviderElement {\n  @attr providerId: string\n\n  /**\n   * Takes a `Provider` or a `Provider` and returns a `ClientDefinedProviderElement`\n   * containing the given provider.\n   * @param providerId: The id of the provider. Referenced when registering and deregistering.\n   * @param provider: The provider to be used.\n   * @returns: A `ClientDefinedProviderElement` containing the given provider.\n   */\n  static build(providerId: string, provider: Provider): ClientDefinedProviderElement {\n    const element = new ClientDefinedProviderElement()\n    element.providerId = providerId\n    element.provider = provider\n    return element\n  }\n\n  connectedCallback() {\n    this.setAttribute('data-targets', 'command-palette.clientDefinedProviderElements')\n  }\n}\n","import type {CommandPalette as CommandPaletteAPI, Item, Page, Provider} from '@github-ui/command-palette'\nimport {attr, controller, target, targets} from '@github/catalyst'\nimport {ClientDefinedProviderElement} from './client-defined-provider-element'\nimport type {CommandPaletteInputElement} from './command-palette-input-element'\nimport type {CommandPaletteItemElement} from './command-palette-item-element'\nimport {CommandPaletteItemGroupElement} from './command-palette-item-group-element'\nimport type {CommandPaletteModeElement} from './command-palette-mode-element'\nimport type {CommandPalettePageStackElement} from '../../../../components/command_palette/command-palette-page-stack-element'\nimport type {CommandPaletteTipElement} from './command-palette-tip-element'\nimport type DetailsDialogElement from '@github/details-dialog-element'\nimport {GlobalProvidersPage} from './pages/global-providers-page'\nimport type {ProviderElement} from './provider-element'\nimport {Query} from './query'\nimport type {Scope} from './command-palette-scope-element'\nimport type {ServerDefinedProviderElement} from './server-defined-provider-element'\nimport {crc32} from '@allex/crc32'\nimport {debounce} from '@github/mini-throttle/decorators'\nimport {sendTrackingEvent} from './tracking'\n\nconst isMac = () => {\n  return navigator.platform.match(/Mac/)\n}\n\nconst platformMetaKey = isMac() ? 'metaKey' : 'ctrlKey'\nconst platformModifierKey = isMac() ? 'Meta' : 'Control'\n\n/* eslint-disable-next-line custom-elements/no-exports-with-element */\nexport const isPlatformMetaKey = (event: Event) => {\n  if (!(event instanceof KeyboardEvent)) {\n    return false\n  }\n\n  return event[platformMetaKey]\n}\n\nconst DISPLAY_BREAKPOINT_SM = 450\n@controller\nexport default class CommandPalette extends HTMLElement implements CommandPaletteAPI {\n  static tagName = 'command-palette'\n\n  commandPaletteInput: CommandPaletteInputElement\n  list: HTMLElement\n  groups: NodeListOf<CommandPaletteItemGroupElement>\n  everActivated = false\n  activated = false\n  error = false\n  modes: CommandPaletteModeElement[]\n  defaultMode: CommandPaletteModeElement\n  activeMode: CommandPaletteModeElement\n  resizeObserver: ResizeObserver\n\n  // default to a blank query\n  query: Query = new Query('', '')\n\n  previouslyActiveElement?: HTMLElement\n  setupComplete = false\n  sessionId = ''\n\n  static attrPrefix = ''\n  @attr returnTo = ''\n  @attr userId = ''\n  @attr defaultOpen = false\n\n  // Hotkeys to open the command palette in various modes are set as data attributes.\n  // Users can customize their hotkeys, which are stored in UserSettings.\n\n  // Default hotkeys are assigned here so that the component can function on its own,\n  // but GitHub's UserSettings has its own defaults which are passed in through the data attributes.\n\n  // Tip: the logic to handle the keyboard events to activate the command palette\n  // currently lives in the `command-palette` bundle file\n\n  // This is the hotkey to open the command palette\n  // cmd+k is used in textareas for inserting markdown hyperlinks,\n  // so there's an optional secondary activation hotkey that can be used when the user is in a markdown textarea.\n  // See the `secondaryActivationHotkey` getter which will return the last segment of this hotkey.\n  @attr activationHotkey = 'Mod+k,Mod+Alt+k'\n\n  // This is the hotkey to open the command palette in \"command\" mode\n  @attr commandModeHotkey = 'Mod+Shift+K'\n\n  @target pageStack: CommandPalettePageStackElement\n\n  @targets clientDefinedProviderElements: ClientDefinedProviderElement[]\n  @targets serverDefinedProviderElements: ServerDefinedProviderElement[]\n\n  setup() {\n    this.modes = Array.from(this.querySelectorAll<CommandPaletteModeElement>('command-palette-mode'))\n    this.defaultMode = this.querySelector<CommandPaletteModeElement>('.js-command-palette-default-mode')!\n    this.commandPaletteInput = this.querySelector<CommandPaletteInputElement>('command-palette-input')!\n    this.groups = this.querySelectorAll<CommandPaletteItemGroupElement>('command-palette-item-group')!\n\n    if (this.defaultOpen) {\n      this.manualToggle(true)\n      this.clearReturnToParams()\n    }\n\n    window.commandPalette = this\n\n    this.setupComplete = true\n\n    const event = new Event('command-palette-ready', {\n      bubbles: true,\n      cancelable: true,\n    })\n\n    this.dispatchEvent(event)\n  }\n\n  connectedCallback() {\n    if (!this.setupComplete) {\n      this.setup()\n    }\n  }\n\n  /**\n   * This function is responsible for clearing state from the command palette.\n   * This is useful for when the command palette moves between PJAX navigation events.\n   *\n   * By default it resets the input.\n   *\n   * @param resetInput an optional argument which specifies that the the input should be reset.\n   */\n  clear(resetInput = true) {\n    this.clearProviderCaches()\n    this.pageStack.reset()\n    if (resetInput) this.resetInput()\n  }\n\n  /**\n   * This function is responsible for clearing command state from the command palette.\n   * This is useful for when the there is a state change on page (eg. Issue close).\n   *\n   * By default it resets the input.\n   *\n   * @param resetInput an optional argument which specifies that the the input should be reset.\n   */\n  @debounce(250)\n  clearCommands(resetInput = true): Promise<void> {\n    if (!this.everActivated) return Promise.resolve()\n    this.clearCommandProviderCaches()\n    if (resetInput) this.resetInput()\n\n    return Promise.resolve()\n  }\n\n  /**\n   * Resets the input to it's default state for the page.\n   */\n  resetInput() {\n    this.commandPaletteInput.inputValue = ''\n  }\n\n  // things that should be done every time the command palette is opened\n  activate() {\n    // Generate a new sessionId every activation for tracking\n    this.sessionId = this.generateSessionId()\n    this.commandPaletteInput.scopeElement.smallDisplay = this.offsetWidth < DISPLAY_BREAKPOINT_SM\n    this.commandPaletteInput.focus()\n\n    this.setActiveModeElement()\n    this.setQuery()\n    this.toggleTips()\n    this.pageStack.commandPaletteActivated()\n\n    this.dispatchEvent(\n      new CustomEvent('command-palette-activated', {\n        detail: {\n          previouslyActivated: this.everActivated,\n        },\n      }),\n    )\n\n    this.activated = true\n    this.everActivated = true\n    sendTrackingEvent('session_initiated')\n  }\n\n  // things that should be done when the command palette is closed\n  deactivate() {\n    this.activated = false\n\n    this.pageStack.unbindListeners()\n    this.clear()\n\n    if (this.previouslyActiveElement) {\n      this.previouslyActiveElement.focus()\n    }\n\n    sendTrackingEvent('session_terminated')\n  }\n\n  generateSessionId() {\n    return crc32(`${Date.now()}_${this.userId}_${this.query.path}`).toString()\n  }\n\n  manualToggle(open: boolean) {\n    const details = this.closest('details')!\n    open ? (details.open = true) : details.removeAttribute('open')\n  }\n\n  /**\n   * Close the command palette.\n   */\n  dismiss() {\n    this.manualToggle(false)\n    this.clear()\n  }\n\n  // If the activation hotkey has a comma, use the final comma-separated segment\n  // as the \"secondary\" hotkey, which works when a user is focused\n  // in a Markdown textarea.\n  get secondaryActivationHotkey(): string {\n    const hotkeys = this.activationHotkey.split(',')\n\n    if (hotkeys.length > 1) {\n      return hotkeys[hotkeys.length - 1]!\n    }\n\n    return ''\n  }\n\n  get platformActivationHotkey(): string {\n    return this.platformHotkey(this.activationHotkey)\n  }\n\n  get platformSecondaryActivationHotkey(): string {\n    return this.platformHotkey(this.secondaryActivationHotkey)\n  }\n\n  get platformCommandModeHotkey(): string {\n    return this.platformHotkey(this.commandModeHotkey)\n  }\n\n  // Substitutes the `Mod` keyword for the platform's modifier key.\n  // Also works around some platform-specific quirks.\n  // Returns an empty string if the user has chosen to disable that hotkey.\n  platformHotkey(hotkeyString: string): string {\n    if (hotkeyString === 'none') return ''\n\n    let hotkey = hotkeyString\n\n    if (isMac()) {\n      // the order of mod & alt on Mac platforms needs to be switched around\n      // in order to match `eventToHotkeyString` from the hotkey library,\n      // but we store them in a standardized format in UserSettings, so it gets swapped around here.\n      hotkey = hotkey.replace(/Mod\\+Alt/g, 'Alt+Mod')\n    }\n\n    // `Mod` is a special keyword that means \"Command\" or \"Control\" depending on the platform\n    return hotkey.replace(/Mod/g, platformModifierKey)\n  }\n\n  /* eslint-disable-next-line custom-elements/no-method-prefixed-with-on */\n  onInput() {\n    if (!this.everActivated) return\n\n    this.commandPaletteInput.typeahead = ''\n    this.setActiveModeElement()\n    this.setQuery()\n    this.toggleTips()\n    this.updateOverlay()\n  }\n\n  updateOverlay() {\n    const mode = this.getMode()\n    this.commandPaletteInput.overlay = mode\n\n    for (const group of this.groups) {\n      group.renderElement(mode)\n    }\n\n    if (mode && this.getTextWithoutMode() === '') {\n      const placeholder = this.getModeElement().placeholder || ''\n      this.commandPaletteInput.showModePlaceholder(placeholder)\n    } else {\n      this.commandPaletteInput.showModePlaceholder('')\n    }\n  }\n\n  itemsUpdated(event: Event) {\n    if (!(event instanceof CustomEvent)) return\n\n    const currentItems = event.detail.items as Item[]\n    const currentItemsExcludingFooter = currentItems.filter(\n      item => item.group !== CommandPaletteItemGroupElement.footerGroupId,\n    )\n    const currentItemsExcludingFooterAndHelp = currentItemsExcludingFooter.filter(\n      item => !item.group || !CommandPaletteItemGroupElement.helpGroupIds.includes(item.group),\n    )\n\n    const hasHelpItems = currentItemsExcludingFooter.length > currentItemsExcludingFooterAndHelp.length\n    const isEmpty = currentItemsExcludingFooterAndHelp.length === 0 && this.activated\n\n    if (currentItemsExcludingFooterAndHelp.length > 0) {\n      // if we have any actual items, we can remove the empty state immediately\n      // instead of waiting for results to finish to make the UI a bit more responsive\n      this.toggleEmptyState(false, hasHelpItems)\n    } else if (isEmpty) {\n      // if providers have finished and it's still empty,\n      // we know that we should show the empty state and toggle the tips.\n      this.toggleEmptyState(true, hasHelpItems)\n      this.toggleTips()\n    }\n\n    this.toggleErrorTips()\n  }\n\n  loadingStateChanged(event: Event) {\n    if (!(event instanceof CustomEvent)) return\n    this.commandPaletteInput.loading = event.detail.loading\n  }\n\n  pageFetchError(event: Event) {\n    if (!(event instanceof CustomEvent)) return\n\n    this.error = true\n    this.toggleErrorTips()\n  }\n\n  selectedItemChanged(event: Event) {\n    if (!(event instanceof CustomEvent)) return\n    const item = event.detail.item as Item\n    const isDefaultSelection = event.detail.isDefaultSelection\n    this.updateTypeahead(item, isDefaultSelection)\n  }\n\n  /**\n   * Grabs first character from the input and checks if it matches against a mode. Once the mode is\n   * found, it memoizes it for fast retrieval.\n   * A mode is considered active if the first character of the input matches the mode character,\n   * and if mode is valid for the current scope.\n   *\n   */\n  setActiveModeElement() {\n    const firstChar = this.commandPaletteInput.inputValue.substring(0, 1)\n\n    const currentMode = this.modes\n      .filter(mode => mode.active(this.query.scope, firstChar))\n      .find(mode => mode.character() === firstChar)\n\n    this.activeMode = currentMode || this.defaultMode\n    this.pageStack.currentMode = this.activeMode.character()\n  }\n\n  /**\n   * Grabs the current mode, query (without the mode), scope, subject, and return_to params and\n   * memoizes them in the command-palette-element. Calling this function ensures that `this.query`\n   * is up to date.\n   *\n   */\n  setQuery() {\n    this.query = new Query(this.getTextWithoutMode().trimStart(), this.getMode(), {\n      scope: this.commandPaletteInput.scope,\n      subjectId: this.pageStack.defaultScopeId,\n      subjectType: this.pageStack.defaultScopeType,\n      returnTo: this.returnTo,\n    })\n\n    this.pageStack.currentQueryText = this.getTextWithoutMode().trimStart()\n  }\n\n  /**\n   * Returns the memoized mode set by `setActiveModeElement()`.\n   *\n   * @returns the active mode element\n   */\n  getModeElement(): CommandPaletteModeElement {\n    return this.activeMode\n  }\n\n  /**\n   * Grabs first character from input and checks if it is a mode character that is enabled for the current scope\n   * If so, it returns that character.\n   *\n   * @returns mode character\n   */\n  getMode(): string {\n    return this.getModeElement()?.character()\n  }\n\n  /**\n   * Returns user input with mode character removed, if present. For example, if\n   * the user types `>switch`, this will return `switch`.\n   *\n   * @returns user input without mode prefix\n   */\n  getTextWithoutMode() {\n    if (!this.commandPaletteInput) return ''\n\n    const text = this.commandPaletteInput.inputValue\n    const modeChar = this.getMode()\n\n    if (modeChar && text.startsWith(modeChar)) {\n      return text.substring(1)\n    }\n\n    return text\n  }\n\n  get selectedItem(): CommandPaletteItemElement | undefined {\n    return this.pageStack.currentPage.selectedItem\n  }\n\n  /* eslint-disable-next-line custom-elements/no-method-prefixed-with-on */\n  onSelect(event: Event) {\n    if (this.selectedItem) {\n      this.selectedItem.item.select(this)\n    } else {\n      // Tell the input that there was nothing to scope into, or autocomplete\n      event.preventDefault()\n    }\n  }\n\n  autocomplete(item: Item) {\n    sendTrackingEvent('autocompleted', item)\n\n    const input = this.commandPaletteInput\n    if (item.typeahead !== undefined) {\n      input.inputValue = input.overlay + item.typeahead\n    } else {\n      input.inputValue = input.overlay + item.title\n    }\n  }\n\n  setScope(newScope?: Scope) {\n    sendTrackingEvent('scoped')\n\n    const scope = newScope ? newScope : this.commandPaletteInput.scope\n\n    for (const token of scope.tokens) {\n      const isLastToken = token === scope.tokens[scope.tokens.length - 1]\n\n      const page = new GlobalProvidersPage({\n        title: token.value,\n        scopeId: token.id,\n        scopeType: token.type,\n      })\n\n      this.pageStack.push(page, !isLastToken)\n    }\n\n    this.commandPaletteInput.inputValue = ''\n  }\n\n  /* eslint-disable-next-line custom-elements/no-method-prefixed-with-on */\n  onDescope() {\n    this.toggleEmptyState(false, false)\n    this.pageStack.pop()\n    this.toggleTips()\n  }\n\n  /* eslint-disable-next-line custom-elements/no-method-prefixed-with-on */\n  onInputClear() {\n    this.pageStack.clear()\n  }\n\n  /* eslint-disable-next-line custom-elements/no-method-prefixed-with-on */\n  onKeydown(event: KeyboardEvent) {\n    /* eslint eslint-comments/no-use: off */\n    /* eslint-disable @github-ui/ui-commands/no-manual-shortcut-logic */\n    if (event.key === 'Enter' && this.selectedItem) {\n      this.selectedItem?.activate(this, event)\n\n      event.preventDefault()\n      event.stopPropagation()\n    } else if (event.key === 'ArrowDown') {\n      this.navigateToItem(1)\n      event.preventDefault()\n      event.stopPropagation()\n    } else if (event.key === 'ArrowUp') {\n      this.navigateToItem(-1)\n      event.preventDefault()\n      event.stopPropagation()\n    } else if (this.isCopyEvent(event) && this.selectedItem) {\n      this.selectedItem.copy(this)\n\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    /* eslint-enable @github-ui/ui-commands/no-manual-shortcut-logic */\n  }\n\n  close(event: Event) {\n    // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n    if (event instanceof KeyboardEvent && event.key !== 'Enter') return\n\n    const dialog = document.querySelector<DetailsDialogElement>('.command-palette-details-dialog')!\n    dialog.toggle(false)\n    event.stopImmediatePropagation()\n    event.preventDefault()\n  }\n\n  navigateToItem(diff: number) {\n    this.pageStack.navigate(diff)\n  }\n\n  toggleTips() {\n    const availableTips = this.modeTips.filter(tipElement => tipElement.available(this.query))\n    const tipToShow = availableTips[Math.floor(Math.random() * availableTips.length)]\n\n    for (const tip of this.modeTips) {\n      tip.hidden = !(tipToShow === tip)\n    }\n\n    this.pageStack.hasVisibleTip = !!tipToShow\n    this.pageStack.currentPage.recomputeStyles()\n  }\n\n  toggleEmptyState(isEmpty: boolean, hasHelpItems: boolean) {\n    for (const emptyState of this.emptyStateElements) {\n      emptyState.toggle(this.query, isEmpty)\n    }\n\n    if (!hasHelpItems && isEmpty) {\n      const helpProvider = this.serverDefinedProviderElements.find(element => element.type === 'help')\n\n      if (helpProvider) {\n        this.pageStack.currentPage.fetch([helpProvider.provider], {isEmpty: true})\n      }\n    }\n  }\n\n  toggleErrorTips() {\n    for (const tip of this.errorStateTips) {\n      tip.toggle(this.query, false, this.error)\n    }\n  }\n\n  inputReady(event: Event) {\n    if (!(event instanceof CustomEvent)) return\n    if (this.resizeObserver) return\n\n    this.resizeObserver = new ResizeObserver(entries => {\n      for (const entry of entries) {\n        this.commandPaletteInput.scopeElement.smallDisplay = entry.contentRect.width < DISPLAY_BREAKPOINT_SM\n      }\n    })\n\n    this.resizeObserver.observe(this)\n  }\n\n  updateInputScope(event: Event) {\n    if (!(event instanceof CustomEvent)) return\n    this.commandPaletteInput.scope = this.pageStack.scope\n    this.setQuery()\n  }\n\n  updateTypeahead(selectedItem: Item, isDefaultSelection = false) {\n    if (this.getTextWithoutMode() === '' && (!selectedItem || isDefaultSelection)) {\n      this.commandPaletteInput.typeahead = ''\n    } else if (selectedItem) {\n      this.commandPaletteInput.typeahead = selectedItem.typeahead ?? selectedItem.title ?? ''\n    }\n  }\n\n  /**\n   * See if this keyboard event should be treated like a copy command.\n   *\n   * This relies on two checks:\n   * 1. See if the keypress maps to the common copy keyboard shortcut for the operating system.\n   * 2. Ensure the user hasn't selected any text (if they have, we don't want to intercept).\n   *\n   * @param event\n   * @returns true when command palette should respond to event with copy\n   */\n  isCopyEvent(event: KeyboardEvent) {\n    /* eslint eslint-comments/no-use: off */\n    /* eslint-disable @github-ui/ui-commands/no-manual-shortcut-logic */\n    if (this.commandPaletteInput.textSelected()) return false\n\n    if (isMac()) {\n      return event.metaKey && event.key === 'c'\n    } else {\n      return event.ctrlKey && event.key === 'c'\n    }\n    /* eslint-enable @github-ui/ui-commands/no-manual-shortcut-logic */\n  }\n\n  setQueryScope() {\n    this.query.scope = this.commandPaletteInput.scope\n  }\n\n  get providerElements(): ProviderElement[] {\n    return [...this.serverDefinedProviderElements, ...this.clientDefinedProviderElements]\n  }\n\n  get commandsProviderElements() {\n    return this.providerElements.filter(providerElement => providerElement.provider?.hasCommands)\n  }\n\n  clearProviderCaches() {\n    for (const providerElement of this.providerElements) {\n      providerElement.provider?.clearCache()\n    }\n  }\n\n  clearCommandProviderCaches() {\n    for (const commandProviderElement of this.commandsProviderElements) {\n      commandProviderElement.provider?.clearCache()\n    }\n  }\n\n  registerProvider(providerId: string, provider: Provider) {\n    const existingProviderElement = this.querySelector(`client-defined-provider[data-provider-id=\"${providerId}\"]`)\n    if (existingProviderElement) {\n      existingProviderElement.remove()\n    }\n\n    const providerElement = ClientDefinedProviderElement.build(providerId, provider)\n    this.appendChild(providerElement)\n  }\n\n  pushPage(page: Page, clearExistingPagesBeforePush = false) {\n    if (clearExistingPagesBeforePush) this.pageStack.clear(false)\n\n    this.pageStack.push(page)\n    this.resetInput()\n  }\n\n  get tipElements() {\n    const tips = this.querySelectorAll<CommandPaletteTipElement>('command-palette-tip')\n    return Array.from(tips)\n  }\n\n  get modeTips() {\n    return this.tipElements.filter(tipElement => !tipElement.onEmpty && !tipElement.onError)\n  }\n\n  get emptyStateElements() {\n    return this.tipElements.filter(tipElement => tipElement.onEmpty)\n  }\n\n  get errorStateTips() {\n    return this.tipElements.filter(tipElement => tipElement.onError)\n  }\n\n  get placeholder() {\n    return this.getAttribute('placeholder') || ''\n  }\n\n  clearReturnToParams() {\n    const params = new URLSearchParams(location.search)\n    params.delete('command_palette_open')\n    params.delete('command_query')\n    params.delete('command_mode')\n    params.delete('clear_command_scope')\n    history.replaceState(null, '', `?${params}${location.hash}`)\n  }\n\n  displayFlash(type: string, message: string, durationMs = 5000) {\n    const toastContainer = document.querySelector<HTMLDivElement>('.js-command-palette-toasts')\n    if (!toastContainer) return\n\n    const everyToast = toastContainer.querySelectorAll<HTMLDivElement>('.Toast')\n    for (const toast of everyToast) {\n      toast.hidden = true\n    }\n\n    const toast = toastContainer.querySelector<HTMLDivElement>(`.Toast.Toast--${type}`)\n    if (!toast) return\n\n    const toastContent = toast.querySelector('.Toast-content')!\n    toastContent.textContent = message\n\n    toast.hidden = false\n    setTimeout(() => {\n      toast.hidden = true\n    }, durationMs)\n  }\n}\n","import {attr, controller, target} from '@github/catalyst'\nimport {html, render} from '@github-ui/jtml-shimmed'\nimport type CommandPaletteElement from './command-palette-element'\nimport type {CommandPaletteItemElement} from './command-palette-item-element'\nimport type {Item} from '@github-ui/command-palette'\n\n@controller\nexport class CommandPaletteItemGroupElement extends HTMLElement {\n  static defaultGroupLimit = 5\n  static activeModeLimit = 50\n\n  static topGroupId = 'top'\n  static defaultGroupId = 'default'\n  static footerGroupId = 'footer'\n  static helpGroupIds = ['modes_help', 'filters_help']\n  static commandGroupIds = ['commands']\n\n  static topGroupScoreThreshold = 9\n\n  @attr groupTitle: string\n  @attr groupHint: string\n  @attr groupId: string\n  @attr groupLimits = ''\n  @attr defaultPriority = 0 // used for sorting groups in the PageStack\n  @attr skipTemplate = false\n\n  @target list: HTMLElement\n  @target header: HTMLHeadingElement\n\n  connectedCallback() {\n    this.classList.add('py-2', 'border-top')\n    this.setAttribute('hidden', 'true')\n\n    if (!this.skipTemplate) {\n      this.renderElement('')\n    }\n    this.skipTemplate = true\n  }\n\n  prepareForNewItems() {\n    this.list.textContent = ''\n    this.setAttribute('hidden', 'true')\n\n    if (!this.classList.contains('border-top')) {\n      this.classList.add('border-top')\n    }\n  }\n\n  hasItem(item: Item): boolean {\n    return this.list.querySelectorAll(`[data-item-id=\"${item.id}\"]`).length > 0\n  }\n\n  renderElement(mode: string) {\n    // there are two possible templates for this element - one with a title and one without\n    const groupTemplate = () => {\n      if (this.hasTitle) {\n        return html`\n          <div class=\"d-flex flex-justify-between my-2 px-3\">\n            <span data-target=\"command-palette-item-group.header\" class=\"color-fg-muted text-bold f6 text-normal\">\n              ${this.groupTitle}\n            </span>\n            <span data-target=\"command-palette-item-group.header\" class=\"color-fg-muted f6 text-normal\">\n              ${!mode ? this.groupHint : ''}\n            </span>\n          </div>\n          <div\n            role=\"listbox\"\n            class=\"list-style-none\"\n            data-target=\"command-palette-item-group.list\"\n            aria-label=\"${this.groupTitle} results\"\n          ></div>\n        `\n      } else {\n        return html`\n          <div\n            role=\"listbox\"\n            class=\"list-style-none\"\n            data-target=\"command-palette-item-group.list\"\n            aria-label=\"${this.groupTitle} results\"\n          ></div>\n        `\n      }\n    }\n\n    render(groupTemplate(), this)\n  }\n\n  push(renderedItem: CommandPaletteItemElement) {\n    this.removeAttribute('hidden')\n    if (this.topGroup && this.atLimit) {\n      if (renderedItem.itemId !== this.firstItem.itemId) {\n        this.replaceTopGroupItem(renderedItem)\n      }\n    } else {\n      this.list.append(renderedItem)\n    }\n  }\n\n  replaceTopGroupItem(item: CommandPaletteItemElement) {\n    this.list.replaceChild(item, this.firstItem)\n  }\n\n  // Deprecated in favor of `groupLimitForScopeType` (see anti-pattern note below)\n  groupLimitForScope() {\n    // this is an anti-pattern; see https://github.github.io/catalyst/guide/anti-patterns/\n    const commandPalette = this.closest<CommandPaletteElement>('command-palette')\n\n    if (commandPalette) {\n      const scopeType = commandPalette.query.scope.type\n      return JSON.parse(this.groupLimits)[scopeType]\n    }\n\n    return undefined\n  }\n\n  get limit() {\n    const groupLimitForScope = this.groupLimitForScope()\n\n    if (this.topGroup) {\n      return 1\n    } else if (this.isModeActive()) {\n      return 50\n    } else if (groupLimitForScope) {\n      return groupLimitForScope\n    }\n\n    return CommandPaletteItemGroupElement.defaultGroupLimit\n  }\n\n  get atLimit() {\n    return this.list.children.length >= this.limit\n  }\n  // end deprecation\n\n  parsedGroupLimits() {\n    if (!this.groupLimits) {\n      return {}\n    }\n    return JSON.parse(this.groupLimits)\n  }\n\n  limitForScopeType(scopeType: string) {\n    const groupLimitsByScopeType = this.parsedGroupLimits()\n    const groupLimitForScope = groupLimitsByScopeType[scopeType]\n\n    if (this.topGroup) {\n      return 1\n    } else if (this.isModeActive()) {\n      return CommandPaletteItemGroupElement.activeModeLimit\n    } else if (groupLimitForScope || groupLimitForScope === 0) {\n      return groupLimitForScope\n    }\n\n    return CommandPaletteItemGroupElement.defaultGroupLimit\n  }\n\n  atLimitForScopeType(scopeType: string) {\n    return this.list.children.length >= this.limitForScopeType(scopeType)\n  }\n\n  isModeActive() {\n    // this is an anti-pattern; see https://github.github.io/catalyst/guide/anti-patterns/\n    const commandPalette = this.closest<CommandPaletteElement>('command-palette')\n    if (!commandPalette) return false\n    return commandPalette.getMode()\n  }\n\n  get topGroup() {\n    return this.groupId === CommandPaletteItemGroupElement.topGroupId\n  }\n\n  get hasTitle() {\n    return (\n      this.groupId !== CommandPaletteItemGroupElement.footerGroupId &&\n      this.groupId !== CommandPaletteItemGroupElement.defaultGroupId\n    )\n  }\n\n  get itemNodes(): NodeListOf<CommandPaletteItemElement> {\n    return this.list.querySelectorAll<CommandPaletteItemElement>('command-palette-item')\n  }\n\n  get firstItem(): CommandPaletteItemElement {\n    return this.itemNodes[0]!\n  }\n\n  get lastItem(): CommandPaletteItemElement {\n    return this.itemNodes[this.itemNodes.length - 1]!\n  }\n}\n","import type {CommandPaletteTokenElement, Token} from './command-palette-token-element'\nimport {attr, controller, target, targets} from '@github/catalyst'\nimport {html, render} from '@github-ui/jtml-shimmed'\nimport type {Scope as ScopeAPI} from '@github-ui/command-palette'\n\nexport interface Scope extends ScopeAPI {\n  tokens: Token[]\n}\n\nconst MAX_TOKEN_DISPLAY_LENGTH_SM = 14\nconst MAX_SCOPE_DISPLAY_LENGTH_SM = 20\nconst MAX_TOKEN_DISPLAY_LENGTH = 20\nconst MAX_SCOPE_DISPLAY_LENGTH = 55\n\n/**\n * <command-palette-scope> manages the scope tokens in the <command-palette-input>\n * it watches for <command-palette-token> elements to derive current scope: id, text, and type\n *\n * == Attributes\n * - tokens: Array of <command-palette-token> elements. When a new scope is set, the token elements are added. When de-scoping token elements are removed.\n * - text: The current scope text for display. Derived from the text attributes of child tokens.\n * - type: The current scope type for querying. Derived from the last child token's type.\n * - id: The current scope id for querying. Derived from the last child token's id.\n */\n\n@controller\nexport class CommandPaletteScopeElement extends HTMLElement {\n  static emptyScope: Scope = {type: '', text: '', id: '', tokens: []}\n  lastRemovedToken: CommandPaletteTokenElement\n\n  @attr smallDisplay = false\n\n  @target placeholder: HTMLElement\n  @targets tokens: CommandPaletteTokenElement[]\n\n  connectedCallback() {\n    this.classList.add('d-inline-flex')\n  }\n\n  get lastToken() {\n    return this.tokens[this.tokens.length - 1]\n  }\n\n  get text(): string {\n    return this.tokens.map(t => t.text).join('/')\n  }\n\n  override get id(): string {\n    return this.lastToken ? this.lastToken.id : CommandPaletteScopeElement.emptyScope.id\n  }\n\n  get type(): string {\n    return this.lastToken ? this.lastToken.type : CommandPaletteScopeElement.emptyScope.type\n  }\n\n  get scope(): Scope {\n    if (this.hasScope()) {\n      return {\n        text: this.text,\n        type: this.type,\n        id: this.id,\n        tokens: this.tokens,\n      }\n    } else {\n      return CommandPaletteScopeElement.emptyScope\n    }\n  }\n\n  // Set a new scope by rendering new <command-palette-token> elements\n  // to derive updated scope id, text, and type.\n  set scope(scope: Scope) {\n    this.renderTokens(scope.tokens)\n  }\n\n  renderTokens(tokens: Token[]) {\n    this.clearScope()\n\n    let tokensLength = 0\n    let truncationIndex = tokens.length\n    const maxTokenDisplayLength = this.smallDisplay ? MAX_TOKEN_DISPLAY_LENGTH_SM : MAX_TOKEN_DISPLAY_LENGTH\n    const maxScopeDisplayLength = this.smallDisplay ? MAX_SCOPE_DISPLAY_LENGTH_SM : MAX_SCOPE_DISPLAY_LENGTH\n\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      if (tokensLength + Math.min(tokens[i]!.text.length, maxTokenDisplayLength) + 5 > maxScopeDisplayLength) {\n        break\n      }\n      tokensLength += Math.min(tokens[i]!.text.length, maxTokenDisplayLength) + 5\n      truncationIndex = i\n    }\n\n    // render() replaces the entire inner html of the element so we need to map all the tokens first\n    const tokensTemplate = (newTokens: Token[]) => html`${newTokens.map(tokenTemplate)}`\n    const tokenTemplate = (token: Token, index: number) => {\n      const displayText =\n        token.text.length > maxTokenDisplayLength\n          ? `${token.text.substring(0, maxTokenDisplayLength - 3)}...`\n          : token.text\n\n      return html`\n        <command-palette-token\n          data-text=\"${token.text}\"\n          data-id=\"${token.id}\"\n          data-type=\"${token.type}\"\n          data-value=\"${token.value}\"\n          data-targets=\"command-palette-scope.tokens\"\n          hidden=\"${index < truncationIndex}\"\n          class=\"color-fg-default text-semibold\"\n          style=\"white-space:nowrap;line-height:20px;\"\n          >${displayText}<span class=\"color-fg-subtle text-normal\">&nbsp;&nbsp;/&nbsp;&nbsp;</span>\n        </command-palette-token>\n      `\n    }\n\n    render(tokensTemplate(tokens), this)\n    this.hidden = !this.hasScope()\n    if (truncationIndex !== 0) {\n      this.placeholder.hidden = false\n    }\n  }\n\n  removeToken() {\n    if (this.lastToken) {\n      // Set last remove token for command-palette-input\n      this.lastRemovedToken = this.lastToken\n\n      // remove the token and rerender tokens\n      this.lastToken.remove()\n      this.renderTokens(this.tokens)\n    }\n  }\n\n  hasScope() {\n    return this.tokens.length > 0 && this.type && this.id && this.text\n  }\n\n  clearScope() {\n    for (const token of this.tokens) {\n      token.remove()\n    }\n    this.placeholder.hidden = true\n  }\n\n  static observedAttributes = ['data-small-display']\n\n  attributeChangedCallback(name: string, oldValue: string | null, newValue: string | null): void {\n    if (!this.isConnected) return\n\n    if (name === 'data-small-display' && oldValue !== newValue) {\n      this.renderTokens(this.tokens)\n    }\n  }\n}\n","function createNode(text: string): Element {\n  const node = document.createElement('pre')\n  node.style.width = '1px'\n  node.style.height = '1px'\n  node.style.position = 'fixed'\n  node.style.top = '5px'\n  node.textContent = text\n  return node\n}\n\nfunction copyNode(node: Element): Promise<void> {\n  if ('clipboard' in navigator) {\n    return navigator.clipboard.writeText(node.textContent || '')\n  }\n\n  const selection = getSelection()\n  if (selection == null) {\n    return Promise.reject(new Error())\n  }\n\n  selection.removeAllRanges()\n\n  const range = document.createRange()\n  range.selectNodeContents(node)\n  selection.addRange(range)\n\n  document.execCommand('copy')\n  selection.removeAllRanges()\n  return Promise.resolve()\n}\n\nexport function copyText(text: string): Promise<void> {\n  if ('clipboard' in navigator) {\n    return navigator.clipboard.writeText(text)\n  }\n\n  const body = document.body\n  if (!body) {\n    return Promise.reject(new Error())\n  }\n\n  const node = createNode(text)\n  body.appendChild(node)\n  copyNode(node)\n  body.removeChild(node)\n  return Promise.resolve()\n}\n","import type CommandPalette from '../command-palette-element'\nimport {isPlatformMetaKey} from '../command-palette-element'\nimport {ServerDefinedItem, serverDefinedItem} from './server-defined-item'\n\n/**\n * This item is a AccessPolicy CTA which visually looks like a result but behaves somewhat differently\n * There is no hint on hover\n * The key is based on title only because we want to dedup on title and not title + path\n *   path may change multiple times because it inclued a return_to that tracks the mode and query\n */\n\n@serverDefinedItem\n// We are not explicitly exporting AccessPolicyItem because this class being used is derived from @item\n// @item uses a custom Item#register which is then used to build the class in Item#build from data.type\n// data.type for these items is access_policy which maps to this class\nexport class AccessPolicyItem extends ServerDefinedItem {\n  override activate(_commandPalette: CommandPalette, event: Event) {\n    if (event instanceof PointerEvent) {\n      super.activate(_commandPalette, event)\n    } else if (event instanceof KeyboardEvent) {\n      this.activateLinkBehavior(_commandPalette, event, isPlatformMetaKey(event))\n    }\n  }\n\n  override get key() {\n    return this.title\n  }\n}\n","import {\n  type ServerDefinedAction,\n  ServerDefinedItem,\n  type ServerDefinedItemData,\n  serverDefinedItem,\n} from './server-defined-item'\nimport type CommandPalette from '../command-palette-element'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\n\ninterface CommandAction extends ServerDefinedAction {\n  id: string\n}\n\ninterface CommandItemData extends ServerDefinedItemData {\n  action: CommandAction\n}\n\n@serverDefinedItem\nexport class CommandItem extends ServerDefinedItem {\n  data: CommandItemData\n  override _action: CommandAction\n\n  constructor(data: CommandItemData) {\n    super(data)\n\n    this.typeahead = data.title\n    this.group = 'commands'\n  }\n\n  override get action() {\n    return this._action\n  }\n\n  override async activate(commandPalette: CommandPalette) {\n    super.activate(commandPalette)\n\n    const path = commandPalette.getAttribute('commands-path')\n    if (!path) return\n\n    const params = commandPalette.query.params()\n    params.set('command', this.action.id)\n\n    commandPalette.commandPaletteInput.loading = true\n\n    const response = await verifiedFetch(path, {\n      method: 'POST',\n      body: params,\n    })\n\n    commandPalette.commandPaletteInput.loading = false\n\n    if (response.ok) {\n      const result: {action: string; arguments: {[key: string]: string}} = await response.json()\n      this.handleResponse(commandPalette, result.action, result.arguments)\n    } else {\n      // eslint-disable-next-line i18n-text/no-en\n      commandPalette.displayFlash('error', 'Failed to run command')\n    }\n  }\n\n  handleResponse(commandPalette: CommandPalette, action: string, args: {[key: string]: string}) {\n    switch (action) {\n      case 'displayFlash':\n        commandPalette.displayFlash(args.type!, args.message!)\n        commandPalette.dismiss()\n        break\n    }\n  }\n}\n","import {\n  type ServerDefinedAction,\n  ServerDefinedItem,\n  type ServerDefinedItemData,\n  serverDefinedItem,\n} from './server-defined-item'\nimport type CommandPalette from '../command-palette-element'\nimport {copyText} from '../copy'\n\ninterface CopyableAction extends ServerDefinedAction {\n  id: string\n  text: string\n  message: string\n}\n\ninterface CopyableItemData extends ServerDefinedItemData {\n  action: CopyableAction\n}\n\n@serverDefinedItem\nexport class CopyableItem extends ServerDefinedItem {\n  data: CopyableItemData\n  override _action: CopyableAction\n\n  constructor(data: CopyableItemData) {\n    super(data)\n\n    this.priority = 11\n    this.score = 1\n    this.typeahead = data.title\n    this.group = 'commands'\n  }\n\n  override get action() {\n    return this._action\n  }\n\n  override async activate(commandPalette: CommandPalette) {\n    super.activate(commandPalette)\n\n    try {\n      await copyText(this.action.text)\n\n      commandPalette.displayFlash('success', this.action.message)\n      commandPalette.dismiss()\n    } catch {\n      // eslint-disable-next-line i18n-text/no-en\n      commandPalette.displayFlash('error', `Copy failed`)\n    }\n  }\n}\n","import {\n  type ServerDefinedAction,\n  ServerDefinedItem,\n  type ServerDefinedItemData,\n  serverDefinedItem,\n} from './server-defined-item'\nimport type CommandPalette from '../command-palette-element'\n\ninterface HelpItemData extends ServerDefinedItemData {\n  persistentHint?: string\n  action: HelpAction\n}\n\ninterface HelpAction extends ServerDefinedAction {\n  prefix?: string\n}\n\ninterface HelpItemArguments {\n  title: string\n  group: string\n  index: number\n  prefix?: string\n  persistentHint?: string\n}\n\n@serverDefinedItem\nexport class HelpItem extends ServerDefinedItem {\n  persistentHint?: string\n  override _action: HelpAction\n\n  static from(args: HelpItemArguments): ServerDefinedItem {\n    return new HelpItem({\n      title: args.title,\n      typeahead: '',\n      priority: -10 - args.index,\n      score: -10,\n      group: args.group,\n      action: {\n        type: 'help',\n        description: '',\n        prefix: args.prefix,\n      },\n      persistentHint: args.persistentHint,\n    })\n  }\n\n  constructor(data: HelpItemData) {\n    super(data)\n    this.persistentHint = data.persistentHint\n  }\n\n  override activate(commandPalette: CommandPalette, _event: Event) {\n    commandPalette.commandPaletteInput.inputValue = this.action.prefix + commandPalette.getTextWithoutMode()\n  }\n\n  autocomplete(commandPalette: CommandPalette) {\n    commandPalette.commandPaletteInput.inputValue = this.action.prefix + commandPalette.getTextWithoutMode()\n  }\n\n  override calculateScore(_queryText: string): number {\n    return 0\n  }\n\n  override get action() {\n    return this._action\n  }\n}\n","import type CommandPalette from '../command-palette-element'\nimport {isPlatformMetaKey} from '../command-palette-element'\nimport {type ServerDefinedAction, ServerDefinedItem, serverDefinedItem} from './server-defined-item'\n\ninterface JumpToAction extends ServerDefinedAction {\n  path: string\n}\n\ninterface JumpToItemArguments {\n  title: string\n  icon: string\n  path: string\n  group: string\n}\n\n@serverDefinedItem\nexport class JumpToItem extends ServerDefinedItem {\n  override _action: JumpToAction\n\n  static from(args: JumpToItemArguments) {\n    return new JumpToItem({\n      title: args.title,\n      typeahead: args.title,\n      priority: 1,\n      score: 1,\n      group: args.group,\n      action: {\n        type: 'jump_to',\n        description: '',\n        path: args.path,\n      },\n      icon: {\n        type: 'octicon',\n        id: args.icon,\n      },\n    })\n  }\n\n  override activate(_commandPalette: CommandPalette, event: Event) {\n    // activate can be called by either an onKeydown event or a mouse click. If it's a mouse click, we don't need to do\n    // anything special, just call the super method to makes sure everything that needs to happen does. If it's an onKeydown event,\n    // then we can trigger the normal link activation, which calls a click event on the item, which brings us right back here\n    // for the click trigger.\n    // we need to only call one or the other so we don't send two tracking events.\n    if (event instanceof PointerEvent) {\n      super.activate(_commandPalette, event)\n    } else if (event instanceof KeyboardEvent) {\n      this.activateLinkBehavior(_commandPalette, event, isPlatformMetaKey(event))\n    }\n  }\n\n  override copy(commandPalette: CommandPalette) {\n    super.copy(commandPalette)\n\n    const url = new URL(this.action.path, window.location.origin)\n\n    this.copyToClipboardAndAnnounce(url.toString())\n    return url.toString()\n  }\n\n  override get key() {\n    return `${super.key}/${this.action.path}`\n  }\n\n  override get action() {\n    return this._action\n  }\n}\n","import {JumpToItem} from './jump-to-item'\nimport {serverDefinedItem} from './server-defined-item'\n\n@serverDefinedItem\nexport class JumpToOrgItem extends JumpToItem {}\n","import {JumpToItem} from './jump-to-item'\nimport {serverDefinedItem} from './server-defined-item'\n\n@serverDefinedItem\nexport class JumpToTeamItem extends JumpToItem {}\n","import {Item, type Query} from '@github-ui/command-palette'\nimport type CommandPalette from '../command-palette-element'\nimport type {MainWindowCommand} from '../main-window-command'\n\n/**\n * Render an item for a main window command. Responsible to instantiate itself\n * from a MainWindowCommand and run the command when activated by the user.\n */\n\ntype CommandOverrides = {\n  title?: string\n  subtitle?: string\n  priority?: number\n  group?: string\n  icon?: string\n  iconType?: string\n}\nexport class MainWindowCommandItem extends Item {\n  command: MainWindowCommand\n\n  constructor(command: MainWindowCommand, overrides: CommandOverrides) {\n    super({\n      title: overrides.title ?? command.title,\n      subtitle: overrides.subtitle ?? command.subtitle,\n      typeahead: overrides.title ?? command.title,\n      priority: overrides.priority ?? command.priority,\n      group: overrides.group ?? command.group,\n      icon: {\n        type: overrides.iconType ?? command.iconType,\n        id: overrides.icon ?? command.icon,\n      },\n      hint: 'Run command',\n    })\n    this.command = command\n  }\n\n  get path(): string | undefined {\n    return undefined\n  }\n\n  // eslint-disable-next-line unused-imports/no-unused-vars\n  copy(commandPalette: CommandPalette): string | undefined {\n    return undefined\n  }\n\n  activate(commandPalette: CommandPalette) {\n    this.command.run(commandPalette)\n    if (this.command.dismissAfterRun) {\n      commandPalette.dismiss()\n    }\n  }\n\n  isApplicable(query: Query) {\n    return this.command.isApplicable(query)\n  }\n\n  select(commandPalette: CommandPalette) {\n    if (this.command.select) {\n      this.command.select(commandPalette)\n    } else {\n      commandPalette.autocomplete(this)\n    }\n  }\n}\n","import {type ServerDefinedItemData, serverDefinedItem} from './server-defined-item'\nimport type CommandPalette from '../command-palette-element'\nimport {CommandPaletteItemGroupElement} from '../command-palette-item-group-element'\nimport {JumpToItem} from './jump-to-item'\nimport type {Query} from '../query'\nimport type {Token} from '../command-palette-token-element'\n\ninterface SearchLinkItemData extends ServerDefinedItemData {\n  titleScope: string\n}\n\n@serverDefinedItem\nexport class SearchLinkItem extends JumpToItem {\n  static searchableScopeTypes = ['owner', 'repository']\n  titleScope: string\n\n  static create(query: Query) {\n    let titleScope: string\n    let path: string\n\n    const tokens = [...query.scope.tokens]\n\n    while (tokens.length > 0 && !this.searchableScopeTypes.includes(tokens[tokens.length - 1]!.type)) {\n      tokens.pop()\n    }\n\n    let lastToken: Token | undefined\n\n    if (tokens.length > 0) {\n      lastToken = tokens[tokens.length - 1]\n    } else {\n      lastToken = undefined\n    }\n\n    if (lastToken && lastToken.type === 'repository') {\n      const nwo = tokens.map(t => t.text).join('/')\n\n      titleScope = `in ${nwo}`\n      path = `/${nwo}/search?q=${query.text}`\n    } else if (lastToken && lastToken.type === 'owner') {\n      const orgSearchQuery = `org:${lastToken.text} ${query.text}`\n      titleScope = `in ${lastToken.text}`\n      path = `/search?q=${orgSearchQuery}`\n    } else {\n      titleScope = `across all of GitHub`\n      path = `/search?q=${query.text}`\n    }\n\n    return new SearchLinkItem({\n      title: `Search ${query.text}${titleScope}`,\n      typeahead: '',\n      priority: -10,\n      score: -10,\n      group: CommandPaletteItemGroupElement.footerGroupId,\n      action: {\n        type: 'jump_to',\n        description: '',\n        path,\n      },\n      icon: {\n        type: 'octicon',\n        id: 'search-color-fg-muted',\n      },\n      titleScope,\n    })\n  }\n\n  constructor(data: SearchLinkItemData) {\n    super(data)\n    this.titleScope = data.titleScope\n  }\n\n  autocomplete(_commandPalette: CommandPalette) {\n    // nothing to autocomplete\n  }\n\n  override calculateScore(_queryText: string): number {\n    return 0\n  }\n}\n","import {type Icon, Item, type ItemData} from '@github-ui/command-palette'\nimport type CommandPalette from '../command-palette-element'\nimport type {CommandPaletteItemElement} from '../command-palette-item-element'\nimport {CommandPaletteItemGroupElement} from '../command-palette-item-group-element'\nimport type {Scope} from '../command-palette-scope-element'\n\nexport interface ServerDefinedItemData extends ItemData {\n  score: number\n  action: ServerDefinedAction\n  scope?: Scope\n  match_fields?: string[]\n}\n\nexport interface ServerDefinedAction {\n  type: string\n  description?: string\n  path?: string\n}\n\nexport function serverDefinedItem(itemClass: typeof ServerDefinedItem): void {\n  ServerDefinedItem.register(itemClass)\n}\n\nexport class ServerDefinedItem extends Item implements ServerDefinedItemData {\n  static itemClasses = {} as {[id: string]: typeof ServerDefinedItem}\n\n  static defaultData: ServerDefinedItemData = {\n    title: '',\n    score: 1,\n    priority: 1,\n    action: {\n      type: '',\n      path: '',\n    },\n    icon: {\n      type: 'octicon',\n      id: 'dash-color-fg-muted',\n    },\n    group: CommandPaletteItemGroupElement.defaultGroupId,\n  }\n\n  static register(classObject: typeof ServerDefinedItem) {\n    this.itemClasses[classObject.itemType] = classObject\n  }\n\n  static get itemType() {\n    return this.buildItemType(this.name)\n  }\n\n  static buildItemType(className: string) {\n    return className\n      .replace(/([A-Z]($|[a-z]))/g, '_$1')\n      .replace(/(^_|_Item$)/g, '')\n      .toLowerCase()\n  }\n\n  override title: string\n  override priority: number\n  override score: number\n  override subtitle?: string\n  override typeahead?: string\n  scope?: Scope\n  override icon?: Icon\n  override hint?: string\n  override group: string\n  override position = ''\n  _action: ServerDefinedAction\n\n  // Memoization\n  element?: CommandPaletteItemElement\n\n  static build(data: ServerDefinedItemData) {\n    const itemClass = this.itemClasses[data.action.type]\n\n    if (itemClass) {\n      return new itemClass(data)\n    } else {\n      throw new Error(`No item handler for ${data.action.type}`)\n    }\n  }\n\n  constructor(data: ServerDefinedItemData) {\n    super(data)\n    this.score = data.score\n    this.scope = data.scope\n    this.matchFields = data.match_fields\n    this._action = data.action\n  }\n\n  get action() {\n    return this._action\n  }\n\n  /**\n   * Build a string that uniquely identifies this item. By default, an item is\n   * identified from its action type, group and title.\n   */\n  override get key() {\n    return `${this.action.type}/${this.title}/${this.group}`\n  }\n\n  get path(): string {\n    return this.action.path || ''\n  }\n\n  get itemType() {\n    return ServerDefinedItem.buildItemType(this.constructor.name)\n  }\n\n  select(commandPalette: CommandPalette) {\n    if (this.scope) {\n      commandPalette.setScope(this.scope)\n    } else {\n      commandPalette.autocomplete(this)\n    }\n  }\n\n  activate(_commandPalette: CommandPalette, _event?: Event) {\n    // Default no-op\n  }\n\n  activateLinkBehavior(commandPalette: CommandPalette, event: Event, isPlatformMetaKey: boolean) {\n    this.element?.activateLinkBehavior(commandPalette, event, isPlatformMetaKey)\n  }\n\n  copy(_commandPalette: CommandPalette): string | undefined {\n    return undefined\n  }\n\n  /**\n   * Copy given text to the clipboard and display a hint to the user.\n   *\n   * @param text to be copied\n   * @param hintText to display to user (defaults to 'Copied!')\n   */\n  copyToClipboardAndAnnounce(text: string, hintText?: string) {\n    this.element?.copyToClipboardAndAnnounce(text, hintText)\n  }\n}\n","import type {Page, Provider} from '@github-ui/command-palette'\nimport type {ClientDefinedProviderElement} from '../client-defined-provider-element'\nimport type {ProviderElement} from '../provider-element'\nimport type {ServerDefinedProviderElement} from '../server-defined-provider-element'\n\ntype PageProps = {\n  title: string\n  scopeId: string\n  scopeType: string\n}\n\nexport class GlobalProvidersPage implements Page {\n  title: string\n  scopeId: string\n  scopeType: string\n\n  constructor(data: PageProps) {\n    this.title = data.title\n    this.scopeId = data.scopeId\n    this.scopeType = data.scopeType\n  }\n\n  get providers(): Provider[] {\n    const providers = []\n    for (const providerElement of this._providerElements) {\n      if (providerElement.provider) {\n        providers.push(providerElement.provider)\n      }\n    }\n    return providers\n  }\n\n  get _providerElements(): ProviderElement[] {\n    return [...this.serverDefinedProviderElements, ...this.clientDefinedProviderElements]\n  }\n\n  get serverDefinedProviderElements(): ServerDefinedProviderElement[] {\n    const providerElements = document.querySelectorAll<ServerDefinedProviderElement>('server-defined-provider')\n    return Array.from(providerElements)\n  }\n\n  get clientDefinedProviderElements(): ClientDefinedProviderElement[] {\n    const providerElements = document.querySelectorAll<ClientDefinedProviderElement>('client-defined-provider')\n    return Array.from(providerElements)\n  }\n}\n","import type {Provider, ProviderResponse} from '@github-ui/command-palette'\nimport type {Query} from './query'\n\n/**\n * This is the base for all ProviderElements. It defines the shared interface/attributes between\n * the provider elements, most notably it contains a `Provider` attribute.\n */\nexport abstract class ProviderElement extends HTMLElement {\n  provider: Provider | undefined\n  _lastFetchQuery: Query\n\n  async fetchWithDebounce(query: Query, isEmpty: boolean): Promise<ProviderResponse> {\n    if (!this.provider) return {results: []}\n\n    // Improve debounce to use library https://github.com/github/platform-ux/issues/696\n    this._lastFetchQuery = query\n    await this.delay(this.provider.debounce)\n\n    if (this._lastFetchQuery !== query) {\n      return {results: []}\n    } else {\n      return this.provider.fetch(query, isEmpty)\n    }\n  }\n\n  private delay(wait: number) {\n    return new Promise(resolve => setTimeout(resolve, wait))\n  }\n}\n","import {type Item, type ProviderResponse, ProviderBase as ProviderBaseAPI} from '@github-ui/command-palette'\nimport type {Query} from './query'\n\n/**\n * This abstract class defines the shared proprieties of all providers (defined within the command palette).\n */\nexport abstract class ProviderBase extends ProviderBaseAPI {\n  abstract override fetch(query: Query, isEmpty: boolean): Promise<ProviderResponse>\n  abstract override enabledFor(query: Query): boolean\n  abstract override clearCache(): void\n  abstract override get hasCommands(): boolean\n  abstract override get debounce(): number\n\n  /**\n   * Filter and sort by relevance.\n   *\n   * Filtering is done by fuzzy matching against the title using fzy.js. During\n   * filtering, items are updated with a score.\n   *\n   * @param items that should be filtered and sorted\n   * @param query used to filter items\n   * @param minScore items with a score greater than this will be returned (default 0)\n   * @returns items that match query sorted by relevance\n   */\n  override fuzzyFilter<T extends Item = Item>(items: T[], query: Query, minScore = 0) {\n    if (query.isBlank()) {\n      return items\n    }\n\n    const matchingItems = [] as T[]\n    for (const item of items) {\n      const score = item.calculateScore(query.text)\n      if (score > minScore) {\n        matchingItems.push(item)\n      }\n    }\n\n    return matchingItems\n  }\n}\n","import {ProviderBase} from '../provider'\nimport type {ProviderResponse} from '@github-ui/command-palette'\nimport type {Query} from '../query'\nimport type {ServerDefinedProviderElement} from '../server-defined-provider-element'\n\n/**\n * The interface which determines which server defined provider properties can passed to the client.\n * These properties are passed through `ServerDefinedProviderElement`.\n */\nexport interface ServerDefinedProviderProperties {\n  type: string\n  modes: string[]\n  debounce: number\n  scopeTypes: string[]\n  src: string | undefined\n  hasCommands: boolean\n  hasWildCard: boolean\n}\n\n/**\n * A provider subclass which is the base for all server defined providers. This provider gives it's\n * subclasses access to `ServerDefinedProviderProperties` provided by a `ServerDefinedProviderElement`.\n */\nexport class ServerDefinedProvider extends ProviderBase implements ServerDefinedProviderProperties {\n  element: ServerDefinedProviderElement\n\n  constructor(element: ServerDefinedProviderElement) {\n    super()\n    this.element = element\n  }\n\n  get type(): string {\n    return this.element.type\n  }\n\n  get modes(): string[] {\n    return this.element.modes\n  }\n\n  get debounce(): number {\n    return this.element.debounce\n  }\n\n  get scopeTypes(): string[] {\n    return this.element.scopeTypes\n  }\n\n  get src(): string | undefined {\n    return this.element.src\n  }\n\n  get hasWildCard(): boolean {\n    return this.element.hasWildCard\n  }\n\n  get hasCommands(): boolean {\n    return this.element.hasCommands\n  }\n\n  fetch(_query: Query, _isEmpty: boolean): Promise<ProviderResponse> {\n    throw new Error('Method not implemented.')\n  }\n\n  enabledFor(_query: Query): boolean {\n    throw new Error('Method not implemented.')\n  }\n  clearCache(): void {\n    throw new Error('Method not implemented.')\n  }\n}\n","import {CommandPaletteScopeElement, type Scope} from './command-palette-scope-element'\nimport type {Query as QueryAPI} from '@github-ui/command-palette'\n\ninterface QueryOptions {\n  scope?: Scope\n  subjectId?: string\n  subjectType?: string\n  returnTo?: string\n}\nexport class Query implements QueryAPI {\n  scope: Scope\n  subjectId?: string\n  subjectType?: string\n  returnTo?: string\n  queryText: string\n  queryMode: string\n\n  constructor(text: string, mode: string, {scope, subjectId, subjectType, returnTo}: QueryOptions = {}) {\n    this.queryText = text\n    this.queryMode = mode\n    this.scope = scope ?? CommandPaletteScopeElement.emptyScope\n    this.subjectId = subjectId\n    this.subjectType = subjectType\n    this.returnTo = returnTo\n  }\n\n  get text() {\n    return this.queryText\n  }\n\n  get mode() {\n    return this.queryMode\n  }\n\n  get path() {\n    return this.buildPath(this)\n  }\n\n  buildPath(query: Query, queryText: string = query.text) {\n    return `scope:${query.scope.type}-${query.scope.id}/mode:${query.mode}/query:${queryText}`\n  }\n\n  clearScope() {\n    this.scope = CommandPaletteScopeElement.emptyScope\n  }\n\n  hasScope() {\n    return this.scope.id !== CommandPaletteScopeElement.emptyScope.id\n  }\n\n  isBlank() {\n    return this.text.trim().length === 0\n  }\n\n  isPresent() {\n    return !this.isBlank()\n  }\n\n  immutableCopy() {\n    const text = this.text\n    const mode = this.mode\n    const scope = {...this.scope}\n\n    return new Query(text, mode, {\n      scope,\n      subjectId: this.subjectId,\n      subjectType: this.subjectType,\n      returnTo: this.returnTo,\n    })\n  }\n\n  hasSameScope(query: Query) {\n    return this.scope.id === query.scope.id\n  }\n\n  params() {\n    const params = new URLSearchParams()\n\n    if (this.isPresent()) {\n      params.set('q', this.text)\n    }\n\n    if (this.hasScope()) {\n      params.set('scope', this.scope.id)\n    }\n\n    if (this.mode) {\n      params.set('mode', this.mode)\n    }\n\n    if (this.returnTo) {\n      params.set('return_to', this.returnTo)\n    }\n\n    if (this.subjectId) {\n      params.set('subject', this.subjectId)\n    }\n\n    return params\n  }\n}\n","import {AccessPolicyItem} from './items/access-policy-item'\nimport {CommandItem} from './items/command-item'\nimport type CommandPalette from './command-palette-element'\nimport {CopyableItem} from './items/copyable-item'\nimport type {Item} from '@github-ui/command-palette'\nimport {JumpToItem} from './items/jump-to-item'\nimport {MainWindowCommandItem} from './items/main-window-command-item'\nimport {ServerDefinedItem} from './items/server-defined-item'\nimport {sendEvent} from '@github-ui/hydro-analytics'\n\n/**\n * Sends a hydro BrowserEvent with command palette meta data\n *\n * @param type: The type of the event, this is prepended to 'command_palette-TYPE' to create the event name\n * @item Item: The item that is acted on and for which we can send more details\n *\n */\nexport function sendTrackingEvent(type: string, item?: Item) {\n  const commandPalette = document.querySelector<CommandPalette>('command-palette')!\n  let title = ''\n  if (item && (item.group === 'commands' || item.group === 'global_commands')) {\n    title = item.title\n  }\n\n  const meta = {\n    command_palette_session_id: commandPalette.sessionId,\n    command_palette_scope: commandPalette.query.scope.type,\n    command_palette_mode: commandPalette.getMode(),\n    command_palette_title: title,\n    command_palette_position: item?.position,\n    command_palette_score: item?.score,\n    command_palette_group: item?.group,\n    command_palette_item_type: item instanceof ServerDefinedItem ? item?.itemType : item?.constructor.name,\n  }\n\n  let action_type: string\n\n  if (type === 'activate') {\n    action_type = activateTrackingEventType(item)\n  } else {\n    action_type = type\n  }\n\n  sendEvent(`command_palette_${action_type}`, meta)\n}\n\nfunction activateTrackingEventType(item?: Item) {\n  if (item instanceof AccessPolicyItem) {\n    return 'access_policy_executed'\n  } else if (item instanceof CommandItem || item instanceof MainWindowCommandItem || item instanceof CopyableItem) {\n    return 'command_executed'\n  } else if (item instanceof JumpToItem) {\n    return item.element?.newTabOpened ? 'jump_to_new_tab' : 'jump_to'\n  } else {\n    return 'activate'\n  }\n}\n","function queryLast<T extends Element>(selector: string): T | undefined {\n  const list = document.querySelectorAll<T>(selector)\n  if (list.length > 0) {\n    return list[list.length - 1]\n  }\n}\n\nfunction pagePathname() {\n  const locationOverride = queryLast<HTMLMetaElement>('meta[name=analytics-location]')\n  if (locationOverride) {\n    return locationOverride.content\n  } else {\n    return window.location.pathname\n  }\n}\n\nfunction pageQuery() {\n  const stripParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-query-strip]')\n  let search = ''\n\n  if (!stripParams) {\n    search = window.location.search\n  }\n\n  const extraParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-params]')\n  if (extraParams) {\n    search += (search ? '&' : '?') + extraParams.content\n  }\n\n  for (const meta of document.querySelectorAll<HTMLMetaElement>('meta[name=analytics-param-rename]')) {\n    const names = meta.content.split(':', 2)\n    search = search.replace(new RegExp(`(^|[?&])${names[0]}($|=)`, 'g'), `$1${names[1]}$2`)\n  }\n\n  return search\n}\n\nexport function requestUri() {\n  return `${window.location.protocol}//${window.location.host}${pagePathname() + pageQuery()}`\n}\n","export interface ClientEnvironment {\n  readonly locale: string\n  readonly featureFlags: string[]\n}\n\nlet env: ClientEnvironment | undefined\n\nexport function getEnv() {\n  if (!env) {\n    throw new Error(\n      'Client env was requested before it was loaded. This likely means you are attempting to use client env at the module level in SSR, which is not supported. Please move your client env usage into a function.',\n    )\n  }\n\n  return env\n}\n\nexport function getLocale() {\n  return env?.locale ?? 'en-US'\n}\n\nfunction loadEnv() {\n  if (typeof document !== 'undefined') {\n    const envTag = document.getElementById('client-env')\n    if (envTag) {\n      try {\n        env = JSON.parse(envTag.textContent || '')\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error('Error parsing client-env', error)\n      }\n    }\n  }\n}\n\n// Automatically load the env on initial page load\nloadEnv()\n\n// This is a special helper method for setting the env in the SSR environment only\nexport function setClientEnvForSsr(clientEnv: ClientEnvironment | undefined) {\n  env = clientEnv\n}\n\n// This env object is used as a default for tests only and is not included in production builds\nexport const clientEnvForTests: ClientEnvironment = {\n  locale: 'en',\n  featureFlags: ['test_flag'],\n}\n\nexport function _resetForTests({loadNewEnv, forceUndefined}: {loadNewEnv: boolean; forceUndefined?: boolean}) {\n  // forget the current env\n  env = forceUndefined ? undefined : clientEnvForTests\n\n  if (loadNewEnv) {\n    // load the latest env\n    loadEnv()\n  }\n}\n","// The interfaces to be shared between the command palette and non-dotcom integrators (eg. memex).\n\nimport {score as fzyScore, hasMatch} from 'fzy.js'\nimport {crc32} from '@allex/crc32'\n\ndeclare global {\n  interface Window {\n    commandPalette: CommandPalette | undefined\n  }\n}\n\nexport interface Query {\n  readonly mode: string\n  readonly text: string\n  readonly path: string\n  readonly scope: Scope\n\n  hasScope(): boolean\n  isBlank(): boolean\n  immutableCopy(): Query\n  params(): URLSearchParams\n}\n\nexport interface Scope {\n  text: string\n  type: string\n  id: string\n}\n\nexport interface Page {\n  title: string\n  scopeId: string\n  scopeType: string\n  providers: Provider[]\n}\n\nexport class StaticItemsPage implements Page {\n  title: string\n  scopeId: string\n  providers: Provider[] = []\n  readonly scopeType = 'static_items_page'\n\n  constructor(title: string, scopeId: string, items: Item[]) {\n    this.title = title\n    this.scopeId = scopeId\n    this.providers = [new StaticItemsProvider(items)]\n  }\n}\n\n/**\n * This interface defines what a provider should respond with when `fetch` is invoked.\n */\nexport interface ProviderResponse {\n  results: Item[]\n  error?: boolean\n  octicons?: Octicon[]\n}\n\nexport interface Octicon {\n  id: string\n  svg: string\n}\n\nexport interface Provider {\n  fetch(query: Query, isEmpty: boolean): Promise<ProviderResponse>\n  prefetch?: (query: Query) => Promise<void>\n  enabledFor(query: Query): boolean\n  clearCache(): void\n  readonly hasCommands: boolean\n  readonly debounce: number\n}\n\nexport class StaticItemsProvider implements Provider {\n  items: Item[]\n  hasCommands = true\n  debounce = 0\n\n  constructor(items: Item[]) {\n    const itemsCount = items.length\n    this.items = items.map((item, index) => {\n      item.priority = itemsCount - index\n      return item\n    })\n  }\n\n  async fetch(query: Query): Promise<ProviderResponse> {\n    const items = this.fuzzyFilter(this.items, query)\n    return {results: items}\n  }\n\n  enabledFor() {\n    return true\n  }\n\n  clearCache() {\n    // no-op\n  }\n\n  fuzzyFilter<T extends Item = Item>(items: T[], query: Query, minScore = 0) {\n    if (query.isBlank()) {\n      return items\n    }\n\n    const matchingItems = [] as T[]\n    for (const item of items) {\n      const score = item.calculateScore(query.text)\n      if (score > minScore) {\n        matchingItems.push(item)\n      }\n    }\n\n    return matchingItems\n  }\n}\n\nexport interface CommandPalette {\n  autocomplete(item: Item): void\n  dismiss(): void\n  registerProvider(providerId: string, provider: Provider): void\n  pushPage(page: Page, clearExistingPagesBeforePush?: boolean): void\n  clearCommands(resetInput: boolean): Promise<void>\n}\n\nexport interface ItemData {\n  title: string\n  priority: number\n  group: string\n  subtitle?: string\n  matchFields?: string[]\n  typeahead?: string\n  hint?: string\n  icon?: Icon\n  readonly path?: string\n}\n\nexport interface Icon {\n  type: string\n  id?: string\n  url?: string\n  alt?: string\n}\n\nexport interface ItemInteraction {\n  activate(commandPalette: CommandPalette, event?: Event): void\n  copy(commandPalette: CommandPalette): string | undefined\n  select(commandPalette: CommandPalette): void\n}\n\nexport abstract class Item implements ItemData, ItemInteraction {\n  // MARK: - ItemData\n\n  title: string\n  priority: number\n  group: string\n  subtitle?: string\n  matchFields?: string[]\n  typeahead?: string\n  hint?: string\n  icon?: Icon\n  abstract get path(): string | undefined\n\n  // Memoization\n\n  score = 0\n  position = ''\n  private _id: string | undefined\n\n  // Constructor\n\n  constructor(data: ItemData) {\n    this.title = data.title\n    this.priority = data.priority\n    this.group = data.group\n    this.subtitle = data.subtitle\n    this.matchFields = data.matchFields\n    this.typeahead = data.typeahead\n    this.hint = data.hint\n    this.icon = data.icon\n  }\n\n  // ItemInteraction\n\n  abstract activate(commandPalette: CommandPalette, event?: Event): void\n  abstract copy(commandPalette: CommandPalette): string | undefined\n  abstract select(commandPalette: CommandPalette): void\n\n  // Matching fields\n\n  /**\n   * To change how this item is matched, set `match_fields` in result data.\n   * If not present, item will match against `this.title`.\n   *\n   * @returns list of strings to match against query\n   */\n  get matchingFields() {\n    if (this.matchFields) {\n      return this.matchFields\n    } else {\n      return [this.title]\n    }\n  }\n\n  // Key related logic\n\n  /**\n   * Build a string that uniquely identifies this item. By default, an item is\n   * identified from its action type, group and title.\n   */\n  get key() {\n    return `${this.title}-${this.group}-${this.subtitle}-${this.matchFields?.join('-')}`\n  }\n\n  get id() {\n    if (!this._id) {\n      this._id = crc32(this.key).toString()\n    }\n\n    return this._id\n  }\n\n  // Score calculation\n\n  /**\n   * Calculate a score for this item for a given query text.\n   *\n   * This calculates a score for values returned by `matchFields` and returns the highest score.\n   *\n   * @param queryText string to match against\n   */\n  calculateScore(queryText: string) {\n    const scores = this.matchingFields.map(field => this.calculateScoreForField({field, queryText}))\n    return Math.max(...scores)\n  }\n\n  private calculateScoreForField({field, queryText}: {field: string; queryText: string}) {\n    if (hasMatch(queryText, field)) {\n      return fzyScore(queryText, field)\n    } else {\n      return -Infinity\n    }\n  }\n}\n\n/**\n * This abstract class defines the shared proprieties of all providers (defined within the command palette).\n */\nexport abstract class ProviderBase implements Provider {\n  abstract fetch(query: Query, isEmpty: boolean): Promise<ProviderResponse>\n  abstract enabledFor(query: Query): boolean\n  abstract clearCache(): void\n  abstract get hasCommands(): boolean\n  abstract get debounce(): number\n\n  /**\n   * Filter and sort by relevance.\n   *\n   * Filtering is done by fuzzy matching against the title using fzy.js. During\n   * filtering, items are updated with a score.\n   *\n   * @param items that should be filtered and sorted\n   * @param query used to filter items\n   * @param minScore items with a score greater than this will be returned (default 0)\n   * @returns items that match query sorted by relevance\n   */\n  fuzzyFilter<T extends Item = Item>(items: T[], query: Query, minScore = 0) {\n    if (query.isBlank()) {\n      return items\n    }\n\n    const matchingItems = [] as T[]\n    for (const item of items) {\n      const score = item.calculateScore(query.text)\n      if (score > minScore) {\n        matchingItems.push(item)\n      }\n    }\n\n    return matchingItems\n  }\n}\n","import {ssrSafeDocument, ssrSafeWindow} from '@github-ui/ssr-utils'\n\n// Check if document has passed interactive state.\n//\n// The document has finished loading and the document has been parsed but\n// sub-resources such as images, stylesheets and frames are still loading.\n// The state indicates that the DOMContentLoaded event has been fired.\nexport const ready: Promise<void> = (function () {\n  if (ssrSafeDocument?.readyState === 'interactive' || ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise<void>(resolve => {\n      ssrSafeDocument?.addEventListener('DOMContentLoaded', () => {\n        resolve()\n      })\n    })\n  }\n})()\n\n// Check if document has passed loaded state.\n//\n// The document and all sub-resources have finished loading. The state\n// indicates that the load event has been fired.\nexport const loaded: Promise<unknown> = (function () {\n  if (ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise(resolve => {\n      ssrSafeWindow?.addEventListener('load', resolve)\n    })\n  }\n})()\n","// Report uncaught JS errors to Sentry\n//   https://sentry.io/github/github-js\n\nimport {getOrCreateClientId} from '@github/hydro-analytics-client'\nimport {isSupported} from '@github/browser-support'\nimport {parse} from 'stacktrace-parser'\nimport {requestUri} from '@github-ui/analytics-overrides'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {getSoftNavReferrer} from '@github-ui/soft-nav/utils'\n\nlet extensionErrors = false\nlet errorsReported = 0\nconst loadTime = Date.now()\n// network error messages are not consistent across browsers, this is a list of known messages for chrome and firefox\nexport const EXPECTED_NETWORK_ERROR_MESSAGES = new Set([\n  'Failed to fetch',\n  'NetworkError when attempting to fetch resource.',\n])\n\ntype ErrorContext = {\n  message?: string\n}\n\n// Check if an arbitrary object is an error, or at least an object that satisfies the interface of an error,\n// with the necessary information to be able to report it to Sentry.\nfunction isError(error: unknown): error is Error {\n  // Check if it's a definite instance of an error\n  if (error instanceof Error) return true\n  // Otherwise, check that it at least satisfies the interface of an error\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'name' in error &&\n    typeof error.name === 'string' &&\n    'message' in error &&\n    typeof error.message === 'string'\n  )\n}\n\n/** Tries to serialize an arbitrary error value that is not an Error object, and returns a default message otherwise */\nfunction serializeNonError(error: unknown): string {\n  try {\n    return JSON.stringify(error)\n  } catch {\n    return 'Unserializable'\n  }\n}\n\nfunction isExpectedError(error: Error): boolean {\n  // We use AbortController to control events and some workflows. When we call `abort()` on it, it will raise an\n  // `AbortError` which doesn't represent a real error, so we don't want to report it.\n  if (error.name === 'AbortError') return true\n  // Failed to fetch errors are usually related to the user's network connection. They also do not represent\n  // real errors related to our code, so we will also ignore them.\n  if (error.name === 'TypeError' && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n  // For memex we use an ApiError class to represent errors returned from the API\n  // Additional details in the format of ApiErrorOpts are affixed to the name as a stringified JSON object\n  // so we just need to ensure the error name starts with ApiError\n  // see ui/packages/memex/src/client/platform/api-error.ts for more details.\n  if (error.name.startsWith('ApiError') && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n\n  return false\n}\n\n// @deprecated Re-throw the caught exception instead.\nexport function reportError(error: unknown, context: ErrorContext = {}) {\n  if (isFeatureEnabled('FAILBOT_HANDLE_NON_ERRORS')) {\n    if (!isError(error)) {\n      if (isIgnoredNonError(error)) return\n\n      // Create an error instance so that we can get the stacktrace of how this was reported\n      const errorForStackTrace = new Error()\n      const serializedErrorValue = serializeNonError(error)\n      // Construct a custom error object so we can keep track of anywhere that we report an error that isn't an Error object\n      const newError: PlatformJavascriptError = {\n        type: 'UnknownError',\n        value: `Unable to report error, due to a thrown non-Error type: ${typeof error}, with value ${serializedErrorValue}`,\n        stacktrace: stacktrace(errorForStackTrace),\n        catalogService: undefined,\n      }\n      report(errorContext(newError, context))\n      return\n    }\n    if (!isExpectedError(error)) {\n      report(errorContext(formatError(error), context))\n    }\n  } else {\n    // Without feature flag, we will cast the `error` variable which was implicitly the old\n    // behavior of the non-feature flagged code.\n    if (!isExpectedError(error as Error)) {\n      report(errorContext(formatError(error as Error), context))\n    }\n  }\n}\n\n// Report context info to Sentry.\nasync function report(context: PlatformReportBrowserErrorInput) {\n  if (!reportable()) return\n\n  const url = document.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-errors-url\"]')?.content\n  if (!url) return\n\n  if (isExtensionError(context.error.stacktrace)) {\n    extensionErrors = true\n    return\n  }\n\n  errorsReported++\n\n  try {\n    await fetch(url, {method: 'post', body: JSON.stringify(context)})\n  } catch {\n    // Error reporting failed so do nothing.\n  }\n}\n\nfunction formatError(error: Error): PlatformJavascriptError {\n  return {\n    type: error.name,\n    value: error.message,\n    stacktrace: stacktrace(error),\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    catalogService: (error as any)['catalogService'],\n  }\n}\n\nfunction errorContext(error: PlatformJavascriptError, context: ErrorContext = {}): PlatformReportBrowserErrorInput {\n  return Object.assign(\n    {\n      error,\n      sanitizedUrl: requestUri() || window.location.href,\n      readyState: document.readyState,\n      referrer: getSoftNavReferrer(),\n      timeSinceLoad: Math.round(Date.now() - loadTime),\n      user: pageUser() || undefined,\n      bundler,\n      ui: Boolean(document.querySelector('meta[name=\"ui\"]')),\n    },\n    context,\n  )\n}\n\nexport function stacktrace(error: Error): PlatformStackframe[] {\n  return parse(error.stack || '').map(frame => ({\n    filename: frame.file || '',\n    function: String(frame.methodName),\n    lineno: (frame.lineNumber || 0).toString(),\n    colno: (frame.column || 0).toString(),\n  }))\n}\n\nconst extensions = /(chrome|moz|safari)-extension:\\/\\//\n\n// Does this stack trace contain frames from browser extensions?\nfunction isExtensionError(stack: PlatformStackframe[]): boolean {\n  return stack.some(frame => extensions.test(frame.filename) || extensions.test(frame.function))\n}\n\nexport function pageUser() {\n  const login = document.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n  if (login) return login\n\n  const clientId = getOrCreateClientId()\n  return `anonymous-${clientId}`\n}\n\nlet unloaded = false\nssrSafeWindow?.addEventListener('pageshow', () => (unloaded = false))\nssrSafeWindow?.addEventListener('pagehide', () => (unloaded = true))\n\nfunction reportable() {\n  return !unloaded && !extensionErrors && errorsReported < 10 && isSupported()\n}\n\nif (typeof BroadcastChannel === 'function') {\n  const sharedWorkerErrorChannel = new BroadcastChannel('shared-worker-error')\n  sharedWorkerErrorChannel.addEventListener('message', event => {\n    // SharedWorker will emit a formatted error\n    reportError(event.data.error)\n  })\n}\n\nconst ignoredErrorMessages = [\n  'Object Not Found Matching Id', // from Microsoft Outlook SafeLink crawler\n  'Not implemented on this platform', // LastPass Safari extension\n  `provider because it's not your default extension`, // MetaMask extension\n]\n\n/**\n * We see a fair number of \"errors\" which are not actually Error objects. This function will return true if the\n * error is one of these known non-Error types and has content which we know can safely be ignored.\n * Most of these errors come from specific browsers or extensions which we can't control, so we just ignore them.\n * @param error An error that is not an Error object\n * @returns boolean\n */\nfunction isIgnoredNonError(error: unknown) {\n  if (!error || typeof error === 'boolean' || typeof error === 'number') {\n    // Rejected with a type that is not useful to report. Just ignore it.\n    return true\n  } else if (typeof error === 'string') {\n    // rejected with a string. See if it's a known error that we can ignore\n    if (ignoredErrorMessages.some(message => error.includes(message))) {\n      return true\n    }\n  } else if (\n    typeof error === 'object' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).message === 'string' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).code === 'number'\n  ) {\n    // We see an object like {\"message\":\"Not connected\",\"code\":4900} from some extension, likely MetaMask. Ignore these\n    return true\n  }\n\n  return false\n}\n","import memoize from '@github/memoize'\nimport {getEnv} from '@github-ui/client-env'\nimport {IS_SERVER} from '@github-ui/ssr-utils'\n\nfunction getEnabledFeaturesSet(): Set<string> {\n  const features = getEnv().featureFlags\n  const featuresUpperCase = features.map(feature => feature.toLowerCase())\n  return new Set<string>(featuresUpperCase)\n}\n\nconst featuresSet =\n  IS_SERVER || process.env.NODE_ENV === 'test' ? getEnabledFeaturesSet : memoize(getEnabledFeaturesSet)\n\nexport function getEnabledFeatures(): string[] {\n  return Array.from(featuresSet())\n}\n\nexport function isFeatureEnabled(name: string): boolean {\n  return featuresSet().has(name.toLowerCase())\n}\n\n//exported to allow mocking in tests\nconst featureFlag = {isFeatureEnabled}\n\nexport {featureFlag}\n","import {AnalyticsClient, getOptionsFromMeta} from '@github/hydro-analytics-client'\nimport type {Context} from '@github/hydro-analytics-client'\nimport safeStorage from '@github-ui/safe-storage'\nimport {isStaff} from '@github-ui/stats'\nconst {getItem} = safeStorage('localStorage')\n\ndeclare const process: {\n  env: {\n    NODE_ENV: string\n  }\n}\n\nconst dimensionPrefix = 'dimension_'\nlet hydroAnalyticsClient: AnalyticsClient | undefined\n\nconst MARKETING_PARAMS = ['utm_source', 'utm_medium', 'utm_campaign', 'utm_term', 'utm_content', 'scid']\n\ntry {\n  const options = getOptionsFromMeta('octolytics')\n\n  // Remove the base context because meta tags can change as the user navigates with Turbo\n  // These will be folded in for each event & page view\n  delete options.baseContext\n\n  hydroAnalyticsClient = new AnalyticsClient(options)\n} catch (_) {\n  // Failed to get options from meta tags.  This most likely means analytics are disabled.\n}\n\nfunction extendBaseContext(context?: Context) {\n  const baseContext = getOptionsFromMeta('octolytics').baseContext || {}\n\n  if (baseContext) {\n    delete baseContext.app_id\n    delete baseContext.event_url\n    delete baseContext.host\n\n    for (const [key, value] of Object.entries(baseContext)) {\n      // some octolytics meta tags are prefixed with dimension-, which we don't need with the new hydro-analytics-client\n      if (key.startsWith(dimensionPrefix)) {\n        baseContext[key.replace(dimensionPrefix, '')] = value\n        delete baseContext[key]\n      }\n    }\n  }\n\n  const visitorMeta = document.querySelector<HTMLMetaElement>('meta[name=visitor-payload]')\n  if (visitorMeta) {\n    const visitorHash = JSON.parse(atob(visitorMeta.content))\n    Object.assign(baseContext, visitorHash)\n  }\n\n  const urlParams = new URLSearchParams(window.location.search)\n  for (const [key, value] of urlParams) {\n    if (MARKETING_PARAMS.includes(key.toLowerCase())) {\n      baseContext[key] = value\n    }\n  }\n\n  // Include additional context from the page\n  baseContext.staff = isStaff().toString()\n\n  return Object.assign(baseContext, context)\n}\n\nexport function sendPageView(context?: Context) {\n  hydroAnalyticsClient?.sendPageView(extendBaseContext(context))\n}\n\nexport function sendEvent(type: string, context: Record<string, string | number | boolean | undefined | null> = {}) {\n  const service = document.head?.querySelector<HTMLMetaElement>('meta[name=\"current-catalog-service\"]')?.content\n\n  const cleanContext: Context = service ? {service} : {}\n\n  for (const [key, value] of Object.entries(context)) {\n    if (value !== undefined && value !== null) {\n      cleanContext[key] = `${value}`\n    }\n  }\n\n  if (hydroAnalyticsClient) {\n    const typeWithFallback = type || 'unknown'\n    const fullContext = extendBaseContext(cleanContext)\n    hydroAnalyticsClient.sendEvent(typeWithFallback, extendBaseContext(cleanContext))\n\n    if (process.env.NODE_ENV === 'development') {\n      debugSendEvent(typeWithFallback, fullContext)\n    }\n  }\n}\n\nexport function stringifyObjectValues(obj: object) {\n  return Object.fromEntries(Object.entries(obj).map(([k, v]) => [k, JSON.stringify(v)]))\n}\n\nfunction debugSendEvent(type: string, context: Context) {\n  if (getItem('hydro-debug.send-event') === 'true') {\n    // eslint-disable-next-line no-console\n    console.group('[hydro-debug.send-event]')\n    // eslint-disable-next-line no-console\n    console.log({type, context})\n    // eslint-disable-next-line no-console\n    console.groupEnd()\n  }\n}\n","import {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {trustedTypesPolicy} from './policy'\n\nconst policyName = 'jtml-no-op'\n\n// This is a temporary policy to allow us to migrate to Trusted Types without breaking existing code.\nexport const temporaryPermissiveJtmlPolicy = ghTrustedTypes.createPolicy(policyName, {\n  createHTML: (s: string) => {\n    return trustedTypesPolicy.apply({\n      policy: () => s,\n      policyName,\n      fallback: s,\n      fallbackOnError: true,\n    })\n  },\n})\n","import {temporaryPermissiveJtmlPolicy} from '@github-ui/trusted-types-policies/jtml'\n// eslint-disable-next-line no-restricted-imports\nimport {TemplateResult} from '@github/jtml'\n\n// eslint-disable-next-line no-restricted-imports\nexport {html, unsafeHTML, render} from '@github/jtml'\n\nTemplateResult.setCSPTrustedTypesPolicy(temporaryPermissiveJtmlPolicy)\nexport {TemplateResult}\n","import memoize from '@github/memoize'\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\n\nconst runtimeEnvironment = memoize(githubEnvironment)\n\n// return the github instance environment\n// if dotcom, returns 'dotcom'\n// if enterprise, returns 'enterprise'\nfunction githubEnvironment(): string {\n  return ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"runtime-environment\"]')?.content || ''\n}\n\nexport const isEnterprise = memoize(isEnterpriseEnvironment)\nfunction isEnterpriseEnvironment(): boolean {\n  return runtimeEnvironment() === 'enterprise'\n}\n\n// This is the \"bundler\" that built the client-side assets, e.g. \"webpack\"\nexport const bundler = typeof BUNDLER !== 'undefined' ? BUNDLER : undefined\n","import {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\ntype StorageBackend = 'sessionStorage' | 'localStorage'\n\n/**\n * An implementation of the Storage API that throws away all data.  Used in\n * cases when the requested Storage backend is not available.\n */\nclass NoOpStorage {\n  getItem() {\n    return null\n  }\n\n  setItem() {\n    return undefined\n  }\n\n  removeItem() {\n    return undefined\n  }\n\n  clear() {\n    return undefined\n  }\n\n  key() {\n    return null\n  }\n\n  get length() {\n    return 0\n  }\n}\n\ntype SafeStorageOptions = {\n  /** Callers may opt not to suppress quota errors thrown on set in case they rely on recieving them. */\n  throwQuotaErrorsOnSet: boolean\n  /** The amount of time the value should remain in storage, in milliseconds */\n  ttl?: number\n  /** Don't send stats in CI */\n  sendCacheStats?: boolean\n}\n\n/**\n * Safely access Storage items by wrapping a Storage instance\n * (localStorage or sessionStorage) with safe versions of its API\n * methods.  Callers may opt not to suppress quota errors thrown on\n * set in case they rely on recieving them.\n */\nexport default function safeStorage<T = string>(\n  storageKey: StorageBackend,\n  options: SafeStorageOptions = {throwQuotaErrorsOnSet: false},\n  global = ssrSafeWindow,\n  deserialize: (value: string) => T = value => value as unknown as T,\n  serialize: (value: T) => string = (value: T) => value as unknown as string,\n) {\n  let storage: Storage\n  try {\n    if (!global) {\n      // in an SSR environment, use noop storage\n      throw new Error()\n    }\n\n    storage = global[storageKey] || new NoOpStorage()\n  } catch {\n    storage = new NoOpStorage()\n  }\n\n  const {throwQuotaErrorsOnSet} = options\n\n  function emitStats(key: PlatformBrowserIncrementKey) {\n    if (options.sendCacheStats) {\n      sendStats({incrementKey: key})\n    }\n  }\n\n  /**  Safely get storage item. Returns `null` if the item is older than the provided ttl */\n  function getItem(key: string, now: number = new Date().getTime()): T | null {\n    try {\n      const value = storage.getItem(key)\n      if (!value) {\n        return null\n      }\n      const expiryKey = `${key}:expiry`\n      const expiry = Number(storage.getItem(expiryKey))\n      if (expiry && now > expiry) {\n        removeItem(key)\n        removeItem(expiryKey)\n        emitStats('SAFE_STORAGE_VALUE_EXPIRED')\n        return null\n      } else {\n        emitStats('SAFE_STORAGE_VALUE_WITHIN_TTL')\n        return deserialize(value)\n      }\n    } catch (error) {\n      // Ignore browser private mode error.\n      return null\n    }\n  }\n\n  /**\n   * Safely set storage item.\n   * If `ttl` is provided, set an expiry time for the item under the key `${key}:expiry`\n   * This function will be called\n   */\n  function setItem(key: string, value: T, now: number = new Date().getTime()) {\n    try {\n      storage.setItem(key, serialize(value) as unknown as string)\n      if (options.ttl) {\n        const expiryKey = `${key}:expiry`\n        const expiry = now + options.ttl\n        storage.setItem(expiryKey, expiry.toString())\n      }\n    } catch (error) {\n      if (throwQuotaErrorsOnSet && error instanceof Error && error.message.toLowerCase().includes('quota')) throw error\n    }\n  }\n\n  // Safely remove storage item.\n  function removeItem(key: string) {\n    try {\n      storage.removeItem(key)\n      if (options.ttl) {\n        const expiryKey = `${key}:expiry`\n        storage.removeItem(expiryKey)\n      }\n    } catch (error) {\n      // Ignore browser private mode error.\n    }\n  }\n\n  return {\n    getItem,\n    setItem,\n    removeItem,\n    clear: storage.clear,\n    key: storage.key,\n    get length() {\n      return storage.length\n    },\n  }\n}\n\nexport function jsonSafeStorage<T>(storageBackend: StorageBackend) {\n  return safeStorage<T>(\n    storageBackend,\n    {throwQuotaErrorsOnSet: false},\n    ssrSafeWindow,\n    JSON.parse as (value: string) => T,\n    JSON.stringify as (obj: T) => string,\n  )\n}\n","import safeStorage from './safe-storage'\n\nexport const {getItem, setItem, removeItem} = safeStorage('sessionStorage')\n","import {getItem, removeItem, setItem} from '@github-ui/safe-storage/session-storage'\nimport type {SoftNavMechanism} from './events'\n\nexport const DEFAULT_SOFT_NAV_ERROR_REASON = 'reload'\n\nexport const SOFT_NAV_FAIL = 'soft-nav:fail'\nexport const SOFT_NAV_FAIL_REFERRER = 'soft-nav:fail-referrer'\nexport const SOFT_NAV_REFERRER = 'soft-nav:referrer'\nexport const SOFT_NAV_MARK = 'soft-nav:marker'\nexport const SOFT_NAV_REACT_APP_NAME = 'soft-nav:react-app-name'\nexport const SOFT_NAV_LATEST_MECHANISM = 'soft-nav:latest-mechanism'\n\nexport function clearSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n  removeItem(SOFT_NAV_REFERRER)\n  removeItem(SOFT_NAV_FAIL)\n  removeItem(SOFT_NAV_FAIL_REFERRER)\n  removeItem(SOFT_NAV_REACT_APP_NAME)\n  removeItem(SOFT_NAV_LATEST_MECHANISM)\n}\n\nexport function setSoftNavMechanism(mechanism: SoftNavMechanism) {\n  setItem(SOFT_NAV_MARK, mechanism)\n}\n\nexport function unsetSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n}\n\nexport function inSoftNav() {\n  const softNav = getItem(SOFT_NAV_MARK)\n  return softNav && softNav !== '0'\n}\n\nexport function getSoftNavMechanism(): SoftNavMechanism {\n  return getItem(SOFT_NAV_MARK) as SoftNavMechanism\n}\n\nexport function hasSoftNavFailure() {\n  return Boolean(getSoftNavFailReason())\n}\n\nexport function getSoftNavFailReason() {\n  return getItem(SOFT_NAV_FAIL)\n}\n\nexport function setSoftNavFailReason(reason: string) {\n  setItem(SOFT_NAV_FAIL, reason || DEFAULT_SOFT_NAV_ERROR_REASON)\n  setItem(SOFT_NAV_FAIL_REFERRER, window.location.href)\n}\n\nexport function setSoftNavReferrer() {\n  setItem(SOFT_NAV_REFERRER, window.location.href)\n}\n\nexport function getSoftNavReferrer() {\n  return getItem(SOFT_NAV_REFERRER) || document.referrer\n}\n\nexport function setSoftNavReactAppName() {\n  const appName = getCurrentReactAppName()\n\n  if (appName) {\n    setItem(SOFT_NAV_REACT_APP_NAME, appName)\n  } else {\n    removeItem(SOFT_NAV_REACT_APP_NAME)\n  }\n}\n\nexport function getSoftNavReactAppName() {\n  return getItem(SOFT_NAV_REACT_APP_NAME)\n}\n\nexport function getCurrentReactAppName() {\n  if (document.querySelector('meta[name=\"ui\"]')) return 'ui'\n\n  return document.querySelector('react-app')?.getAttribute('app-name')\n}\n\nexport function setLatestMechanism(mechanism: SoftNavMechanism) {\n  setItem(SOFT_NAV_LATEST_MECHANISM, mechanism)\n}\n\nexport function getLatestMechanism() {\n  return getItem(SOFT_NAV_LATEST_MECHANISM) as SoftNavMechanism\n}\n","// When using SSR, browser globals are not available. If you try to use them, Node.js will throw an error\ntype SSRSafeLocation = Pick<Location, 'pathname' | 'origin' | 'search' | 'hash' | 'href'>\n\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeDocument = typeof document === 'undefined' ? undefined : document\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeWindow = typeof window === 'undefined' ? undefined : window\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeHistory = typeof history === 'undefined' ? undefined : history\n\nexport const ssrSafeLocation: SSRSafeLocation =\n  // eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\n  typeof location === 'undefined' ? {pathname: '', origin: '', search: '', hash: '', href: ''} : location\n\nexport function setLocation(url: string) {\n  // eslint-disable-next-line no-restricted-syntax\n  const parsedURL: SSRSafeLocation = new URL(url)\n  const {pathname, origin, search, hash} = parsedURL\n\n  Object.assign(ssrSafeLocation, {pathname, origin, search, hash})\n}\n","import {ssrSafeDocument} from './ssr-globals'\n\n/***\n * Are we rendering on the server?\n */\nexport const IS_SERVER = typeof ssrSafeDocument === 'undefined'\n\n/***\n * Are we rendering on the client?\n */\nexport const IS_BROWSER = !IS_SERVER\n\n/***\n * This helper returns `true` if:\n * - we are rendering on the server\n * - we are on the client, and the app has been hydrated from a server-render\n */\nexport function wasServerRendered() {\n  if (IS_SERVER) {\n    return true\n  }\n\n  return Boolean(ssrSafeDocument!.querySelector('react-app[data-ssr=\"true\"]'))\n}\n","import {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {loaded} from '@github-ui/document-ready'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {throttle} from '@github/mini-throttle'\n\nlet stats: PlatformBrowserStat[] = []\nconst chunkSize = 64 * 1024\n\nexport function sendStats(stat: PlatformBrowserStat, flushImmediately = false, samplingProbability = 0.5): void {\n  if (isFeatureEnabled('BROWSER_STATS_DISABLED') === true) {\n    return\n  }\n  if (samplingProbability < 0 || samplingProbability > 1) {\n    throw new RangeError('Sampling probability must be between 0 and 1')\n  }\n\n  if (stat.timestamp === undefined) stat.timestamp = new Date().getTime()\n  stat.loggedIn = isLoggedIn()\n  stat.staff = isStaff()\n  stat.bundler = bundler\n  if (Math.random() < samplingProbability) {\n    stats.push(stat)\n  }\n\n  if (flushImmediately) {\n    flushStats()\n  } else {\n    throttledScheduleSendStats()\n  }\n}\n\nlet queued: number | null = null\n\nconst throttledScheduleSendStats = throttle(async function scheduleSendStats() {\n  await loaded\n  if (queued == null) {\n    queued = window.requestIdleCallback(flushStats)\n  }\n}, 5000)\n\nfunction flushStats() {\n  queued = null\n  if (!stats.length) {\n    return\n  }\n\n  const url = ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-stats-url\"]')?.content\n  if (!url) {\n    return\n  }\n\n  const batches = getBatches(stats)\n\n  for (const batch of batches) {\n    safeSend(url, `{\"stats\": [${batch.join(',')}] }`)\n  }\n\n  stats = []\n}\n\n// getBatches breaks up the list of stats into smaller batches\n// that are less than 64kb in size. This is to avoid hitting the\n// size limit of the beacon API.\nfunction getBatches(items: PlatformBrowserStat[]): string[][] {\n  const batches: string[][] = []\n  const itemStrings = items.map(item => JSON.stringify(item))\n\n  while (itemStrings.length > 0) {\n    batches.push(makeBatch(itemStrings))\n  }\n\n  return batches\n}\n\n// makeBatch walks the items and collects batches of items that are within\n// the 64kb limit. If an item is too big to fit in a batch, it is sent alone.\nfunction makeBatch(itemStrings: string[]): string[] {\n  const firstItem = itemStrings.shift()!\n  const batch: string[] = [firstItem]\n  let size = firstItem.length\n\n  while (itemStrings.length > 0 && size <= chunkSize) {\n    const nextItemSize = itemStrings[0]!.length\n\n    if (size + nextItemSize <= chunkSize) {\n      const itemString = itemStrings.shift()!\n      batch.push(itemString)\n      size += nextItemSize\n    } else {\n      break\n    }\n  }\n\n  return batch\n}\n\nfunction safeSend(url: string, data: string) {\n  try {\n    if (navigator.sendBeacon) {\n      navigator.sendBeacon(url, data)\n    }\n  } catch {\n    // Silently ignore errors: https://github.com/github/github/issues/178088#issuecomment-829936461\n  }\n}\n\nfunction isLoggedIn(): boolean {\n  return !!ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n}\n\nexport function isStaff(): boolean {\n  return !!ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"user-staff\"]')?.content\n}\n\n// Flush stats before users navigate away from the page\nssrSafeDocument?.addEventListener('pagehide', flushStats)\nssrSafeDocument?.addEventListener('visibilitychange', flushStats)\n","import {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {sendStats} from '@github-ui/stats'\n// eslint-disable-next-line no-restricted-imports\nimport {reportError} from '@github-ui/failbot'\nimport dompurify from 'dompurify'\nimport {sendEvent} from '@github-ui/hydro-analytics'\n\nexport class TrustedTypesPolicyError extends Error {}\n\ninterface PolicyParam {\n  policy: () => string\n  policyName: string\n  fallback: string\n  fallbackOnError?: boolean\n  sanitize?: boolean // report-only mode for now\n  silenceErrorReporting?: boolean\n}\n\nfunction apply({\n  policy,\n  policyName,\n  fallback,\n  fallbackOnError = false,\n  sanitize,\n  silenceErrorReporting = false,\n}: PolicyParam): string {\n  try {\n    if (isFeatureEnabled('BYPASS_TRUSTED_TYPES_POLICY_RULES')) return fallback\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_CALLED', trustedTypesPolicyName: policyName}, false, 0.1)\n    const policyOutput = policy()\n    if (sanitize) {\n      new Promise(resolve => {\n        const startTime = window.performance.now()\n        const sanitized = dompurify.sanitize(policyOutput, {FORBID_ATTR: []})\n        const endTime = window.performance.now()\n        const executionTime = endTime - startTime\n        if (policyOutput.length !== sanitized.length) {\n          const err = new Error('Trusted Types policy output sanitized')\n          const stack = err.stack?.slice(0, 1000)\n          const output = policyOutput.slice(0, 250)\n          sendEvent('trusted_types_policy.sanitize', {\n            policyName,\n            output,\n            stack,\n            outputLength: policyOutput.length,\n            sanitizedLength: sanitized.length,\n            executionTime,\n          })\n          resolve(policyOutput)\n        }\n      })\n    }\n    return policyOutput\n  } catch (e) {\n    if (e instanceof TrustedTypesPolicyError) throw e\n    if (!silenceErrorReporting) reportError(e)\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_ERROR', trustedTypesPolicyName: policyName})\n    if (!fallbackOnError) throw e\n  }\n\n  return fallback\n}\n\nexport const trustedTypesPolicy = {apply}\n","/* eslint no-restricted-globals: ['off', '__TRUSTED_TYPE_POLICIES__'] */\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\n/*\n * Tinyfill for trusted types\n */\n\ninterface GHTrustedTypePolicyOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createHTML: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScript: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScriptURL: (input: string, ...args: any[]) => string\n}\n\ninterface GHTrustedTypePolicyWithName extends GHTrustedTypePolicyOptions {\n  name: string\n}\n\nfunction unimplemented(functionName: string) {\n  return () => {\n    throw new TypeError(`The policy does not implement the function ${functionName}`)\n  }\n}\n\nconst fallbacks = {\n  createHTML: unimplemented('createHTML'),\n  createScript: unimplemented('createScript'),\n  createScriptURL: unimplemented('createScriptURL'),\n}\n\nconst tinyfill = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => ({\n    name,\n    ...fallbacks,\n    ...rules,\n  }),\n}\n\ntype TrustedTypesPolicies = Map<string, GHTrustedTypePolicyOptions>\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var trustedTypes: typeof tinyfill | undefined\n  // We need to store the policies in a global variable so that they accurately track the global policy store in the\n  // browser. This prevents false misses when there is more than one instance of this module loaded on the page.\n  // eslint-disable-next-line no-var\n  var __TRUSTED_TYPE_POLICIES__: TrustedTypesPolicies\n}\n\nconst registeredPolicies: TrustedTypesPolicies = (globalThis.__TRUSTED_TYPE_POLICIES__ ??= new Map())\n\n// eslint-disable-next-line compat/compat\nconst trustedTypes = globalThis.trustedTypes ?? tinyfill\n\nexport const ghTrustedTypes = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => {\n    if (registeredPolicies.has(name)) {\n      sendStats({\n        incrementKey: 'TRUSTED_TYPES_POLICY_INITIALIZED_TWICE',\n      })\n      return registeredPolicies.get(name) as GHTrustedTypePolicyWithName\n    } else {\n      const policy = Object.freeze(trustedTypes.createPolicy(name, rules))\n      registeredPolicies.set(name, policy)\n      return policy\n    }\n  },\n}\n\n// This export is only for testing. Do not import in production code.\nexport const registeredPoliciesForTesting = registeredPolicies\nexport const tinyfillForTesting = tinyfill\n\n/*\n *\n * This is a temporary warning to indicate to hubbers that the following errors are expected and safe to ignore.\n *\n */\nlet hasWarnedHubberAboutTrustedTypes = false\n\nssrSafeDocument?.addEventListener('securitypolicyviolation', (e: SecurityPolicyViolationEvent) => {\n  if (e.violatedDirective === 'require-trusted-types-for' && !hasWarnedHubberAboutTrustedTypes) {\n    // eslint-disable-next-line no-console\n    console.warn(`Hi fellow Hubber!\n    You're probably seeing a Report Only Trusted Types error near this message. This is intended behaviour, staff-only,\n    does not impact application control flow, and is used solely for statistic collection. Unfortunately we\n    can't gather these statistics without adding the above warnings to your console. Sorry about that!\n    Feel free to drop by #prodsec-engineering if you have any additional questions about Trusted Types or CSP.`)\n    hasWarnedHubberAboutTrustedTypes = true\n  }\n})\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  assertRelativePathOrSameOrigin(path)\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\nfunction assertRelativePathOrSameOrigin(path: string) {\n  if (process.env.NODE_ENV === 'test' && !window.location.origin) return\n  const url = new URL(path, window.location.origin)\n  if (url.origin !== window.location.origin) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetch(path, {...init, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetchJSON(path, {...init, headers})\n}\n"],"names":["ClientDefinedProviderElement","ProviderElement","build","providerId","provider","element","connectedCallback","setAttribute","attr","controller","isMac","navigator","platform","match","platformMetaKey","platformModifierKey","isPlatformMetaKey","KeyboardEvent","event","CommandPalette","HTMLElement","setup","modes","Array","from","querySelectorAll","defaultMode","querySelector","commandPaletteInput","groups","defaultOpen","manualToggle","clearReturnToParams","window","commandPalette","setupComplete","Event","bubbles","cancelable","dispatchEvent","clear","resetInput","clearProviderCaches","pageStack","reset","everActivated","clearCommandProviderCaches","Promise","resolve","inputValue","activate","sessionId","generateSessionId","scopeElement","smallDisplay","offsetWidth","focus","setActiveModeElement","setQuery","toggleTips","commandPaletteActivated","CustomEvent","detail","previouslyActivated","activated","sendTrackingEvent","deactivate","unbindListeners","previouslyActiveElement","crc32","Date","now","userId","query","path","toString","open","details","closest","removeAttribute","dismiss","secondaryActivationHotkey","hotkeys","activationHotkey","split","length","platformActivationHotkey","platformHotkey","platformSecondaryActivationHotkey","platformCommandModeHotkey","commandModeHotkey","hotkeyString","hotkey","replace","onInput","typeahead","updateOverlay","mode","getMode","group","overlay","renderElement","getTextWithoutMode","placeholder","getModeElement","showModePlaceholder","itemsUpdated","currentItemsExcludingFooter","currentItems","items","filter","item","CommandPaletteItemGroupElement","footerGroupId","currentItemsExcludingFooterAndHelp","helpGroupIds","includes","hasHelpItems","isEmpty","toggleEmptyState","toggleErrorTips","loadingStateChanged","loading","pageFetchError","error","selectedItemChanged","isDefaultSelection","updateTypeahead","firstChar","substring","currentMode","active","scope","find","character","activeMode","Query","trimStart","subjectId","defaultScopeId","subjectType","defaultScopeType","returnTo","currentQueryText","text","modeChar","startsWith","selectedItem","currentPage","onSelect","select","preventDefault","autocomplete","input","undefined","title","setScope","newScope","token","tokens","isLastToken","page","GlobalProvidersPage","value","scopeId","id","scopeType","type","push","onDescope","pop","onInputClear","onKeydown","key","stopPropagation","navigateToItem","isCopyEvent","copy","close","dialog","toggle","stopImmediatePropagation","diff","navigate","availableTips","modeTips","tipElement","available","tipToShow","Math","floor","random","tip","hidden","hasVisibleTip","recomputeStyles","emptyState","emptyStateElements","helpProvider","serverDefinedProviderElements","fetch","errorStateTips","inputReady","resizeObserver","ResizeObserver","entries","entry","contentRect","width","observe","updateInputScope","textSelected","metaKey","ctrlKey","setQueryScope","providerElements","clientDefinedProviderElements","commandsProviderElements","providerElement","hasCommands","clearCache","commandProviderElement","registerProvider","existingProviderElement","remove","appendChild","pushPage","clearExistingPagesBeforePush","tipElements","onEmpty","onError","getAttribute","params","URLSearchParams","location","search","delete","history","replaceState","hash","displayFlash","message","durationMs","toastContainer","document","toast","toastContent","textContent","setTimeout","tagName","attrPrefix","target","targets","debounce","classList","add","skipTemplate","prepareForNewItems","list","contains","hasItem","render","hasTitle","html","groupTitle","groupHint","renderedItem","topGroup","atLimit","itemId","firstItem","replaceTopGroupItem","append","replaceChild","groupLimitForScope","JSON","parse","groupLimits","limit","isModeActive","defaultGroupLimit","children","parsedGroupLimits","limitForScopeType","groupLimitsByScopeType","activeModeLimit","atLimitForScopeType","groupId","topGroupId","defaultGroupId","itemNodes","lastItem","defaultPriority","commandGroupIds","topGroupScoreThreshold","CommandPaletteScopeElement","lastToken","map","t","join","emptyScope","hasScope","renderTokens","clearScope","tokensLength","truncationIndex","maxTokenDisplayLength","maxScopeDisplayLength","i","min","newTokens","index","displayText","removeToken","lastRemovedToken","attributeChangedCallback","name","oldValue","newValue","isConnected","observedAttributes","copyText","clipboard","writeText","body","reject","node","createNode","createElement","style","height","position","top","copyNode","selection","getSelection","removeAllRanges","range","createRange","selectNodeContents","addRange","execCommand","removeChild","AccessPolicyItem","ServerDefinedItem","_commandPalette","PointerEvent","activateLinkBehavior","serverDefinedItem","CommandItem","action","_action","set","response","verifiedFetch","method","ok","result","json","handleResponse","arguments","args","constructor","data","CopyableItem","priority","score","HelpItem","description","prefix","persistentHint","_event","calculateScore","_queryText","JumpToItem","icon","url","URL","origin","copyToClipboardAndAnnounce","JumpToOrgItem","JumpToTeamItem","MainWindowCommandItem","Item","command","run","dismissAfterRun","isApplicable","overrides","subtitle","iconType","hint","SearchLinkItem","create","titleScope","searchableScopeTypes","nwo","orgSearchQuery","itemClass","register","classObject","itemClasses","itemType","buildItemType","className","toLowerCase","hintText","matchFields","match_fields","defaultData","providers","_providerElements","fetchWithDebounce","_lastFetchQuery","delay","results","wait","ProviderBase","ProviderBaseAPI","minScore","isBlank","matchingItems","ServerDefinedProvider","scopeTypes","src","hasWildCard","_query","_isEmpty","enabledFor","queryText","queryMode","buildPath","trim","isPresent","immutableCopy","hasSameScope","action_type","meta","command_palette_session_id","command_palette_scope","command_palette_mode","command_palette_title","command_palette_position","command_palette_score","command_palette_group","command_palette_item_type","newTabOpened","sendEvent","queryLast","selector","requestUri","protocol","host","pagePathname","locationOverride","content","pathname","pageQuery","stripParams","extraParams","names","env","getEnv","getLocale","locale","loadEnv","envTag","getElementById","console","StaticItemsPage","StaticItemsProvider","fuzzyFilter","itemsCount","matchingFields","_id","max","field","calculateScoreForField","hasMatch","fzyScore","Infinity","ready","ssrSafeDocument","readyState","addEventListener","loaded","ssrSafeWindow","extensionErrors","errorsReported","loadTime","EXPECTED_NETWORK_ERROR_MESSAGES","Set","isExpectedError","has","reportError","context","isFeatureEnabled","Error","isIgnoredNonError","ignoredErrorMessages","some","code","errorForStackTrace","serializedErrorValue","serializeNonError","stringify","report","errorContext","stacktrace","catalogService","formatError","unloaded","isSupported","head","stack","frame","extensions","test","filename","function","Object","assign","sanitizedUrl","href","referrer","getSoftNavReferrer","timeSinceLoad","round","user","pageUser","login","clientId","getOrCreateClientId","bundler","ui","Boolean","file","String","methodName","lineno","lineNumber","colno","column","BroadcastChannel","sharedWorkerErrorChannel","getEnabledFeaturesSet","features","featureFlags","feature","featuresSet","IS_SERVER","memoize","getEnabledFeatures","featureFlag","hydroAnalyticsClient","getItem","safeStorage","dimensionPrefix","MARKETING_PARAMS","options","getOptionsFromMeta","baseContext","AnalyticsClient","_","extendBaseContext","app_id","event_url","visitorMeta","atob","staff","isStaff","sendPageView","service","cleanContext","stringifyObjectValues","obj","fromEntries","k","v","policyName","temporaryPermissiveJtmlPolicy","ghTrustedTypes","createPolicy","createHTML","trustedTypesPolicy","apply","policy","s","fallback","fallbackOnError","TemplateResult","setCSPTrustedTypesPolicy","runtimeEnvironment","isEnterprise","BUNDLER","NoOpStorage","setItem","removeItem","storageKey","throwQuotaErrorsOnSet","global","deserialize","serialize","storage","emitStats","sendCacheStats","sendStats","incrementKey","ttl","expiryKey","getTime","expiry","Number","jsonSafeStorage","storageBackend","DEFAULT_SOFT_NAV_ERROR_REASON","SOFT_NAV_FAIL","SOFT_NAV_FAIL_REFERRER","SOFT_NAV_REFERRER","SOFT_NAV_MARK","SOFT_NAV_REACT_APP_NAME","SOFT_NAV_LATEST_MECHANISM","clearSoftNav","setSoftNavMechanism","mechanism","unsetSoftNav","inSoftNav","softNav","getSoftNavMechanism","hasSoftNavFailure","getSoftNavFailReason","setSoftNavFailReason","reason","setSoftNavReferrer","setSoftNavReactAppName","appName","getCurrentReactAppName","getSoftNavReactAppName","setLatestMechanism","getLatestMechanism","ssrSafeHistory","ssrSafeLocation","IS_BROWSER","wasServerRendered","stats","stat","flushImmediately","samplingProbability","timestamp","loggedIn","flushStats","throttledScheduleSendStats","queued","throttle","requestIdleCallback","batch","getBatches","batches","itemStrings","makeBatch","shift","size","nextItemSize","itemString","safeSend","sendBeacon","TrustedTypesPolicyError","sanitize","silenceErrorReporting","trustedTypesPolicyName","policyOutput","startTime","performance","sanitized","dompurify","FORBID_ATTR","endTime","err","slice","output","outputLength","sanitizedLength","executionTime","e","globalThis","unimplemented","functionName","fallbacks","createScript","createScriptURL","registeredPolicies","__TRUSTED_TYPE_POLICIES__","Map","trustedTypes","rules","get","freeze","hasWarnedHubberAboutTrustedTypes","violatedDirective","warn","init","assertRelativePathOrSameOrigin","headers","verifiedFetchJSON","Accept","reactFetch","reactFetchJSON"],"sourceRoot":""}