{"version":3,"file":"chunk-app_assets_modules_marketing_global-banner_ts-xxxxxxxxxxxx.js","mappings":"6KAGA,YACMA,4BAA4BC,YAChCC,mBAAoB,EACd,IAAI,CAACC,MAAM,EAEXC,CADoBC,EAAAA,EAAAA,CAAU,iCAAiCC,MAAM,MAAQ,EAAE,EAC/DC,QAAQ,CAAC,IAAI,CAACC,EAAE,GAAG,KAAI,CAACL,MAAM,CAAG,EAAG,CAC1D,CAEAM,OAAQ,CACN,IAAI,CAACN,MAAM,CAAG,GACd,IAAI,CAACO,YAAY,GACjBC,SAASC,aAAa,CAAC,IAAIC,YAAY,uBACzC,CAEAH,aAAaI,EAAqB,8BAA8B,CAAEC,EAA+B,EAAE,CAAE,CACnG,IAAMC,EAAiBX,CAAAA,EAAAA,EAAAA,EAAAA,EAAUS,GACjC,GAAIE,EAAgB,CAClB,IAAMC,EAAcD,EACjBV,KAAK,CAAC,KACNY,MAAM,CAACV,GAAMA,IAAO,IAAI,CAACA,EAAE,EAC3BW,IAAI,CAAC,KACRC,CAAAA,EAAAA,EAAAA,EAAAA,EAAUN,EAAY,CAAC,EAAEG,EAAY,CAAC,EAAE,IAAI,CAACT,EAAE,CAAC,CAAC,CAAEO,GACnD,MACF,CACAK,CAAAA,EAAAA,EAAAA,EAAAA,EAAUN,EAAY,IAAI,CAACN,EAAE,CAAEO,EACjC,CACF,EAzBMf,EAAAA,S,2TAAAA,CADLqB,EAAAA,EAAUA,C,CACLrB,E,+DCIC,IAAMsB,EAAiB,IAC5B,OAAQC,GACN,IAAK,KACH,OAAOC,OAAOC,UAAU,EAVnB,GAWP,KAAK,KACH,OAAOD,OAAOC,UAAU,EAXnB,GAYP,KAAK,KACH,OAAOD,OAAOC,UAAU,EAZnB,IAaP,KAAK,KACH,OAAOD,OAAOC,UAAU,EAbnB,IAcP,SACE,MAAO,EACX,CACF,EAEaC,EAAiB,IACrB,iBAAkBF,QAAUG,UAAUC,cAAc,CAAG,EAGnDvB,EAAY,IACvB,IAAMwB,EAAUlB,SAASmB,MAAM,CAACC,KAAK,CAAC,OAAW,CAAC,WAAW,EAAEC,EAAK,gBAAgB,CAAC,GACrF,OAAOH,EAAUA,CAAO,CAAC,EAAE,CAAG,IAChC,EAEaI,EAAmB,IAC9B,IAAMC,EAAO,IAAIC,KAEjB,OADAD,EAAKE,OAAO,CAACF,EAAKG,OAAO,GAAKC,MAAAA,GACvBJ,EAAKK,WAAW,EACzB,EAEanB,EAAY,CAACY,EAAcQ,EAAeF,KACrD3B,SAASmB,MAAM,CAAG,CAAC,EAAEE,EAAK,CAAC,EAAEQ,EAAM,kBAAkB,EAAEP,EAAiBK,GAAM,CAAC,C","sources":["app/assets/modules/marketing/global-banner.ts","app/assets/modules/marketing/helpers.ts"],"sourcesContent":["import {controller} from '@github/catalyst'\nimport {getCookie, setCookie} from './helpers'\n\n@controller\nclass GlobalBannerElement extends HTMLElement {\n  connectedCallback() {\n    if (this.hidden) return\n    const disabledBanners = getCookie('disabled_global_site_banners')?.split(',') || []\n    if (disabledBanners.includes(this.id)) this.hidden = true\n  }\n\n  close() {\n    this.hidden = true\n    this.updateCookie()\n    document.dispatchEvent(new CustomEvent('global-banner:close'))\n  }\n\n  updateCookie(cookieName: string = 'disabled_global_site_banners', cookieExpirationDays: number = 30) {\n    const existingCookie = getCookie(cookieName)\n    if (existingCookie) {\n      const cookieValue = existingCookie\n        .split(',')\n        .filter(id => id !== this.id)\n        .join(',')\n      setCookie(cookieName, `${cookieValue},${this.id}`, cookieExpirationDays)\n      return\n    }\n    setCookie(cookieName, this.id, cookieExpirationDays)\n  }\n}\n","// Breakpoints from https://primer.style/css/support/breakpoints\nconst sm = 544\nconst md = 768\nconst lg = 1012\nconst xl = 1280\nconst breakpoints = {sm, md, lg, xl}\ntype Breakpoints = keyof typeof breakpoints\n\nexport const isGtBreakpoint = (breakpoint: Breakpoints) => {\n  switch (breakpoint) {\n    case 'sm':\n      return window.innerWidth >= sm\n    case 'md':\n      return window.innerWidth >= md\n    case 'lg':\n      return window.innerWidth >= lg\n    case 'xl':\n      return window.innerWidth >= xl\n    default:\n      return false\n  }\n}\n\nexport const isTouchEnabled = () => {\n  return 'ontouchstart' in window || navigator.maxTouchPoints > 0\n}\n\nexport const getCookie = (name: string) => {\n  const matches = document.cookie.match(new RegExp(`(?:^|;\\\\s*)${name}\\\\s*=\\\\s*([^;]+)`))\n  return matches ? matches[1] : null\n}\n\nexport const cookieExpiration = (days: number) => {\n  const date = new Date()\n  date.setTime(date.getTime() + days * 24 * 60 * 60 * 1e3)\n  return date.toUTCString()\n}\n\nexport const setCookie = (name: string, value: string, days: number) => {\n  document.cookie = `${name}=${value}; path=/; expires=${cookieExpiration(days)}`\n}\n"],"names":["GlobalBannerElement","HTMLElement","connectedCallback","hidden","disabledBanners","getCookie","split","includes","id","close","updateCookie","document","dispatchEvent","CustomEvent","cookieName","cookieExpirationDays","existingCookie","cookieValue","filter","join","setCookie","controller","isGtBreakpoint","breakpoint","window","innerWidth","isTouchEnabled","navigator","maxTouchPoints","matches","cookie","match","name","cookieExpiration","date","Date","setTime","getTime","days","toUTCString","value"],"sourceRoot":""}