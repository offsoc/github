{"version":3,"file":"vendors-node_modules_buffer_index_js-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/base64-js/index.js","node_modules/buffer/index.js","node_modules/ieee754/index.js"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n"],"names":["exports","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","curByte","len","charCodeAt","revLookup","fromByteArray","uint8","length","extraBytes","parts","len2","push","encodeChunk","start","end","output","lookup","num","join","Uint8Array","Array","code","indexOf","base64","ieee754","customInspectSymbol","Symbol","createBuffer","buf","Object","setPrototypeOf","Buffer","prototype","arg","encodingOrOffset","allocUnsafe","from","value","fromString","string","encoding","isEncoding","actual","write","slice","ArrayBuffer","isView","fromArrayView","arrayView","isInstance","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","SharedArrayBuffer","valueOf","b","fromObject","obj","isBuffer","checked","undefined","type","isArray","data","toPrimitive","assertSize","size","array","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","out","hexSliceLookupTable","utf8Slice","asciiSlice","ret","Math","min","String","fromCharCode","latin1Slice","utf16leSlice","bytes","res","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","apply","checkOffset","offset","ext","checkInt","max","wrtBigUInt64LE","checkIntBI","lo","Number","BigInt","hi","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","TYPED_ARRAY_SUPPORT","typedArraySupport","proto","foo","e","console","error","defineProperty","enumerable","get","poolSize","alloc","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toString","toLocaleString","equals","inspect","str","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","remaining","hexWrite","strLen","parsed","parseInt","substr","blitBuffer","asciiToBytes","byteArray","utf16leToBytes","units","c","toJSON","_arr","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","NodeError","constructor","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","RangeError","TypeError","input","msg","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","base64clean","split","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","log","LN2"],"sourceRoot":""}