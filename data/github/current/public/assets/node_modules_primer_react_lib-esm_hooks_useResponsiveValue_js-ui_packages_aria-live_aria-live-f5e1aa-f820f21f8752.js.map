{"version":3,"file":"chunk-node_modules_primer_react_lib-esm_hooks_useResponsiveValue_js-ui_packages_aria-live_aria-live-f5e1aa-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@primer/react/lib-esm/hooks/useMedia.js","node_modules/@primer/react/lib-esm/hooks/useResponsiveValue.js","node_modules/@primer/react/lib-esm/utils/environment.js","ui/packages/aria-live/aria-live.ts","ui/packages/is-hash-navigation/is-hash-navigation.ts","ui/packages/react-core/prevent-autofocus.ts","ui/packages/react-core/use-app-payload.ts","ui/packages/safe-storage/session-storage.ts","ui/packages/soft-nav/events.ts","ui/packages/soft-nav/state.ts","ui/packages/soft-nav/states.ts","ui/packages/soft-nav/stats.ts","ui/packages/soft-nav/utils.ts","ui/packages/test-id-props/test-id-props.ts","ui/packages/use-layout-effect/use-layout-effect.ts","ui/packages/use-navigate/use-navigate.ts","ui/packages/global-create-menu/CreateIssueDialog.tsx","ui/packages/react-core/ErrorBoundary.tsx","ui/packages/react-core/ErrorPage.tsx","ui/packages/safe-html/SafeHTML.tsx"],"sourcesContent":["import React, { useContext, useEffect, createContext, useState } from 'react';\nimport { canUseDOM } from '../utils/environment.js';\nimport { warning } from '../utils/warning.js';\n\n/**\n * `useMedia` will use the given `mediaQueryString` with `matchMedia` to\n * determine if the document matches the media query string.\n *\n * If `MatchMedia` is used as an ancestor, `useMedia` will instead use the\n * value of the media query string, if available\n *\n * @example\n * function Example() {\n *   const coarsePointer = useMedia('(pointer: coarse)');\n *   // ...\n * }\n */\nfunction useMedia(mediaQueryString, defaultState) {\n  const features = useContext(MatchMediaContext);\n  const [matches, setMatches] = React.useState(() => {\n    if (features[mediaQueryString] !== undefined) {\n      return features[mediaQueryString];\n    }\n\n    // Prevent a React hydration mismatch when a default value is provided by not defaulting to window.matchMedia(query).matches.\n    if (defaultState !== undefined) {\n      return defaultState;\n    }\n    if (canUseDOM) {\n      return window.matchMedia(mediaQueryString).matches;\n    }\n\n    // A default value has not been provided, and you are rendering on the server, warn of a possible hydration mismatch when defaulting to false.\n    process.env.NODE_ENV !== \"production\" ? warning(true, '`useMedia` When server side rendering, defaultState should be defined to prevent a hydration mismatches.') : void 0;\n    return false;\n  });\n  useEffect(() => {\n    if (features[mediaQueryString] !== undefined) {\n      setMatches(features[mediaQueryString]);\n    }\n  }, [features, mediaQueryString]);\n  useEffect(() => {\n    // If `mediaQueryString` is present in features through `context` defer to\n    // the value present instead of checking with matchMedia\n    if (features[mediaQueryString] !== undefined) {\n      return;\n    }\n    function listener(event) {\n      setMatches(event.matches);\n    }\n    const mediaQueryList = window.matchMedia(mediaQueryString);\n\n    // Support fallback to `addListener` for broader browser support\n    // @ts-ignore this is not present in Safari <14\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (mediaQueryList.addEventListener) {\n      mediaQueryList.addEventListener('change', listener);\n    } else {\n      mediaQueryList.addListener(listener);\n    }\n\n    // Make sure the media query list is in sync with the matches state\n    setMatches(mediaQueryList.matches);\n    return () => {\n      // @ts-ignore this is not present in Safari <14\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (mediaQueryList.addEventListener) {\n        mediaQueryList.removeEventListener('change', listener);\n      } else {\n        mediaQueryList.removeListener(listener);\n      }\n    };\n  }, [features, mediaQueryString]);\n  return matches;\n}\n// Used to keep track of overrides to specific media query features, this should\n// be used for development and demo purposes to emulate specific features if\n// unavailable through devtools\nconst MatchMediaContext = /*#__PURE__*/createContext({});\nconst defaultFeatures = {};\n\n/**\n * Use `MatchMedia` to emulate media conditions by passing in feature\n * queries to the `features` prop. If a component uses `useMedia` with the\n * feature passed in to `MatchMedia` it will force its value to match what is\n * provided to `MatchMedia`\n *\n * This should be used for development and documentation only in situations\n * where devtools cannot emulate this feature\n *\n * @example\n * <MatchMedia features={{ \"(pointer: coarse)\": true}}>\n *   <Children />\n * </MatchMedia>\n */\nfunction MatchMedia({\n  children,\n  features = defaultFeatures\n}) {\n  const value = useShallowObject(features);\n  return /*#__PURE__*/React.createElement(MatchMediaContext.Provider, {\n    value: value\n  }, children);\n}\nMatchMedia.displayName = \"MatchMedia\";\n/**\n * Utility hook to provide a stable identity for a \"simple\" object which\n * contains only primitive values. This provides a `useMemo`-esque signature\n * without dealing with shallow equality checks in the dependency array.\n *\n * Note (perf): this hook iterates through keys and values of the object if the\n * shallow equality check is false each time the hook is called\n */\nfunction useShallowObject(object) {\n  const [value, setValue] = useState(object);\n  if (value !== object) {\n    const match = Object.keys(object).every(key => {\n      return object[key] === value[key];\n    });\n    if (!match) {\n      setValue(object);\n    }\n  }\n  return value;\n}\n\nexport { MatchMedia, useMedia };\n","import { useMedia } from './useMedia.js';\n\n// This file contains utilities for working with responsive values.\n\n// The viewport range values from @primer/primtives don't work in Chrome\n// because they use `em` units inside `calc()` (e.g., calc(48em - 0.02px)).\n// As a temporary workaround, we're hardcoding the viewport ranges in `px` units.\n// TODO: Use viewport range tokens from @primer/primitives\nconst viewportRanges = {\n  narrow: '(max-width: calc(768px - 0.02px))',\n  // < 768px\n  regular: '(min-width: 768px)',\n  // >= 768px\n  wide: '(min-width: 1400px)' // >= 1400px\n};\n\n/**\n * Flattens all possible value types into single union type\n * For example, if `T` is `'none' | 'line' | Responsive<'none' | 'line' | 'filled'>`,\n * `FlattenResponsiveValue<T>` will be `'none' | 'line' | 'filled'`\n */\n\n/**\n * Checks if the value is a responsive value.\n * In other words, is it an object with viewport range keys?\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isResponsiveValue(value) {\n  return typeof value === 'object' && Object.keys(value).some(key => ['narrow', 'regular', 'wide'].includes(key));\n}\n\n/**\n * Resolves responsive values based on the current viewport width.\n * For example, if the current viewport width is narrow (less than 768px), the value of `{regular: 'foo', narrow: 'bar'}` will resolve to `'bar'`.\n *\n * @example\n * const value = useResponsiveValue({regular: 'foo', narrow: 'bar'})\n * console.log(value) // 'bar'\n */\n// TODO: Improve SSR support\nfunction useResponsiveValue(value, fallback) {\n  // Check viewport size\n  // TODO: What is the performance cost of creating media query listeners in this hook?\n  const isNarrowViewport = useMedia(viewportRanges.narrow, false);\n  const isRegularViewport = useMedia(viewportRanges.regular, false);\n  const isWideViewport = useMedia(viewportRanges.wide, false);\n  if (isResponsiveValue(value)) {\n    // If we've reached this line, we know that value is a responsive value\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const responsiveValue = value;\n    if (isNarrowViewport && 'narrow' in responsiveValue) {\n      return responsiveValue.narrow;\n    } else if (isWideViewport && 'wide' in responsiveValue) {\n      return responsiveValue.wide;\n    } else if (isRegularViewport && 'regular' in responsiveValue) {\n      return responsiveValue.regular;\n    } else {\n      return fallback;\n    }\n  } else {\n    // If we've reached this line, we know that value is not a responsive value\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return value;\n  }\n}\n\nexport { isResponsiveValue, useResponsiveValue, viewportRanges };\n","/**\n * Indicate whether current execution environment can access the DOM.\n *\n * @see https://github.com/facebook/fbjs/blob/4d1751311d3f67af2dcce2e40df8512a23c7b9c6/packages/fbjs/src/core/ExecutionEnvironment.js#L12\n */\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nconst canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nexport { canUseDOM };\n","import {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {\n  announce as liveRegionAnnounce,\n  announceFromElement as liveRegionAnnounceFromElement,\n} from '@primer/live-region-element'\n\nexport interface ElementWithAriaNotify extends Element {\n  ariaNotify: (\n    message: string,\n    options?: {interrupt?: 'none' | 'pending' | 'all'; priority?: 'none' | 'important'},\n  ) => void\n}\n\n/**\n * Troubleshooting guide for aria-live regions available on the Hub\n * - https://thehub.github.com/epd/engineering/dev-practicals/frontend/accessibility/readiness-routine/screenreaders/live-regions-and-focus-management-techniques/#why-isnt-my-live-region-working-as-i-expect\n */\n\n// Announce an element's text to the screen reader.\nexport function announceFromElement(el: HTMLElement, options?: {assertive?: boolean; element?: HTMLElement}) {\n  if (isFeatureEnabled('arianotify_comprehensive_migration')) {\n    announce(getTextContent(el), {...options, element: options?.element ?? el})\n  } else if (isFeatureEnabled('primer_live_region_element') && options?.element === undefined) {\n    liveRegionAnnounceFromElement(el, {\n      politeness: options?.assertive ? 'assertive' : 'polite',\n    })\n  } else {\n    announce(getTextContent(el), options)\n  }\n}\n\n// Announce message update to screen reader.\n// Note: Use caution when using this function while a dialog is active.\n// If the message is updated while the dialog is open, the screen reader may not announce the live region.\n// For more information, view the document on dialog and live region support: https://github.com/github/accessibility/blob/main/docs/dialog-live-region-support.md\nexport function announce(message: string, options?: {assertive?: boolean; element?: HTMLElement}) {\n  const {assertive, element} = options ?? {}\n\n  if (isFeatureEnabled('arianotify_comprehensive_migration') && 'ariaNotify' in Element.prototype) {\n    ;((element || document.body) as Element as ElementWithAriaNotify).ariaNotify(message, {\n      interrupt: options?.assertive ? 'all' : 'none',\n    })\n  } else if (isFeatureEnabled('primer_live_region_element') && element === undefined) {\n    liveRegionAnnounce(message, {\n      politeness: assertive ? 'assertive' : 'polite',\n    })\n  } else {\n    setContainerContent(message, assertive, element)\n  }\n}\n\n// Set aria-live container to message.\nfunction setContainerContent(message: string, assertive?: boolean, element?: HTMLElement) {\n  const getQuerySelector = () => {\n    return assertive ? '#js-global-screen-reader-notice-assertive' : '#js-global-screen-reader-notice'\n  }\n  const container = element ?? ssrSafeDocument?.querySelector(getQuerySelector())\n  if (!container) return\n  if (container.textContent === message) {\n    /* This is a hack due to the way the aria live API works.\n    A screen reader will not read a live region again\n    if the text is the same. Adding a space character tells\n    the browser that the live region has updated,\n    which will cause it to read again, but with no audible difference. */\n    container.textContent = `${message}\\u00A0`\n  } else {\n    container.textContent = message\n  }\n}\n\n// Gets the trimmed text content of an element.\nfunction getTextContent(el: HTMLElement): string {\n  // innerText does not contain hidden text\n  /* eslint-disable-next-line github/no-innerText */\n  return (el.getAttribute('aria-label') || el.innerText || '').trim()\n}\n","// Check if the navigation is only a hash change.\nconst isHashNavigation = (currentUrl: string, targetUrl: string): boolean => {\n  const current = new URL(currentUrl, window.location.origin)\n  const target = new URL(targetUrl, window.location.origin)\n  const hasHash = target.href.includes('#')\n\n  return (\n    hasHash && current.host === target.host && current.pathname === target.pathname && current.search === target.search\n  )\n}\n\nexport default isHashNavigation\n","export const PREVENT_AUTOFOCUS_KEY = '__gh__react-core-preventAutofocus'\n","import {createContext, useContext} from 'react'\n\nexport const AppPayloadContext = createContext<unknown>(undefined)\n\nexport function useAppPayload<T>(): T {\n  const appPayload = useContext(AppPayloadContext)\n\n  return appPayload as T\n}\n","import safeStorage from './safe-storage'\n\nexport const {getItem, setItem, removeItem} = safeStorage('sessionStorage')\n","import {SOFT_NAV_STATE} from './states'\n\nexport type SoftNavMechanism = 'turbo' | 'react' | 'turbo.frame'\n\nclass SoftNavEvent extends Event {\n  mechanism: SoftNavMechanism\n\n  constructor(mechanism: SoftNavMechanism, type: string) {\n    super(type)\n    this.mechanism = mechanism\n  }\n}\n\nexport class SoftNavStartEvent extends SoftNavEvent {\n  constructor(mechanism: SoftNavMechanism) {\n    super(mechanism, SOFT_NAV_STATE.START)\n  }\n}\n\nexport class SoftNavSuccessEvent extends SoftNavEvent {\n  visitCount: number\n\n  constructor(mechanism: SoftNavMechanism, visitCount: number) {\n    super(mechanism, SOFT_NAV_STATE.SUCCESS)\n    this.visitCount = visitCount\n  }\n}\n\nexport class SoftNavErrorEvent extends SoftNavEvent {\n  error: string\n\n  constructor(mechanism: SoftNavMechanism, error: string) {\n    super(mechanism, SOFT_NAV_STATE.ERROR)\n    this.error = error\n  }\n}\n\nexport class SoftNavEndEvent extends SoftNavEvent {\n  constructor(mechanism: SoftNavMechanism) {\n    super(mechanism, SOFT_NAV_STATE.END)\n  }\n}\n","import {SOFT_NAV_STATE} from './states'\nimport {\n  SoftNavEndEvent,\n  SoftNavErrorEvent,\n  type SoftNavMechanism,\n  SoftNavStartEvent,\n  SoftNavSuccessEvent,\n} from './events'\nimport {markStart, sendFailureStats, sendRenderStats} from './stats'\nimport {\n  clearSoftNav,\n  getSoftNavFailReason,\n  getSoftNavMechanism,\n  setSoftNavMechanism,\n  unsetSoftNav,\n  setSoftNavReferrer,\n  setSoftNavReactAppName,\n  inSoftNav,\n  getCurrentReactAppName,\n  DEFAULT_SOFT_NAV_ERROR_REASON,\n  setLatestMechanism,\n} from './utils'\n\ninterface SoftNavOptions {\n  skipIfGoingToReactApp?: boolean\n  allowedMechanisms?: SoftNavMechanism[]\n}\n\nlet visitCount = 0\n\nexport function initSoftNav() {\n  visitCount = 0\n  document.dispatchEvent(new Event(SOFT_NAV_STATE.INITIAL))\n\n  clearSoftNav()\n}\n\nexport function startSoftNav(mechanism: SoftNavMechanism) {\n  if (inSoftNav()) return\n\n  startProgressBar()\n  document.dispatchEvent(new SoftNavStartEvent(mechanism))\n\n  setSoftNavMechanism(mechanism)\n  setSoftNavReactAppName()\n  setSoftNavReferrer()\n  markStart()\n}\n\nexport function succeedSoftNav(options: SoftNavOptions = {}) {\n  if (!canTriggerEvent(options)) return\n\n  visitCount += 1\n\n  document.dispatchEvent(new SoftNavSuccessEvent(getSoftNavMechanism(), visitCount))\n  endSoftNav(options)\n}\n\nexport function failSoftNav(options: SoftNavOptions = {}) {\n  if (!canTriggerEvent(options)) return\n\n  visitCount = 0\n  const reason = getSoftNavFailReason() || DEFAULT_SOFT_NAV_ERROR_REASON\n  document.dispatchEvent(new SoftNavErrorEvent(getSoftNavMechanism(), reason))\n\n  endProgressBar()\n  sendFailureStats(reason)\n  clearSoftNav()\n}\n\nexport function endSoftNav(options: SoftNavOptions = {}) {\n  if (!canTriggerEvent(options)) return\n\n  const mechanism = getSoftNavMechanism()\n  endProgressBar()\n  document.dispatchEvent(new SoftNavEndEvent(mechanism))\n\n  unsetSoftNav()\n  setLatestMechanism(mechanism)\n}\n\nexport function renderedSoftNav(options: SoftNavOptions = {}) {\n  if (!canTriggerEvent(options)) return\n\n  sendRenderStats()\n  document.dispatchEvent(new Event(SOFT_NAV_STATE.RENDER))\n}\n\nexport function updateFrame() {\n  document.dispatchEvent(new Event(SOFT_NAV_STATE.FRAME_UPDATE))\n}\n\nfunction startProgressBar() {\n  document.dispatchEvent(new Event(SOFT_NAV_STATE.PROGRESS_BAR.START))\n}\n\nfunction endProgressBar() {\n  document.dispatchEvent(new Event(SOFT_NAV_STATE.PROGRESS_BAR.END))\n}\n\nfunction canTriggerEvent({skipIfGoingToReactApp, allowedMechanisms = []}: SoftNavOptions = {}) {\n  return (\n    inSoftNav() &&\n    (allowedMechanisms.length === 0 || allowedMechanisms.includes(getSoftNavMechanism())) &&\n    (!skipIfGoingToReactApp || !getCurrentReactAppName())\n  )\n}\n","export const SOFT_NAV_STATE = Object.freeze({\n  INITIAL: 'soft-nav:initial',\n  START: 'soft-nav:start',\n  SUCCESS: 'soft-nav:success',\n  ERROR: 'soft-nav:error',\n  FRAME_UPDATE: 'soft-nav:frame-update',\n  END: 'soft-nav:end',\n  RENDER: 'soft-nav:render',\n  PROGRESS_BAR: {\n    START: 'soft-nav:progress-bar:start',\n    END: 'soft-nav:progress-bar:end',\n  },\n})\n","import {sendStats} from '@github-ui/stats'\nimport {getCurrentReactAppName, getSoftNavMechanism, getSoftNavReactAppName, getSoftNavReferrer} from './utils'\nimport type {SoftNavMechanism} from './events'\n\nexport const SOFT_NAV_DURATION_MARK = 'stats:soft-nav-duration'\nexport const MECHANISM_MAPPING: Record<SoftNavMechanism | 'ui' | 'hard', PlatformBrowserSoftNavigationMechanism> = {\n  turbo: 'TURBO',\n  react: 'REACT',\n  'turbo.frame': 'FRAME',\n  ui: 'UI',\n  hard: 'HARD',\n}\nexport function markStart() {\n  // browswers only record the first ~150 resources\n  // clearing it here provides room to track additional resources loaded during the soft-nav\n  performance.clearResourceTimings()\n  performance.mark(SOFT_NAV_DURATION_MARK)\n}\n\nfunction getDurationSinceLastSoftNav() {\n  if (performance.getEntriesByName(SOFT_NAV_DURATION_MARK).length === 0) {\n    return null\n  }\n\n  performance.measure(SOFT_NAV_DURATION_MARK, SOFT_NAV_DURATION_MARK)\n  const measures = performance.getEntriesByName(SOFT_NAV_DURATION_MARK)\n  const measure = measures.pop()\n  return measure ? measure.duration : null\n}\n\nexport function sendFailureStats(turboFailureReason: string) {\n  sendStats({\n    turboFailureReason,\n    turboStartUrl: getSoftNavReferrer(),\n    turboEndUrl: window.location.href,\n  })\n}\n\nexport function sendRenderStats() {\n  const duration = getDurationSinceLastSoftNav()\n\n  if (!duration) return\n\n  const mechanism = MECHANISM_MAPPING[getSoftNavMechanism()]\n  const roundedDuration = Math.round(duration)\n\n  if (mechanism === MECHANISM_MAPPING.react)\n    document.dispatchEvent(new CustomEvent('staffbar-update', {detail: {duration: roundedDuration}}))\n\n  sendStats({\n    requestUrl: window.location.href,\n    softNavigationTiming: {\n      mechanism,\n      destination: getCurrentReactAppName() || 'rails',\n      duration: roundedDuration,\n      initiator: getSoftNavReactAppName() || 'rails',\n    },\n  })\n}\n","import {getItem, removeItem, setItem} from '@github-ui/safe-storage/session-storage'\nimport type {SoftNavMechanism} from './events'\n\nexport const DEFAULT_SOFT_NAV_ERROR_REASON = 'reload'\n\nexport const SOFT_NAV_FAIL = 'soft-nav:fail'\nexport const SOFT_NAV_FAIL_REFERRER = 'soft-nav:fail-referrer'\nexport const SOFT_NAV_REFERRER = 'soft-nav:referrer'\nexport const SOFT_NAV_MARK = 'soft-nav:marker'\nexport const SOFT_NAV_REACT_APP_NAME = 'soft-nav:react-app-name'\nexport const SOFT_NAV_LATEST_MECHANISM = 'soft-nav:latest-mechanism'\n\nexport function clearSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n  removeItem(SOFT_NAV_REFERRER)\n  removeItem(SOFT_NAV_FAIL)\n  removeItem(SOFT_NAV_FAIL_REFERRER)\n  removeItem(SOFT_NAV_REACT_APP_NAME)\n  removeItem(SOFT_NAV_LATEST_MECHANISM)\n}\n\nexport function setSoftNavMechanism(mechanism: SoftNavMechanism) {\n  setItem(SOFT_NAV_MARK, mechanism)\n}\n\nexport function unsetSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n}\n\nexport function inSoftNav() {\n  const softNav = getItem(SOFT_NAV_MARK)\n  return softNav && softNav !== '0'\n}\n\nexport function getSoftNavMechanism(): SoftNavMechanism {\n  return getItem(SOFT_NAV_MARK) as SoftNavMechanism\n}\n\nexport function hasSoftNavFailure() {\n  return Boolean(getSoftNavFailReason())\n}\n\nexport function getSoftNavFailReason() {\n  return getItem(SOFT_NAV_FAIL)\n}\n\nexport function setSoftNavFailReason(reason: string) {\n  setItem(SOFT_NAV_FAIL, reason || DEFAULT_SOFT_NAV_ERROR_REASON)\n  setItem(SOFT_NAV_FAIL_REFERRER, window.location.href)\n}\n\nexport function setSoftNavReferrer() {\n  setItem(SOFT_NAV_REFERRER, window.location.href)\n}\n\nexport function getSoftNavReferrer() {\n  return getItem(SOFT_NAV_REFERRER) || document.referrer\n}\n\nexport function setSoftNavReactAppName() {\n  const appName = getCurrentReactAppName()\n\n  if (appName) {\n    setItem(SOFT_NAV_REACT_APP_NAME, appName)\n  } else {\n    removeItem(SOFT_NAV_REACT_APP_NAME)\n  }\n}\n\nexport function getSoftNavReactAppName() {\n  return getItem(SOFT_NAV_REACT_APP_NAME)\n}\n\nexport function getCurrentReactAppName() {\n  if (document.querySelector('meta[name=\"ui\"]')) return 'ui'\n\n  return document.querySelector('react-app')?.getAttribute('app-name')\n}\n\nexport function setLatestMechanism(mechanism: SoftNavMechanism) {\n  setItem(SOFT_NAV_LATEST_MECHANISM, mechanism)\n}\n\nexport function getLatestMechanism() {\n  return getItem(SOFT_NAV_LATEST_MECHANISM) as SoftNavMechanism\n}\n","export interface TestIdProps {\n  /** Test ID to be queried by automated testing suites */\n  'data-testid'?: string\n}\n\nexport const testIdProps = (value: string): TestIdProps => {\n  return {'data-testid': value}\n}\n","import {ssrSafeWindow} from '@github-ui/ssr-utils'\n// eslint-disable-next-line no-restricted-imports\nimport {useEffect, useLayoutEffect as unsafe_useLayoutEffect} from 'react'\n\n/**\n * Provides a safe version of `useLayoutEffect` that calls to `useEffect` on the server.\n * This is useful for components that use `useLayoutEffect` but are rendered on the server,\n * since useLayoutEffect cannot run on the server and warns in that environment\n */\nexport const useLayoutEffect =\n  typeof ssrSafeWindow?.document?.createElement !== 'undefined' ? unsafe_useLayoutEffect : useEffect\n","import React, {startTransition} from 'react'\nimport {\n  createSearchParams,\n  matchRoutes,\n  resolvePath,\n  useLocation,\n  useNavigate as useReactRouterNavigate,\n  useSearchParams as useReactRouterSearchParams,\n  type NavigateOptions,\n  type To,\n  type URLSearchParamsInit,\n} from 'react-router-dom'\n\nimport isHashNavigation from '@github-ui/is-hash-navigation'\nimport {AppContext} from '@github-ui/react-core/app-context'\nimport {startSoftNav} from '@github-ui/soft-nav/state'\nimport {PREVENT_AUTOFOCUS_KEY} from '@github-ui/react-core/prevent-autofocus'\n\nexport interface NavigateOptionsWithPreventAutofocus extends NavigateOptions {\n  preventAutofocus?: boolean\n}\n\nexport const useNavigate = (): ((to: To, options?: NavigateOptionsWithPreventAutofocus) => void) => {\n  const {routes, history} = React.useContext(AppContext)\n  const reactRouterNavigate = useReactRouterNavigate()\n  return React.useCallback(\n    (to, navigateOptions = {}) => {\n      const pathname = resolvePath(to).pathname\n      const isExternalToApp = !matchRoutes(routes, pathname)\n\n      if (isExternalToApp) {\n        const href = history.createHref(to)\n        ;(async () => {\n          const {softNavigate: turboSoftNavigate} = await import('@github-ui/soft-navigate')\n          turboSoftNavigate(href)\n        })()\n      } else {\n        if (!isHashNavigation(location.href, to.toString())) {\n          startSoftNav('react')\n        }\n        const {preventAutofocus, ...options} = navigateOptions\n        startTransition(() => {\n          reactRouterNavigate(\n            to,\n            preventAutofocus\n              ? {\n                  ...options,\n                  state: {\n                    [PREVENT_AUTOFOCUS_KEY]: true,\n                    ...options.state,\n                  },\n                }\n              : options,\n          )\n          const {turbo, ...state} = window.history.state\n          window.history.replaceState({...state, skipTurbo: true}, '', location.href)\n        })\n      }\n    },\n    [history, reactRouterNavigate, routes],\n  )\n}\n\n/**\n * An implementation of `useSearchParams` that mirrors `react-router-dom`'s `useSearchParams` hook\n * but utilizes `@github-ui/useNavigate` instead of `react-router` `useNavigate` to handle updates.\n */\nexport const useSearchParams = () => {\n  const [searchParams] = useReactRouterSearchParams()\n  const navigate = useNavigate()\n  const {pathname} = useLocation()\n\n  const setSearchParams = React.useCallback<\n    (\n      nextInit?: URLSearchParamsInit | ((prev: URLSearchParams) => URLSearchParamsInit),\n      navigateOpts?: NavigateOptionsWithPreventAutofocus,\n    ) => void\n  >(\n    (nextInit, navigateOptions = {}) => {\n      const newSearchParams = createSearchParams(typeof nextInit === 'function' ? nextInit(searchParams) : nextInit)\n      navigate(\n        {\n          pathname,\n          search: newSearchParams.toString(),\n        },\n        navigateOptions,\n      )\n    },\n    [searchParams, navigate, pathname],\n  )\n\n  return [searchParams, setSearchParams] as const\n}\n","import type RelayModernEnvironment from 'relay-runtime/lib/store/RelayModernEnvironment'\nimport type {RelayMockEnvironment} from 'relay-test-utils/lib/RelayModernMockEnvironment'\nimport {RelayEnvironmentProvider} from 'react-relay'\nimport {relayEnvironmentWithMissingFieldHandlerForNode} from '@github-ui/relay-environment'\nimport {CreateIssueDialogEntry} from '@github-ui/issue-create/CreateIssueDialogEntry'\nimport {useNavigate} from '@github-ui/use-navigate'\nimport {useEffect} from 'react'\n\nexport type CreateIssueDialogProps = {\n  isVisible: boolean\n  setIsVisible: (value: boolean) => void\n  setIsLoaded: (value: boolean) => void\n  setIsParentMenuOpen: (value: boolean) => void\n  owner?: string\n  repo?: string\n  environment?: RelayModernEnvironment | RelayMockEnvironment\n}\n\nconst defaultEnvironment = relayEnvironmentWithMissingFieldHandlerForNode()\n\nexport default function CreateIssueDialog({\n  isVisible,\n  setIsVisible,\n  setIsLoaded,\n  setIsParentMenuOpen,\n  owner,\n  repo,\n  environment = defaultEnvironment,\n}: CreateIssueDialogProps) {\n  const navigate = useNavigate()\n  useEffect(() => {\n    setIsLoaded(true)\n    // we only want to run this effect on first mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  useEffect(() => {\n    if (isVisible) {\n      // ensure we close the GlobalCreateMenu when the dialog is opened\n      setIsParentMenuOpen(false)\n    }\n  }, [isVisible, setIsParentMenuOpen])\n\n  return (\n    <RelayEnvironmentProvider environment={environment}>\n      <CreateIssueDialogEntry\n        navigate={navigate}\n        isCreateDialogOpen={isVisible}\n        setIsCreateDialogOpen={setIsVisible}\n        optionConfig={\n          owner && repo\n            ? {\n                issueCreateArguments: {\n                  repository: {\n                    owner,\n                    name: repo,\n                  },\n                },\n              }\n            : undefined\n        }\n      />\n    </RelayEnvironmentProvider>\n  )\n}\n\ntry{ CreateIssueDialog.displayName ||= 'CreateIssueDialog' } catch {}","import {ErrorPage} from './ErrorPage'\nimport React from 'react'\n\n// NOTE(jon, 2022-02-28): I copied 99% of this from memex's error-boundary\n\nexport interface ErrorBoundaryProps {\n  children: React.ReactNode\n  fallback?: React.ReactNode\n  /**\n   * Provide a callback to be invoked when an error is thrown (can be used for logging errors)\n   */\n  onError?: (error: Error) => void\n}\n\ninterface ErrorBoundaryState {\n  error: Error | null\n}\n\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props)\n\n    this.state = {\n      error: null,\n    }\n  }\n\n  /**\n   * Invoked when an error is thrown in the child component,\n   * and used to update state in a concurrent friendly manner\n   */\n  static getDerivedStateFromError(error: Error) {\n    return {error}\n  }\n\n  /**\n   * Called _after_ the re-render, used for performing side-effects such as logging\n   */\n  override componentDidCatch(error: Error) {\n    if (typeof this.props.onError === 'function') {\n      this.props.onError(error)\n    } else {\n      defaultOnError(error)\n    }\n  }\n\n  override render() {\n    if (!this.state.error) return this.props.children\n\n    return this.props.fallback === undefined ? <ErrorPage type=\"httpError\" /> : this.props.fallback\n  }\n}\n\n/**\n * Re-throws the error out of the rendering context to ensure that it propagates to failbot.\n * Also avoids react unmounting the entire tree from an uncaught error.\n */\nfunction defaultOnError(error: Error) {\n  setTimeout(() => {\n    throw error\n  })\n}\n","import {Box, Heading} from '@primer/react'\nimport type {PageError} from './app-routing-types'\n\nconst errorMessages: {[httpStatus: number]: string} = {\n  404: 'Didn’t find anything here!',\n  500: 'Looks like something went wrong!',\n}\n\nexport function ErrorPage({httpStatus, type}: PageError) {\n  const message = type === 'fetchError' ? 'Looks like network is down!' : errorMessages[httpStatus || 500]\n  return (\n    <Heading\n      as=\"h1\"\n      tabIndex={-1}\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: '100%',\n        minHeight: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      Error\n      {httpStatus ? <Box sx={{fontSize: '144px', fontWeight: 'bold', lineHeight: 1}}>{httpStatus}</Box> : null}\n      <Box sx={{fontSize: 4, pt: 2}}>{message}</Box>\n    </Heading>\n  )\n}\n\ntry{ ErrorPage.displayName ||= 'ErrorPage' } catch {}","import {Box, type BoxProps, Text, type TextProps} from '@primer/react'\nimport type {ForwardRefComponent as PolymorphicForwardRefComponent} from '@radix-ui/react-polymorphic'\nimport DOMPurify, {type Config as DOMPurifyConfig} from 'dompurify'\nimport type React from 'react'\nimport {forwardRef} from 'react'\n\ntype Brand<TBase, TBrand extends string> = TBase & {__brand: TBrand}\n\n/**\n * A string that has specifically been marked as verified.\n *\n * WARNING: A string should only be branded as a `SafeHTMLString` if one of the following applies:\n * - it comes from a trusted source on the server\n * - has known static content, or\n * - has been sanitized by DOMPurify.\n */\nexport type SafeHTMLString = Brand<string, 'SafeHTMLString'>\n\ninterface BaseHTMLProps {\n  /**\n   * Set the rendered HTML of the component. Use this prop if the source is untrusted. If you know the string can be\n   * trusted, or has already been sanitized, use the `html` prop instead to avoid re-sanitizing.\n   */\n  unverifiedHTML?: string\n  /**\n   * Optional config passed to DOMPurify when sanitizing `unverifiedHTML`.\n   */\n  unverifiedHTMLConfig?: DOMPurifyConfig\n  /**\n   * Set the rendered HTML of the component. To prevent XSS, ensure that the source of this\n   * HTML is trusted! If the source is untrusted, use `unverifiedHTML` instead.\n   */\n  html?: SafeHTMLString\n}\n\ninterface VerifiedHTMLProps extends BaseHTMLProps {\n  unverifiedHTML?: undefined\n  html: SafeHTMLString\n}\n\ninterface UnverifiedHTMLProps extends BaseHTMLProps {\n  unverifiedHTML: string\n  html?: undefined\n}\n\nexport type SafeHTMLProps = VerifiedHTMLProps | UnverifiedHTMLProps\n\ntype PropsWithHTML<T> = T & SafeHTMLProps\n\nfunction getSafeHTMLAndProps<T>(propsWithHtml: PropsWithHTML<T>) {\n  /**\n   * Note we have to explicitly cast props to T because TypeScript\n   * is not properly converting Omit<T & VerifiedHTMLProps, 'html'> to T.\n   *\n   * We include the `as unknown` intermediate step to avoid warnings\n   * about insufficient type overlap\n   */\n\n  if ('html' in propsWithHtml && propsWithHtml.html !== undefined) {\n    const {html, ...props} = propsWithHtml\n    return {\n      // This is verified html, so we can use it directly\n      safeHTML: html,\n      props: props as unknown as T,\n    }\n  }\n\n  const {unverifiedHTML, unverifiedHTMLConfig, ...props} = propsWithHtml\n  const config = {\n    ...unverifiedHTMLConfig,\n    // we want to ensure we are returning a string not a dom node\n    RETURN_DOM: false,\n    RETURN_DOM_FRAGMENT: false,\n  } satisfies DOMPurifyConfig\n\n  return {\n    // Run the unverified HTML through DOMPurify to sanitize it\n    safeHTML: DOMPurify.sanitize(unverifiedHTML, config),\n    props: props as unknown as T,\n  }\n}\n\n/**\n * `SafeHTMLBox` extends `Box` from `@primer/react` with props for safely\n * rendering HTML strings. Exactly one `html` or `unverifiedHTML` must be\n * supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLBox = withSafeHTML<BoxProps>(Box) as PolymorphicForwardRefComponent<\n  'div' | 'span' | 'pre' | 'table' | 'tbody' | 'tr' | 'td' | 'ul' | 'ol' | 'li',\n  PropsWithHTML<BoxProps>\n>\nSafeHTMLBox.displayName = 'SafeHTMLBox'\n\n/**\n * `SafeHTMLText` extends `Text` from `@primer/react` with props for safely\n * rendering HTML strings. Exactly one `html` or `unverifiedHTML` must be\n * supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLText = withSafeHTML<TextProps>(Text) as PolymorphicForwardRefComponent<\n  'div' | 'span' | 'p' | 'strong' | 'em' | 'pre' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'a',\n  PropsWithHTML<TextProps>\n>\nSafeHTMLText.displayName = 'SafeHTMLText'\n\n/**\n * A higher-order component that extends a basic component by offering\n * `html` and `unverifiedHTML` props that are safe alternatives to `dangerouslySetInnerHTML`.\n */\nfunction withSafeHTML<T>(Component: React.ComponentType<T>) {\n  // We give these display names above\n  // eslint-disable-next-line react/display-name\n  const SafeHTMLComponent = forwardRef<HTMLSpanElement, PropsWithHTML<T>>((propsWithHtml, ref) => {\n    const {safeHTML, props} = getSafeHTMLAndProps(propsWithHtml)\n    // This is the only place in the codebase where `dangerouslySetInnerHTML` should be allowed\n    // eslint-disable-next-line react/forbid-component-props\n    return <Component ref={ref} {...props} dangerouslySetInnerHTML={safeHTML ? {__html: safeHTML} : undefined} />\n  })\n\n  return SafeHTMLComponent\n}\n\n/**\n * `SafeHTMLDiv` extends `div`with props for safely rendering HTML strings.\n * Exactly one `html` or `unverifiedHTML` must be supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLDiv = forwardRef<\n  HTMLDivElement,\n  PropsWithHTML<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>>\n>((propsWithHtml, ref) => {\n  const {safeHTML, props} = getSafeHTMLAndProps(propsWithHtml)\n  // eslint-disable-next-line react/no-danger\n  return <div ref={ref} {...props} dangerouslySetInnerHTML={safeHTML ? {__html: safeHTML} : undefined} />\n})\nSafeHTMLDiv.displayName = 'SafeHTMLDiv'\n\ntry{ SafeHTMLComponent.displayName ||= 'SafeHTMLComponent' } catch {}"],"names":["useMedia","mediaQueryString","defaultState","features","useContext","MatchMediaContext","matches","setMatches","undefined","window","matchMedia","useEffect","listener","event","mediaQueryList","addEventListener","addListener","removeEventListener","removeListener","createContext","viewportRanges","narrow","regular","wide","isResponsiveValue","value","Object","keys","some","key","includes","useResponsiveValue","fallback","isNarrowViewport","isRegularViewport","isWideViewport","responsiveValue","canUseDOM","document","createElement","announceFromElement","el","options","isFeatureEnabled","announce","getTextContent","element","liveRegionAnnounceFromElement","politeness","assertive","message","Element","prototype","body","ariaNotify","interrupt","liveRegionAnnounce","setContainerContent","container","ssrSafeDocument","querySelector","textContent","getAttribute","innerText","trim","currentUrl","targetUrl","current","URL","location","origin","target","hasHash","href","host","pathname","search","PREVENT_AUTOFOCUS_KEY","AppPayloadContext","useAppPayload","getItem","setItem","removeItem","safeStorage","SoftNavEvent","Event","constructor","mechanism","type","SoftNavStartEvent","SOFT_NAV_STATE","START","SoftNavSuccessEvent","visitCount","SUCCESS","SoftNavErrorEvent","error","ERROR","SoftNavEndEvent","END","initSoftNav","dispatchEvent","INITIAL","clearSoftNav","startSoftNav","inSoftNav","PROGRESS_BAR","setSoftNavMechanism","setSoftNavReactAppName","setSoftNavReferrer","markStart","succeedSoftNav","canTriggerEvent","getSoftNavMechanism","endSoftNav","failSoftNav","reason","getSoftNavFailReason","DEFAULT_SOFT_NAV_ERROR_REASON","endProgressBar","sendFailureStats","unsetSoftNav","setLatestMechanism","renderedSoftNav","sendRenderStats","RENDER","updateFrame","FRAME_UPDATE","skipIfGoingToReactApp","allowedMechanisms","length","getCurrentReactAppName","freeze","SOFT_NAV_DURATION_MARK","MECHANISM_MAPPING","turbo","react","ui","hard","performance","clearResourceTimings","mark","turboFailureReason","sendStats","turboStartUrl","getSoftNavReferrer","turboEndUrl","duration","getDurationSinceLastSoftNav","getEntriesByName","measure","measures","pop","roundedDuration","Math","round","CustomEvent","detail","requestUrl","softNavigationTiming","destination","initiator","getSoftNavReactAppName","SOFT_NAV_FAIL","SOFT_NAV_FAIL_REFERRER","SOFT_NAV_REFERRER","SOFT_NAV_MARK","SOFT_NAV_REACT_APP_NAME","SOFT_NAV_LATEST_MECHANISM","softNav","hasSoftNavFailure","Boolean","setSoftNavFailReason","referrer","appName","getLatestMechanism","testIdProps","useLayoutEffect","ssrSafeWindow","unsafe_useLayoutEffect","useNavigate","routes","history","React","AppContext","reactRouterNavigate","useReactRouterNavigate","to","navigateOptions","resolvePath","matchRoutes","isHashNavigation","toString","preventAutofocus","startTransition","state","replaceState","skipTurbo","createHref","softNavigate","turboSoftNavigate","useSearchParams","searchParams","useReactRouterSearchParams","navigate","useLocation","setSearchParams","nextInit","newSearchParams","createSearchParams","defaultEnvironment","relayEnvironmentWithMissingFieldHandlerForNode","CreateIssueDialog","isVisible","setIsVisible","setIsLoaded","setIsParentMenuOpen","owner","repo","environment","RelayEnvironmentProvider","CreateIssueDialogEntry","isCreateDialogOpen","setIsCreateDialogOpen","optionConfig","issueCreateArguments","repository","name","displayName","ErrorBoundary","getDerivedStateFromError","props","onError","setTimeout","render","ErrorPage","children","errorMessages","httpStatus","Heading","as","tabIndex","sx","display","flexDirection","minWidth","minHeight","alignItems","justifyContent","Box","fontSize","fontWeight","lineHeight","pt","SafeHTMLComponent","getSafeHTMLAndProps","propsWithHtml","html","safeHTML","unverifiedHTML","unverifiedHTMLConfig","config","RETURN_DOM","RETURN_DOM_FRAGMENT","DOMPurify","SafeHTMLBox","withSafeHTML","SafeHTMLText","Text","Component","forwardRef","ref","dangerouslySetInnerHTML","__html","SafeHTMLDiv","div"],"sourceRoot":""}