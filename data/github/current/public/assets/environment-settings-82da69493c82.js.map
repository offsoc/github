{"version":3,"file":"environment-settings-xxxxxxxxxxxx.js","mappings":"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","sources":["app/assets/modules/github/settings/environments.ts","app/assets/modules/github/behaviors/html-validation.ts","ui/packages/aria-live/aria-live.ts","ui/packages/client-env/client-env.ts","ui/packages/feature-flags/feature-flags.ts","ui/packages/onfocus/onfocus.ts","ui/packages/ssr-utils/ssr-globals.ts","ui/packages/ssr-utils/ssr.ts"],"sourcesContent":["import type AutocompleteElement from '@github/auto-complete-element'\nimport {controller, target, targets} from '@github/catalyst'\nimport {TemplateInstance} from '@github/template-parts'\nimport {announceFromElement} from '@github-ui/aria-live'\n// eslint-disable-next-line no-restricted-imports\nimport {on} from 'delegated-events'\nimport {validate} from '../behaviors/html-validation'\n\nconst NODE_ID_ATTRIBUTE = 'data-node-id'\n\ntype Reviewer = {\n  displayName: string\n  nodeId: string\n  avatarUrl: string\n}\n\n@controller\nclass ProtectionRulesElement extends HTMLElement {\n  @target form: HTMLFormElement\n  @target autoComplete: AutocompleteElement\n  @target autoCompleteInput: HTMLInputElement\n  @target toggle: HTMLInputElement\n  @target reviewerTemplate: HTMLTemplateElement\n  @target reviewerList: HTMLUListElement\n  @targets reviewers: HTMLLIElement[]\n  @target count: HTMLElement\n  @target reviewerVerbiage: HTMLElement\n\n  @target waitGroup: HTMLElement\n  @target waitTime: HTMLInputElement\n  @target waitNote: HTMLElement\n\n  private enabled = false\n\n  connectedCallback() {\n    this.update()\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  selectSuggestion({target}: {target: HTMLElement}) {\n    const value = target.getAttribute('data-node-id')!\n    const name = target.getAttribute('data-name')!\n    const avatarUrl = target.getAttribute('data-avatar-url')!\n\n    this.addReviewer({\n      displayName: name,\n      nodeId: value,\n      avatarUrl,\n    })\n  }\n\n  approverToggled() {\n    // Whenever the gate is toggled, ensure we update the forms validation status\n    this.update()\n  }\n\n  addReviewer(reviewer: Reviewer) {\n    // Clear the auto-complete input\n    this.autoComplete.value = ''\n\n    // Check if it already exists\n    if (this.reviewers.some(r => r.getAttribute(NODE_ID_ATTRIBUTE) === reviewer.nodeId)) {\n      // Reviewer is already in list\n      return\n    }\n\n    // Add new reviewer\n    const rt = new TemplateInstance(this.reviewerTemplate, {\n      name: reviewer.displayName,\n      nodeId: reviewer.nodeId,\n      avatarUrl: reviewer.avatarUrl,\n    })\n\n    this.reviewerList.appendChild(rt)\n    this.update()\n  }\n\n  removeReviewer(e: Event) {\n    const reviewerNodeId = (e.target as HTMLElement).closest('.js-reviewer')?.getAttribute(NODE_ID_ATTRIBUTE)\n    if (reviewerNodeId) {\n      this.reviewerList.querySelector(`[${NODE_ID_ATTRIBUTE}='${reviewerNodeId}']`)?.remove()\n      this.update()\n    }\n  }\n\n  private get minValidationMessage() {\n    return this.getAttribute('min-reviewers-validation-message')\n  }\n\n  private get maxReviewers(): number {\n    return parseInt(this.getAttribute('max-reviewers') || '6', 10)\n  }\n\n  private get invisibleViewersCount(): number {\n    return parseInt(this.getAttribute('invisible-viewers-count') || '0', 10)\n  }\n\n  validateWaitTime() {\n    if (!this.waitTime.validity.valid) {\n      this.waitGroup.classList.add('errored')\n      announceFromElement(this.waitNote)\n    } else {\n      this.waitGroup.classList.remove('errored')\n    }\n  }\n\n  private update() {\n    // Update visible reviewer count and verbiage\n    const currentCount = this.maxReviewers - this.reviewers.length - this.invisibleViewersCount\n    this.count.textContent = `${currentCount}`\n    this.reviewerVerbiage.textContent = `${currentCount === 1 ? 'reviewer' : 'reviewers'}`\n\n    // Validate\n    if (this.toggle.checked) {\n      this.autoCompleteInput.disabled = this.reviewers.length + this.invisibleViewersCount >= this.maxReviewers\n      this.toggle.setCustomValidity(\n        (this.reviewers.length === 0 && this.invisibleViewersCount === 0 && this.minValidationMessage) || '',\n      )\n      validate(this.form)\n    } else {\n      // Do not prevent form submission\n      this.toggle.setCustomValidity('')\n    }\n  }\n}\n\non('click', '.js-show-more-branches', function (event) {\n  const button = event.target as HTMLElement\n  const container = button.closest<HTMLElement>('.js-hidden-branches-container')!\n  const hiddenEnvironments = container.querySelector<HTMLElement>('.js-hidden-branches')\n  const shownEnvironments = container.querySelector<HTMLElement>('.js-shown-branches')\n\n  if (shownEnvironments) {\n    shownEnvironments.hidden = true\n  }\n\n  if (hiddenEnvironments) {\n    hiddenEnvironments.hidden = false\n  }\n})\n","import {onFocus, onInput} from '@github-ui/onfocus'\n// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\n// eslint-disable-next-line no-restricted-imports\nimport {on} from 'delegated-events'\n\nconst supportedFields = [\n  'input[pattern]',\n  'input[required]',\n  'textarea[required]',\n  'input[data-required-change]',\n  'textarea[data-required-change]',\n  'input[data-required-value]',\n  'textarea[data-required-value]',\n].join(',')\n\ntype Field = HTMLInputElement | HTMLTextAreaElement\n\nfunction checkValidityForRequiredValueField(field: Field) {\n  const requiredValue = field.getAttribute('data-required-value')!\n  const prefix = field.getAttribute('data-required-value-prefix')\n\n  if (field.value === requiredValue) {\n    field.setCustomValidity('')\n  } else {\n    let message = requiredValue\n    if (prefix) {\n      message = prefix + message\n    }\n    field.setCustomValidity(message)\n  }\n}\n\nonInput('[data-required-value]', function (event) {\n  const field = event.currentTarget as Field\n  checkValidityForRequiredValueField(field)\n})\n\non('change', '[data-required-value]', function (event) {\n  const field = event.currentTarget as Field\n  checkValidityForRequiredValueField(field)\n\n  // We need to call validate since we don't fire a `change` event on the form\n  // when session-resume dumps the text back into the field.\n  validate(field.form!)\n})\n\nonInput('[data-required-trimmed]', function (event) {\n  const field = event.currentTarget as Field\n  if (field.value.trim() === '') {\n    field.setCustomValidity(field.getAttribute('data-required-trimmed')!)\n  } else {\n    field.setCustomValidity('')\n  }\n})\n\non('change', '[data-required-trimmed]', function (event) {\n  const field = event.currentTarget as Field\n  if (field.value.trim() === '') {\n    field.setCustomValidity(field.getAttribute('data-required-trimmed')!)\n  } else {\n    field.setCustomValidity('')\n  }\n\n  // We need to call validate since we don't fire a `change` event on the form\n  // when session-resume dumps the text back into the field.\n  validate(field.form!)\n})\n\n// Observe required fields and validate form when their validation state\n// changes.\nonFocus(supportedFields, field => {\n  let previousValid = (field as Field).checkValidity()\n  function inputHandler() {\n    const currentValid = (field as Field).checkValidity()\n    if (currentValid !== previousValid && (field as Field).form) {\n      validate((field as Field).form!)\n    }\n    previousValid = currentValid\n  }\n\n  field.addEventListener('input', inputHandler)\n  field.addEventListener('blur', function blurHandler() {\n    field.removeEventListener('input', inputHandler)\n    field.removeEventListener('blur', blurHandler)\n  })\n})\n\nconst installedForms = new WeakMap()\n\n// Install validation handlers on a form.\nfunction installHandlers(form: HTMLFormElement) {\n  if (installedForms.get(form)) return\n  form.addEventListener('change', () => validate(form))\n  installedForms.set(form, true)\n}\n\n// Validate a form or input.\nexport function validate(form: HTMLInputElement | HTMLFormElement) {\n  const validity = form.checkValidity()\n  for (const button of form.querySelectorAll<HTMLButtonElement>('button[data-disable-invalid]')) {\n    button.disabled = !validity\n  }\n}\n\nobserve('button[data-disable-invalid]', {\n  constructor: HTMLButtonElement,\n  initialize(button) {\n    const form = button.form\n    if (form) {\n      installHandlers(form)\n      button.disabled = !form.checkValidity()\n    }\n  },\n})\n\n// A custom attribute similar to `required`, but only passes validation once\n// the value of the field has changed from its initial value.\nobserve('input[data-required-change], textarea[data-required-change]', function (element) {\n  const field = element as Field\n  const radioInputDefault =\n    field.type === 'radio' && field.form ? (field.form.elements.namedItem(field.name) as RadioNodeList).value : null\n\n  // Custom Validity Event Handler.\n  function customValidity(event?: Event) {\n    const form = field.form!\n    if (event && field.type === 'radio' && form && radioInputDefault) {\n      for (const radio of form.elements.namedItem(field.name) as RadioNodeList) {\n        if (radio instanceof HTMLInputElement) {\n          radio.setCustomValidity(field.value === radioInputDefault ? 'unchanged' : '')\n        }\n      }\n    } else {\n      field.setCustomValidity(field.value === (radioInputDefault || field.defaultValue) ? 'unchanged' : '')\n    }\n  }\n\n  field.addEventListener('input', customValidity)\n  field.addEventListener('change', customValidity)\n  customValidity()\n\n  if (field.form) {\n    validate(field.form)\n  }\n})\n\ndocument.addEventListener('reset', function (event: Event) {\n  if (event.target instanceof HTMLFormElement) {\n    const form = event.target\n    setTimeout(() => validate(form))\n  }\n})\n","import {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {\n  announce as liveRegionAnnounce,\n  announceFromElement as liveRegionAnnounceFromElement,\n} from '@primer/live-region-element'\n\nexport interface ElementWithAriaNotify extends Element {\n  ariaNotify: (\n    message: string,\n    options?: {interrupt?: 'none' | 'pending' | 'all'; priority?: 'none' | 'important'},\n  ) => void\n}\n\n/**\n * Troubleshooting guide for aria-live regions available on the Hub\n * - https://thehub.github.com/epd/engineering/dev-practicals/frontend/accessibility/readiness-routine/screenreaders/live-regions-and-focus-management-techniques/#why-isnt-my-live-region-working-as-i-expect\n */\n\n// Announce an element's text to the screen reader.\nexport function announceFromElement(el: HTMLElement, options?: {assertive?: boolean; element?: HTMLElement}) {\n  if (isFeatureEnabled('arianotify_comprehensive_migration')) {\n    announce(getTextContent(el), {...options, element: options?.element ?? el})\n  } else if (isFeatureEnabled('primer_live_region_element') && options?.element === undefined) {\n    liveRegionAnnounceFromElement(el, {\n      politeness: options?.assertive ? 'assertive' : 'polite',\n    })\n  } else {\n    announce(getTextContent(el), options)\n  }\n}\n\n// Announce message update to screen reader.\n// Note: Use caution when using this function while a dialog is active.\n// If the message is updated while the dialog is open, the screen reader may not announce the live region.\n// For more information, view the document on dialog and live region support: https://github.com/github/accessibility/blob/main/docs/dialog-live-region-support.md\nexport function announce(message: string, options?: {assertive?: boolean; element?: HTMLElement}) {\n  const {assertive, element} = options ?? {}\n\n  if (isFeatureEnabled('arianotify_comprehensive_migration') && 'ariaNotify' in Element.prototype) {\n    ;((element || document.body) as Element as ElementWithAriaNotify).ariaNotify(message, {\n      interrupt: options?.assertive ? 'all' : 'none',\n    })\n  } else if (isFeatureEnabled('primer_live_region_element') && element === undefined) {\n    liveRegionAnnounce(message, {\n      politeness: assertive ? 'assertive' : 'polite',\n    })\n  } else {\n    setContainerContent(message, assertive, element)\n  }\n}\n\n// Set aria-live container to message.\nfunction setContainerContent(message: string, assertive?: boolean, element?: HTMLElement) {\n  const getQuerySelector = () => {\n    return assertive ? '#js-global-screen-reader-notice-assertive' : '#js-global-screen-reader-notice'\n  }\n  const container = element ?? ssrSafeDocument?.querySelector(getQuerySelector())\n  if (!container) return\n  if (container.textContent === message) {\n    /* This is a hack due to the way the aria live API works.\n    A screen reader will not read a live region again\n    if the text is the same. Adding a space character tells\n    the browser that the live region has updated,\n    which will cause it to read again, but with no audible difference. */\n    container.textContent = `${message}\\u00A0`\n  } else {\n    container.textContent = message\n  }\n}\n\n// Gets the trimmed text content of an element.\nfunction getTextContent(el: HTMLElement): string {\n  // innerText does not contain hidden text\n  /* eslint-disable-next-line github/no-innerText */\n  return (el.getAttribute('aria-label') || el.innerText || '').trim()\n}\n","export interface ClientEnvironment {\n  readonly locale: string\n  readonly featureFlags: string[]\n}\n\nlet env: ClientEnvironment | undefined\n\nexport function getEnv() {\n  if (!env) {\n    throw new Error(\n      'Client env was requested before it was loaded. This likely means you are attempting to use client env at the module level in SSR, which is not supported. Please move your client env usage into a function.',\n    )\n  }\n\n  return env\n}\n\nexport function getLocale() {\n  return env?.locale ?? 'en-US'\n}\n\nfunction loadEnv() {\n  if (typeof document !== 'undefined') {\n    const envTag = document.getElementById('client-env')\n    if (envTag) {\n      try {\n        env = JSON.parse(envTag.textContent || '')\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error('Error parsing client-env', error)\n      }\n    }\n  }\n}\n\n// Automatically load the env on initial page load\nloadEnv()\n\n// This is a special helper method for setting the env in the SSR environment only\nexport function setClientEnvForSsr(clientEnv: ClientEnvironment | undefined) {\n  env = clientEnv\n}\n\n// This env object is used as a default for tests only and is not included in production builds\nexport const clientEnvForTests: ClientEnvironment = {\n  locale: 'en',\n  featureFlags: ['test_flag'],\n}\n\nexport function _resetForTests({loadNewEnv, forceUndefined}: {loadNewEnv: boolean; forceUndefined?: boolean}) {\n  // forget the current env\n  env = forceUndefined ? undefined : clientEnvForTests\n\n  if (loadNewEnv) {\n    // load the latest env\n    loadEnv()\n  }\n}\n","import memoize from '@github/memoize'\nimport {getEnv} from '@github-ui/client-env'\nimport {IS_SERVER} from '@github-ui/ssr-utils'\n\nfunction getEnabledFeaturesSet(): Set<string> {\n  const features = getEnv().featureFlags\n  const featuresUpperCase = features.map(feature => feature.toLowerCase())\n  return new Set<string>(featuresUpperCase)\n}\n\nconst featuresSet =\n  IS_SERVER || process.env.NODE_ENV === 'test' ? getEnabledFeaturesSet : memoize(getEnabledFeaturesSet)\n\nexport function getEnabledFeatures(): string[] {\n  return Array.from(featuresSet())\n}\n\nexport function isFeatureEnabled(name: string): boolean {\n  return featuresSet().has(name.toLowerCase())\n}\n\n//exported to allow mocking in tests\nconst featureFlag = {isFeatureEnabled}\n\nexport {featureFlag}\n","// React to elements receiving focus\n//\n// Often we need to apply some behavior to form elements when they start getting\n// interacted with. We could use `observe`, but that can be expensive if there\n// are many such elements on the page, and when we aren't actually interested in\n// those elements until they receive focus.\n//\n// This is a lightweight and preferred alternative to the family of methods\n// from `github/focused` module.\n//\n// Examples\n//\n//   onFocus('.js-widget', element => {\n//     // ...\n//   })\n\nimport SelectorSet from 'selector-set'\n\nlet initialized = false\nconst selectorSet: SelectorSet<(el: HTMLElement) => void> = new SelectorSet()\n\nfunction handleFocus(event: FocusEvent) {\n  const focused = event.target\n  if (focused instanceof HTMLElement && focused.nodeType !== Node.DOCUMENT_NODE) {\n    for (const match of selectorSet.matches(focused)) {\n      match.data.call(null, focused)\n    }\n  }\n}\n\nexport function onFocus(selector: string, fn: (el: HTMLElement) => unknown) {\n  if (!initialized) {\n    initialized = true\n    // We use the \"focus\" event in the capture phase because Firefox\n    // historically had a limitation with \"focusin\" not bubbling.\n    document.addEventListener('focus', handleFocus, true)\n  }\n  selectorSet.add(selector, fn)\n\n  if (document.activeElement instanceof HTMLElement && document.activeElement.matches(selector)) {\n    fn(document.activeElement)\n  }\n}\n\nexport function onKey(\n  eventType: 'keydown' | 'keypress' | 'keyup',\n  selector: string,\n  inputHandler: (event: KeyboardEvent) => unknown,\n) {\n  function blurHandler(event: Event) {\n    const currentTarget = event.currentTarget as HTMLElement\n    if (!currentTarget) return\n    currentTarget.removeEventListener(eventType, inputHandler)\n    currentTarget.removeEventListener('blur', blurHandler)\n  }\n\n  onFocus(selector, function (field) {\n    field.addEventListener(eventType, inputHandler)\n    field.addEventListener('blur', blurHandler)\n  })\n}\n\nexport function onInput(selector: string, inputHandler: EventListener) {\n  function blurHandler(event: Event) {\n    const {currentTarget} = event\n    if (!currentTarget) return\n\n    currentTarget.removeEventListener('input', inputHandler)\n    currentTarget.removeEventListener('blur', blurHandler)\n  }\n\n  onFocus(selector, function (field) {\n    field.addEventListener('input', inputHandler)\n    field.addEventListener('blur', blurHandler)\n  })\n}\n","// When using SSR, browser globals are not available. If you try to use them, Node.js will throw an error\ntype SSRSafeLocation = Pick<Location, 'pathname' | 'origin' | 'search' | 'hash' | 'href'>\n\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeDocument = typeof document === 'undefined' ? undefined : document\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeWindow = typeof window === 'undefined' ? undefined : window\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeHistory = typeof history === 'undefined' ? undefined : history\n\nexport const ssrSafeLocation: SSRSafeLocation =\n  // eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\n  typeof location === 'undefined' ? {pathname: '', origin: '', search: '', hash: '', href: ''} : location\n\nexport function setLocation(url: string) {\n  // eslint-disable-next-line no-restricted-syntax\n  const parsedURL: SSRSafeLocation = new URL(url)\n  const {pathname, origin, search, hash} = parsedURL\n\n  Object.assign(ssrSafeLocation, {pathname, origin, search, hash})\n}\n","import {ssrSafeDocument} from './ssr-globals'\n\n/***\n * Are we rendering on the server?\n */\nexport const IS_SERVER = typeof ssrSafeDocument === 'undefined'\n\n/***\n * Are we rendering on the client?\n */\nexport const IS_BROWSER = !IS_SERVER\n\n/***\n * This helper returns `true` if:\n * - we are rendering on the server\n * - we are on the client, and the app has been hydrated from a server-render\n */\nexport function wasServerRendered() {\n  if (IS_SERVER) {\n    return true\n  }\n\n  return Boolean(ssrSafeDocument!.querySelector('react-app[data-ssr=\"true\"]'))\n}\n"],"names":["NODE_ID_ATTRIBUTE","ProtectionRulesElement","HTMLElement","connectedCallback","update","selectSuggestion","target","value","getAttribute","name","avatarUrl","addReviewer","displayName","nodeId","approverToggled","reviewer","autoComplete","reviewers","some","r","rt","TemplateInstance","reviewerTemplate","reviewerList","appendChild","removeReviewer","e","reviewerNodeId","closest","querySelector","remove","minValidationMessage","maxReviewers","parseInt","invisibleViewersCount","validateWaitTime","waitTime","validity","valid","waitGroup","classList","add","announceFromElement","waitNote","currentCount","length","count","textContent","reviewerVerbiage","toggle","checked","autoCompleteInput","disabled","setCustomValidity","validate","form","enabled","targets","controller","on","event","container","button","hiddenEnvironments","shownEnvironments","hidden","checkValidityForRequiredValueField","field","requiredValue","prefix","message","onInput","currentTarget","trim","onFocus","previousValid","checkValidity","inputHandler","currentValid","addEventListener","blurHandler","removeEventListener","installedForms","WeakMap","querySelectorAll","observe","constructor","HTMLButtonElement","initialize","get","set","element","radioInputDefault","type","elements","namedItem","customValidity","radio","HTMLInputElement","defaultValue","document","HTMLFormElement","setTimeout","el","options","isFeatureEnabled","announce","getTextContent","undefined","liveRegionAnnounceFromElement","politeness","assertive","Element","prototype","body","ariaNotify","interrupt","liveRegionAnnounce","setContainerContent","ssrSafeDocument","innerText","env","getEnv","getLocale","locale","loadEnv","envTag","getElementById","JSON","parse","error","console","getEnabledFeaturesSet","Set","features","featureFlags","map","feature","toLowerCase","featuresSet","IS_SERVER","memoize","getEnabledFeatures","Array","from","has","featureFlag","initialized","selectorSet","SelectorSet","handleFocus","focused","nodeType","Node","DOCUMENT_NODE","match","matches","data","call","selector","fn","activeElement","onKey","eventType","ssrSafeWindow","window","ssrSafeHistory","history","ssrSafeLocation","location","pathname","origin","search","hash","href","IS_BROWSER","wasServerRendered","Boolean"],"sourceRoot":""}