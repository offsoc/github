{"version":3,"file":"copilot-pr-review-banner-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/copilot-pr-review-banner/copilot-pr-review-banner.ts","ui/packages/hydro-analytics/hydro-analytics.ts","ui/packages/react-core/deferred-registry.ts","ui/packages/react-core/react-partial-anchor.ts","ui/packages/react-core/react-partial-registry.ts","ui/packages/react-core/ReactPartialElement.tsx","ui/packages/react-core/register-partial.ts","ui/packages/react-profiling-mode/src/index.ts","ui/packages/safe-storage/session-storage.ts","ui/packages/soft-nav/utils.ts","ui/packages/test-id-props/test-id-props.ts","ui/packages/use-alive/TestAliveSubscription.tsx","ui/packages/use-alive/use-alive.ts","ui/packages/react-core/PartialRouter.tsx","ui/packages/react-core/PartialEntry.tsx","ui/packages/react-core/ReactBaseElement.tsx"],"sourcesContent":["import {registerReactPartial} from '@github-ui/react-core/register-partial'\nimport {CopilotPrReviewBanner} from './CopilotPrReviewBanner'\n\nregisterReactPartial('copilot-pr-review-banner', {\n  Component: CopilotPrReviewBanner,\n})\n","import {AnalyticsClient, getOptionsFromMeta} from '@github/hydro-analytics-client'\nimport type {Context} from '@github/hydro-analytics-client'\nimport safeStorage from '@github-ui/safe-storage'\nimport {isStaff} from '@github-ui/stats'\nconst {getItem} = safeStorage('localStorage')\n\ndeclare const process: {\n  env: {\n    NODE_ENV: string\n  }\n}\n\nconst dimensionPrefix = 'dimension_'\nlet hydroAnalyticsClient: AnalyticsClient | undefined\n\nconst MARKETING_PARAMS = ['utm_source', 'utm_medium', 'utm_campaign', 'utm_term', 'utm_content', 'scid']\n\ntry {\n  const options = getOptionsFromMeta('octolytics')\n\n  // Remove the base context because meta tags can change as the user navigates with Turbo\n  // These will be folded in for each event & page view\n  delete options.baseContext\n\n  hydroAnalyticsClient = new AnalyticsClient(options)\n} catch (_) {\n  // Failed to get options from meta tags.  This most likely means analytics are disabled.\n}\n\nfunction extendBaseContext(context?: Context) {\n  const baseContext = getOptionsFromMeta('octolytics').baseContext || {}\n\n  if (baseContext) {\n    delete baseContext.app_id\n    delete baseContext.event_url\n    delete baseContext.host\n\n    for (const [key, value] of Object.entries(baseContext)) {\n      // some octolytics meta tags are prefixed with dimension-, which we don't need with the new hydro-analytics-client\n      if (key.startsWith(dimensionPrefix)) {\n        baseContext[key.replace(dimensionPrefix, '')] = value\n        delete baseContext[key]\n      }\n    }\n  }\n\n  const visitorMeta = document.querySelector<HTMLMetaElement>('meta[name=visitor-payload]')\n  if (visitorMeta) {\n    const visitorHash = JSON.parse(atob(visitorMeta.content))\n    Object.assign(baseContext, visitorHash)\n  }\n\n  const urlParams = new URLSearchParams(window.location.search)\n  for (const [key, value] of urlParams) {\n    if (MARKETING_PARAMS.includes(key.toLowerCase())) {\n      baseContext[key] = value\n    }\n  }\n\n  // Include additional context from the page\n  baseContext.staff = isStaff().toString()\n\n  return Object.assign(baseContext, context)\n}\n\nexport function sendPageView(context?: Context) {\n  hydroAnalyticsClient?.sendPageView(extendBaseContext(context))\n}\n\nexport function sendEvent(type: string, context: Record<string, string | number | boolean | undefined | null> = {}) {\n  const service = document.head?.querySelector<HTMLMetaElement>('meta[name=\"current-catalog-service\"]')?.content\n\n  const cleanContext: Context = service ? {service} : {}\n\n  for (const [key, value] of Object.entries(context)) {\n    if (value !== undefined && value !== null) {\n      cleanContext[key] = `${value}`\n    }\n  }\n\n  if (hydroAnalyticsClient) {\n    const typeWithFallback = type || 'unknown'\n    const fullContext = extendBaseContext(cleanContext)\n    hydroAnalyticsClient.sendEvent(typeWithFallback, extendBaseContext(cleanContext))\n\n    if (process.env.NODE_ENV === 'development') {\n      debugSendEvent(typeWithFallback, fullContext)\n    }\n  }\n}\n\nexport function stringifyObjectValues(obj: object) {\n  return Object.fromEntries(Object.entries(obj).map(([k, v]) => [k, JSON.stringify(v)]))\n}\n\nfunction debugSendEvent(type: string, context: Context) {\n  if (getItem('hydro-debug.send-event') === 'true') {\n    // eslint-disable-next-line no-console\n    console.group('[hydro-debug.send-event]')\n    // eslint-disable-next-line no-console\n    console.log({type, context})\n    // eslint-disable-next-line no-console\n    console.groupEnd()\n  }\n}\n","export class DeferredRegistry<T> {\n  private registrationEntries: Record<\n    string,\n    {\n      promise: Promise<T>\n      resolve?: (r: T) => void\n    }\n  > = {}\n\n  public register(name: string, registration: T) {\n    const entry = this.registrationEntries[name]\n    if (entry) {\n      entry.resolve?.(registration)\n    } else {\n      this.registrationEntries[name] = {\n        promise: Promise.resolve(registration),\n      }\n    }\n  }\n\n  public getRegistration(name: string): Promise<T> {\n    this.registrationEntries[name] ||= new Deferred()\n    return this.registrationEntries[name].promise\n  }\n}\n\nclass Deferred<T> {\n  declare promise\n  declare resolve: (r: T) => void\n\n  constructor() {\n    this.promise = new Promise<T>(resolve => {\n      this.resolve = resolve\n    })\n  }\n}\n","import type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {useCallback, useEffect, useRef, useState} from 'react'\n\ninterface ReactPartialAnchor {\n  /**\n   * DO NOT USE THIS PROPERTY DIRECTLY. It is meant to be used with useExternalAnchor and useOnAnchorClick\n   */\n  __wrapperElement: ReactPartialAnchorElement\n}\n\nexport interface ReactPartialAnchorProps {\n  reactPartialAnchor?: ReactPartialAnchor\n}\n\nexport function usePartialAnchorProps(\n  anchorElement: ReactPartialAnchorElement | undefined | null,\n): ReactPartialAnchorProps {\n  useEffect(() => {\n    const anchor = anchorElement?.anchor\n\n    if (!anchor) {\n      return\n    }\n\n    if ('disabled' in anchor) {\n      anchor.disabled = false\n    }\n    anchor.classList.remove('cursor-wait')\n  }, [anchorElement])\n\n  if (!anchorElement) {\n    return {}\n  }\n\n  return {\n    reactPartialAnchor: {\n      __wrapperElement: anchorElement,\n    },\n  }\n}\n\nexport function useExternalAnchor(reactPartialAnchor: ReactPartialAnchor) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor || null)\n  const [open, setOpen] = useState(false)\n\n  const onClick = useCallback(() => {\n    // toggle the open state when clicked\n    setOpen(!open)\n  }, [open, setOpen])\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    ref.current.setAttribute('aria-expanded', open.toString())\n    ref.current.setAttribute('aria-haspopup', 'true')\n  }, [ref, open])\n\n  useOnAnchorClick(reactPartialAnchor, onClick)\n\n  return {\n    ref,\n    open,\n    setOpen,\n  }\n}\n\nexport function useOnAnchorClick(reactPartialAnchor: ReactPartialAnchor, onClick: (event: MouseEvent) => void) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor)\n\n  useEffect(() => {\n    const element = ref.current\n    if (!element) {\n      return\n    }\n\n    element.addEventListener('click', onClick)\n    return () => element.removeEventListener('click', onClick)\n  }, [ref, onClick])\n}\n\nexport type PropsWithPartialAnchor<T> = T & Required<ReactPartialAnchorProps>\n","import {DeferredRegistry} from './deferred-registry'\n\nexport interface PartialRegistration {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Component: React.ComponentType<any>\n}\n\nexport const partialRegistry = new DeferredRegistry<PartialRegistration>()\n\nexport function getReactPartial(appName: string) {\n  return partialRegistry.getRegistration(appName)\n}\n","import {controller} from '@github/catalyst'\nimport {getReactPartial} from './react-partial-registry'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {ReactBaseElement} from './ReactBaseElement'\nimport {PartialEntry} from './PartialEntry'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\n\n// What is this silliness? Is it react or a web component?!\n// It's a web component we use to bootstrap react partials within the monolith.\n@controller\nclass ReactPartialElement extends ReactBaseElement<EmbeddedPartialData> {\n  nameAttribute = 'partial-name'\n\n  async getReactNode(embeddedData: EmbeddedPartialData) {\n    const {Component} = await getReactPartial(this.name)\n\n    // Some React Partials will be wrapped in a react-partial-anchor, which is used to conditionally render the Partial\n    const anchorElement = this.closest<ReactPartialAnchorElement>('react-partial-anchor')\n\n    return (\n      <PartialEntry\n        partialName={this.name}\n        embeddedData={embeddedData}\n        Component={Component}\n        wasServerRendered={this.hasSSRContent}\n        ssrError={this.ssrError}\n        anchorElement={anchorElement}\n      />\n    )\n  }\n}\n","import {partialRegistry, type PartialRegistration} from './react-partial-registry'\n// Import the web component to get it registered on the window\nimport './ReactPartialElement'\n\n// NOTE: if the signature of this method changes, also update the react-partial-name ESLint rule\n// /workspaces/github/ui/packages/eslint-plugin-github-monorepo/rules/react-partial-name.js\nexport function registerReactPartial(name: string, registration: PartialRegistration) {\n  partialRegistry.register(name, registration)\n}\n","import safeStorage from '@github-ui/safe-storage'\n\nconst {getItem, setItem, removeItem} = safeStorage('localStorage')\nconst REACT_PROFILING_ENABLED = 'REACT_PROFILING_ENABLED'\n\ninterface ReactProfilingModeMethods {\n  enable: () => void\n  disable: () => void\n  isEnabled: () => boolean\n}\n\nconst ReactProfilingMode: ReactProfilingModeMethods = {\n  enable: () => setItem(REACT_PROFILING_ENABLED, 'true'),\n  disable: () => removeItem(REACT_PROFILING_ENABLED),\n  isEnabled: () => !!getItem(REACT_PROFILING_ENABLED),\n}\n\nexport default ReactProfilingMode\n","import safeStorage from './safe-storage'\n\nexport const {getItem, setItem, removeItem} = safeStorage('sessionStorage')\n","import {getItem, removeItem, setItem} from '@github-ui/safe-storage/session-storage'\nimport type {SoftNavMechanism} from './events'\n\nexport const DEFAULT_SOFT_NAV_ERROR_REASON = 'reload'\n\nexport const SOFT_NAV_FAIL = 'soft-nav:fail'\nexport const SOFT_NAV_FAIL_REFERRER = 'soft-nav:fail-referrer'\nexport const SOFT_NAV_REFERRER = 'soft-nav:referrer'\nexport const SOFT_NAV_MARK = 'soft-nav:marker'\nexport const SOFT_NAV_REACT_APP_NAME = 'soft-nav:react-app-name'\nexport const SOFT_NAV_LATEST_MECHANISM = 'soft-nav:latest-mechanism'\n\nexport function clearSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n  removeItem(SOFT_NAV_REFERRER)\n  removeItem(SOFT_NAV_FAIL)\n  removeItem(SOFT_NAV_FAIL_REFERRER)\n  removeItem(SOFT_NAV_REACT_APP_NAME)\n  removeItem(SOFT_NAV_LATEST_MECHANISM)\n}\n\nexport function setSoftNavMechanism(mechanism: SoftNavMechanism) {\n  setItem(SOFT_NAV_MARK, mechanism)\n}\n\nexport function unsetSoftNav() {\n  setItem(SOFT_NAV_MARK, '0')\n}\n\nexport function inSoftNav() {\n  const softNav = getItem(SOFT_NAV_MARK)\n  return softNav && softNav !== '0'\n}\n\nexport function getSoftNavMechanism(): SoftNavMechanism {\n  return getItem(SOFT_NAV_MARK) as SoftNavMechanism\n}\n\nexport function hasSoftNavFailure() {\n  return Boolean(getSoftNavFailReason())\n}\n\nexport function getSoftNavFailReason() {\n  return getItem(SOFT_NAV_FAIL)\n}\n\nexport function setSoftNavFailReason(reason: string) {\n  setItem(SOFT_NAV_FAIL, reason || DEFAULT_SOFT_NAV_ERROR_REASON)\n  setItem(SOFT_NAV_FAIL_REFERRER, window.location.href)\n}\n\nexport function setSoftNavReferrer() {\n  setItem(SOFT_NAV_REFERRER, window.location.href)\n}\n\nexport function getSoftNavReferrer() {\n  return getItem(SOFT_NAV_REFERRER) || document.referrer\n}\n\nexport function setSoftNavReactAppName() {\n  const appName = getCurrentReactAppName()\n\n  if (appName) {\n    setItem(SOFT_NAV_REACT_APP_NAME, appName)\n  } else {\n    removeItem(SOFT_NAV_REACT_APP_NAME)\n  }\n}\n\nexport function getSoftNavReactAppName() {\n  return getItem(SOFT_NAV_REACT_APP_NAME)\n}\n\nexport function getCurrentReactAppName() {\n  if (document.querySelector('meta[name=\"ui\"]')) return 'ui'\n\n  return document.querySelector('react-app')?.getAttribute('app-name')\n}\n\nexport function setLatestMechanism(mechanism: SoftNavMechanism) {\n  setItem(SOFT_NAV_LATEST_MECHANISM, mechanism)\n}\n\nexport function getLatestMechanism() {\n  return getItem(SOFT_NAV_LATEST_MECHANISM) as SoftNavMechanism\n}\n","export interface TestIdProps {\n  /** Test ID to be queried by automated testing suites */\n  'data-testid'?: string\n}\n\nexport const testIdProps = (value: string): TestIdProps => {\n  return {'data-testid': value}\n}\n","import {createContext, useContext, useEffect, type PropsWithChildren} from 'react'\nimport {SubscriptionSet, Topic} from '@github/alive-client'\n\ntype InitialMessages = Array<[string, unknown]>\n\nconst AliveTestContext = createContext<typeof testSubscribeToAlive | null>(null)\n\nlet subscriptions: SubscriptionSet<(data: unknown) => unknown> | null = null\n/**\n * Provides context required to dispatch mock alive messages via `dispatchAliveTestMessage`\n *\n *@example\n * ```ts\n * import {AliveTestProvider, dispatchAliveTestMessage, signChannel} from '@github-ui/use-alive/test-utils'\n *\n * render(<MyComponent aliveChannel={signChannel(\"channel-name\")} />, {\n *   wrapper: ({children}) => (\n *     <AliveTestProvider\n *       initialMessages={[[\"channel-name\", {data: 1}]]}\n *     >\n *       {children}\n *     </AliveTestProvider>\n * )})\n *\n * // later in the test, you can send another message:\n * dispatchAliveTestMessage(\"channel-name\", {data: 2})\n * ```\n */\nexport function AliveTestProvider({children, initialMessages}: PropsWithChildren<{initialMessages?: InitialMessages}>) {\n  useEffect(() => {\n    if (initialMessages) {\n      for (const [channel, users] of initialMessages) {\n        setTimeout(() => {\n          dispatchAliveTestMessage(channel, users)\n        }, 0)\n      }\n    }\n\n    return () => {\n      // delete subscriptions on unmount of provider to reset subs between tests\n      subscriptions = null\n    }\n  })\n  return <AliveTestContext.Provider value={testSubscribeToAlive}>{children}</AliveTestContext.Provider>\n}\n\n/**\n * Send mock Alive messages for tests or storybook etc.\n * Component under test **must** be wrapped in `AliveTestProvider` to enable Alive mocking.\n *\n * @see `AliveTestProvider`\n *\n * @param channel - an unsigned alive channel name: subscribers to this channel will be notified\n * @param data - data to send to subscribers\n */\nexport function dispatchAliveTestMessage(channel: string, data: unknown) {\n  if (subscriptions === null) {\n    throw new Error(\n      'Test helper `dispatchAliveTestMessage` called outside `AliveTestProvider`. Please wrap your component under test in `AliveTestProvider` from \"@github-ui/use-alive/test-utils\".',\n    )\n  }\n\n  const subscribers = Array.from(subscriptions.subscribers(channel))\n  for (const subscriber of subscribers) {\n    subscriber(data)\n  }\n}\n\n/**\n * Provides access to the `testSubscribeToAlive` mock if called from within a `AliveTestProvider` context\n */\nexport function useTestSubscribeToAlive() {\n  return useContext(AliveTestContext)\n}\n\n/**\n * This function is private and is intended only to be consumable via `AliveTestProvider` / `useTestSubscribeToAlive`\n * Furthermore it is only expected to be used in `use-alive.ts`\n * @param signedChannel - A signed alive channel. You can use `signChannel` to generate a signed channel from a channel name.\n * @param callback - this will be called with data provided via `dispatchAliveTestMessage` to simulate an alive message\n * @private\n */\nfunction testSubscribeToAlive(signedChannel: string, callback: (data: unknown) => unknown) {\n  const topic = Topic.parse(signedChannel)\n  if (!topic) {\n    throw new Error(`Invalid channel name. Did you forget to sign it with \\`signChannel(\"${signedChannel}\")\\`?`)\n  }\n  if (!subscriptions) {\n    subscriptions = new SubscriptionSet()\n  }\n  subscriptions.add({topic, subscriber: callback})\n  return {\n    unsubscribe: () => {\n      subscriptions?.delete({topic, subscriber: callback})\n    },\n  }\n}\n\nconst fakeTimestamp = 1234567890\nconst fakeSignature = 'SIGNATURE'\n\n/**\n * Simulate a server-signed alive channel. Useful for passing as the signed channel to `useAlive` in code under test.\n *\n * @param channel - Unsigned channel name. This is the channel you will dispatch messages to.\n * @param [timestamp=1234567890] - Unix Epoch Time the channel was signed on the server. Default is equal to\n *         \"2009-02-13T23:31:30.000Z\" (multiply by 1000 for JS time in milliseconds)\n * @param [signature='SIGNATURE'] - String used to verify the signature. Ignored in test mode.\n * @returns A signed channel of the form `${btoa({\"c\": \"CHANNEL\", \"t\": 1234567890}')}--SIGNATURE`\n */\nexport function signChannel(channel: string, timestamp = fakeTimestamp, signature = fakeSignature) {\n  return `${btoa(`{\"c\": \"${channel}\", \"t\": ${timestamp}}`)}--${signature}`\n}\n\ntry{ AliveTestContext.displayName ||= 'AliveTestContext' } catch {}\ntry{ AliveTestProvider.displayName ||= 'AliveTestProvider' } catch {}","import {useEffect} from 'react'\nimport useIsMounted from '@github-ui/use-is-mounted'\nimport {getSession} from '@github-ui/alive'\nimport {connectAliveSubscription} from '@github-ui/alive/connect-alive-subscription'\nimport {useTestSubscribeToAlive} from './TestAliveSubscription'\n\n/**\n * Subscribe to an alive channel with a signed channel name. Event data\n * will be passed to the callback.\n * @param signedChannel the signed channel name, provided from the server\n * @param callback a callback to receive events from the alive channel. This callback should be memoized to avoid unnecessary resubscribes when React re-renders.\n */\nexport function useAlive<T>(signedChannel: string, callback: (data: T) => unknown) {\n  const isMounted = useIsMounted()\n  const testSubscribeToAlive = useTestSubscribeToAlive()\n\n  useEffect(() => {\n    let unsubscribeFromAlive = () => {}\n    let closed = false\n\n    async function subscribeToAlive() {\n      if (typeof testSubscribeToAlive === 'function') {\n        const subs = await testSubscribeToAlive(signedChannel, callback as (data: unknown) => unknown)\n        if (subs) {\n          unsubscribeFromAlive = subs.unsubscribe\n        }\n        return\n      }\n\n      try {\n        const aliveSession = await getSession()\n        if (closed) {\n          // Possible we unsubscribed before the session returned\n          // this is fine, we just don't subscribe to the channel on the alive side\n          return\n        }\n        const resp = connectAliveSubscription(aliveSession, signedChannel, callback)\n        if (resp?.unsubscribe) {\n          if (isMounted()) {\n            unsubscribeFromAlive = resp.unsubscribe\n          } else {\n            resp.unsubscribe()\n          }\n        }\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e)\n      }\n    }\n\n    subscribeToAlive()\n\n    return () => {\n      closed = true\n      unsubscribeFromAlive()\n    }\n  }, [signedChannel, callback, isMounted, testSubscribeToAlive])\n}\n","import {useState} from 'react'\nimport type {BrowserHistory, MemoryHistory} from '@remix-run/router'\nimport {Router} from 'react-router-dom'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\ntype Props = {\n  children: React.ReactNode\n  history: BrowserHistory | MemoryHistory\n}\n\nexport function PartialRouter({children, history}: Props) {\n  const [state, setState] = useState({\n    location: history.location,\n  })\n\n  useHydratedEffect(() => history.listen(setState), [history])\n\n  return (\n    <Router location={state.location} navigator={history}>\n      {children}\n    </Router>\n  )\n}\n\ntry{ PartialRouter.displayName ||= 'PartialRouter' } catch {}","// Think of this as the entry point into the framework\nimport React from 'react'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {BaseProviders} from './BaseProviders'\nimport type {BrowserHistory} from '@remix-run/router'\nimport {createMemoryHistory} from '@remix-run/router'\nimport {AppContextProvider} from './AppContextProvider'\nimport {PartialRouter} from './PartialRouter'\nimport {CommonElements} from './CommonElements'\nimport {createBrowserHistory} from './create-browser-history'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {usePartialAnchorProps} from './react-partial-anchor'\n\ninterface Props {\n  partialName: string\n  embeddedData: EmbeddedPartialData\n  Component: React.ComponentType\n  wasServerRendered: boolean\n  ssrError?: HTMLScriptElement\n  anchorElement?: ReactPartialAnchorElement | null\n}\n\nexport function PartialEntry({\n  partialName,\n  embeddedData,\n  Component,\n  wasServerRendered,\n  ssrError,\n  anchorElement,\n}: Props) {\n  // Create a ref to track the browser history:\n  const historyRef = React.useRef<BrowserHistory>()\n  const window = globalThis.window as Window | undefined\n\n  // For linking to work, we can just pass a dummy pathname here. We may consider plumbing the actual path in\n  if (!historyRef.current) {\n    historyRef.current = !window\n      ? createMemoryHistory({initialEntries: [{pathname: '/'}]})\n      : createBrowserHistory({window})\n  }\n  const history = historyRef.current\n  const partialAnchorProps = usePartialAnchorProps(anchorElement)\n\n  // Wrap the partial in an AppContextProvider and static Router so that react-core links\n  // will be functional.\n  return (\n    <BaseProviders appName={partialName} wasServerRendered={wasServerRendered}>\n      <AppContextProvider history={history} routes={[]}>\n        <PartialRouter history={history}>\n          <Component {...embeddedData.props} {...(partialAnchorProps as object)} />\n          <CommonElements ssrError={ssrError} />\n        </PartialRouter>\n      </AppContextProvider>\n    </BaseProviders>\n  )\n}\n\ntry{ PartialEntry.displayName ||= 'PartialEntry' } catch {}","import {target} from '@github/catalyst'\nimport {createRoot, hydrateRoot} from 'react-dom/client'\nimport type {createRoot as createRootType, hydrateRoot as hydrateRootType, Root} from 'react-dom/client'\nimport React from 'react'\nimport ReactProfilingMode from '@github-ui/react-profiling-mode'\nimport {EXPECTED_ERRORS} from './expected-errors'\nimport {sendStats} from '@github-ui/stats'\n\ntype ReactDOM = {\n  createRoot: typeof createRootType\n  hydrateRoot: typeof hydrateRootType\n}\n\nconst REACT_INVARIANT_ERROR_REGEX = /Minified React error #(?<invariant>\\d+)/\n\nexport abstract class ReactBaseElement<T> extends HTMLElement {\n  @target embeddedData: HTMLScriptElement | undefined\n  @target ssrError: HTMLScriptElement | undefined\n  @target reactRoot: HTMLElement | undefined\n  private root: Root | undefined\n\n  abstract nameAttribute: string\n  abstract getReactNode(embeddedData: T): Promise<React.ReactNode>\n\n  protected get name() {\n    return this.getAttribute(this.nameAttribute) as string\n  }\n\n  private get embeddedDataText() {\n    const text = this.embeddedData?.textContent\n\n    if (!text) {\n      throw new Error(`No embedded data provided for react element ${this.name}`)\n    }\n\n    return text\n  }\n\n  get hasSSRContent() {\n    return this.getAttribute('data-ssr') === 'true'\n  }\n\n  connectedCallback() {\n    this.renderReact()\n  }\n\n  disconnectedCallback() {\n    this.root?.unmount()\n    this.root = undefined\n  }\n\n  private async renderReact() {\n    if (!this.reactRoot) throw new Error('No react root provided')\n    let reactDom: ReactDOM = {\n      createRoot,\n      hydrateRoot,\n    }\n\n    // Override the react-dom import if we're in profiling mode\n    if (ReactProfilingMode.isEnabled()) {\n      reactDom = await this.getReactDomWithProfiling()\n    }\n\n    const embeddedData = JSON.parse(this.embeddedDataText) as T\n    const ssrErrorText = this.ssrError?.textContent\n    const node = await this.getReactNode(embeddedData)\n    const baseNode = <React.StrictMode>{node}</React.StrictMode>\n\n    if (ssrErrorText) {\n      this.logSSRError(ssrErrorText)\n    }\n\n    if (this.hasSSRContent) {\n      /**\n       * Styled-components automatically looks for style tags to hydrate on first page load, but will not detect them\n       * if they are added after the initial page load. This causes a hydration error because React isn't expecting\n       * a style tag within the app. To work around this, we need to manually move the style tags to the head before\n       * hydrating the app.\n       *\n       * During hydration, styled-components will create a new style tag which matches the one we moved to the head.\n       * This means that after hydration, we can safely remove the style tag we manually moved to the head.\n       */\n      const styles = this.querySelector('style[data-styled=\"true\"]')\n      if (styles) document.head.appendChild(styles)\n\n      // Hydrate the react app\n      // onRecoverableError is disabled until we have a react version with this fix in:\n      // https://github.com/facebook/react/pull/25692\n      this.root = reactDom.hydrateRoot(this.reactRoot, baseNode, {\n        onRecoverableError: error => {\n          if (!(error instanceof Error)) return\n\n          const match = REACT_INVARIANT_ERROR_REGEX.exec(error.message)\n          const invariant = String(match?.groups?.invariant)\n\n          sendStats({\n            incrementKey: 'REACT_HYDRATION_ERROR',\n            incrementTags: {\n              appName: this.name,\n              invariant,\n            },\n          })\n        },\n      })\n\n      // Remove the manually moved style tag after hydration\n      if (styles) {\n        // Wait until things are idle to remove the style tag. If we do it immediately, we can cause a flash of unstyled content.\n        requestIdleCallback(() => {\n          // styles could have already been removed by Turbo if a navigation happens quickly. Only remove it from the DOM if it's still there.\n          styles.parentElement?.removeChild(styles)\n        })\n      }\n    } else {\n      this.root = reactDom.createRoot(this.reactRoot)\n      this.root.render(baseNode)\n    }\n\n    this.classList.add('loaded')\n  }\n\n  private getReactDomWithProfiling() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return import('react-dom/profiling') as any as Promise<ReactDOM>\n  }\n\n  private logSSRError(ssrErrorText: string) {\n    if (EXPECTED_ERRORS[ssrErrorText]) {\n      // eslint-disable-next-line no-console\n      return console.error('SSR failed with an expected error:', EXPECTED_ERRORS[ssrErrorText])\n    }\n\n    try {\n      const error = JSON.parse(ssrErrorText) as PlatformJavascriptError\n      const stacktrace = parseFailbotStacktrace(error)\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', `${error.type}: ${error.value}\\n`, error, stacktrace)\n    } catch {\n      /**\n       * In the event we couldn't log the error, we should not break the application\n       */\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', ssrErrorText, 'unable to parse as json')\n    }\n  }\n}\n\nfunction parseFailbotStacktrace(error: PlatformJavascriptError) {\n  if (!error.stacktrace) return ''\n  let prefix = '\\n '\n  const stack = error.stacktrace.map((frame: PlatformStackframe) => {\n    const {function: func, filename, lineno, colno} = frame\n    const line = `${prefix} at ${func} (${filename}:${lineno}:${colno})`\n    prefix = ' '\n    return line\n  })\n  return stack.join('\\n')\n}\n\ntry{ REACT_INVARIANT_ERROR_REGEX.displayName ||= 'REACT_INVARIANT_ERROR_REGEX' } catch {}"],"names":["registerReactPartial","Component","CopilotPrReviewBanner","hydroAnalyticsClient","getItem","safeStorage","dimensionPrefix","MARKETING_PARAMS","options","getOptionsFromMeta","baseContext","AnalyticsClient","_","extendBaseContext","context","key","value","app_id","event_url","host","Object","entries","startsWith","replace","visitorMeta","document","querySelector","assign","JSON","parse","atob","content","URLSearchParams","window","location","search","includes","toLowerCase","staff","isStaff","toString","sendPageView","sendEvent","type","service","head","cleanContext","stringifyObjectValues","obj","fromEntries","map","k","v","stringify","DeferredRegistry","register","name","registration","entry","registrationEntries","resolve","promise","Promise","getRegistration","Deferred","constructor","usePartialAnchorProps","anchorElement","useEffect","anchor","disabled","classList","remove","reactPartialAnchor","__wrapperElement","useExternalAnchor","ref","useRef","open","setOpen","useState","onClick","useCallback","current","setAttribute","useOnAnchorClick","element","addEventListener","removeEventListener","partialRegistry","ReactPartialElement","ReactBaseElement","getReactNode","embeddedData","appName","closest","PartialEntry","partialName","wasServerRendered","hasSSRContent","ssrError","nameAttribute","controller","setItem","removeItem","REACT_PROFILING_ENABLED","enable","disable","isEnabled","DEFAULT_SOFT_NAV_ERROR_REASON","SOFT_NAV_FAIL","SOFT_NAV_FAIL_REFERRER","SOFT_NAV_REFERRER","SOFT_NAV_MARK","SOFT_NAV_REACT_APP_NAME","SOFT_NAV_LATEST_MECHANISM","clearSoftNav","setSoftNavMechanism","mechanism","unsetSoftNav","inSoftNav","softNav","getSoftNavMechanism","hasSoftNavFailure","Boolean","getSoftNavFailReason","setSoftNavFailReason","reason","href","setSoftNavReferrer","getSoftNavReferrer","referrer","setSoftNavReactAppName","getCurrentReactAppName","getSoftNavReactAppName","getAttribute","setLatestMechanism","getLatestMechanism","testIdProps","AliveTestProvider","AliveTestContext","createContext","subscriptions","testSubscribeToAlive","signedChannel","callback","topic","Topic","SubscriptionSet","add","subscriber","unsubscribe","delete","displayName","children","initialMessages","channel","users","setTimeout","dispatchAliveTestMessage","data","Array","from","subscribers","Provider","useAlive","isMounted","useIsMounted","useContext","unsubscribeFromAlive","closed","subscribeToAlive","subs","aliveSession","getSession","resp","connectAliveSubscription","e","console","error","PartialRouter","history","state","setState","useHydratedEffect","listen","Router","navigator","historyRef","React","globalThis","createBrowserHistory","createMemoryHistory","initialEntries","pathname","partialAnchorProps","BaseProviders","AppContextProvider","routes","props","CommonElements","REACT_INVARIANT_ERROR_REGEX","HTMLElement","embeddedDataText","text","textContent","connectedCallback","renderReact","disconnectedCallback","root","unmount","undefined","reactRoot","reactDom","createRoot","hydrateRoot","ReactProfilingMode","getReactDomWithProfiling","ssrErrorText","node","baseNode","logSSRError","styles","appendChild","onRecoverableError","Error","match","exec","message","invariant","String","groups","sendStats","incrementKey","incrementTags","requestIdleCallback","parentElement","removeChild","render","EXPECTED_ERRORS","stacktrace","parseFailbotStacktrace","prefix","stack","function","func","filename","lineno","colno","frame","line","join","target"],"sourceRoot":""}