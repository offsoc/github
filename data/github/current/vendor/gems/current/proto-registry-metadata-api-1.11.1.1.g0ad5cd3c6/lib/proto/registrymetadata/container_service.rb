# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: container_service.proto

require 'google/protobuf'

require_relative 'container_entities'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("container_service.proto", :syntax => :proto3) do
    add_message "github.registry.metadata.v1.container.PutMetadataRequest" do
      optional :namespace, :string, 1
      optional :package_name, :string, 2
      optional :blob_store, :string, 3
      optional :metadata, :message, 4, "github.registry.metadata.v1.container.ContainerMetadata"
      optional :user_agent, :string, 5
    end
    add_message "github.registry.metadata.v1.container.PutMetadataResponse" do
    end
    add_message "github.registry.metadata.v1.container.GetMetadataRequest" do
      optional :namespace, :string, 1
      optional :package_name, :string, 2
      optional :tag, :message, 3, "github.registry.metadata.v1.container.Tag"
      optional :user_agent, :string, 4
      optional :is_non_download, :bool, 5
    end
    add_message "github.registry.metadata.v1.container.GetMetadataResponse" do
      optional :metadata, :message, 1, "github.registry.metadata.v1.container.ContainerMetadata"
    end
    add_message "github.registry.metadata.v1.container.GetTagsRequest" do
      optional :namespace, :string, 1
      optional :package_name, :string, 2
      optional :limit, :int64, 3
      optional :last, :string, 4
      optional :include_deleted, :bool, 5
      optional :only_immutable_tags, :bool, 6
      optional :use_replica, :bool, 7
    end
    add_message "github.registry.metadata.v1.container.GetTagsResponse" do
      repeated :tags, :message, 1, "github.registry.metadata.v1.container.Tag"
      optional :next, :string, 2
    end
    add_message "github.registry.metadata.v1.container.GetTagRequest" do
      optional :namespace, :string, 1
      optional :package_name, :string, 2
      optional :tag, :message, 3, "github.registry.metadata.v1.container.Tag"
    end
    add_message "github.registry.metadata.v1.container.GetTagResponse" do
      optional :tag, :message, 1, "github.registry.metadata.v1.container.Tag"
    end
    add_message "github.registry.metadata.v1.container.AuthenticateRequest" do
      optional :action, :enum, 1, "github.registry.metadata.v1.container.AuthenticateRequest.Action"
      optional :package_name, :string, 2
      optional :namespace, :string, 3
    end
    add_enum "github.registry.metadata.v1.container.AuthenticateRequest.Action" do
      value :READ_PACKAGE, 0
      value :WRITE_PACKAGE, 1
    end
    add_message "github.registry.metadata.v1.container.AuthenticateResponse" do
    end
    add_message "github.registry.metadata.v1.container.ValidateTokenRequest" do
      optional :username, :string, 1
    end
    add_message "github.registry.metadata.v1.container.ValidateTokenResponse" do
      repeated :scopes, :string, 1
    end
    add_message "github.registry.metadata.v1.container.GetLayerRequest" do
      optional :digest, :string, 1
      optional :package_name, :string, 2
      optional :namespace, :string, 3
      optional :is_non_download, :bool, 4
      optional :user_agent, :string, 5
      optional :checkConnectedVersions, :bool, 6
    end
    add_message "github.registry.metadata.v1.container.GetLayerResponse" do
      optional :layer, :message, 1, "github.registry.metadata.v1.container.Layer"
    end
    add_message "github.registry.metadata.v1.container.GetLayersRequest" do
      optional :package_name, :string, 1
      optional :namespace, :string, 2
      repeated :digests, :string, 3
    end
    add_message "github.registry.metadata.v1.container.GetLayersResponse" do
      repeated :layers, :message, 1, "github.registry.metadata.v1.container.Layer"
    end
    add_message "github.registry.metadata.v1.container.PutLayerRequest" do
      optional :layer, :message, 1, "github.registry.metadata.v1.container.Layer"
      optional :package_name, :string, 2
      optional :namespace, :string, 3
    end
    add_message "github.registry.metadata.v1.container.PutLayerResponse" do
    end
    add_message "github.registry.metadata.v1.container.UpdateLayersRequest" do
      optional :package_name, :string, 1
      optional :namespace, :string, 2
      repeated :layers, :message, 3, "github.registry.metadata.v1.container.Layer"
    end
    add_message "github.registry.metadata.v1.container.UpdateLayerError" do
      optional :digest, :string, 1
      optional :error, :string, 2
    end
    add_message "github.registry.metadata.v1.container.UpdateLayersResponse" do
      repeated :failed, :message, 1, "github.registry.metadata.v1.container.UpdateLayerError"
    end
    add_message "github.registry.metadata.v1.container.LinkLayerRequest" do
      optional :layer, :message, 1, "github.registry.metadata.v1.container.Layer"
      optional :source_package_name, :string, 2
      optional :source_namespace, :string, 3
      optional :destination_package_name, :string, 4
      optional :destination_namespace, :string, 5
    end
    add_message "github.registry.metadata.v1.container.LinkLayerResponse" do
    end
    add_message "github.registry.metadata.v1.container.GetCatalogRequest" do
      optional :limit, :int64, 1
      optional :last, :string, 2
    end
    add_message "github.registry.metadata.v1.container.GetCatalogResponse" do
      repeated :repositories, :string, 1
      optional :has_more_pages, :bool, 2
    end
  end
end

module Proto
  module RegistryMetadata
    module V1
      module Container
        PutMetadataRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.PutMetadataRequest").msgclass
        PutMetadataResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.PutMetadataResponse").msgclass
        GetMetadataRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.GetMetadataRequest").msgclass
        GetMetadataResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.GetMetadataResponse").msgclass
        GetTagsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.GetTagsRequest").msgclass
        GetTagsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.GetTagsResponse").msgclass
        GetTagRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.GetTagRequest").msgclass
        GetTagResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.GetTagResponse").msgclass
        AuthenticateRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.AuthenticateRequest").msgclass
        AuthenticateRequest::Action = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.AuthenticateRequest.Action").enummodule
        AuthenticateResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.AuthenticateResponse").msgclass
        ValidateTokenRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.ValidateTokenRequest").msgclass
        ValidateTokenResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.ValidateTokenResponse").msgclass
        GetLayerRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.GetLayerRequest").msgclass
        GetLayerResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.GetLayerResponse").msgclass
        GetLayersRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.GetLayersRequest").msgclass
        GetLayersResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.GetLayersResponse").msgclass
        PutLayerRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.PutLayerRequest").msgclass
        PutLayerResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.PutLayerResponse").msgclass
        UpdateLayersRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.UpdateLayersRequest").msgclass
        UpdateLayerError = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.UpdateLayerError").msgclass
        UpdateLayersResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.UpdateLayersResponse").msgclass
        LinkLayerRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.LinkLayerRequest").msgclass
        LinkLayerResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.LinkLayerResponse").msgclass
        GetCatalogRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.GetCatalogRequest").msgclass
        GetCatalogResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.registry.metadata.v1.container.GetCatalogResponse").msgclass
      end
    end
  end
end
