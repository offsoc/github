<%
  page_info(
    title: "Search · #{search_query}",
    hide_search: true
  )
%>

<%= render layout: "gists/page_head" do %>
  <div class="gistsearch-head d-flex flex-items-center px-3">
    <h1 class="p-0 ml-0 mr-6"><label for="search-query">Search</label></h1>
    <%= form_tag gist_search_path, :method => :get, :id => "search_form", class: "d-flex flex-auto" do %>
      <input class="form-control input-block" type="text" id="search-query" name="q" value="<%=h search_query %>" autocapitalize="off" autofocus>
      <input type="hidden" name="ref" value="searchresults">
      <%= render Primer::Beta::Button.new(ml: 2, classes: "flex-shrink-0", type: :submit) do %>Search<% end %>
    <% end %>
  </div>
<% end %>

<%= render layout: "layouts/gists_container" do %>
  <% if results.none? %>
    <% if gist_query.invalid_reason %>
      <%= render Primer::Beta::Blankslate.new do |c| %>
        <% c.with_visual_icon(icon: "search") %>

        <% c.with_heading(tag: :h2) do %>
          We could not perform this search
        <% end %>

        <% c.with_description do %>
          <%= gist_query.invalid_reason %>
        <% end %>
      <% end %>
    <% else %>

      <%= render Primer::Beta::Blankslate.new do |c| %>
        <% c.with_visual_icon(icon: "search") %>

        <% c.with_heading(tag: :h2).with_content(
          "We couldn’t find any gists matching '#{search_query}'"
        )%>

        <% c.with_description do %>
          For an advanced search, use some of our prefixes.
        <% end %>

        <% c.with_secondary_action(href: "#{GitHub.help_url}/search-github/searching-on-github/searching-gists").with_content("Gist search cheat sheet") %>
      <% end %>

    <% end %>
  <% else %>
    <div class="gutter d-flex">
      <div class="col-4 gistsearch-aside">
        <%= render "codesearch/filters_language", results: results %>

        <% render(Primer::Beta::Link.new(href: "#{GitHub.help_url}/search-github/searching-on-github/searching-gists")) { "Gist search cheat sheet" }%>
      </div>

      <%
        sort              = params[:s] || repo_search_sort_fields.first
        direction         = params[:o] || search_sort_directions.first
        sort_label        = repo_search_sort_labels[[sort, direction]]
        unscoped_search ||= nil
      %>
      <div class="col-8">
        <div class="pb-3 mb-3 border-bottom">
          <h3>
            <div class="d-flex flex-column flex-md-row flex-justify-between position-relative">
              <%= render partial: "codesearch/results_total", locals: {
                results: results,
                what: "gist result",
                unscoped_search: unscoped_search
              } %>
              <% if results.total > 10 %>
                <%= render(Primer::Alpha::ActionMenu.new(
                    select_variant: :single,
                    dynamic_label: true,
                    dynamic_label_prefix: "Sort",
                    anchor_align: :end
                  )) do |menu| %>
                  <% menu.with_show_button(size: :small) do |button|
                      button.with_trailing_action_icon(icon: :"triangle-down")
                      "Sort"
                    end %>
                  <% repo_search_sort_fields.product(search_sort_directions).each do |field, dir| %>
                    <% sort_option = [field, dir] %>
                    <% if repo_search_sort_labels[sort_option] %>
                      <% menu.with_item(
                        label: repo_search_sort_labels[sort_option],
                        active: sort_option == [sort, direction],
                        href: link_to_sorted_search(sort_option),
                      ) %>
                    <% end %>
                  <% end %>
                <% end %>
              <% end %>
            </div>
          </h3>
        </div>

        <% results.each do |hit| %>
          <%= render "gists/gists/snippet", view: create_view_model(Gists::SnippetView, :gist => hit["_gist"]) %>
        <% end %>

        <% if results.total_pages > 1 %>
          <div class="paginate-container">
            <%= will_paginate results, :param_name => :p %>
          </div>
        <% end %>
      </div>
    </div>

  <% end %>
<% end %>
