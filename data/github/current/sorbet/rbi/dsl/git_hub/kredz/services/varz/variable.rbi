# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Kredz::Services::Varz::Variable`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Kredz::Services::Varz::Variable`.

class GitHub::Kredz::Services::Varz::Variable
  sig do
    params(
      created_at: T.nilable(Google::Protobuf::Timestamp),
      integration_global_id: T.nilable(String),
      length: T.nilable(Integer),
      name: T.nilable(String),
      owner: T.nilable(GitHub::Kredz::Services::Varz::VariableOwner),
      selected_repositories: T.nilable(T.any(Google::Protobuf::RepeatedField[GitHub::Kredz::Services::Varz::Repository], T::Array[GitHub::Kredz::Services::Varz::Repository])),
      selected_repositories_count: T.nilable(Integer),
      truncated: T.nilable(T::Boolean),
      updated_at: T.nilable(Google::Protobuf::Timestamp),
      value: T.nilable(String),
      visibility: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(created_at: nil, integration_global_id: nil, length: nil, name: nil, owner: nil, selected_repositories: T.unsafe(nil), selected_repositories_count: nil, truncated: nil, updated_at: nil, value: nil, visibility: nil); end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_integration_global_id; end

  sig { void }
  def clear_length; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_owner; end

  sig { void }
  def clear_selected_repositories; end

  sig { void }
  def clear_selected_repositories_count; end

  sig { void }
  def clear_truncated; end

  sig { void }
  def clear_updated_at; end

  sig { void }
  def clear_value; end

  sig { void }
  def clear_visibility; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(String) }
  def integration_global_id; end

  sig { params(value: String).void }
  def integration_global_id=(value); end

  sig { returns(Integer) }
  def length; end

  sig { params(value: Integer).void }
  def length=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(T.nilable(GitHub::Kredz::Services::Varz::VariableOwner)) }
  def owner; end

  sig { params(value: T.nilable(GitHub::Kredz::Services::Varz::VariableOwner)).void }
  def owner=(value); end

  sig { returns(Google::Protobuf::RepeatedField[GitHub::Kredz::Services::Varz::Repository]) }
  def selected_repositories; end

  sig { params(value: Google::Protobuf::RepeatedField[GitHub::Kredz::Services::Varz::Repository]).void }
  def selected_repositories=(value); end

  sig { returns(Integer) }
  def selected_repositories_count; end

  sig { params(value: Integer).void }
  def selected_repositories_count=(value); end

  sig { returns(T::Boolean) }
  def truncated; end

  sig { params(value: T::Boolean).void }
  def truncated=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end

  sig { returns(String) }
  def value; end

  sig { params(value: String).void }
  def value=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def visibility; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def visibility=(value); end
end
