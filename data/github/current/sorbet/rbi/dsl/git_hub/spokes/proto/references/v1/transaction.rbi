# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Spokes::Proto::References::V1::Transaction`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Spokes::Proto::References::V1::Transaction`.

class GitHub::Spokes::Proto::References::V1::Transaction
  sig do
    params(
      committer_email: T.nilable(String),
      committer_name: T.nilable(String),
      committer_time: T.nilable(String),
      ref_update: T.nilable(T.any(Google::Protobuf::RepeatedField[GitHub::Spokes::Proto::References::V1::UpdateRefRequest], T::Array[GitHub::Spokes::Proto::References::V1::UpdateRefRequest])),
      reflog_msg: T.nilable(String)
    ).void
  end
  def initialize(committer_email: nil, committer_name: nil, committer_time: nil, ref_update: T.unsafe(nil), reflog_msg: nil); end

  sig { void }
  def clear_committer_email; end

  sig { void }
  def clear_committer_name; end

  sig { void }
  def clear_committer_time; end

  sig { void }
  def clear_ref_update; end

  sig { void }
  def clear_reflog_msg; end

  sig { returns(String) }
  def committer_email; end

  sig { params(value: String).void }
  def committer_email=(value); end

  sig { returns(String) }
  def committer_name; end

  sig { params(value: String).void }
  def committer_name=(value); end

  sig { returns(String) }
  def committer_time; end

  sig { params(value: String).void }
  def committer_time=(value); end

  sig { returns(Google::Protobuf::RepeatedField[GitHub::Spokes::Proto::References::V1::UpdateRefRequest]) }
  def ref_update; end

  sig { params(value: Google::Protobuf::RepeatedField[GitHub::Spokes::Proto::References::V1::UpdateRefRequest]).void }
  def ref_update=(value); end

  sig { returns(String) }
  def reflog_msg; end

  sig { params(value: String).void }
  def reflog_msg=(value); end
end
