# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Api::App::PlatformTypes::Organization`.
# Please instead update this file by running `bin/tapioca dsl Api::App::PlatformTypes::Organization`.

class Api::App::PlatformTypes::Organization < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(T::Boolean) }
  def action_invocation_blocked; end

  sig { returns(T::Boolean) }
  def action_invocation_blocked?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::ActionsStatus)) }
  def actions_status; end

  sig { returns(T::Boolean) }
  def actions_status?; end

  sig { returns(T::Boolean) }
  def active_enterprise_cloud_trial; end

  sig { returns(T::Boolean) }
  def active_enterprise_cloud_trial?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::MarketplaceListingPlan)) }
  def active_listing_plan; end

  sig { returns(T::Boolean) }
  def active_listing_plan?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::OrganizationAdminInfo)) }
  def admin_info; end

  sig { returns(T::Boolean) }
  def admin_info?; end

  sig { returns(Api::App::PlatformTypes::UserConnection) }
  def admins; end

  sig { returns(T::Boolean) }
  def admins?; end

  sig { returns(T.nilable(String)) }
  def announcement; end

  sig { returns(T::Boolean) }
  def announcement?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def announcement_created_at; end

  sig { returns(T::Boolean) }
  def announcement_created_at?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def announcement_expires_at; end

  sig { returns(T::Boolean) }
  def announcement_expires_at?; end

  sig { returns(T.nilable(T::Boolean)) }
  def announcement_user_dismissible; end

  sig { returns(T::Boolean) }
  def announcement_user_dismissible?; end

  sig { returns(T::Boolean) }
  def any_pinnable_items; end

  sig { returns(T::Boolean) }
  def any_pinnable_items?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def archived_at; end

  sig { returns(T::Boolean) }
  def archived_at?; end

  sig { returns(Api::App::PlatformTypes::OrganizationAuditEntryConnection) }
  def audit_log; end

  sig { returns(T::Boolean) }
  def audit_log?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def avatar_url; end

  sig { returns(T::Boolean) }
  def avatar_url?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::BillingTransactionConnection)) }
  def billing_transactions; end

  sig { returns(T::Boolean) }
  def billing_transactions?; end

  sig { returns(T.nilable(String)) }
  def company; end

  sig { returns(T::Boolean) }
  def company?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def created_at; end

  sig { returns(T::Boolean) }
  def created_at?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def current_credit; end

  sig { returns(T::Boolean) }
  def current_credit?; end

  sig { returns(T.nilable(Integer)) }
  def database_id; end

  sig { returns(T::Boolean) }
  def database_id?; end

  sig { returns(T.nilable(String)) }
  def description; end

  sig { returns(T::Boolean) }
  def description?; end

  sig { returns(T.nilable(String)) }
  def description_html; end

  sig { returns(T::Boolean) }
  def description_html?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def digest_method; end

  sig { returns(T::Boolean) }
  def digest_method?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::VerifiableDomainConnection)) }
  def domains; end

  sig { returns(T::Boolean) }
  def domains?; end

  sig { returns(Api::App::PlatformTypes::TeamConnection) }
  def eligible_parent_teams; end

  sig { returns(T::Boolean) }
  def eligible_parent_teams?; end

  sig { returns(T.nilable(String)) }
  def email; end

  sig { returns(T::Boolean) }
  def email?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::Enterprise)) }
  def enterprise; end

  sig { returns(T::Boolean) }
  def enterprise?; end

  sig { returns(Api::App::PlatformTypes::OrganizationEnterpriseOwnerConnection) }
  def enterprise_owners; end

  sig { returns(T::Boolean) }
  def enterprise_owners?; end

  sig { returns(Integer) }
  def estimated_next_sponsors_payout_in_cents; end

  sig { returns(T::Boolean) }
  def estimated_next_sponsors_payout_in_cents?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::RepositoryConnection)) }
  def excluded_issue_types_repositories; end

  sig { returns(T::Boolean) }
  def excluded_issue_types_repositories?; end

  sig { returns(Api::App::PlatformTypes::ExternalIdentityConnection) }
  def external_identities; end

  sig { returns(T::Boolean) }
  def external_identities?; end

  sig { returns(Api::App::PlatformTypes::TeamConnection) }
  def externally_managed_teams; end

  sig { returns(T::Boolean) }
  def externally_managed_teams?; end

  sig { returns(Api::App::PlatformTypes::GistConnection) }
  def gists; end

  sig { returns(T::Boolean) }
  def gists?; end

  sig { returns(T::Boolean) }
  def has_insights_enabled; end

  sig { returns(T::Boolean) }
  def has_insights_enabled?; end

  sig { returns(T::Boolean) }
  def has_organization_projects_enabled; end

  sig { returns(T::Boolean) }
  def has_organization_projects_enabled?; end

  sig { returns(T::Boolean) }
  def has_profile; end

  sig { returns(T::Boolean) }
  def has_profile?; end

  sig { returns(T::Boolean) }
  def has_repository_projects_enabled; end

  sig { returns(T::Boolean) }
  def has_repository_projects_enabled?; end

  sig { returns(T::Boolean) }
  def has_sponsors_listing; end

  sig { returns(T::Boolean) }
  def has_sponsors_listing?; end

  sig { returns(T::Boolean) }
  def has_team_discussions_enabled; end

  sig { returns(T::Boolean) }
  def has_team_discussions_enabled?; end

  sig { returns(T::Boolean) }
  def has_unlimited_seats; end

  sig { returns(T::Boolean) }
  def has_unlimited_seats?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def idp_certificate; end

  sig { returns(T::Boolean) }
  def idp_certificate?; end

  sig { returns(Api::App::PlatformTypes::IntegrationInstallationConnection) }
  def integration_installations; end

  sig { returns(T::Boolean) }
  def integration_installations?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::RepositoryInteractionAbility)) }
  def interaction_ability; end

  sig { returns(T::Boolean) }
  def interaction_ability?; end

  sig { returns(String) }
  def ip_allow_list_enabled_setting; end

  sig { returns(T::Boolean) }
  def ip_allow_list_enabled_setting?; end

  sig { returns(Api::App::PlatformTypes::IpAllowListEntryConnection) }
  def ip_allow_list_entries; end

  sig { returns(T::Boolean) }
  def ip_allow_list_entries?; end

  sig { returns(String) }
  def ip_allow_list_for_installed_apps_enabled_setting; end

  sig { returns(T::Boolean) }
  def ip_allow_list_for_installed_apps_enabled_setting?; end

  sig { returns(T::Boolean) }
  def is_actions_eligible; end

  sig { returns(T::Boolean) }
  def is_actions_eligible?; end

  sig { returns(T.nilable(T::Boolean)) }
  def is_announcement_dismissed; end

  sig { returns(T::Boolean) }
  def is_announcement_dismissed?; end

  sig { returns(T::Boolean) }
  def is_beta_feature_enabled; end

  sig { returns(T::Boolean) }
  def is_beta_feature_enabled?; end

  sig { returns(T::Boolean) }
  def is_copilot_mobile_chat_enabled; end

  sig { returns(T::Boolean) }
  def is_copilot_mobile_chat_enabled?; end

  sig { returns(T::Boolean) }
  def is_enterprise_managed; end

  sig { returns(T::Boolean) }
  def is_enterprise_managed?; end

  sig { returns(T::Boolean) }
  def is_feature_enabled; end

  sig { returns(T::Boolean) }
  def is_feature_enabled?; end

  sig { returns(T::Boolean) }
  def is_invoiced; end

  sig { returns(T::Boolean) }
  def is_invoiced?; end

  sig { returns(T::Boolean) }
  def is_spammy; end

  sig { returns(T::Boolean) }
  def is_spammy?; end

  sig { returns(T::Boolean) }
  def is_sponsored_by; end

  sig { returns(T::Boolean) }
  def is_sponsored_by?; end

  sig { returns(T::Boolean) }
  def is_sponsoring_viewer; end

  sig { returns(T::Boolean) }
  def is_sponsoring_viewer?; end

  sig { returns(T::Boolean) }
  def is_storage_allowed; end

  sig { returns(T::Boolean) }
  def is_storage_allowed?; end

  sig { returns(T::Boolean) }
  def is_usage_allowed; end

  sig { returns(T::Boolean) }
  def is_usage_allowed?; end

  sig { returns(T::Boolean) }
  def is_verified; end

  sig { returns(T::Boolean) }
  def is_verified?; end

  sig { returns(T.nilable(T::Boolean)) }
  def is_viewer_blocked; end

  sig { returns(T::Boolean) }
  def is_viewer_blocked?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::IssueTypeConnection)) }
  def issue_types; end

  sig { returns(T::Boolean) }
  def issue_types?; end

  sig { returns(T.nilable(String)) }
  def issuer; end

  sig { returns(T::Boolean) }
  def issuer?; end

  sig { returns(Api::App::PlatformTypes::ProfileItemShowcase) }
  def item_showcase; end

  sig { returns(T::Boolean) }
  def item_showcase?; end

  sig { returns(Api::App::PlatformTypes::SponsorAndLifetimeValueConnection) }
  def lifetime_received_sponsorship_values; end

  sig { returns(T::Boolean) }
  def lifetime_received_sponsorship_values?; end

  sig { returns(T.nilable(String)) }
  def location; end

  sig { returns(T::Boolean) }
  def location?; end

  sig { returns(String) }
  def login; end

  sig { returns(T::Boolean) }
  def login?; end

  sig { returns(Api::App::PlatformTypes::MannequinConnection) }
  def mannequins; end

  sig { returns(T::Boolean) }
  def mannequins?; end

  sig { returns(Api::App::PlatformTypes::UserStatusConnection) }
  def member_statuses; end

  sig { returns(T::Boolean) }
  def member_statuses?; end

  sig { returns(T::Boolean) }
  def members_can_fork_private_repositories; end

  sig { returns(T::Boolean) }
  def members_can_fork_private_repositories?; end

  sig { returns(Api::App::PlatformTypes::OrganizationMemberConnection) }
  def members_with_role; end

  sig { returns(T::Boolean) }
  def members_with_role?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::LegacyMigration)) }
  def migration; end

  sig { returns(T::Boolean) }
  def migration?; end

  sig { returns(Integer) }
  def monthly_estimated_sponsors_income_in_cents; end

  sig { returns(T::Boolean) }
  def monthly_estimated_sponsors_income_in_cents?; end

  sig { returns(T.nilable(String)) }
  def name; end

  sig { returns(T::Boolean) }
  def name?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def new_team_resource_path; end

  sig { returns(T::Boolean) }
  def new_team_resource_path?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def new_team_url; end

  sig { returns(T::Boolean) }
  def new_team_url?; end

  sig { returns(String) }
  def notification_delivery_restriction_enabled_setting; end

  sig { returns(T::Boolean) }
  def notification_delivery_restriction_enabled_setting?; end

  sig { returns(T::Boolean) }
  def oap_whitelist_required; end

  sig { returns(T::Boolean) }
  def oap_whitelist_required?; end

  sig { returns(T.nilable(String)) }
  def organization_billing_email; end

  sig { returns(T::Boolean) }
  def organization_billing_email?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::Repository)) }
  def organization_discussions_repository; end

  sig { returns(T::Boolean) }
  def organization_discussions_repository?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::Package)) }
  def package; end

  sig { returns(T::Boolean) }
  def package?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::PackageVersion)) }
  def package_version; end

  sig { returns(T::Boolean) }
  def package_version?; end

  sig { returns(Api::App::PlatformTypes::PackageConnection) }
  def packages; end

  sig { returns(T::Boolean) }
  def packages?; end

  sig { returns(Api::App::PlatformTypes::PackageConnection) }
  def packages_for_query; end

  sig { returns(T::Boolean) }
  def packages_for_query?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::PaymentMethod)) }
  def payment_method; end

  sig { returns(T::Boolean) }
  def payment_method?; end

  sig { returns(Api::App::PlatformTypes::RepositoryInvitationConnection) }
  def pending_collaborator_invitations; end

  sig { returns(T::Boolean) }
  def pending_collaborator_invitations?; end

  sig { returns(Api::App::PlatformTypes::PendingCollaboratorConnection) }
  def pending_collaborators; end

  sig { returns(T::Boolean) }
  def pending_collaborators?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::EnterpriseOrganizationInvitationConnection)) }
  def pending_enterprise_invitations; end

  sig { returns(T::Boolean) }
  def pending_enterprise_invitations?; end

  sig { returns(Api::App::PlatformTypes::UserConnection) }
  def pending_members; end

  sig { returns(T::Boolean) }
  def pending_members?; end

  sig { returns(Api::App::PlatformTypes::PinnableItemConnection) }
  def pinnable_items; end

  sig { returns(T::Boolean) }
  def pinnable_items?; end

  sig { returns(Api::App::PlatformTypes::PinnableItemConnection) }
  def pinned_items; end

  sig { returns(T::Boolean) }
  def pinned_items?; end

  sig { returns(Integer) }
  def pinned_items_remaining; end

  sig { returns(T::Boolean) }
  def pinned_items_remaining?; end

  sig { returns(Api::App::PlatformTypes::Plan) }
  def plan; end

  sig { returns(T::Boolean) }
  def plan?; end

  sig { returns(Integer) }
  def plan_limit; end

  sig { returns(T::Boolean) }
  def plan_limit?; end

  sig { returns(T::Boolean) }
  def plan_supports; end

  sig { returns(T::Boolean) }
  def plan_supports?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def profile_resource_path; end

  sig { returns(T::Boolean) }
  def profile_resource_path?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def profile_url; end

  sig { returns(T::Boolean) }
  def profile_url?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::Project)) }
  def project; end

  sig { returns(T::Boolean) }
  def project?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::ProjectNext)) }
  def project_next; end

  sig { returns(T::Boolean) }
  def project_next?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::ProjectV2)) }
  def project_v2; end

  sig { returns(T::Boolean) }
  def project_v2?; end

  sig { returns(Api::App::PlatformTypes::ProjectConnection) }
  def projects; end

  sig { returns(T::Boolean) }
  def projects?; end

  sig { returns(Api::App::PlatformTypes::ProjectNextConnection) }
  def projects_next; end

  sig { returns(T::Boolean) }
  def projects_next?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def projects_resource_path; end

  sig { returns(T::Boolean) }
  def projects_resource_path?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def projects_url; end

  sig { returns(T::Boolean) }
  def projects_url?; end

  sig { returns(Api::App::PlatformTypes::ProjectV2Connection) }
  def projects_v2; end

  sig { returns(T::Boolean) }
  def projects_v2?; end

  sig { returns(Api::App::PlatformTypes::ProjectV2Connection) }
  def projects_v2_by_number; end

  sig { returns(T::Boolean) }
  def projects_v2_by_number?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::RepositoryReadme)) }
  def readme; end

  sig { returns(T::Boolean) }
  def readme?; end

  sig { returns(Api::App::PlatformTypes::ProjectV2Connection) }
  def recent_projects; end

  sig { returns(T::Boolean) }
  def recent_projects?; end

  sig { returns(Api::App::PlatformTypes::ProjectNextConnection) }
  def recent_projects_next; end

  sig { returns(T::Boolean) }
  def recent_projects_next?; end

  sig { returns(Api::App::PlatformTypes::RepositoryConnection) }
  def repositories; end

  sig { returns(T::Boolean) }
  def repositories?; end

  sig { returns(T::Array[Api::App::PlatformTypes::RepositoriesUsingDependency]) }
  def repositories_using_dependencies; end

  sig { returns(T::Boolean) }
  def repositories_using_dependencies?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::Repository)) }
  def repository; end

  sig { returns(T::Boolean) }
  def repository?; end

  sig { returns(Api::App::PlatformTypes::DiscussionCommentConnection) }
  def repository_discussion_comments; end

  sig { returns(T::Boolean) }
  def repository_discussion_comments?; end

  sig { returns(Api::App::PlatformTypes::DiscussionConnection) }
  def repository_discussions; end

  sig { returns(T::Boolean) }
  def repository_discussions?; end

  sig { returns(Api::App::PlatformTypes::RepositoryMigrationConnection) }
  def repository_migrations; end

  sig { returns(T::Boolean) }
  def repository_migrations?; end

  sig { returns(T.nilable(T::Boolean)) }
  def requires_two_factor_authentication; end

  sig { returns(T::Boolean) }
  def requires_two_factor_authentication?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def resource_path; end

  sig { returns(T::Boolean) }
  def resource_path?; end

  sig { returns(Api::App::PlatformTypes::RetiredNamespaceConnection) }
  def retired_namespaces; end

  sig { returns(T::Boolean) }
  def retired_namespaces?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::RepositoryRuleset)) }
  def ruleset; end

  sig { returns(T::Boolean) }
  def ruleset?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::RepositoryRulesetConnection)) }
  def rulesets; end

  sig { returns(T::Boolean) }
  def rulesets?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::OrganizationIdentityProvider)) }
  def saml_identity_provider; end

  sig { returns(T::Boolean) }
  def saml_identity_provider?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def signature_method; end

  sig { returns(T::Boolean) }
  def signature_method?; end

  sig { returns(Api::App::PlatformTypes::SponsorConnection) }
  def sponsoring; end

  sig { returns(T::Boolean) }
  def sponsoring?; end

  sig { returns(Api::App::PlatformTypes::SponsorConnection) }
  def sponsors; end

  sig { returns(T::Boolean) }
  def sponsors?; end

  sig { returns(Api::App::PlatformTypes::SponsorsActivityConnection) }
  def sponsors_activities; end

  sig { returns(T::Boolean) }
  def sponsors_activities?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::SponsorsListing)) }
  def sponsors_listing; end

  sig { returns(T::Boolean) }
  def sponsors_listing?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::Sponsorship)) }
  def sponsorship_for_viewer_as_sponsor; end

  sig { returns(T::Boolean) }
  def sponsorship_for_viewer_as_sponsor?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::Sponsorship)) }
  def sponsorship_for_viewer_as_sponsorable; end

  sig { returns(T::Boolean) }
  def sponsorship_for_viewer_as_sponsorable?; end

  sig { returns(Api::App::PlatformTypes::SponsorshipNewsletterConnection) }
  def sponsorship_newsletters; end

  sig { returns(T::Boolean) }
  def sponsorship_newsletters?; end

  sig { returns(Api::App::PlatformTypes::SponsorshipConnection) }
  def sponsorships_as_maintainer; end

  sig { returns(T::Boolean) }
  def sponsorships_as_maintainer?; end

  sig { returns(Api::App::PlatformTypes::SponsorshipConnection) }
  def sponsorships_as_sponsor; end

  sig { returns(T::Boolean) }
  def sponsorships_as_sponsor?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::OrganizationStafftoolsInfo)) }
  def stafftools_info; end

  sig { returns(T::Boolean) }
  def stafftools_info?; end

  sig { returns(Api::App::PlatformTypes::Subscription) }
  def subscription; end

  sig { returns(T::Boolean) }
  def subscription?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::Team)) }
  def team; end

  sig { returns(T::Boolean) }
  def team?; end

  sig { returns(Api::App::PlatformTypes::TeamConnection) }
  def teams; end

  sig { returns(T::Boolean) }
  def teams?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def teams_resource_path; end

  sig { returns(T::Boolean) }
  def teams_resource_path?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def teams_url; end

  sig { returns(T::Boolean) }
  def teams_url?; end

  sig { returns(Api::App::PlatformTypes::RepositoryConnection) }
  def template_repositories; end

  sig { returns(T::Boolean) }
  def template_repositories?; end

  sig { returns(String) }
  def terms_of_service_type; end

  sig { returns(T::Boolean) }
  def terms_of_service_type?; end

  sig { returns(Integer) }
  def total_available_seats; end

  sig { returns(T::Boolean) }
  def total_available_seats?; end

  sig { returns(T.nilable(Integer)) }
  def total_sponsorship_amount_as_sponsor_in_cents; end

  sig { returns(T::Boolean) }
  def total_sponsorship_amount_as_sponsor_in_cents?; end

  sig { returns(T.nilable(String)) }
  def twitter_username; end

  sig { returns(T::Boolean) }
  def twitter_username?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def updated_at; end

  sig { returns(T::Boolean) }
  def updated_at?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def url; end

  sig { returns(T::Boolean) }
  def url?; end

  sig { returns(T::Array[String]) }
  def verified_domains_list; end

  sig { returns(T::Boolean) }
  def verified_domains_list?; end

  sig { returns(T::Boolean) }
  def viewer_can_administer; end

  sig { returns(T::Boolean) }
  def viewer_can_administer?; end

  sig { returns(T::Boolean) }
  def viewer_can_change_pinned_items; end

  sig { returns(T::Boolean) }
  def viewer_can_change_pinned_items?; end

  sig { returns(T::Boolean) }
  def viewer_can_create_projects; end

  sig { returns(T::Boolean) }
  def viewer_can_create_projects?; end

  sig { returns(T::Boolean) }
  def viewer_can_create_repositories; end

  sig { returns(T::Boolean) }
  def viewer_can_create_repositories?; end

  sig { returns(T::Boolean) }
  def viewer_can_create_teams; end

  sig { returns(T::Boolean) }
  def viewer_can_create_teams?; end

  sig { returns(T::Boolean) }
  def viewer_can_sponsor; end

  sig { returns(T::Boolean) }
  def viewer_can_sponsor?; end

  sig { returns(T::Boolean) }
  def viewer_is_a_member; end

  sig { returns(T::Boolean) }
  def viewer_is_a_member?; end

  sig { returns(T.nilable(T::Boolean)) }
  def viewer_is_billing_manager_only; end

  sig { returns(T::Boolean) }
  def viewer_is_billing_manager_only?; end

  sig { returns(T::Boolean) }
  def viewer_is_following; end

  sig { returns(T::Boolean) }
  def viewer_is_following?; end

  sig { returns(T::Boolean) }
  def viewer_is_sponsoring; end

  sig { returns(T::Boolean) }
  def viewer_is_sponsoring?; end

  sig { returns(T::Boolean) }
  def web_commit_signoff_required; end

  sig { returns(T::Boolean) }
  def web_commit_signoff_required?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def website_url; end

  sig { returns(T::Boolean) }
  def website_url?; end
end
