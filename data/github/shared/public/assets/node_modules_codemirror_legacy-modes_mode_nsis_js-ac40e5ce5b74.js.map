{"version":3,"file":"chunk-node_modules_codemirror_legacy-modes_mode_nsis_js-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@codemirror/legacy-modes/mode/nsis.js","node_modules/@codemirror/legacy-modes/mode/simple-mode.js"],"sourcesContent":["import {simpleMode} from \"./simple-mode.js\"\nexport const nsis = simpleMode({\n  start:[\n    // Numbers\n    {regex: /(?:[+-]?)(?:0x[\\d,a-f]+)|(?:0o[0-7]+)|(?:0b[0,1]+)|(?:\\d+.?\\d*)/, token: \"number\"},\n\n    // Strings\n    { regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/, token: \"string\" },\n    { regex: /'(?:[^\\\\']|\\\\.)*'?/, token: \"string\" },\n    { regex: /`(?:[^\\\\`]|\\\\.)*`?/, token: \"string\" },\n\n    // Compile Time Commands\n    {regex: /^\\s*(?:\\!(addincludedir|addplugindir|appendfile|cd|define|delfile|echo|error|execute|finalize|getdllversion|gettlbversion|include|insertmacro|macro|macroend|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|uninstfinalize|verbose|warning))\\b/i, token: \"keyword\"},\n\n    // Conditional Compilation\n    {regex: /^\\s*(?:\\!(if(?:n?def)?|ifmacron?def|macro))\\b/i, token: \"keyword\", indent: true},\n    {regex: /^\\s*(?:\\!(else|endif|macroend))\\b/i, token: \"keyword\", dedent: true},\n\n    // Runtime Commands\n    {regex: /^\\s*(?:Abort|AddBrandingImage|AddSize|AllowRootDirInstall|AllowSkipFiles|AutoCloseWindow|BGFont|BGGradient|BrandingText|BringToFront|Call|CallInstDLL|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|CRCCheck|CreateDirectory|CreateFont|CreateShortCut|Delete|DeleteINISec|DeleteINIStr|DeleteRegKey|DeleteRegValue|DetailPrint|DetailsButtonText|DirText|DirVar|DirVerify|EnableWindow|EnumRegKey|EnumRegValue|Exch|Exec|ExecShell|ExecShellWait|ExecWait|ExpandEnvStrings|File|FileBufSize|FileClose|FileErrorText|FileOpen|FileRead|FileReadByte|FileReadUTF16LE|FileReadWord|FileWriteUTF16LE|FileSeek|FileWrite|FileWriteByte|FileWriteWord|FindClose|FindFirst|FindNext|FindWindow|FlushINI|GetCurInstType|GetCurrentAddress|GetDlgItem|GetDLLVersion|GetDLLVersionLocal|GetErrorLevel|GetFileTime|GetFileTimeLocal|GetFullPathName|GetFunctionAddress|GetInstDirError|GetKnownFolderPath|GetLabelAddress|GetTempFileName|GetWinVer|Goto|HideWindow|Icon|IfAbort|IfErrors|IfFileExists|IfRebootFlag|IfRtlLanguage|IfShellVarContextAll|IfSilent|InitPluginsDir|InstallButtonText|InstallColors|InstallDir|InstallDirRegKey|InstProgressFlags|InstType|InstTypeGetText|InstTypeSetText|Int64Cmp|Int64CmpU|Int64Fmt|IntCmp|IntCmpU|IntFmt|IntOp|IntPtrCmp|IntPtrCmpU|IntPtrOp|IsWindow|LangString|LicenseBkColor|LicenseData|LicenseForceSelection|LicenseLangString|LicenseText|LoadAndSetImage|LoadLanguageFile|LockWindow|LogSet|LogText|ManifestDPIAware|ManifestLongPathAware|ManifestMaxVersionTested|ManifestSupportedOS|MessageBox|MiscButtonText|Name|Nop|OutFile|Page|PageCallbacks|PEAddResource|PEDllCharacteristics|PERemoveResource|PESubsysVer|Pop|Push|Quit|ReadEnvStr|ReadINIStr|ReadRegDWORD|ReadRegStr|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|RMDir|SearchPath|SectionGetFlags|SectionGetInstTypes|SectionGetSize|SectionGetText|SectionIn|SectionSetFlags|SectionSetInstTypes|SectionSetSize|SectionSetText|SendMessage|SetAutoClose|SetBrandingImage|SetCompress|SetCompressor|SetCompressorDictSize|SetCtlColors|SetCurInstType|SetDatablockOptimize|SetDateSave|SetDetailsPrint|SetDetailsView|SetErrorLevel|SetErrors|SetFileAttributes|SetFont|SetOutPath|SetOverwrite|SetRebootFlag|SetRegView|SetShellVarContext|SetSilent|ShowInstDetails|ShowUninstDetails|ShowWindow|SilentInstall|SilentUnInstall|Sleep|SpaceTexts|StrCmp|StrCmpS|StrCpy|StrLen|SubCaption|Target|Unicode|UninstallButtonText|UninstallCaption|UninstallIcon|UninstallSubCaption|UninstallText|UninstPage|UnRegDLL|Var|VIAddVersionKey|VIFileVersion|VIProductVersion|WindowIcon|WriteINIStr|WriteRegBin|WriteRegDWORD|WriteRegExpandStr|WriteRegMultiStr|WriteRegNone|WriteRegStr|WriteUninstaller|XPStyle)\\b/i, token: \"keyword\"},\n    {regex: /^\\s*(?:Function|PageEx|Section(?:Group)?)\\b/i, token: \"keyword\", indent: true},\n    {regex: /^\\s*(?:(Function|PageEx|Section(?:Group)?)End)\\b/i, token: \"keyword\", dedent: true},\n\n    // Command Options\n    {regex: /\\b(?:ARCHIVE|FILE_ATTRIBUTE_ARCHIVE|FILE_ATTRIBUTE_HIDDEN|FILE_ATTRIBUTE_NORMAL|FILE_ATTRIBUTE_OFFLINE|FILE_ATTRIBUTE_READONLY|FILE_ATTRIBUTE_SYSTEM|FILE_ATTRIBUTE_TEMPORARY|HIDDEN|HKCC|HKCR(32|64)?|HKCU(32|64)?|HKDD|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_DYN_DATA|HKEY_LOCAL_MACHINE|HKEY_PERFORMANCE_DATA|HKEY_USERS|HKLM(32|64)?|HKPD|HKU|IDABORT|IDCANCEL|IDD_DIR|IDD_INST|IDD_INSTFILES|IDD_LICENSE|IDD_SELCOM|IDD_UNINST|IDD_VERIFY|IDIGNORE|IDNO|IDOK|IDRETRY|IDYES|MB_ABORTRETRYIGNORE|MB_DEFBUTTON1|MB_DEFBUTTON2|MB_DEFBUTTON3|MB_DEFBUTTON4|MB_ICONEXCLAMATION|MB_ICONINFORMATION|MB_ICONQUESTION|MB_ICONSTOP|MB_OK|MB_OKCANCEL|MB_RETRYCANCEL|MB_RIGHT|MB_RTLREADING|MB_SETFOREGROUND|MB_TOPMOST|MB_USERICON|MB_YESNO|MB_YESNOCANCEL|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SW_HIDE|SW_SHOWDEFAULT|SW_SHOWMAXIMIZED|SW_SHOWMINIMIZED|SW_SHOWNORMAL|SYSTEM|TEMPORARY)\\b/i, token: \"atom\"},\n    {regex: /\\b(?:admin|all|amd64-unicode|auto|both|bottom|bzip2|components|current|custom|directory|false|force|hide|highest|ifdiff|ifnewer|instfiles|lastused|leave|left|license|listonly|lzma|nevershow|none|normal|notset|off|on|right|show|silent|silentlog|textonly|top|true|try|un\\.components|un\\.custom|un\\.directory|un\\.instfiles|un\\.license|uninstConfirm|user|Win10|Win7|Win8|WinVista|x-86-(ansi|unicode)|zlib)\\b/i, token: \"builtin\"},\n\n    // LogicLib.nsh\n    {regex: /\\$\\{(?:And(?:If(?:Not)?|Unless)|Break|Case(?:2|3|4|5|Else)?|Continue|Default|Do(?:Until|While)?|Else(?:If(?:Not)?|Unless)?|End(?:If|Select|Switch)|Exit(?:Do|For|While)|For(?:Each)?|If(?:Cmd|Not(?:Then)?|Then)?|Loop(?:Until|While)?|Or(?:If(?:Not)?|Unless)|Select|Switch|Unless|While)\\}/i, token: \"variable-2\", indent: true},\n\n    // FileFunc.nsh\n    {regex: /\\$\\{(?:BannerTrimPath|DirState|DriveSpace|Get(BaseName|Drives|ExeName|ExePath|FileAttributes|FileExt|FileName|FileVersion|Options|OptionsS|Parameters|Parent|Root|Size|Time)|Locate|RefreshShellIcons)\\}/i, token: \"variable-2\", dedent: true},\n\n    // Memento.nsh\n    {regex: /\\$\\{(?:Memento(?:Section(?:Done|End|Restore|Save)?|UnselectedSection))\\}/i, token: \"variable-2\", dedent: true},\n\n    // TextFunc.nsh\n    {regex: /\\$\\{(?:Config(?:Read|ReadS|Write|WriteS)|File(?:Join|ReadFromEnd|Recode)|Line(?:Find|Read|Sum)|Text(?:Compare|CompareS)|TrimNewLines)\\}/i, token: \"variable-2\", dedent: true},\n\n    // WinVer.nsh\n    {regex: /\\$\\{(?:(?:At(?:Least|Most)|Is)(?:ServicePack|Win(?:7|8|10|95|98|200(?:0|3|8(?:R2)?)|ME|NT4|Vista|XP))|Is(?:NT|Server))\\}/i, token: \"variable\", dedent: true},\n\n    // WordFunc.nsh\n    {regex: /\\$\\{(?:StrFilterS?|Version(?:Compare|Convert)|Word(?:AddS?|Find(?:(?:2|3)X)?S?|InsertS?|ReplaceS?))\\}/i, token: \"keyword\", dedent: true},\n\n    // x64.nsh\n    {regex: /\\$\\{(?:RunningX64)\\}/i, token: \"variable\", dedent: true},\n    {regex: /\\$\\{(?:Disable|Enable)X64FSRedirection\\}/i, token: \"keyword\", dedent: true},\n\n    // Line Comment\n    {regex: /(#|;).*/, token: \"comment\"},\n\n    // Block Comment\n    {regex: /\\/\\*/, token: \"comment\", next: \"comment\"},\n\n    // Operator\n    {regex: /[-+\\/*=<>!]+/, token: \"operator\"},\n\n    // Variable\n    {regex: /\\$\\w[\\w\\.]*/, token: \"variable\"},\n\n    // Constant\n    {regex: /\\${[\\!\\w\\.:-]+}/, token: \"variableName.constant\"},\n\n    // Language String\n    {regex: /\\$\\([\\!\\w\\.:-]+\\)/, token: \"atom\"}\n  ],\n  comment: [\n    {regex: /.*?\\*\\//, token: \"comment\", next: \"start\"},\n    {regex: /.*/, token: \"comment\"}\n  ],\n  languageData: {\n    name: \"nsis\",\n    indentOnInput: /^\\s*((Function|PageEx|Section|Section(Group)?)End|(\\!(endif|macroend))|\\$\\{(End(If|Unless|While)|Loop(Until)|Next)\\})$/i,\n    commentTokens: {line: \"#\", block: {open: \"/*\", close: \"*/\"}}\n  }\n});\n\n","export function simpleMode(states) {\n  ensureState(states, \"start\");\n  var states_ = {}, meta = states.languageData || {}, hasIndentation = false;\n  for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n    var list = states_[state] = [], orig = states[state];\n    for (var i = 0; i < orig.length; i++) {\n      var data = orig[i];\n      list.push(new Rule(data, states));\n      if (data.indent || data.dedent) hasIndentation = true;\n    }\n  }\n  return {\n    name: meta.name,\n    startState: function() {\n      return {state: \"start\", pending: null, indent: hasIndentation ? [] : null};\n    },\n    copyState: function(state) {\n      var s = {state: state.state, pending: state.pending, indent: state.indent && state.indent.slice(0)};\n      if (state.stack)\n        s.stack = state.stack.slice(0);\n      return s;\n    },\n    token: tokenFunction(states_),\n    indent: indentFunction(states_, meta),\n    languageData: meta\n  }\n};\n\nfunction ensureState(states, name) {\n  if (!states.hasOwnProperty(name))\n    throw new Error(\"Undefined state \" + name + \" in simple mode\");\n}\n\nfunction toRegex(val, caret) {\n  if (!val) return /(?:)/;\n  var flags = \"\";\n  if (val instanceof RegExp) {\n    if (val.ignoreCase) flags = \"i\";\n    val = val.source;\n  } else {\n    val = String(val);\n  }\n  return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n}\n\nfunction asToken(val) {\n  if (!val) return null;\n  if (val.apply) return val\n  if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n  var result = [];\n  for (var i = 0; i < val.length; i++)\n    result.push(val[i] && val[i].replace(/\\./g, \" \"));\n  return result;\n}\n\nfunction Rule(data, states) {\n  if (data.next || data.push) ensureState(states, data.next || data.push);\n  this.regex = toRegex(data.regex);\n  this.token = asToken(data.token);\n  this.data = data;\n}\n\nfunction tokenFunction(states) {\n  return function(stream, state) {\n    if (state.pending) {\n      var pend = state.pending.shift();\n      if (state.pending.length == 0) state.pending = null;\n      stream.pos += pend.text.length;\n      return pend.token;\n    }\n\n    var curState = states[state.state];\n    for (var i = 0; i < curState.length; i++) {\n      var rule = curState[i];\n      var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n      if (matches) {\n        if (rule.data.next) {\n          state.state = rule.data.next;\n        } else if (rule.data.push) {\n          (state.stack || (state.stack = [])).push(state.state);\n          state.state = rule.data.push;\n        } else if (rule.data.pop && state.stack && state.stack.length) {\n          state.state = state.stack.pop();\n        }\n\n        if (rule.data.indent)\n          state.indent.push(stream.indentation() + stream.indentUnit);\n        if (rule.data.dedent)\n          state.indent.pop();\n        var token = rule.token\n        if (token && token.apply) token = token(matches)\n        if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n          state.pending = [];\n          for (var j = 2; j < matches.length; j++)\n            if (matches[j])\n              state.pending.push({text: matches[j], token: rule.token[j - 1]});\n          stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n          return token[0];\n        } else if (token && token.join) {\n          return token[0];\n        } else {\n          return token;\n        }\n      }\n    }\n    stream.next();\n    return null;\n  };\n}\n\nfunction indentFunction(states, meta) {\n  return function(state, textAfter) {\n    if (state.indent == null || meta.dontIndentStates && meta.doneIndentState.indexOf(state.state) > -1)\n      return null\n\n    var pos = state.indent.length - 1, rules = states[state.state];\n    scan: for (;;) {\n      for (var i = 0; i < rules.length; i++) {\n        var rule = rules[i];\n        if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n          var m = rule.regex.exec(textAfter);\n          if (m && m[0]) {\n            pos--;\n            if (rule.next || rule.push) rules = states[rule.next || rule.push];\n            textAfter = textAfter.slice(m[0].length);\n            continue scan;\n          }\n        }\n      }\n      break;\n    }\n    return pos < 0 ? 0 : state.indent[pos];\n  };\n}\n"],"names":["nsis","start","regex","token","indent","dedent","next","comment","languageData","name","indentOnInput","commentTokens","line","block","open","close","simpleMode","states","ensureState","states_","meta","hasIndentation","state","hasOwnProperty","list","orig","i","length","data","push","Rule","startState","pending","copyState","s","slice","stack","stream","pend","shift","pos","text","curState","rule","matches","sol","match","pop","indentation","indentUnit","apply","j","backUp","join","textAfter","dontIndentStates","doneIndentState","indexOf","rules","scan","dedentIfLineStart","m","exec","toRegex","val","caret","flags","RegExp","ignoreCase","source","String","asToken","replace","result"],"sourceRoot":""}