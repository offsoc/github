<%# rubocop:disable Lint/InstanceVariable %>
<% f = token_form %>
<%=
  f.text_group  "Note", :description,
    :autofocus   => true,
    :hint        => "Whatâ€™s this token for?",
    :error       => error_for(@access, :note),
    :class       => "wide"
%>

<div class="form">
  <% if expiration_enabled %>
    <%= render partial: "oauth_tokens/expiration_date_picker", locals: { f: f, access: @access } %>
  <% else %>
    <dl class="form-group required">
      <dt class="input-label">
        <span class="text-bold">Expiration</span>
      </dt>
      <dd>
        <p>
        <% if @access.expires_at %>
          <% if @access.expires_soon? %>
            <span class="color-fg-attention">
              This token expires <span class="text-semibold text-italic"><%= display_expiration_date(@access) %></span>.
            </span>
          <% elsif @access.expired? %>
            <span class="color-fg-attention">
              This token expired <span class="text-semibold text-italic"><%= display_expiration_date(@access) %></span>.
            </span>
          <% else %>
            This token expires <span class="text-semibold text-italic"><%= display_expiration_date(@access) %></span>.
          <% end %>
        <% else %>
          This token has no expiration date.
        <% end %>
        To set a new expiration date, you must <%= link_to "regenerate the token", regenerate_edit_settings_user_token_path(@access), class: "Link--inTextBlock" %>.
        </p>
      </dd>
    </dl>
  <% end %>

  <dl class="form-group">
    <dt><strong>Select scopes</strong></dt>
    <dd>
      <p>
        Scopes define the access for personal tokens. <a class="Link--inTextBlock" rel="noopener noreferrer" href="<%= GitHub.developer_help_url %>/apps/building-oauth-apps/scopes-for-oauth-apps/" target="_blank">Read more about OAuth scopes.</a>
      </p>
      <div class="Box Box--condensed">
        <ul>
          <%
            display_scopes = %w(
              repo
              workflow
              write:packages
              delete:packages
              admin:org
              admin:public_key
              admin:repo_hook
              admin:org_hook
              gist
              notifications
              user
              delete_repo
              write:discussion
              admin:enterprise
              audit_log
            )
            display_scopes.push("admin:pre_receive_hook") if GitHub.enterprise?
            display_scopes.push("site_admin") if current_user&.site_admin_scope_allowed?
            display_scopes.push("codespace") if current_user&.codespaces_feature_enabled?
            display_scopes.push("copilot") if !GitHub.enterprise?
            display_scopes.push("write:network_configurations") if !GitHub.enterprise?
            display_scopes.push("project") if GitHub.projects_new_enabled?
            display_scopes.push("admin:gpg_key")
            display_scopes.push("admin:ssh_signing_key")
          %>
          <% scopes = Api::AccessControl.scopes.slice(*display_scopes).values %>
          <%= render :partial => "oauth_tokens/scope", :collection => scopes, :as => :scope %>
        </ul>
      </div>
    </dd>
  </dl>
</div>
