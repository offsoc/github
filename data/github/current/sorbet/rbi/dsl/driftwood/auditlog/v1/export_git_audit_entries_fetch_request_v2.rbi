# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Driftwood::Auditlog::V1::ExportGitAuditEntriesFetchRequestV2`.
# Please instead update this file by running `bin/tapioca dsl Driftwood::Auditlog::V1::ExportGitAuditEntriesFetchRequestV2`.

class Driftwood::Auditlog::V1::ExportGitAuditEntriesFetchRequestV2
  sig do
    params(
      chunk_id: T.nilable(Integer),
      feature_flags: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      id: T.nilable(Integer),
      only_check_state: T.nilable(T::Boolean),
      region: T.nilable(Driftwood::Auditlog::V1::Region),
      token: T.nilable(String)
    ).void
  end
  def initialize(chunk_id: nil, feature_flags: T.unsafe(nil), id: nil, only_check_state: nil, region: nil, token: nil); end

  sig { returns(Integer) }
  def chunk_id; end

  sig { params(value: Integer).void }
  def chunk_id=(value); end

  sig { void }
  def clear_chunk_id; end

  sig { void }
  def clear_feature_flags; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_only_check_state; end

  sig { void }
  def clear_region; end

  sig { void }
  def clear_token; end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def feature_flags; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def feature_flags=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(T::Boolean) }
  def only_check_state; end

  sig { params(value: T::Boolean).void }
  def only_check_state=(value); end

  sig { returns(T.nilable(Driftwood::Auditlog::V1::Region)) }
  def region; end

  sig { params(value: T.nilable(Driftwood::Auditlog::V1::Region)).void }
  def region=(value); end

  sig { returns(String) }
  def token; end

  sig { params(value: String).void }
  def token=(value); end
end
