<% billable = copilot_business.copilot_billable? %>
<% error ||= nil %>

<% page_info title: title,
             selected_link: :business_copilot_settings %>

<%= render layout: "businesses/layout",
  locals: {
    business: this_business,
    title: title,
    container_attributes: "itemscope itemtype='http://schema.org/Business'"
  } do %>
  <% unless billable %>
    <%= render(Primer::Box.new(bg: :danger, border: true, border_radius: 3, border_color: :danger_emphasis, p: 2, pl: 3, mb: 3)) do |component| %>
      <%= render(
        partial: "businesses/copilot_settings/standalone_billing_error",
        locals: {
          has_azure_sub: copilot_business.billable_owner.customer&.azure_subscription_id.present?,
          is_metered_billable: copilot_business.__getobj__.enterprise_agreements.active.any?
        }
      ) %>
    <% end %>
  <% end %>

  <% if error.present? %>
    <%= render(Primer::Box.new(bg: :danger, border: true, border_radius: 3, border_color: :danger_emphasis, p: 3, mb: 3)) do |component| %>
      <%= render(Primer::Box.new(color: :danger, font_weight: :light)) do %>
        <%= render(Primer::Beta::Octicon.new(mr: 2, icon: :stop)) %>
        <%= error %>
      <% end %>
    <% end %>
  <% end %>

  <% if billable %>
    <%= render(Primer::Alpha::UnderlineNav.new(label: "Copilot Business navigation", mb: 3)) do |nav| %>
    <% nav.with_tab(
        href: settings_copilot_enterprise_path(this_business.slug, tab: "policies"),
        selected: tab == "policies"
      ) { "Policies" } %>
      <% nav.with_tab(
        href: settings_copilot_enterprise_path(this_business.slug, tab: "content-exclusion"),
        selected: tab == "content-exclusion"
      ) { "Content exclusion" } %>
    <% end %>

    <% if tab == "content-exclusion" %>
      <%= render_react_partial(name: "copilot-content-exclusion", ssr: false, props: { initialPayload: content_exclusions_partial_payload }) %>
    <% end %>

    <% if tab == "policies" %>
      <h3 class="text-normal pb-2">GitHub Copilot policies</h3>
      <%= render(Primer::Beta::Text.new(tag: :p, mb: 3, color: :muted)) do %>
        You can enable Copilot for this enterprise, manage policies and grant access to Copilot features for all members with access.<br>
      <% end %>

      <%= render(Copilot::Policies::StandaloneFormComponent.new(copilot_business)) %>

      <% unless copilot_business.copilot_disabled? %>
        <%= render partial: "businesses/copilot_settings/standalone_policies", locals: {
              business: this_business,
              copilot_business: copilot_business,
              features_for_data_retention: features_for_data_retention
        } %>
      <% end %>
    <% end %>
  <% end %>
<% end %>
