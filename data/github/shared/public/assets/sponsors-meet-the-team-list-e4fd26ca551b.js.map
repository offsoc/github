{"version":3,"file":"sponsors-meet-the-team-list-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/aria-live/aria-live.ts","ui/packages/get-os/get-os.ts","ui/packages/react-core/deferred-registry.ts","ui/packages/react-core/react-partial-anchor.ts","ui/packages/react-core/react-partial-registry.ts","ui/packages/react-core/ReactPartialElement.tsx","ui/packages/react-core/register-partial.ts","ui/packages/react-profiling-mode/src/index.ts","ui/packages/sponsors-meet-the-team-list/SponsorsMeetTheTeamItem.tsx","ui/packages/sponsors-meet-the-team-list/SponsorsMeetTheTeamList.tsx","ui/packages/sponsors-meet-the-team-list/sponsors-meet-the-team-list.ts","ui/packages/test-id-props/test-id-props.ts","ui/packages/use-client-value/use-client-value.ts","ui/packages/use-debounce/use-debounce.ts","ui/packages/use-layout-effect/use-layout-effect.ts","ui/packages/use-render-phase/use-render-phase.ts","ui/packages/use-tracking-ref/use-tracking-ref.ts","ui/packages/github-avatar/GitHubAvatar.tsx","ui/packages/keyboard-key/KeyboardKey.tsx","ui/packages/react-core/PartialRouter.tsx","ui/packages/react-core/PartialEntry.tsx","ui/packages/react-core/ReactBaseElement.tsx"],"sourcesContent":["import {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {\n  announce as liveRegionAnnounce,\n  announceFromElement as liveRegionAnnounceFromElement,\n} from '@primer/live-region-element'\n\nexport interface ElementWithAriaNotify extends Element {\n  ariaNotify: (\n    message: string,\n    options?: {interrupt?: 'none' | 'pending' | 'all'; priority?: 'none' | 'important'},\n  ) => void\n}\n\n/**\n * Troubleshooting guide for aria-live regions available on the Hub\n * - https://thehub.github.com/epd/engineering/dev-practicals/frontend/accessibility/readiness-routine/screenreaders/live-regions-and-focus-management-techniques/#why-isnt-my-live-region-working-as-i-expect\n */\n\n// Announce an element's text to the screen reader.\nexport function announceFromElement(el: HTMLElement, options?: {assertive?: boolean; element?: HTMLElement}) {\n  if (isFeatureEnabled('arianotify_comprehensive_migration')) {\n    announce(getTextContent(el), {...options, element: options?.element ?? el})\n  } else if (isFeatureEnabled('primer_live_region_element') && options?.element === undefined) {\n    liveRegionAnnounceFromElement(el, {\n      politeness: options?.assertive ? 'assertive' : 'polite',\n    })\n  } else {\n    announce(getTextContent(el), options)\n  }\n}\n\n// Announce message update to screen reader.\n// Note: Use caution when using this function while a dialog is active.\n// If the message is updated while the dialog is open, the screen reader may not announce the live region.\n// For more information, view the document on dialog and live region support: https://github.com/github/accessibility/blob/main/docs/dialog-live-region-support.md\nexport function announce(message: string, options?: {assertive?: boolean; element?: HTMLElement}) {\n  const {assertive, element} = options ?? {}\n\n  if (isFeatureEnabled('arianotify_comprehensive_migration') && 'ariaNotify' in Element.prototype) {\n    ;((element || document.body) as Element as ElementWithAriaNotify).ariaNotify(message, {\n      interrupt: options?.assertive ? 'all' : 'none',\n    })\n  } else if (isFeatureEnabled('primer_live_region_element') && element === undefined) {\n    liveRegionAnnounce(message, {\n      politeness: assertive ? 'assertive' : 'polite',\n    })\n  } else {\n    setContainerContent(message, assertive, element)\n  }\n}\n\n// Set aria-live container to message.\nfunction setContainerContent(message: string, assertive?: boolean, element?: HTMLElement) {\n  const getQuerySelector = () => {\n    return assertive ? '#js-global-screen-reader-notice-assertive' : '#js-global-screen-reader-notice'\n  }\n  const container = element ?? ssrSafeDocument?.querySelector(getQuerySelector())\n  if (!container) return\n  if (container.textContent === message) {\n    /* This is a hack due to the way the aria live API works.\n    A screen reader will not read a live region again\n    if the text is the same. Adding a space character tells\n    the browser that the live region has updated,\n    which will cause it to read again, but with no audible difference. */\n    container.textContent = `${message}\\u00A0`\n  } else {\n    container.textContent = message\n  }\n}\n\n// Gets the trimmed text content of an element.\nfunction getTextContent(el: HTMLElement): string {\n  // innerText does not contain hidden text\n  /* eslint-disable-next-line github/no-innerText */\n  return (el.getAttribute('aria-label') || el.innerText || '').trim()\n}\n","import type {NavigatorUA} from './@types/user-agent-data'\nimport {ssrSafeWindow} from '@github-ui/ssr-utils'\n\nexport type NavigatorUserAgent = NavigatorUA\n\nexport const OS = {\n  Android: 'Android',\n  iOS: 'iOS',\n  macOS: 'macOS',\n  Windows: 'Windows',\n  Linux: 'Linux',\n  Unknown: 'Unknown',\n}\nexport type OS = (typeof OS)[keyof typeof OS]\n\nexport type OSInformation = {\n  os: OS\n  isAndroid: boolean\n  isIOS: boolean\n  isLinux: boolean\n  isMacOS: boolean\n  isWindows: boolean\n  isDesktop: boolean\n  isMobile: boolean\n}\n\nexport function getOS(): OSInformation {\n  let os: OS = OS.Unknown\n  let isMobileOS = false\n  if (ssrSafeWindow) {\n    // TypeScript doesn't 'know' about userAgentData yet\n    const navigator = ssrSafeWindow.navigator as Navigator & NavigatorUA\n    const userAgent = navigator.userAgent\n    const platform = navigator?.userAgentData?.platform || navigator.platform\n    const macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K', 'macOS']\n    const windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE']\n    const iosPlatforms = ['iPhone', 'iPad', 'iPod']\n\n    if (macosPlatforms.indexOf(platform) !== -1) {\n      os = OS.macOS\n    } else if (iosPlatforms.indexOf(platform) !== -1) {\n      os = OS.iOS\n    } else if (windowsPlatforms.indexOf(platform) !== -1) {\n      os = OS.Windows\n    } else if (/Android/.test(userAgent)) {\n      os = OS.Android\n    } else if (/Linux/.test(platform)) {\n      os = OS.Linux\n    }\n    isMobileOS = navigator?.userAgentData?.mobile ?? (os === OS.Android || os === OS.iOS)\n  }\n\n  return {\n    os,\n    isAndroid: os === OS.Android,\n    isIOS: os === OS.iOS,\n    isMacOS: os === OS.macOS,\n    isWindows: os === OS.Windows,\n    isLinux: os === OS.Linux,\n    isDesktop: os === OS.macOS || os === OS.Windows || os === OS.Linux,\n    isMobile: isMobileOS,\n  }\n}\n\nexport function isMobile(): boolean {\n  return getOS().isMobile\n}\n\nexport function isDesktop(): boolean {\n  return getOS().isDesktop\n}\n\nexport function isAndroid(): boolean {\n  return getOS().isAndroid\n}\n\nexport function isIOS(): boolean {\n  return getOS().isIOS\n}\n\nexport function isMacOS(): boolean {\n  return getOS().isMacOS\n}\n\nexport function isWindows(): boolean {\n  return getOS().isWindows\n}\n\nexport function isLinux(): boolean {\n  return getOS().isLinux\n}\n","export class DeferredRegistry<T> {\n  private registrationEntries: Record<\n    string,\n    {\n      promise: Promise<T>\n      resolve?: (r: T) => void\n    }\n  > = {}\n\n  public register(name: string, registration: T) {\n    const entry = this.registrationEntries[name]\n    if (entry) {\n      entry.resolve?.(registration)\n    } else {\n      this.registrationEntries[name] = {\n        promise: Promise.resolve(registration),\n      }\n    }\n  }\n\n  public getRegistration(name: string): Promise<T> {\n    this.registrationEntries[name] ||= new Deferred()\n    return this.registrationEntries[name].promise\n  }\n}\n\nclass Deferred<T> {\n  declare promise\n  declare resolve: (r: T) => void\n\n  constructor() {\n    this.promise = new Promise<T>(resolve => {\n      this.resolve = resolve\n    })\n  }\n}\n","import type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {useCallback, useEffect, useRef, useState} from 'react'\n\ninterface ReactPartialAnchor {\n  /**\n   * DO NOT USE THIS PROPERTY DIRECTLY. It is meant to be used with useExternalAnchor and useOnAnchorClick\n   */\n  __wrapperElement: ReactPartialAnchorElement\n}\n\nexport interface ReactPartialAnchorProps {\n  reactPartialAnchor?: ReactPartialAnchor\n}\n\nexport function usePartialAnchorProps(\n  anchorElement: ReactPartialAnchorElement | undefined | null,\n): ReactPartialAnchorProps {\n  useEffect(() => {\n    const anchor = anchorElement?.anchor\n\n    if (!anchor) {\n      return\n    }\n\n    if ('disabled' in anchor) {\n      anchor.disabled = false\n    }\n    anchor.classList.remove('cursor-wait')\n  }, [anchorElement])\n\n  if (!anchorElement) {\n    return {}\n  }\n\n  return {\n    reactPartialAnchor: {\n      __wrapperElement: anchorElement,\n    },\n  }\n}\n\nexport function useExternalAnchor(reactPartialAnchor: ReactPartialAnchor) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor || null)\n  const [open, setOpen] = useState(false)\n\n  const onClick = useCallback(() => {\n    // toggle the open state when clicked\n    setOpen(!open)\n  }, [open, setOpen])\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    ref.current.setAttribute('aria-expanded', open.toString())\n    ref.current.setAttribute('aria-haspopup', 'true')\n  }, [ref, open])\n\n  useOnAnchorClick(reactPartialAnchor, onClick)\n\n  return {\n    ref,\n    open,\n    setOpen,\n  }\n}\n\nexport function useOnAnchorClick(reactPartialAnchor: ReactPartialAnchor, onClick: (event: MouseEvent) => void) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor)\n\n  useEffect(() => {\n    const element = ref.current\n    if (!element) {\n      return\n    }\n\n    element.addEventListener('click', onClick)\n    return () => element.removeEventListener('click', onClick)\n  }, [ref, onClick])\n}\n\nexport type PropsWithPartialAnchor<T> = T & Required<ReactPartialAnchorProps>\n","import {DeferredRegistry} from './deferred-registry'\n\nexport interface PartialRegistration {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Component: React.ComponentType<any>\n}\n\nexport const partialRegistry = new DeferredRegistry<PartialRegistration>()\n\nexport function getReactPartial(appName: string) {\n  return partialRegistry.getRegistration(appName)\n}\n","import {controller} from '@github/catalyst'\nimport {getReactPartial} from './react-partial-registry'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {ReactBaseElement} from './ReactBaseElement'\nimport {PartialEntry} from './PartialEntry'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\n\n// What is this silliness? Is it react or a web component?!\n// It's a web component we use to bootstrap react partials within the monolith.\n@controller\nclass ReactPartialElement extends ReactBaseElement<EmbeddedPartialData> {\n  nameAttribute = 'partial-name'\n\n  async getReactNode(embeddedData: EmbeddedPartialData) {\n    const {Component} = await getReactPartial(this.name)\n\n    // Some React Partials will be wrapped in a react-partial-anchor, which is used to conditionally render the Partial\n    const anchorElement = this.closest<ReactPartialAnchorElement>('react-partial-anchor')\n\n    return (\n      <PartialEntry\n        partialName={this.name}\n        embeddedData={embeddedData}\n        Component={Component}\n        wasServerRendered={this.hasSSRContent}\n        ssrError={this.ssrError}\n        anchorElement={anchorElement}\n      />\n    )\n  }\n}\n","import {partialRegistry, type PartialRegistration} from './react-partial-registry'\n// Import the web component to get it registered on the window\nimport './ReactPartialElement'\n\n// NOTE: if the signature of this method changes, also update the react-partial-name ESLint rule\n// /workspaces/github/ui/packages/eslint-plugin-github-monorepo/rules/react-partial-name.js\nexport function registerReactPartial(name: string, registration: PartialRegistration) {\n  partialRegistry.register(name, registration)\n}\n","import safeStorage from '@github-ui/safe-storage'\n\nconst {getItem, setItem, removeItem} = safeStorage('localStorage')\nconst REACT_PROFILING_ENABLED = 'REACT_PROFILING_ENABLED'\n\ninterface ReactProfilingModeMethods {\n  enable: () => void\n  disable: () => void\n  isEnabled: () => boolean\n}\n\nconst ReactProfilingMode: ReactProfilingModeMethods = {\n  enable: () => setItem(REACT_PROFILING_ENABLED, 'true'),\n  disable: () => removeItem(REACT_PROFILING_ENABLED),\n  isEnabled: () => !!getItem(REACT_PROFILING_ENABLED),\n}\n\nexport default ReactProfilingMode\n","import {DragAndDrop} from '@github-ui/drag-and-drop'\nimport {GitHubAvatar} from '@github-ui/github-avatar'\nimport {Box, Button, TextInput, type SxProp} from '@primer/react'\nimport {ArrowSwitchIcon} from '@primer/octicons-react'\nimport type {CSSProperties} from 'react'\n\nexport interface SponsorsListingFeaturedItem {\n  id: string\n  title: string\n  avatarUrl: string\n  description?: string | null\n  featureableId: string\n  profileName?: string | null\n}\n\ninterface SponsorsMeetTheTeamItemProps {\n  item: SponsorsListingFeaturedItem\n  index: number\n  isDragOverlay?: boolean\n}\n\nconst containerStyle: CSSProperties = {\n  border: '1px solid',\n  padding: '16px 4px',\n  borderRadius: '4px',\n  marginBottom: '8px',\n  display: 'flex',\n}\n\nconst itemStyles: React.CSSProperties = {\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n}\n\nconst boxSx: SxProp['sx'] = {\n  alignItems: 'center',\n  display: 'flex',\n  width: '100%',\n}\n\nexport function SponsorsMeetTheTeamItem({item, index, isDragOverlay}: SponsorsMeetTheTeamItemProps) {\n  return (\n    <DragAndDrop.Item\n      index={index}\n      id={item.id}\n      key={item.featureableId}\n      title={item.title}\n      containerStyle={containerStyle}\n      style={itemStyles}\n      isDragOverlay={isDragOverlay}\n    >\n      <Box sx={boxSx} data-testid={`sponsors-featured-user-${item.title}`}>\n        <GitHubAvatar size={50} sx={{mr: 3}} src={item.avatarUrl} />\n        <div className=\"flex-auto position-relative\">\n          <p>\n            <strong>{item.profileName} </strong>\n            <span className=\"color-fg-muted\">{item.title}</span>\n          </p>\n          <input\n            id={`featured_item_${item.id}`}\n            name=\"sponsors_listing[featured_users][][id]\"\n            type=\"hidden\"\n            value={item.id}\n          />\n          <input\n            id={`featured_user_${item.title}`}\n            name=\"sponsors_listing[featured_users][][featureable_id]\"\n            type=\"hidden\"\n            value={item.featureableId}\n          />\n          <TextInput\n            id={`featured_user_${item.title}`}\n            name=\"sponsors_listing[featured_users][][description]\"\n            defaultValue={item.description || ''}\n            aria-label={`${item.title} description`}\n            placeholder=\"Add a description (optional)\"\n            sx={{width: '100%'}}\n          />\n        </div>\n      </Box>\n      <DragAndDrop.MoveModalTrigger\n        Component={Button}\n        icon={ArrowSwitchIcon}\n        variant=\"invisible\"\n        aria-label={`move ${item.title} advanced`}\n      />\n    </DragAndDrop.Item>\n  )\n}\n\ntry{ SponsorsMeetTheTeamItem.displayName ||= 'SponsorsMeetTheTeamItem' } catch {}","import {useState} from 'react'\nimport {DragAndDrop, type OnDropArgs} from '@github-ui/drag-and-drop'\nimport {SponsorsMeetTheTeamItem, type SponsorsListingFeaturedItem} from './SponsorsMeetTheTeamItem'\n\nexport interface SponsorsMeetTheTeamListProps {\n  featuredItems: SponsorsListingFeaturedItem[]\n}\n\nexport function SponsorsMeetTheTeamList({featuredItems}: SponsorsMeetTheTeamListProps) {\n  const [items, setItems] = useState(featuredItems)\n  const onDrop = ({dragMetadata, dropMetadata, isBefore}: OnDropArgs<string>) => {\n    if (dragMetadata.id === dropMetadata?.id) return\n\n    const dragItem = items.find(item => item.id === dragMetadata.id)\n    if (!dragItem) return\n\n    setItems(\n      items.reduce((newItems, item) => {\n        if (dragItem.id === item.id) return newItems\n\n        if (item.id !== dropMetadata?.id) {\n          newItems.push(item)\n        } else if (isBefore) {\n          newItems.push(dragItem, item)\n        } else {\n          newItems.push(item, dragItem)\n        }\n\n        return newItems\n      }, [] as SponsorsListingFeaturedItem[]),\n    )\n  }\n\n  return (\n    <DragAndDrop\n      items={items}\n      onDrop={onDrop}\n      aria-label=\"Drag and drop list.\"\n      className=\"mb-4\"\n      renderOverlay={(item, index) => (\n        <SponsorsMeetTheTeamItem item={item} index={index} key={item.featureableId} isDragOverlay />\n      )}\n    >\n      {items.map((item, index) => (\n        <SponsorsMeetTheTeamItem item={item} index={index} key={item.featureableId} />\n      ))}\n    </DragAndDrop>\n  )\n}\n\ntry{ SponsorsMeetTheTeamList.displayName ||= 'SponsorsMeetTheTeamList' } catch {}","import {registerReactPartial} from '@github-ui/react-core/register-partial'\nimport {SponsorsMeetTheTeamList} from './SponsorsMeetTheTeamList'\n\nregisterReactPartial('sponsors-meet-the-team-list', {\n  Component: SponsorsMeetTheTeamList,\n})\n","export interface TestIdProps {\n  /** Test ID to be queried by automated testing suites */\n  'data-testid'?: string\n}\n\nexport const testIdProps = (value: string): TestIdProps => {\n  return {'data-testid': value}\n}\n","import {useCallback, useState, useRef, type DependencyList} from 'react'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n// eslint-disable-next-line no-restricted-imports\nimport {RenderPhase, useRenderPhase} from '@github-ui/use-render-phase'\n\ntype ClientValueCallback<T> = (previousValue?: T) => T\n\n/**\n * This hook allows reading browser-only values in an SSR / hydration safe manner while guaranteeing the minimum\n * number of re-renders during CSR.\n * - In CSR, this hook will resolve the `clientValueCallback` on first render.\n * - In SSR, the `serverValue` will be returned.\n * - Finally, after hydration, the `clientValueCallback` will be resolved.\n *\n * Note that between SSR and hydration, this can cause flashes of unhydrated content when server and client values\n * differ, however this hook will not result in hydration mismatch warnings and bugs.\n *\n * @see https://thehub.github.com/epd/engineering/dev-practicals/frontend/react/ssr/ssr-tools/#useclientvalue-source\n *\n * @example\n * const [origin, updateOrigin] = useClientValue(() => window.location.origin, 'github.com', [window?.location?.origin])\n *\n * @param clientValueCallback A function that returns the value to be used on the client.\n * @param serverValue A value to be used during SSR on the server.\n * @param deps A dependency array used to memoize the `clientValueCallback`.\n *         Note that if including a browser global in the array, be sure to check for it's existence\n *         (eg `window?.api?.value`) as it may not be available in SSR.\n * @returns  [\n *             `clientValue` (Either a browser-only value, or a server fallback),\\n\n *             `updateValue` (A function that can be used to update the `clientValue` by re-running the `clientValueCallback`)\n *           ]\n *\n * *Credit https://www.benmvp.com/blog/handling-react-server-mismatch-error/ for inspiration*\n */\nexport function useClientValue<T>(\n  clientValueCallback: ClientValueCallback<T>,\n  serverValue: T,\n  deps?: DependencyList,\n): [T, () => void]\nexport function useClientValue<T>(\n  clientValueCallback: ClientValueCallback<T>,\n  serverValue?: T,\n  deps?: DependencyList,\n): [T | undefined, () => void]\nexport function useClientValue<T>(\n  clientValueCallback: ClientValueCallback<T>,\n  serverValue?: T,\n  deps: DependencyList = [],\n) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const memoizedCallback = useCallback(clientValueCallback, deps)\n  const renderPhase = useRenderPhase()\n  const isCSRFirstRender = useRef(renderPhase === RenderPhase.ClientRender)\n\n  const [clientValue, setClientValue] = useState<T | undefined>(() => {\n    if (renderPhase === RenderPhase.ClientRender) return memoizedCallback()\n    return serverValue\n  })\n\n  const updateClientValue = useCallback(() => {\n    setClientValue(memoizedCallback)\n  }, [memoizedCallback])\n\n  useHydratedEffect(() => {\n    // in CSR on first render we've already set the value in the `useState` above\n    if (!isCSRFirstRender.current) {\n      setClientValue(memoizedCallback)\n    }\n    isCSRFirstRender.current = false\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [memoizedCallback, ...deps])\n\n  return [clientValue, updateClientValue]\n}\n","import {useTrackingRef} from '@github-ui/use-tracking-ref'\nimport debounce, {type DebouncedFunc, type DebounceSettings} from 'lodash-es/debounce'\nimport {useEffect, useMemo} from 'react'\n\nexport interface DebounceHookChangeSettings {\n  /**\n   * When the parameters (ie, the wait duration or any settings) are changed or the hook\n   * is unmounted, any pending trailing calls must be handled to avoid potential memory\n   * leaks. This parameter controls the handling strategy. This only has effect if\n   * `trailing` is `true`.\n   *\n   * Options are:\n   *\n   * - `flush` (default): Call pending calls immediately. May result in occasionally calling\n   *   more often than expected. This is the safest way to avoid losing data. If the callback\n   *   is async, care must be taken not to set state or perform other actions if not mounted\n   *   after awaiting.\n   * - `cancel`: Cancel pending calls. May result in dropping calls.\n   */\n  onChangeBehavior?: 'flush' | 'cancel'\n}\n\nexport type UseDebounceSettings = DebounceSettings & DebounceHookChangeSettings\n\n/**\n * Get a debounced version of the provided function. A debounced function will wait to be\n * called until `waitMs` milliseconds have passed since the last invocation. The result of\n * this hook is referentially stable with respect to `fn`, but will change if the other\n * parameters change.\n *\n * @see {@link debounce Lodash's debounce docs} for more details on available options.\n */\nexport const useDebounce = <Fn extends (...args: never[]) => unknown>(\n  fn: Fn,\n  waitMs: number,\n  {leading = false, maxWait, trailing = true, onChangeBehavior = 'flush'}: UseDebounceSettings = {},\n): DebouncedFunc<Fn> => {\n  const fnRef = useTrackingRef(fn)\n\n  const debouncedFn = useMemo(() => {\n    // It's not enough to set `maxWait` to `undefined` in the options object - it needs to not be `in`\n    // the object at all. See: https://github.com/lodash/lodash/issues/5495\n    // For `leading` and `trailing` we default to the default boolean values so they are fine.\n    const options = maxWait === undefined ? {leading, trailing} : {leading, trailing, maxWait}\n\n    return debounce((...args: Parameters<typeof fnRef.current>) => fnRef.current(...args), waitMs, options)\n  }, [fnRef, waitMs, leading, maxWait, trailing])\n\n  useEffect(\n    () => () => {\n      debouncedFn?.[onChangeBehavior]()\n    },\n    [debouncedFn, onChangeBehavior],\n  )\n\n  return debouncedFn\n}\n","import {ssrSafeWindow} from '@github-ui/ssr-utils'\n// eslint-disable-next-line no-restricted-imports\nimport {useEffect, useLayoutEffect as unsafe_useLayoutEffect} from 'react'\n\n/**\n * Provides a safe version of `useLayoutEffect` that calls to `useEffect` on the server.\n * This is useful for components that use `useLayoutEffect` but are rendered on the server,\n * since useLayoutEffect cannot run on the server and warns in that environment\n */\nexport const useLayoutEffect =\n  typeof ssrSafeWindow?.document?.createElement !== 'undefined' ? unsafe_useLayoutEffect : useEffect\n","import {RenderPhaseContext, RenderPhase} from '@github-ui/render-phase-provider'\nimport {useContext} from 'react'\n\n/**\n * @package\n *\n * Prefer `useClientValue` over this hook. You can think of it as \"environment sniffing\" vs \"feature detection\"\n * (with [similar considerations to browser sniffing](https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent#avoiding_user_agent_detection)):\n * `useClientValue` is a feature detection mechanism, whereas `useRenderPhase` is an environment sniffing mechanism.\n *\n * This hook allows you to determine what phase of rendering you are in:\n * - During SSR, there are three distinct phases of rendering: `ServerRender`, `ClientHydrate` and `ClientRender`.\n * - During CSR, there is only one phase: `ClientRender`.\n */\nexport function useRenderPhase() {\n  const renderPhase = useContext(RenderPhaseContext)\n  return renderPhase\n}\n\nexport {RenderPhase}\n","import {useLayoutEffect} from '@github-ui/use-layout-effect'\nimport {useRef} from 'react'\n\nexport function useTrackingRef<T>(value: T): React.MutableRefObject<T> {\n  const ref = useRef(value)\n\n  useLayoutEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref\n}\n","import {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {\n  // eslint-disable-next-line no-restricted-imports\n  Avatar,\n  type AvatarProps,\n} from '@primer/react'\nimport {forwardRef, useMemo} from 'react'\n\nexport type GitHubAvatarProps = AvatarProps\n\nexport const GitHubAvatar = forwardRef<HTMLImageElement, GitHubAvatarProps>(function GitHubAvatar(\n  {src, size = 20, ...otherProps}: GitHubAvatarProps,\n  ref,\n) {\n  const avatarUrl = useMemo(() => {\n    // src maybe be relative, e.g. `/mona.png`, in which case the instances main origin should be used,\n    // e.g. \"https://github.com\" for dotcom. If src is a fully quallified URL then the origin argument is ignored.\n    const url = new URL(src, ssrSafeLocation.origin)\n\n    // do not override size if it's already set as query parameter\n    if (!url.searchParams.has('size') && !url.searchParams.has('s')) {\n      // we double size for better rendering on high density pixel screens\n      url.searchParams.set('size', String(Number(size) * 2))\n    }\n\n    return url.toString()\n  }, [src, size])\n\n  return <Avatar ref={ref} src={avatarUrl} size={size} data-testid=\"github-avatar\" {...otherProps} />\n})\n\ntry{ GitHubAvatar.displayName ||= 'GitHubAvatar' } catch {}","import {Text} from '@primer/react'\nimport capitalize from 'lodash-es/capitalize'\nimport type {ReactNode} from 'react'\nimport {Fragment, memo} from 'react'\n\nimport {isMacOS} from '@github-ui/get-os'\n\nexport interface KeyboardKeyProps {\n  /**\n   * The keys involved in this shortcut. These should be the full names of the keys as would\n   * be returned by `KeyboardEvent.key` (e.g. \"Control\", \"Shift\", \"ArrowUp\", \"a\", etc.).\n   *\n   * Combine keys with the \"+\" character to form chords. To represent the \"+\" key, use \"Plus\".\n   *\n   * Combine chords/keys with \" \" to form sequences that should be pressed one after the other. For example, \"a b\"\n   * represents \"a then b\". To represent the \" \" key, use \"Space\".\n   *\n   * The fake key name \"Mod\" can be used to represent \"Command\" on macOS and \"Control\" on other platforms.\n   *\n   * See https://github.com/github/hotkey for format details.\n   */\n  keys: string\n  /**\n   * Control the display format. Condensed is most useful in menus and tooltips, while\n   * the full form is better for prose.\n   */\n  format?: KeyboardKeyFormat\n  /**\n   * Set to `onEmphasis` for display on emphasis colors.\n   */\n  variant?: KeyboardKeyVariant\n}\n\ntype KeyboardKeyFormat = 'condensed' | 'full'\n\ntype KeyboardKeyVariant = 'normal' | 'onEmphasis'\n\n// In the below records, we don't intend to cover every single possible key - only those that\n// would be realistically used in shortcuts. For example, the Pause/Break key is not necessary\n// because it is not found on many keyboards.\n\n/**\n * Short-form iconic versions of keys. These should be intuitive and match icons on keyboards.\n */\nconst condensedKeys: Record<string, string> = {\n  alt: isMacOS() ? '⌥' : 'Alt', // the alt key _is_ the option key on MacOS - in the browser there is no \"option\" key\n  control: '⌃',\n  shift: '⇧',\n  meta: isMacOS() ? '⌘' : 'Win',\n  mod: isMacOS() ? '⌘' : '⌃',\n  pageup: 'PgUp',\n  pagedown: 'PgDn',\n  arrowup: '↑',\n  arrowdown: '↓',\n  arrowleft: '←',\n  arrowright: '→',\n  plus: '+', // needed to allow +-separated key names\n  backspace: '⌫',\n  delete: 'Del',\n  space: '␣', // allow consumers to use the word \"Space\" even though it's not the browser key name, because it's more readable in props\n  tab: '⇥',\n  enter: '⏎',\n  escape: 'Esc',\n  function: 'Fn',\n  capslock: 'CapsLock',\n  insert: 'Ins',\n  printscreen: 'PrtScn',\n}\n\n/**\n * Specific key displays for 'full' format. We still do show some icons (ie punctuation)\n * because that's more intuitive, but for the rest of keys we show the standard key name.\n */\nconst fullKeys: Record<string, string> = {\n  alt: isMacOS() ? 'Option' : 'Alt',\n  mod: isMacOS() ? 'Command' : 'Control',\n  '+': 'Plus',\n  pageup: 'Page Up',\n  pagedown: 'Page Down',\n  arrowup: 'Up Arrow',\n  arrowdown: 'Down Arrow',\n  arrowleft: 'Left Arrow',\n  arrowright: 'Right Arrow',\n  capslock: 'Caps Lock',\n  printscreen: 'Print Screen',\n}\n\n/**\n * Accessible key names intended to be read by a screen reader. This prevents screen\n * readers from expressing punctuation in speech, ie, reading a long pause instead of the\n * word \"period\".\n */\nconst keyDescriptions: Record<string, string> = {\n  alt: isMacOS() ? 'option' : 'alt',\n  meta: isMacOS() ? 'command' : 'Windows',\n  mod: isMacOS() ? 'command' : 'control',\n  // Screen readers may not be able to pronounce concatenated words - this provides a better experience\n  pageup: 'page up',\n  pagedown: 'page down',\n  arrowup: 'up arrow',\n  arrowdown: 'down arrow',\n  arrowleft: 'left arrow',\n  arrowright: 'right arrow',\n  capslock: 'caps lock',\n  printscreen: 'print screen',\n  // We don't need to represent _every_ symbol - only those found on standard keyboards.\n  // Other symbols should be avoided as keyboard shortcuts anyway.\n  // These should match the colloqiual names of the keys, not the names of the symbols. Ie,\n  // \"Equals\" not \"Equal Sign\", \"Dash\" not \"Minus\", \"Period\" not \"Dot\", etc.\n  '`': 'backtick',\n  '~': 'tilde',\n  '!': 'exclamation point',\n  '@': 'at',\n  '#': 'hash',\n  $: 'dollar sign',\n  '%': 'percent',\n  '^': 'caret',\n  '&': 'ampersand',\n  '*': 'asterisk',\n  '(': 'left parenthesis',\n  ')': 'right parenthesis',\n  _: 'underscore',\n  '-': 'dash',\n  '+': 'plus',\n  '=': 'equals',\n  '[': 'left bracket',\n  '{': 'left curly brace',\n  ']': 'right bracket',\n  '}': 'right curly brace',\n  '\\\\': 'backslash',\n  '|': 'pipe',\n  ';': 'semicolon',\n  ':': 'colon',\n  \"'\": 'single quote',\n  '\"': 'double quote',\n  ',': 'comma',\n  '<': 'left angle bracket',\n  '.': 'period',\n  '>': 'right angle bracket',\n  '/': 'forward slash',\n  '?': 'question mark',\n  ' ': 'space',\n}\n\n/**\n * Consistent sort order for modifier keys. There should never be more than one non-modifier\n * key in a shortcut, so we don't need to worry about sorting those - we just put them at\n * the end.\n */\nconst keySortPriorities = {\n  control: 1,\n  meta: 2,\n  alt: 3,\n  option: 4,\n  shift: 5,\n  function: 6,\n  /** Maximum value for pushing other keys to end. */\n  DEFAULT: 7,\n} as const\n\nfunction isValidKeySortPriority(priority: string): priority is keyof typeof keySortPriorities {\n  return priority in keySortPriorities\n}\n\nfunction getKeySortPriorityValue(priority: string) {\n  if (isValidKeySortPriority(priority)) {\n    return keySortPriorities[priority]\n  }\n  return keySortPriorities.DEFAULT\n}\n\n/** `kbd` element with style resets. */\nconst Kbd = ({children}: {children: ReactNode}) => (\n  <Text\n    as=\"kbd\"\n    sx={{\n      color: 'inherit',\n      fontFamily: 'inherit',\n      fontSize: 'inherit',\n      border: 'none',\n      background: 'none',\n      boxShadow: 'none',\n      p: 0,\n      lineHeight: 'unset',\n      position: 'relative',\n      overflow: 'visible',\n      verticalAlign: 'baseline',\n    }}\n  >\n    {children}\n  </Text>\n)\n\ninterface KeyProps {\n  name: string\n  format: KeyboardKeyFormat\n}\n\nconst keyToAccessibleString = (name: string) => keyDescriptions[name] || name\n\n/** A single key in a shortcut. */\nconst Key = ({name, format}: KeyProps) => (\n  // We represent each individual key as a <kbd> inside a single container <kbd> element.\n  // This requires a bit more styling to override the defaults but is the most semantic way\n  // to do it:\n  //\n  //  > To describe an input comprised of multiple keystrokes, you can nest multiple <kbd>\n  //  > elements, with an outer <kbd> element representing the overall input and each\n  //  > individual keystroke or component of the input enclosed within its own <kbd>.\n  //  > (https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd#representing_keystrokes_within_an_input)\n  <>\n    <span className=\"sr-only\">{keyToAccessibleString(name)}</span>\n    <span aria-hidden>{(format === 'condensed' ? condensedKeys[name] : fullKeys[name]) ?? capitalize(name)}</span>\n  </>\n)\n\n/** Split and sort the chord keys in standard order. */\nconst splitChord = (chord: string) =>\n  chord\n    .split('+')\n    .map(k => k.toLowerCase())\n    .sort(compareLowercaseKeys)\n\nconst compareLowercaseKeys = (a: string, b: string) => getKeySortPriorityValue(a) - getKeySortPriorityValue(b)\n\nconst chordToAccessibleString = (chord: string) => splitChord(chord).map(keyToAccessibleString).join(' ')\n\nconst Chord = ({keys, format = 'condensed', variant = 'normal'}: KeyboardKeyProps) => (\n  <Text\n    sx={{\n      display: 'inline-flex',\n      bg: variant === 'onEmphasis' ? 'transparent' : 'canvas.default',\n      color: variant === 'onEmphasis' ? 'fg.onEmphasis' : 'fg.muted',\n      border: '1px solid',\n      borderColor: 'border.default',\n      borderRadius: 2,\n      fontWeight: 'normal',\n      fontFamily: 'normal',\n      fontSize: 0,\n      p: 1,\n      gap: '0.5ch',\n      boxShadow: 'none',\n      verticalAlign: 'baseline',\n      overflow: 'hidden',\n      lineHeight: '10px',\n    }}\n  >\n    {splitChord(keys).map((k, i) => (\n      <Fragment key={i}>\n        {i > 0 && format === 'full' ? (\n          <span aria-hidden> + </span> // hiding the plus sign helps screen readers be more concise\n        ) : (\n          ' ' // space is nonvisual due to flex layout but critical for labelling / screen readers\n        )}\n\n        <Key name={k} format={format} />\n      </Fragment>\n    ))}\n  </Text>\n)\n\nconst splitSequence = (sequence: string) => sequence.split(' ')\n\nconst sequenceToAccessibleString = (sequence: string) =>\n  splitSequence(sequence).map(chordToAccessibleString).join(', then ')\n\n/**\n * A consistent and accessible keyboard shortcut representation.\n */\n// KeyboardKey is a good candidate for memoizing since props will almost never change\nexport const KeyboardKey = memo(({keys, format = 'condensed', variant}: KeyboardKeyProps) => (\n  <Kbd>\n    {splitSequence(keys).map((c, i) => (\n      <Fragment key={i}>\n        {\n          //  Since we audibly separate individual keys in chord with space, we need some other separator for chords in a sequence\n          i > 0 && (\n            <>\n              <span className=\"sr-only\">, then</span>{' '}\n            </>\n          )\n        }\n        <Chord keys={c} format={format} variant={variant} />\n      </Fragment>\n    ))}\n  </Kbd>\n))\nKeyboardKey.displayName = 'KeyboardKey'\n\n/**\n * AVOID: `KeyboardKey` is nearly always sufficient for providing both visible and accessible keyboard hints, and will\n * result in a good screen reader experience when used as the target for `aria-describedby` and `aria-labelledby`.\n * However, there may be cases where we need a plain string version, such as when building `aria-label` or\n * `aria-description`. In that case, this plain string builder can be used instead.\n *\n * NOTE that this string should _only_ be used when building `aria-label` or `aria-description` props (never rendered\n * to the visible DOM!) and should nearly always also be paired with a visible hint for sighted users. The only\n * exception is in cases where keyboard shortcuts exist solely to provide accessible alternatives to inaccessible\n * visible UI.\n */\nexport const getAccessibleKeyboardKeyString = (keys: string) => sequenceToAccessibleString(keys)\n\ntry{ Kbd.displayName ||= 'Kbd' } catch {}\ntry{ Chord.displayName ||= 'Chord' } catch {}","import {useState} from 'react'\nimport type {BrowserHistory, MemoryHistory} from '@remix-run/router'\nimport {Router} from 'react-router-dom'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\ntype Props = {\n  children: React.ReactNode\n  history: BrowserHistory | MemoryHistory\n}\n\nexport function PartialRouter({children, history}: Props) {\n  const [state, setState] = useState({\n    location: history.location,\n  })\n\n  useHydratedEffect(() => history.listen(setState), [history])\n\n  return (\n    <Router location={state.location} navigator={history}>\n      {children}\n    </Router>\n  )\n}\n\ntry{ PartialRouter.displayName ||= 'PartialRouter' } catch {}","// Think of this as the entry point into the framework\nimport React from 'react'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {BaseProviders} from './BaseProviders'\nimport type {BrowserHistory} from '@remix-run/router'\nimport {createMemoryHistory} from '@remix-run/router'\nimport {AppContextProvider} from './AppContextProvider'\nimport {PartialRouter} from './PartialRouter'\nimport {CommonElements} from './CommonElements'\nimport {createBrowserHistory} from './create-browser-history'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {usePartialAnchorProps} from './react-partial-anchor'\n\ninterface Props {\n  partialName: string\n  embeddedData: EmbeddedPartialData\n  Component: React.ComponentType\n  wasServerRendered: boolean\n  ssrError?: HTMLScriptElement\n  anchorElement?: ReactPartialAnchorElement | null\n}\n\nexport function PartialEntry({\n  partialName,\n  embeddedData,\n  Component,\n  wasServerRendered,\n  ssrError,\n  anchorElement,\n}: Props) {\n  // Create a ref to track the browser history:\n  const historyRef = React.useRef<BrowserHistory>()\n  const window = globalThis.window as Window | undefined\n\n  // For linking to work, we can just pass a dummy pathname here. We may consider plumbing the actual path in\n  if (!historyRef.current) {\n    historyRef.current = !window\n      ? createMemoryHistory({initialEntries: [{pathname: '/'}]})\n      : createBrowserHistory({window})\n  }\n  const history = historyRef.current\n  const partialAnchorProps = usePartialAnchorProps(anchorElement)\n\n  // Wrap the partial in an AppContextProvider and static Router so that react-core links\n  // will be functional.\n  return (\n    <BaseProviders appName={partialName} wasServerRendered={wasServerRendered}>\n      <AppContextProvider history={history} routes={[]}>\n        <PartialRouter history={history}>\n          <Component {...embeddedData.props} {...(partialAnchorProps as object)} />\n          <CommonElements ssrError={ssrError} />\n        </PartialRouter>\n      </AppContextProvider>\n    </BaseProviders>\n  )\n}\n\ntry{ PartialEntry.displayName ||= 'PartialEntry' } catch {}","import {target} from '@github/catalyst'\nimport {createRoot, hydrateRoot} from 'react-dom/client'\nimport type {createRoot as createRootType, hydrateRoot as hydrateRootType, Root} from 'react-dom/client'\nimport React from 'react'\nimport ReactProfilingMode from '@github-ui/react-profiling-mode'\nimport {EXPECTED_ERRORS} from './expected-errors'\nimport {sendStats} from '@github-ui/stats'\n\ntype ReactDOM = {\n  createRoot: typeof createRootType\n  hydrateRoot: typeof hydrateRootType\n}\n\nconst REACT_INVARIANT_ERROR_REGEX = /Minified React error #(?<invariant>\\d+)/\n\nexport abstract class ReactBaseElement<T> extends HTMLElement {\n  @target embeddedData: HTMLScriptElement | undefined\n  @target ssrError: HTMLScriptElement | undefined\n  @target reactRoot: HTMLElement | undefined\n  private root: Root | undefined\n\n  abstract nameAttribute: string\n  abstract getReactNode(embeddedData: T): Promise<React.ReactNode>\n\n  protected get name() {\n    return this.getAttribute(this.nameAttribute) as string\n  }\n\n  private get embeddedDataText() {\n    const text = this.embeddedData?.textContent\n\n    if (!text) {\n      throw new Error(`No embedded data provided for react element ${this.name}`)\n    }\n\n    return text\n  }\n\n  get hasSSRContent() {\n    return this.getAttribute('data-ssr') === 'true'\n  }\n\n  connectedCallback() {\n    this.renderReact()\n  }\n\n  disconnectedCallback() {\n    this.root?.unmount()\n    this.root = undefined\n  }\n\n  private async renderReact() {\n    if (!this.reactRoot) throw new Error('No react root provided')\n    let reactDom: ReactDOM = {\n      createRoot,\n      hydrateRoot,\n    }\n\n    // Override the react-dom import if we're in profiling mode\n    if (ReactProfilingMode.isEnabled()) {\n      reactDom = await this.getReactDomWithProfiling()\n    }\n\n    const embeddedData = JSON.parse(this.embeddedDataText) as T\n    const ssrErrorText = this.ssrError?.textContent\n    const node = await this.getReactNode(embeddedData)\n    const baseNode = <React.StrictMode>{node}</React.StrictMode>\n\n    if (ssrErrorText) {\n      this.logSSRError(ssrErrorText)\n    }\n\n    if (this.hasSSRContent) {\n      /**\n       * Styled-components automatically looks for style tags to hydrate on first page load, but will not detect them\n       * if they are added after the initial page load. This causes a hydration error because React isn't expecting\n       * a style tag within the app. To work around this, we need to manually move the style tags to the head before\n       * hydrating the app.\n       *\n       * During hydration, styled-components will create a new style tag which matches the one we moved to the head.\n       * This means that after hydration, we can safely remove the style tag we manually moved to the head.\n       */\n      const styles = this.querySelector('style[data-styled=\"true\"]')\n      if (styles) document.head.appendChild(styles)\n\n      // Hydrate the react app\n      // onRecoverableError is disabled until we have a react version with this fix in:\n      // https://github.com/facebook/react/pull/25692\n      this.root = reactDom.hydrateRoot(this.reactRoot, baseNode, {\n        onRecoverableError: error => {\n          if (!(error instanceof Error)) return\n\n          const match = REACT_INVARIANT_ERROR_REGEX.exec(error.message)\n          const invariant = String(match?.groups?.invariant)\n\n          sendStats({\n            incrementKey: 'REACT_HYDRATION_ERROR',\n            incrementTags: {\n              appName: this.name,\n              invariant,\n            },\n          })\n        },\n      })\n\n      // Remove the manually moved style tag after hydration\n      if (styles) {\n        // Wait until things are idle to remove the style tag. If we do it immediately, we can cause a flash of unstyled content.\n        requestIdleCallback(() => {\n          // styles could have already been removed by Turbo if a navigation happens quickly. Only remove it from the DOM if it's still there.\n          styles.parentElement?.removeChild(styles)\n        })\n      }\n    } else {\n      this.root = reactDom.createRoot(this.reactRoot)\n      this.root.render(baseNode)\n    }\n\n    this.classList.add('loaded')\n  }\n\n  private getReactDomWithProfiling() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return import('react-dom/profiling') as any as Promise<ReactDOM>\n  }\n\n  private logSSRError(ssrErrorText: string) {\n    if (EXPECTED_ERRORS[ssrErrorText]) {\n      // eslint-disable-next-line no-console\n      return console.error('SSR failed with an expected error:', EXPECTED_ERRORS[ssrErrorText])\n    }\n\n    try {\n      const error = JSON.parse(ssrErrorText) as PlatformJavascriptError\n      const stacktrace = parseFailbotStacktrace(error)\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', `${error.type}: ${error.value}\\n`, error, stacktrace)\n    } catch {\n      /**\n       * In the event we couldn't log the error, we should not break the application\n       */\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', ssrErrorText, 'unable to parse as json')\n    }\n  }\n}\n\nfunction parseFailbotStacktrace(error: PlatformJavascriptError) {\n  if (!error.stacktrace) return ''\n  let prefix = '\\n '\n  const stack = error.stacktrace.map((frame: PlatformStackframe) => {\n    const {function: func, filename, lineno, colno} = frame\n    const line = `${prefix} at ${func} (${filename}:${lineno}:${colno})`\n    prefix = ' '\n    return line\n  })\n  return stack.join('\\n')\n}\n\ntry{ REACT_INVARIANT_ERROR_REGEX.displayName ||= 'REACT_INVARIANT_ERROR_REGEX' } catch {}"],"names":["announceFromElement","el","options","isFeatureEnabled","announce","getTextContent","element","undefined","liveRegionAnnounceFromElement","politeness","assertive","message","Element","prototype","document","body","ariaNotify","interrupt","liveRegionAnnounce","setContainerContent","container","ssrSafeDocument","querySelector","textContent","getAttribute","innerText","trim","OS","Android","iOS","macOS","Windows","Linux","Unknown","isMacOS","getOS","os","isMobileOS","ssrSafeWindow","navigator","userAgent","platform","userAgentData","macosPlatforms","indexOf","iosPlatforms","windowsPlatforms","test","mobile","isAndroid","isIOS","isWindows","isLinux","isDesktop","isMobile","DeferredRegistry","register","name","registration","entry","registrationEntries","resolve","promise","Promise","getRegistration","Deferred","constructor","usePartialAnchorProps","anchorElement","useEffect","anchor","disabled","classList","remove","reactPartialAnchor","__wrapperElement","useExternalAnchor","ref","useRef","open","setOpen","useState","onClick","useCallback","current","setAttribute","toString","useOnAnchorClick","addEventListener","removeEventListener","partialRegistry","ReactPartialElement","ReactBaseElement","getReactNode","embeddedData","appName","Component","closest","PartialEntry","partialName","wasServerRendered","hasSSRContent","ssrError","nameAttribute","registerReactPartial","controller","getItem","setItem","removeItem","safeStorage","REACT_PROFILING_ENABLED","enable","disable","isEnabled","containerStyle","border","padding","borderRadius","marginBottom","display","itemStyles","alignItems","width","boxSx","SponsorsMeetTheTeamItem","item","index","isDragOverlay","DragAndDrop","Item","id","title","style","Box","sx","data-testid","GitHubAvatar","size","mr","src","avatarUrl","div","className","p","strong","profileName","span","input","type","value","featureableId","TextInput","defaultValue","description","aria-label","placeholder","MoveModalTrigger","Button","icon","ArrowSwitchIcon","variant","displayName","SponsorsMeetTheTeamList","featuredItems","items","setItems","onDrop","dragMetadata","dropMetadata","isBefore","dragItem","find","reduce","newItems","push","renderOverlay","map","testIdProps","useClientValue","clientValueCallback","serverValue","deps","memoizedCallback","renderPhase","useRenderPhase","isCSRFirstRender","RenderPhase","ClientRender","clientValue","setClientValue","updateClientValue","useHydratedEffect","useDebounce","fn","waitMs","leading","maxWait","trailing","onChangeBehavior","fnRef","useTrackingRef","debouncedFn","useMemo","debounce","args","useLayoutEffect","createElement","unsafe_useLayoutEffect","useContext","RenderPhaseContext","forwardRef","otherProps","url","URL","ssrSafeLocation","origin","searchParams","has","set","String","Number","Avatar","condensedKeys","alt","control","shift","meta","mod","pageup","pagedown","arrowup","arrowdown","arrowleft","arrowright","plus","backspace","delete","space","tab","enter","escape","function","capslock","insert","printscreen","fullKeys","keyDescriptions","$","_","keySortPriorities","option","DEFAULT","getKeySortPriorityValue","priority","Kbd","children","Text","as","color","fontFamily","fontSize","background","boxShadow","lineHeight","position","overflow","verticalAlign","keyToAccessibleString","Key","format","aria-hidden","capitalize","splitChord","chord","split","k","toLowerCase","sort","compareLowercaseKeys","a","b","Chord","keys","bg","borderColor","fontWeight","gap","i","Fragment","splitSequence","sequence","KeyboardKey","memo","c","PartialRouter","history","state","setState","location","listen","Router","historyRef","React","window","globalThis","createBrowserHistory","createMemoryHistory","initialEntries","pathname","partialAnchorProps","BaseProviders","AppContextProvider","routes","props","CommonElements","REACT_INVARIANT_ERROR_REGEX","HTMLElement","embeddedDataText","text","connectedCallback","renderReact","disconnectedCallback","root","unmount","reactRoot","reactDom","createRoot","hydrateRoot","ReactProfilingMode","getReactDomWithProfiling","JSON","parse","ssrErrorText","node","baseNode","logSSRError","styles","head","appendChild","onRecoverableError","error","Error","match","exec","invariant","groups","sendStats","incrementKey","incrementTags","requestIdleCallback","parentElement","removeChild","render","add","EXPECTED_ERRORS","console","stacktrace","parseFailbotStacktrace","prefix","stack","func","filename","lineno","colno","frame","line","join","target"],"sourceRoot":""}