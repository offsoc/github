{"version":3,"file":"ui_packages_ref-selector_RefSelector_tsx-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/ref-selector/search-index.ts","ui/packages/use-client-value/use-client-value.ts","ui/packages/use-render-phase/use-render-phase.ts","ui/packages/ref-selector/FixedSizeVirtualList.tsx","ui/packages/ref-selector/HighlightedText.tsx","ui/packages/ref-selector/CheckTagNameDialog.tsx","ui/packages/ref-selector/check-tag-exists.tsx","ui/packages/ref-selector/create-branch.tsx","ui/packages/ref-selector/RefSelectorAnchoredOverlay.tsx","ui/packages/ref-selector/RefSelectorFooter.tsx","ui/packages/ref-selector/RefItem.tsx","ui/packages/ref-selector/RefsList.tsx","ui/packages/ref-selector/use-refs.ts","ui/packages/ref-selector/RefSelectorV1.tsx","ui/packages/ref-selector/RefSelector.tsx"],"sourcesContent":["import safeStorage from '@github-ui/safe-storage'\nimport {sendStats} from '@github-ui/stats'\n\nconst {getItem, setItem, removeItem} = safeStorage('localStorage', {throwQuotaErrorsOnSet: true})\n\nexport enum RefType {\n  Branch = 'branch',\n  Tag = 'tag',\n}\n\n// the SearchIndex needs to be able to tell the element that owns it to\n// re-render, so it holds a reference to it and just calls render().  This is\n// the minimal interface for an object which owns a SearchIndex.\nexport interface Renderer {\n  render(): void\n}\n\n// The shape of a response from refs_branch_list_path, and of the payload we\n// store in localstorage.\ninterface RefResponse {\n  refs: string[]\n  cacheKey: string // an opaque string representing the freshness of the ref list\n}\n\n// Stores a list of refs for local search with remote backfill.\nexport class SearchIndex {\n  refType: RefType\n\n  // A reference to the parent RefSelectorElement\n  selector: Renderer\n\n  // The items we have in memory.\n  knownItems: string[] = []\n\n  // items in knownItems matching the current query\n  currentSearchResult: string[] = []\n\n  // does the current search match an item exactly?\n  exactMatchFound = false\n\n  // The string currently being used to search\n  searchTerm = ''\n\n  // URL to retrieve ref data from\n  refEndpoint: string\n\n  // A key used to represent the freshness of any given (possibly partial) list of refs.\n  cacheKey: string\n\n  // NWO for the repo on this page\n  nameWithOwner: string\n\n  // State flags\n  isLoading = true\n  fetchInProgress = false\n  fetchFailed = false\n\n  static LocalStoragePrefix = 'ref-selector'\n\n  constructor(refType: RefType, selector: Renderer, refEndpoint: string, cacheKey: string, nameWithOwner: string) {\n    this.refType = refType\n    this.selector = selector\n    this.refEndpoint = refEndpoint\n    this.cacheKey = cacheKey\n    this.nameWithOwner = nameWithOwner\n  }\n\n  render() {\n    this.selector.render()\n  }\n\n  async fetchData() {\n    try {\n      // Don't do anything if we're already loaded or AJAX is in flight.\n      if (!this.isLoading || this.fetchInProgress) return\n      if (!this.bootstrapFromLocalStorage()) {\n        this.fetchInProgress = true\n        this.fetchFailed = false\n        const response = await fetch(`${this.refEndpoint}?type=${this.refType}`, {\n          headers: {Accept: 'application/json'},\n        })\n        await this.processResponse(response)\n      }\n      this.isLoading = false\n      this.fetchInProgress = false\n      this.render()\n    } catch (_) {\n      this.fetchInProgress = false\n      this.fetchFailed = true\n    }\n  }\n\n  // Store newly received data and update bookkeeping structures\n  async processResponse(response: Response) {\n    this.emitStats(response)\n    if (!response.ok) {\n      this.fetchFailed = true\n      return\n    }\n    const lsClone = response.clone() // avoid double-reading Response\n    const decoded = (await response.json()) as RefResponse\n    this.knownItems = decoded.refs\n    this.cacheKey = decoded.cacheKey\n    this.flushToLocalStorage(await lsClone.text())\n  }\n\n  emitStats(response: Response) {\n    if (!response.ok) {\n      sendStats({incrementKey: 'REF_SELECTOR_BOOT_FAILED'}, true)\n      return\n    }\n    switch (response.status) {\n      case 200: {\n        sendStats({incrementKey: 'REF_SELECTOR_BOOTED_FROM_UNCACHED_HTTP'})\n        break\n      }\n      case 304: {\n        sendStats({incrementKey: 'REF_SELECTOR_BOOTED_FROM_HTTP_CACHE'})\n        break\n      }\n      default: {\n        // I doubt this should ever be triggered since we already know the\n        // request is ok, but just here to have an exhaustive switch statement\n        sendStats({incrementKey: 'REF_SELECTOR_UNEXPECTED_RESPONSE'})\n      }\n    }\n  }\n\n  // Perform a substring search for the given query among all known items.\n  // Prefix-matches should be sorted before other substring matches.\n  //\n  // We could consider maintaining a fancier data structure to make this search\n  // faster, but that would make bootstrapping more expensive and at any rate\n  // profiling shows this naive approach is not a bottleneck for real world\n  // numbers of branches (~X0,000)\n  search(query: string) {\n    this.searchTerm = query\n    if (query === '') {\n      this.currentSearchResult = this.knownItems\n      return\n    }\n    const result: string[] = []\n    const prefixes: string[] = []\n    this.exactMatchFound = false\n    let pos\n    for (const ref of this.knownItems) {\n      pos = ref.indexOf(query)\n      if (pos < 0) continue\n      if (pos === 0) {\n        if (query === ref) {\n          // exact match first\n          prefixes.unshift(ref)\n          this.exactMatchFound = true\n        } else {\n          // sort prefix matches before other matches\n          prefixes.push(ref)\n        }\n        continue\n      }\n      result.push(ref)\n    }\n    this.currentSearchResult = [...prefixes, ...result]\n  }\n\n  // Try to init state from localstorage if a fresh state exists there.\n  // This lets us reuse AJAX requests made on previous page loads as long as\n  // the repo state hasn't changed.\n  // Returns a boolean indicating succcess or failure\n  bootstrapFromLocalStorage(): boolean {\n    const storedData = getItem(this.localStorageKey)\n    if (!storedData) {\n      return false\n    }\n    const payload: RefResponse = JSON.parse(storedData)\n    if (payload.cacheKey !== this.cacheKey || !('refs' in payload)) {\n      // stored data is stale or malformed, discard it\n      removeItem(this.localStorageKey)\n      return false\n    }\n    // Our stored data is valid, use it\n    this.knownItems = payload.refs\n    this.isLoading = false\n    sendStats({incrementKey: 'REF_SELECTOR_BOOTED_FROM_LOCALSTORAGE'})\n    return true\n  }\n\n  // Store our state at a cache-tied LS key so future selectors\n  // can bootstrap without AJAX if the repo state is fresh.\n  async flushToLocalStorage(serverResponse: string) {\n    try {\n      setItem(this.localStorageKey, serverResponse)\n    } catch (e) {\n      // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n      if (e.message.toLowerCase().includes('quota')) {\n        // we violated LS quota, clear storage for all ref selectors and try again\n        this.clearSiblingLocalStorage()\n        sendStats({incrementKey: 'REF_SELECTOR_LOCALSTORAGE_OVERFLOWED'})\n        try {\n          setItem(this.localStorageKey, serverResponse)\n        } catch (err2) {\n          // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n          if (err2.message.toLowerCase().includes('quota')) {\n            sendStats({incrementKey: 'REF_SELECTOR_LOCALSTORAGE_GAVE_UP'})\n          }\n        }\n      } else {\n        throw e // some other error, let it bubble\n      }\n    }\n  }\n\n  // Clear the LocalStorage entries associated with all instances of this class (i.e. for all repos)\n  clearSiblingLocalStorage() {\n    for (const key of Object.keys(localStorage)) {\n      if (key.startsWith(SearchIndex.LocalStoragePrefix)) {\n        removeItem(key)\n      }\n    }\n  }\n\n  // Clear the LocalStorage entry for this instance\n  clearLocalStorage() {\n    removeItem(this.localStorageKey)\n  }\n\n  get localStorageKey(): string {\n    return `${SearchIndex.LocalStoragePrefix}:${this.nameWithOwner}:${this.refType}`\n  }\n}\n","import {useCallback, useState, useRef, type DependencyList} from 'react'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n// eslint-disable-next-line no-restricted-imports\nimport {RenderPhase, useRenderPhase} from '@github-ui/use-render-phase'\n\ntype ClientValueCallback<T> = (previousValue?: T) => T\n\n/**\n * This hook allows reading browser-only values in an SSR / hydration safe manner while guaranteeing the minimum\n * number of re-renders during CSR.\n * - In CSR, this hook will resolve the `clientValueCallback` on first render.\n * - In SSR, the `serverValue` will be returned.\n * - Finally, after hydration, the `clientValueCallback` will be resolved.\n *\n * Note that between SSR and hydration, this can cause flashes of unhydrated content when server and client values\n * differ, however this hook will not result in hydration mismatch warnings and bugs.\n *\n * @see https://thehub.github.com/epd/engineering/dev-practicals/frontend/react/ssr/ssr-tools/#useclientvalue-source\n *\n * @example\n * const [origin, updateOrigin] = useClientValue(() => window.location.origin, 'github.com', [window?.location?.origin])\n *\n * @param clientValueCallback A function that returns the value to be used on the client.\n * @param serverValue A value to be used during SSR on the server.\n * @param deps A dependency array used to memoize the `clientValueCallback`.\n *         Note that if including a browser global in the array, be sure to check for it's existence\n *         (eg `window?.api?.value`) as it may not be available in SSR.\n * @returns  [\n *             `clientValue` (Either a browser-only value, or a server fallback),\\n\n *             `updateValue` (A function that can be used to update the `clientValue` by re-running the `clientValueCallback`)\n *           ]\n *\n * *Credit https://www.benmvp.com/blog/handling-react-server-mismatch-error/ for inspiration*\n */\nexport function useClientValue<T>(\n  clientValueCallback: ClientValueCallback<T>,\n  serverValue: T,\n  deps?: DependencyList,\n): [T, () => void]\nexport function useClientValue<T>(\n  clientValueCallback: ClientValueCallback<T>,\n  serverValue?: T,\n  deps?: DependencyList,\n): [T | undefined, () => void]\nexport function useClientValue<T>(\n  clientValueCallback: ClientValueCallback<T>,\n  serverValue?: T,\n  deps: DependencyList = [],\n) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const memoizedCallback = useCallback(clientValueCallback, deps)\n  const renderPhase = useRenderPhase()\n  const isCSRFirstRender = useRef(renderPhase === RenderPhase.ClientRender)\n\n  const [clientValue, setClientValue] = useState<T | undefined>(() => {\n    if (renderPhase === RenderPhase.ClientRender) return memoizedCallback()\n    return serverValue\n  })\n\n  const updateClientValue = useCallback(() => {\n    setClientValue(memoizedCallback)\n  }, [memoizedCallback])\n\n  useHydratedEffect(() => {\n    // in CSR on first render we've already set the value in the `useState` above\n    if (!isCSRFirstRender.current) {\n      setClientValue(memoizedCallback)\n    }\n    isCSRFirstRender.current = false\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [memoizedCallback, ...deps])\n\n  return [clientValue, updateClientValue]\n}\n","import {RenderPhaseContext, RenderPhase} from '@github-ui/render-phase-provider'\nimport {useContext} from 'react'\n\n/**\n * @package\n *\n * Prefer `useClientValue` over this hook. You can think of it as \"environment sniffing\" vs \"feature detection\"\n * (with [similar considerations to browser sniffing](https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent#avoiding_user_agent_detection)):\n * `useClientValue` is a feature detection mechanism, whereas `useRenderPhase` is an environment sniffing mechanism.\n *\n * This hook allows you to determine what phase of rendering you are in:\n * - During SSR, there are three distinct phases of rendering: `ServerRender`, `ClientHydrate` and `ClientRender`.\n * - During CSR, there is only one phase: `ClientRender`.\n */\nexport function useRenderPhase() {\n  const renderPhase = useContext(RenderPhaseContext)\n  return renderPhase\n}\n\nexport {RenderPhase}\n","import {Box, type SxProp} from '@primer/react'\nimport React, {useCallback, useRef} from 'react'\nimport {useVirtual, type VirtualItem} from 'react-virtual'\n\ninterface FixedSizeVirtualizedListProps<T> {\n  items: T[]\n  itemHeight: number\n  renderItem: (item: T) => React.ReactNode\n  makeKey: (item: T) => string\n  sx?: SxProp['sx']\n}\n\ntype Virtualizer = ReturnType<typeof useVirtual>\n\nexport function FixedSizeVirtualList<T>({\n  items,\n  itemHeight,\n  sx,\n  renderItem,\n  makeKey,\n}: FixedSizeVirtualizedListProps<T>) {\n  const parentRef = useRef<HTMLDivElement>(null)\n  const estimateSize = useCallback(() => itemHeight, [itemHeight])\n  const virtualizer = useVirtual({\n    parentRef,\n    size: items.length,\n    estimateSize,\n  })\n\n  return (\n    <ListContainer ref={parentRef} sx={sx} virtualizer={virtualizer}>\n      {virtualizer.virtualItems.map(virtualRow => (\n        <ItemContainer key={makeKey(items[virtualRow.index]!)} virtualRow={virtualRow}>\n          {renderItem(items[virtualRow.index]!)}\n        </ItemContainer>\n      ))}\n    </ListContainer>\n  )\n}\n\nconst ListContainer = React.forwardRef<\n  HTMLDivElement,\n  React.PropsWithChildren<{virtualizer: Virtualizer; sx: SxProp['sx']}>\n>(function VirtualListContainerInner({children, sx, virtualizer}, forwardedRef) {\n  // Note: both of these containers are necesary\n  return (\n    <Box ref={forwardedRef} sx={sx}>\n      <Box sx={{height: virtualizer.totalSize, width: '100%', position: 'relative'}}>{children}</Box>\n    </Box>\n  )\n})\n\nfunction ItemContainer({children, virtualRow}: React.PropsWithChildren<{virtualRow: VirtualItem}>) {\n  // Note: all of these styles are necessary. Each item must be\n  // absolutely positioned and moved around with a css transform or\n  // else the list virtualization will not work.\n  return (\n    <Box\n      sx={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: `${virtualRow.size}px`,\n        transform: `translateY(${virtualRow.start}px)`,\n      }}\n    >\n      {children}\n    </Box>\n  )\n}\n\ntry{ FixedSizeVirtualList.displayName ||= 'FixedSizeVirtualList' } catch {}\ntry{ VirtualListContainerInner.displayName ||= 'VirtualListContainerInner' } catch {}\ntry{ ItemContainer.displayName ||= 'ItemContainer' } catch {}","import {Box} from '@primer/react'\n\nfunction splitTextBySearchTerm(text: string, search: string) {\n  if (!search) {\n    return [text]\n  }\n\n  const splitLowercase = text.toLowerCase().split(search.toLowerCase())\n  if (splitLowercase.length < 2) {\n    return [text]\n  }\n\n  let idx = 0\n  const out = []\n  for (const component of splitLowercase) {\n    out.push(text.substring(idx, idx + component.length))\n    idx += component.length\n    out.push(text.substring(idx, idx + search.length))\n    idx += search.length\n  }\n  return out\n}\n/**\n * @param text the text to highlight\n * @param search the search term to highlight within the text\n * @param hideOverflow\n * @returns safe HTML that has the search term highlighted within the text of the provided text\n * parameter\n */\nexport function HighlightedText({\n  text,\n  search,\n  hideOverflow = false,\n  overflowWidth = 0,\n}: {\n  text: string\n  search: string\n  hideOverflow?: boolean\n  overflowWidth?: number\n}) {\n  const segments = splitTextBySearchTerm(text, search)\n  const nodes = segments.map((segment, index) =>\n    index % 2 === 1 ? (\n      <strong className=\"color-fg-default\" key={index}>\n        {segment}\n      </strong>\n    ) : (\n      segment\n    ),\n  )\n  const overflowVal = hideOverflow ? 'hidden' : 'visible'\n  const overflowWidthVal = overflowWidth ? `${overflowWidth}px` : undefined\n\n  return (\n    <Box\n      sx={{\n        maxWidth: overflowWidthVal,\n        overflow: overflowVal,\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        color: search.length ? 'fg.muted' : 'fg.default',\n      }}\n    >\n      {nodes}\n    </Box>\n  )\n}\n\ntry{ HighlightedText.displayName ||= 'HighlightedText' } catch {}","import {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {useClientValue} from '@github-ui/use-client-value'\nimport {Box, Button, Dialog} from '@primer/react'\nimport {createPortal} from 'react-dom'\n\nexport function CheckTagNameDialog({\n  isOpen,\n  onDismiss,\n  onConfirm,\n}: {\n  isOpen: boolean\n  onDismiss: () => void\n  onConfirm: () => void\n}) {\n  const [body] = useClientValue<HTMLElement | null>(() => document.body, null, [ssrSafeDocument?.body])\n\n  return body\n    ? createPortal(\n        <Dialog isOpen={isOpen} onDismiss={onDismiss}>\n          <Dialog.Header>Create branch</Dialog.Header>\n          <Box sx={{p: 3}}>\n            <span>\n              A tag already exists with the provided branch name. Many Git commands accept both tag and branch names, so\n              creating this branch may cause unexpected behavior. Are you sure you want to create this branch?\n            </span>\n            <Box sx={{display: 'flex', justifyContent: 'flex-end', mt: 3}}>\n              <Button onClick={onDismiss}>Cancel</Button>\n              <Button variant=\"danger\" onClick={onConfirm} sx={{ml: 2}}>\n                Create\n              </Button>\n            </Box>\n          </Box>\n        </Dialog>,\n        document.body,\n      )\n    : null\n}\n\ntry{ CheckTagNameDialog.displayName ||= 'CheckTagNameDialog' } catch {}","// eslint-disable-next-line filenames/match-regex\nimport {verifiedFetch} from '@github-ui/verified-fetch'\n\nexport async function checkTagExists(path: string, newRefName: string): Promise<boolean> {\n  const body = new FormData()\n  body.set('value', newRefName)\n  const res = await verifiedFetch(path, {\n    method: 'POST',\n    body,\n    // Overwrite the default Accept header to make sure rails treat this request as a react_request\n    // We don't use the verifiedFetchJSON as it sets the 'Content-Type' to 'application/json'\n    headers: {Accept: 'application/json'},\n  })\n\n  if (!res.ok) {\n    return false\n  }\n\n  return !!(await res.text())\n}\n","// eslint-disable-next-line filenames/match-regex\nimport {verifiedFetch} from '@github-ui/verified-fetch'\n\nexport async function createBranch(\n  path: string,\n  newRefName: string,\n  baseRef: string,\n): Promise<{success: true; name: string} | {success: false; error: string}> {\n  const body = new FormData()\n  body.set('name', newRefName)\n  body.set('branch', baseRef)\n  const res = await verifiedFetch(path, {\n    method: 'POST',\n    body,\n    // Overwrite the default Accept header to make sure rails treat this request as a react_request\n    // We don't use the verifiedFetchJSON as it sets the 'Content-Type' to 'application/json'\n    headers: {Accept: 'application/json'},\n  })\n\n  if (res.ok) {\n    return {success: true, name: (await res.json()).name}\n  } else {\n    try {\n      const {error} = (await res.json()) as {error: string}\n      if (error) {\n        return {success: false, error}\n      }\n      throw new Error('Unknown response from create branch API')\n    } catch {\n      return {success: false, error: 'Something went wrong.'}\n    }\n  }\n}\n","import {GitBranchIcon, TagIcon, TriangleDownIcon} from '@primer/octicons-react'\nimport {AnchoredOverlay, Box, Button, Text} from '@primer/react'\nimport {useCallback, useMemo, useRef} from 'react'\n\nimport type {RefSelectorProps, RefType} from './RefSelector'\nimport {FocusKeys} from '@primer/behaviors'\n\ntype PickedRefSelectorProps = Pick<RefSelectorProps, 'hotKey' | 'onOpenChange' | 'size'>\n\nexport interface RefSelectorAnchoredOverlayProps extends PickedRefSelectorProps {\n  overlayOpen: boolean\n  onOverlayChange: (open: boolean) => void\n  preventClosing?: boolean\n  focusTrapEnabled?: boolean\n  refType: RefType\n  inputRef?: React.RefObject<HTMLInputElement>\n  buttonClassName?: string\n  allowResizing?: boolean\n  idEnding?: string\n  useFocusZone?: boolean\n  displayCommitish: string\n}\n\nexport function RefSelectorAnchoredOverlay(props: React.PropsWithChildren<RefSelectorAnchoredOverlayProps>) {\n  const {\n    hotKey,\n    onOpenChange,\n    size,\n    displayCommitish,\n    refType,\n    children,\n    preventClosing,\n    inputRef,\n    overlayOpen,\n    onOverlayChange,\n    focusTrapEnabled = true,\n    buttonClassName,\n    allowResizing,\n    useFocusZone,\n  } = props\n\n  const extraIdEnding = props.idEnding ? `-${props.idEnding}` : `-${Date.now()}`\n  // If we render multiple ref pickers on the page we need to ensure unique ids.\n  const buttonIdRef = useRef(`branch-picker${extraIdEnding}`)\n\n  const textAreaId = 'read-only-cursor-text-area'\n\n  const onOverlayOpenChange = useCallback(\n    (open: boolean) => {\n      onOverlayChange(open)\n      onOpenChange?.(open)\n    },\n    [onOpenChange, onOverlayChange],\n  )\n\n  const focusTrapSettings = useMemo(() => {\n    if (focusTrapEnabled) {\n      // Setting disabled to false does not work. Therefore, I need to return different object\n      return {initialFocusRef: inputRef}\n    }\n\n    return {initialFocusRef: inputRef, disabled: true}\n  }, [focusTrapEnabled, inputRef])\n\n  return (\n    <AnchoredOverlay\n      open={overlayOpen}\n      overlayProps={{role: 'dialog', width: 'medium'}}\n      onOpen={() => onOverlayOpenChange(true)}\n      // Prevent closing overlay, while working with the dialog\n      onClose={() => !preventClosing && onOverlayOpenChange(false)}\n      renderAnchor={anchorProps => (\n        <>\n          <Button\n            {...anchorProps}\n            data-hotkey={hotKey}\n            size={size}\n            sx={{\n              svg: {color: 'fg.muted'},\n              display: 'flex',\n              minWidth: allowResizing ? 0 : undefined,\n              '> span': {width: 'inherit'},\n            }}\n            trailingVisual={TriangleDownIcon}\n            aria-label={`${displayCommitish} ${refType}`}\n            data-testid=\"anchor-button\"\n            id={buttonIdRef.current}\n            className={buttonClassName}\n          >\n            <Box sx={{display: 'flex', width: '100%'}}>\n              <Box sx={{mr: 1, color: 'fg.muted'}}>\n                {refType === 'tag' ? <TagIcon size=\"small\" /> : <GitBranchIcon size=\"small\" />}\n              </Box>\n              <Box\n                sx={{\n                  fontSize: 1,\n                  minWidth: 0,\n                  maxWidth: allowResizing ? undefined : 125,\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  whiteSpace: 'nowrap',\n                }}\n                className=\"ref-selector-button-text-container\"\n              >\n                <Text sx={{minWidth: 0}}>&nbsp;{displayCommitish}</Text>\n              </Box>\n            </Box>\n          </Button>\n          {/* this button is necessary so that the ref selector hotkey still works while the blob text area has focus\n  and it doesnt' do anything if the text area does not have focus*/}\n          <button\n            hidden={true}\n            data-hotkey={hotKey}\n            onClick={() => onOverlayOpenChange(true)}\n            data-hotkey-scope={textAreaId}\n          />\n        </>\n      )}\n      focusTrapSettings={focusTrapSettings}\n      focusZoneSettings={useFocusZone ? {bindKeys: FocusKeys.ArrowAll | FocusKeys.Tab} : {disabled: true}}\n    >\n      {/* eslint-disable-next-line github/a11y-role-supports-aria-props */}\n      <div data-testid=\"overlay-content\" aria-labelledby={buttonIdRef.current} id=\"selectPanel\">\n        {children}\n      </div>\n    </AnchoredOverlay>\n  )\n}\n\ntry{ RefSelectorAnchoredOverlay.displayName ||= 'RefSelectorAnchoredOverlay' } catch {}","import {ActionList, Box} from '@primer/react'\n\nimport type {RefSelectorFooterProps} from './RefSelector'\n\nexport function RefSelectorFooter({text, onClick, href, sx}: RefSelectorFooterProps) {\n  const isLinkItem = !!href\n  const innerContent = <Box sx={{...sx}}>{text}</Box>\n\n  const commonProps = {\n    sx: {minWidth: 0},\n  }\n\n  return isLinkItem ? (\n    <ActionList.LinkItem role=\"link\" href={href} onClick={() => onClick?.()} {...commonProps}>\n      {innerContent}\n    </ActionList.LinkItem>\n  ) : (\n    <ActionList.Item role=\"button\" onSelect={() => onClick?.()} {...commonProps}>\n      {innerContent}\n    </ActionList.Item>\n  )\n}\n\ntry{ RefSelectorFooter.displayName ||= 'RefSelectorFooter' } catch {}","import {CheckIcon} from '@primer/octicons-react'\nimport {ActionList, Label, Octicon} from '@primer/react'\nimport React from 'react'\n\nimport {HighlightedText} from './HighlightedText'\n\ninterface RefItemProps {\n  href?: string\n  isCurrent?: boolean\n  isDefault?: boolean\n  gitRef: string\n  filterText: string\n  ariaPosInSet?: number\n  ariaSetSize?: number\n  onSelect?: (gitRef: string) => void\n  onClick?: (gitRef: string) => void\n}\n\nexport const RefItem = React.memo(function RefItemInner({\n  isCurrent,\n  isDefault,\n  href,\n  gitRef,\n  filterText,\n  ariaPosInSet,\n  ariaSetSize,\n  onSelect,\n  onClick,\n}: RefItemProps) {\n  const isLinkItem = !!href\n  const innerRefItem = (\n    <RefItemContent gitRef={gitRef} isDefault={isDefault} isCurrent={isCurrent} filterText={filterText} />\n  )\n\n  const commonProps = {\n    'aria-checked': isCurrent,\n    'aria-posinset': ariaPosInSet,\n    'aria-setsize': ariaSetSize,\n    sx: {minWidth: 0},\n    onSelect: () => onSelect?.(gitRef),\n    onClick: () => onClick?.(gitRef),\n  }\n\n  return isLinkItem ? (\n    <ActionList.LinkItem href={href} role=\"menuitemradio\" {...commonProps}>\n      {innerRefItem}\n    </ActionList.LinkItem>\n  ) : (\n    <ActionList.Item {...commonProps}>{innerRefItem}</ActionList.Item>\n  )\n})\n\ninterface RefItemContentProps extends RefItemProps {\n  showLeadingVisual?: boolean\n}\n\nexport const RefItemContent = React.memo(function RefItemInner({\n  isCurrent,\n  isDefault,\n  gitRef,\n  filterText,\n  showLeadingVisual = true,\n}: RefItemContentProps) {\n  return (\n    <div style={{display: 'flex', justifyContent: 'space-between'}}>\n      <div style={{display: 'flex', minWidth: 0, alignItems: 'flex-end'}}>\n        {showLeadingVisual && (\n          <Octicon icon={CheckIcon} aria-hidden sx={{pr: 1, visibility: isCurrent ? undefined : 'hidden'}} />\n        )}\n        <HighlightedText key={gitRef} hideOverflow search={filterText} text={gitRef} />\n      </div>\n      {isDefault && <Label>default</Label>}\n    </div>\n  )\n})\n\ntry{ RefItem.displayName ||= 'RefItem' } catch {}\ntry{ RefItemContent.displayName ||= 'RefItemContent' } catch {}","import {Box} from '@primer/react'\n\nimport {FixedSizeVirtualList} from './FixedSizeVirtualList'\nimport {RefItem} from './RefItem'\n\ninterface RefsListProps {\n  currentCommitish: string\n  defaultBranch: string\n  filterText: string\n  /**\n   * A function to create an href to which we should navigate when a ref is selected.\n   */\n  getHref?: (ref: string) => string\n  refs: string[]\n  onSelectItem?: (ref: string) => void\n}\n\n/**\n * The virtualized list has a fixed height. If we don't have very many refs,\n * don't virtualize the list so that the container can shrink.\n */\nconst virtualizationThreshold = 20\nconst maxHeight = 330\n\n/**\n * A list of refs that is virtualized to allow very large lists.\n */\nexport function RefsList(props: RefsListProps) {\n  return props.refs.length > virtualizationThreshold ? <VirtualRefsList {...props} /> : <FullRefsList {...props} />\n}\n\n/**\n * Non-virtual implementation\n */\nfunction FullRefsList({refs, defaultBranch, currentCommitish, getHref, filterText, onSelectItem}: RefsListProps) {\n  return (\n    <Box sx={{maxHeight, overflowY: 'auto'}}>\n      {refs.map(gitRef => (\n        <RefItem\n          key={gitRef}\n          href={getHref?.(gitRef)}\n          isCurrent={currentCommitish === gitRef}\n          isDefault={defaultBranch === gitRef}\n          filterText={filterText}\n          gitRef={gitRef}\n          onSelect={onSelectItem}\n          onClick={onSelectItem}\n          ariaPosInSet={refs.indexOf(gitRef) + 1}\n          ariaSetSize={refs.length}\n        />\n      ))}\n    </Box>\n  )\n}\n\nfunction VirtualRefsList({refs, defaultBranch, currentCommitish, getHref, filterText, onSelectItem}: RefsListProps) {\n  return (\n    <FixedSizeVirtualList\n      items={refs}\n      itemHeight={32}\n      sx={{maxHeight, overflowY: 'auto'}}\n      makeKey={gitRef => gitRef}\n      renderItem={gitRef => (\n        <RefItem\n          key={gitRef}\n          href={getHref?.(gitRef)}\n          isCurrent={currentCommitish === gitRef}\n          isDefault={defaultBranch === gitRef}\n          filterText={filterText}\n          gitRef={gitRef}\n          onSelect={onSelectItem}\n          onClick={onSelectItem}\n          ariaPosInSet={refs.indexOf(gitRef) + 1}\n          ariaSetSize={refs.length}\n        />\n      )}\n    />\n  )\n}\n\ntry{ RefsList.displayName ||= 'RefsList' } catch {}\ntry{ FullRefsList.displayName ||= 'FullRefsList' } catch {}\ntry{ VirtualRefsList.displayName ||= 'VirtualRefsList' } catch {}","import {repositoryPath} from '@github-ui/paths'\nimport {useEffect, useRef, useState} from 'react'\n\nimport {RefType, type Renderer, SearchIndex} from './search-index'\n\ntype RefsStatus = 'uninitialized' | 'loading' | 'loaded' | 'failed'\n\nexport interface RefsState {\n  status: RefsStatus\n  refs: string[]\n  showCreateAction: boolean\n  searchIndex: SearchIndex | null\n}\n\n/**\n * Given repo information and filter parameters, returns a filtered list of\n * refs, a state to indicate whether data is currently being loaded from the\n * server, and an boolean to indicate whether an action for creating a branch\n * should be shown.\n *\n * @remarks\n * This reuses the SearchIndex which was created for the <ref-selector> web\n * component. That means that any component using this hook should have\n * approximate behavior parity even though the web component itself is not\n * reused.\n */\nexport function useRefs(\n  cacheKey: string,\n  owner: string,\n  repo: string,\n  refType: 'branch' | 'tag',\n  filterText: string,\n  canCreate: boolean,\n): RefsState {\n  const [refsState, setRefsState] = useState<RefsState>({\n    status: 'uninitialized',\n    refs: [],\n    showCreateAction: false,\n    searchIndex: null,\n  })\n\n  /*\n   * The SearchIndex expects something like a reference to a web component which\n   * has a render function that can be called imperatively. We don't have access\n   * to anything like that, but we can cause the react component using this hook\n   * to re-render by updating state. These renderer objects are a bridge between\n   * our implementation and the API that SearchIndex expects. It's a bit of a\n   * hack, but a pretty reasonable one.\n   */\n  const branchRendererRef = useRef<Renderer>({\n    render: () => {\n      setRefsState(getStateFromIndex(branchIndexRef.current, canCreate))\n    },\n  })\n  const tagRendererRef = useRef<Renderer>({\n    render: () => {\n      setRefsState(getStateFromIndex(tagIndexRef.current, canCreate))\n    },\n  })\n\n  // Create one index for each ref type so that we can switch back and forth without reloading any data\n  const branchIndexRef = useRefWithOneInitialization<SearchIndex>(() =>\n    makeIndex(cacheKey, owner, repo, 'branch', branchRendererRef.current),\n  )\n  const tagIndexRef = useRefWithOneInitialization<SearchIndex>(() =>\n    makeIndex(cacheKey, owner, repo, 'tag', tagRendererRef.current),\n  )\n\n  // If we point to a new repo we need to make new indices and load data if it is not already loaded.\n  useEffect(() => {\n    const nameWithOwner = `${owner}/${repo}`\n\n    // If the current indexes do not match the new repo, throw them away and create new ones\n    if (branchIndexRef.current.nameWithOwner !== nameWithOwner) {\n      branchIndexRef.current = makeIndex(cacheKey, owner, repo, 'branch', branchRendererRef.current)\n    }\n    if (tagIndexRef.current.nameWithOwner !== nameWithOwner) {\n      tagIndexRef.current = makeIndex(cacheKey, owner, repo, 'tag', tagRendererRef.current)\n    }\n\n    async function updateIndex() {\n      const currentIndex = refType === 'branch' ? branchIndexRef.current : tagIndexRef.current\n      currentIndex.render()\n      await currentIndex.fetchData()\n      currentIndex.search('')\n      currentIndex.render()\n    }\n\n    updateIndex()\n  }, [cacheKey, owner, repo, refType, branchIndexRef, tagIndexRef])\n\n  // When the filter text changes or the tab is changed, search the index for the new text\n  useEffect(() => {\n    const currentIndex = refType === 'branch' ? branchIndexRef.current : tagIndexRef.current\n    currentIndex.search(filterText)\n    currentIndex.render()\n  }, [filterText, refType, branchIndexRef, tagIndexRef])\n\n  return refsState\n}\n\nfunction makeIndex(\n  cacheKey: string,\n  owner: string,\n  repo: string,\n  refType: 'branch' | 'tag',\n  renderer: Renderer,\n): SearchIndex {\n  return new SearchIndex(\n    refType === 'branch' ? RefType.Branch : RefType.Tag,\n    renderer,\n    repositoryPath({owner, repo, action: 'refs'}),\n    cacheKey,\n    `${owner}/${repo}`,\n  )\n}\n\nfunction getStateFromIndex(index: SearchIndex, canCreate: boolean): RefsState {\n  const status = index.fetchFailed ? 'failed' : index.isLoading ? 'loading' : 'loaded'\n  const refs = index.currentSearchResult\n  const showCreateAction =\n    index.refType === RefType.Branch && canCreate && index.searchTerm.length > 0 && !index.exactMatchFound\n\n  return {status, refs, showCreateAction, searchIndex: index}\n}\n\nfunction useRefWithOneInitialization<T>(getInitialValue: () => T): React.MutableRefObject<T> {\n  const ref = useRef<T>()\n  if (!ref.current) {\n    ref.current = getInitialValue()\n  }\n  return ref as React.MutableRefObject<T> // This cast is safe because we're checking the undefined case\n}\n","import {checkTagNameExistsPath, repositoryPath} from '@github-ui/paths'\nimport {GitBranchIcon, SearchIcon, XIcon} from '@primer/octicons-react'\nimport {ActionList, Box, Heading, IconButton, Spinner, Octicon, Text, TextInput} from '@primer/react'\nimport {forwardRef, useCallback, useRef, useState} from 'react'\n\nimport {CheckTagNameDialog} from './CheckTagNameDialog'\nimport {checkTagExists} from './check-tag-exists'\nimport {createBranch} from './create-branch'\nimport {defaultTypes, LoadingFailed, type RefSelectorProps, type RefType, RefTypeTabs} from './RefSelector'\nimport {RefSelectorAnchoredOverlay} from './RefSelectorAnchoredOverlay'\nimport {RefSelectorFooter} from './RefSelectorFooter'\nimport {RefsList} from './RefsList'\nimport {type RefsState, useRefs} from './use-refs'\n\nexport function RefSelectorV1(props: RefSelectorProps) {\n  const {\n    cacheKey,\n    owner,\n    repo,\n    canCreate,\n    types,\n    hotKey,\n    onOpenChange,\n    size,\n    getHref,\n    onBeforeCreate,\n    onRefTypeChanged,\n    currentCommitish,\n    onCreateError,\n    onSelectItem,\n    closeOnSelect,\n    selectedRefType,\n    customFooterItemProps,\n    buttonClassName,\n    allowResizing,\n    idEnding,\n    useFocusZone,\n  } = props\n  const [filterText, setFilterText] = useState('')\n  const inputRef = useRef<HTMLInputElement>(null)\n  const createButtonRef = useRef<HTMLLIElement>(null)\n\n  const normalizedSelectedRefType = selectedRefType === 'tree' ? 'branch' : selectedRefType\n  const displayCommitish = selectedRefType === 'tree' ? currentCommitish.slice(0, 7) : currentCommitish\n\n  const [overlayOpen, setOverlayOpen] = useState(false)\n  const [focusTrapEnabled, setFocusTrapEnabled] = useState(true)\n  const [showTagWarningDialog, setShowTagWarningDialog] = useState(false)\n  const [refType, setRefType] = useState<RefType>(normalizedSelectedRefType ?? (types ?? defaultTypes)[0]!)\n\n  const refsState = useRefs(cacheKey, owner, repo, refType, filterText, canCreate)\n\n  const newRefName = filterText\n\n  const path = repositoryPath({owner, repo, action: 'branches'})\n  const checkTagPath = checkTagNameExistsPath({owner, repo})\n\n  const createAndGoToBranch = useCallback(async () => {\n    onBeforeCreate?.(newRefName)\n\n    const result = await createBranch(path, newRefName, currentCommitish)\n\n    if (!result.success) {\n      onCreateError?.(result.error)\n    } else if (getHref) {\n      // The branch creation endpoint will redirect automatically, but not for\n      // XHR requests. So we have to manually switch to the new branch, which\n      // is fine.\n\n      // Clear the cache since the new branch isn't always picked up otherwise.\n      refsState.searchIndex?.clearLocalStorage()\n      window.location.href = getHref(result.name)\n    }\n  }, [onBeforeCreate, newRefName, path, currentCommitish, getHref, onCreateError, refsState.searchIndex])\n\n  const checkTagAndCreate = useCallback(async () => {\n    if (await checkTagExists(checkTagPath, newRefName)) {\n      setShowTagWarningDialog(true)\n      // disable focus trap to switch focus to the dialog.\n      setFocusTrapEnabled(false)\n      return\n    }\n\n    setShowTagWarningDialog(false)\n    setFocusTrapEnabled(false)\n    createAndGoToBranch()\n  }, [checkTagPath, newRefName, createAndGoToBranch, setShowTagWarningDialog])\n\n  const changeRefType = useCallback(\n    (newRefType: RefType) => {\n      setRefType(newRefType)\n      onRefTypeChanged?.(newRefType)\n    },\n    [setRefType, onRefTypeChanged],\n  )\n\n  function closeRefSelector() {\n    setOverlayOpen(false)\n  }\n\n  const onSelect = useCallback(\n    (selectedItemRef: string, selectedItemRefType: RefType) => {\n      onSelectItem?.(selectedItemRef, selectedItemRefType)\n      closeRefSelector()\n    },\n    [onSelectItem],\n  )\n\n  return (\n    <>\n      <RefSelectorAnchoredOverlay\n        refType={refType}\n        displayCommitish={displayCommitish}\n        focusTrapEnabled={focusTrapEnabled}\n        preventClosing={showTagWarningDialog}\n        size={size}\n        onOpenChange={onOpenChange}\n        hotKey={hotKey}\n        inputRef={inputRef}\n        overlayOpen={overlayOpen}\n        onOverlayChange={setOverlayOpen}\n        buttonClassName={buttonClassName}\n        allowResizing={allowResizing}\n        idEnding={idEnding}\n        useFocusZone={useFocusZone}\n      >\n        <RefSelectorActionList\n          filterText={filterText}\n          displayCommitish={displayCommitish}\n          onFilterChange={setFilterText}\n          refType={refType}\n          onRefTypeChange={changeRefType}\n          refsState={refsState}\n          onCreateError={props.onCreateError}\n          showTagWarningDialog={showTagWarningDialog}\n          setShowTagWarningDialog={setShowTagWarningDialog}\n          onCreateBranch={checkTagAndCreate}\n          inputRef={inputRef}\n          createButtonRef={createButtonRef}\n          onSelectItem={onSelect}\n          closeOnSelect={closeOnSelect}\n          closeRefSelector={closeRefSelector}\n          customFooterItemProps={customFooterItemProps}\n          {...props}\n          selectedRefType={refType}\n        />\n      </RefSelectorAnchoredOverlay>\n      {showTagWarningDialog && (\n        <CheckTagNameDialog\n          isOpen={showTagWarningDialog}\n          onDismiss={() => {\n            setShowTagWarningDialog(false)\n            createButtonRef.current?.focus()\n          }}\n          onConfirm={createAndGoToBranch}\n        />\n      )}\n    </>\n  )\n}\n\ninterface RefSelectorActionListProps extends Omit<RefSelectorProps, 'cacheKey'> {\n  filterText: string\n  onFilterChange: (filterText: string) => void\n  onRefTypeChange: (refType: RefType) => void\n  refType: RefType\n  refsState: RefsState\n  selectedRefType: RefType\n  showTagWarningDialog: boolean\n  setShowTagWarningDialog: (showWarningDialog: boolean) => void\n  onCreateBranch: () => void\n  closeRefSelector: () => void\n  inputRef?: React.RefObject<HTMLInputElement>\n  createButtonRef?: React.RefObject<HTMLLIElement>\n  displayCommitish: string\n}\n\nfunction RefSelectorActionList({\n  canCreate,\n  currentCommitish,\n  displayCommitish,\n  defaultBranch,\n  filterText,\n  getHref,\n  hideShowAll,\n  onSelectItem,\n  closeOnSelect,\n  closeRefSelector,\n  onFilterChange,\n  onRefTypeChange,\n  owner,\n  selectedRefType,\n  refsState,\n  refType,\n  repo,\n  types,\n  onCreateBranch,\n  inputRef,\n  createButtonRef,\n  customFooterItemProps,\n  viewAllJustify,\n}: RefSelectorActionListProps) {\n  const {refs, showCreateAction, status} = refsState\n\n  function onFooterItemClick() {\n    customFooterItemProps?.onClick?.()\n    closeRefSelector()\n  }\n\n  return (\n    <ActionList showDividers>\n      <Box sx={{borderBottom: '1px solid', borderColor: 'border.subtle', pb: 2}}>\n        <Box sx={{display: 'flex', pb: 2, px: 2, justifyContent: 'space-between', alignItems: 'center'}}>\n          <Heading as=\"h5\" sx={{pl: 2, fontSize: 'inherit'}}>\n            {switchRefText(types ?? defaultTypes)}\n          </Heading>\n          {/* eslint-disable-next-line primer-react/a11y-remove-disable-tooltip */}\n          <IconButton\n            unsafeDisableTooltip={true}\n            aria-label=\"Cancel\"\n            variant=\"invisible\"\n            icon={XIcon}\n            sx={{color: 'fg.muted'}}\n            onClick={closeRefSelector}\n          />\n        </Box>\n\n        <RefTextFilter\n          defaultText={filterText}\n          refType={refType}\n          canCreate={canCreate}\n          onFilterChange={onFilterChange}\n          ref={inputRef}\n        />\n      </Box>\n\n      <Box sx={{pt: 2, pb: showCreateAction && refs.length === 0 ? 0 : 2}}>\n        {(types ?? defaultTypes).length > 1 && (\n          <Box sx={{px: 2, pb: 2}}>\n            <RefTypeTabs\n              refType={refType}\n              onRefTypeChanged={onRefTypeChange}\n              sx={{\n                mx: -2,\n                borderBottom: '1px solid',\n                borderColor: 'border.muted',\n                '> nav': {borderBottom: 'none'},\n              }}\n            />\n          </Box>\n        )}\n\n        {status === 'loading' || status === 'uninitialized' ? (\n          <Loading refType={refType} />\n        ) : status === 'failed' ? (\n          <LoadingFailed refType={refType} />\n        ) : refs.length === 0 && !showCreateAction ? (\n          <RefsZeroState />\n        ) : (\n          <RefsList\n            filterText={filterText}\n            refs={refs}\n            defaultBranch={refType === 'branch' ? defaultBranch : ''}\n            currentCommitish={refType === selectedRefType ? currentCommitish : ''}\n            getHref={getHref}\n            onSelectItem={ref => {\n              onSelectItem?.(ref, refType)\n              if (closeOnSelect) closeRefSelector()\n            }}\n          />\n        )}\n      </Box>\n\n      {showCreateAction && (\n        <>\n          {refs.length > 0 && <ActionList.Divider sx={{marginTop: 0, backgroundColor: 'border.subtle'}} />}\n          <CreateRefAction\n            displayCommitish={displayCommitish}\n            newRefName={filterText}\n            onCreateBranch={onCreateBranch}\n            createButtonRef={createButtonRef}\n          />\n        </>\n      )}\n\n      {(!hideShowAll || customFooterItemProps) && (\n        <ActionList.Divider sx={{marginTop: showCreateAction ? 2 : 0, backgroundColor: 'border.subtle'}} />\n      )}\n\n      {!hideShowAll && (\n        <ViewAllRefsAction\n          justify={viewAllJustify}\n          refType={refType}\n          owner={owner}\n          repo={repo}\n          onClick={closeRefSelector}\n        />\n      )}\n\n      {customFooterItemProps && <RefSelectorFooter {...customFooterItemProps} onClick={onFooterItemClick} />}\n    </ActionList>\n  )\n}\n\ninterface RefTextFilterProps {\n  refType: RefType\n  canCreate: boolean\n  onFilterChange: (filterText: string) => void\n  defaultText: string\n}\n\nconst RefTextFilter = forwardRef(RefTextFilterWithRef)\n\nfunction RefTextFilterWithRef(\n  {refType, canCreate, onFilterChange, defaultText}: RefTextFilterProps,\n  ref: React.ForwardedRef<HTMLInputElement>,\n) {\n  const placeholder =\n    refType === 'tag' ? 'Find a tag...' : canCreate ? 'Find or create a branch...' : 'Find a branch...'\n  return (\n    <Box sx={{px: 2}}>\n      <TextInput\n        leadingVisual={SearchIcon}\n        value={defaultText}\n        sx={{width: '100%'}}\n        placeholder={placeholder}\n        ref={ref}\n        onInput={e => {\n          const target = e.target\n          if (!(target instanceof HTMLInputElement)) return // Make ts happy\n          onFilterChange(target.value)\n        }}\n      />\n    </Box>\n  )\n}\n\nfunction switchRefText(types: RefType[]) {\n  if (types.includes('branch') && types.includes('tag')) {\n    return 'Switch branches/tags'\n  } else if (types.includes('branch')) {\n    return 'Switch branches'\n  } else if (types.includes('tag')) {\n    return 'Switch tags'\n  }\n}\n\nfunction Loading({refType}: {refType: RefType}) {\n  return (\n    <Box sx={{display: 'flex', justifyContent: 'center', p: 2}}>\n      <Spinner size=\"medium\" aria-label={`Loading ${refType === 'branch' ? 'branches' : 'tags'}...`} />\n    </Box>\n  )\n}\n\nfunction RefsZeroState() {\n  return <Box sx={{p: 3, display: 'flex', justifyContent: 'center'}}>Nothing to show</Box>\n}\n\ninterface ViewAllRefsActionProps {\n  refType: string\n  owner: string\n  repo: string\n  onClick?: () => void\n  justify?: RefSelectorProps['viewAllJustify']\n}\n\nfunction ViewAllRefsAction({refType, owner, repo, onClick, justify = 'start'}: ViewAllRefsActionProps) {\n  const type = refType === 'branch' ? 'branches' : 'tags'\n  return (\n    <ActionList.LinkItem\n      role=\"link\"\n      href={repositoryPath({owner, repo, action: type})}\n      onClick={onClick}\n      sx={{display: 'flex', justifyContent: 'center'}}\n    >\n      <Box sx={{display: 'flex', justifyContent: justify}}>View all {type}</Box>\n    </ActionList.LinkItem>\n  )\n}\n\ninterface CreateRefActionProps {\n  displayCommitish: string\n  newRefName: string\n  onCreateBranch: () => void\n  createButtonRef?: React.RefObject<HTMLLIElement>\n}\n\nfunction CreateRefAction({displayCommitish, newRefName, onCreateBranch, createButtonRef}: CreateRefActionProps) {\n  return (\n    <ActionList.Item role=\"button\" onSelect={onCreateBranch} ref={createButtonRef}>\n      <Octicon icon={GitBranchIcon} sx={{mr: 2, color: 'fg.muted'}} />\n      <span>Create branch&nbsp;</span>\n      <Text sx={{fontWeight: 600, fontFamily: 'monospace'}}>{newRefName}</Text>\n      <span>&nbsp;from&nbsp;</span>\n      <Text sx={{fontWeight: 600, fontFamily: 'monospace'}}>{displayCommitish}</Text>\n    </ActionList.Item>\n  )\n}\n\ntry{ RefSelectorV1.displayName ||= 'RefSelectorV1' } catch {}\ntry{ RefSelectorActionList.displayName ||= 'RefSelectorActionList' } catch {}\ntry{ RefTextFilter.displayName ||= 'RefTextFilter' } catch {}\ntry{ RefTextFilterWithRef.displayName ||= 'RefTextFilterWithRef' } catch {}\ntry{ Loading.displayName ||= 'Loading' } catch {}\ntry{ RefsZeroState.displayName ||= 'RefsZeroState' } catch {}\ntry{ ViewAllRefsAction.displayName ||= 'ViewAllRefsAction' } catch {}\ntry{ CreateRefAction.displayName ||= 'CreateRefAction' } catch {}","import {\n  type ActionListItemProps,\n  type ActionListLinkItemProps,\n  Button,\n  type ButtonProps,\n  Flash,\n  TabNav,\n  type TabNavProps,\n} from '@primer/react'\n\nimport {RefSelectorV1} from './RefSelectorV1'\n\nexport interface RefSelectorFooterProps {\n  text: string\n  onClick?: () => void\n  href?: ActionListLinkItemProps['href']\n  sx?: ActionListItemProps['sx']\n}\n\nexport interface RefSelectorProps {\n  /**\n   * A className to pass to the button that opens the ref selector.\n   */\n  buttonClassName?: string\n  /**\n   * A key used to represent the freshness of any given list of refs.\n   * In ruby, this can be constructed with `BranchesHelper#ref_list_cache_key`\n   */\n  cacheKey: string\n  /**\n   * True if the ref selector should display an option to create a branch.\n   */\n  canCreate: boolean\n  /**\n   * The current ref or commit being viewed.\n   */\n  currentCommitish: string\n  /**\n   * The default branch for the current repository.\n   */\n  defaultBranch: string\n  /**\n   * A function to create an href to which we should navigate when a ref is selected.\n   */\n  getHref?: (ref: string) => string\n  /**\n   * If true, the ref selector will not show the \"View all branches\" option at the bottom.\n   */\n  hideShowAll?: boolean\n  /**\n   * The owner of the repo.\n   */\n  owner: string\n  /**\n   * The name of the repo (without the owner).\n   */\n  repo: string\n  /**\n   * The type of the selected ref: 'branch' or 'tag'.\n   * If 'tree', the ref selector will normalize to 'branch' and the display text will be the short SHA of the currentCommitish.\n   */\n  selectedRefType?: RefType | 'tree'\n  /**\n   * The types of refs that the ref selector should display.\n   * By default, ['branches', 'tags']\n   */\n  types?: RefType[]\n  /**\n   * The name of the data-hotkey (e.g: \"w\")\n   */\n  hotKey?: string\n  /**\n   * The ending to put on the id of the ref selector button for SSR so that it doesn't change when rendering on\n   * the client.\n   */\n  idEnding?: string\n  /**\n   * Optional callback that will be invoked when a ref item is clicked (mouse) or selected (keyboard).\n   */\n  onSelectItem?: (ref: string, refType: RefType) => void\n  /**\n   * If true, when a ref item is clicked (mouse) or selected (keyboard), the ref selector is closed.\n   */\n  closeOnSelect?: boolean\n  /**\n   * A function that is called if ref creation fails.\n   */\n  onCreateError?: (errorMessage: string) => void\n  /**\n   * A function that is called before making a create branch request.\n   */\n  onBeforeCreate?: (refName: string) => void\n  /**\n   * A callback that is invoked on ref selector menu state change.\n   */\n  onOpenChange?: (open: boolean) => void\n  /**\n   * A callback that is invoked on ref selector menu state change.\n   */\n  onRefTypeChanged?: (refType: RefType) => void\n  /**\n   * Props for rendering a managed Action List/Link Item footer\n   */\n  customFooterItemProps?: RefSelectorFooterProps\n  /**\n   * Size of the button to render\n   * @default 'medium' if not provided\n   * Option of 'small', 'medium', or 'large'\n   */\n  size?: ButtonProps['size']\n  /**\n   * Optional alignment prop for the view all ref item\n   */\n  viewAllJustify?: 'center' | 'start'\n  /**\n   * Optional prop to allow branch name to be > 125px\n   * This is useful when the branch picker is in a resizable area ie. page layout pane\n   */\n  allowResizing?: boolean\n  /**\n   * Set to true to use the default focus zone for the anchored overlay.\n   */\n  useFocusZone?: boolean\n}\n\nexport type RefType = 'branch' | 'tag'\nexport const defaultTypes: RefType[] = ['branch', 'tag']\n\n/**\n * An action menu that allows the user to switch between branches or tags.\n *\n * TODO: Currently this does not have support for customizing how the items,\n *       zero states, and branch creation action are rendered. The old\n *       <ref-selector> element allowed that by requiring each usage to pass\n *       in templates. The right solution here is probably something like\n *       a set of render props.\n *\n * @remarks\n * This accomplishes something very similar to the <ref-selector> web component.\n * There are a few reasons that working with that component in react is difficult:\n * - React has bugs in how it handles <template> elements, and those bugs are\n *   not likely to be fixed for perf reasons: https://github.com/facebook/react/issues/19932\n *   This can be worked around, but it is very easy to break.\n * - There is no way to attach callbacks to elements that would be rendered\n *   through a template, since those DOM nodes are all going to be copied in\n *   a way that is not managed by React.\n */\nexport function RefSelector(props: RefSelectorProps) {\n  return <RefSelectorV1 {...props} />\n}\n\ninterface RefTypeTabsProps {\n  refType: RefType\n  onRefTypeChanged: (refType: RefType) => void\n  sx?: TabNavProps['sx']\n}\n\nexport function RefTypeTabs({refType, onRefTypeChanged, sx}: RefTypeTabsProps) {\n  return (\n    <TabNav sx={{pl: 2, ...sx}} aria-label=\"Ref type\">\n      <TabNav.Link\n        as={Button}\n        id=\"branch-button\"\n        aria-controls=\"branches\"\n        selected={refType === 'branch'}\n        onClick={() => onRefTypeChanged('branch')}\n        sx={{borderBottomRightRadius: 0, borderBottomLeftRadius: 0}}\n      >\n        Branches\n      </TabNav.Link>\n      <TabNav.Link\n        as={Button}\n        id=\"tag-button\"\n        aria-controls=\"tags\"\n        selected={refType === 'tag'}\n        onClick={() => onRefTypeChanged('tag')}\n        sx={{borderBottomRightRadius: 0, borderBottomLeftRadius: 0}}\n      >\n        Tags\n      </TabNav.Link>\n    </TabNav>\n  )\n}\n\nexport function LoadingFailed({refType}: {refType: RefType}) {\n  return <Flash variant=\"danger\">Could not load {refType === 'branch' ? 'branches' : 'tags'}</Flash>\n}\n\ntry{ RefSelector.displayName ||= 'RefSelector' } catch {}\ntry{ RefTypeTabs.displayName ||= 'RefTypeTabs' } catch {}\ntry{ LoadingFailed.displayName ||= 'LoadingFailed' } catch {}"],"names":["getItem","setItem","removeItem","safeStorage","throwQuotaErrorsOnSet","RefType","SearchIndex","render","selector","fetchData","isLoading","fetchInProgress","bootstrapFromLocalStorage","fetchFailed","response","fetch","refEndpoint","refType","headers","Accept","processResponse","_","emitStats","ok","lsClone","clone","decoded","json","knownItems","refs","cacheKey","flushToLocalStorage","text","sendStats","incrementKey","status","search","query","pos","searchTerm","currentSearchResult","result","prefixes","ref","exactMatchFound","indexOf","unshift","push","storedData","localStorageKey","payload","JSON","parse","serverResponse","e","message","toLowerCase","includes","clearSiblingLocalStorage","err2","key","Object","keys","localStorage","startsWith","LocalStoragePrefix","clearLocalStorage","nameWithOwner","constructor","useClientValue","clientValueCallback","serverValue","deps","memoizedCallback","useCallback","renderPhase","useRenderPhase","isCSRFirstRender","useRef","RenderPhase","ClientRender","clientValue","setClientValue","useState","updateClientValue","useHydratedEffect","current","useContext","RenderPhaseContext","VirtualListContainerInner","FixedSizeVirtualList","items","itemHeight","sx","renderItem","makeKey","parentRef","estimateSize","virtualizer","useVirtual","size","length","ListContainer","virtualItems","map","virtualRow","ItemContainer","index","React","children","forwardedRef","Box","height","totalSize","width","position","top","left","transform","start","displayName","HighlightedText","hideOverflow","overflowWidth","nodes","segments","splitLowercase","split","idx","out","component","substring","segment","strong","className","overflowWidthVal","undefined","maxWidth","overflow","textOverflow","whiteSpace","color","CheckTagNameDialog","isOpen","onDismiss","onConfirm","body","document","ssrSafeDocument","createPortal","Dialog","Header","p","span","display","justifyContent","mt","Button","onClick","variant","ml","checkTagExists","path","newRefName","FormData","set","res","verifiedFetch","method","createBranch","baseRef","success","name","error","RefSelectorAnchoredOverlay","props","hotKey","onOpenChange","displayCommitish","preventClosing","inputRef","overlayOpen","onOverlayChange","focusTrapEnabled","buttonClassName","allowResizing","useFocusZone","extraIdEnding","idEnding","Date","now","buttonIdRef","onOverlayOpenChange","open","focusTrapSettings","useMemo","initialFocusRef","disabled","AnchoredOverlay","overlayProps","role","onOpen","onClose","renderAnchor","anchorProps","data-hotkey","svg","minWidth","trailingVisual","TriangleDownIcon","aria-label","data-testid","id","mr","TagIcon","GitBranchIcon","fontSize","Text","button","hidden","data-hotkey-scope","focusZoneSettings","bindKeys","FocusKeys","ArrowAll","Tab","div","aria-labelledby","RefSelectorFooter","href","isLinkItem","innerContent","commonProps","ActionList","LinkItem","Item","onSelect","RefItem","isCurrent","isDefault","gitRef","filterText","ariaPosInSet","ariaSetSize","innerRefItem","RefItemContent","showLeadingVisual","style","alignItems","Octicon","icon","CheckIcon","aria-hidden","pr","visibility","Label","RefsList","VirtualRefsList","FullRefsList","defaultBranch","currentCommitish","getHref","onSelectItem","maxHeight","overflowY","makeIndex","owner","repo","renderer","Branch","Tag","repositoryPath","action","getStateFromIndex","canCreate","showCreateAction","searchIndex","useRefWithOneInitialization","getInitialValue","RefSelectorV1","types","onBeforeCreate","onRefTypeChanged","onCreateError","closeOnSelect","selectedRefType","customFooterItemProps","setFilterText","createButtonRef","slice","setOverlayOpen","setFocusTrapEnabled","showTagWarningDialog","setShowTagWarningDialog","setRefType","normalizedSelectedRefType","defaultTypes","refsState","useRefs","setRefsState","branchRendererRef","branchIndexRef","tagRendererRef","tagIndexRef","useEffect","updateIndex","currentIndex","checkTagPath","checkTagNameExistsPath","createAndGoToBranch","window","location","checkTagAndCreate","changeRefType","newRefType","closeRefSelector","selectedItemRef","selectedItemRefType","RefSelectorActionList","onFilterChange","onRefTypeChange","onCreateBranch","focus","hideShowAll","viewAllJustify","showDividers","borderBottom","borderColor","pb","px","Heading","as","pl","IconButton","unsafeDisableTooltip","XIcon","RefTextFilter","defaultText","pt","RefTypeTabs","mx","Loading","LoadingFailed","RefsZeroState","Divider","marginTop","backgroundColor","CreateRefAction","ViewAllRefsAction","justify","forwardRef","RefTextFilterWithRef","TextInput","leadingVisual","SearchIcon","value","placeholder","onInput","target","HTMLInputElement","Spinner","type","fontWeight","fontFamily","RefSelector","TabNav","Link","aria-controls","selected","borderBottomRightRadius","borderBottomLeftRadius","Flash"],"sourceRoot":""}