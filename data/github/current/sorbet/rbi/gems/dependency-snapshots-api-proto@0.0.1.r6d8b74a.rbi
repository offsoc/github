# typed: false

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `dependency-snapshots-api-proto` gem.
# Please instead update this file by running `bin/tapioca gem dependency-snapshots-api-proto`.

# source://dependency-snapshots-api-proto//lib/dependencies_pb.rb#57
module Github; end

# source://dependency-snapshots-api-proto//lib/dependencies_pb.rb#58
module Github::DependencySnapshotsApi; end

class Github::DependencySnapshotsApi::BoomRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::BoomResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::CreateDependencySnapshotRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::CreateDependencySnapshotResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module Github::DependencySnapshotsApi::CreateDependencySnapshotResponse::Result
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://dependency-snapshots-api-proto//lib/snapshots_pb.rb#92
Github::DependencySnapshotsApi::CreateDependencySnapshotResponse::Result::ACCEPTED = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/snapshots_pb.rb#92
Github::DependencySnapshotsApi::CreateDependencySnapshotResponse::Result::INVALID = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/snapshots_pb.rb#92
Github::DependencySnapshotsApi::CreateDependencySnapshotResponse::Result::REMOVED = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/snapshots_pb.rb#92
Github::DependencySnapshotsApi::CreateDependencySnapshotResponse::Result::SUCCESS = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/dependencies_twirp.rb#15
class Github::DependencySnapshotsApi::DependenciesServiceClient < ::Twirp::Client
  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_dependencies_for_repository(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def has_manifests(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def repositories_containing_dependency(input, req_opts = T.unsafe(nil)); end
end

# source://dependency-snapshots-api-proto//lib/dependencies_twirp.rb#7
class Github::DependencySnapshotsApi::DependenciesServiceService < ::Twirp::Service; end

# source://dependency-snapshots-api-proto//lib/diagnostic_twirp.rb#17
class Github::DependencySnapshotsApi::DiagnosticServiceClient < ::Twirp::Client
  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def boom(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def is_feature_flag_enabled(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def is_feature_flag_enabled_for_repository(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def ping(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def timeout(input, req_opts = T.unsafe(nil)); end
end

# source://dependency-snapshots-api-proto//lib/diagnostic_twirp.rb#7
class Github::DependencySnapshotsApi::DiagnosticServiceService < ::Twirp::Service; end

# source://dependency-snapshots-api-proto//lib/entities/pull_request_pb.rb#34
module Github::DependencySnapshotsApi::Entities; end

class Github::DependencySnapshotsApi::Entities::PullRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module Github::DependencySnapshotsApi::Entities::PullRequest::PullRequestState
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://dependency-snapshots-api-proto//lib/entities/pull_request_pb.rb#36
Github::DependencySnapshotsApi::Entities::PullRequest::PullRequestState::CLOSED = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/entities/pull_request_pb.rb#36
Github::DependencySnapshotsApi::Entities::PullRequest::PullRequestState::MERGED = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/entities/pull_request_pb.rb#36
Github::DependencySnapshotsApi::Entities::PullRequest::PullRequestState::OPEN = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/entities/pull_request_pb.rb#36
Github::DependencySnapshotsApi::Entities::PullRequest::PullRequestState::UNKNOWN = T.let(T.unsafe(nil), Integer)

class Github::DependencySnapshotsApi::Entities::Push
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module Github::DependencySnapshotsApi::Entities::Push::ActivityType
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://dependency-snapshots-api-proto//lib/entities/push_pb.rb#35
Github::DependencySnapshotsApi::Entities::Push::ActivityType::BRANCH_CREATION = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/entities/push_pb.rb#35
Github::DependencySnapshotsApi::Entities::Push::ActivityType::BRANCH_DELETION = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/entities/push_pb.rb#35
Github::DependencySnapshotsApi::Entities::Push::ActivityType::DIRECT_PUSH = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/entities/push_pb.rb#35
Github::DependencySnapshotsApi::Entities::Push::ActivityType::FORCE_PUSH = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/entities/push_pb.rb#35
Github::DependencySnapshotsApi::Entities::Push::ActivityType::MERGE_QUEUE_MERGE = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/entities/push_pb.rb#35
Github::DependencySnapshotsApi::Entities::Push::ActivityType::PR_MERGE = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/entities/push_pb.rb#35
Github::DependencySnapshotsApi::Entities::Push::ActivityType::PUSH = T.let(T.unsafe(nil), Integer)

class Github::DependencySnapshotsApi::Entities::Repository
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module Github::DependencySnapshotsApi::Entities::Repository::Visibility
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://dependency-snapshots-api-proto//lib/entities/repository_pb.rb#34
Github::DependencySnapshotsApi::Entities::Repository::Visibility::INTERNAL = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/entities/repository_pb.rb#34
Github::DependencySnapshotsApi::Entities::Repository::Visibility::PRIVATE = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/entities/repository_pb.rb#34
Github::DependencySnapshotsApi::Entities::Repository::Visibility::PUBLIC = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/entities/repository_pb.rb#34
Github::DependencySnapshotsApi::Entities::Repository::Visibility::VISIBILITY_UNKNOWN = T.let(T.unsafe(nil), Integer)

class Github::DependencySnapshotsApi::Entities::User
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module Github::DependencySnapshotsApi::Entities::User::Type
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://dependency-snapshots-api-proto//lib/entities/user_pb.rb#28
Github::DependencySnapshotsApi::Entities::User::Type::BOT = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/entities/user_pb.rb#28
Github::DependencySnapshotsApi::Entities::User::Type::ORGANIZATION = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/entities/user_pb.rb#28
Github::DependencySnapshotsApi::Entities::User::Type::PROGRAMMATIC_ACCESS_BOT = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/entities/user_pb.rb#28
Github::DependencySnapshotsApi::Entities::User::Type::UNKNOWN = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/entities/user_pb.rb#28
Github::DependencySnapshotsApi::Entities::User::Type::USER = T.let(T.unsafe(nil), Integer)

class Github::DependencySnapshotsApi::ExcludeDependencySnapshotsRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::ExcludeDependencySnapshotsResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::GetDependenciesForRepositoryRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::GetDependenciesForRepositoryResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::GetDependenciesForRepositoryResponse::Snapshot
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::GetDependenciesForRepositoryResponse::Snapshot::DetectorMetadata
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::GetDependencySnapshotRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::GetDependencySnapshotResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::GetIncludedDependencySnapshotsRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::GetIncludedDependencySnapshotsResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::GetIncludedDependencySnapshotsResponse::IncludedSnapshot
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::GetSnapshotDiffRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::GetSnapshotDiffResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module Github::DependencySnapshotsApi::GetSnapshotDiffResponse::ChangeType
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://dependency-snapshots-api-proto//lib/snapshots_pb.rb#104
Github::DependencySnapshotsApi::GetSnapshotDiffResponse::ChangeType::ADDED = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/snapshots_pb.rb#104
Github::DependencySnapshotsApi::GetSnapshotDiffResponse::ChangeType::REMOVED = T.let(T.unsafe(nil), Integer)

class Github::DependencySnapshotsApi::GetSnapshotDiffResponse::DependencyChange
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module Github::DependencySnapshotsApi::GetSnapshotDiffResponse::Scope
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://dependency-snapshots-api-proto//lib/snapshots_pb.rb#105
Github::DependencySnapshotsApi::GetSnapshotDiffResponse::Scope::DEVELOPMENT = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/snapshots_pb.rb#105
Github::DependencySnapshotsApi::GetSnapshotDiffResponse::Scope::NONE = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/snapshots_pb.rb#105
Github::DependencySnapshotsApi::GetSnapshotDiffResponse::Scope::RUNTIME = T.let(T.unsafe(nil), Integer)

class Github::DependencySnapshotsApi::GetSnapshotDiffResponse::SnapshotMetadata
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::HasManifestsRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::HasManifestsResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::IsFeatureFlagEnabledBatchResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::IsFeatureFlagEnabledForRepositoryRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::IsFeatureFlagEnabledRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::IsFeatureFlagEnabledSingleResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::Manifest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::Manifest::Dependency
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module Github::DependencySnapshotsApi::Manifest::Dependency::Scope
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://dependency-snapshots-api-proto//lib/dependencies_pb.rb#61
Github::DependencySnapshotsApi::Manifest::Dependency::Scope::DEVELOPMENT = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/dependencies_pb.rb#61
Github::DependencySnapshotsApi::Manifest::Dependency::Scope::NONE = T.let(T.unsafe(nil), Integer)

# source://dependency-snapshots-api-proto//lib/dependencies_pb.rb#61
Github::DependencySnapshotsApi::Manifest::Dependency::Scope::RUNTIME = T.let(T.unsafe(nil), Integer)

class Github::DependencySnapshotsApi::PingRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::PingResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::RepositoriesContainingDependencyRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::RepositoriesContainingDependencyResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

# source://dependency-snapshots-api-proto//lib/snapshots_twirp.rb#17
class Github::DependencySnapshotsApi::SnapshotsServiceClient < ::Twirp::Client
  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def create_dependency_snapshot(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def exclude_dependency_snapshots(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_dependency_snapshot(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_included_dependency_snapshots(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_snapshot_diff(input, req_opts = T.unsafe(nil)); end
end

# source://dependency-snapshots-api-proto//lib/snapshots_twirp.rb#7
class Github::DependencySnapshotsApi::SnapshotsServiceService < ::Twirp::Service; end

class Github::DependencySnapshotsApi::TimeoutRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::TimeoutResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

# source://dependency-snapshots-api-proto//lib/v2/snapshots_pb.rb#31
module Github::DependencySnapshotsApi::V2; end

class Github::DependencySnapshotsApi::V2::AsyncCreateSnapshotRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::V2::AsyncCreateSnapshotResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

# source://dependency-snapshots-api-proto//lib/v2/snapshots_twirp.rb#14
class Github::DependencySnapshotsApi::V2::SnapshotsClient < ::Twirp::Client
  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def async_create_snapshot(input, req_opts = T.unsafe(nil)); end
end

# source://dependency-snapshots-api-proto//lib/v2/snapshots_twirp.rb#8
class Github::DependencySnapshotsApi::V2::SnapshotsService < ::Twirp::Service; end

# source://dependency-snapshots-api-proto//lib/workers_pb.rb#19
module Github::DependencySnapshotsApi::Workers; end

class Github::DependencySnapshotsApi::Workers::EchoJob
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Github::DependencySnapshotsApi::Workers::PullRequestUpdatedJob
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module Google::Protobuf::MessageExts::ClassMethods; end
