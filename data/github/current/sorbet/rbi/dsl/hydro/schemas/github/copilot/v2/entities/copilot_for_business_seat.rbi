# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessSeat`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessSeat`.

class Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessSeat
  sig do
    params(
      assigned_user: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      assignment: T.nilable(Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessSeatAssignment),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      enterprise_id: T.nilable(Integer),
      id: T.nilable(Integer),
      organization_id: T.nilable(Integer)
    ).void
  end
  def initialize(assigned_user: nil, assignment: nil, created_at: nil, enterprise_id: nil, id: nil, organization_id: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def assigned_user; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def assigned_user=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessSeatAssignment)) }
  def assignment; end

  sig do
    params(
      value: T.nilable(Hydro::Schemas::Github::Copilot::V2::Entities::CopilotForBusinessSeatAssignment)
    ).void
  end
  def assignment=(value); end

  sig { void }
  def clear_assigned_user; end

  sig { void }
  def clear_assignment; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_enterprise_id; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_organization_id; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(Integer) }
  def enterprise_id; end

  sig { params(value: Integer).void }
  def enterprise_id=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(Integer) }
  def organization_id; end

  sig { params(value: Integer).void }
  def organization_id=(value); end
end
