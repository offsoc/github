{"version":3,"file":"chunk-app_components_security_center_coverage_enablement_multi-repo-enablement-element_ts-xxxxxxxxxxxx.js","mappings":"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","sources":["app/components/security_center/coverage/enablement/multi-repo-enablement-element.ts"],"sourcesContent":["import {attr, controller, target} from '@github/catalyst'\nimport type {FrameElement} from '@github/turbo'\nimport type MultiRepoEnablementSettingElement from './multi-repo-enablement-setting-element'\n\n@controller\nexport default class MultiRepoEnablementElement extends HTMLElement {\n  @attr selectedReposCount = 0\n  @attr contentUrl = ''\n  @target changedSettingsCountElement: HTMLElement\n  @target form: HTMLFormElement\n  @target selectedReposCountElement: HTMLElement\n  @target showButton: HTMLButtonElement\n  @target submitErrorMessage: HTMLElement\n  @target submitButton: HTMLButtonElement\n  @target dialogContentElement: FrameElement\n\n  selectedReposChangedSinceLastFetch: boolean\n\n  attributeChangedCallback(name: string): void {\n    if (name === 'data-selected-repos-count') {\n      this.selectedReposCountChanged()\n    }\n  }\n\n  get changedSettingsCount(): number {\n    let changedSettingsCount = 0\n    for (const setting of this.form.querySelectorAll<MultiRepoEnablementSettingElement>(\n      'multi-repo-enablement-setting',\n    )) {\n      if (parseInt(setting?.settingSelection?.value, 10) >= 0) {\n        changedSettingsCount++\n      }\n    }\n\n    return changedSettingsCount\n  }\n\n  handleSettingSelectionChange(): void {\n    if (this.submitErrorMessage) {\n      this.submitErrorMessage.hidden = true\n    }\n\n    if (this.changedSettingsCountElement) {\n      this.changedSettingsCountElement.textContent = String(this.changedSettingsCount)\n    }\n  }\n\n  reset(): void {\n    this.form.reset()\n\n    for (const setting of this.form.querySelectorAll<MultiRepoEnablementSettingElement>(\n      'multi-repo-enablement-setting',\n    )) {\n      // If you rapidly open and close the dialog, it can produce the error:\n      //   TypeError e.handleSelectionChange is not a function\n      // So we're adding a guard here.\n      if (typeof setting?.handleSelectionChange === 'function') {\n        setting.handleSelectionChange()\n      }\n    }\n\n    this.handleSettingSelectionChange()\n  }\n\n  selectedReposCountChanged(): void {\n    const repositoryText = this.selectedReposCount === 1 ? 'repository' : 'repositories'\n\n    if (this.selectedReposCountElement) {\n      this.selectedReposCountElement.textContent = `${this.selectedReposCount} ${repositoryText} selected`\n    }\n    this.selectedReposChangedSinceLastFetch = true\n  }\n\n  showDialog(): void {\n    // Force the async dialog content to reload on each open when the selected repos have changed\n    if (this.selectedReposChangedSinceLastFetch) {\n      this.reloadDialogContent()\n      this.selectedReposChangedSinceLastFetch = false\n    }\n  }\n\n  submit(evt: SubmitEvent): void {\n    evt.preventDefault()\n    this.submitButton.disabled = this.changedSettingsCount !== 0\n\n    if (this.changedSettingsCount === 0) {\n      this.submitErrorMessage.hidden = false\n      this.submitErrorMessage.focus()\n      return\n    }\n\n    this.submitButton.textContent = 'Submittingâ€¦'\n    this.form.submit()\n  }\n\n  private reloadDialogContent(): void {\n    const contentUrl = new URL(this.contentUrl, window.location.origin)\n\n    if (this.form['use_query'].value === 'true') {\n      contentUrl.searchParams.set('use_query', 'true')\n      contentUrl.searchParams.set('query', this.form['query'].value)\n    } else {\n      contentUrl.searchParams.set('selected_repo_ids', this.form['selected_repo_ids'].value)\n    }\n\n    if (this.dialogContentElement) {\n      this.dialogContentElement.src = contentUrl.toString()\n    }\n  }\n}\n"],"names":["MultiRepoEnablementElement","HTMLElement","attributeChangedCallback","name","selectedReposCountChanged","changedSettingsCount","setting","form","querySelectorAll","parseInt","settingSelection","value","handleSettingSelectionChange","submitErrorMessage","hidden","changedSettingsCountElement","textContent","String","reset","handleSelectionChange","repositoryText","selectedReposCount","selectedReposCountElement","selectedReposChangedSinceLastFetch","showDialog","reloadDialogContent","submit","evt","preventDefault","submitButton","disabled","focus","contentUrl","URL","window","location","origin","searchParams","set","dialogContentElement","src","toString","attr","target","controller"],"sourceRoot":""}