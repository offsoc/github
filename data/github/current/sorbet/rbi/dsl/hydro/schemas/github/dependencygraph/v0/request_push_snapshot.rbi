# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Dependencygraph::V0::RequestPushSnapshot`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Dependencygraph::V0::RequestPushSnapshot`.

class Hydro::Schemas::Github::Dependencygraph::V0::RequestPushSnapshot
  sig do
    params(
      before_sha: T.nilable(String),
      manifest_files: T.nilable(T.any(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::Dependencygraph::V0::RequestPushSnapshot::ManifestFileChanged], T::Array[Hydro::Schemas::Github::Dependencygraph::V0::RequestPushSnapshot::ManifestFileChanged])),
      owner_name: T.nilable(String),
      push_id: T.nilable(Integer),
      pushed_at: T.nilable(Google::Protobuf::Timestamp),
      ref: T.nilable(String),
      repository: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository),
      sha: T.nilable(String)
    ).void
  end
  def initialize(before_sha: nil, manifest_files: T.unsafe(nil), owner_name: nil, push_id: nil, pushed_at: nil, ref: nil, repository: nil, sha: nil); end

  sig { returns(String) }
  def before_sha; end

  sig { params(value: String).void }
  def before_sha=(value); end

  sig { void }
  def clear_before_sha; end

  sig { void }
  def clear_manifest_files; end

  sig { void }
  def clear_owner_name; end

  sig { void }
  def clear_push_id; end

  sig { void }
  def clear_pushed_at; end

  sig { void }
  def clear_ref; end

  sig { void }
  def clear_repository; end

  sig { void }
  def clear_sha; end

  sig do
    returns(Google::Protobuf::RepeatedField[Hydro::Schemas::Github::Dependencygraph::V0::RequestPushSnapshot::ManifestFileChanged])
  end
  def manifest_files; end

  sig do
    params(
      value: Google::Protobuf::RepeatedField[Hydro::Schemas::Github::Dependencygraph::V0::RequestPushSnapshot::ManifestFileChanged]
    ).void
  end
  def manifest_files=(value); end

  sig { returns(String) }
  def owner_name; end

  sig { params(value: String).void }
  def owner_name=(value); end

  sig { returns(Integer) }
  def push_id; end

  sig { params(value: Integer).void }
  def push_id=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def pushed_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def pushed_at=(value); end

  sig { returns(String) }
  def ref; end

  sig { params(value: String).void }
  def ref=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)) }
  def repository; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)).void }
  def repository=(value); end

  sig { returns(String) }
  def sha; end

  sig { params(value: String).void }
  def sha=(value); end
end
