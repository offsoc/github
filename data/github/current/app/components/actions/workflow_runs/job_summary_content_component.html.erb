<%# erblint:counter DeprecatedComponentsCounter 2 %>

<% if expired? %>
  <include-fragment class="pt-2 pb-1 mt-3 mb-0 position-relative" <%= test_selector("job-summary-expired")%>>
    <svg aria-hidden="true" class="width-full" style="max-width: 340px;" height="84" viewBox="0 0 340 84" xmlns="http://www.w3.org/2000/svg" class="d-block">
      <path clip-path="url(#diff-placeholder)" d="M0 0h340v84H0z" style="fill: var(--bgColor-muted, var(--color-canvas-subtle))" fill-rule="evenodd"></path>
    </svg>
    <div class="position-absolute top-0 left-0 height-full width-full">
      <div class="height-full d-flex flex-column flex-justify-center flex-items-center">
        <span class="f4 ml-2 color-fg-default text-semibold">This job summary has expired and is no longer available</span>
      </div>
    </div>
  </include-fragment>
<% else %>
  <% if @preload %>
    <%# will load rendered step summaries, and check for any fetching/rendering errors %>
    <% rendered_steps %>
  <% end %>

  <% if !@preload || @show_error %>
    <include-fragment class="pt-2 pb-1 mt-3 mb-0 position-relative" data-target="job-summary.fragment">
      <svg aria-hidden="true" class="width-full" style="max-width: 340px;" height="84" viewBox="0 0 340 84" xmlns="http://www.w3.org/2000/svg" class="d-block">
        <%# diff-placeholder svg gets rendered in the job_summaries_component once %>
        <path clip-path="url(#diff-placeholder)" d="M0 0h340v84H0z" style="fill: var(--bgColor-muted, var(--color-canvas-subtle))" fill-rule="evenodd"></path>
      </svg>
      <div class="position-absolute top-0 left-0 height-full width-full">
        <%= render(Primer::ButtonComponent.new(data: { target: "job-summary.loadButton", action: "click:job-summary#loadSummary" }, hidden: @show_error, size: :medium, scheme: :link, underline: false, font_size: 4, font_weight: :semibold, h: :full, w: :full)) { "Load summary" } %>
        <div data-target="job-summary.loader" class="height-full d-flex flex-justify-center flex-items-center" hidden>
          <span class="f4 color-fg-muted text-semibold">Loading...</span>
        </div>
        <div data-target="job-summary.error" class="height-full d-flex flex-column flex-justify-center flex-items-center" <%= 'hidden' unless @show_error %>>
          <div>
            <%= render(Primer::Beta::Octicon.new(:"x-circle", color: :danger)) %> <span class="f4 ml-2 color-fg-danger text-semibold">Unable to load summary</span>
          </div>
          <%= render(Primer::ButtonComponent.new(data: { target: "job-summary.retryButton", action: "click:job-summary#retrySummary" }, scheme: :link, underline: false, font_size: 4, font_weight: :bold)) { "Retry" } %>
        </div>
      </div>
    </include-fragment>
  <% else %>
    <%= render Primer::Beta::Markdown.new(test_selector: "job-summary-markdown") do %>
      <% rendered_steps.each do |html_step| %>
        <%= html_step %>
      <% end %>
    <% end %>
    <div class="mt-3 pt-1 text-small" <%= test_selector("job-summary-subtext") %>>
      <% if job_summary.is_truncated? %>
        <span class="color-fg-attention">
          <%= render(Primer::Beta::Octicon.new(:alert, color: :attention)) %>
          Summary truncated after exceeding limits.
          <%# `underline: true` doesn't work on link component, and can't override w/ css class or raises err %>
          <%= render(Primer::Beta::Link.new(href: DOCS_URL, color: :attention, classes: "Link--inTextBlock" )) do %>
            <span class="text-underline">Learn more</span>
          <% end %>
        </span>
      <% else %>
        <%= render(Primer::Beta::Link.new(href: DOCS_URL, scheme: :secondary, classes: "Link--inTextBlock" )) { "Job summary generated at run-time" } %>
      <% end %>
    </div>
  <% end %>
<% end %>
