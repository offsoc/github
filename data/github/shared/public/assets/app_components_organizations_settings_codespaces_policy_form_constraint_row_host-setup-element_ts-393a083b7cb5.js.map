{"version":3,"file":"chunk-app_components_organizations_settings_codespaces_policy_form_constraint_row_host-setup-element_ts-xxxxxxxxxxxx.js","mappings":"2hBAQA,IAAIA,EAAuB,CAAC,EAG5B,QACMC,yBAAyBC,YAS7BC,mBAA0B,CACxB,IAAI,CAACC,2BAA2B,GAChC,IAAI,CAACC,0BAA0B,GAC/B,IAAI,CAACC,gBAAgB,GACrB,IAAI,CAACC,gBAAgB,EACvB,CAEAH,6BAA8B,CAG5B,IAAK,IAAMI,KAFMC,SAASC,gBAAgB,CAAC,oCAGzCF,EAAKG,gBAAgB,CAAC,QAASC,IAC7B,IAAMC,EAAiB,EAAOC,MAAM,CAAsBC,WAAW,CAEjEF,GAAkBA,EAAeG,QAAQ,CAAC,OAC5ChB,EAAUiB,IAAI,CAAGJ,EAAeK,IAAI,GACpC,IAAI,CAACC,cAAc,GAEvB,EAEJ,CAEAC,+BAAsC,CACpC,IAAMC,EAAiB,IAAI,CAACC,YAAY,CAACC,YAAY,CAAC,wBACtD,IAAI,CAACC,aAAa,CAAC,IAAIC,YAAY,SAAU,CAACC,OAAQ,CAAC1B,UAAAA,EAAWqB,eAAAA,CAAc,CAAC,GACnF,CAEA,MAAMF,gBAAgC,CAC/BnB,EAAUiB,IAAI,GAInB,IAAI,CAACU,sBAAsB,GAE3B,MAAM,IAAI,CAACC,eAAe,CAAC5B,EAAUiB,IAAI,CAAE,IAC3C,IAAI,CAACY,iBAAiB,CAACC,MAAM,CAAG,GAChC,IAAI,CAACC,YAAY,CAACD,MAAM,CAAG,GAC3B,IAAI,CAACzB,0BAA0B,GACjC,CAEA,MAAME,kBAAmB,CACnBP,EAAUiB,IAAI,EAAIjB,SAAAA,EAAUiB,IAAI,EAClC,MAAM,IAAI,CAACW,eAAe,CAAC5B,EAAUiB,IAAI,CAE7C,CAEA,MAAMe,cAAcf,CAAY,CAAqB,CACnD,GAAI,CACF,IAAMgB,EAAW,MAAMC,MAAM,CAAC,CAAC,EAAEjB,EAAK,iBAAiB,CAAC,CAAE,CACxDkB,OAAQ,MACRC,QAAS,CACP,mBAAoB,gBACtB,CACF,GAEA,GAAI,CAACH,EAASI,EAAE,CAAE,MAAO,EAAE,CAG3B,MAAOC,CADc,MAAML,EAASM,IAAI,EAAC,EACrBC,IAAI,CACxB,MAAOC,EAAO,CACd,MAAO,EAAE,CAEb,CAEA,MAAMb,gBAAgBX,CAAY,CAAEyB,EAAyB,EAAK,CAAiB,CACjF,IAAMC,EAAW,MAAM,IAAI,CAACX,aAAa,CAACf,GAE1C,GAAIyB,EAAe,CACjB,IAAME,EAAgBD,CAAQ,CAAC,EAAE,CACjC3C,EAAU6C,MAAM,CAAGD,CACrB,CAEA,IAAI,CAACE,wBAAwB,GAE7B,IAAMC,EAAUtC,SAASuC,cAAc,CAAC,0BACxC,GAAID,EAAS,CACX,IAAME,EAAWN,EACdO,GAAG,CACFL,GAAU,CAAC;;uDAEkC,EAAEA,EAAO;;;;;sFAKsB,EAAEA,EAAO;;UAErF,CAAC,EAEFM,IAAI,CAAC,GACRJ,CAAAA,EAAQK,SAAS,CAAGH,CACtB,CACF,CAEAI,WAAWzC,CAAY,CAAE,CACvBZ,EAAU6C,MAAM,CAAG,EAAO/B,MAAM,CAAsBwC,KAAK,CAC3D,IAAI,CAACR,wBAAwB,GAC7B,IAAI,CAACzC,0BAA0B,EACjC,CAEAyC,0BAA2B,CACzB,IAAMS,EAAgB9C,SAAS+C,aAAa,CAAC,6CACzCD,GACFA,CAAAA,EAAcxC,WAAW,CAAGf,EAAU6C,MAAM,EAAI,MAAK,CAEzD,CAEAlB,wBAAyB,CACvB,IAAM4B,EAAgB9C,SAAS+C,aAAa,CAAC,2CACzCD,GACFA,CAAAA,EAAcxC,WAAW,CAAGf,EAAUiB,IAAI,EAAI,MAAK,CAEvD,CAEAwC,SAAS7C,CAAY,CAAE,CACrBZ,EAAU0D,IAAI,CAAG,EAAO5C,MAAM,CAAsBwC,KAAK,CACzD,IAAI,CAACjD,0BAA0B,EACjC,CAEAsD,sBAA+B,CAC7B,IAAMZ,EAAUtC,SAAS+C,aAAa,CAAC,2CACvC,OAAOT,GAAShC,aAAe,MACjC,CAEA6C,wBAAiC,CAC/B,IAAMb,EAAUtC,SAAS+C,aAAa,CAAC,6CACvC,OAAOT,GAAShC,aAAe,MACjC,CAEA8C,sBAA+B,CAC7B,OAAO,IAAI,CAACC,YAAY,CAACR,KAAK,CAACpC,IAAI,IAAM,MAC3C,CAEAZ,kBAAmB,CACjBN,EAAY,CACViB,KAAM,IAAI,CAAC0C,oBAAoB,GAC/Bd,OAAQ,IAAI,CAACe,sBAAsB,GACnCF,KAAM,IAAI,CAACG,oBAAoB,EACjC,CACF,CAEAE,qBAAqBnD,CAAY,CAAQ,CAGvC,IAAMoD,EAAWC,EAFInD,MAAM,CAEHoD,OAAO,CAAC,aAC5BF,GACFA,EAASG,eAAe,CAAC,OAE7B,CAEA9D,4BAA6B,CAC3B,IAAI,CAAC+D,gBAAgB,CAACtC,MAAM,CAAG,GAC/B,IAAMuC,EACJ,aAAI,CAACV,oBAAoB,IACzB,aAAI,CAACC,sBAAsB,IAC3B,aAAI,CAACC,oBAAoB,EAE3B,KAAI,CAACS,gBAAgB,CAACC,QAAQ,CAAGF,CACnC,CAEA,MAAMG,cAAc5D,CAAY,CAAE,CAChC,IAAM6D,EAAuBhE,SAAS+C,aAAa,CACjD,2DAGEiB,GAAwBA,iCAAAA,EAAqB1D,WAAW,EAC1D0D,CAAAA,EAAqB1D,WAAW,CAAG,EAAC,EAGtC,IAAM2D,EAAM,CAAC,CAAC,EAAE1E,EAAUiB,IAAI,CAAC,MAAM,EAAEjB,EAAU6C,MAAM,CAAC,CAAC,EAAE7C,EAAU0D,IAAI,CAAC,CAAC,CAE3E,GAAI,CACF,IAAMzB,EAAW,MAAMC,MAAMwC,EAAK,CAChCvC,OAAQ,MACRC,QAAS,CACP,mBAAoB,gBACtB,CACF,GAEA,GAAIH,MAAAA,EAAS0C,MAAM,CAAU,CAC3B,IAAI,CAACvD,6BAA6B,GAClC,IAAMwD,EAAY,IAAI,CAACC,mBAAmB,CAACtD,YAAY,CAAC,cACxD,IAAI,CAACuD,iBAAiB,CAAC,CAAC,EAAEF,EAAU,EAAEF,EAAI,CAAC,EAC3C,IAAI,CAACX,oBAAoB,CAACnD,GAC1B,MACF,CAA+B,MAApBqB,EAAS0C,MAAM,EACxB,KAAI,CAACP,gBAAgB,CAACrD,WAAW,CAAG,yDAAwD,EAG9F,IAAI,CAACqD,gBAAgB,CAACtC,MAAM,CAAG,GAC/B,IAAI,CAACwC,gBAAgB,CAACC,QAAQ,CAAG,EACnC,CAAE,KAAM,CACN,IAAI,CAACH,gBAAgB,CAACtC,MAAM,CAAG,GAC/B,IAAI,CAACwC,gBAAgB,CAACC,QAAQ,CAAG,EACnC,CACF,CAEAO,kBAAkBJ,CAAW,CAAE,CAC7B,IAAM3B,EAAUtC,SAAS+C,aAAa,CAAC,0DACvC,GAAIT,OAAAA,EAAkB,CACpBA,EAAQhC,WAAW,CAAG,GACtB,IAAMgE,EAAOtE,SAASuE,aAAa,CAAC,KAEpCD,EAAKE,SAAS,CAACC,GAAG,CAAC,OAAQ,kBAC3BH,EAAKhE,WAAW,CAAG2D,EACnBK,EAAKI,IAAI,CAAGC,UAAUV,GACtB3B,EAAQsC,WAAW,CAACN,EACtB,CACF,CACF,E,GAzNGjE,EAAAA,EAAMA,C,CADHb,EAAAA,SAAAA,CAAAA,sBAAAA,KAAAA,G,GAEHa,EAAAA,EAAMA,C,CAFHb,EAAAA,SAAAA,CAAAA,oBAAAA,KAAAA,G,GAGHa,EAAAA,EAAMA,C,CAHHb,EAAAA,SAAAA,CAAAA,eAAAA,KAAAA,G,GAIHa,EAAAA,EAAMA,C,CAJHb,EAAAA,SAAAA,CAAAA,eAAAA,KAAAA,G,GAKHa,EAAAA,EAAMA,C,CALHb,EAAAA,SAAAA,CAAAA,mBAAAA,KAAAA,G,GAMHa,EAAAA,EAAMA,C,CANHb,EAAAA,SAAAA,CAAAA,eAAAA,KAAAA,G,GAOHa,EAAAA,EAAMA,C,CAPHb,EAAAA,SAAAA,CAAAA,mBAAAA,KAAAA,GAAAA,EAAAA,EAAAA,CADLqF,EAAAA,EAAUA,C,CACLrF,E","sources":["app/components/organizations/settings/codespaces_policy_form/constraint_row/host-setup-element.ts"],"sourcesContent":["import {controller, target} from '@github/catalyst'\n\ninterface HostSetup {\n  repo?: string\n  branch?: string\n  path?: string\n}\n\nlet hostSetup: HostSetup = {}\nlet radioMenuItems: NodeListOf<Element> = {} as NodeListOf<Element>\n\n@controller\nclass HostSetupElement extends HTMLElement {\n  @target repositoryFormGroup: HTMLDivElement\n  @target branchSelectorBox: HTMLDivElement\n  @target pathInputBox: HTMLDivElement\n  @target hostSetupBox: HTMLDivElement\n  @target configSaveButton: HTMLButtonElement\n  @target selectedPath: HTMLInputElement\n  @target saveErrorElement: HTMLElement\n\n  connectedCallback(): void {\n    this.repositoriesAddEventListner()\n    this.updateSaveButtonVisibility()\n    this.updateHostConfig()\n    this.updateBranchList()\n  }\n\n  repositoriesAddEventListner() {\n    radioMenuItems = document.querySelectorAll('#host-setup-repository-menu-list')\n\n    for (const item of radioMenuItems) {\n      item.addEventListener('click', event => {\n        const repositoryName = (event.target as HTMLInputElement).textContent\n\n        if (repositoryName && repositoryName.includes('/')) {\n          hostSetup.repo = repositoryName.trim()\n          this.saveRepository()\n        }\n      })\n    }\n  }\n\n  saveHostSetupConstraintChange(): void {\n    const constraintName = this.hostSetupBox.getAttribute('data-constraint-name')\n    this.dispatchEvent(new CustomEvent('commit', {detail: {hostSetup, constraintName}}))\n  }\n\n  async saveRepository(): Promise<void> {\n    if (!hostSetup.repo) {\n      return\n    }\n\n    this.updateSelectedRepoText()\n\n    await this.addBranchesList(hostSetup.repo, true)\n    this.branchSelectorBox.hidden = false\n    this.pathInputBox.hidden = false\n    this.updateSaveButtonVisibility()\n  }\n\n  async updateBranchList() {\n    if (hostSetup.repo && hostSetup.repo !== 'None') {\n      await this.addBranchesList(hostSetup.repo)\n    }\n  }\n\n  async getBranchList(repo: string): Promise<string[]> {\n    try {\n      const response = await fetch(`/${repo}/refs?type=branch`, {\n        method: 'GET',\n        headers: {\n          'X-Requested-With': 'XMLHttpRequest',\n        },\n      })\n\n      if (!response.ok) return []\n\n      const responseJSON = await response.json()\n      return responseJSON.refs\n    } catch (error) {\n      return []\n    }\n  }\n\n  async addBranchesList(repo: string, updateDefault: boolean = false): Promise<void> {\n    const branches = await this.getBranchList(repo)\n\n    if (updateDefault) {\n      const defaultBranch = branches[0]\n      hostSetup.branch = defaultBranch\n    }\n\n    this.updateSelectedBranchText()\n\n    const element = document.getElementById('data-filterable-branch')\n    if (element) {\n      const menuHTML = branches\n        .map(\n          branch => `\n            <label tabindex=\"0\" class=\"select-menu-item\" role=\"menuitemradio\" aria-checked=\"false\">\n              <input type=\"radio\" name=\"branch\" value=\"${branch}\"\n                data-action=\"change:host-setup#saveBranch\">\n                <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" class=\"octicon octicon-check select-menu-item-icon\">\n                  <path d=\"M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z\"></path>\n                </svg>\n                <span class=\"text-normal select-menu-item-text\" data-menu-button-text>${branch}</span>\n            </label>\n          `,\n        )\n        .join('')\n      element.innerHTML = menuHTML\n    }\n  }\n\n  saveBranch(event: Event) {\n    hostSetup.branch = (event.target as HTMLInputElement).value\n    this.updateSelectedBranchText()\n    this.updateSaveButtonVisibility()\n  }\n\n  updateSelectedBranchText() {\n    const buttonElement = document.querySelector('[data-target=\"host-setup.selectedBranch\"]') as HTMLElement\n    if (buttonElement) {\n      buttonElement.textContent = hostSetup.branch || 'None'\n    }\n  }\n\n  updateSelectedRepoText() {\n    const buttonElement = document.querySelector('[data-target=\"host-setup.selectedRepo\"]') as HTMLElement\n    if (buttonElement) {\n      buttonElement.textContent = hostSetup.repo || 'None'\n    }\n  }\n\n  savePath(event: Event) {\n    hostSetup.path = (event.target as HTMLInputElement).value\n    this.updateSaveButtonVisibility()\n  }\n\n  getSelectedRepoValue(): string {\n    const element = document.querySelector('[data-target=\"host-setup.selectedRepo\"]')\n    return element?.textContent || 'None'\n  }\n\n  getSelectedBranchValue(): string {\n    const element = document.querySelector('[data-target=\"host-setup.selectedBranch\"]')\n    return element?.textContent || 'None'\n  }\n\n  getSelectedPathValue(): string {\n    return this.selectedPath.value.trim() || 'None'\n  }\n\n  updateHostConfig() {\n    hostSetup = {\n      repo: this.getSelectedRepoValue(),\n      branch: this.getSelectedBranchValue(),\n      path: this.getSelectedPathValue(),\n    }\n  }\n\n  closeDetailsDropdown(event: Event): void {\n    const button = event.target as HTMLElement\n\n    const dropdown = button.closest('.dropdown')\n    if (dropdown) {\n      dropdown.removeAttribute('open')\n    }\n  }\n\n  updateSaveButtonVisibility() {\n    this.saveErrorElement.hidden = true\n    const isInvalid =\n      this.getSelectedRepoValue() === 'None' ||\n      this.getSelectedBranchValue() === 'None' ||\n      this.getSelectedPathValue() === 'None'\n\n    this.configSaveButton.disabled = isInvalid\n  }\n\n  async saveHostSetup(event: Event) {\n    const mainSaveErrorElement = document.querySelector(\n      '[data-target=\"codespaces-policy-form.saveErrorElement\"]',\n    ) as HTMLElement\n\n    if (mainSaveErrorElement && mainSaveErrorElement.textContent === 'Host setup must be specified') {\n      mainSaveErrorElement.textContent = ''\n    }\n\n    const url = `/${hostSetup.repo}/blob/${hostSetup.branch}/${hostSetup.path}`\n\n    try {\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'X-Requested-With': 'XMLHttpRequest',\n        },\n      })\n\n      if (response.status === 200) {\n        this.saveHostSetupConstraintChange()\n        const githubUrl = this.repositoryFormGroup.getAttribute('github-url')\n        this.updateDisplayText(`${githubUrl}${url}`)\n        this.closeDetailsDropdown(event)\n        return\n      } else if (response.status === 404) {\n        this.saveErrorElement.textContent = 'Error: Specified path does not exist in the repository.'\n      }\n\n      this.saveErrorElement.hidden = false\n      this.configSaveButton.disabled = true\n    } catch {\n      this.saveErrorElement.hidden = false\n      this.configSaveButton.disabled = true\n    }\n  }\n\n  updateDisplayText(url: string) {\n    const element = document.querySelector('[data-target=\"host-setup.selectedHostSetupValuesText\"]') as HTMLElement\n    if (element !== null) {\n      element.textContent = ''\n      const link = document.createElement('a')\n\n      link.classList.add('Link', 'color-fg-muted')\n      link.textContent = url\n      link.href = encodeURI(url)\n      element.appendChild(link)\n    }\n  }\n}\n"],"names":["hostSetup","HostSetupElement","HTMLElement","connectedCallback","repositoriesAddEventListner","updateSaveButtonVisibility","updateHostConfig","updateBranchList","item","document","querySelectorAll","addEventListener","event","repositoryName","target","textContent","includes","repo","trim","saveRepository","saveHostSetupConstraintChange","constraintName","hostSetupBox","getAttribute","dispatchEvent","CustomEvent","detail","updateSelectedRepoText","addBranchesList","branchSelectorBox","hidden","pathInputBox","getBranchList","response","fetch","method","headers","ok","responseJSON","json","refs","error","updateDefault","branches","defaultBranch","branch","updateSelectedBranchText","element","getElementById","menuHTML","map","join","innerHTML","saveBranch","value","buttonElement","querySelector","savePath","path","getSelectedRepoValue","getSelectedBranchValue","getSelectedPathValue","selectedPath","closeDetailsDropdown","dropdown","button","closest","removeAttribute","saveErrorElement","isInvalid","configSaveButton","disabled","saveHostSetup","mainSaveErrorElement","url","status","githubUrl","repositoryFormGroup","updateDisplayText","link","createElement","classList","add","href","encodeURI","appendChild","controller"],"sourceRoot":""}