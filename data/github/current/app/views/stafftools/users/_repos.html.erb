<%# `view` is Stafftools::User::ReposView or one of its subclasses (ex. PublicReposView) %>
<% if view.repos? %>
  <% if GitHub.flipper[:repo_last_pushed_at_stafftools].enabled?(current_user) %>
    <%= render(Primer::Beta::BorderBox.new(padding: :condensed)) do |component| %>
      <% component.with_body(p: 0) do %>
        <table class="stafftools-table">
          <thead>
            <tr>
              <th>Repo Name</th>
              <th class="text-center">Last Updated at</th>
              <th class="text-center">Disk Size</th>
              <th class="text-center">Disk Route</th>
            </tr>
          </thead>
          <tbody>
            <% view.repos.each do |repo| %>
              <tr>
                <td>
                  <%= primer_octicon(view.span_symbol(repo)) %>
                  <% if repo.owner_login %>
                    <a href="<%= gh_stafftools_repository_path repo %>" class="stafftools-repository">
                    <%= repo.name_with_owner %></a>
                  <% else %>
                    <%= repo.to_s %> (Unowned)
                  <% end %>
                  <%= "(Locked)" if repo.locked? %>


                <%= render(Primer::Beta::Label.new(scheme: :danger)) { "Disabled" } if repo.access.disabled? %>

                <% if GitHub.pages_enabled? && repo.page %>
                  <a href="<%= stafftools_repository_pages_path(repo) %>" title="Repository has a Pages record" class="color-fg-default"><%# erblint:disable GitHub::Accessibility::NoTitleAttribute %>
                    <%= primer_octicon(:file, :"aria-label" => "Repository has a Pages record") %></a>
                <% end %>

                <% if view.anonymous_git_access_enabled_for_repo?(repo) %>
                  <a href="<%= gh_admin_stafftools_repository_path(repo) %>" title="Anonymous Git read access is enabled for this repository" class="color-fg-default"><%# erblint:disable GitHub::Accessibility::NoTitleAttribute %>
                    <%= primer_octicon(:unmute, :"aria-label" => "Anonymous Git read access is enabled for this repository") %>
                  </a>
                <% end %>

                  <% if repo.fork? %>
                    <div class="text-small lh-condensed-ultra no-wrap">
                      <% if repo.parent.nil? %>
                        Fork parent missing
                      <% else %>
                        Forked from <%= repo.parent.name_with_owner %>
                      <% end %>
                    </div>
                  <% end %>
                </td>
                <td class="text-center repo-td-offset">
                  Updated <%= time_ago_in_words_js repo.pushed_at %>
                </td>
                <td class="text-center repo-td-offset">
                  <small class='<%= view.disk_use_classes repo %>'><%= repo.human_disk_usage %></small>
                </td>
                <td class="text-center repo-td-offset">
                  <strong class='<%= view.route_classes repo %>'><%= repo.safe_route %></strong>
                </td>
              </tr>
            <% end %>
          </tbody>
        </table>
      <% end %>
    <% end %>
    <div class="paginate-container">
      <%= will_paginate view.repos, :param_name => :repo_page %>
    </div>
  <% else %>
    <%= render(Primer::Beta::BorderBox.new(padding: :condensed)) do |component| %>
      <% view.repos.each do |repo| %>
        <% component.with_row(display: :flex) do %>
          <span class="flex-auto">
            <%= primer_octicon(view.span_symbol(repo)) %>
            <% if repo.owner_login %>
              <a href="<%= gh_stafftools_repository_path repo %>" class="stafftools-repository">
                <%= repo.name_with_owner %></a>
            <% else %>
              <%= repo.to_s %> (Unowned)
            <% end %>
            <%= "(Locked)" if repo.locked? %>
            <%= render(Primer::Beta::Label.new(scheme: :danger)) { "Disabled" } if repo.access.disabled? %>
            <% if GitHub.pages_enabled? && repo.page %>
              <a href="<%= stafftools_repository_pages_path(repo) %>" title="Repository has a Pages record" class="color-fg-default"><%# erblint:disable GitHub::Accessibility::NoTitleAttribute %>
                <%= primer_octicon(:file, :"aria-label" => "Repository has a Pages record") %></a>
            <% end %>
            <% if view.anonymous_git_access_enabled_for_repo?(repo) %>
              <a href="<%= gh_admin_stafftools_repository_path(repo) %>" title="Anonymous Git read access is enabled for this repository" class="color-fg-default"><%# erblint:disable GitHub::Accessibility::NoTitleAttribute %>
                <%= primer_octicon(:unmute, :"aria-label" => "Anonymous Git read access is enabled for this repository") %>
              </a>
            <% end %>
            <% if repo.fork? %>
              <div class="text-small lh-condensed-ultra no-wrap">
                <% if repo.parent.nil? %>
                  Fork parent missing
                <% else %>
                  Forked from <%= repo.parent.name_with_owner %>
                <% end %>
              </div>
            <% end %>
          </span>
          <span>
            <small class='<%= view.disk_use_classes repo %>'><%= repo.human_disk_usage %></small>
            <strong class='<%= view.route_classes repo %>'><%= repo.safe_route %></strong>
          </span>
        <% end %>
      <% end %>
    <% end %>
    <div class="paginate-container">
      <%= will_paginate view.repos, :param_name => :repo_page %>
    </div>
  <% end %>
<% else %>
  <p><%= view.no_repos_message %></p>
<% end %>
