{"version":3,"file":"chunk-node_modules_monaco-editor_esm_vs_basic-languages_pla_pla_js-xxxxxxxxxxxx.js","mappings":"oMAAA;;;;;+EAK+E,EAI/E,IAAIA,EAAO,CACTC,SAAU,CACRC,YAAa,GACf,EACAC,SAAU,CACR,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACX,CACDC,iBAAkB,CAChB,CAAEC,KAAM,IAAKC,MAAO,GAAI,EACxB,CAAED,KAAM,IAAKC,MAAO,GAAI,EACxB,CAAED,KAAM,IAAKC,MAAO,GAAI,EACzB,CACDC,iBAAkB,CAChB,CAAEF,KAAM,IAAKC,MAAO,GAAI,EACxB,CAAED,KAAM,IAAKC,MAAO,GAAI,EACxB,CAAED,KAAM,IAAKC,MAAO,GAAI,EACzB,EAECE,EAAW,CACbC,aAAc,GACdC,aAAc,OACdP,SAAU,CACR,CAAEE,KAAM,IAAKC,MAAO,IAAKK,MAAO,kBAAmB,EACnD,CAAEN,KAAM,IAAKC,MAAO,IAAKK,MAAO,iBAAkB,EAClD,CAAEN,KAAM,IAAKC,MAAO,IAAKK,MAAO,uBAAwB,EACzD,CACDC,SAAU,CACR,KACA,KACA,MACA,OACA,MACA,SACA,QACA,SACA,QACA,YACA,mBACA,QACA,KACA,KACA,OACD,CAEDC,QAAS,OACTC,WAAY,2BACZC,WAAY,aAEZC,UAAW,CACTC,KAAM,CAEJ,CAAEC,QAAS,aAAc,EACzB,CAAC,WAAY,UAAU,CAEvB,CACE,mBACA,CACEC,MAAO,CACL,OAAQ,CAAER,MAAO,YAAa,EAC9B,YAAa,CACXQ,MAAO,CACL,QAAS,CAAER,MAAO,aAAcS,KAAM,OAAQ,EAC9C,WAAY,CAAET,MAAO,aAAcS,KAAM,aAAc,CACzD,CACF,EACA,WAAY,CAAET,MAAO,YAAa,CACpC,CACF,EACD,CAED,CAAC,cAAe,aAAa,CAE7B,CAAC,cAAe,SAAS,CAC1B,CACDU,WAAY,CAAC,CAAC,aAAc,GAAG,CAAC,CAChCC,KAAM,CAAC,CAAEJ,QAAS,aAAc,EAAG,CAAC,MAAO,CAAEP,MAAO,OAAQS,KAAM,MAAO,EAAE,CAAC,CAC5EG,WAAY,CAEV,CACE,aACA,CACEJ,MAAO,CACL,OAAQ,CAAER,MAAO,GAAIS,KAAM,MAAO,EAClC,WAAY,EACd,CACF,EACD,CAED,CAAC,WAAY,UAAW,OAAO,CAE/B,CACE,aACA,CACED,MAAO,CACL,OAAQ,CAAER,MAAO,YAAaS,KAAM,MAAO,EAC3C,WAAY,WACd,CACF,EACD,CAED,CACE,SACA,CACED,MAAO,CACL,OAAQ,CAAER,MAAO,SAAUS,KAAM,MAAO,EACxC,WAAY,QACd,CACF,EACD,CAED,CACE,cACA,CACED,MAAO,CACL,OAAQ,CAAER,MAAO,aAAcS,KAAM,MAAO,EAC5C,WAAY,YACd,CACF,EACD,CAED,CACE,OACA,CACED,MAAO,CACL,OAAQ,CAAER,MAAO,YAAaS,KAAM,MAAO,EAC3C,WAAY,WACd,CACF,EACD,CACF,CAEL,C","sources":["node_modules/monaco-editor/esm/vs/basic-languages/pla/pla.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.49.0(383fdf3fc0e1e1a024068b8d0fd4f3dcbae74d04)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/pla/pla.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [\n    [\"[\", \"]\"],\n    [\"<\", \">\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"[\", close: \"]\" },\n    { open: \"<\", close: \">\" },\n    { open: \"(\", close: \")\" }\n  ],\n  surroundingPairs: [\n    { open: \"[\", close: \"]\" },\n    { open: \"<\", close: \">\" },\n    { open: \"(\", close: \")\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".pla\",\n  brackets: [\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"<\", close: \">\", token: \"delimiter.angle\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }\n  ],\n  keywords: [\n    \".i\",\n    \".o\",\n    \".mv\",\n    \".ilb\",\n    \".ob\",\n    \".label\",\n    \".type\",\n    \".phase\",\n    \".pair\",\n    \".symbolic\",\n    \".symbolic-output\",\n    \".kiss\",\n    \".p\",\n    \".e\",\n    \".end\"\n  ],\n  // regular expressions\n  comment: /#.*$/,\n  identifier: /[a-zA-Z]+[a-zA-Z0-9_\\-]*/,\n  plaContent: /[01\\-~\\|]+/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n      // comments and whitespace\n      { include: \"@whitespace\" },\n      [/@comment/, \"comment\"],\n      // keyword\n      [\n        /\\.([a-zA-Z_\\-]+)/,\n        {\n          cases: {\n            \"@eos\": { token: \"keyword.$1\" },\n            \"@keywords\": {\n              cases: {\n                \".type\": { token: \"keyword.$1\", next: \"@type\" },\n                \"@default\": { token: \"keyword.$1\", next: \"@keywordArg\" }\n              }\n            },\n            \"@default\": { token: \"keyword.$1\" }\n          }\n        }\n      ],\n      // identifiers\n      [/@identifier/, \"identifier\"],\n      // PLA row\n      [/@plaContent/, \"string\"]\n    ],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"]],\n    type: [{ include: \"@whitespace\" }, [/\\w+/, { token: \"type\", next: \"@pop\" }]],\n    keywordArg: [\n      // whitespace\n      [\n        /[ \\t\\r\\n]+/,\n        {\n          cases: {\n            \"@eos\": { token: \"\", next: \"@pop\" },\n            \"@default\": \"\"\n          }\n        }\n      ],\n      // comments\n      [/@comment/, \"comment\", \"@pop\"],\n      // brackets\n      [\n        /[<>()\\[\\]]/,\n        {\n          cases: {\n            \"@eos\": { token: \"@brackets\", next: \"@pop\" },\n            \"@default\": \"@brackets\"\n          }\n        }\n      ],\n      // numbers\n      [\n        /\\-?\\d+/,\n        {\n          cases: {\n            \"@eos\": { token: \"number\", next: \"@pop\" },\n            \"@default\": \"number\"\n          }\n        }\n      ],\n      // identifiers\n      [\n        /@identifier/,\n        {\n          cases: {\n            \"@eos\": { token: \"identifier\", next: \"@pop\" },\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      // delimiter\n      [\n        /[;=]/,\n        {\n          cases: {\n            \"@eos\": { token: \"delimiter\", next: \"@pop\" },\n            \"@default\": \"delimiter\"\n          }\n        }\n      ]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","token","keywords","comment","identifier","plaContent","tokenizer","root","include","cases","next","whitespace","type","keywordArg"],"sourceRoot":""}