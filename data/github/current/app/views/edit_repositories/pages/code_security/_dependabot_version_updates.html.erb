<%# erblint:counter DeprecatedComponentsCounter 10 %>

<% if data.dependabot_version_updates_visible %>
  <div <%= test_selector("version-updates-settings")%>>
    <div class="ml-4 d-flex flex-md-row flex-column flex-md-items-center py-3" >
      <div class="mr-md-4 mb-md-0 mb-2 flex-auto">
        <h4>Dependabot version updates</h4>
        <p class="mb-0">
            Allow Dependabot to open pull requests automatically to keep your dependencies up-to-date when new versions are available. <%= link_to "Learn more about configuring a dependabot.yml file", docs_url("code-security/configuring-dependabot-version-updates"), target: "_blank", class: "Link--inTextBlock" %>.
        </p>
      </div>
      <div>
        <div class="BtnGroup flex-auto" <%= test_selector("version-updates-toggle-buttons") %>>
          <% if data.dependabot_version_updates_using_fork_policy %>
            <% if data.dependabot_version_updates_config_file_enabled %>
              <%= form_tag data.update_security_products_settings_path, method: :put do %>
                <input type="hidden" name="dependabot_config_file_enabled" value="0">
                <%= render Primer::ButtonComponent.new(
                  type: :submit,
                  button_text: "Disable",
                  title: "Disable Dependabot version updates",
                  button_aria_label: "Disable Dependabot version updates",
                  scheme: :danger,
                  data: {
                    target: "disable-dependabot-config-file",
                    **analytics_click_attributes(
                      category: "Dependabot",
                      action: "disable_dependabot_config_file",
                      label: "ref_cta:Disable Dependabot config file;ref_loc:vulnerability_updates_settings"
                    )
                  }
                ) do %>Disable<%end%>
              <% end %>
            <% else %>
              <%= form_tag data.update_security_products_settings_path, method: :put do %>
                <input type="hidden" name="dependabot_config_file_enabled" value="1">
                <%= render Primer::ButtonComponent.new(
                  type: :submit,
                  button_text: "Enable",
                  title: "Enable Dependabot version updates",
                  button_aria_label: "Enable Dependabot version updates",
                  data: {
                    target: "enable-dependabot-config-file",
                    **analytics_click_attributes(
                      category: "Dependabot",
                      action: "enable_dependabot_config_file",
                      label: "ref_cta:Enable Dependabot config file;ref_loc:vulnerability_updates_settings"
                    )
                  }
                ) do %>Enable<%end%>
              <% end %>
            <% end %>
          <% else %>
            <% if data.dependabot_version_updates_config_file_repository_path %>
              <%= render Primer::ButtonComponent.new(
                tag: :a,
                href: data.dependabot_version_updates_edit_config_href,
                block: true,
                "aria-label": "Configure Dependabot version updates",
                data: {
                  target: "configure-dependabot-version-updates",
                  **analytics_click_attributes(
                    category: "Dependabot",
                    action: "configure_version_updates",
                    label: "ref_cta:Edit Dependabot config file;ref_loc:vulnerability_updates_settings"
                  )
                }
                ) do %>Configure<%end%>
              <% else %>
                <%= render Primer::ButtonComponent.new(
                  tag: :a,
                  href: data.dependabot_version_updates_create_config_href,
                  block: true,
                  "aria-label": "Enable Dependabot version updates",
                  data: {
                    target: "create-dependabot-version-updates",
                    **analytics_click_attributes(
                      category: "Dependabot",
                      action: "enable_version_updates",
                      label: "ref_cta:Create Dependabot config file;ref_loc:vulnerability_updates_settings"
                    )
                  }
                  ) do %>Enable<%end%>
              <% end %>
          <% end %>
        </div>
      </div>
    </div>
    <% if data.dependabot_version_updates_fork_status_visible %>
      <div class="ml-4 d-flex flex-md-row flex-column flex-md-items-center" >
        <div class="mr-md-4 mb-md-0 mb-2 flex-auto">
          <div class="Box Box--condensed" <%= test_selector("version-updates-config-file-fork-status")%>>
            <div class="Box-body">
              <span class="mr-2">
                <%= render(Primer::Beta::Octicon.new(:"file-symlink-file")) %>
              </span>
              <% if data.dependabot_version_updates_config_file_repository_path %>
                <%= render Primer::Beta::Link.new(
                  href: file_edit_path(current_repository.owner, current_repository, current_repository.default_branch, current_repository.fetch_dependabot_config),
                  test_selector: "version-updates-config-file-fork-edit"
                  ).with_content(data.dependabot_version_updates_config_file_repository_path) %>
                <% unless data.dependabot_version_updates_config_file_enabled %>
                  <span class="color-fg-muted">― Disabled</span>
                <% end %>
              <% else %>
                <%= render Primer::Beta::Link.new(
                  href: data.dependabot_version_updates_create_config_href,
                  test_selector: "version-updates-config-file-fork-create"
                  ) do %> .github/dependabot.yml <%end%> <span class="color-fg-muted">― Create a config file</span>
              <% end %>
            </div>
          </div>
        </div>
      </div>
    <% end %>
  </div>
<% end %>
<% if data.dependabot_on_actions_visible %>
  <div>
    <div class="ml-4 d-flex flex-md-row flex-column flex-md-items-center py-3" <%= test_selector("dependabot-on-actions-settings")%>>
      <div class="mr-md-4 mb-md-0 mb-2 flex-auto">
        <h4>Dependabot on Actions runners</h4>
        <p class="mb-0">
        Run Dependabot security and version updates on Actions runners.
        </p>
      </div>

      <% if data.dependabot_on_actions_toggle_visible %>
        <div>
          <div class="BtnGroup flex-auto" <%= test_selector("dependabot-on-actions-toggle-buttons") %>>
            <%= form_tag data.update_security_products_settings_path, method: :put do %>
              <% if data.dependabot_security_updates_blocked_by_policy %>
                <% dependabot_on_actions_enablement_action = data.dependabot_on_actions_enabled ? "Disable" : "Enable" %>
                <%= render Primer::ButtonComponent.new(
                  aria: { disabled: true, label: "#{dependabot_on_actions_enablement_action} Dependabot Updates" },
                  scheme: dependabot_on_actions_enablement_action == "Enable" ? :default : :danger,
                  test_selector: "dependabot-on-actions-button-disabled-by-policy",
                  title: "Dependabot on actions #{Settings::SecurityAnalysisEnterprisePolicyNotificationComponent::POLICY_BLOCK_TEXT}"
                ).with_content(dependabot_on_actions_enablement_action) %>
              <% elsif data.dependabot_on_actions_enabled %>
                <input type="hidden" name="dependabot_on_actions_enabled" value="0">
                <%= render Primer::ButtonComponent.new(type: :submit, scheme: :danger, "aria-label": "Disable dependabot on actions") do %>Disable<% end %>
              <% else %>
                <% if !data.dependabot_on_actions_prerequisites_prompt %>
                  <input type="hidden" name="dependabot_on_actions_enabled" value="1">
                  <%= render Primer::ButtonComponent.new(type: :submit, block: true, "data-close-dialog": "", "aria-label": "Enable dependabot on actions") do %>Enable<% end %>
                <% else %>
                    <%= render(Settings::SecuritySettingDialogComponent.new(
                      button_text: "Enable",
                      title: "Dependabot on Actions",
                      button_aria_label: "Enable Dependabot on Actions",
                      dialog_text: data.dependabot_on_actions_prerequisites_prompt,
                      input_name: "dependabot_on_actions_enabled",
                      input_value: 1))
                    %>
                <% end %>
              <% end %>
            <% end %>
          </div>
        </div>
      <% end %>
    </div>
  </div>
<% end %>
<% if data.dependabot_self_hosted_visible %>
  <div>
    <div class="ml-4 d-flex flex-md-row flex-column flex-md-items-center py-3" <%= test_selector("dependabot-self-hosted-settings")%>>
      <div class="mr-md-4 mb-md-0 mb-2 flex-auto">
        <h4>Dependabot on self-hosted runners</h4>
        <p class="mb-0">
        Run Dependabot security and version updates on self-hosted Actions runners.
        </p>
      </div>

      <% if data.dependabot_self_hosted_toggle_visible %>
        <div>
          <div class="BtnGroup flex-auto" <%= test_selector("dependabot-self-hosted-toggle-buttons") %>>
            <%= form_tag data.update_security_products_settings_path, method: :put do %>
              <% if data.dependabot_security_updates_blocked_by_policy %>
                <% dependabot_self_hosted_enablement_action = data.dependabot_self_hosted_enabled ? "Disable" : "Enable" %>
                <%= render Primer::ButtonComponent.new(
                  aria: { disabled: true, label: "#{dependabot_self_hosted_enablement_action} Dependabot Updates" },
                  scheme: dependabot_self_hosted_enablement_action == "Enable" ? :default : :danger,
                  test_selector: "dependabot-self-hosted-button-disabled-by-policy",
                  title: "Dependabot on self hosted runners #{Settings::SecurityAnalysisEnterprisePolicyNotificationComponent::POLICY_BLOCK_TEXT}"
                ).with_content(dependabot_self_hosted_enablement_action) %>
              <% elsif data.dependabot_self_hosted_enabled %>
                <input type="hidden" name="dependabot_self_hosted_enabled" value="0">
                <%= render Primer::ButtonComponent.new(type: :submit, scheme: :danger, "aria-label": "Disable dependabot on self hosted runners") do %>Disable<% end %>
              <% else %>
                <% if !data.dependabot_self_hosted_prerequisites_prompt %>
                  <input type="hidden" name="dependabot_self_hosted_enabled" value="1">
                  <%= render Primer::ButtonComponent.new(type: :submit, block: true, "data-close-dialog": "", "aria-label": "Enable dependabot on self hosted runners") do %>Enable<% end %>
                <% else %>
                    <%= render(Settings::SecuritySettingDialogComponent.new(
                      button_text: "Enable",
                      title: "Dependabot on self hosted runners",
                      button_aria_label: "Enable Dependabot on self hosted runners",
                      dialog_text: data.dependabot_self_hosted_prerequisites_prompt,
                      input_name: "dependabot_self_hosted_enabled",
                      input_value: 1))
                    %>
                <% end %>
              <% end %>
            <% end %>
          </div>
        </div>
      <% end %>
    </div>
  </div>
<% end %>
<% if data.dependabot_autofix_visible %>
  <div>
    <div class="ml-4 d-flex flex-md-row flex-column flex-md-items-center py-3" <%= test_selector("dependabot-autofix-settings") %>>
      <div class="mr-md-4 mb-md-0 mb-2 flex-auto">
        <h4>Dependabot Copilot Autofix</h4>
        <p class="mb-0">
          Suggest fixes for a CI-breaking change in a Dependabot PR using AI.
        </p>
      </div>

      <div class="BtnGroup flex-auto" <%= test_selector("dependabot-autofix-toggle-buttons")%>>
        <%= form_tag data.update_security_products_settings_path, method: :put do %>
          <% if data.dependabot_security_updates_blocked_by_policy %>
            <% dependabot_autofix_enablement_action = data.dependabot_autofix_enabled ? "Disable" : "Enable" %>
            <%= render Primer::Beta::Button.new(
              aria: { disabled: true, label: "#{dependabot_autofix_enablement_action} Dependabot Updates" },
              scheme: dependabot_autofix_enablement_action == "Enable" ? :default : :danger,
              test_selector: "dependabot_autofix-button-disabled-by-policy",
              title: "Dependabot Copilot Autofix #{Settings::SecurityAnalysisEnterprisePolicyNotificationComponent::POLICY_BLOCK_TEXT}"
            ).with_content(dependabot_autofix_enablement_action) %>
          <% elsif data.dependabot_autofix_enabled %>
            <input type="hidden" name="dependabot_autofix_enabled" value="0">
            <%= render Primer::Beta::Button.new(type: :submit, scheme: :danger, "aria-label": "Disable dependabot copilot autofix") do %>Disable<% end %>
          <% else %>
            <% if !data.dependabot_autofix_prerequisites_prompt %>
              <input type="hidden" name="dependabot_autofix_enabled" value="1">
              <%= render Primer::Beta::Button.new(type: :submit, block: true, "data-close-dialog": "", "aria-label": "Enable dependabot copilot autofix") do %>Enable<% end %>
            <% else %>
              <%= render(Settings::SecuritySettingDialogComponent.new(
                button_text: "Enable",
                title: "Dependabot Copilot Autofix",
                button_aria_label: "Enable Dependabot Copilot Autofix",
                dialog_text: data.dependabot_autofix_prerequisites_prompt,
                input_name: "dependabot_autofix_enabled",
                input_value: 1
              )) %>
            <% end %>
          <% end %>
        <% end %>
      </div>
    </div>
  </div>
<% end %>
