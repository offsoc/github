# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: services/artifactcache.proto

require 'google/protobuf'

require 'pbtypes/github_pb'
require 'google/protobuf/timestamp_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("services/artifactcache.proto", :syntax => :proto3) do
    add_message "git_hub.launch.services.artifactcache.CacheEntry" do
      optional :id, :int64, 1
      optional :scope, :string, 2
      optional :key, :string, 3
      optional :version, :string, 4
      optional :size, :int64, 5
      optional :created, :message, 6, "google.protobuf.Timestamp"
      optional :lastAccessed, :message, 7, "google.protobuf.Timestamp"
    end
    add_message "git_hub.launch.services.artifactcache.ListCachesRequest" do
      optional :repository_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :key, :string, 2
      optional :scope, :string, 3
      optional :sort, :string, 4
      optional :direction, :string, 5
      optional :page, :int64, 6
      optional :per_page, :int64, 7
    end
    add_message "git_hub.launch.services.artifactcache.ListCachesResponse" do
      repeated :caches, :message, 1, "git_hub.launch.services.artifactcache.CacheEntry"
      optional :total_caches, :int64, 2
    end
    add_message "git_hub.launch.services.artifactcache.DeleteCachesByKeyRequest" do
      optional :repository_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :key, :string, 2
      optional :scope, :string, 3
    end
    add_message "git_hub.launch.services.artifactcache.DeleteCachesByKeyResponse" do
      repeated :caches, :message, 1, "git_hub.launch.services.artifactcache.CacheEntry"
      optional :total_caches, :int64, 2
    end
    add_message "git_hub.launch.services.artifactcache.DeleteCacheByIDRequest" do
      optional :repository_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :cache_id, :int64, 2
    end
    add_message "git_hub.launch.services.artifactcache.DeleteCacheByIDResponse" do
      optional :status, :string, 1
    end
  end
end

module GitHub
  module Launch
    module Services
      module Artifactcache
        CacheEntry = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.artifactcache.CacheEntry").msgclass
        ListCachesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.artifactcache.ListCachesRequest").msgclass
        ListCachesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.artifactcache.ListCachesResponse").msgclass
        DeleteCachesByKeyRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.artifactcache.DeleteCachesByKeyRequest").msgclass
        DeleteCachesByKeyResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.artifactcache.DeleteCachesByKeyResponse").msgclass
        DeleteCacheByIDRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.artifactcache.DeleteCacheByIDRequest").msgclass
        DeleteCacheByIDResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.artifactcache.DeleteCacheByIDResponse").msgclass
      end
    end
  end
end
