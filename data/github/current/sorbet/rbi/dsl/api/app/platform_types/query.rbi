# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Api::App::PlatformTypes::Query`.
# Please instead update this file by running `bin/tapioca dsl Api::App::PlatformTypes::Query`.

class Api::App::PlatformTypes::Query < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig do
    returns(T.nilable(T.any(Api::App::PlatformTypes::User, Api::App::PlatformTypes::Organization, Api::App::PlatformTypes::Enterprise, Api::App::PlatformTypes::Bot, Api::App::PlatformTypes::Mannequin, Api::App::PlatformTypes::ProgrammaticAccessBot)))
  end
  def account; end

  sig { returns(T::Boolean) }
  def account?; end

  sig do
    returns(T.nilable(T.any(Api::App::PlatformTypes::User, Api::App::PlatformTypes::Organization, Api::App::PlatformTypes::Enterprise, Api::App::PlatformTypes::Bot, Api::App::PlatformTypes::Mannequin, Api::App::PlatformTypes::ProgrammaticAccessBot)))
  end
  def account_from_database_id; end

  sig { returns(T::Boolean) }
  def account_from_database_id?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::AccountScreeningProfileConnection)) }
  def account_screening_profiles; end

  sig { returns(T::Boolean) }
  def account_screening_profiles?; end

  sig do
    returns(T::Array[T.any(Api::App::PlatformTypes::User, Api::App::PlatformTypes::Organization, Api::App::PlatformTypes::Enterprise, Api::App::PlatformTypes::Bot, Api::App::PlatformTypes::Mannequin, Api::App::PlatformTypes::ProgrammaticAccessBot)])
  end
  def accounts_from_database_ids; end

  sig { returns(T::Boolean) }
  def accounts_from_database_ids?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::AccountConnection)) }
  def accounts_from_last_ip; end

  sig { returns(T::Boolean) }
  def accounts_from_last_ip?; end

  sig { returns(T::Array[Api::App::PlatformTypes::Topic]) }
  def applied_topics; end

  sig { returns(T::Boolean) }
  def applied_topics?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::CodeOfConduct)) }
  def code_of_conduct; end

  sig { returns(T::Boolean) }
  def code_of_conduct?; end

  sig { returns(Api::App::PlatformTypes::CodeSearchConnection) }
  def code_search; end

  sig { returns(T::Boolean) }
  def code_search?; end

  sig { returns(T.nilable(T::Array[Api::App::PlatformTypes::CodeOfConduct])) }
  def codes_of_conduct; end

  sig { returns(T::Boolean) }
  def codes_of_conduct?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::ExploreCollection)) }
  def collection; end

  sig { returns(T::Boolean) }
  def collection?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::DiscussionCategory)) }
  def discussion_category; end

  sig { returns(T::Boolean) }
  def discussion_category?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::Enterprise)) }
  def enterprise; end

  sig { returns(T::Boolean) }
  def enterprise?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::EnterpriseAdministratorInvitation)) }
  def enterprise_administrator_invitation; end

  sig { returns(T::Boolean) }
  def enterprise_administrator_invitation?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::EnterpriseAdministratorInvitation)) }
  def enterprise_administrator_invitation_by_token; end

  sig { returns(T::Boolean) }
  def enterprise_administrator_invitation_by_token?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::EnterpriseMemberInvitation)) }
  def enterprise_member_invitation; end

  sig { returns(T::Boolean) }
  def enterprise_member_invitation?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::EnterpriseMemberInvitation)) }
  def enterprise_member_invitation_by_token; end

  sig { returns(T::Boolean) }
  def enterprise_member_invitation_by_token?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::SupportContact)) }
  def enterprise_support_contact; end

  sig { returns(T::Boolean) }
  def enterprise_support_contact?; end

  sig { returns(Api::App::PlatformTypes::ExploreCollectionConnection) }
  def explore_collections; end

  sig { returns(T::Boolean) }
  def explore_collections?; end

  sig { returns(T::Array[Api::App::PlatformTypes::ExploreCollection]) }
  def featured_collections_sample; end

  sig { returns(T::Boolean) }
  def featured_collections_sample?; end

  sig { returns(T::Array[Api::App::PlatformTypes::MarketplaceCategory]) }
  def featured_marketplace_categories; end

  sig { returns(T::Boolean) }
  def featured_marketplace_categories?; end

  sig { returns(T::Array[Api::App::PlatformTypes::Topic]) }
  def featured_topics_sample; end

  sig { returns(T::Boolean) }
  def featured_topics_sample?; end

  sig { returns(T::Array[Api::App::PlatformTypes::IntegrationFeature]) }
  def integration_categories; end

  sig { returns(T::Boolean) }
  def integration_categories?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::IntegrationListing)) }
  def integration_listing; end

  sig { returns(T::Boolean) }
  def integration_listing?; end

  sig { returns(Api::App::PlatformTypes::IntegrationListingConnection) }
  def integration_listings; end

  sig { returns(T::Boolean) }
  def integration_listings?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::BlogBroadcast)) }
  def latest_unread_broadcast; end

  sig { returns(T::Boolean) }
  def latest_unread_broadcast?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::License)) }
  def license; end

  sig { returns(T::Boolean) }
  def license?; end

  sig { returns(T::Array[Api::App::PlatformTypes::License]) }
  def licenses; end

  sig { returns(T::Boolean) }
  def licenses?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::UserList)) }
  def list; end

  sig { returns(T::Boolean) }
  def list?; end

  sig { returns(T::Array[Api::App::PlatformTypes::MarketplaceCategory]) }
  def marketplace_categories; end

  sig { returns(T::Boolean) }
  def marketplace_categories?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::MarketplaceCategory)) }
  def marketplace_category; end

  sig { returns(T::Boolean) }
  def marketplace_category?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::MarketplaceListing)) }
  def marketplace_listing; end

  sig { returns(T::Boolean) }
  def marketplace_listing?; end

  sig { returns(Api::App::PlatformTypes::MarketplaceListingConnection) }
  def marketplace_listings; end

  sig { returns(T::Boolean) }
  def marketplace_listings?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::SubscriptionItem)) }
  def marketplace_purchase; end

  sig { returns(T::Boolean) }
  def marketplace_purchase?; end

  sig { returns(Api::App::PlatformTypes::SearchResultItemConnection) }
  def marketplace_search; end

  sig { returns(T::Boolean) }
  def marketplace_search?; end

  sig { returns(Api::App::PlatformTypes::GitHubMetadata) }
  def meta; end

  sig { returns(T::Boolean) }
  def meta?; end

  sig { returns(T.nilable(T::Array[String])) }
  def mobile_capabilities; end

  sig { returns(T::Boolean) }
  def mobile_capabilities?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def mobile_updates_url; end

  sig { returns(T::Boolean) }
  def mobile_updates_url?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::InterfaceType)) }
  def node; end

  sig { returns(T::Boolean) }
  def node?; end

  sig { returns(T::Array[GraphQL::Client::Schema::InterfaceType]) }
  def nodes; end

  sig { returns(T::Boolean) }
  def nodes?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::Organization)) }
  def organization; end

  sig { returns(T::Boolean) }
  def organization?; end

  sig { returns(Api::App::PlatformTypes::OrganizationConnection) }
  def organizations; end

  sig { returns(T::Boolean) }
  def organizations?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::InterfaceType)) }
  def package_owner; end

  sig { returns(T::Boolean) }
  def package_owner?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::InterfaceType)) }
  def package_search; end

  sig { returns(T::Boolean) }
  def package_search?; end

  sig { returns(Api::App::PlatformTypes::PageCertificate) }
  def page_certificate; end

  sig { returns(T::Boolean) }
  def page_certificate?; end

  sig { returns(T::Array[Api::App::PlatformTypes::Topic]) }
  def popular_topics; end

  sig { returns(T::Boolean) }
  def popular_topics?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::ProgrammaticAccessBot)) }
  def programmatic_access_bot; end

  sig { returns(T::Boolean) }
  def programmatic_access_bot?; end

  sig { returns(T::Array[Api::App::PlatformTypes::Language]) }
  def programming_languages; end

  sig { returns(T::Boolean) }
  def programming_languages?; end

  sig { returns(Api::App::PlatformTypes::RepositoryConnection) }
  def public_repositories; end

  sig { returns(T::Boolean) }
  def public_repositories?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::RateLimit)) }
  def rate_limit; end

  sig { returns(T::Boolean) }
  def rate_limit?; end

  sig { returns(T::Array[Api::App::PlatformTypes::Topic]) }
  def recent_topics; end

  sig { returns(T::Boolean) }
  def recent_topics?; end

  sig { returns(Api::App::PlatformTypes::Query) }
  def relay; end

  sig { returns(T::Boolean) }
  def relay?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::Repository)) }
  def repository; end

  sig { returns(T::Boolean) }
  def repository?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::RepositoryAction)) }
  def repository_action; end

  sig { returns(T::Boolean) }
  def repository_action?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::RepositoryAction)) }
  def repository_action_by_slug; end

  sig { returns(T::Boolean) }
  def repository_action_by_slug?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::RepositoryActionsConnection)) }
  def repository_actions; end

  sig { returns(T::Boolean) }
  def repository_actions?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::RepositoryAdvisory)) }
  def repository_advisory; end

  sig { returns(T::Boolean) }
  def repository_advisory?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::InterfaceType)) }
  def repository_owner; end

  sig { returns(T::Boolean) }
  def repository_owner?; end

  sig { returns(Api::App::PlatformTypes::RequestingUser) }
  def requester; end

  sig { returns(T::Boolean) }
  def requester?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::InterfaceType)) }
  def resource; end

  sig { returns(T::Boolean) }
  def resource?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::User)) }
  def safe_viewer; end

  sig { returns(T::Boolean) }
  def safe_viewer?; end

  sig { returns(Api::App::PlatformTypes::SearchResultItemConnection) }
  def search; end

  sig { returns(T::Boolean) }
  def search?; end

  sig { returns(Api::App::PlatformTypes::SecurityAdvisoryConnection) }
  def security_advisories; end

  sig { returns(T::Boolean) }
  def security_advisories?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::SecurityAdvisory)) }
  def security_advisory; end

  sig { returns(T::Boolean) }
  def security_advisory?; end

  sig { returns(Api::App::PlatformTypes::SecurityVulnerabilityConnection) }
  def security_vulnerabilities; end

  sig { returns(T::Boolean) }
  def security_vulnerabilities?; end

  sig { returns(T::Array[Api::App::PlatformTypes::SpokenLanguage]) }
  def spoken_languages; end

  sig { returns(T::Boolean) }
  def spoken_languages?; end

  sig { returns(Api::App::PlatformTypes::SponsorableItemConnection) }
  def sponsorables; end

  sig { returns(T::Boolean) }
  def sponsorables?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::StaffAccessedRepository)) }
  def staff_accessed_repository; end

  sig { returns(T::Boolean) }
  def staff_accessed_repository?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::StafftoolsInfo)) }
  def stafftools_info; end

  sig { returns(T::Boolean) }
  def stafftools_info?; end

  sig { returns(Api::App::PlatformTypes::NavigationDestinationConnection) }
  def suggested_navigation_destinations; end

  sig { returns(T::Boolean) }
  def suggested_navigation_destinations?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::User)) }
  def temp_nullable_viewer; end

  sig { returns(T::Boolean) }
  def temp_nullable_viewer?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::ToggleableFeature)) }
  def toggleable_feature; end

  sig { returns(T::Boolean) }
  def toggleable_feature?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::ToggleableFeatureConnection)) }
  def toggleable_features; end

  sig { returns(T::Boolean) }
  def toggleable_features?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::Topic)) }
  def topic; end

  sig { returns(T::Boolean) }
  def topic?; end

  sig { returns(Api::App::PlatformTypes::TopicConnection) }
  def topics; end

  sig { returns(T::Boolean) }
  def topics?; end

  sig { returns(T.nilable(T::Array[Api::App::PlatformTypes::User])) }
  def trending_developers; end

  sig { returns(T::Boolean) }
  def trending_developers?; end

  sig { returns(T.nilable(T::Array[Api::App::PlatformTypes::Repository])) }
  def trending_repositories; end

  sig { returns(T::Boolean) }
  def trending_repositories?; end

  sig { returns(Integer) }
  def unread_broadcasts_count; end

  sig { returns(T::Boolean) }
  def unread_broadcasts_count?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::User)) }
  def user; end

  sig { returns(T::Boolean) }
  def user?; end

  sig { returns(Api::App::PlatformTypes::UserConnection) }
  def users; end

  sig { returns(T::Boolean) }
  def users?; end

  sig { returns(Api::App::PlatformTypes::User) }
  def viewer; end

  sig { returns(T::Boolean) }
  def viewer?; end

  sig { returns(T::Boolean) }
  def viewer_can_create_posts; end

  sig { returns(T::Boolean) }
  def viewer_can_create_posts?; end

  sig { returns(T::Boolean) }
  def viewer_has_trade_restrictions; end

  sig { returns(T::Boolean) }
  def viewer_has_trade_restrictions?; end

  sig { returns(T.nilable(String)) }
  def viewer_updates_channel; end

  sig { returns(T::Boolean) }
  def viewer_updates_channel?; end
end
