# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Sponsors::V1::SponsorshipTransferFailure`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Sponsors::V1::SponsorshipTransferFailure`.

class Hydro::Schemas::Github::Sponsors::V1::SponsorshipTransferFailure
  sig do
    params(
      amount_in_cents: T.untyped,
      billing_transaction_id: T.nilable(Integer),
      listing: T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsListing),
      reason: T.nilable(String),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext),
      sponsorship: T.nilable(Hydro::Schemas::Github::Sponsors::V0::Entities::Sponsorship),
      stripe_account_id: T.nilable(String),
      stripe_connect_account: T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::StripeConnectAccount)
    ).void
  end
  def initialize(amount_in_cents: nil, billing_transaction_id: nil, listing: nil, reason: nil, request_context: nil, sponsorship: nil, stripe_account_id: nil, stripe_connect_account: nil); end

  sig { returns(T.untyped) }
  def amount_in_cents; end

  sig { params(value: T.untyped).void }
  def amount_in_cents=(value); end

  sig { returns(Integer) }
  def billing_transaction_id; end

  sig { params(value: Integer).void }
  def billing_transaction_id=(value); end

  sig { void }
  def clear_amount_in_cents; end

  sig { void }
  def clear_billing_transaction_id; end

  sig { void }
  def clear_listing; end

  sig { void }
  def clear_reason; end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_sponsorship; end

  sig { void }
  def clear_stripe_account_id; end

  sig { void }
  def clear_stripe_connect_account; end

  sig { returns(T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsListing)) }
  def listing; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsListing)).void }
  def listing=(value); end

  sig { returns(String) }
  def reason; end

  sig { params(value: String).void }
  def reason=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Sponsors::V0::Entities::Sponsorship)) }
  def sponsorship; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Sponsors::V0::Entities::Sponsorship)).void }
  def sponsorship=(value); end

  sig { returns(String) }
  def stripe_account_id; end

  sig { params(value: String).void }
  def stripe_account_id=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::StripeConnectAccount)) }
  def stripe_connect_account; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::StripeConnectAccount)).void }
  def stripe_connect_account=(value); end
end
