# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Sponsors::V0::FeaturedSponsors`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Sponsors::V0::FeaturedSponsors`.

class Hydro::Schemas::Github::Sponsors::V0::FeaturedSponsors
  sig do
    params(
      featured_count: T.nilable(Integer),
      is_automated: T.nilable(T::Boolean),
      is_enabled: T.nilable(T::Boolean),
      maintainer: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(featured_count: nil, is_automated: nil, is_enabled: nil, maintainer: nil); end

  sig { void }
  def clear_featured_count; end

  sig { void }
  def clear_is_automated; end

  sig { void }
  def clear_is_enabled; end

  sig { void }
  def clear_maintainer; end

  sig { returns(Integer) }
  def featured_count; end

  sig { params(value: Integer).void }
  def featured_count=(value); end

  sig { returns(T::Boolean) }
  def is_automated; end

  sig { params(value: T::Boolean).void }
  def is_automated=(value); end

  sig { returns(T::Boolean) }
  def is_enabled; end

  sig { params(value: T::Boolean).void }
  def is_enabled=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def maintainer; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def maintainer=(value); end
end
