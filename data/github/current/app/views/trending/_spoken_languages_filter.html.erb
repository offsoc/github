<%# erblint:counter DeprecatedComponentsCounter 1 %>
<details
  class="details-reset details-overlay select-menu select-menu-modal-right hx_rsm"
  id="select-menu-spoken-language"
>
  <%= render Primer::ButtonComponent.new(tag: :summary, scheme: :link, classes: "select-menu-button") do %>
    Spoken Language:

    <%= render Primer::Beta::Text.new(font_weight: :bold, data: { menu_button: "" }) do %>
      <% if spoken_language_code.blank? || spoken_language_name_for(spoken_language_code).blank? %>
        Any
      <% else %>
        <%= spoken_language_name_for(spoken_language_code) %>
      <% end %>
    <% end %>
  <% end %>

  <details-menu class="select-menu-modal position-absolute right-0" style="z-index: 99;"><%# erblint:disable Primer::Accessibility::DetailsMenuMigration %>
    <div class="select-menu-header">
      <%= render Primer::Beta::Text.new(classes: "select-menu-title") do %>
        Select a spoken language
      <% end %>

      <%= render Primer::Beta::CloseButton.new(ml: 2, classes: "hx_rsm-close-button btn-link", "data-toggle-for": "select-menu-spoken-language", "aria-label": "Close menu") %>

      <% if logged_in? && !GitHub.enterprise? %>
        <div>
          <%= render Primer::Beta::Text.new(font_size: 6) do %>
            This setting can be

            <% if current_user.profile_spoken_language_preference_code.present? %>
              updated
            <% else %>
              saved
            <% end %>

            in your

            <%= render(Primer::Beta::Link.new(
              href: settings_user_profile_path(anchor: "trending-settings-heading"),
              classes: "Link--inTextBlock",
            )) do %>
              profile settings.
            <% end %>
          <% end %>
        </div>
      <% end %>
    </div>

    <div class="select-menu-filters">
      <div class="select-menu-text-filter">
        <input
          type="text"
          id="text-filter-field-spoken-language"
          class="form-control js-filterable-field js-navigation-enable"
          placeholder="Filter spoken languages"
          aria-label="Type or choose a spoken language"
          autofocus
          autocomplete="off"
        >
      </div>
    </div>

    <div class="select-menu-list" data-pjax>
      <% if spoken_language_name_for(spoken_language_code).present? %>
        <div class="select-menu-clear-item select-menu-item">
          <%= render Primer::Beta::Octicon.new(icon: "x", classes: "select-menu-item-icon") %>

          <%= render(Primer::Beta::Link.new(
            href: trending_index_path(
              spoken_language_code: "",
              language: params[:language],
              since: params[:since],
            ),
            classes: "select-menu-item-text",
            role: "menuitem"
          )) do %>
            Clear spoken language
          <% end %>
        </div>
      <% end %>

      <div data-filterable-for="text-filter-field-spoken-language" data-filterable-type="substring">
        <% Trending::SpokenLanguageFinder.all.each do |spoken_language| %>
          <% selected = spoken_language_code == spoken_language.code %>
          <%= render(Primer::Beta::Link.new(
            href: trending_index_path(
              spoken_language_code: spoken_language.code,
              language: params[:language],
              since: params[:since],
            ),
            classes: class_names(
              "select-menu-item": true,
              selected: selected,
            ),
            role: "menuitemradio",
            aria: { checked: selected },
            data: { pjax: "" }
          )) do %>
            <% if selected %>
              <%= render(Primer::Beta::Octicon.new(
                icon: "check",
                classes: "select-menu-item-icon",
              )) %>
            <% end %>

            <%= render(Primer::Beta::Text.new(
              classes: "select-menu-item-text",
              data: { menu_button_text: "" },
            )) do %>
              <%= spoken_language.name %>
            <% end %>
          <% end %>
        <% end %>
      </div>
    </div>

    <div class="select-menu-loading-overlay">
      <%= render(Primer::Beta::Spinner.new) %>
    </div>
  </details-menu>
</details>
