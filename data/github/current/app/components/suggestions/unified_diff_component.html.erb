<div class="border mb-2 rounded color-border-subtle overflow-hidden">
  <div class="color-bg-subtle f6 py-2 px-2 d-flex flex-column flex-md-items-center flex-md-row gap-1 flex-justify-start border-bottom">
    <div class="flex-auto flex-md-self-center">
      <%= render(Primer::Beta::Truncate.new(font_family: :mono, color: :muted, test_selector: "unified-diff-file-path")) do |c| %>
        <% c.with_item(style: "direction: rtl; text-align: end;") { diff_entry.path } %>
      <% end %>
    </div>

    <% unless current_path %>
      <div>
        <%= render(Primer::Beta::Label.new(scheme: :default, display: :inline_flex, test_selector: "unified-diff-outside-changed-files")) { "Outside changed files" } %>
      </div>
    <% end %>

    <%= render(Primer::Alpha::Dialog.new(title: "Autofix patch", size: :large, subtitle: "Run the following command in your local git repository to apply this patch", id: copy_paste_patch_dialog_id)) do |d| %>
      <% d.with_header(show_divider: true) do %>
        <div class="h6 text-bold">Autofix patch</div>
      <% end %>
      <% d.with_body do %>
        <div class="mt-3 mb-3 f6">Run the following command in your local git repository to apply this patch</div>
        <%= render Primer::Beta::ClipboardCopy.new("aria-label": "Copy text", display: :block, position: :relative, classes: "CopyBlock", role: "button", tabindex: "0", for: code_block_id, data: hydro_click_patch_copied_tracking_attributes.merge("copy-feedback": "Copied!", "tooltip-direction": "ne")) do %>
          <pre class="color-bg-subtle rounded p-2 ws-pre-wrap f6" id="<%= code_block_id %>" <%= test_selector("unified-diff-patch") %>>cat &lt;&lt; 'EOF' | git apply<%= "\n#{diff_entry.to_diff_text}EOF" %></pre>
          <%= primer_octicon(:copy, position: :absolute, mr: 2, mt: 2, right: 0, top: 0) %>
        <% end %>
      <% end %>
    <% end %>

    <%= render(Primer::Alpha::ActionMenu.new) do |menu| %>
      <% menu.with_show_button(size: :small, scheme: :invisible, "aria-label": "View or copy autofix patch") do |b| %>
        <% b.with_leading_visual_icon(icon: :copy) %>
        <% b.with_trailing_action_icon(icon: :"triangle-down") %>
      <% end %>
      <% menu.with_item(
          label: "View autofix patch",
          tag: :button,
          content_arguments: { "data-show-dialog-id": copy_paste_patch_dialog_id },
          divider: true,
      ) %>
      <% menu.with_divider %>
      <% modified_lines.each do |hunk| %>
        <% menu.with_item(
          tag: :"clipboard-copy",
          test_selector: "unified-diff-modified-region",
          content_arguments: { data: hydro_click_diff_lines_copied_tracking_attributes, value: hunk[:lines] },
        ) do %>
          <% if hunk[:start] == hunk[:end] %>
            Copy modified line R<%= hunk[:start] %>
          <% else %>
            Copy modified lines R<%= hunk[:start] %>-R<%= hunk[:end] %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
  </div>

  <div>
    <table class="d-table tab-size mb-0 width-full" data-paste-markdown-skip>
      <% diff_entry.each_line do |line| %>
        <tr class="border-0">
          <% if line.addition? %>
            <td class="blob-num blob-num-<%= line.type %> border-0 px-2 py-0 lh-default empty-cell"></td>
          <% elsif line.hunk? %>
            <td class="blob-num blob-num-<%= line.type %> border-0 px-2 py-0 lh-default" data-line-number="..."></td>
          <% else %>
            <td class="blob-num blob-num-<%= line.type %> border-0 px-2 py-0 lh-default" data-line-number="<%= line.left %>"></td>
          <% end %>

          <% if line.deletion? %>
            <td class="blob-num blob-num-<%= line.type %> border-0 px-2 py-0 lh-default empty-cell"></td>
          <% elsif line.hunk? %>
            <td class="blob-num blob-num-<%= line.type %> border-0 px-2 py-0 lh-default" data-line-number="..."></td>
          <% else %>
            <td class="blob-num blob-num-<%= line.type %> border-0 px-2 py-0 lh-default" data-line-number="<%= line.right %>"></td>
          <% end %>

          <td class="blob-code blob-code-<%=line.type %> border-0 py-0">
            <span class="blob-code-inner blob-code-marker blob-code-marker-<%= line.type %>"><%= HighlightedDiffLine.for_line(line, html_lines: file_highlighting).to_html %></span><%#
              Eliminate space to fix copy/paste issues. See https://github.com/github/github/pull/95667 for more information.
            %><% if line.nonewline? %>
              <span class="no-nl-marker">
                <%= primer_octicon("no-entry", "aria-label" => "No newline at end of file") %>
              </span>
            <% end %><%#
            %></td>
        </tr>
      <% end %>
    </table>
  </div>
</div>
