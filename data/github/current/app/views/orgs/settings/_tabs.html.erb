<%
  org_policy ||= Codespaces::OrgPolicy.new(user: current_user, org: current_organization)

  menu_item_link_classes = "SideNav-item d-flex flex-items-center org-menu-item"
  sub_menu_classes = "SideNav color-bg-default border-top py-3 pl-3 org-sub-menu rounded-bottom-2"
  sub_menu_item_link_classes = "SideNav-subItem"
%>

<%
  # Meuse is not supported in Proxima, so unless a customer is billed through vnext, we aren't billing them and we should hide the billing settings.
  hide_proxima_org_billing_settings = GitHub.multi_tenant_enterprise? && !current_organization.billable_owner.customer&.billed_via_billing_platform?
%>

<div class="flex-shrink-0 pr-3">
  <%= render(Primer::Beta::NavList.new(aria: { label: "Organization settings" }, selected_item_id: @selected_link, item_classes: "org-menu-item", nav_classes: "org-sub-menu")) do |component| %><%# rubocop:disable Lint/InstanceVariable %>
    <% component.with_item(label: "General", href: settings_org_profile_path(current_organization), selected_by_ids: :organization_profile) do |item| %>
      <% item.with_leading_visual_icon(icon: :gear) %>
    <% end %>

    <% if current_organization.member_privilege_rulesets_enabled?  %>
      <% component.with_item(
        label: "Policies",
        id: "policies-item") do |policy| %>
        <% policy.with_leading_visual_icon(icon: :law) %>
          <% policy.with_item(label: "Repository", href: settings_org_member_privilege_rules_path(current_organization), selected_by_ids: :member_privilege_rulesets) do |item| %>
          <% item.with_trailing_visual_label(
              scheme: :success,
              title: "Feature Release Label: Beta",
              aria: { label: "Feature Release Label: Beta" }) { "Beta" } %>
          <% end %>
        <% end %>
    <% end %>

    <% if current_business && current_business.show_advanced_security_onboarding? %>
      <% component.with_group do |group| %>
        <% group.with_heading(heading_level: 2, title: "Trials") %>

        <% if GitHub.billing_enabled? %>
          <% data = {
            **analytics_click_attributes(
              category: "advanced_security_self_serve_trial",
              action: "click_to_try_advanced_security",
              label: "ref_loc:settings"
            )
          } %>

          <% group.with_item(label: "Advanced Security", href: organization_onboarding_advanced_security_path(current_organization), data: data, test_selector: "advanced_security_self_serve_trial") do |item| %>
            <% item.with_leading_visual_icon(icon: :"shield-lock") %>
            <% ghas_subscription_item = current_organization&.business&.advanced_security_subscription_item %>
            <% if ghas_subscription_item.nil? %>
              <% item.with_trailing_visual_label(color: :danger) do %>
                Expired
              <% end %>
            <% else %>
              <% item.with_trailing_visual_label do %>
                <%= pluralize(ghas_subscription_item.days_left_on_free_trial, "day") %> left
              <% end %>
            <% end %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>

    <% component.with_group do |group| %>
      <% group.with_heading(heading_level: 2, title: "Access") %>

      <% if GitHub.billing_enabled? %>
        <% if current_organization.customer&.billed_via_billing_platform? %>
          <% group.with_item(
            label: "Billing & Licensing",
            data: test_selector_hash("billing_and_plans")) do |item| %>
            <% item.with_leading_visual_icon(icon: :"credit-card") %>

            <% item.with_item(label: "Overview", href: organization_settings_billing_url(current_organization), selected_by_ids: :billing_vnext_overview) %>
            <% item.with_item(label: "Usage", href: organization_settings_billing_usage_url(current_organization), selected_by_ids: :billing_vnext_usage) %>
            <% item.with_item(label: "Budgets and alerts", href: organization_settings_billing_budgets_url(current_organization), selected_by_ids: :billing_vnext_budgets) %>
            <% item.with_item(label: "Licensing", href: organization_settings_licensing_index_path(current_organization), selected_by_ids: :licensing) %>
            <% item.with_item(label: "Payment history", href: organization_settings_payment_history_index_url(current_organization), selected_by_ids: :payment_history) %>
          <% end %>
        <% else %>

          <% unless hide_proxima_org_billing_settings %>
            <% data = {
              **test_selector_hash("billing_and_plans"),
              **analytics_click_attributes(
                category: "Org billing and plans",
                action: "click to see billing and plans",
                label: "ref_cta:Billing & Plans;ref_loc:settings"
              )
            } %>

            <% group.with_item(label: "Billing and plans", href: settings_org_billing_path(current_organization), selected_by_ids: :organization_billing_settings, data: data) do |item| %>
              <% item.with_leading_visual_icon(icon: :"credit-card") %>
            <% end %>
          <% end %>
        <% end %>
      <% end %>

      <% group.with_item(
        label: "Organization roles",
        nav_classes: "org-sub-menu",
        id: "org-roles-settings-item"
      ) do |item| %>
        <% item.with_leading_visual_icon(icon: :"organization") %>
        <% item.with_item(label: "Role management", href: settings_org_roles_path(current_organization), selected_by_ids: :org_roles) %>
        <% item.with_item(label: "Role assignments", href: settings_org_role_assignments_path(current_organization), selected_by_ids: :org_role_assignments) %>
      <% end %>

      <% group.with_item(label: "Repository roles", href: settings_org_repository_roles_path(current_organization), selected_by_ids: :roles) do |item| %>
        <% item.with_leading_visual_icon(icon: :"id-badge") %>
      <% end %>

      <% group.with_item(label: "Member privileges", href: settings_org_member_privileges_path(current_organization), selected_by_ids: :member_privileges) do |item| %>
        <% item.with_leading_visual_icon(icon: :"people") %>
      <% end %>

      <% unless current_organization.team_discussions_disabled? %>
        <% group.with_item(label: "Team discussions", href: settings_org_teams_path(current_organization), selected_by_ids: :organization_team_settings) do |item| %>
          <% item.with_leading_visual_icon(icon: :"comment-discussion") %>
        <% end %>
      <% end %>

      <% group.with_item(label: "Import/Export", href: settings_org_import_export_path(current_organization), selected_by_ids: :organization_import_export_settings) do |item| %>
        <% item.with_leading_visual_icon(icon: :"arrow-switch") %>
      <% end %>

      <% if GitHub.user_abuse_mitigation_enabled? || GitHub.interaction_limits_enabled? || GitHub.code_review_limits_enabled? %>
        <% group.with_item(
          label: "Moderation",
          nav_classes: "org-sub-menu",
          id: "moderation-settings-item") do |item| %>
          <% if GitHub.user_abuse_mitigation_enabled? %>
            <% item.with_item(label: "Blocked users", href: organization_settings_blocked_users_path(current_organization), selected_by_ids: :block_users) %>
          <% end %>
          <% if GitHub.interaction_limits_enabled? %>
            <% item.with_item(label: "Interaction limits", href: org_interaction_limits_path(current_organization), selected_by_ids: :interaction_limits) do |subitem| %>
              <% if RepositoryInteractionAbility.has_active_limits?(current_organization) %>
                <% subitem.with_trailing_visual_icon(icon: :clock, color: :success) %>
              <% end %>
            <% end %>
          <% end %>

          <% if GitHub.code_review_limits_enabled? %>
            <% item.with_item(label: "Code review limits", href: settings_org_code_review_limits_path(current_organization), selected_by_ids: :code_review_limits) %>
          <% end %>

          <% if GitHub.organization_moderators_enabled? %>
            <% item.with_item(
              label: "Moderators",
              href: organization_settings_moderators_path(current_organization),
              selected_by_ids: :moderators,
            ) %>
          <% end %>

          <% item.with_leading_visual_icon(icon: :"report") %>
        <% end %>
      <% end %>

      <% if show_requests_from_members_menu_for_current_organization?(current_organization, current_user) %>
        <% group.with_item(label: "Requests from members", href: organization_settings_member_feature_requests_path(current_organization), selected_by_ids: :member_feature_requests) do |item| %>
          <% item.with_leading_visual_icon(icon: :bell) %>
          <% if user_visited_feature_request_page_at(current_organization, current_user) %>
            <% item.with_trailing_visual_icon(icon: :"dot-fill", color: :accent) if has_unread_feature_requests?(current_organization) %>
          <% else %>
            <% item.with_trailing_visual_label(
              scheme: :accent,
              title: "New",
              aria: { label: "New" }) { "New" } %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>

    <% component.with_group do |group| %>
      <% group.with_heading(heading_level: 2, title: "Code, planning, and automation") %>

      <% group.with_item(label: "Repository", id: "repository") do |item| %>
        <% item.with_item(label: "General", href: settings_org_repo_defaults_path(current_organization), selected_by_ids: :repo_defaults) %>
        <% item.with_item(label: "Topics", href: org_topics_path(current_organization), selected_by_ids: :repository_topics) %>
        <% if current_organization.feature_enabled?(:repos_groups) %>
          <% item.with_item(label: "Groups", href: organization_group_settings_path(current_organization), selected_by_ids: :organization_group_settings) %>
        <% end %>
        <% item.with_item(label: "Rulesets", href: organization_rulesets_path(current_organization), selected_by_ids: :repo_rulesets) %>
        <% item.with_item(label: "Rule insights", href: organization_rule_insights_path(current_organization), selected_by_ids: :repo_rule_insights) %>
        <% if current_organization.plan_supports?(:enterprise_rulesets) && current_organization.feature_enabled?(:push_ruleset_delegated_bypass) %>
          <% item.with_item(label: "Bypass requests", href: organization_rules_bypass_requests_path(current_organization), selected_by_ids: :org_rules_bypass_requests) do |sub_item| %>
            <% sub_item.with_trailing_visual_label(
                scheme: :success,
                title: "Feature Release Label: Beta",
                aria: { label: "Feature Release Label: Beta" }) { "Beta" } %>
          <% end %>
        <% end %>
        <% item.with_item(label: "Custom properties", href: org_custom_properties_path(current_organization), selected_by_ids: :organization_custom_properties) %>
        <% item.with_leading_visual_icon(icon: :repo) %>
      <% end %>

      <% if org_policy.allow_org_setting? || org_policy.must_contact_support_to_enable? || org_policy.must_upgrade_to_use_codespaces? %>
        <% group.with_item(
          component_klass: Settings::CodespacesNavComponent,
          entity: current_organization,
          org_policy: org_policy
        ) %>
      <% end %>

        <% group.with_item(label: "Planning", id: "planning") do |item| %>
          <% item.with_item(label: "Projects", href: settings_org_projects_path(current_organization), selected_by_ids: :organization_projects_settings) %>
          <% if current_organization.issue_types_enabled? %>
            <% item.with_item(label: "Issue types", href: organization_issue_type_settings_path(current_organization)) do |sub_item| %>
              <% sub_item.with_trailing_visual_label(
                scheme: :success,
                title: "Feature Release Label: Beta",
                aria: { label: "Feature Release Label: Beta" }) { "Beta" } %>
            <% end %>
          <% end %>
          <% item.with_leading_visual_icon(icon: :table) %>
        <% end %>

      <%= render_nothing_if_database_fails do %>
        <% group.with_item(
          component_klass: Settings::CopilotNavComponent,
          entity: current_organization,
          current_user: current_user
        ) %>
      <% end %>

      <% if GitHub.actions_enabled? %>
        <% group.with_item(
          component_klass: Settings::ActionsNavComponent,
          entity: current_organization
        ) %>
      <% end %>

      <% if GitHub.enterprise? %>
        <% group.with_item(label: "Hooks", href: hooks_path(current_organization), selected_by_ids: :hooks) do |item| %>
          <% item.with_leading_visual_icon(icon: :webhook) %>
        <% end %>
      <% else %>
        <% group.with_item(label: "Webhooks", href: hooks_path(current_organization), selected_by_ids: :hooks) do |item| %>
          <% item.with_leading_visual_icon(icon: :webhook) %>
        <% end %>
      <% end %>

      <% if GitHub.discussions_available_on_platform? %>
        <% group.with_item(label: "Discussions", href: organization_settings_discussions_path(current_organization), selected_by_ids: :discussions) do |item| %>
          <% item.with_leading_visual_icon(icon: :"comment-discussion") %>
        <% end %>
      <% end %>

      <% group.with_item(label: "Packages", href: settings_org_packages_path(current_organization), selected_by_ids: :organization_packages_settings) do |item| %>
        <% item.with_leading_visual_icon(icon: :package) %>
      <% end %>

      <% if pages_domain_protection_enabled?(user: current_user) %>
        <% group.with_item(label: "Pages", href: settings_org_pages_path(current_organization), id: "pages-domain-protection-settings-item", selected_by_ids: :organization_pages_settings) do |item| %>
          <% item.with_leading_visual_icon(icon: :browser) %>
        <% end %>
      <% end %>

      <% if can_view_network_configuration?(current_organization) %>
        <% group.with_item(label: "Hosted compute networking", href: settings_org_network_configurations_path(current_organization), selected_by_ids: :network_configurations) do |item| %>
          <% item.with_leading_visual_icon(icon: :cpu) %>
        <% end %>
      <% end %>
    <% end %>

    <% component.with_group do |group| %>
      <% group.with_heading(heading_level: 2, title: "Security") %>

      <% group.with_item(label: "Authentication security", href: settings_org_security_path(current_organization), selected_by_ids: :organization_security) do |item| %>
        <% item.with_leading_visual_icon(icon: :"shield-lock") %>
      <% end %>

      <% group.with_item(
        component_klass: Settings::SecurityProductsNavComponent,
        entity: current_organization
      ) %>

      <% if compliance_reports_available_for_account?(current_organization) %>
        <% group.with_item(
          label: "Compliance",
          href: organization_settings_compliance_index_path(current_organization),
          selected_by_ids: :compliance) do |item| %>
          <% item.with_leading_visual_icon(icon: :checklist) %>
        <% end %>
      <% end %>

      <% if GitHub.verified_domains_enabled? %>
        <% group.with_item(label: "Verified and approved domains", href: settings_org_domains_path(current_organization), selected_by_ids: :verified_approved_domains) do |item| %>
          <% item.with_leading_visual_icon(icon: :"verified") %>
        <% end %>
      <% end %>

      <% group.with_item(
        component_klass: Settings::SecretsNavComponent,
        user: current_user,
        entity: current_organization,
        is_admin: current_organization.adminable_by?(current_user)
      ) %>
    <% end %>

    <% if current_user.patsv2_enabled? %>
      <% component.with_group do |group| %>
        <% group.with_heading(heading_level: 2, title: current_organization.first_party_oauth_app_controls_feature_enabled? ? "Programmatic Access" : "Third-party Access") %>
        <% if GitHub.oauth_application_policies_enabled? %>
          <% group.with_item(label: "OAuth application policy", href: settings_org_oauth_application_policy_path(current_organization), selected_by_ids: :application_access_policy) do |item| %>
            <% item.with_leading_visual_icon(icon: :apps) %>
          <% end %>
        <% end %>

        <% group.with_item(label: "GitHub Apps", href: gh_settings_installations_path(current_context), selected_by_ids: :integration_installations) do |item| %>
          <% item.with_leading_visual_icon(icon: :hubot) %>
          <% if pending_installation_requests? %>
            <% item.with_trailing_visual_icon(icon: :"dot-fill", color: :attention) %>
          <% end %>
        <% end %>

        <% if current_organization.patsv2_enabled? %>
          <% group.with_item(label: "Personal access tokens", nav_classes: "personal-access-tokens-sub-menu") do |item| %>
            <% item.with_item(label: "Settings", href: settings_org_personal_access_tokens_path(current_organization), selected_by_ids: :personal_access_tokens_settings) %>
            <% item.with_item(label: "Active tokens", href: settings_org_active_personal_access_tokens_path(current_organization), selected_by_ids: :active_personal_access_tokens) %>
            <% item.with_item(label: "Pending requests", href: settings_org_personal_access_token_requests_path(current_organization), selected_by_ids: :pending_requests) %>
            <% item.with_leading_visual_icon(icon: :key) %>
            <% item.with_trailing_visual_label(
              scheme: :success,
              title: "Feature Release Label: Beta",
              aria: { label: "Feature Release Label: Beta" }) { "Beta" } %>
          <% end %>
        <% else %>
          <% group.with_item(label: "Personal access tokens", href: settings_org_personal_access_tokens_onboarding_path(current_organization), selected_by_ids: :personal_access_tokens_onboarding) do |item| %>
            <% item.with_leading_visual_icon(icon: :key) %>
            <% item.with_trailing_visual_label(
              scheme: :success,
              title: "Feature Release Label: Beta",
              aria: { label: "Feature Release Label: Beta" }) { "Beta" } %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>

    <% component.with_group do |group| %>
      <% group.with_heading(heading_level: 2, title: "Integrations") %>

      <% unless current_user.patsv2_enabled? %>
        <% if GitHub.oauth_application_policies_enabled? %>
          <% group.with_item(label: "Third-party access", href: settings_org_oauth_application_policy_path(current_organization), selected_by_ids: :application_access_policy) do |item| %>
            <% item.with_leading_visual_icon(icon: :"key") %>
          <% end %>
        <% end %>

        <% group.with_item(label: "GitHub Apps", href: gh_settings_installations_path(current_context), selected_by_ids: :integration_installations) do |item| %>
          <% item.with_leading_visual_icon(icon: :apps) %>
          <% if pending_installation_requests? %>
            <% item.with_trailing_visual_icon(icon: :"dot-fill", color: :attention) %>
          <% end %>
        <% end %>
      <% end %>

      <% if !GitHub.enterprise? && current_organization.enterprise_installations.present? %>
        <% group.with_item(label: "GitHub Connect", href: organization_enterprise_installations_list_path(current_organization), selected_by_ids: :business_connect_settings) do |item| %>
          <% item.with_leading_visual_icon(icon: :plug) %>
        <% end %>
      <% end %>

      <% if RemindersMethods.reminders_enabled?(current_organization)  %>
        <% group.with_item(label: "Scheduled reminders", href: org_reminders_path(current_organization), selected_by_ids: :settings_reminders) do |item| %>
          <% item.with_leading_visual_icon(icon: :clock) %>
        <% end %>
      <% end %>
    <% end %>

    <% if current_business %>
      <% component.with_group do |group| %>
        <% group.with_heading(heading_level: 2, title: "Messages") %>
        <% group.with_item(label: "Announcement", href: edit_org_announcement_path(current_organization), selected_by_ids: :org_announcements) do |item| %>
          <% item.with_leading_visual_icon(icon: :megaphone) %>
        <% end %>
      <% end %>
    <% end %>

    <% component.with_group do |group| %>
      <% group.with_heading(heading_level: 2, title: "Archive") %>

      <% group.with_item(
        label: "Logs",
        nav_classes: "org-sub-menu") do |item| %>
        <% if GitHub.sponsors_enabled? %>
          <% item.with_item(label: "Sponsorship log", href: settings_org_sponsors_log_path(current_organization), selected_by_ids: :sponsors_log) %>
        <% end %>

        <% item.with_item(label: "Audit log", href: settings_org_audit_log_path(current_organization), selected_by_ids: :audit_log) %>

        <% item.with_leading_visual_icon(icon: :log) %>
      <% end %>

      <% unless GitHub.enterprise? %>
        <% group.with_item(label: "Deleted repositories", href: settings_org_deleted_repositories_path(current_organization), selected_by_ids: :deleted_repositories) do |item| %>
          <% item.with_leading_visual_icon(icon: :"repo-deleted") %>
        <% end %>
      <% end %>
    <% end %>

    <% component.with_item(
      label: "Developer settings",
      id: "developer-settings-item") do |item| %>
      <% item.with_item(label: "OAuth Apps", href: settings_org_applications_path(current_organization), selected_by_ids: :applications_settings) %>
      <% item.with_item(label: "GitHub Apps", href: settings_org_apps_path(current_organization), selected_by_ids: :integrations) %>

      <% if !GitHub.enterprise? && !GitHub.multi_tenant_enterprise? %>
        <% item.with_item(label: "Publisher Verification", href: settings_org_publisher_path(current_organization), selected_by_ids: :publisher_settings, test_selector: "marketplace-publisher-verification-link") %>
      <% end %>

      <% item.with_leading_visual_icon(icon: :code) %>
    <% end %>
  <% end %>
</div>
