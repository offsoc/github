# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Proto::SecretScanning::Api::V2::DeleteCustomPatternRequest`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Proto::SecretScanning::Api::V2::DeleteCustomPatternRequest`.

class GitHub::Proto::SecretScanning::Api::V2::DeleteCustomPatternRequest
  sig do
    params(
      deleted_by_id: T.nilable(Integer),
      feature_flags: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      id: T.nilable(Integer),
      owner_id: T.nilable(Integer),
      owner_scope: T.nilable(T.any(Symbol, Integer)),
      post_delete_action: T.nilable(T.any(Symbol, Integer)),
      row_version: T.nilable(String)
    ).void
  end
  def initialize(deleted_by_id: nil, feature_flags: T.unsafe(nil), id: nil, owner_id: nil, owner_scope: nil, post_delete_action: nil, row_version: nil); end

  sig { void }
  def clear_deleted_by_id; end

  sig { void }
  def clear_feature_flags; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_owner_scope; end

  sig { void }
  def clear_post_delete_action; end

  sig { void }
  def clear_row_version; end

  sig { returns(Integer) }
  def deleted_by_id; end

  sig { params(value: Integer).void }
  def deleted_by_id=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def feature_flags; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def feature_flags=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def owner_scope; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def owner_scope=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def post_delete_action; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def post_delete_action=(value); end

  sig { returns(String) }
  def row_version; end

  sig { params(value: String).void }
  def row_version=(value); end
end
