<%# erblint:counter DeprecatedComponentsCounter 2 %>
<%# rubocop:disable Lint/InstanceVariable %>
<% f = application_form %>

<% if field_has_errors?(@application, :user) %>
  <% if GitHub.flipper[:banner_migration].enabled?(current_user) %>
    <%= render Primer::Alpha::Banner.new(scheme: :danger, mb: 4, icon: :alert) do %>
      <%= error_for(@application, :user, human_field: "") %>
    <% end %>
  <% else %>
    <%= render Primer::Beta::Flash.new(scheme: :danger, mb: 4, icon: :alert) do %>
      <%= error_for(@application, :user, human_field: "") %>
    <% end %>
  <% end %>
<% end %>

<% if allow_editing_oauth_bgcolor?(@application) %>
  <div class="clearfix">
    <div class="col-5 float-left mr-4">
      <dl class="form-group">
        <dt><label for="oauth_app_bgcolor">Badge background color</label></dt>
        <dd>
          <input required autofocus type="text" autocomplete="off" name="oauth_application[bgcolor]" id="oauth_app_bgcolor" maxlength="7" class="form-control js-app-bgcolor-input" placeholder="Hex color code" value="#<%= @application.bgcolor %>" pattern="#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})" title="Hex colors should only contain numbers and letters from a-f" aria-describedby="help-text-for-bgcolor"><%# erblint:disable GitHub::Accessibility::NoTitleAttribute %>
          <p class="note" id="help-text-for-bgcolor">
            The hex value of the badge background color.
          </p>
        </dd>
      </dl>
    </div>
    <div class="col-4 float-left">
      <div style="background-color: #<%= @application.bgcolor %>" class="CircleBadge CircleBadge--large js-app-logo-with-bgcolor">
        <%= oauth_application_logo(@application, 70, class: "CircleBadge-icon",
                                                     force_app_logo: true) %>
      </div>
    </div>
  </div>
<% end %>

<%= f.text_group  'Application name', :name, oauth_app_name_options(@application) %>

<%=
  f.text_group  'Homepage URL', :url,
    :class => 'wide',
    :hint => 'The full URL to your application homepage.',
    :required => true,
    :error => error_for(@application, :url)
%>

<%=
  f.text_area_group  "Application description", :description,
    :for         => "oauth_application_description",
    :value       => @application.description,
    :class       => "short",
    :hint        => "This is displayed to all users of your application.",
    :placeholder => "Application description is optional",
    :error       => error_for(@application, :description)
%>

<%
  # We expose the multiple callback URL functionality no matter what if >1
  # callback URL has been configured. If we don't, saving the application's
  # configuration will remove callback URLs depending on whether the feature is
  # enabled/disabled between users.
%>
<% if oauth_registered_callback_urls_enabled? || @application.try(:strict_callback_url_validation?) %>

<h4>Authorization callback URLs</h4>

<div class="callback-urls js-callback-urls mr-3 <%= @application.application_callback_urls.any? ? 'has-many' : '' %>">
  <% if @application.application_callback_urls.any? %>
    <%= render partial: "oauth_applications/callback_url", collection: @application.application_callback_urls %>
  <% else %>
    <%= render partial: "oauth_applications/callback_url", locals: { callback_url: @application.application_callback_urls.build } %>
  <% end %>

  <%= render Primer::ButtonComponent.new(classes: "js-new-callback") do %>Add more<% end %>

  <p class="callback-description">
    <%= primer_octicon(:question) %>
    Your application’s callback URLs. The <code>redirect_uri</code> used in the OAuth process should
    exactly match one of the provided callback URLs
    (including the scheme, case, trailing slash, and request parameters). For backward
    compatibility, <code>redirect_uri</code> may reference a subdirectory of the first callback URL
    listed. However, this may change in the future; please register multiple URLs rather than rely
    on legacy support for subdirectories.
    Read our <a class="Link--inTextBlock" rel="noopener noreferrer" href="<%= GitHub.developer_help_url %>/apps/building-integrations/setting-up-and-registering-oauth-apps/registering-oauth-apps/" target="_blank">OAuth documentation</a> for more information
  </p>
</div>

<% else %>

<% hint_html = safe_join(["Your application’s callback URL. Read our ", link_to("OAuth documentation", "#{GitHub.developer_help_url}/v3/oauth/", :target =>"_blank"), " for more information."]) %>
<%=
  f.text_group  'Authorization callback URL', :callback_url,
    :class => 'wide',
    :hint => hint_html,
    :error => error_for(@application, :callback_url),
    :required => true,
    :value => @application.raw_callback_url
%>

<% end %>

<% if GitHub.flipper[:api_version_pinning].enabled?(@application) %>
  <dl class="form-group">
    <dt class="input-label"><label for="oauth_application_pinned_api_version">API Version</label></dt>
    <dd>
      <%= f.select :pinned_api_version, Rest::HasPinnedApiVersion.version_options_for_select, {}, { class: "form-select", :"aria-label" => "API Version", :"aria-describedby" => "settings_application_api_version_note" } %>
      <p class="text-small color-fg-muted mt-3" id="settings_application_api_version_note">
        This version of the API will be used for any requests made by the app, unless those requests include version headers.
      </p>
    </dd>
  </dl>
<% end %>

<dl class="form-group">
  <dt>
    <label for="device_flow_enabled" aria-describedby="help-text-for-device-flow-enabled">
      <%= f.check_box :device_flow_enabled %>
      Enable Device Flow
    </label>
  </dt>
  <dd>
    <p class="note" id="help-text-for-device-flow-enabled">
    Allow this OAuth App to authorize users via the Device Flow.
    </p>
    <p class="note">Read the <%= link_to "Device Flow documentation", "#{ GitHub.developer_help_url }/apps/building-oauth-apps/authorizing-oauth-apps#device-flow", class: "Link--inTextBlock" %> for more information.</p>
  </dd>
</dl>
