# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::Entities::IntegrationInstallation`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::Entities::IntegrationInstallation`.

class Hydro::Schemas::Github::V1::Entities::IntegrationInstallation
  sig do
    params(
      id: T.nilable(Integer),
      repository_selection: T.nilable(T.any(Symbol, Integer)),
      target_id: T.nilable(Integer),
      target_name: T.nilable(String),
      target_type: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(id: nil, repository_selection: nil, target_id: nil, target_name: nil, target_type: nil); end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_repository_selection; end

  sig { void }
  def clear_target_id; end

  sig { void }
  def clear_target_name; end

  sig { void }
  def clear_target_type; end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def repository_selection; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def repository_selection=(value); end

  sig { returns(Integer) }
  def target_id; end

  sig { params(value: Integer).void }
  def target_id=(value); end

  sig { returns(String) }
  def target_name; end

  sig { params(value: String).void }
  def target_name=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def target_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def target_type=(value); end
end
