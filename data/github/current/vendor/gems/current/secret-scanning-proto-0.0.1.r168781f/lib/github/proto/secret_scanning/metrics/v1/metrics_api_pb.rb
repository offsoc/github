# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: metrics/v1/metrics_api.proto

require 'google/protobuf'

require 'google/protobuf/timestamp_pb'
require 'types/v1/token_pb'
require 'types/v1/token_metadata_pb'
require 'api/v1/shared_pb'
require 'scans/v1/api_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("metrics/v1/metrics_api.proto", :syntax => :proto3) do
    add_message "github.secretscanning.metrics.v1.GetAlertsForInsightsBackfillRequest" do
      optional :next_cursor, :bytes, 2
      optional :updated_after, :message, 3, "google.protobuf.Timestamp"
      optional :include_low_confidence, :bool, 4
      oneof :selector do
        optional :repo_selector, :message, 1, "github.secretscanning.metrics.v1.RepoSelector"
      end
    end
    add_message "github.secretscanning.metrics.v1.GetAlertsForInsightsBackfillRequestResponse" do
      repeated :Alerts, :message, 1, "github.secretscanning.metrics.v1.Alert"
      optional :next_cursor, :bytes, 2
    end
    add_message "github.secretscanning.metrics.v1.Alert" do
      optional :number, :uint64, 1
      optional :repository_id, :uint64, 2
      optional :created_at, :message, 3, "google.protobuf.Timestamp"
      optional :resolved_at, :message, 4, "google.protobuf.Timestamp"
      optional :updated_at, :message, 5, "google.protobuf.Timestamp"
      optional :resolved, :bool, 6
      optional :resolution, :enum, 7, "github.secretscanning.types.v1.TokenResolution"
      optional :token_type_provider, :string, 8
      optional :slug, :string, 9
      optional :token_type, :string, 10
      optional :has_valid_locations, :bool, 11
      optional :low_confidence, :bool, 12
      optional :bypassed, :bool, 13
      optional :validity, :enum, 14, "github.secretscanning.types.v1.TokenValidity"
    end
    add_message "github.secretscanning.metrics.v1.RepoSelector" do
      optional :repository_id, :uint64, 1
    end
    add_message "github.secretscanning.metrics.v1.GetTokenAlertMetricsRequest" do
      optional :owner_id, :uint64, 1
      optional :owner_scope, :enum, 2, "github.secretscanning.v1.OwnerScope"
      optional :token_type, :string, 3
    end
    add_message "github.secretscanning.metrics.v1.GetTokenAlertMetricsResponse" do
      optional :open_alerts, :uint64, 1
      optional :closed_alerts, :uint64, 2
      optional :false_positive_alerts, :uint64, 3
    end
    add_message "github.secretscanning.metrics.v1.GetTokenPushProtectionMetricsRequest" do
      optional :owner_id, :uint64, 1
      optional :owner_scope, :enum, 2, "github.secretscanning.v1.OwnerScope"
      optional :token_type, :string, 3
    end
    add_message "github.secretscanning.metrics.v1.GetTokenPushProtectionMetricsResponse" do
      optional :total_blocks, :uint64, 1
      optional :successful_blocks, :uint64, 2
      optional :bypassed_alerts, :uint64, 3
    end
    add_message "github.secretscanning.metrics.v1.TokenTypeCount" do
      optional :token_type, :string, 1
      optional :count, :uint64, 2
      optional :token_metadata, :message, 3, "github.secretscanning.types.v1.TokenMetadata"
    end
    add_message "github.secretscanning.metrics.v1.RepoCount" do
      optional :repo_id, :uint64, 1
      optional :count, :uint64, 2
    end
    add_message "github.secretscanning.metrics.v1.BypassReasonCount" do
      optional :bypass_reason, :enum, 1, "github.secretscanning.scans.v1.BypassReason"
      optional :count, :uint64, 2
    end
    add_message "github.secretscanning.metrics.v1.GetPushProtectionMetricsRequest" do
      optional :owner_id, :uint64, 1
      optional :owner_scope, :enum, 2, "github.secretscanning.v1.OwnerScope"
      optional :start_date, :message, 3, "google.protobuf.Timestamp"
      optional :end_date, :message, 4, "google.protobuf.Timestamp"
      repeated :repo_ids, :uint64, 5
      optional :repo_owners, :message, 6, "github.secretscanning.v1.RepositoryOwners"
      repeated :token_types, :string, 7
      repeated :token_providers, :string, 8
      repeated :token_validities, :enum, 9, "github.secretscanning.types.v1.TokenValidity"
      repeated :exclude_repo_ids, :uint64, 10
      repeated :exclude_token_types, :string, 11
      repeated :exclude_token_providers, :string, 12
      repeated :exclude_token_validities, :enum, 13, "github.secretscanning.types.v1.TokenValidity"
      optional :repo_archived_state, :enum, 14, "github.secretscanning.v1.RepositoryArchivedState"
    end
    add_message "github.secretscanning.metrics.v1.GetPushProtectionMetricsResponse" do
      optional :total_blocks_count, :uint64, 1
      optional :successful_blocks_count, :uint64, 2
      optional :bypassed_alerts_count, :uint64, 3
      repeated :blocks_by_token_type_counts, :message, 4, "github.secretscanning.metrics.v1.TokenTypeCount"
      repeated :blocks_by_repository_counts, :message, 5, "github.secretscanning.metrics.v1.RepoCount"
      repeated :bypasses_by_token_type_counts, :message, 6, "github.secretscanning.metrics.v1.TokenTypeCount"
      repeated :bypasses_by_repository_counts, :message, 7, "github.secretscanning.metrics.v1.RepoCount"
      repeated :bypasses_by_reason_counts, :message, 8, "github.secretscanning.metrics.v1.BypassReasonCount"
      repeated :bypass_request_ids, :uint64, 9
    end
    add_message "github.secretscanning.metrics.v1.GetPushProtectionMetricsForReposRequest" do
      optional :owner_id, :uint64, 1
      optional :owner_scope, :enum, 2, "github.secretscanning.v1.OwnerScope"
      repeated :repo_ids, :uint64, 3
      optional :start_date, :message, 4, "google.protobuf.Timestamp"
      optional :end_date, :message, 5, "google.protobuf.Timestamp"
      repeated :token_types, :string, 6
      repeated :token_providers, :string, 7
      repeated :token_validities, :enum, 8, "github.secretscanning.types.v1.TokenValidity"
      repeated :exclude_repo_ids, :uint64, 9
      repeated :exclude_token_types, :string, 10
      repeated :exclude_token_providers, :string, 11
      repeated :exclude_token_validities, :enum, 12, "github.secretscanning.types.v1.TokenValidity"
      optional :repo_archived_state, :enum, 13, "github.secretscanning.v1.RepositoryArchivedState"
      optional :repo_owners, :message, 14, "github.secretscanning.v1.RepositoryOwners"
    end
    add_message "github.secretscanning.metrics.v1.GetPushProtectionMetricsForReposResponse" do
      optional :total_blocks_count, :uint64, 1
      optional :successful_blocks_count, :uint64, 2
      optional :bypassed_alerts_count, :uint64, 3
    end
    add_message "github.secretscanning.metrics.v1.GetBlockCountsByTokenTypeRequest" do
      optional :owner_id, :uint64, 1
      optional :owner_scope, :enum, 2, "github.secretscanning.v1.OwnerScope"
      optional :cursor, :bytes, 3
      optional :start_date, :message, 4, "google.protobuf.Timestamp"
      optional :end_date, :message, 5, "google.protobuf.Timestamp"
      repeated :repo_ids, :uint64, 6
      optional :repo_owners, :message, 7, "github.secretscanning.v1.RepositoryOwners"
      repeated :token_types, :string, 8
      repeated :token_providers, :string, 9
      repeated :exclude_repo_ids, :uint64, 10
      repeated :exclude_token_types, :string, 11
      repeated :exclude_token_providers, :string, 12
      optional :repo_archived_state, :enum, 13, "github.secretscanning.v1.RepositoryArchivedState"
    end
    add_message "github.secretscanning.metrics.v1.GetBlockCountsByTokenTypeResponse" do
      repeated :counts, :message, 1, "github.secretscanning.metrics.v1.TokenTypeCount"
      optional :previous_cursor, :bytes, 2
      optional :next_cursor, :bytes, 3
    end
    add_message "github.secretscanning.metrics.v1.GetBlockCountsByRepoRequest" do
      optional :owner_id, :uint64, 1
      optional :owner_scope, :enum, 2, "github.secretscanning.v1.OwnerScope"
      optional :cursor, :bytes, 3
      optional :start_date, :message, 4, "google.protobuf.Timestamp"
      optional :end_date, :message, 5, "google.protobuf.Timestamp"
      repeated :repo_ids, :uint64, 6
      optional :repo_owners, :message, 7, "github.secretscanning.v1.RepositoryOwners"
      repeated :token_types, :string, 8
      repeated :token_providers, :string, 9
      repeated :exclude_repo_ids, :uint64, 10
      repeated :exclude_token_types, :string, 11
      repeated :exclude_token_providers, :string, 12
      optional :repo_archived_state, :enum, 13, "github.secretscanning.v1.RepositoryArchivedState"
    end
    add_message "github.secretscanning.metrics.v1.GetBlockCountsByRepoResponse" do
      repeated :counts, :message, 1, "github.secretscanning.metrics.v1.RepoCount"
      optional :previous_cursor, :bytes, 2
      optional :next_cursor, :bytes, 3
    end
    add_message "github.secretscanning.metrics.v1.GetBypassCountsByTokenTypeRequest" do
      optional :owner_id, :uint64, 1
      optional :owner_scope, :enum, 2, "github.secretscanning.v1.OwnerScope"
      optional :cursor, :bytes, 3
      optional :start_date, :message, 4, "google.protobuf.Timestamp"
      optional :end_date, :message, 5, "google.protobuf.Timestamp"
      repeated :repo_ids, :uint64, 6
      optional :repo_owners, :message, 7, "github.secretscanning.v1.RepositoryOwners"
      repeated :token_types, :string, 8
      repeated :token_providers, :string, 9
      repeated :token_validities, :enum, 10, "github.secretscanning.types.v1.TokenValidity"
      repeated :exclude_repo_ids, :uint64, 11
      repeated :exclude_token_types, :string, 12
      repeated :exclude_token_providers, :string, 13
      repeated :exclude_token_validities, :enum, 14, "github.secretscanning.types.v1.TokenValidity"
      optional :repo_archived_state, :enum, 15, "github.secretscanning.v1.RepositoryArchivedState"
    end
    add_message "github.secretscanning.metrics.v1.GetBypassCountsByTokenTypeResponse" do
      repeated :counts, :message, 1, "github.secretscanning.metrics.v1.TokenTypeCount"
      optional :previous_cursor, :bytes, 2
      optional :next_cursor, :bytes, 3
    end
    add_message "github.secretscanning.metrics.v1.GetBypassCountsByRepoRequest" do
      optional :owner_id, :uint64, 1
      optional :owner_scope, :enum, 2, "github.secretscanning.v1.OwnerScope"
      optional :cursor, :bytes, 3
      optional :start_date, :message, 4, "google.protobuf.Timestamp"
      optional :end_date, :message, 5, "google.protobuf.Timestamp"
      repeated :repo_ids, :uint64, 6
      optional :repo_owners, :message, 7, "github.secretscanning.v1.RepositoryOwners"
      repeated :token_types, :string, 8
      repeated :token_providers, :string, 9
      repeated :token_validities, :enum, 10, "github.secretscanning.types.v1.TokenValidity"
      repeated :exclude_repo_ids, :uint64, 11
      repeated :exclude_token_types, :string, 12
      repeated :exclude_token_providers, :string, 13
      repeated :exclude_token_validities, :enum, 14, "github.secretscanning.types.v1.TokenValidity"
      optional :repo_archived_state, :enum, 15, "github.secretscanning.v1.RepositoryArchivedState"
    end
    add_message "github.secretscanning.metrics.v1.GetBypassCountsByRepoResponse" do
      repeated :counts, :message, 1, "github.secretscanning.metrics.v1.RepoCount"
      optional :previous_cursor, :bytes, 2
      optional :next_cursor, :bytes, 3
    end
  end
end

module GitHub
  module Proto
    module SecretScanning
      module Metrics
        module V1
          GetAlertsForInsightsBackfillRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.secretscanning.metrics.v1.GetAlertsForInsightsBackfillRequest").msgclass
          GetAlertsForInsightsBackfillRequestResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.secretscanning.metrics.v1.GetAlertsForInsightsBackfillRequestResponse").msgclass
          Alert = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.secretscanning.metrics.v1.Alert").msgclass
          RepoSelector = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.secretscanning.metrics.v1.RepoSelector").msgclass
          GetTokenAlertMetricsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.secretscanning.metrics.v1.GetTokenAlertMetricsRequest").msgclass
          GetTokenAlertMetricsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.secretscanning.metrics.v1.GetTokenAlertMetricsResponse").msgclass
          GetTokenPushProtectionMetricsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.secretscanning.metrics.v1.GetTokenPushProtectionMetricsRequest").msgclass
          GetTokenPushProtectionMetricsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.secretscanning.metrics.v1.GetTokenPushProtectionMetricsResponse").msgclass
          TokenTypeCount = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.secretscanning.metrics.v1.TokenTypeCount").msgclass
          RepoCount = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.secretscanning.metrics.v1.RepoCount").msgclass
          BypassReasonCount = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.secretscanning.metrics.v1.BypassReasonCount").msgclass
          GetPushProtectionMetricsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.secretscanning.metrics.v1.GetPushProtectionMetricsRequest").msgclass
          GetPushProtectionMetricsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.secretscanning.metrics.v1.GetPushProtectionMetricsResponse").msgclass
          GetPushProtectionMetricsForReposRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.secretscanning.metrics.v1.GetPushProtectionMetricsForReposRequest").msgclass
          GetPushProtectionMetricsForReposResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.secretscanning.metrics.v1.GetPushProtectionMetricsForReposResponse").msgclass
          GetBlockCountsByTokenTypeRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.secretscanning.metrics.v1.GetBlockCountsByTokenTypeRequest").msgclass
          GetBlockCountsByTokenTypeResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.secretscanning.metrics.v1.GetBlockCountsByTokenTypeResponse").msgclass
          GetBlockCountsByRepoRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.secretscanning.metrics.v1.GetBlockCountsByRepoRequest").msgclass
          GetBlockCountsByRepoResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.secretscanning.metrics.v1.GetBlockCountsByRepoResponse").msgclass
          GetBypassCountsByTokenTypeRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.secretscanning.metrics.v1.GetBypassCountsByTokenTypeRequest").msgclass
          GetBypassCountsByTokenTypeResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.secretscanning.metrics.v1.GetBypassCountsByTokenTypeResponse").msgclass
          GetBypassCountsByRepoRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.secretscanning.metrics.v1.GetBypassCountsByRepoRequest").msgclass
          GetBypassCountsByRepoResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.secretscanning.metrics.v1.GetBypassCountsByRepoResponse").msgclass
        end
      end
    end
  end
end
