<%# erblint:counter DeprecatedInPrimerCounter 1 %>
<% unless GitHub.enterprise? %>
  <div class="mb-3">
    <h3 class="mb-3">Organization Info</h3>
    <div>
      <div class="clearfix summary my-0">
        <% org_metadata.each do |key, value| %>
          <dl>
            <dt style="width: 50%"><%=key%></dt>
            <dd><%=value%></dd>
          </dl>
        <% end %>
      </div>
    </div>
  </div>
  <div class="mb-3">
    <h3 class="mb-3">Packages Utilities </h3>
    <div class="boxed-group-inner">
      <table class="boxed-group-table">
        <tr class="no-wrap">
          <th>Name</th>
          <th>Description</th>
          <th>Actions</th>
          <th></th>
          <th></th>
        </tr>
        <tbody>
        <% if GitHub.flipper[:packages_submit_billing_reconciliation].enabled?(current_user) %>
          <tr>
            <td>Billing Reconciliation</td>
            <td>Triggers Billing Reconciliation for <%= owner %> </td>
            <td>
              <%= stafftools_button_to "Trigger", stafftools_user_trigger_packages_billing_reconciliation_path(this_user),
                                       method: :post,
                                       class: "btn btn-primary",
                                       form_class: "inline-form",
                                       "data-confirm": "Are you sure you want to trigger billing reconciliation for #{owner}? " %>
            </td>
            <td></td>
          </tr>
        <% end %>
        <% if GitHub.flipper[:packages_submit_docker_storage_reset].enabled?(current_user) %>
          <tr>
            <td>Docker Storage Reset</td>
            <td>Triggers docker storage reset for <%= owner %> </td>
            <td>
              <%= stafftools_button_to "Trigger", stafftools_user_trigger_packages_docker_storage_reset_path(this_user),
                                       method: :post,
                                       class: "btn btn-primary",
                                       form_class: "inline-form",
                                       "data-confirm": "Are you sure you want to trigger Docker storage reset for #{owner}? " %>
            </td>
            <td></td>
          </tr>
        <% end %>
        <% if GitHub.flipper[:packages_submit_docker_v1_migration].enabled?(current_user) %>
          <tr>
            <td>Docker V1 Migration</td>
            <td>Triggers Docker V1 to containers migration for <%= owner %> </td>
            <td>
              <%= stafftools_button_to "Trigger", stafftools_user_trigger_packages_migration_path(this_user),
                                       method: :post,
                                       params: {force: false, package_type: :docker},
                                       class: "btn btn-primary",
                                       form_class: "inline-form",
                                       "data-confirm": "Are you sure you want to trigger v1 Docker migration for #{owner}? There is no going back!" %>
            </td>
            <td>
              <%= stafftools_button_to "Force", stafftools_user_trigger_packages_migration_path(this_user),
                                       method: :post,
                                       params: {force: true, package_type: :docker},
                                       class: "btn btn-danger",
                                       form_class: "inline-form",
                                       "data-confirm": "Are you sure you want to trigger a forced v1 Docker migration for #{owner}? This will re-migrate all Docker packages for #{owner} and there is no going back!" %>
            </td>
          </tr>
        <% end %>

        <tr>
            <td>npm V1 Migration</td>
            <td>Triggers npm V1 to npm v2 migration for <%= owner %> </td>
            <td>
              <%= stafftools_button_to "Trigger", stafftools_user_trigger_packages_migration_path(this_user),
                                       method: :post,
                                       params: {force: false, package_type: :npm},
                                       class: "btn btn-primary",
                                       form_class: "inline-form",
                                       title: "Migrates all npm packages under the namespace",
                                       "data-confirm": "Are you sure you want to trigger v1 npm migration for #{owner}? There is no going back!" %>
            </td>
            <td>
              <%= stafftools_button_to "Re-try", stafftools_user_trigger_packages_migration_path(this_user),
                                       method: :post,
                                       params: {force: false, retry_failed: true, package_type: :npm},
                                       class: "btn btn-danger",
                                       form_class: "inline-form",
                                       title: "Only migrates those npm packages under the namespace that failed in earlier attempt",
                                       "data-confirm": "Are you sure you want to re-try v1 npm migration for #{owner}? There is no going back!" %>
            </td>
            <td>
              <%= stafftools_button_to "Force", stafftools_user_trigger_packages_migration_path(this_user),
                                       method: :post,
                                       params: {force: true, package_type: :npm},
                                       class: "btn btn-danger",
                                       form_class: "inline-form",
                                       title: "Force migrates all npm packages under the namespace irrespective of their previous migration status",
                                       "data-confirm": "Are you sure you want to trigger a forced v1 npm migration for #{owner}? This will re-migrate all npm packages for #{owner} and there is no going back!" %>
            </td>
          </tr>

          <tr>
            <td>Nuget V1 Migration</td>
            <td>Triggers nuget V1 to nuget v2 migration for <%= owner %> </td>
            <td>
              <%= stafftools_button_to "Trigger", stafftools_user_trigger_packages_migration_path(this_user),
                                       method: :post,
                                       params: {force: false, package_type: :nuget},
                                       class: "btn btn-primary",
                                       form_class: "inline-form",
                                       title: "Migrates all nuget packages under the namespace",
                                       "data-confirm": "Are you sure you want to trigger v1 nuget migration for #{owner}? There is no going back!" %>
            </td>
            <td>
              <%= stafftools_button_to "Re-try", stafftools_user_trigger_packages_migration_path(this_user),
                                       method: :post,
                                       params: {force: false, retry_failed: true, package_type: :nuget},
                                       class: "btn btn-danger",
                                       form_class: "inline-form",
                                       title: "Only migrates those nuget packages under the namespace that failed in earlier attempt",
                                       "data-confirm": "Are you sure you want to re-try v1 nuget migration for #{owner}? There is no going back!" %>
            </td>
            <td>
              <%= stafftools_button_to "Force", stafftools_user_trigger_packages_migration_path(this_user),
                                       method: :post,
                                       params: {force: true, package_type: :nuget},
                                       class: "btn btn-danger",
                                       form_class: "inline-form",
                                       title: "Force migrates all nuget packages under the namespace irrespective of their previous migration status",
                                       "data-confirm": "Are you sure you want to trigger a forced v1 nuget migration for #{owner}? This will re-migrate all nuget packages for #{owner} and there is no going back!" %>
            </td>
          </tr>
          <tr>
            <td>Rubygems V1 Migration</td>
            <td>Triggers rubygems V1 to rubygems v2 migration for <%= owner %> </td>
            <td>
              <%= stafftools_button_to "Trigger", stafftools_user_trigger_packages_migration_path(this_user),
                                       method: :post,
                                       params: {force: false, package_type: :rubygems},
                                       class: "btn btn-primary",
                                       form_class: "inline-form",
                                       title: "Migrates all rubygems packages under the namespace",
                                       "data-confirm": "Are you sure you want to trigger v1 rubygems migration for #{owner}? There is no going back!" %>
            </td>
            <td>
              <%= stafftools_button_to "Re-try", stafftools_user_trigger_packages_migration_path(this_user),
                                       method: :post,
                                       params: {force: false, retry_failed: true, package_type: :rubygems},
                                       class: "btn btn-danger",
                                       form_class: "inline-form",
                                       title: "Only migrates those rubygems packages under the namespace that failed in earlier attempt",
                                       "data-confirm": "Are you sure you want to re-try v1 rubygems migration for #{owner}? There is no going back!" %>
            </td>
            <td>
              <%= stafftools_button_to "Force", stafftools_user_trigger_packages_migration_path(this_user),
                                       method: :post,
                                       params: {force: true, package_type: :rubygems},
                                       class: "btn btn-danger",
                                       form_class: "inline-form",
                                       title: "Force migrates all rubygems packages under the namespace irrespective of their previous migration status",
                                       "data-confirm": "Are you sure you want to trigger a forced v1 rubygems migration for #{owner}? This will re-migrate all rubygems packages for #{owner} and there is no going back!" %>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
<% end %>
<div>
  <h3 class="mb-3">Packages</h3>
  <% if repositories_packages_data.empty? %>
    <div>
      <p>No packages found!</p>
    </div>
  <% else %>
      <% if migrated_count > 0 %>
        <div class="mb-2">
          <p>Hiding <%= migrated_count %> migrated <%= "package".pluralize(migrated_count) %></p>
        </div>
      <% end %>
      <% repositories_packages_data.each do |repository_group| %>
        <% repository = repository_group[:repository] %>

        <details class="Box Box--condensed mb-3" open>
          <summary class="Box-header">
            <h3 class="Box-title d-inline-block">
              <%= repository.name %>
              <%= render Primer::Beta::Counter.new(count: repository_group[:packages_count]) %>
              <% if repository_group[:hidden_count] > 0 %>
                (hiding <%= repository_group[:hidden_count] %> migrated <%= "package".pluralize(repository_group[:hidden_count]) %>)
              <% end %>
            </h3>
          </summary>
          <div class="Box-body clearfix summary my-0">
            <div class="clearfix">
              <%= stafftools_button_to "Delete All Packages", stafftools_user_delete_packages_for_repo_path(owner, repository.name),
                                       :method => :delete,
                                       :class => "btn btn-danger",
                                       :"data-confirm" => "Are you sure you want to delete ALL packages for repo #{repository.name} from #{owner}?" %>
            </div>
            <div class="Box-body clearfix p-0 overflow-x-auto">
              <% repository_group[:packages].each do |package_group| %>
                <% package = package_group[:package] %>

                <hr class="bleed-flush">
                <dl>
                  <dt>Name</dt>
                  <dd>
                    <%= package_group[:latest_version].present? ? package.name : package.original_name %>
                    <% if package.repository.private? %>
                      <%= primer_octicon(:lock, color: :muted, ml: 1, classes: "tooltipped tooltipped-e", "aria-label": "Private package") %><%# erblint:disable Primer::Accessibility::TooltippedMigration %>
                    <% end %>
                  </dd>
                </dl>
                <dl>
                  <dt>Type</dt>
                  <dd>
                    <%= package.package_type.downcase %>
                  </dd>
                </dl>
                <dl>
                  <dt>Latest Version</dt>
                  <dd>
                    <%= package_group[:latest_version]&.version || "Deleted" %>
                  </dd>
                </dl>
                <dl>
                  <dt>Versions</dt>
                  <dd>
                    <%= package_group[:version_count] %>
                  </dd>
                </dl>
                <dl>
                  <dt>Created at</dt>
                  <dd>
                    <%= time_ago_in_words_js package.created_at %>
                  </dd>
                </dl>
                <dl>
                  <dt>Package ID</dt>
                  <dd>
                    <%= package.id %>
                  </dd>
                </dl>
                <dl>
                  <dt>Repository</dt>
                  <dd>
                    <%= package.repository.name_with_owner %>
                  </dd>
                </dl>
                <dl>
                  <dt>Total Downloads</dt>
                  <dd>
                    <%= package_group[:download_count] %>
                  </dd>
                </dl>
                <dl>
                  <dt>
                    <%= primer_octicon(:trash, size: :medium) %>
                  </dt>
                  <dd>
                    <% if package_group[:latest_version].present? %>
                      <%= stafftools_button_to "Delete", stafftools_user_delete_package_version_path(owner, package.repository.name, package.id, package_group[:latest_version]&.version),
                                               method: :delete,
                                               class: "btn btn-sm btn-danger",
                                               form_class: "inline-form",
                                               "data-confirm": "Are you sure you want to delete the package version #{package_group[:latest_version]&.version} of #{package.name} from #{owner}?" %>
                    <% else %>
                      <%= stafftools_button_to "Delete", stafftools_user_purge_deleted_package_path(owner, package.repository.name, package.id),
                                               method: :delete,
                                               class: "btn btn-sm btn-danger",
                                               form_class: "inline-form",
                                               "data-confirm": "Are you sure you want to purge the deleted package #{package.original_name} from #{owner}?" %>
                    <% end %>
                  </dd>
                </dl>
              <% end %>
            </div>
          </div>
        </details>
      <% end %>
      <div class="paginate-container">
        <%= will_paginate(packages) %>
      </div>
    </div>
  <% end %>
