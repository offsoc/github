# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Spokes::Proto::Merges::V1::FindMergeBasesRequest`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Spokes::Proto::Merges::V1::FindMergeBasesRequest`.

class GitHub::Spokes::Proto::Merges::V1::FindMergeBasesRequest
  sig do
    params(
      base_oid: T.nilable(GitHub::Spokes::Proto::Types::V1::ObjectID),
      head_oid: T.nilable(GitHub::Spokes::Proto::Types::V1::ObjectID),
      merge_base_type: T.nilable(T.any(Symbol, Integer)),
      repository: T.nilable(GitHub::Spokes::Proto::Types::V1::Repository),
      request_context: T.nilable(GitHub::Spokes::Proto::Types::V1::RequestContext)
    ).void
  end
  def initialize(base_oid: nil, head_oid: nil, merge_base_type: nil, repository: nil, request_context: nil); end

  sig { returns(T.nilable(GitHub::Spokes::Proto::Types::V1::ObjectID)) }
  def base_oid; end

  sig { params(value: T.nilable(GitHub::Spokes::Proto::Types::V1::ObjectID)).void }
  def base_oid=(value); end

  sig { void }
  def clear_base_oid; end

  sig { void }
  def clear_head_oid; end

  sig { void }
  def clear_merge_base_type; end

  sig { void }
  def clear_repository; end

  sig { void }
  def clear_request_context; end

  sig { returns(T.nilable(GitHub::Spokes::Proto::Types::V1::ObjectID)) }
  def head_oid; end

  sig { params(value: T.nilable(GitHub::Spokes::Proto::Types::V1::ObjectID)).void }
  def head_oid=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def merge_base_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def merge_base_type=(value); end

  sig { returns(T.nilable(GitHub::Spokes::Proto::Types::V1::Repository)) }
  def repository; end

  sig { params(value: T.nilable(GitHub::Spokes::Proto::Types::V1::Repository)).void }
  def repository=(value); end

  sig { returns(T.nilable(GitHub::Spokes::Proto::Types::V1::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(GitHub::Spokes::Proto::Types::V1::RequestContext)).void }
  def request_context=(value); end
end
