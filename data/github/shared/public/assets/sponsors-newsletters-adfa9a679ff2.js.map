{"version":3,"file":"sponsors-newsletters-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/react-core/deferred-registry.ts","ui/packages/react-core/react-partial-anchor.ts","ui/packages/react-core/react-partial-registry.ts","ui/packages/react-core/ReactPartialElement.tsx","ui/packages/react-core/register-partial.ts","ui/packages/react-profiling-mode/src/index.ts","ui/packages/sponsors-newsletters/SponsorsNewsletters.tsx","ui/packages/sponsors-newsletters/sponsors-newsletters.ts","ui/packages/test-id-props/test-id-props.ts","ui/packages/react-core/PartialRouter.tsx","ui/packages/react-core/PartialEntry.tsx","ui/packages/react-core/ReactBaseElement.tsx"],"sourcesContent":["export class DeferredRegistry<T> {\n  private registrationEntries: Record<\n    string,\n    {\n      promise: Promise<T>\n      resolve?: (r: T) => void\n    }\n  > = {}\n\n  public register(name: string, registration: T) {\n    const entry = this.registrationEntries[name]\n    if (entry) {\n      entry.resolve?.(registration)\n    } else {\n      this.registrationEntries[name] = {\n        promise: Promise.resolve(registration),\n      }\n    }\n  }\n\n  public getRegistration(name: string): Promise<T> {\n    this.registrationEntries[name] ||= new Deferred()\n    return this.registrationEntries[name].promise\n  }\n}\n\nclass Deferred<T> {\n  declare promise\n  declare resolve: (r: T) => void\n\n  constructor() {\n    this.promise = new Promise<T>(resolve => {\n      this.resolve = resolve\n    })\n  }\n}\n","import type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {useCallback, useEffect, useRef, useState} from 'react'\n\ninterface ReactPartialAnchor {\n  /**\n   * DO NOT USE THIS PROPERTY DIRECTLY. It is meant to be used with useExternalAnchor and useOnAnchorClick\n   */\n  __wrapperElement: ReactPartialAnchorElement\n}\n\nexport interface ReactPartialAnchorProps {\n  reactPartialAnchor?: ReactPartialAnchor\n}\n\nexport function usePartialAnchorProps(\n  anchorElement: ReactPartialAnchorElement | undefined | null,\n): ReactPartialAnchorProps {\n  useEffect(() => {\n    const anchor = anchorElement?.anchor\n\n    if (!anchor) {\n      return\n    }\n\n    if ('disabled' in anchor) {\n      anchor.disabled = false\n    }\n    anchor.classList.remove('cursor-wait')\n  }, [anchorElement])\n\n  if (!anchorElement) {\n    return {}\n  }\n\n  return {\n    reactPartialAnchor: {\n      __wrapperElement: anchorElement,\n    },\n  }\n}\n\nexport function useExternalAnchor(reactPartialAnchor: ReactPartialAnchor) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor || null)\n  const [open, setOpen] = useState(false)\n\n  const onClick = useCallback(() => {\n    // toggle the open state when clicked\n    setOpen(!open)\n  }, [open, setOpen])\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    ref.current.setAttribute('aria-expanded', open.toString())\n    ref.current.setAttribute('aria-haspopup', 'true')\n  }, [ref, open])\n\n  useOnAnchorClick(reactPartialAnchor, onClick)\n\n  return {\n    ref,\n    open,\n    setOpen,\n  }\n}\n\nexport function useOnAnchorClick(reactPartialAnchor: ReactPartialAnchor, onClick: (event: MouseEvent) => void) {\n  const ref = useRef(reactPartialAnchor.__wrapperElement.anchor)\n\n  useEffect(() => {\n    const element = ref.current\n    if (!element) {\n      return\n    }\n\n    element.addEventListener('click', onClick)\n    return () => element.removeEventListener('click', onClick)\n  }, [ref, onClick])\n}\n\nexport type PropsWithPartialAnchor<T> = T & Required<ReactPartialAnchorProps>\n","import {DeferredRegistry} from './deferred-registry'\n\nexport interface PartialRegistration {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Component: React.ComponentType<any>\n}\n\nexport const partialRegistry = new DeferredRegistry<PartialRegistration>()\n\nexport function getReactPartial(appName: string) {\n  return partialRegistry.getRegistration(appName)\n}\n","import {controller} from '@github/catalyst'\nimport {getReactPartial} from './react-partial-registry'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {ReactBaseElement} from './ReactBaseElement'\nimport {PartialEntry} from './PartialEntry'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\n\n// What is this silliness? Is it react or a web component?!\n// It's a web component we use to bootstrap react partials within the monolith.\n@controller\nclass ReactPartialElement extends ReactBaseElement<EmbeddedPartialData> {\n  nameAttribute = 'partial-name'\n\n  async getReactNode(embeddedData: EmbeddedPartialData) {\n    const {Component} = await getReactPartial(this.name)\n\n    // Some React Partials will be wrapped in a react-partial-anchor, which is used to conditionally render the Partial\n    const anchorElement = this.closest<ReactPartialAnchorElement>('react-partial-anchor')\n\n    return (\n      <PartialEntry\n        partialName={this.name}\n        embeddedData={embeddedData}\n        Component={Component}\n        wasServerRendered={this.hasSSRContent}\n        ssrError={this.ssrError}\n        anchorElement={anchorElement}\n      />\n    )\n  }\n}\n","import {partialRegistry, type PartialRegistration} from './react-partial-registry'\n// Import the web component to get it registered on the window\nimport './ReactPartialElement'\n\n// NOTE: if the signature of this method changes, also update the react-partial-name ESLint rule\n// /workspaces/github/ui/packages/eslint-plugin-github-monorepo/rules/react-partial-name.js\nexport function registerReactPartial(name: string, registration: PartialRegistration) {\n  partialRegistry.register(name, registration)\n}\n","import safeStorage from '@github-ui/safe-storage'\n\nconst {getItem, setItem, removeItem} = safeStorage('localStorage')\nconst REACT_PROFILING_ENABLED = 'REACT_PROFILING_ENABLED'\n\ninterface ReactProfilingModeMethods {\n  enable: () => void\n  disable: () => void\n  isEnabled: () => boolean\n}\n\nconst ReactProfilingMode: ReactProfilingModeMethods = {\n  enable: () => setItem(REACT_PROFILING_ENABLED, 'true'),\n  disable: () => removeItem(REACT_PROFILING_ENABLED),\n  isEnabled: () => !!getItem(REACT_PROFILING_ENABLED),\n}\n\nexport default ReactProfilingMode\n","import {useCallback, useMemo, useState} from 'react'\nimport {testIdProps} from '@github-ui/test-id-props'\nimport {CircleSlashIcon, TriangleDownIcon} from '@primer/octicons-react'\nimport {Button, FormControl, SelectPanel} from '@primer/react'\nimport type {ItemInput} from '@primer/react/lib-esm/deprecated/ActionList/List'\n\nexport interface SponsorsNewslettersProps {\n  tiers: Tiers\n}\n\ninterface Tiers {\n  [id: string]: Tier\n}\n\ninterface Tier {\n  id: string\n  name: string\n  monthlyPriceInCents: number\n  frequency: string\n  state: string\n  subscriptionCount: number\n}\n\nexport function SponsorsNewsletters({tiers}: SponsorsNewslettersProps) {\n  const ACTIVE_STATES = useMemo(() => ['published', 'custom'], [])\n  const RETIRED_STATE = 'retired'\n  const RECURRING_FREQUENCY = 'recurring'\n  const ONE_TIME_FREQUENCY = 'one_time'\n\n  const getRecipientCount = useCallback((tierValues: Tier[]) => {\n    return tierValues.map(tier => tier.subscriptionCount).reduce((acc, count) => acc + count, 0)\n  }, [])\n  const allTierValues = useMemo(() => Object.values(tiers), [tiers])\n  const oneTimeTierValues = useMemo(\n    () => allTierValues.filter(tier => tier.frequency === ONE_TIME_FREQUENCY),\n    [allTierValues],\n  )\n  const recurringTierValues = useMemo(\n    () => allTierValues.filter(tier => tier.frequency === RECURRING_FREQUENCY),\n    [allTierValues],\n  )\n  const getTierTextSuffix = useCallback((subscriptionCount: number) => {\n    const sponsorText = subscriptionCount === 1 ? 'sponsor' : 'sponsors'\n    return `(${subscriptionCount} ${sponsorText})`\n  }, [])\n  const getTierText = useCallback(\n    (tier: Tier) => {\n      const prefix = tier.state === 'retired' ? '[retired] ' : ''\n      return `${prefix}${tier.name} ${getTierTextSuffix(tier.subscriptionCount)}`\n    },\n    [getTierTextSuffix],\n  )\n\n  const allTiersInput = useMemo(() => {\n    const recipientCount = getRecipientCount(allTierValues)\n    return {\n      key: 'all',\n      text: `All sponsors ${getTierTextSuffix(recipientCount)}`,\n      showDivider: false,\n    }\n  }, [allTierValues, getRecipientCount, getTierTextSuffix])\n\n  const [selectedInputs, setSelectedInputs] = useState<ItemInput[]>([allTiersInput])\n  const [selectedTiers, setSelectedTiers] = useState<Tier[]>(allTierValues)\n  const [isOpen, setIsOpen] = useState(false)\n  const [filter, setFilter] = useState('')\n\n  const noMatchesItem = useMemo(() => {\n    return {\n      leadingVisual: CircleSlashIcon,\n      text: 'No matches',\n      disabled: true,\n      selected: undefined, // hide checkbox\n      key: 'no-matches',\n      id: 'no-matches',\n    }\n  }, [])\n  const recurringTiersInput = useMemo(() => {\n    const recipientCount = getRecipientCount(recurringTierValues)\n    return {\n      key: 'recurring',\n      text: `Recurring sponsors ${getTierTextSuffix(recipientCount)}`,\n      showDivider: false,\n    }\n  }, [getRecipientCount, getTierTextSuffix, recurringTierValues])\n  const oneTimeTiersInput = useMemo(() => {\n    const recipientCount = getRecipientCount(oneTimeTierValues)\n    return {\n      key: 'one-time',\n      text: `One-time sponsors ${getTierTextSuffix(recipientCount)}`,\n      showDivider: false,\n    }\n  }, [getRecipientCount, getTierTextSuffix, oneTimeTierValues])\n\n  const getTierInputs = useMemo(\n    () => (tierFilter: (tier: {frequency: string; state: string}) => boolean) => {\n      return allTierValues\n        .filter(tierFilter)\n        .sort((a, b) => (a.monthlyPriceInCents > b.monthlyPriceInCents ? 1 : -1))\n        .map((tier, index) => ({\n          key: tier.id,\n          text: getTierText(tier),\n          showDivider: index === 0,\n        }))\n    },\n    [allTierValues, getTierText],\n  )\n  const activeRecurringTiers = useMemo(\n    () => getTierInputs(tier => ACTIVE_STATES.includes(tier.state) && tier.frequency === RECURRING_FREQUENCY),\n    [ACTIVE_STATES, getTierInputs],\n  )\n  const activeOneTimeTiers = useMemo(\n    () => getTierInputs(tier => ACTIVE_STATES.includes(tier.state) && tier.frequency === ONE_TIME_FREQUENCY),\n    [ACTIVE_STATES, getTierInputs],\n  )\n  const retiredRecurringTiers = useMemo(\n    () => getTierInputs(tier => tier.state === RETIRED_STATE && tier.frequency === RECURRING_FREQUENCY),\n    [getTierInputs],\n  )\n  const retiredOneTimeTiers = useMemo(\n    () => getTierInputs(tier => tier.state === RETIRED_STATE && tier.frequency === ONE_TIME_FREQUENCY),\n    [getTierInputs],\n  )\n  const aggregateTierInputs = useMemo(\n    () => [allTiersInput, recurringTiersInput, oneTimeTiersInput],\n    [allTiersInput, oneTimeTiersInput, recurringTiersInput],\n  )\n  const aggregateInputKeys = useMemo(() => aggregateTierInputs.map(tierInput => tierInput.key), [aggregateTierInputs])\n  const isAggregateInput = useMemo(() => {\n    if (selectedInputs.length !== 1) return false\n    const selectedInputKey = selectedInputs[0]?.key?.toString()\n    return !!selectedInputKey && aggregateInputKeys.includes(selectedInputKey)\n  }, [aggregateInputKeys, selectedInputs])\n  const items = useMemo(() => {\n    return [\n      ...aggregateTierInputs,\n      ...activeRecurringTiers,\n      ...activeOneTimeTiers,\n      ...retiredRecurringTiers,\n      ...retiredOneTimeTiers,\n    ]\n  }, [\n    aggregateTierInputs,\n    activeRecurringTiers,\n    activeOneTimeTiers,\n    retiredRecurringTiers,\n    retiredOneTimeTiers,\n  ]) as ItemInput[]\n\n  const filteredItems = useMemo(() => {\n    if (!filter) return items\n    const matchesFilter = (item: ItemInput) => (item.text || '').toLowerCase().includes(filter.toLocaleLowerCase())\n    const filtered = filter ? items.filter(matchesFilter) : items\n    if (filtered.length === 0) {\n      return [noMatchesItem]\n    } else {\n      return filtered\n    }\n  }, [filter, items, noMatchesItem])\n\n  // this design isn't great for wanting to handle our aggregate selections, the idea is that if folks make\n  // an aggregate selection, we clear all others. If they make a non-aggregate selection, we clear all aggregates.\n  const onSelectedChange = (selections: ItemInput[]) => {\n    // assume that if we have no selections, we want to select all tiers\n    if (selections.length === 0) {\n      setSelectedInputs([allTiersInput])\n      setSelectedTiers(allTierValues)\n      return\n    }\n\n    // when a selection is added, special case aggregate selections\n    if (selections.length > selectedInputs.length) {\n      const selectedInputKey = selections.find(x => !selectedInputs.includes(x))?.key?.toString()\n      if (selectedInputKey && aggregateInputKeys.includes(selectedInputKey)) {\n        switch (selectedInputKey) {\n          case allTiersInput.key:\n            setSelectedInputs([allTiersInput])\n            setSelectedTiers(allTierValues)\n            return\n          case recurringTiersInput.key:\n            setSelectedInputs([recurringTiersInput])\n            setSelectedTiers(recurringTierValues)\n            return\n          case oneTimeTiersInput.key:\n            setSelectedInputs([oneTimeTiersInput])\n            setSelectedTiers(oneTimeTierValues)\n            return\n        }\n      }\n    }\n\n    // otherwise, preserve changes while filtering out aggregate inputs\n    const nonAggregateSelections = selections.filter(\n      item => item.key && !aggregateInputKeys.includes(item.key.toString()),\n    )\n    setSelectedTiers(\n      nonAggregateSelections.map(\n        item =>\n          item.key &&\n          // @ts-expect-error bigint cannot index\n          tiers[item.key],\n      ) as Tier[],\n    )\n    setSelectedInputs(nonAggregateSelections)\n  }\n\n  const renderAnchor = <T extends React.HTMLAttributes<HTMLElement>>(props: T) => {\n    let text = ''\n    if (isAggregateInput) {\n      text = selectedInputs[0]?.text || 'Select recipients'\n    } else {\n      const recipientCount = getRecipientCount(selectedTiers)\n      text = `${selectedTiers.map(tier => tier.name).join('; ')} ${getTierTextSuffix(recipientCount)}`\n    }\n    return (\n      <Button trailingAction={TriangleDownIcon} {...props}>\n        {text}\n      </Button>\n    )\n  }\n\n  return (\n    <FormControl>\n      <FormControl.Label>Send email to</FormControl.Label>\n      <SelectPanel\n        title=\"Select recipients\"\n        items={filteredItems}\n        open={isOpen}\n        onOpenChange={(open: boolean) => setIsOpen(open)}\n        onFilterChange={setFilter}\n        selected={selectedInputs}\n        onSelectedChange={onSelectedChange}\n        renderAnchor={renderAnchor}\n        overlayProps={{width: 'medium'}}\n        showItemDividers\n      />\n      {selectedTiers.map(tier => (\n        <input\n          key={tier.id}\n          type=\"hidden\"\n          name=\"newsletter[tier_ids][]\"\n          value={tier.id}\n          {...testIdProps('newsletter-tier-input')}\n        />\n      ))}\n    </FormControl>\n  )\n}\n\ntry{ SponsorsNewsletters.displayName ||= 'SponsorsNewsletters' } catch {}\ntry{ ACTIVE_STATES.displayName ||= 'ACTIVE_STATES' } catch {}","import {registerReactPartial} from '@github-ui/react-core/register-partial'\nimport {SponsorsNewsletters} from './SponsorsNewsletters'\n\nregisterReactPartial('sponsors-newsletters', {\n  Component: SponsorsNewsletters,\n})\n","export interface TestIdProps {\n  /** Test ID to be queried by automated testing suites */\n  'data-testid'?: string\n}\n\nexport const testIdProps = (value: string): TestIdProps => {\n  return {'data-testid': value}\n}\n","import {useState} from 'react'\nimport type {BrowserHistory, MemoryHistory} from '@remix-run/router'\nimport {Router} from 'react-router-dom'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\ntype Props = {\n  children: React.ReactNode\n  history: BrowserHistory | MemoryHistory\n}\n\nexport function PartialRouter({children, history}: Props) {\n  const [state, setState] = useState({\n    location: history.location,\n  })\n\n  useHydratedEffect(() => history.listen(setState), [history])\n\n  return (\n    <Router location={state.location} navigator={history}>\n      {children}\n    </Router>\n  )\n}\n\ntry{ PartialRouter.displayName ||= 'PartialRouter' } catch {}","// Think of this as the entry point into the framework\nimport React from 'react'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {BaseProviders} from './BaseProviders'\nimport type {BrowserHistory} from '@remix-run/router'\nimport {createMemoryHistory} from '@remix-run/router'\nimport {AppContextProvider} from './AppContextProvider'\nimport {PartialRouter} from './PartialRouter'\nimport {CommonElements} from './CommonElements'\nimport {createBrowserHistory} from './create-browser-history'\nimport type {ReactPartialAnchorElement} from '@github-ui/react-partial-anchor-element'\nimport {usePartialAnchorProps} from './react-partial-anchor'\n\ninterface Props {\n  partialName: string\n  embeddedData: EmbeddedPartialData\n  Component: React.ComponentType\n  wasServerRendered: boolean\n  ssrError?: HTMLScriptElement\n  anchorElement?: ReactPartialAnchorElement | null\n}\n\nexport function PartialEntry({\n  partialName,\n  embeddedData,\n  Component,\n  wasServerRendered,\n  ssrError,\n  anchorElement,\n}: Props) {\n  // Create a ref to track the browser history:\n  const historyRef = React.useRef<BrowserHistory>()\n  const window = globalThis.window as Window | undefined\n\n  // For linking to work, we can just pass a dummy pathname here. We may consider plumbing the actual path in\n  if (!historyRef.current) {\n    historyRef.current = !window\n      ? createMemoryHistory({initialEntries: [{pathname: '/'}]})\n      : createBrowserHistory({window})\n  }\n  const history = historyRef.current\n  const partialAnchorProps = usePartialAnchorProps(anchorElement)\n\n  // Wrap the partial in an AppContextProvider and static Router so that react-core links\n  // will be functional.\n  return (\n    <BaseProviders appName={partialName} wasServerRendered={wasServerRendered}>\n      <AppContextProvider history={history} routes={[]}>\n        <PartialRouter history={history}>\n          <Component {...embeddedData.props} {...(partialAnchorProps as object)} />\n          <CommonElements ssrError={ssrError} />\n        </PartialRouter>\n      </AppContextProvider>\n    </BaseProviders>\n  )\n}\n\ntry{ PartialEntry.displayName ||= 'PartialEntry' } catch {}","import {target} from '@github/catalyst'\nimport {createRoot, hydrateRoot} from 'react-dom/client'\nimport type {createRoot as createRootType, hydrateRoot as hydrateRootType, Root} from 'react-dom/client'\nimport React from 'react'\nimport ReactProfilingMode from '@github-ui/react-profiling-mode'\nimport {EXPECTED_ERRORS} from './expected-errors'\nimport {sendStats} from '@github-ui/stats'\n\ntype ReactDOM = {\n  createRoot: typeof createRootType\n  hydrateRoot: typeof hydrateRootType\n}\n\nconst REACT_INVARIANT_ERROR_REGEX = /Minified React error #(?<invariant>\\d+)/\n\nexport abstract class ReactBaseElement<T> extends HTMLElement {\n  @target embeddedData: HTMLScriptElement | undefined\n  @target ssrError: HTMLScriptElement | undefined\n  @target reactRoot: HTMLElement | undefined\n  private root: Root | undefined\n\n  abstract nameAttribute: string\n  abstract getReactNode(embeddedData: T): Promise<React.ReactNode>\n\n  protected get name() {\n    return this.getAttribute(this.nameAttribute) as string\n  }\n\n  private get embeddedDataText() {\n    const text = this.embeddedData?.textContent\n\n    if (!text) {\n      throw new Error(`No embedded data provided for react element ${this.name}`)\n    }\n\n    return text\n  }\n\n  get hasSSRContent() {\n    return this.getAttribute('data-ssr') === 'true'\n  }\n\n  connectedCallback() {\n    this.renderReact()\n  }\n\n  disconnectedCallback() {\n    this.root?.unmount()\n    this.root = undefined\n  }\n\n  private async renderReact() {\n    if (!this.reactRoot) throw new Error('No react root provided')\n    let reactDom: ReactDOM = {\n      createRoot,\n      hydrateRoot,\n    }\n\n    // Override the react-dom import if we're in profiling mode\n    if (ReactProfilingMode.isEnabled()) {\n      reactDom = await this.getReactDomWithProfiling()\n    }\n\n    const embeddedData = JSON.parse(this.embeddedDataText) as T\n    const ssrErrorText = this.ssrError?.textContent\n    const node = await this.getReactNode(embeddedData)\n    const baseNode = <React.StrictMode>{node}</React.StrictMode>\n\n    if (ssrErrorText) {\n      this.logSSRError(ssrErrorText)\n    }\n\n    if (this.hasSSRContent) {\n      /**\n       * Styled-components automatically looks for style tags to hydrate on first page load, but will not detect them\n       * if they are added after the initial page load. This causes a hydration error because React isn't expecting\n       * a style tag within the app. To work around this, we need to manually move the style tags to the head before\n       * hydrating the app.\n       *\n       * During hydration, styled-components will create a new style tag which matches the one we moved to the head.\n       * This means that after hydration, we can safely remove the style tag we manually moved to the head.\n       */\n      const styles = this.querySelector('style[data-styled=\"true\"]')\n      if (styles) document.head.appendChild(styles)\n\n      // Hydrate the react app\n      // onRecoverableError is disabled until we have a react version with this fix in:\n      // https://github.com/facebook/react/pull/25692\n      this.root = reactDom.hydrateRoot(this.reactRoot, baseNode, {\n        onRecoverableError: error => {\n          if (!(error instanceof Error)) return\n\n          const match = REACT_INVARIANT_ERROR_REGEX.exec(error.message)\n          const invariant = String(match?.groups?.invariant)\n\n          sendStats({\n            incrementKey: 'REACT_HYDRATION_ERROR',\n            incrementTags: {\n              appName: this.name,\n              invariant,\n            },\n          })\n        },\n      })\n\n      // Remove the manually moved style tag after hydration\n      if (styles) {\n        // Wait until things are idle to remove the style tag. If we do it immediately, we can cause a flash of unstyled content.\n        requestIdleCallback(() => {\n          // styles could have already been removed by Turbo if a navigation happens quickly. Only remove it from the DOM if it's still there.\n          styles.parentElement?.removeChild(styles)\n        })\n      }\n    } else {\n      this.root = reactDom.createRoot(this.reactRoot)\n      this.root.render(baseNode)\n    }\n\n    this.classList.add('loaded')\n  }\n\n  private getReactDomWithProfiling() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return import('react-dom/profiling') as any as Promise<ReactDOM>\n  }\n\n  private logSSRError(ssrErrorText: string) {\n    if (EXPECTED_ERRORS[ssrErrorText]) {\n      // eslint-disable-next-line no-console\n      return console.error('SSR failed with an expected error:', EXPECTED_ERRORS[ssrErrorText])\n    }\n\n    try {\n      const error = JSON.parse(ssrErrorText) as PlatformJavascriptError\n      const stacktrace = parseFailbotStacktrace(error)\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', `${error.type}: ${error.value}\\n`, error, stacktrace)\n    } catch {\n      /**\n       * In the event we couldn't log the error, we should not break the application\n       */\n      // eslint-disable-next-line no-console\n      console.error('Error During Alloy SSR:', ssrErrorText, 'unable to parse as json')\n    }\n  }\n}\n\nfunction parseFailbotStacktrace(error: PlatformJavascriptError) {\n  if (!error.stacktrace) return ''\n  let prefix = '\\n '\n  const stack = error.stacktrace.map((frame: PlatformStackframe) => {\n    const {function: func, filename, lineno, colno} = frame\n    const line = `${prefix} at ${func} (${filename}:${lineno}:${colno})`\n    prefix = ' '\n    return line\n  })\n  return stack.join('\\n')\n}\n\ntry{ REACT_INVARIANT_ERROR_REGEX.displayName ||= 'REACT_INVARIANT_ERROR_REGEX' } catch {}"],"names":["DeferredRegistry","register","name","registration","entry","registrationEntries","resolve","promise","Promise","getRegistration","Deferred","constructor","usePartialAnchorProps","anchorElement","useEffect","anchor","disabled","classList","remove","reactPartialAnchor","__wrapperElement","useExternalAnchor","ref","useRef","open","setOpen","useState","onClick","useCallback","current","setAttribute","toString","useOnAnchorClick","element","addEventListener","removeEventListener","partialRegistry","ReactPartialElement","ReactBaseElement","getReactNode","embeddedData","appName","Component","closest","PartialEntry","partialName","wasServerRendered","hasSSRContent","ssrError","nameAttribute","registerReactPartial","controller","getItem","setItem","removeItem","safeStorage","REACT_PROFILING_ENABLED","enable","disable","isEnabled","ACTIVE_STATES","SponsorsNewsletters","tiers","useMemo","RETIRED_STATE","RECURRING_FREQUENCY","ONE_TIME_FREQUENCY","getRecipientCount","tierValues","map","tier","subscriptionCount","reduce","acc","count","allTierValues","Object","values","oneTimeTierValues","filter","frequency","recurringTierValues","getTierTextSuffix","getTierText","prefix","state","allTiersInput","recipientCount","key","text","showDivider","selectedInputs","setSelectedInputs","selectedTiers","setSelectedTiers","isOpen","setIsOpen","setFilter","noMatchesItem","leadingVisual","CircleSlashIcon","selected","undefined","id","recurringTiersInput","oneTimeTiersInput","getTierInputs","tierFilter","sort","a","b","monthlyPriceInCents","index","activeRecurringTiers","includes","activeOneTimeTiers","retiredRecurringTiers","retiredOneTimeTiers","aggregateTierInputs","aggregateInputKeys","tierInput","isAggregateInput","length","selectedInputKey","items","filteredItems","filtered","item","toLowerCase","toLocaleLowerCase","FormControl","Label","SelectPanel","title","onOpenChange","onFilterChange","onSelectedChange","selections","find","x","nonAggregateSelections","renderAnchor","join","Button","trailingAction","TriangleDownIcon","props","overlayProps","width","showItemDividers","input","type","value","testIdProps","displayName","PartialRouter","children","history","setState","location","useHydratedEffect","listen","Router","navigator","historyRef","React","window","globalThis","createBrowserHistory","createMemoryHistory","initialEntries","pathname","partialAnchorProps","BaseProviders","AppContextProvider","routes","CommonElements","REACT_INVARIANT_ERROR_REGEX","HTMLElement","getAttribute","embeddedDataText","textContent","connectedCallback","renderReact","disconnectedCallback","root","unmount","reactRoot","reactDom","createRoot","hydrateRoot","ReactProfilingMode","getReactDomWithProfiling","JSON","parse","ssrErrorText","node","baseNode","logSSRError","styles","querySelector","document","head","appendChild","onRecoverableError","error","Error","match","exec","message","invariant","String","groups","sendStats","incrementKey","incrementTags","requestIdleCallback","parentElement","removeChild","render","add","EXPECTED_ERRORS","console","stacktrace","parseFailbotStacktrace","stack","function","func","filename","lineno","colno","frame","line","target"],"sourceRoot":""}