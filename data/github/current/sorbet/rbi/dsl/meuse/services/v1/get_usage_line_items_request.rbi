# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Meuse::Services::V1::GetUsageLineItemsRequest`.
# Please instead update this file by running `bin/tapioca dsl Meuse::Services::V1::GetUsageLineItemsRequest`.

class Meuse::Services::V1::GetUsageLineItemsRequest
  sig do
    params(
      billable_owner_id: T.nilable(Integer),
      billable_owner_type: T.nilable(T.any(Symbol, Integer)),
      cursor_id: T.nilable(Integer),
      cursor_usage_at: T.nilable(Google::Protobuf::Timestamp),
      custom_fields: T.nilable(T.any(Google::Protobuf::Map[String, Meuse::Services::V1::GetUsageLineItemsRequest::CustomFieldValues], T::Hash[String, Meuse::Services::V1::GetUsageLineItemsRequest::CustomFieldValues])),
      owner_id: T.nilable(Integer),
      owner_type: T.nilable(T.any(Symbol, Integer)),
      page: T.nilable(Integer),
      per_page: T.nilable(Integer),
      product_id: T.nilable(Integer),
      product_name: T.nilable(String),
      submission_state: T.nilable(String),
      submission_state_reason: T.nilable(String),
      usage_ends_at: T.nilable(Google::Protobuf::Timestamp),
      usage_starts_at: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(billable_owner_id: nil, billable_owner_type: nil, cursor_id: nil, cursor_usage_at: nil, custom_fields: T.unsafe(nil), owner_id: nil, owner_type: nil, page: nil, per_page: nil, product_id: nil, product_name: nil, submission_state: nil, submission_state_reason: nil, usage_ends_at: nil, usage_starts_at: nil); end

  sig { returns(Integer) }
  def billable_owner_id; end

  sig { params(value: Integer).void }
  def billable_owner_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def billable_owner_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def billable_owner_type=(value); end

  sig { void }
  def clear_billable_owner_id; end

  sig { void }
  def clear_billable_owner_type; end

  sig { void }
  def clear_cursor_id; end

  sig { void }
  def clear_cursor_usage_at; end

  sig { void }
  def clear_custom_fields; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_owner_type; end

  sig { void }
  def clear_page; end

  sig { void }
  def clear_per_page; end

  sig { void }
  def clear_product_id; end

  sig { void }
  def clear_product_name; end

  sig { void }
  def clear_submission_state; end

  sig { void }
  def clear_submission_state_reason; end

  sig { void }
  def clear_usage_ends_at; end

  sig { void }
  def clear_usage_starts_at; end

  sig { returns(Integer) }
  def cursor_id; end

  sig { params(value: Integer).void }
  def cursor_id=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def cursor_usage_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def cursor_usage_at=(value); end

  sig { returns(Google::Protobuf::Map[String, Meuse::Services::V1::GetUsageLineItemsRequest::CustomFieldValues]) }
  def custom_fields; end

  sig do
    params(
      value: Google::Protobuf::Map[String, Meuse::Services::V1::GetUsageLineItemsRequest::CustomFieldValues]
    ).void
  end
  def custom_fields=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def owner_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def owner_type=(value); end

  sig { returns(Integer) }
  def page; end

  sig { params(value: Integer).void }
  def page=(value); end

  sig { returns(Integer) }
  def per_page; end

  sig { params(value: Integer).void }
  def per_page=(value); end

  sig { returns(Integer) }
  def product_id; end

  sig { params(value: Integer).void }
  def product_id=(value); end

  sig { returns(String) }
  def product_name; end

  sig { params(value: String).void }
  def product_name=(value); end

  sig { returns(String) }
  def submission_state; end

  sig { params(value: String).void }
  def submission_state=(value); end

  sig { returns(String) }
  def submission_state_reason; end

  sig { params(value: String).void }
  def submission_state_reason=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def usage_ends_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def usage_ends_at=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def usage_starts_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def usage_starts_at=(value); end
end
