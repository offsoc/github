<%# erblint:counter DeprecatedComponentsCounter 1 %>
<hr class="bleed-flush">

<div class="<%= class_names("form-group", "errored" => has_errors?) %>">
  <div class="form-group-header">
    <label for="country">Country or region of residence</label>
  </div>
  <div class="form-group-body" <%= test_selector(stripe_account ? "stripe-country" : "country-residence-form") %>>
    <% if stripe_account %>
      <% if listing.stripe_country_flag_emoji_alias %>
        <%= emoji_tag(Emoji.find_by_alias(listing.stripe_country_flag_emoji_alias), class: "emoji emoji-icon") %>
      <% end %>
      <span class="text-bold" <%= test_selector("stripe-country-name") %>>
        <% if stripe_country.present? %>
          <%= listing.stripe_country_name %> (<%= stripe_country %>)
        <% else %>
          Not specified
        <% end %>
      </span>
      <% unless hide_stripe_link? %>
        &mdash;
        <a
          href="<%= sponsorable_stripe_account_path(sponsorable, stripe_account) %>"
          target="_blank"
          rel="noopener noreferrer"
        >Edit in Stripe Connect account settings <%= primer_octicon(icon: "link-external") %></a>
      <% end %>
    <% else %>
      <%= form_tag sponsorable_country_of_residence_path(sponsorable), method: :put, class: "d-flex flex-items-center" do %>
        <div class="input-group">
          <% if listing.country_of_residence_flag_emoji_alias %>
            <span class="input-group-button js-sponsors-country-flag" data-country-code="<%= country_of_residence %>">
              <%= emoji_tag(Emoji.find_by_alias(listing.country_of_residence_flag_emoji_alias),
                class: "emoji emoji-icon mr-1") %>
            </span>
          <% end %>
          <%= select_tag(:country_of_residence,
            options_for_select(country_of_residence_options, country_of_residence),
            id: "country",
            name: "country_of_residence",
            class: "form-select js-sponsors-country-select",
            required: true,
            "aria-describedby": "country-description",
            prompt: "Select a country or region",
          ) %>
        </div>
        <% if return_to.present? %>
          <input type="hidden" name="return_to" value="<%= return_to %>" <%= test_selector "country-residence-return-to" %>>
        <% end %>
        <%= render Primer::ButtonComponent.new(
          type: :submit,
          ml: 1,
          "data-disable-invalid": true,
        ).with_content("Save") %>
      <% end %>
    <% end %>
    <p class="<%= class_names("note", "error" => has_errors?) %>" id="country-description">
      <%= primer_octicon(:alert, mr: 1, color: :danger) if has_errors? %>
      This is required for tax purposes.
    </p>
  </div>
</div>
