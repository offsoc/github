{"version":3,"file":"two-factor-setup-xxxxxxxxxxxx.js","mappings":"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","sources":["app/assets/modules/github/single-page-wizard/step-content-base.ts","app/assets/modules/github/two-factor/setup/verification.ts","app/assets/modules/github/two-factor/setup/recovery-codes.ts","app/assets/modules/github/two-factor/setup/switch-selection.ts","app/assets/modules/github/two-factor/setup/add-methods.ts","app/assets/modules/github/two-factor/configure-otp-factor.ts","ui/packages/aria-live/aria-live.ts","ui/packages/client-env/client-env.ts","ui/packages/feature-flags/feature-flags.ts","ui/packages/ssr-utils/ssr-globals.ts","ui/packages/ssr-utils/ssr.ts"],"sourcesContent":["import type {StepChangeResult, WizardState} from './wizard'\n\n/**\n * SinglePageWizardStepContentBase is a base class used to implement a custom step catalyst component.\n */\nexport class SinglePageWizardStepContentBase extends HTMLElement {\n  autoProceedInProgress = false\n\n  connectedCallback() {\n    this.setAttribute('data-target', 'single-page-wizard-step.stepContent')\n  }\n\n  validateStep(isValid: boolean, autoProceed?: boolean): void {\n    // prevent multiple auto-proceed events from being triggered\n    if (this.autoProceedInProgress) {\n      return\n    }\n\n    if (autoProceed && isValid) {\n      this.autoProceedInProgress = true\n    }\n\n    this.dispatchEvent(\n      new CustomEvent('single-page-wizard-step-validate', {bubbles: true, detail: {isValid, autoProceed}}),\n    )\n  }\n\n  setError(errorMessage: string): void {\n    this.autoProceedInProgress = false\n    this.dispatchEvent(new CustomEvent('single-page-wizard-step-error', {bubbles: true, detail: {errorMessage}}))\n  }\n\n  clearError(): void {\n    this.dispatchEvent(new CustomEvent('single-page-wizard-step-error', {bubbles: true}))\n  }\n\n  /* eslint-disable-next-line custom-elements/no-method-prefixed-with-on */\n  async onStepRendered() {\n    return\n  }\n\n  // setStepState called from the wizard on each step to provide a reference to updated state\n  setStepState(_wizardState: WizardState) {\n    return\n  }\n\n  // onNextClick is fired off when the \"next\" button is clicked\n  // if \"true\" is returned, the wizard will move onto the next step\n  /* eslint-disable-next-line custom-elements/no-method-prefixed-with-on */\n  async onNextClick(): Promise<StepChangeResult<WizardState>> {\n    return {proceed: true}\n  }\n\n  // onPreviousClick is fired off when the \"previous\" button is clicked\n  // if \"true\" is returned, the wizard will move back to the previous step\n  /* eslint-disable-next-line custom-elements/no-method-prefixed-with-on */\n  async onPreviousClick(): Promise<StepChangeResult<WizardState>> {\n    return {proceed: true}\n  }\n\n  // isStepValid returns a boolean to determine whether the step is\n  // in a \"valid\" state for moving onto the next step.\n  isStepValid(): boolean {\n    return true\n  }\n}\n","import {attr, controller, target} from '@github/catalyst'\nimport {SinglePageWizardStepContentBase} from '../../single-page-wizard/step-content-base'\nimport type {StepChangeResult} from '../../single-page-wizard/wizard'\nimport type {TwoFactorWizardState} from './wizard-state'\nimport {debounce} from '@github/mini-throttle/decorators'\n\ntype InitiateResponse = {\n  formatted_recovery_codes: string[]\n  mashed_secret?: string\n  qr_code_img_data?: string\n  dev_otp?: string\n}\n\n@controller\nexport class TwoFactorSetupVerificationElement extends SinglePageWizardStepContentBase {\n  @target appForm: HTMLFormElement\n  @target smsForm: HTMLFormElement\n  @target smsElem: HTMLElement\n  @target appElem: HTMLElement\n  @target countryCodeSelect: HTMLSelectElement\n  @target smsPhoneInput: HTMLInputElement\n  @target appOtpInput: HTMLInputElement\n  @target smsOtpInput: HTMLInputElement\n  @target qrCodeImg: HTMLImageElement\n  @target mashedSecret: HTMLElement\n  @target smsDefaultError: HTMLElement\n  @target smsErrorContainer: HTMLElement\n  @target buttonSendSms: HTMLButtonElement\n  @target smsSendStatusError: HTMLElement\n  @target smsSendStatusInProgress: HTMLElement\n  @target smsSendStatusSuccess: HTMLElement\n  @target smsCodeForm: HTMLElement\n  @target switchForm: HTMLFormElement\n  @target appScanTextA: HTMLElement\n  @target appScanTextB: HTMLElement\n  @target spinner: HTMLElement\n  @attr errorMessage: string\n  wizardState: TwoFactorWizardState\n  loaded = false\n  rendered = false\n  showAppWarning = false\n\n  #eventAbortController: AbortController | null = null\n\n  override connectedCallback() {\n    // can't call super() here so matching the SinglePageWizardStepContentBase behavior that we overrode\n    this.setAttribute('data-target', 'single-page-wizard-step.stepContent')\n    this.initiateTwoFactorSetup('app')\n    // setup event listeners\n    const {signal} = (this.#eventAbortController = new AbortController())\n    this.addEventListener('switch-selection', this.initiateTwoFactorSwitch, {signal})\n  }\n\n  disconnectedCallback() {\n    this.#eventAbortController?.abort()\n  }\n\n  override async setStepState(wizardState: TwoFactorWizardState) {\n    this.wizardState = wizardState\n    if (!this.loaded) {\n      // without this check, we'd end up showing the SMS form for a split second\n      // before wizardState.type is set by the connectedCallback()\n      return\n    }\n    if (this.isAppMode()) {\n      this.handleAppModeWarning()\n      this.renderQRCodeImg(this.wizardState.qr_code_img_data)\n      this.appOtpInput.value = this.wizardState.dev_otp || ''\n      this.mashedSecret.textContent = this.wizardState.mashed_secret!\n      this.smsElem.hidden = true\n      this.appElem.hidden = false\n    } else {\n      this.appElem.hidden = true\n      this.smsElem.hidden = false\n    }\n\n    if (this.rendered) {\n      await this.focus()\n      const focusElems = document.getElementsByClassName('js-focus')\n      if (focusElems && focusElems.length > 0) {\n        const firstFocusElem = focusElems[0] as HTMLElement\n        if (firstFocusElem) {\n          firstFocusElem.focus()\n        }\n      }\n    }\n\n    const switchSelectionElem = document.getElementById('two-factor-switch-selection') as HTMLElement\n    if (switchSelectionElem != null) {\n      switchSelectionElem.dispatchEvent(new CustomEvent('init-done', {detail: this.wizardState.type}))\n    }\n  }\n\n  override async onStepRendered() {\n    this.rendered = true\n    this.focus()\n  }\n\n  override async focus() {\n    if (this.isAppMode()) {\n      this.appOtpInput.focus()\n    } else {\n      this.smsPhoneInput.focus()\n    }\n  }\n\n  renderQRCodeImg(qr_code_img_data: string) {\n    this.qrCodeImg.src = qr_code_img_data\n    this.spinner.setAttribute('style', 'display: none')\n    this.qrCodeImg.hidden = false\n  }\n\n  isAppMode(): boolean {\n    return this.wizardState.type === 'app'\n  }\n\n  handleAppModeWarning() {\n    if (this.rendered && this.showAppWarning) {\n      this.appScanTextA.hidden = true\n      this.appScanTextB.hidden = false\n    } else {\n      // shows app scan warning on *next* app render\n      this.showAppWarning = true\n    }\n  }\n\n  override async onNextClick(): Promise<StepChangeResult<TwoFactorWizardState>> {\n    this.clearError()\n    const form = this.isAppMode() ? this.appForm : this.smsForm\n    const csrfInput = form.querySelector('.js-data-url-csrf') as HTMLInputElement\n    const formData = new FormData()\n    const otp = this.isAppMode() ? this.appOtpInput.value : this.smsOtpInput.value\n    formData.append('type', this.wizardState.type!)\n    formData.append('otp', otp.trim())\n\n    try {\n      const response = await fetch(form.action, {\n        mode: 'same-origin',\n        method: 'POST',\n        body: formData,\n        headers: {\n          Accept: 'application/json',\n          'Scoped-CSRF-Token': csrfInput.value,\n          'X-Requested-With': 'XMLHttpRequest',\n        },\n      })\n      if (!response.ok) {\n        // if it's a 429, we can use a hardcoded message here\n        // the response _might_ not be JSON (e.g. secondary rate limits) so it's best to short circuit here rather then attempting to parse\n        if (response.status === 429) {\n          // eslint-disable-next-line i18n-text/no-en\n          this.setError('Too many incorrect OTP attempts. Please try again later.')\n          return {proceed: false}\n        }\n\n        // try to parse out a json error message otherwise fallback to a generic failure message\n        // if the response isn't JSON, this will throw but be caught below with a generic failure message as well\n        const jsonResponse = await response.json()\n        if (jsonResponse['error']) {\n          this.setError(jsonResponse['error'])\n        } else {\n          this.setError('Two-factor code verification failed. Please try again.')\n        }\n        return {proceed: false}\n      }\n    } catch (e) {\n      this.setError('Two-factor code verification failed. Please try again.')\n      return {proceed: false}\n    }\n\n    const switchSelectionElem = document.getElementById('two-factor-switch-selection') as HTMLElement\n    if (switchSelectionElem != null) {\n      switchSelectionElem.dispatchEvent(new CustomEvent('verify-done'))\n    }\n\n    return {wizardState: this.wizardState, proceed: true}\n  }\n\n  @debounce(50)\n  otpChange() {\n    this.validateStep(this.isStepValid(), true)\n  }\n\n  formSubmit(e: Event) {\n    e.preventDefault()\n    this.otpChange()\n  }\n\n  smsPhoneInputChange() {\n    this.buttonSendSms.disabled = this.smsPhoneInput.value.trim().length === 0\n  }\n\n  setSmsControlState(inProgress: boolean, isSuccess: boolean, message?: string) {\n    this.buttonSendSms.disabled = inProgress || isSuccess\n    const isError = !inProgress && !isSuccess\n    const showDefaultError = isError && !message\n    const showServerError = isError && !!message\n\n    if (showServerError) {\n      this.smsErrorContainer.querySelector('.Banner-title')!.innerHTML = message!\n      setTimeout(() => this.smsErrorContainer.focus(), 0)\n    }\n    if (showDefaultError) {\n      setTimeout(() => this.smsDefaultError.focus(), 0)\n    }\n\n    this.smsSendStatusError.hidden = !isError\n    this.smsSendStatusSuccess.hidden = inProgress || !isSuccess\n    this.smsSendStatusInProgress.hidden = !inProgress\n    this.smsDefaultError.hidden = !showDefaultError\n    this.smsErrorContainer.hidden = !showServerError\n    this.smsOtpInput.disabled = inProgress || isError\n\n    if (isSuccess) {\n      this.smsCodeForm.hidden = false\n      this.smsOtpInput.focus()\n    }\n  }\n\n  async buttonSendSmsClick() {\n    this.setSmsControlState(true, false)\n    this.smsOtpInput.value = ''\n    this.smsOtpInput.disabled = true\n    this.validateStep(false)\n\n    const sendSmsUrl = this.buttonSendSms.getAttribute('data-url')!\n    const csrfInput = this.smsForm.querySelector('.js-data-url-csrf-send') as HTMLInputElement\n    const number = `${this.countryCodeSelect.value} ${this.smsPhoneInput.value}`\n    const formData = new FormData()\n    formData.append('number', number)\n\n    const octocaptchaToken = this.smsForm.querySelector('.js-octocaptcha-token') as HTMLInputElement\n    if (octocaptchaToken && octocaptchaToken.value) {\n      formData.append('octocaptcha-token', octocaptchaToken.value)\n    }\n\n    const response = await fetch(sendSmsUrl, {\n      mode: 'same-origin',\n      method: 'POST',\n      body: formData,\n      headers: {\n        Accept: 'application/json',\n        'Scoped-CSRF-Token': csrfInput.value,\n        'X-Requested-With': 'XMLHttpRequest',\n      },\n    })\n\n    if (!response.ok) {\n      const jsonResponse = await response.json()\n      this.setSmsControlState(false, false, jsonResponse['error'])\n      return\n    }\n    this.smsPhoneInput.disabled = true\n\n    this.setSmsControlState(false, true)\n    if (this.wizardState.dev_otp) {\n      this.smsOtpInput.value = this.wizardState.dev_otp\n      this.smsOtpInput.disabled = false\n      this.validateStep(this.isStepValid(), false)\n      return\n    }\n  }\n\n  override isStepValid(): boolean {\n    const elem = this.isAppMode() ? this.appOtpInput : this.smsOtpInput\n    return new RegExp(`^([0-9]{6})$`).test(elem.value)\n  }\n\n  updateHeaders(type: 'app' | 'sms') {\n    const authVerificationStepElem = document.getElementById('wizard-step-factor') as HTMLElement\n    const titles = authVerificationStepElem.getElementsByClassName('wizard-step-title')\n    const header = titles[0] as HTMLHeadingElement\n    const content = titles[1] as HTMLHeadingElement\n\n    switch (type) {\n      case 'sms':\n        // eslint-disable-next-line i18n-text/no-en\n        header.textContent = content.textContent = 'Setup SMS authentication'\n        break\n      case 'app':\n        // eslint-disable-next-line i18n-text/no-en\n        header.textContent = content.textContent = 'Setup authenticator app'\n        break\n    }\n  }\n\n  // logic for switching the current factor for verification\n  // see two-factor-setup/switch-selection.ts for related code\n  async initiateTwoFactorSwitch(event: Event) {\n    const type = (event as CustomEvent).detail\n    await this.initiateTwoFactorSetup(type)\n  }\n\n  async initiateTwoFactorSetup(type: 'app' | 'sms') {\n    const csrfInput = this.switchForm.querySelector('.js-data-url-csrf') as HTMLInputElement\n\n    const formData = new FormData()\n    formData.append('type', type)\n\n    const response = await fetch(this.switchForm.action, {\n      mode: 'same-origin',\n      method: 'POST',\n      body: formData,\n      headers: {\n        Accept: 'application/json',\n        'Scoped-CSRF-Token': csrfInput.value,\n        'X-Requested-With': 'XMLHttpRequest',\n      },\n    })\n\n    if (!response.ok) {\n      this.setError(this.errorMessage)\n      return {proceed: false}\n    }\n\n    if (this.rendered) {\n      this.updateHeaders(type)\n    }\n\n    const jsonResponse = (await response.json()) as InitiateResponse\n    const newWizardState: TwoFactorWizardState = {\n      ...this.wizardState,\n      type,\n      formatted_recovery_codes: jsonResponse.formatted_recovery_codes,\n      mashed_secret: jsonResponse.mashed_secret,\n      qr_code_img_data: jsonResponse.qr_code_img_data || '',\n      dev_otp: jsonResponse.dev_otp,\n    }\n    this.loaded = true\n    this.setStepState(newWizardState)\n  }\n}\n","import {attr, controller, target} from '@github/catalyst'\nimport {SinglePageWizardStepContentBase} from '../../single-page-wizard/step-content-base'\nimport type {StepChangeResult} from '../../single-page-wizard/wizard'\nimport type {TwoFactorWizardState} from './wizard-state'\n\n@controller\nclass TwoFactorSetupRecoveryCodesElement extends SinglePageWizardStepContentBase {\n  @attr errorMessage: string\n  @target codes: HTMLElement\n  @target form: HTMLFormElement\n  @target downloadCodesForm: HTMLFormElement\n  wizardState: TwoFactorWizardState\n\n  override async setStepState(wizardState: TwoFactorWizardState) {\n    this.wizardState = wizardState\n\n    this.codes.textContent = ''\n    if (this.wizardState.formatted_recovery_codes) {\n      for (const code of this.wizardState.formatted_recovery_codes) {\n        const li = document.createElement('li')\n        li.textContent = code\n        li.className = 'two-factor-recovery-code'\n        this.codes.appendChild(li)\n      }\n    }\n  }\n\n  override async onNextClick(): Promise<StepChangeResult<TwoFactorWizardState>> {\n    const csrfInput = this.form.querySelector('.js-data-url-csrf') as HTMLInputElement\n    const formData = new FormData()\n    formData.append('type', this.wizardState.type!)\n\n    this.clearError()\n    const response = await fetch(this.form.action, {\n      mode: 'same-origin',\n      method: 'POST',\n      body: formData,\n      headers: {\n        Accept: 'application/json',\n        'Scoped-CSRF-Token': csrfInput.value,\n        'X-Requested-With': 'XMLHttpRequest',\n      },\n    })\n\n    if (!response.ok) {\n      const json = await response.json()\n      if (json.error) {\n        this.setError(json.error)\n      } else {\n        this.setError(this.errorMessage)\n      }\n      return {proceed: false}\n    }\n\n    const reconfigNotification = document.getElementById('two-factor-reconfigure-notification')\n    if (reconfigNotification) {\n      const dismissButton = reconfigNotification.querySelector('.js-flash-close')\n      if (dismissButton) {\n        ;(dismissButton as HTMLButtonElement).click()\n      }\n    }\n\n    return {proceed: true}\n  }\n\n  async onDownloadClick() {\n    // put an element on the page that single-page-wizard/wizard.ts checks for\n    // before applying the onbeforeunload \"are you sure\" dialog\n    // this element is automatically removed in the wizard.ts code\n    const ignoreWarningElem = document.createElement('div')\n    ignoreWarningElem.id = 'one-off-ignore-single-page-wizard-warning'\n    document.body.appendChild(ignoreWarningElem)\n    this.downloadCodesForm.submit()\n\n    this.validateStep(true)\n    return {proceed: true}\n  }\n\n  override isStepValid(): boolean {\n    return false\n  }\n}\n","import {controller, target} from '@github/catalyst'\n\n@controller\nexport class TwoFactorSetupSwitchSelectionElement extends HTMLElement {\n  @target box: HTMLElement\n  @target smsElem: HTMLElement\n  @target appElem: HTMLElement\n\n  #eventAbortController: AbortController | null = null\n\n  connectedCallback() {\n    // abort signal will be sent when the event listener needs to be cleaned up\n    const {signal} = (this.#eventAbortController = new AbortController())\n    // `verify-done` event is triggered by the two-factor-setup/verification controller\n    // afaik, this is nessesary for adjacent event listening (https://catalyst.rocks/guide/patterns/#registering-global-or-many-event-listeners)\n    this.addEventListener('verify-done', this.hide, {signal})\n    this.addEventListener('init-done', this.show, {signal})\n  }\n\n  disconnectedCallback() {\n    this.#eventAbortController?.abort()\n  }\n\n  hide() {\n    this.box.hidden = true\n  }\n\n  show(event: Event) {\n    const type = (event as CustomEvent).detail\n    this.box.hidden = false\n    if (type === 'sms') {\n      this.smsElem.hidden = true\n      this.appElem.hidden = false\n    } else {\n      this.appElem.hidden = true\n      this.smsElem.hidden = false\n    }\n  }\n\n  switchMethodApp() {\n    this.switchMethodEvent('app')\n  }\n\n  switchMethodSms() {\n    this.switchMethodEvent('sms')\n  }\n\n  switchMethodEvent(type: 'app' | 'sms') {\n    const verificationElem = document.getElementById('two-factor-setup-verification-step') as HTMLElement\n    if (verificationElem != null) {\n      verificationElem.dispatchEvent(new CustomEvent('switch-selection', {detail: type}))\n    }\n  }\n}\n","import {controller, target} from '@github/catalyst'\nimport {SinglePageWizardStepContentBase} from '../../single-page-wizard/step-content-base'\nimport type {TwoFactorWizardState} from './wizard-state'\n\n@controller\nexport class TwoFactorSetupAddMethodsElement extends SinglePageWizardStepContentBase {\n  @target showU2fRegButton: HTMLButtonElement\n  @target showU2fEnabledLabel: HTMLSpanElement\n  #u2FRegistrationObserver: MutationObserver\n\n  override connectedCallback() {\n    // stepContent attribute was not set in step-content-base.ts\n    this.setAttribute('data-target', 'single-page-wizard-step.stepContent')\n\n    const u2fRegistrations = <HTMLElement>document.querySelector('.js-u2f-registrations')\n    document.querySelector('#add-two-factor-u2f-registration')?.setAttribute('hidden', 'true')\n\n    // on initial load, if there are already security keys registered, show enabled label\n    if (u2fRegistrations.childElementCount > 0) {\n      this.showU2fEnabledLabel.removeAttribute('hidden')\n    }\n\n    // Create an observer to watch for security key registrations being added or removed\n    this.#u2FRegistrationObserver = new MutationObserver(mutations => {\n      for (const mutation of mutations) {\n        if (mutation.type === 'childList') {\n          if (mutation.addedNodes.length > 0) {\n            this.showU2fEnabledLabel.removeAttribute('hidden')\n          } else if (mutation.removedNodes.length > 0 && u2fRegistrations.childElementCount === 0) {\n            this.showU2fEnabledLabel.setAttribute('hidden', 'true')\n          }\n        }\n      }\n    })\n    this.#u2FRegistrationObserver.observe(u2fRegistrations, {childList: true})\n\n    this.showU2fRegButton.addEventListener('click', () => {\n      document.querySelector('#add-two-factor-u2f-registration')?.removeAttribute('hidden')\n      this.showU2fRegButton.setAttribute('hidden', 'true')\n    })\n  }\n\n  disconnectedCallback() {\n    this.#u2FRegistrationObserver.disconnect()\n  }\n\n  override async setStepState(wizardState: TwoFactorWizardState) {\n    const {type} = wizardState\n\n    // When the success banner is shown on the last step, we want to move focus to the banner\n    // to ensure screen readers read the banner message, and to manage focus because it's otherwise lost.\n    const wizardStepBanner = document.querySelector<HTMLElement>('.wizard-step-banner')\n    setTimeout(() => wizardStepBanner?.focus(), 0)\n\n    this.setBannerMessage(type)\n  }\n\n  setBannerMessage(type?: string) {\n    let factor_text = ''\n    switch (type) {\n      case 'app':\n        factor_text = 'your authenticator app'\n        break\n      case 'sms':\n        factor_text = 'SMS'\n        break\n      default:\n        factor_text = 'your authenticator app'\n        break\n    }\n\n    document.querySelector(\n      '.wizard-step-banner .Banner-title',\n      // eslint-disable-next-line i18n-text/no-en\n    )!.innerHTML = `You have enabled two-factor authentication using ${factor_text}.`\n  }\n}\n","import {announce} from '@github-ui/aria-live'\nimport {attr, controller, target} from '@github/catalyst'\nimport {debounce} from '@github/mini-throttle/decorators'\n\ntype VerifyResponse = {\n  success: boolean\n  error?: string\n}\n\n@controller\nexport class TwoFactorConfigureOtpFactorElement extends HTMLElement {\n  // app targets\n  @target appOtpInput: HTMLInputElement\n  @target appForm: HTMLFormElement\n\n  // sms targets\n  @target smsInitialLoad: HTMLElement\n  @target smsElem: HTMLElement\n  @target smsPhoneInput: HTMLInputElement\n  @target buttonSendSms: HTMLButtonElement\n  @target smsOtpInput: HTMLInputElement\n  @target countryCodeSelect: HTMLSelectElement\n  @target smsForm: HTMLFormElement\n  @target smsCodeForm: HTMLFormElement\n  @target smsSendStatusSuccess: HTMLElement\n  @target smsSendStatusInProgress: HTMLElement\n  @target smsErrorContainer: HTMLElement\n  @target smsDefaultError: HTMLElement\n  @target smsSendStatusError: HTMLElement\n\n  // common targets\n  @target otpVerifySuccess: HTMLElement\n  @target verifyError: HTMLElement\n  @target saveButton: HTMLFormElement\n  @target showButtons: HTMLElement\n  @attr factorType = 'app'\n\n  connectedCallback() {\n    this.showSMS()\n    this.showButtons.hidden = false\n  }\n\n  configuringApp(): boolean {\n    return this.factorType === 'app'\n  }\n\n  showSMS() {\n    if (!this.configuringApp()) {\n      this.smsElem.hidden = false\n    }\n  }\n\n  smsPhoneInputChange() {\n    this.buttonSendSms.disabled = !this.smsPhoneInput.value\n  }\n\n  // method was taken from verification, we should look into putting this into a helper file\n  setSmsControlState(inProgress: boolean, isSuccess: boolean, message?: string) {\n    this.buttonSendSms.disabled = inProgress || isSuccess\n    const isError = !inProgress && !isSuccess\n    const showDefaultError = isError && !message\n    const showServerError = isError && !!message\n\n    if (showServerError) {\n      this.smsErrorContainer.querySelector('.Banner-title')!.innerHTML = message!\n      setTimeout(() => this.smsErrorContainer.focus(), 0)\n    }\n    if (showDefaultError) {\n      setTimeout(() => this.smsDefaultError.focus(), 0)\n    }\n\n    this.smsSendStatusError.hidden = !isError\n    this.smsSendStatusSuccess.hidden = inProgress || !isSuccess\n    this.smsSendStatusInProgress.hidden = !inProgress\n    this.smsDefaultError.hidden = !showDefaultError\n    this.smsErrorContainer.hidden = !showServerError\n    this.smsOtpInput.disabled = inProgress || isError\n\n    if (isSuccess) {\n      this.smsCodeForm.hidden = false\n      this.smsOtpInput.focus()\n    }\n  }\n\n  async buttonSendSmsClick() {\n    if (this.buttonSendSms.hasAttribute('data-sudo-required')) {\n      // sudo modal has not been completed, this will be refired after it is\n      return\n    }\n\n    this.setSmsControlState(true, false)\n    this.smsOtpInput.value = ''\n    this.smsOtpInput.disabled = true\n\n    const sendSmsUrl = this.buttonSendSms.getAttribute('data-url')!\n    const csrfInput = this.smsForm.querySelector('.js-data-url-csrf-send') as HTMLInputElement\n    const number = `${this.countryCodeSelect.value} ${this.smsPhoneInput.value}`\n    const formData = new FormData()\n    formData.append('number', number)\n    formData.append('inline_configure', 'true')\n\n    const octocaptchaToken = this.smsForm.querySelector('.js-octocaptcha-token') as HTMLInputElement\n    if (octocaptchaToken && octocaptchaToken.value) {\n      formData.append('octocaptcha-token', octocaptchaToken.value)\n    }\n\n    const response = await fetch(sendSmsUrl, {\n      mode: 'same-origin',\n      method: 'POST',\n      body: formData,\n      headers: {\n        Accept: 'application/json',\n        'Scoped-CSRF-Token': csrfInput.value,\n        'X-Requested-With': 'XMLHttpRequest',\n      },\n    })\n\n    if (response.ok && response.status === 200) {\n      this.smsPhoneInput.disabled = true\n      this.setSmsControlState(false, true)\n    } else {\n      this.setSmsControlState(false, false, await this.responseErrorMessage(response))\n    }\n  }\n\n  @debounce(50)\n  async otpChange() {\n    const otpInput = this.configuringApp() ? this.appOtpInput : this.smsOtpInput\n    const otpRe = new RegExp(`^([0-9]{6})$`)\n    if (!otpRe.test(otpInput.value)) {\n      return\n    }\n    // disable the input while we're verifying the otp. this prevent multiple events from verifying or the input\n    // from freezing (i.e. successful verification) on a bad code.\n    otpInput.disabled = true\n\n    const resp = await this.verifyOtp(otpInput.value)\n    if (resp.success) {\n      this.clearError()\n      this.saveButton.disabled = false\n      otpInput.disabled = true\n      this.otpVerifySuccess.hidden = false\n    } else {\n      // eslint-disable-next-line i18n-text/no-en\n      this.setError(resp.error || 'Unable to verify OTP. Please try again.')\n      // re-enable the input and focus it\n      otpInput.disabled = false\n      otpInput.focus()\n    }\n  }\n\n  setError(message: string) {\n    this.verifyError.textContent = message\n    this.verifyError.hidden = false\n    announce(message)\n  }\n\n  clearError() {\n    this.verifyError.textContent = ''\n    this.verifyError.hidden = true\n  }\n\n  async verifyOtp(otp: string): Promise<VerifyResponse> {\n    const form = this.configuringApp() ? this.appForm : this.smsForm\n    const type = this.configuringApp() ? 'app' : 'sms'\n    const csrfInput = form.querySelector('.js-data-url-csrf') as HTMLInputElement\n    const formData = new FormData()\n    formData.append('type', type)\n    formData.append('otp', otp.trim())\n\n    const response = await fetch(form.action, {\n      mode: 'same-origin',\n      method: 'POST',\n      body: formData,\n      headers: {\n        Accept: 'application/json',\n        'Scoped-CSRF-Token': csrfInput.value,\n        'X-Requested-With': 'XMLHttpRequest',\n      },\n    })\n\n    if (response.status !== 200) {\n      return {\n        success: false,\n        error: await this.responseErrorMessage(response),\n      }\n    }\n    return {success: true}\n  }\n\n  async responseErrorMessage(response: Response): Promise<string> {\n    try {\n      const jsonResponse = await response.json()\n      return jsonResponse['error']\n    } catch (e) {\n      if (response.status >= 400 && response.status < 500) {\n        // eslint-disable-next-line i18n-text/no-en\n        return 'Unauthorized to complete request. Try refreshing the page or contact support.'\n      }\n      // eslint-disable-next-line i18n-text/no-en\n      return 'Server encountered an error. Please try again.'\n    }\n  }\n}\n","import {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {\n  announce as liveRegionAnnounce,\n  announceFromElement as liveRegionAnnounceFromElement,\n} from '@primer/live-region-element'\n\nexport interface ElementWithAriaNotify extends Element {\n  ariaNotify: (\n    message: string,\n    options?: {interrupt?: 'none' | 'pending' | 'all'; priority?: 'none' | 'important'},\n  ) => void\n}\n\n/**\n * Troubleshooting guide for aria-live regions available on the Hub\n * - https://thehub.github.com/epd/engineering/dev-practicals/frontend/accessibility/readiness-routine/screenreaders/live-regions-and-focus-management-techniques/#why-isnt-my-live-region-working-as-i-expect\n */\n\n// Announce an element's text to the screen reader.\nexport function announceFromElement(el: HTMLElement, options?: {assertive?: boolean; element?: HTMLElement}) {\n  if (isFeatureEnabled('arianotify_comprehensive_migration')) {\n    announce(getTextContent(el), {...options, element: options?.element ?? el})\n  } else if (isFeatureEnabled('primer_live_region_element') && options?.element === undefined) {\n    liveRegionAnnounceFromElement(el, {\n      politeness: options?.assertive ? 'assertive' : 'polite',\n    })\n  } else {\n    announce(getTextContent(el), options)\n  }\n}\n\n// Announce message update to screen reader.\n// Note: Use caution when using this function while a dialog is active.\n// If the message is updated while the dialog is open, the screen reader may not announce the live region.\n// For more information, view the document on dialog and live region support: https://github.com/github/accessibility/blob/main/docs/dialog-live-region-support.md\nexport function announce(message: string, options?: {assertive?: boolean; element?: HTMLElement}) {\n  const {assertive, element} = options ?? {}\n\n  if (isFeatureEnabled('arianotify_comprehensive_migration') && 'ariaNotify' in Element.prototype) {\n    ;((element || document.body) as Element as ElementWithAriaNotify).ariaNotify(message, {\n      interrupt: options?.assertive ? 'all' : 'none',\n    })\n  } else if (isFeatureEnabled('primer_live_region_element') && element === undefined) {\n    liveRegionAnnounce(message, {\n      politeness: assertive ? 'assertive' : 'polite',\n    })\n  } else {\n    setContainerContent(message, assertive, element)\n  }\n}\n\n// Set aria-live container to message.\nfunction setContainerContent(message: string, assertive?: boolean, element?: HTMLElement) {\n  const getQuerySelector = () => {\n    return assertive ? '#js-global-screen-reader-notice-assertive' : '#js-global-screen-reader-notice'\n  }\n  const container = element ?? ssrSafeDocument?.querySelector(getQuerySelector())\n  if (!container) return\n  if (container.textContent === message) {\n    /* This is a hack due to the way the aria live API works.\n    A screen reader will not read a live region again\n    if the text is the same. Adding a space character tells\n    the browser that the live region has updated,\n    which will cause it to read again, but with no audible difference. */\n    container.textContent = `${message}\\u00A0`\n  } else {\n    container.textContent = message\n  }\n}\n\n// Gets the trimmed text content of an element.\nfunction getTextContent(el: HTMLElement): string {\n  // innerText does not contain hidden text\n  /* eslint-disable-next-line github/no-innerText */\n  return (el.getAttribute('aria-label') || el.innerText || '').trim()\n}\n","export interface ClientEnvironment {\n  readonly locale: string\n  readonly featureFlags: string[]\n}\n\nlet env: ClientEnvironment | undefined\n\nexport function getEnv() {\n  if (!env) {\n    throw new Error(\n      'Client env was requested before it was loaded. This likely means you are attempting to use client env at the module level in SSR, which is not supported. Please move your client env usage into a function.',\n    )\n  }\n\n  return env\n}\n\nexport function getLocale() {\n  return env?.locale ?? 'en-US'\n}\n\nfunction loadEnv() {\n  if (typeof document !== 'undefined') {\n    const envTag = document.getElementById('client-env')\n    if (envTag) {\n      try {\n        env = JSON.parse(envTag.textContent || '')\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error('Error parsing client-env', error)\n      }\n    }\n  }\n}\n\n// Automatically load the env on initial page load\nloadEnv()\n\n// This is a special helper method for setting the env in the SSR environment only\nexport function setClientEnvForSsr(clientEnv: ClientEnvironment | undefined) {\n  env = clientEnv\n}\n\n// This env object is used as a default for tests only and is not included in production builds\nexport const clientEnvForTests: ClientEnvironment = {\n  locale: 'en',\n  featureFlags: ['test_flag'],\n}\n\nexport function _resetForTests({loadNewEnv, forceUndefined}: {loadNewEnv: boolean; forceUndefined?: boolean}) {\n  // forget the current env\n  env = forceUndefined ? undefined : clientEnvForTests\n\n  if (loadNewEnv) {\n    // load the latest env\n    loadEnv()\n  }\n}\n","import memoize from '@github/memoize'\nimport {getEnv} from '@github-ui/client-env'\nimport {IS_SERVER} from '@github-ui/ssr-utils'\n\nfunction getEnabledFeaturesSet(): Set<string> {\n  const features = getEnv().featureFlags\n  const featuresUpperCase = features.map(feature => feature.toLowerCase())\n  return new Set<string>(featuresUpperCase)\n}\n\nconst featuresSet =\n  IS_SERVER || process.env.NODE_ENV === 'test' ? getEnabledFeaturesSet : memoize(getEnabledFeaturesSet)\n\nexport function getEnabledFeatures(): string[] {\n  return Array.from(featuresSet())\n}\n\nexport function isFeatureEnabled(name: string): boolean {\n  return featuresSet().has(name.toLowerCase())\n}\n\n//exported to allow mocking in tests\nconst featureFlag = {isFeatureEnabled}\n\nexport {featureFlag}\n","// When using SSR, browser globals are not available. If you try to use them, Node.js will throw an error\ntype SSRSafeLocation = Pick<Location, 'pathname' | 'origin' | 'search' | 'hash' | 'href'>\n\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeDocument = typeof document === 'undefined' ? undefined : document\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeWindow = typeof window === 'undefined' ? undefined : window\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeHistory = typeof history === 'undefined' ? undefined : history\n\nexport const ssrSafeLocation: SSRSafeLocation =\n  // eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\n  typeof location === 'undefined' ? {pathname: '', origin: '', search: '', hash: '', href: ''} : location\n\nexport function setLocation(url: string) {\n  // eslint-disable-next-line no-restricted-syntax\n  const parsedURL: SSRSafeLocation = new URL(url)\n  const {pathname, origin, search, hash} = parsedURL\n\n  Object.assign(ssrSafeLocation, {pathname, origin, search, hash})\n}\n","import {ssrSafeDocument} from './ssr-globals'\n\n/***\n * Are we rendering on the server?\n */\nexport const IS_SERVER = typeof ssrSafeDocument === 'undefined'\n\n/***\n * Are we rendering on the client?\n */\nexport const IS_BROWSER = !IS_SERVER\n\n/***\n * This helper returns `true` if:\n * - we are rendering on the server\n * - we are on the client, and the app has been hydrated from a server-render\n */\nexport function wasServerRendered() {\n  if (IS_SERVER) {\n    return true\n  }\n\n  return Boolean(ssrSafeDocument!.querySelector('react-app[data-ssr=\"true\"]'))\n}\n"],"names":["SinglePageWizardStepContentBase","HTMLElement","connectedCallback","setAttribute","validateStep","isValid","autoProceed","autoProceedInProgress","dispatchEvent","CustomEvent","bubbles","detail","setError","errorMessage","clearError","onStepRendered","setStepState","_wizardState","onNextClick","proceed","onPreviousClick","isStepValid","TwoFactorSetupVerificationElement","initiateTwoFactorSetup","signal","eventAbortController","AbortController","addEventListener","initiateTwoFactorSwitch","disconnectedCallback","abort","wizardState","loaded","isAppMode","handleAppModeWarning","renderQRCodeImg","qr_code_img_data","appOtpInput","value","dev_otp","mashedSecret","textContent","mashed_secret","smsElem","hidden","appElem","rendered","focus","focusElems","document","getElementsByClassName","length","firstFocusElem","switchSelectionElem","getElementById","type","smsPhoneInput","qrCodeImg","src","spinner","showAppWarning","appScanTextA","appScanTextB","form","appForm","smsForm","csrfInput","querySelector","formData","FormData","otp","smsOtpInput","append","trim","response","fetch","action","mode","method","body","headers","Accept","ok","status","jsonResponse","json","e","otpChange","formSubmit","preventDefault","smsPhoneInputChange","buttonSendSms","disabled","setSmsControlState","inProgress","isSuccess","message","isError","showDefaultError","showServerError","smsErrorContainer","innerHTML","setTimeout","smsDefaultError","smsSendStatusError","smsSendStatusSuccess","smsSendStatusInProgress","smsCodeForm","buttonSendSmsClick","sendSmsUrl","getAttribute","number","countryCodeSelect","octocaptchaToken","elem","test","updateHeaders","titles","authVerificationStepElem","header","content","event","switchForm","newWizardState","formatted_recovery_codes","target","attr","debounce","controller","TwoFactorSetupRecoveryCodesElement","codes","code","li","createElement","className","appendChild","error","reconfigNotification","dismissButton","click","onDownloadClick","ignoreWarningElem","id","downloadCodesForm","submit","TwoFactorSetupSwitchSelectionElement","hide","show","box","switchMethodApp","switchMethodEvent","switchMethodSms","verificationElem","TwoFactorSetupAddMethodsElement","u2fRegistrations","childElementCount","showU2fEnabledLabel","removeAttribute","MutationObserver","mutations","mutation","addedNodes","removedNodes","u2FRegistrationObserver","observe","childList","showU2fRegButton","disconnect","wizardStepBanner","setBannerMessage","factor_text","TwoFactorConfigureOtpFactorElement","showSMS","showButtons","configuringApp","factorType","hasAttribute","responseErrorMessage","otpInput","otpRe","resp","verifyOtp","success","saveButton","otpVerifySuccess","verifyError","announce","announceFromElement","el","options","isFeatureEnabled","getTextContent","element","undefined","liveRegionAnnounceFromElement","politeness","assertive","Element","prototype","ariaNotify","interrupt","liveRegionAnnounce","setContainerContent","container","ssrSafeDocument","innerText","env","getEnv","getLocale","locale","loadEnv","envTag","JSON","parse","console","getEnabledFeaturesSet","Set","features","featureFlags","map","feature","toLowerCase","featuresSet","IS_SERVER","memoize","getEnabledFeatures","Array","from","name","has","featureFlag","ssrSafeWindow","window","ssrSafeHistory","history","ssrSafeLocation","location","pathname","origin","search","hash","href","IS_BROWSER","wasServerRendered","Boolean"],"sourceRoot":""}