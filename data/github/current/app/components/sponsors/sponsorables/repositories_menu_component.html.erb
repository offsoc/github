<div class="form-group">
  <div class="form-checkbox">
    <label for="include_repo_access">
      <input type="checkbox" name="include_repo_access" class="js-sponsors-only-repository-checkbox" <%= "checked" if expand_input? %> id="include_repo_access">
      Grant sponsors access to a private repository
    </label>
    <p class="note" <%= test_selector('sponsors-only-repo-explanation') %>>
      Sponsors will receive an invitation as a <strong>read-only collaborator</strong> to the selected repository.
      <a class="Link--inTextBlock" href="<%= helpers.docs_url("sponsors/sponsors-only-repositories") %>">Learn more about sponsor-only repositories</a>.
    </p>
  </div>

  <div
    class="ml-3 js-sponsors-only-repo-menu-wrapper"
    <%= "hidden" unless expand_input? %>
    <%= test_selector("sponsors-only-repo-menu-wrapper") %>
  >
    <ul class="note ml-5 mb-4" <%= test_selector("sponsors-only-repo-help-text") %>>
      <li>Repository must be <strong>private</strong> and owned by <strong><%= owner_help_text %></strong>.</li>
      <li>New and existing sponsors on this tier are invited as <strong>read-only</strong> outside collaborators.</li>
      <li>Sponsors are automatically removed when they cancel their sponsorship.</li>
      <li>Organizations that sponsor you are not invited to the repository.</li>
      <li>People you manually add and remove are preserved.</li>
      <% if show_seat_limit_warning? %>
        <li <%= test_selector("seat-limit-warning") %>>Outside collaborators will use a seat on your plan.</li>
      <% end %>
    </ul>
    <details
      class="details-reset details-overlay js-sponsors-only-repo-menu"
      <%= test_selector("repositories-menu") %>
    >
      <%= render Primer::Beta::Button.new(tag: :summary, trailing_action: true, "aria-haspopup": "true") do %>
        <span data-menu-button <%= test_selector("menu-prompt") %>><%= prompt %></span>
      <% end %>
      <details-menu class="SelectMenu SelectMenu--hasFilter" role="menu"><%# erblint:disable Primer::Accessibility::DetailsMenuMigration %>
        <div class="SelectMenu-modal">
          <filter-input class="SelectMenu-filter" aria-owns="repositories-list">
            <input
              class="SelectMenu-input form-control"
              type="text"
              placeholder="Find a repository"
              aria-label="Find a repository">
          </filter-input>
          <div class="SelectMenu-list" id="repositories-list" data-filter-list>
            <label class="SelectMenu-item"
              role="menuitemradio"
              tabindex="0"
              <% if tier.repository.nil? %>aria-checked="true"<% end %>
            >
              <input type="radio" name="repository_id" value="" hidden <% if tier.repository.nil? %>checked<% end %>>
              <%= render Primer::Beta::Octicon.new(icon: :check, classes: "SelectMenu-icon SelectMenu-icon--check") %>
              <div class="flex-justify-between">
                <span data-menu-button-text>
                  None
                </span>
                <%= render Primer::Beta::Octicon.new(icon: :x) %>
              </div>
            </label>

            <% repositories.each do |repository| %>
              <label class="SelectMenu-item"
                role="menuitemradio"
                tabindex="0"
                <% if tier.repository == repository %>aria-checked="true"<% end %>
              >
                <input type="radio"
                  name="repository_id"
                  value="<%= repository.id %>"
                  <% if tier.repository == repository %>checked<% end %>
                  hidden>
                <%= render Primer::Beta::Octicon.new(icon: :check, classes: "SelectMenu-icon SelectMenu-icon--check") %>
                <span data-menu-button-text><%= repository.name_with_display_owner %></span>
              </label>
            <% end %>

            <div class="SelectMenu-blankslate" data-filter-empty-state hidden>
              <h4 class="my-2">No repositories</h4>
            </div>
          </div>
        </div>
      </details-menu>
    </details>
    <% if repository_errors && repository_errors.any? %>
      <div class="my-3 js-sponsors-only-repository-errors">
        <%= render(Sponsors::Dashboard::RepositoryErrorsComponent.new(
          repository: tier.repository,
          errors: repository_errors,
        ))
      %>
      </div>
    <% end %>
  </div>
  <hr>
</div>
