# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::OrganizationBulkInvite`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::OrganizationBulkInvite`.

class Hydro::Schemas::Github::V1::OrganizationBulkInvite
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      failed_email_invites: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      failed_user_invites: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer])),
      organization: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization),
      successful_email_invites: T.nilable(T.any(Google::Protobuf::RepeatedField[String], T::Array[String])),
      successful_user_invites: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer]))
    ).void
  end
  def initialize(actor: nil, failed_email_invites: T.unsafe(nil), failed_user_invites: T.unsafe(nil), organization: nil, successful_email_invites: T.unsafe(nil), successful_user_invites: T.unsafe(nil)); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_failed_email_invites; end

  sig { void }
  def clear_failed_user_invites; end

  sig { void }
  def clear_organization; end

  sig { void }
  def clear_successful_email_invites; end

  sig { void }
  def clear_successful_user_invites; end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def failed_email_invites; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def failed_email_invites=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def failed_user_invites; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def failed_user_invites=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)) }
  def organization; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Organization)).void }
  def organization=(value); end

  sig { returns(Google::Protobuf::RepeatedField[String]) }
  def successful_email_invites; end

  sig { params(value: Google::Protobuf::RepeatedField[String]).void }
  def successful_email_invites=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def successful_user_invites; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def successful_user_invites=(value); end
end
