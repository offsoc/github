<%# rubocop:disable Lint/InstanceVariable %>
<% if current_organization.restricts_oauth_applications? %>
  <% if @pending_requests.blank? && @approved_requests.blank? && @denied_requests.blank? %>
    <h4>No pending requests</h4>
    <p>
      As members request access for specific applications, those requests will be listed here for your approval.
      <% if current_user.oauth_accesses.third_party.any? %>
        You can start by browsing <a class="Link--inTextBlock" href="<%= settings_user_applications_path %>#authorized">your own authorized applications</a>.
      <% end %>
    </p>
  <% else %>
      <%= render(Primer::Beta::BorderBox.new(padding: :condensed, mt: 4)) do |component| %>
        <% @pending_requests.each do |request| %>
          <% component.with_row do %>
            <div class="float-right request-indicator">
              <% if request.requestor.present? %>Approval requested by <%= link_to request.requestor.display_login, user_path(request.requestor), :class => "requestor Link--inTextBlock" %> &#8212; <% end %>
              <%= link_to "Review", org_application_approval_path(current_organization, request.application) %>
            </div>
            <%= oauth_application_logo(request.application, 20, :class => "avatar float-left mr-1") %>
            <span class="request-info js-details-container Details">
              <strong title="<%= request.application.name %>"><%= truncate(request.application.name, length: 140) %></strong><% unless request.application.description.blank? %> <span class="hidden-text-expander inline"><button type="button" class="ellipsis-expander js-details-target" aria-expanded="false">&hellip;</button></span> <span class="application-description"><%= request.application.description %></span><% end %><%# erblint:disable GitHub::Accessibility::NoTitleAttribute %>

              <% if GitHub.flipper[:alert_on_spammy_apps].enabled? && request.application.spammy? %>
                <%= render(Primer::Beta::Label.new(ml: 1, scheme: :danger, title: "Label: Spammy", test_selector: "spammy_label_#{ request.application.id}")) { "Spammy" } %>
              <% end %>
            </span>
          <% end %>
        <% end %>
        <% @approved_requests.each do |request| %>
          <% component.with_row do %>
            <span class="float-right request-indicator">
              <span class="approved-request">
                <%= render(Primer::Beta::Octicon.new(icon: "check")) %> Approved</span> &#8212; <%= link_to org_application_approval_path(current_organization, request.application), :class => "edit-link" do %>
                  <%= primer_octicon(:pencil, :"aria-label" => "Update policy") %>
                <% end %>
            </span>
            <%= oauth_application_logo(request.application, 20, :class => "avatar float-left mr-1") %>
            <span class="request-info js-details-container Details">
              <strong title="<%= request.application.name %>"><%= truncate(request.application.name, length: 140) %></strong><% unless request.application.description.blank? %> <span class="hidden-text-expander inline"><button type="button" class="ellipsis-expander js-details-target" aria-expanded="false">&hellip;</button></span> <span class="application-description"><%= request.application.description %></span><% end %><%# erblint:disable GitHub::Accessibility::NoTitleAttribute %>

              <% if GitHub.flipper[:alert_on_spammy_apps].enabled? && request.application.spammy? %>
                <%= render(Primer::Beta::Label.new(ml: 1, scheme: :danger, title: "Label: Spammy", test_selector: "spammy_label_#{ request.application.id}")) { "Spammy" } %>
              <% end %>
            </span>
          <% end %>
        <% end %>
        <% @denied_requests.each do |request| %>
          <% component.with_row do %>
            <span class="float-right request-indicator">
              <span class="denied-request">
                <%= render(Primer::Beta::Octicon.new(icon: "x")) %> Denied</span> &#8212; <%= link_to org_application_approval_path(current_organization, request.application), :class => "edit-link" do %>
                  <%= primer_octicon(:pencil, :"aria-label" => "Update policy") %>
                <% end %>
            </span>
            <%= oauth_application_logo(request.application, 20, :class => "avatar float-left mr-1") %>
            <span class="request-info js-details-container Details">
              <strong title="<%= request.application.name %>"><%= truncate(request.application.name, length: 140) %></strong><% unless request.application.description.blank? %> <span class="hidden-text-expander inline"><button type="button" class="ellipsis-expander js-details-target" aria-expanded="false">&hellip;</button></span> <span class="application-description"><%= request.application.description %></span><% end %><%# erblint:disable GitHub::Accessibility::NoTitleAttribute %>

              <% if GitHub.flipper[:alert_on_spammy_apps].enabled? && request.application.spammy? %>
                <%= render(Primer::Beta::Label.new(ml: 1, scheme: :danger, title: "Label: Spammy", test_selector: "spammy_label_#{ request.application.id}")) { "Spammy" } %>
              <% end %>
            </span>
          <% end %>
        <% end %>
      <% end %>
  <% end %>
<% end %>
