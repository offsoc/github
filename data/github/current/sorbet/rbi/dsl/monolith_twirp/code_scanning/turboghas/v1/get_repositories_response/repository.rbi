# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::CodeScanning::Turboghas::V1::GetRepositoriesResponse::Repository`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::CodeScanning::Turboghas::V1::GetRepositoriesResponse::Repository`.

class MonolithTwirp::CodeScanning::Turboghas::V1::GetRepositoriesResponse::Repository
  sig do
    params(
      advanced_security_enabled: T.nilable(T::Boolean),
      entity: T.nilable(MonolithTwirp::CodeScanning::Turboghas::V1::GetRepositoriesResponse::Entity),
      is_archived: T.nilable(T::Boolean),
      is_public: T.nilable(T::Boolean),
      name: T.nilable(String),
      owner: T.nilable(MonolithTwirp::CodeScanning::Turboghas::V1::GetUsersResponse::User),
      owner_id: T.nilable(Integer)
    ).void
  end
  def initialize(advanced_security_enabled: nil, entity: nil, is_archived: nil, is_public: nil, name: nil, owner: nil, owner_id: nil); end

  sig { returns(T::Boolean) }
  def advanced_security_enabled; end

  sig { params(value: T::Boolean).void }
  def advanced_security_enabled=(value); end

  sig { void }
  def clear_advanced_security_enabled; end

  sig { void }
  def clear_entity; end

  sig { void }
  def clear_is_archived; end

  sig { void }
  def clear_is_public; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_owner; end

  sig { void }
  def clear_owner_id; end

  sig { returns(T.nilable(MonolithTwirp::CodeScanning::Turboghas::V1::GetRepositoriesResponse::Entity)) }
  def entity; end

  sig { params(value: T.nilable(MonolithTwirp::CodeScanning::Turboghas::V1::GetRepositoriesResponse::Entity)).void }
  def entity=(value); end

  sig { returns(T::Boolean) }
  def is_archived; end

  sig { params(value: T::Boolean).void }
  def is_archived=(value); end

  sig { returns(T::Boolean) }
  def is_public; end

  sig { params(value: T::Boolean).void }
  def is_public=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(T.nilable(MonolithTwirp::CodeScanning::Turboghas::V1::GetUsersResponse::User)) }
  def owner; end

  sig { params(value: T.nilable(MonolithTwirp::CodeScanning::Turboghas::V1::GetUsersResponse::User)).void }
  def owner=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end
end
