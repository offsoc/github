# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Api::App::PlatformTypes::SearchResultItemConnection`.
# Please instead update this file by running `bin/tapioca dsl Api::App::PlatformTypes::SearchResultItemConnection`.

class Api::App::PlatformTypes::SearchResultItemConnection < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(T.nilable(Integer)) }
  def closed_issue_count; end

  sig { returns(T::Boolean) }
  def closed_issue_count?; end

  sig { returns(Integer) }
  def code_count; end

  sig { returns(T::Boolean) }
  def code_count?; end

  sig { returns(Integer) }
  def discussion_count; end

  sig { returns(T::Boolean) }
  def discussion_count?; end

  sig { returns(T.nilable(T::Array[Api::App::PlatformTypes::SearchResultItemEdge])) }
  def edges; end

  sig { returns(T::Boolean) }
  def edges?; end

  sig { returns(Integer) }
  def issue_count; end

  sig { returns(T::Boolean) }
  def issue_count?; end

  sig { returns(T::Array[Api::App::PlatformTypes::LanguageAggregate]) }
  def language_aggregates; end

  sig { returns(T::Boolean) }
  def language_aggregates?; end

  sig { returns(Integer) }
  def marketplace_count; end

  sig { returns(T::Boolean) }
  def marketplace_count?; end

  sig do
    returns(T.nilable(T::Array[T.any(Api::App::PlatformTypes::Issue, Api::App::PlatformTypes::PullRequest, Api::App::PlatformTypes::Repository, Api::App::PlatformTypes::User, Api::App::PlatformTypes::Organization, Api::App::PlatformTypes::MarketplaceListing, Api::App::PlatformTypes::RepositoryAction, Api::App::PlatformTypes::RepositoryStack, Api::App::PlatformTypes::App, Api::App::PlatformTypes::Discussion)]))
  end
  def nodes; end

  sig { returns(T::Boolean) }
  def nodes?; end

  sig { returns(T.nilable(Integer)) }
  def open_issue_count; end

  sig { returns(T::Boolean) }
  def open_issue_count?; end

  sig { returns(Api::App::PlatformTypes::PageInfo) }
  def page_info; end

  sig { returns(T::Boolean) }
  def page_info?; end

  sig { returns(Integer) }
  def repository_count; end

  sig { returns(T::Boolean) }
  def repository_count?; end

  sig { returns(Integer) }
  def user_count; end

  sig { returns(T::Boolean) }
  def user_count?; end

  sig { returns(Integer) }
  def wiki_count; end

  sig { returns(T::Boolean) }
  def wiki_count?; end
end
