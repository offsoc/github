# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::IpAllowList::V0::Entities::IpAllowListEntry`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::IpAllowList::V0::Entities::IpAllowListEntry`.

class Hydro::Schemas::Github::IpAllowList::V0::Entities::IpAllowListEntry
  sig do
    params(
      active: T.nilable(T::Boolean),
      allow_list_value: T.nilable(String),
      id: T.nilable(Integer),
      name: T.nilable(String),
      owner_id: T.nilable(Integer),
      owner_type: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(active: nil, allow_list_value: nil, id: nil, name: nil, owner_id: nil, owner_type: nil); end

  sig { returns(T::Boolean) }
  def active; end

  sig { params(value: T::Boolean).void }
  def active=(value); end

  sig { returns(String) }
  def allow_list_value; end

  sig { params(value: String).void }
  def allow_list_value=(value); end

  sig { void }
  def clear_active; end

  sig { void }
  def clear_allow_list_value; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_owner_type; end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def owner_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def owner_type=(value); end
end
