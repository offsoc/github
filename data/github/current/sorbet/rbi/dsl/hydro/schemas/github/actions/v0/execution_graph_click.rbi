# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Actions::V0::ExecutionGraphClick`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Actions::V0::ExecutionGraphClick`.

class Hydro::Schemas::Github::Actions::V0::ExecutionGraphClick
  sig do
    params(
      click_area: T.nilable(T.any(Symbol, Integer)),
      repository: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext),
      session_id: T.nilable(String),
      user: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(click_area: nil, repository: nil, request_context: nil, session_id: nil, user: nil); end

  sig { void }
  def clear_click_area; end

  sig { void }
  def clear_repository; end

  sig { void }
  def clear_request_context; end

  sig { void }
  def clear_session_id; end

  sig { void }
  def clear_user; end

  sig { returns(T.any(Symbol, Integer)) }
  def click_area; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def click_area=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)) }
  def repository; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)).void }
  def repository=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end

  sig { returns(String) }
  def session_id; end

  sig { params(value: String).void }
  def session_id=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def user; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def user=(value); end
end
