# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `DependencyGraphAPI::V1::GetDependencySnapshotsDiffRequest`.
# Please instead update this file by running `bin/tapioca dsl DependencyGraphAPI::V1::GetDependencySnapshotsDiffRequest`.

class DependencyGraphAPI::V1::GetDependencySnapshotsDiffRequest
  sig do
    params(
      base_build_id: T.nilable(String),
      base_build_type: T.nilable(String),
      base_ref: T.nilable(String),
      base_repository_id: T.nilable(Integer),
      base_sha: T.nilable(String),
      base_snapshot_id: T.nilable(Integer),
      target_build_id: T.nilable(String),
      target_build_type: T.nilable(String),
      target_ref: T.nilable(String),
      target_repository_id: T.nilable(Integer),
      target_sha: T.nilable(String),
      target_snapshot_id: T.nilable(Integer)
    ).void
  end
  def initialize(base_build_id: nil, base_build_type: nil, base_ref: nil, base_repository_id: nil, base_sha: nil, base_snapshot_id: nil, target_build_id: nil, target_build_type: nil, target_ref: nil, target_repository_id: nil, target_sha: nil, target_snapshot_id: nil); end

  sig { returns(String) }
  def base_build_id; end

  sig { params(value: String).void }
  def base_build_id=(value); end

  sig { returns(String) }
  def base_build_type; end

  sig { params(value: String).void }
  def base_build_type=(value); end

  sig { returns(String) }
  def base_ref; end

  sig { params(value: String).void }
  def base_ref=(value); end

  sig { returns(Integer) }
  def base_repository_id; end

  sig { params(value: Integer).void }
  def base_repository_id=(value); end

  sig { returns(String) }
  def base_sha; end

  sig { params(value: String).void }
  def base_sha=(value); end

  sig { returns(Integer) }
  def base_snapshot_id; end

  sig { params(value: Integer).void }
  def base_snapshot_id=(value); end

  sig { void }
  def clear_base_build_id; end

  sig { void }
  def clear_base_build_type; end

  sig { void }
  def clear_base_ref; end

  sig { void }
  def clear_base_repository_id; end

  sig { void }
  def clear_base_sha; end

  sig { void }
  def clear_base_snapshot_id; end

  sig { void }
  def clear_target_build_id; end

  sig { void }
  def clear_target_build_type; end

  sig { void }
  def clear_target_ref; end

  sig { void }
  def clear_target_repository_id; end

  sig { void }
  def clear_target_sha; end

  sig { void }
  def clear_target_snapshot_id; end

  sig { returns(String) }
  def target_build_id; end

  sig { params(value: String).void }
  def target_build_id=(value); end

  sig { returns(String) }
  def target_build_type; end

  sig { params(value: String).void }
  def target_build_type=(value); end

  sig { returns(String) }
  def target_ref; end

  sig { params(value: String).void }
  def target_ref=(value); end

  sig { returns(Integer) }
  def target_repository_id; end

  sig { params(value: Integer).void }
  def target_repository_id=(value); end

  sig { returns(String) }
  def target_sha; end

  sig { params(value: String).void }
  def target_sha=(value); end

  sig { returns(Integer) }
  def target_snapshot_id; end

  sig { params(value: Integer).void }
  def target_snapshot_id=(value); end
end
