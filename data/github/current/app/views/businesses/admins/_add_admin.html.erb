<div class="float-right">
  <% if GitHub.site_admin_role_managed_externally? %>
    <%= render(Primer::Alpha::Dialog.new(
      title: "Add enterprise owner",
      id: "add-admin-disabled-dialog"
    )) do |dialog| %>
      <% dialog.with_show_button(scheme: :primary) { "Add owner" } %>
      <% dialog.with_body do %>
        <p>
          Manually adding enterprise owners is disabled on your instance.
        </p>
        <p>
          <% if GitHub.auth.ldap? %>
            Add owners by adding them to the LDAP admin group '<%= GitHub.ldap_admin_group %>'.
          <% elsif GitHub.auth.saml? && business.enterprise_server_scim_enabled? %>
            Add owners through SCIM provisioning via your IdP by assigning 'Enterprise Owner' application role to a user.
          <% elsif GitHub.auth.saml? %>
            Add owners by setting their SAML 'administrator' attribute to 'true'.
          <% end %>
        </p>
      <% end %>
    <% end %>
  <% else %>
    <% invitations_enabled = !GitHub.bypass_business_member_invites_enabled? %>
    <% post_path = invitations_enabled ?
      enterprise_admin_invitations_path(business) :
      enterprise_admins_path(business) %>
    <%= form_tag post_path, class: "input-block", method: :post do %>
      <% dialog_title = "#{invitations_enabled ?  "Invite" :  "Add"} an enterprise administrator" %>
      <%= render(Primer::Alpha::Dialog.new(title: dialog_title , id: "add-admin-dialog", size: :large)) do |d| %>
        <% d.with_show_button(scheme: :primary) { invitations_enabled ? "Invite admin" :  "Add owner" } %>
        <% d.with_header(text_align: :center) do %>
          <%= render(Primer::Beta::Octicon.new(icon: "organization", color: :muted, align_self: :center)) %>
          <%= render(Primer::Beta::Heading.new(tag: :h4)) { dialog_title } %>
          <% unless GitHub.single_business_environment? %>
            <include-fragment
              src="<%= enterprise_available_licenses_path(business) %>"
              loading="lazy">
              <%= render(Primer::Beta::Spinner.new(size: :small)) %>
            </include-fragment>
          <% end %>
        <% end %>
        <% d.with_body(px: 3) do %>
          <div class="mt-1">
            <auto-complete src="<%= enterprise_admin_suggestions_path(business.slug) %>"
                for="bus-admins-complete-results"
                class="auto-search-group d-block">
              <input type="text" name="admin" aria-label="Search by username, full name or email address"
                class="form-control input-block input-contrast auto-search-input new-member-field"
                autofocus required
                placeholder="Search by name">
              <%= primer_octicon(:person) %>
              <ul id="bus-admins-complete-results" class="m-0 autocomplete-results position-relative mb-2"></ul>
            </auto-complete>
            <% if invitations_enabled %>
              <%= render "businesses/admins/role_radios", business: business %>
            <% end %>
          </div>
        <% end %>
        <% d.with_footer do %>
          <%= render(Primer::Beta::Button.new(
            type: :submit,
            scheme: :primary,
            block: true,
            classes: "js-auto-complete-button input-group-button v-align-to")
          ) do %>
            <% if invitations_enabled %>
              Send invitation
            <% else %>
              Add
            <% end %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
</div>
