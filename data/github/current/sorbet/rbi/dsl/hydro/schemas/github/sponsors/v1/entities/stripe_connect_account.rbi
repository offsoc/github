# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Sponsors::V1::Entities::StripeConnectAccount`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Sponsors::V1::Entities::StripeConnectAccount`.

class Hydro::Schemas::Github::Sponsors::V1::Entities::StripeConnectAccount
  sig do
    params(
      active: T.nilable(T::Boolean),
      billing_country: T.nilable(String),
      card_payments_capability: T.nilable(T::Boolean),
      charges_enabled: T.nilable(T::Boolean),
      country: T.nilable(String),
      default_currency: T.nilable(String),
      deleted_at: T.nilable(Google::Protobuf::Timestamp),
      details_submitted: T.nilable(T::Boolean),
      disabled_reason: T.nilable(String),
      email: T.nilable(String),
      id: T.nilable(Integer),
      payout_interval: T.nilable(T.any(Symbol, Integer)),
      payouts_enabled: T.nilable(T::Boolean),
      requirements_currently_due: T.nilable(T::Boolean),
      requirements_eventually_due: T.nilable(T::Boolean),
      requirements_past_due: T.nilable(T::Boolean),
      sponsorable_id: T.nilable(Integer),
      sponsors_listing_id: T.nilable(Integer),
      stripe_account_id: T.nilable(String),
      tax_reporting_capability: T.nilable(T::Boolean),
      transfers_capability: T.nilable(T::Boolean),
      verification_status: T.nilable(T.any(Symbol, Integer)),
      w8_or_w9_requested_at: T.nilable(Google::Protobuf::Timestamp),
      w8_or_w9_verified: T.nilable(T::Boolean)
    ).void
  end
  def initialize(active: nil, billing_country: nil, card_payments_capability: nil, charges_enabled: nil, country: nil, default_currency: nil, deleted_at: nil, details_submitted: nil, disabled_reason: nil, email: nil, id: nil, payout_interval: nil, payouts_enabled: nil, requirements_currently_due: nil, requirements_eventually_due: nil, requirements_past_due: nil, sponsorable_id: nil, sponsors_listing_id: nil, stripe_account_id: nil, tax_reporting_capability: nil, transfers_capability: nil, verification_status: nil, w8_or_w9_requested_at: nil, w8_or_w9_verified: nil); end

  sig { returns(T::Boolean) }
  def active; end

  sig { params(value: T::Boolean).void }
  def active=(value); end

  sig { returns(String) }
  def billing_country; end

  sig { params(value: String).void }
  def billing_country=(value); end

  sig { returns(T::Boolean) }
  def card_payments_capability; end

  sig { params(value: T::Boolean).void }
  def card_payments_capability=(value); end

  sig { returns(T::Boolean) }
  def charges_enabled; end

  sig { params(value: T::Boolean).void }
  def charges_enabled=(value); end

  sig { void }
  def clear_active; end

  sig { void }
  def clear_billing_country; end

  sig { void }
  def clear_card_payments_capability; end

  sig { void }
  def clear_charges_enabled; end

  sig { void }
  def clear_country; end

  sig { void }
  def clear_default_currency; end

  sig { void }
  def clear_deleted_at; end

  sig { void }
  def clear_details_submitted; end

  sig { void }
  def clear_disabled_reason; end

  sig { void }
  def clear_email; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_payout_interval; end

  sig { void }
  def clear_payouts_enabled; end

  sig { void }
  def clear_requirements_currently_due; end

  sig { void }
  def clear_requirements_eventually_due; end

  sig { void }
  def clear_requirements_past_due; end

  sig { void }
  def clear_sponsorable_id; end

  sig { void }
  def clear_sponsors_listing_id; end

  sig { void }
  def clear_stripe_account_id; end

  sig { void }
  def clear_tax_reporting_capability; end

  sig { void }
  def clear_transfers_capability; end

  sig { void }
  def clear_verification_status; end

  sig { void }
  def clear_w8_or_w9_requested_at; end

  sig { void }
  def clear_w8_or_w9_verified; end

  sig { returns(String) }
  def country; end

  sig { params(value: String).void }
  def country=(value); end

  sig { returns(String) }
  def default_currency; end

  sig { params(value: String).void }
  def default_currency=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def deleted_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def deleted_at=(value); end

  sig { returns(T::Boolean) }
  def details_submitted; end

  sig { params(value: T::Boolean).void }
  def details_submitted=(value); end

  sig { returns(String) }
  def disabled_reason; end

  sig { params(value: String).void }
  def disabled_reason=(value); end

  sig { returns(String) }
  def email; end

  sig { params(value: String).void }
  def email=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def payout_interval; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def payout_interval=(value); end

  sig { returns(T::Boolean) }
  def payouts_enabled; end

  sig { params(value: T::Boolean).void }
  def payouts_enabled=(value); end

  sig { returns(T::Boolean) }
  def requirements_currently_due; end

  sig { params(value: T::Boolean).void }
  def requirements_currently_due=(value); end

  sig { returns(T::Boolean) }
  def requirements_eventually_due; end

  sig { params(value: T::Boolean).void }
  def requirements_eventually_due=(value); end

  sig { returns(T::Boolean) }
  def requirements_past_due; end

  sig { params(value: T::Boolean).void }
  def requirements_past_due=(value); end

  sig { returns(Integer) }
  def sponsorable_id; end

  sig { params(value: Integer).void }
  def sponsorable_id=(value); end

  sig { returns(Integer) }
  def sponsors_listing_id; end

  sig { params(value: Integer).void }
  def sponsors_listing_id=(value); end

  sig { returns(String) }
  def stripe_account_id; end

  sig { params(value: String).void }
  def stripe_account_id=(value); end

  sig { returns(T::Boolean) }
  def tax_reporting_capability; end

  sig { params(value: T::Boolean).void }
  def tax_reporting_capability=(value); end

  sig { returns(T::Boolean) }
  def transfers_capability; end

  sig { params(value: T::Boolean).void }
  def transfers_capability=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def verification_status; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def verification_status=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def w8_or_w9_requested_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def w8_or_w9_requested_at=(value); end

  sig { returns(T::Boolean) }
  def w8_or_w9_verified; end

  sig { params(value: T::Boolean).void }
  def w8_or_w9_verified=(value); end
end
