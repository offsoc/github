# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Api::App::PlatformTypes::AbuseReport`.
# Please instead update this file by running `bin/tapioca dsl Api::App::PlatformTypes::AbuseReport`.

class Api::App::PlatformTypes::AbuseReport < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def created_at; end

  sig { returns(T::Boolean) }
  def created_at?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(T::Boolean) }
  def is_content_report; end

  sig { returns(T::Boolean) }
  def is_content_report?; end

  sig { returns(T::Boolean) }
  def is_resolved; end

  sig { returns(T::Boolean) }
  def is_resolved?; end

  sig { returns(T::Boolean) }
  def is_user_report; end

  sig { returns(T::Boolean) }
  def is_user_report?; end

  sig { returns(String) }
  def reason; end

  sig { returns(T::Boolean) }
  def reason?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::InterfaceType)) }
  def reported_content; end

  sig { returns(T::Boolean) }
  def reported_content?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::User)) }
  def reported_user; end

  sig { returns(T::Boolean) }
  def reported_user?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::User)) }
  def reporting_user; end

  sig { returns(T::Boolean) }
  def reporting_user?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::Repository)) }
  def repository; end

  sig { returns(T::Boolean) }
  def repository?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::StaffAccessedRepository)) }
  def staff_accessed_repository; end

  sig { returns(T::Boolean) }
  def staff_accessed_repository?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def updated_at; end

  sig { returns(T::Boolean) }
  def updated_at?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def zendesk_search_url; end

  sig { returns(T::Boolean) }
  def zendesk_search_url?; end
end
