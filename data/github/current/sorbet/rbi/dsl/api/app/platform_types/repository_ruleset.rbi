# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Api::App::PlatformTypes::RepositoryRuleset`.
# Please instead update this file by running `bin/tapioca dsl Api::App::PlatformTypes::RepositoryRuleset`.

class Api::App::PlatformTypes::RepositoryRuleset < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(T.nilable(Api::App::PlatformTypes::RepositoryRulesetBypassActorConnection)) }
  def bypass_actors; end

  sig { returns(T::Boolean) }
  def bypass_actors?; end

  sig { returns(Api::App::PlatformTypes::RepositoryRuleConditions) }
  def conditions; end

  sig { returns(T::Boolean) }
  def conditions?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def created_at; end

  sig { returns(T::Boolean) }
  def created_at?; end

  sig { returns(T.nilable(Integer)) }
  def database_id; end

  sig { returns(T::Boolean) }
  def database_id?; end

  sig { returns(String) }
  def enforcement; end

  sig { returns(T::Boolean) }
  def enforcement?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(String) }
  def name; end

  sig { returns(T::Boolean) }
  def name?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::RepositoryRuleConnection)) }
  def rules; end

  sig { returns(T::Boolean) }
  def rules?; end

  sig { returns(T.any(Api::App::PlatformTypes::Repository, Api::App::PlatformTypes::Organization)) }
  def source; end

  sig { returns(T::Boolean) }
  def source?; end

  sig { returns(T.nilable(String)) }
  def target; end

  sig { returns(T::Boolean) }
  def target?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def updated_at; end

  sig { returns(T::Boolean) }
  def updated_at?; end
end
