# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: aqueduct/api/v1/api.proto

require 'google/protobuf'

require 'google/protobuf/wrappers_pb'
require 'google/protobuf/timestamp_pb'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("aqueduct/api/v1/api.proto", :syntax => :proto3) do
    add_message "aqueduct.api.v1.SendRequest" do
      optional :app, :string, 1
      optional :queue, :string, 2
      optional :payload, :bytes, 3
      optional :drop_job, :bool, 4
      optional :job_id, :string, 5
      optional :redelivery_timeout_secs, :message, 6, "google.protobuf.UInt32Value"
      optional :max_redelivery_attempts, :message, 7, "google.protobuf.UInt32Value"
      optional :producer_id, :string, 8
      optional :producer_sequence, :uint64, 9
      map :headers, :string, :string, 10
      optional :client_id, :string, 11
      optional :deliver_at, :message, 12, "google.protobuf.Timestamp"
      optional :external_id, :string, 13
      optional :ttl_seconds, :message, 14, "google.protobuf.UInt32Value"
    end
    add_message "aqueduct.api.v1.SendBatchRequest" do
      repeated :send_requests, :message, 1, "aqueduct.api.v1.SendRequest"
    end
    add_message "aqueduct.api.v1.SendResponse" do
      optional :job_id, :string, 1
      optional :backend_name, :string, 2
    end
    add_message "aqueduct.api.v1.BatchMessageResponse" do
      optional :index, :int32, 1
      optional :job_id, :string, 2
      optional :error, :string, 3
    end
    add_message "aqueduct.api.v1.SendBatchResponse" do
      repeated :batch_message_responses, :message, 1, "aqueduct.api.v1.BatchMessageResponse"
      optional :backend_name, :string, 2
    end
    add_message "aqueduct.api.v1.ReceiveRequest" do
      optional :worker, :message, 1, "aqueduct.api.v1.Worker"
      optional :app, :string, 2
      repeated :queues, :string, 3
      optional :timeout_ms, :int32, 4
      optional :drop_job, :bool, 5
      optional :client_id, :string, 6
      optional :bypass_pausing, :bool, 7
      optional :fanout, :bool, 8
    end
    add_message "aqueduct.api.v1.ReceiveResponse" do
      optional :app, :string, 1
      optional :queue, :string, 2
      optional :job_id, :string, 4
      optional :payload, :bytes, 3
      map :headers, :string, :string, 5
      optional :delivery_attempt, :uint32, 6
      optional :max_delivery_attempts, :uint32, 7
      optional :sent_at, :message, 8, "google.protobuf.Timestamp"
      optional :backend_name, :string, 9
      optional :backoff_seconds, :int32, 10
    end
    add_message "aqueduct.api.v1.HeartbeatRequest" do
      optional :app, :string, 1
      optional :queue, :string, 2
      optional :job_id, :string, 3
      optional :client_id, :string, 4
    end
    add_message "aqueduct.api.v1.HeartbeatResponse" do
      optional :backend_name, :string, 1
    end
    add_message "aqueduct.api.v1.AckRequest" do
      optional :app, :string, 1
      optional :queue, :string, 2
      optional :job_id, :string, 3
      optional :status, :enum, 4, "aqueduct.api.v1.AckRequest.Status"
      optional :client_id, :string, 5
    end
    add_enum "aqueduct.api.v1.AckRequest.Status" do
      value :NO_STATUS, 0
      value :SUCCESS, 1
      value :FAILURE, 2
    end
    add_message "aqueduct.api.v1.AckResponse" do
      optional :backend_name, :string, 1
    end
    add_message "aqueduct.api.v1.ListQueuesRequest" do
      optional :app, :string, 1
    end
    add_message "aqueduct.api.v1.ListQueuesResponse" do
      repeated :queues, :message, 1, "aqueduct.api.v1.Queue"
    end
    add_message "aqueduct.api.v1.QueueDepthRequest" do
      optional :app, :string, 1
      optional :queue, :string, 2
    end
    add_message "aqueduct.api.v1.QueueDepthResponse" do
      optional :app, :string, 1
      optional :queue, :string, 2
      optional :depth, :int64, 3
    end
    add_message "aqueduct.api.v1.PeekRequest" do
      optional :app, :string, 1
      optional :queue, :string, 2
      optional :count, :int32, 3
    end
    add_message "aqueduct.api.v1.PeekResponse" do
      optional :app, :string, 1
      optional :queue, :string, 2
      repeated :payloads, :bytes, 3
    end
    add_message "aqueduct.api.v1.InProgressJobsRequest" do
      optional :app, :string, 1
      optional :queue, :string, 2
      optional :include_payload, :bool, 3
    end
    add_message "aqueduct.api.v1.InProgressJobsResponse" do
      repeated :in_progress, :message, 1, "aqueduct.api.v1.InProgressJobsResponse.Job"
      optional :error, :string, 2
    end
    add_message "aqueduct.api.v1.InProgressJobsResponse.Job" do
      optional :app, :string, 2
      optional :queue, :string, 3
      optional :job_id, :string, 7
      optional :payload, :bytes, 4
      optional :delivered_at, :message, 5, "google.protobuf.Timestamp"
      optional :client_id, :string, 6
    end
    add_message "aqueduct.api.v1.ScheduledRequest" do
      optional :app, :string, 1
      optional :queue, :string, 2
      optional :count, :int32, 3
    end
    add_message "aqueduct.api.v1.ScheduledResponse" do
      repeated :scheduled, :message, 1, "aqueduct.api.v1.ScheduledResponse.Job"
      optional :error, :string, 2
    end
    add_message "aqueduct.api.v1.ScheduledResponse.Job" do
      optional :app, :string, 1
      optional :queue, :string, 2
      optional :job_id, :string, 3
      optional :deliver_at, :message, 4, "google.protobuf.Timestamp"
    end
    add_message "aqueduct.api.v1.ScheduledCountRequest" do
      optional :app, :string, 1
      optional :queue, :string, 2
    end
    add_message "aqueduct.api.v1.ScheduledCountResponse" do
      repeated :counts, :message, 1, "aqueduct.api.v1.ScheduledCountResponse.Count"
      optional :error, :string, 2
    end
    add_message "aqueduct.api.v1.ScheduledCountResponse.Count" do
      optional :app, :string, 1
      optional :queue, :string, 2
      optional :count, :int64, 3
    end
    add_message "aqueduct.api.v1.EmptyResponse" do
    end
    add_message "aqueduct.api.v1.Worker" do
      optional :id, :string, 5
      optional :pool, :string, 6
      map :tags, :string, :string, 4
    end
    add_message "aqueduct.api.v1.Queue" do
      optional :app, :string, 1
      optional :name, :string, 2
    end
    add_message "aqueduct.api.v1.PauseRequest" do
      optional :app, :string, 1
      optional :queue, :string, 2
    end
    add_message "aqueduct.api.v1.ResumeRequest" do
      optional :app, :string, 1
      optional :queue, :string, 2
    end
    add_message "aqueduct.api.v1.PausedRequest" do
      optional :app, :string, 1
    end
    add_message "aqueduct.api.v1.PausedResponse" do
      repeated :queues, :message, 1, "aqueduct.api.v1.Queue"
    end
    add_message "aqueduct.api.v1.Tag" do
      optional :name, :string, 1
      optional :value, :string, 2
    end
    add_message "aqueduct.api.v1.DisableSchedulingRequest" do
      optional :app, :string, 1
      optional :queue, :string, 2
    end
    add_message "aqueduct.api.v1.EnableSchedulingRequest" do
      optional :app, :string, 1
      optional :queue, :string, 2
    end
    add_message "aqueduct.api.v1.SchedulingDisabledRequest" do
    end
    add_message "aqueduct.api.v1.SchedulingDisabledResponse" do
      repeated :queues, :message, 1, "aqueduct.api.v1.Queue"
    end
    add_message "aqueduct.api.v1.AddWorkerLimitRequest" do
      optional :queue, :message, 1, "aqueduct.api.v1.Queue"
      optional :percent, :uint32, 2
    end
    add_message "aqueduct.api.v1.RemoveWorkerLimitRequest" do
      optional :queue, :message, 1, "aqueduct.api.v1.Queue"
    end
    add_message "aqueduct.api.v1.WorkerLimitsRequest" do
      optional :app, :string, 1
    end
    add_message "aqueduct.api.v1.WorkerLimitsResponse" do
      repeated :limits, :message, 1, "aqueduct.api.v1.WorkerLimitsResponse.WorkerLimit"
    end
    add_message "aqueduct.api.v1.WorkerLimitsResponse.WorkerLimit" do
      optional :queue, :message, 1, "aqueduct.api.v1.Queue"
      optional :percent, :uint32, 2
    end
    add_message "aqueduct.api.v1.PopRate" do
      optional :receives, :uint64, 2
      optional :interval_in_secs, :uint64, 3
    end
    add_message "aqueduct.api.v1.ThrottleConfig" do
      optional :queue, :message, 1, "aqueduct.api.v1.Queue"
      optional :rate, :message, 2, "aqueduct.api.v1.PopRate"
    end
    add_message "aqueduct.api.v1.EnableThrottlePopRequest" do
      optional :throttle_config, :message, 1, "aqueduct.api.v1.ThrottleConfig"
    end
    add_message "aqueduct.api.v1.DisableThrottlePopRequest" do
      optional :queue, :message, 1, "aqueduct.api.v1.Queue"
    end
    add_message "aqueduct.api.v1.GetEnabledThrottledQueuesRequest" do
      optional :app, :string, 1
    end
    add_message "aqueduct.api.v1.GetEnabledThrottledQueuesResponse" do
      repeated :throttle_configs, :message, 1, "aqueduct.api.v1.ThrottleConfig"
    end
    add_message "aqueduct.api.v1.BackendIdsRequest" do
      repeated :clients, :message, 1, "aqueduct.api.v1.BackendIdsRequest.Client"
      repeated :workers, :message, 2, "aqueduct.api.v1.Worker"
    end
    add_message "aqueduct.api.v1.BackendIdsRequest.Client" do
      optional :client_id, :string, 1
      map :tags, :string, :string, 2
    end
    add_message "aqueduct.api.v1.BackendIdsResponse" do
      map :backend_ids, :string, :message, 1, "google.protobuf.StringValue"
      map :backend_names, :string, :message, 2, "google.protobuf.StringValue"
    end
    add_message "aqueduct.api.v1.AddPausingRuleRequest" do
      optional :app, :string, 1
      optional :queue, :string, 2
      map :worker_tags, :string, :string, 3
    end
    add_message "aqueduct.api.v1.AddPausingRuleResponse" do
    end
    add_message "aqueduct.api.v1.RemovePausingRuleRequest" do
      optional :app, :string, 1
      optional :queue, :string, 2
      map :worker_tags, :string, :string, 3
    end
    add_message "aqueduct.api.v1.RemovePausingRuleResponse" do
    end
    add_message "aqueduct.api.v1.PausingRulesRequest" do
      optional :app, :string, 1
    end
    add_message "aqueduct.api.v1.PausingRulesResponse" do
      repeated :rules, :message, 1, "aqueduct.api.v1.PausingRulesResponse.Rule"
    end
    add_message "aqueduct.api.v1.PausingRulesResponse.Rule" do
      optional :app, :string, 1
      optional :queue, :string, 2
      map :worker_tags, :string, :string, 3
    end
    add_message "aqueduct.api.v1.DescribeQueuesRequest" do
    end
    add_message "aqueduct.api.v1.DescribeQueuesResponse" do
      repeated :clusters, :message, 1, "aqueduct.api.v1.DescribeQueuesResponse.ClusterQueueInfo"
    end
    add_message "aqueduct.api.v1.DescribeQueuesResponse.QueueInfo" do
      optional :queue, :message, 1, "aqueduct.api.v1.Queue"
      optional :is_paused, :bool, 2
      repeated :pausing_rules, :message, 3, "aqueduct.api.v1.PausingRulesResponse.Rule"
      optional :throttle_config, :message, 4, "aqueduct.api.v1.ThrottleConfig"
      optional :worker_limit, :message, 5, "aqueduct.api.v1.WorkerLimitsResponse.WorkerLimit"
      optional :depth, :int64, 6
    end
    add_message "aqueduct.api.v1.DescribeQueuesResponse.ClusterQueueInfo" do
      repeated :queues, :message, 1, "aqueduct.api.v1.DescribeQueuesResponse.QueueInfo"
      optional :backend_name, :string, 2
    end
    add_message "aqueduct.api.v1.EnableHighThroughputRequest" do
      optional :app, :string, 1
    end
    add_message "aqueduct.api.v1.DisableHighThroughputRequest" do
      optional :app, :string, 1
    end
    add_message "aqueduct.api.v1.HighThroughputEnabledRequest" do
      repeated :app, :string, 1
    end
    add_message "aqueduct.api.v1.HighThroughputEnabledResponse" do
    end
    add_message "aqueduct.api.v1.EnableHighThroughputTagRequest" do
      optional :tag, :message, 2, "aqueduct.api.v1.Tag"
    end
    add_message "aqueduct.api.v1.DisableHighThroughputTagRequest" do
      optional :tag, :message, 2, "aqueduct.api.v1.Tag"
    end
    add_message "aqueduct.api.v1.HighThroughputTagEnabledRequest" do
    end
    add_message "aqueduct.api.v1.HighThroughputTagEnabledResponse" do
      repeated :tag, :message, 2, "aqueduct.api.v1.Tag"
    end
    add_message "aqueduct.api.v1.StateTableCountsRequest" do
    end
    add_message "aqueduct.api.v1.StateTableCountsResponse" do
      repeated :total, :message, 1, "aqueduct.api.v1.StateTableCountsResponse.Count"
      repeated :per_queue, :message, 2, "aqueduct.api.v1.StateTableCountsResponse.QueueCount"
      repeated :per_node, :message, 3, "aqueduct.api.v1.StateTableCountsResponse.NodeCount"
      optional :error, :string, 4
    end
    add_message "aqueduct.api.v1.StateTableCountsResponse.Count" do
      optional :state, :string, 1
      optional :count, :uint64, 2
    end
    add_message "aqueduct.api.v1.StateTableCountsResponse.QueueCount" do
      optional :app, :string, 1
      optional :queue, :string, 2
      optional :state, :string, 3
      optional :count, :uint64, 4
    end
    add_message "aqueduct.api.v1.StateTableCountsResponse.NodeCount" do
      optional :node, :string, 1
      optional :state, :string, 2
      optional :count, :uint64, 3
    end
    add_message "aqueduct.api.v1.EnforceAuthRequest" do
      optional :app, :string, 1
    end
    add_message "aqueduct.api.v1.DisableAuthEnforcementRequest" do
      optional :app, :string, 1
    end
    add_message "aqueduct.api.v1.AddInactiveQueueRequest" do
      optional :app, :string, 1
      optional :queue, :string, 2
    end
    add_message "aqueduct.api.v1.AddInactiveQueueResponse" do
    end
    add_message "aqueduct.api.v1.RemoveInactiveQueueRequest" do
      optional :app, :string, 1
      optional :queue, :string, 2
    end
    add_message "aqueduct.api.v1.RemoveInactiveQueueResponse" do
    end
    add_message "aqueduct.api.v1.InactiveQueuesRequest" do
    end
    add_message "aqueduct.api.v1.InactiveQueuesResponse" do
      repeated :queues, :message, 1, "aqueduct.api.v1.Queue"
    end
    add_message "aqueduct.api.v1.GenerateApiKeyRequest" do
      optional :app, :string, 1
      optional :version, :uint32, 2
    end
    add_message "aqueduct.api.v1.GenerateApiKeyResponse" do
      optional :vault_app, :string, 1
      optional :key_name, :string, 2
    end
    add_message "aqueduct.api.v1.GetApiKeyRequest" do
      optional :app, :string, 1
      optional :version, :uint32, 2
    end
    add_message "aqueduct.api.v1.GetApiKeyResponse" do
      optional :app, :string, 1
      optional :version, :uint32, 2
      optional :api_key, :string, 3
    end
    add_message "aqueduct.api.v1.RevokeApiKeyRequest" do
      optional :app, :string, 1
      optional :version, :uint32, 2
    end
    add_message "aqueduct.api.v1.AuthTestRequest" do
      optional :app, :string, 1
    end
  end
end

module Aqueduct
  module Api
    module V1
      SendRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.SendRequest").msgclass
      SendBatchRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.SendBatchRequest").msgclass
      SendResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.SendResponse").msgclass
      BatchMessageResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.BatchMessageResponse").msgclass
      SendBatchResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.SendBatchResponse").msgclass
      ReceiveRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.ReceiveRequest").msgclass
      ReceiveResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.ReceiveResponse").msgclass
      HeartbeatRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.HeartbeatRequest").msgclass
      HeartbeatResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.HeartbeatResponse").msgclass
      AckRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.AckRequest").msgclass
      AckRequest::Status = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.AckRequest.Status").enummodule
      AckResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.AckResponse").msgclass
      ListQueuesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.ListQueuesRequest").msgclass
      ListQueuesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.ListQueuesResponse").msgclass
      QueueDepthRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.QueueDepthRequest").msgclass
      QueueDepthResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.QueueDepthResponse").msgclass
      PeekRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.PeekRequest").msgclass
      PeekResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.PeekResponse").msgclass
      InProgressJobsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.InProgressJobsRequest").msgclass
      InProgressJobsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.InProgressJobsResponse").msgclass
      InProgressJobsResponse::Job = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.InProgressJobsResponse.Job").msgclass
      ScheduledRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.ScheduledRequest").msgclass
      ScheduledResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.ScheduledResponse").msgclass
      ScheduledResponse::Job = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.ScheduledResponse.Job").msgclass
      ScheduledCountRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.ScheduledCountRequest").msgclass
      ScheduledCountResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.ScheduledCountResponse").msgclass
      ScheduledCountResponse::Count = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.ScheduledCountResponse.Count").msgclass
      EmptyResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.EmptyResponse").msgclass
      Worker = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.Worker").msgclass
      Queue = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.Queue").msgclass
      PauseRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.PauseRequest").msgclass
      ResumeRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.ResumeRequest").msgclass
      PausedRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.PausedRequest").msgclass
      PausedResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.PausedResponse").msgclass
      Tag = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.Tag").msgclass
      DisableSchedulingRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.DisableSchedulingRequest").msgclass
      EnableSchedulingRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.EnableSchedulingRequest").msgclass
      SchedulingDisabledRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.SchedulingDisabledRequest").msgclass
      SchedulingDisabledResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.SchedulingDisabledResponse").msgclass
      AddWorkerLimitRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.AddWorkerLimitRequest").msgclass
      RemoveWorkerLimitRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.RemoveWorkerLimitRequest").msgclass
      WorkerLimitsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.WorkerLimitsRequest").msgclass
      WorkerLimitsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.WorkerLimitsResponse").msgclass
      WorkerLimitsResponse::WorkerLimit = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.WorkerLimitsResponse.WorkerLimit").msgclass
      PopRate = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.PopRate").msgclass
      ThrottleConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.ThrottleConfig").msgclass
      EnableThrottlePopRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.EnableThrottlePopRequest").msgclass
      DisableThrottlePopRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.DisableThrottlePopRequest").msgclass
      GetEnabledThrottledQueuesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.GetEnabledThrottledQueuesRequest").msgclass
      GetEnabledThrottledQueuesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.GetEnabledThrottledQueuesResponse").msgclass
      BackendIdsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.BackendIdsRequest").msgclass
      BackendIdsRequest::Client = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.BackendIdsRequest.Client").msgclass
      BackendIdsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.BackendIdsResponse").msgclass
      AddPausingRuleRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.AddPausingRuleRequest").msgclass
      AddPausingRuleResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.AddPausingRuleResponse").msgclass
      RemovePausingRuleRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.RemovePausingRuleRequest").msgclass
      RemovePausingRuleResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.RemovePausingRuleResponse").msgclass
      PausingRulesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.PausingRulesRequest").msgclass
      PausingRulesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.PausingRulesResponse").msgclass
      PausingRulesResponse::Rule = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.PausingRulesResponse.Rule").msgclass
      DescribeQueuesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.DescribeQueuesRequest").msgclass
      DescribeQueuesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.DescribeQueuesResponse").msgclass
      DescribeQueuesResponse::QueueInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.DescribeQueuesResponse.QueueInfo").msgclass
      DescribeQueuesResponse::ClusterQueueInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.DescribeQueuesResponse.ClusterQueueInfo").msgclass
      EnableHighThroughputRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.EnableHighThroughputRequest").msgclass
      DisableHighThroughputRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.DisableHighThroughputRequest").msgclass
      HighThroughputEnabledRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.HighThroughputEnabledRequest").msgclass
      HighThroughputEnabledResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.HighThroughputEnabledResponse").msgclass
      EnableHighThroughputTagRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.EnableHighThroughputTagRequest").msgclass
      DisableHighThroughputTagRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.DisableHighThroughputTagRequest").msgclass
      HighThroughputTagEnabledRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.HighThroughputTagEnabledRequest").msgclass
      HighThroughputTagEnabledResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.HighThroughputTagEnabledResponse").msgclass
      StateTableCountsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.StateTableCountsRequest").msgclass
      StateTableCountsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.StateTableCountsResponse").msgclass
      StateTableCountsResponse::Count = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.StateTableCountsResponse.Count").msgclass
      StateTableCountsResponse::QueueCount = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.StateTableCountsResponse.QueueCount").msgclass
      StateTableCountsResponse::NodeCount = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.StateTableCountsResponse.NodeCount").msgclass
      EnforceAuthRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.EnforceAuthRequest").msgclass
      DisableAuthEnforcementRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.DisableAuthEnforcementRequest").msgclass
      AddInactiveQueueRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.AddInactiveQueueRequest").msgclass
      AddInactiveQueueResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.AddInactiveQueueResponse").msgclass
      RemoveInactiveQueueRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.RemoveInactiveQueueRequest").msgclass
      RemoveInactiveQueueResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.RemoveInactiveQueueResponse").msgclass
      InactiveQueuesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.InactiveQueuesRequest").msgclass
      InactiveQueuesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.InactiveQueuesResponse").msgclass
      GenerateApiKeyRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.GenerateApiKeyRequest").msgclass
      GenerateApiKeyResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.GenerateApiKeyResponse").msgclass
      GetApiKeyRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.GetApiKeyRequest").msgclass
      GetApiKeyResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.GetApiKeyResponse").msgclass
      RevokeApiKeyRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.RevokeApiKeyRequest").msgclass
      AuthTestRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("aqueduct.api.v1.AuthTestRequest").msgclass
    end
  end
end
