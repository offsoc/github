# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::V1::CustomerSuccessCampaignEmail`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::V1::CustomerSuccessCampaignEmail`.

class Hydro::Schemas::Github::V1::CustomerSuccessCampaignEmail
  sig do
    params(
      actor: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      business: T.nilable(Hydro::Schemas::Github::V1::Entities::Business),
      campaign_email_name: T.nilable(String),
      campaign_email_sent: T.nilable(T::Boolean),
      campaign_name: T.nilable(String),
      support_plan: T.nilable(String)
    ).void
  end
  def initialize(actor: nil, business: nil, campaign_email_name: nil, campaign_email_sent: nil, campaign_name: nil, support_plan: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def actor; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def actor=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Business)) }
  def business; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Business)).void }
  def business=(value); end

  sig { returns(String) }
  def campaign_email_name; end

  sig { params(value: String).void }
  def campaign_email_name=(value); end

  sig { returns(T::Boolean) }
  def campaign_email_sent; end

  sig { params(value: T::Boolean).void }
  def campaign_email_sent=(value); end

  sig { returns(String) }
  def campaign_name; end

  sig { params(value: String).void }
  def campaign_name=(value); end

  sig { void }
  def clear_actor; end

  sig { void }
  def clear_business; end

  sig { void }
  def clear_campaign_email_name; end

  sig { void }
  def clear_campaign_email_sent; end

  sig { void }
  def clear_campaign_name; end

  sig { void }
  def clear_support_plan; end

  sig { returns(String) }
  def support_plan; end

  sig { params(value: String).void }
  def support_plan=(value); end
end
