{"version":3,"file":"chunk-app_components_users_settings_two-factor-inline-expander-element_ts-xxxxxxxxxxxx.js","mappings":"k+BAQE,cAqBA,cA3BF,YACMA,uCAAuCC,YAO3CC,mBAAoB,CAEd,IAAI,CAACC,gBAAgB,EAAIC,OAAOC,QAAQ,CAACC,IAAI,GAAK,CAAC,CAAC,EAAE,IAAI,CAACH,gBAAgB,CAAC,CAAC,EAAI,CAAC,MAAI,CAAEI,IAC1F,IAAI,CAACC,gBAAgB,EAEzB,CAEAA,kBAAmB,CACkB,KAA/B,IAAI,CAACC,qBAAqB,EAAY,IAAI,CAACC,QAAQ,G,OAEjDH,EAAW,CAAC,MAAI,CAAEA,IACxB,C,0GAAA,IAAI,CAAEI,EAAAA,GAAAA,IAAAA,CAAN,IAAI,EACA,MAAI,CAAEJ,GACRK,SAASC,sBAAsB,CAAC,IAAI,CAACJ,qBAAqB,CAAC,CAAC,EAAE,CAAEK,eAAe,CAAC,UAEhFF,SAASC,sBAAsB,CAAC,IAAI,CAACJ,qBAAqB,CAAC,CAAC,EAAE,CAAEM,YAAY,CAAC,SAAU,QAE3F,C,8BAEA,S,sBAAA,QArBA,S,0BAAA,Q,kBAAA,M,UAACR,EAAW,G,CAqCd,EAhBE,aACE,GAAI,IAAI,CAACG,QAAQ,YAAYM,kBAAmB,CAC9C,IAAMC,EAAS,MAAI,CAAEV,GAAW,OAAS,OAGnCW,EAAaC,CAFL,IAAI,CAACT,QAAQ,CAACU,YAAY,CAAC,eAAiB,EAAC,EAElCC,KAAK,CAAC,KAAKC,KAAK,CAAC,GAC1CJ,EAAWK,OAAO,CAACN,GACnB,IAAMO,EAAWN,EAAWO,IAAI,CAAC,IAEjC,KAAI,CAACf,QAAQ,CAACG,sBAAsB,CAAC,eAAe,CAAC,EAAE,CAAEa,WAAW,CAAG,MAAI,CAAEnB,GAAW,OAAS,OACjG,IAAI,CAACG,QAAQ,CAACK,YAAY,CAAC,gBAAiB,MAAI,CAAER,GAASoB,QAAQ,IACnE,IAAI,CAACjB,QAAQ,CAACK,YAAY,CAAC,aAAcS,EAC3C,MAAW,IAAI,CAACd,QAAQ,YAAYkB,kBAClC,KAAI,CAAClB,QAAQ,CAACmB,KAAK,CAAG,MAAI,CAAEtB,GAAW,OAAS,MAAK,CAEzD,CAzCIP,EACG8B,UAAU,CAAG,G,GACnBC,EAAAA,EAAIA,C,CAFD/B,EAAAA,SAAAA,CAAAA,wBAAAA,KAAAA,G,GAGH+B,EAAAA,EAAIA,C,CAHD/B,EAAAA,SAAAA,CAAAA,mBAAAA,KAAAA,G,GAIHgC,EAAAA,EAAMA,C,CAJHhC,EAAAA,SAAAA,CAAAA,WAAAA,KAAAA,GAAAA,EAAAA,EAAAA,CADLiC,EAAAA,EAAUA,C,CACLjC,E","sources":["app/components/users/settings/two-factor-inline-expander-element.ts"],"sourcesContent":["import {attr, controller, target} from '@github/catalyst'\n\n@controller\nclass TwoFactorInlineExpanderElement extends HTMLElement {\n  static attrPrefix = ''\n  @attr inlineContentSelector: string\n  @attr expandWithAnchor: string\n  @target expander: HTMLButtonElement | HTMLInputElement\n  #expanded = false\n\n  connectedCallback() {\n    // if window.location anchor matches expandWithAnchor call toggleInlineEdit\n    if (this.expandWithAnchor && window.location.hash === `#${this.expandWithAnchor}` && !this.#expanded) {\n      this.toggleInlineEdit()\n    }\n  }\n\n  toggleInlineEdit() {\n    if (this.inlineContentSelector === '' || !this.expander) return\n\n    this.#expanded = !this.#expanded\n    this.#setExpanderText()\n    if (this.#expanded) {\n      document.getElementsByClassName(this.inlineContentSelector)[0]!.removeAttribute('hidden')\n    } else {\n      document.getElementsByClassName(this.inlineContentSelector)[0]!.setAttribute('hidden', 'true')\n    }\n  }\n\n  #setExpanderText() {\n    if (this.expander instanceof HTMLButtonElement) {\n      const action = this.#expanded ? 'Hide' : 'Edit'\n      const label = this.expander.getAttribute('aria-label') || ''\n      // trim the button label from the front of the aria-label (e.g. 'Edit' or 'Hide'), then add the new action\n      const labelParts = label.split(' ').slice(1)\n      labelParts.unshift(action)\n      const newLabel = labelParts.join(' ')\n\n      this.expander.getElementsByClassName('Button-label')[0]!.textContent = this.#expanded ? 'Hide' : 'Edit'\n      this.expander.setAttribute('aria-expanded', this.#expanded.toString())\n      this.expander.setAttribute('aria-label', newLabel)\n    } else if (this.expander instanceof HTMLInputElement) {\n      this.expander.value = this.#expanded ? 'Hide' : 'Edit'\n    }\n  }\n}\n"],"names":["TwoFactorInlineExpanderElement","HTMLElement","connectedCallback","expandWithAnchor","window","location","hash","expanded","toggleInlineEdit","inlineContentSelector","expander","setExpanderText","document","getElementsByClassName","removeAttribute","setAttribute","HTMLButtonElement","action","labelParts","label","getAttribute","split","slice","unshift","newLabel","join","textContent","toString","HTMLInputElement","value","attrPrefix","attr","target","controller"],"sourceRoot":""}