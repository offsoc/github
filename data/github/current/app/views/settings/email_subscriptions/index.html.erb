<% page_info class: "f4" %>

<div class="container-md py-5">
  <% from_settings = local_assigns[:email].present? %>

  <% form_path = from_settings ? update_settings_email_subscriptions_path(backlink: from_settings) : update_settings_email_subscriptions_path(cpm_params, backlink: from_settings) %>

  <%# Add a spinner to the Rails view while the react partial is loading %>
  <div id="js-rails-loading">
    <%= render(Primer::Beta::Spinner.new(size: :large, classes: "octospinner", mx: :auto)) %>
    <p>⏳Please wait while we find your subscriptions...⌛</p>
  </div>

  <%= form_with(
    url: form_path,
    method: "PATCH",
    data: {
      target: "email-preferences-form.form"
    },
  ) do %>
    <%= csrf_hidden_input_for form_path, data: { target: "email-preferences-form.csrf" } %>

    <% if from_settings %>
      <%= render_react_partial name: "email-subscription-form", ssr: false, props: {
        paramEmail: email
      } %>
    <% else %>
      <%= render_react_partial name: "email-subscription-form", ssr: false, props: {
        paramCTID: cpm_params[:CTID],
        paramECID: cpm_params[:ECID],
        paramK: cpm_params[:K],
        paramD: cpm_params[:D],
        paramPID: cpm_params[:PID],
        paramTID: cpm_params[:TID],
        paramCMID: cpm_params[:CMID],
        paramMK: cpm_params[:MK],
      } %>
    <% end %>

    <div class="d-flex mt-4 flex-items-center">
      <%= render Primer::Beta::Button.new(
        type: :submit,
        disabled: true,
        data: {
          disable_with: "Save subscription preferences #{render(Primer::Beta::Spinner.new(size: :small))}",
          target: "email-preferences-form.submit",
        },
        id: "js-submit"
      ) do %>
        <%= _("Save subscription preferences") %>
      <% end %>

      <% if from_settings %>
        <%= render(Primer::Beta::Link.new(href: settings_email_preferences_path, ml: 2)) { _("Back to email settings") } %>
      <% end %>
    </div>
  <% end %>
</div>
