#!/usr/bin/env safe-ruby
# frozen_string_literal: true
require_relative "../script/seeds/runners/issues_react"
require_relative "../config/environment"

unless Rails.env.development?
  raise "This is a dev-only script"
end

disable_ssr = ARGV.include?("--disable-ssr")

puts "Setting up feature flags..."

# Issues React
GitHub.flipper[:issues_react].enable # feature flag for issue#dashboard
GitHub.flipper[:issues_react_v2].enable # feature flag for issue#create, issue#show, issue#index
GitHub.flipper[:memex_single_select_field_option_id].enable
GitHub.flipper[:react_sandbox].enable
GitHub.flipper[:issues_react_global_add].enable
GitHub.flipper[:api_insights_rest].enable
GitHub.flipper[:issues_react_dashboard_saved_views].enable
GitHub.flipper[:issues_react_classic_projects].enable
GitHub.flipper[:issues_react_checklist_improvements].enable
GitHub.flipper[:issues_react_use_defer_directive].enable
GitHub.flipper[:issues_react_shift_select].enable
GitHub.flipper[:issues_react_create_new_label].enable
GitHub.flipper[:emoji_suggestions_react_skin_tone].enable
GitHub.flipper[:labels_es_query_trigram].enable
GitHub.flipper[:sub_issues].enable

# SSR
if disable_ssr
  GitHub.flipper[:disable_issues_react_ssr].enable
end

# Live Updates
GitHub.flipper[:graphql_subscriptions].enable
GitHub.flipper[:pull_request_sub_triggers].enable
GitHub.flipper[:use_pull_request_subscriptions_enabled].enable

# Tasklists
GitHub.flipper[:tasklist_block].enable
GitHub.flipper[:tasklist_block_markdown_at_rest].enable

# Pull request dashboard
GitHub.flipper[:new_pulls_dashboard].enable

# Issue types
GitHub.flipper[:issue_types].enable

puts "Creating issue dashboard feature preview..."
ff = FlipperFeature.find_by_name("issues_react")
Feature.create(public_name: "Issues React dashboard experience", slug: "issues_react", flipper_feature: ff, feedback_link: "https://github.com")
monalisa = User.find_by_login("monalisa")
monalisa.enable_feature_preview(:issues_react)

puts "Creating issues_react_v2 feature preview..."
ff = FlipperFeature.find_by_name("issues_react_v2")
Feature.create(public_name: "Issues React v2 experience", slug: "issues_react_v2", flipper_feature: ff, feedback_link: "https://github.com")
monalisa = User.find_by_login("monalisa")
monalisa.enable_feature_preview(:issues_react_v2)

puts "Seeding issues react..."
Seeds::Runner::IssuesReact.execute({ minimal: true })

puts "Repairing Elastometer indexes..."
Elastomer::App.run ["repair"]

puts "Issues React is setup!"
