{"version":3,"file":"ui_packages_react-core_create-browser-history_ts-ui_packages_safe-storage_safe-storage_ts-ui_-11450c-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/client-env/client-env.ts","ui/packages/commits/components/Commit/comments/__generated__/DiscussionComments_ReactionViewerLazyQuery.graphql.ts","ui/packages/commits/hooks/use-commenting.ts","ui/packages/commits/hooks/use-commits-app-payload.ts","ui/packages/commits/hooks/use-fetch-commit-thread.ts","ui/packages/commits/utils/short-sha.ts","ui/packages/commits/utils/weirich-commit.ts","ui/packages/document-ready/document-ready.ts","ui/packages/feature-flags/feature-flags.ts","ui/packages/react-core/app-context.ts","ui/packages/react-core/create-browser-history.ts","ui/packages/react-core/expected-errors.ts","ui/packages/react-core/use-color-modes.ts","ui/packages/runtime-environment/runtime-environment.ts","ui/packages/safe-storage/safe-storage.ts","ui/packages/stats/stats.ts","ui/packages/commits/components/AsyncChecksStatusBadge.tsx","ui/packages/commits/components/Commit/comments/Comment.module.css","ui/packages/commits/components/Commit/comments/CommentLoading.tsx","ui/packages/commits/components/Commit/comments/CommitCommentEditor.tsx","ui/packages/commits/components/Commit/comments/UpdateCommitComment.tsx","ui/packages/commits/components/Commit/comments/ExistingCommitComments.tsx","ui/packages/commits/components/Commit/comments/LockConversationDialog.tsx","ui/packages/commits/components/Commit/comments/NewCommitComment.tsx","ui/packages/commits/components/Commit/comments/NotificationFooter.tsx","ui/packages/commits/components/Commit/comments/DiscussionComments.tsx","ui/packages/commits/components/CommitAttribution.tsx","ui/packages/commits/components/CommitRowBadges.tsx","ui/packages/commits/components/Commits/TimelineRow.tsx","ui/packages/commits/components/CopySHA.tsx","ui/packages/commits/components/Panel.tsx","ui/packages/commits/contexts/CommitsLoggingContext.tsx","ui/packages/commits/contexts/DeferredCommitDataContext.tsx","ui/packages/commits/contexts/DiscussionCommentsContext.tsx","ui/packages/commits/contexts/InlineCommentsContext.tsx","ui/packages/commits/components/CommitRowActions.tsx","ui/packages/commits/components/Commits/CommitRow.tsx","ui/packages/commits/components/Commits/CommitGroup.tsx","ui/packages/commits/shared/Commits.tsx","ui/packages/list-view/src/ListItem/Metadata.module.css","ui/packages/list-view/src/ListItem/Metadata.tsx","ui/packages/react-core/AppContextProvider.tsx","ui/packages/react-core/PrimerFeatureFlags.tsx","ui/packages/react-core/BaseProviders.tsx","ui/packages/toast/Toast.tsx","ui/packages/toast/Toasts.tsx","ui/packages/react-core/SSRErrorToast.tsx","ui/packages/react-core/CommonElements.tsx","ui/packages/reaction-viewer/components/ReactionViewerLoading.tsx"],"sourcesContent":["export interface ClientEnvironment {\n  readonly locale: string\n  readonly featureFlags: string[]\n}\n\nlet env: ClientEnvironment | undefined\n\nexport function getEnv() {\n  if (!env) {\n    throw new Error(\n      'Client env was requested before it was loaded. This likely means you are attempting to use client env at the module level in SSR, which is not supported. Please move your client env usage into a function.',\n    )\n  }\n\n  return env\n}\n\nexport function getLocale() {\n  return env?.locale ?? 'en-US'\n}\n\nfunction loadEnv() {\n  if (typeof document !== 'undefined') {\n    const envTag = document.getElementById('client-env')\n    if (envTag) {\n      try {\n        env = JSON.parse(envTag.textContent || '')\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error('Error parsing client-env', error)\n      }\n    }\n  }\n}\n\n// Automatically load the env on initial page load\nloadEnv()\n\n// This is a special helper method for setting the env in the SSR environment only\nexport function setClientEnvForSsr(clientEnv: ClientEnvironment | undefined) {\n  env = clientEnv\n}\n\n// This env object is used as a default for tests only and is not included in production builds\nexport const clientEnvForTests: ClientEnvironment = {\n  locale: 'en',\n  featureFlags: ['test_flag'],\n}\n\nexport function _resetForTests({loadNewEnv, forceUndefined}: {loadNewEnv: boolean; forceUndefined?: boolean}) {\n  // forget the current env\n  env = forceUndefined ? undefined : clientEnvForTests\n\n  if (loadNewEnv) {\n    // load the latest env\n    loadEnv()\n  }\n}\n","/**\n * @generated SignedSource<<4ce7348d76545f31c24e294ad65529b1>>\n * @relayHash 45c197ee387fbe2f93ba030b52920350\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\n// @relayRequestID 45c197ee387fbe2f93ba030b52920350\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type DiscussionComments_ReactionViewerLazyQuery$variables = {\n  id: string;\n};\nexport type DiscussionComments_ReactionViewerLazyQuery$data = {\n  readonly node: {\n    readonly comments?: {\n      readonly nodes: ReadonlyArray<{\n        readonly id: string;\n        readonly \" $fragmentSpreads\": FragmentRefs<\"MarkdownEditHistoryViewer_comment\" | \"ReactionViewerGroups\">;\n      } | null | undefined> | null | undefined;\n    };\n  } | null | undefined;\n};\nexport type DiscussionComments_ReactionViewerLazyQuery = {\n  response: DiscussionComments_ReactionViewerLazyQuery$data;\n  variables: DiscussionComments_ReactionViewerLazyQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"id\"\n  }\n],\nv2 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"last\",\n    \"value\": 60\n  }\n],\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"__typename\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"login\",\n  \"storageKey\": null\n},\nv6 = [\n  (v5/*: any*/)\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"DiscussionComments_ReactionViewerLazyQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": null,\n        \"kind\": \"LinkedField\",\n        \"name\": \"node\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"InlineFragment\",\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": (v2/*: any*/),\n                \"concreteType\": \"CommitCommentConnection\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"comments\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"CommitComment\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"nodes\",\n                    \"plural\": true,\n                    \"selections\": [\n                      (v3/*: any*/),\n                      {\n                        \"args\": null,\n                        \"kind\": \"FragmentSpread\",\n                        \"name\": \"MarkdownEditHistoryViewer_comment\"\n                      },\n                      {\n                        \"args\": null,\n                        \"kind\": \"FragmentSpread\",\n                        \"name\": \"ReactionViewerGroups\"\n                      }\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": \"comments(last:60)\"\n              }\n            ],\n            \"type\": \"Commit\",\n            \"abstractKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"DiscussionComments_ReactionViewerLazyQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": null,\n        \"kind\": \"LinkedField\",\n        \"name\": \"node\",\n        \"plural\": false,\n        \"selections\": [\n          (v4/*: any*/),\n          (v3/*: any*/),\n          {\n            \"kind\": \"InlineFragment\",\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": (v2/*: any*/),\n                \"concreteType\": \"CommitCommentConnection\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"comments\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"CommitComment\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"nodes\",\n                    \"plural\": true,\n                    \"selections\": [\n                      (v3/*: any*/),\n                      {\n                        \"kind\": \"InlineFragment\",\n                        \"selections\": [\n                          {\n                            \"alias\": null,\n                            \"args\": null,\n                            \"kind\": \"ScalarField\",\n                            \"name\": \"viewerCanReadUserContentEdits\",\n                            \"storageKey\": null\n                          },\n                          {\n                            \"alias\": null,\n                            \"args\": null,\n                            \"kind\": \"ScalarField\",\n                            \"name\": \"lastEditedAt\",\n                            \"storageKey\": null\n                          },\n                          {\n                            \"alias\": null,\n                            \"args\": null,\n                            \"concreteType\": \"UserContentEdit\",\n                            \"kind\": \"LinkedField\",\n                            \"name\": \"lastUserContentEdit\",\n                            \"plural\": false,\n                            \"selections\": [\n                              {\n                                \"alias\": null,\n                                \"args\": null,\n                                \"concreteType\": null,\n                                \"kind\": \"LinkedField\",\n                                \"name\": \"editor\",\n                                \"plural\": false,\n                                \"selections\": [\n                                  (v4/*: any*/),\n                                  {\n                                    \"alias\": null,\n                                    \"args\": null,\n                                    \"kind\": \"ScalarField\",\n                                    \"name\": \"url\",\n                                    \"storageKey\": null\n                                  },\n                                  (v5/*: any*/),\n                                  (v3/*: any*/)\n                                ],\n                                \"storageKey\": null\n                              },\n                              (v3/*: any*/)\n                            ],\n                            \"storageKey\": null\n                          }\n                        ],\n                        \"type\": \"Comment\",\n                        \"abstractKey\": \"__isComment\"\n                      },\n                      {\n                        \"kind\": \"InlineFragment\",\n                        \"selections\": [\n                          {\n                            \"alias\": null,\n                            \"args\": null,\n                            \"concreteType\": \"ReactionGroup\",\n                            \"kind\": \"LinkedField\",\n                            \"name\": \"reactionGroups\",\n                            \"plural\": true,\n                            \"selections\": [\n                              {\n                                \"alias\": null,\n                                \"args\": null,\n                                \"kind\": \"ScalarField\",\n                                \"name\": \"content\",\n                                \"storageKey\": null\n                              },\n                              {\n                                \"alias\": null,\n                                \"args\": [\n                                  {\n                                    \"kind\": \"Literal\",\n                                    \"name\": \"first\",\n                                    \"value\": 5\n                                  }\n                                ],\n                                \"concreteType\": \"ReactorConnection\",\n                                \"kind\": \"LinkedField\",\n                                \"name\": \"reactors\",\n                                \"plural\": false,\n                                \"selections\": [\n                                  {\n                                    \"alias\": null,\n                                    \"args\": null,\n                                    \"concreteType\": null,\n                                    \"kind\": \"LinkedField\",\n                                    \"name\": \"nodes\",\n                                    \"plural\": true,\n                                    \"selections\": [\n                                      (v4/*: any*/),\n                                      {\n                                        \"kind\": \"InlineFragment\",\n                                        \"selections\": (v6/*: any*/),\n                                        \"type\": \"User\",\n                                        \"abstractKey\": null\n                                      },\n                                      {\n                                        \"kind\": \"InlineFragment\",\n                                        \"selections\": (v6/*: any*/),\n                                        \"type\": \"Bot\",\n                                        \"abstractKey\": null\n                                      },\n                                      {\n                                        \"kind\": \"InlineFragment\",\n                                        \"selections\": (v6/*: any*/),\n                                        \"type\": \"Organization\",\n                                        \"abstractKey\": null\n                                      },\n                                      {\n                                        \"kind\": \"InlineFragment\",\n                                        \"selections\": (v6/*: any*/),\n                                        \"type\": \"Mannequin\",\n                                        \"abstractKey\": null\n                                      },\n                                      {\n                                        \"kind\": \"InlineFragment\",\n                                        \"selections\": [\n                                          (v3/*: any*/)\n                                        ],\n                                        \"type\": \"Node\",\n                                        \"abstractKey\": \"__isNode\"\n                                      }\n                                    ],\n                                    \"storageKey\": null\n                                  },\n                                  {\n                                    \"alias\": null,\n                                    \"args\": null,\n                                    \"kind\": \"ScalarField\",\n                                    \"name\": \"totalCount\",\n                                    \"storageKey\": null\n                                  }\n                                ],\n                                \"storageKey\": \"reactors(first:5)\"\n                              },\n                              {\n                                \"alias\": null,\n                                \"args\": null,\n                                \"kind\": \"ScalarField\",\n                                \"name\": \"viewerHasReacted\",\n                                \"storageKey\": null\n                              }\n                            ],\n                            \"storageKey\": null\n                          }\n                        ],\n                        \"type\": \"Reactable\",\n                        \"abstractKey\": \"__isReactable\"\n                      }\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": \"comments(last:60)\"\n              }\n            ],\n            \"type\": \"Commit\",\n            \"abstractKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": \"45c197ee387fbe2f93ba030b52920350\",\n    \"metadata\": {},\n    \"name\": \"DiscussionComments_ReactionViewerLazyQuery\",\n    \"operationKind\": \"query\",\n    \"text\": null\n  }\n};\n})();\n\n(node as any).hash = \"0a8f47728f3a4b78c640988ee4109de9\";\n\nexport default node;\n","import {useCurrentRepository} from '@github-ui/current-repository'\nimport {encodePart} from '@github-ui/paths'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport type {SafeHTMLString} from '@github-ui/safe-html'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport {useConfirm} from '@primer/react'\nimport {useCallback, useMemo} from 'react'\n\nimport type {CommitComment, CommitPayload} from '../types/commit-types'\n\nexport type Result = {\n  error: Error | null\n  comment: CommitComment | null\n}\n\nexport type EditResult = {\n  error: Error | null\n  updatedFields: Pick<CommitComment, 'body' | 'bodyVersion' | 'htmlBody'> | null\n}\n\nexport type DeleteResult = 'success' | 'error' | 'canceled'\nexport type HideResult = 'success' | 'error'\n\ntype UpdateCommentResponse = {\n  source: string\n  bodyVersion: string\n  body: SafeHTMLString\n}\n\nexport function useCommenting() {\n  const repo = useCurrentRepository()\n  const confirm = useConfirm()\n  const payload = useRoutePayload<CommitPayload>()\n  const {commit} = payload\n  const baseUrl = `/${encodePart(repo.ownerLogin)}/${encodePart(repo.name)}/commit_comment`\n  const createUrl = `${baseUrl}/create`\n\n  const addComment = useCallback(\n    async (markdown: string, path?: string, position?: string): Promise<Result> => {\n      const formData = new FormData()\n\n      formData.append('commit_id', commit.oid)\n      formData.append('comment[body]', markdown)\n\n      if (path && position) {\n        formData.append('path', path)\n        formData.append('position', position.toString())\n      }\n\n      const response = await verifiedFetch(createUrl, {\n        method: 'POST',\n        body: formData,\n      })\n\n      if (response.ok) {\n        const comment: CommitComment = (await response.json()).comment\n\n        return {\n          error: null,\n          comment,\n        }\n      } else {\n        return {\n          error: new Error('Failed to add comment'),\n          comment: null,\n        }\n      }\n    },\n    [commit.oid, createUrl],\n  )\n\n  const editComment = useCallback(\n    async (markdown: string, comment: Pick<CommitComment, 'id' | 'bodyVersion'>): Promise<EditResult> => {\n      const formData = new FormData()\n\n      formData.append('_method', 'put')\n      formData.append('commit_comment[id]', comment.id.toString())\n      formData.append('commit_comment[body]', markdown)\n      formData.append('commit_comment[bodyVersion]', comment.bodyVersion)\n\n      const response = await verifiedFetch(baseUrl, {\n        method: 'POST',\n        body: formData,\n      })\n\n      if (response.ok) {\n        const json: UpdateCommentResponse = await response.json()\n\n        return {\n          error: null,\n          updatedFields: {\n            body: json.source,\n            bodyVersion: json.bodyVersion,\n            htmlBody: json.body,\n          },\n        }\n      } else {\n        return {\n          error: new Error('Failed to edit comment'),\n          updatedFields: null,\n        }\n      }\n    },\n    [baseUrl],\n  )\n\n  const deleteComment = useCallback(\n    async (commentId: string): Promise<DeleteResult> => {\n      const deleteConfirmed = await confirm({\n        content: 'Are you sure you want to delete this comment?',\n        title: 'Delete comment',\n        confirmButtonContent: 'Delete',\n        confirmButtonType: 'danger',\n      })\n\n      if (!deleteConfirmed) {\n        return 'canceled'\n      }\n\n      const formData = new FormData()\n\n      formData.append('_method', 'delete')\n      formData.append('commit_comment[id]', commentId)\n\n      const response = await verifiedFetch(baseUrl, {\n        method: 'POST',\n        body: formData,\n      })\n\n      if (response.ok) {\n        return 'success'\n      } else {\n        return 'error'\n      }\n    },\n    [baseUrl, confirm],\n  )\n\n  const hideComment = useCallback(\n    async (commentId: string, reason: string): Promise<HideResult> => {\n      const formData = new FormData()\n      formData.append('_method', 'put')\n      formData.append('classifier', reason)\n\n      const response = await verifiedFetch(`${baseUrl}/${commentId}/minimize`, {\n        method: 'POST',\n        body: formData,\n        headers: {\n          Accept: 'application/json',\n        },\n      })\n\n      if (response.ok) {\n        return 'success'\n      } else {\n        return 'error'\n      }\n    },\n    [baseUrl],\n  )\n\n  const unhideComment = useCallback(\n    async (commentId: string): Promise<HideResult> => {\n      const formData = new FormData()\n      formData.append('_method', 'put')\n\n      const response = await verifiedFetch(`${baseUrl}/${commentId}/unminimize`, {\n        method: 'POST',\n        body: formData,\n        headers: {\n          Accept: 'application/json',\n        },\n      })\n\n      if (response.ok) {\n        return 'success'\n      } else {\n        return 'error'\n      }\n    },\n    [baseUrl],\n  )\n\n  return useMemo(() => {\n    return {\n      addComment,\n      editComment,\n      deleteComment,\n      hideComment,\n      unhideComment,\n    }\n  }, [addComment, deleteComment, editComment, hideComment, unhideComment])\n}\n","import {useAppPayload} from '@github-ui/react-core/use-app-payload'\n\nexport interface CommitsAppPayload {\n  helpUrl: string\n  findFileWorkerPath: string\n  findInFileWorkerPath: string\n  findInDiffWorkerPath: string\n  githubDevUrl: string\n}\n\nexport function useCommitsAppPayload() {\n  return useAppPayload<CommitsAppPayload>()\n}\n","import type {CommentAuthorAssociation} from '@github-ui/commenting/IssueCommentHeader.graphql'\nimport type {Comment, Thread} from '@github-ui/conversations'\nimport type {Repository} from '@github-ui/current-repository'\nimport {commitInlineCommentsPath} from '@github-ui/paths'\nimport {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {useCallback} from 'react'\n\nimport {useInlineComments} from '../contexts/InlineCommentsContext'\nimport type {CommitComment} from '../types/commit-types'\nimport type {Commit} from '../types/shared'\nimport {shortSha} from '../utils/short-sha'\n\nexport function useFetchThread({\n  repo,\n  commit,\n  viewerCanReply,\n}: {\n  repo: Repository\n  commit: Commit\n  viewerCanReply: boolean\n}) {\n  const {addComments} = useInlineComments()\n\n  return useCallback(\n    (threadId: string) => {\n      return new Promise<Thread | undefined>(async (resolve, reject) => {\n        const [path, position] = threadId.split('::')\n\n        if (!path || !position) {\n          reject(new Error('Invalid threadId'))\n          return\n        }\n\n        const response = await verifiedFetchJSON(\n          commitInlineCommentsPath({\n            owner: repo.ownerLogin,\n            repo: repo.name,\n            commitOid: commit.oid,\n            path,\n            position,\n          }),\n        )\n\n        if (response.ok) {\n          const data = await response.json()\n\n          addComments(data.comments, path, position) // sync comments with the context\n\n          const thread = data.comments ? makeThread(data.comments, commit, repo, viewerCanReply, threadId) : undefined\n          resolve(thread)\n        } else {\n          reject(new Error('Failed to fetch thread'))\n        }\n      })\n    },\n    [addComments, commit, repo, viewerCanReply],\n  )\n}\n\nfunction makeThread(\n  commitComments: CommitComment[],\n  commit: Commit,\n  repo: Repository,\n  viewerCanReply: boolean,\n  threadId: string,\n): Thread {\n  const comments: Thread['commentsData']['comments'] = commitComments.map(c => {\n    return mapCommitCommentToComment(c, commit, repo)\n  })\n\n  const commentData: Thread['commentsData'] = {\n    comments,\n  }\n\n  return {\n    commentsData: commentData,\n    id: threadId,\n    viewerCanReply,\n  }\n}\n\nexport function mapCommitCommentToComment(comment: CommitComment, commit: Commit, repo: Repository): Comment {\n  const commentData: Omit<Comment, ' $fragmentSpreads'> = {\n    // TODO - fix these three fields?\n    publishedAt: undefined,\n    state: '',\n    viewerRelationship: '',\n\n    id: comment.relayId,\n    databaseId: comment.id,\n    body: comment.body,\n    bodyHTML: comment.htmlBody,\n    createdAt: comment.createdAt,\n    url: `${ssrSafeWindow?.location}#${comment.urlFragment}`,\n    currentDiffResourcePath: `#${comment.urlFragment}`,\n    authorAssociation: comment.authorAssociation?.toUpperCase() as CommentAuthorAssociation,\n    author: {\n      id: comment.author.id,\n      login: comment.author.login,\n      avatarUrl: comment.author.avatarUrl,\n      url: '',\n    },\n    isHidden: comment.isHidden,\n    lastUserContentEdit: comment.lastUserContentEdit,\n    minimizedReason: comment.minimizedReason,\n    subjectType: 'commit',\n    viewerCanMinimize: comment.viewerCanMinimize,\n    viewerCanSeeMinimizeButton: comment.viewerCanMinimize,\n    viewerCanSeeUnminimizeButton: comment.viewerCanMinimize,\n    viewerCanDelete: comment.viewerCanDelete,\n    viewerCanUpdate: comment.viewerCanUpdate,\n    viewerCanReport: comment.viewerCanReport,\n    viewerCanReportToMaintainer: comment.viewerCanReportToMaintainer,\n    viewerCanBlockFromOrg: comment.viewerCanBlockFromOrg,\n    viewerCanUnblockFromOrg: comment.viewerCanUnblockFromOrg,\n    viewerDidAuthor: comment.viewerDidAuthor,\n    reference: {\n      number: undefined,\n      text: shortSha(commit.oid),\n      author: {\n        login: commit.authors.length > 0 ? commit.authors[0]?.login ?? '' : '',\n      },\n    },\n    repository: {\n      id: repo.id.toString(),\n      isPrivate: repo.private,\n      name: repo.name,\n      owner: {\n        id: repo.ownerLogin,\n        login: repo.ownerLogin,\n        url: '',\n      },\n    },\n  }\n\n  return commentData as Comment\n}\n","export function shortSha(sha: string) {\n  return sha.slice(0, 7)\n}\n","export function isWeirichCommit(oid: string, repoId: number): boolean {\n  return oid === 'd28fac7f18aeacb00d8ad3460a0a5a901617c2d4' && repoId === 15803047\n}\n","import {ssrSafeDocument, ssrSafeWindow} from '@github-ui/ssr-utils'\n\n// Check if document has passed interactive state.\n//\n// The document has finished loading and the document has been parsed but\n// sub-resources such as images, stylesheets and frames are still loading.\n// The state indicates that the DOMContentLoaded event has been fired.\nexport const ready: Promise<void> = (function () {\n  if (ssrSafeDocument?.readyState === 'interactive' || ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise<void>(resolve => {\n      ssrSafeDocument?.addEventListener('DOMContentLoaded', () => {\n        resolve()\n      })\n    })\n  }\n})()\n\n// Check if document has passed loaded state.\n//\n// The document and all sub-resources have finished loading. The state\n// indicates that the load event has been fired.\nexport const loaded: Promise<unknown> = (function () {\n  if (ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise(resolve => {\n      ssrSafeWindow?.addEventListener('load', resolve)\n    })\n  }\n})()\n","import memoize from '@github/memoize'\nimport {getEnv} from '@github-ui/client-env'\nimport {IS_SERVER} from '@github-ui/ssr-utils'\n\nfunction getEnabledFeaturesSet(): Set<string> {\n  const features = getEnv().featureFlags\n  const featuresUpperCase = features.map(feature => feature.toLowerCase())\n  return new Set<string>(featuresUpperCase)\n}\n\nconst featuresSet =\n  IS_SERVER || process.env.NODE_ENV === 'test' ? getEnabledFeaturesSet : memoize(getEnabledFeaturesSet)\n\nexport function getEnabledFeatures(): string[] {\n  return Array.from(featuresSet())\n}\n\nexport function isFeatureEnabled(name: string): boolean {\n  return featuresSet().has(name.toLowerCase())\n}\n\n//exported to allow mocking in tests\nconst featureFlag = {isFeatureEnabled}\n\nexport {featureFlag}\n","import {createContext} from 'react'\nimport type {AppRegistration} from './react-app-registry'\nimport type {History} from '@remix-run/router'\n\nexport interface AppContextType {\n  routes: AppRegistration['routes']\n  history: History\n}\n\nexport const AppContext = createContext<AppContextType>(null as unknown as AppContextType)\n","import {\n  createBrowserHistory as routerCreateBrowserHistory,\n  type BrowserHistory,\n  type BrowserHistoryOptions,\n  type To,\n  Action,\n} from '@remix-run/router'\nimport type {Listener, Update} from '@remix-run/router/dist/history'\n\n/**\n * A change to the current location that was blocked. May be retried\n * after obtaining user confirmation.\n *\n * The RR version of Transition extends Update, but this does not because it was easier not to.\n */\nexport interface Transition {\n  /**\n   * Retries the update to the current location.\n   */\n  retry(): void\n}\n\n/**\n * A function that receives transitions when navigation is blocked.\n */\nexport interface Blocker {\n  (tx: Transition): void\n}\n\nexport interface GitHubBrowserHistory extends BrowserHistory {\n  block(blocker: Blocker): () => void\n}\n\n/**\n * This is a wrapper around React Router's createBrowserHistory. On top of the RR browser history, this wrapper:\n * - Ensures that it is constructed with v5Compat:true, so that it is compatible with pre-6.4 RR usage.\n * - Creates a .block() method that is API-compatible with pre-6.4 RR usage, but using the post-6.4 RR internals.\n *\n * It would be lovely to get rid of this file. We will be able to do that if we migrate to using a data router, which\n * would allow us to use the RR unstable_useBlocker hook directly.\n */\nexport function createBrowserHistory(options: BrowserHistoryOptions = {}): GitHubBrowserHistory {\n  /**\n   * Note: `v5Compat` is set to true to maintain compatibility v5 & pre-6.4 versions of React Router. In the future,\n   * if we shift to using a React Router data router, we can remove this option (and possibly this whole wrapper?).\n   */\n  const history = routerCreateBrowserHistory({...options, v5Compat: true})\n  let listener: Listener | undefined\n  let blockers: Blocker[] = []\n  let ignoreNextHistoryUpdate = false\n\n  history.listen((update: Update) => {\n    if (ignoreNextHistoryUpdate) {\n      ignoreNextHistoryUpdate = false\n      return\n    }\n\n    if (update.action === Action.Pop && blockers.length && update.delta !== null && blockers.length > 0) {\n      const delta = update.delta\n\n      // undo the navigation for now:\n\n      ignoreNextHistoryUpdate = true\n      history.go(delta * -1)\n\n      for (const blocker of blockers) {\n        blocker({\n          retry() {\n            history.go(delta)\n          },\n        })\n      }\n    } else {\n      listener?.(update)\n    }\n  })\n\n  function doIfUnblocked(fn: () => void) {\n    if (blockers.length > 0) {\n      for (const blocker of blockers) {\n        blocker({\n          retry() {\n            fn()\n          },\n        })\n      }\n    } else {\n      fn()\n    }\n  }\n\n  return {\n    get action() {\n      return history.action\n    },\n\n    get location() {\n      return history.location\n    },\n\n    createHref(to: To) {\n      return history.createHref(to)\n    },\n\n    createURL(to: To) {\n      return history.createURL(to)\n    },\n\n    encodeLocation(to: To) {\n      return history.encodeLocation(to)\n    },\n\n    push(to: To, state?: unknown) {\n      doIfUnblocked(() => history.push(to, state))\n    },\n\n    replace(to: To, state?: unknown) {\n      doIfUnblocked(() => history.replace(to, state))\n    },\n\n    go(delta: number) {\n      doIfUnblocked(() => history.go(delta))\n    },\n\n    listen(newListener: Listener) {\n      if (listener) {\n        throw new Error('A history only accepts one active listener')\n      }\n      listener = newListener\n      const unlisten = () => {\n        listener = undefined\n      }\n      return unlisten\n    },\n\n    /**\n     * @deprecated\n     */\n    block(blocker: Blocker): () => void {\n      blockers.push(blocker)\n\n      const unblock = () => {\n        blockers = blockers.filter(b => b !== blocker)\n      }\n      return unblock\n    },\n  }\n}\n","export const EXPECTED_ERRORS: {[key: string]: string} = {\n  'Workers not ready': 'Alloy is warming its workers. This is expected during deploys and should resolve shortly.',\n}\n","import {useEffect, useState} from 'react'\n\nconst document = globalThis.document as Document | undefined\n\nexport interface ColorModeOptions {\n  colorMode?: string\n  lightTheme: string\n  darkTheme: string\n}\n\nfunction getSchemeFromMode(mode?: string) {\n  switch (mode) {\n    case 'light':\n      return 'day'\n    case 'dark':\n      return 'night'\n    default:\n      return 'auto'\n  }\n}\n\nfunction getColorModes(options: ColorModeOptions | DOMStringMap) {\n  const mode = options.colorMode\n\n  return {\n    colorMode: getSchemeFromMode(mode),\n    dayScheme: options.lightTheme,\n    nightScheme: options.darkTheme,\n  } as const\n}\n\nlet ssrOptions: ColorModeOptions | undefined\n\nexport function setColorModeOptions(options: ColorModeOptions) {\n  ssrOptions = options\n}\n\nfunction useColorModesSSR() {\n  return getColorModes(ssrOptions || {})\n}\n\nfunction useColorModes() {\n  const {documentElement} = document!\n  // eslint-disable-next-line github/no-dataset\n  const [colorMode, setColorMode] = useState(() => getColorModes(documentElement.dataset))\n\n  useEffect(() => {\n    // Update color modes any time color mode attributes change on the base html document element\n    // eslint-disable-next-line github/no-dataset\n    const observer = new MutationObserver(() => setColorMode(getColorModes(documentElement.dataset)))\n\n    observer.observe(documentElement, {\n      attributes: true,\n      attributeFilter: ['data-color-mode', 'data-light-theme', 'data-dark-theme'],\n    })\n\n    return () => observer.disconnect()\n  }, [documentElement])\n\n  return colorMode\n}\n\nexport default document ? useColorModes : useColorModesSSR\n","import memoize from '@github/memoize'\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\n\nconst runtimeEnvironment = memoize(githubEnvironment)\n\n// return the github instance environment\n// if dotcom, returns 'dotcom'\n// if enterprise, returns 'enterprise'\nfunction githubEnvironment(): string {\n  return ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"runtime-environment\"]')?.content || ''\n}\n\nexport const isEnterprise = memoize(isEnterpriseEnvironment)\nfunction isEnterpriseEnvironment(): boolean {\n  return runtimeEnvironment() === 'enterprise'\n}\n\n// This is the \"bundler\" that built the client-side assets, e.g. \"webpack\"\nexport const bundler = typeof BUNDLER !== 'undefined' ? BUNDLER : undefined\n","import {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\ntype StorageBackend = 'sessionStorage' | 'localStorage'\n\n/**\n * An implementation of the Storage API that throws away all data.  Used in\n * cases when the requested Storage backend is not available.\n */\nclass NoOpStorage {\n  getItem() {\n    return null\n  }\n\n  setItem() {\n    return undefined\n  }\n\n  removeItem() {\n    return undefined\n  }\n\n  clear() {\n    return undefined\n  }\n\n  key() {\n    return null\n  }\n\n  get length() {\n    return 0\n  }\n}\n\ntype SafeStorageOptions = {\n  /** Callers may opt not to suppress quota errors thrown on set in case they rely on recieving them. */\n  throwQuotaErrorsOnSet: boolean\n  /** The amount of time the value should remain in storage, in milliseconds */\n  ttl?: number\n  /** Don't send stats in CI */\n  sendCacheStats?: boolean\n}\n\n/**\n * Safely access Storage items by wrapping a Storage instance\n * (localStorage or sessionStorage) with safe versions of its API\n * methods.  Callers may opt not to suppress quota errors thrown on\n * set in case they rely on recieving them.\n */\nexport default function safeStorage<T = string>(\n  storageKey: StorageBackend,\n  options: SafeStorageOptions = {throwQuotaErrorsOnSet: false},\n  global = ssrSafeWindow,\n  deserialize: (value: string) => T = value => value as unknown as T,\n  serialize: (value: T) => string = (value: T) => value as unknown as string,\n) {\n  let storage: Storage\n  try {\n    if (!global) {\n      // in an SSR environment, use noop storage\n      throw new Error()\n    }\n\n    storage = global[storageKey] || new NoOpStorage()\n  } catch {\n    storage = new NoOpStorage()\n  }\n\n  const {throwQuotaErrorsOnSet} = options\n\n  function emitStats(key: PlatformBrowserIncrementKey) {\n    if (options.sendCacheStats) {\n      sendStats({incrementKey: key})\n    }\n  }\n\n  /**  Safely get storage item. Returns `null` if the item is older than the provided ttl */\n  function getItem(key: string, now: number = new Date().getTime()): T | null {\n    try {\n      const value = storage.getItem(key)\n      if (!value) {\n        return null\n      }\n      const expiryKey = `${key}:expiry`\n      const expiry = Number(storage.getItem(expiryKey))\n      if (expiry && now > expiry) {\n        removeItem(key)\n        removeItem(expiryKey)\n        emitStats('SAFE_STORAGE_VALUE_EXPIRED')\n        return null\n      } else {\n        emitStats('SAFE_STORAGE_VALUE_WITHIN_TTL')\n        return deserialize(value)\n      }\n    } catch (error) {\n      // Ignore browser private mode error.\n      return null\n    }\n  }\n\n  /**\n   * Safely set storage item.\n   * If `ttl` is provided, set an expiry time for the item under the key `${key}:expiry`\n   * This function will be called\n   */\n  function setItem(key: string, value: T, now: number = new Date().getTime()) {\n    try {\n      storage.setItem(key, serialize(value) as unknown as string)\n      if (options.ttl) {\n        const expiryKey = `${key}:expiry`\n        const expiry = now + options.ttl\n        storage.setItem(expiryKey, expiry.toString())\n      }\n    } catch (error) {\n      if (throwQuotaErrorsOnSet && error instanceof Error && error.message.toLowerCase().includes('quota')) throw error\n    }\n  }\n\n  // Safely remove storage item.\n  function removeItem(key: string) {\n    try {\n      storage.removeItem(key)\n      if (options.ttl) {\n        const expiryKey = `${key}:expiry`\n        storage.removeItem(expiryKey)\n      }\n    } catch (error) {\n      // Ignore browser private mode error.\n    }\n  }\n\n  return {\n    getItem,\n    setItem,\n    removeItem,\n    clear: storage.clear,\n    key: storage.key,\n    get length() {\n      return storage.length\n    },\n  }\n}\n\nexport function jsonSafeStorage<T>(storageBackend: StorageBackend) {\n  return safeStorage<T>(\n    storageBackend,\n    {throwQuotaErrorsOnSet: false},\n    ssrSafeWindow,\n    JSON.parse as (value: string) => T,\n    JSON.stringify as (obj: T) => string,\n  )\n}\n","import {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {loaded} from '@github-ui/document-ready'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {throttle} from '@github/mini-throttle'\n\nlet stats: PlatformBrowserStat[] = []\nconst chunkSize = 64 * 1024\n\nexport function sendStats(stat: PlatformBrowserStat, flushImmediately = false, samplingProbability = 0.5): void {\n  if (isFeatureEnabled('BROWSER_STATS_DISABLED') === true) {\n    return\n  }\n  if (samplingProbability < 0 || samplingProbability > 1) {\n    throw new RangeError('Sampling probability must be between 0 and 1')\n  }\n\n  if (stat.timestamp === undefined) stat.timestamp = new Date().getTime()\n  stat.loggedIn = isLoggedIn()\n  stat.staff = isStaff()\n  stat.bundler = bundler\n  if (Math.random() < samplingProbability) {\n    stats.push(stat)\n  }\n\n  if (flushImmediately) {\n    flushStats()\n  } else {\n    throttledScheduleSendStats()\n  }\n}\n\nlet queued: number | null = null\n\nconst throttledScheduleSendStats = throttle(async function scheduleSendStats() {\n  await loaded\n  if (queued == null) {\n    queued = window.requestIdleCallback(flushStats)\n  }\n}, 5000)\n\nfunction flushStats() {\n  queued = null\n  if (!stats.length) {\n    return\n  }\n\n  const url = ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-stats-url\"]')?.content\n  if (!url) {\n    return\n  }\n\n  const batches = getBatches(stats)\n\n  for (const batch of batches) {\n    safeSend(url, `{\"stats\": [${batch.join(',')}] }`)\n  }\n\n  stats = []\n}\n\n// getBatches breaks up the list of stats into smaller batches\n// that are less than 64kb in size. This is to avoid hitting the\n// size limit of the beacon API.\nfunction getBatches(items: PlatformBrowserStat[]): string[][] {\n  const batches: string[][] = []\n  const itemStrings = items.map(item => JSON.stringify(item))\n\n  while (itemStrings.length > 0) {\n    batches.push(makeBatch(itemStrings))\n  }\n\n  return batches\n}\n\n// makeBatch walks the items and collects batches of items that are within\n// the 64kb limit. If an item is too big to fit in a batch, it is sent alone.\nfunction makeBatch(itemStrings: string[]): string[] {\n  const firstItem = itemStrings.shift()!\n  const batch: string[] = [firstItem]\n  let size = firstItem.length\n\n  while (itemStrings.length > 0 && size <= chunkSize) {\n    const nextItemSize = itemStrings[0]!.length\n\n    if (size + nextItemSize <= chunkSize) {\n      const itemString = itemStrings.shift()!\n      batch.push(itemString)\n      size += nextItemSize\n    } else {\n      break\n    }\n  }\n\n  return batch\n}\n\nfunction safeSend(url: string, data: string) {\n  try {\n    if (navigator.sendBeacon) {\n      navigator.sendBeacon(url, data)\n    }\n  } catch {\n    // Silently ignore errors: https://github.com/github/github/issues/178088#issuecomment-829936461\n  }\n}\n\nfunction isLoggedIn(): boolean {\n  return !!ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n}\n\nexport function isStaff(): boolean {\n  return !!ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"user-staff\"]')?.content\n}\n\n// Flush stats before users navigate away from the page\nssrSafeDocument?.addEventListener('pagehide', flushStats)\nssrSafeDocument?.addEventListener('visibilitychange', flushStats)\n","import {ChecksStatusBadge, useCommitChecksStatusDetails} from '@github-ui/commit-checks-status'\nimport type {RepositoryNWO} from '@github-ui/current-repository'\n\ninterface Props {\n  oid: string\n  status: string | undefined\n  repo: RepositoryNWO\n  descriptionString?: string\n  badgeProps?: Omit<\n    React.ComponentProps<typeof ChecksStatusBadge>,\n    'statusRollup' | 'combinedStatus' | 'onWillOpenPopup' | 'disablePopover'\n  >\n}\n\nexport function AsyncChecksStatusBadge({status, oid, repo, badgeProps = {}, descriptionString = ''}: Props) {\n  const [details, fetchDetails] = useCommitChecksStatusDetails(oid, repo)\n\n  return status ? (\n    <ChecksStatusBadge\n      disablePopover={false}\n      size={'small'}\n      statusRollup={status}\n      buttonSx={{height: '18px', color: 'fg.muted', p: '2px'}}\n      combinedStatus={details}\n      descriptionText={descriptionString}\n      onWillOpenPopup={fetchDetails}\n      {...badgeProps}\n    />\n  ) : null\n}\n\ntry{ AsyncChecksStatusBadge.displayName ||= 'AsyncChecksStatusBadge' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"commit-discussion-comments\":\"Comment-module__commit-discussion-comments--WaMOe\",\"discussion-comments-rose\":\"Comment-module__discussion-comments-rose--v1SXb\"};","import {ReactionViewerLoading} from '@github-ui/reaction-viewer/ReactionViewerLoading'\nimport {LoadingSkeleton} from '@github-ui/skeleton/LoadingSkeleton'\n\nexport const CommentLoading = () => {\n  const lineCount = 2\n\n  return (\n    <div className=\"d-flex gap-2\">\n      <div className=\"flex-1 border overflow-x-auto rounded-2 borderColor-muted color-shadow-small\">\n        <div className=\"d-flex flex-column gap-2 m-3\">\n          <div className=\"d-flex flex-items-center gap-2\">\n            <LoadingSkeleton variant=\"elliptical\" height=\"xl\" width=\"xl\" />\n            <LoadingSkeleton variant=\"rounded\" height=\"sm\" width=\"150px\" />\n          </div>\n\n          {[...Array(lineCount)].map((_, index) => (\n            <LoadingSkeleton key={index} variant=\"rounded\" height=\"sm\" width=\"random\" />\n          ))}\n          <ReactionViewerLoading />\n        </div>\n      </div>\n    </div>\n  )\n}\n\ntry{ CommentLoading.displayName ||= 'CommentLoading' } catch {}","import {CommentBox, type CommentBoxHandle} from '@github-ui/comment-box/CommentBox'\nimport {type MarkdownComposerRef, useMarkdownBody} from '@github-ui/commenting/useMarkdownBody'\nimport {useCurrentRepository} from '@github-ui/current-repository'\nimport {forwardRef, useCallback, useEffect, useRef, useState} from 'react'\n\nconst CommitCommentEditor = forwardRef<\n  MarkdownComposerRef,\n  {\n    commentContent?: string\n    initialMarkdown?: string\n    commitOid: string\n    onCancel?: () => void\n    onSave: (markdown: string, restMarkdownBody: () => void) => Promise<void>\n    referenceId: string\n    buttonText: string\n  }\n>(({initialMarkdown, commitOid, onCancel, onSave, referenceId, buttonText, commentContent}, ref) => {\n  const [saving, setSaving] = useState<boolean>(false)\n  const commentBoxRef = useRef<CommentBoxHandle | null>(null)\n  const definedCommentContent = useRef<string | undefined>(undefined)\n  const repo = useCurrentRepository()\n\n  const onChange = useCallback(() => {}, [])\n\n  const {markdownBody, resetMarkdownBody, markdownValidationResult, handleMarkdownBodyChanged} = useMarkdownBody({\n    commentBoxRef,\n    markdownComposerRef: ref,\n    onChange,\n    onCancel: () => {},\n    referenceId,\n  })\n\n  useEffect(() => {\n    // Don't override the markdown saved in the session\n    if (initialMarkdown && !markdownBody) {\n      handleMarkdownBodyChanged(initialMarkdown)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [initialMarkdown])\n\n  useEffect(() => {\n    if (commentContent && definedCommentContent.current !== commentContent) {\n      handleMarkdownBodyChanged(commentContent)\n      definedCommentContent.current = commentContent\n      setTimeout(() => {\n        if (commentBoxRef.current) {\n          commentBoxRef.current?.scrollIntoView()\n          commentBoxRef.current?.focus()\n        }\n      }, 0)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [commentContent])\n\n  const onSaveInt = async () => {\n    setSaving(true)\n    await onSave(markdownBody, resetMarkdownBody)\n    setSaving(false)\n  }\n\n  return (\n    <CommentBox\n      ref={commentBoxRef}\n      validationResult={markdownValidationResult}\n      disabled={saving}\n      onChange={newMarkdown => {\n        handleMarkdownBodyChanged(newMarkdown)\n      }}\n      onCancel={() => {\n        handleMarkdownBodyChanged(initialMarkdown ?? '')\n        onCancel && onCancel()\n      }}\n      onSave={onSaveInt}\n      saveButtonText={buttonText}\n      saveButtonTrailingIcon={false}\n      value={markdownBody}\n      teamHovercardsEnabled\n      fileUploadsEnabled\n      subject={{\n        type: 'commit',\n        id: {\n          id: commitOid,\n        },\n        repository: {\n          databaseId: repo.id,\n          nwo: repo.ownerLogin,\n          slashCommandsEnabled: false,\n        },\n      }}\n    />\n  )\n})\n\nCommitCommentEditor.displayName = 'CommitCommentEditor'\nexport {CommitCommentEditor}\n","import type {MarkdownComposerRef} from '@github-ui/commenting/useMarkdownBody'\nimport {useRef} from 'react'\n\nimport {useCommenting} from '../../../hooks/use-commenting'\nimport type {CommitComment} from '../../../types/commit-types'\nimport {CommitCommentEditor} from './CommitCommentEditor'\n\nexport function UpdateCommitComment({\n  comment,\n  commitOid,\n  onCancel,\n  onUpdate,\n}: {\n  comment: CommitComment\n  commitOid: string\n  onCancel: () => void\n  onUpdate: (comment: CommitComment) => void\n}) {\n  const {editComment} = useCommenting()\n  const commentEditor = useRef<MarkdownComposerRef>(null)\n\n  const onSave = async (markdown: string) => {\n    const result = await editComment(markdown, comment)\n\n    if (result.updatedFields) {\n      onUpdate({\n        ...comment,\n        ...result.updatedFields,\n      })\n    } else {\n      // TODO - handle error\n    }\n  }\n\n  return (\n    <CommitCommentEditor\n      commitOid={commitOid}\n      initialMarkdown={comment.body}\n      ref={commentEditor}\n      onSave={onSave}\n      onCancel={onCancel}\n      referenceId={`${commitOid}-${comment.id}`}\n      buttonText=\"Update comment\"\n    />\n  )\n}\n\ntry{ UpdateCommitComment.displayName ||= 'UpdateCommitComment' } catch {}","import {ActivityHeader} from '@github-ui/commenting/ActivityHeader'\nimport {CommentActions, type CommentData} from '@github-ui/commenting/CommentActions'\nimport type {CommentHeaderProps} from '@github-ui/commenting/CommentHeader'\nimport {useCurrentRepository} from '@github-ui/current-repository'\nimport {MarkdownEditHistoryViewerQueryComponent} from '@github-ui/markdown-edit-history-viewer/MarkdownEditHistoryViewer'\nimport {MarkdownViewer} from '@github-ui/markdown-viewer'\nimport {ReactionViewerQueryComponent} from '@github-ui/reaction-viewer/ReactionViewer'\nimport {ReactionViewerLoading} from '@github-ui/reaction-viewer/ReactionViewerLoading'\nimport {Suspense, useRef, useState} from 'react'\n\nimport {useCommenting} from '../../../hooks/use-commenting'\nimport {mapCommitCommentToComment} from '../../../hooks/use-fetch-commit-thread'\nimport type {CommitComment} from '../../../types/commit-types'\nimport type {Commit} from '../../../types/shared'\nimport {shortSha} from '../../../utils/short-sha'\nimport {UpdateCommitComment} from './UpdateCommitComment'\n\nexport function ExistingCommitComments({\n  comments,\n  commit,\n  locked,\n  deleteComment,\n  updateComment,\n  setNewCommentContent,\n}: {\n  comments: CommitComment[]\n  commit: Commit\n  locked: boolean\n  deleteComment: (commentId: CommitComment['id']) => void\n  updateComment: (comment: CommitComment) => void\n  setNewCommentContent: (content?: string) => void\n}) {\n  if (comments.length === 0) {\n    return null\n  }\n\n  return (\n    <div className=\"d-flex flex-column gap-3\">\n      {comments.map(comment => {\n        return (\n          <ExistingCommitComment\n            key={comment.id}\n            comment={comment}\n            commit={commit}\n            locked={locked}\n            deleteComment={deleteComment}\n            updateComment={updateComment}\n            setNewCommentContent={setNewCommentContent}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nfunction ExistingCommitComment({\n  comment,\n  commit,\n  locked,\n  deleteComment: onDeleteComment,\n  updateComment,\n  setNewCommentContent,\n}: {\n  comment: CommitComment\n  commit: Commit\n  locked: boolean\n  deleteComment: (commentId: CommitComment['id']) => void\n  updateComment: (comment: CommitComment) => void\n  setNewCommentContent: (content?: string) => void\n}) {\n  const repo = useCurrentRepository()\n\n  const [isEditing, setIsEditing] = useState(false)\n  const [isMinimized, setIsMinimized] = useState(comment.isHidden)\n  const commentRef = useRef<HTMLDivElement>(null)\n  const {deleteComment, hideComment, unhideComment} = useCommenting()\n\n  const onDelete = async () => {\n    const result = await deleteComment(comment.id.toString())\n\n    if (result === 'canceled') {\n      return\n    }\n\n    if (result === 'error') {\n      // TODO - handle error\n      return\n    }\n\n    if (result === 'success') {\n      onDeleteComment(comment.id)\n    }\n  }\n\n  const onUpdate = (updatedComment: CommitComment) => {\n    updateComment(updatedComment)\n    setIsEditing(false)\n  }\n\n  const onHide = async (reason: string) => {\n    const result = await hideComment(comment.id.toString(), reason)\n\n    if (result === 'error') {\n      // TODO - handle error\n      return\n    }\n\n    if (result === 'success') {\n      updateComment({...comment, isHidden: true, minimizedReason: reason})\n      setIsMinimized(true)\n    }\n  }\n\n  const onUnhide = async () => {\n    const result = await unhideComment(comment.id.toString())\n\n    if (result === 'error') {\n      // TODO - handle error\n      return\n    }\n\n    if (result === 'success') {\n      updateComment({...comment, isHidden: false, minimizedReason: null})\n      setIsMinimized(false)\n    }\n  }\n\n  // how to handle multiple authors?\n  const commentSubjectAuthorLogin = commit.authors.length > 0 ? commit.authors[0]?.login : ''\n\n  const commentDataWithoutFragment: Omit<CommentData, ' $fragmentSpreads'> = {\n    ...mapCommitCommentToComment(comment, commit, repo),\n    referenceText: shortSha(commit.oid),\n  }\n\n  return (\n    <div className=\"border rounded-2\" ref={commentRef} id={comment.urlFragment}>\n      <CommitCommentHeader\n        comment={commentDataWithoutFragment as CommentData}\n        commentAuthorLogin={comment.author.login}\n        commentSubjectAuthorLogin={commentSubjectAuthorLogin}\n        commentSubjectType=\"commit\"\n        avatarUrl={comment.author.avatarUrl}\n        isMinimized={isMinimized}\n        editComment={() => {\n          setIsEditing(true)\n        }}\n        onReplySelect={setNewCommentContent}\n        onMinimize={setIsMinimized}\n        navigate={() => {}}\n        hideComment={onHide}\n        unhideComment={onUnhide}\n        deleteComment={onDelete}\n        commentRef={commentRef}\n        showEditHistory={comment.viewerCanReadUserContentEdits && !!comment.lastUserContentEdit}\n        commitComment={comment}\n      />\n      {isMinimized ? null : isEditing ? (\n        <div className=\"m-2\">\n          <UpdateCommitComment\n            comment={comment}\n            commitOid={commit.oid}\n            onUpdate={onUpdate}\n            onCancel={() => setIsEditing(false)}\n          />\n        </div>\n      ) : (\n        <div className=\"d-flex flex-column m-3 gap-3\" style={{gap: '12px'}}>\n          <div className=\"markdown-body\" data-turbolinks=\"false\">\n            <MarkdownViewer\n              disabled={false}\n              verifiedHTML={comment.htmlBody}\n              markdownValue={comment.body}\n              onChange={() => {}}\n              onLinkClick={() => {}}\n              teamHovercardsEnabled={true}\n            />\n          </div>\n          <Suspense fallback={<ReactionViewerLoading />}>\n            <ReactionViewerQueryComponent id={comment.relayId} subjectLocked={locked} />\n          </Suspense>\n        </div>\n      )}\n    </div>\n  )\n}\ninterface CommitCommentHeaderProps extends CommentHeaderProps {\n  showEditHistory: boolean\n  commitComment: CommitComment\n}\n\nfunction CommitCommentHeader({hideActions, ...props}: CommitCommentHeaderProps) {\n  let editHistoryComponent = null\n\n  if (props.showEditHistory) {\n    const comment = props.commitComment\n\n    editHistoryComponent = (\n      <Suspense fallback={null}>\n        <MarkdownEditHistoryViewerQueryComponent id={comment.relayId} />\n      </Suspense>\n    )\n  }\n\n  return (\n    <ActivityHeader\n      {...props}\n      actions={hideActions ? undefined : <CommentActions {...props} editHistoryComponent={editHistoryComponent} />}\n    />\n  )\n}\n\ntry{ ExistingCommitComments.displayName ||= 'ExistingCommitComments' } catch {}\ntry{ ExistingCommitComment.displayName ||= 'ExistingCommitComment' } catch {}\ntry{ CommitCommentHeader.displayName ||= 'CommitCommentHeader' } catch {}","import {useCurrentRepository} from '@github-ui/current-repository'\nimport {commitPath} from '@github-ui/paths'\nimport {useAppPayload} from '@github-ui/react-core/use-app-payload'\nimport {verifiedFetch, verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {Flash} from '@primer/react'\nimport {Dialog} from '@primer/react/experimental'\nimport {useState} from 'react'\n\nimport type {CommitsAppPayload} from '../../../hooks/use-commits-app-payload'\n\nexport function LockConversationDialog({\n  commitOid,\n  locked,\n  onClose,\n}: {\n  commitOid: string\n  locked: boolean\n  onClose: (locked?: boolean) => void\n}) {\n  const repo = useCurrentRepository()\n  const {helpUrl} = useAppPayload<CommitsAppPayload>()\n  const [didError, setDidError] = useState(false)\n\n  const action = locked ? 'Unlock' : 'Lock'\n  const oppositeAction = locked ? 'lock' : 'unlock'\n\n  const lockConversation = async () => {\n    const response = await verifiedFetch(\n      `${commitPath({owner: repo.ownerLogin, repo: repo.name, commitish: commitOid})}/lock`,\n      {\n        method: 'PUT',\n        headers: {Accept: 'application/json'},\n      },\n    )\n\n    if (response.ok) {\n      onClose(true)\n    } else {\n      setDidError(true)\n    }\n  }\n\n  const unlockConversation = async () => {\n    const response = await verifiedFetchJSON(\n      `${commitPath({owner: repo.ownerLogin, repo: repo.name, commitish: commitOid})}/unlock`,\n      {\n        method: 'PUT',\n        headers: {Accept: 'application/json'},\n      },\n    )\n\n    if (response.ok) {\n      onClose(false)\n    } else {\n      setDidError(true)\n    }\n  }\n\n  return (\n    <Dialog\n      onClose={() => onClose()}\n      width=\"large\"\n      title={`${action} conversation on this commit`}\n      footerButtons={[\n        {\n          content: `${action} conversation`,\n          buttonType: 'danger',\n          sx: {width: '100%'},\n          onClick: locked ? unlockConversation : lockConversation,\n        },\n      ]}\n    >\n      {didError && (\n        <Flash className=\"mb-2\" variant=\"danger\">\n          There was an error {action.toLocaleLowerCase()}ing this conversation. Please try again.\n        </Flash>\n      )}\n\n      <p>{action}ing the conversation means:</p>\n\n      <ul className=\"ml-4\">\n        {!locked ? (\n          <>\n            <li>\n              Other users <strong>can’t add new comments</strong> to this commit.\n            </li>\n            {repo.isOrgOwned ? (\n              <li>\n                You and other members of teams with&nbsp;\n                <a href={`${helpUrl}/articles/what-are-the-different-access-permissions`}>write access</a>&nbsp; to this\n                repository <strong>can still leave comments</strong> that others can see.\n              </li>\n            ) : (\n              <li>\n                You and other collaborators&nbsp;\n                <a href=\"<%= GitHub.help_url %>/articles/what-are-the-different-access-permissions\">with access</a>\n                &nbsp;to this repository <strong>can still leave comments</strong> that others can see.\n              </li>\n            )}\n          </>\n        ) : (\n          <li>\n            <strong>Everyone</strong> will be able to comment on this commit once more.\n          </li>\n        )}\n      </ul>\n      <p className=\"mb-0 mt-2\">You can always this {oppositeAction} commit again in the future.</p>\n    </Dialog>\n  )\n}\n\ntry{ LockConversationDialog.displayName ||= 'LockConversationDialog' } catch {}","import {ReadonlyCommentBox} from '@github-ui/comment-box/ReadonlyCommentBox'\nimport {blockedCommentingReason} from '@github-ui/commenting/blockedCommentingReason'\nimport {IDS} from '@github-ui/commenting/DomElements'\nimport type {MarkdownComposerRef} from '@github-ui/commenting/useMarkdownBody'\nimport {LockIcon} from '@primer/octicons-react'\nimport {Heading} from '@primer/react'\nimport {useRef} from 'react'\n\nimport {useCommenting} from '../../../hooks/use-commenting'\nimport type {CommitComment} from '../../../types/commit-types'\nimport {CommitCommentEditor} from './CommitCommentEditor'\n\nexport function NewCommitComment({\n  commitOid,\n  onAddComment,\n  newCommentContent,\n  canComment,\n  locked,\n  repoArchived,\n}: {\n  commitOid: string\n  onAddComment: (comment: CommitComment) => void\n  newCommentContent?: string\n  canComment: boolean\n  locked: boolean\n  repoArchived: boolean\n}) {\n  const {addComment} = useCommenting()\n\n  const commentEditor = useRef<MarkdownComposerRef>(null)\n\n  const onSave = async (markdown: string, resetMarkdownBody: () => void) => {\n    const result = await addComment(markdown)\n\n    if (result.comment) {\n      onAddComment(result.comment)\n      resetMarkdownBody()\n    } else {\n      // TODO - handle error\n    }\n  }\n\n  const reason = blockedCommentingReason(repoArchived, locked)\n\n  return (\n    <div className=\"d-flex flex-column gap-2 pt-3\">\n      <Heading as=\"h2\" className=\"h4\">\n        Add a comment\n      </Heading>\n      {canComment ? (\n        <div id={IDS.issueCommentComposer}>\n          <CommitCommentEditor\n            commitOid={commitOid}\n            ref={commentEditor}\n            onSave={onSave}\n            referenceId={`new-discussion-comment-${commitOid}`}\n            commentContent={newCommentContent}\n            buttonText=\"Comment on this commit\"\n          />\n        </div>\n      ) : (\n        <ReadonlyCommentBox icon={LockIcon} reason={reason} />\n      )}\n    </div>\n  )\n}\n\ntry{ NewCommitComment.displayName ||= 'NewCommitComment' } catch {}","import {useCurrentRepository} from '@github-ui/current-repository'\nimport {useCSRFToken} from '@github-ui/use-csrf-token'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport {BellIcon, BellSlashIcon} from '@primer/octicons-react'\nimport {Button} from '@primer/react'\nimport {useState} from 'react'\n\nexport function NotificationsFooter({commitOid, subscribed}: {commitOid: string; subscribed: boolean}) {\n  const [subscribeState, setSubscribeState] = useState(subscribed)\n  const [updated, setUpdated] = useState(false)\n  const repo = useCurrentRepository()\n  const token = useCSRFToken('/notifications/thread', 'post')\n\n  let descriptionText\n\n  if (updated) {\n    descriptionText = `You're now ${subscribeState ? 'subscribed' : 'unsubscribed'} to this thread.`\n  } else {\n    if (subscribeState) {\n      descriptionText = \"You're receiving notifications because you're subscribed to this thread.\"\n    } else {\n      descriptionText = \"You're not receiving notifications from this thread.\"\n    }\n  }\n\n  const updateSubscription = async () => {\n    const formData = new FormData()\n    formData.append('repository_id', repo.id.toString())\n    formData.append('thread_id', commitOid)\n    formData.append('thread_class', 'Commit')\n    formData.append('id', subscribeState ? 'unsubscribe' : 'subscribe')\n    // eslint-disable-next-line github/authenticity-token\n    formData.append('authenticity_token', token ?? '')\n\n    const response = await verifiedFetch('/notifications/thread', {\n      method: 'POST',\n      body: formData,\n    })\n\n    if (response.ok) {\n      setSubscribeState(!subscribeState)\n      setUpdated(true)\n    }\n  }\n\n  return (\n    <div className=\"d-flex flex-items-center border rounded-2 p-2 gap-2\">\n      <Button onClick={updateSubscription} size=\"small\" leadingVisual={subscribeState ? BellSlashIcon : BellIcon}>\n        {subscribeState ? 'Unsubscribe' : 'Subscribe'}\n      </Button>\n      <span className=\"f6 fgColor-muted\">{descriptionText}</span>\n    </div>\n  )\n}\n\ntry{ NotificationsFooter.displayName ||= 'NotificationsFooter' } catch {}","/* eslint-disable relay/unused-fields */\n/* eslint eslint-comments/no-use: off */\n/* eslint-disable relay/must-colocate-fragment-spreads */\nimport {CLASS_NAMES} from '@github-ui/commenting/DomElements'\nimport {useCurrentRepository} from '@github-ui/current-repository'\nimport {useCurrentUser} from '@github-ui/current-user'\nimport {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {KeyIcon, LockIcon} from '@primer/octicons-react'\nimport {Button, CounterLabel, Flash} from '@primer/react'\nimport {clsx} from 'clsx'\nimport {useEffect, useMemo, useState, useTransition} from 'react'\nimport {useQueryLoader} from 'react-relay'\nimport {graphql} from 'relay-runtime'\n\nimport {useDiscussionComments} from '../../../contexts/DiscussionCommentsContext'\nimport type {CommitExtended, InitialCommentInfo} from '../../../types/commit-types'\nimport {isWeirichCommit} from '../../../utils/weirich-commit'\nimport styles from './Comment.module.css'\nimport {CommentLoading} from './CommentLoading'\nimport {ExistingCommitComments} from './ExistingCommitComments'\nimport {LockConversationDialog} from './LockConversationDialog'\nimport {NewCommitComment} from './NewCommitComment'\nimport {NotificationsFooter} from './NotificationFooter'\n\n// id to jump to when navigating to the comments section from commits list\nexport const COMMENTS_CONTAINER_ID = 'comments'\n\nexport function DiscussionComments(props: {commit: CommitExtended; commentInfo: InitialCommentInfo}) {\n  // Preload our required GraphQL data used in comments\n  // We do this to avoid sending 2 requests for each rendered comment (1 for reactions, 1 for edit history)\n  // This way we can send 1 request for all GQL comments and let Relay read the data from the store\n  // We only preload the data for the first 60 comments to avoid loading all comments at once\n  // Anything beyond the first 60 comments will be loaded on demand. More than a full page of comments is rare.\n  const [queryReference, loadQuery] = useQueryLoader(graphql`\n    query DiscussionComments_ReactionViewerLazyQuery($id: ID!) {\n      node(id: $id) {\n        ... on Commit {\n          comments(last: 60) {\n            nodes {\n              id\n              ...MarkdownEditHistoryViewer_comment\n              ...ReactionViewerGroups\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const [, startTransition] = useTransition()\n\n  useEffect(() => {\n    startTransition(() => {\n      loadQuery({id: props.commit.globalRelayId}, {fetchPolicy: 'store-or-network'})\n    })\n  }, [loadQuery, props.commit.globalRelayId])\n\n  return (\n    <div\n      className={clsx(\n        'd-flex flex-column gap-2 pt-3',\n        CLASS_NAMES.commentsContainer,\n        styles['commit-discussion-comments'],\n      )}\n      id={COMMENTS_CONTAINER_ID}\n    >\n      {/* need key to trigger re-fetch and re-render when we soft nav between commits changes return */}\n      {queryReference ? <DiscussionCommentsInternal {...props} key={props.commit.oid} /> : <CommentLoading />}\n    </div>\n  )\n}\n\nfunction DiscussionCommentsInternal({commit, commentInfo}: {commit: CommitExtended; commentInfo: InitialCommentInfo}) {\n  const repo = useCurrentRepository()\n  const currentUser = useCurrentUser()\n\n  const {\n    retry,\n    loadMore,\n    canLoadMore,\n    addComment,\n    deleteComment,\n    updateComment,\n    count: commentCount,\n    comments,\n    subscribed,\n    providerState,\n  } = useDiscussionComments()\n\n  // Used for quote replies\n  const [newCommentContent, setNewCommentContent] = useState<string | undefined>(undefined)\n  const [locked, setLocked] = useState(commentInfo.locked)\n\n  const isWeirichCommitValue = useMemo(() => isWeirichCommit(commit.oid, repo.id), [commit.oid, repo.id])\n\n  useEffect(() => {\n    if (ssrSafeWindow?.location.hash) {\n      const urlFragment = ssrSafeWindow.location.hash.slice(1)\n      const comment = comments.find(c => c.urlFragment === urlFragment)\n\n      if (comment) {\n        const commentElement = document.getElementById(urlFragment)\n        if (commentElement) {\n          commentElement.scrollIntoView()\n          commentElement.focus()\n        }\n      }\n    }\n  }, [comments])\n\n  return (\n    <>\n      <DiscussionCommentsHeader\n        commitOid={commit.oid}\n        commentCount={commentCount}\n        canLock={commentInfo.canLock}\n        locked={locked}\n        setLocked={setLocked}\n      />\n      {providerState === 'loading' && <CommentLoading />}\n      {providerState === 'error' && (\n        <Flash className=\"d-flex flex-justify-between flex-items-center\" variant=\"danger\">\n          <span>Failed to load comments.</span>\n          <Button onClick={() => retry()}>Retry</Button>\n        </Flash>\n      )}\n      {providerState === 'loaded' && canLoadMore && (\n        <Button className=\"width-full\" onClick={() => loadMore()}>\n          Load more comments\n        </Button>\n      )}\n      <ExistingCommitComments\n        comments={comments}\n        commit={commit}\n        locked={locked}\n        deleteComment={deleteComment}\n        updateComment={updateComment}\n        setNewCommentContent={setNewCommentContent}\n      />\n      {isWeirichCommitValue ? (\n        <div className=\"text-center\">\n          {[...Array(38)].map((_, i) => (\n            <img\n              key={`rose-${i}`}\n              alt=\"rose\"\n              src=\"/images/icons/emoji/rose.png\"\n              className={styles['discussion-comments-rose']}\n            />\n          ))}\n        </div>\n      ) : null}\n      {providerState === 'loaded' || comments.length !== 0 ? (\n        <>\n          <NewCommitComment\n            commitOid={commit.oid}\n            onAddComment={addComment}\n            newCommentContent={newCommentContent}\n            canComment={commentInfo.canComment}\n            locked={locked}\n            repoArchived={commentInfo.repoArchived}\n          />\n          {currentUser ? <NotificationsFooter commitOid={commit.oid} subscribed={subscribed ?? false} /> : null}\n        </>\n      ) : null}\n    </>\n  )\n}\n\nfunction DiscussionCommentsHeader({\n  commitOid,\n  commentCount,\n  locked,\n  setLocked,\n  canLock,\n}: {\n  commitOid: string\n  commentCount: number | undefined\n  locked: boolean\n  setLocked: (locked: boolean) => void\n  canLock: boolean\n}) {\n  const [lockDialogOpen, setLockDialogOpen] = useState(false)\n  return (\n    <div className=\"d-flex flex-items-center flex-justify-between\">\n      <h2 className=\"sr-only\">{commentCount} commit comments</h2>\n      <div className=\"d-flex flex-items-center\">\n        <div className=\"h4 pr-2\">Comments</div>\n        {commentCount !== undefined && <CounterLabel>{commentCount}</CounterLabel>}\n      </div>\n      {canLock && (\n        <>\n          <Button\n            leadingVisual={locked ? KeyIcon : LockIcon}\n            variant=\"invisible\"\n            onClick={() => setLockDialogOpen(true)}\n          >\n            {locked ? 'Unlock' : 'Lock'} conversation\n          </Button>\n          {lockDialogOpen && (\n            <LockConversationDialog\n              commitOid={commitOid}\n              locked={locked}\n              onClose={newLockedState => {\n                setLockDialogOpen(false)\n                if (newLockedState !== undefined) {\n                  setLocked(newLockedState)\n                }\n              }}\n            />\n          )}\n        </>\n      )}\n    </div>\n  )\n}\n\ntry{ DiscussionComments.displayName ||= 'DiscussionComments' } catch {}\ntry{ DiscussionCommentsInternal.displayName ||= 'DiscussionCommentsInternal' } catch {}\ntry{ DiscussionCommentsHeader.displayName ||= 'DiscussionCommentsHeader' } catch {}","import type {AuthorSettings} from '@github-ui/commit-attribution'\nimport {CommitAttribution as UiCommitAttribution} from '@github-ui/commit-attribution'\nimport type {RepositoryNWO} from '@github-ui/current-repository'\nimport {RelativeTime} from '@primer/react'\nimport type {PropsWithChildren} from 'react'\n\nimport {useFindDeferredCommitData} from '../contexts/DeferredCommitDataContext'\nimport type {Commit} from '../types/shared'\n\ninterface CommitAttributionProps {\n  commit: Commit\n  repo: RepositoryNWO\n  settings?: Partial<AuthorSettings>\n}\n\nexport function CommitAttribution({commit, repo, children, settings}: PropsWithChildren<CommitAttributionProps>) {\n  const deferredData = useFindDeferredCommitData(commit.oid)\n\n  return (\n    <UiCommitAttribution\n      authors={commit.authors}\n      committer={commit.committer}\n      committerAttribution={commit.committerAttribution}\n      onBehalfOf={deferredData?.onBehalfOf}\n      repo={repo}\n      includeVerbs={true}\n      authorSettings={{fontWeight: 'normal', fontColor: 'fg.muted', avatarSize: 16, ...settings}}\n    >\n      <RelativeTime className=\"pl-1\" datetime={commit.committedDate} tense=\"past\" />\n      {children}\n    </UiCommitAttribution>\n  )\n}\n\ntry{ CommitAttribution.displayName ||= 'CommitAttribution' } catch {}","import type {RepositoryNWO} from '@github-ui/current-repository'\nimport {SignedCommitBadge as UiSignedCommitBadge} from '@github-ui/signed-commit-badge'\nimport {LoadingSkeleton} from '@github-ui/skeleton/LoadingSkeleton'\n\nimport {useIsDeferredDataLoading} from '../contexts/DeferredCommitDataContext'\nimport {useCommitsAppPayload} from '../hooks/use-commits-app-payload'\nimport type {DeferredCommitData} from '../types/commits-types'\nimport {AsyncChecksStatusBadge} from './AsyncChecksStatusBadge'\n\nexport const verifiedBadgeWidth = '62px'\n\nexport function SignedCommitBadge({deferredData}: {deferredData: DeferredCommitData | undefined}) {\n  const {helpUrl} = useCommitsAppPayload()\n  const isLoading = useIsDeferredDataLoading()\n\n  return (\n    <>\n      {isLoading && <LoadingSkeleton variant=\"rounded\" className=\"d-none d-sm-flex\" width=\"62px\" />}\n      {!isLoading && deferredData === undefined && (\n        <LoadingSkeleton variant=\"rounded\" className=\"d-none d-sm-flex\" width=\"62px\" />\n      )}\n      {!isLoading && deferredData && (\n        <UiSignedCommitBadge\n          commitOid={deferredData.oid}\n          hasSignature={true}\n          verificationStatus={deferredData.verifiedStatus}\n          signature={deferredData.signatureInformation ? {helpUrl, ...deferredData.signatureInformation} : undefined}\n        />\n      )}\n    </>\n  )\n}\n\nexport function CommitChecksStatusBadge({\n  deferredData,\n  oid,\n  repository,\n}: {\n  deferredData: DeferredCommitData | undefined\n  oid: string\n  repository: RepositoryNWO\n}) {\n  const isLoading = useIsDeferredDataLoading()\n\n  let checkStatusCount = ''\n  try {\n    checkStatusCount = deferredData?.statusCheckStatus?.short_text?.split('checks')[0]?.trim() || ''\n  } catch {\n    //noop\n  }\n\n  return (\n    <>\n      {isLoading && <LoadingSkeleton variant=\"rounded\" className=\"d-none d-sm-flex ml-2\" width=\"20px\" />}\n      {!isLoading && deferredData === undefined && (\n        <LoadingSkeleton variant=\"rounded\" className=\"d-none d-sm-flex ml-2\" width=\"20px\" />\n      )}\n      {!isLoading && deferredData?.statusCheckStatus && <div className=\"d-none d-sm-flex ml-1\">&middot;</div>}\n      <div className=\"d-none d-sm-flex\">\n        <AsyncChecksStatusBadge\n          oid={oid}\n          status={deferredData?.statusCheckStatus?.state}\n          descriptionString={checkStatusCount}\n          repo={repository}\n        />\n      </div>\n    </>\n  )\n}\n\ntry{ SignedCommitBadge.displayName ||= 'SignedCommitBadge' } catch {}\ntry{ CommitChecksStatusBadge.displayName ||= 'CommitChecksStatusBadge' } catch {}","import {GitCommitIcon} from '@primer/octicons-react'\nimport {Heading, type HeadingProps, Octicon, Timeline} from '@primer/react'\nimport type {BetterSystemStyleObject} from '@primer/react/lib-esm/sx'\nimport type {PropsWithChildren} from 'react'\n\nexport type TimelineRowProps = {\n  leadingVisual?: JSX.Element\n  clipTimeline?: 'none' | 'bottom' | 'top'\n  sx?: BetterSystemStyleObject\n}\n\nconst itemSxMap = {\n  none: {},\n  bottom: {pb: 0},\n  top: {pt: 0},\n}\n\nconst DefaultLeadingVisual = () => {\n  return <Octicon icon={GitCommitIcon} />\n}\n\nfunction TimelineRowComponent({\n  children,\n  leadingVisual,\n  clipTimeline = 'none',\n  sx: externalSx = {},\n}: PropsWithChildren<TimelineRowProps>) {\n  const itemSx = itemSxMap[clipTimeline]\n\n  return (\n    <Timeline.Item sx={{py: 1, ...itemSx, ...externalSx}}>\n      <Timeline.Badge sx={{backgroundColor: 'canvas.default'}}>\n        {leadingVisual ?? <DefaultLeadingVisual />}\n      </Timeline.Badge>\n      <Timeline.Body className=\"mt-0\">{children}</Timeline.Body>\n    </Timeline.Item>\n  )\n}\n\nfunction TimelineRowHeading({\n  title,\n  as,\n  ...props\n}: {title: string; as: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'} & Omit<HeadingProps, 'as'>) {\n  return (\n    <Heading as={as} className=\"text-normal f5 py-1\" {...props}>\n      {title}\n    </Heading>\n  )\n}\n\nexport const TimelineRow = Object.assign(TimelineRowComponent, {\n  Heading: TimelineRowHeading,\n})\n\ntry{ DefaultLeadingVisual.displayName ||= 'DefaultLeadingVisual' } catch {}\ntry{ TimelineRowComponent.displayName ||= 'TimelineRowComponent' } catch {}\ntry{ TimelineRowHeading.displayName ||= 'TimelineRowHeading' } catch {}\ntry{ TimelineRow.displayName ||= 'TimelineRow' } catch {}","import {CopyToClipboardButton} from '@github-ui/copy-to-clipboard'\nimport type {PortalTooltipProps} from '@github-ui/portal-tooltip/portalled'\nimport {useAnalytics} from '@github-ui/use-analytics'\n\nimport {useIsLoggingInformationProvided, useLoggingInfo} from '../contexts/CommitsLoggingContext'\nimport {shortSha} from '../utils/short-sha'\n\nexport function CopySHA({sha, direction = 's'}: {sha: string; direction?: PortalTooltipProps['direction']}) {\n  const {sendAnalyticsEvent} = useAnalytics()\n  const {loggingPrefix, loggingPayload} = useLoggingInfo()\n  const shouldLog = useIsLoggingInformationProvided()\n  const loggingFunction = () => {\n    if (shouldLog) {\n      sendAnalyticsEvent(`${loggingPrefix}click`, 'COPY_SHA_CLICKED', loggingPayload)\n    }\n  }\n  return (\n    // this is a click trapping wrapper - hitting enter on the keyboard counts as a click as well\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n    <div onClick={loggingFunction}>\n      <CopyToClipboardButton\n        textToCopy={sha}\n        ariaLabel={`Copy full SHA for ${shortSha(sha)}`}\n        tooltipProps={{direction, anchorSide: 'outside-bottom'}}\n        size=\"small\"\n        avoidStyledComponent={true}\n        hasPortalTooltip={true}\n      />\n    </div>\n  )\n}\n\ntry{ CopySHA.displayName ||= 'CopySHA' } catch {}","import type {PropsWithChildren} from 'react'\n\ninterface PanelProps {\n  className?: string\n}\n\nexport function Panel({children, className = ''}: PropsWithChildren<PanelProps>) {\n  return <div className={`border rounded-2 color-border-default mt-2 d-flex flex-column ${className}`}>{children}</div>\n}\n\ntry{ Panel.displayName ||= 'Panel' } catch {}","import type React from 'react'\nimport {createContext, useContext} from 'react'\n\nimport type {LoggingInformation} from '../types/commits-types'\n\nexport const baseLoggingInfo: LoggingInformation = {\n  loggingPayload: undefined,\n  loggingPrefix: undefined,\n}\n\nconst CommitsLoggingContext = createContext<LoggingInformation>(baseLoggingInfo)\n\nexport function CommitsLoggingInfoProvider({\n  children,\n  loggingInfo,\n}: React.PropsWithChildren<{loggingInfo: LoggingInformation}>) {\n  return <CommitsLoggingContext.Provider value={loggingInfo}>{children}</CommitsLoggingContext.Provider>\n}\n\nexport function useIsLoggingInformationProvided() {\n  const loggingInfo = useContext(CommitsLoggingContext)\n  const loggingInfoIsPresent = loggingInfo.loggingPayload !== undefined && loggingInfo.loggingPrefix !== undefined\n  return loggingInfoIsPresent\n}\n\nexport function useLoggingInfo() {\n  const loggingInfo = useContext(CommitsLoggingContext)\n\n  return loggingInfo\n}\n\ntry{ CommitsLoggingContext.displayName ||= 'CommitsLoggingContext' } catch {}\ntry{ CommitsLoggingInfoProvider.displayName ||= 'CommitsLoggingInfoProvider' } catch {}","import type React from 'react'\nimport {createContext, useContext} from 'react'\n\nimport type {DeferredData} from '../types/commits-types'\n\nexport const baseEmptyStateLoading: DeferredData = {\n  deferredCommits: [],\n  renameHistory: null,\n  loading: true,\n}\n\nexport const baseEmptyStateNotLoading: DeferredData = {\n  deferredCommits: [],\n  renameHistory: null,\n  loading: false,\n}\n\nconst DeferredCommitDataContext = createContext<DeferredData>(baseEmptyStateLoading)\n\nexport function DeferredCommitDataProvider({\n  children,\n  deferredData,\n}: React.PropsWithChildren<{deferredData: DeferredData}>) {\n  return <DeferredCommitDataContext.Provider value={deferredData}>{children}</DeferredCommitDataContext.Provider>\n}\n\nexport function useFindDeferredCommitData(oid: string) {\n  const deferredData = useContext(DeferredCommitDataContext)\n\n  //this will never be null in the actual execution of the code, but having the '?' makes testing everything\n  //significantly easier.\n  return deferredData.deferredCommits?.find(data => data?.oid === oid)\n}\n\nexport function useIsDeferredDataLoading() {\n  const deferredData = useContext(DeferredCommitDataContext)\n  return deferredData.loading\n}\n\nexport function useRenameHistoryData() {\n  const deferredData = useContext(DeferredCommitDataContext)\n\n  return deferredData.renameHistory\n}\n\ntry{ DeferredCommitDataContext.displayName ||= 'DeferredCommitDataContext' } catch {}\ntry{ DeferredCommitDataProvider.displayName ||= 'DeferredCommitDataProvider' } catch {}","import type {RepositoryNWO} from '@github-ui/current-repository'\nimport {noop} from '@github-ui/noop'\nimport {commitDiscussionsPath} from '@github-ui/paths'\nimport {reactFetchJSON} from '@github-ui/verified-fetch'\nimport type React from 'react'\nimport {createContext, useCallback, useContext, useEffect, useMemo, useState} from 'react'\n\nimport type {CommitComment} from '../types/commit-types'\nimport type {FetchRequestState} from '../types/shared'\n\ntype DiscussionCommentsContextType = {\n  comments: CommitComment[]\n  addComment: (comments: CommitComment) => void\n  deleteComment: (commentId: CommitComment['id']) => void\n  updateComment: (comment: CommitComment) => void\n  loadMore: () => void\n  retry: () => void\n  canLoadMore: boolean\n  count: number\n  subscribed: boolean\n  providerState: FetchRequestState\n}\n\nconst DiscussionCommentsContext = createContext<DiscussionCommentsContextType>({\n  comments: [],\n  addComment: noop,\n  deleteComment: noop,\n  updateComment: noop,\n  loadMore: noop,\n  retry: noop,\n  canLoadMore: false,\n  count: 0,\n  subscribed: false,\n  providerState: 'initial',\n})\n\nexport interface DiscussionCommentData {\n  comments: CommitComment[]\n  count: number\n  canLoadMore: boolean\n  subscribed: boolean\n}\n\ntype DiscussionCommentsProviderProps = {\n  comments?: CommitComment[]\n  commentCount?: number\n  canLoadMore?: boolean\n  subscribed?: boolean\n  providerState?: FetchRequestState\n  repo: RepositoryNWO\n  commitOid: string\n}\n\nexport function DiscussionCommentsProvider({\n  children,\n  comments: externalComments = [],\n  commentCount: externalCommentCount = 0,\n  canLoadMore: externalCanLoadMore = false,\n  subscribed: externalSubscribed = false,\n  providerState: externalProviderState = 'initial',\n  repo,\n  commitOid,\n}: React.PropsWithChildren<DiscussionCommentsProviderProps>) {\n  const [comments, setComments] = useState<CommitComment[]>(externalComments)\n  const [count, setCount] = useState<number>(externalCommentCount)\n  const [canLoadMore, setCanLoadMore] = useState(externalCanLoadMore)\n  const [providerState, setProviderState] = useState(externalProviderState)\n  const [subscribed, setSubscribed] = useState(externalSubscribed)\n\n  // Sync external state with internal state\n  // if this provider state changes, it's due to a navigation and refetch of useFetchDeferredCommentData in Commit.tsx\n  // when this happens we sync/re-set the other related values\n  useEffect(() => {\n    setCount(externalCommentCount)\n    setComments(externalComments)\n    setCanLoadMore(externalCanLoadMore)\n    setSubscribed(externalSubscribed)\n    setProviderState(externalProviderState)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [externalProviderState])\n\n  const loadDiscussionComments = useCallback(\n    async (beforeCommentId?: string) => {\n      setProviderState('loading')\n\n      const response = await reactFetchJSON(\n        commitDiscussionsPath({\n          owner: repo.ownerLogin,\n          repo: repo.name,\n          commitOid,\n          beforeCommentId,\n        }),\n      )\n\n      if (response.ok) {\n        const data: DiscussionCommentData = await response.json()\n        if (beforeCommentId) {\n          setComments(c => [...data.comments, ...c]) // pagination\n        } else {\n          setComments(data.comments) //retry\n        }\n\n        setProviderState('loaded')\n\n        // We should only need these value from the initial useFetchDeferredCommentData\n        // however, in the case of a failure and retry, we need to update these values\n        setCount(data.count)\n        setSubscribed(data.subscribed)\n        setCanLoadMore(data.canLoadMore)\n      } else {\n        setProviderState('error')\n      }\n    },\n    [repo.ownerLogin, repo.name, commitOid],\n  )\n\n  const loadMore = useCallback(() => {\n    const earliestComment = comments[0]\n\n    if (!earliestComment || !canLoadMore) {\n      return\n    }\n\n    loadDiscussionComments(earliestComment.id.toString())\n  }, [canLoadMore, comments, loadDiscussionComments])\n\n  const addComment = useCallback(\n    (comment: CommitComment) => {\n      setComments([...comments, comment])\n      setCount((count ?? 0) + 1)\n    },\n    [comments, count],\n  )\n\n  const deleteComment = useCallback(\n    (commentId: CommitComment['id']) => {\n      setComments(comments.filter(c => c.id !== commentId))\n      setCount((count ?? 0) - 1)\n    },\n    [comments, count],\n  )\n\n  const updateComment = useCallback(\n    (comment: CommitComment) => {\n      setComments(comments.map(c => (c.id === comment.id ? comment : c)))\n    },\n    [comments],\n  )\n\n  const DiscussionComments = useMemo(\n    () => ({\n      addComment,\n      canLoadMore,\n      comments,\n      count,\n      deleteComment,\n      loadMore,\n      retry: loadDiscussionComments,\n      subscribed,\n      providerState,\n      updateComment,\n    }),\n    [\n      addComment,\n      canLoadMore,\n      comments,\n      count,\n      deleteComment,\n      loadDiscussionComments,\n      loadMore,\n      providerState,\n      subscribed,\n      updateComment,\n    ],\n  )\n\n  return <DiscussionCommentsContext.Provider value={DiscussionComments}>{children}</DiscussionCommentsContext.Provider>\n}\n\nexport function useDiscussionComments() {\n  const context = useContext(DiscussionCommentsContext)\n\n  if (!context) {\n    throw new Error('useDiscussionComments must be used within a DiscussionCommentsProvider')\n  }\n\n  return context\n}\n\ntry{ DiscussionCommentsContext.displayName ||= 'DiscussionCommentsContext' } catch {}\ntry{ DiscussionCommentsProvider.displayName ||= 'DiscussionCommentsProvider' } catch {}\ntry{ DiscussionComments.displayName ||= 'DiscussionComments' } catch {}","import type {Thread} from '@github-ui/diff-lines'\nimport {noop} from '@github-ui/noop'\nimport type React from 'react'\nimport {createContext, useCallback, useContext, useEffect, useMemo, useState} from 'react'\n\nimport type {CommitComment} from '../types/commit-types'\n\ntype InlineCommentsContextType = {\n  comments: CommitComment[]\n  addComments: (comments: CommitComment[], path: string, position: string) => void\n  findInlineComment: (relayId: string) => CommitComment | undefined\n  getCommentCountByPath: (path: string) => number\n  getThreadDataByPathAndPosition: (path: string, position: number) => CommentThreadData | undefined\n}\n\nexport type CommentThreadData = {\n  path: string\n  position: number\n  count: number\n  threads?: Array<Pick<Thread, 'id' | 'commentsData' | 'diffSide'>>\n}\n\nconst InlineCommentsContext = createContext<InlineCommentsContextType>({\n  comments: [],\n  addComments: noop,\n  findInlineComment: () => undefined,\n  getCommentCountByPath: () => 0,\n  getThreadDataByPathAndPosition: () => undefined,\n})\n\nfunction arrayToMap(array: CommentThreadData[]) {\n  return array.reduce((acc, thread) => {\n    acc.set(`${thread.path}::${thread.position}`, thread)\n    return acc\n  }, new Map<string, CommentThreadData>())\n}\n\nexport function InlineCommentsProvider({\n  children,\n  initialFiles,\n}: React.PropsWithChildren<{initialFiles?: CommentThreadData[]}>) {\n  const [comments, setComments] = useState<CommitComment[]>([])\n  const [commentThreadData, setCommentThreadData] = useState<CommentThreadData[]>(initialFiles ?? [])\n  const [commentThreadDataMap, setCommentThreadDataMap] = useState<Map<string, CommentThreadData>>(\n    initialFiles ? arrayToMap(initialFiles) : new Map(),\n  )\n\n  useEffect(() => {\n    setCommentThreadData(initialFiles ?? [])\n    setCommentThreadDataMap(initialFiles ? arrayToMap(initialFiles) : new Map())\n  }, [initialFiles])\n\n  const addComments = useCallback(\n    (newComments: CommitComment[], path: string, position: string) => {\n      const newCommentIds = newComments.map(comment => comment.id)\n      const existingComments = comments.filter(comment => !newCommentIds.includes(comment.id))\n\n      const unchangedThreads = commentThreadData.filter(\n        thread => thread.path !== path || thread.position !== parseInt(position),\n      )\n\n      const threadToAdd: CommentThreadData = {\n        path,\n        position: parseInt(position),\n        count: newComments.length,\n        threads: [\n          {\n            id: `${path}::${position}`,\n            diffSide: 'RIGHT',\n            commentsData: {\n              totalCount: newComments.length,\n              comments: newComments.map(comment => {\n                return {\n                  author: {\n                    avatarUrl: comment?.author?.avatarUrl ?? '',\n                    login: comment?.author?.login ?? '',\n                    url: '',\n                  },\n                }\n              }),\n            },\n          },\n        ],\n      }\n\n      setComments([...existingComments, ...newComments])\n      setCommentThreadData([...unchangedThreads, threadToAdd])\n      setCommentThreadDataMap(arrayToMap([...unchangedThreads, threadToAdd]))\n    },\n    [commentThreadData, comments],\n  )\n\n  const findInlineComment = useCallback(\n    (relayId: string) => {\n      return comments.find(comment => comment.relayId === relayId)\n    },\n    [comments],\n  )\n\n  const getCommentCountByPath = useCallback(\n    (path: string) => {\n      let count = 0\n\n      for (const thread of commentThreadData) {\n        if (thread.path === path) {\n          count += thread.count\n        }\n      }\n\n      return count\n    },\n    [commentThreadData],\n  )\n\n  const getThreadDataByPathAndPosition = useCallback(\n    (path: string, position: number) => {\n      return commentThreadDataMap.get(`${path}::${position}`)\n    },\n    [commentThreadDataMap],\n  )\n\n  const inlineComments = useMemo(\n    () => ({\n      comments,\n      addComments,\n      findInlineComment,\n      getCommentCountByPath,\n      getThreadDataByPathAndPosition,\n    }),\n    [addComments, comments, findInlineComment, getCommentCountByPath, getThreadDataByPathAndPosition],\n  )\n\n  return <InlineCommentsContext.Provider value={inlineComments}>{children}</InlineCommentsContext.Provider>\n}\n\nexport function useInlineComments() {\n  const context = useContext(InlineCommentsContext)\n\n  if (!context) {\n    throw new Error('useInlineComments must be used within a InlineCommentsProvider')\n  }\n\n  return context\n}\n\ntry{ InlineCommentsContext.displayName ||= 'InlineCommentsContext' } catch {}\ntry{ InlineCommentsProvider.displayName ||= 'InlineCommentsProvider' } catch {}","import type {RepositoryNWO} from '@github-ui/current-repository'\nimport {blobPath, commitPath, repositoryTreePath} from '@github-ui/paths'\nimport {Link} from '@github-ui/react-core/link'\nimport {useAnalytics} from '@github-ui/use-analytics'\nimport {CodeIcon, CommentIcon, EllipsisIcon, FileCodeIcon} from '@primer/octicons-react'\nimport {Button, Tooltip} from '@primer/react'\nimport React from 'react'\n\nimport {useIsLoggingInformationProvided, useLoggingInfo} from '../contexts/CommitsLoggingContext'\nimport {shortSha} from '../utils/short-sha'\nimport {COMMENTS_CONTAINER_ID} from './Commit/comments/DiscussionComments'\n\nexport const BrowseRepositoryAtThisPoint = React.memo(WrappedBrowseRepositoryAtThisPoint)\n\nfunction WrappedBrowseRepositoryAtThisPoint({repo, oid}: {repo: RepositoryNWO; oid: string}) {\n  const browseRepoId = `browse-repo-${shortSha(oid)}`\n\n  const {sendAnalyticsEvent} = useAnalytics()\n  const {loggingPrefix, loggingPayload} = useLoggingInfo()\n  const shouldLog = useIsLoggingInformationProvided()\n  const loggingFunction = () => {\n    if (shouldLog) {\n      sendAnalyticsEvent(`${loggingPrefix}click`, 'COMMITS_BROWSE_REPOSITORY_AT_THIS_POINT_CLICKED', loggingPayload)\n    }\n  }\n  return (\n    <Tooltip aria-label=\"Browse repository at this point\" id={browseRepoId} direction=\"sw\">\n      <a\n        aria-labelledby={browseRepoId}\n        href={repositoryTreePath({repo, action: 'tree', commitish: oid})}\n        className=\"Button Button--iconOnly Button--invisible Button--small\"\n        data-testid=\"commit-row-browse-repo\"\n        onClick={loggingFunction}\n      >\n        <CodeIcon />\n      </a>\n    </Tooltip>\n  )\n}\n\nexport const ViewCodeAtThisPoint = React.memo(WrappedViewCodeAtThisPoint)\n\nexport function WrappedViewCodeAtThisPoint({repo, oid, path}: {repo: RepositoryNWO; oid: string; path: string}) {\n  if (!path) return null\n\n  const viewCodeId = `view-code-${shortSha(oid)}`\n\n  return (\n    <Tooltip aria-label=\"View code at this point\" id={viewCodeId} direction=\"sw\">\n      <a\n        aria-labelledby={viewCodeId}\n        href={blobPath({owner: repo.ownerLogin, repo: repo.name, commitish: oid, filePath: path})}\n        className=\"Button Button--iconOnly Button--invisible Button--small\"\n        data-testid=\"commit-row-view-code\"\n      >\n        <FileCodeIcon />\n      </a>\n    </Tooltip>\n  )\n}\n\nexport function ViewCommitDetails({\n  commitUrl,\n  oid,\n  softNavToCommit,\n}: {\n  commitUrl: string\n  oid: string\n  softNavToCommit?: boolean\n}) {\n  const sharedProps = {\n    variant: 'invisible' as const,\n    size: 'small' as const,\n    sx: {fontFamily: 'var(--fontStack-monospace)', color: 'fg.muted'},\n  }\n\n  return (\n    <Tooltip aria-label=\"View commit details\" direction=\"s\">\n      {softNavToCommit ? (\n        <Button as={Link} to={commitUrl} {...sharedProps}>\n          {shortSha(oid)}\n        </Button>\n      ) : (\n        <a className=\"Button--invisible Button--small Button text-mono\" href={commitUrl} {...sharedProps}>\n          <span className=\"Button-content\">\n            <span className=\"Button-label color-fg-muted\">{shortSha(oid)}</span>\n          </span>\n        </a>\n      )}\n    </Tooltip>\n  )\n}\n\nexport function ToggleCommitDescription({\n  showDescription,\n  setShowDescription,\n  oid,\n}: {\n  showDescription: boolean\n  setShowDescription: (arg: boolean) => void\n  oid: string\n}) {\n  const truncatedSha = shortSha(oid)\n  const showDescriptionId = `show-description-${truncatedSha}`\n\n  return (\n    <Tooltip\n      aria-label={`${!showDescription ? 'Show' : 'Hide'} description for ${truncatedSha}`}\n      id={showDescriptionId}\n      direction=\"se\"\n      className=\"ml-1\"\n    >\n      <button\n        className=\"Button Button--iconOnly Button--invisible Button--small\"\n        data-testid=\"commit-row-show-description-button\"\n        aria-labelledby={showDescriptionId}\n        aria-pressed={showDescription}\n        aria-expanded={showDescription}\n        onClick={e => {\n          e.preventDefault()\n          setShowDescription(!showDescription)\n        }}\n      >\n        <EllipsisIcon />\n      </button>\n    </Tooltip>\n  )\n}\n\nexport function CommitCommentCount({count, repo, oid}: {count?: number; repo: RepositoryNWO; oid: string}) {\n  const commentCountId = `comment-count-${shortSha(oid)}`\n\n  if (!count) {\n    return null\n  }\n\n  return (\n    <Tooltip aria-label={`View ${count} commit comment${count > 1 ? 's' : ''}`} id={commentCountId} direction=\"sw\">\n      <a\n        aria-labelledby={commentCountId}\n        href={`${commitPath({owner: repo.ownerLogin, repo: repo.name, commitish: oid})}#${COMMENTS_CONTAINER_ID}`}\n        className=\"Button Button--invisible Button--small\"\n        data-testid=\"commit-row-comments\"\n      >\n        <span className=\"Button-content color-fg-muted\">\n          <CommentIcon />\n          <span className=\"Button-label\">{count}</span>\n        </span>\n      </a>\n    </Tooltip>\n  )\n}\n\ntry{ BrowseRepositoryAtThisPoint.displayName ||= 'BrowseRepositoryAtThisPoint' } catch {}\ntry{ WrappedBrowseRepositoryAtThisPoint.displayName ||= 'WrappedBrowseRepositoryAtThisPoint' } catch {}\ntry{ ViewCodeAtThisPoint.displayName ||= 'ViewCodeAtThisPoint' } catch {}\ntry{ WrappedViewCodeAtThisPoint.displayName ||= 'WrappedViewCodeAtThisPoint' } catch {}\ntry{ ViewCommitDetails.displayName ||= 'ViewCommitDetails' } catch {}\ntry{ ToggleCommitDescription.displayName ||= 'ToggleCommitDescription' } catch {}\ntry{ CommitCommentCount.displayName ||= 'CommitCommentCount' } catch {}","import {announce} from '@github-ui/aria-live'\nimport {CheckStatusDialog, useCommitChecksStatusDetails} from '@github-ui/commit-checks-status'\nimport type {RepositoryNWO} from '@github-ui/current-repository'\nimport {ListItem} from '@github-ui/list-view/ListItem'\nimport {ListItemDescription} from '@github-ui/list-view/ListItemDescription'\nimport {ListItemMainContent} from '@github-ui/list-view/ListItemMainContent'\nimport {ListItemMetadata} from '@github-ui/list-view/ListItemMetadata'\nimport {ListItemTitle} from '@github-ui/list-view/ListItemTitle'\nimport {SafeHTMLText} from '@github-ui/safe-html'\nimport {useAnalytics} from '@github-ui/use-analytics'\nimport {lazy, Suspense, useEffect, useRef, useState} from 'react'\n\nimport {useIsLoggingInformationProvided, useLoggingInfo} from '../../contexts/CommitsLoggingContext'\nimport {useFindDeferredCommitData} from '../../contexts/DeferredCommitDataContext'\nimport type {Commit} from '../../types/shared'\nimport {CommitAttribution} from '../CommitAttribution'\nimport {\n  BrowseRepositoryAtThisPoint,\n  CommitCommentCount,\n  ToggleCommitDescription,\n  ViewCodeAtThisPoint,\n  ViewCommitDetails,\n} from '../CommitRowActions'\nimport {CommitChecksStatusBadge, SignedCommitBadge, verifiedBadgeWidth} from '../CommitRowBadges'\nimport {CopySHA} from '../CopySHA'\n\nexport interface CommitRowProps {\n  commit: Commit\n  repo: RepositoryNWO\n  path: string\n  softNavToCommit?: boolean\n}\n\n// eslint-disable-next-line github/no-then\nconst CommitActionBar = lazy(() => import('./CommitActionBar').then(m => ({default: m.CommitActionBar})))\n\nexport function CommitRow({commit, repo, path, softNavToCommit}: CommitRowProps) {\n  const [showDescription, setShowDescription] = useState(false)\n  const commitDescriptionRef = useRef<HTMLSpanElement>(null)\n  const [details, fetchDetails] = useCommitChecksStatusDetails(commit.oid, repo)\n  const [isOpen, setIsOpen] = useState(false)\n  const deferredData = useFindDeferredCommitData(commit.oid)\n\n  const {sendAnalyticsEvent} = useAnalytics()\n  const {loggingPrefix, loggingPayload} = useLoggingInfo()\n  const shouldLog = useIsLoggingInformationProvided()\n  const loggingFunction = () => {\n    if (shouldLog) {\n      sendAnalyticsEvent(`${loggingPrefix}click`, 'COMMITS_TITLE_CLICKED', loggingPayload)\n    }\n  }\n\n  useEffect(() => {\n    if (showDescription && commitDescriptionRef.current && commitDescriptionRef.current.textContent) {\n      announce(commitDescriptionRef.current.textContent)\n    }\n  }, [commitDescriptionRef, showDescription])\n\n  return (\n    <>\n      <ListItem\n        data-testid=\"commit-row-item\"\n        sx={{\n          ':first-child': {\n            borderTopLeftRadius: 2,\n            borderTopRightRadius: 2,\n          },\n          ':last-child': {\n            borderBottomLeftRadius: 2,\n            borderBottomRightRadius: 2,\n          },\n        }}\n        title={\n          <ListItemTitle\n            value={commit.shortMessage}\n            markdownValue={commit.shortMessageMarkdownLink}\n            href={commit.url}\n            containerSx={{display: 'inline'}}\n            headingSx={{display: 'inline'}}\n            onClick={loggingFunction}\n          >\n            {commit.bodyMessageHtml && (\n              <ToggleCommitDescription\n                showDescription={showDescription}\n                setShowDescription={setShowDescription}\n                oid={commit.oid}\n              />\n            )}\n          </ListItemTitle>\n        }\n        metadata={\n          <>\n            <ListItemMetadata>\n              <CommitCommentCount oid={commit.oid} repo={repo} count={deferredData?.commentCount ?? 0} />\n            </ListItemMetadata>\n\n            <ListItemMetadata sx={{minWidth: verifiedBadgeWidth}}>\n              <SignedCommitBadge deferredData={deferredData} />\n            </ListItemMetadata>\n\n            <ListItemMetadata className=\"d-none d-sm-flex px-0 gap-2\" variant=\"primary\">\n              <div className=\"d-flex\">\n                <ViewCommitDetails oid={commit.oid} commitUrl={commit.url} softNavToCommit={softNavToCommit} />\n                <CopySHA sha={commit.oid} />\n              </div>\n              <ViewCodeAtThisPoint repo={repo} oid={commit.oid} path={path} />\n              <BrowseRepositoryAtThisPoint repo={repo} oid={commit.oid} />\n            </ListItemMetadata>\n          </>\n        }\n        secondaryActions={\n          <Suspense>\n            <CommitActionBar\n              commit={commit}\n              repo={repo}\n              path={path}\n              setDialogOpen={setIsOpen}\n              fetchCheckDetails={fetchDetails}\n              deferredData={deferredData}\n            />\n          </Suspense>\n        }\n      >\n        <div className=\"px-1\" />\n        <ListItemMainContent>\n          {showDescription && commit.bodyMessageHtml && (\n            <ListItemDescription>\n              <SafeHTMLText\n                ref={commitDescriptionRef}\n                html={commit.bodyMessageHtml}\n                className=\"ws-pre-wrap extended-commit-description-container pb-2 text-mono wb-break-word\"\n              />\n            </ListItemDescription>\n          )}\n\n          <ListItemDescription>\n            <CommitAttribution commit={commit} repo={repo}>\n              <CommitChecksStatusBadge repository={repo} deferredData={deferredData} oid={commit.oid} />\n            </CommitAttribution>\n          </ListItemDescription>\n        </ListItemMainContent>\n      </ListItem>\n      {deferredData?.statusCheckStatus && isOpen && (\n        <CheckStatusDialog\n          combinedStatus={details}\n          isOpen={isOpen}\n          onDismiss={() => {\n            setIsOpen(false)\n          }}\n        />\n      )}\n    </>\n  )\n}\n\ntry{ CommitActionBar.displayName ||= 'CommitActionBar' } catch {}\ntry{ CommitRow.displayName ||= 'CommitRow' } catch {}","import type {RepositoryNWO} from '@github-ui/current-repository'\nimport {ListView} from '@github-ui/list-view'\nimport {useId} from 'react'\n\nimport type {Commit} from '../../types/shared'\nimport {Panel} from '../Panel'\nimport {CommitRow} from './CommitRow'\nimport {TimelineRow} from './TimelineRow'\n\nexport type CommitGroupProps = {\n  repo: RepositoryNWO\n  commits: Commit[]\n  title: string\n  shouldClipTimeline: boolean\n  currentBlobPath?: string\n  softNavToCommit?: boolean\n}\n\n/**\n * See ListView stories for a representation of this component.\n * ui/packages/list-view/src/stories/Commits.stories.tsx\n * https://ui.githubapp.com/storybook/?path=/story/recipes-list-view-dotcom-pages--commits\n */\nexport function CommitGroup({\n  commits,\n  title,\n  shouldClipTimeline,\n  repo,\n  currentBlobPath = '',\n  softNavToCommit,\n}: CommitGroupProps) {\n  const groupId = useId()\n\n  return (\n    <>\n      <TimelineRow clipTimeline={shouldClipTimeline ? 'top' : 'none'}>\n        <TimelineRow.Heading as=\"h3\" id={groupId} title={`Commits on ${title}`} data-testid=\"commit-group-title\" />\n        <Panel>\n          <ListView key={title} title={title} titleHeaderTag=\"h3\" ariaLabelledBy={groupId}>\n            {commits.map(commit => {\n              return (\n                <CommitRow\n                  key={commit.oid}\n                  commit={commit}\n                  repo={repo}\n                  path={currentBlobPath}\n                  softNavToCommit={softNavToCommit}\n                />\n              )\n            })}\n          </ListView>\n        </Panel>\n      </TimelineRow>\n    </>\n  )\n}\n\ntry{ CommitGroup.displayName ||= 'CommitGroup' } catch {}","import type {RepositoryNWO} from '@github-ui/current-repository'\nimport {Timeline} from '@primer/react'\n\nimport {CommitGroup} from '../components/Commits/CommitGroup'\nimport {CommitsLoggingInfoProvider} from '../contexts/CommitsLoggingContext'\nimport {baseEmptyStateNotLoading, DeferredCommitDataProvider} from '../contexts/DeferredCommitDataContext'\nimport type {CommitGroup as CommitGroupType, DeferredData, LoggingInformation} from '../types/commits-types'\n\nexport type CommitsProps = {\n  leadingContent?: React.ReactNode\n  commitGroups: CommitGroupType[]\n  trailingContent?: React.ReactNode\n  repository: RepositoryNWO\n  deferredCommitData?: DeferredData\n  currentBlobPath?: string\n  shouldClipTimeline?: boolean\n  softNavToCommit?: boolean\n  loggingPayload?: {[key: string]: unknown}\n  loggingPrefix?: string\n}\n\nexport function Commits({\n  leadingContent,\n  commitGroups,\n  trailingContent,\n  deferredCommitData = baseEmptyStateNotLoading,\n  repository,\n  currentBlobPath,\n  loggingPayload,\n  loggingPrefix,\n  shouldClipTimeline = true,\n  softNavToCommit = false,\n}: CommitsProps) {\n  const loggingInfo: LoggingInformation = {loggingPayload, loggingPrefix}\n\n  return (\n    <DeferredCommitDataProvider deferredData={deferredCommitData}>\n      <CommitsLoggingInfoProvider loggingInfo={loggingInfo}>\n        <Timeline clipSidebar>\n          {leadingContent}\n          {commitGroups.map((commitGroup, index) => {\n            return (\n              <CommitGroup\n                key={commitGroup.title}\n                title={commitGroup.title}\n                commits={commitGroup.commits}\n                shouldClipTimeline={shouldClipTimeline && index === 0}\n                currentBlobPath={currentBlobPath}\n                repo={repository}\n                softNavToCommit={softNavToCommit}\n              />\n            )\n          })}\n          {trailingContent}\n        </Timeline>\n      </CommitsLoggingInfoProvider>\n    </DeferredCommitDataProvider>\n  )\n}\n\ntry{ Commits.displayName ||= 'Commits' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"metadata\":\"Metadata-module__metadata--yvrod\",\"secondary\":\"Metadata-module__secondary--zMgLx\",\"primary\":\"Metadata-module__primary--cJgJU\",\"alignRight\":\"Metadata-module__alignRight--rp0_Z\"};","import {testIdProps} from '@github-ui/test-id-props'\nimport {Box, type BoxProps} from '@primer/react'\nimport {clsx} from 'clsx'\nimport type {PropsWithChildren} from 'react'\n\nimport type {StylableProps} from '../types'\nimport styles from './Metadata.module.css'\n\nexport type ListItemMetadataProps = PropsWithChildren<{\n  /**\n   * Controls how the metadata will be aligned inside the trailing content. Defaults to 'left'.\n   */\n  alignment?: 'left' | 'right'\n  /**\n   * Alter the appearance of the metadata to appear more subtle than other ListItem content ('secondary', default) or\n   * comparable to other ListItem content ('primary'). Affects text color, font size, width, and distance from other\n   * metadata items.\n   */\n  variant?: 'primary' | 'secondary'\n}> &\n  Omit<BoxProps, 'sx'> &\n  StylableProps\n\nexport function ListItemMetadata({children, alignment, variant, ...props}: ListItemMetadataProps) {\n  return (\n    <Box\n      {...testIdProps('list-view-item-metadata-item')}\n      {...props}\n      className={clsx(\n        styles.metadata,\n        variant === 'primary' ? styles.primary : styles.secondary,\n        alignment === 'right' && styles.alignRight,\n        props.className,\n      )}\n    >\n      {children}\n    </Box>\n  )\n}\n\ntry{ ListItemMetadata.displayName ||= 'ListItemMetadata' } catch {}","import {useMemo, type PropsWithChildren} from 'react'\nimport {AppContext, type AppContextType} from './app-context'\n\nexport function AppContextProvider({routes, history, children}: PropsWithChildren<AppContextType>) {\n  const appContextProviderValue = useMemo(() => ({routes, history}), [routes, history])\n  return <AppContext.Provider value={appContextProviderValue}>{children}</AppContext.Provider>\n}\n\ntry{ AppContextProvider.displayName ||= 'AppContextProvider' } catch {}","import React from 'react'\nimport {FeatureFlags} from '@primer/react/experimental'\nimport {getEnabledFeatures} from '@github-ui/feature-flags'\n\ninterface PrimerFeatureFlagsProps extends React.PropsWithChildren {}\n\nexport function PrimerFeatureFlags({children}: PrimerFeatureFlagsProps) {\n  const featureFlags = getEnabledFeatures()\n  const flags = React.useMemo(() => {\n    const result: Record<string, boolean> = {}\n    for (const flag of featureFlags) {\n      if (flag.startsWith('primer_react_')) {\n        result[flag] = true\n      }\n    }\n    return result\n    // Note: getEnabledFeatures() will be constant between renders. It is placed\n    // within the component so that mockClientEnv works as expected\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return <FeatureFlags flags={flags}>{children}</FeatureFlags>\n}\n\ntry{ PrimerFeatureFlags.displayName ||= 'PrimerFeatureFlags' } catch {}","import type {ReactNode} from 'react'\nimport {RenderPhaseProvider} from '@github-ui/render-phase-provider'\nimport {ThemeProvider} from '@primer/react'\nimport useColorModes from './use-color-modes'\nimport {PrimerFeatureFlags} from './PrimerFeatureFlags'\nimport {ToastContextProvider} from '@github-ui/toast/ToastContext'\nimport {AnalyticsProvider} from '@github-ui/analytics-provider'\n\ninterface Props {\n  appName: string\n  children?: ReactNode\n  wasServerRendered: boolean\n}\n\nconst metadata = {}\n\n/**\n * This component provides the _base_ context for both apps and partials.\n * It should provide everything needed to render with styles, themes, and i18n.\n */\nexport function BaseProviders({appName, children, wasServerRendered}: Props) {\n  const {colorMode, dayScheme, nightScheme} = useColorModes()\n\n  return (\n    <RenderPhaseProvider wasServerRendered={wasServerRendered}>\n      <AnalyticsProvider appName={appName} category=\"\" metadata={metadata}>\n        <PrimerFeatureFlags>\n          <ThemeProvider colorMode={colorMode} dayScheme={dayScheme} nightScheme={nightScheme} preventSSRMismatch>\n            <ToastContextProvider>{children}</ToastContextProvider>\n          </ThemeProvider>\n        </PrimerFeatureFlags>\n      </AnalyticsProvider>\n    </RenderPhaseProvider>\n  )\n}\n\ntry{ BaseProviders.displayName ||= 'BaseProviders' } catch {}","import {CheckIcon, StopIcon, InfoIcon} from '@primer/octicons-react'\nimport {Portal, useSafeTimeout} from '@primer/react'\nimport React, {useEffect, type ReactNode, type ReactElement} from 'react'\n\nexport type ToastType = 'info' | 'success' | 'error'\nexport type ToastRole = 'alert' | 'status' | 'log'\nexport interface ToastProps {\n  message: ReactNode\n  timeToLive?: number\n  icon?: React.ReactNode\n  type?: ToastType\n  role?: ToastRole\n}\n\nconst typeClass: Record<ToastType, string> = {\n  info: '',\n  success: 'Toast--success',\n  error: 'Toast--error',\n}\nconst typeIcon: Record<ToastType, ReactElement> = {\n  info: <InfoIcon />,\n  success: <CheckIcon />,\n  error: <StopIcon />,\n}\n\n// Default role for the Toast is 'log' because 'status' is not read out by some screen readers.\n// Notably, NVDA will not read out popup content if the role is 'status'.\n/**\n * ⚠️ Warning: Usage of this component is discouraged by the accessibility team as\n * {@link https://github.com/github/engineering/discussions/3313 toasts are a behavior identified as a high-risk pattern}\n * within GitHub.\n * {@link https://github.com/github/accessibility/issues/4414 Reasons why toasts are a high-risk pattern}.\n */\nexport const Toast: React.FC<ToastProps> = ({message, timeToLive, icon, type = 'info', role = 'log'}) => {\n  const [isVisible, setIsVisible] = React.useState(true)\n  const {safeSetTimeout} = useSafeTimeout()\n\n  useEffect(() => {\n    if (!timeToLive) return\n    safeSetTimeout(() => setIsVisible(false), timeToLive - 300)\n  }, [safeSetTimeout, timeToLive])\n\n  return (\n    <Portal>\n      <div className=\"p-1 position-fixed bottom-0 left-0 mb-3 ml-3\">\n        <div\n          className={`Toast ${typeClass[type]} ${isVisible ? 'Toast--animateIn' : 'Toast--animateOut'}`}\n          id=\"ui-app-toast\"\n          data-testid={`ui-app-toast-${type}`}\n          role={role}\n        >\n          <span className=\"Toast-icon\">{icon || typeIcon[type]}</span>\n          <span className=\"Toast-content\">{message}</span>\n        </div>\n      </div>\n    </Portal>\n  )\n}\n\ntry{ Toast.displayName ||= 'Toast' } catch {}","import {useContext} from 'react'\nimport {InternalToastsContext, TOAST_SHOW_TIME} from './ToastContext'\nimport {Toast} from './Toast'\n\n// Renders all toasts including the persisted toast. Likely you'll only want to include this one in a React app, in a\n// place common to all pages.\n/**\n * ⚠️ Warning: Usage of this component is discouraged by the accessibility team as\n * {@link https://github.com/github/engineering/discussions/3313 toasts are a behavior identified as a high-risk pattern}\n * within GitHub.\n * {@link https://github.com/github/accessibility/issues/4414 Reasons why toasts are a high-risk pattern}.\n */\nexport function Toasts() {\n  const {toasts, persistedToast} = useContext(InternalToastsContext)\n\n  return (\n    <>\n      {toasts.map((toastInfo, index) => (\n        <Toast\n          message={toastInfo.message}\n          icon={toastInfo.icon}\n          key={index}\n          timeToLive={TOAST_SHOW_TIME}\n          type={toastInfo.type}\n          role={toastInfo.role}\n        />\n      ))}\n      {persistedToast && (\n        <Toast\n          message={persistedToast.message}\n          icon={persistedToast.icon}\n          type={persistedToast.type}\n          role={persistedToast.role}\n        />\n      )}\n    </>\n  )\n}\n\ntry{ Toasts.displayName ||= 'Toasts' } catch {}","// eslint-disable-next-line no-restricted-imports\nimport {useToastContext} from '@github-ui/toast/ToastContext'\nimport {useEffect} from 'react'\nimport {EXPECTED_ERRORS} from './expected-errors'\n\nexport function SSRErrorToast({ssrError}: {ssrError: HTMLScriptElement}) {\n  const {addToast} = useToastContext()\n  const isExpectedError = EXPECTED_ERRORS[ssrError.textContent || '']\n\n  useEffect(() => {\n    if (!isExpectedError) {\n      // eslint-disable-next-line @github-ui/dotcom-primer/toast-migration\n      addToast({\n        type: 'error',\n        message: 'SSR failed, see console for error details (Staff Only)',\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return null\n}\n\ntry{ SSRErrorToast.displayName ||= 'SSRErrorToast' } catch {}","import {Toasts} from '@github-ui/toast/Toasts'\nimport {SSRErrorToast} from './SSRErrorToast'\n\n// This is a container for common UI that should be rendered in all React UIs, including full-page apps and partials.\n// Please be very conservative in adding functionality here, as it will affect the bundle size of every page on the\n// site.\nexport function CommonElements({ssrError}: {ssrError?: HTMLScriptElement}) {\n  return (\n    <>\n      <Toasts />\n      {ssrError && <SSRErrorToast ssrError={ssrError} />}\n    </>\n  )\n}\n\ntry{ CommonElements.displayName ||= 'CommonElements' } catch {}","import {LoadingSkeleton} from '@github-ui/skeleton/LoadingSkeleton'\n\nexport function ReactionViewerLoading() {\n  return (\n    <div className=\"d-flex flex-wrap gap-1\">\n      <LoadingSkeleton variant=\"elliptical\" height=\"28px\" width=\"28px\" />\n    </div>\n  )\n}\n\ntry{ ReactionViewerLoading.displayName ||= 'ReactionViewerLoading' } catch {}"],"names":["env","getEnv","getLocale","locale","loadEnv","document","envTag","getElementById","JSON","parse","textContent","error","console","node","v0","v1","v2","v3","v4","v5","v6","hash","useCommenting","repo","useCurrentRepository","confirm","useConfirm","commit","useRoutePayload","baseUrl","encodePart","ownerLogin","name","createUrl","addComment","useCallback","markdown","path","position","formData","FormData","append","oid","toString","response","verifiedFetch","method","body","ok","comment","json","editComment","id","bodyVersion","updatedFields","source","htmlBody","deleteComment","commentId","content","title","confirmButtonContent","confirmButtonType","hideComment","reason","headers","Accept","unhideComment","useMemo","useCommitsAppPayload","useAppPayload","useFetchThread","viewerCanReply","addComments","useInlineComments","Promise","resolve","reject","threadId","split","verifiedFetchJSON","commitInlineCommentsPath","owner","commitOid","data","comments","commentsData","commitComments","map","c","mapCommitCommentToComment","undefined","publishedAt","state","viewerRelationship","relayId","databaseId","bodyHTML","createdAt","url","ssrSafeWindow","location","urlFragment","currentDiffResourcePath","authorAssociation","toUpperCase","author","login","avatarUrl","isHidden","lastUserContentEdit","minimizedReason","subjectType","viewerCanMinimize","viewerCanSeeMinimizeButton","viewerCanSeeUnminimizeButton","viewerCanDelete","viewerCanUpdate","viewerCanReport","viewerCanReportToMaintainer","viewerCanBlockFromOrg","viewerCanUnblockFromOrg","viewerDidAuthor","reference","number","text","shortSha","authors","length","repository","isPrivate","private","sha","slice","isWeirichCommit","repoId","ready","ssrSafeDocument","readyState","addEventListener","loaded","getEnabledFeaturesSet","Set","features","featureFlags","feature","toLowerCase","featuresSet","IS_SERVER","memoize","getEnabledFeatures","Array","from","isFeatureEnabled","has","featureFlag","AppContext","createContext","createBrowserHistory","options","listener","history","routerCreateBrowserHistory","v5Compat","blockers","ignoreNextHistoryUpdate","doIfUnblocked","fn","blocker","retry","listen","update","action","Action","Pop","delta","go","createHref","to","createURL","encodeLocation","push","replace","newListener","block","filter","b","EXPECTED_ERRORS","ssrOptions","globalThis","getColorModes","colorMode","getSchemeFromMode","mode","dayScheme","lightTheme","nightScheme","darkTheme","documentElement","setColorMode","useState","dataset","useEffect","observer","MutationObserver","observe","attributes","attributeFilter","disconnect","runtimeEnvironment","head","querySelector","isEnterprise","bundler","BUNDLER","NoOpStorage","getItem","setItem","removeItem","clear","key","safeStorage","storageKey","throwQuotaErrorsOnSet","global","deserialize","value","serialize","storage","emitStats","sendCacheStats","sendStats","incrementKey","ttl","expiryKey","now","Date","getTime","expiry","Number","Error","message","includes","jsonSafeStorage","storageBackend","stringify","stats","stat","flushImmediately","samplingProbability","timestamp","loggedIn","staff","isStaff","Math","random","flushStats","throttledScheduleSendStats","queued","throttle","window","requestIdleCallback","batch","getBatches","items","batches","itemStrings","item","makeBatch","firstItem","shift","size","nextItemSize","itemString","safeSend","navigator","sendBeacon","join","AsyncChecksStatusBadge","status","badgeProps","descriptionString","details","fetchDetails","useCommitChecksStatusDetails","ChecksStatusBadge","disablePopover","statusRollup","buttonSx","height","color","p","combinedStatus","descriptionText","onWillOpenPopup","displayName","CommentLoading","div","className","LoadingSkeleton","variant","width","_","index","ReactionViewerLoading","CommitCommentEditor","forwardRef","initialMarkdown","onCancel","onSave","referenceId","buttonText","commentContent","ref","saving","setSaving","commentBoxRef","useRef","definedCommentContent","onChange","markdownBody","resetMarkdownBody","markdownValidationResult","handleMarkdownBodyChanged","useMarkdownBody","markdownComposerRef","current","setTimeout","scrollIntoView","focus","onSaveInt","CommentBox","validationResult","disabled","newMarkdown","saveButtonText","saveButtonTrailingIcon","teamHovercardsEnabled","fileUploadsEnabled","subject","type","nwo","slashCommandsEnabled","UpdateCommitComment","onUpdate","commentEditor","result","ExistingCommitComments","locked","updateComment","setNewCommentContent","ExistingCommitComment","onDeleteComment","isEditing","setIsEditing","isMinimized","setIsMinimized","commentRef","onDelete","onHide","onUnhide","commentSubjectAuthorLogin","commentDataWithoutFragment","referenceText","CommitCommentHeader","commentAuthorLogin","commentSubjectType","onReplySelect","onMinimize","navigate","showEditHistory","viewerCanReadUserContentEdits","commitComment","updatedComment","style","gap","data-turbolinks","MarkdownViewer","verifiedHTML","markdownValue","onLinkClick","Suspense","fallback","ReactionViewerQueryComponent","subjectLocked","hideActions","props","editHistoryComponent","MarkdownEditHistoryViewerQueryComponent","ActivityHeader","actions","CommentActions","LockConversationDialog","onClose","helpUrl","didError","setDidError","lockConversation","commitPath","commitish","unlockConversation","Dialog","footerButtons","buttonType","sx","onClick","Flash","toLocaleLowerCase","ul","li","strong","isOrgOwned","a","href","NewCommitComment","onAddComment","newCommentContent","canComment","repoArchived","blockedCommentingReason","Heading","as","IDS","issueCommentComposer","ReadonlyCommentBox","icon","LockIcon","NotificationsFooter","subscribed","subscribeState","setSubscribeState","updated","setUpdated","token","useCSRFToken","updateSubscription","Button","leadingVisual","BellSlashIcon","BellIcon","span","COMMENTS_CONTAINER_ID","DiscussionComments","queryReference","loadQuery","useQueryLoader","startTransition","useTransition","globalRelayId","fetchPolicy","clsx","CLASS_NAMES","commentsContainer","styles","DiscussionCommentsInternal","commentInfo","currentUser","useCurrentUser","loadMore","canLoadMore","count","commentCount","providerState","useDiscussionComments","setLocked","isWeirichCommitValue","find","commentElement","DiscussionCommentsHeader","canLock","i","img","alt","src","lockDialogOpen","setLockDialogOpen","h2","CounterLabel","KeyIcon","newLockedState","CommitAttribution","children","settings","deferredData","useFindDeferredCommitData","UiCommitAttribution","committer","committerAttribution","onBehalfOf","includeVerbs","authorSettings","fontWeight","fontColor","avatarSize","RelativeTime","datetime","committedDate","tense","verifiedBadgeWidth","SignedCommitBadge","isLoading","useIsDeferredDataLoading","UiSignedCommitBadge","hasSignature","verificationStatus","verifiedStatus","signature","signatureInformation","CommitChecksStatusBadge","checkStatusCount","statusCheckStatus","short_text","trim","itemSxMap","none","bottom","pb","top","pt","DefaultLeadingVisual","Octicon","GitCommitIcon","TimelineRowComponent","clipTimeline","externalSx","itemSx","Timeline","Item","py","Badge","backgroundColor","Body","TimelineRowHeading","TimelineRow","Object","assign","CopySHA","direction","sendAnalyticsEvent","useAnalytics","loggingPrefix","loggingPayload","useLoggingInfo","shouldLog","useIsLoggingInformationProvided","CopyToClipboardButton","textToCopy","ariaLabel","tooltipProps","anchorSide","avoidStyledComponent","hasPortalTooltip","Panel","CommitsLoggingContext","CommitsLoggingInfoProvider","loggingInfo","Provider","useContext","baseEmptyStateLoading","deferredCommits","renameHistory","loading","baseEmptyStateNotLoading","DeferredCommitDataContext","DeferredCommitDataProvider","useRenameHistoryData","DiscussionCommentsContext","noop","DiscussionCommentsProvider","externalComments","externalCommentCount","externalCanLoadMore","externalSubscribed","externalProviderState","setComments","setCount","setCanLoadMore","setProviderState","setSubscribed","loadDiscussionComments","beforeCommentId","reactFetchJSON","commitDiscussionsPath","earliestComment","context","InlineCommentsContext","findInlineComment","getCommentCountByPath","getThreadDataByPathAndPosition","arrayToMap","array","reduce","acc","thread","set","Map","InlineCommentsProvider","initialFiles","commentThreadData","setCommentThreadData","commentThreadDataMap","setCommentThreadDataMap","newComments","newCommentIds","existingComments","unchangedThreads","parseInt","threadToAdd","threads","diffSide","totalCount","get","inlineComments","BrowseRepositoryAtThisPoint","React","WrappedBrowseRepositoryAtThisPoint","browseRepoId","Tooltip","aria-label","aria-labelledby","repositoryTreePath","data-testid","CodeIcon","ViewCodeAtThisPoint","WrappedViewCodeAtThisPoint","viewCodeId","blobPath","filePath","FileCodeIcon","ViewCommitDetails","commitUrl","softNavToCommit","sharedProps","fontFamily","Link","ToggleCommitDescription","showDescription","setShowDescription","truncatedSha","showDescriptionId","button","aria-pressed","aria-expanded","e","preventDefault","EllipsisIcon","CommitCommentCount","commentCountId","CommentIcon","CommitActionBar","lazy","then","m","default","CommitRow","commitDescriptionRef","isOpen","setIsOpen","announce","ListItem","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","ListItemTitle","shortMessage","shortMessageMarkdownLink","containerSx","display","headingSx","bodyMessageHtml","metadata","ListItemMetadata","minWidth","secondaryActions","setDialogOpen","fetchCheckDetails","ListItemMainContent","ListItemDescription","SafeHTMLText","html","CheckStatusDialog","onDismiss","CommitGroup","commits","shouldClipTimeline","currentBlobPath","groupId","useId","ListView","titleHeaderTag","ariaLabelledBy","Commits","leadingContent","commitGroups","trailingContent","deferredCommitData","clipSidebar","commitGroup","alignment","Box","testIdProps","primary","secondary","alignRight","AppContextProvider","routes","appContextProviderValue","PrimerFeatureFlags","flags","flag","startsWith","FeatureFlags","BaseProviders","appName","wasServerRendered","useColorModes","RenderPhaseProvider","AnalyticsProvider","category","ThemeProvider","preventSSRMismatch","ToastContextProvider","typeClass","info","success","typeIcon","InfoIcon","CheckIcon","StopIcon","Toast","timeToLive","role","isVisible","setIsVisible","safeSetTimeout","useSafeTimeout","Portal","Toasts","toasts","persistedToast","InternalToastsContext","toastInfo","TOAST_SHOW_TIME","SSRErrorToast","ssrError","addToast","useToastContext","isExpectedError","CommonElements"],"sourceRoot":""}