# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Meuse::Services::V1::Messages::Entitlement`.
# Please instead update this file by running `bin/tapioca dsl Meuse::Services::V1::Messages::Entitlement`.

class Meuse::Services::V1::Messages::Entitlement
  sig do
    params(
      allocated_quantity: T.nilable(Float),
      consumed_quantity: T.nilable(Float),
      id: T.nilable(Integer),
      name: T.nilable(String),
      unit_of_measure: T.nilable(Meuse::Services::V1::Messages::UnitOfMeasure)
    ).void
  end
  def initialize(allocated_quantity: nil, consumed_quantity: nil, id: nil, name: nil, unit_of_measure: nil); end

  sig { returns(Float) }
  def allocated_quantity; end

  sig { params(value: Float).void }
  def allocated_quantity=(value); end

  sig { void }
  def clear_allocated_quantity; end

  sig { void }
  def clear_consumed_quantity; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_unit_of_measure; end

  sig { returns(Float) }
  def consumed_quantity; end

  sig { params(value: Float).void }
  def consumed_quantity=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(T.nilable(Meuse::Services::V1::Messages::UnitOfMeasure)) }
  def unit_of_measure; end

  sig { params(value: T.nilable(Meuse::Services::V1::Messages::UnitOfMeasure)).void }
  def unit_of_measure=(value); end
end
