{"version":3,"file":"pull-request-commits-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/commits/shared/use-load-deferred-commit-data.ts","ui/packages/html-safe-nonce/html-safe-nonce.ts","ui/packages/trusted-types-policies/server-x-safe-html.ts","ui/packages/fetch-utils/fetch-utils.ts","ui/packages/trusted-types-policies/parse-html.ts","ui/packages/parse-html/parse-html.ts","ui/packages/pull-request-commits/App.tsx","ui/packages/pull-request-commits/components/banners/PullRequestPausedDependabotBanner.tsx","ui/packages/pull-request-commits/components/banners/PullRequestHiddenCharactersBanner.tsx","ui/packages/pull-request-commits/components/PullRequestBanners.tsx","ui/packages/pull-request-commits/components/PullRequestHeaderSummary.module.css","ui/packages/pull-request-commits/components/PullRequestHeaderSummary.tsx","ui/packages/pull-request-commits/mutations/use-change-base-branch-mutation.ts","ui/packages/pull-request-commits/components/PullRequestEditTitleForm.tsx","ui/packages/pull-request-commits/mutations/use-update-title-mutation.ts","ui/packages/pull-request-commits/components/PullRequestStateLabel.tsx","ui/packages/pull-request-commits/components/PullRequestHeaderNavigation.module.css","ui/packages/pull-request-commits/components/PullRequestHeaderNavigation.tsx","ui/packages/pull-request-commits/page-data/loaders/use-tab-counts-page-data.ts","ui/packages/pull-request-commits/components/PullRequestCodeButton.tsx","ui/packages/pull-request-commits/components/PullRequestHeader.tsx","ui/packages/pull-request-commits/components/OptOut.tsx","ui/packages/pull-request-commits/hooks/use-refetch-on-alive-update.ts","ui/packages/pull-request-commits/page-data/loaders/use-commits-page-data.ts","ui/packages/pull-request-commits/page-data/loaders/use-header-page-data.ts","ui/packages/pull-request-commits/components/StickyPullRequestHeader.tsx","ui/packages/pull-request-commits/routes/Commits.tsx","ui/packages/pull-request-commits/hooks/use-commits-live-updates.ts","ui/packages/pull-request-commits/hooks/use-header-live-updates.ts","ui/packages/pull-request-commits/pull-request-commits.ts","ui/packages/pull-request-page-data-tooling/hooks/use-page-data-url.ts","ui/packages/pull-request-page-data-tooling/payloads/page-data.ts","ui/packages/pull-request-page-data-tooling/query-client.ts","ui/packages/use-alive/TestAliveSubscription.tsx","ui/packages/use-alive/use-alive.ts","ui/packages/use-is-dirty/use-is-dirty.ts","ui/packages/use-state-with-avoidable-rerenders/use-state-with-avoidable-rerenders.ts","ui/packages/use-sticky-header/use-intersection-observer.ts","ui/packages/use-sticky-header/use-sticky-header.ts","ui/packages/code-dropdown-button/components/GitHubEditorTab.tsx","ui/packages/code-dropdown-button/components/CodeDropdownButton.tsx","ui/packages/pull-request-commits/page-data/loaders/use-code-button-data.ts","ui/packages/code-dropdown-button/components/CodespacesTab.tsx","ui/packages/code-dropdown-button/components/CopilotTab.tsx","ui/packages/code-dropdown-button/components/LocalTab.tsx","ui/packages/commits/shared/CommitsBlankState.tsx","ui/packages/pull-request-page-data-tooling/contexts/PageDataContext.tsx","ui/packages/react-core/JsonRoute.tsx","ui/packages/use-sticky-header/ObservableBox.tsx"],"sourcesContent":["import {getInsightsUrl, reportTraceData} from '@github-ui/internal-api-insights'\nimport {reactFetchJSON} from '@github-ui/verified-fetch'\nimport {useEffect, useRef, useState} from 'react'\n\nimport {baseEmptyStateLoading, baseEmptyStateNotLoading} from '../contexts/DeferredCommitDataContext'\nimport type {DeferredCommitData, DeferredData} from '../types/commits-types'\n\nexport function useLoadDeferredCommitData(url: string, updatedAt?: number): DeferredData {\n  const [state, setState] = useState<DeferredData>(baseEmptyStateLoading)\n\n  useEffect(() => {\n    if (!url) return\n\n    let cancelled = false\n    const update = async () => {\n      setState(baseEmptyStateLoading)\n      const response = await reactFetchJSON(getInsightsUrl(url))\n\n      if (cancelled) {\n        return\n      }\n\n      try {\n        if (response.ok) {\n          const data = await response.json()\n          data.loading = false\n          if (data) {\n            reportTraceData(data)\n            setState(data)\n          }\n        } else {\n          setState(baseEmptyStateNotLoading)\n        }\n      } catch (e) {\n        setState(baseEmptyStateNotLoading)\n      }\n    }\n\n    update()\n\n    return function cancel() {\n      cancelled = true\n    }\n  }, [url, updatedAt])\n\n  return state\n}\n\nexport function useLoadSingleDeferredCommitData(url: string): DeferredCommitData | null {\n  const [state, setState] = useState<DeferredCommitData | null>(null)\n\n  useEffect(() => {\n    if (!url) return\n\n    const update = async () => {\n      const response = await reactFetchJSON(getInsightsUrl(url))\n\n      try {\n        if (response.ok) {\n          const data = await response.json()\n          if (data) {\n            reportTraceData(data)\n            setState(data.data)\n          }\n        }\n      } catch (e) {\n        //noop\n      }\n    }\n\n    update()\n  }, [url])\n\n  return state\n}\n\nexport function useLoadDeferredCommitDataPaginated(\n  url: string,\n  startIndex: number,\n  commitCount: number,\n  dataUpdatedAt?: number,\n): DeferredData {\n  const [state, setState] = useState<DeferredData>(baseEmptyStateLoading)\n  const cumulativeDeferredCommitInfo = useRef([...new Array(commitCount)] as Array<DeferredCommitData | undefined>)\n  const previousStartingIndex = useRef(startIndex)\n\n  useEffect(() => {\n    if (!url) return\n\n    let cancelled = false\n    async function update(startingIndex: number) {\n      const response = await reactFetchJSON(`${url}?start_entry=${startingIndex}`)\n\n      if (cancelled) {\n        return\n      }\n\n      try {\n        if (response.ok) {\n          const data = await response.json()\n          if (data) {\n            let index = 0\n            for (let i = previousStartingIndex.current; i < data.nextIndex; i++) {\n              cumulativeDeferredCommitInfo.current[i] = data.deferredCommits[index]\n              index++\n            }\n            data.deferredCommits = cumulativeDeferredCommitInfo.current\n            if (data.loadMore && previousStartingIndex.current !== data.nextIndex) {\n              previousStartingIndex.current = data.nextIndex\n              setState(data)\n              setTimeout(\n                //doing a 0ms timeout allows the state updates to flush, giving the user the parts of the diff\n                //as we get them rather than waiting until they're fully loaded\n                () => update(data.nextIndex),\n                0,\n              )\n            } else if (previousStartingIndex.current === data.nextIndex) {\n              data.error = true\n              setState(data)\n            } else {\n              data.error = false\n              setState(data)\n            }\n          }\n        } else {\n          setState(oldState => ({\n            ...oldState,\n            loading: false,\n            error: true,\n            extraDiffEntries: cumulativeDeferredCommitInfo.current,\n          }))\n        }\n      } catch (e) {\n        //do this to keep any commit info we  have already received rather than wiping it out\n        setState(oldState => ({\n          ...oldState,\n          loading: false,\n          deferredCommits: cumulativeDeferredCommitInfo.current,\n        }))\n      }\n    }\n\n    update(startIndex)\n\n    return function cancel() {\n      cancelled = true\n    }\n  }, [url, dataUpdatedAt, startIndex])\n\n  //if we soft nav to a new diff, reset the cumulative\n  useEffect(() => {\n    cumulativeDeferredCommitInfo.current = []\n    previousStartingIndex.current = startIndex\n  }, [url, dataUpdatedAt, startIndex])\n\n  return state\n}\n","//  Get document's HTML Safe nonce.\n//\n// Example:\n//\n//   <meta name=\"html-safe-nonce\" content=\"de43a1f355c711f7f705e4f971964391ac0c8e13\">\nexport function getDocumentHtmlSafeNonces(document: Document): string[] {\n  const nonces = [...document.querySelectorAll<HTMLMetaElement>('meta[name=html-safe-nonce]')].map(meta => meta.content)\n\n  if (nonces.length < 1) {\n    throw new Error('could not find html-safe-nonce on document')\n  }\n  return nonces\n}\n\ninterface Response {\n  headers: Headers\n  status: number\n}\n\nclass ResponseError extends Error {\n  response: Response\n\n  constructor(message: string, response: Response) {\n    super(`${message} for HTTP ${response.status}`)\n    this.response = response\n  }\n}\n\nexport function verifyResponseHtmlSafeNonce(nonces: string[], response: Response, allowJson = false) {\n  const contentType = response.headers.get('content-type') || ''\n  if (!allowJson && !contentType.startsWith('text/html')) {\n    throw new ResponseError(`expected response with text/html, but was ${contentType}`, response)\n  }\n\n  if (allowJson && !(contentType.startsWith('text/html') || contentType.startsWith('application/json'))) {\n    throw new ResponseError(`expected response with text/html or application/json, but was ${contentType}`, response)\n  }\n\n  const responseNonce = response.headers.get('x-html-safe')\n  if (!responseNonce) {\n    throw new ResponseError(`missing X-HTML-Safe nonce`, response)\n  } else if (!nonces.includes(responseNonce)) {\n    throw new ResponseError(`response X-HTML-Safe nonce did not match`, response)\n  }\n}\n","import {getDocumentHtmlSafeNonces, verifyResponseHtmlSafeNonce} from '@github-ui/html-safe-nonce'\nimport {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {trustedTypesPolicy} from './policy'\n\nconst policyName = 'server-x-safe-html'\n\n// This is a no-op policy to be used with server-side rendered HTML.\nexport const serverXSafeHTMLPolicy = ghTrustedTypes.createPolicy(policyName, {\n  createHTML: (s: string, response: Response) => {\n    return trustedTypesPolicy.apply({\n      policy: () => {\n        verifyResponseHtmlSafeNonce(getDocumentHtmlSafeNonces(document), response)\n        return s\n      },\n      policyName,\n      fallback: s,\n      silenceErrorReporting: true,\n    })\n  },\n})\n","import {parseHTML} from '@github-ui/parse-html'\nimport {serverXSafeHTMLPolicy} from '@github-ui/trusted-types-policies/server-x-safe-html'\n\nexport async function fetchSafeDocumentFragment(\n  document: Document,\n  url: RequestInfo,\n  options?: RequestInit,\n): Promise<DocumentFragment> {\n  const request = new Request(url, options)\n  request.headers.append('X-Requested-With', 'XMLHttpRequest')\n  const response = await self.fetch(request)\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error(`HTTP ${response.status}${response.statusText || ''}`)\n  }\n  const trustedHTML = serverXSafeHTMLPolicy.createHTML(await response.text(), response)\n  return parseHTML(document, trustedHTML)\n}\n\nexport function fetchPoll(\n  url: RequestInfo,\n  options?: RequestInit,\n  timeBetweenRequests = 1000,\n  acceptedStatusCodes = [200],\n  pollStatusCodes = [202],\n): Promise<Response> {\n  return (async function poll(wait: number): Promise<Response> {\n    const request = new Request(url, options)\n    request.headers.append('X-Requested-With', 'XMLHttpRequest')\n    const response = await self.fetch(request)\n\n    if (pollStatusCodes.includes(response.status)) {\n      await new Promise(resolve => setTimeout(resolve, wait))\n      return poll(wait * 1.5)\n    }\n    if (acceptedStatusCodes.includes(response.status)) {\n      return response\n    }\n    if (response.status < 200 || response.status >= 300) {\n      throw new Error(`HTTP ${response.status}${response.statusText || ''}`)\n    }\n    throw new Error(`Unexpected ${response.status} response status from poll endpoint`)\n  })(timeBetweenRequests)\n}\n\ntype RetryResult = Response | 'retry'\ntype FetchRetryOptions = {\n  // Base wait time between retries\n  // this will be multiplied with the current attempt to perform a backoff strategy\n  // Defaults to 500ms\n  wait?: number\n  // List of accepted status codes that should not be retried. Defaults to [200]\n  acceptedStatusCodes?: number[]\n  // Max number of attempts. Defaults to 3\n  max?: number\n  // Current retry attempt. Starts at 0\n  attempt?: number\n}\n\n// Execute a fetch call in a callback and retry it up to `options.max` times\n// Each retry will be delayed `options.wait` * `options.attempt`\nexport async function fetchRetry(\n  url: RequestInfo,\n  fetchOptions?: RequestInit,\n  options?: FetchRetryOptions,\n): Promise<Response> {\n  const {wait = 500, acceptedStatusCodes = [200], max = 3, attempt = 0} = options || {}\n\n  const retry: () => Promise<RetryResult> = async () => {\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          const request = new Request(url, fetchOptions)\n          request.headers.append('X-Requested-With', 'XMLHttpRequest')\n          const response = await self.fetch(request)\n          if (acceptedStatusCodes.includes(response.status) || attempt + 1 === max) {\n            return resolve(response)\n          }\n\n          // The response failed, we indicate that it must be retried\n          resolve('retry')\n        } catch (err) {\n          // Only non successful HTTP status codes are controlled by this retry mechanism\n          // Any other error is propagated\n          reject(err)\n        }\n      }, wait * attempt)\n    })\n  }\n\n  const result = await retry()\n  if (result !== 'retry') {\n    return result\n  }\n\n  return fetchRetry(url, fetchOptions, {wait, acceptedStatusCodes, max, attempt: attempt + 1})\n}\n","import {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {trustedTypesPolicy} from './policy'\n\nconst policyName = 'parse-html-no-op'\n// This is a temporary policy to allow us to migrate to Trusted Types without breaking existing code.\nexport const temporaryPermissiveParseHTMLPolicy = ghTrustedTypes.createPolicy(policyName, {\n  createHTML: (s: string) => {\n    return trustedTypesPolicy.apply({\n      policy: () => s,\n      policyName,\n      fallback: s,\n      sanitize: false,\n      fallbackOnError: true,\n    })\n  },\n})\n","import {temporaryPermissiveParseHTMLPolicy} from '@github-ui/trusted-types-policies/parse-html'\n\nexport function parseHTML(document: Document, html: string): DocumentFragment {\n  const template = document.createElement('template')\n  template.innerHTML = temporaryPermissiveParseHTMLPolicy.createHTML(html)\n  return document.importNode(template.content, true)\n}\n","import type React from 'react'\nimport {QueryClientProvider} from '@tanstack/react-query'\nimport {ReactQueryDevtools} from '@tanstack/react-query-devtools'\n\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {PageDataContextProvider} from '@github-ui/pull-request-page-data-tooling/page-data-context'\nimport queryClient from '@github-ui/pull-request-page-data-tooling/query-client'\nimport type {CommitsRoutePayload} from './routes/Commits'\n\n/**\n * The App component is used to render content which should be present on _all_ routes within this app\n */\nexport function App(props: {children?: React.ReactNode}) {\n  const {urls} = useRoutePayload<CommitsRoutePayload>()\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <PageDataContextProvider basePageDataUrl={urls.conversation}>{props.children}</PageDataContextProvider>\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  )\n}\n\ntry{ App.displayName ||= 'App' } catch {}","import {Link} from '@primer/react'\nimport {Banner} from '@primer/react/experimental'\nimport {useAppPayload} from '@github-ui/react-core/use-app-payload'\n\nimport {repositoryPath} from '@github-ui/paths'\nimport type {HeaderPageData} from '../../page-data/payloads/header'\n\nexport function PullRequestPausedDependabotBanner({repository}: Pick<HeaderPageData, 'repository'>) {\n  const titleString = 'Dependabot updates are paused'\n  const paragraphString = `We noticed you haven't used Dependabot in a while, so we've paused automated Dependabot\n  updates for this repository.`\n  const afterBreakString = 'To resume updates, merge a Dependabot pull request or use '\n  const boldString = '@dependabot rebase.'\n  const helpUrl = `${\n    useAppPayload<{helpUrl: string}>().helpUrl\n  }/code-security/dependabot/dependabot-security-updates/about-dependabot-security-updates#about-automatic-deactivation-of-dependabot-updates`\n  const repoPullsUrl = `${repositoryPath({\n    owner: repository.ownerLogin,\n    repo: repository.name,\n    action: 'pulls',\n  })}/app%2Fdependabot`\n\n  return (\n    <Banner className=\"d-flex flex-row width-full\" variant=\"warning\" title={titleString}>\n      <Banner.Description>\n        <p>\n          {paragraphString}\n          <br />\n          {afterBreakString} <b>{boldString}</b>.{'\\u00A0'}\n          <Link inline href={repoPullsUrl}>\n            See open Dependabot pull requests\n          </Link>{' '}\n          or\n          {'\\u00A0'}\n          <Link inline href={helpUrl}>\n            learn more about pausing of activity.\n          </Link>\n        </p>\n      </Banner.Description>\n    </Banner>\n  )\n}\n\ntry{ PullRequestPausedDependabotBanner.displayName ||= 'PullRequestPausedDependabotBanner' } catch {}","import {Banner} from '@primer/react/experimental'\nimport {BranchName} from '@primer/react'\n\nimport type {HeaderPageData} from '../../page-data/payloads/header'\n\nexport function PullRequestHiddenCharactersBanner({pullRequest}: Pick<HeaderPageData, 'pullRequest'>) {\n  const escapeUnicodeChars = (string: string) => {\n    return string.replace(/[\\u007F-\\uFFFF]/g, chr => {\n      return `\\\\u${`0000${chr.charCodeAt(0).toString(16)}`.substr(-4)}`\n    })\n  }\n\n  return (\n    <Banner\n      aria-label=\"Hidden Characters Warning Banner\"\n      className=\"d-flex flex-row width-full\"\n      variant=\"warning\"\n      title=\"Hidden character warning\"\n      hideTitle\n    >\n      <Banner.Description>\n        The head ref may contain hidden characters:{' '}\n        <BranchName as=\"span\">&quot;{escapeUnicodeChars(pullRequest.headBranch)}&quot;</BranchName>\n      </Banner.Description>\n    </Banner>\n  )\n}\n\ntry{ PullRequestHiddenCharactersBanner.displayName ||= 'PullRequestHiddenCharactersBanner' } catch {}","import type {HeaderPageData} from '../page-data/payloads/header'\nimport {PullRequestPausedDependabotBanner} from './banners/PullRequestPausedDependabotBanner'\nimport {PullRequestHiddenCharactersBanner} from './banners/PullRequestHiddenCharactersBanner'\n\nexport function PullRequestBanners({bannersData, pullRequest, repository}: Omit<HeaderPageData, 'urls' | 'user'>) {\n  return (\n    <>\n      {bannersData.banners.hiddenCharacterWarning.render && (\n        <PullRequestHiddenCharactersBanner pullRequest={pullRequest} />\n      )}\n      {bannersData.banners.pausedDependabotUpdate.render && (\n        <PullRequestPausedDependabotBanner repository={repository} />\n      )}\n    </>\n  )\n}\n\ntry{ PullRequestBanners.displayName ||= 'PullRequestBanners' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"truncateBranch\":\"PullRequestHeaderSummary-module__truncateBranch--qqqEI\"};","import {useState} from 'react'\nimport {CopyToClipboardButton} from '@github-ui/copy-to-clipboard'\nimport {branchPath, userHovercardPath} from '@github-ui/paths'\nimport {BranchName, Button, Dialog, Link, Portal, Spinner} from '@primer/react'\nimport {RefSelector} from '@github-ui/ref-selector'\nimport {useAppPayload} from '@github-ui/react-core/use-app-payload'\nimport {InlineMessage, Tooltip} from '@primer/react/drafts'\nimport type {PullRequestState} from './PullRequestStateLabel'\nimport {useChangeBaseBranchMutation} from '../mutations/use-change-base-branch-mutation'\nimport queryClient from '@github-ui/pull-request-page-data-tooling/query-client'\nimport {PageData} from '@github-ui/pull-request-page-data-tooling/page-data'\nimport {usePageDataUrl} from '@github-ui/pull-request-page-data-tooling/use-page-data-url'\nimport styles from './PullRequestHeaderSummary.module.css'\n\ninterface CommitsAppPayload {\n  helpUrl: string\n  refListCacheKey: string\n}\n\nexport interface PullRequestHeaderSummaryProps {\n  author: string\n  baseBranch: string\n  baseRepositoryDefaultBranch?: string\n  baseRepositoryOwnerLogin: string\n  baseRepositoryName: string\n  canChangeBase?: boolean\n  commitsCount: number\n  headBranch: string\n  headRepositoryOwnerLogin?: string\n  headRepositoryName?: string\n  isInAdvisoryRepo?: boolean\n  isEditing?: boolean\n  mergedBy?: string\n  setIsEditing?: (isEditing: boolean) => void\n  state: PullRequestState\n}\n\nexport function PullRequestHeaderSummary({\n  author,\n  baseBranch,\n  baseRepositoryDefaultBranch = '',\n  baseRepositoryName = '',\n  baseRepositoryOwnerLogin = '',\n  canChangeBase = false,\n  commitsCount,\n  headBranch,\n  headRepositoryOwnerLogin = '',\n  headRepositoryName = '',\n  isInAdvisoryRepo,\n  isEditing = false,\n  mergedBy,\n  setIsEditing,\n  state,\n}: PullRequestHeaderSummaryProps) {\n  const {refListCacheKey} = useAppPayload<CommitsAppPayload>()\n  const [isConfirmingChangeBase, setIsConfirmingChangeBase] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [errorMessage, setErrorMessage] = useState('')\n  const [candidateBaseBranch, setCandidateBaseBranch] = useState('')\n\n  const headerUrl = usePageDataUrl(PageData.header)\n  const commitsUrl = usePageDataUrl(PageData.commits)\n  const {mutate: mutateChangeBaseBranch} = useChangeBaseBranchMutation()\n\n  const onSelectItem = (selectedBaseBranch: string) => {\n    setIsConfirmingChangeBase(true)\n    setCandidateBaseBranch(selectedBaseBranch)\n  }\n  const onCancelChangeBase = () => {\n    setIsConfirmingChangeBase(false)\n    setCandidateBaseBranch('')\n    setErrorMessage('')\n  }\n  const handleChangeBaseError = (message: string) => {\n    setIsLoading(false)\n    setErrorMessage(message)\n  }\n  const onConfirmChangeBase = () => {\n    setIsLoading(true)\n    mutateChangeBaseBranch(\n      {newBaseBranch: candidateBaseBranch},\n      {\n        onError: error => handleChangeBaseError(error.message),\n        onSuccess: async () => {\n          try {\n            await Promise.all([\n              // We're using refetchQueries here instead of invalidateQueries in order to ensure that the\n              // page data is updated *before* the confirmation dialog is closed, for a smoother overall UX.\n              queryClient.refetchQueries({queryKey: [PageData.header, headerUrl]}, {throwOnError: true}),\n              queryClient.refetchQueries({queryKey: [PageData.commits, commitsUrl]}, {throwOnError: true}),\n            ])\n            setIsLoading(false)\n            setIsEditing?.(false)\n            setIsConfirmingChangeBase(false)\n          } catch {\n            handleChangeBaseError('Unable to refetch commits. Please refresh the page.')\n          }\n        },\n      },\n    )\n  }\n\n  const baseBranchUrl = branchPath({owner: baseRepositoryOwnerLogin, repo: baseRepositoryName, branch: baseBranch})\n  const headBranchUrl = branchPath({owner: headRepositoryOwnerLogin, repo: headRepositoryName, branch: headBranch})\n\n  const buttonLabel = isLoading ? null : 'Change base'\n  const buttonLeadingVisual = isLoading ? () => <Spinner size=\"small\" /> : null\n\n  let baseBranchText = baseBranch\n  let headRepositoryText = ''\n\n  if (isInAdvisoryRepo && headRepositoryName) {\n    headRepositoryText = `${headRepositoryName}`\n  }\n\n  if (headRepositoryOwnerLogin && headRepositoryOwnerLogin !== baseRepositoryOwnerLogin) {\n    baseBranchText = `${baseRepositoryOwnerLogin}:${baseBranch}`\n    if (headRepositoryText) {\n      headRepositoryText = `${headRepositoryOwnerLogin}/${headRepositoryText}`\n    } else {\n      headRepositoryText = headRepositoryOwnerLogin\n    }\n  }\n  const headBranchText = headRepositoryOwnerLogin\n    ? headRepositoryText\n      ? `${headRepositoryText}:${headBranch}`\n      : headBranch\n    : 'unknown repository'\n\n  const summaryActor = state === 'merged' ? mergedBy : author\n  const messageText = getSummaryMessageText(state, commitsCount, summaryActor)\n\n  return (\n    <span className=\"fgColor-muted d-flex flex-items-center flex-wrap\" style={{gap: '0px 4px'}}>\n      {summaryActor ? (\n        <>\n          <Link\n            inline={true}\n            className=\"fgColor-muted text-bold\"\n            data-hovercard-url={userHovercardPath({owner: summaryActor})}\n            href={`/${summaryActor}`}\n          >\n            {summaryActor}\n          </Link>{' '}\n        </>\n      ) : null}\n      {messageText}\n      {canChangeBase && isEditing ? (\n        <>\n          <RefSelector\n            cacheKey={refListCacheKey}\n            canCreate={false}\n            closeOnSelect\n            currentCommitish={baseBranch}\n            defaultBranch={baseRepositoryDefaultBranch}\n            hideShowAll\n            owner={baseRepositoryOwnerLogin}\n            repo={baseRepositoryName}\n            types={['branch']}\n            onSelectItem={onSelectItem}\n          />\n          <Portal>\n            <Dialog\n              aria-labelledby=\"confirm-change-base-branch\"\n              isOpen={isConfirmingChangeBase}\n              onDismiss={onCancelChangeBase}\n            >\n              <Dialog.Header id=\"confirm-change-base-branch\">Are you sure you want to change the base?</Dialog.Header>\n              <div className=\"p-3\">\n                <span>\n                  Some commits from the old base branch may be removed from the timeline, and old review comments may\n                  become outdated.\n                </span>\n                {errorMessage && (\n                  <InlineMessage className=\"mt-2\" variant=\"critical\">\n                    {errorMessage}\n                  </InlineMessage>\n                )}\n                {/* Loading message accessible to screen readers only. See https://primer.style/components/button#button-loading-state */}\n                <span className=\"sr-only\" aria-live=\"polite\">\n                  {isLoading ? 'Base branch update in progress.' : ''}\n                </span>\n                <Button\n                  // aria-disabled must be not set when false to avoid broken styling\n                  alignContent=\"center\"\n                  aria-disabled={isLoading ? 'true' : undefined}\n                  block\n                  className=\"mt-3\"\n                  disabled={isLoading}\n                  leadingVisual={buttonLeadingVisual}\n                  onClick={onConfirmChangeBase}\n                  variant=\"primary\"\n                >\n                  {buttonLabel}\n                </Button>\n              </div>\n            </Dialog>\n          </Portal>\n        </>\n      ) : (\n        <Tooltip text={`${baseRepositoryOwnerLogin}/${baseRepositoryName}:${baseBranch}`}>\n          <BranchName href={baseBranchUrl} className={styles.truncateBranch}>\n            {baseBranchText}\n          </BranchName>\n        </Tooltip>\n      )}\n      from{' '}\n      <Tooltip\n        text={\n          headRepositoryName\n            ? `${headRepositoryOwnerLogin}/${headRepositoryName}:${headBranch}`\n            : 'This repository has been deleted'\n        }\n      >\n        <BranchName href={headBranchUrl} className={styles.truncateBranch}>\n          {headBranchText}\n        </BranchName>\n      </Tooltip>\n      <CopyToClipboardButton\n        accessibleButton={true}\n        ariaLabel=\"Copy head branch name to clipboard\"\n        avoidStyledComponent={true}\n        size=\"small\"\n        textToCopy={headRepositoryOwnerLogin ? headBranchText : headBranch}\n      />\n    </span>\n  )\n}\n\nfunction getSummaryMessageText(state: PullRequestState, commitsCount: number, actor?: string) {\n  const commitsNumberText = `${commitsCount} ${commitsCount > 1 ? 'commits' : 'commit'}`\n\n  if (state === 'merged') {\n    if (actor) {\n      return `merged ${commitsNumberText} into`\n    } else {\n      return `${commitsNumberText} merged into`\n    }\n  } else {\n    return `wants to merge ${commitsNumberText} into`\n  }\n}\n\ntry{ PullRequestHeaderSummary.displayName ||= 'PullRequestHeaderSummary' } catch {}","import {fetchPoll} from '@github-ui/fetch-utils'\nimport {PageData} from '@github-ui/pull-request-page-data-tooling/page-data'\nimport {usePageDataUrl} from '@github-ui/pull-request-page-data-tooling/use-page-data-url'\nimport {reactFetchJSON} from '@github-ui/verified-fetch'\nimport {useMutation} from '@tanstack/react-query'\n\n/**\n * Changes the base branch of a pull request.\n *\n * To run additional callbacks, you can pass any supported callback option to the `mutate` function when it's\n * called, including `onSuccess`, `onError`, and `onSettled`. These additional callbacks will run after the\n * callbacks defined in the hook below.\n *\n * For more details, see https://tanstack.com/query/latest/docs/framework/react/guides/mutations#mutation-side-effects\n *\n * @example\n * ```ts\n * const {mutate} = useChangeBaseBranchMutation()\n *\n * // Required arguments\n * const mutationArguments = {newBaseBranch: 'very-cool-branch' }\n *\n * // Optional callbacks, will run after callbacks defined in useChangeBaseBranchMutation hook\n * const mutationCallbacks = {\n *   onError: error => console.log(error.message),\n *   onSuccess: (data) => console.log(data),\n * }\n *\n * mutate(mutationArguments, mutationCallbacks)\n * ```\n */\nexport function useChangeBaseBranchMutation() {\n  const changeBaseUrl = usePageDataUrl(PageData.changeBase)\n\n  return useMutation({\n    mutationFn: ({newBaseBranch}: {newBaseBranch: string}) => {\n      // Ignore the TSLint deprecation warning for btoa. It's a false positive; btoa is considered legacy in Node as\n      // of v15.13.0, but not in the browser. btoa is still our preferred method for encoding binary strings.\n      const newBaseBinary = btoa(encodeURIComponent(newBaseBranch))\n      return reactFetchJSON(changeBaseUrl, {\n        method: 'PATCH',\n        body: {new_base_binary: newBaseBinary},\n      })\n    },\n    onSuccess: async data => {\n      const response = await data.json()\n\n      if (response.error) {\n        throw new Error(response.error)\n      }\n\n      const orchestrationResult = await (\n        await fetchPoll(response.orchestration.url, {headers: {accept: 'application/json'}})\n      ).json()\n\n      if (orchestrationResult.orchestration.error_message) {\n        throw new Error(orchestrationResult.orchestration.error_message)\n      }\n    },\n  })\n}\n","import {useRef, useState} from 'react'\nimport {Button, FormControl, TextInput} from '@primer/react'\nimport {Stack} from '@primer/react/experimental'\n\nimport {useIsDirty} from '@github-ui/use-is-dirty'\nimport {useStateWithAvoidableReRenders} from '@github-ui/use-state-with-avoidable-rerenders'\nimport {useUpdateTitleMutation} from '../mutations/use-update-title-mutation'\n\nexport const MaxPRTitleLength = 256\nexport const BlankPRTitleError = \"Title can't be blank\"\nexport const EditTitleFormLabel = 'Edit Pull Request Title'\n\nexport function maxPRTitleLengthError(title: string) {\n  return `Title can't be longer than ${MaxPRTitleLength} characters (currently ${title.length} characters)`\n}\n\nfunction isTitleValid(title: string) {\n  return title.trim().length > 0 && title.length <= MaxPRTitleLength\n}\n\nexport interface PullRequestEditTitleFormProps {\n  initialTitle: string\n  pullRequestNumber: number\n  onCloseForm: () => void\n}\n\nexport function PullRequestEditTitleForm({\n  initialTitle,\n  pullRequestNumber,\n  onCloseForm,\n}: PullRequestEditTitleFormProps) {\n  const [title, setTitle] = useState(initialTitle)\n  const [isValid, setIsValid] = useStateWithAvoidableReRenders(true)\n  const [saveErrorMessage, setSaveErrorMessage] = useState<string | null>(null)\n  const [isDirty, changeDirtyData] = useIsDirty({title: initialTitle})\n\n  const editTitleInputRef = useRef<HTMLInputElement>(null)\n  const {mutate: mutateUpdateTitle, isPending: updateTitleIsPending} = useUpdateTitleMutation()\n\n  const onTitleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value)\n    changeDirtyData({title: e.target.value})\n    setIsValid(isTitleValid(e.target.value))\n  }\n\n  const handleUpdateTitleFailure = (message: string) => {\n    setSaveErrorMessage(message)\n    editTitleInputRef.current?.focus()\n  }\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n    setSaveErrorMessage(null)\n\n    // Prevent submitting invalid title\n    if (!isValid) {\n      editTitleInputRef.current?.focus()\n      return\n    }\n\n    // Just close the form if title is valid but unchanged\n    if (isValid && !isDirty) {\n      onCloseForm()\n      return\n    }\n\n    mutateUpdateTitle(\n      {id: pullRequestNumber, title},\n      {\n        onError: error => handleUpdateTitleFailure(error.message),\n        onSuccess: () => onCloseForm(),\n      },\n    )\n  }\n\n  const saveButtonIsDisabled = !isValid || updateTitleIsPending\n  const cancelButtonIsDisabled = updateTitleIsPending\n\n  return (\n    <Stack direction={{narrow: 'vertical', regular: 'horizontal'}} gap=\"condensed\" as=\"form\" onSubmit={handleSubmit}>\n      <Stack.Item grow>\n        <FormControl>\n          <FormControl.Label visuallyHidden>{EditTitleFormLabel}</FormControl.Label>\n          <TextInput\n            autoFocus\n            block\n            className=\"f4\"\n            contrast\n            onChange={onTitleInputChange}\n            ref={editTitleInputRef}\n            validationStatus={!isValid ? 'error' : undefined}\n            value={title}\n          />\n          <DisplayError isValid={isValid} saveErrorMessage={saveErrorMessage} title={title} />\n        </FormControl>\n      </Stack.Item>\n      <Stack.Item>\n        <Stack direction=\"horizontal\" gap=\"condensed\">\n          <Stack.Item>\n            <Button name=\"Save\" type=\"submit\" disabled={saveButtonIsDisabled}>\n              Save\n            </Button>\n          </Stack.Item>\n          <Stack.Item>\n            <Button variant=\"invisible\" onClick={onCloseForm} disabled={cancelButtonIsDisabled}>\n              Cancel\n            </Button>\n          </Stack.Item>\n        </Stack>\n      </Stack.Item>\n    </Stack>\n  )\n}\n\nfunction DisplayError({\n  isValid,\n  saveErrorMessage,\n  title,\n}: {\n  isValid: boolean\n  saveErrorMessage: string | null\n  title: string\n}) {\n  function titleValidationMessage() {\n    const emptyTitle = title.trim().length === 0\n    if (emptyTitle) {\n      return BlankPRTitleError\n    } else if (title.length > MaxPRTitleLength) {\n      return maxPRTitleLengthError(title)\n    }\n  }\n\n  if (!isValid) {\n    return <FormControl.Validation variant=\"error\">{titleValidationMessage()}</FormControl.Validation>\n  } else if (saveErrorMessage) {\n    return <FormControl.Validation variant=\"error\">{saveErrorMessage}</FormControl.Validation>\n  } else {\n    return null\n  }\n}\n\ntry{ PullRequestEditTitleForm.displayName ||= 'PullRequestEditTitleForm' } catch {}\ntry{ DisplayError.displayName ||= 'DisplayError' } catch {}","import {useMutation} from '@tanstack/react-query'\nimport {reactFetchJSON} from '@github-ui/verified-fetch'\nimport {PageData} from '@github-ui/pull-request-page-data-tooling/page-data'\nimport {usePageDataUrl} from '@github-ui/pull-request-page-data-tooling/use-page-data-url'\nimport queryClient from '@github-ui/pull-request-page-data-tooling/query-client'\nimport type {HeaderPageData} from '../page-data/payloads/header'\n\n/**\n * Updates the title of a pull request. On success, will update Tanstack query data.\n *\n * To run additional callbacks, you can pass any supported callback option to the `mutate` function when it's\n * called, including `onSuccess`, `onError`, and `onSettled`. These additional callbacks will run after the\n * callbacks defined in the hook below.\n *\n * For more details, see https://tanstack.com/query/latest/docs/framework/react/guides/mutations#mutation-side-effects\n *\n * @example\n * ```ts\n * const {mutate} = useUpdateTitleMutation()\n *\n * // Required arguments\n * const mutationArguments = {id: 1, title: 'very cool title' }\n *\n * // Optional callbacks, will run after callbacks defined in useUpdateTitleMutation hook\n * const mutationCallbacks = {\n *   onError: error => console.log(error.message),\n *   onSuccess: (data) => console.log(data),\n * }\n *\n * mutate(mutationArguments, mutationCallbacks)\n * ```\n */\nexport function useUpdateTitleMutation() {\n  const titleUrl = usePageDataUrl(PageData.updateTitle)\n  const headerUrl = usePageDataUrl(PageData.header)\n\n  return useMutation({\n    networkMode: 'always',\n    mutationFn: ({id, title}: {id: number; title: string}) => {\n      return reactFetchJSON(titleUrl, {method: 'PATCH', body: {id, title}})\n    },\n    onSuccess: async result => {\n      const responseBody = await result.json()\n\n      if (!result.ok) {\n        throw new Error(responseBody.errors)\n      }\n\n      queryClient.setQueryData([PageData.header, headerUrl], (old: HeaderPageData) => {\n        return {\n          ...old,\n          pullRequest: {\n            ...old.pullRequest,\n            title: responseBody.pullRequest.title,\n            titleHtml: responseBody.pullRequest.titleHtml,\n          },\n        }\n      })\n    },\n  })\n}\n","import {StateLabel, type StateLabelProps} from '@primer/react'\nimport {useMemo} from 'react'\nimport {clsx} from 'clsx'\n\nconst STATE_LABEL_DATA = {\n  open: {\n    description: 'Open',\n    status: 'pullOpened',\n  },\n  closed: {\n    description: 'Closed',\n    status: 'pullClosed',\n  },\n  queued: {\n    description: 'Queued',\n    status: 'pullQueued',\n  },\n  merged: {\n    description: 'Merged',\n    status: 'pullMerged',\n  },\n  draft: {\n    description: 'Draft',\n    status: 'draft',\n  },\n}\n\nexport type PullRequestState = keyof typeof STATE_LABEL_DATA\n\ninterface PullRequestStateLabelProps {\n  className?: string\n  state: PullRequestState\n}\n\nexport function PullRequestStateLabel({className, state}: PullRequestStateLabelProps) {\n  const stateLabel = useMemo(() => STATE_LABEL_DATA[state], [state])\n\n  return (\n    <StateLabel className={clsx('flex-self-start', className)} status={stateLabel.status as StateLabelProps['status']}>\n      {stateLabel.description}\n    </StateLabel>\n  )\n}\n\ntry{ PullRequestStateLabel.displayName ||= 'PullRequestStateLabel' } catch {}","// extracted by mini-css-extract-plugin\nexport default {\"overrideLineHeight\":\"PullRequestHeaderNavigation-module__overrideLineHeight--uVDVm\",\"shiftOnePxRight\":\"PullRequestHeaderNavigation-module__shiftOnePxRight--lRpTe\",\"muteWhenUnselected\":\"PullRequestHeaderNavigation-module__muteWhenUnselected--w52Lp\",\"counterLoading\":\"PullRequestHeaderNavigation-module__counterLoading--RMc75\"};","import {ChecklistIcon, CommentDiscussionIcon, FileDiffIcon, GitCommitIcon} from '@primer/octicons-react'\nimport {CounterLabel, TabNav} from '@primer/react'\nimport {useLocation} from 'react-router-dom'\n\nimport styles from './PullRequestHeaderNavigation.module.css'\nimport {useCallback} from 'react'\nimport {clsx} from 'clsx'\nimport {useTabCountsPageData} from '../page-data/loaders/use-tab-counts-page-data'\n\nexport interface NavigationUrls {\n  conversation: string\n  commits: string\n  checks: string\n  files: string\n}\n\ninterface PullRequestHeaderNavigationProps {\n  commitsCount: number\n  urls: NavigationUrls\n}\n\nexport function PullRequestHeaderNavigation({commitsCount, urls}: PullRequestHeaderNavigationProps) {\n  const location = useLocation()\n  const isCurrentLocation = useCallback((url: string) => location.pathname === url, [location])\n  const tabClasses = `px-3 flex-shrink-0 ${styles.muteWhenUnselected} ${styles.overrideLineHeight}`\n\n  const iconClasses = 'fg-muted mr-2 d-none d-sm-inline-block'\n\n  const {data: labelCounts} = useTabCountsPageData()\n\n  const asyncCounterClasses = clsx('ml-2', labelCounts ? '' : styles.counterLoading)\n\n  return (\n    <TabNav className=\"pt-3\">\n      <TabNav.Link href={urls.conversation} selected={isCurrentLocation(urls.conversation)} className={tabClasses}>\n        <CommentDiscussionIcon className={iconClasses} />\n        Conversation\n        <CounterLabel className={asyncCounterClasses}>{labelCounts?.conversationCount || 0}</CounterLabel>\n      </TabNav.Link>\n      <TabNav.Link href={urls.commits} selected={isCurrentLocation(urls.commits)} className={tabClasses}>\n        <GitCommitIcon className={iconClasses} />\n        Commits\n        <CounterLabel className=\"ml-2\">{commitsCount || 1}</CounterLabel>\n      </TabNav.Link>\n      <TabNav.Link href={urls.checks} selected={isCurrentLocation(urls.checks)} className={tabClasses}>\n        <ChecklistIcon className={iconClasses} />\n        Checks\n        <CounterLabel className={asyncCounterClasses}>{labelCounts?.checksCount || 0}</CounterLabel>\n      </TabNav.Link>\n      <TabNav.Link href={urls.files} selected={isCurrentLocation(urls.files)} className={tabClasses}>\n        <FileDiffIcon className={iconClasses} />\n        Files changed\n        {labelCounts && labelCounts.filesChangedCount && (\n          <CounterLabel className={asyncCounterClasses}>{labelCounts.filesChangedCount}</CounterLabel>\n        )}\n      </TabNav.Link>\n    </TabNav>\n  )\n}\n\ntry{ PullRequestHeaderNavigation.displayName ||= 'PullRequestHeaderNavigation' } catch {}","import {useQuery} from '@tanstack/react-query'\nimport {PageData} from '@github-ui/pull-request-page-data-tooling/page-data'\nimport {usePageDataUrl} from '@github-ui/pull-request-page-data-tooling/use-page-data-url'\nimport {reactFetch} from '@github-ui/verified-fetch'\nimport {reportTraceData} from '@github-ui/internal-api-insights'\nimport type {NavigationCounterPageData} from '../payloads/tab-counts'\n\nexport function useTabCountsPageData(initialData?: NavigationCounterPageData) {\n  const apiURL = usePageDataUrl(PageData.tabCounts)\n\n  return useQuery<NavigationCounterPageData, Error>({\n    queryKey: [PageData.tabCounts, apiURL],\n    queryFn: async () => {\n      const result = await reactFetch(apiURL)\n      if (!result.ok) throw new Error(`HTTP ${result.status}`)\n      const json = await result.json()\n      reportTraceData(json)\n      return json\n    },\n    initialData,\n  })\n}\n","import {ActionList, Link, Octicon} from '@primer/react'\nimport {DesktopDownloadIcon, TerminalIcon} from '@primer/octicons-react'\nimport {CodeDropdownButton} from '@github-ui/code-dropdown-button'\nimport {CloneUrl} from '@github-ui/code-dropdown-button/components/LocalTab'\nimport type {Repository} from '@github-ui/current-repository'\nimport {useNavigate} from '@github-ui/use-navigate'\nimport {buildCodespacesPath} from '@github-ui/code-dropdown-button/components/CodespacesTab'\n\nexport interface PullRequestCodeButtonProps {\n  codespacesEnabled: boolean\n  copilotEnabled: boolean\n  editorEnabled: boolean\n  headBranch: string\n  isEnterprise: boolean\n  pullRequestNumber: number\n  repository: Repository\n}\n\nexport function PullRequestCodeButton({\n  codespacesEnabled,\n  copilotEnabled,\n  editorEnabled,\n  headBranch,\n  isEnterprise,\n  pullRequestNumber,\n  repository,\n}: PullRequestCodeButtonProps) {\n  const copilotTabProps = {repoOwner: repository.ownerLogin, repoName: repository.name, refName: headBranch}\n  const codespacesPath = buildCodespacesPath(repository.id, headBranch)\n  const editorPath = `/${repository.ownerLogin}/${repository.name}/pull/${pullRequestNumber}/edit`\n\n  return (\n    <CodeDropdownButton\n      primary={false}\n      size=\"small\"\n      isEnterprise={isEnterprise}\n      showCodespacesTab={codespacesEnabled}\n      codespacesPath={codespacesPath}\n      showCopilotTab={copilotEnabled}\n      copilotTabProps={copilotTabProps}\n      showGitHubEditorTab={editorEnabled}\n      editorPath={editorPath}\n      localTab={<LocalTab pullNumber={pullRequestNumber} />}\n    />\n  )\n}\n\ninterface LocalTabProps {\n  pullNumber: number\n}\n\nfunction LocalTab(props: LocalTabProps) {\n  const {pullNumber} = props\n  const cloneText = `gh pr checkout ${pullNumber}`\n  const navigate = useNavigate()\n\n  return (\n    <>\n      <div className=\"m-3\">\n        <div className=\"d-flex flex-items-center mb-2\">\n          <Octicon className=\"mr-2\" icon={TerminalIcon} />\n          <p className=\"text-bold mb-0\">Checkout with GitHub CLI</p>\n        </div>\n        <div className=\"d-flex flex-column\">\n          <div className=\"mb-2\">\n            <CloneUrl url={cloneText} />\n          </div>\n          <p className=\"color-fg-muted\">\n            Work fast with our official CLI.{' '}\n            <Link inline href=\"https://cli.github.com\" target=\"_blank\" aria-label=\"Learn more about the GitHub CLI\">\n              Learn more\n            </Link>\n          </p>\n        </div>\n      </div>\n      <ActionList className=\"py-0\">\n        <ActionList.Item\n          onSelect={() => {\n            // Perform the navigation in an onClick because ActionList.LinkItems\n            // close the overlay when clicked.\n            navigate('https:desktop.github.com')\n          }}\n          className=\"mx-0 width-full border-top color-border-subtle p-3\"\n        >\n          <div className=\"d-flex flex-items-center\">\n            <Octicon className=\"mr-2\" icon={DesktopDownloadIcon} />\n            <p className=\"text-bold mb-0\">Checkout with GitHub Desktop</p>\n          </div>\n        </ActionList.Item>\n      </ActionList>\n    </>\n  )\n}\n\ntry{ PullRequestCodeButton.displayName ||= 'PullRequestCodeButton' } catch {}\ntry{ LocalTab.displayName ||= 'LocalTab' } catch {}","import {useState} from 'react'\n\nimport {Button, PageHeader} from '@primer/react'\nimport {DiffStats} from '@github-ui/diffs/DiffParts'\nimport {PullRequestBanners} from './PullRequestBanners'\nimport {PullRequestHeaderSummary} from './PullRequestHeaderSummary'\nimport {PullRequestEditTitleForm} from './PullRequestEditTitleForm'\nimport {PullRequestStateLabel} from './PullRequestStateLabel'\nimport type {HeaderPageData} from '../page-data/payloads/header'\nimport {PullRequestHeaderNavigation} from './PullRequestHeaderNavigation'\nimport {SafeHTMLText} from '@github-ui/safe-html'\nimport {PullRequestCodeButton} from './PullRequestCodeButton'\n\nexport type PullRequestHeaderProps = HeaderPageData\n\nexport function PullRequestHeader({bannersData, pullRequest, repository, urls, user}: PullRequestHeaderProps) {\n  const [isEditing, setIsEditing] = useState(false)\n\n  const titleActions = (\n    <>\n      {user.canEditTitle && (\n        <Button onClick={() => setIsEditing(true)} size=\"small\">\n          Edit\n        </Button>\n      )}\n      <PullRequestCodeButton\n        codespacesEnabled={repository.codespacesEnabled}\n        copilotEnabled={repository.copilotEnabled}\n        editorEnabled={repository.editorEnabled}\n        headBranch={pullRequest.headBranch}\n        isEnterprise={repository.isEnterprise}\n        pullRequestNumber={pullRequest.number}\n        repository={repository}\n      />\n    </>\n  )\n\n  return (\n    <>\n      {isEditing && (\n        <PullRequestEditTitleForm\n          initialTitle={pullRequest.title}\n          pullRequestNumber={pullRequest.number}\n          onCloseForm={() => setIsEditing(false)}\n        />\n      )}\n      {/* This is a hack to make the title actions appear above the title on mobile */}\n      {!isEditing && (\n        <div className=\"d-block d-sm-none pb-2 mb-3 flex-md-order-1 flex-shrink-0 d-flex flex-items-center gap-1\">\n          {titleActions}\n        </div>\n      )}\n      <PageHeader className=\"flex-items-center\">\n        {!isEditing && (\n          <>\n            <PageHeader.TitleArea>\n              <PageHeader.Title as=\"h1\" className=\"lh-condensed\">\n                <SafeHTMLText className=\"f1 text-normal markdown-title\" html={pullRequest.titleHtml} />\n                <span className=\"pl-2 fgColor-muted f1-light d-inline\">#{pullRequest.number}</span>\n              </PageHeader.Title>\n            </PageHeader.TitleArea>\n            <PageHeader.Actions className=\"d-none d-sm-flex flex-items-center gap-1\">{titleActions}</PageHeader.Actions>\n          </>\n        )}\n        <PageHeader.Description className=\"d-flex flex-column flex-items-start\">\n          <div className=\"d-flex flex-column flex-sm-row gap-2\">\n            <PullRequestStateLabel state={pullRequest.state} />\n            <PullRequestHeaderSummary\n              author={pullRequest.author}\n              baseBranch={pullRequest.baseBranch}\n              baseRepositoryDefaultBranch={repository.defaultBranch}\n              baseRepositoryName={repository.name}\n              baseRepositoryOwnerLogin={repository.ownerLogin}\n              canChangeBase={user.canChangeBase}\n              commitsCount={pullRequest.commitsCount}\n              headBranch={pullRequest.headBranch}\n              headRepositoryOwnerLogin={pullRequest.headRepositoryOwnerLogin}\n              headRepositoryName={pullRequest.headRepositoryName}\n              isInAdvisoryRepo={pullRequest.isInAdvisoryRepo}\n              isEditing={isEditing}\n              mergedBy={pullRequest.mergedBy}\n              setIsEditing={setIsEditing}\n              state={pullRequest.state}\n            />\n          </div>\n          <PullRequestBanners bannersData={bannersData} pullRequest={pullRequest} repository={repository} />\n        </PageHeader.Description>\n        <PageHeader.Navigation as=\"nav\" aria-label=\"Pull request navigation tabs\">\n          <div className=\"float-right d-none d-md-block ml-2 pt-4\">\n            <DiffStats\n              linesAdded={pullRequest.linesAdded}\n              linesDeleted={pullRequest.linesDeleted}\n              linesChanged={pullRequest.linesChanged}\n              tooltipDirection=\"nw\"\n            />\n          </div>\n          <PullRequestHeaderNavigation commitsCount={pullRequest.commitsCount} urls={urls} />\n        </PageHeader.Navigation>\n      </PageHeader>\n    </>\n  )\n}\n\ntry{ PullRequestHeader.displayName ||= 'PullRequestHeader' } catch {}","import {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {Label, Link} from '@primer/react'\nimport {useCallback} from 'react'\n\nexport function OptOut({pullRequestNumber, repoNameWithOwner}: {pullRequestNumber: number; repoNameWithOwner: string}) {\n  const feedbackUrl = 'https://gh.io/new-commits-page-feedback'\n  const optOut = useCallback(async () => {\n    const body = {id: pullRequestNumber, feature_name: 'prx_commits'}\n    const response = await verifiedFetchJSON(`/${repoNameWithOwner}/toggle_new_commits`, {method: 'POST', body})\n    if (response) window.location.reload()\n  }, [pullRequestNumber, repoNameWithOwner])\n\n  return (\n    <div className=\"d-flex mt-3\">\n      <Label className=\"mr-2\" variant=\"success\">\n        Beta\n      </Label>\n      <Link as=\"button\" type=\"button\" onClick={() => void optOut()}>\n        Opt out of the new Commits page\n      </Link>\n      <b className=\"mx-2\">·</b>\n      <Link href={feedbackUrl} target=\"_blank\">\n        Give feedback\n      </Link>\n    </div>\n  )\n}\n\ntry{ OptOut.displayName ||= 'OptOut' } catch {}","import {useAlive} from '@github-ui/use-alive'\nimport {throttle} from '@github/mini-throttle'\nimport useIsMounted from '@github-ui/use-is-mounted'\nimport {useCallback, useMemo} from 'react'\n\ntype EventUpdate = {\n  [key: string]: boolean\n}\n\nexport function useRefetchOnAliveUpdate(channel: string, refetch: () => void, watchFor?: EventUpdate): void {\n  const isMounted = useIsMounted()\n\n  const throttledRefetch = useMemo(\n    () =>\n      throttle(() => {\n        if (isMounted()) {\n          refetch()\n        }\n      }, 2000),\n    [isMounted, refetch],\n  )\n\n  const handleNotification = useCallback(\n    (data: {wait?: number; event_updates: EventUpdate}) => {\n      if (watchFor && data.event_updates) {\n        for (const [key, value] of Object.entries(watchFor)) {\n          if (!!data.event_updates[key] === !!value) {\n            window.setTimeout(throttledRefetch, data.wait || 0)\n          }\n        }\n      } else {\n        // If we're not watching for anything specific, just refetch\n        window.setTimeout(throttledRefetch, data.wait || 0)\n      }\n    },\n    [throttledRefetch, watchFor],\n  )\n\n  useAlive(channel, handleNotification)\n}\n","import {useSuspenseQuery} from '@tanstack/react-query'\nimport {PageData} from '@github-ui/pull-request-page-data-tooling/page-data'\nimport {usePageDataUrl} from '@github-ui/pull-request-page-data-tooling/use-page-data-url'\nimport {reactFetch} from '@github-ui/verified-fetch'\nimport {reportTraceData} from '@github-ui/internal-api-insights'\nimport type {CommitsPageData} from '../payloads/commits'\n\nexport function useCommitsPageData(initialData?: CommitsPageData) {\n  const apiURL = usePageDataUrl(PageData.commits)\n\n  return useSuspenseQuery<CommitsPageData, Error>({\n    queryKey: [PageData.commits, apiURL],\n    queryFn: async () => {\n      const result = await reactFetch(apiURL)\n      if (!result.ok) throw new Error(`HTTP ${result.status}`)\n      const json = await result.json()\n      reportTraceData(json)\n      return json\n    },\n    initialData,\n  })\n}\n","import {useSuspenseQuery} from '@tanstack/react-query'\nimport {PageData} from '@github-ui/pull-request-page-data-tooling/page-data'\nimport {usePageDataUrl} from '@github-ui/pull-request-page-data-tooling/use-page-data-url'\nimport {reactFetch} from '@github-ui/verified-fetch'\nimport {reportTraceData} from '@github-ui/internal-api-insights'\nimport type {HeaderPageData} from '../payloads/header'\n\nexport function useHeaderPageData(initialData?: HeaderPageData) {\n  const apiURL = usePageDataUrl(PageData.header)\n\n  return useSuspenseQuery<HeaderPageData, Error>({\n    queryKey: [PageData.header, apiURL],\n    queryFn: async () => {\n      const result = await reactFetch(apiURL)\n      if (!result.ok) throw new Error(`HTTP ${result.status}`)\n      const json = await result.json()\n      reportTraceData(json)\n      return json\n    },\n    initialData,\n  })\n}\n","import {PageHeader} from '@primer/react/experimental'\nimport {useStickyHeader} from '@github-ui/use-sticky-header/useStickyHeader'\nimport {PullRequestStateLabel, type PullRequestState} from './PullRequestStateLabel'\nimport {PullRequestHeaderSummary} from './PullRequestHeaderSummary'\nimport type {Repository} from '@github-ui/current-repository'\n\n// Same wrapper classes as classic Rails pr#commits\nexport const responsiveWrapperClasses = 'container-xl px-3 px-md-4 px-lg-5'\n\ninterface StickyPullRequestHeaderData {\n  author: string\n  baseBranch: string\n  commitsCount: number\n  headBranch: string\n  headRepositoryOwnerLogin?: string\n  headRepositoryName?: string\n  isInAdvisoryRepo: boolean\n  mergedBy?: string\n  number: number\n  state: PullRequestState\n  title: string\n  url: string\n}\n\nexport interface StickyPullRequestHeaderProps {\n  repository: Repository\n  pullRequest: StickyPullRequestHeaderData\n}\n\nexport function StickyPullRequestHeader({repository, pullRequest}: StickyPullRequestHeaderProps) {\n  const {stickyStyles} = useStickyHeader()\n\n  // Force title area to take up full width of page, to match left and right spacing around page main content area\n  const fullWidthSx = {\n    gridColumn: '1/-1',\n    minWidth: ['100vw', '100vw', '100vw', '1280px'],\n  }\n\n  return (\n    <PageHeader className=\"py-2 border-bottom color-shadow-small\" sx={stickyStyles}>\n      <PageHeader.TitleArea className={`flex-items-center ${responsiveWrapperClasses}`} sx={fullWidthSx}>\n        <PageHeader.LeadingVisual>\n          <PullRequestStateLabel state={pullRequest.state} />\n        </PageHeader.LeadingVisual>\n        <PageHeader.Title className=\"lh-condensed\">\n          <div>\n            <bdi className=\"f5 text-bold\">{pullRequest.title}</bdi>\n            <span className=\"f5 text-normal pl-2 fgColor-muted d-inline\">#{pullRequest.number}</span>\n            <div className=\"f6 text-normal\">\n              <PullRequestHeaderSummary\n                author={pullRequest.author}\n                baseBranch={pullRequest.baseBranch}\n                baseRepositoryOwnerLogin={repository.ownerLogin}\n                baseRepositoryName={repository.name}\n                commitsCount={pullRequest.commitsCount}\n                headBranch={pullRequest.headBranch}\n                headRepositoryOwnerLogin={pullRequest.headRepositoryOwnerLogin}\n                headRepositoryName={pullRequest.headRepositoryName}\n                isInAdvisoryRepo={pullRequest.isInAdvisoryRepo}\n                mergedBy={pullRequest.mergedBy}\n                state={pullRequest.state}\n              />\n            </div>\n          </div>\n        </PageHeader.Title>\n      </PageHeader.TitleArea>\n    </PageHeader>\n  )\n}\n\ntry{ StickyPullRequestHeader.displayName ||= 'StickyPullRequestHeader' } catch {}","import {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport {Commits as CommitsList} from '@github-ui/commits/shared/Commits'\nimport {CommitsBlankState} from '@github-ui/commits/shared/CommitsBlankState'\nimport {useAnalytics} from '@github-ui/use-analytics'\n\nimport {PullRequestHeader} from '../components/PullRequestHeader'\nimport {PageLayout, Flash} from '@primer/react'\nimport {OptOut} from '../components/OptOut'\nimport {useCommitsLiveUpdates} from '../hooks/use-commits-live-updates'\nimport {useHeaderLiveUpdates} from '../hooks/use-header-live-updates'\nimport {useCommitsPageData} from '../page-data/loaders/use-commits-page-data'\nimport {useHeaderPageData} from '../page-data/loaders/use-header-page-data'\nimport {ObservableBox as StickyHeaderActivationThreshold} from '@github-ui/use-sticky-header/ObservableBox'\nimport {useStickyHeader} from '@github-ui/use-sticky-header/useStickyHeader'\nimport {responsiveWrapperClasses, StickyPullRequestHeader} from '../components/StickyPullRequestHeader'\nimport type {HeaderPageData} from '../page-data/payloads/header'\nimport type {CommitsPageData} from '../page-data/payloads/commits'\nimport {useLoadDeferredCommitDataPaginated} from '@github-ui/commits/shared/useLoadDeferredCommitData'\nimport {useEffect} from 'react'\n\nexport type CommitsRoutePayload = CommitsPageData &\n  HeaderPageData & {\n    metadata: {\n      deferredCommitsDataUrl: string\n      aliveChannel: string\n    }\n  }\n\nconst loggingPrefix = 'prx_commits.'\n\nexport function Commits() {\n  const {\n    commitGroups,\n    metadata: {deferredCommitsDataUrl, aliveChannel},\n    pullRequest,\n    bannersData,\n    repository,\n    timeOutMessage,\n    truncated,\n    urls,\n    user,\n  } = useRoutePayload<CommitsRoutePayload>()\n\n  const {isSticky, observe, unobserve} = useStickyHeader()\n  const {data: headerData} = useHeaderPageData({repository, pullRequest, bannersData, urls, user})\n  const {data: commitsData, dataUpdatedAt} = useCommitsPageData({\n    commitGroups,\n    repository,\n    timeOutMessage,\n    truncated,\n  })\n  useCommitsLiveUpdates(aliveChannel)\n  useHeaderLiveUpdates(aliveChannel)\n  const deferredCommitsData = useLoadDeferredCommitDataPaginated(\n    deferredCommitsDataUrl,\n    //currently passing in 0 to start at the beginning, but if we want to paginate in the future this would be a variable\n    0,\n    pullRequest.commitsCount,\n    dataUpdatedAt,\n  )\n  const {sendAnalyticsEvent} = useAnalytics()\n\n  const loggingInfo = {commitCount: pullRequest.commitsCount, prNumber: pullRequest.number}\n\n  useEffect(() => {\n    sendAnalyticsEvent(`${loggingPrefix}page_view`, 'COMMITS_PAGE_VIEWED', loggingInfo)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <>\n      {isSticky && <StickyPullRequestHeader repository={repository} pullRequest={pullRequest} />}\n      <div className={`mt-4 ${responsiveWrapperClasses}`}>\n        <PageLayout padding=\"none\">\n          <PageLayout.Header>\n            <PullRequestHeader {...headerData} />\n            {/* On scroll, when this element reaches the top of the viewport, the sticky header activates */}\n            <StickyHeaderActivationThreshold\n              sx={{visibility: 'hidden', height: '1px'}}\n              onObserve={observe}\n              onUnobserve={unobserve}\n            />\n          </PageLayout.Header>\n\n          <h2 className=\"sr-only\">Commits</h2>\n\n          <PageLayout.Content as=\"div\">\n            <div data-testid=\"commits-list\" data-hpc>\n              {commitsData.commitGroups.length === 0 && (\n                <CommitsBlankState timeoutMessage={commitsData.timeOutMessage} />\n              )}\n              {commitsData.commitGroups.length > 0 && (\n                <>\n                  {commitsData.truncated && (\n                    <Flash variant=\"warning\" className=\"mb-3\">\n                      This pull request is big! We&apos;re only showing the most recent 250 commits\n                    </Flash>\n                  )}\n                  <CommitsList\n                    commitGroups={commitsData.commitGroups}\n                    deferredCommitData={deferredCommitsData}\n                    repository={commitsData.repository}\n                    loggingPrefix={loggingPrefix}\n                    loggingPayload={loggingInfo}\n                  />\n                </>\n              )}\n              <OptOut\n                pullRequestNumber={pullRequest.number}\n                repoNameWithOwner={`${repository.ownerLogin}/${repository.name}`}\n              />\n            </div>\n          </PageLayout.Content>\n        </PageLayout>\n      </div>\n    </>\n  )\n}\n\ntry{ Commits.displayName ||= 'Commits' } catch {}","import {useRefetchOnAliveUpdate} from './use-refetch-on-alive-update'\nimport {useCommitsPageData} from '../page-data/loaders/use-commits-page-data'\n\nexport function useCommitsLiveUpdates(channel: string): void {\n  const {refetch} = useCommitsPageData()\n  useRefetchOnAliveUpdate(channel, refetch, {git_updated: true})\n}\n","import {useRefetchOnAliveUpdate} from './use-refetch-on-alive-update'\nimport {useHeaderPageData} from '../page-data/loaders/use-header-page-data'\n\nexport function useHeaderLiveUpdates(channel: string): void {\n  const {refetch} = useHeaderPageData()\n  useRefetchOnAliveUpdate(channel, refetch, {git_updated: false})\n}\n","import {App} from './App'\nimport {Commits} from './routes/Commits'\nimport {registerReactAppFactory} from '@github-ui/react-core/register-app'\nimport {jsonRoute} from '@github-ui/react-core/json-route'\n\nregisterReactAppFactory('pull-request-commits', () => ({\n  App,\n  routes: [jsonRoute({path: '/:owner/:repo/pull/:pr_number/commits', Component: Commits})],\n}))\n","import {getInsightsUrl} from '@github-ui/internal-api-insights'\n\nimport {usePageDataContext} from '../contexts/PageDataContext'\nimport type {PageDataName} from '../payloads/page-data'\n\nexport function usePageDataUrl(pageDataName: PageDataName, params?: string) {\n  const {basePageDataUrl} = usePageDataContext()\n  let baseUrl = `${basePageDataUrl}/page_data/${pageDataName}`\n\n  if (params) baseUrl += `?${params}`\n\n  const url = getInsightsUrl(baseUrl)\n\n  return url\n}\n","export const PageData = {\n  changeBase: 'change_base',\n  commits: 'commits',\n  disableAutoMerge: 'disable_auto_merge',\n  enableAutoMerge: 'enable_auto_merge',\n  header: 'header',\n  statusChecks: 'status_checks',\n  tabCounts: 'tab_counts',\n  codeButton: 'code_button',\n  updateTitle: 'update_title',\n  mergeBox: 'merge_box',\n} as const\n\nexport type PageDataKey = keyof typeof PageData\nexport type PageDataName = (typeof PageData)[PageDataKey]\n","import {QueryClient} from '@tanstack/react-query'\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      // This will prevent additional re-fetches when\n      // 1. A similiar HTTP request is in flight\n      // 2. initialData field is set with data on page load or through SSR\n      staleTime: Infinity,\n      // Disable retries\n      retry: false,\n    },\n  },\n})\n\nexport default queryClient\n","import {createContext, useContext, useEffect, type PropsWithChildren} from 'react'\nimport {SubscriptionSet, Topic} from '@github/alive-client'\n\ntype InitialMessages = Array<[string, unknown]>\n\nconst AliveTestContext = createContext<typeof testSubscribeToAlive | null>(null)\n\nlet subscriptions: SubscriptionSet<(data: unknown) => unknown> | null = null\n/**\n * Provides context required to dispatch mock alive messages via `dispatchAliveTestMessage`\n *\n *@example\n * ```ts\n * import {AliveTestProvider, dispatchAliveTestMessage, signChannel} from '@github-ui/use-alive/test-utils'\n *\n * render(<MyComponent aliveChannel={signChannel(\"channel-name\")} />, {\n *   wrapper: ({children}) => (\n *     <AliveTestProvider\n *       initialMessages={[[\"channel-name\", {data: 1}]]}\n *     >\n *       {children}\n *     </AliveTestProvider>\n * )})\n *\n * // later in the test, you can send another message:\n * dispatchAliveTestMessage(\"channel-name\", {data: 2})\n * ```\n */\nexport function AliveTestProvider({children, initialMessages}: PropsWithChildren<{initialMessages?: InitialMessages}>) {\n  useEffect(() => {\n    if (initialMessages) {\n      for (const [channel, users] of initialMessages) {\n        setTimeout(() => {\n          dispatchAliveTestMessage(channel, users)\n        }, 0)\n      }\n    }\n\n    return () => {\n      // delete subscriptions on unmount of provider to reset subs between tests\n      subscriptions = null\n    }\n  })\n  return <AliveTestContext.Provider value={testSubscribeToAlive}>{children}</AliveTestContext.Provider>\n}\n\n/**\n * Send mock Alive messages for tests or storybook etc.\n * Component under test **must** be wrapped in `AliveTestProvider` to enable Alive mocking.\n *\n * @see `AliveTestProvider`\n *\n * @param channel - an unsigned alive channel name: subscribers to this channel will be notified\n * @param data - data to send to subscribers\n */\nexport function dispatchAliveTestMessage(channel: string, data: unknown) {\n  if (subscriptions === null) {\n    throw new Error(\n      'Test helper `dispatchAliveTestMessage` called outside `AliveTestProvider`. Please wrap your component under test in `AliveTestProvider` from \"@github-ui/use-alive/test-utils\".',\n    )\n  }\n\n  const subscribers = Array.from(subscriptions.subscribers(channel))\n  for (const subscriber of subscribers) {\n    subscriber(data)\n  }\n}\n\n/**\n * Provides access to the `testSubscribeToAlive` mock if called from within a `AliveTestProvider` context\n */\nexport function useTestSubscribeToAlive() {\n  return useContext(AliveTestContext)\n}\n\n/**\n * This function is private and is intended only to be consumable via `AliveTestProvider` / `useTestSubscribeToAlive`\n * Furthermore it is only expected to be used in `use-alive.ts`\n * @param signedChannel - A signed alive channel. You can use `signChannel` to generate a signed channel from a channel name.\n * @param callback - this will be called with data provided via `dispatchAliveTestMessage` to simulate an alive message\n * @private\n */\nfunction testSubscribeToAlive(signedChannel: string, callback: (data: unknown) => unknown) {\n  const topic = Topic.parse(signedChannel)\n  if (!topic) {\n    throw new Error(`Invalid channel name. Did you forget to sign it with \\`signChannel(\"${signedChannel}\")\\`?`)\n  }\n  if (!subscriptions) {\n    subscriptions = new SubscriptionSet()\n  }\n  subscriptions.add({topic, subscriber: callback})\n  return {\n    unsubscribe: () => {\n      subscriptions?.delete({topic, subscriber: callback})\n    },\n  }\n}\n\nconst fakeTimestamp = 1234567890\nconst fakeSignature = 'SIGNATURE'\n\n/**\n * Simulate a server-signed alive channel. Useful for passing as the signed channel to `useAlive` in code under test.\n *\n * @param channel - Unsigned channel name. This is the channel you will dispatch messages to.\n * @param [timestamp=1234567890] - Unix Epoch Time the channel was signed on the server. Default is equal to\n *         \"2009-02-13T23:31:30.000Z\" (multiply by 1000 for JS time in milliseconds)\n * @param [signature='SIGNATURE'] - String used to verify the signature. Ignored in test mode.\n * @returns A signed channel of the form `${btoa({\"c\": \"CHANNEL\", \"t\": 1234567890}')}--SIGNATURE`\n */\nexport function signChannel(channel: string, timestamp = fakeTimestamp, signature = fakeSignature) {\n  return `${btoa(`{\"c\": \"${channel}\", \"t\": ${timestamp}}`)}--${signature}`\n}\n\ntry{ AliveTestContext.displayName ||= 'AliveTestContext' } catch {}\ntry{ AliveTestProvider.displayName ||= 'AliveTestProvider' } catch {}","import {useEffect} from 'react'\nimport useIsMounted from '@github-ui/use-is-mounted'\nimport {getSession} from '@github-ui/alive'\nimport {connectAliveSubscription} from '@github-ui/alive/connect-alive-subscription'\nimport {useTestSubscribeToAlive} from './TestAliveSubscription'\n\n/**\n * Subscribe to an alive channel with a signed channel name. Event data\n * will be passed to the callback.\n * @param signedChannel the signed channel name, provided from the server\n * @param callback a callback to receive events from the alive channel. This callback should be memoized to avoid unnecessary resubscribes when React re-renders.\n */\nexport function useAlive<T>(signedChannel: string, callback: (data: T) => unknown) {\n  const isMounted = useIsMounted()\n  const testSubscribeToAlive = useTestSubscribeToAlive()\n\n  useEffect(() => {\n    let unsubscribeFromAlive = () => {}\n    let closed = false\n\n    async function subscribeToAlive() {\n      if (typeof testSubscribeToAlive === 'function') {\n        const subs = await testSubscribeToAlive(signedChannel, callback as (data: unknown) => unknown)\n        if (subs) {\n          unsubscribeFromAlive = subs.unsubscribe\n        }\n        return\n      }\n\n      try {\n        const aliveSession = await getSession()\n        if (closed) {\n          // Possible we unsubscribed before the session returned\n          // this is fine, we just don't subscribe to the channel on the alive side\n          return\n        }\n        const resp = connectAliveSubscription(aliveSession, signedChannel, callback)\n        if (resp?.unsubscribe) {\n          if (isMounted()) {\n            unsubscribeFromAlive = resp.unsubscribe\n          } else {\n            resp.unsubscribe()\n          }\n        }\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e)\n      }\n    }\n\n    subscribeToAlive()\n\n    return () => {\n      closed = true\n      unsubscribeFromAlive()\n    }\n  }, [signedChannel, callback, isMounted, testSubscribeToAlive])\n}\n","import {useCallback, useRef, useState} from 'react'\n\nfunction shallowCompare<T>(oldData: T, newData: T): boolean {\n  for (const key in oldData) {\n    if (oldData[key] !== newData[key]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Tracks custom state as it changes and tells consumers when it is dirty.\n *\n * @param originalData The original data to compare against.\n * @param compare Function to compare the original data with the new data. Defaults to a shallow key-by-key comparison.\n * @returns\n * isDirty - Whether the data has changed.\n * changeData - A function to set the data to a new value, which will trigger a comparison and update of isDirty.\n * resetOriginalData - A function that changes the original data that is being compared against and resets dirty state.\n */\nexport function useIsDirty<T>(\n  originalData: T,\n  compare: (oldData: T, newData: T) => boolean = shallowCompare,\n): [isDirty: boolean, changeData: (newData: Partial<T>) => void, resetOriginalData: (newData: Partial<T>) => void] {\n  const [isDirty, setIsDirty] = useState(false)\n  const originalDataRef = useRef(originalData)\n  const currentDataRef = useRef(originalData)\n\n  const updateIsDirty = useCallback(() => {\n    const dirty = !compare(originalDataRef.current, currentDataRef.current)\n    if (dirty !== isDirty) {\n      setIsDirty(dirty)\n    }\n  }, [compare, isDirty])\n\n  const changeData = useCallback(\n    (newData: Partial<T>) => {\n      currentDataRef.current = {...currentDataRef.current, ...newData}\n      updateIsDirty()\n    },\n    [updateIsDirty],\n  )\n\n  const resetOriginalData = useCallback(\n    (newData: Partial<T>) => {\n      originalDataRef.current = {...originalDataRef.current, ...newData}\n      updateIsDirty()\n    },\n    [updateIsDirty],\n  )\n\n  return [isDirty, changeData, resetOriginalData]\n}\n","import {useCallback, useRef, useState} from 'react'\n\n/**\n * Custom state hook that will only update state when the value changes.\n * Uses a shallow comparison to determine if the value changed\n */\nexport function useStateWithAvoidableReRenders<T>(initialState: T | (() => T)): [T, (value: T) => void] {\n  const [state, setState] = useState<T>(initialState)\n\n  // Allow callback to access the current state without having to re-define the callback function\n  // each time state changes. This allows us to keep steadier props and avoid extra re-renders in memo'd components.\n  const stateRef = useRef<T>(state)\n  stateRef.current = state\n\n  const setStateIfChanged = useCallback((newState: T) => {\n    if (newState !== stateRef.current) {\n      setState(newState)\n    }\n  }, [])\n\n  return [state, setStateIfChanged]\n}\n","import {noop} from '@github-ui/noop'\nimport {IS_BROWSER} from '@github-ui/ssr-utils'\nimport {useCallback, useEffect, useMemo} from 'react'\n\n/**\n * Create an intersection observer with the given args and callback. Return functions that allow the consumer\n * to observe, unobserve, and disconnect. Whenever the callback or observer args change, the observer will be\n * recreated and the old observer will be disconnected.\n *\n * @param callback      callback that will be invoked when the intersection observer detects an intersection\n * @param observerArgs  IntersectionObserver options to pass to the intersection observer\n * root:\n * Scrollable node that observed element intersections will be measured against\n *\n * rootMargin:\n * Root's margin values.\n * Allows the intersection measurement points to be shifted for top, bottom, left, and right.\n *\n * threshold:\n * Threshold can be a single number or a list of numbers between 0 and 1.\n * Thresholds determine how much overlap between the observed element and the root is required for an\n * intersection event to be fired. It can be a single threshold or a list of thresholds. The default is 0,\n * which means that whenever any amount of an observed element is scrolled into view of the root,\n * an intersection event is fired. Conversely, a value of 1 means that an intersection will only be fired\n * when the entire observed element is scrolled into the root's view.\n */\nexport function useIntersectionObserver(\n  callback: (entries: IntersectionObserverEntry[]) => void,\n  observerArgs?: IntersectionObserverInit,\n): [(element: Element) => void, (element: Element) => void, () => void] {\n  if (!IS_BROWSER) {\n    return [noop, noop, noop]\n  }\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- this is safe because we only skip it in SSR mode\n  const intersectionObserver = useMemo(() => new IntersectionObserver(callback, observerArgs), [callback, observerArgs])\n\n  // disconnect the observer when it changes or the component unmounts\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- skipping if SSR only\n  useEffect(() => {\n    return () => intersectionObserver.disconnect()\n  }, [intersectionObserver])\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- skipping if SSR only\n  const observe = useCallback((element: Element) => intersectionObserver.observe(element), [intersectionObserver])\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- skipping if SSR only\n  const unobserve = useCallback((element: Element) => intersectionObserver.unobserve(element), [intersectionObserver])\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- skipping if SSR only\n  const disconnect = useCallback(() => intersectionObserver.disconnect(), [intersectionObserver])\n  return [observe, unobserve, disconnect]\n}\n","import {useCallback, useState} from 'react'\nimport type {BetterSystemStyleObject} from '@primer/react/lib-esm/sx'\nimport {useIntersectionObserver} from './use-intersection-observer'\n\nconst stickyStyles: BetterSystemStyleObject = {\n  position: 'sticky',\n  top: '-1px',\n  zIndex: 11, // Avatar component in Description has z-index of 10\n  transition: 'all 0.2s ease-in-out',\n  backgroundColor: 'canvas.default',\n}\n\n/**\n * Hook to use a \"sensor\" element to pass to IntersectionObserver\n * If the sensor has reached the top of the viewport, isSticky will be true.\n */\nexport function useStickyHeader(observerOptions?: IntersectionObserverInit) {\n  const [hasRoots, setHasRoots] = useState(false)\n  const [isSticky, setIsSticky] = useState(false)\n\n  const opts = {\n    root: null,\n    rootMargin: '0px',\n    threshold: [0, 1],\n    ...observerOptions,\n  }\n\n  const handleIntersection = useCallback(\n    (entries: IntersectionObserverEntry[]) => {\n      const [entry] = entries\n      const intersect = entry?.intersectionRatio || 0 // fallback to thinking the sensor element is out of the frame if we don't know\n      setIsSticky(intersect < 1)\n      setHasRoots((entry?.rootBounds?.height ?? 0) > 0 ?? false) // if rootBounds is 0, we don't have a root\n    },\n    [setIsSticky],\n  )\n\n  const [observe, unobserve] = useIntersectionObserver(handleIntersection, opts)\n\n  return {isSticky, hasRoots, stickyStyles, observe, unobserve}\n}\n","import {Button} from '@primer/react'\n\nexport interface GitHubEditorTabProps {\n  editorPath: string\n}\n\nexport function GitHubEditorTab(props: GitHubEditorTabProps) {\n  return (\n    <div className=\"p-3 d-flex flex-column\">\n      <div className=\"pb-3\">\n        <span>Edit files and run code in this Pull Request directly from the browser.</span>\n      </div>\n      <Button\n        variant=\"primary\"\n        className=\"width-full\"\n        onClick={() => {\n          window.open(props.editorPath)\n        }}\n      >\n        Open Editor\n      </Button>\n    </div>\n  )\n}\n\ntry{ GitHubEditorTab.displayName ||= 'GitHubEditorTab' } catch {}","import safeStorage from '@github-ui/safe-storage'\nimport {CodeIcon} from '@primer/octicons-react'\nimport {ActionList, ActionMenu, Box, Button, Spinner, TabNav} from '@primer/react'\nimport type React from 'react'\nimport {Suspense, useCallback, useEffect, useState, type ReactNode} from 'react'\nimport {CopilotTab, type CopilotTabProps} from './CopilotTab'\nimport {CodespacesTab} from './CodespacesTab'\nimport {LocalTab, type LocalTabProps} from './LocalTab'\nimport {useCodeButtonData} from '../../pull-request-commits/page-data/loaders/use-code-button-data'\nimport {ErrorBoundary} from '@github-ui/react-core/error-boundary'\nimport {GitHubEditorTab} from './GitHubEditorTab'\n\nconst safeLocalStorage = safeStorage('localStorage')\n\nexport interface CodeDropdownButtonProps {\n  primary: boolean\n  size?: 'small' | 'large' | 'medium'\n  showGitHubEditorTab?: boolean\n  showCodespacesTab?: boolean\n  showCopilotTab?: boolean\n  isEnterprise: boolean\n  localTab?: ReactNode\n  codespacesTab?: ReactNode\n  copilotTab?: ReactNode\n  localTabProps?: LocalTabProps\n  codespacesPath?: string\n  copilotTabProps?: CopilotTabProps\n  editorPath?: string | undefined\n}\n\nenum ActiveTab {\n  Local = 'local',\n  Codespaces = 'cloud',\n  Copilot = 'copilot',\n  GitHubEditor = 'github-editor',\n}\n\nexport function CodeDropdownButton(props: CodeDropdownButtonProps) {\n  const {\n    primary,\n    size,\n    showCodespacesTab,\n    showCopilotTab,\n    showGitHubEditorTab,\n    isEnterprise,\n    localTab,\n    codespacesTab,\n    copilotTab,\n    localTabProps,\n    copilotTabProps,\n    codespacesPath,\n    editorPath,\n  } = props\n  const localStorageDefaultTabKey = 'code-button-default-tab'\n  const [activeTab, setActiveTab] = useState<string>(ActiveTab.Local)\n\n  const onCodespacesTabClick = useCallback((ev?: React.MouseEvent) => {\n    setActiveTab(ActiveTab.Codespaces)\n    safeLocalStorage.setItem(localStorageDefaultTabKey, ActiveTab.Codespaces)\n    ev?.preventDefault()\n  }, [])\n\n  const onLocalTabClick = useCallback((ev?: React.MouseEvent) => {\n    setActiveTab(ActiveTab.Local)\n    safeLocalStorage.setItem(localStorageDefaultTabKey, ActiveTab.Local)\n    ev?.preventDefault()\n  }, [])\n\n  const onCopilotTabClick = useCallback((ev?: React.MouseEvent) => {\n    setActiveTab(ActiveTab.Copilot)\n    safeLocalStorage.setItem(localStorageDefaultTabKey, ActiveTab.Copilot)\n    ev?.preventDefault()\n  }, [])\n\n  const onGitHubEditorTabClick = useCallback((ev?: React.MouseEvent) => {\n    setActiveTab(ActiveTab.GitHubEditor)\n    safeLocalStorage.setItem(localStorageDefaultTabKey, ActiveTab.GitHubEditor)\n    ev?.preventDefault()\n  }, [])\n\n  useEffect(() => {\n    const defaultActiveTab = safeLocalStorage.getItem(localStorageDefaultTabKey)\n    if (defaultActiveTab === ActiveTab.Codespaces && showCodespacesTab) {\n      onCodespacesTabClick()\n    }\n    // Only run after the initial render.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const tabLinkStyles = {\n    height: '40px',\n    width: '50%',\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n    borderTop: 0,\n    color: 'fg.muted',\n    ':hover': {\n      backgroundColor: 'unset',\n      borderColor: 'border.default',\n    },\n    '&.selected': {\n      backgroundColor: 'canvas.overlay',\n    },\n    ':not(&.selected)': {\n      border: 0,\n    },\n  }\n\n  const showTabNav = !isEnterprise && (showCodespacesTab || showCopilotTab)\n\n  return (\n    <ActionMenu>\n      <ActionMenu.Button\n        variant={primary ? 'primary' : undefined}\n        leadingVisual={() => <CodeIcon className=\"hide-sm\" />}\n        size={size ? size : 'medium'}\n      >\n        Code\n      </ActionMenu.Button>\n      <ActionMenu.Overlay width=\"auto\" align=\"end\">\n        <ActionList className=\"react-overview-code-button-action-list py-0\">\n          {showTabNav && (\n            <TabNav>\n              <TabNav.Link\n                as={Button}\n                selected={activeTab === ActiveTab.Local}\n                onClick={onLocalTabClick}\n                sx={{\n                  ...tabLinkStyles,\n                  borderLeft: 0,\n                }}\n              >\n                Local\n              </TabNav.Link>\n              {!isEnterprise && showCodespacesTab && (\n                <TabNav.Link\n                  as={Button}\n                  selected={activeTab === ActiveTab.Codespaces}\n                  onClick={onCodespacesTabClick}\n                  sx={{\n                    ...tabLinkStyles,\n                    borderRight: showCopilotTab ? null : 0,\n                  }}\n                >\n                  Codespaces\n                </TabNav.Link>\n              )}\n              {showCopilotTab && (\n                <TabNav.Link\n                  as={Button}\n                  selected={activeTab === ActiveTab.Copilot}\n                  onClick={onCopilotTabClick}\n                  sx={{\n                    ...tabLinkStyles,\n                    borderRight: 0,\n                  }}\n                >\n                  Copilot\n                </TabNav.Link>\n              )}\n              {showGitHubEditorTab && (\n                <TabNav.Link\n                  as={Button}\n                  selected={activeTab === ActiveTab.GitHubEditor}\n                  onClick={onGitHubEditorTabClick}\n                  sx={{\n                    ...tabLinkStyles,\n                    borderRight: 0,\n                  }}\n                >\n                  GitHub Editor\n                </TabNav.Link>\n              )}\n            </TabNav>\n          )}\n          {activeTab === ActiveTab.Local && (localTab || renderLocalTab(localTabProps))}\n          {activeTab === ActiveTab.Codespaces && (codespacesTab || renderCodespacesTab(codespacesPath))}\n          {activeTab === ActiveTab.Copilot && (copilotTab || renderCopilotTab(copilotTabProps))}\n          {activeTab === ActiveTab.GitHubEditor && renderGitHubEditorTab(editorPath)}\n        </ActionList>\n      </ActionMenu.Overlay>\n    </ActionMenu>\n  )\n}\n\nfunction renderLocalTab(localTabProps?: LocalTabProps) {\n  if (!localTabProps) return null\n\n  return <LocalTab {...localTabProps} />\n}\n\nfunction renderCopilotTab(copilotTabProps?: CopilotTabProps) {\n  if (!copilotTabProps) return null\n\n  return <CopilotTab {...copilotTabProps} />\n}\n\nfunction renderCodespacesTab(codespacesPath?: string) {\n  if (!codespacesPath) return null\n\n  return (\n    <ErrorBoundary fallback={<span>Codespaces data failed to load.</span>}>\n      <Suspense\n        fallback={\n          <Box sx={{display: 'flex', justifyContent: 'center'}}>\n            <Spinner sx={{margin: 2}} />\n          </Box>\n        }\n      >\n        <SuspendedCodespacesTab codespacesPath={codespacesPath} />\n      </Suspense>\n    </ErrorBoundary>\n  )\n}\n\nfunction SuspendedCodespacesTab(props: {codespacesPath: string}) {\n  const data = useCodeButtonData().data\n  return <CodespacesTab codespacesPath={props.codespacesPath} {...data} />\n}\n\nfunction renderGitHubEditorTab(editorPath?: string | undefined) {\n  if (!editorPath) return null\n  return <GitHubEditorTab editorPath={editorPath} />\n}\n\ntry{ CodeDropdownButton.displayName ||= 'CodeDropdownButton' } catch {}\ntry{ SuspendedCodespacesTab.displayName ||= 'SuspendedCodespacesTab' } catch {}","import {reportTraceData} from '@github-ui/internal-api-insights'\nimport {PageData} from '@github-ui/pull-request-page-data-tooling/page-data'\nimport {usePageDataUrl} from '@github-ui/pull-request-page-data-tooling/use-page-data-url'\nimport {reactFetch} from '@github-ui/verified-fetch'\nimport {useSuspenseQuery} from '@tanstack/react-query'\nimport type {CodeButtonData} from '../payloads/code-button'\n\nexport function useCodeButtonData(initialData?: CodeButtonData) {\n  const apiURL = usePageDataUrl(PageData.codeButton)\n\n  return useSuspenseQuery<CodeButtonData, Error>({\n    queryKey: [PageData.codeButton, apiURL],\n    queryFn: async () => {\n      const result = await reactFetch(apiURL)\n      if (!result.ok) throw new Error(`HTTP ${result.status}`)\n      const json = await result.json()\n      reportTraceData(json)\n      return json\n    },\n    initialData,\n  })\n}\n","import type {RepoPolicyInfo} from '@github-ui/code-view-types'\nimport {SafeHTMLBox, type SafeHTMLString} from '@github-ui/safe-html'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport {Link, Spinner} from '@primer/react'\nimport {useEffect, useState} from 'react'\n\ninterface ErrorState {\n  header?: string\n  message?: React.ReactNode\n}\n\nexport async function getCodespacesTabContent({\n  codespacesPath,\n  contactPath,\n}: {\n  codespacesPath: string\n  contactPath: string\n}) {\n  let errorState: ErrorState = {header: '', message: ''}\n  let loading: boolean = true\n  let content: string = ''\n\n  const result = await verifiedFetch(codespacesPath)\n\n  if (result.ok) {\n    content = await result.text()\n    loading = false\n  } else {\n    loading = false\n    errorState = {\n      header: 'Codespace access limited',\n      message: defaultErrorMessage(contactPath),\n    }\n  }\n\n  return {\n    errorState,\n    loading,\n    content,\n  }\n}\n\nexport function buildCodespacesPath(repoId: number, refName: string) {\n  const encodeRef = encodeURIComponent(refName)\n  return `/codespaces?codespace%5Bref%5D=${encodeRef}&current_branch=${encodeRef}&event_target=REPO_PAGE&repo=${repoId}`\n}\n\nfunction defaultErrorMessage(contactPath: string) {\n  return (\n    <span>\n      An unexpected error occurred. Please{' '}\n      <Link inline href={contactPath}>\n        contact support\n      </Link>{' '}\n      for more information.\n    </span>\n  )\n}\n\nexport interface CodespacesTabProps {\n  hasAccessToCodespaces: boolean\n  repositoryPolicyInfo?: RepoPolicyInfo\n  contactPath: string\n  currentUserIsEnterpriseManaged?: boolean\n  enterpriseManagedBusinessName?: string\n  newCodespacePath?: string\n  codespacesPath: string\n  isLoggedIn: boolean\n}\n\nexport function CodespacesTab(props: CodespacesTabProps) {\n  const {\n    hasAccessToCodespaces,\n    repositoryPolicyInfo,\n    contactPath,\n    currentUserIsEnterpriseManaged,\n    enterpriseManagedBusinessName,\n    newCodespacePath,\n    codespacesPath,\n    isLoggedIn,\n  } = props\n  const [codespacesContent, setCodespacesContent] = useState('')\n  const [codespacesLoading, setCodespacesLoading] = useState(hasAccessToCodespaces)\n  const [errorState, setErrorState] = useState<ErrorState>(() => {\n    if (hasAccessToCodespaces) {\n      return {}\n    }\n\n    if (!isLoggedIn) {\n      return {\n        header: 'Sign In Required',\n        message: (\n          <span>\n            Please{' '}\n            <Link inline href={newCodespacePath}>\n              sign in\n            </Link>{' '}\n            to use Codespaces.\n          </span>\n        ),\n      }\n    }\n\n    const initialErrorState: ErrorState = {header: '', message: ''}\n\n    if (!repositoryPolicyInfo?.allowed) {\n      initialErrorState.header = 'Codespace access limited'\n      if (!repositoryPolicyInfo?.canBill && currentUserIsEnterpriseManaged) {\n        initialErrorState.message = (\n          <span>\n            <Link href=\"https://docs.github.com/enterprise-cloud@latest/admin/identity-and-access-management/using-enterprise-managed-users-for-iam/about-enterprise-managed-users\">\n              Enterprise-managed users\n            </Link>\n            {` must have their Codespaces usage paid for by ${enterpriseManagedBusinessName || 'their enterprise'}.`}\n          </span>\n        )\n      } else if (repositoryPolicyInfo?.hasIpAllowLists) {\n        initialErrorState.message = (\n          <span>\n            Your organization or enterprise enforces{' '}\n            <Link\n              inline\n              href=\"https://docs.github.com/enterprise-cloud@latest/organizations/keeping-your-organization-secure/managing-security-settings-for-your-organization/managing-allowed-ip-addresses-for-your-organization\"\n            >\n              IP allow lists\n            </Link>\n            Which are unsupported by Codespaces at this time.\n          </span>\n        )\n      } else if (repositoryPolicyInfo?.disabledByBusiness) {\n        initialErrorState.message = (\n          <span>\n            Your enterprise has disabled Codespaces at this time. Please contact your enterprise administrator for more\n            information.\n          </span>\n        )\n      } else if (repositoryPolicyInfo?.disabledByOrganization) {\n        initialErrorState.message = (\n          <span>\n            Your organization has disabled Codespaces on this repository. Please contact your organization administrator\n            for more information.\n          </span>\n        )\n      } else {\n        initialErrorState.message = defaultErrorMessage(contactPath)\n      }\n    } else if (!repositoryPolicyInfo?.changesWouldBeSafe) {\n      initialErrorState.header = 'Repository access limited'\n      initialErrorState.message = (\n        <span>You do not have access to push to this repository and its owner has disabled forking.</span>\n      )\n    } else {\n      initialErrorState.header = 'Codespace access limited'\n      initialErrorState.message = defaultErrorMessage(contactPath)\n    }\n\n    return initialErrorState\n  })\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // Return early to avoid refetching content if it's already loaded\n      if (codespacesContent) {\n        return\n      }\n\n      const data = await getCodespacesTabContent({\n        contactPath,\n        codespacesPath,\n      })\n\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const {errorState, loading, content} = data\n\n      if (errorState.header && errorState.message) {\n        setErrorState(errorState)\n      }\n\n      setCodespacesLoading(loading)\n      setCodespacesContent(content)\n    }\n\n    if (hasAccessToCodespaces) {\n      fetchData()\n    }\n  }, [contactPath, codespacesPath, hasAccessToCodespaces, codespacesContent])\n\n  return (\n    <div className=\"d-flex flex-justify-center\">\n      {codespacesLoading ? (\n        <span className=\"m-2\">\n          <Spinner />\n        </span>\n      ) : errorState.header && errorState.message ? (\n        <div className=\"blankslate\">\n          <h4 className=\"mb-1\">{errorState.header}</h4>\n          <p className=\"mt-2 mx-4\">{errorState.message}</p>\n        </div>\n      ) : (\n        <SafeHTMLBox className=\"width-full\" html={codespacesContent as SafeHTMLString} />\n      )}\n    </div>\n  )\n}\n\ntry{ CodespacesTab.displayName ||= 'CodespacesTab' } catch {}","import safeStorage from '@github-ui/safe-storage'\nimport {Box, Button, Textarea} from '@primer/react'\nimport {useCallback, useState} from 'react'\n\nconst safeLocalStorage = safeStorage('localStorage')\n\nexport interface CopilotTabProps {\n  repoOwner: string\n  repoName: string\n  refName: string\n  textPrompt?: string\n}\n\nexport function CopilotTab(props: CopilotTabProps) {\n  const {repoOwner, repoName, refName, textPrompt} = props\n  const localStorageCopilotWorkspaceKey = `copilot-workspace-task:${repoOwner}/${repoName}`\n  const openTaskInCopilotWorkspace = useCallback(\n    (task: string) => {\n      window.open(\n        `https://copilot-workspace.githubnext.com/${repoOwner}/${repoName}?task=${encodeURIComponent(\n          task,\n        )}&branch=${encodeURIComponent(refName)}`,\n        '_self',\n      )\n    },\n    [repoOwner, repoName, refName],\n  )\n\n  const [copilotWorkspaceTask, setCopilotWorkspaceTask] = useState(() => {\n    return safeLocalStorage.getItem(localStorageCopilotWorkspaceKey) || ''\n  })\n\n  return (\n    <Box\n      as=\"form\"\n      className=\"p-3\"\n      sx={{display: 'grid', gap: 3}}\n      onSubmit={ev => {\n        ev.preventDefault()\n\n        // Clear local storage\n        safeLocalStorage.removeItem(localStorageCopilotWorkspaceKey)\n\n        const formData = new FormData(ev.currentTarget)\n        const task = formData.get('task') as string\n        openTaskInCopilotWorkspace(task)\n      }}\n    >\n      <Textarea\n        name=\"task\"\n        aria-label=\"Task\"\n        placeholder={textPrompt ? textPrompt : 'Describe a task...'}\n        className=\"width-full\"\n        resize=\"vertical\"\n        value={copilotWorkspaceTask}\n        onChange={ev => {\n          setCopilotWorkspaceTask(ev.target.value)\n          safeLocalStorage.setItem(localStorageCopilotWorkspaceKey, ev.target.value)\n        }}\n        onKeyDown={ev => {\n          // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n          if (ev.key === 'Enter' && (ev.metaKey || ev.ctrlKey)) {\n            ev.preventDefault()\n\n            // Clear local storage\n            safeLocalStorage.removeItem(localStorageCopilotWorkspaceKey)\n\n            const task = ev.currentTarget.value\n            openTaskInCopilotWorkspace(task)\n          }\n        }}\n      />\n      <Button type=\"submit\" variant=\"primary\" className=\"width-full\">\n        Start task\n      </Button>\n    </Box>\n  )\n}\n\ntry{ CopilotTab.displayName ||= 'CopilotTab' } catch {}","import {useCallback, useState} from 'react'\nimport {useIsPlatform} from '@github-ui/use-is-platform'\nimport {useNavigate} from '@github-ui/use-navigate'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport {ActionList, Box, Flash, Heading, Link, Octicon, Text, UnderlineNav} from '@primer/react'\nimport {Tooltip} from '@primer/react/next'\nimport {CopyToClipboardButton} from '@github-ui/copy-to-clipboard'\nimport {DesktopDownloadIcon, FileZipIcon, QuestionIcon, TerminalIcon} from '@primer/octicons-react'\n\nexport interface LocalTabProps {\n  protocolInfo: {\n    httpAvailable: boolean\n    sshAvailable: boolean\n    httpUrl: string\n    showCloneWarning: boolean\n    sshUrl: string\n    sshCertificatesRequired: boolean\n    sshCertificatesAvailable: boolean\n    ghCliUrl: string\n    defaultProtocol: string\n    newSshKeyUrl: string\n    setProtocolPath: string\n  }\n  platformInfo: {\n    cloneUrl: string\n    visualStudioCloneUrl: string\n    xcodeCloneUrl: string\n    zipballUrl: string\n    showVisualStudioCloneButton: boolean\n    showXcodeCloneButton: boolean\n  }\n  helpUrl: string\n}\n\nexport function LocalTab(props: LocalTabProps) {\n  const {\n    httpAvailable,\n    sshAvailable,\n    httpUrl,\n    showCloneWarning,\n    sshUrl,\n    sshCertificatesRequired,\n    sshCertificatesAvailable,\n    ghCliUrl,\n    newSshKeyUrl,\n    setProtocolPath,\n  } = props.protocolInfo\n  const {defaultProtocol} = props.protocolInfo\n  const [activeLocalTab, setActiveLocalTab] = useState(defaultProtocol)\n  const [openingPlatform, setOpeningPlatform] = useState('')\n\n  const {cloneUrl, visualStudioCloneUrl, showVisualStudioCloneButton, showXcodeCloneButton, xcodeCloneUrl, zipballUrl} =\n    props.platformInfo\n  const isMacOrWindows = useIsPlatform(['windows', 'mac'])\n  const isMac = useIsPlatform(['mac'])\n  const navigate = useNavigate()\n\n  const localListItemStyle = {\n    borderTop: '1px solid',\n    borderColor: 'var(--borderColor-muted, var(--color-border-muted))',\n    p: 3,\n    borderRadius: 0,\n  }\n\n  const localProtocolMessageStyle = {mt: 2, color: 'fg.muted'}\n\n  const onProtocolTabClick = useCallback(\n    (protocol: string) => {\n      if (activeLocalTab !== protocol) {\n        setActiveLocalTab(protocol)\n        const formData = new FormData()\n        formData.set('protocol_selector', protocol)\n        verifiedFetch(setProtocolPath, {method: 'post', body: formData})\n      }\n    },\n    [activeLocalTab, setActiveLocalTab, setProtocolPath],\n  )\n\n  return (\n    <div>\n      {openingPlatform === 'githubDesktop' ? (\n        <LaunchingPlatformContents platform=\"GitHub Desktop\" href=\"https://desktop.github.com/\" />\n      ) : openingPlatform === 'visualStudio' ? (\n        <LaunchingPlatformContents platform=\"Visual Studio\" />\n      ) : openingPlatform === 'xcode' ? (\n        <LaunchingPlatformContents platform=\"Xcode\" href=\"https://developer.apple.com/xcode/\" />\n      ) : (\n        <>\n          <div className=\"m-3\">\n            <div className=\"d-flex flex-items-center\">\n              <Octicon icon={TerminalIcon} className=\"mr-2\" />\n              <p className=\"flex-1 text-bold mb-0\">Clone</p>\n              <Tooltip text=\"Which remote URL should I use?\" type=\"label\" direction=\"w\">\n                <Link muted href={`${props.helpUrl}/articles/which-remote-url-should-i-use`}>\n                  <Octicon icon={QuestionIcon} className=\"mr-1\" />\n                </Link>\n              </Tooltip>\n            </div>\n            <UnderlineNav sx={{border: 'none', my: 2, px: 0}} aria-label=\"Remote URL selector\">\n              {httpAvailable && (\n                <UnderlineNav.Item\n                  aria-current={activeLocalTab === 'http' ? 'page' : undefined}\n                  className=\"text-bold\"\n                  onClick={ev => {\n                    onProtocolTabClick('http')\n                    ev.preventDefault()\n                  }}\n                >\n                  HTTPS\n                </UnderlineNav.Item>\n              )}\n              {sshAvailable && (\n                <UnderlineNav.Item\n                  aria-current={activeLocalTab === 'ssh' ? 'page' : undefined}\n                  className=\"text-bold\"\n                  onClick={ev => {\n                    onProtocolTabClick('ssh')\n                    ev.preventDefault()\n                  }}\n                >\n                  SSH\n                </UnderlineNav.Item>\n              )}\n              <UnderlineNav.Item\n                aria-current={activeLocalTab === 'gh_cli' ? 'page' : undefined}\n                className=\"text-bold\"\n                onClick={ev => {\n                  onProtocolTabClick('gh_cli')\n                  ev.preventDefault()\n                }}\n              >\n                GitHub CLI\n              </UnderlineNav.Item>\n            </UnderlineNav>\n            <div className=\"d-flex flex-column\">\n              {activeLocalTab === 'http' ? (\n                <>\n                  <CloneUrl url={httpUrl} />\n                  <Text sx={localProtocolMessageStyle}>Clone using the web URL.</Text>\n                </>\n              ) : activeLocalTab === 'ssh' ? (\n                <>\n                  {showCloneWarning && (\n                    <Flash className=\"mb-2\" variant=\"warning\">\n                      {\"You don't have any public SSH keys in your GitHub account. \"}\n                      You can{' '}\n                      <Link inline href={newSshKeyUrl}>\n                        add a new public key\n                      </Link>\n                      , or try cloning this repository via HTTPS.\n                    </Flash>\n                  )}\n                  <CloneUrl url={sshUrl} />\n                  <Text sx={localProtocolMessageStyle}>\n                    {sshCertificatesRequired\n                      ? 'Use a password-protected SSH certificate.'\n                      : sshCertificatesAvailable\n                        ? 'Use a password-protected SSH key or certificate.'\n                        : 'Use a password-protected SSH key.'}\n                  </Text>\n                </>\n              ) : (\n                <>\n                  <CloneUrl url={ghCliUrl} />\n                  <Text sx={localProtocolMessageStyle}>\n                    Work fast with our official CLI.{' '}\n                    <Link\n                      inline\n                      href=\"https://cli.github.com\"\n                      target=\"_blank\"\n                      aria-label=\"Learn more about the GitHub CLI\"\n                    >\n                      Learn more\n                    </Link>\n                  </Text>\n                </>\n              )}\n            </div>\n          </div>\n          <ActionList\n            className=\"py-0\"\n            sx={{\n              li: {\n                mx: 0,\n                width: '100%',\n              },\n            }}\n          >\n            {isMacOrWindows && (\n              <ActionList.Item\n                onSelect={() => {\n                  setOpeningPlatform('githubDesktop')\n                  // Perform the navigation in an onClick because ActionList.LinkItems\n                  // close the overlay when clicked.\n                  navigate(cloneUrl)\n                }}\n                sx={localListItemStyle}\n              >\n                <ActionList.LeadingVisual>\n                  <DesktopDownloadIcon />\n                </ActionList.LeadingVisual>\n                Open with GitHub Desktop\n              </ActionList.Item>\n            )}\n            {isMacOrWindows && showVisualStudioCloneButton && (\n              <ActionList.Item\n                onSelect={() => {\n                  setOpeningPlatform('visualStudio')\n                  navigate(visualStudioCloneUrl)\n                }}\n                sx={localListItemStyle}\n              >\n                Open with Visual Studio\n              </ActionList.Item>\n            )}\n            {isMac && showXcodeCloneButton && (\n              <ActionList.Item\n                onSelect={() => {\n                  setOpeningPlatform('xcode')\n                  navigate(xcodeCloneUrl)\n                }}\n                sx={localListItemStyle}\n              >\n                Open with Xcode\n              </ActionList.Item>\n            )}\n            <ActionList.LinkItem data-turbo=\"false\" href={zipballUrl} sx={localListItemStyle} rel=\"nofollow\">\n              <ActionList.LeadingVisual>\n                <FileZipIcon />\n              </ActionList.LeadingVisual>\n              Download ZIP\n            </ActionList.LinkItem>\n          </ActionList>\n        </>\n      )}\n    </div>\n  )\n}\n\nfunction LaunchingPlatformContents({platform, href}: {platform: string; href?: string}) {\n  return (\n    <Box className=\"p-3\" sx={{width: '400px'}}>\n      <Heading as=\"h4\" className=\"mb-3 text-center\">\n        {`Launching ${platform}`}\n      </Heading>\n      {href && (\n        <p className=\"mb-3\">\n          If nothing happens, <Link inline href={href}>{`download ${platform}`}</Link> and try again.\n        </p>\n      )}\n    </Box>\n  )\n}\n\nexport function CloneUrl({url}: {url: string}) {\n  return (\n    <Box className=\"d-flex\" sx={{height: '32px'}}>\n      <input\n        type=\"text\"\n        className=\"form-control input-monospace input-sm color-bg-subtle\"\n        data-autoselect\n        value={url}\n        aria-label={url}\n        readOnly\n        style={{flexGrow: 1}}\n      />\n      <CopyToClipboardButton\n        className=\"ml-1 mr-0\"\n        sx={{width: '32px'}}\n        textToCopy={url}\n        ariaLabel=\"Copy url to clipboard\"\n        tooltipProps={{direction: 'nw'}}\n      />\n    </Box>\n  )\n}\n\ntry{ LocalTab.displayName ||= 'LocalTab' } catch {}\ntry{ LaunchingPlatformContents.displayName ||= 'LaunchingPlatformContents' } catch {}\ntry{ CloneUrl.displayName ||= 'CloneUrl' } catch {}","import {copyText} from '@github-ui/copy-to-clipboard'\nimport {noop} from '@github-ui/noop'\nimport {AlertIcon, CopyIcon, GitCommitIcon} from '@primer/octicons-react'\nimport {TextInput} from '@primer/react'\nimport {Blankslate} from '@primer/react/drafts'\n\nimport {Panel} from '../components/Panel'\n\nconst BLANK_STATE_DATA = {\n  timeout: {\n    description: 'Try reloading the page, or if the problem persists, view the history locally using this command:',\n    heading: 'Commit history cannot be loaded',\n    icon: <AlertIcon size=\"medium\" className=\"mb-2 fgColor-muted\" />,\n    showTextInput: true,\n  },\n  unavailable: {\n    description: \"There isn't any commit history to show here.\",\n    heading: 'No commits history',\n    icon: <GitCommitIcon size=\"medium\" />,\n    showTextInput: false,\n  },\n}\n\nexport type CommitsBlankStateProps = {\n  timeoutMessage: string\n  unavailableMessage?: string\n}\n\nexport function CommitsBlankState({timeoutMessage, unavailableMessage}: CommitsBlankStateProps) {\n  const blankStateReason = timeoutMessage !== '' ? 'timeout' : 'unavailable'\n  const data = BLANK_STATE_DATA[blankStateReason]\n  const description = unavailableMessage ?? data.description\n\n  return (\n    <Panel>\n      <div data-hpc>\n        <Blankslate border={false} spacious={true}>\n          <Blankslate.Visual>{data.icon}</Blankslate.Visual>\n          <Blankslate.Heading>{data.heading}</Blankslate.Heading>\n          <Blankslate.Description>{description}</Blankslate.Description>\n          {data.showTextInput && (\n            <TextInput\n              aria-label={'View commit history locally command'}\n              className=\"d-flex flex-justify-center mt-2\"\n              monospace={true}\n              onChange={noop}\n              readOnly\n              size=\"large\"\n              trailingAction={\n                <TextInput.Action\n                  onClick={() => copyText(timeoutMessage)}\n                  icon={CopyIcon}\n                  aria-label=\"Copy to clipboard\"\n                  className=\"fgColor-muted\"\n                />\n              }\n              value={timeoutMessage}\n            />\n          )}\n        </Blankslate>\n      </div>\n    </Panel>\n  )\n}\n\ntry{ CommitsBlankState.displayName ||= 'CommitsBlankState' } catch {}","import type {PropsWithChildren} from 'react'\nimport {createContext, useContext, useMemo} from 'react'\n\ninterface Props {\n  basePageDataUrl: string\n}\n\nexport const PageDataContext = createContext<Props | null>(null)\n\nexport function PageDataContextProvider({children, basePageDataUrl}: PropsWithChildren & Props) {\n  const value = useMemo(() => ({basePageDataUrl}), [basePageDataUrl])\n  return <PageDataContext.Provider value={value}>{children}</PageDataContext.Provider>\n}\n\nexport function usePageDataContext(): Props {\n  const contextData = useContext(PageDataContext)\n  if (!contextData) {\n    throw new Error('usePageDataContext must be used within a PageDataContextProvider')\n  }\n  return contextData\n}\n\ntry{ PageDataContext.displayName ||= 'PageDataContext' } catch {}\ntry{ PageDataContextProvider.displayName ||= 'PageDataContextProvider' } catch {}","import type {ChildRoute, LoaderResult, RouteRegistration, TransitionType} from './app-routing-types'\nimport type React from 'react'\nimport type {Location} from '@remix-run/router'\n\nexport interface JsonRouteProps {\n  path: string\n  Component: React.ComponentType\n  transitionType?: TransitionType\n  shouldNavigateOnError?: boolean\n  children?: ChildRoute[]\n}\n/**\n * A utility for building a route registration for a route that consumes a JSON object (either via embedding in a\n * script tag or via a JSON fetch on React soft navigations).\n */\nexport function jsonRoute<TRouteData, TEmbeddedData>({\n  path,\n  Component,\n  /**\n   * Some routes want to handle their own errors and not just show a generic error page. In this case,\n   * the error is just handled like any other payload for the route.\n   * NOTE: We might consider replacing the shouldNavigateOnError flag with a parallel implementation to jsonRoute.\n   */\n  shouldNavigateOnError,\n  transitionType,\n  children,\n}: JsonRouteProps): RouteRegistration<TRouteData, TEmbeddedData> {\n  async function coreLoader({location}: {location: Location}): Promise<LoaderResult<TRouteData>> {\n    let response: Response\n    try {\n      const fetchPath = `${location.pathname}${location.search}`\n      response = await window.fetch(fetchPath, {\n        headers: {\n          Accept: 'application/json',\n          'X-Requested-With': 'XMLHttpRequest',\n          'X-GitHub-Target': 'dotcom',\n          'X-React-Router': 'json',\n        },\n      })\n    } catch (error) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'fetchError'},\n      }\n    }\n    if (response.redirected) {\n      return {\n        type: 'redirect',\n        url: response.url,\n      }\n    } else if (!response.ok) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'httpError', httpStatus: response.status},\n      }\n    } else {\n      try {\n        const responseJson = await response.json()\n        return {\n          type: 'loaded',\n          data: responseJson,\n          title: responseJson.title,\n        }\n      } catch (error) {\n        return {\n          type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n          error: {type: 'badResponseError'},\n        }\n      }\n    }\n  }\n\n  function loadFromEmbeddedData({embeddedData}: {embeddedData: TEmbeddedData}): {data: TRouteData; title: string} {\n    const data = embeddedData as unknown as TRouteData & {title: string}\n    return {data, title: data.title}\n  }\n\n  return {\n    path,\n    // TODO: consider wrapping Component with a component that passes payload as a prop — ideally as part of migrating\n    // away from useRoutePayload.\n    Component,\n    coreLoader,\n    loadFromEmbeddedData,\n    transitionType,\n    children,\n  }\n}\n","import {Box} from '@primer/react'\nimport {useEffect, useRef} from 'react'\nimport type {RefObject, ComponentProps, PropsWithChildren} from 'react'\n\nfunction useObservedElement<T extends Element>(\n  elementRef: RefObject<T>,\n  observe?: (element: Element) => void,\n  unobserve?: (element: Element) => void,\n) {\n  useEffect(() => {\n    if (elementRef.current) {\n      const ref = elementRef.current\n      observe?.(ref)\n      return () => unobserve?.(ref)\n    }\n  }, [elementRef, observe, unobserve])\n}\n\nexport interface ObservableBoxProps extends PropsWithChildren<ComponentProps<typeof Box>> {\n  onObserve?: (element: Element) => void\n  onUnobserve?: (element: Element) => void\n}\n\nexport function ObservableBox({children, onObserve, onUnobserve, ...props}: ObservableBoxProps) {\n  const boxRef = useRef<HTMLDivElement>(null)\n  useObservedElement(boxRef, onObserve, onUnobserve)\n  return (\n    <Box {...props} ref={boxRef}>\n      {children}\n    </Box>\n  )\n}\n\ntry{ ObservableBox.displayName ||= 'ObservableBox' } catch {}"],"names":["useLoadDeferredCommitData","url","updatedAt","state","setState","useState","baseEmptyStateLoading","useEffect","cancelled","update","response","reactFetchJSON","getInsightsUrl","ok","data","json","loading","reportTraceData","baseEmptyStateNotLoading","e","useLoadSingleDeferredCommitData","useLoadDeferredCommitDataPaginated","startIndex","commitCount","dataUpdatedAt","cumulativeDeferredCommitInfo","useRef","previousStartingIndex","startingIndex","index","i","current","nextIndex","deferredCommits","loadMore","setTimeout","error","oldState","extraDiffEntries","ResponseError","Error","constructor","message","status","policyName","serverXSafeHTMLPolicy","ghTrustedTypes","createPolicy","createHTML","s","trustedTypesPolicy","apply","policy","verifyResponseHtmlSafeNonce","nonces","allowJson","contentType","headers","get","startsWith","responseNonce","includes","getDocumentHtmlSafeNonces","document","querySelectorAll","map","meta","content","length","fallback","silenceErrorReporting","fetchSafeDocumentFragment","options","request","Request","append","self","fetch","statusText","trustedHTML","text","parseHTML","fetchPoll","timeBetweenRequests","acceptedStatusCodes","pollStatusCodes","poll","wait","Promise","resolve","fetchRetry","fetchOptions","max","attempt","retry","reject","err","result","temporaryPermissiveParseHTMLPolicy","sanitize","fallbackOnError","html","template","createElement","innerHTML","importNode","App","props","urls","useRoutePayload","QueryClientProvider","client","queryClient","PageDataContextProvider","basePageDataUrl","conversation","children","ReactQueryDevtools","initialIsOpen","displayName","PullRequestPausedDependabotBanner","repository","paragraphString","helpUrl","useAppPayload","repoPullsUrl","repositoryPath","owner","ownerLogin","repo","name","action","Banner","className","variant","title","Description","p","br","b","Link","inline","href","PullRequestHiddenCharactersBanner","pullRequest","aria-label","hideTitle","BranchName","as","string","headBranch","replace","chr","charCodeAt","toString","substr","PullRequestBanners","bannersData","banners","hiddenCharacterWarning","render","pausedDependabotUpdate","PullRequestHeaderSummary","author","baseBranch","baseRepositoryDefaultBranch","baseRepositoryName","baseRepositoryOwnerLogin","canChangeBase","commitsCount","headRepositoryOwnerLogin","headRepositoryName","isInAdvisoryRepo","isEditing","mergedBy","setIsEditing","refListCacheKey","isConfirmingChangeBase","setIsConfirmingChangeBase","isLoading","setIsLoading","errorMessage","setErrorMessage","candidateBaseBranch","setCandidateBaseBranch","headerUrl","usePageDataUrl","PageData","header","commitsUrl","commits","mutate","mutateChangeBaseBranch","useChangeBaseBranchMutation","changeBaseUrl","changeBase","useMutation","mutationFn","newBaseBranch","newBaseBinary","btoa","encodeURIComponent","method","body","new_base_binary","onSuccess","orchestrationResult","orchestration","accept","error_message","handleChangeBaseError","baseBranchUrl","branchPath","branch","headBranchUrl","buttonLeadingVisual","Spinner","size","baseBranchText","headRepositoryText","headBranchText","summaryActor","messageText","getSummaryMessageText","actor","commitsNumberText","span","style","gap","data-hovercard-url","userHovercardPath","RefSelector","cacheKey","canCreate","closeOnSelect","currentCommitish","defaultBranch","hideShowAll","types","onSelectItem","selectedBaseBranch","Portal","Dialog","aria-labelledby","isOpen","onDismiss","Header","id","div","InlineMessage","aria-live","Button","alignContent","aria-disabled","undefined","block","disabled","leadingVisual","onClick","onError","all","refetchQueries","queryKey","throwOnError","Tooltip","styles","truncateBranch","CopyToClipboardButton","accessibleButton","ariaLabel","avoidStyledComponent","textToCopy","PullRequestEditTitleForm","initialTitle","pullRequestNumber","onCloseForm","setTitle","isValid","setIsValid","useStateWithAvoidableReRenders","saveErrorMessage","setSaveErrorMessage","isDirty","changeDirtyData","useIsDirty","editTitleInputRef","mutateUpdateTitle","isPending","updateTitleIsPending","useUpdateTitleMutation","titleUrl","updateTitle","networkMode","responseBody","errors","setQueryData","old","titleHtml","handleUpdateTitleFailure","focus","saveButtonIsDisabled","Stack","direction","narrow","regular","onSubmit","preventDefault","Item","grow","FormControl","Label","visuallyHidden","TextInput","autoFocus","contrast","onChange","target","value","trim","ref","validationStatus","DisplayError","type","Validation","STATE_LABEL_DATA","open","description","closed","queued","merged","draft","PullRequestStateLabel","stateLabel","useMemo","StateLabel","clsx","PullRequestHeaderNavigation","location","useLocation","isCurrentLocation","useCallback","pathname","tabClasses","muteWhenUnselected","overrideLineHeight","iconClasses","labelCounts","useTabCountsPageData","initialData","apiURL","tabCounts","useQuery","queryFn","reactFetch","asyncCounterClasses","counterLoading","TabNav","selected","CommentDiscussionIcon","CounterLabel","conversationCount","GitCommitIcon","checks","ChecklistIcon","checksCount","files","FileDiffIcon","filesChangedCount","PullRequestCodeButton","codespacesEnabled","copilotEnabled","editorEnabled","isEnterprise","copilotTabProps","repoOwner","repoName","refName","codespacesPath","buildCodespacesPath","editorPath","CodeDropdownButton","primary","showCodespacesTab","showCopilotTab","showGitHubEditorTab","localTab","LocalTab","pullNumber","cloneText","navigate","useNavigate","Octicon","icon","TerminalIcon","CloneUrl","ActionList","onSelect","DesktopDownloadIcon","PullRequestHeader","user","titleActions","canEditTitle","number","PageHeader","TitleArea","Title","SafeHTMLText","Actions","Navigation","DiffStats","linesAdded","linesDeleted","linesChanged","tooltipDirection","OptOut","repoNameWithOwner","optOut","verifiedFetchJSON","feature_name","window","reload","useRefetchOnAliveUpdate","channel","refetch","watchFor","isMounted","useIsMounted","throttledRefetch","throttle","handleNotification","event_updates","key","Object","entries","useAlive","useCommitsPageData","useSuspenseQuery","useHeaderPageData","responsiveWrapperClasses","StickyPullRequestHeader","stickyStyles","useStickyHeader","sx","gridColumn","minWidth","LeadingVisual","bdi","loggingPrefix","Commits","commitGroups","metadata","deferredCommitsDataUrl","aliveChannel","timeOutMessage","truncated","isSticky","observe","unobserve","headerData","commitsData","useCommitsLiveUpdates","git_updated","useHeaderLiveUpdates","deferredCommitsData","sendAnalyticsEvent","useAnalytics","loggingInfo","prNumber","PageLayout","padding","StickyHeaderActivationThreshold","visibility","height","onObserve","onUnobserve","h2","Content","data-testid","data-hpc","CommitsBlankState","timeoutMessage","Flash","CommitsList","deferredCommitData","loggingPayload","registerReactAppFactory","routes","jsonRoute","path","Component","pageDataName","params","usePageDataContext","baseUrl","disableAutoMerge","enableAutoMerge","statusChecks","codeButton","mergeBox","QueryClient","defaultOptions","queries","staleTime","Infinity","AliveTestProvider","AliveTestContext","createContext","subscriptions","testSubscribeToAlive","signedChannel","callback","topic","Topic","parse","SubscriptionSet","add","subscriber","unsubscribe","delete","initialMessages","users","dispatchAliveTestMessage","Array","from","subscribers","Provider","useContext","unsubscribeFromAlive","subscribeToAlive","subs","aliveSession","getSession","resp","connectAliveSubscription","console","shallowCompare","oldData","newData","originalData","compare","setIsDirty","originalDataRef","currentDataRef","updateIsDirty","dirty","initialState","stateRef","newState","useIntersectionObserver","observerArgs","IS_BROWSER","noop","intersectionObserver","IntersectionObserver","disconnect","element","position","top","zIndex","transition","backgroundColor","observerOptions","hasRoots","setHasRoots","setIsSticky","opts","root","rootMargin","threshold","handleIntersection","entry","intersect","intersectionRatio","rootBounds","GitHubEditorTab","safeLocalStorage","safeStorage","codespacesTab","copilotTab","localTabProps","localStorageDefaultTabKey","activeTab","setActiveTab","onCodespacesTabClick","setItem","ev","onLocalTabClick","onCopilotTabClick","onGitHubEditorTabClick","getItem","tabLinkStyles","width","borderBottomRightRadius","borderBottomLeftRadius","borderTop","color","borderColor","border","showTabNav","ActionMenu","CodeIcon","Overlay","align","borderLeft","borderRight","ErrorBoundary","Suspense","Box","display","justifyContent","margin","SuspendedCodespacesTab","CopilotTab","useCodeButtonData","CodespacesTab","ActiveTab","getCodespacesTabContent","contactPath","errorState","verifiedFetch","defaultErrorMessage","repoId","encodeRef","hasAccessToCodespaces","repositoryPolicyInfo","currentUserIsEnterpriseManaged","enterpriseManagedBusinessName","newCodespacePath","isLoggedIn","codespacesContent","setCodespacesContent","codespacesLoading","setCodespacesLoading","setErrorState","initialErrorState","allowed","changesWouldBeSafe","canBill","hasIpAllowLists","disabledByBusiness","disabledByOrganization","fetchData","h4","SafeHTMLBox","textPrompt","localStorageCopilotWorkspaceKey","openTaskInCopilotWorkspace","task","copilotWorkspaceTask","setCopilotWorkspaceTask","removeItem","formData","FormData","currentTarget","Textarea","placeholder","resize","onKeyDown","metaKey","ctrlKey","httpAvailable","sshAvailable","httpUrl","showCloneWarning","sshUrl","sshCertificatesRequired","sshCertificatesAvailable","ghCliUrl","newSshKeyUrl","setProtocolPath","protocolInfo","defaultProtocol","activeLocalTab","setActiveLocalTab","openingPlatform","setOpeningPlatform","cloneUrl","visualStudioCloneUrl","showVisualStudioCloneButton","showXcodeCloneButton","xcodeCloneUrl","zipballUrl","platformInfo","isMacOrWindows","useIsPlatform","isMac","localListItemStyle","borderRadius","localProtocolMessageStyle","mt","onProtocolTabClick","protocol","set","LaunchingPlatformContents","platform","muted","QuestionIcon","UnderlineNav","my","px","aria-current","Text","li","mx","LinkItem","data-turbo","rel","FileZipIcon","Heading","input","data-autoselect","readOnly","flexGrow","tooltipProps","BLANK_STATE_DATA","timeout","heading","AlertIcon","showTextInput","unavailable","unavailableMessage","Panel","Blankslate","spacious","Visual","monospace","trailingAction","Action","copyText","CopyIcon","PageDataContext","contextData","shouldNavigateOnError","transitionType","coreLoader","fetchPath","search","Accept","redirected","httpStatus","responseJson","loadFromEmbeddedData","embeddedData","ObservableBox","boxRef","elementRef"],"sourceRoot":""}