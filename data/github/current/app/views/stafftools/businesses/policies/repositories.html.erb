<% page_info title: "Repository policies - #{this_business.name}", selected_link: :business_policies %>

<%= render Primer::Beta::Subhead.new do |component| %>
  <% component.with_heading(tag: :h2) do %>Repository policies<% end %>
<% end %>

<%= render(Primer::Beta::Heading.new(tag: :h3)) { "Base permissions" } %>
<p>
  <strong><%= view.default_repository_permissions_button_text %></strong> &ndash;
  <%= view.default_repository_permissions_selected_option[:description] %>
</p>

<%= render(Primer::Beta::Heading.new(tag: :h3, mt: 3)) { "Repository creation" } %>
<p>
  <% if view.restrict_repository_create_in_personal_namespace_enabled? %>
      <strong>Disabled</strong> &ndash;
      <%= view.show_personal_repository_setting_copy %>
  <% else %>
    <% if view.members_can_create_repositories_no_policy_checked? %>
      <strong>No policy</strong> &ndash;
      Organization owners can choose whether to allow members to create repositories.
    <% elsif view.members_can_create_repositories_disabled_checked? %>
      <strong>Disabled</strong> &ndash;
      Members will not be able to create repositories.
    <% elsif view.members_can_create_repositories_allowed_checked? %>
      <strong>Members can create repositories</strong> &ndash;
      Members will be allowed to create
      <%
        types = []
        types << "public" if view.members_can_create_public_repos_checked?
        types << "private" if view.members_can_create_private_repos_checked?
        types << "internal" if view.members_can_create_internal_repos_checked?
      %>
      <strong><%= types.to_sentence %></strong>
      repositories.
    <% end %>
  <% end %>
</p>

<%= render(Primer::Beta::Heading.new(tag: :h3, mt: 3)) { "Repository forking" } %>
<p>
  <strong><%= view.allow_private_repository_forking_button_text %></strong> &ndash;
  <%= view.allow_private_repository_forking_selected_option[:description] %>
  <% if view.restrict_repository_create_in_personal_namespace_enabled? %>
    <p>
      <strong>Disabled</strong> &ndash;
      Some options are disabled because creation of forked repositories in personal account is blocked by enterprise policy.
    </p>
  <% end %>
</p>

 <% if view.outside_collaborators_setting_enabled? %>
  <%= render(Primer::Beta::Heading.new(tag: :h3, mt: 3)) { view.outside_collaborators_verbiage_view.capitalize } %>
  <p>
    <strong><%= view.members_can_invite_outside_collaborators_button_text %>  </strong> &ndash;
    <%= view.members_can_invite_outside_collaborators_selected_option[:description] %>
  </p>
<% end %>

<%= render(Primer::Beta::Heading.new(tag: :h3, mt: 3)) { "Default branch name" } %>
<p>
  <strong><%= view.current_default_new_repo_branch || "main" %></strong> &ndash;
  <% if view.default_branch_name_currently_enforced? %>
    Enforced across the enterprise account
  <% else %>
    Not enforced across the enterprise account
  <% end %>
</p>

<%= render Primer::Beta::Subhead.new do |component| %>
  <% component.with_heading(tag: :h2, mt: 4) do %>Admin repository permissions<% end %>
<% end %>

<%= render(Primer::Beta::Heading.new(tag: :h3, mt: 3)) { "Repository visibility change" } %>
<p>
  <strong><%= view.repo_visibility_change_button_text %></strong> &ndash;
  <%= view.repo_visibility_change_selected_option[:description] %>
</p>

<%= render(Primer::Beta::Heading.new(tag: :h3, mt: 3)) { "Repository deletion and transfer" } %>
<p>
  <strong><%= view.members_can_delete_repos_button_text %></strong> &ndash;
  <%= view.members_can_delete_repos_selected_option[:description] %>
</p>

<% if GitHub.update_protected_branches_setting_enabled? || GitHub.flipper[:update_protected_branches_setting].enabled?(this_business) %>
  <%= render(Primer::Beta::Heading.new(tag: :h3, mt: 3)) { "Repository branch protection rules" } %>
  <p>
    <strong><%= view.members_can_update_protected_branches_button_text %></strong> &ndash;
    <%= view.members_can_update_protected_branches_selected_option[:description] %>
  </p>
<% end %>

<%= render(Primer::Beta::Heading.new(tag: :h3, mt: 3)) { "Repository issue deletion" } %>
<p>
  <strong><%= view.members_can_delete_issues_button_text %></strong> &ndash;
  <%= view.members_can_delete_issues_selected_option[:description] %>
</p>
