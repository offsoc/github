#!/bin/bash
#/ Usage: script/memory-alpha-server
#/
#/ Runs memory-alpha service.

# If we need to run the service multiple times on different ports, this name should be parameterized with the port.
NAME="memory-alpha"

SKIP_MEMORY_ALPHA="${SKIP_MEMORY_ALPHA:-false}"

if [ "$SKIP_MEMORY_ALPHA" = "true" ] || [ "$SKIP_MEMORY_ALPHA" = "1" ]; then
  echo "memory-alpha has been disabled"
  sleep infinity
elif [[ "$DX_EDGE" = true ]] && [[ "$DX_FEATURE_SUBPROJECT_CONTAINERS" = true ]]; then
  SCRIPT_DIR=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")
  source $SCRIPT_DIR/dx/lib/subproject-containers

  pushd $SCRIPT_DIR/..
  mkdir -p ./tmp/memory-alpha/test/buckets/local-bucket

  SUBPROJECT_VERSION=$(subproject_version "memory-alpha")
  echo "memory-alpha version $SUBPROJECT_VERSION"

  # ensure we have the config files
  script/build-subproject --clone-only -v memory-alpha

  # Ensure we clean up any existing containers, and remove after shutdown.
  cleanup_docker() {
    echo "Stopping ${NAME}..."
    docker stop ${NAME} &> /dev/null || true
    docker rm ${NAME} &> /dev/null || true
    exit 0
  }

  trap cleanup_docker EXIT INT QUIT TERM HUP

  docker stop ${NAME} &> /dev/null || true
  docker rm ${NAME} &> /dev/null || true

  docker run -d --name ${NAME} --network host \
    -e STORE_CONFIG=/tmp/config/stores_codespaces.yaml \
    -v $(pwd)/vendor/memory-alpha/config/development:/tmp/config \
    -v $(pwd)/tmp/memory-alpha/test:/app/test \
    ghcr.io/github/memory-alpha/memory-alpha:${SUBPROJECT_VERSION} \
    --profilerPort 18080

  docker logs --follow ${NAME} &
  wait
else
  app_dir="$(cd "$(dirname -- "${BASH_SOURCE[0]}")/.." && pwd -P)"
  cd $app_dir

  script/build-subproject -v memory-alpha || exit 1

  export STORE_CONFIG=config/development/stores_codespaces.yaml

  cd vendor/memory-alpha
  exec bin/memory-alpha-server --profilerPort 18080
fi
