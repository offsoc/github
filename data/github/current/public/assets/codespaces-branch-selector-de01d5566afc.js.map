{"version":3,"file":"codespaces-branch-selector-xxxxxxxxxxxx.js","mappings":"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","sources":["app/assets/modules/github/codespaces/branch-selector.ts","app/assets/modules/github/input-demux.ts","ui/packages/client-env/client-env.ts","ui/packages/document-ready/document-ready.ts","ui/packages/feature-flags/feature-flags.ts","ui/packages/form-utils/form-utils.ts","ui/packages/form-utils/remote-submit.ts","ui/packages/runtime-environment/runtime-environment.ts","ui/packages/safe-storage/safe-storage.ts","ui/packages/ssr-utils/ssr-globals.ts","ui/packages/ssr-utils/ssr.ts","ui/packages/stats/stats.ts"],"sourcesContent":["// eslint-disable-next-line no-restricted-imports\nimport {on} from 'delegated-events'\nimport {requestSubmit} from '@github-ui/form-utils'\n\n// Handles selection of ref from ref-selector.ts, which wasn't quite intended for this use case...\non('click', '.js-codespaces-branch', event => {\n  const target = event.currentTarget as HTMLElement\n  if (!target) return\n  const refName = target.getAttribute('data-refname') || ''\n  const refInput = document.querySelector('input#codespace_ref')!\n  refInput.setAttribute('value', refName)\n  if (refInput.getAttribute('data-autosubmit')) {\n    const form = refInput.closest('form')\n    if (form) {\n      requestSubmit(form)\n    }\n  }\n\n  // mark the branch as set in the widget and close the <details>\n  const summary = document.querySelector('.js-selected-branch')!\n  const selectedEl = document.querySelector(\".js-codespaces-branch[aria-checked='true']\")\n  if (selectedEl) {\n    selectedEl.setAttribute('aria-checked', 'false')\n  }\n\n  target.setAttribute('aria-checked', 'true')\n\n  summary.textContent = refName\n  target.closest('details')!.open = false\n  event.preventDefault()\n  return false\n})\n","import {controller, target, targets} from '@github/catalyst'\n\n// Demultiplexes InputEvents on an <input> for use with multiple\n// elements in a <tab-container>.  Also provides notifications to\n// tabpanels when they are opened.\n//\n// On input, element corresponding to the selected tab gets a `input-entered`\n// event with its `detail` property set to the current value of the input.\n// Also performs similar proxying of mouseover events from an optional\n// enclosing details element to the \"primary\" tab so it can e.g. prefetch data.\n@controller\nclass InputDemuxElement extends HTMLElement {\n  // The <input> element to be shared among our sinks\n  @target source: HTMLInputElement\n\n  // The elements we are selecting among\n  @targets sinks: HTMLElement[]\n\n  // Determines which sink is selected by its children's aria-selected\n  // attributes.  Probably a role=\"tablist\" with children of role=\"tab\"\n  @target control: HTMLElement\n\n  // Temporary store for input values while other tabs are using the <input>.\n  storedInput: string[]\n\n  connectedCallback() {\n    /* eslint-disable-next-line custom-elements/no-dom-traversal-in-connectedcallback */\n    if (this.control) this.storedInput = Array(this.control.children.length).fill('')\n    this.addEventListener('input', this.relayInput.bind(this))\n    this.addEventListener('keydown', this.relayKeydown.bind(this))\n    const details = this.closest('details')\n    if (details) {\n      details.addEventListener('toggle', () => {\n        // Move the cursor to the input after the details menu is opened.\n        // This is especially nice in combination with the 'w' shortcut!\n        if (details.open) {\n          this.source.focus()\n        }\n      })\n    }\n  }\n\n  // Invoked on keydown to emulate the existing behavior where pressing down\n  // when the input is focused should focus the first list item.\n  relayKeydown(e: KeyboardEvent) {\n    // TODO: Refactor to use data-hotkey\n    /* eslint eslint-comments/no-use: off */\n    /* eslint-disable @github-ui/ui-commands/no-manual-shortcut-logic */\n    if ((this.isControlTab(e.target) || e.target === this.source) && (e.key === 'ArrowDown' || e.key === 'Tab')) {\n      e.preventDefault()\n      e.stopPropagation()\n      this.routeCustomEvent(new CustomEvent('focus-list'))\n    } else if (e.key === 'Escape') {\n      const details = this.closest('details')\n      if (details) {\n        details.removeAttribute('open')\n      }\n    }\n    /* eslint-enable @github-ui/ui-commands/no-manual-shortcut-logic */\n  }\n\n  // Is the given EventTarget one of our control tabs?\n  isControlTab(element: EventTarget | null): boolean {\n    if (!element) return false\n    if (!this.control) return false\n    return Array.from(this.control.children).includes(element as Element)\n  }\n\n  // Invoked on input.  Decide which sink is selected and dispatch a\n  // CustomEvent that either contains input or a mouseover notification.\n  relayInput(e: Event) {\n    if (!e.target) return\n    const eventTarget = e.target as HTMLElement\n    const text = (eventTarget as HTMLInputElement).value\n    this.routeCustomEvent(new CustomEvent('input-entered', {detail: text}))\n  }\n\n  // Dispatch an event on whichever sink is currently selected.\n  routeCustomEvent(event: Event) {\n    const sink = this.sinks[this.selectedIndex]!\n    sink.dispatchEvent(event)\n  }\n\n  // The index of the selected tab.\n  get selectedIndex() {\n    if (!this.control) return 0\n    const selected = this.control.querySelector('[aria-selected=\"true\"]')\n    if (!selected) return 0\n    return Array.from(this.control.children).indexOf(selected)\n  }\n\n  // Save the input value before switching tabs.\n  storeInput() {\n    this.storedInput[this.selectedIndex] = this.source.value\n  }\n\n  // Restore a stored input value after switching tabs.\n  updateInput(e: CustomEvent) {\n    this.source.value = this.storedInput[this.selectedIndex]!\n    const placeholder = e.detail.relatedTarget.getAttribute('data-filter-placeholder')\n    this.source.placeholder = placeholder\n    this.source.setAttribute('aria-label', placeholder)\n    this.notifySelected()\n  }\n\n  // Courtesy notification to the element whose tab was just selected\n  notifySelected() {\n    const sink = this.sinks[this.selectedIndex]!\n    const event = new CustomEvent('tab-selected')\n    sink.dispatchEvent(event)\n  }\n}\n","export interface ClientEnvironment {\n  readonly locale: string\n  readonly featureFlags: string[]\n}\n\nlet env: ClientEnvironment | undefined\n\nexport function getEnv() {\n  if (!env) {\n    throw new Error(\n      'Client env was requested before it was loaded. This likely means you are attempting to use client env at the module level in SSR, which is not supported. Please move your client env usage into a function.',\n    )\n  }\n\n  return env\n}\n\nexport function getLocale() {\n  return env?.locale ?? 'en-US'\n}\n\nfunction loadEnv() {\n  if (typeof document !== 'undefined') {\n    const envTag = document.getElementById('client-env')\n    if (envTag) {\n      try {\n        env = JSON.parse(envTag.textContent || '')\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error('Error parsing client-env', error)\n      }\n    }\n  }\n}\n\n// Automatically load the env on initial page load\nloadEnv()\n\n// This is a special helper method for setting the env in the SSR environment only\nexport function setClientEnvForSsr(clientEnv: ClientEnvironment | undefined) {\n  env = clientEnv\n}\n\n// This env object is used as a default for tests only and is not included in production builds\nexport const clientEnvForTests: ClientEnvironment = {\n  locale: 'en',\n  featureFlags: ['test_flag'],\n}\n\nexport function _resetForTests({loadNewEnv, forceUndefined}: {loadNewEnv: boolean; forceUndefined?: boolean}) {\n  // forget the current env\n  env = forceUndefined ? undefined : clientEnvForTests\n\n  if (loadNewEnv) {\n    // load the latest env\n    loadEnv()\n  }\n}\n","import {ssrSafeDocument, ssrSafeWindow} from '@github-ui/ssr-utils'\n\n// Check if document has passed interactive state.\n//\n// The document has finished loading and the document has been parsed but\n// sub-resources such as images, stylesheets and frames are still loading.\n// The state indicates that the DOMContentLoaded event has been fired.\nexport const ready: Promise<void> = (function () {\n  if (ssrSafeDocument?.readyState === 'interactive' || ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise<void>(resolve => {\n      ssrSafeDocument?.addEventListener('DOMContentLoaded', () => {\n        resolve()\n      })\n    })\n  }\n})()\n\n// Check if document has passed loaded state.\n//\n// The document and all sub-resources have finished loading. The state\n// indicates that the load event has been fired.\nexport const loaded: Promise<unknown> = (function () {\n  if (ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise(resolve => {\n      ssrSafeWindow?.addEventListener('load', resolve)\n    })\n  }\n})()\n","import memoize from '@github/memoize'\nimport {getEnv} from '@github-ui/client-env'\nimport {IS_SERVER} from '@github-ui/ssr-utils'\n\nfunction getEnabledFeaturesSet(): Set<string> {\n  const features = getEnv().featureFlags\n  const featuresUpperCase = features.map(feature => feature.toLowerCase())\n  return new Set<string>(featuresUpperCase)\n}\n\nconst featuresSet =\n  IS_SERVER || process.env.NODE_ENV === 'test' ? getEnabledFeaturesSet : memoize(getEnabledFeaturesSet)\n\nexport function getEnabledFeatures(): string[] {\n  return Array.from(featuresSet())\n}\n\nexport function isFeatureEnabled(name: string): boolean {\n  return featuresSet().has(name.toLowerCase())\n}\n\n//exported to allow mocking in tests\nconst featureFlag = {isFeatureEnabled}\n\nexport {featureFlag}\n","import {persistSubmitButtonValue} from './remote-submit'\n\ntype TextField = HTMLInputElement | HTMLTextAreaElement\ntype Button = HTMLInputElement | HTMLButtonElement\n\nfunction fire(target: HTMLElement, name: string, cancelable: boolean): boolean {\n  return target.dispatchEvent(\n    new CustomEvent(name, {\n      bubbles: true,\n      cancelable,\n    }),\n  )\n}\n\n// Submit a form while ensuring that `submit` event is also triggered.\n//\n// Calling native `form.submit()` method immediately submits the form without triggering the `submit` event.\n// As a result, code that wants to hook into form submits would never execute.\n//\n// This method first triggers the `submit` event and, if that event wasn't `preventDefault`d, submits the\n// form natively.\nexport function requestSubmit(form: HTMLFormElement, submitter?: Button) {\n  if (submitter) {\n    checkButtonValidity(form, submitter)\n    persistSubmitButtonValue(submitter)\n  }\n  if (fire(form, 'submit', true)) {\n    form.submit()\n  }\n}\n\n// Check submitter validity for form.requestSubmit compatibility.\n// See https://html.spec.whatwg.org/#dom-form-requestsubmit.\nfunction checkButtonValidity(form: HTMLFormElement, submitter: Button) {\n  if (!(form instanceof HTMLFormElement)) throw new TypeError('The specified element is not of type HTMLFormElement.')\n  if (!(submitter instanceof HTMLElement)) throw new TypeError('The specified element is not of type HTMLElement.')\n  if (submitter.type !== 'submit') throw new TypeError('The specified element is not a submit button.')\n  if (!form || form !== submitter.form) throw new Error('The specified element is not owned by the form element.')\n}\n\n// Set a form field value while ensuring that `change` event is also triggered.\n//\n// Having the `change` event fire is important for various behaviors to react, such as form validation.\nexport function changeValue(input: TextField, value: string | boolean) {\n  if (typeof value === 'boolean') {\n    if (input instanceof HTMLInputElement) {\n      input.checked = value\n    } else {\n      throw new TypeError('only checkboxes can be set to boolean value')\n    }\n  } else {\n    if (input.type === 'checkbox') {\n      throw new TypeError(\"checkbox can't be set to string value\")\n    } else {\n      input.value = value\n    }\n  }\n  fire(input, 'change', false)\n}\n\n// Fill multiple form fields by item name.\nexport function fillFormValues(form: HTMLFormElement, fields: {[key: string]: string}) {\n  for (const name in fields) {\n    const value = fields[name]\n    const element = form.elements.namedItem(name)\n\n    if (element instanceof HTMLInputElement) {\n      element.value = value!\n    } else if (element instanceof HTMLTextAreaElement) {\n      element.value = value!\n    }\n  }\n}\n\n// Test if element is a form field.\nexport function isFormField(element: Node): boolean {\n  if (!(element instanceof HTMLElement)) {\n    return false\n  }\n\n  const name = element.nodeName.toLowerCase()\n  const type = (element.getAttribute('type') || '').toLowerCase()\n  return (\n    name === 'select' ||\n    name === 'textarea' ||\n    (name === 'input' && type !== 'submit' && type !== 'reset') ||\n    element.isContentEditable\n  )\n}\n\nfunction searchParamsFromFormData(formData: FormData): URLSearchParams {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new URLSearchParams(formData as any)\n}\n\n// Get a `?` search string for a URL for a GET form, using its `action` attribute as well as its other fields.\nexport function combineGetFormSearchParams(formAction: URL, formData: FormData): string {\n  const allSearchParams = new URLSearchParams(formAction.search)\n  const searchParamsFromInputs = searchParamsFromFormData(formData)\n  for (const [key, value] of searchParamsFromInputs) {\n    allSearchParams.append(key, value)\n  }\n  return allSearchParams.toString()\n}\n\n// Serialize form data into string.\nexport function serialize(form: HTMLFormElement): string {\n  return searchParamsFromFormData(new FormData(form)).toString()\n}\n","// Emulates submit button submission values by inserting a hidden input to the form.\n//\n// Submit events can be triggerd in the following ways:\n// - User clicks on a submit button.\n// - User press Enter when focusing on a form field; also known as \"implicit submission\".\n// - Programmatically via requestSubmit helper.\n//\n// On GitHub.com, the submission is either handled by the browser or remoteForm.\n//\n// For submissions triggered by user actions, the name and value of the clicked submit button (also known as\n// \"the submitter\") is passed along in the request, and can be programmatically retrieved with FormData.entries().\n//\n// However, this value will be lost in the following cases:\n// - 1. When the submitter button is disabled, most commonly by [data-disable-with].\n// - 2. When submitting via requestSubmit (from form.js), because the submission does not originated from a submitter.\n// - 3. When submitting with remoteForm, because FormData(form).entries() does not know about the submitter. In Safari\n// the submitter is known during the submission steps, but this behavior is not supported in any other browsers.\n//\n// @see {@link https://github.com/github/form-data-entries/pull/7}.\n//\n// For the exact workarounds, refer to ./form.js and ./remote.js.\nexport function persistSubmitButtonValue(button: HTMLButtonElement | HTMLInputElement) {\n  const form = button.closest('form')\n  if (!(form instanceof HTMLFormElement)) {\n    return\n  }\n\n  let input = findPersistedSubmitButtonValue(form)\n\n  if (button.name) {\n    const defaultValue = button.matches('input[type=submit]') ? 'Submit' : ''\n    const value = button.value || defaultValue\n    if (!input) {\n      input = document.createElement('input')\n      input.type = 'hidden'\n      input.classList.add('js-submit-button-value')\n      form.prepend(input)\n    }\n    input.name = button.name\n    input.value = value\n  } else if (input) {\n    input.remove()\n  }\n}\n\nexport function findPersistedSubmitButtonValue(form: HTMLFormElement): HTMLInputElement | null {\n  const input = form.querySelector('input.js-submit-button-value')\n  return input instanceof HTMLInputElement ? input : null\n}\n","import memoize from '@github/memoize'\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\n\nconst runtimeEnvironment = memoize(githubEnvironment)\n\n// return the github instance environment\n// if dotcom, returns 'dotcom'\n// if enterprise, returns 'enterprise'\nfunction githubEnvironment(): string {\n  return ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"runtime-environment\"]')?.content || ''\n}\n\nexport const isEnterprise = memoize(isEnterpriseEnvironment)\nfunction isEnterpriseEnvironment(): boolean {\n  return runtimeEnvironment() === 'enterprise'\n}\n\n// This is the \"bundler\" that built the client-side assets, e.g. \"webpack\"\nexport const bundler = typeof BUNDLER !== 'undefined' ? BUNDLER : undefined\n","import {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\ntype StorageBackend = 'sessionStorage' | 'localStorage'\n\n/**\n * An implementation of the Storage API that throws away all data.  Used in\n * cases when the requested Storage backend is not available.\n */\nclass NoOpStorage {\n  getItem() {\n    return null\n  }\n\n  setItem() {\n    return undefined\n  }\n\n  removeItem() {\n    return undefined\n  }\n\n  clear() {\n    return undefined\n  }\n\n  key() {\n    return null\n  }\n\n  get length() {\n    return 0\n  }\n}\n\ntype SafeStorageOptions = {\n  /** Callers may opt not to suppress quota errors thrown on set in case they rely on recieving them. */\n  throwQuotaErrorsOnSet: boolean\n  /** The amount of time the value should remain in storage, in milliseconds */\n  ttl?: number\n  /** Don't send stats in CI */\n  sendCacheStats?: boolean\n}\n\n/**\n * Safely access Storage items by wrapping a Storage instance\n * (localStorage or sessionStorage) with safe versions of its API\n * methods.  Callers may opt not to suppress quota errors thrown on\n * set in case they rely on recieving them.\n */\nexport default function safeStorage<T = string>(\n  storageKey: StorageBackend,\n  options: SafeStorageOptions = {throwQuotaErrorsOnSet: false},\n  global = ssrSafeWindow,\n  deserialize: (value: string) => T = value => value as unknown as T,\n  serialize: (value: T) => string = (value: T) => value as unknown as string,\n) {\n  let storage: Storage\n  try {\n    if (!global) {\n      // in an SSR environment, use noop storage\n      throw new Error()\n    }\n\n    storage = global[storageKey] || new NoOpStorage()\n  } catch {\n    storage = new NoOpStorage()\n  }\n\n  const {throwQuotaErrorsOnSet} = options\n\n  function emitStats(key: PlatformBrowserIncrementKey) {\n    if (options.sendCacheStats) {\n      sendStats({incrementKey: key})\n    }\n  }\n\n  /**  Safely get storage item. Returns `null` if the item is older than the provided ttl */\n  function getItem(key: string, now: number = new Date().getTime()): T | null {\n    try {\n      const value = storage.getItem(key)\n      if (!value) {\n        return null\n      }\n      const expiryKey = `${key}:expiry`\n      const expiry = Number(storage.getItem(expiryKey))\n      if (expiry && now > expiry) {\n        removeItem(key)\n        removeItem(expiryKey)\n        emitStats('SAFE_STORAGE_VALUE_EXPIRED')\n        return null\n      } else {\n        emitStats('SAFE_STORAGE_VALUE_WITHIN_TTL')\n        return deserialize(value)\n      }\n    } catch (error) {\n      // Ignore browser private mode error.\n      return null\n    }\n  }\n\n  /**\n   * Safely set storage item.\n   * If `ttl` is provided, set an expiry time for the item under the key `${key}:expiry`\n   * This function will be called\n   */\n  function setItem(key: string, value: T, now: number = new Date().getTime()) {\n    try {\n      storage.setItem(key, serialize(value) as unknown as string)\n      if (options.ttl) {\n        const expiryKey = `${key}:expiry`\n        const expiry = now + options.ttl\n        storage.setItem(expiryKey, expiry.toString())\n      }\n    } catch (error) {\n      if (throwQuotaErrorsOnSet && error instanceof Error && error.message.toLowerCase().includes('quota')) throw error\n    }\n  }\n\n  // Safely remove storage item.\n  function removeItem(key: string) {\n    try {\n      storage.removeItem(key)\n      if (options.ttl) {\n        const expiryKey = `${key}:expiry`\n        storage.removeItem(expiryKey)\n      }\n    } catch (error) {\n      // Ignore browser private mode error.\n    }\n  }\n\n  return {\n    getItem,\n    setItem,\n    removeItem,\n    clear: storage.clear,\n    key: storage.key,\n    get length() {\n      return storage.length\n    },\n  }\n}\n\nexport function jsonSafeStorage<T>(storageBackend: StorageBackend) {\n  return safeStorage<T>(\n    storageBackend,\n    {throwQuotaErrorsOnSet: false},\n    ssrSafeWindow,\n    JSON.parse as (value: string) => T,\n    JSON.stringify as (obj: T) => string,\n  )\n}\n","// When using SSR, browser globals are not available. If you try to use them, Node.js will throw an error\ntype SSRSafeLocation = Pick<Location, 'pathname' | 'origin' | 'search' | 'hash' | 'href'>\n\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeDocument = typeof document === 'undefined' ? undefined : document\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeWindow = typeof window === 'undefined' ? undefined : window\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeHistory = typeof history === 'undefined' ? undefined : history\n\nexport const ssrSafeLocation: SSRSafeLocation =\n  // eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\n  typeof location === 'undefined' ? {pathname: '', origin: '', search: '', hash: '', href: ''} : location\n\nexport function setLocation(url: string) {\n  // eslint-disable-next-line no-restricted-syntax\n  const parsedURL: SSRSafeLocation = new URL(url)\n  const {pathname, origin, search, hash} = parsedURL\n\n  Object.assign(ssrSafeLocation, {pathname, origin, search, hash})\n}\n","import {ssrSafeDocument} from './ssr-globals'\n\n/***\n * Are we rendering on the server?\n */\nexport const IS_SERVER = typeof ssrSafeDocument === 'undefined'\n\n/***\n * Are we rendering on the client?\n */\nexport const IS_BROWSER = !IS_SERVER\n\n/***\n * This helper returns `true` if:\n * - we are rendering on the server\n * - we are on the client, and the app has been hydrated from a server-render\n */\nexport function wasServerRendered() {\n  if (IS_SERVER) {\n    return true\n  }\n\n  return Boolean(ssrSafeDocument!.querySelector('react-app[data-ssr=\"true\"]'))\n}\n","import {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {loaded} from '@github-ui/document-ready'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {throttle} from '@github/mini-throttle'\n\nlet stats: PlatformBrowserStat[] = []\nconst chunkSize = 64 * 1024\n\nexport function sendStats(stat: PlatformBrowserStat, flushImmediately = false, samplingProbability = 0.5): void {\n  if (isFeatureEnabled('BROWSER_STATS_DISABLED') === true) {\n    return\n  }\n  if (samplingProbability < 0 || samplingProbability > 1) {\n    throw new RangeError('Sampling probability must be between 0 and 1')\n  }\n\n  if (stat.timestamp === undefined) stat.timestamp = new Date().getTime()\n  stat.loggedIn = isLoggedIn()\n  stat.staff = isStaff()\n  stat.bundler = bundler\n  if (Math.random() < samplingProbability) {\n    stats.push(stat)\n  }\n\n  if (flushImmediately) {\n    flushStats()\n  } else {\n    throttledScheduleSendStats()\n  }\n}\n\nlet queued: number | null = null\n\nconst throttledScheduleSendStats = throttle(async function scheduleSendStats() {\n  await loaded\n  if (queued == null) {\n    queued = window.requestIdleCallback(flushStats)\n  }\n}, 5000)\n\nfunction flushStats() {\n  queued = null\n  if (!stats.length) {\n    return\n  }\n\n  const url = ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-stats-url\"]')?.content\n  if (!url) {\n    return\n  }\n\n  const batches = getBatches(stats)\n\n  for (const batch of batches) {\n    safeSend(url, `{\"stats\": [${batch.join(',')}] }`)\n  }\n\n  stats = []\n}\n\n// getBatches breaks up the list of stats into smaller batches\n// that are less than 64kb in size. This is to avoid hitting the\n// size limit of the beacon API.\nfunction getBatches(items: PlatformBrowserStat[]): string[][] {\n  const batches: string[][] = []\n  const itemStrings = items.map(item => JSON.stringify(item))\n\n  while (itemStrings.length > 0) {\n    batches.push(makeBatch(itemStrings))\n  }\n\n  return batches\n}\n\n// makeBatch walks the items and collects batches of items that are within\n// the 64kb limit. If an item is too big to fit in a batch, it is sent alone.\nfunction makeBatch(itemStrings: string[]): string[] {\n  const firstItem = itemStrings.shift()!\n  const batch: string[] = [firstItem]\n  let size = firstItem.length\n\n  while (itemStrings.length > 0 && size <= chunkSize) {\n    const nextItemSize = itemStrings[0]!.length\n\n    if (size + nextItemSize <= chunkSize) {\n      const itemString = itemStrings.shift()!\n      batch.push(itemString)\n      size += nextItemSize\n    } else {\n      break\n    }\n  }\n\n  return batch\n}\n\nfunction safeSend(url: string, data: string) {\n  try {\n    if (navigator.sendBeacon) {\n      navigator.sendBeacon(url, data)\n    }\n  } catch {\n    // Silently ignore errors: https://github.com/github/github/issues/178088#issuecomment-829936461\n  }\n}\n\nfunction isLoggedIn(): boolean {\n  return !!ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n}\n\nexport function isStaff(): boolean {\n  return !!ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"user-staff\"]')?.content\n}\n\n// Flush stats before users navigate away from the page\nssrSafeDocument?.addEventListener('pagehide', flushStats)\nssrSafeDocument?.addEventListener('visibilitychange', flushStats)\n"],"names":["on","event","target","currentTarget","refName","getAttribute","refInput","document","querySelector","setAttribute","form","closest","requestSubmit","summary","selectedEl","textContent","open","preventDefault","InputDemuxElement","HTMLElement","connectedCallback","control","storedInput","Array","children","length","fill","addEventListener","relayInput","bind","relayKeydown","details","source","focus","e","isControlTab","key","stopPropagation","routeCustomEvent","CustomEvent","removeAttribute","element","from","includes","text","value","detail","sink","sinks","selectedIndex","dispatchEvent","selected","indexOf","storeInput","updateInput","placeholder","relatedTarget","notifySelected","targets","controller","env","getEnv","getLocale","locale","loadEnv","envTag","getElementById","JSON","parse","error","console","ready","ssrSafeDocument","readyState","Promise","resolve","loaded","ssrSafeWindow","getEnabledFeaturesSet","Set","features","featureFlags","map","feature","toLowerCase","featuresSet","IS_SERVER","memoize","getEnabledFeatures","isFeatureEnabled","name","has","featureFlag","fire","cancelable","bubbles","submitter","checkButtonValidity","HTMLFormElement","type","persistSubmitButtonValue","submit","changeValue","input","HTMLInputElement","checked","fillFormValues","fields","elements","namedItem","HTMLTextAreaElement","isFormField","nodeName","isContentEditable","searchParamsFromFormData","formData","URLSearchParams","combineGetFormSearchParams","formAction","allSearchParams","search","append","toString","serialize","FormData","button","findPersistedSubmitButtonValue","defaultValue","matches","createElement","classList","add","prepend","remove","runtimeEnvironment","head","content","isEnterprise","bundler","BUNDLER","NoOpStorage","getItem","setItem","removeItem","clear","safeStorage","storageKey","options","throwQuotaErrorsOnSet","global","deserialize","storage","emitStats","sendCacheStats","sendStats","incrementKey","ttl","expiryKey","now","Date","getTime","expiry","Number","Error","message","jsonSafeStorage","storageBackend","stringify","undefined","window","ssrSafeHistory","history","ssrSafeLocation","location","pathname","origin","hash","href","IS_BROWSER","wasServerRendered","Boolean","stats","stat","flushImmediately","samplingProbability","timestamp","loggedIn","staff","isStaff","Math","random","push","flushStats","throttledScheduleSendStats","queued","throttle","requestIdleCallback","url","batch","getBatches","items","batches","itemStrings","item","makeBatch","firstItem","shift","size","nextItemSize","itemString","safeSend","data","navigator","sendBeacon","join"],"sourceRoot":""}