# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Api::App::PlatformTypes::AccountSpammableTable`.
# Please instead update this file by running `bin/tapioca dsl Api::App::PlatformTypes::AccountSpammableTable`.

module Api::App::PlatformTypes::AccountSpammableTable
  sig { returns(T::Boolean) }
  def abuse_report?; end

  sig { returns(T::Boolean) }
  def commit_comment?; end

  sig { returns(T::Boolean) }
  def commit_comment_reaction?; end

  sig { returns(T::Boolean) }
  def cross_reference?; end

  sig { returns(T::Boolean) }
  def discussion?; end

  sig { returns(T::Boolean) }
  def discussion_comment?; end

  sig { returns(T::Boolean) }
  def discussion_comment_reaction?; end

  sig { returns(T::Boolean) }
  def discussion_reaction?; end

  sig { returns(T::Boolean) }
  def follower?; end

  sig { returns(T::Boolean) }
  def gist?; end

  sig { returns(T::Boolean) }
  def gist_comment?; end

  sig { returns(T::Boolean) }
  def integration?; end

  sig { returns(T::Boolean) }
  def issue?; end

  sig { returns(T::Boolean) }
  def issue_comment?; end

  sig { returns(T::Boolean) }
  def issue_comment_reaction?; end

  sig { returns(T::Boolean) }
  def issue_event_author?; end

  sig { returns(T::Boolean) }
  def issue_reaction?; end

  sig { returns(T::Boolean) }
  def memex_project?; end

  sig { returns(T::Boolean) }
  def memex_project_item?; end

  sig { returns(T::Boolean) }
  def memex_project_status?; end

  sig { returns(T::Boolean) }
  def milestone?; end

  sig { returns(T::Boolean) }
  def oauth_application?; end

  sig { returns(T::Boolean) }
  def profile?; end

  sig { returns(T::Boolean) }
  def pull_request?; end

  sig { returns(T::Boolean) }
  def pull_request_review?; end

  sig { returns(T::Boolean) }
  def pull_request_review_comment?; end

  sig { returns(T::Boolean) }
  def pull_request_review_comment_reaction?; end

  sig { returns(T::Boolean) }
  def pull_request_review_reaction?; end

  sig { returns(T::Boolean) }
  def reaction?; end

  sig { returns(T::Boolean) }
  def repository?; end

  sig { returns(T::Boolean) }
  def star?; end

  sig { returns(T::Boolean) }
  def user_email?; end

  sig { returns(T::Boolean) }
  def workflow_run?; end

  ABUSE_REPORT = T.let("ABUSE_REPORT", String)
  COMMIT_COMMENT = T.let("COMMIT_COMMENT", String)
  COMMIT_COMMENT_REACTION = T.let("COMMIT_COMMENT_REACTION", String)
  CROSS_REFERENCE = T.let("CROSS_REFERENCE", String)
  DISCUSSION = T.let("DISCUSSION", String)
  DISCUSSION_COMMENT = T.let("DISCUSSION_COMMENT", String)
  DISCUSSION_COMMENT_REACTION = T.let("DISCUSSION_COMMENT_REACTION", String)
  DISCUSSION_REACTION = T.let("DISCUSSION_REACTION", String)
  FOLLOWER = T.let("FOLLOWER", String)
  GIST = T.let("GIST", String)
  GIST_COMMENT = T.let("GIST_COMMENT", String)
  INTEGRATION = T.let("INTEGRATION", String)
  ISSUE = T.let("ISSUE", String)
  ISSUE_COMMENT = T.let("ISSUE_COMMENT", String)
  ISSUE_COMMENT_REACTION = T.let("ISSUE_COMMENT_REACTION", String)
  ISSUE_EVENT_AUTHOR = T.let("ISSUE_EVENT_AUTHOR", String)
  ISSUE_REACTION = T.let("ISSUE_REACTION", String)
  MEMEX_PROJECT = T.let("MEMEX_PROJECT", String)
  MEMEX_PROJECT_ITEM = T.let("MEMEX_PROJECT_ITEM", String)
  MEMEX_PROJECT_STATUS = T.let("MEMEX_PROJECT_STATUS", String)
  MILESTONE = T.let("MILESTONE", String)
  OAUTH_APPLICATION = T.let("OAUTH_APPLICATION", String)
  PROFILE = T.let("PROFILE", String)
  PULL_REQUEST = T.let("PULL_REQUEST", String)
  PULL_REQUEST_REVIEW = T.let("PULL_REQUEST_REVIEW", String)
  PULL_REQUEST_REVIEW_COMMENT = T.let("PULL_REQUEST_REVIEW_COMMENT", String)
  PULL_REQUEST_REVIEW_COMMENT_REACTION = T.let("PULL_REQUEST_REVIEW_COMMENT_REACTION", String)
  PULL_REQUEST_REVIEW_REACTION = T.let("PULL_REQUEST_REVIEW_REACTION", String)
  REACTION = T.let("REACTION", String)
  REPOSITORY = T.let("REPOSITORY", String)
  STAR = T.let("STAR", String)
  USER_EMAIL = T.let("USER_EMAIL", String)
  WORKFLOW_RUN = T.let("WORKFLOW_RUN", String)
end
