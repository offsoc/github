syntax = "proto3";
package git_hub.launch.services.checks;

option go_package = "github.com/github/launch/services/deploy/checks";

import "pbtypes/github.proto";
import "pbtypes/checks.proto";
import "google/protobuf/timestamp.proto";

service Checks {
  // Lists the step data after a given changeID
  rpc StepsFromChangeID(StepsFromChangeIDRequest) returns (StepsFromChangeIDResponse);
  // Gets back a signed URL to retrieve Summary attachments
  rpc GetSummaryExchangeURL(SummaryExchangeURLRequest) returns (SummaryExchangeURLResponse);
  // Lists the step data after a given changeID for all jobs in a run
  rpc StepsFromChangeIDForRun(StepsFromChangeIDForRunRequest) returns (StepsFromChangeIDForRunResponse);
}

message StepsFromChangeIDRequest {
  // The changeId we are retrieving steps for
  int64 change_id = 1;
  // The repo id we are retrieving steps for
  pbtypes.git_hub.Identity repository_id = 2;
  // The externalId/TimelineRecord.Id for a workflow job
  string job_id = 3;
  // Identifies a run
  string plan_id = 4;
}

message StepsFromChangeIDResponse {
  // The steps after the specified changeID
  repeated pbtypes.checks.CheckStep steps = 1;
}

message SummaryExchangeURLRequest {
  string unauthenticated_job_summaries_url = 1;
  pbtypes.git_hub.Identity repository_id = 2;
}

message SummaryExchangeURLResponse {
  string authenticated_url = 1;
  google.protobuf.Timestamp expires_at = 2;
}

message StepsFromChangeIDForRunRequest {
  // The changeId we are retrieving steps for
  int64 change_id = 1;
  // The repo id we are retrieving steps for
  pbtypes.git_hub.Identity repository_id = 2;
  // Identifies a run
  string plan_id = 3;
}

message JobSteps {
  // The externalId/TimelineRecord.Id for a workflow job
  string job_id = 1;
  // The steps after the specified changeID for the job
  repeated pbtypes.checks.CheckStep steps = 2;
}

message StepsFromChangeIDForRunResponse {
  // The steps after the specified changeID for the job
  repeated JobSteps job_steps = 1;
}
