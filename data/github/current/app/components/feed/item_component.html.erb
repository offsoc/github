<%= render Primer::BaseComponent.new(
  tag: :article,
  display: :flex,
  direction: :column,
  w: :full,
  id: "feed-item-#{item.event_id}",
  align_items: :baseline,
  pt: skip_header? || item.trending_repository_event? ? 0 : 3,
  pb: render_as_rollup? || item.trending_repository_event? ? 1 : skip_header? ? 0 : 3,
  test_selector: "feed-item-component",
  classes: "js-feed-item-component js-feed-item-view",
  style: item.multiple_announcements? ? "min-height: 300px;" : "",
  data: feed_view_hydro_attrs) do %>
  <% unless skip_header? %>
    <% if heading %>
      <%= heading %>
    <% else %>
      <%= render Primer::BaseComponent.new(
        tag: :header,
        w: :full,
        display: :flex,
        justify_content: :space_between,
        test_selector: "feed-item-heading") do %>
        <%= render(Primer::Beta::Heading.new(
          tag: :h5,
          font_weight: :normal,
          color: :muted,
          display: :inline_flex,
          align_items: :center,
          direction: :row,
          flex_wrap: :nowrap,
          w: :fit,
          classes: "overflow-auto" )) do %>
          <div class="position-relative mr-2">
            <% if announcement? %>
              <span
                class="circle d-inline-flex p-2"
                style="background-color: var(--bgColor-neutral-muted, var(--color-scale-gray-2));"
              >
                <%= render Primer::Beta::Octicon.new(icon: "megaphone", size: :small, color: :on_emphasis) %>
              </span>
            <% else %>
              <%= linked_avatar(actor) %>
            <% end %>
            <% unless heading_icon.nil? %>
              <%= render(Primer::Beta::Octicon.new(heading_icon[:name],
                classes: "circle feed-item-heading-icon",
                color: heading_icon[:color],
                position: :absolute,
                bottom: 0,
                test_selector: "feed-item-heading-icon"
              )) %>
            <% end %>
          </div>
          <% if announcement? %>
            Announcements from GitHub
          <% else %>
            <span class="<%= 'ml-1' if heading_icon.present? %> flex-shrink-0">
              <%= actor ? linked_login(actor) : _("Someone") %>
              <%= heading_action ? heading_action : action %>
            </span>
          <% end %>
          <% if heading_subject %>
            &nbsp;
            <span class="overflow-auto" <%= test_selector("feed-item-heading-subject") %>>
              <%= render(Primer::Beta::Truncate.new) do |trunc| %>
                <% trunc.with_item do %>
                  <%= heading_subject %>
                <% end %>
              <% end %>
            </span>
          <% end %>

          <% if show_label? %>
            <%= render Primer::Beta::Label.new(scheme: :default, inline: true, ml: 2, test_selector: "topic-feed-item-label") do %>
              <%= item.label %>
            <% end %>
          <% end %>

          <% unless timestamp.blank? || announcement? %>
            &nbsp;&middot;&nbsp;
            <%= render(Primer::Beta::RelativeTime.new(datetime: timestamp, tense: :past, test_selector: "feed-item-timestamp")) %>
          <% end %>

          <span class="js-hidden-label-target">
            <% if item.user_hidden? %>
              <%= render Primer::Beta::Label.new(scheme: :accent, inline: true, ml: 3, px: 1) do %>
                <%= render(Primer::Beta::Octicon.new(:"eye-closed")) %> hidden
              <% end %>
            <% end %>
          </span>
        <% end %>
        <% if heading_menu %>
          <%= heading_menu %>
        <% else %>
          <%=
            render Feed::HeadingMenuComponent.new(
              item: item,
              actor: actor)
          %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
  <% if content.present? %>
    <%= content %>
  <% else %>
    <%= render Primer::Box.new(
      bg: user_feature_enabled?(:feeds_v2) ? :overlay : :default,
      display: :flex,
      direction: :column,
      mt: 2,
      border: true,
      border_color: item.newly_sponsorable_event? ? :sponsors : :muted,
      border_radius: 1,
      box_shadow: :medium,
      w: :full,
      h: announcement? ? :full : :fit,
    ) do %>
      <div class="p-3">
        <%= border %>
        <% if repository || action_button %>
          <section
            class="d-flex flex-justify-between"
            aria-label="repo link"
            <%= test_selector("feed-item-repo") %>
          ><%# erblint:disable GitHub::Accessibility::AriaLabelIsWellFormatted %>
            <% if repository %>
              <h5 class="d-flex flex-items-center m-0 Truncate">
                <%= linked_avatar(repository.owner, size: 20) %>
                <%= linked_login(repository.owner, ml: 2) %>
                <span class="text-normal color-fg-muted">&nbsp;/&nbsp;</span>
                <%= render(Primer::Beta::Truncate.new) do |trunc| %>
                  <% trunc.with_item(mr: 2) do %>
                    <%= linked_repo(repository) %>
                  <% end %>
                <% end %>
              </h5>
            <% end %>
            <% if announcement? %>
              <%=
                render Feed::HeadingMenuComponent.new(
                  item: item,
                  actor: actor)
              %>
            <% end %>
            <%= action_button %>
          </section>
        <% end %>
        <%= body %>
        <%= footer %>
      </div>
      <%= comments %>
    <% end %>
    <% if render_as_rollup? %>
      <%= render Primer::BaseComponent.new(
        tag: :div,
        w: :full,
      ) do %>
        <%= render Primer::Box.new(
          bg: user_feature_enabled?(:feeds_v2) ? :overlay : :default,
          classes: "Details-content--shown rounded-bottom-1 js-details-target",
          mx: 2,
          border: true,
          border_color: :muted,
          border_top: 0,
          box_shadow: :medium,
          p: 1,
          test_selector: "feed-rollup-hidden-card-bottom",
          data: helpers.feed_clicks_hydro_attrs(click_target: "rollup_hidden_card_bottom", feed_item: item)
        ) %>
        <%= related_items %>
      <% end %>
    <% end %>
  <% end %>
<% end %>

<%= render Conduit::DismissedItemComponent.new(feed_item: item) %>
