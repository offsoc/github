# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Billing::V0::PaymentTransaction`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Billing::V0::PaymentTransaction`.

class Hydro::Schemas::Github::Billing::V0::PaymentTransaction
  sig do
    params(
      account: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      attempt_number: T.nilable(Integer),
      enterprise: T.nilable(Hydro::Schemas::Github::V1::Entities::Business),
      payment_amount_in_cents: T.nilable(Integer),
      payment_method: T.nilable(Hydro::Schemas::Github::Billing::V0::Entities::PaymentMethod),
      processor_response: T.nilable(Google::Protobuf::StringValue),
      processor_response_code: T.nilable(Google::Protobuf::StringValue),
      success: T.nilable(T::Boolean)
    ).void
  end
  def initialize(account: nil, attempt_number: nil, enterprise: nil, payment_amount_in_cents: nil, payment_method: nil, processor_response: nil, processor_response_code: nil, success: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def account; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def account=(value); end

  sig { returns(Integer) }
  def attempt_number; end

  sig { params(value: Integer).void }
  def attempt_number=(value); end

  sig { void }
  def clear_account; end

  sig { void }
  def clear_attempt_number; end

  sig { void }
  def clear_enterprise; end

  sig { void }
  def clear_payment_amount_in_cents; end

  sig { void }
  def clear_payment_method; end

  sig { void }
  def clear_processor_response; end

  sig { void }
  def clear_processor_response_code; end

  sig { void }
  def clear_success; end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Business)) }
  def enterprise; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Business)).void }
  def enterprise=(value); end

  sig { returns(Integer) }
  def payment_amount_in_cents; end

  sig { params(value: Integer).void }
  def payment_amount_in_cents=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::Billing::V0::Entities::PaymentMethod)) }
  def payment_method; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Billing::V0::Entities::PaymentMethod)).void }
  def payment_method=(value); end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def processor_response; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def processor_response=(value); end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def processor_response_code; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def processor_response_code=(value); end

  sig { returns(T::Boolean) }
  def success; end

  sig { params(value: T::Boolean).void }
  def success=(value); end
end
