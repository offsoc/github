{"version":3,"file":"app_assets_modules_github_editor_yaml-editors_dependabot_dependabot-rules_ts-xxxxxxxxxxxx.js","mappings":"2MAUA,IAAMA,EAAY,CAChB,iBACA,eACA,qBACA,iBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,kBACA,qBACA,mBACA,eACA,oBACA,eACA,iBACA,eACA,uBACA,kBACA,gBACA,kBACA,kBACA,kBACA,gBACA,sBACA,cACA,iBACA,kBACA,gBACA,kBACA,eACA,oBACA,cACA,gBACA,oBACA,gBACA,gBACA,gBACA,gBACA,iBACA,mBACA,kBACA,iBACA,kBACA,gBACA,oBACA,qBACA,oBACA,kBACA,kBACA,iBACA,eACA,kBACA,eACA,oBACA,mBACA,kBACA,oBACA,iCACA,8BACA,mCACA,4BACA,0BACA,6BACA,4BACA,iCACA,0BACA,6BACA,6BACA,4BACA,4BACA,gBACA,mBACA,mBACA,eACA,gBACA,yBACA,mBACA,gBACA,iBACA,uBACA,oBACA,iBACA,gBACA,uBACA,wBACA,uBACA,iBACA,kBACA,oBACA,kBACA,iBACA,kBACA,oBACA,wBACA,wBACA,kBACA,qBACA,kBACA,iBACA,kBACA,uBACA,iBACA,uBACA,iBACA,kBACA,mBACA,mBACA,mBACA,sBACA,mBACA,sBACA,qBACA,oBACA,oBACA,kBACA,oBACA,qBACA,kBACA,qBACA,oBACA,oBACA,iBACA,kBACA,iBACA,qBACA,+BACA,uBACA,0BACA,6BACA,4BACA,wBACA,4BACA,0BACA,uBACA,iBACA,kBACA,kBACA,gBACA,iBACA,8BACA,8BACA,kBACA,qBACA,iBACA,eACA,sBACA,qBACA,wBACA,iBACA,kBACA,iBACA,kBACA,qBACA,oBACA,mBACA,kBACA,oBACA,iBACA,qBACA,sBACA,mBACA,kBACA,oBACA,qBACA,mBACA,qBACA,iBACA,mBACA,kBACA,eACA,kBACA,8BACA,8BACA,iCACA,eACA,kBACA,iBACA,sBACA,qBACA,kBACA,yBACA,wBACA,qBACA,sBACA,sBACA,uBACA,sBACA,uBACA,iBACA,iBACA,mBACA,qBACA,kBACA,uBACA,mBACA,mBACA,wBACA,oBACA,uBACA,mBACA,gBACA,wBACA,mBACA,mBACA,mBACA,oBACA,qBACA,wBACA,sBACA,gBACA,sBACA,kBACA,kBACA,kBACA,oBACA,iBACA,qBACA,mBACA,kBACA,sBACA,mBACA,mBACA,4BACA,uBACA,oBACA,qBACA,oBACA,qBACA,wBACA,mBACA,mBACA,oBACA,sBACA,YACA,cACA,aACA,cACA,aACA,cACA,gBACA,iBACA,cACA,eACA,eACA,YACA,eACA,eACA,cACA,eACA,cACA,gBACA,aACA,kBACA,iBACA,iBACA,eACA,aACA,gBACA,aACA,YACA,aACA,gBACA,iBACA,YACA,cACA,cACA,mBACA,iBACA,YACA,eACA,gBACA,eACA,gBACA,iBACA,aACA,iBACA,eACA,eACA,iBACA,gBACA,gBACA,eACA,mBACA,oBACA,eACA,cACA,aACA,aACA,eACA,gBACA,cACA,cACA,eACA,oBACA,mBACA,YACA,YACA,kBACA,iBACA,iBACA,aACA,gBACA,iBACA,eACA,cACA,cACA,gBACA,iBACA,aACA,gBACA,iBACA,qBACA,cACA,gBACA,eACA,cACA,gBACA,cACA,eACA,aACA,aACA,qBACA,mBACA,kBACA,cACA,gBACA,iBACA,mBACA,eACA,cACA,qBACA,eACA,kBACA,mBACA,kBACA,sBACA,kBACA,iBACA,qBACA,mBACA,qBACA,yBACA,qBACA,mBACA,gBACA,qBACA,qBACA,wBACA,qBACA,mBACA,mBACA,kBACA,mBACA,gBACA,qBACA,sBACA,sBACA,gBACA,kBACA,kBACA,uBACA,kBACA,mBACA,qBACA,qBACA,iBACA,uBACA,cACA,mBACA,cACA,cACA,MACA,UACA,kBACA,iBACA,iBACA,kBACA,sBACA,iBACA,sBACA,eACA,oBACA,qBACA,OACA,MACA,MACA,UACA,QACA,OACA,UACA,YACA,YACA,aACA,aACA,aACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,aACA,aACA,aACA,aACA,aACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,gBACA,UACA,UACA,gBACA,WACA,mBACA,iBACA,mBACA,gBACA,iBACA,kBACA,gBACA,oBACA,kBACA,mBACA,kBACA,kBACA,kBACA,oBACA,gBACA,mBACA,kBACA,kBACA,qBACA,kBACA,gBACA,qBACA,cACA,eACA,cACA,gBACA,mBACA,gBACA,oBACA,gBACA,eACA,mBACA,eACA,gBACA,gBACA,iBACA,cACA,eACA,mBACA,gBACA,cACA,cACA,gBACA,oBACA,kBACA,iBACA,oBACA,gBACA,eACA,mBACA,iBACA,gBACA,kBACA,mBACA,kBACA,eACA,iBACA,gBACA,iBACA,mBACA,gBACA,gBACA,oBACA,gBACA,UACA,KACA,UACA,MACA,QACA,QACA,OACA,YACA,MACA,WACA,UACA,sBACA,gBACA,mBACA,eACA,gBACA,mBACA,cACA,kBACA,mBACA,iBACA,iBACA,OACA,SACA,UACA,QACA,YACA,QACA,MACA,MACA,UACA,mBACA,iBACA,iBACA,KACA,UACA,SACA,MACA,UACA,eACA,mBACA,uBACA,kBACA,gBACA,iBACA,gBACA,oBACA,kBACA,eACA,mBACA,oBACA,kBACA,sBACA,eACA,mBACA,mBACA,iBACA,qBACA,iBACA,oBACA,iBACA,oBACA,iBACA,gBACA,eACA,kBACA,iBACA,oBACA,gBACA,mBACA,kBACA,iBACA,uBACA,oBACA,iBACA,gBACA,iBACA,iBACA,oBACA,eACA,eACA,iBACA,cACA,SACA,WACA,MACA,MACA,YACA,aACA,MACA,YACA,cACA,aACA,aACA,kBACA,aACA,YACA,oBACA,cACA,cACA,aACA,WACA,MACA,YACA,OACA,MACA,OACD,CAwSM,SAASC,IAEd,MAvSO,CACLC,MAAO,CACLC,QAAS,CACPC,YAAa,qCACbC,SAAU,GACVC,OAAQ,CAAC,IAAI,EAEf,yBAA0B,CACxBF,YAAa,yBACbG,OAAQ,CAAC,UAAU,EAErBC,WAAY,CACVJ,YAAa,gDACbK,IAAK,CACH,MA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","sources":["app/assets/modules/github/editor/yaml-editors/dependabot/dependabot-rules.ts"],"sourcesContent":["import type {RootRule} from '../yaml-rule-util'\nimport {html} from 'lit-html'\nimport type {Validation} from '../../codemirror-linter-util'\n\n/* See https://github.com/github/dependabot-api/blob/main/config/config_file_json_schema.json\n * for the schema and these timezones.\n *\n * The schema is publicly documented at\n * https://docs.github.com/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file\n */\nconst timezones = [\n  'Africa/Abidjan',\n  'Africa/Accra',\n  'Africa/Addis_Ababa',\n  'Africa/Algiers',\n  'Africa/Asmara',\n  'Africa/Asmera',\n  'Africa/Bamako',\n  'Africa/Bangui',\n  'Africa/Banjul',\n  'Africa/Bissau',\n  'Africa/Blantyre',\n  'Africa/Brazzaville',\n  'Africa/Bujumbura',\n  'Africa/Cairo',\n  'Africa/Casablanca',\n  'Africa/Ceuta',\n  'Africa/Conakry',\n  'Africa/Dakar',\n  'Africa/Dar_es_Salaam',\n  'Africa/Djibouti',\n  'Africa/Douala',\n  'Africa/El_Aaiun',\n  'Africa/Freetown',\n  'Africa/Gaborone',\n  'Africa/Harare',\n  'Africa/Johannesburg',\n  'Africa/Juba',\n  'Africa/Kampala',\n  'Africa/Khartoum',\n  'Africa/Kigali',\n  'Africa/Kinshasa',\n  'Africa/Lagos',\n  'Africa/Libreville',\n  'Africa/Lome',\n  'Africa/Luanda',\n  'Africa/Lubumbashi',\n  'Africa/Lusaka',\n  'Africa/Malabo',\n  'Africa/Maputo',\n  'Africa/Maseru',\n  'Africa/Mbabane',\n  'Africa/Mogadishu',\n  'Africa/Monrovia',\n  'Africa/Nairobi',\n  'Africa/Ndjamena',\n  'Africa/Niamey',\n  'Africa/Nouakchott',\n  'Africa/Ouagadougou',\n  'Africa/Porto-Novo',\n  'Africa/Sao_Tome',\n  'Africa/Timbuktu',\n  'Africa/Tripoli',\n  'Africa/Tunis',\n  'Africa/Windhoek',\n  'America/Adak',\n  'America/Anchorage',\n  'America/Anguilla',\n  'America/Antigua',\n  'America/Araguaina',\n  'America/Argentina/Buenos_Aires',\n  'America/Argentina/Catamarca',\n  'America/Argentina/ComodRivadavia',\n  'America/Argentina/Cordoba',\n  'America/Argentina/Jujuy',\n  'America/Argentina/La_Rioja',\n  'America/Argentina/Mendoza',\n  'America/Argentina/Rio_Gallegos',\n  'America/Argentina/Salta',\n  'America/Argentina/San_Juan',\n  'America/Argentina/San_Luis',\n  'America/Argentina/Tucuman',\n  'America/Argentina/Ushuaia',\n  'America/Aruba',\n  'America/Asuncion',\n  'America/Atikokan',\n  'America/Atka',\n  'America/Bahia',\n  'America/Bahia_Banderas',\n  'America/Barbados',\n  'America/Belem',\n  'America/Belize',\n  'America/Blanc-Sablon',\n  'America/Boa_Vista',\n  'America/Bogota',\n  'America/Boise',\n  'America/Buenos_Aires',\n  'America/Cambridge_Bay',\n  'America/Campo_Grande',\n  'America/Cancun',\n  'America/Caracas',\n  'America/Catamarca',\n  'America/Cayenne',\n  'America/Cayman',\n  'America/Chicago',\n  'America/Chihuahua',\n  'America/Ciudad_Juarez',\n  'America/Coral_Harbour',\n  'America/Cordoba',\n  'America/Costa_Rica',\n  'America/Creston',\n  'America/Cuiaba',\n  'America/Curacao',\n  'America/Danmarkshavn',\n  'America/Dawson',\n  'America/Dawson_Creek',\n  'America/Denver',\n  'America/Detroit',\n  'America/Dominica',\n  'America/Edmonton',\n  'America/Eirunepe',\n  'America/El_Salvador',\n  'America/Ensenada',\n  'America/Fort_Nelson',\n  'America/Fort_Wayne',\n  'America/Fortaleza',\n  'America/Glace_Bay',\n  'America/Godthab',\n  'America/Goose_Bay',\n  'America/Grand_Turk',\n  'America/Grenada',\n  'America/Guadeloupe',\n  'America/Guatemala',\n  'America/Guayaquil',\n  'America/Guyana',\n  'America/Halifax',\n  'America/Havana',\n  'America/Hermosillo',\n  'America/Indiana/Indianapolis',\n  'America/Indiana/Knox',\n  'America/Indiana/Marengo',\n  'America/Indiana/Petersburg',\n  'America/Indiana/Tell_City',\n  'America/Indiana/Vevay',\n  'America/Indiana/Vincennes',\n  'America/Indiana/Winamac',\n  'America/Indianapolis',\n  'America/Inuvik',\n  'America/Iqaluit',\n  'America/Jamaica',\n  'America/Jujuy',\n  'America/Juneau',\n  'America/Kentucky/Louisville',\n  'America/Kentucky/Monticello',\n  'America/Knox_IN',\n  'America/Kralendijk',\n  'America/La_Paz',\n  'America/Lima',\n  'America/Los_Angeles',\n  'America/Louisville',\n  'America/Lower_Princes',\n  'America/Maceio',\n  'America/Managua',\n  'America/Manaus',\n  'America/Marigot',\n  'America/Martinique',\n  'America/Matamoros',\n  'America/Mazatlan',\n  'America/Mendoza',\n  'America/Menominee',\n  'America/Merida',\n  'America/Metlakatla',\n  'America/Mexico_City',\n  'America/Miquelon',\n  'America/Moncton',\n  'America/Monterrey',\n  'America/Montevideo',\n  'America/Montreal',\n  'America/Montserrat',\n  'America/Nassau',\n  'America/New_York',\n  'America/Nipigon',\n  'America/Nome',\n  'America/Noronha',\n  'America/North_Dakota/Beulah',\n  'America/North_Dakota/Center',\n  'America/North_Dakota/New_Salem',\n  'America/Nuuk',\n  'America/Ojinaga',\n  'America/Panama',\n  'America/Pangnirtung',\n  'America/Paramaribo',\n  'America/Phoenix',\n  'America/Port-au-Prince',\n  'America/Port_of_Spain',\n  'America/Porto_Acre',\n  'America/Porto_Velho',\n  'America/Puerto_Rico',\n  'America/Punta_Arenas',\n  'America/Rainy_River',\n  'America/Rankin_Inlet',\n  'America/Recife',\n  'America/Regina',\n  'America/Resolute',\n  'America/Rio_Branco',\n  'America/Rosario',\n  'America/Santa_Isabel',\n  'America/Santarem',\n  'America/Santiago',\n  'America/Santo_Domingo',\n  'America/Sao_Paulo',\n  'America/Scoresbysund',\n  'America/Shiprock',\n  'America/Sitka',\n  'America/St_Barthelemy',\n  'America/St_Johns',\n  'America/St_Kitts',\n  'America/St_Lucia',\n  'America/St_Thomas',\n  'America/St_Vincent',\n  'America/Swift_Current',\n  'America/Tegucigalpa',\n  'America/Thule',\n  'America/Thunder_Bay',\n  'America/Tijuana',\n  'America/Toronto',\n  'America/Tortola',\n  'America/Vancouver',\n  'America/Virgin',\n  'America/Whitehorse',\n  'America/Winnipeg',\n  'America/Yakutat',\n  'America/Yellowknife',\n  'Antarctica/Casey',\n  'Antarctica/Davis',\n  'Antarctica/DumontDUrville',\n  'Antarctica/Macquarie',\n  'Antarctica/Mawson',\n  'Antarctica/McMurdo',\n  'Antarctica/Palmer',\n  'Antarctica/Rothera',\n  'Antarctica/South_Pole',\n  'Antarctica/Syowa',\n  'Antarctica/Troll',\n  'Antarctica/Vostok',\n  'Arctic/Longyearbyen',\n  'Asia/Aden',\n  'Asia/Almaty',\n  'Asia/Amman',\n  'Asia/Anadyr',\n  'Asia/Aqtau',\n  'Asia/Aqtobe',\n  'Asia/Ashgabat',\n  'Asia/Ashkhabad',\n  'Asia/Atyrau',\n  'Asia/Baghdad',\n  'Asia/Bahrain',\n  'Asia/Baku',\n  'Asia/Bangkok',\n  'Asia/Barnaul',\n  'Asia/Beirut',\n  'Asia/Bishkek',\n  'Asia/Brunei',\n  'Asia/Calcutta',\n  'Asia/Chita',\n  'Asia/Choibalsan',\n  'Asia/Chongqing',\n  'Asia/Chungking',\n  'Asia/Colombo',\n  'Asia/Dacca',\n  'Asia/Damascus',\n  'Asia/Dhaka',\n  'Asia/Dili',\n  'Asia/Dubai',\n  'Asia/Dushanbe',\n  'Asia/Famagusta',\n  'Asia/Gaza',\n  'Asia/Harbin',\n  'Asia/Hebron',\n  'Asia/Ho_Chi_Minh',\n  'Asia/Hong_Kong',\n  'Asia/Hovd',\n  'Asia/Irkutsk',\n  'Asia/Istanbul',\n  'Asia/Jakarta',\n  'Asia/Jayapura',\n  'Asia/Jerusalem',\n  'Asia/Kabul',\n  'Asia/Kamchatka',\n  'Asia/Karachi',\n  'Asia/Kashgar',\n  'Asia/Kathmandu',\n  'Asia/Katmandu',\n  'Asia/Khandyga',\n  'Asia/Kolkata',\n  'Asia/Krasnoyarsk',\n  'Asia/Kuala_Lumpur',\n  'Asia/Kuching',\n  'Asia/Kuwait',\n  'Asia/Macao',\n  'Asia/Macau',\n  'Asia/Magadan',\n  'Asia/Makassar',\n  'Asia/Manila',\n  'Asia/Muscat',\n  'Asia/Nicosia',\n  'Asia/Novokuznetsk',\n  'Asia/Novosibirsk',\n  'Asia/Omsk',\n  'Asia/Oral',\n  'Asia/Phnom_Penh',\n  'Asia/Pontianak',\n  'Asia/Pyongyang',\n  'Asia/Qatar',\n  'Asia/Qostanay',\n  'Asia/Qyzylorda',\n  'Asia/Rangoon',\n  'Asia/Riyadh',\n  'Asia/Saigon',\n  'Asia/Sakhalin',\n  'Asia/Samarkand',\n  'Asia/Seoul',\n  'Asia/Shanghai',\n  'Asia/Singapore',\n  'Asia/Srednekolymsk',\n  'Asia/Taipei',\n  'Asia/Tashkent',\n  'Asia/Tbilisi',\n  'Asia/Tehran',\n  'Asia/Tel_Aviv',\n  'Asia/Thimbu',\n  'Asia/Thimphu',\n  'Asia/Tokyo',\n  'Asia/Tomsk',\n  'Asia/Ujung_Pandang',\n  'Asia/Ulaanbaatar',\n  'Asia/Ulan_Bator',\n  'Asia/Urumqi',\n  'Asia/Ust-Nera',\n  'Asia/Vientiane',\n  'Asia/Vladivostok',\n  'Asia/Yakutsk',\n  'Asia/Yangon',\n  'Asia/Yekaterinburg',\n  'Asia/Yerevan',\n  'Atlantic/Azores',\n  'Atlantic/Bermuda',\n  'Atlantic/Canary',\n  'Atlantic/Cape_Verde',\n  'Atlantic/Faeroe',\n  'Atlantic/Faroe',\n  'Atlantic/Jan_Mayen',\n  'Atlantic/Madeira',\n  'Atlantic/Reykjavik',\n  'Atlantic/South_Georgia',\n  'Atlantic/St_Helena',\n  'Atlantic/Stanley',\n  'Australia/ACT',\n  'Australia/Adelaide',\n  'Australia/Brisbane',\n  'Australia/Broken_Hill',\n  'Australia/Canberra',\n  'Australia/Currie',\n  'Australia/Darwin',\n  'Australia/Eucla',\n  'Australia/Hobart',\n  'Australia/LHI',\n  'Australia/Lindeman',\n  'Australia/Lord_Howe',\n  'Australia/Melbourne',\n  'Australia/NSW',\n  'Australia/North',\n  'Australia/Perth',\n  'Australia/Queensland',\n  'Australia/South',\n  'Australia/Sydney',\n  'Australia/Tasmania',\n  'Australia/Victoria',\n  'Australia/West',\n  'Australia/Yancowinna',\n  'Brazil/Acre',\n  'Brazil/DeNoronha',\n  'Brazil/East',\n  'Brazil/West',\n  'CET',\n  'CST6CDT',\n  'Canada/Atlantic',\n  'Canada/Central',\n  'Canada/Eastern',\n  'Canada/Mountain',\n  'Canada/Newfoundland',\n  'Canada/Pacific',\n  'Canada/Saskatchewan',\n  'Canada/Yukon',\n  'Chile/Continental',\n  'Chile/EasterIsland',\n  'Cuba',\n  'EET',\n  'EST',\n  'EST5EDT',\n  'Egypt',\n  'Eire',\n  'Etc/GMT',\n  'Etc/GMT+0',\n  'Etc/GMT+1',\n  'Etc/GMT+10',\n  'Etc/GMT+11',\n  'Etc/GMT+12',\n  'Etc/GMT+2',\n  'Etc/GMT+3',\n  'Etc/GMT+4',\n  'Etc/GMT+5',\n  'Etc/GMT+6',\n  'Etc/GMT+7',\n  'Etc/GMT+8',\n  'Etc/GMT+9',\n  'Etc/GMT-0',\n  'Etc/GMT-1',\n  'Etc/GMT-10',\n  'Etc/GMT-11',\n  'Etc/GMT-12',\n  'Etc/GMT-13',\n  'Etc/GMT-14',\n  'Etc/GMT-2',\n  'Etc/GMT-3',\n  'Etc/GMT-4',\n  'Etc/GMT-5',\n  'Etc/GMT-6',\n  'Etc/GMT-7',\n  'Etc/GMT-8',\n  'Etc/GMT-9',\n  'Etc/GMT0',\n  'Etc/Greenwich',\n  'Etc/UCT',\n  'Etc/UTC',\n  'Etc/Universal',\n  'Etc/Zulu',\n  'Europe/Amsterdam',\n  'Europe/Andorra',\n  'Europe/Astrakhan',\n  'Europe/Athens',\n  'Europe/Belfast',\n  'Europe/Belgrade',\n  'Europe/Berlin',\n  'Europe/Bratislava',\n  'Europe/Brussels',\n  'Europe/Bucharest',\n  'Europe/Budapest',\n  'Europe/Busingen',\n  'Europe/Chisinau',\n  'Europe/Copenhagen',\n  'Europe/Dublin',\n  'Europe/Gibraltar',\n  'Europe/Guernsey',\n  'Europe/Helsinki',\n  'Europe/Isle_of_Man',\n  'Europe/Istanbul',\n  'Europe/Jersey',\n  'Europe/Kaliningrad',\n  'Europe/Kiev',\n  'Europe/Kirov',\n  'Europe/Kyiv',\n  'Europe/Lisbon',\n  'Europe/Ljubljana',\n  'Europe/London',\n  'Europe/Luxembourg',\n  'Europe/Madrid',\n  'Europe/Malta',\n  'Europe/Mariehamn',\n  'Europe/Minsk',\n  'Europe/Monaco',\n  'Europe/Moscow',\n  'Europe/Nicosia',\n  'Europe/Oslo',\n  'Europe/Paris',\n  'Europe/Podgorica',\n  'Europe/Prague',\n  'Europe/Riga',\n  'Europe/Rome',\n  'Europe/Samara',\n  'Europe/San_Marino',\n  'Europe/Sarajevo',\n  'Europe/Saratov',\n  'Europe/Simferopol',\n  'Europe/Skopje',\n  'Europe/Sofia',\n  'Europe/Stockholm',\n  'Europe/Tallinn',\n  'Europe/Tirane',\n  'Europe/Tiraspol',\n  'Europe/Ulyanovsk',\n  'Europe/Uzhgorod',\n  'Europe/Vaduz',\n  'Europe/Vatican',\n  'Europe/Vienna',\n  'Europe/Vilnius',\n  'Europe/Volgograd',\n  'Europe/Warsaw',\n  'Europe/Zagreb',\n  'Europe/Zaporozhye',\n  'Europe/Zurich',\n  'Factory',\n  'GB',\n  'GB-Eire',\n  'GMT',\n  'GMT+0',\n  'GMT-0',\n  'GMT0',\n  'Greenwich',\n  'HST',\n  'Hongkong',\n  'Iceland',\n  'Indian/Antananarivo',\n  'Indian/Chagos',\n  'Indian/Christmas',\n  'Indian/Cocos',\n  'Indian/Comoro',\n  'Indian/Kerguelen',\n  'Indian/Mahe',\n  'Indian/Maldives',\n  'Indian/Mauritius',\n  'Indian/Mayotte',\n  'Indian/Reunion',\n  'Iran',\n  'Israel',\n  'Jamaica',\n  'Japan',\n  'Kwajalein',\n  'Libya',\n  'MET',\n  'MST',\n  'MST7MDT',\n  'Mexico/BajaNorte',\n  'Mexico/BajaSur',\n  'Mexico/General',\n  'NZ',\n  'NZ-CHAT',\n  'Navajo',\n  'PRC',\n  'PST8PDT',\n  'Pacific/Apia',\n  'Pacific/Auckland',\n  'Pacific/Bougainville',\n  'Pacific/Chatham',\n  'Pacific/Chuuk',\n  'Pacific/Easter',\n  'Pacific/Efate',\n  'Pacific/Enderbury',\n  'Pacific/Fakaofo',\n  'Pacific/Fiji',\n  'Pacific/Funafuti',\n  'Pacific/Galapagos',\n  'Pacific/Gambier',\n  'Pacific/Guadalcanal',\n  'Pacific/Guam',\n  'Pacific/Honolulu',\n  'Pacific/Johnston',\n  'Pacific/Kanton',\n  'Pacific/Kiritimati',\n  'Pacific/Kosrae',\n  'Pacific/Kwajalein',\n  'Pacific/Majuro',\n  'Pacific/Marquesas',\n  'Pacific/Midway',\n  'Pacific/Nauru',\n  'Pacific/Niue',\n  'Pacific/Norfolk',\n  'Pacific/Noumea',\n  'Pacific/Pago_Pago',\n  'Pacific/Palau',\n  'Pacific/Pitcairn',\n  'Pacific/Pohnpei',\n  'Pacific/Ponape',\n  'Pacific/Port_Moresby',\n  'Pacific/Rarotonga',\n  'Pacific/Saipan',\n  'Pacific/Samoa',\n  'Pacific/Tahiti',\n  'Pacific/Tarawa',\n  'Pacific/Tongatapu',\n  'Pacific/Truk',\n  'Pacific/Wake',\n  'Pacific/Wallis',\n  'Pacific/Yap',\n  'Poland',\n  'Portugal',\n  'ROC',\n  'ROK',\n  'Singapore',\n  'Türkiye',\n  'UCT',\n  'US/Alaska',\n  'US/Aleutian',\n  'US/Arizona',\n  'US/Central',\n  'US/East-Indiana',\n  'US/Eastern',\n  'US/Hawaii',\n  'US/Indiana-Starke',\n  'US/Michigan',\n  'US/Mountain',\n  'US/Pacific',\n  'US/Samoa',\n  'UTC',\n  'Universal',\n  'W-SU',\n  'WET',\n  'Zulu',\n]\n\nfunction fullRootRule(): RootRule {\n  return {\n    rules: {\n      version: {\n        description: 'The version of the dependabot file',\n        required: true,\n        values: ['2'],\n      },\n      'enable-beta-ecosystems': {\n        description: 'Enable beta ecosystems',\n        single: ['boolean'],\n      },\n      registries: {\n        description: 'Private registries that Dependabot can access',\n        map: {\n          async validateKey(template: unknown, path: string[]): Promise<Validation | undefined> {\n            if (typeof path[1] != 'string') {\n              return {\n                message: html`Registry id must be a string`,\n                severity: 'error',\n              }\n            }\n          },\n          rules: {\n            type: {\n              description: 'The type of registry',\n              values: [\n                'composer-repository',\n                'docker-registry',\n                'git',\n                'hex-repository',\n                'hex-organization',\n                'maven-repository',\n                'npm-registry',\n                'nuget-feed',\n                'python-index',\n                'rubygems-server',\n                'terraform-registry',\n              ],\n            },\n            url: {\n              description: 'The URL of the registry',\n              single: ['string'],\n            },\n            username: {\n              description: 'The username to use to access the registry',\n              single: ['string'],\n            },\n            password: {\n              description: 'The password to use to access the registry',\n              single: ['string'],\n            },\n            key: {\n              description: 'The key to use to access the registry',\n              single: ['string'],\n            },\n            token: {\n              description: 'The token to use to access the registry',\n              single: ['string'],\n            },\n            repo: {\n              description: 'The name to use to identify the repository',\n              single: ['string'],\n            },\n            'auth-key': {\n              description: 'The auth key to use to access the registry',\n              single: ['string'],\n            },\n            'public-key-fingerprint': {\n              description: 'The public key fingerprint to use to verify the repository',\n              single: ['string'],\n            },\n            'replaces-base': {\n              description:\n                'Resolves dependencies by using the specified URL rather than the base URL of the Python Package Index',\n              single: ['boolean'],\n            },\n          },\n        },\n      },\n      updates: {\n        required: true,\n        items: {\n          rules: {\n            allow: {\n              description: 'Customize which updates are allowed',\n              items: {\n                values: ['dependency-name', 'dependency-type'],\n                rules: {\n                  'dependency-name': {\n                    description: 'The name of the dependency',\n                    single: ['string'],\n                  },\n                  'dependency-type': {\n                    description: 'The type of dependency',\n                    values: ['direct', 'indirect', 'all', 'production', 'development'],\n                  },\n                },\n              },\n            },\n            assignees: {\n              description: 'Assignees to assign to pull requests',\n              multipleValues: true,\n            },\n            'commit-message': {\n              description: 'Commit message preferences',\n              rules: {\n                prefix: {\n                  description: 'Prefix to use for commit messages',\n                  single: ['string'],\n                  validateValue: async (\n                    template: unknown,\n                    path: string[],\n                    value: unknown,\n                  ): Promise<Validation | undefined> => {\n                    if (typeof value != 'string') return\n                    if (value.length > 50) {\n                      return {\n                        message: html`Commit message prefix must be 50 characters or less`,\n                        severity: 'error',\n                      }\n                    }\n                  },\n                },\n                'prefix-development': {\n                  description: 'Prefix to use for commit messages for development dependencies',\n                  single: ['string'],\n                  validateValue: async (\n                    template: unknown,\n                    path: string[],\n                    value: unknown,\n                  ): Promise<Validation | undefined> => {\n                    if (typeof value != 'string') return\n                    if (value.length > 50) {\n                      return {\n                        message: html`Commit message prefix must be 50 characters or less`,\n                        severity: 'error',\n                      }\n                    }\n                  },\n                },\n                include: {\n                  description:\n                    'Specifies that any prefix is followed by a list of the dependencies updated in the commit',\n                  values: ['scope'],\n                },\n              },\n            },\n            directory: {\n              description: 'Location of the package manifests',\n              required: true,\n              single: ['string'],\n            },\n            'enable-beta-ecosystems': {\n              description: 'Enable support for beta ecosystems',\n              single: ['boolean'],\n            },\n            ignore: {\n              description: 'Specify which dependencies are ignored',\n              items: {\n                values: ['dependency-name', 'update-types', 'versions'],\n                rules: {\n                  'dependency-name': {\n                    description: 'Ignore updates for dependencies with matching names',\n                    single: ['string'],\n                  },\n                  versions: {\n                    description: 'Ignore updates for dependencies with matching versions',\n                    items: {\n                      single: ['string'],\n                    },\n                  },\n                  'update-types': {\n                    description: 'Ignore types of updates',\n                    items: {\n                      values: [\n                        'version-update:semver-major',\n                        'version-update:semver-minor',\n                        'version-update:semver-patch',\n                      ],\n                    },\n                  },\n                },\n              },\n            },\n            'insecure-external-code-execution': {\n              description: 'Allow insecure external code execution',\n              values: ['allow', 'deny'],\n            },\n            labels: {\n              description: 'Labels to add to pull requests',\n              multipleValues: true,\n            },\n            milestone: {\n              description: 'Milestone to add to pull requests',\n              single: ['number'],\n            },\n            'open-pull-requests-limit': {\n              description: 'Limit the number of open pull requests',\n              single: ['number'],\n            },\n            'package-ecosystem': {\n              description: 'Package manager to use',\n              values: [\n                'bundler',\n                'cargo',\n                'composer',\n                'docker',\n                'elm',\n                'github-actions',\n                'gitsubmodule',\n                'gomod',\n                'gradle',\n                'maven',\n                'mix',\n                'npm',\n                'nuget',\n                'pip',\n                'pub',\n                'terraform',\n              ],\n              required: true,\n            },\n            'pull-request-branch-name': {\n              rules: {\n                separator: {\n                  description: 'Separator to use between the package manager and the dependency',\n                  values: ['-', '/', '_'],\n                },\n              },\n            },\n            registries: {\n              description: 'Private registries that Dependabot can access, as specified above',\n              multipleValues: true,\n            },\n            'rebase-strategy': {\n              description: 'How to rebase pull requests',\n              values: ['disabled', 'auto'],\n            },\n            reviewers: {\n              description: 'Reviewers to assign to pull requests',\n              multipleValues: true,\n            },\n            schedule: {\n              values: ['interval', 'day', 'time', 'timezone'],\n              required: true,\n              rules: {\n                interval: {\n                  values: ['daily', 'weekly', 'monthly'],\n                  required: true,\n                },\n                day: {\n                  values: ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'],\n                  sortSuggestions: false,\n                },\n                time: {\n                  single: ['string'],\n                  validateValue: async (\n                    template: unknown,\n                    path: string[],\n                    value: unknown,\n                  ): Promise<Validation | undefined> => {\n                    if (typeof value != 'string') return\n                    if (!/^([01]?[0-9]|2[0-3]):[0-5][0-9]$/.test(value))\n                      return {\n                        message: html`Time must be in the format HH:MM`,\n                        severity: 'error',\n                      }\n                  },\n                },\n                timezone: {\n                  values: timezones,\n                },\n              },\n            },\n            'target-branch': {\n              description: 'The branch to create pull requests against',\n              single: ['string'],\n            },\n            vendor: {\n              description: 'Update vendored or cached dependencies',\n              single: ['boolean'],\n            },\n            'versioning-strategy': {\n              description: 'How to update dependencies',\n              values: ['lockfile-only', 'auto', 'widen', 'increase', 'increase-if-necessary'],\n            },\n          },\n        },\n      },\n    },\n  }\n}\n\nexport function getRootRule(): RootRule {\n  const rule = fullRootRule()\n  return rule\n}\n"],"names":["timezones","getRootRule","rules","version","description","required","values","single","registries","map","validateKey","template","path","message","html","severity","type","url","username","password","key","token","repo","updates","items","allow","assignees","multipleValues","prefix","validateValue","value","length","include","directory","ignore","versions","labels","milestone","separator","reviewers","schedule","interval","day","sortSuggestions","time","test","timezone","vendor"],"sourceRoot":""}