# typed: false

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `monolith-twirp-billing-repositories` gem.
# Please instead update this file by running `bin/tapioca gem monolith-twirp-billing-repositories`.

module Google::Protobuf::MessageExts::ClassMethods; end

# source://monolith-twirp-billing-repositories//lib/monolith-twirp-billing-repositories.rb#7
module Monolith; end

# source://monolith-twirp-billing-repositories//lib/monolith-twirp-billing-repositories.rb#8
module Monolith::Twirp; end

# source://monolith-twirp-billing-repositories//lib/monolith-twirp-billing-repositories.rb#9
module Monolith::Twirp::Billing; end

# source://monolith-twirp-billing-repositories//lib/monolith-twirp-billing-repositories.rb#10
module Monolith::Twirp::Billing::Repositories; end

# source://monolith-twirp-billing-repositories//lib/monolith-twirp-billing-repositories.rb#11
class Monolith::Twirp::Billing::Repositories::Error < ::StandardError; end

# source://monolith-twirp-billing-repositories//lib/monolith_twirp/billing/repositories/version.rb#3
module MonolithTwirp; end

# source://monolith-twirp-billing-repositories//lib/monolith_twirp/billing/repositories/version.rb#4
module MonolithTwirp::Billing; end

# source://monolith-twirp-billing-repositories//lib/monolith_twirp/billing/repositories/version.rb#5
module MonolithTwirp::Billing::Repositories; end

# source://monolith-twirp-billing-repositories//lib/monolith_twirp/billing/repositories/v1/repository_api_pb.rb#24
module MonolithTwirp::Billing::Repositories::V1; end

class MonolithTwirp::Billing::Repositories::V1::GetRepositoryMetadataRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Billing::Repositories::V1::GetRepositoryMetadataResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Billing::Repositories::V1::Repository
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

# source://monolith-twirp-billing-repositories//lib/monolith_twirp/billing/repositories/v1/repository_api_twirp.rb#15
class MonolithTwirp::Billing::Repositories::V1::RepositoryAPIClient < ::Twirp::Client
  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_repository_metadata(input, req_opts = T.unsafe(nil)); end
end

# source://monolith-twirp-billing-repositories//lib/monolith_twirp/billing/repositories/v1/repository_api_twirp.rb#9
class MonolithTwirp::Billing::Repositories::V1::RepositoryAPIService < ::Twirp::Service; end

# source://monolith-twirp-billing-repositories//lib/monolith_twirp/billing/repositories/version.rb#6
MonolithTwirp::Billing::Repositories::VERSION = T.let(T.unsafe(nil), String)
