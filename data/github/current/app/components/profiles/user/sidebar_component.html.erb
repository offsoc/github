<div class="js-profile-editable-replace">
  <div class="clearfix d-flex d-md-block flex-items-center mb-4 mb-md-0">
    <div
      class="position-relative d-inline-block col-2 col-md-12 mr-3 mr-md-0 flex-shrink-0"
      style="z-index:4;"
    >
      <% if user_is_viewer? %>
        <%= render(Primer::Beta::Link.new(
            href: account_url(host: GitHub.host_name_with_tenant),
            scheme: :default,
            underline: false,
            display: :block,
            "aria-label": "Change your avatar",
            data: profile_click_tracking_attrs(:EDIT_AVATAR),
            id: "upload-avatar-link",
            )) do |component| %>
              <% component.with_tooltip(text: "Change your avatar" ) %>
              <%= profile_avatar_using(
                primary_avatar_url,
                class: "avatar-user width-full border color-bg-default",
                size: 260,
                style: "height:auto;",
              ) %>
        <% end %>
      <% else %>
        <%= link_to(
          profile_avatar_using(
            primary_avatar_url,
            class: "avatar-user width-full border color-bg-default",
            size: 260,
            style: "height:auto;",
            alt: "View #{login_name}'s full-sized avatar",
          ),
          primary_avatar_url,
          class: "d-block",
          itemprop: "image",
        ) %>
      <% end %>
      <%= render "users/sidebar_user_status", this_user: profile_user %>
    </div>

    <div
      class="<%= class_names(
        "vcard-names-container float-left js-profile-editable-names",
        "col-10 col-md-12 pt-1 pt-md-3 pb-1 pb-md-3" => responsive?,
        "col-12 py-3" => !responsive?,
        "js-sticky js-user-profile-sticky-fields" => !gists_profile?,
      ) %>"
    >
      <h1 class="vcard-names <% if responsive? %>pl-2 pl-md-0<% end %>">
        <span class="p-name vcard-fullname d-block overflow-hidden" itemprop="name">
          <%= profile_name %>
        </span>
        <span class="p-nickname vcard-username d-block" itemprop="additionalName">
          <%= login_name %>

          <% if user_pronouns_enabled? && profile_user.profile_pronouns.present? %>
            &middot;
            <span itemprop="pronouns"><%= profile_user.profile_pronouns %></span>
          <% end %>
        </span>
        <% if GitHub.enterprise? && site_admin? %>
          <%= render(Primer::Beta::Label.new(scheme: :info)) { "Site admin" } %>
        <% end %>
      </h1>
    </div>
  </div>

  <%= render "users/compact_user_status", this_user: profile_user %>

  <div class="d-flex flex-column">
    <div class="flex-order-1 flex-md-order-none">
      <% unless gists_profile? %>
        <div class="d-flex flex-lg-row flex-md-column">
          <% if viewer_blocking_profile_user? %>
            <div class="border rounded-2 color-fg-danger px-3 py-2 text-center flex-1 mb-0 mb-md-3">
              <%= render Primer::Beta::Octicon.new(icon: "circle-slash") %>
              You have blocked this user
            </div>
          <% else %>
            <% if show_follow_button? %>
              <div class="flex-1 mb-0 mb-md-3">
                <div class="js-sticky js-user-profile-follow-button pb-1 mb-n1"></div>
                <%= follow_button(profile_user, classes: "btn btn-block") %>
              </div>
            <% end %>
            <% if show_sponsor_button? %>
              <div class="flex-1 ml-lg-2 ml-md-0 ml-2 mb-0 mb-md-3">
                <%= render Sponsors::SponsorButtonComponent.new(
                  sponsorable: login_name,
                  is_sponsoring: sponsored_by_viewer?,
                  id: "#{sponsored_by_viewer? ? "sponsoring" : "sponsor"}-profile-button",
                  size: :medium,
                  block: true,
                  location: sponsored_by_viewer? ? :PROFILE_SPONSORING : :PROFILE_SPONSOR,
                ) %>
              </div>
            <% end %>
          <% end %>
        </div>

        <% if viewer_blocking_profile_user? %>
          <% if ignored_user_record.note.present? %>
            <div class="text-small color-fg-danger text-bold mb-2">
              Note:
              <span class="note color-fg-danger">
                <%= GitHub::Goomba::MarkdownPipeline.to_html(ignored_user_record.note) %>
              </span>
            </div>
          <% end %>

          <div class="d-flex flex-lg-row flex-md-column">
            <%= render IgnoredUsers::NoteComponent.new(
              note: ignored_user_record.note,
              target_user_login: login_name,
              width_full: true,
              return_to: user_path(login_name),
            ) %>
          </div>
        <% end %>

        <% if user_is_viewer? %>
          <%= render "users/profile_inline_edit", this_user: profile_user %>
        <% end %>
      <% end %>
    </div>

    <%= render(
      "users/profile_details",
      user: profile_user,
      gists_profile: gists_profile?,
      star_count: stars_count,
      follower_count: followers_count,
      following_count: following_count,
      is_sponsorable: sponsorable?,
    ) %>
  </div>

  <% unless gists_profile? %>
    <% track_render_partial("sponsors/sponsorable_profile_sponsors") do %>
      <%= render Profiles::User::SponsorsComponent.new(profile_layout_data: profile_layout_data) %>
    <% end %>
    <%= render Profiles::User::AchievementsComponent.new(profile_layout_data: profile_layout_data) %>
    <%= render Profiles::User::HighlightsComponent.new(profile_layout_data: profile_layout_data) %>
    <%= render Profiles::User::OrganizationsComponent.new(profile_layout_data: profile_layout_data) %>
    <%= render Profiles::User::BlockButtonComponent.new(profile_layout_data: profile_layout_data) %>
  <% end %>
</div>
