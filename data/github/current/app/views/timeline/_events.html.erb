<%- rollup_issue_event_nodes(events).each do |rollup_events| %>
  <%=
    case rollup_events.first
    when PullRequest::Adapter::BaseRefChangedEventAdapter
      render PullRequests::TimelineEvents::BaseRefChangedEventComponent.new(issue_event: rollup_events.first.issue_event, pull_request: rollup_events.first.pull_request)
    when PullRequest::Adapter::BaseRefDeletedEventAdapter
      render PullRequests::TimelineEvents::BaseRefDeletedEventComponent.new(issue_event: rollup_events.first.issue_event, pull_request: rollup_events.first.pull_request)
    when PullRequest::Adapter::HeadRefDeletedOrRestoredEventAdapter
      render PullRequests::TimelineEvents::HeadRefDeletedOrRestoredEventComponent.new(issue_event: rollup_events.first.issue_event, pull_request: rollup_events.first.pull_request)
    when PullRequest::Adapter::MergedEventAdapter
      render PullRequests::TimelineEvents::MergedEventComponent.new(issue_event: rollup_events.first.issue_event, pull_request: rollup_events.first.pull_request)
    when PullRequest::Adapter::AutomaticBaseChangeEventAdapter
      render PullRequests::TimelineEvents::AutomaticBaseChangeComponent.new(issue_event: rollup_events.first.issue_event, action: rollup_events.first.action)
    when PullRequest::Adapter::ReviewDismissedEventAdapter
      render PullRequests::TimelineEvents::ReviewDismissedComponent.new(issue_events: rollup_events.map(&:issue_event), pull_request: rollup_events.first.pull_request)
    when PullRequest::Adapter::ReviewRequestedEventAdapter, PullRequest::Adapter::ReviewRequestRemovedEventAdapter
      render PullRequests::TimelineEvents::ReviewRequestedEventComponent.new(issue_events: rollup_events.map(&:issue_event), pull_request: rollup_events.first.pull_request)
    when PullRequest::Adapter::DeployedEventAdapter
      render PullRequests::TimelineEvents::DeployedEventComponent.new(issue_event: rollup_events.first.issue_event, pull_request: rollup_events.first.pull_request)
    when PullRequest::Adapter::AutoMergeEventAdapter
      render PullRequests::TimelineEvents::AutoMergeComponent.new(issue_event: rollup_events.first.issue_event)
    when PullRequest::Adapter::ReadyForReviewEventAdapter
      render PullRequests::TimelineEvents::ReadyForReviewComponent.new(issue_event: rollup_events.first.issue_event)
    when PullRequest::Adapter::ConvertToDraftEventAdapter
      render PullRequests::TimelineEvents::ConvertToDraftEventComponent.new(issue_event: rollup_events.first.issue_event)
    when PullRequest::Adapter::MergeQueueEventAdapter
      render PullRequests::TimelineEvents::MergeQueueEventComponent.new(issue_event: rollup_events.first.issue_event, pull_request: rollup_events.first.pull_request)
    when PullRequest::Adapter::BaseRefForcePushedEventAdapter
      render PullRequests::TimelineEvents::ForcePushComponent.new(issue_events: rollup_events.map(&:issue_event), pull_request: rollup_events.first.pull_request)
    when PullRequest::Adapter::HeadRefForcePushedEventAdapter
      render PullRequests::TimelineEvents::ForcePushComponent.new(issue_events: rollup_events.map(&:issue_event), pull_request: rollup_events.first.pull_request)
    when PlatformTypes::ReferencedEvent, Issue::Adapter::ReferencedEventAdapter
      render "issues/events/commit_reference", event: rollup_events.first
    when PlatformTypes::CrossReferencedEvent, Issue::Adapter::CrossReferencedEventAdapter
      render "issues/events/cross_references", events: rollup_events
    when PlatformTypes::ConnectedEvent, PlatformTypes::DisconnectedEvent, Issue::Adapter::ConnectedEventAdapter, Issue::Adapter::DisconnectedEventAdapter
      render "issues/events/connections", events: rollup_events
    else
      render "issues/events/simple_events", events: rollup_events
    end
  %>
<%- end %>
