# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: services/runnergroups.proto

require 'google/protobuf'

require 'pbtypes/github_pb'
require 'services/selfhostedrunners_pb'
require 'services/runnerscalesets_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("services/runnergroups.proto", :syntax => :proto3) do
    add_message "git_hub.launch.services.runnergroups.RunnerGroup" do
      optional :id, :int64, 1
      optional :name, :string, 2
      optional :size, :int64, 3
      optional :owner_id, :message, 4, "git_hub.launch.pbtypes.git_hub.Identity"
      repeated :runners, :message, 5, "git_hub.launch.services.selfhostedrunners.Runner"
      optional :visibility, :enum, 6, "git_hub.launch.services.runnergroups.Visibility"
      repeated :selected_targets, :message, 7, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :is_default, :bool, 8
      optional :allow_public, :bool, 9
      optional :inherited_allow_public, :bool, 10
      optional :is_hosted, :bool, 11
      repeated :selected_workflow_refs, :string, 12
      optional :restricted_to_workflows, :bool, 13
      optional :workflow_restrictions_read_only, :bool, 14
      repeated :runner_scale_sets, :message, 15, "git_hub.launch.services.runnerscalesets.RunnerScaleSet"
      optional :owner_group_id, :int64, 16
    end
    add_message "git_hub.launch.services.runnergroups.ListGroupsRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :plan_owner_id, :message, 2, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :include_runners, :bool, 3
      optional :is_enterprise_owner, :bool, 4
      optional :include_hosted_runner_groups, :bool, 5
      optional :exclude_elastic_runners, :bool, 6
      optional :include_runner_scale_sets, :bool, 7
    end
    add_message "git_hub.launch.services.runnergroups.ListGroupsResponse" do
      repeated :runner_groups, :message, 1, "git_hub.launch.services.runnergroups.RunnerGroup"
    end
    add_message "git_hub.launch.services.runnergroups.GetGroupRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :group_id, :int64, 2
      optional :include_runners, :bool, 3
      optional :is_enterprise_owner, :bool, 4
      optional :plan_owner_id, :message, 5, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :include_hosted_runner_groups, :bool, 6
      optional :exclude_elastic_runners, :bool, 7
      optional :include_runner_scale_sets, :bool, 8
    end
    add_message "git_hub.launch.services.runnergroups.DeleteGroupRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :group_id, :int64, 2
    end
    add_message "git_hub.launch.services.runnergroups.DeleteGroupResponse" do
      optional :status, :string, 1
    end
    add_message "git_hub.launch.services.runnergroups.GetGroupResponse" do
      optional :runner_group, :message, 1, "git_hub.launch.services.runnergroups.RunnerGroup"
    end
    add_message "git_hub.launch.services.runnergroups.CreateGroupRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :name, :string, 2
      repeated :runner_ids, :int64, 3
      optional :visibility, :enum, 4, "git_hub.launch.services.runnergroups.Visibility"
      repeated :selected_targets, :message, 5, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :allow_public, :bool, 6
      repeated :selected_workflow_refs, :string, 7
      optional :restricted_to_workflows, :bool, 8
    end
    add_message "git_hub.launch.services.runnergroups.CreateGroupResponse" do
      optional :runner_group, :message, 1, "git_hub.launch.services.runnergroups.RunnerGroup"
    end
    add_message "git_hub.launch.services.runnergroups.UpdateGroupRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :group_id, :int64, 2
      optional :name, :string, 3
      repeated :runner_ids, :int64, 4
      repeated :selected_targets, :message, 6, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :plan_owner_id, :message, 7, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :update_visibility, :enum, 8, "git_hub.launch.services.runnergroups.UpdateVisibility"
      optional :allow_public, :enum, 9, "git_hub.launch.services.runnergroups.UpdateAllowPublic"
      repeated :selected_workflow_refs, :string, 10
      optional :restricted_to_workflows, :enum, 11, "git_hub.launch.services.runnergroups.UpdateRestrictedToWorkflows"
    end
    add_message "git_hub.launch.services.runnergroups.UpdateGroupResponse" do
      optional :runner_group, :message, 1, "git_hub.launch.services.runnergroups.RunnerGroup"
    end
    add_message "git_hub.launch.services.runnergroups.UpdateRunnersRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :group_id, :int64, 2
      repeated :runner_ids, :int64, 3
      optional :is_enterprise_owner, :bool, 7
    end
    add_message "git_hub.launch.services.runnergroups.UpdateRunnersResponse" do
      optional :runner_group, :message, 1, "git_hub.launch.services.runnergroups.RunnerGroup"
    end
    add_message "git_hub.launch.services.runnergroups.AddRunnersRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :group_id, :int64, 2
      repeated :runner_ids, :int64, 3
    end
    add_message "git_hub.launch.services.runnergroups.AddRunnersResponse" do
      optional :runner_group, :message, 1, "git_hub.launch.services.runnergroups.RunnerGroup"
    end
    add_message "git_hub.launch.services.runnergroups.RemoveRunnerRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :group_id, :int64, 2
      optional :runner_id, :int64, 3
    end
    add_message "git_hub.launch.services.runnergroups.RemoveRunnerResponse" do
      optional :runner_group, :message, 1, "git_hub.launch.services.runnergroups.RunnerGroup"
    end
    add_message "git_hub.launch.services.runnergroups.UpdateTargetsRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :group_id, :int64, 2
      repeated :target_ids, :message, 3, "git_hub.launch.pbtypes.git_hub.Identity"
    end
    add_message "git_hub.launch.services.runnergroups.UpdateTargetsResponse" do
      repeated :target_ids, :message, 2, "git_hub.launch.pbtypes.git_hub.Identity"
    end
    add_message "git_hub.launch.services.runnergroups.AddTargetRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :group_id, :int64, 2
      optional :target_id, :message, 3, "git_hub.launch.pbtypes.git_hub.Identity"
    end
    add_message "git_hub.launch.services.runnergroups.AddTargetResponse" do
      repeated :target_ids, :message, 2, "git_hub.launch.pbtypes.git_hub.Identity"
    end
    add_message "git_hub.launch.services.runnergroups.RemoveTargetRequest" do
      optional :owner_id, :message, 1, "git_hub.launch.pbtypes.git_hub.Identity"
      optional :group_id, :int64, 2
      optional :target_id, :message, 3, "git_hub.launch.pbtypes.git_hub.Identity"
    end
    add_message "git_hub.launch.services.runnergroups.RemoveTargetResponse" do
      repeated :target_ids, :message, 2, "git_hub.launch.pbtypes.git_hub.Identity"
    end
    add_enum "git_hub.launch.services.runnergroups.Visibility" do
      value :ALL, 0
      value :PRIVATE, 1
      value :SELECTED, 2
    end
    add_enum "git_hub.launch.services.runnergroups.UpdateVisibility" do
      value :UNKNOWN, 0
      value :UPDATE_ALL, 1
      value :UPDATE_PRIVATE, 2
      value :UPDATE_SELECTED, 3
    end
    add_enum "git_hub.launch.services.runnergroups.UpdateAllowPublic" do
      value :ALLOW_PUBLIC_UNKNOWN, 0
      value :ALLOW_PUBLIC_ALLOW, 1
      value :ALLOW_PUBLIC_DENY, 2
    end
    add_enum "git_hub.launch.services.runnergroups.UpdateRestrictedToWorkflows" do
      value :RESTRICTED_TO_WORKFLOWS_UNKNOWN, 0
      value :RESTRICTED_TO_WORKFLOWS_RESTRICTED, 1
      value :RESTRICTED_TO_WORKFLOWS_UNRESTRICTED, 2
    end
  end
end

module GitHub
  module Launch
    module Services
      module Runnergroups
        RunnerGroup = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.RunnerGroup").msgclass
        ListGroupsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.ListGroupsRequest").msgclass
        ListGroupsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.ListGroupsResponse").msgclass
        GetGroupRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.GetGroupRequest").msgclass
        DeleteGroupRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.DeleteGroupRequest").msgclass
        DeleteGroupResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.DeleteGroupResponse").msgclass
        GetGroupResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.GetGroupResponse").msgclass
        CreateGroupRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.CreateGroupRequest").msgclass
        CreateGroupResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.CreateGroupResponse").msgclass
        UpdateGroupRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.UpdateGroupRequest").msgclass
        UpdateGroupResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.UpdateGroupResponse").msgclass
        UpdateRunnersRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.UpdateRunnersRequest").msgclass
        UpdateRunnersResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.UpdateRunnersResponse").msgclass
        AddRunnersRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.AddRunnersRequest").msgclass
        AddRunnersResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.AddRunnersResponse").msgclass
        RemoveRunnerRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.RemoveRunnerRequest").msgclass
        RemoveRunnerResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.RemoveRunnerResponse").msgclass
        UpdateTargetsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.UpdateTargetsRequest").msgclass
        UpdateTargetsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.UpdateTargetsResponse").msgclass
        AddTargetRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.AddTargetRequest").msgclass
        AddTargetResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.AddTargetResponse").msgclass
        RemoveTargetRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.RemoveTargetRequest").msgclass
        RemoveTargetResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.RemoveTargetResponse").msgclass
        Visibility = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.Visibility").enummodule
        UpdateVisibility = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.UpdateVisibility").enummodule
        UpdateAllowPublic = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.UpdateAllowPublic").enummodule
        UpdateRestrictedToWorkflows = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("git_hub.launch.services.runnergroups.UpdateRestrictedToWorkflows").enummodule
      end
    end
  end
end
