# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Billing::V0::LicenseSnapshot`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Billing::V0::LicenseSnapshot`.

class Hydro::Schemas::Github::Billing::V0::LicenseSnapshot
  sig do
    params(
      business: T.nilable(Hydro::Schemas::Github::V1::Entities::Business),
      filled_enterprise_seats: T.nilable(Integer),
      filled_volume_seats: T.nilable(Integer),
      max_enterprise_seats: T.nilable(Integer),
      max_volume_seats: T.nilable(Integer),
      request_context: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)
    ).void
  end
  def initialize(business: nil, filled_enterprise_seats: nil, filled_volume_seats: nil, max_enterprise_seats: nil, max_volume_seats: nil, request_context: nil); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Business)) }
  def business; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Business)).void }
  def business=(value); end

  sig { void }
  def clear_business; end

  sig { void }
  def clear_filled_enterprise_seats; end

  sig { void }
  def clear_filled_volume_seats; end

  sig { void }
  def clear_max_enterprise_seats; end

  sig { void }
  def clear_max_volume_seats; end

  sig { void }
  def clear_request_context; end

  sig { returns(Integer) }
  def filled_enterprise_seats; end

  sig { params(value: Integer).void }
  def filled_enterprise_seats=(value); end

  sig { returns(Integer) }
  def filled_volume_seats; end

  sig { params(value: Integer).void }
  def filled_volume_seats=(value); end

  sig { returns(Integer) }
  def max_enterprise_seats; end

  sig { params(value: Integer).void }
  def max_enterprise_seats=(value); end

  sig { returns(Integer) }
  def max_volume_seats; end

  sig { params(value: Integer).void }
  def max_volume_seats=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)) }
  def request_context; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::RequestContext)).void }
  def request_context=(value); end
end
