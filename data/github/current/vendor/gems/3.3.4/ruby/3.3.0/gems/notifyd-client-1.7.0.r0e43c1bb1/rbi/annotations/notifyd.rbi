# typed: true
# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Notifyd::Client`.
# Please instead update this file by running `bin/tapioca dsl Notifyd::Client`.


class Notifyd::Client
  sig { returns(Notifyd::Proto::DeviceTokensClient) }
  def device_tokens; end

  sig { returns(Notifyd::Proto::DeviceTokensV2::DeviceTokensV2Client) }
  def device_tokens_v2; end

  sig { returns(Notifyd::Proto::Maintenance::MaintenanceClient) }
  def maintenance; end

  sig { returns(Notifyd::Proto::Newsies::NewsiesClient) }
  def newsies; end

  sig { returns(Notifyd::Proto::RoutingSettings::RoutingSettingsClient) }
  def routing_settings; end

  sig { returns(Notifyd::Proto::Subscriptions::SubscriptionsClient) }
  def subscriptions; end

  sig { returns(Notifyd::Proto::Test::TestClient) }
  def test; end
end

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Notifyd::Proto::DeviceTokensClient`.
# Please instead update this file by running `bin/tapioca dsl Notifyd::Proto::DeviceTokensClient`.


class Notifyd::Proto::DeviceTokensClient
  sig { params(request: Notifyd::Proto::GetRequest).returns(::Twirp::ClientResp[Notifyd::Proto::GetResponse]) }
  def get_device_tokens(request); end

  sig do
    params(
      request: Notifyd::Proto::ReplaceDeviceTokensRequest
    ).returns(::Twirp::ClientResp[Google::Protobuf::Empty])
  end
  def replace_device_tokens(request); end
end

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Notifyd::Proto::DeviceTokensV2::DeviceTokensV2Client`.
# Please instead update this file by running `bin/tapioca dsl Notifyd::Proto::DeviceTokensV2::DeviceTokensV2Client`.


class Notifyd::Proto::DeviceTokensV2::DeviceTokensV2Client
  sig do
    params(
      request: Notifyd::Proto::DeviceTokensV2::DeleteRequest
    ).returns(::Twirp::ClientResp[Google::Protobuf::Empty])
  end
  def delete(request); end

  sig do
    params(
      request: Notifyd::Proto::DeviceTokensV2::DeleteAllRequest
    ).returns(::Twirp::ClientResp[Google::Protobuf::Empty])
  end
  def delete_all(request); end

  sig do
    params(
      request: Notifyd::Proto::DeviceTokensV2::SetRequest
    ).returns(::Twirp::ClientResp[Google::Protobuf::BoolValue])
  end
  def set(request); end
end

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Notifyd::Proto::Maintenance::MaintenanceClient`.
# Please instead update this file by running `bin/tapioca dsl Notifyd::Proto::Maintenance::MaintenanceClient`.


class Notifyd::Proto::Maintenance::MaintenanceClient
  sig do
    params(
      request: Notifyd::Proto::Maintenance::DeleteRepositoryRequest
    ).returns(::Twirp::ClientResp[Google::Protobuf::Empty])
  end
  def delete_repository(request); end

  sig do
    params(
      request: Notifyd::Proto::Maintenance::DeleteRepositoryForUsersRequest
    ).returns(::Twirp::ClientResp[Google::Protobuf::Empty])
  end
  def delete_repository_for_users(request); end

  sig do
    params(
      request: Notifyd::Proto::Maintenance::DeleteUserRequest
    ).returns(::Twirp::ClientResp[Google::Protobuf::Empty])
  end
  def delete_user(request); end

  sig do
    params(
      request: Notifyd::Proto::Maintenance::DeleteUserRepositoriesRequest
    ).returns(::Twirp::ClientResp[Google::Protobuf::Empty])
  end
  def delete_user_repositories(request); end
end

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Notifyd::Proto::Newsies::NewsiesClient`.
# Please instead update this file by running `bin/tapioca dsl Notifyd::Proto::Newsies::NewsiesClient`.


class Notifyd::Proto::Newsies::NewsiesClient
  sig do
    params(
      request: Notifyd::Proto::Newsies::IgnoreRequest
    ).returns(::Twirp::ClientResp[Notifyd::Proto::Newsies::IgnoreResponse])
  end
  def ignore(request); end

  sig do
    params(
      request: Notifyd::Proto::Newsies::UnwatchRequest
    ).returns(::Twirp::ClientResp[Notifyd::Proto::Newsies::UnwatchResponse])
  end
  def unwatch(request); end

  sig do
    params(
      request: Notifyd::Proto::Newsies::UnwatchAllRequest
    ).returns(::Twirp::ClientResp[Notifyd::Proto::Newsies::UnwatchAllResponse])
  end
  def unwatch_all(request); end

  sig do
    params(
      request: Notifyd::Proto::Newsies::WatchRequest
    ).returns(::Twirp::ClientResp[Notifyd::Proto::Newsies::WatchResponse])
  end
  def watch(request); end
end

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Notifyd::Proto::RoutingSettings::RoutingSettingsClient`.
# Please instead update this file by running `bin/tapioca dsl Notifyd::Proto::RoutingSettings::RoutingSettingsClient`.


class Notifyd::Proto::RoutingSettings::RoutingSettingsClient
  sig do
    params(
      request: Notifyd::Proto::RoutingSettings::BatchCreateAndDeleteRequest
    ).returns(::Twirp::ClientResp[Notifyd::Proto::RoutingSettings::BatchCreateAndDeleteResponse])
  end
  def batch_create_and_delete(request); end

  sig do
    params(
      request: Notifyd::Proto::RoutingSettings::BatchGetRequest
    ).returns(::Twirp::ClientResp[Notifyd::Proto::RoutingSettings::GetResponse])
  end
  def batch_get(request); end

  sig do
    params(
      request: Notifyd::Proto::RoutingSettings::BatchReplaceRequest
    ).returns(::Twirp::ClientResp[Notifyd::Proto::RoutingSettings::BatchReplaceResponse])
  end
  def batch_replace(request); end

  sig do
    params(
      request: Notifyd::Proto::RoutingSettings::GetRequest
    ).returns(::Twirp::ClientResp[Notifyd::Proto::RoutingSettings::GetResponse])
  end
  def get(request); end
end

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Notifyd::Proto::Subscriptions::SubscriptionsClient`.
# Please instead update this file by running `bin/tapioca dsl Notifyd::Proto::Subscriptions::SubscriptionsClient`.


class Notifyd::Proto::Subscriptions::SubscriptionsClient
  sig do
    params(
      request: Notifyd::Proto::Subscriptions::BatchCreateAndDeleteRequest
    ).returns(::Twirp::ClientResp[Notifyd::Proto::Subscriptions::BatchCreateAndDeleteResponse])
  end
  def batch_create_and_delete(request); end

  sig do
    params(
      request: Notifyd::Proto::Subscriptions::BatchReplaceRequest
    ).returns(::Twirp::ClientResp[Notifyd::Proto::Subscriptions::BatchReplaceResponse])
  end
  def batch_replace(request); end

  sig do
    params(
      request: Notifyd::Proto::Subscriptions::GetRequest
    ).returns(::Twirp::ClientResp[Notifyd::Proto::Subscriptions::GetResponse])
  end
  def get(request); end
end

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Notifyd::Proto::Test::TestClient`.
# Please instead update this file by running `bin/tapioca dsl Notifyd::Proto::Test::TestClient`.


class Notifyd::Proto::Test::TestClient
  sig do
    params(
      request: Notifyd::Proto::Test::EchoRequest
    ).returns(::Twirp::ClientResp[Notifyd::Proto::Test::EchoResponse])
  end
  def echo(request); end

  sig do
    params(
      request: Notifyd::Proto::Test::EchoRequest
    ).returns(::Twirp::ClientResp[Notifyd::Proto::Test::EchoResponse])
  end
  def timeout(request); end
end
