# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::EnterpriseAccount::V0::Entities::EnterpriseAdminInvitation`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::EnterpriseAccount::V0::Entities::EnterpriseAdminInvitation`.

class Hydro::Schemas::Github::EnterpriseAccount::V0::Entities::EnterpriseAdminInvitation
  sig do
    params(
      accepted_at: T.nilable(Google::Protobuf::Timestamp),
      cancelled_at: T.nilable(Google::Protobuf::Timestamp),
      created_at: T.nilable(Google::Protobuf::Timestamp),
      email: T.nilable(String),
      enterprise: T.nilable(Hydro::Schemas::Github::V1::Entities::Business),
      expired_at: T.nilable(Google::Protobuf::Timestamp),
      id: T.nilable(Integer),
      invitee: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      inviter: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      role: T.nilable(T.any(Symbol, Integer)),
      updated_at: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(accepted_at: nil, cancelled_at: nil, created_at: nil, email: nil, enterprise: nil, expired_at: nil, id: nil, invitee: nil, inviter: nil, role: nil, updated_at: nil); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def accepted_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def accepted_at=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def cancelled_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def cancelled_at=(value); end

  sig { void }
  def clear_accepted_at; end

  sig { void }
  def clear_cancelled_at; end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_email; end

  sig { void }
  def clear_enterprise; end

  sig { void }
  def clear_expired_at; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_invitee; end

  sig { void }
  def clear_inviter; end

  sig { void }
  def clear_role; end

  sig { void }
  def clear_updated_at; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(String) }
  def email; end

  sig { params(value: String).void }
  def email=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Business)) }
  def enterprise; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Business)).void }
  def enterprise=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def expired_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def expired_at=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def invitee; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def invitee=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def inviter; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def inviter=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def role; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def role=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end
end
