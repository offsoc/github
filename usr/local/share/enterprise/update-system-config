#!/usr/share/rbenv/versions/current/bin/ruby

require "/usr/local/share/enterprise/lib/config"

STDOUT.sync = true

def cause(e) return cause(e.cause) unless e.cause.nil?; e end

begin
  main
rescue ConfigApplyException => e
  msg = "Error while running config-apply, caught an exception: #{e.message}"
  msg = "#{Time.now.strftime("#{Enterprise::ConfigApply::ISO8601_FORMAT}")} #{msg.chomp}"
  backtrace = cause(e).backtrace.join("\n")
  msg = "#{msg}\n#{backtrace}\n"

  STDERR.puts "#{msg}"

  logfile = ENV.fetch('LOGFILE', nil)
  File.open(logfile, 'a') { |f| f.write "#{msg}" } unless logfile.nil?

  exit e.exit_status
end
