# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Orca::V0::PipelineEvent`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Orca::V0::PipelineEvent`.

class Hydro::Schemas::Orca::V0::PipelineEvent
  sig do
    params(
      environment: T.nilable(String),
      model: T.nilable(Hydro::Schemas::Orca::V0::PipelineEvent::Model),
      organization: T.nilable(Hydro::Schemas::Orca::V0::PipelineEvent::Organization),
      organization_login: T.nilable(String),
      pipeline_id: T.nilable(String),
      status: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(environment: nil, model: nil, organization: nil, organization_login: nil, pipeline_id: nil, status: nil); end

  sig { void }
  def clear_environment; end

  sig { void }
  def clear_model; end

  sig { void }
  def clear_organization; end

  sig { void }
  def clear_organization_login; end

  sig { void }
  def clear_pipeline_id; end

  sig { void }
  def clear_status; end

  sig { returns(String) }
  def environment; end

  sig { params(value: String).void }
  def environment=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Orca::V0::PipelineEvent::Model)) }
  def model; end

  sig { params(value: T.nilable(Hydro::Schemas::Orca::V0::PipelineEvent::Model)).void }
  def model=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Orca::V0::PipelineEvent::Organization)) }
  def organization; end

  sig { params(value: T.nilable(Hydro::Schemas::Orca::V0::PipelineEvent::Organization)).void }
  def organization=(value); end

  sig { returns(String) }
  def organization_login; end

  sig { params(value: String).void }
  def organization_login=(value); end

  sig { returns(String) }
  def pipeline_id; end

  sig { params(value: String).void }
  def pipeline_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def status; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def status=(value); end
end
