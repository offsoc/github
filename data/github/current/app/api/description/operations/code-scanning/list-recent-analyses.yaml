---
summary: List code scanning analyses for a repository
description: |-
  Lists the details of all code scanning analyses for a repository,
  starting with the most recent.
  The response is paginated and you can use the `page` and `per_page` parameters
  to list the analyses you're interested in.
  By default 30 analyses are listed per page.

  The `rules_count` field in the response give the number of rules
  that were run in the analysis.
  For very old analyses this data is not available,
  and `0` is returned in this field.

  > [!WARNING]
  > **Deprecation notice:** The `tool_name` field is deprecated and will, in future, not be included in the response for this endpoint. The example response reflects this change. The tool name can now be found inside the `tool` field.

  OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
operationId: code-scanning/list-recent-analyses
tags:
  - code-scanning
externalDocs:
  description: API method documentation
  url: '${externalDocsUrl}/rest/code-scanning/code-scanning#list-code-scanning-analyses-for-a-repository'
parameters:
  - $ref: '../../components/parameters/owner.yaml'
  - $ref: '../../components/parameters/repo.yaml'
  - $ref: '../../components/parameters/tool-name.yaml'
  - $ref: '../../components/parameters/tool-guid.yaml'
  - $ref: '../../components/parameters/page.yaml'
  - $ref: '../../components/parameters/per-page.yaml'
  - name: ref
    in: query
    description: The Git reference for the analyses you want to list. The `ref` for
      a branch can be formatted either as `refs/heads/<branch name>` or simply `<branch
      name>`. To reference a pull request use `refs/pull/<number>/merge`.
    required: false
    schema:
      $ref: '../../components/schemas/code-scanning-ref.yaml'
  - name: sarif_id
    in: query
    description: Filter analyses belonging to the same SARIF upload.
    required: false
    schema:
      $ref: '../../components/schemas/code-scanning-analysis-sarif-id.yaml'
  - $ref: '../../components/parameters/direction.yaml'
  - name: sort
    description: The property by which to sort the results.
    in: query
    required: false
    schema:
      type: string
      enum:
        - created
      default: created
responses:
  '200':
    description: Response
    content:
      application/json:
        schema:
          type: array
          items:
            $ref: '../../components/schemas/code-scanning-analysis.yaml'
        examples:
          default:
            $ref: '../../components/examples/code-scanning-analysis-items.yaml'
  '403':
    $ref: '../../components/responses/code_scanning_forbidden_read.yaml'
  '404':
    $ref: '../../components/responses/not_found.yaml'
  '503':
    $ref: '../../components/responses/service_unavailable.yaml'
x-githubEnterpriseOverlays:
  '< 3.7':
    parameters:
      - $ref: '../../components/parameters/owner.yaml'
      - $ref: '../../components/parameters/repo.yaml'
      - $ref: '../../components/parameters/tool-name.yaml'
      - $ref: '../../components/parameters/tool-guid.yaml'
      - $ref: '../../components/parameters/page.yaml'
      - $ref: '../../components/parameters/per-page.yaml'
      - name: ref
        in: query
        description: The Git reference for the analyses you want to list. The `ref` for
          a branch can be formatted either as `refs/heads/<branch name>` or simply `<branch
          name>`. To reference a pull request use `refs/pull/<number>/merge`.
        required: false
        schema:
          $ref: '../../components/schemas/code-scanning-ref.yaml'
      - name: sarif_id
        in: query
        description: Filter analyses belonging to the same SARIF upload.
        required: false
        schema:
          $ref: '../../components/schemas/code-scanning-analysis-sarif-id.yaml'
  '< 3.4':
    description: |-
      Lists the details of all code scanning analyses for a repository,
      starting with the most recent.
      The response is paginated and you can use the `page` and `per_page` parameters
      to list the analyses you're interested in.
      By default 30 analyses are listed per page.

      The `rules_count` field in the response give the number of rules
      that were run in the analysis.
      For very old analyses this data is not available,
      and `0` is returned in this field.

      You must use an access token with the `security_events` scope to use this endpoint.

      > [!WARNING]
      > **Deprecation notice:** The `tool_name` field is deprecated and will, in future, not be included in the response for this endpoint. The example response reflects this change. The tool name can now be found inside the `tool` field.
x-github:
  enabledForGitHubApps: true
  githubCloudOnly: false

  category: code-scanning
  subcategory: code-scanning
x-github-releases:
  - ghec
  - ghes:
      - '>= 2.22'
  - api.github.com
x-github-internal:
  owner: '@github/code-scanning-experiences'
  path: '/repos/{owner}/{repo}/code-scanning/analyses'
  http-method: get
  service-tier: 2
  published: true
  deprecatedFields: true
