# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `MonolithTwirp::Registrymetadata::Core::V1::TargetPackage`.
# Please instead update this file by running `bin/tapioca dsl MonolithTwirp::Registrymetadata::Core::V1::TargetPackage`.

class MonolithTwirp::Registrymetadata::Core::V1::TargetPackage
  sig do
    params(
      author_type: T.nilable(T.any(Symbol, Integer)),
      id: T.nilable(Integer),
      name: T.nilable(String),
      namespace: T.nilable(String),
      owner_id: T.nilable(Integer),
      visibility: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(author_type: nil, id: nil, name: nil, namespace: nil, owner_id: nil, visibility: nil); end

  sig { returns(T.any(Symbol, Integer)) }
  def author_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def author_type=(value); end

  sig { void }
  def clear_author_type; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_namespace; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_visibility; end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(String) }
  def namespace; end

  sig { params(value: String).void }
  def namespace=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def visibility; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def visibility=(value); end
end
