syntax = "proto3";

package actions.core.v1;

option go_package = "core/v1";
option ruby_package = "MonolithTwirp::Actions::Core::V1";

import "core/v1/identity.proto";

service EnvironmentsAPI {
  // ResolveActionsEnvironmentRequest resolves the environment for a given
  // repository
  rpc ResolveActionsEnvironment(ResolveActionsEnvironmentRequest) returns (ResolveActionsEnvironmentResponse);

  // GetEnvironmentRepository returns the database id of the repository
  // where the given environment is present.
  rpc GetEnvironmentRepository(GetEnvironmentRepositoryRequest) returns (GetEnvironmentRepositoryResponse);
}

message ResolveActionsEnvironmentRequest {
  // repository_id is the global database ID
  Identity repository_id = 1;
  // The environment name
  string environment = 2;
}

message ResolveActionsEnvironmentResponse {
  // environment is the resolved environment
  Environment environment = 1;
}

message Environment {
  // environment_id is the global database ID
  Identity environment_id = 1;

  // name is the name of the environment
  string name = 2;
}

message GetEnvironmentRepositoryRequest {
  // environment_id is the global database ID
  Identity environment_id = 1;
}

message GetEnvironmentRepositoryResponse {
  // repository database ID where the environment is present
  int64 repository_database_id = 1;
}
