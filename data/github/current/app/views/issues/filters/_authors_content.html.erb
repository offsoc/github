<%
  filtered_authors = issues_search_term_values(:author)
  users = populate_authors.partition do |user|
    (user.is_a?(Bot) && filtered_authors.include?(user.to_query_filter)) ||
    filtered_authors.include?(user.display_login)
  end.flatten
  users = users.select { |u| u != current_user }
%>
<% users.each do |user| %>
  <% selected = filtered_authors.include?(user.display_login) %>
  <% display_login = user.is_a?(Bot) ? user.to_query_filter : user.display_login %>
  <% url = issues_search_query(replace: { author: !selected ? display_login : nil }, pulls_only: pulls_only) %>
  <%= render(Issues::IssueFilterAuthorComponent.new(user: user, url: url, selected: selected)) %>
<% end %>
