# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `DependencyGraphAPI::V1::SearchDependenciesForRepositoryResponse::Result`.
# Please instead update this file by running `bin/tapioca dsl DependencyGraphAPI::V1::SearchDependenciesForRepositoryResponse::Result`.

class DependencyGraphAPI::V1::SearchDependenciesForRepositoryResponse::Result
  sig do
    params(
      license: T.nilable(String),
      manifest_path: T.nilable(String),
      package_manager: T.nilable(T.any(Symbol, Integer)),
      package_name: T.nilable(String),
      relationship: T.nilable(T.any(Symbol, Integer)),
      repository_id: T.nilable(Integer),
      requirements: T.nilable(String),
      scanned_at: T.nilable(Google::Protobuf::Timestamp),
      scanned_by: T.nilable(T.any(Symbol, Integer)),
      scope: T.nilable(T.any(Symbol, Integer)),
      snapshot_detector_name: T.nilable(String),
      vulnerable_version_range_ids: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer]))
    ).void
  end
  def initialize(license: nil, manifest_path: nil, package_manager: nil, package_name: nil, relationship: nil, repository_id: nil, requirements: nil, scanned_at: nil, scanned_by: nil, scope: nil, snapshot_detector_name: nil, vulnerable_version_range_ids: T.unsafe(nil)); end

  sig { void }
  def clear_license; end

  sig { void }
  def clear_manifest_path; end

  sig { void }
  def clear_package_manager; end

  sig { void }
  def clear_package_name; end

  sig { void }
  def clear_relationship; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_requirements; end

  sig { void }
  def clear_scanned_at; end

  sig { void }
  def clear_scanned_by; end

  sig { void }
  def clear_scope; end

  sig { void }
  def clear_snapshot_detector_name; end

  sig { void }
  def clear_vulnerable_version_range_ids; end

  sig { returns(String) }
  def license; end

  sig { params(value: String).void }
  def license=(value); end

  sig { returns(String) }
  def manifest_path; end

  sig { params(value: String).void }
  def manifest_path=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def package_manager; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def package_manager=(value); end

  sig { returns(String) }
  def package_name; end

  sig { params(value: String).void }
  def package_name=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def relationship; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def relationship=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end

  sig { returns(String) }
  def requirements; end

  sig { params(value: String).void }
  def requirements=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def scanned_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def scanned_at=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def scanned_by; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def scanned_by=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def scope; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def scope=(value); end

  sig { returns(String) }
  def snapshot_detector_name; end

  sig { params(value: String).void }
  def snapshot_detector_name=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def vulnerable_version_range_ids; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def vulnerable_version_range_ids=(value); end
end
