<%# erblint:counter DeprecatedComponentsCounter 4 %>

<% if security_policy.exists? %>
  <%= render(Primer::Box.new(classes: "Box Box--condensed", **system_arguments)) do %>
    <div class="Box-header d-flex flex-items-center">
      <h3 class="Box-title flex-auto">
        <%= security_policy.path %>
      </h3>
      <% if blob_view.edit_enabled? %>
        <%= form_tag file_edit_path(repository: security_policy.repository, user_id: security_policy.repository.owner, name: security_policy.default_branch, path: security_policy.path), method: :get, class: "inline-form js-update-url-with-hash" do %>
          <% render(Primer::Beta::IconButton.new(icon: :pencil, "aria-label": blob_view.file_action_tooltip(action: :edit), tooltip_direction: :s, type: :submit, scheme: :invisible, test_selector: "edit-link", data: {"disable-with": "" })) %>
        <% end %>
      <% end %>
    </div>
    <div class="Box-body">
      <%= helpers.format_readme(security_policy.file) %>
    </div>
  <% end %>
<% elsif new_file_view.new_file_action_enabled? %>
  <%= render(Primer::Box.new(classes: "Box", border_color: :muted, **system_arguments)) do %>
    <% if helpers.use_pvd_workflow? %>
      <%= render Primer::Beta::Blankslate.new(spacious: true) do |component| %>
        <% component.with_visual_icon(icon: :law) %>
        <% component.with_heading(tag: :h3).with_content("No security policy detected") %>
        <% component.with_description do %>
          Privately report a security vulnerability.
        <% end %>
        <% component.with_primary_action(href: new_repository_advisory_path(repository.owner, repository), test_selector: "private-vulnerability-report").with_content("Report a vulnerability") %>
      <% end %>
    <% else %>
      <%= render Primer::BlankslateComponent.new(
          icon: "law",
          title: non_collaborator? ? "Suggest a security policy" : "Set up a security policy",
          spacious: true,
        ) do %>
          <p>
            <% if non_collaborator? %>
              This project has not set up a <span class="text-mono">SECURITY.md</span> file yet.
            <% else %>
              Help your community understand how to securely report security vulnerabilities for your project.
            <% end %>
          </p>
          <%= form_tag new_file_path(name: repository.default_branch), method: :post do %>
            <input hidden name="security_policy" value="1">
            <%= render(Primer::ButtonComponent.new(
              scheme: :primary,
              mt: 3,
              type: :submit,
              test_selector: "create-security-policy")
            ) { non_collaborator? ? "Suggest a policy" : "Start setup" } %>
          <% end %>
        <% end %>
    <% end %>
  <% end %>
<% else %>
  <%= render Primer::BlankslateComponent.new(
    icon: :law,
    title: "No security policy detected",
    spacious: true,
    border: show_blankslate_border,
    **system_arguments,
  ) do %>
    <p>This project has not set up a <span class="text-mono">SECURITY.md</span> file yet.</p>
    <% if AdvisoryDB::Pvd.authorized_repo?(repo: repository) && (!logged_in? || helpers.use_pvd_workflow?) %>
      <%= render(Primer::ButtonComponent.new(
        scheme: :primary,
        mt: 3,
        tag: :a,
        href: new_repository_advisory_path(repository.owner, repository),
        test_selector: "private-vulnerability-report")
      ) { "Report a vulnerability" } %>
    <% end %>
  <% end %>
<% end %>
