# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::SecurityApi::V1::ActionsAbuseBlock`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::SecurityApi::V1::ActionsAbuseBlock`.

class Hydro::Schemas::SecurityApi::V1::ActionsAbuseBlock
  sig do
    params(
      billing_plan_owner: T.nilable(Hydro::Schemas::SecurityApi::V1::Entities::ActionsAbuseUser),
      blocking_reason: T.nilable(Google::Protobuf::StringValue),
      workflow_actor: T.nilable(Hydro::Schemas::SecurityApi::V1::Entities::ActionsAbuseUser)
    ).void
  end
  def initialize(billing_plan_owner: nil, blocking_reason: nil, workflow_actor: nil); end

  sig { returns(T.nilable(Hydro::Schemas::SecurityApi::V1::Entities::ActionsAbuseUser)) }
  def billing_plan_owner; end

  sig { params(value: T.nilable(Hydro::Schemas::SecurityApi::V1::Entities::ActionsAbuseUser)).void }
  def billing_plan_owner=(value); end

  sig { returns(T.nilable(Google::Protobuf::StringValue)) }
  def blocking_reason; end

  sig { params(value: T.nilable(Google::Protobuf::StringValue)).void }
  def blocking_reason=(value); end

  sig { void }
  def clear_billing_plan_owner; end

  sig { void }
  def clear_blocking_reason; end

  sig { void }
  def clear_workflow_actor; end

  sig { returns(T.nilable(Hydro::Schemas::SecurityApi::V1::Entities::ActionsAbuseUser)) }
  def workflow_actor; end

  sig { params(value: T.nilable(Hydro::Schemas::SecurityApi::V1::Entities::ActionsAbuseUser)).void }
  def workflow_actor=(value); end
end
