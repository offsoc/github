# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Api::App::PlatformTypes::License`.
# Please instead update this file by running `bin/tapioca dsl Api::App::PlatformTypes::License`.

class Api::App::PlatformTypes::License < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(String) }
  def body; end

  sig { returns(T::Boolean) }
  def body?; end

  sig { returns(T::Array[Api::App::PlatformTypes::LicenseRule]) }
  def conditions; end

  sig { returns(T::Boolean) }
  def conditions?; end

  sig { returns(T.nilable(String)) }
  def description; end

  sig { returns(T::Boolean) }
  def description?; end

  sig { returns(T::Boolean) }
  def featured; end

  sig { returns(T::Boolean) }
  def featured?; end

  sig { returns(T::Boolean) }
  def hidden; end

  sig { returns(T::Boolean) }
  def hidden?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(T.nilable(String)) }
  def implementation; end

  sig { returns(T::Boolean) }
  def implementation?; end

  sig { returns(String) }
  def key; end

  sig { returns(T::Boolean) }
  def key?; end

  sig { returns(T::Array[Api::App::PlatformTypes::LicenseRule]) }
  def limitations; end

  sig { returns(T::Boolean) }
  def limitations?; end

  sig { returns(String) }
  def name; end

  sig { returns(T::Boolean) }
  def name?; end

  sig { returns(T.nilable(String)) }
  def nickname; end

  sig { returns(T::Boolean) }
  def nickname?; end

  sig { returns(T::Array[Api::App::PlatformTypes::LicenseRule]) }
  def permissions; end

  sig { returns(T::Boolean) }
  def permissions?; end

  sig { returns(T::Boolean) }
  def pseudo_license; end

  sig { returns(T::Boolean) }
  def pseudo_license?; end

  sig { returns(T.nilable(String)) }
  def spdx_id; end

  sig { returns(T::Boolean) }
  def spdx_id?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def url; end

  sig { returns(T::Boolean) }
  def url?; end
end
