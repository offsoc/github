# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `allocation_sampler` gem.
# Please instead update this file by running `bin/tapioca gem allocation_sampler`.

# source://allocation_sampler//lib/allocation_sampler.rb#7
class ObjectSpace::AllocationSampler
  def initialize(*_arg0); end

  def allocation_count; end
  def disable; end
  def enable; end
  def frames; end
  def interval; end
  def overall_samples; end

  # source://allocation_sampler//lib/allocation_sampler.rb#133
  def result; end

  def samples; end
end

# source://allocation_sampler//lib/allocation_sampler.rb#137
module ObjectSpace::AllocationSampler::Display; end

# source://allocation_sampler//lib/allocation_sampler.rb#138
class ObjectSpace::AllocationSampler::Display::Stack
  # @return [Stack] a new instance of Stack
  #
  # source://allocation_sampler//lib/allocation_sampler.rb#141
  def initialize(output: T.unsafe(nil)); end

  # Returns the value of attribute max_depth.
  #
  # source://allocation_sampler//lib/allocation_sampler.rb#139
  def max_depth; end

  # source://allocation_sampler//lib/allocation_sampler.rb#145
  def show(frames); end

  private

  # source://allocation_sampler//lib/allocation_sampler.rb#169
  def display(frame, depth, total_samples, last_stack, seen, max_width); end

  # source://allocation_sampler//lib/allocation_sampler.rb#152
  def max_width(frame, depth, seen); end
end

# source://allocation_sampler//lib/allocation_sampler.rb#10
class ObjectSpace::AllocationSampler::Frame
  # @return [Frame] a new instance of Frame
  #
  # source://allocation_sampler//lib/allocation_sampler.rb#13
  def initialize(id, name, path); end

  # Returns the value of attribute children.
  #
  # source://allocation_sampler//lib/allocation_sampler.rb#11
  def children; end

  # Returns the value of attribute id.
  #
  # source://allocation_sampler//lib/allocation_sampler.rb#11
  def id; end

  # Returns the value of attribute name.
  #
  # source://allocation_sampler//lib/allocation_sampler.rb#11
  def name; end

  # Returns the value of attribute path.
  #
  # source://allocation_sampler//lib/allocation_sampler.rb#11
  def path; end
end

# source://allocation_sampler//lib/allocation_sampler.rb#20
class ObjectSpace::AllocationSampler::Result
  # @return [Result] a new instance of Result
  #
  # source://allocation_sampler//lib/allocation_sampler.rb#69
  def initialize(samples, frames); end

  # source://allocation_sampler//lib/allocation_sampler.rb#74
  def allocations_by_type; end

  # source://allocation_sampler//lib/allocation_sampler.rb#80
  def allocations_with_top_frame; end

  # source://allocation_sampler//lib/allocation_sampler.rb#95
  def by_type_with_call_tree; end

  # source://allocation_sampler//lib/allocation_sampler.rb#88
  def calltree; end

  # Returns the value of attribute frames.
  #
  # source://allocation_sampler//lib/allocation_sampler.rb#67
  def frames; end

  # Returns the value of attribute samples.
  #
  # source://allocation_sampler//lib/allocation_sampler.rb#67
  def samples; end

  private

  # source://allocation_sampler//lib/allocation_sampler.rb#128
  def build_frame(id, line, samples); end

  # source://allocation_sampler//lib/allocation_sampler.rb#107
  def build_tree(stack, count, frame_delegates); end
end

# source://allocation_sampler//lib/allocation_sampler.rb#21
class ObjectSpace::AllocationSampler::Result::Frame
  include ::Prelude::Enumerator
  include ::Enumerable
  include ::ActiveSupport::ToJsonWithActiveSupportEncoder

  # @return [Frame] a new instance of Frame
  #
  # source://allocation_sampler//lib/allocation_sampler.rb#27
  def initialize(frame, line, samples); end

  # Returns the value of attribute children.
  #
  # source://allocation_sampler//lib/allocation_sampler.rb#22
  def children; end

  # source://allocation_sampler//lib/allocation_sampler.rb#35
  def each; end

  # Returns the value of attribute line.
  #
  # source://allocation_sampler//lib/allocation_sampler.rb#22
  def line; end

  # Returns the value of attribute samples.
  #
  # source://allocation_sampler//lib/allocation_sampler.rb#23
  def samples; end

  # Sets the attribute samples
  #
  # @param value the value to set the attribute samples to.
  #
  # source://allocation_sampler//lib/allocation_sampler.rb#23
  def samples=(_arg0); end

  # source://allocation_sampler//lib/allocation_sampler.rb#47
  def to_dot; end

  # Returns the value of attribute total_samples.
  #
  # source://allocation_sampler//lib/allocation_sampler.rb#23
  def total_samples; end

  # Sets the attribute total_samples
  #
  # @param value the value to set the attribute total_samples to.
  #
  # source://allocation_sampler//lib/allocation_sampler.rb#23
  def total_samples=(_arg0); end

  private

  # source://allocation_sampler//lib/allocation_sampler.rb#55
  def print_edges(node, seen, total_samples); end
end

# source://allocation_sampler//lib/allocation_sampler.rb#8
ObjectSpace::AllocationSampler::VERSION = T.let(T.unsafe(nil), String)
