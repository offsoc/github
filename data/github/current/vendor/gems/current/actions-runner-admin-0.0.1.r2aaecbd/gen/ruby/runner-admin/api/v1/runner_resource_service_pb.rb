# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: runner-admin/api/v1/runner_resource_service.proto

require 'google/protobuf'

require 'runner-admin/api/v1/runner_group_pb'
require 'runner-admin/api/v1/runner_pb'
require 'runner-admin/entities/v1/github_entity_pb'
require 'runner-admin/entities/v1/identity_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("runner-admin/api/v1/runner_resource_service.proto", :syntax => :proto3) do
    add_message "github.actions.runner_admin.api.v1.ListRunnerGroupsRequest" do
      optional :entity, :message, 1, "github.actions.runner_admin.entities.v1.GitHubEntity"
      optional :is_lab, :bool, 2
    end
    add_message "github.actions.runner_admin.api.v1.ListRunnerGroupsResponse" do
      repeated :runner_groups, :message, 1, "github.actions.runner_admin.api.v1.RunnerGroup"
    end
    add_message "github.actions.runner_admin.api.v1.AddRunnerGroupRequest" do
      optional :entity, :message, 1, "github.actions.runner_admin.entities.v1.GitHubEntity"
      optional :name, :string, 2
      repeated :runner_ids, :uint64, 3
      optional :visibility, :enum, 4, "github.actions.runner_admin.api.v1.Visibility"
      repeated :selected_targets, :message, 5, "github.actions.runner_admin.entities.v1.Identity"
      optional :allow_public, :bool, 6
      repeated :selected_workflow_refs, :string, 7
      optional :restricted_to_workflows, :bool, 8
      repeated :selected_orgs, :message, 9, "github.actions.runner_admin.entities.v1.Identity"
      optional :is_default, :bool, 10
    end
    add_message "github.actions.runner_admin.api.v1.AddRunnerGroupResponse" do
      optional :runner_group, :message, 1, "github.actions.runner_admin.api.v1.RunnerGroup"
    end
    add_message "github.actions.runner_admin.api.v1.GetRunnerGroupRequest" do
      optional :entity, :message, 1, "github.actions.runner_admin.entities.v1.GitHubEntity"
      optional :group_id, :int64, 2
      optional :include_runners, :bool, 3
      optional :include_hosted_runner_groups, :bool, 4
      optional :exclude_elastic_runners, :bool, 5
    end
    add_message "github.actions.runner_admin.api.v1.GetRunnerGroupResponse" do
      optional :runner_group, :message, 1, "github.actions.runner_admin.api.v1.RunnerGroup"
    end
    add_message "github.actions.runner_admin.api.v1.UpdateRunnerGroupRequest" do
      optional :entity, :message, 1, "github.actions.runner_admin.entities.v1.GitHubEntity"
      optional :group_id, :int64, 2
      optional :name, :string, 3
      repeated :runner_ids, :uint64, 4
      repeated :selected_targets, :message, 6, "github.actions.runner_admin.entities.v1.Identity"
      optional :update_visibility, :enum, 8, "github.actions.runner_admin.api.v1.UpdateVisibility"
      optional :allow_public, :enum, 9, "github.actions.runner_admin.api.v1.UpdateAllowPublic"
      repeated :selected_workflow_refs, :string, 10
      optional :restricted_to_workflows, :enum, 11, "github.actions.runner_admin.api.v1.UpdateRestrictedToWorkflows"
      repeated :selected_entities, :message, 12, "github.actions.runner_admin.entities.v1.Identity"
      optional :is_default, :bool, 14
    end
    add_message "github.actions.runner_admin.api.v1.UpdateRunnerGroupResponse" do
      optional :runner_group, :message, 1, "github.actions.runner_admin.api.v1.RunnerGroup"
    end
    add_message "github.actions.runner_admin.api.v1.DeleteRunnerGroupRequest" do
      optional :entity, :message, 1, "github.actions.runner_admin.entities.v1.GitHubEntity"
      optional :group_id, :int64, 3
    end
    add_message "github.actions.runner_admin.api.v1.DeleteRunnerGroupResponse" do
      optional :status, :string, 1
    end
    add_message "github.actions.runner_admin.api.v1.GetRunnerRequest" do
      optional :entity, :message, 1, "github.actions.runner_admin.entities.v1.GitHubEntity"
      optional :id, :uint64, 2
    end
    add_message "github.actions.runner_admin.api.v1.GetRunnerResponse" do
      optional :runner, :message, 1, "github.actions.runner_admin.api.v1.Runner"
    end
    add_message "github.actions.runner_admin.api.v1.ListRunnersRequest" do
      optional :entity, :message, 1, "github.actions.runner_admin.entities.v1.GitHubEntity"
      optional :name, :string, 2
      optional :per_page, :int64, 3
      optional :page, :int64, 4
    end
    add_message "github.actions.runner_admin.api.v1.ListRunnersResponse" do
      repeated :runners, :message, 1, "github.actions.runner_admin.api.v1.Runner"
    end
    add_message "github.actions.runner_admin.api.v1.ListRunnersForGroupRequest" do
      optional :entity, :message, 1, "github.actions.runner_admin.entities.v1.GitHubEntity"
      optional :group_id, :int64, 2
      optional :per_page, :int64, 3
      optional :page, :int64, 4
    end
    add_message "github.actions.runner_admin.api.v1.ListRunnersForGroupResponse" do
      repeated :runners, :message, 1, "github.actions.runner_admin.api.v1.Runner"
    end
    add_message "github.actions.runner_admin.api.v1.AddRunnerRequest" do
      optional :entity, :message, 1, "github.actions.runner_admin.entities.v1.GitHubEntity"
      optional :group_id, :int64, 2
      optional :name, :string, 3
      optional :version, :string, 4
      optional :updates_disabled, :bool, 5
      repeated :labels, :message, 6, "github.actions.runner_admin.api.v1.AddLabelRequest"
      optional :ephemeral, :bool, 7
      optional :os, :string, 8
      optional :arch, :string, 9
      optional :public_key, :string, 10
    end
    add_message "github.actions.runner_admin.api.v1.RunnerAuthorization" do
      optional :authorization_url, :string, 1
      optional :client_id, :string, 2
      optional :server_url, :string, 3
    end
    add_message "github.actions.runner_admin.api.v1.AddRunnerResponse" do
      optional :runner, :message, 1, "github.actions.runner_admin.api.v1.Runner"
      optional :authorization, :message, 2, "github.actions.runner_admin.api.v1.RunnerAuthorization"
    end
    add_message "github.actions.runner_admin.api.v1.AddLabelRequest" do
      optional :name, :string, 1
      optional :type, :string, 2
    end
    add_message "github.actions.runner_admin.api.v1.UpdateRunnerRequest" do
      optional :entity, :message, 1, "github.actions.runner_admin.entities.v1.GitHubEntity"
      optional :id, :uint64, 2
      optional :group_id, :int64, 3
      optional :name, :string, 4
      optional :version, :string, 5
      optional :updates_disabled, :bool, 6
      repeated :labels, :message, 7, "github.actions.runner_admin.api.v1.AddLabelRequest"
      optional :ephemeral, :bool, 8
      optional :os, :string, 9
      optional :arch, :string, 10
      optional :public_key, :string, 11
      optional :replace_labels, :bool, 12
    end
    add_message "github.actions.runner_admin.api.v1.UpdateRunnerResponse" do
      optional :runner, :message, 1, "github.actions.runner_admin.api.v1.Runner"
      optional :authorization, :message, 2, "github.actions.runner_admin.api.v1.RunnerAuthorization"
    end
    add_message "github.actions.runner_admin.api.v1.DeleteRunnerRequest" do
      optional :entity, :message, 1, "github.actions.runner_admin.entities.v1.GitHubEntity"
      optional :runner_id, :uint64, 2
    end
    add_message "github.actions.runner_admin.api.v1.DeleteRunnerResponse" do
    end
  end
end

module GitHub
  module ActionsRunnerAdmin
    module Api
      module V1
        ListRunnerGroupsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.ListRunnerGroupsRequest").msgclass
        ListRunnerGroupsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.ListRunnerGroupsResponse").msgclass
        AddRunnerGroupRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.AddRunnerGroupRequest").msgclass
        AddRunnerGroupResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.AddRunnerGroupResponse").msgclass
        GetRunnerGroupRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.GetRunnerGroupRequest").msgclass
        GetRunnerGroupResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.GetRunnerGroupResponse").msgclass
        UpdateRunnerGroupRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.UpdateRunnerGroupRequest").msgclass
        UpdateRunnerGroupResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.UpdateRunnerGroupResponse").msgclass
        DeleteRunnerGroupRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.DeleteRunnerGroupRequest").msgclass
        DeleteRunnerGroupResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.DeleteRunnerGroupResponse").msgclass
        GetRunnerRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.GetRunnerRequest").msgclass
        GetRunnerResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.GetRunnerResponse").msgclass
        ListRunnersRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.ListRunnersRequest").msgclass
        ListRunnersResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.ListRunnersResponse").msgclass
        ListRunnersForGroupRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.ListRunnersForGroupRequest").msgclass
        ListRunnersForGroupResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.ListRunnersForGroupResponse").msgclass
        AddRunnerRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.AddRunnerRequest").msgclass
        RunnerAuthorization = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.RunnerAuthorization").msgclass
        AddRunnerResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.AddRunnerResponse").msgclass
        AddLabelRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.AddLabelRequest").msgclass
        UpdateRunnerRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.UpdateRunnerRequest").msgclass
        UpdateRunnerResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.UpdateRunnerResponse").msgclass
        DeleteRunnerRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.DeleteRunnerRequest").msgclass
        DeleteRunnerResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("github.actions.runner_admin.api.v1.DeleteRunnerResponse").msgclass
      end
    end
  end
end
