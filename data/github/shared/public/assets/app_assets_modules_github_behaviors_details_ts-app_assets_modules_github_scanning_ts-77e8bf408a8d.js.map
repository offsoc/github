{"version":3,"file":"app_assets_modules_github_behaviors_details_ts-app_assets_modules_github_scanning_ts-xxxxxxxxxxxx.js","mappings":"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","sources":["app/assets/modules/github/perform-transition.ts","app/assets/modules/github/behaviors/details.ts","app/assets/modules/github/behaviors/hash-change.ts","app/assets/modules/github/scanning.ts","ui/packages/aria-live/aria-live.ts","ui/packages/soft-nav/states.ts"],"sourcesContent":["// performTransition\n//\n// CSS3 transitions have some major pitfalls. First trying to transition\n// elements from `display:none` to `display:block.` And also dealing with\n// computed properties like `height:auto`.\n//\n// This helper attempts to deal with those issues while still defining\n// the transitions in pure css.\n//\n// Behaviors that intend to support these special case transitions\n// should call `performTransition` when they add or remove their state\n// classes.\n//\n// Any element that is performing a transition needs to be annotated\n// with the `js-transitionable` class name.\n//\n// @example\n//\n// <div class=\"js-transitionable collapse\">\n//   Slide down\n// </div>\n//\n// .collapse {\n//   display: none;\n//   position: relative;\n//   height: 0;\n//   overflow: hidden;\n//   @include transition(0.35s, height, ease);\n// }\n// .collapse.open {\n//   display: block;\n//   height: auto;\n// }\n//\n// performTransition document.querySelector('.collapse', () => {\n//   this.classList.add('open')\n// })\n\nconst supportsTransitions = 'ontransitionend' in window\n\n// DEPRECATED: PerformTransition is deprecated.\nexport default function performTransition(container: HTMLElement, cb: () => void) {\n  if (!supportsTransitions) {\n    cb()\n    return\n  }\n\n  const els = Array.from(container.querySelectorAll('.js-transitionable'))\n  if (container.classList.contains('js-transitionable')) els.push(container)\n\n  for (const el of els) {\n    const transitionHeight = isTransitioningHeight(el)\n    if (!(el instanceof HTMLElement)) continue\n\n    el.addEventListener(\n      'transitionend',\n      () => {\n        el.style.display = ''\n        el.style.visibility = ''\n\n        if (transitionHeight) {\n          withoutTransition(el, function () {\n            el.style.height = ''\n          })\n        }\n      },\n      {once: true},\n    )\n\n    el.style.boxSizing = 'content-box'\n    el.style.display = 'block'\n    el.style.visibility = 'visible'\n\n    if (transitionHeight) {\n      withoutTransition(el, function () {\n        el.style.height = getComputedStyle(el).height\n      })\n    }\n\n    // force reflow\n    el.offsetHeight\n  }\n\n  cb()\n\n  for (const el of els) {\n    if (!(el instanceof HTMLElement)) continue\n    if (isTransitioningHeight(el)) {\n      const currentHeight = getComputedStyle(el).height\n      el.style.boxSizing = ''\n      if (currentHeight === '0px') {\n        el.style.height = `${el.scrollHeight}px`\n      } else {\n        el.style.height = '0px'\n      }\n    }\n  }\n}\n\n// Detect if element is transitioning its height property.\nfunction isTransitioningHeight(el: Element) {\n  return getComputedStyle(el).transitionProperty === 'height'\n}\n\n// Apply style change callback w/o triggering a transition.\nfunction withoutTransition(el: HTMLElement, cb: () => void) {\n  el.style.transition = 'none'\n  cb()\n  el.offsetHeight\n  el.style.transition = ''\n}\n","/* eslint eslint-comments/no-use: off */\n/* eslint-disable github/no-then */\n\n/**\n * Details toggle.\n *\n * Use the details toggle to toggle content on the page. Similar to the\n * [HTML5 details element](https://www.w3.org/wiki/HTML/Elements/details).\n *\n * There are minimum two classes you will need to trigger the JS behavior.\n *\n * Apply the `.js-details-target` class to the element that will trigger\n * the toggle through a mouse click. For accessibility reasons, we recommend using a\n * `<button>` tag for this, but it can be applied to any element.\n *\n * A single `.js-details-container` class will be applied to a parent element that is wrapping\n * all the details components. The behavior will toggle an `Details--on` class on this element\n * which the CSS will use to show and hide the appropriate objects.\n *\n * There are default styling classes that will show and hide content for you. `.Details`\n * is a component that is built to show hidden content on open, and hide shown content\n * on close.\n *\n * The default state of the component is closed. Wrap the content and target with the `Details`\n * class. And apply `Details-content--hidden` to any element that you want *hidden* when closed\n * and *shown* when open.\n *\n * @example\n * ```html\n * <div class=\"Details js-details-container\">\n *   <button type=\"button\" class=\"js-details-target\" aria-expanded=\"false\">See more info</button>\n *   <div class=\"Details-content--hidden\">Hidden details</div>\n * </div>\n * ```\n *\n * Shown content\n *\n * If you have some content that you would like to be *shown* by default and\n * *hidden* when the details is `Details--on`. Then you can use the `Details-content--shown`\n * class.\n *\n * @example\n * ```html\n * <div class=\"Details js-details-container\">\n *   <button type=\"button\" class=\"js-details-target\" aria-expanded=\"false\" aria-label=\"Expand and collapse\">\n *     <%= octicon(\"chevron-down\", :class => \"Details-content--shown\") %>\n *     <%= octicon(\"chevron-up\", :class => \"Details-content--hidden\") %>\n *   </button>\n *   <div class=\"Details-content--shown\">Shown details</div>\n * </div>\n * ```\n *\n * For a11y reasons you can use the `data-label-open` and `data-label-closed` attributes\n * to set the aria-label of the button when the details is open or closed.\n *\n * @example\n * ```html\n * <div class=\"Details js-details-container\">\n *  <button type=\"button\" class=\"js-details-target\" aria-expanded=\"false\" aria-label=\"Expand\"\n *    data-aria-label-open=\"Collapse\" data-aria-label-closed=\"Expand\">\n *   <%= octicon(\"chevron-down\", :class => \"Details-content--shown\") %>\n *   <%= octicon(\"chevron-up\", :class => \"Details-content--hidden\") %>\n *  </button>\n *  <div class=\"Details-content--hidden\">Hidden details</div>\n * </div>\n */\n\nimport hashChange from './hash-change'\n// eslint-disable-next-line no-restricted-imports\nimport {on} from 'delegated-events'\nimport performTransition from '../perform-transition'\nimport {preservePosition} from 'scroll-anchoring'\n\nfunction findAndFocusByQuerySelector(container: HTMLElement, elements: string[]) {\n  elements.find(selector => {\n    const elementsFromSelector = Array.from(container.querySelectorAll<HTMLElement>(selector))\n    const lastVisibleElement = elementsFromSelector.findLast(el => {\n      return window.getComputedStyle(el).display !== 'none'\n    })\n\n    if (lastVisibleElement && document.activeElement !== lastVisibleElement) {\n      lastVisibleElement.focus()\n      return true // found\n    }\n  })\n}\n\nfunction restoreAutofocus(container: HTMLElement) {\n  findAndFocusByQuerySelector(container, ['.js-focus-on-dismiss', 'input[autofocus], textarea[autofocus]'])\n}\n\nfunction hideTooltip(target: HTMLElement) {\n  if (!target.classList.contains('tooltipped')) return\n  target.classList.remove('tooltipped')\n  target.addEventListener(\n    'mouseleave',\n    () => {\n      target.classList.add('tooltipped')\n      // eslint-disable-next-line github/no-blur\n      target.blur()\n    },\n    {once: true},\n  )\n}\n\nfunction groupMembers(group: string): Element[] {\n  return [...document.querySelectorAll('.js-details-container')].filter(\n    el => el.getAttribute('data-details-container-group') === group,\n  )\n}\n\nfunction containerTargets(container: Element): Element[] {\n  return [...container.querySelectorAll('.js-details-target')].filter(\n    target => target.closest('.js-details-container') === container,\n  )\n}\n\nfunction toggleGroup(container: Element, open: boolean): string | null {\n  const group = container.getAttribute('data-details-container-group')\n  if (!group) return null\n  preservePosition(container, () => {\n    for (const otherContainer of groupMembers(group)) {\n      if (otherContainer !== container) {\n        updateOpenState(otherContainer, open)\n      }\n    }\n  })\n  return group\n}\n\nfunction updateOpenState(container: Element, open: boolean) {\n  container.classList.toggle('open', open)\n  container.classList.toggle('Details--on', open)\n  if (open) {\n    const initialFocus = container.querySelector<HTMLElement>('.js-details-initial-focus')\n    if (initialFocus) {\n      setTimeout(() => {\n        initialFocus.focus()\n      }, 0)\n    }\n  }\n  for (const target of containerTargets(container)) {\n    target.setAttribute('aria-expanded', open.toString())\n    if (!target.hasAttribute('data-aria-label-open') || !target.hasAttribute('data-aria-label-closed')) continue\n    target.setAttribute(\n      'aria-label',\n      open ? target.getAttribute('data-aria-label-open')! : target.getAttribute('data-aria-label-closed')!,\n    )\n  }\n}\n\nexport function toggleDetailsTarget(target: HTMLElement, opts?: {withGroup?: boolean; force?: boolean}) {\n  const containerSelector = target.getAttribute('data-details-container') || '.js-details-container'\n  const container = target.closest<HTMLElement>(containerSelector)!\n  const open = opts?.force ?? !container.classList.contains('open')\n  const withGroup = opts?.withGroup ?? false\n  performTransition(container, () => {\n    updateOpenState(container, open)\n    const group = withGroup ? toggleGroup(container, open) : null\n    Promise.resolve().then(() => {\n      restoreAutofocus(container)\n      hideTooltip(target)\n      container.dispatchEvent(\n        new CustomEvent('details:toggled', {\n          bubbles: true,\n          cancelable: false,\n          detail: {open},\n        }),\n      )\n      if (group) {\n        container.dispatchEvent(\n          new CustomEvent('details:toggled-group', {\n            bubbles: true,\n            cancelable: false,\n            detail: {open, group},\n          }),\n        )\n      }\n    })\n  })\n}\n\nexport function isDetailsTargetExpanded(target: HTMLElement): boolean {\n  const containerSelector = target.getAttribute('data-details-container') || '.js-details-container'\n  const container = target.closest<HTMLElement>(containerSelector)!\n  const classList = container.classList\n  return classList.contains('Details--on') || classList.contains('open')\n}\n\nfunction handleDetailsTargetClick(event: Event) {\n  const withGroup = (event as MouseEvent).altKey\n  const target = event.currentTarget as HTMLElement\n  toggleDetailsTarget(target, {withGroup})\n  event.preventDefault()\n}\non('click', '.js-details-target', handleDetailsTargetClick)\n\n// Expand collapsed outdated diff if anchor points to it\n//   /github/github/pull/123#discussion-diff-456\n//   /github/github/pull/123#discussion-r345\nhashChange(function ({target}) {\n  if (target) ensureExpanded(target)\n})\n\nexport function ensureExpanded(target: Element) {\n  let toCollapse = false\n  let node = target.parentElement\n  while (node) {\n    if (node.classList.contains('Details-content--shown')) {\n      toCollapse = true\n    }\n    if (node.classList.contains('js-details-container')) {\n      node.classList.toggle('open', !toCollapse)\n      node.classList.toggle('Details--on', !toCollapse)\n      toCollapse = false\n    }\n    node = node.parentElement\n  }\n}\n","// Variant on the native `hashchange` event with extra features:\n//\n// * Guarantees that handlers run on DOMContentLoaded, or immediately if page has\n//   already loaded;\n// * If the anchor references an element by id, the `data.target` property of the\n//   argument passed to handlers will be a reference to that DOM element.\n//\n// Each handler will be invoked with a `data` object containing properties:\n//\n// * `oldURL` - String URL prior to the hash change, or `null` on initial page load;\n// * `newURL` - String URL after hash change, or current page URL;\n// * `target` - DOM element whose id matches the anchor value, or `null`.\n//\n// Examples\n//\n// ```js\n// // Redirect old anchor issue urls\n// hashChange((data) => {\n//   const m = data.newURL.match(/\\/issues#issue\\/(\\d+)$/)\n//   if (m) window.location = data.newURL.replace(/\\/?#issue\\/.+/, \"/#{m[1]}\")\n// })\n//\n// // Ensure that the referenced comment's parent container is visible\n// hashChange((data) => {\n//   const container = data.target && data.target.closest('.js-comments-container')\n//   if (container) container.classList.remove('d-none')\n// })\n// ```\n\nimport {ready} from '@github-ui/document-ready'\nimport {SOFT_NAV_STATE} from '@github-ui/soft-nav/states'\n\nconst handlers: HashChangeListener[] = []\nlet ran = 0\n\ntype HashChangeListener = (opts: {oldURL: string | null; newURL: string; target?: Element | null}) => unknown\n\nexport default function hashChange(handler: HashChangeListener) {\n  ;(async function () {\n    handlers.push(handler)\n    await ready\n    runRemainingHandlers()\n  })()\n}\n\nhashChange.clear = () => {\n  handlers.length = ran = 0\n}\n\nfunction runRemainingHandlers() {\n  const index = ran\n  ran = handlers.length\n  runHandlers(handlers.slice(index), null, window.location.href)\n}\n\nfunction runHandlers(handlersToRun: HashChangeListener[], oldURL: string | null, newURL: string) {\n  const id = window.location.hash.slice(1)\n  const target = id ? document.getElementById(id) : null\n  const data = {oldURL, newURL, target}\n\n  for (const fn of handlersToRun) {\n    fn.call(null, data)\n  }\n}\n\n// Track ieOldURL manually to work around an open IE bug where the hashchange\n// event does not have oldURL or newURL attributes. See\n// https://connect.microsoft.com/IE/feedback/details/828283/implement-hashchangeevent-oldurl-and-newurl\nlet ieOldURL = window.location.href\nwindow.addEventListener('popstate', function () {\n  ieOldURL = window.location.href\n})\n\nwindow.addEventListener('hashchange', function (event) {\n  const newURL = window.location.href\n  try {\n    runHandlers(handlers, event.oldURL || ieOldURL, newURL)\n  } finally {\n    ieOldURL = newURL\n  }\n})\n\nlet softNavOldURL: string | null = null\n\ndocument.addEventListener(SOFT_NAV_STATE.START, function () {\n  softNavOldURL = window.location.href\n})\n\ndocument.addEventListener(SOFT_NAV_STATE.SUCCESS, function () {\n  runHandlers(handlers, softNavOldURL, window.location.href)\n})\n","import {announceFromElement} from '@github-ui/aria-live'\n// eslint-disable-next-line no-restricted-imports\nimport {on} from 'delegated-events'\n\nfunction copyInput(inputToCopy: HTMLInputElement): HTMLInputElement {\n  const input = document.createElement('input')\n  input.setAttribute('type', 'hidden')\n  input.setAttribute('name', inputToCopy.name)\n  input.setAttribute('value', inputToCopy.value)\n  return input\n}\n\n// Add the checked alerts to all the bulk action forms\nfunction copyCheckedAlertsToBulkActionForms(container: Element) {\n  let disableReopenButton = false\n  const fixedAlertNumbersElements = container.querySelectorAll<HTMLElement>('.js-scanning-fixed-alert-numbers')\n  const fixedAlertNumbers: number[] =\n    fixedAlertNumbersElements.length !== 0\n      ? JSON.parse(fixedAlertNumbersElements[0]!.getAttribute('data-numbers') || '[]')\n      : []\n\n  for (const items of container.querySelectorAll<HTMLElement>('.js-scanning-bulk-action-items')) {\n    // Remove any previous alert elements from the form\n    items.textContent = ''\n\n    // Copy the checked items to the form\n    const checkedAlerts = container.querySelectorAll<HTMLInputElement>(\n      '.js-scanning-alert-list [data-check-all-item]:checked',\n    )\n    for (const checked of checkedAlerts) {\n      // If any of the checked alerts are fixed, then disable the reopen button\n      // as it only works for manually resolved alerts\n      disableReopenButton ||= fixedAlertNumbers.indexOf(parseInt(checked.value)) !== -1\n      items.appendChild(copyInput(checked))\n    }\n  }\n\n  for (const reopenButton of container.querySelectorAll<HTMLButtonElement>('.js-scanning-reopen-button')) {\n    reopenButton.hidden = disableReopenButton\n  }\n  for (const reopenButtonDisabled of container.querySelectorAll<HTMLButtonElement>(\n    '.js-scanning-reopen-button-disabled',\n  )) {\n    reopenButtonDisabled.hidden = !disableReopenButton\n  }\n}\n\non('click', '.js-scanning-reopen-button-disabled', function (event: Event) {\n  // Prevent the button from being clicked (we don't use disabled=\"true\" because we want it to be focus-able)\n  event.preventDefault()\n})\n\non('change', '.js-scanning-alert-check', function ({currentTarget}) {\n  const container = currentTarget.closest<HTMLElement>('.js-scanning-alert-list')!\n  const checked = container.querySelector('.js-scanning-alert-check:checked') != null\n  const filterOptions = container.querySelector<HTMLElement>('.js-scanning-filter-options')\n  const bulkActions = container.querySelector<HTMLElement>('.js-scanning-alert-bulk-actions')\n  const selectionStatus = bulkActions?.querySelector<HTMLElement>('[role=status]')\n  const alertLinks = container.querySelector<HTMLElement>('.js-scanning-alert-links')\n\n  if (filterOptions) {\n    filterOptions.style.visibility = checked ? 'hidden' : 'visible'\n  }\n  if (bulkActions) {\n    const bulkActionsChangingVisibility = bulkActions.hidden === checked\n    bulkActions.hidden = !checked\n\n    // Tell screenreaders that there's new status information available\n    // (how many items are selected).\n    // This is only necessary when the bulk actions UI is changing visibility as\n    // otherwise the screenreader will notice the update to the live region that's\n    // already visible. Note that VoiceOver on MacOS will announce the information\n    // without this announceFromElement call, but\n    // https://github.com/github/accessibility/blob/6aac4f4b3d25013274d39c2cdf1b4be43570eece/docs/coaching-recommendations/toast-flash-banner/accessible-banner-prototype.md#challenges-with-dynamically-inserted-live-region\n    // suggests this shouldn't be relied on for screenreaders in general.\n    if (bulkActionsChangingVisibility && selectionStatus) {\n      // If the bulk actions are now hidden, it'll announce \"0 selected\", which is helpful clarification\n      announceFromElement(selectionStatus)\n    }\n  }\n  if (alertLinks) {\n    alertLinks.style.visibility = checked ? 'hidden' : 'visible'\n  }\n  copyCheckedAlertsToBulkActionForms(container)\n})\n\non(\n  'click',\n  '.js-scanning-code-path-menu-item',\n  function (event) {\n    if (event.currentTarget === null || !(event.currentTarget instanceof Element)) return\n    const targetCodePath = event.currentTarget.getAttribute('data-target-code-path')\n    for (const pathButton of document.querySelectorAll<HTMLElement>('.js-scanning-code-path-menu-item')) {\n      pathButton.ariaChecked = 'false'\n    }\n    event.currentTarget.ariaChecked = 'true'\n    for (const codePath of document.querySelectorAll<HTMLElement>('.js-scanning-code-path')) {\n      codePath.hidden = targetCodePath !== codePath.getAttribute('data-code-path')\n    }\n  },\n  {capture: true},\n)\n","import {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {\n  announce as liveRegionAnnounce,\n  announceFromElement as liveRegionAnnounceFromElement,\n} from '@primer/live-region-element'\n\nexport interface ElementWithAriaNotify extends Element {\n  ariaNotify: (\n    message: string,\n    options?: {interrupt?: 'none' | 'pending' | 'all'; priority?: 'none' | 'important'},\n  ) => void\n}\n\n/**\n * Troubleshooting guide for aria-live regions available on the Hub\n * - https://thehub.github.com/epd/engineering/dev-practicals/frontend/accessibility/readiness-routine/screenreaders/live-regions-and-focus-management-techniques/#why-isnt-my-live-region-working-as-i-expect\n */\n\n// Announce an element's text to the screen reader.\nexport function announceFromElement(el: HTMLElement, options?: {assertive?: boolean; element?: HTMLElement}) {\n  if (isFeatureEnabled('arianotify_comprehensive_migration')) {\n    announce(getTextContent(el), {...options, element: options?.element ?? el})\n  } else if (isFeatureEnabled('primer_live_region_element') && options?.element === undefined) {\n    liveRegionAnnounceFromElement(el, {\n      politeness: options?.assertive ? 'assertive' : 'polite',\n    })\n  } else {\n    announce(getTextContent(el), options)\n  }\n}\n\n// Announce message update to screen reader.\n// Note: Use caution when using this function while a dialog is active.\n// If the message is updated while the dialog is open, the screen reader may not announce the live region.\n// For more information, view the document on dialog and live region support: https://github.com/github/accessibility/blob/main/docs/dialog-live-region-support.md\nexport function announce(message: string, options?: {assertive?: boolean; element?: HTMLElement}) {\n  const {assertive, element} = options ?? {}\n\n  if (isFeatureEnabled('arianotify_comprehensive_migration') && 'ariaNotify' in Element.prototype) {\n    ;((element || document.body) as Element as ElementWithAriaNotify).ariaNotify(message, {\n      interrupt: options?.assertive ? 'all' : 'none',\n    })\n  } else if (isFeatureEnabled('primer_live_region_element') && element === undefined) {\n    liveRegionAnnounce(message, {\n      politeness: assertive ? 'assertive' : 'polite',\n    })\n  } else {\n    setContainerContent(message, assertive, element)\n  }\n}\n\n// Set aria-live container to message.\nfunction setContainerContent(message: string, assertive?: boolean, element?: HTMLElement) {\n  const getQuerySelector = () => {\n    return assertive ? '#js-global-screen-reader-notice-assertive' : '#js-global-screen-reader-notice'\n  }\n  const container = element ?? ssrSafeDocument?.querySelector(getQuerySelector())\n  if (!container) return\n  if (container.textContent === message) {\n    /* This is a hack due to the way the aria live API works.\n    A screen reader will not read a live region again\n    if the text is the same. Adding a space character tells\n    the browser that the live region has updated,\n    which will cause it to read again, but with no audible difference. */\n    container.textContent = `${message}\\u00A0`\n  } else {\n    container.textContent = message\n  }\n}\n\n// Gets the trimmed text content of an element.\nfunction getTextContent(el: HTMLElement): string {\n  // innerText does not contain hidden text\n  /* eslint-disable-next-line github/no-innerText */\n  return (el.getAttribute('aria-label') || el.innerText || '').trim()\n}\n","export const SOFT_NAV_STATE = Object.freeze({\n  INITIAL: 'soft-nav:initial',\n  START: 'soft-nav:start',\n  SUCCESS: 'soft-nav:success',\n  ERROR: 'soft-nav:error',\n  FRAME_UPDATE: 'soft-nav:frame-update',\n  END: 'soft-nav:end',\n  RENDER: 'soft-nav:render',\n  PROGRESS_BAR: {\n    START: 'soft-nav:progress-bar:start',\n    END: 'soft-nav:progress-bar:end',\n  },\n})\n"],"names":["supportsTransitions","window","isTransitioningHeight","el","getComputedStyle","transitionProperty","withoutTransition","cb","style","transition","offsetHeight","updateOpenState","container","open","classList","toggle","initialFocus","querySelector","setTimeout","focus","target","querySelectorAll","filter","closest","setAttribute","toString","hasAttribute","getAttribute","toggleDetailsTarget","opts","containerSelector","force","contains","withGroup","performTransition","els","Array","from","push","transitionHeight","HTMLElement","addEventListener","display","visibility","height","once","boxSizing","currentHeight","scrollHeight","group","toggleGroup","preservePosition","otherContainer","document","Promise","resolve","then","findAndFocusByQuerySelector","elements","find","selector","lastVisibleElement","elementsFromSelector","findLast","activeElement","remove","add","blur","dispatchEvent","CustomEvent","bubbles","cancelable","detail","isDetailsTargetExpanded","ensureExpanded","toCollapse","node","parentElement","on","event","altKey","currentTarget","preventDefault","hashChange","handlers","ran","handler","ready","runRemainingHandlers","index","length","runHandlers","slice","location","href","handlersToRun","oldURL","newURL","id","hash","data","getElementById","fn","call","clear","ieOldURL","softNavOldURL","SOFT_NAV_STATE","START","SUCCESS","checked","filterOptions","bulkActions","selectionStatus","alertLinks","bulkActionsChangingVisibility","hidden","announceFromElement","copyCheckedAlertsToBulkActionForms","disableReopenButton","fixedAlertNumbersElements","fixedAlertNumbers","JSON","parse","items","textContent","indexOf","parseInt","value","appendChild","copyInput","inputToCopy","input","createElement","name","reopenButton","reopenButtonDisabled","Element","targetCodePath","pathButton","ariaChecked","codePath","capture","options","isFeatureEnabled","announce","getTextContent","element","undefined","liveRegionAnnounceFromElement","politeness","assertive","message","prototype","body","ariaNotify","interrupt","liveRegionAnnounce","setContainerContent","ssrSafeDocument","innerText","trim","Object","freeze","INITIAL","ERROR","FRAME_UPDATE","END","RENDER","PROGRESS_BAR"],"sourceRoot":""}