# typed: false

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `monolith-twirp-insights-sql` gem.
# Please instead update this file by running `bin/tapioca gem monolith-twirp-insights-sql`.

module Google::Protobuf::MessageExts::ClassMethods; end

# source://monolith-twirp-insights-sql//lib/monolith-twirp-insights-sql.rb#7
module Monolith; end

# source://monolith-twirp-insights-sql//lib/monolith-twirp-insights-sql.rb#8
module Monolith::Twirp; end

# source://monolith-twirp-insights-sql//lib/monolith-twirp-insights-sql.rb#9
module Monolith::Twirp::Insights; end

# source://monolith-twirp-insights-sql//lib/monolith-twirp-insights-sql.rb#10
module Monolith::Twirp::Insights::Sql; end

# source://monolith-twirp-insights-sql//lib/monolith-twirp-insights-sql.rb#11
class Monolith::Twirp::Insights::Sql::Error < ::StandardError; end

# source://monolith-twirp-insights-sql//lib/monolith_twirp/insights/sql/version.rb#3
module MonolithTwirp; end

# source://monolith-twirp-insights-sql//lib/monolith_twirp/insights/sql/version.rb#4
module MonolithTwirp::Insights; end

# source://monolith-twirp-insights-sql//lib/monolith_twirp/insights/sql/version.rb#5
module MonolithTwirp::Insights::Sql; end

# source://monolith-twirp-insights-sql//lib/monolith_twirp/insights/sql/v1/sql_api_pb.rb#69
module MonolithTwirp::Insights::Sql::V1; end

class MonolithTwirp::Insights::Sql::V1::HealthRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Insights::Sql::V1::HealthResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

# source://monolith-twirp-insights-sql//lib/monolith_twirp/insights/sql/v1/sql_api_twirp.rb#16
class MonolithTwirp::Insights::Sql::V1::SqlAPIClient < ::Twirp::Client
  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def health(input, req_opts = T.unsafe(nil)); end

  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def query(input, req_opts = T.unsafe(nil)); end
end

class MonolithTwirp::Insights::Sql::V1::SqlAPIColumn
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Insights::Sql::V1::SqlAPIData
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Insights::Sql::V1::SqlAPIError
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Insights::Sql::V1::SqlAPIQueryRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module MonolithTwirp::Insights::Sql::V1::SqlAPIQueryRequest::EntityType
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-insights-sql//lib/monolith_twirp/insights/sql/v1/sql_api_pb.rb#73
MonolithTwirp::Insights::Sql::V1::SqlAPIQueryRequest::EntityType::ENTITY_TYPE_BUSINESS = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-insights-sql//lib/monolith_twirp/insights/sql/v1/sql_api_pb.rb#73
MonolithTwirp::Insights::Sql::V1::SqlAPIQueryRequest::EntityType::ENTITY_TYPE_INVALID = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-insights-sql//lib/monolith_twirp/insights/sql/v1/sql_api_pb.rb#73
MonolithTwirp::Insights::Sql::V1::SqlAPIQueryRequest::EntityType::ENTITY_TYPE_ORGANIZATION = T.let(T.unsafe(nil), Integer)

class MonolithTwirp::Insights::Sql::V1::SqlAPIQueryResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Insights::Sql::V1::SqlAPIRow
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::Insights::Sql::V1::SqlAPIRowData
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

# source://monolith-twirp-insights-sql//lib/monolith_twirp/insights/sql/v1/sql_api_twirp.rb#9
class MonolithTwirp::Insights::Sql::V1::SqlAPIService < ::Twirp::Service; end

# source://monolith-twirp-insights-sql//lib/monolith_twirp/insights/sql/version.rb#6
MonolithTwirp::Insights::Sql::VERSION = T.let(T.unsafe(nil), String)
