<% dco_signoff_enabled = pull.repository.dco_signoff_enabled? %>
<% disallowed_by_protected_branch = pull.head_branch_rule_evaluator && !pull.head_branch_rule_evaluator.commit_authorized?(current_user) %>

<%
  title =
    if disallowed_by_protected_branch
      "Can't update a protected branch."
    else
      "Heads up, this will commit to #{pull.head_ref_name}."
    end
%>

<%= render(Primer::Alpha::Dialog.new(title: title, id: 'conflicted-files-branch-selector')) do |d| %>
  <% d.with_show_button(scheme: :primary) do %>
    <%= dco_signoff_enabled ? "Sign off and commit merge" : "Commit merge" %>
  <% end %>

  <% d.with_header(show_divider: true) do %>
    <div>
      <%= render(Primer::Beta::Octicon.new(icon: "alert")) %>
      <% if disallowed_by_protected_branch %>
        Can't update a protected branch.
      <% else %>
        Heads up, this will commit to <strong class="branch-name"><%= pull.head_ref_name %></strong>.
      <% end %>
    </div>
 <% end %>

  <% d.with_body do %>
    <% if pull.head_repository.writable_by?(current_user) %>
      <%= render partial: "pull_requests/conflicted_files_form", locals: {
          pull: pull,
          adjust_pull: true,
          in_dialog: true,
          button_class: "Truncate-text btn btn-block"
      } %>
    <% else %>
      <%= render partial: "pull_requests/conflicted_files_form", locals: {
                 pull: pull,
                 in_dialog: true,
                 button_text: "I understand, #{dco_signoff_enabled ? "sign off and " : ""}update #{pull.head_ref_name}",
                 button_class: "btn btn-block" } %>
    <% end %>
  <% end %>
<% end %>
