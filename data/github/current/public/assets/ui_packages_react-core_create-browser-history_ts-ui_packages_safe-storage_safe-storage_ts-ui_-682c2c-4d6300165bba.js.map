{"version":3,"file":"ui_packages_react-core_create-browser-history_ts-ui_packages_safe-storage_safe-storage_ts-ui_-682c2c-xxxxxxxxxxxx.js","mappings":"yPAIO,SAASA,EAAkB,CAACC,SAAAA,CAAQ,CAAEC,QAAAA,CAAO,CAAEC,SAAAA,CAAQ,CAAEC,SAAAA,CAAQ,CAA4C,EAClH,IAAMC,EAAQC,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,IAAO,EAACJ,QAAAA,EAASC,SAAAA,EAAUC,SAAAA,CAAQ,GAAI,CAACF,EAASC,EAAUC,EAAS,EAC1F,MAAO,UAACG,EAAAA,CAAgBA,CAACC,QAAQ,EAACH,MAAOA,E,SAAQJ,C,EACnD,CAEA,GAAG,CAAED,EAAkBS,WAAW,EAA7BT,CAAAA,EAAkBS,WAAW,CAAK,mBAAkB,CAAE,CAAE,KAAM,CAAC,C,mCCC7D,IAAMF,EAAmBG,CAAAA,EAAAA,E,OAAAA,aAAAA,EAA2C,K,sBCLvEC,EAEG,SAASC,IACd,GAAI,CAACD,EACH,MAAM,MACJ,gNAIJ,OAAOA,CACT,CAEO,SAASE,IACd,OAAOF,GAAKG,QAAU,OACxB,C,2BAiBAC,WAdE,GAAI,oBAAOC,SAA0B,CACnC,IAAMC,EAASD,SAASE,cAAc,CAAC,cACvC,GAAID,EACF,GAAI,CACFN,EAAMQ,KAAKC,KAAK,CAACH,EAAOI,WAAW,EAAI,GACzC,CAAE,MAAOC,EAAO,CAEdC,QAAQD,KAAK,CAAC,2BAA4BA,EAC5C,CAEJ,CACF,G,yDC1BO,IAAME,EACX,EAAIC,EAAeA,EAAEC,aAAe,eAAiBD,EAAAA,EAAeA,EAAEC,aAAe,WAC5EC,QAAQC,OAAO,GAEf,IAAID,QAAcC,IACvBH,EAAAA,EAAeA,EAAEI,iBAAiB,mBAAoB,KACpDD,GACF,EACF,GAQSE,EACX,EAAIL,EAAeA,EAAEC,aAAe,WAC3BC,QAAQC,OAAO,GAEf,IAAID,QAAQC,IACjBG,EAAAA,EAAaA,EAAEF,iBAAiB,OAAQD,EAC1C,E,+ECzBJ,SAASI,IAGP,OAAO,IAAIC,IADeC,CADTtB,EAAAA,EAAAA,EAAAA,IAASuB,YAAY,CACHC,GAAG,CAACC,GAAWA,EAAQC,WAAW,IAEvE,CAEA,IAAMC,EACJC,E,OAAAA,EAASA,CAAsCR,EAAwBS,CAAAA,EAAAA,EAAAA,CAAAA,EAAQT,GAE1E,SAASU,IACd,OAAOC,MAAMC,IAAI,CAACL,IACpB,CAEO,SAASM,EAAiBC,CAAY,EAC3C,OAAOP,IAAcQ,GAAG,CAACD,EAAKR,WAAW,GAC3C,CAGA,IAAMU,EAAc,CAACH,iBAAAA,CAAgB,C,mCCnB9B,IAAMI,EAAqC,IAAM,KAAK,C,mCCMtD,IAAMC,EAAaxC,CAAAA,EAAAA,E,OAAAA,aAAAA,EAA8B,K,kDCgCjD,SAASyC,EAAqBC,EAAiC,CAAC,CAAC,MAMlEC,EADJ,IAAMC,EAAUC,CAAAA,EAAAA,EAAAA,EAAAA,EAA2B,CAAC,GAAGH,CAAO,CAAEI,SAAU,EAAI,GAElEC,EAAsB,EAAE,CACxBC,EAA0B,GA4B9B,SAASC,EAAcC,CAAc,EACnC,GAAIH,EAASI,MAAM,CAAG,EACpB,IAAK,IAAMC,KAAWL,EACpBK,EAAQ,CACNC,QACEH,GACF,CACF,QAGFA,GAEJ,CAEA,OAxCAN,EAAQU,MAAM,CAAC,IACb,GAAIN,EAAyB,CAC3BA,EAA0B,GAC1B,MACF,CAEA,GAAIO,EAAOC,MAAM,GAAKC,EAAAA,EAAMA,CAACC,GAAG,EAAIX,EAASI,MAAM,EAAII,OAAAA,EAAOI,KAAK,EAAaZ,EAASI,MAAM,CAAG,EAAG,CACnG,IAAMQ,EAAQJ,EAAOI,KAAK,CAO1B,IAAK,IAAMP,KAHXJ,EAA0B,GAC1BJ,EAAQgB,EAAE,CAACD,GAAAA,GAEWZ,GACpBK,EAAQ,CACNC,QACET,EAAQgB,EAAE,CAACD,EACb,CACF,EAEJ,MACEhB,IAAWY,EAEf,GAgBO,CACL,IAAIC,QAAS,CACX,OAAOZ,EAAQY,MAAM,EAGvB,IAAIK,UAAW,CACb,OAAOjB,EAAQiB,QAAQ,EAGzBC,WAAAA,GACSlB,EAAQkB,UAAU,CAACC,GAG5BC,UAAAA,GACSpB,EAAQoB,SAAS,CAACD,GAG3BE,eAAAA,GACSrB,EAAQqB,cAAc,CAACF,GAGhCG,KAAKH,CAAM,CAAEI,CAAe,EAC1BlB,EAAc,IAAML,EAAQsB,IAAI,CAACH,EAAII,GACvC,EAEAC,QAAQL,CAAM,CAAEI,CAAe,EAC7BlB,EAAc,IAAML,EAAQwB,OAAO,CAACL,EAAII,GAC1C,EAEAP,GAAGD,CAAa,EACdV,EAAc,IAAML,EAAQgB,EAAE,CAACD,GACjC,EAEAL,OAAOe,CAAqB,EAC1B,GAAI1B,EACF,MAAM,MAAU,qDAElBA,EAAW0B,EACM,KACf1B,EAAW2B,KAAAA,CACb,CAEF,EAKAC,MAAAA,IACExB,EAASmB,IAAI,CAACd,GAEE,KACdL,EAAWA,EAASyB,MAAM,CAACC,GAAKA,IAAMrB,EACxC,EAGJ,CACF,C,mCCnJO,IAAMsB,EAA2C,CACtD,oBAAqB,2FACvB,C,sBC6BIC,E,gCA7BJ,IAAMrE,EAAWsE,WAAWtE,QAAQ,CAmBpC,SAASuE,EAAcnC,CAAwC,EAG7D,MAAO,CACLoC,UAAWC,SAfYC,CAAa,EACtC,OAAQA,GACN,IAAK,QACH,MAAO,KACT,KAAK,OACH,MAAO,OACT,SACE,MAAO,MACX,CACF,EAGetC,EAAQoC,SAAS,EAI5BG,UAAWvC,EAAQwC,UAAU,CAC7BC,YAAazC,EAAQ0C,SAAS,CAElC,CAiCA,MAAe9E,EArBf,WACE,GAAM,CAAC+E,gBAAAA,CAAe,CAAC,CAAG/E,EAEpB,CAACwE,EAAWQ,EAAa,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAAMV,EAAcQ,EAAgBG,OAAO,GAetF,MAbAC,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KAGR,IAAMC,EAAW,IAAIC,iBAAiB,IAAML,EAAaT,EAAcQ,EAAgBG,OAAO,IAO9F,OALAE,EAASE,OAAO,CAACP,EAAiB,CAChCQ,WAAY,GACZC,gBAAiB,CAAC,kBAAmB,mBAAoB,kBAAkB,GAGtE,IAAMJ,EAASK,UAAU,EAClC,EAAG,CAACV,EAAgB,EAEbP,CACT,EAvBA,WACE,OAAOD,EAAcF,GAAc,CAAC,EACtC,C,oECpCA,IAAMqB,EAAqBjE,CAAAA,EAAAA,EAAAA,CAAAA,EAK3B,WACE,OAAOhB,EAAAA,EAAeA,EAAEkF,MAAMC,cAA+B,qCAAqCC,SAAW,EAC/G,GAEaC,EAAerE,CAAAA,EAAAA,EAAAA,CAAAA,EAC5B,WACE,MAAOiE,eAAAA,GACT,GAGaK,EAA2CC,oB,qECTxD,YAAMC,YACJC,SAAU,CACR,OAAO,IACT,CAEAC,SAAU,CAEV,CAEAC,YAAa,CAEb,CAEAC,OAAQ,CAER,CAEAC,KAAM,CACJ,OAAO,IACT,CAEA,IAAIzD,QAAS,CACX,OAAO,CACT,CACF,EAiBe,SAAS0D,EACtBC,CAA0B,CAC1BpE,EAA8B,CAACqE,sBAAuB,EAAK,CAAC,CAC5DC,EAAS3F,EAAAA,EAAa,CACtB4F,EAAoCtH,GAASA,CAAqB,CAClEuH,EAAkC,GAAcvH,CAA0B,MAEtEwH,EACJ,GAAI,CACF,GAAI,CAACH,EAEH,MAAM,QAGRG,EAAUH,CAAM,CAACF,EAAW,EAAI,IAAIP,CACtC,CAAE,KAAM,CACNY,EAAU,IAAIZ,CAChB,CAEA,GAAM,CAACQ,sBAAAA,CAAqB,CAAC,CAAGrE,EAEhC,SAAS0E,EAAUR,CAAgC,EAC7ClE,EAAQ2E,cAAc,EACxBC,CAAAA,EAAAA,EAAAA,CAAAA,EAAU,CAACC,aAAcX,CAAG,EAEhC,CA6CA,SAASF,EAAWE,CAAW,EAC7B,GAAI,CAEF,GADAO,EAAQT,UAAU,CAACE,GACflE,EAAQ8E,GAAG,CAAE,CACf,IAAMC,EAAY,CAAC,EAAEb,EAAI,OAAO,CAAC,CACjCO,EAAQT,UAAU,CAACe,EACrB,CACF,CAAE,MAAO7G,EAAO,CAEhB,CACF,CAEA,MAAO,CACL4F,QAvDF,SAAiBI,CAAW,CAAEc,EAAc,IAAIC,OAAOC,OAAO,EAAE,EAC9D,GAAI,CACF,IAAMjI,EAAQwH,EAAQX,OAAO,CAACI,GAC9B,GAAI,CAACjH,EACH,OAAO,KAET,IAAM8H,EAAY,CAAC,EAAEb,EAAI,OAAO,CAAC,CAC3BiB,EAASC,OAAOX,EAAQX,OAAO,CAACiB,IACtC,GAAII,GAAUH,EAAMG,EAIlB,OAHAnB,EAAWE,GACXF,EAAWe,GACXL,EAAU,8BACH,KAGP,OADAA,EAAU,iCACHH,EAAYtH,EAEvB,CAAE,MAAOiB,EAAO,CAEd,OAAO,IACT,CACF,EAmCE6F,QA5BF,SAAiBG,CAAW,CAAEjH,CAAQ,CAAE+H,EAAc,IAAIC,OAAOC,OAAO,EAAE,EACxE,GAAI,CAEF,GADAT,EAAQV,OAAO,CAACG,EAAKM,EAAUvH,IAC3B+C,EAAQ8E,GAAG,CAAE,CACf,IAAMC,EAAY,CAAC,EAAEb,EAAI,OAAO,CAAC,CAC3BiB,EAASH,EAAMhF,EAAQ8E,GAAG,CAChCL,EAAQV,OAAO,CAACgB,EAAWI,EAAOE,QAAQ,GAC5C,CACF,CAAE,MAAOnH,EAAO,CACd,GAAImG,GAAyBnG,aAAiBoH,OAASpH,EAAMqH,OAAO,CAACrG,WAAW,GAAGsG,QAAQ,CAAC,SAAU,MAAMtH,CAC9G,CACF,EAkBE8F,WAAAA,EACAC,MAAOQ,EAAQR,KAAK,CACpBC,IAAKO,EAAQP,GAAG,CAChB,IAAIzD,QAAS,CACX,OAAOgE,EAAQhE,MAAM,CAEzB,CACF,CAEO,SAASgF,EAAmBC,CAA8B,EAC/D,OAAOvB,EACLuB,EACA,CAACrB,sBAAuB,EAAK,EAC7B1F,EAAAA,EAAaA,CACbZ,KAAKC,KAAK,CACVD,KAAK4H,SAAS,CAElB,C,uMCpJO,IAAMtH,EAAkB,oBAAOT,SAA2BgE,KAAAA,EAAYhE,SAEhEe,EAAgB,oBAAOiH,OAAyBhE,KAAAA,EAAYgE,OAE5DC,EAAiB,oBAAO3F,QAA0B0B,KAAAA,EAAY1B,QAE9D4F,EAEX,oBAAO3E,SAA2B,CAAC4E,SAAU,GAAIC,OAAQ,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,KAAM,EAAE,EAAIhF,Q,qECP1F,IAAM/B,EAAY,KAA2B,IAApBf,EAAAA,EAAeA,CAKlC+H,EAAa,CAAChH,EAOpB,SAASiH,UACd,EAAIjH,GAIGkH,CAAAA,CAAQjI,EAAAA,EAAeA,CAAEmF,aAAa,CAAC,6BAChD,C,qGCjBA,IAAI+C,EAA+B,EAAE,CAG9B,SAAS3B,EAAU4B,CAAyB,CAAEC,EAAmB,EAAK,CAAEC,EAAsB,EAAG,EACtG,GAAIjH,CAA+C,IAA/CA,CAAAA,EAAAA,EAAAA,EAAAA,EAAiB,2BAGrB,GAAIiH,EAAsB,GAAKA,EAAsB,EACnD,MAAM,WAAe,+CAGA9E,MAAAA,IAAnB4E,EAAKG,SAAS,EAAgBH,CAAAA,EAAKG,SAAS,CAAG,IAAI1B,OAAOC,OAAO,EAAC,EACtEsB,EAAKI,QAAQ,CA0FN,CAAC,CAACvI,EAAAA,EAAeA,EAAEkF,MAAMC,cAA+B,4BAA4BC,QAzF3F+C,EAAKK,KAAK,CAAGC,IACbN,EAAK7C,OAAO,CAAGA,EAAAA,CAAOA,CAClBoD,KAAKC,MAAM,GAAKN,GAClBH,EAAM/E,IAAI,CAACgF,GAGTC,EACFQ,IAEAC,IAEJ,CAEA,IAAIC,EAAwB,KAEtBD,EAA6BE,CAAAA,EAAAA,EAAAA,CAAAA,EAAS,iBAC1C,MAAM1I,EAAAA,CAAMA,CACE,MAAVyI,GACFA,CAAAA,EAASvB,OAAOyB,mBAAmB,CAACJ,EAAU,CAElD,EAAG,KAEH,SAASA,IAEP,GADAE,EAAS,KACL,CAACZ,EAAM9F,MAAM,CACf,OAGF,IAAM6G,EAAMjJ,EAAAA,EAAeA,EAAEkF,MAAMC,cAA+B,mCAAmCC,QACrG,GAAK6D,GAML,IAAK,IAAMC,KAFKC,SAYEC,CAA4B,EAC9C,IAAMC,EAAsB,EAAE,CACxBC,EAAcF,EAAMzI,GAAG,CAAC4I,GAAQ7J,KAAK4H,SAAS,CAACiC,IAErD,KAAOD,EAAYlH,MAAM,CAAG,GAC1BiH,EAAQlG,IAAI,CAACqG,SAQEF,CAAqB,EACtC,IAAMG,EAAYH,EAAYI,KAAK,GAC7BR,EAAkB,CAACO,EAAU,CAC/BE,EAAOF,EAAUrH,MAAM,CAE3B,KAAOkH,EAAYlH,MAAM,CAAG,GAAKuH,GA3EjB,OA2EoC,CAClD,IAAMC,EAAeN,CAAW,CAAC,EAAE,CAAElH,MAAM,CAE3C,GAAIuH,EAAOC,GA9EG,MA8EwB,CACpC,IAAMC,EAAaP,EAAYI,KAAK,GACpCR,EAAM/F,IAAI,CAAC0G,GACXF,GAAQC,CACV,MACE,KAEJ,CAEA,OAAOV,CACT,EA1B2BI,IAGzB,OAAOD,CACT,EArB6BnB,IAGzB4B,SA0Ccb,CAAW,CAAEc,CAAY,EACzC,GAAI,CACEC,UAAUC,UAAU,EACtBD,UAAUC,UAAU,CAAChB,EAAKc,EAE9B,CAAE,KAAM,CAER,CACF,EAlDad,EAAK,CAAC,WAAW,EAAEC,EAAMgB,IAAI,CAAC,KAAK,GAAG,CAAC,EAGlDhC,EAAQ,EAAE,CACZ,CAoDO,SAASO,IACd,MAAO,CAAC,CAACzI,EAAAA,EAAeA,EAAEkF,MAAMC,cAA+B,4BAA4BC,OAC7F,CAGApF,EAAAA,EAAeA,EAAEI,iBAAiB,WAAYwI,GAC9C5I,EAAAA,EAAeA,EAAEI,iBAAiB,mBAAoBwI,E,6DCvG/C,SAASuB,EAAkBC,CAA4B,CAAEC,CAAuC,EACjGtC,EAAAA,EAAUA,EAMZuC,CAAAA,EAAAA,EAAAA,eAAAA,EAAgBF,EAAQC,EAE5B,C,6DCDe,SAASE,IACtB,IAAMC,EAAaC,CAAAA,EAAAA,EAAAA,MAAAA,EAAO,IACpBC,EAAYC,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,IAAMH,EAAWI,OAAO,CAAE,EAAE,EAU1D,MARAT,CAAAA,EAAAA,EAAAA,CAAAA,EAAkB,KAChBK,EAAWI,OAAO,CAAG,GAEd,KACLJ,EAAWI,OAAO,CAAG,EACvB,GACC,EAAE,EAEEF,CACT,C,6DCbA,MAhBA,SAAyBG,CAA4B,EACnD,IAAMH,EAAYH,CAAAA,EAAAA,EAAAA,CAAAA,IACZ,CAACnH,EAAO0H,EAAS,CAAGtG,CAAAA,EAAAA,EAAAA,QAAAA,EAASqG,GAWnC,MAAO,CAACzH,EATauH,CAAAA,EAAAA,EAAAA,WAAAA,EACnB,IACMD,KACFI,EAASlM,EAEb,EACA,CAAC8L,EAAU,EAGe,C,wEChBvB,SAASK,EAAmB,CAACC,OAAAA,CAAM,CAAEnJ,QAAAA,CAAO,CAAErD,SAAAA,CAAQ,CAAoC,EAC/F,IAAMyM,EAA0BpM,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,IAAO,EAACmM,OAAAA,EAAQnJ,QAAAA,CAAO,GAAI,CAACmJ,EAAQnJ,EAAQ,EACpF,MAAO,UAACJ,EAAAA,CAAUA,CAAC1C,QAAQ,EAACH,MAAOqM,E,SAA0BzM,C,EAC/D,CAEA,GAAG,CAAEuM,EAAmB/L,WAAW,EAA9B+L,CAAAA,EAAmB/L,WAAW,CAAK,oBAAmB,CAAE,CAAE,KAAM,CAAC,C,oHCF/D,SAASkM,EAAmB,CAAC1M,SAAAA,CAAQ,CAA0B,EACpE,IAAMkC,EAAeO,CAAAA,EAAAA,EAAAA,EAAAA,IACfkK,EAAQC,EAAAA,OAAa,CAAC,KAC1B,IAAMC,EAAkC,CAAC,EACzC,IAAK,IAAMC,KAAQ5K,EACb4K,EAAKC,UAAU,CAAC,kBAClBF,CAAAA,CAAM,CAACC,EAAK,CAAG,EAAG,EAGtB,OAAOD,CAIT,EAAG,EAAE,EAEL,MAAO,UAACG,EAAAA,CAAYA,CAAAA,CAACL,MAAOA,E,SAAQ3M,C,EACtC,CAEA,GAAG,CAAE0M,EAAmBlM,WAAW,EAA9BkM,CAAAA,EAAmBlM,WAAW,CAAK,oBAAmB,CAAE,CAAE,KAAM,CAAC,C,0BCVtE,IAAML,EAAW,CAAC,EAMX,SAAS8M,EAAc,CAAChN,QAAAA,CAAO,CAAED,SAAAA,CAAQ,CAAEwJ,kBAAAA,CAAiB,CAAQ,EACzE,GAAM,CAACjE,UAAAA,CAAS,CAAEG,UAAAA,CAAS,CAAEE,YAAAA,CAAW,CAAC,CAAGsH,CAAAA,EAAAA,EAAAA,CAAAA,IAE5C,MACE,UAACC,EAAAA,EAAmBA,CAAAA,CAAC3D,kBAAmBA,E,SACtC,UAACzJ,EAAAA,CAAiBA,CAAAA,CAACE,QAASA,EAASC,SAAS,GAAGC,SAAUA,E,SACzD,UAACuM,EAAkBA,C,SACjB,UAACU,EAAAA,EAAaA,CAAAA,CAAC7H,UAAWA,EAAWG,UAAWA,EAAWE,YAAaA,EAAayH,mBAAkB,G,SACrG,UAACC,EAAAA,EAAoBA,CAAAA,C,SAAEtN,C,UAMnC,CAEA,GAAG,CAAEiN,EAAczM,WAAW,EAAzByM,CAAAA,EAAczM,WAAW,CAAK,eAAc,CAAE,CAAE,KAAM,CAAC,C,yGCtB5D,IAAM+M,EAAuC,CAC3CC,KAAM,GACNC,QAAS,iBACTpM,MAAO,cACT,EACMqM,EAA4C,CAChDF,KAAM,UAACG,EAAAA,QAAQA,CAAAA,CAAAA,GACfF,QAAS,UAACG,EAAAA,SAASA,CAAAA,CAAAA,GACnBvM,MAAO,UAACwM,EAAAA,QAAQA,CAAAA,CAAAA,EAClB,EAUaC,EAA8B,CAAC,CAACpF,QAAAA,CAAO,CAAEqF,WAAAA,CAAU,CAAEC,KAAAA,CAAI,CAAEC,KAAAA,EAAO,MAAM,CAAEC,KAAAA,EAAO,KAAK,CAAC,IAClG,GAAM,CAACC,EAAWC,EAAa,CAAGxB,EAAAA,QAAc,CAAC,IAC3C,CAACyB,eAAAA,CAAc,CAAC,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,IAOzB,MALApI,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACH6H,GACLM,EAAe,IAAMD,EAAa,IAAQL,EAAa,IACzD,EAAG,CAACM,EAAgBN,EAAW,EAG7B,UAACQ,EAAAA,CAAMA,CAAAA,C,SACL,UAACC,MAAAA,CAAIC,UAAU,+C,SACb,WAACD,MAAAA,CACCC,UAAW,CAAC,MAAM,EAAElB,CAAS,CAACU,EAAK,CAAC,CAAC,EAAEE,EAAY,mBAAqB,oBAAoB,CAAC,CAC7FO,GAAG,eACHC,cAAa,CAAC,aAAa,EAAEV,EAAK,CAAC,CACnCC,KAAMA,E,UAEN,UAACU,OAAAA,CAAKH,UAAU,a,SAAcT,GAAQN,CAAQ,CAACO,EAAK,GACpD,UAACW,OAAAA,CAAKH,UAAU,gB,SAAiB/F,C,SAK3C,EAEA,GAAG,CAAEoF,EAAMtN,WAAW,EAAjBsN,CAAAA,EAAMtN,WAAW,CAAK,OAAM,CAAE,CAAE,KAAM,CAAC,CC/CrC,SAASqO,IACd,GAAM,CAACC,OAAAA,CAAM,CAAEC,eAAAA,CAAc,CAAC,CAAGC,CAAAA,EAAAA,EAAAA,UAAAA,EAAWC,EAAAA,EAAqBA,EAEjE,MACE,uB,UACGH,EAAO3M,GAAG,CAAC,CAAC+M,EAAWC,IACtB,UAACrB,EAAKA,CACJpF,QAASwG,EAAUxG,OAAO,CAC1BsF,KAAMkB,EAAUlB,IAAI,CAEpBD,WAAYqB,EAAAA,EAAeA,CAC3BnB,KAAMiB,EAAUjB,IAAI,CACpBC,KAAMgB,EAAUhB,IAAI,EAHfiB,IAMRJ,GACC,UAACjB,EAAKA,CACJpF,QAASqG,EAAerG,OAAO,CAC/BsF,KAAMe,EAAef,IAAI,CACzBC,KAAMc,EAAed,IAAI,CACzBC,KAAMa,EAAeb,IAAI,G,EAKnC,CAEA,GAAG,CAAEW,EAAOrO,WAAW,EAAlBqO,CAAAA,EAAOrO,WAAW,CAAK,QAAO,CAAE,CAAE,KAAM,CAAC,C,eClCvC,SAAS6O,EAAc,CAACC,SAAAA,CAAQ,CAAgC,EACrE,GAAM,CAACC,SAAAA,CAAQ,CAAC,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,IACbC,EAAkBtK,EAAAA,CAAe,CAACmK,EAASlO,WAAW,EAAI,GAAG,CAanE,MAXA8E,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACHuJ,GAEHF,EAAS,CACPtB,KAAM,QACNvF,QAAS,wDACX,EAGJ,EAAG,EAAE,EAEE,IACT,CAEA,GAAG,CAAE2G,EAAc7O,WAAW,EAAzB6O,CAAAA,EAAc7O,WAAW,CAAK,eAAc,CAAE,CAAE,KAAM,CAAC,CCjBrD,SAASkP,EAAe,CAACJ,SAAAA,CAAQ,CAAiC,EACvE,MACE,uB,UACE,UAACT,EAAMA,CAAAA,GACNS,GAAY,UAACD,EAAaA,CAACC,SAAUA,C,KAG5C,CAEA,GAAG,CAAEI,EAAelP,WAAW,EAA1BkP,CAAAA,EAAelP,WAAW,CAAK,gBAAe,CAAE,CAAE,KAAM,CAAC,C,kHCV5CmP,CAAW,E,6FAAXA,GAAAA,CAAAA,EAAAA,CAAAA,CAAAA,GAMX,IAAMC,EAAqBnP,CAAAA,EAAAA,EAAAA,aAAAA,EAAaA,gBAExC,SAAS0M,EAAoB,CAAC3D,kBAAAA,CAAiB,CAAExJ,SAAAA,CAAQ,CAAoD,EAClH,GAAM,CAAC6P,EAAaC,EAAe,CAAG9J,CAAAA,EAAAA,EAAAA,QAAAA,EAAsB,IAC1D,EAAIzD,EAASA,CACJ,eAELiH,EACK,gBAEF,gBAQT,MALAmC,CAAAA,EAAAA,EAAAA,CAAAA,EAAkB,KACI,iBAAhBkE,GACJC,EAAe,eACjB,EAAG,CAACD,EAAY,EAET,UAACD,EAAmBrP,QAAQ,EAACH,MAAOyP,E,SAAc7P,C,EAC3D,CAEA,GAAG,CAAE4P,EAAmBpP,WAAW,EAA9BoP,CAAAA,EAAmBpP,WAAW,CAAK,oBAAmB,CAAE,CAAE,KAAM,CAAC,CACtE,GAAG,CAAE2M,EAAoB3M,WAAW,EAA/B2M,CAAAA,EAAoB3M,WAAW,CAAK,qBAAoB,CAAE,CAAE,KAAM,CAAC,C,0HC3BjE,IAAM4O,EAAkB,IA8BzBW,EAAetP,CAAAA,EAAAA,EAAAA,aAAAA,EAAgC,CACnD8O,SAAUvM,EAAAA,CAAIA,CACdgN,kBAAmBhN,EAAAA,CAAIA,CACvBiN,oBAAqBjN,EAAAA,CAAIA,GAOdiM,EAAwBxO,CAAAA,EAAAA,EAAAA,aAAAA,EAAyC,CAACqO,OAAQ,EAAE,CAAEC,eAAgB,IAAI,GAIxG,SAASzB,EAAqB,CAACtN,SAAAA,CAAQ,CAA2B,EACvE,GAAM,CAAC8O,EAAQoB,EAAU,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,EAA0B,EAAE,EAClD,CAACpB,EAAgBqB,EAAkB,CAAGpK,CAAAA,EAAAA,EAAAA,QAAAA,EAA2B,MACjE,CAACqI,eAAAA,CAAc,CAAC,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,IAEnBiB,EAAWpD,CAAAA,EAAAA,EAAAA,WAAAA,EACf,SAAUkE,CAAgB,EACxBH,EAAU,IAAIpB,EAAQuB,EAAM,EAC5BhC,EAAe,IAAM6B,EAAUpB,EAAOwB,KAAK,CAAC,IAAKlB,EACnD,EACA,CAACN,EAAQT,EAAgB6B,EAAU,EAG/BF,EAAoB7D,CAAAA,EAAAA,EAAAA,WAAAA,EACxB,SAAUkE,CAAgB,EACxBD,EAAkBC,EACpB,EACA,CAACD,EAAkB,EAGfH,EAAsB9D,CAAAA,EAAAA,EAAAA,WAAAA,EAC1B,WACEiE,EAAkB,KACpB,EACA,CAACA,EAAkB,EAGfG,EAAelQ,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,IACpB,EAACkP,SAAAA,EAAUS,kBAAAA,EAAmBC,oBAAAA,CAAmB,GACvD,CAACD,EAAmBT,EAAUU,EAAoB,EAE/CO,EAAwBnQ,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,IAC7B,EAACyO,OAAAA,EAAQC,eAAAA,CAAc,GAC7B,CAACD,EAAQC,EAAe,EAE3B,MACE,UAACgB,EAAaxP,QAAQ,EAACH,MAAOmQ,E,SAC5B,UAACtB,EAAsB1O,QAAQ,EAACH,MAAOoQ,E,SAAwBxQ,C,IAGrE,CAEO,SAASwP,IACd,MAAOR,CAAAA,EAAAA,EAAAA,UAAAA,EAAWe,EACpB,CAEA,GAAG,CAAEA,EAAavP,WAAW,EAAxBuP,CAAAA,EAAavP,WAAW,CAAK,cAAa,CAAE,CAAE,KAAM,CAAC,CAC1D,GAAG,CAAEyO,EAAsBzO,WAAW,EAAjCyO,CAAAA,EAAsBzO,WAAW,CAAK,uBAAsB,CAAE,CAAE,KAAM,CAAC,CAC5E,GAAG,CAAE8M,EAAqB9M,WAAW,EAAhC8M,CAAAA,EAAqB9M,WAAW,CAAK,sBAAqB,CAAE,CAAE,KAAM,CAAC,C","sources":["ui/packages/analytics-provider/AnalyticsProvider.tsx","ui/packages/analytics-provider/context.ts","ui/packages/client-env/client-env.ts","ui/packages/document-ready/document-ready.ts","ui/packages/feature-flags/feature-flags.ts","ui/packages/noop/noop.ts","ui/packages/react-core/app-context.ts","ui/packages/react-core/create-browser-history.ts","ui/packages/react-core/expected-errors.ts","ui/packages/react-core/use-color-modes.ts","ui/packages/runtime-environment/runtime-environment.ts","ui/packages/safe-storage/safe-storage.ts","ui/packages/ssr-utils/ssr-globals.ts","ui/packages/ssr-utils/ssr.ts","ui/packages/stats/stats.ts","ui/packages/use-hydrated-effect/use-hydrated-effect.ts","ui/packages/use-is-mounted/use-is-mounted.ts","ui/packages/use-safe-state/use-safe-state.ts","ui/packages/react-core/AppContextProvider.tsx","ui/packages/react-core/PrimerFeatureFlags.tsx","ui/packages/react-core/BaseProviders.tsx","ui/packages/toast/Toast.tsx","ui/packages/toast/Toasts.tsx","ui/packages/react-core/SSRErrorToast.tsx","ui/packages/react-core/CommonElements.tsx","ui/packages/render-phase-provider/RenderPhaseProvider.tsx","ui/packages/toast/ToastContext.tsx"],"sourcesContent":["import {useMemo} from 'react'\nimport type {PropsWithChildren} from 'react'\nimport {AnalyticsContext, type AnalyticsProviderProps} from './context'\n\nexport function AnalyticsProvider({children, appName, category, metadata}: PropsWithChildren<AnalyticsProviderProps>) {\n  const value = useMemo(() => ({appName, category, metadata}), [appName, category, metadata])\n  return <AnalyticsContext.Provider value={value}>{children}</AnalyticsContext.Provider>\n}\n\ntry{ AnalyticsProvider.displayName ||= 'AnalyticsProvider' } catch {}","import {createContext} from 'react'\n\ninterface AnalyticsContextType {\n  appName: string\n  category: string\n  metadata: {[key: string]: string}\n}\n\nexport type AnalyticsProviderProps = AnalyticsContextType\n\nexport const AnalyticsContext = createContext<AnalyticsContextType | null>(null)\n","export interface ClientEnvironment {\n  readonly locale: string\n  readonly featureFlags: string[]\n}\n\nlet env: ClientEnvironment | undefined\n\nexport function getEnv() {\n  if (!env) {\n    throw new Error(\n      'Client env was requested before it was loaded. This likely means you are attempting to use client env at the module level in SSR, which is not supported. Please move your client env usage into a function.',\n    )\n  }\n\n  return env\n}\n\nexport function getLocale() {\n  return env?.locale ?? 'en-US'\n}\n\nfunction loadEnv() {\n  if (typeof document !== 'undefined') {\n    const envTag = document.getElementById('client-env')\n    if (envTag) {\n      try {\n        env = JSON.parse(envTag.textContent || '')\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error('Error parsing client-env', error)\n      }\n    }\n  }\n}\n\n// Automatically load the env on initial page load\nloadEnv()\n\n// This is a special helper method for setting the env in the SSR environment only\nexport function setClientEnvForSsr(clientEnv: ClientEnvironment | undefined) {\n  env = clientEnv\n}\n\n// This env object is used as a default for tests only and is not included in production builds\nexport const clientEnvForTests: ClientEnvironment = {\n  locale: 'en',\n  featureFlags: ['test_flag'],\n}\n\nexport function _resetForTests({loadNewEnv, forceUndefined}: {loadNewEnv: boolean; forceUndefined?: boolean}) {\n  // forget the current env\n  env = forceUndefined ? undefined : clientEnvForTests\n\n  if (loadNewEnv) {\n    // load the latest env\n    loadEnv()\n  }\n}\n","import {ssrSafeDocument, ssrSafeWindow} from '@github-ui/ssr-utils'\n\n// Check if document has passed interactive state.\n//\n// The document has finished loading and the document has been parsed but\n// sub-resources such as images, stylesheets and frames are still loading.\n// The state indicates that the DOMContentLoaded event has been fired.\nexport const ready: Promise<void> = (function () {\n  if (ssrSafeDocument?.readyState === 'interactive' || ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise<void>(resolve => {\n      ssrSafeDocument?.addEventListener('DOMContentLoaded', () => {\n        resolve()\n      })\n    })\n  }\n})()\n\n// Check if document has passed loaded state.\n//\n// The document and all sub-resources have finished loading. The state\n// indicates that the load event has been fired.\nexport const loaded: Promise<unknown> = (function () {\n  if (ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise(resolve => {\n      ssrSafeWindow?.addEventListener('load', resolve)\n    })\n  }\n})()\n","import memoize from '@github/memoize'\nimport {getEnv} from '@github-ui/client-env'\nimport {IS_SERVER} from '@github-ui/ssr-utils'\n\nfunction getEnabledFeaturesSet(): Set<string> {\n  const features = getEnv().featureFlags\n  const featuresUpperCase = features.map(feature => feature.toLowerCase())\n  return new Set<string>(featuresUpperCase)\n}\n\nconst featuresSet =\n  IS_SERVER || process.env.NODE_ENV === 'test' ? getEnabledFeaturesSet : memoize(getEnabledFeaturesSet)\n\nexport function getEnabledFeatures(): string[] {\n  return Array.from(featuresSet())\n}\n\nexport function isFeatureEnabled(name: string): boolean {\n  return featuresSet().has(name.toLowerCase())\n}\n\n//exported to allow mocking in tests\nconst featureFlag = {isFeatureEnabled}\n\nexport {featureFlag}\n","/**\n * A function that always returns undefined and does nothing else.\n */\nexport const noop: (...args: unknown[]) => void = () => void 0\n","import {createContext} from 'react'\nimport type {AppRegistration} from './react-app-registry'\nimport type {History} from '@remix-run/router'\n\nexport interface AppContextType {\n  routes: AppRegistration['routes']\n  history: History\n}\n\nexport const AppContext = createContext<AppContextType>(null as unknown as AppContextType)\n","import {\n  createBrowserHistory as routerCreateBrowserHistory,\n  type BrowserHistory,\n  type BrowserHistoryOptions,\n  type To,\n  Action,\n} from '@remix-run/router'\nimport type {Listener, Update} from '@remix-run/router/dist/history'\n\n/**\n * A change to the current location that was blocked. May be retried\n * after obtaining user confirmation.\n *\n * The RR version of Transition extends Update, but this does not because it was easier not to.\n */\nexport interface Transition {\n  /**\n   * Retries the update to the current location.\n   */\n  retry(): void\n}\n\n/**\n * A function that receives transitions when navigation is blocked.\n */\nexport interface Blocker {\n  (tx: Transition): void\n}\n\nexport interface GitHubBrowserHistory extends BrowserHistory {\n  block(blocker: Blocker): () => void\n}\n\n/**\n * This is a wrapper around React Router's createBrowserHistory. On top of the RR browser history, this wrapper:\n * - Ensures that it is constructed with v5Compat:true, so that it is compatible with pre-6.4 RR usage.\n * - Creates a .block() method that is API-compatible with pre-6.4 RR usage, but using the post-6.4 RR internals.\n *\n * It would be lovely to get rid of this file. We will be able to do that if we migrate to using a data router, which\n * would allow us to use the RR unstable_useBlocker hook directly.\n */\nexport function createBrowserHistory(options: BrowserHistoryOptions = {}): GitHubBrowserHistory {\n  /**\n   * Note: `v5Compat` is set to true to maintain compatibility v5 & pre-6.4 versions of React Router. In the future,\n   * if we shift to using a React Router data router, we can remove this option (and possibly this whole wrapper?).\n   */\n  const history = routerCreateBrowserHistory({...options, v5Compat: true})\n  let listener: Listener | undefined\n  let blockers: Blocker[] = []\n  let ignoreNextHistoryUpdate = false\n\n  history.listen((update: Update) => {\n    if (ignoreNextHistoryUpdate) {\n      ignoreNextHistoryUpdate = false\n      return\n    }\n\n    if (update.action === Action.Pop && blockers.length && update.delta !== null && blockers.length > 0) {\n      const delta = update.delta\n\n      // undo the navigation for now:\n\n      ignoreNextHistoryUpdate = true\n      history.go(delta * -1)\n\n      for (const blocker of blockers) {\n        blocker({\n          retry() {\n            history.go(delta)\n          },\n        })\n      }\n    } else {\n      listener?.(update)\n    }\n  })\n\n  function doIfUnblocked(fn: () => void) {\n    if (blockers.length > 0) {\n      for (const blocker of blockers) {\n        blocker({\n          retry() {\n            fn()\n          },\n        })\n      }\n    } else {\n      fn()\n    }\n  }\n\n  return {\n    get action() {\n      return history.action\n    },\n\n    get location() {\n      return history.location\n    },\n\n    createHref(to: To) {\n      return history.createHref(to)\n    },\n\n    createURL(to: To) {\n      return history.createURL(to)\n    },\n\n    encodeLocation(to: To) {\n      return history.encodeLocation(to)\n    },\n\n    push(to: To, state?: unknown) {\n      doIfUnblocked(() => history.push(to, state))\n    },\n\n    replace(to: To, state?: unknown) {\n      doIfUnblocked(() => history.replace(to, state))\n    },\n\n    go(delta: number) {\n      doIfUnblocked(() => history.go(delta))\n    },\n\n    listen(newListener: Listener) {\n      if (listener) {\n        throw new Error('A history only accepts one active listener')\n      }\n      listener = newListener\n      const unlisten = () => {\n        listener = undefined\n      }\n      return unlisten\n    },\n\n    /**\n     * @deprecated\n     */\n    block(blocker: Blocker): () => void {\n      blockers.push(blocker)\n\n      const unblock = () => {\n        blockers = blockers.filter(b => b !== blocker)\n      }\n      return unblock\n    },\n  }\n}\n","export const EXPECTED_ERRORS: {[key: string]: string} = {\n  'Workers not ready': 'Alloy is warming its workers. This is expected during deploys and should resolve shortly.',\n}\n","import {useEffect, useState} from 'react'\n\nconst document = globalThis.document as Document | undefined\n\nexport interface ColorModeOptions {\n  colorMode?: string\n  lightTheme: string\n  darkTheme: string\n}\n\nfunction getSchemeFromMode(mode?: string) {\n  switch (mode) {\n    case 'light':\n      return 'day'\n    case 'dark':\n      return 'night'\n    default:\n      return 'auto'\n  }\n}\n\nfunction getColorModes(options: ColorModeOptions | DOMStringMap) {\n  const mode = options.colorMode\n\n  return {\n    colorMode: getSchemeFromMode(mode),\n    dayScheme: options.lightTheme,\n    nightScheme: options.darkTheme,\n  } as const\n}\n\nlet ssrOptions: ColorModeOptions | undefined\n\nexport function setColorModeOptions(options: ColorModeOptions) {\n  ssrOptions = options\n}\n\nfunction useColorModesSSR() {\n  return getColorModes(ssrOptions || {})\n}\n\nfunction useColorModes() {\n  const {documentElement} = document!\n  // eslint-disable-next-line github/no-dataset\n  const [colorMode, setColorMode] = useState(() => getColorModes(documentElement.dataset))\n\n  useEffect(() => {\n    // Update color modes any time color mode attributes change on the base html document element\n    // eslint-disable-next-line github/no-dataset\n    const observer = new MutationObserver(() => setColorMode(getColorModes(documentElement.dataset)))\n\n    observer.observe(documentElement, {\n      attributes: true,\n      attributeFilter: ['data-color-mode', 'data-light-theme', 'data-dark-theme'],\n    })\n\n    return () => observer.disconnect()\n  }, [documentElement])\n\n  return colorMode\n}\n\nexport default document ? useColorModes : useColorModesSSR\n","import memoize from '@github/memoize'\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\n\nconst runtimeEnvironment = memoize(githubEnvironment)\n\n// return the github instance environment\n// if dotcom, returns 'dotcom'\n// if enterprise, returns 'enterprise'\nfunction githubEnvironment(): string {\n  return ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"runtime-environment\"]')?.content || ''\n}\n\nexport const isEnterprise = memoize(isEnterpriseEnvironment)\nfunction isEnterpriseEnvironment(): boolean {\n  return runtimeEnvironment() === 'enterprise'\n}\n\n// This is the \"bundler\" that built the client-side assets, e.g. \"webpack\"\nexport const bundler = typeof BUNDLER !== 'undefined' ? BUNDLER : undefined\n","import {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\ntype StorageBackend = 'sessionStorage' | 'localStorage'\n\n/**\n * An implementation of the Storage API that throws away all data.  Used in\n * cases when the requested Storage backend is not available.\n */\nclass NoOpStorage {\n  getItem() {\n    return null\n  }\n\n  setItem() {\n    return undefined\n  }\n\n  removeItem() {\n    return undefined\n  }\n\n  clear() {\n    return undefined\n  }\n\n  key() {\n    return null\n  }\n\n  get length() {\n    return 0\n  }\n}\n\ntype SafeStorageOptions = {\n  /** Callers may opt not to suppress quota errors thrown on set in case they rely on recieving them. */\n  throwQuotaErrorsOnSet: boolean\n  /** The amount of time the value should remain in storage, in milliseconds */\n  ttl?: number\n  /** Don't send stats in CI */\n  sendCacheStats?: boolean\n}\n\n/**\n * Safely access Storage items by wrapping a Storage instance\n * (localStorage or sessionStorage) with safe versions of its API\n * methods.  Callers may opt not to suppress quota errors thrown on\n * set in case they rely on recieving them.\n */\nexport default function safeStorage<T = string>(\n  storageKey: StorageBackend,\n  options: SafeStorageOptions = {throwQuotaErrorsOnSet: false},\n  global = ssrSafeWindow,\n  deserialize: (value: string) => T = value => value as unknown as T,\n  serialize: (value: T) => string = (value: T) => value as unknown as string,\n) {\n  let storage: Storage\n  try {\n    if (!global) {\n      // in an SSR environment, use noop storage\n      throw new Error()\n    }\n\n    storage = global[storageKey] || new NoOpStorage()\n  } catch {\n    storage = new NoOpStorage()\n  }\n\n  const {throwQuotaErrorsOnSet} = options\n\n  function emitStats(key: PlatformBrowserIncrementKey) {\n    if (options.sendCacheStats) {\n      sendStats({incrementKey: key})\n    }\n  }\n\n  /**  Safely get storage item. Returns `null` if the item is older than the provided ttl */\n  function getItem(key: string, now: number = new Date().getTime()): T | null {\n    try {\n      const value = storage.getItem(key)\n      if (!value) {\n        return null\n      }\n      const expiryKey = `${key}:expiry`\n      const expiry = Number(storage.getItem(expiryKey))\n      if (expiry && now > expiry) {\n        removeItem(key)\n        removeItem(expiryKey)\n        emitStats('SAFE_STORAGE_VALUE_EXPIRED')\n        return null\n      } else {\n        emitStats('SAFE_STORAGE_VALUE_WITHIN_TTL')\n        return deserialize(value)\n      }\n    } catch (error) {\n      // Ignore browser private mode error.\n      return null\n    }\n  }\n\n  /**\n   * Safely set storage item.\n   * If `ttl` is provided, set an expiry time for the item under the key `${key}:expiry`\n   * This function will be called\n   */\n  function setItem(key: string, value: T, now: number = new Date().getTime()) {\n    try {\n      storage.setItem(key, serialize(value) as unknown as string)\n      if (options.ttl) {\n        const expiryKey = `${key}:expiry`\n        const expiry = now + options.ttl\n        storage.setItem(expiryKey, expiry.toString())\n      }\n    } catch (error) {\n      if (throwQuotaErrorsOnSet && error instanceof Error && error.message.toLowerCase().includes('quota')) throw error\n    }\n  }\n\n  // Safely remove storage item.\n  function removeItem(key: string) {\n    try {\n      storage.removeItem(key)\n      if (options.ttl) {\n        const expiryKey = `${key}:expiry`\n        storage.removeItem(expiryKey)\n      }\n    } catch (error) {\n      // Ignore browser private mode error.\n    }\n  }\n\n  return {\n    getItem,\n    setItem,\n    removeItem,\n    clear: storage.clear,\n    key: storage.key,\n    get length() {\n      return storage.length\n    },\n  }\n}\n\nexport function jsonSafeStorage<T>(storageBackend: StorageBackend) {\n  return safeStorage<T>(\n    storageBackend,\n    {throwQuotaErrorsOnSet: false},\n    ssrSafeWindow,\n    JSON.parse as (value: string) => T,\n    JSON.stringify as (obj: T) => string,\n  )\n}\n","// When using SSR, browser globals are not available. If you try to use them, Node.js will throw an error\ntype SSRSafeLocation = Pick<Location, 'pathname' | 'origin' | 'search' | 'hash' | 'href'>\n\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeDocument = typeof document === 'undefined' ? undefined : document\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeWindow = typeof window === 'undefined' ? undefined : window\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeHistory = typeof history === 'undefined' ? undefined : history\n\nexport const ssrSafeLocation: SSRSafeLocation =\n  // eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\n  typeof location === 'undefined' ? {pathname: '', origin: '', search: '', hash: '', href: ''} : location\n\nexport function setLocation(url: string) {\n  // eslint-disable-next-line no-restricted-syntax\n  const parsedURL: SSRSafeLocation = new URL(url)\n  const {pathname, origin, search, hash} = parsedURL\n\n  Object.assign(ssrSafeLocation, {pathname, origin, search, hash})\n}\n","import {ssrSafeDocument} from './ssr-globals'\n\n/***\n * Are we rendering on the server?\n */\nexport const IS_SERVER = typeof ssrSafeDocument === 'undefined'\n\n/***\n * Are we rendering on the client?\n */\nexport const IS_BROWSER = !IS_SERVER\n\n/***\n * This helper returns `true` if:\n * - we are rendering on the server\n * - we are on the client, and the app has been hydrated from a server-render\n */\nexport function wasServerRendered() {\n  if (IS_SERVER) {\n    return true\n  }\n\n  return Boolean(ssrSafeDocument!.querySelector('react-app[data-ssr=\"true\"]'))\n}\n","import {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {loaded} from '@github-ui/document-ready'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {throttle} from '@github/mini-throttle'\n\nlet stats: PlatformBrowserStat[] = []\nconst chunkSize = 64 * 1024\n\nexport function sendStats(stat: PlatformBrowserStat, flushImmediately = false, samplingProbability = 0.5): void {\n  if (isFeatureEnabled('BROWSER_STATS_DISABLED') === true) {\n    return\n  }\n  if (samplingProbability < 0 || samplingProbability > 1) {\n    throw new RangeError('Sampling probability must be between 0 and 1')\n  }\n\n  if (stat.timestamp === undefined) stat.timestamp = new Date().getTime()\n  stat.loggedIn = isLoggedIn()\n  stat.staff = isStaff()\n  stat.bundler = bundler\n  if (Math.random() < samplingProbability) {\n    stats.push(stat)\n  }\n\n  if (flushImmediately) {\n    flushStats()\n  } else {\n    throttledScheduleSendStats()\n  }\n}\n\nlet queued: number | null = null\n\nconst throttledScheduleSendStats = throttle(async function scheduleSendStats() {\n  await loaded\n  if (queued == null) {\n    queued = window.requestIdleCallback(flushStats)\n  }\n}, 5000)\n\nfunction flushStats() {\n  queued = null\n  if (!stats.length) {\n    return\n  }\n\n  const url = ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-stats-url\"]')?.content\n  if (!url) {\n    return\n  }\n\n  const batches = getBatches(stats)\n\n  for (const batch of batches) {\n    safeSend(url, `{\"stats\": [${batch.join(',')}] }`)\n  }\n\n  stats = []\n}\n\n// getBatches breaks up the list of stats into smaller batches\n// that are less than 64kb in size. This is to avoid hitting the\n// size limit of the beacon API.\nfunction getBatches(items: PlatformBrowserStat[]): string[][] {\n  const batches: string[][] = []\n  const itemStrings = items.map(item => JSON.stringify(item))\n\n  while (itemStrings.length > 0) {\n    batches.push(makeBatch(itemStrings))\n  }\n\n  return batches\n}\n\n// makeBatch walks the items and collects batches of items that are within\n// the 64kb limit. If an item is too big to fit in a batch, it is sent alone.\nfunction makeBatch(itemStrings: string[]): string[] {\n  const firstItem = itemStrings.shift()!\n  const batch: string[] = [firstItem]\n  let size = firstItem.length\n\n  while (itemStrings.length > 0 && size <= chunkSize) {\n    const nextItemSize = itemStrings[0]!.length\n\n    if (size + nextItemSize <= chunkSize) {\n      const itemString = itemStrings.shift()!\n      batch.push(itemString)\n      size += nextItemSize\n    } else {\n      break\n    }\n  }\n\n  return batch\n}\n\nfunction safeSend(url: string, data: string) {\n  try {\n    if (navigator.sendBeacon) {\n      navigator.sendBeacon(url, data)\n    }\n  } catch {\n    // Silently ignore errors: https://github.com/github/github/issues/178088#issuecomment-829936461\n  }\n}\n\nfunction isLoggedIn(): boolean {\n  return !!ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n}\n\nexport function isStaff(): boolean {\n  return !!ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"user-staff\"]')?.content\n}\n\n// Flush stats before users navigate away from the page\nssrSafeDocument?.addEventListener('pagehide', flushStats)\nssrSafeDocument?.addEventListener('visibilitychange', flushStats)\n","// eslint-disable-next-line no-restricted-imports\nimport {useLayoutEffect} from 'react'\nimport {IS_BROWSER} from '@github-ui/ssr-utils'\n\n/**\n * @package\n *\n * Prefer `useClientValue` from `@github-ui/use-client-value` or `useLayoutEffect` from React. This hook exists\n * to support an optimization to avoid unnecessary re-paints after hydration and should not be used to measure DOM\n * elements or other browser-only values.\n *\n * An SSR-Friendly wrapper around `useLayoutEffect` that will not run on the server and so will not\n * trigger the React warning about calling `useLayoutEffect` on the server.\n */\nexport function useHydratedEffect(effect: React.EffectCallback, deps?: React.DependencyList | undefined) {\n  if (IS_BROWSER) {\n    // A bit of a hack!\n    // We want to avoid the React warning about calling `useLayoutEffect` on the server. But we also want to\n    // keep the linter from yelling because it thinks this is a conditional hook call. `useLayoutEffect` only runs on\n    // the client anyways, otherwise none of this would be a good idea.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useLayoutEffect(effect, deps)\n  }\n}\n","// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\nimport {useCallback, useRef} from 'react'\n\n/**\n * Hook for determining whether a component is still mounted.\n *\n * Use this to guard side-effects of asynchronous operations (fetches,\n * promises) that may complete after a component has been unmounted.\n *\n * Example:\n *\n *      const isMounted = useIsMounted();\n *      const [value, setHidden] = useHidden(true);\n *\n *      setTimeout(() => {\n *          if (isMounted()) {\n *              setHidden(true);\n *          }\n *      }, 1000);\n *\n */\nexport default function useIsMounted() {\n  const mountedRef = useRef(false)\n  const isMounted = useCallback(() => mountedRef.current, [])\n\n  useHydratedEffect(() => {\n    mountedRef.current = true\n\n    return () => {\n      mountedRef.current = false\n    }\n  }, [])\n\n  return isMounted\n}\n","import useIsMounted from '@github-ui/use-is-mounted'\nimport {useCallback, useState} from 'react'\n\nfunction useSafeState<T = undefined>(): [T | undefined, React.Dispatch<React.SetStateAction<T | undefined>>]\nfunction useSafeState<T>(initialState: T | (() => T)): [T, React.Dispatch<React.SetStateAction<T>>]\n\nfunction useSafeState<T>(initialState?: T | (() => T)) {\n  const isMounted = useIsMounted()\n  const [state, setState] = useState(initialState)\n\n  const setSafeState = useCallback(\n    (value: React.SetStateAction<T | undefined>) => {\n      if (isMounted()) {\n        setState(value)\n      }\n    },\n    [isMounted],\n  )\n\n  return [state, setSafeState]\n}\n\nexport default useSafeState\n","import {useMemo, type PropsWithChildren} from 'react'\nimport {AppContext, type AppContextType} from './app-context'\n\nexport function AppContextProvider({routes, history, children}: PropsWithChildren<AppContextType>) {\n  const appContextProviderValue = useMemo(() => ({routes, history}), [routes, history])\n  return <AppContext.Provider value={appContextProviderValue}>{children}</AppContext.Provider>\n}\n\ntry{ AppContextProvider.displayName ||= 'AppContextProvider' } catch {}","import React from 'react'\nimport {FeatureFlags} from '@primer/react/experimental'\nimport {getEnabledFeatures} from '@github-ui/feature-flags'\n\ninterface PrimerFeatureFlagsProps extends React.PropsWithChildren {}\n\nexport function PrimerFeatureFlags({children}: PrimerFeatureFlagsProps) {\n  const featureFlags = getEnabledFeatures()\n  const flags = React.useMemo(() => {\n    const result: Record<string, boolean> = {}\n    for (const flag of featureFlags) {\n      if (flag.startsWith('primer_react_')) {\n        result[flag] = true\n      }\n    }\n    return result\n    // Note: getEnabledFeatures() will be constant between renders. It is placed\n    // within the component so that mockClientEnv works as expected\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return <FeatureFlags flags={flags}>{children}</FeatureFlags>\n}\n\ntry{ PrimerFeatureFlags.displayName ||= 'PrimerFeatureFlags' } catch {}","import type {ReactNode} from 'react'\nimport {RenderPhaseProvider} from '@github-ui/render-phase-provider'\nimport {ThemeProvider} from '@primer/react'\nimport useColorModes from './use-color-modes'\nimport {PrimerFeatureFlags} from './PrimerFeatureFlags'\nimport {ToastContextProvider} from '@github-ui/toast/ToastContext'\nimport {AnalyticsProvider} from '@github-ui/analytics-provider'\n\ninterface Props {\n  appName: string\n  children?: ReactNode\n  wasServerRendered: boolean\n}\n\nconst metadata = {}\n\n/**\n * This component provides the _base_ context for both apps and partials.\n * It should provide everything needed to render with styles, themes, and i18n.\n */\nexport function BaseProviders({appName, children, wasServerRendered}: Props) {\n  const {colorMode, dayScheme, nightScheme} = useColorModes()\n\n  return (\n    <RenderPhaseProvider wasServerRendered={wasServerRendered}>\n      <AnalyticsProvider appName={appName} category=\"\" metadata={metadata}>\n        <PrimerFeatureFlags>\n          <ThemeProvider colorMode={colorMode} dayScheme={dayScheme} nightScheme={nightScheme} preventSSRMismatch>\n            <ToastContextProvider>{children}</ToastContextProvider>\n          </ThemeProvider>\n        </PrimerFeatureFlags>\n      </AnalyticsProvider>\n    </RenderPhaseProvider>\n  )\n}\n\ntry{ BaseProviders.displayName ||= 'BaseProviders' } catch {}","import {CheckIcon, StopIcon, InfoIcon} from '@primer/octicons-react'\nimport {Portal, useSafeTimeout} from '@primer/react'\nimport React, {useEffect, type ReactNode, type ReactElement} from 'react'\n\nexport type ToastType = 'info' | 'success' | 'error'\nexport type ToastRole = 'alert' | 'status' | 'log'\nexport interface ToastProps {\n  message: ReactNode\n  timeToLive?: number\n  icon?: React.ReactNode\n  type?: ToastType\n  role?: ToastRole\n}\n\nconst typeClass: Record<ToastType, string> = {\n  info: '',\n  success: 'Toast--success',\n  error: 'Toast--error',\n}\nconst typeIcon: Record<ToastType, ReactElement> = {\n  info: <InfoIcon />,\n  success: <CheckIcon />,\n  error: <StopIcon />,\n}\n\n// Default role for the Toast is 'log' because 'status' is not read out by some screen readers.\n// Notably, NVDA will not read out popup content if the role is 'status'.\n/**\n * ⚠️ Warning: Usage of this component is discouraged by the accessibility team as\n * {@link https://github.com/github/engineering/discussions/3313 toasts are a behavior identified as a high-risk pattern}\n * within GitHub.\n * {@link https://github.com/github/accessibility/issues/4414 Reasons why toasts are a high-risk pattern}.\n */\nexport const Toast: React.FC<ToastProps> = ({message, timeToLive, icon, type = 'info', role = 'log'}) => {\n  const [isVisible, setIsVisible] = React.useState(true)\n  const {safeSetTimeout} = useSafeTimeout()\n\n  useEffect(() => {\n    if (!timeToLive) return\n    safeSetTimeout(() => setIsVisible(false), timeToLive - 300)\n  }, [safeSetTimeout, timeToLive])\n\n  return (\n    <Portal>\n      <div className=\"p-1 position-fixed bottom-0 left-0 mb-3 ml-3\">\n        <div\n          className={`Toast ${typeClass[type]} ${isVisible ? 'Toast--animateIn' : 'Toast--animateOut'}`}\n          id=\"ui-app-toast\"\n          data-testid={`ui-app-toast-${type}`}\n          role={role}\n        >\n          <span className=\"Toast-icon\">{icon || typeIcon[type]}</span>\n          <span className=\"Toast-content\">{message}</span>\n        </div>\n      </div>\n    </Portal>\n  )\n}\n\ntry{ Toast.displayName ||= 'Toast' } catch {}","import {useContext} from 'react'\nimport {InternalToastsContext, TOAST_SHOW_TIME} from './ToastContext'\nimport {Toast} from './Toast'\n\n// Renders all toasts including the persisted toast. Likely you'll only want to include this one in a React app, in a\n// place common to all pages.\n/**\n * ⚠️ Warning: Usage of this component is discouraged by the accessibility team as\n * {@link https://github.com/github/engineering/discussions/3313 toasts are a behavior identified as a high-risk pattern}\n * within GitHub.\n * {@link https://github.com/github/accessibility/issues/4414 Reasons why toasts are a high-risk pattern}.\n */\nexport function Toasts() {\n  const {toasts, persistedToast} = useContext(InternalToastsContext)\n\n  return (\n    <>\n      {toasts.map((toastInfo, index) => (\n        <Toast\n          message={toastInfo.message}\n          icon={toastInfo.icon}\n          key={index}\n          timeToLive={TOAST_SHOW_TIME}\n          type={toastInfo.type}\n          role={toastInfo.role}\n        />\n      ))}\n      {persistedToast && (\n        <Toast\n          message={persistedToast.message}\n          icon={persistedToast.icon}\n          type={persistedToast.type}\n          role={persistedToast.role}\n        />\n      )}\n    </>\n  )\n}\n\ntry{ Toasts.displayName ||= 'Toasts' } catch {}","// eslint-disable-next-line no-restricted-imports\nimport {useToastContext} from '@github-ui/toast/ToastContext'\nimport {useEffect} from 'react'\nimport {EXPECTED_ERRORS} from './expected-errors'\n\nexport function SSRErrorToast({ssrError}: {ssrError: HTMLScriptElement}) {\n  const {addToast} = useToastContext()\n  const isExpectedError = EXPECTED_ERRORS[ssrError.textContent || '']\n\n  useEffect(() => {\n    if (!isExpectedError) {\n      // eslint-disable-next-line @github-ui/dotcom-primer/toast-migration\n      addToast({\n        type: 'error',\n        message: 'SSR failed, see console for error details (Staff Only)',\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return null\n}\n\ntry{ SSRErrorToast.displayName ||= 'SSRErrorToast' } catch {}","import {Toasts} from '@github-ui/toast/Toasts'\nimport {SSRErrorToast} from './SSRErrorToast'\n\n// This is a container for common UI that should be rendered in all React UIs, including full-page apps and partials.\n// Please be very conservative in adding functionality here, as it will affect the bundle size of every page on the\n// site.\nexport function CommonElements({ssrError}: {ssrError?: HTMLScriptElement}) {\n  return (\n    <>\n      <Toasts />\n      {ssrError && <SSRErrorToast ssrError={ssrError} />}\n    </>\n  )\n}\n\ntry{ CommonElements.displayName ||= 'CommonElements' } catch {}","import {useState, createContext, type ReactNode} from 'react'\nimport {IS_SERVER} from '@github-ui/ssr-utils'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\nexport const enum RenderPhase {\n  ServerRender = 'ServerRender',\n  ClientHydrate = 'ClientHydrate',\n  ClientRender = 'ClientRender',\n}\n\nexport const RenderPhaseContext = createContext<RenderPhase>(RenderPhase.ClientRender)\n\nexport function RenderPhaseProvider({wasServerRendered, children}: {wasServerRendered: boolean; children: ReactNode}) {\n  const [renderPhase, setRenderPhase] = useState<RenderPhase>(() => {\n    if (IS_SERVER) {\n      return RenderPhase.ServerRender\n    }\n    if (wasServerRendered) {\n      return RenderPhase.ClientHydrate\n    }\n    return RenderPhase.ClientRender\n  })\n\n  useHydratedEffect(() => {\n    if (renderPhase === RenderPhase.ClientRender) return\n    setRenderPhase(RenderPhase.ClientRender)\n  }, [renderPhase])\n\n  return <RenderPhaseContext.Provider value={renderPhase}>{children}</RenderPhaseContext.Provider>\n}\n\ntry{ RenderPhaseContext.displayName ||= 'RenderPhaseContext' } catch {}\ntry{ RenderPhaseProvider.displayName ||= 'RenderPhaseProvider' } catch {}","import {useSafeTimeout} from '@primer/react'\nimport {createContext, type ReactNode, useCallback, useContext, useMemo, useState} from 'react'\nimport {noop} from '@github-ui/noop'\nimport useSafeState from '@github-ui/use-safe-state'\nimport type {ToastRole, ToastType} from './Toast'\n\nexport const TOAST_SHOW_TIME = 5000\n\ninterface ToastInfo {\n  message: ReactNode\n  icon?: ReactNode\n  type?: ToastType\n  role?: ToastRole\n}\n\ntype ToastContextType = {\n  /**\n   * ⚠️ Warning: Usage of this hook is discouraged by the accessibility team as\n   * {@link https://github.com/github/engineering/discussions/3313 toasts are a behavior identified as a high-risk pattern}\n   * within GitHub.\n   * {@link https://github.com/github/accessibility/issues/4414 Reasons why toasts are a high-risk pattern}.\n   */\n  addToast: (toast: ToastInfo) => void\n  /**\n   * ⚠️ Warning: Usage of this hook is discouraged by the accessibility team as\n   * {@link https://github.com/github/engineering/discussions/3313 toasts are a behavior identified as a high-risk pattern}\n   * within GitHub.\n   * {@link https://github.com/github/accessibility/issues/4414 Reasons why toasts are a high-risk pattern}.\n   */\n  addPersistedToast: (toast: ToastInfo) => void\n  clearPersistedToast: () => void\n}\ntype ToastContextProviderType = {\n  children: ReactNode\n}\n\nconst ToastContext = createContext<ToastContextType>({\n  addToast: noop,\n  addPersistedToast: noop,\n  clearPersistedToast: noop,\n})\n\ntype InternalToastsContextType = {\n  toasts: ToastInfo[]\n  persistedToast: ToastInfo | null\n}\nexport const InternalToastsContext = createContext<InternalToastsContextType>({toasts: [], persistedToast: null})\n\nexport default ToastContext\n\nexport function ToastContextProvider({children}: ToastContextProviderType) {\n  const [toasts, setToasts] = useSafeState<ToastInfo[]>([])\n  const [persistedToast, setPersistedToast] = useState<ToastInfo | null>(null)\n  const {safeSetTimeout} = useSafeTimeout()\n\n  const addToast = useCallback(\n    function (toast: ToastInfo) {\n      setToasts([...toasts, toast])\n      safeSetTimeout(() => setToasts(toasts.slice(1)), TOAST_SHOW_TIME)\n    },\n    [toasts, safeSetTimeout, setToasts],\n  )\n\n  const addPersistedToast = useCallback(\n    function (toast: ToastInfo) {\n      setPersistedToast(toast)\n    },\n    [setPersistedToast],\n  )\n\n  const clearPersistedToast = useCallback(\n    function () {\n      setPersistedToast(null)\n    },\n    [setPersistedToast],\n  )\n\n  const contextValue = useMemo(() => {\n    return {addToast, addPersistedToast, clearPersistedToast}\n  }, [addPersistedToast, addToast, clearPersistedToast])\n\n  const internalToastsContext = useMemo(() => {\n    return {toasts, persistedToast}\n  }, [toasts, persistedToast])\n\n  return (\n    <ToastContext.Provider value={contextValue}>\n      <InternalToastsContext.Provider value={internalToastsContext}>{children}</InternalToastsContext.Provider>\n    </ToastContext.Provider>\n  )\n}\n\nexport function useToastContext() {\n  return useContext(ToastContext)\n}\n\ntry{ ToastContext.displayName ||= 'ToastContext' } catch {}\ntry{ InternalToastsContext.displayName ||= 'InternalToastsContext' } catch {}\ntry{ ToastContextProvider.displayName ||= 'ToastContextProvider' } catch {}"],"names":["AnalyticsProvider","children","appName","category","metadata","value","useMemo","AnalyticsContext","Provider","displayName","createContext","env","getEnv","getLocale","locale","loadEnv","document","envTag","getElementById","JSON","parse","textContent","error","console","ready","ssrSafeDocument","readyState","Promise","resolve","addEventListener","loaded","ssrSafeWindow","getEnabledFeaturesSet","Set","features","featureFlags","map","feature","toLowerCase","featuresSet","IS_SERVER","memoize","getEnabledFeatures","Array","from","isFeatureEnabled","name","has","featureFlag","noop","AppContext","createBrowserHistory","options","listener","history","routerCreateBrowserHistory","v5Compat","blockers","ignoreNextHistoryUpdate","doIfUnblocked","fn","length","blocker","retry","listen","update","action","Action","Pop","delta","go","location","createHref","to","createURL","encodeLocation","push","state","replace","newListener","undefined","block","filter","b","EXPECTED_ERRORS","ssrOptions","globalThis","getColorModes","colorMode","getSchemeFromMode","mode","dayScheme","lightTheme","nightScheme","darkTheme","documentElement","setColorMode","useState","dataset","useEffect","observer","MutationObserver","observe","attributes","attributeFilter","disconnect","runtimeEnvironment","head","querySelector","content","isEnterprise","bundler","BUNDLER","NoOpStorage","getItem","setItem","removeItem","clear","key","safeStorage","storageKey","throwQuotaErrorsOnSet","global","deserialize","serialize","storage","emitStats","sendCacheStats","sendStats","incrementKey","ttl","expiryKey","now","Date","getTime","expiry","Number","toString","Error","message","includes","jsonSafeStorage","storageBackend","stringify","window","ssrSafeHistory","ssrSafeLocation","pathname","origin","search","hash","href","IS_BROWSER","wasServerRendered","Boolean","stats","stat","flushImmediately","samplingProbability","timestamp","loggedIn","staff","isStaff","Math","random","flushStats","throttledScheduleSendStats","queued","throttle","requestIdleCallback","url","batch","getBatches","items","batches","itemStrings","item","makeBatch","firstItem","shift","size","nextItemSize","itemString","safeSend","data","navigator","sendBeacon","join","useHydratedEffect","effect","deps","useLayoutEffect","useIsMounted","mountedRef","useRef","isMounted","useCallback","current","initialState","setState","AppContextProvider","routes","appContextProviderValue","PrimerFeatureFlags","flags","React","result","flag","startsWith","FeatureFlags","BaseProviders","useColorModes","RenderPhaseProvider","ThemeProvider","preventSSRMismatch","ToastContextProvider","typeClass","info","success","typeIcon","InfoIcon","CheckIcon","StopIcon","Toast","timeToLive","icon","type","role","isVisible","setIsVisible","safeSetTimeout","useSafeTimeout","Portal","div","className","id","data-testid","span","Toasts","toasts","persistedToast","useContext","InternalToastsContext","toastInfo","index","TOAST_SHOW_TIME","SSRErrorToast","ssrError","addToast","useToastContext","isExpectedError","CommonElements","RenderPhase","RenderPhaseContext","renderPhase","setRenderPhase","ToastContext","addPersistedToast","clearPersistedToast","setToasts","useSafeState","setPersistedToast","toast","slice","contextValue","internalToastsContext"],"sourceRoot":""}