# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Aleph::Proto::TextDocumentLocationResponse`.
# Please instead update this file by running `bin/tapioca dsl Aleph::Proto::TextDocumentLocationResponse`.

class Aleph::Proto::TextDocumentLocationResponse
  sig do
    params(
      available_backends: T.nilable(T.any(Google::Protobuf::RepeatedField[T.any(Symbol, Integer)], T::Array[T.any(Symbol, Integer)])),
      backend: T.nilable(T.any(Symbol, Integer)),
      commit_oid: T.nilable(String),
      locations: T.nilable(T.any(Google::Protobuf::RepeatedField[Aleph::Proto::Location], T::Array[Aleph::Proto::Location])),
      repository_id: T.nilable(Integer)
    ).void
  end
  def initialize(available_backends: T.unsafe(nil), backend: nil, commit_oid: nil, locations: T.unsafe(nil), repository_id: nil); end

  sig { returns(Google::Protobuf::RepeatedField[T.any(Symbol, Integer)]) }
  def available_backends; end

  sig { params(value: Google::Protobuf::RepeatedField[T.any(Symbol, Integer)]).void }
  def available_backends=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def backend; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def backend=(value); end

  sig { void }
  def clear_available_backends; end

  sig { void }
  def clear_backend; end

  sig { void }
  def clear_commit_oid; end

  sig { void }
  def clear_locations; end

  sig { void }
  def clear_repository_id; end

  sig { returns(String) }
  def commit_oid; end

  sig { params(value: String).void }
  def commit_oid=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Aleph::Proto::Location]) }
  def locations; end

  sig { params(value: Google::Protobuf::RepeatedField[Aleph::Proto::Location]).void }
  def locations=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end
end
