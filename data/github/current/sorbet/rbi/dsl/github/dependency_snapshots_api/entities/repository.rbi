# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Github::DependencySnapshotsApi::Entities::Repository`.
# Please instead update this file by running `bin/tapioca dsl Github::DependencySnapshotsApi::Entities::Repository`.

class Github::DependencySnapshotsApi::Entities::Repository
  sig do
    params(
      default_branch: T.nilable(String),
      default_branch_ref: T.nilable(String),
      id: T.nilable(Integer),
      is_archived: T.nilable(T::Boolean),
      is_fork: T.nilable(T::Boolean),
      name: T.nilable(String),
      owner_id: T.nilable(Integer),
      parent_id: T.nilable(Integer),
      pushed_at: T.nilable(Google::Protobuf::Timestamp),
      visibility: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(default_branch: nil, default_branch_ref: nil, id: nil, is_archived: nil, is_fork: nil, name: nil, owner_id: nil, parent_id: nil, pushed_at: nil, visibility: nil); end

  sig { void }
  def clear_default_branch; end

  sig { void }
  def clear_default_branch_ref; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_is_archived; end

  sig { void }
  def clear_is_fork; end

  sig { void }
  def clear_name; end

  sig { void }
  def clear_owner_id; end

  sig { void }
  def clear_parent_id; end

  sig { void }
  def clear_pushed_at; end

  sig { void }
  def clear_visibility; end

  sig { returns(String) }
  def default_branch; end

  sig { params(value: String).void }
  def default_branch=(value); end

  sig { returns(String) }
  def default_branch_ref; end

  sig { params(value: String).void }
  def default_branch_ref=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(T::Boolean) }
  def is_archived; end

  sig { params(value: T::Boolean).void }
  def is_archived=(value); end

  sig { returns(T::Boolean) }
  def is_fork; end

  sig { params(value: T::Boolean).void }
  def is_fork=(value); end

  sig { returns(String) }
  def name; end

  sig { params(value: String).void }
  def name=(value); end

  sig { returns(Integer) }
  def owner_id; end

  sig { params(value: Integer).void }
  def owner_id=(value); end

  sig { returns(Integer) }
  def parent_id; end

  sig { params(value: Integer).void }
  def parent_id=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def pushed_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def pushed_at=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def visibility; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def visibility=(value); end
end
