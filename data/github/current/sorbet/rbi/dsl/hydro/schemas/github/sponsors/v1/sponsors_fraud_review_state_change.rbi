# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Sponsors::V1::SponsorsFraudReviewStateChange`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Sponsors::V1::SponsorsFraudReviewStateChange`.

class Hydro::Schemas::Github::Sponsors::V1::SponsorsFraudReviewStateChange
  sig do
    params(
      fraud_review: T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsFraudReview),
      previous_state: T.nilable(T.any(Symbol, Integer)),
      reviewed_at: T.nilable(Google::Protobuf::Timestamp),
      reviewer: T.nilable(Hydro::Schemas::Github::V1::Entities::User),
      sponsorable: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(fraud_review: nil, previous_state: nil, reviewed_at: nil, reviewer: nil, sponsorable: nil); end

  sig { void }
  def clear_fraud_review; end

  sig { void }
  def clear_previous_state; end

  sig { void }
  def clear_reviewed_at; end

  sig { void }
  def clear_reviewer; end

  sig { void }
  def clear_sponsorable; end

  sig { returns(T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsFraudReview)) }
  def fraud_review; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::Sponsors::V1::Entities::SponsorsFraudReview)).void }
  def fraud_review=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def previous_state; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def previous_state=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def reviewed_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def reviewed_at=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def reviewer; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def reviewer=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def sponsorable; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def sponsorable=(value); end
end
