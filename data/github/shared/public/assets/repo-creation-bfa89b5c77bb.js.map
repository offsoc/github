{"version":3,"file":"repo-creation-xxxxxxxxxxxx.js","mappings":"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","sources":["app/assets/modules/repo-creation/App.tsx","app/assets/modules/repo-creation/components/InfoMessage.tsx","app/assets/modules/repo-creation/components/CreationSummary.tsx","app/assets/modules/repo-creation/components/Description.tsx","app/assets/modules/repo-creation/hooks/use-user-analytics.ts","app/assets/modules/repo-creation/components/LicensePicker.tsx","app/assets/modules/repo-creation/components/InitializeRepositoryOptions.tsx","app/assets/modules/repo-creation/components/MarketplaceAppsSelection.tsx","ui/packages/owner-dropdown/OwnerDropdownItems.tsx","ui/packages/owner-dropdown/OwnerDropdown.tsx","app/assets/modules/repo-creation/contexts/CurrentForm.tsx","app/assets/modules/repo-creation/hooks/use-repo-owner-items-path.ts","app/assets/modules/repo-creation/components/RepoNameInput.tsx","app/assets/modules/repo-creation/hooks/check-repo-name.ts","app/assets/modules/repo-creation/components/OwnerRepoSelection.tsx","app/assets/modules/repo-creation/components/VisibilitySelection.tsx","app/assets/modules/repo-creation/components/OwnerRepoVisibilitySelection.tsx","app/assets/modules/repo-creation/components/RepoCreationForm.tsx","app/assets/modules/repo-creation/components/RepoNameGenerator.tsx","app/assets/modules/repo-creation/components/RepoTemplateMenu.tsx","app/assets/modules/repo-creation/components/RequiredCustomPropertiesSelection.tsx","app/assets/modules/repo-creation/hooks/use-selected-owner.ts","app/assets/modules/repo-creation/pages/Create.tsx","app/assets/modules/repo-creation/pages/Fork.tsx","app/assets/modules/repo-creation/pages/Import.tsx","app/assets/modules/repo-creation/types/repo-creation-types.ts","app/assets/modules/repo-creation/components/OwnerRadioButtonSelection.tsx","app/assets/modules/repo-creation/components/TeamListItem.tsx","app/assets/modules/repo-creation/components/TeamSelection.tsx","app/assets/modules/repo-creation/pages/Transfer.tsx","app/assets/modules/repo-creation/index.ts","ui/packages/analytics-overrides/analytics-overrides.ts","ui/packages/details-dialog/details-dialog.ts","ui/packages/failbot/failbot.ts","ui/packages/html-safe-nonce/html-safe-nonce.ts","ui/packages/trusted-types-policies/server-x-safe-html.ts","ui/packages/fetch-utils/fetch-utils.ts","ui/packages/is-hash-navigation/is-hash-navigation.ts","ui/packages/trusted-types-policies/parse-html.ts","ui/packages/parse-html/parse-html.ts","ui/packages/react-core/use-feature-flag.ts","ui/packages/repos-async-validation/hooks/use-async-validation.ts","ui/packages/sudo/sudo.ts","ui/packages/test-id-props/test-id-props.ts","ui/packages/trusted-types-policies/policy.ts","ui/packages/trusted-types/trusted-types.ts","ui/packages/use-analytics/use-analytics.ts","ui/packages/use-navigate/use-navigate.ts","ui/packages/verified-fetch/verified-fetch.ts","ui/packages/webauthn-support-level/webauthn-support-level.ts","ui/packages/current-repository/CurrentRepository.tsx","ui/packages/git-ignore-dropdown/GitIgnoreDropdown.tsx","ui/packages/github-avatar/GitHubAvatar.tsx","ui/packages/react-core/JsonRoute.tsx","ui/packages/safe-html/SafeHTML.tsx","ui/packages/search-dropdown/SearchDropdown.tsx","ui/packages/single-sign-on-banner/SingleSignOnBanner.tsx"],"sourcesContent":["import {CurrentRepositoryProvider, type Repository} from '@github-ui/current-repository'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport type {PropsWithChildren} from 'react'\n\nexport function App({children}: PropsWithChildren) {\n  const {repo} = useRoutePayload<{repo?: Repository}>()\n  return repo ? <CurrentRepositoryProvider repository={repo}>{children}</CurrentRepositoryProvider> : <>{children}</>\n}\n\ntry{ App.displayName ||= 'App' } catch {}","import {InfoIcon} from '@primer/octicons-react'\nimport {Box, Octicon} from '@primer/react'\n\nexport function InfoMessage({message, topBorder = true}: {message: string; topBorder?: boolean}) {\n  return (\n    <Box\n      sx={{\n        fontSize: 14,\n        color: 'fg.muted',\n        py: 3,\n        borderBottomColor: 'border.muted',\n        borderBottomWidth: 1,\n        borderBottomStyle: 'solid',\n        ...(topBorder && {\n          borderTopColor: 'border.muted',\n          borderTopWidth: 1,\n          borderTopStyle: 'solid',\n        }),\n      }}\n    >\n      <Octicon icon={InfoIcon} sx={{mx: 1}} />\n      <span>{message}</span>\n    </Box>\n  )\n}\n\nexport function DisabledCreationInPersonalNamespaceMessage() {\n  return (\n    <InfoMessage message=\"Creating repositories in your personal namespace is disabled in this GitHub Enterprise instance.\" />\n  )\n}\n\ntry{ InfoMessage.displayName ||= 'InfoMessage' } catch {}\ntry{ DisabledCreationInPersonalNamespaceMessage.displayName ||= 'DisabledCreationInPersonalNamespaceMessage' } catch {}","import type {OwnerItem} from '@github-ui/owner-dropdown'\nimport type {Visibility} from '@github-ui/repos-list/repos-list-types'\n\nimport {InfoMessage} from './InfoMessage'\n\ninterface Props {\n  owner?: OwnerItem\n  topBorder?: boolean\n}\n\ninterface CreateProps extends Props {\n  visibility: Visibility\n  action: 'create'\n}\n\ninterface ForkProps extends Props {\n  action: 'fork'\n}\n\nfunction isCreateProps(props: CreateProps | ForkProps): props is CreateProps {\n  return props.action === 'create'\n}\n\nexport function CreationSummary(props: CreateProps | ForkProps) {\n  const {owner, topBorder = false} = props\n  if (!owner) {\n    return null\n  }\n\n  const {name, businessName, isOrganization} = owner\n  const targetOrgName = isOrganization ? name : null\n  const orgText = targetOrgName\n    ? ` in the ${targetOrgName} organization${businessName ? ` (${businessName})` : ''}`\n    : ' in your personal account'\n\n  let message = ''\n  if (isCreateProps(props)) {\n    const {visibility} = props\n    message = `You are creating a${visibility === 'internal' ? 'n' : ''} ${visibility} repository${orgText}.`\n  } else {\n    message = `You are creating a fork${orgText}.`\n  }\n\n  return <InfoMessage message={message} topBorder={topBorder} />\n}\n\ntry{ CreationSummary.displayName ||= 'CreationSummary' } catch {}","import {FormControl, Text, TextInput} from '@primer/react'\nimport {forwardRef, useEffect} from 'react'\n\nexport const Description = forwardRef(\n  (\n    {\n      description,\n      onDescriptionChange,\n      tooLong,\n      setTooLong,\n    }: {\n      description: string\n      onDescriptionChange: (value: string) => void\n      tooLong: boolean\n      setTooLong: (value: boolean) => void\n    },\n    ref: React.ForwardedRef<HTMLInputElement>,\n  ) => {\n    useEffect(() => {\n      setTooLong(description.length > 350)\n    }, [description, setTooLong])\n\n    return (\n      <FormControl>\n        <FormControl.Label>\n          Description <Text sx={{fontSize: 0, color: 'fg.muted'}}>(optional)</Text>\n        </FormControl.Label>\n        <TextInput\n          ref={ref}\n          block\n          aria-label=\"Description\"\n          name=\"Description\"\n          value={description}\n          onChange={e => onDescriptionChange(e.target.value)}\n          validationStatus={tooLong ? 'error' : undefined}\n        />\n        {tooLong && (\n          <FormControl.Validation variant=\"error\">\n            Description cannot be more than 350 characters\n          </FormControl.Validation>\n        )}\n      </FormControl>\n    )\n  },\n)\n\nDescription.displayName = 'Description'\n","import {useAnalytics} from '@github-ui/use-analytics'\nimport {useCallback} from 'react'\n\nexport type RepositoryClickTarget =\n  | 'README_CHECKBOX'\n  | 'LICENSE_SELECT'\n  | 'GITIGNORE_SELECT'\n  | 'TEMPLATE_SELECT'\n  | 'ONE_BRANCH_CHECKBOX'\n  | 'SUBMIT_BUTTON'\n\ntype SendRepoClickEventFunction = (target: RepositoryClickTarget, payload?: {[key: string]: unknown}) => void\n\n/**\n * Use this hook to send user analytics events to the data warehouse.\n * Please note that hook uses `sendEvent` helper,\n * which enriches event context with additional information about the user, repository, and current page.\n *\n *\n * @example\n * ```tsx\n * function Component() {\n *   const { sendRepoClickEvent } = useUserAnalytics()\n *   return <Button onClick={() => sendRepoClickEvent('FIND_FILE_BUTTON')}>Find file</Button>\n * }\n * ```\n *\n */\nexport function useUserAnalytics(): {\n  sendRepoFormClickEvent: SendRepoClickEventFunction\n} {\n  const {sendAnalyticsEvent} = useAnalytics()\n\n  return {\n    sendRepoFormClickEvent: useCallback(\n      (target, payload = {}) => {\n        sendAnalyticsEvent('repo_form.click', target, payload)\n      },\n      [sendAnalyticsEvent],\n    ),\n  }\n}\n","/* eslint eslint-comments/no-use: off */\nimport {SearchDropdown} from '@github-ui/search-dropdown'\nimport {Box, FormControl, Link} from '@primer/react'\n\nimport {useUserAnalytics} from '../hooks/use-user-analytics'\nimport type {License} from '../types/repo-creation-types'\n\nexport function LicensePicker({\n  licenses,\n  selectedLicense,\n  onLicenseSelection,\n  docsUrl,\n}: {\n  licenses: License[]\n  selectedLicense?: License\n  onLicenseSelection: (license: License) => void\n  docsUrl: string\n}) {\n  const {sendRepoFormClickEvent} = useUserAnalytics()\n\n  return (\n    <>\n      <FormControl sx={{mb: 3}}>\n        <FormControl.Label id=\"license-picker-label\" htmlFor=\"license-picker\">\n          Choose a license\n        </FormControl.Label>\n        <FormControl.Caption id=\"license-picker-caption\">\n          A license tells others what they can and can&apos;t do with your code.{' '}\n          <Link inline href={docsUrl} target=\"_blank\">\n            Learn more about licenses.\n          </Link>\n        </FormControl.Caption>\n        <Box sx={{my: 1}}>\n          <SearchDropdown\n            title=\"License\"\n            inputLabel=\"License filter\"\n            selectedItem={selectedLicense}\n            items={licenses}\n            onOpen={() =>\n              sendRepoFormClickEvent('LICENSE_SELECT', {\n                action: 'open',\n              })\n            }\n            onSelect={license => {\n              onLicenseSelection(license)\n              sendRepoFormClickEvent('LICENSE_SELECT', {\n                action: 'select',\n                option: license.text,\n              })\n            }}\n            textInputProps={{id: 'license-picker', 'aria-describedby': 'license-picker-caption'}}\n            anchorButtonProps={{'aria-describedby': 'license-picker-label'}}\n            allowNoneOption={true}\n          />\n        </Box>\n      </FormControl>\n    </>\n  )\n}\n\ntry{ LicensePicker.displayName ||= 'LicensePicker' } catch {}","import {GitIgnoreDropdown} from '@github-ui/git-ignore-dropdown'\nimport {GitBranchIcon} from '@primer/octicons-react'\nimport {Box, Checkbox, FormControl, Link, Text} from '@primer/react'\n\nimport {useUserAnalytics} from '../hooks/use-user-analytics'\nimport type {License, OwnerSelection} from '../types/repo-creation-types'\nimport {LicensePicker} from './LicensePicker'\n\nexport function InitializeRepositoryOptions({\n  addReadme,\n  onAddReadmeChange,\n  licensePickerAvailable,\n  ownerSelection,\n  licenses,\n  selectedLicense,\n  onLicenseChange,\n  selectedGitignoreTemplate,\n  onGitignoreTemplateChange,\n  currentUserLogin,\n  helpUrl,\n  docsUrls,\n}: {\n  addReadme: boolean\n  onAddReadmeChange: (newAddReadme: boolean) => void\n  licensePickerAvailable: boolean\n  ownerSelection?: OwnerSelection\n  licenses: License[]\n  selectedLicense?: License\n  onLicenseChange: (newLicense: License) => void\n  selectedGitignoreTemplate: string\n  onGitignoreTemplateChange: (newGitignoreTemplate: string) => void\n  currentUserLogin: string\n  helpUrl: string\n  docsUrls: {\n    licensePicker: string\n  }\n}) {\n  const {sendRepoFormClickEvent} = useUserAnalytics()\n\n  return (\n    <div>\n      <FormControl sx={{mb: 3}}>\n        <FormControl.Label>Initialize this repository with:</FormControl.Label>\n        <FormControl>\n          <FormControl.Label>Add a README file</FormControl.Label>\n          <FormControl.Caption>\n            This is where you can write a long description for your project.{' '}\n            <Link\n              inline\n              href={`${helpUrl}/github/creating-cloning-and-archiving-repositories/about-readmes`}\n              target=\"_blank\"\n            >\n              Learn more about READMEs.\n            </Link>\n          </FormControl.Caption>\n          <Checkbox\n            checked={addReadme}\n            onChange={() => {\n              sendRepoFormClickEvent('README_CHECKBOX', {\n                action: 'change',\n                option: addReadme,\n              })\n              onAddReadmeChange(!addReadme)\n            }}\n          />\n        </FormControl>\n      </FormControl>\n      <FormControl sx={{mb: 3}}>\n        <FormControl.Label htmlFor=\"gitignore-dropdown\">Add .gitignore</FormControl.Label>\n        <FormControl.Caption id=\"gitignore-dropdown-caption\">\n          Choose which files not to track from a list of templates.{' '}\n          <Link inline href={`${helpUrl}/github/using-git/ignoring-files`} target=\"_blank\">\n            Learn more about ignoring files.\n          </Link>\n        </FormControl.Caption>\n        <Box sx={{my: 1}}>\n          <GitIgnoreDropdown\n            selectedTemplate={selectedGitignoreTemplate}\n            onSelect={gitingore => {\n              sendRepoFormClickEvent('GITIGNORE_SELECT', {\n                action: 'select',\n                option: gitingore,\n              })\n              onGitignoreTemplateChange(gitingore)\n            }}\n            onOpen={() =>\n              sendRepoFormClickEvent('GITIGNORE_SELECT', {\n                action: 'open',\n              })\n            }\n            allowNoneOption={true}\n            textInputProps={{id: 'gitignore-dropdown', 'aria-describedby': 'gitignore-dropdown-caption'}}\n          />\n        </Box>\n      </FormControl>\n      {licensePickerAvailable && (\n        <LicensePicker\n          licenses={licenses}\n          selectedLicense={selectedLicense}\n          onLicenseSelection={onLicenseChange}\n          docsUrl={docsUrls.licensePicker}\n        />\n      )}\n      {addReadme && ownerSelection && (\n        <Box sx={{mb: 2}}>\n          <DefaultBranchMessage ownerSelection={ownerSelection} currentUserLogin={currentUserLogin} />\n        </Box>\n      )}\n    </div>\n  )\n}\n\nfunction DefaultBranchMessage({\n  ownerSelection,\n  currentUserLogin,\n}: {\n  ownerSelection: OwnerSelection\n  currentUserLogin: string\n}) {\n  return (\n    <Text sx={{color: 'fg.muted'}}>\n      This will set{' '}\n      <span className=\"commit-ref\">\n        <GitBranchIcon />\n        {ownerSelection.defaultNewRepoBranch}\n      </span>{' '}\n      as the default branch.\n      {ownerSelection.defaultBranchSettingsUrl && (\n        <span>\n          {' '}\n          Change the default name in {currentUserLogin === ownerSelection.name\n            ? 'your'\n            : `${ownerSelection.name}'s`}{' '}\n          <Link aria-label=\"Branch settings link\" href={ownerSelection.defaultBranchSettingsUrl} inline>\n            settings\n          </Link>\n          .\n        </span>\n      )}\n    </Text>\n  )\n}\n\ntry{ InitializeRepositoryOptions.displayName ||= 'InitializeRepositoryOptions' } catch {}\ntry{ DefaultBranchMessage.displayName ||= 'DefaultBranchMessage' } catch {}","import {Box, Checkbox, CheckboxGroup, FormControl, Text} from '@primer/react'\n\nimport type {MarketplaceAppListing} from '../types/repo-creation-types'\n\nexport function MarketplaceAppsSelection({\n  listings,\n  selectedListings,\n  currentOwnerName,\n  currentUserLogin,\n  handleChange,\n}: {\n  listings: MarketplaceAppListing[]\n  selectedListings: string[]\n  currentOwnerName: string\n  currentUserLogin: string\n  handleChange: (selectedValues: string[]) => void\n}) {\n  return listings?.length > 0 ? (\n    <CheckboxGroup onChange={handleChange}>\n      <CheckboxGroup.Label>Grant your Marketplace apps access to this repository</CheckboxGroup.Label>\n      <CheckboxGroup.Caption>\n        {currentOwnerName === currentUserLogin ? 'You are' : `${currentOwnerName} is`} subscribed to {listings.length}{' '}\n        Marketplace app{listings?.length === 1 ? '' : 's'}.\n      </CheckboxGroup.Caption>\n      {listings.map(listing => (\n        <FormControl key={listing.id}>\n          <Checkbox\n            value={listing.id.toString()}\n            checked={listing.autoInstall || selectedListings.includes(listing.id.toString())}\n          />\n          <FormControl.LeadingVisual>\n            <Box className=\"CircleBadge CircleBadge--tiny\" sx={{background: `#${listing.bgcolor}`}}>\n              <img className=\"CircleBadge-icon\" src={listing.primaryAvatarUrl} alt={`${listing.name} logo preview`} />\n            </Box>\n          </FormControl.LeadingVisual>\n          <FormControl.Label>\n            {listing.name}\n            {listing.autoInstall && (\n              <Text as=\"em\" sx={{fontSize: 12, fontWeight: 'normal', color: 'fg.muted'}}>\n                {' '}\n                (auto-installed)\n              </Text>\n            )}\n          </FormControl.Label>\n          <FormControl.Caption>{listing.normalizedShortDescription}</FormControl.Caption>\n        </FormControl>\n      ))}\n    </CheckboxGroup>\n  ) : null\n}\n\ntry{ MarketplaceAppsSelection.displayName ||= 'MarketplaceAppsSelection' } catch {}","import {GitHubAvatar} from '@github-ui/github-avatar'\nimport {ActionList} from '@primer/react'\n\nimport type {OwnerItem} from './OwnerDropdown'\n\nexport function OwnerDropdownItems({\n  ownerItems,\n  selectedOwner,\n  onSelect,\n}: {\n  ownerItems: OwnerItem[]\n  selectedOwner?: OwnerItem\n  onSelect: (selectedOwner: OwnerItem) => void\n}) {\n  const ownerListItems = ownerItems.map(item => {\n    const {name, avatarUrl, disabled, customDisabledMessage} = item\n    return (\n      <ActionList.Item\n        key={name}\n        selected={name === selectedOwner?.name}\n        disabled={disabled}\n        onSelect={() => onSelect(item)}\n      >\n        <ActionList.LeadingVisual>\n          <GitHubAvatar src={avatarUrl} />\n        </ActionList.LeadingVisual>\n        {name} {disabled && (customDisabledMessage || '(Insufficient permission)')}\n      </ActionList.Item>\n    )\n  })\n\n  return <ActionList selectionVariant=\"single\">{ownerListItems}</ActionList>\n}\n\ntry{ OwnerDropdownItems.displayName ||= 'OwnerDropdownItems' } catch {}","import {GitHubAvatar} from '@github-ui/github-avatar'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {ActionList, ActionMenu, FormControl, TextInput} from '@primer/react'\nimport {forwardRef, useState} from 'react'\n\nimport {OwnerDropdownItems} from './OwnerDropdownItems'\n\nexport interface OwnerItem {\n  id?: number\n  name: string\n  avatarUrl: string\n  disabled: boolean\n  isOrganization: boolean\n  customDisabledMessage?: string | null\n  businessName?: string | null\n}\n\nexport interface OwnerDropdownProps {\n  initialOwnerItems?: OwnerItem[]\n  ownerItemsPath: string\n  excludedOrg?: string\n  selectedOwner?: OwnerItem\n  onOwnerChange: (newOwner: OwnerItem) => void\n  showLabel?: boolean\n  hideSelectOwnerCheck?: boolean\n  'aria-describedby'?: string\n}\n\nconst defaultValidationMessageId = 'repo-owner-dropdown-error'\n\nexport const OwnerDropdown = forwardRef(\n  (\n    {\n      initialOwnerItems,\n      ownerItemsPath,\n      excludedOrg,\n      selectedOwner,\n      onOwnerChange,\n      showLabel = true,\n      hideSelectOwnerCheck = false,\n      'aria-describedby': ariaDescribedBy,\n    }: OwnerDropdownProps,\n    ref: React.ForwardedRef<HTMLButtonElement>,\n  ) => {\n    const [ownerItems, setOwnerItems] = useState(initialOwnerItems)\n    const [hasLoadedOwnerSelections, setHasLoadedOwnerSelections] = useState(false)\n    const [displayOrgLoadErrorMsg, setDisplayOrgLoadErrorMsg] = useState(false)\n    const [searchTerm, setSearchTerm] = useState('')\n\n    const loadOwners = async (open: boolean) => {\n      if (open && !hasLoadedOwnerSelections && !ownerItems) {\n        setHasLoadedOwnerSelections(true)\n        setDisplayOrgLoadErrorMsg(false)\n        try {\n          const result = await verifiedFetchJSON(ownerItemsPath)\n          const data = await result.json()\n\n          const owners = data?.owners\n          if (!result.ok || !owners) {\n            handleErrorLoadingOrgs()\n            return\n          }\n\n          setDisplayOrgLoadErrorMsg(false)\n          setOwnerItems(owners)\n        } catch (error) {\n          handleErrorLoadingOrgs()\n        }\n      }\n    }\n\n    const handleErrorLoadingOrgs = () => {\n      setHasLoadedOwnerSelections(false)\n      setOwnerItems(undefined)\n      setDisplayOrgLoadErrorMsg(true)\n    }\n\n    const headerButton = () => {\n      const displayName = selectedOwner?.name || 'Choose an owner'\n      const buttonAvatar =\n        selectedOwner && (() => <GitHubAvatar src={selectedOwner.avatarUrl} key={selectedOwner.avatarUrl} />)\n\n      return (\n        <ActionMenu.Button\n          aria-describedby={ariaDescribedBy || defaultValidationMessageId}\n          aria-label={displayName}\n          leadingVisual={buttonAvatar}\n        >\n          {displayName}\n        </ActionMenu.Button>\n      )\n    }\n\n    const itemsToDisplay = ownerItems?.filter(item => {\n      if (excludedOrg && item.name === excludedOrg) {\n        return false\n      }\n\n      return item.name.toLowerCase().includes(searchTerm.toLowerCase())\n    })\n\n    return (\n      <FormControl required>\n        <FormControl.Label visuallyHidden={!showLabel}>Owner</FormControl.Label>\n        <ActionMenu anchorRef={ref as React.RefObject<HTMLButtonElement>} onOpenChange={loadOwners}>\n          {headerButton()}\n          <ActionMenu.Overlay width=\"small\" maxHeight=\"large\" sx={{overflow: 'auto'}}>\n            <ActionList showDividers>\n              <ActionList.Group>\n                <TextInput\n                  sx={{mx: 2, display: 'flex'}}\n                  aria-label=\"Search owner\"\n                  placeholder=\"Filter…\"\n                  value={searchTerm}\n                  onChange={event => setSearchTerm(event.target.value)}\n                />\n              </ActionList.Group>\n              <ActionList.Group sx={{maxHeight: 350, overflow: 'auto'}}>\n                {itemsToDisplay && (\n                  <OwnerDropdownItems\n                    ownerItems={itemsToDisplay}\n                    selectedOwner={selectedOwner}\n                    onSelect={onOwnerChange}\n                  />\n                )}\n                {!itemsToDisplay && !displayOrgLoadErrorMsg && (\n                  <ActionList.Item key=\"fetching-owners\" disabled={true}>\n                    Fetching owners…\n                  </ActionList.Item>\n                )}\n                {displayOrgLoadErrorMsg && (\n                  <ActionList.Item key=\"error-fetching-owners\" disabled={true} sx={{color: 'danger.fg'}}>\n                    An error occurred while loading organizations. Please reopen the dropdown to try again.\n                  </ActionList.Item>\n                )}\n              </ActionList.Group>\n            </ActionList>\n          </ActionMenu.Overlay>\n        </ActionMenu>\n        {!hideSelectOwnerCheck && !selectedOwner && (\n          <FormControl.Validation id={defaultValidationMessageId} variant=\"error\">\n            Please select an owner\n          </FormControl.Validation>\n        )}\n      </FormControl>\n    )\n  },\n)\n\nOwnerDropdown.displayName = 'OwnerDropdown'\n","import React from 'react'\n\ntype FormType = 'fork' | 'create' | 'transfer'\nconst CurrentFormTypeContext = React.createContext<FormType>('create')\n\nexport function CurrentFormTypeProvider({type = 'create', children}: React.PropsWithChildren<{type?: FormType}>) {\n  return <CurrentFormTypeContext.Provider value={type}> {children} </CurrentFormTypeContext.Provider>\n}\n\nexport function useCurrentFormType() {\n  return React.useContext(CurrentFormTypeContext)\n}\n\ntry{ CurrentFormTypeContext.displayName ||= 'CurrentFormTypeContext' } catch {}\ntry{ CurrentFormTypeProvider.displayName ||= 'CurrentFormTypeProvider' } catch {}","import {useCurrentRepository} from '@github-ui/current-repository'\nimport {repoForkOwnerItemsPath, repoOwnerItemsPath} from '@github-ui/paths'\n\nimport {useCurrentFormType} from '../contexts/CurrentForm'\n\nexport function useRepoOwnerItemsPath() {\n  const repo = useCurrentRepository()\n  const forking = useCurrentFormType() === 'fork'\n  const url = forking ? repoForkOwnerItemsPath(repo.id) : repoOwnerItemsPath()\n  return url\n}\n","import {testIdProps} from '@github-ui/test-id-props'\nimport {Box, FormControl, TextInput} from '@primer/react'\nimport {forwardRef, useEffect} from 'react'\n\nimport {type CheckResult, isError, useCheckRepoName} from '../hooks/check-repo-name'\n\nconst repoInputAvailableMessageId = 'RepoNameInput-is-available'\nconst repoInputDefaultMessageId = 'RepoNameInput-message'\n\nexport const RepoNameInput = forwardRef(\n  (\n    props: {\n      repositoryName: string\n      readonly?: boolean\n      hideBlankCheck?: boolean\n      selectedOwnerName: string | undefined\n      onChange: (newRepoName: string) => void\n      onValidityChange: (valid: boolean) => void\n    },\n    ref: React.ForwardedRef<HTMLInputElement>,\n  ) => {\n    const {repositoryName, selectedOwnerName, onChange, onValidityChange} = props\n    const [result, runCheck] = useCheckRepoName(onValidityChange)\n\n    useEffect(() => {\n      onValidityChange(false)\n      if (selectedOwnerName) {\n        runCheck({name: repositoryName, owner: selectedOwnerName})\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps -- Only re-check when owner or repo change\n    }, [selectedOwnerName, repositoryName])\n\n    return (\n      <FormControl required>\n        <FormControl.Label>Repository name</FormControl.Label>\n        <TextInput\n          ref={ref}\n          value={repositoryName}\n          onChange={event => onChange(event.target.value)}\n          readOnly={props.readonly}\n          validationStatus={isError(result) ? 'error' : undefined}\n          aria-describedby={`${repoInputAvailableMessageId} ${repoInputDefaultMessageId}`}\n          {...testIdProps('repository-name-input')}\n        />\n        <NameCheckValidation\n          result={result}\n          repoName={repositoryName}\n          ownerName={selectedOwnerName}\n          hideBlankCheck={props.hideBlankCheck}\n        />\n      </FormControl>\n    )\n  },\n)\n\nRepoNameInput.displayName = 'RepoNameInput'\n\ninterface NameCheckValidationProps {\n  ownerName?: string\n  repoName: string\n  hideBlankCheck?: boolean\n  result: CheckResult\n}\n\nfunction NameCheckValidation(props: NameCheckValidationProps) {\n  const {ownerName, repoName, result} = props\n  if (!repoName) {\n    return props.hideBlankCheck ? null : (\n      <FormControl.Validation id={repoInputDefaultMessageId} variant=\"error\">\n        New repository name must not be blank\n      </FormControl.Validation>\n    )\n  }\n\n  if (!ownerName) {\n    return null\n  }\n\n  switch (result.status) {\n    case 'none':\n      return (\n        // This component is a descendant of `FormControl`\n        // eslint-disable-next-line primer-react/direct-slot-children\n        <FormControl.Caption>\n          <span aria-live=\"polite\">Checking availability…</span>\n        </FormControl.Caption>\n      )\n    case 'not_found':\n      return (\n        <FormControl.Validation id={repoInputDefaultMessageId} variant=\"error\">\n          Not Found\n        </FormControl.Validation>\n      )\n    case 'error':\n      return result.repo ? (\n        <FormControl.Validation id={repoInputDefaultMessageId} variant=\"error\">\n          The repository <strong>{result.repo}</strong> {result.errors}.\n        </FormControl.Validation>\n      ) : (\n        // An error without repo is not coming from the server, it's likely a fetch error\n        <FormControl.Validation id={repoInputDefaultMessageId} variant=\"error\">\n          {\"Couldn't check availability\"}\n        </FormControl.Validation>\n      )\n    case 'reworded':\n      return (\n        <FormControl.Validation id={repoInputDefaultMessageId} variant=\"success\">\n          Your new repository will be created as <strong>{result.repo}</strong>.\n          <Box sx={{color: 'fg.muted', fontWeight: 'normal'}}>\n            {' '}\n            The repository name can only contain ASCII letters, digits, and the characters <code>.</code>,{' '}\n            <code>-</code>, and <code>_</code>.\n            {repoName.endsWith('.git') && (\n              <div>\n                {' '}\n                The <code>.git</code> extension will be removed.\n              </div>\n            )}\n          </Box>\n        </FormControl.Validation>\n      )\n    case 'ok':\n      return (\n        <FormControl.Validation id={repoInputAvailableMessageId} variant=\"success\">\n          {result.repo} is available.\n        </FormControl.Validation>\n      )\n  }\n}\n\ntry{ NameCheckValidation.displayName ||= 'NameCheckValidation' } catch {}","import {debounce} from '@github/mini-throttle'\nimport {repositoryCheckNamePath} from '@github-ui/paths'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport {useCallback, useState} from 'react'\n\nexport interface CheckResult {\n  status: 'ok' | 'reworded' | 'error' | 'not_found' | 'none'\n  repo?: string\n  errors?: string\n}\ninterface RepoName {\n  owner: string\n  name: string\n}\n\n/**\n * This hook returns 2 pieces:\n * 1. The result of the check ('none' if not run yet)\n * 2. A function to run the check on demand (and debounced)\n */\ntype ReturnType = [CheckResult, (newName: RepoName) => void]\n\n/** A hook to check whether the repo name is valid when it changes */\nexport function useCheckRepoName(onValidityChange: (isValid: boolean) => void): ReturnType {\n  const [result, setResult] = useState<CheckResult>({status: 'none'})\n\n  async function fetchCheck({name, owner}: RepoName) {\n    const formData = new FormData()\n    formData.set('value', name)\n    formData.set('owner', owner)\n    formData.set('json_response', 'true')\n\n    try {\n      const response = await verifiedFetch(repositoryCheckNamePath(), {\n        method: 'POST',\n        body: formData,\n      })\n      const {repo, errors} = await response.json()\n      if (response.status === 404) {\n        setResult({status: 'not_found'})\n      } else if (!response.ok) {\n        setResult({status: 'error', repo, errors})\n      } else {\n        setResult({status: repo === name ? 'ok' : 'reworded', repo})\n        onValidityChange(true)\n        return\n      }\n    } catch (err) {\n      setResult({status: 'error'})\n    }\n\n    onValidityChange(false)\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps -- this lint rule wants an inline function, but debounce seems more natural\n  const debouncedFetchCheck = useCallback(debounce(fetchCheck, 300), [])\n\n  const runCheck = useCallback(\n    (newName: RepoName) => {\n      setResult({status: 'none'})\n      if (newName.name && newName.owner) {\n        debouncedFetchCheck(newName)\n      }\n    },\n    [debouncedFetchCheck],\n  )\n\n  return [result, runCheck]\n}\n\nexport function isError(result: CheckResult): boolean {\n  return result.status === 'error' || result.status === 'not_found'\n}\n","import {OwnerDropdown, type OwnerItem} from '@github-ui/owner-dropdown'\nimport {Box, Flash, Text} from '@primer/react'\nimport {forwardRef, useImperativeHandle, useMemo, useRef} from 'react'\n\nimport {useRepoOwnerItemsPath} from '../hooks/use-repo-owner-items-path'\nimport {RepoNameInput} from './RepoNameInput'\n\nexport const OwnerRepoSelection = forwardRef(\n  (\n    {\n      ownerItems,\n      selectedOwner,\n      repositoryName,\n      onRepoChange,\n      onOwnerChange,\n      hideRepoBlankCheck = false,\n      hideSelectOwnerCheck,\n      readonlyRepo = false,\n      onValidityChange,\n    }: OwnerRepoSelectionProps,\n    ref,\n  ) => {\n    const ownerDropdownRef = useRef<HTMLButtonElement>(null)\n    const repoInputRef = useRef<HTMLInputElement>(null)\n    const repoOwnerItemsPath = useRepoOwnerItemsPath()\n\n    useImperativeHandle(ref, () => ({\n      focusOwnerDropdown: () => {\n        ownerDropdownRef.current?.focus()\n      },\n      focusRepoInput: () => {\n        repoInputRef.current?.focus()\n      },\n    }))\n\n    const hasPermission = !selectedOwner?.disabled\n    const ownerDropdown = useMemo(\n      () => (\n        <OwnerDropdown\n          ref={ownerDropdownRef}\n          initialOwnerItems={ownerItems}\n          ownerItemsPath={repoOwnerItemsPath}\n          selectedOwner={selectedOwner}\n          onOwnerChange={onOwnerChange}\n          hideSelectOwnerCheck={hideSelectOwnerCheck}\n        />\n      ),\n      [ownerItems, repoOwnerItemsPath, selectedOwner, hideSelectOwnerCheck, onOwnerChange],\n    )\n    return (\n      <div data-hpc>\n        <fieldset>\n          <legend className=\"sr-only\">Repository owner and name</legend>\n          <Box sx={{display: 'flex', flexDirection: ['column', 'row']}}>\n            {/* The 21px top margin is hardocded so that the \"/\" is correctly aligned regardless of the validation state\n          of the OwnerDropdown and NewRepoInput components (as opposed to using flexbox) */}\n            {ownerDropdown}\n            {hasPermission && (\n              <>\n                <Text sx={{fontSize: 4, mx: 2, mt: '21px', display: ['none', 'block']}}>/</Text>\n                <Box sx={{mt: [2, 0]}}>\n                  <RepoNameInput\n                    ref={repoInputRef}\n                    repositoryName={repositoryName}\n                    readonly={readonlyRepo}\n                    hideBlankCheck={hideRepoBlankCheck}\n                    selectedOwnerName={selectedOwner?.name}\n                    onChange={onRepoChange}\n                    onValidityChange={onValidityChange}\n                  />\n                </Box>\n              </>\n            )}\n          </Box>\n        </fieldset>\n        {!hasPermission && (\n          <Flash sx={{mt: 2}} variant=\"warning\">\n            You don’t appear to have permission to create repositories for this organization. Sorry about that.\n          </Flash>\n        )}\n      </div>\n    )\n  },\n)\n\nOwnerRepoSelection.displayName = 'OwnerRepoSelection'\n\ninterface OwnerRepoSelectionProps {\n  ownerItems?: OwnerItem[]\n  selectedOwner?: OwnerItem\n  repositoryName: string\n  onRepoChange: (repositoryName: string) => void\n  onOwnerChange: (selectedOwner: OwnerItem) => void\n  hideRepoBlankCheck?: boolean\n  hideSelectOwnerCheck?: boolean\n  readonlyRepo?: boolean\n  onValidityChange: (valid: boolean) => void\n}\n\nexport interface OwnerRepoSelectionRef {\n  focusOwnerDropdown: () => void\n  focusRepoInput: () => void\n}\n","import type {Visibility} from '@github-ui/repos-list/repos-list-types'\nimport {SafeHTMLBox, type SafeHTMLString} from '@github-ui/safe-html'\nimport {InfoIcon, LockIcon, OrganizationIcon, RepoIcon} from '@primer/octicons-react'\nimport {Box, Flash, FormControl, Link, Octicon, Radio, RadioGroup} from '@primer/react'\nimport {useEffect} from 'react'\n\nimport type {OwnerSelection} from '../types/repo-creation-types'\n\nexport function VisibilitySelection({\n  ownerSelection,\n  privateModeEnabled,\n  selectedVisibility,\n  helpUrl,\n  tradeControlsPrivateRepoCreationWarning,\n  tradeControlsUserPrivateRepoCreationWarning,\n  onChange,\n}: {\n  ownerSelection?: OwnerSelection\n  privateModeEnabled: boolean\n  selectedVisibility: Visibility\n  helpUrl: string\n  tradeControlsPrivateRepoCreationWarning: SafeHTMLString\n  tradeControlsUserPrivateRepoCreationWarning: SafeHTMLString\n  onChange: (visibility: Visibility) => void\n}) {\n  let showPublic = false\n  let showInternal = false\n  let showPrivate = false\n\n  const orgPolicyRestrictedVisibilities: string[] = []\n  const otherWarnings: JSX.Element[] = []\n\n  if (ownerSelection) {\n    const {\n      publicRestrictedByPolicy,\n      internalRestrictedByPolicy,\n      privateRestrictedByPolicy,\n      privateRestrictedByPlan,\n      displayedVisibilities,\n      hasTradeRestrictions,\n      adminableByCurrentUser,\n      isOrganization,\n    } = ownerSelection\n\n    // Determine public repo option availability\n    if (publicRestrictedByPolicy) {\n      orgPolicyRestrictedVisibilities.push('public')\n    } else if (displayedVisibilities.includes('public')) {\n      showPublic = true\n    }\n\n    // Determine internal repo option availability\n    if (internalRestrictedByPolicy) {\n      orgPolicyRestrictedVisibilities.push('internal')\n    } else if (displayedVisibilities.includes('internal')) {\n      showInternal = true\n    }\n\n    // Determine private repo option availability\n\n    showPrivate = true\n\n    const individualTradeControls = !isOrganization && hasTradeRestrictions\n    if (individualTradeControls) {\n      otherWarnings.push(<SafeHTMLBox html={tradeControlsUserPrivateRepoCreationWarning} />)\n      showPrivate = false\n    }\n\n    const orgTradeControls = isOrganization && hasTradeRestrictions\n\n    const tradeRestrictedOrgAdmin = orgTradeControls && adminableByCurrentUser\n    if (tradeRestrictedOrgAdmin) {\n      otherWarnings.push(<SafeHTMLBox html={tradeControlsPrivateRepoCreationWarning} />)\n      showPrivate = false\n    }\n\n    const tradeRestrictedNonOrgAdmin = orgTradeControls && !adminableByCurrentUser\n    if (privateRestrictedByPolicy || tradeRestrictedNonOrgAdmin) {\n      orgPolicyRestrictedVisibilities.push('private')\n      showPrivate = false\n    }\n\n    if (privateRestrictedByPlan) {\n      otherWarnings.push(<div>Your current plan does not support private repositories.</div>)\n      showPrivate = false\n    }\n  }\n\n  useEffect(() => {\n    const selectableVisibilities: Visibility[] = []\n\n    if (showPublic) selectableVisibilities.push('public')\n    if (showInternal) selectableVisibilities.push('internal')\n    if (showPrivate) selectableVisibilities.push('private')\n\n    if (!selectableVisibilities.includes(selectedVisibility)) {\n      if (ownerSelection && selectableVisibilities.includes(ownerSelection.defaultVisibility)) {\n        onChange(ownerSelection.defaultVisibility)\n      } else if (selectableVisibilities[0]) {\n        onChange(selectableVisibilities[0])\n      }\n    }\n  }, [onChange, ownerSelection, selectedVisibility, showPublic, showPrivate, showInternal])\n\n  const selectionWarningProps = {\n    orgPolicyRestrictedVisibilities,\n    otherWarnings,\n    ownerSelection,\n  }\n\n  return (\n    <div>\n      {(!ownerSelection || orgPolicyRestrictedVisibilities.length > 0 || otherWarnings.length > 0) && (\n        <SelectionWarningBanner {...selectionWarningProps} />\n      )}\n      <RadioGroup name=\"visibilityGroup\" onChange={value => onChange(value as Visibility)}>\n        <RadioGroup.Label visuallyHidden>Visibility</RadioGroup.Label>\n        {showPublic && (\n          <PublicSelection privateModeEnabled={privateModeEnabled} checked={selectedVisibility === 'public'} />\n        )}\n        {showInternal && (\n          <InternalSelection\n            checked={selectedVisibility === 'internal'}\n            helpUrl={helpUrl}\n            ownerSelection={ownerSelection}\n          />\n        )}\n        {showPrivate && <PrivateSelection checked={selectedVisibility === 'private'} />}\n      </RadioGroup>\n    </div>\n  )\n}\n\nconst SelectionWarningBanner = ({\n  orgPolicyRestrictedVisibilities,\n  otherWarnings,\n  ownerSelection,\n}: {\n  orgPolicyRestrictedVisibilities: string[]\n  otherWarnings: JSX.Element[]\n  ownerSelection?: OwnerSelection\n}) => {\n  const commaConcat = (words: string[]) => {\n    if (words.length === 1) {\n      return words[0]\n    } else if (words.length === 2) {\n      return `${words[0]} or ${words[1]}`\n    } else {\n      return `${words.slice(0, -1).join(', ')}, or ${words.slice(-1)}`\n    }\n  }\n\n  const bannerContent = () => {\n    const orgPolicyWarning = `You may not create ${commaConcat(\n      orgPolicyRestrictedVisibilities,\n    )} repositories by organization policy.`\n    const otherWarningsList = (\n      <Box as=\"ul\" sx={{ml: 3}}>\n        {otherWarnings.map((warning, idx) => (\n          <li key={idx}>{warning}</li>\n        ))}\n      </Box>\n    )\n    if (!ownerSelection) {\n      return 'Please choose an owner to see the available visibility options.'\n    } else if (orgPolicyRestrictedVisibilities.length > 0 && otherWarnings.length === 0) {\n      return orgPolicyWarning\n    } else if (otherWarnings.length > 0 && orgPolicyRestrictedVisibilities.length === 0) {\n      return (\n        <div>\n          Some visibility options are unavailable:\n          {otherWarningsList}\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          {orgPolicyWarning} Some additional visibility options are also unavailable:\n          {otherWarningsList}\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Flash sx={{my: 2}}>\n      <Box sx={{display: 'flex', alignItems: 'baseline'}}>\n        <div>\n          <Octicon icon={InfoIcon} />\n        </div>\n        <Box sx={{display: 'inline-flex', flexDirection: 'column', ml: 1}}>{bannerContent()}</Box>\n      </Box>\n    </Flash>\n  )\n}\n\nfunction PublicSelection({\n  privateModeEnabled,\n  checked,\n}: {\n  privateModeEnabled: boolean\n  checked: boolean\n  ownerSelection?: OwnerSelection\n}) {\n  const publicRepoCaption = () => {\n    const publicAudience = privateModeEnabled ? 'Any logged in user' : 'Anyone on the internet'\n    return `${publicAudience} can see this repository. You choose who can commit.`\n  }\n\n  return (\n    <FormControl>\n      <Radio value=\"public\" checked={checked} />\n      <FormControl.LeadingVisual>\n        <Octicon icon={RepoIcon} size={24} sx={{color: 'fg.muted'}} />\n      </FormControl.LeadingVisual>\n      <FormControl.Label>Public</FormControl.Label>\n      <FormControl.Caption>{publicRepoCaption()}</FormControl.Caption>\n    </FormControl>\n  )\n}\n\nfunction InternalSelection({\n  checked,\n  helpUrl,\n  ownerSelection,\n}: {\n  checked: boolean\n  helpUrl: string\n  ownerSelection?: OwnerSelection\n}) {\n  const internalRepoCaption = () => (\n    <div>\n      {ownerSelection && ownerSelection.businessName}{' '}\n      <Link href={`${helpUrl}/articles/roles-for-an-enterprise-account#enterprise-members`} inline>\n        enterprise members\n      </Link>{' '}\n      can see this repository. You can choose who can commit.\n    </div>\n  )\n\n  return (\n    <FormControl>\n      <Radio value=\"internal\" checked={checked} />\n      <FormControl.LeadingVisual>\n        <Octicon icon={OrganizationIcon} size={24} sx={{color: 'fg.muted'}} />\n      </FormControl.LeadingVisual>\n      <FormControl.Label>Internal</FormControl.Label>\n      <FormControl.Caption>{internalRepoCaption()}</FormControl.Caption>\n    </FormControl>\n  )\n}\n\nfunction PrivateSelection({checked}: {checked: boolean}) {\n  const privateRepoCaption = () => 'You choose who can see and commit to this repository.'\n\n  return (\n    <FormControl>\n      <Radio value=\"private\" checked={checked} />\n      <FormControl.LeadingVisual>\n        <Octicon icon={LockIcon} size={24} sx={{color: 'fg.muted'}} />\n      </FormControl.LeadingVisual>\n      <FormControl.Label>Private</FormControl.Label>\n      <FormControl.Caption>{privateRepoCaption()}</FormControl.Caption>\n    </FormControl>\n  )\n}\n\ntry{ VisibilitySelection.displayName ||= 'VisibilitySelection' } catch {}\ntry{ SelectionWarningBanner.displayName ||= 'SelectionWarningBanner' } catch {}\ntry{ PublicSelection.displayName ||= 'PublicSelection' } catch {}\ntry{ InternalSelection.displayName ||= 'InternalSelection' } catch {}\ntry{ PrivateSelection.displayName ||= 'PrivateSelection' } catch {}","import type {OwnerItem} from '@github-ui/owner-dropdown'\nimport type {Visibility} from '@github-ui/repos-list/repos-list-types'\nimport type {SafeHTMLString} from '@github-ui/safe-html'\nimport {Box} from '@primer/react'\nimport {forwardRef} from 'react'\n\nimport type {OwnerSelection} from '../types/repo-creation-types'\nimport {OwnerRepoSelection} from './OwnerRepoSelection'\nimport {VisibilitySelection} from './VisibilitySelection'\n\nexport const OwnerRepoVisibilitySelection = forwardRef(\n  (\n    {\n      children,\n      ownerSelection,\n      onOwnerChange,\n      repositoryName,\n      setRepositoryName,\n      repoNameChanged,\n      setRepoNameChanged,\n      selectedVisibility,\n      setUserSelectedVisibility,\n      setIsValidRepoName,\n      ownerItems,\n      submitClicked,\n      privateModeEnabled,\n      helpUrl,\n      tradeControlsPrivateRepoCreationWarning,\n      tradeControlsUserPrivateRepoCreationWarning,\n    }: {\n      children?: React.ReactNode\n      ownerItems?: OwnerItem[]\n      ownerSelection?: OwnerSelection\n      repositoryName: string\n      setRepositoryName: (repoName: string) => void\n      onOwnerChange: (selectedOwner: OwnerItem) => void\n      submitClicked: boolean\n      repoNameChanged: boolean\n      setRepoNameChanged: (changed: boolean) => void\n      readonlyRepo?: boolean\n      setIsValidRepoName?: (valid: boolean) => void\n      privateModeEnabled: boolean\n      helpUrl: string\n      selectedVisibility: Visibility\n      setUserSelectedVisibility: (visibility: Visibility) => void\n      tradeControlsPrivateRepoCreationWarning: SafeHTMLString\n      tradeControlsUserPrivateRepoCreationWarning: SafeHTMLString\n      repoNameExistsEmpty?: boolean\n      setRepoNameExistsEmpty?: (existsEmpty: boolean) => void\n    },\n    ref,\n  ) => {\n    return (\n      <Box\n        sx={{\n          borderBottomColor: 'border.muted',\n          borderBottomWidth: 1,\n          borderBottomStyle: 'solid',\n        }}\n      >\n        <Box\n          sx={{\n            borderBottomColor: 'border.muted',\n            borderBottomWidth: 1,\n            borderBottomStyle: 'solid',\n            pb: 3,\n          }}\n        >\n          <OwnerRepoSelection\n            ref={ref}\n            ownerItems={ownerItems}\n            selectedOwner={ownerSelection}\n            repositoryName={repositoryName}\n            onRepoChange={e => {\n              setRepoNameChanged(true)\n              setRepositoryName(e)\n            }}\n            onOwnerChange={onOwnerChange}\n            hideRepoBlankCheck={!submitClicked && !repoNameChanged}\n            hideSelectOwnerCheck={!submitClicked}\n            onValidityChange={valid => setIsValidRepoName && setIsValidRepoName(valid)}\n          />\n          {children}\n        </Box>\n        <Box sx={{mt: 3}}>\n          <Box sx={{mb: 2}}>\n            <VisibilitySelection\n              ownerSelection={ownerSelection}\n              privateModeEnabled={privateModeEnabled}\n              helpUrl={helpUrl}\n              selectedVisibility={selectedVisibility}\n              onChange={setUserSelectedVisibility}\n              tradeControlsPrivateRepoCreationWarning={tradeControlsPrivateRepoCreationWarning}\n              tradeControlsUserPrivateRepoCreationWarning={tradeControlsUserPrivateRepoCreationWarning}\n            />\n          </Box>\n        </Box>\n      </Box>\n    )\n  },\n)\n\nOwnerRepoVisibilitySelection.displayName = 'OwnerRepoVisibilitySelection'\n","import {SafeHTMLBox} from '@github-ui/safe-html'\nimport {SingleSignOnBanner} from '@github-ui/single-sign-on-banner'\nimport {Box, Flash, Heading, Text} from '@primer/react'\nimport {useEffect, useRef} from 'react'\n\nexport function RepoCreationForm({\n  children,\n  flash,\n  title,\n  description,\n  protectedOrgLogins,\n  submitButton,\n  onSubmit,\n}: {\n  children: React.ReactNode\n  flash: string\n  title: string\n  description: string | React.ReactNode\n  protectedOrgLogins: string[]\n  submitButton?: React.ReactNode\n  onSubmit?: () => void\n}) {\n  const flashRef = useRef<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    flashRef.current?.focus()\n  }, [flash, flashRef])\n\n  return (\n    <Box\n      as=\"form\"\n      // By default HTML5 form will focus on the first required input with missing value on submit.\n      // Although, this is fine for simple input fields it doesn't work nicely with custom inputs such as owner selector.\n      // In result, it breaks our custom focus order.\n      // This property disables default form behavior.\n      noValidate\n      sx={{my: 6, px: 3}}\n      onSubmit={e => {\n        e.preventDefault()\n        onSubmit?.()\n      }}\n      className=\"container-md px-md-4 px-lg-5\"\n    >\n      {flash && (\n        <Flash tabIndex={0} ref={flashRef} data-testid=\"repo-creation-form-error-flash\" variant=\"danger\" sx={{mb: 2}}>\n          <SafeHTMLBox unverifiedHTML={flash} />\n        </Flash>\n      )}\n      <Box sx={{pb: 2, mb: 2, borderBottom: 'solid', borderBottomColor: 'border.muted', borderBottomWidth: 1}}>\n        <Heading as=\"h1\" sx={{fontSize: 4}}>\n          {title}\n        </Heading>\n        <Text sx={{color: 'fg.muted'}}>{description}</Text>\n      </Box>\n      <Text sx={{fontStyle: 'italic'}}>Required fields are marked with an asterisk (*).</Text>\n      <Box sx={{mt: 2}}>\n        <SingleSignOnBanner protectedOrgs={protectedOrgLogins} />\n      </Box>\n      {children}\n      <Box sx={{display: 'flex', flexDirection: 'row', justifyContent: 'flex-end'}}>{submitButton}</Box>\n    </Box>\n  )\n}\n\ntry{ RepoCreationForm.displayName ||= 'RepoCreationForm' } catch {}","import {Box, Button} from '@primer/react'\n\nexport function RepoNameGenerator({\n  suggestedRepoName,\n  onClick,\n}: {\n  suggestedRepoName: string\n  onClick: (suggestedName: string) => void\n}) {\n  return (\n    <Box sx={{my: 2}}>\n      Great repository names are short and memorable. Need inspiration? How about&nbsp;\n      <Button\n        variant=\"invisible\"\n        sx={{\n          fontWeight: 'bold',\n          color: 'success.fg',\n          display: 'inline',\n          px: 0,\n          ':hover:not([disabled])': {bg: 'canvas.default'},\n        }}\n        aria-label={`Use suggested repository name ${suggestedRepoName}`}\n        onClick={() => onClick(suggestedRepoName)}\n      >\n        {suggestedRepoName}\n      </Button>\n      &nbsp;?\n    </Box>\n  )\n}\n\ntry{ RepoNameGenerator.displayName ||= 'RepoNameGenerator' } catch {}","import {GitHubAvatar} from '@github-ui/github-avatar'\nimport {templateReposPath} from '@github-ui/paths'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {ActionList, ActionMenu, Box, Checkbox, FormControl} from '@primer/react'\nimport {useState} from 'react'\n\nimport type {TemplateRepo} from '../types/repo-creation-types'\n\ninterface TemplateReposData {\n  templateRepos: TemplateRepo[]\n}\n\nconst label = 'Repository template'\n\nexport function RepoTemplateMenu({\n  selectedTemplateRepo,\n  onRepoTemplateSelect,\n  includeAllBranches,\n  onIncludeAllBranchesChange,\n  onOpen,\n}: {\n  selectedTemplateRepo?: TemplateRepo\n  onRepoTemplateSelect: (selectedTemplateRepo?: TemplateRepo) => void\n  includeAllBranches: boolean\n  onIncludeAllBranchesChange: (includeAllBranches: boolean) => void\n  onOpen?: () => void\n}) {\n  const [templateRepos, setTemplateRepos] = useState<TemplateRepo[] | undefined>()\n  const [errorLoadingTemplateRepos, setErrorLoadingTemplateRepos] = useState(false)\n\n  const onOpenMenu = async (open: boolean) => {\n    loadTemplateRepos(open)\n    open && onOpen?.()\n  }\n\n  const loadTemplateRepos = async (open: boolean) => {\n    if (open && !templateRepos) {\n      try {\n        const result = await verifiedFetchJSON(templateReposPath())\n\n        const data: TemplateReposData = await result.json()\n        if (!result.ok || !data.templateRepos) {\n          handleErrorLoadingTemplateRepos()\n          return\n        }\n\n        setErrorLoadingTemplateRepos(false)\n\n        // if a repo was passed in with the initial payload, always include it in the dropdown\n        if (selectedTemplateRepo && !data.templateRepos.some(x => x.id === selectedTemplateRepo.id)) {\n          data.templateRepos.unshift(selectedTemplateRepo)\n        }\n\n        setTemplateRepos(data.templateRepos)\n      } catch (error) {\n        handleErrorLoadingTemplateRepos()\n      }\n    }\n  }\n\n  const headerButton = () => {\n    const displayName = selectedTemplateRepo?.nameWithDisplayOwner || 'No template'\n    const buttonAvatar = selectedTemplateRepo && (() => <GitHubAvatar src={selectedTemplateRepo.avatarUrl} />)\n    return (\n      <ActionMenu.Button aria-label={`${label}: ${displayName}`} leadingVisual={buttonAvatar}>\n        {displayName}\n      </ActionMenu.Button>\n    )\n  }\n\n  const handleErrorLoadingTemplateRepos = () => {\n    setTemplateRepos(undefined)\n    setErrorLoadingTemplateRepos(true)\n  }\n\n  const dropdownContent = () => {\n    const hasLoadedTemplateRepos = templateRepos !== undefined\n\n    if (hasLoadedTemplateRepos && templateRepos.length > 0) {\n      return (\n        <RepoTemplateItems\n          templateRepos={templateRepos}\n          selectedTemplateRepo={selectedTemplateRepo}\n          onSelect={onRepoTemplateSelect}\n        />\n      )\n    } else if (hasLoadedTemplateRepos && templateRepos?.length === 0) {\n      return (\n        <ActionList.Item key=\"no-templates\" disabled={true} sx={{p: 3}}>\n          No templates available.\n        </ActionList.Item>\n      )\n    } else if (errorLoadingTemplateRepos) {\n      return (\n        <ActionList.Item key=\"error-loading-templates\" disabled={true} sx={{p: 3, color: 'danger.fg'}}>\n          An error occurred while loading templates. Please reopen the dropdown to try again.\n        </ActionList.Item>\n      )\n    } else if (!hasLoadedTemplateRepos && !errorLoadingTemplateRepos) {\n      return (\n        <ActionList.Item key=\"fetching-templates\" disabled={true}>\n          Fetching templates…\n        </ActionList.Item>\n      )\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <Box sx={{borderColor: 'border.muted', borderBottomWidth: 1, borderBottomStyle: 'solid', py: 3}}>\n      <FormControl>\n        <FormControl.Label>{label}</FormControl.Label>\n        <FormControl.Caption>Start your repository with a template repository&apos;s contents.</FormControl.Caption>\n        <ActionMenu onOpenChange={onOpenMenu}>\n          {headerButton()}\n          <ActionMenu.Overlay width=\"small\" maxHeight=\"large\" sx={{overflow: 'auto'}}>\n            {dropdownContent()}\n          </ActionMenu.Overlay>\n        </ActionMenu>\n      </FormControl>\n      {selectedTemplateRepo && (\n        <FormControl sx={{mt: 2}}>\n          <FormControl.Label>Include all branches</FormControl.Label>\n          <FormControl.Caption>\n            Copy all branches from {selectedTemplateRepo.nameWithDisplayOwner} and not just the default branch.\n          </FormControl.Caption>\n          <Checkbox checked={includeAllBranches} onChange={() => onIncludeAllBranchesChange(!includeAllBranches)} />\n        </FormControl>\n      )}\n    </Box>\n  )\n}\n\nfunction RepoTemplateItems({\n  templateRepos,\n  selectedTemplateRepo,\n  onSelect,\n}: {\n  templateRepos: TemplateRepo[]\n  selectedTemplateRepo?: TemplateRepo\n  onSelect: (selectedTemplateRepo?: TemplateRepo) => void\n}) {\n  const templateListItems = templateRepos.map(templateRepo => {\n    const {id, nameWithDisplayOwner, avatarUrl} = templateRepo\n    return (\n      <ActionList.Item selected={selectedTemplateRepo?.id === id} key={id} onSelect={() => onSelect(templateRepo)}>\n        <ActionList.LeadingVisual>\n          <GitHubAvatar src={avatarUrl} />\n        </ActionList.LeadingVisual>\n        {nameWithDisplayOwner}\n      </ActionList.Item>\n    )\n  })\n\n  const noTemplateItem = (\n    <ActionList.Item selected={!selectedTemplateRepo} onSelect={() => onSelect(undefined)} key=\"No template\">\n      No template\n    </ActionList.Item>\n  )\n\n  return <ActionList selectionVariant=\"single\">{[noTemplateItem, ...templateListItems]}</ActionList>\n}\n\ntry{ RepoTemplateMenu.displayName ||= 'RepoTemplateMenu' } catch {}\ntry{ RepoTemplateItems.displayName ||= 'RepoTemplateItems' } catch {}","import {CustomPropertyValuesTable} from '@github-ui/custom-properties-editing'\nimport type {PropertyField} from '@github-ui/custom-properties-editing/use-edit-custom-properties'\nimport type {PropertyDefinition, PropertyValue} from '@github-ui/custom-properties-types'\nimport {Text} from '@primer/react'\n\nexport function RequiredCustomPropertiesSelection({\n  definitions,\n  editableDefinitions,\n  propertyValuesMap,\n  setPropertyValue,\n  revertPropertyValue,\n  orgName,\n  propertiesOverlayEditorEnabled,\n}: {\n  definitions: PropertyDefinition[]\n  editableDefinitions: PropertyDefinition[]\n  propertyValuesMap: Record<string, PropertyField>\n  setPropertyValue: (propertyName: string, value: PropertyValue) => void\n  revertPropertyValue: (propertyName: string) => void\n  orgName: string\n  // TODO: cleanup with custom_properties_edit_modal FF.\n  propertiesOverlayEditorEnabled?: boolean\n}) {\n  return (\n    <div data-testid=\"custom-properties-selection\">\n      <Text sx={{display: 'block', fontSize: 3}}>Required properties</Text>\n      <Text sx={{display: 'block', color: 'fg.muted', mb: 2}}>\n        This repository will be initialized with the following, per organization policy.\n      </Text>\n      <CustomPropertyValuesTable\n        definitions={definitions}\n        editableDefinitions={editableDefinitions}\n        propertyValuesMap={propertyValuesMap}\n        setPropertyValue={setPropertyValue}\n        revertPropertyValue={revertPropertyValue}\n        showLockMessages={false}\n        showUndo={false}\n        orgName={orgName}\n        propertiesOverlayEditorEnabled={propertiesOverlayEditorEnabled}\n      />\n    </div>\n  )\n}\n\ntry{ RequiredCustomPropertiesSelection.displayName ||= 'RequiredCustomPropertiesSelection' } catch {}","import {useCurrentRepository} from '@github-ui/current-repository'\nimport type {OwnerItem} from '@github-ui/owner-dropdown'\nimport {repoOwnerDetailPath} from '@github-ui/paths'\nimport type {SafeHTMLString} from '@github-ui/safe-html'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport {useCallback, useState} from 'react'\n\nimport {useCurrentFormType} from '../contexts/CurrentForm'\nimport type {OwnerSelection} from '../types/repo-creation-types'\n\nexport function useSelectedOwner(initial?: OwnerSelection): {\n  ownerSelection: OwnerSelection | undefined\n  changeOwner: (newOwner: OwnerItem) => void\n  errorMessage: string\n  fetchingOwnerDetails: boolean\n} {\n  const [ownerSelection, setOwnerSelection] = useState(initial)\n  const [fetchingOwnerDetails, setFetchingOwnerDetails] = useState(false)\n  const [errorMessage, setErrorMessage] = useState('')\n  const repoId = useCurrentRepository()?.id\n  const formType = useCurrentFormType()\n\n  const changeOwner = useCallback(\n    async (newOwner: OwnerItem) => {\n      setErrorMessage('')\n      setFetchingOwnerDetails(true)\n      try {\n        const path =\n          formType === 'transfer' && repoId\n            ? repoOwnerDetailPath(newOwner.name, 'transfer', repoId)\n            : repoOwnerDetailPath(newOwner.name)\n\n        const result = await verifiedFetch(path)\n        if (!result.ok) {\n          setErrorMessage(`Server error loading owner: ${result.status}`)\n          setFetchingOwnerDetails(false)\n          return\n        }\n\n        const data = await result.json()\n        setOwnerSelection(data)\n      } catch (error) {\n        setErrorMessage('Network error loading owner')\n      }\n      setFetchingOwnerDetails(false)\n    },\n    [repoId, formType],\n  )\n\n  return {ownerSelection, changeOwner, errorMessage: errorMessage as SafeHTMLString, fetchingOwnerDetails}\n}\n","import {AnalyticsProvider} from '@github-ui/analytics-provider'\nimport {\n  propertyFieldsToChangedPropertiesMap,\n  useEditCustomProperties,\n} from '@github-ui/custom-properties-editing/use-edit-custom-properties'\nimport type {PropertyValuesRecord} from '@github-ui/custom-properties-types'\nimport {repositoriesPath, repositoryImportsPath} from '@github-ui/paths'\nimport {useFeatureFlag} from '@github-ui/react-core/use-feature-flag'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport type {Visibility} from '@github-ui/repos-list/repos-list-types'\nimport {useNavigate, useSearchParams} from '@github-ui/use-navigate'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {Box, Button, Flash, Link} from '@primer/react'\nimport {type ComponentProps, useEffect, useMemo, useRef, useState} from 'react'\n\nimport {CreationSummary} from '../components/CreationSummary'\nimport {Description} from '../components/Description'\nimport {DisabledCreationInPersonalNamespaceMessage} from '../components/InfoMessage'\nimport {InitializeRepositoryOptions} from '../components/InitializeRepositoryOptions'\nimport {MarketplaceAppsSelection} from '../components/MarketplaceAppsSelection'\nimport type {OwnerRepoSelectionRef} from '../components/OwnerRepoSelection'\nimport {OwnerRepoVisibilitySelection} from '../components/OwnerRepoVisibilitySelection'\nimport {RepoCreationForm} from '../components/RepoCreationForm'\nimport {RepoNameGenerator} from '../components/RepoNameGenerator'\nimport {RepoTemplateMenu} from '../components/RepoTemplateMenu'\nimport {RequiredCustomPropertiesSelection} from '../components/RequiredCustomPropertiesSelection'\nimport {useSelectedOwner} from '../hooks/use-selected-owner'\nimport {useUserAnalytics} from '../hooks/use-user-analytics'\nimport type {License, NewRepoPayload, OwnerSelection} from '../types/repo-creation-types'\n\ninterface RepoCreateBody {\n  owner: string\n  ['template_repository_id']: string\n  ['include_all_branches']: '0' | '1'\n  repository: {\n    name: string\n    visibility: Visibility\n    description: string\n    ['auto_init']: '1' | '0'\n    ['license_template']: string\n    ['gitignore_template']: string\n  }\n  ['quick_install']?: Record<string, Record<string, 'on'>>\n  ['custom_properties']?: PropertyValuesRecord\n}\n\nconst INITIAL_README = false\nconst INITIAL_GITIGNORE = ''\nconst INITIAL_LICENSE = undefined\n\nexport default function Create() {\n  const appName = 'repo-creation'\n  const category = 'create'\n  const metadata = useMemo(() => ({}), [])\n\n  return (\n    <AnalyticsProvider appName={appName} category={category} metadata={metadata}>\n      <CreateForm />\n    </AnalyticsProvider>\n  )\n}\n\nfunction CreateForm() {\n  const {\n    repoCreate,\n    initialOwnerSelection,\n    currentUserLogin,\n    privateModeEnabled,\n    isGitHubEnterprise,\n    tradeControlsPrivateRepoCreationWarning,\n    tradeControlsUserPrivateRepoCreationWarning,\n    licenses,\n    suggestedRepoName,\n    hasTemplateRepos,\n    selectedTemplate,\n    publicReposAvailable,\n    repositoryImportLinkDataAttributes,\n    nameIsRestricted,\n  } = useRoutePayload<NewRepoPayload>()\n  const propertiesOverlayEditorEnabled = useFeatureFlag('custom_properties_edit_modal')\n  const [searchParams] = useSearchParams()\n\n  const {ownerItems, restrictCreateRepositoriesInPersonalNamespace, protectedOrgLogins, helpUrl, docsUrls} = repoCreate\n\n  const {ownerSelection, changeOwner, errorMessage, fetchingOwnerDetails} = useSelectedOwner(initialOwnerSelection)\n  const [repositoryName, setRepositoryName] = useState(searchParams.get('name') || '')\n  const [description, setDescription] = useState(searchParams.get('description') || '')\n  const [descriptionTooLong, setDescriptionTooLong] = useState(false)\n\n  const [selectedTemplateRepo, setSelectedTemplateRepo] = useState(selectedTemplate || undefined)\n\n  const [includeAllBranches, setIncludeAllBranches] = useState(false)\n  const [addReadme, setAddReadme] = useState(INITIAL_README)\n  const [selectedGitignoreTemplate, setSelectedGitignoreTemplate] = useState<string>(INITIAL_GITIGNORE)\n  const [selectedLicense, setSelectedLicense] = useState<License | undefined>(INITIAL_LICENSE)\n  const [selectedMarketplaceApps, setSelectedMarketplaceApps] = useState<string[]>([])\n  const {propertyValuesMap, setPropertyValue, revertPropertyValue} = useEditCustomProperties(\n    [{}],\n    ownerSelection?.requiredDefinitions || [],\n    [ownerSelection?.name],\n  )\n  const [repoNameChanged, setRepoNameChanged] = useState(false)\n  // Initialize to false because repo name is initially blank\n  const [isValidRepoName, setIsValidRepoName] = useState(false)\n  const [submitClicked, setSubmitClicked] = useState(false)\n  const [isCreating, setIsCreating] = useState(false)\n\n  const [readmeParamOverride, setReadmeParamOverride] = useState<Visibility | null>(null)\n  const {sendRepoFormClickEvent} = useUserAnalytics()\n\n  useEffect(() => {\n    const readmeParam = searchParams.get('profile_readme')\n    // `readmeParam` can be set explicitly to 'member', in order to seed the organization config repo name\n    // and private visibility for an org member profile.\n    // Or, it can be set to 'public', '1', or a truthy value, in order to seed the organization config repo\n    // name and public visibility for an org profile. The existing Rails implementation only requires truthiness\n    // for this case, not a specific value:\n    // https://github.com/github/github/blob/master/app/assets/modules/github/repositories/new.ts#L307\n    if (readmeParam === 'member') {\n      if (ownerSelection && ownerSelection.isOrganization) {\n        setRepositoryName('.github-private')\n      }\n      setReadmeParamOverride('private')\n    } else if (readmeParam) {\n      if (ownerSelection) {\n        if (ownerSelection.isOrganization) {\n          setRepositoryName('.github')\n        } else {\n          setRepositoryName(ownerSelection.name)\n        }\n      }\n      setReadmeParamOverride('public')\n    }\n  }, [ownerSelection, searchParams])\n\n  const [createError, setCreateError] = useState('')\n\n  const ownerRepoVisibilitySelectionRef = useRef<OwnerRepoSelectionRef>()\n\n  const navigate = useNavigate()\n\n  // The default visibility is 'private' if no owner is selected, per:\n  // app/components/repositories/new/owner_empty_selection_option.rb#L1\n  const [userSelectedVisibility, setUserSelectedVisibility] = useState<Visibility>()\n\n  const selectedVisibility =\n    userSelectedVisibility ||\n    readmeParamOverride ||\n    (searchParams.get('visibility') as Visibility) ||\n    ownerSelection?.defaultVisibility ||\n    'private'\n\n  const createHandler = async () => {\n    setSubmitClicked(true)\n    sendRepoFormClickEvent('SUBMIT_BUTTON', {\n      action: 'submit',\n    })\n\n    if (isCreating || fetchingOwnerDetails) return\n\n    const invalidPropertyValues = Object.values(propertyValuesMap).some(p => !!p.error)\n\n    if (isValidRepoName && ownerSelection && !descriptionTooLong && !invalidPropertyValues) {\n      const manuallyInstalledSelectedMarketplaceApps = ownerSelection.installableApps\n        .filter(x => !x.autoInstall && selectedMarketplaceApps.includes(x.id.toString()))\n        .map(x => x.id)\n\n      const body: RepoCreateBody = {\n        owner: ownerSelection.name,\n        ['template_repository_id']: selectedTemplateRepo?.id.toString() || '',\n        ['include_all_branches']: includeAllBranches ? '1' : '0',\n        repository: {\n          name: repositoryName,\n          visibility: selectedVisibility,\n          description,\n          ['auto_init']: addReadme ? '1' : '0',\n          ['license_template']: selectedLicense?.id || '',\n          ['gitignore_template']: selectedGitignoreTemplate,\n        },\n      }\n\n      const apps = manuallyInstalledSelectedMarketplaceApps.reduce<Record<string, 'on'>>((acc, app) => {\n        acc[app] = 'on'\n        return acc\n      }, {})\n      if (Object.values(apps).length) {\n        body['quick_install'] = {[ownerSelection.name]: apps}\n      }\n\n      const canEditPropertyValues = ownerSelection?.editableDefinitionNames.length > 0\n      if (canEditPropertyValues) {\n        const changedProperties = propertyFieldsToChangedPropertiesMap(\n          ownerSelection.requiredDefinitions,\n          propertyValuesMap,\n        )\n        if (Object.keys(changedProperties).length) {\n          body['custom_properties'] = changedProperties\n        }\n      }\n\n      setIsCreating(true)\n      try {\n        const result = await verifiedFetchJSON(repositoriesPath(), {\n          method: 'POST',\n          body,\n        })\n\n        if (result.redirected) {\n          navigate(result.url)\n        } else {\n          const {data} = await result.json()\n          if (result.ok) {\n            navigate(data.redirect)\n          } else {\n            setCreateError(data.error)\n            setIsCreating(false)\n          }\n        }\n      } catch (e) {\n        setCreateError('Something went wrong!')\n        setIsCreating(false)\n      }\n    } else if (!ownerSelection) {\n      ownerRepoVisibilitySelectionRef.current?.focusOwnerDropdown()\n      return\n    } else {\n      ownerRepoVisibilitySelectionRef.current?.focusRepoInput()\n      return\n    }\n  }\n\n  const ownerRepoVisibilitySelectionProps: ComponentProps<typeof OwnerRepoVisibilitySelection> = {\n    ownerItems,\n    ownerSelection,\n    repositoryName,\n    setRepositoryName,\n    onOwnerChange: changeOwner,\n    submitClicked,\n    repoNameChanged,\n    setRepoNameChanged,\n    setIsValidRepoName,\n    privateModeEnabled,\n    helpUrl,\n    selectedVisibility,\n    setUserSelectedVisibility,\n    tradeControlsPrivateRepoCreationWarning,\n    tradeControlsUserPrivateRepoCreationWarning,\n  }\n\n  const editableDefinitions = useMemo(() => {\n    if (!ownerSelection) return []\n\n    return ownerSelection.requiredDefinitions.filter(definition =>\n      ownerSelection.editableDefinitionNames.includes(definition.propertyName),\n    )\n  }, [ownerSelection])\n\n  return (\n    <RepoCreationForm\n      flash={createError || errorMessage}\n      title=\"Create a new repository\"\n      description={\n        <div>\n          A repository contains all project files, including the revision history.\n          {repositoryImportLinkDataAttributes && (\n            <ImportPrompt repositoryImportLinkDataAttributes={repositoryImportLinkDataAttributes} />\n          )}\n        </div>\n      }\n      protectedOrgLogins={protectedOrgLogins}\n      onSubmit={createHandler}\n      submitButton={\n        <Button type=\"submit\" variant=\"primary\" disabled={isCreating} sx={{mt: 3}}>\n          {isCreating ? 'Creating repository…' : 'Create repository'}\n        </Button>\n      }\n    >\n      {hasTemplateRepos && (\n        <RepoTemplateMenu\n          selectedTemplateRepo={selectedTemplateRepo}\n          onRepoTemplateSelect={template => {\n            // Reset all initialization options\n            setAddReadme(INITIAL_README)\n            setSelectedGitignoreTemplate(INITIAL_GITIGNORE)\n            setSelectedLicense(INITIAL_LICENSE)\n            setSelectedTemplateRepo(template)\n            if (template) {\n              const templateOwner = ownerItems?.find(x => x.name === template.ownerDisplayLogin)\n              templateOwner && changeOwner(templateOwner)\n            }\n            sendRepoFormClickEvent('TEMPLATE_SELECT', {\n              action: 'select',\n            })\n          }}\n          onOpen={() => {\n            sendRepoFormClickEvent('TEMPLATE_SELECT', {\n              action: 'open',\n            })\n          }}\n          includeAllBranches={includeAllBranches}\n          onIncludeAllBranchesChange={setIncludeAllBranches}\n        />\n      )}\n      <Box sx={{mt: 3}}>\n        <OwnerRepoVisibilitySelection ref={ownerRepoVisibilitySelectionRef} {...ownerRepoVisibilitySelectionProps}>\n          <ReadmeProfileBanner {...{ownerSelection, publicReposAvailable, repositoryName}} />\n          {!nameIsRestricted ? (\n            <RepoNameGenerator suggestedRepoName={suggestedRepoName} onClick={setRepositoryName} />\n          ) : (\n            <Box sx={{my: 2}} />\n          )}\n          {restrictCreateRepositoriesInPersonalNamespace && (\n            <Box sx={{my: 3}}>\n              <DisabledCreationInPersonalNamespaceMessage />\n            </Box>\n          )}\n          <Description\n            description={description}\n            onDescriptionChange={setDescription}\n            tooLong={descriptionTooLong}\n            setTooLong={setDescriptionTooLong}\n          />\n        </OwnerRepoVisibilitySelection>\n        {!selectedTemplateRepo && (\n          <Box sx={{mt: 3, borderBottomStyle: 'solid', borderBottomColor: 'border.muted', borderBottomWidth: 1}}>\n            <InitializeRepositoryOptions\n              addReadme={addReadme}\n              onAddReadmeChange={setAddReadme}\n              ownerSelection={ownerSelection}\n              licensePickerAvailable={!isGitHubEnterprise}\n              selectedLicense={selectedLicense}\n              onLicenseChange={setSelectedLicense}\n              licenses={licenses}\n              selectedGitignoreTemplate={selectedGitignoreTemplate}\n              onGitignoreTemplateChange={setSelectedGitignoreTemplate}\n              currentUserLogin={currentUserLogin}\n              helpUrl={helpUrl}\n              docsUrls={docsUrls}\n            />\n          </Box>\n        )}\n        {ownerSelection && ownerSelection?.installableApps?.length > 0 && (\n          <Box sx={{m: 2}}>\n            <MarketplaceAppsSelection\n              listings={ownerSelection.installableApps}\n              selectedListings={selectedMarketplaceApps}\n              currentOwnerName={ownerSelection.name}\n              currentUserLogin={currentUserLogin}\n              handleChange={setSelectedMarketplaceApps}\n            />\n          </Box>\n        )}\n        {ownerSelection?.requiredDefinitions && ownerSelection.requiredDefinitions.length > 0 && (\n          <Box sx={{borderBottomStyle: 'solid', borderBottomColor: 'border.muted', borderBottomWidth: 1, pb: 3, mt: 3}}>\n            <RequiredCustomPropertiesSelection\n              definitions={ownerSelection.requiredDefinitions}\n              editableDefinitions={editableDefinitions}\n              propertyValuesMap={propertyValuesMap}\n              setPropertyValue={setPropertyValue}\n              revertPropertyValue={revertPropertyValue}\n              orgName={ownerSelection.name}\n              propertiesOverlayEditorEnabled={propertiesOverlayEditorEnabled}\n            />\n          </Box>\n        )}\n      </Box>\n      <CreationSummary owner={ownerSelection} visibility={selectedVisibility} action=\"create\" />\n    </RepoCreationForm>\n  )\n}\n\nfunction ImportPrompt({\n  repositoryImportLinkDataAttributes,\n}: {\n  repositoryImportLinkDataAttributes: {[key: string]: string}\n}) {\n  const dataAttributes = Object.entries(repositoryImportLinkDataAttributes).reduce(\n    (acc, [attribute, value]) => ({...acc, [`data-${attribute}`]: value}),\n    {},\n  )\n\n  return (\n    <span>\n      {' '}\n      Already have a project repository elsewhere?{' '}\n      <Link inline href={repositoryImportsPath()} {...dataAttributes}>\n        Import a repository.\n      </Link>\n    </span>\n  )\n}\n\nfunction ReadmeProfileBanner({\n  ownerSelection,\n  publicReposAvailable,\n  repositoryName,\n}: {\n  ownerSelection?: OwnerSelection\n  publicReposAvailable: boolean\n  repositoryName: string\n}) {\n  let content\n  if (\n    publicReposAvailable &&\n    !ownerSelection?.isOrganization &&\n    repositoryName.toLowerCase() === ownerSelection?.name.toLowerCase()\n  ) {\n    content = (\n      <div>\n        <strong>\n          {ownerSelection?.name}/{repositoryName}\n        </strong>{' '}\n        is a ✨<em>special</em> ✨ repository that you can use to add a <code>README.md</code> to your GitHub profile.\n        Make sure it&rsquo;s public and initialize it with a <strong>README</strong> to get started.\n      </div>\n    )\n  } else if (\n    ownerSelection?.isOrganization &&\n    !ownerSelection?.enterpriseManagedUserEnabled &&\n    publicReposAvailable &&\n    repositoryName.toLowerCase() === '.github'\n  ) {\n    content = (\n      <div>\n        <strong>{ownerSelection?.name}/.github</strong> is a ✨<em>special</em> ✨ repository that you can use to add{' '}\n        <code>README.md</code> to your public organization profile, visible to anyone. Make sure it&rsquo;s public and\n        and initialize it with a <strong>README</strong> in the <strong>profile</strong> directory to get started.\n      </div>\n    )\n  } else if (ownerSelection?.isOrganization && repositoryName.toLowerCase() === '.github-private') {\n    content = (\n      <div>\n        <strong>{ownerSelection?.name}/.github-private</strong> is a ✨<em>special</em> ✨ repository that you can use\n        to add a <code>README.md</code> to your organization member profile, visible only to organization members.\n        It&rsquo;s private and initialize it with a <strong>README</strong> in the <strong>profile</strong> directory to\n        get started.\n      </div>\n    )\n  }\n\n  return content ? (\n    <Flash sx={{display: 'flex', gap: 2, my: 2}} data-testid=\"special-repo-name-banner\">\n      <Box as=\"img\" alt=\"Whispering…\" src=\"/images/mona-whisper.gif\" sx={{width: 48, height: 48, mt: -2}} />\n      {content}\n    </Flash>\n  ) : null\n}\n\ntry{ Create.displayName ||= 'Create' } catch {}\ntry{ CreateForm.displayName ||= 'CreateForm' } catch {}\ntry{ ImportPrompt.displayName ||= 'ImportPrompt' } catch {}\ntry{ ReadmeProfileBanner.displayName ||= 'ReadmeProfileBanner' } catch {}","import {AnalyticsProvider} from '@github-ui/analytics-provider'\nimport {useCurrentRepository} from '@github-ui/current-repository'\nimport type {OwnerItem} from '@github-ui/owner-dropdown'\nimport {forkPath, forksListPath, repositoryPath} from '@github-ui/paths'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport type {SafeHTMLString} from '@github-ui/safe-html'\nimport {useNavigate} from '@github-ui/use-navigate'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport {AlertIcon} from '@primer/octicons-react'\nimport {Box, BranchName, Button, Checkbox, Flash, FormControl, Link, Octicon, Text} from '@primer/react'\nimport {useMemo, useRef, useState} from 'react'\n\nimport {CreationSummary} from '../components/CreationSummary'\nimport {Description} from '../components/Description'\nimport {DisabledCreationInPersonalNamespaceMessage} from '../components/InfoMessage'\nimport {OwnerRepoSelection, type OwnerRepoSelectionRef} from '../components/OwnerRepoSelection'\nimport {RepoCreationForm} from '../components/RepoCreationForm'\nimport {CurrentFormTypeProvider} from '../contexts/CurrentForm'\nimport {useUserAnalytics} from '../hooks/use-user-analytics'\nimport type {ForkRepoListPayload, ForkRepoPayload} from '../types/repo-creation-types'\n\nexport default function Fork() {\n  const appName = 'repo-creation'\n  const category = 'fork'\n  const metadata = useMemo(() => ({}), [])\n\n  return (\n    <AnalyticsProvider appName={appName} category={category} metadata={metadata}>\n      <CurrentFormTypeProvider type=\"fork\">\n        <ForkPage />\n      </CurrentFormTypeProvider>\n    </AnalyticsProvider>\n  )\n}\n\nfunction ForkPage() {\n  const payload = useRoutePayload<ForkRepoPayload | ForkRepoListPayload>()\n\n  if (isForkListPayload(payload)) {\n    return <CannotCreateFork payload={payload} />\n  }\n\n  return <ForkForm payload={payload} />\n}\n\nfunction ForkForm({payload}: {payload: ForkRepoPayload}) {\n  const navigate = useNavigate()\n  const repo = useCurrentRepository()\n\n  const [isForking, setIsForking] = useState(false)\n\n  const {repoCreate, initialOwnerSelection, repoHasForks, repoDescription} = payload\n  const {ownerItems, protectedOrgLogins, restrictCreateRepositoriesInPersonalNamespace, helpUrl} = repoCreate\n\n  const [owner, changeOwner] = useState<OwnerItem | undefined>(initialOwnerSelection)\n\n  const [repoName, setRepoName] = useState(repo.name)\n  const [repoNameValid, setRepoNameValid] = useState(true)\n\n  const [description, setDescription] = useState(repoDescription || '')\n  const [descriptionValid, setDescriptionValid] = useState(true)\n\n  const [forkOneBranch, setForkOneBranch] = useState(true)\n  const [flash, setFlash] = useState('')\n\n  const [submitClicked, setSubmitClicked] = useState(false)\n\n  const {sendRepoFormClickEvent} = useUserAnalytics()\n\n  const ownerRepoSelectionRef = useRef<OwnerRepoSelectionRef>()\n  const descriptionRef = useRef<HTMLInputElement>(null)\n\n  async function createFork() {\n    setSubmitClicked(true)\n    sendRepoFormClickEvent('SUBMIT_BUTTON', {\n      action: 'submit',\n    })\n\n    if (!owner) {\n      ownerRepoSelectionRef.current?.focusOwnerDropdown()\n      return\n    }\n\n    if (!repoNameValid) {\n      ownerRepoSelectionRef.current?.focusRepoInput()\n      return\n    }\n\n    if (!descriptionValid) {\n      descriptionRef.current?.focus()\n      return\n    }\n\n    if (isForking) {\n      return\n    }\n\n    const formData = new FormData()\n\n    formData.append('owner', owner.name)\n    formData.append('fork_repository[name]', repoName)\n    formData.append('fork_repository[description]', description)\n    formData.append('fork_repository[one_branch_fork]', `${forkOneBranch ? 1 : 0}`)\n\n    setIsForking(true)\n    try {\n      const result = await verifiedFetch(forkPath({repo: repo.name, owner: repo.ownerLogin}), {\n        method: 'POST',\n        body: formData,\n        headers: {Accept: 'text/html'},\n      })\n\n      if (result.redirected) {\n        navigate(result.url)\n      } else if (!result.ok) {\n        const {data} = await result.json()\n        setFlash(data.error)\n      }\n    } catch (e) {\n      setFlash('Something went wrong!')\n    }\n\n    setIsForking(false)\n  }\n\n  return (\n    <RepoCreationForm\n      title=\"Create a new fork\"\n      flash={flash as SafeHTMLString}\n      description={<RepoDescription repoHasForks={repoHasForks} />}\n      protectedOrgLogins={protectedOrgLogins}\n      onSubmit={createFork}\n      submitButton={\n        <Button type=\"submit\" disabled={isForking} variant=\"primary\">\n          {isForking ? 'Creating fork…' : 'Create fork'}\n        </Button>\n      }\n    >\n      <Box sx={{pt: 3, mb: 2}}>\n        <OwnerRepoSelection\n          ref={ownerRepoSelectionRef}\n          selectedOwner={owner}\n          ownerItems={ownerItems}\n          repositoryName={repoName}\n          onOwnerChange={changeOwner}\n          onRepoChange={setRepoName}\n          onValidityChange={setRepoNameValid}\n          hideSelectOwnerCheck={!submitClicked}\n        />\n      </Box>\n\n      <Text as=\"div\" sx={{mb: 3}}>\n        By default, forks are named the same as their upstream repository. You can customize the name to distinguish it\n        further.\n      </Text>\n\n      {restrictCreateRepositoriesInPersonalNamespace && (\n        <Box sx={{my: 3}}>\n          <DisabledCreationInPersonalNamespaceMessage />\n        </Box>\n      )}\n\n      <Box sx={{mb: 3}}>\n        <Description\n          ref={descriptionRef}\n          description={description}\n          onDescriptionChange={setDescription}\n          tooLong={!descriptionValid}\n          setTooLong={tooLong => setDescriptionValid(!tooLong)}\n        />\n      </Box>\n\n      <Box as=\"hr\" sx={{my: 3}} />\n\n      <FormControl sx={{mb: 3}}>\n        <FormControl.Label>\n          Copy the{' '}\n          <BranchName as=\"span\" sx={{fontWeight: 400}}>\n            {repo.defaultBranch}\n          </BranchName>{' '}\n          branch only\n        </FormControl.Label>\n        <FormControl.Caption>\n          Contribute back to {repo.ownerLogin}/{repo.name} by adding your own branch.{' '}\n          <Link\n            inline\n            href={`${helpUrl}/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-and-deleting-branches-within-your-repository`}\n            target=\"_blank\"\n          >\n            Learn more.\n          </Link>\n        </FormControl.Caption>\n        <Checkbox\n          checked={forkOneBranch}\n          onChange={() => {\n            const newValue = !forkOneBranch\n            sendRepoFormClickEvent('ONE_BRANCH_CHECKBOX', {\n              action: 'change',\n              option: newValue ? 'one' : 'all',\n            })\n            setForkOneBranch(newValue)\n          }}\n        />\n      </FormControl>\n\n      <Box sx={{mb: 3}}>\n        <CreationSummary owner={owner} action=\"fork\" topBorder />\n      </Box>\n    </RepoCreationForm>\n  )\n}\n\nfunction CannotCreateFork({payload}: {payload: ForkRepoListPayload}) {\n  const {existingForks, truncated} = payload\n  const repoHasForks = existingForks.length > 0\n\n  const repo = useCurrentRepository()\n  const forkListUrl = forksListPath({repo: repo.name, owner: repo.ownerLogin})\n\n  return (\n    <RepoCreationForm\n      title=\"Create a new fork\"\n      flash={'' as SafeHTMLString}\n      description={<RepoDescription repoHasForks={repoHasForks} />}\n      protectedOrgLogins={[]}\n    >\n      <Box sx={{mb: 2}}>No available destinations to fork this repository.</Box>\n      {truncated && (\n        <Flash sx={{mb: 3}} data-testid=\"truncation-banner\" variant=\"warning\">\n          <Box sx={{display: 'flex', gap: 1}}>\n            <div>\n              <Octicon icon={AlertIcon} />\n            </div>\n            <div>\n              The list is limited to {existingForks.length} forks.{' '}\n              <Link inline href={forkListUrl}>\n                View all existing forks.\n              </Link>\n            </div>\n          </Box>\n        </Flash>\n      )}\n      {repoHasForks && (\n        <Box as=\"ul\" sx={{listStyle: 'none'}}>\n          {existingForks.map(fork => {\n            const url = repositoryPath({repo: fork.name, owner: fork.ownerLogin})\n            const text = `${fork.ownerLogin}/${fork.name}`\n            return (\n              <li key={text}>\n                <Link href={url}>{text}</Link>\n              </li>\n            )\n          })}\n        </Box>\n      )}\n    </RepoCreationForm>\n  )\n}\n\nfunction RepoDescription({repoHasForks}: {repoHasForks: boolean}) {\n  const repo = useCurrentRepository()\n  const forkListUrl = forksListPath({repo: repo.name, owner: repo.ownerLogin})\n\n  return (\n    <span>\n      A <i>fork</i> is a copy of a repository. Forking a repository allows you to freely experiment with changes without\n      affecting the original project.{' '}\n      {repoHasForks && (\n        <Link inline href={forkListUrl}>\n          View existing forks.\n        </Link>\n      )}\n    </span>\n  )\n}\n\nfunction isForkListPayload(payload: ForkRepoPayload | ForkRepoListPayload): payload is ForkRepoListPayload {\n  return 'existingForks' in payload\n}\n\ntry{ Fork.displayName ||= 'Fork' } catch {}\ntry{ ForkPage.displayName ||= 'ForkPage' } catch {}\ntry{ ForkForm.displayName ||= 'ForkForm' } catch {}\ntry{ CannotCreateFork.displayName ||= 'CannotCreateFork' } catch {}\ntry{ RepoDescription.displayName ||= 'RepoDescription' } catch {}","import {repositoryImportsPath} from '@github-ui/paths'\nimport {useFeatureFlag} from '@github-ui/react-core/use-feature-flag'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport type {Visibility} from '@github-ui/repos-list/repos-list-types'\nimport {useNavigate, useSearchParams} from '@github-ui/use-navigate'\nimport {verifiedFetch} from '@github-ui/verified-fetch'\nimport {AlertFillIcon} from '@primer/octicons-react'\nimport {Box, Button, Flash, FormControl, Heading, Link, Text, TextInput} from '@primer/react'\nimport {useId, useRef, useState} from 'react'\n\nimport {CreationSummary} from '../components/CreationSummary'\nimport type {OwnerRepoSelectionRef} from '../components/OwnerRepoSelection'\nimport {OwnerRepoVisibilitySelection} from '../components/OwnerRepoVisibilitySelection'\nimport {RepoCreationForm} from '../components/RepoCreationForm'\nimport {useSelectedOwner} from '../hooks/use-selected-owner'\nimport type {ImportRepoPayload} from '../types/repo-creation-types'\n\nexport default function Import() {\n  const {\n    repoCreate,\n    initialOwnerSelection,\n    privateModeEnabled,\n    tradeControlsPrivateRepoCreationWarning,\n    tradeControlsUserPrivateRepoCreationWarning,\n  } = useRoutePayload<ImportRepoPayload>()\n\n  const [params] = useSearchParams()\n\n  const {ownerItems, protectedOrgLogins, helpUrl} = repoCreate\n  const {ownerSelection, changeOwner, fetchingOwnerDetails} = useSelectedOwner(initialOwnerSelection)\n  const [repositoryName, setRepositoryName] = useState(params.get('repo') ?? '')\n  const [userSelectedVisibility, setUserSelectedVisibility] = useState<Visibility>()\n  const [vcsUrl, setVcsUrl] = useState(params.get('import_url') ?? '')\n  const [flash, setFlash] = useState('')\n  const [submitClicked, setSubmitClicked] = useState(false)\n  const [isImporting, setIsImporting] = useState(false)\n  const [repoNameChanged, setRepoNameChanged] = useState(false)\n  const [sourceUsername, setSourceUsername] = useState(params.get('sourceUsername') ?? '')\n  const [sourceToken, setSourceToken] = useState(params.get('sourceToken') ?? '')\n  // Initialize to false because repo name is initially blank\n  const [isValidRepoName, setIsValidRepoName] = useState(false)\n  const warningValidationId = useId()\n\n  const ownerRepoVisibilitySelectionRef = useRef<OwnerRepoSelectionRef>()\n  const vcsUrlRef = useRef<HTMLInputElement>(null)\n\n  const navigate = useNavigate()\n\n  // The default visibility is 'private' if no owner is selected, per:\n  // app/components/repositories/new/owner_empty_selection_option.rb#L1\n  const selectedVisibility = userSelectedVisibility || ownerSelection?.defaultVisibility || 'private'\n\n  const isGitHubImporterOnActionsEnabled = useFeatureFlag('github_importer_on_actions')\n\n  const unsupportedProtocol = (() => {\n    if (vcsUrl.startsWith('svn://')) {\n      return 'svn://'\n    } else if (vcsUrl.startsWith('git://')) {\n      return 'git://'\n    } else {\n      return ''\n    }\n  })()\n\n  const isValidHttpUrl = (() => {\n    const pattern = new RegExp(\n      '^(https?://)?' + // protocol\n        '((([a-z\\\\d]([-]?[a-z\\\\d])*)@)?' + // optional username\n        '(([a-z\\\\d]([-]?[a-z\\\\d])*)\\\\.)+' + // domain name\n        '([a-z]{2,}|([a-z0-9-]+\\\\.[a-z]{2,})))' + // TLD or SLD\n        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3})?' + // OR ip (v4) address (optional)\n        '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n        '(\\\\#[-a-z\\\\d_]*)?$', // fragment locator\n      'i',\n    )\n    return pattern.test(vcsUrl)\n  })()\n\n  const vcsPlaceholderText = isGitHubImporterOnActionsEnabled\n    ? 'https://git.example.org/code/git'\n    : 'https://svn.example.org/code/svn'\n  const sourceRepoHeaderText = isGitHubImporterOnActionsEnabled\n    ? 'Your source repository details'\n    : 'Your old repository details'\n  const vcsUrlText = isGitHubImporterOnActionsEnabled\n    ? 'The URL for your source repository'\n    : \"Your old repository's clone URL\"\n  const vcsUrlLabel = isGitHubImporterOnActionsEnabled\n    ? 'The URL for your source repository'\n    : \"Your old repository's clone URL\"\n\n  const importHandler = async () => {\n    setSubmitClicked(true)\n    if (isImporting || fetchingOwnerDetails) return\n    if (vcsUrl && isValidHttpUrl && isValidRepoName && ownerSelection) {\n      const formData = new FormData()\n      formData.append('vcs_url', vcsUrl)\n      formData.append('owner', ownerSelection.name)\n      formData.append('repository[name]', repositoryName)\n      formData.append('repository[visibility]', selectedVisibility)\n      formData.append('source_username', sourceUsername)\n      formData.append('source_access_token', sourceToken)\n\n      try {\n        setIsImporting(true)\n        const result = await verifiedFetch(repositoryImportsPath(), {\n          method: 'POST',\n          body: formData,\n          headers: {Accept: 'text/html'},\n        })\n\n        if (result.redirected) {\n          navigate(result.url)\n        } else if (!result.ok) {\n          const json = await result.json()\n          setFlash(json.data.error)\n          setIsImporting(false)\n        }\n      } catch (e) {\n        setFlash('Something went wrong!')\n        setIsImporting(false)\n      }\n    } else if (!vcsUrl || !isValidHttpUrl) {\n      vcsUrlRef.current?.focus()\n      return\n    } else if (!ownerSelection) {\n      ownerRepoVisibilitySelectionRef.current?.focusOwnerDropdown()\n      return\n    } else {\n      ownerRepoVisibilitySelectionRef.current?.focusRepoInput()\n      return\n    }\n  }\n\n  const ownerRepoVisibilitySelectionProps = {\n    ownerItems,\n    ownerSelection,\n    repositoryName,\n    setRepositoryName,\n    onOwnerChange: changeOwner,\n    submitClicked,\n    repoNameChanged,\n    setRepoNameChanged,\n    setIsValidRepoName,\n    privateModeEnabled,\n    helpUrl,\n    selectedVisibility,\n    setUserSelectedVisibility,\n    tradeControlsPrivateRepoCreationWarning,\n    tradeControlsUserPrivateRepoCreationWarning,\n  }\n\n  return (\n    <RepoCreationForm\n      flash={flash}\n      title=\"Import your project to GitHub\"\n      description=\"Import all the files, including revision history, from another version control system.\"\n      protectedOrgLogins={protectedOrgLogins}\n      onSubmit={importHandler}\n      submitButton={\n        <Box sx={{display: 'flex', mt: 3}}>\n          <Button type=\"button\" variant=\"invisible\" sx={{mr: 1}} onClick={() => navigate('/')}>\n            Cancel\n          </Button>\n          <Button type=\"submit\" variant=\"primary\" disabled={isImporting}>\n            {isImporting ? 'Preparing import…' : 'Begin import'}\n          </Button>\n        </Box>\n      }\n    >\n      <Flash variant=\"warning\" sx={{mb: 3, mt: 3}}>\n        Support for importing Mercurial, Subversion and Team Foundation Version Control (TFVC) repositories ended on\n        April 12, 2024. For more details, see the{' '}\n        <a className=\"Link--inTextBlock\" href=\"https://gh.io/github-importer-non-git-eol\">\n          changelog\n        </a>\n        .\n      </Flash>\n\n      <Box\n        sx={{\n          mb: 2,\n          pt: 2,\n          pb: 3,\n          borderBottomStyle: 'solid',\n          borderBottomColor: 'border.muted',\n          borderBottomWidth: 1,\n        }}\n      >\n        <Heading as=\"h2\" sx={{fontSize: 3, mt: 3, mb: 3}}>\n          {sourceRepoHeaderText}\n        </Heading>\n        <FormControl required>\n          <FormControl.Label>{vcsUrlLabel}</FormControl.Label>\n          <TextInput\n            ref={vcsUrlRef}\n            block\n            aria-label={vcsUrlText}\n            aria-describedby={warningValidationId}\n            name={vcsUrlText}\n            placeholder={vcsPlaceholderText}\n            sx={{my: 1}}\n            value={vcsUrl}\n            onChange={e => setVcsUrl(e.target.value)}\n          />\n          {vcsUrl.startsWith('http://') && (\n            <WarningValidation id={warningValidationId}>\n              This repository will be imported over an unencrypted connection\n            </WarningValidation>\n          )}\n          {unsupportedProtocol && (\n            <FormControl.Validation variant=\"error\">\n              The {unsupportedProtocol} protocol is not supported\n            </FormControl.Validation>\n          )}\n          {submitClicked && !vcsUrl && (\n            <FormControl.Validation variant=\"error\">URL must not be blank</FormControl.Validation>\n          )}\n          {submitClicked && vcsUrl && !isValidHttpUrl && (\n            <FormControl.Validation variant=\"error\">URL must be valid</FormControl.Validation>\n          )}\n        </FormControl>\n        <span>\n          Learn more about{' '}\n          <Link\n            href=\"https://docs.github.com/get-started/importing-your-projects-to-github/importing-source-code-to-github/about-github-importer\"\n            target=\"_blank\"\n            inline\n          >\n            importing git repositories\n          </Link>\n          .\n        </span>\n      </Box>\n\n      {isGitHubImporterOnActionsEnabled && (\n        <Box\n          sx={{\n            mb: 2,\n            pt: 2,\n            pb: 3,\n            borderBottomStyle: 'solid',\n            borderBottomColor: 'border.muted',\n            borderBottomWidth: 1,\n          }}\n        >\n          <Text\n            as=\"p\"\n            sx={{\n              fontStyle: 'italic',\n              mb: 3,\n            }}\n          >\n            Please enter your credentials if required for cloning your remote repository.\n          </Text>\n          <FormControl>\n            <FormControl.Label>Your username for your source repository</FormControl.Label>\n            <TextInput\n              block\n              aria-label=\"Your username for your source repository\"\n              name=\"Your username for your source repository\"\n              sx={{my: 1}}\n              value={sourceUsername}\n              onChange={e => setSourceUsername(e.target.value)}\n            />\n          </FormControl>\n          <FormControl>\n            <FormControl.Label>Your access token or password for your source repository</FormControl.Label>\n            <TextInput\n              block\n              aria-label=\"Your access token or password for your source repository\"\n              name=\"Your access token or password for your source repository\"\n              sx={{my: 1}}\n              value={sourceToken}\n              onChange={e => setSourceToken(e.target.value)}\n              type=\"password\"\n            />\n          </FormControl>\n        </Box>\n      )}\n      <div>\n        <Heading as=\"h2\" sx={{fontSize: 3, mt: 3, mb: 3}}>\n          Your new repository details\n        </Heading>\n        <OwnerRepoVisibilitySelection ref={ownerRepoVisibilitySelectionRef} {...ownerRepoVisibilitySelectionProps} />\n        <CreationSummary action=\"create\" owner={ownerSelection} visibility={selectedVisibility} />\n      </div>\n    </RepoCreationForm>\n  )\n}\n\n// Note: this components mirrors the warning variant for `FormControl.Validation` from `@primer/react` v35 which is\n// expected to be removed in v36. No alternative was found for this specific use-case that would work for the current\n// design so this code was inlined as a result.\nfunction WarningValidation({children, id}: React.PropsWithChildren<{id: string}>) {\n  return (\n    <Text\n      aria-live=\"polite\"\n      id={id}\n      sx={{\n        display: 'flex',\n        columnGap: 1,\n        color: 'attention.fg',\n        fontWeight: 'bold',\n        fontSize: 0,\n        lineHeight: '1.33333',\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          minHeight: 'calc(12 * 1.33333)',\n        }}\n      >\n        <AlertFillIcon size={12} />\n      </Box>\n      {children}\n    </Text>\n  )\n}\n\ntry{ Import.displayName ||= 'Import' } catch {}\ntry{ WarningValidation.displayName ||= 'WarningValidation' } catch {}","import type {PropertyDefinition} from '@github-ui/custom-properties-types'\nimport type {OwnerItem} from '@github-ui/owner-dropdown'\nimport type {Visibility} from '@github-ui/repos-list/repos-list-types'\nimport type {SafeHTMLString} from '@github-ui/safe-html'\n\nexport interface RepoCreatePayload {\n  ownerItems?: OwnerItem[]\n  protectedOrgLogins: string[]\n  restrictCreateRepositoriesInPersonalNamespace: boolean\n  helpUrl: string\n  docsUrls: {\n    licensePicker: string\n  }\n}\n\nexport interface TransferRepoPayload {\n  repoCreate: RepoCreatePayload\n  pricingPath: string\n  repoNonTransferrableReason: string | null\n  repositoryTransferRequestsEnabled: boolean\n  brandedPlanName: string\n  pluralizedCodespaces: string\n  hasPage: boolean\n  codespaces: number\n  ownerFreePlan: boolean\n  organizationDiscussion: boolean\n  pendingTransfer: string | null\n  canTransferOwnership: boolean\n  hasRulesetsOrProtectedBranches: boolean\n}\n\nexport interface ImportRepoPayload {\n  repoCreate: RepoCreatePayload\n  initialOwnerSelection?: OwnerSelection\n  privateModeEnabled: boolean\n  tradeControlsPrivateRepoCreationWarning: SafeHTMLString\n  tradeControlsUserPrivateRepoCreationWarning: SafeHTMLString\n}\n\nexport interface NewRepoPayload {\n  repoCreate: RepoCreatePayload\n  initialOwnerSelection?: OwnerSelection\n  currentUserLogin: string\n  suggestedRepoName: string\n  privateModeEnabled: boolean\n  isGitHubEnterprise: boolean\n  tradeControlsPrivateRepoCreationWarning: SafeHTMLString\n  tradeControlsUserPrivateRepoCreationWarning: SafeHTMLString\n  hasTemplateRepos: boolean\n  selectedTemplate?: TemplateRepo | null\n  licenses: License[]\n  publicReposAvailable: boolean\n  repositoryImportLinkDataAttributes?: {[key: string]: string}\n  helpUrl: string\n  nameIsRestricted: boolean\n}\n\nexport interface ForkRepoPayload {\n  repoCreate: RepoCreatePayload\n  initialOwnerSelection?: OwnerSelection\n  repoHasForks: boolean\n  repoDescription?: string\n}\n\ninterface Fork {\n  name: string\n  ownerLogin: string\n}\n\nexport interface ForkRepoListPayload {\n  existingForks: Fork[]\n  truncated: boolean\n}\n\nexport interface TemplateRepo {\n  id: number\n  nameWithDisplayOwner: string\n  ownerDisplayLogin: string\n  avatarUrl: string\n}\n\nexport interface License {\n  id: string\n  text: string\n}\n\nexport interface OwnerSelection extends OwnerItem {\n  displayedVisibilities: Visibility[]\n  defaultVisibility: Visibility\n  publicRestrictedByPolicy: boolean\n  internalRestrictedByPolicy: boolean\n  privateRestrictedByPolicy: boolean\n  privateRestrictedByPlan: boolean\n  hasTradeRestrictions: boolean\n  adminableByCurrentUser: boolean\n  defaultNewRepoBranch: string\n  defaultBranchSettingsUrl: string | null\n  enterpriseManagedUserEnabled: boolean\n  installableApps: MarketplaceAppListing[]\n  requiredDefinitions: PropertyDefinition[]\n  editableDefinitionNames: string[]\n}\n\nexport enum TransferOwnerInputType {\n  ExistingOrgs = 'existing-organizations',\n  FreeformInput = 'freeform-input',\n}\n\nexport interface Team {\n  id: string\n  name: string\n  path: string\n  description: string\n  membersScopeCount: string\n  repositoriesScopeCount: string\n}\n\nexport interface MarketplaceAppListing {\n  id: number\n  // Note that bgcolor must be a hex code\n  bgcolor: string\n  primaryAvatarUrl: string\n  name: string\n  normalizedShortDescription: string\n  autoInstall: boolean\n}\n\nexport type ValueType = 'string' | 'single_select'\n","import {OwnerDropdown, type OwnerItem} from '@github-ui/owner-dropdown'\nimport {Box, FormControl, Radio, RadioGroup, TextInput} from '@primer/react'\nimport {forwardRef, useImperativeHandle, useRef} from 'react'\n\nimport {useRepoOwnerItemsPath} from '../hooks/use-repo-owner-items-path'\nimport {TransferOwnerInputType} from '../types/repo-creation-types'\n\nexport const OwnerRadioButtonSelection = forwardRef(\n  (\n    {\n      ownerItems,\n      excludedOrg,\n      selectedOwner,\n      hideSelectOwnerCheck = false,\n      onCurrentDropdownSelectionChange,\n      onCurrentFreeformInputChange,\n      currentFreeformInput,\n      selectedRadio,\n      onRadioChange,\n      ownerValidationError,\n    }: {\n      /** List of owners to display. If undefined, the list will be loaded from the server. */\n      ownerItems?: OwnerItem[]\n      excludedOrg?: string\n      selectedOwner?: OwnerItem\n      hideSelectOwnerCheck?: boolean\n      onCurrentDropdownSelectionChange: (value: OwnerItem) => void\n      currentFreeformInput: string\n      onCurrentFreeformInputChange: (value: string) => void\n      selectedRadio: TransferOwnerInputType\n      onRadioChange: (value: TransferOwnerInputType) => void\n      ownerValidationError: string\n    },\n    ref,\n  ) => {\n    const repoOwnerItemsPath = useRepoOwnerItemsPath()\n    const existingOrgsSelected = selectedRadio === TransferOwnerInputType.ExistingOrgs\n    const freeformInputSelected = selectedRadio === TransferOwnerInputType.FreeformInput\n\n    const existingOrgsDisabled = ownerItems?.length === 0\n\n    const orgSelectionText = `Select one of my organizations${existingOrgsDisabled ? ' (none available)' : ''}`\n\n    const freeformOwnerInputRef = useRef<HTMLInputElement>(null)\n    const ownerDropdownRef = useRef<HTMLButtonElement>(null)\n\n    useImperativeHandle(ref, () => ({\n      focusOwnerDropdown: () => {\n        ownerDropdownRef.current?.focus()\n      },\n      focusFreeformOwnerInput: () => {\n        freeformOwnerInputRef.current?.focus()\n      },\n    }))\n\n    const ownerRadioButtonSelectionValidationId = 'owner-radio-button-selection-validation'\n\n    return (\n      <Box sx={{gap: 3, display: 'grid'}}>\n        <RadioGroup name=\"choiceGroup\" required onChange={value => onRadioChange(value as TransferOwnerInputType)}>\n          <RadioGroup.Label sx={{mb: 1}}>New owner</RadioGroup.Label>\n          <FormControl disabled={existingOrgsDisabled}>\n            <Radio sx={{mt: 1}} value={TransferOwnerInputType.ExistingOrgs} checked={existingOrgsSelected} />\n            <FormControl.Label>\n              <p>{orgSelectionText}</p>\n              {existingOrgsSelected && (\n                <Box sx={{mt: 2, mb: 2}}>\n                  <OwnerDropdown\n                    aria-describedby={ownerRadioButtonSelectionValidationId}\n                    ref={ownerDropdownRef}\n                    initialOwnerItems={ownerItems}\n                    ownerItemsPath={repoOwnerItemsPath}\n                    excludedOrg={excludedOrg}\n                    hideSelectOwnerCheck={hideSelectOwnerCheck}\n                    selectedOwner={selectedOwner}\n                    onOwnerChange={value => {\n                      onCurrentDropdownSelectionChange(value)\n                    }}\n                    showLabel={false}\n                  />\n                </Box>\n              )}\n            </FormControl.Label>\n          </FormControl>\n          <FormControl>\n            <Radio sx={{mt: 1}} value={TransferOwnerInputType.FreeformInput} checked={freeformInputSelected} />\n            <FormControl.Label>\n              <p>Specify an organization or username</p>\n              {freeformInputSelected && (\n                <Box sx={{mt: 2, mb: 2}}>\n                  <TextInput\n                    block\n                    aria-describedby={ownerRadioButtonSelectionValidationId}\n                    aria-label=\"Specify an organization or username\"\n                    ref={freeformOwnerInputRef}\n                    name=\"Specify an organization or username\"\n                    value={currentFreeformInput}\n                    onChange={e => onCurrentFreeformInputChange(e.target.value)}\n                    data-testid=\"freeform-text-input\"\n                  />\n                </Box>\n              )}\n            </FormControl.Label>\n          </FormControl>\n          {ownerValidationError && (\n            <FormControl.Validation id={ownerRadioButtonSelectionValidationId} variant=\"error\">\n              {ownerValidationError}\n            </FormControl.Validation>\n          )}\n        </RadioGroup>\n      </Box>\n    )\n  },\n)\n\nOwnerRadioButtonSelection.displayName = 'OwnerRadioButtonSelection'\n","import {Box, Checkbox, FormControl, Link, Text} from '@primer/react'\n\nimport type {Team} from '../types/repo-creation-types'\n\nexport function TeamListItem({\n  team,\n  selectedTeamIds,\n  onChange,\n}: {\n  team: Team\n  selectedTeamIds: string[]\n  onChange: (s: string) => void\n}) {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        padding: 3,\n        borderTopWidth: 0,\n        borderBottomWidth: 0.5,\n        borderLeftWidth: 1,\n        borderRightWidth: 1,\n        borderStyle: 'solid',\n        borderColor: 'border.muted',\n        '&:first-child': {borderTopWidth: 1, borderTopLeftRadius: 2, borderTopRightRadius: 2},\n        '&:last-child': {borderBottomWidth: 1, borderBottomLeftRadius: 2, borderBottomRightRadius: 2},\n      }}\n      data-testid=\"team-list-item\"\n    >\n      <Box sx={{mr: 2}}>\n        <FormControl>\n          <Checkbox\n            checked={selectedTeamIds.includes(team.id)}\n            onChange={() => onChange(team.id)}\n            value={team.name}\n            aria-label={`Team ${team.name}`}\n            data-testid=\"team-checkbox\"\n          />\n          <FormControl.Label visuallyHidden>{team.name}</FormControl.Label>\n        </FormControl>\n      </Box>\n      <Box sx={{flex: 'auto'}}>\n        <strong>\n          <Link href={team.path}>{team.name}</Link>\n        </strong>\n        <Text sx={{fontSize: 'small', color: 'fg.muted', display: 'block'}}>{team.description}</Text>\n      </Box>\n      <Text sx={{mr: 2}}>{team.membersScopeCount}</Text>\n      <span>{team.repositoriesScopeCount}</span>\n    </Box>\n  )\n}\n\ntry{ TeamListItem.displayName ||= 'TeamListItem' } catch {}","import {debounce} from '@github/mini-throttle'\nimport {useCurrentRepository} from '@github-ui/current-repository'\nimport type {PropertyValuesRecord} from '@github-ui/custom-properties-types'\nimport {repoTransferPath, repoTransferTeamSuggestionsPath} from '@github-ui/paths'\nimport {useNavigate} from '@github-ui/use-navigate'\nimport {verifiedFetch, verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {SearchIcon} from '@primer/octicons-react'\nimport {Box, Button, Checkbox, Flash, FormControl, Pagination, Text, TextInput} from '@primer/react'\nimport {useCallback, useRef, useState} from 'react'\n\nimport type {Team} from '../types/repo-creation-types'\nimport {TeamListItem} from './TeamListItem'\n\ninterface RepoTransferWithTeamSelectionBody {\n  new_owner: string\n  new_name: string\n  custom_properties?: PropertyValuesRecord\n  commit: 'Transfer'\n  teams_selection: '1'\n  team_ids?: string[]\n}\n\nexport function TeamSelection({\n  teams,\n  initialPageCount,\n  onTeamFetch,\n  newOwner,\n  repositoryName,\n  errorHandler,\n  selectedProperties,\n}: {\n  teams: Team[]\n  initialPageCount: number\n  onTeamFetch: (teams: Team[]) => void\n  newOwner: string\n  repositoryName: string\n  errorHandler: () => void\n  selectedProperties?: PropertyValuesRecord\n}) {\n  const [selectedTeamIds, setSelectedTeamIds] = useState<string[]>([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [query, setQuery] = useState('')\n  const [pageCount, setPageCount] = useState(initialPageCount)\n  const [noTeamsOptionSelected, setNoTeamsOptionSelected] = useState(false)\n  const [showFlash, setShowFlash] = useState(false)\n  const [isTransferring, setIsTransferring] = useState(false)\n\n  const checkboxRef = useRef<HTMLInputElement>(null)\n  const navigate = useNavigate()\n\n  const handleChange = (id: string): void => {\n    setNoTeamsOptionSelected(false)\n    if (selectedTeamIds.includes(id)) {\n      setSelectedTeamIds(selectedTeamIds.filter(teamId => teamId !== id))\n    } else {\n      setSelectedTeamIds([...selectedTeamIds, id])\n    }\n  }\n\n  const repo = useCurrentRepository()\n\n  const transferHandler = async () => {\n    setShowFlash(false)\n    if (noTeamsOptionSelected || selectedTeamIds.length > 0) {\n      const body: RepoTransferWithTeamSelectionBody = {\n        ['new_owner']: newOwner,\n        commit: 'Transfer',\n        ['teams_selection']: '1',\n        ['new_name']: repositoryName,\n      }\n\n      const teamIds: string[] = []\n      for (const id of selectedTeamIds) {\n        teamIds.push(id)\n      }\n\n      if (teamIds.length) {\n        body['team_ids'] = teamIds\n      }\n\n      if (Object.keys(selectedProperties || {})?.length) {\n        body['custom_properties'] = selectedProperties\n      }\n\n      try {\n        setIsTransferring(true)\n        const result = await verifiedFetchJSON(repoTransferPath(repo), {\n          method: 'POST',\n          body,\n        })\n        if (result.ok && result.redirected) {\n          window.location.assign(result.url)\n        } else if (result.ok) {\n          const json = await result.json()\n          navigate(json.data.redirect)\n        } else {\n          setIsTransferring(false)\n          errorHandler()\n        }\n      } catch (e) {\n        setIsTransferring(false)\n        errorHandler()\n      }\n    } else {\n      setIsTransferring(false)\n      checkboxRef.current?.focus()\n      setShowFlash(true)\n    }\n  }\n\n  const fetchTeamsFromServer = async (queryString: string, page = 1) => {\n    try {\n      const result = await verifiedFetch(\n        `${repoTransferTeamSuggestionsPath(repo)}?page=${page}&new_owner=${newOwner}&query=${queryString}`,\n      )\n\n      if (result.ok) {\n        const {data} = await result.json()\n        setCurrentPage(page)\n        setPageCount(data.pageCount)\n        onTeamFetch(data.teams)\n      } else {\n        errorHandler()\n      }\n    } catch (e) {\n      errorHandler()\n    }\n  }\n\n  const onPageChange = async (evt: React.MouseEvent, page: number) => {\n    evt.preventDefault()\n    await fetchTeamsFromServer(query, page)\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounceFetchTeamsFromServer = useCallback(\n    debounce(async (value: string) => {\n      setQuery(value)\n      await fetchTeamsFromServer(value)\n    }, 200),\n    [setQuery, fetchTeamsFromServer],\n  )\n\n  return (\n    <Box sx={{my: 6}} className=\"container-sm\">\n      <h2>Team access</h2>\n      {showFlash && (\n        <Flash variant=\"danger\" sx={{my: 2}}>\n          Please either select no teams or choose at least one team to have access to{' '}\n          <strong>{`${newOwner}/${repositoryName}`}</strong>.\n        </Flash>\n      )}\n      <Text as=\"p\" sx={{color: 'fg.muted'}} data-testid=\"query-text-input-label\">\n        Please select any teams you wish to have access to <strong>{`${newOwner}/${repositoryName}`}</strong>.\n      </Text>\n      <FormControl sx={{mt: 2, mb: 3}}>\n        <Checkbox\n          onChange={() => {\n            setNoTeamsOptionSelected(!noTeamsOptionSelected)\n            setSelectedTeamIds([])\n          }}\n          checked={noTeamsOptionSelected}\n          ref={checkboxRef}\n          aria-label={`Please select any teams you wish to have access to ${newOwner}/${repositoryName}`}\n        />\n        <FormControl.Label sx={{fontWeight: 'normal'}}>\n          Do not give any teams access to <strong>{`${newOwner}/${repositoryName}`}</strong>.\n        </FormControl.Label>\n      </FormControl>\n      <TextInput\n        block\n        sx={{mb: 2}}\n        leadingVisual={SearchIcon}\n        placeholder=\"Find a team…\"\n        aria-label=\"Find a team\"\n        onChange={e => debounceFetchTeamsFromServer(e.target.value)}\n      />\n      <Box sx={{mb: 2}} data-testid=\"team-list\">\n        {teams.map(team => (\n          <TeamListItem key={team.id} team={team} selectedTeamIds={selectedTeamIds} onChange={handleChange} />\n        ))}\n      </Box>\n      <Pagination pageCount={pageCount} currentPage={currentPage} onPageChange={onPageChange} />\n      <Button\n        className=\"float-right\"\n        variant=\"primary\"\n        onClick={transferHandler}\n        data-sudo-required={true}\n        disabled={isTransferring}\n      >\n        {isTransferring ? 'Transferring repository…' : 'Transfer'}\n      </Button>\n    </Box>\n  )\n}\n\ntry{ TeamSelection.displayName ||= 'TeamSelection' } catch {}","import {useCurrentRepository} from '@github-ui/current-repository'\nimport {\n  type PropertyField,\n  propertyFieldsToChangedPropertiesMap,\n  useEditCustomProperties,\n} from '@github-ui/custom-properties-editing/use-edit-custom-properties'\nimport type {PropertyValuesRecord} from '@github-ui/custom-properties-types'\nimport {repoAbortTransferPath, repoTransferPath} from '@github-ui/paths'\nimport {useFeatureFlag} from '@github-ui/react-core/use-feature-flag'\nimport {useRoutePayload} from '@github-ui/react-core/use-route-payload'\nimport sudo from '@github-ui/sudo'\nimport {useNavigate} from '@github-ui/use-navigate'\nimport {verifiedFetch, verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {AlertIcon} from '@primer/octicons-react'\nimport {Box, Button, Flash, FormControl, Link, Octicon, Text, TextInput} from '@primer/react'\nimport {useMemo, useRef, useState} from 'react'\n\nimport {OwnerRadioButtonSelection} from '../components/OwnerRadioButtonSelection'\nimport {RepoCreationForm} from '../components/RepoCreationForm'\nimport {RepoNameInput} from '../components/RepoNameInput'\nimport {RequiredCustomPropertiesSelection} from '../components/RequiredCustomPropertiesSelection'\nimport {TeamSelection} from '../components/TeamSelection'\nimport {CurrentFormTypeProvider} from '../contexts/CurrentForm'\nimport {useSelectedOwner} from '../hooks/use-selected-owner'\nimport {\n  type OwnerSelection,\n  type Team,\n  TransferOwnerInputType,\n  type TransferRepoPayload,\n} from '../types/repo-creation-types'\n\ninterface RepoTransferBody {\n  new_owner: string\n  new_name: string\n  custom_properties?: PropertyValuesRecord\n}\n\nexport default function Transfer() {\n  return (\n    <CurrentFormTypeProvider type=\"transfer\">\n      <TransferForm />\n    </CurrentFormTypeProvider>\n  )\n}\n\nfunction TransferForm() {\n  const repo = useCurrentRepository()\n  const {\n    repoCreate,\n    pricingPath,\n    repoNonTransferrableReason,\n    repositoryTransferRequestsEnabled,\n    brandedPlanName,\n    pluralizedCodespaces,\n    hasPage,\n    codespaces,\n    ownerFreePlan,\n    organizationDiscussion,\n    pendingTransfer,\n    canTransferOwnership,\n    hasRulesetsOrProtectedBranches,\n  } = useRoutePayload<TransferRepoPayload>()\n  const propertiesOverlayEditorEnabled = useFeatureFlag('custom_properties_edit_modal')\n  const {ownerItems, protectedOrgLogins} = repoCreate\n\n  const [isCorrectConfirmation, setIsCorrectConfirmation] = useState(false)\n  const [teams, setTeams] = useState<Team[]>([])\n  const [teamPageCount, setTeamPageCount] = useState(0)\n  const [submitClicked, setSubmitClicked] = useState(false)\n\n  const {ownerSelection, changeOwner, errorMessage} = useSelectedOwner()\n\n  const {propertyValuesMap, setPropertyValue, revertPropertyValue} = useEditCustomProperties(\n    [{}],\n    ownerSelection?.requiredDefinitions || [],\n    [ownerSelection?.name],\n  )\n\n  const [currentFreeformInput, setCurrentFreeformInput] = useState('')\n  const [repositoryName, setRepositoryName] = useState(repo.name)\n  const [selectedRadio, setSelectedRadio] = useState<TransferOwnerInputType>(\n    ownerItems?.length === 0 ? TransferOwnerInputType.FreeformInput : TransferOwnerInputType.ExistingOrgs,\n  )\n  const [flash, setFlash] = useState('')\n  const [isValidRepoName, setIsValidRepoName] = useState(true)\n  const [isTransferring, setIsTransferring] = useState(false)\n  const [isAborting, setIsAborting] = useState(false)\n\n  const ownerRadioButtonSelectionRef = useRef<OwnerRadioButtonSelectionRef>()\n  const repoInputRef = useRef<HTMLInputElement>(null)\n  const confirmationInputRef = useRef<HTMLInputElement>(null)\n\n  const navigate = useNavigate()\n\n  const {canRename, newOwner} = (() => {\n    switch (selectedRadio) {\n      case TransferOwnerInputType.ExistingOrgs:\n        return {newOwner: ownerSelection?.name || '', canRename: true}\n      case TransferOwnerInputType.FreeformInput:\n        return {newOwner: currentFreeformInput, canRename: false}\n      default:\n        return {newOwner: '', canRename: false}\n    }\n  })()\n\n  const nameWithOwner = `${repo.ownerLogin}/${repo.name}`\n  const newRepoNameToSubmit = canRename ? repositoryName : repo.name\n\n  const transferHandler = async () => {\n    setSubmitClicked(true)\n\n    if (isTransferring) return\n\n    const propertiesList = Object.values(propertyValuesMap)\n    const invalidPropertyValues = propertiesList.some(p => !!p.error)\n\n    if (isCorrectConfirmation && newOwner && isValidRepoName && !invalidPropertyValues) {\n      setIsTransferring(true)\n      if (await sudo()) {\n        const body: RepoTransferBody = {\n          ['new_owner']: newOwner,\n          ['new_name']: newRepoNameToSubmit,\n        }\n\n        const formData = new FormData()\n        formData.append('new_owner', newOwner)\n        formData.append('new_name', newRepoNameToSubmit)\n\n        const selectedProperties = getSelectedCustomProperties({owner: ownerSelection, propertyValuesMap})\n        if (selectedProperties) {\n          body['custom_properties'] = selectedProperties\n        }\n\n        try {\n          const result = await verifiedFetchJSON(repoTransferPath(repo), {\n            method: 'POST',\n            body,\n          })\n\n          if (result.redirected) {\n            navigate(result.url)\n          } else {\n            const json = await result.json()\n            if (!result.ok) {\n              setFlash(json.data.error)\n            } else if (json.data.teams) {\n              setTeams(json.data.teams)\n              setTeamPageCount(json.data.pageCount)\n            } else if (json.data.redirect) {\n              navigate(json.data.redirect)\n            } else {\n              setFlash('Something unexpected went wrong!')\n            }\n          }\n        } catch (e) {\n          setFlash('Something went wrong!')\n        }\n      }\n      setIsTransferring(false)\n    } else if (!newOwner) {\n      if (selectedRadio === TransferOwnerInputType.ExistingOrgs) {\n        ownerRadioButtonSelectionRef?.current?.focusOwnerDropdown()\n        return\n      } else if (selectedRadio === TransferOwnerInputType.FreeformInput) {\n        ownerRadioButtonSelectionRef?.current?.focusFreeformOwnerInput()\n        return\n      }\n    } else if (!isValidRepoName) {\n      repoInputRef.current?.focus()\n      return\n    } else {\n      confirmationInputRef.current?.focus()\n      return\n    }\n  }\n\n  const canEditPropertyValues = !!ownerSelection?.editableDefinitionNames?.length\n  const displayRequiredCustomProperties = selectedRadio === TransferOwnerInputType.ExistingOrgs && canEditPropertyValues\n\n  const editableDefinitions = useMemo(() => {\n    if (!ownerSelection) return []\n\n    return ownerSelection.requiredDefinitions.filter(definition =>\n      ownerSelection.editableDefinitionNames.includes(definition.propertyName),\n    )\n  }, [ownerSelection])\n\n  const transferContent = () => {\n    if (pendingTransfer) {\n      const abortHandler = async () => {\n        setIsAborting(true)\n        if (await sudo()) {\n          try {\n            const result = await verifiedFetch(repoAbortTransferPath(repo), {\n              method: 'POST',\n              headers: {Accept: 'text/html'},\n            })\n            if (result.redirected) {\n              navigate(result.url)\n            } else {\n              setFlash('Something went wrong while aborting transfer!')\n            }\n          } catch (e) {\n            setFlash('Something went wrong while aborting transfer!')\n          }\n        }\n      }\n      return {\n        formContent: (\n          <Text\n            as=\"p\"\n            key=\"content\"\n            sx={{\n              pt: 2,\n              pb: 3,\n              mb: 3,\n              borderBottomColor: 'border.muted',\n              borderBottomWidth: 1,\n              borderBottomStyle: 'solid',\n            }}\n          >\n            This repository is being transferred to <strong>@{pendingTransfer}.</strong>\n          </Text>\n        ),\n        buttonContent: (\n          <Button key=\"button\" type=\"submit\" variant=\"danger\" disabled={isAborting}>\n            {isAborting ? 'Aborting transfer...' : 'Abort transfer'}\n          </Button>\n        ),\n        onSubmit: abortHandler,\n      }\n    } else if (canTransferOwnership) {\n      return {\n        formContent: (\n          <div key=\"content\">\n            <Box\n              sx={{\n                mb: 1,\n                pb: 3,\n                borderBottomColor: 'border.muted',\n                borderBottomWidth: 1,\n                borderBottomStyle: 'solid',\n              }}\n            >\n              <section aria-label=\"Further information on repository transfers\">\n                <Flash variant=\"warning\" sx={{mt: 3}}>\n                  <Octicon icon={AlertIcon} />\n                  To understand admin access, teams, issue assignments, and redirects after a repository is transferred,\n                  see{' '}\n                  <Link\n                    inline\n                    href=\"https://docs.github.com/repositories/creating-and-managing-repositories/transferring-a-repository\"\n                  >\n                    Transferring a repository\n                  </Link>{' '}\n                  in GitHub Help.\n                </Flash>\n              </section>\n              {repositoryTransferRequestsEnabled && (\n                <Text sx={{mt: 3, display: 'inline-block'}}>\n                  Transferring may be delayed until the new owner approves the transfer.\n                </Text>\n              )}\n              {repositoryTransferRequestsEnabled && !!codespaces && (\n                <span>\n                  {' '}\n                  There {codespaces === 1 ? 'is' : 'are'} {pluralizedCodespaces} that may be affected by this transfer.\n                </span>\n              )}\n            </Box>\n            <Box\n              data-hpc\n              sx={{\n                pt: 2,\n                pb: 2,\n                mb: 3,\n                borderBottomColor: 'border.muted',\n                borderBottomWidth: 1,\n                borderBottomStyle: 'solid',\n              }}\n            >\n              <OwnerRadioButtonSelection\n                ref={ownerRadioButtonSelectionRef}\n                ownerItems={ownerItems}\n                excludedOrg={repo.ownerLogin}\n                hideSelectOwnerCheck={!submitClicked}\n                onRadioChange={setSelectedRadio}\n                selectedRadio={selectedRadio}\n                selectedOwner={ownerSelection}\n                onCurrentDropdownSelectionChange={changeOwner}\n                currentFreeformInput={currentFreeformInput}\n                onCurrentFreeformInputChange={setCurrentFreeformInput}\n                ownerValidationError={submitClicked && newOwner === '' ? 'New owner must not be blank' : ''}\n              />\n              {newOwner && canRename && (\n                <RepoNameInput\n                  ref={repoInputRef}\n                  repositoryName={repositoryName}\n                  selectedOwnerName={newOwner}\n                  onChange={setRepositoryName}\n                  onValidityChange={setIsValidRepoName}\n                />\n              )}\n            </Box>\n            {organizationDiscussion && (\n              <Text sx={{mt: 2}}>\n                This will disable {repo.public ? 'public' : 'member'} organization discussions for{' '}\n                <strong>{repo.ownerLogin}</strong>.\n              </Text>\n            )}\n            {!ownerFreePlan && repo.private && (\n              <FreeAndPrivateWarning\n                {...{\n                  hasPage,\n                  codespaces,\n                  newOwner,\n                  brandedPlanName,\n                  pricingPath,\n                }}\n              />\n            )}\n            {hasRulesetsOrProtectedBranches && <RulesetsAndProtectedBranchesBypassableActorsWarning />}\n            {displayRequiredCustomProperties && (\n              <Box\n                sx={{\n                  borderBottomStyle: 'solid',\n                  borderBottomColor: 'border.muted',\n                  borderBottomWidth: 1,\n                  pb: 3,\n                  mt: 3,\n                }}\n              >\n                <RequiredCustomPropertiesSelection\n                  definitions={ownerSelection.requiredDefinitions}\n                  editableDefinitions={editableDefinitions}\n                  propertyValuesMap={propertyValuesMap}\n                  setPropertyValue={setPropertyValue}\n                  revertPropertyValue={revertPropertyValue}\n                  orgName={ownerSelection.name}\n                  propertiesOverlayEditorEnabled={propertiesOverlayEditorEnabled}\n                />\n              </Box>\n            )}\n            {((!ownerFreePlan && repo.private) || hasRulesetsOrProtectedBranches) && (\n              <Flash variant=\"warning\" sx={{mt: 4}}>\n                <Octicon icon={AlertIcon} />\n                Warning: This is a potentially destructive action.\n              </Flash>\n            )}\n            <Box sx={{mt: 3}}>\n              <FormControl required sx={{mb: 3}}>\n                <FormControl.Label>\n                  Type <b>{nameWithOwner}</b> to confirm.\n                </FormControl.Label>\n                <TextInput\n                  block\n                  ref={confirmationInputRef}\n                  data-testid=\"transfer-repo-confirmation\"\n                  aria-label={`Type ${nameWithOwner} to confirm`}\n                  name={`Type ${nameWithOwner} to confirm`}\n                  onChange={e => setIsCorrectConfirmation(e.target.value === nameWithOwner)}\n                />\n                {submitClicked && !isCorrectConfirmation && (\n                  <FormControl.Validation variant=\"error\">Must match {nameWithOwner}</FormControl.Validation>\n                )}\n              </FormControl>\n            </Box>\n          </div>\n        ),\n        buttonContent: (\n          <Button key=\"button\" type=\"submit\" variant=\"danger\" disabled={isTransferring}>\n            {isTransferring ? 'Transferring repository…' : 'I understand, transfer this repository.'}\n          </Button>\n        ),\n        onSubmit: transferHandler,\n      }\n    } else {\n      return {\n        formContent: <Text sx={{mb: 0}}>{repoNonTransferrableReason}</Text>,\n      }\n    }\n  }\n\n  const {formContent, buttonContent, onSubmit} = transferContent()\n\n  let selectedProperties\n  if (teamPageCount) {\n    selectedProperties = getSelectedCustomProperties({owner: ownerSelection, propertyValuesMap})\n  }\n\n  return teamPageCount ? (\n    <TeamSelection\n      teams={teams ? teams : []}\n      initialPageCount={teamPageCount}\n      onTeamFetch={setTeams}\n      newOwner={newOwner}\n      repositoryName={repositoryName}\n      errorHandler={() => setFlash('Something unexpected went wrong')}\n      selectedProperties={selectedProperties}\n    />\n  ) : (\n    <RepoCreationForm\n      flash={flash || errorMessage}\n      title={`Transfer repository: ${nameWithOwner}`}\n      description=\"Transfer this repository to another user or to an organization where you have the ability to create repositories.\"\n      protectedOrgLogins={protectedOrgLogins}\n      onSubmit={onSubmit}\n      submitButton={buttonContent}\n    >\n      {formContent}\n    </RepoCreationForm>\n  )\n}\n\nfunction FreeAndPrivateWarning({\n  hasPage,\n  codespaces,\n  newOwner,\n  brandedPlanName,\n  pricingPath,\n}: {\n  hasPage: boolean\n  codespaces: number\n  newOwner: string\n  brandedPlanName: string\n  pricingPath: string\n}) {\n  const syncedNewOwner = (\n    <strong>\n      @<span>{newOwner || 'username'}</span>\n    </strong>\n  )\n  return (\n    <Box\n      sx={{\n        mb: 3,\n        borderBottomColor: 'border.muted',\n        borderBottomWidth: 1,\n        borderBottomStyle: 'solid',\n      }}\n    >\n      <Text as=\"p\" sx={{mb: 2}}>\n        If {syncedNewOwner} is using {brandedPlanName} and accepts the transfer, they will lose access to private\n        repository features:\n      </Text>\n      <ul className=\"ml-4 mb-2\">\n        <li className=\"mb-2\">\n          <strong>Code owners</strong>\n        </li>\n        <li className=\"mb-2\">\n          Any existing <strong>wikis</strong>\n        </li>\n        <li className=\"mb-2\">\n          <strong>Pulse, Contributors, Community, Traffic, Commits, Code Frequency, Network,</strong> and{' '}\n          <strong>Forks</strong> on the <strong>Insights</strong> tab\n        </li>\n        <li className=\"mb-2\">\n          <strong>Draft</strong> PRs\n        </li>\n        <li className=\"mb-2\">\n          <strong>Multiple assignees</strong> for issues and PRs\n        </li>\n        <li className=\"mb-2\">\n          <strong>Multiple reviewers</strong> for PRs\n        </li>\n        <li className=\"mb-2\">\n          <strong>Branch and tag protection rules</strong>\n        </li>\n        {hasPage && (\n          <li>\n            <strong>GitHub Pages&mdash;</strong>\n            published GitHub Pages will be disabled\n          </li>\n        )}\n        {codespaces > 0 && (\n          <li>\n            <strong>Codespaces</strong> will be disabled\n          </li>\n        )}\n      </ul>\n      <Text as=\"p\" sx={{mb: 3}}>\n        {syncedNewOwner} can {pricingPath ? <Link href={pricingPath}>upgrade</Link> : 'upgrade'} their plan before\n        accepting the transfer to avoid losing access.\n      </Text>\n    </Box>\n  )\n}\n\nfunction RulesetsAndProtectedBranchesBypassableActorsWarning() {\n  return (\n    <Box\n      sx={{\n        mb: 3,\n        borderBottomColor: 'border.muted',\n        borderBottomWidth: 1,\n        borderBottomStyle: 'solid',\n      }}\n    >\n      <Text as=\"p\" sx={{mb: 2}}>\n        Individual users, teams, and apps will be removed from the following options:\n      </Text>\n      <ul className=\"ml-4 mb-2\">\n        <li className=\"mb-2\">\n          <strong>Repository ruleset bypassers</strong>\n        </li>\n        <li className=\"mb-2\">\n          <strong>Protected branch pull request bypassers</strong>\n        </li>\n        <li className=\"mb-2\">\n          <strong>Protected branch authorized pull request review dismissers</strong>\n        </li>\n        <li className=\"mb-2\">\n          <strong>Protected branch authorized pushers</strong>\n        </li>\n        <li className=\"mb-3\">\n          <strong>Protected branch allowed force pushers</strong>\n        </li>\n      </ul>\n    </Box>\n  )\n}\n\ninterface OwnerRadioButtonSelectionRef {\n  focusOwnerDropdown: () => void\n  focusFreeformOwnerInput: () => void\n}\n\nfunction getSelectedCustomProperties({\n  owner,\n  propertyValuesMap,\n}: {\n  owner?: OwnerSelection\n  propertyValuesMap: Record<string, PropertyField>\n}) {\n  const canEditPropertyValues = !!owner?.editableDefinitionNames?.length\n  if (canEditPropertyValues) {\n    const changedProperties = propertyFieldsToChangedPropertiesMap(owner.requiredDefinitions, propertyValuesMap)\n    return Object.keys(changedProperties).length ? changedProperties : undefined\n  }\n}\n\ntry{ Transfer.displayName ||= 'Transfer' } catch {}\ntry{ TransferForm.displayName ||= 'TransferForm' } catch {}\ntry{ FreeAndPrivateWarning.displayName ||= 'FreeAndPrivateWarning' } catch {}\ntry{ RulesetsAndProtectedBranchesBypassableActorsWarning.displayName ||= 'RulesetsAndProtectedBranchesBypassableActorsWarning' } catch {}","import {jsonRoute} from '@github-ui/react-core/json-route'\nimport {registerReactAppFactory} from '@github-ui/react-core/register-app'\n\nimport {App} from './App'\nimport Create from './pages/Create'\nimport Fork from './pages/Fork'\nimport Import from './pages/Import'\nimport Transfer from './pages/Transfer'\n\nregisterReactAppFactory('repo-creation', () => ({\n  App,\n  routes: [\n    jsonRoute({path: '/:owner/:repo/transfer', Component: Transfer}),\n    jsonRoute({path: '/new/import', Component: Import}),\n    jsonRoute({path: '/new', Component: Create}),\n    jsonRoute({path: '/organizations/:org/repositories/new', Component: Create}),\n    jsonRoute({path: '/:owner/:repo/fork', Component: Fork}),\n  ],\n}))\n","function queryLast<T extends Element>(selector: string): T | undefined {\n  const list = document.querySelectorAll<T>(selector)\n  if (list.length > 0) {\n    return list[list.length - 1]\n  }\n}\n\nfunction pagePathname() {\n  const locationOverride = queryLast<HTMLMetaElement>('meta[name=analytics-location]')\n  if (locationOverride) {\n    return locationOverride.content\n  } else {\n    return window.location.pathname\n  }\n}\n\nfunction pageQuery() {\n  const stripParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-query-strip]')\n  let search = ''\n\n  if (!stripParams) {\n    search = window.location.search\n  }\n\n  const extraParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-params]')\n  if (extraParams) {\n    search += (search ? '&' : '?') + extraParams.content\n  }\n\n  for (const meta of document.querySelectorAll<HTMLMetaElement>('meta[name=analytics-param-rename]')) {\n    const names = meta.content.split(':', 2)\n    search = search.replace(new RegExp(`(^|[?&])${names[0]}($|=)`, 'g'), `$1${names[1]}$2`)\n  }\n\n  return search\n}\n\nexport function requestUri() {\n  return `${window.location.protocol}//${window.location.host}${pagePathname() + pageQuery()}`\n}\n","import {fire} from 'delegated-events'\n\ntype Options = {\n  content: DocumentFragment | Promise<DocumentFragment> | Node\n  dialogClass?: string\n  detailsClass?: string\n  labelledBy?: string | null\n  label?: string | null\n  errorMessage?: string | null\n}\n\n// Open the site-wide Details Dialog element.\nexport async function dialog(options: Options): Promise<HTMLElement> {\n  const dialogTemplate = document.querySelector<HTMLTemplateElement>('#site-details-dialog')!\n  const clonedDetails = dialogTemplate.content.cloneNode(true) as Element\n  const details = clonedDetails.querySelector<HTMLElement>('details')!\n  const detailsDialog = details.querySelector<HTMLElement>('details-dialog')!\n  const spinner = details.querySelector<HTMLElement>('.js-details-dialog-spinner')!\n  if (options.detailsClass) details.classList.add(...options.detailsClass.split(' '))\n  if (options.dialogClass) detailsDialog.classList.add(...options.dialogClass.split(' '))\n\n  if (options.label) {\n    detailsDialog.setAttribute('aria-label', options.label)\n  } else if (options.labelledBy) {\n    detailsDialog.setAttribute('aria-labelledby', options.labelledBy)\n  }\n\n  document.body.append(clonedDetails)\n  try {\n    const content = await options.content\n    spinner.remove()\n    detailsDialog.prepend(content)\n  } catch (error) {\n    spinner.remove()\n    // create a span with the error message\n    const errorSpan = document.createElement('span')\n    errorSpan.textContent = options.errorMessage || \"Couldn't load the content\"\n    errorSpan.classList.add('my-6')\n    errorSpan.classList.add('mx-4')\n    detailsDialog.prepend(errorSpan)\n  }\n\n  details.addEventListener('toggle', () => {\n    if (details.hasAttribute('open')) return\n    fire(detailsDialog, 'dialog:remove')\n    details.remove()\n  })\n\n  return detailsDialog\n}\n","// Report uncaught JS errors to Sentry\n//   https://sentry.io/github/github-js\n\nimport {getOrCreateClientId} from '@github/hydro-analytics-client'\nimport {isSupported} from '@github/browser-support'\nimport {parse} from 'stacktrace-parser'\nimport {requestUri} from '@github-ui/analytics-overrides'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {getSoftNavReferrer} from '@github-ui/soft-nav/utils'\n\nlet extensionErrors = false\nlet errorsReported = 0\nconst loadTime = Date.now()\n// network error messages are not consistent across browsers, this is a list of known messages for chrome and firefox\nexport const EXPECTED_NETWORK_ERROR_MESSAGES = new Set([\n  'Failed to fetch',\n  'NetworkError when attempting to fetch resource.',\n])\n\ntype ErrorContext = {\n  message?: string\n}\n\n// Check if an arbitrary object is an error, or at least an object that satisfies the interface of an error,\n// with the necessary information to be able to report it to Sentry.\nfunction isError(error: unknown): error is Error {\n  // Check if it's a definite instance of an error\n  if (error instanceof Error) return true\n  // Otherwise, check that it at least satisfies the interface of an error\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'name' in error &&\n    typeof error.name === 'string' &&\n    'message' in error &&\n    typeof error.message === 'string'\n  )\n}\n\n/** Tries to serialize an arbitrary error value that is not an Error object, and returns a default message otherwise */\nfunction serializeNonError(error: unknown): string {\n  try {\n    return JSON.stringify(error)\n  } catch {\n    return 'Unserializable'\n  }\n}\n\nfunction isExpectedError(error: Error): boolean {\n  // We use AbortController to control events and some workflows. When we call `abort()` on it, it will raise an\n  // `AbortError` which doesn't represent a real error, so we don't want to report it.\n  if (error.name === 'AbortError') return true\n  // Failed to fetch errors are usually related to the user's network connection. They also do not represent\n  // real errors related to our code, so we will also ignore them.\n  if (error.name === 'TypeError' && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n  // For memex we use an ApiError class to represent errors returned from the API\n  // Additional details in the format of ApiErrorOpts are affixed to the name as a stringified JSON object\n  // so we just need to ensure the error name starts with ApiError\n  // see ui/packages/memex/src/client/platform/api-error.ts for more details.\n  if (error.name.startsWith('ApiError') && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n\n  return false\n}\n\n// @deprecated Re-throw the caught exception instead.\nexport function reportError(error: unknown, context: ErrorContext = {}) {\n  if (isFeatureEnabled('FAILBOT_HANDLE_NON_ERRORS')) {\n    if (!isError(error)) {\n      if (isIgnoredNonError(error)) return\n\n      // Create an error instance so that we can get the stacktrace of how this was reported\n      const errorForStackTrace = new Error()\n      const serializedErrorValue = serializeNonError(error)\n      // Construct a custom error object so we can keep track of anywhere that we report an error that isn't an Error object\n      const newError: PlatformJavascriptError = {\n        type: 'UnknownError',\n        value: `Unable to report error, due to a thrown non-Error type: ${typeof error}, with value ${serializedErrorValue}`,\n        stacktrace: stacktrace(errorForStackTrace),\n        catalogService: undefined,\n      }\n      report(errorContext(newError, context))\n      return\n    }\n    if (!isExpectedError(error)) {\n      report(errorContext(formatError(error), context))\n    }\n  } else {\n    // Without feature flag, we will cast the `error` variable which was implicitly the old\n    // behavior of the non-feature flagged code.\n    if (!isExpectedError(error as Error)) {\n      report(errorContext(formatError(error as Error), context))\n    }\n  }\n}\n\n// Report context info to Sentry.\nasync function report(context: PlatformReportBrowserErrorInput) {\n  if (!reportable()) return\n\n  const url = document.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-errors-url\"]')?.content\n  if (!url) return\n\n  if (isExtensionError(context.error.stacktrace)) {\n    extensionErrors = true\n    return\n  }\n\n  errorsReported++\n\n  try {\n    await fetch(url, {method: 'post', body: JSON.stringify(context)})\n  } catch {\n    // Error reporting failed so do nothing.\n  }\n}\n\nfunction formatError(error: Error): PlatformJavascriptError {\n  return {\n    type: error.name,\n    value: error.message,\n    stacktrace: stacktrace(error),\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    catalogService: (error as any)['catalogService'],\n  }\n}\n\nfunction errorContext(error: PlatformJavascriptError, context: ErrorContext = {}): PlatformReportBrowserErrorInput {\n  return Object.assign(\n    {\n      error,\n      sanitizedUrl: requestUri() || window.location.href,\n      readyState: document.readyState,\n      referrer: getSoftNavReferrer(),\n      timeSinceLoad: Math.round(Date.now() - loadTime),\n      user: pageUser() || undefined,\n      bundler,\n      ui: Boolean(document.querySelector('meta[name=\"ui\"]')),\n    },\n    context,\n  )\n}\n\nexport function stacktrace(error: Error): PlatformStackframe[] {\n  return parse(error.stack || '').map(frame => ({\n    filename: frame.file || '',\n    function: String(frame.methodName),\n    lineno: (frame.lineNumber || 0).toString(),\n    colno: (frame.column || 0).toString(),\n  }))\n}\n\nconst extensions = /(chrome|moz|safari)-extension:\\/\\//\n\n// Does this stack trace contain frames from browser extensions?\nfunction isExtensionError(stack: PlatformStackframe[]): boolean {\n  return stack.some(frame => extensions.test(frame.filename) || extensions.test(frame.function))\n}\n\nexport function pageUser() {\n  const login = document.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n  if (login) return login\n\n  const clientId = getOrCreateClientId()\n  return `anonymous-${clientId}`\n}\n\nlet unloaded = false\nssrSafeWindow?.addEventListener('pageshow', () => (unloaded = false))\nssrSafeWindow?.addEventListener('pagehide', () => (unloaded = true))\n\nfunction reportable() {\n  return !unloaded && !extensionErrors && errorsReported < 10 && isSupported()\n}\n\nif (typeof BroadcastChannel === 'function') {\n  const sharedWorkerErrorChannel = new BroadcastChannel('shared-worker-error')\n  sharedWorkerErrorChannel.addEventListener('message', event => {\n    // SharedWorker will emit a formatted error\n    reportError(event.data.error)\n  })\n}\n\nconst ignoredErrorMessages = [\n  'Object Not Found Matching Id', // from Microsoft Outlook SafeLink crawler\n  'Not implemented on this platform', // LastPass Safari extension\n  `provider because it's not your default extension`, // MetaMask extension\n]\n\n/**\n * We see a fair number of \"errors\" which are not actually Error objects. This function will return true if the\n * error is one of these known non-Error types and has content which we know can safely be ignored.\n * Most of these errors come from specific browsers or extensions which we can't control, so we just ignore them.\n * @param error An error that is not an Error object\n * @returns boolean\n */\nfunction isIgnoredNonError(error: unknown) {\n  if (!error || typeof error === 'boolean' || typeof error === 'number') {\n    // Rejected with a type that is not useful to report. Just ignore it.\n    return true\n  } else if (typeof error === 'string') {\n    // rejected with a string. See if it's a known error that we can ignore\n    if (ignoredErrorMessages.some(message => error.includes(message))) {\n      return true\n    }\n  } else if (\n    typeof error === 'object' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).message === 'string' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).code === 'number'\n  ) {\n    // We see an object like {\"message\":\"Not connected\",\"code\":4900} from some extension, likely MetaMask. Ignore these\n    return true\n  }\n\n  return false\n}\n","//  Get document's HTML Safe nonce.\n//\n// Example:\n//\n//   <meta name=\"html-safe-nonce\" content=\"de43a1f355c711f7f705e4f971964391ac0c8e13\">\nexport function getDocumentHtmlSafeNonces(document: Document): string[] {\n  const nonces = [...document.querySelectorAll<HTMLMetaElement>('meta[name=html-safe-nonce]')].map(meta => meta.content)\n\n  if (nonces.length < 1) {\n    throw new Error('could not find html-safe-nonce on document')\n  }\n  return nonces\n}\n\ninterface Response {\n  headers: Headers\n  status: number\n}\n\nclass ResponseError extends Error {\n  response: Response\n\n  constructor(message: string, response: Response) {\n    super(`${message} for HTTP ${response.status}`)\n    this.response = response\n  }\n}\n\nexport function verifyResponseHtmlSafeNonce(nonces: string[], response: Response, allowJson = false) {\n  const contentType = response.headers.get('content-type') || ''\n  if (!allowJson && !contentType.startsWith('text/html')) {\n    throw new ResponseError(`expected response with text/html, but was ${contentType}`, response)\n  }\n\n  if (allowJson && !(contentType.startsWith('text/html') || contentType.startsWith('application/json'))) {\n    throw new ResponseError(`expected response with text/html or application/json, but was ${contentType}`, response)\n  }\n\n  const responseNonce = response.headers.get('x-html-safe')\n  if (!responseNonce) {\n    throw new ResponseError(`missing X-HTML-Safe nonce`, response)\n  } else if (!nonces.includes(responseNonce)) {\n    throw new ResponseError(`response X-HTML-Safe nonce did not match`, response)\n  }\n}\n","import {getDocumentHtmlSafeNonces, verifyResponseHtmlSafeNonce} from '@github-ui/html-safe-nonce'\nimport {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {trustedTypesPolicy} from './policy'\n\nconst policyName = 'server-x-safe-html'\n\n// This is a no-op policy to be used with server-side rendered HTML.\nexport const serverXSafeHTMLPolicy = ghTrustedTypes.createPolicy(policyName, {\n  createHTML: (s: string, response: Response) => {\n    return trustedTypesPolicy.apply({\n      policy: () => {\n        verifyResponseHtmlSafeNonce(getDocumentHtmlSafeNonces(document), response)\n        return s\n      },\n      policyName,\n      fallback: s,\n      silenceErrorReporting: true,\n    })\n  },\n})\n","import {parseHTML} from '@github-ui/parse-html'\nimport {serverXSafeHTMLPolicy} from '@github-ui/trusted-types-policies/server-x-safe-html'\n\nexport async function fetchSafeDocumentFragment(\n  document: Document,\n  url: RequestInfo,\n  options?: RequestInit,\n): Promise<DocumentFragment> {\n  const request = new Request(url, options)\n  request.headers.append('X-Requested-With', 'XMLHttpRequest')\n  const response = await self.fetch(request)\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error(`HTTP ${response.status}${response.statusText || ''}`)\n  }\n  const trustedHTML = serverXSafeHTMLPolicy.createHTML(await response.text(), response)\n  return parseHTML(document, trustedHTML)\n}\n\nexport function fetchPoll(\n  url: RequestInfo,\n  options?: RequestInit,\n  timeBetweenRequests = 1000,\n  acceptedStatusCodes = [200],\n  pollStatusCodes = [202],\n): Promise<Response> {\n  return (async function poll(wait: number): Promise<Response> {\n    const request = new Request(url, options)\n    request.headers.append('X-Requested-With', 'XMLHttpRequest')\n    const response = await self.fetch(request)\n\n    if (pollStatusCodes.includes(response.status)) {\n      await new Promise(resolve => setTimeout(resolve, wait))\n      return poll(wait * 1.5)\n    }\n    if (acceptedStatusCodes.includes(response.status)) {\n      return response\n    }\n    if (response.status < 200 || response.status >= 300) {\n      throw new Error(`HTTP ${response.status}${response.statusText || ''}`)\n    }\n    throw new Error(`Unexpected ${response.status} response status from poll endpoint`)\n  })(timeBetweenRequests)\n}\n\ntype RetryResult = Response | 'retry'\ntype FetchRetryOptions = {\n  // Base wait time between retries\n  // this will be multiplied with the current attempt to perform a backoff strategy\n  // Defaults to 500ms\n  wait?: number\n  // List of accepted status codes that should not be retried. Defaults to [200]\n  acceptedStatusCodes?: number[]\n  // Max number of attempts. Defaults to 3\n  max?: number\n  // Current retry attempt. Starts at 0\n  attempt?: number\n}\n\n// Execute a fetch call in a callback and retry it up to `options.max` times\n// Each retry will be delayed `options.wait` * `options.attempt`\nexport async function fetchRetry(\n  url: RequestInfo,\n  fetchOptions?: RequestInit,\n  options?: FetchRetryOptions,\n): Promise<Response> {\n  const {wait = 500, acceptedStatusCodes = [200], max = 3, attempt = 0} = options || {}\n\n  const retry: () => Promise<RetryResult> = async () => {\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          const request = new Request(url, fetchOptions)\n          request.headers.append('X-Requested-With', 'XMLHttpRequest')\n          const response = await self.fetch(request)\n          if (acceptedStatusCodes.includes(response.status) || attempt + 1 === max) {\n            return resolve(response)\n          }\n\n          // The response failed, we indicate that it must be retried\n          resolve('retry')\n        } catch (err) {\n          // Only non successful HTTP status codes are controlled by this retry mechanism\n          // Any other error is propagated\n          reject(err)\n        }\n      }, wait * attempt)\n    })\n  }\n\n  const result = await retry()\n  if (result !== 'retry') {\n    return result\n  }\n\n  return fetchRetry(url, fetchOptions, {wait, acceptedStatusCodes, max, attempt: attempt + 1})\n}\n","// Check if the navigation is only a hash change.\nconst isHashNavigation = (currentUrl: string, targetUrl: string): boolean => {\n  const current = new URL(currentUrl, window.location.origin)\n  const target = new URL(targetUrl, window.location.origin)\n  const hasHash = target.href.includes('#')\n\n  return (\n    hasHash && current.host === target.host && current.pathname === target.pathname && current.search === target.search\n  )\n}\n\nexport default isHashNavigation\n","import {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {trustedTypesPolicy} from './policy'\n\nconst policyName = 'parse-html-no-op'\n// This is a temporary policy to allow us to migrate to Trusted Types without breaking existing code.\nexport const temporaryPermissiveParseHTMLPolicy = ghTrustedTypes.createPolicy(policyName, {\n  createHTML: (s: string) => {\n    return trustedTypesPolicy.apply({\n      policy: () => s,\n      policyName,\n      fallback: s,\n      sanitize: false,\n      fallbackOnError: true,\n    })\n  },\n})\n","import {temporaryPermissiveParseHTMLPolicy} from '@github-ui/trusted-types-policies/parse-html'\n\nexport function parseHTML(document: Document, html: string): DocumentFragment {\n  const template = document.createElement('template')\n  template.innerHTML = temporaryPermissiveParseHTMLPolicy.createHTML(html)\n  return document.importNode(template.content, true)\n}\n","import {useAppPayload} from './use-app-payload'\n\nexport type AppPayloadWithFeatureFlags = {enabled_features?: EnabledFeatures}\nexport type EnabledFeatures = {[key: string]: boolean | undefined}\n\n/**\n * Fetches all client side feature flags.\n *\n * Note: If your app isn't rendered in the monolith using the registerReactAppFactory function,\n * you can use the FeatureFlagProvider to wrap your app in a context and populate the\n * client side feature flags yourself.\n */\nexport const useFeatureFlags = () => useAppPayload<AppPayloadWithFeatureFlags>()?.enabled_features ?? {}\n\n/**\n * Fetches a specific client side feature flag.\n *\n * Note: If your app isn't rendered in the monolith using the registerReactAppFactory function,\n * you can use the FeatureFlagProvider to wrap your app in a context and populate the\n * client side feature flags yourself.\n */\nexport const useFeatureFlag = (featureName: string) => !!useFeatureFlags()[featureName]\n","import {verifiedFetchJSON, type JSONRequestInit} from '@github-ui/verified-fetch'\nimport {useState} from 'react'\n\nenum VALIDATION_RESULT {\n  INVALID,\n  VALID,\n  UNKNOWN,\n}\n\nexport function useAsyncValidation(baseValidationUrl: string, type: string) {\n  const [validityResult, setValidityResult] = useState(VALIDATION_RESULT.UNKNOWN)\n\n  const isValid = validityResult === VALIDATION_RESULT.VALID\n  const showError = validityResult === VALIDATION_RESULT.INVALID\n\n  const validate = async (value: object, header: JSONRequestInit = {}): Promise<boolean> => {\n    setValidityResult(VALIDATION_RESULT.UNKNOWN)\n\n    if (!type) {\n      return true\n    }\n\n    const result = await requestServerResult(value, `${baseValidationUrl}/${type}`, header)\n    setValidityResult(result)\n    return resultValidity(result)\n  }\n\n  const reset = (forceValid = false) => {\n    setValidityResult(forceValid ? VALIDATION_RESULT.VALID : VALIDATION_RESULT.UNKNOWN)\n  }\n\n  return {\n    isValid,\n    showError,\n    validate,\n    reset,\n  }\n}\n\nconst requestServerResult = async (body: object, url: string, header?: JSONRequestInit): Promise<VALIDATION_RESULT> => {\n  const response = await verifiedFetchJSON(url, {\n    ...header,\n    method: 'POST',\n    body,\n  })\n\n  if (response.ok) {\n    const {valid} = await response.json()\n    return valid ? VALIDATION_RESULT.VALID : VALIDATION_RESULT.INVALID\n  } else if (response.status === 400) {\n    return VALIDATION_RESULT.INVALID\n  } else {\n    return VALIDATION_RESULT.UNKNOWN\n  }\n}\n\nconst resultValidity = (result: VALIDATION_RESULT) => {\n  switch (result) {\n    case VALIDATION_RESULT.VALID:\n    case VALIDATION_RESULT.UNKNOWN:\n      return true\n    case VALIDATION_RESULT.INVALID:\n      return false\n  }\n}\n\nexport const requestServerValidation = async (body: object, url: string): Promise<boolean> =>\n  resultValidity(await requestServerResult(body, url))\n","import {dialog} from '@github-ui/details-dialog'\nimport {fetchSafeDocumentFragment} from '@github-ui/fetch-utils'\nimport type {Kicker} from '@github/remote-form'\nimport {remoteForm} from '@github/remote-form'\nimport {webauthnSupportLevel} from '@github-ui/webauthn-support-level'\n\nlet sudoPromptExist = false\n\n/**\n * Take a URL and add webauthn params to it.\n *\n * @param {string} oldURL - The old URL.\n * @returns {string} - The new URL with added params.\n */\nfunction urlWithParams(oldURL: string): string {\n  const newURL = new URL(oldURL, window.location.origin)\n  const params = new URLSearchParams(newURL.search.slice(1))\n  params.set('webauthn-support', webauthnSupportLevel())\n  newURL.search = params.toString()\n  return newURL.toString()\n}\n\nasync function loadPromptTemplate(): Promise<HTMLTemplateElement> {\n  const link = document.querySelector<HTMLLinkElement>('link[rel=sudo-modal]')!\n  const template = document.querySelector('.js-sudo-prompt')\n  if (template instanceof HTMLTemplateElement) {\n    return template\n  } else if (link) {\n    const fragment = await fetchSafeDocumentFragment(document, urlWithParams(link.href))\n    document.body.appendChild(fragment)\n    return document.querySelector<HTMLTemplateElement>('.js-sudo-prompt')!\n  } else {\n    throw new Error(\"couldn't load sudo prompt\")\n  }\n}\n\nlet succeeded = false\n\n/**\n * Provide a sudo prompt, and return when it has been filled in or dismissed.\n *\n * @returns {Promise<boolean>} - Resolves to `true` if the user successfully authed with sudo.\n */\nexport async function sudoPrompt(currentTarget?: HTMLElement): Promise<boolean> {\n  if (sudoPromptExist) return false\n  sudoPromptExist = true\n  succeeded = false\n  const template = await loadPromptTemplate()\n  const content = template.content.cloneNode(true)\n  const prompt = await dialog({content})\n\n  // open/expanded HTML5 <details> can potentially steal focus from the dialog (https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details)\n  // Example bug: https://github.com/github/authentication/issues/2208\n  // close the open details element that triggered this sudo challenge\n  const details = currentTarget?.closest('details[open]') as HTMLElement\n  if (details) {\n    details.removeAttribute('open')\n  }\n\n  await new Promise<void>(resolve => {\n    prompt.addEventListener(\n      'dialog:remove',\n      function () {\n        // re-add the open attribute to the details that we closed above\n        if (details) {\n          details.setAttribute('open', 'open')\n        }\n        sudoPromptExist = false\n        resolve()\n      },\n      {once: true},\n    )\n  })\n  return succeeded\n}\n\nasync function sudoModalErrorOrClose(\n  form: HTMLFormElement,\n  wants: Kicker,\n  unauthorizedError = 'Sudo authentication failed.',\n  tooManyError = 'Too many authentication attempts. Please try again later.',\n  errorSelector = '.js-sudo-error',\n  inputElementSelector?: string,\n) {\n  try {\n    await wants.text()\n  } catch (error) {\n    // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n    if (!error.response) throw error\n    let errorMessage\n    // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n    switch (error.response.status) {\n      case 401:\n        errorMessage = unauthorizedError\n        break\n      case 429:\n        errorMessage = tooManyError\n        break\n      default:\n        errorMessage = 'An unknown error occurred. Please try again later.'\n    }\n\n    form.querySelector<HTMLElement>(errorSelector)!.textContent = errorMessage\n    form.querySelector<HTMLElement>(errorSelector)!.hidden = false\n    if (inputElementSelector) {\n      form.querySelector<HTMLInputElement>(inputElementSelector)!.value = ''\n    }\n\n    // rethrow error if not expected, only after surfacing it in flash\n    // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n    if (error.response.status !== 401 && error.response.status !== 429) {\n      throw error\n    }\n\n    return\n  }\n  succeeded = true\n  form.closest<HTMLElement>('details')!.removeAttribute('open')\n}\n\nremoteForm('.js-sudo-webauthn-form', async function (form, wants) {\n  await sudoModalErrorOrClose(form, wants)\n})\n\nremoteForm('.js-sudo-github-mobile-form', async function (form, wants) {\n  await sudoModalErrorOrClose(form, wants)\n})\n\nremoteForm('.js-sudo-totp-form', async function (form, wants) {\n  await sudoModalErrorOrClose(form, wants, undefined, undefined, '.flash-error', '#totp')\n})\n\nremoteForm('.js-sudo-password-form', async function (form, wants) {\n  await sudoModalErrorOrClose(\n    form,\n    wants,\n    'Incorrect password.',\n    'Too many password attempts. Please wait and try again.',\n    undefined,\n    '.js-sudo-password',\n  )\n})\n\n/**\n * Check if user is in sudo mode. If not, show a sudo prompt.\n *\n * @returns {Promise<boolean>} - Will be `true` if user is in or got in sudo mode after prompt.\n */\nexport default async function triggerSudoPrompt(currentTarget?: HTMLElement): Promise<boolean> {\n  const response = await fetch('/sessions/in_sudo', {\n    headers: {accept: 'application/json', 'X-Requested-With': 'XMLHttpRequest'},\n  })\n  if (response.ok) {\n    const sudoResponse = await response.text()\n    if (sudoResponse === 'true') {\n      return true\n    }\n  }\n  return sudoPrompt(currentTarget)\n}\n\nexport async function fetchSessionInSudo(): Promise<boolean> {\n  const response = await fetch('/sessions/in_sudo', {\n    headers: {accept: 'application/json', 'X-Requested-With': 'XMLHttpRequest'},\n  })\n  if (response.ok) {\n    const sudoResponse = await response.text()\n    if (sudoResponse === 'true') {\n      return true\n    }\n  }\n  return false\n}\n","export interface TestIdProps {\n  /** Test ID to be queried by automated testing suites */\n  'data-testid'?: string\n}\n\nexport const testIdProps = (value: string): TestIdProps => {\n  return {'data-testid': value}\n}\n","import {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {sendStats} from '@github-ui/stats'\n// eslint-disable-next-line no-restricted-imports\nimport {reportError} from '@github-ui/failbot'\nimport dompurify from 'dompurify'\nimport {sendEvent} from '@github-ui/hydro-analytics'\n\nexport class TrustedTypesPolicyError extends Error {}\n\ninterface PolicyParam {\n  policy: () => string\n  policyName: string\n  fallback: string\n  fallbackOnError?: boolean\n  sanitize?: boolean // report-only mode for now\n  silenceErrorReporting?: boolean\n}\n\nfunction apply({\n  policy,\n  policyName,\n  fallback,\n  fallbackOnError = false,\n  sanitize,\n  silenceErrorReporting = false,\n}: PolicyParam): string {\n  try {\n    if (isFeatureEnabled('BYPASS_TRUSTED_TYPES_POLICY_RULES')) return fallback\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_CALLED', trustedTypesPolicyName: policyName}, false, 0.1)\n    const policyOutput = policy()\n    if (sanitize) {\n      new Promise(resolve => {\n        const startTime = window.performance.now()\n        const sanitized = dompurify.sanitize(policyOutput, {FORBID_ATTR: []})\n        const endTime = window.performance.now()\n        const executionTime = endTime - startTime\n        if (policyOutput.length !== sanitized.length) {\n          const err = new Error('Trusted Types policy output sanitized')\n          const stack = err.stack?.slice(0, 1000)\n          const output = policyOutput.slice(0, 250)\n          sendEvent('trusted_types_policy.sanitize', {\n            policyName,\n            output,\n            stack,\n            outputLength: policyOutput.length,\n            sanitizedLength: sanitized.length,\n            executionTime,\n          })\n          resolve(policyOutput)\n        }\n      })\n    }\n    return policyOutput\n  } catch (e) {\n    if (e instanceof TrustedTypesPolicyError) throw e\n    if (!silenceErrorReporting) reportError(e)\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_ERROR', trustedTypesPolicyName: policyName})\n    if (!fallbackOnError) throw e\n  }\n\n  return fallback\n}\n\nexport const trustedTypesPolicy = {apply}\n","/* eslint no-restricted-globals: ['off', '__TRUSTED_TYPE_POLICIES__'] */\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\n/*\n * Tinyfill for trusted types\n */\n\ninterface GHTrustedTypePolicyOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createHTML: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScript: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScriptURL: (input: string, ...args: any[]) => string\n}\n\ninterface GHTrustedTypePolicyWithName extends GHTrustedTypePolicyOptions {\n  name: string\n}\n\nfunction unimplemented(functionName: string) {\n  return () => {\n    throw new TypeError(`The policy does not implement the function ${functionName}`)\n  }\n}\n\nconst fallbacks = {\n  createHTML: unimplemented('createHTML'),\n  createScript: unimplemented('createScript'),\n  createScriptURL: unimplemented('createScriptURL'),\n}\n\nconst tinyfill = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => ({\n    name,\n    ...fallbacks,\n    ...rules,\n  }),\n}\n\ntype TrustedTypesPolicies = Map<string, GHTrustedTypePolicyOptions>\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var trustedTypes: typeof tinyfill | undefined\n  // We need to store the policies in a global variable so that they accurately track the global policy store in the\n  // browser. This prevents false misses when there is more than one instance of this module loaded on the page.\n  // eslint-disable-next-line no-var\n  var __TRUSTED_TYPE_POLICIES__: TrustedTypesPolicies\n}\n\nconst registeredPolicies: TrustedTypesPolicies = (globalThis.__TRUSTED_TYPE_POLICIES__ ??= new Map())\n\n// eslint-disable-next-line compat/compat\nconst trustedTypes = globalThis.trustedTypes ?? tinyfill\n\nexport const ghTrustedTypes = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => {\n    if (registeredPolicies.has(name)) {\n      sendStats({\n        incrementKey: 'TRUSTED_TYPES_POLICY_INITIALIZED_TWICE',\n      })\n      return registeredPolicies.get(name) as GHTrustedTypePolicyWithName\n    } else {\n      const policy = Object.freeze(trustedTypes.createPolicy(name, rules))\n      registeredPolicies.set(name, policy)\n      return policy\n    }\n  },\n}\n\n// This export is only for testing. Do not import in production code.\nexport const registeredPoliciesForTesting = registeredPolicies\nexport const tinyfillForTesting = tinyfill\n\n/*\n *\n * This is a temporary warning to indicate to hubbers that the following errors are expected and safe to ignore.\n *\n */\nlet hasWarnedHubberAboutTrustedTypes = false\n\nssrSafeDocument?.addEventListener('securitypolicyviolation', (e: SecurityPolicyViolationEvent) => {\n  if (e.violatedDirective === 'require-trusted-types-for' && !hasWarnedHubberAboutTrustedTypes) {\n    // eslint-disable-next-line no-console\n    console.warn(`Hi fellow Hubber!\n    You're probably seeing a Report Only Trusted Types error near this message. This is intended behaviour, staff-only,\n    does not impact application control flow, and is used solely for statistic collection. Unfortunately we\n    can't gather these statistics without adding the above warnings to your console. Sorry about that!\n    Feel free to drop by #prodsec-engineering if you have any additional questions about Trusted Types or CSP.`)\n    hasWarnedHubberAboutTrustedTypes = true\n  }\n})\n","import {useCallback, useContext} from 'react'\nimport {sendEvent} from '@github-ui/hydro-analytics'\nimport {AnalyticsContext} from '@github-ui/analytics-provider/context'\n\nexport interface AnalyticsEvent {\n  category: string\n  action: string\n  label: string\n  [key: string]: unknown\n}\n\ntype SendAnalyticsEventFunction = (\n  eventType: string,\n  target?: string,\n  payload?: {[key: string]: unknown} | AnalyticsEvent,\n) => void\n\n/**\n * Use this hook with the AnalyticsContext to send user analytics events to the data warehouse.\n * This hook will read values from the nearest AnalyticsContext.Provider, though you can override properties directly when sending an event.\n * It uses the `sendEvent` helper from `github/hydro-analytics`,\n * which enriches event context with additional information about the user, repository, and current page.\n * See: https://thehub.github.com/epd/engineering/products-and-services/internal/hydro/installation/browser-events/\n *\n * You can find a list of all included context properties in `app/helpers/octolytics_helper.rb`.\n *\n *\n * @example\n * ```tsx\n * function Component() {\n *   const { sendAnalyticsEvent } = useAnalytics()\n *   return <Button onClick={() => sendAnalyticsEvent('file_tree.close', 'FILE_TREE_TOGGLE')}>CLOSE TREE</Button>\n * }\n * ```\n *\n */\nexport function useAnalytics(): {\n  sendAnalyticsEvent: SendAnalyticsEventFunction\n} {\n  // WARNING: Do not add any hooks here that will cause rerenders on soft navs.\n  const contextData = useContext(AnalyticsContext)\n\n  if (!contextData) {\n    throw new Error('useAnalytics must be used within an AnalyticsContext')\n  }\n  const {appName, category, metadata} = contextData\n\n  return {\n    sendAnalyticsEvent: useCallback(\n      (eventType, target?, payload = {}) => {\n        const context = {\n          react: true,\n          ['app_name']: appName,\n          category,\n          ...metadata,\n        }\n        sendEvent(eventType, {...context, ...payload, target})\n      },\n      [appName, category, metadata],\n    ),\n  }\n}\n\n/**\n * Use this hook with the AnalyticsContext to send user analytics events to the data warehouse.\n * This hook will read values from the nearest AnalyticsContext.Provider, though you can override properties directly when sending an event.\n * It uses the `sendEvent` helper from `github/hydro-analytics`,\n * which enriches event context with additional information about the user, repository, and current page.\n * See: https://thehub.github.com/epd/engineering/products-and-services/internal/hydro/installation/browser-events/\n *\n * You can find a list of all included context properties in `app/helpers/octolytics_helper.rb`.\n *\n *\n * @example\n * ```tsx\n * function Component() {\n *   const { sendClickAnalyticsEvent } = useClickAnalytics()\n *   return <Button onClick={() => sendClickAnalyticsEvent({category: '...', action: '...', label: '...'})}>Submit</Button>\n * }\n * ```\n *\n */\nexport function useClickAnalytics(): {\n  sendClickAnalyticsEvent: (payload?: {[key: string]: unknown} | AnalyticsEvent) => void\n} {\n  const {sendAnalyticsEvent} = useAnalytics()\n  return {\n    sendClickAnalyticsEvent: useCallback(\n      (payload = {}) => {\n        sendAnalyticsEvent('analytics.click', undefined, payload)\n      },\n      [sendAnalyticsEvent],\n    ),\n  }\n}\n","import React, {startTransition} from 'react'\nimport {\n  createSearchParams,\n  matchRoutes,\n  resolvePath,\n  useLocation,\n  useNavigate as useReactRouterNavigate,\n  useSearchParams as useReactRouterSearchParams,\n  type NavigateOptions,\n  type To,\n  type URLSearchParamsInit,\n} from 'react-router-dom'\n\nimport isHashNavigation from '@github-ui/is-hash-navigation'\nimport {AppContext} from '@github-ui/react-core/app-context'\nimport {startSoftNav} from '@github-ui/soft-nav/state'\nimport {PREVENT_AUTOFOCUS_KEY} from '@github-ui/react-core/prevent-autofocus'\n\nexport interface NavigateOptionsWithPreventAutofocus extends NavigateOptions {\n  preventAutofocus?: boolean\n}\n\nexport const useNavigate = (): ((to: To, options?: NavigateOptionsWithPreventAutofocus) => void) => {\n  const {routes, history} = React.useContext(AppContext)\n  const reactRouterNavigate = useReactRouterNavigate()\n  return React.useCallback(\n    (to, navigateOptions = {}) => {\n      const pathname = resolvePath(to).pathname\n      const isExternalToApp = !matchRoutes(routes, pathname)\n\n      if (isExternalToApp) {\n        const href = history.createHref(to)\n        ;(async () => {\n          const {softNavigate: turboSoftNavigate} = await import('@github-ui/soft-navigate')\n          turboSoftNavigate(href)\n        })()\n      } else {\n        if (!isHashNavigation(location.href, to.toString())) {\n          startSoftNav('react')\n        }\n        const {preventAutofocus, ...options} = navigateOptions\n        startTransition(() => {\n          reactRouterNavigate(\n            to,\n            preventAutofocus\n              ? {\n                  ...options,\n                  state: {\n                    [PREVENT_AUTOFOCUS_KEY]: true,\n                    ...options.state,\n                  },\n                }\n              : options,\n          )\n          const {turbo, ...state} = window.history.state\n          window.history.replaceState({...state, skipTurbo: true}, '', location.href)\n        })\n      }\n    },\n    [history, reactRouterNavigate, routes],\n  )\n}\n\n/**\n * An implementation of `useSearchParams` that mirrors `react-router-dom`'s `useSearchParams` hook\n * but utilizes `@github-ui/useNavigate` instead of `react-router` `useNavigate` to handle updates.\n */\nexport const useSearchParams = () => {\n  const [searchParams] = useReactRouterSearchParams()\n  const navigate = useNavigate()\n  const {pathname} = useLocation()\n\n  const setSearchParams = React.useCallback<\n    (\n      nextInit?: URLSearchParamsInit | ((prev: URLSearchParams) => URLSearchParamsInit),\n      navigateOpts?: NavigateOptionsWithPreventAutofocus,\n    ) => void\n  >(\n    (nextInit, navigateOptions = {}) => {\n      const newSearchParams = createSearchParams(typeof nextInit === 'function' ? nextInit(searchParams) : nextInit)\n      navigate(\n        {\n          pathname,\n          search: newSearchParams.toString(),\n        },\n        navigateOptions,\n      )\n    },\n    [searchParams, navigate, pathname],\n  )\n\n  return [searchParams, setSearchParams] as const\n}\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  assertRelativePathOrSameOrigin(path)\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\nfunction assertRelativePathOrSameOrigin(path: string) {\n  if (process.env.NODE_ENV === 'test' && !window.location.origin) return\n  const url = new URL(path, window.location.origin)\n  if (url.origin !== window.location.origin) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetch(path, {...init, headers})\n}\n\n/**\n * A Fetch function which will automatically add the GitHub-Is-React header for\n * making JSON requests. It will in turn call verifiedFetchJSON.\n *\n * Using this in React components to fetch data enables us to track these\n * requests in Datadog in the request.dist.referrer metric.\n */\nexport function reactFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    'GitHub-Is-React': 'true',\n  }\n\n  return verifiedFetchJSON(path, {...init, headers})\n}\n","import {supported as webauthnSupported} from '@github/webauthn-json/browser-ponyfill'\n\n// Note: the default feedback value stored in the form is 'unknown', but that\n// should not be used unless the JS fails to run.\ntype WebauthnSupportLevel = 'supported' | 'unsupported'\n\n// Calculates a string value to send to the server.\nexport function webauthnSupportLevel(): WebauthnSupportLevel {\n  return webauthnSupported() ? 'supported' : 'unsupported'\n}\n\n// Calculates a string value to send to the server.\nexport async function iuvpaaSupportLevel(): Promise<WebauthnSupportLevel> {\n  if (await window.PublicKeyCredential?.isUserVerifyingPlatformAuthenticatorAvailable()) {\n    return 'supported'\n  }\n  return 'unsupported'\n}\n","import React from 'react'\n\nconst CurrentRepositoryContext = React.createContext({} as Repository)\n\nexport function CurrentRepositoryProvider({repository, children}: React.PropsWithChildren<{repository: Repository}>) {\n  return <CurrentRepositoryContext.Provider value={repository}> {children} </CurrentRepositoryContext.Provider>\n}\n\nexport function useCurrentRepository() {\n  return React.useContext(CurrentRepositoryContext)\n}\n\nexport interface Repository {\n  id: number\n  name: string\n  ownerLogin: string\n  defaultBranch: string\n  createdAt: string\n\n  /**\n   * Whether the user can push to this repository. It doesn't depend on the current ref.\n   */\n  currentUserCanPush: boolean\n  /**\n   * Indicates whether the repository is a fork.\n   */\n  isFork: boolean\n  /**\n   * Indicates whether the repository has files.\n   */\n  isEmpty: boolean\n  ownerAvatar: string\n  public: boolean\n  private: boolean\n  isOrgOwned: boolean\n}\n\nexport type RepositoryNWO = Pick<Repository, 'ownerLogin' | 'name'>\n\ntry{ CurrentRepositoryContext.displayName ||= 'CurrentRepositoryContext' } catch {}\ntry{ CurrentRepositoryProvider.displayName ||= 'CurrentRepositoryProvider' } catch {}","import {SearchDropdown, type SearchDropdownItem, type SearchDropdownProps} from '@github-ui/search-dropdown'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\nimport {useEffect, useState} from 'react'\n\nexport interface GitIgnoreDropdownProps\n  extends Pick<SearchDropdownProps, 'buttonLabel' | 'buttonSx' | 'allowNoneOption' | 'textInputProps'> {\n  selectedTemplate?: string\n  onSelect: (templateName: string) => void\n  onOpen?: () => void\n}\n\nexport function GitIgnoreDropdown({\n  selectedTemplate,\n  buttonLabel,\n  buttonSx,\n  onSelect,\n  allowNoneOption = false,\n  onOpen,\n}: GitIgnoreDropdownProps) {\n  const [templates, setTemplates] = useState<string[] | null>([])\n\n  useEffect(() => {\n    const getItems = async () => {\n      const response = await verifiedFetchJSON('/site/gitignore/templates')\n      if (!response.ok) {\n        setTemplates(null)\n        return\n      }\n      try {\n        setTemplates(await response.json())\n      } catch {\n        setTemplates(null)\n      }\n    }\n    getItems()\n  }, [])\n\n  const selectableItems: SearchDropdownItem[] = templates?.map(template => ({text: template, id: template})) || []\n\n  return (\n    <SearchDropdown\n      title=\".gitignore template\"\n      inputLabel=\"Template filter\"\n      buttonLabel={buttonLabel}\n      buttonSx={buttonSx}\n      selectedItem={selectableItems.find(item => item.id === selectedTemplate)}\n      onSelect={item => onSelect(item.id)}\n      items={selectableItems}\n      allowNoneOption={allowNoneOption}\n      onOpen={onOpen}\n    />\n  )\n}\n\ntry{ GitIgnoreDropdown.displayName ||= 'GitIgnoreDropdown' } catch {}","import {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {\n  // eslint-disable-next-line no-restricted-imports\n  Avatar,\n  type AvatarProps,\n} from '@primer/react'\nimport {forwardRef, useMemo} from 'react'\n\nexport type GitHubAvatarProps = AvatarProps\n\nexport const GitHubAvatar = forwardRef<HTMLImageElement, GitHubAvatarProps>(function GitHubAvatar(\n  {src, size = 20, ...otherProps}: GitHubAvatarProps,\n  ref,\n) {\n  const avatarUrl = useMemo(() => {\n    // src maybe be relative, e.g. `/mona.png`, in which case the instances main origin should be used,\n    // e.g. \"https://github.com\" for dotcom. If src is a fully quallified URL then the origin argument is ignored.\n    const url = new URL(src, ssrSafeLocation.origin)\n\n    // do not override size if it's already set as query parameter\n    if (!url.searchParams.has('size') && !url.searchParams.has('s')) {\n      // we double size for better rendering on high density pixel screens\n      url.searchParams.set('size', String(Number(size) * 2))\n    }\n\n    return url.toString()\n  }, [src, size])\n\n  return <Avatar ref={ref} src={avatarUrl} size={size} data-testid=\"github-avatar\" {...otherProps} />\n})\n\ntry{ GitHubAvatar.displayName ||= 'GitHubAvatar' } catch {}","import type {ChildRoute, LoaderResult, RouteRegistration, TransitionType} from './app-routing-types'\nimport type React from 'react'\nimport type {Location} from '@remix-run/router'\n\nexport interface JsonRouteProps {\n  path: string\n  Component: React.ComponentType\n  transitionType?: TransitionType\n  shouldNavigateOnError?: boolean\n  children?: ChildRoute[]\n}\n/**\n * A utility for building a route registration for a route that consumes a JSON object (either via embedding in a\n * script tag or via a JSON fetch on React soft navigations).\n */\nexport function jsonRoute<TRouteData, TEmbeddedData>({\n  path,\n  Component,\n  /**\n   * Some routes want to handle their own errors and not just show a generic error page. In this case,\n   * the error is just handled like any other payload for the route.\n   * NOTE: We might consider replacing the shouldNavigateOnError flag with a parallel implementation to jsonRoute.\n   */\n  shouldNavigateOnError,\n  transitionType,\n  children,\n}: JsonRouteProps): RouteRegistration<TRouteData, TEmbeddedData> {\n  async function coreLoader({location}: {location: Location}): Promise<LoaderResult<TRouteData>> {\n    let response: Response\n    try {\n      const fetchPath = `${location.pathname}${location.search}`\n      response = await window.fetch(fetchPath, {\n        headers: {\n          Accept: 'application/json',\n          'X-Requested-With': 'XMLHttpRequest',\n          'X-GitHub-Target': 'dotcom',\n          'X-React-Router': 'json',\n        },\n      })\n    } catch (error) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'fetchError'},\n      }\n    }\n    if (response.redirected) {\n      return {\n        type: 'redirect',\n        url: response.url,\n      }\n    } else if (!response.ok) {\n      return {\n        type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n        error: {type: 'httpError', httpStatus: response.status},\n      }\n    } else {\n      try {\n        const responseJson = await response.json()\n        return {\n          type: 'loaded',\n          data: responseJson,\n          title: responseJson.title,\n        }\n      } catch (error) {\n        return {\n          type: shouldNavigateOnError ? 'route-handled-error' : 'error',\n          error: {type: 'badResponseError'},\n        }\n      }\n    }\n  }\n\n  function loadFromEmbeddedData({embeddedData}: {embeddedData: TEmbeddedData}): {data: TRouteData; title: string} {\n    const data = embeddedData as unknown as TRouteData & {title: string}\n    return {data, title: data.title}\n  }\n\n  return {\n    path,\n    // TODO: consider wrapping Component with a component that passes payload as a prop — ideally as part of migrating\n    // away from useRoutePayload.\n    Component,\n    coreLoader,\n    loadFromEmbeddedData,\n    transitionType,\n    children,\n  }\n}\n","import {Box, type BoxProps, Text, type TextProps} from '@primer/react'\nimport type {ForwardRefComponent as PolymorphicForwardRefComponent} from '@radix-ui/react-polymorphic'\nimport DOMPurify, {type Config as DOMPurifyConfig} from 'dompurify'\nimport type React from 'react'\nimport {forwardRef} from 'react'\n\ntype Brand<TBase, TBrand extends string> = TBase & {__brand: TBrand}\n\n/**\n * A string that has specifically been marked as verified.\n *\n * WARNING: A string should only be branded as a `SafeHTMLString` if one of the following applies:\n * - it comes from a trusted source on the server\n * - has known static content, or\n * - has been sanitized by DOMPurify.\n */\nexport type SafeHTMLString = Brand<string, 'SafeHTMLString'>\n\ninterface BaseHTMLProps {\n  /**\n   * Set the rendered HTML of the component. Use this prop if the source is untrusted. If you know the string can be\n   * trusted, or has already been sanitized, use the `html` prop instead to avoid re-sanitizing.\n   */\n  unverifiedHTML?: string\n  /**\n   * Optional config passed to DOMPurify when sanitizing `unverifiedHTML`.\n   */\n  unverifiedHTMLConfig?: DOMPurifyConfig\n  /**\n   * Set the rendered HTML of the component. To prevent XSS, ensure that the source of this\n   * HTML is trusted! If the source is untrusted, use `unverifiedHTML` instead.\n   */\n  html?: SafeHTMLString\n}\n\ninterface VerifiedHTMLProps extends BaseHTMLProps {\n  unverifiedHTML?: undefined\n  html: SafeHTMLString\n}\n\ninterface UnverifiedHTMLProps extends BaseHTMLProps {\n  unverifiedHTML: string\n  html?: undefined\n}\n\nexport type SafeHTMLProps = VerifiedHTMLProps | UnverifiedHTMLProps\n\ntype PropsWithHTML<T> = T & SafeHTMLProps\n\nfunction getSafeHTMLAndProps<T>(propsWithHtml: PropsWithHTML<T>) {\n  /**\n   * Note we have to explicitly cast props to T because TypeScript\n   * is not properly converting Omit<T & VerifiedHTMLProps, 'html'> to T.\n   *\n   * We include the `as unknown` intermediate step to avoid warnings\n   * about insufficient type overlap\n   */\n\n  if ('html' in propsWithHtml && propsWithHtml.html !== undefined) {\n    const {html, ...props} = propsWithHtml\n    return {\n      // This is verified html, so we can use it directly\n      safeHTML: html,\n      props: props as unknown as T,\n    }\n  }\n\n  const {unverifiedHTML, unverifiedHTMLConfig, ...props} = propsWithHtml\n  const config = {\n    ...unverifiedHTMLConfig,\n    // we want to ensure we are returning a string not a dom node\n    RETURN_DOM: false,\n    RETURN_DOM_FRAGMENT: false,\n  } satisfies DOMPurifyConfig\n\n  return {\n    // Run the unverified HTML through DOMPurify to sanitize it\n    safeHTML: DOMPurify.sanitize(unverifiedHTML, config),\n    props: props as unknown as T,\n  }\n}\n\n/**\n * `SafeHTMLBox` extends `Box` from `@primer/react` with props for safely\n * rendering HTML strings. Exactly one `html` or `unverifiedHTML` must be\n * supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLBox = withSafeHTML<BoxProps>(Box) as PolymorphicForwardRefComponent<\n  'div' | 'span' | 'pre' | 'table' | 'tbody' | 'tr' | 'td' | 'ul' | 'ol' | 'li',\n  PropsWithHTML<BoxProps>\n>\nSafeHTMLBox.displayName = 'SafeHTMLBox'\n\n/**\n * `SafeHTMLText` extends `Text` from `@primer/react` with props for safely\n * rendering HTML strings. Exactly one `html` or `unverifiedHTML` must be\n * supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLText = withSafeHTML<TextProps>(Text) as PolymorphicForwardRefComponent<\n  'div' | 'span' | 'p' | 'strong' | 'em' | 'pre' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'a',\n  PropsWithHTML<TextProps>\n>\nSafeHTMLText.displayName = 'SafeHTMLText'\n\n/**\n * A higher-order component that extends a basic component by offering\n * `html` and `unverifiedHTML` props that are safe alternatives to `dangerouslySetInnerHTML`.\n */\nfunction withSafeHTML<T>(Component: React.ComponentType<T>) {\n  // We give these display names above\n  // eslint-disable-next-line react/display-name\n  const SafeHTMLComponent = forwardRef<HTMLSpanElement, PropsWithHTML<T>>((propsWithHtml, ref) => {\n    const {safeHTML, props} = getSafeHTMLAndProps(propsWithHtml)\n    // This is the only place in the codebase where `dangerouslySetInnerHTML` should be allowed\n    // eslint-disable-next-line react/forbid-component-props\n    return <Component ref={ref} {...props} dangerouslySetInnerHTML={safeHTML ? {__html: safeHTML} : undefined} />\n  })\n\n  return SafeHTMLComponent\n}\n\n/**\n * `SafeHTMLDiv` extends `div`with props for safely rendering HTML strings.\n * Exactly one `html` or `unverifiedHTML` must be supplied.\n *\n * `html` only supports strings that have specifically been marked as verified,\n * which means either they come from a trusted source on the server, they have\n * known static contents, or they have been sanitized by DOMPurify.\n *\n * `unverifiedHTML` supports arbitrary strings; they will be run through\n * DOMPurify before being put in the DOM.\n */\nexport const SafeHTMLDiv = forwardRef<\n  HTMLDivElement,\n  PropsWithHTML<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>>\n>((propsWithHtml, ref) => {\n  const {safeHTML, props} = getSafeHTMLAndProps(propsWithHtml)\n  // eslint-disable-next-line react/no-danger\n  return <div ref={ref} {...props} dangerouslySetInnerHTML={safeHTML ? {__html: safeHTML} : undefined} />\n})\nSafeHTMLDiv.displayName = 'SafeHTMLDiv'\n\ntry{ SafeHTMLComponent.displayName ||= 'SafeHTMLComponent' } catch {}","import {TriangleDownIcon} from '@primer/octicons-react'\nimport {Button, type ButtonProps, SelectPanel, Text} from '@primer/react'\nimport type {ItemInput} from '@primer/react/lib-esm/deprecated/ActionList/List'\nimport {useState} from 'react'\n\nexport interface SearchDropdownItem {\n  id: string\n  text: string\n}\n\nexport interface SearchDropdownProps {\n  title: string\n  buttonLabel?: string\n  buttonSx?: ButtonProps['sx']\n  items: SearchDropdownItem[]\n  selectedItem?: SearchDropdownItem\n  allowNoneOption?: boolean\n  onSelect: (item: SearchDropdownItem) => void\n  onOpen?: () => void\n  textInputProps?: React.ComponentProps<typeof SelectPanel>['textInputProps']\n  anchorButtonProps?: React.ComponentProps<typeof Button>\n  inputLabel: string\n}\n\nexport function SearchDropdown({\n  allowNoneOption = false,\n  buttonLabel,\n  buttonSx,\n  inputLabel,\n  items,\n  onOpen,\n  onSelect,\n  selectedItem,\n  textInputProps,\n  title,\n  anchorButtonProps = {},\n}: SearchDropdownProps) {\n  const [open, setOpen] = useState(false)\n\n  const [searchTerm, setSearchTerm] = useState('')\n  const selectableItems: SearchDropdownItem[] = allowNoneOption ? [{text: 'None', id: ''}, ...items] : items\n  const filteredItems = selectableItems.filter(item => item.text.toLowerCase().includes(searchTerm.toLowerCase()))\n\n  const buttonTitle = buttonLabel || title\n  const selectedItemDisplay = selectedItem?.text || 'None'\n\n  return (\n    <SelectPanel\n      title={title}\n      showItemDividers\n      open={open}\n      inputLabel={inputLabel}\n      onFilterChange={setSearchTerm}\n      placeholderText=\"Filter…\"\n      onOpenChange={isOpen => {\n        setOpen(isOpen)\n        isOpen && onOpen?.()\n      }}\n      onSelectedChange={(item?: ItemInput) => item && onSelect(item as SearchDropdownItem)}\n      items={filteredItems}\n      selected={selectedItem}\n      renderAnchor={({'aria-labelledby': ariaLabelledBy, ...anchorProps}) => (\n        <Button\n          trailingAction={TriangleDownIcon}\n          aria-labelledby={ariaLabelledBy}\n          {...anchorProps}\n          sx={buttonSx}\n          size=\"small\"\n          {...anchorButtonProps}\n          aria-describedby=\"license-picker-label\"\n        >\n          <Text sx={{color: 'fg.muted'}}>{buttonTitle}:</Text> {selectedItemDisplay}\n        </Button>\n      )}\n      overlayProps={{width: 'small', maxHeight: 'large'}}\n      textInputProps={textInputProps}\n    />\n  )\n}\n\ntry{ SearchDropdown.displayName ||= 'SearchDropdown' } catch {}","import {ShieldLockIcon} from '@primer/octicons-react'\nimport {ActionList, ActionMenu, Box, Flash, Link, Octicon, type SxProp} from '@primer/react'\nimport type {Location} from 'react-router-dom'\nimport {useLocation} from 'react-router-dom'\n\nexport function SingleSignOnBanner({\n  protectedOrgs,\n  redirectURI,\n  sx,\n}: {\n  protectedOrgs?: string[]\n  redirectURI?: (location: Location) => string\n} & SxProp) {\n  const location = useLocation()\n\n  if (!protectedOrgs || protectedOrgs.length === 0) {\n    return null\n  }\n\n  // If there are TONS of protected orgs, render them in a combined format\n  let visibleOrgNames = <b>{protectedOrgs.slice(0, 3).join(', ')}</b>\n\n  if (protectedOrgs.length === 2) {\n    visibleOrgNames = (\n      <span>\n        <b>{protectedOrgs[0]}</b> and <b>{protectedOrgs[1]}</b>\n      </span>\n    )\n  }\n\n  if (protectedOrgs.length === 3) {\n    visibleOrgNames = (\n      <span>\n        <b>{protectedOrgs.slice(0, 2).join(', ')}</b>, and <b>{protectedOrgs[2]}</b>\n      </span>\n    )\n  }\n\n  return (\n    <Box sx={sx} data-testid=\"sso-banner\">\n      <Box sx={{fontSize: 1}}>\n        <section aria-label=\"Single sign on information\">\n          <Flash\n            sx={{\n              p: 3,\n              borderRadius: 2,\n              borderWidth: 1,\n              borderStyle: 'solid',\n              borderColor: 'accent.muted',\n              fontSize: 1,\n            }}\n          >\n            {protectedOrgs.length === 1 ? (\n              <div>\n                <Octicon icon={ShieldLockIcon} />\n                <Link\n                  inline\n                  href={`/orgs/${protectedOrgs[0]}/sso?return_to=${encodedRedirectURI({location, redirectURI})}`}\n                >\n                  Single sign-on\n                </Link>\n                &nbsp;to see results in the <b>{protectedOrgs[0]}</b> organization.\n              </div>\n            ) : (\n              <Box sx={{display: 'flex', alignItems: 'baseline', flexWrap: 'wrap', gap: 2}}>\n                <Box sx={{flexGrow: 1}}>\n                  <Octicon icon={ShieldLockIcon} />\n                  Single sign on to see results in the {visibleOrgNames}{' '}\n                  {protectedOrgs.length > 3 ? `and ${protectedOrgs.length - 3} other ` : ''}\n                  {protectedOrgs.length > 1 ? 'organizations' : 'organization'}.\n                </Box>\n                <Box sx={{mt: [2, 2, 0]}}>\n                  <SingleSignOnButton protectedOrgs={protectedOrgs} redirectURI={redirectURI} />\n                </Box>\n              </Box>\n            )}\n          </Flash>\n        </section>\n      </Box>\n    </Box>\n  )\n}\nfunction SingleSignOnButton({\n  protectedOrgs,\n  redirectURI,\n}: {\n  protectedOrgs: string[]\n  redirectURI?: (location: Location) => string\n}) {\n  const location = useLocation()\n  return (\n    <ActionMenu>\n      <ActionMenu.Button size=\"small\">Select an organization</ActionMenu.Button>\n      <ActionMenu.Overlay>\n        <ActionList>\n          {protectedOrgs.map(org => (\n            <ActionList.Item\n              key={`org-${org}`}\n              onSelect={() =>\n                (window.location.href = `/orgs/${org}/sso?return_to=${encodedRedirectURI({location, redirectURI})}`)\n              }\n            >\n              {org}\n            </ActionList.Item>\n          ))}\n        </ActionList>\n      </ActionMenu.Overlay>\n    </ActionMenu>\n  )\n}\n\nfunction encodedRedirectURI({\n  location,\n  redirectURI,\n}: {\n  location: Location\n  redirectURI?: (location: Location) => string\n}) {\n  return encodeURIComponent(redirectURI ? redirectURI(location) : location.pathname + location.search + location.hash)\n}\n\ntry{ SingleSignOnBanner.displayName ||= 'SingleSignOnBanner' } catch {}\ntry{ SingleSignOnButton.displayName ||= 'SingleSignOnButton' } catch {}"],"names":["App","children","repo","useRoutePayload","CurrentRepositoryProvider","repository","displayName","InfoMessage","message","topBorder","Box","sx","fontSize","color","py","borderBottomColor","borderBottomWidth","borderBottomStyle","borderTopColor","borderTopWidth","borderTopStyle","Octicon","icon","InfoIcon","mx","span","DisabledCreationInPersonalNamespaceMessage","CreationSummary","props","owner","name","businessName","isOrganization","targetOrgName","orgText","action","visibility","Description","forwardRef","description","onDescriptionChange","tooLong","setTooLong","ref","useEffect","length","FormControl","Label","Text","TextInput","block","aria-label","value","onChange","e","target","validationStatus","undefined","Validation","variant","useUserAnalytics","sendAnalyticsEvent","useAnalytics","sendRepoFormClickEvent","useCallback","payload","LicensePicker","licenses","selectedLicense","onLicenseSelection","docsUrl","mb","id","htmlFor","Caption","Link","inline","href","my","SearchDropdown","title","inputLabel","selectedItem","items","onOpen","onSelect","license","option","text","textInputProps","anchorButtonProps","allowNoneOption","InitializeRepositoryOptions","addReadme","onAddReadmeChange","licensePickerAvailable","ownerSelection","onLicenseChange","selectedGitignoreTemplate","onGitignoreTemplateChange","currentUserLogin","helpUrl","docsUrls","div","Checkbox","checked","GitIgnoreDropdown","selectedTemplate","gitingore","licensePicker","DefaultBranchMessage","className","GitBranchIcon","defaultNewRepoBranch","defaultBranchSettingsUrl","MarketplaceAppsSelection","listings","selectedListings","currentOwnerName","handleChange","CheckboxGroup","map","listing","toString","autoInstall","includes","LeadingVisual","background","bgcolor","img","src","primaryAvatarUrl","alt","as","fontWeight","normalizedShortDescription","OwnerDropdownItems","ownerItems","selectedOwner","ownerListItems","item","avatarUrl","disabled","customDisabledMessage","ActionList","Item","selected","GitHubAvatar","selectionVariant","defaultValidationMessageId","OwnerDropdown","initialOwnerItems","ownerItemsPath","excludedOrg","onOwnerChange","showLabel","hideSelectOwnerCheck","ariaDescribedBy","setOwnerItems","useState","hasLoadedOwnerSelections","setHasLoadedOwnerSelections","displayOrgLoadErrorMsg","setDisplayOrgLoadErrorMsg","searchTerm","setSearchTerm","loadOwners","open","result","verifiedFetchJSON","data","json","owners","ok","handleErrorLoadingOrgs","error","itemsToDisplay","filter","toLowerCase","required","visuallyHidden","ActionMenu","anchorRef","onOpenChange","headerButton","buttonAvatar","Button","aria-describedby","leadingVisual","Overlay","width","maxHeight","overflow","showDividers","Group","display","placeholder","event","CurrentFormTypeContext","React","CurrentFormTypeProvider","type","Provider","useCurrentFormType","useRepoOwnerItemsPath","useCurrentRepository","forking","repoForkOwnerItemsPath","repoOwnerItemsPath","repoInputAvailableMessageId","repoInputDefaultMessageId","RepoNameInput","repositoryName","selectedOwnerName","onValidityChange","runCheck","useCheckRepoName","setResult","status","fetchCheck","formData","FormData","set","response","verifiedFetch","repositoryCheckNamePath","method","body","errors","err","debouncedFetchCheck","debounce","newName","readOnly","readonly","isError","testIdProps","NameCheckValidation","repoName","ownerName","hideBlankCheck","aria-live","strong","code","endsWith","OwnerRepoSelection","onRepoChange","hideRepoBlankCheck","readonlyRepo","ownerDropdownRef","useRef","repoInputRef","useImperativeHandle","focusOwnerDropdown","current","focus","focusRepoInput","hasPermission","ownerDropdown","useMemo","data-hpc","fieldset","legend","flexDirection","mt","Flash","VisibilitySelection","privateModeEnabled","selectedVisibility","tradeControlsPrivateRepoCreationWarning","tradeControlsUserPrivateRepoCreationWarning","showPublic","showInternal","showPrivate","orgPolicyRestrictedVisibilities","otherWarnings","publicRestrictedByPolicy","internalRestrictedByPolicy","privateRestrictedByPolicy","privateRestrictedByPlan","displayedVisibilities","hasTradeRestrictions","adminableByCurrentUser","push","SafeHTMLBox","html","orgTradeControls","selectableVisibilities","defaultVisibility","SelectionWarningBanner","RadioGroup","PublicSelection","InternalSelection","PrivateSelection","commaConcat","words","slice","join","alignItems","ml","bannerContent","orgPolicyWarning","otherWarningsList","warning","idx","li","Radio","RepoIcon","size","OrganizationIcon","LockIcon","OwnerRepoVisibilitySelection","setRepositoryName","repoNameChanged","setRepoNameChanged","setUserSelectedVisibility","setIsValidRepoName","submitClicked","pb","valid","RepoCreationForm","flash","protectedOrgLogins","submitButton","onSubmit","flashRef","noValidate","px","preventDefault","tabIndex","data-testid","unverifiedHTML","borderBottom","Heading","fontStyle","SingleSignOnBanner","protectedOrgs","justifyContent","RepoNameGenerator","suggestedRepoName","onClick","bg","label","RepoTemplateMenu","selectedTemplateRepo","onRepoTemplateSelect","includeAllBranches","onIncludeAllBranchesChange","templateRepos","setTemplateRepos","errorLoadingTemplateRepos","setErrorLoadingTemplateRepos","onOpenMenu","loadTemplateRepos","templateReposPath","handleErrorLoadingTemplateRepos","some","x","unshift","borderColor","nameWithDisplayOwner","dropdownContent","hasLoadedTemplateRepos","RepoTemplateItems","p","templateListItems","templateRepo","noTemplateItem","RequiredCustomPropertiesSelection","definitions","editableDefinitions","propertyValuesMap","setPropertyValue","revertPropertyValue","orgName","propertiesOverlayEditorEnabled","CustomPropertyValuesTable","showLockMessages","showUndo","useSelectedOwner","initial","setOwnerSelection","fetchingOwnerDetails","setFetchingOwnerDetails","errorMessage","setErrorMessage","repoId","formType","changeOwner","newOwner","path","repoOwnerDetailPath","INITIAL_LICENSE","Create","metadata","AnalyticsProvider","appName","category","CreateForm","repoCreate","initialOwnerSelection","isGitHubEnterprise","hasTemplateRepos","publicReposAvailable","repositoryImportLinkDataAttributes","nameIsRestricted","useFeatureFlag","searchParams","useSearchParams","restrictCreateRepositoriesInPersonalNamespace","get","setDescription","descriptionTooLong","setDescriptionTooLong","setSelectedTemplateRepo","setIncludeAllBranches","setAddReadme","setSelectedGitignoreTemplate","setSelectedLicense","selectedMarketplaceApps","setSelectedMarketplaceApps","useEditCustomProperties","requiredDefinitions","isValidRepoName","setSubmitClicked","isCreating","setIsCreating","readmeParamOverride","setReadmeParamOverride","readmeParam","createError","setCreateError","ownerRepoVisibilitySelectionRef","navigate","useNavigate","userSelectedVisibility","createHandler","invalidPropertyValues","Object","values","manuallyInstalledSelectedMarketplaceApps","installableApps","apps","reduce","acc","app","editableDefinitionNames","changedProperties","propertyFieldsToChangedPropertiesMap","keys","repositoriesPath","redirected","url","redirect","definition","propertyName","ImportPrompt","template","templateOwner","find","ownerDisplayLogin","ReadmeProfileBanner","m","dataAttributes","entries","attribute","repositoryImportsPath","content","em","enterpriseManagedUserEnabled","gap","height","Fork","ForkPage","CannotCreateFork","ForkForm","isForking","setIsForking","repoHasForks","repoDescription","setRepoName","repoNameValid","setRepoNameValid","descriptionValid","setDescriptionValid","forkOneBranch","setForkOneBranch","setFlash","ownerRepoSelectionRef","descriptionRef","createFork","append","forkPath","ownerLogin","headers","Accept","RepoDescription","pt","BranchName","defaultBranch","newValue","existingForks","truncated","forkListUrl","forksListPath","AlertIcon","listStyle","fork","repositoryPath","i","Import","params","vcsUrl","setVcsUrl","isImporting","setIsImporting","sourceUsername","setSourceUsername","sourceToken","setSourceToken","warningValidationId","useId","vcsUrlRef","isGitHubImporterOnActionsEnabled","unsupportedProtocol","startsWith","isValidHttpUrl","pattern","test","vcsUrlText","importHandler","mr","a","WarningValidation","columnGap","lineHeight","minHeight","AlertFillIcon","TransferOwnerInputType","OwnerRadioButtonSelection","onCurrentDropdownSelectionChange","onCurrentFreeformInputChange","currentFreeformInput","selectedRadio","onRadioChange","ownerValidationError","existingOrgsSelected","ExistingOrgs","freeformInputSelected","FreeformInput","existingOrgsDisabled","orgSelectionText","freeformOwnerInputRef","focusFreeformOwnerInput","ownerRadioButtonSelectionValidationId","TeamListItem","team","selectedTeamIds","padding","borderLeftWidth","borderRightWidth","borderStyle","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","flex","membersScopeCount","repositoriesScopeCount","TeamSelection","teams","initialPageCount","onTeamFetch","errorHandler","selectedProperties","setSelectedTeamIds","currentPage","setCurrentPage","query","setQuery","pageCount","setPageCount","noTeamsOptionSelected","setNoTeamsOptionSelected","showFlash","setShowFlash","isTransferring","setIsTransferring","checkboxRef","teamId","transferHandler","commit","teamIds","repoTransferPath","window","location","assign","fetchTeamsFromServer","queryString","page","repoTransferTeamSuggestionsPath","onPageChange","evt","debounceFetchTeamsFromServer","h2","SearchIcon","Pagination","data-sudo-required","Transfer","TransferForm","pricingPath","repoNonTransferrableReason","repositoryTransferRequestsEnabled","brandedPlanName","pluralizedCodespaces","hasPage","codespaces","ownerFreePlan","organizationDiscussion","pendingTransfer","canTransferOwnership","hasRulesetsOrProtectedBranches","isCorrectConfirmation","setIsCorrectConfirmation","setTeams","teamPageCount","setTeamPageCount","setCurrentFreeformInput","setSelectedRadio","isAborting","setIsAborting","ownerRadioButtonSelectionRef","confirmationInputRef","canRename","nameWithOwner","newRepoNameToSubmit","propertiesList","sudo","getSelectedCustomProperties","canEditPropertyValues","displayRequiredCustomProperties","formContent","buttonContent","transferContent","abortHandler","repoAbortTransferPath","section","public","private","FreeAndPrivateWarning","RulesetsAndProtectedBranchesBypassableActorsWarning","b","syncedNewOwner","ul","registerReactAppFactory","routes","jsonRoute","Component","queryLast","selector","list","document","querySelectorAll","requestUri","protocol","host","pagePathname","locationOverride","pathname","pageQuery","stripParams","search","extraParams","meta","names","split","replace","dialog","options","clonedDetails","dialogTemplate","querySelector","cloneNode","details","detailsDialog","spinner","detailsClass","classList","add","dialogClass","setAttribute","labelledBy","remove","prepend","errorSpan","createElement","textContent","addEventListener","hasAttribute","fire","extensionErrors","errorsReported","loadTime","Date","now","EXPECTED_NETWORK_ERROR_MESSAGES","Set","isExpectedError","has","reportError","context","isFeatureEnabled","Error","isIgnoredNonError","ignoredErrorMessages","errorForStackTrace","serializedErrorValue","serializeNonError","JSON","stringify","report","errorContext","stacktrace","catalogService","formatError","unloaded","isSupported","head","stack","frame","extensions","filename","function","fetch","sanitizedUrl","readyState","referrer","getSoftNavReferrer","timeSinceLoad","Math","round","user","pageUser","login","clientId","getOrCreateClientId","bundler","ui","Boolean","parse","file","String","methodName","lineno","lineNumber","colno","column","ssrSafeWindow","BroadcastChannel","sharedWorkerErrorChannel","ResponseError","constructor","policyName","serverXSafeHTMLPolicy","ghTrustedTypes","createPolicy","createHTML","s","trustedTypesPolicy","apply","policy","verifyResponseHtmlSafeNonce","nonces","allowJson","contentType","responseNonce","getDocumentHtmlSafeNonces","fallback","silenceErrorReporting","fetchSafeDocumentFragment","request","Request","self","statusText","trustedHTML","parseHTML","fetchPoll","timeBetweenRequests","acceptedStatusCodes","pollStatusCodes","poll","wait","Promise","resolve","setTimeout","fetchRetry","fetchOptions","max","attempt","retry","reject","currentUrl","targetUrl","URL","origin","hasHash","temporaryPermissiveParseHTMLPolicy","sanitize","fallbackOnError","innerHTML","importNode","useFeatureFlags","useAppPayload","enabled_features","featureName","useAsyncValidation","baseValidationUrl","validityResult","setValidityResult","isValid","showError","validate","header","requestServerResult","resultValidity","reset","forceValid","VALIDATION_RESULT","requestServerValidation","sudoPromptExist","loadPromptTemplate","link","HTMLTemplateElement","fragment","urlWithParams","oldURL","newURL","URLSearchParams","webauthnSupportLevel","appendChild","succeeded","sudoPrompt","currentTarget","prompt","closest","removeAttribute","once","sudoModalErrorOrClose","form","wants","unauthorizedError","tooManyError","errorSelector","inputElementSelector","hidden","triggerSudoPrompt","accept","sudoResponse","fetchSessionInSudo","remoteForm","TrustedTypesPolicyError","sendStats","incrementKey","trustedTypesPolicyName","policyOutput","startTime","performance","sanitized","dompurify","FORBID_ATTR","endTime","output","sendEvent","outputLength","sanitizedLength","executionTime","globalThis","unimplemented","functionName","fallbacks","createScript","createScriptURL","registeredPolicies","__TRUSTED_TYPE_POLICIES__","Map","trustedTypes","rules","freeze","hasWarnedHubberAboutTrustedTypes","ssrSafeDocument","violatedDirective","console","warn","contextData","useContext","AnalyticsContext","eventType","react","useClickAnalytics","sendClickAnalyticsEvent","history","AppContext","reactRouterNavigate","useReactRouterNavigate","to","navigateOptions","resolvePath","matchRoutes","isHashNavigation","startSoftNav","preventAutofocus","startTransition","state","PREVENT_AUTOFOCUS_KEY","turbo","replaceState","skipTurbo","createHref","softNavigate","turboSoftNavigate","useReactRouterSearchParams","useLocation","setSearchParams","nextInit","newSearchParams","createSearchParams","init","assertRelativePathOrSameOrigin","reactFetch","reactFetchJSON","webauthnSupported","iuvpaaSupportLevel","PublicKeyCredential","isUserVerifyingPlatformAuthenticatorAvailable","CurrentRepositoryContext","buttonLabel","buttonSx","templates","setTemplates","getItems","selectableItems","otherProps","ssrSafeLocation","Number","Avatar","shouldNavigateOnError","transitionType","coreLoader","fetchPath","httpStatus","responseJson","loadFromEmbeddedData","embeddedData","SafeHTMLComponent","getSafeHTMLAndProps","propsWithHtml","safeHTML","unverifiedHTMLConfig","config","RETURN_DOM","RETURN_DOM_FRAGMENT","DOMPurify","withSafeHTML","SafeHTMLText","dangerouslySetInnerHTML","__html","SafeHTMLDiv","setOpen","filteredItems","buttonTitle","selectedItemDisplay","SelectPanel","showItemDividers","onFilterChange","placeholderText","isOpen","onSelectedChange","renderAnchor","ariaLabelledBy","anchorProps","trailingAction","TriangleDownIcon","aria-labelledby","overlayProps","redirectURI","visibleOrgNames","borderRadius","borderWidth","ShieldLockIcon","encodedRedirectURI","flexWrap","flexGrow","SingleSignOnButton","org","encodeURIComponent","hash"],"sourceRoot":""}