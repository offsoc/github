<%# rubocop:disable Lint/InstanceVariable %>
<%=
  rendered_instructions = false
  case
  when package_version.package_type_label&.match(/\Ahomebrew_bottle/)
    @oci_image_title = nil
    if !package_version.oci_image_title.present? && !package.latest_version.nil? && package.latest_version.oci_image_title.present? # for backfilled homebrew packages
      @oci_image_title = package.latest_version.oci_image_title
    end
    if package_version.oci_image_title.present?
      @oci_image_title = package_version.oci_image_title
    end
    if !(@oci_image_title.nil?)
      rendered_instructions = true
      render 'registry_two/packages/homebrew_instructions',
        version: package_version,
        show_learn_more_url: show_learn_more_url,
        oci_image_title: @oci_image_title
    end

  when package_version.package_type_label&.match(/\Acodeql/)
    if package_version.oci_image_title.present?
      rendered_instructions = true
      render 'registry_two/packages/codeql_instructions',
        version: package_version,
        show_learn_more_url: show_learn_more_url
    end

  when package_version.package_type_label&.match(/\Adevcontainer_feature/)
    rendered_instructions = true
    render 'registry_two/packages/devcontainer_feature_instructions',
      package: package,
      version: package_version,
      version_tag: version_tag,
      show_learn_more_url: show_learn_more_url

  when package_version.package_type_label&.match(/\Adevcontainer_template/)
    rendered_instructions = true
    render 'registry_two/packages/devcontainer_template_instructions',
      package: package,
      version: package_version,
      version_tag: version_tag,
      show_learn_more_url: show_learn_more_url

  when package_version.package_type_label&.match(/\Adevcontainer_collection/)
    rendered_instructions = true
    render 'registry_two/packages/devcontainer_collection_metadata_instructions',
      package: package,
      version: package_version,
      version_tag: version_tag,
      show_learn_more_url: show_learn_more_url

  when package_version.aop?
    rendered_instructions = true
    render 'registry_two/packages/action_on_package_instructions',
      package: package,
      version: package_version,
      version_tag: version_tag,
      show_learn_more_url: show_learn_more_url

  end
%>

<% if !rendered_instructions %>
  <%= render 'registry_two/packages/docker_instructions',
    package: package,
    version: package_version,
    version_tag: version_tag,
    show_learn_more_url: show_learn_more_url,
    owner: owner
  %>

  <% if show_docker_base_image_usage %>
    <h5 class="text-normal color-fg-muted f6 mb-1 mt-3 pb-1"><%= primer_octicon(:code, mr: 1, vertical_align: :text_top) %>Use as base image in Dockerfile:</h5>
    <div class="Box color-bg-subtle border-0 text-left mx-auto p-2">
        <code class="d-block color-bg-subtle border-0 rounded-2 f6 lh-default">
            <%= render Primer::Beta::ClipboardCopy.new(display: :block, position: :relative, px: 2, py: 1, border_radius: 2, classes: "CopyBlock tooltipped-no-delay", "aria-label": "Copy", "data-copy-feedback": "Copied!", "data-tooltip-direction": "e", role: "button", tabindex: "0", value: "FROM #{ GitHub.urls.registry_host_name(:containers) }/#{ package.namespace.downcase }/#{ package.name.downcase }#{ version_tag }") do %><%# erblint:disable Primer::Accessibility::TooltippedMigration %>
            FROM <%= GitHub.urls.registry_host_name(:containers) %>/<span class="color-fg-done"><%= package.namespace.downcase %></span>/<span class="color-fg-done"><%= package.name.downcase %></span><span class="color-fg-done"><%= version_tag %></span>
            <%= primer_octicon(:copy, color: :accent, right: 0, mr: 1, position: :absolute, style: "top: 5px;") %>
            <%= primer_octicon(:check, color: :success, position: :absolute, display: :none, style: "top: 6px; right: 5px;") %>
            <% end %>
        </code>
    </div>
  <% end %>
<% end %>
