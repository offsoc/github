# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Proto::SecretScanning::Api::V1::DryRunScanResult`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Proto::SecretScanning::Api::V1::DryRunScanResult`.

class GitHub::Proto::SecretScanning::Api::V1::DryRunScanResult
  sig do
    params(
      created_at: T.nilable(Google::Protobuf::Timestamp),
      custom_pattern_id: T.nilable(Integer),
      id: T.nilable(Integer),
      locations: T.nilable(T.any(Google::Protobuf::RepeatedField[GitHub::Proto::SecretScanning::Api::V1::DryRunScanResultLocation], T::Array[GitHub::Proto::SecretScanning::Api::V1::DryRunScanResultLocation])),
      repository_id: T.nilable(Integer),
      scan_id: T.nilable(Integer),
      token_signature: T.nilable(String),
      updated_at: T.nilable(Google::Protobuf::Timestamp)
    ).void
  end
  def initialize(created_at: nil, custom_pattern_id: nil, id: nil, locations: T.unsafe(nil), repository_id: nil, scan_id: nil, token_signature: nil, updated_at: nil); end

  sig { void }
  def clear_created_at; end

  sig { void }
  def clear_custom_pattern_id; end

  sig { void }
  def clear_id; end

  sig { void }
  def clear_locations; end

  sig { void }
  def clear_repository_id; end

  sig { void }
  def clear_scan_id; end

  sig { void }
  def clear_token_signature; end

  sig { void }
  def clear_updated_at; end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def created_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def created_at=(value); end

  sig { returns(Integer) }
  def custom_pattern_id; end

  sig { params(value: Integer).void }
  def custom_pattern_id=(value); end

  sig { returns(Integer) }
  def id; end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { returns(Google::Protobuf::RepeatedField[GitHub::Proto::SecretScanning::Api::V1::DryRunScanResultLocation]) }
  def locations; end

  sig do
    params(
      value: Google::Protobuf::RepeatedField[GitHub::Proto::SecretScanning::Api::V1::DryRunScanResultLocation]
    ).void
  end
  def locations=(value); end

  sig { returns(Integer) }
  def repository_id; end

  sig { params(value: Integer).void }
  def repository_id=(value); end

  sig { returns(Integer) }
  def scan_id; end

  sig { params(value: Integer).void }
  def scan_id=(value); end

  sig { returns(String) }
  def token_signature; end

  sig { params(value: String).void }
  def token_signature=(value); end

  sig { returns(T.nilable(Google::Protobuf::Timestamp)) }
  def updated_at; end

  sig { params(value: T.nilable(Google::Protobuf::Timestamp)).void }
  def updated_at=(value); end
end
