# typed: false

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `blackbird-analysis` gem.
# Please instead update this file by running `bin/tapioca gem blackbird-analysis`.

# source://blackbird-analysis//lib/analysis/v2/analysis_api_pb.rb#48
module Blackbird; end

# source://blackbird-analysis//lib/analysis/v2/analysis_api_pb.rb#49
module Blackbird::Analysis; end

# source://blackbird-analysis//lib/analysis/v2/analysis_api_pb.rb#50
module Blackbird::Analysis::V2; end

# source://blackbird-analysis//lib/analysis/v2/analysis_api_twirp.rb#14
class Blackbird::Analysis::V2::AnalysisAPIClient < ::Twirp::Client
  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def get_symbols(input, req_opts = T.unsafe(nil)); end
end

# source://blackbird-analysis//lib/analysis/v2/analysis_api_twirp.rb#8
class Blackbird::Analysis::V2::AnalysisAPIService < ::Twirp::Service; end

module Blackbird::Analysis::V2::ExtractionFilter
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://blackbird-analysis//lib/analysis/v2/analysis_api_pb.rb#56
Blackbird::Analysis::V2::ExtractionFilter::EXTRACTION_FILTER_DEFINITIONS = T.let(T.unsafe(nil), Integer)

# source://blackbird-analysis//lib/analysis/v2/analysis_api_pb.rb#56
Blackbird::Analysis::V2::ExtractionFilter::EXTRACTION_FILTER_NONE = T.let(T.unsafe(nil), Integer)

class Blackbird::Analysis::V2::GetSymbolsRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Blackbird::Analysis::V2::GetSymbolsResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Blackbird::Analysis::V2::Symbol
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Blackbird::Analysis::V2::UTF16Position
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class Blackbird::Analysis::V2::UTF16Range
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module Google::Protobuf::MessageExts::ClassMethods; end

module Hydro::Schemas::Blackbird::V0::Entities::SymbolKind
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end
