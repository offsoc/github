# typed: false

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `monolith-twirp-advisorydb-advisories` gem.
# Please instead update this file by running `bin/tapioca gem monolith-twirp-advisorydb-advisories`.

module Google::Protobuf::MessageExts::ClassMethods; end

# source://monolith-twirp-advisorydb-advisories//lib/monolith-twirp-advisorydb-advisories.rb#7
module Monolith; end

# source://monolith-twirp-advisorydb-advisories//lib/monolith-twirp-advisorydb-advisories.rb#8
module Monolith::Twirp; end

# source://monolith-twirp-advisorydb-advisories//lib/monolith-twirp-advisorydb-advisories.rb#9
module Monolith::Twirp::Advisorydb; end

# source://monolith-twirp-advisorydb-advisories//lib/monolith-twirp-advisorydb-advisories.rb#10
module Monolith::Twirp::Advisorydb::Advisories; end

# source://monolith-twirp-advisorydb-advisories//lib/monolith-twirp-advisorydb-advisories.rb#11
class Monolith::Twirp::Advisorydb::Advisories::Error < ::StandardError; end

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/version.rb#3
module MonolithTwirp; end

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#46
module MonolithTwirp::AdvisoryDB; end

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#47
module MonolithTwirp::AdvisoryDB::Advisories; end

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#48
module MonolithTwirp::AdvisoryDB::Advisories::V1; end

class MonolithTwirp::AdvisoryDB::Advisories::V1::Advisory
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module MonolithTwirp::AdvisoryDB::Advisories::V1::Advisory::Classification
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/advisory_pb.rb#63
MonolithTwirp::AdvisoryDB::Advisories::V1::Advisory::Classification::CLASSIFICATION_GENERAL = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/advisory_pb.rb#63
MonolithTwirp::AdvisoryDB::Advisories::V1::Advisory::Classification::CLASSIFICATION_INVALID = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/advisory_pb.rb#63
MonolithTwirp::AdvisoryDB::Advisories::V1::Advisory::Classification::CLASSIFICATION_MALWARE = T.let(T.unsafe(nil), Integer)

class MonolithTwirp::AdvisoryDB::Advisories::V1::Advisory::Origin
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::AdvisoryDB::Advisories::V1::Advisory::Origin::InnersourceOrigin
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module MonolithTwirp::AdvisoryDB::Advisories::V1::Advisory::Origin::Source
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/advisory_pb.rb#61
MonolithTwirp::AdvisoryDB::Advisories::V1::Advisory::Origin::Source::SOURCE_INNERSOURCE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/advisory_pb.rb#61
MonolithTwirp::AdvisoryDB::Advisories::V1::Advisory::Origin::Source::SOURCE_INVALID = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/advisory_pb.rb#61
MonolithTwirp::AdvisoryDB::Advisories::V1::Advisory::Origin::Source::SOURCE_OPEN_SOURCE = T.let(T.unsafe(nil), Integer)

module MonolithTwirp::AdvisoryDB::Advisories::V1::Advisory::Severity
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/advisory_pb.rb#62
MonolithTwirp::AdvisoryDB::Advisories::V1::Advisory::Severity::SEVERITY_CRITICAL = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/advisory_pb.rb#62
MonolithTwirp::AdvisoryDB::Advisories::V1::Advisory::Severity::SEVERITY_HIGH = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/advisory_pb.rb#62
MonolithTwirp::AdvisoryDB::Advisories::V1::Advisory::Severity::SEVERITY_INVALID = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/advisory_pb.rb#62
MonolithTwirp::AdvisoryDB::Advisories::V1::Advisory::Severity::SEVERITY_LOW = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/advisory_pb.rb#62
MonolithTwirp::AdvisoryDB::Advisories::V1::Advisory::Severity::SEVERITY_MEDIUM = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/advisory_pb.rb#62
MonolithTwirp::AdvisoryDB::Advisories::V1::Advisory::Severity::SEVERITY_UNKNOWN = T.let(T.unsafe(nil), Integer)

module MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_ACTIONS = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_ALPM = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_APK = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_BITBUCKET = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_COCOAPODS = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_COMPOSER = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_CONAN = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_CONDA = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_CRAN = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_DEB = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_DOCKER = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_ERLANG = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_GENERIC = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_GITHUB = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_GO = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_HACKAGE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_HUGGINGFACE = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_INVALID = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_MAVEN = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_MLFLOW = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_NPM = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_NUGET = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_OCI = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_OTHER = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_PIP = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_PUB = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_QPKG = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_RPM = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_RUBYGEMS = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_RUST = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_SWID = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/ecosystem_pb.rb#49
MonolithTwirp::AdvisoryDB::Advisories::V1::Ecosystem::ECOSYSTEM_SWIFT = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/list_advisories_api_twirp.rb#15
class MonolithTwirp::AdvisoryDB::Advisories::V1::ListAdvisoriesAPIClient < ::Twirp::Client
  # source://twirp/1.10.0/lib/twirp/client.rb#42
  def list_advisories(input, req_opts = T.unsafe(nil)); end
end

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/list_advisories_api_twirp.rb#9
class MonolithTwirp::AdvisoryDB::Advisories::V1::ListAdvisoriesAPIService < ::Twirp::Service; end

class MonolithTwirp::AdvisoryDB::Advisories::V1::ListAdvisoriesRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::AdvisoryDB::Advisories::V1::ListAdvisoriesRequest::RequestOptions
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

module MonolithTwirp::AdvisoryDB::Advisories::V1::ListAdvisoriesRequest::RequestOptions::Direction
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/list_advisories_api_pb.rb#45
MonolithTwirp::AdvisoryDB::Advisories::V1::ListAdvisoriesRequest::RequestOptions::Direction::DIRECTION_ASC = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/list_advisories_api_pb.rb#45
MonolithTwirp::AdvisoryDB::Advisories::V1::ListAdvisoriesRequest::RequestOptions::Direction::DIRECTION_DESC = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/list_advisories_api_pb.rb#45
MonolithTwirp::AdvisoryDB::Advisories::V1::ListAdvisoriesRequest::RequestOptions::Direction::DIRECTION_INVALID = T.let(T.unsafe(nil), Integer)

module MonolithTwirp::AdvisoryDB::Advisories::V1::ListAdvisoriesRequest::RequestOptions::SortBy
  class << self
    def descriptor; end
    def lookup(_arg0); end
    def resolve(_arg0); end
  end
end

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/list_advisories_api_pb.rb#46
MonolithTwirp::AdvisoryDB::Advisories::V1::ListAdvisoriesRequest::RequestOptions::SortBy::SORT_BY_INVALID = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/list_advisories_api_pb.rb#46
MonolithTwirp::AdvisoryDB::Advisories::V1::ListAdvisoriesRequest::RequestOptions::SortBy::SORT_BY_PUBLISHED = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/list_advisories_api_pb.rb#46
MonolithTwirp::AdvisoryDB::Advisories::V1::ListAdvisoriesRequest::RequestOptions::SortBy::SORT_BY_REVIEWED = T.let(T.unsafe(nil), Integer)

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/v1/list_advisories_api_pb.rb#46
MonolithTwirp::AdvisoryDB::Advisories::V1::ListAdvisoriesRequest::RequestOptions::SortBy::SORT_BY_UPDATED = T.let(T.unsafe(nil), Integer)

class MonolithTwirp::AdvisoryDB::Advisories::V1::ListAdvisoriesResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::AdvisoryDB::Advisories::V1::Package
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

class MonolithTwirp::AdvisoryDB::Advisories::V1::VulnerableVersionRange
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  def initialize(*_arg0); end

  def ==(_arg0); end
  def [](_arg0); end
  def []=(_arg0, _arg1); end
  def clone; end
  def dup; end
  def eql?(_arg0); end
  def hash; end
  def inspect; end
  def method_missing(*_arg0); end
  def to_h; end
  def to_s; end

  private

  def respond_to_missing?(*_arg0); end

  class << self
    def decode(_arg0); end
    def decode_json(*_arg0); end
    def descriptor; end
    def encode(_arg0); end
    def encode_json(*_arg0); end
  end
end

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/version.rb#4
module MonolithTwirp::Advisorydb; end

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/version.rb#5
module MonolithTwirp::Advisorydb::Advisories; end

# source://monolith-twirp-advisorydb-advisories//lib/monolith_twirp/advisorydb/advisories/version.rb#6
MonolithTwirp::Advisorydb::Advisories::VERSION = T.let(T.unsafe(nil), String)
