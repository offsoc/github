# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GitHub::Kredz::Services::Varz::ListRequest`.
# Please instead update this file by running `bin/tapioca dsl GitHub::Kredz::Services::Varz::ListRequest`.

class GitHub::Kredz::Services::Varz::ListRequest
  sig do
    params(
      include_truncated_value: T.nilable(T::Boolean),
      include_value: T.nilable(T::Boolean),
      integration_global_id: T.nilable(String),
      owner: T.nilable(GitHub::Kredz::Services::Varz::VariableOwner),
      page: T.nilable(Integer),
      per_page: T.nilable(Integer)
    ).void
  end
  def initialize(include_truncated_value: nil, include_value: nil, integration_global_id: nil, owner: nil, page: nil, per_page: nil); end

  sig { void }
  def clear_include_truncated_value; end

  sig { void }
  def clear_include_value; end

  sig { void }
  def clear_integration_global_id; end

  sig { void }
  def clear_owner; end

  sig { void }
  def clear_page; end

  sig { void }
  def clear_per_page; end

  sig { returns(T::Boolean) }
  def include_truncated_value; end

  sig { params(value: T::Boolean).void }
  def include_truncated_value=(value); end

  sig { returns(T::Boolean) }
  def include_value; end

  sig { params(value: T::Boolean).void }
  def include_value=(value); end

  sig { returns(String) }
  def integration_global_id; end

  sig { params(value: String).void }
  def integration_global_id=(value); end

  sig { returns(T.nilable(GitHub::Kredz::Services::Varz::VariableOwner)) }
  def owner; end

  sig { params(value: T.nilable(GitHub::Kredz::Services::Varz::VariableOwner)).void }
  def owner=(value); end

  sig { returns(Integer) }
  def page; end

  sig { params(value: Integer).void }
  def page=(value); end

  sig { returns(Integer) }
  def per_page; end

  sig { params(value: Integer).void }
  def per_page=(value); end
end
