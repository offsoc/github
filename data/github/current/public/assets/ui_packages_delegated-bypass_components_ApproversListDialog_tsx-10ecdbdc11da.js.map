{"version":3,"file":"chunk-ui_packages_delegated-bypass_components_ApproversListDialog_tsx-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/delegated-bypass/components/BypassActor.tsx","ui/packages/delegated-bypass/components/ApproversListDialog.tsx","ui/packages/delegated-bypass/helpers/humanize-role-name.ts"],"sourcesContent":["import {GitHubAvatar} from '@github-ui/github-avatar'\nimport {Octicon} from '@primer/react'\nimport {EyeIcon, PencilIcon, PersonIcon, ToolsIcon, type Icon} from '@primer/octicons-react'\nimport type {BypassActor} from '../delegated-bypass-types'\n\nconst roleIconMap: {[key: string]: Icon} = {\n  Write: PencilIcon,\n  Maintain: ToolsIcon,\n  'Repository admin': EyeIcon,\n  'Organization admin': EyeIcon,\n}\n\ntype BypassActorProps = {\n  baseUrl: string\n  id: string | number\n  name: string\n  type: BypassActor['actorType']\n  size?: number\n}\n\nexport const BypassAvatar = ({baseUrl, id, type, name, size = 16}: BypassActorProps) => {\n  if (type === 'Team') {\n    return <GitHubAvatar alt={name} src={`${baseUrl}/t/${id}`} size={size} />\n  }\n  if (type === 'RepositoryRole' || type === 'OrganizationAdmin') {\n    return <Octicon icon={roleIconMap[name] || PersonIcon} sx={{color: 'fg.muted'}} size={size} />\n  }\n  return null\n}\n\ntry{ BypassAvatar.displayName ||= 'BypassAvatar' } catch {}","import {useState, useEffect} from 'react'\nimport {Box, Portal, Text} from '@primer/react'\nimport {Dialog} from '@primer/react/experimental'\nimport {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport {BypassAvatar} from './BypassActor'\nimport {getApprovers} from '../services/api'\nimport type {AppPayload, BypassActor as BypassActorType} from '../delegated-bypass-types'\nimport {humanizeRoleName} from '../helpers/humanize-role-name'\nimport {useAppPayload} from '@github-ui/react-core/use-app-payload'\n\nconst subtitle = 'Roles and teams who can approve requests for bypass privileges'\n\ntype ApproversListDialogProps = {\n  onClose: () => void\n  rulesetId?: number\n}\n\nexport default function ApproversListDialog({onClose, rulesetId}: ApproversListDialogProps) {\n  const [approvers, setApprovers] = useState<BypassActorType[]>([])\n  const {base_avatar_url: baseAvatarUrl} = useAppPayload<AppPayload>()\n\n  useEffect(() => {\n    const fetch = async () => {\n      const {approvers: data, statusCode} = await getApprovers(`${ssrSafeLocation.pathname}/approvers`, {rulesetId})\n      if (statusCode === 200) {\n        setApprovers(data)\n      }\n    }\n    fetch()\n  }, [rulesetId])\n\n  return (\n    <Portal>\n      <Dialog title=\"Approvers\" subtitle={subtitle} onClose={onClose}>\n        <Box\n          as=\"ul\"\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            listStyle: 'none',\n            mx: 1,\n            my: 2,\n            '> li span': {borderBottom: '1px solid', borderColor: 'border.default'},\n            '> li:last-child span': {borderBottom: 0},\n          }}\n        >\n          {approvers.map(({actorType, actorId, name}) => (\n            <Box\n              as=\"li\"\n              key={`${actorType}-${actorId}`}\n              sx={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n                gap: 2,\n                py: 1,\n              }}\n            >\n              <BypassAvatar type={actorType} id={actorId} name={name} baseUrl={baseAvatarUrl} size={20} />\n              <Text sx={{width: '100%', py: 1}}>{humanizeRoleName({actorType, name})}</Text>\n            </Box>\n          ))}\n        </Box>\n      </Dialog>\n    </Portal>\n  )\n}\n\ntry{ ApproversListDialog.displayName ||= 'ApproversListDialog' } catch {}","export function humanizeRoleName(currentActor: {actorType: string; name: string}) {\n  if (currentActor.actorType === 'RepositoryRole') {\n    switch (currentActor.name) {\n      case 'admin':\n        return 'Repository admin'\n      case 'maintain':\n        return 'Maintain'\n      case 'write':\n        return 'Write'\n      default:\n        return currentActor.name\n    }\n  }\n  return currentActor.name\n}\n"],"names":["roleIconMap","Write","PencilIcon","Maintain","ToolsIcon","EyeIcon","BypassAvatar","baseUrl","id","type","name","size","GitHubAvatar","alt","src","Octicon","icon","PersonIcon","sx","color","displayName","ApproversListDialog","onClose","rulesetId","approvers","setApprovers","useState","base_avatar_url","baseAvatarUrl","useAppPayload","useEffect","fetch","data","statusCode","getApprovers","ssrSafeLocation","pathname","Portal","Dialog","title","subtitle","Box","as","display","flexDirection","listStyle","mx","my","borderBottom","borderColor","map","actorType","actorId","alignItems","gap","py","Text","width","humanizeRoleName","currentActor"],"sourceRoot":""}