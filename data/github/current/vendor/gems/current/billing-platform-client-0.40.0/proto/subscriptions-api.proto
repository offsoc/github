syntax = "proto3";

package billing_platform.api.v1;

option go_package = "lib/twirp/proto";
option ruby_package = "BillingPlatform::Api::V1";

import "proto/base.proto";

enum SubscriptionStatus {
    Active = 0;
    Inactive = 1;
}

service SubscriptionsApi {
    rpc GetSubscribedItem(GetSubscribedItemRequest) returns (GetSubscribedItemResponse);
    rpc GetSubscribedItems(GetSubscribedItemsRequest) returns (GetSubscribedItemsResponse);
    rpc GetActiveSubscribedItems(GetSubscribedItemsRequest) returns (GetSubscribedItemsResponse);
    rpc GetSubscribedItemsTotal(GetSubscribedItemsRequest) returns (GetSubscribedItemsTotalResponse);
    rpc GetSubscribedItemsMonthlyTotal(GetSubscribedItemsMonthlyTotalRequest) returns (GetSubscribedItemsTotalResponse);
    rpc AddLicense(LicenseRequest) returns (LicenseResponse);
    rpc RemoveLicense(LicenseRequest) returns (LicenseResponse);
}

message LicenseRequest {
    string sku = 1;
    int64 subscriptionAt = 2;
    base.EntityDetail entityDetail = 3;
}

message LicenseResponse {
    bool isValidForBilling = 1;
}

message GetSubscribedItemRequest {
    string usageEntityId = 1;
    int64 subscriptionId = 2;
    string sku = 3;
}

message GetSubscribedItemsRequest {
    string usageEntityId = 1;
    string sku = 2;
}

message GetSubscribedItemsMonthlyTotalRequest {
    string usageEntityId = 1;
    string sku = 2;
    int64 year = 3;
    int64 month = 4;
}

message GetSubscribedItemResponse {
    SubscribedItem subscribedItem = 1;
}

message GetSubscribedItemsResponse {
    repeated SubscribedItem subscribedItems = 1;
}

message GetSubscribedItemsTotalResponse {
    double quantity = 1;
    double billedAmount = 2;
}

message SubscribedItem {
    int64 subscriptionId = 1;
    SubscriptionStatus status = 2;
    int64 subscribedAt = 3;
    int64 lastBilledForAt = 4;
}
