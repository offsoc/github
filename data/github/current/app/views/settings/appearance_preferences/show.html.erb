<%# erblint:counter DeprecatedComponentsCounter 2 %>
<% page_info title: "Appearance" %>

<%
  themes = UserTheme::THEMES.sort_by(&:sort).select do |theme|
    !theme.feature_flag ||
      user_or_global_preview_enabled?(theme.feature_flag)
  end
%>

<%= render layout: "settings/settings" do %>
  <section role="region" aria-labelledby="color-mode-heading" aria-describedby="color-mode-description">
    <appearance-form>
      <%= render Primer::Beta::Subhead.new do |component| %>
        <% component.with_heading(tag: :div) do %>
          <h2 id="color-mode-heading" class="d-inline-block h2 text-normal">
            Theme preferences
          </h2>
        <% end %>
      <% end %>
      <p id="color-mode-description" class="mb-3">
        Choose how GitHub looks to you. Select a single theme, or sync with your system and
        automatically switch between day and night themes. Selections are applied immediately and saved automatically.
      </p>
      <h3 class="h5" id="theme-mode-heading">
        Theme mode
      </h3>
      <div class="d-flex flex-items-center mt-2 mb-4">
        <select
          id="color_mode_type_select"
          class="form-select mr-2"
          aria-labelledby="theme-mode-heading"
          aria-describedby="theme-mode-description"
          data-action="change:appearance-form#modeSelectChange"
        >
          <option
            <% if !current_user.color_mode.auto? %>
              selected
            <% end %>
            value="single"
          >Single theme</option>
          <option
            <% if current_user.color_mode.auto? %>
              selected
            <% end %>
            value="auto"
          >Sync with system</option>
        </select>
        <div id="theme-mode-description">
          <span
            class="flex-auto color-fg-muted f6"
            data-targets="appearance-form.modePanels"
            data-mode-panel="single"
            <% if current_user.color_mode.auto? %>
              hidden
            <% end %>
          >GitHub will use your selected theme</span>
          <span
            class="flex-auto color-fg-muted f6"
            data-targets="appearance-form.modePanels"
            data-mode-panel="auto"
            <% if !current_user.color_mode.auto? %>
              hidden
            <% end %>
          >GitHub theme will match your system active settings</span>
        </div>
      </div>
      <div
        data-targets="appearance-form.modePanels"
        data-mode-panel="single"
        <% if current_user.color_mode.auto? %>
          hidden
        <% end %>
      >
        <%= form_tag(
          settings_appearance_preferences_color_mode_path,
          method: :put,
          "aria-labelledby": "color-mode-heading",
          "data-action": "submit:appearance-form#saveTheme",
        ) do %>
          <div
            class="d-flex gutter-condensed flex-wrap"
            role="radiogroup"
            aria-label="Single theme picker"
          >
            <% themes.each do |theme| %>
              <div class="position-relative mb-3 flex-shrink-0 col-6 col-md-4">
                <input
                  class="position-absolute"
                  id="option-<%= theme.name %>"
                  type="radio"
                  name="user_theme"
                  data-type="<%= theme.color_mode.name %>"
                  data-mode="<%= theme.color_mode.name %>"
                  value="<%= theme.name %>"
                  <% if current_user.active_theme == theme %>checked<% end %>

                  <%# `margin-top` is calculated based on the image dimensions (`228x120`) -> `120/228*100 = 52.6315789474%` %>
                  <%# this ensures that the input stays aligned when resizing the images %>
                  style="position:absolute;z-index:5;margin-top: calc(52.6315789474% + 4px);left:19px;"
                  data-action="click:appearance-form#themeClicked"
                  data-throttled-autosubmit
                >
                <label
                  class="radio-label pl-0 pr-0 pt-0 pb-2 overflow-hidden color-theme-toggle-label width-full height-full"
                  for="option-<%= theme.name %>"
                >
                  <%= image_tag(
                    "modules/settings/color_modes/#{theme.name}_preview.svg",
                    alt: "",
                    class: "d-block border-bottom mb-2 width-full",
                  ) %>
                  <div class="ml-5 pr-1">
                    <%= label_for_theme(theme) %>
                  </div>
                </label>
              </div>
            <% end %>
          </div>
          <noscript>
            <%= render Primer::ButtonComponent.new(
              type: :submit,
              mt: 3,
              display: :block,
            ) do %>
              Update preference
            <% end %>
          </noscript>
        <% end %>
      </div>
      <div
        data-targets="appearance-form.modePanels"
        data-mode-panel="auto"
        <% unless current_user.color_mode.auto? %>
          hidden
        <% end %>
      >
        <%= form_tag(
          settings_appearance_preferences_color_mode_path,
          method: :put,
          "aria-labelledby": "color-mode-heading",
          "data-action": "submit:appearance-form#saveTheme",
        ) do %>
          <%= hidden_field_tag(:color_mode, "auto") %>
          <div class="d-flex flex-column flex-md-row mb-3">
            <appearance-preview class="col-md-5 mr-0 mr-md-3 mb-3 mb-md-0" data-mode="light">
              <%= render Primer::Beta::BorderBox.new(
                "data-target": "appearance-preview.boxElement",
              ) do |component| %>
                <% component.with_header(display: :flex) do %>
                  <h4 class="h5 flex-auto">
                    <%= render Primer::Beta::Octicon.new(icon: "sun") %> Day theme
                  </h4>
                  <%= render Primer::Beta::Label.new(
                    title: "Active Mode",
                    scheme: :info,
                    "data-target": "appearance-preview.activeLabel",
                    hidden: true,
                  ) do %>
                    Active
                  <% end %>
                <% end %>
                <% component.with_body do %>
                  <div class="color-fg-muted mb-3 f6">
                    This theme will be active when your system is set to &ldquo;light mode&rdquo;
                  </div>
                  <% themes.each do |theme| %>
                    <div
                      data-theme="<%= theme.name %>"
                      data-targets="appearance-preview.themePreviews"
                      class="border mb-3 rounded-2"
                      <% unless current_user.light_theme == theme %>
                        hidden
                      <% end %>
                    >
                      <div class="border-bottom rounded-top-2 overflow-hidden">
                        <%= image_tag(
                          "modules/settings/color_modes/#{theme.name}_preview.svg",
                          alt: "",
                          class: "d-block width-full",
                        ) %>
                      </div>
                      <div class="py-2 px-3 text-bold">
                        <%= label_for_theme(theme) %>
                      </div>
                    </div>
                  <% end %>
                  <div class="d-flex flex-wrap mb-n2" role="radiogroup" aria-label="Day theme picker">
                    <% themes.each do |theme| %>
                      <input
                        class="hidden-radio-input"
                        id="option-light-<%= theme.name %>"
                        type="radio"
                        name="light_theme"
                        data-type="light"
                        data-mode="auto"
                        value="<%= theme.name %>"
                        data-theme="<%= theme.name %>"
                        aria-label="<%= label_for_theme(theme) %>"
                        <% if current_user.light_theme == theme %>
                          checked
                        <% end %>
                        data-action="focus:appearance-preview#themePreview
                          blur:appearance-preview#previewReset
                          click:appearance-form#themeClicked"
                        data-throttled-autosubmit
                      >
                      <label
                        class="radio-label-theme-discs circle radio-label m-0 mr-2 mb-2 d-flex
                          flex-items-center flex-justify-center overflow-hidden color-bg-subtle
                          flex-grow-0 flex-shrink-0"
                        style="width:40px;height:40px;border-width:2px;"
                        for="option-light-<%= theme.name %>"
                        title="<%= label_for_theme(theme) %>"
                        data-theme="<%= theme.name %>"
                        aria-hidden="true"
                        data-action="mouseenter:appearance-preview#themePreview
                          mouseleave:appearance-preview#previewReset"
                      ><%# erblint:disable GitHub::Accessibility::NoTitleAttribute %>
                        <span
                          class="border circle d-flex flex-items-center flex-justify-center mt-n1
                            mb-n1 mr-n1 ml-n1"
                        >
                          <%= image_tag(
                            "modules/settings/color_modes/#{ theme.name }_disc.svg",
                            alt: label_for_theme(theme),
                            width: "100%",
                            height: "100%",
                          ) %>
                        </span>
                      </label>
                    <% end %>
                  </div>
                <% end %>
              <% end %>
            </appearance-preview>
            <appearance-preview class="col-md-5" data-mode="dark">
              <%= render Primer::Beta::BorderBox.new(
                "data-target": "appearance-preview.boxElement",
              ) do |component| %>
                <% component.with_header(display: :flex) do %>
                  <h4 class="h5 flex-auto">
                    <%= render Primer::Beta::Octicon.new(icon: "moon") %> Night theme
                  </h4>
                  <%= render Primer::Beta::Label.new(
                    title: "Active Mode",
                    scheme: :info,
                    "data-target": "appearance-preview.activeLabel",
                    hidden: true,
                  ) do %>
                    Active
                  <% end %>
                <% end %>
                <% component.with_body do %>
                  <div class="color-fg-muted mb-3 f6">
                    This theme will be active when your system is set to &ldquo;dark mode&rdquo;
                  </div>
                  <% themes.each do |theme| %>
                    <div
                      data-theme="<%= theme.name %>"
                      data-targets="appearance-preview.themePreviews"
                      class="border mb-3 rounded-2"
                      <% unless current_user.dark_theme == theme %>
                        hidden
                      <% end %>
                    >
                      <div class="border-bottom rounded-top-2 overflow-hidden">
                        <%= image_tag(
                          "modules/settings/color_modes/#{theme.name}_preview.svg",
                          alt: "",
                          class: "d-block width-full",
                        ) %>
                      </div>
                      <div class="py-2 px-3 text-bold">
                        <%= label_for_theme(theme) %>
                      </div>
                    </div>
                  <% end %>
                  <div
                    class="d-flex flex-wrap mb-n2"
                    role="radiogroup"
                    aria-label="Night theme picker"
                  >
                    <% themes.each do |theme| %>
                      <input class="hidden-radio-input"
                        id="option-dark-<%= theme.name %>"
                        type="radio"
                        name="dark_theme"
                        data-type="dark"
                        data-mode="auto"
                        aria-label="<%= label_for_theme(theme) %>"
                        value="<%= theme.name %>"
                        data-theme="<%= theme.name %>"
                        <% if current_user.dark_theme == theme %>
                          checked
                        <% end %>
                        data-action="focus:appearance-preview#themePreview
                          blur:appearance-preview#previewReset
                          click:appearance-form#themeClicked"
                        data-throttled-autosubmit
                      >
                      <label
                        class="radio-label-theme-discs circle radio-label m-0 mr-2 mb-2 d-flex
                          flex-items-center flex-justify-center overflow-hidden color-bg-subtle
                          flex-grow-0 flex-shrink-0"
                        style="width:40px;height:40px;border-width:2px;"
                        for="option-dark-<%= theme.name %>"
                        title="<%= label_for_theme(theme) %>"
                        data-theme="<%= theme.name %>"
                        aria-hidden="true"
                        data-action="mouseenter:appearance-preview#themePreview
                          mouseleave:appearance-preview#previewReset"
                      ><%# erblint:disable GitHub::Accessibility::NoTitleAttribute %>
                        <span
                          class="border circle d-flex flex-items-center flex-justify-center mt-n1
                          mb-n1 mr-n1 ml-n1"
                        >
                          <%= image_tag(
                            "modules/settings/color_modes/#{ theme.name }_disc.svg",
                            alt: label_for_theme(theme),
                            width: "100%",
                            height: "100%",
                          ) %>
                        </span>
                      </label>
                    <% end %>
                  </div>
                <% end %>
              <% end %>
            </appearance-preview>
          </div>
        <% end %>
      </div>
    </appearance-form>
  </section>

  <section role="region" aria-labelledby="emoji-heading">
    <%= form_tag(
      settings_appearance_preferences_skin_tone_path,
      method: :put,
      "aria-labelledby": "emoji-heading",
      "data-autosubmit": true,
      class: "js-setting-toggle",
    ) do %>
      <%= render Primer::Beta::Subhead.new(spacious: true) do |component| %>
        <% component.with_heading(tag: :h2, id: "emoji-heading") do %>
          Emoji skin tone preference
        <% end %>
        <% component.with_actions do %>
          <span class="hx_status-indicator status-indicator js-status-indicator">
            <%= render Primer::Beta::Spinner.new(
              size: :small,
              classes: "status-indicator-spinner",
            ) %>
            <%= render Primer::Beta::Octicon.new(icon: "check") %>
            <%= render Primer::Beta::Octicon.new(icon: "x") %>
          </span>
        <% end %>
      <% end %>
      <div id="emoji-skin-tone-heading" class="text-bold mb-2">Preferred default emoji skin tone</div>
      <div role="radiogroup" aria-labelledby="emoji-skin-tone-heading">
        <label class="mr-2">
          <input
            type="radio"
            name="emoji_skin_tone_preference"
            value="0"
            data-throttled-autosubmit
            <% if current_user.profile_settings.preferred_emoji_skin_tone == 0 %>
              checked
            <% end %>
          >
          <%= emoji_tag Emoji.find_by_alias("wave") %><span class="sr-only">Neutral</span>
        </label>
        <label class="mr-2">
          <input
            type="radio"
            name="emoji_skin_tone_preference"
            value="1"
            data-throttled-autosubmit
            <% if current_user.profile_settings.preferred_emoji_skin_tone == 1 %>
              checked
            <% end %>
          >
          <%= emoji_tag(
            Emoji.find_by_alias("wave"),
            tone: 1,
          ) %><span class="sr-only">Light Skin Tone</span>
        </label>
        <label class="mr-2">
          <input
            type="radio"
            name="emoji_skin_tone_preference"
            value="2"
            data-throttled-autosubmit
            <% if current_user.profile_settings.preferred_emoji_skin_tone == 2 %>
              checked
            <% end %>
          >
          <%= emoji_tag(
            Emoji.find_by_alias("wave"),
            tone: 2,
          ) %><span class="sr-only">Medium-Light Skin Tone</span>
        </label>
        <label class="mr-2">
          <input
            type="radio"
            name="emoji_skin_tone_preference"
            value="3"
            data-throttled-autosubmit
            <% if current_user.profile_settings.preferred_emoji_skin_tone == 3 %>
              checked
            <% end %>
          >
          <%= emoji_tag(
            Emoji.find_by_alias("wave"),
            tone: 3,
          ) %><span class="sr-only">Medium Skin Tone</span>
        </label>
        <label class="mr-2">
          <input
            type="radio"
            name="emoji_skin_tone_preference"
            value="4"
            data-throttled-autosubmit
            <% if current_user.profile_settings.preferred_emoji_skin_tone == 4 %>
              checked
            <% end %>
          >
          <%= emoji_tag(
            Emoji.find_by_alias("wave"),
            tone: 4,
          ) %><span class="sr-only">Medium-Dark Skin Tone</span>
        </label>
        <label class="mr-2">
          <input
            type="radio"
            name="emoji_skin_tone_preference"
            value="5"
            data-throttled-autosubmit
            <% if current_user.profile_settings.preferred_emoji_skin_tone == 5 %>
              checked
            <% end %>
          >
          <%= emoji_tag(
            Emoji.find_by_alias("wave"),
            tone: 5,
          ) %><span class="sr-only">Dark Skin Tone</span>
        </label>
      </div>
      <noscript>
        <%= render Primer::ButtonComponent.new(
          type: :submit,
          mt: 3,
          display: :block,
        ) do %>
          Update preference
        <% end %>
      </noscript>
    <% end %>
  </section>

  <section role="region" aria-labelledby="tab-size-heading">
    <%= render Settings::TabSizeSelectComponent.new(user: current_user) %>
  </section>

  <section role="region" aria-labelledby="markdown-editor-font-heading">
    <%= render Settings::FixedWidthFontComponent.new(user: current_user) %>
  </section>
<% end %>
