# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Api::App::PlatformTypes::RepoConfigDisableAnonymousGitAccessAuditEntry`.
# Please instead update this file by running `bin/tapioca dsl Api::App::PlatformTypes::RepoConfigDisableAnonymousGitAccessAuditEntry`.

class Api::App::PlatformTypes::RepoConfigDisableAnonymousGitAccessAuditEntry < GraphQL::Client::Schema::ObjectClass
  sig { returns(T.nilable(String)) }
  def __typename; end

  sig { returns(String) }
  def action; end

  sig { returns(T::Boolean) }
  def action?; end

  sig do
    returns(T.nilable(T.any(Api::App::PlatformTypes::Bot, Api::App::PlatformTypes::Organization, Api::App::PlatformTypes::User)))
  end
  def actor; end

  sig { returns(T::Boolean) }
  def actor?; end

  sig { returns(T.nilable(Integer)) }
  def actor_database_id; end

  sig { returns(T::Boolean) }
  def actor_database_id?; end

  sig { returns(T.nilable(String)) }
  def actor_ip; end

  sig { returns(T::Boolean) }
  def actor_ip?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::ActorLocation)) }
  def actor_location; end

  sig { returns(T::Boolean) }
  def actor_location?; end

  sig { returns(T.nilable(String)) }
  def actor_login; end

  sig { returns(T::Boolean) }
  def actor_login?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def actor_resource_path; end

  sig { returns(T::Boolean) }
  def actor_resource_path?; end

  sig { returns(T.nilable(Integer)) }
  def actor_session_database_id; end

  sig { returns(T::Boolean) }
  def actor_session_database_id?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def actor_url; end

  sig { returns(T::Boolean) }
  def actor_url?; end

  sig { returns(T::Boolean) }
  def can_render_user_avatar; end

  sig { returns(T::Boolean) }
  def can_render_user_avatar?; end

  sig { returns(T.nilable(String)) }
  def client_id; end

  sig { returns(T::Boolean) }
  def client_id?; end

  sig { returns(GraphQL::Client::Schema::ScalarType) }
  def created_at; end

  sig { returns(T::Boolean) }
  def created_at?; end

  sig { returns(T.nilable(String)) }
  def external_identity_guid; end

  sig { returns(T::Boolean) }
  def external_identity_guid?; end

  sig { returns(T.nilable(String)) }
  def external_identity_nameid; end

  sig { returns(T::Boolean) }
  def external_identity_nameid?; end

  sig { returns(T.nilable(String)) }
  def external_identity_username; end

  sig { returns(T::Boolean) }
  def external_identity_username?; end

  sig { returns(T.nilable(String)) }
  def from; end

  sig { returns(T::Boolean) }
  def from?; end

  sig { returns(T.any(String, Integer)) }
  def id; end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(T.nilable(String)) }
  def method; end

  sig { returns(T::Boolean) }
  def method?; end

  sig { returns(T.nilable(Integer)) }
  def oauth_access_database_id; end

  sig { returns(T::Boolean) }
  def oauth_access_database_id?; end

  sig { returns(T.nilable(Integer)) }
  def oauth_application_database_id; end

  sig { returns(T::Boolean) }
  def oauth_application_database_id?; end

  sig { returns(T.nilable(String)) }
  def oauth_scopes; end

  sig { returns(T::Boolean) }
  def oauth_scopes?; end

  sig { returns(T.nilable(String)) }
  def operation_type; end

  sig { returns(T::Boolean) }
  def operation_type?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::Organization)) }
  def organization; end

  sig { returns(T::Boolean) }
  def organization?; end

  sig { returns(T.nilable(Integer)) }
  def organization_database_id; end

  sig { returns(T::Boolean) }
  def organization_database_id?; end

  sig { returns(T.nilable(String)) }
  def organization_name; end

  sig { returns(T::Boolean) }
  def organization_name?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def organization_resource_path; end

  sig { returns(T::Boolean) }
  def organization_resource_path?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def organization_url; end

  sig { returns(T::Boolean) }
  def organization_url?; end

  sig { returns(T.nilable(String)) }
  def referrer; end

  sig { returns(T::Boolean) }
  def referrer?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::Repository)) }
  def repository; end

  sig { returns(T::Boolean) }
  def repository?; end

  sig { returns(T.nilable(Integer)) }
  def repository_database_id; end

  sig { returns(T::Boolean) }
  def repository_database_id?; end

  sig { returns(T.nilable(String)) }
  def repository_name; end

  sig { returns(T::Boolean) }
  def repository_name?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def repository_resource_path; end

  sig { returns(T::Boolean) }
  def repository_resource_path?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def repository_url; end

  sig { returns(T::Boolean) }
  def repository_url?; end

  sig { returns(T.nilable(String)) }
  def request_category; end

  sig { returns(T::Boolean) }
  def request_category?; end

  sig { returns(T.nilable(String)) }
  def request_id; end

  sig { returns(T::Boolean) }
  def request_id?; end

  sig { returns(T.nilable(T::Array[String])) }
  def scopes; end

  sig { returns(T::Boolean) }
  def scopes?; end

  sig { returns(T.nilable(String)) }
  def server_id; end

  sig { returns(T::Boolean) }
  def server_id?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::User)) }
  def staff_actor; end

  sig { returns(T::Boolean) }
  def staff_actor?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def url; end

  sig { returns(T::Boolean) }
  def url?; end

  sig { returns(T.nilable(Api::App::PlatformTypes::User)) }
  def user; end

  sig { returns(T::Boolean) }
  def user?; end

  sig { returns(T.nilable(String)) }
  def user_agent; end

  sig { returns(T::Boolean) }
  def user_agent?; end

  sig { returns(T.nilable(Integer)) }
  def user_database_id; end

  sig { returns(T::Boolean) }
  def user_database_id?; end

  sig { returns(T.nilable(String)) }
  def user_login; end

  sig { returns(T::Boolean) }
  def user_login?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def user_resource_path; end

  sig { returns(T::Boolean) }
  def user_resource_path?; end

  sig { returns(T.nilable(GraphQL::Client::Schema::ScalarType)) }
  def user_url; end

  sig { returns(T::Boolean) }
  def user_url?; end
end
