# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Hydro::Schemas::Github::Notifications::V0::UnwatchSuggestionEvent`.
# Please instead update this file by running `bin/tapioca dsl Hydro::Schemas::Github::Notifications::V0::UnwatchSuggestionEvent`.

class Hydro::Schemas::Github::Notifications::V0::UnwatchSuggestionEvent
  sig do
    params(
      algorithm_version: T.nilable(String),
      event: T.nilable(T.any(Symbol, Integer)),
      repository: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository),
      snapshot_date: T.nilable(String),
      user: T.nilable(Hydro::Schemas::Github::V1::Entities::User)
    ).void
  end
  def initialize(algorithm_version: nil, event: nil, repository: nil, snapshot_date: nil, user: nil); end

  sig { returns(String) }
  def algorithm_version; end

  sig { params(value: String).void }
  def algorithm_version=(value); end

  sig { void }
  def clear_algorithm_version; end

  sig { void }
  def clear_event; end

  sig { void }
  def clear_repository; end

  sig { void }
  def clear_snapshot_date; end

  sig { void }
  def clear_user; end

  sig { returns(T.any(Symbol, Integer)) }
  def event; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def event=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)) }
  def repository; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::Repository)).void }
  def repository=(value); end

  sig { returns(String) }
  def snapshot_date; end

  sig { params(value: String).void }
  def snapshot_date=(value); end

  sig { returns(T.nilable(Hydro::Schemas::Github::V1::Entities::User)) }
  def user; end

  sig { params(value: T.nilable(Hydro::Schemas::Github::V1::Entities::User)).void }
  def user=(value); end
end
