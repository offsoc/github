<% page_info title: "Security · Code Scanning · #{this_business}" %>

<%= render(ConditionalAccess::UnauthorizedAccountsComponent.new(
  cap_filter: cap_filter,
  classes: "Box mb-3",
  accounts: unauthorized_orgs,
  resource_label: "alerts"
)) %>

<%= render(SecurityCenter::SubheadComponent.new(
  actor: current_user,
  scope: this_business,
  heading: "Code scanning alerts",
)) do |c|
  c.with_phase_label
  c.with_feedback_link
end %>

<% if authorized_orgs.any? %>
  <%= render Primer::Box.new(mb: 3, display: :flex, justify_content: :space_between, style: "gap: 1em;") do %>
    <%= render Primer::Box.new(flex: 1) do %>
      <%= render CodeScanning::SearchBarComponent.new(
        user: current_user,
        business: business,
        query: query,
      ) %>
    <% end %>

    <% if menu_data_list.present? %>
      <%= render Primer::Box.new(display: :flex, align_items: :center, style: "height: 32px;") do %>
        <% menu_data_list.each do |menu_data| %>
          <%= render SecurityCenter::Coverage::SelectMenuComponent.new(menu_data) %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>

  <%= render CodeScanning::TableComponent.new(
    business: business,
    open_count: open_count,
    closed_count: closed_count,
    query: query,
    user: current_user,
    alerts_code_scanning_index_path_method: alerts_code_scanning_index_path_method,
    fixed_result_numbers: [],
    alert_results: alert_results,
    alert_number_plus_repository_id_to_issues:,
  ) %>
<% end %>

<% if blankslate_text %>
  <% icon = error_occurred ? "alert" : nil %>
  <% box_options = authorized_orgs.any? ? { border_top: 0, classes: "rounded-top-0" } : {} %>
  <%= render(Primer::Beta::BorderBox.new(**box_options)) do |border_box_component| %>
    <% border_box_component.with_body do %>
      <%= render(
        Primer::Beta::Blankslate.new(
          spacious: true,
          test_selector: "security-center-alert-centric-views-code-scanning-blankslate",
        )
      ) do |c| %>
        <% if icon.present?
            c.with_visual_icon(icon: icon) # Icon takes precedence over the image
          else
            c.with_visual_image(src: "modules/site/icons/security.svg", alt: "Security icon")
          end %>
        <% c.with_heading(tag: :h3) do %>
          <%= blankslate_text %>
        <% end %>
        <% c.with_description do %>
          <% if authorized_orgs.empty? %>
            <%= render(Primer::Beta::Text.new(tag: :p).with_content("Repositories are shown only for organizations where you are an owner or security manager.")) %>
          <% elsif error_occurred %>
            <% if GitHub.enterprise? %>
              <p>If the problem persists <%= contact_support_snippet(true) %>.</p>
            <% else %>
              <%= render(Primer::Beta::Text.new(tag: :p)) do %>
                We track these errors automatically, but if the problem persists feel free to
                <%= render(Primer::Beta::Link.new(href: contact_path, classes: "Link--inTextBlock")) { "contact us" } %>.
              <% end %>
            <% end %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% end %>

<% if alert_results.total_pages > 1 %>
  <div class="paginate-container" <%= test_selector("paginate-container") %>>
    <%= will_paginate alert_results %>
  </div>
<% end %>
